rolb or add add dec add add add add add add add sbb add and add add add jns jns jns dec (bad) je inc and dec cmpsb sbb shrl adc and mov add adc add mov add xchg add inc push add cld add subl add sti add cmp add sti int3 add or add push sub add sbb add lods pushf add mov mov add and add mov add push add adc add add push aas add xor add in add jae add test add js add call out add inc mov add push add (bad) pop add xor add sti push add outsb test add scas pop add or jne add add add add pop lahf add das push add mov add push jp add pop add in add fildl add in add rol add mov add push fldl add sbb add add pop mov add add (bad) popa add pop test add add in add enter mov add and add inc data16 js add jecxz add int3 cmpsb add jns add cli jge add push add inc repnz lahf mov add add add (bad) jbe add add jge add mov add add cmp add lret add (bad) add jle add ficomp add pop add int3 insb add scas std add mov add pop cmp add inc add cmpsl sub add mov add add mov add (bad) add pop out add add imulb add push add add mov add mov add test add adc add add stos aaa add je add in jp add add mov sbb add add daa mov add sub pop add xchg cmp add add ljmp add dec add cmpsb add add add out dec add roll add pop add fcomps add add mov add add shlb add scas add in add pop add push add cs add cmovnp add inc add xchg mov add mov sub add call add lock add stc push add outsl adc add cmp add fwait add lahf mov add jp add add add add dec dec add pop add shrb add arpl add pop rolb add in add pop insb add ljmp add testl add mov add sub add add push arpl add cltd add outsb lcall fwait adc add add notl add fdivp add xchg add add ja add mov and add les add fst add sahf and add insb lods add mov inc add iret ret add (bad) mov add lea add add sti test add inc movsl add push dec add sbbl daa add xor mov add add mov add xor add fcoms add repz add jno add mov add cmp add xchg fwait add and add inc into add inc xchg add cwtl jl add add popf (bad) add outsl sbb add lods add int3 in add loop add adc add dec add leave xchg add dec (bad) add and sbb incb add add xlat pop add data16 add sub add add add add lret add add js add add lock add add cmp add add movsl loopne add add test add mov jge add add scas stos add out add dec loopne add mov add add pushf scas add push imul add fwait add jnp add sub add movsb inc add icebp arpl add add sub add pop addl fidivr add int3 js add fild add add jle add push incl add stos add jmp add imul add add and add xchg js add out add fisubl add xchg push add mov add out add dec sldt add add loopne add insb add outsl inc add outsl mov add add dec arpl add repz pop adc add add jo,pt add fiaddl add aas add add add loope add les add adc add mov add mov add ljmp add and add add push test add pop adc add dec add push scas add scas imul add popf add adc add int3 add or add mov add das sbb add int add add negb add (bad) cmp add add int add popa and add addl add pushf add ret add adc add inc add notl add mov add std incl add add out add add add add sbb add jne add into and add jae add or add mov in add mov mov add lods add addb jp add int3 roll add add xchg mov add mov add std rolb lret or add fstpl add add push loop add mov add rorb add add push add ja add (bad) add add pop loopne (bad) test popf xchg mov mov in sahf mov sar movsb fmulp lret cwtl push scas push in cs inc add repnz xchg add clc mov out cmpsl adc push and jmp jae loope jno push ja addr16 stc push adc scas or inc inc (bad) dec jno hlt loop pop pop adc into pop mov pop push lods mov lret mov roll cltd mov xor lret das add xchg movsl int cmp xchg rorl rcrb cmpsl cmp cs adc jb insl xchg or mov push (bad) and jl stos sbb rorb js and (bad) sbb (bad) lock jg xchg lcall inc enter push inc xchg scas test es dec mov ds (bad) sarl xor add mov mov sahf mov pop gs ljmp popf les (bad) jno sub cmp xchg mov movsb inc cmpsb jle mov sub push xchg adc loope call sarl (bad) mov pusha js (bad) mov repnz push push pop pop ret sbb mov dec push mov stc loop (bad) es adc inc inc xorl inc pop pop pop add cmc fs ds dec xor iret sbb dec in psubusb jne and loope insl fnstcw imul out pop xchg mov (bad) imul sbb rcll (bad) (bad) jo pop out mov rcll cmpsl cmp subb mov outsb mov aaa jp and mov lds sbb ljmp nop icebp fisubl fstl cld add jge hlt addl lcall addl add (bad) out mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov outsb rcll fimul in push mov imul pop fild shlb lods (bad) nop stc movl push out iret ja in xchg mov pop ret add sub mov cmpsb outsb rcll orl sbb rcll fs add (bad) out mov adc movsb addl add xchg dec mov cmpsb dec rcll addl inc sbb iret mov cmpsb insb rcll addl add leave out mov cmpsb outsb rcll addl add int mov movsb outsb adcl int mov adc lods adcl add int mov cmpsb outsb rcll orl sbb das mov xor adc lods addl add int mov cmpsb outsb rcll orl add mov outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add mov outsb rcll addl add int mov out outsb rcll addl add jecxz aad shrb adc sub popf add int mov cmpsb insb rcll addl add int mov xchg je ficom icebp fs mov cmpsb scas rcll addl add int mov cmpsb outsb rcll addl pop jecxz aad leave or addl add int mov cmpsb inc adc lods addl add int mov out rcll addl add int mov cmpsb outsb rcll addl mov cmpb adc lods orl mov jbe rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add (bad) mov in rcll fs jns add leave aad lcall adc add mov push aaa mov add int mov push ss popa addl push push lods test adc xchg add int3 jmp lcall addl mov mov lods sbbl sbb out into fwait cmpsb outsb lds mov lods add mov outsl rcll cmc pushf inc loop aas int mov cmpsl outsb rcll cmp std inc rorl rcll jae xchg fisttpll sbb mov lcall addl add pop xor or cmpsb (bad) std push mov call je stos sbb aad and lods addl sbb (bad) mov adc mov add out mov mov adc cmpsb sbb lret xorb xor sbb in cwtl xchg cmpsb outsb lret ds fwait jl ret int mov cmpsb outsb rcll jno int mov adc fildll pop mov pop int mov scas outsb rcrl scas addl add (bad) fbstp adc lods fs jns add leave in mov outsb rcrl int subl in popf cmpsb outsb rcll mov add lcall test mov mov adc lods fs add in pushf aam rcll or lret xchg cmpsb outsb rcll xchg cmpsl insl pop int mov adc lods fs or sbb out mov test ret imul loope lcall mov repz push int mov stos mov adc lods bound out mov adc mov adc int xchg mov outsb rcrl jno addl and int mov mov leave xor sbb mov mov pushf sbbw add enter movsl inc les stos outsb pop pop mov (bad) lock inc leave adc stos outsb pop pop mov mov cmpsl jle adc lods orl add (bad) out mov mov in adc scas addl add into in xchg mov stc pop xor sbb leave mov push add in adc mov or xchg leave (bad) pop mov mov sbb lods gs add fisttp test xchg add (bad) icebp cmp pop ss jne adc mov cmp lods pusha cmpsb cmp leave into mov ss addl sbb int xchg sbb lods subl sbb out cwtl sahf cmpsb outsb lret cmp lods test adc cmpsb outsb lret push lods xchg xchg mov cmpsb push jmp push sbb daa mov mov mov lods sbb mov pop scas or lods outsb mov mov mov mov lods sbb into out mov leave jb adc shlb pop mov mov mov (bad) or leave subb and or (bad) cmc xchg push mov scas or lret lcall gs or out mov daa xor or andb aaa mov adc fildl rcrb dec test or fsub fistpll cmp adc fsub call adc cmpsb push cmp lods or into subb cmp or fsubr mov wrmsr lods outsb ljmp mov mov mov xchg or fistpll xor mov mov lods adc adc test mov loop lods int mov mov out addl push sbb jmp lcall cmpl sbb (bad) sbbl push xchg adc xchg jge pop mov mov test stos addl push sbb jmp xchg lods xchg jmp sbb xchg mov cmpsb push jle mov orl mov mov loope xor xchg shr fwait mov rcrb and sbb in mov lods cmpl sbb (bad) mov aaa xor sbb lret stos addl insl aas int mov adc cmpsb addr16 es cmp pop and adc cmpsb fs and add shr cwtl xchg cmpsb outsb lret and sbb out mov mov adc cmpsb jb aas jmp mov mov rcll mov mov mov cmpsb pop addl out mov outsb lret cmp lods test or int mov sbb xor out mov mov cmpsb pop addl call (bad) lcall add int3 jmp lcall outsb test sahf out mov scas outsb roll xchg sub int mov adc mov adc mov lods int3 lret lods fs das xchg add mov (bad) cmp lods mov mov pop int mov lea push dec stos insb stos sub mov movsb out (bad) adc test addl add mov dec pushf (bad) adc orl xchg (bad) leave inc rcll or (bad) mov adc lods fs adc mov mov rcll and add leave jmp xchg cmpsb outsb roll mov lock cmp sbb xorb push pusha xchg add mov outsb rcrl addl push xor out mov mov cmpsb ja push mov mov adc test ja mov mov mov lods outsb xchg add cwtl lods cmpsb outsb (bad) cmp lods mov mov sbb cld mov lods outsb rcll pop addl ret jmp jmp std or sbb adc stos jne das test sbb movl movsl push stos inc inc int mov mov cmpsb pop popl mov sti lcall bound int cwtl jmp outsb movl mov fbld cmp mov mov adc adc mov add hlt out lcall out addl add xchg in cwtl cltd movsb aas jmp xchg mov mov xchg outsb rcll fs adc mov lods push outsb movsl jns add leave iret inc fwait cmpsb outsb scas aam lods bound mov mov cmpsb outsb (bad) jnp lods fs xchg add int3 pushl adc mov mov mov lds adc lods fs adc cwtl movsb cmpsb outsb lret sbb jmp add int cmpsl lcall dec addl sub lret lcall dec pushf stc xchg cmp int mov adc stos addl insl es mov adc mov adc mov xlat cmp lods mov xchg stos sbb jmp lcall orl add fnop mov popf outsb rcrl stos addr16 inc mov mov sub add aas sbb in popf mov adc mov or sar xchg cmpsb outsb rcll dec mov mov test adc lods fs je add (bad) in xchg mov stc mov lods test push daa sbb out mov adc cmpsb insl in inc mov mov lods sbb ja push lods pop xor sub adc mov add call data16 xor sub pop fsubr fnop cmpsb outsb lret cmp lods mov mov xchg shr fwait mov rclb pop out orl cld lcall orl repz rcll (bad) in dec mov (bad) cmpsb outsb lret adc stos jb add imul mov scas jns sbb stos ljmp jmp lret adc orl mov mov int shrd add sar ret nop cmpsb outsb lret push xor xor jbe out mov leave cmp xor lret and cmpsb fs xor sbb dec in and xor int3 jmp lcall or pop mov mov xorl imul int mov adc lods orl add mov add add mov lods adc push xor adc add stos adc jmp mov rcll mov stos add cli mov mov mov pusha sbb in test stos dec xchg pop mov cwtl mov lods mov xchg cmp int cwtl (bad) cmpsb outsb (bad) or (bad) dec xchg pop mov mov mov cmpsb ja push mov mov mov rclb or addl pop mov mov dec xor lods gs add mov cmpsb jg add adc mov mov lods dec out mov mov rorb adc or pop mov mov adc mov mov shrb cmp add inc jecxz lcall pusha stos outsl mov mov mov lods adcl push sbb out mov adc ret or jae out mov adc lods ja fidivrl mov adc lods dec cmp add imul mov mov lods outsb test mov outsb rcll orl cwtl mov outsb lret add shlb imul cmpsb outsb sarb mov xchg outsb sbb in icebp cmpsb outsb lret les fs das xchg add (bad) negl addr16 lods fs addb int3 (bad) cltd lcall mov sbb aas mov cmpsb jne cmp das roll sbb pushf fistpl xor adc (bad) fcompl xor sbb (bad) mov lods jb js lods outsb lock mov mov cmpsl inc call stos imul lcall dec stos pop mov mov lods sbb mov pop mov mov mov lods outsb lock mov mov cmpsl inc call mov roll sbb pushf fistpl xor adc in mulb lods fs test cltd lcall orl pusha fisub lods mov mov jne out mov push loopne addl sub int scas xchg mov rcll jae int mov (bad) outsb rcrl mov or out mov jbe rcll dec addl sbb lcall adcl lcall addl negb int fistp outsb (bad) pop inc shll fs in hlt cmpsb outsb lret push inc ret orl mov stos js sub lods addl jb int mov add pop mov mov cmpsb outsb shrl lods rolb mov mov cmpsb outsb roll mov mov cmpsb outsb sar lods addb add cmpsl outsb rcll aad mov mov mov lods outsb (bad) mov mov lods push nop adc push arpl xor sbb jmp (bad) sub lods addl insl push out mov adc or out mov leave sbb adc ret adc int mov adc stos or pop mov mov leave sbb adc xchg mov mov loop adc lods or pop mov mov mov lods outsb wrmsr mov mov lods push add lods arpl (bad) arpl lcall outsb mov lret loopne outsb lret cwtl jno fs push xlat and adc orl fucomip cmpsb outsb lret sub lods addl insl gs mov adc or out mov leave sbb adc ret push addl cmp out mov mov cmpsb call jbe out mov sahf sub adc stos (bad) in jns add inc stos mov cmpsl add scas pop mov iret lcall gs jne add cmc stc mov cmpsb imul mov cmp negl xor adc clc jmp jmp ret in pop mov adc out mov push outsl rcll addl insl fwait int mov adc scas subb sbb xorb cmpsb fs data16 adc out mov add stos jp pop mov mov and push dec movsb addl sub mov adc mov sub int mov adc lods adcl add sbb inc call mov dec out mov lods push fs add mov test cmpsb insb jmp test xchg add (bad) fwait test cmpsb insb inc sbb push mov mov lods gs cltd and cs mov (bad) outsb rcrl mov add in mov mov movsb dec test (bad) aad lcall outsb stc add out mov cmpsb addl add int3 jmp lcall outsb test stos out mov mov roll (bad) ja int mov adc cmpsl pop add lret lcall addl add nop mov lods outsb popl mov or xlat stos lcall ja btc sbb popa fld xor cmpsb inc xchg add mov sub repz or sbb jmp lcall outsb test iret out mov mov adc mov stos add out mov test cmp lods test lock lods andl mov mov adc mov addl sub int mov mov adc lods dec addl iret pop lcall bound int cwtl cwtl cmpsb outsb (bad) ds mov mov mov mov adc pop mov rcrb lods bound int cwtl cwtl cmpsb outsb (bad) ds mov (bad) pop mov mov mov adc pop mov mov push xor sbb out cwtl cwtl cmpsb outsb (bad) ds mov pop mov mov mov push xor xor iret rcrb xor sbb out cwtl cwtl cmpsb outsb (bad) ds mov addl out mov mov pop xor xor iret sbbb lods bound int cwtl cwtl cmpsb outsb (bad) ds mov addb sub int mov mov pop xor xor iret pusha cltd cmpsb outsb jmp test int cwtl cwtl cmpsb outsb (bad) ds mov xchg mov mov mov adc lods dec addl iret push sahf cmpsb outsb jmp test int cwtl cwtl cmpsb outsb (bad) ds mov sbb out mov mov adc lods dec addl iret cmpsb lahf cmpsb outsb jmp test int cwtl cwtl cmpsb outsb (bad) ds mov xchg mov mov mov adc lods dec addl iret into lahf cmpsb outsb jmp test int cwtl cwtl cmpsb outsb (bad) ds mov sbb out mov mov adc lods dec addl iret xchg pushf cmpsb outsb jmp test int cwtl cwtl cmpsb outsb (bad) ds mov test mov mov mov adc lods dec addl iret push pushf cmpsb outsb jmp test int cwtl cwtl cmpsb outsb (bad) ds mov sbb out mov mov adc lods dec addl iret stos popf cmpsb outsb jmp test int cwtl cwtl cmpsb outsb (bad) ds mov test mov mov mov adc lods dec addl iret sbb xor push int cwtl cwtl cmpsb outsb (bad) ds mov sbb out mov mov adc lods dec addl iret mov cmpsb outsb jmp test int cwtl cwtl cmpsb outsb (bad) ds mov pop mov mov mov sbb lods dec addl iret notb xor adc out cwtl cwtl cmpsb outsb (bad) ds mov mov mov mov mov sbb lods dec addl iret sub xor adc out cwtl cwtl cmpsb outsb (bad) ds dec mov mov mov adc lods addl es mov sub adc test addl insl xchg int mov adc cmp xchg xor adc mov cmpsl cmp push sbb mov int mov les push pop es in mov rcll call xor in adc fsubs pop cmpsb sub int3 jmp lcall outsb test int cwtl mov outsb lret cmp lods mov add (bad) pushf cmp lcall add shl cwtl cwtl cmpsb outsb (bad) cmp lods mov fbstp adc lods fs je add (bad) in xchg sahf jns adc stos data16 out mov mov pop jnp lods mov movsl pop adc in ds (bad) (bad) xor nop sbb in mov outsb rcrl fisub xchg add dec in cwtl push cmpsb outsb lret jnp lods mov inc or int mov cmpsb push outsb in xchg mov mov mov lods bound mov mov aad rcll dec addl daa push mov insb scas and lods outsb test int mov fdivrl adc test sbb pushf sub pop andl fwait sbb in lcall dec mov mov les stos lods mov add leave iret js cmpsb outsb scas aam lods bound out mov lock adc test out lods add lret ret inc mov xchg ret add xchg cmpsb outsb lds lods test into add lret lds adc lods adcl add fxam mov mov rcll mov mov mov mov call lcall dec addl add (bad) mov jge rcll cltd sbb in jmp lods mov out mov adc stos bound (bad) xchg movsl lcall fs jo add into movl addl mov adc test addl add in mov mov lods test mov sbb aad lcall pusha stos cmpb lcall stos xor mov lods dec stc push xor sbb mov stos dec loopne mov mov lods inc pop adc cmpsb inc mov mov mov mov stos dec out mov mov movsl inc hlt adc cmpsb dec sbb mov ds adcl lcall dec and mov mov lods insb jmp cmpsb add cmpsb lcall mov xchg add int3 jmp lcall jle adc mov jmp sbb pop int mov adc stos inc test xchg out mov mov roll cmpsb daa xorps lret add mov mov mov lods fs sbb add lods dec ds rorl and mov cwtl in outsb (bad) leave lods andl add int into nop cmpsb outsb lds scas subl sbb les cmpsl jle adc lods jl sub add imul mov mov lods sbbl add iret fwait mov cmpsb jne add mov les sub adc int mov mov rcll bound int mov fsubs xor nop (bad) pop mov mov jge rcll addl and rol pushf popf outsb rcll mov mov fmul rcll jl push lret cmpsb outsb (bad) xor orl mov lods push test movsl sbb in xchg cmpsb outsb rcll test in scas mov mov cmpsb dec sbb xor sbb out xchg lcall fs sbb or ds mov mov test addl sub outsb rcll cltd orl mov adc mov stos add movl repz add mov int sbb orl mov cmpl and add in out mov cmpsb jp add pop mov sbb bound add push ja setne int nop lcall jne push leave cmpsl pop mov mov add ret out mov mov movsl jnp lods mov (bad) push lcall dec jmp mov mov mov les pop mov adc mov adc add mov adc mov add jmp mov push push jo addl add iret out fcomps xor sbb mov cmpsb outsb rcll bound (bad) out mov xchg adc fucomip addl or out mov movsb adc xor add lret leave mov iret outsb rcrl lods addl add (bad) in cwtl sbb outsb (bad) cmp lods test in lcall test mov xchg xorb push push sbbl sbb out mov fsubs adc test mov mov adc shrb pop mov mov data16 rcll mov sub int mov mov rcll je or test jl lods outsb stos mov stos lcall test int sbb jecxz mov outsb rcll es mov push and or enter cmpsb outsb lds and add in mov mov aas addl mov int les xor mov mov add adc sub addl or pop out mov leave in adc fdivs pop mov mov mov rcll out addl cmpsl and mov lods (bad) in lea mov cmpsl jge add movsb jb push ret add int mov adc mov adc hlt mov lcall (bad) in lea mov cmpsl jge sbb hlt addl mov int adc pop cmp jbe out mov sarb adc mov add lret cmpb cmpsb fs xor dec int mov sub rcrl nop addl push adc mov dec adc cmpsb sarl out leave cmpsb outsb (bad) jnp lods mov out enter jnp lods mov cld mov adc ret out addl cmpsl cs mov mov rcll test pop mov mov adc dec mov mov lods lret std adc lods ja setne int fist cmpsb outsb lret pusha xor fs adc or xchg mov leave in adc or pop mov mov adc mov add lret cmpb cmpsb fs lods gs or mov mov test stos dec mov mov lods sbb adc lods ja setne int fist cmpsb outsb lret mov lods fs ds add int add sbb addl aaa sbb in lods cmpsb outsb lret pop es add test int xor add (bad) xchg mov cld xor pop mov mov mov lods test stos sub mov lods sbb cmp mov leave scas rcll ja push test sbb out into mov lods test mov sbb out mov stos outsb rcll popf orl mov mov fdivrs lods mov adc hlt repz cmpsb jg sub push scas cmp int mov lods jg add mov add jmp mov adc xchg je pop mov mov mov test addl adc hlt pushl adc stos pop test mov mov mov lods (bad) in lea mov cmpsl push add lods jae adc mov mov test xchg pop mov mov mov rcll test mov mov mov mov test imul lcall jne push scas adc cmpsb outsb (bad) push lods xchg enter xlat in lcall pusha cld adc add mov lods jae adc mov mov stos pop mov mov mov cmpsb adc adc test xchg pop mov mov cld add adc stos sbb fsin mov cmp lods test xchg mov int cwtl in cmpsb outsb (bad) sub lods adcl adc int mov adc cmpsb addl adc jb outsb rorl addl push sbb jmp mov test add fucomip mov lahf (bad) rcll jae pop mov mov fdivrs adc test addl adc hlt jecxz lcall test test sbb (bad) mov mov lods test mov sbb (bad) xor or adc mov mov mov rcrb or (bad) sbb out mov mov (bad) mov mov push mov mov fisttp pop mov aaa int mov adc cmpsb jne mov sbb (bad) mov adc and pop mov adc adc scas sbb cmpsb push outsb lock cwtl stos cmpsb outsb lret push lods xchg lods sub out mov lods outsb rcll pop addl ret jmp lds mov insl lcall xchg mov sbb xchg mov jnp lods test repz cmpsb outsb rcll sbbl add lock or sbb mov mov cmpsb xchg mov add xchg or mov adc push cmp add (bad) mov and lods mov mov mov mov lods outsb in adc mov lods arpl sbb mov orl mov push es ljmp (bad) mov imulb push in mov push and out mov mov scas sub lods outsb pop push shlb int mov adc xchg bound lock mov jp clc adc lods mov add (bad) xor adc lods cmp int mov movsb outsb (bad) adc cmp mov mov movsl lcall sbbl lcall orl mov adc cmpsb outsl test stos add movsb adcb xor sbb call lret enter addl add iret out mov sbb lods sbbl lcall fadds int mov adc cmpsb inc in mov das mov lods mov adc lods inc pop pop mov mov cmpsl jle adc lods andl mov mov lods sbbl add iret pushf jno cmpsb fs adc orl mov lahf push or lret lcall arpl int mov in fadds das mov or mov adc scas dec inc pop mov mov fldcw adc lods fs add out mov (bad) outsb rcll mov stos xor add lret movl addl sub out mov mov rcll dec mov mov lock lods test xchg insl sbb jmp rcrl scas jle adc mov lcall bound mov rcll dec stos push mov lcall dec addl add xlat (bad) hlt lcall and xlat (bad) negb sub sbb in cwtl xchg cmpsb outsb lret and sbb out mov mov (bad) xchg pop mov mov fsubrs adc sub addl jno int mov adc in addl or fsubs lods xchg incb sbb outsl mov adc test adcl lcall data16 mov add out mov scas add adc cmpsb imul scas bswap sbb hlt push sbb in inc mov test sbbl lcall orl fist outsb lret push or insl ror out mov adc pop mov mov xchg mov in push jbe out mov stos mov adc lods (bad) in lret mov insl mov lea mov and out mov scas add adc cmpsb mov adc out lcall je cmp add mov lods andl lcall or mov mov cmpsb push outsb divl mov fist outsb lret cmp lods test add aad scas mov jnp lods mov pusha and cmc push rcrl addr16 pop mov arpl sub push sarb sbb in in outsb rcrl movsb dec addl add iret out mov add lods adcl lcall dec sbb mov mov lods push outsb mov fucomip dec (bad) scas outsb rorl xchg bsr add (bad) mov lods inc unpcklps cmpsb mov pop mov mov mov insb addl sub int3 jmp lcall outsb test shr mov subl adc bound int movsl sbb cmp mov mov add lods adcl outsl adc xor adc ds lods inc adc cmpsb sbb pop mov mov mov rcll jle pop mov mov lods adc xor add mov mov lods jp adc pop mov mov cmp in mov mov lods jmp or (bad) mov xchg xor dec push pop mov mov cmpsb dec das push xor addr16 mov scas adc jne push leave mov fisubr add lret xchg xchg lcall xchg mov mov mov fidivr jmp jne lcall insb clc inc mov scas ret rcll call add cmp (bad) xor pop jmp mov test adc mov mov pop int mov jae rcrl ret test repz pop adc cmpsb push orb push inc in mov lods jge pop cmp add (bad) cld mov cli xor pop mov mov mov lods pusha xchg add lcall bound leave out fsubl mov add shrb movl pop mov mov mov rclb adc sbb jmp rcll addl cmp out mov lods push adcl jae push popf in sbb out cwtl add lods xchg movb cmpsb mov lods jnp push cld mov adc xlat and lret lcall bound int mov jo rcrl mov or mov xchg adc xlat and int mov sbb ret mov adc pop mov cmpsb rcrb xor add (bad) cld mov mov jmp jne lcall cmp cmpsl mov mov lods jno dec sbb orl scas mov inc popa adc cmpsb ja push mov daa stos out mov xchg incb inc jecxz lcall jne adc lcall pusha mov sbb (bad) gs cmp push lods adc cmpsb outsb (bad) xor addl jns int mov lods jg dec and and std out mov out sub xchg or sub in xchg mov rcrb and cmp xor dec mov sbb addl or jge mov mov mov mov sbb (bad) mov (bad) jg xor pushf sbbl insl cmc int mov fmuls adc movsb pop lds mov mov mov fisttp jle push leave nop je outsb sarl test sbb lcall pop xchg mov mov add cltd xchg rcrl int stos fiaddl addw cwtl sbb jmp lds jmp addl pop jbe out mov adcb xor xor mov fmuls adc movsb pop les mov jl cmpsb push subl add lret xchg lods lcall xchg add lret cli lock cmpsb outsb roll movsb pop lret pop mov mov mov rcll adcl lcall pop nop pop mov cwtl add lods adcl add xchg in adcl sbbl sub int mov adc lods addl add in mov mov stos dec addb sub mov rcll rolb out fwait sbb xor addl cmpsl sbb jmp ljmp and push lcall dec add mov mov mov stos dec test mov mov mov rcll int3 addl sub int fwait sbb cmp xchg stos sbb jmp ljmp sub sbb (bad) sbb xor sbb mov stos dec mov mov mov mov rcll enter sub (bad) outsb rcll cmp xchg scas sbb jmp ljmp and push lcall dec add mov mov cmpsl push adc scas dec mov mov cwtl xchg cmpsb outsb ljmp popa add mov int jl andl add mov mov lods xlat pop or add lcall push add outsb lret dec pop mov rcll in cwtl inc cmpsb outsb lret cmp lods mov call rcrl outsl bound jecxz adc xor sbb lahf cwtl cmp fimul mov mov adc pop mov xchg xor sbb lahf cwtl cmp fsubp (bad) pop int mov mov adc pop mov jno cmpsb push jmp test int cwtl cmp fisubr pop int jl out (bad) mov outsb rcll or add jecxz fstpl xor adc out mov adc stos in pop mov cwtl xchg cmpsb outsb lret ds jb push xchg add test add add mov test out add mov lods outsb shl rorl outsb in sub jb or ror mov xor movsb cs mov arpl cmpsl negl push xchg (bad) mov xor gs sub cmp lahf xchg fwait sub imul fsubs popa inc call pop push in push in pusha push add xlat rcrb jo shl dec mov push mov addr16 cmp adc pushf (bad) xlat std xor mov push push add fwait adc (bad) and adc add fwait pop mov or js insl jmp adc adc mov and cmpl add xlat push and jae mov dec cmp mov pop cltd cmp and fldl popf dec pop dec xor mov xchg pop mov das sbb pusha fucomi bound scas sbb hlt xchg add push lds test mov mov aam xor mov orb jmp jns mov jo clc push call pop or int3 int xchg jae xor ficom (bad) arpl fild int3 out mov les aas ror mov into scas xchg test push hlt xor stos call push mov push and push jmp and push pop jne cmpsb xchg outsl mov lret popa cmp fisub and pop sub bound les gs fwait scas fdivrp mov mov push xchg adc subb xchg mov pop roll mov ja hlt pop inc push and lret pop cmpsl mov in (bad) out mov cmpsl sbb pop mov pop out mov subb mov jne js jge sbb dec out cld jle ds imul lods out and sbbl xchg (bad) je cs fadd cwtl lea sbb jl cltd cs dec nop pop push out dec shrb push jbe pushl mov fiadd xor es xchg jno xor pusha pop movsl pushf jecxz iret addr16 cmc sub mov out stc jg jmp arpl pop stos call insb fisubrl outsb cmp pop mov fwait lcall js push mov push in imul mov mov mov push std sbb dec nop jecxz adc adc popf xor mov dec gs lods jo lea stc out mov je cmp popf imulb or andl adc inc adc scas jno lock sarb (bad) jg dec xchg add stc sti das mov and jne cmpsl js mov jae cs cmp dec push sub sub push push mov fisubrl nop stos pop lock out or add add or fistpl ljmp mov mov mov push jns cmc sbb mov loope xor testb lods dec jne adc lcall data16 sbb scas (bad) (bad) clc inc xchg cmp sbb movsl (bad) mov jb xlat add scas push adc rcll push pop mov insl xor ficoml call into mov int3 in les jmp test fdivr jecxz jle jb nop int3 inc cld mov dec mov (bad) sahf lret push sbb pusha mov jmp and dec mov rclb and icebp repz pusha leave icebp test push out int mov mov inc pop stos mov push jno and scas pop jns dec call ds (bad) fisttpll sbb push (bad) lea mov sahf add mov pop out mov add lea sbb xchg cmp cmp or stc (bad) arpl clc adc sti mov clc gs (bad) fnstsw arpl inc inc (bad) cmp cmp arpl cmp push jmp cwtl jmp loopne cli out and gs jge vorps sahf ret mov rclb orl add mov pop icebp and fwait addl pop sbb jae adc call icebp outsb shll int mov jb rcll andl sbb (bad) or gs mov mov rcll xor inc mov mov and rcll addl insl imul adc jne popa pop test sbb add (bad) sti imul jecxz loope mov pop rolb jne arpl out sti repz xchg adc lods xor push int xlat lcall cmp pop lock mov rorl ds pop cld add lods mov ret jno ljmp xchg xchg add incl cli fcomi scas xchg pop hlt and cwtl and xor fldl push jb fs inc jg scas xlat lcall and sbb cmpb or mov outsb std sub repz lods add stc xor push push lods es ljmp popl fs adc pop mov sub adc fisubl mov rcrl push lods es scas mov mov andl jp out sar cmpsb or fs mov xlat lcall dec loopne leave insl imul fstps inc lods and pop out sbb outsb subb add pop scas out icebp stc cmpsb sub jge out int3 pop in add mov out stc cmp cmp sarb test (bad) repz (bad) jae fdivrs aad leave insl jbe pushf mov ret sbb imull jb stos mov (bad) xchg iret adc push xchg push inc ljmp mov das (bad) jae fdivrs (bad) jo ja scas fprem1 enter pop out fs leave pop pop mov sbb lock incb jle fwait out (bad) sub imul mov ret sbb in fs imul shr into sub jae fdivrs (bad) jo ja scas fprem1 enter pop ljmp mov sbb lock cmc add fwait out (bad) sub imul mov ret sbb in fs imul shr into and jae fdivrs (bad) jo ja scas fprem1 enter pop out in leave pop pop mov sbb lock icebp add fwait out leave rorb mov xor add pop jmp aad stc xor jo lret add pop out jno int aad stc cmp fs leave pop pop mov or inc iret jo mov xlat call xor int3 ja jo mov or (bad) into push js xchg push pop rolb dec fsubrl int aad stc sub loop faddl jle fwait out fadd bt add pop lds test sti lods shrb add cmp out xlat call xor lds mov (bad) xlat repnz or insl xchg test lock sahf pop mov fdivs pop hlt test stc push push call jbe test lods inc inc int divl fs mov call outsl in lock outsb jne xchg dec shrd add pop hlt insb push mov mul add in leave pop push mov add in data16 stos mov (bad) mov push rorb pusha fdivs orb jae fdivrs int3 ja sbb (bad) lods jno out or imul out fmul add pop fisubl xchg mov scas adc leave adc dec int jbe mov pop inc loope shll gs mov ljmp add pop bnd test xlat call xor loop fisubl xchg mov cmpsb jno repz inc rolb jle fwait out aam sbb in leave pop push mov or push aam jle fwait out aam sbb negl insl insl test pop pop fmuls jl mov std in or faddl sbb (bad) mov fsubs leave pop dec test ret lcall pop andl inc mov cmpsb jno repz cmc pop fisubl xchg lods fcomip shrb jno repz shlb addr16 out xlat call xor (bad) iret add fwait out (bad) sbb pop fisubl xchg mov cmpsb jno repz jmp popl jle fwait out rol and fcoml push js mov out stc sub fs leave pop pop std fadds push push sahf daa shll pop (bad) fldl push or inc jge scas ret sbb and sbb xchg loope ljmp aad aam mov jb adc je push sbb outsb fwait adc leave adc dec mov (bad) lcall add jae push sbb add adcl inc test push mov mov hlt insb outsl mov or cmc push adc jg lods and push mov jge lret fs leave pop dec cltd test mov inc fimul jl stos enter mov pop lret and jnp xchg mov ret sbb je push jl add lds xchg pusha inc leave add imul lds in arpl add fwait aad enter inc leave push addl insl int aad stc sub bound enter cmpsb jno repz jmp iret jno sahf lcall push lods xor jne sbb fcomp sbb (bad) iret jno int aad ret pusha push lods ss flds push fwait out (bad) lock cmpb pop out loop jl out xlat call xor jmp into insl xchg lods shr (bad) or pop out loop jbe xchg repz add push inc leave add jp xchg shr sbb jae fdivrs lret ja popl test push lods add jae dec insb mov add stc bound loopne aad mov pop ret jne insb push add in scas ja lods xor outsb leave sbb hlt aad scas pop ljmp mov add addl dec mov sbb add pop in jo scas mov jmp xor add push les mov scas jo leave les dec jl xchg (bad) cmpsb sub add (bad) fwait aad aad mov jns es (bad) imul mov inc fsubs shll mov sub shll push mov movsb pop push roll outsb leave push mov or addl movsb adc addr16 fbld fsubl mov or mull insb push mov out stc sub adcl mov movsb adc into pop addl test out iret sbb out loop jo mov inc pop lret shlb sbb icebp in mov xor add pop out popa js fbstp pop pop fcoms pop jmp subl lods xor imul jb xchg jmp jb add (bad) iret add xchg (bad) fcomp sbb (bad) iret jbe mov or les inc insb mov ds push leave pop lock fisubl xchg mov scas jo rolb pusha fdivs (bad) mov jmp or addl pop mov outsb lea fsubs leave pop push mov outsb cmpsb jno repz jnp xchg mov leave sbb jne lods and jae pusha jae mov lcall daa lret dec ja fsincos lret jno ficom loop mov ret or inc pop ret adc lahf mov (bad) in scas js int adcl jge xchg call push call icebp outsb shll cltd xor (bad) sbb inc int adcl jge mov repz shrd leave add jnp mov pop pop fcoms pop out addr16 mov roll add imul aad ret jp rolb push fsubs cwtl cmpsb fsubrp xchg pop roll add dec (bad) jbe stc out loop (bad) or pop sti jo mov sbb adc leave add jl out ljmp fsubrs in imul leave out ret sbb add arpl stc out ret add push push fsubs jnp xchg mov ret sbb shll sbb add imull inc jl stos fld1 ret or sub push add (bad) shr or xlat push popf mov ret push lods jne leave fs aam pop mov sbb push push fsubs ljmp mov into imul jmp jno mov sbb out fdivs int aad negb ja fist sarl sbb add orl ja lcall inc leave add jnp mov lcall adc pop out insl fwait mov out ret outsb xchg clc sbb jbe lods cld leave out sub push inc leave add push mov stc ret outsb mov ret (bad) dec fsubrs test mov ret push mov jbe or imul jne mov jmp add jae inc jl mov mov in jno add fwait out rol pop xchg jge leave fs leave pop push test jecxz fmull (bad) jae fdivrs shrl jb xchg jmp sti push ljmp ret repnz cmp jne clc or imul ficomp pop rorl imul icebp call push fdivrs into push pushf mov ret sbb leavew insl imul aad stc sub or pop fisubl xchg mov movsb pop push roll dec (bad) je orl dec jne adc imul pusha int aad loop lods jno int out (bad) jo mov add mull add mov std ret cmp out (bad) fdivs sahf xchg (bad) jmp stc sub sbb push lods jge lds adcl ja fiadd insl inc leave fs jl mov jno lahf push lods arpl outsb sbb add es or imul sub mov mulb int xorl lods (bad) jecxz aam mov out bound sar ret sub fs fiadd jbe fprem1 enter pop fcoml out into add aad cmpsb sbb testl mov lcall add jo fwait mov iret add loop fdivs mov sbb and imul js mov arpl or dec fsubrl int ror add shrl jbe mov sub loope fsubrl xorl dec ljmp mov or jp (bad) ljmp (bad) mulb fild out iret addr16 pushf (bad) call pop (bad) add lods (bad) repnz or andl insl mov sbb (bad) fdivl mov sbb out bound (bad) repz pop ret imul jno adc lret fs ret pop int shlb movsl cwtl fdivrp jmp lods or push out fmul leave add adc imul push lahf ret loopne lgs add jl mov jmp int out fdivl int sar int cmpsb jno faddl icebp leavew imul sar shrd push lock int jbe mov jmp inc leave fs fsubs mov mov in je arpl mov mov push ficom divb insl jne mov lcall add test (bad) test faddl pusha mov (bad) push dec fadds lock int imul jno lret arpl jo movsb add push pop rolb jne insl imul aad ljmp shr pop mov inc lods adc je inc pusha mov shrd aad out mov mov ficomp (bad) jb rolb data16 int shr (bad) das sarl add pop fldenv lods lcall xor adc pop (bad) jb mov sub addr16 lods add inc enter xchg hlt out lss or ja jbe scas adc lds movsl adc ficom aad iret arpl mov jp fist icebp dec fdivrs mov or imull sbb cpuid jg fiadd lock jbe mov sub stc bound fnop fistp movsb fiadd in je imul aad mov push shll jae jno mov or out (bad) arpl (bad) sar int movsb jne ret or movsb mov out iret add andl lods adc adc fimul loopne into jno mov sbb jmp fsubs mov mov push fbld aad imul jno lods pop icebp (bad) fdivl mov or ljmp les push ret outsb iret addr16 add cmpsb sbb adc dec shll lahf ret or in jne arpl sbb rolb mov push enter (bad) jbe mov mov repnz mov push enter (bad) insl ja mov out cmpsb or addr16 in add jne jno int (bad) or in iret push jo mov addr16 divl insb sbb sbb add bound aad jmp leave pop xlat push out fsubrp lret or data16 es jae jno test aam into imul leave fs fnstenv mov add out inc shrl scas mov repz add in in jo mov sbb lret shlw test fmul aam mov out ja data16 mov jmp pop (bad) add mov or in repnz jge popf fucomip ret or and (bad) fcoms mov cmp icebp jno popa jl mov lods addr16 or fs push mov sbb in dec fdivl int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int (bad) (bad) add lret data16 push int enter test xor pop loopne sti jo (bad) pushf mov rcrb inc int addl jl mov mov pop ret outsb shll popf mov repnz sub loop fadds pop movsb adc loop mov xor add mov pop cmc test notl pushf push (bad) aaa pushl and fldl adc iret add mov repnz jae pop mov mov pop test test xchg or and xor cmp flds push add sub jne mov mov push ret or (bad) iret add pushf (bad) sti lret jge leave or push add pushf (bad) sti lret jnp enter hlt insb push mov div shrd ret bound (bad) (bad) lret jno lds loop bnd test div lret push pop (bad) testl pushf std sti iret add pop inc in lret dec imul incb orl jbe mov adc fsubl jmp faddl push mov push (bad) jnp loop (bad) dec ficoml int fucomip in rcrl xor pop rep insl (bad) fwait mov leave sbb imull jnp lahf mov (bad) fildll insb push lods sub insl int aad aad xchg jbe lods and sbb add out (bad) fidiv mov movsb data16 sbb (bad) jno mov pop repz iret sub pop jmp repz jb push mov lea mov cmc and xor fsubl nop sub arpl outsb jl out rcrb arpl push adcl and (bad) sbb push insb insl lods fprem1 enter push lds lock fcomip ret inc mov lds adcl orl jno les out mov fdivrp aad lods jne fbld fiadd pop cmpsb out repnz int ljmp stc hlt iret sbb ljmp repnz cmpsb sub adc aad sarl popa mov repz sub sbb outsl test les push shll insl jge adc pusha push rorl lds mov insl xor sbb aaa lahf mov test mov pop ret jae addr16 out jecxz aad movsb jns in orl jl fwait mov ret add icebp (bad) fsubrl addb adc aad mull sub movsl popf aad ret jae out or outsl test (bad) call outsb andb sbb insl popf popf fucomip ret or and fdivs movsb sbb cmc pop mov push rorl fidiv movsb fwait leave lcall adc push xchg push sbb bound add pop out jnp mov or cli sub jo mov cmpxchg es jae add (bad) (bad) rcrb ja rolb jne jbe mov or or push jo scas adc cmc pop mov push rorl (bad) jae test inc inc int lock (bad) jo int aad lret jno fcoms out rolb dec mov (bad) dec inc mov out or ja addr16 xchg hlt cmpsb ds push leave pop lock out jnp mov pop mov imull jno cltd xchg sar cmp add mov add pop pop fiaddl imul iret add jae insl ja stos aad ret or loop fsubrl mov or loop out jbe mov sbb jne lods and fs imul ret pop roll adc push inc jbe adc rolb scas jp (bad) and imul div lret jp ret fs imul (bad) enter push fmuls inc aam jl test mov lret insl sbb cmp in arpl sbb jmp push rolb dec enter out std sti rolb roll adc shlw test stc test aad mull sub mov or inc push iret adc imul fcomip enter pop (bad) add test fucomip lret lgs aad mull sub mov or pop pop int ljmp (bad) (bad) outsb cmpl add js mov mov lock outsl aaa lahf lcall jns adc jne jb test (bad) repz mov arpl push ljmp aam aam xchg jne enter cli ja test or or jb sbb stc int mov push leave fs jae popa jb popf (bad) test les out fdivl int (bad) roll movsb adc leave or (bad) iret dec ja xorb inc iret add shlw test mov fistp ss (bad) ja scas mov lcall imulb imul not or lock outsl aaa lahf lcall jae or outsb shll sahf mov in iret or or dec test (bad) outsb xchg insl inc fadds out sub imul (bad) jmp pop fbld into jno stos mov cmc fisubr insb push leave adc outsb shrb sbb ret imul les jp (bad) (bad) mulb rolb dec (bad) jbe stc out jecxz fistp movsb adc ret xor fdivr cmpsb cmp adcl insl sti (bad) and jae push jo mov dec incb loop fdivs addl daa icebp jle jbe sahf mov in iret or adc arpl jo lahf mov dec add icebp inc fsubrs mov cmc aam xchg leave aaa divl arpl ret and repz push jl cltd fyl2xp1 ret ds inc lds out mov icebp test mov inc les adcl jl mov out (bad) sbb adc leave add je jo int fyl2xp1 aam mov push fmuls outsb (bad) xor int aad iret sbb add pop cld popa insl movsb cltd shr leave sbb inc inc leave pop ljmp aad cmpsb cmp ja xchg pop mov mov or into shlw test mov ret sbb or insl test mov aam mov pop call icebp (bad) fsubrl popl xchg pop fadds icebp pop out jbe test fnop ret shld lods xor jg push jl mov call push leave pop lock shlb mov add pop hlt inc ja (bad) aad (bad) sbb lock outsl aaa mov mov pop ret push fsubs (bad) sbb js iret adc push mov jns fiadd sub mov mov out fsubs mov pop scas ja int out fsubl int icebp jmp push fist out jae inc ja (bad) mov movl adc pop (bad) insl je xchg sti rolb scas jp leave or jg jbe mov sbb out out ja mov add outsb shrl mov (bad) out aam mov (bad) (bad) fbstp stos mov test mov inc lds divb add xchg fcmovnbe sbb out cld jno test (bad) neg cmp loop (bad) inc insl mov sbb push outsb pusha mov cmpsb jl in adc jne pusha insb mov sbb sbb imul pusha inc fimul sbb lods insl lds out (bad) cld jbe mov or push inc fild out sarl mov sbb loope leave sbb dec or insl jae or sarw mov sbb lock shlb mov fcomip rolb popa inc int ljmp fprem rcrl movsb adc ret or outsb into imul icebp out rcrb jbe fadds addl movsb adc loope scas jno int out cld jbe mov or push pop int lock leave jbe movsb (bad) (bad) outsb xchg jp int loop fsubs mov add mull inc insl mov sbb push fdivs sahf lcall gs imul (bad) ret cmp or insl mov or inc inc fimul je mov repz scas adc (bad) loope iret push insl mov aad cmpsb cmp or lods sbb (bad) sbb in push jo mov and imulb imul ljmp add mov sbb push gs adc jmp movsl jno cld or jbe (bad) shr cmpsb daa scas pusha pusha fcoms adcl insl movsb (bad) aad iret or out fadds dec test fldl2t rcrb pop push aad out shrb mov push movsb ja lods ss aam insl mov push mov xor sbb aaa sahf mov out aam mov push in pop loopne into jno mov add inc push lret or dec lods add in pop scas jo out or jle adc aad cmpl add pop lock mov jmp add in imul ret sti rorl jnp in in imul mov push shrl arpl add adc leave or inc fisub mov add pop stc addr16 mov repz push leave pop addl movsb adc jno fmuls push add iret or inc dec fist out xchg inc jbe mov adc lods xor push popf out lds pop lods pop orl mov in leave outsb stos adc lods or mov outsb lods adc lods pop subl mov les push lods or int xchg add sbb out popf lcall and sbb out mov or sbb out mov add sbb out icebp lcall mov out int test or pop xorl scas out fistp push lods adc mov dec movsl adc lods add cltd out aad lret outsb mov inc lods add mov outsb adcb sub lods out aad aam test cmpl sbb outsb (bad) adc lods add sub mov pop lods or mov outsb mov inc lods or sbb mov jle cmpsb arpl ret outsb xchg adc lods sbb bound fistp push lods aaa xorl sbb (bad) leave lcall add lods out lds pop lods xor movsb out ret outsb mov jle fs jg inc sbb outsb lods adc lods or mov outsb xchg adc mov addl sbb outsb lods adc lods adc movsb out out cmpsb dec mov andl mov outsb xchg adc lods add sbb outsb sarl lods sbb bound fistp push lods add cltd out les add push xorl sbb outsb lock lods push xorl xor (bad) out sbbl xor ss out xchg add sbb out sbbl aaa mov sbbb lods push xorl sbbl stos add sbb (bad) ficomp inc lods pop andl sbb outsb movsb adc lods xor mov outsb mov push addl pop or in mov movsl rclb mov push sbb out mov push pop scas jbe add mov mov test xchg sbb mov and mov scas (bad) cltd enter es add mov cmpsl jl mov gs jae or fist inc cwtl ss add (bad) out mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll mov inc sbb jmp lcall xchg cmp nop lcall pusha addl add mov test addl push pop int mov outsb rcll addl add int mov movsb outsb rcll lods addl add int mov cmpsb outsb lds lods mov mov mov mov clc xchg push iret arpl sbb fimul or push aad jbe pushf mov cmpsl outsb ret adc lods subl add xchg push mov mov nop ss mov cmp loop lea sub mov cld cmpsb outsb les adc jecxz pop cmpsb jl mov xor out mov cmpsb outsb rcll fs gs push imul movsb xor pop mov aaa popf popf fucomip ret sbb jge fbld mov mov cmpsb outsb rcll push sbb out mov cmpsl outsb rcll addl add int xor cmpsl outsb rclb adcw mov (bad) dec inc xchg popa pop fmuls ja mov cmc (bad) cmp pop out xchg inc jno popf jecxz rolb jns iret or imul xor aad scas jp sahf dec mov lea loope repz lret push xchg or jb jo mov or jge out cli push shrb mov pmuludq lcall cmc (bad) mov into btr fsubs pop mov aad ljmp in jne push sbb out mov cmpsl outsb rclb adcl test cld sti aad test ret push (bad) add lcall aaa orl mov out jecxz mov inc lods pusha (bad) pop mov mov mov lods fs pop out add (bad) sbb or push movsl add int3 out mov cmpsl outsb xchg push cmp add dec fdivl mov lds push mov mov cmpsb outsb rcll fdivs lods pushf (bad) (bad) sbb xor sbb out jecxz stos cmp pop testl mov cmpsb outsb rcll lods sbbl add int mov cmpsb cmp adc data16 jbe mov push adc lods jl pop mov mov movsb bound lock jo mov outsb rclb adcl test cld sti aad test ret push (bad) add lcall xchg mov lods lahf movsb push test movsb add fbld ret enter cmp sbb loope pushf mov js ss pusha test (bad) fcomps ss adc jmp movl adc std xor mov test xchg xchg mov mov lds and addb dec push lret cli mov push movsl test pop fdivl ret shlb cmp mov movsb jo pop xor adc iret mov mov mov pop sbb loop lcall addl push sbb out mov sbb mov add int mov mov inc popf xor mov sbb repnz mov push adc lods jbe mov add int mov cmpsb jae adc lods jns sbb movsl mov dec rorb sub add ret std loopne mov rorb lods data16 or in lods fs sbb pop mov mov sbb lods popa mov mov adc outsl add add test xchg scas imul repz sbb lods gs adc repnz lahf cmpsb outsl iret or scas (bad) pushf leave out mov mov mov add int3 repnz mov jmp add ret repnz cmpsb insl rcrb mov adc mov nop sbb lods gs movzwl sbb ljmp xor lea mov mov sbb lods fs add test mov mov orl loope lahf movsb imul mov add iret mov mov mov add dec bound adc lods jbe adc out into lods fs push cmp adc (bad) std xor lods fs push cmp adc cmpsl jg push mov popa mov lret xchg mov movzwl sbb outsb cmp or mov adc in xchg test fsts cmp or outsl adc xchg xchg mov mov mov xchg xchg mov and (bad) sbb jle xchg xchg mov add aad mov xchg mov cmp add mov dec sbb push pop adc loopne popf mov dec sbb imul fwait scas jl cltd cmp add loope popf mov dec or mov fwait adc iret mov scas lretw mov adc cmpsl rcll shld adc andl and adc outsl adc adc add dec bound sbb test fwait lgs jne iret mov daa jecxz sbb mov push sbb out lods lahf test rcll arpl (bad) lcall jbe or nop cwtl scas pusha rclb add pop cmp loope xchg mov mov add in lcall mov popf add shr mov adc push mov xor or and (bad) jmp fwait cmpsl lds mov or out xchg lods jns lgs cmp repnz mov scas gs push lods cmp iret mov mov mov adc pop xchg xchg ds into bsr or imul xor add leave iret mov mov mov add ret jmp fwait movsb pusha ret scas insb mov dec add sbb mov add iret mov scas push add pop lods (bad) mov mov pop add pop scas (bad) mov mov rcll scas adc in in mov lea sub add int mov cmpsl data16 test fwait sbb mov mov insb adc scas jbe mov push sbb mov insl popa addl mov mov or and adc mov popa popa mov leave iret mov stos imul mov add (bad) mov cmpsl jb adc scas push sbb mov adc lods jne loop add lcall jbe adc ljmp xor add ljmp adc sbb out mov xchg pop adc sbb out mov cmpsb outsl rclb pop mov mov mov mov add dec pop mov xchg adc push scas ud2 sub fwait mov mov or mov pop xor add iret std stc xchg test rcll mov mov popf push sbb ljmp and insb xchg scas adcl mov daa daa iret add add xchg mov rcrb lea lods adcb out mov jmp inc test adc repz xchg and add (bad) lcall mov mov mov sbb sub adc and rclb push mov mov add sbb adcl pushf adc mov test ja in out mov adc test sbb int mov adc scas js adc out xlat mov test (bad) pop mov sbb jmp rcll mov or fdivr mov mov inc xchg xor sbbl out mov or mov sbb enter mov test add dec ret cmpsl outsl rclb or mov mov (bad) adc sbb mov adc mov mov fcomip mov adc mov mov sbb test add xchg mov enter sub shr xchg test leave or mov push int3 std xor mov and add dec outsb mov mov mov (bad) mov outsl sub sub mov mov mov fisub mov adc sub daa sbb ljmp gs adc mov movsl jae push mov jns (bad) or iret cli mov sbb stos xchg xchg sbb mov mov or enter daa daa iret adc mov pop add mov sub cmpsl add rep pusha fstl mov or iret in mov movsb jae push xor pop add mov sub cmpl xchg stos xchg xchg or lret xchg test (bad) adc add mov scas flds mov popa test call imul (bad) xchg mov mov sahf add mov adc mov sbbl out mov lods xchg pop mov mov pop xor add int pop loopne cmp and and jge sbb mov pop push leave iret mov aas cmpsb cmpsb outsb rcll adcl and loopne lcall addl add inc out mov mov adc lods fs add std out mov dec outsb rcll andl add into out mov movsl outsb rcll addl add fwait out mov lock rcll adcl add enter cmpsl outsb rcll addl add int3 out mov mov lods adcl add int scas xchg cmpsl outsb rcll bound lret out fisttp mov jmp or push jp add lods rcll or jl mov mov push lret out inc mov mov dec or sti mov cmc jnp add lods add mov outsb inc add mov mov (bad) addr16 adc mov fisttpl jnp add lods (bad) xchg outsl test fmuls cld mov into or popf js adc mov pop shld mov int add xchg mov stc push mov mov push lret out adc mov test lcall scas xchg mov stc or mov sbb mov out pandn mov sbb adc mov pop push sar mov lcall xchg outsl test fmuls icebp mov ret or out fisttp dec mov xchg inc sti mov sub add lods repz mov clc fmuls std mov clc push fucomi mov adc mov xchg add mov mov add lods push fwait outsl test fmuls pop mov push lret out cld (bad) into jp adc mov xchg add mov (bad) jbe add lods add mov outsb mov xchg mov cmp lret out cmp xchg mov xchg add mov add lods lods fwait ss sbb testl cmp pop add out movsl andl or je sub int mov lahf ja add lods sub lcall or pusha movsb xor out les mov ret mov mov add lods aad mov (bad) or or repnz push lret out mov into jp adc mov xchg add mov xorl lret sbb scas push icebp mov pop push lret out and pushf mov xchg add mov inc je add lods lahf cltd mov cmp bsr pop push lret out rolb dec mov xchg add mov or add lods rcrb push hlt fmuls leave mov orl mov xchg jp adc mov xchg adc stc mov add lods cmp sbb outsb mov xor mov or std mov xchg add cmpsb lcall xchg lahf std stos add iret repnz sbb xchg xchg jp adc add mov cmpsb outsb jl xor sbb out mov out mov addl add int mov xor sbb (bad) adc lods addl gs cld movsl lcall je dec mov mov adc lods lods nop shrl lcall mov sbb out mov cmpsb outsb js idivb and int mov pop and mov jl pusha jge adc lods inc addl adc imul jbe mov lret lods adcl rorb or movsl lcall fs add fsubr test adc lods ss scas pop sbb out es xchg nop adc mov mov roll ret andl mov lcall inc xorl xchg mov lods xlat addl sbb out mov and adc lods addr16 pop mov and xor add pop out fwait lcall push pop mov or and xor jbe mov cmpsb outsb out xor sbb out mov (bad) jp adc lods push add add int (bad) mov lods cmpsl addl sbb sti adc lods addr16 add xor adc lods pusha orl sbb mov xor xchg addl xchg imul jg movsl outsl lds lods addl mov mov lods loope cmp out mov pop outsb rcll add leave out dec lcall mov sbb out mov and adc lods addr16 add xor adc lods pusha adcl sbb mov xor cmp sbb out pop lcall adcl mov add lods icebp (bad) inc mov mov adc lods cs xor icebp out les dec scas push addl sbb out repz sbb mov xchg and sbb xchg adc scas ja push mov call adc lods testl (bad) outsb push pop add sbb outsb cmpsb adc scas jne insl mov fstpl pop lods incl mov mov pop lods adc mov outsb pop adc scas jb movsl mov adc adc lods aam ss sbbl mov out jae xchg outsb jbe clc scas push cmpl or adc lods mov ss xchg lods scas and add push out pop cltd lock sbb scas bound fwait outsl outsb lcall xchg addb rcrl es out inc outsb aaa pop ss mov jl push cltd sub dec cltd lock sub scas xor ljmp lcall sahf adcb sbb in out pop outsb cmp data16 cmp push cltd xor dec cltd mov scas xor add outsl mov pop insl xchg xchg cmp or xor out jge aas pop data16 cmp push cltd adc dec cltd lock and scas xor or lcall lcall jmp lcall jle jl and shr pop cltd mov scas inc andl sbb out xchg fwait xor lods testl mov adc lods push (bad) add and clc out mov xchg adc pop mov mov lods mov mov mov xor andl rcll cmc fwait cmp mov mov mov mov cmpsb outsb push adc lods jnp add xchg cmp out mov xor test or add int and lods int3 cmpsb pop mov clc fwait mov leave adc mov mov sahf sahf scas outsb in xor lods addl mov adc lods cmc fwait cmp mov mov mov mov cmpsb outsb push adc lods push xchg mov mov xor test sbbl sbb out and cmp mov mov ljmp addl test test movsb sahf mov fnstcw xchg mov mov adc lods repnz fucomip mov cmpsb lods add xchg lds adc lods add int mov and adc ret xchg add int and and sbb fstps inc andl xchg sbb outsb inc cmp lods addl cmpsb lcall cmc mov fucomi cmp cmpsb outsb rcll adc jge mov cmpsb outsb push adc lods testb out mov and adc mov out and sbb sbb fistp xor cmp rcll in xchg popf jno popa jmp lcall loop dec mov aam cmpsb outsb rcll adc adc mov cmpsb outsb inc or lods jo ss mov xor test xor add int and add sbb daa fwait adc adc popf addl xchg adc pop sahf xchg outsb aad xor sbb sbbl int3 mov pushf stos cmpsb outsb rcll mov sbb fidiv sbb lods roll int mov xor test adcl sbb out and add sbb lahf cwtl adc adc popf addl xchg adc outsb mov xor sbb sbbl insb mov cmp cmpsb outsb rcll sbb push fidiv sbb scas roll int mov xor test xorl and add sbb sbb adc popf addl xchg adc pop sahf xchg outsb adc adcl lcall (bad) mov mov pop stos cmpsb outsb rcll mov mov xor xor outsb push sbb scas roll int mov xor test adcl add int and add sbb mov adc sahf addl xchg adc in pop sahf xchg outsb cmc xor sbb sbbl ja mov cld out cld test outsb rcll in xorb mov cmpsb outsb push sbb scas roll int mov xor test xorl sbb out and add sbb pusha cltd adc adc sahf addl xchg adc in pop sahf xchg outsb push xor sbb sbbl hlt mov sbb cmpsb outsb rcll xchg fnsave sbb test xchg mov mov xor test adc add int and add sbb popf sahf adc adc sahf addl xchg adc jmp sahf xchg outsb xor adcl lcall (bad) mov mov cld out mov adc movsb aaa xchg fdivl sbb test xchg mov mov xor test xorl add int and add sbb int adc adc lahf addl xchg adc pop sahf xchg outsb xchg daa xor sbb (bad) pop rcll (bad) mov out fsubrl mov mov mov cmpsb outsb push sbb test xchg mov mov xor test adcl and add sbb jp adc adc lahf addl xchg adc pop sahf xchg outsb jne xor sbb pop rcll (bad) mov mov jl cmpsb outsb rcll xchg xchg fdivl sbb test out int mov xor test xor add int and add sbb lods lahf adc adc cwtl addl xchg adc ljmp xor sbb jmp lcall loop dec mov cwtl scas cmpsb outsb rcll xor mov (bad) or lods jo xor mov aaa outsb mov sub add int and add mov (bad) fwait jno notl cltd addl xchg sbb outsb popf and lods adcl mov xor sbb cmpsb outsb rcll roll fidivl adc lods outsl xchg mov aaa outsb push cmp add int and or sbb lcall addl xchg sbb mov and lods adcl lcall cmc cmpl test cmpsb lods flds mov outsb push adc lods popf xchg cs mov xor adc test add int es push sbb lahf inc push adc xchg addl xchg sbb outsb adc adcl sti lcall cmc andl sbb out cwtl mov cmpsb lods add cmc aad lcall jno dec mov mov aaa outsb stos adc sub int es mov pop mov ret imul pop mov cmp cmc outsb lds lods adcl in ljmp addl cmp cmpsb outsb rcll loop xor scas mov cmpsb outsb push adc test stos pop int mov aaa outsb dec adc test add int and insb lods and pop mov and js addl xchg adc pop sahf cli outsb xchg push xor sbb jmp lcall loop dec mov rcr cmpsb outsb rcll pop (bad) or pop sbb mov cmpsb outsb push adc test negb out mov aaa outsb cltd adc cmp int and insl lods pusha movl out out lahf out pushf adc call xchg sbb lods lahf stc outsb movsl push xor sbb ljmp xor sbb out je cmpsb outsb rcll sub adc mov cmpsb outsb push or lods outsl xchg add int xor xchg test adc add int ss out outsl aad pop lods mov sbb add fsub addl xchg sbb jmp pop xor sbb fcompl xor sbb cmpsb outsb rcll scas (bad) mov outsb sbb outsb push sbb lods roll int mov xor test addl and pop lods hlt leave pop mov stos cwtl adc adc out addl xchg adc in pop sahf lret pop xor sbb fcompl xor sbb cmpsb outsb rcll jno adc outsb push sbb scas roll int mov and adc jmp add int and pop lods pushf leave pop mov clc fwait mov lods adc out addl sbbl lret adc lods addl test outsb rcll mov sbb out mov cmpsb outsb ret lods lods xchg jb int mov movsl outsb pop adc je add int mov and adc pop mov jbe imul lods addl add or js xor mov addl lahf sub rcll addl test outsb rcll mov sbb out mov cmpsb outsb ret lods lods xchg mov int mov movsl outsb pop adc xchg mov mov and adc pop mov jbe imul lods addl add or js imul lods addl lahf outsb rcll addl test outsb rcll mov sbb out mov cmpsb outsb ret lods lods xchg mov mov movsl outsb pop adc mov add int mov and adc pop mov jbe addr16 xchg sbb out js mov jns xor sbb ljmp xor sbb outsb rcll mov pop jb mov cmpsb outsb ret lods lods xchg mov mov movsl outsb pop adc ret sbb out mov and adc pop mov jbe addr16 clc lods addl add or js mov or lods addl pushf push lods addl test outsb rcll mov pop sbb mov cmpsb outsb ret lods lods xchg mov mov movsl outsb pop adc sarb mov and adc pop mov jbe addr16 ljmp sbb out js xchg push addl pushf inc outsb rcll addl test outsb rcll mov pop and mov cmpsb outsb ret lods lods xchg in sbb out mov movsl outsb pop adc repnz mov and adc pop mov jbe imul addl add or js int3 push addl pushf pop outsb rcll addl test outsb rcll mov pop int3 out mov cmpsb outsb ret lods lods xchg out mov movsl outsb pop adc or lcall push pop mov jbe imul lods addl add or js push push addl pushf mov rcll addl test outsb rcll mov pop (bad) mov cmpsb outsb ret lods lods xchg out mov movsl outsb pop adc and add int mov and adc pop mov jbe imul lods addl add or js adc adc add les sbb cmc pushf xchg outsl rcll jb mov outsb mov xor sbb out stc xchg cmpsb outsb rclb addl mov sti (bad) push popl mov mov movsl outsb mov xor sbb out in xchg cmpsb outsb ret adc mov pop adc das (bad) cmc popl mov mov cmpsl outsb pop sbb lods andl pop xchg cmpsb dec rcll addl mov int mov popa (bad) mov pop mov mov mov lods bound int3 out mov cmpsb outsb ret adc mov adc arpl adc lods inc mov mov mov mov lods bound lret xchg cmpsb outsb leave adc mov in int mov aad rcll pop mov popf add int mov cmpsl outsb pushf sbb lods addl ds cmpsb outsb ret mov lahf adc out mov add adc lods or pusha loop lcall pusha add add int3 out xchg cmpsb outsb rclb lahf adc inc arpl adc lods test nop jecxz lcall gs add int3 out pop xchg cmpsb outsb ret adc mov or int mov mov lods inc lea mov mov cmpsl outsb pop sbb lods subl (bad) xchg cmpsb outsb rclb addl inc pop int mov mov lods inc lea mov mov cmpsl outsb aas sbb lods orl sbb out in cmpsb outsb rclb addl pusha pop int mov aad rcll sbb inc loope lcall adcw sub mov nop pop int mov dec arpl adc lods and data16 lcall cmpl jno cmpsb outsb ret adc mov inc pop int mov xor rcll stc popl mov mov cmpsl outsb push sbb lods sub add into out sub adc mov jno int mov frstor adc lods mov cmp mov movsb outsb cmp xor sbb out mov cmpsb outsb ret adc mov pop adc sti (bad) jo pop mov mov cmpsl outsb fcompl xor sbb out mov adc mov xor int mov andl xor sub pop mov mov mov lods arpl (bad) xchg cmpsb outsb enter addl es int mov xchg popa rcll inc mov mov mov mov lods bound lret xchg cmpsb outsb leave adc mov in int mov adc lods bound loopne lcall orw add int3 out sub adc mov push push int mov mov lods jns pop mov mov movsb outsb int3 sbb lods addl sbb out notl mov add int mov mov lods bound loopne lcall addw cmp cmpsb outsb lds mov lods push int mov sbb adc lods test pop mov mov scas outsb sub xor sbb out rclb mov mov int mov cmp adc lods lret mov mov mov mov lods insb sbb add (bad) out pop xchg cmpsb outsb lret adc mov push push int mov adc lods lea loopne lcall addl add iret out mov adc mov or lcall imul loopne lcall sbbl add int3 out mov cmpsb outsb ret adc mov or int mov test lods insb xchg pop mov mov movsl outsb aad xor sbb out lods xchg cmpsb outsb rclb addl mov mov rcll jnp pop mov mov movsb outsb fiadd lods adcl add leave out mov cmpsb outsb rclb add int mov stos popa rcll insb xchg pop mov mov cmpsl outsb leave add lods orw add into out movsb xchg cmpsb outsb lds mov pop push int mov mov lods imul outsb call xorl add leave out mov ja addl jecxz int mov (bad) jle adc lods push xchg pop mov mov mov lods bound lret xchg cmpsb outsb rclb add int mov stos popa rcll xor in mov movsl outsb hlt add lods pusha andl sbb out (bad) mov mov sub int mov xchg jle adc lods push xchg pop mov mov mov lods arpl int3 out lods xchg cmpsb outsb rclb addl mov bnd adc lods dec xchg pop mov mov movsb outsb call adcl add leave out mov cmpsb outsb rclb add int mov stos popa rcll in xchg pop mov mov movsl outsb push add lods pusha sbbl pop mov mov lea int mov xor adc lods cli xchg pop mov mov mov lods arpl int3 out lods xchg cmpsb outsb rclb addl mov pop jle adc lods fstl fchs mov movsl outsb (bad) sbb lods sbbl add int3 out mov cmpsb outsb ret adc mov les int mov imul xchg pop mov mov mov lods gs add iret out jg cmpsb outsb ret mov loop int mov dec jle adc lods jo pop mov mov cmpsl outsb fcompl xor sbb out mov adc mov int int mov jg rcll cwtl xchg pop mov mov movsb outsb push add lods addr16 add leave out dec mov mov add int mov mov test in sbb jmp movlps lods test mov imul jne xor repz mov adc lods jo ss mov or sbb outsb mov subl pop insb out les stos pushf test xchg int stc lcall icebp test mov movsb sahf xchg adc stos or push shr fwait ret adc stos jp outsb mov xchg lcall movsl test jmp sbb or push push dec out dec pushf stos imul test call mov mov push test mov test jmp xchg outsb mov push stos cmc adcl push pop out in popf inc push or call aad mov sbb outsb mov lahf mov sbb lahf stos std test mov push lcall mov sbb jmp adc xchg sub movsl sbb gs roll mov out outsl outsl adc lods je lods mov movsb sahf mov stos inc (bad) daa mov sbb sbb adc ss mov sbb xor test fs out outsl negb stos dec (bad) cmp clc fwait dec imul adc out fwait icebp data16 sbb scas add sbb outsl test cmp adc out nop xchg mov mov js fadds test data16 pop lods sub adc test iret outsl dec sbb movsb or sbb out das xchg test adc movsb dec mov out fwait icebp out sbb lods sub adc test or adc xchg call movsb xor xchg out fwait out outsl sahf sbb lods lcall out xchg mov leave sbb cmpl xchg aam call test mov lods lcall push mov out test out mov dec mov and push add into test mov icebp cwtl out pop sbb scas sub sbb insb mov subl out stos imul adc icebp cwtl sub scas icebp mov out xchg out push (bad) movsb and adc in jno popa data16 movsb jo xor icebp cwtl push adc mov fwait sbb insb mov fdivl fwait sbb adc adc test sbb lods arpl test adc shrl cs out clc fwait mov aad add dec sbb jmp cwtl xchg fs jno inc mov mov push pushf pop outsb xchg int3 movsb in dec mov clc fwait movsb or cltd stos jo xchg mov pop lcall add mov outsb mov subl rcll js inc mov out lcall lock mov sbb test jno cmc cmpl addr16 test out cwtl jge popf sbb gs sbb in xchg pop outsb outsb adc add adc sub cmpsl roll inc jmp lcall dec mov out sub adc and mov xchg stos imul mov cmp shr cwtl out outsl addr16 mov rcrl test pop popf ja out adc stos mov push mov sbb mov sbb js les jmp jns shrl sbb outsl mov mov push push pop out lret xchg imul mov mov idivb xor shrl sbb xchg (bad) outsl add shll jmp xchg mov cmpsl xchg mov mov inc cltd mov adc scas pusha (bad) cli mov sbb jecxz xchg jg mov pop mov adc mov xchg (bad) pop fxam leave lcall sub xor mov shrl mov fwait mov adcb lods pop mov dec sbb loope out outsl popa adc sub cmpsl mov adc nop stos adc push mov clc fwait push imul mov and test mov notb and insl subl add test sbb mov adc lods lods adcl and adc lods insb adc popf sbb out push adc lods int bsr sbb mov adc lods mov cmp outsb xor cmp lds (bad) lcall mov bsr sbb out mov adc lods push sbb out push lcall dec cmp in sbb out mov pop outsb out adc stos jae sub sahf lcall inc test sub out (bad) fwait mov adc cmpl sbb out repz outsl out adc stos repnz sub jae std imul mov call mov subb dec in ret popf hlt insb bound pop stos xor mov imul mov insl stos adc mov ret popf insb insb loop inc stos stos andl repz int sub jae pop test mov mov adc scas out je sub dec jmp popf mov adc and lods in jae aad movsb pop shrl add call (bad) adc bound int3 out mov adc lods addl sub int3 out mov cmpsb outsb jmp popa cmpsb cmp adc fs push xchg cmpsb (bad) mov in nop inc cmp cmp cs in nop sahf lcall je mov pop adc and cmp pop lcall adc in nop inc gs adc lods outsl addl mov adc mov or and lcall jns dec mov sbb (bad) std nop cmpsb outsb hlt add inc lods dec adc out in jmp rcll ja and lcall icebp xchg dec mov sbb std nop cmpsb outsb je jge fs dec adc out gs rcll sub and lcall mov and std nop cmpsb outsb xor lock dec adc out mov jmp rcll sub and lcall dec xchg dec mov sbb outsb mov cmpl adc out and xchg mov mov and lcall scas xchg dec mov sbb pop push jge fs dec adc out pop mov rcll sub and lcall arpl sar nop cmpsb outsb rolb jge sbbl dec adc out lods mov rcll sub and lcall push nop dec mov sbb cld std nop cmpsb outsb test jge orl adc out decb gs pop or jge push xor sbb outsb lods pop jge xorl adc out int jmp rcll sub and lcall cmc nop dec mov sbb std nop cmpsb outsb pop pop jge cmpl jecxz jmp rcll sub and lcall push xchg dec mov sbb outsb xchg add bound mov rcll xchg or jg push xor sbb (bad) std nop cmpsb outsb adc jge andw add iret out xchg lcall arpl (bad) out mov mov adc lods dec orl add loope mov adc lods subw adc iret out lahf lcall jae add out mov xchg outsb ficoml lods push sbbl add stc out scas lcall xorw and iret out xchg or sbb out mov pushf outsb ljmp mov lahf lcall cmpw xor iret out (bad) lcall push addl mov in cli adc lods daa cmpl add mov (bad) lcall addw sbb out negl js and test mov in outsb mov lods das orl sbb outsb mov lods orw sbb out lcall pusha lods xor xchg out mov hlt outsb lcall mov out lcall adcw sbb out out ret outsb ret adc lods add movsb out mov cld outsb stos adc lods aas subl sbb outsb pushf adc lods sbbw sbb out out lcall adc mov mov les adc lods pop cmpl sbb outsb movsb adc lods andw sbb out xlat lcall jecxz add out mov int3 outsb dec adc lods jae pop out aas lcall adcw and xchg lods repz mov add adc lods ret mov das lcall subw sbb fwait lods ret addl mov or adc lods lret mov lea sub sbb in xchg lret pop into cmpsl popl mov adc jecxz xchg pop xchg push mov mov adc add out xchg lcall push push int test adc lods addl add int mov cmpsb outsb notl lods addw add int mov cmpsb outsb aam bound add enter cmpsb outsb rcll jno pop mov mov cmpsb outsb rcll addl pop adc cmpsb outsb ret adc lods addl add int scas xchg sbb adc lods addw add int mov cmpsb outsb aam lret addl add int mov cmpsb outsb cli adc add adc enter scas outsb aam cmp sbb out test scas outsb fcoms lods jle or lods lcall jp or nop lcall inc orl and ret lcall inc orl and lcall dec orl add int sbbl lods flds in (bad) fwait mov adc aas mov (bad) fwait loop repz push mov (bad) fwait cli outsb repz popa mov pop fwait aad rcll addl add int mov call or mov mov cmpsb outsb rcll addl add lea lcall cmp push mov lods addr16 ret push out xchg data16 out mov cmpsb outsb xor addl add int mov out rcll addl add xchg push pop shlb subl sbb mov ss adc jmp rolb mov fsubl notl add mov in (bad) sbb jno fadds iret imul ret sbb push inc aad mull and cwtl nop jmp push lock fbld sub popf fxtract rcrl cli ja addr16 mov repz pop leave add jo rol les adc lods addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb ret adc lods andl add imulb xchg xor sbb out mov cmpsb outsb rclb cmpl add cmpsb outsb rcll addl add int mov outsb rcll addl add int mov cmpsb outsb rclb subl cltd int mov cmpsb outsb rcll addl add int mov cmp adc insb orl add int mov cmpsb outsb rcll push addl push sbb outsb test lods aaa orl sbb outsb (bad) adc lods sub jo pop cmpsb outsb rclb addl add int mov cmpsb outsb rcll addl add leave out mov cmpsl outsb rcll addl add int mov loop rcll xor mov fstps jns or int mov (bad) outsb lds lods xor mov outsb mov subl sbb out mov cmpsb outsb jno pop scas addl push sbb outsb scas adc lods and test stc lcall orl sbb out sbbb lods push xorl pusha sbb out mov mov lods daa subl sbb outsb mov inc lods addl add out out mov cmpsl outsb (bad) adc lods or mov outsb mov addl add int mov in int3 adc lods and test hlt lcall push subl sbb outsb scas adc lods andl sbb outsb mov push lods push xorl sbb outsb rcll insb addl inc sbb xchg adc lods push xorl mov outsb rcll dec xorl sub std out sahf lcall bound mov outsb mov pop lods add sbb rcll dec andl sbb outsb rclb lods sub lods out fcompl inc lods sbb sbb outsb rcll or mov outsb test addl sbb out sbbb lods subl cld lcall or lods out aam ret outsb lods adc lods push subl int mov cmpsb outsb rcll bound mov outsb test pop lods add sbb scas adc lods or scas out sahf lcall cmpl loopne aam scas adc lods adc sub lcall andl sbb outsb mov push lods push xorl sbb outsb rcll insb addl push sbb outsb mov push lods adc mov outsb scas adc lods xorl sub std out sahf lcall cmpl or int3 out icebp lcall or mov nop lcall pop subl sbb outsb out adc lods dec xorl sub std out mov or addl add int mov dec aad sub aam out daa lret imul fwait dec lock mov fisubr movsb adc push sbb leave arpl mov cmc enter dec leave pop mov shl sti aad movsb jns rcrb mov add addr16 les out data16 das je mov cmc aad cmpsl pusha sbb fdivl jecxz cmpl jae imul fwait dec lock mov or pushf ret dec or insl jns add jae jbe in cltd aad aad scas jp mov aaa xchg xor std int hlt movl sbb jo mov repz add jne faddl cmp (bad) call pop lret jg outsb ja rclb addr16 les out data16 das je mov cmc aad cmpsl pusha sbb fdivl jecxz (bad) mov adc insb mov arpl xor mov xorl rorb movsl inc inc lds ljmp enter mov adc push in cmp (bad) shr mov test inc ret pop in popa leave das jp (bad) mov aad out bound mov or iret nop mov inc flds lock pop mov shr rolb scas jp leave adc imul cmpsl test mov pop fimull call mov or loop into addr16 sarl xor mov jne jae test (bad) inc ds inc lds out fdivs shl mov inc leave pop divb jbe repz mov inc fsts (bad) dec shll loop cmpsb mov mov push roll jle add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll orl add lods fnstenv adc lods addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll addl add int mov cmpsb outsb rcll rolb mov enter in aad or dec (bad) xchg pop jecxz lods and push pop je int3 (bad) imul jge push dec mov push insb or add movsl pop push sbb pop int mov add add or jnp ljmp cwtl mov jo repnz jl (bad) (bad) and ja pushf fsubl int push jae fsubl fidivl adc clc sti jl sub in mov iret aad mov enter or cli push xor and sar lods mov dec subl pop (bad) or clc pop outsb mov xor inc or movsl inc mov mov (bad) pop cmc push in mov daa dec push push popa pop fwait stos fnstenv test push inc or nop cltd mov arpl mov stos shll incb mov cmp xor std lahf hlt xchg pushf add jle pop call mov lods mov jno or cmp push lret push (bad) mov out mov in dec test dec and cmp jl addl (bad) mov aad gs sbb pop jnp jle stos cs stos lret sbb insl cltd shl repz iret mov or pop in mov loope sub std or cmp in gs or cltd and mov pop mov jge or mov into icebp push xchg push icebp arpl loopne mov mov add les xorl inc loop ljmp negl inc lahf outsb xor lds inc lret outsb mov scas xchg or cmp adc fidivr or arpl pop inc jne outsl push call cmpsb div lcall test lods in xorl sbb loop mov xchg bound mov mov fstpl out sahf and les sub in jl aam cli ficoml test push test xchg hlt jns mov mov lods lcall xor (bad) jp sbb add xlat les dec xchg dec mov test ds and jne push mov shl repz pushf ljmp in mov push gs push out imul or mov jae popa sahf ljmp xor in ljmp xor notb jg sub fidivl lods inc sub cmpsb ljmp add imul (bad) mov dec ficomp f2xm1 xor fstps rcl xor mov xchg clc (bad) mov aas xor std pop fidivr test cmp sub add or rolb add push sub sub add push sub add add sub jae add push jge add add sub add or sub add push sub or add sub add adc and add add ja add sub add sub sub or sub add or add sub sbb add sub sub add push sub sbb sub add or add sub and add sub add sub and add sub sub add push sub and add sub add cmp sldt add add add and add add fild add sub add push je add add push add or add sub add cmp (bad) xor add sub push jae add push and add add or add sub add sub add orb xor add sub sub add push sub xor add sub sub add push sub xor sub add add add inc add add add add cmpsb add add and add or add addb add movsb add add and add or add adcb add sub add sub add add sub add adc add cmp add add add sub inc add add add add add add add add add add add add add es or fsubl add add add add or add sub xor add add add add adc add add add adc add add or add jno add adc add xor add sub add jno add add add sub add sub add jno add dec add add or add pop xchg and or popa pop jno push popa inc add add add add sbb sub or add or pop pop or and pop or add add add sub adc loopne add pop or call add push xchg and sub sub adc adc inc add add add add add add add add sub je (bad) incl add xor add add add add adc add add push jle add add pop sub add add add add add add add or add cmp add inc add add add inc add add add add add add push add push sbb add pop or add popa pop cs push popa inc add add adc add adc and add add pop adc stc sbb push adc or add or adc incl pop pop or sub or and add add add add decl or or pop sub cmp (bad) lcall or cmc pop sub or add incl add adc add loopne add add add jle add add push jle add add pop sub adc add add add add add add add adc add xchg add add add add add add add add pop add push es adc sbb add popa pop insl pop push popa inc add add adc add adc and and arpl add add stc adc adc and add add add add add add or sbb add incl pop pop or push add add or add sbb pop xor adc pop cmp add add lcall sub pop sub adc call xor add add add pop add add add add or add jbe add pop add add add add add cmp add cmpsb add add add cmpsb add add add add add add or adc lret add push popa inc add add sldt add add mov add pop adc test add negb add pop adc xchg add mov add sbb add add outsl push add or pop pop or inc or adc add or mov or or xor push adc pop (bad) (bad) lcall sub adc (bad) add jle add add sub add add sub and add add adc sub (bad) ljmp sbb pop adc inc add add add add add add add add add add add or add sub ss (bad) incl add xor adc add add add jle add add push jle add add pop sub add add add add add add add push add add add jnp add add add je add movsl add add add rorb add push sbb add adc and add add add xchg pop adc popa pop push push popa inc add add add adc and add add pop sub adc pop or add incl mov add sbb add or adc and add xchg and adc incl pop pop or jge and and sbb pop xor add add pop adc lcall sub push adc incl je add sbb adc and adc and pop adc incl adc add add add adc add add jle add add add or inc push add add add push add add add add add add add jns add add add add pop adc and add or add sub add or and add add add sub and add add push add push push je add sbb incb add and add add add add outsl adc add sub add cld add add add xchg pop or outsl (bad) (bad) call sub add push sub or add sub add xor add add adc add add push jle add add pop sub adc add add add add outsl add add add add add adc add pop add add add add add add or add es adc imul push or push and and aad add add pop or xchg add xchg popa and mov add sub add push pushf adc and add xchg and mov add decl pop pop or push pop dec xchg and in add add decl push xor pop adc lcall add xor add add add adc add add sbb pop inc pop add add add add add add add add add add push or xlat or xchg add add add out add add add or add or and sub jnp add add or add adc add add sub add or rorb add push sub xor and add or add jle add add jle add add pop or inc or add fldl add add add arpl add fldl add fldl add sahf add add add xor add add mov mov add add add add rolb add jae add or add add add add add add sbb pop and xchg add add add and add and adc stc add add ret add add push add sub pop arpl add cmp (bad) incl and add add add add and cmpsb aas sub add push and add and add sub add sub or cmp (bad) incl and add add and cmpsb aas sub add push outsl push add or add push or add jae add or sbb add or inc add add pop or std (bad) (bad) incl push sub add or rorb add push sub xor add add add adc adc and add or add addb add lea push sbb add xor add or sbb dec sub add sub add adc add aaa add popf push sbb lahf xor add add addb add addb add sub add sub adc add sub xor add add adc add add movd add add adc pop adc inc adc add lods add add add add add add add jge add xor add and add push add add add add add or add add add add add add add adc add sbb push sub cmpsb aas popa add jle add add or add and sbb pop popa or adc sub add add add pop lcall pop adc pop adc cmp (bad) lcall sub or add sub je add sbb add add push add sbb adc or or or push cmp (bad) pushl add or add or add adc adc add sbb or pop xchg adc adc push cmp (bad) (bad) call or pop adc push pop pop pop adc and incl add arpl pop adc pop pop xchg and add pop adc cmp (bad) (bad) call push pop and or movlps cmp (bad) (bad) call nopl and add pop sub adc pop punpckldq or add adc xchg adc adc and add add add push cmp or add mov or adc push adc cmp (bad) call add sub add add sbb or pop pop adc pop xchg popa adc je add sbb or or pop adc or popa shrl add or adc pop pop xchg and adc cmp (bad) call or pop adc push adc cmp (bad) (bad) call or pop xor adc and add xchg adc and add xchg pop adc cmp (bad) (bad) lcall push sub adc outsl sbb add or add add add pop or add mov cmp std (bad) decl jne add add add xor add add adc add add push jle add add pop sub add add add add add sbb add mov add add add add add add add add add add leave add add add rclb add push es add adc pop outsl xchg and add add popa pop es push popa inc add add add adc sub adc adc sbb pop adc add add sub adc and add xchg and add add incl pop pop or pop or add or add or pop or pop add add xchg add add add add xchg add add add pop sahf pop xor sbb add call pop and add add add xchg pop sub sbb add incl je add add adc and add add add add incl add adc add aam add or adc add add or add arpl add add add arpl add push add add add adc add pop add add add cmp add cmp add push or add mov and or popa pop inc pop push popa inc add add add or and and sub adc add and or push add or pop pop or and pop or or incl sbb pop sbb (bad) lcall sub sub adc adc inc add add add add add adc add sub jbe (bad) call xor add add add add adc add add push jle add add pop sub adc add add xchg add adc add jo add mov add add add add add add cmp add add add mov add rclb add es add sbb add popa pop or popa inc add add add adc and add add pop sub adc adc and adc and pop adc ljmp pop add or push adc incl pop pop or or add or loope add or add sbb pop xor pop adc lcall sub pop jne add add adc and and sub add add incl add xor add add add add adc add add add inc or add add add add add add add add add add add add add add add xor add pushf add add add add adc pop or adc inc xchg and adc sub pop pop push popa inc add add add or cli adc adc adc and add pop or add add add and add or or incl pop pop or pop sub adc flds add xchg and add pop or call sub adc mov add xchg and add pop or incl je add add sbb incl add xor add add add add adc add add jle add add add or inc or add cmp add inc add add add sub add inc add add add jae add pop add add or or lret add pop push popa inc add add adc add or clc add add pop or stos push sub or enter xchg and add pop or xchg add sub add or pop pop or sbb adc add addb add add cmp (bad) lcall sub pop or pop (bad) (bad) ljmp pop adc adc inc add add add add add add add push add push sub imul xor in add add add adc add add sbb or add add add add add add add jo add push add add add add add imul add push add add or and and cld add pop or rolb popa inc add add add add push or stos or rolb add xchg and add pop sub or pop add add pop or mov mov add sbb sub add or pop pop or sbb pop sbb insb (bad) (bad) lcall sub pop or (bad) (bad) (bad) (bad) jle add add ret add add add ret add sahf sub adc add add add add add add add add add add add add pop add push sub pop (bad) (bad) call xor add add add add adc add add push or inc or add sub add data16 add add add add aas add add add add add aas add add add add add add or or int3 add pop push popa inc add add add add push or mov and add xchg and adc add out sbb mov add sbb mov add sbb and add push pop pop or pop sub or and add pop or jbe (bad) call sub sbb insb (bad) (bad) ljmp sbb add add add add add add add add add sbb add sub jne (bad) incl adc add iret add add add adc add add push sub add add add add add js add xor add xchg add xor add sub add adc add or add addb add add add sbb add es adc sbb push add popa pop dec pop push popa inc add add add adc stc adc push adc add add add sub add or adc pop or sbb add or add push or add or pop pop xor adc pop js and test add add lcall or cmc sbb (bad) (bad) incl je add add sbb (bad) (bad) incl adc add push add add add adc or inc add add add add add add add add add sub add and add add addl add add and add add mov add sub add push push or mov push sub rcrb add push sub add xor add add add add jle add add add pop add add add or add add add add add add add sbb add add add add add add add fwait add add add rcrb add push es or adc or add xchg and xchg add pop or popa pop pop pop push popa inc add add adc add and add adc mov add xchg and xlat add pop or and add xchg and add pop sub pop or jmp cmp (bad) ljmp add or sbb ljmp add or adc inc xchg and add pop or incl pop pop or and pop sub push or lcall sub adc mov add pop or incl jne add add adc fildl add xchg and push add pop or incl add adc add testb add add adc add add jle add add add or inc or add dec add add add add add add add add add add push add add add dec add add or add add push popa inc add add adc add or xchg add add pop or test xchg and add pop sub or xchg or xchg pop or xchg add add outsl daa add or pop pop or add pop sbb adc add sbb and or popa (bad) (bad) call add jno and sub add in or push xchg and or inc (bad) (bad) ljmp push adc adc inc add add add add add add add pop add push sub dec (bad) (bad) incl add xor outsb add add add adc sub inc pop add add add add add add add add add add add add add add add and add sbb sub jle add add add or leave sbb cli jb add jo pop add add sub add and mov add sub add sub add or sbb sub add add adc add add add add adc add add sub pop inc add add add add add add add add add add add and add or rolb add xchg and or sarb add add add sbb push add add adc adc add adc pop add add adc dec adc inc sldt add add add add add add sbb add mov add inc add add add add add add add add add add add inc add add add dec add add add push es or adc mov add add sbb adc movsb and add add lock add adc add or add or add add add add add sbb pop jg aas sub add push and into add add or add or adc cmp (bad) jmp mov add and add add push add push or add add mov roll add sub add sub add adc adc cmp (bad) (bad) call add pop add sbb and add adc and and add pop adc cmp (bad) (bad) pushl add or add je add add add pop add sbb fadds add and or add pop or adc fdivr (bad) jmp add add and add or add adc sbb (bad) (bad) decl add pop push adc cmp push je add sbb pop (bad) add add add pop push add incl add pop shlb andl adc cmp (bad) call pop pop pop adc pop push adc cmp (bad) call pop push das or or (bad) (bad) call adc cmp add xchg and add pop sub jae add or or push je add sbb add or pop jae add or or adc adc inc or add xor add adc add jo add adc add add add xor add and add add adc push adc sub adc jne add add or add push adc and mov add sub add adc jne add add or add push adc jne add sbb sub or adc push xor add add add adc insb (bad) (bad) lcall sub fiadd push adc inc pop add add add add add add add add or add sub sbb push sub sbb stc adc je add add add or push adc adc inc sldt add add add add add add add pop add add add add add add add add add add add add add sahf add add add add add add add add or add add add and add add sub push add sub jne add add pop pop sub sldt sub insl add add and add sub add sub add jns (bad) decl je add add jne add add add add mov add and add add or add adc and add add pop adc cmp (bad) call add add in add add xchg add sub add sub or adc cmp (bad) (bad) call or sbb push lcall add sbb or push add add or push add add add or adc cmp (bad) (bad) call push pop pop adc sbb sbb jecxz (bad) call push adc sbb adc lahf add add add sbb sar lcall or cmc adc sbb add pop adc cmp or add or add add add or add adc cmp add pop add sbb je add add add or add or pop or sbb imul notb add add adc add adc add add add add adc add repnz add add adc add add add adc add add or add fwait add add add add add addb add add inc add add add adc add pop add add add add daa add push es or push or popa pop sbb popa inc add add adc add adc out add xchg and add pop or and and fiadd add in adc pop or add add outsl xor add or or incl pop pop or pop sub pop or call add dec xchg and sub adc add add cmp (bad) (bad) incl jne add add adc (bad) dec add pop or incl add xor add add add add jle add add push jle add add pop sub adc add add add add add add add add add add add add add add add sub add sbb add sbb add add pop js push popa inc add add add adc pop inc xchg and add pop sub adc push adc add add add outsl xor add or push and and mov add add add xchg add add add add xchg add add add sub add xchg pop pop jnp popf pop adc incl pop pop or int3 or add or add or pop or or adc call pop and add xchg and add pop sub pop sub pop pop adc pop adc incl add xor add add add add adc add add add pop add add add or add push add add add add add inc add add add add add outsb add add add xchg add add add push or add mov add xchg and or popa pop sbb popa inc add add push add add add daa push add pop or and add xchg and cmp add in push or add add add xor add push pop pop or pop or add xchg and add pop or incl sbb adc add or add cmp (bad) call add add pop sub sub adc adc inc add add add add add add add add add add add sub add sub push (bad) (bad) incl add adc push add add add add adc add add add adc add add or add rolb add add add bound add bound add leave add add add add add add add add add add add bound add shrb add push es or adc je add xchg and or popa pop adc add add adc add adc add add sub add add pop sub adc adc dec xchg and or incl mov add sbb add or adc popl add xchg and add jle add add add add add add add add sahf pop or incl pop pop or and pop sub pop or call add add add ljmp incl jne add sbb adc add add cmp (bad) (bad) incl add xor add add add add adc add add add add push sbb inc add add add add add add add add add cli add add or fcom or add sub add or add pop adc add push add add add add add add add inc add add add add add add add add adc add add pop adc enter mov add xchg and xchg add pop sub pop orb add add or push and add or add or adc xchg fimul je add add cmp add fcompl adc adc inc push add add add add add add add dec add add add add add add push pop push xchg and or add add adc pop add add adc jle add add mov pop and add add pop adc sub push adc add pop adc sub add sub add adc add add outsb mov or add add xor jmp add adc add add push jle add add pop sub add add add add add add add jge add push add add add push add add add add add adc add cltd add add sub add es adc pop or add popa pop sub popa inc add add add adc and add add pop sub adc sbb add add add add add or sbb add incl pop pop or testl sub add or notb add or sbb pop xor sbb add lcall or cmc adc and add add add add incl je add add pop or add incl add adc add fiaddl add sbb add jle add add add add or add xor add pop add add add outsb add add add add add cmp add jbe add pop add add add add or adc lret popa pop pop push popa inc add add add adc mov sub adc add add add mov add sub add or pop pop or pop or and add or dec adc pop or xor add add add add data16 (bad) lcall add pop (bad) (bad) ljmp sbb pop adc inc add add add add add add add add add add add sub sub data16 (bad) incl add xor testl add jle add add push jle add add pop sub adc add add add add adc add outsl add add add add add add add stos add add add add add shrb add push es add sbb add push add pop xor push popa inc add add add adc pop insl xchg and sub add adc and and rolb add add add add add or adc and add add add add incl pop pop or mov add or mov add or add sbb pop xor adc pop ja and add call push pop push xchg and push add pop sub pop sub adc incl adc add out add sbb add jle add add push jle add add pop sub adc add add add add cmp add or add or add dec add add add add add add add das add push sbb add adc and add xchg and cmp add add popa pop jbe push popa inc add add add adc stc adc adc and add xchg and mov add add add add outsl cmp add or or add incl pop pop or or sbb or or add call push pop pop xchg and sub pop jne add add adc and and insl add pop adc incl add xor add add add add sub inc add add add add add add add add add add add xor add sbb sub jle add add (bad) add add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add push gs cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc jo inc cmpb cmpb cmpb cmpb cmpb jge inc cmpb cmpb adcb inc sbbb inc sbbb inc sbbb sbbb inc xorb inc cmpb inc cmpb inc cmpb cmpb inc adc inc adc inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc sbb inc xor inc xor inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc adcb inc adcb inc sbbb inc sbbb inc sbbb inc sbbb inc sbbb sbbb inc sbbb inc sbbb stc inc xchg repnz inc xchg repnz dec xchg repnz dec xchg repnz dec xchg repnz dec xchg repnz dec xchg repnz dec xchg repnz dec xchg repnz dec xchg repnz orb add or add add mov add mov add fmull add add or add add call or add pop add leave pop add mov pop add xchg or add add inc or add or add push add daa pop add or add xor add mov add fild add aad add pop push add addl add add cmp add add add add push add add add add add inc add add add add add add add add add add xor add pop add add add add add add add add add inc add add add add add add add add add add add rorb add (bad) or add or add add add or add add add add add and add bound data16 add add add add add add add add add add add add add xor add add add add add add add add add add xor add add add add add add add add add add add xor add add add add add add inc add and add add add add add xor add add add add add add add and add add add add add xor add add add add add add test add add add add add add xor add add add add add add add add add add add add xor add add add add add lret enter add add add add add xor add add add add add add add add add add add xor add add add add add add add add add add add xor add add add add add add sub add add add add add xor add add add add add add add add add add add xor add add add add add add jo add add add add add add xor add add add add add add add add add add xor add add add add add add mov add add add add add add xor add add add add add add add add add add add xor add add add add add add testb and add add add add add xor add add add add add add add and add add add add add xor add add add add add repnz add add add add add add xor add add add add add add add add add add add xor add add add add add add jnp add add add add add add xor add add add add add add add and add add add add add xor add add add add add add mov add add add add add xor add add add add add add loopne add add add add add add xor add add add add add add add add add add xor add add add add add add and add add add add add add xor add add add add add add add add add add add xor add add add add add add add and add add add add add xor add add add add add add add add add add add xor add add add add add or add add add add add xor add add add add add add add add add add add xor add add add add add add jmp add add add add add add xor add add add add add add add and add add add add add xor add add add add add add cs and add add add add add xor add add add add add add add and add add add add xor add add add add fidivl add add add add add add xor add add add add xor push xchg add and add add add add add xor add add add add xor leave mov add add add add add add xor add add add add xor inc (bad) add and add add add add add xor add add add add xor mov add and add add add add add xor add add add add xor sub add xor cmp xor xor arpl xor add add add add xor add add add add add add xor add add add add add add add add add add xor add add add add aaa add add add add add add xor add add add add cmp add add add add add add xor add add add add cmp add add add add add add add xor add add add add add add add add add add xor add add add add add add add add add add add xor add add add add and add add add add add add xor add add add add inc push add add add add add add xor add add add add addr16 add add add add add add xor add add add add mov add add add add add add xor add add add add stos push add add add add add add xor add add add add int3 push add add add add add add xor add add add add in push add add add add add add xor add add add add sysret add add add add add add xor add add add add xor add add add add add add xor add add add add add push pop add add add add add add xor add add add add add add pop add add add add add add xor add add add add add add xchg pop add add add add add add xor add add add add add add add add add add add add xor add add add add add add xlat pop add add add add add add xor add add add add add pop stc pop add add add add add add xor add add add add add add add add add add add xor add add add add add add add add add add add add xor add add add add add add pop or and add add add add add xor add add add add add add add add add add add xor add add add add add or and add add add add xor add add add add add add add add add add add xor add add add add add rorl add inc add add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg insl sub leave pop pop out mov imul mov aad mov jg stos js add sbb add add cmp add dec xlat fsts pusha ja xchg ds es repnz cmpsb dec adc (bad) loopne aam jp inc jmp dec (bad) das sbb add jne gs mov stos sbb inc scas neg push das je stos dec in and lahf adc xchg std mov in lds cs inc sub pushf stc xchg repz jnp adc out mov mov or add loop and pop jno mov mov pop cmp in or inc or push xchg imul adc mov cmpsb mov and add sbb stc mov (bad) loope mov mov xor sahf js push and mov lea das in xchg xchg lods or ret mov test stos je cmpsl loope mov ds decl mov xchg jge add data16 fcomps inc jge inc test pop adc cmp xchg out insl cltd xchg push out jg out call cmp mov shll lods dec outsl cmpsb cmp dec arpl push fwait mov js pushl dec sub fwait jnp cmp dec jge jae mov fnstcw lock daa stc xor push fdivl les sub into jne jo fwait test dec sub (bad) cld push sbb (bad) lcall test out arpl imul adc xor cld arpl fs push adc xchg pop sahf je stos mov insl jl rcll inc aas loope inc pop or cmpsl mov and xchg pop jmp mov fcompl cli cmp repz cmc je mov in mov aas mov ret or out popa clc movsl push rorl pusha push sti test jmp cmp std and dec jns lods out inc mov fstps jns or mov sbb xor movl lds incb push ret and negb mov sub xchg jbe dec ret cmp cld sub adc in leave cmc cmp arpl out loop sbb mov cld lods mov fsubrp or dec (bad) imul dec dec shll jecxz inc lods ret loopne xor push push inc cltd lcall in iret mov outsb inc and add jne cmp (bad) (bad) lock inc cmp sbbb cmp mov push push mov dec (bad) nop std nop ss mov rorb mov mov adc lds inc adc gs imul or pop jb cmpsl jno data16 insb in sub xchg push and push cmc out sub sbbl aam rol xorb enter inc lds imul push hlt orl inc imull out cmpsl inc mov jg sbb mov pop or lret inc push fsubrs lcall fnsave bt mov cld push es inc fmuls outsb dec fnsave sbb (bad) mov mov roll push adc das outsl ljmp push (bad) ljmp shrl pushf fidivl and push adc js mov xor sub test cs lret (bad) vmread rcrb jo jp mov and cld push (bad) lods mov enter lods sbb sbb inc daa arpl cmp lret daa int3 xchg stos ret out push pop bound js lret cmp repnz repnz stos imulb mov push push sbb outsl mov push dec jno jnp (bad) jo (bad) leave arpl lret cmc mov pop call cmpsb enter mov notb xor cmp imul pop push fldt pop push push xchg movsl adc sbb add jle xor cmp iret pop xlat shlb or orl or ficoml popa data16 fsubr adc mov add ret mov idivl (bad) jne push or mov gs inc insb sbb jl stc push sub dec call fwait pop push dec rcl sub mov int3 ja call jae loop mov mov das cmp mov pop ljmp jp mov cmp mov pushf (bad) (bad) jnp stos cmc mov repz cmp dec mov and mov mov movsb dec (bad) mov loope (bad) jb jecxz bound xor mov xchg fidivrl mov stos add (bad) leave pop cld xchg clc sahf aas lahf push rol mov pop add pop out lcall add jns lret lret inc and js cmp lret cli xchg gs mov dec xchg test xor dec repnz xchg pop jns sub dec lcall mov in dec adc cmp inc sub adc xor insl adc imul mov pusha xchg arpl aas sub inc int lret leave jno xor les jp add arpl mov xchg push imul and mov push stc xlat or rclb cmc pop movl lock test cmc pushf ds pop enter icebp mov ud1 mov mov (bad) cmc sbb and (bad) cmp jno scas jg dec aaa pop adc push lahf cli ja fcomps arpl xchg push sbb fwait dec aam jmp das jmp pop loopne sbb xor push push aad xchg xchg mov addr16 mov fsubr mov faddp adc or stos mov sub push add test movsb add pop jne mov pop enter xorl je aas pop jl fincstp inc jbe fcomps xor fs inc add or dec push mov or (bad) mov push es (bad) xchg push mov xchg push (bad) cmp xchg add out mov pushf push push das fmull push rolb es mov insb icebp gs adc js inc sti xchg inc sub jb addr16 jne sub enter xor sub ds or bound mov cmp gs test or js mov lea xchg push adc xchg arpl cs cmp and inc ror mov fidivrl inc repnz add mov and sub fnstsw movsl ja aam push inc mov sti add ljmp inc dec out xchg inc jo mov cmp xchg enter fcomps stc mov jg ss mov xchg (bad) mov les fldt or mov adc scas daa pop scas movsl std mov jae xlat lods jns and dec arpl int3 jge cli loopne push cltd rcll xchg and lret xchg xor jg jmp inc into test push cwtl dec mov add mov rcrl cmp xor push gs push xchg loope loop lcall aad xorl loop mov popa int3 lcall rcll rol cld cld sbb dec aam mov sub add inc push jns sbbl mov xor adcl outsb and inc mov cmpsl sbb repnz inc cmp (bad) sbb adc hlt mov outsl push jp cmp jae mov jne cwtl int aaa stos and roll mov incl jecxz das jp dec jnp rcr setge dec inc lds mov aad js (bad) loop into pop lahf movsb movsb insl mov sahf loope movsb scas insb js (bad) mov adc into test fcompl cmp jmp xchg mov jne enter fisubrl pop adc imul or fstpt jl jg sbb mov cmp xor dec cltd mov inc fs paddusb pop cld pop pop roll xlat push mov addr16 int3 sbb ret test push pop xchg lds cld xchg mov mov sub add outsl es sub fstps sbb sbb repnz dec (bad) out ret cmpsb lcall out inc xor inc out adc jno fcoms push imul pop xor stos ja outsb in fnstcw adc add dec xor push jnp outsl imul xor sub add cmc mov lcall out into aas cmc jecxz pushf mov xchg mov lahf inc push sub jge jns pusha jnp push sbb call pop mov sti (bad) out dec into mov or and negl clc dec jle lahf mov cmp adc jnp ret lahf (bad) push dec aam mov daa adc rorl jmp xor cmpl sbb mov prefetch push call or dec in lret adc add dec add cltd aas add adc pop mov dec sti repnz xchg and add inc orb xlat or mov push movsl and pop (bad) out (bad) mov dec insb push fucomi iret mov addb aaa xor and xor xor (bad) cmp pop cmp push inc insl sbb mov sbbb imul imul xchg mov mov xchg mov push lahf add mov arpl mov mov dec cmp push (bad) push and inc mov mov test add add nop push jge dec out mov sbb lahf jmp push or in jge divl adcl pushf push ss stos movsb int cmp fnsave (bad) dec (bad) mov sahf pop and xchg vpsubw mov jae jecxz and push cmpsb sub arpl and mov xor pop fdiv xor dec inc push mov rcrl fsubl mov insl test pop mov pop push xchg lahf xor inc mov mov stos aas add into pop fcos cmp arpl jg roll mov pusha fldt daa push fs or pop mov inc cmc cltd cmp xchg pop push test mov imull clc out inc jmp xor pop xchg add cwtl fs scas cmpsl lods mov xorl pop jb push jno pop sbb mov movb in jno push fist jg test mov test jecxz and sub ret fwait insb xor push fimul sbb lock xor stos pop ret (bad) std andl test inc inc test adc outsb test xchg cltd jle jno cmp cmp in rcrb movsl lcall jecxz (bad) push icebp mov insl aaa ret mov fistp inc test adc ret scas rclb adc jnp push cmp inc inc lcall inc mov xchg mov xor fidiv es jae stc jo pop dec or add jo cmp fs pop in clc dec fwait cmp mov cmpsb mov dec xchg imul xchg mov fstpt push fdivrs and outsb inc and sbb ret pop jmp pop addl cwtl sub xor mov sahf xchg pop popf sahf cmp bound loop mov aas push mov imul sub in repnz lods arpl idivl ljmp repz mov inc pop out jle cmp pop and stos daa cmp cmc push add pusha (bad) or jg jo push push lret xor cmp fsubrs out adc add sub pop or pop pop or push call nop aad shrl je into mov sbb pop sub iret dec notl and dec adc popf push mov mov movsl xor pop out scas int pop stos cltd xor jp jbe lahf idiv int jg jae ret shl or adc stos lret outsb dec and inc mov push push (bad) fldenv mov dec or test insb ljmp iret ss test add or mov push push (bad) push pop in sub push sbb and sbb mov in loopne adc daa lea cmp cmp js mov lahf lods (bad) pop test (bad) cmc test shll (bad) lret jl test sub lret xchg mov inc pop clc aaa ss outsl lcall jbe dec xor out push add xchg lahf arpl in imul out out pop jo out jns test imul sub inc aaa adc sub push cmp jnp cmp xor insl xor (bad) mov jecxz fsubr and imul or dec inc jne lret add sbb shrl (bad) aas out std jo push cmp imul insl dec inc movsl mov (bad) or pusha or cmpsl jle xchg leave sub fcmovb dec arpl lock jo fimul add fist sub mov out push jmp push enter adc test jg shrl mov scas pop (bad) push dec ljmp mov sahf jmp ss sub push repnz sub inc iret fnstcw (bad) cmp or (bad) jmp mov jne jns sbb lds aam add adc mov lahf repz ja mov popa mov enter cli cwtl cltd scas sbb (bad) adc dec cmp sub dec ds mov xor icebp cltd test movd enter arpl inc xor xorl pop es and mov lahf cwtl or xor sahf lds push push cmp enter cld add out jns mov hlt clc mov push mov mov lahf and andl ret sub fisub repz or pop push or push les into lret iret cld or sub mov sahf loopne (bad) xchg inc mov jns inc adc loopne lods fsubrl mov pop dec dec int3 pop iret lods test ret mov xchg lahf jns (bad) push pop inc decb xor jb popf adc mov sti pop cmc lret and inc ret xchg lret fdivrl je push int3 stc push mov push jge xor insb jmp out pop adc sbb push lock jae mov mov addl push add fistpl add clc ds and loopne inc mov adc push xor push cmpsb stos inc in add cld repz fidiv xchg jg inc push jl in pusha xor loopne rcll jo mov les cmpsb xchg test lods aam aam sahf lds mov xchg mov cmpsb je mov imulb rolb xlat mov pop mov sbb jne dec push mov mov inc mov sbb data16 dec sbb ds or push data16 inc sbb xor leave das and add dec and loope jb subl pusha xor movsl inc xchg xor xor out jae mov add icebp or fwait xlat stos movb xor sbb dec mov scas cmp push in mov inc push cmp movsb sti (bad) scas loopne and mov fwait push stos cmp rcr loopne outsl jecxz addr16 adc lods loope jnp push and cmc leave aad sbb lahf push (bad) mov cmp cmp pushf add xlat push xor mov jecxz or pop imulb push sbb negl jecxz push lds arpl xor jg dec leave aad (bad) into dec jne mov sub sarb mov test test cmp sub mov fbld stc rorl add cmc (bad) in fstpl data16 push mov xlat xchg test and dec lret iret mov sub mov sbb out jl fiadd inc in out jno ja jbe mov mov add cmp jns lods mov inc rorl mov dec and fwait xcrypt-cbc cmpsl xchg add push fimul mov cmpsl or cmc push je push fistpl mov mov cmpsl jb sbb sahf cld lods loop (bad) ficompl mov sti imul pop xor stos loope jo mov xchg jo add fimul (bad) lret in mov sbb mov or jb push jmp lods fldt sbb scas push xchg xor mov dec jl push push xchg pop mov jg (bad) mov jl lods cmpsl mov adc dec sarb addr16 mov into ret pop add pop push aas and jge add bswap fmull cmp xchg dec ja bound push scas and sbb das vcvtdq2pd ds popa sbb aas mov popw dec mov cld lock insl or (bad) fdivrp dec (bad) xchg jp inc mov lret sub push ret rclb mov mov add sti lock adc outsb out mov pop jmp jle or out test pop mov out jne sarw pop pop pop cmpsl lea movsl inc jno imul cwtl adc jns xchg in mov imul cmpsl and das dec sbb jge lcall push mov pop out or jb adc int jle cs xor (bad) jno repz fldenv adc gs in lret push mov (bad) jns sub cli movsb imulb sbb xor into pop pop das mov scas xlat out xchg loopne mov fwait in das inc jl out adc push xchg (bad) sahf add mov (bad) adc leave inc sub push pop rclb add inc jno out mov cmp add jp into pop or pop insl sahf and lods fadds sub aad mov roll xchg call (bad) mov in pop sbb pop xchg inc lock jns sbb dec out incb adc adc mov and cmp (bad) jae xor aam sbb out jns lods xchg div aaa std (bad) cmpsl or add push adc cmpsb lret insb outsb outsb pop data16 fldt scas or leave ret mov jo js sub call dec pop mov cmp lods pop mov fistpll cmpsb aam push lea mov popl dec out sbb sbb aas adc lods int push not jecxz popa pop and fcomps ljmp push xor jbe cmpsl cltd mov sub push mov mov fdiv adc testb mov push xor mov xor and adc daa sub (bad) aaa ljmp fldl sub stos clc ds xchg pop stc repnz dec mov jns add je (bad) jns lock (bad) adc popa sub xchg scas jg (bad) rorb xchg jl mov lds cmp dec lock and movsb psllw js xchg stos pop int3 push xor aam dec mov xchg xchg test inc push cmp dec xor lcall sbb dec (bad) mov leave xchg mov outsb fwait lea or sub jp popa in sbb mov lcall inc mov pushf inc xor xor sub push shrl rcrb pop dec sbb call cli (bad) ljmp mov and call mov enter or repnz sbb aas pop pop rorb rol in xorb dec jge jbe xchg loopne adc dec mov (bad) aad int3 pop mov sbb mov aas inc stos (bad) scas xorl jns das sahf (bad) mov jo in in sahf pushf inc sub int3 lcall mov mov dec fdivs mov aas mov ja das jno test mov pop into inc clc cmpsl mov pushf cmp adc pop das push mov mov loop addr16 in outsl inc lea xchg clc fnstsw subl push cltd rcl or push inc ja push clc adc and daa mov adc repnz cmpsl add xlat cwtl test xor mov mov ror out loop aam ficom jmp (bad) (bad) scas fstpl (bad) jo lret dec cmp mov test int (bad) iret jecxz and xchg mov xchg mov jbe lds adc cmpsb push mov insl test es mov push test cmpsb pop ljmp fldenv fistpll mov ret mov add pop cmp inc and roll sub scas mull dec pop push mov cmc cmp js sub push test imul dec insl sub cmp (bad) ja ss lahf faddl mov inc into (bad) mov and in jno or ja xchg fisttpll into push mov mov out xor xchg and cmp rorb cmpsl ficomp ret adc xchg jne jne fisubl inc dec pop ror fwait jle inc aam mov mov pusha movsl clc push pop repnz mov cmpl inc pop es mov cmc test out mov mov cmp and test ljmp orb insl or rcll jecxz and mov jnp pop sub fst xchg or out pop in mov inc int add sbb inc and fsts ja sbb aas mov movsb fst and sbb ds xlat push enter cli push pop add pushf cltd ffreep mov xchg movsl pop mov xchg xor fdivs xorb add es loop cmc mov sti or xor sbb test rcl xor aaa sarb xor push mov inc das rcll sub inc lock cmp iret shrl ret pop or dec xchg sbb dec ja add dec dec addr16 adc sar sub mov fmuls clc jo clc cmp dec jge xlat cld add repz test inc daa ficom dec fstl fwait mov mov hlt fisttp ret out sahf xchg sub and test sbbb pop or faddl pop out push mov jmp cmpl pop jp dec ds mov lods out mov mov fs mov and adc jle adc insl jnp icebp fistl movswl dec out repnz loop out mov lcall and js int xchg jbe add adc jae sti mov dec push pop xchg xchg mov mov sub push mov jg jo and jae repnz insl mov clc imul pop scas jbe rolb out repz iret mov push dec mov cltd out shl mov icebp xor mov jae out sub je inc dec loope sub sub int out or jmp pop pop gs jle xchg mov outsl lock jns xor movsb lret sub arpl cmp js mov lods (bad) lret mov xchg ss or test cmp lock and in js fimul push aam lods mov push mov adc and pop out out mov add cmp repz sub mov test (bad) sbb mov les push and adc mov fcmovne (bad) pop lret imul movsl add sbb inc mov mov lret pop lret rcrl xor or sahf fisubl cmpl aaa mov mov mov les stos pop and stos adc ds xchg and sub scas test scas jae lcall mov dec pop int3 and sub lock arpl inc imul mov cmc or pop orl fmull xchg aaa adc sub sbb cld sub and sbb or lds hlt mov jmp mulb ficomp sbb xor dec sub push lcall mov jns lock pop imul mov outsb xor andl movsl mov inc fs movsl mov inc jne mov mov xchg cwtl decb rorb rorb fidivl adc lds inc or ret jo aas mov (bad) jg clc mov dec push mov data16 and scas mov sahf inc inc xor cmp shll enter cmp add mov js jp xchg dec scas repz sti jne pop stos int ja std int3 add adc or fiadd (bad) mov mov cmp aad or mov ret pusha xchg cmp fdivr lea les push lods dec ficomp pop xor das pop push pop iret test mov andl data16 cld rcrb pop sub insb pop cmc and loopne cmp iret push mov or cmp fs inc mov sbb les adc lds cmp sub sahf lret cmc jp sub or shrl int3 sbb insl rcl jecxz mov mov sub pushf cmp push dec jae add sub xor xor cmp push mov mov ret and ja mov add sbb icebp imul pop xchg int3 rcl inc push outsl (bad) aas mov fs data16 xchg out js xchg data16 and cmp mov mov sub jmp fbstp push int stos shll pop jecxz insb jo xor push lcall push jnp xlat pop jb push push sti pop dec mov (bad) xchg stos leave scas aam adc dec xchg sbb pop (bad) mov and xor inc push icebp (bad) cli cmpsl rclb sub lahf jns sti inc mov push jns popf mov cmp test (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out sbb loopne cmpl mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret jne fistpl xchg mov je mov mov jb (bad) pop std fucomip icebp (bad) sahf outsl icebp add fs add add add out popf lret (bad) into pusha in mov repnz dec (bad) std xchg lcall cld rorb stos iret mov loope sub out and icebp push fsubl aam xchg xchg push push jns jmp fstps jae stos aas mov xchg cmp fmull push sub xor pop xor cltd sbb xchg dec pop pop mov push ljmp sub into (bad) dec cli xchg sbb dec (bad) fsubrl repz cli xor fsts lret and outsl and sub add cs outsb or pop (bad) js inc jnp mov insl imul adc daa insb xor ljmp mov push (bad) push in xlat cmc rcrl pop pop fcomps push xchg jge sbb fcoms sbb jns jg andl repnz (bad) out ljmp push test mov outsl cltd repz xchg cmp ja dec sahf call out sarb lahf cmp addr16 pushf lcall fwait cli pusha cmp cmp lods push xor ret dec cmp xor cmp sahf scas mov cmc pop out sub and sub fdivl (bad) nop int cmp adc in push mov int sbbl out and push or pop pop rorb (bad) mov pop test enter push sub pop fildl gs in imul push xchg out popf adc fadds mov pop subl clc aam mov out insb or jae jne mov sub sub cld or pop jg push mov sub adc xchg les push movb nop outsb and sub fsts add cmpsb mov dec push fild mov mov mov jp in (bad) ds cmp xchg jae mov pop mov sub stos sysret popl xorl and mov add jbe xlat rcrl popa push addb jmp cltd and or xchg (bad) aad xchg stc sub mov cld inc adc imul inc and je xor jbe scas xlat fnstsw flds test int3 mov lods xor and dec lods xchg pop (bad) clc aad inc mov (bad) mov jmp outsl add mov (bad) dec lea mov cmc lods mov push push jmp in lds stc test dec adc loop mov aaa adc cmp pushf cli cs push sbb arpl jl and jmp insl out or idivb push sub pop jmp inc aaa clc jns jecxz and aad xchg les push out pop mov cltd push fdivrl pop jmp cmp and lret mov xor inc cwtl loop (bad) push in mov cli aam lret rep pop cld mov stos popa push dec xchg ljmp ljmp movsb je sahf sub inc jno cs ja and jmp mov mov xor inc sub pop or xchg sub ds mov (bad) mov mov cmpl or or dec xchg mov mov cmp dec mov mov and hlt xchg bound nop lcall stos test xor sub jmp cli fisub dec sub mov notl (bad) sti lods dec sub or cmp adc push mov mov sub aas outsb mov dec push push add mov mov lcall adc push jnp sti or aaa int3 mov cmp orb mov dec cmp dec pop jg cmp je fcoml lret pop push iret push out fisubl lds out data16 (bad) dec out and xchg scas int3 out cmp adcl cld and in (bad) fisub sub rcll sbb jnp push add inc jns add push lods cwtl scas vmovaps idiv aad cmc jge ljmp fidiv repz mov enter xor mov fbstp push xchg lea adc cs repnz push je rcrb pop dec add aam stos pusha mov mov lea aas test jns (bad) and popa pop xchg or enter clc xor push in mov jmp or mov fs daa pop inc pop sub mov popa mov (bad) repz xchg adc inc bound imul xchg and pop or xchg sti mov dec lcall rol mov xchg hlt sbb unpcklps mov cmp or dec and leave xor pop adc sbb or iret loope loopne pop aaa jnp fcmovb sarl and jnp data16 mov iret pushf into or or cs in stos rorb fcmovne pop sbb sub sbb aaa fcmove xlat js stc scas lods inc pop rcrb mov mov ficomp scas out ret rcrb mov stos fidivr movsl gs arpl jns push scas sbb outsb cvtps2pi push fistpll push rol jmp xor pushf scas int3 lods pusha or push push mov sub jb sub inc lock xchg mov pop sub sbb jmp push push jmp add xchg pusha adc push mov xor cltd sbb (bad) cmp sbb pushfw pop ret inc in push adc jnp outsb shrb or mov push fsubrp cmp cld test lret dec push mov add add ret hlt out sahf (bad) sbb mov in lock rorl xor fidiv cld mov lock into adc scas movsb bound jp mov (bad) inc push div mov popf mov cmp xchg enter adc cmp or push or sti xor fwait divps jle imul cmc loopne and inc add mov mov (bad) aas imul and mov mov jg or test pop je adc sbb rcr cltd loope ret into xor or jno dec inc out nop es cmp sbb push rcrb jno jl orl aad cli sub pop ja lahf test mov sub das je mov jl mov pop outsl (bad) lret mov insb popa mov mov cwtl sub mov push pushf cmpsb lods test jg xchg lea jae jge mov push cmp xor sub mov (bad) testl loop or cs std mov insb int mov call mov jg and adc add lea mov sub mov mov jge adcl scas sarb dec cmpsb jae inc inc sbb jns mov fisttp pop out jb cmpsb mov mov pop out mov fcmovnb imul push mov ret inc xor jno mov pop in andl fdiv leave push icebp test sbb mov inc or test and fidivr negl iret adc pop sbb xchg imul shrl out mov cs inc mov sti jae cmc lods in xchg repnz inc mov cvtdq2ps out ja les xor jg xchg outsl xchg mov adc xor jo and jle cmpl pop sti ja data16 mov sti sub cwtl pusha lahf iret xor add test sar out or fldcw push into jmp fildll push sub mov cs popa mov enter pop and dec cli jbe adc in gs dec mov jp (bad) ja jns and popf adc aam adc adc sar (bad) add inc mov xchg imul scas pop and les inc sbb xor leavew inc pop (bad) jne lods pop ret in mov lds lcall stos jne jmp mov lahf sub icebp or insl movsl test mov jo (bad) push data16 sub movd push push push (bad) xchg outsl cmpsl sbb imul dec xchg faddp push pop or sub mov jo dec dec test dec andl in xchg fsts mov std and idivb out push or imul inc sub mov jmp or fs and or push sub pop sbb aaa xor imull fadds inc mov outsl mov and and adc (bad) imul (bad) pop sub sbb in push mov movsl mov push inc pop xchg sbb mov std mov or je push leave aas pop ret mov scas fistpl push das movsl sbb inc xor pop (bad) lret cmp jecxz pop movsl jp scas into frstor movsl (bad) jmp inc popf jns jae mov in jb in rorb mov sub imul stc imul fidivl int in add lcall mov (bad) movsl mov cmp adc ffreep mov xor test in adc cli inc cmp repz fisubrl or jae movsb notb adc pop pop rcr lcall mulb cltd adc inc xor shrb xchg (bad) push into jmp and loopne (bad) pop ljmp lods fistpl or imull mov out aad arpl sub jecxz loope adc cmp jmp inc std cmpsl icebp xorl mov pop ja mov sbb fs nop pop data16 cmpl fmulp push rol mov sub pushf cld adc (bad) enter mov aad jg xor fcom xchg push dec insb paddsb fwait push dec movsl outsl (bad) jp (bad) mov out je hlt xor lods insl je lea das in aas sbb js test or pop mov std inc inc rclb sbb push cmp popf sub fdivrs add sub (bad) push inc mov mov rcrb push cli aam sub jecxz sbb imul pop and dec mov and cmp (bad) add stos jb (bad) adc mov pop or cltd jge popf mov loopne add mov and xor data16 or adc xchg adc test ja pop (bad) clc and dec (bad) lock je inc ljmp push fimull mov lret or call fcomp mull sbb popf movb movb arpl ret jne pusha sbb inc leave xor jo loop mov dec dec xlat push mov adc shrb jmp mov (bad) sub sbb call xorb push mov lods in xchg dec fstl sbb sub and int3 test xor ret xor outsb fsubrl sbb das xor cli push xchg and sub pop jmp mov mov sub dec imul xor out xor test outsl in das test jecxz push lds jle jg xlat ljmp add fnsave imulb mov cs bnd xchg adc push mov inc cs cld loopne push cltd je or es cmp gs ret mov aaa adc inc daa push adc pop mov cmc imull sarl inc test flds cld lret cmp mov jae (bad) dec outsb push push repz sbb lock adc sbb pop es xor push out bound leave fistp push bound ljmp mov in dec pop sbb pop out adc decl scas xor lods xor into mov jl dec ficoml xor fnstcw outsb fdiv push sub jp sbb push movsb test lock cwtl inc out mov ljmp push sti dec inc add (bad) or mov sarb push mov (bad) outsl lret jmp xchg mov add loope push add or enter ret pop or mov loop or fiaddl into mov dec jbe xor sub sahf hlt push lret dec sub xor lahf xchg es jmp jp adc pushf adc or xlat jbe inc (bad) lock xor dec mov lret lds dec fimull scas jle shl outsl jae xchg sbbl or out inc ret cmpsb inc jle mov out rol sbb dec fwait adc push push dec test js int3 jmp shr jbe iret ljmp push stc pusha stc lcall hlt push rcrb in sti cmpsl jl sub push int3 call into add xor jg fcoml stos movsb mov fucomip aas (bad) test and mov fidiv in or jo mov inc push nop jl nop stc jnp pop outsb cwtl imul aas (bad) mov add in xor sbb insl cs test popa test jno xorb aam lret repz cmp lcall aaa js sub out ds in mov ret xchg push jecxz jp sub iret bound push jmp mov xchg scas xchg out rcrb sbb (bad) (bad) loop lahf xchg sbb pop push mov cmp inc inc movsb jo mov cltd mov imul sbb sbb lahf lahf test fldl ja sub out (bad) cmp not pop xchg pop xchg scas mov jle or (bad) aad stc push movsl sub rcl fwait aas test adc fwait pop jp or cmp mov fadds mov cli outsl mov (bad) xchg stos add lahf (bad) jae xor adc sahf fstl movsb xchg cmp insb sti in (bad) fwait mov les jnp add pop movsl fsubs dec push pop movl dec adc lret fcomps cmp xor imul (bad) mov inc mov jmp sub mov addr16 push or xor cmp dec mov ret and inc mov das mov push arpl and (bad) and mov mov repnz jmp xchg add push mov xchg scas dec pop mulb lock xor (bad) lret pop inc mov mov nop pop and xor mov jbe iret stos cltd mov ret je xchg mov fisttpll out in or xor imul cld jne inc lea push scas stos sbb sbb icebp xchg lock mov cs or stc jecxz sub ss sbb xor lock mov dec int3 inc movsb push scas ljmp sahf cltd xrelease lds add dec ret sar or xchg push jg stos mov mov xor and addl (bad) test lea ds sbb xor in jmp sbb cli sbbl out stc or cmp repnz push stos fcmovbe mov xchg lahf xchg inc xchg ret js cmpsb adc jp lret gs or test jle mov jg cmp int3 cltd xor int3 mov les sarl decl call xorl or in movsl call int out push jmp xchg (bad) hlt sub clc jo adc push (bad) cli pusha sbb pop repz fnop and and mov push cltd neg adc and test pop mov lds dec push (bad) pop add mov fisttpll mov scas testl xchg inc mov inc mov cmp ss mov cmp jae dec sub out (bad) mov cwtl cmp cmp add pop jmp adc push cmc lahf fisttp sbb leave dec jns loope sub fcompl mov jne int adc in adc dec pop repnz dec xchg in out adc mov test push mov mov fdivr and inc test in jl daa insl pop in mov iret inc sub movsb aaa addr16 and enter rcll test cmp jg rorl (bad) outsl (bad) fcoms cwtl fistp ss xchg add insb mov out jmp leave mov inc jnp (bad) cld pusha and dec dec push test and aaa add or aas fcomi loop add inc (bad) jns ja mov and adc int (bad) xlat inc cmpsl or nop cmpsb daa or pusha xor push xchg pop inc and fwait push sbb data16 push mov jne pop shrl fcoms cmc sub jp adc into ljmp clc add sbb arpl les rcrl loope aas inc hlt xor test mov mov leave xchg sub mov jecxz push pop negb fcompl (bad) lret pusha jae inc jp data16 dec mov cmp lcall in cmp jbe fbld mov pop and mov xchg sbb inc xor adc out xchg xchg movsb mov inc in mov sbb push lods pushf out xorb adc xor fildll lcall pop inc push jmp jg,pt inc es test repz push xchg (bad) aaa mov aaa adc xchg idivb add and cli fcmovbe push and push jnp mov scas rcrl dec fs add lods mov sub mov outsl dec jl les das and pop mov ljmp pop test mov add je (bad) push ret outsb xchg aaa stc inc jmp sub ljmp in leave or fs imul repz les dec dec xor les ds sbb push into sbbl por mov add lock mov mov and lods rcll (bad) mov (bad) push sti adc push mov cmpsl dec adc imul in iret inc (bad) xor aaa ret imul inc lds or jg cmc adc out fistpll es xor push sub inc ret movsl pop push addr16 jg adc mov pop dec pop sti mov sub jbe test in pop xor shrb push fiaddl inc mov into add iret pop add cmpsl imul cltd lock push out divb (bad) int loopne sti push jecxz jae mov movsb mov push cmpl test out data16 std cld popf (bad) gs bound lret ficom jge ret mov mov (bad) aad mov pusha fucomp fistl sti push inc int test shrl sbb push (bad) dec mov repz inc mov jno mov (bad) iret cs and cwtl cltd push mov lret arpl cmpsl scas call scas push dec dec sub lea mov mov jecxz leave mov or or or test lods xchg or mov ret sub testb xchg push icebp loopne cwtl sub pop dec push ja mov add push push cmp pop or mov push les push pop pop push push dec dec adc add lret cli mov or movsl jle xchg push pop push mov aad xlat add gs test mov into hlt std scas ja xchg outsb mov push adc mov jle ss pusha inc fs mov sbb ret add cmpsb out mov pop imul cmpsb push adc ret insl aad pop dec push stos repz cmc (bad) imul and pop jmp test and in cmp lods lea das cmp push test je inc mov test pop sbb mov mov shll jmp movsl adc test mov fisub mov fwait cli shrl imul xor sbb xor jb cld loop mov pmuludq aad sub out sbb leave mov lods ja add fcomi (bad) popf aas inc xor (bad) jmp push (bad) adc mov pop mov push xor mov add (bad) testb or stos xchg inc shr les lea icebp in ret outsl jmp lcall shll loope in add mov mov and (bad) daa mov cs in js xlat mov xchg adc adc push mov (bad) leave scas movsl movsb and mov das jp,pt loopne leave push sahf (bad) add inc mov mov mov xchg nop js (bad) pop stc jns sahf popa push imul imul pop aaa mov or ljmp inc das pop out mov out adc sbb nop cmp xchg jo mov lods in stc pop das sahf sbb roll xchg insl ror and lcall lret (bad) jae sbb lds stos pop mov loopne adc iret dec xchg in cmp aam and pop sahf mov movsl hlt je mov out ja pop dec lcall test xor jbe xchg notl cltd bound jo mov jnp pop ret stc jb jb idivb jno notb je scas and push cmpsl mov and insl call (bad) jns xor int3 pop sbb adc inc out into mov jo out xor sbb or test add pop sub mov adc xchg push jno pmulhw sbb out mulb push test and dec lret pop out push lock insl outsl jbe mov out add mov fistpl jl bound rclb dec imul sbb inc jae scas lock mov mov imul sbb sbb aam in stc push jp stc push (bad) loope jbe movsb scas fcompl jmp (bad) sub add xor (bad) mov push sub lock push or clc xchg and xchg sbb fidiv sti mov pop pop (bad) int fnstsw fmull jae adc mov (bad) pop push xor xlat push push lds sti dec xchg mov test fisttp and pop js ds into xor mov stos and movsb push push (bad) dec sbb into je mov ss lret ljmp fwait xchg dec repz dec push sub cmp pop iret inc mov sbb mov dec dec mov mov in cld add adc lods jmp adcl fs data16 xchg fidivr pop mov push scas xchg repnz (bad) sbb ret rorl mov movsb dec test std fsubrs in mov sbb xor dec sti jne and pop cld js imul jmp loopne bound push and in xchg mov pusha imul pop scas or xor cmp inc cltd jl mov adcl fisttpll cmpsl dec lds cmp outsb pop lock xchg sub xor jp push add cmp and pop addr16 mov and xchg dec (bad) mov cmpsl push es xlat mov mov cld sbb pop cmp aas adc mov jmp add pop pop cmp pop xchg popf dec mov cmpsb int3 pop fwait lock mov xchg arpl mov stc repnz push xchg cmc les adc jbe xchg and fstl dec jp sbb pop ret ljmp adc jp stc (bad) movsl jae pop pop pop clc pop in pop scas test or mov insl push out aad fsub sub sub fcmovbe sbb ret adc sub cmc adc push rep outsl ret aam lods mov loop aam div lock aaa (bad) stos sti sub sub mov dec add ljmp mov jp mov cld fimull std (bad) arpl cltd dec push arpl mov pop or test jl sub jl mov jb in xchg push (bad) cld mov jmp es es pop movsb add ljmp cmp adc aas dec mov push cmp mov imul scas stc rolb pop xor pop ret add lret stos mov sub stos jge or stos mov add and (bad) inc dec pop daa jnp bound cmc out xchg push cmpl out int mov mov cmpsb jecxz xlat jp adc iret test sub test sahf push xor jecxz push enter inc leave pop xchg pop aaa pop xchg das stc fwait add ret std inc cwtl repnz (bad) inc je bound sbb inc sbb sbb push lods aas sbb cmp pop lods push mov scas pop pop pop lcall scas call inc stos add inc adc movb xchg mov jae pusha into or add push cltd in out cli or jnp sbb movsb xchg mov lret inc (bad) jbe or (bad) jecxz cmp subb mov pop jecxz pushf inc mov mov test fstps push stc cmp push out out and pop rorl xor jge cli inc inc cmp and sbb stos sahf add (bad) aad push aad and imul xor mov xor stos cmp lods into jo push (bad) cld dec sbb push cs loopne cmpb fcoms mov int3 (bad) outsl aam je aaa cwtl in adc lahf lods jb outsb jg,pn (bad) in into and and mov push add (bad) rclb sub sub mov fstpt mov enter push push gs cwtl push enter popf and (bad) js leave push pop pop sar dec enter lcall loope inc jbe or stc jecxz inc push push push stos dec in pop enter mov xor out sti outsl ss lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov (bad) push jbe add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb fwait insl fimul pop mov aad push fnstcw (bad) out add add cltd stc mov mov data16 pushf sub (bad) fwait sub int3 fiaddl mov mov add mov fiaddl (bad) outsb sub mov addb or mov push mov inc push lods pop cld cli sub (bad) or fwait ret int3 addr16 and inc adc cmp mov repnz add sbb cmp mov insl inc jge and dec sbb push out inc frstor dec xchg xor ret jmp insl push into inc inc mov fwait jp enter div push cmpps (bad) call stos adc popf outsl jns pop lret pushf mov and fwait dec mov imul rcrl adc imul jp mov ret out inc je gs sbb xchg repz mov add sbb sar outsl pop dec mov xchg mov ds popa push out popf not rcr xchg repz adc (bad) sub push aam xor jecxz int3 cmp mov inc pop push aaa clc cmpsb pop lcall xchg push pop adc imul dec adc fistpl in inc scas dec pop imul xor ja jg cmc xor shlb adc adc pop pop xor adc sbb push mov cmpsb icebp jno xchg lods adc subb shl cwtl addl adc outsl dec dec fdivp push ds cltd add mov mov icebp fadds push fst or sub lret insl inc push sarb (bad) stc ja cs mov xchg scas mov leave inc jmp adc xchg pusha popf lahf push mov fs inc mov xchg cmp das leave pop (bad) fist popa (bad) cltd xlat mov pop and pop test dec outsl loope iret add ja test lret fwait jp in lock in mov test mov mov gs jp mov mov adc repz mov mov xchg divl adcb es sbb xchg fs es std jmp and shr adc lods xchg pop sub nop jbe jb cltd cltd sub and scas sahf inc pusha sbb mov push flds fistpl mov data16 mov pop jle repz in jne ficompl stos imul push fnop dec sbb inc pop cmpsb xor ret ljmp sar (bad) xchg aad xlat aad cmpsb push sbb jge xchg mov rep push or les popf lods data16 xor loope enter dec add inc add xchg push mov cmp scas sub (bad) fldl mov (bad) or shll mov call inc mov pop mov imul sub icebp push jp jg xor (bad) imul rolb xor cld or jmp mov lcall test repz lods xchg jmp jnp adc popf inc lret mov jg insl sahf adc inc loop cmc pop inc stos out outsl push add add xchg lahf in xchg jbe xor push xchg leave lods jae (bad) movsl (bad) insb pop lock lea clc lods xabort pop movsl pop loope (bad) pop cmp (bad) dec xor sub scas dec pushf cmp shlb repnz ret mov mov aad cmp stos inc mov lret mov cli mov gs pop roll pushf hlt sbb and adc fldt push pop (bad) mov lods sub aad lea call jne cli arpl push popf js xor add out (bad) popa pop or int3 in sub fsubl mov fidivrl mov nop cmp mov js je inc push or push rorb ja adc in or clc cmpsl lahf mov sub dec insl xor pop (bad) mov and mov xor push popf inc jno mov fstpt mov shrb jns mov in negb add loop repz les push ja cmc sarl or scas add outsb (bad) xor xchg and or testl pusha jne hlt pop test push (bad) je xor shr aas jmp add stos cmp and sub jle fwait pop cltd and outsb push push orl ljmp jge loope (bad) outsl leave mov stc lock mov adc fistl mov lods into sbb mov into pop shlb aam sub loop imul cmp cs mov or jmp xor mov es lds xor data16 sbb mov mov mov mov add dec xor lock mov scas in sbb sahf xor cltd (bad) in nop (bad) ja lods inc rcl stos in loop aaa xchg xchg mov adc idivb sub push jle sub push push scas jae push xlat jmp std push sub cmpsb arpl ja int loop jp mov (bad) icebp pop mov add dec testb mov test jno xchg fistpl mov or ljmp push loope pop mov outsl (bad) cmpb cld ret rclw push pop mov jbe pop sbb jecxz inc add push je (bad) jno popf push insb cmp or xchg out jmp sub xchg lcall mov fwait pushf sub xor jmp arpl xor cmpsb xor xor je stc ds int3 pop inc xchg cmp push (bad) movsl xor in xchg cmpsl punpckldq out fs xchg orl or dec mov lods cmp test and (bad) cli inc lds es cmp ds jo inc test jb lock jno xchg dec adc jbe mov mov mov mov loope push dec jmp xor cmc shrb enter or imul xor gs lock stc rcll xchg sub ret jb push cli (bad) divb (bad) test and jno,pt scas lds dec jmp nop lods stos fwait inc dec out lcall or add lret xchg adcl ret (bad) dec jbe mov sub or iret jb push mov jmp out dec aad (bad) jnp loop xor aam mov jp mov xchg xor mov push movsl fadd jl,pt mov stc push or mov or ret or movsb fisubr jmp pusha xchg clc test add sti pop xchg ljmp xor fbld sub adc xchg imul xchg aam dec xchg cwtl movsb and mov cmpsl jl dec mov (bad) xor std insb hlt xchg cmp (bad) incb jge les dec push (bad) sbb xchg mov cltd pop cmp mov pop jno cmp popf lret arpl xchg repz jmp (bad) icebp and sub outsl jne (bad) sbb inc lea cli dec xchg fcmovnbe iret into jbe aaa out dec xchg pop push repz test xchg lcall mov test ljmp repz and xchg and xchg mov fcompl push lcall adcb mov fildll out js mov jo das adc loope sbb jle lds mov cwtl les mov sbb (bad) ja addr16 sbb and into pop lock sbb cmp arpl js sbb mov xchg cmp les stc push cs jp insb adc (bad) pop sub aaa fisub xchg cmp add cmp fstp add test sub js sbbb and mov cmpb or adc mov dec test loope mov cmp adcl in cmp mov cmp add clc leave mov mov mov inc push lods nop int xchg sbb xchg mov mov sbb inc mov cld pop outsl mov test je mov xchg adc fadd mov push outsl cmp dec ljmp pop push push mov out ret sub cmp test sar or (bad) ja pop mov mov and mov (bad) mov jno jnp arpl dec or cmp jne sar sub clc pop jg sarb aam sarl icebp add push mov jbe fistp fcoms jb xchg pop jp popf xchg fcomps push repnz jp mov es pop imul jb mov out cmp imul mov in adc adc jae dec mov out lea cmp mov (bad) mov fs push fs rolb in mov test iret out fild addr16 pop adc out xor cltd fwait sbb out adc shrl in (bad) out das pop push ljmp call jle fwait inc or sub call xor je add mov xchg sub or mov jnp (bad) fmuls scas insl (bad) cmp push loopne sahf lods aas insl mov cmp xorps js loop adc fwait dec mov mov mulb or call mov movsl mov and cmp cmp mov fstpl sarb sbb out repz in in int ds push test adc dec mov sbb push add scas sub xchg test ss cltd nop push test cld adc pop mov jbe or out mov xor (bad) sub orl push pop cwtl aaa jns bound sbb test add clc adc repz repz pop pop imul pop xor push ss scas or mov out sbb sbb inc data16 mov push subl xchg jns cmc pop rolb jbe in ja fs mov pop cmpsb cmp xchg xlat pop lds mov jbe adc cmc test mov pop fsts rcll push loope sub dec xlat dec jns (bad) jo (bad) outsl insl mov xchg pop fsubl mov push xlat pushf int dec lahf xchg cmp mov add mov imul pop rol mov jecxz les inc pop or push repz sub mov movsb test loopne rclb jnp cli add add or rol movhps insb inc lret push mov push sarl outsb jg jmp jle sub sub push inc cld dec hlt mov xor test xlat mov iret insb sub stos pusha repnz orl and mov jo sti pusha or (bad) int3 std jp mov cmpsl and dec stos popa daa mov jae push dec mov push fistpl test fistp sti xlat leave adc outsb and push push sub insl lods outsl out mov mov mov and in sbb js xor mov imul movsb pushf insb fcoml test dec scas inc les mov les xchg mov and and xor scas lret rcrb testb je in test scas test addr16 lods jae loopne pop xor mov (bad) hlt ficomp push sub data16 out pusha cltd test push xchg xor ja and xchg inc in xor aam jae adc push push lea xchg jnp pop or insl in lods inc pop mov std mov rorl dec in adc push and lcall cld pop xchg pop cli add and clc pop mov mov lods incl je bound push pop add xor imul ja in cmp loop pusha lahf add jecxz and sbb popa dec pop mov mov jae arpl cld pop inc gs and xchg adc or add loopne orl stos icebp out lret pushf mov pop inc lock cs or xchg mov jbe aas incl js dec xchg repz aaa mov inc inc and add inc jmp cmp lret mov sub mov fist xchg pop into popa fucomp cmp jae addr16 fisubr xor hlt adc push dec adc or ljmp leave data16 dec xor into dec xor mov shl out cs (bad) inc jb mov push sub jle imul inc xlat (bad) js test and pop repnz or mov aam mov jnp or xor sbb or sbb fadds mov insb inc mov push test mov dec jg pop sar and add nop jo jo xchg gs les cmpsl pop popa fdivr (bad) push inc mov mov push out push lahf aas lea ret (bad) insl mov mov jne xchg lea jno jp (bad) mov mov cmpsb push or lret js cld aam inc js and lock jge fcomp inc or jns mov scas push cltd adc mov or pop icebp push in xor mov sti push mov ret sahf fildl jge pop fsubs cli arpl lock das adc jp cld dec mov inc jno sbb je mov popa jns (bad) pop and scas xchg jle fisub inc mov imul (bad) popf or add jns adc sbb cmp cs mov dec in addr16 adc std ds xor outsl adc adc enter fildl ds or mov pop test jle sbb lds jge mov leave pop xchg dec out pop das adc leave cmpsb sbb lahf adc movsb aaa aam jae ss sbb fs leave loop sub scas movsb pop jecxz fildl or int3 es std pop xchg movsl imul lea xchg cmpsl lret fcoml (bad) imull xor mov pop (bad) into mov call mov pop and aad mov push cmp pop rclb lret pop (bad) fstps lret lods mov and push and mov data16 cmc pusha sbb loopne movsl xor cmpsb xchg call stc push cmp xorl cmp push popf mov mov sahf adc and sbb (bad) aas mov push cmp xchg inc and push dec adc mov roll sub cmpsl or lret adc push imul push and pop outsb (bad) in cmp push fs cmp mov repnz je fldcw (bad) mov sub jge in adc inc dec ret insb subl and ljmp xchg cmpsl jae lahf pop into mov mov fwait int3 (bad) mov adc push cmp push push (bad) cmc aad cmp pop push gs and dec (bad) fmuls (bad) sub nop push dec insl jge push mov cld xchg pop popf inc sahf bound add aad xor pop jg sbb (bad) int js adc outsl hlt xor xchg mov ret jmp mov shlb stos scas stc in es int3 pop mov mov insl inc movsb cmpsl mov leave mov les or sbb xchg mov icebp add pop sbb iret popf sbb sub pushf lcall dec mov mov inc xor pop negb inc mov insb daa jbe mov outsb call (bad) (bad) addl test ja shll push adc lods (bad) pop inc inc adc cmp mov mov inc cmp jnp enter (bad) add (bad) xchg xor xlat pop and mov adc or loop cmp iret sbb dec sbb test pop leave xchg inc push sbb cli sub xchg das fstl insl sub fnstcw testl sbb adc sbb cltd mov fcmovnbe pop dec xor lods insl mov adc cmp xchg fstl dec repz cmp inc loopne movl mov lret inc (bad) push jg mov pop xlat or dec ret js xor andb xor repnz xchg cli imul xor xchg mov rcrl mov gs add imulb mov test mov sbb nop imul je xchg mov add les sarl sub push dec lods adc pop fidiv mov loop mov mull mov xchg sbb and bsf fmulp lock and dec jp add cmp fwait mov aad dec dec mov inc (bad) jbe sub dec cli push xchg dec outsl popa push rcll in movsb push int3 pop in pop and jb das or pop loope fcoml ljmp lahf sbb fistpl sub fldt or push or push xchg mov mov jmp mov rcll jbe mov dec test rcll mov arpl daa cmpsb sub int push lret int3 dec sbb fsubrp dec adc test or push xchg rolb mov dec cmp test cmp xor popa xchg dec xlat (bad) in (bad) mov xchg sub push loope jne xchg std jmp cmp pop fwait insb insl push ljmp cmp movsb stos pushl sbb dec lds adc (bad) fisubr out dec pop stos mov push adc xchg xchg fldcw lahf jnp push cmpsb xchg add pop or jbe mov pop xor mov es sub cwtl sbb cmp pop xchg cmp adc ror mov lahf rcrl sub movsl in lds in jp push mov jg lret and xchg loop (bad) mov scas sarb ja pop test pop mov mov les push out add dec xchg sub xchg insb adc dec jl arpl jae or repz push pusha ret push sbb or sbb cmc test sub nop ss add push test jg push jne pop mov es jnp lret loop daa lods dec or bound jns xchg insl repnz push test shl insb dec sbb add or or add mov mov push mov xchg inc js cmp mov test aam cmp addr16 or dec push cmp jle adc pop mov inc int3 cltd aam (bad) jmp es (bad) fsubr xchg mov jb cmc inc in adc in sbb imull cmpsl xor fdivrs mov mov push mov xchg out mov sbb lds mov push mov movsb bound int lods (bad) push fidivrl icebp xchg shrb out daa negb jp mov cmpsl out adc cmp movsb mov jp leave xchg mov mov or push xor sbb lcall mov mov lods jbe inc push scas popa push xor add out imul cltd movsb in in push jl iret shlb fldcw jo sahf and and dec inc inc scas outsb inc add mov aad push mov mov push mov add jl xchg out sbb push xor in inc rcrb (bad) sbb (bad) dec cmc mov sub sub sbb lods dec mov scas push mov insb and mov jmp cmp xor dec push mov sbb add outsb pop xor push mov jns (bad) imul xor adc (bad) leave and mov mov or mov into nop sbb xchg out or push lcall and pop scas jne and out pop popf inc pop cmpsl mov test outsl mov test or inc (bad) pushf adc popa mov fdivs loop mov in loopne scas ret sahf pop scas sub inc dec inc or pop lds (bad) out jmp repnz cmpsl repz cltd roll ficomp mov or fs add enter lods sbb mov arpl test out and sub xor (bad) out push loope push int xor xlat and jno jle testb (bad) cwtl dec mov mov and jmp mov add clc loope or pop (bad) popf (bad) pop mov in fsubrs jmp and sub inc xlat data16 rcl pusha icebp cltd inc mov cmp push ja fs or lods leave mov or cmp scas into add (bad) dec sbb xor out pop test lods outsl out add scas sbb push inc in ffreep cmp cld add push loop pop adc and and lock xchg ljmp sbb push testb xchg xchg sub stos jns dec cmp leave popa adc adc add nop cmp xor mov and arpl insl mov mov push (bad) roll push loopne xchg leave fcmove (bad) fcmovbe jne hlt cmpl sbb fucomp push sub jbe sub sbb or or push sti pop enter cmp or or leave cli xor mov faddl std cli push out add (bad) dec mov in aad loop mov leave jecxz mov test dec icebp jle (bad) in outsl pop popf dec push inc das in movsl mov inc dec cmpsb xor sub sbb mov repnz mov addr16 adc es (bad) (bad) mov call imul jp xor jge repnz push mov aad xchg pop xor lea sbb popf lret sub sub inc in cld inc push lret dec clc cmp add pop and imul (bad) dec imul or mov cmpsb mov in mov jae xchg jno pop pop mov leave mov (bad) cmp jnp push cmpsl incb imul push fldt lahf jo pushf push loope pop std jbe dec mov mov pop in ret fisttpl cwtl xor xor push push and fnstenv cmpsl jae call sub xor adc push push movsl push jno cmp jne imul out (bad) mov repnz jno (bad) notl int3 into roll sahf mov mov hlt ret sbb and xor pop xor push in mov xchg mov out add (bad) jp repz xor mov dec dec push test (bad) adc xlat pop push lahf js xchg mov xorl inc test add push pop (bad) cld adc ret mov pop and into add sbb (bad) icebp sub fisub pop pop cmp mov aam dec lret dec cmp out out cmp sahf mov imul into sub ret mov bound stos sahf jecxz mov lea adc pop decb repnz pop inc pushf cli idiv push pop aad in mul out jb sub inc mov push ret add adc sub scas subl jmp xor popf (bad) mov cmp sbb decb leave cmp mov fcomps sub rcll movsb mov cmp xchg adc lock outsb mov test push (bad) xor outsb push fsubrl sub pop push popa and jnp adc mov gs sub shrl mov aam mov hlt ljmp pop das lods and push rcrl mov jns sbb and mov cmc mov mov sti add jno jle mov add and and sbb xor in dec shrb jecxz dec add lods aaa out xchg addr16 xor dec pop jnp rcrb sbb dec (bad) std rorb xchg sub (bad) fcoms inc push jnp and rcl jne dec cld rcr jno mov cmp cmp test inc push xchg sbb test loopne and push mov cmp js mov fs (bad) cmp cmp aam jmp dec lock out push fmull push sub ret add pushf loopne pushf test cmpsb sbb sbb dec mov jne adc aam or outsl xlat dec sub mov insb sbb addr16 in add mov pop popf sti jp jo jle adc xor jb int outsl enter xor pop sub mov jle xor xchg dec out inc and insb or fs mov out cmp jmp and fcoms xchg xchg ds push jns test pop pop imul fisttp ljmp or inc cmc aad inc fwait xchg fwait sub aaa sti cld addb lahf mov popf or imul sar push sbb jne jmp sbb test mov pushf and dec pusha mov loope inc ja lcall cmpsb jmp pop pop fwait pop add rclb aas mov mov cmp push dec adc sbb outsb xor ja out test (bad) movsb cmp lds lock outsb sub sub jl cpuid pop cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz pushl add incl mov pop into push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb add loopne mov ss insl sti mov fcmovnbe mov mov fcomi jb fnstcw repnz jns add pop add add add push in and pop cmova pop gs lcall mov cmpsb mov lods and push iret mov cli jbe cmc sti lea and js inc out mov leave fs push roll or cwtl lds mov aam lods xchg aad pop cmp push in and hlt insb (bad) in and fsubl scas fs loop test sub imul push mov or push (bad) push repnz pop aad outsl cld or xor pop leave pop jp out stc aam dec loop nop out outsl or jbe cli inc xlat in or scas pop adc (bad) data16 (bad) int3 mov jp inc cs dec pop (bad) mov cld push jmp lret les ret shll in xor cmpsb adc and push jmp sub sbb mov aam (bad) mov data16 lods aam inc cmp add push pop rorb stos or fbstp loop xchg xchg int3 cmp mov shr cltd xchg sbb xchg test inc push (bad) mov push cli mov in lods je xchg es or pop pop jnp leave jns ds dec jge xchg test jmp (bad) nop dec add cmp xchg int mov and rorb xlat int fistl int3 and (bad) (bad) jle loopne aam jnp adc (bad) push sbb mov out in xor fist jp and outsb pop int shlb sbb cmp loop movd arpl push push in insl pop ret cs mov pop or leave jno,pn icebp out pop push adc mov pop lods imul mov jae (bad) xchg sbb in xor mov push xchg mov in add jae popa mov adc aad lods or sbb inc adc dec and add pop (bad) js pop mov lcall ja push mov and and into sbb mov stos (bad) or adc push ljmp pcmpeqw mov outsb lds jb jne dec in push adc xchg dec rolb in inc xchg lock add cmp in xchg aad mov push add not jp push setl mov jle cmp push dec mov jge mov loop add sbb scas cmpsb cmc xchg mov push mov imul inc mov and pop movsb xchg cs pop inc ret xchg push icebp push adc test int add add inc sbb mov and fcmovu scas sub ljmp mov aas dec xchg (bad) repnz mov jle aaa lcall mov fucomp cmp bnd daa aad daa mov insb (bad) mov (bad) xchg (bad) xchg cltd add rolb in push mov mov repz popf lock lahf cltd mov pop xchg lcall add or in movd or push cmp into ja mov repz js jns lods jle or inc cmpsb push sub fsubl or sub es push mov adc adc in mov data16 jne (bad) lock jl pop pop outsb inc (bad) aaa mov (bad) sarb loope mov cmpsl pop or (bad) xchg inc aaa (bad) dec pop mov jl in push jbe inc adc xchg cmp cmpsl fcomps adc mov sbb js add jecxz aas push test pop mov and push adc cmc pop shrb (bad) outsb inc push push fisubr aam pop xor (bad) xchg mov jmp add xor and (bad) lea popa xlat push test movsl outsl movsb jecxz xor and bound pop aam ficoml and jge ret inc js xorl pop int gs push mov in lods sub inc xchg movsl divb dec fdivs movsb pop sarl sub icebp in lds gs dec xorl or fcoms stc pop dec mov in sbb sub mov lcall add fimull pusha mov faddl mov inc mov and jne imul sarl shrl stos stc xor fildll in jne aaa push les xchg pop cltd mov imull daa stc in add and sub ds mov mov xchg jbe clc pop loope inc mov inc mov dec pop outsl insb pop mov mov or inc or shlb rclb push lret adc mov les clc mov imul push inc rorb mov xor icebp (bad) mov pop lret aas jne xor xor push shrb nop jne daa (bad) cmp xchg cmp sti sbb ss inc cmpsl hlt sbb nop imul jno sbb insl push or aas dec in adc sbb jo cmpsb add lahf or cmp lea dec adc pop sahf test add (bad) mov and dec mov popa leave rol in arpl jae in outsl cmpsl add andl cmc lret push pop jbe xlat sbb loope pop out test add in jle push test mov adc cmp movb scas insb mov xchg cmp bound mov js data16 pop lea fisubl push add mov jno int cwtl mov popl mov inc xchg sub faddp jo fistpl stos mov cmp cs push (bad) jle sub jnp adc mov mov and xor push mov jnp fs push fisttp loopne rclb scas pop cmp and scas (bad) aaa sti or xor aam shlb in imul xchg sub sarl inc stos mov and loope subb scas pop lret xor or add push and jne (bad) xchg xchg xor xchg out pop push mov fisubrl jae push leave inc movsb je int cmp cmp xchg (bad) pop repz sub pushf adc push adc rcll (bad) stos mov icebp loop pop mov mov push cmp and sahf sub inc cmpsl fmull das out lahf add sbb jne mov xor ss rcrb push ja jle inc pop lret jle mov stc repnz pop movsb pop mov dec aaa xchg movsl dec fxch jb pop cmpsb xor sbbl dec arpl lcall pop cltd pusha mov xchg or jp mov imul jl dec inc pop and mov push inc je dec jg lods negl stos cmpsb push sbb push inc imul pusha es popa repz stos dec mov or jmp aaa push mov aaa ret dec xor add jecxz sbb popa xchg aaa sbb and push xor dec push adc enter push int3 or cmp jp shlb sub xchg push mov (bad) iret mov cmp pop (bad) enter fwait cmpsb sbb mov incb cmp xchg xchg push scas or dec inc bound push cs sbb mov dec pop out or lock (bad) in loopne sub cmp xchg and inc aam movsl adc dec (bad) cwtl in movsl push adc (bad) dec pop and add test les cmc ret pop push inc fistpll stos xchg mov or fsubl lcall mov mul inc jne rolb mov adc xor lret dec add sbb mov das fnstcw test mov (bad) or mov add cmpsl and sub mov mov pop repz xchg adc rcrb (bad) mov notl out adc das xchg xor outsl add cmp or cmc jle jl push mov mov loop in dec dec in pop lahf mov inc das adc cmp jmp js xchg xor and sbb iret jae lcall xor mov jg out lods aad lds cmp sbb pop jns mov jbe push add lods ret test out cmp xchg push jg aad mov orl fwait pop inc je push lcall sbbl push bound and test fdivrl es out sub mov clc adc mov rol jnp in aam cmc adc inc push rorb adc adc lods sbb and out out sub movntq pop (bad) push pop sub into lock xchg scas stos inc push addr16 pop bound add mov or loop jmp sti js bound jge outsl mov in out jo lcall or loopne fistp inc mov fs xchg push mov roll sbb ljmp inc sahf mov js cmc mov in xchg sarl mov xchg or ret leave and lods mov mov push (bad) lea add repnz add aam inc clc dec and mov dec (bad) xor ljmp cmp push mov add push mov aam fmull jmp jne cmp sbb xor or pop (bad) dec into repnz fsubl mov add mov ret fnsave cmpsl pushf or dec mov inc movsl adc std add jp jp cmp mov inc xchg test cmpsb jo pushf ss aam ficom int3 fwait out aad mov pop adcb (bad) sub and std neg in inc push dec xchg sti leave sbb pop (bad) mov mov adc mov xchg sub sub mov xchg rcrl or jmp out inc clc sbb sti add sub mov sbb xchg test jno cwtl sub inc xor add sub and lds test sbb out es cmp xchg inc test fwait jnp lods mov cs ljmp jne je cmp inc pop adc pop mov xchg aaa push (bad) jg mov cltd pop mov loope pusha jns (bad) jp imul (bad) outsl cmpsb mov sbb jle and or push out test sbb test not jno pop push repnz rorb pop les insl je mov and inc ss sbb cmp sti cmp push xchg je inc jmp repz xchg mov xlat shr pop pop sbb mov outsl pop add mov xchg mov jne arpl jle hlt fstps jno in and or xor inc ret push xor (bad) popa repz inc xor cmpsl push loope xlat and test pushw sbb popf cwtl xor (bad) mov (bad) jmp sbb mov mov pop xchg xor insl in sub mov cmpsl pop icebp push es xor mov iret std cmpsb adc pop xchg mov inc stos gs lret pop dec mov mov (bad) xchg lock push pmaddwd addr16 and jae (bad) loope rcrb out lods aas jns fcoms sarl cmp xchg iret es sbb mov ja jmp xor cltd (bad) pop sbb sti (bad) mov (bad) nop and mov je lret push push sti adc lahf js jmp mov popa pusha insb out aam xchg xchg cld push gs adc pusha imul fdivrs cmp jbe jnp notl cmp mov jno in loopne (bad) icebp lahf outsl jbe out xchg dec lock test jnp nop adc adc repnz ds ss lds repz nop push scas pop mov mov popa es mov push add sbb addr16 in xor dec outsl or dec mov imulb fild sbb dec push pop in daa pop jb lds fdivl loope das outsb fidiv arpl push test jno pop popf mov out xchg imulb test add movb lret mov mov dec pop sub add outsl jne int3 mov ja aaa call add cmp xchg fwait push mov inc ja lret xchg add lods cmp cld add shll jmp cmp fucomp cmp sbb jmp test iret outsb ds mov icebp stos xor lcall add lods int (bad) imul pop lods addl push adc les in pop adc push addl jns lret mov fisttpll sub or mov nop push hlt dec xor loop ss sarb adcl andl popa movb mov popf rorb psubsb fdivs xor jmp mov jbe repz adc jl xor sbb xlat mov inc sub pop es cmp sub mov sbb test add inc pop cmp cmp (bad) ljmp jl pop xor pop cmpb jb out enter pop mov dec dec lret fistpl xchg xlat in mov mov jecxz lds xchg cmpsl push pop push (bad) sub mov pushf shrl in gs or test add cmp stos or fstpt movsb mov and rcll test movsl cs pop outsl imul jecxz or subl in mov out test cltd imul insl mov push in fisttpl sbb add mov adc ja clc pushf stc pop pop sub loope xchg sbb jmp mulb arpl add jno sub std add xchg aaa pushf dec jo shrb fisub shr mov out add push xor or dec pop sub xor dec scas loopew and iret jmp mov fs inc or pop fstpt (bad) xor mov gs jge add pop lock ret and lahf dec (bad) xor dec fistpll ss int3 cltd push jmp xor call and stos push aad mov or mov movsb push pop call or or (bad) and lds mov adc add lock test je mov data16 cmc in mov outsb xorps jae jb sbb mov sub in push mov push push nop sub outsb lock mov lock and mov (bad) push int in dec movsl popa lock je cmc inc rcrl adc and int loop lods push lods movsl arpl pop inc sbb pop insl es daa push divl dec (bad) divl test (bad) jne ret ja pop jo sbb ds pop (bad) jge mov push popa mov jp add sbb adc jecxz imul repnz incl dec jae test cwtl (bad) xor and mov dec jns lret jecxz test leave nop mov in iret push dec sbb pop adc cmc dec inc push dec out movsl or adc jg mov pusha inc aad movsl sahf pop stos loop in fnstsw fwait sbb xor (bad) xchg cmp jg icebp (bad) imull rcll insl les add std lret cmpsb xorb (bad) jg push xor pop jnp xor pop insb cmp testb aam adc in lahf cmpb (bad) push push pusha mov icebp push cmpsl aaa lahf sbb sbb add test adc fnstenv out rclb or pushf subb jo sub push int3 gs (bad) push jno cld xor mov jle dec pop jnp shrb adc pop lahf cmp pop in outsb cmpsl push xchg push push pop push mov sub out xchg adc enter test call inc mov insb mov inc dec xchg scas xchg lahf stos adc pusha ret fmull inc xchg sbb xchg push aad sub mov popf cmpsl pop mov insl movsl pop jecxz movsl stc (bad) fcmovnbe sub sbb icebp loope xlat pop add loope iret out fiaddl adc mov adc in add mov cmp cmp daa lods cmp xchg and inc fisttp test out mov mov inc fbld call mov sbb rorb cmc inc mov add inc mov shl jbe in sti aas mov pop test push lcall push mov pop lods add mov movsl arpl (bad) cwtl sahf xor mov in fisub adc nop int mov xchg pop scas (bad) mov lret in push sub mov or fnstsw inc aaa (bad) out dec imul leave sub addb dec cmpsl (bad) mov test or mov jecxz ljmp xor xor xchg cmp jmp cli add ja loop jne mov adc lea test test movsb icebp jmp hlt leave or jg jg xchg not loopne pusha test test cmp jmp popa inc mov les sbb leave cmp add (bad) leave mov stos fcomp cwtl popa mov jg adc pop push xchg in push aad sahf or ds sub pop mov (bad) aaa (bad) sti sarb sbb in cld mov aas inc nop lea (bad) lds inc int3 or imul cmp mov (bad) push lods rcpps pop enter sar div dec addr16 scas aaa jl into xchg fldcw dec push insl push xchg xchg into push ret mov es xor xchg ret push sbb in xor pop cmc je inc sub adcb rcr inc fnsave loop iret in xlat icebp roll (bad) ficom inc sahf dec cmp scas in icebp cmp sbb in fsubs js pop jmp pushw aaa jmp les jle aaa push or adc xchg cmc in ret pop outsb fucomi pushf les add inc sti fdivrs cmpsb mov mov sbb inc jns and adc or inc pop dec dec (bad) cmpsb sti in adc incl gs cmp enter rcl in sub aad adc lret movsl into pop jns imul pop test mov or arpl out ret in jmp in cmpsl scas popf pushf adc adc aad dec lcall pop mov and push mov sub in addr16 jmp pop xchg cwtl dec adc xor jl mov mov cmp dec push mov pop fildl es mov cli pop dec jae dec and xor ljmp mov push fistp (bad) mov out loopne test adc icebp lret jmp cltd lahf pop (bad) invd jne pop mov loop divb in inc jmp das das gs cmp notl bound cmpl das inc js in xchg xchg xor xchg cmp iret call and out pop add push cs mov cmp push lret mov sarl sub sub xor xchg out shrb pop (bad) imul clc mov sbb ret test jle adc mov gs test push loop rorl xchg stos sub and xor jae jnp fistpl in inc xchg lea xchg imul movsb push lcall fs lret pusha sub and cmp enter idivb xchg sub jl inc adc and and (bad) dec outsb lds dec sub rcr sbb aas jle dec xchg push adcb jmp js mov hlt mov mov sbb (bad) lock pop sub pop add inc xchg jns push inc insl sub sub in mov mov cmp lret push mov leave ret bound enter lods push (bad) xor xchg test cmpsl sub jle or sub inc shrl xchg mov (bad) out daa mov inc fwait or jge iret jle mov jo arpl fnstsw shl push test or je jae inc sbb sbb int3 push mov lock mov in adc jge,pn jge xor xchg ds (bad) xor mov or push shrb sub pop fsubrs int3 fist mov idivl xor push cmp pop and pushf in movsl jb fsubl fxtract cltd addb cmpsl or lret pop andb gs and adc fwait aad push xchg adc jo pop inc pop pop xor pop stc mov (bad) aaa bound push imul cmp add pop cmpl mov push xor (bad) dec jge mov push hlt negb xchg push adc inc incl cmp jae mov outsl ds or mov jo push aam mov mov dec push pop lds mov (bad) push fs dec sbb sbbb nop repnz xchg (bad) jbe repnz test setae call adc icebp and or pop movsb jge in sbb cmpb xor stos bound hlt jbe and xchg int3 adc out sbb cmp push (bad) test loope xchg movsl repnz movnti int scas jbe sbb xor and (bad) pop jg mov inc stos push mov clc inc pop fcmovu cwtl lods or xchg rep in or xlat add aas or cli fwait lahf movsl pop invd lds jns jg mov adc push clc jg push inc subl sahf adc push sar jbe mov cmp xchg mov js jb mov repz imull aaa cwtl incl cs adc or clc icebp test cwtl repz outsl lret mov adc cmp push enter mov sbb xor and mov das sbb and xlat insb and movsb sbb jl mov and push icebp sub xchg push loop lods cli cmpsl mov (bad) mov jl movsb popf xor les xchg sbb ljmp punpckhwd lea inc jg jecxz or dec mov (bad) (bad) push data16 mov inc mov cltd inc or (bad) sub mov jne sbbb enter cmp imul mov dec jno mov and ret sub test cmc clc out add test ds xor jb lahf fisttpll in fidiv adc flds xchg and cmp push fadd movsb test jns xchg mov nop cmp rcrl or call (bad) push ss lock add outsb sti mov mov (bad) push fildl and inc xchg lock adc xchg dec in (bad) cmp and lea inc outsb xor iret jns push and pop mov push pop pop subl sti mov ja and shlb sbb mov xchg aaa ja loopne mov into mov sti mov jp ss jmp xchg xchg add clc or mov mov mov insb push xchg inc inc adc clc nop imull subb fadds mov jg sbb and cmpsb push in push je (bad) insl mov push cmpsl cmp bound dec scas loope lcall jmp cmpsl mov cmp pop add mov mov pop mov xchg inc dec scas xor push and mov dec sarb jo jmp push pop pop dec mov mov lret sbb pusha flds ret mov mov sarl cltd sbb dec inc pop sub hlt ficom mov int3 fwait xor aaa aas dec mov xorb sub (bad) xor pop je lds stos movsl in aas cmp sbb out adc xchg das xchg cmpsl inc xchg sub jnp mov fstpl leave leave adc or cmpsb xchg test adc insl jnp push adcl mov rolb inc sbb (bad) dec mov sarl jp aam jae dec jo daa gs dec jle pop idivl mov cwtl inc cmp pop push push ja cmp es (bad) sub pop rcrl xlat push xchg or mov mov dec adc bound inc dec int3 stos mov fwait aam imul mov mov add dec bound jne imul pushf mov sub mov mov xchg sti xor sti lret in push sbb loop imul insb mov push xor out mov addr16 pusha and mov incl push in jle sbb pop lods mov xor ja mov and mov outsb imul sub int3 sub ret nop lret clc push repz inc xchg enter insl mov shl xlat (bad) adc add stos (bad) mov or repz adc cli sub pop pop popf sbb mov ljmp push int jo push or mov sbb lods push and sbb int3 ret fs push std addr16 mov pop sub (bad) xchg inc std jle dec inc and xor sub push in (bad) jne in adc gs (bad) cmpsl xlat decb push icebp cwtl lret imul call push sti mov and outsb inc inc nop xor (bad) clc and lahf jg stc out jg stc out jg stc out jg stc jg add setle mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc and mov (bad) dec mov (bad) fwait imul (bad) sti popf xchg cmp add or add (bad) outsl mov mov push jb jp pop xchg inc and dec pushf rcrl push sbb adc jo cmp pop (bad) xlat sub sub jnp test cmp or repnz add ljmp (bad) flds (bad) sub add adc decb pop movb arpl cld jle mov jnp push sti mov add and dec jg clc inc jge or add or in xor xchg sub pop nop push (bad) fmull lods push and xchg loopne les rorb dec fxch test les mov iret add inc mov arpl and loope out sbb clc xor ficom ret ret jle adc jne pop iret out mov lods lcall sbb fistpl scas loop mov sub incb sbb fidivl je es xlat rcll mov loopne ja adc in ja mov mov sar mov cmp pushf and pop das test push aaa shrb lods cmp mov mov push push jmp sub shrb add dec lahf pop jns push lds and xchg xor and jge ss enter cmpsl fisttpll xor fbstp xchg lahf jo adc fsubp lret cmp ja xchg outsl aad push fiaddl rcrb xlat and fsubs ficompl dec xchg (bad) ljmp cs ss xchg inc mov rorl in cmp cmp dec stos test loopne sub adc push or stos push mov xchg push sub loop xchg cmp push xchg sahf xchg lret in ljmp and cmp adc lods sbb das outsl faddl outsl inc mov sbb lret flds mov add push rcrl ljmp pop data16 lods jb fcompl rcl sahf xchg jns mov push pop bnd pop stos daa sbb gs jg sub in cmp hlt (bad) pop pop iret leave data16 sbb je dec mov sbb int3 cli mov cmc fbld bound rolb add leave jp pop fsubrs lahf mov ret icebp fdiv les into decb xor clc loope cmp mov add in xchg test cmp mov out and pusha sub mov cli and mov mov aas pop cs xor cmp mov dec imul sbb xor sub test lds lds repz shrl ss (bad) jae jge add imulb shlb push xchg mov jne xchg fildll lret xchg lods and fdivs mov push xchg push test lds adc inc or cmpsb mov cmp jb sbb incb js loope cmp inc or test dec mov push mov lcall pushf xor mov mov clc add or and loop (bad) aas ds dec mov lods mov vmovq lods scas stc mov clc movl and dec xor mov mov and sbb mov movsl jbe ja sub mov dec cmp les test cmp and std mov xchg ret inc adc pusha notb or fldcw adc push cli jmp out sti test lret inc insb cmp jae jecxz in jecxz es push loope sub sbb movntq rorb cmc jecxz enter or or cmc fstl loop enter movsl (bad) loope and xchg fwait (bad) adc jl xlat inc sahf pop lods (bad) leave scas ja inc in xchg cmp mov arpl test sbb icebp inc xor stc pop test cmp pop sub and idivl mov inc pusha add test (bad) dec mov jle or mov scas iret clc pop arpl inc cmpsb aaa daa sub push ficom adc sbb jecxz mull aaa pop sub mov adc jne pop mov stos sbb xlat push push test push mov add or (bad) lret ret jne cmc push scas push cmp mov rcr (bad) cld sarl cltd scas mov jnp imul std xchg aad mov or fs push inc xchg cld stos pop call sub cmp (bad) inc stos test std js jle pop mul xor push lret movnti pop mov mov pop (bad) into ret inc cld pop (bad) out push test out lcall shl inc push lcall (bad) aam adc lods jp cmpsb jno pop loop pop fstl sbb or enter ret push jnp xchg pop jns mov shrl mov sbb pop fstl test or push ffree test cli (bad) fcompl loope mov sub lods pushf mov sub int3 xchg (bad) cmp loope xchg jnp or jns ljmp xor mov inc negb sbb cmp mov pop (bad) xor jno mov icebp aaa fmuls rorb xchg mov and subl insb test inc lahf xchg sub (bad) fcmovnbe mov sub add pushf sub fidivl push mov arpl xchg xchg adc adc push inc mov dec lcall testb shr mov lret jmp mov fildll test cs adc mov pusha iret add gs repz adc pop jno xlat andl cmp xor stos push mov mov jns leave pop push in bound mov pop decl aas packssdw (bad) lret jno xlat add aaa push jns sbb cmp adc fs sti jge shrb pushl jmp fwait pop jb enter out ret xor sub mov shll push cmp and pop mov sbb (bad) in inc inc aas and mov (bad) sub inc mov adc mov adc ret loop pop inc das xchg mov in sbb stc fcoms mov sbb fs or shll into xor sbb xlat mov in test push jb inc add xor mov jns dec outsb mov and xchg push lods (bad) insl ljmp xor pusha xchg ficom xchg mov xor imul xchg mov lods jns xor popa jge push push jb sbb testl push sub movsl sahf mov aad inc cmp fadds lret jbe mov insl mov mov sbb mov hlt push or out sub lret push sub mov cltd mov imul enter mov cmp (bad) aaa jno lock push xchg push add ljmp xchg out and dec loope notb ds pop scas rorb jmp sbb scas pusha or cmp mov or (bad) pop cmp outsb loop lock inc adc fcomi xchg and (bad) mov icebp out out aas cmpsl or and (bad) insb xchg pushf sub inc mov cmp jg mov adc cs push data16 or fisubl out cmpsl cli data16 into adc pop cmpsl shlb (bad) ret fstps and adc mov mov daa and jbe aaa stos push enter out mov xor xor cmp das test (bad) pop push sbb pushf or ss mov sub call dec popa fs pop xor test adc pop jno aam sub sbb cltd out mov sbb aas xor add loop loopne push add jbe mov cmpsb mov mov aad mov jecxz lods xchg addl xorl sbb lret push push push lds lcall adc and xor les insb (bad) jb,pn leave cmp mov pop jbe in push jmp sarb push pop inc (bad) cmpsb mov inc ret mov or out cmp loop mov inc test pop (bad) jb sub or and xor xor inc jg nop mov imulb xor cmp adc lock mov inc pop lods push pop sub pop inc cmp mov int3 mov add imul sbb mov aas cmp (bad) jecxz push pop cmp push loopne mov and mov gs jns repz or (bad) push int3 mov xor aaa push imul imul cmpsb aad loopne je push (bad) push inc push (bad) lret cwtl scas adc adc ret jge dec jp jbe mov xlat out cmp ret push arpl xchg jge dec mov in or or into out cld or les arpl cmp push lret lea out inc jae xchg mov inc xchg pop lahf mov (bad) mov sub jl cmp dec sbb jge arpl test jnp in popf mov and xchg idivb fisttp pop repnz mov outsb lcall call out cld inc dec js cmpsb iret jl in push pop pop mov rep push das dec inc scas fcomps clc shrb ds jg pop sahf leave lcall push aaa inc mov lods pop mov add add fiadd scas mov add cmpsl jbe (bad) in push xor pop into fstl out mov adc inc loope (bad) mov push outsb aad icebp inc clc imul gs mov jle or jp std inc push push lods pop push push jae std xor jecxz rol mov adc cmp and xchg popf cmc mov xor in lds push insl lods push or std aam (bad) pop dec sbb mov test and sbb cli and call xor imul fiadd pop pop mov xchg mov pop lcall (bad) pusha add out adc adc mov mov mov pop xchg jb rclb aam mov gs cmc cltd ss push or ds fist xlat shlb cmp cmp mov pop int sbb sbb and aas cmp push dec (bad) push push cwtl enter aaa cmpsb push aaa dec in mov xor cmp fwait xor pcmpeqw sbb pop and int3 daa lea ds and ds add sbb mov xor mov and out ja ja dec inc scas dec cs cmpb sbb inc bound aas cmp cs imul sbb mov xor push sahf in movsb es div mov mov cltd (bad) mov movd (bad) out outsb rcrb out pop adc dec (bad) in jae adc iret xchg in mov jmp mov fldcw sbb cmp mov mov lcall push mov andl pop cli imul mov les pop mov lea adc mov movsb sub dec sub divb cmp into outsb xchg les xor testl scas arpl pop sahf pop cli insb fdivrl xchg push cmp jge jl xchg outsl jo pop and fisubrl cmpsl cltd dec push loope fwait dec mov in cmp out jno fisubl loopne aas push mov cpuid rcrl fdivrp push push mov push sbb inc or and pop jge (bad) (bad) int xchg fwait cmpsl imul in js add adc sub stos xlat sti (bad) mov outsl fdivl jae mov loopne lods aad in cmp pop sbb sbb jmp fninit xchg fstps lea mov cmp jge aaa jne jle jo xchg jge cltd xor jle jo gs add int3 push shll ja adc ss rcr stos inc les fs daa loop dec movsl cmp into dec mov cltd pop and jns dec and dec fs es je pushf (bad) mov mov dec arpl sbb or test jl out cmpsb dec xor lret adc sahf test pushf shrb adc pop in pop and push insb fwait stos mov push (bad) add je fcomps repnz xchg xor dec adc roll (bad) pop mov mov repnz sub pop fdivrp add addr16 adc fstp pop mov in mov jmp inc xlat adc jle xor push mov jmp decb int3 jecxz cmpsb hlt inc adc and pop inc cli push adc inc sti xchg push rorb ljmp lahf push lods sbb sbb cli in sarb call sbb cltd pushf lret sbb lods jecxz xchg sub jmp add inc data16 mov pusha jno shrl in ret xlat add mov out repz xor jae ret fs cmp stos in inc adc lods mov mov (bad) push bswap aas ds les out int3 sahf test dec mov bound pop add mov daa xor mov cmpsb jae insb jp int (bad) repnz (bad) sub cmpsb lahf out sub xor ret orb fwait in add fsubr push dec cli test add ret das pusha adc arpl mov push movb pop dec and in pop pop scas add add std out cmpsl movsb es jno sbb je rolb (bad) addr16 mov lcall jo add mov in cmp into and xor pop lock mov icebp (bad) faddl je mov ret dec add mov mov push sub inc add int3 insb pop add movl ds popf rcr cmp sub cmp adc ja adc add push sub pop in loope ficoml adc cltd jo pop pushf jl lcall adc jne stos mov mov popf adc sar cltd sbb fsub sub in ja pushl sti pop inc push add (bad) xchg mov in xchg dec faddl stos jnp mov outsb movsb push cmpsb xchg arpl pusha test jno add ljmp stc movsb shll (bad) rol sti lods insl aaa jle jg push mov pop in pop jg test out aad shld aad dec iret or (bad) (bad) mov test push jl,pn or and js mov sub (bad) cmp and fwait sbb jns jp push inc js (bad) push inc (bad) stos loope in subps es or mov sub pop dec xor andl adc xor adc ret adc adc push scas mov stos jne xchg enter xor inc iret arpl mov sti xchg int (bad) mov push lcall sbb lret and mov pmovmskb xor add adc adc jecxz jae xchg cmpsb cmp icebp scas pop mov xchg test xor (bad) icebp pop dec cs test out imul pushf mov adc pop cli int xor mov pop and ror aas in fiadd clc add add push cs or outsl adc rcrl call add (bad) jo or movb and shr inc mov fimul jae xsha1 cmpsb dec outsb jbe sbb inc dec dec or shll cmove pop add imul adc cld stos push insb out cli (bad) push pop sahf cmp (bad) out scas mov cmp jb mov lods jbe or or inc push fisubrl cmp aam mov (bad) adc in pop in push int3 sahf inc mov mov pushf out jb adc test dec adc pop lock xchg test out xchg divl popa jo push pop inc mov xlat lea jae imul dec int jg add jne cmp mov inc pop aaa add and sar inc or in leave or jb inc inc fwait jmp repz movsb das in rcrb xchg popf pop loop ss sti xchg or rcrl xchg maxsd pushf pand xchg lcall jp mov stc pop decl scas sarb data16 dec lock outsl fmull arpl icebp inc xchg and in adc std xor add mov fmull push jge add mov inc jae sbb add pop int3 stos mov inc jmp xor xchg mov in iret cmp pop jb aas add lods arpl or js popl icebp enter cwtl std (bad) mov adc fs mov imul sbb (bad) sarb mov pop ljmp repz ds or in xor (bad) leave mov scas xor int sbb stc cltd arpl xchg adc fwait or fnstenv negl xchg mov mov cmpsb sub jle cmp (bad) daa sahf test (bad) cs sbb cmp rclb int xchg test int3 lcall jp adc nop (bad) call pop add mov mov pusha ja xor cmpsl push jecxz push int3 push aam sub loopne xchg dec cmpsb (bad) scas xor push clc sbb add mov in inc and push clc mov fwait mov push sbb das out nop push fdecstp jmp cmpsl xor jo lret rcr aad jae mov imulb fcom mov pop adc lret jg sbb loope pushf dec jne (bad) aaa popa dec xor jne cmc xchg xchg pop cmpsb lahf lock and adc in and inc dec sub lcall mov in cmp inc pop xor or dec movsl popa shlb xchg std aam sub fs pop mov test sub adcb cmp inc push stos sti adc sbb stos dec and cli xchg popf dec fcompl push fild std stc xor scas or sub jecxz dec pop xchg pop cmp sub push pop ljmp mov add dec dec (bad) mov sub mov ret test inc pushf mov cmovge push cmpsb mov enter jnp rorl pop (bad) xor xchg mov cli stos mov jne or push mov imul pop inc lods cltd sub cmp sub sbb imul push (bad) xor fmull loop int xchg xor popf sti hlt (bad) aad mov mov jge mov rolb sub addr16 mov sub cmc loop mov xchg (bad) into xchg cmc out daa inc stos cmp sub cmp lret push jo push jnp andl in jg xor (bad) mov jno jae jns mulb sbb push lret fwait clc jecxz push inc test add inc push das ljmp jo sub add cli inc leave test push xlat mov xchg adc aaa sub mov test adc adcl insb cs cmpsl push inc inc lods mov test lret inc loope aam mov push sbb hlt cs sbb xchg mov adc loope or aad ds push in pop frstor jno movsl fstpt sbb loope nop test cmpsl inc lods icebp jne inc stc lcall jl push in sub fimull insl jmp in and jns push push jo cmp mov push mov (bad) gs cld pusha out pop ja add stc mov mov ret decb jae pop mul xchg scas cmovbe sub stos or push ja lcall add mov cmc loope mov movsb jo sahf dec imul xor add mov rorl stos add jmp cwtl mov outsl add (bad) mov mov mov xor mov lcall push das xor fstpt sbb pop movsb repnz pop out pop dec xchg cwtl (bad) jl lds inc ljmp dec fs sbb add test js cli fidiv adc jno mov xchg sbb dec mov popa and insl xchg mov mov imul fwait xlat xor and push fmull out data16 mov dec xchg (bad) sbb pop push or sarb inc popa stc movsl mov jbe pop (bad) jbe shl outsl push mov faddl enter jb and shll dec in pop enter xor adc test xchg add fnop xor xchg lcall pushf mov stos loope shrb les stos cmc and mov dec cmpsb adc push cltd xor (bad) xchg pop ficompl mov fs inc leave out das mov call add lods or lcall mov mov dec rorb lds pop adc inc xchg aam mov imul int3 mov sbb jno ljmp pop into inc popa add push lods in test mov decl mov adc mov mov pushf dec pop cmp add (bad) insl lahf outsb aad jle jns push mov fisttp sub inc dec mov lds lds fdivp dec repz cli into inc adc pusha pop push rcrl repz adc sbbl add sub int3 mov mov int3 jne fldcw cwtl or push (bad) repz mov (bad) ljmp cmpsb or push loope loope cmc insb cmp mov mov pop jmp mov add out cmp in and jns jl xorl mov nop xor popf mov movsb pop push fcomi dec add sti adc mov sbb fwait dec adc test fs and insl in dec cld and hlt cmp inc mov es push or je sbb jb scas loop jp mov xchg push (bad) arpl (bad) test and or lahf shrb or dec mov out xchg and sbbb hlt mov xchg into xor mov popf xor ss not (bad) prefetch insb xor sub and push xchg pushf ret sbb lock fstps xor mov xor movsb push xor sub pop dec fmulp shrb call fildl jle sub cltd test rcl cmc mov jo xor inc pushf call push inc pop add shll xor insb jg int3 cmc xor inc dec mov insb and xchg and aam stos call je cmp xlat cmpl mov minps cs das mull pop scas scas pop add testl pop dec popa mov out sub jle les xor cmp mov add ljmp mov cs pop sbb fsubs mov (bad) jbe hlt stc bound dec cmp jno scas movsl sub xor push add jmp jge fldenv outsb jmp xor lds add addr16 add notl (bad) xor outsl rcrb mov or pop dec mov out dec lods mov cmpsl in mov sub int (bad) outsb xor inc shll cmp stos mov (bad) pushf push push inc xor push cmpsl jp ret adc adc dec jne sbb and cwtl popa loop jg aaa arpl cs adc xchg mov inc mov cmc adc lods push cmpsl sbb inc mov cli mov std jge mov jp ficompl pushl xchg test push cmp ja ret push lcall adc rol jne out je int3 (bad) daa in or jle sub lcall (bad) mov xchg fs loopne fstpl jno popa inc jg leave scas mov xor mull adc subl mov and call mov leave imul mov jnp mov mov pop lods out mov jmp sub aam mov mov icebp cmpsb jmp into outsl mov (bad) in xchg mov jg insl fdivl mov jecxz lock push shl inc cmp sahf (bad) mov iret test pop push xchg mov adc sbb test sbb xor pop inc shrl sub pop daa cli lret aaa in mov inc or ret or cli loope loop mov or (bad) (bad) cmp aad sbb fadds lods sti in inc mov inc pop in push sahf xchg lods fst lcall sub push mov cmp insl nop push mov mov leave jb repz clc and loope jmp shll or mov inc mov inc (bad) std insl sub adc push out inc inc adc adc adc adc and dec out (bad) mov pusha cltd pop out rolb (bad) lock orl sub cmc in cli fbld loope jno cmp or int cmp add mov or sbb jl iret push pop cs or jge data16 mov in mov push enter and bnd jne out mov int3 lcall add repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add incl loope add ss jge add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret jbe pop jbe xchg mov lret pop jbe imul fcomi mov sub push out out stc push sldt add add das adc adc mov mov fldcw out nop lcall pusha mov mov and jle and push xor cmc lcall aam (bad) mov mov ret lds fdivrs sbb ds outsb call inc and xchg ljmp fmuls rorl pop cltd and stc adc mov sbb inc loope lcall out in iret mov in sti imul in xor sbb lea jmp adc int dec dec mov outsl in mov loope fidivr add mov push mov adc sub cltd jno test sub jmp incb jle aam sbb cmp fbld jle sbb lret imul xchg ja and aad mov pop push xchg loope outsb mov cmp adc psubsb ljmp adc mov imul mov mov out lea sbb in es xchg push mov pop xchg shl push dec mov cmpsl jmp mov mull loopne in es pop xchg imul sti (bad) enter imul lcall jb mov xor mov fist sub movsl mov stc dec fcom test sbb cmp aad cmc aam jae leavew push imul notb cltd mov cmpsl mov cwtl negb mov icebp clc xchg js cmp xchg dec outsl push add rolb sub and inc push jecxz mov mov fs sbb leave loope jl arpl test out popa mov int3 lods cli out stos ret xor lods loopne jnp pop je sahf test push sbb sub insb out dec cmp outsb sbb js lods pop inc sti (bad) cmp mov xlat sub push and xchg jmp call xor mov scas cli imul lods pop push push jl dec (bad) enter pushf dec (bad) imul ret das xchg mov mov dec outsl test sub aaa lcall and sti shrb fs loope cmp push enter pop mov push pop jge jbe cmp cmp scas aaa cld aad xor adc ret add and mov cmc add jns push pop jecxz daa pop pop cmpsl push aad in push sub in jno xchg pop jmp and push inc mov mov mov out lock mov mov pop call jg sub les fldl xchg mov pop mov pop je xchg jne cltd les repz pop xchg cmpsl jle sbb (bad) cmc push incb inc sahf pop inc dec dec sub adc adc mov jbe int3 adc das sbb sahf pop lcall xchg enter pop cmp daa lcall fimul (bad) sbb push sub hlt cmp ror rclb mov mov adc jp push jb inc sbb push add sbb push sbb movups inc hlt out or push inc pusha mov (bad) or xlat ljmp lods loop inc dec mov sbb scas xor pop pushf je gs jmp imul or out xor inc jl scas push fs popa shrb jb push leave adc xlat push push out sub out fnsave sub mov fisubl (bad) push pop mov sbb lret aad sbb mov or jle fcmovb les rclb js inc addr16 cmp adc push sti add jns mov jg and adc pop aaa lock test test scas push xchg out fs cltd xor int stc dec sub repnz jl xchg sbb in pop outsb and and jnp ja testl fbld scas adc fcmovne adc aaa pusha mov jmp mov xchg xchg testl in mov cmp ficoml mov and in in xabort pop movl push into and loop mov lods cmpsl mov pop mov enter mov scas jne adc idivl mov cs stc inc notl and lret or inc (bad) sub sub dec ja lcall add lods nop fcomip cwtl mov jg mov pusha cs lock mov pop xchg adc loope pop les sub mov (bad) mov sub leave mov jmp test sbb (bad) pop test cmpsl or stos cli sahf xchg push aas mov mov arpl (bad) jge add mov push mov pop pop aam sahf pop jp push add cmc or adc ljmp ficom xlat sbb stc test imul loopne dec sub add add add jne ljmp push scas mov lret cmp pop cmp test push cmpsb or and or cli aad fstpt dec ljmp out or cs dec and mov ja and cld aad cmpsl in mov es dec adc fstl (bad) (bad) rorl add inc in in imulb and push clc xchg adc out (bad) cmp mov ffreep xor or fidiv movsl jmp loop cmpsl push ret mov aaa arpl icebp add or push test mov xor cmp mov sbb xchg inc or dec stos lahf cmpsb sbb sub xchg inc adc sbb pushf movsb addr16 jecxz xchg xchg add psrlq pop jno xchg sbb push sub xchg dec sub sbb out mov arpl loopne xchg dec mov cld std (bad) push mov inc jnp or mov clc lcall add inc jecxz lods inc lds inc (bad) push mov dec cmp pop sbb mov sub dec rcll and outsl or shlb pushf aam repnz sub insl stos fiadd inc lcall and mov imul or sar sbb test mov pop push lods add movsl inc (bad) lds (bad) repnz cmp and dec inc sbb gs jecxz xor mov cmp sub xor mov jbe (bad) outsl js mov sti aam mov mov rorb enter mov mov jne out lahf lea insl mov dec or mov inc ss add iret outsb movsb daa (bad) lahf inc adc inc rclb outsb dec int3 clc push push push in dec sbb mov arpl sahf cmpsb and test fstpl loope mov pop sar dec out mov ljmp fiadd sub (bad) into fdivr cmpsl pop xor test outsb xchg (bad) in xchg push push sbb mov inc das (bad) (bad) aaa inc xchg xlat orl cmp repnz cs packsswb arpl pop jb mov fstpt in inc mov add sbb jbe mov fisttpl xlat (bad) ss popf lahf pop cmp (bad) (bad) stos push lret add in adc push fdivrl and jmp pop int3 out or ret pop loopne fiaddl inc lret sar test or in mov or inc push dec fcompl add sbb cmp adc cwtl movl nop xor jle dec lahf popa jmp (bad) xchg xchg push lods or pop in cltd stos push xor push push push aas xchg pop dec stos (bad) mov pop push sti fstl mov mov xchg adc cmpsl dec lret cli mov mov sub sub into or push sub push std aad push test xor sbb pop and mov jle mov xchg enter jecxz inc push pop (bad) in push sbb push cmp jle xchg pop call out loop loop adc mov push sbb icebp loop scas mov jg jle sub push mov bound test movsb inc aad mov pop push push mov out clc pop insb push dec call xchg jns insl cmp jge (bad) dec lods sahf stos xor mov or jne popf xchg js ja sbb pop jmp outsl or imul testb out mov pop pop push xlat aas popa and daa inc stc std fwait xchg setp orl mov lea repnz es pop jb iret and lods sahf aaa dec jo xor mov and clc adc jne pop xchg adc jle outsl mov in xchg and xchg xchg pop xchg mov mov ret stc mov add and std sub jae adc jne popf xchg sti out and mov cs jl xchg in pop xlat push fisub dec sbb cs loope roll pop sar or insb in ja add adc mov dec pop sub mov movsl mov cmp xchg pushf dec es sub mov aad ds sbb popa xor sbb pop xor aas pop lock pop sub push aad dec jp (bad) push cmc sub popa stos push or mov xor jb pop test jmp js cmp or mov or das sub test pop in jge xor mov cmpsl mov fs and (bad) mov pop add jb js jg flds mov jbe mov (bad) lahf stc xchg aas sti inc sbb sub pop test jno jl sahf test dec inc xchg sti (bad) jns jmp (bad) lcall orl mov pop shlb lcall cmc cs addr16 (bad) xor sarl testl or mov push push push or sbb repnz pop lods or pop xor xor dec iret into mov out mov test mov push push cmpsb lds popa sbb add pop (bad) adc adc or mov fs out out shrb and dec xchg cli or xchg pop mov xor mov xchg stc mov mov lcall cmpsb inc mov add fistpll xchg pusha cwtl das cmp xor jl xchg cltd rcrl jle add pop mov jo pop push arpl std loopne aam sti lds dec ds fwait xor mov jp fbstp dec rcll or cs mov mov mov shll pop sti lcall and inc or (bad) mov icebp push pop icebp mov and jmp lods fsubr fucomp inc repz jae rolb adc push mov out sub pop xor sbb cmc xchg cmp imul mov es fcmovnu sub jbe cmc adc jno imul mov dec sbb and aam cld jno ja cmpsl je cltd jne inc push in mov stc mov cmpsb mov xchg std daa mov mov fs mov pop bound pop out out xchg pushf sbb pop mov (bad) testb add xor adc cli push xor out ret push add xor ja inc sbb jne push and xchg clc fwait and test sbb loope jo loop loope sbb int3 mov call lahf fisttp dec dec inc sbb mov movsb stos (bad) mov mov jno mov push in jl jge cltd int in xchg xor cmp push ss jp mov cmpsb push jl pop mov or xchg jge mov ds cli xlat addr16 (bad) mov int3 pop lods dec fs stc mov push jns cmpsb inc xor cmp adc imul push mov mov call mov and mov xchg fildll out jecxz jno or inc xor cmpsl lea (bad) clc imul ja sbb add adc and test aam push or or push xor imul popa stos mov cmp or inc mov (bad) xor jp add lret dec mov popa or (bad) nop jbe xchg outsb dec ja adcb xchg xor pop inc incl sbb cmp repz sahf aaa xchg subb inc out xchg sbb xor jbe adc icebp push jne cli data16 cmp xor and ja loop cmp divb add sbbb jp xor and call loopne int3 aad movb in pusha dec aaa nop xchg insl jl inc mov pop fwait mov bswap inc fsubrp xor mov cli insl and add std push pop repz popa lret (bad) pusha cmp stos (bad) ljmp mov cmpsl out jbe (bad) loope push push mov popf jne int3 sub popf aaa xor loop dec cmc bound pop cmpsl (bad) add inc sti jecxz mov out movsb mov loope adc mov jmp pop ds je pop int inc shll and daa or cmp xlat fucomi sbb fdivrl inc lods jmp sub mov and jg adc cld xchg dec jno or dec pop test ljmp pop scas test mov dec mov fs sub test and pop mov cltd sub outsl cmc test jg mov sub loope and mov push add jno sarb insl jp sub insb scas (bad) fistl std imul aas and sbb es into loop fisubl mov test lods cmp xchg jno idiv gs das pop repnz cmp and cmp pop sbb cmc xor shrl jb push jo call push mull out sbbb xchg mov loope (bad) icebp xor movsb popa paddd sbb sbb out ror cmp shlb jnp into enter inc mov test test out lea and shlb arpl rol repz in add sbb xor ljmp xor movsl lret loop scas fidivrl repnz xchg aaa sub inc cmc outsl (bad) imul popa inc mov pop push (bad) xchg js and int3 rcrl (bad) jp add sahf lds stos les xchg mov mov cld mov stc stc in jmp iret adc cmp fnop lea sub pop lahf inc xlat dec add shr push mov sub jmp xor add lods sub sahf adc cmp pop pop mov addr16 ret (bad) push xchg std cmc xorl mov roll xor mov js mov fsubl push jl or out adc fsubp ret in add cmpsb and rcr and cmp stos inc push lods add out fidiv jl and mov xchg xchg inc and xchg xor push inc (bad) mov push jecxz das fidivl mov mov pop push mov or sti popf mov pop push and xor sbb rcll clc loopne sbb pop lahf inc aas push adc out mov xchg mov lret cmp xchg pushf inc inc xor or das pop jne jno in clc (bad) mov jae mov push movsb pop jp push ja dec adc and mov loopne push pop pushf xchg adc lcall sub pop pusha pop enter sub pusha adc lahf enter or sahf jbe xchg dec inc hlt xor inc push pusha mov or inc pop cmc mov sbb ret mov sahf mov xchg add pop bound sbb or xchg xchg dec call lea icebp enter insb push loop jge sbb sub mov iret outsl lods imul pop sar cs push lods push mov mov mov stos jo adc jl adc sbb mov pusha out imul and sbb mov cmp outsl test mov jp push xchg lds mov mov pop sub iret stos jle (bad) push fnsave xchg out jnp mov lahf insl xor frstpm(287 aaa mov adc xchg dec int3 ds jo out andl add pop addl js sub cli leave ss (bad) sarl jle mov sbb adc add sub loop dec and push icebp xchg pop in pop test fwait imul xchg xchg rorb push fcoml negl cli sub xchg fwait jge adc sbb mov rolb xor inc jl mov cmp cmpsl xchg xchg adc ret or add mov ja and mov or aaa std lret orl arpl pop je xchg jge or cmpsl fcmovnbe cmp (bad) in in int3 sub icebp fs xchg adc loopne mov cmp xchg jecxz,pt adc mov add rcrl cmc pusha fsts ret insl cmp arpl (bad) pushf dec push mov jns mov jbe mov sti (bad) sub mov or (bad) ljmp or adc pop test xchg loop ljmp cmp adc mov outsl addr16 and ds sbbb icebp popf sub jge adc push mov xchg ds sahf in mov mov sub mov popf pop xchg insl imull cmp push cmpsb push aaa imull mov inc fisttpll repnz xchg mov push loop pop and fildl sub push jno bnd dec jbe cltd or sbb xor dec sub fwait outsb mov mov repz loopne jno sbbl in and aaa mov into mov cld cmp mov faddl out xor jg (bad) push pop adc xchg mov jge dec nop push cmp in js aam ds sub inc mov jbe sti push int (bad) sub inc jmp push push push cld jnp adc out sahf pop xchg jbe ret pop repnz xchg ss mov push out rolb test mov and lds sub dec outsl lods mov popa xchg mov xchg cli lret pop lods ja jb mov rcll insl in xchg inc jns xchg lea lret cmp ljmp cwtl sub pop pop sub outsb dec movsl mov insb mov icebp jl jg lret pop sub xor shr repnz inc movsl stos popa cmp rcrl pop movsb and jnp xor mov jecxz in (bad) lahf inc xchg mov dec mov fisttpll (bad) pop cmp xchg sub sbb loopne,pt push stos mov pusha xchg leave std sbb shl int3 add sbb xor push pop (bad) jae in add or sub mov pop das fs call mov inc mov int push popa push sub int3 sbb push fcmovnb mov sub fdivp mov jbe mov aam and cld popa decb lret imul fldl mov dec fisubl repnz push mov pushf push sbb dec call lea sub pop cmp (bad) leave insl fnop callw pushf in cmpsb inc cmpl cltd in sahf outsl daa and pop cld or loopne inc xor jne ds add push insw xchg repz loopne mov sti lret div cmp xchg pop adc push inc or fdivl mov shr stc (bad) les xchg xchg push and xor es fisubr out int dec inc dec js jecxz fistl push pop test jmp cmp pop jp jne lret pusha push mov inc cwtl aaa or insl fidivl jns mov jl push sar adc add inc inc push std sahf add mov inc pop jecxz cmp push (bad) insl mov push test pop scas push (bad) push cwtl ja ret outsb sbb fdivs (bad) xor and stos stos mov or ljmp shrb insb mov mov jbe inc repz push out and jle mov mov hlt aad mov mov cmp in xchg lods out cmp mov gs xor ret push pop repnz jg and xor fdivs stos (bad) stos dec out test sub jle sub loop sbb (bad) mov xchg mov add xchg in hlt adc pop (bad) cli pop pop mov push jg pop loop sbb insb mov (bad) mov sbb inc stos pop shlb xchg cmp fiadd push xchg jo inc (bad) sub xchg js gs add jnp sub dec jne jne jb cwtl (bad) mov repnz stos adc push mov scas jns test call lcall stc pop xchg scas mov or outsl movsb push (bad) jne sbb adc fbstp imulb sbb cs movsb fisubrl xor mov sbb icebp adc pop dec dec icebp ds std aaa arpl jae (bad) stc pop mov ja jmp (bad) mov (bad) (bad) lret inc stos add xor dec pop lods lea in test pop outsb mov test mov test push cmp sub test push xor jb repz jb xchg lds cmp jae shlb loopne dec fadds push jl repz aas leave cmp stc adc into test sub icebp mov push or div sarb inc fistpl into push (bad) push xchg cmp repz repz push and std cmp dec fcoms mov scas std inc insb xchg aaa outsl repnz or jp in adc sbb sub fisub ljmp scas add xchg test mov pop and in and jp lods mov lret add or test jnp mov push sub push or mov fmuls lock xor xchg (bad) in fs ss jp loope movsl mov outsl pop lea jecxz jmp sbb and mov mov mov add cmpsb or ror dec pushf xchg adc (bad) popf fabs jo inc xchg push (bad) sbb lods cmp loope inc cmp mov mov adc sbb lods (bad) xor mov add sub pop hlt xor mov jp pop mov nop ja push loop cmc push adc sbb (bad) add movsb cwtl daa and int xor outsb stos jno test add lea dec and jmp mov ljmp inc push xchg cmpsl pop xchg add sub push and int mov xor xor insb nop mov rclb testl adc adc adc test pop dec inc jne mov (bad) sub in sbb pop and mulb fcmovnbe push ja out ret jmp jge rcrb sti mov rcl mov xchg cmp fdivrs fiaddl sub sub push cld mov shll stos push pushf pop ljmp stos (bad) jge pop fwait sarb popa add mov sarb xchg pop hlt int3 mov inc jns dec and out int3 in and push fs xor mov push gs shrl je cltd pop lods cmc xor sub cmc cmp out movsl push xchg and adc jae shlb add mov mov pop (bad) xor out out leave cmp mov shrb cmp mov sbb cld mov jmp negl inc scas stc mov fnstsw adc push les mov inc and sub cmc rcrl lock mov jecxz jl add inc cld lcall mov (bad) repnz xlat mov cmc jecxz jge imul xchg addl (bad) mov jae dec cmp mov (bad) scas jge popf xchg cld pop and lods dec sti shrb daa mov rolb cmc pop ss pushf loope cmp xchg and xor mov es aaa cmp das shll rolb add fistpl xchg sub (bad) mov lcall mov test hlt lret loop (bad) loop push mov jl cltd dec pop lods push or int3 push into mov push mov shrb push lcall xor sub mov jns (bad) mov in loop enter add int add mov jns xchg cltd ljmp dec fnop push loopne and jno adc dec (bad) xchg fisubrl scas cmpsl adc daa repnz lret daa dec xor push cld cmp sub jmp or jmp call push sub dec inc jl (bad) repz loopne mov or ja adc dec xchg stc sbb dec sbb mov pop stc sbb mov and stos dec jnp xchg mov gs mov mov cltd push mov xor and adc (bad) std hlt rcrl decl mov bound mov iret stos adcl mov mov test es and push mov pop ja xchg fs pop js add xor loope adc sub out test mov (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz in pop mov cli ss add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait in pop mov gs mov data16 out xchg lea into add dec scas add rolb icebp stos jbe sbb inc sbb push xlat xchg pop call dec data16 push mov mov rcll xchg out jo push dec scas add cwtl insb icebp cmpsb dec xchg and lret mov mov dec std pop repz stos mov mov mov gs adc js std lea das jb mov in call aas insl mov or out and idiv and in jg gs add cmp mov test push stc dec shlb sti movsl adc fiadd aam fwait or dec dec lret dec adc addr16 outsb or sbb cmp cmp jmp add jno adc imul leave vfixupimmps test mov and and stos mov cltd cli or ss dec xchg lahf sbb cmp jb sub pop sbb push pushf cmpl psubw aad dec dec mov orb ror mov sbbl or js dec lahf lods mov cmp dec pop int3 mov add out xor fdivrs cld push sbb in in add xor mov sbb movsb or xlat insl jle sbb mov (bad) cmp mov (bad) mov fimull xchg jmp (bad) xchg jmp xor and xor and pushf pushf add mov mov arpl dec or dec jmp add mov ja cmpsl and sbb popf fadd mov aas push mov push mov xchg lahf fstpt iret andl mov in mov and mov cmpsb sbb rclb rclb mov (bad) sti ljmp (bad) insb sbb sbb test popa jge lock std stos sub into mov das or jl ss test hlt pop jmp popa mov lds (bad) outsb shlb lahf outsl xor push adc aaa xor or mov in inc cmp negb sahf mov (bad) (bad) int3 pop andps xchg mov sbb xlat fadds clc aaa cmpsb mov cmpsl outsl aaa pushf push cmpl xchg jo cmpsb test and and outsb adc xchg cvtps2pi adc pop mov sub mov inc sbb sub aas js xchg lods cmp push sub push (bad) xlat jns insb es imul adc mov ret int3 daa popa iret stos jecxz cmp pop sub sbb sbb xor out pop lret xchg add jno mov adc enter push data16 and add jecxz in pop mov lods (bad) jl mov shr in ficoml fstps fmuls inc (bad) pushf pop mov or fisubl (bad) fistpl inc push add hlt push pop (bad) dec out stc inc jl mov push dec dec mov lods sub mov adc popa adc or lahf mov call sub sbb ds jnp mov cltd lods pushf push pusha cwtl mov jl sub push inc dec mul pop xchg outsb jb cmc inc or push popa mov addl addr16 pop xor jge in iret mov imul loopne jmp lret cwtl or add (bad) jae sbb out push dec fsubrl scas mov loop push ds push mov std (bad) lret jno inc mov out int3 push int arpl test test mov mov or enter lcall and inc bnd nop fdecstp rol inc ret out dec sbb adc ds pop pop cmp dec fidiv scas xlat stc fistp and inc sbb in dec lahf xchg mov mov lcall cmp rol in push mov lahf and (bad) mov lds and jae pop fisttp (bad) insl sbb or push into sbb stc xor push inc dec movsl push xchg loop inc mov loop push adc (bad) add loop inc mov jle cltd sbb jl mov orl xor jmp pop pop and cmp nop (bad) cmp sarb jnp lahf adc ret insl dec call sbbb stc jmp sbb sbb loopne mov cmpsb gs mov cld sti rcrb hlt push andb sbb pop repz jb push std divb xor sub into das in and call out cmp adc dec mov xchg hlt push mov add hlt pop arpl dec sub (bad) ja lock into push sub (bad) mov aaa lods pop jo jae and psubusb inc add popf jmp cltd shrl cwtl mov in push xchg sub movsl fildll (bad) rcll xlat xchg and stos enter aas ds or es fs aad shll dec mov in sbb mov cmpsl or adc jecxz mov int3 in les call inc das mov push fwait or lret inc inc stos pop std mov pop call hlt out in xchg lea movsb mov (bad) ja bound leave call rorl nop or push push arpl jle icebp sbb std sub mov gs fiadd adc sub adc mov pushf loope adc stos push bnd pop xchg cmp dec cmp jbe lock out in pop inc popa or mov loopne sbb jle mov arpl iret jl test (bad) outsl sub mov mov movsb xchg fdivrs mov mov fbld rcll dec xchg sbb cmp jg sub fcomp mov jmp and and outsb shll push adc nop das ja in popa lds jbe cltd and jmp out movsl fldl stc sub adc (bad) xchg sub in js les mov loop or cmp addr16 aas mov stc jp or jns out push xchg in cmc fninit inc xchg xchg lods shlb xchg mov ss les repnz jbe scas xor inc inc xor imul pushl ret iret test lahf mov xchg (bad) mov inc sub (bad) sti mov pushl repnz test popf push lahf outsb ret or xlat adc add mov mov adc adc daa push fildl add test jbe rorl jnp adc xor cmp lcall lcall inc icebp sbb dec fdivrs add mov jge dec in cmp addr16 sub inc test bsr jmp or in pop stc in push call gs cmp orb out or dec in xor ret pop sub (bad) cld loop adc add add (bad) fstl fbld sbb (bad) cld jmp adc in sub test add jg xor xchg cmc nop enter mov test xor sub pop das outsl jecxz mov adc add cltd mov fs inc cmp cmp test xchg push push xchg mov test (bad) lret cld dec xchg dec sub xchg mov mov sbb cmp fldenv lods out dec xor push mov and pop or loopne (bad) hlt inc bound (bad) rcll (bad) jb pushf imul sbb cmpsb testb fwait lea popa dec popf jbe inc inc divl movsl shrl lea pop mov pop js pop pushf lea outsb sbb push push add xor cs xor pop pop scas fdivrs lock gs in negb ret popa add push popa int mov in ret mov mov lret cmp inc inc pop mov add jge int3 iret xchg pop rorl and xlat int3 add aaa push mov sub dec jbe xor jne inc adc and cwtl or subps dec push repz mov mov hlt mov int xchg xor cmp fwait icebp into xchg hlt mov cmp outsb add call lret es mov jge imul dec adc shrb xchg xor pop mov adc or loopne adc roll fdivrl sbb iret dec cmp ja jb mov (bad) fdiv push es pop or jp sbb stos inc in test scas into sub insl mov sbb inc push repnz int3 cmp fldenv (bad) sbb or push ljmp ja dec scas incl bound xchg gs (bad) aam jno jae xchg add xchg rolb popa xchg shrd add repnz (bad) cld inc jno mov (bad) jle std sbb jge xor loopne leave sbb sub in (bad) fsubrs jle aam lcall jns or andb ret gs pop cmp in pop in push sub loop (bad) leave pop xchg xchg in fimul xchg jecxz mov xchg mov andl cli scas jae pop pop ja hlt jecxz sbb push inc das adc pop ljmp insb sbb xchg popf cwtl xor sub mov mov sbb mov pop mov shr scas idivb lret pushf jae scas and lret fldenv (bad) cwtl adc push inc stos xchg xchg aas push jno jmp stos mov dec pop xor dec loope pushf mov cmp ljmp test mov push mov sbb push adc (bad) xor inc and push shll stos outsl fwait xchg adc cmp faddl mov sbb jno jmp xchg mov leave test lods repz leave fmuls dec loope sub insl out push repnz and popf call pop pop and push negb xchg jp loope and inc jne leave fisubl mov in scas xor xchg rorl aam xchg popf mov in clc push mov mov inc xor push xorl sbb mov push pop rclb jno jnp dec loop push (bad) mov mov into xor fstp mov int dec jmp pop outsl add cli xor in inc js push mov inc adc int xchg subb cmp aas sbb mov jl inc fldt popf sub and mov es push sbb sbb mov pop pop cmp pushl test mov rclb mov nop shlb outsb or pop cmp mov pop sub lea sti (bad) adc and jo mov ss adc cwtl icebp push pusha sbb cmp dec push and mov xor psrad data16 mov aam pop push imul out xchg or sbb (bad) hlt lock test sbb cltd stos mov lea xchg jle mov gs sub mov or pusha xlat xchg into push mov sbb jbe push mov pop jl mov (bad) sub inc pop popf aam inc mov int3 outsb add sbb ficom cmp ret cli fisttp andl or loopne push xor ficoml bnd sarl rclb and add ds notb push cltd pop lsl out pop jns repz popa iret pop or adc movsl insl mull cwtl aas adc dec es jcxz insb (bad) xor je lock inc jo (bad) hlt mov sub jecxz sbb (bad) push movsl or or xchg mov jae adc inc sub inc dec xchg jmp mov push lea sub mov sbb shl push rorl push mov aam in push into xor push je iret mulb mov pop stos push stc (bad) mov jnp lcall cmp ja fisttpll pop imul sbb pop imul sbb stc adc adc std icebp push xor inc jb jg stos cli lea xchg pop fstpl mov enter xor xchg push (bad) fbstp rcll cld jnp fcoms paddd fistl xor leave scas out jmp cmpsb jp rorb pop test mov enter jno jne loope,pt sub stos dec xchg pop (bad) lret jo clc das sub xor movsb pusha gs xor (bad) in cmp int3 lret popl stos jmp daa inc outsl out mov in aas cld mov fs xor jmp and loop push push push xchg lret das push dec jl mov xor sbb mov gs lret jmp loopne push or popa and pop mov inc xchg mov sbb or iret and aam addl popa or cwtl fildll mov fisubl test fstl insb loop jg mov add add dec mov pop adc xor jecxz mov addl push aam pop cmp or push sti jl pop xor repnz mov ja xchg sbb add pop sbb mov lret sahf push outsb xor je jp mov ljmp (bad) pop or inc (bad) in mov mov daa int mov faddl mov mov inc mov jle sub arpl nop jae stos lahf adcl xchg test mov xchg xlat and sbb mov in mov cmp stc mov jmp sub jle in xor pusha jp pop aas xchg inc sub and sub data16 dec lds dec mov inc rorb jae add (bad) push add shlb push hlt or push popa in fistpll (bad) mov leave mov mov sub cmp sub cmp push imul lcall push cltd mov sub out nop iret idiv sbb or adc push dec cltd inc fdivs cmpl and test inc (bad) jno inc popa addr16 cs cli xchg jmp daa lret fst cmp jecxz pop sub sub push inc xchg sbb sti lods add mov jg fidivr fmuls aaa xchg add xor adc pusha lret mov pushf hlt add imul neg scas fidivl dec aaa loope sub xor mov jmp xlat push cmp sbb dec mov out sahf cmp sbb push addr16 cmp std push adc mov clc add rorl or add das jle or cmpsl cmpsb loope inc jge std sub dec mov mov pop or (bad) mov sbb dec mov leave sti xor mov dec mov es js xor push out or movsb mov or imull (bad) mov test jle fsubl outsb imul pop cmp pop inc lea adc repz in insb add in mov mov (bad) xchg cmpsl fdivs xchg lahf ret jmp push outsb shrl in jb inc rorb push popf popl push stos sub (bad) lcall fwait xor int movsb cmpsl xchg mov fstps pushf in cmpsb lock mov cmc in shl daa mov adc jae mov enter adc mov hlt mov pusha or aad icebp push adc outsl jb in add lcall xor outsb (bad) pop (bad) mov jbe jp sbb jne test (bad) ljmp pop or arpl test and fidivr or sbb arpl cwtl xchg imul stos imul leave test ja mov das in mov divl fimul and mov cmp scas cmpsb mov test xor pop or inc mov cmc (bad) and inc sub ja jo insl mov add and int3 pop cld adc dec stos mov inc push adc fbstp loop and test mov sub xchg (bad) and dec pop add mov push imul mov leave sti neg lods jle xlat fwait call push cwtl xor pop icebp xlat dec ja sub push popa and repnz mov (bad) into mov adc ret imul mov ret pop ficoml cmpsl jo push mov insl testb sub jmp arpl cmp sub insl jg jg push inc cmp lcall xchg xor sub in mov inc mov push lock leave add nop xchg repz or outsl xchg adc add add pop push push lahf adc pop shrl lret in add imul cs dec dec cmp insl push push ljmp in mov sahf pop mov rcll mov popf fsubs (bad) (bad) or (bad) jns push ljmp or xchg cmpsw imul es adc xchg outsl inc mov dec dec mov scas xlat jno jo mov mov sbb jno xchg xchg int3 test stos (bad) mov aas aas xchg daa push sub in insl fs mov daa push pxor mov mov push cmp in pop add adc inc pop pop addr16 mov jno xor xor fisttpll pusha js pop and cli sbb dec lds mov push ret (bad) cmp push pop jl xor negl sub cmp jbe and arpl cli sarb add fstpl std cmc and or fiaddl popf popa mov xor fmull out xlat inc xlat or in adc cmp test fwait (bad) mov lret lcall ljmp iret test adc (bad) jae or jmp mov fcmovu cmp icebp push and inc cmc add outsl pop pop xor xorl cmp pop mov lret cmpsb insl and out add test push aam mov mov leave mov adc movsl daa mov mov js xor cmp je enter cmpsb push movsb sub int jbe inc jecxz stos daa lret fidivrl test loope push mov and scas test mov and jp lock fstpt jo fwait or dec xchg pop mov and in jnp xor cwtl mov into xlat fstps nop dec xor mov sbb pop jl mov push jp xchg enter xlat jo rolb in mov cmpsl daa mov cmp cmp xchg push pusha mov jge dec pop jle aam dec mov negl adc mov (bad) pop sahf sub insl ljmp pop mov cmp mov fidivrl orb push lea pop mov mov mov arpl je push (bad) repnz push push sbb xchg hlt (bad) pop stc jg jae pop jb (bad) fisubr push push mov mov das add sub ret mov addl adc outsb pop sahf push xor dec js insl push aad cltd xchg push xlat fsts cmp add popa fistl sbb pop stos and sahf xor fs adc push mov pop jb push dec cmc cwtl pop jg or cli mov mov dec imul sub pushf daa icebp cs jne pop scas insl arpl cs imul add lods loope ret stc add sub je je loope xor and dec fidivl scas add xor lcall pop jne imul lgs das (bad) lahf inc test rcrb (bad) aam mov ja sbb or test out daa xchg jge xor (bad) fs aad mov bound push cmp nop jbe dec shlb add push jg and cmp pop mov insb cmpsb xor mov test or jl ja mov cmc lahf inc mov inc rcrb out pop sbb jle dec insb adc popf ficoml lret or dec xchg cmpsl add add hlt add cmpsl rorl adc lahf xchg shrb insb ds mov xor mov hlt dec lea push jp push lods push insl or addr16 push push jae pop pop stos pop ret (bad) adc out jae mov dec sti je xchg jmp jmp push js (bad) fnstenv and insb lcall icebp inc ret (bad) outsl inc or out jge fisubr test sub jno mov mov mov aaa lcall dec jne and ja xlat sbb into arpl dec loopne push mov leave jecxz dec cmp sahf push aas daa and and mov rcr (bad) adc out popa inc sub pop lcall inc movsb dec cmp out je sbb pop dec bound scas and push mov mov sbb cmc loopne outsl dec add jnp add aad mov pop fs aad fidivrl jp cs fnstsw (bad) js icebp jp cld jp or mov je cltd sahf test repnz out and jb rorb dec fs jo and jo data16 shlb frstpm(287 sub gs test out mov jp add jno pop daa mov mov jge testl loop lahf test mov sbb push xor les and adc out js ficompl (bad) outsl or xchg cltd pop (bad) jne xor add (bad) into pop pop sbb fdivrl and (bad) dec add xor fmul inc adc adc mov out xlat iret sub and mov mov jp testb out inc ss pop mov jns jg pop sbb sahf sub mov iret adc cmp into (bad) subb arpl lea xchg loope out js add jecxz sarl and mov pop or inc inc cmc cli aad dec mov inc inc in mov jecxz popf cmp or ss mov mov mov les stos xchg dec sahf aad lea insb std pop mov cmp or mov pop sbb push dec xchg fnstenv dec sub jne data16 pop rol mov fsubp push xchg cmp aaa ret pop jo cli js jmp or imull ljmp cmp sbb mov hlt cmp xlat inc test pop (bad) es push mov arpl mov ret mov nop cmc inc xchg pop cmpb repz mov and xchg mov or push push sahf mov sbb xchg jp loope arpl jno cmc inc jne mov adc lds jge cwtl cmp bound push bswap aam (bad) (bad) gs jmp sub aad pop dec pop ja bound jb push ret cltd fildl pop in jp js in cmp roll mov scas lea popa cs push cld andl and pop lcall test gs add xchg inc xchg lahf ret jge (bad) mov sub icebp jl sub ret rorl pop mov pop sub pushf sbb xchg pop je adc jecxz fistl lcall mull lcall insb mov jle aam add jo sbb popf sub push daa add or imul mov addr16 dec addr16 outsb lcall out arpl scas cltd inc jg jne std cmpl cmc push das int3 add mov rclb or (bad) cmp popf push cmc mov out ret fwait push jnp jge push inc bound (bad) jo cmp and xor push push fwait ljmp cmp inc mov in outsb outsb imull sub cmc push xorb sub mov ret xlat inc repnz xor sub mov xchg dec out and insl adc clc (bad) repz cmp test xchg test ss xor mov add sbb inc int inc pusha fdivrs jae daa mov arpl addr16 dec xor lea push idivl mov or sub rcll lods push add mov cli add int popa xor pop lock jae lcall daa or mov sbb (bad) cmpsb jle mov jbe pushf decb xchg (bad) jg (bad) loopne and or js xor data16 outsb and xchg mov mov (bad) push mov movsb rorl lods scas movsl or or pop test sub mov jno adc movq dec sti jnp popa xor cli pop aas inc cmpsl and push adc addr16 inc int3 adc add jp mov loop push mov out fisubr (bad) jnp xchg jmp push inc scas mov add dec out scas stos sub inc fcmovne push ret lret dec and push adc mov xor into push rorb mov jo scas loopne test push scas adc std les dec mov sbb dec mov les jecxz adc imul cs rcpps subb ds fxch xchg faddl xor cmp clc out jg stc out jg stc out jg stc out jg fild add add xchg roll add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb push sub jbe insb (bad) pop xchg imul mov mov mov imul mov repz aas sahf iret jmp js jo xlat or add (bad) add mov ljmp cltd dec loopne (bad) mov stos fnsave sub aas sub ss mov stos cli ja sub out test pop sbb add in xlat jl pop or scas mov in mov stos adc ficomp mov int call loop add adc push sub ja adc or dec adc mov sub out int3 call jno scas fcmovb js (bad) enter je adc loope popa sub or out psubq inc cmp enter movsl mov lahf xor test xor scas cs lcall dec inc arpl hlt pop sbb cwtl jb jne popf lret add push cs sbb in inc loope das mov xchg rolb cli data16 sarb mov dec loope loop mov sbb jmp idiv sti addl xor jmp dec cld sbb scas (bad) daa mov fwait je jmp scas js and int3 cmp push addl xor adc adc jne ret adc ss push and xlat push xor pop rcll sub cs imul or sbb xchg sti mov mov repnz or or xchg xchg xor leave stos and and lods sbb (bad) loop mov adc mov pop pop sbb lahf dec les jp fisub adc sub add shrl popf cmp mulb cld xor pop pop icebp test js push aad mov je and (bad) das xor popa hlt pop add fwait mov (bad) fidivrl dec (bad) xor mov sti lea push jnp cmp stc scas adc je mov mov sbb pop xchg mov mov scas push nop hlt cld out xor pmaddwd aam dec dec jle pop lret inc pushl push push mov or mov cs fnstcw push push sbb mov cmc arpl mov mov pop scas xor jmp sub push xchg sub roll popf xchg cli jp ret sbb test push inc sub popa inc sarl or push dec fiaddl mov out lock cmp pop fdivrl sbb out sub test outsb dec mov xor dec sub add cli stos arpl adc aam popa or adc shll ret push sbb int ja pop xor jno adc movl aaa lods jecxz loopne jnp test push (bad) aaa sahf dec jno xor or mov inc pop mov lcall adc lea xor dec mov aam arpl adc xchg lahf sub aaa inc (bad) cmp data16 jo push sahf push mov push sbb inc loope repz mov addr16 mov into pop xchg outsl cmpsl add (bad) mov and adc (bad) call pop stc fwait hlt and mov or ljmp repz jecxz push mov lret clc pop addr16 jb cmpsb mov outsb ljmp xlat aaa mov sbb fcmovu push pop xchg pushf and pop (bad) sub pop push daa cmp mov jle lds cmp mov (bad) adc int push or rcll mov cmp outsb mulb jne (bad) cltd inc pusha and jae push jle nop and push (bad) fstps imul fs into xor xchg sbbl sbb outsb sbb pop xor pop xchg and rcll adc sub sbb daa mov xor sbb movsl js pop shlb mov pop or rol adc xor cmpsb mov addl push ja pushf pop pop movsb sub jne pop movsb cmpsl dec mov lret out out imul cmp jne jo xlat pusha xor aas and push dec aam jnp jbe and and out scas xchg scas insb mov pop les cmp mov aas test das jno inc cmpsb inc sbbb ss stos aas mov das jmp sbb inc adc (bad) cmpsb sahf fnstsw jnp mov mov pop push or fidiv inc inc dec ret mov xor fisub mov ret xor hlt push sbb icebp mov sub sub jg xchg mov pop mov (bad) xor lock jae data16 aam sub mov push pop and sbb push int pop gs daa push lods shrl push jge xchg cmp in les mov sarl sti fcoms inc inc cltd jae xchg clc notl fs test fildll stos pop or (bad) in sahf stos adc outsl addr16 cs sahf mov xchg push comiss popf xchg std fwait jecxz add push fcompl mov mov pop fnstenv push cmp add in cwtl test stc inc adc pop insl leave inc inc inc push dec or push push nop in rcrl cli dec aad out cwtl cmovae ljmp sbb and sti sbb lea movsl imul sbb mov inc jb pop mov mov adc cwtl mov fiadd ljmp nop jne lods fisttp (bad) out divl cli add dec xchg out lds xchg loope xchg jg lcall in jle fdivr in adc jae jbe repz stc mov xchg scas cli (bad) incl lcall mov or (bad) gs arpl push add push jno das cmp testl std je pushf cwtl loop pop mov cmp jecxz mov (bad) mov cli fidivr jl pushf add xor and (bad) sbb iret jl rorb fdivrl inc lock push lret imul stos xor mov icebp outsb xchg sbb jge fiadd and mov mov push push or pop (bad) imul or or fistpll add mov sti in addr16 mov jge fildl loopne jne jno out jmp mov stos add cmpsl addr16 and mov stos and jns dec (bad) and jge sbb pop pop pusha lcall lret into bound jae fnstenv pop mov cli icebp jge fidivl cmp and pop sbb mov aad sub fistpll jns (bad) sbb mov mov ret mov pop and mov or dec out shrb mov aad insb jle jg lods dec dec les cmp and xor add mov jo dec mov mov test sbb pushf add jmp sbb add sub fucomp jmp in jecxz sub xchg outsl and mov ret mov stos cltd sbb mov (bad) adc add adc jecxz pop push xor leave popf sub cmp mov mov and (bad) lock shl xor rcr test insl sub mov cmpsb notb aam rcll ds pop ss pop fimul insl (bad) inc daa leave std out std sub fild test mov lcall xchg movsl inc movsb dec and fsubl stos sub aam loopne ret jge sbb adc xor inc xchg and (bad) pop (bad) pushf jne jb int adc loope lret cmp pop clc xchg push mov xor fcompl jno jo aas fsub cs jbe repnz rorl idiv push inc jns mov jmp jmp mov inc push in push xchg inc xchg jl out sub sub test aaa mov shld jg js mov test jbe (bad) push pop xor js sub mov or loope inc decb lcall adc inc jl push xor dec and lahf addr16 shlb adc insl add stc adc out orl mov test int3 gs xchg pop mov xchg adc popf popa xor popa stos push ror pusha dec dec sti jbe xchg xor pushf pop movsb or into pminub int3 lret aad sbb es mov cmp repz and sub js pusha stos xlat loop je mov dec stos mov pop add xor or call add dec je lcall xchg loop xchg and rcpps push xchg mov test subl inc cltd mov adc mov lar lds iret mov inc xor xchg adc adc aad fmull jnp arpl es push into sbb movsb or (bad) jae xchg mul les jge ss fcomp xor (bad) addr16 lock xchg mov test clc shr inc (bad) mov or (bad) arpl jnp sbb jmp sub enter insl push pushf icebp push dec fidivr in into push jns das test lods stos punpcklbw or icebp or xchg aas stos jbe in idivl in sti pop sub test mov cmpsl clc xchg sbb insb inc ss lret ss push sbb mov sub dec sahf aad push mov ret fsubrs fcompl jl and or push gs inc out inc inc push shlb xor inc mov dec cld lahf int3 int3 jns push pop pop imul push fmuls xchg push fwait push jmp or shrl dec push mov jne or ret ja test lret imul hlt aad lods pop sub aam daa push push pop pop iret mov jle je mov and xchg xor jp movb or in repz xchg das sbb syscall lods mov mov jecxz jae data16 pop mov daa jg ficomp arpl mov sbb or ds mov mov cli fildll loopne loope cli inc xchg insl xor jmp int3 sbb jo mov divl lods adc imull fcompl out aas adc nop and mov lods ret fsub cld xchg inc add jnp or dec insb and insl in jne or add xchg enter mov in pop pusha pusha inc xor addr16 push or push push xor pop ja mov (bad) push push movsb rcll xchg out and lds jne jb xchg cmp shl pop mov call xchg mov fs push or es cs sbb (bad) and sbb rolb cmp in cld adc loop int pop rorl test sub jle xlat psubq (bad) cmp (bad) cmpsl sub enter push mov pushf jbe jnp xor test lds fidivl stos xlat cmp jecxz adc xor mov fdivl les push popa sbb pop sub les call jne pop push jp xchg insb iret cli pop sbb mov cmp jp out jle pop outsb mov imul and es repnz ret (bad) jne mov mov cmp xchg push push sub loopne addr16 jl mulb inc pop or mov (bad) sti fld1 mov bnd daa call fild out in sub pop mov xor pop in dec pusha cmc mov data16 push mov out lahf dec sub mov pop dec xchg pusha jne scas pushf add out push mov repnz xchg sub outsl add or lret mov mov movb fdivr cmpsb psrlw pop pop or push (bad) mov add jns addr16 shrl stc sahf xchg mov imul (bad) cmp and and das in aaa insl or daa iret and leave nop sahf dec mov sbb dec jle push lret scas mov sbb stos mov pop inc mov adc ljmp dec leave xchg pop jne nop loopne mov jg dec xchg popf fcoms inc jp mov dec add jmp and pop repz das sub sahf repz imul inc or pushf pop pop add or push lea inc add js inc push aad aam push inc bound xchg jmp adc cmp popa xor insb pop jns movsl push inc inc push (bad) imulb adc or out cli (bad) pop jne mov arpl shrl pop and rcrl mov and jae mov cwtl cmpsb lahf frstor sbb stos cmp mov pop mov mov imul jp or xchg test mov mov push lcall ret mov inc fild nop scas inc jle gs jmp popf mov inc push push cmp pop fmull cmp inc stos or scas and sbb stc popf push mov in jbe inc jmp out dec jnp xchg dec ficompl cmp dec cmp jecxz adc pop xchg pushf cmp fisttp push push xor adc xchg faddl pusha push aam jg incl cmp outsl fstl movsb add imul mov jecxz fdivrs outsb aad ret mov mov stos sub out lret inc or stos mov cmc out es mov and nop and xlat gs xchg mov push sbbb or or das sahf push adc or cmpsb outsb (bad) loope or cmc push jo pop retw dec into jae push fwait jle adc pop sbb mov mov insl outsb push jg,pt cltd xchg enter test push and or mov loope adc sarb es data16 out xchg xlat hlt aad dec std les (bad) mov insl gs dec scas aaa push ljmp pop push es fmuls sbb mov sbb or das orb mov dec stos cs jbe mov mov mov and mov mov mov inc mov loope cld jne or sub les cmc ja jae addl cli mov stos test cltd mov enter sahf fdivs mov inc and cmp push pusha push jmp and in inc ret fildl outsl (bad) jnp sbbl mov lahf lahf push dec push cmp iret test and lret iret addr16 iret out aad mov mov das leave sub loope and loop inc or cmp aas fucomip xchg lods lahf push test bound pop mov inc jl andl sbb cmp fsts loope jno xor dec jae pop push mov test stos iret call test daa stc xor sti cmp sub pop fs aas scas cld cs daa xchg jbe fdivrs ds add cmp cmp fsubp mov pushf repnz fidivl std sub int arpl fs fisubr xor xchg push fstps cltd push dec xchg out or mov push jle mov dec gs orl aam ja test out ret outsl mov xchg xchg js pushf sbb ret scas subl inc fs mov dec call inc (bad) (bad) add pop mov pusha mov sbb aaa inc jle cmpsb sarb data16 mov add (bad) in cmpl aaa mov es xchg sub mov stos xchg pushw push int3 jo (bad) fdivl das mov cld fnstenv sarb mov scas or push cmpsl dec mov sbb and pop cmp mov aad add daa mov outsb mov adc xor (bad) jb imul stc fcmove pusha xlat dec cli jnp mov rcrl negl imul sub loope adc push test xchg cmp mov pop shrl xchg mov js cs dec pop inc andl jp jne lods add jb icebp xchg gs pop (bad) pushf (bad) inc push jae scas push fsubrs pop mov mov leave mov loopne decb jmp or jecxz mov cmp (bad) rcrl push lock dec ret outsl jge pop repnz lcall shl sti aam popa pop fwait insb push ss movb enter xchg mov mov xchg clc imul push out adc test neg stc inc gs cs lea push dec jnp inc adc std adc (bad) pop imul mov into inc leave cltd loope pop es push ret or jge cli test repz fisubrl dec fisub stos clc sbb out aad cmp cli mov dec dec aam stc adc xchg loope imul dec or xchg inc js cs out fsubrs cmp cmpsl inc cmp popa inc call add outsl insl es adc jae leave jg sbb xor out push gs fwait pop (bad) fdivr dec in vrcpss (bad) fbstp scas subl jge sbb negl xor loope mov and xlat (bad) nop out lret jae jne cmc dec add dec inc inc hlt cli cmpsl and mov mov push movsb loopne push loope mov sahf xchg cs jp cmp test in popa stos push inc insl pop dec and xor mov cs sub (bad) lock sahf xor cmpsb int or repz xor mov or imul push popa push mov rcrl sub push push ja dec xchg ljmp scas adc sbb cli dec das cmp pop mov jp xchg sub lret lret or fldcw fisub inc xor in cmovne cmp in cmp pop sub push inc test test sub mov inc jmp hlt fs imul scas fmulp jmp cwtl fidiv mov mov mov xor mov sub mov inc in aam scas ret jae sbb arpl xchg mov jge loopne repnz rolb and push popa xlat aad aas ficompl xchg mov and inc push lds int cli mov xchg popa xchg pushf sub lcall out push push xor das out insl sbb scas lret cmc adc aad jge sub lock cwtl repnz inc pop fisub adc (bad) outsl aas push (bad) and cmp fwait push dec lret (bad) xchg cmp mov xor int movsb stc repnz sbb out mov dec or iret push sbb or idivb add dec pop notl idivl add stos lods mov lahf jno pop pop ror clc test int sbb std xlat mov mov mov add mov out mov add add lahf leave or adc outsl or dec insb bound or notb xchg shll adc pop xchg mov xor bound ds jb dec cli mov enter mov mov pop or movsl adc dec push jl jmp or negl fs (bad) aas pop cmc and rorb sbb cmpsl xor in pop jle add test mov cmpsb mov lds js ja dec mov inc cmp push sbb (bad) lret cmc icebp (bad) lahf and inc shll mov mov frstor mov in pop shr int3 aaa scas mov cltd addl lock xchg decl lock or jne js (bad) push movb xchg aam lods sub jns push mov mov int push aas testb mov pop xor jno imul mov popf mov (bad) fdivrs sub dec inc inc jno mov fwait (bad) pop jne dec test mov lcall mov and xor das inc stos or mov out mov xchg xor inc xchg addr16 push jo jbe sbb stos xchg in mov and dec dec xchg jp inc push dec sub mov shlb lahf std movsb mov jo pop lcall ficoml dec inc (bad) fcmovne movsb hlt adc and es sbb xor cmpsl adc xor jno js mov div out dec cmp push in jmp ljmp sbb mov cmpsl jg push popf sbb divl inc pop fisubr xor inc test cmp js fisubrl adc int jae addr16 or mov push stc int hlt cld or outsb std les mov lret mov mov addr16 call add push cwtd sub dec lret out mov daa push fisttpl push xlat cmp addr16 in jb jae clc jb stos sub push andl sahf xchg mov popf jle jne jb (bad) jmp mov mov or dec push test cmp add adc push fcompl mov fcmovnb je imul cli push and lea loope jb sbb sub inc lock scas xchg push sar push int3 pusha lcall dec idivb push sahf mov gs mov mov dec test cld mov insb mov lods aad mov movsl xchg push jecxz cmpsl add daa adc push push out add lahf vsubpd add in mov aam iret dec adc (bad) loop das lahf mov neg jne xor adc cmc mov mov sbb cmp xchg add adc loopne xchg or and mov xor jp leave sub int enter jg das pusha fwait pop or jae push jbe aaa loop fcompl mov cmp sbb jmp (bad) outsl sbb loop rorb adc xor lds mov sbb call int3 pop or xor scas xor mov jae push fwait aaa ss gs (bad) test pop mov or ret movsl jmp push or adc and pop sbb fsubr je loopne int3 add mov jmp push and and xchg mov loopne movsl mov jns addr16 adc pop adc jmp fisttpll shrb lahf pop lret add cmp arpl pop rcrl enter cltd out jg (bad) dec xor xchg das cmp cmp add xchg sahf gs (bad) mov mov sub xchg dec or and das mov add mov sti dec dec pushf fcomp mov mov adc jo and push enter mov sbb test xchg iret inc push shrb cmp movsb (bad) xorb out movsl pop add mov cmpsb aam in in aas (bad) repnz incb inc shll lods cli pop rcll cs lods call je xchg divb adc repnz jle inc adc leave pop pop and call out pop stos pop cmpsb mov ja cmp pop mov not loope arpl stc pop sbb gs out int3 xchg xor lret iret outsb out fwait loopne dec mov lahf lret push add repnz xor arpl icebp insb rcrl rcll enter cmp xchg jp rcrl repnz cs inc cld cmpsb out in movsl xor add mov dec lret lds xor movsl sbb ret push dec mov sbb push dec hlt lret mov jge sbb lock pushf sti lcall (bad) aas push or sahf and and icebp in jnp mov mov ja shr mov in (bad) sar js (bad) jl test inc and adc lret push aam mov xor push or mov jp dec fdivrs in adcl lahf test mov cmp movsb movl or fiaddl or stos pop xchg xor gs repnz inc (bad) lahf mov lahf les pop sub xchg in mov cmp sahf aas test pop xchg sbb adc adc hlt stos pusha push inc pop addr16 lds jmp mov shrl xchg xchg jmp lret insb sahf xor push jp adc shll cmp fbstp push mov cltd or or add aas push inc les ds lock jo in sbb jnp iret push mov cmp clc shrl push js (bad) push clc out jmp sahf dec mov xor xchg xlat lods xor jecxz mov (bad) out adc adc mov or add lods cltd mov push mov out jno cmp sar push out push xchg aaa xchg adc jecxz push ja push rcrl test clc flds adc repz pop and push mov in jl xlat sarb ret leave imul and adc or std mov sbb and fmuls jb xor xor pop roll lock jmp or sbb int3 xor pop js (bad) outsl fiadd loope xchg aas adc aad inc jmp jmp ljmp pop dec iret cwtl xlat lock or adc dec das jno cmp cltd xchg pop popf push xchg lods fnsave jle outsl ja out inc mov repz sti movsl adc das jae xrelease sbb sbb mov or sbb into mov push cld outsb mov cmp jmp sahf push les ds and stc sub mov jmp xchg mov adcl aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov out mov jbe pop sbbb inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb add loopne out xchg insl jmp mov mov jecxz insl (bad) lret scas test xchg mov mov pop add add add insb iret or mov ja jnp pop cmp lret and fsubrs jecxz loope ss lret and xor xchg ja nop (bad) fbstp fistpl xchg jo dec cmpsl inc lea ja pushf add cmp lret pop mov adcb jno mov popa xchg cmp xchg stc lods pminsw xchg xor mov push adc cli mov push repnz loop daa inc rclb pushl and push lock pop popf mov (bad) loopne mov xchg lret dec dec adc adc aam mov inc and sbb push mov xchg pop pop add mov push add sbbb mov pop addr16 sub adc pusha pushf lods xchg adc mov (bad) bound in xorl mov mov push xor insl test push (bad) icebp fiadd sbb rcr data16 sar xor ret push ss push mov test xor (bad) xor jnp aas fidivrl sub imul adc adc adcl fimull addr16 jg lds imul shll pop mov cs push in mov jb xchg arpl jmp (bad) add and data16 xor inc sbb sbb add movsl sbb (bad) inc enter ret push mov stos lret notl dec pop jmp push dec loope sbb mov mov pop cmp dec popa rcl stos jne push mov movl mov push lods mov lcall sub cmp or xchg ret jae xlat dec and cld jl (bad) lea imul cmpsl pushf nop xchg and sti repnz int3 scas stos (bad) jno adc pop and sbb sub push data16 loopne push rolb and dec lcall inc xor sub mov xchg ret mov mov pop push and xchg pop mov fistl mov push fcmovbe push jbe jge lea add jg lea push xchg stos pop mov xor pop or sbb xor fcoms sub cmp addr16 insb fsubrl push add xor cwtl add lcall sbb loop push dec push xor loope (bad) mov and mov sarb mov fildl hlt mov or in in add sub push and lea mov icebp or mov adc push bound out pop cli mov adc mov lret push (bad) pop xor (bad) in addr16 xchg lods push fildl mov fsubs lods pop into push mov (bad) mul fidivr out mul mov std mov mov add clc lahf lds mov push sub jns jg cltd lods in sub sbb das mov pop cmp push test movsl es mov std movl (bad) (bad) xor xlat inc adc jecxz,pn and scas insb pop jmp fs push or dec movsl pop mov mov or pop inc xor popf push pop out addr16 imul ja fild mov lret rclb js adc lahf jno pusha cmp xchg push cld fsubrp pop jle or stos pop mov movsb test dec xlat sub push (bad) faddl nop add mov insl xchg cmp xchg pop aad jb ds jns dec mov popa hlt add jp in aad mov and lahf push mov jns and (bad) stos aas cs cmpsl cmc das inc hlt pop iret das pop xor fdivl push add lahf js xchg cmpsb movsl fcmovb loop xor insl aas stos lods stos clc jae xchg cld fsub stc fistp sbb cmp jns,pt and out sub ss xchg mov lahf sub fildl inc (bad) iret (bad) (bad) ficoml sub xchg jmp mov outsl mov dec sbb dec mov push shl lods aas fisubr xor jno push pushf xchg lahf ret mov arpl lods fild sbb lods mov mov pop repnz dec xor std push xchg lds mov (bad) jne js jo test shlb aaa or dec inc pop les mov dec call enter cld push (bad) dec sbb cli cs mov pop lods pop add cmc mov in adc pushf leave fs adc in or adc jo fsub pop mov das sub sti pop into scas jg dec adc nop daa push mov xor fcoms adc and xchg stc repz push xchg push cmpsb pop inc inc jp jecxz cmp loop cmp dec add push jecxz dec out push call in shll add sbb jnp add aaa push insb sub mov push mov arpl insb dec mov rcrb mov sub in popf test xor out arpl leave cmp lret pop adc nop xor xchg adc mov or lods pop mov mov lret mov jno xor nop mov and int3 repz mov int3 int3 jne adc stc sbb or fbstp test mov out insl inc inc stc jns adc mov stos push xchg call mov mov push and add cwtl or jge insl jno fucomip jl loop rolb mov add mov push sub xor cmc scas (bad) sahf hlt sub sbb (bad) mov les aaa insb xlat pusha cmp and sub push iret add fnstsw push xor mov (bad) cli pop ficomp imul mov sbb movsl nop sbb pop inc pop push int3 cmp fmull fisttpll xchg in cmpsb mov (bad) push cmp add push je sub adc xchg xlat xchg sub dec cmp (bad) in (bad) and out add inc cmc and (bad) (bad) adc mov (bad) lds push mov stc aas xchg sbb inc or jg mov mov ss (bad) jbe dec mov push xor add mov hlt test ret or cwtl and bnd imul push ss in clc or jmp lret mov ss inc notb fidiv xchg and clc or xchg mov lret xchg mov and cmp push push cltd cltd mov dec (bad) xchg sahf mov int testb sbb fs lea sub into stos inc mov andl into pusha out loop leave test ss push jno,pn jl jle pop cmp iret fnsave xchg lock jbe add mul inc ret sbb ds mov lret mov inc mov fnsave inc pop iret xchg pop std mov add popf into xchg cmp add loop (bad) aad or jge jecxz inc aad add push xchg in and lret pop or inc inc lahf ret in aas pop xor xchg insb dec (bad) ficoml shll add fldl push xor in iret int mov and divl mov add mov icebp jl dec repz andb pop pop jne dec notl inc add les imul sbb out (bad) mov test (bad) addr16 testb fs or cwtl cmp or fwait push add std xchg int3 aam push test stos push push test and mov mov or arpl add xchg mov xchg (bad) jecxz pop shrl mov pop (bad) mov stos jecxz xor fstpt jno in sub mov sbb loopne or pop push fs mov and test mov mov lret div pop aaa (bad) jle mov or mov cld hlt jle (bad) icebp sub or aaa rcr iret sbb pop jp push jo fimull mov xchg xchg pop loope pop mov push test xchg aas and call push pop mov xlat cld mov jecxz sahf cmp mov shr mov call stos mov cld loope daa sub test shrb fnstcw and dec xchg enter movsb mov push pop int pop cmp xchg ljmp (bad) jmp cmpsl je add adc dec mov pop pop cli lods mov mov sbb jle (bad) cmpsb popf ss rcll aam mov arpl cs adc xor lahf mov in popf pop push adc mov or fwait daa lahf popf mov push insl popf andl add imul push mov iret enter inc push mov imul xor aas icebp std repnz pop dec cmp mov das test jmp add sti xchg (bad) clc lret sahf test dec movsl sub fucomp dec push ret mov (bad) sub or js pavgw stos lahf mov mov ss repnz outsl mov hlt lods jmp inc add js out pop push sbb jno popf jns adc mov repz xor mov add pop adc nop stc adc arpl sbb rcrl cmp shr les adc repnz sbb or adc popl add sub stos cmp xchg rcrb cmpb dec out jnp pop out sub lods cmpsl sahf xchg hlt pop fisttpl (bad) mov rclb (bad) lcall pop pop dec adc arpl cmpsl popf mov and mov push shrb in jle jecxz arpl pop aam sub jmp sarb clc stc jo shl in mov fnstenv mov inc or jmp nop (bad) sbb mov in lahf or add mov stos sbb inc cmp mov add cltd mov adc cltd and pop add lea cmp mov addr16 push lods jge pop xchg arpl lock add pop addr16 sbb (bad) xor sub (bad) cmc ljmp int3 add adc jns ds (bad) imul in xchg push xchg nop (bad) je test jl pop inc adc mov mov cmpsb repnz mov pop lcall jns inc insl jmp outsb out out pop cmc xchg inc xor sub cmc jo cmp xchg or out loope rcrl test std fmuls xor mov dec stos push inc scas and ja jp xor (bad) mul push push pop mov sbbl popf sbb add ss xrelease cmpsb adc imul fwait sbb inc sub inc movsb call hlt sub pop incb int3 xchg jle lahf push test push fidivr les (bad) ror loop sub xor mov call cmp scas add sbb inc adc push xchg xchg push add das mov lcall push out add ret call sub push lahf or push sti out loope jnp jo popa int sbb xchg insb out mov jmp sbb fsub or in or cmp xor dec jbe cs xchg mov hlt mov jecxz test stos cmp fistp (bad) ss imul enter sahf stc dec xchg incb mov mov ret fsub in jecxz jmp mulb out scas fisubl scas cltd push dec pop repz add ret cltd cmp (bad) mov (bad) cmp lret mov (bad) dec adc mov cmpsb stc add cmp (bad) xor insb mov sbb (bad) mov mov and sub psubb (bad) sub xor jbe (bad) loope in mov mov cmpsb cmp shrl daa xchg mov pop push xchg popf int test push pop dec fdivrl ret outsl ss sarb pop adc or sbb loope cmp add or sbb stos pop stos sbb adc dec and dec cld out jmp clc mov dec (bad) mov xor imul push xchg (bad) (bad) movsb arpl jl lea fmuls xchg ss dec inc outsb (bad) idiv mov mov js push inc jbe mov les (bad) jne call inc out inc test cmp loope jle scas stos jmp shl jl push sbb push lock daa pop std pop and cltd jno lock dec lahf mov jns cmpsb cmp subl scas mov push cmpsb add call push dec pop sbb mov std mov int3 fcmovu or testl xchg daa dec imull fisubr cli sti push or mov xchg push es movsl out test scas sub xor repz je jp js pop sbb cli push adc pop adc push push sub mov sbb adc xchg mov inc sti (bad) jp repz (bad) pop inc scas in sbb fnstsw call (bad) and pop mov int mov mov xor stos jecxz sub cmp popf repnz mov pop iret int mov xchg mov icebp dec (bad) or aam outsl cmc and pop cmc aad mov repnz xor int mov popf jmp into pop sub int3 shrb mov roll fdivrl (bad) stos lret and (bad) aaa push fldenv aas add dec sbb mov (bad) in sti xchg cmp push ret ss pop cmpsl repz inc push push push add inc xchg push xchg cmp ret dec cmp add push mov dec sahf decb push leave ds jo fwait icebp push push lods in fisubrl xchg movsl je push xor push mov icebp inc mov aaa add sti adc fstl jne xor push repnz or (bad) cmp push sbb scas rcr sbb test pop cmc jge inc jns ficom fiaddl gs pop pop lret and inc enter dec sbb sarl push cmp pop in mov bound test sbbb cltd popf movsb ret icebp in mov test es out cmp pop mov push mov ljmp in push push sub inc pop je ljmp adc and push and sbb mov jno mov in addr16 pop push inc insl inc mov sbbl jo adc sub rclb fdivrl sbb stos rcll cmp mov mov lea cmp dec push (bad) cmc push cmp dec bound mov xchg aaa dec data16 outsl jp clc sbb xor mulb fdivrs ds sbb ja inc lret (bad) stc jns gs (bad) ljmp push or mov sub insb jp mov dec cmpsl ja mov mov or add mov mov xchg aam or xlat or dec xchg loopne clc mov fdivrs xchg in iret mov aas lds cli dec dec movsl dec push idiv add mov push rolb or push xchg std loopne inc ds ret sahf icebp or mov jl fwait pop cmp jmp xor (bad) aam sub cmp dec mov inc movsl scas fdivr push inc (bad) jmp sub fsubl mov adc into aas xchg popf inc enter dec mov outsb (bad) pop xor mov jg scas and xor (bad) xor outsb xor sub jmp scas icebp popa es sub cmpsl xor jecxz xchg add frstor jo int3 add fwait clc push dec cmp pop xchg das add jo repz test mov scas jecxz sbb and pop fbld mov test and add inc xchg sbb enter in add pusha aam or out je sub scas pop jo fstps (bad) sub adc repnz rolb test faddl les pop movsl daa in into pop std mov fstpl (bad) movhlps rolb sbb ja jecxz in or cmp xor inc xchg dec mov dec test add fisubrl mov dec jge xchg repz pop (bad) ret add cmp cmp sti mov mov arpl add pusha jle scas stc mov or mov push inc fldl cwtl inc xchg sub mov lahf mov push mov es test imul rol gs and dec mov push loope ja (bad) (bad) jle push adc scas sbb fbld xchg stos (bad) mov mov inc jecxz dec mov outsb push or pushw rorb sbb lods mov pop jo (bad) xor (bad) dec lcall sub repnz mov mov sub jmp sub cs movsl rorb int3 cmp cmp lods lahf jo xor push adc stos jno mov inc cmpsl test pop xchg sbb xchg je lods ss pop adc xchg inc and aas fdivrl and mov mov add in fsubl mov push inc pop stc or adc out jbe inc sbb fwait movsl test adc jg sub imul (bad) rcrb ljmp adc gs lret jnp and inc push in inc or loopne popf inc sbb popa jo or lahf enter cmp dec xor mov xor mov bound in xchg aas jmp imulb mov in (bad) (bad) (bad) in xchg scas into into rcrl cwtl fidivl sahf enter out push test jne sarl ja inc mov xor (bad) fidivl and leave scas pusha adc out ja push cld (bad) leave xor sbb jg nop outsl mov scas xchg sbb mov dec popa add call and fs sub fs jns lret addr16 (bad) jle arpl cmp xchg hlt aad ljmp mov adc mov inc push adc loopne pushf fdivl aas adc cmp mov mov mov add leave aaa mov mov pushf fbstp mov xor pop jne,pt jl push mov xchg or (bad) xchg fwait jg out or movsl cmc mov and and push out bound aaa incb popa xor mov das (bad) arpl je and imul jbe fadds call lret int3 movsl clc jle adc icebp lods inc les xchg in test fnstsw cmp imul lret mov ds xchg cwtl or arpl sub fild pop sbb imul or dec insl iret js ja add xchg mov push adc test sbb pop stc jg mov or xchg sahf fs popa fwait jl cltd push xchg mov xorl sbb sarb jbe movb or sub push xchg xchg fstl subl fistpll or aas mov std sahf sub lods (bad) jo iret (bad) or (bad) and popa stos test iret and push ljmp dec push aas pop test fild aam (bad) scas iret insb adc bound push xor inc add shr jo out jnp dec jbe adc push ljmp sub jecxz cmp repnz inc and pop add ret adc fnsave cmp outsb xor cmp je push imulb pusha iret xor cmp lret cmc movsl dec jae push ljmp sbb or xor inc dec mov fs adc test addr16 loope cs test (bad) mov xor mov lods xor fs lahf lcall cmp pop flds jmp fnstsw jbe xchg adc pcmpeqw sahf stc mov add into xor xor push push sahf mov (bad) cmp push lods aaa dec xor jg sub inc and jge test sub push scas notb addr16 mov inc push sbb scas (bad) sbb fs pushf sbb fistp hlt and pop out ret cmpl add call cltd (bad) or cs sub test cwtl cmp sub pop jle inc stc pushf addr16 test mov mov arpl cld adc data16 sbb mov cmpsb enter iret mov inc in adc adc push cmc dec ds push cmp cmp ret xor or sbb pop scas cmp or ficomp sub dec mov js jae stos jns mov xor lahf push fs xor aam test adc decb jl push pop cmpl std nop push mov into jl movsl inc cmp sub inc mov mov popa test fidivrl dec and outsb test pop xchg push pop lods (bad) and adc and and adc xchg scas pop mov mov fcoms faddl sarl imul out (bad) scas push jns jl mov jge scas lret push and push dec dec inc in imul out fcompl repz aad nop and dec cmp mov push jb fidiv sub jo sbb in clc pop cltd adc arpl stos dec cmp pause or out adc jae xchg lea jle daa push cwtl jne je lock lea cmp push js (bad) fidivr in and int3 stc add addr16 cmp jge into out sub imul add hlt cmpsl and in adc ret cli mov sbb mov mov in push or ds push sub (bad) scas subl push jae pop out add daa insb arpl je outsl ds sbb push jbe mov sub add mov xchg inc out in mov dec (bad) pop inc mov sbb dec and mov dec inc lcall imul push aad and ret mov dec mov xor (bad) dec popf ret mov pushf inc adc mov pop cmpsb lret jbe popa or stos dec ljmp or pop mov jb outsb ror sub or adc adc pop popa lret xor ret cmpsb (bad) sbb add das adc (bad) and imul sub lcall jns fdivrs add arpl jb das into mov mov xor or repz das add cmp stc cmc shlb in rcrb (bad) mov push and inc loop in into insl es mov mov imulb mov xchg leave sbb int3 jecxz idivb ja mov lret aad sbb sahf cmpl imul inc dec scas jp lcall cmpl or or and xchg jne,pt dec imul inc and fsubrs fldcw xchg pop mov movsl imul mov adc xlat cs lret fstpt clc pop stos pop pushf push mov jg hlt repnz xchg mov gs pop dec dec sub sbb rclb mov mov sub push pushf sub repnz xlat dec add lea scas int (bad) inc testb pop shl pop pop lret jae (bad) and mov (bad) mov lea hlt rcrb dec push dec test and ljmp hlt mov xor test xor xor adc add jl push lods les and lock jge loopne imul and notb insb jne iret lcall fidivrl outsl out movsl dec push orl or sub gs jle mov mov ror mov mov push push jecxz repz popf pop loop push adc push pop lods xor mov scas inc arpl add jp movb pop inc jb xor sub aaa insb js,pt inc lea subb mov inc dec jbe es scas loopne nop mov sbb rol xchg lods lcall movsb inc lock cmpsb mov mov jl cmp add loop pop xchg adc cltd pop jne sbb jns push inc push pop cmp fidivr test test cmp fidivrl sahf add mov ja outsb sbb dec add xchg pushf aad mov add (bad) mov sbb and int3 popa fpatan rcll outsl push inc xor and dec mov in xchg icebp insb xchg les xor insl in popf (bad) call gs aad rcll cmp and cmp sub sbb xchg jno pop sbb xchg js jge pop jg push mov dec lock xor (bad) ja sub test adc sti push es fst lcall xchg dec xchg ret mov test out mov call xlat pusha js mov add push dec sti xchg inc (bad) adc adc sub cmp cs add jg add ds mov iret xchg pop movl movsb inc adc sbb add int3 sbb push lock call push stos adc fwait xor out dec repz jl mov insb test mov inc movsl out insb stos mov xchg sarb ss cmc ficomp sti lods cmpsl or mov mov sbb pop imul fwait je loopne (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld mov lea push add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb fwait push or sbb pop lret mov sub jae jns lret jbe test gs sti lcall out jle loope out iret add enter add add xchg loop lret jae jo inc mov xchg inc jecxz pop arpl movsl and mov xchg clc mov jno ret ret icebp lcall and (bad) sbb inc (bad) jecxz push add mov pop ja push incl popf mov xchg lds sub add inc fisub mov int3 add jno fcmovb xor xchg mov sub push test and pusha pop sbb int jo xor push mov mov and jl pushf (bad) pop enter scas mov xchg pop orb sbb or push call cmp sbb outsb and dec dec int3 int3 cltd adc push repz icebp add sbb mov cmp insl sbb ret xor std xchg lods mov mov aam push iret inc jl (bad) (bad) cmp jbe xor and daa out (bad) dec add push mov repnz dec pop out loope push bound lahf pop ja sbb aam xchg pop push xchg imul add les mov arpl enter pushf das cmc xchg inc clc mov (bad) adc repnz addr16 jne jp js loopne in mov or push inc int js in rcrb pop addr16 sub jb cltd mov xchg fcmovb jl cmp dec pop loopne lret jnp loope jle pop mov add out sti cmp or sbb sbb xorl push pop rolb enter fcomps jmp mov or mulb fcmovu stos lods ja jge adc hlt (bad) pop fldenv inc pushf cmp add jl jno xchg mov stc fdivrs das negb (bad) (bad) and dec sub sub mov adc xlat scas leave mov repz xchg jp pop (bad) negl mov push loop sbb out js outsl jno icebp pop mov test lret lret test aad jp out xchg (bad) sub sti fsubl jb shl xor cmp pop sahf cwtl pop lahf out and push adc sub (bad) jne aaa rorb dec lods in inc insl inc add imul (bad) or cmpsl xlat mov inc push and cli push test and stos sbb jo test push and push bound inc imul xor xchg jne mov xchg repz add dec sahf mov clc aaa in mov sub hlt jno movsb or adc push jmp inc (bad) cwtl dec cmovae xorb cmp pop repnz scas cmpsb aas xchg loopnew pusha into mov cs mov push lret dec dec insl (bad) or and int fsubs jp rcr push fisubr jl inc dec call lcall daa pop mov hlt icebp push ds add imulb pushf add cwtl pop mov pushf pop sbb push out ret repnz sbb subb mov inc push mov xchg inc cli jge clc xor cld test mov push and adc or sub pop cmp sahf fistp mov les dec sub adc out sti cmpsb iret lods in stc mov mov xor sub leave push ja gs (bad) push lods iret outsl xor mov out sbb jg ficomp xchg aas push es mov (bad) fidiv jmp jnp nop jno ds je pop (bad) pushf stos add jecxz das fnstcw cmc xor int3 outsl sbb int mov and dec sub or int jg lods xchg dec aad xor inc xchg xor mov (bad) xor aam push mov inc (bad) jmp fisttp in aaa icebp sbb adc (bad) push (bad) cs sub add ret dec pop xchg nop lea or inc lock scas push mov xchg pop rcr stos push dec jno arpl push mov push loope or in lret sbb pop sub (bad) jmp dec add xchg mov jae xor push rclb fs mov xor or pop dec mov lret add jnp xor sti cmp add gs fcoms test andl push jbe dec add sbb js shrb pop jns cmpsl movups je push push adc loop inc scas insb mov push jp stc inc movsb aas inc xchg xchg fs gs loope mov stos pop push leave les dec jae in pop andl and ret int push cwtl call pop bound test xor xor cld enter jb,pn cmpb mov dec int cmp (bad) mov cld sbb fldl2e icebp sub iret xorl pop mov cwtl lret mov lock xchg ret imul fwait xor add insl fcmovne jb test or loope clc int3 pop repnz push jle movb test add enter and mov and (bad) sbb sbb lret repz sub jle call inc mov inc ret inc mov jns lock arpl dec fldt int enter cmpl (bad) dec outsl sub clc sbb rorl daa xchg push pop pop in inc cmpb cwtl ficom dec scas out xchg and (bad) mov cmp cmp rcll in bound add pop fimul movsb push lret mov fidivrl ret inc xor inc jg loope les dec outsl sub test xchg stc lock sub and jp in cwtl push divl mov lea out int3 lods popf and pop mov mov shlb push popa icebp or xor xchg jg ret cmp iret ljmp loope out (bad) add adc and scas jo into sub popf jp adc imull and cmp cmp lods pop sub mov or enter adc in xchg cmp shrb aam cli call push pop lahf sbb (bad) in cwtl sahf aaa (bad) xor es mov out pop sub inc fdivrs (bad) lods imul cltd cmc push lea ja jge (bad) in mov mov arpl insb imul xchg cltd dec cmp pushf jle add push sub (bad) jns cld push push fwait out mov sti push xchg lcall mov ret loop in out sahf dec rol or insl jp lret cmpsl cmpsl inc inc data16 stc jmp or ja test cwtl lods repnz fcomi sbb aaa and mov or (bad) je sarl addl sbb inc or sbbb adc test sub insl mov dec into cmp mov push and mull call js (bad) pop enter mov dec mul cmp pop fwait inc sbb push clc pop push add js mov push fcoml (bad) fwait das xchg sbb mov addr16 jl xor adc rorb adc lret pop mov cmp (bad) in int3 call mov push lods test cwtl and je sbb stos mov pop mov dec mov push (bad) ret jns popa in mov pop fs out mov and arpl repz mov cmp xor or or push pop cmp repnz push xchg cmp test test inc mull jl inc aad cwtl lret pop pop pop subl and jno scas les mov ficomp and push dec xchg mov loope push out out clc xchg push (bad) in lods aad mov leave loop add xchg (bad) push dec mov sub mov mov int xchg sbb (bad) cmc bound or test sbb jns in insb rcrb test inc in hlt xchg arpl jl inc iret add call test xchg iret push dec sahf jb stos cld fimul adc es jecxz and mov jae test mov test jb pop push (bad) sub call mov (bad) sub fsubrp add pop lods push enter cmp sarl call jmp hlt xchg and movsl les out sbb outsl mov hlt inc stos cli xchg sbb imul push popa push enter sahf push and inc jmp inc cli xlat repnz cli jns push cmp pop pop loopne sbb fsubs sub stc mov (bad) ss xor loopne sbb mov add mov iret imul jno inc ficompl rcrb inc imul dec test and ljmp lock ret into fdiv push adc xchg push nop rcll fadds stos push js ljmp and mov std cwtl (bad) sbb cmp dec ret dec sub dec jle das push dec cmp sbb aaa icebp xor adcb aad arpl adc fst je fs cmp pusha decb dec pushf mov test mov ret xor sub pop cs inc mov (bad) sbb outsb fcomps andb pop (bad) add dec insl mov loop lock pop les push sbb adc fdivs (bad) xor jb in cmp mov mov imul jl inc pop inc xchg out xchg pop nop sbb or push mov fs hlt xchg push xorb paddd les jge lcall (bad) or das ret and push mov movsb jge mov mov loop mov pop jp adc adc fstpl jne test les push into xorl mov jbe cmp sub xchg fsubrs xchg xchg xor mov cmp dec sub scas cld leave nop sbb inc aas imul add push xchg dec xchg pop aaa pop push jp das aas arpl addr16 sbb nop fistpll xor das mov xor (bad) cwtl sbb shrb ficomp clc out and xor lea jbe cmp push insb imul mov aam clc dec inc push xchg jge (bad) adc stos inc or loop jmp pop cltd in int mov (bad) out (bad) jmp mov pop mov mov out and (bad) cld pop into adc enter rcr lea pop outsb (bad) stc repnz shlb (bad) adc xchg push sbb jmp mov lret scas (bad) pusha pop js test adc inc inc mov add mov (bad) lock mov sbb xor repz bound cmp outsb jno and jae lock (bad) or push outsl xor adc fadd sahf lods cmp or out xorb add outsb mov addr16 mov test out jb add sub xchg mov sbb outsb ljmp loope outsb scas push add sub dec dec sub or test jnp inc aas das dec inc jle lret jge mov mov dec ret inc test in pop mov mov xor (bad) xor dec jecxz test or inc add xchg enter test cld cmc cmp loopne fiadd inc mov mov addr16 mov bound cmp test cs (bad) stc sbb (bad) sbb scas cmp loop dec clc repz mov (bad) mov insl ret in jmp sbb inc lods mov outsl mov xchg or (bad) jecxz je push sub call add mov mov (bad) adc mov pop call imul xchg pop push mov out dec mov pop idivl bound xchg pop repz dec scas lea lock sub mov mov pushf cli jge cltd int3 fs mov cmpb sub sbb out and mov xchg repnz sbb xchg hlt adc std sbb sub and imull icebp cmpsb adc jmp fdiv fdivrl jns lods fsubr cmp xchg xor xor adc dec (bad) push mov mov mov in pop mov lcall mov inc jg mov sarb sti in jo jae fs andl mov mov stc mov cmpsl (bad) sub movsl push jge scas pop push clc push into mov pushf pusha mov jge mov pop clc mov (bad) les outsb (bad) cwtl or mov and dec test push sub test push mov divl xlat fdivrl fadd mov sub jnp mov push add (bad) fisubr sahf push push cmpsl inc (bad) or adc inc xchg daa insb iret (bad) outsl loopne and xor add xchg movsb or fsts pop cmp mov and hlt jne inc sbb mov jg es aam sbb mov and ja ja push pop test jle xor jnp jmp aam mov mov inc mov js add xorb (bad) mov cs mov sahf mov cli xchg out (bad) cmc ret out (bad) fdiv jo mov lret pop xchg lret push jmp ds sbb inc or cmp jmp xor push outsl stc test ret jo cmp adc mov inc dec mov mov cmpsb add insb int3 mov std push int int mov shrb push adc scas sbb inc push lods clc lods sti mov jge mov pop mov inc xchg or jae gs popf sbb idivb idiv dec insb fisttpl mov inc rol mov clc in dec pop (bad) into in ljmp in pop (bad) push cmp and sti rol push mov (bad) stos mov jge push (bad) dec (bad) push jo sbb cld fstpl arpl jnp dec ja lods and inc xor lds or mov loop lret mov and pushf int fisubrl (bad) sub rorb test push (bad) cli xor shrl and aaa cmpsb push push jge daa ljmp out push push stc jl sub dec imul mov mov pop sbb cltd mov sbbb jg repnz ja and inc testl pop into mov (bad) pop lock inc sbb popa mov jb jmp (bad) fadds cmp (bad) jle (bad) cmpsb into cmp lea add (bad) mov dec nop jmp sub sub nop into stos sbb fcmovb loop bound jp stos pop xor cmp pop sbb aas add out aaa cli mov leave jle mov push (bad) lret sbb out mov inc xor pop dec popf icebp sti out sahf pop sti pop cmpsl in shl aam jge pop out icebp or cmp fstpt outsl (bad) cmp jecxz inc adc data16 add mov imul jl lret lock xchg icebp pusha xchg dec cmp lcall insb div inc sub xlat outsl add imul mov stos icebp adc sub lret sub xchg mov push adc lret or in add push pop les sub inc cmc fcoml or in hlt jmp cmp stos loop mov mov mov jmp inc xchg je cmp xchg and xlat xor xchg push iret iret and cmp movsb in mov divl daa in xchg gs or (bad) fidivl movsb scas and mov js mov movb push test hlt inc or and aaa (bad) or jno movsl mov loop sub pusha cmc loop cmp loop lahf pusha xchg (bad) das jae push out adc negb fildll rorl pop popf dec mov inc add cmp add mov (bad) adc popl ds mov cmp jno xor mov dec push push ss or mov jle mov inc lret insl les cld ljmp les pop and es divb and int3 (bad) add xor (bad) aad inc cmpsb jl xor lea xchg xchg mov nop xor mov vunpckhpd loopne adc jbe (bad) das popf mov sub and xchg imull and mov test aaa test xchg pop jae pop in aas inc cmp add aam mov in dec mov adc push cmp sub out fwait popf push inc mov jmp jbe loope outsb nop (bad) cmpsb ja xor in and add sbb iret dec int or jae push mov fildl pop cmp jmp or pop pusha lret and mov xchg xlat xlat sbb mov adc xchg insl mov xchg jmp sub sub dec jl push (bad) mov lods imul enter add dec push in cmc push jo jl dec push sbb imul jl pusha dec add mov cmp mov (bad) ljmp jecxz hlt cmc (bad) (bad) fist add les scas (bad) cld stos and cmp inc scas ss cmpsb push xchg (bad) mov insb push int3 push test dec cs out jne xor in ret sub mov mov (bad) xor frstor xchg mov jl lods xchg adc ret sbb cwtl mov fldenv dec mov es insl and mov popf jecxz jl mov jp mov jnp push ret loope and aad add int rcrl lret or xchg push xchg pop jle pop dec ds or fwait sbb and or sbb rcll lock and sub test aaa daa js mov or (bad) cli dec jl rol jb out jg sbb push jle out lods jmp shl std sub mov adc adc mov fidivr xchg (bad) pop and jecxz (bad) movsl sub pusha std mov cwtl add pop dec or inc popf push jno push in cwtl jo sbb es test aas add jge loope clc out (bad) sbb sbb rorl lods mov push pop fnop data16 dec in pop jge push gs icebp fdivrs add stc jmp call jb shlb inc movsb cld pop sub ss sbb loop cmp jno push lcall sbb daa cmc cld sbb inc inc lret add xchg movb clc dec mov aad pushf dec xor sarl shlb jbe lea pop inc into xchg and call sub clc jmp pushf out ss daa pop xchg sub loopne sbb int lahf adc jno xchg daa les outsb and mov push mov ja pushf pop jg jmp push movsb (bad) hlt dec xchg cli push adc fdivl dec xchg pop pop loope sbb (bad) loopne sbb stc rcrb leave xchg jno xchg ss std aam inc adc (bad) xor stos mov lock pusha test sbb in (bad) adc stos inc and sbbl cli mov add sbbl into sub out les or dec outsb cltd and pusha ds mov mov int3 repz rolb test sub jo dec out push mov inc sbb mov bound movsl or mov icebp fisttp mov cmp mov lock and inc lret stos (bad) out inc sbb push sbb (bad) aas lods pop incb es jg xor jno clc dec mov mov sub jmp scas sub and add out mov mov jp push push mov sahf pop and cltd (bad) and test jecxz out push mov ljmp cmp ds mov jnp dec mov sbb mov addb cmp lahf dec adc aad dec subl cmpsl sub out scas cmpsl xchg outsl test add push (bad) xor or leave ljmp mov xor pop fidivrl jge xlat jge insl cmpb sub je xor sub les fcmove pop test and dec repnz int3 lods into (bad) in push clc in and cmpsb cld lret mov mov (bad) call ds ret mov push enter dec and and sbb std leave xchg push ja push sub lret inc or enter (bad) hlt cmp cmp mov push xchg fcmove pop mov ss mov or icebp push insb xchg (bad) jb into lods or sub mov (bad) dec ljmp mov jl cmp loopne cltd notl das mov ret dec imul mov in xor cld jae xor leave or gs das xor (bad) fdivrl pop repnz sub std inc scas imulb or xchg dec mull int3 cmp pushf add cmp dec aam add loopne addr16 clc adc cwtl and xchg jnp inc insl enter fcmovne add jns jecxz loopne xchg mov mov pushf add pusha (bad) jecxz pop cmc loope jmp fidivrl xor outsl cmp icebp mov jmp popf mov js (bad) push mov stc inc mov lret mov pusha xrelease fnstenv cmp adc data16 mov imull jmp cmp mov scas clc sahf sti mov mov xchg (bad) lret dec or fstps dec or add cltd loop jno add push mov inc or mov popf ljmp movsl out xchg sbb (bad) fs pop xchg (bad) insb shll or cmc pop sbb cwtl jbe (bad) repnz faddp mov mov mov cmc sbb and inc test jo cmpsl cli aam jge jle sahf jno pop pop adc xlat or test xchg insb and jmp jle (bad) xchg cs xlat mov (bad) adc sahf cmp cs sub pusha cmp adc loopne imul sbb repz aad enter and popa mov out inc roll sbb jecxz popa je mov dec pop adc or push into sbb adc xor cmpsb ret das aas ret arpl aam cmp fstl mov in xor fistpl sub xchg movsl mov pop cmp int fcmovnb (bad) mov inc test cli outsb lcall jle lret movb push cs ds daa or mov test aad jae jp push add in std arpl jp fiaddl nopl push cmp or lods mov fcmovnu adc xchg add add push addr16 sti lds pop bound clc sbb (bad) les roll cmp jmp xor nop xchg rclb imul (bad) movsl lods push jmp push (bad) mov ret sub mov divb stos and cmp imul dec fdivrl (bad) xchg push outsl inc xor cmpsl out stc jns (bad) insl dec hlt push mov or shl inc sbb gs call jns ss and xor pop add outsb jmp sub fdivl fnstenv popa sbb repnz jg clc fwait cld ss dec not test out and sub cmc cmpb out add push lods cmp pop in push inc mov test fisttpl inc cmpsl aam sub xchg adc lods je mov sub push sub (bad) mov dec gs orl shrl xor lods fidivr das cmp scas inc dec mov or scas mov mov leave mov in jnp stos sbb inc mov jmp adc int3 push sub mov std jl clc mov dec inc (bad) scas fldcw test xchg mov mov gs adc push out cmc loope and inc leave pop out xorb stos inc sahf jne inc lock xchg cmp gs ficom das cmp lods xchg jno add cmpsl rorb rep mov xchg push inc push mov ret (bad) cmp push jnp ss inc mov fisttpl in dec sub hlt mov mov pushf mov mov (bad) notb inc cmp sbb or leave loopne jle data16 jle rep cmp fnsave jmp jge bound cmc or lods ljmp push cmp and jb inc mov adc lea jle cli movsb lcall and mov cmp add push push mov cmpsb mov cmpsb xchg insb or clc sahf fildl xlat pop or hlt jae int pop fwait or js les mov es cmc adc xchg stc (bad) cmc push mov movsb lret cld xor test xor rorl sbb lea (bad) and sub mov bound test mov push cmpb out jg stc out jg stc out jg stc out or lret aam int3 dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret out lret ss in lret mov mov sub mov ret cs gs jmp cmp push add faddl add push nopl int3 dec (bad) sub jnp inc scas inc lret lds and xchg stos (bad) jns jb popf out ljmp cmp sub into imul aaa mov adc js pop mov lret add dec addl mov mov (bad) mov rcll (bad) stc mov lods lods stos push push sbbl lahf and repz push and outsl adc xchg lcall push pop stos arpl fsub and push jl mov out jne loop or mov pop popa push push or xchg sub loopne add dec mov repz jbe stc in mov out (bad) rorl mov imulb leave xchg mov into cmp fmuls cmp loopne rcrl inc (bad) jecxz loope or scas xchg dec jg adc ss xchg into mov lcall lea stos (bad) push lods shrb pop ficompl lea xchg (bad) xchg aam hlt loop inc push cmpb icebp xchg sbb mov in daa stc lods cmpsl mov push push jbe fist pop jnp sbb mov push data16 or xor adc sqrtss sub jp fbstp loopne and push ret fisubr inc xor out and out jl adcb sti push jnp sbbl adc push lods inc sub and out mov decw aad cmp stos mov push stos imul lcall out sbb hlt (bad) jo in flds adc add jo sbb test mov sbb neg inc and pushf in in cmp (bad) mov rorb fldl and scas add dec jecxz addr16 lds iret icebp and rorb xlat mov sbb add adc mov cmc ficoml inc fmuls add call js jecxz push mov xchg icebp xor repz imul pop fs outsb pop push push rcrb jle stos lcall (bad) repz mov test mov in adc jbe dec popf dec lods pusha ficomp lret xor fwait xor cmp arpl lret dec xchg mov or and dec test popf lret stc jo and and cli ficomp jle cmpsb mov ret push pop loop add push xchg das sub mov jb sbb sbb or sub cmp ds sbb push dec and jecxz and xchg cmc out inc jge addr16 popa push push je pop lods in imul or repz mov sub andl cmp pushf cltd ficoml xchg jae jle mov mov xlat decb sbb mov dec int3 dec jns scas mov gs pop dec push sub test cmpsl add sahf dec rorb mov or lods jae add cmpsb pop ds xchg mov imul pop sbb shrl out adc jno fcmovb cli xchg add mov cld jae add jb fsub push pushf xchg mov mov rorb aas cmp ss or adc mov cmp pusha add in lds xchg cmpsl inc ret add lret jo sbb test jmp sub mov dec aad sub in mov fwait jcxz (bad) insb xlat hlt imul fisubr das jge xchg js jp (bad) sti xor jo push std xchg (bad) dec pop test push mov in lock dec jae test jne mov add test mov pop inc (bad) lret mov pop mov jp ss (bad) pop pushf inc push dec lahf dec dec adc mov lods insb lods mov adc test or sbb fs fimull dec in ss xor xor cmc movsb push xor lock (bad) cld jmp sbb aaa or ljmp cmp mov inc inc inc or push jecxz push popf cmpsl xchg out (bad) push add jmp nop push jl (bad) andb inc fist sarl jo hlt std mov loop sbb or adc aaa std stc adc xor clc sbb (bad) in lret in js inc outsb (bad) jo mov (bad) popf ficoml sub int3 insl push add pop out inc insl mov or je jg mov int3 call adc js cmpsl mov outsb std xor subb push adcl push inc pusha fwait movsb add cltd insb push jge pusha mov lret in xchg mov loopne xlat adc jno cwtl aas (bad) hlt sub mov cld jecxz andb cmp enter testl adc call mov scas (bad) xor lea hlt pcmpeqb ret add daa mov in jecxz arpl and jo xchg inc nop mov mov and adc sbb sahf or (bad) enter lcall pop loop aam add test push fsts jle lods cltd jle pop push pop adc or jl dec jg sub or test xor xchg xor jbe fistp pop or mov or mov test ljmp push int cli lock dec mov ficom dec inc and pop popa imul hlt gs pushf pop pusha push stc ljmp adc mov pop adc test cmpsl adc (bad) and mov mov push enter push and mov mov mov dec mov loop (bad) js out xchg or ds aam (bad) pop pop dec pop mov add or add (bad) pop lret data16 adc xchg popf mov jbe pushf cli add mov in and xchg add jae sbb push nop (bad) loopne adc mov sub pop stos pop in ljmp pop inc lock mov fld mov call xor dec dec movsl or aad or push in mov xchg es scas ja inc aam xchg inc mov mov gs inc das pop les mov jb lcall xchg mov das mov pushf pushf adc mov ja pop ret nop ficoml daa xchg fdivrs gs mov in jbe pop sbb gs and or icebp int adc in loope insb add movsb hlt fadd dec cmp mov imul push mov cmp cltd add es push in pop lret mov movsl xchg cmp mov mov clc mov mov xchg dec clc cwtl mov dec xchg or push add int es sub in lahf push or sbb mov sbb ret lcall xchg testl imul sti std fiadd movsb lret mov lods hlt movsl jnp es fs push popf xchg stc jo xchg hlt xchg add bound fisttpl or out loopne lret sub pop jo mov cmp das leave lods mov and or mov lock xchg jle cmp sub push scas sub (bad) fnstsw ret push fidivrl fbstp dec nop pop jo xor mov xor stos cld add sbb int push xchg nop call addr16 inc mov xchg mov insb loope (bad) pop ret je mov imul sbb cld adc push sbbl jo xchg or ja xor clc dec and pop popa mov ds ja mov and jle jle cmp pop sti dec das sti es jecxz sub mov or cmp dec and cmp mov adc mov je loope cmp push xorb sbb jg jmp in sub push and sbb shrl xor xchg xlat and sahf negb and xor movl jo mov xor sbb mov or and mov (bad) pop sar (bad) dec sti in aad arpl push and fwait sub pop inc (bad) ret pop cmp aaa inc jecxz (bad) loopne xorl aam ret test mov (bad) cli outsl or (bad) clc adc loopne dec mov mov lahf dec ret pop sub or pop push mov and outsb cmpsl mov cmp xor rclb dec mov add loop mov cmpsl aas out aaa sub mov ret outsb ds jmp push fisttpll cmpsl std jnp fwait sub mov lods jmp out xchg push adc push sbbl es sub ja mov xchg add fstl add (bad) xor int arpl xor jmp mov hlt sub popa sbb jp icebp cmp push add mov jns das bound push test pop icebp dec lahf loopne push lret icebp mov (bad) insl xchg mov inc dec add outsl lcall pop pop orb cwtl sahf rol adc cmpsb insb push (bad) xchg (bad) pop cs jne in jmp mov lock jne int scas mov jle jo cmp bound insb les and sbb iret jne out mov mov pop push test test mov imul cs mov xchg ja fs pop pop mov add mov and push and into push int into outsl or mov mov sub enter popa into insb jle scas sub faddp mov pop fsubl js mov sbb mov adc (bad) mov subl rorl mov ror cwtl cmp mov cli fbstp cmp mov (bad) mov shrb jmp cmpsl cmpsl mov add out sub in repz sub add xlat stos dec iret jnp sbb fnsave (bad) popf pop add aad xorb mov push ja add jbe lretw xchg (bad) fldl enter inc das xchg jmp jns sub stos jg sahf fcoml jl dec das jl negb add ds enter and jmp andl adc clc pushf in sub out and xor ljmp xchg repz jnp sti cli mov lret xor rorl mov (bad) mov ret mov test movsb lods imul inc or pop shrb pop xorl jl jg jge adc push inc and add jnp mov mov sbb pushf sti dec dec popa test fcom imul sub jmp inc inc and in xor fcomps xchg jns sbb lahf shrl hlt xlat dec out pop (bad) and adc mov jnp mov push vmread adc sub aas mov (bad) (bad) out sbb mov nop push shrl pop icebp cmp xchg inc std in stos pop and push xchg out cmp icebp mov cmp add dec push bound mov adc inc ss jge lret add adc adc shlb or dec sub jg mov test insl sahf adc jg add out fcom iret pusha mov insb mov addr16 jp aad jnp out jo sahf pop push cmpsb lahf in inc mov imul mov xchg mul loopne notl stc (bad) jp mov mulb sub mov loopne in xchg xor push pusha inc in push sub adc xchg scas mov xor pop imul pop push das push in fcomi sub pop ja xchg pop pop ret aas cld int or arpl mov repnz out push push fcoms inc dec fstps pop (bad) xadd or cmp es adc xchg out rcll lret sarl seta inc mov pop xor ret cmp jae pop xchg inc (bad) fcomps cltd xsaveopt xchg xor sub xchg stc mov and movsl test pop jl sub adc jo js in push sbb fisubr jge and jo test (bad) incl adc cwtl dec scas jmp das rcrb scas mov adc xchg in fildl add fwait cmp jle xor xchg arpl mov aas imul adc jle jo push xchg inc popa dec pslld mov mov pop adc sbb mov fwait cmc imul (bad) pop mov push cmp fldl (bad) out push xchg int pushf sbb popa int leave daa popa mov or addr16 adc or dec pop lahf aad andb add inc mov mov add sbbb cmp dec jae test popf leave es mov clc stc cld cmpl lahf fsubp mov dec adc jg (bad) bound out mov pusha pop aam mov mov fst jb rcrl sbb sub or das popa push adc dec lret stos aam cltd clc sahf or outsl pusha fsubl inc pop leave pop xor add lcall xchg sub xchg mov sbb inc inc js insb call (bad) je movsl xor clc pusha mov cmp dec or pop mov aad iret call adc lods cmp ljmp cmpsl mov add mov adc jne iret ljmp or mov mov jns dec sub cwtl outsb pusha sahf and popa cli fldl sbb xchg xor cltd push cmp (bad) ss inc xchg mov xor push and push ja bound mov and xor sbb mov int aam imul cli ja insb mov cwtl ret or movsl rolb pop bound cltd decl aas test cmp adc push mov xor or sbb sbb in dec cli daa hlt icebp loopne imul xchg push jae mov orl (bad) outsl fs jb inc cld push es mov in push fsubp idivb pop xor jge xor in lahf dec pop sti mov and sbb adc mov sbb fdivrs push mov fucomip sti insb jmp xor cmp hlt cli test jb mov xchg mov rcll cmp cli pop out sub dec xchg mov ret push and imull mov fxch (bad) loope lock lods int dec aas cmp mov push xor loop loope aad jne inc jecxz jb mov xchg idivb cmp jecxz sub cmp test jmp fisubrl xchg push push jne xchg fucomip ficoml adc cmp mov outsl xor inc int daa add xchg add cmc test stos dec inc lahf xor pusha call and cmc dec inc sbb popf jb popa push sbb imul inc dec mov pop test mov inc lahf push push jae lret lahf out inc and mov xchg (bad) ss dec sub ljmp mov jo mov push jnp test pop mov cmpb hlt xchg xchg xor ja add fcomps (bad) mov mov sbb hlt iret fildl adcb mov rclb outsl dec incw mov or jmp push pop mov push ret and fisubl cmpsw push dec repnz out into outsl sbbb loop lret and jo sub cmp xor jmp ljmp xorl pop aam mov mov icebp cmp js mov mov xor loope pop mov hlt or xlat inc lahf push or mov adc inc jnp cli fdivr imul inc or fwait ret jle mov nop ljmp (bad) mov sbb daa pusha inc dec xor mov sbb sub hlt (bad) sub subb insb es clc inc neg mov and inc xchg mov jne push fsubp xor mov nop jecxz push cs nop in arpl out test and fstp mov aad int3 mov push inc xchg inc aam out js mov mov into hlt out dec jl loopne mov push or mov fcomip fwait dec lods push cmpsl popa js ja je shll scas mov out cmp fcomps xor (bad) insb inc mov movsb movsl ja pop jo jnp bswap xchg mov adc popf pop rcrl add hlt add push push je pop inc adc fldenv int cmp sbb scas fwait dec les pop iret push mov loopne pop lret xchg add and add xchg call int3 aas sbb addl pop insl lcall je loop (bad) sahf fimull lods cs ss push stos and add sub adc pop push xchg sub push inc mov cmpsl xor in cmp pop mov mov stos dec (bad) cmp cld and dec push pop ffreep push sub call push rorb mov xchg xlat mov test adc pop je lea mov sbb (bad) cltd pop test (bad) ficoml (bad) sub mov fadds jg jl mov pop mov mov xchg xor das mov mov cmp pop xchg icebp jbe push outsb loopne cmp mov and sub cmp in lds add and mov pop dec loope lret lock inc mov xor xchg sub loope sub cmc (bad) pop leave jnp,pn negl aad lahf jecxz mov inc sahf stos jb mov lods gs insl fistpll xor cmp inc mov cmp mov pop in add add or aaa ficomp (bad) lret (bad) movsb and (bad) in push jnp divb jp cs xchg jl mov sbb loopne scas mov sub jns and into hlt fwait cmpsl mov or imul scas mov test and loopne cmc lock or jno add and (bad) mov test sbb fbld faddl imul (bad) insl pop and int mov inc mov mov mov fcoml xchg sbb loopne sbb popa sahf sbb aad gs or sub enter rorb xor or push cmpsb ja jecxz and fs sub inc loop add mov lcall addr16 sarl jns mov fwait push popf subl jl xor mov adc mov inc ja jmp push pop lret repnz (bad) pusha adc inc insb inc sbb pop into lock gs sbb ss fnstsw outsb pushf jle mov loope in mov lahf stos mov xor pop pcmpeqd jno shrb inc cmpsl icebp pop pusha (bad) push pop pop cmpsl into lods in push add jmp cmp dec cmpl std push ljmp cmp es ja adc add mov mov jecxz ds fsub add das xchg fs int3 and adc outsb dec jp inc scas in inc out hlt cwtl popf pop pop inc movsl fdivrp ja cmp popf jbe push lcall jmp std and ffree sti xchg xor lahf insl mov sbb xchg stc pop ret mov out or outsb out int3 xchg add jae add les (bad) scas pop test or into movsb sbb mov loop sti fwait mov f2xm1 je sbb add dec mov mov shrl arpl das pop adcl test retw mov call xor push leave insl ret test push jmp repz dec dec fcoml fcmovbe js out pop std int3 inc mov sub cld mov repnz leave daa xor cli stos jns shll ret mov in mov imul xchg mov and xchg dec lret or in mov pushf mov (bad) in sahf dec scas mov sarb lods lock cmp fiaddl dec mov lret add outsb inc xchg rcrl adc mov and sub sub cltd lods pop iret cmp cwtl dec aam sbb pusha cmp push int3 cmp in lret xchg inc (bad) iret mov pop (bad) mov jecxz pushf sub daa outsl fmuls data16 or pop push add jl mov jbe shr cmp mov jmp mov fld paddq fs sbb xor xchg and adc adc push add mov repz xchg ja jo andb sbb fs fild aas fisubrl addl mov dec mov addr16 sub pop or sub cli jp outsl xchg sub fstps das dec and or mov mov aam sub test loop sub mov cmp cmc (bad) sbb stos ret sub stos xor (bad) adc gs inc push and pop inc and xchg jne fwait cld mov dec jno push cmp sub iret frstor imull jmp inc in dec mov jno jp cmp mov push insl out dec clc imulb fwait mov push div pop (bad) sub es out or sbb jge (bad) pop or push cmp lret movsl stos in push lcall mov movsl adc adc pop repz jno fidivr push mov std ljmp ds inc out xchg adc inc push cmp adc aam push clc mov addb and cmp jmp popf popa cli icebp mov add movsb scas pusha enter (bad) mov cmpsb in jmp sti add mov xor (bad) divl cmc adc cmpsb cmp add jl xor cmp sti inc ja sbbl test aas pop jg mov xchg xchg test into adcl push stos jae push scas fbld bound jb rcpps xchg bound movsl and mov scas mov mov jle dec mov mov mov pop cmp mov push insb out pop mov and imul fcmovu rcll pop and jle sbb jbe hlt sub outsl push adcl in pop xorb out xchg mov adc push in dec test pop imul aaa outsl in mov stc jo out lret dec loop pop xor fmuls or or test push mov cmp and dec rcll jecxz clc mov cmp mov icebp or xchg lods xchg dec stc xor std push and push mov sahf jge outsb mov (bad) xlat icebp cmp xor dec sarl out lcall bound mov mov hlt bound jbe mov shll sti lock add xchg scas sahf call mov cmp fldl push inc les dec dec xchg (bad) and mov mov inc lret mov mov cmp (bad) dec (bad) inc or mov jle pop in jmp jae (bad) ljmp push ficomp int lods xor lret jp stos dec pushf sub jb (bad) loopne mov pop inc in (bad) aaa push gs fadds sbb add xchg aad pusha inc enter sbb int3 into push xlat ljmp jg sahf in adc movsl setbe les hlt push pop (bad) lea inc dec sahf lds xchg test les lock in outsl arpl call mov push loope repz push jbe xor pop sbb mov lods nop js aad xchg inc icebp roll jne dec inc mov push andl xor push (bad) ror shrb jbe leave push mov imul jp or idivb cmp lcall mov insb outsb (bad) mov mov pop push xchg or clc bound daa scas sbb icebp cmp jns or pop dec xchg in cld sbb rcll or loop sbb jle in or clc xchg jmp cwtl movsl pusha scas pop cwtl and jg or jbe dec adc jnp sub xchg mov insl mov mov test fs sarl lret mov int3 in add sbb mov test jnp or sub inc push push sbb mov loop out mov xlat enter jecxz jl pop ss cltd gs xor xor mov fisttpll out test pop mov sub lods outsb pop enter and cmp mov imul das in xchg push das push sbb inc (bad) xchg cli cmpl cmp out ja adc mov stos mov or fistpl mov es (bad) fidivl rorl push es inc hlt add into mov lcall pushl test xchg in jmp and outsl dec icebp xor js sub loope jle loop mov ficom test inc in (bad) mov mov lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov movsb lods mull adc add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb add loopne (bad) push pop mov lret mov lret mov gs (bad) testl shrb add rolb loopne aad loope inc xor pusha std icebp pop pop into loope xor sub mov arpl cmp in xor mov jnp mov mov jno jg nopl test jne jmp insb xchg (bad) cmc out xchg pushf pop mov sub daa rolb out ljmp mov nop inc les xlat scas inc jbe adc jle pop lds fnstenv pop inc je,pn mov (bad) jb repz fs ljmp add lea and hlt je inc xor stos xchg jle pop imul jbe jne lret dec sarl rcrl adc push iret ret adc or or stc lock xlat mov fs cmp (bad) inc mov psrlq call dec jmp aas into loope test ljmp arpl movsl fdiv cmp jnp int3 mov addb xchg or cwtl mov cmp insb add mov cwtl fsubs lods in cmc pop jb scas dec into int3 mov ret aas dec out hlt sbb xor inc rorb inc test cmp pop repnz (bad) test lret cmpsl gs add popf cltd je icebp jae mov sub or add mov or cmc out mov jecxz sti inc sbb adc add mov int3 movsl lea pop add rcrl js fwait into hlt sub or scas xchg loop mov lods xchg push test push pushf and rcrl js mov xchg (bad) mov jecxz cltd cltd pop scas mov int leave les dec inc popf xlat int3 jnp pop andl in sbb cld fstp (bad) out jae push mov test mov mov out mov mov daa lods (bad) in and aas int3 add dec cmpsb adc inc pop lcall popa mov jo cs shrl fbld pop add mov jmp mov into fsubs (bad) mov movsb xorb mov outsl stc daa push out xor jecxz fidiv adc into call pop addr16 xlat out inc inc mov jg sbb cmp sub mov fild (bad) mov aaa test push outsb mov pop ss out push clc mov mov jo rcl sub mov nop or mov dec movsb clc jae popf (bad) (bad) cmp mov daa pop repz call pushf ljmp sbb jbe push fwait cmp popl push xor add cmp nop in cltd push repnz xor mov jns xchg xchg cmp iret dec stc mov (bad) imul ljmp dec and xor push out popa xchg orl adc mov mov iret adc popa (bad) jl mov xchg out cmp sub mov mov (bad) arpl cld xchg jl fnsave cli loope test sbb mov pop jnp in jnp push sbb or sbb sbb cmp mov inc test jl cli daa push inc adc js adc rcrl pop hlt insl adc xor inc iret push incb jmp jle fxch rep mov je leave sub push scas inc and push (bad) js and jle or adc inc out mov mov push (bad) in test xchg (bad) fnstsw fwait adc test inc xchg mov addr16 and jno mov dec sti xlat aaa pop (bad) cmp jg pop xchg out insl leave cmp push pop inc cld cmp (bad) aaa cmp lcall mov sbb stc and mov stos push and gs dec (bad) mov fcmove sub jae (bad) rolb jae fisttpl in orb rcll inc or pusha pop icebp jne inc adc mov aaa sti addr16 data16 dec dec mov adc mov faddl test (bad) ss negb sub adc mov inc push js sbb shr cltd scas inc xchg mov sarl mov mov adc push sbb addl mov push jle arpl (bad) cmp xchg dec jb scas xor and fwait lods push (bad) cmp in or add pop pop adc leave cmp mov push xchg iret pop bound pop dec mov mov mov mov sub movsl ss mov in xchg mov fmuls movsb or aaa sub jb sub mov xor aad jmp mov out shr lret repnz ss sahf inc es popa scas inc pop adc in dec jl mov and push pop (bad) mov out aad test std rcrb pusha stos out and out xor fildll in movsb imul jo jnp es push mov inc mov or test inc mov mov sbb mov mov cmc rorb jmp adc xor sbb (bad) fdivs fidivrl inc cmpsb mov jle ds ret lret int3 add hlt sbb and cmpsb mov popf jmp orl push popf das inc aas mov andl mov repnz mov sbb in mov pop test sbb jnp mov mov jmp (bad) xchg jmp sbb ss jbe sbb call cmp test pop sbb lea lds mov aaa test sbb aam (bad) or push add push dec mov ljmp inc inc test lahf xchg add aad sub mov mov mov sarl dec adc xor adc mov mov and fwait sbb mov clc test lahf pop shll leave mov sub mov push out and fisubrl push outsb insl insl sub (bad) (bad) scas pop lea (bad) lret in (bad) sarb fsubrs cld lret inc mov inc xor inc push or lock punpckhbw imul rcrb ret pop sahf inc inc dec fnop xchg jb inc or cmpl sahf std jo,pn pop shll data16 icebp lods lahf mov pop dec out mov xchg outsb inc cli push jbe jg clc push pop pop xchg mov mov fcomps sbb fs xchg cltd mov iret sub sub jmp das mov mov jbe ret aas sub pop shll mov movsl call pop ja mov jecxz addr16 outsl inc pop cli les mov inc sbbb adc or mov push popa shr fild cwtl pop fwait and xor sahf test (bad) stos mov xchg test and pop stos push mov cmpsb imul int3 insl add cmp in dec repnz fwait xor push mov add shrb out mov sbb sbb test push mov enter (bad) pop fistpll add jg adc jnp sbb cmp xor lcall adc lock (bad) shll out sar outsb in insl mov movzbl into push lea pusha cmp repz sahf cli push jp in popa movsb sub push mov inc ror in xchg popf outsl mov lods psubq mov outsb gs mov dec idivb sbb mov jns and cmpsb aas mov sarl aaa push (bad) sbb pop push cli xchg stos adc jecxz int3 lret xchg mov jo in push pop ja in mov scas fcmovbe mov movsb scas fbld call lea pop dec mov xchg in bound mov (bad) std jns jge mov stc cmp dec aam lock cmc jns adc xchg pop xor inc pop cmp lcall adc popa inc mov inc ret mov sarl les adc (bad) in sub jae push mov das outsb mov mov cwtl movsl push push mov add clc sbb test add ficom lds mov push adc dec xchg add mov popa lahf or js push dec pop fistl push pop jmp (bad) jl jo dec pop testl push (bad) (bad) aad add push daa add adc lret mov mov mov jge adc mov and cmp das int cmp jne adc hlt rcl fbstp pusha sbb (bad) imul insl decb push mov cwtl fs pop dec aas ret xchg out aaa insl jbe mov shrl (bad) insl aaa xor fs mov inc vcvtsi2ssl adc pop jo lret cmp jno jne (bad) outsb repz xor cmp cmp jns inc jnp std ficompl notl mov bound sub mov mov pop push lret sub add cmp pop sbb pop dec sahf cmc leave mov (bad) rorb fistpl inc in (bad) mov fprem loope xchg je mov mov xchg aas and pop mov and (bad) mov stos in into imul (bad) mov ja mov sarl pop inc (bad) scas (bad) imul cmp mov cltd xchg nop push std pop imul xchg mov lods mov adc mov bound and insl cli outsl add (bad) jle scas mov mov loop pushf mov dec aaa push je xchg enter aad cs inc or popl cmp jecxz icebp and (bad) jb addl repnz out xchg sbb xor pop subl out rcl int push and negb cmp push xchg xor call fsub sbb xchg js jg jae adc push stos call xor mov dec loopne test je sti jmp cmp arpl bound pop adc lret cmp jbe cmp repz aaa inc jl sbb jne xor cwtl mov mov out or in pop out xlat fldcw fiaddl sbb pop addb vmwrite movsl sub mov jb fild and repnz sub mov mov lea xor pop sbb das dec add out pop xor pushf lahf pusha add icebp aas decb mov out rolb test repnz xchg pop imul sbb mov add or pop sub imul pusha xlat xchg cmpsb loop pop movsl fistpll lds adc in les lods cwtl push arpl dec loopne push adc or pop sbb xchg pop add pop lret mov sbb je pop xlat jae mov xchg sbb mov xchg in rcrl out incb dec cmp jle add das hlt pop outsl call xchg mov lock imul push sub std mov cmp subl data16 mov mov ljmp out jo (bad) pop popf cmpsl mov xchg and push in xlat call inc adc mov or dec xchg dec aaa rorb test rcll xchg mov fs jp pop dec inc ds pusha pushf fwait lahf mov xchg (bad) or lcall hlt popf xchg lret push xchg fstp push in push cmpsl push mov lds in dec fs ljmp pop out dec repz mov jns loop xchg aad stos aas fsubs adc push push lret pusha sbb or push addr16 jle xor (bad) dec lret int3 loope cld mov pop adc rcrb je (bad) repnz dec pop add fcmovnb pop jae fcmove cmp jbe in pop mov sub add xor or pop into mov mov xchg jbe and pop mov into and lock mov pop cmpsl or cmpsb adc imul (bad) mov mov hlt xchg ficompl adcb inc or lcall inc in push jle loop jne bound lds js addr16 xchg dec jne pop scas jns or pop test imul push inc (bad) inc outsb sub das imulb insl je dec dec stos adc xor push movsl (bad) aas popf jge xchg and or or mov xorl popa mov lahf outsb icebp xor shl (bad) mov movsl ja (bad) jle or je xor and add add push xchg jne mov imul sub adc jns dec mov data16 adc repnz hlt dec mov cvtdq2ps jnp mov cs lds je dec (bad) (bad) (bad) dec add ret mov dec mulb mov dec mov and or lret out cwtl push das xchg xor and (bad) jmp adc push dec into pop bound pop sarl lret ret notb dec ljmp ja adc ffree dec mov fwait adc aam lret inc jge pusha out incb xchg xchg mov xchg push cmp adc subb and xchg fsubrl pop add icebp cs push or flds stos ret jo inc rcll les fild mov jb dec add repnz dec dec gs or stos add test mov dec mov mov xor or leave push mov lahf jle stos mov xchg (bad) je nop push push xchg adc sarl loopne in mov mov mov aaa fsub add add dec daa jne xor mov outsb pushf dec sbb push dec out xchg xor mov cmpsl push cli loop dec scas imul aas inc xlat jp jl sbb lahf out ljmp insl nop sub push add adc mov mov stos mov inc mov and mov cmp sbb lahf mov stc and mov or pop jno xlat outsb pop xchg push push lahf data16 out loop or adc loopne outsb or jmp and or pop sub (bad) out (bad) addr16 shrb add shl movsl outsb outsb pop sub sbb jb cli pop inc shl xchg push stos push sub pop mov leave pop jno mov fiadd push lcall inc sbb or pop push inc push mov push imul cwtl xchg orb xlat icebp (bad) adc int3 xchg mov (bad) aaa jg dec add imul mov dec mov and jmp repnz push dec nop jbe movsl mov sahf push gs cmpsl xor stos mov adc fucomip and and cltd (bad) xchg icebp or (bad) adc les fistp out es pop xlat mov test sub stc fs xor pop sbb ja ret out rol test ljmp sub jbe mov stos arpl xchg lods repnz adc or inc lcall mov gs insb leave fisubrl test aad xorl andl sub push cmpsb outsl sub dec out popf cmp call lock mov jno pop mov inc es mov mov inc dec icebp jb (bad) das insb xchg xchg sub std lret mov jge mov or add add sub shr imul jb ss (bad) int3 xchg out cmp mov push push movsl mov ljmp shrb xor fistpll ss or dec fs icebp and and and (bad) jns cmp mov xchg push sbb sub pop (bad) leave (bad) jno out inc xorl out adc les inc sbb out inc ret pop shll mov pushf aad sbb and jmp mov xor (bad) je aas mov fsubp (bad) push mov add jb movsl hlt or push push xor lock popl scas and ss pop xchg pop pushf adc ljmp aaa icebp xor and cmpsl xor sub or xchg or movsb mov mov ret inc stos pop fimull enter loope cmpsl les test sti xchg dec fcompl sti into lcall stos push fidivr lods lods mov cmp cmpsl xchg cmp and or rcrl dec cs add rclb xor xor pop add mov add push test (bad) mov ds adc xor daa fidivr and jmp push mov decl or jecxz pop sub xor out mov xchg jnp xor pop sub cwtl xor lods sub movsb mov rcrl int popa inc movsl (bad) imul mov popf test add das test sbb stc sti xchg cmc repnz in faddl xor mov push and in ljmp (bad) ds fisttpl ja popa dec dec in adc jmp data16 popa sub sbb loop pop and jo mov adc cli mov aaa mov push adc inc inc scas iret mov rcrl dec cltd cmp cmp sbb scas cmpsb in dec push adc mov cmp inc mov dec repnz movsl and mov jge pop xchg jecxz mov add pop add jge mov xchg fcomp push inc xor push (bad) shrb call push jmp mov or xor rcl xlat push stos (bad) inc and loop cmpsl lea ss mov test mov push jl dec dec pushf addr16 orl mov ficoml dec call and pop in loop push pushf and (bad) mov daa leave push cmp push sub ret in jno fstl lods sub out sub push push xacquire dec adc mov jo repz in lock mov (bad) mov mov call sub in jbe inc enter jb (bad) shrl add or fldt jg repz (bad) or add scas sbb jmp push add adc cmp jb jg add jl pop add or sar cmc mov mov ficoml mov mov jnp int3 insb lods jne movsb loopne sub loopne pushf push movsl repz (bad) pop rclb push les stos pop xor clc roll adc repz outsl clc rolb push pushf sub cltd arpl imul pop push scas mov pop (bad) mov mov lds bswap (bad) scas (bad) movsb and mov notb dec cwtl das cmp sub dec xor popf loopne xor sbb jg mov push in repz clc mov das jmp stc imul nop sbb roll out jp sbb and sub adc mov ret or jge mov popa cmpsb incl or jns xchg inc sub and add insl ja popa pop out xchg adc pop cmp adc sbb mov addr16 fs in push stos cmp or jle clc negb xchg loope jp,pt pop das and repnz lret cmc pop int3 mov outsb xchg out jae push sbb rolb outsl mov adcb ret jmp pop cmp std (bad) in in inc sbb add nop lcall ss stos imul cmpsb lret sbb pop adc sbb call insl mov adc pop mov insb pop cmc push push addl cmp push aas mov mov push popa cmp lret stos fwait ret testl cltd xor out fisubl lcall mov insb repnz popf outsl mov je cwtl insl mov call je sbb inc adc xchg add pushf movsb enter pop outsl push icebp xchg and in adc mov adc les push inc std lret (bad) jge je test test inc lock movsb inc push sbb fdivs inc int loope idivl dec or xor adc xor ja das inc jo lock js xchg imul stos jmp test mov inc loope stos or adc xor mov pop sbb scas push dec jno mov mov sbb xor aaa sbb mov mov push lea and pop adcb jnp mov ficoml int3 nop push scas test jnp sbb repz dec aas psrad fwait push sbb jle xchg xchg adc into into dec stos mov cld mov cwtl stc scas fnstcw lret inc cld jo idivb outsl out sti (bad) cmovp clts fcomip imul xor in mov cmp and iret push repnz adc call mov loopne subl add in addr16 (bad) lock popl add push outsb cli pop pop xchg cmpsb ret xor jbe xchg cmpl (bad) mov cmp jmp pop roll sbb add inc mov jno mov divb mov xor mov cltd enter sbb sub dec out jnp add xchg jb in fnstsw cmpsl mov jle jp adcb push xchg nop cltd out adc call dec mov ret les and jecxz cld xor sti push lods in outsb dec gs or mov dec jge or aaa jp pop (bad) jmp fstpl mov pusha xor xor cmp mov sti aad movsb push pop incb mov push push and mov lods or dec jp dec dec push (bad) std aaa int3 inc dec rolb or aas add out fisubrl inc pop add mov sub mov or mov mov sub aam fstps xchg push dec int3 je mov out mov fs das icebp iret into pop and sub mov aam jae dec sahf or and pop mov test dec jb insb fisttpl inc ss gs jle sub leave adc sub ficomp push lcall popf sub xor sbb adc icebp xchg xlat incb mov roll xchg fbld dec lcall xor addb inc pop je dec (bad) cmp xor inc pop dec mov sbb fstl stc out and sti mov out xchg mov or and cli jno jecxz or xchg js cmp clc mov xchg sub movsb pop mov mov imul rcll fcmovb add inc icebp and daa jne pop imulb pop xlat rcrl xor dec fcomps aaa repnz ljmp out loopew push push sub lcall sub mov cmp js push dec jnp dec mov dec jmp pop roll cmp inc cmpsl add xor pop or imul test out (bad) fsubl xor add rolb and sub push jge sub pop xor insl cmp cmp addb pop lahf mov or lahf jns (bad) dec nop fnstenv je sbbl xor leave sub mov lret imul (bad) imul cmp sub das movsb cmp sub push outsb out cmp aaa loopne test scas je dec or (bad) fcompp cld mov jl pusha add xor (bad) mov jne push push mov ficoml push stc sbb mov dec mov out sahf and push pop push jle push lret jp xchg xchg test pushf repz and (bad) cmp (bad) je mov xor loopne dec inc fdivrs daa (bad) adc inc mov mov pop jecxz xor data16 lret roll or and push adc dec push cmc jnp sbb add xor into out sbb pop jge,pn mov js dec mov stos (bad) out push cmp mov icebp or mov (bad) pop faddl lahf rcll mov add outsb ret fldt mov ljmp adc jp xor call and icebp insb fidivl dec add out test or test ljmp push mov push xor xchg (bad) mov dec clc dec ds inc int3 scas (bad) repnz scas xchg out clc add les subl mov dec jno mov dec jmp cli sub inc enter push push insb lcall sbb mov mov imull sub imul (bad) mov inc mov arpl mov inc iret cwtl lret call inc loop mov pop dec dec sarb test add rcr mov iret rol lahf lcall lahf jg lcall add xchg fwait aad xchg insb xor cmp inc or (bad) mov (bad) adc push mov or out lcall scas mov ss add lods inc inc aam aam enter sbb iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld mov inc and pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb xchg lea mov fldt insl fistpl mov repz fistpll out jae sldt or add inc mov mov out jne mov push cli (bad) jo repnz mov pop addb mov je stos loop fucom inc addr16 inc push xchg insl js test dec cmp bnd inc loop dec xor cltd sbb push stos icebp sbb xchg sub and dec push arpl or mov adc mov in mov push fist jmp enter lret jmp loop ljmp ret dec mov mov push cs jg loop inc rolb push adc lods fild cs push shrl js sbbb adc xchg movsb xchg test dec aas icebp mov adc int and dec sti lds mov dec aad inc into dec enter aam push stos xchg (bad) push or js push push cmp jmp iret jnp sbb dec nop (bad) imul mov or xor add inc gs push test inc push mov test xor jp nop aaa adc fnstcw cwtl inc pop push rcrb fsubs inc mov mov ljmp push test divl sahf lret xchg movsb daa aam sahf ret or push iret adc inc lock insb xlat pop out in ja enter push push (bad) aam xchg out jmp cs sbb std imul dec mov pop leave xchg jno lods cmp cmc and or aad addr16 cs idivl incl cli xchg or sub popf out inc out outsl dec jmp sub mov clc out cs sti sub adc jnp inc enter and push addl ret cwtl pop outsb add div xchg out dec (bad) inc adc roll xor lea stc fwait jge push xor inc inc iret adc mov pcmpgtw mov (bad) inc mov aas dec jge (bad) lods push xchg fildll adc and sub call adc test loope jmp dec sbb sbb cmpl jp jg pop in fisubr icebp pushf leave push dec mov rcrl jecxz out popa jle lods mov cld or lea std add jg jns test (bad) push adc out lret xchg adc lea xchg mov push movb fadd pop out (bad) mov cmpsl jns inc add xor imul fistpl icebp xor in adc div stc sbb test cmp out sub movsb inc rol or lcall enter xor sub das and mov jo xchg push es into jge mov loopne or into mov mov je rolb lret adc push pop jns push ja int3 xchg lods enter push jne sbb inc push pop inc pop out lret (bad) jge fsubrp push xchg lcall xchg rol mov jae add scas lock push data16 ja mov dec cmpb dec or cmp (bad) (bad) loopne and xor adc and dec inc ljmp mov int mov in scas add dec (bad) outsb ja aam pop mov pop out sub test mov movsb jne ljmp addr16 jb and cmp inc mov imul std sbb arpl out add jno jmp mov lea and popf xor lea fmuls ds in pop std xor stc movsl xchg jbe or push bnd add inc je pcmpgtd rol sbb cld jnp or out in cmpl push push out adc inc push push add fist adc cmpsl out xchg loopne loopne aaa (bad) jb arpl repnz xchg xchg dec mov sbb xor lods add mov sub daa inc popa loope push insb arpl and sahf stos mov cmp mov (bad) (bad) iret lahf sub inc jecxz ds dec sub sbb push jnp mov movsb mov sbb outsl and nop pop cmpsb les (bad) les push sarb fsubs ret push imul lods mov pop imul pusha add dec imul xchg test jecxz pushf sbb mov push insl in sub pop fcos test or int lcall mov cli mov xchg pop (bad) (bad) adc or arpl sub imul and pop pop (bad) adc jge rol xchg dec insl arpl xor cwtl xchg ss pop in les pop add ljmp hlt pop popa mov push insb cwtl push cli xor and jne push mov gs roll pushl cwtl xor ljmp and jmp cmp add in pop call in aad loope cs les mov adc add popf and mov jb mov mov int3 ss movsl movsl jbe adc cmc int pop cmp popf dec js (bad) sbb aam adc imul sbb dec adcl (bad) push repz jmp xor and xor loopne mov lcall mov pop jae xchg fs add iret xor cwtl mov fs mov xlat loope fidivl leave mov jbe bound (bad) pushf pop lods jecxz inc enter jl in ds push inc je rcrb xchg lods data16 add mov xchg push fistl fcmovne push sbb imul or in icebp push int pushf dec leave js cmp stos scas cltd lahf adc xor push jp insl xchg add popf sub rclb and fwait jle jbe (bad) jmp popa int3 fistpll dec cli test xchg movsb push pop (bad) popf dec sahf popf inc cmp fbld enter stos mov pop sub lea test mov or (bad) call adc jl xchg xchg rcrb leave repz loope fimul add dec dec popf jmp fldenv xchg lods insb adc sbb mov icebp pop xor mov mov pop scas les pop cld mov push sbb add stc lahf aaa dec inc fnstsw aad gs js or cmp dec mov hlt imul out jge rolb aam adc addr16 daa (bad) ja lds sbb pop out cli xor cmp jecxz adc mov cwtl (bad) jmp dec andl mov xchg xor xchg lea arpl jbe ret pop in sub cli (bad) data16 enter lret xchg sub xchg mov mov outsl dec inc iret (bad) ret sti iret das dec xlat rcrb mov negb dec pop push int lds jge adc mov adc sti sub push daa dec movsl dec (bad) sbb jge push cmp mov mov fbstp mov sub jno inc mov imul adcl mov pop push push enter pop cli lea fiaddl in sub scas cltd jae (bad) stos dec or inc fwait inc jmp out adc inc icebp cmp ljmp pop lea dec int hlt mov sbb test roll push inc dec daa test push xchg sub sbb jne xchg outsl add cld sbb xchg int3 ret cmp jle sub push packssdw add test in jge in insb stos in out or xor rorl shll in clc shrb adc sub jnp mov jb data16 mov xchg sbb adc sbb outsb xor ja mov in ret sub inc or lret push or mov mov xchg dec or jo dec inc std mov pusha ret xchg xor inc movhps mov mov add sub (bad) cmc imul int inc fbstp sub rcr sar jns or ret pop loop in lock push mov mov inc hlt mov jmp dec fwait je fdivr aad imul mov xor fsubrs lcall jecxz inc (bad) mov push or push outsl jp dec push mov push lret sbb nop pop adc sub aaa fsubl daa jp outsb iret cmp je add out ljmp shll cmp popa mov xchg add (bad) adc lret fcompl popa push xchg push or test stos xchg adc leave imul sub mulb jg rolb dec pop xchg mov fimull rorb dec out add cmp enter adc dec out fcmovne repz inc sub mov mov lods lds in push leave jae (bad) lock xchg gs sbb lods push ss std jo addr16 xchg ret dec mov fsubl inc lahf std dec push mov (bad) jecxz mov out jbe in inc mov xchg inc push inc jl or inc xchg in ret push or fstpl xor mov add sub aaa mov dec rcrl bound in add (bad) sub and pushf mov cmpsb xchg xchg inc sbb xor pop lcall push test in dec push jbe sub lahf test lods (bad) sbb mov fdivrs mov jae (bad) sbb pop mov in and push dec mov xchg and ret js ficomp jnp jle xor fwait fs lret ss leave xor test xor mov hlt push sbb lds std cmp pop mov test xchg movsb loopne (bad) fnsave inc shrl mov leave enter (bad) je cmpsb sub jecxz jo cmp xor mov cmp popa push cmp adc (bad) enter out inc jg cmc xlat push and movsb cwtl lods es call mov adc sub dec scas mov mov add pop mov mov int inc lds adc xor test lds mov sbb test xlat and imul or shll push dec andb dec (bad) and cs inc fdiv stos fwait push fimul ret aad jb into test out scas negb test int add sub mov shl jg lock lcall ret repnz shll out (bad) pop out mov mov jl push push in (bad) fs push sub popa sub hlt xchg mov jmp adc and or movsl or mov (bad) lock jecxz pop dec aam push mov xchg inc jae out scas jecxz xor js lds cmp mov in stc mov movsb xchg cmp and ljmp sub pop addr16 daa xchg scas movsl mov insl cmpsb cli mov sub add add and jno call dec push pop push cmp sti popa push adc ret pop out inc scas imul sub cwtl arpl outsb cmc inc les (bad) fs outsb sbb stos dec scas stos lods test dec adc dec mov jb (bad) mov adc xchg in add inc pop faddl mov pop and rolb loopne cltd add adc cli cmp adc imul enter xorb add popa pop and das (bad) pop test mov cmpsb dec data16 out or dec (bad) sbb in cmp cltd mov xor inc stos jecxz sub mov xchg xchg aad adcl mov inc xchg dec sbb sbb popa push cmpsl or or (bad) sbb sbb in fs rcll xor (bad) xor fdivrs lahf clc imulb je outsb rcr in lret loopne xlat rclb inc popf test jae aam cmp ret cmpsl and or inc xchg mov movsl lods (bad) test mov add add pop inc inc dec sub cwtl xchg jb push mov outsl add mov and xchg (bad) pushf pop mov (bad) clc jne cli mov xchg das jmp mov mov lods sbb pushf leave je pop sub and jno jp movsl jle inc sar insl fcomp mov dec mov push cmp or and loopne jp dec pop mov popf sbb xchg cld test jmp (bad) lock loopne and ss loopne (bad) cmp push push dec aaa xor les loopne in scas push out and xor lds out xor cmpxchg mov outsb and jb insl push nop sub mov dec pop into and mov addr16 xchg out lret mov xchg mov sbb repnz adc sub jae gs push sbb cs cmpsb ljmp test sbb sbb xor inc sbb pop (bad) cltd and ret push lods cmpsl dec or cmp mov push (bad) out sub jg scas xor push lds adc inc pop ljmp mov imul cmp push cltd cli repz ret push rorb push push add hlt (bad) push push jo dec cli repnz sti push and cmc ficom or adc aad (bad) test adc push push movsl pop or cmp dec mov jmp sub clc pop push push mov lea in pop cs mov push and rcrl lods cld imul insb fidiv dec cmp test pop jae leave sbb jae xor call pushf orl or shr sbb pop dec addr16 jns push aas fistl push hlt ljmp dec mov and inc dec lods cmp cltd addr16 add or std jbe jbe out fisttpl popf or jmp adc fisub jns (bad) xor mov fnstsw xchg mov leave je lods jl sub ret aaa add mov cmpsl sub and mov dec mov dec cmp lock ljmp cld mov pop mov push xchg (bad) das push jbe jbe jbe sub shrb mov cltd repnz xchg lahf sub (bad) (bad) mov sub mov js inc and stos (bad) mov mov inc (bad) add cmp mov push outsl in nop sbb mov pusha aad vorps inc cmp mov inc adc popa stc inc pushf pop mov sub mov repz mov xor movsb cmpsb sbb cmp mov stos dec or lods notb inc shrl inc mov ja pop aad push (bad) imul jge cmc imul lods cld pop fcompl mov push pop jl stc cmp xchg xchg sub pop sub cmpl adc mov test mov mov xchg fnstsw movsl (bad) push push adc ja push and stos std movsl sbb mov (bad) jnp lds mov mov iret jmp jge aam cmp or bound mov pop inc out sbb mov imul (bad) xchg aad jecxz xchg adc scas mov call stc xor push dec jo adc adc popf mov (bad) mov (bad) hlt xlat lds push dec data16 idivl hlt iret cmp lea aaa inc aam nop scas in lret add lret std sahf pop outsb or cmp mov push pop leave jns mov xchg jne mov inc xor inc int movsl test adc jne add call xor adc xchg adc add inc es xchg jno sti call cmp sbb (bad) test mov in dec jl xchg sbb sbb sub add add lods (bad) dec outsb mov mov popf dec pop mov in addr16 jle sahf clc ljmp cwtl outsb fistpl push mov inc mov bound cmp jne mov ljmp rorb js pop out int3 sub pop aad int3 movl movsb orl jo enter sub lock add gs faddp dec pushf (bad) sbbb mov xor shll push nop jne add mov jecxz lahf adc xchg pop cli inc aam rcrb sahf and or leave push call inc outsl sbb sbb xchg pop ret push push out mov jmp mov imul lods enter mov sub daa sahf add mov push gs cwtl dec mov xchg inc mov and ror xchg (bad) and add cmp sbb rorl push cld sbb push lods mov sub ret xor (bad) outsl pusha adc mov insb jmp gs out and mov fld or test loope dec sahf or lret test insb cli or arpl adc cmpl clc mov outsl push adc fstpt adc hlt jb and lret cs push push pop dec leave and sub daa (bad) xor adc in in mov movsb rol cmp scas adc loopne idivb push loope dec dec out movsb inc movsl imul (bad) jmp push data16 xchg test nop and ja push jo fmul lcall fidivrl push ds out jle aas push sub leave add jg push pop mov pop fcoms cmp jmp adc in lcall icebp cmp sub push pop inc enter xor adc fst cmc lock sub fldl or idivb push jle lock inc inc sub dec loope (bad) xchg mov sar call sub add sbb sbb repz jl clc jbe std subb mov xchg push xor out pop mov fiadd add loopne arpl (bad) mov popf dec mov inc std pop jp cmp adc rolb sbb out mov sub outsl int3 mov lahf outsl scas xor std adc (bad) xchg and pop pop pop xor notb repz mull mov xchg (bad) (bad) sbb push cmpsb push into outsb inc out mov aam jp pushf cmp out push in cmpsl leave jne mov adc fadds and sbb lds sub push jle and push push fnop aaa ret mov mov xor stc sbb aas mov loopne or cmpsb lds ror dec gs lods aaa shrb aaa jl dec push orl mov fdivrp inc cmpsb xchg mov jl push cwtl scas cmpsl xchg (bad) dec pushf or jecxz jp jmp mov push inc ret jmp pop or addb iret pushf cwtl lods lret repz jno pop jae mov (bad) add sub mov add jae lahf and fs lret mov push push decb aaa cmp movsl add gs add mov leave test push mov aaa imul and push outsl leave inc sub cmpsb cld pop daa mov ss sub clc dec dec std jns scas xor out out jmp lret sti and stos pcmpeqw push sbb mov push cmp jb,pn shr pop jle and loope,pn and in scas mov aas scas xor jecxz or inc mov xor xor cmc cmpsb mov in fbstp fistp lock icebp jp ret notb lock xor fdivrs aad inc push lcall push rol push (bad) gs fidivl out xor mov mov xor adc ja in push cmp (bad) ds adc xchg sti sbb cmp dec inc cmc mov test jnp mov push or jbe xchg stc (bad) bound mov inc into push jnp mov fwait pop (bad) or push out arpl (bad) popf aam add push test jg aaa std mov (bad) or cmp movsl out or inc xchg int3 add xchg (bad) aas sub int3 daa and stos xchg adc sbb adc frstor add enter xchg jp jne les (bad) hlt (bad) mov or push cmp mov pop cmp push fs stos push roll dec dec js cltd int3 popa scas mov inc je pop mov shrb jge push hlt outsl and addl jnp mov xor cmp push aam fbld scas xor test aaa jnp inc sbb jb mov inc adc xchg sbbl pop dec repz (bad) xor daa mov decb xchg out push sbb push dec mov push movsl lods xchg and stos pop outsl mov xchg mov js fstl mov mov push ror adc jl stos inc xor lods faddl (bad) enter sahf int3 mov or addr16 fisttpl outsb shl xchg dec (bad) shr fiadd jne mov mov lret mov sub (bad) pop nop jns jno jb jg or pushf jp xchg js push dec dec stos test mov movsl jge lcall mov dec mov dec mov inc sub imul dec push sbb lret and ljmp inc ret jl das ror sbb testl orb stos fisubl jmp stos sub jle pop mov pop aam cld mov pushf xchg mov int3 movsl (bad) out pop mov ljmp addr16 insb (bad) and pop mov sub std xchg pop lcall ret gs xchg ds imul push add push lcall mov jo mov mov dec mov test cmpsl ret xchg cli push test pop xor data16 push mov out stc in stos jg lcall dec push xchg xor out sbb xchg aaa rcll gs mov fwait (bad) das add mov push (bad) fldl sbb xchg lea pop and gs add leave sub cwtl stc sbb xchg xchg push add lds out and ss loop icebp pop sub and (bad) stos cs push ljmp outsb xchg or jbe imul jne push sbb bound hlt fldcw repz mov and pop hlt and adc out leave mov inc xorl xchg std pop push mov xor pop ss aaa (bad) cli jb xchg push imul mov sbb je add cwtl (bad) jo mov xor cltd ja stos arpl icebp arpl (bad) jle cld sarb mov roll sbb pushf push lret inc jns push mov test arpl rolb push sbb mov cmp jmp mov cmc les xchg mov mov adc dec jp xchg pop mov test pop adc ficoml jmp lds pop sbb test (bad) mov test jl ss rcll jno push jmp inc out xchg jmp rcl insl pop mov leave or aam adc cmp test popf jo cmpsw inc adc addl or and adc jmp xor std push scas sub call leave or lds jecxz cmc test les (bad) jns jae adc mov mov jp scas test js and pop stc out xacquire (bad) iret jmp mov adc les rorl std or sbb (bad) es cltd mov jp (bad) and sbb fdivrl mov movsl xchg jne sbb fadds sub fidivr fiaddl nop mov xor pop adc test pop out jno adc aam pop cmp and mov insl repz jbe mov xchg mov icebp inc pop fwait and xor sub rcrl jecxz or lcall inc movsl inc pop push xlat push pop mov popf jno sahf ja lret jecxz jle xor jmp inc and (bad) fsubrs pop dec test lds (bad) fisubr fsubs mov movsl out xor lods add lcall ret inc call jo xchg lret ret and and pop insb jae jb or xor mov pop xor repz loope icebp out mov dec lods mov inc mov adc sub pop fisub js in pushf fsub in punpckhbw sub cmc pop std popa xor (bad) outsl hlt jns stos pop jb scas adc mov aaa jmp push pop adc (bad) cli enter sub imul subl decb pop sub subb fcomps lahf fidivr (bad) inc lods imulb test enter popf test and imul pushf loop daa pop xor add cmp mov dec or and std faddl clc sbb shrl insb pop sbb push ficoml ds mov push in xor add jne outsl cmp dec repnz lret jno andl lcall fbstp mov sub mov in ja mov push enter dec idiv (bad) fisttpl sub or test inc mov lods (bad) repz test outsl lds lds mov popf popa lret (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add incl pop dec (bad) xor aam sahf add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb jae lods gs fs dec pop div mov sbb (bad) mov sbb mov push js fild and add aam pop push pop bound clc add pop cmp xor mov cld dec insl sbb sbb sbb sub lods jg pop dec sarl pop or sub pop pop jne scas pop mov mov fnstcw jle push pop mov in adc inc loopne jp fcoml jae loope insl daa push or shrl bnd dec fisubl xchg sarb stos push adcl or xchg mov sbb push mov sbb dec add sub mov add xor push mov out out inc xchg jle xchg stos sbb ror daa data16 and pop inc adc push les (bad) push jnp xchg loopne mov stos out and in cs out imul daa movaps mov lea and fwait mov testb cmc dec sub leave xchg or stos iret loop push xor mov ficomp ss popa push test mov dec cmpsl jg pop mov push sbb inc dec hlt dec and gs pop cmp mov adcl in lock mov push test push pop mov imul dec repnz xchg ljmp xchg fidivl test pop push adc jmp push dec in jb,pn add sbb and push push cltd pop insl hlt mov int in inc fidivr dec (bad) (bad) mov and fwait leave outsb stos ret sar and popa in mov loopne jl or sbb xor jns cwtl jb pop adc ja stos negb jns mov rep mov in (bad) ror or daa imul lds mov sbb add scas adc or add dec xchg sub (bad) out or pop (bad) fsubrs mov xchg out mov jb xchg mov (bad) jbe (bad) (bad) das fsts idivb mov cwtl sti fstps test lahf xchg jecxz sub push add pop add stc aaa and add scas jge lods nop pop (bad) ds adc les inc out movsb push mov cmp xor out jae cs cltd cmp movsl mov adc mov outsl inc pop arpl dec inc xchg push jb pop jne lds lock jmp out mov fistpl es mov loope and mov shll (bad) mov sub push add add aaa or add adc jmp test jecxz adc aam fdivrp enter push fstpt imul fcom pop or jg cmp jmp fwait mov xchg popf call dec mov fstpt call popf xlat arpl sub jnp push fcomp cmpsb pop not push ljmp repz xchg cmp adc mov rcrb xchg and add push imul pop or dec mov adc repz inc js and xchg xchg add mov ljmp cmp popa xor int inc lods xchg ret add and xor movsl sbb sub sbb rclb push flds jo mov sahf mov faddl out push xchg sub push data16 rcll push mov cli repnz pusha das outsl inc popf scas pop mov mov jns jmp adc jp andb dec jge mov sub xchg jmp adcl mov fwait or or xchg pop loopne adc mov jne xor xchg cmp sub call cmp xor data16 and daa jne int3 fdivrl xchg sbb ret pop cmc xor in outsl xchg andl mov repnz inc xchg cmp nop negl mov pop push loop jno in xor lea fdivrl or imul ret jmp jb mov (bad) data16 data16 inc jns inc push lods xor cmp cmpsl push pop xchg jb ret xchg jmp mov xor int pop inc inc jbe and imul add je jmp mov fs jg xor outsb gs and std je adc adc loope xor or jbe fistpll inc (bad) jno movsb fimull enter das sbb aaa addr16 test std test push ljmp or imul mov dec xor je fnsave or cmp loop xchg sbb inc add loopne and js imull cli adc (bad) out push pop lods fisttpl (bad) mov mov cmpsb sbb hlt xchg mov cmc mov test dec xchg ret and (bad) push mov outsb sbb cs xor ljmp xchg xchg pop push xchg sahf fwait mov fsubr xor (bad) (bad) insl add into sub pop movsb cmpsb mov jb adc (bad) scas int sti testb inc push or lret out dec mov divl pop pop (bad) or arpl cmc rclb stos jae out mov cmc int3 movsb sub dec inc inc cmp xchg cwtl rol adc imul aas jg inc scas xor lods mov jb dec (bad) adc push out mov ret or ficom mov lret jle fadd cwtl jbe dec enter fidivr ja mov and es dec jg jl gs lahf ficomp repz je fnop ds negl ljmp dec push cmp jg in jecxz lcall pop or add hlt (bad) (bad) call fisubrl mov xor pop dec dec cld or push xor pusha testl ljmp mov ss cld push mov mov roll inc mov jle fadd stos pushf xchg cmc mov sarl out pop pop icebp lods das pop cmpl stos cmp cld lock mov inc lock sub xor push pop inc shrb mov adcl mov inc pop mov scas fmul jae out icebp mov jp pop fidivl jp jecxz xchg xchg mov xchg adc (bad) jle cli lock ret cmp mov mov ret jbe fisubrl daa shr inc xchg ret (bad) ret and mov loopne lds xchg mov lods inc ljmp adc ret mov mov xchg cmp or and lds mov jle xchg cmp push mov nop loope in int xchg icebp fimul push in imul inc mov test inc (bad) imul lock mov int3 pop mov inc xchg out imul leave movsl sub movsl jns ficom mov sub push fwait into loopne jge jno push xor comiss es aam mov nop mov in call mov xchg not andl in pop scas sbb enter add call and cs fldl push call cmp insb push dec or outsb push xchg cltd adc sbb (bad) add bound jle pop sub clc pop add adc push xchg pop rorb pushf inc sbb and pop stos mov dec inc lock cmpsl and popf sub lahf int3 mov insb sarl jo (bad) inc sbb arpl insb xchg pop loopne adc cmp daa or add add aaa ret test jne mov aam outsl daa add push mov test addr16 jo push rolb xchg arpl sbb mov icebp fstl outsb jmp push enter outsb and (bad) fisttpl push negb daa rcll mov ds hlt sub xchg les in sbb stos or pop out inc pop divl pop mov fmuls sub fs adc push stos out fildll test cmpsb xchg pop flds pop mov mov cmp aam movsl cmpsl adc pusha shr mov cmp aaa jo cmpsl sub addr16 (bad) pop hlt push cmp ljmp js std inc xchg pop push ljmp aas and xchg adc cmc sahf pop push (bad) sbb mov pushf jmp stos lods push daa shrl loope outsl popa mov jmp fcomps daa dec pop andb ret (bad) add or pop mov in adc add ficom sarl in sub lahf outsl cs iret mov mov jnp push sub jge sub add ss jle or add sarl insl push or mov jae dec mov xchg pop es outsb xlat test loopne iret mov mov sar addb aas repz jnp mov rclb mov and jg mov (bad) dec jmp jae jp imul lcall xchg jl xchg test in sti test dec xor orl mov sub push mov int imul jle or iret sub in and shrl hlt setne cmp out dec popa test and psubsb shrl sbb xor out arpl ss push cmp dec jns pop xor push nop dec repz bound in add test pop xchg int3 push sub pop cwtl aad dec and faddl (bad) pop cmp dec int3 or mov clc sub sbb and lret jg repnz or or xor mov mov popf loopne push jl inc stc pop adc jg lcall inc sahf nop outsb idivb sbb push xor popa enter mov stos xlat pop mov fstps cwtl mov dec and (bad) clc dec sub icebp adc scas int fcmovbe cltd std push fwait dec loopne out rcr lds (bad) outsb and test xchg inc fistp mov stos inc xor mov pop gs sbb loope mov cmp pop mov mov mov jmp xchg dec mov loopne aam cltd jb cmpsl mov dec bnd clc aas cmp mov xchg adc mov and adc in stos xor mov dec jo aaa cmpsl or imul xchg mov frstor ret repz dec mov or xor scas pop insl cmpsb sub cwtl inc fiaddl data16 pop add pop jo hlt aaa push jg or sbb mov cwtl data16 mov jge lahf xchg mov and rcll insl adc rclb adc push or imul cwtl fbld leave orb ja jnp or push sub fdivrl psubsw cmp or (bad) mov lcall inc scas test jnp data16 nop fisubr stc aaa cld loop je dec fdivrs push mov stos out je hlt fimul ret out (bad) stc cli sbb cwtl addr16 jmp mov pushf ret fsubrs insl lods imul hlt pop jmp xchg (bad) insl adcl lods fsubrp push dec xor dec movsl imul lea xchg dec push mov cmp xor mov or into or lock or xchg pop add pop mov (bad) out inc jl (bad) fs sbb lds loope push test jb cmp repz testb inc lds insb arpl xor inc je cs dec sub mov mov xchg stos fisttpl lahf xchg jo outsb out adc push aas (bad) mov or jno add dec push je ljmp xchg mov pop mov ljmp inc or push mov and ljmp and sbb mov push jne loope xor xchg mov xlat adc mov xor push test adc hlt mov and xor xor sbb cmp sbb xchg scas mov out test insb pop imul fdivl pop xor fidiv or mov add mov scas nop sbb (bad) jne out and hlt mov enter inc jmp insl cli pushf mov jg arpl test sbb mov jno xor rorl mov dec adc lcall addr16 fdivrp cwtl cmp dec or and jne push roll lret xchg sbb inc xchg mov mov iret jno pop bound iret jae xchg lea jle dec imul rorl mov sbb outsl xlat lahf xor cmc sub xor cltd pop or pop jge stos push jge (bad) mov push jbe adc pusha das imul stos push test cld xor and mov lcall (bad) push (bad) popa pop and xchg pop jmp dec xor cmp fcmovne popa mov lds test mov pop ljmp inc lea push sub jmp pop mov test ja,pn ds jl lods xor mov pop or cvtps2pi pop pop ss mov push xor (bad) test es sbb and roll mov jb dec aam pop sbb mov jne scas pop sub mov xor test out lods add sbb jno (bad) dec mov jne (bad) add push add jo ret and xchg push sbb mov add cli aaa sbb subl pop in sub fmull js and xor lds dec daa fcmovnbe or mov (bad) cli ret adc aad mov test or and in jmp outsb lret mov mov push fs movsb or (bad) mov inc xchg loope dec loop test mov jge popa (bad) fistpl jne adc sub jl insb es (bad) lods mov in pusha xor push push fidiv mov loope mov shll xor imull add add aas lcall es in (bad) sti test mov mov shll jnp inc (bad) (bad) (bad) ss (bad) int push jbe std mov add sub adc pop cmp adc icebp push inc mov in mov mov jg xchg xchg lock fwait mov sti push test int3 sbb mov pop mov pop (bad) (bad) adc cmp fisub inc popa push mov insb loopne or and jo arpl sub iret mov jb das (bad) sbb sub fisub in pop pavgb lods inc imul test in in sbb je dec push sbb leave icebp outsb jae fxam pop lret lret popf xchg divl dec std inc (bad) enter loop dec or jne out (bad) push mov rcrb (bad) jnp and or xchg xchg xchg test aam fbstp outsb fnsave clc mov add mov int3 out jp lods loope pop xor adc push movsb (bad) sub addr16 movsb mov ss push pop lret rcr lods fs iret sbb mov (bad) icebp mov std push int clc fdivrl cmpsl pop insb shr mov dec fdivs or stos mov mov sub cmpsb in sbb lds dec js mov or pop cmpsl test mov (bad) addl test jbe mov stos inc and ss nop adc adc mov mov push sbb insb adc cmc cmc out adc push (bad) xor (bad) xor push sbb gs test sbb mov xchg in dec mov out test (bad) out push loope stos push loop jbe fnstsw icebp sub int pop mov dec ss pop or jne xorb iret adc and test (bad) je scas outsb bound lock xchg das and icebp mov je xchg ret push mov aad or je jg mov xor cmpsb xchg insl loop popa or xchg stos mov sbb insb adc enter cmp mov dec sub lds fsubs fs mov pusha sti mov repz sbb fsubl insl out mov push inc jnp lcall mov xor or hlt lcall imull add pop popa sub arpl fs cli jns xor xor sbb in shl mov loopne cmpsb xbegin std and xchg lods jg shlb inc pop rolb mov cmp add jae cmp lods in inc push insl cmpb sub cmp and aaa add mov push test mov stos inc test jns pop ss lcall jp addb fistpl int jb mov add popa loopne cmpsl adc jne lea push inc out lods test sbb rsqrtps and cs ljmp mov dec jp stc imul add insl xor jns outsl repnz inc mov push rorb insl fwait sub repz mov mov ret xor mov jns out add es mov inc cli xchg lret push push cmp int3 cmp ficom lods jae push fildll icebp dec fs jmp arpl ljmp out add push pop mov cmp sbb mov daa jmp jle dec mov cmp mov sub push jp test mov add insb adc aad (bad) int3 xchg sbbb xchg pop inc dec imul call addr16 (bad) lock loopne out test pop repz jnp in and xchg call push sbb lret aad movsb or jae pusha inc push sub arpl add in add lods sti std lahf pop or adc enter xchg inc pop pop mov xor test js push dec test imul js xor (bad) in ja dec dec cmovge test lock ljmp lock or jne mov inc int3 int jg xchg sbb jge fldl mov or cli sbb xor add cmp mov out mov adc sahf jns cmp in dec mov insb sub mov adc jmp in add pop xchg dec leave lods sar sub xor jns ljmp pop mov call push or sarb ret xor sub stos test push leave inc cmp adc cmp bound cmp aaa adc inc adc fnstsw arpl mov inc cmp test outsl and mov mov (bad) mov iret and xor outsb gs jg sbb inc fs lods xor scas push sub inc loopne into (bad) adc les pop dec pop (bad) fmulp in xchg sub xor fldl pop mov mov aad add in inc sub outsb icebp cmpsl std and jle mov fimull call adcl push pop push sub add jbe jmp pop mov sub hlt out mov stos sbb pop (bad) call incl pop fcompl mov jae push push inc mul es cwtl push cli call xchg icebp jnp add or loopne fdivrs mov out leave enter jae out lods cmp pop dec mov xchg xor outsl mov mov lret ja jge and and cmp in or sub dec imul mov int lcall mov adc cli ljmp lods or cmc cmp rorl mov push mov fs mov add jbe xor in pop insl jecxz mov mov xchg mov in mov in mov stos and scas sbb out xlat cmpsl mov outsl mov inc (bad) cs push aas imul adc sbb in insl cmp stos xor das ljmp je repz (bad) std mov sub scas aas jnp or stc ds xchg mov imul into ljmp lock cwtl or cmp mov sub ja mov jge pushf cmp pop cmpsb aam mov xor clc shll pop cmp mov in push ss rol shll inc jns inc enter sub outsl mov inc pop mov pop loope out fisttpll (bad) mov sub les idiv mov mov jbe lret call xor cmp out xor inc ja loope mov jl push mov cmpl test pop enter add and add fnstenv testl out adc adc inc sbb std in xchg push jno cwtl xor push shr loope,pn divl xchg cmpsb loop push lret mov or adc mov mov inc dec xchg sbb (bad) push xor js sub jl add push cwtl les sub and jno fmull addr16 jle pushw fcoms dec bound push mov xchg out push leave xchg cmp adc int xchg mov jp inc sbb lods push icebp loopne and test rolb xor lods (bad) repnz pushf out adc add jns cltd movsl jne add pop scas mov pop xor sbb jg xchg sarl push jp iret dec pop stos movsl push hlt cmp or jb mov and daa nop mov xchg shlb ds into mov push dec and push es popf lods in mov mov fisubrl pop sbb mov ret jge sub jns mov pop jns pusha xchg add fldt xchg fcompl mov std xor rol cmpsb mov adc xor xchg dec std add in pop daa imul pop mov cmp dec lea fist inc cmpsb test pop cmp xor dec pop movsl cmpsb scas or mov data16 repz popf pop mov dec call jle sub lods xor push add mov inc xchg jmp pushf je fistpll push and mov adc jp ds xchg xchg dec daa idiv adc cmc fincstp jo jg sub inc aaa push mov cli imul cld jge (bad) push push jo mov adc inc (bad) xlat push testl or pop cmp fcoml sahf xchg pop movsb push xor arpl popf sbb ds xchg incl cmp sub (bad) push sub addr16 fcom cmp lods push ret sub bound aaa mov js sbb daa sarb jle xchg jns int ret pop (bad) mov cmp icebp jle mov enter jl test mov ds cmp and xor sbb cmp dec jb xchg ret cmpl aam jo pop ds aaa insb pop add adc xchg (bad) adc popa in out out in fs imul pop sahf hlt outsl pusha inc pop dec test cs push sahf mov gs adc aas das pop scas gs pop pop jp push push fnstcw movsb dec lea mov (bad) nop shr les dec aaa mov sub in aad push pop jno jbe push scas jae pop stc test test aad loope xlat xchg push fcoml repnz (bad) incb call mov inc adc and ja mov cmp lcall pop int3 out push out js and and lret mov or mov jae rcr sub or xchg xorb lea pop push cli xchg pop ss int3 ret stos out pop and aaa jb mov jg mov stos or add sub test cs jnp mov or (bad) out inc push sbb push mov adc leave pushf and js fwait sahf in cmc mov sub adc dec push jg scas jb mov out aaa mov pop dec shld adc ds mov mov jmp dec adc dec dec push jl (bad) xor mov push (bad) scas add mov xchg cmc gs (bad) mov ds or mov xor pop mov (bad) push jp ffree pushl out adc fisubrl sbb mov push inc adc dec and mov xchg je int3 testl loopne aad rcrb std lahf test mov jno stos inc push mov sub in dec aas pushf dec push add jle adc ret test adc les aaa stos cmp mov cltd adc mov outsb movsb int jb daa stc mov mov aam mov push mov mov mov jno into pushf mov xor pop add mov dec xchg jno push cmpsb out jo xorl mov adc add ljmp jns xchg pop ljmp cmpsb imul out and cmp mov insb (bad) lahf adc arpl mov pop out pop data16 sbb das mov nop cmp int rcll or lret enter dec jbe cld ret cmp cmp aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld jg add pop arpl jmp (bad) add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb (bad) repnz jecxz fldt jbe pop cmpsl xchg in fldt (bad) out ds idivl mov add and sbb fwait cmpsl nop (bad) pop push out lret fucomp fwait mov int sub ljmp or lds imulb sub mov stos add sbb mov pop int out idivb sub ret add push fcmovu cs mov fnop pop jle cmp jl fbstp clc imul out stc jp ss sbb loopne test jo lret pop mov mov sub ffree mov outsl in test adc out inc pop xor lcall lods (bad) jne stos pop sarl movsl inc int3 nop sarb popf sub add dec fldt aam repz in mov imul aam inc les out loope jno xchg mov xor enter xchg (bad) dec adc mov lock fbstp mov lcall lock pop sub imul mov fist fild test shrb shl lahf or jg push adc cmp and cld sbb aam push clc ret leave dec pop mov jge mov insb and aas rorb xchg add sbb (bad) jno cwtl push pop ja mov shrl pop jl inc push pop data16 push insl mov push pop or xchg push into dec into inc mov pop lahf pop das inc pop inc imul aas imul sub lret lea test mov test test sbb mov pop adc aaa push xor sub and (bad) pusha imul aad out cmpsb out sbb pusha mov sbb add mov push push fistp ss inc mov in add mov lods (bad) (bad) daa push push cld gs pop mov xor or movsl js mov lcall stos jns sbb push aam ficom jbe adc add mov sbb add rclb xchg sbb les jno inc push inc jb adc mov xchg cmp fcoms int pushf push mov scas int3 mov cwtl jno int insb pop insb adc lods aaa popf loope (bad) or mov push aas daa and lcall repnz out push dec aad jle,pt js push adc aad sub mov and sti int3 mov out cli inc push adc lods and pop mov mov (bad) mov lret jecxz push loopne pop and sub test fwait in shll jb cmp jmp inc jmp push mov ret xor stc push sbb pop mov push adc mov mov enter enter dec pop adc sub jbe test popf jne inc xchg (bad) dec fcompp outsl mov inc inc push arpl rolb mov mov jb std (bad) jae gs scas fidivrl mov mov cmp sbb or cmp and test shll jmp jno movsl call sub xlat decl scas andl push (bad) mov in mov xorl imul test sub dec dec cmp jo,pt test mov and fist jb xchg add repz sahf (bad) or repz and test sub imul sub fisubr cmp insb js nop ret lods lret lods (bad) sbb popf call cmp push push lret xchg leave ret aas (bad) mov (bad) (bad) fcmovnb pop jno icebp cmpsl sub iret mov sahf sub (bad) adc xor sub nop xchg cmpsb push shl push test mov push or dec hlt adc stos in fcomps out mov mov mov xchg rcr jne or lret add sub dec jl cmp fistpl pop mov or clc test pop xchg lahf sbb add adc push aaa insl and nop push out mov push mov jle inc pop mov and test sub inc mov mov (bad) push in outsb stos (bad) jb into xor xchg stos xchg cmp (bad) lods mov std jge cmp adc mov mov addr16 insl or push enter jge cmp xchg loope nop orb or push rcr inc in push push test leave jl push js pop cltd loop and stc int3 mov cli insl mov push sahf push outsb or push int adc test outsb xor lock push test lds cmp mov add inc inc add jae jno int push pop adc adc addr16 arpl and ret cmp popa lcall sbb int or or pop aaa or pushf (bad) mov dec loopne mov add jo imul iret ret cmp stos cmp mov push and mov fs or (bad) in lahf cltd add lret sub sahf pop xchg dec cmp mov sbb xor cmpl push pusha cld xor adc rcl ds inc sti loop mov negb dec bound fmull mov jne nop movsb pop rcll pop mov xchg xchg jge lods lahf lret push jg push adc and dec outsb pop jne out ret mov cmp sub xor dec or sbb les movsb and aas mov mov and xchg pop cmc or in sti jo int3 ret mov inc popf or xchg sub divb inc adc insb jbe loopne jl arpl sub xchg mov pop mov ret (bad) (bad) inc cmp cs mov jmp fwait aaa lahf sbbl stos (bad) je inc insb int jmp (bad) roll cmp lea loope movsl cltd sbb outsb aad sub xor lea (bad) ljmp fadds cs clc enter push jle outsb fsts inc shll out or loope fnsave push rorb out cli or push lock sahf fsubrl bnd loopne jnp mov mov and xchg jno xor add hlt jnp outsl xchg roll sub adc stc and xchg lods popf leave aad fisub push mov xchg jb dec divl push into ficompl loope or push cmpsb insl sub bound inc cmp fstpl sbb scas cmp fs js imul pop adc mov add push in test es std pop lds mov jmp icebp fisubr imull imul jae,pn roll cwtl iret insb lock mov lods push icebp dec and mov push stos fldenv mov adc pusha push mov ljmp scas (bad) jae sub repz pop mov xor jno xchg adc mov jp push xchg out push sbb rclb outsl dec test mov clc push dec or mov push iret (bad) (bad) sub mov jl nop push adc (bad) adc jl fistpl sub mov out in mov push inc sub pop fstpt push lods imul xchg ljmp je lds stos fwait jle shr repz in dec jns add inc enter test lret mov push mov mov pop (bad) ja mov sti aam cmp cs lret fisubrl in loopne push xchg ficom xlat test lret add andl loopne inc push xchg hlt inc les sbb pushf fsubrl push outsb adc arpl das (bad) iret inc mov mov scas add mov js jbe mov xchg pop pop xor dec arpl inc jmp sbb mov inc fldl pop cli xlat cltd aad pop fs loope cmp (bad) pop jle dec test sub sti insb adc aad xlat popf ds xchg push cmpsl stc (bad) es inc push lea xor push mov stc jns xchg or push rclb addr16 (bad) cmc or jmp mov fwait push dec xchg pop dec sub int3 scas das xor push (bad) xlat (bad) jl mov cmc stos push imul mov mov stc inc fdivl mov cs mov xlat xchg adc sub in aas aam adc sbb in stos xchg mov inc andl shll idivl add in cmpsl add dec pusha (bad) mov xsaves mov movsl pop movsl pop mov (bad) xchg lods (bad) ret push xchg (bad) cmpsb or mov ja mov sbb pop enter (bad) pop out repz scas push jle test push test pop add cmc adc push sub fnstsw mov mov sar adc gs enter mov pop adc push push jg cmp std fs std (bad) (bad) xchg outsb xor inc out andl scas push xor call xchg aad insb xor icebp add (bad) rcrb mov int subb push ret data16 jge nop mov xchg push movsb cmp ljmp mov pop mov add shrl push mov push fdivrs rorl mov mov (bad) mov fsubrs in enter mov xlat scas ret ret xor pushl dec mov push sahf out mov ret lret dec dec lds imul (bad) sbb loope xchg cmp push push fisttp ss lds xor (bad) inc cmp shrb inc stos and jbe ds cmc stos std cs cs ljmp ljmp lock mov pop and cmpsb fmulp or in outsb jge xchg test cld adc adc imul or js and adc xchg xchg pop rolb scas ss xchg out lahf cmpsb cld ret dec fildl loop mov test or cli or or fisttpl xchg sub sub dec (bad) or loop jo add add mov push inc lea enter cmp ds push or xor mov int cmp cli cmp lods mov add clc je dec cmp hlt scas adc ds mov fs cmp dec mov fwait (bad) mov push jae mov out pop aad subl inc and scas jne ss or sarl lods dec inc ss cmp mov rclb dec aaa sti lcall aas ret les or push movsb fucomp jae int cltd pop cltd pop sarl mov push lds sub cmp sub cli lret out sbb pop pop aad cmp imul lods (bad) iret jg cmc ret xchg lds roll pop rcrb push call sub mov dec sbb cmp lods pop loop lds repnz or insl gs push bound sub orl xor inc cmc mov push fcomip mov xchg xorb xchg int3 push out inc dec pop jb lods in scas cmp add ljmp rolb xorl xlat jo gs cli in inc lds pop nop movsb push pop sbb push jmp scas sub xor jl fcoms lea xchg jb jae and sbb xor aas subl (bad) fiadd notl adc std mov loopne mov das or hlt mov jg popa mov mov dec insb int3 (bad) insl and mov pop (bad) adc pop movsl test sub dec push jnp (bad) ja dec clc mov mov xchg fildll es xchg fidivl cmpsl leave pushf dec repnz jae sbb sbb mov sbb ret push mov shl imul fucomp adc adc fdivp imul lahf cs ss mov push adc es push fldenv add imul es xor add or inc cmc add and mov cmpsb dec adc ljmp pop insb xlat dec or dec nop arpl lock mov scas stos lcall and mov repnz cmp int3 add enter subl jb clc into into inc faddp sbb arpl hlt xchg mov cs rclb mov stos insl pop mov ficoml cmp and mov aaa mov xchg fisubrl arpl in sti cli ja aad cmpsb dec dec adc imul xchg add repz pop xchg insb cmp dec hlt fadds sub fisubr jbe xor fnstsw mov sub inc rorl aaa cs loop mov les cmc sbb imul mov push call jb pavgw mov xchg cwtl mov cmp sahf mov stos xor or pop lods xor cli sbb pop inc repnz xchg and loop adc cmp out mov xchg add xor inc es aam mov or xchg fwait aad sub xor call lret xor sti xor mov cmc xchg lds adc mov or test cmp out sbb cmpsl iret push (bad) stos ja mov and lret sub pusha (bad) xor movsb in add sub lahf dec sub xor call jbe add or and ds mov xor xor pop pop xor mov sbb mov mov inc sbb lcall dec mov sbb sbb insb xchg rorb movsl dec jb sub call push fdivr jge add test jp xor or adc push inc inc je scas dec add cmp aas jecxz cmp jge js jmp decb adc cmc mov lds jl or in mov popa aad push cs lss imul mov loope fmuls arpl xorl cli inc mov fidivl jg ds insb divb sub cli fs hlt sbb leave jae sub inc fwait and sub or incb dec xchg (bad) jnp xor jnp mov push or adc push call or push inc mov (bad) mov pop pop icebp push mov mov jne xlat push rolb push mov sbb pop xchg jbe test sti mov xor jl sbb rolb cmp hlt in jno adc lret add mov mov leave movsl cmp inc adc stos or lret lret cmp (bad) sub loope dec add das stc test sbb dec mov and mov push daa sbb movsb call adc inc sti inc sbb inc push adc cmpsl inc xchg jp cltd icebp jp adc in mov sbb data16 divb inc push push fistl int in mov stos (bad) mov inc loopne push mov ss out push es cltd inc out xor (bad) cmp and in (bad) arpl and cld xchg adc adc rorb mov (bad) int (bad) push push int mov lods mov cmp cmpsb std xchg adc popa in enter ss sbb dec push adc sahf xchg xchg and jg pop pusha lods das int3 ljmp jle rcrl mov (bad) pop cmc mov cmpsb inc int mov jecxz lret je mov push scas inc mov dec rclb mov mov bound stos sub lods dec and fsts pop jmp (bad) push and fwait or inc adc ljmp scas jae push mov jg mov sahf insl dec and insl push adc rcll mov into ss fwait aas addr16 jp andl std pop xor fwait inc sub movsl ficom call mov cld iret lock cltd js adc or das loop add add (bad) mov mov sahf ja or inc sbb shl mov adcb xor (bad) lea xchg fdivrl lcall das fsubl pop dec stc sbb adc out mov bnd push sub dec sub stos outsl sub (bad) mov scas sub enter repz cmp idivl cmp scas mov jmp loope enter lods (bad) imul xchg addr16 xlat pop in mov je ja icebp jg int out push cmp cmp jp int3 insb (bad) pop clc push test push idivb xor lcall cmp inc into std adc sub inc fsubl and xchg mov dec test into outsl pop and loope jae mov pop pop mov and and push das leave scas dec outsl leave aam xchg or fucomip ret lds xorl rclb sahf jl cmp iret andl inc jle fnstcw inc or stc test js out cmpsl xchg cmp sti sbb sbb and insl les test mov push mov popf adc inc insb lock mov sbb je popf and loopne (bad) jns notb fidivrl xlat mov aam add std pop mov sbb push jecxz js pusha adc das jbe dec inc int3 add push inc loope pop inc push lods popf icebp add outsb loope (bad) xchg mov cli imul pop push ja pop sub fdiv mov (bad) sub test testl fs dec pop fwait cld in and (bad) dec sbb push xchg cs push fsts incb and repnz in inc (bad) jae lret jb (bad) xor scas xchg jne jbe icebp inc dec cmpsl out mov jb out ret outsl sub movsb push and pop arpl add mov dec imul xorb adc sub lock aam notl fwait push addr16 xchg lret xor insb pushf xlat add stos pop sub pop push and mov sub xchg lret arpl test (bad) andb dec loope ret and sub arpl cmp add dec lods jns mov adc inc cmpsb lcall insb addr16 aad cmp stos inc (bad) inc call outsl mov ret cmc mov fwait inc rol dec in jmp mov negl ret bound push imul xor mov mov sbb mov fndisi(8087 xor xchg roll xchg ss test aad aas sub adc xchg test adcl pop mov push xchg lods adc (bad) flds mov jge adc lods daa add add ljmp xor stos jmp inc je fildl sbb bound fs cmp dec gs arpl lahf mov add pop cmp jl bnd jns (bad) lods and cwtl jbe lret addl into mov jnp push sub loop lds sbb lds incb daa add repnz mov scas mov pop pop mulb int push add xchg push addb rcrl lods add pop push cmp jge shrb ret mov push mov xchg xor sbb add shrl test sub and cmp xchg das clc and mov mov cmp push dec mov mull (bad) pop jmp decb out inc and aas rorb or xor imul add cmp call pusha in popa xchg push (bad) mov inc popa sub jl dec les sbb dec std fmuls add xchg xchg inc arpl mov pop sahf mov pop dec and mov or mul mov jmp (bad) sbb inc pshufw xor rolb xor mov rcrb addr16 inc bound fwait sub and cmp push ret mull jmp mov inc pop and pop iret aad dec cwtl lods (bad) imul arpl out mov stos or xchg inc push push mov sahf dec aaa cmp pop jb sti loop push cli daa mov (bad) mov pop shlb xor movl loopne cmp dec test push cmp adc test repz cmpsb dec push mov mov adc cmp push test (bad) sub std notl in xorl pop fdivrs (bad) dec or fimul cmpsb ret jp je ret stos nop add inc fcomip cmc push test dec in js incl sbb and xor jb jne adc mov dec or mov sbb out lahf loop call aaa in mov and xchg or out and pop test int jb jns cmp lcall adc jecxz and into dec pop xchg aad std sbb mov mov mov inc ds jo out add fist insb adc enter int3 mov imul aaa shlb les and lcall aad or xchg dec loopne clc jb mov sbb or inc pop or jb jmp sbb inc jecxz sbb jl icebp cmp or sbbl in paddsw addr16 mov test repz or mov fnstenv cwtl push (bad) and ja fmuls dec xchg movsb sub and sub addr16 mov mov out add and in in stos out scas sub mov scas sub insb jle or pop lahf jg push nop xor mov fiaddl push sbb cmp dec mov cld xor mov mov jp fcoml xlat hlt (bad) scas xchg sub xchg jo fimull cwtl mov and dec mov add loope data16 jo in popl daa (bad) jg and adc cli daa pop dec dec arpl sub mov andl xor inc mull movsl mov pmaxsw clc jae (bad) mov arpl adc stos cmpsl shl dec dec jo sub xor and jb popf ljmp adc stc jge sbb pushf idivb inc movsl fild add (bad) jns cwtl jns (bad) mov dec aaa push push in adc pop cmp lret mov or sub call xchg push mov lret scas cwtl js pop fdivrl xchg fldt mov push jp hlt addr16 stc add mov pop ja int3 dec imul xor cmp dec loop rolb movsb push mov stc jbe xchg sub lahf ret shrb mov cwtl jno addr16 or mov into adc hlt adc xchg das ss popf push pop movsb movsl loopne pusha mov dec iret mov jno mov ret xchg (bad) data16 dec out jae je in jns inc bound mov outsb mov xor xor pop mov ret lds test les leave xor addl push ds scas test jmp gs mov add mov test int add xchg inc and sub std dec cmpsl and xor xchg loop mov push mov jle mov mov addr16 cmpsb add add lahf cmp mov nop in mov rorb das cmp cmp les and pop cmpsb movsl adc pop in and jae push sbb in xchg rorl pop push shrb lock pop cmp xorl mov mov jecxz inc cmovbe xchg pop in pusha mov ret sub mov mov dec cmc dec in ds sub shlb rcrb roll dec inc jb stc (bad) xchg mov adcb mov shll outsl sbb aad roll cmp fmuls jecxz movsb stc inc mov cwtl xchg pop fcoms adc imul mov faddl je sub xchg mov push xchg jne and dec pop pop or int3 inc dec sbb roll sbb and int push fdivs pop dec xchg pusha adc inc (bad) xor bound push shr xchg add xor dec or push cltd fwait (bad) fisubr (bad) xchg pushl (bad) loopne loopne fiaddl or cld ret test mov (bad) mov pop (bad) fsubr push sbb out adc jle pop xor mov test std sbb cvttps2pi cmp xchg mov cmp enter push sub or push push movsb mov stos push icebp mov sub push fidivl stos jb lock fwait (bad) mov inc mov push adc fistp adc mov jns pushf pop mov ret xchg jbe iret (bad) mov pop adc in arpl cwtl arpl loope xchg fwait xor out pushf fild fwait mov mov pop mov faddp add pop cmp jno pushf (bad) addr16 mov fldl into pop push loop mov out dec ficomp in shrb mov push mov mov bound notb popa cmp mov push pop je shl adc dec std cmc push icebp mov fcomps pop sbb push (bad) vucomisd sbb aaa mov pop jle cmpsl sti sub ss (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add incl xchg xor add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb push stos dec (bad) mov pop mov mov lret mov (bad) (bad) (bad) push lret out (bad) jnp iret cmc and or add pop add ss cmp sub sub cmp ss add lahf ja or mov fdivl std aam pop and push sub das and sbb xor rcl pop xor pop jo aam jbe psubusb push inc fwait arpl pop sbb cmp (bad) pop scas mov sub cs gs mov pop mov jge mov daa cmp sarb call repnz lahf push dec mov insl inc cmpl xor aad in sti push ss xor outsl outsb loopne aad or jmp mov ret out inc mov push mov aam stos hlt xorps aaa inc ret daa ret push or out call fsubr inc jge inc mov dec paddb push mov add pop jl outsl mov mov or fdiv xor lods fidivl insl mov fdivrl cmp push call aam xchg inc xchg mov adc stc fnstenv aas repz imul icebp (bad) mov jo jb sbb xor pop or jno sbb cwtl dec (bad) lds inc mov mov int3 xchg into xor mov (bad) gs shrb js int or jge insl or scas cmc ljmp daa cmpsb add in add xchg pop (bad) jne rol push out xor inc aad inc mov fwait (bad) mov mov mov mov insl xor pop pop jecxz,pt int add mov add sbb sarl inc mov cmp add xor mov sub outsb mov adc mov pop ret repz movsl xor dec aaa iret and or cmpsl shl and jb cs (bad) push das insb orl js pop out notb mov (bad) mov rcrl cmc int sub pusha inc rcrb adc out (bad) rol fidiv lods hlt lods jns sbb cmp (bad) movsl dec add movsbl inc ss js cmpsl mov dec jg mov sbb lods push (bad) mov test add dec lret enter or (bad) push cmp mov int3 stos sub jns fild lods das inc push add and xchg rorl and in iret inc sub xchg push stos adcb daa mov pop mov jecxz shll lahf jl adc sbbb out inc push loopne andl fnstsw popa dec sbb jg pushf insl sub sub sbb pushf cmp cmp and lds sbb call jl jl mov test mov lcall jo cmp hlt mov outsb hlt mov add bnd mov mov mov push in insb add je es (bad) xchg mov mov sarb inc sbb jecxz movsl xlat or inc jns aas and sti arpl mov sbb or leave stc jmp cs xlat sub xor mov int inc lods lcall call mov or adc imul (bad) je mov jne sub cmc (bad) sub fucomip fcom jbe hlt (bad) pop xchg movsl pop sub sub rorb sub dec dec mov loope push or cmpl jnp,pn sub clc mov push inc or xor lds mov add xchg lods fildl xchg jne xor iret ds insl jno add ret (bad) (bad) aad xor inc test fxtract push inc adc in push fwait imulb (bad) es sbb xchg sub rcrl fsub lcall jp mov dec pushl call ja xchg aas dec push int3 xor stc or aam in and lock mov imul dec jb repz (bad) (bad) mov fstpl ss lock xor addl xor pop inc decl in push hlt ja stos shrb sbb repnz and mov mov push rcrb mov sbb sub pop ljmp xchg stos cwtl and fiadd imul faddl pop repz sub fnstcw pushf inc sbb mov cmp out inc scas test dec push ds loop jae xor sbb mov inc and (bad) ss mov mov mov clc (bad) dec and mov (bad) pop push mov jbe pop sbb xor ss aam std pop push dec sbb daa jmp test jg push inc je jecxz insb mov jno xor adc cs adc mov jge pop shll icebp ss mov mov lret push cmpsl jb (bad) cmp xor cmpsl pop push aam add stos add outsl movsb stos inc mov imul fbld mov dec xchg mov mov adc cmp mov mov jae pop adc hlt adc or ficompl loop mov xchg and sbb dec cmc pop or popf cld pusha cld flds sbb jecxz mov or sbb gs adc ds push inc outsl mov mov mov les cmp pushf jne cld and sub fidiv test inc psrad inc (bad) faddl test push fisubl push inc in jl (bad) int3 mov xchg aas push cmc jmp ss out add adc fsubr adc xor mov ja mov mov mov inc scas movl mov jl outsb push push pop test xchg cmpsl cltd push (bad) rorl call clc sbb iret in cmp lcall sub push dec xor (bad) push inc repnz divb add ljmp and pop jnp mov lcall dec sahf into xchg ret or push sub jne les sti push sahf sbb loope dec jecxz jo jnp cmp movsb and dec fimul cmp aad fs mov (bad) (bad) iret in hlt repnz ret aam pushf outsb and ror fcoms cmp adc lods shlb sahf xor jl jmp (bad) mov adc xchg pusha push cmp nop fs (bad) cmc scas addb push rcl pop (bad) cmpsb pop adc in xchg jae add popf lret adc xchg icebp or cmp daa push rcrb aaa negb mov fsubl test fs xchg lock mov sbb clc mov inc xor jae adc mov and cli and lret push inc hlt push and push add ret std xchg add adc sar lods add mov and jbe mov sbb repz adc push cmp push pop jg fsubrl or sbb xor push nopl xor movsb jg lahf push adc xchg adc mov ljmp add pop push es or leave bound mov pusha test add xlat and std rol adc (bad) popl xor ret fisubr shl cmpsl or pop inc inc movsb push addr16 sub mov inc ret push mov popf adc mov mov push mov iret mov mov fmul dec enter or cmp test cmpsb (bad) pop adc mov xor jb mov or pop inc cmp aad sub xchg insb xchg (bad) out sub xor scas mov pmulhw data16 mov xor sbb lds xchg lcall inc test cmp cli cmp adc jbe cmp mov (bad) dec cmp inc sbb ja mov mov fstl out mov popf jecxz lret out mov jno adc inc fist cmp and jne jne (bad) push xchg mov aas pop jg mov out xchg dec es push and inc fnstcw or loope push rol pop push call es (bad) loope test lret dec rcrb push dec mov add repnz mov adc mov js insb or push cmp dec jnp inc std (bad) fisubrl dec lea push mov lea js lods mov fstpl mov xchg je lea push mov push or adc add mov mov inc cmpsl ficompl test xchg inc ss in adc mov call bound hlt and loope jmp (bad) repz js pusha ficomp sbb dec dec ret repz pop aas test (bad) lea sub mov dec push jo or cmpsl adc out es add jmp xchg pusha in jns loopne push cmp add rcll into icebp or leave std in aaa (bad) pop xor adc insl dec cli imul out out sub iret or cs or into sub sub outsl mov (bad) movsl pop test out mov mov lods loopne dec movsb xlat mov arpl lods test jmp xchg daa cmpsb pop fldt cld arpl jmp (bad) fcmovb pop rcr cld loop mov dec rcr stos fistp inc xchg hlt sbb xchg shrl and into sub add sahf mov sub (bad) decl mov xor nop cli dec int mov (bad) mov jb pop dec adc xchg sub cmpsb cs aaa xor or dec dec or (bad) pushl not daa je mov decb and cmp (bad) mov negb mov push xchg pop ss imul outsl inc pop fs jle std mov mov add (bad) incl or stos pop add mov inc rolb xchg push mov (bad) loopne push add lcall iret add xchg sub sbb leave xchg dec out repnz sub hlt loop mov mov das jnp test jo mov mov mov insl loop leave xchg xor push mov add aaa pop or mov out insl lock dec mov pop jno sub add inc mov lods pop loop and adc or jne mov int3 scas and fsubrp pop js and je mov fwait push lds cmpsb push sbb sbb push adc xor mov xor pop xor or fmull aaa stos push in xchg push fsts bound andl pop or cmp push fsubp dec out xor int movsl or cmp jg mov ljmp imul xor fdivrs lods addr16 mov addb dec loopne xchg (bad) sbb sub mov add repnz outsl or mov and es xchg xlat xor add pop movsb sub cmc xchg daa mov push ja mov (bad) les outsb or adc push rcrb mov setl lock je mov adcb fsubs out das mov push jne add pop xor jl mov push pop cmp sti mov jle and lahf nop iret fs add cmp imul mov mov sub imul and fnstenv and nop aaa sub (bad) xor mov repz test out int3 inc adcb bound fwait sbb fidivr (bad) pop movl sbb add int adc (bad) popf sub sarl lret rcrb push bnd sbb add subb xchg fwait xchg or jmp addr16 test lret mov and adc cwtl sub inc sbb xchg (bad) lock cmp out fcmove popa mov cmp jnp dec sarb mov jne or pop sbb addr16 hlt mov adc push outsb cmp fucomi adcb inc xor sar jno jo mov fsubrl loop test stos push jb dec mov sub inc pop pop data16 sarl lds push push jmp popa adc pop aam dec xor shrb fisubl sub or jno lret aaa arpl pop cli leave ljmp dec cs (bad) aad inc inc push inc dec push push mov out pushaw mov out sub inc clc divb pop xchg and cmpsl and sbb fstl adc cld (bad) mov andl push cmp jp dec test and (bad) clc inc mov clc dec jns push cmp or fild fcomp push xchg sub loop jmp add imul aad subl fwait aam pop mov dec out dec push out mov lods sub popf sub dec sahf lret movsl divl outsl jne rclb sbb adc stos pop or nop sbb add fwait or (bad) les dec mov int lea (bad) iret adc or lods lds mov jl mov in jmp sub (bad) iret dec inc push lret test cmp mov xchg out and inc jb int3 mov sbbl int3 adc sahf mov jecxz mov cmp roll (bad) out cmp cmpsl fwait ss or gs mov mov dec lcall out scas mov mov test pop into es jmp test add inc dec push ucomiss cmc clc lds jl push push sarl loopne push jmp lock stos mov insl aad xor (bad) mov mov (bad) insl lahf ret sbb call mov imul mov (bad) mov sub xchg rcll aaa aas push ds movsb in inc or mov sub mov push xchg icebp rcr in scas lds add push xchg mov loopne lret aas sbb jmp add cs insb push mov dec leave movd xlat cmp push lds rorl ret jae das add mov stc xor fidivr adc add push xchg inc cld mov jo scas rorl scas loope jg mov stos in (bad) jae ljmp xchg les addr16 test xchg nop pop ss pop out or in fstpl in cld rorb inc jnp bound scas mov imul push fdivs jno dec imul pop mov stos fnstenv push pop jo lcall rcll xor std sub iret int3 stos add mov fs enter in jnp in jp,pt sbb or movsb (bad) dec out int dec ljmp repnz adc mov pusha test mov pop or sbb fucomp cmpsl cmp xchg jb scas (bad) popa (bad) jg pop loope ja mov dec xlat stos outsb iret cmpsb lea dec dec jmp (bad) pop repnz fdivl mov mov outsl xor pop pop sub cmp dec (bad) mov outsb push dec sarb inc les jnp std cltd pop int sahf ret jle mov or jns mov mov les leave inc aas cmpsb xor aad cltd ja dec cmp mov adc mov cmp xchg rcll xor lret jo mov (bad) mov addl popl loope sbb add cmpsb xchg je test sub cmp jl cmp mov jge nop pop shrb pushf icebp test xor jo xchg mov mov push add jbe sub xchg arpl jecxz xlat add nop pop dec push pop nopl jge scas dec inc data16 dec xchg push jp cmp out mov movsl cmpsb xor xor shr aad mov xchg rcl std into cwtl out add jp cli (bad) fdivl out dec lcall popf jle mov push imul rol pushf mov stc stc test xchg jne mov jb pushf sub fistp pop xchg xchg add in sti (bad) sti scas leave and xor xor ljmp aas (bad) cld sbbb xchg insl push je das jns sbb leave mov and or xchg cmpsb sbb pop jp pushf test lods inc adc push adc dec rorb les pusha mov or imul add out rcll push cwtl jecxz sub push in ds (bad) shrl (bad) std xchg xor push daa pop pop adcl or (bad) gs jmp sub xchg iret mov xchg sbb sbb mov je in sbb ret bound mov ret or sahf (bad) lods aas outsb dec pop dec xchg push addr16 (bad) xor js lds dec leave jns push and adc adc dec add pop and dec sbb fild push loope mov imul (bad) xchg and scas call jnp cmpsb xor mov mov add xor push lret ret cmp fcomi or cmp test mov sbb pop lods ret es fwait arpl dec xchg adc pop gs bound insb insl adc push and stc pusha out cmc sbb iret sbb ljmp dec pop fwait pop fwait icebp cmp inc push fld pop repnz stos fnop jl sbb push and cmp and mov gs push or and (bad) lds cld mov dec mov out das js lahf and stos sti lcall gs int3 or lcall in iret pop push icebp aam outsl scas popf and icebp push add push pop add pop mov fisubrl iret enter mov hlt loope dec adc or mov pop pop pop mov rolb adc popa lods pop out test loop sub popa xchg mov fidivl lret fstps fbld fs xchg fwait sbb fisubr ss push dec mov dec mov cmpsb mov sub into pop popa jg (bad) ja and push das mov addr16 xor arpl pop cmp (bad) mov icebp pop or ret xor mov aam adc les insl (bad) xchg sbb add mov adc push stc lcall das pop pop into xchg iret (bad) and mov lods dec jmp pop mov shrb sbb (bad) lods jae cmp je lret pusha dec pop pop xchg adc (bad) mov test mov mov test jg ljmp and imul xor jb push xchg push aad mov sti fsubp int3 enter loop ljmp arpl add pop and adc mov mov dec add or ja imul mov mov fs dec stos imul lods sbb hlt loop mov xor mov push mov and fild imul ja sbb mov cmp pop push cltd stos and aad xor outsl (bad) out leave mov (bad) pop xchg loope sbb loop or (bad) mov mov add mov shrb and xorb adc inc xor xchg adc hlt or adc jne mov jb lods js movsb add cmc xchg jo int3 push sbb inc add push mov int jmp inc add push sbb int3 and daa inc and aaa divl cmc jp bound adc inc test xor adc inc mov mov and mov mov cwtl popa inc jae aam neg fdivrl imul pop cli maskmovq negl push mov mov loop inc xchg cmp dec sub push fist (bad) mov or jns pop outsb jne pop dec lret (bad) mov push inc jae adc push (bad) jae pop scas (bad) mov add out mov inc pmaddwd dec cmp rolb pop push ret popf cmpsl pop shrl add ds xor mov mov xor push lds mov sbb and test push out and push sub aam in sahf fsubrl pop jne fisttpl lret psubq adc in fisubl push mov addr16 push mov popf jb scas popf cmp mov lods clc mov add or sub mov shll adc fmuls push and jmp sub fistp xor sub mov fsubs sbb mov cs repnz imul pop in fucomp adc or data16 adc roll sbb jp leave mov mov in addr16 repz rcl fistpll push js out ret movsb xchg adc mov popa je pop jg leave lock out loop cltd and bound pop xor jge fisttp aad (bad) loope or mov je fist ret sbb ljmp int3 push sbb out pop ret shlb leave inc lahf imul movsl rcll jnp sub push shr mov icebp xor adc push incl and dec (bad) xor lea in add pop xchg add pusha (bad) test es push or call sub aaa fdivl sti jecxz add push adc pop mov sbb into stos out cmp lcall addl notb pop mov xor xor or dec pop (bad) dec add fadds inc mov fnsave js sbb mov outsb fmul jge mov nop ficompl lret ja movsl sahf sbb shrb jbe mov dec pop (bad) adc fidivl outsb sbb cmp xor call gs adc bound loopne adcb (bad) and inc jge outsl jl jmp clc addr16 loope fadd mov test stos lahf push bound pop out aas sub sahf or lock xlat jb sahf scas fs and loope mov sbb and mov xchg sub int3 adc xor in adc mov sbb jge ljmp js push jne in mov jp mov sbb out dec mov iret in push pushf data16 cmp insl mov mov ss mov movsb cmovge out add stos fsubrs insb or sarb rcrw leave add jecxz cmc adc sahf cli inc add mov sbb push or or jp jecxz mov ja mov (bad) cmp mov js xor test sbb imul call clc cltd fiadd loop mov scas jne enter nop test mov test sub mov call add push xorb cmp jnp add xchg dec mov add cmpsl popf aad out mov xchg push mov push hlt or mov sub push lcall jp mov cwtl sahf (bad) adc push jmp ss jl jp xor cltd xchg call pop repz les mov sub roll test and xchg std data16 insl outsl pushf push lret and mov jmp sbb xchg pop mov mov aas sbb dec sahf mov cmp mov mov icebp fs outsl (bad) mov jle movsb mov in and outsb pop push repnz mov ss xor and test icebp hlt cli push mov dec and daa (bad) and cmp pop mov push and adc insb shr inc push mov (bad) jl xchg sub addr16 and push fs hlt daa pop mov pop aas xchg or jno gs sub das sahf out xor repz dec or out in sti mov mov xor inc pop outsl pop ss (bad) push sub aam sub xchg sub enter sbb sub ljmp mov push gs xchg mov lds xor mov fldl mov fstpt imul jmp xchg adcl pop addr16 dec dec pop repnz inc movl pop lahf movsb mov fwait loope pushf lcall (bad) sbb (bad) repnz in lods pop out pop call xor test pop movsl mov mov or int adc ret xchg jl (bad) pop outsl sti adc fldt mov (bad) adc call mov pop push popf loopne stos mov scas (bad) jge adc inc cmp mov add or (bad) mov mov sahf (bad) xchg fsts leave ja call mov lret ljmp xor mov aad and xchg add les add shrb test aas xchg inc cmc cmpsl loope outsl dec inc je in loope aad mov (bad) or or je xchg jno inc repz sbb mov add repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add incl lods adc aas rolb add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc popf or (bad) sub daa sahf mov mov sub mov cmp lret jp push cmp sub add data16 jle mov enter adc or pop dec dec in dec lea dec pop mov mov pop ljmp cmpsl push imul sti dec or fwait scas in mov fucomip (bad) mov fwait cmp lret loope cmp add jg enter adc dec sbb jmp (bad) icebp sub inc imul cmp nop rorl and xchg or cmpsb aam frstor xor and lds dec sbb es clc popf and mov ss add mov jnp push lahf push lret mov adc pop shr xchg movsl fnstsw push pusha movsb rcl sbb test lds ret cmpsb ret out sbb inc loop sbb pop loop jl sbbl ret ret lret enter add nop lahf sub aad out shlb repnz xor ret sbb andl push mov loopne imul ljmp stc cld push mov fstp negl xor test popa (bad) fisub (bad) ss es call scas dec sub jbe inc add gs add cs mov test ljmp pop popf dec mov insl inc iret stc and into loopne cmp xlat (bad) or mov sub xchg mov push xchg push pop jb inc popl into cmc (bad) jb mov lret rorl (bad) test dec cltd (bad) or add imul push jmp jo stc jo mov and mov jmp mov or daa mov shlb jbe jg jne xchg outsl hlt inc cs movsl fild fistl mov sbb aad test les fistpl enter (bad) sbb xchg sbb push test scas mov pop push add pop testl inc xchg ret xchg lahf jnp and lret clc add (bad) fsubr aas shlb ret (bad) pop bound adc scas loop aam out testl lret sbb test sbb pop ret bound std aaa adc test insb sub mov cmp ljmp jl shll icebp pop mov jecxz fisubr cmp rcr lods test push dec lds cmp out addr16 daa sub sti jne in jg xlat int mov ficomp inc xor or mov mov ja aas push (bad) jnp icebp sahf fwait add jb sarb push call je mov sub out adc enter hlt sbb ficoml sub clc inc pop repz cmp mov scas jae add xor lea outsl pop js mov jge clc sahf push cmpsb aam xor sti mov int3 cmpsb push cmpb cmp hlt jae xchg pop ds jg cmpsl mov movhlps addr16 pop shll cmp add pop aam pop cmp leave in sub movsl (bad) pop xchg arpl test imull xchg jle or or sbb and dec insb cmpl (bad) pop lods das ret icebp xorb (bad) je or leave in call pop sti fisub sbbl dec jno fcom cmpsb gs ds or mov or aad xor and add xchg fdivs lods jmp call popf sbb call movsb notl mov push inc cmp stos mov stc pushf dec out mov cli aam sub nop pop bnd pop lret cmpsl scas lret jo iret shrl mov sub pop sub or js xlat sahf mov pop jl sub dec adc cwtl es mov mov lea scas add pop lea sbb push sub mov and (bad) mov subl outsb pop mov popa in and test mov cmp push ret mov push loope test fdivl clc fwait aad mov pop sahf adc inc cli arpl test or lds mov inc ja lods push (bad) shlb insl outsb mov int3 call xchg arpl in (bad) ja lods cmpsb imul cmp imul rcll add and inc test js add adc lcall stos (bad) test hlt sbb das push lods add mov and les jle xchg jmp cld sub out mov das jge repnz mov iret out test testb cmp (bad) mov pop dec mov loope mov xchg mov or fcoml inc mov pop cmp cmp cmp scas fisubl imul mov xchg dec stos fcmovnu mov loop bnd std (bad) fwait jae cmp push fbstp cmc inc scas inc inc pushf (bad) push ret shrb mov sbb dec (bad) pop dec push xlat loop and ja and addr16 dec roll aad lea and jns (bad) ficom cmpsl (bad) in xchg mov inc (bad) or inc pop test mov iret xchg push cs data16 xlat mov dec std mov mulb dec inc repnz popf mov out into dec xor xchg dec push sarb jae add jns pop mov jne ret mov pusha jae lea or jecxz jnp push ret jb stos pop mov push add cmp jb das cltd and pop cmp repnz dec mov andl jbe stc insb in lea sub icebp out lcall mov sbb lret sub fwait cmp bound xor mov test mov mov adc jne movsb cmp dec ret fistpl jle inc daa aad fs aaa sahf mov sahf popf mov enter popa sub in jecxz xchg fcomps popa jmp push rolb push pop lea xor inc into into pop mov add clc pop adc shr mov aaa dec in jno push xlat shrl in xor inc movsb scas lret in out and adc (bad) (bad) loopne and cmp loopne cltd or aaa dec cmpsl sbb sbb or pop loope dec sbb fmul dec cmp inc push nop and jns adc mov inc xchg mov jmp cmp cmp aas fisttpl mov inc push test xor inc pop out in test inc jno add fdivs (bad) xor mov xor stc negb dec jmp xlat add call add repnz out fwait push enter out js cmpsb pushf and inc mov and mov loope addr16 mov pop jl (bad) jns lods add leave mov scas add or in mov mov nop cmpsl lds sar sub inc push adc sbb out push jp lret add (bad) outsl (bad) lods test repz addr16 dec jmp test or insl jbe sbb fs addr16 mov jns scas sub les or call pmovmskb (bad) mov decb inc inc mov jmp cltd xchg push push sti cmpsl dec pop das stos sub mov insl inc dec mov dec pop and mov or insb clc jb gs pop dec movsb mov (bad) mov outsb ret and cmp imul insb popa cmp sbb jg (bad) or adc push outsl scas fsubs xor int frstor lock xor mov push outsb ficom pop jmp pop sub cli pop out fstp sub mov test dec pop cmc push arpl inc cwtl (bad) dec xchg pop imul ret lods ljmp add loopne push sub sub loop pop mov dec cmp cmp or std loopne sbb sar std and adc jl mov idivl xchg xor movsb dec inc mov dec and mov stos or push cmpsb (bad) daa in and arpl into jo shl xor nop mov inc rcrb (bad) stc push pop mov out push jbe jns sub mov jmp mov sbb imul lahf push lahf jmp jp (bad) cmp dec push jne adc jecxz pop pop nop mov mov push test pushf cmp shrl sbb jnp mov data16 inc xchg pop (bad) fisttpl lock jecxz xchg pop jbe in pop (bad) popf and adcl stc xchg add imul fdivp pop inc lods frstor adc cmpsl mov lret in push inc scas cltd pop aas inc outsl jb mov lea pusha mov mov scas xor sub sbb nop lods jmp lcall cmp mov jnp mov mov aas cld cmp in cmc pop or mov scas sub jmp int3 inc adc pop fdiv sub repnz (bad) repz js lret test lret scas shrl dec mov aaa bound scas mov cmp mov xlat dec jno test push push in mov arpl sub mov mov cmp sub (bad) dec pop adc or and mov mov xchg lahf imul xchg in int3 stos and repnz psubb jb jne mov ja pop and fs mov pusha pusha (bad) mov or and push fnstsw (bad) pop inc fidivl (bad) int3 push and push xchg pop cmp std in fnstsw cld mov sti dec addr16 std or push call enter hlt arpl xchg mov mov or push loopne popa subb mov test fwait lock and fnstenv xor jnp jmp lea (bad) (bad) fidivl fcoms lret rorl push jge push fwait mov (bad) ja add clc mov mov lcall lds or add flds int aas add aaa repnz dec pop stos pop fdivrs push xor cmpsb pushf in inc dec jle pop gs sbb mov jae (bad) jo or lret or inc jns aaa out and mov cld (bad) fmull loope loop sub stos jge out out sti and (bad) clc pop pop dec push push jge mov pop test mov mov hlt fwait xchg add sub aaa fisttpll sub or lods orb push xchg xchg mov and call cbtw jp mov pop cmpsb pusha pushf dec mov or sbb fstp lret ljmp (bad) mov fs adc orl push sub xor in pop inc (bad) fwait (bad) jae int3 push jmp mov add (bad) loop into xor sbb jno cmpsb inc insb mov bound add aad inc lock testl mov mov (bad) movsb addr16 sahf mov cmp mov lds jle loopne jbe inc rorl and lahf out int3 les jno mov dec xchg rcr rorl lods push popa sbb or lods push iret out scas inc aaa loope arpl mov fnstenv mov mov xchg into xor pop mov and add sbb sub cmp mov xor mov push mov mov gs sarb cmp sbb xor (bad) dec adc leave dec std jns ja test pop ljmp push and adc (bad) cld (bad) xor cmp inc sarl test xor mov jae jnp fmulp je scas sub imul dec rcll pop ret je adc mov mov (bad) cs mov jno push mov pop push nop pop addl lods jne movsb pop hlt inc dec cld movsl faddl dec pop add push popa pop push inc fstps test inc insl ret mov mov dec sbb je shrb add cld inc gs shrb push lods pusha mov and (bad) fistp sub and sbb (bad) insb cmc clc ficom test and lods out shl xchg mov lahf ret ret xchg aam pop fdivrp jbe xchg or pop sahf (bad) sti add repz cmpl adc imul cli jl pushf sbb into xchg push shll mov in loope and mov nop fdivrp fbstp pop lret popf out (bad) or insb lock cli mov fdivl pushf and push ds sbb push push jle mov fdivrl (bad) bound (bad) jns jecxz out jns push (bad) aaa push inc cli cmpsl or addr16 out pop mov ret jae sbb or out movsb push hlt push dec push call rcll test mov dec arpl movsb cmpsb je xchg mov cmp push cmp mov or ret push imul dec add mov loope inc mov mov das mov insl jo (bad) test cli in test sti sti test add enter jb xchg push data16 pushl dec js pop int3 cmp movsb outsl sub incb and adc scas data16 leave sub and xor pop in jns test xchg adc ret js aaa es mov mov insl mov mov sub loop mov repnz mov imul pop sub addr16 outsb lret add cmp les sti and fs push jns aaa push cld push (bad) xor sbb cltd or stc and aaa addb ret (bad) icebp mov push add inc pusha sbb es sub lret clc cmp (bad) pop dec ret test adc and lahf mov jp pop add jb xor jg lret or inc pushl mov (bad) insl xor je inc push mov add mov xchg repnz (bad) sub mov addb sub xchg xchg mov sbb ret dec shl imul mov push into xchg push mov or movswl add (bad) jne jecxz xchg cmp mov adc mov call movsl or fdivrp add ja in addb negl lahf hlt adc or cmc addr16 dec cmp dec stos movsb push pop cmp xchg jae cmc xor das push sub jne lock movsl fstpl out out and out mov mov mov sbb jnp sbb lahf fistpl (bad) push (bad) mov and (bad) mov mov xchg inc and je cmp scas cld or movsb add pop push sbb lcall shrb jb movsb in movsl dec jns push dec stos xor scas cmc or das adc pop movsl cmc out popf jo sbb out mov xchg imul es pop mov lock data16 std sbb lcall jnp add inc jne sub ror inc mov fadds and bound arpl and xor mov icebp lcall cltd fs out lcall rorl xor mov dec mov fdivl dec leave cmc add pop lret lahf cmpl cmp mov mov cmp lret mov sbb pop xchg sar rol std dec inc mov arpl push xor enter lcall pop cld lods xor sub lahf add sub ja xchg pop mov xor pusha or cli pop push jp xchg in push push mov test cmc cmc mov test ja push dec popf mov test and icebp dec mov push push or rcl xchg mov pusha test and out or mov cmp push lcall pop sub loope data16 pop and in dec mov pusha shrb lahf inc pop repz loop or movsl inc (bad) cmp inc xor push sbbb out push mov cmpsb fiaddl mov fwait and inc cmpsl cwtl push jg or outsl pop or mov outsl add mov rcl jo shrb or out adc dec mov test push sti xor adc push mov mov xchg jb leave in inc sarb mov data16 mov scas push adc lea out fild jle push enter sub rcrb ficompl cmpsb dec and xchg sub and xor bound (bad) cmp lock adc lods mov add jge adc loop mov push daa pop aam js in cmpsl push ds pop lock mov loope gs mov pop jno (bad) add outsl lret adc lock (bad) mov jg mov pop push dec add pop fs push mov mov xor dec lahf dec mov and fnop pusha push movsl fdivrs sub mov stos jb stos pop jno ljmp xchg push mov sbb pop sub xor dec push popa jle movsb dec aas cmp cmp rcll mov adc aas or ret push xchg pop lock sbbl int cmpsb fisub adc inc sub mov or ljmp popa je push (bad) push or imul loopne aas clc cmp jne mov das sbb jo jg or sub cmpsl js inc jnp jg xor sahf mov daa movsl xor xorl and adc pop (bad) jmp fimull hlt clc mov jg in je or sub xchg sub out cli out popa addr16 inc mov popa or in jb mov dec pop cmpsb (bad) push sbb leave adc xchg lods lret jb and out and xor pop mov adc (bad) in imul push adc mov movsl leave sti mov xlat fwait ret add fisubr adc mov mov push jge xchg shlb cmc pushf int3 xchg jl out (bad) es fist xchg test push into (bad) mov movsl jecxz fisubl cmp ret insl in test and push cltd lea mov jge aam cmpsb and push test jmp aaa mov repz ficomp cmp sub idiv push repnz shl jne push insl and or jmp lods cmpsb inc cmp mov out (bad) push mov mov xor js xchg stos mov (bad) mov dec pop bound int3 or inc in push loope lcall imul sti inc movsb xor in add pop leave daa adc std ds sub movsb ficoml out mov pop xchg jnp jno mov in push mov pop leave addl pop cld int3 push mov arpl sub rcrb cltd or xor dec sti lods cwtl sahf das lods mov in xor jne fsts iret pop jl mov dec lods movsl imul stos outsl adc xchg in cmp mov cmpsl jl lds dec fs daa movsb sub aad cwtl dec js pop (bad) shl pop sbb mov inc (bad) icebp fcoml lea xchg out jl outsl fdivrp xchg imul ja fcmovnu ds ja inc sahf push cli (bad) push cs pushf lahf push cmc ja pop incb adc inc enter ret sub sub mov movsb lret push sbb arpl or or pop test dec (bad) pop loopne xor or fwait aas jae inc push mov hlt jns out loop cmp aas xor imul add and pusha jae scas xlat jl lea mov mov pop dec mov cmp sbb push test (bad) xor mov mov cmp or dec pop jecxz repnz movsb and popa mov sbb cmp roll xchg sbb cmpl es insb movsl outsb repz dec mov insb xor scas mov or cmp or push out call sub iret daa inc iret cmpsl dec test xor les imul imul fs xor out mov sahf mov mov fs (bad) and xchg or orb dec push imul mov adc sahf fmuls add arpl cmp bound cmp cmp adc xor ljmp fwait lahf pop mov inc mov repnz (bad) fldenv cmpsb mov and mov cmp mov mov (bad) and xor outsl pop mov or call cli inc fs or pop or (bad) xor aam cld dec popa adc rcr dec std push lcall xchg subl jns xorb bound mov call (bad) fcomps out outsl cmpsb or push popf cld int3 (bad) lret jp xchg ja out bound pusha ja mov dec mov sbb cmpsb pop repnz push rcll aas mov sbb int3 adc fidivr gs out sbb fld1 ret (bad) inc push icebp int3 and push rol daa jp les dec movsl icebp aaa dec gs lea (bad) sbb or cli xchg mov cmp dec adc dec repnz test mov sub jo mov mov dec cli lods mov xlat or gs push adc in lret or xor insb and and pop or inc push inc mov aam sti sbb and ljmp sub sahf mov fs pop xor dec mov sti cltd xor pop pop repz jp repz inc push outsl les adcl ficompl loope rcrb lcall in jno mov pslld fimul mov cli mov adc jo aad nop mov cs jnp sub push nop dec sub push pushf mov pop sbb in insl adc decl rorb lods and cld and jge ret mov jge xchg mov test (bad) test mov popf mov xchg pop push pop pop stc cmpsb lea xor jg mov aam scas into out sbb lods addr16 stos ja xor mov pop lods lahf pop and enter (bad) fbld xchg xchg ret lahf (bad) outsl sub mov push push dec aas imul shr jmp (bad) les inc mov aad sbb ds jg and adc and pop xchg adc leave outsb imul insl push loope or lods hlt cmp ret pop iret xorl cmpsl pusha psllq loope popf jbe xor sbbb fs dec in push subl xor and mov cmpsl lahf ficom jbe outsb mov decb andl xchg loopne add mov test (bad) jle cmp or scas mov out in cmp (bad) std jae jmp (bad) in (bad) or push dec mov push xor imul icebp sub xor cs je add stos push xchg xchg mov lods inc mov ror jnp pop aam insb ljmp mov jo out stos fwait scas lea cmp add push cltd sbb test push mov fwait xchg sub in push xchg mov stos mov (bad) das xlat inc mov jo xor loop mov or movsl cmp pop push jbe push outsl dec movsl jno sbb and or jecxz scas or sahf jg loop xchg and ret dec test xlat stos testl lret ret aam loop sbb adc lods inc dec sub cltd cmp xor or fucom sub loop mov mov mov cwtl cli xchg repnz pusha and aas mov sbb push or jno (bad) mov mov aaa test jecxz in and incb mov or inc or rcrb mov adc push jp divb scas test mov inc movsb xor hlt add pusha xchg xchg pop insb fs cmp shlb lret ja fmull (bad) sbb test sti jnp shrb dec shrb mov push adc sbb lea mov jns add jnp jno nop test (bad) dec jae jl xchg push subb mov fdivr lret cmp mov shl int3 sahf dec popa test jl into cmp mov rcr icebp mov imul fcmovnb xchg int jae mov vaddpd sub into push out dec dec out mov fwait imul jl aas adc ljmp pop fadd xorl cmpsl mov adc fs jl xor adc mov (bad) jp sbb cmpsb or sub sub adc lahf or (bad) dec repz jnp pop inc pop xchg mov out gs out dec and in orb jmp fs sub and cld scas (bad) pop dec pop popa dec mov dec cmp ljmp popa mov dec mov insl loopne jmp int3 lods sub stos xchg sbb pushf jnp test dec scas mov fcompl rclb push cltd adc dec (bad) icebp (bad) outsl cld xchg adc mov nop add stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out sbb clc pop and pop mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add iret and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb ret add lret pop sub insb (bad) das sub gs jecxz std aas fidivr mov add mov rcll fsubl inc out aad popf inc mov pop ficoml ss ss fidivl dec dec add pushf pop mov lahf adc and inc adc and cli fmul or xor negl xor out divl xor lds mov mov (bad) jnp pop jp call adc xor push sbb (bad) mov aad inc mov jae dec ret repz arpl (bad) jo stos pop add xor out push ds aad cwtl stos mov aas pop push ljmp into in icebp sub popf pop shl rolb xchg jne mov rcr popa ret dec jge push test fisttpl stos pop mov rcrb push xor imul daa ret inc imul scas fimul mov lret mov out jno sub xchg add (bad) test sub mov popa jle sub dec xor jmp fs outsl scas iret lcall ja movsb adc movsl jns fisttp imul (bad) mov push ficoml sbb outsl inc xchg jmp sarl dec push jo lret and scas idivb std imul rorb jl outsb add stos into out mov lock pop xlat mov (bad) cmp mov out jmp push inc lods lea inc xchg aad push dec movsl mov cmpsl or in jae std mov mov repz cli fcomp pusha test sbb mov adc adcl mov push adc cmp jo mov ret cmp es cmp sbb pop fnsave aas int adc out imul mov (bad) push test sub hlt mov cmp xchg (bad) fcoms mov inc fisttpll mov rorb mov inc popa movsb pop mov add popa xchg cld mov mov subl out frndint arpl mov cmpsb ljmp rclb hlt daa rcrl push divl shlb push icebp adc fmuls mov mov in in repz cli stos xor adc pop inc xchg inc cmp pusha pop mov adc pop in inc test inc leave mov cmp in cmc scas clc in shll mov mov dec mov cwtl push jae in movzbl sub or or xchg sub jno xchg cltd addr16 ds lahf sahf sbb cmpsl lods in ja enter jecxz (bad) rdpmc les dec icebp out shll (bad) hlt lcall es and mov mov or add and adc mov mov pop and sub jl lret push cmpsb mov test call (bad) dec arpl loopne adc mov int3 mov in mov (bad) call popa je mov jle in icebp test xor in inc pop or inc nop lret xchg adc push ds xchg sbb gs out inc xor rorb dec gs inc and clc mov pushf mov mov jnp mov rcll mov cmp inc jmp sub enter pop push aad inc and mov (bad) or lahf loopne or push and cmp aas (bad) mov pop out or nop xchg ror or sbb jnp test xchg test ret mov lds pushf sti insl in outsb xor and lds mov enter ds mov jb pop mov and aam loop orb pop xchg inc (bad) inc mov mov adc (bad) sub icebp pop xchg mov stos or repnz orl ja rorb mov cmp loope and add out push mov mov rorl add mov rclb mov in das out adc sub push add ret mov dec pop dec jbe mov popa fnsave dec push sbb mov insb rolb mov fwait je dec push (bad) loopne adc or insb inc (bad) fist insb xor fstpt jno inc arpl dec jno mov testb push xor (bad) roll pop inc jecxz mov incb push pop cmp mov push dec pushf inc push (bad) or popf jae cmp lret mov xchg dec cmc pop cld cmp mov orl xor movsb out hlt lret jno loope adc jnp cmpsb fwait test insl loopne bound pop xchg sti (bad) (bad) in pop pop in (bad) jge mov mov cmc dec xchg jbe in scas cmp fs sahf data16 adc mov sbb jnp jg jl xchg addr16 sbb push sbb addr16 addl and rcl (bad) cmp cld imull xor insb lcall inc popa add (bad) pushf inc gs stos inc repnz bound mov and aaa cmp and or stos movsb movb cmp pop xor shlb and push or cwtl add or add sub sar cmp jl (bad) mov sbb sbb cmp pop repz data16 (bad) out xchg clc aas mov mov jo cmpsl std dec jbe xor sbb imul jg sbb pop pop movsl imul xchg fdivr sbb loop and dec or mov fcompl xor xchg cmp xor in (bad) mov scas int gs dec or jns push sub out mov or aad stos mov or mov outsb lcall outsl mov lea (bad) mov outsl imul xchg xchg push mov je loop clc enter xchg dec das mov daa in insb jge mov (bad) outsl jns,pt sbb lahf sub mov loop aad push or add (bad) stc or mov jne lock add mov dec xor inc aam push inc cmpsb dec loope leave or xor mov sbb test adc adc cld push sub jo das jnp cmp dec dec loopne shlb mov das notb (bad) (bad) mov cmpsb lahf inc shll mov bound cmp in cmpl pop sub mov cmp push icebp add inc lds and or push inc jl inc add ja popf pushf in mov xor xor xlat pop pop test lret xor (bad) iret xor mov in sbb dec inc pop add jnp cltd cmp add ja ret pop mov dec lds mov mov and xor out sahf lods jae fsubrs ljmp std lea addr16 lcall xchg mov mov jno mov push push inc xor xor jle loop and mov inc loope je push xchg repz push leave push in sub (bad) add mov sbb repnz xorb cmpsl cmc xchg jp push insl jl mov mov pop shlb cwtl cltd sbb cmp pop movsl xchg sarl xchg inc cmp loopne or add or push in and shll push or mov jp,pn negl cmpsl sub jb jne hlt or xchg clc lock pop repz inc call add mov fsubrs test push sahf js cmp movsl (bad) cmp in inc inc dec mov hlt push js and int std jne push mov or scas pop stos cmp divb pop fs rolb xchg lret cwtl rolb pop fstpl pop push sub push outsl jbe lahf mov mov addr16 stos lret push in xchg fptan dec sbb jb add lods lret pop div mov add or movsl jg in out mov push fmull sar push pop or (bad) cli lret mov cltd mov arpl mov sbb sbb mov fimull aas imul inc pop int push mov test ss stc sub test cli add jle outsl ss mov jbe fwait xorl push push cmpsl adc ja pop and cltd dec rcr jle sahf rorb mov test xchg push push adc rorl pop fldl inc inc add repz (bad) jb xchg (bad) mov mov mov out inc pop add dec loope and xor inc cwtl push leave out jle and iret xchg sub iret xorl (bad) in je add xor jno (bad) das dec in push mov scas in and cli mov sub xlat out mov xchg pop mov fisubl lock jae ror adc mov jne mov (bad) movsl iret out gs ror mov outsl int3 mov xchg and inc adc push sbb xorl stos mov and inc idiv daa lret lret in sbb movl jb ret adc push mov lods stos push roll push and iret dec enter sub lock pop adc add fadds or cmp inc sbb and js stc sub jb push mov out cmpsl inc fs out xchg or mov pop imul fldcw sbb popf pop jne int xlat inc test pop sbb jle jg sub cltd sub adc inc (bad) cmp insb lcall xchg mov sub dec mov add insb insb fsubs mov sti pop jg cmc (bad) cmc roll adc jp push out out iret push arpl push mov xor mov adc imul push xchg dec cltd std inc lahf inc adc gs enterw les sub aaa sahf cmpsl icebp cli ja push stc inc push jns xchg and das mov jp jo mov mov sub sti cs in (bad) (bad) stos lret aas mov out inc nop arpl mov mov (bad) addr16 imul sub les jo mov or scas loop cmp dec call add enter cmc sbb jecxz aad mov sub popl push dec mov repz jmp xchg xchg or and jle pop js xchg xchg pop adc imul popa add in imul rcrl insl sti dec repz push popa loopne pop mov cmpsl dec sub cmpsb mov add movswl es push sub cli push bound xchg iret mov fs loop push cs dec xchg push sbb stc pusha and push loop divl sbb sub xchg jns ss add iret pop andl cmp adc sti and cmc xor cmpsb inc jb mov dec xor adc push xchg imul ljmp mov fcomps adc add push outsb bound fstpl push movsb fs lds enter pop (bad) mov aaa cmp ja lcall mov mov sti (bad) leave mov mov or test and addr16 cwtl dec leave pop push adc popf (bad) lea pop pushf fwait jmp pop jb loope xlat jae push pop cmpsl sub mov add add or adcb and or movsb lret rcrl sub and add add nop and push adc mov add in hlt iret lods rcrl push ret ret jo out jnp or in out je pop dec lret data16 mov push sbb sub cmp dec lret loopne les or ret pop mov gs push movsl xchg jo incb out cmpsb fidivl or (bad) mov inc pop push push jne iret adc lret stos cmp je int3 test jb add add jnp mov test imul or or es cltd fs imul cmp jbe jno call xchg loop xor mov push mov xorps outsl xchg jae cmpsb aam pop adc mov mov adc jl movsl enter mov lret pop outsb aam fs (bad) test mov lcall sbb cld int3 xchg xlat test or lahf xchg inc xchg outsb les ret xchg jl push push in dec fsubrl lock daa leave aam stc or xor loopne aaa call push pushf jecxz lahf and jbe hlt lds jg dec xor push sti fildl push cmp xchg ss sti push mov and sub jle addr16 in cli mov or mov mov mov repz pushf inc arpl into (bad) sbb cwtl movsl aam mov cltd shrl sbb sub imul outsl mov cli or add cmp bound adc js out and jnp fmull mov jne cs outsl and scas mov pusha mov or sti jae in test aaa hlt xor push es movsb loope jmp mov loopne inc ss out movsb add sahf ret mov dec testb gs push (bad) aaa mov je in repz pop fnstsw cwtl sahf dec out cwtl std and jnp xlat xchg lea pop ljmp rclb jmp sahf mov inc adc lods adc into lahf lods fistp jno shll mov sbb mov arpl int3 fldl mov mov gs pusha ss lods daa jbe fidivr call movsl rorb inc jg mov add add add push xor ss mov and pushf cltd sub push js stos cld ja or arpl hlt jb mov mov mov imul cwtl (bad) js pop pop out jge mov mov in ds add popf adc jo fldt test push jmp push imul or test dec add mov push outsl pushf jae (bad) inc inc and (bad) clc fisubr mov lcall xchg fstpt stos add popa sub pop inc shrb (bad) xchg in out adc out subb (bad) sbb xchg jo mov cmp lds sbb cli pop or out mov lcall je jne ret cwtl ret mov sbb xor dec cwtl in aad lock cmp push ds test push scas fdivr mov mov sbb jo mov stc pop in das ret in mov pop les les mov out sbb mov fbld ret pop fnstsw test jg mov and adc stos rcrb and inc cwtl and mov mov ja sbb and add push jmp daa in inc inc pop pop cmpsb loope cwtl fnstenv mov repnz inc mov xchg cmpsl adcl and adc push roll pop ret repz out rorl (bad) mov or adc mov pop xchg loop inc sahf pop push pop dec into xchg ffree cmp mov cs cmp sub mov cmp adc imul push lods test or dec jl leave negl stos adc outsb inc shl push adc mov xchg and sbb mov repz push sahf std ret test sub sub scas jne aam retw movsl andl pop je adc xchg mov fsubs mov addr16 out stos sub outsl pop push push jmp aam imul or mov fs ret scas pop or adc pop mov dec sahf arpl ftst sub mov and aad xchg stos adc sahf (bad) out in sub test inc repz inc popf adc (bad) mov push pop popf push pushf push inc push mov pop cmp bound xor push jne in xchg fs scas inc hlt add fisttpl inc inc pusha (bad) inc repnz stos repz push sti cld inc sti cmp ffreep xor mov xor out movsb repnz lods cmp gs leave mov xchg fcmovnb daa xchg dec sub aad out rclb lcall (bad) in aad (bad) in inc mov mov es add xor sbb lret stos push or xchg and dec sar mov mov test mov fcomps push inc xor into icebp xor das and mov insl or les push add jb data16 push sub je mov les pop imul dec cmp fwait cmp (bad) mov push notb in mov outsl repz dec aaa dec cmp push jbe test add cmc or into out std outsl mov lret bound cmp or jg adcl out add stos arpl cmc or push ret xor ds add mov mov loope pop and daa clc int cmp cmp dec mov nop cmp dec pop data16 and jp cli rclb call bound pop jbe int3 push ficompl sbb pmaxsw mov lea out pop dec dec sbb loope sbb xchg or jno das jg (bad) jp mov add push jle mov jmp adc or and add hlt sub and or std cwtl adcl mov add pop and sti cld cltd aas jno lock test xchg pop adc arpl test dec or mov in xchg mov pop cmp xlat stos mov cmc add lods adc dec sbb sub mov inc daa jp or dec clc mov xor pusha stos loope mov mov add mov mov aam dec insb and cltd pop inc fimul pop and mov mov rcl bound lock or mov sti lds and xchg js popw popa adc (bad) pop jge pop cmpsl stos mov adc jns push or fstl adc leave bound jae sub jno,pn iret push stc int sbb movl push sbb daa push and xor scas jle jno adc loopne mov pop and adcb mov pop dec hlt xchg or andb sti push mov out ljmp or fiadd cs (bad) jb je mov daa rorb aas cwtl daa lds mov add jne scas ljmp imul xor jl xor lds cmp gs scas mov push scas lcall push and (bad) xchg test cmc imul push sub jb daa add in fwait fs inc fsubl dec hlt mov int mov cmpsl add scas outsl mov xchg sbb mov cmp push add push and pop xchg xor cvtdq2ps adc xchg pop jnp dec movsb push dec or mov fbstp lods sahf mov jmp lods in aaa inc mov mov mov mov cmpsb scas add or data16 cwtl jg,pn rcrl jno lock fwait mov jae jle and stos mov and adc fs enter lock or loopne clc sub fs push rorb xchg mov or pusha es mov mov mov sub jnp adc jae lcall mov jecxz cmp jns mov xchg cmpsb push push dec jp loop divl ljmp or mov and sub pop mov adc xchg push or pop mov outsb adc scas jnp push (bad) jbe int mov (bad) mov mov or push jno in mov and or adc outsb outsb imul int out add adc sub sahf js cmp push popa inc (bad) and divl sub into pop je inc sbbl sbb les mov mov out dec push cmp sub rcr sti andl jae sub sbb aaa out ret es mov loop jno adc leave and fs xchg lods pop js dec mov nop push mov and out xchg stos sbb ds cld jl or lods fldcw pop imul movsl adc adc enter sub sbb or push lret gs dec daa aaa sarl std test cmp inc mov dec and cwtl in push mov aad push sbb loope lock loopne mov popf rcrb and inc mov adc add mov fistl mov adc adc jo pop ret mov mov lret add outsb sub sbb lahf test pop inc les jns inc lcall and sub dec cmp dec xor les jecxz mov gs rcrb js pop fs cmp push dec xor rcr rcl outsl jp xchg jmp sti or xchg push mov loopne jb scas push push les xchg push cli outsb sbb test lret dec cmpsl lret cmc inc inc sahf xchg shl movl dec mov or pop or sub insb jae mov xor test pop cs stos mov mov xor xchg xor cli std std in stos mov pop mov sbb mov bound and adc cmp sbb cmpsb fwait and addr16 rdmsr cmpsl and jns sub xor dec fcmove fadd (bad) out sahf cwtl push cld sub push sbb cmp sub pop fcmovnb lods inc or (bad) ja clc pop push dec notb adc push mov inc add push or xchg push ficompl and push call mov jge mov fwait jb jle (bad) shlb push inc mov mov ficompl std in cmpsl les subl pop jl aad lods fcmove test mov cltd mov cltd nop sbb sti rorb inc stos push cmp add dec ds cmp dec push scas cmp adc push cmp out imul push mov pop aad sub scas pop inc add add (bad) scas mov (bad) ja aaa jns jecxz xor push fs enter push cmp mov fs cltd cmp adc mov call inc sub push out xor pushf rclb mov mov iret cmp stos cli das push and gs lret jnp test and cmp pop sbb fwait mov or add jb out inc mov pusha pop xchg stc mov daa xchg sbb repnz cmp (bad) mov inc xor nop popa adc add or mov xchg mov insl mov (bad) ljmp xchg outsb ljmp loope pop add xchg (bad) cld es movsb je dec dec popf sarl pop enter push push mov fisttp dec ja cmp dec add pop add clc push ljmp mov imul data16 test mov pusha popl and xchg sub pusha xor outsl add jecxz push adc iret popf push into repz inc ja cvtps2pi (bad) fwait jp mov (bad) (bad) mov mov mov add sbb jge and mov stc into mov popa pop stc dec in xchg lret fnstsw out (bad) fldt and mov das fsubrs aaa andl sbb push js out fldcw cmp cmp xchg cmp outsl jle rorl shll (bad) mov mov fstl subl mov andl add sub xor rcll adc push mov push mov mov adc and cmp fdivr mov add in push popa and (bad) loope or jnp pop xchg icebp ret frstor and xchg cs sar xchg popa jp dec mov test sub das push js call xchg pop (bad) fstpt adc mov std fucomip imul xchg daa mov pop sbb bound xlat and and or fistp insb add push push mov mov test rorl fstpt pushf jl jo push pop mov repz add dec (bad) jns,pn in sbb (bad) dec lock iret out inc jne loope int3 stos mov mov lock icebp dec out and bound int negb add mov imul test fstpl pushf nop outsb mov jl dec repz sahf daa and rcrb xchg mov test (bad) pusha and out pushf cmp inc jno data16 dec mov mov das lods or xchg insb add push aam add fwait or (bad) sti das mov jg pop popf lahf dec inc jg (bad) dec rcll sub cmp fadds mov loope and and ret xor dec dec pop mov add mov cmc lea cmp addr16 movsb ljmp dec ss (bad) test jg dec es xor scas loopne dec pop and lea aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) fild add add jnp inc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add dec xlat stos gs outsb lret mov xchg insl fistpl mov mov in lret jbe pop push jnp mov add and add dec daa mov or (bad) xor (bad) addr16 inc pushl outsb mov sbb push (bad) lahf sub sbb sahf xchg cmpsl (bad) sbb ljmp xchg mov xor popa les das mov sub fwait scas sub fcmove or dec jmp fcomps xchg or sti (bad) or lods loopne pop jg movsl sub pusha dec scas mov mov lock push insb jb adcb or je and fimul loop ja xchg cmp (bad) push jg xchg (bad) jo mov push insl int pop adc data16 rorl cwtl mov jae xchg (bad) fisub adc xor adc jg jg jnp cmp imul lahf adc mov push dec insb insb pop jb mov jae jns movsb stos and fucomi insl jl jns adc sbb and cmp jl loopne push hlt cmpsb and in mov cmp inc adc jle cmp jbe pop test nop dec jnp sub sbb in push arpl xor inc fidiv in mov (bad) pop mov hlt xchg mov jno fs dec add sub (bad) xor jnp jle roll xchg sbb sahf and es (bad) js lret sbb pop xchg fidivl mov gs dec aam lods mov ljmp cmp mov loopne sti cwtl xchg push dec cmpsb jae fwait cmp dec pop fistl mov mov (bad) jo les int mov mov dec int or ret push cltd into push dec aaa pop xor pop add jnp jbe enter (bad) and mov cmpsb lods andl push jns pop hlt sbb repnz iret imul ja sbb ficoml fstp mov hlt dec xchg or mov inc jle adc jbe bound jl adc xor and idivb or cwtl push pop dec xchg out xor mov cltd or (bad) and fadd dec scas loop (bad) sbb insb cmp or mov bound (bad) pop pop jge or mov pusha cld push push test lea leave pushl imul data16 popa leave mov mov add enter fwait mov dec test push stos xchg push sub pop lcall mov mov imul movsb out (bad) jge addr16 mov and js pusha daa sub pop outsb push jno mov and dec pop cltd or decb xor mov mov push adc aam fldcw imul mov sub cli adc push mov out xor jg out jge dec inc push sub push jb mov mov lahf ja scas cli dec imul and int repz jbe push or or xchg xor movsb out jae cmpsb push fwait repnz leave and adc (bad) enter sub xor call bound pushl negb push push mov sub lret adc lds loopne fdivl cmpsb in dec mov inc xor dec mov sarb pop rcr ficoml xchg inc sbb fidivr or es adc xchg imul add call outsl push push xchg xchg mov mov lods xor fsts push bound into out sahf lcall pop pushf add and push mov mov shld jb rorl xchg repnz aad mov add rcrl or pop sub cmp insl mov mov out lds out sbb iret mov (bad) cs inc loope jns or out adc push add lea pop sbbb push jne jb cmp and orl repnz sub out and xor jecxz rcrl (bad) jg push out jge inc popf jo mov lret (bad) mov mov lods scas out hlt aad mov push insl mov sar out imul aaa loop in and mov fisubrl push movsb inc (bad) enter jo xchg lds repnz mov andl pop mov test insl in push sub inc xchg pop sbb es (bad) sbb stos xor push add jmp xchg cmp mov push out and arpl push jg loop (bad) roll mov or sub pop cmp (bad) mov ja je loope pop mov ret sahf xchg insb add mov jb test cwtl and outsl mov enter adc mov test mov insb rorl insb inc scas pushf add xor mov xchg sub call ja dec lods sahf lock adc and (bad) imul daa add mov movsb sbb cmpsb mov call data16 idivb push mov orb mov mov dec dec leave cmpsl fadds addr16 sbb pop pushf ret mov mov mov dec addr16 push leave leave inc rcll dec pop jmp push imul adc pop cmpsl push outsl or movl pop into push lods (bad) in mov jo pop xor or loop add aam int3 ret test pop push adc dec xchg pop adc mov sub mov test inc pop es mov movsb rcll ljmp jge (bad) mov cmpsl jp inc (bad) xchg bound xchg daa sub dec js pusha jno jae xchg outsl sub clc inc jnp inc fiadd sbb cmc test aam adc stos bound scas pusha test (bad) repz mov and sub mov jp dec jge sti sub mov ret into fistpl or dec mov pop adc scas lds add imul scas and or andb mov iret or and lahf insl rcrb scas ds (bad) mov jns xor sbb notl andl clc cmp xchg hlt (bad) stos cmpsl dec or inc stc out add movsl mov inc rcpps pop inc pop mov imul outsl call sbb shrl adc push mov sub cmp xchg ds in mov cmc pop (bad) rcrb pop xchg pop jbe gs pop test xchg sti pop mov mull mulb in lahf xchg hlt in inc sti inc jg shl push aas add pop in sbb mov aad cltd iret aam jne mov stc cld push and and add mov ret adc mov hlt pop dec cmp jl inc lods push pop ja or and fimull mov enter testb lret jbe rorb lcall fisubr cmp pop mov dec imulb sbbl push pop shlb (bad) cmp sbb jmp fldenv mov add hlt xor push add and fcomp add imul push push adc xor fdivrs sub gs or mov ljmp fistl imul mov ja push adc shrl mov out jmp fimull cmp jno and movsl rolb test stos mov push cwtl in int cld fistpll xchg mov out repnz dec mov int3 pop cli inc inc repz mov mov test jge hlt std sbb pop subb push rorb fsts neg mov push mov dec mov xor call icebp inc (bad) cmp pop jmp rolb sub inc sbb pop and pop out (bad) xor pop js outsb push in fs jge cltd scas into inc push aam mov adc popa push (bad) repz jecxz test mov xor jne negb push loopew jl push mov or pop ret test hlt jb loopne cmpsl ja jle stc repnz xor push and stc inc (bad) rcl sub dec (bad) jb xor das (bad) xchg pushf in push mov scas sti loopne xchg jp ficoml cmp or lcall int adc (bad) or psubsw pop jle scas inc mov pop dec mov mov mov pop inc mov fstps repnz adc rsm pop dec clc call (bad) pop sbb cmpsl movzwl xchg inc imul and out sbb scas sbbb cld xorb mov mov aam push cmc cmp sub das cmp movsb push es mov inc scas or inc out adc pop xchg aad and push movsbl and and (bad) insl aad mov and cmp and pop int push cmpsb fwait cs inc and jbe stos cld mov xor adc sbb clc out test mov or mov mov lds bound and cld dec lock mov das test jge jns dec lods mov loop lahf rcr iret push fcoms adc int3 adc push xchg add into inc fnsave smsw and mov movsb push sub mov jmp imul and jno push cltd xor mov push dec loope adc mov add cs pop push ret inc ja mov adc imul xorb enter xor mov sahf sub add popa rclb addr16 sbb outsl popa int3 sub sub fild scas ds mov cmpl xchg and mov ffreep jecxz push movsb dec jge xchg addb adcl clc mov stc add out faddl adc jp cmpsl (bad) xor sub pop popf xchg loop iret push out pop sbb mov roll dec cmpb jecxz fadd test icebp (bad) xchg repnz push pusha and mov push pusha pop mov call push sgdtl mov sub and iret stos scas cmp mov lcall and jns dec jbe cmp inc cmpb (bad) jae lea ds iret scas jae (bad) mov mov call sub outsl clc jle fldl adc pop les add icebp mov aad mov push sbb loope cmpsl pop test mov cmp jbe push xchg mov adc rcrl nop sub pusha mov mov push sbb dec movntq out dec jecxz mov inc pop je xor loopne adc out pop push inc rcrb xchg and insb and out xor sbb add fcmovnu and dec stos mov ds push nop aaa xlat cmp mov mov mov mov popa ret test mov sbb cmp fcompl mov jmp or mov std push pop xchg scas in call pusha rcr scas sub int3 data16 xchg roll lods out pop add outsb int mov (bad) repz pushf mov fcompp enter and push jae (bad) mov movsl orl adc dec add mov jnp jg push test shl loopne movsb add loopne rcr addr16 sahf cli sbb and pop mov dec sub mov lahf jmp and mov jecxz icebp or xchg and cmc xor inc sub in xchg pop lcall cwtl or xchg pushf or ss cmp or call mov addr16 test (bad) jmp popf iret sbb push xor (bad) mov ss or lahf popf (bad) hlt inc dec aas into orl push push outsb pop adc insl in mov lea (bad) cmpsl mov or xchg cmpsl push (bad) hlt jbe cmp sub cwtl xchg lods insb cwtl sub mov shl dec adc dec cltd xor fisubr inc test (bad) inc rep sub jg xchg jecxz outsl add mov aaa ja iret clc push mov cmp inc sbb xor mov sbb ljmp xor and lds push xor push push scas mov lods cwtl jl or mov inc adc mov xor mov or repnz gs cmp jl call pop push imul stos cmp repz jb xor mov lds aas xlat (bad) popf stc sbb jnp sub mov decl dec gs push jae push stos movsl imul fwait int3 popa (bad) push mov sub ljmp adc adc and int3 test xor push aaa pop lahf out lea or xchg stc divb pop and or arpl std lahf lahf pop in inc sub and ds cmp sub or pusha inc mov and in lcall xchg lock hlt pop or int dec push pop test dec sub test arpl xchg xor dec cld repz in cld jne mov leave dec pop and icebp pusha cmp rclb mov out xchg in adc arpl cmp push cmp pop fsub sbb in lret xchg fwait lods or or into cmc sub and in repz in sub mov bsr (bad) xor mov mov sbb addr16 adc adc icebp scas push sub xor ficomp mov dec loop stos sub fs mov into hlt dec xor shrl xchg push (bad) mov outsl fcomps rcrl pop mov xor dec fnsave and imul inc pop inc jmp rorl add mov xor ds inc jecxz sub xchg mov mov xor and adc xchg adcl or insb mov jnp mov fwait mov xor adc stos mov mov adc push stos pop lea movb imul jge inc and adc adc mov mov push and xchg push adc sar sahf push sbb rcrl je adc sti adc xchg jo mov push inc stos inc shrb or mov cmp cmpsb push test and out (bad) xchg adc les cwtl movsb xchg aas sub cmp mov aad mov lret mov pop rcll popa ja sti in add dec jecxz cltd ret dec cmp repz sahf push adc jne sbb scas cmpsb lret mov dec sub mov pop cli xor clc fildl arpl js xchg pushf xor push xor add push xchg mov add aaa inc sbb sub inc repz lods pop stos test cwtl test rolb cmpsb and mov add je out cmp mov mov mov xchg push (bad) jno stos pop cmp loope and pop (bad) dec jecxz test ds ret cmp push add in test (bad) fdivs pop in mov aaa mov pop xor push ja (bad) inc cmp stc dec popl push in and (bad) jmp inc add sbbl (bad) jmp bound dec jmp in adc icebp xchg mov (bad) (bad) sub loope lock inc xor (bad) popa fiaddl popa pop out insl add pop xor adc roll mov mov (bad) inc ss popf add push mov inc rcrb fisttpll ret outsb mov outsl (bad) mov out test ficompl pop test mov adc push fs cmp adc mov inc dec inc push mov scas xchg adc pop dec mov imul outsb (bad) int3 cmpsl or imul sub cmp adc xor mov scas out cld jmp sub lds pop and scas xchg xchg mov (bad) and in jp sub add xchg pop sbb adc lret inc cld aad jmp ds xchg sub xor push clc add idivb push data16 mov xchg pushf mov test cmp mov js jl insb lea or imulb xchg pop push or cmpsl mov icebp outsb rclb stos add leave push out stc callw mov gs nop (bad) stc adc in mov push lods inc mov xchg or mov inc inc fs xchg push lret rcll shlb ss hlt push rcrl dec cmpsl push inc ret adc add jnp stos movsl sub add mov xlat adc cs insb lret inc sub nop adc (bad) xlat inc aad mov push clc das jno cmp xchg adcl into lea jne icebp int3 testl shrl jne outsl mov adc addr16 aam insb ds cmc cmc push clc cmp and cld dec bound or add inc adc ss enter into lock subl or in cmp and icebp jl sub xor repnz fstpl mov lret idivl lea mov dec adc push adc loop inc mov (bad) aam jbe (bad) cs loopne xchg outsl mov inc pop push das lods leave (bad) mov hlt xchg jge pop xor stos aaa out insl xchg push fidivr movsb inc xadd test and movsb jbe xor mov jp and outsb and int xchg mov lea bound sub sbb push fstl mov pop cld sbb cli or mov repnz sbb dec push dec xchg adc test data16 out dec dec data16 popa xchg pop push pop fs lea call test cmp push inc test testl pop shll adcl sahf pushfw and pusha jge pop into sub pop jp mov out stos mov cwtl int3 dec mov xchg sub out mov gs dec jg pop adc jg jge stos (bad) push fidivrl or rcll mov dec mov or out cmpsl mov sti inc sbb pop push dec loope pop hlt popa fsubs ret pusha ss pop jmp sub xchg out out sbb outsl adc xchg xchg aas sbbl in add mov lods cltd es inc inc hlt adc mov and sbb push mov pop cltd cld add ficoml mov mov dec xor icebp jge xor ljmp (bad) adc adc mov mov ljmp leave hlt inc cmpsb cld and lock jno aad mov js fldenv add mov (bad) adc loopne xchg pop cmp sub (bad) inc inc pusha popf push gs mov out or push test popa mov xor sub add xchg fsubl (bad) cmc mov adc sahf add pusha mov adc enter push jbe xor and xlat lock push out stc push lret jbe mov popw (bad) mov outsb jne rcl lea out xor mov jnp (bad) ja inc and cmp rcll adc dec iret in in mov fxam (bad) (bad) mov inc fsubrl imul iret (bad) lret aas cld lahf sbb mov jge xor mov cs xor adc mov jl fmulp xor jb or lret push mov js jg je (bad) jne xor cmp mov call adc pop loopne jmp inc fcom mov xor push rorb cmp jge rolb lds sarl sbb adcl mov int3 imul mov mov or bound or mov repnz lods stc popf and push xor mov push lcall pushf xchg cli pusha mov in mov ret cmp test loop cli or dec pushf xlat inc loope repnz or xchg mov pop cmp test dec fistl add icebp out cmp adc adc stos sbb dec je out popf xor inc mov addr16 popf lods xor (bad) pop icebp pop in into outsl idiv mov fistp (bad) sbb rolb dec hlt jle les mov sub (bad) mov pop (bad) jp sub sahf std and adc js sti xor lcall xor mov cwtl mov loope clc scas push mov dec cmp popf adc pop iret sub test cld cmp pop cmp jecxz dec inc mov in add pushf pop out inc ds out in jo cmp xlat mov add cmp xor pushl pop pushf cld sti cmpsb jbe pop adc xchg loope (bad) jae daa xchg dec jmp pop sar out lods cltd xchg push pop dec rcr test jb nop lods (bad) jecxz,pn push outsb cmp or divl js adc je outsb xor push cmp mov aad add clc out pop aad sbb jae mov jg std cmpsb or imul subl add outsl xlat pop std xor mov and jnp push sub pop mov imul popf insl inc sbb cs jnp jo jae inc sub iret cmp faddl (bad) rcl adcl xchg insl xor testb mov lea mov repnz jne lea dec bound fs xchg lods sub mov ret pop ljmp fwait xchg (bad) pop test shrb push loop push pop add add call aad jno,pt adc pushf mov dec test or hlt or xchg xchg sbb stc pushf popa push push dec and pushf ds pop out dec xchg (bad) cmpsl mov icebp scas leave out inc mov adc mov xchg emms adc nop inc lahf jno jae insb movsb clc (bad) fcmovnb and in rolb mov (bad) bound pop add push cwtl cmc (bad) incl pop dec lcall (bad) (bad) mov (bad) insb rcrb sbb lock mov cmp lcall fldenv iret adc in add scas int outsb (bad) out stos sbb das shll sub (bad) lea enter pop stc jns in int3 xor out cmp lds sbb enter (bad) test jge mov pop pop arpl (bad) mov lea cmp arpl dec push std xchg xor imul rclb popa aam xorl pop shlb mov dec lods stc mov out pop mov std lahf loop push jg ja adc jb fstl scas xchg iret mov lea pop nop fiadd pop fidivrl popf xchg ret jbe fdivrl outsb xchg (bad) pop leave mov fisttp push mov adc std test push ret jg ljmp scas enter dec lds scas jecxz rcll js xchg add mov sub pusha out and inc ja jbe cmp sub jb and cmpsl jbe push jecxz movsl xchg add insb les inc inc xlat lcall mov jg mov shlb pop add (bad) std push xchg (bad) jle push inc movsb xchg xor scas in (bad) jno jl fxch (bad) mov ljmp popf fdivp aaa fwait (bad) mov mov dec xor push lds add pop out push outsb jg ds test ds outsb add adc cmp int3 popf fcoml push dec mov sub data16 inc cli call outsl into sub mov sub dec int3 mov insb loop loop fidivl mov jb sbb movsl or mov sbb inc mov mov jb cli rcrb mov lds rorb add clc pop dec adc inc mov jae out mov mov jbe xor je,pn or push call scas pop les inc jle xor pop sti (bad) pop mov (bad) out arpl out pop jbe fwait hlt fwait clc daa sbb iret orb cmp push mov sahf outsb cwtl js mov pop call pop ret fstpl ja xchg daa mov int dec mov js jae les hlt pop jp ljmp sbb add popa add sti outsb leave scas add scas cmp adcl xchg inc cmp int3 jle ljmp pop push ret loope xchg add lret mov and and fldl lret jae rclb dec dec mov pop push mov sarb mov cmc sbb push cmc popf enter inc add xchg sbb lds sub cmp mov and mov scas js adc in sub xchg mov outsl push cmpsb loopne mov (bad) xor and add test leave mov xchg das sti push cmp ret push sub sub mov add mov sub test sbb lock lods cmpsb mov mov iret push fistpll int3 hlt jle sbb mov or stc lds test or sub push movsb xlat pop rol inc mov dec cmp shrl loopne arpl jp (bad) fcmovnb lds test jge mov inc mov mov sub stos loope pop jne insl add test std mov and (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add incl in mov cmpsl push dec mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb xchg insl scas xchg mov insb sbb ss dec lret divb insl jg jge out jae sldt or andb mov fisttp pop loop imul hlt pop arpl jle ficom pop dec dec jns hlt insb mov jb (bad) shll int3 (bad) ficoml pop ljmp mov addl pusha lcall fsubrp jmp repnz cmp sbb lahf call aaa and sub or add sti imulb cld popf jge subl pop push pop sub (bad) pop xor fisttpl mov push push iret popa jle scas jbe in cwtl xchg sbbl or aas shr push popf xchg stos scas inc jmp pop testb push mov leave push mov les addr16 scas (bad) hlt stos add sub cltd loope inc repnz pop out lcall add and sub notl daa in mov push adc push mov xchg popa (bad) pushf xchg mov pop and movsl push pop dec orl ret insb (bad) jmp pop push mov lock leave jno out or pop mov cld repnz adc stc sti sbb insb movsl jp and cmp and call mov bound xor repz js and xor pop xor jne stos inc pop or shrl dec fnstenv pop jno xor cli jp mov enter in sbb fs xchg xchg mov push cmp xchg xchg mov into (bad) mov cmp fisttpl xchg cmp fcomi les push aam das enter ja push lcall push mov in mov pusha xor in inc icebp hlt push scas cltd out aaa dec stos add jp adc or aas leave push iret (bad) sar test push andl pop dec mov (bad) shll dec idivl cmp arpl mov enter movsb sbb xchg stc lods xchg inc push into xchg cmp push insb imul ss rorb dec adc jmp and (bad) sbb cld into cli lret pop inc lret cwtl jge mov (bad) push sbb mov cmp cmpsl les out mov push or mov popf pushf sbb scas or retw inc mov out xchg cmpsl ficom xchg lods fsubl jno (bad) fistp adc pop adc fwait mov dec loopne aaa popf jne iret insb push repz mull into lock mov lock repz icebp and jo mov mov mov mov insb sbb sti test jae xchg or cld cmp stc out pop hlt jbe cs iret ja shlb test in fisubl in or ljmp dec enter sbb cld mov jp cmp inc or mov pop subb (bad) icebp cld rcrb test in fstpl jns xchg add jmp into das xchg test jo js pop xchg mov pop lret fwait ret jno mov andb aas sub cwtl adc aas pusha jmp mov mov add test mov mov inc loopne and add fstl push mov push sub ljmp jo xchg addr16 mov pop call mov add and jne dec dec daa push mov push mov xor dec add adc xchg xchg inc push int3 adc loope sbb xlat in ror leave ja jb stos inc mov daa mov stos jno roll jmp outsb push icebp pop jne push leave add mov loop popa cmp push decl inc cmp gs xor dec in cmpsb adc mov jmp pop dec or mov sbb add pop (bad) xchg insl dec mov push sbb lock cmc loop loope cwtl inc fldcw sbb das aas jle ds dec cmpsb test inc fldcw jb shl mov mov vmovsd jge mov mov (bad) sub mov or sbb insb push jbe inc push dec and stc jle popf jne pop sbb push xchg pop aas clc xchg fsubrl sahf roll mov cmp clc test scas lahf pop add (bad) leave and arpl (bad) out mov inc dec aas test (bad) push pusha data16 scas loop sbb lahf enter xor shlb mov mov jo out dec int sbb hlt loope inc repz mov lea shlb shrb rol fwait inc jae clc sbb repnz aas scas fsubl push jle sbb mov xchg xchg outsb xor insl push inc push imul jae adc stos fsubrs subl adc xchg cmpsl addl sbb jmp (bad) icebp or mov cmc adc cltd cmpsb and jecxz sub fstpl mov mov lret pop lret out jae loopne mov pop imul cltd es sub mov test popa stc inc stos aam or cmpsb lods xchg (bad) les orb fwait mov sub jg addb clc outsl stos pop or sub lea cli push push shll xchg cmp mov (bad) sbb inc mov inc push fild push and aas lahf xchg sub je push addr16 and lcall push push stos xor pushf sub je xor movsl test addb aad (bad) sub push xchg push sub (bad) fildll mov jp push dec stos outsw add out sub mov jg and loope push hlt mov ret and pmovmskb test or cwtl sub add pop sbb adc push fdiv jnp push popa inc in mov mov mov mov push and pop jge or push leave adc jae xchg (bad) gs sbb rolb in jo lods cmp mov pop xchg das add jno cmp sub andl fldcw mov in dec gs gs jge mov cmp sbb jp jnp cmpsb jns fwait pop adc call frstor jnp jbe fdivrl jl add div push cmp data16 dec cli (bad) mov fidivr pop sbb add mov xchg sub jle addr16 and test xchg shlb popf push into xchg (bad) xchg mov nop push cmpsb sub (bad) xlat test int3 sarb mov out xor outsl imul and imul cmp mov jbe je mov cs lock shrl push and dec scas push xchg xchg sub mov push ds (bad) or dec std cwtl jecxz pop and cwtl push nop xchg pop push (bad) out sub mov fwait dec aas or ret out dec jg movsl dec jle mov fild daa in and xchg repz cmpsb mov lea lock jno sub int3 movsb jno push sub dec int3 loopne adc stos cmp sarl jno out out pop push sbb xchg xchg iret clc jno cmpsl pop lcall adc popa mov in cmp pusha add pusha test inc xorl sbb inc mov in xchg fs idivb jns insl das (bad) cmp cli fs inc and sub ret xchg sti iret int3 das cmpsb out pusha rolb xchg das or and pop test rcrb cmpsl jo jg push iret fnstenv fldl xchg mov pop inc addr16 mov mov sahf fs test xchg dec and ss mov mov mov xchg dec jmp cmpsl push stos sub mov jecxz or sbb jo ds stc rolb andl into sub outsb xchg pop push aas repnz mov dec lea shlb or cmp inc fidivr jb loope pop xchg dec stc mov pop add mov mov xor or dec sbb pushf and aad sbb xor inc dec add pop divb xlat jnp sbb or lret test in xchg jbe das imul lock mov imul mov mov das sub adc cltd push icebp gs ret inc xor fildll mov lahf mov ja pop push sub and mov push inc iret xchg in test int xor jg call inc mulb mov xchg cmp inc (bad) adc negl insb mov mov dec scas ret xor cmp push sub add enter ret call add sub push ja sbb xor jl js cmp xchg fsubp imul out jno pop add aas ret pop jge adc or call lock adc inc sbb das ja xchg push cmp daa sbb je popa fisttp and or and scas scas hlt test mov jle dec inc aas pop push test jle add repz shr add call movsb scas stos icebp js loope push jmp xchg sub xor (bad) and cmp sub dec out sbb daa fisubrl mov and push sub lret inc sub fwait mov pop jbe fwait xchg repnz (bad) push iret mull jp pop or sub xchg out mov (bad) movsl fwait mov sbb and or push (bad) xchg cmc sub or mov sub dec adc (bad) sub add dec xchg jne mov (bad) cld (bad) xor lock bound leave stc pop mov movsb ss mov push push lods cltd cs shrb dec scas jg pop stos mov cmc imul repnz das in xor lret jae lahf cmp xor adc lock leave jle jbe adc inc jo mov add inc adc repz dec jns pop bound inc pushf adc dec stos jl stc (bad) sub pusha mov je xchg lods cmp lret xlat xchg lea push icebp insb fidivl loopne das jle xor sbbb bound push dec push and inc rcrb inc inc mov mov add addr16 cmp pop and xor fs in imul frstor sub adc mov ficomp rcrb jns loope (bad) xchg add dec sub (bad) lock ja loope inc or insb dec js into cmp loop pop mov xor imul int3 mov jae pop fdivrs xchg mov out mov shrl jnp,pt test inc (bad) (bad) pop xor lods xor aam xchg stos mov dec mov dec sbb mov xchg (bad) and or xor icebp lods cmpsl or jns lcall mov daa shlb pop push sub ret jge push xchg jns ss mov and pop sub jp fbld test enter mov xchg adc xor dec pop fcomps xchg adc (bad) dec scas divb xor dec out lcall in mov mov scas jg lret push dec inc lahf mov sub pop mov xor gs sub outsb mov cmp lret push fcomp pop jbe dec jb punpckldq and add rclb inc add rcrb sbb mov insb inc xlat mov jmp xor cmp inc dec sbb scas jmp mov lret cwtl inc cmp insb nop (bad) jp aad pop daa xor xor (bad) out shrl add in mov push andl add hlt xchg out fldl xchg leave inc or adc iret mov mov adc pushf lret arpl mov es xor int3 add ljmp push scas cmp flds roll idivl cmp nop xchg out lods fimull or push mov repz out xor stos mov mov cmp sub adc add fwait pop insb das hlt push popf mov (bad) lock sbbl loopne add sub jnp cmp loop fstps jge insb push push (bad) xor fwait adcl mov mov (bad) pop adc cld jae call lahf pop push cmp cmp mov sahf sub pop scas lahf cld negl mov test sub inc fdivrp sub jp mov (bad) lods in xchg xor mov (bad) loope,pn (bad) scas fs daa pop pop sub rol call sbb ja mov push fdivl pop xor push xchg xor rcrl adc (bad) xor pop clc adc or mov mov add roll xor mov mov dec scas out rcrl cwtl or dec and test test sahf mov mov cltd mov xor stc sbb loop outsl movsl inc dec sub fs das aad mov (bad) imul jns and (bad) mov mov movsb lds cs mov shl adc mov test fs jno aas mov pop bound ja push addr16 mov xor cli bound xor sub xchg cmpsb std in xor pop rorb (bad) lahf cmc mov push fcompl pop cmp pop and mov lahf jae mov ss or int3 dec jp jl jno jl mov lds pop dec fs fnstenv aad mov pop inc mov scas pop int pop xchg inc add jmp mov sub data16 icebp adc mov cmp sub jo push push pop nop jmp bswap insb sarl inc hlt into jecxz loope push push lock mov lahf mov notb xlat hlt and fistl mov sbb outsb loope xchg cld mov loope insl cs push sub aas xlat fcomip and int3 ret icebp push aam cld repz push cltd rorb sub lods push mov mov mov lods shr in leave aaa inc sub fsubrp decl jl jmp xchg jo cmpsl fwait pop or (bad) adc jo and dec fsts mov ja imul add sub mov jbe xchg mov (bad) repnz dec xchg lret push inc xchg loopne or clc cmpsb inc lcall add inc stos lcall ljmp mov mov inc inc mov sbb mov xchg mov add fnop mov cmp add add (bad) push pop inc cld lock jge imul jle inc scas decb add or outsb cmpsb inc int jae jg jo dec mov or cmp jecxz sbb cmp (bad) inc fnop dec jns pop xor out ficomp mov div pminub or test jmp jg mov idiv mulb add mov push lods or sarl jecxz inc inc jmp cmp jmp fidivl stos stc add aam jmp out repnz repz shll cs xlat jg movsl push gs mov mov push sub jl push rclb mov jmp out xchg cmp mov rcll iret adc push cmpsb sub cmpsb (bad) test inc inc loopne (bad) jae scas iret pop clc inc and dec hlt or and sub insb inc popa jns nop pop lret jbe mov scas cmp repz loopne or inc xchg cmp sbb ss fucomi pop mulb xchg sbb daa lret inc jp inc pop iret and and daa mov cld lret lds jae bound lds int3 add outsl xchg sub and and dec adc shlb jmp add int mov mov fiadd push add imul push bound jp mov push adc add xor add jmp add out mov push adc xchg aad add cmpsl mov cmp and movsb mov mov push lds arpl mov xor rorb hlt cli gs dec in add fidiv xlat sbb movsb dec loope push ljmp icebp jp mov and mov mov dec push movsl sub and cmp out sbbb ret add out pusha xor loop cltd mov jae mov cli and xchg popa cltd fbstp fs cmc outsl mov adc mov aad addr16 lock int adc cmp and outsb jecxz xor mov ljmp lds sbb repnz std mov push adc mov and jae ja mov mov clc push pop std js or jle,pn mov (bad) mov fimull sarb mov into andl imul mov xchg les sbb (bad) out pop pop icebp aas aam xchg sbb imul xor mov dec and ficompl aad pop mov sbbl pop mulb aad mov pop xor pop (bad) es push js lock movsb jnp jo les jle mov insl int int3 xor xchg lods in sub push cmp cwtl jnp cmp push mov loope clc repz push sub dec adcl add pop sbb (bad) xor jb daa clc dec push stos xchg lret sbb fdivrp mov pop push cli popf rorl data16 mov jno xor add pop or jg test scas imul sub (bad) (bad) mov test or and (bad) js fnsave or loopne loope mov lret xor dec or dec aam shlb das xor pop aam in push lods cmp test cmpsb jb adc sbbb aas cli popa andl jecxz fcmovnb lret mov sbb mov std js pop cmp fild ljmp push mov jne cmp daa push pop xchg pop outsb stc add inc sbb test xor sbb cmp or push lcall push rcrb scas cmp jb outsb jge adc jno xchg scas sahf dec and inc cmc movsl aaa add (bad) (bad) insb movsl in or aam movsb negl mov pop outsl and mov das mov cmp popf into jg stc dec das sub push xor leave in jnp mov dec xor insl icebp mov imul xor imul pop or cmc mov cmp je mov enter push ret mov or out (bad) (bad) mull scas fisttpll sbb add pop push test bound lods lods popl mov mov imul (bad) mov mov fbstp push push mov adc lea test push sbb lds stc fs jl sarb add cmp aaa pop jl ja lods mov fistpll loopne or push inc adc or fucom xchg in xchg mov pop pop mov pop mov xchg arpl out imul jle jg jno std cmpl arpl fisub into in int3 push inc (bad) lahf adc jecxz cmp jg cmpsb dec in mov stc pop push push fdivrs jge jl call cmp lret or push add mov icebp (bad) jnp inc mov dec (bad) test inc inc (bad) inc adc lods ret adc adc notl mov jno hlt inc movsb (bad) fnsave mov jmp iret loope adc push dec (bad) lods cmp out mov cmp scas push jbe sahf cltd sbb nop push lods jne inc (bad) mov ja scas jg movsl insl inc xor in cmp mov mov loopne or pusha cmpsl or sbb push fwait cmp insb mov sbb hlt add rcll adc (bad) outsl test push aad mov cli repz les adc (bad) cmp dec insl icebp pusha sub push sahf repz imul daa xor sub xlat xchg xchg xor (bad) or fwait lods inc call nop bnd icebp loope xchg adc xchg ret jbe mov js fs call dec mov ss pop xchg jmp xchg xchg in cli and dec inc xchg dec stos ret (bad) push sbb mov mov bound mov (bad) jbe push sbb int3 mov dec mov inc dec lcall fnstcw add test inc fs daa sub or iret fistpl (bad) xor fldl xchg scas test into jecxz dec lds and push mov push dec cli mov cli mov lea pop adc mov movsl xchg inc mov test adc mov push inc pop les push adc pop bsf mov dec adc in add lahf loope xchg pop cld nop pop neg inc scas push insl pop nop adc sub scas mov mov fidiv pop pop xor jae fstl rolb adc lcall push cltd fisttp mov iret mov out add (bad) out adc fsubrl (bad) aam push (bad) jmp lock pop fidiv test xchg sub add hlt and xor daa xchg in stc sbb inc cmp pop mov repz adcb adc mov cwtl adc lret in mov adc push xor lock fisttpll es ljmp icebp lock (bad) out or inc lods ja sbb notl sbb mov lea cmp roll adc dec lods rolb pop xchg mov loopne jb,pt gs xor pop popf (bad) pop fs sub xlat in push xlat sbb cmp sbb (bad) insb imulb xor pusha loop adc inc xor gs pop mov cld (bad) icebp add cmpsl ss out pushf out mov push sahf lret aam dec insb nop cwtl pop mov out pop loope hlt and mov out or imul mov aas jne movsb adc pop sub mov leave iret adc mov ss dec rclb stos push mov mov hlt pushf aaa pop push daa rolb and xor pop lods ja sub inc sub xchg aas dec or cmpsb jne rcrb ficoml push push dec fisubr dec and imul inc mov cmp adc fsubs cmpsb clc cmp mov dec icebp dec and in jno ficoml add or repz push xchg mov and dec aas sub fidivr iret mov push mov pop dec mov and push (bad) or adc lcall psrld mov pop mov adc and and jg mov xor ds mulb cmp outsl xor pop ss lret ret popf popa lahf out jle lods cld mov ret xchg add movsl mov xchg sahf xor and cmpsb std mov push pop add sbb mov pop rcll sti jnp add div out push aad inc dec lea jmp dec bound mov jb rcrb and sbb add xchg lods mov pop fs xor or sub pop push outsb test popf fwait sub mov test pop pop xor clc pop inc cmp inc add scas adc lea std out lock xchg rclb dec push jo sbbl mov movsb inc jae xor imul sub adc push push and pop xchg dec je (bad) cltd and mov cmpsb xchg xchg adc aaa jg addr16 enter mov fsubp mov jecxz push dec sub add push ftst pushf inc aas or or stc adc scas pushf int je mov push cmc cltd idivl cmp sbb pop pushf push les dec add push cmp dec jmp test add mov mov adc dec adc cmc push pop inc clc (bad) aaa fistp call push addr16 hlt int in mov and xchg lock pop lods or mov in and out inc pusha (bad) enter mov aam or inc sbb js test push and push pop mov in fucomi repz jnp jl jge sti sbb (bad) lock loop ret pushf imul lea jnp int add mov int mov xor stos (bad) pop add mov add testl aad xchg arpl sbb ljmp add xchg jecxz dec push inc fist out scas lods loop mov lock ja mov nop inc out mov mov aad mov jns mov nop mov adc lcall (bad) mov dec mov int mul ja icebp push iret xchg ss push (bad) clc pop xor jmp sub lock outsl push cmc lret maskmovq divl mov cmp dec and pop int scas (bad) mov ss repz test icebp sbb arpl jne outsl mov jns pop repz mov mov test addr16 add mov pop vcvtss2si sbb inc pop dec sub out or mov enter arpl lods scas ds adc xor and insl popf xchg mov jnp mov push test call insl or shl or cmp jg push repnz push repnz push inc cltd pop dec push mov adc push seta cmp mov scas xchg or add repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add incl leave adc dec push pop push fwait add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add or fistpl pop imul int gs mov mov mov jnp (bad) std push out out stc or add or add fnsaves loope int adc mov popa orb roll sub fstpl in aaa lret mov (bad) jns sbb lods ljmp push mov push dec mov fisubl sub and movsl mov inc imul ficompl add adc mov mov addb (bad) cmp cmp test sub roll iret and outsl sub adc call sahf xor lods pushf xor aaa test push push cmpsb pop pop push out sub test sbb ret inc sti xor iret lret pop in push movsl push (bad) out mov or add jge push push pop scas insb xchg add pop or pop xchg sbb jl mov out mov (bad) out or xchg sti imul rorb cmp insl inc mov dec cli sub fdivrs fcomip aad push xchg dec insb arpl dec cmp cmp jno or stc push ja sbb mov pop and (bad) mulb add jge add add addr16 push mov daa jns aam mov sub jmp sahf dec lret add popf sub jg aaa pop fisubrl fmuls add cltd pop dec mov ja sbb roll js stos pop mov sbb cmp cmp jmp xor int3 inc mov stos mov sahf xchg adc js arpl out cwtl mov lcall stos lock call or sarb pop sub lea (bad) mov and push inc mov xlat mov aad aaa and add jl fdivrl test sbb xchg fstpl dec ror cmpsb dec jmp mov push (bad) mov (bad) addr16 stos lret lds mov (bad) mov test xor cmpsl imul mov push js sti mov out or push (bad) xchg fidivr xchg out sbb es scas and (bad) mov enter mov fucom pop xor hlt inc divl mov mov jbe (bad) mov lea push lock outsb cmp push push inc popf jmp xchg lods fs add test add scas xchg scas or dec std gs push sbb adc cmp cmp sbb (bad) inc jns,pt addr16 cmp adc xlat mov aad xor daa jge or es iret pop scas cwtl pop addr16 hlt pop inc cmpsl inc mov (bad) fidivl cwtl xor ret cmc (bad) ja pop ljmp mov add leave incl je aaa cwtl loopne add adc ljmp xchg push dec mov sub jg xor (bad) or xchg icebp xchg mov sub xchg adcl movsb daa bnd das push push xchg and aaa sahf lods cmp or incb movsb sbb sub mov imul or xor dec add pop sti cld out popf pop test cmc inc xchg (bad) cmpsb xchg in and cmpsb ds or push cmpsb (bad) aaa sti das jp sub push inc mov mov stos into enter adc inc lock xor mov mov int mov jae cmp xor jb addl (bad) ficom cmpsb das cmp jg jb movsb aad add mov je and xor push movsb sub leave xchg pop ret es int3 jmp cs rolb pop scas sti mov cmp xchg enter (bad) js je,pn fidivl out adc loopne mov pop sbb ljmp in test gs mulb lcall bound pop dec push inc sti leave (bad) je ret xor or stos mov mov das ret xor and add jo pop stc in push mov pop (bad) jle adc sti xor int3 jle cmc pop shrb or jno es jl int3 dec aas or xchg xor push ja push xor mov int3 lock jl mov push add lret adc sub fdivp inc repz pop int3 scas dec sub daa data16 fdivrl mov aas and adc mov aam js push insl pop aam cmpsl jne into jecxz scas arpl xchg cmp dec lock aaa cld nop hlt inc outsl sub idivl sarl or xlat jge jmp scas test pop (bad) addl add fisttpll test inc arpl out or xchg repz int3 and xor cmp mov xchg sub and loop divb mov rclb dec add popa les add pop push fs lahf sbb inc dec std rorl imul push sub shr mov pop arpl adc mov test sub fdivrs jecxz or popf pop imull and out pop jnp loope clc sub ss xchg daa mov nop repz aas ds push push insb mov lret push cli dec sbb out mov push sarb sub or clc push mulb jmp scas dec mov rol in pop xchg jmp pop jnp inc hlt mov add lret push mov cmp and jnp mov sub (bad) xor xchg add xlat js push nop adc xor rorb fistpll dec mov xchg (bad) fstps stos push repz mov cmp ljmp fcmovnb push popf (bad) cmc test dec pop xor xchg in jle shr into mov repnz fwait sbb and rolb repz test sti fs xchg pop scas enter mov push fst or js aam insb ss leave sbb jns int dec lock inc fwait repz call add push in das testb pop push (bad) push pop dec sub jg nop lods mov mov in pop int xchg adcl leave and pop ljmp mov leave push stos sbb js,pn loop ret xchg cld in scas cltd ljmp popa outsb ds xor lea jg jnp cmp xchg sub inc (bad) shll test push in dec ja dec push int jne cmpsl inc rcrl pop jo arpl test xor lods insl shlb inc mov out inc jle mov lods xor jecxz xchg push mov mov push xchg pop repz mov jmp and or xor rolb rcrl pop adc add add out pop shl lret frndint push cmp cmp inc mov leave data16 add push push dec outsl xchg xor fldt out push leave pushf loopne repnz mov scas jnp or adc into rorb inc (bad) ja push mov push push sbb inc (bad) mov mov sbb popf xor inc aam repz gs (bad) nop xchg ret mov and dec repz cmp loope mov out cmp in jl dec jecxz lods ljmp inc inc jg cmp loop jnp lods jecxz fcmovbe es sahf mov pusha inc cmpb (bad) xor movsb add jge movsl or aaa inc mov inc mov aam lods lea mov pusha cmp xchg pop cmp pop pop or inc adc ret loopne inc add inc addr16 xchg enter mov lret leave pop inc fnstsw xor jo test addr16 mov push pop je imulb xor xor clc and jnp loope outsl int3 push pushf fstpt mov fisubl add fldcw rolb ja test jp into out add test daa mov lahf incb jmp insb aaa es (bad) (bad) mul aam xor test aam mov nop jle test scas jmp push xor insl push icebp clc enter add xchg ds push adc imul mov stc push loope xchg xchg jb sbb and pop or dec cmp jne stc mov push push pusha mov sbb imul push out mov ret lret adc stos xor call out popa inc push fdivrl mov dec out mov sarb mov outsl aad cld jmp loope sbb xchg fcomps cltd add sbb nop cltd pop aaa xchg xor lock aas in fwait or fs std clc dec inc add (bad) pop rolb or insb cwtl dec cld push lret sbb mov pop mov xor cwtl enter pushf in or mov push xchg xchg cld pop sub clc icebp aad aas aam xor ss mov cs repz push jno insl lahf addl mov mov lret mov (bad) fist push fistpll fcoml mov gs push xor pop xchg gs xlat dec push dec adc sbbb in xchg sub adc jo mov pop sti ja fldenv sub pop or fimul fwait xchg pop xor sbbb cli adc pop ret xchg test cmove clc xlat ja xchg cmc out or loopne arpl aad or repz js (bad) jbe int3 jp push out cmc stc iret mov pop inc ss in sbb inc inc movsl mov inc mov xor pushf (bad) jbe enter shll cmc lock popf arpl jbe and dec adc insb aaa (bad) mov mov (bad) sbb xchg jne sahf jle cli repnz jns,pt repnz lock sbb or push lock iret adc (bad) lcall inc add ret lret and xchg pop inc xchg or stos sbb out lock insb scas outsl (bad) cmp sub push jmp jge imul or fstpt icebp ret inc loope (bad) iret inc sbb add adc repz insl fldl2t das inc push repz xorb adc inc jns popf jp mov aaa insl push jns push sbb adc sbb mov sbbl int jge push or and cwtl pop int inc sub xchg push push adc hlt cltd mov dec movsb insl aas or (bad) mov xorb sbb push jae cltd sahf sub pop loope sahf pop rcll test inc add test cmpsl loope pop test add lods mov subl cmpsl outsb mov ret popa sub inc jae jne ja cld push mov jb cmpl pop fwait (bad) out sbb mov icebp popf push bound call (bad) in and jg mov lret push test mov mov test cmp xchg cmp lret andb pop dec jbe or jne mov xchg jnp jns adc mov jl pop pop lods lret out adcl xchg sarb push mov fwait jp ds dec sub pushf dec rclb push inc jmp fwait add jno inc es and mov hlt mov or lret fnsave mov (bad) idiv jbe hlt mov xor aam repz ret aam push mov jmp push and fistl adc imul xchg mov movl pusha inc pop cmc std scas outsb xchg or in lcall push cmp xorl lret sub adc adc sub and sbb push xor pop or subl jecxz lea in fildl dec loopne mov cmp arpl pop rcrb mov pop push std pop cmp pusha lods in rol movsb movsl ss sbbb int3 add sub outsl or mov jp mov into imul ljmp rep int3 fs mov cwtl and lcall in xor push jae jmp and rcrl scas mov push test arpl mov xchg sub loopne enter loop aaa jne int sub punpckhbw ficoml repnz shll inc cli fist test ret repnz pop pop lcall cltd dec inc jecxz add pop leave jno addr16 jle,pn ss sub popa in pop add in push mov jbe inc adcl mov add add rcrb lock mov mov fidivl push rcr fwait dec mov scas and icebp push jp jg shlb and js add shlb sub es aas movsb pop push and into imul (bad) and and ret gs lods add inc loop xchg xchg xor cmpsb shr loop ret (bad) pop cmp out xchg in inc ja or imul mov dec repnz in mov adc adc fimul ljmp fnop inc stos mov sbb and mov cmp aam es lret idiv xchg dec imul inc add and mov popa adc and xchg mov pushf in cmp cmc insb movsb cmpsb mov and cmc cmp loope dec (bad) cmp lds lock fcompl pop out or fmul cmp jbe ja mov add stos loopne out imull pusha push sbb sub pop iret push push sbb mov or adc mov pop loope xor xlat and sbb push (bad) xchg xor scas mov mov push mov into lahf push pop inc (bad) lret pop mov push inc push jl ret xor jb notb imul mov lds or adc movsb jne dec and in icebp orl pusha mulb inc and push jp ret xor dec xchg pop sbb push pop mov cmc adc inc push adc jl inc scas gs lock sahf and sub stos push pop cmpsl mov mov inc js inc mov cmp jo jmp push (bad) sub mov js pusha (bad) pop aam nop (bad) (bad) push add repnz data16 das inc popa je jmp xor push cwtl insl inc sbb or push add shll lret out (bad) fisttpll sub jne sarl jp out and mov ds cmpl push cmpsb and fwait pop ss jl gs fdivrl lret cld lods and xchg cltd imul (bad) mov xchg or lock jns data16 jae cs pop test pop ret clc imul mov in lahf xor xchg push add imull jle xchg adc jmp inc cmpsl outsb xor cmpsl (bad) movsb pushf cwtl rorl loop out jp inc and jnp jge pop add mov popf xchg mov loope adc jnp add shrl mov mov pop xchg or cmpl cmpsl outsb shlb lret or sub inc shll icebp jg jmp dec cmp push inc jl fbld mov mov test loop ja je sbb pop push gs jecxz fs test mov scas fcoml imul out in insl es pop outsb mov test stos adc xchg incl inc sub xchg imul movsl and mov out ficomp jne pop adc pushf inc fiadd mov fisubl sahf outsb aam add cli add gs xor pop mov inc inc xlat xor mov das cmp mov iret inc dec push decb pop jae lods lea cmp and loopne cwtl and lods jb dec test sub (bad) stc enter push xor push mov mov mov (bad) push sbb (bad) out sbb cli sub inc fs gs (bad) mov and jge in jg cmc movsl mov sbb jl jne int cmp insl dec cs jp cwtl mov insl pop sbb movsb xchg outsb sbb arpl xchg je sub dec cld and xchg sub jp pushf push sbb sarb jecxz out stc jge int3 cmp movsl push scas in xchg cmc out sbb cmp pop clc jne,pt out pop rorb outsb pop js popa mov sbb insl inc out push or jle jns fwait cli xchg sub sti pop in notl addb adc push test loop or out jb lea ret inc (bad) dec sub ljmp pushf rcrb jle cmp pop addr16 loopne mov in sbb ljmp lahf and lds test xchg lds jl inc jno dec xor mov mov std mov aaa pop iret lods push sub pop adc dec les or pop jbe cmp fsubl mov lea lock cltd pop cli push stos outsl (bad) jmp mov xchg out les in pop push dec pushf adc into fiaddl pop das (bad) mov push daa stos xor inc je push gs pop pop sti cmpsb les scas daa mov mov popf push push into cmc pop cmp cmpsb pop and jmp ret into aad cld mov es popf fsubs mov push xchg jbe gs pop pop and pop mov out pop ret cmp dec and clc imul sbb mov fbstp dec shlb sub inc (bad) push rol sahf pop xor mov xchg insl or in or add pop jl (bad) stos mov jb lret push adc ja sub popa mov cltd xchg xor xchg cli aad cltd repnz scas pop iret leave ret jp push ljmp add jl in dec jno add inc and scas mov repnz or dec scas jns mov iret daa fimull pop mov mov xor int3 cmp outsb xlat adcb or and je adc xchg (bad) xchg jl cmp jb mov scas lret ss pop cltd xchg push int loop add fmuls fwait cmp in vpmulhuw aas pop ret pop test lods mov out stos adc fmull sbb (bad) adc rcrb mov xchg sbb adc cmpsb sbb call sahf or les test aad dec pop fist push in int out fbld (bad) adc dec aam test aad ja mov das and adc test ss test cli gs hlt repnz mov popa push arpl jno addr16 fbld incl and nop dec sub mov mov xorb add in dec mov enter int (bad) fisubl notl mov pop push ret jae scas and mov jns push cmp (bad) jmp movsl mov into loop xchg in test jns jno inc dec push inc ficoml push sbb subl xor pushf lock push xchg jmp or nop popf mov inc rcll cmp xchg sbb cltd ja jle (bad) (bad) fisttpll lods out cmp cli stc lcall lods pop add dec xor jns mov add lds mov mov repnz mov aad jae mov xchg leave xor mov pop adc xor dec mov mov xor or dec add pop add inc sbb jns icebp adc test push movb test fisubr fwait gs divb add jl lods mov xchg mov popa mov aas push aad iret mov stos push mov popf das inc popa or call push jnp jl mov fnstcw loopne test clc or mov sbb insb sbbb rcr mov mov (bad) fimul insb pop xchg movsl aam pop sub popa insl mov push repz aaa inc xchg out cmp and out pusha les inc sahf push pop mov xor sti dec scas rorl mov sbb mov ror mov popf push jbe sbb test arpl int pop repz mov xchg pushf into xor mov sub arpl enter mov fnsave stc xchg popf rcl iret xchg mov icebp leave dec clc or inc and in outsl daa aad sub gs adc push dec adcb repz jbe test mov jecxz out push loop sub mov loope fwait stos xchg std jae xchg cmp outsb and sub addr16 pop xchg popf ja pop jo sti imul (bad) cmpsb jge push aam and jb mov aas popa fstps lods lea and dec movntq out cwtl (bad) adc roll out (bad) rolb jg clc push fidiv clc inc mov jbe (bad) cmp mov or (bad) lcall push dec mov sub pop loopne cli pop pop jg pop and scas insb and adc jo xchg popf add or pusha in fxch push xchg (bad) idiv jp idivb xor in aad dec fstpl inc stos std aaa aas cli stos int test lea pop inc fsub fs pop fsubr int3 std push std sbbl mov push sbb loopne xchg cld insl pushf in aas daa cmp xchg pop jecxz mov rorl hlt adc xor dec repnz push es inc and (bad) rcr sahf lea mov sub and xchg fdivl test gs mov mov cs or inc inc mov cmp std out ds aad imul ret push notl jl push addl xchg nop and dec lret cmp jb dec gs mov adc into pop adc leave push push cmpb push sbb jge jo mov popf and in call js leave jbe clc cmp movsb xchg and fsubrl fisttpll and mov outsl in cmp mov (bad) pop data16 inc dec lods ja aas enter cmp mov je push jnp push sti mov cmp in (bad) push fdivl loope push mov lret movsl xchg sub dec inc push test and stos add push (bad) xor xor push ss xor rclb lock mov lock popf ret out mov lahf fbld lcall (bad) jge mov outsb das mov jae test sub mov (bad) popa mov sub ss mov xchg pop cmpsl xlat push adc mov loop aaa clc mov pop or ljmp insl add push mov imul bound into inc test dec inc popa ss mov adc add inc les mov (bad) stos pop adc xchg pop adcl sub sbb (bad) (bad) jae int3 xor lret and pop dec push mov fsubrs mov cmp mov xchg push les push push sahf inc arpl inc push mov pop xchg push jnp mov nop push sub sbb and movsl (bad) mov inc xchg push inc mov push lea aas dec fwait pop movsb rorb mov add and lret push xlat push insb jmp fldt xchg in push pop inc aaa (bad) xchg imul add xchg mov push pop pop lods push jg xchg fsubs inc cwtl into mov insb sub dec aam idiv or sbb mov (bad) sti xchg mov scas arpl and les pop fwait ds fs pop push inc mov jecxz shr dec push jecxz xchg fmulp fisub repnz xor pop cmc popf cli add inc bound jmp and and dec sbb mov pop in mov cmpsb pop loope movsb cltd cmc lock xor add cld jne and movsb mov inc xor cld fist insb js or and and sub sbb stc xchg ljmp inc das aaa iret xchg dec mov jecxz (bad) mov rep mov out (bad) xor stos inc fcmovnbe jl lods pop pop das sbb ret jbe jbe jno shrb iret sub mov aas test fistl or jle sti pop adc orl and aas nop ljmp (bad) lock mov call add xor cmp call adc lods aam aas bound xchg push test add cli sbb xchg sbb jns push jb cmp mov jp std jnp mov rol aas mov inc adc add jns (bad) fstps stos push (bad) mov jecxz (bad) jbe data16 pushw jge dec mov xor add insl repz notl fiadd sub jg les adc aad xchg popa jg rolb mov push nop stos cld test les mov mov pop push stc sbb (bad) in mov mov pop mov outsl adc call jae sahf mov rcll mov and sub mov cmp pop mov (bad) jne xor pop xchg shlb pop mov les pop movsb jno mov (bad) pop jl cmpsb (bad) xlat fisubl pusha leave adc cmc xchg repz xor mov jle outsl inc sbb or lret lock xor adc daa pop imul push ror adc cmp out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz loope pushf cs je add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait insl imul imul outsl pop mov sbb xchg insl sub (bad) int xchg or add mov add jle test inc dec xor cmp jno faddl xorb push lret cmp dec rcrl sub push stos inc add icebp push cs jg insl or lea daa les push loop in cli imull ret lods mov pop xchg shr loope push xchg (bad) pop fnsave dec rcrl fwait cmpsl or jns jmp (bad) sbb inc (bad) jae data16 test jecxz adc jbe sbbl loopne jg imul xchg loope jne xor (bad) xor insl adcb lahf mov sbb aam popa push mov movsb stos adc fidivrl into and scas enter mov fsubr (bad) gs fldt inc popa or shll add mov mov int3 sbb mov imul shrb add ds sub (bad) jb adc (bad) icebp mov mov and sbb sahf jg fstpt sti cwtl repz mov dec sbb std lret mov fcmovne cmp sbb cmp in test movsb ret cmpsl roll std cmp loope leave and cmp loopne pop (bad) icebp daa inc shr dec lcall imul (bad) (bad) ret adc xor sbb pop pop enter push cli mov add or jl jae mov idivl jns ja xor mov add lcall and rcr arpl and ss mov fimull or incb xchg int in sub inc iret call (bad) push fidivr sbb ret cld ljmp pop imul and xor sbb (bad) cmp (bad) xlat jp scas mov inc and sbb pusha lahf xchg xor mov imul jp and (bad) pop and (bad) out les int3 mov out ret mov addr16 xor inc inc or dec pop inc and negb testl leave or push mov movsb inc push cli xchg sub stos cmp fsubrs xorl mov pop and sub pop pop and (bad) jnp mov ret cmp push and outsl jo pop and aaa jnp and adc xor inc jmp lret xor xchg pop jnp lods jb fs lret stos stos rcrl stc stos rcll sub mov fst pusha mov stos lock loopne xchg loope push sub scas hlt cld fwait inc adcl dec loopne push cmc push jnp loop popf xchg mov cli iret stc cmp fstsw arpl mov jo mov pushf mov xor and jecxz fistpl sub fs jge (bad) mov cmp popa push adc mov shlb aaa daa inc or pop ljmp enter movsb add sbb xchg pop cmp inc or outsb push pushl adc mov add mov sti fild (bad) jp mov adc push in je loop mov xchg mulb scas dec addr16 xchg mov sbb cltd xchg push jle sbb in fwait push das pop adc jp jns sti icebp in gs pop ret movsl (bad) jb push aad popf lret addr16 (bad) lcall out dec mov fcmovu sbbl xchg jmp mov lret mov scas jo dec icebp cmp mov inc mov jge pop pop adc cwtl inc xor adc cmp es arpl fnstcw int3 xchg repz or or sti scas inc inc lods stos repnz loope loopne ds nop mov sub nop idivb sub push lcall jno jbe mov dec loopne lcall dec (bad) in nop (bad) jae ret (bad) enter out std and mov adc xchg daa je or dec jno inc sbbl mov push jp lcall jb add xor xlat cltd (bad) sub jno push enter push shrb stos xor mov lods add (bad) clc mov sub cmp mov in cmp xchg fwait lret aaa pusha cld int3 mov dec pop xchg ret mov aad (bad) outsb mov sbb xchg sbb adc int mov xor loop jle push aad or mov sahf test jl cmp or sub dec cmp adc dec mov cmp shrl push cwtl sahf (bad) out xor inc pop pop fldt stos bound (bad) xor cmp test cmpl jno mov sub xor xor cltd enter daa mov inc cmpsl outsb (bad) push inc das cmpsl mov sbb mov mov stos xlat pop dec gs mov arpl xchg loop add mov sbb stos jo push pop dec lock sbb repz ret das stos gs lock cmp mov sub xor je add jbe push repnz xlat loopne cmp pop push or insl repnz jmp and dec xchg ret repnz inc mov add sub test adc aam leave pushf xchg aad in mov ret addr16 hlt ja rolb mov out in cmp sti mov ret es dec inc fisub mov insl mov mulb ljmp (bad) lock push repz leave inc jmp push insl pop stos in daa xchg repnz das cmp ret cmp ret int3 fmull daa xor mov xchg and je cli scas or jmp mov int loope movsb hlt push stos and sahf test lret mov inc sub enter (bad) xor bound add xchg fcoms push adc divl and push cmc jecxz test cmp mov fmuls adc sub (bad) das loope stos divb scas rcl mov (bad) or insb pop movsb cli pop rclb loop lret dec inc incl sti add ss test mov add lods mov repz or push insb aaa mov mov cmp test (bad) mulps or sti push inc fdivp push cwtl jl dec lods fiadd mov mov sbb cwtl xchg mov cmp cltd mov push out xor and (bad) xlat adc sub je cs jecxz (bad) xchg or movsl dec rcrb mov leave xchg jne jmp adc mov inc push cs loopne in xchg pop sti push enter lret push or ljmp xchg xlat cmp loopne jbe sub mov cmp mov add es pushf in or sarb ret cwtl sub inc sbb xor fstpt repnz pop fs sti fidivl movsl scas adcl pusha or push test js jmp imul sub jb adc jbe pop pop mov xchg or out push jbe pop adcl shll icebp (bad) push aam imul test or mov mov dec (bad) sarb or fwait push push aam andb xchg stc popa sub xor stc leave scas ret cli call or mov std mov jle xchg (bad) and or daa (bad) dec push cmp test aad (bad) pop mov dec sbb fwait (bad) int3 std push jecxz adc cmpsb lea add push sbb sbb cld xor in push popf movsb push enter fbstp int3 cmp aaa adc hlt inc clc or mov cmp fdivs imul aad into xor and ret adc cwtl aaa xchg lds addl fnsave ja cmpsl add out adc addl jl xchg cmp xor jno push lock lret das add jl add xchg jbe adc fldenv dec ret flds sub clc mov pop gs jecxz pusha bound cmpsb pop push sbb dec cmp mov movsl dec xchg add call fadd xchg shlb (bad) (bad) jl shrb cs rolb repnz adc ret or mov in jnp cwtl (bad) popf in adc daa mov lods lds xor pop das mov mov imul idivl xor dec dec jne adc movsl push mov mov xor mov roll mov pop add or in imul mov lds dec xor mov jmp fcoms and inc (bad) test sbb sub into popa lret cli scas dec int lret in push lods mov imul cmp clc adc lock mov repz inc inc add lock sbb cmpsb cmp and cmp in icebp in (bad) and rcr call push (bad) repz adc aas lds in pushf pop adc ljmp outsl mov lods or rcrb outsb xchg mov or mov pop int3 push nop scas push aas jno (bad) sub push stos mov outsl xor sub outsl sti jg xor cmp xor push jnp sbb out (bad) dec frstor std xor (bad) sub mov push adc inc cmp dec loopne adc or and push xor cmp cmp dec xchg add nop lods and cmp mov (bad) fs inc cld pop adc cmp mov (bad) mov push xor dec xchg repnz mov mov (bad) and enter imull mov sub mov mov dec mov cmp je sbb aaa js adc xchg push push push and cmpsl sub mov fs movsl aam jmp jne notl je addr16 pop cmc cwtl mov or insb inc fistpll pop lds shll das int3 (bad) inc leave lods sbb leave pusha shrl xor iret in mov test fadds mov xor add popf mov lea int cmp dec and stos dec add loopne sarl jg lahf loopne out aam gs out pop (bad) xlat sub xor out jne inc repnz xor insb call and mov jae jecxz sbb imul bound mov imull mov in insb push movsb gs push cmpsl arpl dec js add and lock into adc stc xchg fdivp (bad) enter faddl and aaa imul and cmp jp pop push lea sarl sarb int jl aad lods pop cld loope cmpsl gs xchg lret jle sti test inc lods repz cmp dec movsl jmp push imul xchg loopne sti in jl (bad) imul cmp (bad) push pop pop fldl shlb sub mov insb mov repz dec insl imul sub add in cmp imul inc lods xchg pushf push cmp cwtl test sub imulb je cmp jge or sbb and jae inc mov mov test clc enter hlt mov inc xor fnstenv lcall adc pop dec push ja xlat mov mov sub sbb addr16 int3 mov xchg cmp (bad) pop jp jns jmp lock (bad) adc (bad) pop data16 xchg in mov or push ret test leave mov xlat fist lret into imul fcmovnu mov jae adc ret je mov loope cltd xchg fisub dec inc xlat in sbb fistpl or int adc dec sbb add push push fistl adc ss or nop clc mov incl mov ja hlt xor push inc das or add jmp sub xchg cmc inc movsb arpl (bad) jmp enter push cmp inc popa cld out out ljmp jp addr16 mov sbb pop testb cmp jno mov call inc leave xor pop mov and aam pop mov xchg js adc inc cmc cmp xor into fcomps lock ss sub cmpsb push addr16 dec jns sbb lods (bad) push das push decl enter sub push pop mov (bad) xchg dec jle rcr xchg xchg inc mov sbb mov push adc ret jne sub rcrb mov sbb enter es int insb scas (bad) inc add sub mov ret or push sbb mov pop fcomps cmp push shrb sub mov pop hlt jb,pt (bad) nop mov jns cwtl aad cmp inc out sbb xchg adc test aam and adc psllq loopne idivb cltd ret mov pop mov pusha jge jmp or fisubl mov mov lcall sbb sti jp pop pop and dec (bad) mov jg ficoml xchg push out or mov (bad) ds mov xchg jne add xchg popa or pop jl jne (bad) ss pop pop cmp lock dec mov pop shl ljmp lock (bad) enter js pop xor push and add mov pop and mov mov jo in dec fwait dec es adc pop sbb shrl cmp fstl stc mov mov mov leave stos lods cli arpl push dec lret add or cwtl (bad) loopne dec push add xor aaa movsl adc jo fist jl cltd emms mov inc lret out and aad cli scas mov push push inc dec hlt lds lods or push fcompl sbb adc int pop sub cmp pop out sub xchg shlb push test inc daa add and adc mov inc mov mov ljmp js jno jb enter js int3 mov inc ja bound lods lea arpl xlat inc jge jge or add xchg adc aam inc dec mov cwtl adc inc movsb push into js pop xor mov scas (bad) fs pop xchg rcr mov daa lahf or mov adc pusha mov xchg push push sbb aad and xchg add pop test cmp lods sbb push ja pusha mov jnp cltd xor xchg mov shrb enter (bad) fmulp xchg mov std push loop in bound inc adc gs int cmc and fwait ret lret sub sub xchg mov push sub xor fist and test cli out inc jmp push fnstsw aaa fisubrl mov adcl in (bad) xor or repz inc xchg clc mov jb sahf inc mov sbb addr16 mov repnz xchg outsb int xchg in jb xchg outsb ds xchg lock dec lahf add and xchg xor popf popa aas pop leave lods fsubrp cld jge mov inc sbb push arpl add add adc imul outsb xchg movsb aam stc shll gs sub xor hlt push cmp loope mov and addb movsb pop or hlt mov in xchg ds mov icebp xor mov jnp lcall pusha jo jecxz mov ljmp dec mov cmp pop fs andb (bad) dec sub in repz nop psubsw fsubs xor sub dec dec xor cmp ja mov clc out adc and push rol sbb daa add pop pop scas jl out mov js in xchg sar lret sub test jg mov adcb nop fldl xlat lods fsub cmp add arpl xchg fbld xor inc out cs int3 lret push sbb out cmp push fisttpll lods push in aad test jge (bad) xchg sti mov ds pop mov hlt inc dec add mov jnp gs sbb fnstsw jecxz lea cmp mov xchg fnstcw cmp pushf adc adc je add jmp lahf xchg es ljmp jnp mov mov setae fildll cld (bad) adc push lock pop ret lods dec adc mov push mov out rcrb jbe push sbb sahf addr16 jbe jge sbb push fnstenv or movsb test dec dec cmp cmp insb mov mov add add fstpl jmp inc jbe dec ret inc sbb mov dec mov sbb mov (bad) rcrb add repz arpl xchg sbb ficomp mov popa jecxz push rolb mov jmp inc adc (bad) mov jnp xor out cld data16 popf fnsave movsb xor sbb mov notl aas push inc int3 iret arpl fadds repz sbb pop mov sbb imul lret cmp jb xor and popa lea iret test call arpl iret enter push add dec popa add dec loope outsb ja jp mov fnsave pop pushl das fadd sub loope pop mov ja cmpsb mov loopw sbb test xor rcrl int3 push (bad) mull lods outsl ja ret and sub jge adc fidivl lret add xchg ror sub outsb stos adc xchg lahf pop sub add inc cli fistl mov sbb add ror fidivr cmp add arpl mov aas push loop xchg dec (bad) xor rcr mov add int dec lret xor xor dec lds jge insb mov cmp aad adc pop nop lret cmpsb lea aam ret lret mov and cs pop movsl mov add jne jg jae inc pop adc mov repz mov push pop jmp or sbb dec lock out pop test xlat mov xchg cmp inc daa push (bad) mov xor rcrb inc pop pop loop,pt incb pop stos add pushf aas call push inc add shlb push movsb aad xor xor push test cmpsb sbb pop sti jae mov (bad) and sbbb imul (bad) (bad) dec out mov in jno sbb or mov addr16 ret sti repz ror jbe sub in add push int dec sbb daa or stc cmpsb popf xor mov inc cmp sahf mov push inc push fisttpll and push pushf xchg aas pop jb sub outsl es mov mov mov jbe,pt outsl ret cmc (bad) cltd sti cmp mov cmpsb and dec ret xor or cmovns sub lds nop dec int3 add cmp pushf imul jle xchg mov ljmp fsubrl enter clc test fucomip cmpsl fimul add fstp xor movsb jmp orb lock jle,pn mov cmp and outsl mov cld icebp les shrl fcoml cmp mov jne jg clc and pop mov dec fstps jg mulb test add jmp lcall out add std dec or ja cs cwtl shlb and stos pushf mov popf push (bad) add mov les and inc lea cmp ret mov add pop fwait sub mov fmul mov mov sub mov fsubrl fsts cld mov mov sub pop movsl push lcall movsb imul pop add lcall mov lcall gs cmp test lock xchg pop or pop xor or dec push sbb rcrb repz add xor push xchg adc mov aas cwtl fs inc mov jno add daa arpl popa loop jg xchg fnsave xchg push or std dec push iret cmp mov fcomip test scas dec mov and std arpl enter dec movsl std pop inc test lock pusha inc idivl ficomp jge (bad) fmull int inc push dec pop imul cs pop mov inc aad cld addl stos mov cmpsb jecxz adc add sub and lahf mov adc fstl pop mov sub int3 pop aas pop lods adc call cwtl je jne imul jns mov and test popa xlat mov mov lds rcl cmp movsb inc mov push in in in mov mov rcrb bound aad pop dec or inc xchg or cmc or dec xchg inc mov xor imul idivl pop movsl addr16 bound popa gs fstpl test js and cld pop sub popa or fdivp inc inc adc (bad) cmp icebp or or mov sahf cmp xchg int3 xchg repz jl aaa sbb into push sahf pusha cmp rcl jle or loopne (bad) jne imul dec popf or ja xor ja (bad) mov jge rclb dec popf mov roll (bad) sbb jecxz fdivrl dec jl xor in fsubrs pop cmpsb divl xchg sarl test adc test sti sarb xchg push fstl loope int3 mov mov or pusha pop adc outsl ds mov hlt (bad) mov add mov leave (bad) negb or jl or jle inc pop pop outsl xchg xchg mov add test sbb inc xchg push cmpsl jb scas ss add rcrb and popaw repz repz movsb pop adc xchg pop ja ds fildll mov or xor arpl pop or mov loope inc cmp and xchg cli (bad) pop inc sub adc jmp aad inc loope cmp (bad) (bad) mov mov iret fwait (bad) test dec push push mov jnp test sub shufps cs fcmove push fsubr movsl adc loope jp idivb mov lea dec aas sbb mov xor add mov ds insl decl xchg fcmovne mov gs push fs xchg xchg stc lea ljmp jnp jnp pop mov pop pop push mov add aam jne faddl in adc addr16 mov sub pop cmc out sbb sbb ja cmp sbb push xlat mov in fs or or imul lahf (bad) (bad) les arpl sub add daa dec test cmp mov mov pop (bad) std or into scas mov sarl mov mov dec push imul insb dec sub and fbstp add xor push pusha ljmp rcrl lods mov or addb (bad) cwtl jmp xor (bad) fucomi xor mov sub xor dec in pop cmp lods push popa mov adc (bad) repz inc icebp and push xchg rcrl rcll sahf fisttpll cmp push outsl rol push or imul fwait outsl mov push lahf xchg (bad) cmp cwtl jp mov imul mov sbb es push push lods das icebp inc sar arpl sub fwait inc sub divl pop sahf jno lcall jg cmpl sbb arpl sbb mov std dec nop and jmp or addr16 pop pop jg xchg add cmp mov out xor xlat ficomp outsl xlat mov in icebp nopl mov (bad) ss popf call lods lods or aam adc dec movsl pop cwtl add sub lock shl and push ja jne aam mov adc mov sbbl dec ss and lcall stc movb xchg sub mov mov mov lods xchg inc in das mov in inc pushf adc inc call test cld aaa xor stos mov sub push xchg sbb aas and das push nop cmp (bad) (bad) movsb or mov dec add sar adc (bad) or xor and mov repnz jb mov ja (bad) xor mov jno scas outsl in bound jg idivb (bad) pop dec pop shlb test loopne jl pop xor inc xor fadds sbb out sub sub dec sbb outsl test imull cmp mov sbb jb mov jae loop jl mov push sbb add in daa pop pop in jg outsb dec imul les pop test sbb int into mull push xor scas (bad) jmp (bad) lret loop inc dec cwtl dec adc pop lahf adc out push push lcall or jnp outsb fildll cld mov or push (bad) push sahf pop stos xchg and out cmp xor xor cmp stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out or lahf call testl inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push bound mov sbb fldt sbb mov xchg (bad) pop insb fdivp push mov iret jle or add mov cwtl mov out mov pop or lock sub test lds loopne hlt fst push ss fcoml int3 pop and adc outsl test sbb push and out xor or cli jp xor dec cmpsl bswap out push aas cld in lods fwait scas out dec and pop pushf aad rcrb rorb (bad) mov push cmc sub (bad) mov icebp notb xchg xor std sbb (bad) int3 das pop push mov clc mov std jp lret inc dec addr16 xchg fnstcw or arpl sahf aad jbe dec push repz clc push in sbb mov cs mov outsl (bad) sti sub test and pop mov mov xlat jp jbe cld adcl in dec loope int sbb xchg aam xchg sbb inc pusha xchg hlt sub addr16 lcall pop adc ret push push std sub push lahf mov enter mov das xchg imul or das adc mov ret add jns data16 fwait cwtl mov ret leave fwait push mov fmuls (bad) xor dec popf adc xchg arpl fwait (bad) adc cli dec imul sub fdivr xchg lds mov fmuls mov ljmp pop inc jno ljmp pop repz push mov add cmpsl leave stos scas xchg call cli in cld mov mov test mov in mov lock mov cmc sbb push hlt or cld cltd pusha xor add sti cld mov pop sub test and cmp orl insb push mov sarb mov test jp xchg mov and sahf sbb xchg xor cmp push mov pusha jmp leave outsb inc aad pop and or cli icebp rcrl xchg lock pop mov lret sbb insb jne insl (bad) aaa dec mov repz push int3 mov add nop mov fs xchg inc mov pop mov mov sub loope enter shrl (bad) int daa jmp out repz push (bad) outsb jne popa dec sarb inc sbb out dec mov or pop mov aas pop stc (bad) sub lahf data16 xchg (bad) jecxz enter jg and faddl mov fsubl jno rolb popf mulb mov je push es dec or repnz pmuludq and lea aas loopne (bad) popa mov stos iret mov daa arpl ret frstor push cmp push leave jns out sbb cmp mov lret or and sub dec or and adc movsl mov dec sahf mov mov jno mov mov mov or add inc mov lahf cmp lret xchg cmpsb ja add jmp lcall jp (bad) je mov ds hlt mov jbe (bad) ljmp (bad) fstpl mov inc fimul dec (bad) js mov inc mov push loop (bad) pop dec cmp loop xchg pop call mov scas sbb push or repnz popa push cmp xchg (bad) (bad) push fild pop into lret ror sub (bad) movsl xchg or mov cmp pop fdivs inc sbb pop int xchg ror out mov cwtl add xor and push out imul adc in push xlat loope and sub insb xlat xchg mov pop pop xchg fwait in xchg xchg je mov cmp sti pop or cwtl iret popf xchg aad sub dec rcll dec and out fisubl add adc inc pop xchg and cmp adc xchg mov ret xchg mov and fnsave enter xor mov daa jg inc ds leave data16 mov cmc addb rdpmc or jmp sbb lods cli jae sub mov xchg add inc jl scas repz pop outsb jb jecxz mov lcall jecxz loope cmpsl les outsl mov test bound fnstsw ret cmpsl jo out sub mov push push insb enter flds jge je add jl in mov xchg call sbb and push adc mov ret mov sbb aam mov sub arpl test push fcmovnb pop xor shr inc jp jnp das arpl cmp sbb (bad) xchg dec stos jnp and stos jbe pop inc or push adc popa cmpsb icebp sti fadd pop mov pop rol flds ja or pop mov fwait cmpl xchg adc pop pop iret adc jg movb inc in inc (bad) and mov mov adc sub xor xchg cmp imul mov hlt and xchg lock ds into cwtl add dec rol mov sub jne rcrl add dec or xchg mov jmp xorb out dec int3 (bad) ss (bad) sub inc adc dec push (bad) mov xchg ds rcrl icebp imul or clc mov sahf scas push xor adc adc xchg pop mov test leave in pop repnz clc adc shrl mov pop push dec jmp mov rorb mov xor adc psraw jecxz adc xor xor ret mov xor scas movsl ljmp cld inc mov (bad) xor aas popf aas mov das and div mov cmp lods push jo cmp dec mov xchg mov jp jne sbb outsb jmp loope leave stos mov cs aas sub insb outsb std jns dec repnz enter in add mov sbb rcll xchg leave mov sub mov test cmp sbb repz mov xchg jp push mov pushf je and and loopne cmp inc inc pop sti pop jns sub out in mov leave xchg pop ret les jb add jg pop popf inc inc sbb and mov cmpsb push popa fs push pushf add std data16 shrb enter aaa mov cmp fsubs (bad) mov addr16 fsts mov mov movsl xor loop and jmp gs stos cmpb (bad) cmc pop stc mov vcvtdq2ps jne int ds idiv popf pop pop dec mov sbb add in xchg xor int3 loop pop sbb (bad) mov (bad) or nop mov mov jno mov xor add pop jge shrb xchg push mov test pushf sub jno insl sbb adc mov sbb sub mov sub inc sub jge pop adc insb leave fbstp ret mov sahf sti xchg int jae lods shrl stc movsl cmpsb dec add mov cwtl sub xchg or cmpl out les mov mov roll jns cli mov mov jo mov xor into lret leave cmpl (bad) mov push movsb or shrl push add sbb sub add cmp cli and test xchg sahf dec pop xor stc cmp adc push mov xor test fldcw rorb adc add push jp jmp mov icebp incb js into fdivrl hlt or dec jb stos je add lahf loope (bad) test mov xchg cmp xchg int3 jae dec cltd inc imul jne mov xor mov adc adc iret inc cmp jl cmp nop cmp sbb arpl mov scas (bad) cmpsb lret sbb xor cmp jmp xor sbb mov inc or ret lock js cwtl mov fldenv inc movsb sub pop xchg mov mov mov or pop xor cmp jge stos (bad) loop ficompl in jo pop jb mov (bad) js pop xor mov les aaa jae je mov pop pop cmp pop sub lcall or (bad) pop pop call out push daa ds mov dec int mov nop (bad) sub mov fdivs mov ja into scas das (bad) add lods aaa mov gs popa stos pop data16 pop rcrb xchg in shl dec adc ret jne aad in cmp popf mov push pop mov dec inc scas lock lods (bad) imul scas ss inc or xor mov mov jp aad mov paddsw int imul sub dec sub js aaa insl adc fs xor and dec fs jne pop xchg xor mov or hlt insl cmp xchg push push (bad) sbb mov add movsb pop data16 inc dec (bad) scas and cwtl sbb orl xor sbb xchg pop jl mov dec cmp cmc and neg adc ret xlat pop test pop in lea pop jbe dec call jp jnp scas sbb loop dec outsb call out fs mov push outsl fisub scas sbb out mov xchg sahf (bad) test add mov outsb cld dec insb (bad) pop mov sub ss jb and mov fldl2e xor mov mov cltd xor lret pop fcmove (bad) push push outsb adc add pop movsl fwait mov and jmp jl xchg scas jnp fnsave imul inc les mov inc add (bad) fucomi mov sbb dec inc imul mov push pop mov (bad) jne setbe mov fistl push inc xor test pop aaa jne popa pop adc fcomp xchg dec sub pop xor cmp insl mov pop and dec push cltd and pop jg inc gs xchg push jmp add in xor stc addl adc fild fildl ljmp or xchg pop movsl push mov mov sarb das es add out idiv insl push pop cmp sbb inc or pop loope out mov add shll (bad) xchg fstpt pusha rcll faddp repz sub (bad) fstps test add rorb pop enter push sbb dec pop add scas mov jge rcrl scas mov push enter xchg jb and mov movsb repz in out fnop adc push jge dec testl dec or fs xor bound stos adcb adc (bad) mov paddusb ffreep pop mov push push pop (bad) xchg out adc dec push mov mov push aad cmp popa out add scas fnstsw pop add aas dec mov push or pop cmp add push push mov mov test xor notl test (bad) sti cmp dec hlt or cmp testl adc inc push data16 pop mov dec cli adc mov cli cmp mov pop dec lods sbb mov jle push movsl lret dec test es cmp insl aam rclb jecxz xchg adc or ret pop insb sbb adcl std dec popa or inc mov adcl lahf pop xlat mov dec cmp popf xchg repz popa and inc push jb xor aaa pop pushf fstpt jmp add mov inc jo push cld push push add lea ror sbb mov mov mov ja push arpl sub adc mov xchg daa push fisttpll hlt iret (bad) xor (bad) xor or test or push inc icebp enter sbb xor stc xchg out pop add in mov ret push jge mov testl xlat pop inc push cmp js iret push mov push lcall sub into jg jne push scas sbb addr16 dec add aam aam test adc fs cmpb ljmp test mov inc xchg sub push sbb mov mov pop push jbe sub and out sub lcall repnz push pop pop xacquire imul ret push rorl pop cmp cmp mov or pusha fcmovne (bad) or jle or (bad) push sti sbbl stc adc popa pop cltd dec lret adc insl sub pop sub adc pop jnp aam scas or mov push cmp adc jl jae push cld fcoml (bad) ss jns or daa mov aam pop sti push and cld or adc imul jbe mov mov jmp ds lret mov jbe jnp add mov dec xchg jo xchg cmp ds outsl xchg lock insl xlat int3 adc sub inc aad loopne in es pop cmp cmp and cmc mov repnz push mov iret orl in aad jbe std (bad) popf rolb pop arpl cmpsb cmp in sub mov or mov lea and cmpsb dec sbb and rorl add dec aad push mov jg cltd mov enter mov mov nop jb data16 dec insb gs out in cmp lods push xchg inc cmp mov outsb aad stc aam popf fildll sbb in xchg push push in mov (bad) repnz loope or sub mov xor movsl movsb es push mov stos mov add or cmp sub xchg adc hlt mov movsl les test rorl push cmpsb ret mov dec cltd in loopne inc daa adc pusha fildl (bad) repz push jns les push xor orl cmp sti repnz xor stos in ficompl sub push loope mov in cltd sbb outsl mov addr16 sub sub int mov pop ja xchg int int3 test frstor jle mov cmpsb push dec mov loopne pop cmp xor mov (bad) loopne sbb (bad) jmp push xlat and push fwait xchg xor adc xchg jo mov movsl test or adc icebp sbb ror and stc xor xchg sub sbb imul arpl jae leave pop fstpt hlt add imul push and scas mov mov lret dec cmp (bad) leave outsl or push lcall push inc mov mov ret insb pop fcmovnu xor movsb and test sub or sti cmp push das insb or fsubp inc push rcrl inc pop lea push mov fwait sbb insl cld pop jecxz or sahf pop push pop mov cltd fldt notl push in mov inc push lods or fs (bad) out imul fs dec mov pop lcall imull mull and cmp int gs fcoml shll xchg repnz or fcmovnbe mov xchg adc aam (bad) cmc aad clc out adc cld out push aad iret ss xchg push push stc sub mov stc mov stos es aaa imul and xor loop aad std and ja daa pop aam or sub (bad) lock inc loop jo fs insb push cmp out stc inc jmp lret and iret add push jge xor mov sub or lods or jno lds add sub dec popf mov in les stos inc push mov clc cmp pop aas iret push sbb adc fcomps lock dec adc insl cld loope xchg fwait jne call ffree ret in jge (bad) stc icebp xchg xchg mov mov sbb fstp lods mov cmc pop jno push cmp sub repnz out repnz rolb lea dec push pop mov into lods outsb add mov (bad) int addr16 enter mov es xchg jp pop jmp gs pushf lret or mov loop divb aas add jecxz ds notb mov adc add inc jg sarl andl hlt movsl test mov xchg (bad) iret jne fsubr cmp call cmpsl sbb sub lret pushf cli jmp or lahf cmpsl xchg (bad) mov xor addr16 jp push into fs into int xor sbb pop stos cmp shrb jecxz lret cltd mov cs cld sbb arpl and jg pop stos out pop sub lods or adc lods scas jl mov dec inc mov je pop jl pop xchg rcll cmp push xchg and cmp (bad) mulb mov mov movsb adc imul xchg lret ret imul out adc sbb jge js jge mov mov bound add push xchg or jae lods xchg mov (bad) xchg cmp jne cmp movb push push mov pop mov lods (bad) jecxz out aam imul insb mov xchg xchg test inc loope dec adc orl (bad) mov xchg pop and mov mov dec sbb mov push or popf scas jl (bad) movsb inc test cmp test mov ss add mov fwait out sub dec (bad) sbb mov dec (bad) cli (bad) aaa jnp div lahf outsb jns jno,pn push push cmp adc inc shl test aas xor push mov mov sti imul repz rolb sbb stc cmp icebp lcall inc test cwtl sub mov lret cltd int3 idivb lret mov push and imul cmp jmp sarl in arpl in mov out and jae and dec test cmp test imul add mov dec dec mov test mov push scas inc test sub outsb inc jnp stos inc in data16 out mov mov outsb pop cli (bad) divl ret loope or xchg enter (bad) loope or loopne pop xchg mov (bad) icebp inc pop in (bad) jno adc ds gs mov loope repz mov int3 add adc ds or imul xchg pusha push mov lcall jl mov daa fdivrl jle and and pusha imul adc push sahf xchg aad jle insl add pop push sbb cmpsb jmp ja add icebp outsb jnp loop cld nop xchg aam cmp and scas leave jl cmp ss mov add andl fmull sub adc loope or sbb xor mov xor cli (bad) (bad) xor add pop mov fistl xlat jecxz loopne jns les sbb imul jae pop mov (bad) repz iret push popf push push gs mov dec or pop out pushf dec mov mov pop aam lret lret inc lret add dec mov mov mov pop cli jns pop mov (bad) fnop rorb inc xor out fistpl repz xor pop mov inc lds stos test jbe jp sub dec jl pop lods inc push inc push leave cmpsl data16 sbb mov lock ljmp aad in and in sbb pop sub and mov inc jne inc ja inc mov push (bad) mov sub imul pop mov mov inc cltd je jg sbb push (bad) fadds xchg pusha in (bad) jnp,pt mov inc rclb mov inc or lret cld ret rorb xor inc xor mov (bad) adc rorb lods jne scas xor sbb int3 aam hlt push cmpsb ss lods cmp sbb inc fs sub or pop cmp scas mov cmp fistpl (bad) or lods jg out ficompl cmp mov mov rcll lods xchg or dec inc cmpsl dec mov pushf mov push lret jnp hlt fmull std js out out scas lret cltd insb movl std rorl mov dec mov add int xchg dec std add jle gs lahf adc sbb lcall mov in jo inc push rcrl insl test mov push das sub gs flds mov jp dec dec dec add adc dec fmuls pop sub jge adc in scas jmp ret mov push fidivr pop push pop sub cmp or mov out add sbb lahf pushf mov in add mov adc mov popf out mov out aaa mov mov leave std xlat dec (bad) xor mov ficom rolb rorl mov and int3 push add dec iret scas in jne in pop test addr16 pop fistpll (bad) lcall xchg test fdivs mov mov push pop icebp push pop mov cltd xchg in jno mov ret and fdivrs adcb pop mov mov and jge adcl push cwtl movb bound fdivrl cltd jae ljmp iret fcoms push psadbw scas and pop mov jb int3 pop and test sub ret pop ficoml das in pop cmpsb cmc push outsl mov inc loopne sbb cwtl mov pushf adc xor xor out aam pop or mov jo imul jne xchg sub push mov and adc push mov adc push mov dec and lods sar lret mov cmp adc sbb jle cs aaa pop inc jbe std push movb lea outsl (bad) out jno icebp (bad) insl mov jo loop or cmpsl jge clc stos lock push sub es pushf dec iret jl in mov sub sbb outsl ja mov push (bad) and xchg sub inc or cwtl add adc inc (bad) imul arpl jno push hlt ds xor enter jae ljmp sti cli dec mov dec sub jb movsl mov push dec inc mov mov nop mov addr16 fwait in stos cmpsl lahf mull out (bad) fisub addl fistpll nop mov cwtl lcall push test nop enter loop test hlt lea push push mov pop mov mov pop jg or mov sahf and imul cmp into cmp pusha ret ret in cmp dec loop nop mov inc subl push pop and mov into inc adc mov mov cmp addl sub aam sub xchg in cltd es pop sub or push cmp and in (bad) fstl (bad) lret imul hlt arpl fmull xchg out sbb lea jp sbb xchg jmp pusha mov int3 cld inc sti push aad sahf add lds lods or sub fcompl push xlat adc and lahf popf pop mov jecxz ss leave fcoms xchg scas mov ret jecxz rol arpl pop xorl pop stos mov int inc mov push cld iret dec lock mov sub inc lock loope lret in jle push daa pop shrb mov aaa mov repnz cmp (bad) mov lods test mov cwtl sbb mov mov pop imul rcl pop movsl sbb sub inc pop jne aaa popf loopne std dec das dec xchg leave (bad) adc mov movsb shlb stos addl rcll or and push mov (bad) jne pop mov adc ss loopne sahf push (bad) and outsl pop call xchg test pop lea inc jge aas test push or jl dec stos in outsb xchg pop out jmp jo jg mov fs add mov movlps sub xchg inc stc popa cmp lcall lods push pusha or fisub jecxz roll add bswap sti mov rclb mov loop out out adc xchg pop popf loope les stos inc sbb test mov das dec insb shr mov fsubl xlat sub mov pushf test xchg sub push int3 repnz dec push adc adc mov and (bad) cs lock sub lds (bad) cli pop stos mov cltd lcall lea nop xchg mov notb addr16 clc inc lock lea in and fldl cld repnz into movl inc inc iret dec or cmp fstps subl push sahf pop ljmp out cmc push sahf lea pop daa rol cli push and mov out and pop add shll addr16 adc mov int3 adc ret test scas pusha je fiadd mov in outsb and and loopne cli iret mov aaa or add cmc fwait or mov jmp nop mov pop cmp ss dec pop inc (bad) and (bad) std cmpl icebp xchg adc cmpsl arpl int3 stos (bad) imull stos popa adc ret call jp mov fisub imul or and sub jns dec or testb repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) fild add pop jecxz std pushf gs mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret ss insb scas lret lret jbe xchg mov (bad) mov jmp jg div jl pop add mov add gs unpcklps adc mov enter adc lcall mov (bad) jp mov dec aaa nop xchg mov leave and mov dec (bad) jge pop lea test xor jae daa mov pop xor xor movsb fidivr arpl push push popf das cwtl rorb sbb mov jmp dec loopne or call pop adc pop inc mov cs mov in jne cmp (bad) leave sbb fmul dec int3 enter mov arpl lret sti jns xor mov cmp (bad) mov ljmp inc cmpsl cmpsb pop test sahf imul sbb xlat jg mov inc xor mov ret repz xchg inc (bad) push gs mov jg or adc test xchg dec xchg xor push mov loopne out lods pop lods add icebp pop lods adc into lods mov decb inc test xlat mov push cmp lahf dec xlat cli mov nop sub mov inc stos out adc imul repz mov bnd fnstenv (bad) bound and mov pop or aam sbb jecxz add cmp in outsl jl xlat int outsb and repz jmp pop aam lret xor inc loopne scas push dec clc mov rcrl or push sub loopne mov lahf out inc sarl xor cli in icebp fcmovne pop inc das mov js cmp cmp out clc sti stos leave xor add outsb in ret pushf or or sti jo fnstsw test in addr16 (bad) lcall pushf hlt add mov adc inc mov lock sub mov adc jecxz sbb loope test std in xchg xor (bad) pop ss add aad cltd sbb or imul out and aad (bad) sub stos push outsb mov fild adc aaa add mov pop stos mov clc inc xor mov add mov arpl sbb nop xor xchg cli aad mov and jo shl pushf aas xor ret add ficom ljmp cmp stc lcall int3 xor clc push jecxz std inc push (bad) das sbb mov imul push in ds popa jne mov scas xor dec int movb push andl (bad) jnp scas bound cmp jne mov push jns in add mov cmpsl popf jg ret sti fisub mov test sbb lcall rclb mov jg and jb xlat enter push ret mov scas sbb jmp loop push inc mov (bad) sub dec push sub mov aas push lahf pop clc scas mov mov scas jle mov add cmpsb gs sub aad loopne aaa push dec mov jmp shlb mov mov and scas arpl mov das push lods cld and insl mov inc xchg dec dec push xchg ss aad mov addl and sub pop jp sub (bad) jae inc and mov movsl out dec push mov cmp xor popf das push jns cmp movsl or sbb js cmp push mov (bad) push fcomps jbe ljmp loopne int3 addb mov jecxz push sbb cmp sbb pop jo pop and pop push std mov int jb cmp sbb shrl cmpsl xchg sbb pusha rcr in pop mov sub lds pop aaa xor xor xchg aam mov mov pop mov jp aaa mov mov push lahf jg sbb xchg push or mov xchg jne push in cld ret fisub mov sub shrb cmp arpl rolb jne std das add scas cmpsb lods enter movsb fimull imul (bad) add xchg ret movsl or mov cwtl mov test clc lret or ucomiss mov mov loope mov scas cld mov jle sahf jae leave loope mov popf push push cmp lret outsb sub jbe (bad) push or movsl stos adc fstpt sbb testl inc scas add sbb aad jg pusha mov and pop aad pop test aaa pop pop pop stos jno cmc pop pop (bad) inc loopne mov in jae int or fbstp sub negl add cmp add pushf sub xor fidivl fadds lahf sub mov (bad) xchg and mov movsb xor jo imul daa push dec mov faddl pop xor push test nop xchg rcl jmp add mov jnp aaa cmc cmp fsub mov cmp jmp notl xchg pop mov in mov fstpl ffreep lcall stc sub sub insl clc mov in daa adc xor bound mov fldcw insl loope arpl xor xor lret pushf mov inc sahf movsb adc mov or jmp lret dec mov mov pop mov in fsave xor sub mov shll (bad) icebp aam mov repz scas scas pop lds mov fsts ds pop stos int3 sbbl sbb sub ret (bad) outsl xchg jmp rcl dec xchg out push vaddsubps popf arpl sub in stos fcoml inc sub inc movq jmp xchg push aaa outsb jmp push mov scas fnstenv mov cmp insb cmp sub negb (bad) stos jbe test xchg dec push movsl xor dec mov mov mov in repnz push pop ds push (bad) xlat dec test es ljmp (bad) push mov lods dec clc pop ljmp mov xchg cs fisub jmp jo rorb jae scas and bound dec decb mov and dec insb pop pop pop push into or loop adc (bad) iret daa in scas sbbl sub cwtl jmp xchg lods xlat insl aaa cld push bound mov jmp sbb push ss je push and xor mov xor push push mov sub or rorl mov add (bad) pusha in push lret outsb je inc cmc add xchg xchg sub in orl pop mov fdivp fucom arpl xchg jp cltd inc test sub ret sub stos test lcall rcrl sbb test int mov mov push add (bad) sub loope jmp pop (bad) negl adc jg xor (bad) xchg lods and les pop out pop lcall imul mov dec and jne pop pop jbe out push sbb testb out outsl mov addb lret jp xor data16 out int3 outsl cmp pop and add cmp insb lahf icebp mov adc adc inc lds inc jmp (bad) enter mov pop jno xor in xchg add out xchg or je (bad) mul inc (bad) popa cltd inc mov adc fild lock jp lock pop sbb push adc dec sub test cmc mov mov clc sbb push in inc arpl cli push repnz pop pusha xchg xor inc mov mov jnp jb sahf lea lret jmp adc cmp test push pop and call push lahf xchg mov xor sbb in in and mov jl stos fwait and std jns inc addr16 jb dec lret scas movsl bound jne push or sar lcall cmp xchg inc mov sub stc mov jl rcrl loopne adc andb enter adc inc jns nop pop xor test jnp cltd add jnp dec cs xchg out test movsb and jl shlb add les jo popf jle jb arpl and frstor imul andl int repz je (bad) pop or fnstcw inc mov inc mov and in jno inc stos adc inc mov cmc movsb or pusha rcr fs pusha dec mov shl out sub lods jle test aaa jge sub addb dec sbb mov ljmp shrl dec jns sbbl or jno scas fisub push or stos mov dec int cltd (bad) jne stc jecxz dec std pop sub fdivrs out fnsave lods push add adc hlt in int mov mov mov dec insl cld or mull xchg add insl fisttp out imul lods jb push fistl mov inc inc pop pop jg divl stos aas hlt pop or fsub push stos pusha clc inc xor sbb push dec sahf cmp and mov arpl imul faddl pop out jnp jl xchg ds mov pusha ja cld (bad) jae stos pop data16 dec mov test and sub push lret cltd xchg mov mov mov jno pop adc or fistpl stos jle lock mov sub adc (bad) jo mov jmp mov dec in (bad) xor js cmp cltd xchg xchg scas dec xchg xchg mov in jbe pop cmp imul popf cmp add data16 aaa lods (bad) or shll iret ret jecxz repz and xor mov pop push fnstenv imul adc jb insb pop out scas (bad) data16 jne and ja xchg xchg xchg inc push inc mov mov push pop jp test dec insb push int push inc push mov dec mov and rcr xchg dec movsb mov leave outsl xchg aaa dec jmp xchg in mov test mov cmp mov adc iret add fsts dec rclb and add into mov stos inc push aas (bad) mov cld or jo cwtl mov pusha loope jns mov sahf xchg adc mov adc dec inc inc push inc push (bad) std (bad) int3 jae repz loop add das adc pop jae jg dec push xchg out add ljmp icebp mov out fsts adc xchg clc sbb (bad) ljmp xchg jnp sub dec (bad) xchg stos test push cmp ret (bad) loopne or push out dec xor push mov xchg movsl rcll clc cmp stos popa adc inc inc mov js (bad) rol lret fnstenv jg loop ja adc je aad xchg mov lods jns icebp xchg mov ret jp insl inc nop push sbb out inc insb gs adc notl dec add inc xchg sbb jmp ljmp push jb mov (bad) xor cs adc inc repz icebp and pop movsl push das xor ds or jge adc popf dec push or cmp mov lock adc pop xor je push pavgb mov and mov cmc ficompl frstor arpl add mov jg ret pop jge inc sbb mov test push sbb movsl sub lahf repz lret xor lock test movl lahf mov hlt sub xchg dec rcl push pop and cmp push jnp gs lret xor lock sub ss push je inc mov xchg out sbb push cmp cmp or fistpl cld daa cmpsb inc test sbb xchg fwait pop mov sub dec dec xor jno scas inc mov push ret mov call jecxz sbb gs cmpsb test cld sarb and (bad) outsl adc jg imul and aad je popf out lea int fdivrp push test and popf sub pop pop push (bad) (bad) mov (bad) inc insl out repz fdivrl inc outsb pusha sahf cld cmp mov mov dec mov data16 xor scas sahf sub xor xchg aaa or or enter stos dec sarl and rorb std and inc jbe add sub adc mov push iret push sahf cltd mov ficomp mov push mov mov int3 sub lret jae mov inc sbb das pusha inc mov popw cmp lds inc mov pop xchg int inc sbb xchg es pop rolb add cld popa cmp sub and jb jecxz inc ret shrl fisubrl out gs cmp xor jmp sti das mov mov inc nop cmpsb pop dec test ljmp jg adc xchg and add fmull cmpsb ss add jl pop xor rorl es dec loope cli xchg push rolb jo mov (bad) icebp shlb add test cltd sub clc aam jp sbb rcrb sub or jge dec mov in dec pop add mov sarl and test ss test sbb cs add je leave shl mov jno sub lcall xlat lock outsl clc mov xlat std loop xchg loop jmp push jno imul and stos popa js (bad) xor insb jne dec push jmp push dec out loope push push mov addr16 mov les dec sub adc popa gs jbe jo scas cmp out push fs pop jbe es sub lods nop fsub sub pop lret icebp pushf or fs sub out dec cmp inc sub imul fs inc iret push or pop or push and add sub ljmp ds pop jne push xlat sbb decb sbb stos cmpl (bad) mov aaa or gs sbb leave test inc fnstcw add mov jmp repz xor (bad) add and fxch xor mov xlat outsl (bad) cmc mov out movsl pop lret jle xchg and inc gs rcll mov mov jmp cmp icebp leave pop mov fwait pop jle loope mov repz pop hlt aas and cld outsb out push and jnp lcall cwtl mov mov and mov mov call sahf add lahf or dec jg dec dec leave int roll loopne jae in cmc dec add xchg lcall daa nop das dec cs mov (bad) call cmpsl jecxz imul (bad) sub jge fptan pop xchg in pop mov int3 sub inc lods (bad) repz jmp insb mov dec ret adc testb xor mov inc dec jae jno sub pop pop iret cmp adc jnp fmuls out les enter or (bad) mov js push dec aad jle dec loopne jg pop jle mov clc mov lods or lret push nop sbb lock push push dec jbe pop dec and out sub pop outsb push sub fistpll imul push fdivrs xor mov imul pop imul (bad) lret sub lcall lret cmc ss add adc cld rcrl add cld dec test popf inc (bad) loope (bad) lret das pushf or enter sbb sub and inc sub in fdivr cs rol daa mulb jle insb repz jnp lods jmp push pop out leave out ds loopne xchg mov cli sti mov inc jmp stos mov mov xlat inc shll sahf notl iret lds testb lcall test repz cmpsb xor mov call iret cmpsl add pop nop and movsl inc cmp pop jecxz loop xchg bound pop fisubr push inc lret inc cmp cltd jg inc es jb (bad) sub (bad) fst es in mov in addr16 out scas xchg mov js pop stos cmp add pop push xchg xchg das loop cmp mov and sub mov dec jmp adc add test pop outsl mov out add inc bnd popa test rsm mov test cmp xor lock loop clc jns cmp and imul mov push (bad) out int xor shlb xchg ljmp push sbb imul popa ds addr16 or lahf addr16 cld movsb mov and adc and jmp xchg dec adc mov (bad) int adc mov insl insb cmc js xorl mov push jg mov les sbb hlt xlat mov pushf mov scas jge in jbe jecxz cld fsubr js jp test out add sbbb or cmp sbb pop lcall call pop insb (bad) cmp lea in fs xor mov jle jne jl fsubs pop mov clc ss popa and cmp mov jp imul and or sbbb mov rcr mov add cmc fwait push (bad) loope cmp in pop (bad) lods ficompl pop (bad) xchg lahf fsubrl or gs mov dec sbb test pop jnp mov in movsl loopne fdivp pop add out jno push in jno fdivrs ss dec adc add xchg pop mov dec flds pop gs xor add xor fist daa test loop pop push push incb iret enter adc aam push je icebp test and aaa cmpsl xchg std add popa mov mov test sbb out in lret (bad) aad mov shrb dec mov out arpl ret aad cwtl sub pop addr16 rorb jecxz iret cltd mov rolb sub dec push jge pop test cmp js cmp push dec pop adc cld add and push cmp add dec outsb repz out fistpll adc fwait in xor sub les call bound outsl (bad) jge mov or pusha or mov dec adc pop xchg adc sbb inc jecxz rcl add jae imul or aad rorl fcomp fldcw sub mov dec xchg xchg loop pop les fist cmp outsl aam push or daa aas or jmp out jbe test adc jle mov or lods sub pusha xor xor cwtl cltd ret pop xor xor mov lret push add not inc gs popa out push or pop nop lods or aad loopne inc outsl int3 sub cmp add mov mov push hlt jno je cli or and jne pop ret xor adc xor pcmpeqw test dec rorl (bad) and push aam cmpsl fadds inc mov xchg nop pop dec or je in pushf insl into jp mov xor add test sbb cld fsts pop sbb pop adcl mov mov pop xor cmp cltd fimul fdivrl ret dec aaa or sub push int test (bad) adc push mov shrl popf xor aad (bad) push das lahf call inc loopne (bad) icebp pop repnz push push or xchg sti iret shrl lds dec cmpsl sub push cmpl mov scas mov in xor xor into sbb pop sbb pushf movsb jo cmp or mov add cltd out mov out hlt lods or lods cwtl scas (bad) add std jge fcompl scas cmp dec pop lea lock loop mov out (bad) jnp inc inc pop add cmpsl mov add pop add cmp inc test pop cmpsl frstor hlt aad pop cmpsb mov mov pop jecxz fisub (bad) stc and cmp aam adc or out fs mov (bad) or push push lods lods cwtl (bad) jp mov mov rorb push or movsl xchg push sbb test push inc cwtl mov pop data16 mov cltd jle dec push jecxz in (bad) mov dec dec cmc scas sti inc fwait cmpsb xchg in sbb lea mov aaa dec into xchg pop jbe mov mov and int hlt jb loope decl add mov sbbl mov ret sub leave (bad) std rolb rcll lea sti into sahf (bad) arpl in jns push or lret je push fstps fldpi pop loop data16 movsl xor repnz jecxz jns in sahf rolb jbe mov mov pop leave inc cmpsb jnp outsl and cs mov inc sbb fbld cmp mov fwait mov mov inc mov mov lcall push aam lock jge and dec push sub movsl mov inc adc inc mov pusha test aam jns mov and movsb (bad) cmp rorb mov sub mov fmul nop rcll add test jo or bound sub pop fstps shrl pop dec cld mov jecxz pop ljmp test or ljmp sbb mov and push pop xor inc data16 fwait insb jns push cmp mov xor pusha lds mov or mov mov bound hlt or and xlat xor sub (bad) dec insl add push test mov repnz aam (bad) in js push add fsts adc mov out and popf xchg loopne leave push cltd (bad) fucom or add xor aas xchg rol lods andb push int3 and push xchg rcll lock and cmp test sub cmc push test test pop and inc call mov add jmp jb leave sub xchg and stc lds jmp push mov int (bad) mov inc stos ret lea sub pop adc fwait (bad) xor and in sub or popf dec cmc inc mov addb jp mov je add lea ljmp cld roll movsl inc cmp pop cmc popf jmp pusha lods idiv test call sbb and mov xor test and or stos mov dec sub inc (bad) push pop cwtl ds xchg scas xor xchg lock leave enter sub fistp or lcall std lcall push xor xchg stos clc js repnz jne lss dec insb inc idivl xchg add jp mov or sub outsl rcr add (bad) cld out mov jns roll test dec icebp mov stc sbb les sarb xor outsb cs push sbb dec (bad) or mov jb dec pushf cli (bad) xchg test das and jge mov roll jnp xor loop test test scas in add mov pop push pusha adc pop stos sbb sub pushf (bad) rcrl ret pop xchg cli push pop in popa test push xor xchg (bad) xchg cmp int and aaa xchg test cmp stos add and xlat jg insb repnz in push jl into xor sbb sbb mov sbb cmpsl scas fmul push aaa mov and cltd lret aas mov rcll mov sbb and cmp call mov jo or insb mov lret push or arpl int3 add (bad) inc bound repnz fbld das sahf in lret cmpsb dec outsb and lds pop pop jbe inc mov lahf add ds insb cs inc pop lret lea ljmp or and or insl cwtl dec out mov inc fiadd movsl pop inc cltd lret ret fstpt aaa pop out cmp nop adc (bad) mov xchg (bad) or mov mov fwait xor dec aad scas dec and negl (bad) out mov jae lods pop jbe pop cli push push ret out roll xchg pop dec mov push sub repnz and movsb inc aad mov arpl std je xchg mov push jnp push sbb cwtl sub je push push xor push dec fdivl mov aam and jbe cmp adc (bad) es lea shll mov hlt shl mov (bad) mov adcb daa xchg xchg push shrl and dec decl fsubrs (bad) push rcrb or mov rcrl bound sub mov rcrb mov movsl mov mov jg or fmulp jmp repz push js sbb test sbb cmpsl inc out pusha loopne mov rorl mov pop int enter icebp and int mov jg (bad) adc adc cwtl add xor add or cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp cmp lock or add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg insl lods xchg insl fldt pop lret mov dec out lret outsb sbb fcmovnb mov (bad) ds idivl mov add loop lock cmp adc xchg sub orl jg pop aad sbb or inc je ret fwait pop aaa mov or enter xor sbb rcrl andnps sub daa jnp pop mov xchg ret int3 outsl and mov mov jae push push stos ficomp sub insb insb xchg jne inc lahf out lret add mov aam mov stos mov lods aas inc mov push fcompl or and push jmp outsb lods insl add add das jecxz cmc sbb out and dec jmp outsl inc inc push xor (bad) out inc insb inc out mov pushf and bound enter insl (bad) std push sbb xchg adc sahf push dec psrad adc mov icebp aam mov jg arpl and hlt jo and ljmp leave jnp fldl sub (bad) sub jno ret fstpt mov xchg xor dec mov or mov push out push xchg xchg cmpsl mov cmpl sarl stc jae xchg fiaddl and cwtd sbb (bad) mov mov mov in cmc (bad) add xor sarl mov push fisubrl outsb pusha dec mov and cli pushf pop int3 dec movsb les (bad) jbe xor push jl dec or jnp and hlt sub and lods jmp shrl dec xlat jl push cmpsl push dec add jne,pt mov mov ljmp in cltd ss into std ret sbb sbb enter jp (bad) xchg repz push cmpsl lahf aad lds adc xchg bnd aam jae orl test popl mov mov pushf scas mov dec mov test shl roll pop mov flds inc push jle pop fistl out in mov fnsave inc pop out push push gs mov xchg xchg fimul shl test mov xor sbb push roll cmc cmpsb repz ret xor add frstor sbb inc sub roll add push push pop dec sbb and imul mov call add cwtl enter sbb push cs lret repnz dec xlat ja popa and jno push xor test add add pop fdivrl imul stos jp (bad) mov lret xchg xlat andps fwait ret pop dec xchg fucomp cmc in arpl daa das in or push inc dec (bad) leave (bad) addr16 dec fidivrl sub je sub mov lods jnp and addr16 (bad) xchg add mov mov dec (bad) pop push addb nop jle dec je mov push roll enter sahf or data16 lret sarl jl test push sub mov and in fnstenv orb stos stos xchg shlb insl das loopne je mov ja in xorps xor adc sahf int3 daa rcl imul xor cmp jp in mov cmc outsl mov xor push das xor aaa mov xchg sub xor repnz push addr16 int3 push call out or pop jmp daa gs or hlt jl mov jb or inc cs cmp loope or dec mov mov repnz jb sub push cmp bnd and mov in nop xchg dec jecxz dec fs mov cmp push and mov xchg fnstcw das and or movsl jne popa cmpsl xchg scas dec loop sub pop mov cs sbb mov jne das dec or pop mov imul movsl loope cmp dec or in mov cltd inc jnp iret stc cmp sub mov pushf adc ljmp popf (bad) xchg enter and test in and outsb dec adc mov mov sbb add lcall in sbb (bad) hlt adc mov or (bad) (bad) push test (bad) xchg add sbb jge or cld fdivl push pusha cs mov subb hlt pop dec pop sti into and cmpsl aad mov pushf call mov lock outsl arpl inc push popa cmp push xchg aad mov lods aam add fistpll idiv and dec and lcall pop lcall pop jg mov lahf out ror sti adc fcoms int push mov xchg je or mov mov xchg cmp leave test sub cmpsb mov pop and mov push arpl bound add pop mov addr16 fwait inc aam stos and cmp shll sahf add out jne inc add and xor sub ja inc lahf lahf movsl arpl int sbb jb add dec mov sbb repnz xor loope jmp jns and fwait push sub hlt jnp test jle stos mov sahf out ret scas or daa (bad) lcall ds test mov in lock (bad) dec adc shll sbb pop movsb aas push push imul lcall lods dec in out pop add lret sub inc fs (bad) and add xor lret push xor ss shrl insb gs daa lahf (bad) fadds mov ja push pop xor push xlat inc sarl lcall pop push and sti sub and fiadd ss xlat int3 adc scas jnp,pn mov dec jl mov mov aam mov xlat sub jnp pushf cmp mov pop push lea xor aaa or or sub (bad) cld lea (bad) cmp rcrb push fnsave jb mov scas add mov movsb daa mov pop dec in pop fimul add add js mov add out daa or cmp scas dec les mov stos gs mov adc and push outsb lahf mov dec push shrl sahf (bad) jnp (bad) lea out enter mov jne push and xchg mov jg mov sbb xchg lock shlb pop sub js and stc xor or repz in jb jb xchg inc inc nop xor fbld inc mov ss ror jp jno repz mov mov pop stc and mov je repz pop add repnz push aaa dec push pop jge cltd out enter xchg int3 xor out fnstcw (bad) push repz icebp js xor mov in jmp fsts jbe pusha inc (bad) jmp pop je lret fistl rolb dec mov dec (bad) adc std jmp push adc mov add (bad) mov sahf cmc inc mov xchg xor (bad) cld mov lret inc fmull pop xchg roll fstpt scas (bad) mov sti dec shrb add mov add stos mov cmpsl sbb jmp pop sahf fwait das pusha jge clc in and (bad) or in pop sbb sbbb pop or fcmovne sbb inc xor cltd ret jo dec (bad) sbb cmp subl mov adc push mov loopne mov xchg insb sub jge mov popa dec rcrb pusha hlt rolb jp movsl sbb je imul pop lods push and mov xchg add pushf mov out pop popa sbb test pop xlat lods lock out std or mov or in movsl mov (bad) mov adc xchg jl outsl and hlt xchg fwait cmpsb leave lods or sti imul pop lea pop cmp push push bound jb int3 andb pusha or pop ds xchg sub and mov jle out mov adc aad mov fs out (bad) orps stos inc adc sbb sub mov lea push paddd loope arpl xchg adc ret and fmull pop push push mov aaa aam (bad) je,pn cmc adc sub std dec rep or mov push fucomi mov cs cli xlat xor jb iret fdiv mov xchg push sub inc pop xor fwait jl scas imul jae jns inc mov xor mov jo jne push ss pop add in loop loope lock sub insb addb adc push lret lea push js lds dec xlat cmp repnz adc dec cmp rcr das adc lock cwtl push push rclb ret scas loopne xchg pop aam jne pop xchg pop popf out cmpsl push fdivs sbb sbb lods mov mov mov gs sub popa es jnp jmp mov addr16 cmpsb cmp sbb push imul je sbb mov jecxz or push mov mov outsl mov aad xor mov mov add mov mov movsl daa push pusha inc add cmp cld stc test (bad) cmpsl pop call arpl xor xor mov inc pop fpatan stos jle (bad) lret inc cmpsb in or pop or dec notl (bad) jl dec jp sbbl adc test ja dec movsb adc (bad) in fcoml stos mov aaa ret sub sbb pop xor insl pop sub cwtl adc xchg inc in cmp aas add mov jbe pop scas stos mov imul cmp inc mov or fisubr stos sbb push xchg pop sub push and inc pop test and movsl mov add ja fisttpll movsb in (bad) cmpsb xlat fisubr inc xchg cmc mov pop jne cmp push xchg loop test push dec sahf xor mov shll jae mov jmp (bad) push mov lea ret movsl mov jnp mov (bad) insb add sbb push pusha mov dec into xchg outsl sbb lret and rcr dec lds ds xor out cmp orb jge push or bound ja adc mov adc jb bound mov xor sub mov sbb mull dec gs lahf movsl lret cli pop dec imul rorb pop lret xor mov mov scas loop pop (bad) in nop call fdivrl adc icebp sti enter lret stos fsubr (bad) mov (bad) lock les outsb xchg adc sub push xor mov fdivrl lret cmp ret loope test xchg (bad) cli add in jle in f2xm1 add add sub scas lock or pop xor mov addr16 aad stos jnp dec add push gs push cmc pop outsl sbb (bad) or inc fs fnop mov cmp repz (bad) stc xor push sti ss lcall push inc sti cmc add inc mov (bad) cmp mov out adc xchg popf mov inc shrb mov jmp out rolb push or sub push stc or mov mov enter loopne cli pop inc pop push jl cmpsb shl (bad) xor lret iret add fmul add sbb jmp dec sahf add xchg (bad) sbb lods sbbl xchg addr16 mov test and ret jl mov jno loop out mov pop dec aaa mov cmp add (bad) or and sub das xchg xchg sub adc and push jns dec pop mov sbbl xlat mov add jns cld test cli inc bound (bad) mov adc mov inc lcall ja inc sbb fsubrp fsub cmp adc jle fcomip dec xor pusha mov or or or in xchg dec (bad) aad popf lock (bad) cltd xchg das scas pop jge (bad) scas (bad) fucomi das pop movsl outsb jmp or js mov mul sbb fisubr jg cmp mov jae das xor add (bad) pop and or leave cmp add out das sub jo cmp repnz cmp pop (bad) xor in cmpsb and xor scas jne jnp pop imul add and sbb xchg fiadd mov mov fbld sti enter sub gs or cltd jg mov mov add out imul dec xor loope inc push ljmp dec jl push shl test mov cmpb cmp int mov push inc pushf jbe int inc les xchg fmul mov mov mov das push test or jae push mov sbb and sbb jge cmpsl and lea mov (bad) jp,pt fwait cmp cmp movsb ret mov sbbl int mov imul popf (bad) adc inc js inc adc and push dec xor sbb jnp addl add adc add push push je inc dec sub fldenv dec mov add or cli and pop mov pop clc dec jecxz jnp add in mov inc mov or hlt rep lods mov stc inc xchg jae mov mov sbb xchg addb add outsb (bad) jno shr loope or js shrl mov loop mov pop (bad) or adc cld or lods xchg jne notb mov add sub fdivrs sbb hlt dec mov and mov cmp adc mov xchg jl sub xor add xchg mov das mov cmp rcrl xor gs sti mov (bad) fmull adc lret scas or insl test aam test mov cmp mov fwait push aas stc data16 sub mov insb and hlt mov mov xchg cmp mov dec push sti fs daa mov inc or cmc sub (bad) std insb dec lock xchg cmp repz jmp icebp pushf add test lock js (bad) arpl cmp push aas adc jo cmp cli pop mov xchg mov sub shl in mov push inc testb loop fdivs cmp pushf push cmp pop lods or push into enter pop sti out xchg (bad) fistl adc add mov ret jle jl js adc mov cmp xlat les inc mov or iret daa mov mov cmp inc sub loope sbbl in in ja mov aam push out in cmp dec xchg push ljmp mov mov xchg fisubr (bad) push push inc dec dec and das mov sub fdivl mov repz jl fdivl jg movsl sub fimul out mov jg aaa sub push ja jnp or inc mov mov pop adc leave insl push mov enter ret sti sarl cmp shrl pop push clc inc outsb sbb mov les pushf mov lahf cmc dec stos (bad) mov ret mov dec mov dec jle ret das xlat pop scas lock or (bad) insb xor incl or sbb out inc rorb fs pop pop pop inc mov xchg push xlat pop mov xchg add adc test cmpsl cs in sub sub dec mov xor mov inc xlat scas add mov aam enter ja aaa int (bad) repz mov (bad) mov loopne pop das ficompl int inc in stos jmp scas rcr inc pushf rclb inc pop mov sub ds cmp mov fstpt mov mov out pop (bad) outsb jge mov cld xor scas pop js add fs sbb xchg xor add inc mov jae jno mov aaa notl rol jne sub cmp in loopne popf sbb sbbl out lea fucomp or fwait and test dec scas ffree test jne movsb std add mov push lods repz cmpsl fstpl push push js loopne mov sbb pop adc sbb push movsb popa mov mov outsl cmp pop mov xor movsb mov iret xor mov dec imul dec or pop les gs or pop xchg sub add dec mov call addb call or xchg or pminsw mov mov sbb bound inc imul or (bad) (bad) jns mov push call pop imul leave in insb loopne cmp rclb adc rcrb cli lods outsl xchg mov jecxz imul scas lea (bad) mov xor xchg add sub and (bad) jl adc dec fldl scas xchg jbe push mov imul xor mov into push ret jmp push adc popa push push inc push into jnp inc (bad) xor xor ror push xchg movsl int sbb icebp xorl cmp dec sub cli clc adc mov je xor popa mov adc aas stos adc jnp stos jae aam push pusha push and (bad) fbstp arpl sub movsl test pushf dec adc imul out jo pop inc add ds push lahf jmp dec lcall add rolb test (bad) lcall jbe xor dec xchg inc stc adc stos pop mov fldt icebp scas push cmp ret out jns pushf repnz and (bad) aaa lahf bound negb in cld add lds sbb mov aaa mov push dec cmp dec aam mov or add mov leave fiadd dec xor or decb xchg repz lcall add enter in mov movsl es imul jnp outsl ds test mov sti xchg and aad adc sbb mov inc pop loop lahf pop and ja mov jnp ss mov jecxz or dec xchg dec mov and dec sbb aad test lcall or or xchg test inc sub inc lds cmpsb mov mov pop or loopne icebp aad inc cwtl insb cmp sub insw gs push js dec add xchg mov add (bad) test add mov pop bound mov jg cmp aam mov dec mov pop int3 jbe push push orb cwtl mov out cmp les sarb jb xchg push xorl and (bad) dec xorl fcmovnu sub jle mov andb adc stc out test test out movsb scas leave mov push stos mov dec mov pop sbb or dec jno inc (bad) clc xor negb pop inc dec xchg sbb sbb cmpsb mov sbb inc fdivr or movsl xor (bad) pop xor push and rolb and push rorb aad sub (bad) push cmp ret xor imul daa popa mov adc mov movsl fisubl mov adc cmpsl aas decb in loope lahf cmc scas sub cmp jne (bad) xchg pushf xchg push inc movl incb cmpsl cld xchg dec dec shrb mulb or fmull out loopne pop leave pop jbe mov dec mov push iret xchg push ljmp mov insl cmpsl xchg out push outsb xchg jl dec std push jg sub out jle and into sahf inc pop adc ret xchg xchg xchg mov rcll push scas xor fwait mov shrl sbb cli dec clc fisttpl push stos dec jle loope mov inc rcl jb repz rcrb enter mov in or (bad) dec scas jo add dec inc (bad) testb xchg push int jge mov dec (bad) xchg mov push and dec adc stos movsl push mov test adc sbb xchg xchg pusha jg bnd iret repz add push cwtl fbstp aas lods or int stos mov xor fmull push lods fidivl loopne add out nop push cmpsb adc cmpsl jmp das test (bad) cmc mov mov cmp cltd shrl rcrl aam push and push push mov divb cli test lcall aad decb lret and loopne in xor out lock shrl sbb xor or adcb repnz cmp jg push insb shr pop add (bad) jmp imul ret cmp out push push sub adc arpl inc subb push lahf add and mov pop mov sti mov inc push adc adc repnz test dec stc decb movb cli dec out lock mov fidivrl mov fwait xchg adc ss fucom push divl adc repz mov push xchg dec scas movb jl mov push xor (bad) cmp aas or fnop ret dec enter test cmp and lock das mov adc ja clc in ljmp sbb dec xchg sbb pop fidivrl jl xor adc movl adc (bad) sbb xlat pop sub (bad) repnz add push xor stos mov inc scas in (bad) cmc mov out cmp (bad) (bad) jg lahf pop add jbe lods shll push dec xorl out cmpsb cmp xor xchg push call bound and xchg minps cmpsl add push adc mov mov push rcrb and adc jnp aaa mov enter enter push rcrl fwait loopne adc or pushf sbb mov jl inc jne xchg pop dec repz mov push in dec hlt sub mov sub stc clc dec pop xor adc (bad) movsl repnz repz and cmp mov xchg xchg mov add mov gs jbe outsl dec lahf and loop pop idiv add inc pop cmp hlt insb jecxz xchg mov pusha push cmc mov adc jg xchg and enter cld xor aaa cmp jl cmpsl test push push mov pop add cmp loop cmp mov jno shrl or aaa in mov dec adc pop rolb fnstsw sbb pop mov stc cld push mov pop jno mov mov xor js and in imul fild addr16 ret and pop mov insb jge aas inc and jecxz xor dec data16 add mov or (bad) mov inc sbb dec push dec sbb inc std fwait cmp stc repnz movsb xor push (bad) cld aaa stos cs xchg adc dec jle mov cwtl jns out lods inc cld xchg gs mov dec cmpsl and test ljmp (bad) cmp xchg mov adcb data16 div lea in ret scas fwait xchg inc push les xchg mov in insl fisubl outsl cmpsb popf lret aam mov imul pop in xchg add bound cmp jge jno mov fldl2t cmpsl dec inc fucom pop push jge loop je jmp sub cmp xor int3 and mov out jmp adc dec cmp testb in ja add add inc sbb and das xorl cltd or push adc cmp push rcrb dec andl (bad) push mov rcrb adc (bad) dec jae outsl lcall pusha mov pop jp inc pushf insb (bad) mov dec insl cmp aam jp repnz out inc adc sub shlb or les lret sub jne pop and orl daa jb aas mov xorb sub sub sub aaa dec mov adc jl dec or fs loopne mov dec adc jp and jae adc gs daa xchg pop pop jmp jnp pop add add jl pop cmp outsb int3 js xchg cltd mov jbe enter ret add mov mov jb icebp mov mov or mov iret (bad) xlat into cmp mov out add mov lret fimull pop insb rorb std pop loopne xor ja inc add ds sbb test fldcw mov pop test xlat dec enter mov es or cmpsb adc and fwait xlat das loopne fsubs les out or sub sar mov inc push (bad) clc mov add mov push iret insb out jb fdivrs mov push data16 mov hlt mov int test jge xor cld stos cmc sbb mov loop out dec add out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp cmp cwtl imul js dec dec scas add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsubs add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb jae jmp xlat push mov (bad) mov lods (bad) leave mov fdivr (bad) repz mov pop add jmp cli pop mov hlt sub mov mov bound jmp mov inc jecxz jbe outsl adc mov div cmp std lods fcmovb xchg pop add cmp jbe xor mov vpmacssdd test mov mov sub sbb test lea out push mov lret xchg xchg and push xor test or mov ret fidivrl dec push xor outsl mov jp or mov mov out sbb sahf mov or mov inc divl mov lods ret pop jo (bad) into outsb push sahf aad mov mov sar lahf sbb aad pop mov xchg add jae outsb jge mov pop fwait pop sub mov imulb cmp repz aam mov fs jle (bad) cmp inc and adc (bad) mov xchg out popa outsb mov insb insb sbb adc negl jae pusha mov mov mov xchg stos xchg les test dec sti and add js stos sub jb inc shrl lock xor outsl xchg jecxz insb push insb lock adc mov and push mov jbe cmp nop xchg add xor js fdivl sub or add cmp (bad) imul push std sub outsl sbb push stos outsb xor or push wbinvd scas in loope aam out or cmp add mov cli stc cmp mov sub out mov jge pop jl inc or xor outsb lcall sbb outsl sub aad mov cmpsl nop inc and (bad) pushf mov xchg sti xchg fwait lods adc cmpsl xchg cmp and dec fiaddl das mov mov sahf sub push idiv sti in inc adc cmp push lods mov add insb add bound test lods shrb mov das cmc mov and cmp jg xchg out (bad) loope or xchg or pop push (bad) aam ret sub sbb xor in insb and pop pop dec xor push int3 cmp jge mov stos test lds mov mov mov dec fsts lods sbb add push xorl jns notb scas jbe push popa icebp mov roll push xlat mov imul lds xorb test xchg out sub fwait cmc mov mov aad repnz fdivr xchg cwtl jp movsl aam sbb dec iretw add inc xchg xchg push pop aad sub lret xchg dec and dec adc add cmp and lea or rcrb lahf sub cwtl cmp sub cmp je xchg sub jg dec stos or mov and and je (bad) out aaa add icebp mov rcrb stos push sbb fs mov mov lock out addr16 inc out popa cltd sub in xchg dec mov lock mov or jo add lret imul cmp or inc sti sub push insb inc adc addr16 inc (bad) dec shrb xor mov jo or or dec addl (bad) fild pop je,pn jmp shll (bad) dec imul loop mov sbb add xchg dec pushl lret xor mov sub and ljmp dec cmp jne ljmp xchg xchg gs ror jno mov sub xchg xchg gs and imul bound mov add dec mov in fwait jbe fnstcw (bad) loopne outsb out ljmp mov into push movsl call inc mov push mov in mov nop sarb (bad) mov mov mov cmp leave aaa adc repz andb push movsb dec (bad) mov fmuls out pusha dec pop (bad) or test loop rclb mov mov jl loop int3 xchg mov (bad) sbb sbb adcb sub cmpsl orl mov dec push adc xchg imul aaa andl dec add sub and sbb mov xchg aad mov cmp pop insb popa dec pushf pop push sub out cmpb dec in jo mov aad (bad) push rcll cmpl fwait add add dec enter call jae push sub daa push jns sbb cmpsl adc out or push daa out or xrelease pop jl push cmp call push in xchg stc in js int aad mov test and sub pop std out movsl mov cwtl sbb dec outsb push jl sbb sbb sub adc sbb add (bad) mull inc mov aaa sub jmp dec or ret jno and sub add fcomps insb xchg jno js addl and arpl es das or ljmp fildll call xor mov frstor outsb jle xlat mov mov xchg mov sahf push xchg mov mov sbb inc add xchg ret cld ljmp cmp dec or cltd ret andl or mov add push dec (bad) cs insl in stc in push mov sbb add sbb push push inc pop dec jp xlat push inc cmpsb jl pop or imul mov pop mulb lahf cli push mov (bad) adc mov fcoms clc (bad) fcomps jne inc mov ss pusha nop jo std jae insb dec into inc iret mov pusha add aad mov in adc loope mov add cmp ret lret sbb popa jno add jne add cmp insb add enter call mov sbb (bad) sub push ja add push dec dec jp std scas (bad) push (bad) inc jp das lock gs in ja subb jno mov mov cmp mov xor pop (bad) sub lods andb outsl xorb pop xor ljmp sbb mov sub lahf scas repz lods movsl mov lods sbb pop cmp mov mov les dec pusha xchg cmp sbb add std xchg sti lods xchg and fisttp dec sbb jae enter je dec or aam enter divl fsub xor jg aam mov cmp loopne pop int ret aam fimull movsb lds add ja frndint daa add inc into add shlb mov adc int3 (bad) pop xlat aas cmc inc stos lret stos daa (bad) cmp scas movsl in imulb pop cwtl mov out mov (bad) xor sub testb faddl xchg push arpl cwtl jmp adc scas cli sbb xchg xchg xor mov xor outsl push cmp push andb and (bad) into dec fmull dec pop pop hlt mov nop pusha xor mov loopne xchg mov cld dec xchg push pop add jge sahf ds ss je xchg and pushf mov mov outsl jno test aam push movsl jle ss pop and xor and sbb mov fsubrl dec pop push adc stos and sbb arpl cltd add add lds pushf fistpll cmp call mov decl movsb sahf sub fwait mov test sub sub das les cli mov js dec orl adc inc xor imul iret jmp cmp push sub js and mov mov rorb repnz popa mov inc jg fnstenv movsl js pop mov push and push jnp aaa cmc adc mov test movsb mov in test mov pop xor mov stc jno int xor mov cmp jmp lods lea in (bad) pop mov out push andl inc aam cmpsl inc push inc cwtl lret pop mov ja mov push sub and push push pop xor imul scas jb push imul pop jbe (bad) mov adc in xchg push stos push bound arpl add mov dec into add or repz xor pop pop mov mov sbb outsb bound cmp (bad) testl and sbb and (bad) pushl jbe ss fwait sub pop inc or mov or cmp jle jb hlt add cmp adcl jmp jmp or out addr16 aas repz sbb push cmpsb gs pop jp cltd xor dec aam pop cmp js stos xor mov mov cli loop push jge inc mov fildll mov nop jae and xor dec bound jl fbld (bad) mov loope pop sbb hlt lahf mov insb mov fidivl loope imul leave int3 test fs out ret mov es test pop jp add imul pop icebp shlb out fstpt inc aam nop (bad) fldl ret and outsl sub cltd push cltd cmp push lret enter mov sbb or pop lret push xor and mov xchg xchg push in data16 jge popa fnstcw les xchg (bad) sahf sub ja in lret lcall xor incb xor xor pop mov mov add fistpll jge into add jns inc xlat ja notb mov aam or pop clc aaa jb mov jg pushf mov cmp mov into xor mov jbe (bad) mov fimull into push mov pop loopne push test (bad) popa movsb inc hlt mov clc loop fistp mov imul dec push xchg data16 in imul cmp sbb pop cld push push dec out mov mov cmp bound mov pop push fidiv or stc inc jns mov out test mov adc fprem cmp mov cmp cld dec adc mov pusha and or cmpsl call inc cs adc iret cmc imul push add and cmc xor xchg sar mov popa clc shl aad jmp movsl mov mov int3 or mov mov sbb loope,pn push mov xor mov push inc and leave pop push mov shl ljmp (bad) and inc in mov or jb pop shrl test es faddl pop xor mov sub add push repz mov pop je xor or stos loope jb movsb test in sub loop push adc lret adc pusha mov and pop (bad) jns push (bad) in xchg lds sub mov sub sub mov or test imul push jno mov xor mov fnstsw lea cltd je jl mov lret push xlat (bad) mov pop scas push inc push test inc in popf in xor out jb adc enter fs inc jns addr16 mov rcll int3 mov rorb ljmp xchg pop cmp xchg sub call dec or aaa cmp mov pop lods lock in jbe dec sahf rorb pop mov movsl repz aam sub push sbb xor andb adc sbb movl scas (bad) or (bad) sbbl and pop mov and arpl fist mov (bad) negl and clc sub in mov push dec inc fnstenv inc dec adc xchg adc in iret cmp cld push test jl cmp imul cld mov shlb xor xchg ljmp mov or in sti pop xor int pop repnz dec movsb imul push jecxz lcall and cmp pop mov mov pop out cli jl stos sub sub cmpsl cmp jo adc sub mov pop sub je dec adc bnd dec lea mov (bad) cmp in out cmpsl push push je mov imul cmpsb arpl xor or test pop add ljmp aam sub xor cmp stc roll pop les fistl out subl inc push inc lock in ds cli or ss cld xor mov jb or push pop notb sbb lock cmp xchg inc test mov pop mov mov sbb imul and xor push stos add aad dec push lds sbb clc rol pop sub outsb loopne rorb xchg sub mov aaa xor sbb lea xchg sbb fisubl stc (bad) jecxz (bad) mov lea jae push jmp adc jbe mov xchg jg lcall and cmp mov dec movntps dec sbb sbb xor mov js ret jo out xor fldl push sub pop bnd addb xor (bad) aad addr16 inc mov xchg scas psubsb jae bnd pop pop xchg jbe dec sbb mov ret fidiv lret push jbe les fldl push outsl mov pop jo add cwtl cmp movsb popa or orb es nop push xor mov jmp mov les cmpsl lcall fs mov sub xor shl int3 add mov push jnp push (bad) aas mov dec ret sti (bad) cmp js movsl outsw addl mov shrb fsts daa das aaa (bad) pop xchg or negl in dec ss adc add sub jns jo push repnz add aaa nop sbb add sbb outsl in fidiv or sub push div push and sbb into push std mov scas sub inc notl jmp jno mov push mov inc jp mov xor xlat outsl scas test xchg xchg pop js (bad) jae les dec mov in out dec adc addr16 faddl dec fldl shrb push out sbb enter xor sbbb insb cmp sub pop ds sub cmc mov fs mov les adc enter push jp rcr add lret and push nop ljmp mov mov xor cs iret inc push or lods xchg push mov pop cld inc mov jne adcb inc mov jecxz stos fnstsw pop lods lods jecxz out jns push mov bound imul push jmp aaa mov pushf xor jae (bad) mov dec aam mov mov fsubl xlat popf add dec or jb (bad) popl add cltd lcall leave sbb sbb sbb pop subl mov ss dec push jp mov aaa stos mov inc movsb ljmp into and aad mov out fstl data16 div xor sbb push xlat dec or pusha (bad) out pop ds or pop enter pop test es repz data16 lods into int fdiv cli fsts data16 bound mov nop aaa out or fs jle adc add ret ret fdivrs sbb mov dec jae mov aam mov cltd test cmpsl dec ja std mov mov loope cltd (bad) scas (bad) pop or jle lahf mov mov dec ss jae ss std sub stc enter mov into lock fmul lea js test sarb mov inc or imul lock push xchg (bad) dec in nop repnz cld loop inc mov jmp rcrl cli fwait ljmp iret loopne inc push sub push sti cwtl cmpsb jp cmp mov ljmp mov popa int3 push mov stos adc (bad) mov or loopne or mov or aas in add jno adc repnz shl jnp (bad) mov jg pop mov jno pop and arpl sbb (bad) mov pop (bad) and (bad) call scas dec mov xor out jbe push fldt inc loope insb dec add mov in push cmpsb sbb adc add pop xchg jns test dec mov dec xchg scas mov movb jge xor adc cmc xor lret push icebp gs lods mov adc popa sub dec mov sti push add lea mov dec pop mov clc jmp icebp sub xchg xchg lret movsb adc (bad) (bad) lods xor sub pop in mov pop or cmp int inc fwait sub jp jno mov jecxz loop dec inc mov inc rorl sub ret push into call or sub cmp or add push nop push xchg addr16 mov adcl mov icebp in ds scas loope mov aas inc lea ss adc pop mov pop outsb cmpsl adc adc cmpsb stc test xor mov in lret ja test enter mov aas shrb scas addr16 call fdivrl mov jo xor inc ss pop fimul adc mov inc xchg test ret inc and jmp jae out ret not sbb sub mov out pop jl add arpl and add pop je (bad) xchg (bad) push push outsb fdivp push xchg (bad) gs (bad) mov mov sub divb outsb dec test push fstps push cld aam xchg jge bts rcll push fdivrl inc (bad) push and mov mov sbb add repz iret mov ljmp add xchg push xor dec inc in add stc fist pop or mov sub ret (bad) (bad) add inc push cmp push push popf imul cmp out add sarl mov fnsave popf add (bad) pop lods jns pushf mov mov cmp addl inc repz xchg sbb lahf adc sbb inc pop jne icebp repnz int3 out mov sub jmp fwait xor sbb pop adc data16 fistp aad mulb jb cmp push push inc cmp and add and mov stos sbb stos pop mov adc sti xchg insb ljmp dec adc int sub xchg rcll rep pop sarl add dec or jb les pop mov outsb imul jne adc mov mov pushf pop xchg pop fisub inc lea push xor gs inc xor lock pop scas jg mov (bad) and dec dec add add jmp fidiv aaa push jle push and arpl sbb lods popf xchg cmc stc imul dec (bad) je dec rcr sub jns clc insb shl pushf xchg push mov cwtl test mov in xlat fbld repz mov dec out mov lds jns in out sbb pushl push fsqrt jg push pop and hlt fwait jnp fdivrl inc pop adc int3 lods fsubr adc cmpsl fildl cld outsl mov sar dec imul push push pusha pop sub dec mov or xlat in push (bad) dec xlat test je jne lret sbb pop data16 mov jne into cs mov imul enter in bound jbe daa stos fs mov sub sub addr16 sahf sub ljmp imul mov sub sub ss push sbb and mov pop (bad) arpl push or into lock iret pop bound mov and cli icebp jecxz inc add jnp or scas sub int xchg cmp push sub test je mov fdivr sbb lret (bad) and or push jle lds lret mov mov aaa cmp addr16 inc lahf sbb push mov sub add cmc dec pop mov into shll stos sarl pop dec xor xlat loop xchg test scas nop and iret daa sub fstpl lret fsubs outsl or xchg pop ljmp xchg pop pop in add mov gs (bad) or cmp rcll (bad) and fstpt rolb leave push push fsts xor mov out loop mov jb stc (bad) sbb inc mov fwait pop mov cmp xchg jo jb fmuls pop iret xor ds js addr16 data16 (bad) daa and pop cltd in jne push pop or xchg inc inc xchg adcl fmul (bad) jb rol xor popa std push ficom jge sub jmp mov mov add jecxz jg js jns (bad) pop jbe data16 xor lahf jnp xor pusha mov pusha cmc sub jno pop xor sti mov lcall idivb sbbl xor test mov (bad) fdivl lds daa ds cmc inc loope inc sub mov sub out scas inc jmp mov insb adc sbb lds mov jle lret pop stc mov dec sahf dec jp insl enter push add xchg adc dec out xor (bad) in jb mov jle xchg into dec jo movsl sti es mov pop aaa repnz or jmp sbb pop xchg stos xor (bad) repz mov scas jg sahf (bad) push push inc fucomip cs fwait sti jns fild fisttpll push (bad) movsl inc xor jmp add testb inc inc or xor jmp jb out sbb aaa ret dec pop stos icebp mov rcr xchg xchg mov pusha aam push imul in movsl push pushf mov in sub movsb incb jns out mov ss pop rclb jbe cmp (bad) mov in flds mov cmp cmp lret js xor nop (bad) popf lahf dec push push push outsl adc mov scas stos mov lahf pop inc cmp (bad) xchg stos mov and and sub rcrl or popa ja dec mov mov addl in int3 cmc ret dec push cmp cmp inc push cmp cs cmc mov shlb xor push sbb xchg (bad) jne and sub loop push test daa repz mov sub gs int jb pop push xor xchg xchg ja jg xchg add cmp push sbb push add (bad) sbb lea ret rep mov imul xchg mov sbb nop inc mov enter outsl pushf dec fucom in cmp stc mov (bad) gs (bad) pop test sahf and (bad) stos sbb scas mov fdivp or cmpsl jbe inc add xor (bad) jne nop lods mov pop xchg aad cmpsl inc jg or sub pop stos inc add dec js push test mov xchg dec xchg dec pop push add or push enter subb lods pop (bad) jae leave xchg push and fidivrl xor mov dec lods and or xchg hlt cmpsb mov outsb call sub sbb test add sbb dec scas mov in xor (bad) pop es pop cs fwait mov in stos sbb mov inc popa ss fnop jb test and fidivl inc adc mov push daa enter xor test daa pop sub jmp arpl adc xchg arpl cmpsb sub mov sti pop rcl inc sbb arpl xchg add in pushf jl out sub (bad) loope or test fidiv push fmuls cltd mov jmp or out mov push mov cmp jg inc pop movsb pop mov out shrl (bad) lcall mov dec jmp movsb (bad) out xchg jp mov outsb jae aas mov inc scas aas aas fldcw push lds adc mov cmp arpl mov cmp stos ret mov adcb rcrl bound daa sti aas dec ret adc mov jecxz adc arpl xor out in ljmp in ds jecxz fstps cmpb mov loope shlb xor adc mov int out bound adc scas mov inc in fadd ret lock adc adc mov jmp and adc sbb ljmp aas mov cmpsl pushf mov test cmpsb (bad) leave sbbl fisttpl rcl adc popf gs loopne pop mov add or or xor cmp les pop fisub mov push sub test inc (bad) sub or mov add pop add jp push fnstsw sbb sbb push sbb es ljmp fisubrl (bad) and arpl push stos cld xchg out adc repnz xchg inc xor push fnstcw addl pushf fild add push add xor inc (bad) sub cs mov mov add in repnz pushf mov mov paddw push test fcoms repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add incl push pop (bad) (bad) jp inc dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push ja or test or (bad) les dec arpl mov (bad) mov (bad) test int decb pop negb add mov add jne rcl (bad) popa inc cli in cmpsb lea sub jl and ja lahf aaa dec add jno sub push push sub sub outsb popl imul lahf stos aad aad dec adc or jp jle pusha cltd aas mov daa mov mov sub xor imul or cmp jecxz ror or cmp ror or pop jg dec dec or jae mov sub sub sbb outsb cmp lods jae sbb dec cmp fs mov aam dec lret add imul cmp sub inc jg fwait icebp or in cmp jecxz das mull push popa mov pusha xchg and or inc sbb das jmp jp and ds lret cli adc aas shll dec pop and and call loope cltd clc dec sbb fiaddl in mov dec push (bad) inc loop stos adc mov mov out out imul hlt sub add jb,pn and pusha inc or mov mov inc (bad) mov xor or nop into mov jl cltd into fiaddl shrb mov nop lcall cwtl hlt cmp lcall aad outsl loope lds shlb call outsb add sub jge jle sbb jb mov dec dec and sbb pop incl outsb test dec dec cmpsb out xchg cld lods cwtl xchg adc ljmp fwait aas outsl loopne mov mov mov inc movsb sbb (bad) outsb loope in jp dec xchg stos mov lock mov test mov cltd movsb out mov adc fisubrl aaa fnstcw jne out and rolb mov mov or movsl inc stc scas les jle bnd jl cwtl repnz outsb adc (bad) sti in cs pop add xlat xor in leave jbe xchg pop cld cltd stos loop fs into and cmp cmp std add and sbb (bad) loope jp stos and push je enter fsubrs lock mov and inc cs lds cmp hlt ljmp adc and dec movb (bad) jle fsts cmpb fsubrs lods sbb push inc (bad) mov sub mov push fwait push sbb roll pop mov loopne outsl jbe popa mov mov mov mov inc lret (bad) jecxz pop xchg xchg push fwait lods mov pushf push jae (bad) and scas push sub pusha xchg or dec xchg std mov notl jmp sbbl mov sub or sbb mov adc mov js xor imul sbb jg push mov sub repz lock sub mov mull jl pop push inc mov push dec dec addr16 out and xor adc jb scas flds lcall add sub sti or pop lea cmpsb adc insb sbb mov xchg inc sbb mov sub add loop xchg test repz jle push (bad) aaa pushf (bad) nop jp stos (bad) and inc mov jmp xchg movsb repz jmp inc es lcall and sub push mov icebp pop stc xor jae inc int mov push nop jbe jge fistpll inc push scas div mov call pop push inc xchg fisubr inc (bad) out scas push sub out sbb xor dec loop int3 jns jae fldenv add push dec xor pop inc rol std mov mov arpl movsl insb jle xchg ficomp adc add outsl out pop xor in cwtl cmp loopne xor (bad) fnstsw push dec cmp jl dec iret pop test andb push cmp aad or test out inc pop repz mov sub test shll push add and hlt and push cmpsl std outsl cltd xor cwtl daa ret push (bad) push das cwtl add stos sub int3 cltd aam pop loope and jns cmpsl inc push imul cmp subb cmp mov mov pop (bad) dec inc test imul xor cmpl push into dec xor dec insb (bad) das repz std or or pushf adc mov dec idivl sbb sbb addr16 sub cltd xchg stos lock pop or mov enter mov mov es push sbb roll inc lret jno outsb mov div arpl mov jle pop push push xchg icebp je lods outsl out pop xchg adc loopne mov shrb mov cmp mov mov xchg sbb in mov in (bad) pushf mov mov rolb enter mov jns mov lock scas or rcrb lret lea dec mov popf mov or bound mov int adc jnp (bad) shl lret inc pop rclb jns adc popl test std fistpl cld cli sahf fisttpl popf pop xor idivb loope test xor icebp enter jle rorl lcall sbb sbb ret mov je push push (bad) idivl aad nop mov sbb xor xchg out mov mov mov test cmpb imul test ret sbbl inc dec xchg mov mov jo (bad) pop adc js movsb bound and jns xchg push xchg es sbb aam (bad) jns sub movsl add mov mov mov test xchg inc jns pop adc jg sahf and sub jge adc push xchg sbb and push icebp mov test jl or ljmp sub ret pop pop mov mov sub lret jbe jb (bad) jp or or xchg sub negl (bad) aad aad fdivl test push incl js mov loope mov adc jmp push sub add imul pop sub push sub jb lret in imul fsub js push decl in fidivr lods sti sub call je loop xor icebp jne xchg (bad) jno mov fsts pop xor jo hlt xchg push std dec in jno pop mov inc jg test shrl jg cs ss cmpsb cmp add or movsl jmp (bad) sbb jnp pop mov adc jo scas mov mov dec mov inc shrl in add cltd scas (bad) (bad) iret cs dec pop mov in jmp hlt sub hlt mov (bad) rclb inc (bad) pop jb inc xchg notb pop fldl dec xlat xchg aad nop mov fisttpl gs test mov cld pop dec xor fcoml les pop aaa pop test fisttp fcomip sti lods dec mov sbb es jae out fisub je ffree xor cs in xor fsubrp stc test das cli outsb fs repz sahf int in push jae jns test ss mov xchg notb inc dec add fsubrl cmp sub push fs test sub xor inc pushf repz dec mov mov pop pop sbb repz sbb adc push popa out aam (bad) mov mov mov gs jp shrl inc and movsl test popa ret scas in xor mov push stos xor dec movsl or dec mov xchg xchg js mov cmpsl adc ja push push lahf xor inc mov aas fucomp test (bad) ds fsts (bad) out pop xor xchg out add insb daa push lret cltd lahf cwtl pop insl int3 nop test mov mov lods daa push cltd mov add push jns,pn scas jmp in push mov movsb adc sahf jno rclb (bad) or mov cmpsb stos dec movsl mov jg mov jp rcrl cmpsb sub aaa mov fmul xor xor jnp into push nop mov mov out add push adc test test mov mov idiv or xor fiaddl dec scas das xchg loopne roll sbb scas cld stos pop (bad) ret (bad) out cmp or sub xor dec pop sub sub cmp jbe (bad) jle lods mov (bad) xor int3 xchg mov push insb push jmp jge,pt cs fiadd lret mov out inc xchg test or xlat sub outsl ljmp adc xor fimul mov xchg cmc dec jl push add mov pop xchg rclb inc inc pop pop lret inc dec jnp inc fmuls scas jne sub rcrb mov cmp iret adc push pop push sbb xchg and fstpt or xchg decl mov out mov push test cmpsl dec pmullw inc and lcall in sbb mov pusha jle lret ljmp (bad) xor icebp fimul stos xlat adc cmpb xor and in xchg and push int hlt movl ret cmpl push mov mov mov mov jnp xor mov fsubrs mov (bad) in out sub mov es inc mov icebp cwtl jl push mov jmp lds test sbb mov mov cli add popa cltd cwtl aas jnp sbb (bad) imul sbb in and daa lods xor in pop jo mov fldcw (bad) gs xor icebp add loop pop test clc xor lret ss je mov push lcall js add xor xchg hlt sub icebp sbbl stc cmpsl sbb cmp mov gs cwtl xchg pop inc loop mov cli shrl out stc jns pop inc clc mov shrl gs das pusha test cmp dec insb hlt aad dec out pop lds mov (bad) pusha cli aad pop (bad) sbb stos adc lret lds out push ret mov bound mov (bad) xchg es ss mov lods je xchg sbb insb sbb fnstsw mov (bad) into pop cmp outsb adc ficoml mov jns in mov jae mov mov outsl mov ss inc test bnd sub sti adc (bad) dec push les ficom cmpsl pop adc or add adc aas lock icebp js sub pop xchg adc popa iret lret ss push outsb jg rorl push add adc js ljmp push hlt loope push or stos insl outsb fldt call cmp shrb cmp push popa mov jl fsub jnp and xor scas (bad) xor int aaa mov inc mov xorl adc pushf jno lahf mov inc int3 je jae (bad) mov xlat cmp adc sar jno xchg inc pusha in fst and cmp out pop jecxz test inc or (bad) xchg call notl push jb pop add lret sahf lock sub aam xchg int sbb jbe lret insb sarb (bad) les (bad) jp mov rcrl cmp push cmp sbb inc dec imul fcoms loope sub pop out shl nop mov ja dec nop fs and inc jae jns ret mov js cld xchg js inc sbb out inc cltd lahf mov push pop fiaddl test in inc arpl mov sbb mov popa inc leave stos jmp xor sarl ret adc lea rcrl fsub jae rolb bound dec out adc inc pop sub loop jg das mov inc pushf (bad) pop (bad) gs fchs aad push popf or adc or push rcll cmp fucomi adc imul ja jnp sub jno (bad) mov jl dec jl movsl imul test int3 ret sahf jb loope mov mov ror mov das outsb lds mov in lds xor mull push daa lret mov pop add dec pop popf sbbl lcall iret mov (bad) ja add adc inc cmp xchg cld cltd push and inc dec and xor mov sarl rorb fnstcw xchg pop das cmp scas inc fstpl sarl dec lods pop inc imul pop in cwtl add xor mov out rorb fiaddl je push adc sbb aas imul cld es dec scas inc fisub push pop and push cmpsl mov inc sbb andb push ljmp mov rcl dec jns adc repz jo imul lret lods lret mov stos int3 loop mov dec mov jl xchg daa add stos mov jecxz xchg mov das pop sar xor (bad) out dec pop jns repz mov pop pop jns sbb sti sub inc fstl cmpsb add repz xchg add xchg movsb mov mov pushf int3 aas insb pusha push shlb movsb jmp push cmp push inc dec xor xchg pop aaa pop cmp fs fdivrs add jecxz jge mov iret mov mov ds xchg scas shrb imul sbb xchg in push pop outsl jo cwtl dec xorl (bad) jns jp adc push sbb add adcl mov pop out xor div test test adc loopne dec insb inc add lods jecxz add cwtl adc jle leave mov mov cmp mov push or jle mov test out add mov and ret push xchg sub and dec and aam mov test das ror pushf dec dec pop xchg icebp or sbb fnstenv (bad) aaa pushf or (bad) adcl pop (bad) mov repz push movl loopne jb in cli ss jae push cmpsl js mov das mov addb fnop xor lock mov (bad) fwait xchg das add xchg lea jne and jle out mov inc cld adc and notb sub int cmp pushf xor mov mov repz xchg cwtl test insl (bad) idivl insl int3 xchg cld (bad) icebp dec xchg mov pop cs mov sbb adc pop aas mov dec loopne pop inc gs (bad) cs sarb fwait push cli mov inc in popf call shlb daa or das mov repnz cmp and sbb or mov ja lods dec pushf lret out push inc add data16 aas xor jnp push iret mov xchg mov xchg mov push imul push sub ret or jo into inc sbb hlt testb mov ljmp inc cmp jp loopne mov mov sti pop insb cwtl xchg sahf fidivl sbb or xor test ds icebp leave xchg (bad) arpl ljmp out dec addb aam jg sub jl mov inc cmp ljmp xchg rcrb jbe jmp movsb ficomp push mov aam jl mov popf popl lret mov sub inc xchg icebp lods sbb les (bad) cltd ret sub sub bound repnz roll daa sub xor iret adc sarl daa sub int insl pop dec leave fwait and test orb jg xor cmp inc xchg fsubrl outsl je push leave test pop jl sub inc hlt aam xchg sub inc xchg out mov repnz fldcw loope daa test xchg fistpl jb inc into adc (bad) adc icebp popf scas pop mov xor and loope dec js,pn ds (bad) rcll dec outsl pop mov (bad) imulb andb (bad) sbb fs jmp jp jae jnp xchg insb lret (bad) xchg xchg dec xor xor leave adcb jnp int push xchg dec popf pop pop or or sub push mov inc dec cmp pop inc push lret jne enter dec cli dec cld mov lock inc sbb ret out xor pop (bad) sbbl sub xchg aas std and push pop (bad) insl cs ret aad jp loopne mov cwtl fstpl loop xor not stos add aaa cwtl ss dec cmp inc je,pn movsb cmpsb and cwtl aam es ficom out in pop pop es xchg dec sub in jmp dec sbb cwtl (bad) push or lea pop sbb ds clc fbld jl adcb cmp std jae and jl divl xor pop mov push sub iret rorb dec jnp or mov jp gs fldt je add bound rcrl and ja popa cltd addb ficoml dec lret inc cmp cmp lret pop mov clc xor jle icebp xchg lret aam push mov imul ret dec sub cmp sub test sbb mov cmp lahf gs dec sub ds mov xor daa imul ds dec jae mov add pop and dec pop lcall fisubr js or je mov inc dec insl repnz push into (bad) test mov bound mov add xchg mov adc clc push arpl jnp lods rcl out mov pop mov into ss cwtl ss inc jle int3 icebp das sti lea sti ret xchg mov les inc sub lods and pop aaa ds testb lds hlt jle sbb scas lods push nop jmp mov push and rorl sarl and mov push pop icebp push int3 push and daa shl xchg sbb dec inc pop (bad) fild sarl les mov jp shrb int push incb dec adc sub mov popf gs mov mul repz sbb jns inc add push int fwait out or adc pop insb mov pop dec idiv ljmp hlt and cmc lahf sti xor call jo in lods fbld insl adc loopne movsb dec mov inc jle icebp xchg sub xchg push mov pop xchg xchg mov scas xor test cmp (bad) jns imulb out mov in rorl pushf mov mov mov fucomp imul ret rcrl jg mov xchg mov mov out sarb push mov or incl and in sbb and pop jae mov loopne or dec pop push and dec (bad) fildl push arpl fstl (bad) xlat sbb outsl mov insl scas xchg into pop out (bad) mov shll into aas add mov into mov mov dec push hlt dec or loope push inc mov out add or push in fstl addr16 fdivrs fldenv jne rcr and (bad) test xchg in lret jmp lea outsb push ret jo enter xor popf or jmp xchg fldcw loope ret testb mov or sub add fsubl scas jb or cmp pop mov out pushf jp add cmp lds push jns xchg ja incb push shl mov ret xchg dec mov std ffree negl pop cs mov cltd outsb ret aad test inc mov clc incb cli adc cmpsb xchg push dec mov mov je and xchg cmpsl scas push mov mov fcom dec ja das push pushf sti ja inc push xlat mov (bad) (bad) int imulb push or int3 and into xchg (bad) mov mov push stc cmp xchg dec and test push adcb push movsl cwtl xor mul xchg dec scas cmp cmp add fsubrs push dec leave movsl test sti int3 pop clc dec jmp adc std sub jge in and add mov mov cmpsb mov xchg shl jno mov gs enter cmp mov cmovne testl mov int cmp outsb rcrl lods add ja xlat or push sbb adc mov mov inc jbe push (bad) mov out mov ret shrb std cmp mov jbe push les pop mov cwtl mov cmpsb mov adc shll jle cmp adc loop out cmc sahf imul sbb cmp push movl call lret ret loop pop xor jecxz and (bad) lret push mov push mov jo (bad) sbb xlat (bad) call cmpsb mov push hlt shr sahf scas xor data16 je daa or fucom xchg adc lea fstps jno mov clc inc stos leave sahf rolb les sub inc xchg xchg ljmp sbb cmc js jp add push or adc dec rcrl out inc push sbb push push hlt addr16 ficompl add dec xchg inc rol das jmp or cmp push xchg add es adc mov and rclb js sub mov dec movzwl pop aad jnp (bad) arpl pop fwait adc xor fucom out (bad) jo sub cwtl (bad) push cmpsl jns pop dec sub adc push loop and ja push dec fiaddl jmp cmp js pop xchg adc rcll data16 sahf jb push ljmp ret dec pop jno das or fninit arpl xchg jge lea mov test and mov bound lock xchg dec lods dec pop aas scas sub sub xlat negl aad lahf pop aaa negb je outsb dec movsb ljmp lods js mov inc fadds mov push cmp fucom fwait mov jp out jge les or mov jne push insl sbb out xor addr16 dec int inc imulb mov xlat xchg (bad) adc sub and or std jns xchg cmp xchg sub aaa and fisubrl or lods pop jbe ficomp pop jp pop push cwtl cmp or insl pop nop or daa addb push aam in loopne int scas (bad) add dec rclb xlat loopne or jae jmp mov mov xchg xchg mov xchg sbb mov ror xchg mov xor adc adc ret pop or mov cmp andl mov and (bad) jge aam fstpl dec mov or dec loopne dec push inc loope pop mov mov (bad) mov mov test fucomip std leave inc xchg pop xchg and inc pop push fnstenv push (bad) imul fcomps nop scas enter xor mov into arpl call mov xchg nop push inc vpackssdw es cmpsb lcall adc inc rcl jns fidivr out pop cmp mov in pop adc hlt test fwait aaa iret push shrl out arpl movsl out dec sarb test call jmp jmp js lret add mov jbe sbb inc inc mov add mov hlt fnstenv pop sbb outsl inc cli or mov add sbb pusha dec mov dec pusha xor and adcl add add sub push lahf cs iret lods jae or and xchg mov aad mov push (bad) aaa add lock xchg push jo movl cmp sbb ret inc mov test ljmp or enter aad inc xchg cwtl (bad) out std (bad) push xchg jl testl push pop int3 add and rcr stc push pop add icebp insl imul lcall sub mov sub inc popf pop scas mov jecxz dec out scas in lahf cs adc out adc data16 or mov jo mov mov mov cld out fmull mov lods daa xor xchg xor into pop mov push mov lock sahf insb aas jmp jb xchg mov jecxz mov inc loope or test fisubr xorl test hlt outsl mov ret inc ret cld xchg test outsl cld jle stc mov cmc push add adc pop xor rcll push xchg data16 xor lods xlat or xchg cld add pop sbb imul (bad) ja and add xor push xor (bad) mov cs pop inc cmp xor imul scas mov jne dec cltd cmpsl push pop cld xchg sub sarb jno aam sbb mov and pop push add jmp adc ffree sbb xchg in js je add repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) fild add pop sahf scas sbb sti xlat pop jmp dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsubs add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg cmp insl insb sub fnstcw lret stos (bad) cmp (bad) js xlat ja (bad) mov add mov add mov mov shrl (bad) lock rolb inc clc adc inc add push es inc adcb push call or mov jg jle cmp xchg leave pop sahf cmp push jmp lods mov mov pop push fwait inc cmpsl int iret popa mov mov mov sub xor inc jne add inc adc cmp cs inc inc imul cwtl cmpsb push mov stos outsl inc adc add pop scas sahf cmc ds cmp push inc xor xor js test div stos cwtl pop testl xchg sbb sub xchg sti clc imull fcmovbe ss in mov dec sbb jl mov stos push cmp cld loope add (bad) mov inc dec xchg mov mov xchg pop int jbe push xadd test test pop aad mov ja movsb mov xor sarb sub sbb jg or rol cld adc (bad) push push das lds hlt lds mov adcl mov and jge ja aaa push mov fist icebp jmp jge shll pusha call or push lret lahf xchg in pop jmp repz int addr16 and dec outsb push jg jbe cmpsb adc lods sbb std loope add ror mov jns int sub cmp xchg dec xlat mull mov popa stos iret mull mov ret mul lea push push inc jne mov adc std mov popa loop cmpsb mov push jbe out dec rclb and jg (bad) xor stc sbb sti adc jae add dec flds test jmp mov mov jl push shl lds in outsb mov mov sbb mov fsubl int3 lcall jecxz les push mov xor in cmpsb sahf push fcomps (bad) xor dec mov pop idivl pop pop aas jno scas or sub jle jnp push cmpsl mov push and sub cmpsb xor test movsb (bad) cli or ds ss popa (bad) in add sub into mov (bad) mov inc mov addl pop lock (bad) cmp rcr xor and inc push jmp cmp cmpb dec push ret (bad) lock out mov les push ret add faddl scas dec insb clc dec or or imul insl jnp xlat popa rclb mov sbb inc addr16 cmp in sahf cmc adc mov dec inc pop mov scas cltd mov jbe std push fsubl jl dec ror jo negl data16 ja lret mov sbb pushf jnp xchg pop and in lods aad repz lret in lea out dec and jno loop in mov fs mov cltd nop xchg mov repz adc dec stos jl fcmovnu jbe,pt xchg mov lods ror outsl inc xchg lds push adc cld mov test sbb js or in pop ret test pop and jne jns xchg aas test fimull sub adc adc scas shld repz or int3 sti xchg cld jmp fsubs jg fisttpl add mov aad rcll pop mov int ficomp enter push aas dec test (bad) shrb roll ds ret dec frstor orl lcall in sbb (bad) (bad) cli popa mov lods jmp (bad) dec jb jecxz cmp add mov cmp and data16 es mov jb jne add lahf xor or je es loop jg jl xchg and sbb ljmp scas mov pop lret cmp jno dec ja ret outsl xor repnz call ss adc addr16 icebp cltd push push adc jg xor in (bad) mov adc cld inc rcr (bad) into mov aaa stos arpl je push and push adc idivl mov mov js les aas dec fwait dec (bad) fs andl movsb dec mov inc arpl std cmpsl dec fmuls and inc push cmc and mov pushf orb inc mov ret loop sbb push pop mov push xchg cs stos add jg push cld adc cs dec mov xchg or mov push push and inc test mov fwait insb dec dec cmp pushf rcr adc fisttpll movsb mov cwtl in inc ss ret add std cmpsb jns call lahf js fs repz sbb dec sbb mov inc test dec cmp repnz pop fisubrl dec push and push (bad) mov mov nop mov jne loope xor ljmp cltd imul cmpsb dec or mov cmp enter call es inc jne xor test ja sbb pushf inc cmp or dec push sbb mov mov add or int js imul je and jb lea jecxz sub (bad) imul ficom pop ret and aas mov sbb push sbb pop pop xchg sbb lds lea test sbb cs hlt jne or gs nop and inc into neg out or pop pop jecxz daa xchg pop push aam add sbb outsl xchg stc shll scas push and cs cmp mov cmpsl cmpsl pop xchg push jne pop push dec loope aaa lret icebp xchg mov out or sub sbb popw fisttp push pop in leave and jo push into xchg sub (bad) outsb cld int3 movsl jmp and int cmpsl pushf xor shlb cli in inc sbb imul xlat in pop movsl gs mov inc lds shlb insl ds pop add outsb enter jl mov push loop repz or mov sbb xor fisttpll and out mov and dec cmp scas pop or aaa sub push jb xchg inc ljmp movaps int3 dec pop pop outsb test mov push jecxz jle xchg js das pop icebp testb cs test lret inc fst mov pop lock mov ljmp pop cmp fcmovu das fstl cmp dec int3 mov push inc mov lds jle hlt scas or mov and dec ret repnz lock and rol dec das sbb je lock jp sub arpl pop fwait and cld aad and sahf or push ret test pushf stos (bad) sarb in (bad) mov push xchg dec adc mov ljmp cmp outsl sub aad imul sbb int3 push (bad) sbb xchg push cld adc popa inc gs and lods (bad) or ret cld sub imul std mov inc mov aas js cmpsl and decb out (bad) sbb adc cmp push push bound cld mov loop sub mov jg sbb and inc repz and lds daa jne sbb mov cmc jg mov push faddp jo bound repnz std ds loope mov sbb jl movsb inc xchg dec pusha cli sub adc xor mov (bad) push aam xor lock mov int and pop mov pop cmp sahf or or adc aam and mov jb data16 add xor fidiv rcll xchg xchg sbb xchg push neg mov mov aaa mov (bad) push imul and jae jle push push stos and mov push sub push std adc ja and dec jecxz push mov nop cmp sarb repz mov push aad jne mov pop push jbe movsb sbb fucom movsb (bad) jb popa stos xor je stos xchg push push nop ss mov lcall repnz mov mov sahf jl mov bound dec xchg (bad) xchg add gs xchg xchg dec push aad adc inc dec clc lock lods inc in mov out jp pop mov adc mov mov dec inc sub (bad) sahf cmp xchg xchg test jmp or xchg jnp dec rcr mov nop aas or rcrl sub inc or jecxz fisubl lret push and stos pop scas dec sub mov scas push pop aaa andl sti loope xlat ja or sbbl jl lods jae cmp je (bad) mov sbb (bad) jns cmp es add adcb add insb adc inc shll mov mulb push lret imulb js mov ljmp loope out je out repz mov and jmp fbstp sbb ds test or dec cmp shrb lock push pop sub jl sbb xor push jno test pop clc (bad) push jmp int3 ljmp lods popf and test adc cmp movsl bound adc and stos lods cli pop pop push mulb xchg cmp in mov pop push mov push push loopne mov lea push out mov aam or mov xchg xor mov test or fwait sbb xchg leave sbb push push pop xchg dec pop insl xor and push ss fnstcw mov push pop jns cmp insb mov jp rorb xor jo jecxz gs mov mov pop pushf mov push adc mov add lcall dec mov loopne pop divb loop inc je stos loopne cltd jl mov sub cmpsl cli iret sub ja fidivl sub scas mov notl jge add push sbb inc addl lret dec arpl or cli push aaa pusha or jmp mov mov mov repnz mov les pop adc mov pushl jmp sub dec dec xchg xchg mov push nop adc push out in cmp pop pop (bad) mov adc jbe es into clc pop (bad) push stc icebp fs test jns jae into xchg adc xchg das cmpsb call nop xchg push mov xchg lea cmpsl out sub js icebp mov mov sbb inc jmp cmpsl sub fildll mov xor xchg push dec mov clc out aad out (bad) fiaddl pusha pop or pop cmpsl mov push xor insb mov addr16 push nop call xor mov xor loopne dec cltd into dec xlat xchg (bad) leave add aas (bad) enter fbld mov or rol cmp mov mov jmp pop lods push inc sub std add adc hlt pop mov aaa mov push rorl and cwtl out insb mulb jle out nop movsl pop dec jae xor nop jns movsb lea std pop in and or fisttpl movsb dec or pop lods mulb adc mov sub add cmp in sub cmp lea mov lret mov xchg or cmc add loopne mov scas sbb push (bad) jb push lret decb and adc xchg dec int dec xlat popf or cld ds stc sub jno lret (bad) dec nop jg aam dec cltd lds rcrb and xchg pop pop mov js xlat dec pushf repz cmp jmp push sbb cmp jo loope sahf mov js cmp jnp in scas lahf mov add jb lret movsl sub adc insb ficomp lea fwait mov dec cmp dec xchg jne icebp (bad) in arpl xchg test sbb dec loope js add lock xchg lret cmp add or push jbe ss repz roll aad xor stos add xchg add add outsl test jnp clc push loopne mov or jmp gs mov outsl sub outsl mov sti mov ret mov cmpsb sbb lcall cmp mov stc and jbe push xchg push cmp insb push (bad) pushl xor (bad) jno cmp add jg in mov int3 or jo sbb xchg call lock into mov cmp daa xor push push insb stos cmp dec bound fistl xchg sub lcall xchg mov sub adc daa addr16 popf insl js aam jnp outsl mov pop aam inc mulb mov mov pop mov out stos fdivl pop scas fwait imul (bad) adc sti dec lcall push push movsl ja test push dec es sbb jmp and cltd mov gs mov lods into inc cltd dec repnz call (bad) push ja pop sbb (bad) insl mov adc jle pcmpeqw cmp cmpsl xchg cmpsb mov lcall lds mov ljmp (bad) mov into push aad xor pop cmp ret repnz push lods loope and or sahf mov sub xor test add push jg hlt out pop out ljmp adc add sbb jecxz dec insl inc cmpsb pop (bad) jmp mov arpl loopne test bound mov mov imul inc push jmp sbb xchg mov sbb cmp loope cmp bound xchg les popa or push in cmp mov fwait jne mov movsb mov data16 (bad) rcrl jno push dec imul rolb rdmsr in repz into dec pmaxub sbb pop std pop jl sub inc shrl daa loop sbb add fwait rcll push (bad) hlt mov xchg scas outsl push lods and sbb sbb xchg ja mov jecxz dec in pop rcl adc mov aas sahf (bad) lcall jnp dec test dec add inc push fsubrl aad (bad) xor cld cmp mov mov data16 aaa rcrb jecxz daa mov stc push nop test mov stos xor pop dec fldl mov ss xor out scas adc jno mov xchg inc or movq daa into ret mov lret push sub add mov mov pop test dec or cmp push loope test mov out ja call mov out or js and or test idivb pop (bad) into out out sbb test sub jbe mov pop jle out mov clc cmp imul dec (bad) sbb xor mov (bad) fcmovb inc cmpsl cmp sub cmp mov sahf xor test fisubr mov cs out inc mov fisttp cmp push mov outsb lret imul xlat aas shr sbb mov dec int3 fdivr outsb sub push stc lock sub xchg mov dec mov aam xor and pushf mov jno aam lods imul lcall xor je std bound (bad) mov dec sub jae push aam repnz in jge mov adc sbb es jmp inc (bad) sub imul push sub push lods (bad) fidivl mov std xor adc or in lods mov and lcall adc push xor mov mov cltd rcl and push pop popf jae sti dec ja stos fs in lret imul inc sub xchg inc scas movsl negb in or and imul repnz pop insb mov xchg gs cmp jbe sbb mov cli lea or mov xchg (bad) jno mov cmp loopne (bad) and sub xchg data16 inc lret js bnd sbb cmp ret xchg inc jb in mov jnp inc xor sbb fidivrl jg push sahf add popf nop xor mov jns sbb fdivr push mov fcmovnu (bad) push jmp cmc add mov jecxz sahf xchg es insb mov test call xor sub lods jmp ljmp xor cmc pop push mov xchg jl push gs jg jbe out push and sbb ret (bad) js push call mov fimul fisubrl shlb test cwtl pushf popa lret aaa jae inc leave jmp sbb cmc inc outsl push or lods rcr xchg push pop cwtl popl or mov fstpl dec and and fist loopne std out jge xchg pop repz push add cmp inc outsb sahf lahf jle xchg sbb imul sub mov push xor lods xor stos jb (bad) (bad) inc mov jnp xchg stos lret pop push fld push sbb pop mov mov cmpl popa lock stc out mov sarl pop lret jle lods (bad) dec or rcrl lods test or outsl and push lret push daa add (bad) sub jo cmp jg inc jnp mov movsb daa out jmp jbe xchg test sahf rcrl das loop sahf js cs push jne xchg fisttpl outsl fldt mov (bad) ja fs stc cld pop das dec and mov cmp outsl sub mov sbb mov ror imul scas outsl ljmp es adcl (bad) test push xchg iret scas outsl loop xchg pop xchg movsl cmp dec mov rclb addr16 rcrb lods push pushf out jecxz shll bound pop data16 mov (bad) psubb scas push or (bad) fistpl jmp mov push mov das pop jle pushf clc push lcall push xchg jae (bad) imul movsb push mov aas pop xchg jle adc cli mov bound sub or paddusw iret inc into mov fcomps and and test sub shr and pop lock insl loopne dec lahf pop repnz ja in ret test jo mov (bad) mov test cli sbb sbb scas mov lea mov and dec enter loop mov inc (bad) mov test in addr16 cmpsl cmp stos loopne call pushf popa cmpsb pop mov dec popa cmc jmp orb repz mov add dec inc (bad) lods rolb xchg lcall icebp ja xchg cwtl ss lds aaa sub mov mov lahf enter sbb movsl cltd scas cs mov stos sub mov movsl pop mov call stc (bad) mov sub mov xor sbb (bad) or popa stc sbb js pushf cmp or sahf push mov (bad) loopne popa into test push push xor cmp adc mov rorl and mov dec popf cltd and negl pop add xchg fdivrl inc cwtl je xchg jle push repnz mov scas gs xor lret or mov xchg sub xchg arpl add or je out jo xchg sbb dec xor dec enter fwait pushf inc int adc pop ret push pop shl sub mov sub mov in lret imul into rorb pop loope ficompl inc in outsb push pop cwtl adc and lods pop ret les jno mov xchg sub insb cmpsl bound das cmc out jle movsb sbb fwait mov imull sbb in mov test jg (bad) fidivrl cmp aas sub sub fildl cmp cmp ljmp stos insb push cmp pop or out sub test movsl add mov mov add cmpb jg lcall movsb add and test ljmp adc les push mov sbb popa mov ja dec (bad) jnp and adc aam fcomps jge daa mov imul xor and pop jp or in aaa add stos sub pop fwait mov mov stos loope and fmuls outsl and jmp push add test rolb pop xor mov and xchg addl mov push test cld and (bad) cmp xchg js lods push or scas add lcall loope sub sub mov into pop pop pinsrw lret stos pop mov icebp push and (bad) pop sub aaa (bad) dec fwait xor pop out jp fs and inc imul pop fmul insl cmp xchg or inc jl mov dec cld mov dec divb xchg imul pusha enter ja das daa out call idiv test idivl lret ja movsb adc lds sub jmp cli es shrb fsubr leave and cmpsb xchg (bad) mov mov jmp cwtl cmpsb lcall ljmp lds cmp out jle cmc sbb sub sti jns divl dec pop and or cmpsb inc (bad) scas sub loop or push xorb (bad) in mov dec jmp ret mov mov js xor push mov mov adc jg dec xchg xchg xrelease lods mov mov scas jb ds dec sub mov inc bound pop out mov jg mov daa mov and xor frstor nop shll ret loopne out (bad) mov mov jbe jo imulb ret xor mov icebp push xor aad mov stc popa cmpsl jo adc pop rolb in (bad) jg clc fcoms aas ljmp mov cwtl rcll pop divl mov lret pop mov (bad) xor adc push xor sarb stos sbb int3 jb lret cmp aam lock cmpsb sub sbb mov (bad) fsubs sahf fsubrs pop mov sub out popf adcl stos xchg movsl insb xchg inc adc mov push push mov fs lea mov xor push ret xchg jb fcmovb (bad) sbb aam fimull addr16 pop inc inc inc or mov pop pop mov jl (bad) cmpsl test inc movsl test and push jbe popa fistpll adc xchg jl dec dec fiaddl push in adc adc cmpl cs sbbl jg (bad) dec sub jo push and sbb insl xorb mov ja cmp sub cwtl daa add sub inc arpl add jecxz cli int je aas arpl rcrb mov lret mull inc mov adc push lcall addb lods daa cmp iret or or pop fs insl aaa jns push mov xchg fnop adc negl add imul mov out mov xor inc mov push pop call cmp fdivrs add and sti pushl cmp mov cmpsl aad aaa fs mov push push lret popa sub movsl mov bound scas jg addr16 ja rorb mov mov and arpl in pop bnd dec mov imul ja dec xchg dec xchg push add and sub and push fmuls lea and out mov push fsubs mov sahf or inc push sahf int3 cs shrb in mov dec inc jmp adc inc adc mov sub rolb mov xor cld iret xchg dec xor xchg push les cmp lahf and lds sbb cmp popa jne repnz ret push inc or xlat call (bad) fcmovnbe lods mov sbb ljmp clc inc sub xor push dec mov pop cld icebp jg inc in jecxz outsb sbb hlt fwait rolb add lods daa push aad mov movsb sub test test lods cmp inc push out cwtl daa outsb inc sub or cmpsb jmp test jnp cmp or mov xor pop out mov add xchg popa cmp out cmp xor mov or test ljmp xchg pop push push lock ret inc cwtl (bad) jno fstpl push xor (bad) adc mov or test out out jge (bad) dec inc and rolb and jmp cmp je pop push call psubsw mov inc sub push mov dec jp stos out pusha xor imul rol inc repz dec adc mov test arpl or mov call sbb mov jae dec pop popf in jecxz out sbb dec jl pop jnp inc (bad) jmp (bad) xor ljmp insl jmp push bound ljmp cmp out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz aad outsb sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb jae outsb pop lret mov pop fnstenv push (bad) dec stos daa (bad) push in cli adc or add adc cli sub outsl add xor mov stos mov pop pop gs jne in out data16 daa sti gs clc repnz sub cltd mov push xchg xchg lea cmp fisubrl jae lret jne movsl fist jb roll mov push sbb push in out jge pop push xor adc pop rorl fsubrl xchg adc roll cltd scas int3 sub or jg (bad) xlat or das js jmp ret pop inc or inc adc xchg shll mov xchg jl xor jecxz,pn adc out sbb faddp xorb mov xchg pop les insl cmp (bad) jp dec pop jle cmp outsl ja adc rcl cltd mov xchg jae (bad) aad dec cmp xchg cmp (bad) mov sbb inc xorl test fstps hlt imul int3 jno or mov stc cld dec pop jnp sbb popf pop sub xchg inc loop imul dec cmp add fwait popf cmpsl xchg out sar scas leave sbb pushf ret stc (bad) enter lea sbb cmpsl xchg mov push xor add js jbe cmp imul pop jo pop aad into adc mov mov dec popf xor es mov pushf inc pop push int3 out and mov pushf pop rcr push mov sbb pop scas arpl fucomi das push js push mov dec jmp (bad) lock aas or dec push pop (bad) sahf cli dec cltd ja sti jbe int3 mov xor aam cmc popa iret and popf fstpl mov inc (bad) fs loope cwtl xchg into cmpsb mov stc pop jbe cmp mov test (bad) cmp push xchg fistp jmp popf mov inc loope cltd ja cmp sbb ret lea mull mov push das push cli test jg ret add popf jle roll pop rorb ret negb dec sahf jne nop sysexit fnop mov (bad) arpl outsl in cltd inc dec mov inc cmp mul pop add (bad) icebp xchg push sub test dec xor repz xor mov out and loopne fistpl rcll loopne mov into inc jl pop test push into daa ret lds mov push adc xchg out jge mov mov fnstenv ljmp je or loope cli sahf cwtl push push test push (bad) pusha inc push adcl jg mov sarl rcrl in mov gs jbe daa loope sub cltd or (bad) cli jmp lea mov mov mov ljmp call or push scas pop add rep mov pop xchg shll pusha xor pusha arpl (bad) xchg push mov mov xchg arpl cmp jmp movsb stc mov lret push cmp mov pusha mov dec (bad) lods stc das loope repz mov inc popf add sti (bad) cmc mov sub xchg jns fdivp pusha mov add (bad) js add jl or mov dec jp pop shr xchg and addr16 xor push adc push xchg std fdivp lea adc mov cmp (bad) sub sbb lods cs mov sbb adc pop rolb outsb jns in subb int addb add inc loope push pop ds xor dec popf cmc push movsb mov mov aas cwtl sbb push push inc cmp popf jno mov mov fcom into cwtl push dec lock jo sbb ret pop sub mov test jbe test cmp inc pushf aas sub push mov sbb pop add insl sti test push xchg dec aad imull sbb jae popa (bad) repnz push in inc push fwait loope add arpl dec (bad) in sbb (bad) mov pushf sbb aam adc lret inc mov mov push mov xchg jmp pop mov fiadd push mov jo scas imul movb and pop pop pop lret (bad) test fadd daa inc out aam xchg pop ds or cld insb aad mov sahf and adc push pop daa (bad) flds sahf xlat testl lahf pushf repz mov pop mov add push sbb mov pop ret mov push cwtl push outsb xor add repnz sub lds fwait cmp mov rcll and inc jns cmpsb ja xchg and sbb jns jne push test loope adc xchg add inc shrl (bad) xchg add push xor int pop fcompl into (bad) sub int mov inc add lock cltd (bad) xor lcall out lret or adc sti (bad) dec ret jnp push enter lahf enter popa aaa test (bad) add cmp cltd movsb int out lock int3 ss or es cltd dec in aam adc test cmpsl dec jl ljmp jo sub outsb sub ja stc gs mov sub test out push sub sub arpl ds aad dec push rolb daa sbb pop das sub (bad) jp push xchg jnp dec sbb es push mov in lahf popa jae cmp sbb pop dec sub pusha stc cmp add jns pop mov pop loopne xchg stos xlat sub inc jecxz inc es mov (bad) iret imul mov hlt add out shr test sbb sub and pusha sub movsl scas mov out jb lods sbb and lds jmp mov or xor outsl jg mov stc ss es lret in push mov shrl push push adc push push cs mov dec nop xchg dec push xchg stos stos push jo xor inc arpl push mov jae fs fsubrl lret imul call (bad) ss jmp jmp push inc mov push lret in adc scas add popa leave mov sub test cmpsl and dec sub dec inc inc in xchg add or mov mov ret push daa dec pcmpeqd pop (bad) mov out sub cmp imul rcll dec sub outsb xor (bad) adc or sahf xlat test repz lods test movsb cmpsb xchg popf xor push das cmp push sahf cmpsl mov adc xchg mov imul mov fistpl pusha mov sub repnz loope adc and add dec pop (bad) mov or or inc insb dec jg idivl in cltd int3 xor (bad) pop leave out test mov je (bad) aaa subb sbb inc cmpl jbe int3 ret and test inc xor enter and lcall mov gs fnstenv inc pop cltd push jmp mov (bad) fdivs dec adc mov scas mov jg lret test clc xchg pop test mov cmp xor leave inc xchg mov jns or ds sbb ss outsb push aam or in lods mov add rorb repnz push ret mov lds cmp sbb or sub in inc loop hlt cltd sub outsl jecxz js lds lods sbb pop add inc inc cmp ljmp dec fucomp inc mov out shlb push sbb or nop mov je cmc aad adc cmpsb rcrb sbb fs jecxz pop test pop xchg adc (bad) test mov push int dec mov fucomi sbb imul pop stos pop movsl mov dec mov cmpsl stc repz cmpsl mov mov or (bad) dec mov dec lret mov aad std push stos ret pop rcl cmpb rcl std cmp ja add dec add jae jb xchg rcrb push int3 gs sbb stc inc adc xlat pop pop popf mov xchg mov das mov add icebp in pusha add mov mov pop in inc xchg popf push adc leave fs ret or add jnp and mov or mov pop outsl (bad) call pop (bad) pop pop rcr mov adc pop (bad) inc fstpt xchg mov test cmp dec lret clc sbb stc (bad) adc cli gs in cmp cmpsb scas leave pushf inc mov bnd jl dec push pop cmp xchg jecxz jne inc test mov out cmpsb mov div movb inc dec in mov sub mov jge fimul rcrb xchg ds xor xlat or cmpsb addl (bad) (bad) xor outsl ss shrb loope jnp popf push lret dec dec sti outsb push mov ja xchg mov add (bad) cmp aam pop mov out cmp add pop dec (bad) mov push mov and add mov cmpsb mov scas fdivl pop inc jecxz jmp jne imul aam jl faddp push inc dec enter mov mov mov push push dec push pop inc stos xor aas xchg pop sbb cmp arpl xor test add (bad) xor xor popa in (bad) sbb push push mov xorl aas ljmp mov ret or cld das aas divl or push or stc fisubrl lds inc loop cltd sub pop adc ja push adc jns pop jne mov xchg pop lock xchg repz push pop das mov popa es int pop sbb cmpsb dec fstps jg pop cmpsb cmp ret ret sub mov sub icebp mov add mov lock hlt aaa stos into mov test jbe mov pushf xchg jmp clc xchg (bad) jns cmp cwtl pop and (bad) dec pop outsl or dec inc js and lahf repz fs dec sbb pop cmc (bad) and mov sub inc mov jp mov rcr xchg js stc or bound fidiv mov or ja div push sbb imul lahf test or imul sbb fnstenv fisubr pop js xchg inc fnstcw (bad) ljmp idivl jg,pt (bad) pop nop loopne inc (bad) sbb fdivs aaa cmp fdivrs in mov call repnz inc repz incl scas jo in sub or adc xchg jmp fwait jnp mov into dec andps test jmp adc mov fnstenv cmp leave icebp (bad) sub movsb daa loopne sub adc sbb lods mov popa cmp loope mov cmc cmpsb or lret mov and push sub jne push mov jmp dec pop xor dec fsubr push pop cs clc inc xchg xor ret cmpsl xor int sub arpl push in imul add push pop (bad) mov cld pusha inc mov pop popa sbb sub int3 gs imul repnz pop xor leave lahf test xchg rcrl mov xchg fwait nop mov ss dec cwtl movw (bad) insb xchg addr16 enter fistpll adc push xchg loop fs ret sar push jnp mov enter je mov mov mov gs pop aad inc sbb sub clc dec mov scas (bad) pop mov fs dec ret das and mov mov inc push lret jns fwait mov jl lret inc jg out loop and test (bad) sbb sbb sbb mov jg mov mov xor add push sarl (bad) push sbb sbb xor cmpsl add mov fistpl sub popf jmp jno cltd push (bad) dec mov and adc xor sub sub imul dec pop sub pop xchg data16 cmpsl nop jmp dec lahf mov scas dec mov out jmp or neg out mov cmp shrb adc inc aad (bad) ljmp mov push sub icebp mov imulb (bad) stc inc sbb rorb cmp ss cmpsb out sub into (bad) jmp xchg mov dec or jnp (bad) and imul jp pushf inc stc sub mov cmpsb jmp cltd in cmp outsb jle scas push cmpsb or jno sarb sti cli aad jmp fnsave cmc lock mov out test sbb mov add cmc mov pop jmp push mov mov mov es testl (bad) dec popf jmp and adc add rcl adc mov sbb lahf imul sub mov push mov adc push jnp pusha cli lret adc std test xchg gs adc repz dec push xchg mov push sbb and xor push xlat sbb icebp repz cmp fnstsw cmp fsincos ret mov sbb das scas fwait mov sarl xor (bad) in cli xlat gs dec imul pusha stos mov pop add pop addl xor in add gs repz mov (bad) inc fstpl jae (bad) rorl fs sbb push aaa mov fdivrs dec xchg hlt lret cmp xor sbbl dec sub adc inc cli jne xor leave push xor insl cltd or addb lods mov das aas adcb cmp push xchg (bad) (bad) xorl popf jne dec leave pop shr sub (bad) lret divb dec inc out mov lret xchg sbb inc and (bad) cs mov in jbe inc das push jne outsb jmp cli sub sbb lods in jp outsl das es loope movsl and and jge mov mov aam sub fs lret fsubl js,pt xor es jg mov icebp sub aam scas xor addl xor sbb fs pushf leave hlt cmp inc ret inc push cltd dec xchg mov xor leave mov xchg mov pop movsb je jnp push clc mov and (bad) mov inc outsl xchg into inc jge jno add cmp sbb ss xor xchg jae,pt subl pop (bad) push fisttpll xor xchg (bad) pop lcall xor lret cmp cmp push pop pushf mov dec push outsl cmpsb sbb fistl jb jno stc mov xor mov xchg out inc mov nop adc ja or and in cs in mov (bad) sahf test gs dec (bad) fisubr mov movsl cmp add mov mov loop imul aas mov loope pop rcr stos imulb aad mov xchg wrmsr xor cmp push mov cld fild mov int3 std imul jbe or dec dec push dec les or (bad) jl jp sarl mov in std popa push push inc dec add outsb repz cmp fs ja adc push hlt stc pop jo sbb ret inc mov bound jne scas movsl sub mov sbb (bad) lock fstl cs addr16 sahf and push pop (bad) aas jp stos clc mov inc bound pop cltd dec jns xor lods push add lods mov sub lahf mov sbb popa sub jp or test push add (bad) dec les jns mov pop push cltd pushf ret (bad) in mov dec hlt xchg dec pop adc and or push ds cmp push out add orl push ja aam mov inc fadds push stos mov dec and daa jbe pop jne add sbb scas pop cmc test and push mov nop fsubr xor fistl enter add lea xor je push rcr cmpl clc sbb out sahf ss je jo mov push sub adc sti lret xchg sbb outsb aam push xchg inc cs cld shll jnp xchg sbb mov pop jl mov inc inc test outsb sbb cmpb mov mov popa dec or int jbe sub clts mov inc arpl je or mov mov jp outsl sbb xchg mov and pop push sub or sbbl dec inc dec ret addr16 (bad) xchg in imul sahf stos pusha jmp adc sub (bad) repnz out ss add pop lret jo sahf js rolb incb mov ss inc aas repz call xchg adc mov jae loop xchg cmpsl cs pop ret call stc test jo das bound sub movsb arpl lret adc movsb lods sub sub movsb mov cmpsb cmp dec cs and adc and dec jb (bad) and insl inc jne xor mov sahf fsubrp int push jl sub fidivl das push mov mov inc (bad) int inc mov lcall cltd test pop mov clc (bad) mov lock nop test in xor repz or lds jmp movb cli inc jmp jnp int3 (bad) cmp xchg push stc mov outsl stos cli roll stc arpl aad adc pop gs xchg xchg dec inc mov repz (bad) in sub dec testl add icebp arpl cmc xor aaa movsb add sub sbb outsl dec cltd and pop inc xchg lea scas pusha push clc sarb in adc pop sub in cmp pop lods imul les xchg (bad) mov lods repz and inc push dec imul push or negb mulb add xchg fimull adc lods insb out cli cwtl jp cli dec mov push fs cmp mov xchg loop loop mov (bad) fldl cld cmp jno mov pop xlat mov clc mov ja inc lret jge in test cmp push or mov inc in jo lahf push popa mov pusha adc cld popa notb fistl jno fistp lea sbb out pop adc and (bad) sub out daa sbbl or mov mov sbb mulw xor scas sub cmp adc into out pop sarl add pusha lock insl imul (bad) xchg arpl jmp ja jmp loope dec cmpsl xchg push (bad) jo cmova sbb cmpsb movsb mov xor iret mov rcll test popa or js in and inc pop sbb outsl sbb jle and push jae mov icebp cwtl pop xor arpl sahf out xor (bad) adc into push (bad) dec stos pop ret jg lods mov add sahf lret jle sub inc jl (bad) js and xor (bad) jns dec in xor lods dec fstl and mov out mov loopne jp mov sarl shll cmp leave (bad) test push add inc (bad) cmp loopne xor sbb lods mov xchg ret push bound jnp out aas xchg in inc (bad) scas dec ljmp pop jle adc xlat pop sub notb mov push jmp jg in and xor in xor mov and (bad) inc das rclb hlt mov hlt mov mov in mov mov or es sub test jp lea add add ret cmpsb sbb cs int ret jg es into bound (bad) xchg decb test sbb roll mov mov cmp xchg dec sbb inc in and cltd cli or xor cmc icebp sub xchg data16 cwtl fild xor adc fidiv lret arpl fistpl lock cmpsb jb lret cmp repz in xchg push outsl (bad) pop adc add jns nop cmp cld lret sahf xor lds mov (bad) mov cmp pop add adc adc sub ret xor fiaddl (bad) and xchg pushf xchg out jmp and into adc stc mov (bad) xchg repz cwtl xchg ret lret mov cmp jns mov loopne stos mov fstl lcall dec jecxz xchg xorl xor test xchg xchg loop mov lret jae dec add clc dec test sbb or out push fidiv sti inc adc xchg movsl dec push ss arpl lods hlt and jne or stos add inc in jnp iret xchg pop cltd inc out (bad) mov aas div jge (bad) pop loope fs shlb pop mov jle sbb dec inc mov out lods lcall xchg aaa add pop mov jb fcoms add aam fidivr jne mov mov test pop mov jno aam test xchg push mov add fwait dec sub sarl xor iret icebp mov shr mov movsb cmp jg js imul scas xchg mov jae sub jo push test call dec mov push lcall lock or loopne ret mov sahf fsub shrl sub sbb je rorl mov sub ret and (bad) mov xchg pop std stc push out xorl mov inc lcall cld xor je xchg fistp dec rolb xor mov in jne (bad) (bad) cwtl (bad) mov bound (bad) push fldl lods sbb push pop fisttpl dec into add clc aaa and leave xchg les inc push lret hlt jmp ljmp addr16 pop push icebp push pop xorl stos and arpl cwtl data16 scas addr16 (bad) (bad) ficoml cmp mov or lret int mov sub inc adc push mov (bad) in cmp pop sbb xor mov es jne and add or adc outsb dec movsl mov fcoms pop xchg movsb xchg fmuls jge pop dec std sub dec in (bad) in or pop loope scas pop xor sahf mov mov mov sbb inc add inc dec jge lods jne add jecxz push adc sti mov and js data16 in leave mov repnz pop pushf pop aaa mov xchg aas (bad) outsb sub fldl dec and push addr16 sub outsb das fildll xchg inc sub (bad) push lock jge jae mov dec xor sbb outsl add inc loopne data16 mov in pop sahf and xchg xor mov std cmpl loopne cmp insb bound add mov sar lret outsl push loope pop push out loopne inc push scas addr16 cmp fadd nop and bound push lret sarb xchg sbb ret imul (bad) and repz mov xchg scas in inc rcll add fdivrl mov movsl test (bad) mov gs mov or dec aas stc ljmp test out pop add mov fnop xor jno in repz xor adc ret popf and and xchg jl add mov les lcall cmpsb cmp cmp dec test hlt arpl pop xor jno (bad) sti jl dec sbb outsb adc mov lods mov rcrb sbb outsl inc sarb add (bad) in mov xchg pop push and xchg push adc pop mov iret scas lahf sub pop pop mov les push pop cmp mov iret mov imulb add in (bad) sub inc shrb xor es les sbb cmp and cmp pop pushf cwtl jno js add loope push test push sub push loopne cmpsl pop rcr mov ss inc cld mov les clc push sub mov xor aas xchg and jl pop xor jbe push insl std (bad) push ja dec andl inc mov and popf je ljmp adc cltd mov pop das jl xor pop bound mov cwtl xor adc xlat jbe add jmp mov jnp,pt push dec cmc mov loope cli out cs and (bad) lcall cli cmpl pushf and lcall in test mov jmp test movb adc (bad) leave out xchg pop stos sahf inc mov add in dec lods movl xchg pop xchg dec loopne lods fsubr pop nop leave fstpt fbstp iret imul stos jne jle push inc out cmpsb aaa insb arpl pop mov out and sub push inc aas xor (bad) imul mov orl inc out xchg xchg popf mov and loop jmp sbb gs lret out mov std add test mov inc sbb cltd push leave dec ljmp out add lods mov fsubl pop pop mov adc clc and ficom pop mov or clc fldl fdivl cwtl sarb and xchg lret and mov or fbstp test pop sbb mov add cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz pushl add incl ja and add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc popf or (bad) pop pop scas gs (bad) gs insb mov pop pop ss jg iret cmc pop add push add mov repnz addr16 xor cmpl dec dec xchg test stc test (bad) out and ds (bad) imul add stos cs in ficoml cmp cmp and push jb shrb movsl inc loopne mov xchg loop push cld xor movsl xchg sub mov mov dec fsubr mov leave adc or inc insb lods pop (bad) call inc adc inc movsl xchg pushf push pushf pop cwtl pop inc mov and add sbb dec hlt shll mov xor (bad) mov jl sub in negb cmp cmp sbb push xchg xor mov movsl xchg outsb inc loope or xor lcall dec jp inc mov mov fidivr scas movsl (bad) xor stos int outsb jae ljmp (bad) repz sti iret fwait or cltd popa lret mov inc in cmp dec dec and mov cmp sbb push test push push jle lret rcl xchg insl sbb xor mov bound jecxz mov mov fisttp or out pop add cmp inc scas movsl xor mov insl xchg cltd fbld leave repnz addr16 push pop cmp cltd mov rcrb push dec lods push stos push cli adc xor (bad) inc stos lcall clc sub cwtl (bad) cmp aam pop sbb addr16 inc mov mov adc out or xchg jp shrl enter sbb mov xor in or mov mov scas out xchg push mov jns mov jnp mov out mov add ret shrl xchg mov push pushf out adc dec into in in sbb mov test jns push out push push cmpsl movsl ja pop stc movzwl movzbl jp sbb ret incb popa jmp pop and sbb mov sub aam scas loope push adcl in or xor loop scas dec aaa rcrb in lretw dec movsb (bad) cwtl sub fxch xlat or add lret dec decl mov pushf test addr16 mov add ds xchg cld pop in xchg mov stc ret lcall adc adc aas jecxz xchg or sbb repz inc fwait and cmp and icebp (bad) arpl and lahf outsb mov test test popa cmpsl repz icebp or test jle adc mov popa cmc push sub mov mov pushf mov ja mov into out or sub cli inc (bad) jl add or xor lret fisubr dec jae mov outsl or xchg test fistp sti push xchg dec and mov pushf pushf leave (bad) dec sbb (bad) stc es lea pop add (bad) outsl jl jge and into add jo fldenv adc dec fistpll cmp mov sti mov sub sub repz add sub push push ret pop out mov popf xlat icebp xchg out lods inc adc ss and sbb xor cmpsb in mov xor loopne test stos sub test inc xor (bad) repz divl aam subl (bad) sbb dec test adc sbbl or call push rcll mov sbb mov in loope dec daa test dec adc fiaddl mov test out or sti popa jle xlat call rcll xchg push int3 jno js dec jo push xchg stos xor and xchg fsub pop push mov pop repnz idivl add out les fisubrl aad mov cs xchg xchg pusha cmp adc cmp push (bad) aam adc cmp mov addr16 mov out push jbe ljmp out (bad) ss jl icebp push jno,pn pop jb xchg jnp lods clc pop xor mov jnp push mov sub or scas push scas and push xchg mov sbb sbb gs and out mov push lret popf addr16 (bad) fs fwait lcall push cmpsl fidivr jmp daa stos add xchg xchg rcll scas sub sbb aad shll mov cmp jg stos add stos inc jae subb hlt test clc pop xor jbe imul lahf xor es pop por jae xor and bound not int (bad) push cld add jbe mov jge push out fistpll idiv testl push loopne nop xlat outsb ret lret and fwait sarl flds pop out imul dec xchg push push jp pop xor and gs ds jecxz repnz mov mov movsl (bad) int3 xlat test shrb adc pop fs leave and cmp cmp lahf lret xchg cltd jl sub leave (bad) insb jo jbe mov jmp out or mov push dec pop mov (bad) cmp xchg cmpsb aas cwtl pop push cld cmp (bad) in jno xchg add sub and test shrl dec scas fsubl ficoml jp push mov jmp (bad) fwait mov xchg insl mov add ss fmulp add enter (bad) sahf iret pop inc or or mov lock pushf rcll xrelease fisttpll and ss cmp imul xor sbb and mov (bad) xor ret sahf dec xchg mov cmp ljmpw ljmp sbb inc xor mov cmp icebp cmp push mov dec int3 push push lock pop dec je fldcw rclb mull ret pop ficom pop fmull lret mov test xchg push fldenv data16 jp sub sub inc mov push jl shrl or push dec jmp add push jne xchg jmp je loop cmp imul mov (bad) lcall imul pop xchg adc sub jecxz xor (bad) push jne adc mov push into dec in insb fsubrs or je daa cmp add jae imul jmp xor stos std fisttp imul xor ljmp cmp je xor shr fldcw jns ret pop pop jge std lcall rcrl in push xchg cmp jb adc pop stc xchg adc xchg icebp movsb jne sbb (bad) movsl xchg push push fdivp cli enter mov push lret scas push lea cli (bad) (bad) sbb int3 rcl fwait push jg sub sbb dec push lods lret mov pop ret jo fwait inc xor mov push addr16 jge pusha loopne pop call stos inc mov dec lods xchg adcl push xor into addr16 add fstpl sub pop cmp insb jecxz dec std lods bound into ljmp adc mov dec dec push xor push xor jae dec stc (bad) mov cltd es jb push cli sbb or jb loopne and xchg xor inc mov cmpsb mov jp mov out mov cli sub in adc in (bad) push mov ret adc ss das and mov std (bad) cmc jle cmp cwtl cs test scas jp mov adc dec mov fcompl push subb lods jecxz aam pushf sub xor jle xchg jnp jle das sub cmp enter pop std test ss mov out inc jle imul and xchg loopne mov xchg repnz daa in test fs scas ffree mov jmp loope cmp adc jbe testl mov push lds mov pop mov sbb imul mov call xchg ljmp test incl jmp jge pop addb fimul inc jnp scas push cmp dec gs hlt jmp or and sub int jp shll mov test in xchg sub and lods pop imul sub cli mov ljmp jno int mov in or dec push adc mov push push add insb fisubrl sbb pop (bad) icebp movsl popf stos cmp mov rolb mov out stos leave (bad) xchg jle inc (bad) mov jns repnz cltd xor fbstp cmp xchg pop ret mov int lea gs or pushf dec scas loop (bad) insl sub mov jo sbb addr16 cli aam push cld mov rolb or popf mov adc fwait pop lahf cmp inc or lock lcall shl ljmp clc test dec mov push push cmpsl nop dec std xchg sbb sbbl imul scas jae jle mov leave test cmp jmp jne push sbb sbb push jo std fwait mov pusha jb leave pushf aad dec xchg stc mov mov sarl pushf jecxz or jmp xchg std dec or clc mov fucomp sub or lea dec lds adc dec (bad) iret jbe push adcb cmp sbb push popf nop in sbb sub in mov push dec push fist mov push sub and lods sbb sub stc cmp loope xchg pop loope mov sbb or push push or inc dec jbe lcall and fnop rcrl (bad) mov sbb lods xorl pop aaa jg mov loope aam roll mov jp sbb fsubl mov cli repnz (bad) into cmp out xchg aad stos add rcr dec (bad) ss jle sbb fildl xor clc sbb in adc sti test jbe mov mov mov pop or std dec fdivl adc adc lea inc push imul in push int mov (bad) divb jle and mov in mov mov dec aad or cltd cmp int3 data16 mov mov stc dec sbb pushf xchg mov ljmp fisubr sbb fimull mov mov jns fdivrp adc aad and or pop sarl sti rcl or ljmp movsl mov leave fs push call mov jmp aad pop xor jns sbb xchg enter lret stos outsb mov mov adc in dec std je push rcll sub sub adc mov in add push or xor xor std int and or mov in ljmp test jge xlat cld popa (bad) fildll pop aas cmp pop xor pop dec push ja outsb cmp fidivr (bad) push popa mov lods mov jmp es pop mov push sahf add cltd aaa (bad) sbb pop cli mov and int out xchg mov test jmp jae js or mov cli clc pop mov xor push fdivl insl in frstor xlat sbb sbbl insb push stc sub (bad) jb adc lahf ret inc jecxz mov sub push jb test cmpsb jp mov cmpsl pop jns mov adc int dec pop aad fsubrp push mov cmpsb jle test sub push (bad) (bad) dec out daa dec outsb xor scas mov mov ds xchg ficom ss lret leave stos daa test dec test les sbb pushf call loope sub imul jle push lods xchg out sahf push mov inc and jge mov (bad) mov dec popa repz add (bad) mov xor mov int3 je fidiv cmp sub adc cmp sub adc nop adc mov fdivl sbb sbb push (bad) dec es cwtl pop iret mov dec aaa shrl pop inc call add iret pop mov mov add sub push fistpll xor inc popf stc mov pop mov dec xchg fwait dec pop adcb fcmovu icebp cmp aad cmc cmpsb ret dec insb push xlat mov cmc lahf xchg xlat or inc jle sbb and out and mov cmc (bad) out mov stos lret es push stc aaa iret (bad) mov xchg insl jbe jg xor push rcl ja fbstp hlt loope pop mov sahf inc je dec (bad) jno mov scas xor mov lahf add repz jbe mov fwait pop cmp cmp jmp (bad) add movsl or jecxz lods aad outsb scas push jnp dec fs scas ja fimull dec cmp xchg dec mov inc push cmpsb cli fwait popl inc jl in imul data16 jne call mov jmp data16 fsubr in fs ret rcll add outsl mov sbb jmp ja mov cmp push dec push mov xorb fcoms cmp xor ja sbb in loope dec (bad) pop jg lret pcmpeqw sahf fs push repz jge and xchg (bad) repnz lss sub bound int3 (bad) aad pop hlt xchg or dec xchg aas lods xlat inc add (bad) daa addr16 cmp imul jl jne push mov leave rcrl sbb jmp aam lcall (bad) and dec xor cmpsb in ret mov cmc lahf int3 sub add jbe fwait inc adc (bad) icebp mov cld cmc mov notl loopne fisubrl repnz (bad) scas inc jmp insl lret jns dec popf daa sbb fisub test out enter xchg inc idivb sub jae bnd push push or sub push sub cmpsl xorb mov inc sarb fstpl push daa push ret (bad) push push xchg fwait mov inc fidivr and push mov xor arpl mov jbe add sar sbb or movsb movsl cmp call xchg jbe leave pop (bad) (bad) add lods pushf mov into cmc xchg sub push jmp dec dec aaa mov push mov icebp les fildl sbb fnop jle out and lret or sub push push iret movsl cmpsb push xor or sbb jecxz loop and stc into lret fiaddl push sub push bound lret movsb pop sub clc inc pop push arpl push into inc xor dec pop das test mov xor mov das jle mov ret mov mulb cmp or ds loope xor stos das xor adc push push adc dec cmp inc nop gs ja jnp fildl dec push std rclb repnz aam mov ja jecxz dec adc int3 ret out in push pop mov stos and daa aas sti clc xchg mov movsb xor adc hlt fdivrs insl pop inc sub lret push (bad) test jae imul icebp mov xchg fildll ja rcll mov mov fwait xchg lea mov jle inc mov xor enter xchg out daa jae jo jl popa push mov or shlb or loope adc adc test jnp sbb mov ljmp mov fsubrl pop cmpsb loop sub out stos mov sbb xchg pop pop or sub inc lcall int3 cmp imul jno xor fdivr jp pop mov fcompl cmpsb xor push in stos or pusha pop aaa iret fistp push jp inc pop insb cwtl jge stos pushf jp outsb jno (bad) int inc sarl mov fcomp arpl dec push imul jmp aam call inc mov je mov jae xor or fiadd mov test arpl xchg jb sahf ss mov aas jnp xchg pusha push loopne cmp arpl push cmp imul loopne pop ficoml xchg rorb xchg pop fcoml out dec insl pop fwait leave mov xchg enter xchg leave push xchg jmp jns inc sbbl or outsl js inc xor jmp jmp push sub rcll xlat fsubs in xor dec inc popf mov mov in outsb cmp push jle nop jg fnstenv xor ret jg (bad) lods fnsave xlat lcall push mov into daa or sub pop jae xorl mov insl rcrl fadds adc cltd jnp inc adc or cmc mov and scas rcr push and call xorb pop inc cltd ret and out and addr16 out mov in stc add or mov cmpsl pop pushf ret aad dec pusha jl xor cmpsl mov out add lea icebp out add cwtl pop das dec cmc cmpsl push inc mov das jp inc mov or xor lea loop adc and js pop and xor cmp xchg lret bound mov push fdivr push ljmp xor ret rcll inc adc inc int3 das movsb enter cmc xor andb rorl addr16 mov sbb inc add push push xor mov push mov test xchg das (bad) jg arpl jp cltd pop (bad) push insl ljmp ljmp or fidivl xchg or pop cld add lods lock leave mov or xor in and mov das daa push int mov adc je dec xchg fisub push jmp cwtl xchg mov inc popa xchg xor push xor sbb dec lods ja or pop mov xor daa and stos fs pusha push push xchg loop arpl fstps mov jg dec cltd (bad) jecxz mov rol dec or xor push ss push inc jb daa (bad) les into and xor xchg les cmp sbb fs fisttpl je shl mov mov fs jge movb cmp (bad) je adc xchg sub test or notb xor loope out inc test idivl pop or ja ret xchg movsl inc jle into jmp (bad) (bad) aas lods out stc mov xchg mov mov xchg inc repnz movl cmp push xchg mov mov sti jmp aas mov lret iret lret xchg xchg mov lret into xor jae pop mov aaa cld lret mov mov je inc into sbb pushl adc (bad) lret insb lret or gs lahf pop xchg xchg mov dec mov mov cmpsb fistl std pop and nop arpl pushf cmpsb sbb pop movl adc in pop pop xchg (bad) mov mov das popa aam into mov mov imul outsb pop inc testb movsb and xchg inc xchg pop js lahf cmpsb jmp loopne fs lcall xchg push imul dec repnz sahf jne nop fwait popa int3 aas mov xor test mov repz pop (bad) clc fs jnp adc mov xor sti pop sbb (bad) aas cmp insl icebp inc mov gs jae jp sti mov cmp sub xchg mov push mov addr16 or mov sar cmpsl jg jg dec mov sbb imul adc sub jmp xchg and mov push pop les lods jl das mov negb inc loopne enter add addl scas (bad) mov adcb and rep fs or cwtl add dec adc outsl mov jns loope out inc fsubs mov test jnp (bad) push push dec jns loop cmc push sub cli mov fs shrl xor pop scas popf out cmpsl lret ret cmp add xchg sub inc xor push and sub popf sub outsb and pop add mov sahf mov inc addl aam adc push lods nop pop sub dec sahf test nop mov mov xor cmc pop mov xchg fwait sbb xor cmp test sub push mov dec rolb dec lret xchg jmp movb test jne call and jge inc cmc inc push xchg xchg stos lret lods push leave push xchg pop lods dec ret data16 jg int xor aas mov cmp int and adc and fcmovb (bad) hlt add testl mov stos es lock jno push or loope push add mov xchg xchg fcompl ljmp xor int lcall dec (bad) enter das jno pop (bad) fldt cltd (bad) mov xor cmp mov inc mov cmp inc pop cmc sbb adc xchg inc mov fwait add (bad) icebp insl xor add mov and (bad) lret or lods clc xchg test sar push stos inc push (bad) inc mov addr16 je cwtl dec into adc in ret into int3 pop or movsb push push pop lods insb hlt into sbb push sbb ret push lods jle and cwtl push or and inc sub shl xor in fsts out dec test adc fildl adc out mov jb stos mov outsb push insb jmp cmp es sbb es aad or into fldt push aaa (bad) clc aaa mov testl mov repz ja lret push dec jae dec or cmp or (bad) dec inc shrb loop jno (bad) cli push mov fs mov fucomip fldcw lea es loopne jmp mov test test icebp dec rcll mov xchg iret aad cld cwtl test ljmp repnz mov call dec mov or ftst insl jb bswap cmc mov cmp fcmovb (bad) lea and mov cmp jmp dec hlt xor adc insl sbb push xchg (bad) xor push or mov das mov ret loopne lea outsb fwait and mov mov scas aam jns mov and js int3 adc push pop or sub xor shr or subb sub sub pusha pop jbe addr16 ficoml pop add xrelease pop mov sub inc and sbb mov rcl xchg outsb ror ret aam xor repz mov mov (bad) repnz roll cmpsb or (bad) xchg out jns mov cmp push mov push lds aad outsl dec fnstsw int3 cmc xchg mov loopne repnz out and jecxz pop ss xor inc js dec daa lret xchg inc outsb add xchg sahf sub mov test sbb push sahf repnz fsubl inc mov lcall add cmp xlat lock xchg sti mov mov inc pop jns or xchg arpl mov aad insl test cld xchg xchg clc lahf popf push jle out mov xor cmpsb (bad) mov cltd je dec pusha mov cltd pop jl je insb xchg add into jb lock sbb xchg aaa adc outsl mov mov sti push and cmp loopne add out xchg clc inc xor imul aad add enter jge mov fldenv adc icebp push jle rclb mov sub (bad) lock mov fcoms or test xor mov inc bound lods push aaa sub adc ljmp mov scas fist cld mov cmp adc xchg dec ficom inc sub jg fildl pop mov dec lret (bad) cmp cwtl push (bad) xor jmp (bad) aaa repz dec pop lock pop push fdivrl xchg sbb aad jmp fadds in jae xchg pop fmulp push mov lods les loope icebp out sbb shrb dec in xchg sub ret and jmp xchg push add push mov fistpll and xchg xor sbb (bad) xor imul pop imul das xchg lret call std mov push enter in cmp mov test (bad) xor popf cmp mov aad jo pop mov jmp test cmp imul xor mov add ror das xchg and jae mov xchg in jecxz repz inc xor sti (bad) aam mov adc cltd adc ret addr16 hlt test loope jns mov xchg faddl or adc das addl clc cmc stc pop pop sti mov dec lds decl (bad) adc in xor out pushf sub or int3 dec xchg pop jp in add push push mov pushl and dec aam cli push or xchg lods push and mov inc pop xchg les sbb pop fcmovnb imul loopne jae aaa pusha inc imul add repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add aas fadds mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsubs add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb xchg insl mov dec or sub insb jae jbe mov gs lret mov fdivrl iret loopne iret cmc mov add adc add loope push jo pop icebp test inc pushf lods mov sbb xchg aas dec and fidivl cmp iret clc xchg inc cwtl xchg mov (bad) std shlb inc out sahf xlat or push add call ljmp cmp mov jnp mov push cmpsl inc mov mulb js xchg ret repz int3 mov inc test fisub pop insb lret in aaa pop enter pop sbb and out or adc ret stos inc mov ret xchg mull xchg clc xchg mov out jl sbb sub xchg xor (bad) pop mov cmp movsb dec sbb add xchg jecxz inc nop (bad) ss out es dec and test movsl mov sub dec adc dec (bad) inc and and icebp add jb jae fidivl jbe nop xor mov jmp xchg cmpl jp fbld sti pop xchg sbb pop cli lea ret shufps cmp ss ss int3 mov adc push jg mov xor jge nop clc push bound fistpl adc nop jae testl insb lea shlb in pop (bad) dec sub cmp imul pop cmc addr16 not fnstsw cmp es xor dec lcall jae outsb xchg xchg xor inc clc and dec jg (bad) adc inc cmp mov fisubr das ficom jp lret mov lea das sub xchg inc imul mov xor inc pop out push enter mov stos repnz test sbb fisttp movsl xchg loopne (bad) mov es pop and xor pop sbb mov xchg jno jecxz xor outsl mov push sub sub cmpsl push test stos add cmp mov mov icebp cwtl nop repz xor mov sub and mov test divl aam inc js repz jnp xor mov movsl into mov stos xchg dec or in pushl mov xchg insl jp pushf in cmp pushf mov dec mov jge dec xor outsl push push es (bad) and mov lret or push icebp and mov dec in mov leave pop xor adc sub ja xor dec inc ja mov int3 push scas imul fwait pop push into sbb insl mov sub sti lret lods out mov sub add cmp or push out ja lret movsl pop pop sahf cs psubq in aas mov pop pop xchg pop xchg sbb adc sbb sbb ss xor inc xchg and daa cwtl mov lcall sbb mov aaa pop std in roll aad adc xor mov sub shl add (bad) pop or cmp or jle inc (bad) hlt (bad) jo pop push adc sub mov mov pop mov jb daa (bad) or xor sub mov inc (bad) ja xchg pop mov lret or mov cmp adc nop and mov mov sub notb lahf icebp mov inc xor sub mov lock inc xchg pop pop call and push repnz sbb jo cwtl insl dec pop cmpsb mov inc inc cwtl fidivrl repnz cmc mov outsl jmp sbb in pop fsubrp fimull and jne jge out (bad) je fimull xor fildll mov insb insl iret inc notb fldz inc xchg push nop and in jg jae (bad) mov enter icebp push dec orb enter sar cli add insb cmpsl mov mov xor aad out imul in into dec imul pop into mov adc out push pop adc add scas inc xchg insl push or out inc ja pop cs aad gs mov fcoml out and lret cmpl inc jmp fdivrs repz imul mov in popf jo popa sub imul jg push subl pop push adc push adc movsb repnz pop inc cmp sbb notb imul sbb push arpl stc pop adc push pushf mov imul pushf repnz insb stc out fistl fcmove sub add xor or xchg je repz rcrl jnp cmp cmpb mov out stos xor (bad) lret mov jge test int dec lcall mov fildl add jecxz out std mov mov cmp lds adc out loopne loop push leave out xor ret inc divb test jge aad aad jnp push addb loopne movsl negl xchg fwait rcll jmp cmp lret mov (bad) aad dec hlt push xchg adc ljmp lods imul mov pop pop add and cmp out mov mov fwait pop sub pop mov xor repz mov dec ret loopne clc xor mov jae xchg xchg aad mov inc mov cli mov flds jmp iret adc mov sbb sub insl out sbb insl xchg dec addl lea mov in out sti pop rcrl cmp sub addr16 adc out jo mov dec scas jb sti aam mov fsubp xchg fisubrl add mov std fwait jnp rorl pop inc dec push mov push fldt sbb jbe test movsl fstpt cs out mov jb imul sub imul rolb data16 sub sub idivl loop mov das cmp dec loop cmpsl sbb add or cmpsb lret jl mov lea inc test sub push xor repz sbbb pop or int3 insb mov push aam jmp fildl insb rorb (bad) iret xchg cmp cs dec fldt adc jmp push xchg lods xlat push cmp push rcrw test xor inc gs pop push lods and outsb movsb jbe (bad) subl xchg ret mov call lock dec andl or mov add and lcall mov ja enter scas scas (bad) aaa mov mov hlt push in cld push inc gs cltd or sti mov outsb insl cwtl mov lcall pusha cld xchg mov pop jg icebp jle call jb dec adc sub sti dec mov add and jb dec ja and lock cmp and ja inc dec (bad) std add pushl add cmc data16 cmp xchg dec cmp je fist idivb mov mov sub sub push sbb cmc imul out cmp ds aaa je jg fcmovu or xor xchg xor inc dec pop inc mov andl shlb mov and aam test js dec add and es aas push jb dec xor movsb xchg jbe push add add or pop int xor push cmpsl cmp inc test push mov cmp rcr dec xor in push imul jne mov stc std and imul fldl in inc cs (bad) or add lods fidivr (bad) fcoml rcll push inc mov (bad) mov push pop es loope jmp mov popl ret pop into into loope mov cli (bad) push out dec bound pop movsl movsb outsb icebp xor mov and add (bad) xchg (bad) xchg fwait cmp push mov mov add add jb mov loope or xor inc adc in pop cld xor sub stc aas jb mov add cmc stos loope pop jnp mov loope push arpl xchg jne xor pop xchg lds push mov addr16 imul das push ret mov jg sbb jb in dec xor inc cli jnp xor pop mov mov xchg add mov ret jp in push pop sbb adc lret movsl jle (bad) mov insw jbe sub leave nop ficompl and lret xchg xchg movsl outsb int shl mov dec insb (bad) add out cs mov inc out mov push rorl insl pop xchg xchg adc in imul lret addps jmp pushf hlt jp test xchg cmpsl es sti mov fcmovu pop mov jae into rclb stc repnz push push mov lret push mov and pop arpl (bad) cmp dec jnp mov repnz push push mov stos or jle mov and out jl sbb inc mov cwtl jge sub gs mov pop pop call dec cmc sti sub (bad) movsb test insb mov inc jle or or pusha cmp sub jno (bad) js push xchg sub xor stc (bad) mov jno loop and and mov stos fdivrp das andl sub push outsb sbbl into sbb inc lahf sub pushf adc sub addr16 inc sbb inc cld jmp pop add repz xor mov cld mov cli sub std lock rorl xchg dec ja xchg loope les hlt xchg pop xchg and xor adc xor push shr repz mov callw and (bad) idivl xchg fimull adc xchg pop mov xor dec adc inc add mov mov clc fdivrl rcrb cmp lds pop aas mov fidiv movsl inc push (bad) pusha ss cmp aam lea mov shlb in fsubrl jno imul mov mov dec outsl jae xchg ss hlt push sub ss loopne mov inc dec pop cmp ret and pushf or sbb add iret jns xchg stos rcrl adc outsl mov lahf (bad) arpl shrb cmpsb movb jne mov sbb mov fdiv jmp imul xchg aam ja sbb (bad) mov mov in loope lds adc xchg mov dec push mov xchg mov cmpsl je mov push pushf test notb mov push mov cmp jbe xchg mov imul inc cli and mov add mov mov adc sub imul in subl dec dec cmpsb jns add imul lret mov out mov xor pop push rcrb mov orl sbb mov arpl jl out ja out jbe lcall stc shrl and mov fist mov lock in push sub mov fiadd ja lahf out enter cmp and (bad) cmc (bad) cmc movsl pop dec xor ljmp jp (bad) (bad) inc les gs movsl cmpsl rcll mov subl mov js cwtl rorl cli mov cs xor pop jge xchg scas jo pop test xchg loope push mov scas les sbb push fs cltd mov imul mov pop dec sub test sti (bad) or xchg insb add ss in fnop push jne flds cmp clc or rep movsl fcos lods push xor movsl pop stos lret push pop push lret xor mov jae mov mov mov xor adc gs test js xlat in nop push lahf add not sub ja jns inc and push push xchg cmpsb jbe jp flds aas cld into mov jmp das add fstpl pop push lds inc pop out or or orb mov add adc add mov loope setae lret push xor xlat das faddl ret xchg out icebp ret inc or sti rcrl mov pop stos imul nop xchg inc inc test xlat mov cmc test push push fs adc in sbb inc sbbb aad aad inc fmul test (bad) cwtl mul hlt mov jle mov imul ss mov cld jne jmp pushf mov rorl push pop and xchg pop push mov fildll and lods insb pop sub repnz sub (bad) xor adc and imul mov mov adc pusha sub bsr fimul (bad) sub ljmp (bad) inc dec adcl push (bad) add fcomip repz mov arpl rdpmc cmp pop inc lods leave add inc rcr mov jecxz aas xchg scas mov pop and lcall jo xor mov xchg mov cmp lods int fsts add sub aam fadds pop or pop cmp pop xchg inc xchg push dec stc and sub stc sbb lods test divb insl fwait lods mov stos lea dec fisubr cmpsl mov stos movsl sbb outsb cwtl ret add jmp test lret cld xor call inc xor call into add daa sti jb xchg out aam sahf xor fdivrl mov ljmp popf into cmc xor adc xor dec outsl pushf icebp push leave das nop mov bound adc or xchg pusha sbbl decl add ret out xor cmpsl mov jo xor and test fs lret inc push ret cmc cmp xlat xor pop inc push pop jle lahf jae pusha adc lcall adc in pop inc scas pop rorl ret push inc lods ror cwtl sbb xor addr16 cmpsb and les cltd loopne outsb jns jns sbb sub and mov and adc or jns int3 clc inc dec push fs jmp xor out push repz lock enter pop mov imul in js push dec popa je bound dec sub sbb sbb dec mov or movsb mov or fsub lret jle movsl jl ret ret pop jecxz add insl (bad) lods cwtl mov sub push xchg mov ret mov pop data16 inc dec in adcl jge xchg sub jl ss jnp adc mov or lret pop pusha imul mov jns sar pop rol cltd cwtl fist test in mov xor mov notb pop dec xchg push pop insl je push out mov out in scas inc mov jne pushf sbb int les shrl iret hlt inc movsb push xor sbb out mov and inc add mov cld jecxz ret test mov shrl inc mov jg cltd sbb scas lret loope add test lcall (bad) lds fnstcw xchg pop (bad) (bad) jb xor repnz sbb dec cwtl stos pop push je (bad) jns dec aaa dec xchg adc add jle (bad) dec js push xor (bad) (bad) mov test add cmp xchg mov dec movsl out sub sahf pop stos jae mov sahf repz lahf add call mov outsl push daa fs xchg jl pop or mov sub test sub in sub cmp sti cmp lahf popf add outsl subl or cli stc pusha mov xchg ret ja cmp mov jp loope arpl mov and (bad) cmp pop add out sub add adc (bad) cmp in sub lock stos mov xor fwait jp xchg add or lods pop cmp mov xchg pop andb fistl push (bad) lds push rorl jae test divb inc sbb push inc das inc mov mov (bad) lcall pop lahf sbb outsb sbb jbe out mov and (bad) or ret jne sti lock sbb pop pusha scas cmp mov stos xor (bad) jae ljmp or pop mov lahf xor mov ljmp mov popfw out push nop stos inc sbb push lret push ret mov scas mov test ja jne mov jbe loop ret scas movl ret clc mov xchg outsl pop andl mov xchg punpckldq or shll in fs add xchg lret sbb inc sbb fwait pop cmp in dec mov mov cmc inc das enter (bad) subl pop xor inc cs (bad) mov cli push jg das mov scas aam pop jmp les mov jns jle lahf pop cmpsl inc pop sbb lcall mov sahf pop dec xchg out bound jns lcall jb fs into pop std xchg push mulb cmp in xchg sub fwait and inc or popf pop pop aas fnsave and xchg rorb xchg mov (bad) jbe jp cld rcll nop into int3 fwait xchg cmpsl sets xchg pushf or arpl pop pop push push and ret rclb lahf dec sbb fs inc xchg stos leave aam adc xchg mov outsl dec subl mov dec add mov xchg add push adc cmp xlat sbb pop lods pop mov mov cltd mov dec (bad) or das push adc sub mov lock mov mov jns cmp stos pop fisttpl adc add mov cmpsl fisubl fdivrs stos dec jp jge loope xchg test mov mov out int3 cld inc add (bad) xor push inc pusha push pop mov dec aad rol dec cmp lahf lock sbb sub cmp mov and leave clc jo mov sahf aam push mov jns push mov imul frstpm(287 mov or fild iret inc je mov push sarl icebp jl fdivrp sbb lock daa lret rolb or aam push dec cmc mov xchg xchg or repz lret rorl inc movsl jle cmp mov movl mov pop popa sahf repnz sbb cs xor or sarl cld mov add cmp or repnz mov shlb or xor xchg jns ss int3 stos mov dec push jb lahf dec aad scas (bad) in dec dec call sbb inc loope xchg add (bad) xorb ret lret pop cmp adcb iret push sahf jle sbb xchg fwait xchg xchg cltd (bad) mov gs jl pop mov lahf pop mov or outsl sbb lret or push aam inc fnstenv insl jmp push insb jne jge subl mov xchg jge cmp je aaa out dec jnp (bad) jo or xchg les cmp out je mov pop push cmc (bad) mov sbb sub out jbe stos mov pop aas cmp test dec jnp xchg sbb or lahf sub jbe movsb ljmp cli ror cwtl pop clc push dec stc loop roll aas jge ljmp mov mov or sahf or adc pop fwait push jb mov rol out pop leave xchg adc gs pop xchg mov sub stos mov je repz pop enter or xchg inc loopne dec das ret sbbl add and jae js outsb xor jle or movsb cmp test cs cld or mov mov movsb fistp cmp fwait sbb dec adc shr cmp nop and mov sbb mov movsb mov and jo mov mov dec in mov popf push mov adc dec bound ds or sbb or cmp lock pusha inc sbb jmp and (bad) loop mov sbb pop adc aad fistp dec inc and jge cmp push (bad) mov lahf call cld out adc pop lods sarl insb es dec js (bad) nop pop hlt nop mov jne cs fisubl lret cmpsb mov add imul loope mov or xor dec mov fs dec push dec mul pusha pop pop mov push out jno lods add clc inc dec add cmc (bad) jb mov sub inc or sbb out lahf mov out notl pop orl xchg test shl mov out jge in or fwait sub jmp fildll jns test fidiv fdivl mov pushf xchg xor bound cmp pop js,pt xchg mov lahf test inc paddq pop addr16 test in cmp jns and (bad) aad dec rcrl fstpl (bad) repz shr dec inc push cmp cmp push mov xor inc cmp sbb out inc aas orl jns (bad) mov inc (bad) and ficompl clc sub push icebp lds inc in pop add cmc movsb xor jne push mov add sub or jmp mov pop xchg add xlat iret lret fs xlat dec test sbb icebp inc jp (bad) repz popa jno and out mov out pop nop mov rclb pop dec jmp jl loope fs daa (bad) push fnsave xchg cmp push fsubl out mov add xchg rcrb push sub enter xor cmpsb sub mov inc ficompl jle ficompl das leave push frstor mov add insb iret stos sarb jg sbb sbb jge jl pop jecxz adc and jg test sub test or push jae das cmp out jl pop pop mov push push fildl sahf int3 adc aas inc ds bnd mov jo mov out jno ret sbb jns fsts mov lret cmp std int int3 jns shrl dec cmp int3 hlt dec rolw shl movsl jne jns std out jg loop out nop mov (bad) daa lret fcmovnb bound pop sbb inc in (bad) in dec lret pushf mov xchg dec and shlb ja inc cmp (bad) push loop and push pop xor fwait xor mov cmp ret inc mov push (bad) lods insb je int3 mov lods or loopne ret adc mov xchg inc add cli jb sub test xchg fiadd movsl mov pop and mov hlt and dec mov das inc inc lahf cli cs out fs push and sbb call dec std out mov add out popf mov cwtl adc fadds inc into dec pusha int (bad) push sbb fadds mov pop adc insl fsubrl push aas cmpsl or push imul fdivrs imul das lret cmpsb aas hlt pop roll pop into cmp push cmp push stc (bad) adc push daa mov mov sub rcrl or or outsl adc stos mov daa clc fldcw fcomp pop jnp mov sbb (bad) fbld adc mov mov inc sahf and rcrb dec pop push mov mov js inc cmp pop sbb jecxz mov push enter dec push jge insb jne mov hlt repz xchg enter sbb jge outsl jp loop jp jae test icebp mov cmp pop stos lahf push jb (bad) icebp ja cmp bound and daa push loope sub jne push aam scas push or and jg lock lret cmp adc adc add popf xchg mov mov out or arpl repnz push ficoml clc push fnstenv jbe sarb cmp sub hlt push outsb pop imul pushf dec jae push aad mov in popa xchg lds mov cmp in xchg std rcpps jecxz (bad) push push cmovp dec push sub (bad) mov fs push mov lds jae out mov mov mov push sub rcrl cwtl les mov cltd loopne pushf imul lods and push pop xchg sub inc test (bad) dec popl and aaa lds cmpsl push stc jle daa stos cld mulb into rorb inc and test outsl lods jl pop (bad) lods (bad) lret sbb dec das jmp sbb push cli lahf dec in xchg adc xor in inc aaa inc pop test fdivp pop nop mov push sbb adc add pusha jmp mull xchg mov pop xchg xchg xchg dec cmpsl push das adc lret lea or das es (bad) mov test in jp or sarl popa aaa jno test sbb and sti inc idivl push jge pop (bad) es or call sbb ljmp add xor push dec push jl jg jns mov jp inc sti ret xchg xor cmp ffreep mov and lret outsb add jnp xor shll in xchg jecxz push les inc or inc dec mov or jbe jns lds or ret jns dec jbe jbe arpl fwait xor aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp cmp jnp,pt xchg into mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb add loopne mov jno jbe lods mov fistpl jno mov xchg insl mov cmc std nop out jge add js add xchg add stos jmp test in push in xchg lret xlat xor push fnstsw push mov in scas pusha inc sbb js or mov inc push int3 mov mov xor aad pop xor cwtl cld jl mov or out dec add cmp sar or pop ja xchg stos xor ret (bad) or scas sub cld fsubs add test notl lret or mov push cmpsl add push sbb out cmp dec xor nop in popa cmp roll jecxz mov lcall mov stc rorb das stos xchg sahf mov jge insb fs fsubrs repz jge xor cmp cwtl cmp fimul adc int3 pushf dec cmp jmp sub adc sub sub daa rcll dec cmp (bad) push mov xor add dec decl sbb and adcl repnz lret sbb push aas push xchg fstp enter arpl loopne outsl adc mov bound roll fcmovu add out test icebp sar scas push push lret sub inc repz daa push data16 fs mov cmp shrl jge clc add pusha rclb sub std sub or xor push jg test movsl mov stos out lock lret lods in xor aad cmp mov mov ret ret repnz (bad) add adc cmc enter jbe push cmpsl mov cmp inc sbb cmp test fisttpll add pop les js adc dec (bad) xor fisubrl mov cmpsl xchg imul in scas xor leave jne pop in fbld aas and cmp movsb les mov jl jmp mov inc adc shlb cli (bad) jb push mov push repz push adc (bad) mov mov (bad) popf inc sub cwtl int fwait les jmp mov popa pop and or outsb into mov lret and adc insl popf sbb jge cmp mov imul ja lock in push hlt mov xchg fwait (bad) enter aaa mov insl mov xor pop cs or lret inc lods or (bad) mulb rcrb (bad) jno loope ljmp mov nop ss mov fucomp mov dec pop mov push call rorb and mov cmpsb cltd insb arpl neg mov popa test pusha call push mov pushl xor mov shr push insb into out mov inc pop je push xchg mov inc ss (bad) mulb add adcl fisttpl cld xlat lcall std dec orl into xlat scas insl pop aam hlt mov lods add shlb ss (bad) mov popa sar adc xor cli jle xchg inc mov mov pop hlt jns pop out lds int3 mov pop xchg stos enter fsubl je ret fstpl cmpsb add mov cmpsb jl stos adc xor hlt inc xchg mov mov popf lahf insl and and mov and and adc popf ds repz sbb push mov sub mov js mov xor jecxz xchg pop cmpsl (bad) jns in in push cmp dec loopne xor popf je dec in mov jb mov mov addr16 mov jmp stos lock mov les insb lock adc sarb popf jno mov or je push mov (bad) push in test imul scas lods popf jae out mov ss call mov aaa jo cmp insl sbb push negl data16 (bad) mov mov jge lea jbe or xlat mov fs cs inc movsb mov mov adc lcall int3 mov jge mov ds sub xchg out add pop lret inc pop pushf jge mov loope xchg xchg xchg clc xlat stos mov cmp lock mov push jg popa out push pop pop repz (bad) rcll add mov mov ds add jno mov cli jp jl push in imul sbb mov cmpsl orb fdivrl (bad) cmp outsl js push dec out stc data16 push dec push mov pop cmpsb lahf repnz nop dec lret push xor xchg xchg icebp popa push es ja sbb push es sbb sti push (bad) dec sbb (bad) icebp mov push leave mov cmp push inc mov in fcompl pop test cli mov lds hlt nop adc imul xchg xor mov scas bsf push mov or lcall mov push leave in xor cmp pushf push pop mov pop push ret scas push lock and jg mov jmp lock fwait cmp inc iret ret es hlt or test (bad) sti cmp pop js cmp in out push cmp jge prefetch or mov cmpsl dec test jmp sbb test xor (bad) or mov in add loopne in mov or adc (bad) cltd dec fsubp sub dec pop aam mov les dec jns rcl inc sub xchg mov lds repz fcmovnb movsl and jb add or stos xor (bad) add lret aad inc xlat jecxz mov icebp daa (bad) mov xchg outsl cwtl jge push (bad) dec pop (bad) ffreep dec xchg stc (bad) push repz or dec dec aas mov xor call notl andl testl pop dec popf dec xchg ljmp stos cmp cltd cmp inc jge push push in xchg and int3 outsl and push sti (bad) jno out ja push pop (bad) hlt test cmpsb adc pminub cwtl test and sub aas jmp and clc cmpsl bound call or mov in mov mov popf xchg call fbld mov and sarl call add not sbb xchg fnstcw xchg or ljmp sbb (bad) jo xchg pop inc addl fwait rcr ret push sub stos cmp rorb jae sub js mov insl mov in or mov outsl inc xchg lahf dec pop push push xchg nop jle xor cmp idiv je pop pop loop ljmp mov adc call js pop xchg jo lea mov hlt adc and push jne sbb lret xchg in mov insb cmp sbb adc mov pop pop add nop lahf cli push out aam in shr push fist sar dec add int3 xor lds push cmpl push loop iret or in mov int mov pop fwait jmp add out rcrb xorl sti mov in sbb (bad) out xchg sub xchg adc xchg fsts sti or mov sub push stc cmp imul inc mov icebp test sbb mov sbb lret cwtl in je sbb sbb mov sub mov sahf sub push aam lret adc sbb (bad) jns mov lea cmp jecxz adc test xchg xor jmp test cmp jb sub jg ficoml into out aaa push (bad) sub add add es pusha mov out bound insb cltd dec cmp sbb push and setp lds rep push nop scas jnp jp sbb iret mov xchg mov mov lods jb rorb lock lahf or inc adc sub mov sub loope push dec repz pop dec xchg cmp inc push out cmp sbb pop and sbb pop imul and mov sub jnp add sbbl dec or in mov int3 and into call add mov (bad) imul or and rclb or pop add xchg xor pop and cld lock inc fsubr mov out (bad) push idiv ja xchg sbb mov pop adc addb pop sbb dec inc jecxz fdivs adc xor xlat daa xchg mov add imul push xchg jns xchg jp pushl orl add push pop mov sub stos push scas test cmp push xchg mov xchg lret lcall insl mov push iret aaa cwtl test fwait mov jl mov ret into mov mov pop jno pop fmuls in loop sbbl jg dec cmpsl inc in cmp xorl fmull add pop and out lret sbb push adc xor xor xor bound prefetch iret mov jo mov sahf cltd (bad) lret xchg pushf mull out push adc xchg cmp lret imul xchg arpl mov push cltd xor push adc test sub mov inc mov test sbb mov pop cltd js xchg lds (bad) jmp sbb lock cmc mov inc jae outsl out push mov out cmp push in out popf push fldcw mov adc and (bad) into fdivrp add dec fcmovb or nop out call mov jecxz in (bad) xor out aam push jg leave out cmp repz add jge (bad) mov fisubl sbb jp (bad) dec popa push aam mov push mov and test cmp fsubs (bad) cmc rcr cmp cmc iret outsl cmp dec inc sbb mov leave aam mov sbb sub lret mov es dec lcall inc mov xor aas or dec daa jb,pt je daa dec pop adc cmp in outsb xchg add adc sbb mov adc mov mov into ret ljmp adc data16 test mov inc pop ljmp in inc mov mov push (bad) xchg push fwait inc push lea add push push addr16 (bad) dec (bad) rclb sti nop incl out test cli test pop (bad) cmpsl fdivr mulb sbb or pop aam pop (bad) addb fsubrl pushf mov mull jns out repz push cld push jg je bound push dec fildll ds jmp xor arpl ja cmp fsubl das adc add add sti sbb push cmp mov mov out cmc int3 es inc mov mov jnp push push fildll rcrl mov mov dec push push test out sbb aad adc jecxz jp lret push jb pop jle pop xchg sbb clc mov call icebp inc mov xor push lods sarl lret and cmc xchg push fdivrs movsb or popa movsl dec popf lods leave jg cmp es pop sti cmc jmp je in ror gs cmpsb adc lcall lcall clc out xor adc lods outsl insl sbb mov inc (bad) or and inc rolb gs or (bad) push mov test and push pop cltd push sahf inc jbe es sbb push jge mov pop pop xchg outsl cmp orb call fildll and shrb push test push sub and cld cmp repnz inc push mov and xchg into test pop (bad) arpl pushf in mov pop scas or and add out dec cli mov rorb das push ljmp pop jle aad mov pop push mov cltd sbb jmp (bad) dec out xlat and out or fbstp push xchg xchg popf out outsb cwtl imul cmpb xor cmp outsb lods neg xor or cmpsl pushl pop inc cmp cmp push aam jmp int3 mov out cli mov xor pop add jns jge and inc inc add dec push mov cmc lahf and arpl es pop mov xorl loopne dec leave inc idiv in push inc mov notl aad and add xchg rcrl push or push or cwtl test aad inc sahf rclb mov fbstp lcall imul add (bad) mov cmpb addr16 xor ret loop es ljmp int3 push push cltd xchg shrl div inc lea repnz pop fsts cmp aaa and adc aaa pushf call mov lret push fisubl scas std xacquire push push xchg mov aaa mov shrb sbb lahf mov dec ja stc stos xchg movsb lcall addr16 stc or lods movups mov jle add mov (bad) push popl or (bad) or push xor mov (bad) repnz cwtl (bad) mov pcmpgtb cmp mov add xchg push out in repz int3 imul out and mov mov cmp push xchg stos jnp subl fnstsw sti cmp jge push adc adc hlt and mov dec es cltd out ret sahf fsubr cltd pop out xchg or (bad) xlat mov pushf fstp fstps add mov lret push sbb mov lea or icebp xor scas xchg in in movsl mov mov aad shr adc adc mov adc repz or ja fisub test dec jecxz outsb sahf inc shrb push xor jecxz std fdivs je push (bad) idivb dec pop push and pop pusha adc add (bad) cmp test aaa into aas pusha sti jo ss js push popf xorl mov xlat iret sbb lret pop push inc imul iret pushf mov sbb (bad) adc adc (bad) stos test mov popa pop inc add mov into cmp dec jg mov (bad) imull cld not aam popl insb xchg cwtl sbbl mov xchg mov jno in (bad) (bad) cmc lds pop push fs rcrl inc mov test test fnsave and cli imul dec mov mul (bad) push adc pop cs out (bad) mov daa push pop add dec insb jle push into inc xchg adc push xchg mov aaa mov aaa (bad) mov test dec outsl xor loope inc cmp inc fildl (bad) mov pop inc cli push icebp mov and fsubrs push pusha pop fnstenv sbb xchg adc repz lds adc cmp lahf jmp add mov xchg add push outsl cmp hlt imul out jmp jle dec push stos sub sub jns je sbb ret js fidivrl or (bad) mov stc loope push adc cmpsl movb dec push inc mov in incb xor push stos mov mov pop lea cmp fcmovnbe sub sar (bad) daa sub push pop movsl (bad) jge fild adc cmpsl jecxz and inc (bad) push bound js enter mov inc sbb int3 cmp fstps (bad) (bad) cmp and cmp xor push jp rclb fcomp dec movsb fs loope jns push pop scas mov pcmpgtw rol push enter adc mov stc xor test cmp mov push mov cmp out (bad) repz aam nop (bad) adc mov sbb out int3 jo xor xchg xchg outsl jl aaa mov movsl adc push notl dec ja pop and aad bound or int cmp push mov mov shlb xchg mov hlt mov aaa stc pop mov xor sbb std push and mov sub add inc jg fnsave dec adc roll das pop hlt into sbb fildl adc push (bad) hlt aam (bad) xchg (bad) pop xor inc sub xor (bad) dec sbb cs in cmp adc fimull ds loope xlat lahf adc movsb lret int push pop xlat test jno jmp add arpl cmpsb ret loopne (bad) jae (bad) mov mov fs jns addr16 add add in ret aas (bad) push mov fmuls push int3 mov negb cld (bad) or loop in mov and in stos xchg aaa (bad) or clc pop js lret push ss xchg sub out jecxz jecxz cmp test dec arpl adc jge cs pusha addl fnstcw fisttp call stos and faddl pusha data16 xchg stc push sbb (bad) fcompl mov repnz mov aad or jg push jg push test dec cmp jae test jecxz cmp sub adc fwait arpl insl outsl movsb inc mov cld outsb sub cltd movsl es outsl add cmpsb aas pop xchg hlt inc cmc (bad) mov es call ljmp pop mov fildll jmp mov insl mov (bad) outsb and hlt bound jbe call mov sub lods sbb adc cmp hlt pop add loop mov mov arpl jnp pop pusha mov adc insl adc icebp jmp ljmp scas or sub les (bad) stc aam push ds push xor mov pushf pushf pusha mov ret mov pop sbb js nop (bad) or jno popf adc insb leave test out adc mov rcrl pop fs outsb add stos popf push jo,pn dec pop jb fmuls jae xchg add mov aam pop and test jb jbe nop or mov sarl ss stos sub aaa sbb imul jp sbb xor jmp push inc mov movsl les divb test mov jno xchg push int3 cwtl pop int clc jo mov and loope test setne mov xlat data16 xchg mov repz dec add xlat movsl pop test loopne add sub fisubl cwtl (bad) test xor nop cmp int xchg jp in mov addr16 (bad) cmpsl inc or ret mov jle lea int3 xchg push or mov xchg jge popa fsubl and mov fist dec sub lock fist pushf cltd and push pop pop adc int3 sub insb stos adc lret imulb xorl mov xor jecxz mov loop int3 jecxz mov test call sbb sub ja jmp je inc mov sahf add imul sub xor arpl sbb rcr jp inc cmp adc cmpsl fbld jb push xlat jb fnstenv jg lock add repnz sbb es (bad) shl test push fwait sub and mov addr16 addr16 sbb int3 stc sahf std clc dec mov sub push insb mov jae inc int3 inc cmp sub and imul sbb fdivs iret push mov fisubl (bad) cmc push gs lret sbb jns or dec sub fcmovb jb inc xor push adc inc pop cld repz in addr16 int mov ret bnd mov mov imul mov cmpsb mov outsb xor push dec adc insb imul ss (bad) adc repz outsb mov mov jl mov xor lcall adcl sbb inc ffree xchg out push rcl add (bad) in push sub mov and dec cmp stos xor popf pop inc in scas and cltd ret js add leave mov and cld rcr inc cmpsb icebp dec xchg enter inc cwtl cmpsb sahf mov dec cmc lea or dec shll push loopne test les in (bad) std push cwtl stos or js inc and and out repnz push jns cmp jo stos pop sub mov mov test (bad) divb adc add fldenv ds ret testb push pop in das test insl and outsl clc push or (bad) fwait es or pop into and pmaddwd repnz inc insl dec adc lods cmp jnp mov mov jnp jge cmc daa pop stos xor adc addr16 (bad) push nop fucomp sahf jp arpl push iret mov inc or dec inc xchg add cmp fnsave adc movsl inc bsf sti push into and in popa lock and sub stc add xchg add xchg cmp cli sbb aas test add movsb add adc pusha mov int or mov loop vmovaps adc stos mov push (bad) movsl aad jmp mov adc mov out movsl icebp sub mov arpl enter mov pop cs imull sub loope scas pop push popa popa enter pop lock cmc cld mov aaa push cld movb imul outsb loope mov mov cmp pop jg sbb je iret jle mov jmp push cmpsb jnp or push sub mov push ja inc jb fdivs pusha cli jb cmp cmpsb lods inc das out xchg jge insb mov mov imul push sbb pop imul dec mov (bad) cmc call xor fisubr adc xchg pop mov mov jge jo jbe push das pop adc aaa int3 sbb fwait or daa push repz jl jl xchg mov test loope jb rclb jb jmp scas sbb fnsave (bad) ficompl jae in sbb sbb repz dec and and or mov push out popf aad incl dec mov ljmp pop and xchg jnp or (bad) pushf pop mov cmp mov mov inc in inc pop pop or repz dec shrl lcall imul mov cmpsl push nop pop mov sub and movsl lahf out lock push icebp xor adc inc add outsb pop fstpt stos adc xor test xchg xor pop jo (bad) pop sbb cmp sti hlt push push jne cmpsb (bad) test lret mov mov sbb push mov mov loopne enter mov cmpsb sbb cltd mov xor adc cmp sub mov popf or push jns les iret lea lea iret xchg mov (bad) cmp stos and arpl fs stos adc orb popf cli mov fwait mov sbb or loope xor lret mov loopne icebp adc inc adc aad leave cmp push mov mov mov out adcl insb xchg xor adc rcll jge nop stos (bad) iret cltd mov jno aaa (bad) (bad) lcall bnd imul xchg out lock inc out dec scas jp mov imul rorl add lcall fildl mov lods mov imul cmovle sbb cmp dec ret (bad) iret es iret lods mov daa push test lea es ds add lret addr16 dec (bad) nop (bad) lods xchg push xchg cmpsl rol aam cltd lret ret mov rcrl inc shrb adc js mov and sbb lahf inc add pop sbb sbb maxps fsubrs inc add xchg cmp pop ja cmpsl mov int and sti cmp and cmp inc cld cmpsb aas divl ss xchg shlb sbb pop mov mov lds cmpsl pop xchg test mov ss mov in test mov push xchg adc xchg jg int3 popa jp ss sbb ret int3 imul (bad) leave (bad) loopne pop xchg mov inc jnp (bad) aas jo (bad) popa xchg xor mov repz or test cli fstps dec in sbb andb lret ja mov test jbe sub fs sbb nop push sbb bound sbb int3 imul ret sub push aam ja xchg in leave sarl mov jae add mov and fwait (bad) das out outsb dec push mov add mov aad pop jmp cmp lds inc xchg dec and int push popf add mov lea push xchg sbbb gs mov lds shrl push jp jb adc dec (bad) mov es jae orb mov daa mov mov cmpsl cmp or push clc pop pop mov push mov test fs cltd mov inc sbb or dec sub in adc lcall xorl mov lahf imul or and test sti adc stc out aas jb outsl ljmp pop xchg push xchg mov outsl cmp cmpsb jmp mov bnd and lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg fild add add cmp dec push pop (bad) xor add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add stos xchg insl fucomi pop mov imul xor mov out mov jnp mov add pop add inc add test and pop (bad) es int3 adc out lds xchg popa xorl xchg or mov daa cmp dec mov dec dec outsl jp push mov into ja sub mov jl inc sub jnp imul out pop loope cmp sub jecxz adc addr16 jno cmpsl clc push insb push gs repnz incb sbb aam pop mov adc lods jle sub mov int addr16 (bad) pop gs sbb scas (bad) insb dec cmp and out imul int3 das xchg js mov insl push rolb or in dec insl leave add add dec mov dec adc (bad) jg out dec mov ss adc mov mov xor xor jo push xor mov outsl aam mov pushf xor mov pop subl out in arpl scas int jne cltd add jae sub cmpsl xchg dec test jge adc lea imul dec scas inc dec rcrl insb xchg xor inc in add lahf adcl out add push jbe lods xorl stc inc inc mov lock adc outsb xor jb jl cld sbb rorl nop fadds mov pusha jno (bad) clc adc ss into cmp jecxz test and aad sbb out xchg in jecxz cmp mov daa sub xchg outsb fwait testb enter cmpsb scas sbb mov mov mov and xor mov fisubr fcomp (bad) pop xchg push cmp xlat (bad) insb dec adc adc inc hlt (bad) shr jp vpunpckhqdq mov jno sbb sub repz aas lock (bad) pop pop rclb (bad) stos lcall pop inc out sarl movsb sub addr16 (bad) dec fxch out xlat jp aas mov dec sahf xchg sub (bad) cwtl mov inc mov xchg int movsb bound jmp pusha mov xchg jmp inc adc cli push fstps dec xlat mov mov fidivrl jo jp mov popa (bad) xor leave push jp xchg push mov xchg add inc inc gs sti daa cmp mov lods cmp and repz fstps pushf (bad) aad out mov ja lret rcrl das hlt sub outsl inc and addr16 inc mov int3 int3 aas ficomp insb and or adc cwtl xor imull lret and ds insl inc mov lret lock ret in in jno test sub dec lds adc fwait cli test dec int js push dec cmp cs adc hlt xchg lret mov (bad) pop sti shr lahf mov int pop rcrl test mov dec lahf and push push mov paddusw jecxz xchg das cmc sub mov mov sarb icebp push sbb and pusha push (bad) push lods jae push jno icebp or pop xchg xor sahf lods xchg dec outsb shll xor popa out pop cli popa mov add iret mov pop inc sbb jns pop dec cld adc mov out add and or mov shlb hlt cwtl bound cmpsb aas mov out adc (bad) mov or or push or push lea iret int3 sub xor mov mov notl incb inc xchg out xchg xchg outsl mov jl sub clc arpl pop xchg stc push adc ds adc pop adc sub les xor mov cli int (bad) jnp inc mov push dec jle outsl in clc popa push jne jmp dec or in call inc cmp sbb (bad) sbb repz imul adc mov (bad) data16 pop jp clc fwait mov outsl sbb lods movsl or popf xchg add pop inc mov lahf mov pop (bad) flds mov xor xchg mov out xor or pop es xchg cs lods xor mov je imul push (bad) cmp lds dec (bad) icebp loope aam fildl call out loop mov mov push sub mov shl adc inc in mov fcmovnu (bad) idivl push bound fmul das cmp pop es stos iret mov add testb mov movsl xor fcmovnb scas add imul ja ss push mov clc ret dec add mov test or jnp int3 mov mov or shlb and pop sbb mov push sbb push mov cs inc inc sbb addr16 or jmp xchg mov push fbld xor sbb lcall arpl cmp adc push shlb lret sub or clc je add adc xchg icebp xchg ljmp jle mul fistpll adc rorl xchg shrl dec jmp mov push fisubr jb add xor xor bound bound mov pop int aam sbb adc stos aad push outsb jl out fs xchg dec mov in jno ficomp ret lock mov (bad) adc jae mov aas in in sub or jne pop mov inc rcr pop subb lret adc mov or adc pop or cs cs icebp (bad) int3 sti jge push jbe test int movsb mov mov out cmc xchg or lret xor stos push adc dec ss (bad) cmp daa mov mov loope ja sbb int3 jecxz jp clc testl aam mov clc rcll out aas mov movsb (bad) or out mov mov (bad) xor iret outsl mov sbb pop stos dec cmp xchg test imul dec dec test push loop or das pushf sbb nop inc adc sbb jmp cmp inc pop scas lock rcrb outsb call push test test and xor mov loop cmp rcrb sahf (bad) test mov daa jmp push movsl jp les daa fwait test xchg pop push push jno clc lahf loop subl pop pop je nop dec mov mov ljmp jae sbb mov jmp cmpsb inc cmp dec pop inc in (bad) dec add pop or mov xchg int3 repz cmp adc hlt mov pop mov adc in pop fs daa lahf stos push test mov xor jo adc je adc sti xchg push imul adc cmp sarl jne (bad) aad push loope repz lahf and outsb xor jmp arpl fsubs lret mov pop cli lods dec gs add fadds pushf movsl (bad) jbe fs (bad) in popf dec insb out fisubrl sbb inc aad roll dec jns xchg xchg push push push dec out lcall mov aad divl sub jne xlat imul adc lea add push add das adc mov jl and cmpsl inc adc (bad) jb push movsb push cmp xor xchg add adc fsubrl mov into int3 idivb jg jno out in mov fbstp and out dec mov mov push mov add (bad) dec cltd inc sti addr16 lret scas jae lret and xor mov mov jp pop or das out mov push jns sub shrb pop mov mov jns mov out addl add loopne notl loope (bad) std lret js cmpsl fwait dec (bad) loope pop jno mov push cmpsb adc inc cld or sbb jae xlat cmpsl fadd push pop sbb mov sti (bad) (bad) inc dec xor cmpsl inc cltd out mov pop dec out (bad) insb roll bound push push ss arpl stos loopne jno sub and leave push cmp mov mov incb (bad) jle jo mov xor rcl dec and xchg sbb pop or hlt gs jns ja rcrb mov lret data16 push inc push mov mov ficomp and test (bad) push std mov inc mov fistpl jnp cmp sbb lds roll mov xchg lret (bad) dec inc decl sbb cmp mov pusha add into lods xor xchg out pop lret dec rol icebp imul pop (bad) sub jnp fldt mov lock (bad) push out sahf mov and fs mov leave fwait repz aas outsb hlt adc aaa cmp out cmc mov inc movsb push sub test xorl adc jns and inc lret xchg sub push std fildll fnstcw into arpl loopne mov jb scas adc sub clc sub leave test adcb push add aad enter outsb loop test cltd imul lods imul adc aaa xor in jns mov pop mov pop stc hlt sbb pop push adc push fxch pushf movsl sbb push (bad) je xchg aam add ss xchg std sahf jmp test mov lds xor inc clc adc mov xor cmp dec pop adc sbb mov fst xor mov gs xchg cmpsl stc rcll arpl jmp mov mov fldenv shrb (bad) pushf rcll mov add ljmp outsl pop jecxz sbb test mov dec aas pop (bad) and cmp cmp loopne in inc inc cmp aaa and popa (bad) pop add sbb mov cld cmp xadd nop cmp enter in jp mov pushf mov fimull ds xor xchg pusha js pop aam test sbb xlat movsb stc (bad) jae enter popf pop push adc cli xor lods jge (bad) in jmp pop pop rcr cmc jle inc mov mov and movsb dec repz sbb sbb pushf repnz and mov jmp mov outsl (bad) sbb addr16 test push pop mov daa fdiv sub je in test (bad) repnz and clc lods mov in and pop ret movl mov fs mov fyl2xp1 clc dec lahf mov addr16 mov fwait test popf mov nop sbb xchg jg mov stc pop cs lcall lods xor fdivl hlt movsl mov stos jns cmp lret lret jl dec xor movsl inc test push rcrb std add xchg es (bad) xor jmp cmc jp aaa loope andl push aas xchg inc jb aaa pop or inc inc inc ret mov insb pop mov inc mov mov mov sbb xor sub dec dec bound mov cmpsl mov mov pop rolb je mov mov loope mov mov add jne sti out dec lcall jns add jle dec pop clc shlb fs sbb xchg mov mov pop jbe add es ja mov xor and push push arpl mov loope jnp inc xor nop xchg fisubrl repz (bad) testb adc dec adc fisubrl or test lods loop xchg sub mov xchg xor sti ljmp or push or mov sbb add cmp cmpsb das dec fld leave and sbb add push pop xchg and xor (bad) and mov jne shrb hlt adc out push pusha hlt iret dec movsl lds int3 push mov lret or xchg push mov cmp mov aas add xor inc sub jnp adc mov cmp rcl push call xchg mov fdivr ficomp push sub sub test std lea (bad) cmpsl pop scas lcall in addl sub jge mov loope out pop mov sbb and mov into test adc xchg popa xor std std xchg in out or fwait out mov push push outsb aas movsl pop test movsl pushf add cmc sub mov xchg xor orl inc add mov pop mov xchg adc fcmovu pushl mov mov divb movsb imul sbb daa icebp dec cmp test and jns stos pop xlat mov xchg std rcll frstor adc fwait mov gs repnz xchg sarl cltd adc push lret cmp out inc in lret jb and cli inc mov adc loope push insb (bad) dec pop test stos dec je sbb xor push sub mov inc jge add std pop repz push stos outsl xchg push push movsl imul fisubrl dec or dec adc (bad) sbb lds mov jnp inc std negb and loope cmp insl add xchg cmp mov fisubrl pusha push mov popa (bad) iret sbb cmp dec cmp pop add xchg aas aaa ficoml push adc pop in push fdiv out push shr rorb call mov push mov push in stos dec out in mov addl in add ret push mov or push xor xor movsl cli sub (bad) mov fnstsw push call loope idivl les insl outsl dec orb cmp pop mov push scas mov (bad) push jns pop ficom aad andb movsb shrl and sub (bad) jnp xlat int in adc cli inc cmp call addr16 stos sub mov out ret outsb inc imul fidivl inc std sub mov ret jae (bad) dec ret inc in pop dec loope xor fldl rcr std mov sub repz add jmp ljmp add loope clc scas insb inc mov bound cmp xor imul jnp sub xchg and inc sbb pop je jle decl xchg mov ret adc fstpt dec pminub in xor mov jbe popf push dec sbb ljmp out addr16 xchg iret cld fnsave inc jge xchg add adc imul dec ja jo jnp aaa dec sub mov outsb dec out or xchg sub inc mov and lret sbb call sub add sub fstpl sub lret movsl pushl mov add mov (bad) fidiv push (bad) fs shrl add jae lcall inc addr16 (bad) xchg jnp and pop movsl mov mov jne xor mov pop add movsl arpl lods xchg lahf pop mov (bad) dec fucom das and or popa cmp add (bad) cmp mov stos mov shll lcall push hlt and in inc aas and jecxz sbb and lock mov dec ljmp xor mulb mov xlat jge inc aas mov pop add jo jne mov cmpsb xchg push scas mov sub fstp or jae pop jne mov sbbl fs pop lahf ds xchg dec or cmpsl mov sbb jnp push sti xchg fld1 mov pop inc mov enter mov push sbb xchg jle dec mov orb xchg (bad) xchg inc mov out pop lcall add cmp mov push xlat dec inc fdivp (bad) fistp pop pop jmp test outsl or fcmovnu in cmp mov push inc inc push stc (bad) or loope es mov mov ja je jae mov xchg ds sbb sub popl popl loopne inc push scas push jns pop icebp mov jg,pt inc cmp lods or cmp into (bad) pop test pop test inc test mov dec mov jns arpl sbb sub xlat sub sahf dec pop jmp and repnz push jmp ss sbb add cmp ffree mov aad call sub or scas addr16 sub jno cmp dec or popa (bad) lods xchg mov lea rcl test jp jo aam mov and xchg aas fwait jns (bad) mov sub jle imul adc mov pop mov negl pop xor push cmc clc add std adc movsl xchg sarl push jo xchg mov push stos mov nop xor int and out sahf fs jne sub (bad) enter mov sbb int xchg pop sarl testl pusha pop rolb mov mov xor sbb cli scas decb fdivs subb out mov jge inc fild aaa repz sbb mov sbb call xlat push xor jno cmp out inc mov inc test dec sti xchg cmpsb jno push or lods fs sbb xchg and and std les andb movsb xlat lahf popa es sarl loop adc aam imul leave xchg imul mov pop sub push or cmp mov inc ror jb push mov stos push out (bad) push js inc inc out xchg dec xchg shl mov xor fstpl (bad) cld pop (bad) and push dec and loope add jecxz inc xchg xchg mov add mov lock jecxz cmpsl xor add push adc and mov push int or mov mov outsb inc xchg push push in dec daa hlt inc lahf adc add mulb cmp daa and xor push pop ret xlat push mulps xchg notl cmp ja lds jo and adc dec mov popf inc mov pop push das scas sbb push sarl mov out (bad) add loop jg mov imul inc clc mov ret nop mov or cmpl outsl inc in dec xchg pusha aam insb cltd mov (bad) mov lret cmp cmp movsl xor pop fisub movsb clc rorb (bad) fwait decl sbb adc fstl jb imul (bad) (bad) jbe inc imul sahf xchg xchg push sub jns xor mov cmc test imul jbe inc ret push or mov rep hlt mov xchg popf mov inc in cs pop testb ficoml mov cmp xchg xchg shrl sbb aas or xor dec gs mov enter insl add repnz movsb jns imul add leave and sahf sbb cmpsb mov mov push or ret dec jne sbb rcrl inc js or mov mov and sub sbb and mov jmp push xchg fwait hlt sbb leave add cmp pop sub mov loop and xchg call mov imul fstpt dec jno xor inc jg lret and sub sub jge lcall sub adc add pop dec adc cli or cltd into dec out jecxz adc shrl add inc xor into or inc sub lea rcl popa push lcall cmpsl fidivr and fiadd mov (bad) in js xchg andl xlat les mov mov stos dec xor leave push stc pop adc mov cmp pop lea int3 les daa xchg push aas lret dec stc pusha mov lds test jno pop das dec mov xor sub pop pop out inc pop xchg push popf movsl pop es inc mov and aaa inc lods das dec mov jbe adcl pop dec sub add adc push lcall jle pop xor fisubrl sbb jns pop bound js push repnz scas insl cmp stos sbb lret icebp mov xor inc lock movaps mov xor sbb push jb jno (bad) call add icebp repnz shlb ret rcl insb dec hlt mov push jb sub je cs cmpsb and fnstsw call mov fwait cld cmp and scas sti mov ds sbb and mov (bad) icebp mov lods outsb xchg add xchg push mov popa movsb inc and mov xchg jb nop mov xor xchg or rorb ds cmp int3 insl mov sbb adc fimull dec lods adc xor (bad) or in lods rcr xchg out xchg jmp (bad) or cmpsb mov adc les push add jp sub push jae das pop sbb popf or mov out inc inc stc pushw mov aam ja data16 les ja mov (bad) sahf jge mov clc pop stos or movsb mov cs lret sbb pop adc daa mov (bad) xor popf les pop std mov push in mov rcll enter add cmp push sub ja mov aam je popl js mov lods arpl jo push xor outsb data16 (bad) jo mov xchg or test mov adcl loop push jle scas pop std sub sarb jo std jle push xor sahf (bad) fsts addr16 mov es xchg xchg mov shlb and pop dec jecxz mov fs repz cld mov int3 inc sub roll test out adc cmp jge je aad push test jg ja cmp push xchg inc lods popa lret inc cwtl xchg lods mov and in (bad) fstps push clc xlat inc movsl jl popf add mov aad push shrb jmp dec int call cltd add inc pop ss arpl arpl scas popl das out in jae and mov popf test dec adc xor jnp inc fwait jne sbb cmp cmp adc jge dec adc xchg dec mov fidivr clc aam repz arpl pushf incb out fcoml mov push (bad) loopne xor ljmp lcall xchg es add outsl sbb cmpsl jp enter mov (bad) jb bts xchg jmp mov leave or dec arpl mov scas aaa loopne js test outsl lods gs jne pop sbb outsl or pop icebp jo xchg and out sbb jo fisubl lock push das inc dec ljmp stc cli mov ret push push pop stos ss inc insb rcrb (bad) rclb stos loop push mov imul popa push adc mov or dec sub xchg lret stc test out scas fadds push imul push and mov lret cld or (bad) xor adc push cmpsl sub test ja outsb test popa cli idiv (bad) fildll sub (bad) mul xchg loope lea cmpsb sub add and mov subl jo (bad) or jp,pt push inc and xor cs sbb movsb fsubrl dec hlt loopne je (bad) lcall mov in jne (bad) sub xor lods xchg aas (bad) fidivr scas pusha push pusha inc push enter std push jle fwait popf inc mov jmp mov pop (bad) jno imul imul xchg call call cmpsb lcall fildll shrl loope adc mov jl pop cs mov sub push push in stos mov dec cmp mov es xor lds (bad) imull jmp mov xlat dec jb jbe mov ja mov out lret dec jge das cmpsl test ret popa sbb sbbl fisubr sti (bad) bnd cmp aas xchg mov cmp std mov stos pop xchg cmp jo aad dec xchg jl mov mov mov adc fsubrl (bad) test popa (bad) sbb xchg sahf pop add cs add push sub es das cmpsb pop idivl xchg into rorb dec mov adc push inc adc movsl or xor pop jo sbb into (bad) push daa push sbb push sbb push setge lret es faddp push pop movsl dec ficoml mov das inc daa out ret ds daa cmp xor nop (bad) je addl addb cmpsb out jmp iret cmp push gs mov sahf mov lahf les jns sub ljmp mov movsl xor imull pop fwait or pop bound out xchg dec push inc clc sbb cmp arpl xchg cmpsl inc dec xchg xchg inc (bad) jno pop mov sub into clc scas dec sbb fmuls xlat shr inc jno loopne mov mov dec sarb lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add pop inc test pop mov add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fldenv add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb xchg pop lret mov jae jbe mov fldcw dec popf mov movsl movsl xchg insl fldt js out mov jge or and add repnz ror pop xchg mov jmp jo pop mov mov test arpl cmp sbbb or (bad) das das xchg xor adc push les stc pop subl xlat mov mov dec rclb pop push test bound mov and mov jnp jb aas xchg or std (bad) (bad) adc ret in mov push (bad) clc out enter inc xlat mov movsl inc mov and mov fisubr cmp paddw fldl cmpb js cmp addr16 in sbb jle scas pop sub xchg xor sub movsb scas jbe sbb mov xor icebp pop repz rclb push pop out jne imulb add mov mov mov mov mov xchg mov fstl mov dec cmc imulb sub out in aam mov cltd adc jl xor adc enter gs xor sbb je dec test outsl lock nop pop in adc fidivr rcrb cmp mov pop sbb mov jno jo adc sub lea mov add mov inc shrl sbb jge repz dec push cmp fnsave daa xor loop aas fbstp adc cli cs jne jnp (bad) into mov (bad) aad push xchg and cmp movsb push mov xchg xchg mov roll in xor pushf mov push dec adc mov add (bad) mov test adc jmp xor leave movsb push xchg adc lock ret jge mov jmp jmp mov or mov cmp jo pop cmpsl add mov or mov lret (bad) mov sbb and dec pushf imul cmpsl leave into arpl arpl jecxz add scas dec sub lcall adc fisttpl push int mov jecxz push loopne das lods sub cmp iret rcrb adc inc add (bad) sub mov mov scas (bad) fcompl add popa xchg sahf mov fs daa rorl sti pushf clc subl sbb pop jns sbb push and cmp out es hlt stos xchg lea stc fdivs ror and mov xchg test imul ficomp ja mov (bad) pop test outsl mov add mov adc sbb jb jmp or cmp mov sub sbb push lods and mov jo arpl test hlt jno ds xor movsb mov pop clc fcoms or test dec or jbe sarb mov cmp mov int3 sbb mov imul mov (bad) jbe scas rcr sub dec inc jmp imul out loop jge jno mov xor outsb pop xchg mov addr16 rcrb aam pop test dec cli (bad) cmpsl sub icebp jb movsl mov icebp or cmpsl xchg xor fidivr aas stos lock gs push add icebp lea push inc aas mov sub (bad) xchg aaa xor sub pop jb cmp leave jbe out mov in xor insb sub dec sahf js adc sub in arpl xorl out mov (bad) mov inc sbb sub ja dec pushf loope push jmp insb in and mov pop jo push sub add lods inc xchg inc inc push dec jns and or jp outsb pop pop daa stos sub ffreep mov jbe ror xchg fs add sub push stos xor sub mov or mov sbb js leave sbb adc mov loope adc cwtl jne dec xchg jp (bad) std xor dec sub sub cmp stos inc shll cmp insl sbb push pop arpl es inc xor and push lret loopne dec (bad) loope adc xchg imul fwait (bad) jl jb addr16 jle iret into fdivrs adc inc dec aad jno pop sub movsb xchg xchg jbe xchg daa sub (bad) cmc notl add fsts mov bound jge int jns in lea sub and xchg push pop mov dec push repnz (bad) xlat cmp je shrb js adc cmp xor fwait adc mov or mov (bad) out stos xchg pop fidiv pop xor mov xor push sub xchg mov loope inc jg and push (bad) in lret or (bad) mov inc lea data16 push or cmc pop lea shrl lods xlat es jo popa (bad) mov xlat popf jae dec test inc or mov shl dec mov je adc adc (bad) (bad) es mov and cli adc sub int mov popf test ds push std sbb mov sti and push movsb jne sub loope adcl je xchg movsb ss mov mov rcll cwtl xor (bad) xchg jbe cmpl mov mov jle enter push inc cmp sub dec mov call stos int mov mov imul pop mov mov in rclb es pop dec xchg add push jg pop pop rcll loope out cmp add mov flds pop mov sbb inc lret adc fsubs cmpsb test bound jo fidivl cmp test subl pushf xlat add test sub push sub and mov mov movsl ret int3 mov pop pop or push out mov mov fsts add and in jg pop pop sar mov ss or mov mov xor jae scas out daa (bad) scas aas jl inc lea fbld mov add mov andl les mov cwtl dec sub dec mov lock push mov and jmp cmp sub sahf jae fildll lea out in xor inc and mov lcall fsts sbb sub jle pop ret push fucom fist lahf int xchg std push fiaddl dec inc fs shrb shrl or or lahf fcmove inc cmp dec lret mov icebp std (bad) in mov jl test or adc fmull sub lods out cmpb mov std inc in (bad) and cmpsb div sbb (bad) lret jae sbb (bad) adc or ret sahf pop push jno inc sub ss (bad) cmc pusha mov pop jecxz adc dec dec inc mov add pop int rcrb pop lcall or mov je leave jae cs mov lods repnz cmp jb mov push hlt sub mov dec sbb mov es pusha and testb mov sbb sbbl outsl or mov dec das inc out pop popa inc add std xchg push (bad) xchg movb mov mov outsl cmpsb mov inc (bad) (bad) in pandn fadds mov push xchg icebp pop and dec dec fisubr ja,pt fsubl jl call divl pop fwait ds ficom out int (bad) cs jne xlat divl das (bad) cld ljmp or call clc insl mov jno push sbb xchg popa in test rcrl push jno pushf or fnstcw pop lcall insl or shll add and in add ljmp popf in mulb (bad) (bad) dec fiadd leave lret jmp mov outsl jmp mov ja out mov xchg inc dec xchg outsl dec jl cs cmpsb mov inc roll cmp cmp scas xor cmpsl outsl inc pop dec int3 call fdivrs adc cmpsb push adc push insb sub xor test das je sbb (bad) repnz shlb jne enter jmp fs xor andl mov and sub subb fidivr pushf push pop xchg notb adc jnp stos cmp lods outsl jbe dec pop insb mov stc sub push push jmp or mov mov and inc lods jp test les dec jecxz xor mov and cmp orb sbb movsb negl mov repz popl outsb rcrb dec xchg mov push inc mov jecxz in fist in mov rcrl imul fadd and test add dec mov stos jb cltd dec test or in mov push inc out sub push or xlat inc pop mov inc xchg cmp jecxz mov js push pop mov inc push les movsb jl xor mov iret xchg fisttp or (bad) push sbb mov or inc int dec imulb pop or cmp outsl mov adcl nop sbb push and xchg ror sbb fdivl iret cli mov in repnz sbb jp scas es mov dec jge xchg inc and lds fcompl es xor hlt insb add imul xor popa mov mov ret xor shlb xchg cmpsl out jns add jl enter es rcrb je lea loope xchg mov pop bound test push jmp add cli into push adc push lahf pop push adc testl (bad) lea lea rclb inc or xor repnz aas rcrl enter lea je in ss aaa outsl sub aaa inc mov lret jecxz dec test wbinvd mov or push mov popl icebp inc shll adc pop lods cli pusha mov push aas add rcrl iret mov jo sub cmp add inc cmpsb mov lds pop daa or sti testb pop lock in nop loop ss in rolb pop lahf (bad) xor (bad) stos fldl aam daa faddp test sub cmpsb sbb pushf pop (bad) sub scas jnp jbe xor sbb cmp leave fnsave xor push xorl cmc mov into push push push sub mov xor (bad) xor scas stc sub jge pop add push jns dec adc mov adc push jl pop subb pushf adc loopne mov sbb push test cltd push loop movsl test lahf add adcb imul xchg movsl loopew jp outsb inc daa jp jne outsb dec fwait mov mov in or push mov fdivl mov dec lods sarb mov sbb add adc in sub pop loop enter pop jle mov xchg cmp pushf pop setge lea pushf imul sbb sub adc leave push pop mov mov pusha mov int das cmpsl inc inc jae cmp mov or mov fdivrs inc ret mov add dec sbb insb scas dec xchg and cwtl fs int3 fwait les push add push jbe cmp sti mull jnp inc mov rcl jp fs lds push ret cmc push mov inc stos andb ret dec pop out mov cmpsb pop push aam popf out dec in in sbb xchg gs and push mov jg call push divl xor jg rcrw lea sub mov stc cmpsb sub push cs sub nop dec stos loopne ds aas xchg addl xchg mov movsl dec mov adc pop push sbb or je leave mov movsb inc fdiv enter out xor loopne sub insl sub jns dec xorb fs pop mov mov clc mov cmp adc xor jbe mov sub pop js imul sbb dec mov iret adc adc or dec jmp mov cmp cmp repnz insl push dec sahf xchg cltd and and je mov and xchg cs fisubl sbb pusha fwait sub into addl fistp jp cmp dec (bad) xor inc cmp stos jle call clc adc or mov cmpsl push push jbe push lea or pop ret cld fsubrs mov mov loop punpckhdq aaa lret add cmc aas cmp and push push pop mov (bad) out out les lcall nop xor fldenv or cli push out jb in int xorl cli mov adc (bad) dec dec imul adc push push in call stos ret fildl mov or push sahf iret adc mov ss addr16 mov andl push mov xchg mov pop adc decb daa and cmp fcoml and popf adc push enter mov fcmovnb cmpsl jnp ja push push in notl icebp lods jg and and lcall loope (bad) dec inc push or lods lock jmp test addr16 mov lds sbb insl mov jo xchg xchg pusha int3 and ljmp shrb add daa aam ret or xchg dec daa rorl xchg imul mov test pusha pop arpl fwait pop xchg es xor add daa and imul and cmp inc mov and data16 inc test flds in movsb dec movsl loope and pop push jb add rcll fldt (bad) pop divb sbb push addr16 loope jo test jne cmc repnz ds jns sub scas pop (bad) sti in sbb mov leave leave lods imul pusha ds cmpsl pop (bad) aaa cwtl and ja fsubrl repnz (bad) outsb and pop lea scas das ljmp ja fwait out and jae rolb jne sub ret adc cmpsb pushf or popa into gs mov pop mov sbb push dec and jp or insl fildl cmp cli jb rorl mov fsubrp stos out push cmpsl insl push stc jp in pop push les sbb mov cmp xchg pop sbb push fdivrl bound int mov cld mov cltd sub jecxz (bad) xor jb lods enter lahf mov mov pop in icebp xchg push sbb bound fnstenv inc pop add sbbb mov lds leave jno stc popf adc or aaa sub xor cltd jecxz unpckhps ds rolb call test subl sar push popf xor pop pop stos push pop (bad) mov add movsl mov bound fs std flds mov jmp std and fstpt adc push imul lret and xchg inc lods sbb (bad) mov stos sub out inc jmp xchg (bad) out xor inc push dec inc and sbb scas addb testl xlat movsl insb inc addr16 pop lods push lods addr16 jle mov pop stc out pop repnz cmp bound stos adc push (bad) testl ds (bad) orl push xchg push sbb pop cmpsl mov pop outsl jecxz inc sahf sbb push sub hlt xchg xchg add sbb std mov inc test sahf lea jnp jne mov push pusha push movsb out xor aad lret js mov (bad) fnstcw std out jge imulb fadd inc (bad) into jmp cs andl dec adc mov lods fwait mov cmp fdivrs push dec lret xor mov lret fldcw pop mov inc and cmc xchg adc xor aam dec call xchg xor lods dec mov sub lea xor lahf imul cli into sbb pop sahf push scas fs mov in mov out andl ret iret inc imul push aam mov ror (bad) fidivrl mov imul dec into idivb adc je cmpsb adc mov (bad) adc ret cmp arpl inc aas gs pop iret lahf lea xor aam xor push sti hlt push arpl insl cld sahf scas push sbb xchg (bad) popf adc jmp xlat pop inc xor and sbb mull xchg sbb fimul jo cld adc nop rclb (bad) pop insb add movsl adc arpl int3 imul mov mov test (bad) mov sub pop mov cli arpl divl sbb push std dec pop jb std fldenv sub adc xchg cmp fsubp test std into gs aam int3 and test jmp xchg ja mov outsl mov (bad) aad loopne xor sub xor mov mov jmp stc pop fnstcw xor pandn sub add fsubs cmp mov sti or add aad jecxz jo sbb mov repnz push xchg fs gs and stos cmp ljmp mov sub sahf imul ret hlt dec je mov pop enter xchg dec ss jmp cld ret and sbb xor in sarl (bad) jecxz cmp dec xchg int shrl inc adc fnstcw stos out adc dec sub sbb stos dec mov enter cmpl enter xchg mov fs inc sbb jmp adc pop jle jno jb enter daa mov add add pop movsb loope scas popf jbe (bad) mov ja es ds lahf cmp out dec scas mov notb sub int3 bound xlat vrsqrtss dec and out mov xchg lock aaa and or shr sahf dec cmpsl (bad) fxch jmp jno cmp mov mov insb push loopne lret adc jle sbb scas mov jg clc notl jo push add loopne jno (bad) mov mov and fcompl inc iret or mov jge mov sbb mov iret (bad) or aas and scas jns out push or xchg mov (bad) enter jno fs cmp add mov or dec stc in imul sbb ss fsubrl outsl mov cwtl jo sub pop mov mov aaa aas dec rcl cmp (bad) pop add popa push xchg inc mov add push cmp add push icebp test shrb mov xchg adc add mov repz sub pop imul repz mov mov imul inc mov jae pop fiadd xor mov shlb insl xor jno negl movsb inc pop mov mov fisttp push aam xchg data16 sub mov push rol or test sub rorb push pop push scas mov and and sbb jae xchg adc xor fstps push xchg aad cmp rol dec (bad) ljmp jge and fsts xchg aaa outsb adc mov scas pushf sub jmp push cltd loope mov inc inc pop je in outsl lahf popf sub cmp das in lret adc inc pop jp push and sub mov or xchg movsb mov mov pop or ss int sbb add scas leave mov jae leave cld fisttp aam js and and scas mov call imul sub into mov scas test xchg or lds mov push add dec pop adc cld pop adc xchg xor jmp sub cmc or lods lods data16 sbb in jno out in repnz hlt jmp push jns mov lods repz (bad) sbb cmp sbb test adc inc scas ret mov sbb pop fnclex out aad jo mov mov int xchg iret fcmovnb cmpsl pop add lret inc lock loopne pop mov mov out mov adc push mov and (bad) jbe lcall push fstpl stos sub dec testl in add popf jmp lret cmp xor (bad) stos mov sub arpl xchg jge fisub je (bad) mov push push dec je fstpt (bad) cltd pop mov cs fstl pop mov mov insl in mov out fimull in adc sbb testl sub lret sbb mov aad inc mov pop jg pop int push push std rorb ljmp decb mov fwait pop cmp test pusha xchg mov sub leave js in jnp pop sti dec inc pop and mov add fidivl outsb sub aas int pushf lret mov in add in mov ret inc sbb cltd loopne sbb and adc enter or scas mov pop xchg xchg rolb sub sub ss sahf test fcoml rolb mov and shrl (bad) addr16 mov xchg cmp inc mov (bad) pop into or jae pop dec pusha es xlat (bad) push (bad) mov das and cli subl test loop enter nop (bad) les sbb cmp mov pop stos test pop cmc mov popf es mov pop int3 ja cmpsl jl and out push ds aas cmp xchg cli jbe aam inc mov push daa jle inc daa out mov and cmc dec ds sub bound mov std mov push ret cmp inc jbe push mov (bad) push stos xor xor push scas jmp nop nop dec pushf sub fcoms adc (bad) hlt jmp adc sbb inc lahf xchg xchg movsl cmp sub push iret call stos hlt negb add addr16 nop push aam push xor or xchg aaa fadds push and pop adc push test data16 and outsl pop leave hlt lods loope inc out lahf loop ret loopne lds fnstcw mov pop cli mov dec lods add mov iret jnp mov daa in ja adc cmpsl jmp and mov leave hlt outsb xchg enter call nop or or imul xchg notl mov (bad) and loopne pusha aas mov stos cmpsb mov mov popf dec add mov jo push jmp fs sbb xchg cmc sbb adc idivl shl xchg mov mov or lret push cmp aad int3 lret das mov idivb repz jo pop insl cwtl es pop (bad) jns das cmp sar ds pop cs data16 imul xchg in out gs addl imul fs push mov push mov loop in mov (bad) sub push stc adc cwtl jae sub adcl decb inc or sub lds shrb pop testl inc aaa xchg jp mov pop mov fwait and stos sub inc andl cmp lahf roll (bad) ja sbb lret jle rcrb pop mov jp adc out call push mov adc adc out movsl cmpsl xchg test ret and jno xor sahf scas shll ret ds jno mov jo dec jnp (bad) js cld mov sub sbb cs les add test std shr aad jns mov jnp fcoms jp inc imul xchg aad push inc jae lods add dec xchg ret loopne test imul mov mov adcl xchg inc xchg test mov loopne sbb jae scas movups outsb mov cli rorb outsl (bad) or pop (bad) int into (bad) ja add xor sbb js mov pop mov dec fcomi loop (bad) pop out fidivl mov ffreep cmp outsb xor in mov fwait inc loop insl jnp rorb sub mov mov sub js pushf dec mov dec push sbbb les aad lea enter lcall push mov push aad aas aas pusha sub dec outsl mov sbb ffreep lret cwtl add add xor out pushl lods sub and mov sbb xlat xchg imul sub dec fdivrp cmp inc psubb loope fwait test mov mov cmc iret fwait aaa sub cmp adc mov out into xchg mov mov outsb mov out jle push jns (bad) pushl push mov jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add aas add adc or add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb (bad) xor fnstenv mov in dec jbe xchg fnsave fcomi ds std (bad) ds jge aaa add or cmpb push into into and ss pusha sbb cmp lret lods int3 test cmp push gs (bad) pop je aas cs adc sbb ret cmp test jmp dec pop adc adc jmp push clc jl repnz push pusha mov shlb mov (bad) xchg push mov mov int mov js sub sub dec push out sbb pop push xchg lock adc pop loop mov mov aaa in cmp pop stos ret test data16 aad jecxz pop cmp push or add add loope mov jo out mov xchg fistp push push or inc add daa (bad) fs aas or adc fwait and iret es mov cmp sub mov test inc xor jg adc pop rdtsc rorb mov or in subps ss (bad) cmp cmpl testl xlat sub jo or cmpsl xchg xchg lret push aad loopne in add mov jmp inc fwait jl push push aad xor inc incl fwait pop sub xor fwait mov cmpb call adc addr16 push and insb fstpt clc xor sbb repz movsl pop pop add mov popa adc arpl loop ja imul jge clc push sbb sbb xor test js push sub jge sahf cld stos push bound (bad) mov out mov cmp pop in add mov mov call jne fstl jg or (bad) or in jle push jno and mov xchg fs (bad) fstpl into outsl sti mov and pop mov outsb or int3 add mov dec pop xor out insl mov aam push xchg cmc xor pop xlat daa cmp sub sub and scas xor test pop rcrl push cmp adc mov fmull loopne out rdtsc push mov adc or mov aas inc int3 out xor ficoml test mov movsl mov pop lods cmp jno pop and ss lods mov (bad) les cwtl lods scas cli push push push clc into loop popa xor fdivr xchg call adc pop and aad ret aaa out in jmp mov hlt imul hlt outsb push scas jecxz push push jae inc icebp jae pushf xchg sti test cmpsl inc pop sub std pop add adc fisubrl test pop or pop and add mov fdivrl sub adc pop out sbb scas inc push jmp int xor xor pop ja jnp jmp adcl mov lea lea jg pushf fcomps xchg cmpb jne mov and test stos daa ret xor or aad and inc mov cmp mov iret outsl or xor push leave je cmpsl sbb lcall sbb cmc fnsave scas mov mov add xchg mov loope (bad) iret (bad) leave repnz mov daa push sbb pop rcll in in out es andl stos inc (bad) jo mov dec aaa mov test xor xor rorb mov or mov cmp ret (bad) test mov inc jmp (bad) testl or dec mov sbb fcomps bound repz jae sub xchg push jb and cltd xchg jmp pop xchg pop and decb adc mov add push push push (bad) dec out push push (bad) int cmp xor push push (bad) pusha lods jo lcall andl adc mov fsubs subb dec inc xor je xor in sub inc sbb repz aaa jl in mov repnz icebp cli xchg dec lods (bad) (bad) xchg loopne or sbb (bad) jae fsub xchg inc arpl xor movsb or mov cmp insl jb push mov aas clc popf addr16 aad outsb cmp fildll and int3 pop insb xchg ret xchg dec mov pop gs add aam mov xor lock lods rorl test dec fcmove jns cmp aad (bad) int stc mov adc repnz dec or sbbl (bad) mov sarl xchg lds jmp mov aam push aas jmp out ljmp aam or mov (bad) test adc cltd sbb (bad) ja xchg fs subl jnp jg xchg lea xchg aaa mov inc jns (bad) mov cmp test adc lret imul stos ds sub ljmp int mov jmp cmp icebp mov jbe push popa xor cwtl and sbb (bad) mov aas outsb dec lds rorl cmp aam add mov mov mov cmp xor mov xchg popa shlb lods popf aaa fwait mov scas sahf cli xchg loop jl ret lds xlat cmp fidivrl js fs sbb adc push dec mov cmp ja cmpsb (bad) pop fiaddl aas cwtl mov mov call or test in cwtl jle or pop sub add mov repnz push xor enter fwait (bad) rcl cli xchg lahf scas lods sbb test arpl and mov sbb ss mov lret mov push pushf decl loope sti addr16 fdivr cli cmp mov jb repz ret push xor jb scas mulps cmc pop insl dec scas nopl jmp jmp (bad) xchg xchg es mov xchg mov cli push cmpsl cmp fcmovne mov and es fcmove in xchg das xchg mov lahf (bad) cmc push mov (bad) xadd movsl xchg cmp xor add movsl xchg pop push or xor adc jno jle rcll mov repz aaa and adc sub xchg jle arpl cmp addr16 pop daa mov imul pop inc dec cmpsb lds adc popa subl sub rcrb mov xchg cli (bad) xlat sbb les fs or sarl sbb xchg add outsl adc jmp in inc sbb or mov sub test aas dec addr16 iret leave mov push in mov in xor gs cmp and sub pop sahf stos andl xchg test pop aas popa push mov jae jb lahf out sub cld test sbb ret xchg test lret jl push lods mov mov mov hlt scas cmp sub stos jg xchg in iret in and sbbl out imul inc ljmp cltd push push and out add cmp in jnp iret fisubl xor cmp sub fsub push jecxz sbb cmp scas push cmc iret lret sbb mov cs gs fstps xlat stos fwait cmpsl mov rolb loop mov (bad) or rcrl sbb pop pop fstps fcmovnbe ds cmc mov icebp es jmp (bad) (bad) in outsl mov mov xchg mov ja mov push stos (bad) int pop clc stc stos movsl cs call aaa adcl call mov scas cltd out in test xchg jg jo push lahf push stc mov xor adc jb adc cmp sbb xor sub dec mov je dec push call push cwtl jl pop testl enter lds mov nop sti dec push ss sbb jnp jp pop sbb jae jb imul push in mov loope mov out sahf push inc push jno cmpsl pop cvtdq2ps pop mov lea pop xor popf (bad) jbe adc std std fcoml scas pop and mov push jp (bad) mov or roll fwait cmp div aaa shr data16 lds jecxz inc dec fcmove ljmp xor lret ljmp push imull test (bad) outsb les aam es sub std popa dec (bad) xor jg jae adc mov test xchg popf or adc sar mov or repnz push cli or jge icebp js addr16 push daa inc xchg aas adc push enter mov aam fisubr (bad) in ljmp xor sub cmpsb lret mov aam pop push cltd or xchg outsl mov lock pop movsb mov in push aas (bad) popf jns aad mov loop arpl jnp inc sbb fcompl lds pushl enter inc jns xchg cwtl ret or push stc pop inc add aad jnp ljmp js out cmp fs das cmp ljmp xchg icebp test add sbbl cmp dec xchg mov cmp and out test jecxz xchg ror and push cmp pop test xchg negl out movsl ret cmp adc daa xchg or mov mov push adc mov sti push dec mov enter inc test xlat ret push and jo inc xchg jecxz add or (bad) test mov movsl enter loope jae pop out mov rclb push cmp ss jmp mov adc push sbbl sub iret out gs sub arpl xchg xchg add mov sub jbe leave nop rcrl in jg lea push stc loope pushf xor xor and cmp and xchg mov shr (bad) mov mov std mov mov inc xchg outsb inc sti mov xchg add scas pop pop jge fwait dec pop fisttpll je loop or cmp add inc cld insb and lods sub fmulp loope ds and pop fwait mov dec sti or jge push insb sub cmp cmp xchg (bad) loopne push xchg stos arpl sub cmpl inc test fsubs sub int das cmp sub scas das hlt sub jno mov movb aam dec push cwtl mov push fimul add or fsts inc xlat (bad) xor xor shll outsl add ror out leave (bad) jo (bad) push xchg xchg (bad) repnz fwait ljmp mov jmp bound xchg cmp (bad) scas inc mov or aas or mov inc scas movsl gs inc mov fs push aas outsl and fwait and scas jae dec mov sbb lret pushl sbb lahf arpl adc dec sbb call dec fwait push (bad) (bad) ljmp mov jge sub out call out movsl mov outsl cmp fist and dec in jb cmp adc fsub xchg adc das dec or outsb jg add fldt xchg and stos mov sbb lcall mov das movl sub imul mov pop (bad) adc jae push rcrb adc adc bound push cld cld or dec sub cltd xor jle leave and insb mov ja sbb jne es inc inc and sbb mov jo ss mov loope shll imul daa (bad) jge jo lock sub push cld push fdiv adc sahf (bad) outsb or pop mov pop dec xchg jns inc xor jb in jmp ja pusha cmc jbe call dec shll sub es push insl sbb sahf xchg in xor mov in pop push fidivl adc gs inc gs dec in or cmp cmp dec xor push sub pop out js pop mov outsl fwait mov shll sti cmc and mov jg lea lock ret lods xor and push mov xchg test cld adc inc dec (bad) outsb leave data16 push push scas int lods add es and mov push mov test or sbbl xchg sti ja aad popa pop (bad) je push pop push cld sub rcll mov push fcompl push lret out aaa (bad) out adc sar outsl push jae popf call add lods cwtl rorl dec jle sub outsl sub fcmovnb adc mov pop pop sub std mov and pop dec mov in in or mov add sahf mov aas or faddl (bad) cli or mov push dec and mov pop sub popf push testb repz cmp js lods movb stc mov inc dec das dec xlat imulb or mov cmp pop push pop sub fist enter out repnz lock xchg sbb sbb cld mov mov lea cmp pop movsb ss pop jae (bad) jg call push jge inc fsubrl lea cmpsl lock sbb pusha xor pop adc (bad) mov sahf mov and or dec mov mov jl mov pop dec adc xor movsb push popf aad mov repnz rcrb test andb aaa pop mov xchg outsb push add test cmp call sub lahf cmp jl push xchg stos jae or cli (bad) (bad) movsl mov fs xchg test lea sbb psrlw mov popf xlat mov mov popf movsb sub lods andl lock fcom dec inc movsl adc mov adc pushf (bad) adc ja lret push xor out je xchg mov add es mov movsb insl cmp adc mov imul repnz icebp out mov int3 insl mov inc pop push lock xor mov cmovbe sbb xor fistp mov arpl sub xchg xchg repnz adc xchg xchg push dec dec adc add repz sub aam mov sbb aad mov movsb dec (bad) rorb xor xchg mov pop sbb cmp and xchg out das jge xor or cmp mov loope add loop ja,pn jo jg mov mov push loope lods push and jbe adc push out int ds outsb dec cmp mov and into popa or ret push adc movsb sub lods or stos inc push pop adc aas and dec mov rolb (bad) in test cmp fadds xor add nop gs mov add negl mov push movsb mov jl movsl push xchg xchg jg in lds push adc (bad) fdiv pop sub xor in pop cwtl fstl out mov mov enter xor or inc mov jnp in xor mov mov and xor std sbb test lret inc stos xchg push negl (bad) sub loope pop xchg xor int test inc (bad) in sub push push jae loop pop push test cs mov sub dec adc lret aas jae mov and lock xbegin push insb (bad) xor adc push call pop add push sub mov ret aas je mov inc hlt stc push inc dec loop repz ret xor std js ret cs jl xor mov (bad) fnstsw popf (bad) call push mov lahf adc bound cltd add xchg xchg insb adc out sub scas imul and aam ret mov push xchg cmpsb lret lods jle cs jnp sbb (bad) mov inc insb test rcr cld inc cltd pushw mov je int3 mov jl sbb pop mov cmpsb daa pop jecxz push stc rcrb rorb test xchg or cmp pop push incb ss fstpl dec (bad) xchg adc jne xchg push loop dec or imul sbb divw mov jl nop jl jns jle test (bad) mov pop call aad adc dec and adc cwtl push sbb add js insw dec icebp outsl in mov jne mov (bad) dec clc or cmpsb inc dec and pop roll inc incl xchg enter pop xchg mov cmp cmpsb dec ja or push dec mov mov (bad) mov imul aas and fwait loope clc cltd inc add xor fisub roll stos mov xchg les fldl2e dec push sbb lods shl sub or in stos jo xchg push inc mov cmp jbe mov cmpsl fisubrl xor insl jg std into mov (bad) (bad) movsb insl pop add ds into dec out pusha inc cmp jno cld (bad) jno xchg adc leave insb adc fldcw fwait leave sbb les mov pusha fcomp loope or push inc cmc stc movsl icebp int idivl ljmp scas inc sub repz sbb in clc stos dec test mov sub pusha out mov and aam imul inc into sub out and fdivs mov out cmp pop shrd mov sbb mov xor xlat xchg jae pop and (bad) add push pushf ljmp adc loop inc out pop jecxz xor rolb or inc push (bad) jmp ds xchg das (bad) lret jns dec adc xchg (bad) jle in jns jg enter adc rcrb pop outsl jmp fs jecxz add ficomp test gs push or (bad) xor push mov xchg push sar sub cmp mov inc cmpsl data16 sarl push insb pop aaa xchg lds fs (bad) hlt or sbb mov jnp dec jecxz mov cmp cmpsb jl jmp add sbb ret int loope adc mov inc dec push add loope and mov adcb sub das stos insl ret movsl push bswap mov cltd xchg (bad) out insl ljmp mov dec push mov pop divl pop lock lret jge jb adc aaa (bad) in rcrl mov enter out add popl imul cli cmpsb ljmp out pop loop movsl inc pop sahf fwait fwait inc xchg stos dec pop pop icebp enter (bad) sub or xor jne in imul push push pop negb lds loopew or adc push movsb gs jne daa cmp enter xchg (bad) jl lock sub jae sbbb xor mov jge ffreep push pop pop xchg (bad) jne jmp mov int3 mov arpl daa push dec inc mov pop pop (bad) fcoml dec mov pop push sub call xchg cmp mov call jmp cmp jns add cmp lods stc mov sbbl bound call in ss in les or xor xchg adc push push mov test cmc mov es and push inc es cmp out add ds xchg movsb lret push xchg imull jle mov es mov and mov notb sub push pop mov or sub ret fidiv hlt jbe or jnp int je or and add and ss and pushf and jecxz outsl dec jl repz (bad) jg rolb add lods repz das sbb push call orl xlat loope jmp (bad) lock imul fstps adc in mov movsb sti jmp pusha push adc dec mov ret sbb js lods scas out sub mov lock (bad) (bad) mov testb pop sarb fsubrs test add dec sub jp adc int3 daa xlat cmpsb stos lret arpl nop fisub adc jns bound idivl rcrl adc rorb adc pop jle,pt (bad) cmc push add stc popf mov push scas stos shl xchg add push mov popa lret sbb add repnz sub mov jne loopne and outsb gs xchg (bad) fidivl xor mov pop pop xor push ss xor (bad) les mov or bound dec mov hlt loop inc je int3 fstl fistpll inc adc imul ror and mov add movsb jns cmp sbb shr xchg jo sbb add std xchg sbb (bad) int mov popa lret push lods xor (bad) out sub dec aad rorb je xor popf or adc inc ret lods jbe add sub sbb add ja xor xor call mov adc imul mov xor mov hlt hlt add pop xor movsl lahf repz in ret mov cmp sbb outsb test mov lahf scas xor and adc sub sbb mov outsb fs mov rorb mov ljmp cmp pop jb pop (bad) jecxz sub push pop pop xor mov loopne int3 mov ret (bad) xchg sub pop cld (bad) push fsubrl jne shlb inc adc frstor lcall out gs pop std jne fcoml js and nop pop dec or and mov inc (bad) enter push loope (bad) jl fisubr insb or aam dec mov mov ja push mov test ljmp adc xchg das push mov pop lret hlt sub sbb test cmp cmp mov in packuswb and into adcl outsl xor sbb inc or test (bad) sbb jne fs orl mov inc sahf popf int3 test lods imul cmp pushf xor fisubr xchg popa sbb mov push or insb jmp dec gs fiaddl imul xchg insb adc mov and jne ljmp xchg (bad) out push fcomi lds dec loope cmp movsl or and pop mov push pop insb shlb fcmovnbe xchg test inc and inc push dec xor in lret jno push jns test push sub dec shlb xchg ret xor test add fwait repz (bad) cmp adc push repnz pop mov sub add dec in mov mov addr16 (bad) xlat in dec inc call pop push sub adc aad mov push cld (bad) imul mov clc adc push push popa into pop mov aas mov cmp dec xor push xor arpl push imul sub or mov fsubrl or mov inc mov int iret cmpsl mov xor insl cmp (bad) scas pop incb cmp imul jb,pt cmp xchg push and push std xchg sahf cmp sub (bad) or add mov sahf sbb (bad) in fstl mov test cs fwait xor mov dec mov jecxz or lret out lds movsb stos add jecxz push pcmpgtd lahf daa jns xchg cwtl inc xor mov push in xor cmp mov mov or mov cmp call xchg (bad) mov xlat std jns les and jo mov jmp xor shll mov outsl mov dec xchg and xor lret rol xor xchg jno icebp xor pusha cmc imul xchg cmp jmp rcrb cltd mov cmp notl fs (bad) call add mov sti and pop mov das xchg push cwtl push pop jb int3 imul out icebp (bad) pop or mov stos adc cmc je daa inc iret and sub insb ljmp imul adc sub fiaddl xchg xchg (bad) mull push rep cmp (bad) cmp dec out lahf ljmp out adc shll or mov fcoms ret inc cmp or mov int es lahf std sbb push lcall test jb das out add and insl ss add cmp mov cmp enter xchg dec test int jle imul loop cli push (bad) imul cltd test jp cmpsb cmp scas jb shrb test cmp xchg sti stos mov out das call arpl decb adc mov dec jp or xchg insb ja lds mov ljmp (bad) loop mov addb lock clc mov rol imul push mov icebp js mov insl sbb pop cmp jmp pop popa xchg scas cld in add push movsl or fcmovnbe sbb stos movsl jge add dec mov imul dec ljmp es xchg gs xchg call jb dec rorb sar dec cmpsl fldl cmp pop adc aad fcomps (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add pop dec pop jmp test add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb mov lret mov (bad) (bad) xchg insl (bad) dec jbe das fldt jne mov (bad) jge loop add sbb rcl repnz pause xor repnz lea dec lcall les icebp pusha aad mov jbe iret pop mov movsl push pop aam mov mov push push mov rorl icebp test loope cmpsb sarl sbb outsb adc mov jo arpl jmp dec stos aaa ljmp ret dec mov mov in mov je les jecxz adc jb push cld faddl out jp sbb mov int push daa pop add mov jb rorl mov int3 outsl cmpsb mov xor mov std pop lcall push ja in add in xchg dec cmp dec pop mov enter cld sbb mov repnz pop (bad) or pop xor pop aam (bad) or push or mov cs decl repnz scas jmp imul jnp cmpsb in in in adc cmc fisubrl aaa jp pop push mov lods movsb (bad) (bad) fldt mov add aaa fstpt jb push (bad) arpl mov xchg adc xchg jb pop cld jae loop mov push and adc test movsb aam jns jno pop inc fwait enter mov cli fiaddl or mov sub sbb (bad) jo mov stos (bad) lret (bad) lahf insl adc leave (bad) cmpsb int3 push xchg loope and pop sub dec pop mov test cmpsl daa fsubrs sarl rcrl xchg cmp push dec lock xchg fdivp xchg xchg jae call push cmc outsl cwtl or or (bad) pushw adc test push clc test dec stos add push fidivr imul out std xor push loope mov inc mov mov mov jnp out pushl out mov repnz fs sbb cmpsl mov (bad) and loopne mov mov pop cmp ffreep push in xchg or lock icebp (bad) fsubr jg,pt daa xor lret fcoms cmc or push fsub sub push dec icebp shrl data16 ds (bad) jge sbb add lock incl dec mov fcoml jns inc sub jl push out sub add inc clc sahf add shrb dec insb push out (bad) mov out cmp xchg jno adcb imul lock sub repz pusha push in and aad popa mov stc test xchg xor mov adcb pushf mov cmpsl add lahf push movsb dec data16 ret sub mov lret std lds mov xchg pop scas (bad) mov dec dec ret aad push and iret add int3 cld and negl jne xchg sbb push xchg lcall cwtl cwtl stos inc or nop nop xchg mov rcll cmp jle add cmp decb lods je push dec mov xchg int3 xchg xchg mov mov adc out outsb adc (bad) mov fcomp cmp push pop mov enter les add into sub sub xchg mov adc jl mov fisttp mov or jecxz push dec fisttpll mov and stos std ja mov cwtl addr16 aad xlat xor xchg cmc cmp sub mov fnstsw add jp (bad) mov es lods mov repnz pop dec jle das fcompl pop mov xor in pop push sub sub push repnz push dec ss in in ficom mov jno scas lds add xor sbb jl in mov stos mov call mov dec mov sbb sbb or shlb jns in dec movsb dec jno cmpsl pop mov (bad) or cmpsl push cmp pusha test adc jno adc mov (bad) jge xchg sarb jb push dec fmull xchg popf nop cmp out lock fdivl decl lahf insb sub ja sub sbb jbe cmpsl add and and js mov mov std mov xorl adc bound popa les push or jg xor (bad) jge fs outsl loopne mov pop push xlat xor notl jae into (bad) lahf push test mov or jg xor dec xchg sahf fs adcl or sub mov bnd inc dec xor cld add ljmp out sub cli (bad) xchg pop adc aaa mov sarb aam jbe daa popa cld sub lahf aam loope arpl in mov (bad) gs mov adc xor push fcoms or ljmp pushf test inc cli xor arpl sub sarb aas pop out xchg adc pop mov cmp ret push rorb lods mov jg push fst ss inc fdivr sub fstl aad into and add sahf sbb and pop aam fsubl addr16 push (bad) out jge pop out sahf or pushf mov bound xchg xchg push adc sbb ret adc lret aad ds inc push movl (bad) repz sbbb in dec sub xchg mov xchg lock mov dec mov adc daa shl cmp imul add call mov faddl fistpll pop cmp jno frstor fmull or pop xchg outsb lret xchg adc subb dec imul xchg imul jne lea out scas test jno cwtl loopne mov dec inc repz cli dec enter cmp rcrb stos fistp cltd add ret push or mov out inc push mulb ja into mov lods xchg xchg mov mov cwtl push test jg adc jo shr rcll cmpsl add add add daa cmp sub loopne aam sub xchg jg loop les jae test ljmp xchg bound sbbl sbb and daa lret xor adc jae push (bad) jp adc (bad) inc pop pop push stos outsl into xor loope fistpll movsb insb sahf cmp (bad) adc mov xchg sbbb adcl push sahf mov dec mov inc push repz je ret pop mull inc sbb (bad) outsb cmp xor push xlat fildll mov push int3 cs jecxz mov mov cltd cmp clc sbb addr16 testl das and test hlt imul sbb push push lds repnz cmp daa rolb je popa bound outsb mov sub popf sbb pop push push or nop push stc push mov pop mov pop es sub rolb sbbb out das cmp xchg jge es outsb sub ret pop push sarb cmp mov sbb fildl (bad) and inc stc mov in test sub jle pop mov test (bad) (bad) fstpt sbb dec xor xchg cltd jb iret xchg cwtl out mov lods out push inc les int insl pop (bad) cmc cmp ret inc add stos xchg lret jl pop xlat jp arpl mov in aas sub rcrl add dec push inc and push cmpsb or jnp jle push es inc jmp in jmp and ljmp sarb xchg (bad) mov aad in jge adc adc pushf fcoms adc inc mov jae lods add and cwtl jo dec insl xor insb repz mov test sub sub out push or pop xor test mov aas push mov add inc int3 fimull outsl sub mov cwtl push xor dec xchg arpl add pop sbb add xor inc pop idivb xchg insb dec ss xchg sub js jnp sbb loope pop jmp cltd outsl (bad) lock jno ds push cmc jae sub and stos cmp rol rcrb or cmp sub (bad) jmp bound clc xlat bound gs jmp and dec loop je out loope mov mov aas rcrl xchg jb mov sub out jmp scas mov (bad) aad xor push ret (bad) cmp lret inc leave push cmp jno or sub (bad) cmpsb push xchg jbe mov cmp adc mov ja inc loope push dec fistl mov sbb xchg test mov and push jecxz xchg sub movsl orl stos jns cld sub sub push mov sub mov popf adc pop xchg jg imul and inc gs jmp adc adc mov cmpsb sbb out jecxz xor (bad) dec sbb or pop and cmc and inc sub sbb aad xor mov ret outsb js ljmp imul xchg loope cmp ficoml ja repnz cmc in and mov fcoms pop lahf push xor lret sbb in pop mov loopne push lods rcrl repz mov inc dec rclb xchg pop mov pop dec jns faddl pop (bad) lret xchg imul lea (bad) push (bad) push push lcall or lcall idiv (bad) pop adc fcoms mov sti test (bad) repz cmc testb (bad) loopne fstps mov mov fiaddl ljmp or sub aad lcall and mov test int3 (bad) arpl jl sub xchg rcrl (bad) add ret lods stos and cmp push das int dec data16 popa leave xchg and loopne add and jnp mov (bad) pop subl cmp pop hlt xlat js mov jno popa xchg cmpsl jecxz movl sti mov mov jmp in lahf add ficompl mov je repnz rcl dec movsl cli and sub push ja inc xor lods lea stos add push (bad) lret mulb stos std fidiv sub push push loopne aad push mov sahf leave inc mov push lcall rorl lahf repnz xchg inc movsl xchg mov ret sbbl insb pop xchg shrb test movsb popf pop fildll aam fildl dec mov cwtl sub sub out popa ret (bad) push mov popf xorb popa lea divb test fisubr mov lods mov out xchg mov sbb or lods int pop jmp jne cmp stos xchg js pop mov cmp negb mov jo lock outsb enter xchg ficom dec (bad) int3 cli adc outsl sbb xchg test pushf mov push add mov xorb lods ja add fbstp mov adc sti lods jge mov cmp mov mov adc popf loop mov jae lods jbe add mov push fstl sti sarl dec and add sbb movb hlt (bad) push mov or mov adcb mulb mov cmpsb push jno test xchg mov in cs sub lret shll stos shll lcall loop add xchg test movsl pushf je or fwait rcrb cld int push mov call cmp add in scas inc dec imull imul jecxz xor ds mov xlat lret mov stos dec lea pusha push push sub inc ror sbb xchg insl fimul or and add dec ret lods push aam out sub icebp adc (bad) loope enter cmpsl rcll dec pop mov inc shrb xchg outsb pusha aam lret dec jo addr16 push (bad) pop push mov test xor push (bad) fmuls dec insb sbb (bad) hlt ror lret addr16 xchg cmpsb ss xchg movsl adc mov insb pusha xor les and inc pop or push (bad) enter cmc fadd sub dec lock push out cmp (bad) aas xor scas insb and arpl (bad) mov inc mov js popa nop lahf lds je jo lret bound (bad) (bad) mov and rcll xlat fmul sub lcall mov dec fistp push push jns adc in add lret jae xchg (bad) mov shl jg adc lcall xor (bad) jno inc (bad) dec clc xor cmc fstl and mov xor aaa orl mov (bad) das jo and lret repz pop insl push and in and sub push js jb adc inc push in adc ret mov xchg std jmp mov inc xchg pushf in cmpsl rorb inc lret xchg push jmp xor in decb inc (bad) push mov out gs (bad) and xchg imul in (bad) frstpm(287 push and or out js into mov fbstp or jge (bad) bound inc push sub fist cmp cmp and sub xor stos jne into fldenv into les repz xchg movsb cli dec cmpsl je nop fildl (bad) fnstcw fbstp jo (bad) mov mov movsl mov in insl add in jo add or mov and adc push sti mov dec js imul sbb or push sbb pop lods inc mov or insb or add or mov sahf out inc sbb repnz aad dec cmp pop jno sbb aad mov stc mov inc mov push adc sbb arpl add (bad) in (bad) (bad) jb ss push dec subl cmc cmp adc ret add enter mov pusha sub notl cmp pop fldl dec cmp mov (bad) jbe inc cmp mov pop popa mov add (bad) xor repnz xlat out mov insl cmpsl fstp mov xchg and pop lock out movsl xorb sbb or add mov cltd cmp mov cmp sahf jmp rcrb sbb cltd dec mov cmp and in out aam jne xchg push cld jmp repz sub movsl inc ljmp and out jne leave mov popf iret andl in and pop cmpsl or es stos fsts scas adc call idivl out int3 push and cwtl push dec ds orl std test fwait enter mov in sbb adc xchg adc es or xor sub xor pushf mov add push lcall cmp jo aam pop inc fs (bad) mov jecxz mov pop push movl lcall cmp in jno (bad) mov stos dec test jbe,pn inc dec dec scas pusha mov sbb (bad) jecxz push add out rcl jne in (bad) fst jp insb stos enter adc cltd loopne cmp push mov ja aaa xorb jl push mov inc hlt mov ljmp aam add sub ret cmp mov xor sbb add jp daa pop out jmp xchg inc jbe dec adc sbb shrb repz inc xchg rolb xchg pop xor mov jmp push cmpsl shrb sbb dec cmp mov push cmpl lds jae inc outsl jl lret lods bound pop mov jg push add incb cwtl sub mov imul pop jmp cmp xlat loopne mov xchg push cmp sahf int3 dec mov cld call jle aaa add leave xchg ljmp (bad) int (bad) push movsl pop jmp cmpl cld int3 pop mov enter (bad) xchg sbb lcall adc subl loope mov leave adc mov into xor fbld mov and pop (bad) lahf popa fwait and js aam lcall pop xchg xchg fstps inc fstpl push shlb fimull xchg in jne popf push jae mov adc pop repnz bound cmpsl loope in inc cmp mov cmp inc mov imul sub dec adc scas insl rolb ss cmp pop mov test mov inc xor daa add sbb aad (bad) xlat test push push cs fnstcw lahf sbb mov add test push push loope xor out mov mov cld adc mov jge mov pop out repnz jo cwtl jnp mov negb es adc stos outsl bound pop cli repnz jae push cmp adc (bad) test in les xchg jnp pop mov push xchg loopne add andl mov repz shr dec add mov xor pop lcall pop push or mov loopne fisubr adc test pop push ja es mov push jne inc faddl jns mov lods movsl mov addr16 addr16 add mov cmpsb push (bad) out inc jns inc dec adc std mov xchg out or push imul add fcmovnb sbb inc or mov xor jb cltd faddl dec ljmp sub dec pop (bad) cmc pop dec test incl ret mov or mull or mov mull mov addr16 and mov adc inc adc xor jne sub popa pop popf pop in pop dec cltd lret sbb nop rorl add rep mov push shll sbb ja enter out cmpsl out notl lcall test jb push sbb adc iret sub jge ljmp mov push lea sub xchg (bad) (bad) xor push sub jmp (bad) push mov adc mov pop pop fcoms cwtl aam add sbb sub cltd popa out icebp and loope test sbb test xor in (bad) jne (bad) arpl int mov push in dec cmc (bad) sbb inc (bad) cmp dec cmp dec and sub jp push pop ret jmp inc xor add mov jecxz dec stos cmp jg daa xchg les jae ret out aad leave ljmp inc jmp xchg rorl pop (bad) and pop mov enter sub movsb mov or or pop jmp in xchg cltd cwtl nop mov sbb mov daa pop dec and cltd add es dec jecxz imul lods mov cmp outsl xchg sbb mov lcall mov fcmovnu cmp push mov test in cwtl cmpsb mov adc mov inc cmc dec movsb daa icebp stc sub insb sahf stos aas mov insb outsl ret mov xchg push jo mov sbb rcr mov jae jg ja int mov adc movsb loope rcrb jo lock add jnp mov aam lods stos cltd pop les cmp xor fcmove loopne jge (bad) cmc dec add nop/reserved addr16 test jg mov push (bad) cmpsb out jl gs repnz ja pushf fild loopne outsb cmp repz push sub fistpll xchg enter xchg push je rcr inc test inc push dec dec (bad) xor mov pop mov xchg ret mov sub stc mov sbb inc sub jge mov jmp jle lock scas cwtl jne leave mov jbe lds xor loope out xchg fnstcw cmpb stos sbb mov loopne rol jge cmpl push pop xchg movsb aad jbe mov push xchg pop and pop scas das nop stos sub arpl pop nop cmpsl pop insb cmp int inc ret pop mov cld mov test dec pop loop stos lret push mov (bad) adc and enter or cmp rcrl ret repz cmp shl (bad) xchg inc pop (bad) mov cmp mov data16 cmp addr16 inc cmpsl xchg (bad) fs xchg es push xor mov out faddp les hlt or mov cmp sbb fcoml (bad) jbe sub or or mov jecxz push jmp aam lret fcoms add popa lea js (bad) je pop sahf ret popf js jp jns rolb ja or ficompl (bad) or into lahf dec jno push sbb push jle push out nop xlat push negb and mov lods je push xlat std into sbb std pop sahf xor fs pop add call sub jl aam mov lea sahf push sub aas push and jg mov iret mov mov push push xchg or mov rorb dec cmp test sub mov and xchg mov loopne push cmpsb mov outsl or mov push xchg test negb inc ja insl scas out mov imul xchg xchg test (bad) push mov sub not mov sub jmp shlb das mov test notb mov push dec mov mov push adc out cmp add xor xchg mov in mov mov rcll inc inc (bad) mov cltd xor adc (bad) pop adc jbe (bad) xchg pop xchg pop (bad) leave mov test pusha adc in cmpsb pop movsl mov dec jbe jae jecxz sbb push cmc jns fldt ja lret (bad) mov pop push mov pop adc or xor arpl sti cmc inc and adc sahf out or popa and lahf mov or pop jo mov push negb iret insl jae outsl gs aas ljmp aaa pusha hlt insb pusha push (bad) fcompl cmpsl xchg mul jecxz sub mov jb inc mov and push xor cmc cs inc cmc fwait outsb mov mov scas das in fisubl jecxz pop cmp jnp out add cli or imul pop fnstenv loop xchg adc pop jle lods (bad) mov (bad) cmp sub test sarb cmp les pop push or (bad) pop pop dec mov insl xchg mov bound cmp insl or push mov jno in mov es ds rcll sbb (bad) sti jo pushf mov or jmp test adc and bound cmpsl movsb pusha std jge imul sub or outsb xor adc cmp add lahf repz adc jb cmp add lods imul jl in fcmovb aas je jns pop call loopne ds cmp adc lods fmull lods lret xor out aad ss mov add outsl dec inc mov add popf pushf push stc shl jmp into enter arpl sbb and sub xor in (bad) fstps adc aam add add stos fbstp (bad) leave insl push sub enter subb xor mov sti cmp in pop adc das xchg inc pop add add mov xchg inc lcall jno cmpsl cld or mull test mov adc push xor mov in repz jg addr16 jns das jmp adc dec lods cli iret add (bad) jne (bad) (bad) mov pushf or dec dec ja sub fwait and cmpsb add pop and hlt cmc out adc insb clc mov sub fimull push and and jg ficom xchg push pop mov cmp dec mov lret dec mov pop in pop loop lahf test mov push rdmsr xchg call jne and pop jnp stos push sub iret pushf jge frstor popa dec cmp jmp cmp cmp repz inc jle jp cmp scas dec push out sbb repz or pop orl jne aaa ret inc pop dec cmc or lods mov bound xchg pop dec scas fisttpl add dec push jno mov cmp mov or sub dec dec sbb mov ret mov ret (bad) movnti xchg int3 ret adc (bad) dec push ret push jne bound lods push (bad) mov nop or xchg pusha ja nop stc push bnd pop dec xchg fwait mov rcrb adc jb dec jge ret sahf nop push data16 in into inc xchg inc nop jo cmp xor (bad) iret pop adcb ja and mov lret jb sbb jle rcrl mov mov xchg (bad) adc mov xchg xlat xchg add pop cmp pop loopne xor jo and int xchg bound mov shlb imull push cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp cmp ljmp or add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb xchg insl fldt mov mov insb sbb outsb fstps jne lret mov (bad) idiv push out push and jmp add mov add addb cmpsb mov psrld sub or ret jnp cmp (bad) mov dec push cmpsb sahf sub push mov aas adc push sbb dec loope ret sbb pushf sub mov dec mov iret outsl divb popa push repnz xchg push mov mov cmp loopne lret push jecxz in mov in les in cld jae inc fimul repnz mov lret fs ret push test ret pop fisub les sbb out sbb es fwait xchg cwtl jo (bad) cs sub fnclex fimull cmpsb jne push pop in mov sahf out movsb mov movsl aad addr16 fwait data16 mov cltd push and shrl das sbb ret push insl xor pop data16 pop adc fidiv add (bad) adc (bad) jno data16 or cmpsl sub pop adcb outsb je push pop lock push cmpsl add outsl out call lret sub dec fwait (bad) jno sbb out (bad) push push jl mov es jp sbb sbb jo popa test stos xchg mov pushw sbb jnp mov or mov cli test pop test jmp add lcall cli or mov inc rorb push into dec mov adc fsubs cmpsl mov cmp (bad) rolb push fwait (bad) sbb jl rcll push insb fistl icebp push dec mov int (bad) mov (bad) cli sub fstpl mov cwtl push pop push cmp adc pop jne imul arpl (bad) lret fs sbb pop mov out aam or fistp add insl ret mov and push lds rorl jb es lock imul pushl sub (bad) int3 mov dec lods test jle loopne xchg xor (bad) adc pop xchg loop sub push or pop push (bad) movsb pop (bad) stc data16 lahf mov adc xor imul ljmp nop (bad) loop xchg jle mov es repz mov xlat ret (bad) sti mov out push es mov jp pop fnsave cmp sti push sub xorl xchg xor xor insl pop or aaa call stc aaa in stc test out jle rclb pusha push je push idivl loopne (bad) mov sarb bound ja jg adc rclb in jg notb in cmp mov or sub iret adc (bad) xor sbb adc pushf imul pop (bad) aad cmp les sub mov pop xor mov sbb sarl push insb enter insl push push xchg (bad) fsts int imul in in fdivs sbbl xor vmaxpd inc push in push inc fnstsw mov add sti cmp inc (bad) enter inc (bad) mov inc pop int3 inc mov sarl mov cld cltd in loopne sbb loopne inc mov mov adc ret add insl sbb jbe cwtl bound xchg lods aaa mov or pop ret dec imul scas mov pop mov sbb xor mov (bad) add jle call mov sti jp sub out rolb out lcall pop (bad) iret push pop adc sub jns leave cwtl jge hlt shrb push xor cmp or cmpsb mov outsl call xor jmp enter xor enter or popf lcall iret mov mov test fcoml loop mov popa fcmovbe mov sbb push xchg push cmp pop cmpsl inc fmul movsb mov shll push mov cmpsb in add sbb mov (bad) rorb or mov jl adc lods (bad) ljmp test test jmp clc mov in mov pop sbbl push inc mov pop sbb mov dec mov push sbb fsubl mov adc arpl leave inc jae adc iret pop nop add mov jle lret insl mov lret sbb mov in add dec dec fisub mov jge shrl pop push xchg gs push pop loop cltd out in pop testl jg fcomip sub shr jns and push outsb lret divb adc repnz fist mov mov lret out jo mov fcmovb jecxz es pop dec jae (bad) movsl pusha ja cmp push sbb and in out inc cmp and cld pop gs jo test or ret jecxz xchg int3 cmc cmp or add inc mov scas rorb pushf lods fisubl mov jp cwtl stc xor stc pop dec sub nop push mov test ret divps xor mov pop addr16 pop into jns cli sti lret jmp fbstp (bad) icebp cmp and outsl dec outsl jl les cli out fwait add lods data16 (bad) jbe inc dec sbb xchg shrl in xlat xor lea stos popa bound movsl sarl adc lea ficomp jbe xchg push sbb cmc popf rcll cmp dec popa cwtl or (bad) les enter out (bad) ret (bad) (bad) mov mulb adc daa sbb cmp cmp add rclb stc aam and adc lret les out psubw dec rdmsr inc mov xor faddp rcl addr16 lock outsl lods (bad) pushf ja mov in mov bound jmp jno mov cmp dec pop fnstcw test mov clc imul aam roll loop out or insb add insb ffree lock cmpsb test jne shrb add andl hlt and in fldl pop cmpsl (bad) mov fwait adc jp fmul sub push cmc sub cmpsl outsb andps and pop gs loop subb or jmp push adc lods jns test loope rorl scas fist mov test sti insb inc jbe inc or outsb ljmp add insl pop xchg cs shrb loopne xchg dec cmp lea inc pop fwait sub mov or cmpsb pop mov testb inc jecxz imull inc aas xor and or lahf push mov pop pushf xlat and pop mov mov push movups out aam lea sub adc insb add pop pop cli add bnd jae mov negl sub xchg dec sub movsl scas loopne idiv mov cwtl clc jmp mov andl mov xchg sbb mov lock xchg stos add data16 addl sub cmpsl outsb jno add repz and and push mov and roll mov xlat daa imul ret xor outsb sti mov xadd sbb mov in cld in jmp dec movsb stos xchg pop (bad) iret push fwait loopne stos xor aam mov es xlat ds pop mov or ds push dec add xor or jae cld and and sarl mov or lock insb sub mov in pop call stos lcall mov (bad) pusha movsb or repz pop sub push sub pop mov movl fdivrs and in outsb test bnd rorl movsb dec sahf arpl nop mov addr16 loope push and sub push pop fdivs in xchg ret mov adc (bad) mov inc cld mov pop shr mov fwait inc fwait sbb cmp xchg adc pop (bad) jp adc push into mov xchg pop das fistpl or test mov xor call mov push in js jno cmp shlb pop lret push rcll adc clc lods mov fcoml popa leave inc push push dec adc jecxz pop adc in adc hlt mov stc hlt cmp or push nop (bad) or int push cmp and fidiv sbbl (bad) lret scas sub fdivr pop ficomp mov and sub and dec push js push mov xchg (bad) int add pop stos and xchg mov sub scas and pop dec rorl adc (bad) (bad) dec mov pop cmp ds push (bad) (bad) xchg (bad) xor fwait out push pushf push arpl dec cmpl xor pop call gs xor jge jle (bad) scas movsb test addr16 cs fdivs mov fidiv add xor fisttpl stos lock jmp or cmc lret stc push mov dec test call add leave (bad) xchg (bad) mov push add xchg loopne roll out push xchg (bad) lcall xor mov mov inc jp push inc idiv mov sbb adc ret cmpsl iret movsl call les movsb shlb sti jle psubd inc adc push aam cmpsl mov rol (bad) sbb arpl mov jo bound cmp enter ja rcrl sti mov cmp (bad) jl nop xchg pop pop pop mov xchg lret loopne out xor (bad) pop outsl mov add fiadd shl cmpsl add sbb push cmp movsb shlb (bad) iret imul cwtl ds mov enter adc adc jbe sbb xchg test sub cmp inc push mov cmpsl enter pushf and adcl dec mov sub push call ss and aaa mov sbb adcl cs data16 mov mov cli and xor std mov icebp (bad) stos call daa inc mov and jo lsl mov pushf fidivrl sub ja decl push mov shrb clc aaa sub jb daa xor add mov mov insb in push fcmove pop add jb adc mov lret xchg xorb data16 xlat imul dec hlt rorb dec call inc loope xchg inc and fcoml mov sub lahf or jmp inc out lret push out cmpsb js in (bad) dec lods adcb iret sub icebp push mov (bad) xchg and inc std inc rclb das push xlat clc inc sbb mov xorl xor insl stos mov and add arpl cmp popa imul mov and (bad) jne scas je mov add sub adc imul pop mov (bad) push aad repz cs push daa pop xchg in leave cld int lock movsb jno jb fucomp or aas xor testl imul and andl stos mov and out je pop insb dec pop out dec lret jge sbb shll repz insb pop jns cmp push in fst push mov xor mov rorb divl cmp fwait movsb loope add cmp push in jecxz pop mov aam mov add js das jmp mov push out les pop add mov or lret pop sbb jp mov xchg int clc cmc mov sbbl fldenv xchg imulb lock clc hlt push xor leave mov mov sub jmp mov fiadd push daa lcall inc push add jmp xchg mov sbb mov lret pop inc (bad) data16 cmp inc cmp sbb push jbe jmp add sbb addr16 dec xchg xor jge fiadd mov cmp lret adc int pop (bad) mov xchg inc or jle leave je stos (bad) out add cmp rorb addr16 lods push jb and jp add add repnz test pop add mov jmp pop sub out cmc inc pop ss jge xor push and out xchg lahf in xchg (bad) xchg add addr16 dec fisub mov pop inc adcb arpl xor pop (bad) cmp cmp or (bad) insb jb bound dec cmp mov iret jle out movsl std pop (bad) sub cmp lcall inc dec fstpt xlat ret out mov lods out hlt les mov clc add loopne fsubs (bad) dec adc push add fwait cmp pop or movsl out push pop sar test jge mov jo inc subb js in sub add jmp cmp pop xchg popf cltd xor fidiv xchg pop dec add push stos sahf xor xlat (bad) pxor outsl push dec and idiv pop inc dec mov xor das aad jecxz lahf lea dec clc mov dec mov data16 push notl xchg or lcall xor scas adc adc fwait push mov push rcrl jmp mov ds dec jp pop and iret fmul mov pusha push sub mov cmp mov jmp lea test xchg leave sub (bad) cmc and jge dec cmc lahf cmpsl sub push scas add push lea mov ss lds scas inc jo adc sub inc mov mov invd push fisttpl jne xchg in mov dec adc imul mov add stos add xchg mov sbb sub pop fldenv jne push dec clc sbb out dec mov leave (bad) fnsave jmp fmull in add gs cwtl sub fisttpll rclb xchg dec push fnop jecxz out mov loope push mov jno pop sub pop jo ficomp ret rcr lods imul cmp sbb (bad) cmpsl leave mov pop cmp ja cli nop pushf dec pusha jle inc add cltd mov mov test call mov call shll stos (bad) mov mov sub cltd dec and add xor jge or xchg icebp inc push xlat dec xor lock (bad) lock dec jl dec out mov (bad) xor jl mov loopne stc aas sbb ret and stos push ljmp (bad) movsb roll pop mov mov mov dec inc pop les inc out in out or and cwtl sbb clc xor adc dec push and jecxz lock jae inc fisubl cmp xchg push push (bad) or or mov jg jl mov test popf aam cmp mov mov push inc insl xchg pop jge,pn mov loopne idivb rorb jmp and daa push loop int3 pop adc xor push push xchg pmovmskb and xchg push ds icebp and push push pop xor mov scas cli out es hlt jns pop mov sbb xchg dec ds jmp icebp jno inc or xor setae repz sbb xorb cmp xchg inc int3 adc mov sbb in popf js enter xchg or cmp xchg inc adc adc out imul lds mov (bad) jne sub xor into (bad) xchg add je cmp xchg stos orb nop neg pop dec imul imul mov pop rcr xchg cmpsl xchg mov mov inc mov mov stc daa push test fistpl sbb jl (bad) cmp jno (bad) pop dec mov bound sbb fisttp leave add jae sbb and mov imul mov aad or orb fcomps cmp fistpll lods mov cmpsb incb pop in daa daa inc xor aam (bad) gs xlat cmp pop jb (bad) test bound xor cltd sub jecxz fcompl cmp mov dec imul push rcrl pop jae mulb fadds push jns test (bad) test or xchg push adc test jp dec fbstp movsb pop icebp mov mov xor and and icebp push loope mov pop aas pop movsb adc push adc cld lcall inc in (bad) mov sub cmp pop cmpsl xor adc ficomp xchg push sahf and mov cmp and pop jnp arpl mov lcall fwait incb call dec repnz std fnop enter lret fsubp mov loop sti pop in jno daa sti pop les adc add cmp mov cltd leave push mov scas daa dec lahf lods inc dec enter xchg mov mov bound pop insb xchg icebp cli jecxz mov sbb ss leave mov and insl jmp cmp xchg les and jg inc daa push cmp mov xchg int3 (bad) push mov sahf pop movsl mov push sahf scas mov xor lods push inc or push nop xor or mov xor or (bad) mov lea fimul ds mov loop (bad) outsb insb hlt jb or imul sbb pop (bad) jbe pop cmp insb push push mov movsb stos sub inc push xor outsb movsl or xlat repnz jle fdivr xor jns dec mov pop jp jp cs cli pop inc adc stos dec adc gs sbb das sbb inc and cld dec push dec xchg insl push xor inc sahf outsl add add sbb pushf pusha subl je xor scas xchg cmp jne pop sbb fwait rorb call (bad) outsb outsb mov inc mov test imul lret (bad) dec sub jnp xor cmp xchg xor mov rcrb mov dec push sahf pop xor fdivrl aam push jg mov add (bad) lret push cmp cmp dec cwtl xor cmp add fmuls mov cmp test pusha and aad fistl cmp aam push push mov aam lods movsb ret mov gs fdiv sbb shr cmp fucomi sub lret fildll popl cltd jle sar and icebp jnp and xor mov dec add sub shrb inc movsl pop lahf imul enter (bad) (bad) jp xor inc sarl sbb mov (bad) rcrl jbe mov dec gs inc and and mov pop cltd stos mov inc sub pop push jbe test or fnstcw stos pop repz sbb ljmp dec mov push push lock cmp adc sub mov loope or sbb mov notb syscall and mov test (bad) inc rcl cmpsl mov push flds dec dec sbb jecxz (bad) in lds pop fbstp and iret xor mov lods xorps and js aaa sub cmpsl rorb andl ja mov jne inc imul fwait int3 or adc iret movsl hlt push ret iret int adcl out inc icebp dec mov cmp andb (bad) mov adc imul loope add push xchg adc mov cmpsl subb into aad jnp les mov mov cld clc sarl xor jmp rolb in neg jns pop and dec in sbbl jae sbb std pushf dec xor std loop sbb ficomp sub mov inc sub mov dec mov xchg out mov inc sub xor nop out push mov mov lcall inc (bad) mov sub cmp mov icebp push push jnp outsb and loopne xchg lea dec lret pop scas mov dec bound js dec adc das adc mov pmaddwd and std int lods cmp outsl sub cmpsb fcoms fucomi xlat cmp into mov pop xor iret mov jp pushf sub adc or dec mov into xchg aaa sbb lahf sub lods xchg inc sar push cld mov or int3 sti ds (bad) jmp sub or subb adc sub out jbe (bad) push cwtl lret rcrb aas out or lods sbb sub sbb add mov add ret adc pop or pop das push arpl sbb loope (bad) std sbb jecxz ret cld cmc arpl pop (bad) aad fwait mov (bad) leave mov sbb ljmpw scas popl jl push push lock call mov lahf stc dec lcall jbe,pn seto sbb xchg outsb (bad) xor rcll fisttpll cld mov push or sbb pop mov mov in dec lcall rcll and and fisubr aas ficom fwait mov lock jae pusha insb insl test lret pop push inc push mov and lods jle dec loope insb lret inc push jecxz mov mov pop dec out mov inc and shrb mov pushl ja (bad) mov xor in rclb scas mov mov dec outsb and jge sub pop clc imul add mov and xchg push or nop notb stc aas push mov scas or push dec lahf dec mov fdivl jmp mov dec pop jle je loope lret movsl and lea xor lds enter jb dec aas sbb or or icebp in inc out stos push adcb jns adc fidivrl fwait push or stos mov into faddl xor std rclb fwait stc lahf ficom loopne fcomip xorl addr16 movsl (bad) repnz xchg addr16 xor sbb cmp ljmp ret lret jne mov pop icebp mov dec jns adc mov (bad) call or leave in sbb lods xchg mov test inc cmp pop (bad) cmp cmp jg jno mov add out neg in sub pop gs movsb mov or cmp jmp loop jle dec mov lcall xor adc or inc and pushl repnz mov ficoml mov and fsts movsb xor mov mov mov mov repz add fiaddl mov in cmpsl mov jge adc mov sar push jge,pt rcrl push div out fxtract out sub stos gs or into int3 pop xchg pop pop pushf fldenv incl jecxz mov add (bad) in adc lret mov cld xchg test lahf das dec xorl mov dec nop adc sub pushf in jb arpl inc rcrb out das les popf xchg pop mov sbb hlt and out dec lret das mov push idivb push das mov andl (bad) cs mov jnp dec push inc cmp dec mov add (bad) pushf movsl push (bad) repz mov mov rsm fistpl insl and rol jb loope imul fildll xchg jbe in imul jae jmp in das arpl xor sub cmp aam sub pop cmp rcrb xchg dec lock add adc lcall loope jle loop sbb cmp mov sub xor ljmp fistpl lcall in add push lods pop adc mov inc outsb (bad) fsqrt loopne sub sbb mov dec cmp inc pushf shrb and std lods push push and and shll mov sub mov scas test inc scas pop std cmp in ds gs cmc jle stos mov pop js scas mov insl push inc pop add xchg leave and mov stos leave sub daa in cmc shlb inc cmc inc pusha push into sbb jle mov enter xchg cmp mov inc sbb stos add jns iret push outsb stc test adc xor ret scas add fwait scas sbb sti xor imulb pop mov xchg sbb cmp adc imul mov insb inc clc jbe jge pushf decl and and ret call xlat sti or addr16 and insb int lahf rcrb inc adc rcll push pop loop push cmp test pop test sahf add jb xchg sub je mov jmp rcr cltd (bad) xchg add clc imul sti push (bad) rclb pop loop jge push lret mov cmc or out (bad) mov mov cmp cmpsb and cld in cmpsl jae gs mov and sub (bad) pop jle sti xorb add xor outsl xor mov lea scas nop idivl iret ss out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov mov pushl imul dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb ret add lret mov gs scas mov xor (bad) fistpl mov inc sti jns jle add adc test dec push addr16 xchg out (bad) xor movhps push cmp jecxz sti cmpsb (bad) push push stos jle (bad) jp roll pop xchg cmp sbb mov pop mov pop lea add (bad) xchg (bad) nop decl int or mov sub bound aad imul lahf repz add push xlat xchg xchg stc xchg pop int jle dec cli mov inc mov insl push cwtl xor inc jb (bad) jge cld pop dec (bad) or bound mov nop adc leave add inc stc lds scas adc je sti cmp daa in jb shrb push scas sarb cltd imul rol add or sarl andl lret (bad) insb sub jge out pop or add pop mov sub mov ss sbb ja mov xchg aaa out leave int sar jnp iret cmp and cmp add dec lahf in pop add push push sub dec push or push jge arpl ja push jns mov and and das adc jg and or push pusha adc (bad) jle lcall jnp pop and add out dec lods lcall jno xor or lret or jecxz aaa push test mov xor add movsb pop loop lret adc jae fwait and mov aam pop xchg imul or dec loope fldl addr16 outsb and push dec negb lods fsubrp inc incl sahf adc cmp or mov lds or imul (bad) outsl fidiv and mov leave dec fcmovb insb aad xor push div dec add dec jg and or mov xor int outsl loope scas inc jns int3 cwtl push decb and int3 repz outsb lds sti pop mov adc fidiv xor add cmp jns jo cmp and pop jp nop push sar push dec pop mov xchg call jle mov sahf pop add fisubrl and (bad) fist popf jns adc bound dec nop mov mov adc clc xor pop and push jl jl fisubrl test jl mov js lcall and adc pop ss mov pop ffreep adc cs bound test add movsb pop aad sti test iret test and xchg inc jnp push cmpsl test (bad) push fs inc lahf (bad) sub repnz mov jp push lock movsl inc mov out mov mov xlat sub xchg (bad) cmp mov mov sbbl aam sarl inc mov mov mov xchg stc aas mov ds pusha addr16 fild or (bad) mov cmc mov repz pop inc xchg ret or fwait mov call hlt stos ss movsl dec push push aas pop ret fdivr jmp sahf aad push mov cli fwait sbb fs fadds xchg ret or pop mov mov pop cli popa fmuls lods mov leave loop test mov std cmp mov xchg hlt not js push or ds xchg stos movsl imul in lret fstps xchg lds hlt rcl cltd movsl in sub mov mov (bad) cs sbbb adc in cmp mov jecxz imul lea bound mov cmp jns and (bad) mov data16 and jnp jg and aaa xchg adc pushf cmp in inc ret out or mov cmp stos sbb xchg xor idivl pop mov int mov sub jge sbb xchg mov rol sbb or and push out jge fcomi push shr bound push cmpsb xchg sub push or lods int3 repnz jne sahf xchg pop dec jns or and cld scas popf and jno sub fild lcall mov xchg mov cmp mov les push add out fwait pop lcall mov cltd rcr lods in xor jb frstor fs nop fistpl into in and lds cld leave xchg dec popa push inc or cmpsb out mov and cmpsb jo push mov outsl out xor sbb rol fstps inc and fsubrs sbb sbb xor or adc lcall lock dec dec icebp mov add (bad) sbb loopne mov jle pop jge cmc (bad) cld xchg fadds fdivrp mov clc sub dec inc sbb (bad) xor xor iret aas sub and (bad) xor sbb add mov repnz pop xor mov aam push xor lods lcall test dec lcall scas fild test movsl mov lret mov adc mov mov lret js xchg mov and lret fnstcw and sub jle (bad) mov mull fcompl cli mov sbb pop mov stos movsl sbb mov (bad) or jb xor xchg pushf movsl lea inc lahf add aam jne add aas outsl fidivl ja jmp cmc rcrb or push sbb scas push adc and mov inc int sbb jle mov and pushf add mov addr16 fst pop movsl scas fwait and jg ret add movsl dec jns jo xchg pop or inc jecxz push mov jno mov mov mov adc add mov jno cwtl mov mov push loop iret (bad) mov aad pop cmp jne pop and les scas into (bad) adc cmp es jp xchg jno fsubp pop xchg add push inc push shll outsb pop add xchg ljmp aam dec inc imul sarl jl push push inc xchg stos dec cwtl dec sub inc popa push pop push std jecxz in bound in repnz lcall fstps jmp mov mov and mov adc repz popa faddp inc faddl xlat mov test repnz out std mov int3 sbbl mov mov dec sub pop ja push pop mov lds std outsb mov push cmpsl rcrl test ret or xorl dec push repnz lret push or inc sbb xchg out in add and push out in mov lahf jne (bad) std pop bound aas and in call shll mov pop xlat out lcall stos mov mov insl push fldl enter incl adc mov insl movsb mov test xchg push adc and cmp xchg enter (bad) scas les xchg xor lock add xchg mov xor clc dec xor xlat sub fwait adcb jbe ret sbb lret fisubr add (bad) mov call and push popf mov and adc fisubrl lcall pop out (bad) jmp and pushf mov pop orl jno lods int andl aas out mov sub and pushf sbb and jns cmp jecxz scas aad movsl push je inc das push ret push mov sbb repz loope lret ret scas sub js jmp cmp test mov xchg add dec mov jns pop dec or negl mov add push enter cwtl iret ficomp push into inc lods cltd cmp sbb push mov xchg push mov out aam ja jns jmp sbb rcl mov call add jp push xorl push mov pop sub adc popa fwait jae pop or add mov cs incb cli inc cmp (bad) fsubs leave jae cs dec adc add icebp inc insl sbb jp push cmp jecxz pop push cmp push adc or test je rcrb enter inc std fiaddl jmp add call iret push out ret pop bnd mov stos je lcall loopne fadds push fstpt leave or and fstps dec aam add sahf roll or lds adc inc rorl push aam xchg xchg inc ss and fcmovnb jmp pop mov incb jecxz ljmp in mov cwtl cltd movsb sub mov push cmp xor popa inc cmc mov dec add and xchg dec ficompl mov push jb add pop es and sub scas cmp int3 cmp mov insl pop cmp mov enter (bad) inc pop sub (bad) bt pop sbb mov lcall jl dec lcall in idivl dec jnp dec insl addr16 pop ret jb shll dec mov adc and fistl xchg cltd pop fimul push mull enter (bad) jno xor or xor popf push popa and sbb inc dec pop lods and inc bound loop (bad) divl push jge (bad) test pop mov cmp pop sbb dec rcrl pop adc pop jmp clc jl call cli std imul ds ret aaa repz icebp mov scas cmp addl pop mov into lea and enter call ret test leave fwait lods mov xor push mov es jmp ffree scas and adc call iret adc nop dec rcll mov (bad) (bad) call cmp (bad) ror mov fildll jmp xchg stos mov pusha inc test fdivs cmp loope add jo lds pop outsb jno movsb mov daa lods dec or test jbe adc sti hlt sub push xchg rcrl pop sbb add repz les clc push pop gs xchg lret enter imul lcall cmc insb sbb mov xchg jo inc inc mov adc or push mov pushf mov adc xchg ret sbb mov pop add lret sbb daa ret jmp pusha es jmp lret scas sbb fs and push (bad) pushf xchg inc std out ret lods jge lock pop insb dec (bad) mov mov xchg test sub push sahf push inc sar dec mov and mov pop fildll jo fstp out mov outsl add and (bad) push dec push popa stos push and sbb xor pop out popf jl mov rorb lds cld sbb cld shrl lcall mov cmp and cs jg fwait call inc scas push mov xor shr jb xchg jnp jp,pn sub repnz rclb das ds rolb pop cmc and jo or mov push mov (bad) sub push mov push hlt xchg bound mov push rcr bound (bad) xor dec pop or push push shr sub and or mov je dec iret lret stos cs stos mov mov xchg lock stc out call jbe (bad) cmpsl sub sti gs inc daa or sbb in (bad) mov mov mov sub xchg fistpll jns mov cs mov daa sbb mov and shrb add cmp mov adc mov xchg fs (bad) push push cmp cmp popf bound or dec dec dec fstp ds (bad) movl xor xchg fucomi lret stos push (bad) decb fsubr mov aas xchg pushf idivl cmp movsb repnz out ret (bad) mov in jg test les cs cmp push push pop mov adc std imul add sbb fildl adc adc xchg fs js mov js and jnp dec ficompl (bad) sbb out jns inc dec jg adc clc cmpsl xchg pop aad xchg mov enter mov jo xor into (bad) int sarb sbb cmc sbbl dec mov lahf pop or cmp push sbb stos pop fwait xor xor mov repnz xchg mov cwtl into cmp scas inc add and pop adc cmp rclb xor pushf pop pop cltd mov fdivrs add es pop mov push xor (bad) or aas push nop pop jmp push sub xor (bad) mov xchg inc xchg push lcall mov stos scas adc xchg rorb inc jnp scas lods mov sub mov push std fwait dec pop push push inc ret dec push add inc sub repz js dec inc xchg (bad) ret out adc inc xchg adc js jbe or push rcrl iret cmp and push repz push mov icebp pusha dec in movb pop jmp sbb push cmp lds cmp rcrl imul movsl adc jl rcll xor data16 jo loope shrl jne in dec mov jno lods inc or test cmp lcall outsb fcom sbb repnz mov lcall popf or loopne lahf leave iret push push adc add adc fist jb or popa outsl and mov mov out imul pop fwait testb sub xchg lahf inc push mov lcall fadd in push dec scas enter push xor jb hlt js fwait cltd inc dec stc rorb inc sbb or sbb push js call movsb xor pop sub ja sbb movsl test xor dec add sub scas sbb mov repnz push cmpsb push pop jmp add fstps push push sub jmp or mov lcall mov jmp add lahf (bad) xor shrl (bad) sub jae es scas loope xchg inc xor adc add cs out fidivr cmp addb (bad) incb movsl outsb dec cmp lea or fsubr xchg xchg xor mov aam inc jge jge xchg outsb mov xchg mov cmp aas mov mov pop leave pusha stc xchg cld mov lret sub push fild out add sbb fnstcw aam pop push ret xor ljmp add xchg cmp jg cld cwtl add mov imul ffree ss sti mov jmp pop adcb add hlt loop stos mov test dec mov sub xchg cld jne and inc mov scas lock xlat cmpsb add pushf decl outsb lea iret std xchg and pop xchg inc bound cwtl sub xor xor pop fwait lcall cs cmp fwait xchg divb inc (bad) pop stos jnp (bad) adc dec mov xchg cs stc sarl fdiv stos mov test or data16 xor sbb mov mov ret into jecxz imulb mov pop inc mov lea out jb and mov push int3 inc xchg (bad) sub mov out (bad) lret popa icebp ljmp ljmp out or or cmc or fisubl (bad) xchg mov rcll mov xchg adc fnstenv pop gs pop fwait add paddusb pop cmpsl xchg pop lret jae sbb aas or mov push ljmp outsl sub mov xchg lods scas gs iret inc test shlb sbb pop push or jmp dec bound xor lret push pop and and jmp adc add inc dec push inc outsl push adc fistp adc lea test aam into sbb mov fcoml sub icebp insb push daa pusha mov lret mov in sbb mov and ret dec pusha pop sub cmc or cmp cmp loope aam xchg xchg pusha cmp sarl add cltd dec shrl aam sub fstps mov (bad) aad pop (bad) jb (bad) stc mov inc lods mov (bad) out out pusha xchg mov js insl dec or popf xchg sub cltd je and jmp pop inc pop ljmp sub sub or dec mov mov adc out mov push cmpsl in scas cmp (bad) push jmp sub in out out jae mov cmpsl cmp xchg popf rcrb ret in jnp repz fmull stc cli je pop rcr mov aam loop jg aaa sub int or push sub sub adc mov push ret adc adc sub addl js and add clc sti mov adc adcl les lret pop inc cli sbb add jbe jb in lahf stos iret pop cmp insl scas lret loope std xchg hlt movsb xor jne data16 push mov ficom inc lcall adc or inc in fidivl scas rcrb popf pop jae dec xor (bad) xor mov jmp xchg in inc xchg cmpsb imul ss dec outsl mov xor push out inc jnp mov adc sbb lret out mov dec mov mov movlps imul adc lea movsb idivb (bad) xor mov and hlt jecxz adc int adc xchg fsubrl mov lret add jne pop cmc cmp add (bad) cmc and bound (bad) out dec jmp in jmp mov inc mov ljmp in pop repnz shrl pop sbb pop aad mov jl jmp inc insl mov inc and pop ss xlat mov faddl pushf repz push pusha test or xchg push lcall mov dec loopne xchg daa cmp push xchg cmpsl sbb stc out push idivl fwait pop mov sahf jge or mov ret pop adc push jo imul in sub arpl (bad) (bad) push xchg sbb jae ljmp repz inc xchg pop popa xchg scas imul jnp jmp mov dec imul mov push jnp je in mov shl jmp mov pushl or sti ret cmp fistp arpl adc test mov xchg dec popa popa xor cmc lea lcall lcall lds xor cmp stos push xor mov insl sub loop pop das xchg or pop ds lds lahf mov mov test scas ss sub int push bound pop add sbb xchg cmc add aad mov or ffree fs in adc inc sbb and and aam xchg (bad) push aad sarl sbb lods xor ljmp xchg or pop or xor or in iret rol pop popf inc push test mov in xchg jmp mov xchg out mov stc inc jmp mov addr16 ds stos lcall mov scas loopne dec and add cmc es jae lock mov cmpsb sub test adc (bad) dec jl sub xchg fs data16 imul nop jo sbb out daa hlt xchg jp sub and dec ss mov iret sbb pop pusha jbe movl rclb clc in daa adc xor push loop push out icebp test arpl adcl sbb adc mov iret xchg lds repnz inc mov je insb xchg nop lcall inc in test xchg addr16 lods insl push idivl movsl cmp pop or inc inc gs mov test xor mov or mov loop and push loop lock outsl inc cmp aam sub jbe dec fisubr insb or xchg push (bad) rolb fistpll addr16 inc pop mov lret sub pushf lea add mov (bad) fcmovb or cmc (bad) mov (bad) xor push xchg jle adc push xor fcom push es jge xchg sub xor cltd sub push stos bound icebp std stos (bad) xor ljmp stos bound or add iret xor ret out lock add xorl push xchg lods lahf cld imull out iret aas jnp xchg icebp dec dec int3 into push push repz das jmp and loope cmp lret les inc lahf out mov in or push add lret cs jne popa xchg (bad) (bad) lret pop loope jb and outsb jl aam push lea mov cli xor pop xchg and cld and scas jge fimul adc arpl das mov (bad) cltd add enter shll adc inc push repz (bad) dec out cld sub flds inc or dec ficompl xlat stc push or adc les mov sub adc xchg faddl in leave aam xchg das push mov hlt into mov xchg jmp das xchg cmp push mov mov and xchg xchg cwtl cmp shrl add mov out bound ds lcall rol adc sbb cmp jl mov xchg lcall mov leave sub sub jl push mov push jbe xchg rcrl inc sbb out clc scas mov fadds mov mov push xor push pop repz adc cmpsb subl inc ja xor rcrb pop sbbl mov test mov mov aas clc mov push cmp scas fstpl popa push mov int3 cmpsb xlat fs addr16 es jb xlat js adc (bad) lock jnp inc and fsub xchg enter (bad) idivl mov int3 popa cmp ss call pop jmp and cwtl call pop or pop adc or or cmpsb xchg daa lret mov aam cmc in adc jo xor test loop xchg test imull jmp js mov dec cmp sub in subb and jb sbb cmc mov jno fcmovnbe jno mov mov jp outsl and lret mov (bad) lret ss inc arpl out (bad) loop sub movsb (bad) lret jnp movsb icebp xor pop add in rorl push and sub inc movsl jb jbe cmp jp fs cwtl imulb (bad) lret pusha rcrl (bad) imul dec lret es ljmp enter cmp cmpsl pop mov (bad) pop icebp add inc dec mov lret mov nop mov lods inc (bad) jne aas lcall adc nop cmp daa imul sti dec iret xor jecxz and lcall pushf pop pop testl scas int stos jl (bad) xchg inc sbb dec or subl mov push sub mov sbb out xor lret cmp lret aad arpl jg cmc mov jl inc ljmp jno pop insb jo xorl cmp imul xchg (bad) (bad) mov sub (bad) mov sbb (bad) or out mov dec shl pop stos jae or clc jge roll aas es stos sbb stos stc dec push fmull sub and push arpl (bad) add mov lret xorl out fidivrl cmp or xor in addl mov loopne out mov (bad) push xchg (bad) jns fwait cmp popa dec (bad) mov ds push xor ss out mov mulb sbb rcll cmove and iret jns jb push or cmp push enter shlb call cmp jmp cli add imul in insb pop jp dec repz xor mov arpl test mov jnp ret je mov jno or in mov imul lret loop int3 xchg jge insl sbb out (bad) xor popf sbb push bswap add mov jae mov out cs pop inc lret push pusha add gs xor movsl (bad) xchg mov pop push mov jmp mov movsl fucomi aad mov in and adc pop mov mov sub (bad) in cmp scas or cmc ljmp std (bad) loope cmc roll dec dec lods sub imul mov cmc aam push in adc test clc popf int3 leave aas or cld clc (bad) in ret push add mov mov push pop and jge mov push and jmp cmp push sarb xorb iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld mov ds mov ss add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc popf or sub stos adc pop dec ss int das das mov mov idivl mov add or arpl ret int3 mov cld adc insb ret push call cmp cmp cmp mov outsb sti inc fldl inc lahf nop inc xchg push and xchg notb mov push data16 or push ss test ret sbb popf push rep jl insl xchg sub xchg fbld push into jno push cli imul cmpsl cli leave sub rorb and mov and jp mov cmp push nop inc fistpll adc sub pop in (bad) arpl xlat dec mov xchg fimull xchg add pop (bad) adc and sbb insb add add and mov inc ljmp jbe adc jmp push mov sub adc xchg or pusha jne jp shrb xchg idiv in adc inc push ret inc jle sbb lret out insl xchg pop shrl fwait pop in cwtl pop cld insb test loop jmp push mov sub mov sbb je pop fnstcw xchg dec aas enter fisttpll je sub pop (bad) into cmp sub xchg out (bad) and push cmp icebp sbb sub jns sbb fcomi (bad) stos jb movsb jne jo xchg into xor test lock jne ja sbb out sbb sub push xchg ret stos daa jp scas icebp popf jo xchg mov jle int3 stos pop mov mov addr16 hlt arpl aas movsb pop mov mov out lods cmp xchg sub pop int3 fstpt cltd stos inc lret cmp xchg jl dec dec push inc mov test xchg add sub out push lods (bad) test add shrb xor sbb cwtl sbb enter loope pop cwtl scas xor insl cmp popa jae out nop sbb inc pushf push push cmp mov pop jbe pop and lock movsb inc xchg sti ljmp inc sbb inc sub (bad) lret jb xor or xchg cmc cwtl push push (bad) test pop nop test in in jne inc or in add in mov mov fisttp popa mov sahf das pop test sub pop adc jecxz sbb or jae or xor clc dec scas inc dec inc fs pop sbb cmp cmp inc jle cmc adc scas dec sar adc pusha jno insb mov or inc (bad) out int (bad) mov cmp jg mov mov xchg xchg xchg sbb (bad) outsl dec shrl ja adc mov pop movlps daa insb jnp adc sbb pop out cltd cmp rcll or sahf xor into pop pop ja fstl jg push jno mov lcall fistpll cmpl ret dec in push lcall (bad) (bad) xchg xchg pop or cli out ret inc adc stc push pop jg (bad) daa rolb dec (bad) dec sti call xchg mov xchg jnp leave cltd mov rcll bound pushf arpl dec (bad) (bad) das nop pop int mov movsb push jns insl jmp adc enter ljmp cmp in adc dec lds xor jg jnp pop repz out ds jecxz nop push adc std mov aas sub jbe or jbe xlat mov pop jno mull into jno ss jnp lods jo inc lods inc dec movsb lock ret outsb sbb inc and mov pop jmp pop repz jo jns pop pop push repz enter outsb mov or xchg test add adc sti leave sbb push or and imul imulb inc mov jne cmpsb imul shll xor es aas inc push fisub and push cmp out jl mov cs enter add sbb xor mov loopne ret andl insb repz imul cmpsb mov mov xor lods leave pop loop adc js sub mov pop jne scas adc dec mov xchg ds cmp xor rclb sarl jg inc sub sti push ja ret jecxz and clc cs stos (bad) jb mov mov mov inc push mov dec sarb add test pop dec fsubs add icebp xchg jl gs and cld sahf loope push out mov int3 pop dec jb test jp sbbl cmc repnz icebp sahf jae in test in iret in iret sti cmp inc es mov adc jo dec push aad gs add cmpsl lds mov mov cmp int3 (bad) int push adc xor pushf gs cmp dec outsl push sti mov dec push test loope outsl cmpsb and pop inc push push mov ret fnsave cmp inc jae mov cmp mov jmp push jle shrl test jno out and mov xchg adc pop hlt repnz aaa and les addr16 loope pop mov mov xchg sbb test ss cmp mov push rorb aad rorb ljmp adc mov lods dec (bad) push jp sub xorl sub dec pusha push in (bad) sahf fdivl and test or mov mulb xor push cltd pop loope xchg mov test dec scas out pop fcomi or mov or fidivrl les int ja std les loopne adc bound mov dec shrb stos xchg mov xchg push enter fs push jb daa adc aas push pop fstpt mov inc or fnstsw dec sbb adc xchg mov mov adc cwtl out fild icebp lahf fimul mov lret cs stc mov (bad) ljmp mov add mov jbe aam pop scas mov inc jle and mov ret xor mov fdivrs loop xor lods lret or mov test mov mov movsl lods jo mov imul not insl in and rcll mov mov clc (bad) test mov roll ljmp je dec push fnstenv popf test fmuls cli imul jmp aaa xchg cltd or mov cmp popf ss lods mov push xor xor push dec xor push inc jnp or jmp inc mov mov mov cmpl cmpsb and imull cli data16 lret scas shld mov or pop lcall call (bad) fdivrp in out ret mov pop lret je xlat rorb dec or cmp in jp scas insl jg call daa inc xor icebp in movsl inc test mov (bad) lahf adc jle incl xchg adc xchg lret out int jp jnp std xor call cmp xchg jg test add mov mov cwtl test (bad) iret js sub jo push pusha add adc jg mov and pop imul das (bad) jno ds cmc mov adc fldenv arpl movsl sbb dec pushf pop test cmpb notl mov xor arpl add lret mov cmp sub cs or lods mov mov outsb cmp push mov xchg mov jmp push or mov into sti sub xchg add repz cmp enter xchg cmpsb fnsave push lds leave stos inc adc xchg test rcpps pop test cmp insl aaa add pop inc rol or in icebp jle dec lods subl mov sbb jns daa adc push ret xchg aas std jmp pop xchg add js fs pop movsb fcmovb hlt (bad) loop cmp mov cmpsb cmp mov xlat cwtl subb inc hlt pop sub adc fdivs pop lods sar dec cmp shll nop sub or out inc sbb push sbb xchg cltd push mov xchg pop push fs inc xchg push fisttpl int sbb (bad) imul leave inc imul add lcall mov mov imul sub mov sub jo (bad) dec cmp cmc mov and ds mov or adc outsb mov dec movsb (bad) cmp fdiv mov (bad) mov jnp hlt das hlt lret ret pop ret inc into inc frstor lret lahf dec mov insb pop imul sbb das lcall out out jns outsl mov mov imul lea mov arpl cltd sbb mov je sbb adc dec in in arpl pop adcb fwait mov test ljmp sub sbb sti mov in add iret xchg rolb pop mov add sti int3 and or incb popa sub lret or (bad) push or sub pop add mov jb add sahf aaa pusha (bad) out in cli ja add xor (bad) mov jecxz call icebp aas push (bad) out bound cltd mov adc popf es jmp push mov fwait sub insl inc jl sbb adc scas adc pop xorl add sbb adc or push aad xor cld outsl xor lcall cmp or jb inc xor inc xor add bound cli in imul fsubr sbb int mov push pop pushf int3 es pop insb outsl pop lods jo lcall lret sub cmpsb jnp fimul clc out (bad) rcrb jo call out mov jg test call sbb jae in mov stc jae out ret mov adc in imul mov rep cmp pop cltd sarb push out ja (bad) mov hlt sub jne ror and je mov mov (bad) div int xchg push stc iret jno aam imul fistl loop add cmpsl inc xchg cli jmp lods pop stc and icebp lahf xchg sbbl out and dec pushf std lods add and fdivrs inc pop inc push mov hlt push hlt dec pop enter xchg jge ja push cmp jmp inc jne cmc int into int3 lcall mov sbb adc inc fstpt (bad) je aam sahf cmp push dec (bad) ljmp loopne orb enter or imul mov cmp (bad) or aaa gs sub pushf ret xchg mov adc dec xchg popa loope (bad) xor (bad) xor jo in int push and mov xchg rorb push enter dec lock into (bad) lock popa mov mov lret inc push divb or stc mov push xor mov mov ja mov add lahf aaa push sub jb out fs inc push jg push stos push pop pushf fist mov sbb pop or fs addr16 dec (bad) mov fs or xlat das jge cmp cmp ja bnd shl test lret rcrb xchg mov aad add push lahf jb xchg mov aas stc pop inc xchg in pop push fwait dec pop fadds arpl jne fbld mov inc pop scas cmp adc push decb fwait pop aas push xchg leave std lret pop fmul gs and in das mov ret xchg imull test popa xchg lods in pop push sbb mov (bad) push ja adc push pop out push jb sbb mov dec jae daa (bad) ss sbb xor mov jns cmp scas cmp fsts lret jmp fidivrl add pop push push lret (bad) pop (bad) push or or (bad) (bad) ljmp jnp cmpsb popl push loope stos mov dec cmpsl into push psrlw fs js (bad) sti cmpsb jg int3 lahf mov pop jnp dec mov sbb mov lcall (bad) cmp and jle mov mov lods mov add sub push mov std or mov hlt out sub movsl dec lret popf js out sti mov sbb jg into gs pop jno adc jp mov and mov cmp fist clc in pop xlat ret ss and (bad) in adc xor push mov fincstp push loopne std fsubrl pop xchg js jb out jmp cmp insb lret cmp xor mov pushf jle fldenv loope rcrb lret ljmp (bad) jmp cs inc out push pop xor imul mov xchg jbe sbb movsl xchg cld aas mov lds fwait enter (bad) test icebp pusha dec sbb mov fdivs fwait out ss pop testl std jbe adc jb outsl sahf adc movsb cmpsb sub (bad) xchg je lret hlt sub adc xor les mov aad aad dec cmp inc insb cmpsl mov out sti sbb xor fwait push test push push mov xchg cld scas xor test cs push cld add push jns push ret jnp xchg in stc (bad) int and jg mov and mov dec mov inc mov ficomp lcall pop push xchg je mov sahf ret rclb pusha dec mov inc lods (bad) (bad) fistl and mov pop xor push (bad) insb jbe jae aad cmp imul pop add repnz inc pop daa jne sub das sbb cli dec adc aas ret jmp ljmp ds ret es testl mov sub mov inc mov lods mov xchg inc cmp jb sub fwait or and int3 aam xor mov cmp pop ret mov adc push pop test aaa (bad) in cs enter lret jecxz xchg int mov push insl jnp movsl push pop jb cmp jne in rcrl ret push shrb enter jmp mov cltd ljmp jmp imul int loope jge cmp inc outsb push dec sbb sahf add sbb (bad) mov inc rolb mov in push and test lods dec leave or xor add dec jecxz inc cld ja rolb push in popa adc jno hlt xor mov cmpsl jne cmpsb aas push clc ret int3 (bad) aas out xor (bad) pop xchg rorb out sbb jge or mov das dec adc int3 loopne sbb hlt xchg jmp (bad) dec (bad) je or sbb dec popa out push movsl lods pop aad imul pop in fiadd and dec call mov sbb jno cmpsb pop mov sub push mov pop rorb popf imul push inc test ror fldenv (bad) std jnp jae pop add test mov sbb iret add mov inc jb rcr jno xchg rcl fcmovbe aad jmp xor sub pop lock in rorb mov jb cs dec cmpsl divb arpl cwtl push icebp and popf inc cld dec push scas pop (bad) scas jmp or jl movsl out outsl adc out xor xor push mov sbb fs xorb push imul in dec aam in aaa int orps fisttp fcoml (bad) or mov push sti jne (bad) mov in ds xchg insb or cmc int aaa pop mov movsl vhsubps fdivp shrl repnz push xchg stos (bad) dec cmc mov lret or xchg fs mov aas xor sbb fbld dec mov aam arpl fnsave mov lahf jne mov push outsb jbe repnz mov std and movsl push push in sub cld std sbb adc test sub mov (bad) mov fsubrp popf imul jb xor mov fbld ret pop cli xchg mov xchg push push push jae imulb sbb aaa and mov roll or mov adc fmuls in sbb outsl lahf imul adc jno cmp in jb push lcall adc sbb lods daa xchg pop mov outsl lcall scas imul jnp dec cltd sbb leave mov or xchg pop das mov loopne inc jns mov insb fucomp and dec in push iret ret aaa aaa inc xchg les std dec xorb fwait test je rclb cmp stos dec test ljmp mov movsb mov int dec mov (bad) in outsb jl data16 rcr les fcmovnbe ja sub push jecxz cs into subl nop pop jb lcall mov sahf call pushf pop and outsb sbb mov push fidivr push int ja lret xchg xchg push test iret jns xor ret imul pop add sub test icebp and push push mov fsts or inc xchg mov fisttpll inc mov iret jo mov jns in out out dec dec xor mov daa sbb aam sar xorb je cmp xlat or cwtl cli jne inc cld test pop arpl stos stc or push xor mov fisttpl (bad) jl fwait or arpl jl leave inc sub in lods lds js js (bad) or xchg fadd fs gs adc in dec lret into test arpl aam sbb in in push ljmp push roll xor jnp dec pop cs lock movsb mov ljmp xor xor and dec dec mov push loope cwtl or rcll aas dec jns fwait and andl shr inc push push mov les ret sarl xor dec fldl2e push cmp mov adc int3 mov and test js lods mov xor inc xchg cmp repnz jae andl daa les ljmp pop sbb mov inc jg rcl das (bad) jo imul push push mov (bad) xor xlat lret int xchg xor test dec outsb hlt mov out mov jnp xchg rcll aad adc push mov sbb cwtl std bnd fwait mov inc mov xchg sub xchg roll push xchg fs shl sub bound sub push jecxz cmc movsb jb outsl dec (bad) repnz and or fs stos test lock out and test fisubrl mov jmp add pop mov (bad) dec fsts or daa cwtl mov stos lret lds aaa jne iret cmpsl lcall adc jg or (bad) (bad) jmp push lea add std inc sub std jo adc adc mov or add mov loopne sub aas mov in and les imul pop out jl mov fbld jmp out inc lods push dec lds int adc scas mov or jecxz (bad) pusha pop sub mov inc repnz cmpsl push jb pop popf inc cmp cltd sub loopne push jne push data16 (bad) xor sub pop mov stos mov outsl imul into or popa (bad) pop inc cltd sbb mov fbstp push roll push and fdivp bound out lcall xchg xchg push jecxz jno sub ja xor or jbe inc adc pop scas adc lock in push xlat std movsb insl insb jno adc adc imul mulb cs jns inc out inc nop into mov adc or sbbl shlb clc lock scas test inc int into daa dec scas cli test sbbl or imul repnz scas push cmp xor xor mov cmpsl cwtl lret repz or insl loop cmp fistpll mov call pop jbe fnstsw mov add fs idivl dec ret pop sbb mov fidiv cmpsl inc cld mov push iret ror and xchg mov arpl das xor push lock test push pushf (bad) arpl je xchg divb fisttpl jnp ret dec and in lret mov rcr pop pop adc je mov pop mov pop in in push and add xchg push push push arpl movsb das (bad) cmpxchg js mov or add clc popf and push jl lea dec mov (bad) cmp je aam insl (bad) pop add nop ret xchg decb mov fwait sahf cli jb jge rcrb ljmp sahf sbb mov xchg in daa xor adc xor data16 and cmp or pop loopne mov mov je mov jl dec jmp rcrl rcr sub test punpckldq xor insl jmp pop dec xor dec out jmp cmp jae mov sbb pushf sbb fist and nop into lock push jmp fisttpll insl aam lods stos xlat jns jbe lahf js and mov dec jae adc push inc (bad) decl sub imul inc mov add cmp rol or test cs test inc sub sub mov into and lahf mov (bad) sub outsl sahf cmc fldt push jmp aad or inc leave add inc cmp aas mov insb pusha daa push loop pop into bnd sarl jl dec (bad) ds and test jne bound fwait mov in or inc adc lods or ja add sub push and ja push mov push repnz rcrl jle inc mov pushf aaa test xchg fldcw xor shll xor mov (bad) scas cld dec scas cmp (bad) imul scas loop inc fist pop inc push jae mov aam iret dec cmovle xor sbb es cwtl outsb push (bad) jno cs jmp and adc movsb popf in cmp shrb clc xchg fdivs loop ret in push push das jb imul xchg xchg outsb mov movsl in pop icebp dec (bad) pop mov pop incb nop jnp jb fwait jbe out push mov movsb insb cmp pushl xchg (bad) jno fstps inc lahf fnstsw cwtl jno fdivs sbb divb (bad) jne mov sub sbb xabort test rorl mov mov mov sbb aas gs (bad) std adc pop fcmovbe jle aad iret in jecxz mov mov mov cmp push fstl repnz push fidiv jmp loopne pop xor xchg mov pop (bad) pop ss popa adc jecxz aad mov inc out xchg movl shrl (bad) jo sar xchg popa sbb mov scas jbe fildl imul mov add add loopne fldcw sbb push jmp test mov jmp call sub ja (bad) ss push xorl fdivp add mov rol adc inc mov fnstsw mov movsb (bad) mov rorl mov arpl stos fmulp in adc scas push adc pushf imul clc adc loop imul mov pop sub sbb dec stc cmpsl jmp ds clc or xchg addr16 push jnp,pt lea fwait jns cmp popa mov iret adcb push inc mov sub leave add imul dec dec outsb gs ret idivb cmpsl decb cmp scas push divl xor fsin xchg mov or dec push lcall std xchg out mov mov cld inc sahf inc or ljmp pushf dec xchg dec daa xchg lea jle sub loop popf dec repz dec pusha jle mov jp mov xor mov addr16 arpl dec cli pop cmp push mov out add rclb push repz pop cmpsb cmp cmc or mov xor mov xchg insb in xor leave hlt bound inc mov pop into out std fstpt cld int3 lock inc lds xlat or push lea pusha imul dec ret es mov ja adc cmp les hlt fcoms in fcmovnbe (bad) in mov pusha fldz pop repnz in pop jge shll xchg xchg mov data16 pop dec xchg (bad) or xchg aam push push mov jmp mov sub jbe fidivrl in and movl fnstcw test in icebp stos mov scas adc adc outsl mov or ljmp loopne pop push adc dec xor leave aaa push dec loope movsb sbb mov js jbe in mov mov pop je jecxz (bad) xor pop or cltd pop fucomi (bad) (bad) clc adc repnz fsubrl jne inc out lock lret adc pop fnsave jnp,pn std cli add xchg push mov pop (bad) lock lahf add icebp mov fwait inc shll (bad) cmpsl imul mov inc push aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld jg add add xchg sti mov pop lcall dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push bound mov xor arpl insb cmp leave les xor insl (bad) fsubp jle (bad) jle or (bad) pop add xchg xlat xor lret out jb and jl rorl pmaxub xchg lds loope bound sub mov cmc outsb pushf push ljmp lahf jno ds mov cltd xor out rorl repnz negl int3 imull dec dec pop jb pop cmc push mov rol sti (bad) mov dec or mov sahf mov (bad) lret cmp popf outsl (bad) popa mov mov mov inc add dec (bad) pop cmp dec out scas sub clc pop ficom out sbb iret push rol and movsl in push mov pusha inc loop mov jne push dec sarl inc notl aaa push (bad) mov sti cmp push dec mov scas fs andl (bad) (bad) mov in dec jle add stc jecxz cmp cli inc lahf fs xchg xchg push push jnp mov sub adc insl fs nop mov xchg clc fcoml cmc cmpsl mov and push movsb cmp aaa daa jnp fidivr hlt xlat ljmp cmc ret pop xor (bad) jns mov dec insl jmp or stos aam out es stos movsb xchg xchg inc sti rcrl movsb out mov and imul das add cmc sbb jns mov jns inc xchg jbe lret loope mov pop out push mov xchg sbb cli jo mov xor je jecxz ror dec push ror or xchg and push pusha inc push mov push xchg mov clc jae xor mov and out pop lcall test dec mov fldenv loope pop mov mov lods pusha adc jmp fistl mov mov push cmc mov adc jno std cld jmp imul lds in pop int push pusha xchg pop adc mov aad lds cmpsb std inc pop xchg inc (bad) je test xor iret lock jp stos mov stos bound decb add mov mov lahf mov dec jnp dec sub pop in push daa sub adc xchg aad mov enter mov add adc xchg mov mov inc outsl sbb fwait into aam divl sub shr inc movsb adc and inc mov sub test sub lea les (bad) push add pusha movsl inc mov pop mov push mov sbb and loopne sub sbbl jle out xchg insl (bad) in in mov mov into fstps lock movsb in and sub fs out lret pop pop mov fidivrl push inc sahf mov jno mov adc fucomip lcall (bad) aaa in adc dec into and mov cmpsb scas xchg (bad) pusha mov (bad) push dec fbstp cmp sub xor into jo push adc xor dec lcall scas sbb mov xor mov push inc std repz cmp jecxz insl fnop push mov jae jb sbb repz fistpl repz and lahf cmpsb mov xchg ss in mov mov cmp inc pushf xlat or push cmp jae push hlt jmp sbb push mov add aaa sbb into jne outsl cmp jne aad add mov pop popa repz pop lret pop scas (bad) imul pop xchg jecxz out dec inc mov add xchg stos (bad) adc dec sub imul push dec sub add push ljmp repz xchg mov add (bad) dec mov or test cmpb cmp or mov xchg mov lods sub mov mov pushl and cwtl pop pop test (bad) mov inc push jo cs mov push dec jp call mov test push (bad) cli neg pop in les push sub jle push sahf xlat and pusha dec in leave inc jns pop xchg out push leave dec in hlt mov outsb push sarb mov xor jge,pt outsb into stos ja fiadd dec ret ds push lcall cmp ss fs adc ss fsts jns hlt loop notl cmpl mov (bad) hlt and adc outsl outsl sbb cmp dec xor inc ljmp fimull (bad) test mov adc mov inc mov loopne lret es gs gs mov sub mov hlt notl pop jbe sub js inc popa out pop adc jg fwait popf enter imul stos pop call aam jns jg test add sub fwait scas xor insb mov (bad) mov std repz loopne pop dec and jmp (bad) sahf lret add (bad) push and sbb xchg xchg and jmp sbb xor mov mov and loope xor jae addr16 enter inc nop xor (bad) push in jne xchg mov fdivrs popl mov insb sub lcall pop jnp sbbl loopne or xor stc jne fs bound add fstl mov inc outsl sub in mov clc dec and sti pop cmpsl lea stc popa mov mov leave divl and push (bad) lock push add int inc xor dec jl or add add fcompl sbb sti out movl nop es mov sub stc or inc mov push cmc cli mov sti daa lahf cltd sbb add sbb icebp cmpsb imul jbe icebp (bad) push mov xchg imul jnp ljmp aad jns ss jbe mov (bad) jae mov rorl enter (bad) lock scas roll cmc jno sbb cwtl dec push jp test jp fldenv movl popf repz mov inc nop in add cmpsb popf ss aas push pop stos cmp sbb lret shl pop xor data16 jecxz addr16 fstp ret xor cli scas mull lock push xlat push hlt je addr16 cmp daa popf mov jb hlt fwait xor movsb xchg test fildll std mov lret out cmp outsl ds mov enter dec sub (bad) and cmp ret push push sbb rorb leave cltd mov int3 rol mov xor fild xchg int3 inc aaa lds daa fldenv xor inc cmp bound lahf (bad) cmc pop or mov mov inc in cmp dec dec mov sbb sahf dec cli ret add stc loop cmp inc mov (bad) xor es imul imul adc (bad) cmpsb scas xchg (bad) insl stc jnp mov mov xchg std adc int ss cmp or das push pushf or out in lea mov cwtl cli (bad) jno mov (bad) lods incl dec outsb lret push das sub ds xor and mov test mov pop dec shll stos rcrb push test jae pushf xor in cmpsb jae test jo int int3 pop stc leave sbb lds fsubrp inc inc loope sub mov loopne push clc add mov sub dec out lret lret push push lods mov inc cmc push lock sub les cmpsl push adc adc push call mov cld pop fimul mov mov jb movsl loope idiv fist mov (bad) push fcmovne arpl insb andl pusha arpl or (bad) push push outsl (bad) insb pushf mov stc mov inc jb bnd out mov hlt sbb movsb dec or mov shll imul cmpsb (bad) loope lock xor or jl cmpsl in push mov add iret ja sbb xor loopne push test (bad) (bad) and loope sub mov inc popa fcmovb fcmovbe out xchg fsubl outsl clc xor popf imul jb lock cmpsb add and pop (bad) fldcw inc out stos lods mov or call pop and sbb or sbbl cmpsl loop pandn mov imul xchg mov add mov sub in pop push mov test ret sti jb push aam fildll dec cmp mov sub push add (bad) lcall inc test cwtl leave mov mov rorl insl mov add push xchg sbb lods and and or pushf xchg int3 adc fwait out xor jl repnz cmpsb jmp leave fsubrs sub cmp and sub and orl dec mov jmp mov jo push cli and sbb dec jp (bad) dec fnstenv iret fisub dec int3 push sbb stos insl sub (bad) rorb lahf sbb int (bad) hlt cmp sub mov inc or sbb dec sti testb (bad) or cmp mov xchg dec add pop xorl std mov sub push loopne out repnz mov cld int cltd (bad) mov ds sub pop mov insl ds sbb arpl fstps mov (bad) or sti xchg mov mov xchg adc jnp pop add das roll xor loop mov call and rclb cld imul loope in (bad) stc jo push xor pop cltd mov stos cmpsb into roll dec add or push mov in out inc insl jp add mov or fistpl aam sub mov pop mov inc in add sbb or test insb iret pop xor subl into addr16 cmp mov jae sub mov rorl fcoml pop push mov cwtl xchg inc outsl mov xchg xor sbb out xchg mov sbb rcrb pop sbb (bad) repz out mov inc sbb push hlt sbbb cltd mov add fidiv jmp mov in outsl in fbstp push (bad) fimull mov jg cmp insl fldt adc mov xor pop scas adc sub push or mov fcmovnb (bad) sub mov xchg mov xchg or mov popa mov jnp sbb incl (bad) and icebp dec (bad) ljmp sbb dec pop aad jb xor mov movsl jb or pop mov icebp push sti clc jnp cmp sti loopne and (bad) rcrb ljmp js (bad) push cmp pop mov js out mov pop test (bad) jmp imul and mov scas stc fldl lahf (bad) push mov addr16 aad pop cmp push push push int3 sub push add xor rcll aam push dec pop lcall loope in (bad) fadds scas cmp pop xlat mov mov push dec mov xorl inc sbb or cmp mov scas mov sahf inc cmp jbe mov adc shrb inc es mov mov jl movsl (bad) mov outsb pop xor andb jnp movsb mov in push mov fwait sti fdivrs pop sbb fidiv sbb (bad) aad popf movsl or ficomp mov imul add push cli je push cmp pop (bad) pop adc or cmp jno jno rclb into pminsw or lret fldt (bad) xor dec pop lret je orl fisubl das jl sub or dec pop movsb pop out dec out pop cmp not cwtl inc bound or out push in add mov sub cmpsb nop pop push add add push jno xor adc xchg mov jp add mov push lret adc and dec fisubr cmp xchg popf pop mov std out sbb cltd sbb add cli sub add jnp mov daa sub push sbb pop mov into das ja out xchg fisttpll daa push test dec xchg add sbb sahf cwtl push and mov xor jg scas jmp fisubr mov jmp cmp sbb mov and mov pop jno dec add add cmp nop dec mov sbb or pop js pusha mov xor push inc mov mov mov js,pn lods mov pop jg imul and mov sbb lret mov popf rcrb repz jbe insb or push clc mov jae push pop test fnstsw sbb icebp addr16 add (bad) fwait mov lods jmp fmuls push jmp mov and mov push repz mov (bad) push rorb mov mov mov cld imul test sbb cli push fldl pushf nop lods jg (bad) add fidivrl and mov mov daa lods cmpsl stos icebp jl jmp lods aaa push dec adc cwtl cmp mov mov push mov mov ljmp push scas pop arpl aam dec lahf hlt lcall lret test pop (bad) insl inc fldenv in mov into xchg cltd (bad) cmp (bad) sarl push jne (bad) rorb aaa jp (bad) xor add cmp sub emms sahf mov cs sub int dec test push loopne leave and in loope out sarl (bad) sbb mov mov les jae mov stos cmpl mov push int3 jmp sub mov push push in sub out into mov in add fldt adc stc std jae or ficoml mov sarb je inc inc cmp pop ss sbb mov xor ds fisubrl or and dec scas sub cmpsl dec fstpt aam and mov mov mov ret scas cmp push pop pop adc rorb adcb xlat pop out lods inc xchg xchg fisttp pusha adc pop jmp push jmp xchg push ja and and push fmuls stc repz lcall daa fs arpl es jp mov into sbb mov nop adc (bad) xor je push inc push xor fistpl sbb xchg sbb imul inc push sbb js xor dec (bad) sbb xchg sub cmp push jle fidivr mov mov ss adc (bad) mov pop clc xor push adc (bad) ja inc adcl dec push lret jmp js add arpl (bad) loop movsb sbb pop aas andl dec add xlat cmp jne mov mov lea and fild cmp in jno xchg mov (bad) jmp (bad) jecxz loope cwtl xchg pop push cli push inc in mulb lcall lock dec lea mov test adc xchg lea jns arpl cld js fldl mov mov loop mov push dec adc lds add in leave xchg xchg insl cmp popf pop outsb sbb mov repnz jne push pop inc ficoml mov imul mov push mov pop push dec and mov xor aam sub jnp add sbb es addr16 pushf inc ror stos shr jb xchg jne test sbb push nop adc or mov clc jg xchg and mov inc fadd mov jo repz and xchg adc cmc and pop inc fldt add sub adc jbe or shll dec pop or mov mov pop and int3 push adc add imul bound jmp inc fstl mov shrl fcom (bad) sahf lcall das cwtl cwtl adc sub jae jecxz cld das and ss aas pop jnp lret outsl inc xor int jns jmp pop cwtl inc sbb mov push dec in or stos dec adc lcall fs je cwtl sub mov sbb repnz mov xor lds jne jns mov test call imul sarb jecxz push ss push dec sub adc add test imul decl pop push mov mov cmp xor adc or stos xlat xchg sub mov cmpsl fist repz jae adc lret sbb daa push call cs adcl sahf mov cmp mov jmp mov rcrl push lret gs pop (bad) pop outsb inc fisub ficoml pop cmp in xor dec movsl adc enter push lahf mov sti mov jl nop dec push sbb mov fmul cmpl jae inc mov or mov pop mov jo aas dec jnp sbb push aaa fbld inc stos adc int3 pop bnd cli cmc push sbb in mov test (bad) cmp repz mov sub xchg out adc es mov or (bad) out inc push rorb popf push push xchg sub (bad) inc add inc imul outsb scas stc pushw fisubl (bad) hlt dec cmp push loopne aaa add pop or xor outsl into xchg mov stos loope adc add (bad) dec arpl push xchg sub xchg scas (bad) out sub or pusha mov test repnz pop xchg inc cli jle mov xchg dec sahf push cmpsb pop rorl rcrb fbld cwtl fsubr jnp xchg sahf ds mov mov (bad) adc pop xchg add mov shr popa xchg xchg pop mov jge and mov pop idivb mov ss stos int add xchg mov pminsw addr16 jo aaa xchg jbe lret pop push pusha jecxz lods daa adc add mov cmp popa les dec or ret pop (bad) inc loope das jnp lds das inc mov jae xor adc and cwtl jae adc scas in inc out dec pop sbb push and mov dec (bad) lret shl cwtl cmp loope push (bad) in sub push (bad) jns mov mov repz inc mov jbe test pop nop mov (bad) call loopne sub imul ja adc aam or in push fs fisttpl out dec ds push (bad) fidiv inc add inc leave sbb scas stos push add imul stos cvtps2pi popa (bad) fimul and stos outsb push cltd stc shl je cwtl push push imulb xchg les fiaddl cmp pop aas mov push arpl mov xor xor jp scas (bad) (bad) bound add lret sub jno sub cmp xor stc lahf fcmove and dec jp jns negb in stos push inc fucom or (bad) lahf out cmpl mov shrl ficompl cmp mov aaa int jle rdtsc add jno inc jno std add xor and sub inc mov pop jp lds dec pop adc cmp push mov mov and inc lock sarl push aaa push in fwait jns add cmp (bad) dec adc xchg mov (bad) cli (bad) (bad) xor sbb test fisubrl xchg clc int3 lcall daa cmp pop dec jae (bad) arpl ret push loop,pn fild pop (bad) adc in push xor ds test or outsb stos addr16 jns lret jmp cmp mov xchg pop mov (bad) fdivl dec leave jl int3 xor push lea jae mov or mov dec lods lea mov loop sub shl xchg fsubs cli sti dec faddl test xchg push cltd mov mov mov push mov loop ss std rol je or push mov (bad) out or fcmovnbe lods cmp and imul nop or sub or sarb mov mov and mov std fisttp (bad) pop cmp sar movsb lcall mov xor fistpl cs and pop add or in pushf xchg push (bad) jae pop and cmp sub jb inc gs dec test sbbl movsb sbb pushf push lcall xchg hlt subb and out xchg mov push jmp (bad) aas sbb push daa cmpsl insl sbb arpl mov stos dec fcmove sbb pushl xchg jo inc mov in (bad) iret shlb xor rcrl (bad) sbb push clc mov add mov fcmovbe pop pushf das mov out cltd add gs pop lock pop mov adc and and arpl lds lock adc mov and aas push rcrl gs sub or roll dec imul outsb popf movsl lcall inc (bad) int xchg int popf adc dec push addl pushf arpl stos lcall dec je and test jecxz inc (bad) (bad) inc sub jnp xor adc push and into cwtl aam add mov nop push mov and inc movsl aad xor (bad) xchg insb test imul pusha addr16 mov (bad) ja jae push shr push push or sub mov lds aas pop push dec test fistpll sub fdivl cmp insl mov das sub scas push dec mov cmpsb addl stos cmp arpl mov xlat bound repnz fidivr lock scas mov mov ss mov js mov clc inc xor mov js aas xlat dec aaa sbb shl loopne add sub loop addb sub xchg aas fcomip jns or rep lds fcomps out jg (bad) xchg leave push jl xacquire sub inc or xchg testb inc push test or pop sbb cs cmp fs fdivrp sub adc push mov push xchg loopne sbb rorl or xor out dec jns movsb mov mov sbb push jns mov (bad) enter mov mov je lea imul in loop popl inc mov or jnp lods or les sbb add dec data16 fidiv cmp mov mov int3 dec (bad) push xor lret xlat pop psubsb popa xacquire push shlb xor sti daa loopne fcmovnb jle insl sbb shrl xchg jbe fs push mov or or pop mov aad lret stos (bad) adc cs push dec jae and jnp ret add gs int xor or stos lea cmpsl adc frstor out ds jb cli push add cwtl cmp jp aas jo bound xlat adc cltd (bad) sub js (bad) out shrb xchg stos xor mov jmp xor and push push imul and int jp scas mov stos sbb sti in jmp fistpl adc xor sbb out leave data16 fldt lods mov pusha sub bound xchg jbe (bad) xlat add js std (bad) lods fs imul pop daa aam lret sub loope mov add scas sbb xchg sti enter sbb inc cltd ds scas push jge fsubrs test cmp ja test or sti ss sbb insb imul pop dec pusha jg mov adc inc (bad) mov xchg mov or jae add leave mov lock mov pop pop lret cmp mov push int or sub movsb pop inc outsb sub das je dec mov jmp xchg or popa pop ljmp fcomps mov repnz pop pop sti pop xchg pop ds mov inc lahf pop stos sbbl sbb gs (bad) in sub sub imul test and (bad) fcompl ret fisubr imul sub sti xlat push jl js adc addr16 lock rcrb jp (bad) rorl inc dec ss sbb aam repnz out sbb rcll cmc xor fdivs stc leave outsb cmp test popa outsl pop mul sub fcoms mov imul (bad) xor fstps sbb sti adc jae negl daa mov lods xor (bad) fcompl (bad) jb push xor enter inc pop dec inc mov rorl cmp inc cmp les popf cmc xlat xor xor orl stc aam sub xor push or in add jb int adc pop ja xor mov mov xchg inc insb push gs mov lock out pop cwtl xchg ja loopne mov repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add aas rolb mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb sbb insl sub mov fistpl xchg in outsb (bad) xor xchg push add pushf add mov jno,pn popf and jo pop and aaa pop aas pop or (bad) push imul pop aaa (bad) jmp mov mov cmp mov hlt cli lock xchg sti jle movsl aas push fs fdivl mull mov jns xor out or mov lcall fcompl inc jp hlt clc inc nop les dec push xorps xchg mov mov mov mov xor xor sbb jp dec fmul (bad) sub inc pop and aad test ds das leave (bad) movsl into test enter fsubrs dec jge xorb pushf mov je (bad) js lret cmp in jne sbbb jae mov mov mov out jbe (bad) mov sbb aad inc inc jnp sub pop xor pop xor add popa pop jp loop shrb push pop fimull xchg movsb es jmp and hlt mov mov daa jbe mov xchg adc mov std stos outsl push cli arpl sub xor xchg mov pop cmp add (bad) cmc pushf ja pop cmp sub xor (bad) adc icebp bound ret hlt push mov push dec out jmp xchg xor sbb movsl xlat inc mov pop dec pop loop mov push ja lods (bad) jne pop cmp cwtl jecxz pop faddp out add dec movsb jno ret inc mov in loopne dec jno incb pop pop jl imul negb (bad) jg pop addr16 addl xchg jb push xchg inc cwtl xchg dec xor mov pushl push push lret cwtl rclb and les cmp cmpsb ja xchg sbb push jns repnz sbb test (bad) (bad) in adc icebp (bad) push in cmpsl jmp sub add or lret sbb shlb aas pop fist out sub jnp jo mov push ss xor in scas insl cs subl push and out jp leave lods inc mov vunpcklpd rol jle and test jmp sub pop push stos loop mov repnz in scas xor pop cmp mov (bad) popf into dec daa mov fimull mov leave pop mov cmp mov std pop insb push pop cli mov scas stc jmp pop bound fcmovbe rolb cmpsb lret dec sbb jle andl (bad) add sbb push jns bound ja cwtl cld add shrb test arpl mov int3 push insb cmp fs push xchg (bad) idivb inc jge gs sbb and mov rclb jne hlt add int3 nop xor mov aaa in xchg mov lock lret roll jecxz in ret adc xchg xchg push mov xchg push push in xrelease jge imul and popa jle jo xchg scas xchg jnp das jnp xor pop in xlat and xor imul inc lahf push (bad) or dec dec mov pop (bad) pop test and sub inc xor lock pop mov loopne push lret pop pop clc jl outsb and insl aas aaa push arpl pop mov andl fisub sub adc lahf mov push les (bad) aas (bad) in jno (bad) notb out (bad) mov aam inc movsb xor clc inc (bad) notl mov push xchg repnz (bad) cli pusha imul jne ret repz (bad) push fistp jle sub bnd ss dec cmc cs ljmp mov sar clc out sub in mov sub mov out mov jmp cmpsb push mov movb out jp mov mov cmp jno push adc dec push xchg fistp xor add mov and jmp outsl js aad mov mov sub data16 cmp fbstp cmp and popa nop loop inc mov cmpsl popf pusha push cld sub das (bad) scas xor xlat (bad) rorb cmpsl mov jne and jecxz add inc cmp hlt xchg stos sbb insl icebp outsb mov push push add outsl or and dec ret xor mov mov adc sarl adc pop out mov mov xchg mov ss clc pop mov (bad) fisttpll ss jle leave arpl jae xor jl,pn mov ret out adc or daa mov outsb scas sbb or jecxz out aas test into mov inc imul dec push mov stos mov push mov andl in ss ret dec add aam clc hlt sub sahf ret arpl lret enter mov fsubs sub dec rorl xchg in lods ret cmp jae pop push pop insl and sub mov jl std outsb das or add stos (bad) js aam js jns sub mov dec sub clc je imul xor push inc dec cmp ret pop mov cmp push das inc sbb and cmc (bad) mov scas sub pop insb pop test imul xor mov pop out test mov mov fs popf lahf mov pop dec jge lret mov sub ljmp dec dec xchg jbe pop mov ds mov ljmp xchg and pop nop adc sahf mov test pushw repnz and cmp lret lret add les (bad) pop mov orl icebp push sub repz lods imul sbb repnz clc xchg mov sahf stc lcall inc ja std adc xchg sbb and jl fiadd shll rol mov roll popa shr pop jp sbb es loope add ljmp mov in add mov jno xchg imul mov je lcall jae or inc rcll xor fildl mov pop pop hlt mov sbb xor adc fisubrl add mov fwait mov shll data16 mov sbb mov add rorb (bad) jle sub xchg jae cwtl or cmc jle das arpl push orl mov xlat xchg outsl mov jns add mov jno in xor imul clc lret lds sbb xor mov dec sbb add ds jnp cmpsl mov shlb jmp or jg imul loop mov or inc cmp mov xchg jl imul push fmul orl ss xchg cld and mov jns or sbb ret int3 ret xchg inc dec xor sbb and movaps push mov and mov fistl (bad) icebp jnp dec xchg fwait aas out (bad) out (bad) xchg jo xchg js stc xor or push xchg lock stos mov lcall (bad) xor mov push jl lret pop mov aas aam test ljmp xorl push scas or jno sbb mov (bad) iret sarl pop mov xchg jne fwait stc jl or mov aaa out xor (bad) or jo xchg dec mov or test mov jb cmp jb es push dec xor lods rcrb test scas dec gs cld mov inc arpl xchg pop and arpl adc and or pushf cmp insl xor jecxz vmwrite ficompl push jo into inc pusha fidivl call int iret sub and push jl pop dec pop sub xchg loopne xor int3 add mov pop add (bad) push cmp clc mov mov ljmp push aam std movsl push pop rcrb popa lcall push fisubl mov cli mov aaa pop fwait cmc repnz mov cltd les add mov mov lret inc or mov fldl mov jge clc sbb push jl dec jge lock pop inc icebp jp pop popf or into sbb mov sbb idiv xor and pop mov stos inc mov push or movsb pop or add mov insl cmp in fldenv and out cld dec dec in ror push jo push sarb adc movsb cmp push jno insl cmp or ja add es js stos sti lock push adc or out add sub daa mov or ja fiadd int3 fldcw sub push insb push sti lods lahf in loope bound es in popf jbe std cwtl push int lcall mov push addr16 aam imul (bad) and push xchg test stos xchg loopne shrb xlat jmp pop pop jmp or push lea enter sar mov add cmp repz mov aad add sbb (bad) jnp sbb xchg ficom arpl and mov jmp sbb cld dec dec xor dec jae movsl fxch or push cs or cmp scas out ds or adc jb sub lods xchg hlt inc in add test (bad) jg push xchg or fsqrt mov call jecxz jnp lock leave fsts (bad) cmp xor mov data16 mov fnstsw cmp addr16 das popf out (bad) mov js cmp fmul push lea icebp push jae test sbb xor xchg std mov xchg mov add mov lods jmp lret mov movsb xchg xchg in push stos push fnstenv ds sub mov mov mov ljmp add je or lods ss fist or mov pop or call imul xor cmp jmp sbb mov out jnp and xor daa jae mov sbb (bad) aaa stc mov lret xchg ret and (bad) xor data16 pop (bad) scas ret aad inc cwtl dec (bad) sub decb cmp lret (bad) notb (bad) dec sub mov loope or lods cwtl pop mov push and cmc or mov pusha test call xor leave sbb jmp jge pop test jle pusha xchg ss movsb test rol fmull lock push jo div jecxz sub mov pop fiaddl mov or add inc mov fnsave mov sub inc push ret inc xlat pop cmp push sub (bad) push stos jl xor lods sbbb mov idivl test push je mov add xor inc pop stos in out rol and cld push sbb insb push pop ret add jns adc int3 notl push sub (bad) add loopne ret mov jae add inc add mov jae in ficoml mov push sbb cmc cs mov add lds jmp aam leave mov mov push mull das mov sub pop outsb enter mov (bad) and mov xchg leave (bad) lret mov outsb in jp mov setno out or or scas pop dec sub jp cmpsl popa subl push add mov fucompp ficoml push ja test fisttpl sbb shr jbe sti fsubrl mov sti icebp in sub pusha add sub dec mov xchg sarl out ja roll testb push decl jae xchg pop inc lret pop xor jnp or iret (bad) rcrl or dec mov hlt push shrl cmpsb vunpckhps pop mov adc test mov mov jp lods mov pushf dec sti and (bad) jne das (bad) (bad) out push bound es push dec stos push sti sarb popf mov int3 ret inc dec inc je shrl jbe outsl (bad) jmp cwtl in pop dec jg adc enter cli push add jge nop mov pop loop int cmp cmp xchg adc xchg inc lret or push inc std pop xor aam jns add lret sbbl jl jb div inc ja lcall in gs cmc rcrl cmp dec mov dec dec aam je dec inc ds lock or dec dec imul lret fidiv push pop icebp dec add test mov addr16 mov les iret fs pop cwtl dec push mov lea or sti ja pop mov mov cmp imull loopne push sbb fldt dec sub xchg sub adc cmp scas or xor das fs cwtl push std sbb ret and cmp sbb icebp out (bad) popa shlb pop inc sarl mov adcl dec dec les mov pop loope iret subl pop pop pop cmpsl xor fwait gs xor subl lods sti in pop and lret pop call int push les sbb stos cmc sahf dec ja stc add add sbb bound xchg ja adc push mov xorb inc nop lahf xchg inc sbb cmp int3 mov es mov gs mov cmpsl in dec jno cmp xor mov adc mov js fdivs mov or push jmp sbb adc outsb pop stc jmp push pushf pop add add dec fs sub pop lcall lods mov or fwait call nop push push ret lds and mov mov mov test int3 jnp cmp insl adc or into push mov lods sub push fsubrp mov or ljmp cltd call add jge inc mov fs inc inc bound xor insb fcmovbe test mov pushw (bad) mov fbstp mov cwtl adc mov jns xor popf push xor lcall outsl push inc jno dec cmp inc mov stos cmp mov sbb add sub cmc mov addr16 sahf movsb bound data16 cli popf aaa (bad) outsl fsts (bad) insb jecxz dec clc xor ss fcmove jbe fcompl popl stc mov je cmp mov mov or addr16 ds rcll lret push lds and jl and (bad) stos jmp push hlt jne inc call rolb stc js mov jmp jae aam repnz into movsl ljmp mov sub adc sub xchg xchg mov (bad) enter scas ficompl jb push push and sub pop stc int3 cs das dec insl ret push ffreep or xlat cmc lret cmp pop arpl xor sbb add sub ficoml call sbb ss sbb xor jg push cmp fsubrs push mov mov das jae mov or pop cmp frstor dec add inc sti cmp lds dec iret inc sbb sub xchg daa xchg push in (bad) pop sbb in xor dec jns subl lret mov int3 xor xor sub jl ret test (bad) mov nop push xchg jo and sbb push movsb ja xor popa (bad) adc lods pop gs pop shll dec iret jno (bad) inc cmpsb jl cmpsb add fstpt push dec int3 popf mov (bad) mov pop push outsb xchg in cmp sub fdivs jl xchg push or call xchg add bound xor out xor in jns push pop sub popf xor test (bad) cmpsl lods or sbb dec iret lea jb std xchg xor movsl shrb pop dec jae pop lds xchg mov adc adc inc jge imul adc lret xchg xchg jecxz out out cmp cs and push into push inc jae xchg xchg out imul mov jle loopne sub push negb int ja jnp adc mov imul adc lea xor xchg addr16 lcall push jno outsb nop roll sbb and aad out les sub out and inc add loop in pop iret fwait mov mov or out aaa aad (bad) fist xchg lods jle das (bad) repz xor fldenv cld pop mov pop dec sti add stos xor xchg inc repnz sbb jl dec (bad) lahf setge xor or stos es adc sub add in fmull sbb cmc cmp mov xchg push lcall shlb xchg jno popa (bad) ja das sbb xchg xlat movsl sbb push hlt lcall and dec sub (bad) test hlt mov add lods cmc movsl pop mov xor mov sbb aad rolb sbb dec xchg pushf or add inc std leave lods jbe dec jg sbb cmpl mov and repz jp mov nop rcr ja rcrb fs push (bad) cmp or xorl movb addl xchg je inc sarl (bad) mov jp (bad) jl outsb mov mov insb add lahf mov jecxz jmp jmp fldcw add add add jno and dec and jl repnz xchg mov add jo outsb and xchg push or or sbb sarb scas (bad) jge sub mov dec pop call fild cs in or mov inc test push arpl dec sub scas jo mov mov mov icebp adc (bad) (bad) daa loope bnd aad mov mov outsb adc in cmp inc stc repnz xor xchg push (bad) popa pushf cmpsb into jge mov gs cmpsb push (bad) jne cltd lret icebp psraw inc lods negb arpl mov nop test inc push loope (bad) sbb hlt push xchg sbb ja push push lods test (bad) or aad stos imul inc sbb and (bad) (bad) hlt outsl enter loopne mov scas cmp (bad) mov xchg mov push in enter push xchg jle cmc add add cmp mov (bad) cmp in call in xchg outsb cmp pop jge jmp inc mov nop das hlt mov inc das xchg cmc dec push jae push pop lea xchg xlat xchg push xchg sbb jg movsl ret pop pop push add push cltd scas or ret push sbb dec xlat cmp sbb in shlb insb xchg mov or mov adc rorb push jmp mov rcrl ret xchg lock movsb xchg cld sbb lret jb icebp cmp (bad) xchg pop sub stos aaa jbe inc dec adc mov mov jge push lret int3 push mov add icebp pop mov adc fmuls pushf adc fs stos adc loop sbb out test jecxz jge je mov arpl outsb jno,pn dec push sub cmpsb and jno xor repnz lods flds les and mov pop lahf mov dec insl and lret les push test rcr fwait xor stos jb inc push movsb repz ja pushf push xchg mov fadds xchg cld pop cli mov jle jb mov xor and (bad) cltd ret sbb lods stc xor out xchg cmovle test cmp sub in sub mov lea push dec call and in dec int3 addl adc jno les inc popf or pop aad (bad) bound mov pop or mov push mov mov inc pop add adc mov lods push lret mov cmp jge jle addr16 xchg fdivs data16 and inc cwtl jae xchg inc lods pop mov xor jle lahf jp pop inc movsl cmp fcoms fsubr pslld or jns pop inc mov inc outsb imul dec stos xor adcl stos mov out aad in mov out and cltd out xor fistpl and sub ss sti mov and sbb aad dec jb aad sahf xchg cmp mov shl mov bound cmp mov ljmp mov jle in aam push scas out pushf ja movsl xor sarb xchg sbb inc mov mov xchg daa xchg push fiaddl test lods sub outsl inc cmp (bad) repnz stos mov gs aad adc test lods jb lea movsb cmp cs xor jbe and xchg xchg or ret leave xor insb imul mov xor int sub repnz add and jecxz addr16 aad xor adc inc je aas (bad) aas fisubrl mov add sahf xchg xor fsubrs dec outsb lock imul testl mov xchg mov xchg jne pop mov xchg ret out idivl out mov inc sbb icebp push movsl push inc mov cmp fsts jp dec roll movsb jg fwait inc mov xor daa cmpsb mov mov icebp insl aas das xchg sub jl aam pushf je dec ret xlat subb or mov push push mov ret inc ret and mov mov fmull mov outsb mov inc xchg das (bad) cmc cmp lock add lods je add fiadd add (bad) fcoml push sub mov sbb and and mov lods lock int3 cmp mov xor jl cmp cmpl sub xchg ret push xor sbb mov cmp mov rol xor or fistl dec bnd push inc call imull jno cmp mov dec sahf mov ja fnsave insl push jns out xchg je dec pop (bad) int inc iret push mov cmc and adc cmc push sbb push pop aaa pushf inc jg and add int rcl xchg mov ja jge in in push call jl sti sub test pop adc clc daa (bad) mov jae push cmc mov dec cmc stos dec daa mov sahf call lret xlat (bad) push xchg out jecxz and les leave test out push jp mov test test movsl in ds mull jno inc push sbb mov fadds enter or ljmp test call es es hlt mov pop mov xchg iret aas aaa ds and xchg scas inc jmp xlat cltd icebp and mov cmp ret ds dec adc xchg pop (bad) stos call jnp into ficomp pop scas mov popa sub jno rclb cmp call pop loopne jnp popf mov pop push sti push pop inc mov in add xchg fcoms imul xor sub (bad) outsl adc mov stos femms push lret jg jl jae (bad) mov lret cmp movsl ljmp dec out pop fisttp dec mov dec inc mov loopne mov js mov daa (bad) divl stos stos fs dec roll rcl imul lahf test es out out imul inc sub add lea mov or hlt mov add adc mov ja call data16 sarl xor or rorl jnp xlat rorb pop mov (bad) jne and or jno pop add cmp mov (bad) fistpl mov xchg push fisttpl push jo or js sbb aas fs xchg xor adc dec mull in lcall xchg out push repz add aaa out stc int aam sub xchg push mov add mov pop xor loopne push mull xchg test mov repz and cmp test jnp and scas xor ss repz sbb adc das lahf sub or iret xchg adc push sub addl dec or sarb int3 int3 test (bad) aas sub pop mov mov inc pop and out (bad) push test scas xchg adc or iret dec xchg cwtl jbe add push stos ret js out test not imul inc push cwtl xchg imul pop pop pusha push xlat xor iret mov xchg xor add sub mov pop addr16 test lods mov lret cld xorb pop xchg shll or add sub sahf jb leave mov jo cwtl xchg hlt (bad) cmc ss loope ror xchg xchg pusha lds jns scas add mov out hlt inc mov les xchg test ljmp rcrb das (bad) push sbb enterw scas rcrl lods sub mov dec jae inc sarb icebp imulb mov ror mov fmull jl dec mov or out push fwait adc gs movsb les shl rclb (bad) sbb popa mov mov stos sbb in sbb (bad) iret dec jnp test addr16 cmp xor loope adc xchg jg xchg outsl lea pop xchg rcrb mov outsb int3 insb dec ficomp mov aas sub jecxz xchg xor nop or dec ret mov mov or sub out (bad) lock pop ja jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc jg add seto xor add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb rcll stc test imul insl (bad) ss cmc fsubr jecxz out cld scas jg pop add or andb jecxz pop push cmpsl cld gs dec mov mov gs jo jmp rep fnsave cmp (bad) fiadd rcr pop outsl mov add pop shrl into push cmp adc sbb xlat mov lea mov ret mov or xchg dec xchg lcall insl jg cld push push xchg jle or adc sti sbb mov adc gs ljmp inc jbe sub addr16 call or (bad) roll xor jecxz cwtl pop mov lea dec cmp dec dec dec in cli mov mull test mov add adc and sbb loope pop pushf xor push sub adc lds dec lcall xchg dec lahf add or push xor mov add test fabs dec int3 std jb mov ljmp mov jae cltd in repz cmp mov notl push pop jle,pn pop in push dec dec scas xchg outsl mov repnz sbb mov xchg xchg push mov add repz pop push cltd xor inc mov mov in mov xlat movsb stos (bad) xchg sbb clc push stos xor jle addr16 dec fmul cmp ret pop lcall lea xor inc cld loope loop mov ficom (bad) xor inc outsl lods dec adc nop mov int roll (bad) sti jb movsb loop (bad) and stos inc push in aam mov sub add stos push in lods mov mov sarl dec insb fiadd movsl pusha lock sbb pop lock rol das mov mov or add xchg push mov jo inc sub cmpsl mov xchg stc adc cmc sbb inc adc jle scas cmp mov sbb sub daa xor and aam outsb sbb clc or pop xorl insl pop mov pop inc xlat cmp into and call xor dec aaa jno mov sbb cmp jne (bad) mov xchg inc das in jns cli (bad) jge rcrb mov mov imul dec push pushl test pop xor out das sbb add inc xchg testl sub add cmpsb xchg or in sub or int3 mov mov or fisttpl inc repz daa stos rcll jo fstpt lock imul (bad) repnz or dec push sbb bound jl adc call stos jbe inc xchg frstor cmp out (bad) and mov dec adc cmpsb mov pop das pop pushf test test das xchg dec int sub stos sub inc movsb xor pop ja out das and or enter out ljmp stc loope in fwait fs sub ja and (bad) and push fwait lcall mov jb inc aam mov jnp cmp into data16 jmp sbb inc int rclb adc (bad) test lods rol or loopne xchg fisub sub jg push cmp out push ds fcmovnu inc or xor insl jecxz pop push jnp push xchg mov test jmp mov or lcall xor cwtl sti sbb mov adc rclb sti or adc insb loop loope xor je inc inc (bad) outsb test test push aam adc push movsb outsl in mov bound test mov cltd mov sub loop push lea andl popa pop hlt arpl xlat dec xchg les xor cmc mov jb and mov negb shrb in fcoms jae std jmp xchg inc fbstp dec into pop xchg or dec push inc push mov cs int sub sbb (bad) mov js cmc and movsb in fnsave push (bad) jno loop xchg cs mov xchg in divl movsb add pusha lock data16 pushl sbb outsl sub lods lahf mov rcr mov dec nop and inc test inc xor jno inc (bad) ljmp (bad) das push cld pushf stos leave movsb stos sbb jmp divb adc or sub mov jbe mov push push cmc ljmp jnp hlt mov mov mov lret mov (bad) mov jnp in pushf (bad) mov in mov sub imul nop mov enter cmp loopne inc pop mov cwtl testl lods mov into pop scas push stos push pop xor mov push push popa pop mov xor stc pop subl iret sbb icebp mov mov sbb pop xchg mov out insb inc add pop xchg shlb scas scas rorl jnp add adcl loop ja or lock shll xchg negb mov hlt mov sub pop cltd fcoml push lahf and xor in cmp inc jno testb outsl out mov jle addl mov inc cmp cmp xchg cmpsl add inc add inc and push adc fucomip sub push mov adc push push imul mov out sub xor movsl jg push aad push addr16 in popf lds lcall dec scas cmp (bad) rorl call mov jbe out push lods fidivr or loopne push cmp (bad) or into add notl sbb and loop lds pop scas mov cmp mov cltd ljmp xor pop pop bound lret jge xor sub xlat sbb les cmp lods sub test xor enter popf cmp adc jne dec cwtl mov in push mov enter aas mov cwtl push pusha cmp out xchg es xchg testl xchg push mov (bad) imul cmc push xor stos sbb lock nop nop or bound test or sti sub inc inc pop cltd mov in repz lods out add test in mov lods cmp test test andl (bad) and cmpb std cmp test scas jmp fs in sbb push adc mov dec sub add aad mov mov pusha sbb mov push test mov and mov or rcr mov sbb pop adc mov cld int3 dec lock icebp mov insl fwait cs and pop rolb test push and and loop inc ja popf adc fmul stc loopne xor mov rorl addr16 mov jae and mov call cld test in ss das mov lods stos test and in scas adc mov iret dec sbb fistl xchg rcrb mov mulb stc or insl mov pop or sarl shrb xor popa in mov push mov rcrb jbe imul jl fwait mov inc sbb sbb inc mov xchg clc pusha lock sub push ljmp into adcl and mov enter lahf jecxz jmp ds dec add mulb mov aam or mov repz lock out (bad) mov andl push dec lahf imul ljmp adcl pop sti stc fsubrl rcrl das xchg jl jecxz mov scas dec push mov jo pop sbb lock (bad) repz adc add xchg and imul dec popa cs and enter and mov js push jge cmpsl call lea fdivs cmp pop les in jae cld push xchg jge cld fwait jb xor lret inc and out add rorl nop xchg and inc jecxz out cmpsb insl push ss pop mov sbb mov xchg pop xor jnp or lcall in push mov fadds arpl call add mov mov scas xchg mov (bad) aaa das jo ficompl outsl jne mov adc adc xor cmp fistpl inc jmp pop cmp lret cmpsb call cld das jo pusha insb pop xchg dec fisubl and adc inc mov repnz lods out mov jle cmp imul mull sarl mov sbb sbb pop and das scas (bad) mov jb pop aam and cmpb jne sbb out xchg cmp push inc jnp mov jg hlt enter mov fidivl push (bad) fisub xchg adc dec inc clc fcoms pop stc adc mov stos mov xorl mov (bad) in mov stos and fwait mov jbe mov sbb xor jns mov pextrw popa pslld fs xor xchg rcrl sbb push mov xchg bound jl push pusha out jb outsb xchg jno push add mov adc mov push push outsl and and cld aaa dec dec scas ljmp ret stos xor iret imul fs lar jne cmpsb stos jmp pop ja popa push pop loope mov fld1 xchg repnz sbb lods mov pop loope (bad) mov cmp sbb pop jmp nop rcll add lcall push dec in scas xor fstps push lock enter adc mov and clc sub mov mov sbb hlt inc insb pop push sub pop lret imul sbb adc jne aad (bad) and hlt mov stc push push icebp jmp fwait in cltd mov mov std in (bad) (bad) (bad) pusha jb pop sbb int3 mov (bad) and xchg jle mov push out mov popa sbb xchg xor sti jno and xchg dec repz pop pop repnz pop cmp fbstp cld dec lret ss jecxz inc fs cli lock or inc bound jg ss in mov and sub mov jle pop clc lock lret cltd add add loop (bad) adc dec mov inc in ja lahf adc stc dec push xor stos jle dec bound nop aad pusha (bad) adc flds addr16 enter inc and rolb jmp int3 lahf pop mov xchg mov pop pushf aas icebp sbb inc (bad) xchg mov cltd jecxz xor out pop and je gs inc xchg inc jnp inc sbbl stos push roll setae sahf fmull push inc xchg es dec mov sub and inc push xchg dec lods ret mov fldcw lods int3 cmp dec dec je stos dec divb sub movlps enter push or xchg pushf mov jmp and std mov scas mov or inc out mov mov (bad) mov in push roll sbb imul mov stc (bad) ss add (bad) pop cltd push mov mov sub and jbe push (bad) and cmp popf xor cmc loop mov flds add popl cmpsl and lret dec das repz call aad mov mov imulb mov xor les jmpw cs (bad) repz sti cmp mov xor xor lods mov sbb sub fwait jg mov xor inc mov outsl mov and rorl lcall add int3 (bad) aas dec xchg inc ret out aam cmp cmp int inc and (bad) cmp xor (bad) es add lcall (bad) (bad) xchg sti aaa cmp popf mov lods xchg push js fmuls loopne es scas leave sahf shl aas pop out sbb cmpsl std xchg add inc cmp (bad) in daa mov xlat psrlw sahf out stc push mov outsb (bad) mov cmc test sbb test or inc repz sti sti mov sub mov (bad) mov push dec in js pop iret imul push ret xchg adc mov push xchg jo repnz repnz lods xor (bad) jno pop sbb dec add (bad) push loope lods test mov lea (bad) push mov adc sub mov dec xor inc jnp dec pop push push aaa pop jbe cli dec sbb mov mov push rorb lods test (bad) bound out jge mov cmp inc and imul or stos add cli adc in out add test dec and loopne fnop push inc cmp push push xchg gs ss add in jl inc neg fiadd lods cmc adc (bad) mov (bad) xor rcr jge sarb mov pushf lods mov mov cmp pop cmp mov mov in in repz pushf inc sub jb add stos mov adc (bad) push rcrb pusha test arpl adc das xchg mov cmp pusha inc aad xor rorl push jno and in push loopne push js sub into loop and mov jecxz mov lret dec adcl lret sbb rcrb lcall shll mov cmp cltd pop stos loope hlt adc bound loopne jno data16 lret xchg inc add xchg aad inc xchg adc aam jo sbb (bad) mov stos cmp daa (bad) (bad) xchg fwait push mov adc sbb ret cltd lret mov negb push inc shll xchg add aad clc aad mov mov inc add repz push lret or adc popf cmp sbb jmp jb movsl adc xchg add mov pop ja jmp daa dec je add jp in pop or std pop in aam fildll adc std repnz push aaa pop pop arpl jae hlt fdivr jo sub add fs ss imull ljmp je and cmp pushf push pusha addr16 cmp sbb pop pop or fistp jae pop sti fistl or decl inc (bad) push jl xor ret shrb fsubrs iret js sub cmp push jb adc mov jae and ret mov xchg mov mov mov ss push pop nop gs dec mov dec int3 sahf mov sub repnz jmp insb call ja (bad) jecxz test repz lret sbb pop inc lock sti inc stc push push xchg xor pop and sbbl jne (bad) jne cmpsl push adcb rolb cmp test sbb aad fiaddl and mov or and and lcall fisttp icebp or out test dec dec lret mov aaa rclb rcr inc xor nop xchg jnp addr16 xor (bad) cmp xchg and out daa mov lea inc or xor sbb fidivr dec cmp daa inc dec sbb pop adc cltd push mov stc outsb sbb add int3 cmp cmpsl pop push mov aam add lret sbb loopne movlps js aam lret ja inc inc mov test push cld xor and xchg ret pop sub test push divl xchg add insl mov mov add mov dec cmc enter push sti aad dec arpl xchg xchg and push pop gs (bad) sub pop mov xchg mov int3 push cmp inc gs or or scas into mov movsl or popa pop (bad) jae popa push insl jbe or loop popf fisttpl pop sbb fcoms cmp pop xor icebp inc daa rcrb mov (bad) std popa lret dec xor cmp fdivs sbb insl xor adc jmp lahf push in jbe sahf pop ficoml outsl sbb sti xchg lret mov sbb xchg addr16 imul cmovge jl push test cmp fdiv stos mov cmc popf ja sbb inc push xchg add inc push mov xor jge dec (bad) fisub scas xor je sbb addr16 sbb xchg leave and mov mov push or jne add jecxz in jne cmc repz icebp xchg sub mov pop or jns mov xchg jae push call sbb cwtl mov lods jge ds pop lds jmp ret outsb adc xchg push (bad) ret inc test mov frstor sub aad jg dec popf mov and inc jo in pushf add (bad) push pop xor cwtl pop inc cwtl cmp lahf mov iret addr16 rorb jo fistp ficomp decl ficoml je xchg pop in sbb jb jg adc popa and pop std fdivs adc movsb out leave cmp cmpsl repz ret dec pop rcrl pop dec and icebp mov or add dec lods out das repnz test adc push mov pop cwtl sbb rol sbb xor and addr16 lods (bad) jge sub mov icebp fldln2 mov scas jl inc dec cmpl out mov loope ljmp xor sub and les add imul roll pop ret clc clc and adc jbe hlt fidivl mov in ljmp test pop hlt cltd insb push add jmp jp dec jmp out je cmp pop clc add and cmpb sti rorb sub jge pop sahf out mov xor jbe push scas xchg insl dec ds cmc sbb inc mov ss cmc cmp adc icebp mov sbb (bad) sahf add std lcall mov sub cmp jns adc lods je or push xchg adc mov adc fmuls call mov mov stc mov lcall sbb insb insb and and mov imul and stos mov gs or mov add inc scas sub scas xchg push dec mov mov andl call inc sbb in (bad) add lret mov pop pop xor sahf xor sub push addr16 add jg and pop stc faddl push popa ljmp and sub and outsb push xchg pushf das mov xor or insl inc sahf sub sbb add jp and jae xchg aam pop inc push repz cmp lret dec inc cmc xor addr16 jmp push fs mov aas aaa jg push imul decb and jo or mov sub jl das aaa adc pop mov push mulb xor push int3 imul icebp adc cmpsb adc (bad) mov cmc dec xor imul aaa (bad) mov push pop in push and pop movsb and rcrl mov popa dec cmpsb dec and add and in cmp jnp scas (bad) loopne push loop leave pushf xor inc mov push or mov fxam aam int mov jnp jecxz pop fild or and mov test arpl or cmp cmp add in cs dec sbb push jno stos pop cmpxchg lods out scas out pop popa repnz push xchg sub lret jae scas lods mov pop outsl and cmp mov dec mov mov cmp dec bts clc loop and pop iret adc jo pop outsl (bad) mov mov xchg negl out fs sub fneni(8087 or mov pop add pusha pop dec mov xchg push test add push jl repz fs cmc pushf mov dec mov shrb push jne pop popl inc lods enter add (bad) jno lds imull xor fs sbb icebp fidivrl mov mov sub cmp cld aad push ror xor outsb xchg cmp sub mov mov fcmovbe test cmp faddp sub aas cmc mov pop jecxz std es js adc ljmp in out (bad) pop jno xchg adc mov inc int3 jg imul enter test mov cltd lcall mov dec or jno loope xchg (bad) out xor jp scas and xchg xchg pop mov in imul inc cwtl (bad) ret ljmp ret jle jl cltd and js iret or and cmp sbb sub lcall rcrb loopne and pop cmp or mov fimull or xor mov dec insb sarb imull push outsl push jne cwtl cmc enter mov cmc pop mov sub sub pop int mov pop nop loope mov sub outsb aas ds stos push inc aad add inc insl (bad) cmc and pop ja mov aad (bad) iret leave adc fdivrp out push test jle fdivp push mov inc fbstp xchg push add pop pop jge fstpl pop lret xchg pop cmp sbb lds inc push push adc mov xor push test js int3 cli mov push nop lret int ljmp and loope int jne,pn clc jmp iret add inc push sub les loop loopne out stos cmp sbb movsb repz jo insl pop pop scas adc sub push loope cmp rol jmp mov test dec addr16 sbb pop adc jmp out or pop fwait loopne push xchg pusha or mov stc icebp lret ja mov mov fstps push pop or addr16 popa popf fsubrp das into lret mov imul fildl sub mov mulb add movsb outsb test cli icebp call loope adc inc popf and popa sbb (bad) call (bad) cmp push push dec and out (bad) in sub iret push adc jno sbb inc fisub mov hlt sti push in js cs mov adc sbb out repnz pop pop dec pop aas mov out out mov xchg jbe cs mov push cmp repnz mov into or shll push repnz push repz and xchg mov and mov cltd popa mov pusha (bad) xchg or xor popf nop sbb inc or cmp xor mov imul mov hlt inc xlat movsl jne adc add jb inc inc adc or pop fdivs inc mov xchg (bad) sub cs insb js addr16 lea int rclb inc shrb sarb aam adc lcall or and sbb push lods sub push push dec imul mov and pop xor push ja pop mov out dec lods xor pop in dec rclb ja imul and sub das mov repz outsb dec testl mov dec pusha jge inc pushf daa xchg inc cmpsl movsb popf lds mov dec fiadd xchg cmc push shrl ret sbb sub dec icebp shrb sub xor mov arpl std cmpsl xor popa pop fildl dec inc push rclb add lock (bad) ja xchg push push rorb aad addr16 mov inc sbb inc out fmull mov ffreep and adc lahf test insl outsl or xchg bound in inc adc cmpsl hlt inc and jns xorl sbb stos icebp (bad) mov sbb pop pop gs shrl stos push or outsl add mov test pop lcall fst push scas xchg jo inc xor adc js jge movsl jno cmp loop scas data16 push pop xchg sti xchg pushf insb rcrb nop rcrb jg or cmc cmpsb and mov pop (bad) mov mov pop repz shll lcall out and shr and xor test push inc adc (bad) (bad) push adc push add push jge jl add stc pushf mov jge mov mov or cwtl mov leave adc (bad) mov push negb rorb mov sahf adc add sbb (bad) stos pop cmpsl jns fidivl les mov into in xor or push sub fwait mov mov cmp push fildll pop or lea cli sti dec imul adc jmp xchg and idiv jnp cwtl mov in rolb shrl lret jno repnz mov xchg in mov xchg addr16 negb pop push pop push xor hlt or leave mov in je loop push in cwtl inc (bad) aad xorl push cmpsb sub push jns and add add jae cmp lret rolb dec lea add cmp mov pushf or adc adc gs lods scas lea pop xchg jl out mov dec enter or sub mov mov (bad) sub sbb jns push adc jg outsl xchg xor hlt (bad) fucomip ds jns dec or bound mov xor bound daa add repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas ljmp cmp cwtl mov (bad) sub add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg xchg in xchg mov (bad) mov pushf mov jae mov gs dec fistpll (bad) sti pop lds add jo add sahf das addl and roll call insl jbe sub and add cld ljmp push mov inc jecxz mulb cmp adc rcr divb clc dec push loope das mov mov leave push inc dec pop jbe out enter pop push add ss jmp sub mov fldt xchg mov rcl add nop leave (bad) and dec repnz push fldl2e in jnp jg outsl (bad) iret cmpsl das fldcw lds ss mov (bad) test jmp outsb xor lods rcr add nop and inc jg (bad) iret jae hlt lods nop cmp xor pop pop xor fisubl xorl test aad inc test mov xor cwtl aaa out addr16 and out sub scas dec loop loope push lock jle mov pop xchg adc in in sbb arpl into dec cmp xchg push mov data16 popa sahf out in cmp mov movsb mov jnp push ja push sarb out outsb rcr movsl cltd test jns jle cmp cld fldenv push sub rolb adc and aad mov cmp bound clc cltd repz jp xor mov cmpsl inc imul les dec mov jae ss mov add add add and stos jle and cli sahf sbb sub rcl enter fisttp int3 inc push cmpsl mov sub movsl mov and pop push hlt fwait pushf push outsb sub movsb and fsts push out xchg sub or out xchg mov scas sub insl inc and mov mov je add int3 pop inc pop dec sbb lahf push lret rcrl push loopne fnsave dec jns xchg or mov lcall mov and fsubr (bad) cmc cmpsl xchg inc outsl cmp push sub mov mov or (bad) in loope loop icebp sbb repz insl mov sahf xlat out push and pop stc push mov ffreep add lock dec inc or mov xchg fs mov frstor mov push mov lods mov movsb push cmp xor lods push or shlb xor fsubrl stos iret pop pop icebp or leave psubusw jmp jle adc dec sub sar int3 mov sub and clc enter mov nop or xlat sbb or cwtl cwtl in icebp imul mov daa aam adc adc mov jle daa dec sub adc mov pushf and push pop cmpb arpl lret pop xchg jg,pn mov jmp iret popf mov sbb inc xchg mov test sbb stos int3 mov inc and push lahf arpl inc xchg fdivs mov ljmp mov popa fwait jnp stc nop int in jo xor mov daa mov xchg jne xor sub das mov pop in cmp pop ja jae and or push hlt cmp fs cli sarb dec inc dec jle push xchg jecxz pushl push push paddsw xchg jo cmp jae cs push popf bound insl xchg or aad push stos notl out fsubrs lret scas (bad) push mov (bad) sti lahf xorl push pop jle jno push test xchg inc fwait outsl out data16 jne (bad) adc push iret cld in loope test lods inc pop inc dec test aaa sbb mov or hlt fs dec ja or jp pop imul loopne adc xorb pop and cli movsb xchg mov xchg adc mov out push jge xchg add out das push pop push xor dec pop mov mov insb cmp pop cs or or cmpsb test mov push lret hlt lcall xchg inc cltd test dec (bad) dec js stos jmp xor insb (bad) aad mov (bad) cmp (bad) push mov test mov sbbb jno sbb inc dec pop stos pop movsl mov xor or fnsave fsub xor out cld cmc mov ret pop sbb mov mov cmp inc pop lret sub jmp mov adc call jp js icebp in and cmpsb and pop xchg add dec loop lods out mov jae mov sub push movsl in inc pop push rcrl adc aad jle andb mov dec aaa mov out adc and jbe and fs cld dec dec movsl add call pand mov pop icebp mov cli (bad) ret ds dec loope dec push inc xor push sbb adc inc or daa dec or xchg or test pop xorl ficom in mov jb cmpsb xchg and jns xor mov mov aam push and imul subl leave gs sahf mov in lret loope mov add add add lret cmp cs dec sar xchg insb sub push das arpl jns js es adc fwait (bad) xor cmpsb jo pusha xchg in sub jae movsl cmp ja icebp popa bound movsl inc lods cmpsb push dec dec cmp dec inc cmp adc add xchg movsl sub inc dec jle addr16 lock pop loope dec cwtl cs nop stos jb dec (bad) pop sti cmp xchg int or jne xchg push lret out test dec in xchg and push jl adc pop fstpl loope jle ljmp stos sti orl divb push jo ret enter add mov cltd popf pop jle imul insb xchg das dec mov xor or mov lods ja (bad) sbb push lret jnp je push and fisub (bad) stc imul dec cmp mov ss xchg lahf jmp mov fnstcw rorb push out scas stos push inc sti rclb mov int3 arpl and cmp frstor sbbl mov mov addl push outsl popl cltd mov or insb imul (bad) int inc pop orb add jg outsl jge imul shrb mov jge je dec pop (bad) jge loopne and test icebp gs sbb jecxz,pt xor jl mov rcr fsubrs iret gs push pmuludq out repz (bad) aaa sbb push fwait ja adcb mov jmp xchg pusha lcall iret bound (bad) (bad) cmp mov push test xor mov push xor loopne jecxz or (bad) lret jmp dec outsl xchg test stos test (bad) mov adc jmp mov repz popa fmul xlat sbb fs bound les jecxz pop fisttp fbld bndstx aas (bad) jne sub aam rcll les incl mov xchg addr16 mov push add xchg pop popa in cltd repnz mov push ds and cld xlat pusha arpl mov in jo fs stos jo mov mov sbbl mov push mov test mov xor sti outsl les mov mov aad adc dec jmp popa sub sub insl cmp das js inc hlt rorl lret ss (bad) aam mov (bad) sub xor inc add push cmovo sbb rcr or cli (bad) push test insb enter cli aam xchg xor jne jl cmp dec xchg dec aam test push test stos arpl mov repnz decb out cltd push imull push mov les fistl dec fwait cwtl xchg call movsl shrl push inc data16 sub xor xchg pusha ljmp cli das clc sbb scas adc or in out xchg ror xchg pop movsl inc js adc cs pop fs pop enter xor xchg leave int3 mul xchg lahf ljmp mov jg loop inc cmp jbe daa dec lea pop arpl ss pusha lret xlat sbb mov addr16 or jl outsl mov pop xchg (bad) scas into imul movb outsl xchg (bad) or into sbb nopl ret mov aad jg pop daa cwtl mov adc inc inc xor push pop xchg ret jl push sbb notl fs and or xor fild jge mov loop or inc movsb clc cmc or inc jl in mov push cwtl aaa pop icebp and sahf fs push gs push xor jb pop cmp xchg pop mov jo out push or mov aad insl stos inc shl jle shl sbb xchg add mov inc clc (bad) imul ljmp dec add mov mov stc xor cmc imul pop mov das (bad) jnp push mov loop pushf mov jmp or icebp seta and mov adc xor mov mov jge lea mov lret lock mov incb jecxz and push popf mov and addb ret clc mov outsb inc sub add cld fcmovbe sub (bad) sbb dec daa icebp mov xchg cmpsb inc popf add pop inc xlat dec dec shll inc sete (bad) xor iret push jecxz pop test pushf (bad) adc insl mulb jle sti xchg cmp pop xchg jnp xchg cld fdivrs ja gs sub or lret cli mov ret loop sahf mov test adc loop daa add inc (bad) and ja sub pop test inc dec stos xchg add jb xchg push orl imul lods out out (bad) pop push cld xchg push mov push inc pop xor add rolb pop aad cld inc ret fbstp insl inc jl mov ret clc fwait std fisttpl enter shrl rcrb push dec out and xchg insl repz divl sbb cmp ljmp pop xor xlat int (bad) popa fistl cwtl xor fwait loop cs mov daa dec jg (bad) cmp adc sbb lds iret push addr16 mov in xor rolb out (bad) stc adc and cs daa mov mov jmp ficoml jg mov in cli test mov jecxz pop cli jmp mov xchg inc jns xchg repnz pop jne jo subb push mov fdivrl in out cmp pop mov or fs mov aam xchg inc lcall pop and dec push iret jecxz adc mov sub cmp lock jbe dec mov mov clc sub test sub popa mov pop push or push shrb jne xchg adc outsl (bad) icebp je jge addl xor ret in sbb test adc push roll lock test xlat lods test jne add out xor fwait popa setns ror int cmp das inc insl inc sub inc xchg popf jo adc fnstsw cmpsl pop cwtl pop mov rolb xchg adc dec fldt cmp and jg adc fistpll jecxz jecxz ds jp cwtl push (bad) ds pop sub pusha jl popf adc and lods cmpsl cmp lds loop xchg and aam jle jbe bound popf add outsb sbb dec or sub sbb rcl sahf cmpsl mov pop pop sub pop shll sub test mov fnop push int sub sbb scas sbb xor or fldt stos mov xchg js push setge jbe xor jmp popa idivl mov in mov mov lock inc push pop and cli or ficoml cwtl push sub push push xchg xchg insl push dec imul mov dec js jl inc xchg fnop push js leave (bad) and cmp push xchg adc sub sub push cmp jmp out xchg outsl cmc test ret aam xchg jge mov pushf and push aad repz cmp or inc roll sarb jns test inc adc pop mov rorb cltd adc movsb add stos test dec cmpsb test pop popa outsb dec dec xchg popf pop es stos dec int3 xchg mov mov push testb cld dec adc test sti mov xchg xor dec xchg pop test negl fistpll push jp das test insb outsl (bad) xchg mov and xchg mov sbb lods das sub mov or lock (bad) sbb pop mov shr push inc mov dec jb mov push pusha repnz mov test sbb mov pop into loop stc jmp sub xor pusha punpckhdq mov dec sbb cmp pushf xor insl or jge xchg jp mov cltd repnz lods js fstps imulb mov loop jmp adc das cltd lea inc wbinvd pusha push mov xchg mov lret xor pop pop mov outsl cmpsb data16 fnop fcoms or rcrb push daa and push mov jo ret pop mov jge lcall fmull xor inc cs aam iret leave iret or imul push mov pop loopw push sarb lods xor aam pop sub sbb daa into sub inc stos es addr16 mov pusha xchg xor mov dec enter sub shll jp adc test daa xchg pop cmp in and iret repz pop jnp push xchg (bad) hlt inc out jae mov push and mov cli push fisubrl bound (bad) aaa inc (bad) pusha loopne arpl xchg mov dec mov sahf js push out or push jbe mov cmp cmpsb sbb adc jle add sub mov jecxz out loope adc int3 jns xor aas push scas push jnp call mov mov sbb (bad) xchg mov imul and jne jne fiaddl pop sti rol in pop lods pop rep xor and out ljmp stos cmp mov fs xor icebp nop push and inc scas pop jecxz mov pop out outsb rcr (bad) push sar hlt xchg dec or jecxz call repz mov mov in or jle (bad) xchg cli lret or (bad) lods es cmp in sub mul ja push jns mov inc xlat pop mov lret adc sub in (bad) push sub adc sahf mov xor cmp stc fbstp push cmp fcmovu mov sub sbb (bad) sbb or inc xchg push jno push sarb pop imulb mov and inc xlat leave insb lret iret pop inc hlt jb xor divl stc inc ja scas iret or xchg mov inc stc aas cwtl addl mov cmpsl js mov sbbl cmc xchg int3 jo jg cmp fs daa dec add xchg jmp cmp es pop pop cmp add out loopne pxor bound mulb and lahf fcoms pop leave sub movsb (bad) out (bad) and and cmp stc daa fs call jl fstl dec or stos sub out inc xchg std add (bad) mov push pop out dec adc jp int3 daa in (bad) fwait or jmp movsl cmp imul lds mov push bound sbb (bad) fs lock stos or and std (bad) and dec ljmp xchg (bad) pop nop jo insb mov jne jp stos scas xchg xor and movsl mov xchg mov sub mov inc cs popa jge cmp ljmp lods lcall add stos jecxz xor xor pop mov js mov loope xchg test sub clc mov movsb enter fwait rcrb bound lea pop jns or xchg pop pop stos mov das fwait sti mov mov cmp push dec cmpsb outsl rcrb inc jge xor inc out outsb decb push dec pop cli mov dec clc int add add mov ret inc in dec stos mov sub xchg outsl cmp pusha or sub mov adc dec sti xchg ss in enter mov rcl mov push mov mov out insb into std jmp ret (bad) scas ror inc scas fcoml cmp gs add xchg roll or jecxz pushf lahf insl cwtl pop push adc popa cmpsb aas cwtl int out cmpsl out data16 hlt pushf pop xor fstps out and jae mov and leave or and mov adc add addr16 push ljmp mov xchg notl call push xchg (bad) push cmp inc mov int push or adcl add stc pop mov out lds mov pmaxub xchg mov xchg ds jl mov mov push nop scas mov dec in rcrb inc (bad) jno sub cwtl jmp mov pushf pop xchg jnp sub push push inc xchg jl loope adc out push shr mov xchg pop (bad) loop mov popa inc mov stos lock mov stc sub daa cmp adc cmp paddsw cmc bswap out loop adc xchg in pop mov cmp mov repnz jbe (bad) mov mov dec mov fisttp jg scas adc mov push mov icebp push cli and pop inc out clc dec mov dec inc sub cmpsb lock pushf cld and mov push cmpsl lahf adc rol lret mov push pop xor mov jg pop adc add stos aas sti jecxz or mov idivl add mov mov and sbb push (bad) into lret mov jle pop mov outsb xchg and repz rcl jp xchg jne daa sbb push popf xchg or mov jmp pop and nop add mov ss imul loopne cli xor mov cld add jb scas and pop pushf out imul idivl and mov jae loopne adc ret shrb jns ljmp xor dec dec rcll xor (bad) lret and adc adc xchg es icebp addb mov pushf pop (bad) out adc es mov pushf (bad) repnz rcll inc inc rclb xchg and cmpsb testl xchg dec or stos xchg xchg les gs mov and loope push dec dec mov mov rcl rol (bad) rcll jp loop inc mov fsubs andl ja je mov xor pushf and aam mov push mov outsb xor xacquire andl jns xchg mov sub mov pop pop ds cli test fs sbb pushl cwtl hlt int3 xchg or imul pop imul lcall jle jl and pop scas fdivs out lret cmp lret cltd pop push orb cmp test push mov fwait push cmp cmp sbb cli (bad) imul (bad) out xchg add loopne ja xor jo adc xlat mov in jecxz adc cs dec imul nop roll mov sbb mov data16 mov test movsb stos jmp dec sbb loopne popf xor sub out add (bad) int3 xchg jae outsb mov push repnz jl pop ja inc jns cli js ds cld lds in jp inc movsl aaa inc inc stos (bad) fs jmp call into mov mov adc popa and xor hlt iret pushf nop fsubr aad sbb pop divb sbbl or add xor mov icebp pop push jo in dec aad and loope sbb sbb jb daa lods lret std jg jecxz sarl and call out mov sbb push mov cld insb daa out cmpsb adc sbb movsl test mov mov pop and sub je mov jae ret scas fsubrs test and pop mov (bad) cld (bad) out xor mov into pushf mov mov test mov test push mov insl bound push in and dec mov lods in addr16 or xor fldt mov mov pop fistpl lcall sarb inc xor cmc negl clc xchg add push fs sbb xchg lcall xlat hlt mov mov fldt (bad) out adc push jge data16 lcall lea pop les and push xor mov cwtl push dec mov jne inc flds jnp (bad) mov adc nop (bad) jb adc jbe sub insl fmull loopne mov jmp clc (bad) sbb aas mov aad loop adc mov dec mov in adc imul lods sbb icebp stos and pop cs cmp (bad) mov mov loopne jne jbe xchg adc jp sbb or push fmuls movsl ds mov inc popa pop hlt dec js dec daa daa push mov push inc and jnp ljmp xor fild mov outsb rcrb push out xor inc (bad) ret inc xchg xchg in sub push fadds insb rcll lcall rorb dec jge inc and sub mov xor mov mov fs xchg pop mov or into mov out push or mov jg test mov mov fs xchg sahf and ret (bad) icebp push (bad) mov xlat cld test add test push pop repz cltd addr16 mov push lods cmc dec fidiv cwtl mov (bad) mov lahf jae sbb inc xor (bad) neg outsl xchg dec jle add jle mov ljmp adc ror (bad) ret and addr16 pop pop cmc and out mov push cmpb stos dec mov xor push ljmp jmp adc xchg je mov xchg fwait push lds mov sbb cmp jg insb cmp sbb mov clc or ret dec push loop adc adc scas add int3 test inc xor scas add jb xor dec mov je jo xchg xchg cli outsb sbb add (bad) sub adc inc fs jnp mov sahf xchg (bad) jno sti fcomip adc mov xchg psadbw cs pop cli jns call les pop xor (bad) sti lds sub cmp mov add push mov mov or (bad) lret sbbl pusha xchg ficomp jmp cmpsb fadd inc push mov dec les loop pop xchg (bad) inc repz insl sbb adc push scas cmpsl incb fisub sarl xchg and push iret cwtl jg mov scas mov das adc or dec mov inc ficomp icebp or jbe sub or popa fsts test sbb mov fadds fcmovbe subb mov mov push popa iret daa insl hlt fs icebp add icebp lea or rcrl test xchg jns divl add bound movsl (bad) add xchg xchg movsl test or (bad) out sub mov in fisubrl push jge rclb push out flds daa ret cli push lret lret push dec sti aas pop bound and jbe lea popa cmp call add xor testb jecxz fwait ja rcl lret orl std mov sbb inc aaa sbb and call aad insl lock push in paddq cwtl push push and ljmp push dec fwait sbb and push (bad) dec push dec out sub ss mov repz or or call add shl cmp (bad) jmp (bad) enter ficomp pop xor xor xchg or cmp jecxz xchg add hlt inc stos cmp fldenv push pop dec push cmp shrl mov idivl aam rcl mov push or sahf mov nop xchg lock mov cs rol inc sbb mov mov push arpl xchg ret mov fsubl jmp ss pop std sti pop lods rcl sub pop adc cltd and cmp clc and adc push fnstsw (bad) repz cmp xor (bad) adc rcrb in xchg mov lret mov mov cmp push sub sbb mov jo lods mov nop adc shll rcr cld adc in loop mov pop mul (bad) mov push push arpl (bad) push mov xchg outsb sarb lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add pop mov jae mov dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsubs add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add stos xchg mov arpl lods fstpt fcmovnb jb fistpl (bad) std push out out stc adc add in add add add cmp clc mov imul daa mov pop push mov in (bad) mov push cli or fsubl sub notl fiaddl mov xchg pop push push (bad) mov lds fbstp inc adc (bad) xor cmc xor sub lods xor das movsl outsl cmpsb push dec push jle and cmpl sub aas cmpsb jnp fadds cmpsl jle push cmc sahf push int3 stos loopne mov mulb test pop fstps outsb loope arpl ret orl mov xchg dec sahf sub and jmp repnz movsb mov push movsb sbb dec mov xor hlt dec sub dec stos jmp cmp mov (bad) add lods jg mov inc hlt test mov movsl cltd movsl mov jbe dec mov xchg icebp fptan mov cmp shr sti sub es xchg xchg push or lcall and sub cmp cltd push add outsl test fisttpll popa jno aaa in arpl lods aad cld outsl nop push dec divl inc out ret pop mov loopne lds add gs fidivr ljmp gs sahf fs push push inc xchg jmp (bad) ss mov fxch cltd test xlat jns cmp lods loop fsubs sub icebp shrb in inc in pop inc mov or nop mov lods jns test push call icebp mov out adcl jno mov dec movsb setne push cmp (bad) outsl orb pop jno mov in stos jle jae fs sub call or pop mov test btc push mov stos hlt mov pop into xor in adc push sub hlt adc cmp jl pop xchg mov mov or push mov lcall popf adc (bad) xchg push mov shll mov subl ss sbb popf cmp lret pop sbb push gs cmpsl pushf xchg stos pop sbb lret aaa and pop loope sub out shrb push sbb push jmp push call pop inc lods arpl daa add aam or test jle xor add sbb rep pusha adc xlat jge push push fcmovb les lahf lds scas iret xchg mov xor jne add fwait mov lock ljmp mov ret dec imul jnp,pt imul daa push fcomp xchg aaa int3 xchg pop sub and adc fnsave pop jp fs and lret jb dec xchg int cld dec jo lea cmpb cmp adc paddsw adc mov jns cmp dec aam inc int3 push mov add inc mov xchg or mov add int bound aad cmp inc pop sub aas jp nop int nop in aas outsb mov mov test test push jae pushf mov push enter and clc cli gs dec call xchg cmp fldcw pushf shrb je sbb adc repz dec add lds xor push xchg and mov subl repz push mov inc div dec scas icebp incb sbb enter (bad) in mov push push andl mov fwait scas ss arpl ja jmp xchg inc sti in dec ja (bad) rorl jnp mov aam pop inc sub jnp xchg ficompl xor xor xor pop popa jb hlt sbb lret or adc adc push lds sbb decb jecxz mov jno push mov sbb (bad) xor out mov add in cmp xchg int xor out daa scas rorb dec add push push test mov hlt lods test jmp push add sub mov mov fmuls mov xor (bad) movsl fldenv xchg or xor inc shlb sub fisubrl cmp mov dec push mov aad out loop mov daa jne shrl xchg stc in xor data16 push rolb fwait dec lods adc mov cmc sbb or pop (bad) fsubl mov sbb adc jmp pop daa sbb dec push push insl mov mov bound ds lock mov sub cmpsb ret ret dec push add mov pop insb jne outsb mov xchg les imul lock inc inc dec std cmp iret (bad) aad inc fistpll sbb (bad) cmp xchg push or sub inc rcrl test nop mov imul lock and and jae xlat aam add xor mov jmp pushf out mov scas lret mov fmuls jae pop inc push push in stc fbstp call or aas (bad) in xor pop divb (bad) fldl jmp popf (bad) clc push movsb in sbb mov sub ja leave mov xchg fnstsw mov rcl xor mov cmp xor mov mov imul and ds ljmp sub mov mov sbb add mov add rorl pop fs xchg pop aas xor repz scas mov mov add push stos xorb push and dec dec mov mov xchg pop dec inc lods testb movsb push dec dec mov out ss icebp pop icebp cmpsl into mov mov xchg insb lcall jnp cmc jb out sbb sbb insl sub imul in jnp xor sub aam pushf (bad) ja push out cmp fcmovnu pop scas dec sbb enter repz out repnz sbb (bad) stos loope mov int3 loope call push push cmpsl or mov loopne cmpb or subl sub test shrl int jne push imul xchg dec dec adc in lods mov fsubr xchg sub insl push jl sub dec and pop scas inc sub sbb imul dec push lahf popf dec cld jo sbbl sbb pop and jnp jecxz mov sub adc mov and and inc cs push push or iret mov mov mov mov push and in add iret (bad) mov pop shl push cmpsl in outsb outsl pop dec xchg mov mov in shrb bound dec (bad) cmp in ret pminub frstor loope pop mov dec pop dec in adc test stc mov xchg das into sbb pop js sub roll lcall xchg xlat out (bad) aaa orl bound sub xor into push or mov ud1 pop xchg mov jnp dec ss inc je pop imul cmpsb ror cmp cld lea cmc sbb stc (bad) push iret pop cmp into ret int xor les mov xchg je push add cwtl in fist push jl sub std roll sub jne xor mov icebp test sbb (bad) jne jle dec xchg int pop addr16 lret int3 bound (bad) ljmp adc add out insl je loop,pn xor rcr dec pop js adc lret out add xor jge stc loop inc mov negb push sahf mov iret jge dec shrb sbb mov lds jnp push xorl ja int aaa ja insl sub mov shrb and into xchg sarl adc fstpl mov je push or cmp mov (bad) std sub pop cli insb pop cmpsl data16 add pop outsb add push xchg cmp push iret or je adc jo fnsave xchg stos int mov (bad) ss stos in push nop jl test sbb xchg push cmpsl mov popf jnp mov sbb pop out pop xchg mov adc shrl pushf lds jae das mov mov cwtl dec xor aaa scas pop jmp pop cmc ret cmp mov ds fdivrs mov jl and sub sub pop adc mov xor mov xchg mov scas inc mov jo decl mov out add fisubrl inc jbe stc scas mov pusha adc (bad) cmp fisub cltd icebp push cwtl push sbb push mov xor push or incb mov (bad) cmp mov jle cmpsb xchg push mov bound xor fprem add jg cmp mov cmp enter sub sub into call (bad) mov pop aaa divl mov push mov pop cltd aam test out push loop jl push in movsl xor ret mov mov pop outsl int3 lods jns aad in pop orb insl out push jae (bad) dec ret jnp addr16 (bad) fild or and push jo xchg pushl pop popfw or cwtl jbe or and clc xchg fidivr (bad) sub push fstpl adc (bad) mov pop out dec leave jae inc fdivrl push roll lds dec fistpll leave movsb test out pushf out mov mov out pop jp icebp sub mov mov ss sahf cmova jecxz mov js ja adc xchg es adc dec cmc mov xchg mov btr sbb inc insl loope lret cltd fcoml push mov push mov ffreep int mov or jge jl ds fcoms dec sbb sub (bad) sbb xchg pop pushf fs pop adc ljmp aad mov sub mov xchg fnop sti das fidiv fstps arpl stos or pop sub add adc or (bad) sub pop inc mov loope push je xor xchg (bad) xchg pop pop push pushf (bad) pop lds out scas in fildll mov and add mov enter shlb outsl inc (bad) jnp mov push cmpsb adc add out sarb inc and (bad) sbb push jne cwtl popf jp cmp dec nop into inc add and ljmp jecxz jne ret push arpl xor stos in loopne mov loop or std (bad) enter shrl aas dec add jns clc mov cld (bad) dec push push and out lret cmp dec loope xchg (bad) icebp pushf mov lret nop das outsl xchg data16 leave add and mov and jmp hlt cmp mov inc (bad) add icebp or lock hlt jmp ja lds popa fs jl xchg test inc sbb sbb adc inc cmc xlat mov or mov sub test push xorl mov repz out loopne and gs imul in movhps mov mov mov pushf in mov hlt sbb push jns lret cli xor ficoml adc pop inc mov dec inc mov orl mov xor addr16 pop aaa lds adc push mov les push aas rcrl inc inc mov push xchg inc mov inc dec jno mov mov decl enter (bad) pop fwait inc movsl int3 mov fadd movsl pop shrb push loope shll push test push mulb bound popa mov das lea out xchg hlt push cmp or rorb sbb in repz and push and in fcoms jnp imul jne jne add sub dec out (bad) or gs adc or jg dec lods mov xor inc ret mov out pop xor mov cmp out push es cmp or fxch test sub push addr16 or stc add ja int and repnz outsb dec mov sub sub sbb in jae outsl or outsb xchg push pop lahf das or lret stos jge mov sub adc adc mov lret das dec addr16 addr16 iret push jecxz push (bad) ja std jl mov mov (bad) mov pop xor sub (bad) cmc stos add xchg cmpsl (bad) sbb or cltd int3 in outsb mov dec daa sbb sub js icebp push mov xor rcr das sbb iret mov pop inc imul xor sub xchg xchg cmp loope sub lret mov arpl daa dec movzbl mov cmp xor cld (bad) jb test sbb jp test lock add and stc movsl mov add jo xchg xchg (bad) xor mov stos and pop (bad) lcall inc xor out repnz in imul pop scas xchg jb push cmp cmpsb ret mov outsl ds sub fmul cmp cmpsb nop pop out adc sub fidivr cmp aaa or pushl xchg fwait incl sahf xchg addr16 xor cmpsl jb (bad) xor push adc sti mov mov xor insl sub hlt xor fcmovb pop mov cs xchg jecxz inc cmp daa int mov insb pop mov clc test lahf push insb cmp loopne insl sbb mov push inc in or insb (bad) pop decl mov fdivs mov faddl push leave cwtl xor vdivpd inc dec push dec cmpsb movsb movsb add std mov sahf lcall adc sbb les push popf fcoms cmpsl repz test mov and sub xor mov add fist inc sub repnz pop movsb (bad) mov inc imulb dec gs lcall cmp mov and fbstp xchg jns push (bad) je mov pop add mov out mov sub inc mov cmpsb icebp pop jo mov push orl arpl push sbb push push push sbb fadd adc arpl scas push popf aad mov pcmpeqb push push cwtl roll lcall and (bad) scas imul inc rcrl or loop lods xor mov mov test stos xchg adc (bad) js jnp sub add (bad) and lods aas push js ja popf cmc pop mov test sbb std ljmp daa sbb cli fadd imul ror movsb or or enter mov or mov sahf iret inc test bound in jge arpl gs add inc insb jne mov mov cwtl mov fistpll insl push mov cmp mov xor add repnz cs out fxam pop test rcll mov xchg xchg jmp mov and push lea cmp mov lret inc add icebp mov xor mov sub fstps (bad) divl arpl cmp stc push cli mov sbb test ljmp jge pop cwtl mov popf fdiv sub movsb cmp aaa jge fnstenv sub das pop dec xchg jecxz out std xorb jb add clc cmp mov ret scas test outsb jg jo fldenv inc pop mov std pop adc incb adc ss pop (bad) xchg mov and test lds or mov leave push and (bad) hlt and repnz aaa andb xor jle rcll sbb mov (bad) divl mov loop mov in cmp dec pop pop icebp mov fbstp sbb jp inc out inc adc push xor sbb lea sub push out imull pop mov mov cmp lret pop fsubs mov sub push in ja fstps ret mov repz push bswap and das pop fs dec test outsb sub std mov shrl out insw cmp faddl pop xchg divl (bad) sbb aas mov imul xchg xor pop cmp cmp jmp jp cs cli std fwait push mov mov push test repnz mov inc cmpsb pop sbb and lock scas pop push pop out mov pushf das sub pop out add outsb fwait lcall dec loop dec frstor ss mov dec into in pop fldcw adc xor shll inc (bad) jbe pop sbb jmp mov addl pushf dec jl inc inc xor clc mov test pop scas enter inc out ret mov clc sub mov mov sbb sub sarb mov (bad) push jecxz mov add dec lock stc je xchg pop mov xor mov je cmp lret add sbb mov sub (bad) loopne scas push cmp dec pop add adc push icebp add sub mov push repnz ret fdivs adc jnp sub jno inc js sbb and mov jbe pushf clc inc clc or jno pop mov ret stos jbe stos lea mov lahf addr16 lret ja repnz loopne out ljmp mov add aaa jecxz clc ficompl je cltd into jbe cmp bound (bad) cmp imul sahf lods (bad) or in jmp inc add out in mov movsb jb pop shl (bad) jecxz rcrb (bad) and sub movsl pop cs pop data16 imul fisttpll jnp sub adc out ret dec sub fs dec sub test lods xor jns sti push icebp xor push fimul movsb arpl in cmpsb push fsub xchg inc sarl scas ret lock repz xor dec sahf xchg xor xchg or mov pop pop or push leave add lea out stos push movsl cs fcmovu inc add push and es jle cmp push call cmp lret xor cli mov push xchg cmp ret subb lcall pushl adc out mov pop dec out repz pop mov xchg std push mov int3 test les mov jmp movsl jge mov mov pop xchg and fmuls push push loopne mov xchg std jb mov add mov push int cmp test mov mov or lret sbb rcll ss ja,pt add xor mov dec (bad) mov out xchg adc mov rclb jns inc pop pushf cmp push sub mov std lods mov bound iret into nop shrl js cmp call outsl out mov hlt dec push jnp xchg lock mov jl insb dec jae mov mov gs adc test stos xchg lods ja push mov gs sbb in and ret out es xor mov call (bad) repnz cmp ret adc rclb shl xor into into inc xchg inc leave ret rorb repz mov mov test ja bnd xchg rolb ja mov xor mov cld mov insb jmp je cmc pusha xchg fmuls mov cmp shlb fstps into xchg xor inc cmp movsl mov push movsl sbb inc adc stc and (bad) sbb sbb aam (bad) jae inc dec dec jg jo pushf mov lret mov dec push xor push loop test nop sarl lock and mov push scas rol daa or sub pop in fbstp mov test (bad) call inc adc jmp mov xor inc pop jns xchg push (bad) sub (bad) in pop mov pop mov mov test jmp and in and mov imul in and stos and xchg lods or mov fnstenv jae stc jnp pop mov fcompl cs add xchg or mov and lret inc das sahf fistl add sbb popf xor sbb lea sub hlt sub cmp mov lcall or dec (bad) and clc lea jb cld cmp dec inc stos rcrb popf fs sar addr16 adc cltd or cmp clc pop or dec fnsetpm(287 es mov icebp test es push and in cli adc mov cmp pop dec jg cld xchg stc add push lock out scas dec imul push mov outsb pop fistpll pop loopne daa in xor or repnz hlt aaa xchg movsb sub or pop jg xchg icebp dec adc mov popa dec das mov outsb sbb inc clc jne mov nop mov popf sar mov lret pop inc mov clc hlt mov outsb push mov adc mov jl js mov int3 lods adc fwait loope inc in jbe lods add mov or sti arpl in xor xchg movsl xor lods mov jb xchg sub test (bad) cltd js popf sahf iret cmpsl xchg shll mov movsl fst repnz mov cmp sub fisub ficoml imul mov adc or (bad) push (bad) aas rcrb adc lods pushf ja inc shll dec mov mov (bad) mov pop dec cmp inc (bad) dec ljmp inc mov sbb out adc hlt add adc push or pop pop in enter pop jmp pop (bad) jl iret lods xchg (bad) out shrl out popa push cltd add rclb inc repz xchg cmc mov mov mov (bad) mov cmp cmp and pcmpeqw sbb das imul lret push aaa mov dec pop push pop jb rol push mov pop jp bound adc add push test sub cmp jg je xchg (bad) scas out adc sbb js ljmp xchg pop push test add mov call cld int repz lock out fwait jne or sahf jae ret jno xchg cmp repz js jno xor xor push mov sub lcall icebp aad pop mov pop and push mov leave fxch stos mov push aas cmp jg out rclb inc sbb es xor mov (bad) imul lods push cwtl push sbb addr16 iret ja mov je out stc mov push fmul loope mov mov loope mov stos mov mov es add mov (bad) dec add push fistp mov inc rcrb repnz js push lds test xchg inc mov test mov mov jbe xchg lahf addr16 cmpsb and repz mov rcl aad dec xor ss jb aaa inc xor pushf push lods jno dec lods fstps jmp lahf inc or push sub mov and jbe aas pop push pop jo xchg popf mov and push xchg push scas sub xchg hlt inc adc in sarb leave dec push testl jl leave insl mov iret and pop movsb adc or aaa insb xor rolb out xchg arpl in mov add popa lahf inc pop enter mov imul repnz in sbbl mov push std sub imul and and mov sbb cmp pop inc sbb scas movl adc cltd inc add pop sub loope ja pop add sbb pop dec insl or cmpsl inc roll push mov xchg clc adc adc adc mov inc xchg imul and movsl test cld xchg cli gs jb mov aad aaa pop mov sbb bsr or dec jle xchg push or (bad) and xor jbe repz fstl enter add call xor stc jecxz sbb (bad) scas daa iret pop je inc cmp andl scas push outsb addl js pop and (bad) jge push jge int3 pop ljmp scas xchg into pop imul push and dec jne sbb mov mov pop ss test jo push mov (bad) xor add xchg mov adc test aaa lret mov inc mov and jl ret xor stc or dec mov imul ja mov or lds jns adc lea mov xchg dec add pop cmp xchg lret mov cld xor daa adc dec sub in shlb jge and hlt std aam pushf (bad) loope das dec cmp mov mov mov mov cmp xchg lcall pop pop test nop push popa dec rcrl rcl cmpl xor mov loop stos idiv mov add (bad) rcl (bad) cmp lret sbb inc aam push sub fimull shlb add xor sub bound jecxz ss mull xor sub jecxz xor (bad) into inc bound push cmp mov int3 jbe mov mov (bad) push and inc push (bad) and dec std add jecxz aad lahf es jmp popa dec adc scas cmpsl xchg das incl rorl pop out xchg cmpsl int3 fwait js (bad) es mov lret shrb jecxz jp icebp clc xor ds mov stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld jg add cmovs bnd and sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait insl (bad) out xchg insl fistpl in pop fnsave insl (bad) xchg push add test add es pop sbb stos clc inc fsub movsb (bad) (bad) sbb push cmp jae adc aad adc mov (bad) xor into movsb cltd add (bad) dec js pusha cmp dec push rcl test and outsl or repz mov jle stc and mov mov fwait or add pushf je xor or lret or jae iret or std les cs pop or ror call xor pop push xchg (bad) fcomp pop cmp cmp inc cmpb fidivr (bad) cmpsl stos dec jg mov jns or nop movsl sbb push cld xchg test inc cld ds sub push xor cmc jbe dec adc (bad) ret dec je jnp push lods sub mov scas add pop daa push leave dec push xchg leave je push and cmc inc imul xchg mov xor and pop pop fbld adc inc repnz xchg mov xor push popf dec xor movsb sbb adc movsl mov cli pushf std repnz lds xor add (bad) (bad) jbe cwtl add shr lret ljmp sahf pop sbb lods bnd in mov gs xchg mov jle scas or jmp jo add aaa mov ljmp push push aam sub fcomps xchg jo push nop dec pop cmp fdivs mov pop addl jmp add cmp xchg sbb jo xor dec push aaa shll imul jecxz ja add mov inc test fnsave flds aaa sti xor mov clc jne xor xlat push fsubp or mov push inc add add aaa sub jmp and inc mov insb sub popl (bad) fmuls cmpsb sarl xlat lret js fs fisubrl adc std cmp mov mov adc add sbb dec xor xlat add data16 xchg (bad) fmull adc mov cld and jmp sbb orl dec pop xchg push jo jno aad lret incb push sbbl out fidivrl mov insb outsb mov cmpsb jge cmpsl call pop pop jecxz xor fcoml (bad) (bad) test push insb pop mov mov andb (bad) out and inc push pop mov mov xor cmp scas jmp call sti sub lock jno das repz fucomip push pop xchg (bad) jnp daa mov js dec lcall jge test bnd adc clc das call nop dec std movsl movsb jne data16 inc jge sub rcrb js pop incb push jne lods push dec scas in sbb imul adc sbb je mov ja hlt jnp mov lret mov adc add mov push jp cvtps2pi pushf outsb lock pop les out cli inc add icebp sub adc shl les mov js or mov pop lret outsb icebp jecxz dec inc call mov xlat clc (bad) (bad) daa push mov ja jbe div loop lods int imul in cwtl push mov add shll sub lds pop sbb xchg cmp adc mov pop aad imul mov enter out outsl xchg push aas lock mov pop scas push popa mov std add jle outsl enter push lahf aas xlat int3 mov fisubl lret (bad) push cld ljmp sbb mov inc mov push or psraw insl and popf pop out divl xchg out xor jbe in pusha xor mov jbe ror dec lods shlb mull pop and cs jnp mov (bad) xchg mov or ljmp jl xlat addr16 add aaa test test and sbb xchg stc and xchg xchg inc jae stos std fwait cmp icebp je repnz ja cmp sub (bad) xor lahf (bad) gs mov pop popl je idivb aad lock je (bad) addr16 outsl mov push insb dec data16 inc (bad) xor lods inc loop dec dec hlt dec jecxz ret mov (bad) mov dec adc xchg add mov or push jbe xchg out fldcw adc mov fistl jmp sbb subl jmp imul int sbb mov mov ret insb orl cmp imul ret mov push ljmp cs data16 stos sbb rolb xlat adc int3 dec jg lods fcomi cld adc add pop incl xchg and mov add rcll jno mov mov and dec mov sub outsl sbb jnp inc sbb xor pop in pop pop popa push xlat gs and xchg repz xchg jecxz mov adc sbb ret arpl movsl pop adc inc sbb ja (bad) imul cltd stos jecxz scas cs (bad) xor xor test in mov test rclb and sbb ds fisttpl push add xor jge mov add test jge js mov push mov sti outsl dec xor sti movl and jecxz cs or dec inc leave nop mov std cs ret mov pop sub add mov xor or xor js and ds ret dec jmp mov inc mov jle pop mov nop fildl sbb push or add movsl pop or push jae jp push or (bad) call inc push popf shrb movsb sub fisubr cs dec add dec push nop scas push aam fistpl push fs and lock cld mov out or sbb cmp push inc xchg fsubrp dec (bad) cmp rorb or ficoml adc das push or fimull jge push pop fidivrl push push xchg out int data16 mov cmpsb rorl into std mov inc andl sbb fistp mov jae es int decb lods mov push xor adc push or inc xchg mov push out pusha aam or test fs jmp and adc dec jno adc cs sub pop cli je jp xor clc sub or loopne xchg push icebp daa or mov sbb push roll pop mov mov mov jns sub xchg out dec roll data16 pusha out mov mov cmp fnstcw ss cld dec mov fnstsw mov and dec push aas test pop push cwtl jnp pusha mov pop sbb add dec dec mov or lea lods imul lahf pop rclb or and xor mull lock imul inc lock test push out ljmp repz push dec xchg inc popf in (bad) inc mov pop divb sahf and addr16 or (bad) je or adc xor pop jecxz (bad) ja test aas mov jl out movsb jne push cmp inc fisttpl scas xchg push dec mov inc inc mov fnstenv xor in sbb mov mov sbb sbb push fimul sub pop mov mov jge std cmpsb cltd cltd pop adc push mov lods mov xor repnz leave mov dec cmp aas push push add into xchg outsl xor sbb inc mov and xchg dec inc xor dec ja fisttpl (bad) repnz jae adc (bad) push popa push pop inc jmp mov ds or sub pop mov sbb and clc mov (bad) sbb inc and xor test adc pusha scas jbe cmpsl dec (bad) inc test pop stos mov dec cmp xchg mov aas and fnstcw cmpsb sbb mov pusha (bad) pop lcall or push cmp xchg xorl mov jle pop jmp hlt in inc xchg (bad) (bad) testb cmpsl pop lahf popf mov fimull or fnclex cmp adc dec sub call xor clc (bad) mov repnz add mov outsl repz xor jp repnz fcmovb cmp xchg inc je push xor fstpt rorb popf or mov hlt fwait add xchg xor xchg adc test imul leave hlt or (bad) fcmovnbe dec and repnz cmc cltd inc cmpsl fldl cmpsb pushf jbe mov mov inc mov mov leave xchg add femms sub shll (bad) pop scas pop xchg sbb or sbb mov int3 test es (bad) jno jp adc add not push pop sar aaa cmpsb jp and inc or jno (bad) xor (bad) or lret jle adc xchg sbb mov cmpsl cmp std sub gs mov out dec stc arpl sbb fwait jmp mov push xchg push ljmp lret test ret lret xor cltd dec add int3 mov cli test jecxz testl cmp xchg xor cld push pop pop arpl adc push iret mov movsl pop add dec loop scas (bad) xor ja je mov push (bad) data16 into mov test cmpb push jbe lcall aaa or shl jns cltd fcoml mov pop ss hlt pop pop jb push and in stc aaa fldl jno shlb mov movsb into dec xor fild movsb cmpsl incb push xlat fmull dec lods push insb mov mov push mov mov rol dec movsb push lds xchg shll inc lds jmpw inc jno mov sub inc mov cmp cmp cmpsl mov sub pop xor lret adc jmp popf pop dec je enter fisttpll or insb jb mov ja mov adc addl jge sub mov insb inc ss adc leave outsb pop fwait out cmpsb fistpl xchg jbe in cld mov xchg sbb addr16 fstl int and ret fs aas loopne addl das adc jae pop inc dec cli jmp pop aas adc inc or fisub jb out les dec jp dec jae lahf outsl out into push les outsb mov nop pmullw add out in adc adc push adc inc push mov test add sub pop movsb sub mov out mov or push sti xchg movsl adc sti mov xchg or add push fidivrl inc pop push roll mov in jmp and aas aad and sub dec cs (bad) jmp out pushf jo (bad) clc pop mov pop pop pop les pop jo pushf cmc sarl and fs lret scas mov dec subl out mov mov sbb cmpsb mov inc fdivs inc jno inc sub addr16 (bad) mov pusha mov ret push jg (bad) (bad) mov daa add lcall pop pop cmp pop mov fsubs mov pop xor pusha xchg and fstps push jge cwtl inc pop dec imul mov div cmc mov imul out cmp (bad) push xchg or mov pop aad in mov add repnz out mov mov ret mov mov jns lcall sbb hlt (bad) mov xor push out add dec pop push cmp aad fnstcw enter rorb push mov cltd add xchg push aam add cmpsb sbb lods adc aas pusha jp dec inc mov mov sub addr16 dec jbe fstl lods bound xchg add popa cli lods daa shlb loop jl push mov dec jnp cmp mov mov adc or cmpl cmp mov (bad) jns and pop sub loop mov lods mov inc add mov icebp clc fcmovb data16 jge fucomp adc loope ds fisubrl sub inc es xlat cs adc mov loop ficompl jo pusha lahf inc sar inc dec adc xchg add popa pushf mov jno push cmpl in mov decl sub insl sahf insb iret mov sub sarl and jp jecxz cmp jecxz jmp sbb and mov add test adc sbb gs xchg das mov stc mov (bad) aam fsubrs cld mov fwait adc cmp mov sub pusha aaa popf es pop ja adc popf sarb push scas mov cmp insl xchg out shll adc sub mov stc and mov mov sbb pusha or icebp leave std and mov pop and data16 adc inc loope ljmp mov test or xchg push mov and into mov lret jbe (bad) (bad) sbb inc fsubs fidivr cmp nop movl jle fistp bound jns or or adc xchg lret mov jmp or shrl lods sub lock lahf pusha push sub cmp and das or mov xchg aaa aad dec mov cmp icebp loope arpl add popf fwait bound sbb mov movsl push and out cmp sbb mov inc (bad) and sub insl aas daa aad push enter daa mov outsb int3 jne push fnstenv ljmp xchg int cmp mov rorl jb sub inc xchg fisub push xchg adc in push xchg jmp incl cwtl mov and mov jmp dec sbb jmp or inc jle cmp jp fdivrl imul mov lret sahf adc cltd adc push adc xor and cmpsl imul mov stc cmpb movsb (bad) mov inc aad es enter mov popa js xchg out and pop jbe push ds ret dec xchg test cmp xor sbb or xlat loop sbb jmp sbb into add mov jmp xor mov jb (bad) in popa fdivr lds frstor fcomp out shll or xchg gs mov adc in test iret jmp sbb rcr xor or outsl aas xchg add loope inc rcll fistpll jmp lods mov push mov loope dec sub push dec flds aam xor mov mov add xchg addr16 xor xchg lcall push mov pop xchg ds cvtdq2ps mov xchg inc pop cmp cmp adc cs inc xlat imul leave scas out jo pop xchg (bad) mov ror jmp call jle push aaa stos push dec or fdivs xlat add xchg pop scas pushf repnz jbe xor push fisub icebp push test call dec lahf sti pop cmpb pushl cmpsl stc sti pop push mov and sti outsl loope mov sub adc aaa sbb pop shlb pop les sbb cmp xchg dec fmul pop cmp mov pop cltd insl mov sbb fwait xorb jbe pop mov push push addr16 mov stc push arpl scas jbe inc in pop fiadd adc inc dec dec inc inc (bad) mov sahf (bad) out (bad) lock inc add in xchg jecxz (bad) jno inc (bad) dec xor fiaddl xchg mov xchg mov mov fbld repnz push jg cmp mov cmpsl cmp outsb dec push repz nop pop add bound insb (bad) (bad) cld mov and sarb xchg mov faddp xchg pop repz pop push xchg dec (bad) out loopne test cmp xor bound and je hlt ja shr lret inc xor pushf fs cmc xchg and add shlb rclb scas cmp or push dec outsl lods (bad) jns xor push and rclb in push and pop stos mov repz divb cmp dec mov pop out cs fcompp ret out jecxz pusha lods mov roll addr16 cmpl fist xor lcall shr xchg les jbe and in das (bad) insl adcb out push into ja lahf fldcw mov (bad) loope movsb add mov movsb (bad) movb push pop push callw es add sarb jmp mov std popa out push jb mov jmp cs sarl push inc and pop fidivr cli xchg dec push je (bad) sti scas jp dec mov pusha or cmpsl nop stc repz loopne rol mov xorl adcl (bad) inc inc sbb mov and jmp fdivs sbb mov lods imul inc fnsave bound pop xor mov nop sbb js fs sbb cmp mov sarb mov xor enter icebp cltd cmp scas hlt push sub out inc inc jno sub das int xchg or stos repnz sub mov xchg mov cld stc or sbbl sbb xlat mov gs pop fmuls std or scas sub mov cmpb ret int3 mov adc cmpsb addr16 int3 mov adc inc stc (bad) cli loop xchg icebp push inc jg inc or insl lea adc cmp loopne mov cld mov xchg or jp and fbstp dec fnstsw mov js divb pop jne or test adc cmpsl mov push sbb mov cmc aam (bad) xchg and or cwtl xor enter (bad) dec sbb sbb in inc mov mov mov cs or int cld test fnop les jbe popa dec rcrl cmp sbb push fistpl jno ret inc cmc or lock rcrl lahf jp movsl pop mov push or (bad) mov cmp sub ljmp and push pop mov fmull and mov repz and jnp bound mov mov xchg cltd sub mov fwait jg fdivrl fmull add insl repz ja pop stc bound sbb (bad) mov (bad) inc dec repnz inc (bad) cs sbb idiv imul mov iret sahf mov pop and test inc pop lods data16 sbb (bad) jecxz lret push sbb rsm sub add jle js test xor mov mov xor or adc in jmp addr16 push ret adc lcall popl add data16 out sti add jae cmp ds cmpsb inc mov adc mov push fistpl lock insb sub jnp xchg mov mov add into xchg xchg dec push mov cmpl and in es jae (bad) xchg int add add lret mov subl add jp cwtl int3 loopne sub push out roll push cmpsb sahf cmp xor cli dec repz ret data16 mov dec fcompl sub (bad) aaa in int3 leave mov loope shrb dec fs add out (bad) (bad) sub push push cmp mov cmp xchg or add jae punpckhdq mov std inc mov adc stc lea inc and pop fsubrl mov bound fisttpll lds (bad) jns jecxz aad enter cmp dec jb cmpsb xor push cltd mov sub dec cmp xor enter and jmp push lods cmp add iret jmp ret jl lock xchg iret ret jno pop cwtl mov cld mov push cwtl pusha les jb rclb pusha jbe fld sub sbb mov (bad) (bad) cs js inc in and add es outsb mov xchg mov sub imul imul lods mov mov adcl pop cld test fdivr gs movsl scas xor jb out xchg loopne inc fimul aaa pop mov loop add mov jbe mov jecxz dec leave les aam into sub cmp cld sub cmpsl out aaa fcoms nop iret jne pop sbb mov push (bad) cmpsb pop lds xchg and push jbe idivl mov int dec bound les out xchg mov scas push mov push add fbld add and mov push jmp in pop add cmp loop dec test ja arpl lea data16 dec cmp xchg inc pop dec adc pop mov cmp rolb aas push stos scas mov ss mov movsl pextrw jge push (bad) outsl fsubr or aad inc mov (bad) mov in xchg adc lret fmuls inc dec leave insb ficomp sub out in cltd sbb dec dec pop sub xor into pop mov push rcll mov fsubs int3 jp push popf out faddl shl (bad) out test mov hlt subb cltd jge xor scas xor jns jne je sub or inc mov jmp fldenv jne mov cmpsb pop lcall mov jge rcll mov or lcall lea out xor jge xor adc orb arpl xchg call mov pop xchg adc cld call (bad) cmpl pop fxch ss lock addr16 stos mov and leave popf cmpsb (bad) xlat sub xor adc mov push sub into sub or cld popf mov fdiv and daa jno outsb imul and pop sbb dec mov insl nop outsb or mov lcall nop push pop test dec or mov aam rcrb mov or cld jnp xchg lret sbbl fdivp in ja inc pushf test lock clc and (bad) testl cs cmp outsb fldenv lret and (bad) cmp daa add fdivs lcall mov cmp or add mov cs push mov dec or inc shlw push lret sahf dec rcrb mov jae aaa (bad) stc loopne jo push push popf dec lret lods es mov xor jl adc popa sbb inc mov xchg repz test fwait sub insl jb pop pusha loopne test mov add out mov out sub dec inc aaa ds shrb adc inc lret cmpsl daa xchg sbb jbe iret inc or shr push xchg pushf daa mov jae nop je ss enter loopne and clc call movsl sbb jle jo bound sbb mov jns stos dec jo ss mov and mov fdivr jbe sub scas pop in loope mov sub dec mov test je mov mov (bad) ja sarb mov in lret aaa add sbb ja dec stos cmp inc or aaa aad icebp icebp fistpll mov lret call cmp push sub notb mov and dec xchg mov mov stc (bad) in (bad) ss mov sbb push or mov sbb dec fcomp div dec pop cmpb sbb xchg ds aad lock jle cmpsl mov jp nop fdivrp mov std xchg in in push out iret add fdivrs sbb sub clc ljmp sbb mov cmp mov adc insl lock jle push sbb push xor cltd lret mov insl test pop popa lea fsubp or out (bad) dec nop sbb cmp jl cmp js lret mov add cmpsl mov jp adc cli nop jne jg adc (bad) jb (bad) mov pop pop push xor cmp mov mov jge fdivs into mov xor push mov mov add ret push sahf jns cmp mov dec scas jns pop xor jae imul mov ret jne bound push sti test je dec dec inc fcmove mov xchg push inc shr push cli rcrl jbe in out (bad) cmc and cmc mov mov mov and push dec adc sbb cmp jp cmovb sbb push lahf stc test add pop or (bad) sub and clc out sti adc js add inc aad xor mov lock dec cmp loopne add mov pop std aas fsubl in fistp inc xlat data16 mov sub mov push sbb negb pop das pop mov test (bad) dec mov addb add movsb xor push mov xchg ljmp aas popf mov jae idiv fcomps aam in cmp out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz add pop sub add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push push and popf insl aaa fldcw leave jbe jnp daa (bad) fs (bad) mov mov mov add orb mov out call fidiv mov fcmovnb lret sbb fildl jbe insl aad mov push outsl pop jb cltd mov jne xchg add xor pop hlt sbb sbb (bad) (bad) pushf jle xchg outsb aas scas adc in push xor xchg push jns test mov imul mov pushf mov outsb mov mov fisttpl xchg lods xor inc sub dec mov push in sarb mov lock jmp cmp cwtl cmp mov sahf dec add inc insl inc stos (bad) adc fmull cmp cwtl (bad) jecxz mov adc sbb ficompl cltd sarl dec jae or cmpsl xor add jl push ficoml inc push shl push pop cmp fnop aam ljmp sbb pop scas adc iret lock icebp out stos mov ds xchg dec outsl in push or sub test pushf jle mov loopne dec push adc stc inc inc push dec lods ret inc jl pusha or inc push cltd je repz orb push divl cli jmp pop cli xorb pop jecxz loope (bad) mov sarl or gs ret or cltd jno adc dec lds mov test xchg aad dec dec outsb bound or lods cld por push stc mov call (bad) and mov int rcrl fwait jmp fisttp int lock pop jl or pop cld push mov in sbb dec mov jp inc mov xchg popf cmp inc inc stos (bad) pushf fcompl shll mov push inc sti pop jno insl gs xor insl je cmp mov prefetch mov dec insb cmp scas dec roll mov lahf dec icebp imul jnp jmp cmpsb sbbl je add jp jns repnz (bad) push aaa mov push inc jmp cmp xchg (bad) shrb jns push mov pop add jae lahf add sbb daa dec jecxz sub scas mov movsl dec mov pop sti popf out or jb scas int3 add hlt jg sbb out jecxz cmp stos push scas les faddl xchg xor adc sub and popa mov inc insl sbb xor lret jae (bad) pop and jge push test or xchg fisubl sahf inc mov xor push xchg mov jo pop bound cld jmp and fwait xchg cmp pushl pushf pop or (bad) lock outsb dec cld pop mov xchg movq dec mov or in jne push lret mov mov jb add and dec pop mov mov mov ds ljmp adc mov daa xor cmpsb inc adc popa pushf cmp adc subps and adcl (bad) jle and cmp push inc dec dec ss xchg xor insb iret (bad) enter sub mov (bad) imul pop subb sti div xor jge daa cmp and in fiaddl cs add mov sbb dec popa pop negl mov sub rcrb dec inc sub adc (bad) lcall out sbb add test xchg insl mov flds fdivrl es push movl imul add sti and sti jnp out and adc pusha pop test ds iret adc pop adcb inc mov jbe (bad) mov dec ret gs cwtl push cmp sub push and inc rcrb jmp ds pop jle mov sbb pop mov movsb pop mov pop sti push dec imul movsl push or inc sub shlb xor orb (bad) lret pop out fwait outsl add iret and mov movsl int3 inc adc cmp inc shlb pop sbb dec xchg mov cmc mov jecxz push lret in je popf test add imul sbb loopne outsb push ret lds mov inc movsl aaa das cwtl fiadd push ret (bad) cld nop pusha aam sbb pop sub popa (bad) cltd es adc addl fisttpll daa mov fs jl fstpt sahf jbe pop aad sbb ret or fwait push xchg (bad) xor push mov mov push cmpsl pop lods add insb inc int mov inc jne fs fild xor popf std jle out into push data16 gs xchg pop jb jno test daa es dec or lods jl rolb lahf loope mov shr mov cmp scas into push imul pusha in inc xchg call fdivl mov (bad) pop rolb xchg or inc push push mov xchg out dec scas cltd push imul inc lret push sarb ss ud2 dec imul sahf xchg stc in pop movsl xchg outsl xor (bad) mov (bad) movsb adc stc nop xchg addr16 test jle dec test inc mov addr16 rcll dec inc fwait jecxz mov (bad) push mov loope mov sub fcomps and sub fcoms xor sbb cmp icebp and cld ret and adc xor in mov (bad) pop icebp repz push nop mov xchg mov mov dec mov lret fwait icebp push xchg inc (bad) (bad) les xchg adc dec aad in lds into mov xor je mov jno int imul lahf icebp cmp movsl and les mov add fbstp jg test mov mov cmp out jp push lret adc hlt stos insl jbe fimul in mov push or dec bound repz lods dec inc ror inc in cltd cmp sarb inc inc fwait sub xor cmp leave aam push aas and (bad) xor sbb fisttpll xchg pop inc test xchg push push cmpsb das movsb imul aad mov xor shlb and in pop (bad) jae pop xchg pop loopne pop test cmp imul adc push scas insl sbb (bad) mov push pushl scas idivb xor aam inc mov cmp arpl test into jnp add dec jbe jl out inc inc sbb popa sub je (bad) or out add repz sarl lret or in sahf push jb cmp xor (bad) cwtl movsb jb mov bound jle (bad) out call es jecxz xchg sub shl ds mov or mov sub dec sbb fsin xchg sbb lea ljmp xor mov stc dec dec xor mov jae int clc fwait pop push dec mov daa jbe sbb jae push in cmp add mov push jp js cltd rolb mov aad call gs sub jg loopne das flds add ret add mov mov jbe test ja cmp (bad) aam mov fadds cmpsb mov pop (bad) divl (bad) jbe pop ret sbb mov pop adcl sahf xor stos int jge lcall and xchg push adc jg and mov sub or and stc mov pop and add or xchg inc adc dec pop (bad) aad inc int popa shll pusha inc nop clc call loope push and lods cmp andl faddl fcmovne addr16 push cmp dec movsb out loop pop nop nop ret mov (bad) dec in jne bound cltd icebp jbe pushf mov stos insl pop shlb pop out xor mov push js int pop pop mov rcrb mov mov (bad) jns test lods test out ficom mov test xor cmp mov inc dec movsl or xchg movsl inc xchg pushf push inc outsl ljmp aad add mov cmc (bad) jno sub xchg je mov inc fldenv into mov nop dec push sub rcrl cmp loope xor mov bound mov mov xchg je daa andl xchg dec subl push stc (bad) rclb ret add pop jno xchg jmp and push in das dec adc mov xor inc lds push ror inc aas fildll sbb jne push fnstenv int or dec outsl inc hlt arpl test sti mov xchg ljmp imul jbe insl loope pop sub pop pusha (bad) into in out icebp cwtl fcomps pop inc popfw mov cmpl daa and mov or fbstp pop imull popa cli sub sbb ret jg or mov xchg pop test mov outsb or sub pop dec in inc cmp push inc mov rolb orl sahf cmp mov push ficom add lea mov and push lret mov mov loope data16 sarl gs out jne jp mov pop inc pop inc mov js jb mov sbb lret jle loop popa (bad) adc addb jecxz push push insb je lea sahf inc add ss add pusha cltd sub push ret adc into pop lcall or fdivl cmc stos aas push test cmp out or mov test movsb je jge jecxz es adc dec ud1 push psubsw (bad) push jmp push leave mov sbb rolb mov add jl dec dec inc or mov pop imul mov mov sub inc add clc outsb sbb js push sub mov cmc aam xor push xchg cmp (bad) fwait dec int3 sub mov jns (bad) lret aam push movl mov hlt divb divb add xchg add push ss adc (bad) idivl and aas fs mov jg fdiv lcall mov addr16 les popf pop dec xorb in js into mov add loopne cmpsl scas inc xor (bad) pusha movsb in add mov xor add mov test rclb mov mov inc pop sbb xchg addr16 das dec sub movsb daa mov ss imul repnz scas xchg and pusha movsl cmp imul les mov ret loop push cmpsl fsubr add fstpt lods push mov pop mov ret mov test lea call sarl cmpsb ja mov push sbb or outsb pop lea test ja repz jb cmpsb adc jbe insb mov mov nop ja clc mov mov stos orl lea rclb fbstp xorl inc xchg jmp add or lds out adc sbb push scas cs nop fwait jnp add add sub and imul inc aam push mov sub mov sbb call mov clc inc push cltd mov ret push sub out (bad) out add sub mov ss jnp int bound inc and mov arpl int3 ret add std xchg insl loop popa ja sbb in cmp es fisubl imull mov xor mov add jb es mov and or and xchg aam imul xchg jmp pop roll sub ss ret push or (bad) fdivrp (bad) jge icebp cmp sbb dec jl loope je xchg pop xchg add add nop ljmp adc dec stos lret aad and (bad) addr16 fmull xchg fmuls adc ret es scas adc xchg sub rclb sbb xchg out sbb fucomip mov xlat stos adc push movsb dec insl fadds inc leave push inc lret mov gs addb repnz stc pop ja sbb fcompl loop fwait jb cwtl or inc cmp or cmp arpl push dec add xchg pop mov xor ljmp jbe cli adc dec jg je lods push xchg cmp dec pop mov mov adc sbb stc pusha loop test vmovhps ret sbb out std add fs cmpsl xchg call xchg mov hlt jb or and faddp movsb xchg jbe repz idivl repnz (bad) jne jno add aaa fmuls push test mov xor test jecxz lock sbb (bad) cmc ret aaa push lret imul lea pop rcl cli icebp das adc and lods je push inc jge dec cmpsl xor scas js call adc dec cmp cs mov push ljmp mov nop and dec mov lret push adc mov rcrb inc jl roll jg mov jecxz das (bad) jg adc adc pop mov sahf (bad) imulb adc pop inc lods jb jnp xchg roll and xchg ss fs jg movsb ret cwtl ds or rorl jg or inc rorl lahf mov push int std pop xchg sub test pop or pop push faddl push loopne dec fwait sub jo aam popa fild lcall add xor mov lcall push scas jb int negb loope lret (bad) jb lods inc xchg sub (bad) aaa dec inc or adc (bad) mov inc pop std fild out out or and out (bad) cmc xchg lds ljmp push dec in in push or sbb les cs cmc jnp arpl ja and rorl push negl cmpsb cmpsb popf cmpsb fmull mov jp int3 leave leave jnp inc xor ret xor and arpl enter xchg jmp sbb test outsb pop dec bound repz pop adc sbb aam imul mov mov cmp nop push cmp mov lea into inc movsl es pop mov add (bad) mov les xor push aam xor pop insb lret icebp sub xor les adc mov int sti xchg in xchg mov fistpl mov cwtl or xor mov jecxz cli push mov cmp dec inc pop or out mov pop (bad) imul leave jmp xchg sbb cmp jmp sti push sbb fcoml mov mov lea jmp rclb xor dec call and inc dec xchg lock mov sub mov xor add insl xchg dec and dec mov sbb cwtl mov fsts es xchg movsb into lar mov add jmp bound mov jl fs and xchg shrb inc aam pop fwait ret ja push jo mov jne ss movsl xor mov cmp jns mov test (bad) loopne adc cmp push stos mov sub pop mov enter xchg dec push dec jmp pop cmp and cmp rorb js push rcrb arpl jecxz push dec cmpsb imul mov stos xor or rolb pop cld jno mov push test sarb scas ret mov or test sbb hlt shl push cmp and push mov jo clc fisttp cmp fistl sbb jb (bad) aaa lods jo cmp out mov int3 clc out sahf add scas inc fisubr mov dec stc add (bad) data16 and inc and jne loopne push mov xor les loopne adc adcl in (bad) lcall jo lods sarl in push cmp cmc and dec inc (bad) (bad) cltd lock mov inc inc (bad) movsb imul push sbb jbe sbb mov add ljmp mov xor mov jb xchg fistpll dec cmp (bad) push cmp mov jbe fstl inc jns mov stc mov loop cmp or jg sbb dec sbb jl mov imull and ss cmp xchg pop mov push jmp (bad) out cli cli bound mov (bad) jo sub mov mov xchg xchg pop les sbb add jge or aam pop jbe jae (bad) das xchg inc ret jmp fs ds pop imul dec cli sub lsl outsl adc mov push clc sub xlat movsl (bad) sub aam and stos mov pop cs push sete xchg outsl out sub mov (bad) or sub out test mov xchg inc addr16 lret cmp fcom sub mov lret push push add fldt cs or fildl cmp xchg sahf popf jne out fsubl and xchg pop ret call sub push adc push sbb lret push clc inc hlt or inc mov negl repz sub outsl into stos mov mov negb ret or sub inc xchg fldenv notb (bad) or xor push mov lret loope add inc mov ret out dec das pop xchg js xchg cmpl inc jmp ficomp gs dec imul fmull fsubs cwtl xchg jb push add in loopne xchg into fpatan mov jmp (bad) xor jp (bad) mov push jo and adc dec pushf xchg pop push jmp (bad) movsl fldt jno test or jnp imul outsb add loop push je inc in xchg adc lahf inc aad popa push mov push pop iret sbb sub jecxz stos and bound call imul dec and jl fisttpll out xchg fnsave sbbl adc push out dec sbb pop movsl inc hlt repz or xor cmp (bad) cmpsb call movsb movsl je rol add dec in add cmpsb lcall nop add in mov mov (bad) jmp out lods (bad) ja into aam sub cmp pop movsb outsb mov jbe pop mov popl xchg mov or arpl nop inc and fisttpl stc rol jge fcomi (bad) mov dec mov dec (bad) bound jns pop jne or jmp or sbb les sub cmpsl lods lods or cmp js cs rcll add pop xchg mov arpl ljmp (bad) aaa stos sarl push push lcall imul and movsl js dec or jns mov mov jns mov sub or cwtl lds mov leave lahf loop mov je cmp xchg mov push inc iret dec adc (bad) movsl xor lahf scas add loop aad scas push or mov mov repnz xor roll xor sbbb addl jne,pt int inc adc adcl and sbb imul jmp pop outsl adc (bad) fstpl xorb data16 xor dec xchg push pop iret out sbb popf dec lcall mov popf pop dec mov inc in mov sahf sbb xor insb loop add pop mov sti xchg (bad) xchg push stc ret aas xchg daa aam xor push xchg pop jle adc sbb add outsb cmpsb cmp aad call std mov fisttpl push vmwrite lahf jnp mov mov shll inc andl out xchg stos dec imul mov bound or sub and ss scas fiaddl push stc (bad) mov xor ret or mov mov adc test int imul inc mov in bound dec mov xor xor jg push or xchg sahf sub cmp sub pop and xchg pop jb out or jmp adc aas fucom fs dec sub inc aam pushl or mov (bad) lock push xor pop push sti cli jle xchg xor mov push and stc mov repnz sub outsb arpl vunpckhps mov pop dec imul xor or jmp in in and mov loopne and out pop into into xor into incl in pop jmp sbb pushf mov mov outsl scas sub (bad) jle pop in jns jbe ss fimull mov stos pop inc dec (bad) mov divb inc push xchg jne fs cli rol xor (bad) xor push dec int or cmpsl mov icebp ror int3 jmp hlt sub sub pop popf adc cld outsb or sbb imul cmp adc dec arpl cli movsl sbb es arpl pop and adcb loope iret daa push sbb sti push and mov dec cmpsb cmpsl not leave int add mov cmp cmp enter or cli test inc outsb xor xor adc sub mov pop xchg adc in fdivrl gs dec lret in jae std das in adc fimul (bad) daa sub xor pushw (bad) sub push hlt ficom pop call fsubp (bad) mov repz xor mov xchg xchg cmc mov pop pop (bad) je mov mov jg adc ret dec inc inc pop (bad) xorps xor xchg out push xor jno mov test mov xchg daa stos std or cld jle jecxz pop testl int3 jo xchg mov fisttp repnz fistp push idivb outsl push mov pop sbb ljmp inc int jecxz das scas leave mov scas inc cltd xchg imul pop mov xchg mov adc xchg (bad) out push cmpsl push hlt cld int3 sub cmp sbb insb es mov jp fiadd mov inc and dec scas xor cltd lods mov pop xor add or xor add pop mov pop cltd and in inc sub inc ja dec out cmp dec push rcr pop pop cld jae lds movsl aaa pop icebp cli xchg push shl xor sbbl jmp (bad) popa push ds mov pop jle and fildl lahf sbb stc cs dec outsl cmpsl cmc ljmp push in popf add and push negl cmpsb pop (bad) jg fwait (bad) mov adc leave sbbb aas inc jne gs mov pop ja fwait repz push cltd pop je stos or popf aam sbb inc push and dec inc pop scas movsl sbb push inc add mov out js (bad) cwtl clc mov xchg and hlt lahf imul lret movsl xchg adc sub sbb cmp aam adc mov cmp pop mov data16 (bad) push add add leave sti jnp rcrb clc pop inc or aas gs into loope dec mov mov (bad) mov adc loope dec or (bad) icebp cmp xlat push xor enter (bad) cmc sub cmpsl push fnstcw loope jecxz dec pop dec rcll mov mov mov jno insl sahf mov icebp cmpsb movhps imulb test dec pop mov push test insl add sub or sbb loop data16 mov sbb loopne sub std shrl dec inc dec movsl ds ss push jbe in cmp test nop mov lret dec or xchg pop mov mov lock test sbb push rcll addr16 decb (bad) js lcall jno gs or sbb lds lcall sti sahf cmp xor add out mov scas pop jns sub mov or dec xor and mov ret sbb rcrl iret into pop inc loop data16 jo jecxz rcr movsl loopne mov call lcall mov cmpsl cmp insb sub xchg cmp scas inc (bad) mov mov mov and je push sub adc lods ficom nop inc xor scas sub ss add ds jg mov dec (bad) arpl imul pop jge cmp daa dec icebp popf mov inc scas or xor loopne push lods js dec cli mov test pop xchg cs ficom aam (bad) dec fild xor jno xchg cs push push add divl mov ja pop loopne adc cmp fs mov imul std fmulp push sbbb fnstenv lahf xchg in xchg push scas pop sbb jecxz out ds push jp xor xchg std popa and mov mov popa mov xchg sub mov xchg mov mov pusha fyl2x inc adc hlt movsl or fisttp inc popa cmp mov test jmp cmp les in (bad) sarb lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add aas xchg in loope mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add imul mov jmp xchg jge jbe mov ret mov fnsave mov sti jnp les add add andb orb fcompp sbb inc (bad) ja add negl cld test fistpl sub xor sahf add test push ja rcrb mov dec icebp lcall jno mov out xchg mov mov ljmp mov jle inc cmpsb cmc sub lock and ds cmp out lods bound sub cmc dec das and mov data16 test jg adc das clc cmp pop xchg xor jg je test (bad) sahf stos sbb sub or sub stos mov ret ret loopne sub and mov cs adc mov mov (bad) (bad) test lods test (bad) push in jl jl push add stos cmc inc nop jbe and jecxz mov add push (bad) sbb mov dec mov inc enter mov mov mov mov mov push fcomps sbb add shrb cmp mov (bad) or mov insb sti push jo xorl and (bad) in (bad) mov repnz mov ret call pop imul mov rclb movsb jnp stc int sbb add dec sub (bad) cld inc fistp dec sti push adc bound and mov jbe fs inc movsb loop dec mov fwait stos andb fwait sub fs sti in jmp rcrb fstpl into pop outsl (bad) xlat pop aas scas pop pop sti rclb lret (bad) repz push aaa mov andl sarl lret cmp icebp jle jae lods addr16 cmpsb loop fnsave call icebp xor cld sbb push minps pop movsb or sbb pop addb cmc jl cwtl push js or (bad) mov xchg sub insl (bad) mov das dec jmp das xlat xchg cmp lcall cld sbb mov xchg cwtl cmpsb stos popa into xor mov mov add adc (bad) daa cmp cmc ss fsubs or xchg fs into mov push inc or fiadd fsubrs test cmp repz or call ss jl adc jns aaa push pushf (bad) outsb mov lods adc dec out popf xchg sbb push add jns cltd mov pop ret int3 jns xchg leave insl dec ss or dec (bad) daa xor scas mov (bad) fdiv ds pop cmp mov adc mov fwait jno push push mov xor pusha (bad) mov loop mov out pop add or int push test mov insb popf and push cs push push cmp test incl sbb lds jge cmp xchg mov gs lahf sbb and (bad) mov sbb cmp or dec test mov clc cli sarb mov mov sahf lea in or comiss into xchg mov pop cmp add mov sahf cld push xor shl inc mov sub mov lea nop mov loop mov adc ret cmp xorb popa xor push inc rcll jmp jmp jl and pop adc rcl out inc lods mov orl insb xchg xchg cs dec dec jno xchg sub xchg sbb xor les (bad) std sub mov sbb (bad) xor shrl std dec pop lods pop inc add dec fst dec sbb das mov aad je out lret lcall popf lods mov imul pop xlat adc in xchg pusha cmp inc mov test jmp cli fwait or dec pop or hlt int xchg outsb jnp or rcl outsb out mov xor je cmp ja icebp loopne add mov dec sub rcll mov (bad) fdivrl int3 mov cld lret aas and cld dec jne inc pop repz cmpsl call dec jno mov dec lods aas int3 stos pushf dec mov inc mov cmpsb test les sbb jns sub in data16 adc xor out enter xchg frstor adc mov mov push outsl clc jp shrd pop repz and pop stc sti and adc sbb out scas (bad) sbb movq ds lret in inc fisubrl ret jg js das aad jae mov aad mov jae popa cmp insl sahf jno dec jg movsb adc cwtl push push pushl hlt or test test test and add cs and jp jns sbb dec sub add daa xlat pop arpl test and jmp pop imulb lods jb cmp pop stos mov cltd cld cwtl jp and testl jle int loop arpl popf dec sub xchg mov xchg das jmp fldenv sub mov lock or xchg adc loop xor adc xor movsb cwtl mov (bad) lea mov cltd out pop xchg fstl inc dec dec movsb in pop addr16 xchg sbb or aas outsb adc roll jns int nop addb mov mov daa packssdw int das insl adc stos pop cmpsl mov hlt out jge and out nop pop inc scas ds cmp outsl xor xor pop fcompl aad or inc adc cmp ret dec cmp int3 xor pop or jo add sti fsts decb xchg mov out das jecxz ret adc push ss mov push aas scas fs mov lcall and push sarl mov int3 or jne out fistpl add and sub add push add and inc cmc and dec loopne sti push sub lret fdivrs mov jns xor pop or (bad) popa jge js xchg stc and mov mov cmp lcall jo xchg push sahf push loop lods mov cld sarb loop fnstcw aas xchg ja push xor mov or adc xor fwait lcall sub lock andl mov (bad) mov popf rcrb in mov ret fimull sub pop or into mov (bad) mov cmp or and inc sbb jl std clc or es adc dec xchg inc xor inc gs clc imul lret outsb imul aaa mov jns or xchg inc sub fsubrl sub xchg jge stos (bad) mov pop out xchg mov repz sbb jmp inc mov jb fwait iret pop js outsb shll repnz test dec dec fadd movsl push pop dec add fwait imul sbb call dec lods push mov rcl movsb jg mov fisttpl add (bad) jle mov (bad) movsl clc inc stos imul jno jnp (bad) nop imull add sbb jnp je push shll sub mov jmp rorl divb inc ret mov out jmp sbb inc xor sarb fsubp test outsb or dec inc cmpsb pop push addr16 out (bad) (bad) push mov nop mov pop imul xor lahf fsubs jg test fsubl inc xor mov or mov push inc (bad) or push rcrb jae in jecxz std (bad) pop jo js aad adc sarl push push add rclb mov ss in dec adc out push inc push jecxz mov fsubrl nop push jg nop sahf push sub sbb (bad) pop shlb rcll and scas pop fdivs xchg jb or cmp and mov mov mov push mov (bad) cs pop and push rclb cli (bad) cld insl cs sarl jbe mov popa faddl inc mov (bad) mov es rcrb inc sub js mov inc fwait test clc jle mov mov pop mov fstpl sbb mov jecxz jp sbb jne xchg fisttpll jecxz ret cmp rcr out (bad) xchg cmp (bad) add loop daa pop mov xchg dec (bad) mov cmpsl js fidivrl push dec or and aad stos push and mov (bad) loopne inc fisubl and notl fcomp fsubp outsl in out sbb jae xor mov (bad) addr16 push mov xor lea test xor mov add cwtl pop inc jno pop repnz leave cmpsb mov aam cmc adc lret js xchg leave (bad) sahf or bnd (bad) lock or nop mov fbstp jp jne aas test pop xchg bound dec js push js insl sahf shrb movsl or pop dec rcr add lret or jnp dec pop aas cmc jns popf and pop sbb fbstp mov add mov inc lock enter push bound xchg mov mov cmp jle aas gs loope pop mov jle,pn (bad) movsb jmp jmp icebp mov xchg (bad) repnz (bad) addb out je fnstenv xchg es mov sti xor scas inc adc jp insl rorb lret sbb arpl sub daa sub cmp movsl mov popa gs int dec inc scas fldt inc mov xchg negb sbb cmp xchg (bad) insb jae cmp mov mov shrl or aas push addr16 adc popa pop mov xchg test sbb fldt int3 inc das das cwtl mov push adc (bad) xor jg out es pop lods shrb pop leave mov pushf and aad sti mov jg xchg call inc jg sub cmpsl mov jle pop xchg insl pop sbb xchg dec ret push sub dec (bad) in in lcall insb cmpsb jne or or mov xor xchg fdivrs inc out xor cltd (bad) pop xchg mov pop lcall adc repnz repz (bad) dec out cld mov ret mov mov (bad) rclb xor jnp jp (bad) mov sti cs (bad) xor and imul add xorl ja idiv mov outsl js arpl aad and fwait mov mov xchg inc push mov dec sbb lds jle pop sti xor stc addr16 fiadd pop outsb or lods loop repz es jb adc les jmp jle add es cmp aad dec rcrl cli scas stos ss push fwait jae outsl push ja lret in add je jle or jnp cli inc popa sub ficomp hlt push sbb dec imul jb aaa or inc jo and addr16 jg mov add pop inc cmc popa jl sbb insb pushl sub mov xorl addl fadds mov insb test adc jmp jno sub cmp addr16 mov jbe sbbl xchg jne sbb mov inc test push lahf movsb in ds mull jl cltd jmp inc les push push dec jecxz fistpl lods test fs pop push rol or fs sti jne (bad) outsb mov xchg sti (bad) pop jp test xchg sub mov clc ljmp cltd and outsl push shr aam fistpl jne mov jg push decl dec xchg push pushf inc rolb mov icebp sub dec inc std out push cmc xor push mov inc cltd cld pop mov sub jmp aaa push call fimull cs fistpl push ss dec rep dec jae js push inc cmp dec xor icebp fadds add out adc add xchg push out je mov push aaa fistpll scas mov adc mov sbb jg push imull daa mov jle inc jns rcrb xlat lcall mov jl pushf lods pop add bound dec in xchg call test push les inc pusha or iret ret int adc incb outsl mov and sub mov out and and into cltd ja sbb insl jne loope jg fwait cmp jae adc cmp test dec pop in pusha push mov pop jmp and mov sti push dec sbb push jp inc xor cmp cmc aad sub adc stos movsb mov mov xor adc dec cmp jo jecxz adc div jae or andl fldt roll xchg mov mov pop dec push cmpl jl push mov jecxz imul xchg inc mov repnz pushf jbe bound lret xor ds lcall pop imul xor jb lods pop mov int push jecxz ja movsb sub les jno push mov and into and inc ret or lahf mov stos xor sbb ficompl mov pop push pop call lret test jbe rolb inc nop dec push fistp jbe gs (bad) cmp fstpt mov in adc lods imul inc sbb test mov lods mov mov in dec or xchg leave mov mov pop imul jo push fimull test je fs outsb es or add push fsts cmp add cltd in jnp movsl fwait (bad) lret roll xor jge mov pop inc pushf test enter cs pop jl imull clc popa xchg xor idivb mov (bad) mov out push adc jns jbe add cmovl jmp les mov xchg cmp xor imul (bad) fstpl (bad) lret out lods jnp xchg adc outsb lods dec mov addr16 mov faddp push or iret xchg clc out mov popf movsl jne xchg ja jne out xchg dec xor mov daa int rcrl cmp add test inc pushf xor mov xchg je fsubrl gs mov mov mov das jns mov arpl xchg cli mov lahf mov jo xor adc scas or jne lock lock inc in lahf loop outsb inc iret ret adc stos pop out lcall (bad) mov jge in push hlt mov call jg ret mov sub bound (bad) ja cs out pop fpatan dec sbb fisub movsl mov cmp xor shrl (bad) aad and cltd (bad) pusha in lock ljmp divps mov mov leave sbb mov incl dec cmp push repnz mov cmp andl add shl mov dec aam fstpl lods imul sub jno add ds add repz cmp sub xor inc popf lea add xchg inc bt aas popa dec mov gs jmp cmpsl sub jle mov arpl pop pop lds insb loope (bad) mov add dec movsb adc int cmp push mov loope cmp sub daa jl movsb (bad) scas fdiv loop mov cmp jmp ror pop lock adc stos (bad) mov push cltd (bad) cli incl and mov fwait out sbb jge fucomip jno mov (bad) mov fbld mov fcompl in adc fdiv push les iret pop pusha pop and pop rcrl xor sub (bad) jmp dec ds push addr16 sti xchg push and cmp (bad) pop (bad) fstl cmp push xchg or pop aad push jp rorb stos add int pop (bad) ljmp xchg loop imul lods (bad) aad cmp sbb jmp fbstp rcll xor (bad) adc aad sub xchg enter fisubr repnz (bad) int3 adc add mov or (bad) lret adc repz inc les imul jecxz out mov rol adc mov push cmp xchg (bad) xor (bad) add inc lods push push (bad) fldt ficompl ss dec mov ljmp scas ss add ds lods adc add mov adc je xor jns xchg leave or inc lret ja jb hlt int loopne repnz inc mov scas aaa mov ret femms xchg jmp sahf dec sbb pop imul mov ret jns lea and je mov out movsl mov dec test xor rol push movsl pop or push rorl inc into sarb jne inc jne out inc jbe cmp es dec jg jmp pop pop cmp adc xor cs loop int (bad) insl xor jne adc dec jne fisttpll cmp or jg test push jmp sbb lds (bad) xor mov movsl mov push mov mov popf dec xor icebp ret jae in cmpsl fcoms xor into cli jg notl enter adc ror mov shlb lret loope je (bad) cmpsb enter enter push inc inc dec cmpsb sbb mov call icebp push add xchg push fnstcw (bad) aam popf mov (bad) (bad) test dec (bad) push stos fisubl mov std push ret icebp xchg push dec add or fld cli movsl jle fsub adc or mov cs mov jno jmp outsl push xor mov loope adc mov cmpsb and (bad) xchg xchg jecxz and jae icebp mov daa mov add mov das adc push ret clc and shrl push fs jge sar push mov adc or jp test pushf ja add xchg jmp mov lret mov (bad) insl push int3 outsl clc jecxz mov insl cli mov or inc ss adc in mov mov jns sbb sbb movsl shr lds (bad) push iret clc fiadd test insl add outsw imul (bad) mov jb jge leave xchg adc jns repnz jecxz pop cwtl sub dec inc icebp dec cmpsl xchg outsb lcall cmp (bad) fildll inc aam push sbb push inc mov xchg (bad) daa (bad) roll fwait retw sub je lods aam sarl sub movsl in mov mov dec sbb xlat fwait pop adc in add pop scas xor add leave das cvttps2pi mov icebp xor sbb pop jecxz adc lret stc fmul pushf nop addr16 rcrl jmp sub push jno (bad) stc or mov and out repz rclb dec mov add je mov adcl xchg jno or pop adc inc mov movl xchg (bad) in or mov mov mov inc aam pushf sbb inc xlat dec leave jmp sub adc push or push mov sahf xchg sbb cmc das push mov mov or in push aaa xchg xchg std cmp and or jl lock lods adc inc (bad) and out fdivs xlat repnz mov pop dec (bad) (bad) divl jp and mov jle mov out mov sbb aas lret jnp cmp pop xlat call repnz pushf repz mov std icebp std test test (bad) in mov inc lret hlt popa (bad) xor push sbb cmp in or (bad) push cmp lret cmpsl aad cmp shr rcrb lods add fisub jo cmc pop push add fldenv and lods ret retw jg sbb xchg pop daa jle push pop dec je inc push xchg add ljmp js,pn dec in mov jmp mov jne sub sbb xor iret dec repz cvtdq2ps daa inc loopne fidivr mov cwtl jl insb mov shl jae insl aas pop and cld push lods movsl inc shrl pop and jne lcall (bad) xor mov cmc ss xchg and test sub sbb movsl scas out jge adc push pop or loope and jnp adcb ja cmp outsl fmul mov mov push cmpsb push cli pop cmpsl dec cmp cltd xchg dec (bad) cli repz mov jle into push into pop test dec movsl imul sahf inc mov mov push into test and xchg mov mov emms sbb cmc inc dec das mov and leave push xchg aad mov sbb addr16 push imul lahf jl js or mull (bad) mov or xchg aam xor cmp movsl sbb push adc mov mov shll or push dec push lret pushf mov mov (bad) into push push inc add push jp mov in ret jp (bad) lea ret sub pushf out lods pop jecxz orl fisubr inc dec mov mov inc notl lods or iret jbe jecxz xor mov jmp outsl rcrl pop fstpt mov (bad) repnz push (bad) out jg push sbb shrl icebp inc imul ljmp pop fisttpl daa dec mov rcrb inc out and shll cltd xchg lds xchg sbb ret push rcrl in and xchg inc stos jb clc and pop xchg pushf int xlat cmpsb mov xor loope add sub es jecxz inc push hlt gs lret mov frstor rclb lock out mov xlat pop sbb loop sbb scas sub loope sub addr16 movsb (bad) or sarl mov sti or icebp paddusw les add xchg jge lret ljmp dec jmp mov int push jmp add imul (bad) adc cmc pop push shrb jg mov scas adc sub cmpsl into cmp cltd call jp addr16 jb std fs sub ja pop movl push lds jbe and cmp rol nop orl dec inc mov cmp jb in leave cltd add sub ret push dec mov fdivr in fsub pushf jmp imul dec xor sub dec (bad) out bound xchg je inc pop pusha lds stos aam and bound (bad) (bad) jno dec cltd dec jno pop and push lds popa fidiv repnz jl test pop push mov pop xor push dec mov sbb das inc cmp add xchg test imul or dec mov xor mov push push xlat shll xchg in cmpsl mov and lods dec out rcrl jae mov mul in lahf cmp sarb push inc inc sub jns cmc (bad) fs or mov mov sbb fistl ficomp push std jnp sub in push in mov and in je (bad) loope jp or sarl add xor fsin push fldenv data16 nop push insb outsl outsb stos in push or rorb inc cvtps2pi cmpsb inc push mov adc stc pop push je xchg jne inc jbe jmp icebp or mov push pop xchg aad push fucomp js push inc xchg (bad) push neg sbb mov cmp xchg xchg sub and jge xlat loop mov lock lods movsb xlat mov inc xor jbe mov aad jo sbb cmp adc icebp xchg push mov lods adc fidivr add (bad) call hlt shll adc lahf (bad) jp add xor pushf popf or out call push (bad) test repnz push xchg and adcb jno adc call mov mov into jns stc mov (bad) and mov notb add sbb jecxz in (bad) jmp push mov or inc cli pop jo fwait inc (bad) lds insl cli mov adc addl xacquire or (bad) jo or add adc pop aas dec sub imul pop push sub lahf fsubrp xor ja jae dec pop int3 shrd adc mov fadds rcll cli test dec mov sbb jae sub push into fisttpl imul (bad) mov inc inc loop pop mov outsl popf mov mov sahf sub movb loop cmpsl aam mov jne syscall xchg mov cmpsb xlat mov movsl repz or pop int3 push (bad) pusha inc inc pop cmp lahf push jns cmp test adc mov stc imul xchg adc pop scas hlt out cmc xchg cmp and pop sub sbb nop shlb cltd xchg add lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov pop scas out int3 stos xor add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb fwait insl (bad) outsl divb mov cs (bad) mov xchg push add push add cmpsb (bad) dec dec in movl aaa dec mov cwtl xchg dec shrb cmp push sarb lods hlt cld out sahf sub in scas sbb adc cmp repnz adc xchg cmp jo fwait and pusha scas jbe cli in fnop adc xchg cmove or daa pop bound sub out inc push ja add xchg (bad) test lds sbb mov les mov (bad) xor push les push xlat ret mov adc mov dec (bad) pop cld push push mov (bad) rcrb ret pop dec mov mov lahf insb mov cmp xchg or sub (bad) dec nop shrl xchg push xchg les push aas xchg and fildl jbe dec and sbb cmp cli shl (bad) push sbb arpl inc or test push add push lret imull or push or mov in and leave insl pop idivl mov jecxz jecxz icebp sub leave (bad) cmovp and fimul inc pop sti push test outsb out ja sbb jbe repnz inc test adc fwait je imul jno out cmp jno pop cmp dec ret dec outsl lcall nop cmpsb sti jne scas leave add rcll mov dec inc jge out es pushf xor xchg mov out and mov dec icebp popf fistpll mov int3 and dec test add sub mov pushl jg sbb xchg cmpsl and dec jo xor mov mov adc outsl push fstp push jmp cwtl pop (bad) mov add xchg jle jmp xor sub stc inc mov jecxz enter std pop arpl pop fstps outsb jo sti xchg sub jg push hlt sub popa jne xchg sbb jmp rorb inc out fwait dec fwait xchg mov cmp fistp aad ljmp dec mov pusha mov cmp int3 lea fisttp mov into push int sbbl int3 fsubl pop pop cmc loopne test or test sbb mov inc adc pop mov ljmp sub jne dec into aad or sbbl push das adc jmp mov add outsb push mov xor enter jbe xchg mov and sub popf cwtl push xchg (bad) jge imul adc jne popa lods lea sbbb cmpsb sub inc push std xchg jns into inc pushf sbbb int cld xchg jecxz lret xchg imul push push xchg roll (bad) dec loope mov cmpsb (bad) cld fidivl or movsb dec push push ds mov fs xchg ds adc fist cmp popf push dec test lods ljmp mov cmp data16 out pop push push fistp pushf lcall in inc or and fimull leave push (bad) push sbb out adc inc mov adc movsb imul xor ja mov add inc hlt sub lahf scas test icebp incb mov fisttpl sti sub mov push push and or pop push imul cmp push mov cmp lcall rcr scas clc data16 push popf mov xchg fcoms movsl bound ficom inc (bad) rep (bad) sahf fwait inc mov xchg int cmp arpl mov push push notl adcl jbe icebp jle pop subl and les movsb xchg ljmp hlt or stc hlt push mov loopne inc dec movl push fmull cwtl outsb jge,pn aaa or aam daa mov and sbb gs mov mov ss outsl (bad) mov arpl xchg pusha xor cltd lret and ret in lcall lret mov je loopne push js and cltd bound xor out jne pusha push cmp xchg adc sub (bad) jno addr16 jno lods mov inc xchg repz fwait inc mov les mov pop xor xorl add (bad) int3 bound pusha cs popl add jo nop dec dec mov inc or jecxz (bad) (bad) pop jecxz mov mov sbb push shlb adc mov nop insl hlt inc (bad) cmpsl ja jl loope fdivp jnp call sub mov and outsl (bad) xchg sbb and and daa push inc xchg sub outsb push jecxz lcall iret ret or enter pushf jl inc cld add in aaa cmp sbb mov rorb xchg imul sbb xchg sbb testb negb and lret in dec stos mov xor out add and (bad) dec roll lea jmp adc or and fwait or loope jmp loope jl adc adc add outsl cmp (bad) lret es aaa sub test sbb loop lahf and pop imull stos cmp call leave push dec cld cli (bad) fnstenv dec ret inc jbe xor mov push or sbb out arpl and (bad) cs sub jbe out rclb fwait cmpsb or mov clc cmp mov stc inc sbb add lock jae test jp push xchg or icebp and pop push inc clc lret fisubl cmp cmpsb or cmp ficomp xor fcomip pop push dec sahf fimull sti jp inc icebp xorl pop xor mov xor mov add lahf fsubl outsl pusha fldl add mov lret jne leave push jne xchg fs or adc add ljmp insl das imull (bad) nop je mov je mov ret (bad) mov jg push jo daa in loope enter xchg aas out stc mov mull out xorl insl dec subb loope into subb (bad) cld aad call sbb mov fmuls mov and add mov xor sbb pusha cli sti stc mov test daa cltd ficoml jmp mov mov out ja stos inc lahf in cmpsb addr16 out mov les adc lcall insl ret (bad) cmp dec jp xchg (bad) movsb and cwtl test cmc icebp jnp mov and out pop cmc test mov faddl dec mov gs xchg scas cmp (bad) push mov sub pop insb or rorb lods inc add adc cmpsb lods (bad) mov (bad) xor js and push mov loopne adcl repz push repnz xchg mov aam jp or xchg hlt aas idiv xor scas gs in nop jecxz inc adc mov int3 jmp fs xlat xchg ds andl stc popa iret xor inc (bad) iret scas es nop xor add insl (bad) int push test into in jmp mov jb test or or hlt pusha test mov cld out mov outsb stos cmp sbb push and sbb scas cmp rolb lock mov lret (bad) xor daa sbb sbb inc hlt sbb idiv xchg scas call xor push in sbb mov out or (bad) push push pop pop outsl mov push xor add mov push jno push out mov inc aam in rclb xchg pop sub cmp mov leave cs test or int inc into jno cmp lcall repnz (bad) mov popa pop into xor dec test mov add adc and frstor std enter push sub cltd sub in out mov dec movsl pop jmp cmp mov cmp movsl push aaa insb fdivrl (bad) mov cmpsl push jmp repz inc aas loopne jns bound mov fisttpll (bad) and mov jp push mov nop dec and fs cltd jmp loope popf in inc xchg mull jno adc push mov inc shll sub ljmp xchg adc leave pop pop fwait orl idivb ja mov bound mov repnz mov mov add ljmp sub loop jae jmp mov je jecxz xlat in sbb add nop nop fildl xor jge mov push test stos andb rorb cmpsl push insl xor mov bound jb jge xchg pop jl push in mov shlb jo lods xchg test xor xchg lea xchg imul jns popf fs icebp insb cmp cmpsb add (bad) jo sti std ja js and out clc xor adc inc inc xor movsl cld outsb test fcom push rclb adc or dec pop cmp imull cmp rclb pop pop adc loop add hlt cmp pop mov cmp adc cmp scas shrl jne je in lret lods shll sub jecxz cmpsl pushf popf lahf shl outsb gs imul shrb xchg xor mov out cltd iret push jmp adc pop pop aam into inc into (bad) subl add jne inc pop je sbbl in arpl test xchg std push imul jne inc add push in xlat mov test ficoml leave jb jmp pop fisubrl cs jnp dec pop mov xchg push add push cmc in cmp fs stos jne push fcom adc mov jp pop dec and lods leave xchg fmull lods and gs int divb pop fucomip into dec std fild daa dec popa mov xor lea fnop cmp popl addl js loope aas xor mov dec movsl inc out sub ja cmc icebp aad mov add lea jge (bad) leave cmpsb pop cmpb sbb pop lcall repz lods adcl in adc aas setle inc inc dec outsl mov outsl fcom aas mov jne dec lret daa icebp fimul adc addr16 iret inc cmp mov jle add mov icebp test lds call in (bad) out xor mov test pop inc push testl aam pop sub stc lcall mov imull mov pop mov lret popa adc inc dec popa push call jbe xchg cli pushfw test add popf das mov jnp aas jecxz xlat in or loop out mov mov pop lret call jns and jno aas imul xchg lods add int sub rcrb lret (bad) fsubrl xor aaa les xchg sti xchg lret push lds dec jp mov mov movsb mov stos cmp mov adc mov scas iret movsl ret cmpsb in inc jmp (bad) mov push jp push cli mov dec jge adc das adc sahf add ja xchg imul cli and jae mov cwtl cwtl jmp data16 pop pop and data16 push je inc stc adc xchg pop push inc push pushf es in fwait sub mov leave test mov dec dec push js jo xor stc icebp mov inc sbb loop sbb faddl adc mov cmp fdivs jmp xor add orl push and insb mov ja xchg stos adc mov loope idivb push mov push and negb or cmp pushf pop lea sbb js xlat inc and int add xor in movl out sub test add push xor outsl or jecxz jecxz add mov cmp dec mov out jge sbb cli gs dec cwtl and leave lret sub jle adc mov push jp into arpl or (bad) cmc cmpl addb repnz jne es (bad) pop add cmpsl sub sar lahf aas mov jmp mov mov adc inc dec jno sub stc test add inc xchg mov ficomp js insb and std mov sub call adc cltd xchg (bad) movsb movsl inc jmp cli add cmc inc push mov daa ret dec pop sbb xchg outsl or mov aas push in cmpl mov cmp fisubrl std dec (bad) mov lahf cltd outsb xchg mov fisttpll pop or mov jmp cld sbb out add mov push aas mov xchg test in lret mov sub push in mov sbb jecxz add (bad) push loop iret push in xchg xor cmpsb jns outsb add inc mov imul mov out (bad) push xchg push test fwait sub xor mov inc loope and jp out iret arpl (bad) lea mov test adc sbb mov mov stos sbb push xchg pop adc jl or add push mov add inc (bad) fmul inc dec sub inc mov gs push repz dec iret dec inc ret neg outsl lret lds push out push sub std cmp and loopne insl push dec ja repz rolb pop in scas and xlat arpl (bad) (bad) js add outsb push xchg xacquire pop pop jp scas mov mov add mov mov clc jb lds add imul add out out (bad) into fsubrs aam (bad) xor (bad) rcrb call popf sti dec inc andl cvtps2pd (bad) in mov iret adc test push fnop adc push in test xchg adc pusha pop stc aam mov xchg pop shrl fiaddl lods sbb add mov les fisubl clc and ficomp fisttp loop push (bad) flds mov push jnp pop pop xor pop cs pop je xchg add daa sti (bad) mov roll test scas pushf fbstp dec xlat inc mov stos add cmp or cs xchg (bad) xchg bound or repnz enter mov push adc cld negb popf sub xor aaa test jp xor lds add xchg mov (bad) subl jno fmull or pop jno mov or (bad) lods pop jne xchg mov inc xlat cli fmul mov xchg and in lea mov mov hlt dec and addl adc fimull (bad) ljmp ret out xlat lods iret jb rorl xchg lret push out out in (bad) mov daa sbb add aas push lret lret pop sbb xchg push lds pop (bad) dec imul jbe sub cli test pop push inc (bad) mov pop inc in pop jbe mov rcl add pop ss mov in jb add fucomi jno xor add xchg sbb mov and lret std test shlb lcall sarb mov cli cli pop jnp lods mov stos lock jbe push push and pop es (bad) (bad) cltd push push lret push dec ss pop (bad) mov push xor or jns add ficom and jo mov xchg add rol pushf lret sub mov outsb out (bad) addr16 pop or cwtl nop push add sub pop ljmp idiv lcall push mov cmp ds or decb jmp fdivrl fcomps int3 jle aam scas adc pop frstor inc cmp cmp dec jmp iret negb sbb sub jns test lret test sub xchg hlt outsl mov hlt lods popf push cmp push stos inc mov lret cwtl lcall cli cmpsl and or daa cld cwtl xchg mov and mov pcmpgtb (bad) adc or je clc xchg popf mov outsl adc push push idivl fdivrp or mov insl cmp jnp jbe jo (bad) dec xor push mov lret in adc mov mov pusha mov nop mov jnp stos inc pushf cmpsl jne pop mov or fstp lds push (bad) jne popa pushf push push mov cmp movb jp insb push xor mov dec pop sbb iret adc rcll out jbe clc adc dec mov (bad) loopne aaa sbbl (bad) repnz pop add js push mov adc nop push movsl popf push push jns (bad) mov cwtl and or cld mov jle stos sub int3 bound (bad) xor push cld fwait jge sub sub stos sbb stos and push sahf pop cmp enter (bad) cli out jmp mov iret jle push mov dec xchg lods pushf outsb imull xchg jnp add leave in (bad) cld mov sbb and mov mov adc mov jg lock adc cmp mov les or test hlt fs loopne out cmp cmp pop push addl aas repz add jl jbe and enter cmp mov dec cmp push mov push jecxz jns aas add mov xchg loopne lcall stos scas lods and push and cmp iret xor test sbbl pop fbstp fidivl test in fcomi mov pop lret push cmc sbb shll sub loopne lret push mov mov (bad) (bad) addr16 xlat icebp or jl neg pop cs pop popf mov inc sbb jle sub dec mov pop lock (bad) pop adc sub scas or gs jmp daa scas adc push mov and aad out or popa cmpsb xchg jne cli jns rorb scas mov movsb push out mov push cmp shlb or lahf jecxz rorl (bad) hlt mov movsl jae jl sbb in mull xor push and sbb cmc divb inc scas xorl lret scas push cmpsl cld fmuls mov jno mov inc sbb xlat lahf jae sub fwait push and scas loop psraw xchg repz and push int sbb jmp fsubs in test cli sbb (bad) sub pushf popf mov dec or sbb (bad) mov pop insl btr aam mov jg stos std xchg test ja adc (bad) push push ss push dec loop (bad) in mov out aas out arpl in ffreep push adc adc adc (bad) (bad) iret bound sub dec test inc mov insl (bad) int3 adc aad sub sti sbb orl pop pop fimull sbb push pop (bad) repz pop or mov and xchg add lock outsb dec mov mov mov arpl test sbb (bad) loop sub jl rclb pop lea pop mov ja mov (bad) push and inc or lock xchg loopne dec dec adc jp pop mov dec test das data16 (bad) cs sbbl or std dec lods jg movsb mov jle data16 xchg push lret scas cmp xchg jmp out mov mov aad test (bad) out sti add int lea test cmpsb inc sub ds sbb or incb sub movsl sbb or fwait scas inc xlat add mov add and popa mov loop (bad) je lods pop mov mov jae adc ja fistpll mov pop push fidivr or das add imul xorb je pop (bad) mov cmpl xchg sahf ds fnstcw stos ja mov jmp inc mov mov popf adc (bad) mov popa jne jbe pusha scas stos outsl add ljmp (bad) iret ror std sub inc rcll lods call (bad) push xchg sub push pop fs mov (bad) adc pop popf ljmp add inc mov (bad) fmull jmp pop rorb push push icebp adc xlat (bad) out inc jnp int push pop mov jb fs nop dec or cmp dec js jle mov sbbl dec sbb ss (bad) fs sbb aam sub push xchg (bad) xchg stos scas jp inc or inc fdivl test jb rorb mov mov cs int3 aaa jp ja push movsl sbb adc inc and (bad) jae mov imul sbb mov dec fistl and repnz or popa adc inc push add cmp test jmp (bad) jno jmp (bad) xchg sbb call xchg jns and adc das push fcomps addr16 sti mov ret jmp sbb js dec jle or (bad) notl pop cmp inc scas or and (bad) xchg ja mov or jb and inc aas mov icebp jno xchg sub bound cmp mov fistp jo,pn andb mov and (bad) lock popa mov xor push push xor cmp vpaddd mov add and clc sbb inc pop xchg and sub arpl mov jne and inc bound pusha mov mov mov loopne,pn (bad) mov inc stc lock push js mov mov popf insl loopne xchg push sbb arpl push and sbb mov in outsl xor daa xchg (bad) sbb xor dec popl ss test (bad) cld mov cs dec pop mov jne jo leave fwait jg cli dec cmp fistl pop outsl xchg (bad) cmp jnp std mov cmp or xchg pop loopne dec cwtl loop fistpll adc mov gs pusha jno bound test orb adc mov popf mov cmpsl mov jmp jmp mov mov arpl lods inc (bad) frstor xor call pop std mov inc rcr fiaddl add pop pop fwait stc sbb xor push adc sbb js jp bound mov pop inc add mov mov mov pop cmp and dec test orl in ljmp mov fwait push inc sbb int lods cmp sub inc push fisttpll and mov fisubl test sub adc sub rorl fmull dec xchg pop push cmp sub pop push arpl aad mov in sub daa imul shl cs je (bad) in pop fsubrs sub cmp gs test xchg loopne nop pop test pushf mov push (bad) ja iret push sbb xchg pop push push int sbb sti add ds fmuls cmp pop cmp mov lods scas out mov sahf pop xorl push mov cmc jecxz xor xor mov jge insl cmpb cmp daa cmp pop xor sub add add xor pop pop mov imul or hlt (bad) xor cmp (bad) cmp or cmp sbb dec jno sbb cmp das roll jp cmp sbb imul aad inc jle divb xor fst jns mov (bad) xor dec adcl mov fildll mov sub fwait shl les mov and mov fs cmp or jns mov (bad) (bad) pop push jp bound out data16 mov popa aam inc aaa inc or outsl (bad) push xlat orb stos movsb cmc ljmp fdivs jo mov fcompl fucomp in mov insb sbb push adc xchg push ss decb mov xchg or loope stos rol mov pop lret out lret dec inc lret popf (bad) push dec or jmp lods (bad) add (bad) sub dec or mov adc mov lcall imul insl mov std rep addb out jne clc in dec test mov xlat mov push insb repnz jmp add cs cmc or mov sub xor mov mov and xor (bad) insl sub lock lea cmc add stos xchg ret dec and scas mov adc xchg inc dec cs adc rcll ret xor hlt xor and aam sbb rcrl std test fs lahf inc inc cmpsl pop bound scas ret cmpsb push xchg fs pop scas mov xchg int3 in pop dec in dec or ret outsl jnp clc (bad) jb ret outsb inc mov popa repz sbb or insl cmp push movsl mov daa push jo movsb scas sbbl (bad) hlt cwtl mov aad fdivr sub push dec lock jns cmp jae sbb jg incb out jns mov inc lcall jnp mov xor mov xchg push dec test sarl xor pop lock sti add cmc push jno test jmp and jge mov jp mov in lret fsub (bad) (bad) cmp out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz add pop in jmp pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push bound adc dec sbb mov fdivs (bad) insl mov idivl pushl add mov add pop lret pusha dec fwait test mov clc pop js add xor rcl xor enter stc iret push aas loopne sub xor movsl div mov mov mov scas cmp fwait js xor pop mov dec or inc call pusha loope mov push sahf imul pop xchg ds dec push (bad) sbb xor aas and push cmp fmuls lret xchg and inc cmp insl add cld pusha mov popf iret call shrb mov loopne pop adc adc rolb inc add loop mov push pop es sbbl stos xor cmp in mov mov mov imul push lock inc push aad ret aaa and insb sbb adc movsb scas movsb js pop (bad) int lret or loopne cli aad popa xchg insb popf jae stc dec adc mov inc daa enter mov push inc imul insb dec xor inc push enter (bad) out aad add sarb inc les mov jo movsb sub pop rorl pop jle sbb add push jbe mov (bad) cmc sbb icebp or fidivr inc shrb ja out mov and in inc and call rcrl cmp negl mov mov ljmp mov dec mov push adc in and pusha lss and leave icebp (bad) sub icebp mov (bad) jae sbb pop jle rolb adc aad shlb repnz inc les cmpsl push sbb test fwait aas imul movsb pop outsl mov in int adc xor jae pop xor sbb sbb stos or xchg fnstcw or arpl fucomip in jae les xor and enter mov inc daa push sbb or sub dec jg lret js xchg dec push pusha mov adc jne mov mov sub sbb int3 jo pop lds addr16 or ret or in adc mov aad dec jge jnp clc lret mov xchg (bad) test sub in dec jp jnp cmp and cs aam test pusha in movsl adc or inc or je notb jb mov sub add adc lret sub mov loop jle mov push bound aas jg call (bad) jo cs jb mov push dec jb mov mov ds or (bad) stc inc sub (bad) or dec cmp iret dec lcall xchg sbb (bad) mov or out cmp icebp (bad) mov mov add test xchg (bad) mov cwtl push and cmc mov sbb pop inc sub orl sarl aas in popa imul scas or add xor test gs or mov sbb es ret dec push jg add icebp fist imul lcall cli inc mov inc lock aad clc (bad) push mov dec xchg leave cmpsb aaa mov stos imul out stos sbb arpl lods jne cmp sbb push jb and movsl mov cwtl sarb dec lret insl lea sbb addr16 inc stos adc test loope aad dec push mov nop push dec push pop add jp mov sub je out subl jns jnp into add pop jnp loop mov cs mov or repnz decl in setge rcr repz es jmp fs out jg jecxz lret sti int push mov cmp js jnp (bad) out jns dec cs jmp mov inc sub (bad) test sub call pusha div cmp notl (bad) sti mov insl ja mov ja mov notl dec adc outsb js jo cmp sarl mov or push pop dec std pop aam fwait hlt bswap or and cmp daa iret pop add jb (bad) std push xor mov out lcall inc cwtl jle jl js pop adcl stc push pusha xchg inc sub dec xchg xchg push push popf pop loopne add popf mov sub ficoml popa lods mov mov pop call imul test nop sub imul bound inc leave mov mov popa lods ds adcl cmp mov pop outsb jns int mov mov daa pop insb clc jb cmp sub push shr push rcrb cmp sbb imul ret lret fs mov out mov bound mull dec sbb mov or scas jae subl (bad) cmc js insb push in xlat sbb add enter ja mov loopne xchg cwtl into clc (bad) cli fidiv jnp push inc sub mov jmp lret cmp test (bad) in xor and push jnp mov cmpsb jecxz mov sub sub inc imul lea out mul xchg hlt jp cmp ficoml push adc fdivs fisubrl out and insb ja or xchg jecxz mov test xchg or mov gs cmp repz sbb inc adc cs cmpsl inc test pop loop in pop xlat out (bad) in fwait lods lock into (bad) je test add sub out xor pop cmp fsubrl jle daa lds movsl frstor adc out shl mov loope daa and cmp add sahf xchg mov stos insl adc xchg (bad) fdivr sbb ja lahf xchg cmp sub jno jno cs jns es rorb scas pop jae lcall or (bad) or or adc ret movsl iret cli xor out ds cltd rcl ret iret sar cmp cmpsb mov or sbb js jb cmpl adc cmp cld (bad) mov mov lea adc pusha (bad) ficoml xchg pop mov repz imul pop movsl xchg mov dec sub add or mov fcomp and loopne sub mov cmc gs mov cs sbb js sub mov sub sbb xchg pop xchg popa inc mov shlb movsb gs aaa mov sub sbb add push and xorl lahf lods shlb ret mov sub and cmc push mov cmpsb mov adc insl inc lret lea mov lock in pop clc push sbb loopne popa (bad) nop stos out in ret ret push in jae insl insb inc and mov jg loope mov popl loop fidivr lcall dec mov mov (bad) out xor testl data16 xchg ret int adc mov sbb call pop sub mov xor rcr in sub btc aad jp cs iret in cmpsl jae int add mov adc jae divl dec sub mov inc insl repnz mov mulb pushf daa les inc inc xchg or je dec cli pop jmp lret mov jo dec hlt xor lret mov fmull (bad) mov pop push and mov or cwtl inc daa mov ds mov cs xor cld sar and mov out inc xor or xor movsb aam dec inc jle pop sbb (bad) fidivr (bad) mov lret push stc sbb into nop sub sahf lock lods push mov cmp jbe push int3 int lods jne pop jl out xchg mov out mov xchg adc sub stc push push ror loop lods cld mov scas pusha mov pop ror xchg xor jnp push je pop into xor fnstcw fs pop negl or sub sbb mov and push pop sbb dec scas call and mov jo imul lock push jbe cltd (bad) jno or jp in ret orb out in push adc in sbb in test mov mov mov fldt fmuls jp cltd or inc notb sub dec xor pop shll repz dec and mov sbb insl cld scas bound mov adc adc leave jg mov pop push out gs xchg mov int lahf xorb cmp adc sbb and movsl and and mov cli mov and mov jmp aas popa rep repz mov or lret push sbb pop or cmp mov sbb lods (bad) pushf dec js dec les add add add mov es pusha lret and (bad) hlt out mov push push gs nop scas test mov fisttp in and (bad) pushw xchg in pop hlt pusha sbb aas std es push fadds xchg jecxz mov or fwait rcrb jge pop fsts fdivs sub les outsl (bad) lret inc rolb lods sarl pushf aaa mov ret shrl or popa in and in fcomps or scas lods leave jb popa add jecxz scas (bad) mull cmp pop dec aad push jl add out js ljmp lea mov movsb stos movsb mov push or adc int stos addr16 outsl inc jecxz in test add mov mov (bad) cmp (bad) (bad) mov fs ljmp stos test scas xchg insb or loop int3 sbb add cltd add sbb (bad) hlt push enter scas test (bad) mov fwait xchg test push insl mov jns dec ds mov gs or test (bad) shrb ret ret xchg hlt lock inc xchg push mov cld fwait out push pusha jg cvtps2pd push pop push je int inc popl xchg rcrl jge push inc std xchg xor outsb mov rcrl xor neg xchg out sbb lea mov scas adc aaa cld leave js xchg (bad) sbb push lods rcrb pop imul jns push jb push rol add pop in jnp and stos mov cmp xor pusha jns outsb lcall sub mov je loop inc lret cmp (bad) imul in aam adc aas call sub jo fimul loopne or adc loopne das and pusha icebp inc aam cs fisubl test cmc dec adc adc ja out sub inc (bad) xor call (bad) jge loop fsubrs sbb add nop lods cmp cltd popa (bad) sti xchg mov mov push fisubr or xchg test xor out sub cmp negb mov inc enter adc (bad) out adc movsb mov mov jo repnz cmp ficoml mov xchg lods pop or pushl loopne xor sbb cld fs push imul insl xchg inc or jno hlt push ds adc xchg add mov or icebp mov js add adc xchg inc insb sub test (bad) cltd xchg or addr16 (bad) js arpl mov lret lea jbe ljmp push mov and lods cmp in sub cli xchg cs jb test aas sub cmp pop pop (bad) mov loopne dec adc sahf lds pop sub rcrb adc js imul adc jg xor adc sbb fistp inc js in ljmp mov sub imul std jns inc shll push cmpsb movsl adc stc xor add fist sbb sub lcall ret imul call mov arpl mov lahf cmp cmp (bad) push cli inc add faddp rcll shrl mov dec cmp mov jno dec push call divl xor dec cwtl mov mov sahf push fdivs cmp mov cmp or sbb xlat ret aaa iret loopne dec cmc into mov out lods inc mov pmulhuw pop lods or xor clc lock mov pop pop mov lock imull lods icebp nop cmpsl ljmp mov cmpsb int cmc mov jns fld fstpl dec jne repz loopne jmp pop and pop mov mov pop dec (bad) mov xor xor mov mov (bad) dec aas inc push or pushf cmp movsb fs pusha cltd gs mov stos ret shlb jb fsubl mov aaa xchg mov adc rcrl into sub fdivrl mov sub negl cmp lret mov ljmp mov inc add mov (bad) mov pusha jmp test fdivr pop push jl (bad) call pop jbe aad adc xor inc das int dec ss add out dec das ss lret inc fildll mov push xchg repnz pushf movsl adc xchg inc or jno repnz (bad) jo sub add enter stos rcll fs or xlat lcall nop ds pop sbb not and mov fcmovnbe aas sub push inc inc xlat add push sbb (bad) lods outsl loop ret mov loope movb push shr dec or mov imul xchg add shll lret (bad) jg cmp xchg data16 mov jbe insb shrl lahf pop lea mov fcoms push inc in in popf cmp lock inc lods (bad) jns dec outsw jnp jp xchg scas (bad) lcall (bad) daa inc inc (bad) das push jb out pop sbb pop fbstp xchg cmp mov rclb xchg mov mov lea outsb dec dec loop jo fisubl daa mov xchg cmp pop jecxz push jp aad (bad) mov in sub jnp imul push pop sbb and mov and jbe fcomi adc into mov je xchg bound pop mov adc lret bswap rcll sti out (bad) pop imul fwait insl insl in pushf cmp ljmp mov jae sub fwait hlt mov enter pop or mov pushf or icebp jmp ljmp je adc xor aam jge int3 (bad) xor pop or sbb push insl cmpl cltd mov lret mov pop enter dec leave push bound xor mov repnz lds loopne dec xchg icebp push xchg sub aad popa add nop dec mov and fdivl mov (bad) scas sub mov mov mov mov aas xor pop in pop lcall mov mov iret mov add icebp or nop frstor cli xor lret fdivrs popf or movb jnp mov jno mov jecxz ret in clc pop lods xor fwait cmpsb xor mov ss in sbb mov std shl outsl ljmp cltd ret or outsb pop frstor mov insb inc xor divb xor and jne jnp inc push mov jp loope mov pop sub aad cmp xchg test pop cli sbb into push popl mov and and xor call je sub call mov insb adc push xchg or push sbb xchg sti sub pop test add xchg push fldenv cmpsb shrb cmpsl rol mov fnstenv pop in xchg sbb mov cs ret leave shlb xchg imul adc jbe add adc xchg push inc popa pop scas lahf jno mov rclb in and add inc jmp jae dec cmp cmp daa cli and fnstsw enter int3 or popa mov pop xchg cwtl lea outsb sbb out xor mov mov sti jno (bad) xlat mov push push cmp (bad) mov pop fs and cs lods in out sub mov inc roll mov rcll pop int pop mov mov and outsb ljmp arpl outsl mov imul jbe stos jns pop jecxz and enter dec cmc pop aas cwtl loope and adc loopne mov jg pop xchg shrl inc push sbb push pusha ds lods dec ret aad int push pop mov pop outsb jecxz mov cmp sub rcr pop push arpl mov iret (bad) jno adc fs cmc sub sti pushf xchg fnsave in pop cmp (bad) test cmpsb cmp mov inc mov mov dec mov adc (bad) sub pop mov scas sbb scas lahf or fildll ficompl mov out out faddl pop call cmp add outsl dec inc lds daa cmp lods xchg decl inc lahf push (bad) fmuls (bad) pop inc call xchg mov pop xchg lea (bad) ss xchg pop pop ret xchg (bad) cmp lret imul xlat push mov stos ret rcrl (bad) mov fxch adc add xchg ja or sbbl dec sub push or into add adc or mov mov js cmp popf (bad) (bad) mov scas jno mov mov loope (bad) iret fstl sub cmpsb fadds leave push mov mov sub mov mov fbstp pop mov repz xchg daa js sub inc or addr16 imul stos test andl mov pop adc jle shll dec sbb shl fs in hlt clc in xchg inc push jg push pop int loopne sahf inc sbb cvtps2pd movsb inc jg cld std inc sbb lahf bound cmp ret lock sbb cmpsl pop mov and jp push xor cs and (bad) jne aam inc clc pushf pop add cmc cli push lds ja imul or push test jecxz xchg xlat (bad) icebp jle push fdivp aaa xor test (bad) loop jae push and jecxz mov jns xor icebp push fldt vandnps pop mov and cmpsb or or (bad) push cmpsb js inc test add xor andl xor push sbb sbb lcall jbe jne mov inc call test loop ljmp mov cli imul loopne or and sub ds push pusha pop stos jge xor inc jg int add lahf xchg cmp (bad) call or lahf dec insl and movb data16 (bad) push jbe nop (bad) sbb mov das push jge dec hlt test shrl push dec sbb sti insb mov test loopne jns lods enter popa cwtl mov xor push cmpsl inc jno pop inc (bad) pop mov cli loopne in stos xchg cld nop pusha dec jge fldl cwtl lock dec ss inc nop mov js push push andl inc fildl loop pop test dec fnstcw mov arpl lret insl ret mov fild imul imul fs insb cld and or iret mov shrl pop pop xchg xchg xor ret gs pop cld ret cltd jbe insb sub bnd xchg dec sti or pop (bad) call jae cmp cmc push pop in sbbl lock and adc bound (bad) nop ja xchg or scas ret jp jmp es xchg call lret xor inc into sbb lcall fisubrl xchg mov pop test movsb roll jae cld mov mov xor dec jne cs mov xorl and xor and pop xchg pop enter pusha push ffreep jno ljmp outsl fstpl lock int fbstp js outsb pop and sti or xlat adc addr16 test mov lea cmpsb xor cmp enter loop or ret lods nop xchg icebp loop js add out in or cmp sub (bad) mov mov lock push sbb mov jbe jmp inc fisttpl outsb mov jo mov fcmovnb ljmp push adc inc jns out fdivp addr16 sbb mov lds cmpsb fwait lret jg fistl cltd inc mov sub sbb inc xor outsb mov notl fnstenv add call push ja (bad) lea or test sub add shr stos jp xor pop mov mov outsl bound cltd jle inc fidivrl shr imul rorl sahf lea adc and dec scas je pop pop pop cmp jmp stos inc adc pushf mov cmp sbb push pushf mov shlb lods cmp mov sbb shl fistl inc es mov xchg (bad) jg pop pop sbb inc orl clc xor fwait cld xchg dec std je or jle and aam add jae dec mov out push dec push xchg xchg adc xchg and pop mov lret mov in cwtl fidivl fistpll mov leave xchg push (bad) mov pop scas or loope cmp imul push out movsl (bad) sub mov pusha jg xorb jbe outsl stos mov dec sub inc mov (bad) or call adc xchg out mov push and xchg fdivrs outsl sti pop fwait (bad) arpl push imul imul sub lds mov cli fdivrs ret (bad) xlat pop mov or arpl dec dec push inc sub pop sub pop add adc daa push push fidiv pop sarl jle push dec push test jne icebp or neg jp lods or sub xor pop pop jp push push js test xor cli out add data16 lods and ficompl dec test sbb add add xchg imul pusha pop and push fmull sub and shlb aad cmpsb lahf (bad) imul sarb sub or insb test fucomip pop rcrl push addl push cmpsl lahf insl scas cmp (bad) mov addr16 pop cli out push mov mov inc mov push dec in sub push dec cmc dec imulb cmp push pop ret fsub pop xor xchg repz inc jnp lock inc pop mov mov std in ret adc dec jp,pt stc lods into cli xchg or aad stos xor push jle vandps push jg dec mov das dec adc or int3 and and sbb xor cltd lods fidivr jbe (bad) inc jecxz lods lods mov inc push decl cltd adc cmp cmpsl loop mov mov push cmpsb or ret out sbb ja push fnstsw scas jl rcll mov sbb out add lds add sbb jl cld adc orb jns call mov fistpll sub outsl int3 notl cltd addr16 int fdivrp fcmovu push cld sbb int3 sbb gs dec movsb in xchg adc xchg unpcklps into cmp sahf rcrb fwait and mov jne push (bad) jle aad popa xchg push adc ja adc jp mov mov cmpsb sahf jbe leave je jo dec pushf push mov aam sahf (bad) xor cmp jg push ljmp mov xchg bound mov test push fld inc xchg inc pop mov sub dec imul pop fisttpl inc shlb push adc inc movsb mov fcoml mov imulb dec sub punpckhwd mov adc jns dec mov xor and sti or ret (bad) hlt divb jnp fisubr bnd test (bad) loope jg adc mov orps pop dec inc xor cmp jmp push push addr16 daa mov cltd jnp ljmp incb fnstenv mov cmp cmpsl mov lcall cmp pop test add adcl test aaa xchg jbe fimull jp inc (bad) int popl mov xchg xchg sbb sbb adc int3 mov cmp call inc into adc cmp mov daa pop stc hlt test lods divb lods fisubrl fbld adc les push mov outsb fstps lods mov ret fldenv icebp scas sub mov test add out aaa jge in arpl inc aad movsl pop movsb scas stc arpl xchg push out sub dec xchg lea mov in xor nop dec or lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov xchg nop (bad) mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb xchg pop xchg insl fldt insl fnstenv pop (bad) leave mov sahf xchg insl fistpl push cmp add in add fidivl enter cmpsb dec dec pop mov and (bad) out test sti in sbb out jae test jns and test sub lcall mov testb pop movsb pop mov js inc stc pop pop into jp,pn test mov xor cmp inc cmp shlb xchg cmp dec add rcrb mov ret xor cld jbe cmp jno mov push sbb dec je dec gs jg and add pop mov adc call (bad) (bad) dec dec xor (bad) test jle scas mov push mov pop inc pmulhuw xor int loopne pop popf and adc int3 and into pop aas pushf mov fwait (bad) out xchg add jge lock out mov mov xor mov aad cmp pop inc movsb xchg rorb cmc lret imul inc xchg hlt sti mov dec ds popf inc mov push lods dec lcall mov adc adc add (bad) or in lock lods jg jbe or adc inc sub out xchg sub out add jnp repnz jle arpl adc pusha mov (bad) aaa pushf or add fdivrp pop sbb mov xchg arpl dec ja mov enter mov pop imul test adc xchg sbb fisub in incb push inc enter push out rcrb pop pop or sarl mov lds lea (bad) sbb loopne push adc adc stc or push sbb add hlt insb sbb mov mov pop test stos call push arpl jle stc sub jbe addr16 stos lods mov inc push mov mov push nop in and test cltd xlat into cmp sarl pop jg jl outsb iret sbb cltd sub jne sub sub adc rorl ficomp push sub jnp lock fnstsw repz stc insb loop add sub popl aam loop scas fucomp push inc sti xor xor insl add cmp sub add mov lods fcompl inc pop mov lcall mov cmp (bad) out int adc sub add xor sbb add inc or data16 mov or (bad) mov lcall mov push xchg inc testb sbb jns mov (bad) int mov mov int add stos stos dec ret int xor mov sub mov pop leave mov idivb ljmp push pop test push xor lock jae xor jl xor xchg adc mov ret mov mov loop jp sub arpl movsl ja dec lods add add push or out pushf xor jo (bad) out lret hlt mov movsl add cwtl rcrl push and mov out cli jno pushf jno (bad) stc pop vpavgw test daa xor cmpsb insb bound and cmp inc sbb aad cmp test xor lret xchg cld dec andl cltd es mov dec and (bad) imul mov ds or xchg dec push cmpsb loope dec mov stos jno idivl pop pop adc les cmp loopne inc or pop push xor sbb lods push fldcw add clc mov pushl in adc and scas sub pop and mov mov mov mov mov dec lods inc mov push outsl xor or jno ret mov rcrb dec lret cmpsb jl fisubrl call jno rcrl je add imul or sub cmc aam rorl xor fwait dec dec and loop mov out xchg xor pop or imul xlat into out mov and xchg push jge jns mov ss push jbe out cmpsl lods pop add mov xchg ja and rcrl ror and ret sahf push cmpsl or int mov lcall sub add mov sbb fdivl mov mov mov mov rorb mov dec jmp int cwtl push xor add les mov rolb int (bad) aad imul bound xchg idivb push data16 lret adc push mov lret lock lcall xor clc repz pop repz sbb inc inc jmp adc ljmp push jnp mov ja daa std jns (bad) mov movswl add jecxz xorl xchg mov add das adc icebp aas es lret icebp insl sub outsl mov fmuls fisttpl sbb adc outsb xchg fldcw ss cs mov clc (bad) cmp or sarl push repz jae into xor fmull ror xor pop xor lret int3 inc sar dec mov cmp sub mov jbe push jge int or or (bad) and movsl pop push in arpl xor sbb jbe test mov dec lret (bad) out fs fcmovnu lock loope nop xor add xchg nop stos lods movsb shrb fucomip enter std adc mov xor sub lret xor les mov adc lods lahf xor nop loope popa jmp movsb add mov pop repz adc (bad) xchg mov outsb cmc cld lea inc adc sub jb add fisubl test mov and push xor sti or or ret hlt out cmpsb std fstpl rolb gs and dec (bad) xchg sbb push mov test xor mov cmpsb pop subb loope rcrl fwait cmp mov mov add aam xchg inc dec mov rolb dec out int add sbb loop sub mov dec pop into js xchg jo dec lds adc inc in movsl std push mov push (bad) out aaa and pusha push xorl ret inc mov pop sbb or ret lods push test and dec (bad) lods adc das xchg inc lods cmp mov aas scas test pop mov insb in pop push pop andl mov ja daa jno xchg xchg mov or aaa sahf xor mov xchg xor (bad) repnz enter cwtl mov jle jae push ljmp enter loopne push iret add dec jge fwait or pop push imul out or insb inc das int and add je sub sbb and inc loopne pop add jmp daa jnp xor mov sbb cld sub daa xorl aas lods xor (bad) mov lret (bad) es xchg inc fsubl add or mov dec jno add sbb (bad) fmul inc cmc lea (bad) (bad) out xor or clc mov ljmp push cltd mov or push mov dec jle fdivs sub pop or (bad) jae (bad) aam adc push (bad) int (bad) hlt push dec aad mov in dec sub mov ret sub leave jo out outsl movsl mov fld1 dec pop mov xchg lods stos mov lea xor lcall mov test daa dec repz jb loopne sbb jge pop in test mov (bad) out mov popf xlat in push pop scas dec push js dec hlt xor mov test mov push jnp cmp jae push (bad) aam jmp xchg xlat xor push in cmp dec (bad) popf loopne ss (bad) xchg popa jne push lods jbe inc pusha cmpb pop dec dec jns pop pop std mov cmpsl xor add mov std in pop pop and mov or fs minps jne in mov dec imul cmc sarl ds aaa cmp sub pusha jno sub xor in xchg sti inc subl in pop sti mov lret or cmp ror lahf inc aam clc outsl push xlat pop imul je repz xchg fidivrl jmp test stos cmp (bad) in dec xchg out (bad) mov insb out dec shlb sbb in sbb lock xor loope fidivrl daa xchg add or push fistp scas test das repnz mov mov mov inc mov jns jbe imul xchg into mov fidivrl divb or sbb rolb pop in jecxz mov mov or xchg mov adc xor lret sub icebp add pop mov mov outsl rclb stos out sti xor loopne inc mov into jb out imul or mov popa fwait mov inc jmp add out aaa fimul loopne pushf cmp cmpsb popf (bad) xor fs and aad sub mov adcl clc sub pop aaa stc fdiv rcll sbb pop fadds jb cs and (bad) (bad) and or pop std mov iret ret sub adc in mov or (bad) xchg shll outsb lock daa adc bts mov push movsl pushl mov (bad) hlt jp int3 mov popf daa clc xor mov int3 sbb test lock lods pop aad add push sbb stc fsts je out insl notl mov (bad) out fildll inc pop sahf pop jo mov out leave test push ss and or mov push cmp faddl js xor iret adcl dec cmp and inc jnp jp ljmp push fs mov loopne loop pop xchg add iret (bad) arpl lcall scas xchg ret rcr loope in stos (bad) cmpsl in mov (bad) bound jne dec ss add shrb adc pop mov sub mov push sti inc clc cs sub movsb lret dec xchg int3 add mov stos arpl aaa mov sub lods sbb and cli add repnz add or mov (bad) push in dec repnz je mov stc mov fdivs lods fs rorl mov and xchg cli (bad) inc xor sub subl inc lods (bad) pop sub fdivrs pop sarl cli fs ss idivl inc sub jnp add push push iret imul mov jmp popa lahf pusha leave stos and cmpsb cmp int3 mov jbe pop adc movsl mov jnp repnz pop and or rol mov xchg fiadd add imul repz add pop pushf (bad) or add lea inc sbb stc out or jb leave fcoms mov mov push adc sti or cmp lahf pop outsb shlb hlt shrb jno add or fiadd lods lahf (bad) xor pop (bad) call dec jmp jbe (bad) imul sbb stos (bad) sbb dec mov (bad) pusha dec add out repz fstps sbbl jns jae sbb sub xchg insl mov rolb sbb jmp pop call ds lds sahf sbb dec into xchg or xor bound jg aaa push movsl add insl popf add sbb pop nop loopne outsb shrb negl int3 sub aam jne sbb xor lods cli hlt inc jne sbb stc out (bad) popa data16 lret shrl enter icebp bnd cld push mov es cmpl fnsave out leave or (bad) (bad) ds sbb inc (bad) mov inc sub jmp pop pop int3 push inc mov mov lock and jg pop test add dec mov fwait rcrb (bad) mov and inc fistl xchg aam outsb addr16 lock sti xor sbb mov mov mov dec push pop test js and dec mov lea mov mov out fmuls js daa xor in mov adc or or jge push fdecstp mov outsb sbb (bad) lods sub scas jge test bound shll fwait jnp iret xchg mov xor call sub push lock call insb rcrl int scas arpl push pop mov xor jne dec clc sti std pop add adc push gs js outsb xor mov aam push rcrl insl mov add divb jl js and ljmp mov or sub (bad) xchg roll mov movsb jl cmc mov mov mov lahf mov xchg sahf and fsubp or fsubl or inc divps lret inc or jg sub jl cmp pop add rolb cwtl (bad) rolb arpl xchg scas adc dec adc sbbl inc mov rcrl icebp jbe addb push xchg scas pop loopne push jp loopne fildll ret out cld ss push dec out cmp or cmp mov cmpsl bound or jge das lahf sti sub lods sbb mov xlat lods aad pop pop mov ret mov mov mov cld sub push shll sbb mov aam add arpl adc dec push dec or in fdivs mov daa mov ss arpl jns inc clc inc pop into loopne sub movsl fsts stc xchg inc dec push std push cmp add ret cld mov fiaddl insl jle loop imul adc xor sahf push pop movsl adc (bad) mov jmp sbb sbb push sbb cmp imul cmpsl adc stos and push ret loope lods fsubrs lcall pop in fdivrl jl or cmp ja sti aaa push add push nop out push scas daa pushf xchg ficom xchg xor stos xchg adc jecxz mov lret push cmp mov add jnp ret inc bound aas mov lea xor jl mov call repz add cmp sub mov rcr std mov aas sti pop push js or and cmc mov dec or sti adc leave xchg orl repnz es cmc push lds push test pushf jl add inc je and test clc fiadd sbb ss nop enter fcmove in xchg adc sub ja pop push bound push sub lea stc push push or cmp inc xor mov cmp mov test jnp jnp jge cmp fwait ret xchg test pop test xchg fnsave cld sub neg add in mov sub lret pop mov sbb push dec cmp sub fcomi or cmp push cmp (bad) pop test sbb mov add sbb leave cmp cs jno mov rorl dec push sub push adc scas repnz imul adc cld xlat adc pop imul xor adc mov in mov xor daa repnz mov insl in adc xor outsl mov negl cwtl les icebp aas lods push lcall imul (bad) mov jge pop repnz out lret and (bad) jb add enter scas push test xchg aam das mov leave mov xchg (bad) jne std dec pusha mov insl sti dec iret jg cmp ret mov fs movsl scas xchg sub fcmovne daa mov or dec push sub xor leave data16 xchg movsb jg out std xor push gs jae xor adc mov sbb jle sub stos cwtl and lret mov push jp stos add cmp xor movsb or outsb fstp push (bad) jmp sub int lret es stos (bad) xor outsb stos push (bad) pop add dec arpl and sbb out xchg xchg and lock and jns sti mov shrb inc jne inc notb xchg daa xor cmpsl movq and mov stos fisttpll xor mov cli imul and notb es inc inc adc dec out or jno sub rorl inc scas adc mov mov cmp push les sub lret push sub xor inc sbb xor loope sbb cltd aaa mov push xchg ret pop and (bad) cmp sbb push sub dec mov xchg lods lea int jecxz sbbb lret inc xlat (bad) sub imulb roll pop pop cli inc xchg mov jmp jecxz add xchg f2xm1 movsb imulb dec scas rcl sbb ret sbb or jne add mov mov and adc jb imul jecxz test push call inc lds jp out xor sub jbe cmc in inc adc lahf lcall jb and mov (bad) jge mov xor push popf movsb stos dec cltd cmc repnz rcrb sub xchg add in inc jl mov iret andl jle lahf call sbb adc cmp inc popa push dec (bad) icebp jg mov or mov (bad) lret or iret pop jnp in jle xor lods jae shrl dec mov stos fdivrs mov lds cli xlat out fisttpll repnz add call jecxz test mov jbe or scas fsubrl lock pushf or lcall jo inc push ss sbb xchg shl or cmpsl mov or pop and jecxz and or loope test lea mov xchg movsb arpl call push mov leave scas jne mov stos (bad) xor push xor lods and xor inc lods dec add loopne xchg sub dec (bad) loop xchg push outsb rcrb repnz mov shrl cmpsl sbb (bad) in aam loope jp insb insl rcrb mov jge xchg inc sub jne dec mov rcrb movsb add jo sub lret sub das push mov out popa pop nop pop std dec cli mov inc dec push lock fdivrs jge daa add int adc fimul adc xchg mov jp push shll dec aas arpl dec insb xchg fadd cmpsb loop xchg mov mov and sbb clc xchg aam mov in push ss mov in push pop cs mov mov out daa push std add jo clc xlat sub jne pop adc fsub stc jo mov adc xor shrb call xor mov xadd xchg sub push jnp mov jl int3 pop out ret imul (bad) jno xchg xlat fnstcw rcr jg dec pop inc sub sbb dec stos lret push pop pushf stos and inc dec xlat out inc and mov adc mov lret rol xor fnstcw out cld jecxz fisttpll out fadds (bad) jmp movsl push popf fxch xor imul and enter xchg mov xchg js sub into jg ljmp and cltd pop jle idivb je rep lcall (bad) stos sub out push xlat sbb cmp cltd pop or mov xchg and cmpsb mov cwtl in and (bad) js jp pop jge adc xchg fsub inc inc int insl cld mov mov mov push and (bad) sub dec mov and mov out popf cmp mov cmp ja rcl fnstsw mov dec mov inc lahf fildll outsb pop (bad) roll dec pop lods in cmpsl jge xchg mov xor mov inc addr16 sbb push xlat and andl loop push and sub and xor adc dec mov adc cli lret not xchg cltd cli setb aaa or push imul inc loop cwtl lods or mov cmpsl test sbbb pop jb or jne (bad) dec int3 or ss mov sbb pusha mov mov sub adc out xchg out popf icebp dec add lods inc bound jl test mov push out in inc in inc movsl inc sbb mov sub pop movb (bad) cmp push sbb jns test jmp outsb dec xor in out imul adc xlat push (bad) leave int push int3 out jle or lods jbe sub pop mov popf (bad) lock mov insl out jno sub (bad) cmp push (bad) pop add in pop (bad) sti push sbb inc std inc inc rorl rorb lock sbb cli push mov mov or arpl sbb fmul pop inc ljmp stos mov push fstpl xchg shrb jae ja lods divl sahf ljmp mov sbb into xorl mov (bad) iret push push mov ficomp inc cs fisttpl dec imul cltd (bad) movsb adc pop push push ss sbb inc push fisubl and mov lods jo nop ret fldt repnz pushf sbb flds or mov mov fildl mov and (bad) push (bad) fs mov pop mov ret adc cmp (bad) (bad) aaa out daa sub adc aas js cli push jg or data16 nop (bad) outsl xor imul arpl mov sar mov aad sbb mov incl lret inc ja inc xor aam sbb pop cmp js mov int call inc mov aad clc sbb sti push mov lret das pop js int3 xchg cmc (bad) mov jl jmp add sub pusha lcall cwtl inc cltd cmp add subl and sbb or popa and es outsb inc aad ljmp push sarl fmull (bad) (bad) push jne (bad) in xorb inc mov or jne push xchg pop mov insb push faddl fcoms scas mov push cmp pop or push movsl data16 lcallw dec mov pop ret inc mov jg insb pushf roll imulb outsl cltd cmpsl mov inc and loop inc (bad) adc mov pop aas pop mov dec inc lret dec (bad) or sub adc lods (bad) std mov fisttpl push cmp mov jae or mov pop out ss repz icebp pop xchg negb popa cli lods jle js stos jns fstpt and cmpsb push daa push mov push and add xor push jmp mov inc sahf (bad) jge imul (bad) adc sbb stos and cwtl add push jns adc test hlt pop ret jns adc adc pop mov outsl dec mov (bad) and inc bound adc xor and sub or push inc insb lret xchg test jecxz imul xchg das inc cmp ja enter pop inc gs cltd jmp sbb js addr16 push loope out (bad) mov mov fcmovnb jmp cmp sub or cmp lds or bound roll cmp out cltd jne mov mov add jl inc std cmp jl stc outsb adc lds push mov mov inc clc lcall es mov cmp addr16 popa mov mov jl push dec push movsb cmp sbb cmp movsl pop adcl jmp mov push sub out mov clc xor leave and mul jmp das lret jp add dec add mov pushl cmp dec and sahf and mov fnstsw (bad) lret fidiv std and dec (bad) xchg icebp cltd dec push xchg in mov inc mov mov push (bad) (bad) cs add sahf xchg xor movsl ret out int3 push xchg push aam cmp mov (bad) stc repz ja sub icebp call inc call lret les pop pop sarb mov call rcr cmp fsubr and leave ds stos sbb aam sahf pushf clc out pop in out jp mov cmp cmc ret rcr (bad) repz incl pop test inc dec shlb data16 mov shll lcall fldcw loop sbb mov mov push adc cli dec jno or loopne cmpsb or push cmp or fmul fstps cli xchg popa fidivr stos push imul mov mov es jl je das pushf clc mov cmp mov sarb sti push lcall clc movsl mov inc push cmp jge insl pop imul sbb ret jb jae push stos cltd mov cmpsl lret popl iret imul inc inc faddl addl out dec dec cmp fs fsubrs adc xchg push call push sbb mov int adc xchg imul pop cmp and xchg or push push addl icebp (bad) (bad) data16 leave cwtl insl mov pop lods cs sbb mov repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add aas idivl inc jbe (bad) cmpsl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb push lods xchg insl sub mov lret pop mov fistpl xchg insl (bad) push loop ffreep (bad) ds icebp add aas out add xorb mov stc sbb or mov test fmuls jge icebp movsbl lds cmp pop mull or adc mov mov iret dec pop insl xor mov stos js mov xor (bad) fdiv jbe in addr16 mov shrl or jns sbb push aas add mov cwtl out popa lcall mov insl jbe adc pop or clc pop inc hlt xor adc fsubrp pop jae das movsb outsl (bad) sbb and fsubl outsb xchg and mov enter lds outsl iret test mov inc popa lods das cmpsl push (bad) dec xchg or pushf mov ficoml js dec xchg popa lods rcrl ret or scas cltd mov mov xor xor or cli vmovsd outsb scas cmp jle adc insl iret dec cmp movsl int3 fdivrl cs push (bad) push xchg iret push (bad) add scas xor jge jno add call xchg jae out mov popf aaa adc xor mov outsb dec call insb fwait xor sub fisttpl subl (bad) aad jl cmp dec mov lods pop sub push sti int (bad) jmp jno inc mov (bad) sbb stos int3 mov xchg mov xor xchg xchg push (bad) lcall pop pop stos (bad) and or dec mov shlb mov in es notb (bad) dec addl mov dec and push test mov popf imul lret test xchg (bad) mov arpl stos int adc dec cmp fidiv in pop and ss sbb sub xchg movsl js add adc inc insl call pusha inc push movsl mov sahf (bad) mov mov mov or test (bad) xor int3 cmp pushf push dec mov das mov mov xchg lret popa and inc cltd jg jg jmp add aaa inc stos dec mov cmp push loope mov movsb cltd rcll stos pop inc leave sub test pop scas (bad) xor movhps jmp rorl xchg jb jae adcl push cmpsl jl in mov sub inc push fisubr (bad) mov push pop pop mov push leave adc ljmp pop jg add daa icebp hlt cmp inc push xor and or fimul loop or cmp fwait dec movsl jg mov fsubr call enter (bad) pushl roll dec iret push cmp fisubrl add aaa xor pop jge in mov iret dec mov lea popa insb sbb push mov mov in inc pop divb bound out and xchg jae and mov sahf adc mov enter jmp aad pop mov arpl and xor add adc cmp push mov mov sub ds je popa pop ret test out mov enter ret xor mov mov mov dec mov orb mov aam add movb dec outsl mov lea push lds mov dec pop repnz notb jo push pusha mov fiaddl aaa cmc in lret mov idivl nop (bad) loop fild nop xor mov sti dec mov mov push mov sub jmp lods jecxz xor jno mov repz pop enter lcall cmp mov in adc fimull out cli sbb mov and das dec popf mov dec jns loop test ror aaa sbb pop xor push mov dec jne test xlat (bad) imul cmp lock (bad) and pop incb arpl clc dec lds (bad) pop pop (bad) xchg (bad) fcoml cmp data16 ret mov stos pop pop addr16 imul (bad) dec rcrl adc lds outsl icebp inc pop cmp lds jp loop fistpll insl xor jl pop xchg adc idiv mov sub adc dec dec push sbb (bad) loope cmp mov mov leave js js lods into lahf sarb mov gs sar (bad) lahf mov int3 xor stc mov cmp insb in in sub mov bound mov outsb mov pop dec and push jecxz jbe int push jp and mov lods ljmp sbb push (bad) push sbb dec xor jnp sar inc insl rol or pop dec mov ret or je les and rolb inc ja pmaxsw pop xchg xchg push or inc in jb pusha test mov fisub jp outsb test daa aad js mov jae mov mov cmp push jl inc pop push call sub and popl xchg decb jns out pop push pop aas or fs loop jae repnz lret adc jmp xchg or mov push js ljmpw notb or or (bad) pop jns popf mov ds stc jecxz sbbl or pop inc jo cmpsb push fisttpll mov jbe stos test push cwtl popf and scas mov push popf adcb movsl stos lods sub push dec test out sti lods push flds sub (bad) push (bad) cld ja enter leave inc jg pop (bad) sbb aaa loope add or ret mov fcmovnu out insl xor jne push test adc sbb mul xchg push mov sahf mov mov jo hlt sub mov std leave sbb (bad) pop iret sbb mov pop mov js cli and or xchg ret leave xchg scas mov lahf lcall sarl pop or inc sahf out fisubr jle inc sub xlat dec cmp cmp out add jns pop fsubl cmp jbe iret push inc cmp ds loopne fcoms es into sar cmc xor mov dec cltd or insb stos int3 jle sub mov inc outsl in out add in xchg inc sbb daa mov test push (bad) hlt packsswb (bad) std cmc gs rcrb xchg push mov jmp sti push and sub adc xchg sbb mov mov adc shll lods mov insl (bad) mov fimull mov sbb push adc mov or in (bad) cltd iret jecxz loope stos ret sbb or inc insb push insb mov add cld ret sbb icebp movsb cld xor out push rep ret or push xor dec pop out in sub icebp hlt repz in in mov sbb mov pushf leave addr16 popf dec add rcrl cwtl testb xor sbb sahf pop jmp flds rcrb jle and jmp mov in pop bound fisttpl jns test (bad) mov dec mov lret adc popf inc pop loope fnop movsw pop sbb popf pop xor stos insl mov fldenv jmp (bad) dec into pop test fisttp (bad) pop js adc sub in into push push pusha pop stos roll sub pop and stos shrl jno sub jle cwtl pop test inc xchg lcall jl loop lahf mov dec test and popf adc ret pop mov xchg gs dec mov movsb bnd call in add sbb mov (bad) pop es sub adc scas push or xor out sbb js pop or scas cli loopne sub cs insb dec mov popf pop shl add inc mov lods dec sub subl adc add addr16 repnz loop movsb aam loope jp sarl std movsl mov sub sbbb ja mov (bad) push sub scas inc cwtl or xchg or push outsb sbb inc imul mov inc push addr16 jp fcmove cmpsb (bad) mov hlt pop cmp decl mov idivl andl lcall jecxz inc cmp and jp or imul jp stos add cmp rol imul jbe stos fiadd dec xor sub shr xchg mov lahf or loop aas (bad) adc scas push and and mov mov iret jb jns inc inc adc dec jmp dec push ds and outsl mov sub xor push subl push shrb mov in sub add ror addr16 repnz adc test jns lea lret jnp dec popf pop in out popa mov push xor fcomps add or mov mov into cmc out insl cld or or aam scas adc push jg mov imul mov test lock rolb aam imul lds stos jae fmuls gs out inc jl das scas test adc and aam popf jge stos incl pushf out cs test jp loope fmul daa imul jge adc clc cmp std sub stc lea nop (bad) add js or adc jbe sbb test cli (bad) aam sbb add inc ret cmp inc dec ror out jb ret push in stc ret mov (bad) and insb mov arpl es dec dec xlat add data16 ss loope sub jg mov dec lds cmp pop (bad) div cmp mov mov dec (bad) push mov mov mov jno jne adc or pop and xchg cmpsl outsl movsl in fcomip clc imul xchg cmpsb loopne push lret fstpt jns into cld add ds sbb lock (bad) jo out push xchg dec shlb or aad in ret adc lds sti mov xchg xchg idivl ret add pop adc cmc leave lock aas das mov sbb push test xchg jne cs lods outsb cltd pop adc mov jo xchg ja (bad) jns insl mov ljmp shld inc and cmp orb jnp fistp dec mov jo and xchg (bad) jae out pop negl push icebp fidivrl mov mov xchg das jge mov adc mov mov xchg cli lea das fs je xchg lea cs jae add outsb lods out mov adc push push dec mov (bad) jl dec repz imul add mov sub pop jp fisubr into xchg in jmp pop and dec cli lret inc stc (bad) pop sub lcall mov mov cli mov or fstp dec fsts mov add inc jne cmpsl sbb sbb cmp movsl xor icebp xor fdivs imul enter mov daa and outsl mov insl movsl icebp add popa hlt fildll inc cwtl xchg out and sbb sub push out mov es pop (bad) into lock mov out add (bad) aad ja xchg xchg std push das xchg fsubl idivl and nop shrb or ret imul leave mov cwtl cmpsb rcrl loopne inc lock out call add mov add (bad) pop out faddl xor shrb test repnz adc add xchg add cmpsb inc lods out sahf pop sbb cld fwait jmp sbb pushl (bad) xor xchg (bad) mov (bad) ljmp dec cwtl pusha xlat jbe inc xor mov call mov test push das cmp daa or jg hlt jmp pop (bad) dec jp stos adc das mov jne sub gs rorl arpl xchg roll js pusha (bad) cmp leave js dec outsl in mov out call pop decb or push es adc loop xor mov and test jge jge pop jno cmp fbld cmc xchg mov xchg cmp popa xchg mov mov int3 (bad) mov leave (bad) pop subb (bad) int insl das lds xchg gs pop test or cwtl dec dec les jo inc pop add push mov jmp das insl fnop (bad) fdivl inc and xchg add or add stos lahf dec fisubl (bad) (bad) adc pop mov push das (bad) repnz fcoml insl mov sar out std fldcw (bad) rorb sub or xor sar loopne,pn jae std xor mov jp fisttpll push xchg dec in shr push rcr push mov sbb cmp xor test adc fldenv dec jle fldcw cs sub fisub mov fdivr cmpsl inc add mov mov jae adc sub xchg xchg jp test push stc adc mov faddl mov mov ret fstp inc cld nop mov push pop stos adc sbb sarl ret pop lods ds fbld jae xor (bad) mov sub ret and rorb vmovapd ret (bad) (bad) xor icebp xor repz xor inc sbb test jecxz repnz mov dec movsb icebp cli mov fcomi sbbl mov loope inc les mov out negl icebp pop adc mov movsl pop adc (bad) pop out or mov (bad) insb sub sbb into insb std dec fbld mov stc cmp mov in push pop arpl cmp inc and pop jno jl std cmpsb notl mov mov mov ja sbb sub adc decl (bad) ja orb xchg pushf (bad) std scas stos mov roll lods jp icebp cli (bad) jo sub lea mov stos cli mov jns fisttp push mov outsl and push sahf pop in jo lea adc mov mov call bound xchg add add test (bad) xchg test sub jle xchg jecxz lret fs pop jb inc push and and cs (bad) adc pushf movsb jge je (bad) leave inc jmp movq sbb iret notl dec enter loopne,pn dec icebp sahf pop adcl xchg push leave add or adc lods je adc push loope xor daa sarb jl lods dec cmpsb inc into adc dec jp int cmp dec cltd push push fistpll sbb iret push push out or push jle shll ffree cmp xchg pop punpckhbw dec lock sub sub (bad) aaa jb or inc lods sub inc in lock cmpsl (bad) mov pop test jbe fisttpl pop fwait mov loope and in xlat mov ss in push xorl test cli pushl inc (bad) and stos popa enter push das push or sti icebp test cmp lret arpl lahf inc rol and adcl and xchg pop dec inc or lahf cmpsb rclb popa (bad) mov mov jge add lds repnz (bad) xor and enter adc inc pop test dec add (bad) shrl mov push jbe es and xchg push xor mov fwait and add ret xchg push mov or scas loopne (bad) stc jnp fmuls cwtl ss pop repz hlt arpl insb push xor pop mov sub sub xor push lods mov or cwtl fisub inc std lods jno cmp xchg je cmpsl sbb cmp loop or xchg pusha cmpsl cmp xor fldenv xchg fisttpll and or jae xchg arpl xor stos jb xchg xchg mov push or test mov jae and xchg sahf in mov push lret test dec ss dec cmp mov or aam pusha add roll pop test mov dec out out mov dec xor and popf dec mov and fidivr xor mov push pop dec pop sahf es std pop je pop fdiv cmp cmp inc dec pop cmp nop xor mov sbb push je mov sbb jg inc out push repnz inc popa loop pop enter es mov mov inc mov fcompp js scas inc into pop xor cmp sbb cwtl dec stos lock imul mov (bad) sti sti loopne jnp (bad) xor push loope aaa pop (bad) xchg mov fdivs jbe lahf dec cli mov fldl scas sub push sarb cmp cli xchg stc or fwait push mov sbb dec jl test sub popf fsts inc and roll add outsl loopne sbb sbbb adc and cs sub inc stos xchg lock cmp divl pop int3 pushf lods xchg jns cltd lea bswap sbb pop dec dec in popf icebp (bad) in or mov sub sti stc scas arpl pop or cmp mov xor push cmp pusha xchg nop and pop fidiv insl int3 pop test sti push pop mov ret mov add mov bound and and idivb xchg sbb sbb mov cmp pop jmp mov pop and inc jbe std ret ret ret out ds inc xchg xchg lcall mov iret sub sbb pop test daa jmp pop (bad) xchg xlat idivl jno add repnz imul cmp jmp jne push bound cmp xor mov orl std cld sti stos pop out arpl arpl xor pop stos jbe inc pusha jge int or faddl out rorl jns scas pop (bad) repz lret roll lods lcall pop fildl sbb enter leave jne and xchg js mov ja scas mov int3 xlat enter (bad) fist push mov ret sbb fimul and outsl or add js push scas es jbe jge adc divl inc mov leave dec push add dec mov cmp push fidivrl rcrb xchg adc hlt and fpatan add ja test lds lret jno mov lods popa movsl add pop lcall push mov mov es sarl lock hlt je or jae dec ja push mov cmp mov push jg cmp lock or push cmpsb inc dec je jle in ljmp or mov push mov loopne mov (bad) movsb enter mov or (bad) cli xchg out ret movsb shrl fisubl or sahf out cmpsw push jb (bad) mov sub out lods cmpl mov dec outsl (bad) sbb test pop call fnop push nop push subb dec aad mov mov popa cli sbb xchg in dec lea sbb js mov das mov xor add jnp clc imul test cmp sbb add jecxz add cmpsl test stos push clc ss sub add xor mov das sbb sahf out loop lds sub das mov jns pushf jecxz or jecxz pop mov out or (bad) scas jg push xor lcall inc ljmp leave inc scas dec out pop les out add roll movsb lea out xchg test xor out orl clc scas sub cmpl data16 pop iret xcrypt-ctr cmpsl cltd jns push mov mov push pop mov sbb sti lds out ljmp and movsl rcll push cli out xor push xchg inc cwtl clc (bad) into xor push add call and add (bad) mov sub inc inc out sbb mov inc jb (bad) ljmp jne jl (bad) nop mov push movsl cltd ret mov sbb mov push sub cmp call icebp dec mov adc scas cmpsb loop (bad) or cmp xchg push inc pop sbb jmp xor push add jecxz ret sub dec sub rolb pusha dec test iret imul sub add push dec (bad) sub adc (bad) mov ja sub inc inc mov xor into sahf cmp arpl in insl lret and or jmp sarb daa push ja add jne ret mov jo and xor adc inc adc in push and rorb pop setne lcall popf xor outsb add (bad) mov int3 adcl loopne cli jb push jecxz fwait (bad) jno jg inc arpl mov adc sbb stc outsb pop pop enter xchg or stos add cmp sub (bad) vmptrst repnz push pop lods and mov sbb dec cwtl outsl mov insl inc sub mov sub pop (bad) cmc adc cmpsl mov dec movsb cmp stos enter inc xchg mov and xchg jge mov adc sbb and outsb sub sbbl pop in and stc addr16 cs or jle jge out inc (bad) sbb sub xchg test movsl flds into pusha lret inc push js outsb sub popf push sub out jne pushf adcb lahf cmpsb jnp fnstcw mov jne xchg test push xchg pop add jno je push out mov sbb dec jo es push jne mov and enter or cmp cmpsb bound js std das movsl cmpsb std adc jp aaa and mov addr16 loop in mov vpcmpgtb push xchg adc into std testl xchg (bad) fs (bad) ljmp and inc je imul arpl sbb insl adc (bad) sub mov inc xchg je iret xchg sbb adc xor les int add jne inc pushf lods mov or push sub push mov andl jge incl shrl pop hlt xor and pop sahf icebp add pop fild inc inc lahf movl fidivrl xchg jbe mov or stc push and push movsb decl mul push outsl ljmp and aaa scas iret adc icebp push std sti aaa pop test jg loop lock sbb xor mov shlb pushf xor jno pop sti jmp mov jo push mov stos jno add and test jnp bound test mov sub sar or shll push fild mov inc (bad) cwtl mov aad inc inc lahf push jp arpl movsb xor cwtl mov lds fisubr call adc notb push jo mov lods insb popf loopne or rcr add cmpsl bound sahf cmp push imul pusha mov xor mov sti in les ds xor imul stc inc icebp (bad) outsb push xlat jne mov notl mov mov outsb add add mov mov ficoml sti stos sub icebp add jg lcall push arpl sbb mov shl push jl mov add iret adc in (bad) xchg ret fs movsl call adcl mov push dec push mov and mov fwait scas xor inc cmpsb inc pop push aas stos int sub inc sub or and ror addr16 data16 lods fildll (bad) (bad) cmc mov sub pop addl xor leave notb das (bad) sbb in (bad) int3 jne arpl (bad) (bad) std push (bad) ret je call addl imul fsubrs mov repnz mov inc mov sbb stos addr16 mov or jp mov jbe mov in xchg sbb and idivb mov loopne mov data16 ret push enter pushf (bad) lret adc push adc lods mov add cmp cld ja fimul jnp movsl iret mov dec sbb dec data16 inc jp lods pop inc outsl jae cli jae mov (bad) in and or jle out out test inc stos inc jno add xchg cmpsl fsub xor and pop rolb sbb jns sbb in pop pushl aam fidivr imul or (bad) (bad) fadds sbb adc in popf and sub out and sub data16 xor xchg or cmp or mov xor nop rolb jns pop sahf call cmp pop pop mov xchg inc lds cmp sub sub vmovups xchg in pop push imul push cmp iret (bad) loopne les jbe insl fbld inc xchg xchg das adc mov sbb mov pop js or in sbb mov stos mov mov fnsave xchg xchg jmp enter ret mov push pop dec into cmp in adc sbb mov jecxz xchg xchg mov (bad) daa lods xchg adc or (bad) jae (bad) dec xor xchg ds in (bad) shlb mov mov pop cmp dec dec jno push into fldcw jge fwait xchg cmp push stc mov xlat divb aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld jg add jl mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb fwait mov lret mov popa fstps in fwait insl fistpl mov das mov pop js in out add add rolb js icebp mov std mov sahf mov inc dec sti pop sub into mov xor scas pop sti jle mov sbb pop popf or xchg dec inc in out lods xchg push cltd fisubl sbb outsl inc inc sti imul mov mov in sub ficom aas jnp xor repz mov mov out clc or sub dec sbb and or lock or cmp shll cmc aam test mov adc std stc out xlat das xchg push xchg sti lock int3 inc mov sbb push in out test das inc iret stc cmc mov jge sbb sub negl cmp jg adc gs sub mov pop in pop pushf push adc cmp ret movsb xchg adc push and (bad) push out insb in adc fcmovbe jo shl inc in dec sbb cltd jb mov xchg and xchg daa lcall dec iret jno mov mov cmp push sahf leave xor nop fcmovb xchg fisttp add daa stos and out push adc mov (bad) or xor fmuls cmc xor pop jo lock xchg mov mov dec hlt mov inc lcall mov mov clc ja or hlt xchg dec pusha mov in test pop cmp lret fnstcw mov hlt jg sbb cmp popa pop ret push and push idiv push mov addr16 insl cmp test (bad) repz mulb dec loopne popf sub test sti gs mov daa mov (bad) jl add or mov popf mov test mov inc jg mov sbb xor test int aaa data16 ret call fadd (bad) push mov movsb hlt lahf lods xchg fwait or xor or sub push cmp scas cmp es dec negb and mov test mov dec movsb xorl push cmpsl shlb js push lcall andb mov int cltd adc imul xchg pop push shlb or xchg xchg push inc fimull out ret das int3 jno or ss jae adc sti lcall inc (bad) mov jne and or sti test es mov bound sbb loopne mov mov cmp lcall hlt cld fwait cmpsb jg mov dec and test out pushf aas inc xchg sub je xor xchg cmp jmp fistl ror arpl push cmp pop (bad) xor into dec mov or lods (bad) sbb mov decl xchg xor xchg xor mov cmpsl lret or repz mov es pop rcl or pop js sbb push mov aas xor in fwait jo xchg fstl mov jnp cld clc lret jecxz in push push ja jp mov add add aas xchg out jb int arpl mov (bad) scas and mov fldenv pop gs test mov sbb mov xchg rorl sub and outsb movsl insb scas lret and add fbstp fcompl cmpsb into sbb fbld push xor push iret out pop xor pop pop cmp pop jmp mov push pop pop adc int3 js mov mov ss fs mov xor fldl lds xchg push cli pusha ss rorb adc add mov repz sbbl dec jns gs pop sub shr imul jmp outsb xchg pop loopne jno and repnz cmp cltd out (bad) mov mov arpl ret sbb cmp test cmp xorl xchg mov sbb mov jne jge add push (bad) nop (bad) add ret out mov add scas test shl sub dec mov pop rcll cltd mov adc aaa jmp je sbb jle jle jge cmp mov jns mov push or nop lret or ret (bad) ja jge cmpsb test jl mov je ret lret xchg test sub js pop (bad) sub ljmp popf inc insb pop je xor aad inc cli outsl mov aas (bad) dec je adc bound pop loopne jb call cmp jo adc adc in imul add mov adc fxtract cli enter imul lahf and lahf arpl or inc fmull andl stos and mov and (bad) mov lods or mov into (bad) fsubrp out sbb pop rcr (bad) inc cmp repz xor sti outsl sbb add cs xchg lock clc jmp out jns mov fcmovne jmp mov in outsb jle cmp xor ds test (bad) push mov out push pop ret inc aad adc repnz adc jmp and pushf fld popa mov push cltd push fidiv fbld jnp fistpl fs nop and mov mov and aas push int3 sub int3 test pusha inc pop mov popa mov out add test mov cmpsl push ds lcall or cmc addr16 mov pop sahf or (bad) lcall dec in and mov adc stos (bad) fildl and jb xor mov pop mov lods repnz int lcall addr16 sub arpl jbe,pt fnstcw inc pop sbb pop pushw scas fwait or push test outsb test xchg int sbb pop (bad) int3 ds mov sbb pusha decb jmp movsl shlb sti jle fcomps fiadd movsb mov push mul cmp int3 mov rsm mov cmpsl sbb scas mov sbb sarl nop aam cmc aas (bad) fisttp xchg ljmp push adc int lahf xchg gs dec cld lcall shr xchg pop jecxz,pn jle pop push xor jae jno pusha dec inc cltd dec lcall sbb mov push jbe push sub dec pop xor push and out adc rcll and mov mov jg into fisub pop mov mov dec xchg cmp daa inc std jns sbb mov and lcall repnz jge jo nop fldcw sbb pop loope jle mov jmp push dec into and mov and (bad) addr16 sub enter or scas out fcomp ss ss fistpll fiaddl rorl xchg sbb or cs fsubs adc imul outsb (bad) rolb and xchg inc sub clc xchg fstps shrl adc es xor les mov cmp imull fstpl cmc bound (bad) out js or lods mov mov cmp sub fstpt fidivl mov lods adc out sbb adc lahf dec cld test sub insb scas sub addl sbb add fadd push vpmacsww or xchg mov ficompl sub jmp sub jp mov test or cmc lcall scas sbb out roll js gs mov mov mov fldcw (bad) jo in dec fisubrl out fiadd aas pop rolb inc (bad) mov outsl repz add pop cltd jp mov lret xchg mov inc aas divl mov inc adc xor sbb pop jb insb testl jno mov mov in lcall mov outsl mov daa jecxz mov pop cltd leave dec (bad) pop nop mov sbb mov inc mov adc pop push mov sahf pop outsl jecxz add insb outsl cmc cs inc and cltd push nop mov adc test add hlt jle int decl push lods (bad) push mov lods fistl dec call jbe mull cmp mov int sbb lret in xor aam add ja adc sbb mov xchg push popf add pop into jmp xchg xchg sti sbbl xchg and bound pusha addr16 adc clc test lock sahf and sbb dec adc xor int3 call popa aaa cmp cmp clc pop loop pop cwtl push les aam notl push xchg (bad) cli nop pop incl inc jg lcall push adc hlt push dec ljmp jg icebp mov push ficoml pop ja stc mov mov fcompl xor popa xor rol mov xchg in cmpsb pinsrw sahf adc xor (bad) xchg mov idivb jns,pn outsb and sbb mov xor cli inc (bad) lret cmc arpl mov gs lods mov mov or sbb dec jg inc sbb stc sahf jne add sub lock push jg mov mov push mov or mov test dec (bad) jbe lock cmpsl jmp stos mov stc scas push mov insb lea pop cmp pop leave mov jb push (bad) adc in jno je fwait popa daa outsb pop repz pushf pop psubq (bad) lret test fs pop cmp movsb vmovss inc out mov mov ret int3 add xchg mov das popf js test sbb xchg outsb sbb sbb dec mov xor xor mov inc or push orb (bad) mov xchg loopne jb (bad) mov aad bnd adc xchg lods fs push sbb xor lahf add lock and int push cmp out sbb inc xor sub out push xchg cmp jmp xor and scas and adc cmpsb xor jmp (bad) and mov jb shrl lret sub out sub add ljmp xchg mov pop and (bad) rcrl pop adc repnz jecxz ja pop or lret sub jge xchg (bad) mov inc xchg dec lock ljmp mov jnp (bad) mov push movl scas and dec xchg xchg adc adc sbb clc test sar and lods fs ret dec mov fs fist (bad) dec xor sub imulb xchg inc fadds test sub or add lret addr16 or cmp xor xchg in add jle cli in (bad) sti into mov pop inc push pop enter push ja jno cmp pop jle jne and xchg out mov (bad) aaa aas mov sub xor rcrb jno xor pop mov sbb sbb imul call movsb lea jno sub xchg daa xchg cmc out xchg inc cmp jne mov popf (bad) mov ss sbb push xchg inc popf mov jge adc add mov inc addl pop ret dec dec jl jle arpl ror enter jp sub cmp push test sbb (bad) pop jnp jbe mov mov repz (bad) movsb (bad) iret lea je mov les mov pusha in dec jp pusha lds xor or ds push lods sbb in lea jle pop scas (bad) pop xchg mov test ja jg xor inc jno fidivr ja in dec call inc push ss mov insb inc lahf (bad) fstps or adc mov popf cmpsb mov aad lret mov push mov rcrl lret dec cmpsl stc in ljmp and inc sbb jmp jno sar popf adc mov mov jecxz mov or sbb roll (bad) xor cltd rcrb cld test jle shll mov repnz and mov push ds or push fs xor or outsb out inc lock (bad) (bad) into out lret nop pop popa into je jnp test sub cmp fwait cmp sub mov add in jns out xchg jge pusha cs movl mov sti pop shrl jb js and test adc xchg mov loopne test mov daa add int3 push sub (bad) mov bound inc adc mov or leave in cmp jg mov aad mov inc popa bound adc dec mov sub pop pop xor xchg ljmp and push adc imul fstpl pop cmpsb xor call sub pop scas outsb mov aas gs dec in dec sbb mov jo pop in insb ds stos pop leave outsl lcall cmpsb out mov xor pop movsl imul mov cmpsl call fldl jno gs std inc xor sqrtps out (bad) dec xchg dec jl rcrb sub call mov test push or adc in out rcr xor mov adc push mov sbb fstpt test dec inc xchg mov icebp add gs gs popa mov lcall jbe mov add pop mov cmp je bound sbb or or push es les xchg jnp mov and sbb sub movsb inc mov pop add mov aaa mov iret gs add rclb jp jp cmpsl fidivr nop cmpsl in mov sbb xor mov mov inc sbb mov inc sbb lods leave xchg aaa mov scas or lret cmp xchg lret out enter call js repnz sbb and push pop popf xor xor mul xchg cmp mov push add mov xor adc dec cmpsl lcall add cmpsl jg imul jb loope jle mov (bad) pop mov das insb insl jmp and sarb dec insl pop (bad) repz fistpll inc loopne and mov jl out mov cmpsb les push lret das jecxz mov (bad) cs pop out cmpl push add inc hlt nop sub hlt cs adc jle mov or push (bad) xchg jbe fs sub jg jecxz mov movsb mov insl inc imul xorl push cmc xlat mov mov pop pop dec (bad) xchg fdivs sarb push xchg out ret add int test cmpsl lods xchg dec add lret mov sbb pop inc cmp dec inc jg je push (bad) sub and push mov scas fdivl nop testl dec sbb dec daa repz (bad) mov aas mov sbbb sbb cli pop pop mov imul mov movsb les sbb icebp and adc mov and mov gs (bad) jne outsl jne inc xlat adc cmc jo dec and rcll lea mov and jmp (bad) mov push mov xchg and ds cmp movsl inc mov push jmp nop xor gs xor lds sbb dec ljmp add xor mov push addr16 nop (bad) jmp jp (bad) (bad) cmp adc push adc jns pop insl es mov jne sbb rorb pop or cli fcmove adc in call pop call adc xor mov (bad) push adcl adc out push add jmp jno mov pop out xor pop in push jo test mov mov xor pop cmp sti in cmpb sub mov push loop mov lcall divb (bad) in ss shlb xor mov mov pusha pop movsb aad dec call jns mov mov sti xchg mov or jge dec sbb lahf int3 cmc les aad cmc nop and repz out bound xor mov stos sbb into push iret and sub cmp movsb xor cmp cld inc add mov sbb aam (bad) xchg into fistp fmull aad pop outsb mov sti jmp (bad) push loope pop cli mov or loopne push mov bound mov adc adc cs jecxz inc xchg inc cld enter jecxz mov push xchg mov (bad) outsl (bad) xchg mov xor ja loop mov mov int ljmp aas jg ljmp clc and repnz xchg test cwtl push sub aas xlat and cmp movsb push outsb dec dec les jge xchg jg and and xlat dec xchg outsb cmc pop fstp inc mov cmpsb jg inc in jmp push outsl aam mov aad loopne js cmp stos out lds mov mov push sub loop not inc dec mov popa data16 (bad) xchg sarl scas ret jnp xor pusha xor sub je dec sbb outsb lods inc insb xchg and leave out loop cmp je and or xchg mov sbb push repz loop loop push push mov xchg xchg push int3 shll pop lret cmpsb roll pop movsl pop test incl gs and dec sahf jge adc sbb xchg jbe and and push out test pop push adc or fnsave mov mov push andb aaa call into xchg mov pop mov in push fsub xorb push int3 mov sub push sub (bad) ffree and das fdiv hlt mov pop and cmp ret adc pop xchg mov cltd outsl pusha test fdivs pop nop ja jmp push pop (bad) xlat xor mov sbb cli cmp mov cltd dec jmp cmp dec stos lods inc icebp in inc lods push fldl pushf cmp negl and mov dec cmp clc sub xor jne jo fld1 mov jle mov (bad) and xor int sbb inc dec sub jmp movsl pop movl movsb jle adc ror clc popf mov sahf mov sub or jp lock jns aad mov test adc cli cmp xchg shll mov pop cmp je pop or mov stos and imul pusha xor mov cmp pop in sbb test pop mov cmp pop pop arpl fs pop lock and and push mov push pop addr16 lea cmp mov rcll lret mov mov stc or stos or cld push mov mov je inc push jbe outsb jle sbb js test pop xor test jecxz xor sbb cmp das (bad) fstpl dec arpl xlat call sub adc jno add jns loop aad pop xor and push push outsl or push mov hlt ret mov add call add and mov mov mov sub movsl cli sbb jns xor in dec pop idivl lret lret push (bad) fnstsw cmp addr16 outsl in cmpsb cmp subb push ss aad out outsl or movsl stos dec shll fsubrl inc push (bad) shrb cmp cli mov fnstcw xor dec inc pop pop cli arpl mov (bad) inc jmp ja mov mov cmc xor and faddl lock jae arpl push cmpsb lret divb sbb and loopne and xchg ds mov aam imul mov jecxz rcrl adc push lods jo push or arpl jno fist mov test adc lods jo jp insl adc ret pop mov and inc call ret xchg jl jmp jnp push xchg mov loop mov mov aad imul icebp mov xchg pop cmp add ljmp pop pushf fsubrs in inc mov mov lds sub inc xor push sti cmc into pop addl gs jg mov xlat or add fdivp (bad) cmp fdivrl pop ror (bad) mov cld pop mov cs xchg and cli jno arpl jp fildll cs and pop mov pop cwtl cmp add mov lods mov or mov push xor (bad) fsts ror jl or test cmp pop inc sarl mov jp test jo push gs or popf repnz outsb fucomi mov adc mov loope xchg adc (bad) mov rcr popa adc pop (bad) std mov cld insl (bad) into adc aaa es into test mov dec inc fistpl sub test jbe jae inc pop inc call stc jg inc jb fcomp in pop or fwait les adc stos add or mov add retw push out push scas jg xor sbb sub xchg (bad) pushf inc into mov jnp fsubr push fisubl cmp stos enter push mov jns sarl insl lret cli mov sahf insb inc add adc repz mov and cmp fmuls cltd ja clc mov in movsl jnp popa test or mov push outsl (bad) jg fbstp mov push push mov loopne je cmp adcl or push sbb lock push xor pusha inc icebp or xchg in stos mov jb adc or push loope pushf fs imul mov dec add mov sbb es mov loope shl sub lds les mov or out mov sahf xlat leave ret fs push (bad) enter mov xchg xchg sub stos mov insb (bad) int jae pop adc jp push addr16 and cmc js and inc lock movb rcrb add imul (bad) xor pop cld push out test xchg cmpsl bound (bad) and dec fcmovne xchg imul jmp fisttpll push and pop adc sbb lock mov lock jp std (bad) xor gs cmp aam outsl (bad) aas pop cltd out add jbe sbb (bad) pop popf push pop aas mov xlat imul sahf mov sbb pop adc adc fsubl call pop iret sub out nop popf int3 ja out scas xor xchg xor jns inc mov outsb jbe lret add js push insl xchg test (bad) push enter adc pop cmp test mov push push cltd mov imul dec je and inc mov imulb scas xchg test test or xchg mov pusha inc and mov jmp or (bad) pop divb mov addr16 jle (bad) aaa outsb dec incb mov inc roll ret (bad) sbb icebp xchg sbb fistp enter cmp loopne loop int iret jp mov mov popl gs and lahf aas push movsb sbb adc xor xchg leave movsb test push sub fidiv pusha int sbb pop or xchg pusha inc fsubrp pop xchg scas xor int test lea add adc xor lods lods push (bad) xor and rolb lea pop mov xchg ffreep movsl sar in mov push rcrl mov scas call mov mov mov mov mov mov push sti push mov push sti mov int3 pop xchg pop push fidivr mov xor adc pop sarb hlt and roll scas pop mov cmp pusha lds mov sbb scas or mov arpl push xchg push sti fsubrs or dec jne inc int3 xchg xchg pop (bad) out test movsl or mov ficomp lcall fwait je mov je in or push dec cmp xlat les mov es mov mov fiadd mov outsb aam push lods push jb out jne mov in out aam pop push fimul in enter scas jnp cmp or xor pop call sbb mov mov inc pop push sub mov mov adc sub or lods xchg xor sub std or fldcw test add or sub imul or inc in or mulb out mov pop inc icebp stos dec jae push test push into and repz (bad) ret xor lcall call jle (bad) jo fiaddl fdivs fnstenv lods inc add adc repnz push mov mov cmc mov lcall xchg data16 insl (bad) push cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz pushl add incl fisub loop mov pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shlb add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc push push inc sbb xchg insl sub outsb fldcw js imul insl fcmovnb pop jne jb outsb cmc jg icebp mov add or add xchg mov lret jae sbb sbb notb adc mov insl imul lods pop icebp mov mov popf inc pushf clc jne and cltd xchg fstps sub push or gs lea je call inc imul mov outsb xor addr16 mov pop out sbb adc fwait mov mov adc outsb mov pop fbld pop xor inc test dec cmp scas insb fsubl (bad) sub (bad) pop out add inc clc popa dec sbb xchg lahf jne adc repnz mov pop pop into icebp ret inc push push jge,pn mov xchg xor push arpl into xchg outsb mov repz xor ja adc adc and repnz cli or jb xor bound ja dec dec and testl push pop hlt out pop mov add xor and xchg and fidivl push mov les xchg outsb sub and out mov es aad sbb jp add loope js xchg lea cmp pop push fwait insl sbb adcl mov jl int3 jle mov cmp je pusha (bad) xor outsl stos and out add out or add lret flds pop inc or imul cmp xor mov jmpw je ss es mov lock pop jns jns bound sbb pop xchg jl mov mov arpl enter das loop aad cmp add mov inc (bad) stc sub hlt add in jg mov push lcall add scas inc aas fwait stc (bad) out inc mov lahf add mov cs and jo leave xor push fimul push gs jl xchg cmpsb test std push push jo jne xchg stc and pop popa fistp or or dec loop rolb imul mov test adc mov scas fwait into xchg sahf inc jl xchg and test cwtl aas mov outsb seta fstl inc popa xchg in cli xchg cli repz pusha inc out add fwait jmp insb neg push je shl rcrl hlt add xor fsts mov push ljmp stos push inc inc ja mov adc sahf or mov xchg sbb popf mov mov sti jb adc imul sbb das push push jae or lods adc lea cmp lods (bad) push scas test pop aam es popa cli (bad) lock jb jl jbe dec pop and adc pushf imul push ret jo movsb mov gs arpl sbb push cs xchg jle mov movsl cmpsl mov shlb test loope jae mov pop push pushf xor fcoml mov mov imul mov sub dec jecxz mov cld pop mov (bad) std adc add push pop jmp out dec (bad) sti mov dec sbb loope pop fcom fstps push jle mov inc je push cmpxchg aaa mov iret cmpsb adc imul sbb movsl lods push or push imul mov mov cltd repz xor repnz std jmp insb aas mov int das or popf int3 lret mov jo adc dec lret fnstenv mov push stos cmp imul push xchg sbb loopne lret cld mov pop sub jae lods mov lea mov sub inc aam jne movsb dec push mov push das xorb jo adc push pushf addl in fdiv and gs add (bad) jl int3 iret push push fxch pop sbb pop mov ds stos cld out aam ds push cld repnz or (bad) in sub sbb idivb mov mov int push rcl mov inc sub xor nop test ja pop adc lahf mov push jne adc imul sbb push cld loopne scas mov inc xor mov cwtl push mov xor or sub (bad) adc inc jmp xchg fwait (bad) gs fild stc mov leave aas or mov call push ficompl popf mov in add sbb mov es xchg loope ss call fisub imul (bad) jecxz pop addr16 icebp inc push jns pop sahf xchg negl daa pop test out and xchg pop mov (bad) lahf mov fwait push xor add ret stos sbb imul add in sbb int pop push test out gs lock stos cs cmpb sbb out jle xlat out cltd cmpsl dec xor mov mov data16 test test daa xor or (bad) xor mov jp (bad) je ds in repz or mov int stos lds cmp xchg mov por cmp out inc push push lods (bad) or or (bad) fdiv cmp ss mov into dec in (bad) mov roll inc xchg or (bad) (bad) fnstcw outsl sbb fwait xchg xor mov inc fnop pslld pusha mull in test icebp call mov (bad) mov dec mov mov sti cltd cs sub adc scas sbb inc out pusha cmp imul jb (bad) iret cli xchg jp (bad) jo flds pop xchg ss (bad) xchg dec fcoml sbb pop lret cmpsb and push push rcl push pop mov pop movsl mov repnz add (bad) mov adc inc shll mov cwtl (bad) (bad) loope test add aas bound out repnz push pop in sbb repz mov iret cmp push icebp into lea jmp or mov mov in aas cmp insb or mov aaa mov mov shll dec (bad) push adc adc sub ret gs out or pop imul js mov cmp push (bad) xor or lret shr inc and lret inc jmp sub lret arpl inc mov adc mov and dec inc cld xchg mov cmc mov or movsl sbb addr16 xor lds dec ljmp dec fldcw xchg into pop rcll cltd test push pop dec push jae imul int dec (bad) ja sub (bad) imull mov push fcmovnu mov popf mov or in imul std popa mov out inc pop lcall aad push mov ljmp cmpsb push movsb xchg xorl fst insb push adc bound leave sbb jge xchg fistpll das iret jo out add xor (bad) jae,pn incb cmp xchg testb rcr adc jp mov aam bound lret cmp scas pop mull inc xor cwtl cmp xor mov cmpsb mov dec ds adc addl pop aaa mov imul sub cmp gs insl ds paddsw ret lret imul cld inc mov push es rolb data16 or in jge rcll addr16 dec add inc sbbl add mov mov mov cmp outsb or test (bad) xor adc pushf aas add ss xor (bad) out loope xlat adc cmp jns xchg mov add dec icebp add movsb lea loopne addr16 lcall mov xchg cld or ret lods das mov aad fstpt jae les mov xchg (bad) addb gs pop es mov cmpsl cmpsl cmp outsl cmp jge jbe inc loopne mov mov or mov pop iret add cltd sahf adc insb adc (bad) rcrl dec mov pop jns pop arpl and or add adcl jno shl cmpsl xchg out subl push sbb xor inc (bad) scas sbb pop push test jbe push sbb mov clc arpl push movq add jne jl and inc mov test xchg leave mov pop dec and cmpsl inc xlat leave loope lcall hlt aad push popa adc mov movsb xor inc fcoml inc jnp je cmpsb repnz hlt out leave (bad) jecxz xchg xchg mov mov cmp inc imul icebp mov fsubl into push sbb cld lcall arpl push cmpb fdivp sub or sti stc and inc sub mov cltd dec or loopne movsl xor cmovae add test test cld push pop push (bad) xor rclb test and stc bound (bad) xor out nop js stos xchg jg push ljmp insl pop enter inc call add fisttpl rorb push lods bound stos mov in daa (bad) stos imull movsl mov jmp add outsl or test mov cwtl jle sbb pusha xchg push jge insl fadds shlb jl adc fld xchg mov push ja cmp daa je and clc clc cmpsl jp insl lret (bad) push sbb test dec mov mov fs inc push pop sbb pop cmc test add mov mov (bad) sbb test or call or mov pop dec mov aad add repz popf jmp cmp mov shr scas xchg push stos scas push sbb call mov in inc sbb adc jmp sub (bad) jge lea inc mov mov xor cwtl outsb fmuls lods mov xchg push and shl pop add iret stos daa imul (bad) mov push push addr16 fwait mov jnp aam loopne inc mov cmp pop int pop cmp push pop xor pushf mov adc sub jno adc adc xchg sbb imul push out dec test imul lods jb dec enter ret dec aaa ret jl push iret xchg outsl jno pop mov ljmp xlat shl xchg and pop int3 out jb insl pop outsb pop insb xorw cld pop es fsubs sub sbb cmp addr16 mov incl repnz mov mov fwait mov in testl inc and stos mov and or (bad) cmc leave mov fimul ret adc icebp mov jmp mov cld dec mov ret movsl cmp dec int jmp mov cmp mov sbb sub test fisubl test xchg outsl adc bound cmpsl ja pop test sub scas shrb mov mov shr fcoml xor xor fbstp inc enter pop mov push loop popf push or int3 inc xor pop scas mov rclb shrl xchg jmp mov pop jmp push cld (bad) mov das aad push dec cli mov fcmovnbe push add xchg cld inc frstor cmp and mov test push lock jnp add out shlb jne xlat dec (bad) mov sbb addr16 outsb pop imul jmp out add mov loopne loop dec mov pop xchg sub jnp inc movb xchg popf outsl adc (bad) jae lods outsl test or jg adc xchg sbb das fsubl movb lcall gs lcall xlat or cmp je push mov jns movq shll mov lret push xor cmpsl or adc popa add shlb jmp nop xlat cmp das mov inc cmp jl mov repz jb xor (bad) repnz adc jge aaa or mov and or add cltd dec pop xchg xchg cmp or cld dec out pop cmp add ror incb out test and fxch adc push in xchg sbb inc cmpsb jmp xor pusha mov or (bad) sar fsubrp sbb ljmp sbb add and add rep push sbb in xchg jne jl jge or cmp adc fiadd xor pop mov fisttpll (bad) (bad) adc shr xorl divl aaa (bad) jmp call sbb xchg sub pop mov nop push aas rolb dec cmpsl inc popa push push lds mov ss outsl hlt push cmp fstpt xor test aas push insb gs (bad) in pop neg mov popf movsb mov cmpsb fistp dec cld (bad) xchg arpl xchg or jmp xchg or lods sbb xchg rclb movsl or ljmp aam mov fcomps adc xchg push mov lahf pushf jae fprem dec pop sbb call mov stos call (bad) cltd ss push test imul mov out jle push ret mov outsb out adc test inc je (bad) es adc mov sbb jg sub adc loop call mov and dec push dec not pusha pop in push mov mov mov fsub pop add push daa mov dec pushf into jns mov fdivrp dec sbb inc ficompl mov sbb xchg test push xchg (bad) or (bad) push mov sub lock jno jmp test lahf cmp cmpsb outsb inc xor scas pop testb fisttp mov push pushf mov xchg pop test cmp dec gs fwait mov outsl outsl int3 hlt mov add or (bad) enter or sub (bad) ret xchg in pop jp cmp stos push xchg sbb or dec dec out ljmp sub test ljmp pop nop fs cmp imul sbb mov xchg mov sarb paddusb stc mov outsb js push xchg outsb pop in cmp (bad) push adc pop mov clc inc pop sbb jbe hlt add mov dec ret mov jle ljmp lds arpl mov xchg mov pop inc inc or lock add orb testl dec leave mov jle gs fistpll push sbb push lods jne clc fcmovbe lahf (bad) pop repz clc jo iret add cmpl fldenv test cmp and stc xchg fadds fimull test in mov lds icebp std lcall push lcall jp and mov pop test movsb popf and iret fildll ljmp (bad) and mov and lds xchg mov paddw sarl pushf (bad) jae mov test push nop aaa sbb xchg push mov in add sub ljmp popf mov movq in pop addr16 push shl jecxz jne sub pop and xchg mov push sub mov cmp stos imul and sbb fistpl outsb mov dec push mov xlat inc dec lock data16 out movsb ja daa add popf movl jb es roll imul lret mov and fistp adc or testl xor roll sub or cmp movsl xchg add or push outsb mov jo (bad) cmc jg lods mov inc sti lods push fadds mov cld sarl iret f2xm1 add idivb or dec movsb in (bad) lods inc inc lcall mov cmp xor arpl jo mov and mov out jbe or pop xor push xchg mov dec mov icebp xchg adc or std inc mov ret or ret xchg jg ja loope lock outsb mov outsl in mov gs push movsb mov js sbb mov add pop repz (bad) aam push sub sbb push popl xor dec or call pop loopne inc in loope xchg dec add xchg hlt js loope outsb mov sbb cmp xchg adc jl test repz dec xchg sbb (bad) cmp ja pop (bad) fisubrl cmpsb fs jno in mov cltd sbb cld cwtl inc or mov sbb xchg dec movsb cmc data16 imul std mov out loope adc inc jno adc jg and aam notl cmp pop xor mov mov outsb fild negl cmp sub sbb bound mov cmp mov sbb int and aaa xchg pop fildl std shll and pop xor movsb push arpl xchg lds fs jns sbb aaa dec fcoms in mov cld cmp and or ljmp xchg insl mov mov pop rcrl add dec fld1 push cmp sbb or or and mov cmpsl mov (bad) mov cmpsl xor imul lods fisubl out mov addl stos mov orl jl fnstsw jnp jo and sub dec ret push inc pop inc and dec xor xor bound jae je mov mov das mov pushf clc cmp inc rol jno ds into sub jp or add stos jne jp sbb nop (bad) sahf out mov out fwait inc insb mov jge xor aam in push jns dec std cmp add (bad) aaa push push push adc adc daa xchg popf pop loopne loope jns (bad) aas lcall add pop shrl (bad) dec insl js mov std inc sub fcmovu push pop cld les jecxz adc testl andb inc and pop (bad) sbb insl aas sbb js and pop repz push jmp imul adcb sbb bound pop sub sub mov sbb sub dec mov pop adc (bad) or divl xor fnstcw test push xchg popa pop mov rorb mov push cmpsb imul clc in pop xchg mov ret add and enter ja push adc rcll dec loopne sbb pop mov sbb pop inc adc push dec jmp lret arpl jne gs xchg jns fistpll (bad) iret xchg stos es jbe (bad) cli xchg stos add mov cmp enter jg mov jae movsl pop mov inc push sahf shl cmp push test mov dec jno js int ret jnp stos sbbl mov adc push adc imul dec and testl int or cmpsb dec pushf add testb aad dec subb xchg jg int3 es or mov hlt ljmp xor and outsb mov aaa mov xchg mov pop xor push push stos pushf pop out mov mov test jg sbb enter imul pop loopne push sbb xchg sti mov (bad) (bad) mov fwait mov jge push dec lea movsb enter (bad) and lods dec shlb (bad) daa loop sub lods and xchg sub and adc push inc jge incb (bad) shrl push das aaa loopne,pt and les xchg mov cli lret fistpl clc mov outsb jp std lea cmp xor mov jg (bad) mov sub cli sub cmp in popf mov das cmpsl sbbb xor popa into popf jl ret sbb repnz inc lea cmp or repnz pop sbb in jnp scas cwtl jb pop rcrb xor fisttpl aad pop mov jle mov arpl cmp mov pop and ficomp adc push adc imul in pop mov stos cmp rep or enter xchg in dec insb sti xchg pop mov push jecxz int3 mov dec rcrb fs pushf (bad) je std xor movsb stos jp sub js lret push nop jle insl and outsb pavgw lret (bad) fnstcw jns popa dec stc gs pushf jns clc dec mov inc ret pop dec mov notl or add fdivrp mov jmp iret xchg test (bad) hlt sarl cmpsb popa pop insb enter enter scas aam cmp into sub mov adc stos push (bad) cmp test icebp es and push scas daa mov or addr16 popa sub (bad) pop push in add sbb jno lods ficomp xor or orl loop dec in fisttpl push mov inc popf fcmovbe cwtl jmp and outsl int jge pusha jns dec stos enter dec push mov out adc bound out adc imul adc js ret xorl lret (bad) mull sub in sub mov adc dec xor rclb jno inc lcall aas sbb push andl ljmp jmp in adc js cmp (bad) fisubl inc add mov mov ret rcrl (bad) mov mov pop (bad) movsb sub pop cwtl ficomp inc push pop call sbb mov pop lods mov push movb sub call xor xor imul xchg test cmp std add sahf push adc iret mov stos xchg fcoml (bad) (bad) stos icebp jnp sub (bad) mov mov inc cmp inc iret ret push push int3 xor inc jbe daa and testb test xchg or (bad) jle mov add or das bound iret mov repnz xchg test cmp mov add (bad) mov xlat jns pop mov mov xor insb popf mov inc in dec jle and mov jmp xchg ret adc dec xlat sbb sub push stos dec fiaddl pop or fsts pop inc cmp pop mov (bad) add gs ss sbb rcrb lcall and push sub fs add pusha inc mov scas or out inc aam sbb mov scas int mov daa mov repz pop and shlb push xchg ret mov das insl cmp inc dec fmulp and std loope dec mov scas adc mov mov pop inc push mov rcr mov cmpsl xchg test hlt cmpsl sub movsl xchg mov cmp xor xchg fcomp popf sub push cmp fimull jecxz mov add mov xor jne (bad) adc adc pop adc adc jecxz inc push jl adc in addr16 or into or testb jae (bad) out leave mov icebp test xor stos adc mov or fs sub cmpsb cltd pusha sti pop jg ret lahf and dec insb in shll and mov es mov xchg roll call lcall jno jmp fldcw sbb fwait scas jecxz das pushf inc fs je push es (bad) xchg xorb add es push and mov leave stc cmp jae nop push mov mov fwait rcll adc fistpll add push jmp jle popf add mov push mov sub mov push xchg sub sub xchg xchg (bad) mov cwtl sarl cmp inc scas jnp pop push rcll in aas test pop cmpsl xchg add mov insb and lahf fdivs jbe loop cmp or outsl mov out pushf movsb mov xchg jg lret push and sbb sub std imul push push jmp pop cmp cli dec outsb mov sub lods fcmovbe (bad) das fbstp (bad) in subl or xor cmpsb xor jnp loopne add into fwait inc sbb cmp fldl repz cwtl adc das fstps mov xchg lcall mov je je push mov (bad) or adc push push xchg aam lea xchg mov xchg mov inc sub sub adc sbbl popa sti jmp xchg xchg mov pop scas movsb and test mov dec sub ja dec (bad) mov in fbstp mov cwtl ds sub push push cmp jbe cmp test (bad) cld arpl inc mov bound imulb sbb adc arpl jmp aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz adc cld mov dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb add loopne lret scas (bad) stos gs xlat (bad) in mov (bad) cmp add adc add rclb sbb adc (bad) leave cmc aaa sub mov sahf and push push cmp sub pop adc add insb jnp stc push pop jnp outsl vpunpckldq cmpsl test iret ret or push ja or in add xchg enter loopne aaa in pop push sbb and pop inc ljmp adc aaa sub in es xor sbb push pop xchg push lds int in pop fwait mov (bad) movsl mov cmpsb xor (bad) rcrb cmp xchg mov jp dec les (bad) add cmc push faddl jno idiv js cld xchg xor mov es cmp jge lds das push jmp dec cmp add xchg mov mov dec mov pop test cmpsb jns cld js jecxz fbstp cmp or jb ljmp sub xchg je push xor dec cmc mov imul test cmpsl lods sub sahf and enter movsl cmp in or mov cli jecxz fmulp gs (bad) cmc stos mov out and jg mov push scas gs add push aas lret xchg inc fistpl dec sbb (bad) stc lods lret rolb cmpsl cmp (bad) in cmp cmp mov mov mov leave cltd pop mov jnp mov cmp xchg gs or sbb xchg cwtl xor mov push and scas or hlt xor vcvtsi2ssl (bad) cmp cltd cli dec and or sbb push dec xchg mov aaa jae sub or (bad) mov aad xchg jo mov test aaa xlat icebp int inc (bad) sbb and repz cmp xlat xchg in imull push cmp dec xchg pop test mov push and in repz je int3 pushf aam cwtl and jo jnp or push lods mov cmp mov popa push shl push lcall movsl decl inc or mov lret add mov stos cltd adc cmp cmpsb test test outsb push add cs mov sub popl inc leave iret jle dec push test dec out insb jbe push or and loop pop jp imul gs lret cwtl movsb call (bad) ljmp cmp add (bad) or adc fld cwtl mull add jle cmp dec sub movsb adc push or (bad) mov stos sbb into stos outsl (bad) loopne movb ret xchg sti sbb ja into xchg cmp sbb cmp xchg aas inc or icebp shl insl cmc mov xor pop xlat jne mov fcoml inc push cli adc faddl mov pop mov dec test rolb or cmp cwtl adc pop or sub andl inc lret cwtl mov push push jo dec test lea loop push adc xor (bad) test adc xlat dec push jbe mov fsubrs mov xor pop xor sbb dec ds pop xchg pop add pop loop outsb flds cld hlt jbe es xor roll mov push nop xchg mov mov lcall adc out lods stos and imul xor jp scas inc or mov push mov dec push repz ficompl and out lret dec lret in stc jb outsl fwait cltd jo cs je ret sbb xor pop popf popf pop mov rol cmp pop cmp lret xchg cli cmp ja mov repnz and mov mov xor jg mov cld dec mov daa cmp rcll (bad) jns dec adc push movsl es (bad) mov inc pushf aad lret inc imul test sahf push fdivrl in sub test and and scas pop xchg sar aam daa cld movsb mov loope inc jge iret mov dec pusha adc cmp fisttpll xchg imul sbb mov mov aas lret sahf pop jnp mov test call cmpsl or (bad) repnz jne fisub pop cs jne pop pop outsb and adc mov mov pop jne cwtl imul outsb sbb loopne pop cmpsl gs mov xchg aas xchg xor bound repnz in mov test in xchg sbbl sub mov loopne push xchg or jae sub xor je insl sub repz mov sub jbe (bad) lret daa loop fild jmp fnstenv sub sub es lods pop jb (bad) mov sbb sbb pop ds dec out lea lea fidivl pusha mov ret and add mov inc push dec add and pop ficoml pushf cmc lret in pop movsb or push pop cmp jmp stos lret pop mov jbe es fildll push cmp faddl je adc xchg stos ljmp test rorl arpl in xchg xor jne xchg mov mov into jns (bad) mov dec loope loope adc das inc (bad) pop imul or adcb push out insl or (bad) cmp cmp out pop xchg fnstcw xchg cmpsb js inc xor jmp sbb int add leave jle ja jl or cmp aad jnp pushf scas inc inc cmp jmp jnp or pop fwait lcall pop mov sbb xchg sbb xor orl (bad) insl dec cmp mov frstor mov or shll repz pop rcrb xor mov inc push jg mov test xchg repz inc loope jns std jno and test rcr fcomp into inc jnp jae jle enter out fs rorl cmc je mov movsl test adc rcll and mov mov sbb jp pop mov out lret clc sbb pop shll (bad) lds inc into call mov fimul fnstsw inc std xchg popf push pusha mov das xchg rol ja pushf xchg sbb fstl scas push mov inc stos mov rorb mov enter inc inc idivb popf insl in dec dec push in ret inc add flds inc sbb sub mov (bad) loope xchg movb inc dec mov bound push leave pusha inc add or xchg dec and sub scas push mov addl lods xchg or in xor lds fistpl clc fnstsw in jns inc xchg shr rclb sub jge adc scas push insl push or mov lahf mul mov out cmp dec xchg shll mov clc xlat and xor out mov cmp popf sub add dec push aam mov jns jns jp (bad) mov repnz imul outsb mov jge pop aas sub xor inc inc mov fwait mov dec mov mov adc push icebp leave repz cmp sub inc test nop mov jo mov and ja out stos or xor lahf xchg mov adc mov addl mov int3 xchg pop and loop outsb adc insb cmp pop and push rclb pushf cmp jb jb add ret fnstcw out outsb push leave out sub cltd mov ljmp push and in mov push xor aaa ficompl fdivrs fwait icebp pop jg pop scas rep mov test dec or scas mov jns enter (bad) test inc dec outsl ficoml fs jmp and shl add call ljmp sbb movsl cmp jnp iret stos jle,pt or xchg enter subb sar pop test jns clc xchg sbb sbb inc rolb and je mov adc jno cmp test mov mov outsb or in iret adc dec xor pop xchg sub test pushf test arpl sub test sbb sbb adc subb (bad) (bad) pushf mov sbbl or cmp and dec leave push arpl aaa mov sbb jge xor sub or sbb (bad) lahf das add xchg xchg inc insl mov mov arpl fiadd mov mov pop cmp in lret dec sbb bnd ret arpl xor xor in jbe mov aad fdivrl cli add mov cmc inc inc cmp aam dec (bad) lock popa sub sti into mov cltd lods mov add lahf test sub inc mov pop add push sbb in in mov jl je outsb and dec push aaa push fisttpll inc daa stos ret xor pop jns or das cmc mov or mov std or arpl mov cli sbb adc push mov jecxz push int3 and pop loop mov inc sbb push bnd xor out (bad) icebp int3 rcrb adc lahf les cli push jbe push sbb in push fdivp mov dec or push cwtl jle int inc iret stc ficom mov push adc test js push fwait or xor int jle loop push and push lock sbb loope pop imul xchg js daa dec mov xchg ret dec xchg push add sarl lahf push mov sbb cwtl adc sub push outsb push sbb sub loope inc lods cmc xchg insb lods lds decl mov daa ror test cmpsb cmc mov loop mov (bad) and repz hlt loopne outsl repz neg xchg arpl inc cmc jmp test sub and int stc outsl int and mov push cmp sub mov xor jl mov cld cmp imul sbbw sahf cltd mov (bad) and ljmp outsb adc push jb cmp jne or push cmp and or movsb sub lret (bad) sbb aam xor mov inc push jae imul out in movsl ja jmp jmp dec cmpsb imul lret (bad) outsl ror jae mov push lahf or cmp (bad) out js (bad) cmc cwtl mov repz out mov push test cmpsb dec sahf mov adc lret lock lcall mov adc jns mov add cltd or lock sub data16 add test mov dec ljmp sub leave pop aas sbb test mov push mov shr das pop dec push or in sbb movsb test xor aad imul pop mov mov inc xlat xor jle dec mov ret mov fstps (bad) fidiv push hlt inc (bad) call cwtl adc daa push aaa jnp jne shrb insl cmc scas jne or xor xchg xchg jge iret jne outsb jg push jge jl mov (bad) (bad) jle mov ds and xor xchg in gs test jecxz nop out and and sar sub xlat sti jbe push push and je fcoms int3 xchg cmp test (bad) je add pop (bad) mov add add pop pop out into sbb pcmpeqw cmpsl lea cmp movsb inc xchg call inc insb adc ja insl jno in add add leave mov xchg (bad) mov sub xor gs adc jb xchg push pusha mov push mov pop rcrl adc lea sub das fucom cmpsl mov xchg test lods xor xorb out pop test jl inc xor pop push jb mov cmp sub test jg,pn xchg or imul in adc int3 cmp (bad) push je lret andl fstpt aad xchg movsl je addr16 add push mov mov movsb insb jnp cmp mov out and sub ret js pushl jns (bad) mov imul push (bad) leave rolb fsts inc out cmp imul insl xchg fwait adcl add dec mov sbb mov or push fdivrs test inc out adc lds pop cmc jle mov mov cmp sbb lret icebp jns sub mov adc sub pop (bad) int3 sarb in mov sub xor addr16 fwait lret je pop push xor jb and ret inc cmpsl xor imul mov arpl in cmc (bad) mov sbb mov subl (bad) inc jno xchg dec fwait push stos and out (bad) jl sub lock outsb sub push adcl imul or cmp cmc mov pop xchg sbb clc in jae pop fs inc pop jecxz icebp adc jbe cmp aas push adc gs pop fldl out sub shrb and sub push push out (bad) imull pop in (bad) xchg movsl xchg addl in jp leave loope lret out fadds jmp movsb mov or xchg enter inc bnd mov (bad) std mov bound inc ljmp leave (bad) adc jne xchg std mov lcall dec jno dec and mov (bad) ds and test ja jp (bad) pusha inc pop dec andb dec lret movsb rcl fisttp aaa js mov mov mov das (bad) cmp pop xchg mov lea jge imul or sub out push xlat mov addr16 popa inc pop pop loop scas icebp mov loope nop (bad) pop pusha xchg mov push dec aas es in jne cld imul add sbb inc lret ljmp mov scas aaa (bad) xlat jge adc out push shrl pop dec (bad) and std loopne jae jb loopne inc das lcall (bad) jmp jnp dec mov xchg mov jge imul aam std xor lock mov and xchg insl sbbb iret pop adc pop mov lret lcall and fistl jle lds or push sahf into mov xor pop js clc and push jb aaa or (bad) pop je test fiaddl in fcmovne push cmpsl cmpsl or repnz ficoml push fs stos jge mov shrl cli pop mov ja sub xchg inc mov jb mov repz test xlat inc shr addr16 xchg xchg daa fucomip xchg stc sbb sub xchg inc shl add adc cmp mov push pop ret movsl dec dec add add adc jno gs adc cmpsb ljmp cld std cmp xchg popf add dec mov stos loop gs add pop pop mov mov aaa shr mov insl rcrw and push jecxz xor jecxz dec push inc pop loopne and out out outsb ja leave rol movb pop lds mov add pop xor test or in jge (bad) lret loop jmp push push cmp insb inc jo xchg xlat (bad) ds add vmwrite stos es lcall xchg cmp mov lret out jb mov out and popf cmp push push fs jg iret push loopne sti sbb loopne (bad) mov adc cmpsb mov ret in out cmp shlb (bad) pop stos popa xchg push push gs out dec add syscall push push jb add push test popa push hlt inc jb movsl mov lds mov sbb mov test sbb mov test (bad) push cmp xor xlat test xchg jg pushf sub jnp cmpsb jae test mov in lds or mov pop divb sbb pop mov mov and push ds adc and dec jno inc popa sbb xchg insb cli testl mov shll jmp xor ljmp imul mov jns mov ret jnp aam fisttp mov push cmpsl test cmpsl jnp rol xlat xlat popf and adc dec std shr rorl sti (bad) pop aam xor adc xchg enter lods icebp and lahf mov hlt rcrb sarl andl push lods xchg imul hlt mov lcall mov repz or fsubp xchg sbb cmp mov inc icebp ret cmp xorl iret out or stos inc mov jecxz mov out out mov daa stc push pop lods jnp mov ret push push test mov mov inc aas mov fimull xchg xchg sub test loope outsl cmp rclb inc das cli adc or int3 addr16 adc repnz inc mov idivl aas fstps pop add sbb dec sub cmp dec sub add cmc js popf dec outsb ds fistl gs leave adc push mov cwtl pop jne pop cmp js loope les xchg pusha xlat fdivl stc call push scas je (bad) xchg clc imull inc shll dec aas leave imul add daa jb mov xor cltd aas cwtl inc lea dec movsb hlt cltd mov (bad) cmp stos ret inc fcompl dec popf cmpsb (bad) cmc pop pop mov pushf xchg adc sub sbb cmp cwtl jp addr16 ss popa and popa pop cli fwait orb ja cwtl fistpll enter in cmp mov xchg (bad) mov push shl inc fcomps mov pop dec or hlt dec bound insb xor vpsrad into (bad) jae cmp aaa scas inc cmp inc mov push (bad) int3 repz arpl or fsubp fistpll push roll push mov sarb cli popf or outsl mov xchg push rorl ljmp stos xor and scas dec xchg and jg sbb mov popa out lret (bad) aaa js xsha1 cmpsb dec inc jns ret into adc cld arpl into out imul dec dec xchg scas imul mov push lds fwait sbb xchg and repnz pop mov cmp and push clc or and ljmp xchg dec ljmp and fiadd mov (bad) test push push mov mov test and loopne mov sub gs xchg je fcoml gs xchg subl add adc in jb push xor dec lock sbb sub push test xchg scas add xchg iret adc test jno cs push rorb dec orb jne jno cmpl sub in not outsl fldt les sub ret rorl call dec adc push in xchg cmpsl mov out test scas fxtract dec jmp (bad) cmp insb addr16 or dec lods arpl mov xor call movsl (bad) divb pusha mov pop das cltd mov into mov mov cwtl pop mov stos pop outsb cmp lret xor pop pop mov cmpsl and repnz inc es fsts stos dec call push (bad) mov xor add loope push aad or sbb inc cs fucompp push (bad) mov iret fwait pop or out fisubrl cli enter push ss bound iret mov dec and pop mov jne icebp xor cmc daa xchg xchg mov (bad) and divl scas sub loop pushf mov or out xchg sbb xchg pop add dec into lds dec rolb add push iret add or add jle pusha aaa cli lods push mov test repnz jne and sbb push shrb sub push sub mov mov shlb leave push pusha aam into push dec fs adc add dec mov lcall mov aas fisubl inc lods fbstp xchg inc and call mov int3 repz inc jmp mov push stc jle sub loope (bad) enter fwait pop inc pop jne mov roll shrl cld loop mov jne push arpl enter fldenv mov sub nop inc mov xchg xchg sbb scas test stos test xor xchg daa sbb mov sbb add add cld outsb xchg stos inc outsb lcall outsb daa add cs lods mov xchg xor aaa or sub rcll mov inc int push ds cmpsl popa mov inc out cmp adc outsb fnsave mov (bad) sub pop dec lcall testl roll mov sbbl push fwait inc pop nop xchg adc or jb dec imul popa xchg fcomps or (bad) in rcll or outsl mov ret jo push ljmp jge mov sub jnp,pn (bad) stos jnp xlat sbb sbb push outsl out mov andb inc int call xor mov je pop dec push negb sub push push in mov in ret in pop dec lea jge inc mov addr16 sbb xor dec pop out loop enter push sub add inc push sbb int3 or add test inc dec fs into sbb clc push pop mov jne,pt bound jae fwait nop adc js fist dec xor stc ds add dec in ret enter mov lcall and stos mov sub adc jle xor js insb flds add cld mov inc aam mov adc add mov imul mov lret addr16 xchg inc adc jl lock fild sbb pop daa lods std cmp imul mov adc xor add and orl enter jbe push jo cltd push pushf cmp mov jns xchg jno in mov (bad) or jl mov push cmp adc ljmp push call imul inc cmp testb cmp jle jg push mov sbb stos fneni(8087 pop nop incb in push jnp in mov add and mov push sbb xchg incl dec outsl mov pop xor fdivrs mov adc in daa jp adc cmp dec push dec in add or mov mov je cwtl dec jnp ljmp call cmp std loop pop (bad) xor ljmp lods stos clc push je leave push and and adc push pop sbb (bad) fnstenv out push stc (bad) lock (bad) out loope test add push (bad) xor (bad) scas mov mov xchg mov push nop xchg rcrb ljmp pushf dec jb fistp mov ljmp xor push inc or push les iret pop movsb mov mov fwait stos cmp data16 imul (bad) (bad) lret call add pop xor (bad) hlt ds cld mov ss iret arpl cmpsl dec push mov xor clc add data16 cld push sub addr16 mov xchg push ret shrl xchg mov pop int3 mov mov test out aad (bad) fildl jb add xchg mov das mov vsubss jo (bad) scas cmc add inc lea jle ret jae jbe (bad) in arpl js mov fsubr jmp fisubl mov jge mov int scas pop jl pop jne mov in in add lock jae fdiv divl dec dec lret sbb out and dec mov inc inc std or mov gs shr repnz or mov ljmp push push fsubr subl imul push sbbl (bad) mov daa pop or scas mov (bad) cld pop pop sbbb sub jnp or std inc jns rcrl loop pushf cmp test dec out pop push jno and xchg ss cli stos dec pop sahf ret imul daa mov adc or js add (bad) stc pop push adc testb rcrl and js imul dec in lea and into lock ja movsl jb fisubr aad push fnsave and in loop ficomp loopne adc call movsl xchg sub std push lret aam cmpsb lods inc mov mov or repnz daa xchg sub clc inc jb lds aas sub pop mov pushf in cmp push pop loop std mov (bad) jb movsl mov dec or or fildl int mov or pop insl loopne sti push out out ficomp pop xor out addr16 cmp loope inc ds sbb lods ja ret xor mov stc xchg sub mov dec out mov or (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz pushl add incl in adc pop cmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ror jbe xchg mov xchg insl fistpl pop lret mov pop lret jne insl (bad) neg (bad) (bad) ds icebp add (bad) xlat add inc push add add ret sbb fisub mov (bad) shll rorb data16 inc pop sbb not jnp popa out xlat cli jae or cmpsb enter adc push lods stos fcomps int inc cmp add stos sbbl push imul xchg cmpb pop iret inc push in pop add mov jge mov dec pop bound mov jmp mov stos scas cmpsl jnp pop pop lds lods repnz fsubr les test and sub mov add mov (bad) in stos fdivp cmp rcll outsl loopne (bad) push adc stos cli mov fs lods xchg push add sub fist stc push mov (bad) xchg mov xchg out arpl push ret sbb mov mov repz pop loope pop xchg dec push jbe push mulb loop pusha cmp jnp (bad) test insl cmp push pop insb xchg push dec xor aad js outsb out and mov sbb mov cmp dec adc mov shr mov pop out scas jns clc das add loop repnz clc dec repz push cmp loope imul sub ret (bad) adc dec mov outsb fidiv sub dec jl popa mov adc mov ret daa adc stos lods dec scas das lods mov popf js jo aas lock insl mov mov xchg fidivrl loope js sbb push in mov xchg rolb jns fdivrp mov incl hlt jl aad lea add push sbb pop dec jmp or data16 dec pop es mov add lcall dec cmp xor pushf cmpb inc push xor mov sti rclb repz push xchg xor dec dec jo fmuls addr16 pop in (bad) (bad) pop push scas push mov sbb mov pop inc xor int3 xchg aaa or add and cli dec xchg mov cmc rcrl int jno cmc and stos sub mov pop push xor sub js sahf sbb lcall pusha pop fs xor mov or fcmovb pop mov jb outsl xchg ffree (bad) xor arpl in rol imul jmp nop ds loop int3 push push call sub jno cmp xor cmp adc insl pop mov mov push mov add xchg out dec dec jp idivl inc fildl mov and sbb loope std orb mov pop mov push inc dec cmp mov std push (bad) xor mov or inc add outsb (bad) (bad) jo mov call sbb dec jge negl inc fstl test outsl inc out repz pop lahf sbb clc sub cmp cmp push push movsb or (bad) mov movsl test mov xor (bad) in sahf xor es sti sub and (bad) lds push sub add mov mov data16 push enter mov mov ja ficoml je adc cltd jnp int std gs jb mov fldt push sbb test adc gs pusha adc mov pop (bad) mov push aad xchg movsb xchg cmc stc mov sub sbb sti nop jnp iret cs hlt and lahf call into lcall mov gs hlt inc popa and loopne jae jp jno cmovge pop into std xor ret jg aam cmp or loope enter and inc in dec xor fs pop xchg mov ret cmp sub xchg adc int3 pop insb inc and jmp add mov int push and dec adc cmp in lock jg mov or push or insl scas cmpsl xchg cmp dec (bad) sub (bad) test movsl repnz fdivl xchg cmp loope lds jo scas or outsl movsb lods mov sahf adc jmp nop movsb (bad) push movsl ret pop push in cmpsb jge enter cmp out push sub jns pop cmp rcr inc push sub negb sub outsl push js or (bad) enter xor dec or jo imul aaa es dec inc mov (bad) mov mov mov cwtl (bad) jp shll sbb aaa dec orl rcrb (bad) jnp enter iret int3 cli mov (bad) cmp std aaa mov popf sbb lcall mov pop mov push lcall adc adc push stc insb decl dec add fdivrl insl subb xchg pop scas fucom insl sarb fidiv notb cli xor lods inc cmp fiaddl cltd imul es push inc sbb ds in test mov das aam loopne fadds sbb jnp dec test sub out mov shl fstpt loope mov jp or rolb and (bad) mov inc push xor frstor cmpsb fwait pop dec xchg daa scas stos insb pushf pop adc jp test or xor pop insb sub mov stos aad addl outsb and push xor bound mov and add out and xchg iret fldenv bound hlt xchg and mov mov hlt imul and into imul or scas jecxz loopne xlat cmp daa aas in les pop aam fadds fiaddl push xchg bound ret out mov push lcall dec mov pushl pop push fiadd scas mul jno arpl into movsl in sbb push xchg push sbb adc inc test push lret icebp icebp lock push xchg lods clc aaa add lret insl dec add maskmovq imull aam mov ret jmp sub mov push pop fidivrl cmc sarl (bad) fwait mov mov cmpsl stos jp je mov mov iret mov stc add mov cli sub inc sub pusha xor dec loopne adc scas loope sub dec push push ret and fdiv dec sub jnp,pt pop xchg aaa adc icebp cmp dec lret outsl fcmovbe ror mov les sbb or stos sbb cltd test in mov pop iret xor aas mov fisubr cli or lock lret add popa lds inc int3 inc and repnz push es mov jg cmp inc or int3 mov out stos fwait in outsb sbb pop or or cld dec xchg xchg jb or pop test mov (bad) enter je stos inc cmc clc xchg push lcall jbe aas or mov nop in (bad) test fimul stos lds dec sahf jo inc test pop insb frstor aas pop je mov lock ret aaa dec test repz out es rcl in popf shlb in lret cmp xchg ret mov call fisubr rcr add push movsl sbb gs repnz test dec fs xor ja daa cmpsl sub jp push scas mov aam in repz mov aaa pop imul test mov clc mov iret pop cmpsl cmpsl pop int3 dec call jecxz in push cs sahf xor dec cli cmp out fwait mov daa hlt xor (bad) aas js inc outsb lea sub cld insl clc adc or scas mov jg daa dec inc jge fdiv pop inc xor cltd ret in js mov mov (bad) dec shr push insb cmpsb (bad) fiadd mov ret sbb mov leave mov dec jmpw icebp pop mov cmp popa lock (bad) in bndstx outsl sub cli loope add out and cmpsb cmpsb xchg mov dec mov out dec push shlb orb sub pop loope js js push xchg aam adcl adc fldcw loopne inc adc outsb mov cmp dec jnp imull or rcr in clc loop enter stc sbb mov sti push cmpsb jle (bad) xchg inc cmpsb fs xchg repnz push das stos mov mov jp jge ret loopne (bad) push je outsb lret inc insl test test mov mov dec xchg subl cmpsl cmp iret jb push sbb shl add shll lods sub push or ret xchg inc cmpsl loope or and (bad) pop cmc outsb les (bad) jns jns arpl scas add jno xchg not cmp and mov shrl ss inc inc mov add int fsubp mov jne cmp stos aam sbb fcomps pop jns aas fimul icebp (bad) sbb pop cmc mov mov in movsb jecxz iret lods rcr les rolb pop loope sub imul dec aaa fxch xor mov xchg movsb cs mov and xor and loopne movsb xchg dec test cmp inc xchg leave push iret xchg xor dec xchg mov popf les mov xor les data16 push pop mov test leave shll jno push cld sbbl shl jae imul icebp into and jb jp dec or sbb (bad) (bad) adc jp fbld lock je lret pop jp hlt cmpsb adc lret sub daa sarl adc push adcl sbbl jecxz test pop cltd mov or test inc loope (bad) arpl or pop add mov inc sbb popf dec jge sbb mov std scas (bad) mov call in pop das aas clc (bad) iret popa push xchg and mov sbb and enter jecxz sbb mov lret out cmc aam iret std push out push sub cltd dec movl orb stos in (bad) fwait or sbb into dec fnop xchg xlat mov sub in mov sub and mov mov mov (bad) xor inc fwait sub push call aas push mov xchg dec popf adc js cmp add cld sub test sahf int addr16 and fsub sub fiadd orl jmp idivb adc lods and cmc testl scas jge adc cmc dec inc js xor cs ja inc ds lret cli mov mov mov lods jb incb sub orl sub sub mov pop lcall jns rolb (bad) xor jb lret xor aam pop scas roll dec (bad) jo xor hlt jno (bad) out add popa fbstp hlt js pop sti repz dec cld daa ljmp cmpsl movl clc dec addr16 and push add xchg inc fs mov fmull lret jns pop and movsb cmp test xor cmp sub dec and pop xchg sti cwtl or icebp push add xlat fnstsw add les jecxz rclb add outsb inc push mov jbe outsl sahf mov clc ljmp dec and or jno mov push cld add ret push pop or push stos js outsb push enter push adc or (bad) mov mov pop das outsb ja icebp pop inc xchg stos push pop and sbb xchg ret add rcll push jmp xchg pop jecxz je das mov jns xchg cmp mov and mov mov out or dec and mov jmp call das xchg cwtl and pop lods loop sub cmc popf push dec into mov pop test inc or pop push jl mov and pop das in push jge insl dec dec sub rclb xor js lret pop pop cmp js add xchg jne mov dec fdivrp mov movsl in pusha in mov sbb movsl std fnstcw lea ds and pop push push mov and das add or icebp dec (bad) ficompl dec and cmp cmp rcr dec inc into mov cli inc (bad) dec dec es mov mov sbb push (bad) aas les jns xor xor ret out mov gs xor xor add (bad) popa loopne iret jno and leave inc inc mov mov es mov jg mov inc ror imul or xchg aas mov sub mov dec (bad) xlat std fldl outsb mov mov adc dec hlt std cwtl add mov mov fiadd xchg add jp sbb (bad) (bad) notl cmpsb rorb lret pop fs popf pop movsb popf mov cmpsl vmovd outsb call stos push jo out ljmp fwait pop jbe js (bad) (bad) faddl and sbb ds nop sub pop cmp push cmp inc stc push pop (bad) mov mov (bad) jmp push paddsw out nop int3 je push jmp push int3 (bad) sub mov in push jb push (bad) incb xchg rcrl pop pop (bad) cld je ret aas lock cmp push sub (bad) or jo dec ja,pt mov sbb pop cmp xor data16 xor xchg or jge xor adc fisubl and push in pop push adc push fcomi outsb dec mov jno (bad) sarb xchg repz dec leave loope faddp push sbb adcb imul mov push dec out cltd out mov add or push pop mov xor or cmc inc pop jecxz and or popf jg jae ds lret loop inc inc push clc mov mov outsl jno dec jg and adc in ds cmp xor cmpsb mov adc mov leave cwtl mov xor push push (bad) xchg ds cmpsl jbe push sbb cmp test (bad) cltd lahf mov mov dec sbb addl shll mov jp mov std pop test or stc push jge sbb aad fwait xchg cmp (bad) movsb inc cwtl movsb rcl dec lret push mov sbb pop out push stos or sbb (bad) loopne dec mov pop mov push sub push mov inc shrl dec mov jmp daa fcmovu sbb flds hlt or je shll imul sub leave jl rolb xor mov or push cwtl mov cmp fistl (bad) push and loope inc mov incl pop mov rol xchg negb mov outsb fdivrs sub sbb mov inc xchg adc je cli pop sub lds pop mov sub pop mov jmp jo jns xchg xor dec mov adc enter stc loopne scas stc rorl inc daa and sti sbb (bad) mov push aas mov loop add dec test fwait lock mov push pop js or adc and xor adc xchg xchg clc fimul daa or rol dec sbb jne mov sbb dec imul xchg or mov xor ja sub imul les fsts out pushf xor lcall rcr inc in (bad) add incl mov gs (bad) leave dec dec jmp xchg lret rclb fsubs xchg xor sbb or dec dec mov inc sbb dec aas mov sub cltd mov cmp aad inc stc ficom imul (bad) insl mov fdivs (bad) sbb and icebp sbb xchg or xchg clc mov sarl les fbld repnz outsl cmpsl leave xchg das push xchg int3 push out pusha in gs dec adc nop sub mov push xor sub stc stos xorb adc sahf pop lods push jge cmpsb pusha sub cltd pusha inc or add cmp (bad) frstor adc lret adc imul data16 out aam ds iret dec mov adcl mov or (bad) cmp xchg out jns andb push out sub sbb pop inc inc rolb mov insb bound sub xor dec sbb into sbb leave push int3 add fild (bad) xor mov std sub xchg aad inc or (bad) mulb mov sub xlat cmp loopne adc ds test roll sub in jg cmpsb jge cld mov mov sbb and fisub xlat enter mov cld jmp lret jne jmp addr16 push push cmp xor (bad) loopne ss call (bad) xor push cltd mov dec incl pusha fistpl inc (bad) cmp jns cltd mov hlt lds add mov lea mov push add cmc (bad) je mov outsb aad or loopne call shrl shll dec movsl mov dec fnstcw jmpw fildl cltd pop imul insb les push fldcw sub pusha or or fistpll mov lock cmp pusha lods pop test sub sub xchg int3 das push out inc fs pusha push clc in add sub or push (bad) sbb jge dec mov sarl mov add in int3 shlb fcoms fstpt cmp dec fcoml sub dec jo push sub cmpsl cmc leave xlat jnp ja or push pop mov jle jo lea or pusha es movsl push ffree fmul push addr16 xchg addr16 popl dec push sub xlat movsb push outsl push cltd ljmp dec enter fnsave lea enter sub jle mul (bad) aad add popf pop icebp in sti push mov inc pushw icebp inc (bad) jnp loop aad insb std int or outsb into loope pop jne int3 xchg pop scas lret test rclb inc pop imull fdivrl pop jo fild enter jge and inc repz adc jae mov (bad) xchg adc mov sbb inc mov inc in jg,pt clc sbb (bad) loopne jo mov les xchg cwtl loope mov xchg and or add testb push aas inc fldenv and adc sub inc mov sbb sti cwtl pop insb out insl clc mov enter adc jae movsb pop xor das fwait or push dec dec pop test gs pop mov inc pop test test rcr jb jae int cmp xchg push adc add pushl ds dec add sub mov fstl (bad) lock adc pop pop (bad) push push lahf jne insl mov (bad) cmp ret pushf inc loope int3 out dec mov push loope mov pop gs imul inc test xchg movsb mov add jo push repz sahf in and mov frstor popl pop xchg data16 hlt std imul inc int das mov push and push jae mov pop out and inc out lret push cmp (bad) dec jge xor pop push dec stos or stos (bad) je das outsl cmp jg in add fidiv xchg leave xchg push lret xchg push pop and pop pop call pop popa lret pushf (bad) std fistpl inc outsb cltd fdivrs mov lret fnstcw pop into jl insl outsl sub and add adc rclb xchg notb enter mov sub xchg or sti xchg push stc mov inc out jno push push movsl sub mov mov (bad) push cmp ja in test in dec adc cli or xor push sub (bad) or adc icebp (bad) xchg mov clc rcrb inc (bad) mov mov repz ror pusha xor pushf cmp movsl dec repz out es push jmp cmc inc dec xor xor lock inc loope fcompl jae jae sbb ss cmp stos mov test shlb xor cmc inc and xor in add xor push and int3 inc pop cs pop sbb pushf and lea mov add cltd and inc imul (bad) roll daa sbb mov pusha inc jmp ret sbb pop mov ds test insl cli mov addl fiaddl andb add (bad) pop xor (bad) or ret mov fcompl jp movsl jl std xchg xchg test jae xchg mov jae adc aad (bad) in in dec inc dec jns stc iret test pusha nop xor and push dec inc pop push mov cs adc adc jmp test loopne inc sbb dec xchg xor rcrb dec fimul ljmp clc add add adc leave xor xchg in int3 mov pop js insw rcr (bad) loope jge pop adc or push mov mov lret nop mov cwtl fnstcw mov cmp pop sub in in out push in mov pop xchg and pop sub sbb pop mov lods adc inc mov jle pop or outsl jle and dec ljmp out call push push and pop loope xchg mov push pop jae sub jge cmp and add sub mov sbb je arpl mov es jne cld add xor popa daa inc pop xor aaa jbe mov fcom xor into into push (bad) or scas xchg cmp (bad) fsubl in (bad) xor xchg mov xor mov push fistpl decl or or ss daa inc mov push adc inc mov dec cwtl mov mov mov pop out movsl and insl je or loop scas jl pop dec pop repz lea mov dec lret mov clc pause int bound adc mov inc and mov xor mov xchg out fstps aad mov mov loope shlb or cmp xchg clc into hlt add jl cmp mov xchg and pushf outsl mov pop daa fldl adc cmpsb in and push mov inc daa dec in adc mov inc cmp sbb (bad) mov das pop or mov cs xor sub test xchg or and cli aam push js enter xor ret jae (bad) mov lcall sbb stc jae and mov ja xlat cmp push movsl and pop repz popa ret pop xchg sub data16 (bad) in cld test dec and mov and mov or test jae jl inc and sub insb mov pop cmp ds and mov or mov push adc mov popf and push jge jno lret push popa mov jge mov jle imul cmp push cmp mov pop push lret pop daa (bad) pop sbb icebp mov mov mov add mov push hlt sbb pop std imul (bad) mov mov cmp xchg cmp push test or pop jbe les fxch adc inc mov xor fwait lahf inc cmp cwtl mov pop int3 mov loop fs xchg mov add mov mov int (bad) ja pop jle imul add add mov mov pop xchg out int3 push pop mov mov mov xchg mov (bad) ja aam int3 sbb lahf leave add das jae lahf adc mov js xorl fmuls or dec lcall mov cmp jle icebp cmp into lods rorl pop or mov pop cmp repnz enter dec mov push sub (bad) lahf add push lods shrb movsb imul xchg out clc mov repnz sub outsl in call jge adc inc insw mov dec incb (bad) test (bad) lret cmpsl mov mov leave cmp add and mov les pop ds lods adc mov pusha jle pop jo movsb out adc stos cltd mov inc add in rorl push stc or pop cmp push jmp loope mov and mov (bad) out mov ret sbb (bad) xor pop xor outsb test dec jp adc pop xchg popa mov outsl push adc push push mov mov (bad) adc clc xchg (bad) nop mov clc jnp mov nop stos jns movsb or (bad) mov stos push (bad) sarl push sbb mov mov push push aaa sarl fsts jp sbb movaps pop popf sub shrl xor jecxz rorb ror insl lret jbe divb pop xlat add test andl shl fs xchg call jl push aad mov cmc loope mov pop imul inc fdivrl dec aam adc push push insb stos xor lcall into lds sbb add sub cmpsb and enter jle int3 shll bound cmp inc jmp pop std fsubs in adc notl jbe sahf sub xor mov outsl lds mov scas aam sbb xor pusha push mov jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add add sti cmpsl or ficomp add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg insl popf gs in pop cmp in aad sub fldt out insl (bad) js xlat inc mov mov add adc sub pop sub fs push inc jmp or loopne sub sahf dec mov jo cmpsb lock cmp (bad) into out call and mov sub dec in adc cmp mov int sub lcall cmp popa scas push das xor lock and stc mov xor inc inc push stos and lock xchg mov jg lahf insb das push in mov imull jmp pushf inc addps repnz inc lahf out push insl cwtl sub outsb dec jns pop pop or mov in mov add cmp xchg mov push aad scas mov pop loope out or push movsl add cmp test push or cmc sbb in scas cmp push and (bad) ja jo jns (bad) add mov xorl or add pop mov dec push insb cmp loop jp push lock sbb rol addr16 fstp scas sbb cs ds cmpl push push int xchg cmp push add (bad) push ljmp sub je pop rol mov lret pop lock lds lea xor mov pop das mov xchg pop call sti enter cmp or inc test ja sarl push lods xchg ret push loopne outsb sub xchg sbb dec cltd inc xchg xchg sub jge ffree addr16 ds inc push push mov aas fcomp stos daa sti cmpsl mov sbb and nop inc inc and push sub mov iret data16 xchg cmc mov xor lcall aaa jno mov mov cmp (bad) sbb cmp std push and aad add dec inc mov xor imul adcl out lock (bad) adc stc outsb dec mov aas sti in adc pop test push rorl and mov in js mov repnz insl pop and jp dec imul cmpsl add popa loope mov insl jg mov movsl je push in jne jge (bad) scas ja repnz mov mov ds cmp or inc aam pop cmp ss mov fimul add lahf xchg (bad) int in dec xor les pop xchg mov add cmc loop out std lcall rcrl mul mov jge and int3 mov loope scas lret ss cmpsl rclb pop sub fwait mov push adc cmp mov rcr mov fisub out loope mov and push aam sub sar in add pop fimul lgs push dec xchg jle cld mov outsb loope mov mov adc mov call sbb xchg cmp inc mov mov lret mov inc pusha gs lret pop (bad) cmp addl je adcl jne arpl or push mov mov dec push xchg lret mov mov (bad) movsb mov iret pop cmc into sbb adc mov test loopne xchg push cli add pop leave nop fwait pop in (bad) mov (bad) sbb push sub jbe out in add out (bad) mov add and inc and push mov lds or mov mov mov ret (bad) shll lods int jg pop test jg out mov imul out jge push and sbb add pushf ds (bad) lods dec jo dec lock ja adc push pop rcrl ss lods cmpsl fcmovne mov jae addr16 dec icebp xor push negb add outsb pop jge test jg ljmp or jle and mov mov cld xchg add je movsl and xchg push xor adc cwtl orb inc mov inc pop lcall insb mov xchg test inc sbb jnp mov std pusha mov cmc mov lods stos push or and insl stos sbb sahf cmp lsl sbbl or data16 mov lds aas push (bad) sbb imul mov mov adc xchg fistpll xchg fisttpl sbb sbb or dec jecxz and cmp pop jne jl movsl pushf fmull and aad xchg or test (bad) aam and sbbl cmp sub enter or iret jecxz out add and js jbe xchg jns sahf sub dec or outsb cli mov test adc adc mov fist xchg lods ss pop pop (bad) and push (bad) add jb jno or add mov pop cld loopne push mov mov mov stos jno test stos xor sub pop sbb jnp lock mov fimul and sbb outsb daa dec fwait dec int pop dec push lahf jbe cmp xor adc xchg cmpsl jo xor jne insl add pop cltd pop push mov jl mov pop or je sar dec mov xrelease dec add adc xchg (bad) add xor cltd push push outsb jns in outsl fimull cltd and xor lret test xor (bad) in inc or and cltd mov sub pop inc insb pop popf mov xor cwtl leave inc dec cmp xchg aad xchg jle cld sub out stc xor xchg xchg xlat outsb out mov inc fldcw fwait (bad) repnz lds out int test fidivrl rol pop add subl fimul je icebp pop and cmp xor sub test (bad) lret or add and pop je pop fldl sar hlt cmp xchg leave divl inc aad sbb dec and sti xor cmp int3 iret imul (bad) (bad) popa sub shll push (bad) push fstps cmpsb mov in js rcl add push add xlat cmp mov cli adc leave cs push push push pop jp bound ljmp clc (bad) dec adc push sub call mov cmp xor jge add adc popf inc push shrl cmc lahf fstp into sub icebp mov mov sbb std jmp dec sbb sti data16 call rclb add cltd or fstp and ljmp sub and sub lret lcall or ficom lods mov ja adc cmc push cmp out pop mov pop pop inc dec flds or add xor or pop push incb cwtl ja ja or bound mov adc fstpl mov cmp jecxz sti jp pop mov mov mov fldenv mov or vmovntps sahf outsl mov int mov inc mov ret dec or sar mov pop mov leave inc lock cmpsl xor cmpsl xor or leave adc and mov fsubl rcl lret cmc push jne fcmovb add xchg imul decb das and sub mov fnstsw mov negb xchg pop adc fstps mov dec and xchg push loope lock fldlg2 sbb mov cmp jne pop sbb icebp cld and ja xchg push mov jno push dec jecxz xor out (bad) (bad) xchg mov push mov loop xchg inc mov aas test sbb lret movsl movsl xchg and imul (bad) jb push das cmpsb loop mov cltd xcrypt-ofb cmpsl push std cmp mov lods in pop (bad) in xchg (bad) or fcmove mov push ror cmc das repz pop loop imul sbb xchg jne xchg jge movsb mov inc pop jp repz mov inc aaa aam daa andl and imul test push nop icebp sbb cmp rcrl das and (bad) mov test push out mov pop push mov lea int and or sbb test rep xchg mov and mov imul fstpl mov xchg popf in and fsubs dec xlat and xchg mov inc rol sahf (bad) les (bad) xor cld sbb push jecxz push jo jae inc (bad) add xor lret cmp adc (bad) cmc pop popl sbb int je cmp jl pop repz mov xchg shrl xor pushf xchg dec int lahf fldt (bad) pop mov mov jge iret hlt stos mov or push gs pop icebp test push sub popf dec (bad) iret xlat dec mov int inc xchg fisubl mov movsb cmp sti addb cltd in jns lcall fwait xor rcrb (bad) pusha aad rcrl pop push mov sarb das xor cmp cmp adc xor subl cld sub in mov pushf cmp mov mov push mov or push dec lahf jecxz adc stos mov push outsl push and adc sbb mov dec int3 inc hlt mov mov push stos pop dec lret aam out mov (bad) mov imul inc inc mov and cld std (bad) cmp les sub (bad) mov or add push bound push fs imul jl pushf je popa out inc mov aaa push inc pop xchg mov or add rcl flds dec dec mov arpl ret and and add loope scas dec add jbe das cmp jp cmc push cmp aaa mov push inc stos sbb cmp mov mov fwait add scas push dec mov fcmove jnp dec std repnz hlt stos test outsl repz mov mov (bad) hlt mov andb dec icebp cmp mov out fistpl cmp add dec sub sub mov pop sarb cld aad in call push (bad) cltd mov or shrb in js mov xor out push and and test lret lea jb dec push cmp push popf pop cmpsl (bad) xchg add lock inc int xchg shrl xchg jae xor push push cwtl sbb dec aam sub mov cwtl pop in cwtl lds pop dec jl ja fsubrs scas hlt arpl adc scas adc adc je adc loopne test xchg imul jnp xchg and xor cmpsb xchg pop dec dec out stos add inc xchg adc jns nop enter sub sub dec push dec cmp insl push cwtl push decb pop aad mov cmp and cmp fldenv push mov inc sub imul mov call xor stos lcall paddd shll ficomp xchg push aaa xlat sub sub fwait leave mov push stos (bad) lret cmp pop jecxz mov jl and sub sub in (bad) fdivs cmc sahf xlat movnti xorl mov jecxz mov or mov test cpuid mov sar pop es pop stc outsl cmp xchg push xorps push dec (bad) ffreep loope in mov add adc out and jae popf stc pop jo ss dec leave sbb jnp jae mov mov pop xchg mov cmp pop push pop mov (bad) lret mov add aas out outsb fs scas pop outsb xor dec dec mov test mov ret (bad) imul push dec rclb dec jge mov lods (bad) cmc inc addr16 or jp call test mov mov int xor and dec xchg jae sub xchg cmpsl jp push addr16 enter jb shll gs fs push mov pop inc repnz js (bad) adc xchg jmp mov popa and jl ljmp or inc clc jo mov ja mov inc and mov mov sbb lldt or in daa dec push dec mov sbb pop sub pop xchg movsl pop cwtl jecxz cli cmp call pop (bad) push and imul outsb or sbb sbb or (bad) xor aaa adc push xor cli cmp les jns lods adc aas cmpsl rclb and lds btc mov xchg and xchg lods mov push in push xlat (bad) in (bad) mov cltd gs insb in xlat jne jno cmpsl cwtl (bad) (bad) sbb dec xor mov adc add scas xchg sbb mov dec int3 test xchg aad cmp pop lret lret cld jle jb inc cmpb ret or xchg adc (bad) xchg jecxz lods loopne cmc dec mov sub mov jb mov or lahf movsb insl aas pop sbb mov sbbl mov xchg fdiv sub push fdivs pop cwtl pop mov mov cmp dec lret mov add push push push leave inc mov shrl pop xchg aas cmpsb out dec nop repz inc jmp push aas imul lods loop int xchg leave mov xchg and and pop leave xlat mov dec scas inc inc and es inc sahf mov lahf out mov adc (bad) mov cltd sub add frstor int mov and jg mov cmp out test jmp mov push inc dec sbb or adc push cmp pop mulb fwait push gs push mov pcmpgtb or sbb pop jg sbb and ja xchg xor test xchg jp sahf push pop (bad) out pusha aad jno mov cmpsb or pop mov ljmp push cmc fisubl es pop jge les sar (bad) lea repz xchg cmp sahf xor (bad) std fxtract lock xchg push jle fimull call xor jp pop or dec and jmp iret fstpt cmp sub mov sbb test jecxz lcall add jo mov flds dec insb dec int3 cmp dec sbb repz lds test sbb jge lahf inc push iret jmp xor add push out fdiv jb in xchg int dec cmp and stos aad clc sahf popa icebp mov pusha or and jge add xchg out (bad) push inc mov sti mov xchg cmp mov divb mov mov enter mov aad jg dec sub sbb pop test call cmp flds dec push mov jae add pop and dec insl jns idivl mov mov adc push test daa xchg or in leave adc mov inc mov mov xchg dec sahf dec fwait (bad) fistpll aad fsts adc popa pop mov mov xchg jae sbb xchg mov testb movsb xorb add push scas xor adc andl mov pop mov lods daa jp inc cwtl (bad) in pop cmp or cmpsb lea hlt int3 xchg and mov scas aam or pop mov insb push in xchg pop jle in iret popf pop inc ja sub popf push fimul icebp xchg pop cmp icebp popf xchg mov and push ret ja inc insl pop call lret push adc pop jnp (bad) jnp (bad) mov (bad) jae jno mov mov jae nop push popf xchg inc mov das fnstsw pop dec xchg fidivl sub aas inc popf add cmp rcr xor cmp jno sub pop jecxz pop pop jb jle jl addr16 out fwait push pushl imul repz lahf mov loop int3 addr16 cwtl xchg (bad) jmp js adc addb dec aaa xor daa cld repz adcl outsl xor dec ret jmp pop cmc adc push (bad) sbb aad movsl cs mov rclb enter dec dec xchg arpl sub push cltd or mov insl sbb fimul fucomi add mov add insb mov pop in dec mov mov leave out test mov loop cmc jg pop cmp fwait jg mov lret jl subl aas shr sbb inc ss pop push add xor xchg mov mov fnstenv imul cmp sub loopne lcall mov push mov out mov gs or les movsb jne or add movsb nop sbb xchg inc push or outsb jmp hlt ret xor jl xchg jae,pt js lods push sub mov adc jns xchg push repz fildl pop jae jmp or push flds lahf hlt fisttpll jg test imul cmpsl insl test push xchg arpl xchg in scas push mov inc mov jecxz (bad) cs shll sbb outsl ds xor mov test repz pop imul pop int3 push cmp lods sub fstps nop push out mov mov outsl (bad) aad mov push push les xchg add lahf dec add scas stos pop fmuls daa stc push shr in fistpll rolb jg clc push sub (bad) sub push mov in (bad) js fldl call fsts push mov iret test (bad) ds in cmpsb sub repz mov lock dec (bad) repnz cmp and jb push adc in ret stos push lea sbb add sar sbb dec jo jecxz vpackssdw pop fs outsb inc xor mov outsb xchg rol popf push mov in inc cmp cmpsb fsubr adc cmp and popa lret fsubrs popa arpl or enter adc stos xchg xlat mov lret es (bad) repnz dec fimull std loop mov sub hlt test divb dec mov xor jmp mov cld pop cltd mov icebp aaa addl or stos push or cmp ss loop sbb jno xchg mov scas push int jae faddl cmp push or push sub divl mov repz push jecxz out fs mov ficom movsl sub sbb test int3 sub pushl jno fidivrl pop loope enter adc mov imul jb add dec int in push push sub cld lods dec mov dec mov scas and test lret js pusha push mov mov sub adc insb mov int3 dec xchg jnp jge cld outsl adc ret lea test sub mov or xlat movsb mov add dec movl dec xor bound stos sti mov push xchg cld adc inc shrl cmp mov arpl xor push xlat xor jns fs sub add push sbb adc dec fsubs cmp and jnp dec mov mov sub lea imul sbb shl adc xor sti daa sub jae ffreep stc out adc lahf pop js (bad) leave ljmp jge or test stos xchg into cmp cltd in test or push push out jb lock rcr pop icebp adcl (bad) cmp cmp ret pop (bad) dec repz rcrl outsl push push pop xor scas bound inc cmp cmp addb call lds lea dec xchg jnp dec pop aas pushf inc (bad) dec lret xchg inc fidiv movl in inc mov or (bad) stc add mov inc pop inc sbbl pop rorb mov sbb cmp cmp sub out cmc push xchg and dec loop pop mov hlt sbb mov inc out xchg clc xlat rorb pop jecxz xor ret cmp das fs inc int3 inc sub jl addr16 test add out popf daa sub dec adc sti mull outsb or (bad) pop rorb or fcoml xor pop (bad) in inc jmp in imul inc jecxz jle mov jg sbb out add sub mov mov inc mov xchg adc inc insb xchg sbb cmpsl pop data16 mov add bnd and cld pop xchg (bad) out jo mov out js jge ja les push daa fpatan repz xchg nop out inc es dec mov andps testb xor lods mov ja aas sub pushw pop ret jae and int3 test out stos je add test dec sub mov push sub (bad) sbb sbb (bad) mov ror arpl xchg cmpsl cmpsl sbb fnstsw inc addr16 les and pop jns addr16 dec sbb add inc ja pop inc nop dec lock mov pushf test out cld ss cmpsb sbb jge nop clc xor cld test jle xor (bad) enter lret push mov jge lods daa in pop jno stos daa pop rclb mov jecxz icebp jns rorb push lea sub xchg int3 xchg push call rol push fneni(8087 sbb cmp push sub je (bad) icebp hlt sbb imul jge in inc std mov add dec xchg hlt (bad) ficom adc pop in les int arpl and pop mov aaa xorl in or outsl arpl xor mov xchg or repz pop pop insl shrl adc daa shrb out or mov cmp dec bt pop mov loop add test mov imull push push mov rcr jae dec cli adc sub dec jnp lock test sbb les repz jne ljmp adc ret jge nop out dec or adc aam iret fdiv add sbb cmp and insl sti inc xchg dec test push sbb icebp sbb repz mov hlt pop decl cmp xchg iret js inc pop xor jae pop sahf lahf xchg xchg lahf lcall xchg and es popa ret movsb pop fisub loop adc cvtdq2ps sti imul jno sbb lea pop mov xor idivl or mov adc push cmp jle,pt testl sahf ret int3 stos sub (bad) mov mov mov mov adc or subb mov scas xor pop or push jecxz dec inc pop pop xor sub push fstps mov std mov insl aam out and and mov ficom (bad) into mov push pusha xor jbe or (bad) jae add xlat icebp ss je jmp mov inc add jmp rol cmp pop cmpsb lcall cwtl xchg xchg in mov jo adc or dec sahf addr16 pop test addl in push ds fsubrl wrmsr mov loopne movsb xchg dec xchg aam dec xor pop cmc aam (bad) out xor dec add mov mov inc mov lahf jmp mov lds sub pop icebp loope fimul (bad) (bad) jp iret or js inc pop out (bad) and movsb pop loopne sti mov mov dec outsl push pop (bad) pop dec stos dec ds movsw ss add sarb enter pop les cmc dec scas xchg sub push lahf xchg mov mov mov xor mov rcll dec rcll repnz mov add rolb or repnz stos (bad) scas xchg add xor and mov sbb aam and add sbb aas (bad) (bad) pop sub es icebp data16 lahf sbb out mov dec lahf pop cmp mov ja add dec pop (bad) sbb mov adc arpl push loope mov push (bad) xor iret inc adc call mov fs les push sub dec mov stc mov ss repz jo (bad) shlb push (bad) stc xor jno cld andl in lock popa loopne cmp es add cwtl insb xchg adc js lea mov pop sub stos mov pusha cmc inc cmp inc (bad) std jne pop shr stos addr16 xchg mov sub in adc xchg jns mov insl jb mov mov out es clc xchg push dec (bad) mov mov or jb and add sub (bad) pop out and pop pop ds lods xor mov xor sub dec ret cmp lret lods movsb mov xlat outsl idivl js mov dec out xlat push fadds sub iret and mov dec stos cmpsl dec inc popa inc in sub cwtl ret cmp fisttpl test orl mov int xor loop jmp push sbb mov aaa xchg adc stos lock adc push jo (bad) pop mov adc or inc imul hlt movsl push inc pop mov loop fs xor lcall in mov outsb mov xchg je popl add (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz sub xor imull add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb add loopne lret out mov (bad) mov jecxz cltd imul insl mov mov (bad) in sub lahf pop add mov add add out ja in test cmpsb pop js jns fiadd add lahf xor cmc in imull adc xchg stc out pop mov mov iret mov sub lret inc xor fdivp dec cmp jmp scas push inc nop sub xchg sti pop pop lods popa sub arpl cwtl dec aad das fwait add or insl sbb les cmp add jle sub (bad) dec pusha pop fcmovb test loopne fisubr scas rorl dec fcoml movaps sbb fs shrb sbb outsl incl test push or push shrl sub cmpsl shlb sti and lahf aas or sbb xchg mov xchg iret in addr16 sbb lock addl push (bad) mov daa stos pop xor pop clc or iret mov cmp jl into mov dec push pusha ret pop sti hlt mov mov xor mov mov xorl cmp ret call push xchg enter es pop sub lret and pop dec out inc movsl push adc cmpsb mov sub mov jecxz outsl xchg fistp xchg push push stos and jecxz fnsave add lds fadds inc (bad) sahf fs add mov popa push les popf imul lea xchg aad lret jmp xchg push repnz fwait rclb ds in pop dec inc push xchg out add xlat sub cmc in ds loope adc daa adc inc popa lods mov imul ffreep jp xlat call push mov fnsave lods and push xchg dec dec mov xor or sbb xor int3 mov ret neg or sar std (bad) shl out cmpsb sti mov xor aas cmp inc cwtl sti test push jo sub orb cmp mov xor popa push enter mov xchg jmp cwtl pop push xchg mov jns xor ljmp sub iret or leave out adc je aas jae mov sub or mov pusha outsb cwtl movsb pop cli ljmp (bad) mov dec jne or and add sahf mov fbstp addr16 fcmovnu lahf scas scas add rol dec sub xchg dec (bad) xor cwtl repnz mov xlat mov pushf loope out xor leave pop mov test sbb outsb lgdtl mov ss add jg or imul mov rorb aaa inc mov (bad) icebp and fsubl (bad) cmp push add test xor dec jle cmp call mov rcr inc fs lds (bad) call (bad) pop adc mov jmp jo pusha aas fcmovb sub lcall sbb lahf iret data16 scas inc lret out stos mov xor mov inc cwtl imul fmull stos fiaddl stos cli sub push cmp cwtl xor daa fild fidiv in adcl jae lods adc dec ljmp dec or lock ret repnz jp std jns lret dec mov cmp mov xchg sub mov jae inc adc push psadbw std dec lods adc inc aad test jge sub movsb mov int3 sub (bad) cmp das lcall jp jg jmp inc add jbe lock sub int3 xchg fcmovbe mov pop fwait stc add imulb or test std jecxz push sbb mov andb stc mov mov idivl stos pusha roll les call adc sbb mov pop push out adc adc ds dec mov outsb and mov les imul xor mov mov inc inc jae aam dec mov movb jae push into stc jmp or or inc cmp aas cmp mov mov cmp jbe fdivrl shlb cli scas outsb add mov (bad) mov or iret sub inc dec je xor jmp xchg xchg pop pop push or cmpsl ljmp mov enter imul adc pusha sub pop and int3 push mov or mov ljmp push inc in (bad) xor xchg (bad) cld stos mov jae mul jns sbb push std icebp (bad) or ficom lret pop sub xchg jns mov pop roll int add jmp sbb inc add pushf popa loope sbb sbb mov adc push pushf and mov adc and (bad) iret int3 sub nop push scas loop fwait les mov neg popf or xchg movsl cld and cmc ret inc cmp sub fndisi(8087 addps mov jb arpl ret int3 pop xor cmp scas inc cmp xchg (bad) cmp loope lret add lahf push lods xchg adc push nop mulb push jb cmp adc sahf push ret cwtl ja cmpsb cli jmp test xchg insl imul mov hlt inc xchg pop imul xchg and cwtl or sti nop mov lcall mov aam cmp lea in int lret add mov push mov rcll mov lret ficomp push stos push push adc fstl mov lods popa jae fcmove push in xchg out xchg nop and pop nop pop cs cwtl and xchg pop sbb ret push cwtl jno mov aam pop mov xchg js mov or mov lret movzwl inc loop test mov xor lock pop xchg or mov outsb sub xchg es cmc idivb mov adc and xchg jl ror stos push dec outsl sbb inc cmp ss mov rcll jb push (bad) lret mov mov test jmp and mov sbb add aas je mov xchg lods arpl cmp add and test push imul cmp mov ds rcll std inc (bad) jb movsb cmp movsb inc imul cmp jb movl test or outsb add sbb lock push test stos dec mov inc mov hlt ss in dec cmp jns xchg add sbb jmp mov mov inc stos insb (bad) cltd dec mov fildl or push jb pop loopne,pn mov dec cmp pop dec mov daa or mov or jle arpl insb cs xchg mov mov jnp mov into push push bound test push add add add dec and push cs lret mov sbb sub and ret and push loopw inc mov mov test movsb insb jg mov jne incb fsub adc movsl loop aaa (bad) ret mov repnz cltd dec out data16 stos pop aad shr inc mov mov sti jl mov adc jg mov in scas fimull into ror cmc lods (bad) pop jno sbb cmp pop popaw or sbb and aam push add imul mov inc ret ljmp dec les mov sub xchg pop sbb cli imul push imul push sbbb sbb jmp add daa enter movsl push shll (bad) into int sub lock mov add push insl rcr lock pop cmp (bad) es out xchg fwait js cld sub add sbb xchg sub out hlt addr16 aaa pop leave cmp lods cmp test or outsl mov jecxz in cmp sti mov arpl pop and repz int mov cmp stc int cmp dec pop imul xchg pushf dec xor push lret sbb scas (bad) or aaa arpl (bad) nop pushf add popf pop mov jecxz and xchg xor push xchg sbb call es nop sbbb in and inc repnz das das xchg scas xchg xadd lods ret out aaa ss je add in dec push push and or inc (bad) hlt cmp xchg loop test lds dec into and data16 cld mov pop fild xor rcr jnp pushf clc enter (bad) lcall sub fisub jno (bad) dec xchg fwait divl adc shlb lret or sub hlt and lahf pop das daa xchg cmp outsb dec jmp ljmp push mov cs mov xor divb loop or mov xchg cltd lods jo fwait loope xchg mov pop xor inc or (bad) fcmovnb dec stc cmp (bad) push jmp xor pop adc push aas sub mov test stc and inc fisubl mov int pop xchg xchg cmp push mov mov dec push pusha sti loopne inc xchg jo nop mov jbe cmc outsb cmp cmpsl lods xchg sbb inc pop orl stos je pushf pop mov in into aad out pop ret cltd xor dec repz pop or adc out and dec fistpll lds mov mov cmpsb push cs mov add ss push add clc sbb dec enter out add outsl (bad) addr16 dec jle cmp sub (bad) aaa into test sbb test iret and mov enter (bad) pop loope xlat mov repz in sub dec in xchg inc xchg cltd pop and lock mov sub movsl rcrb and pop movsb cmp ja test mov xchg daa insb adc mov jp insb push mov outsb and leave pop xchg out mov mov out jl (bad) loop xor rclb jb xor cwtl out push push cmp xchg jbe rcll or jecxz out xchg jae adc out stos add je insl call movmskps lahf jb cmpsl and push icebp pop mov or fcmovb cmp icebp pop and push cwtl adc jge xorl cmp popa or inc cs inc add push repz fimul roll daa stc inc aas or pop pushf incb ffree pop jbe jmp xlat mov mov sbb std and sub jmp stos sbb add push mov sbb mov test (bad) pop ret fldcw mov lcall push push fdivs cld in sub pop scas cmc cwtl mov pop adc push dec ret cs mov jns cwtl push xor push in xchg fistl shl add jnp,pt cmp adc sarl xchg fidiv fcomps xlat mov call cmc lahf adcl xchg call sub or and out lds arpl sub aad mov and sbb pop jo shlb popa dec adc inc lods out bswap lahf mov movb pop mov mov (bad) mov stc loop mov pop push mov mov bound jne add or push jno pop ret pop or iret adc or insb mov (bad) jmp push and fisubr call mov into lea ret fs scas mov (bad) int3 sub outsb cs stc cltd cmpsl inc jmp ret add clc push adc xor jnp cs add repz jmp test xor fstps (bad) mov jge in fwait xchg les sub (bad) shufps pushf negl pop ret enter lods jl jge aam notl push lock lret or inc pop cli imul mov aam mov repnz test ja stc adc std nop inc sub (bad) fsubrs test shl aam mov test sub xchg dec xchg rorl cwtl jle inc insl hlt xor repz movsl dec xor ret (bad) jge outsb clc ljmp dec out js iret pop push mov pop mov mov rcll push push xchg dec lret mov xchg fadd imul in mov inc dec addr16 push aaa cltd rcrl gs xchg cmp push inc add (bad) mov add in mov cs je aas cmp jne jnp dec loop cmp insb aad inc jnp int3 or fdivl cmp adc pop test push and (bad) stos addr16 inc movsb add arpl loop mov (bad) dec cld pop pushf push cmp xor and test xlat and or lcall mov dec or aas xchg loope inc movsl sahf cmpsl pop jl jne cmp pop pop mov movsl or rorb cmpsb fsub jp xchg push in insb fst inc stc adc sub or leave adc gs gs inc outsb clc pop xchg or jge sub lahf jnp icebp or pop pop pop push sub inc movsb in mov jno mov cmp test dec sbb mov push aaa dec mov mov sbb xchg out and push cmpsl dec lods bswap les out dec lret xchg xchg pop push sbb mov xlat out jmp push es inc mov dec fildl lea lds inc aam pop mov dec in push dec in out (bad) jle mov inc pop push rorb mov shlb fisttp cltd jge mov mov repnz sahf mov jmp adc mov outsb gs jo mov pop lods (bad) xor jns add ljmp divb je adc sbb ljmp cmp out mov xorb divl dec add pop push lds test sbb mov mov (bad) icebp xchg dec add push mov (bad) pushf lods cwtl dec int pop add jg fisttpll sti js sarb push sub dec (bad) sub iret cld mov push test lret inc (bad) call push sub pop out pop mov movsl fistpl outsl lret outsb jnp je mov pop jne adc cmp pop in pushf or je les cmpsl mov jae xor sarb pop cmp cld daa jns sti scas mov rorb insl sbb dec mov and leave pop dec cmpsl push mov in sbb inc mov daa cmc insw pop adc or and jnp sahf inc jmp cmp pop jb (bad) es adc popw insb push push out add lds push subl jge imul add fdivs cltd push mov loop pop sbb pop jnp add xor mov xchg aad adc sbb addr16 imul jae mov rolb incb push gs jne mov jl push jmp mov fdivrl pop cmp mov insl loopne pop cwtl jbe fs js insl mov loope (bad) je sbb cmp add movsb fiadd fstpl pusha in and push adc test xor xchg push in rol sti mov mov sbb pop enter lret mov cmp cmp adc in pop outsb inc mov outsl mov dec push add cs int3 mov stos aaa jnp popf icebp jb inc les push repnz xchg inc push fs js mov and dec outsb add mov outsl insl cmp fs pop add push fist insb xchg ret (bad) dec sahf stos lahf int3 icebp push fadds dec adc mov inc dec inc decb jno lds inc jp in xor or divl add cli jo cmp fmull loop jmp test popa dec lret inc mov xor cltd inc sbb arpl stos adc clc sub shrl and pop inc add add mov loop inc stc (bad) in dec les mov movsb adcb in xchg shlb mov pop mov imull mov sub xchg ljmp mov popa mov or mov mov and leave (bad) mov mov dec sub scas mov cltd subl scas ret sbb test jecxz fcomps ret ret adc xor std lods je cs dec push and pop sbb mov test dec mov push xchg push and test cmp ret mov mov les push ja jecxz lea mov aaa iret bound push and icebp pushf add push sub cmp or dec ffree adcl loopne into inc outsl xor test out repnz (bad) xchg daa mov xchg fcomp push lds icebp mov loopne int fldl xor leave cmp pop addl jo outsb add addl (bad) or sbb lcall mov (bad) cmp test adc sbb sbb sub enter ljmp enter cmp (bad) loop push gs xchg adc xchg lahf jbe push jnp push mov les push in sub pusha cltd cmp lock nop xlat jmp pop mov jl pop es pop or stos xchg mov aam xchg mov incb jg add adc aad add ljmp sbb out sub imul fwait js lods xchg test add into inc call push fwait mov cmp lcall lods xchg sbb arpl fsubrp (bad) mov in mov pop in adc inc inc loope push je or and int3 xchg pop cli add mov (bad) cmp stos (bad) ss pop das dec pop jmp sbb icebp inc and sarl gs pop inc aad cs inc shrl fstpl popf (bad) into mov addr16 stos outsb mov cmp roll pop push inc add ret pop js jmp dec imul lret cs aas jecxz sbb int xchg add cmp ja jmp mov lods mov int stos push jno das mov sub aam xchg daa adc adc sub (bad) jnp add mov inc xchg pop int mov mov push and mov mov outsb cmp fs or or rolb pop hlt push and movsl cmc insb sysexit mov clc leave jmp jle mov inc aam aam pop in outsl pop xor movsl sbb ljmp inc lcall lock arpl and jo data16 sbb in sbb movsb sub fiadd pop push addl push xor jae les daa push push fwait ror jbe sarl out imul loope cmp bswap das fiadd cmpsb out sti pop add adcl mov ljmp jle add inc add cli sti mov push mov cld push fsubr movsl jns dec push push jnp or mov sbb icebp and cmp inc or sahf dec popw mov pusha mov icebp fs adc fwait stos out pushf mov popl add ficom mov mov aaa cmove andl xchg cmc mov sbb push popf aad and jl cs imul cld (bad) dec repz lds int3 (bad) std or (bad) fmull inc sbb mov std mov push cmp mov popa add jb std dec mov aas cli mov lret movsb sub test in int3 jp leave dec or or dec enter ret sub out xchg rorl cmp dec push mov enter inc sub push sbb dec in fstp or cmp jbe xor out pusha test and dec fsubp mov xchg pop ret xor push xor in and enter shr imul ret or outsb scas sbb mov cwtl or or inc cld rorb xchg int3 ror xor lods aam bound pop into mov adc movsl lahf xchg sub push into sub imul fldt sub roll jle dec lods sub enter jo ret ljmp dec sarl dec xor clc popa fcmovb (bad) mov into ret mov mov sbb data16 (bad) je xlat inc mov leave out pop jl pop addr16 aam jne in sar push jnp add pop in in testb int3 aad dec jp imul icebp ja outsl inc xor loop movsl mov (bad) jge cwtl inc mov or dec outsl fdivrl xor dec sbb cmp mov add and jnp in mov clc mov lcall (bad) mov fistpll lret jae cmc jmp aaa loop push xor cmpsb pop fs sub push lret mov in or jnp sbb je dec jnp mov cmp mov (bad) stc mov bound inc out mov push dec and cmp aaa call inc push mov mov int3 cmc fistp mov cld (bad) jmp jle mov movd push cmpsb dec xor jnp inc pop mov das jo (bad) outsb imul mov (bad) adc fmuls dec jno mov or fsub ret lea mov std xor cmpsb push mov adc stc inc repz add addl and aam mov mov in lods mov jg,pt jbe cmp xor idivl and scas mov ss inc xchg iret cmp jl sbb outsb cmc jecxz andb or test lods subl fs dec mov and imul fsubl js adc sbb sub or xchg fnop inc popa sub cmp sub xchg out call mov lea xor cli stc add adc pop mov (bad) repnz mov es mov push adc add xor ja sub rclb and ret inc ds xor jns sahf push or xor xchg std push mov in fnsave or mov mov sbb ret add mov movsb cwtl dec std add and xor xor cmp aaa loope mov orl clc jmp cmp enter mov pop in (bad) cmc sbbl pop pop pop fidiv cld and inc (bad) repz jge,pt das shrl (bad) sahf mov int3 push or lcall es pop jg iret scas repz adc jmp scas dec lods (bad) mov mov (bad) pop mov jbe adc fstps cmpsb jecxz xlat es sbb mov mov repz push aaa pop jo dec sub in stos (bad) repnz clc xchg stos aas fwait std pop das imul mov in push dec cmp clc mov sarb addr16 or pusha loope xor dec cs push add xor loop add add sti ret scas cmp sbb js and jb sbb adc inc adc inc xchg jae adc int (bad) aad inc jb (bad) aaa loope,pt (bad) repz push (bad) movsl jmp push pop orb (bad) mov jo push pop xchg add xor cmp mov xor sbbl scas test pop mov or push and sub push cmpsl ret test fwait sbb fwait es cmpsb mov mov mov pushf jae push in daa add jns inc adc mov ss sub outsl mov mov cmc lcall cmpsb mov xor (bad) and bound (bad) cmpsb ret cli add sti dec jae movsl jae les fistpl mov call or (bad) pop hlt dec fmull pop inc in inc mov sub pop sub push lret push leave inc mov test and loope jp aaa arpl dec add cmp jbe test add repnz fs in lea xchg sub movsl js sbb pop ljmp pop mov lods mov xchg push cmc or ja psrlq push cmpsl enter loope,pn add into sub popa mov mov pop push push sbb leave shr sti xchg lret jne stc push xorl out std xchg xor lret cltd outsb jl ja jl mov xchg jl mov popa sar adc lret mov aam jle sbb inc mov dec das (bad) imul mov cmpsb mov fmull sbb outsb pop mul (bad) leave repz (bad) fdivrs adc inc add cmpsb scas or in addr16 inc negl nop fildll test push int dec xchg push xor loopne jl pop lods mov int ret jle cmp pusha xchg rorl dec push mov jl clc insb aas shlb push out jl jne dec jmp aaa fidivr dec push mov lcall (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out ljmp cmp sbb push gs add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsubs add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret (bad) icebp jmp das sub lret jbe sub jmp insl jnp lret outsb pop (bad) fs xlat mov jl (bad) scas aas loope rcrl add xor rcl repnz fbld idivb scas dec bound xchg ljmp xor ljmp (bad) mov sub jl and cli mov sti ret call cmp push in bound pop repz pop lock mov mov les pop xchg lahf data16 pop (bad) data16 in dec out (bad) cli out pop sub stc jle push mov lea xchg add xchg (bad) imul mov js add jnp inc enter cmc add (bad) sub (bad) out andb and xor and repz jg cltd sarb adc sub cli mov inc or iret xlat loopne add adc mov cmp fs scas stc test cld xor dec cmp mov sub inc leave and jnp insb cmp addr16 sahf enter stc push inc jecxz xor and push lret shlb pop loop mov movsb shr push xchg fstps popf sbb negl lahf movsl lea daa stos test mov (bad) rcrb mov in movntq mov lea sbb adc xor inc pushf insb loop xor mov add idiv add adc hlt cmp xchg cld leave push shr stos sahf cli sbb popl xchg mov sub outsl (bad) dec sahf jmp std sbb dec leave xchg xor lahf push imul pop xchg push icebp lock jo fwait push xchg push jo and mov pop cmp and popf not jno test and push imul jb adcb aaa scas outsl cmpsl pop stc (bad) or out pop sub jmp cwtl (bad) les and std movsb dec repnz outsl dec lods loope mov (bad) test cmc leave add rolb nop xorb jae jno cmp and sub xchg popa loopne test leave daa mov sub les jns das jge pusha cmp pop mov mov jle stos (bad) ljmp xchg dec mov jne inc sarb dec push mov xlat sti iret js rolb call jne sub repz xor testl lea test add mov fst pop cmc cmp ret fwait xchg mov pusha lcall dec pop popf and jle leave dec fisubrl inc xchg movsl dec xor (bad) addr16 scas fsubrl sub ret pop adc sarl roll (bad) aaa fbld xchg xlat pop cmp jns iret shl and cli xor fwait cmp mov popa (bad) (bad) (bad) and pop frstor push fisubrl test leave xor and xchg mov fadds das dec dec mov rcll or sahf leave (bad) cmp je mov loopne std adc and inc or pop lret out mov insb test gs into pushf add addr16 sub fildll pop js dec stc icebp out xor mov ror idivb lods es push lds scas add push xor fisttpl mov hlt dec push scas adc pop dec clc push lods mov or dec pop stos fmull sarl jne or xchg out stos mov lds popa inc xor xchg jae mov mov add push adc subl (bad) cmp mov shr jp in gs jo inc divb (bad) xchg mov pop int (bad) mov jge adc iret (bad) jecxz adc insl sub (bad) loope jno icebp test push mov mov (bad) fnstsw fsubrl loop dec repnz pushf mov and sbb lock jmp in push cwtl pminsw sbb push push imul mov push orl and popf out sbb push sub push out mov leave push (bad) out int inc adc inc fs cmc add popa pop ret xor inc aam dec adc pushf stos dec insb jno in sahf lods xor aad jae dec mov jmp frstor cwtl mov dec rolb dec jl cmp cld pop movsb bound clc je rcr jmp adc sbb cmp cmpsb xchg jp clc mov cli and dec fisubl sbb in xlat pop (bad) dec jle les pop ds test or pop lock hlt mov js inc xchg stos cmp mov jne (bad) mov (bad) js add aam or mov push push fstps (bad) mov push xor cmp gs push mov sahf or lods insb sti insb cmp daa jnp fadds loope jb insb add xlat shr ljmp jo add hlt xchg incl sub sbb sub inc dec fcomps push mov pause jno sub cs jge inc (bad) jl inc jns mov and inc or leave xor fsts fiadd daa cmp dec sbb adc pop or (bad) aaa xor gs and xchg insl mov sbb cli push xor xchg (bad) jp sub std sub mov arpl inc xchg dec jg adc popa inc pop jle cltd ja rorl inc gs sbb fidivr repz out xchg lea int3 dec js or mov fcom and repnz (bad) stc jg pop mov add add push xchg stos daa mov push orb popa mov push out nop mov je xchg ljmp jg adc xor (bad) pop push js (bad) dec dec pop xchg or push mov cmc cltd or out in cmpl and les adc neg test jg adc nop lock scas mov mov mov or rcr stos test cltd mov enter or sbb hlt cmp jmp pop call loopne sbb adc mov xor xor setb sti jb push mov mov sub adc (bad) add subb mov fcmovb inc stos sbb pop pop aad mov cmp xchg xchg xor imul (bad) push pop lahf out pushf or andb xchg sub and mov arpl mov fiaddl pop out push sub mov popf addr16 push pop ficomp and outsl add pop lock cmc daa mov pop push or ds or mov ds es cmp rol mov test stc ds pop add cmp repnz cmp sti push dec pusha arpl inc sarb sub jns pop and in rclb dec mov cld mov cmp push mov xchg inc jg xchg mov mov in sub pop push notb cmp imul dec (bad) push cmp push (bad) divl sub fnstsw (bad) or outsl mov and fisttpll repnz push mov movsl xor push xchg mov mov les out mov enter inc in out pop and pusha into pushf or or xor xchg out mov xchg pop xlat push or fiadd test adc jle jle aad and je arpl jg sub inc inc adcl pop decb je out push mov xchg jl cmp pop int3 jmp shr (bad) fistp outsb mov adc inc xor xchg pop dec je inc mov insl push jg ds fs and xchg mov mov out arpl adc loop in sub dec pop leave jmp cmp cld or lret xor pop and jo add and mov outsb jb jg ficompl ficom mov scas mov cld xor pop jecxz test imull push sub jno test cmp xor (bad) cltd mov ret stos sub fadds mov ds xchg or pop (bad) in clc add fwait jmp push cmpsl fs and out or mov sub iret or cmp inc and xchg cmp imul add (bad) les jnp popf add jmp mov es jo fcoml push add mov adc mull lods ror cmova inc test dec mov movsl ds hlt add fildl loop mov mov ljmp arpl fwait pop push jl or cmpsl popa jb mov addl fdivrl mov (bad) adc repz adc sbb lock cmp pop ss pop inc iret test aaa lahf stos clc (bad) mov test rcll push mov xchg jb push mov ds cmp addr16 and xchg scas xchg rcrb pop and inc fsub xchg stos adc push dec sti dec fcomi add jmp xchg (bad) paddw hlt int mov push popf push or add jbe cmp inc notl sub adc repnz push add xchg leave xchg cmc insb jmp inc das dec repnz jecxz aam cmp cs cmp cmpsl mov out dec dec xor lods loopne into lds mov lods pop jb and or test fwait jne add mov (bad) dec negl adc and nop push es stc inc test or fcoms stc cmp sub in es xorl clc les xchg mov test push adc ljmp je ret in fucomi mov push sbb das add repnz add ja cmp stos dec call repnz xchg clc jecxz add xchg ljmp cli popf mov gs and lock pop dec jmp cmp in xor ds jno ljmp push mov sbb hlt in pop cmpsb jl jmp ret inc lahf inc daa icebp pop push movsb dec (bad) outsb cmp dec mov fcomi mov out mov jg and cmp push iret in or jns xchg shll dec test cmp dec and in sbb jne je xor repz and add sti fsubrl add sahf push in cld cmpsl (bad) lock pusha jns sub int3 mov std lods dec call push mov dec mov inc inc popf cmp ja inc (bad) scas xorb inc dec cwtl pop jnp test (bad) xchg fisttpl dec mov jnp scas out pop jno (bad) or test jmp scas into std inc jno (bad) lret mov mov sub pop mov cmpsl and and jo aas cli adc push movsl jecxz repz scas fs sbb test mull (bad) adc or leave sub fsubrs scas push jo std outsb pop movsb dec fs gs xor pop test aam test call cmp in cs aad jmp ja,pt fisttp aad jmp stos ret xchg lret mov cmp lods loop jl sbb pop stos js (bad) jg scas cltd das test sbb sub mov aaa lret mov lock in outsl push lods hlt xchg aad mov xor jecxz lcall in xchg out jns (bad) repz scas xor push insl xchg int xchg ss shrb xchg popa inc and (bad) ficomp push arpl stos fs sub cmc add jmp pop repnz push int3 cmp cmpsb mov js sbb cwtl push js std rcll sbb cmc lahf fdivs inc xor dec hlt pop adc dec jb cmpsl nop js pusha int or sarb sbb sbb stos push pop jns xor testb nop fcompl popw das cld xcrypt-ecb cmpsl or push fnsave push leave aad shrl add nop pop daa out or inc dec xor push dec fidivl mov movsl out sub or popf cwtl (bad) mov popl pop inc inc xchg mov xchg enter flds test aas test lret mov sbb pop insl enter add in std dec jmp mov imul pop lock ljmp (bad) std and call xchg xor xor mov add repz out pop cmp inc sbb mov ret sti jg mov mov or cmpb ret push test dec je mov daa mov js std orb addr16 xchg lahf mov xchg inc sbb push outsb mov dec add scas jbe subb jb dec adc adc mov adc das cld cli sub or out cmp mov jl js ja loopne jle inc jne inc mov sahf pop push outsl mov pop jns mov mov or shlb sub push scas sarl or ss or mov jle pop cltd je lret stos and cmp cld sub (bad) pushf (bad) je nop sahf addr16 cwtl incl xor and xor push xchg inc jl jb cmpsl xchg inc mov outsb rcr popa xor cmp (bad) mov pop stos sbb sub mov sbb test insb pop out sub jecxz scas sbb jp sub fstpl sbb sub push push stos clc iret pop jmp nop (bad) push rol into pop scas pusha shrb mov int3 (bad) cltd adc push fnstsw pop xor jo outsl xchg sub cltd and push jge and xchg int lcall shll icebp stc cmp lahf in and cmpsb xchg rcrb sti inc or xchg pop xchg scas stc repz inc dec ret adc xchg pop pop clc push test pop xchg push bound inc pop mov (bad) pop popf xchg push adc aaa push xchg cmp mov std outsb mov lea fadd fldcw pop adc push or add dec in loope shll and dec jecxz jae addr16 mov imul (bad) dec inc sahf adc mov into ljmp test stos ret fsubrl jno popa int3 pushl cmp outsb xchg mov mov negb leave mov cmpsb gs pop xchg imul subl ljmp fist pushf mov pop popf fs xchg pop cmc adc test pop mov jle in mov jbe out mov cwtl pop mov jecxz lahf mov popa lods xchg jb nop mov jno xor gs sub adc cmp push aaa mov enter repz insl xchg xchg lahf cs dec pop add push inc bound cmp mov push aad cmp into inc dec mov mov fs lods xchg bound mov stos push sub dec or scas nop mov aas jp leave mov int3 ret pop xchg xchg (bad) fisttpl int3 stc xor (bad) push pop xchg int3 pop decb add bound adc sub mov cmp pop call test lock enter mov leave or xor mov lret sbb in fs sub and outsb mov movsb je fildll int stos sbb xchg inc pop dec lock (bad) mov pop dec pop (bad) jbe and sbbl mov aaa adc add xor adc cwtl sbb fstpt test (bad) cmp andl ljmp mov ljmp aam fwait xlat mov shll mov imul mov popa xchg adc add cmpl popa cmp ss movsl sahf add aam imul mov jle pop xor nop dec cwtl call add call xor hlt dec negl or insb icebp (bad) sbb dec loopne (bad) lods aas sub push mov pop jmp xchg cmp push pop stos mov pop ds out sub sub mov movsl ret fcoms leave sbb subl jno sub jbe fs int xchg dec pop jbe cmp pop sbb pusha outsb in (bad) jp (bad) out jge pop pusha aaa loopne mov loop dec cmc dec xchg and xor adc lahf sarl xor push pop lods cld in jns adc ret sub (bad) int push mov out imul jb out mov enter lcall fnstcw xchg popa loope aas hlt inc dec (bad) js jo (bad) fidivl jle push xor push inc int3 into into mov push (bad) sbb repz adc jle and (bad) ds pop rep xor mov lcall mov cltd dec mov stos cmp adc add jbe adc mov scas push jns fidivl pop xchg mov (bad) pop dec mov sub ret repnz fiaddl sub lds test and dec clc pop mov mov inc pop adc (bad) movsb mov sbb lock out imul pusha movsb in lret mov mov (bad) icebp notl lcall outsb pushf enter int3 sbb push pop test test repnz bound cmp int sub in pushf push cmpsb rcl scas add outsb shrl dec lds pushf addl lea xor arpl cld dec xchg pop mov cmp cmp mov ljmp nop push jb (bad) mov jl psubd popf dec addr16 pop mov mov loop cmp and mov cltd cs jecxz popa pop mov popa and pop mov mov rolb xchg add cli incb nop mov xchg ret jge push fmul sbb js mov add subl sub pop outsl cmpsb sbb jae pop inc ljmp and addr16 mov sbb loope and cmc mov aam cmp jmp mov (bad) pusha sbb call jb inc dec call cs sbb inc xchg push mov (bad) pop inc arpl jmp pop pop stc (bad) repnz int3 or int3 jp push pop cwtl ja jae pop rorb pop inc inc sahf rcrb or es adc xchg pop mov es shlb lahf hlt jne sub scas aaa add mov mov jg loope ret stc dec inc xchg xchg ret lret loope pushf jb std pop adc push add push (bad) pop js int3 mov xchg push mov push or dec adc test and (bad) int3 mov dec mov test not movsl cmpl sti adc out orl pop jbe push push push xchg mov mov lock cmp clc (bad) mov into insb xchg adc outsw mov ss cmp shll dec stc push mov in into call cmpsl fild sub sub jp xor adc (bad) call dec lret push add mov jns ffree pusha push test sub movsb or mov mov std and mov push andb inc adc fwait and sbb dec (bad) out outsl adc lcall jno dec xchg loope xchg add jge xor out fiaddl (bad) mov faddl into mov out inc fnstcw lods stos notb out mov stc inc leave testl lds cmp mov add ds dec loopne leave (bad) cmp insl aas das (bad) rolb pop (bad) popa repnz xchg into notb inc sbb out sub clc jl mov lock int push inc xchg or (bad) dec cmc loope add lcall shr cmp repz adc sbb pop pusha pop push inc shld xlat loope push ret adc inc pop add gs popf sub pop pop imul cltd xchg adc push stos iret stc (bad) repnz cmp pop xchg enter ss (bad) xchg xchg xchg sbb movsl push cmpsb lds stos fbld cmp mov pop jecxz mov in xchg pusha mov movsl aad scas stc shrb mov cltd in mov xor aam aam jle push sub xchg cltd mov xchg push sbb loope xor mov inc mov dec sti jae xor imul fwait sbb mov test adc cmpsb in push ljmp outsb xchg mov dec sahf cmp mov in sti adc add into ljmp pop negb pushf add sub cmpsb adc cli xor mov inc dec ja mov movsb dec stos dec outsb mov arpl adc or nop ja (bad) ret scas insb loope jle test inc mov imul add mov jp push push cmp fcomi pop outsb clc out xor mov call sbb inc mov (bad) sti inc cmc pop pop incb cmp mov scas pop (bad) xchg or adc ja cmp aam js lock ror pop jmp add inc jmp enter pop orl jl leave popa aas imul xchg xor stc rclb out dec adc pop ljmp push scas push cmp lcall push jp mov lret adc mov push sti pop sti mov push xor jae cmp pop fdivs in lds popa cmc std mov mov daa stos subl shrl and jnp lret jge cwtl (bad) bound (bad) loope lods aas dec pusha or les into (bad) mov bound cmpsl dec ljmp punpckldq xchg push in jns ret outsb sub pop adc mov jge bound push xchg inc sub sbb pop and adc fsubs std mov cmpsl xchg iret push out pop ret int fdivr jle pushf xchg into leave clc sub pop (bad) out cmp lock jg sub cmpsb repnz bound inc movsb movsb sti jnp sub outsl pop jp inc (bad) push out mov or (bad) jb sub and sbb std and jecxz aad and mov jnp bound (bad) sub rcrl mov cmp loope sub dec cmp addb cli outsb pop bound (bad) outsl sbb popf sbb dec test sbb dec rorl mov dec (bad) xchg ljmp cmp sar out ss sbb xchg aas inc pop (bad) jnp jle std shrl imul mov xlat lahf imul push out sbbl cmp lret sbb cs cld jo xor test sbb cmp arpl cs fs xchg lret push push jecxz int3 std loop jb cld dec cmp push insb ljmp add jge test adc ss shrb xor aam dec cmp aas adc jle ja adc jge icebp cli int or clc lahf mov cmp out xchg xchg or lcall inc xchg fsts fiaddl inc test lods lds sub dec test in xchg call es jnp adc dec mov dec mov shr xchg bound enter push sbb mov insl addr16 push (bad) ljmp push adc mov fcmove push add mov ret int xchg cs mov testl loopne cmpsl add je add xor xor jb sub xchg jmp inc lret add sbb ja aas mov lret in xor mov inc adc add sbb aaa (bad) ja movsl mov and test or jb out scas push cld and ficompl repz es adcl add inc insb cld test sub pop mov adc dec mov dec repz (bad) mov and popa es outsb (bad) pop jns lcall mov in or and xchg movsb dec jmp adc fwait in (bad) ja adc mov inc sbb repnz pop les sub movsb das jnp int add sub jl imul mov das mov in pop mov js push fwait add jp jp in sbb jg,pn int inc popf jmp shll xchg cmp jecxz and repnz pop nop cmp sub nop adc xchg cmp les mov in das leave pop or xchg lods jl lret dec lds xor (bad) icebp (bad) lods push mov shrb (bad) fwait (bad) int3 hlt mov ss pushf out xor mov cmp xor rolb out sub mov (bad) repnz xchg pop mov mov stos aad jg daa push inc aaa ret dec dec dec sahf or mov popa adc cmc and xor (bad) mov push in cltd shrb dec in loope test and push ret push jnp in or jecxz rol std jb mov imul (bad) mov mov xor sub push sub insb jae xor pop clc aam push sub arpl cmpsl cltd xchg push aad aam inc cmpsl mov (bad) sbb sub (bad) xchg scas sub fistpll add add mov push fstl sti cmp xor std push je loopne (bad) jne mov (bad) sbb movsl imul sub inc sub xchg sahf inc sub cmp stc add jns fldenv in sub nop cmc cmp sub mov fs sbb mov pop jnp cmp pushf sbb jge lds (bad) scas inc aaa xchg iret dec push (bad) lahf sbb rclb aam lock aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld jg add pop icebp (bad) loopne movsl repnz pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add iret and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc popf lea add aaa sub mov mov pop mov ror out insl (bad) mov pop lret fstpl jb out add imul inc add mulb mov push add aad mov test sub mov jns sub dec xchg leave mov mov push and gs lds mov mov ret fmull pop hlt cmpsb repz and adc loope (bad) (bad) fnop mov inc (bad) lret movsl int and pop in fsub jle adc mov cmpsl inc movsl int scas pop dec fcoml lea push fmull jmp rol mov fsubrl xchg repnz or add stc in test add adc add shll pop dec cltd or lret ret test dec icebp and pop sti xor push adc cltd cmpsb gs xchg movsl or sub inc repz or lods outsb sarb add mov inc cmp mov sub inc add (bad) mov push sub and xor jp inc sbb mov push rolb loop push jb sub add cmp loop (bad) fs aad int3 out and add sub fs cwtl mov lock mov mov out mov cmpsl jnp ret xor mov push push inc negb inc sbb aam hlt ss mov push push mov (bad) fcoms daa pop push fisttpl pop out out mov cmp je jg pop fsts out mov ficompl jne xchg (bad) test push stc mov insl outsb jmp cmp leave jl lds sahf push add inc mov ret mov sbb rcrl out pop mov js (bad) mov xchg pop cli cmc inc dec out daa imul aas adc fs xor mov clc les popf js rolb leave scas sbb push enter fldt add xchg loope pop jnp subl lods fidivl push push xchg jbe xchg sbb cld loop jno mov push dec sbb xor fsub in ret arpl xor arpl xor xchg popf push xor repnz xor int3 outsb aaa xor jno and jno cmp fisttpll sti andl lret in clc lea gs push adc test es push xchg outsl sub adc push push fisubl mov mov in inc jae sub dec push std push push mov cmp sub int in movb hlt pop cmpsb ret (bad) js mov cltd xlat xchg jecxz xchg in and xlat push xor dec out lcall sar loop mov les sub (bad) enter pop ljmp stc jmp hlt out pop inc jl lea and stc sbb lock push cmc push pop outsl dec rcll icebp das hlt (bad) xor dec mov sbb insl fsts mov mov ja dec (bad) loope pop mov stos test mov cs jg mov test or (bad) push aas fwait jno cmpsl adc xchg decb fsub cmpsb (bad) scas jecxz xchg add jge pushf mov sub movaps daa lret dec push sbb iret mov jnp add test popa inc rcl mov dec fdivrl sub aad jmp loope fdivrl push inc fildl mov push int3 aaa cld sbb inc sarl and lock dec into ret cmc cmpsl pandn cmpsl xchg setno daa vpsubusw cwtl jae xchg fistl push add lahf ja lds arpl xchg mov ficoml inc and in add mov pop or imul mov dec cmpl jp pop add cwtl cltd into inc jl lds iret addl xor into repnz sub sub jge xor es int3 sbb inc aaa mov std cmp and lret outsw mull mov jno push scas repz sub sahf gs das (bad) fninit xlat mov xchg cmp and test cmp mov (bad) imul mov into add xchg push mov xor rorb sbb pop and sub inc stc xchg sbb dec test pop dec leave jbe ss lret pop insb add mov push dec mov jb xchg add rorb adc (bad) xor mov enter mov dec mov lods cltd out cs sbb faddp sarl in push mov pop dec mov repnz gs (bad) jmp ds adc imul outsb (bad) and inc or aaa inc ret xchg xor cli xchg gs add lea rcll add lds xor lods call cmp sub out fdiv psubd int3 arpl and cmc push addr16 sbb push jo dec icebp xor and scas pop adc pop mov xor insb loop jmp shll insl out dec vpcmpgtw adc xchg roll test xchg mov adc (bad) cmp imull das ret mov lahf rcrl cmpsb push jp lcall dec and sbb fdivr mov xchg clc push sub lock add outsl jne clc test aaa mov cmc or int3 add inc jae addr16 pop fcmovu mov mov (bad) jle ds sub mov arpl jae inc mov cmpsb adc mov adc jge sub sbb rol and fidiv and unpcklps push inc test js ret fdivrl ret call adc or xchg test or in ja popa ss pop outsb int3 lea pushf subl push aam pop fiadd xor bound call mov jp aad lcall (bad) xor in cmp mov ficom add jmp ret mov jnp out fs push test lret cli jecxz adc mov lahf cmp push inc push rclb pop cmp pop mov lods mov jl mov out mov stc push mov push outsl test dec ds xor out mov pop cmp sbb int mov mov mov add out xchg call idivb or (bad) mov mov popf lret scas mov mov push add pop and adc jecxz loop,pt xlat xchg sbb or push xchg in int xor jecxz mov rcl dec xor push ret negl (bad) lods xchg push cld sbb sbb xchg ficoml push pop stos pop xor bound fsubl sarl inc dec scas push inc sbb push jae and (bad) jo insb insb hlt mov imul (bad) cmc inc popl loope and mov pop or xor fwait and inc iret sub mov and mov call sub sahf in mov add inc add and (bad) jb xor daa pop (bad) lcall int3 enter stos fistpl lods fcmovb loope pop pusha and xchg repnz test or mov daa lahf andb outsl push bnd cmpl fs push clc or int xor jnp push imul rorb sub cld fwait sbb xchg out cmpl xchg (bad) and clc in xor sbb xlat sti out jmp imul test scas sbb jne cmp shlb int repz imul sub mov inc inc xchg dec movsl and lcall xor into int3 arpl inc push ss xchg mov (bad) cmpsl in add xor repnz loope push shll scas dec jno aam fsubr pop je in lds stos pop fwait outsl push lcall pop mov dec or xor aam pop test movsb aaa mov or movsb mov cltd cmpl mov dec mov xor push das mov int cmc lods push insb dec xchg out in sti inc or subl jnp push jge xchg dec lock add jbe xor dec dec in pop mov adc frstor jp pop mov into jmp sbb call adc adcl mov mov cmp sbb lods gs repnz sahf adc mov jne sbb add lcall mov out push xor enter rclb pop arpl push or lods and data16 nop lods fsubl mov loop pop mov rcrb xchg adc (bad) pusha xchg cwtl lea inc scas mov fstp jb fsts ja xchg pop xor test push xor or sub dec ljmp aam push mov andl loope fwait sti sub repz sub add test xchg out mov add adc lock out pop jno fucomp ds fwait cmp movsl sbb jp popf mov jne mov test scas push adc cwtl aam std das aas add clc loop push pop xchg mov les mov fcoml addr16 sub xor jl fistp (bad) pop and or dec mov in jbe ljmp xchg iret aas lock pop sbb jbe ja inc xor lahf jge push andnps jmp lcall test adc xchg outsb ret sub jmp push cmp aam sub cmp out pop sbb mov adc pop pushf xchg mov add mov and les xchg stc mov xor movsb pop ret jle bound out push mov cmpb mov rep xchg push push mov lcall dec mov dec pop sub cmp dec push mov push add add iret pusha dec cmpsl add inc mov cltd aas adc and push cld mov cmp sbb and shlb clc cs fildll pop repnz int3 jle jge repz (bad) int3 ljmp int lds mov call pop or shlb jne dec (bad) out inc adc fcmovnb xchg in sbb jle out cltd dec pop jle mov out mov mov push ljmp xlat (bad) dec inc xchg lahf dec arpl fs bound sub pop iret mov imul sbbl jnp cmp stos jge das sub cwtl push scas idivl (bad) inc dec dec faddl sub fsubl daa pop inc inc fstpt jp mov out shrl dec cmpsl rcrl test imul pushl mov lods adcb outsl aad and outsl push sbb je dec dec stos outsl gs pop aam loopne or inc sti push mov out dec addr16 adc cmpsb out sbb push xchg mov add mov (bad) daa lods and push add cmp mov ja xchg sbb cwtl xor rcll mov add idivl dec in pop inc sub xchg lret outsb data16 jle sahf inc out outsl or sub mov jle push mov jg cmp enter and dec mov jg pop rolb icebp int sbb hlt test leave fnsave cs dec mov repz pusha jne add push jae (bad) jae mov inc dec pushf adc xchg inc gs adc test rolb stc mov inc sbb inc out xor add test jge stc jbe sub mov push mov scas mov push mov mov int3 cld addr16 sbb (bad) jb mov and clc je mov add fbstp jbe xchg and sub cli mov fcoms xor adc loope iret pop clc jne out ret mov lcall ficompl inc in cmp dec push pop dec pusha aam cld cltd lret dec iret repnz mov xor mov adc mov fbstp add lds inc rclb (bad) push ss cmpsb pop or sbb aaa mov (bad) outsb pop dec aad lea repnz add in decb mov cmpsb fsub inc (bad) jo lods cmp lahf or xchg fdiv xor dec ljmp jmp mov repnz (bad) fstpl inc stos inc cmpsb mov out ja dec dec or mov pop jnp sti jo bound mov leave lea pop int3 push jl inc in mov ljmp xchg loop push fimul mov xor adc mov mov loope shll dec scas inc (bad) cltd inc or or movsl mov (bad) fdivr cwtl jl cmp (bad) nop inc jno xor xchg xchg imul rcrb pop inc push mov xchg clc inc push inc inc (bad) rorl (bad) mov push pusha fsubrp sbb fwait movsb jns mov jmp test fstl xor addr16 sub or into loopne lcall mov xchg out mov cmpsl arpl clc mov and insb int mov mov cmp adc jmp mov sarb cmp mov pushf fdivrl dec push add lods xor dec push lahf notb push jnp mov (bad) xchg ja fisttp jbe movsl lahf stos rcll sti leave sub cmp inc push and int3 lods test imul and jae sbb xor or xlat je mov fiaddl add into es leave mov dec inc loope push jae dec sbb xchg xchg icebp push and loope adc sub jmp push sar daa (bad) cwtl je jle cmp cs and data16 or pop js push sbb jbe frstor js test sbb pop out or mov cmp lods aam push daa sub sbb clc mov outsl sub inc ror push jae cmpsb jp enter adc add jl loope lahf shrl fs cmpsl cwtl inc pmaxsw (bad) jp mov dec mov outsl xchg xlat mov adc mov (bad) pop add lock daa pop rorl pusha or dec push jno add mov inc sahf (bad) loopne jae or outsb pop dec enter fmull pop aas sar (bad) xlat xchg or and jns popa push xchg add in jp (bad) les scas rcl (bad) loope pop stos mov cmp cmp jae inc int3 rorl lret sub lahf mov cmpsb dec and xchg lock or xchg std mov inc pop mov nop xchg push sbb pop data16 sbb xchg xor sub loopne cmp dec int repnz int3 or fcmovnu pushf imul mov in push and ret pop push fwait stos xchg (bad) enter sub dec cmpsb test lds je jl pop xor fisubr test insb mov inc cmp dec jae pop inc or inc clc (bad) mov xor pusha repnz repnz adc mov movsb scas loop stc cmp fidivl (bad) pop xchg mov dec loope mov outsb lea decl inc pcmpeqd lahf repnz ret adc xor xorb imul mov dec and push repz mov sbb mov cli inc es stc ret (bad) sahf out cmpsl mov dec dec inc jle (bad) insb mov sub icebp in xchg inc movsl mov sbb mov fs pusha mov pop test inc das std xchg sub packsswb add push sbb outsb inc inc loop cmp out imul cmpsl adc imul arpl sbb dec (bad) jo insl jnp cli cwtl sub ja mov adc jg mov inc arpl mov inc adc (bad) sub adc flds outsb inc adc jecxz aam addr16 cmp xchg loope lea push cmp cli xchg scas pop xchg add mov dec inc jno mov sti push data16 nop xchg in adc adc dec xor mov (bad) fcompl cmp jbe jl mov or xchg xor aam sbb popf mov sub jmp dec fs mov lret int jno dec cmc xor movsl jno mov sahf mov xlat jae dec daa test mov daa sahf pop outsb push movsb dec popf aad push push jg cwtl test pop and and push push int (bad) (bad) cmc iret jb dec (bad) push mov inc mov ljmp xchg adc pop jbe out in je jmp mov push xchg fdivs or or push mov test cmpsl sbb ret and cld jp ljmp xor arpl sbb jle pusha push pushf jae iret (bad) (bad) fiadd jb xchg dec cli mov or js sub std lcall es andb sbb dec dec (bad) mov and jp sub js int jnp pop lahf ja xchg add xchg nop lret inc test sub mov adc and aad divl push jp daa and fmuls (bad) std add repnz xlat cld cmp xchg mov aas inc pusha lock cmp (bad) and push cmp test popa push lock inc in mov push jo (bad) jbe scas inc outsl loop push bound fmuls mov bound mov push lods daa jnp or adc xlat cmp mov (bad) dec mov mov xor lcall cmc out lret ljmp leave ret pop into loop push jl dec data16 inc (bad) jl mov and cmp jp mov dec js les inc jl xchg out shrb aad xlat ret dec mov clc psllq xorb push adc mov dec std and rol push stos mov test andl int3 fwait cmp inc cmp cmpsl push (bad) ss ljmp sbb in mov ljmp negl xchg movsb or in sub fptan sbb ret mov xchg pop gs rcl mov fisubl adc jae jp pop dec cli dec les inc lret fmuls movsl cwtl ss jp dec (bad) mov cmc loopne ljmp cltd insl xchg adc cmp push pop jno xor mov pusha and les cwtl dec idivb out bound inc in add sbb push xchg out cld mov adc stos lahf inc cltd rcrb out cmp jg dec (bad) test dec es mov adc jge sbb or lds mov add xor mov push lret cmp pusha sub mov cmpsl adc mov or pop (bad) mov dec jge xlat dec push sbb mov loopne mov jbe mov mov jno pop aas les xchg jge (bad) xor jmp es jns bswap sub aaa pusha mov add inc xor xchg aaa add mov das int3 in and sti adc and rcrb mov fisubl les xchg mov in mov cli cmpsb sub inc add inc jge or push je fwait jmp lret jle mov lea (bad) dec xor cmp int3 push fiaddl or sti mov mov dec imul pop mov dec scas bound ja mov jp lds jl mov out sbb sbb outsb in into push fisubl loopne push lock clc in dec push ret push mov jns cmc cmp pop outsl cmpsl and and mov cmp and lods lret cmpsb xlat int3 push (bad) cwtl test dec cwtl mov and test lret std pop mov test inc fldcw mov xor aam aas adc mov aas sahf (bad) jnp addr16 add jno dec mov or jle (bad) aas mov sub out fstpl mov xor stos cli ljmp jecxz dec (bad) mov sub cmpsb or jp or jp cmp in stc out inc int3 add loopne jp inc pop pop and mov push adc fldenv ja cmp jno in shrl test pop or ljmp xor idivb ja jns or sbb mov xchg jns xchg sub mov jns inc loopne arpl xchg aas inc push fstpl and fdivl arpl es xor mov popa pop int3 ds lret sub or dec (bad) out sarb fisttpl xchg xor push xor or lret loop dec movsl mov shrb push nop jae push or or jne xchg push push imul lcall sub data16 xchg leave sbb sti inc pop inc inc test sti lahf cmp mov add and incb inc mov inc push sbb jnp adc push xchg (bad) mov (bad) jnp lods or mov mov jle sbb mov fisttpll pop mov lahf and bnd mov ret in rolb leave in pop push mov adc xor cmp adc movsl mov sub sahf rcll mov dec cmp sub xchg sub test add jns mul cmp cmp push cli clc in push mov fnstcw push dec imul jb or push fxch pop cltd sbb (bad) xchg push fs fcmovnu in xor jbe ret inc (bad) mov inc pop add out xchg loop fcmovne addr16 not js (bad) cmpsl cmp repz out dec aad xchg or cmc xchg out es addl adc lret pop (bad) inc xor popf cmpsl mov cltd push jle aas loopne in aas pop lret mov pop ret jmp xor shrl sti leave lret mov inc cwtl pop lods jbe scas popf add pusha imul mov lods push insb adc xor mov and ljmp inc in xlat mov movsl and scas jmp dec sbb outsl cmp or fdivs add hlt sub lods iret xor adc sub push js sbb (bad) js sub inc rcr mov sbb dec in jno stos xchg sahf lret fmuls inc and pop mov pop xor mov psrld cmp sbb pop mov or out mov cmpsb lods jge setl fnsave daa loop xor shrl push in xor test push js jbe adc faddl idivl jns push test insl mov push dec cmpsl push (bad) orps in test jbe xchg jge dec test xor and and popl dec pop sbb and dec xor cmp lds add mov shr cs loop fmuls test adc or inc push aad es addr16 push roll test (bad) outsb xchg jp pop cmp bound push xor aaa jle or cltd sbb int3 sahf rcll arpl cli push rcr (bad) ficompl mov lahf loope xor push aad ret push (bad) popa or adc fcmovnbe xchg mov repnz inc loope jnp jge iret les mov stos sub jmp push mov or dec inc arpl xchg cmp sarb (bad) imulb and dec fs ret lock cmp cli inc daa dec xlat mov jmp popf and (bad) in arpl cmpsb cltd jbe mov fisubl pop cmp pop sahf test pop je rcrb or sar cmp fldenv cmpsl test pop mov sti add rcll icebp lret push xlat jmp movsb icebp cmovge pop je pop sub pop (bad) jmp mov in jbe dec mov call mov enter ret stos adc loop lea jl mov rcrl (bad) mov fisttpll and mov jle pop and rcrl dec lods cmpsl std xor jg push fsubrl idivl and push into jnp pop pop daa call adc dec rcrl insb cmp inc call pop cwtl dec jnp ja or std jle mov aam mov jnp into add stc (bad) mov mov aaa (bad) pop push jne push sub leave cmp (bad) loop les add mov imul test mov addr16 subb push inc int3 mov out (bad) into addr16 push insl cmp fwait xchg insb (bad) ret xchg imul movsl in dec jbe adc adc cmpsl cld outsb mov xchg ja and in rep mov lret mov xor out push jbe imull and mov xchg in imul cmp out repnz rcrb xor jnp push dec sub xchg xor (bad) hlt inc ret pop jmp mov test addr16 push sub mov push or (bad) or cwtl out pop xor jbe je push add lds mov xor xchg cmp and rorb iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out ljmp loopne test leave or lret cmp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg lea mov mov cs cmp pop divb xchg insl fistpl mov cmp sti out jecxz lahf jnp add rcrb add push str clc mov dec arpl fildll decb xchg loop cmpsl jnp fildl sysexit dec xor adc addb sbb scas cmp cmp mov mov sbb xchg dec adc xlat sti push enter stos and push xor cmp sbbl mov inc stos fiaddl cli lods popf or sbb sar inc mov lea ret repz sub aad movsb imul pop scas (bad) cmp (bad) xchg jne fildll int3 cmp sti or pop scas repz lods push adcb lds (bad) lret inc xor adc leave cmpsb pop notb div scas loop leave xlat cli loop stc push (bad) adc fimul sub mov stos jle arpl xlat dec and repnz mov push push (bad) (bad) lds call movsl jg addr16 shrb dec into jge adc jmp lcall xchg test std jmp sbb lcall sub ljmp rcr mov ds mov mov ret mov mov stc mov lea sbb aam push jge lea cmpsb push clc xorl cwtl pop xchg stos lahf es movl xchg fmull mov imul cli dec int3 sti loope or stos mov int3 test cmpl rcr jmp push push pop js sti jnp sti xor sbb in push xchg pop jns outsb sub movsb mov sbb fiadd fnstcw andl test sub lods push outsl add scas cmc (bad) fistpl jle lret pop sub into cmpsl decb jb sbb (bad) fcmovnb dec mov cmp ss dec das inc jae inc sbb push mov and sahf jecxz cmp ja sub fstp xlat jp cmpsb cli lea xchg fidivl repnz sub sbb cmp insl lahf inc pop cmp bound sub out test push inc pop in xor das inc movsb sbb out and push (bad) jno (bad) add fwait in sbb inc clc sahf insb fstps test std in data16 in test cmp out outsb inc cmpsl or call or enter cli outsl fadd mov xor add (bad) xlat iret mov into lcall jbe cmc jo subl push cmp xorl insl or inc movsb and stc lds sub faddl rol mov jbe sbb fistpl inc inc pushf push jae mov fwait mov fiadd sbb in mov cmp mov push (bad) cmp stos mov cli insl leave cltd in mov jnp lods je mov jbe ja arpl mov jno fisubl out (bad) dec and adc aas fildl and rorb cvtdq2ps mov ret out test pop jne mov hlt (bad) cmp es push ja xchg in lock pop add push fcmovne xor pop or lods lds push xchg mov mov loop jmp dec jb or pusha xchg inc push pushf scas jb xor cmpsb xchg inc mov test push (bad) mov push subl mov mov pop cmpsb add rcrb mull jb mov dec pop call and mov (bad) push sbb lods mov add mov xchg sahf in fisttpl sub or js pop lahf sbb xchg or cwtl jmp sbb sub je sub cmp pop bound popa xchg cmp arpl scas out mov jae mov popf cmpsl adc inc test rolb xchg mov fidiv ja rorl mov xor xchg cmp lea aam cmpsb cmpsl jnp ss cmp insl and push pop add mov sub xlat (bad) adc add arpl and sbb xchg mov mov mov xor movsl cmpl js es cmc insb adc add fidiv mov cmp movsb movsb push div sbb das jle test clc popf xchg loopne fidivr in mov test das or dec aaa popf hlt inc (bad) mov adc xor jb jno fldcw or or in out lods je mov xchg pop push dec dec mov dec and xchg ja mov stos cld jp jmp push and (bad) fbld int3 adc lds mov dec jp mov outsl enter cmp mov cwtl mov jl ret mov xchg shrl xchg mov popa cld test push push push xchg insb (bad) cmc jg daa mov sbb dec test pushl push mov push xor xlat into mov rcll jge sar cmp fcomps rorl cld xlat push (bad) mov mov pop xchg mov jb dec xor popf xchg (bad) mov mov faddl out mov mov stos jb aas xchg and cmp or mov jo ret add (bad) push push imull inc mov cmpsb loope loope mov mov jle fpatan testb mov add and (bad) ds movsl in in out adc cltd xchg sbb aad mov mov test gs hlt sbb in and and (bad) or mov idivl mov or loope sbb jmp mov jns dec insl mov mov scas mov sbb jnp jecxz sbb (bad) shr inc dec mov push test jns in cmc cmpsl (bad) cmp aas (bad) xor test sub and rorl addr16 arpl cmpsl jae shll mov (bad) in pop loope inc cli pop clc sbb cli mov sahf inc daa cld in imul sbb insl loop or adc jge pop xor add jmp std mov adc pushf mov fdivs xor push jecxz leave mov addb stos add (bad) mov xor jo push inc push jns ljmp ljmp mov sbb lods (bad) xor (bad) aas mov bound divb stos leave cmpsl pusha mov cmp daa into fwait pushf in insl popf jne dec add inc imul push mov cli adc inc xchg std insl push js mov push lea sub and iret addr16 cld dec ljmp xor clc aam dec int mov or arpl in cmp and mov insb xchg dec orb in popa lods mov xchg xchg inc inc insb cli push or inc jns mov daa fidiv aaa fildll rorl aam xor dec cmp std cltd push fildll push mov jle pop jns out and cmc imul sub and cld mov mov ljmp push std ret mov mov add jo push and and cmpsb cmp adc or mov cwtl pop insl sub mov dec fisubrl push ret cmpsb pop pop mov loop cs aam jmp test jp cmp jmp out rol xor push out sub xchg add shrb out scas frstor es push mov rol mov lods loop enter ret dec or inc mov jbe and xchg ret xchg ds push mov and jmp mov pop leave inc loopne je mov or sub mov aam inc and inc lret push sub cmpsl aaa data16 mov ja jmp adc out jle sbb (bad) rcrl jmp cmpl pop mov (bad) lret jecxz jne and inc sub lods mov das sbb stos xchg and inc mov pop test mov popf mov mov (bad) xchg dec sbb rcrl shlb cmp mov (bad) mov movsl lea jbe mov mov xchg retw bound gs add mov jge loopne cltd pusha lcall cmp jae sub incb popa popa and mov mov jg das orl or or faddl ja cmp ret jne repnz std fistp (bad) adc mov dec add int3 (bad) sub pop or add test in add mov out ds jns xor xor insb andl sti cli inc and adc hlt lahf shrl gs dec xor jge mov jno dec xlat negb or sbb mov add lods rcrb lods fisttp mov or jb pop lock mov aas cmp insl popa xchg push out jmp jg cmp enter lret les add cld movsl cltd testb ljmp fwait loope int3 ror fistpl lret negb pop int3 xchg aad lahf call mov loop or adc jo cmpsl scas (bad) in or push jecxz sbbl sub test dec jmp addr16 repnz adc or aam xlat or daa jmp lahf ds pop sub cmp cmpsl inc mov (bad) xchg inc popa xorl ss xor xor xchg mov jle lahf push adc nop inc and lret add hlt xor xchg sbb mov sbb jg add mov pop std mov (bad) xor push (bad) xor mov lahf fisttp mov out fwait push mov inc jno pop (bad) inc mov mov sub fist les les inc dec dec fmuls cmp push push sbb push (bad) jp stos push (bad) bound pop inc jmp jbe mov std jge sub fcomp jb jge pop inc (bad) xlat subl cli adc inc imul or mov shrb xchg loope cld sbb xor data16 divl out or dec cmp arpl mov les aaa lret mov out movsb inc cltd lret xchg jae lds mov push cmc mov mov mov xor movsl dec pop or in lcall das ror or hlt cmp push lahf bound les out insb sbbl cmp xor cmp push dec shr js lcall fstl int3 pop push add cmp out adc sahf xchg (bad) clc sbb daa sub sbb (bad) mov mov lea adc push (bad) xor sub iret mov enter (bad) repnz mov (bad) repz xlat sub dec jbe pop mov cmp aas and dec test std adc lods sbb add pop and (bad) test mov mov adc xchg cmpsb xor movsl (bad) ja dec dec jne mov stos movsb xor push js bnd out sti shrl cmp jns add bound leave (bad) add stc mov inc cld dec mov push adc mov sahf pop in push push push xor mov cld dec sahf pop push add out pop mov js xchg pop leave push enter pop stos loop xchg stc imul lds dec leave push pop rcll push cmp sub lret cmp adc addr16 pop sub jmp adc dec adc jge pop mov out shl mov imul dec push or stc mov dec dec lcall adc aaa sti pop xchg xchg pop (bad) push mov adc sbb loopne xor leave add inc gs xchg insb add hlt insl or and fs sbb lock pusha lret sub (bad) ljmp fnstenv (bad) lods imul and mov or xor scas add aam mov loope mov rcl mov mov scas test cmp bound cs push fcoms into (bad) sti lahf jae scas loopne pop dec js mov mov int3 in jl shll cld int jp or dec cltd incb mov int3 or addr16 jbe xor push adc sub sarb xor pushf lret or mov out mov mov xchg mov xchg and test sbb das inc mov dec sbb (bad) fcomps sbb xor das jnp sbb push popf (bad) lods in into xchg mov and sub cld std xor cltd jl (bad) popl pop shlb cltd shrl std loop xor cmp into jae lret rolb jno xor mov sub push sub mov roll (bad) xchg sbb loopne cwtl push (bad) pop dec or data16 pop in sub dec outsl mov mov das mov insb lret arpl sub cmc xchg jmp adc ret mov mov fisubrl lcall or aad and jl jmp adc ds add imull fidiv lods xchg fist jns nop mov daa push scas rcll inc mov inc cmpsl outsl sub ss in mov (bad) mov nop mov cli push add push (bad) clc sub aas cmc (bad) xor sub dec into push dec xbegin jb and pop pop pop mov adc inc leave or sub push ljmp dec cmp xchg mov faddl out leave js stos iret mov enter stos lret sbb adc aad inc lahf fnstsw inc mov xor or bound sbb mov in xchg jb int ljmp js mov xchg jmp fldcw mov jbe or mov xchg and pop sub jecxz out std jg mov leave es cmp ja sub arpl test cmc out jl jno sub mov push loopne xchg dec cmp pop dec test dec cltd jb cmpl xor adc mov xor push jecxz xchg cmp add xchg jae mov aad and push jmp cmpsb scas sbb in mov inc stos out cmpsl addb mov nop out imul dec mov cld or fistp loope cs repnz and das jnp pop in pusha leave inc push mov call push dec xchg inc cmp jnp sub xor dec jmp out cmp test ss mov out adc lods orl push aad iret fild rorl jns emms imul lds xor sbb add xor cmpsb inc mov (bad) mov aad fs ds es jbe rcr fiaddl pop shrb xor ret or xor or cmp sti sub inc hlt adc addl pop jmp enter call jg shrb mov pop xor vmwrite int3 push addr16 mov jp pop push push pop in mov call jb jbe fstpt je leave or arpl add femms out push loope and and fsubs iret add stos imul mov shrl enter or lcall loop cmpl loopne mov inc dec in into pop cmp jp and in repnz xor push movsl (bad) mov inc or add lret (bad) fwait dec cmp mov sub push pop add mov mov fwait push pop (bad) add cmpsl xlat repnz les dec xor fs sahf mov jmp je dec inc test mov sbb mov dec sbb test lea push inc jb ret xchg cltd sbbl nop add xchg mov addr16 cmc test push add xchg lcall inc les xor jl sub (bad) sub pop ret pop and fisttp jmp mov mov jno sti into and adc nop jnp dec push xchg cmc fisubrl arpl jae sbb sub mov adc in xchg sub aas in or in negb pop jae,pt push mov not adc leave add cltd out jecxz push xor imul jl das mov cmp js jp inc in or rorb mov cmpsb sub push cmp sub dec aaa and cmp nop pusha (bad) lret mov sti push stos es mov in cmp scas mov iret rclb lods rolb pop test jnp push mov (bad) cmp je scas pop mov insb inc and xchg outsl dec gs icebp push mov jp mov mov xor pop out pop lcall aaa leave (bad) jne inc mov out cwtl pop sbbb outsl ja cld xor adc (bad) insl inc scas fistpl pop in jmp ss jns cmpsb lods aam loope inc js aam mov int cwtl xor rolb test jno hlt (bad) mov loope push jmp jb clc outsl movsl fcomps xchg aam cmpsb xchg stc mov outsl lds push fcmovb xor ds mov dec push popa jmp or xor push mov mov leave xchg adc adc call xchg or dec push or push fstp sbbl xchg and insl jmp xor mov je andb addr16 jl aaa ljmp fimul cmp add mov cmp push pusha insb (bad) and sbb data16 mov pop das orl push sub adc sub int3 daa add xor pushf mov inc cmp fcomps sbb dec xchg adc mov and lods ret or test out add fldenv arpl data16 decl test xlat or icebp in test repz jne imul popf push and clc xchg in mov add repnz in call into xlat mov dec (bad) add test xchg movsl push lods push mov add insb imul (bad) jp fnstsw data16 es sub or movsl leave mov (bad) xchg cmpsl cmpsl ds (bad) (bad) pop stos dec cwtl add pop sub jno imul into ja in dec rolb mov scas xchg push xchg (bad) popa jecxz pop in (bad) loop daa imul jg push mov movsl insl (bad) call dec mov mov sbb mov cmpsb jl aaa dec dec xchg mov scas ja out mov pop or repnz jge scas icebp adc sub addr16 loope cld mov lret sbb mov loope and adc insb or iret xchg popa pop mov mov rclb mov mov dec dec mov fistpll (bad) jl test and shrl ja adc leave fdivl repz sub iret mov push insl leave mov jne cmp repz jbe jo push mov es jo fstp pushf hlt cmpsl orl in (bad) bound jecxz cltd outsb mov xchg xchg aaa mov repnz lret jno fadds (bad) xor xchg pop push dec aam inc cmpsl fnstenv xchg test (bad) aad xchg xor xor sub xor cmpsb stc mov mov xchg mov outsb imul fdivrs leave (bad) cli inc mov mov imul insb dec lock in nop aaa hlt jbe insl and cmp mov repnz pop dec (bad) shlb imul hlt or stos pop mov (bad) mov stc int loopne sub push (bad) mov adc lret div fdivl inc cmc and sub lds cmp mov cmp inc movsl fadds add dec jecxz cs sbb sbb mov dec pop movsb out jle pop test mov enter lods mov xchg loop inc jbe dec fldl mov stos loope lods dec and aas push jg mov (bad) clc mov cmp xchg inc mov in mov outsl jecxz out push test ffreep add push out add ljmp js js pusha jge cmpsb pop and jle xchg ffreep push jmp fistl fiadd cmp xchg notl mov cmp rorl orl rcl jmp ficom push dec (bad) inc add push int3 sarl mov into inc jge xchg cmpsb outsl aas loop cmp sub dec mov sub mov sbb es mov and (bad) aam or push mov cmpsl in (bad) lea xor adcl jp out insl mov rcrb movsl push lds in xor out test test cmc xchg rorb jg jge out push and cmc addr16 jnp test cli pop mov test cmp pop mov mov ja push ret xchg cmp xchg push lcall dec bound jno popf or out stc inc addr16 xor adcb cs adc insl ror data16 in bound call jge jg inc inc push orps pusha sbb sub pop ss mov and jnp imul push push dec pop in ljmp fmuls mov (bad) push pop push pushf fildll cmp mov ja mov mov cs cmc jb hlt mov mov daa popa test lret dec pop pop pop test out or scas sbb bnd divl push imul mov add lret pop mov in in cmpsb or sbb pop jae es leave sub lods shrb mov inc testl push push push and xor mov adc sahf loop jmp fwait sub xor mov mov orb out mov je jno inc je jbe cwtl mov pop dec std or or jl and (bad) bound ret loopne xor lods jmp mov pop or add and (bad) aad or pop adc mov data16 pop cltd jecxz sahf jnp or loopne roll aas fild adc or dec jmp repz sbb jbe add loop sbb or lock xlat mov movsb push arpl lret andb fstpl iret rcrl xchg fidivrl mov mov je add sub pop mov jle sbb les cmpsl dec pop adc test lcall jae jecxz mov ss dec scas sarl and lret sbb or mov sbb scas insb add imul and xor loopne sbb lea pop inc xorps imul inc dec mov mov add cmp xor dec loope cltd jne and cmp fnstenv fwait xor lret mov ja mov pop int pop stos cmp cli sti pushf push jmp insb sbb and mov clc loopne cmp rcll mov js int fcompl or enter sbbb jl iret xchg push fnop xchg mov int3 dec sbb (bad) mov idiv pop add je push dec cmc jmp loopne or and mov mov xchg out popa sub leave test jg test add jae daa dec mov (bad) xchg loope push insl je repnz (bad) (bad) adc stos les fisubl sti stos je jecxz or imul jae jbe (bad) mov pop ret mov fucom adcb sbbb push fadds jo dec loope adc (bad) fs inc cwtl lcall push outsb in xchg or push sti push add pop scas lret jmp mov dec fst jmp popa ret scas mov cmp dec insl add movsl or push xor jge sbb lods or push addr16 dec cmp cld mov cmpsb js out sub call mov mov outsl cmp cmpsb movl pushf clc inc sbb sahf or addr16 mov je,pn inc lds int3 mov xchg mov bswap mov mov jmp cmpsb rorb movhps pop mov cmp repnz xchg repnz sub xor mov je fwait outsl sub in inc push mov mulb xchg mov dec stc add push out pop or jno repnz icebp sbb fs pop jp scas cmp jp into push iret cmp push push fnop adc mov idivb cmp cwtl notb test xchg bound popa push pop stos in jae pusha mov and fstl aam sbb pop mov repz dec pushl pop sahf push push cmc (bad) sub rcr (bad) mov dec ljmp repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) fild add add pop in (bad) jg outsl int3 add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add shll add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc and popf insl (bad) dec mov leave jbe fwait push dec mulb insl arpl out ds sti pop sar add xchg pop add mov push ficompl mov test mov fisubl inc mov ret lret xchg shr pop pop or loop mulb sub jne idivl ljmp jmp mov imul je in inc jne inc lds hlt mov das pop inc icebp xor test inc xchg inc cmpsl arpl mov sub jae mul repnz jno mov aad sbb dec rol lods mov mov cmp and insl gs lret (bad) scas hlt enter test lock popf jle test cmp add cmp mov (bad) sbbl pop imul or nop loope aad into jle push icebp pusha shrl fldenv (bad) mov movsb cld js sub mov (bad) xor mov (bad) jne pop sbb aas jp xchg jns mov insl pusha lea sub scas mov jno or test adcl xchg mov (bad) orb mov ret jmp js mov in mov jns or call dec out mov out ficomp inc xchg outsl pop cmp add mov cmp push push xchg xor inc rolb xor bound mov cmp mov push add das jne test and inc xchg test int3 addl jno sub cmp repnz cli push adc mov adc (bad) aaa cmp adc sbb loop sbb cmp adc rol xchg mov adcl push ret inc jno mov shrl (bad) mov jmp fsin push ret or mov mov pop jmp test in clc adc mov nop popf es ret lods fs test and imull dec out mov in lret cli out pop dec pop cmp adc jo (bad) push roll enter mov mov dec or (bad) add pop ljmp mov (bad) cld cltd enter push (bad) mov rcll movsl addl ret jne (bad) mov jp jge icebp push xor mov stos xor add and int orb fsubl mov mov (bad) aam adc push xchg daa outsb aad xchg cwtl mov hlt dec push nop inc mov cmp jge jae mov sbb pusha faddp ds fsubs cmpsl lods imul ja jge sbb xchg and lock addl pushf pop mov enter repz mov add or aad out ret and or add jmp sub fstpt push add loope mov push adc scas mov sbb pop mov stos mov or aam push sbb dec sbb daa jne xor dec push imul addr16 mov xchg xchg or jb and fdivl (bad) outsl imul pop data16 sub loope add stc sarb pop pop loope das loop dec cmp mov rorb sbb sahf rcll test daa ret dec cmp in repz mov mov pop hlt jae dec mov shll (bad) pop jno dec sbb cmp aad xchg mov push (bad) lea xchg and ss popa nop xchg in ja loopne (bad) stc rcr mov pop jns adc push ss mov lods xor fstpt mov jp out je push repnz outsl mov out in out and test xlat or lods xor inc bswap addl ljmp dec xor repnz adc pop sar cmp (bad) jne jle inc push shlb xor xchg dec cli mov cmpsb iret and lret fwait mov fsubp mov sti repnz adc (bad) push dec icebp mov xchg adc dec jp push xor sarl out (bad) and fsubl push imul or jns mov iret jb imul in jb jns mov les (bad) fs mov je pop push xchg out mov roll popa fildl mov inc push dec jb dec xchg ljmp push test (bad) fiaddl rolb cmp fdivl xor and in cli sbb push cmp push pop sbb in pop lods cwtl and lret add insl test ret in or stos push mov dec lahf fnsave rclb pop call js pop icebp ja cmp jnp sbb aas lock adc adc mov mov test xor pop cmp subl mov test xchg cmp adc mov mov push or loop mov lahf lahf add xor stos bound pop mov ficompl jno loop pop popa (bad) sahf xor repz cmp pop aas outsl ret cwtl in ds xor sub add jns mov cwtl jns pop xchg es sbb stos adc push je sbb (bad) aam add fwait jb stc gs gs rcl jg mov xchg push mov loop jne lods sti jns jecxz mov adc dec sub lock (bad) sub pop push das adc sbb fisttp cmp pop (bad) mov inc int3 daa jbe (bad) or push mov push mov jl inc mov cwtl lods sub inc aaa dec aas clc iret mov add mov sbb or sub fstpl mov nop xchg iret std daa std in loop stos jbe in imul lods fwait pop imulb (bad) pop stc aas or and xchg cmp xor js jmp mov inc aaa xchg call xor sub movsb push adc push xchg stc push int3 cmp jo (bad) mov std cmp (bad) lock add adc dec and jmp or scas inc shlb jmp cld mov int (bad) lds dec (bad) sti andl xor push mov rorb jle xor aad leave sbb mov pop cmpsl addl pusha cmc jb popa xchg popf dec loope icebp rsm sarl and sub repnz addr16 sarb cmp jp or lods sbb fiaddl adc dec adc or cmp xchg pop xor mov push push imul mov dec sbb in jg mov test pop mov rcrb std pop dec and fwait mov jne mov sti jle,pn mov insl ljmp or (bad) nop loopne inc ret (bad) mov mov push (bad) dec jae dec pop pop pop adc xchg mov das push addl jge cld in push push mov mov push add fstl xchg inc xchg sub adc insb lock mov cmp xor xor add out in out lock and sbb inc inc mov jnp jnp cmpsb fnstcw xchg out add or jg std es loope jle mov mov cs pop ljmp lock xchg fsub jnp mov mov addr16 ret out xchg and sub fdivs sbb push and mov fcoms test icebp in xchg xchg mov bound push rcl lds or mov les sti in clc mov out mov in dec inc stos insl roll subb femms push pushf jns push pop adc es test es dec pop mov dec jnp repz dec adc (bad) rorb mov and hlt shl subl xchg or or xchg jge (bad) cs inc jb add sbb loop adc cmp cmp adc repz arpl fwait xor xor add mov or push fdivrl addr16 cli je add lea sti ljmp test pushf test subb cmp push sbb ret imul inc in cmpsl mov mov xor mov out int jge dec jno xchg mov xor sbb push test es int cmp and pushf push add insb stos adc repnz jnp mov and push jg movsb rcll cli push xchg sub mov popa fidiv jmp push pop dec xchg cmp insb in or fwait dec jae sub adc xor mov and dec imul push cmpb pop and mov sub iret into and ret cmpsl fdivl sub xor add ret adc movsl jle mov loop or mov out cld add mov push lcall (bad) int pop (bad) lock push cli cwtl jl inc repnz fisttpl int3 nop popa icebp stc and jne lods fs cmp jge stos inc je and (bad) pusha icebp or xchg adc and movsb (bad) andl mov lock mov push stos movsl jbe lds fldl cmp ret pop push icebp cmp movsl mull std cmp and sbb js xchg out mov push push sub pusha or dec nop cmp mov and sbb or (bad) in andb pop int mov test xor aam stos jnp cli sub jne cs mov rol lock mov pop lret nop movsl mov (bad) jnp xchg das mov xchg dec xchg fisttp cld and mov in xchg add ss xchg mov cmp movsl stc negb pop idivb xor (bad) call jl iret sub rcrl xchg lds es lods lret mov xchg fstpt mov inc xchg xchg dec pop push inc mov scas dec sub inc mov inc sbb lods nop aam mov cmp sub (bad) std je dec stos xor je mov arpl adc jno lea cmc dec and dec (bad) (bad) pop inc xor popf cwtl sbbl sbb xor incb dec push loope cltd test fistpl push and bound lret int3 mov call aam cwtl inc fstpt (bad) cld mov rolb xlat pop inc add pop mov insb push xchg repz jmp aaa jg inc out sbb insb (bad) xor add inc in push dec mov bound andl add xchg sti sarl shrl setae mov adcl stos dec jo in ret popf test ret fdivp ret mov pop (bad) aam sarb mov sub and or lods mov sti mov pop sub cmc pop cmpsl mov sti xchg and xor and or push ds shlb (bad) arpl adc jbe jno mov mov and imul stc xlat mov lret jmp mov dec and out cmp or cmp fadds jo push xchg sarl out push stc adc mov push jp hlt outsb imul dec inc jb jl mov ffree sbb push adc jmp mov jg dec ds aad pop mov push enter pop xor repnz sbb stc ljmp add fldcw sub arpl push insb imul push lret mov popf push cmp lcall pusha jo lahf pushf mov pop xor mov cmp or es jge repnz arpl mov xor inc xchg sbb sub loope call cmp (bad) js xlat cmp sbb jl push sub xchg mov mov clc pusha add out mov fdivrl ljmp cltd ljmp shr cmp jno mov ljmp mov mov les cmp rorl inc pop jns inc mov and mov popf aas in jmp push out cld add (bad) enter xchg loop scas or push adc pop clc mov cmp repz jne xor mov mov push inc jp dec cmp les pop jbe stc xor jbe or jbe cs or leave out roll cli jl test stos (bad) mov push ljmp and pop mov arpl and push xor dec sysexit push stc mov adc aad push dec sub push jns cld out jmp cmc xchg icebp cli xor and in addb rorb jmp stos das or fldcw insl rolb js push pop rcrl jmp iret mov and inc call test mov or adc xor stos fcomp imul lretw leave lods push sub xchg std clc push loopne jp jp call aad sahf fdivs or mov jl sub cli jmp jge movsl rcll mov jns pop and jle jb sbb inc inc push or lcall xor test cmp test or pushf test (bad) cld adc adc aas loopne push jno data16 lahf sbb and mov adc aad rcr cmp cmp and lahf outsb stc (bad) je pop inc (bad) mov lds lds data16 hlt out int3 ret mov mov jne nop mov jnp pop cwtl out leave adc add mov shrb pop test cmc sub pusha aad iret mov (bad) jne je xor xchg ds aaa xor mov adc mov (bad) (bad) pusha in call lods pop xchg (bad) pushf sti mov push pusha mov mov (bad) pop fsubrl ljmp in iret stos pop es and movsb adc mov bound mov xchg add pop cmp cld lcall inc sub pop push je loope paddusw cmp lcall or cmp mov in inc jnp (bad) enter adc add inc (bad) addr16 test xor pop lds pop xor sub mov (bad) push or pop (bad) mov cmpsl inc and ds inc mov fwait aas push pop pop adc adc in movsl aam and sub sub mov lret fsubrl push ds xchg loopne pop stc jnp test push (bad) adc cmp es ret mov lret lods mov add in xchg clc mov lcall std iret sar leave rcl das cmp lcall push fldcw dec int loope adcl cmp enter jg popa dec stos leave xor add mov add dec sti rolb pop adc sub adc sbb jb sub jmp stos int3 fldl dec mov xor add mov (bad) fisttpll lods push pop fistpll lods mov addl movsb shrl jmp cmp cmpsl cmp roll movsb jecxz clc ss pop jmp add sub sbb sbb jno mov (bad) divb push iret cmp cld ds dec into or and imul fistp sub in xchg mov dec fistp xchg mov (bad) dec mov inc repz and lret or lahf mov cmpsl adc add and cli gs mov das data16 jno fiaddl out (bad) add mov inc mov sub jb in sbb fistpll pop xchg out int3 stos fcompl lock sub sbb mov pop cmp scas insb mov pop inc add mov movsl popa dec sarl out mov xor sbb add adc mov jmp sub mov and stos or aad sub inc xchg (bad) and lcall sbb xor xchg mov ljmp hlt sub roll cmc fnstsw push mov int pushf add test push enter add scas mov out ret in or or mov push cmp out lret xor test xor push dec mov inc xor cmpsb shr mov and inc aas mov loope loopne jo clc (bad) mov mov mov movsl ja push mov jmp cmc das sub lcall pop mov push test adc add xchg pop hlt dec mov adc push mov out add loop xor imul pusha insb nop adc (bad) adc cmp lods mov test push xorl mov xor cli dec (bad) mov xlat das test aad mov pop and adc imulb mov mov outsb gs mov divl pop xlat fwait and hlt test fisttpl push aas push in xor popa push pop loop mov aam mov adc or xchg lock add push cvttps2pi je ja mov push pop movsl sub push ror shlb mov cli addr16 (bad) scas jle xchg scas std mov inc data16 test insb or sbb jbe pop pushf sub sub rorb test sbb or xor sub xchg clc cmp aaa inc lods adc repnz xchg jl sub icebp sub inc jno in lret lock pop loopne cwtl adc xor push xor mov dec testb iret movsb mov dec imul push pop nop in jnp sub rolb lret insb and outsb mov repz jns shrb ss ds lds repnz and mov add inc in dec mov and fbld dec pop lds mov mov and arpl inc mov dec lods fnstenv pop in push lods or daa add dec mov icebp jne ret hlt inc sbb add xchg jns adc es mov jecxz stos push outsl mov jae sbb std push and mov ficomp push cmpsl das aas cmp dec jne out imul inc fidivl sub jns fcoml enter pushf cmp push (bad) ljmp fdivr mov sub push shl xor fildll sub and mov adcl mov and xor sub xchg mov pushw push in (bad) gs jnp sub fs push push lea cmpl push pop mov dec pop lahf and mov mov sub lea and cmp out and leave mov lock and (bad) test ficoml pop test pop fs adc dec pop jecxz pop sbb inc inc xchg jo inc xchg push inc rorl add add mov stc push dec rol cli jmp inc push cmpsl ret jns imul pop ficoml jns sbb adc outsl push stos push inc dec jno (bad) mov and fidiv add aam cltd cwtl xchg and out aam negl inc rorb rcrb jge lods insl jmp daa pop mov sbb xor sbb sbb cmc and orb cwtl cmp (bad) mov sub hlt mov stos (bad) scas daa or outsl mov pusha cld xchg inc xchg leave push das stos dec mov inc outsb mov jge faddl xchg sub inc int out cmp sti repz mov inc dec sub inc mov jl sti lods mov roll pop imul out xor fisubrl adc xlat insb cmp fild andb (bad) jnp out xor shrb es mov testl movsb adc fwait lods pushf cmp and subb jmp push and sbb cltd jno mov push push adc xchg add jge outsl sbb mov and das repz shrl movsl fildl mov movsb sbb fisttp jae add roll daa add rol pop mov clc add das lret jno ss xor fwait cs out mov jle push xor mov cs add clc into scas pop subb stc jae sub std (bad) testb sub pop loope test ss scas adc mov mov ljmp into and pop cltd mov jbe mov mov sub fmull jns scas xlat pusha inc mov or push mov mov (bad) (bad) leave cmpsb mov (bad) jb gs pop or and lods mov (bad) ss loope mov outsb out rorl (bad) jne dec dec add stos and cld add out xchg mov aam in or mov sbb push pop aam shll sbb (bad) sarl or fs mov mov push push xor fisub sbb arpl stos mov icebp dec outsl pop mov xchg push lret inc add adc sub test or xchg jns jmp xor les push pop jmp pop jecxz pushf popf arpl outsb and mov xor mov (bad) xchg push jge push stos add scas cmp lcall loop dec jne cmpsl hlt mov sti ret mov in cli bound ja mov xchg test fisttpll add pop mov jb scas sub pop pop add jg dec mov mov mov nop mov mov pop cwtl call nop imul repz xchg scas mov gs jno fwait adc xchg in lahf sbb loope mov pop or shrb jle xor insl or (bad) mov in push insb aad jo and cmp dec xchg jmp cmp push mov (bad) in je scas xor in sub inc add sub pop and test sub (bad) shlb mov cmpsb dec dec rolb lods lret pop sbb push pop mov xchg jno bound fisttpll sahf pop mov icebp push into cmp mov dec jne inc sub lahf jle or mov lods jno iret mov enter loop push jmp xchg pop pop pavgb mov dec ret call mov enter aas out or flds add out fs fwait mov push xor jmp xorb imul push pop mov push sub cmp insb in sub inc mov lret mov push sub mov jecxz das aas movsl jns adc das sbb je cmp dec mov dec out adc mov aas add adc xor stc jl pmaxsw aad add or xchg push insl cli push (bad) mov and cmovs int lea mov fwait pop pop inc je (bad) cli jmp cmpsb inc (bad) push pop lahf in jbe enter sbb nop adc fildl pop mov ret push push sub mov lds test inc add jbe mov pop cwtl jbe data16 repz sahf sbb fmuls loop pop test jo aad pop enter repz jne in mov ja aam cmpsl repz pushl xorl aas aad dec scas jg cmp adc cmc sub hlt push jg jge test call or std push faddl sahf jg mov mov and dec clc pop ret das push test scas es add enter sbb jg jp push in mov cmp (bad) daa lods and ds xchg arpl push cmpb mov push mov lcall dec loopne out push insb cltd mov scas mov xor scas add xchg inc cmp aam cld cwtl cmp fistpl sub test or in jp nop xchg cld ret vdivss popl jle fdiv push lds cmp daa add (bad) jmp mov pop orl push fs adc jmp in loop xchg test mov (bad) fnstenv or (bad) loop xor repnz rcrl or mov lahf jg xor shll (bad) push mov fsub cpuid mov (bad) out gs cltd jns cmp repnz clc pop mov push mov mov shrb lea int xorb (bad) fld cmpl movsl sbb in mov inc das pop in jno jp clc cwtl push fadd (bad) pop jmpw adc rclb pop mov daa cmc arpl sbb add dec mov pop into cwtl dec adc loope xchg gs push sbb add ljmp in ds mov cwtl arpl data16 push outsl (bad) push mov pop and push pop notl pop cmp inc add bound outsb pop jns and ja pusha lea sbb popa push cmpsl or mov test xchg pop (bad) fiadd dec pusha imul pop xchg adc insl stos inc cs xchg adc mov in fsub les push mov xadd je repnz clc enter scas dec jp xor lea loope mov or les outsl cmp sbb sti push les sub or or addr16 aad sbb mov pushf enter sub movsl lahf cmp out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz test fsubrs das mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret mov jae mov fstps insl (bad) insb imul lret mov mov cld fucomip icebp (bad) sahf (bad) lock adc add sbbb pop inc fdivrl sbb shr pop push and pop mov call (bad) inc shll push lret or inc mov push push insl pop mov jne cmc xor xor imul dec mov stc or scas dec scas lods hlt push cmp rolb adc dec out loopne fwait mov push divl cmp movsl mov ret jg enter adc cs fmul mov pop mov sbb push bound inc pusha leave cltd mov jne or icebp nop sub sbb outsb xchg inc lret cmp icebp pop ja mov xlat mov push xchg inc add mov lods fidivl cmp add sbb ja sbb xchg or cmpsb mov hlt pop push or push adc in jge aas cs (bad) loop dec fld mov jge aas roll daa cmp outsb aas push cmc out insl dec cmp fwait add pop push fwait pop loop fcomp mov popa (bad) stos add loopne push lcall into call mov arpl sbb inc sub xchg out adc addr16 out cli out jp mov sbb mul cmovo ret (bad) insb adcl jbe jae adc aam mov in cmp call cmpsb mov and arpl outsl stos std sti adc or ljmp jno mov jl cmp xor data16 mov cmp imul adc shufps xchg arpl cmpsl pushf pop fstpl sub pusha addr16 xor imul cmpsl pop les gs xchg mov mov bound aas jle aad pop cmp inc push scas xor sbb leave cmp jp mov (bad) dec jmp dec mov jo xor movlhps cs mov ljmp inc push sub adc lds sbb (bad) pop add adc in loope pop mov lahf pop sbb cmp imul leave incl (bad) mov add mov lea das dec insl sbb and inc int sub into lods xor cltd xchg enter mov adc jno pop in call dec lret lahf icebp aam gs (bad) cld (bad) mov movsl aad dec or jnp jo das test mov mov xchg lea das enter dec add push movsl mov jo cmp push fisttpl rolb outsl pop popa mov adc fnstsw (bad) adc xchg push push ljmp mov pop dec jge inc in fwait pop dec adc inc mov hlt mov out dec jno xchg inc dec mov mov ja jle aas cld mov mov pop xor fldt push and sbb sub mov das test cltd jo ret sub push int3 pusha xorl icebp inc mov cs rcrb clc xchg lret mov inc inc mov hlt mov scas mov fidivrl sarl cmp adc push cmc adc lods leave cwtl push mov or pop fabs xchg imul cmp (bad) inc cli xlat test jle dec aam (bad) clc xchg pusha xlat xor or (bad) and sbb icebp out aaa scas mov xchg xchg pop addl mov mov jle jae rol insl cltd in dec mov ret (bad) fcoms inc jbe xchg sbb cmp clc lcall jnp scas sahf hlt mov repnz pusha adc mov adc fbld xor xchg ret mov push push fldenv jmp out push sub mov loope push stos add cmpl ret cmp adc rcll fadd stos inc mov add lcall mov mov in cmp stc cmp bound dec lret fsts xchg mov and xchg dec mov loopne inc and outsb or xor ljmp xor inc adc push insl lods xchg fisttp movsb push das and xchg test outsb push xchg add mov push bound popf outsl gs cmp enter out and mov stc loopne bound ss push add mov cli jbe outsl and or (bad) js outsb repz hlt mov or loopne es jmp test mov lds inc popf imul sbb into mov into cmp xchg add popa pop xchg jg mov add push bound int lcall pop jg xchg cmp dec int3 (bad) fistpl inc subl popf dec push cmc call (bad) and push movsl mov mov dec lret shlb int3 je out cltd and int push xchg subl imul mov divl add lahf clc das cmpb (bad) mov in add add sub push push stc push sub movsl mov ljmp fistl mov adc and repnz loopne inc popa clc sub cmpb mov inc repnz fistp push dec mov fbstp jo inc and clc xchg sahf into fcmovbe (bad) out mov pop loop dec in xor mov (bad) test inc adc jo xor xor scas gs xor je fmull lds mull push or add bound mov test cmp pop (bad) mov popf sub dec mov mov clc adc inc adc xor popf shll call cs call xchg test sbb int or enter mov (bad) or into lds (bad) out mov test xor cmp cmpsl or lcall xchg jmp or pop add mov pop out cld sbb les sar hlt ret inc and fstpt mov (bad) cmp (bad) pusha inc lahf add sbb xchg pushf push inc push stos push fsubrl add aas mov ret dec pop ret popa and call in mov hlt adc insb mov jno jl imul jl adc clc fldl xlat outsl jae and mov out jbe pop pop ss (bad) inc hlt push imul cmpsl xor clc pop les jnp mov inc mov cmp scas lcall loope aas mov repnz sbb iret sbb add pop mov xchg mov sub xchg popa jg adc inc push enter cmp (bad) xor mov int mov js enter mov xor ss aas push movsb add sbb xchg neg pusha int imul pop add push or inc pop sbb movsb rolb ljmp ret icebp or rcrw adc enter mov cmp pop and mov fildl mov fisttp jne aam icebp or popf xor in push or aam fnstenv rcll xchg out lahf and xor leave pop push push jmp pop sub frstor les adc mov mov stos psubusw mov loopne jne into dec int addr16 xchg xchg xchg dec pop jmp mov mov into xchg cmc add pop inc lods or into jg popf fisubr jnp mov dec cs cmc xchg adc push mov add (bad) mov fstpt lea repz icebp xchg (bad) pop loope xor sbb add sbb push add jmp add sub add cmp cmovbe sar mov movsl div jg mov pop insl xchg popa imul dec inc jl cmp dec mov jb mov push or and imul cwtl pop in das pop scas adc mov adc xchg add (bad) cmpsl test rcrl test mov sbb scas lds loop ret xor mov cld mov xchg out lret nop and int call xor jo jle sbb sub mov jmp jle lds outsl pop aam mov inc loop add add adc pushf mov nop repnz ficoml aaa dec lret fnstenv int3 push pop push int iret xchg jne aaa shrl push inc xadd cltd xchg into cmp enter jno mov inc (bad) jge mov idivl cmp fisttp pushf loopne mov in out (bad) repz cltd xchg mov add pop outsl jl aad mov inc lret inc mov ds jl xchg stos ds stc xor xchg push xchg jle fwait aad xlat mov cli out das dec sarb lahf mov into rolb lods mov les js adc sub popa jg mov cmp xchg test cli movsl les add dec push repz mov mov ds adc adc aam cmp (bad) jmp xchg into insl pop add dec movsb lods push xor mov imul aad test les jno push imul ret scas sub sbb mov and frstor aas (bad) lock fstpl leave idiv push sub sub push jmp out xor (bad) push sbbl cmp jne ret shlb xchg into imull nop mov jne cmpsl dec mov pushl push push mov add test mov jl pop push (bad) mov push fildll jmp leave (bad) fldcw push in xor sbb scas mov iret dec int3 roll mov mov loop adc (bad) idivb test pop jg icebp aas jmp add mov repz and jae lret push xchg pop adc repnz movsb jmp add mov ss mov add inc push push scas lea sbb lret mov adc xlat stc nop xchg cmp xor cmp mov pop cltd pop cmp and jge sub and icebp ljmp lds sbb pop and fnop outsb push push xchg xchg mov mov jg pop xlat and adc jp adc jo dec into clc mov ss test je push push divl or push push arpl or mov loop sbb (bad) iret shrb push mov decb sbb and lods inc adc sahf jb inc (bad) hlt iret (bad) (bad) scas jb xchg fstl movb nop aad jae inc adc adc shrb test mov mov popf daa stc daa mov mov negb lods hlt dec cli (bad) test dec cmp cmp lea bound mov xor into frstor sbb or inc cld and test std pop jle and add arpl mov stos fisub sub push sahf mov (bad) and fyl2x mov ds mov jbe fsubs (bad) mov movsb or es mov or jge in ret mov xlat loop jle xchg mov lds in jecxz ja dec rcrb dec stc std add addl and inc cmp loop jmp cmp xchg lret inc and lret pop inc pop clc xchg mov inc add or pop lds add loop lods insb or lods repz push push shlb or shrl sbb adc subl jmp mull inc and jbe pop add leave je jg outsb fmul leave jnp bound dec sub lea paddusw push lds stc shlb je daa dec xor mul clc (bad) jb xchg mov adcl lods leave fsubrl pop shll pop xchg cs mov in out les daa movsl or xchg (bad) lock sbb cli xchg outsb in sub inc int3 mov pop jmp dec pop lods adc je jne jnp and out jne xchg out test mov stos sub notl cli (bad) int in test dec push dec imul insl or daa (bad) lea sahf and mov jp pop stos int jmp movsb enter imul add sbb sbb sbb xor xchg repnz mov cmp pop dec and clc out test stos mov cli es scas jbe cmp jp inc pop jns push dec or pop mov ja mov xlat fsubs sub into (bad) push (bad) rclb aad adc insb push shlb les mov fwait and fidivr div sub repz enter cmpsb cmp add push rcll sbb (bad) movsb pop jmp ds movsb xchg ret gs push movsl xchg popl mov adc lock call fwait in icebp ja dec xchg cmpsl add jp (bad) mov repz sti inc notl call and lahf jl push lcall adc push pushf shrb adc mov or addl push add add adc sbb xor or mov repz jo jle mov mov inc in push jmp inc and icebp pushf (bad) leave repnz pop rep loope cld adc ret repz movsl xor xchg stc lea pop pop scas ficompl xchg in fcomip sbb in xor call inc mov or dec lods movsb sub mov cmp push sti mov or pop (bad) imul xchg das sub or xchg jnp fs pop push adc (bad) fucomi mov scas xor cmp pop out mov imulb loope cmp in or insb outsb sub cmp jbe xor pop dec jae mov mov dec loop lret int ljmp pop (bad) dec sub lea pop (bad) and push cmc adc inc (bad) call sbb adc inc jl xchg lret lea int test mov leave jp sahf fucomp nop hlt xchg rorb rolb xor stos scas push mov jae inc jno pop push xchg test ret aaa xchg push out sub jns adc mov (bad) int3 test xchg sub cmc push mov jle adc jno aam test and and (bad) mov pcmpgtw mov cmp ret (bad) outsb jnp dec shll xor je sahf mov test or ret or xor rcll adc fs xor cmp add cmp pop mov push mov sbb pop (bad) repnz ds inc cltd loope icebp cmp inc xchg dec repz pop aas mov xchg int scas mov mov pop inc out negl icebp adc cltd lea add fcoml js add mov bound mov je jl mov mov push mov push in mov dec (bad) xor sbb outsb mull scas int3 shld cltd stc enter lods arpl (bad) mov repnz xor in jae xor xchg and fsubl leave dec pop cwtl (bad) out jge pop cltd negl (bad) pop push jge,pt insb dec lcall or mov or loopne push outsl cli sbb js jae fstpl inc enter mov or xor pop xor in cltd add push or repnz lock aas std or arpl dec xchg and add div nop les mov dec divl xchg (bad) pop inc inc (bad) (bad) sbb cs push push outsl xchg out pop mov fnop in sbb mov push (bad) mov test scas pop cmp mov mov inc mov inc ja popa ret mov sarb or gs pop mov jns aad or scas add in lret sti jle push jecxz lock adc mov in (bad) mov dec or add lret int scas enter sub scas iret pop imul xchg pusha xor sbb (bad) les sub sar in fs and and pop aas xchg sub iret sub in cwtl xlat add pop insl popf insl not dec clc inc test xor mov cmpsl fwait rolb in mov dec outsl push ljmp sub xchg in mov call (bad) sbb inc pop mov (bad) inc into gs pop jnp xchg popa mov adc jns push mov pop adc test sti (bad) les xchg dec sub cmp (bad) int3 cltd pushf (bad) xor inc adc xchg mov lret mull jns imul xor std jae cmpsb aaa and (bad) fdivrp pop mov cli mov add mov inc inc jbe add lods testb jnp add cld lods xchg mov js out mov test adc (bad) pop lahf iret dec sub mov jb mov sub and adc xchg push and inc shlb sbb jne pop pop out fdivs shrl add and pop push jo icebp pop xchg cmp and pop add in sub adc loopw int3 xchg data16 mov mulb dec mov sub rcrb pop pop fstpl inc pop dec dec mov (bad) nop sbb rcll xchg nop mov hlt or (bad) lods cmp sub pop addr16 add jg mov jl sbb (bad) mov imul dec fisttp xchg out scas jne sub push movsb mov inc sub cltd arpl loopne in sub mov data16 fistp jmp push aam repz sub jle add and cmpsb cmc lret aad fdivrl add pop int and cli push inc adc add leave (bad) fildl in rcr (bad) call mov cmpsb xchg (bad) jl idivl (bad) mov jo add mov xor adc movsb mov cli imul dec cmp sub aad sbb sbb fist je (bad) sub cltd xchg mov jbe dec sbb ljmp cld push mov stos mov mov sub scas add sub cmp sbb pcmpeqb fadds mov mov out stc add cld push test xchg or insb ja mov and ret xchg lock xlat adc inc cmp cmp rolb push stos lret inc mov cwtl je or mov add pop ss or jb dec or jno or scas mov (bad) xor adc decl mov pop ret jne xor or adc cmp jge out mov stos mov pop ret dec dec mov push sub ja,pt push test sbb push xor stc push and in lcall aad sub aam int jmp into fs push pop sub addr16 jmp das mov xchg sub jne jp and out in lret sbb sti daa adc aaa push ret add cld fist xchg and dec (bad) out outsl pop stc pop shlb pop sub sub movq imul jle mov leave xlat or jae out jg mov xor inc sbb (bad) xchg mov push repz cmp mov jge inc aas xlat out mov fmull push sbb loopne or lods data16 jmp dec push (bad) into test nop lahf arpl rcl mov inc mov xchg and sub enter leave ret pop xchg sub pop add jecxz sbb push jbe daa addr16 movsb add cmp mov les clc or xlat sub add push xchg sub into (bad) arpl sub sti data16 in cltd add cmp xchg out clc fidivrl dec scas rcrb imul lcall fmuls mov ret push push adc add mov pop imul mov (bad) lahf ja je in pop and jbe cmp mov into xor mov (bad) cld add notb push mul lods popl jb push repnz leave js arpl aas cmp test xchg sub inc sbb (bad) mov imul dec pushf movsb inc mov mov push mov inc ljmp js inc icebp xlat (bad) push push aam lsl clc lds dec jmp dec arpl sbb shl mov xchg pushf movsl in sub pop or lea inc fldl dec xchg pxor popf (bad) repz outsb cli (bad) bound push leave xor stos fbstp fs jne push into aam insb mov enter jno repz adc jmp push xchg mov jne adc test popa (bad) jne outsl and test popa mov or pop (bad) or mov je and mov jp cmp aad aad inc insl push repz fcomps inc jmp mov push cmp dec popf insb inc repz daa xchg out dec je movsl into clc sbb rcr sbb mov and jmp push outsl repnz out (bad) je inc ffreep mov dec jle je rcr xchg jl (bad) lcall fs pop fmulp mov pop mov sbb cmp insb and sbb dec mov pop xorl sahf sahf xchg dec cltd outsl adc push sub and add sbb test mov das push jbe jb notb stc loope sub push xor cmc pop gs popa incl loop cmpsb test ljmp addr16 aam popa cmp mov inc fdivrp fstps xor mov jmp mov jne nop add int3 inc dec push inc outsb mov movsl fs scas int3 jno pop adc and xchg mov in sti pop mov imul jmp (bad) mov add fs (bad) pop mov outsb sub (bad) je fisttpl mov sub sub aas cs (bad) cs jns add mov das or cld imul shll (bad) out xlat mov jl push (bad) jmp addr16 or push mov add fadds push lret out (bad) pushf xchg jb mov adc mov imul mov and xchg negb cmp lret (bad) fwait add cmp out xor push and sbb lods push sub in cmpsl inc xchg lret imul lea mov pusha cltd jle jg out test lret cld (bad) dec (bad) xor sub mov loop jb leave fildl out mov xor ficoml add cli bound outsl fsubs pop out in adc and lds xor mov jb push aas mov pop add xchg xchg (bad) cmpsl inc fisttpl inc or mov cmp sbb mov pop (bad) aad mov inc insl repz shll pushf (bad) repnz inc push cmp or pusha aam xchg sub mov push test sub out adc in (bad) push sbb dec mov mov sbb cmpsl push adc pop cmpsb int sbb mov enter imul cmpsl pop mov testb mov xchg sub insl mov arpl lret gs push (bad) fs hlt add rol outsl push dec std xor lret mov mov xchg out sbb add neg inc ds xchg push out sti jne vmread xlat xchg mov lods popa ficom mov movsl test sbb aas dec mov loopne mov repz out (bad) pushf mov jl movsl inc and js pop and or cmp pop mov add adc push fisttp in sbb aam jp into jmp out ja mov mov adc mov fcmovnbe mov jecxz push dec cmp rcr jecxz lea inc fnstsw inc cmp cmp aaa adc push mov jne (bad) xor sub movsb cmp arpl iret push add dec pusha jecxz mov sbb jle xor sbb iret inc in mov push dec pushf sub inc out subl aaa pop inc push addr16 pusha or sti xchg jl outsl popa xlat mov outsl pop int3 lds das orl mov ret icebp dec inc data16 cld daa out and outsb cli and or pop xchg lea push cmpsl sbb cmp xchg xorb cmp mov mov aad add lods pop aam lahf jge jp fstpl mov mov inc arpl lds adc pop mov out xchg lret sub add sbb dec int3 cmc adc in les adc scas jns mov scas push sbb aam dec mov xchg xchg mov mov xchg aam jns test sti lret hlt rorb scas lret mov pop aas dec adc jl or mov add les stc sbbb je mov xor xor cmpsb xchg xchg xchg inc fcompl mov sbb orl mov movsb adc out je jmp addr16 mov and mov sbb shll mov int cli mov or inc mov (bad) pop push add lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg mov in icebp sti mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fldenv add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push pop sbb xchg insl fldt aad daa mov jbe fstps mov mov in push (bad) jnp (bad) fild add and mov js cmp (bad) testl sub xchg (bad) sub (bad) nop or loopne mov or push or ljmp inc mov mov icebp pop mov adc pop jmp fstpl popf sti jecxz xchg mov dec fcompl xor jg and push gs mov in fistl pop stos movsb cmpsl mov enter push xor jb dec (bad) out (bad) add pop data16 test aad pop jae,pn add pop inc cmp aam fmull outsl jp fisub dec sbb jns jae ret jno sbb jg push lds mov add inc mov mov sbb lds xchg jge adc push xor int leave sub and adc std dec loope dec stc xorl stos cmp mov ss and sbb pushf pop out cmpb xchg mov or sbb rcll and pop add cmc (bad) dec fucomp flds inc out dec cmpsl xchg lods scas push mov dec dec or xor adc adc mov sub mov jne cmp icebp mov mov loop pop pop cmp add mov add popf jmp cs inc outsb jo fidivrl pop incb fisubl jae or setbe orl and jp cmp push (bad) lcall lret (bad) leave cmp mov jg daa push xchg inc adc mov cmc stc cmp popf push inc es push cli mov adc add movsb mulb mov cmp cmpsl sahf pop in sub dec into fucomip jo movsb dec mov inc inc repnz (bad) xchg dec dec pushf sub sub je fs adc pushl jo push (bad) fs cmp mov add mov dec test dec in clc pop mov hlt (bad) pop es loopne in pop mov in stos adc or and or jecxz sub test inc pushf and insb cld xchg dec fucomp pusha pop (bad) stc mov cmp pop cld pop mov mov lret sub or mov mov xor negl xchg hlt xchg lret xor ja (bad) push fidivrl (bad) push jnp mov sub jo ret mull nop ljmp jge pop (bad) xchg dec sarb push scas (bad) jo cmpsb mov movsb adc (bad) loop insb inc aad (bad) iret and in pop push mov mov xchg jno push jle imul repz scas sbb dec mov adc pop xlat jno mov lock push fcmovne ror and add mov push mov ljmp insl or pop xor jmp enter cmp popf add test and iret loop pop mov sahf mov push cmp xor outsb or mov jnp and in gs shl pop pop outsb dec dec dec sub dec sbb adc pop xchg sti clc dec ficompl data16 sbbb cmp (bad) xchg insl inc insb pop mov mov add ss sbb jl pop arpl jle sti cmp cmpsb mov ss mov pop sbb andl and dec fsubr mov mov (bad) and push mov outsb jmp popa fiaddl mov add test inc iret lea hlt idiv pop jle and dec add mov in les fistpll psrlq daa push xchg mov push push daa fnstsw stc dec js jp and int cwtl xchg xchg sarb mov pop xlat fwait dec add fdivrs mov fcompl nop push sahf test sarl movsb pop push fmuls fwait aam rol pop mov xchg lock adc jnp,pt int3 pushf adc jle dec cmp das adc stc test sbb jb adc imul cmp jle jns add mov pop xchg lds fldpi mov test mov xchg xchg leave xor add xor push pop cmp stc push je jnp repz pop arpl test jmp push xchg ds testb cmc pusha mov fsubrl inc jle rcrb inc or adc dec dec push cld (bad) fmull xor stos adc scas fsubr rorb gs out inc loopne mov arpl jg lods hlt cli out (bad) jbe loope (bad) fwait lret mov xor add dec sbb daa clc and daa js aam rdpmc xor jmp es jp adc inc fsubl push or sub dec test lods mov dec mov cmpsb icebp imul and jmp stos hlt or xlat or adc pop pop (bad) imul cmpsb sub push mov cmp sahf cwtl (bad) in lods xchg and pop push aas cli xchg out les call jge sbb sahf stos jmp out or xchg mov xor into out into arpl mull int3 je xchg adc jle mov add int3 rcrb mov or mov inc cwtl (bad) add xchg stos mov fs add clc ffreep cmp pop out cmpsb fimull jbe (bad) movsb mov sbb sbb push xchg dec push std push jl std dec xor fidiv popf fs rcrl in cs inc push xchg out aaa lret adc add pop cmp jmp in loop das sahf cltd sbb or ja sbb dec fsubrp mov adc mov xor push jae and test lret jnp mov jmp lret and push cltd xchg jae fwait int push loope mov test fs in fldenv imul pop cs fidivl xchg xchg push xchg add jno test adc mov (bad) push mov dec cmp jns aam rorl (bad) xor jae jg pop add push or subl inc push imul mov push lea add sub jmp sub sub aaa popa cmp xchg je in lods in jle arpl loopne jno sub loope fnstcw in fwait sub stos inc test roll popf pop (bad) pop sahf jmp (bad) aas and fsubl psrld mov rcl lods adc iret sbb leave adc jnp lea cmpsl jp mov jbe cwtl insl aam adc xor imul xchg shrb or test shl test (bad) or xchg in mov add stc mulb mov rol pop imul in sbb jmp mov test and or in shrl test out or mov loope xchg xlat push ret cli cmp movsb pop adc push mov rorl xor fstpt xchg cwtl (bad) stos dec js jle cmpb sbb fldenv xor out jo add inc ret adc ds aam cmp pop std xor mov push cmpsb adc cmpsl test mov jbe push hlt cmpsb xor aad subb out cmp xchg mov out (bad) mov lods decb fistl das push fwait cmp adc push xor ret loope es adc loopne pop cmp sub ss jae or bound mov pop mov mov sbb daa sahf stos stos bswap add push lret repnz ljmp stos mov fisttpll jg sub lock sub ljmp stos sbb psadbw jne xor xor icebp inc lcall push add addr16 lcall jmp pop insl lods mov iret fwait sbb add mov sahf cmp mov add testb push jecxz add fs stc mov addr16 movsb push ficompl jne pop cli insl ret xchg mov mull repnz js loop mov push and sub sbb inc test cmc pop inc ffree mov sbb ret jge,pt cmc or mov xorl nop pcmpgtw lods ljmp dec aaa ljmp add subl jno hlt adc iret add arpl insb mov sti lods rol mov pop and sub sub mov ljmp push and jge ljmp dec cmpl jo jns mov popl (bad) mov ret mov stc daa ret data16 lds jl sbb mov (bad) xor mov or add pop mov push dec mov sahf push mov jmp repz sbb mov sbb rep xor stc cmp pusha lock and rcrl lret scas mov or dec sarl gs int3 stos rclb inc sub push xor mov (bad) std imul or sub or fildll push xlat aaa xor sub rolb pusha lods sub jp loope and adc or inc pop imul aad mov fwait mov lret into fisttpl xchg dec stos or or out bound pushf pop aad adc mov mov scas pop out and mov shlb pop and sub lahf jno add iret pop pop cltd fmuls cmpsl popf popa fs ja rcll add cmp mov jne xchg pop jns mov (bad) dec mov push out inc mov loopne ds cmp mov iret cld mov push mov aam inc movsl call add cwtl jl imul fisubrl (bad) ja cmp fwait adc add sti sub mov nop outsl movsl mov std and lea cmp dec xchg push pop push gs or pop (bad) js sbb pop bound sub ss xor popa add mov jmp imul cmp ret loope jbe jns jnp xorl scas sti (bad) (bad) repz aam and and cmp test scas daa push popf jo mov xchg mov (bad) fimull xchg xor lret push and mov in push cmp mov and xchg cmp sbbb addr16 sbb fldt jo nop icebp stos leave repnz lds stc nop mov jge ljmp jge xor mov es jp test mov mov dec mov and or xchg (bad) cmc xchg icebp mov inc jnp insb fsubrp repnz inc decb stc jle sub ja test jle popa fldenv clc movsl divb adc dec fmull loop xchg push cmp add jbe into adc cmpsl mov loop inc pop jge cmp cmp ror (bad) bound dec cmp adc out les mov jo addb cld push jecxz and mov sub mov in pop mov or and mov lcall pop mov mov jle test xchg xchg imul xor add pop sub push jnp loope loop in push mov jge lcall imul (bad) xor sub xchg add rcr psubq sbb xchg (bad) add and cmp pop mov sub cltd sarb inc inc insb sarl sbbb push and rorb pop aam mov bound rorb stc scas dec sub idivl lret loop mov sub cmpb xchg icebp jl fbstp outsl (bad) outsb (bad) jo fs sbb mov jl cs push xchg ret lea pop cmpsl sti push into push (bad) int sbb pusha xchg dec jne and inc pop sub dec inc dec cli mov add adc enter sbb mov jmp ja adc loop mov adc movsb push fwait das mov dec aam div mov xchg push roll sub sbb sub inc imul adc lret bound mov sub push mov (bad) dec pop sahf fisub adc aaa outsb lods xor mov hlt push cmp mov fwait jmp xor out cld push ds or or mov pusha and lea mov or sub jge es sbb int3 push sbb cs add neg out std add mov push xor xchg fisttp mov test sbb das (bad) sbb ret xchg add fisttpll cwtl test and aaa jns or scas jg sub add lock or mov pop mov js inc outsb and stos xchg mov mov cmp mov jmp lock aas dec hlt cmpsl add test jl cmp pop pop jp out scas cli repnz cltd ret negb scas sub xor imul lods dec rolb push jl mov lods (bad) hlt (bad) fldl daa adc jne std xchg jne xchg or push pop iret inc lahf dec data16 xor and add in adc xor mov arpl dec cmpsb pop push mov pop sbb clc ja repz popl push and jne ds xor inc mov sbb lcall repz jne mov sbb xchg iret cld rolb clc dec in jg fcompl sub icebp inc ja fwait sbb sbb aad push cli clc bt das xchg lock sbb (bad) push lds jl (bad) inc ljmp lods sbb adc dec in xor push shlb jns aaa cltd loop xchg outsl sub stc mov dec jl cmp pop jo imul mov or ja and inc mov aad sbb xor lret cli movsl flds dec sti jmp cli jns scas out ficomp into pop clc jp test push cli pop xchg inc sub out inc xchg mov mov sbb mov aad frstor in gs and push jg xor ljmp (bad) scas pop xor jecxz sbb mov ret sarl dec ret xchg imul in sbb scas stos mov dec xor scas in or das dec insl mov adc fstl adc imul push dec cmp mov fadds arpl enter xchg mov or sbb mov mov mov jge ficoml fsts jecxz scas cmpsb or imull mov repnz std xor pop mov (bad) in vlddqu or push insl cmp mulb xor loopne xchg scas hlt add cmp int pinsrw iret xchg and push ret dec les push sbb rsqrtps pop fdivr jo or sbb lods jbe insb (bad) iret fisttp les inc rcrl jl std xchg sar xchg dec in push outsl pop mov xchg insl dec dec cli pop sub push nop jae fldenv insl xlat iret cmpsb jg rolb add mov adc jb,pt inc pop and sahf adc xor (bad) insl xor out push scas test insl je xor (bad) sbb rcrb xchg mov enter (bad) jnp or out popf lret jnp mov xor notb fldcw cmp cmp cmp insl icebp mov mov jecxz sbb xor and jmp adc jns push xchg or mov pop pop or xlat xor xchg dec hlt or out ret cld add jno pop out ss (bad) rcrb sbb jge pop (bad) out xor sti nop (bad) adc out jmp fnstenv arpl mov and int outsl lea test or sub addr16 cmp push push enter stc and fisttpl aaa mov add test fs adc and fcmovnbe in loopne leave push test lret aad mov lret mov (bad) mov push pop mov sbb lret mov jnp cmp or bound in sbb pop and jl dec leave xor add fldl lcall xor xchg xchg jmp cwtl lahf aad test imul dec push (bad) dec add adc test adc lods jmp pop fsubl dec aaa jns push shl xor aam outsb mov add dec outsl xor add push lods js push adcb shll dec imul pop rcrl mov cld inc bound jle call in pop sbb jl stc pushf rcrl leave adc pushf stc jecxz mov sbb cmc pop inc push jbe push sbb andl jp push push mov mov andl iret das pushf lods push out repz pop popa jge mov scas sbb (bad) es jmp cwtl pushf jae (bad) insb stc jbe pop data16 les dec movsl pop mov mov outsb mov inc jg dec data16 test int3 and aad xor mov push mov jmp scas orb and xor addr16 ljmp sub out loope inc and je stos dec lea loop iret push dec dec adc repnz pop jg out xor hlt out mov cwtl imul idivb xchg stc pop lock cs lods cld mov and cld xor in xor out sbb rcrb mov aaa sahf or sub jp rorl adc hlt scas ja nop inc add and or mov pop sbb push mov add in lahf repnz fisttp jmp inc bound xor xchg push idivl in push inc es mov (bad) jb dec sub or push fnsave cmpsb mov das sbb vcvtps2dq jno lods sub cli dec xchg cltd xor (bad) sti into pop jno add mov mov mov pushf xchg ss lods mov sub aas das mov je hlt adc cmp test mov int3 fldt add xor fstpt inc adc (bad) clc jae or cwtl in dec mov cltd add addl jbe in mov mov cmp andl (bad) mov insl ret pop iret push and jge dec cmp mov cmp in lds jmp negl cmc mov fcompl sar xchg mov dec fsubrl cmp and fist and inc scas icebp popl sbb mov lahf lock out repnz sbb and pop cs aad cmp sbb inc adc xlat es test inc fdivl mov movsl pusha scas push pop dec dec xor das test mov sub dec iret popl loopne repz adc push jbe stc (bad) gs in addr16 inc es cmp and xor inc jp push adc fildl rorl jl addr16 adc jns sti fcomps jbe rcll or add jge fisubrl jbe mov loopne xor addl or push fst fcompp mov cmp jo mov add inc lcall movsl in jge add mov push sahf daa cmpsl mov aam xchg mov adc pop testb and xlat punpcklbw ffree push je lret pop xchg cmp ss xchg fnstenv cld inc push mov ljmp mov adc and jmp push dec dec pop and pop jecxz (bad) cmpsl jle pop jg mov dec inc cmp pop int3 inc pop adc add lret xlat cli leave pop je add mov std push cmp (bad) jnp mov jge pushf movsl or loop rcrb mov into cli xchg into xor inc xchg mov push (bad) fistl les push sbb and mov add push sub fs out cltd cmp mov push enter popf sbb cmc and mov cli or or imul mov jg cltd in add in inc dec and aas test xchg lods xor in lods fsubl dec sar enter push sbb das or inc repnz push icebp std mov imul xchg jnp jl pop cmpsl pusha inc or mov out inc or cmp dec or addr16 gs push rcrb mov mov and lret dec push pop sbb dec or stos pusha jne pusha pop add fcomip orl push jb mov push int ficoml pop arpl inc mov pop or aad rclb outsl sbb sbb xor sahf cmp ret ljmp dec lret out outsb imul aad push (bad) push fdivs sub inc movsl pop ljmp push inc aam dec sub xchg and enter lea push push sbb fistpl push test scas mov dec dec incl sbb fsubrl aas in cmp sbb bound cwtl xor nop leave or mov ja scas dec and loop sbb xchg push push aam mov mov gs xor les jle bound push mov fwait xor outsb sahf shr xlat dec jmp jl fwait mov mov or jnp and mov rcrl adc cltd mov clc rcrl popa mov cs mov rcr inc pop jbe mov cld (bad) push xchg push push xchg test sbb daa fxtract or jp fisub fnstsw test sar push dec (bad) xor mov mov leavew adc xchg push cmp xchg mov push jg,pn les dec jns pop xor mov mov dec jp xor nop repz movsl out loope jecxz (bad) out cs sbb sti in insl mov fldt jp sti imulb lods into jmp (bad) fst xchg xchg push pop xchg jg mov gs shlb fidivr xor lret out lods jnp stc sbbl scas cmpsl jl les mov push cmp repnz popa ss lret jle (bad) rcr dec sub inc and stos cld inc mov sbb jo in rcrb cmc cmp pop imul mov jo dec test adc mov movsl add (bad) cmp repz fnop inc xchg and nop fcmovnu adc mov mov or cmovp sahf jbe (bad) sahf lock xor imul push cmpsl jbe lahf sbb pop mov xchg inc and movsb or or jb sub cwtl jmp scas lock (bad) (bad) xor orl mov mov fnop popf jb sbb xchg xchg addr16 test inc fimull loope cmp mov js cmpsl mov xchg mov fnop mov in adc mov fdivr or cmp xor out adc dec lret add xor mov (bad) ljmp dec push pop inc nop mov sub mov jns or mov mov mov jo add fdivl in cwtl (bad) sub roll in aad mov into sub dec pushf leave scas jecxz (bad) fstpl pop dec data16 and arpl cmp inc or out jnp add ss movsl xchg bound notb mov daa ja movsb jmp (bad) mov xchg push push test jge pop pop push adc scas sub mov xchg or mov xchg mov fstp cltd adc movsl mov push movsb or mov (bad) hlt and lea int3 stc sub fcoml (bad) ficompl dec lods dec add outsb (bad) adc imul jle sbb mov shr inc aam dec outsl add pop dec mov loopne fmull pusha adc pop pop testl sti xlat mov xor notb mov xchg or or pushl xor rol test je cmp std and fldt (bad) lock popa out lods shrl idivb mov sti cmp mov adc test divl lahf lock imul es das popa (bad) cmp mov sub sbb lds adc mov aaa xchg sub add iret loope adc aad lret clc mov adc mov lds jle mov push push ja repz or int3 pop and mov or outsl (bad) xor and cwtl in lods std mov aaa inc rcl mov adcl out stos sbb lcall lahf xchg xchg iretw xor cmpl and jno mov shll add mov sub pop ds mov pop add jae rclb aas push (bad) mov sub mov add mov repnz cmpsb push in (bad) les lret popf xchg ficoml mov mov int das test mov xor (bad) loopne inc ss push cs dec pop arpl lret rcrb lods inc xor dec mov dec clc stc (bad) pop scas or cwtl mov fiaddl fdivl out push inc jae rcrb mov mov pop mov mov sub bnd push inc and scas sbb into std lods xchg xchg push cmpsb pop ljmp int adc jle clc aam or xchg ss adc dec mov lods out mov mov mov movsb mov jg subl dec pop xchg clc pop (bad) cwtl test and fwait aad lret mov cmp add sub cmp push aam (bad) cmp dec lods cmpsl (bad) fcmovu sahf dec pop incl ljmp or mov outsl pop subl cltd sbb (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret pushl add incl in jmp data16 add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg mov fld mov mov xlat mov arpl lret scas (bad) sahf int3 out mov loop add add add add pop xor cmp imulb lds pusha cmc rorl xor cmp xchg mov mov and fnsave repz xor loopne adc stos into hlt jbe lds mov std (bad) mov (bad) rclb pop add xchg jle (bad) iret int3 jb test shrb add add mov inc les stos das jmp xor es adc popa push xor lock insb pusha lahf lock push xor add mov jg mov push inc (bad) dec sub iret xor add inc jne push xlat dec jl xchg jle cld stos adc sub or cmp mov push sub in mov std and fstps add test in or rcll cmp cwtl fisub (bad) (bad) xor sahf cli das mov imul push sub mov (bad) outsl fdivrs mov and lcall sub cltd imul sub jmp and fsubp jmp sbb xor dec mov or rolb sbb xchg nop cmp xchg mov xlat or and cmc add cwtl jne dec shlb dec aaa sub out sub sub stos int3 bound add data16 inc push mov adc jle ljmp cli mov imul iret aas js aad cmp leave xchg test or fdecstp cmpsl and lret (bad) negb cmp in mov pop cli sbb push jp repnz dec jge xchg mov lods push andb jns cmpb push or jmp xchg pop gs call out fnstsw jne adc (bad) icebp ficoml movsb (bad) fstpt jecxz lahf inc clc pop push movsl jecxz xchg loopne jl mov in xlat shl mov or imul fidivr mov and daa aaa mov addr16 mov lock dec inc mov jns pop and push dec les mov cmp test iret leave test fstpl mov call and in cld jp mov sbb jae add mov (bad) outsb (bad) mov mul lret mov adc scas lock adc and jg pop les addr16 inc (bad) xchg or and inc scas sub cmp inc pop test mov add iret (bad) xor cli loopne movsb jge pop gs aaa aas push cs leave ret sbb popa xor ljmp cmp cmc into in sbb mov (bad) (bad) xor cli lahf pop movsl cli cmp pop fs pop jno push add std sub cwtl cmpsb inc les push cmp mov lret and sbbl sbb cmpsb cmpsb push xchg es and test test fcmove gs pop mov adc ja push jo fldenv adc fildll mov shlb xchg pop mov xchg aam pop add mov fistpll or mov push fwait cli mov pushf lret push scas cmpsb sbb inc ret or (bad) xchg xchg (bad) iret cmp inc mov sti lcall mov sub insl xor or fwait cmc or mov jns inc push jp jb je ja push in mov push mov mov mov js inc sbb jb (bad) sahf rcr jp dec add xlat call cli adc pusha or addr16 add fdiv nop xor or xchg push sahf jge imul xchg xor lds push mov addr16 in push jmp mov jmp in mov and stos iret lock shlb push mov pop push jo push pop jecxz jmp outsl cmp out xchg or scas sbb jmp or pushw cmp jge aad sbb inc test mov adc xchg ret mov lds dec imul rorl jae test into lods xchg push (bad) and sbb mov mov (bad) arpl xor or into (bad) fwait ret sub call gs sbb adc out cwtl mov jle stc push imul ret or pop mov xchg loope pop mov loop mov push sbb (bad) sub ror mov mov dec and dec inc mov sbb and in mov dec orl movsb mov xchg push xchg cld mov mov stos mov jecxz inc daa fwait addr16 sub je push push add sub mov push imul jns xor das jl inc call aam xchg inc imul (bad) xor inc inc test ljmp iret aam (bad) xchg ficoml mov ret arpl insb inc xor dec sub dec push insb (bad) fadds aas pop std mov mov out push or (bad) or pop jne hlt mov hlt mov ret out iret cli lds add sub cmc pop ret in xchg jbe push test pop add orl icebp cmp lea clc xor loop jnp pop stos and pop jno mov xor xchg sahf and push push adc fcoms push clc aaa (bad) jl dec stos loop inc test sti lcall rcrb jle scas sbb cmc pop jae repz mov and mov and mov in daa add fstpl cmp mov push mov shl out (bad) inc aam jns pop addr16 out js lahf mul jo push push and jl int3 lds push jno mul stos or push fsubrs rolb xchg test addr16 repz mov push movsb scas adc add jg fwait in cmp cwtl stos xchg jno popa aas in sbb mov xchg roll push loop mov mov mov jl loope dec test out icebp sub fcmovnb adc lods (bad) and ret or sahf fs push loop aaa dec inc or sub sar out push mov push loope lret add jmp pop movnti dec dec cmp stc insl fucomi insl and movsl sub dec daa dec mov sahf adc jmp dec cmp aam jge dec aad cmp lret sub ljmp push stos sbb adcl cmp adc xchg dec add ret jp mov int3 and clc lret push pop sbb and xchg mov jl repz js inc (bad) in outsl jns or clc jmp seta cmc pop mov rcll in nop adc lods mov in inc adc pop inc mov test add inc je arpl into sub out cli mov fisttpll or pop (bad) fisttpll popa shrb push lods dec push (bad) or xchg fisttpll std rorl rorb cmpsl gs and mull push push push and pop pushf ss xorl fwait pop fwait pusha sub mov mov (bad) mov js jns inc in mov jmp push jl mov cs mov mov jle fimul jp popl ljmp xchg adc icebp add cli cmp test mov pop icebp idivl dec fwait mov pop repz and arpl and loope push add jne cmpsl arpl lea sahf xlat insb out (bad) fiaddl clc jl repz clc jecxz (bad) hlt sub xor pop jae cwtl jle imul arpl int mov inc aaa jbe push dec ja xchg dec or sbb mov mov or scas inc call out xor jb push push mov xor and lock dec lret sahf cmp popf sub xchg add adc test mov shl xchg cmovle add addr16 lods mov insl sub test pop cli sub into xchg adc sbb aas daa imul mull inc dec jle bound cmpsl enter jno jns mov mov mov adc iret lock mov test js (bad) fxtract rcrb arpl and repnz cmp and mov addr16 insb mov (bad) xchg das cs xlat andl sub cmc out (bad) pop xchg cmp ret lods in adc and push popa mov xchg pushf lahf fidiv shll cwtl bound adc daa dec fcomps or mov mov mov push sbb sbb add pop stos mov fidiv je dec orl mov mov fsubr in pop cmp mov icebp das mov push in xlat push fstpt or fldenv test jl dec out test rolb mov mov sub (bad) push and xlat push mov and mov jg (bad) int3 inc lds inc xor sbb aaa inc popa lea in dec cs lods adc (bad) mov pop pop ficomp sub cmp les mov enter enter or aam pushw das pusha in (bad) adc and adc repz jno int3 inc jg mov adc faddl shll and out stc jbe lock das cmp insb fwait lcall or pop imul mov enter adc imul sub into stos pusha xchg jp dec fs mov xchg frstpm(287 fist mov xor (bad) dec mov inc push movb cli push lcall adc pop sti jae ljmp icebp sub mov push les sahf dec in mov (bad) aaa cwtl fwait aaa inc jb push mov add jnp test les sti push cs arpl pushf imul dec push outsb xchg push scas push test mov imul scas cmp jns mov sub mov pop xchg cltd dec xor or sbb xchg adc mov aad in xor loope adc adc xor fiadd lahf andl sti sub dec pusha inc add int jo xor aam in mull addr16 jecxz mov mov jo xlat cmpsb mov jp push mov insl inc inc (bad) mov lock mov lea ficompl mov jo push sub hlt fs mov call pop out (bad) lret sub and sti inc clc xor push loopne sub sbb (bad) in out jle xor cmp pushf dec and sbb sbb outsl push and std fildl pop jecxz cld mov gs test add inc out mov adc xlat daa in ja icebp or or push push inc cld push dec movsl repnz fstps repnz add mov or cmp sbb fistpll dec cli cli inc (bad) pop sbb pop xchg lret cmp popa jle test daa inc mov and bound push pop xchg sub mov pop frstor (bad) cmp imul push hlt jmp mov sub outsb and cmc mov sarb test ds cmp push jg push add lds je sahf cmc outsl jmp add mov push xor stc repz sbb inc and fdivrs rcll push jae xchg ss add daa mov int3 stos push xchg push pushf sarl popf mov cmp lret push jne or or inc in ret or clc in pusha sbb or and in lahf dec and pop xchg cli sub add sahf cmc loope xor gs jne add out (bad) lahf fcmove fistp cmc repnz ret and xchg pop scas push mov (bad) sbb sub fisttp xchg inc push and add (bad) xchg xchg mov sub out dec dec xlat sbb lock lea inc je outsb cmp cmpsl cwtl aaa jle leave adc xor xor add xor cmp pop fisttpll mov es scas das mov popa dec dec cli add in mov es pop push sub out pop lret pop xor lods popf xchg xor push inc call sbb movsb scas xchg outsb xor mov fldenv sub (bad) jp repnz out adc cmpsb int xchg adc aam add mov nop mov pop das inc aaa (bad) aad cld pop lock repnz or pop dec mov pop lock push aad or jmp or jl andl test cltd popl xchg pop ds cwtl sub sub icebp mov sub xchg fiadd lcall xchg lahf aaa jecxz insl lds leave mov loope dec ss movsb shr mov sbb shr mov dec mov daa sahf in xchg push test jnp andl mov mov fimul js int3 push mov push sub mov rclb (bad) lahf xchg and jg mov fidivr cmp mov (bad) and push and cmp jae lahf repnz iret jl xor je (bad) mov in pop or mov fistp loope mov inc in (bad) (bad) push gs int3 popa imul xchg lret mov imul ret inc lahf pop sbb pop push test dec repnz je add mov adc sub adc cmpsl rcl fisub mov add xor out decb dec sbb repnz inc mov mov mov jge xchg shll jp popl fwait rcrb dec push lods lock sti pop push in jne clc hlt test gs movsb insb mov adc and std ds and addr16 std jp out les inc sub lret cmp int shll lret gs sbb sub jecxz aas iret jae cmpl mov cltd scas dec arpl lds pop push sub les daa mov ret jmp je sar test push adc mov addr16 adc or pop push out out insb xchg cmp pop mov fdivrs mov jge dec mov out loope dec cmp fstps out jae xor (bad) jns ss or push lcall sub lods mov (bad) mov repnz mov cs mov xchg addl fmull adc pop or jl xchg stos jns popa cmp cld out sahf imul mov aaa cmpsl mov cwtl aas and enter jle xor sbb aas test hlt ret gs pop ror mov sub std fwait icebp sub mov (bad) jmp xchg push inc fcmovbe cmp xchg scas enter mov stos adc sub mov aaa dec mov adc mov fstpl in into sbb scas lahf aas arpl cs sbb fimul jno ljmp roll aaa mul add out loope pop jno jnp or cltd mov push enter sbbl and imulb mov pop test pop clc mov xor inc xor and and sub push push add movsl jo aad adc push out imul mov push arpl sbb cli int mov stos pop es inc jnp cmp repnz rcll rorb out dec inc mov pop jmp shrb push addl jp fs pushf lock ljmp xchg sub movsl mov inc fist idivb (bad) aas add popf mov leave mov gs add sub imul cmc leave xchg mov mov jno out hlt (bad) jno adc pop xor jne push dec fisttp out aas repnz call or xor add cmp lret sub xchg mov mov (bad) mov and daa mov das adc ret shll js mov aam rcrb mov sbb adc int3 lods jo jge dec std cwtl dec jge lcall xor cmp xchg push (bad) inc mov into mov mov mov xor xchg (bad) pop inc pop lret mov mov xchg pop cltd mov pusha rcrb jge (bad) fidivr mov stc out cs push mov (bad) (bad) or add arpl add dec sub xchg sbbl pop decl test int3 nop iret add ficom sub push or movsl test inc test (bad) sub inc cli cmp mov dec jbe inc adc pop (bad) data16 mov jnp mov out pop pushf adc lock clc mov aam jmp in arpl and das je xchg dec (bad) imul jns add xchg mov ljmp in loop sarl and test inc sbb cltd cs jg mov rorl and loop dec outsl insb fwait in sbb cmp fs mov imul add test cli test out test hlt in cmp fimull idivb shrl ja (bad) xor inc dec mov cli lcall into jb mov jle fwait out pop inc dec jge dec movsb subb hlt cmp jp dec dec (bad) arpl and jne adc test fdiv outsb lods js hlt stos push mov out push sbb adc loop setns lods fnsave xchg int xor mov and jb adc pop shlb enter loop inc xor insl xchg jge loope xor cwtl jp adc sub cs sub push sbb mov push js xor jns sti in pusha push sbb jge jle push jmp loop pop cmp repz xchg leave sub add add dec stos ret mov cmp mov out loopne xchg pop push shlb ljmp dec popa mov and (bad) inc xlat cwtl and adc aas mov inc test sub push pop mov sub push in nop test fwait adc adc dec or mov xchg gs jmp xor loopne cmp mov (bad) cwtl repnz imul ja orl sbb pop add pop clc lods adc in mov push lods or outsl fdivrs or movsb jno mov mov lcall xchg aas push sub inc lret daa inc ljmp jnp push mov popf push rclb jne mov pop push cmpsb xlat bound push dec or inc add inc mov inc in cld repnz xchg (bad) push aas in pop les mov xchg push jl jnp iret mov and xchg sbb (bad) mov popf insl je ret xor mov in mov mov (bad) jmp and out mov lods cmp clc xor sub lret jl mov mov xchg dec push mov xchg push sbb add fwait out xchg clc int stc outsl (bad) xchg mov sbb adc pop sub aad xor sbb js test arpl cmc push mov dec aad not ret mov xchg dec lret xlat sahf and sbb or jmp push imul xchg cmpsl rcrb mov mov xchg int pop iret push and xor cmp mov inc (bad) insl clc jo or sarb je hlt jp xchg pushf fldl mov inc inc loope nop nop dec adc dec sub roll lahf sbb push cmp jne jbe add pop and or icebp pop mov cmp lahf dec or and xor rol sbb inc orl sbb mov sbb pop push add dec out jbe inc xchg fxch jb in (bad) lock out dec loope add call sub addr16 cmp movsb xor loopne es divb push popa adc mov lea ljmp push xchg addb and aaa mov popf adc outsb clc sar std je mov cmc pusha add cmp or (bad) jl out mov pop addr16 adc and into insb push and and movsb nop mov test (bad) lods notb (bad) pop cmp mov pop mov dec mov fcmovbe xor fs int cli jns mov test cli pop imul lret pop pop cmp pop adcb mov dec lcall insb jne (bad) lock inc jl dec pop imul stc int3 and xlat jp or test sti data16 mov lock push stos (bad) xor js jae mov stc or loopne xchg cmpsl loop xor sub loopne cmpsb lahf push js shll cld cmpsb imul mov mov and repz daa pusha jge (bad) fild xor test jge and mov cld push fistp fs in xor push loop outsl gs or fsubrs fbld fisubrl cmp push in cmp mov insl into mov xchg fstpt jle scas mov mov dec dec inc jp shl xor xor js push mov jmp mov pusha mov xor ret inc xlat mov outsl aam xchg sub out inc lcall mov mov or cmpsl mov aaa dec lods mov loopne push add mulb test outsb (bad) (bad) and xchg (bad) adc lods cld xor xor sbb xchg xchg xchg test add sbb mov sbb aas sti orb mov fnop and xlat imul xor mov lahf insl (bad) call cmp jbe and push add mov xor in nop scas lock mov pop in (bad) mov addr16 or push (bad) call or andl adc add push dec fcmovbe das mov ret sbb push in gs les push sub inc pop pop cmc (bad) out add ficom mov push sub hlt mov xchg test rclb movzbl shlb adc shl dec gs mov dec rcrb push push arpl mov add std inc lret mov mov test aaa (bad) or call (bad) mov cmp iret popa sarl mov dec mov jge xchg idivb inc loop (bad) dec and mov inc push push ret lcall fisttp and cmc pop shll jle lods mull xor lret loopne jb imul mov stos push movb fcom cmc pop mov adc and hlt pushf push sub sahf dec push lds cmp xor mov rorl or inc pop test ret fdiv scas push movsb jno add xor push pop jbe mov or pushf ss jl ret mov rorb into and jl adc imul inc mov sbb scas mov cmp test mov push outsl sbb mov xchg cmc and or lods xchg mov adc stc fsubrs pop or bound mov jo push mov xor dec leave fwait out mov sub mov xlat fcmove scas mov jno lret fstl pop aad sbb mov test xchg mov sti outsb fimull dec cmp hlt mov aam push push imul enter push add jge lods mov test scas sbb or div stos mov or rcrl or adc add add add test or xor adc dec push inc dec pop enter mov sub ds fcomps in xchg aam push mov add pop outsl jp add push out pop push cmpsl hlt inc repz mov in push mov shrb pusha pop sbb fldcw dec nop jnp xor jne repz dec xchg fmuls pop sbb xor jle lods dec lods (bad) mov das repz pop imul dec popa jb pop popa cmp push sarl dec adc add mov add outsb jne adc lea in fidivrl outsb adc sub fwait jp xor cmp pop cmpsb and mov xchg imul call jp mov insl inc jge dec je lods arpl push jnp mov addr16 aas (bad) or sahf push or les in add addl jo decl dec mov jg or int3 lods stos jle jecxz test lcall xchg or lret pop add ja push ret dec mov and pop or sbbb sti repz and adc (bad) faddl dec int3 mov mov in call push enter hlt inc add popl pop outsl pop lret (bad) js mov nop jnp mov pop mov ja sub js inc or sbb (bad) lahf sahf mov loopne xlat test xor mov pop dec sarb lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add pop jmp mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add iret and add mov inc or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sahf or (bad) (bad) popf pop mov repnz mov jle (bad) clc jbe mov add xchg imul clc add (bad) into xor pop pop (bad) mov pop fiadd cld pusha cld add push je xlat and cwtl xor fiaddl jae xor and xchg into lock fildl xchg or and inc cmpsb lds jle xor (bad) (bad) and sbb xchg rcrl xchg dec gs (bad) into jmpw push sbb data16 sarb add mov sahf xor out mov sbb cmpl mov test sti sahf fstpl das and add stc push cli test push bound in movsl insb pop out pop insb push xor cmp std cmpsl stos push into mov iret movsl push mov jno leave fidivr stc or pop adc ss push lods in or xor cmp loope jo rcr test std fnstenv lahf add scas lea cmpl data16 mov pop mov into bound add mov push loopne bound (bad) (bad) icebp bound lahf inc adc in divl xchg mov mov push (bad) mov jnp in fcoms xor mov lahf mov mov adc (bad) fildll inc inc adc insb aas or cmp cmp dec data16 (bad) inc dec mov cld cmc push xor nop sbb xabort int3 hlt mov pop ret mov push clc inc mov ja sbb push int or pop mov dec cli (bad) lret aas popa mov mov es mov aad out inc jmp sbb test and das xchg cmp ss call jecxz or out adc or mov push movsl in cmp mov sub pop sahf pusha fwait cwtl push push xchg (bad) bound jl test adc mov out jp imul push sbb ljmp (bad) inc jg fs hlt in cmp mov scas lahf mov mov hlt mov sub rol push jge,pn or sahf mov sbb ret inc fs call outsb jecxz adc pop into sbbb cmp bound (bad) outsl mov loopne pop sbbl mov adc jo repnz jp xchg out xor loope mov pop test ja leave mov fsubp cmp cmp add or inc dec fistpll in ss ret and push add mov repnz inc out out lock int push (bad) adc loop test add frstor lcall icebp cmp loopne in jae sbb sbb sti sub fistpl pop pop sub repz inc mov push aam push mov std xchg enter mov and cmp jl add xor jp ja addl daa lods or xchg mov (bad) (bad) fsubrl aas xor add cmpsb or cmp lods dec cmp sub sub movsb setae int fsubl mov mov in adc sbb les and (bad) push (bad) rep (bad) movb test add push mov lret or sbb into adc cltd push xchg add adc jp scas cmp sti inc mov jnp aas (bad) adc cmp stc mov mov cmp adc inc mov (bad) fstpt cmp or pop sbb bound not xor aad insl sub sahf xchg mov or nop mov (bad) dec jecxz mov inc ficom cmp xchg test mov mov cmpsb stos negl add test aas fwait and sub pop stos popl jnp andl dec pop jns and notb in xor push iret jne cmp sahf insb cmp sbb loop or jmp xor testl imul pop aaa sbb sub sbb stos mov rcl inc inc sub fildll repnz insl scas xchg mov inc mov mov add test adc add inc leave and sub movsl pop mov sti call es xrelease inc aam inc mov outsb adc fimull add inc test sub pop cltd jne push push lods shlb fidivl pop mov and cwtl ss adc fmul sbb inc xchg push jg jno js punpckldq mov fnsave in dec mov pushf shrl std (bad) xor int push jecxz rcrb dec fldz dec or fisttpl dec lea xchg flds dec lods inc mov mov out mov or mov rcrb nop mov loopne imul cmp sbbl (bad) imul mov pop add stos adcl imul mov mov xchg mov loop (bad) sti dec sbb leave mov mov sbb dec in pop push je sub jne mov (bad) stos inc dec push mov mov daa jbe xor dec test (bad) fwait nop mov dec add into mov sub dec push out push fdivr jmp pop cmp xor (bad) adc ljmp ljmpw lret pop inc jae xchg mov mov mov je sub int sub xchg (bad) xor les leave (bad) and push je push xor sarb add sbb pop hlt mov pop pop mov cltd dec jns outsl cmpsl mov cs push arpl mov (bad) cmc mov imul (bad) iret out int3 push push add arpl pop icebp and sub push add pop lret pop lods addr16 push movsb xchg or mov mov nop pop (bad) fisttp jg cmpsl push sarb int das pop jns pusha lret rclb or mov or es mov jo add (bad) stc arpl fwait or mov jmp lods aaa push mov jno je arpl in in sub pop ljmp inc subl sbb mov dec pavgb mov pop and xchg inc add xor arpl dec dec inc jb repnz iret movsl cmc pop mov mov mov sub ret stos and adc aas push shrb loop push rcll pusha lock jg insb insl (bad) das or sub mov xchg (bad) xor inc lret ficompl arpl imul mov push or jbe push sub pop jmp daa add addr16 jge,pn stos loopne mov inc mov test push movb scas dec pushf xchg outsb es (bad) push leave cmpsl (bad) icebp dec sar xor outsl ficompl gs sbb insl sub lahf or and fldt pop xor jns fsubrs jbe lods call mov cmc mov out shrl push inc jno fcmovne cwtl xlat inc and (bad) std jbe pop push cld mov (bad) into test pop data16 xor mov and test push out js jns and lahf scas fsubrl sbb xor movsb jmp cmp fstpt and jns addr16 push dec mov addr16 in push lret in xchg lods adc dec out cmp mov xor dec jl mov cmpsl lea lcall test lds mov push rep push pop add orl mov ret mov dec in aad lahf imul lret repnz popf repz sub in imul mov xchg push xlat push aas cmp das ret call push lea lods mov mov (bad) xchg pop push xlat mov test inc inc mov nop (bad) leave dec jns lock in iret rorl pop (bad) repnz jmp jb xchg jmp mulb popf stos rorb push popf vpmuludq gs cmovae inc push shrl (bad) jae stos test (bad) push xchg sti mov and push pop mov jae lret (bad) cmp mov loope fs adc std xchg adc rorl hlt das (bad) int3 push pop outsl aad mov sbb lea pusha pop fsubr dec and roll push lahf pop xchg movsb outsl push aas incl sbb fwait lahf sub in cs call loope sahf xor notb repnz stc xchg or ret cmp daa fs mov mov leave test outsl cltd fmull in shlb and loop cld xchg in pushf or lock mov mov cli xor jecxz dec cld adc pop (bad) test lret push idiv dec pop jbe arpl and push lahf mov rol pop and (bad) xchg mov imul mov ret mov lea aaa loope dec (bad) leave mov mov jno inc jbe push xchg fistl scas cmp popf dec call sarb xchg xor (bad) cli adc fild fcmovnb ds dec (bad) clc xor mov mov (bad) mov fsubrl push sbb sbb cmpsl addr16 leave enter subl fcmovb sbb aam fildl ds sbb insl adc mov lock lods mov stos outsb jne adc pop or mov inc add push jmp sbb sub xchg rclb out outsl xor and add scas lods (bad) mov jae iret mov mov jge adc push iret (bad) xchg clc cli pop (bad) push jbe adc out movsl jge vpsubd imul inc fadds daa cs jmp add imul pushf sbb pop lds mov call jg lret test test xchg push rorb (bad) mov sub or bound fwait xor cld insb mov rclb push push push jnp cli mov or cmp push imul adc pop and ljmp lea shlb pop stos and jne mov int test mov aad push xor fist dec bound add xorl loopne sbb sub insl mov loop jnp addl add xor movsl mov scas das pop in std pop mov stos icebp mov dec add jecxz test movsl movsl aas fldl ljmp pop icebp cld mov in int mov in (bad) or pop cmpsb loop xor jne push lods add cli arpl mov xchg mov jno stos popf lcall dec insl jle out fwait add pop mov aam and sbb popa and mov std or cmp sbb cli cwtl sahf pop push inc aaa data16 cmc push and fwait push mov imull push xchg lods (bad) repnz lock sbb sub leave outsl icebp mov push outsb push (bad) or push xchg test fild pusha imul jnp dec aas fsts lea inc enter insb dec adc pop cmpsb aaa into dec jnp and daa (bad) and cli nop push sub notb xor pushf add insb inc or push sub mov sbb cmp call mov push data16 push ret ret sti (bad) pop cmp mov insl fsubrl mov jle stc mov xor jns lods mov sbb dec lret fbstp jle sub into inc jns inc xor mov xchg sub jno popa in mov daa cmp int3 out push bound mov fcmovbe jmp adc rorl inc mov xchg or out sub out icebp leave mov int3 clc mov xorl dec xchg in stos or push jmp (bad) adc xchg fidivl sbb test leave mov imul push dec cmovns and adc push icebp stos add dec (bad) jmp pushf movsb mov insl sub sbb les outsb dec inc jmp or push std cmpsl mov adc fcoms push sub and sub fdivs xchg lcall xor lds sbb sbb cmp lahf ds mov sub push shll push adc adc jae fsubl add outsl popf cwtl xor cwtl (bad) test xlat inc sub mov stc mov pusha cmp addr16 add aad mov jg repnz insl nop sub and mov mov sbb mov stos cld sbb adc es mov ss imul fmull xor pop dec scas iret pop push sub pop adc mov aaa fdivrl and mov mov add in sbb pop aad fcoml insb inc pop xchg (bad) out xchg lods je bound jnp mov or pop popf xchg jecxz dec jno xlat xchg adc bound (bad) out int3 dec ja lea push out xlat mov jl xor inc daa loope xchg int mov inc sbb xchg xor aaa add sub lds ret jle popa push xchg mov (bad) mov add aad popa sub dec out aaa inc icebp cmc sub jo push (bad) lea jne mov std fsts sbb jmp xor popa xor jge lods pop daa fwait hlt call mov fnstenv add pop and xorl insl mov dec loope outsb int (bad) jbe loopne push inc ret and push cmp and ds jne push mov push lods sbb xchg jge into and nop jo hlt mov sbb nop shrl pop (bad) xor stos popf pop test jle mov inc add in mov xor or fdivs test jl addr16 ret xchg lret hlt les push inc es mov lock dec jmp int in inc (bad) dec iret add push cli nop fmuls cmp jnp mov insl gs mov jp test je mov out movsb ljmp xchg mov fsubr or and (bad) pop cmpsb inc cmp add sub add add push push xchg shll dec inc cmp dec sub sbb daa hlt pusha shl pop sbb (bad) das sbb cmc aam xchg and stos push stos adc sub loopne inc mov ss push outsb aas jne iret movsb lahf rol (bad) jne sub mov or negb xor rcrb aad ret fdivr icebp mov fdivl (bad) in mov sahf push jnp test push icebp pop sbb mov push push fs js fistl ds or std lds fadd loopne sub dec xor mov movsl insb ret pop scas or or jecxz jp mov mov cmp mov lahf lea fcompl mov into ja sti or xchg pop or pushf and pop (bad) sarl sub mov add pop pop aad repnz add rorl adc cltd adcl or lock or call mov dec not stos or js movswl out cmp fldt cmpl or pop xlat pop push cmp loop daa clc mov aad mov in sub aas sub sbb test push lahf (bad) xchg pop inc ret ja sbb inc jmp push std daa push pushf mov and out int (bad) in int cs push mov in and and xor lock or dec jb out push shlb daa sbb inc mov inc fbld cmp insl mov xchg mov mov pusha cmp or imul jae ja sarb xchg or and ficoml ficompl nop xchg (bad) loopne scas lods aaa dec stos adc and xor mov push sub stos lods dec and pop loopne pop cmp dec lret cli movsb mov or shlb or popf lcall (bad) in addb sub cmp fnstsw imul cmp and or jns pop push (bad) jne daa ret aad mov in lahf sbb test xchg jo ss jb cmp push dec in aad fistp leave ret ljmp xchg gs cmp dec sbb test movsl scas mov xchg rclb data16 or test fs movsl xchg icebp add pop or fucomi dec jbe mov dec push xchg sbb xlat (bad) (bad) in xchg out pop stos cmp mov pop pop or sbb leave and push imul add fs fs ficoml int xlat aad lret cmp movsb push out pop insb pop test xlat mov sbb (bad) rcr inc sbb cltd lret dec movsb gs or sti loopne add (bad) pop jne fistpll dec inc jecxz (bad) out jae in cmp mov test nop pop (bad) sti addl ja jge das push mov add das and inc out (bad) cmp xchg fsts aas loope in sub and and pop jmp pop imul and cmc outsb and sbb shrl push jnp pop push outsl push fdivrs inc (bad) cmpsl icebp push push in push add push or cmp jmp push out jns cmp dec subb pop push mov inc ss idivb mov daa rolb xor loopne mov jl push jmp js sub dec iret cmp push loop shrb out xchg test mov dec mov sbb (bad) pop add cmc enter cmc rorl lcallw fsub imul fimull in mov adc sbbl mov mov inc jge lret inc hlt or add push xor imul lret dec xchg repz paddw pop scas roll and add fmuls mov shrb adc popf or aaa lea jnp cmp sti sbb fldenv stos movsb call (bad) cwtl jecxz shl sub addr16 data16 or push fwait imul or xchg pop xor sub push or adc push pop xchg mov jbe and je scas sbb xlat ror mov add int adc jb or push adc cmpsb adc push lret inc hlt cltd mov sti jbe insb decl repnz mov xchg push cmc mov loopne mov xchg shl xor push push shr loope fstps dec je cmp sbb dec loopne push mov add cmp int3 add (bad) in or loopne mov pusha xlat aad jg inc aad cs or cmc adc mov rclb fdivrs fwait std jne orl mov inc xchg icebp into mov out mov aaa mov mov xchg arpl mov mov ljmp and cli ds call inc adc call out out pop push mov imul and or dec dec inc std push add jg sbb ret or mov mov sub push inc cmp lcall es dec je movsl xchg xchg adc or daa xor fldl push dec test push dec dec mov sbb push roll and sub inc xchg out in les jo cli jb or (bad) mov push (bad) xor fldl dec ja (bad) pop nop mov imul rcrb jmp xor mov sbb cmc loope loop fbld cmpsl hlt fimull push push or dec stos jmp cwtl mov clc xchg jnp (bad) cwtl dec sbb push aas outsl inc insl xor sbb (bad) in or xor (bad) mov pop or adc or mov dec fsubrl sbb sub (bad) cli rcrb ja and mov push sbbb cmp aaa cltd mov mov lret xlat dec nop lea (bad) mov lock add mov cmp cmpb or inc rorb pop ds jecxz cmp xorb sbb nop mov jnp sub sub repnz push movsl inc inc mov arpl dec fadd (bad) testb mov xor stc mov sbb test stos push mov mov mov sahf (bad) jb or dec insb shlb enter push push cmpsb adc aas dec (bad) jno divl int3 add mov and push sbb sbb adc push and mov popf xor push pop scas aad cs es and movsl cld or cmc xor jbe inc mov imul aas mov jp popf pop imul gs arpl jne bound xor mov fnstcw int3 loop movsl jae int3 inc fdivrs out push mov adc lock popf push hlt jb ss pop push es stc mov sti pcmpeqb push enter fwait mov cwtl add sbb in fs (bad) mov stos xchg mov pusha faddl bnd xor mov sbbl out mov mov and fcomi lret push jmp mov dec mov push (bad) bnd and ss pop mov insb push ret rclb pop push jo arpl inc mov cmp or lea mov orl adc push stc mov mov loope mov insb jns aad int and jmp mov push pop cmp andl sub xor shrb aad fbstp inc xlat ficomp iret pusha sti jbe lds push test inc push push loopne mov imul sub fwait data16 dec or ja movsl push lea dec xor in loop (bad) cmp lods out pop push or inc les imul aaa adc lahf fdivrp adc cmp mov repnz hlt (bad) enter sub (bad) and cli (bad) adc pop inc std rolb xchg dec sbb (bad) (bad) cmp jecxz or adc mov jbe lcall stos stos jae pop (bad) hlt add pop ja out xor jle (bad) jnp or inc cmp jp inc pop xchg inc fstpt cmpl dec push dec mov pop mov jno out dec and ljmp jbe or cltd lea dec push dec movsl xchg outsl xor (bad) cmp push loop fstps inc lret and rcr (bad) dec cmp mov mov inc push xchg test ss fildll or push mov cmpl dec dec (bad) scas (bad) hlt mov mov stos sub mov sub out mov mov mov mov roll repnz cmp mov sahf popf mov fwait mov lds add jne adc movb popf std cli or pop ds and aas into xor inc pop xchg es mov sbb jmp mov (bad) in sbb inc (bad) mov enter push adc outsb pop mov inc jecxz lock sub sbb sahf mov nop cwtl arpl adc call sbb (bad) fildl (bad) jecxz mov mov popf cmc pop mov mov (bad) dec push xchg and or cmp mov mov xor movsb adc and movsb jbe jg int3 or int movsl push out cmp inc jp push fldcw out mov ljmp daa gs pop mov xlat aaa movsb inc arpl dec push xor jle insl loopne inc roll scas sub mov push xor in scas jmp leave popa aas inc jae dec add jno mov stos inc das outsl mov xlat icebp sub jbe out jo sahf and mov dec insl std mov (bad) pushf inc insb mov in inc mov es not roll rcll sbb hlt jge add xchg mov mov addr16 lea adc cli and imul (bad) int3 and push ds sbb or sbb mov jne sbb sub dec test imul pop js adc mov xlat push mov out pop test mov stos (bad) mov insb in stos rorl mov je add loopne fild push arpl fmuls loope jb lds pop out pop (bad) and in cli mov cli push std mov inc mov stos push fstl jne,pt sub mov xlat xchg adc icebp stos pop sbb dec adcb idivl into mov leave (bad) iret jge push scas add push jg lods pop je cmp addr16 loop xchg jle cli push out fs (bad) cmp stc dec and xor (bad) (bad) push cmp cli out sub dec in (bad) cmp icebp mov popa add mov fs fldl2t ljmp shrl mov movsb pop cs (bad) mov negb mov sub (bad) mov test sbb cmp mov int3 das cld pop lret push sub pop iret fnstsw cmovo popf add das push xchg aam (bad) mov xchg mov cmp jne idiv and les cmp das dec dec mov jns test sbb jnp push push (bad) test adc dec js mov stos inc roll outsb outsl ds lds mov cmpsl dec mov mov inc movsl loop in add mov mov cli nop sbb mov outsl or push cmp jbe mov hlt or repz aas (bad) cld repz aas (bad) cld repz aas (bad) cld repz aas (bad) fild sar jmp insb sbb add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add sub add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add adc dec inc inc push push and pop add mov ds out out pushf mov xor fnstsw xchg out cmp (bad) (bad) je aaa ret jl aas jecxz loope jg or mov add fadds lcall push stc sbb pop jnp enter lcall mov cli (bad) in push pop mov sbb je xor inc ljmp xor scas shrl notb pop scas ds mov cltd fisub inc mov lahf es fisubr jmp cmc test cwtl add aad mov dec ljmp mov shll jecxz jno inc mov mov sbb mov cltd add cmp stc shl in hlt mov mov cmp clc pop lods xor add mov dec loopne test lds mov popf data16 hlt sbb popf inc call push pop js pop mov dec push mov fsubrp call (bad) xchg inc (bad) push jge out sbb xchg addr16 movsb jns mov mov mov push ss sub outsb push mov fucomip cmp pusha jle and aas push push jmp jns sub in and outsl loop das and push lods push or out das mov cmp rcll movsb pop mov lds jle outsl xchg and push cmpsb jno dec or test jno (bad) (bad) mov mov out ds nop cmc inc (bad) jl addl notl mov shlb xchg shrl mov out xor icebp sbb mov and fisubl sub adc imul or cmp dec enter pusha jbe insl pop and pop sub data16 ljmp mov lcall lock lcall pop es es aaa fisubr cmpsl iret addr16 mov push pop jno mov dec inc adc cmp mov mov pop popf loopne jge sbb push in cltd mov movsb and lods cwtl cmpb into repnz dec sbb inc into rorb sbb inc add push pop sub cmpsl cltd mov mov xchg and adc punpcklbw (bad) shll adc lcall fmull xor mov sbb cltd dec sbbl fmull aas inc push push pop popa loop sbb sbb or sub lahf and rcll sbb ret in ljmp jp das fwait inc dec cmp mov pop movsl mov std push jnp sbb sub jno stos jl pop les lds sti or xor arpl xor push addr16 lds cmp test xlat cli loope adc cmpsb aas cmp in cmp imul sub xchg xor addr16 xchg aaa into xor lret test jp mov out mov lcall dec adc jge aas adc add stc sbb aam jg,pn insl add mov fmulp mov dec dec jno push xchg mov xchg sub sub fwait sbb (bad) mov call aam and add cld adc jbe or lea mov mov (bad) xchg adc cmp in jno sarl and cs mov in cwtl push add (bad) or insb shl jmp sbb xlat outsl hlt fcompl cltd (bad) inc ret mov idivl mov mov fwait daa adc call dec (bad) rcrl and push lds jno sarl mov loop mov ljmp mulb pushf pop cld inc mov mov mov mov (bad) jmp add and mov enter mov jge bound mov mov mov fstpt mov sarb lret xchg mov jno jae inc sbb lret sbb jp daa insl dec push test pop je jle sub insb add inc xor int add mov sbb dec xchg xchg adc fdivrl test mov rcrb cmp outsl cwtl ds scas push pop mov daa aaa shrb adc (bad) (bad) jno call push (bad) jmp iret pop shrl add jno jl xor sti mov (bad) dec jae pop daa int3 xchg push shrl lahf add enter fwait jge icebp lcall pop shr outsb mov fcoml jl data16 cld nop sub mov push jmp add sbb xor fnstcw push mov movsb in cmp testb mov jno ret pop gs sbb icebp loop gs mov xor stos inc addr16 sub (bad) stos iret sti push sbb mov push leave jge lods adc testb jmp adc add xchg jns popa aam adc aaa aaa ret scas mov jge movsl push jnp cmp pop lret mov (bad) mov adc cmpsl (bad) hlt mov gs xchg jge xchg jecxz sarb push stos inc aas xchg push loopne sbbl jg test add imul test test scas jge div movsl jl test push or cld mov sti ret movb outsl push sub outsl jg adc in push cli or xchg stc cld es pop push sbb inc cltd es ja xor in xchg push add mov cmp jne call jl and aad sbb inc subl and decl xor (bad) (bad) sbb aad xor pop leave or jno adc pop pop add hlt add (bad) data16 mov pusha fistpl negb loopne xor xlat scas add and jne movsl loope les ret mov jge mov and psadbw int3 stc xchg ljmp cld add (bad) sbb xor aad rcll mov adc out iret sub jb dec jp paddw mov push dec (bad) sbb (bad) rclb les mov mov in repnz sub rcrb push fwait lcall aaa pop mov mov mov int inc add jle ffree pop pop rcrb mov add aam pop in in jg (bad) loop mov ja adc jae push ficom outsl addr16 (bad) test fildll popa lcall push pop xchg js lret sar out inc iret outsl out sbb push stos mov inc test inc imul adc xchg push rcrl mov xor pop addr16 add fpatan hlt ja in jl xor js pop pop insl fldt outsb inc inc sbb cmp adc mov mov fs imul popw sti mov jmp out mov je insl outsb (bad) repz in adc leave adc inc cmp mov repz or in (bad) or loopne or push jno pop stc (bad) xchg (bad) jae sbb push lods dec jnp in or (bad) pop lcall nop (bad) push dec mov imulb mov mov (bad) dec lahf or loopne push and mov div sub pop ja mov int3 call jmp roll inc push stos and sbb push add push jle xchg in push dec xchg cmpsl add sahf inc sub sbb xor stc and jo adc mov je xlat clc test pop xchg shlb fs pcmpeqw jg out ja or push gs adc icebp jle sbb call (bad) cmpsl push aad popa movsb fiaddl mov jno pop dec xor imul test std add xor ficoml (bad) test sahf cmp fbld repz fwait mov xchg xor mov in mov or cmpsl mov shl js dec dec or addb cld dec popf dec mov lods cmpsb je insl cmpsb lds cltd push jne fmull cmp das push lea popf imull sub inc into xor mov insb xchg sbb (bad) ficom loopne,pt inc loop cwtl jmp repz mov repnz les inc (bad) pop pop fimul push fnstcw lret lods and mov dec in enter mov imul sbb lcall xor shl rcrb loopne mov jo js push ss sub mov dec scas ja push gs pop and cwtl sub xchg pop fnop sub (bad) jecxz,pn ficoml out add cmp cmpsl mov and repz fxch outsl adc adc cld movsl cli ret push mov jge jle mov pop lds rep mov pusha adc out bt sbb stos aas gs stos xchg or dec sbb jo jne pop push cs xor adc inc (bad) repnz mov push mov xchg int3 mov xchg sbb gs outsl jnp hlt out mov in popf pop (bad) mov pop out mov adc cmp ja sub les bound mov js lret mov ret cmp cld aas rclb mov adc (bad) lods dec rorl push in aaa js cmpsb adc jo xchg jle int3 jb mov inc movsl and cmp pop lea sub mov cmpsl cmp lcall dec xchg sbb call jo inc fstpt lret leave push cli imul mov pop leave pop xor lods inc ss dec arpl jecxz mov cli fld lods mov hlt insl sbb mov (bad) pcmpgtd scas call test cs test mov mov push jmp enter push into iret scas fidivl aas sti jnp push std add arpl cmc mov mov jmp lahf xchg mov addr16 mov pop lods mov xchg repnz pop sbb pop repz add outsb cwtl in divps shrl test lods enter incb or pop inc test jae mov in insl cs cmp mov sbb jbe mov pop mov clc cs pop add lods pop in in inc xchg in arpl nop std push bound mov nop sti rclb jns (bad) push add lods adc mov sbb popa adc das cmp xchg aam xor jnp lods push pop xchg cmp cltd loope fisubrl movsb iret rcrl xchg repnz repz divb dec test push xor ficompl sti jno (bad) jbe test lcall or das jnp daa mov nop aaa mov sti cltd call lods mov sahf (bad) inc jg in aas (bad) enter xchg idiv out sbb xor mov loop cmp lods setl (bad) jo add fucomi sub adcl roll int or sbb jo lds mov fwait pop mov push pop repz iret clc mov xchg mov jae jae or ljmp mov punpcklbw out repz xor pusha stos mov xchg pop (bad) xor sbb loop sub and testb je jns lea repz aaa mov or (bad) lods cmp aad push and ficompl sub (bad) adc adc push sub stc cs mov adc dec aaa jnp sub inc scas imul ljmp ja call push ret pop xchg negl lods jae jb mov push jae mov dec mov push (bad) insb jmp les imul add rdmsr sub and cmp fisttp fimul insb sub lods pop jge mov cld fstpt out lds movb sbb mov pop mov sbb into aas mov scas mov daa xchg pop fcoml enter scas cmp bound cwtl inc bound sub iret stos mov test sbb into sub dec or cmpsb mov loop sahf sti scas push jbe test push rclb fldenv int3 cmpsb xor jp pop push push pop jno adc sbb fsubs sub idiv ja (bad) sahf test cmp je (bad) cli loope leave mulb cmpsb js notb jbe sub call dec add aam mov and cmp insb jle pushf std dec psubsb jmp call sbb xchg add inc in dec fnstcw mov mov (bad) adc repz cmpsl dec mov rcll or (bad) das lret scas sti lods push pushf jp adc dec ds dec loopne arpl fidivrl (bad) ljmp mov inc push push xchg mov push icebp xchg push call lods lock (bad) repz sahf (bad) test mov xor lods jb cmc mov dec mov ds pusha aas xlat mov or rcll popf and sbb mov test scas stos push pop push icebp xor fnstcw imul jge xchg inc cmp add clc push cmp jecxz inc fnstsw mov inc in mov push pop xchg imul call mov ficom icebp lret add rolb sub jbe test xchg jae push and dec mov mov sub lds mov mov mov mov mov mov mov incl pmaddwd push and sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb xchg in in imul insl fcmovnb mov xlat or mov jbe mov xchg insl sub js jge fistp (bad) or add sub add fcomps mov xor std jb and out orb outsl pop pop add pop lea xchg in in stc fldt call dec iret rcrl and lods adc lahf jns (bad) mov jmp ror xchg cmp daa scas insb cwtl (bad) test test inc push mov adc out sbb jbe xor (bad) push insl out cmp (bad) into movsl out push std dec sti inc sbb and push xor ficomp iret jmp sub or aad imull mov pop mov push outsl xchg clc jecxz out pop (bad) icebp mov dec or xchg add nop sahf mov xchg imul lahf sub pop loope rorl lea mov loop dec rcl aad scas mov cmpsl push or outsb testl lea push push cltd fisttpll fisub pop mov je lcall fcoms bound xor (bad) movsl lret inc cmp stos test adc ret orl mov lea lahf subl (bad) push dec push dec mov mov mov movsb sub sbbl aad mov mov in popa scas scas and imul jl xor sbb adc push stos fldt out fnstcw cmp sarl lahf xor (bad) (bad) adc nop mov sar sti sub or in int cmp add (bad) (bad) cld es cld xor outsb and pop in mov in out pop shlb test into mov push int3 jle repnz popf or lcall mov fistpll js lds ret jge inc sub or jmp pop mov xor xchg adc in push cmp jmp jns incb and dec jae cmc mov or nop inc sbb jmp inc add xchg dec js iret (bad) add inc aad jo jnp cmc pop lds lret mov (bad) int push and mulb push xchg rcll pop jne out jnp jp and xchg add mov adc xchg addr16 inc mov imul mov pop adc test or aas int mov mov sbb pop jno jae mov (bad) jne cltd arpl dec iret movsb std jle mov insl add loope vpmulhw (bad) test ss and fwait xchg dec sub dec mov call jge fs sub (bad) pusha mov mov lods pusha pop mov and mov sbb xchg sub add movsb mov inc les mov jne rorb jl push push aam push fidivr and mov cmp jmp fwait jnp and (bad) xchg jmp (bad) out sbb sub mov ljmp fisubr sub sbb movsl pushf cltd jg mov out mov mov sub enter jne mov fisubrl and insb data16 dec sub lcall lods mov in dec out xorl sbb push inc int mov icebp daa cwtl popa adcl arpl pop and mov xor inc loope mov bound int3 js into mov int pop cmpsl cmp jns aad mov inc push lods jg xchg jg fdivl imul fnsave dec in push in lahf mov xchg int sub push leave hlt test leave addr16 mov popf iret push mov rorb ret rcll insb (bad) std adc fildl ficompl or ficoml in gs mov aam pop fcmovnu xchg in iret mov repz adc fs cmp add test mov xchg mov aas popa xchg lret xor jl mov repnz scas loopne outsb outsb dec push cmc xchg pop sahf aas int enter daa sub add fisub add inc mov js fwait leave jg (bad) fldenv pop xchg test ljmp xor ss mov dec xor test push mov jecxz mov mov test into mov xor pop inc add cmp jb pushf mov cmp in nop addl mov aas pop dec cli pushf mov les sub jl xor jle xchg sub outsb inc mov dec cmpsb cwtl leave lods aam adc sbb mov push sub xchg imul xchg add ds add imul sbb ret jnp adc pop sbb (bad) xchg sti push push das dec (bad) jb adc out stc inc or jmp cmpsb orw pop call cmc xrelease jbe push cmp adc inc inc (bad) xor push aaa push add fmulp loope ret xor jns jecxz sub mov into jp pop outsb fwait daa ret add push xchg hlt hlt push pusha ljmp in mov push (bad) pop insl sbb scas ljmp insb lods mov loope cmp fsubp mov outsl inc push push lret mov sarb movsl daa jmp movsl xrelease xchg out cltd sbb in or ja xor in mov shll dec lock inc (bad) je ret ret (bad) cmp mov push aad jae fxch mov xor dec addr16 push mov test gs fidivl mov jge mov jl jecxz push int fs test adc pop iret shlb jae roll insl notb pop sub test fnstenv hlt (bad) scas dec mov jno or daa fwait push cmp jnp mov or outsb push xchg imul pop ror fwait push mov sub sbb or je mov das out fisubr push das imul xchg into sbb push sbb mov cmp sub addr16 xlat add out push sbb mov test int (bad) mov adc cmp adc out pusha mov clc out push jp jnp out fistp mov scas arpl repnz and inc ret mov jns lcall sub adc rorb fucomi xor cmp xor movsb add sbb cmp cmpl test jecxz fnstenv push es jnp scas xor call add pushf daa (bad) lds push push pop into pop cmp mov sub lock or xor les fisubl sbb cmp pop shrl mov adc int3 sbb (bad) aad jmp sub stos dec sub pop iret (bad) sbb xor cs dec sbb dec leave sbb xchg popa repz xchg cmp pop pop cltd fwait cmpsb std icebp dec and pop gs (bad) mov fidivl mov push dec jno inc xor loop jbe jp inc rcrl jmp std push push shrb out sub (bad) lahf sbb inc and daa jp mov adc movsb adc cmp sub jg dec cltd push xchg (bad) insl jp out mov pop dec sub jge xor (bad) mov add jg ret popf sbb mov cli insl lock repz dec pop sub stc jns das lahf mov mov pop or inc sub push loopne xchg rcrl xor sbb gs pushf jge pop and cld test or fcomi dec add mov movsb int addr16 mov je in mov inc cmp outsl sbb jg jmp push sbb inc fwait icebp cwtl adcl jbe (bad) cmp mov (bad) sub push lret inc aam jmp loopw push jno xor mov cmc add pop lahf clc ret mov add xor outsl fistpll popa sti sbb loopne push dec dec xlat dec adc adc aaa leave xor push imul xchg xor outsb xchg xchg or add add das popa mov fidivr ds sub xchg pop mov pop dec jmp cmp xchg push mov push cld (bad) and ret mov sub cld inc jb mov jo dec sbbb xor aam cwtl aas mov and jmp lret mov mov fsts add cmp test push scas test shrl adcl stos push mov pusha or call mov repz xor sub sub data16 xlat push icebp pop push adc inc push ljmp test mov cltd mov in incb les movsb mov sbb add mov xor int3 lock mov dec add inc bound movsl pop sbb cmp add in push and lds das arpl mov lods pop aam popa pop xor cmpsb (bad) push lock loopne lds iret test movsb push aaa sar (bad) insl out xor dec ret cmpsl lret fxam cmc mov leave mov imull insb push movsl dec mov lock sbb out sbb int fbld mov mov jnp iret out out sahf jbe jmp adc xor pop xor xchg xchg js gs rorb jb jns lret fnop sti stos popf cmpsl jb push lcall in into xor daa pop push sbb cs xor ja icebp repz in insb addr16 mov rol orl fstpt aam lahf gs jg hlt mov xor aas xchg jb mov scas lods ds je repnz (bad) push xchg les dec dec (bad) xlat imul mov mov lcall enter pushl mov xchg lds mov sub or cld dec mov fiadd outsl mov sarl je dec inc cmp mov fist and repz xchg lcall dec pop push push cld adc adc (bad) xchg icebp nop cwtl adc push dec or test arpl aad sub nop sti je div mov sahf mov adc lock idiv sbb push sbb push xlat (bad) in in aas xor mov rolb add in add mov popf ror bnd movsl dec mov dec js je dec popa adc inc mov jbe add (bad) sub dec lds daa push aam or jnp mov lods adc call jb sbb mov mov mov add (bad) lret scas push mulb sbb xor push fcomp push inc mov div (bad) test lret xchg add sbb xchg xchg fsubrl (bad) bound loope mov jecxz push sbb loope inc addl ljmp pop jns subb fmuls and shrl popa scas loop xor gs cltd mov and call sbb shrl or sbb lret push repnz test jns cmp jle jle jae mov add or xchg je test fldl mov and adc out rcrb jl mov das test in lods adc inc xor subl or (bad) mulb rcrb xor sub sbb xchg sub insl xor fcmovu aaa adcb ss bound les sbb jnp xor pop fnsave sub insb cwtl icebp xor cmp rclb lock sub xchg cltd jnp fsubrs mov ret pop jae ss mov repz mov mov jns enter xor cmp sbb int sub cmp lret jae inc dec shrl push mov xchg mov dec jp adc sbb les loopne xchg shr sbb adc fisttp jmp les or dec fdiv mov jge jmp cli sti fsubl lods mov sbb (bad) xor repz cmp jmp xor jmp and ret mov or and mov lods push or js pop fldenv cmp lahf gs fs jbe iret test push test push xchg jnp inc xadd ss pop aas (bad) shlb pop adc cli inc or (bad) dec jmp dec jle jnp jle sub cmp dec cwtl call cmp (bad) mov fildl dec popf add inc daa inc pop sub push sti (bad) jle xchg adcb xor test jl jnp outsb ror scas sub push insl mov and sti lret iret mov test fxam jae ja test ret adc (bad) pop ret lea sti (bad) pop rorb ja (bad) push sarl popf adc inc add fdiv fistpl sbb xchg ds add mov insl and pop and pop test xchg mov mov xor jl sub mov sbb data16 xor cmp loope mov aas inc hlt jb hlt ja,pt daa and push std sub stos data16 sub pushf and (bad) mov dec sub sbb and mov data16 mov add movlps mov sbb mov sub push out adc mov push xchg and sub (bad) fbld in (bad) daa fcompl mov xchg dec adc mov pop dec cmp call sbb add scas or pop jo dec and hlt fwait sub mov jne iret cmp xchg pushf clc outsl or or cmp dec xor std mov mov or lcall jecxz sbb sbb sbb xchg lret into inc sarb (bad) sbb andl lsl into push test dec push and mov arpl adc mov psrad lods cli mov shlb xorb jb movsl int3 fstpt pop xlat cwtl rorl lea push push sub (bad) loopne es (bad) fsubs nop sub add insb js pop and sub mov data16 xor (bad) jb jmp inc and lcall int3 repnz sub lret imul mov rcrl lahf std incb or sbb or cmp inc jne,pt out test cld lods or dec dec inc mov cmp sahf insb fsubs xlat in mov aaa dec pusha stc dec imul pop or push (bad) xchg hlt push mov sbb sbb xor das sub and fildll bound daa outsl std mov clc push aad ds test in or mov and vrsqrtps lds and int3 xor sbb adc and xchg jg and sbb and mov js dec dec addr16 push pushf jae lds mov mov push sub scas pop cltd push mov lcall push xchg mov arpl out mov pop dec jmp cmp inc (bad) dec arpl jmp pop loop bound lret mov int3 cs cs gs call jns fstpl (bad) lds in in pop fldl push and daa loope jmp xor pop xor outsl cmc fdivr pop jo sub les mov adc or psubsb dec pop into in fistpll pop mov jbe ss stc mov imul pop dec xchg mov dec pushl mov jle sar sbb int xchg pop imul fdivl ss pop stos add mov lahf mov test movsl (bad) outsb insl lea ret leave cmpsl sbbb popa scas lcall pop sbb cmpsb push xchg inc or addr16 fdivrs lret add sahf lea jge,pt adc arpl cwtl mov push (bad) pop jns test mov sbb inc sbb inc popf add mulb pop xchg jle ds in js cmc mov sbb testb or fabs jb mov and sbb lahf loope push addr16 cmp fwait xor mov adc sub xchg jbe movsb mov out cmpsl repz push int3 outsb jnp ja in xchg mov pop stos jg sbb sbb push rclb mov pop cmp gs in ljmp bound sub dec out cltd sub adc mov lret adc or sti sub test fsubs inc mov pop jge pusha cmp out insb mov hlt sarb loop lds push add inc lcall sub push mov mov mov dec inc xor popa call push les test mov (bad) sbb cmpsl or inc cmp push bound jbe cmc push je dec loope cmc imul add insl femms pushf fistpl inc fisubrl aas cmp movsl adc jl pop push sbb add ljmp inc lods mov mov jne xchg (bad) adc dec lahf xor fs sub call jmp not cmp insl add and cld repz scas pop jns,pt pusha fimull icebp push dec scas or inc sarb push push sbb popf inc inc xchg rclb pop mov sub insb ret in sti push xor fmuls fnsave loope sbb gs push stc outsb jne jne xchg mov mov lcall pop in mov jb out mov push gs (bad) loop bound dec hlt jnp push mov cmp nop jb mov outsl into jp ds ljmp cmp adc pusha add clc push and into adc aam push or jp or mov xchg pop inc out push loop movsl inc sarl lcall scas (bad) out mov mov jo sub push imul aaa addl dec adc lahf pop jge addr16 pop fadds dec mov mov sahf neg (bad) mov mov mov mov sub jbe push sub and fidivr dec jbe cwtl stos jns mov stc adc xchg lods cltd aaa adc clc or cmp jbe mov jg data16 and (bad) jo jae test or jg movsl out cmpsl mov or je aam inc ljmp mov push sub call add jns insb hlt cmp and mov dec or adcl xchg ret (bad) loope mov cld mov lods fildl cmpsl pop in or fisubrl or (bad) enter mov ret idiv ljmp sbb cmp xchg xchg jp inc les dec pop jg in aad (bad) lret aad jle xor fisttpl daa aas inc sarb sub leave stos or xlat cmp insl sbb in lods mov add lret and lock or dec add testl and int xlat sub in dec subl mov popl mov int3 aaa and insb fsubs outsl pop xor and adc or mov mov jno xchg jae adc sbb and in ljmp adc cmp aad popa or cld das mov lcall lds je jle out jp popf mov xchg sub jecxz sbb test out sub nop (bad) xchg xor arpl push movsl mov testl lods frstor repnz ret mov dec or arpl fdivl data16 or shrb pushf faddp pop add sti mov inc ljmp mov add insl mov sub xchg sar cs outsl out fimull in mov and mov call adc xchg jns push gs fmull sar test ljmp mov xchg pop and mov jnp and lcall mov je int3 arpl addr16 sbb push jl cmp loopne inc pop cmc inc inc dec mov mov mov andl je flds inc or mov sbb xchg lahf cmp sar in mov or jge xchg fidiv sub xor icebp outsl mov adc inc pop lea or out add jne popf hlt int out in push les mov test test test scas xor test mov lahf test cmp outsl push inc xor push in fstpl mov fnstenv lret dec or adc xchg int3 (bad) inc sbb sahf gs jns sub arpl xchg test cld std jp call add push jmp outsl out adc loopne xchg sub daa rorl dec (bad) cmp icebp mov daa aad (bad) insb inc and mov dec jae leave sbb jbe cmpsb aad pushf cmp popf add je bound and dec pop mov stc loope cwtl mov leave xchg popf push into jbe sub std mov dec rcrb mov ret xchg xchg cmp mov or int3 pusha mov adc pop pop ds add xor pop vmwrite es ret adc adc div lcall ja push sub push lock inc ja fsubrs inc pusha in (bad) fist jae pusha nop xlat es sub jb (bad) cmc sub movsl scas sub push cmc mov jns bound arpl push cwtl incb out ret inc mov (bad) sbb es mov jae inc (bad) (bad) and and lret std inc xor cld pop lret mov leave push nop cli dec into scas int jg pop sub imul scas add push add pop sbb rcrb popa scas or aas nop inc jb and ret inc add inc sbb jnp dec jns mov (bad) sub das mov dec ficomp pushf leave shrl outsb xlat inc adc add inc repz fsubrs int push dec cmp pop lcall notl (bad) push mov outsl mov mov pop out cmc mov jbe inc lods js sti andl xchg inc mov lcall int jge das mov mov and jmp cmp jmp outsb in sbbl ja mov cmpsb test fxch xchg lcall addr16 inc and xor out xchg test or repz dec out inc fiaddl mov out inc or (bad) test add (bad) (bad) jb ja sti pop imull pop loopne,pt mov jnp ja jmp adc cs lods mov imul adc ret mov sbb das js andl adc mov cmpsb pop push ror int3 sub mov pop out add mov std test ret mov adc mov cmp fildll sahf mov sbbl jae (bad) movsl cwtl into lds stos jo sub movsl xchg jns out push dec adc fsubs push (bad) sti add and mov test aas cs hlt mov hlt movsl lods int cmpsl cmp xchg mov pop jae test sub gs mov (bad) and xor cltd ljmp add mov stos sarl movsb jno sbb xchg dec inc and mov pushf dec fidivr xchg dec mov das jmp cmp in outsl push out les and xchg inc cwtl push push inc mov loope pop add sbb mov jg jmp mov inc fisubrl dec push adc data16 mov in xor hlt or jg sub inc add mov adc sub cmc sub sbb cli fwait ret and mov xchg mov jmp dec push mov jo aas add (bad) stos das adc push xor cli outsb icebp sbb shrl cmp add jne popa dec movl into popa sub mov shrl pusha mov dec mov ljmp inc mov mul cmpsl adc xchg adc (bad) icebp lea ljmp jno xlat push inc rolb mov pop sbb jbe hlt jbe jl mov enter push scas cmp daa pop outsl xchg pavgb add rolb out ret sbb iret mov gs pop sbb hlt movsl jecxz nop jecxz jl adc add shrb pop rcr push xor jmp arpl in sbb xor sbb cld jnp decb adcl leave mov inc fmull sbb push xchg addr16 std xorl and fdivrl push mov in in lds pop or mov cmp xlat push sahf mov pop insl mov fstpl or dec inc cmpsl repnz insl and sbb sub xchg sbb push insb push inc cmp ds arpl loope imul jge ljmp inc fwait cmc sub test xchg mov lock (bad) js jl aam mov pop aad sbb jecxz out mov dec lock fnstsw and sbb mov jns inc push dec loop push mov sub mov pop mov push lods (bad) or test sub test jnp (bad) stc out jg stc out jg stc out jg stc out pushl add incl add jmp mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc sbb ret add lret jbe imul repnz lret mov insb jae mov xlat gs dec ja out mov pop push jnp mov add aas add orb jae int3 lods imul loop std mov pop pop loopne lods mov mov ja leave jmp push adc sti in cmp pusha test popf lods sbb inc cwtl shrb xchg mov fwait inc (bad) int arpl add cmp inc mov sahf loopne cmpsl imul xchg scas test in aad cmpsl and mov mov cli sub aad addr16 insb xchg fildl lret js pop push mov lcall inc inc pop push jge jnp out sub xor inc pusha fisubl push orb mov inc mov call push jecxz std comiss lcall int xor in (bad) mov iret fucomi lock sbb test mov push mov xor jae fmulp or notb cmp repnz cmc jmp mov or inc push push movsb adc cli xchg decb ret mov int movsl push ljmp adc add xchg xlat dec insl jne icebp sbb add enter shll dec fisttpl pop imul jge mov cmc add out movsb xchg sub iret fistpll mov bound jle (bad) ficompl in in cltd or push cmp and push xor xchg outsl dec jp cmpsb rcll in inc jne mov iret adcl pop jle mov movsl fsubs sti mov (bad) (bad) imul sbb enter jbe xchg int ss andl out fmuls adc sbb inc fisubrl add call leave popa ds jno test push (bad) bswap in sbb repz adc daa ror test cmp out mov test inc sbb orb in push fs sbb pop and pop mov es xchg ret roll aas cmpsb dec xchg aam int cwtl xchg mov in xor hlt in inc mov xlat dec jnp xchg dec lods adc int mov sub scas jne cmc test mov test aaa ret jns push inc aaa idiv roll xor fwait pop push sbb pop mov fstl pop shrb ja outsl fwait xor imul rcr dec and mov lock fisubr jbe orb (bad) pop cmp clc negb add ja mov cmpsb add imul (bad) or shrb sub or test dec repnz pop cmp push cmp pop jle lret sbb roll arpl int3 sub xchg add sub sub pushf (bad) out cmp (bad) jmp push into mov insb rorl pop rcrl push inc cltd pop (bad) inc mov (bad) mov gs mov enter aam adc xor xor xchg xor ficoml ljmp and xchg ds push (bad) fldenv mov sbb sbb and xchg insb ret je add mov daa rol pop ret scas sti fstl iret (bad) cmp out shrl out and int xor mov imul cwtl or imul mov and js test and aaa jne pop pop (bad) push push movntps or or (bad) (bad) int fsubl ljmp push sub jae fstl inc sbb inc (bad) idivl dec daa xchg sub sub cmc cmp mov sub and out pop mov pop in sub fs inc fidivl add and mov xor roll mov gs mov jb xchg movsl test pop push imulb (bad) enter cs push push adc mov dec mov or jo test test push pop jns jle int3 andl lods pop xchg mov jecxz fisubl jmp push lds pop (bad) outsb dec data16 sub stos cli in popa stos clc pop fs inc pop fstps pop cmc xchg cs sub rorl adc mov mov adc mov mov jb les movsl jnp or pushf pop pushf jge imull cs jl,pn xchg dec stos (bad) xor sbb lcall mov xor outsl loop xchg jmp jp mov pop and fistpll ds inc jp mov fildll adc add mov xchg arpl loop mov pop scas repnz push jmp test pop movsl xor mov cwtl sub int3 pop shl jne (bad) xor sub mov gs push sbb jbe and ja arpl repnz fadds cmc insl pop sbb cmpsb xlat (bad) outsb cmc push pop add mov xchg das int3 pop sbb mov xor shrl sub inc repz decl xchg pop jne ficomp loope icebp mov and nop out aas sub inc jno fwait idiv cmp push stos sbb jecxz mov pop int and orl in sti stc mov loope cmpsl mov jle jmp loop in adc in push fstl or pop movsb jg xchg inc fs nop insb fnstsw popf cmp das inc je rorb mov es inc and xor inc sub add or add int3 inc mov aas push mov shl fildl mov push adc out bnd cmp popf push stos inc roll mov push xchg ja or sarl pop loope ret and pushf mov adc popa icebp cmp sub mov cltd and pushf inc out cmp jno mov mov cmp push outsb mov (bad) sub fcompl jne adc jbe test lahf or iret jcxz mov (bad) cmp jle add out fidiv sbb jb in int mov (bad) xchg pop jbe incb imull mov js,pt nop cli fld1 shrb stos xor inc push (bad) out pop rcrl loopne loope lret les mov (bad) xorl lahf dec pushf ja pop pop pop call clc inc in push push xchg nop xor xchg fisubr sub (bad) imul inc or (bad) imul sub xchg in xchg mul xor shr cltd lret std hlt lods sub mov les ja cmp push out out inc push pop movsl in movd xchg xchg or lret adc or mov inc mov push rcpps incb add and movsl sbb pop dec das inc pop sub dec ljmp push fisttpll (bad) lret pop cltd jae scas jnp mov or and (bad) ljmp cmp xchg ret inc cmpsl movsl out add outsl add mov mov repz adc sub and add cltd leave popa insb jmp cmp popf mov sub inc arpl cmp test mov inc movsl mov fmul jg and aas mov pop mov (bad) and test imul (bad) popf xor and out dec mov fmull bound imul xchg jle stos sub clc popa inc stos (bad) jne out adc in mov mov in push sub scas scas out and xor popf shrb mov (bad) mov mov xchg sub dec dec out sti cld addr16 jb mov inc xor data16 lods push bound dec pmullw mov push push sahf sbb cmp test mov xchg jo mov push pop jmp adc (bad) xor rcr xchg mov xchg cmpsl mov mov jecxz push pop mov idiv and pop add into fistpll addr16 push sub fild push ret ljmp sub lds sub xchg sbb sahf pop mov das mov sar ljmp pushf xor hlt lods ds mov jne push sbb ss ja dec jge xor push and xor pop adcl dec sbb test jbe pop xchg (bad) xor sub addr16 stc ret imul je nop fsts cwtl xchg xchg sub je adc add dec add pop cs mov les decl stos mov loopne lock mov (bad) sbb sbb (bad) shrl jge (bad) out popa pop mov or cmpsl outsl ss (bad) pop jo pop call and popa inc inc pop mov subb inc mov movsl aas ret push jnp imulb sub in cmp not adc adc dec rolb inc sbb bound (bad) std addr16 insb mov and cmp adc sub mov or (bad) xor push insb clc mov dec jbe lret mov push (bad) push xor add dec mov jl add andl push inc push loop sbb or test push test mov in lret jae push add rorb dec push cwtl fwait mov lock xchg pop (bad) pop sbb aad (bad) push popa xor pop pusha and cmp pop mov pop push cmp dec scas in out pop xchg daa (bad) cmp lahf pop test mov outsl jg add ret (bad) xor loope push rclb inc adc lea and adc call pop dec jecxz stos jne jl xor pusha mov daa hlt or dec sti lds or cmp call mov sub dec mov sub adc hlt incb sbb daa ret leave push mov or cmp mov daa (bad) and mov andl cltd movq outsb xor outsl int adc xchg mov in cwtl sub inc xchg jbe push pusha fdivrl fs jle adc cmp xor add pop fs add xor inc sbb jle shl dec mov rclb gs mov or jg sub (bad) fs sbb (bad) ja adc lods add pop sbb inc fwait and jae stc push cmp push xlat in out jmp shl movsl xchg and mov and ljmp fstpt and jg mov cmp push sar dec jns std xchg in mov lods dec add push cmp mulb add fldl out shrb fsubl push repz mov sahf push cmp aaa insl outsb and call sub ret cmp mov sbb jo mov fistpll push arpl jbe jmp push sbb gs mov sbb stos cltd mov cmp stc lock fstps fucomp xchg push jg andb sbb xor and bound negl pop jge pop pop negl and lods mov xor jnp iret aas nop push and ret pop mov mov push imul dec fstps adc mov sub or sub scas loop std push pop int dec inc and test push fstl das mov and ret pushf cwtl adc or hlt test dec jge xor jg bound pop movsl out insb mov bound inc lahf rcr jnp dec mov test xchg enter fwait mov aaa and iret mov cli out in sbb jecxz jecxz push neg pop or es movsb cmpsb push push sbb dec and mov xor pop mov test sub jp and xchg push xchg pop xor sbb fwait jmp jl push cmpl mov test in xlat dec dec bound (bad) push xorl insl xor or addr16 and push movl pop mov add mov pop push in xchg leave loope xchg cmc rcrb or lods mov icebp xor sbb xchg and push scas sub cmp in iret or roll mov ja rclb leave in daa jle imul mov (bad) pop ds or aas xor and add jnp pop dec jle jg pop push dec std add (bad) add push fwait pop jbe ret sti aaa lock xor inc add movsb nop cmp lea push mov jo aaa lret push dec add into aad shlb popf jl frstor mov (bad) mov mov lods jb add mov and fstps adc in repz adc addr16 retw cltd (bad) (bad) fld (bad) jno jbe xchg (bad) mov push test and cmpsl mov xchg gs jbe mov outsl pop and pop adcl jnp sbb mov jns push jne insl out sub jecxz loop xor pop ret stos in adc out jg (bad) pusha mov es mov sahf pop js adc (bad) cli outsb push cmp push mov mov ds mov inc (bad) test lahf dec or push mov xchg mov daa pusha xor xchg aas jmp xor xlat dec loopne pusha outsl neg xchg repz cmpsb push ja (bad) adc xlat sub pop shll pop fimul leave insb les out jo and xchg xor cmpsl in mov add cmp mov jmp or xchg ret lahf outsl aam jl sub inc cmp or lea or imul jecxz cwtl sahf or mov lea add int adc mov mov cmpsl ss js out aaa sbb lock mov (bad) (bad) aad mov (bad) addr16 sbb nop jno mov mov arpl and cltd dec bound aaa test out arpl (bad) movsl sbb jb out push or pop inc bound pop pop pop (bad) xor icebp pop push cwtl cli push imul in push popf addr16 dec popf pop shll inc les push xchg fucomip sub push jo insl inc mov inc sahf sbbb xchg insl cld xchg notb fbld popa xchg xchg aaa insl ljmp ret cmp dec add es xchg or imul push jae (bad) (bad) ljmp inc loope or mov jg sub faddp std ficomp inc lea data16 test push js add xlat lods push (bad) sub jne iret rcrb je dec xor pop addr16 cmpsl aam inc pop sti dec iret lcall shrl les stos adc push mov xchg inc dec pop cld ret or push add ret inc lods out roll pop adc fnstenv mov stos push nop stmxcsr mov sub jp testb fwait mov mov enter popw fmulp xor aas int3 jp dec mov pop loope fimul add into pop sahf (bad) cmp popl in imul insb jp (bad) mov cmp aaa pop xchg mov cmp mov fisubl cmp cmp pop int test mov add dec in in int3 fwait dec lret dec loopne lds mov (bad) loop sub (bad) cmpl or dec pop jbe daa (bad) outsl cmc cmp mov add in pop push rclb pop push outsb adc xlat mov pop cmc or pop test ja inc mov repz adc mov jmp insb and pop add sub jae sbb insl (bad) outsl mov dec fbstp mov push js jno sub xor lret mov dec jle je mov aas std int popa shl add sbbb lret stos movsb sar jbe jg (bad) ret aas jmp jg xchg int3 lock jge xchg movsl addl and mov mov pop inc and jo xchg repz push dec sub std push ss les test cmp push inc out xor lcall in clc cmp jne cmpsl mov sbb fcompp movsl push stc inc mov movsb ret or xor rclb ret cmc imull pop xor push rorl pop arpl mov scas shl dec and insb movsl mov insl pushl mov adc mov xchg call int3 lds and repz dec loope inc sbb pusha ds pop icebp lock icebp push fwait clc imul ss inc das mov mov dec jp dec mov lret fmul jg jb mov fisttp inc push xchg mull insb test enter xor mov popf sahf sbb sbb out int3 and outsl pushf popa out lds daa xchg scas aam inc cmp inc lds pop jbe adc addr16 cmp imul sti and lahf cmp pop addr16 (bad) dec test or jb mov cmp jne mov mov fmuls scas aas outsb cmp cmp std mov mov cli cwtl sbb pop dec stos cmpsl aas adc sbb add data16 pusha jnp pop adc adc (bad) out sti in or adc ss mov cmpsl dec push mov xor sub cs gs fcoml sub stos fisubr pop inc pop sub in push pop mov dec jnp stos push jae pop mov ja popl push loop aam inc pop jecxz lods push and fninit jne rclb mov stc scas es test (bad) sbb mov pop xchg xchg jge sub push lds loopne pop inc add mov push in ret lahf jmp cmp mov adc out daa xchg sub orb inc add dec iret insb fs xchg out repz pop jo mov cmpb mov out imul cwtl fildl mov out adc cltd lret mov jg into lods repnz decb or aad xchg adc lock xor cmp cmpsb add push dec mov xor push fsts push scas pop fldenv sbb lret mov or mov or add stos cmp out cmpsl pop jge enter and push ja push out dec xchg adcb fcomi cmp jecxz (bad) loope add out fimul mov scas inc cmpsl data16 mov enter dec jae mov cwtl xor add xchg jo lock enter std jl cld loopne xor and xchg cmp jp loop scas sbb ja shr push fisub mov insb nop or or push dec jl nop ljmp in inc into aad sti xchg aam cmp sbb sub into xchg mov cmpsl mov cld addr16 jg mov mov sbb mov mov mov dec movsb repz cli mov mov mov inc push add pop test cmp loopne sbb mov jp mov icebp pop ja jle js repz in or cld cmp pop (bad) aaa int fcmove jmp cmpsl scas sub outsl xor out out mov jns pop hlt out add rcrb adc jl jno jmp cmp push jb pop (bad) sbb out xchg push mov pop movsl movsb xchg and popa add sbb mov fsubl clc jbe imul inc push into arpl sub in jns dec (bad) imul sbb cwtl jnp jnp cwtl ds insb cs shl mov stos in jg lds cmp in les dec out (bad) cmp andb fstl outsb (bad) into popf sbb jno das push lret mov arpl lret mov movsb adc jg,pt jbe cmpsb sarb (bad) xchg out pop or test fsubs rorl test mov inc loope sub mov cld leave imul leave mov out movsl sub push xchg adc add jp pop dec sbb push mov and lret xchg jno jl lsl jmp mov cmp hlt mov movsl xchg mov fstps mov jp mov ret inc and dec stos sub mov xchg inc xlat clc imul sahf mov ret ds std dec (bad) pushf bound mov or mov mov stos stos mov lret (bad) lret add daa adc sbb scas js sbb dec movsl pop mov out mov jl in mov and xchg insb loope nop xor inc es sub lcall int push dec cmp out stc daa jle stos xor mov test insl lods jl imul add pushf ss stos cmp jle add inc add bound subb (bad) jne je push cmp and jns and add and lret sbb pop sti sbb dec cld push xchg dec mov icebp pop push pop (bad) cmp xor fdivs stc int3 fmulp fldt loopne pop mov pop or lods cli mov arpl and jmp out std (bad) scas xchg (bad) adc mov icebp (bad) mov sbb loope add pop insb ljmp sbb push ljmp mov sti in mov fistpll in pop sti scas jnp scas dec imul jmp jnp fsubp push and mov or jle out popa xchg cmp pop imul pushf fistpl pusha adc dec dec ficompl mov mov and cmp sbb push pop inc lret aas cld and rolb movsb into sbb push pop push inc push inc push adc mov addr16 and xchg mov call divb repnz push pop es rcr ss sbb movsb jg popa repnz mov insl or cmpl insl xchg mov adcl sbb jle scas xchg add sti aam andl test das orb scas add xchg (bad) and mov xor out inc dec (bad) jbe add mov or and lret adc cmp jg pop push jne xchg (bad) xchg sbbl add or or jl jmp lods dec inc pop xchg addr16 xchg adc lcall imul insl mov push aad std (bad) test add test jecxz scas mov fimull dec xchg inc mov fwait insb jns pusha aas pushf inc jns mov (bad) sti test fildl shrb mov bound jecxz push push adc add or pop fistpl outsb mov call xor lock test sbb nop xor pop push mov jns or pop lock movsb push mov bnd dec xchg mov mov jns cli pop popa pop xchg mov mov (bad) xor sub lret adcl add (bad) inc jmp jae cld push mov xchg bound stos outsl jb lock pop inc cmp lret fnstenv xchg xchg and add dec add pop sub mov mov sbb dec dec pop sahf cmp mov jge xor mov inc outsl mov ss xlat pop das mov arpl std mov xchg pusha jmp inc movsl sbb lds fisttpll pop inc xchg xor popf pop movsb idivl xchg or xchg stos and push loop cmp fmull mov sub cli jp pop pop iret divb lret movsl mov test dec (bad) mov (bad) jl dec in test imul ja sbb cmp xchg es pop jnp add (bad) add loop lds inc mov insl into (bad) sub (bad) iret fs add js sahf cs jge outsl mov insb jb pop xlat adc shrl fs scas fmuls (bad) bound jl (bad) pop iret ret push out push cmpsl outsl inc (bad) lods inc leave mov push inc jbe mov ja loope inc dec push mov mov inc sbb push popa push xchg pop mov mov jp mov lds inc jle sbb loopne cmpsl ljmp or mov sub gs dec into jg sub mov xchg lods dec cli (bad) shlb rep sbb xchg pop inc add push leave mov movsb xor nop or inc insl mov and outsb test mov sti push mov (bad) mov (bad) loopne repz stos mov xchg fwait jnp int3 cmp cmp daa into mov aas clc sub movsl bound enter mov push nop push bound dec fnstcw xchg cmp shrl (bad) jo aaa sub sbb xchg int xor insl jle outsb nop orl sub call test add mov dec adc scas or imul mov rcrb xor (bad) cmp push cld sub dec push push insl das xchg psrlw xchg ret jo xchg push sbb div hlt xchg mov insl inc and mov sbb dec dec sub icebp cmp xchg push cs sbb dec mov cli mov dec inc fcoms aas sahf lret push dec push fs xchg sbb insb sbb xor add dec lret in sti pushf jo (bad) std or aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld jg add bswap mov jmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add inc or add add add add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add and inc inc push push inc fisttpll ret xor mov xchg insl mov mov sbb stos dec mov fnstenv popf mov ds (bad) xor inc jp add add test fcmove adc test and dec push inc pop mov push mov or pop data16 xlat fcoml aam mov mov adc test and jns enter jmp cmp dec lods xor pusha adc mov shrl sub imul pushf js and (bad) jo data16 mov add lock mov cmpb sub lock lds dec xor mov adc mov xchg mov dec sbb push add into pop (bad) lea (bad) enter fsubrl lret sbb sbb fs out pop int insl les mov xorb mov lahf jne sbb pop mov cld adc (bad) clc jecxz jge mov sub arpl insb cmp push test les es sub sub cmp js mov jae out roll insl ds cli sub cmp and out jmp inc lea in push ljmp lock jb cs test es xchg push mov and adc call add pop xchg add push xchg push in mov fcmovbe inc lret mov aam enter (bad) setbe mov mov pop jno pushf popf inc push mov aad pop cmp pop cs xchg dec into jnp xchg jnp ljmp pop and icebp or pop fimull es push fwait test in mov fdivrp loopne xor mov cmp mov sub dec repz test mov xchg and pop jmp mov movsl (bad) cmpsb data16 (bad) jmp mull and jp sub fcom or sbb mov ret xchg das sbb sbb push xchg xchg sub sub pop aas lret aad popa pop or aaa repz aaa xor sub xor sub hlt jnp fwait sbb lods cltd imul in fwait dec fistpll dec push mov ret insb or fistl scas icebp lret test mov or xchg push mov pop scas imul rcr addr16 test cmp insl sbb push pop sbb and lret jno add xchg in or and std inc add mov movsb push inc and xchg cmc jl and jbe cmp jae ficoml mov pop (bad) sub dec stos inc ss jg ja (bad) jno mov mov lods jp lahf push jbe xor xchg lahf jle imul xor lahf subl mov pop jbe iret mov xchg cmpsb (bad) call jecxz fs ror sub pop scas repnz adc jns incb sbb sarl std std fchs push les pop in aad test push mov (bad) jg pop das ljmp notl icebp mov popa repz negl push mov jo call shr sarb fcoms repz sub shlb arpl ficom (bad) in ljmp loope (bad) mov inc sbb mov inc scas and xchg jecxz jo push xchg test push pop negb fs (bad) clc fldcw sbb aad pop in outsb cmpsb xchg int rcl in jbe imul xor pop sbb push mov outsl jno clc fiaddl cmpsl pop and cmpl add pop roll data16 repnz int jo in pop (bad) mov iret repnz add pop pop jne inc pop test leave sti pop mov fnstenv mov lds (bad) sahf (bad) (bad) jno push mov cmp mov sbbl in and imul sub jbe sbb sbb out out or daa mov (bad) sub fidivl ret pop dec jecxz xor sbb es mov or ds adc into cltd mov or lods or push jge aaa sbb adc insb push movsl mov out pop inc push outsb gs sti scas mov xchg movsb sbb adc pop leave adc and pop test xor loopw sbb std cli dec mov xor sti repz push adc sahf call jp mov mov (bad) xor int int cs mov xor fsubrp or sahf stos jbe xlat pop xlat mov icebp sub xor (bad) dec add mov pop inc mov cmp mov popf push xor push mov or pop cmc xchg inc sbb jge insl sti movsl aam pop jmp mov push fs mov sahf int pop in mov lret jge xchg mov hlt cmc sti ficoml xor add push dec dec shll and pop dec scas add in (bad) dec ljmp push int fcompl cmp adc test in xor mov pushf fsubr jmp cmp xlat and fcompl mov add xchg aaa notl push mov xor push sar jmp xchg jnp and rorb sub fimul jle lahf lcall std arpl jp xchg jne stos mov push lret mov xor push sub ficoml add sub stos sbb and lcall or cwtl sub jle jl inc out iret push int3 stos and insb mov (bad) mov arpl mov lret (bad) icebp jne cmpsb ss gs xor and das outsl mov sbb jo sar nop dec inc call js xchg std aaa mov add mov jg cmp cli push test lock jno testl (bad) stos adc shrl pushf aaa xlat dec imul shrl test arpl sub cmp cs scas sbb rcrl cltd adc imul cs and jb push xchg mov inc (bad) cmp adc pop adc xchg sar jecxz idiv adc dec xor fsts adc cmp dec ljmp push push stc mov xor mov loope (bad) (bad) stos lahf (bad) cmp lock push adcb lock in dec sub sbb psrld repz or stc and adc inc mov popa push lret mov ljmp fsubrl xchg adc popf add or (bad) insl icebp leave xchg insb cltd mov jecxz popf aad aam xchg das inc jae daa ljmp cmpsl dec addr16 xlat jbe sarb pop mov push aas dec ja mov aas dec (bad) out and cld xor int3 cmp in popa cmpsb pusha jle adc push jmp push fs in dec mov or mov jo or jno lds add push sti scas into push movsb add test notl mov lds dec call ss (bad) repnz sbb sub mov aaa movsl and add add mov xor adc cmp cmp jne bound outsb popa xlat cld lds xchg and ljmp setnp repnz dec add mov or jmp ja fmull adcb mov adc inc iret push pop aaa ds mov lret imul (bad) icebp (bad) xor idivb stos mov sbb cli pop test out cs icebp shrl adc arpl shr xor pop xchg popf cltd rcll adc sahf mov xchg push hlt cmp fistp rcrl push sbb mov sbb gs out and xor add lret cmp nop leave xchg pop pop mulb mov sbb dec sti xchg orl push insl ret icebp add mov mov push jmp ret adc xchg mov hlt cmp fadds jg cmp or sub mov das fldt push out (bad) faddp test push int rcll ja in aas popa scas cmc pop push call lcall dec fcmovu xchg pop pusha in sti sarb xor enter pop pop jmp cmp lret push je das cmpsb adc push jno mov int3 repz into pop lea jp xchg or ror out push xor inc outsl sub inc and sti bound popa adc jns (bad) rcl mov pop mov dec (bad) mov (bad) jno faddl inc mov add add inc dec out pop add add adc je sub mov xor mov shrb aas scas fsubrl out and add (bad) jbe mov xor adc cmp repnz bound stos fdivrs ret mov sarl es loopne fdivrs stc mov in (bad) outsb iret and shll pusha fldcw dec scas or int dec sbb pop (bad) ss movsl mov adc scas and mov push fbstp and dec scas jo fimul mov mov mov lahf inc dec sub (bad) jae jl jecxz mov ficompl sub out dec jl out mov push rol or xor jno leave pop imul sub js xchg mov add inc dec mov dec fwait add dec or jae test addr16 sub sub bound cmp jae push push or xchg aas xchg mul sub cs cmc xor dec mov stos mov lahf and fwait mov adc push mov jmp (bad) in push (bad) dec daa dec aas (bad) xchg outsb pop jle,pt (bad) ljmp (bad) ret aas push cltd sbb sbb aad mov mov mov inc xchg mov xor mov nop sahf rol gs ja mov pop mov sub rcl out add pushf mov mov add or divb mov cmp mov lea ret lret pop mul popa fwait adc mov cltd jo add (bad) cmc cld mov sbb and xchg lret ds and shrb cli push aam xor adc test and pop adc scas repz cltd mov add cwtl rcl rcrl and pop aas mov mov ljmp cmp mov jns in dec (bad) std or cmp jmp ss jl in ror call mov test mov fisubr pusha ss cltd cmpsb and inc sti pushf push pop iret lock mov mov repz xor sub jl orb xor mov sbb ret stc pop arpl lahf cmp dec lcall jnp mov sbb fdivs xor mov sub mov nop xchg push hlt sbb xchg xchg pusha mov and mov mov inc and mov out jne clc cmp jp adc or int popf xor dec ljmp cmp aaa fs std std xchg fwait push mov sti or xchg (bad) insl lea sub scas mov jns inc xchg add xor (bad) jno jns mov aaa jne and lods idivb fidivrl sub xor xchg lods mov lds cs test sub nop pop dec jle scas outsb call push imul mov adc sub cltd mov and sub gs scas lock ljmp fildll pop xor popf test pop into outsl (bad) div les mov loope lret pop test jmp cld sbb in cmp xchg popf repz lret xor lods into divb (bad) xor loopne mov cs inc jmp loope fadds mov scas pop dec inc jg jb ret (bad) and inc push popa arpl pop daa and xor and stc jnp hlt out sbb pop mov lahf and stos lcall mov xor int3 mov pusha repnz jmp pop (bad) fisub cmpsl sti and incb js fwait (bad) push ljmp add push rolb xchg out mov frstor mov dec sbb test (bad) scas fstpt xor cld or test test (bad) out pop jge loope add ja mov neg cwtl mov nop push lret std dec loope dec xchg lret sbb out push jo dec test lcall xor adc adc aas loopne pop lods xchg outsl cmp out cmpsb add mov xor push rclb scas push xchg cmp lea es inc repnz ds popa ret jmp lods push dec dec sbb outsb lock add cld sbb daa test adc sub dec (bad) aam in in loop inc xchg and pop adc aas out les pop jle pop imul mov (bad) loopne jl fs std sbb clc ret inc fisubr cwtl insb xor mov inc (bad) lock cmp push (bad) iret dec fucomip or lcall stos call push adc mov xor outsl or in (bad) icebp scas jge push cmpsl jle fsubl xor cmp or dec mov movsb sbb test cmpsb adc jns ss push lret (bad) mov test sub inc pop sahf fnsave or lods mov and lea dec (bad) xchg sahf pusha movsb outsb pusha xor cmp iret loop inc outsl dec jp in cmpsl mov aaa (bad) mov mov add repz or rorb mov fiadd mov jecxz adc cmpsb subl cmp ds aas xchg inc imul jb sbb sahf fsubrl out jno testl cmp aam mov dec addr16 lds (bad) inc arpl or movb pop add add out cltd lret pop dec or scas push cmp popf adc out movsl ds roll sbb (bad) into xor add mov int mov push ret stos add pop out sub dec int3 ljmp (bad) fwait cltd lcall push insb jge loop push cmp or push mov cmp imul insb mov inc fisubl add sbb and clc dec inc inc rcll mov pop imul adc leave sub fadds inc jle into in mov sub xor xchg je lret or int3 mov sarl fstpl lock imul popf fwait sub inc rol mov cmpsl subb fdivrl add sti repnz mov fldenv mov hlt lcall test add jns adc sub icebp pop inc xchg and jmp lret jns hlt or scas repnz sbb pop rclb jae mov cmpsl cmp je xor add (bad) mov cmp movl scas add xor clc mov cmp hlt dec pop outsb or mov test dec xchg nop rep xchg scas (bad) or (bad) shrb lds pop xor imul cmpl lahf mov and test jp ret mov mov xlat jnp mov outsb lret or adc adc push jae arpl push imul jne (bad) xlat mov push std dec loope xchg std icebp fisubr jg mov aam jns sub jg xchg dec cmc punpckhbw arpl shrl xlat mov fs sbb xor xlat xor aas push push push mov jle sub imul jle lret sub jno faddl inc dec bound push pop fisub imul ss adc push cmp pop mov or cmp cli out dec pop push sbbl lods repz icebp cmp addr16 dec cld loop xchg mov pop cltd mov sbb jae dec mov clc loop sbb sbb pop pop and rcrl jmp enter (bad) or call jmp push sbb mov mov pop pop pop sbbl test mov jb lods jnp leave sub jb mov stos or js repz push and xchg sbb es sti xor push dec repz stos dec push mov cli les cmc adcl mov repnz or jp movsb ret cmpsl inc sbb or icebp inc aaa and daa jg ds jecxz xchg lret dec xor aaa shrl inc xor lock adc shr movsl and inc mov call sub std add into pushf dec (bad) lds push add sbb sub and pop dec push int jo and push jl jb add cld pop jecxz imul mov pop mov push out sbb xchg repnz loope test mov out ja call xchg (bad) fsub cmc dec repz rclb inc loope xchg dec xor je push push lret push jge aaa push sub aam iret pusha or and (bad) lods cmp adc xchg test pushf mov pop mov les gs enter int3 bound cmp xchg bound mov mov dec mov xchg aad xchg idivb out ds test push outsb sahf out jmp adc dec mov jne sahf insl pop fildl cmp das cmp jg adc xchg pop cli jns dec xchg pop inc aam lret pusha lods out jae bound jle pushf push mov mov repz sub cwtl popf xchg in lret pop (bad) xchg jle (bad) enter xchg adc aam cmpsl xor ret jb lods clc decb (bad) aaa leave jp das cwtl xor push (bad) jno imul lahf push mov mov pop sarb (bad) mov push cmp hlt dec push (bad) push fadd ret cld inc adc std mov pop add cmp out fwait mov imul inc outsl mov movsb ret outsb arpl pop in pushf mov test cltd out and aam pop icebp cmpsb mov fcmovnu ljmp das cmpsl pop jg out popl inc bound lret and ljmp out test inc pop es and pop inc (bad) rcr mov mov adc or ja xor sub sub add popa dec and neg loopne test aas sub push das clc (bad) orl push stc xchg into inc pop mov (bad) mov pop pop (bad) std add and add stos mov sti repz xchg xlat add insb stos jl out pop xchg imul mov inc lods jbe xchg insb shl negl dec lahf or stos push clc cmpsl lock cmpxchg movsb lds sti movsl jle push xor mov inc push mov jmp stos imul pushf in call jno lea (bad) das mov rcll les loop or rcl in jle rcrl mov pushf mov lahf xchg negl jbe ds xchg lcall jne ss mov rcl adc je (bad) icebp mov test dec clc icebp cwtl shr lret arpl jl push cmp inc dec push out dec dec mov dec jno mov mov (bad) lock loopne loope std rcrb push sarb aad xor (bad) popf pop sub shrb pop add mov cmp fs jp lea loopne fadds or pop lcall xor repnz or mov imul and cwtl hlt mov jmp pop xor cmp cld repz stos push jae jp pop outsl icebp jbe insb pop mov lret test xchg pop je mov negl dec inc fsubl (bad) cwtl out imul fidiv fdiv stos cs (bad) ljmp test inc inc pop add (bad) mov inc repz pop adc shl and fimul dec test std or stos push sub clc dec fsubrs sbb pop add sti sub add adc movsb mov mov or ds cli mov push jno mov add mov add (bad) jmp inc push int (bad) fsubrs and push inc (bad) imul push dec push ret push jnp pop dec mov out roll testb mov in sti xor cmpsb pop sbb lcall daa pop repnz mov ljmp lods sahf cmp in (bad) xor sbb add (bad) pop lret push pop daa inc push lock in out dec scas add pop lahf aaa (bad) in xchg sbb xor add idivb scas loop or insb cmp stc lods dec into insb sbb dec jns jo ss xchg pop popa jns jb xchg aaa push or js cltd push loop lcall stos jmp lret add push push aad mov scas fwait sub aaa les pop sub jge jae sub sahf sub pop daa sahf cmc daa movsl sti add xchg jge mov (bad) xlat push or shrb loope xchg aas sub mov adc adc data16 mov jo lret mov (bad) in (bad) adc push pusha stos pop dec mov inc (bad) loopne (bad) push sub pushf imul int3 mov jge rcrl inc and dec cmp test mov add jne outsl push fwait sbb or mov dec jl xor cmpsl movsl lret mov mov rcrb out adc and pop push push mov push sbb rcll and scas dec repz xor and dec jb mov sub or int xor in lods and out push mov ds les in sub push cs in fwait les push mov cltd cmp cmpsb pop cli mov sub pop pop scas leave mov mov stos lods mov pop lahf push addr16 jg push xor jae mov cmp jl inc mov push mov sub jnp icebp xor (bad) xor outsb or je in xchg xchg lods add (bad) pop mov leave ljmp sbb outsl imul and mov pop sub repnz fs sbb imul js and dec aam scas dec xor pop lahf mov jbe inc and cmpsb mov mov cs push dec sti mov sub push ret sub mulb (bad) sub (bad) pop xor fdivrs clc (bad) xchg sbb dec in inc das jge jbe shrl int3 pop jnp sub or dec nop das scas dec adc aam pop enter aam xor jmp add (bad) cmp sbb in xchg jg pop mov mov ret jmp jne inc push mov cltd cwtl cmpsl shll xor mov out mov jmp cmc pop dec lret adc mov fwait push lds imul adc xlat sub dec aam arpl pop mov fs aad addr16 fnstenv les and mov in and mov rcr loopne xchg dec inc clc cmp cmp jmp enter xchg mov xor das mov xchg jle push pop jb jbe inc int3 mov fcomps xchg inc add sub pop mov mov or mov jmp xchg int3 xchg lods cmp sbb jae xor cmp sub dec push sahf or xor testl into inc xor in mov mov test imul jle xchg je mov out jp sub xchg cmp mov gs or stc fist mov (bad) lret xchg xor cmpsl push inc xchg std gs xor xor xor int3 call xchg (bad) notl scas xchg lods insl cmp lods cmp movsl lods jae stos or ljmp cmp xor cmpsl in pop and jo dec lea sub or fnstsw movsb inc adc fadd sbb mov mov ficoml mov or (bad) mov aas ljmp adc mov mov or pop pop fdiv pop add add push mov sub xchg repnz xchg addr16 and repz push (bad) insb int inc push jb mov idiv mov sub insl cmc pop lock xchg arpl test (bad) or add imul pop std xor jge pop sbb (bad) xchg (bad) xor daa sbb sbb dec sbb adc test push jg popa movsl pushf and out test lret jae mov cmp dec (bad) repnz pop sub test fucomp mov lds fistpl adc adc int3 cmp lcall inc jecxz shl (bad) in mov (bad) mov rorb (bad) lret lock xor lods ljmp or cld mov push imul sub enter xchg insb sub lock fistpll cmp (bad) fdivrs repz fadd push lahf push lret (bad) mov jg (bad) adc test mov arpl add ret xchg stos arpl dec dec stos xlat scas mov mov mov imul out fisttp aas mov scas jo loopne call or mov or mov mov push in push or movsb mov sub shll sbb cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz ljmp loopne add dec add shll add dec inc scas inc pusha (bad) or add add add dec inc add add add add or add jbe xor xor add add add add add adc add jo add and jb outsb addr16 add add add add push push add adc add add add inc push dec inc add add adc add add and outsl bound add add add add add push aad cmp add and add add add add add add add add add add add add add add add add add add add add add add add add add add pop add add add add add add add add add add add push add add add add add add add add add add add add add add add add add jo or mov add add push add adc push add cmp add adc jns pop add add add add add add add add add add add add push add add jne push add inc add push add add roll add add add or lock movsb add add add add add add add add add add add add add add add add add popa add add jne push add add add add add add add add add add add add add add add syscall jo or adc movsb add add add jp cmp add lcall add enter push add push das push push add add push jo push add push jo push add pop jo push add pop and push add pop dec pop push add dec pop push add add pop cmp pop fiaddl push add pop jo push add or add add dec or add add add add add add add adc pop add or add add add adc sahf add or add add add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add adc mov movb add add add add add add add adc add add add and add add add add add add add add add add add add add add add add add add add xor (bad) add xor xchg add adc lcall add add add add add add add add add add add xchg xchg adc mov mov xor fild cltd add add add add add add add add add add add xchg add pop add add add add add add add add add add add sbb add dec roll add adc (bad) add add add add add adc xchg sub add and add add adc xchg add add cmp add add adc lcall mov xchg inc add add add add add addl add adc add add xchg rolb pop add add mov xchg add add add fadd add add les ljmp movl add or add add add add add add add add add add add add add add add add add add int add add add add add add adc dec add iret add add adc push add rolb add add add scas add add add add mov rolb add add add add rolb add add add add add add add add add add add add add add add add add add add add mov sbbl add add add add add add add add add add add add add add add add add add (bad) add add xchg add pop add add add add add add add add add add add add add add add add add inc add add add add add add add adc lcall loope add add add add add add adc jle jo add add add add add add add sbbl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or xchg add dec add add add add add or icebp add movsl add add in add add add add add or cmp and cmp inc add dec add push add inc add add add int3 add ljmp add cmp inc add add inc add add inc add add add add add or imul adc jmp add add incl dec push addl popa push xchg add add mov push mov roll push jbe xor mov rolb add add add push icebp add add push stc add add push add or loope inc add add add push add pop add jnp imul cmp test addl add fwait add scas add ret add pop data16 add push add add add or push add add or add add add pop push mov inc add add add add add add hlt add add add add add add add add add add dec add hlt add add add add add xor push add add add add add add add add add add add add xchg add push add cwtl push add sldt add add adc popa add jae test popf add add add add add add add add add add add add add add add mov movl add or add add xchg add add ret add add add add add add add add add add add add dec add lcall add add add daa add or inc sub add add add lldt add adc add pop add add add add add add add add add add add add add add jo add add add add lcall add add add add add add add add add add add add add add add add str add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov add add push add add mov add add push add add mov add add pop add add mov add add pop add add mov pop add add fild pop add add add add add add add add add add add push add adc push add pop add push add add xor jbe adc jno and sbb add sub add pop add add add or add add add add add add or pop add add add add add add adc insl add add add add adc jno adc add pop add sbb sbb add bound jne outsl outsb cs add arpl insb imul jb imul inc outsl fs je jb bound add jae gs cs arpl imul jb cmp outsl fs gs arpl outsl jb inc insb popa jae xor bound jne outsl outsb add push arpl jns je insl add popa bound add (bad) mov add (bad) mov and xor and xor loope mov and xor loope movsl add jb xor push jns je insl cs imul inc outsl jb jae inc outsl jb add (bad) mov add outsb je jb jae pop dec push add jb add jns push push jbe insb jne add jo jae add jo jae outsb addr16 (bad) mov loope mov je outsb addr16 popa jae add jae gs cs outsl outsb imul je outsl outsb add (bad) lods loope mov loope lods loope lods add jae insl bound push jns je insl cs gs arpl outsb add (bad) lods loope movsb add (bad) lods loope mov je insl cs jb ja outsb add jp inc add (bad) lods loope mov push imul loope mov loope lods loope mov add insb jne push jns add imul jae imul gs xor cs insb add jo outsl insl popa imul jne arpl bound jne outsl outsb cs jb jo jb imul outsl jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add jae insb jbe inc jbe outsb je jb jae loope movsb loope mov outsl push arpl gs outsl fs (bad) movsb loope movsb add imul jns je insl cs arpl imul arpl dec inc outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add je imul jo imul push gs imul add je inc gs jne je inc gs jne je cmp jb jbe je dec insl jo gs outsb je je outsl outsb inc gs imul aaa xor cmp cmp xor xor inc inc xor inc inc cmp inc xor xor cmp xor xor inc inc cmp xor inc xor xor xor xor xor inc cmp inc xor cmp xor xor cmp ss (bad) mov (bad) movsl add (bad) movsl loope mov loope movsl add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add imul jne add jae gs cs jne je insl gs outsb je jb jo gs imul jo jb jae dec insb fs jae inc je jb bound add jb outsb add outsb je imul je outsl insb add outsb je outsl insb add jb popa insl add jae gs cs dec add add je outsl fs popa jae add insl outsl jb push je gs insl add inc push push inc je jb bound add outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc imul jae bound je jb bound add imul jae bound je je add aaa xor popa xor fs sub gs jne arpl jb,pn jae jne arpl add je xor push jne je insl gs gs jo jb add imul inc jb popa jns inc jb popa jns push jne je insl gs imul fs add popa jb inc jns add jo imul add popa bound imul jns gs inc outsl outsb jbe jb add jns add je popa je add je popa je add je popa outsb imul jae jne arpl popa insl gs addr16 inc outsb je jns outsl imul push outsw add imul insb add je push gs add outsb je popa outsb fs gs popa fs dec outsl popa add jae insl gs popa jns jne add insb outsl outsb gs bound push je imul fs push jns je insl cs gs add jo outsb add je imul arpl outsl outsb imul je outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je dec push gs popa insb imul push jns je insl cs jne je insl gs gs popa insb imul add je js arpl imul insl bound inc outsl outsb arpl add je inc jne outsl push arpl gs imul outsb jae jae je inc insb imul add je dec popa insl add jne je insl inc je jb bound gs jb jbe fs dec outsl popa add outsb add je inc jne jb outsb je outsl insl popa imul add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add jb push push gs bound arpl inc outsl insl jo jb bound xor inc imul jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl inc gs popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add je dec je insl add je dec popa insl add outsb je imul pop inc jae gs bound addr16 inc jae gs bound dec outsb jbe imul gs inc jne outsl push arpl gs outsl fs jb popa jns dec push gs arpl outsl outsb imul je insl cs push imul gs push gs insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add imul outsb arpl popa arpl jns push jne jo outsb fs popa jns jne add popa add outsl insb insb arpl outsb add jae gs cs outsl insb insb arpl outsb jae addr16 inc jbe fs arpl add add data16 bound arpl outsl add jo outsl add add jb outsl add add je imul add add outsl add jb arpl add dec add add add arpl cmp xor sub add add add add sub add add add add add add aaa add add add arpl add adc add daa and xchg push or loope inc insb add mov pop push sbb mov and add add add add add add add push push add add adc add push add add or add add add add adc add add push adc add sbb push adc push and add adc and sbb add sbb and add push add push or or adc add adc push add add add push add adc push add adc add push add add push or aad cmp adc add push add sbb add push add and push or add push add add add sbb add or push adc push sbb add push add adc add or add add add push add adc add adc add add sub xor xor add adc sbb xor or push or add adc add sbb add add add add adc add push add cmp or adc add or add sub xor push add adc add sbb add adc add push add add add or add push or add adc add adc push adc add adc or adc push adc add adc push adc push sbb add je insl cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add add or add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add add push sub add xor xor xor cmp xor xor aaa popa sub sub data16 xor aaa add add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor add and add addb add add pop add dec dec imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor add add add orb add or or or or or or add sbb add add or or or push add push add add or or or or sbb push add sbb and sbb or add add add add sub movsl or or or or or or adc push pop add or or sbb or adc and add add add pop add or add or adc and add push and add subb sbb adc or xorb or orb sbb push and adc add or or sbb or or add adc pop or or sbb add add push pop or adc or add adc or add sbb push push push or pop or or or sbb or sbb and add and pop push or or pop pop or cmpb add add adc sbb cmp adc sbb or add adc pop and add add adc add or adc and add adc das pop sbb cmpb lds cmpb adc adc orb or sbb or add push add push pop adc push push push or push sbb sub add adc adc add add gs add jno or adc add add cmp adc adc add add push or sbb or and adc push and sbb sbb or or sbb or cmp push or orb add add adc or or and add and pop or adc or and adc sbb or or or and or pop or adc or and adc adc add add add add and add add add add outsl jb js dec popa imul jb gs insb add add add and 