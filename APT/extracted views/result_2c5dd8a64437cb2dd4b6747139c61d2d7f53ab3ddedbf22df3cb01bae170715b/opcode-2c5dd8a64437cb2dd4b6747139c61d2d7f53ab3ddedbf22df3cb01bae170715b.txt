(bad) scas cltd sbb push inc push rcll outsb pop push aam xchg mov and (bad) fistl jnp js stc aad mov inc push (bad) hlt rorb outsb add cmpsl xchg pop mov lods mov adc mov xchg xchg into cmpb dec (bad) mov movsb movsl (bad) jno push je push push sbb scas lods inc pusha push add cld jb xor adc dec adc pop xchg push fs cwtl xchg repz dec sub bound popa cmp js jle mov push jae jno push je jle jmp jmp mov data16 xor inc mov xchg mov je setg fidivrl adc cwtl xor jle jle mov add xchg aad sub cmpb inc jbe xchg cwtl inc sahf inc pushf sbb jbe mov dec pop test loop iret sbb pop popa enterw insb js push pop inc mov stos lea mov mov pop adc in lret mov cmp jnp out sub cltd js test loopne mov mov sub pushf test sub push orl ss leave scas in and cs std outsb mov push arpl jmp jbe pop jne insl jle mov inc push mov insl gs mov pop jg sar fcoms cltd repnz or mov pop cmpsl nop stos je adc scas pop push mov test stos mov sbbb mov mov (bad) and inc (bad) outsb and pop rorl lahf mov movsl cmp arpl inc addr16 dec test arpl jl adc sar xchg pushf mov pop mov insb dec and subl aas pop jl mov or sbb cmp shrl cmpsb inc pop mov pop sbb (bad) out nop hlt xor mov adc mov test ja mov push xchg mov in add out dec lods les gs push push jns inc xor fs cwtl jle dec dec push dec xor inc push mov jp cmp xchg inc inc mov or dec pop cmp inc inc mov pop sbb inc popf sub xchg iret cld mov int xchg lea arpl cmpsl data16 mov fimull mov mov mov xchg xchg push mov pop cs scas jae lods (bad) subl and gs push out ss iret jmp lsl jne sub sub pushf xor jb loopne mov lcall dec movl popa mov repnz fldpi es adc in aad push sub push pop sbb or call cmp jl jbe aad push mov adc sub cmp xchg sbb test and mov or and jns dec dec dec push push jecxz leave xchg dec mov gs dec and movsl cmpsl fcmove adc jmp add jo mov add inc pusha (bad) fincstp fdivp jmp mov in or ret xor pop sti or daa insb fidivr push mov xor ret and add fdivrl sbb xor sub mov out arpl push loope test out fnsave mov sbb jns (bad) dec movl inc push mov nop stos pop xchg rclb pop xchg add mov pusha andl icebp mov hlt mov jmp push xor daa jb data16 xchg (bad) incl pop cli cmc sahf lahf adc xor cwtl pop rorb xchg dec bound addl loopne mov jns div fsts push jge icebp jecxz aad iret add int mov pop ret leave push jge out fstp pusha push stos cmpsl push dec dec mov loopne mov mov das movsb movsl lds adc ds int lods (bad) leave scas roll addl lcall cmp ja pop dec inc adc push xor popa cmp imul sub nop push push sbb outsb outsl insb jno and test cmp pop insb mov pop pop xchg inc mov xchg mov push pop mov mov mov mov repz aad jno movsb sub and rolb (bad) addl das cltd cltd cltd sahf cmp push push push stc mov movsl leave aad pop mov dec cmc pop lea inc and arpl xor sbb roll into ljmp (bad) inc jmp fwait mov in adc lods xchg mov imul (bad) mov cmpsl cmpsl movsb cli fidivr mov cmp aas aad adc cmc stos call shll fnstcw mov pop push jb adc rcrl and and popa sub bound jecxz cli add mov push sub out cmpsl aad push cmp sbb in addl notl test mov (bad) mov mov les xor insb and es fldl rcll xchg in mov sub lds mov inc or fnsave push cwtl mov psrlw in dec and jecxz test iret jns sub lock je lcall outsl loope,pn or dec ret xor clc pop out nop inc enter dec imul push (bad) nop dec sbb mov movsl mov dec cmc mov xchg xchg mov pop in scas data16 xchg push inc cmp mov push inc rorl mov dec dec dec popf hlt icebp dec dec (bad) or test js in sarl inc jns push je push mov jae cmpsl inc inc push fldt inc xor mov mov xor or mov test pop movsb inc cmp (bad) enter les in bound (bad) add insb jns jne fwait cwtl sbb mov inc rorb gs pop jge dec xchg iret daa inc jo push test addr16 ds outsl mov jae icebp sub xchg imul mov inc out das (bad) fcomp inc cmp sbb mov ja icebp xchg mov mov repnz das scas lods or stos sar fst test jl ljmp jnp mov int3 sub dec outsb insb jnp sbb div fidiv lahf lock and inc push mov cvtps2pd jns popf and xchg xchg rep out xchg lret xor push or pop sbb jne xlat test mov icebp nop sub jnp xchg stos in dec lahf push mov and xchg cmp loopne xchg xor mov push dec aam daa xchg shl iret xchg or sar gs lret xor ss push push and inc xchg lcall lea xchg cld xchg sti xchg xchg lods pop jg mov mov and mov and jbe out outsl cwtl lea in mov loope imul fdivrl and xor testl sub add sti (bad) fs into js xor ds clc xchg test xor push push ljmp daa inc loopne iret mov pop pop push jae ja mov xor jg andb mov (bad) inc xor mov aas loope sub roll addl mov js inc xchg cmp dec dec and mov out xchg cmpsb inc fs in sub std dec rcrl mov sub ljmp cmp push stc sbb out fistpll stc ret jecxz je sarl jp js sub push psubusb pop dec push sbb mov mov mov imul sub insl push mov xchg test (bad) std sahf lahf inc push xor ja cltd (bad) jl dec rcrb into int3 int clc popa addr16 test jg cli or stos inc nop xlat je and (bad) popf scas (bad) insb push sahf in inc sbb jbe mov cltd fcompl divl push cmp (bad) (bad) mov fs and mov lock inc fwait mov test jae jno push cmpl cmp push lahf pushf popf xor push cmc lret pop lea loop pusha popa data16 scas mov (bad) xor jb jo or push xor sahf test jns fimull sub push push cmp mov loope js mov or mov lods (bad) jecxz and inc mov adc cmp inc adc xchg xor in (bad) out aas sub push loope les add repnz inc mov jbe je sahf outsl call in adc loopne cmp jns jg pop jb mov cs pop dec out insb insl push pop xor inc (bad) push mov test mov push mov cmpsb in stc cwtl test lods in push mov xor ret sub nop add test or mov mov jbe sub push mov add (bad) nop mov ret pusha sub xchg jle pushf hlt mov std lock sub imul mov inc scas ficompl push (bad) pop pop pop pop inc push movsb xchg mov nop aaa or outsb add icebp xchg pop cmpsb inc cmp lods (bad) ja out dec cltd sahf mov shlb test rcrl arpl push push add jg dec hlt dec lds test fs scas mov (bad) mov outsb push push push mov imul pop (bad) insl insl inc ret rolb sbb mov ficomp xchg xchg cmc pop fwait (bad) enter mov mov xchg mov mov addl int3 stos test jl bound xchg and mov sbb adc in adc dec ss jne rorb arpl fisubl and les fstpt jno (bad) psrlw je push daa outsl add inc add inc add test out pop pop pop es xchg fsqrt lret xchg mov adc int3 lods mov in mov jbe mov ljmp jmp stos mov cmp les jecxz pop dec pop sahf lahf pushf aaa test xchg ss movsb jne dec (bad) out dec imul push xchg addr16 cmp ds fcoms jg repz xor outsl add ret sbb lock pop lea mov into in int3 mov inc cs cmpl loope and adc sbb jle xlat mov xor mov push sub into cmp negl dec iretw inc dec fnstsw push xor mov lret adc ljmp rcrl idivl js sar ficoml movsl icebp jg repz xor scas xchg pop test sbb or lahf mov fnop pop rcl adc jno jle in das adc push mov mov hlt test mov fnop test adc or scas out dec scas in arpl gs fistpl mov cli push lds xor test dec cmovae popa and and fs jg cmpsl jae push adc (bad) hlt rcrb outsb add adcb imul inc les xchg xchg das inc fldt xchg mov pop fiadd mov and leave (bad) cmpsb push lcall mov xor or add scas or fidivrl mov sar pushf adc rcrb in pop mov dec pop inc arpl addr16 jp lcall mov mov push push rclb mov jb mov sbb mov lds insb pushf or pop adc enter mov mov cmpsb cmpsb cmpsl sbb mov mov mov xchg js jle jl popa jae in sbb popa xchg movsb ret in cmp xor cwtl mov lsl in dec add popa into adc clc loope sbb aam jg repz and lahf ret adc aam inc push daa inc pop cltd js pushf es (bad) cmc jbe outsb cmp mov mov stos nop cmp mov mov bound pop dec test and cmc (bad) lret cmp clc std rep scas mov aaa push pusha popa test ja or loop add dec jmp and sbb pop jg sar fcoms cltd repnz (bad) sub push (bad) and aad in lret sbb faddp dec jmp xor imul aaa pop jl ret sub mov cmpsl mov mov jb cmp xor je test stos stos xor gs inc loope xchg pop dec pushf sbb cltd sti cmp rorl nop js enter andl and jge lods inc outsl (bad) push je adc jmp addr16 sbb mov pop rorb mov xchg nop cmc pusha movsl mov divb movups test sbb mov mov sub adc sahf aam (bad) sub test cmp cltd pop and mov add sbb xlat sub iret stos ja insl bound test sbb adc jae sub sub sub jecxz jbe inc sbb fisubl jns data16 sub cmc fmul out leave cmp out or jno inc add hlt clc pop cli or and mov icebp mov push xchg sub scas js es movsb (bad) lea xor sbb cmp lret adc and loopne xchg add sbb cmc aaa or xchg cmp sbb or andl pop push push (bad) pop sub nop cli xchg mov mov dec mov cs dec lods (bad) cltd es cmp sub mov push fwait das scas lods rcrl xchg sbb xchg stos dec shld into dec dec and cmp jle repz lock adc sub push mov inc lds dec inc inc inc sbb jge jl xor push xchg mov jo scas (bad) int push sub push xchg pusha mov cmp xor sub xchg xor ret cmp mov out fidivrl sbb aad mov push aas push pushf insb imul (bad) cli cmpsb nop cli and jns jg jge xchg jo jp xor pop js insb insl adc scas adc mov sahf jns nop mov push dec cmp or pop fldt mov cmpsl movsb movsl (bad) push scas mov andl test sub and cmp movsb sbb jmp push and jge jb arpl xchg mov sbb div fidiv lahf lock sub xorl inc inc sbb mov sar cmp sbb or or int3 lcall mov es push rorl repz stos xlat mov push out dec cltd xchg pop pop dec lods (bad) stos leave mov mov aaa inc out or into xchg lret movsb mov lds (bad) pusha popa sub push sub jge mov adc jmp pushf lea in adc dec (bad) repz xor mov sahf mov ja in das ror in daa cmpsl movsb movsl jmp insb popf mov or mov pusha mov ret (bad) mov dec push cmp mov aaa lcall incb and in out xchg inc fs adc jg xor pop push cmp mov lock in ret mov in (bad) mov mov pop (bad) mov aam shrb imul out daa cs cld push scas jne mov or xor push sub sub sub cs mov mov push cmp out mov rcll mov sbb test lret xor mov sub (bad) test add xor ficompl pop rcrl jl jne mov cmp into inc or or mov cli inc pusha cmp push inc push mov mov add scas scas lods idivb fnstenv push mov pushf jmp call push or andl dec daa inc fs repnz add jl repnz jo sub push leave aad dec push push ljmp in out fidivr pop clc in pop (bad) rol aaa fbld jnp sub into ret je fildl push mov mov mov mov push sub test (bad) orl scas inc jnp sahf in aaa nop popa push push jbe icebp test imul leave mov mov inc out jmp xor jo pushf inc je push sub insl inc xlat lcall mov jle stos (bad) (bad) inc mov xchg lret int3 push mov out xchg cmpsb sub aas mov xor adc jne call xchg xchg sub lds push inc inc faddl dec fldl pop ret repnz dec dec dec and out loopne mov callw ja int3 cmp jae pop push imul mov push mov jge dec adc daa outsb cmc lcall push dec jle mov sbb pop mov icebp dec subb jmp add sbb scas lods movl scas dec fwait cwtl adc dec mov clc ja xor dec dec xlat scas xor sub mov jns mov jge adc fnsave test in outsl insb push out clc or sbb pop sar adc pop cld rcll les adc jmp and mov (bad) and incl cmp fidiv fnstenv out and stos mov cmp add fild fstpl adc mov push ja cmp scas or into idivl out data16 xor dec add push jmp dec aad push sub outsl insb leave inc aam inc mov pop and mov xor mov test cmp pop jns or scas pop xchg sub xor pop int3 mov out lea addl adc arpl mov dec dec dec push xor int3 mov sbb ret fwait popa and adc xchg inc outsb mov pop sub mov add pavgb ds movb add adc adc push lret pop add sbbb mov inc movsl out dec lods stc lahf test fstpt lahf mov aas inc das push stos stos test mov lds cmpsb sbb jnp xlat push hlt andb dec or jl cmp sub jnp (bad) lret sbb jge jae push sub ja imul hlt shrl dec push mov pop sbb cmpsb jae mov into ret mov ret pmuludq pop cli or stc movsl aas and cmp xor outsb fwait outsb stos test mov push lods (bad) lds pop xchg sahf adc push outsb fwait jecxz dec dec or repnz adc mov mov jl stos pop jno clc inc das mov repz sbb mov inc pop pop insb mov pop pop negb hlt adc push pop jl ret ds loope in jno add inc std xchg rcr and xlat sub rorb scas lods lods push imul cli fwait add pop xor lret xlat push or lret ja lret push (bad) fistl jp pop jns test jge mov call push (bad) pop xchg out insb insl cmp inc lret push rcrb ds pushf and test dec outsl dec cmpsb lods and mov and (bad) rolb mov aad test pop pushf ja lods (bad) (bad) xchg ja or sahf lahf pushf add lcall movsb mov xchg pop iret sti mov sub in cmp jne lock js mov sub iret jmp dec add inc outsl dec ret std adc rcrb xchg aam lret adc cld loopne loop and push mov movsl mov iret cmpsl cmp xchg xchg cmp mov add sbb mov fwait lods je lahf pushf adc mov jne push enter fwait daa in xchg inc cmp stos mov lret scas aam jno (bad) jecxz push fmull imul and lock push mov mov lret bound loop mov mov xchg inc movsl mov push (bad) pop mov mov adc stos in arpl and lcall js push push or gs dec dec or leave hlt lods and add mov jle add sbb stos pop sahf imul mov popf mov sub cmp stc dec adc xchg (bad) hlt adc push cmc imul push jo add mov mov mov xchg iret mov mov (bad) shlb lcall sbb jbe mul movsb mov and jb out add out lcall jl xchg adc sti push or outsb sub mov sbb sbb scas mov sbb dec push push stos or mov add or sbb mov mov xlat jne jnp popa lcall jg jg jno push pop out pop mov inc rcrl dec call dec dec or push pop cmp cmp popl mov stos dec mov mov xchg ret insb xchg shr cmp outsb inc mov xchg notl mov fwait mov cltd cmp lahf movsb movsb movsl jg cmp pop pop jb mov mov xor push stos stos test mov leave addl mov popf cmp jnp sub (bad) scas mov outsl int out lcall adc pop jge xor sub pop cmpsl das movsl pop xchg or add xchg lea lahf jle adc push adc add loopne cmpsl sti cltd stos dec (bad) jne dec sbb lock andb test xchg sub mov dec imul add (bad) popa jg push adc outsl cmovne jmp and mov push mov movsl icebp pop std mov xor and (bad) inc add sbb mov cmp shrb movsb lods adc or mov adc cmp daa cmpsl movsb xchg xor aas mov (bad) xor notl pusha scas scas xor inc pusha subl cwtl sbb mov mov ja jne pop jle dec and je dec ret push mov movsb lock cld mov cmp (bad) outsl adc jge or popa inc sbb mov mov mov or push and inc jp sub mov sbb dec test jo jp mov (bad) outsb ja insl jbe cli sbb inc sarb pop notb mov negl dec out rcrb andl mov xor inc mov mov scas dec mov mov test inc gs insl sarb lret xchg leave push mov dec mov out xchg pushf dec xchg jle cmp xor mov negl aas scas iret loopne or lods ret mov data16 js inc dec jb mov outsl jne lret mov sub dec mov jnp int stc (bad) cld aaa or mov push je dec imul mov movsl call lods jle adc call xchg sahf or (bad) mov mov cltd stos ja dec xchg mov push cmpl jg ret popa mov cltd addl fs call add (bad) or fs xlat fs dec fistp adcb test jp cltd jno xchg mov stos stos test scas sbb push push loopne xchg inc lahf inc inc inc mov mov xchg rcll imull mov mov loopne into mov pop jno mov repz jmp test pop pop pop pop pop push cwtl cltd sahf inc xchg inc jb push jne adc dec dec dec dec push sbb pusha popa mov adc jecxz or mov pop pop sub insl inc inc inc pcmpgtd xchg cli pop nop pop xchg cmc jb stos cmpsl xchg mov cld clc xchg jae mov test push stos push dec mov jne inc xchg xchg mov jl jbe jo jbe sbb popa xchg movsb sbb sahf cmp push push push stc mov xchg jp sarl out call dec test outsl push ss movsl js je mov and cltd xchg mov mov xchg mov mov cmpsb shrl int3 insl jecxz mov inc xchg test mov repnz cmp adc xchg (bad) (bad) imul mov daa sbb push jb or push std xchg sarl dec dec bound dec xor aas mov out mov jno idivb mov xchg pop lea dec jmp das or inc pop inc pop and js mov xchg xchg lret xchg (bad) iret insb loop mov in rorl push jmp pop stc or and neg movsb (bad) push xchg jns test lret xor ret les dec jnp and mov xlat sbb rclb pusha mov inc in into and pop push pop jl xchg lea sbb sub mov test mov lea mov stos movsl pop pop sbb jne pushf xchg mov xor test mov inc test es xlat xchg ljmp mov dec sahf scas lods push pop subb fstpt mov pushf adc dec and jbe std xchg push mov mov enter pop stos (bad) fidivrl sbb add jne ja in xor lahf adc insb ljmp pop mov pop vxorps or mov aad push mov in aaa mov in cmp outsb repz push popf mov enter push xchg mov sarl adc test adc lcall imul and push xor data16 inc lahf mov jb (bad) mov lods mov lods dec stos inc mov scas inc inc jnp (bad) xor mov mov jo stos movsl mov insb loope mov mov fcompl cld jns lahf scas mov movsb pop sbb dec test lret mov clc fiadd dec jb push push adc (bad) or jnp enter dec dec dec jmp and test stc aad and pop mov adc out stos jns imul movb inc inc inc loopne mull jle addr16 sbb fxch popf mov (bad) jne loope xor iret sbb ljmp pop xor push mov cmc dec lods lods ret mov bound cwtl faddl dec adc push or std (bad) sarl daa mov loop pop out xchg dec sub jns mov popa repz jo sbb sub xor lock mov mov cmp shlb mov movsb cmp cmp scas mov cmp mov and pop roll mov scas jnp sbb imul xchg xchg dec (bad) stc fidivrl popf repnz fdivl jno or ror mov or aam test xchg lds repz xchg popa sub insb mov or inc mov dec lock xor push bound mov sbb fs js jle push stos mov mov mov or push mov xchg sbb loop rorl aam cmpl js fdivrl xor mov push dec bound mov aad gs cmp mov inc mov jl mov lods mov jno fildl stos xchg sti mov pop pop movsl out inc pop mov mov cmp in out mov mov inc push mov mov fsubrp jae test cwtl ret mov mov add adc imul sbb lods cmc or lods dec xchg into sbb pop bound lcall pop jge xor rclb mov mov mov push xchg inc inc test lods fisubr (bad) xchg in mov leave mov loopne mov out xchg push mov movsl mov lock push popa hlt sub xchg mov jmp pusha ud2 scas subb sbb test sbb and pushf push push push xor sub push shlb loop push dec dec dec inc mov pusha popa data16 xchg (bad) js jle or call sub aad scas test insb cmp inc cmc mov pop pop sahf jns mov popa mov repz (bad) stos mov (bad) mov leave mov gs xlat push addl shrb gs sub imul sahf cmp daa jb test stos adc leave in lea aam loope out nop imul mov pop push push mov pop jb (bad) insl inc mov rcr test dec lahf mov adc cwtl mov mov (bad) icebp lods mov cmpsl jp jns,pt mov addb dec mov jo (bad) fs jbe clc pop test sbb aam push ja jbe outsb jnp pop dec pop mov dec mov mov mov gs mov mov icebp sub pop mov outsl insb or (bad) adc mov mov cmc mov mov add (bad) icebp lods mov mov lods mov lcall dec js dec mov jge mov xchg jns jnp push dec imul ja sub lock mov add pop xchg inc and dec hlt push jl xor adc mov mov mov add mov sbb mov jle (bad) mov enter int cmpsl iret out xchg out mov cli fdivrp lcall in icebp mov lock and mov stos test mov add jne gs xor clc mov mov insl jle xchg xchg and lea cmp (bad) sbb cmp sahf ljmp inc xchg shr imul push adc aas mov pop pop sbb push jl mov (bad) mov stos mov xchg sbb dec scas push pop clc dec sub pop ds inc push mov dec iret mov jmp jmp adc shll movsl (bad) jbe jae insl hlt sbb jbe dec dec dec dec std outsl jl rcll inc push jge (bad) je pop jnp xchg insb imul jno lret das mov ret iret add movl dec mov mov pop dec cmp dec xor xchg xchg movsb out lcall mov jbe mov gs (bad) fs bound fistpll jg jge outsl push adc aam imul scas mov outsl int addr16 lcall jo jg xor roll mov sub ljmp daa or pop lods mov repnz push or js mov cltd mov outsl and mov xchg cmp xchg fwait mov (bad) xchg test in arpl sbb int3 mov mov ss cli rorl inc cmc int into jge outsl dec fistpl push mov cwtl jge cltd and xchg jo jbe sub push push insl add ret pcmpgtd inc pusha (bad) fincstp jmp fdiv or mov fmull jecxz and je xor fwait mov mov mov pop xor iret loopne pop add lods jae icebp dec lcall roll mov aas push pushf insb jl dec daa inc jno fabs std stos movsl pop jnp cmp jl nop inc pop in (bad) xlat hlt sub outsl rorl or inc pop mov test notl jne push cmpsb xchg or movsb mov and lcall jnp mov mov movsb xchg pop xchg mov mov in sbb push lcall pushf sbb jbe loop mov mov push mov addr16 pop xchg dec sub jg mov inc push popl dec inc and movsb lret lea fisttpl inc lcall pop (bad) jo adc addr16 xchg iret lods mov icebp lods mov cmpsl stc xor sti cwtl mov dec fs mov lcall scas shll cmpsl addr16 jno fstpt pop xchg jge xchg mov dec jno xchg dec dec lods (bad) into shl lds call jnp outsl test cld fistl cwtl std iret or mov xchg mov xchg xchg mov ljmp pop adc jns xchg nop xchg lret out adc jns mov insl and pop lods movsl mov pop jp xlat jne adc stos in mov cmpsl adc addb int3 sbb push idivl in insb ret jo dec or setnp dec and lock shrb mov push leave aad dec mov imul or sbb add sti dec adc pop std (bad) nop (bad) lret push jle and ret pop cmpsl in add inc cmp sub xchg adc cld pushf lods lods inc mov test cmp test ja punpckhbw adc arpl pop out inc in cwtl lock pop repz push dec lods out repz inc inc cmpsl xchg (bad) call (bad) (bad) or mov lock out mov out or outsb xchg push or adc and push and cmp hlt mov daa adc cs scas in and cli ljmp add cwtl es and stos loopne jbe mov outsb pop into pop mov insb dec das arpl inc dec add jp ds insb inc xor aad add push test shrb fadds pop jge sub (bad) lcall int3 inc test in xchg xchg movsb out lcall mov hlt mov or dec sub dec das inc lea bound insb lcall (bad) and push push adc pusha ret pushf jg dec dec daa inc jno daa test sbb mov repz movsl lods or cmp cmpsl nop mov inc inc pop sbb pushl xchg notl into lods mov sbb mov pop push fdivs push push je push push stos sub test insb popf lods (bad) (bad) cmp std imul sahf pop lret jae ds push jne stos and mov pusha into sub mov jns arpl les push sbb sub xor mov popa inc movb scas pop scas pop pop (bad) sub mov xchg mov mov adc mov mov pop inc push mov jl scas rorb or ja push arpl adc jp ljmp daa inc dec and jnp pop addr16 mov ljmp jo mov mov and inc mov add es test adc das int mov fwait fwait xchg mov cmpsl movsb lcall mov (bad) xchg xchg mov imul jnp test cmpsb fldt pop rclb sahf sub test jge pop pop mov fcmovb addr16 mov jnp xor insl push push jg repz mov add and or lea pop cmp into imul and fwait mov sub lcall pop cld adc adc jbe lea test adc stc jle sahf jg fwait lods jp lahf pushf adc stc push jne test pop fbld andl mov mov xchg xchg mov stos stos test scas adc cmpsl and pop mov mov sarb cmpsb (bad) xchg mov mov out xchg scas mov scas mov dec lock test mov scas cmc (bad) (bad) sub test and push push int3 push jbe or sarl iret dec xchg into sbb sub stos inc jg pop cld xor lock dec inc adc push ljmp xchg mov repz popf pop mov xchg or xor mov or pop sub jbe scas cld cmp adc push pop hlt dec xor mull fwait inc adcl add jbe fnstcw sbb mov aad xor adc jns imul mov jns jle pop outsl push imul icebp jno push notl push xor inc in mov pop pop pop pop (bad) mov cmpsb arpl mov stos mov mov mov and imul cli mov push xchg jle pop dec scas in jp addl mov popa adc je jle or (bad) daa pop jo mov pop mov mov adc jle xor mov imul cmpsl mov push mov inc inc add cmp adc xchg lret test mov (bad) loopne cmp pop sub popf cmpsl repnz push jno xor dec test mov shrl (bad) imul xor pushf popf cmp or or inc rcll push (bad) jmp mov arpl (bad) jb xchg je jne cltd outsb mov mov cmp or push jnp inc pop xchg test nop sub mov outsb lea ja (bad) xchg mov cmp jge jns fmuls in push (bad) add lcall xchg adc call jbe stos dec adc scas outsb mov xchg mov dec ret out jp cmp push jo push push jl adc insb add push mov lret mov and aam cmpsl movsb enter enter inc mov mov lcall adc xor scas jns fmuls in cmp add lcall cltd sahf lahf fimull and ret jg dec and inc mov xor adc outsl jnp aas pushf push xor jp xchg push and xchg outsb outsl add pop push sbbl arpl pop pop sub movsl xchg mov pop pop aas mov lcall mov mov xchg adc sub mov mov subb xchg (bad) mov jns fdivl sbb sti rorl push adc sub jecxz dec mulb sbb in test stc out pop (bad) (bad) adc cmc icebp jl lock and into inc cmc mov pop pop sub sub push jge or xchg mov mov scas (bad) nop bound mov (bad) test rcrl xchg jmp mov popa cs pusha add lahf sbb cltd mov push adc js out fwait in dec dec or add mov jns pop outsb push xor inc imul mov sub add mov lds mov pop (bad) xchg cmpsl mov mov test cmpsl loopne and pop sub pop mov mov (bad) xchg stos ss inc inc inc inc inc inc inc inc pop pop pop pop pop jb fistpll fistpll (bad) mov (bad) mov xchg dec push lret mov dec andb mov sahf jg xchg jb jb jo mov je push iret mov insb insl inc mov cltd sahf cmp mov mov les push mov or cmpsl xor out xchg mov xchg sub or and xchg xchg jmp xchg out dec lods add stos sub fsave xchg rcrb sti adc push jne into mov lds push in pop cmp arpl inc jb push and dec outsl (bad) jecxz,pn outsl mov inc test pop add pop push add xchg cmc lahf movsb mov pop dec or cmpsl cs iret movsb stc mov push and ss out xor loopne std push lods lods (bad) jmp leave add ds cltd push xor push push mov leave mov cmc dec dec inc and push push bound adc add jge (bad) ja dec mov cmp or cmp out dec push sub rolb pop cmp jle psadbw push push push mov pusha push cmp movsb movsl sti pop mov mov leave mov int3 test mov sub add test lcall aad adc push xchg je push sbb mov push xor flds dec mov gs sbb cld arpl jb push or push enter or lods dec stos pop mov scas xchg add jg popf aas (bad) xlat inc xchg adc test push outsb mov mov mov repz iret nop stos mov cmc scas ljmp aad push add cmp mov fnsave jge popf push xor adc xchg push or and arpl add add xor int3 repnz adcl imul loop cmp and mov xchg rcrb pop lret (bad) rorb push sub cmpsl cs iret popf sub repz mov xor push mov pushf fwait cli add stos dec dec test mov ss ljmp mov jg cltd and xchg in sarb (bad) adc or and push and imul das (bad) insb cmp addr16 inc popf push push push push jbe push jne dec dec dec dec dec stos mov jecxz dec mov xchg lcall jge jnp popf xor xchg xchg mov cmp shrb es test push pushf popf push push sbb push jne pop test movsl mov dec stc gs int3 je jg xchg stos stos test scas (bad) je mov insb (bad) outsl insb test stos jl mov pop pop sub dec dec dec dec repz (bad) stos mov movsb movsb (bad) mov jnp jns sbb idiv cmp icebp and movsb mov xchg mov int3 test push inc jecxz inc cmpsb insl mulb inc aam stos lds xchg mov rorb in dec or dec or (bad) andb and sti shll (bad) cld std adc push das push sub adc sub stos (bad) sbb outsb pop fcmovnu fsts adc iret push mov out mov ljmp cmp xchg loopne loope mov lea pop fdivrs cwtl fnop popf adc push mov rcll push ja lea cmpsl movsb movsl mov fcoml jno (bad) (bad) pop cli mov je xor int mov movsb shlb fildl shrb mov call int (bad) loopne cmpsb out mov pop mov stos pop and dec push or aam or push ret bound inc dec cs and popa or lcall push cmp or inc jae lds (bad) jno popa sub cmp push push mov push out add mov xor pop movsb std xchg rclb sbb test orb dec adc mov xlat mov pusha mov addr16 in lods lods std jb add movsb cwtl test scas and sahf lahf fnsave or or or dec bound nop scas out lcall jo sbb inc push push je movsl push call test arpl (bad) (bad) push jbe push jne dec dec dec dec cs pop lahf or repnz dec stc sub cmpsb xchg xlat (bad) mov dec call out cmp scas xor icebp test lock fadd lods inc pop (bad) adcl adc dec dec pop or pop ja push data16 js fidivr ret push sbb jnp ja sub push imul adc inc push and addr16 imulb enter imul inc dec mov movsb clc pop (bad) sbb mov (bad) jmp aad sub pop ret shl (bad) in test cmpsl inc neg jg xchg jle xchg mov pop dec ja mov push int push cmp arpl xchg jns fdivrs jg pop fbstp aaa je xchg hlt push xor insb add or sbb and (bad) xor xor nop xchg mov add fadds imul jle sar lgdtl mov xchg sub ficom sub mov inc nop (bad) addl lcall xchg repnz ss cmp repnz adc dec and pusha and gs test add aas idivb in movsl repnz test jae fimul packssdw dec xchg flds test xchg daa push add ds ljmp lcall movsl push and fmuls lret dec enter rclb stos (bad) or add shlb cmp aas test adc push aaa sbb push cmp scas or iret aam daa les adc lcall or mov stos stos test scas test mov out lods pusha sub inc fs xchg mov pop pop pop push jne dec dec dec dec fwait inc test mov jnp jns les jae jno push je push push xchg dec lahf lods cli fs push add gs test (bad) jbe jle adc push xchg jo or dec ret mov int es je cmp jae fldt pop jge jae jno mov das mov xchg inc xchg inc cmp mov repz mov enter or loopne mov lcall movsl es push lods mov dec subb dec cwtl test arpl push cmpl dec arpl lahf pushf popf xor jge ja jne inc jle leave sbb pop jo pop loopne xchg movsb inc jp mov pushf imul test jmp mov inc inc adc mov pop sbbl fsqrt pop push movsb mov int3 pop aad mov in dec dec imul cwtl lods mov call insl sahf xorl push cwtl cltd xchg imulb jg adc fincstp xor je add sub mov loop orl ds divl pushl repz sub lret (bad) sbb shr sbb pop fistpl pop repnz fldpi es adc in iret ss in or cmpsl or or sub cltd inc push mov or push mov xchg sbb shrl sub cmp add cmp (bad) (bad) fdivrl sbb xor push mov dec and popa iret sub pop push push std jge mov aam inc inc push imul les lea pusha xor out dec mov mov xchg (bad) hlt adc push pop jl ret ds loope out loope and push mov lock and mov subl scas in and lret add add xor sbb xor lcall jne cmp cmc mov outsl xchg inc and ret fwait popa and sar (bad) push leave sub push leave aad push add int3 icebp inc call mov ficom jge mov enter push lods mov xchg sub cmpsl movsb arpl mov or imul lods pop dec stos ds rolb add test loop mov ja popf push xor push ja in mov sub out or pop js jo stos inc push jo sarl mov sub call jmp test ja pop pop div aam lret fmuls sbb frstor push in cmpsw movsb movsl cld inc scas mov mov push jo mov loop pop inc outsb dec lods ret mov ss sub arpl push xchg (bad) outsl mov inc and popa mov or out pop cwtl add jae inc sub push insl xlat inc sbb pop cli push iret mov cmp jns in aas aaa int3 call out mov cmpsb cmpsb cmpsl les mov add lock xor mov xor xor (bad) insb push inc das or pop dec pop cwtl cwtl cltd adc push jmp dec dec dec inc inc and popa ficomp push mov mov (bad) je sub outsl insb add ret or inc dec (bad) lock rcr imul aam imul aaa pop jl insb add adc adc or cwtl mov xchg mov xor xor and sub and stc sub lcall bound add imul dec dec and arpl cmpl push loope movsb imul mov insl add shlb pop mov test inc outsb mov mov iret ret adc inc loopne movsl (bad) outsb and xor std and repz pop call test ret sub jp fnsave pusha dec xor pop js adc sub jbe data16 jns add outsl inc push xchg inc mov je mov cmpsl jo pop inc inc sbb mov inc pop pop sbb fldenv pop js out cmp iret aaa int jecxz int push mov pop pop les mov cld or jno xchg mov je push adc bound daa data16 ja test pop jl cmp jno insl jp adc jno sarl sub insl pop dec jb xchg sbb push aaa xor jno dec lcall outsl insb add add rcrl mov hlt daa fdivrp xor iret ret int iret ret adc (bad) or and cld pop fcompl mov daa adc pop dec scas in and lret add add xor sbb xor lcall jne cmp cmc mov jmp frstor mov jg ja xchg jo icebp bound dec insb mov fstpt inc pop fcompl xchg fcomps fisub xchg enter lret out or outsb xchg push or adc fdivr and inc icebp mov adc xchg and jmp pop pop jp dec pop xchg add sbb addr16 xor push mov or leave sub sbb es pusha xorl aaa sbb sub in repz lret popf pushf (bad) insb icebp jmp inc inc and lcall jno mov notl iret lods mov mov sbb push repnz lods test dec xor jmp lods lods (bad) les dec fsts cltd shll jb dec xor dec or iret cmp xor jge pop fnstenv xchg dec cmp jg push push aad push jmp add push mov mov test sahf dec mov test jp mov or in push jno mov pop mov cmp cmp mov adc loope xor (bad) sbb add fdivl sbb push xor rcll (bad) push add push add dec stos cmp loopne xor int3 repnz adc sub ljmp cmp push in sbb sbb sbb fildl (bad) jno repnz xchg fsubp enter or jg lods mov add in mov and cmpb popf mov xor pop xor push ret sub es shll lods (bad) fidivr add add add dec lsl jne leave sbb int loop push and cmp stc xchg ja shl push cld sbb dec sub aad ds xor gs fcomps stc rcr (bad) xchg mov mov xor mov or cmpsb fadds test push je push push or and addl fdivrs andb push in sbb push shrl jns dec and and dec icebp xlat js and jo jp rclb dec outsl add mov pop pop mov (bad) mov nop xchg nop jno es test lret out mov mov cmpsb cmpsl in mov mov xor rclb es jns inc inc pop pop pop pop pop mov lods lods dec lahf pushf ljmp push gs dec pushf mov dec dec daa dec xor addr16 test movsl outsb push out mov gs je xor imul ret fwait mov pop add (bad) jb cmp jmp xor jge mov (bad) and inc (bad) outsb and xor cld lahf lods stos icebp cmp jge scas jmp aad push mov ret or fidivrl mov (bad) pushf fdivrl fdiv xchg push fs aam dec lret jp lea arpl cmpl sub xchg inc insb mov sub jnp push imul insb mov xchg inc push sahf mov inc inc inc add pop pop stos test lcall or in cmpsl clc jge stos mov push push cmc pop inc push xchg int pop add and sahf lods popl xor add arpl sub sub popf mov rorb sub and ds js cld into sub xchg pop add inc aas stos dec dec mov or jno fimull mov pop add mov and fsubs cmp cmp aas aad test sub xchg shlb xor sbb (bad) adc push aaa jbe mov je int stos adc dec loope push dec int es je pop mov arpl push sbb xlat adc dec inc push jbe mov or sbb add push pop add fistp aam sub (bad) loop int3 fsubl or rcll shl pop mov mov push push push ds test sbb adc je test rolb jns push add inc xchg jo or sub cmpsl movsb movsl mov and outsb jns mov repz mov movb insb add sub fs gs pop sbb xchg mov mov and outsb cmc and mov xchg pop mov mov aad test sbb les lahf fidivrl ja jge popf inc lahf leave stos push xorl jns leave dec dec dec and push inc jp mov jle (bad) jmp mov jno in movsb xchg mov fisttpl add popa inc inc sbb fisubrl mov out mov mov lea sbb mov or and cld mov out out in in clc test stc push xchg inc pop jle adc add mov dec dec dec and fwait les jl inc and cmp fdivr hlt mov jo push sub dec sub and jl sbb pop test ds notb lods pop lods mov (bad) loope out inc in xchg stc sbb cmp sbb lret dec dec jnp jmp and mov pop jno addr16 clc mov mov ss stos or lods push out xchg movb mov xchg xor push xor psllw outsb xchg mov push add jl sub sub mov pop pop es negl inc lret xor push ja lods mov les push cmp outsl jle mov aaa jl dec mov out lea and ficomp cwtl cltd sahf lahf out insb out xor push lea cmpsl movsb movsl mov (bad) adc aaa ds lea cmpsl inc imul test dec or jmp fwait nop pop pop rolb jb (bad) adc into mov or repz cwtl lock mov daa and stos ja xor xchg pop add dec test mov pop add xchg repz roll lahf adc jbe push repnz or inc jae fistl dec jp jns xor div fsts jne jb (bad) loopne ljmp pop cli (bad) insl dec add ret jecxz je sarl jp xor push out mov cltd dec stos jmp mov mov xor mov sub add sbb add cmpsl aaa xchg ljmp scas or into idivl inc popa fsub repnz mov insl je jb mov je jmp mov and inc add xchg adc mov or hlt mov out xchg mov jmp adc hlt jb sub push push test scas jo push cs push subl cwtl cltd sahf lahf add fwait or outsl cwtl dec pusha dec dec shrd jo pop pop mov adc jp js aam fnsave push pop cmc cmp inc call movsl mov jns (bad) les and xor mov das mov lods pop (bad) and cmpsl loopne into sub rcrb push mov xlat or rorb shrb (bad) sub inc ja fdivrs mov pop push sbb or ss lret sarb popa jecxz es je cmp mov and imul test sahf test test lods iret pop pop xchg xchg test lret mov mov xchg mov sbb cli or mov jne subw adc shl js imul lods sbb jl cmc cmp jae mov gs mov pushf je into iret cmpsb inc jno es and mov mov and outsb sbb sub mov sbb lods mov mov fldl pop adc dec scas mov mov mov jns mov mov dec notb mov hlt scas shr (bad) out arpl in (bad) fld lahf fadd jp xor fs sub shll pop addb cmp (bad) clc stc mov ds sub sub jne mov inc jmp push jp fs aad rorb pop (bad) xor enter sbb xor in push rcl dec stc cmp cld xchg test outsb js jns repz test (bad) cmpl cmc test push adc adc dec dec dec popf add jecxz mov cltd pop outsb push cld arpl out repnz xchg mov mov add out orl pop pop jl faddp adc inc inc mov into lcall dec in ja les cld lahf cmp sahf aas cltd adc push xor mov ds or test push imul insb (bad) adc cld xor or (bad) imul xor addr16 lcall mov jg xor adc mov lea sbb cmpsl clc xchg pop push push adc or pop sbb mov push lcall sbb gs xlat jbe push push xor jae jne push lods scas mov stc stos dec pushf test outsb dec adc xor dec xlat sub cmpsb inc loop pop mov in jle popf mov loope or imul mov inc pop mov push mov xchg pop test adc pop pop (bad) jo icebp dec dec cs pop lahf or repnz dec stc sub cmpsb mov dec aad int cli mov dec jge jecxz addl sbb inc popf inc push inc push pop ja aam xchg or push lods and (bad) outsb xchg fisub and jns jg or and xor mov out inc sbb sbb pop (bad) icebp cwtl nop cmc jmp out rorl aad iret lods lea jne dec and ja ja push cmp xchg aad jmp ret cmpsb mov addb subl cltd sahf lahf pushf in insl in ss mov jne inc js jbe insb dec and mov add fistpll fdivrl sarl repz jnp xchg push sub pop imul scas xchg cmp sub mov mov ss mov divb stos mov mov inc xchg cli mov stc add mov int and or dec scas in and enter test cld adc pop pushf popf push xor or mov popf repnz dec sub data16 lahf rcrb mov repnz xchg push dec lods or add inc pop cmp pop jmp adc push inc adc fcoms into sub leave mov lret inc enter clc (bad) jne adc jmp stos out (bad) in or and subl clc lahf fldcw add ss subb (bad) insb dec sub dec es mov or pop jg loope repnz (bad) inc push cs (bad) and sbbl adc pop pop das test dec dec bound popa data16 js jle stc (bad) dec cmp lahf mov mov dec jp sbb xchg cltd addl xor stc test in xchg ljmp pop in adc lahf cs dec dec bound add jp sti xlat scas and ss push adc imul push add pop scas pop mov or fildll xor mov cs fdiv mov mov mov xor lret mov cs mov std scas outsb cwtl jo sbb jmp or cwtl pop dec in pop dec inc enter addr16 out mov cmpsl sbbb fs push je aam ljmp arpl addr16 insb dec (bad) repnz rcrb push xchg mov enter int adc and pop sti sbb std add (bad) mov (bad) test lods test (bad) add mov rorb insb adc popf push push push rolb sbb test dec leave in lea ret addr16 cmp js jle shll jo jno ja mov imul xchg inc inc (bad) (bad) icebp xor push lods lret pop out fimul dec outsl dec pop out mov (bad) fistpl inc lahf mov (bad) jmp aad sub pop ret lods lods (bad) mov mov aam pop jge cmp mov push paddsb pop push scas xchg and arpl adc lret xor fstl out repnz fist xor insl add ret pcmpgtd push test pop inc popa (bad) xor push pop lods fisttpll adc dec je ret movsb movsl mov pop inc rclb es cmp mov aas sub add add pop or fnstcw sbb mov push jbe mov cmc and and fs jne out sbb dec push jg pop mov pop cmc mov test out stos pop add xor inc js sahf cmp (bad) jno push ret fstl les shll xchg lret and mov and (bad) mov cmp das js out lea sti (bad) movsl xchg cmp add fnstcw fdivl pop mov ss or dec push pop dec shll and inc and loopne xchg cmp movsb gs dec xchg dec (bad) jmp leave jb lock jp mov dec pop sbb sti movl (bad) rcl negb mov fidivrl xor xchg push daa lea (bad) jg cmp pop gs jns,pt xlat mov data16 leave sub and sub fiaddl adc xorb or dec or sti xor cli xchg loopne sbb sub cli mov shll loopne repnz xor das loop mov mov icebp inc call sbb jmp mov dec rcl inc jnp adc aaa and add int mov mov mov push je push push out xor es bound and lcall pop js adc aaa jno std pop pop dec insb aam jae imul cmp lods and cmpsl jge dec pop mov adc mov mov inc or out lds test dec dec dec dec aam mov xchg aaa sbb dec mov in and mov cld pop dec popf mov jbe scas sbb stos cmp test lahf cmp push popf or xor dec jne push push punpckhbw inc xchg dec iret sti outsb mov cmp repnz sarb jl xchg jb (bad) loopne add push aad (bad) xor ljmp outsl (bad) push jge cmpsb cmc rclb xchg jge (bad) in adc in cmp std pop mov xlat in mov cwtl xchg out push sahf sub (bad) stc test faddl jge in repnz lret int3 dec dec or xor iret aas add dec movsb dec (bad) pushl adc mov inc loopne,pn sub outsl add in lret add ffreep (bad) divb aam mov mov movsb (bad) popf bound jnp stos mov and mov aad scas or mov (bad) shll es xor ljmp and nop int3 fldt add out lcall negl lret push ja mov cmc (bad) push cs ret call sbb xchg jb mov jbe xchg into insl iret dec popa mov mov testb fdiv push mov scas dec jnp int3 adc scas in mov xchg mov sbb mov adc or enter xor cmp jp pop mov mov mov in sub xor imul or pop push mov mov ret sbb xlat inc adc adc fldcw iret sub mov dec sub fimul cmc icebp aaa cmpsb arpl stos out push in and and xchg fnstcw mov std push cmp dec or dec test jg enter insl bound je jp (bad) stc (bad) adc jne lret cmp cmp arpl sbb inc test test pop lcall mov test data16 js jle mov arpl xor scas stos test dec popf test (bad) push xor dec push fdivrs popf push push push or or movq jno es jns pop mov fwait fs jae jge lret xlat adc cmpsb pop inc je call xchg pop cmp mov adcb fwait xor or in xchg mov xchg mov mov mov pusha xlat mov or inc inc inc inc inc inc pop pop pop pop pop push js insb adc or push jne dec or dec dec dec cmpsl inc push out fucomp notb inc xor inc insl sub pop pop add xchg mov mov mov movsb mov or mov push push test cld lahf lods adc sbbb imul in bound add dec mov fcom xchg jne ja rclb jns sub pop je adc lret sti clc mov mov sub pop inc xor xchg pop mov (bad) pop add in lret add ffreep (bad) divb movsl cmpsb dec movsb mov mov inc in xchg scas or lods addr16 dec addl sbb nop cltd dec scas scas scas inc addr16 cltd fisubl popf pop pushf fisubr (bad) adc into lahf aaa push push shrd inc push jge int3 int pop push jb sbb pop sbb mov ss insl push daa jae ret inc inc add sbb pop (bad) jb lods sub mov mov lret outsb mov (bad) mov mov mov jl mov aad int mov stos stos in out aam (bad) insb push pushf and lcall arpl push bound jne dec dec roll xchg and cmp sar mov sbb jge jae pop sbb inc aaa dec hlt shrl pop push jge mov mov xchg xchg rcll mov lods iret cmpb popa bound mov mov subb push call int (bad) fs cwtl stc fdivrs ja fwait dec cltd sahf je sbb jbe orb mov lods fbld gs addr16 xlat or and dec imul and gs mov pop jns pop ja jne dec dec dec dec jae mov mov in clc test mov dec lret sbb jnp dec jmp js jbe jl dec into sub jp bound lret jae or dec and jnp add mov cmp cmp or loop mov cmpsb pop inc mov mov movsb mov inc hlt cs fcom shrb mov orb xchg dec movsb lahf dec cmp cmp repnz mov gs dec js dec push daa in lods shll je stc imul dec push mov insl addr16 insl ret mov jo xchg mov mov push imul jo push fcoml pop xchg (bad) roll mov mov sbb mov jg pop gs push enter into lods mov mov xchg cld push scas xor push xchg xchg mov arpl dec pushf dec push lods (bad) add push fcoms jae imul pusha outsl xor inc js lret out adc orl cmp dec sahf data16 sti or xor xchg inc push je insb imul inc outsl insb or bound xor int js test xchg xchg lret mov test mov mov jge fwait mov (bad) push subl ret inc popf jp (bad) cmp jle rorb mov popa bound mov jp dec leave push xlat scas jmp cmpsl je push gs in lds push mov or movsb outsb outsb outsl mov xchg inc inc mov lcall cld mov nop xchg (bad) int mov aas imul movsb sti pop loope repnz mov jecxz loopne xchg out mov scas scas lea icebp push (bad) sbb mov mov push mov pushf inc dec dec dec fcmovu pop and add jnp jns lahf pop mov inc mov adc ror insb inc inc inc sbb mov (bad) push cmpsb test dec mov test cwtl mov in xchg stos stc push test cwtl icebp dec adcl in popa sahf lahf ret ja inc jbe sahf xchg jl popaw push push push ss jo push jge int3 clc mov inc data16 cmp fnop std repnz and sub inc outsb outsl dec pop inc xchg inc pop inc inc pop mov inc fcompl rclb enter int3 jne test (bad) and call sahf (bad) ja and repz mov mov dec out dec sahf xchg xchg cs sahf xchg sahf lahf aaa jae jno imul inc jb and xchg cmp cli popa and adc mov or sub imul dec inc (bad) lds stos sub jg push jo mov iret jno xchg mov push test in (bad) push subl jbe clc in mov cmpsl popf test insb cwtl inc sahf aad lret movsb adc push xor insl jle push inc dec int3 int xchg adc xchg es inc jo jle push push mov adc imul cwtl cltd sahf cwtl fisubr ficomp je or adc jp js jle xchg cltd lcall leave adc push addr16 test sbb add pop (bad) test enter sahf pop loop adc shl lods xor test outsl dec int3 lock and out jns pop js in jno pop jb (bad) imul inc sub add add mov mov (bad) mov aaa cmp cmp and test pop pop xchg xchg nop xchg mov xchg mov mov stos test pusha popf subb adc iret lcall popf dec push push ficomp or and and inc popa pop pop cwtl out inc cmp clc in pop cmp xchg pop mov hlt fmuls adc xor fimull mov mov (bad) mov aaa cmp cmp and push out movsb and mov (bad) mov cld test sub je dec lods (bad) and out imul bound mov push jbe stos dec sub mov dec push add int iret popf xrelease loopne pop sbb in lea movsl pop mov hlt fdivrs add ret xchg mov pop xchg xchg test lret mov mov xchg push add xchg das adc mulb mov lock divl into scas xor xchg pop push jl cwtl fstl lret jae or inc outsb aad adc (bad) insb dec sub mov (bad) fs jno js fucompp xchg add push mov imul inc inc inc stos mov mov mov nop xchg out scas push mov das loopnew jp push sub sbb push repnz (bad) roll xor mov push xchg jle pop dec scas jae pop bound test mov jg aaa jp fimul push outsb or outsb add inc push push dec movsl inc push cmp mov jo cmp add push mov cmpsl inc inc cmp xchg aaa sti xor les inc test ss cmpsb sahf fwait lahf pop add xor fwait mov cmp dec pop add dec test int3 mov add jg test ljmp fisttp imul mov insl vptestnmq in jnp pop jle jl repz jno xlat je jmp cmp or loope xor addr16 mov xchg nop negb dec sub xchg popa add sub cwtl mov mov int3 dec dec jmp sub sub repnz (bad) (bad) jle (bad) mov sahf adc mov mov jmp jnp imul xchg lods push adc imul jle xor jns sub lea xor or inc je movl xor negb enter pop cmp adc jecxz mov rorl icebp idivl ja out mov jnp jl pop lods (bad) addl cli push fidivr adc pop in or and popf push adc pusha cmp jne cmp xchg bound cmp imul add add imul cmpsb test sbb mov inc shrl cmc xor lea push jne and fmull cmp mov cwtl scas sub jp dec lods add cwtl fwait movsb push inc jg cmp in or dec inc (bad) and les or ja loope addr16 jnp cmp push push sub test jmp add inc sbb test (bad) (bad) rcrl pop (bad) mov ja xchg into imul daa lea movsl movsb inc stos pusha cwtl mov mov dec ljmp dec outsb dec scas in rep adcl jle test fcomip sahf sbb divb paddsb pop and dec dec bound pop fdivrl dec cmp xor dec pusha inc jb jo xor mov jb in insl inc mov mov xchg fistp adc aaa add imul xchg movsl mov sub jg mov xchg xchg xchg push jb stos mov ret inc out jb test std test cld scas xorb (bad) mov xchg je inc lahf cld leave dec dec fadds ficoml adc jnp xor dec mov or js hlt aad cmovg mov test pop pop scas jns cwtl mov pop pop xchg mov add loop jecxz mov cmpsb andb in movsb mov xchg mov xlat leave xchg adc scas scas lods (bad) in jae ficompl test hlt adc or test and popf nop test dec test gs loope,pt scas (bad) cld std jle inc push mov mov out cmp popa mov inc inc mov in lds pop (bad) (bad) mov ja xchg into imul mov and sbb mov mov xchg sub xor push data16 add fwait xchg js (bad) push sbb arpl jne jne enter add ljmp out pop jb jo xchg inc push jge jmp in aas add inc les jge mov push mov adc or inc dec scas mov cmpsb daa sub sub mov mov sub sub lds xchg fdivrl dec popf rcl or lods pop lahf or and popf notb loopne cmp jne ja clc stc xor dec out dec lock push je mov push ljmp jnp arpl fcmovu fist push push push jmp (bad) inc adc (bad) mov push xchg cmp shlb jmp xor jmp popa xor sub (bad) sub mov sbb test xor pop scas div paddsb sub xchg cwtl loopne xorl cli (bad) pushl jne dec dec sub jge lret inc std or es cmpsb jb fcmovnbe xor std mov cmp adc leave xor mov sbb pop xchg cmp repz mov sbb int3 mov or lods lods pop cmpl jp sub xchg mov stos stos test push lretw xchg mov pop jnp jle (bad) pushl jne dec dec sub popa xlat ljmp dec outsl pop mov (bad) jae rcll insl (bad) jnp adc jae dec stos mov inc mov adc in mov dec cmpsl and sahf mov xor mov into mov sub adc mov add sbb push ja mov andb jne imul pop jnp mov push push or mov hlt aad dec sub outsb ret js aas insl out pop pop fcomp jnp (bad) mov .byte (bad) xchg aaa .byte cmp aad das add sub adc aad test aad mov mov dec dec xor aad stc test dec inc test adc sub das mov aam test or mov mov add daa cmp add dec or test test sub cmp adc dec das cmp aam inc mov inc daa cmc add inc inc aad aad inc dec test adc aad add aam dec inc and test aad stc mov aam xor mov aam stc aam add and cmp das add cld or test aam xor test or das or sub daa or dec or mov sub adc das test not aam sub clc or cmp inc dec test adc add aad test test cmc clc cld aam or aam daa aam stc aam add and das das cld or test xor sub or das or aad daa cmp add or dec add cmp test dec das cmp aam sub clc or cmp inc dec test adc add aad test test cmc clc cld aam or aam cmp or daa lods clc sub sub add jmp call shrl add rol ror not add add jmp ret jmp call rol xor mov xlat pop outsl outsl (bad) cwtl mov popf jle inc push (bad) cli cltd insl lea adc mov xchg or xor xchg sub cwtl cmp inc popf jnp mov lds sub int xchg imul fucom pop dec mov es cld loopne cmp in and jg sub les sbb pop out cli sub xchg loopne mov mov sbb mov fidivrl sar mov or stc ret inc pop mov dec (bad) mov punpckldq or inc xchg outsb mov test inc dec insb mov test (bad) dec daa pop popa inc mov sub test pushf xchg cld loopne cmp in and (bad) cmpsl xchg ret mov push cmc adc mov shl xor pop add pop out ret sahf jle lret mov loope xor nop pop dec and pop push imul movb out dec push push xchg dec xchg dec loopne int popf mov sub adc dec imul mulb addb rol cltd gs sub and pop movl imull mov add movsl lds xor mov mov lds add inc pop and xchg scas ret add dec and pop dec add shrl mov ret push mov or shld int3 es stc aad mov adcb or mov fs mov aas sbb add (bad) (bad) (bad) outsb lds jp or in into movsl inc (bad) jp fist and push inc jnp mov pop out leave mov push mov and and xchg lret and push jmp mov jno cmp xchg adc ret cmp jb test sti sbb out icebp stos cs (bad) movsl fucomi leave mov inc addl test stos xchg in test fs sub pop lock outsl sti andl loop push pop xor jl pop in mov shl aaa sbb pop pop jnp stc ja add nopl ja jb ffreep mov add mov incl lahf xorb pop mov sub test xchg add mov push daa xchg cwtl enter or cmp dec in sbb lods insb call xchg push add sbb outsb sbb cmpsb test add cltd or add jnp aam ljmp add stos scas and pushf xchg loop cmp addr16 push imul pand cs inc into ljmp or mov jge (bad) test inc jecxz pop pop xor (bad) jmp dec in sub mov mov mov sbb push mov jbe push shlb loopne popa cmpsl mov popf es imul mov push xor inc out inc pop cmpsl or dec inc pand fldl2e mov scas xor lds roll xchg in sbb hlt sub out out mov arpl sbb inc jae mov pop mov cld scas stos ds loop faddl pushf fnstcw jge sbb fs jns jmp pop outsl push loop lods (bad) sarl enter sub push imul jnp popa fs xlat leave mov lods and sub sub test mov aam enter xchg daa pop fcmove cmpsb xchg es jmp dec in lcall in test xchg mov pop lahf inc cmpsl xchg jbe xchg aam adc ljmp (bad) push xor arpl aaa loop rol push jge mov add xor jg cli push push push dec scas mov insb fnstsw sub in int3 test imul fstpt es ljmp lds or les pop jecxz cmpsl xchg es loop cmpsb test xor lds adc les jmp ret sahf jle inc cs loop lods lea fnstsw add lret scas (bad) imul fstpt push push ljmp or test insb dec sub jmp cmpsl xchg daa pop fcmove cmpsb xchg es jmp dec in test or les pop jecxz cmpsl xchg daa push loop cmpsb xchg es mov adc les jmp ret lahf jg inc cs loop scas mov fnstsw and in int3 mov insb dec das pand push push ljmp or test or int3 test imul fstpt es ljmp cltd mov jp cld fsub les xchg cmpsb push (bad) push mull fsubp js cmp and mov repz lahf je ds pop jmp ret sahf inc mov dec inc sbb dec pop xor add lret scas (bad) sub lcall ljmp xchg js pushf and fld dec sub jmp push fstpt push add push es jmp mov gs sub mov sbb hlt mov inc daa push mov cmp jge inc lds push dec cs int3 lcall int cs loop pop sbb fdivrs call mov jp insb dec das bswap lahf jp cli dec push push ljmp xchg arpl and jb inc pop test imul inc and mov xchg cs add inc pop add cs add push pop add bound add add test add add add jb gs xor cs insb add add fs imul add add je jb arpl fs jae add add jb jne insb push jb je arpl add jb jne insb inc insb insb outsl arpl add push imul jb add 