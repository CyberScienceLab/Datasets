pusha pop test pop cld xchg jb,pn lcall insb xlat nop test jmp mov (bad) mov mov and cmpsl lret jge test add aas in mov mov pop xchg int3 or fcomip sub fmul test push andl js dec or mov or and stos sbb out ret (bad) hlt (bad) adc dec call mov jg mov xchg mov mov inc imul ret inc test int xchg add in xchg iret out add fsubl inc dec in jmp push inc or test sbb (bad) loopne xchg mov cmp or aas aas (bad) and add das iret aad fsubl mov jo pop and ljmp and xlat add jmp jmp jb jnp mov pusha fwait aam and mov or sbb cmpsl out cmp out outsb lret cld aas outsb fcom fiaddl jb jne push fwait xchg mov pop add add insl jl mov xor cmc add and jge lret into imul xchg jg dec cltd jecxz sub push mov bound push mov mov sub imul mov mov fwait push adcl (bad) jmp mov imul sub mov dec xlat adc int3 mov push ret inc inc cld jle les inc inc js fnstsw mov add insl dec or jge orl pushf or aas xchg fwait popa std pop xchg push outsl adc aas xchg mov xlat add mov push sub ss mov ret outsl enter (bad) ficomp arpl lret out (bad) mov and xchg and mov and mov sbb mov ja mov mov push and pusha cmpl cld rcrl xlat scas add decl stos xor out mov pop push and test mov pop decb repnz mov imul xor stos mov lods out out sub push jne fcomp outsb test int lret push shrl adc adc xchg mov mov cmp sub mov dec fldpi and pop gs pop xchg mov mov aaa jle jp (bad) hlt das pop or test jecxz push shll sahf pop imul ss jmp xchg xor pop dec add push movsl test popa (bad) inc iret and hlt out imul mov jb repz xor or mov cmp cmpl cld sbb sbb gs out enter xchg aad movb push push dec mov adc fcmovbe push inc or dec mov (bad) por (bad) inc and ja jns pushf jg hlt negl insb int adc icebp out sub push dec outsb test sub xor cmpsl fisttpl inc (bad) clc ds xorl mov pop popf mov inc js and gs mov icebp mov ljmp cli xor jp aas pop lahf fmuls dec mov bnd (bad) cld add repnz test iret ss jmp xchg xor pop dec add push movsl test pop loop iret and movsb aas mov mov push mov xor push xchg into ds sbb lock xor pop jbe lcall pop popf xlat clc lods pop sbb lcall lods pop pop inc and cltd jecxz cmp icebp scas cmpb dec movsl sub imull cmc ret push sahf into stc xor ss mov cmpsb mov dec sub xchg lods fsub xchg pop out sub dec xchg (bad) cmp sbb nop sub mov (bad) push jns in pop jb dec ss push mov cmp push nop or imul arpl sbb lods xchg mov loopne push push inc sbb je pop scas dec lret fwait jmp adc aas xchg mov xlat add mov in lods adc fidiv mov pop sbbl lock sub inc mov lret add mov pop outsb pop dec popf inc mov jmp loopne and mov aad sti ss inc lret movl mov mov fs mov jecxz and inc jecxz bound sar push dec loope cmc pop fsubs sbb inc jle sub adc icebp rcrl ret lahf outsl (bad) out ret pusha mov jmp fsub fsubrs or fsubl xor (bad) rorl adc imul push adc xchg lret imul idivb lea xor mov jmp jp cmp rep mov dec push xor ret enter sub dec (bad) (bad) pop fucomip xchg pop dec movsb cmp jb ficom mov pop xchg (bad) outsl cmpsb lret add pop and and outsb add decb aas mov into loope aam xchg or scas and and cmpl push testl adc mov xchg int3 pop pop inc and cltd jecxz cmp push push mov mov scas std inc mov pop jns and aaa or sbb cmp jne int test fcomi arpl pushf fistl xchg mov mov or adc push xor les inc lods push mov movsb add loope ja pushf push or or popf adc addr16 jle,pn xchg test cli rol and sub imul jmp sub aam sbb mov test cmp sysret lock mov cmpsb adc or adc cmp jo xchg mov xor cmp mov push and pusha cmpl cld xor cltd ficomp jns push outsl test or mov out and pop lds insb mov jp jl push lahf or imul sahf pop cmp insb (bad) ret push push jge movsl xor (bad) jmp inc (bad) lret xchg mov xchg jns es call mov les jge push ret jmp dec cmp loopne xor jo jnp test xchg gs lods xchg mov loopne push and je inc mov push mov jmp daa xchg pushf xlat mov cmp dec jmp sub insb movsl ficompl dec movsb cmp bound mov pop in ret adc jl mov pushf adc pop lods shlb lock xor mov push xchg es xor (bad) into cmp out push jns repnz ret outsb dec and aas aas cmc cmpsl outsb int inc aas xchg pop mov mov out scas jb in cmpsb push push mov lds dec subl inc test fsubrs cmp pop xchg int rcrb xchg mov sbb mov sbb add stos mov mov xchg arpl sbb lods xchg mov loopne push repnz xchg (bad) or loop daa pop cmpsb fbld push ret test cli sbb inc inc xor fisttp and pushf pop lret jb ss mov push (bad) dec aas ds mov pop inc aam es lret das jecxz lods mov pop outsb pop mov push fcoml dec and add mov fwait rorb ss pop in and mov daa jp mov cmpsb outsb sti imul les xor jno push and cmp cltd mov into or mov lret repnz inc inc jle test repz ret lahf fcompl (bad) in pop out sub dec xchg add and sub sub jno xchg les loope pop in xchg mov (bad) mull mov add repz outsl sahf sub xchg push pushf xor (bad) dec push das push push xchg sbb mov pop shll movsb add test or outsl fiaddl sbbl pop test fldt add push movsl test daa scas movsb out enter outsb mov fsubr sub pop push fwait rorb ss cmp cli mov (bad) mov stos aas push and cmp pop popf outsb les out les xor jno push and inc jecxz mov ret aad or and (bad) lret xor push jmp mov lds dec subl sbb xlat loopne cmp xchg xchg xchg int jb call call mov xchg sbb mov cmp xchg lret pushf cmp insl cmpsb nop push push pushf add fild das push xchg sub dec cld das pop cmpsb (bad) mov test jecxz or notb or and xchg mov fwait mov ficompl dec dec (bad) (bad) out jge out add inc lret add aas (bad) movsb sar out jb shll push xchg cmp ficoml and out or jno mov cld and addl outsb mov xchg xor repnz fsubp push and inc jecxz bound push mov xor sub imul mov fiadd xchg rcrb push and idivl add mov cwtl jno int3 cmp pusha lahf pop (bad) shl pop xlat aaa or hlt adc test or adc (bad) mov or repz jno cmp cmpl ds popa gs mov pop mov pop (bad) pmulhw sub lret jo jl push cmpsb (bad) adc add cli xchg jp out add out jge adc mov push jmp ds movsl ret lods mov sbb ret mov jecxz lods out mov mov mov add ret stos push fbld dec mov sbb clc sub out cmpl cld sbb dec (bad) les and inc insl sar call fisttpll inc inc jbe inc insb insb in inc jl repz outsl out pop pushf movsb lods jge push (bad) push sti out or icebp dec xchg mov paddd jbe xor cli jno lahf fcoms xchg adc mov mov imul test or pop sub stos mov mov mov out in shl and jo sti lret and pop test les jp pop fwait imul cli xchg cld add jno xlat bound lock xor call loop movsl mov lock jp xor xor decl repnz push adc push mov in std loopne adc mov mov sbb cmp cmpl cld jae lods pop xchg stos (bad) aad clc stos ljmp dec xor sarl xor xor mov insl mull sahf repz add rcrb sbb push and inc das ret push cmpsl loopne mov popa jb call call jns dec les push jmp cmp mov sbb test and pop gs pop xchg mov daa mov call inc cltd xchg cmp pop cmpsb inc dec sbb jecxz ffree lods inc jns cmp lret add inc mov and pop jecxz test mov incl cmpsl imul mov mov mov cli jne (bad) popf pop pop mov jl (bad) add push leave sbb sahf stos stos jns adc mov push push out ja dec int leave out cmpsl arpl push fld add insb cmp inc jl jle popf (bad) jne mov inc mov outsl inc jg fsubl push sbb xor mov andl and or es call or mov imul pop and fsubrl push cwtl cmc mov dec pop xchg iret mov out in shl and jo lock aas lods in sarl jp (bad) hlt das pop or test mov in and sub cmp out je,pt (bad) push dec mov pop dec xchg test push dec movsl cmp lahf mov push cmpsl add aas outsb mov enter mov sub sub and rcl cmpsl ss xchg sub mov lret push sub (bad) into in jge call jne ljmp in xor inc jp loope movsl fucomp aaa insl push and push mov mov pop out stos xor loopne stos mov lods out out sub lods ficoml cmp aaa insb aaa inc add repnz jmp push inc or test aaa mov mov cld pop mov dec jecxz sub cmp xchg cmp push arpl or ja imull push enter mov lret mov pop loop das loop mov in and sub cmp test jmp pop dec test sbb xchg ficom jbe jmp sbb pop sbb jl pop (bad) cmp and rorl mov mov jno aam push subl push jns jns outsb xchg (bad) fnsave xor jge in mov cmp .byte sub adc das cmp add aam inc aam cmp cmp aad and aam inc aad inc cmc xor mov daa cmp mov or daa xor aad das aad cmp adc das not daa mov adc and and mov add clc stc dec aam inc cmp dec sub xor inc and stc add dec xor dec sub mov mov add cmc mov test not aad das add dec add aad inc aad adc mov add inc aam cmp inc aam aad stc and xor add or sub sub dec sub mov mov add aad stc xor or dec stc sub and adc cld aad mov aam xor aam test and cld mov aam inc inc dec das aam inc or cld aad inc cmc aad aam aam and mov and aam aam test xor sub or das or aad daa cmp mov lods sub jmp ret rolb sub ror jmp jmp rorb enter dec jmp ret ret add rol stos loop cmp or jmp adc jns or xor sbb cli ljmp jp push ret fidivrl sbb sti pop fisubrl imul jnp jmp aam sub push dec lods xor jnp sbb cmp cwtl inc cmp sub into sub int pop push dec in fisubr dec neg loop scas lahf (bad) mov das fidivr roll prefetchw sub fld (bad) fcoms fstpt mov sti sbb mov stos (bad) jb xor mov mov push jb mov sbb lods xchg xchg inc fs inc arpl mov std in je loopne test push lds xor (bad) je aaa rorl ss mov inc iret (bad) gs push loop addr16 aaa daa pop cmpsl out sarb pop pop jle sbb daa cwtl push and les dec inc sbb cli sbb cmp jecxz inc cmp or push xchg mov sbb cmpsb xor cs imul rcll (bad) in pop nop call ror push hlt push aam scas pop adc jbe mov enter (bad) cmp (bad) push push dec das sub jecxz mov iret or sub outsl xlat data16 popf sub addr16 and cli loop outsl outsb in lcall and jno adc lret mov xor (bad) aad fwait lds or xchg test push mov xchg mov pop xchg cmpsl ja push js adc js mov pop jbe loope stos jns push cmp dec inc sbb jmp mov jnp fmull sti mov stos fdivrs out push sbb jg dec enter fisttpl inc fisttpl sbb cmp jecxz int3 (bad) fwait jle jae enter cli push hlt xor lods test mov loope push and add ret popf lods insl ret outsb (bad) xchg dec jno push cs mov jg push fs aaa pop push add loopne ror fwait mov or and loope aam mov insb pop inc je add mov (bad) sti (bad) push and movsb adc jl scas fwait andl scas cmp add mov fadd movsb push xchg fistpll std inc pop sbb push lds mov aad inc mov jne or faddp and xchg jge push inc ss pop repnz cli dec cmpsl xchg xchg and or jmp mov aam inc cmp or push jmp lret nop stc mov and lret jmp mov scas aad jp bound lret or loope jp cmpsb xchg mov imul ljmp mov add add xchg fwait rorl adc sub in sub inc cmp fwait loope mov add pop mov ds insl decl out decl jp dec inc inc incb lock dec (bad) test out sbb outsl sbb pop mov jne add sub xor push inc lods jge push dec mov adc xor xchg push push inc xor sbb xchg push (bad) mov inc jns arpl je sub and xchg es sub movsl out push aam adc jle addr16 jle in outsl lret xchg inc (bad) mov lods xchg jg cwtl aas int3 mov adc pop cwtl imul test and and add mov xor stos lcall and lret xor cmpsb xchg mov push cmpsb xor pop dec in pop hlt es iret mov daa adc in pop (bad) daa mov add dec cmp out fmulp mov pop dec sbb push mov (bad) mov cltd pop dec dec cmp (bad) cli loopne dec cli mov push dec pop and add loope (bad) mov popa push sbb and add loop fdivrs push inc xor adc repz ret mov xchg xorl inc xor adc in les push inc xor adc cmc in lds gs inc xor out (bad) mov xchg xchg push inc ss pop mul xlat (bad) mov xchg xchg push inc aaa daa pop or call cwtl mov pop dec cmp sbb stc jmp cltd mov pop dec cmp sbb cli ljmp jp pop dec cmp sbb sti jmp lret mov imul sub or in fmul mov insb pop dec cmp sbb std in (bad) mov insl pop dec cmp out fmulp mov outsb pop dec ds (bad) out (bad) mov outsl pop dec aas das pop (bad) lock (bad) mov nop xorb inc xor adc icebp loope (bad) mov xchg xorl adc repnz ret xchg (bad) jb push inc xor adc repz ret mov xchg xorl inc xor adc in les push inc xor adc cmc in lds gs inc xor out (bad) mov xchg in sbb push sarl (bad) mov xchg xchg fldz sbb cld mov sub mov cmp cmp mov dec scas jmp or sbb rorl cmp fsubp lods sahf add lret mov ljmp iret jecxz mov lods pushf arpl dec nop pusha scas inc (bad) jg inc (bad) mov aas xchg popa mov dec mov mov loop popa mov push (bad) out (bad) cmpsb push and repnz add loopne daa xor adc mov adc icebp loope sub inc mov adc cmc in and xor xchg enter xchg (bad) js xchg pop aad xchg in xorl test hlt in les inc xchg stos push out xchg or test push lods ja cmp pop lret jbe push mov pop add fistp add pop add lcall add add add xor loop mov add (bad) notb inc les xchg adc add je inc add inc inc daa push aaa aaa add add daa inc push push movb inc add add daa inc push push (bad) adc (bad) divb add add daa inc push push (bad) fs push push aad and dec aam inc cmp clc dec aam and dec aad dec or aad sub inc test aad dec cld mov inc aam das das cmp add or mov mov clc cmp aad das or dec and sub aam aad dec daa cmp mov mov add xor clc cmp aad inc dec dec cmp adc and mov aam and dec aam inc add mov sub xor inc dec stc test aad dec xor dec sub aad cld and not sub daa or clc dec and clc dec sub dec inc aad adc daa aam aad clc dec stc cld aam cmp inc aam mov xor daa aam aad aad inc adc sub sub dec aam aam mov and mov cmc push dec aam cmp dec stc sub and das mov and test pop and aam mov cmp add aam adc cld mov aam inc inc dec add clc sub cmc add cmc aad aam aam and mov and aam aam test xor sub or das cmp lods stc stc sub dec jmp ret ret add rol add add jmp call add sub sub add add add xor clc jmp jmp arpl pusha test push inc xchg ficompl push in test push push push push dec inc inc sti jnp dec dec (bad) dec aas inc inc inc inc xor imul cmp loopne scas cs sbb jmp mov call add enter jae jmp inc (bad) push add xchg out std xchg addl sti jmp jmp jbe fucomp frstor in jmp (bad) mov gs (bad) adc fimul shr or lret dec int fcmove leave enter clc inc ret das repnz mov out mov test loope stos pop test push xchg pop rcrb lcall mov lds (bad) ja and xchg mov jle jne mov js cmp je arpl movsl out insl push fs lahf call arpl pop xchg xchg fstpl mov push push push inc dec pop or xor jge inc repz inc xor mov xor add xor pop es stos sub and movsb and or adc add mov xchg outsb imul push and add dec repz lock jne ss aam repnz sahf push insl in icebp js fldl xchg adc aaa enter pop fidivrl mov aaa (bad) in (bad) add pop cmpsl xchg add mov les rol cmpsl mov idivl mov mov mov cmp stos stos iret or mov dec inc push popf pushf fwait fwait movsl les cmp cs inc and xor and cmp daa cmp sbb cmpsb adc pop adc mov es push outsl pop int3 insl repz pop addr16 inc pop clc popa adc mov xor out inc fnstenv mov (bad) stc inc icebp and lock leave enter mov xor lods mov cmpsb sbb push mov dec fiadd nop inc xchg into daa insl or push into cwtl xchg xchg lea add add ljmp repnz lock push out popa inc cltd in loop mov int3 shll or mov jmp add pop movsl sbb dec enter (bad) inc dec xlat or xchg xchg in xor loopne scas cmp pushf scas push aam mov push fwait lcall cltd pop inc rorb (bad) adc mov pushf adc jl jp inc jge and repz cmc push pop insl insb imul movsl out ret call push in sbb push mov push out out lahf pushf aad (bad) or lret (bad) xor push inc inc inc lahf fdivl fsubrl xor aaa ss sbb fwait outsb scas mov mov xchg sub es mov pop xchg mov and movl pop jmp (bad) mov or push add add sub push movsb fild jge dec dec dec jbe lahf sbb fldenv fdivs xor jne jne push ror rcl iret retw mov in stc dec (bad) and xorl scas mov mov pop mov sub jbe stc xchg test and scas fwait xor popf adc and sbb sbb mov push je sub sti jp push jg loop push outsb call sti pop pop adc jecxz addr16 push mov pop call push push aam bound in sar dec dec dec dec popf dec sti js ret inc cmc int arpl sbb out mov sub sub sub scas add mov push adc adc push or mov push fs cmp add (bad) std cld sti sbb inc hlt repz out out in in jmp jmp in loop loopne (bad) (bad) fcmovu fcom (bad) aad rcl rcl iret into int lret lret mov rol mov mov mov mov mov scas lods lods stos stos test movsb mov sahf popf pushf fwait lcall xchg xchg xchg nop (bad) mov mov (bad) addl ja jne jae jno outsl outsb insl insb imul data16 pusha pop pop pop pop pop pop pop pop push push push push push push push push dec dec dec dec dec dec dec dec inc inc inc inc inc inc inc inc aas ds cmp ss xor cs sub es and push sbb sbb push adc adc push or or push add add (bad) std cld sti cli stc clc div cmc hlt repz lock out in in jmp jmp in loop loopne (bad) (bad) fcmovu fcom (bad) aad rcl rcl iret into int lret lret mov rol mov mov mov mov mov scas lods lods stos stos test movsb mov sahf popf pushf fwait lcall xchg xchg xchg nop (bad) mov sub inc sub sub jle jl jp xor fbld sub sbb fbstp sbb push adc push mov push out push push push push push iret or mov add repnz stc out ljmp aas ds repnz into out mov (bad) mov cs (bad) jmp int lret lret pop push sbb (bad) fcmovnu mov adc push or rolb add (bad) jl xchg ja mov scas repz lock je lcall lea fbld popf jb cmp addl int3 lret sub imul imul mov pop outsb insl push mov scas scas or inc and push popa dec pop or xor cmp sub aas xor inc mov add add imul add imul add add add xor loop mov add (bad) notb inc les xchg adc add je inc add inc inc daa push aaa aaa add add daa inc push push movb inc add add daa inc push push (bad) adc (bad) divb add add daa inc push push (bad) fs push push cmp aad inc aad dec dec add adc add adc stc cld mov sub mov add stc xor dec aam inc aad cmp xor aam sub xor inc dec stc test das aad or xor cmc sub aad cld cmp adc add mov aam dec das add dec test inc aad adc test add add cld aam cmp inc aam aad and test cmc xor dec das aad inc daa aam inc sub daa xor dec aam aam mov and aad stc xor test sub das add add das mov dec mov dec cmc aam xor aam test and cld mov aam inc inc dec das aam inc or adc test xor aam and mov and aam aam test xor sub sub add mov daa cmp add or cld lods stc add nop add add dec rol clc ror jmp ret rolb sub ror jmp jmp rorb enter stos loop sbb mov aad hlt and or cmp push pop movsl imull lea enter out cmp push mov push fisubl jle bound rcll loope mov scas push and repz iret push jne xchg inc add stos push sarb adc xchg cmp aad mov dec fsubl sbb loop gs cmp int add jo add incb cmpsb and push pushf ficompl sbb pop cmpsl xor hlt inc inc jae aas sub cmpsb cmp inc enter or pusha inc fwait pop (bad) mov jb inc mov mov (bad) or cs push stos sti frstor cmpsb frstor lretw dec divl lret fwait incb dec aad test pop insb mov mov outsb inc dec cwtl mov rol or xchg pop in stos scas mov sbb sub das mov rcl jl iret repz scas dec mov fldenv mov icebp hlt popf pop lock sub shrb jb addl adc dec dec stc mov xchg sbb fistp sbb mov inc xchg pop nop add xor in xlat jge js sub inc lret or pop (bad) decb iret (bad) out inc cs fistpl (bad) (bad) mov jge jg mov inc stos fiaddl adc inc xchg push push jnp mov dec inc mov (bad) lea mov call jp outsb jbe or sub or std or jecxz xor dec pop push popa in sub add inc inc xchg sahf insb push and add (bad) testb pop xor rclb mov loopne inc iret fadds push in mov rorl add fmul imul adc fnstsw mov push call and push popa fimul pop add cltd sbb push popa into arpl in push add mov sahf pop out xchg int ficomp out mov inc dec cmovg jle dec sub mov stos in cltd mov outsl lahf mov and daa dec imul push lods test sahf nop icebp negb es jae or popf inc lods popa push mov fsub movsb push imul ret and fcompp (bad) rolb cwtl sbb popf and orl inc inc or mov mov les or arpl nop popf mov mov jns push adc (bad) fiadd cmp dec or fidiv repnz outsb leave jg addl in push jmp stos bound pop mov push fnstcw outsb mov jo popf daa scas ss mov or ret iret push xor scas pop and lea sarb fs pop aas sub clc add jo lea mov jae sbb xor xor icebp iret xlat fucomip pop (bad) cmpsb and subl hlt std addb inc jae test jp mov pop xchg fldz pop das cmp and xchg loop jb mov xor pusha stos xchg inc bnd movsl out inc cwtl sub push adc jbe (bad) pop pop and decl jne inc pop (bad) scas mov inc mov or mov sub test mov mov stos cmp imul mov arpl sub inc or jl repz lea mov sub pushf pshufw movsl out sub shrb jns and xor je flds or pop into push fbld js xchg sbb dec (bad) out push add mov gs (bad) push (bad) sbb lahf fsubl incb cmp dec (bad) je test xchg pop cmpsl xor dec rcrb jae test mov enter repz xchg sbb (bad) push fsubs jb mov sub xlat pusha call xchg sbb cmp out clc orl mov aad out testl dec aad idivb nop sbb dec aam in incb cmp dec rcrl cmc jle xchg pop test rorl jecxz hlt jge mov lahf das mov imul add adc enter ljmp scas ss jb orl and xor loopne stc (bad) or inc into push fbld js xchg sbb dec (bad) out ja mov lcall frstor jle (bad) sbb push fsubl incb cmp dec (bad) je test xchg pop cmpsl xor dec rcrb jae test mov enter repz xchg sbb (bad) push fsubs jb mov sub xlat pusha call xchg sbb cmp out clc orl mov aad out testl and inc fldl push sbb sahf sahf mov pop je js mov cmc jle jecxz push adc stos and xor push lahf das mov mov mov hlt add adc add mov pop orl and xchg test mov movsb sub inc sub cmp in fs sub aas inc fcmovnbe fucomip stos xor mov dec dec pop ljmp fsubl (bad) push loop icebp clc adcl (bad) je addr16 imul mov into fdivs cmpsb das mov fwait lahf lods xor jbe pop adc fsubs jb (bad) addr16 ds dec stos xor in lock add xor xchg sbb cwtl sub mov mov add add js add js add js add add add xor loop mov add (bad) notb inc les xchg adc add je inc add inc inc daa push aaa aaa add add daa inc push push movb inc add add daa inc push push (bad) adc (bad) divb add add daa inc push push (bad) fs push push or aam inc cmp clc dec aam and dec aad dec or aad and add clc test mov mov mov cld add inc aam das das cmp add aam inc dec dec aad cmc aam cld or mov mov dec sub aam dec or daa xor add cmp das add xor daa mov adc mov aad mov dec stc dec inc dec sub stc mov das mov stc test aad dec xor dec sub aad cld cmp dec or add xor aad das add dec dec inc aad adc test add inc dec cmp aam aad and and das aad inc daa aam inc sub sub dec aam aam mov and aad stc xor or dec stc sub and das mov and xor and aam mov cmp add aam adc cld mov aam inc inc dec das aam inc or mov lods add clc add sub xor add add xor nop add add add jmp ret dec add rol add not add add sub add sub stos loop je sub push cwtl js subl jp fisubrl test js xor popa scas daa lods mov fildl loop mov mov mov test push pop rorb out xlat push sti add dec sbb pop fldl sub mov pop test out fs scas sti daa fisttpl push jnp mov cmc push dec loopne enter daa loop cld (bad) fbstp popa mov or out cs and fisubrl pushf mov push enter mov or adc stos add out sahf clc andb sbb adc inc icebp or rcl jb daa pop rcr in jle and pusha sbb (bad) (bad) aam cmp cmp mov jmp xchg push cs and call repnz (bad) sub xchg popf out jl inc adc cmpsl sub mov outsb inc push loopne dec faddl into fnop jge adc pop or out mov xor xor cli (bad) fstl scas dec push (bad) lahf lods inc jle data16 jg ret aas mov mov jae jne jecxz cld or and cmpsb pop enter push dec push mov loop adc jg jecxz jle std (bad) adcl es push test push dec lock xchg sahf add pusha adcl jo ret jg (bad) or mov daa pushf aad dec rolb dec rclb test cltd in push push outsb cmpl jb inc sahf pop push add xchg xlat pop adc outsl addr16 xor pop test cmp push in data16 (bad) into sti cmp cmp data16 mov int hlt push push arpl pop in imul stos stc mov sub pop cmp pop rolb (bad) jns jecxz loope xchg jne pop dec add rclb jp scas stos push fs cmc icebp pushf pop push in xor das and (bad) pop sbb or sbb jg cld cmpsb push rolb jns push pop sub movsb lods aaa test adc (bad) push int3 jg mov or out inc mov xchg or mov jge xor sbb in scas enter sub stc inc cmp inc and loopne push (bad) xor dec lock int3 in mov enter xlat sarb pop outsb jnp jge ffreep push out lret xchg xchg ja,pt add cmp leave inc popf sti or add ret xchg cmp aad jmp mov call push das sub jno gs xchg ficomp xor pop jnp sub fisubrl mov test cltd add mov fsts iret xorb (bad) add ja call and ret loopne lods mov jnp mov cmp cmpsb ror nop mov pop pop cmp cli popf cmp jb in (bad) mov in cmpsl popa mov nop insb mov divl or mov rcr mov and add mov je push call aad out xor scas js pop push (bad) in sbb xchg hlt sbb outsb inc mov xor and push xchg mov int3 mov pop jmp outsb or adc (bad) scas jl mov and jmp or add pop push xchg notb shll mov (bad) pop in or xor movsl into sub mov xor (bad) out push jns adc xchg inc cmp pop repz aas push mov sub scas mov sub push bound cltd cmpsb mov std enter dec jnp mov cwtl xchg dec cld jmp loop cld or xor mov or jns mov fstp testl sbbl push jo stos mov int3 fdecstp adc cmp sahf mov sbb inc bound test or xor push outsb jnp mov fucomip stc push and jp xchg mov and cmp jb lods leave (bad) jecxz or xchg adc cs push test repnz push arpl popf mov sbb inc bound test or xor push xchg mov fnop cmc adc inc fs mov sbb xor jp mov fstp testl (bad) lahf lods leave jmp dec push test repnz push bound cltd cmpsb shl std or and dec jnp mov adc cmp bound mov or xor mov or jns mov fstp testl sbbl push jo stos mov int3 fdecstp adc cmp sahf mov sbb inc bound test or xor push outsb jnp mov fucomip stc push and jp xchg mov xor mov inc xchg push out sti (bad) jecxz or lods jge adc jnp pop or mov pop hlt add xchg xchg rorl inc bound dec jge repnz mov (bad) in lods cmp cmc adc inc sub mov inc loopne push pop jp mov sbb loope pop and lods leave jmp sub stos and repnz pop adc testb loop cmp and mov push bound insl lock or into fstpt cmp lret insb push jmp and test aam into push clc xchg push orb xchg fdecstp adc push xchg and cwtl sahf mov cmpsb add insl pop jno loope sub cmp test rol jecxz sbb repnz in pop push mov lret and add add add add mov add mov add mov add mov add mov add add add add dec gs gs xor cs insb add add fs imul add add je jb arpl fs jae add add jb jne insb push jb je arpl add jb jne insb inc insb insb outsl arpl add push imul jb add 