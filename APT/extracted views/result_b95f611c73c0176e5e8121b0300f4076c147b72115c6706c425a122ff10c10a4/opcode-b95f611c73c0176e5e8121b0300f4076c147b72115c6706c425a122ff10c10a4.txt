out jle mov pop sbb fcmovbe es adc not test popa in in pop xchg adc icebp popf imul push cwtl inc push in gs dec xchg fidivl jp rcrl movsl mov and pop cs add cmp ljmp xor and ljmp loope je cmc leave push add lds cmp sahf inc (bad) fs pop daa cmpsb fidivl test cs xor (bad) mov lods push sarb decb push cld inc popw outsl inc xlat add pop imul push test rcll test cmp sub xchg call jne leave lods (bad) icebp mov and pop aad mov imul icebp adc mov and setnp pushl popl bswap pusha mov jmp mov movsbl pushf call loope (bad) fiadd mov aas bound popa out add or cld mov movsb jnp (bad) stc test lcall adc hlt add and sub rcl cmpsl nop sbb xchg jge repnz fwait stc data16 shrb popa (bad) aas jb push in add jno (bad) sar add nop out mov in add jns in push pop fdivs ds and push add sbb pop orb test sub mov mov std stos or push push mov push jp xchg (bad) cwtl pop js das mov cwtl mov fwait in or pop mov xchg ljmp mov popa sub insl and cld fistp cmp sbb add sahf popa ljmp scas and iret scas pop mov imul pop inc xchg mov out loope add dec jbe dec mov nop (bad) jge pop xchg cmpsl cld lock cltd pop push push or bound fdivs inc ds mov sahf rcl xor imul push cmp or push jp nop jecxz enter cld or push les jnp xchg push cmpsl push mov mov sti xchg sub mov cltd push pushf add test cmp xchg xchg xchg adc das push test add jmp xchg ret cmp (bad) repz arpl (bad) cmp xor sbbl les and ret sub jb jecxz cmp lds (bad) sub sbb xchg in roll jge inc stc dec pop in ja pop stos xor mov adcl sub das dec bound jno cmp add ljmp ja sahf pop add jmp jne ss mov push scas add cmpsb stos pop imul test pop add cmp inc mov mov xor dec mov rcrl imul insb xor adc ss jle out (bad) movups xor outsl (bad) cmp mov pop mov inc sbb sarb sbb xchg fwait xor jns jecxz push dec xor fwait sbbl nop scas mov jmp dec dec scas leave xchg push jns insb cld mov xor sbb pusha icebp adc push jmp push mov sti fldl jbe jno aas (bad) jecxz or push mov mov jl fmuls push gs jge decl push push push in pop add dec xchg ja push push divl cmp imulb test aas insb cmp cmp push dec cld inc pop inc pop inc test sahf mov js mov call mov or cmpsb mov and (bad) cld loope jb imul push ljmp cmp lea jmp cmp pushf movb mov push lea ja inc inc call sub pushf test pushf stc repnz movb call bt and jmp pusha mov bswap movl not not lea pushf call push push xchg pushl push jmp not mov cmp cmp pusha jmp mov push (bad) mulb faddp add dec cld xadd sbb bt shr bsr pushl mov movsbw add call mov pop mov jo decb outsb insl rorl out inc sbb lods mov popf dec jne cmc lret repnz aas xor jmp in std xchg in std fwait and in (bad) jmp pop inc sub sub jecxz xor and mov ljmp cmc or add lcall addr16 inc or xchg jge loop (bad) je mov inc jnp jbe jg push or pop (bad) jbe test ret mov rolb incb push mov jne pop jo mov cmp inc ror mov cmc out stc int3 mov add xchg ljmp adc push stc pop cmc rclb push adc cmp jl cmp dec or das mov pushf out pop pusha push out lock adc sbb jbe xchg jmp out mov fs cmp xchg fldenv jne adc add int3 cmp fidivrl mov fcoml mov jecxz out push fbld ss sar mov scas add fwait sbb cmp addb sahf add cltd xchg scas xchg mov add add sub rep bswap mov movzbl jmp lea jge dec test clc jmp mov push pop lods into mov push cs mov lods adc into push mov or outsl dec and dec ret hlt dec mov adc dec jb bound aam mov lock iret out xor popa stos cmpsl fsts std (bad) and fs inc repz lods gs mov or lods xor sbb or pop mov (bad) pop mov mov dec mov es es data16 in push push inc ja xchg push adc dec pop jno pop mov mov mov rorl and pop aas xchg sub xchg mov ss (bad) out xor outsb pop lret jns add lods push sbb rcrl mov scas rep mov mov push (bad) xchg add adc jno dec stos lret rcll xor ss jb (bad) es mov jb mov push inc imul dec aam cmp dec shl arpl fs les (bad) in jmp adc push jp dec pop pop (bad) xor mov movsl test int3 jb mov add daa into aaa inc aaa mov sti add sub xchg push leave std rcl sub pop lods loop leave push lock std std (bad) addr16 arpl mov ror mov mov pop sahf ss ljmp in push aad push pop roll xlat and test adc add xor xchg ret in xchg push push movsl aam int3 (bad) jle mov pop fcmovnb cltd or dec adc inc mov pop scas xor xchg sbb out or mov enter pop jno pop lcall mov mov gs lret pop jg (bad) sub dec jp adcb pop (bad) xor inc fnstsw je jg xor adc leave scas sbb movsb mov sub or rcl jmp out fimull jl aaa mov test pushf dec mov xchg sti inc push cld jecxz (bad) xor push cmpsl mov adc mov insb adc pop lods xchg xor push pop mov dec adc or and in jno pop jmp cmp movsl pop imul pop pop mov ror rcrb flds (bad) lret lret mov test mov sbb aad mov js xlat xchg jmp and sbb or lds jae jns dec jb (bad) ja jl mov mov stc (bad) mov mov add out jecxz or sub push add or dec repz sbb out out test (bad) xor imul xor notb out jo mov mov pop push mov insb sub add mov jno lock jno jle je sti add push mov and xor fsub loopne adc sub inc push or cmp adc adc dec repz popa fidiv inc sub cmp dec rorb mov pop lea cld ficom aaa dec lea mov movb in aad mov js adc jo,pn repnz enter sahf in loop ljmp pop pop test pop add jg repnz bound lahf mov ja jl lret enter imul sub fs ja call (bad) sbbb stos and aaa xlat out (bad) lret inc fwait mov mov mov cltd push jns add je lret movsb sti push stc es loopne push sbb arpl lods ret jbe lret js mov and sbb mov (bad) push enter push xchg and cwtl enter or popf push adc test movl push jns inc push fildll and jmp shll frstor mov add mov jmp into mov hlt lret (bad) cld stc or cmp inc je leave push dec push in iret (bad) out (bad) lahf jno push jae faddl pusha lea jae push lea jmp inc push or push ljmp mov and cmovs popf popa or (bad) jns stc fucom icebp xor cmp les sbb dec mov adc xor xchg lahf aas add stos cmp test les ret sbb lds (bad) aam je (bad) aaa adc pop jecxz out xlat leave stos movl push jo add cmp push mov jg pop stos jne mov pop xchg sbb inc stos mov rcrl mov jae pop lcall pop push push aas and adc cwtl xchg dec lock xchg in mov push add imulb push sub jg mov add les sbb sub xchg (bad) xrelease (bad) in arpl shll stc push mov xor andb xchg dec pop pop mov mov pop jmp xchg xchg mov jo cli lock gs (bad) mov stos cmovp jg jl xchg movsb test inc rcl add dec pop add stos adc sbb das hlt sub pop addr16 cwtl loope cmp cmp vpmacsdql enter stos jae jae mov fs leave xchg mov jno push repnz out nop push lea jb cmp push pushf movb cmpb pusha jmp sbb icebp stos aam cmpsl call insl mov cmpl lods adc scas inc sarl xchg out (bad) insl rcll stos mov jo fildll in (bad) jnp lcall enter je arpl aad push adc adc jecxz vpsrad es inc push dec arpl xor ret jne dec push test inc inc cmp lfs (bad) mov popa aaa mov (bad) sbb add clc sbb (bad) aaa xchg mov mov fs push scas loope jns not not movb not mov movsbw lahf movsbw lea pushf call cmp negl push mov add xchg rorb inc pushf add cmc lret aam and or xor mov mov out shl out out or cmp xor cmpl cld or sub jns fistpl xchg mov jae pop cmp movsb xchg add les imul mov icebp jge adc into push ja sub sahf roll dec inc adc sub out mov insl cltd lds inc sahf dec xchg sbb and (bad) fucomi (bad) pop lods lcall xor or aad sub sbb mov popf ss xchg xor lds jo call push test mov push loopne gs roll lret fsubs push sbb cmp out nop in scas mov or jge mov push stos lods shl sub or test add stc mov mov sub test mov lret jl sub inc iret sub test mov jl pop xchg lea xchg xchg movl push aas lcall (bad) add cmp pmullw xchg in jp,pn inc xchg mov stos adc push push cld mov inc in aad pop xchg mov add aaa jl sbb test test mov mov fwait hlt ljmp repz fs dec mov sbb pop cmpsl mov jl pop icebp out add outsb fwait mov je (bad) movsb fwait icebp rcrb cmp sub insl loopne hlt dec movsb lcall gs (bad) loopne push cmp jl scas sbb fwait jecxz and pop lret xchg mov jno push fdivs popa push add cwtl lea mov movl lea lea push movl pushl pusha movl pushl pushf pushl popl push pushf push pushl ret cmp pushf movw pushf lea jae pushf sub mov shrd adc ror mov bswap pushf rcl mov cmp call inc push or push dec xchg add hlt push inc js jnp push mov adc cmp (bad) shlb and inc dec jmp std or xchg sub cmp mov test js negl stc mov push movsl pop call push loope data16 ret cmova (bad) xor dec das dec xchg dec mov popf mov test and xchg mov mov mov push mov cmp and cld movsb pop lea push lds push mov sbb mov cli movsl pusha fmulp adc jno push mov push or popa mov sbb cmp loopne sbb cmp and inc popa popf bnd ja xor scas outsb mov xchg je dec jne jne and adc outsl ds in adc and mov push cld add (bad) (bad) hlt or or dec inc mov shl cmpsl mov repz cmp mov or divb sub sbb adc push idivl gs mov xchg popf cmp rolb lret and sar arpl inc xlat addr16 int ja mov inc cmp dec pop sub popa add test pop add fadds das seto mov loop shrb dec or adc loope imul xchg enter and fs je call adc hlt lret dec adc push mov stc popa cmp xchg jmp xor pushf add sbb adc sti test dec xlat inc popf add jmp mov or in xor imul xchg add and invd sub test cmp sarl iret repnz mov (bad) mov loopne out sub mov scas mov pop repz mov push cli or stos pop scas rcrb xchg nop lock jmp mov mov mov mov adc xlat mov jns stos pop and mov adc lret std (bad) mov xor cmp jb pop mov es movsl push jecxz lret cld adc xchg or cmp dec aam aas out push in ret xor mov xchg xchg mov mov loopne movsl pusha comiss jno adc into adc add movsb imul adc cmp jecxz or jecxz scas add aad test cmp sub data16 xor sbb xor jge arpl fldt add cmpsl clc (bad) fsub xchg or jle fs mov push mov stos push lcall js and pushf mov arpl out js inc jmp ja inc leave xor je call jno,pn push mov pop popf add jmp push icebp dec fsubs (bad) mov loop pop inc sub mov cmc stos jmp testl cwtl movsl jns fs or test cmpl rcr es or flds js push inc adc mov lea push cmpsl push jmp pop (bad) dec or insb xor outsb jge push lret inc fmuls iret hlt jmp (bad) dec adc ds xchg pop cmpsb cld loopne pop cmp jo lds (bad) fnop sbb xor mov clc inc xor cmpsb out in cld lods xchg shll xor nop scas xchg push lret sbbb and cmp aam mov insb fidiv push loop cmp mov frstor fistp faddp mov mov fisubl (bad) adc fbld push lret xchg insl icebp adc iret js mov nop outsb xor lock movsb jp lods stc pop push (bad) insl xor outsb jle mov mov sub xor lods jb outsl xor pop insb lret mov nop jmp lcall ror mov movsb dec jne pop fwait jno dec cmp imul adc movsl sbb in inc cwtl sub std roll mov xchg jge ffree xchg lods cmp aam (bad) movsb mov lds xor loopne jecxz (bad) insb adc and cmc sbb cmp mov stos cmc test and jg sub pop xchg mov or lods scas enter xlat mov ret sub out imul daa cwtl test xor movsb les sahf add fildl xchg adc mov aam lahf in jae les mov mov inc and xor ljmp add into and scas xchg mov mov pop mov (bad) aad in lahf rcl pop insl mov jmp shlb ljmp add pop daa ljmp mull xchg mov insb rcrl je les jp aaa push daa aaa ffree sub cltd test pop dec push sarl lds (bad) push sub repz xchg or add adc xor test push hlt stc fs sarb pop movsl adc and scas push jmp sub sub push jno push ret dec push scas xchg push aad lods repnz adc out scas rcrb (bad) fcmovbe mov fcmove or add mov fcmovb enter divl mov jb bound fdivl insl cmp dec pop and loop nop incb cmp add mov sub dec push and pop pop dec ljmp xchg insb xor mov or rolb xchg add sub lods rcll cld arpl mov std mov int3 pop inc stc push cmp rep (bad) and sub in (bad) sbb cmp sub fwait or sub sbb cmp cmp (bad) and jp and push out pop inc cmp inc pop adc push and inc jp mov test lods xchg frstor imul imul les mov arpl dec xlat adc call cmp cmp arpl adc sti sbb addr16 pop or (bad) adcl sub loopne and jno,pn dec stos in fsubr pop mov dec adc adc add pop lahf add pop sub sub sbb adc sbb sub repnz inc fsubrl jge leave cmc add insl scas arpl and out mov test mov mov mov mov inc lcall test ljmp lahf and (bad) fldenv mov xchg imul cmp push bound jmp adc mov (bad) dec test jge pop lret cld scas dec enter sub mov clc es ds or repnz aad in jmp jecxz stc data16 pop lods xor rcrl dec mov add add xor sbb push pusha pushl ret jmp xor jmp lods push popa sub adc sbb rol ljmp loopne ret or arpl push je iret inc mov sub xchg mov movsb loop mov fist (bad) jmp pop inc fwait push adc in push idivl callw mov pushl push mov fwait xor jb and sub sub jo xchg sub mov mov jne add sub xor xchg jge shrb fdivrp dec pushf sub out xor imulb test (bad) pusha sbb adc imul add xlat sub jmp out (bad) mov stc inc and pop ss cs xchg lret enter sub sub (bad) mov mov sbb mov rcll cld sbb out cs jle iret outsb cmpsl sti adc or pop (bad) push sub jge movl dec add push mov arpl leave xchg dec jo pop es push mov mov push sbb repz cltd xchg mov (bad) and sub nop add (bad) jne mov ret xchg bndstx cli test (bad) push sub adc mov cmp and sub push jp daa aad ja std and jo cmpsb pop sub pushf movsl shrl jle sub xchg mov mov sahf cmp fwait inc or xor sub pop mov stc mov insb dec clc sub nop lret pop inc cwtl ret mov lods sub jno sub push jne add sbb inc or ret jl mov mov aad icebp std rcll ret lods mov mov ja frstor sub roll enter movsb mov mov orb or adc outsb sti or pop test dec popf mov sbb xor sbb iret (bad) faddl xchg pop mov xor bswap lock cmp jp sub aam mov cwtl popf mov push mov fucomip cs movsb ss cmp push icebp sbb cmp sbb cmp or sbb insb add and mov sub daa (bad) jns mov sub mov xor adc and mov pop cs sub pop fldcw adc aaa out lcall jb pop or dec rcrb lea lods gs dec mov inc xor xchg sub lcall mov sbb inc loop cltd xor xor daa adc ljmp pop aaa mov fs sahf cmpsb add sub add mov mov out mov (bad) (bad) jmp dec xchg lock dec or daa mov fsubrs loope mov jnp add xor xchg dec cmpsb pop cld jb out mov push push push mov stc lret cmpsl pop fnstcw bnd or int or push sub sbb lret mov mov icebp std int push lock mov jo xor push dec xchg inc mov cli fildll mov test leave sub push lcall xchg sub dec (bad) dec adc xchg inc jae push sub jns xlat push fs adcl aam sub jecxz gs sarb mov mov pop lret fistp int3 push test jecxz sub fwait adc xchg sbb sub leave sbb mov sub and jecxz push inc lret cvtpi2ps sub sub rol add mov mov movsl jnp mov popf mov and aas pop sti push mov shl dec mov call cli fidivl add pop stos pushf loope inc test icebp push ss xchg inc imull jp push mov inc xchg and jp sbb sbb push je (bad) in insb pop cmp mov into lods push sbbb push dec xor push mov inc mov mov repz sub fs push dec sub add mov mov lahf pop data16 cmp xchg xchg lock sub mov mov cmpsl test js jmp xor scas stos mov xchg xlat dec jecxz test pop mov stos clc cs jnp (bad) mov add cmpsb mov out lret mov or inc out ds dec dec out popa push sti pop xlat ds (bad) add cmp inc lods ss push scas ss test cmp dec xor xor out addr16 retw xchg sub out add cmpsb es mov (bad) xchg ss jb out ss cmp data16 ds pop mov repz aas fiaddl aaa xchg jp push cmp sbb dec xor inc inc ds xchg pop out ja push (bad) jno pop add (bad) jb or xor push clc xor pop dec insb sub push mov mov jp dec rorb jp arpl hlt jae outsb out sbb ret dec sarb mov outsl mov xor stos lret pop mov (bad) repnz sub pop pop push xchg jb out call stos push sbb or or sbb movl or loopne push ja dec scas repz jp subl (bad) jae addr16 push leave xor fild push inc push out (bad) aas xchg aas addr16 inc aas daa ret xor pand pop lcall fdivrp dec decl cmpsl and cltd xchg jns addr16 scas sub mov shr insb jmp lods arpl jae (bad) jle sti ret mov stos jbe aaa push fistpll lret xlat outsb pop stos test mov xchg clc insl push xchg ja push push aaa mov daa sub inc testb and or int3 aaa aas mov push out ja mov mov push ja push cmp mov outsb jae decl xor dec pop out (bad) xor decb outsl fcompl pop cmpsl push repnz outsl movsl jp leave xor mov idivl mov data16 repz (bad) movhps aam sub mov out cmp lret mull mov mov dec out push mov fnstenv push xor cmp daa jnp push mov jp arpl mov or imul adc sub pop in loope add mov adc inc mov out xchg in dec pop pusha cmpsb xor push and outsb xchg cmp adc sbb push push pop pop sub push jb jp sub (bad) xchg sub mov mov lret (bad) fisubrl fsubp out out repnz sub add or adc sbb pop and sub xor inc dec dec push push pop pop arpl imul jnp subl mov mov mov mov lret iret rcl fcmovnu jecxz out add or adc sbb and mov dec adc mov dec out mov divl xchg cmpsb fistp repnz push popa mov out les dec dec add mov pop jnp scas push cmpsb jo out (bad) out repnz xlat fimull notl cmpsb dec mov mov push pop adc mov into mov (bad) test stos xor adc cmp sti pop sbb loope mov add mov xor mov js adc xorl lahf pop ja cmpsb mov popf mov cmpsb mov add xlat out imul sarl fidivl shr nop mov outsb and jnp mov xlat jae dec fidivrl (bad) (bad) pop (bad) test pushf lret mov js addr16 into add mov or inc imul addr16 inc mov jmp pop jecxz popa mov (bad) mov dec mov imul mov insb outsl leave (bad) in ljmp mov insb ja mov adc test fiadd int das js pop mov daa iret fistpll daa dec sti mov decb inc push ja imulb add outsl add pop (bad) push push out mov insb sarb adc sti je xchg add dec pushf xadd aas mov test mov loop outsl jno sti sub inc push sub add sbb add push sub imul xchg jle jg notl sbb push fildl (bad) lret out mov cmpb shll lret iret jno out pop lahf mov (bad) pop inc (bad) js push lret loope lock push test cmp mov push test sarb pop xchg stos pop xor sub mov mov mov fsubl mov das divb xor cmpsl xor dec dec outsb call (bad) outsb shl scas outsb cmpsb call dec jbe mov test scas mov mov and mov inc cmpsb insb sahf push and dec call sub inc or cmp dec cmpsl jb mov push pop mov mov sbb (bad) out xlat sarb push clc (bad) in push in push xor sub out dec (bad) xor pop mov mov fistpl jne out mov add pop pushf cwtl mov stos outsl xchg addr16 xsaveopt mov lcall pop dec dec xchg pusha inc push xor or pushw xor js addr16 outsb pop xchg inc sub popf xchg ss xor jp inc lahf jb cmp ret mov xchg mov pop mov inc inc sbb inc jecxz (bad) out mov (bad) (bad) xor inc pop or clc add or loopne cmpsb xor lds push stos cmp imulb mov (bad) xor cmp ljmp (bad) sbb dec xor cs mov aaa xor jno xor xor jp xchg bound lretw mov xor (bad) sub sbb xchg sub sub xor sub inc dec dec push push pop sub push sub mov mov mov sub aam sub loopne call sub add sbb sbb xor inc dec dec push push pop sub imul addl movsl test sub rcl fldcw fucom in in icebp cmc stc sub add or adc sbb arpl xchg in addl pushf and outsl jl add cmpsb xor (bad) xlat mov scas add or in out ret xlat (bad) inc call iret arpl or aaa and push sbb shlb sarb ret das loop push ror jg or mov mov js aaa lret adc (bad) (bad) out mov bound or push in mov sub subl mov aam js mov jge sub into add or or je cmpsb mov fstl insb (bad) mov movsl add mov insl adc movl (bad) je outsl push movsb imull fldl adc mov xchg fwait xchg push lods push push cmpsl add std in stos mov stos das add add mov inc popf scas subps mov push stos outsl jmp addr16 sbb mov dec sti mov stc dec xchg outsl out orl push mov lahf and loop es jl add pushf sbb mov pushf jmp or mov repz fimull mov mov and xor imul (bad) cli cmpsl mov cmp clc jne fsubl jecxz aaa fildl insb fldcw mov xor sbb popa push pop or mov (bad) mov pop sbb dec pusha stos pop lret and daa lret outsb mov daa mov loop pop pop into (bad) outsb jl into xchg dec push pop aaa popa outsb inc test stos or or inc sub dec jno cmp mov xchg ret sahf mov mov jbe fldcw ljmp in push scas lret push stos outsl out cmc cmp aas and cmp xchg lret cld pop mov mov mov xor mov mov and or (bad) test cmp ss dec call inc pop insb sub dec xchg es aaa out outsb daa dec pop mov inc imulb mov cmpsb xchg dec xchg ret cmp outsb pop insb dec dec and sbb or jmp mov jmp cltd outsb mov jns dec pop jb mov inc sub or clc call mov inc cmp cmpsl aaa push (bad) dec pop outsb fldcw insb dec fdivs inc scas (bad) lods outsb mov insb dec dec scas or js dec sub mov inc imulb mov push (bad) fisubr jns sub mov mov (bad) dec ja pop into adc je sbb (bad) rorl xchg es cmpsb jo sbb pop xchg cmpsb mov ret rorb inc sti in jecxz icebp cmp pop cmp xchg xor ja rcl mov nop (bad) loop mov inc cmpsb lock dec bound fnstenv mov sub push or xlat jp rcll cs push ljmp and repnz mov sti repz cmp pop add lret mov enter mov std pop ss out shrb call fdivs or mov push insl jp mov jne outsb test xor inc xchg adc lret mov jecxz sbb xchg or sti push xchg xchg cmp cmp (bad) clc fwait mov (bad) jge out jp mov sbb in and lahf dec push jns cmp dec xchg (bad) mov arpl jp xlat xchg into imul xchg cmp xchg scas inc adc daa lods ret orb xchg out jns dec inc or pop ss fistp out iret ret xchg jb or repz jp mov adc mov imul jb outsb stos cmp mov sti or popf mov (bad) mov inc jmp or or pop imulb inc adc stos divb fdiv addb pop add push sub or pop xchg mov adc pop iret scas (bad) pop (bad) outsl xchg jno fistpll addb push pop cmp lcall xchg jnp push pop pop push js jno sub movsl jno or std loop pop sti xlat add adc mov mov (bad) xlat movsb adc adc mov jp jmp jp dec dec add jae add or adc jp push jno fisubr addr16 ss pop jnp pop rorb stos xchg cwtl sub and push das into dec push xor cmp dec pop dec push lea xor jae mov push inc dec daa enter mov pop cmp pop or into (bad) dec out xor dec addr16 pop jl (bad) dec pop dec stos cmpsb js dec cmp sub mov call cmp call or aas outsl push js dec into imul push aaa cmp jle dec mov daa pop jg daa or fsubrs fist add lds xor test pop rcrl outsb addr16 (bad) fbld jg cmpsb xor dec arpl xchg mov ret cmp add test pop jae inc (bad) imul mov push jle dec addr16 rorb push into sub mov xlat mov xchg outsb bound ja mov mov push cmp (bad) fldlg2 pop dec inc das dec test enter (bad) sbb vpmacsswd test xchg push dec dec push dec add pop inc push test jns movsb daa jmp test dec dec outsb outsl xor sub outsb push outsb (bad) sub mov js push pusha aaa divl lds addr16 mov mov enter jmp repz inc pop (bad) cmp pop test xor sub std (bad) ja inc mov call add popa cmc ds out xchg fisubrl jle mov xor push xor sub jcxz sti jl jp push mov iret or into jo mov push imul or xor adc stc push pop push jo leave subb jg mov ljmp mov push lea dec dec icebp lods mov gs out push outsb (bad) je (bad) dec jle jmp adc mov jns mov lahf scas sub mov test or (bad) pop or dec nop sub push loop push mov imul (bad) repnz jae cmp dec (bad) pop mov add aaa or dec pop push cmpsb outsb dec (bad) adc or subl jae xchg lret insb aaa scas (bad) ret pop (bad) ja mov scas daa aaa imul jmp xchg mov nop xchg pop or or inc (bad) insb mov mov xorl loop imul or xchg mov pop xchg imul cs inc ret add xor jne inc ds pushf out cli sbb mov cmp outsb jb,pt ljmp inc scas jmp out sub insb lods dec mov in sub jmp xor lock pop pop in mov frstor jne add pop and aas frstor jne add lock je mov lock je jl lock adc add or sub sub stos push jbe push dec jp adc repnz jmp add mov or clc fimull out mov out mov repz inc jecxz imul popf pcmpeqb or add mov fildl repz pushf sbb sub and cmp test negl je pop imul pop aam rcl stc out repz add inc jecxz popf enter jmp setp les (bad) mov in sbb subl iret mov lahf xor lret repz push cld push fdivrp add scas lea mov scas sbb mov (bad) xor xor fidivr leave mov dec daa xchg inc mov push and mov aas imul popf icebp ja and jg and (bad) imul xchg nop lcall ja lds mov xlat mov sub fistl scas cld mov insl xchg cld (bad) mov sti ss inc leave jle enter ret cmc lret adc jmp mov (bad) adc stos or xor xor push xor aas frstor outsl fiaddl scas outsb shrb jbe pop faddp mov into push and pop mov repnz idivl into pop sbb add sbb pop arpl mov iret rcr scas or mov (bad) cmp arpl cmp pop xchg sbb dec adc mov outsb xlat das cmpsb mov xor test enter dec stos pop pop ljmp xchg sub dec clc push mov or in jmp mov mov mov (bad) idivl mov push push iret inc pop and outsl push pop repz jb jb mov aam pop mov and sub icebp mov loopne daa je or mov cmpsb jnp cmc mov jg ret xchg (bad) cmpsb adc gs loopne int jmp pop test mov adc outsl jle mov push into lods inc mov sahf lret cs idiv fistpll dec mov push mov xor mov test insl mov mov pop mov jae mov insb push add push sahf mov cmp pop aaa xlat sub addr16 jnp ds pop sbb mov pop push sbb jae and cmpl inc arpl cmp mov sub xorl jp out xchg imul and ja jecxz mov push repz mov dec ret pop xchg sub js mov icebp (bad) mov imulb shr idivb test out aas lret stos (bad) mov fcmovne je push nop cmp xchg mov jno inc (bad) (bad) fdivrl sti aaa sub jmp incl enter jo fnstsw hlt sahf (bad) js cld test jecxz ljmpw ficompl das pop ljmp adc adc aas jbe and movsl fbld ficomp dec fisubl ljmp repz pusha sbb out outsl jle jae push xor xchg aas xor test jo movsl in (bad) jg ret mov dec jmp ja fstpt rcl xchg xlat loopne mov incb je (bad) repnz cld rcr dec (bad) sti aaa imul xor and push cld daa (bad) dec iret cmpsb lret into sbb mov cwtl xor jne xchg (bad) cmp repnz sar aas (bad) jne add jo dec add cld in scas notb (bad) div dec mov pop arpl fcmovne mov or push leave aas pop mov (bad) fildll lret outsl lret pop cld (bad) scas popa inc das (bad) mov lret stos pop outsl xchg cli mov js icebp sahf jo (bad) mov stos repz pop xchg push pop popa sub mov sti js rcll mov and scas pop add out xor rcr jle jp jl cmpsb aaa loope mov ret push jp fs fisttp push mov cwtl push xchg lret push (bad) adc loop mov sub pop imul (bad) int3 les jmp or lret (bad) jns and lret fidivl or add sbb pop insl mov mov and lret push cmc sbb cmpl imul lahf cmp mov lea jne sti arpl rcl mov gs into inc dec cmp mov fild sub jle cmp xchg adc and add mov mov adc sbb fdivrs mov inc js jo pop sub push add mov jmp mov arpl lea or idivl cmp jo shlb pop push cmpsl mov mov stc cmp imul jbe js out jp (bad) sub jne addr16 jno enter jp hlt mov fild (bad) lock pop ja xlat jne cltd ret and decl repnz dec outsl pushl push ss jbe idivl scas push inc repnz movl stc lock mov in mov jecxz xchg cwtl dec scas ret repz jns add jno (bad) and call jg outsl fnstcw cmp sti jg mov pop repz jo shr cld xor or mov scas jno sahf cwtl xchg fcmovnu cmp imul cmp int3 into mov jge jb pusha js push add aad sbb inc outsl leave arpl pop sbb jle sarl shl jb enter dec fstpl pop xchg xchg stc fdivs mov and shrb cmp shll cmp je xchg rol ret out out cvtdq2ps cli clc fidivr mov add mov aas mov cmp mov jb fstl loopne pop jg mov (bad) aaa xor popf ljmp xchg sub or popa inc dec out add dec inc jns mov jno popa (bad) dec scas xchg icebp ret mov sub push cs jnp push scas jp add dec (bad) mov (bad) repnz mov mov jae pop or mov jb insl enter push fiaddl pushl stos in cwtl iret xchg shrb xlat fdivrl mov dec dec cwtl insb imull dec jmp or push scas xchg lods outsb cltd icebp xor insb imulb aaa mov dec addr16 fisubr mov scas cmp fmuls mov inc out pop xchg stc in scas dec cwtl aaa or mov mov loope clc scas pop aaa mov dec cmpsb jb mov fnsave cmpsl insb daa sbb leave fldcw jb mov inc imulb mov mov pop push fnstenv jmp mov ja aaa jb mov int lret dec movl leave scas cltd aaa dec call mov inc cmp ljmp aaa cmpsb dec dec outsb mov clc inc or xchg aaa pop fldenv mov push pop stc mov scas divl xchg (bad) dec jmp sbb mov inc pop dec jns outsb enter pop inc mov inc jb sub pop xchg dec mov lret nop mov (bad) xchg pop push jnp iret push or mov dec push sbb imull dec cmpsb orb cmp mul xchg pop popa or stos fldenv scas jb mov inc addb scas jle xchg mov into add scas cwtl out mov scas js mov inc (bad) sbbb fsubs divb fidivrl ret lahf cli mov dec (bad) fildll cmp sub das cmpsl push push out mov out outsb xchg stos adc xchg scas (bad) push cmp out xchg xor sub ja adc or mov xchg and adc xor pop out ja push xor add pop out ja xchg pop and add pop out push ficoml jmp in sahf addr16 loopne or shrb in imul and sahf cmp adc imul cs aam mov cmpsb cmpsb jnp inc sub pop daa outsb sub dec cmp cmpsl mov jmp fimull dec outsl ja cmc or lcall add fnsave jno sti mov jo mov inc ja pop dec popl xchg out fwait xlat in je cmc and sub dec dec out cltd int3 aaa or jns clc inc or adc mov cld push (bad) xor add push repnz aas jb subb cli lahf dec cmpsb sub imul pop add xchg cmpb lock imul jae das cli push shr ret mov dec xlat shrl popa push sarb push xlat dec cmp neg mov (bad) mov idivl sahf pop call dec out jno lret adc lret pop popa ja or and mov (bad) push js dec js jp sti mov push (bad) aam or (bad) sbb mov loop cmp mov enter cmp stos or or addr16 fcmovne (bad) and xor mov test (bad) sub loope xchg ret mov adc inc xlat jae add cmp jp or cmpsb mov lods js sub pop addr16 and mov out addb sub loop cmp cmp pushf fbstp mov inc fdivrs push notl fcoml mov mov xchg mov lret lret xchg dec and jmp js sub mov pop sub dec dec inc aas dec cmp out jae xchg seta cmp or xchg sub out adc jb mov push add daa cmp ficom sub stos cmpsb push in pop push (bad) or movsl pop scas mov xchg jmp test xor dec push bound scas xchg stos xchg or fsubp mov xor pop sbb jp or std or sbb push cltd sbb out dec jae jae test idivl adc arpl xchg cmpsl lar jb push dec fxam and icebp nop mov mov imul cli fimul push daa mov out xchg or std fcmovb push (bad) cmp fisubl jae das inc sti lret mov cmpsl pop aaa sbb dec xchg pop pop and int ret pop lcall mov inc jp push dec push std mov dec ret mov outsl jecxz addr16 and pop js push stc and mov (bad) es inc pop imul fiadd into dec cmp jg outsl adc dec aad adc in mul pushf push dec (bad) cmpsb pop movsl push xor aas dec cmpsb daa xchg das aaa and sub inc dec das loop adc pop or mov sub setns mov scas jmp mov jnp jp push mov mov dec adc ja movsb sbb in repz stos push rcrl fsubrp sahf cmpsb mov mov jp movsl (bad) or push test outsb imull or mov fiadd (bad) push xchg push outsl repz mov repz and fisubr addr16 outsb mov ja xor jb mov xlat ficompl clc push add dec jo adc cmp xor push inc fwait mov dec insl xor lds ud2 adc lcall mov mov mov insb push out xor neg mov out inc or sbb cs inc jnp mov push inc fs mov cli nop cltd jae jb push jg lods (bad) movsb dec lret fistl cmp dec dec and xor dec mov addr16 dec (bad) or and mov inc call fcmovnbe arpl xor push daa pop (bad) jg add push inc mov mov xor and andl hlt int3 les push stos jl xchg outsl sub dec add or sarl nopl sbb stos (bad) ficoml cmp outsl mov (bad) sub ja cmpsl ret cmp (bad) notb dec ret aaa outsl cld inc arpl pusha lahf popf push push pop sub cmpsb outsl jbe sti inc cs jg push fbstp enter jno mov (bad) fidivr inc inc call dec out inc or int3 cmpsl subl sbb jl sbb imulb cmpsb xchg test adc (bad) imul das (bad) sub pop imul (bad) mov dec ljmp cmpsb fmull cmp ja mov cmpb and sbb cmpb leave sti fnstenv aas xchg (bad) jnp fsubl (bad) jno xchg xchg adc inc pop pop ret and imul dec out or idivl xor xlat ret jecxz pusha inc jmp std xchg ret jae adc sbb std add dec fist clc xor (bad) inc js push sbb repnz sub cmp mov sub dec sbb mov out neg cmpsb fistpll sbb lea arpl xor iret sbbl mov (bad) imul mov enter pop stos add inc add fcmovne dec xchg in outsl loop cmpsl pushf hlt stos stos pop dec out lret xlat xor or xchg mov pushf jmp inc xchg fsubrl mov out insb fcmove cmpsb or xchg ja jae xchg int3 je xor mov and dec or xchg ror push sbb inc ret and add mov mov inc fsubrl arpl push stos xchg xlat mov dec sti sahf push scas cmp out lret popa sbb xchg repnz cmp push pushf lock lock and push adc push negl iret dec sahf dec mov jb mov aaa dec sarl fcmovbe dec insb repz push mov or test mov (bad) push inc push fildll out sbb jno xor inc dec notb stc xchg pop push ja frstor jae pop outsb outsl dec insb dec and insl mov push cmovnp dec dec cmp jl out testl dec dec daa and sbb push adc adc dec cltd sub push dec fwait jb mov inc int3 sub jae mov jmp clc test mov daa push clc jp out jae cmp bound addr16 fwait xchg sub mov push pop jno outsl mov push push (bad) xor mov xor push pop sub mov ds mov aas ret dec mov adc cmpsb pop lods jp pop lret (bad) lods xchg or out das mov sbb cmp notb mov daa dec xor adc xor cld test cwtl xchg or cwtl cmp cltd dec xchg mov push cmp push push xchg dec imul jp mov xchg aas lret jp sahf dec xchg (bad) inc clc cmpsb (bad) mov xchg dec mulb xchg jp inc (bad) pop jp (bad) imul push mulb push dec aaa imul mov or mov inc daa sub xchg xchg inc (bad) jb dec xchg jnp test ds lret loop xchg pop lahf push aaa cmp out pop addr16 pop icebp and inc lods dec xchg mov lods sub test or push jp cmp fildll or push or sbb sbb mov jnp mov icebp and jp inc dec dec push mov inc mov pop loopne jge push imul bnd dec dec imul (bad) sbb jp mov push leave leave cmp push js fsubr cmp insl xchg push pusha test (bad) sarb inc (bad) mov xchg stos jg (bad) lret pop mov mov in xchg je (bad) xchg xor pop xchg test leave xchg inc ja cs (bad) sub enter shr mov pop out shufps arpl mov pop cwtl pop sub jns divb popf mov xchg cmpsb dec jge sub pop inc mov data16 or pop (bad) aaa out xchg push lret pop jno std push dec push not pop jbe lds cmp pop lret xchg (bad) or dec push icebp xchg xchg cmp cmpsl jmp test cwtl imulb push cmpsb imul loop lock popa rorb sub sub scas and cmp cmp lea pop mov dec jp or lret pop out push sbb icebp fcmove pop pop icebp mov mov ret mov xchg ffree pop sbb lret pop hlt mov add push cmp js insl aaa insb pop pushf rorb lods test or sub insb fimull in fisubl push xchg lret aas fild dec fcomps xchg jp (bad) pop mov dec xor mov xchg stos push mov (bad) jp mov lods dec call mov imulb insl nop xchg cmp pop or stos dec xchg pop mov cs dec add add lock fisubr scas sub into push lock stos fisubr mov or cmp je push push sub loop (bad) dec lods pop imul dec fwait scas in (bad) sub dec jno outsb sbb mov decb push or shll stos cmp arpl xchg sub fwait cmc mov dec add jae jmp outsb mov inc sbb icebp loop sbb lret mov mov stos or cmp sbb xchg push sbb push sbb mov (bad) pop jmp loop outsb mov inc sbb icebp loop sbb fimull scas dec into mov mov divb push ret stos insb or mov fwait dec outsl jecxz xchg push sbb xor cmp loop mov push push push in insb mov dec dec jb fisubrl loope in or scas es dec lock fisubr mov dec and icebp loop sbb scas push (bad) dec clc dec lds outsb mov rcll dec sahf insb xor popf outsb scas xorb sub inc hlt inc cmp outsb jno mov push (bad) or cmp loop pop pop push mov xlat or arpl fbld in shrl pop in jno xchg outsb mov and outsb insb sbb outsb cmp imul push shrl pop in jno xchg outsb mov sarl (bad) fucomip incb cmp into outsb push (bad) cmpsb js popa lock out or (bad) pop ljmp outsb pop jmp ficom or into movsl in (bad) loop je adc pop hlt clc dec imul outsb icebp fisubl in outsb mov sub (bad) or cmp loop and mov or cmp rclb fcomi js popf in into mov mov mov cmp outsb jno cmp or test sahf mov dec sub mov dec lahf movsb add or or or dec push or daa popl pop dec mov fisubr int pusha cmp icebp loop sbb fldenv and push mov dec and icebp loop sbb fldenv in ret xchg jne cmpsb mov (bad) or mov dec mov clc cmpsb add inc jecxz insb xor sub sbb scas push (bad) dec and mov xchg dec cmpsb imull jecxz (bad) dec inc mov jno es sbb mov mov push mov dec and icebp loop sbb xor lock push imul lahf scas push jp and insb sbb scas push jp and lret or and fstpt outsb insl scas adc sub outsb (bad) popf stos scas in (bad) dec mov pop mov lods scas fildll mov sbb cmp repz lret xlat and enter mov leave popa adc stos int pop cmp xor inc cmpsb pop xor jae stos ja pop iret add or clc fucomi int sarl (bad) or std sqrtps lahf aas xor add cmp cmpsl pop addr16 fisttp dec (bad) cmp std loope (bad) cmpsb ja aam cmc lods pop lret in add jecxz lods fildll cmp jecxz mov sti (bad) dec fcmove idivb lahf aas lock arpl leave jl pop fisttpl das scas jae insb add imul call cmpsb cmp pop cld pop pop jns or sbb add fsubp (bad) insb inc cmp subl mov out sbb dec mulb (bad) push mov pop mov push call rol negb push flds xchg xchg lret push out lret nop sti mov xor add dec jge shr aaa mov out cmp divb pop pop mov subps sbb out mov scas dec or xchg push pop or jns (bad) loope test inc lahf (bad) cli (bad) repnz cmp aam lret pop test ret call pop out jae sbb daa in mov shlb shrl dec jno mov push cltd (bad) repz lret inc xchg (bad) pop mov cli jnp sbb inc mov adc jbe fadds je or lods fs dec fdiv repz out xor fsubrp sbb mov cmc std jae dec dec cs stos jb jns mov add inc cmp fisubrl cmovle push jo xchg cmp mov (bad) mov ja pop aam ror aas mov dec les sub cmovle lds or lock xchg mov jp mov xchg pop repz pop jg inc and cs xchg xlat scas mov in xor out xchg mov popf aad sub mov push aaa cwtl fisub push cli out or adc fimull imul push es lock push leave jb rcrl mov mov jmp ficompl int xor aaa push movsl add outsb xchg lea insb ret push xchg mov enter pop adc dec mov mov out outsb mov sti lret ja sbb inc sub rcll das add aaa xor jb dec outsb dec xchg test int3 dec mov cmp push push push add loopne mov mov cwtl push (bad) lcall adc cmp xchg loop lods cmp das or push mov mov mov jb idiv mull push iret push xor repnz stc (bad) sbb mov cmpsl popf nop sub std mov daa int xor mov inc lods aaa fimul out or jecxz xor mov add push aaa imul js addr16 sub adc movsl pop arpl sarb addl adc add inc das xchg inc fsubrl ret mov mov cmpsb mov push ds sub repnz and mov mov add decl jp sub das pop xchg idiv ds scas ljmp push mov xchg out cmp mov adc shrl pop scas pop in out out mov jle or das mov pop jnp jge xchg aaa mov lods (bad) adc daa jne addr16 arpl or sbb pop sub pop jnp xchg pusha popf das outsb aas enter pop dec aas sub or push decl jecxz (bad) push jae or insl in fcoml outsl xor lods pop jecxz (bad) ljmp cwtl je fcmovu mov sbb sbb sarl cmp sahf sahf mov push repnz in cli or mov pop mov fildll dec loop repz sarl jmp ret adc pop out mov pop aas pop pop fisubl bound clc aam push add mov into stos cli mov xor pop insl outsb push ljmp out test jl outsl mov jmp decl inc adc cwtl pop jno dec arpl (bad) test sub jb,pn xchg cmp add jb mov dec push es lret jb enter xor mov sahf popf andl (bad) scas outsb insb scas aas fwait mov or orl cmp (bad) sbb jecxz add movsl mov sub cmp dec idivb in push mov dec mov inc movl jp mov lods outsl cmp or sbb mov imul jge add jno push sub rcr outsb data16 xchg sti push popl movsb lret fiadd enter xchg nop loopne aas clc lahf mov xor jb imul stos clc mov jno add pop js pop int3 lods mov xchg fildll mov dec xchg ja mov cli hlt je pop icebp xlat sub outsb cld out mov mov pop (bad) (bad) mov push aas mov jg lret cmpsb inc pop cli inc lret pop cmp or (bad) aam mov add call aas or mov (bad) sbb (bad) dec aaa out cmp fcomps and or jae push xor lret loop push cmpsl mov or call shrl scas daa mov lods pop fstl sub outsl and (bad) shl xor insl test (bad) inc iret popa jb push hlt jmp push sub out imul sub adc jne sbb pusha (bad) bound sbb push orl mov int push cld sbb ds mov (bad) push mov daa pop cmpsb (bad) cmp mov jge adc cmp fcomip ret push cli sub dec mov pop adc rcr in mov fild lret mov dec ret mov cmc mov subb mov jb out cmp jge lahf in mov mov sbb pop jle es pop loop sub pusha stos negb cmpsb push sub mov mov and and enter dec sbb and mov mov ja mov add lahf pop adc push and push jp inc (bad) imul adc pop mov cmpl int (bad) clc xlat or mov adc test repnz int jnp add add push push jne lock movsb jge (bad) je and lret scas addr16 sub ljmp fisubrl (bad) testl mov mov cwtl loop xor leave aas fs push rcll xchg stos ljmp push xchg sti int3 mov shlb les add out lahf ja in xchg popl push or ret movl sub cli jge mov dec mov pop xor add mov sbb sti hlt mov leave mov pop add or jo mov test and dec testl mov iret push sub ljmp in dec stos cmpsb imul dec fwait das sub in insl mov dec add push cltd mov hlt xchg push xchg pop inc les leave add (bad) imul das (bad) lds dec sarb sti jnp lock xchg pop cmp int in or lret mov mov insb xchg mov fimull dec mov (bad) cmp lods xchg movsb fnstenv shrl test push fistp push mov repnz xchg ret cld dec imul ss lcall fimull dec cli sub in push in test push es or jne jbe pop divl mov and test cmp outsb call lea dec dec inc mov mov jbe std inc cmp insl (bad) imul mov push sub sub or idiv cmp imul inc dec (bad) pop xor clc mov pop out iret shll mov pop push aaa aas fimul sub incb lret dec inc incb int3 pop leave push mov in and jo sbb adc dec fimull mov xlat (bad) pop jno pop adc stos cmp xchg xchg lret xchg adc push inc inc lret adc das sub xor jae aaa jl dec fwait jp,pt mov cmp cmp aaa into adc jae sbb cmpsb mov fwait xorb loope jae lret ficoml ss mov mov fdiv dec negl (bad) pop je loope js push (bad) lahf mov lods adc loop (bad) addr16 repnz gs or ret stos xchg cli mov and (bad) jbe ljmp fsubrl arpl add cmp lret jg outsl jnp dec and loopne js sbb (bad) dec lret xchg push lret outsl (bad) sbb inc add cld mov fwait js (bad) hlt out jae fidivl dec or pop ja dec adc xchg repnz jg ds insl into pop dec pop sub fsubp sub (bad) dec or mov pushf into out dec jb adc push (bad) xor cmovae pushf inc push sahf out inc loop out jo or mov mov stos dec (bad) cmpsb push (bad) jo loop rcrl cmpsb inc (bad) out lods fist dec jo jae sahf fidivl pushf mov cld xchg mov popf dec pop das outsl addr16 test and stos mov mov (bad) (bad) dec sbb pop mov lds into inc rolw inc adc scas and push jmp stos outsb mov pusha add stos fisubl jl bound call insl xchg pop push pop or jae fwait (bad) aad fcompl and aaa pop in cmp idivl or xor popa mov push pushf mov jo push fwait lret inc adc rcl shll (bad) or dec lret das lcall adc (bad) sub push loope pushf adc dec xchg (bad) rclb dec mov out mov push insb and and mov lret mov adc ja xchg lea xor (bad) (bad) cld mov push ficoml xor movsl cmp lret fisttpl leave stc cmpsb mov (bad) fmuls and lahf mov aad popf (bad) mov jecxz aam sbb fdivrl insb xor ss inc cmp adc sbb pop sub dec inc push sub push cmp pop xor data16 pop (bad) xchg adc imul push dec cmp pop xchg pop pusha fs jp ja bound mov pop push pop dec push dec pop jb mov inc xlat insb fldcw dec cltd jb mov inc sbb and das jb mov inc mov scas scas mov jb dec outsl jb mov inc lock out scas icebp aaa push push dec dec jb mov inc shrb (bad) aaa mov mov inc adc adc inc inc dec aas jb mov inc shrb aaa incb mov inc add add bound pop jb mov inc loopne fildll dec lahf jb mov inc and and cs sub mov inc lods insb stos scas lods aaa outsb insb dec imul ljmp aaa dec dec dec dec jb mov inc int3 insb lret scas int mov or insb or push aaa ds cmp mov inc mov aaa jle dec jnp jge cli inc cld insb sti scas std aaa pop pop dec pop jb mov inc fsubrl fnsave lcall sbb insb sbb push jnp xor cwtl dec je dec outsb jae aaa jne mov hlt push mov cmc push mov push push mov push push mov aam mov aad mov xchg push mov xchg push mov adc adc push push mov inc push mov inc push mov les ret adc lds (bad) adc test adcl test add aaa add adc push push mov fs mov gs mov in mov in mov movsb push mov movsl push mov and adc es mov scas dec cmpsb aaa cmpsl push addr16 mov inc dec insb inc scas (bad) aaa movl insb aaa scas mov mov dec ja divb xor dec xor mov mov dec mov push ret xchg pop mov add jp pop mov inc xor push aaa mov (bad) jb mov inc cs outsb scas dec cmp dec pop aaa lcall xchg inc inc insb (bad) arpl fstps ss inc dec mov inc push dec pop and icebp bound mov cmpl insb (bad) dec xchg mov mov lcall outsb fsts cmp lret push outsb or jbe inc jp jle (bad) mov and mov and (bad) ss mov arpl sbb ljmp sbb pop (bad) mov scas dec cmpsl xchg out xchg test sub pop or out pop (bad) fiaddl pop ja rclb mov xchg xlat xchg pop (bad) out mov je jne enter xor arpl leave and dec jg mov insl test pop and jbe rol xchg sbb mov mov test (bad) outsb xor dec xor mov xor cs dec xchg insl leave test cmp xchg mov sub mov push ljmp out sub pop push icebp loop and inc dec dec push pop jns jecxz xchg inc cmpsl push xchg push pop jb lock mov mov ds cmp ss xor loop inc into xlat cmp mov ja jb in jmp or jl ds jnp adc daa jg push mov inc enter movsb add cmp jmp xchg push or cmpsb xor js pop xchg jp mov sub and inc add stos (bad) adc dec mov stc iret out cli mov mov sub dec xchg bound sahf sbb sub add sbb fimull lds insb lcall icebp cmpsb sub iret inc jmp cmc mov sbb xchg mov mov cld cmpsb stc inc cmp xor jg xlat jbe enter adc scas push (bad) push sub jp,pn xlat inc mov sbb data16 pop dec pop dec cmpsb sub adc sub cmpsl jge jmp mov mov jns push push cmp jno sar push mov xlat mov lock orl sbb mov mov sti xchg movsl cmp gs sbbl mov sub dec sub stos imul jg jl gs mov mov dec sub mov mov sub inc sbb loop push sub xchg lcall add cltd add sub mov push jge dec cmp test sub or xor push daa movsl pusha enter xchg sub and sbb dec test sub sar jmp pop scas stos sub mov mov icebp fnstsw sub cs sub cmpl std inc (bad) call add push sub dec or scas inc dec ficoml pop mov xchg fimull out sub mov out jns mov jl cmp cmp push stc xorl sbb dec ret fsubrl cmpsl xchg repz cmp mov sub rorb pop popf pop sahf jmp xor xor push push and cmpsb pop dec mov sbb sub mov sub push mov bswap scas sub clc enter inc sbb mov test adc xlat adc cmpsb xor fldl hlt and ss in cs or shl add pushf jle mov cltd repz push mov cmp mov pop inc iret fistpl popl mov je loopne xchg in mov sub jno dec inc (bad) sub cs and inc lret fwait sub mov xlat mov test jns and adc popf ret jecxz or and mov (bad) jge call subl cmp mov pop outsl icebp movsl arpl ret adc sub popf inc cld and lock rcrb push xchg push data16 dec sub add or sub ljmp hlt stos push mov sub test jecxz pushl add pop ss push sub loop ds adc cmp jo (bad) clc sarb iret hlt xchg les test ljmp (bad) (bad) lcall sub mov sub push je xor inc dec add sub (bad) aad ret inc out jbe sbbl dec and sub pop xchg add pop xchg pusha jno pop and mov stos movsl xchg and inc jne das mov in or popf sub fbstp mov sub mov call add and iret data16 push adc xchg push cs sub scas or rcll cmp mov test sub test cmp sub or sub cmpsl imul add pop dec iret insl loopne sub movsl daa jmp jae sbb cmp and lock int cld (bad) out icebp sbb push mov (bad) mov mov ljmp flds sub andl mov adc sub xor jecxz into add push clc lods pusha pop and xor xor call push mov inc sub sub dec hlt push mov arpl and mov loop xchg inc daa popw ss xchg test jmp mov xchg sub jmp lea jecxz jo fsub test and jbe pop inc push data16 jle cmpsb fdivrp jge push sub sti fs (bad) sub push test sub sub rorb je push xchg sbb push xlat pop xor adc pusha mov scas mov mov cwtl jne inc sbb ljmp (bad) xchg cmp adc aam add je dec popa les loopne jmp sub mov (bad) fbld mov jmp movsl pushf xor hlt sub (bad) xchg mov cmp addr16 enter jae in or or inc xchg sub addr16 in (bad) hlt out mov sub mov sub mov int3 shlb jmp sub in xchg mov dec fisubr cmpsb inc das dec cmpsb mov mov dec and cmp sub test sahf aad gs addr16 cmpsl sbb sahf adc push (bad) out xor pop jmp call movsb ret and mov jecxz xchg pop cmpsb popw bound pop aad gs hlt push aas ss out leave adc mov mov dec xchg inc sub ss (bad) repnz out mov mov sub jb dec xchg arpl xchg imul gs insl and xchg adc sub dec xchg fldcw or mov (bad) sub adc cmp sub lods fnstenv mov mov inc xchg and inc jg pop (bad) cmp push dec dec sub scas es daa inc and (bad) cmpsb jecxz xor scas pop dec and cs lahf or sub jb xchg cmp dec dec inc inc insb xrstor daa and cmp jp sbb or aaa dec leave fs inc sub aaa dec mov in push (bad) sub sub sub es sub daa in dec or fistpll stc pusha sub in cmc lods dec sub and pop adc inc test xor push loope divb loop xchg call dec data16 mov mov sub jns push pop loop jbe jge (bad) out out leave jae jmp aad push mov xchg sub daa dec sub jg stc shr lahf xor imul mov dec cmp dec loop jae inc in mov add or adc bound (bad) sub pusha sti inc sub jp inc (bad) lock sub je inc sub cmp adc imul cmc ja fdivrs test pop cwtl cs imul sbb inc scas inc mov repnz aaa add sub jle cmp add cmpsb add sub push imul test sub and (bad) xor imul add fwait adc fucomip pop jbe and cmpsl inc test and xlat je mull jne gs push sahf push push data16 xor lods mov and addr16 daa or ffree leave push daa punpckhbw or jge pop cmpsb cmpsb and sub mov (bad) or (bad) loopne into pop mov shrl popf sahf cmp jo cmp jl sahf dec xlat shrl mov and jb mov out jne dec arpl ss push dec fisubrl jl dec loopne sbb je and repz mov mov aad push pop mov sub add sub jmp inc ss in jecxz popf imul sbb sub add sub and les dec adcl arpl movl adc mov sub adc mov sub xchg jge or aad lods push dec cmp fs dec cmpsl fiadd adc mov push or jle mov or fist mov cmpsl lock inc in call push dec mov mov sub sub push sub pop inc xor jae enter das sub xor test in sub je cmpsb sub jns cmp sbb xchg sbb mov cmpsl inc insl xchg ljmp mov pop sub add inc add fwait cmpsb (bad) lret sub test ss inc mov popf inc pop add fsub jmp mov and push (bad) cmp ret inc fsubs push pop gs neg mov xchg fs push add sbb or dec adc cmp mov sub test fwait sbb push sub ss cwtl out aam xor xchg fidivl adc sub fisubr jbe xchg dec fldl ds pop pop and xchg movsl test jl sub push sub sbb movsb lret aaa adc sub mov inc mov (bad) leave add sbb sub dec xchg mov sbb push jl mov jne xchg xor fstl cmp fwait add cmc jmp sbb leave aaa xor rorl sub mov jp das ss hlt daa mov sub cltd loop lahf pop push or (bad) in mov xchg ja fcoms psadbw sub push sub movsb add (bad) xlat (bad) pop or out ss mov mov or test aam push sub les out and rcrb push lcall arpl jbe xor and dec sub sub push cltd lods push dec inc mov cmpsl pop mov inc out (bad) daa dec pop divb cltd cmc push (bad) mov add sub push or push cwtl aas and dec pushf out les push repnz mov leave into sub push mov jmp sub cmp lcall roll mov mov outsb xchg cltd mov ljmp repnz in rclb xlat cwtl xor sub push (bad) mov jb and xchg mov inc push (bad) repnz (bad) cmp lahf or pop adc repz mov mov pushf sub sub or xor sbb (bad) lods lahf or cmp cmp test fs mov aam dec (bad) cmc shrb fsts jae pop inc push ss test loope sub inc cwtl cmp mov push sub test xchg nop sub outsb mov scas add cmp xchg jne jge cmpsl mov adc daa bound (bad) jbe and pop jne pop mov push pusha addr16 int3 sub xchg push sbb (bad) mov sub mov inc imulb loop or test adc sbb jmp into mov inc pop push mov mov ss add fildll fsubr pop mov fdivs sub rcrb sub outsl out sub cmp mov (bad) aam xor xor addr16 (bad) adc mov mov dec mov mov jmp jp vpmaxsw shrb andl mov arpl and sub in inc pop sub jne add and sub push call cmp or inc data16 xor mov mov ficomp mov aaa mov xchg test xchg out xchg sub divb sub enter shrl leave and xor mov (bad) fimul mov in popa mov aaa adc faddl adc sub mov xor ja sub sahf push leave push inc in loope sub ja xchg ss mov sub mov sub data16 adc jne pop rcrl jnp or jecxz cmpsb sub sub aam (bad) rolb aad test ret pop and or pop jmp jle cmp test dec xchg js sub push sbb stos int mov xor out (bad) mov xor cmpl sub cmpsb pushf movb sub mov sarl icebp adc in jecxz mov rorb push add dec dec pop cmpsl xorl faddl sub enter xor and pop aad movl testl and incb fcmovu cmpsl xchg (bad) pop js sub inc and mov inc subl stos mov mov in aad nop sub cmpsl hlt insl and lea push (bad) (bad) std cmp in test mov push sub ds or sub cmp imul push lahf movl lret cmpsb decl cs sub sbb sub xor (bad) sub xchg push insl imul pop mov mov shl pop dec xchg loopne jmp sub into sub pop or dec jl sub sub xor js fnstenv mov leave shrb jae pop mov mov mull lods sahf adc xlat cs or mov enter mov arpl daa addr16 loop pop inc push xchg fwait jecxz jmp add xchg mov pop ss (bad) icebp cmpsl es sub je daa add shll std and push sti in sub dec sub addl sbb xor dec xor hlt int3 pop inc sub in lea pop mov ret push cs into ss mov fildll sub enter mov or sub out (bad) leave cmpsl sbb shrl or daa fadds addr16 movl mov adc inc dec xchg inc bound adc mov sub data16 in cs mov cmp bound mov in mov adc std insl cwtl mov xchg lods data16 inc into sub js push fwait out jno mov movsb xchg in pop test inc ret dec mov cmp cmova cmpsb jae cmpsb roll lret sub mov xor sub inc push inc mov dec cmpsb hlt push cmpsb int cmpsb lods lret dec cmpsb inc (bad) nop sub push sub rcrb dec push mov imul sub cwtl lea push lcall push sub sub mov ss sub out xor xchg sub cmp pushf sbb lcall popf (bad) jns cmc jo sub aas subl jae sti xchg pop iret cwtl sub (bad) out loop cmovb xchg pop dec mov mov mov xchg lret scas data16 ljmp lcall sti inc pop sub cmp push gs push cmpsb es or sbb fldt inc out fcmovb lahf sub jecxz cwtl mov movsb mov sub stos incb pop lahf jg push aas movsb pop mov mov adc xlat push imul jb incl inc outsl fstpt repz sub xchg out into shrb cmp jmp mov test mov or daa mov push stc jp test imul fstps scas sbb adc and gs loope jno sub in mov adc add pop popf cmp inc movsb adc test adc popf fwait cmp sub or iret xchg add sbb jg pop sub pop in add jecxz leave loope scas sub packssdw (bad) mov (bad) outsb call aas pop push (bad) pop scas pop jp inc ds adc cltd rcll sub imull test clc cmp mov sbb sub les cmpsb or sub sub cmpsw xor daa add ret dec cmp adc dec in test daa imul popf enter inc mov pop push xchg sub dec xor cmp xchg fldenv rcrl mov test scas enter push or push sub dec out cs leave int rorl fsubrl rorb (bad) mov cli jmp loopne,pn aam leave or inc addr16 xchg fs jne xchg pusha scas sub dec (bad) call stos push jne in or sub jb psubsb (bad) or addr16 sbb adc mov sbb (bad) xor sub and xchg outsb test lret cmpsl sbb cmp daa rolb addr16 pop movsb cmpsl pop inc stos out inc push pusha mov cmp pop sub sub cltd call daa stc xchg leave push xchg (bad) xor out (bad) lret mov mov add bound out fs push sub daa dec sti mov sub cmpsl pop movl ss mov sub dec dec xchg jmp pusha sub or inc sub out in (bad) std pop mov test mov mov inc cmpsb test dec movsw sub mov push xchg enter (bad) arpl sub daa (bad) movsl push sub into call xchg push scas addr16 cs pop xlat push xchg sub xor rorl or out lods sub pop mov daa test jnp sub push cmpsl xchg or mov sbb movsb insb jb inc imul imul add push call movsl xchg sub out (bad) and inc scas sub pop fsubrl inc xchg (bad) cmp jae data16 dec divl sub or push (bad) jbe out daa sub xchg imul dec pop jmp test in or mov dec jg ret jb psubsw insl dec mov gs sub push or fldl sub (bad) mov sub push mov push dec ljmp daa dec repz mov inc push test ret cmpsb xchg inc das inc push cmp sub (bad) (bad) leave out pop dec aaa sub sub daa lret inc out xor (bad) mov xor adc fisubr enter scas out dec pusha cmpsb sub dec out pop add lret leave sub bound xchg push xchg sub dec cmp dec (bad) negl xchg fiadd in sub push (bad) push cmpsb sbb shl mov (bad) push push sub lcall rcrl call dec shlb or push sub lret or ret dec mov insl sub or int3 inc stos push lret test and xsaves ss or sub sbb mov xchg (bad) ja adcl jnp fwait sub insb sbb cli pop pop sub jl pushf pop dec cmp sbb sti arpl dec mov cli pop sub addr16 sub incb mov pusha ret stc (bad) sbb lcall int3 sub lds fs push in xchg aaa mov push sub outsl or in aaa adc mov mov lcall bound pushf xchg and int3 ss rcrb sub mov incl out imul sub pushf in imul or add mov mov inc push or out rcll movsb inc dec and movsl mov push arpl adc mov in xchg jecxz fs cld xor aam sub sub mov mov rolb mov addl loopne popf icebp jb sub insl lret adc jne (bad) enter sub sub push sub jge in add sahf sahf in and sbb pop rolb sub popf xor sub repz push es (bad) cmc fwait mov leave (bad) ss les sbb pop sub es sub mov xchg fdivl cmp icebp sub cmp sbb icebp xchg and sub dec pop sub sub std adc adc sub mov insb push lods aaa loope fiadd dec xchg fistpll or sub jp or mov loopne xor imul mov inc pop ret das dec adc cs (bad) jo movsb pop aam divl leave nop daa sbb sub stos cmp ss sbb pop repz repnz adc cmp cmp cmp sbbl (bad) das mov in imull fiaddl sub lret cmp sub adc cmp (bad) sbb pushf mov in (bad) xor mov sub dec insl in inc dec add cmpsb xor subb inc sbb shl (bad) imul cmpsb cld push lret xchg mov push leave js sub add gs mov pop aaa pop inc mov adc sub xchg xor iret sbb push imull add lcall cmp xchg sbb pushf addr16 sub cmpsb scas xchg and ss fxch adc jns fbld stos cmpsb lea sub xchg mov shrb rcr clc dec sub ja push call sub jae fcomps rorl dec pop js std xlat data16 push mov sub sub aam mov mov (bad) dec jmp push sub in icebp cmp fsts adc cmp (bad) jno mov insb xor testb pop sub and inc jno,pt mov iret (bad) jbe test cwtl adc xchg sub call adc mov popf mov pop (bad) lahf xchg int push adc (bad) or sub insb je mov mov lcall rcrb and sub in push sub pusha pop test inc test pop mov mov xor icebp into sub data16 cs mulb or push negl sub add movsb (bad) loopne inc cli outsb sub pop jecxz jnp mov mov les cs xor sub fdivl push lods or mov jbe daa cs or incl sbb sub push (bad) push pushl jae dec pop test rcrb xor andb pop sbb out adc subl sbb jae sub aad push sub sbb xor or aad push pop jmp xchg shrb adc xor daa aad cmpsl (bad) cltd xchg sub gs sub lods and bound decl pushf ss cmpsl and xor jbe sub addr16 push ds xchg out sbb jg and rcrl cmp jmp call (bad) sub out push push mov dec pop xor add mov pop sub xchg sub mov sti stc sub add lods inc std lret ret out out add das sub loop sub icebp inc jnp mov jmp lcall std mov sbb out xchg movq out mov xor fisubr sti sub xchg sub xchg fisttpl mov add cltd pop sahf sbb sub or iret add sbb inc xorl cli push and mov adc test sub (bad) (bad) sub add or mov (bad) mov cltd adc cmpsl fiadd fisubr dec leave sub repz sbb mov outsb stos mov sub cmpsb data16 pop (bad) sbb mov sub lods mov jmp (bad) or add sbb mov mov push sub adc repnz adc sub sub adc roll rcrb add mov loop mov adc ja (bad) mov adc and fildl jne sub pop dec or jg ljmp jecxz xchg ret push out insl and xchg (bad) mov or (bad) lret jmp pop push into data16 xchg or mov xchg push mov sub xor xchg cmpsl xlat call sub sbb or mov sub jae push lret mov add fiaddl adc pop imul loop sub fisub test cli inc adc (bad) sbb sbb icebp sahf inc sub loope popa or xchg ljmp push and test movsb cmp jle mov stc cld sub in add sub fs pop sub (bad) and inc fmul sub push stos loope mov lock pop repz out cvtpi2ps mov jbe movsl loope fimul stc dec and pusha or (bad) sub mov dec lcall jl jge xor test hlt cmp push pop and aad pop sbb adc push ret mov mov cmpsb (bad) sbb loope jbe jge ds sub leave nop xor jns sub or xor scas push sub test imul mov and loopne bound jg repz repnz mov pusha movsb mov cmp stos sbb mov mov adc pop jns xchg mov shrb je in dec sbb ficomp pop xchg out adc jb inc je inc aaa xor outsb push outsl frstor add cli xlat add xchg jns sub fwait cmp push and (bad) adc push mov mov bound pop pop sub sub lods xchg fstps jne push jno adcb mov fmulp mov sub jg xchg sbb sub cmpsb or add movsb sub and xchg inc sub fidivl inc pop incb mov pop mov mov jge mov fistpll ja outsb rorl jle (bad) cmp or ja mov sub leave js sbb in xor outsl pop or pop jl popfw sbb fs int3 push popa sub sahf fldt dec (bad) mov lds mov cmp insl loopne push pop mov sbb sbbb xor push sub shlb mov shl xchg repz ljmp sub cmpsb outsb sti jbe lret or inc and lcall aad in sub adc addr16 clc scas arpl xchg jne test data16 fwait sub mov jns mov sub xchg mov fisub fadds sub test or pushf sub add pop xchg pop mov adc aas xchg cmp sub xlat inc bound (bad) lock popf imul subb mov add sub popa jne jo cmpl push test sub sub sti fisttp fsubrp sahf out or lret sub pop mov test jp icebp fucomip sub sbb jne sub mov sbb into push or jmp inc add jmp sbb sub add adc push dec cmc sub and lahf scas jb cmp lea dec ss xchg add sub xorl sbb in xlat dec sub mov repnz lret js pop ss xchg sub loop sub push xchg xor push lcall fisub push sub push inc or cmp xchg jge dec add push dec loop cmp sbbl shrb (bad) mov mov sub cmp cld jg adc push mov arpl pop loop sub jae dec stc out bound call decl xchg imul call iret pop mull pop cmc mov repz jbe push add in leave (bad) xor push dec adc call sub test mov sub test jno insl test xadd stos insb movl cmpsl in sub leave add xor arpl adc movsb sub loope sarl pop mov sub mov mov sub dec icebp pop pop jge insl cmp sahf or cmpsl sub pushf jmp pop jbe daa in inc lds pop sub or out pop and xchg inc sarb (bad) xor mov and push and jl sub xchg mov xor push cli outsb ljmp in cltd sbb or sub negl push xchg ss mov xchg jmp test loop xchg (bad) push and out test sbb pop mov nop leave xchg sub sub xor mov push scas and pushf int3 cs inc inc and fwait jmp fs cmpsb call (bad) jno jb sub stos inc sub hlt mov xchg vmovlpd mov gs mov xor jb cs insl js xchg stos out sub ja lods int xor adc add cmp cs jo jmp jle mov inc xor xchg jae adc icebp lock mov inc dec sub ret ss sub lret cmp fnop sub sbb cmp inc dec sbb lods pop imul inc js xor xchg push inc mov test sub jle dec bound cwtl sub mov rcr dec ss mov or or lods cs mov jb lret mov xor sub dec xchg imull sub mov mov out sub outsb scas hlt cs inc stc xor jg cmpsl lock sub cmp imulb cld mov (bad) xor dec cmpsb aas pop (bad) into mov gs test sbb sub addr16 sub ret inc stos out pop sub scas inc loop lea movsl ss in mov jecxz,pn (bad) shrb bound mov (bad) loopne pop jp sub rorb (bad) mov cmp pop pop (bad) pop mov jae inc je movsb mov inc lock sub adc jo push mov test cmpsl cmpsl lock mov ljmp in or xchg jae (bad) sbb inc pop arpl (bad) aas push in loope sub and xchg loope push mov out jle mov mov cmpsl cmc mov mov shrl sub pop fisubrl leave mull outsl std dec es sub xchg or mov add sub mov and inc and popl fs flds cmp sbb sub lea insl stos popa lahf jno sub or scas sub inc jno lea mov sub adc xchg mov test in out push stc and call sub adc push jecxz jnp loop cmc sub loopne movsb sub pop sbb mov inc add sub xchg xchg sbb and cs fidiv jmp sub sarl push dec call aam sub and mov pop enter xor movsb leave cwtl cs xor sub leave ljmp inc dec das ror ja xor mov in adc jo and mov imulb loope (bad) jo jmp call or sub cld jb pop aas int3 sub jne jle adc sbb daa mov (bad) mov mov (bad) and xchg ljmp lahf sti or lods xchg pop push repz aaa sbb fdivrl mov jns jb hlt das push insb shrl adc ficoml mov sub mov jmp sbb fwait movsl xor xchg stc insl jecxz push cs adc sahf inc pop jmp sti bound vmovaps sbb (bad) xor imul sti out shll popf sbb pop adc scas jno xor lea sbb mov pusha mov leave jns insl bound adc sub (bad) sub push mov dec xchg jne lea jnp out xor insb xchg jge push sub and pop fisubrl fsubs cltd lahf add xchg jmp jo,pt jl lods push sub or daa movsl pop dec cmp loopne cs es mov push cs daa scas dec adc sahf mov xchg sbb add sub dec stc add ss add arpl (bad) dec lahf mov sub iret lock pop pop xchg xchg add sub scas bound iret rdpmc adc pop pcmpgtb lret stos mov sub inc sbb jb xor dec sub aas sub iret jno (bad) jecxz xchg arpl and jnp push ss int lea pop imul jecxz or mov sub fidivl sub inc lret mov sub or mov ss inc add sub test sub dec cwtl xor sub jl mov xchg dec sub xor adc cmp rcll or (bad) in or jbe aad call pop sub loop jmp out jo mov in xorl adc sub and loop mov push (bad) sub lods fimull sub dec mov sahf imul daa data16 and jmp cs or aaa mov daa mov push add xlat std movsb xchg mov cs lret jns sub fwait das lcall sub fs inc in ljmp mov test sbb enter jp sub mov test cs xor out mov push mov clc push adc lock sub cmpsl pop out rcll fidivr or je xchg push push mov pushf cmp push xchg sub pop sub jge add mov and push cwtl pop adc into dec cmp xchg sbb (bad) out dec or push je cmp jmp mov xchg iret cmp sub sub mov inc clc inc sub mov mov mov loope pop mov es xchg out inc inc or fcomp sub add xchg xor int popa inc out sub jmp fcmovb daa adc sub test ss and jo jb (bad) call and (bad) xchg ficompl jp orl sub adc stc dec push lret shll fcmovb (bad) in pop dec push xchg sub pushl push out mov jle inc sub push add mov cwtl repnz aas hlt sub pop sbb test (bad) xchg add jno and mov outsb test aas push add mov add jmp push icebp push (bad) and xor fnstsw test sti lds std int lea push pop movsl adc mov jg scas pushf cs dec bound lcall in and ret sbb repnz pop cltd outsb js xchg mov cmp sub push repnz sub mov pop jecxz cmp sahf or ret (bad) jle add and adc dec sbb xchg test jmp fwait mov dec cmp inc aam fistl push test dec inc sub imulb stos xor adc jmp pavgb cs pop idivl xor ss mov popa in pop sub rcl ja das mull out adc xchg cmpsl in aaa divb pusha and inc pop sub (bad) jbe cs mov or sub xlat mov aad jae enter lods stc mov pop int sub mov psllq jne std stc sub pop dec dec mov addr16 or sub mov xor ret pop jp sti dec sub out push xchg scas sub fsubl push cmp mov cmp xor pop out jo xchg and mov (bad) sub adc aad sub rcr scas testb inc enter xor jne mov (bad) jle sub es xchg pop pop push or scas sbb sub cmp add mov push mov inc mov mov fldcw cld sub js hlt mov call inc ljmp dec sub dec mov and pop cli loope mov fisubl fldcw inc mov stos icebp sub jns (bad) pop or fxch loope test mov mov fs ja pop lcall decb mov sub push (bad) loopne sub adc pop fsubrl jae inc lea outsb mov push bound inc and or sahf aam int3 sub insb ja or pop das and cmpsl sbb fsts shlb iret or sbb pop xchg sub and add or adc fidiv rclb and cltd fdiv pop push sub aas cwtl pop je mov dec push add sub xchg lcall adc mov mov data16 xchg leave sub ja outsb addr16 sub sahf ss ljmp push inc add adc stc mov insb xchg cmp sti and sbb or mov pushf imul flds dec inc cmpsl sbb shrb sub pop in stc and xchg test arpl fbstp mov in cmpsl push loopne adc call jmp pop outsl imul xchg sub adc jb pop xlat jge add xchg lock mov in (bad) cmpsl pusha mov sub call jno es inc sub xchg fiaddl loope pusha and ds sub cmp (bad) xor shll movsb sub cmp cmpsb jo sahf or ss or sub jmp lahf movsl xlat mov sbb je xchg test arpl jae sub sbb xor lds mov lahf sub inc outsl cmp jecxz lret test and scas xchg sub test call hlt decb and add and mov sbb sub leave (bad) mov jne mov jae xchg je imul roll test or sub (bad) stos jmp rorb cli ret lock sub add cs dec mov out inc and sbb (bad) or sub shll test je popf xor push sub (bad) sbb test sub adc pop add movsl mov push adc mov mov jnp xchg (bad) ds sub pop jl pop or lcall cld mov daa sub iret lods sbb dec sub test arpl jae outsb jmp inc div cmp ss das int lret sub insl mov (bad) stos data16 (bad) rcll aas insl dec sub subl mov pop cmpsl xchg dec xor and sub int3 jb sub (bad) pop rol xor sub fs mov mov test mov pop mov rcr ja iret and sub stos fmuls les out repnz sub pop mov pop xchg add inc daa pushf imul dec pop sub xor adc mov sub pop (bad) out xor mov aaa add mov mov sbb add pop icebp roll dec sub cmpsb sub pop hlt inc inc jne insl sub popf fdivs sub xchg repnz or mov push xlat add fbld mov or packssdw sub jae jle testb (bad) shrl jbe mov ret aas loop (bad) sub test scas inc mov movsb mov lea adc cwtl aad daa (bad) jge int mov imul imul adc mov aas sub fdivrl jo cwtl in nop xchg push or xor xorl shr cmc fdivr insb pushf test nop and sub push cmpsl test andl pop mov mov xchg add gs dec movsb xchg out ds add mov out sub aaa xchg dec sub or sub movsb mulb xchg mov lret stos mov outsb cltd bound pop sbb or stos sbb adc cld or pop sarb nop mov out mov aaa fimul repnz or inc dec sub (bad) mov sub aas pop hlt daa mov adc sbb data16 xchg or addl pop mov xlat mov sub pop pop mov sub (bad) in xchg pop push mov inc stc push aad add inc in pop movsl or sub sti je jo call in xchg pop xchg sub out sub push xor and mov xchg mov rcrl hlt push mov aam mov aaa mov ljmp xor and xor loope xchg or (bad) mov sub dec les pop pusha in push or or or inc (bad) pop dec hlt push sub xchg je add aam loop (bad) xor mov pop gs addr16 sub daa f2xm1 and mov pushf movsbl rolb or or ss dec fisubr sub sub aaa out or pop daa into jmp int jne data16 xlat les aas cmc add inc lcall (bad) js inc jno cmpxchg sub xor inc sub cmpsl icebp dec xchg mov xor cmp insl sbb sub add sub xlat daa inc jg and stos rorb jmp jae cmp mov jge push mov out jns fidivrl fldenv xor leave enter cmpsl xor fstl mov test bound or popf sub jp jb ds sub movsb enter sub sub xlat int pop xchg (bad) sub or sub bound imul cli fldenv clc cmpsb adc jnp push icebp push dec sahf cltd sub mov sbb sub ss pop adc outsl mov xchg inc out pop movsl cmc enter sub dec xor leave adc arpl and sub pop jbe push (bad) xor sub (bad) cmpsl shll dec sarl sub dec mov push int3 jbe xchg sub xorl inc inc push adc jne shll jae dec sub les gs sub lds adc inc dec xchg adc sub xor mov das dec sub or sub rorb jnp leave shl data16 mov lods pop movsl ljmp notb jg out sbb sub mov outsl enter sbb xor dec out ja xchg neg iret leave jne pop sub pop scas and cmp jmp sub sub test outsb and sub loopne das inc stos mov xlat push rcll push pop (bad) mov out test lret into sub das bound bswap ret ss js jge mov outsb imul push out (bad) and mov or adc push mov ret pop lcall sbb push sub insb add jbe lds inc xor push sub sub jg xchg dec in fsubrs iret lds test out cmp cmp out push in leave lret jb adc int sbb addb adc and (bad) jle inc lods lock cwtl bound mov jmp repz sar adc xor inc cwtl les cli ss xchg (bad) adc push inc jbe push cmpsl in mov push sub or and sub ss sub std repnz or sub scas cmp fldcw pop sbb repnz rcll and mov sub sbb mov jecxz sub lea or in lcall hlt loopne cmc ficoml push sahf lret sub sub or cmp in add sub sub pop loopne leave mov dec xchg loope negl sub mov cmp xor mov ss xor mov sub (bad) jmp sub test or inc xor inc cmpsl push sub sub leave add add dec dec and out mov inc and and sub into dec call adc and sub sbb imull in mov adc mov xor sub pop xchg (bad) push xchg sub xchg cli mov inc sbb jnp stc mov xchg fsubr rcrb in sub incb cltd (bad) sub sti and mov into iret push outsb fwait mov or add cs out jmp shr rcrl sub cmp icebp (bad) fdivr xor scas cltd mov sub (bad) nop jo and (bad) sub testl into or bound std rcrb inc mov adc leave sub mov call inc lock xchg push loopne orl lret cwtl or pushf out ret or dec add sbbl in xchg fs je sub out scas stc test addr16 sub mov sub xchg push loop xchg jle pop clc cmpsw cmp sbb pop subl sub mov cmc pop mov mov addr16 sub inc adc int lcall cmpsb and (bad) xor adc mov and pop es mov jb mov xchg mov lret xor je cmp push pop fisttp rcr loope cmc inc jp and inc xlat jecxz inc les pop std fist imull add cli push jns aad iret aam inc lods adc xor int lds std mov mov cmp jnp mov and insb xor jg fstpt jo sub pop (bad) dec (bad) addr16 and divb psubb fistp adc lcall testl xlat icebp jg push push arpl stos out ficoml sti movb sub mov push fidivr andb adc fisttp inc jmp mov lds insl sbb or ljmp mulb stos sar loopne cmpsl ds (bad) out out add push ret jb mov pop mov inc cli in mov popa gs mov sub jno fdivr push ljmp lret mov call dec ds dec sub lret int fstps je int mov jnp pop mov mov mov out mov scas mov inc imul or xor aas std fbld mov fcomps iret icebp flds pop (bad) je jno mov and leave cmp or fsubs push push sub popf sub add clc fnsave imul xor push (bad) call jns mov inc (bad) cmp mov daa ss cmpsb popa mov push jge dec mov mov inc mov push int3 xchg jnp aam jae add repz fcmovbe push insl in sub add jecxz xor les notb cmp iret sbbl or (bad) mov pop std insb sbb xchg sbb jae ret mov pop push icebp je fistpl xor push loope xchg addr16 jnp arpl repz repz cmp mov in lret pop xchg stos sbb fucom mov sbb sbb push adc mov pop movsb adc lods sbb cmp jmp xchg clc push lea stos mov mov cmp out repnz mov cmpsb cld imull lret ret (bad) stos imul das sbb lret sbb pop mov outsl or jae jg (bad) lret sahf movsl inc das repz mov add pop fimul int3 dec outsb pop xchg cwtl inc xchg jns lods repz fucomi push adcl xor or push jne or xchg adc xor clc out push xor mulb cld xor cmp xchg and loope lret hlt cmp mov sahf jo fistp nop push and mov or repz scas (bad) (bad) fmuls enter shrb pop fild dec xchg jp iret jl jge cltd and ret imul jl idivb xchg insl mov xchg adc inc les daa movsb or mov in or mov test cmp cmp jno pop sub sarb rcrl sub fiadd repz jecxz cmpsb (bad) pop jnp mov push out cld xchg in inc (bad) mov add hlt xchg js aad push mov repz pop push xchg (bad) mov add divl les sbb icebp mov imul fcomip nop aas jp fsubrs xchg jno dec sbb dec pop push negl jp icebp jecxz loope fcmovb jp fldt (bad) jo ret adc dec push lahf lret cmpsb jno and xchg imull (bad) mov in addr16 sbb test lods addr16 movsl nop push lret adc sbb js test push push inc xchg mov mov mov (bad) lret and dec xchg mov or scas and add mov gs cmc sbb in (bad) mov pop push mov leave mov inc dec cmpsb lahf cmp dec mov daa fs mov jno mov daa mov (bad) mov cwtl mov xchg (bad) je loopne cltd cwtl mov (bad) scas lret std fstl xchg cmp jl aad dec add scas xlat in test inc aad push lcall (bad) imul mov sbb or sub cmpsb mov pop inc inc movb repnz mov test dec addr16 out mov mov mov sub cmpxchg fldenv sub or sbb clc ret lods mov cmp mov sub inc inc xchg xchg test sub nop fsubl pop imul cs dec mov lods dec jp jmp (bad) insb cmp push pop stos aaa pop dec pop mov lret es aas pop lods mov push xor insl lret jp idivb inc negl cmpsb cmp inc mov mov mov pop dec mov dec js inc sbb jo ss fsubl (bad) outsl xor dec jo scas cmpsb inc xchg insb or cmpsb mov mov pop cs or aas lret divb mov inc mov ret je pop dec push imul icebp push aaa push xchg sbb inc je sbb icebp ss dec enter mov icebp dec add dec test leave insb stc outsb pop cmpb test js sti mov push mov stos daa jno dec and in mov sahf and push mov inc sub scas sub push (bad) lret call sub cmpsb mov sbb jl pop mov push (bad) jmp pop jl push inc xchg cmp jl fsubs xchg dec inc sbb jbe jp xchg pushf cmp cltd adc neg shlb imul ja pop (bad) jg addr16 pop stos push dec dec cmp or or pop or movl cmp push cmp mov mov js pop test jb jns pop push addr16 mov test insl scas xchg out daa mov dec (bad) and xchg dec or inc test insb sbb mov addr16 pop aas pop lret mov mov sbb test ja inc pop js ja mov sahf jp xchg outsb xchg xchg addr16 sub sub stc aaa cltd js mov jmp xchg (bad) arpl jl cmp mov dec mov inc imul clc push fdivl mov inc cmpsl stos jg negb xlat stc outsb dec cwtl lods pop lcall pop pusha stos pop lcall inc sbb pop nop bound dec (bad) and notb sub in fistp inc mov jb dec mov gs fs add mov cmp (bad) mov pop daa pop js sub ss lds sub cld inc cmp mov (bad) pushf lret push cld adc inc xchg push and jno daa cmp (bad) jns jmp bound mov sub add pop lcall mov or xchg dec or jle adc sbb inc insb jp and mov rolb sbb lea mov pop jo sub cmp imul mov mov insl sub fcmovnb mov movsb jg and ss mov sub xchg dec fisubr mov dec mov loop cmpsl in jl pop and inc loope movl scas dec jg jmp inc fdivs dec cmp ja dec push or jo ficoml cs cwtl (bad) pop imul insb push mov jg (bad) cmp enter outsb push int3 or inc shrb pop hlt or daa jns lock pop xor fsubl push (bad) mov stc rcl mov jmp das lcall cmpsl add dec pop or in inc push mov daa mov add out xchg xchg add icebp pop xor loope (bad) jb pop jp mov xor mov mov lcall fstps orl fsts in lahf cwtl pop neg fwait xchg dec jb mov cmpsl pop mov sub daa jns adc in dec cmpsb jns dec cmp pop fs out inc pop and loopne or outsb rclb xchg lods rorb movsb cmp sub cmp dec lods push cwtl inc pop dec cmc push fsts sbb sub ss mov xchg and phaddubd divb fsubr das adc inc sbb (bad) mov addr16 out dec daa xorb imul lds sbb cwtl mov addr16 cltd outsb or mov clc test pop outsl ljmp imul or xchg jnp imull cmpsb lret dec dec pop lods imul js cmp cmp or test insb cmp mov clc imul jmp test mov xchg cmp stos push (bad) mov divb inc inc js mov sbb dec or sbb dec cmp imulb dec ficom js xor icebp aam sbb mov cltd imul mov xchg inc sbb mov sbb jle add divl icebp push adc mov pop xchg outsl push repz or or outsl mov dec inc aad mov int fisttp (bad) rcl mov shrb mov or xchg mov std mov cs leave test in xchg mov sahf imulb nop sub mov into cmp cmp xlat inc mov rorb (bad) lea xchg mov mov gs rclb outsl push (bad) cmp push inc mov pop fidivl sbb js cmpsb dec mov mov and xor xchg cwtl dec cmpl pop adc les addr16 push dec xchg fs (bad) aaa aaa cmp fs fs fs clc push cs mov push lods pushf insb loopne,pt out (bad) leave push les jp cmp out enter into cwtl pop or enter (bad) insb sub xor cmp repz popa cwtl rcr pop lea (bad) mov adc jbe sbb cmp repnz mov jle int3 or pop pushf mulb pop stc cmpsl in mov addr16 lret mov and jecxz adc jp in mov cmp push pop or xor push rorb divb shlb xor push (bad) insb sbb (bad) xor adc push cmp outsb jp or divb cmp and lret sbb nop lods out popf fistpll dec js enter xchg dec imulb cmpsl stos rorl push dec stc or lcall push pop movsl rol push fdivs movsb xchg mov dec cmp mov mov movsb mov dec ret mov mov fsubr jns negb neg insl movsb mov push fcompl sbb xor xchg sbb pop or ljmp dec scas mov loopne cwtl push jo dec jmp lahf (bad) dec sbb dec mov js out cmp cmp lods ss (bad) jp lcall loopne mov stos in out cmpsl pmulhuw scas mov imul in sub xchg fnstcw je lods enter push xor mov xchg pop mov (bad) and jae ja inc mov call or in jp out divb mov fsubrl xlat ret sbb jmp lahf push cmp mov imulb in or aas pop cli outsl or daa dec insb pop aas or addr16 mov mov sub sbb insb mov inc adc mov sbb in pop lock sub sub jp cmpsl and or jne adc loope push mov mov sub scas pop sub notl sub out lock into add lds ret imul inc ss dec sahf cmpsb and pop jo add lret cs mov imul sub jno pushf adc xchg dec leave add enter adc orl pop into cli iret idiv jns pop jl sub out movsb jmp sub imul adc mov adc pop lds sub outsl fistpl divl (bad) dec mov adc jmp loope xor add adc fisubr arpl sub xchg cltd ljmp jg sub jecxz in sub lods mov fwait cld dec sub sub test cmc cwtl xor jbe shrl fsubrs cmp je cmp jbe movsl sub jmp loop push pop inc sub sub pusha jmp sub pop push pop pop mov out push xor (bad) xor pusha mov dec cmpsb inc ljmp (bad) cmpsb xor aaa lock add mov inc pop insb out scas xchg inc fldenv xor (bad) mov inc or dec aaa lcall out lea inc enter adc ja dec fidiv loop into (bad) cltd dec inc inc clc insb test xor out cmpsb and add imul push jmp imul insb mov dec inc jb mov inc pop dec and aaa add fdivr xchg sbb insb dec scas (bad) aaa fildll dec push test jo xor (bad) aaa aaa out dec xchg jb scas adc xor dec aaa cwtl xor mov pop inc pop insb out scas aaa inc fldenv dec xchg push jnp or enter scas push aaa sub daa sbb mov inc mov out aaa xchg dec dec pop jb mov outsb push lods outsb icebp adc inc fsubrs adc iret (bad) dec inc jb mov inc push or dec insb dec jns and fdivs outsb pusha dec xor mov pop inc pop insb (bad) scas jp inc stc daa or imul add dec outsl jb mov inc scas insb push repnz scas dec pop aaa clc cwtl dec (bad) dec sub jb mov inc mov jp xor adc mov (bad) scas pop aaa into jp inc outsb add sarl xchg inc inc insb imul or in adc inc mov and movsb enter mov ss out mov repnz mov pop scas dec and push sbb cmpl pusha mov inc lock sbb daa sbb dec jno mov insb and and out outsb out aas mov inc add mov dec xor pop lret fldcw dec (bad) jle (bad) out test cmp bnd outsb shrb push out and into test push movsb jnp (bad) and divl dec jle jb jbe testb xor dec jb,pn mov inc dec insb pop scas ds push or dec jecxz inc mov mov dec outsb mov dec ss bound loop dec pop xorps dec and fsubrl pop dec (bad) sub sti jecxz push adc dec mov xor sbb cwtl sti jb push call divl mov mov jp inc lods sub jne inc inc icebp dec mov jb repz push push idivb mov sub jnp int3 std stc mov (bad) mov sub jl lcall jb loop sub jp (bad) arpl into xchg mov and fisub pop loopne and xchg cli call sbb aaa outsl adc adc inc pop sub inc xchg push ljmp xor xor adc loope push fdivl and fidivl add mov or outsb sahf push nop mov jmp clc test and imul data16 and lock adc sub mov sbb push jge insb lods jmp dec dec call ret es pop sub fnstcw sub movsl adc pop sbb daa imul pop lock mov cltd lcall pushf fwait std sub xchg mov popf int mov out xchg push jo sbb cli lret inc (bad) aaa xchg push mov cltd jbe,pn pushl sub ss cwtl outsb push (bad) adc xchg out cmp push or sub (bad) pop mov iret mov cmpsb and adc sub rcr sub or add push ds sahf sbb dec sub bound xor pop outsb aas xchg js xlat scas ja (bad) or notb xchg adc or fwait or push xor movsb mov repz test mov xchg push sub jb and shr lcall push aaa out push fs xchg jge mov in outsl fwait pop sub sub jae dec (bad) pop and sub outsl in loope aam pause sub push jge ss inc xor add test mov sub dec loope test (bad) cmpsb pop outsl and adc div mov dec pop push psubsw pop sub sub or push bound into mov imul fcom jp les xor leave or scas fxch sbb inc icebp mov sahf (bad) jle xchg mov adc sub jnp,pn mov cmp divb sbb pusha pop jb,pt cmp sahf ret mov add scas xor xchg cmc sub mov loopne faddp ret outsl sub push inc dec push and data16 jmp sub fsubrl aas imul (bad) xchg push xor loopne mov notb roll jns lods sub call pop jb add sar cmp lcall jnp shrl push fucomi out and add fidivl sbb xor cwtl jno push inc add (bad) notb xor in cwtd lcall push js aad sub lahf cs jne rorb and xor sbb lods xchg jmp inc insl and lret adc data16 mov push sub sub lret mov aam pop xlat sub idivb sub push cmpsb (bad) jl mov xchg sub fldlg2 push femms inc cmpsl test mov pop aam les daa cltd jne mov test cmp mov sub inc push (bad) pop sub lea fist sbb pop nop pop (bad) push or sub pop sbb jnp mov (bad) ss in add imul cs cmpsl mov mov sub inc jecxz cmpps movb call sub scas gs shrl ret iret test (bad) pop pushf cs les cmpsl and jg in movsb andb imul data16 pop mov inc mov jbe ss ss pop push push adc sub or mov mov icebp mov mov jno orl xor mov sar cmp xchg dec add out jbe ret movsl (bad) divb aaa sub add lea adc cmpsl sub jno dec sub fs loop pop pusha xor jp rorl lods lahf push or sub add sub add lock sub adc ss xor jbe sub (bad) mov jmp push mov fs sub xchg out inc fnsave sarb in cmp dec nopl push lret leave mov test mov fld lcall test stos cltd cmp outsl mov lock adc arpl or cmp inc dec jp add ret stc dec inc or cmpsb leave pop dec bound adc aad dec ret mov inc jp ss mov sub icebp dec repnz and or push sub sub aaa ss jmp adc inc loop sub lcall sub rorb inc sti jp test ss in jecxz sub lea xchg shrl ret out pop xchg in jno,pn aas push pop jg or bound push test int3 inc push fist xchg mov (bad) sub push pushf jle or or ret (bad) fisub call lret pop sbb shrl out pop ret leave lds cmp xor (bad) mov adc sub sbb mov ds and adc mov cld dec imul cmp out or sti inc sub mov gs sub std in xchg out lahf xor pop das cmp or push test xor sbb sub outsb insb inc xchg mov and xchg leave sub pop sub int3 or mov lock ss popf sub ss xor inc push js jp out test sarb sub mov in lods sbb mov adc xchg lret shrb in lods push and push in out aas xchg js mov je ds roll xchg and test loopne mov dec js adc popf lcall insb sub ja push data16 int3 add cmp mov xor test jo aas adc in mov nop call mov xor out cmp js add inc cs or sub sub pop lret cli outsl ljmp sarb rcrb xlat mov das xchg xchg dec negb sub clc mov out sub and push psubd outsl and sub mov jns jmp lods rcll leave push clc subb mov sub fdivs jne adc push sub inc pop imul (bad) cmpsb xchg xorl xchg mov cmpsl bound iret jo inc mov xchg (bad) and xor (bad) mov test out inc pop leave ss out xor add daa adc ucomiss frstor inc (bad) in sub mov sbb mov sub sub adc sub mov in jns mov xchg notb hlt shl (bad) or push pop movsb cmpsl inc sti jmp sub shll mov dec inc mov or inc call dec add jo (bad) push push mov xor loopne xchg inc jecxz inc ret jge cs and testl cmp mov xchg sahf adc sbb fildll popf (bad) cmpsl mov cs roll ja cmc lods shlb push stos inc sub jg or jno add fldenv out xor cmpsl cmp dec mov push shrl mov push mov lcall es sub aas sbb ljmp arpl fsubrl mov ss rcll pusha js sub popa lock sbb out sti les into jns mov pop subb rclb pop notb cmc jecxz cs stos fbld std pusha sub cwtl dec mov into and push (bad) mov mov dec sti mov sahf shlb and js push and bound xchg jg jae xor fdiv push out (bad) sbb and fsub scas sub out sub std mov xchg or pop sub mov loop nop repz dec fisubr es movsbl push adcl dec mov test inc arpl push xor xor push cmpsl lret jns sub jmp jbe sub popl pop cmc push inc mov imul (bad) jbe jle push dec or ds pop mov in jp sub or inc inc cs ficompl add sub xchg loope ficom sub push into enter shrl jle (bad) mov xchg pop shrl scas push sbb sub adc inc out mov iret mov cmc cltd sbb cs mov sub scas fisubr cmp sub mov inc mov inc pop jl aam inc shlb subl add push jle aas push pop sub and mov push repnz jmp add xlat dec test pusha hlt sub xor addr16 and popf popa ljmp shlb mov ss mov sub inc sub xchg mov ss pop or adc jnp or xchg mov stc int xchg mov inc xchg inc jle daa inc mov sub outsl adcl sbb and dec dec les addr16 xor push cmpsl push push sub nop dec in jnp sbb sub pop push jle pop (bad) leave test rorl sub add inc sub jle popf inc mov sub hlt ret sahf sub inc push (bad) test mov xor push lock cmp pop out jmp or push (bad) xchg push adc stos jg subb mov (bad) sub repnz cmp sub mov lcall add cmpsb sbb test xchg (bad) mov inc daa sbb pop lcall decb outsl pop mov js cmp cmc jb mov push test test mov pop mov xor sar push pop je pop sub cs out repz hlt movsl call outsl (bad) decb or divl stos adc xchg aaa ja fs shrb sbb enter jb movsl mov adc mov and mov movsb pop sub fsubrl dec out push cltd cli dec push (bad) jmp iret cmpsb push and sub pop dec cmpsb inc test sbb sub shrb mov jge sub les test imull sub loopne insb int adc and jecxz rcr sub je pushf dec or hlt add jg push int pop xchg jge mov fs and hlt lock cmp mov push loopne pop cld sub fisttpll in lret adc mov arpl dec cwtl sub js sub daa lret cmp bound (bad) sub jp psraw dec xchg xor sbb cli flds sub lret jns inc cmp nop mov ja cli sub movsl cld pop jns sahf mov pop xor (bad) sub rolb (bad) in add test pusha leave stos sbb mov xorl out dec mov in adc inc call push xchg lods subl test jbe pop imul mov ret xor lcall adc sti loope dec clc or imul add repnz sub ss sub test sub aaa sbb and or and (bad) sub (bad) pop or add sahf jge cltd sbb enter lret dec enter ss mov xor mov roll pop sub add cmp rcll test fcomps icebp test dec ja in roll mov arpl daa jmp jae push enter add sub test inc shr xor push xchg xchg pop dec lods daa cmp loop mov sub jnp or sbb cltd ficompl or mov cmpsb outsb div sub (bad) lcall inc stos add mov cwtl mov mov add cs inc push scas cld xchg inc mov or jbe pop pop sub cmc add fistp dec mov add out rolb jo adc cmovno imul xor push aam sub test mov out sahf ret sub ljmp popf bound jb enter jb cs xor mov (bad) in jg xchg sub (bad) pop fsubrs cmpsl or inc mov pop orl mov dec mov loope rol push call xchg sub pop out (bad) sbb test call inc pop sub in pop sub sub inc sub add cmp jne adc lret rcrl std shll data16 pop push fsubp aad sub push in js jmp sbb pushf popa xchg mov sub or sahf out les in pop out push ss mov gs mov sub test push out sub test (bad) lock sub xlat sahf rolb mov pusha outsb jecxz xchg jmp aas ss idivl xchg loope xor cmpsb cmp test daa mov call rclb cmpsl dec push sub in or cmp lahf pop leave mov (bad) fsubr xor jle mov cmp inc xor mov add gs inc rcrb ljmp inc xchg out dec sbb inc pusha int pop pop cmpsl stos in or xchg dec and inc xchg push sub enter mov stos sub out into inc daa xchg test (bad) xchg push mov add mov xchg in fcoml fisub inc mov mov sub enter aad sub unpcklps xchg cs (bad) popf out mov xchg pop hlt and mov fwait enter cmpsl test std sbb cmp (bad) mulb sub sub inc jbe dec mov sbb enter push mov sub mov sub mov pop (bad) push xchg jo mov cmpsb jg movl mov out cmp pop cmp mov aas xchg push cmp out adc shr xlat xor aas jl sub clc push call cs inc mov xor mov cmp jns xor in and sub push es outsb pop inc andl out inc mov popa imul jbe dec xlat mov xchg (bad) into sti push bound addr16 les lds popa sub test ficomp add xor std notl xchg cmc test lahf icebp stos xchg sub add and sahf cs sub mov push shll test sub fxch xchg loop fisubl bound xor test jmp adc push nop adcb movsl and sub push sbb mov in jg inc mov sti mulb cmp dec jecxz repnz shrl and sbb js sarl dec daa sbb out push or aaa stos imul test add cs fistp pop xchg xchg popf ret mov into push pop pop lods adc daa icebp mov enter lds in inc insl adc pop sub lods mov sti push arpl sub sub mov je sub popa mulb inc or sub in test push cmpsb imul scas dec sub inc push negb dec cmpsl insb jb push adc pop sbb and loopne add imul int3 cs cmpsb popf out or (bad) mov add xchg imul push xchg sarb arpl daa dec ds int3 jmp sub add jl ret sub aaa adc xor out sub ret pop mov sub pop ja adc dec add jne sub mov adc jo sub sbb sub and std adcb popf inc xchg mov (bad) loop jae and xchg lock test push push sbb leave out in out sub cld sub sar jns sub xor cmpps or sub ljmp imul popf cwtl jmp xor xor and mov ret xchg les data16 cs sti push pop sbb jecxz jg mov cmp inc pushf popf sub mov pop inc icebp xor test iret and sti int3 rcll mov and (bad) inc sub xchg (bad) notb xor push push out jno (bad) leave data16 add sub xchg dec mov sub jl add fs mov and sub in (bad) mov inc out push xchg add and push adc pusha daa ss or mov or sub pop js dec jp pop out sub mov pop xchg lcall inc fcmovnu or jl cmpsl call sub add movsb std sub dec mov cmpsb aaa (bad) cmp push (bad) mov xchg pop push push xor test aaa fisttpll inc sub out jne push push sub dec add jb aaa (bad) sub jnp lds ss pop ljmp repz mov lds inc push lahf loopne outsb xor cs stos sub lret cld inc push inc mov inc test sub sub cwtl inc ss (bad) loopne lret sub leave mov xchg adc jp std ds sub sbb push mov dec sahf inc mov sub inc and data16 hlt push adc push push int sub jmp lret mov sub pop movl or lret jae fnstcw xchg sub mov gs pop inc outsl je pusha push jmp mov ja dec addb (bad) adc int3 add aam inc adc out push xor sub pusha pop mov pop jmp pop mov (bad) sub stc (bad) jae add inc shrb jns and push sub lock (bad) cld sub out and xchg mov movsl xchg lods adc sub call sub testb cwtl sbb push jno movsb jnp mov jne sub add add inc pop inc ds xchg sbb push fldcw lret inc mov popf test push fisttpl mov js adc cli xchg in inc inc pop or and fldcw push sub decb sahf andl int and mov repz xchg mov sub repnz add loopne add cmc iret and das dec push das faddl adc jbe push bound and movl pusha jmp pop test ljmp cltd repz and xor jg jp stos dec mov cmp mov jb fwait arpl jecxz jb fdivr jge mov icebp push addr16 dec arpl shlb out fimul xchg out mov cltd or push cmc pop dec push arpl sub dec push test push xchg or orl jl fdivl and sti sbb fistp dec pop insb test xchg (bad) jae mov cld mov inc addr16 inc inc xchg mov outsl (bad) jl push sub aad xlat enter jg push arpl int adc lret iret add inc dec aam leave pop jnp inc and push pusha seto out mov pop test jno scas lret inc jg sbb lock fcmovb xor rol cmp xor ret fldt jecxz cmpsb stc xchg dec pop add and dec xchg pop loop in dec xor cld (bad) sti mov push aas or xor cmc add fsubrl sub fwait test (bad) cmpsb mov fucomip lea cld inc std (bad) mov mov push dec sarl dec cwtl scas imul pop mov fist sub mov sub mov push pop sbb jge jle and cmpsb mov popa jle iret cbtw sahf mov popf loop jno cmpsb and pop call adc (bad) icebp out mov in inc pop stos jmp dec adc in push pushl out data16 pushf sbb pop cmpl mov adc adc jg fwait inc mov cmpl (bad) xor xor fldl push mov and dec dec jno inc lcall mov or jae xchg mov shrb adc lcall (bad) jp movsb xlat aam (bad) fiaddl sti push jno int3 daa lcall dec lock dec mov pop and inc hlt dec jl xorl push cmp popf sar adc lea push push pushl ret mov jmp (bad) sbb jmp jmp aam stos mov xchg ret mov gs push leave push imul movsb xchg (bad) pandn (bad) adc push cmp ljmp popa movsl mov mov mov cli popf popf das adc (bad) mov cmp inc push rorb push pop leave mov mov mov fwait jae lock sbbl mov mov sub pop cltd mov cwtl sti les mov in push in pop xorl push and or push inc lods xchg cwtl faddp cmp (bad) cmp xchg das (bad) pop xorl incl test push push scas adc xchg lods pop lahf add xor push xchg xchg mov movsl insl icebp flds xor pop pop and jmp std loop int repnz or fildl pop mov (bad) mov cmc lret and mul sub lods or xchg mov lahf dec add scas adc lock lahf cmp ret and lock call je cmpsl mov ljmp cs pop xlat addr16 test or mov mov insb scas aam jp xchg test xchg jl dec iret scas icebp nop outsl jno mov std sub and adc mov adc jo mov inc sbb repz and jns ja fldl sub bsf mov pop sbb mov inc cmpl sbb jmp add or sbb in aad inc mov repnz imul (bad) jmp jb or mov dec cwtl daa aaa adc (bad) cmp xchg lock aam rcr sub les arpl movsb mov jb jb data16 cmp pop sti inc jg pop add push or xor lea jne aad not shr sub xor bswap mov xor add pushf mov cmc test movb test call and or mov dec sub add lcall cltd push fsubp jae mov lock gs (bad) sarb ret pusha push shrl push mov mov out (bad) xor nop jno push cmpsl les aad enter mov jl std and in dec push popf mov add push cld int sub sub mov mov lock and jmp leave (bad) cmp mov inc push mov data16 or lods je adc xlat (bad) mov push testl aam push cmc push dec movsb ret inc lock sbb jge jne mov nop push xchg out lret adc xor jne mov loopne hlt jno mov pusha call rcr sar mov push push cmc cmpb push pushf pushf call lea jne pusha lea jne xor shl mov call movl pushf movl pushf push lea jmp sbb mov pushf inc or inc inc or cmp (bad) imulb lods sub xchg leave (bad) cmp dec adc fs lods repnz jge jns mov clc push dec fwait inc cwtl xor adc push das add add fwait push scas sbb pop (bad) out lcall aad rorl mov aam in call in ss mov sbbb mov sbb sub or fadds adc loopne scas out xor pusha mov dec je negl cmp scas jno movsl push adcl mull adc shrb dec add jnp aas pop sbb jae xor jno mov or pushf pushf lea je pusha jmp call add dec jae inc jb gs gs jb inc jne data16 jmp or leave insl adc inc push je xor mov mov mov mov jno push xchg dec xor test (bad) xor push jbe notl jae insl movsl mov lret dec jmp test lds aam (bad) loope (bad) xor adc jmp imul jb push insl mov aad mov jo jg fdivp add std roll cmp push leave mov sbb ds jo jecxz mov cmpsl cmp cmp cmp mov lds add fwait jmp stc out mov cmp fcoms or testb push or iret scas push (bad) add mov push mov lock sub cli and mov cmp test mov ror xor sti cmp into stos popf cmpsb inc sub push rorl test pop fs mov inc cwtl mov pop cmpsb out jmp insl ret pop movsb pxor dec ds out push std xchg daa xor out mov sti push test imul cmp (bad) pop repnz push mov cmp (bad) out (bad) pop addl jmp mov push and popf addr16 and aas jg jge (bad) xor repz dec repnz xor mov aaa jl negl xor mov stos xor lahf call das dec xor cmc sub (bad) push out lret and fisub pop popa jle sahf xchg test sub push out das xchg icebp in cli in lahf jnp sub pop in and pop js pushf mov (bad) inc mov dec (bad) in ds or or insb mov pop mov cld call cmp std xorl test and sbb sub sahf and cmp pop scas xor mov mov dec call jno popf push cmp jp inc cmpl jnp (bad) int lods adc and mov movsb mov mov xor fs cli xchg inc insb adc xchg adc mov (bad) and cli dec xlat mov rorl and and inc pop sti inc loop mov mov je insb jb inc mov movsb in xor dec xchg cmpsb loopne push and mov out pushf ret xchg (bad) in mov ret cmp test (bad) xchg sub gs jle pop pusha test xor mov jecxz pop xor (bad) cmc jmp repz and xor data16 add jno popf dec inc mov lea jne movsbw mov call call pusha pop mov enter repnz icebp push push dec xor es sub sbb jle xchg add xor (bad) add std out (bad) js leave outsl (bad) jmp or sbb xchg enter sbb adc data16 fmull pop xchg lods cmp or jno outsl xor pushf arpl sbb add mov lea jne das xor btc add or mov shl shl add rcl cmp test sar mov call pushf stc bt rol pusha inc jmp mov pop jecxz insl mov dec pusha inc add and jnp push sub jge pop mov rorb adc or pop out cmp out xlat inc jno or sbbb mov sbb icebp pusha sbbl incb aas jno mov push sub test jg pop (bad) lods jae mov dec aaa pop cmp pop inc imul or push and (bad) (bad) mov inc pop inc push insl cwtl test insl (bad) cmc (bad) mov popf mov cld mov cmpsl mov xchg jmp cmp fwait sbb mov cmp sub add lahf fistl cwtl xchg or add test jo ja jb flds iret sti fs sub pop rcl and xlat insl sbb pop push std ror insl mov add and fcmovnb pop out fstpl mov ret pop mov adc jle cmp comiss fninit cmc sub sub imul mov int3 adc and or cmp aam clc cmpsb inc lcall stos jno lcall lea rcl mov mov test call scas mov mov inc ljmp fiadd mov int3 jb dec leave xchg lcall lcall cltd lcall add push lret insb (bad) jno,pn sbb cmp (bad) int ljmp jo sub jle cmpsl sbb xor pusha sbb sub sbb les add push into fiadd lcall ficompl xor in cli and cmc pushl pushf test cmp jmp cmc stc cmp cmp push not lea movzbl bswap movzbl movsbw mov pushf call pushf jmp sar shl push mov mov cmp movw pusha push call pop cmc sub and cwtl sbb lea mov ror out xchg imul and scas incl stc fstpt mov popf loope and test push mov push mov imul push push sbb ficompl push push es adc es stos inc (bad) sub adc fstl pop cmpsl (bad) sbb daa repz js sbb pop rcl sbb adc adc add and pop pop es cltd mov test das or shrl lcall rorl xchg mov mov cltd test test xor sbb fisttpll mov scas jmp push or repz add (bad) stc test or sbb jae repz test cwtl test or cmpsb and jae and lock or pop das or stos mov outsl fsubl jmp loopne aaa dec xchg rorl mov mov inc cmp dec (bad) fldenv push out addr16 sbb nop rcrl ret outsl lock js sahf inc cmpsl sbb or hlt pop enter jmp leave cmp jno cwtl sub pusha movl call push ret mov ret jge icebp adc jmp pop out lret mov in sahf test pop fmuls add jne dec or nop lods xchg or in jb jno mov cmc std or ficompl push gs jno push xchg inc mov aad test insb loope,pn in aaa xchg jno bound push shrb jg jp outsl das push and xchg adc dec mov movsl sbb pop inc pop arpl mov scas shr jb mov test cmp fnsave jno xchg loopne mov into adc sbb (bad) cmovle sub xor jne cmpb ja bound imul mov pop (bad) dec cld inc xorl out (bad) mov pop xorb das outsb push pushf push rol mull jl dec push pusha jo xchg loop pop out (bad) stc rcll cmpl jl in mov push and incl lea dec outsl xor (bad) add sub cmpsl or mov cmpb out inc jge inc pop cmp dec aam lods mov pop add loop stos adc push lahf data16 jno xchg or or xchg and add (bad) not inc pushf inc neg xchg (bad) repz shld mov neg xor shl mov push mov jmp add sarl mov sbb pop sbb cmpb outsb test sbb pop sub inc loopne add dec (bad) dec mov push loop outsb mov xchg das iret pop add arpl lods xor (bad) lock hlt into mov insl jb mov lea repnz jl imulb mov add push stos je adc jb iret fistp or pop xchg xchg mov jmp js lret lahf jns inc mov insb xchg (bad) int3 push lea pop insl add ljmp cmp loop outsl mov in mov sbb lock xor or mov xchg and inc sbb xor mov adc xchg call shll dec shrb pop cmp scas cltd rcrl pop xchg sbb aad shrl in sbb movsb popa mov daa clc lret adc pop sbb dec daa or pop sbb out test in sbb xchg pop xor loope (bad) lds push imul push mov pop pop inc cmp dec push hlt imul mov test es and shl and cmp jne js adcb inc xor dec adc or adc shr ror mov shrl pusha pop sbbl imul cmp dec je mov add es push pusha mov xor ljmp lahf ret sti into jno mov and fwait (bad) jmp adc inc pop loopne mov dec mov sbb js sbb out out xor mov mov or push xor movsb pop ret int sub pop movsb (bad) scas aas pushl pop pop dec sahf push push cs aas add or inc lret xor clc xor push fldenv jno xchg nop lcall mov add movsl ds push xlat lods xchg ljmp rorb test or push fidiv pop enter pop jecxz,pn arpl pop inc es xor nop mov jg adc push cmp popa jne pop lds dec pop lods xchg sbb insl mov idivb or add adc or sub nop sub inc jge xor stos add jnp pushf push jge popf repnz int and sbb add mov mov (bad) xchg jno xchg or aad add ret pushf pushf inc or inc clc shl xchg ror setns mov or bt shr mov cmp cmc test call not pushl popl jmp xor push call pusha lea ja mov rcr sub movzbw add cmp sbb mov pusha mov call pop cmpsb sbb inc ret sbb or and lods dec scas pusha (bad) mov or negl push les sahf xchg (bad) in xor fnsave lcall in stos nop int insl enter push push cmpl notb pop xchg sub insl ret das aad xchg roll daa push xchg push ficompl fstl lds (bad) mov clc (bad) or outsl inc arpl mov out mov test adc cmpb das dec das pop test jno xchg inc dec js (bad) sbb mov out adc pop test jg lret sbb pop les mov sub flds test mov sub (bad) fucomp (bad) std xor push daa push lods add sbb push test lret int3 loope inc sbb mov aaa stos pop xchg inc sbb sarb fbstp or adc jmp inc push sub daa pop sbb fs add out xor fwait add idivl out icebp mov inc push in jmp nop cltd lds aad repnz cmp mov mov iret fistp push scas add bound and lea xchg inc pop stos xchg js jp push jmp jno xchg fnsave imul push aam daa mov lcall repnz leave aad mov mov pusha push adc call imul stos repnz pop out (bad) cvttps2pi dec sub test adc outsl mov lahf loopne movsb sbb fcoml iret adc jle cltd lcall into aaa mov insb repz mov and cmp mov xchg out mov sub movw call jmp add push dec inc gs outsl insb fs popa je inc add mov not pushf mov pushf pushf pushl ret add inc inc jns add ficom or decb adc xchg mov mov mov repnz dec aad stos and mov scas and std jp test lods xchg mov iret inc popf mov mov cmpsb sbb fnsave inc mov cmc add addr16 xchg imul mov fisubr ror jecxz cld arpl adc push jp iret sti mov out imul xchg hlt jmp mov scas shr aad popa (bad) aas js (bad) jmp adc dec push sub adc int3 jb pop mov data16 push fdivrs add xchg adc imul movl movw pushl ret test jmp push dec bt shl jmp arpl shll in (bad) fdivs or fldenv add xchg insl jge fstps (bad) rolb mov cmovg jnp into add sarb mov mov in inc insb mov int3 cmp or xchg jmp flds sbb jle lret (bad) jmp mov rcl aad sbb dec mov popf xchg dec mov gs ret in or sbb lock (bad) fucomi jno (bad) in mov pushf jmp push inc push push dec dec dec cs insb add sub cmp addr16 fldcw jecxz rorb push js fsub add jge outsl ror mov push and test pop mov (bad) xchg out sbbb dec popa lods in adc loop inc sahf and push fsub mov cmpl test mov dec mov mov insl mov (bad) sarb loop mov mov add cmpsb sbb mov lods clc out lsl pusha call cmpsl pop loope adc ds out xchg cli fimul mov adc or mov adc jno mov pop jg xchg push popf mov inc pop and mov jo test push xchg jmpw lret mov in scas xor shrl imul xchg (bad) mov lds adc (bad) pop daa mov jl fldl movsl nop sub push dec sub in xor jg das adc sub mov icebp xlat sti lea mov rcr (bad) sub out inc add (bad) pop cmp dec pushf mov fiadd or or adc mov inc lcall or (bad) clc mov xchg (bad) lret cmp pop mov fist xchg inc aaa or xchg sub mov test out dec sub sub jae fisubrl adc mov int or hlt pop add popf add or fdivrp (bad) lods shrl dec pop mov vpsubusw fstps pop xchg push fiadd xchg inc jb scas mov dec push vminsd jns or jmp jg push push popa or xchg js int3 push xchg inc adc rcl int3 std add adc dec mov pop jp and clc push adc movsbw push rol shrd push lea (bad) testb mov not not mov stc pushf or pusha call add fisubr (bad) adc jbe jns mov enter mov iret lock adc outsl push push mov adc cmp and ds pop loop mov addb movsb push dec push xchg (bad) das sarb adc mov fldcw pop nop fmull inc push addr16 xor test not inc jo jo (bad) push mov mov inc insl xor bound ss dec pop sub test sahf mov push pop fucomip xor cmp mov xor imul mov je pop (bad) mov xor into sub or movsb push mov gs add jecxz xor ret sub pop and cmp movsb mov jge (bad) mov jge jl stc rorb jle pop inc cmp and inc ds subl mov daa jl mov or (bad) das outsl jmp loopne std bound je (bad) mov popa shrl sarb sub lods sbb push stos xor mov add mov mov adc daa (bad) pop mov sbbb push imul lea je bsr sar add pusha bt bsf sub bt pusha ror shr adc mov movsbw add bt add add sub bswap mov pusha stc cmp mov shr push cmp movw lea je cmc cmp cmp pusha movb lea je cmc jmp out sbb push xlat adc add add ret add add add push add add add push add add add push adc add add scas aaa pop add add add add addb add nop pop adc add add imul add adc add add xor sbb add add xchg pop pop add add add test add idivl add and push add add add pop add cmp adc test adc add add je push call imul inc sbb out ljmp push dec jno insb daa aaa mov sbb cwtl inc rcrl int out dec shl mov mov les fbstp mov ss xchg mov loopne push mov fwait mov loope push (bad) (bad) adc sub xchg movsb ret jl and mov inc mov stos jecxz dec cli in mov mov test push or mov xor lods repnz push or sub movsl cltd fadd iret out jg ljmp add cld bound and xor mov and pop aas push mov mov cli clc or enter aaa or negl mov xchg fistpl mov hlt ljmp mov fwait lods inc lcall sub out outsl sbb enter xor pop fnstcw in sahf mov movsl push lods repnz cli or sub push xchg loop cmc cmpsl fsubr cli push loopne out push pusha mov sbb or cmpsl fcomip nop cld addl dec or adc dec jno xchg and pop add mov push dec lcall mov lods test inc fwait add jno addl daa jmp cmc stos sbb notl fidivrl add add cli (bad) aam cld addr16 out xor add push aaa repnz jae js out adc cmc shll cmp xchg (bad) ror loop sub push jnp pop mov add cmp test mov les pop mov insb sub fs inc push test out pop and cmpsb rorb mov push xor incb ljmp dec notl in lret add push xchg clc aaa mov jae gs pop fisubl or sahf cmp sbb loopne push or test push (bad) nop out in push sbb jae mov in mov lock mov add popf and sub pushf mov aaa pop pop fldcw fadd (bad) and arpl cmp jmp cli cld cld cmc inc sub or ret sub cltd insb lods jnp je mov stc pop xor cwtl out out add jo mov inc out lods adc inc mov mov outsl and cld or and jae sahf sti fcomps pop xchg (bad) pop outsl sbb dec dec push jno sub shr sbb ss idiv insl repnz cmp sbb push sbb adc adc stos cmp mov addl pop sub jmp inc xchg mov inc adc mov iret outsl push push mov jno inc sub leave lahf shrb outsl scas gs arpl ffree insl rorb pop (bad) pusha ljmp sbb gs aas scas js mov cld mov mov gs jbe cwtl adc outsl mov or imul mov pushf ret dec mov stos mull (bad) sahf iret push add sti inc cltd int mov mov frstor stc out mov fstpt push sub jbe and fwait push jno test ja jbe xchg jmp fist fisubr push repnz sbb rorl add insl adc daa sbb in pop fwait add jmp ret mov mov loopne int dec outsb loop fldl2t shrl movsl (bad) shrb push cmp lds adc test dec mov add ja pop (bad) je jno cwtl xchg sbb pusha pop xchg out pop dec outsb mov mov lds jp ret sub scas adc sbb ss push jmp inc fidiv iret punpckldq adc jmp cmc into shll jno test mov and call add add loopne add add sub push xor xor xor dec xor jle xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor insl xor pop ss ss ss mov (bad) ss aaa dec aaa jg mov lahf aaa mov leave aaa into aaa aam out sti aaa (bad) cmp cmp cmp cmp xlat cmp cmp cmp cmp jnp test les in (bad) cmp cmp cmp cmp push cmp mov fwait cmp cmp cmp jbe mov cmp cmp jmp sub imul add aas add add add xchg add add xor xor jb sahf xor xor dec xor xor xor xor xor xor xor enter es mov push aaa push aaa xchg aaa lcall aaa xchg cmp cmp cmp cmp cmp cmp cmp cmp mov mov std cmp cmp cmp cmp cmp cmp cmp pop adc pop and xchg ds aas push aas data16 mov fnstcw add add add aam add and cmp xor xor xor xor xor pop xor mov add sub mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jne mov enter daa ss ss ss imul lods ss fdivs loop jmp and inc aaa dec aaa (bad) aaa (bad) aaa lret aaa (bad) aaa xor cmp cmp cmp cmp push cmp cmp insb cmp mov adc sub cwtl cmp add mov add aas xor popf xor xor xor xor xor xor push xor mov loopne add xor xor xor xor xor xor in jmp ss ss ss ss and test mov aaa adc sub jnp out push cmp cli cmp cmp cmp jns nop cmp cmp cmp cmp cmp cmp cmp cmp push ds ds ds aas cltd aas add add add add sub xor mov xor xor jg test sti xor xor mov (bad) xor xor ss jl xchg mov ss adc and cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp arpl imul cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp gs jle xchg mov cmp loope out cmc cmp adc ss ds ds ds cmpl ds ds ds aas inc aas dec aas push aas imul aas mov aas icebp aas add add xor push xor xor xor xor xor xor xor je fidivl loopne out inc xor xor xor xor xor in xor xor xor les out xor xor xor xor xor xor xor outsb xor movsl xor lret xor cmc xor inc ss ss ss aaa sub xor cmp inc aaa dec aaa dec aaa pop aaa les int3 aaa mov ret cmp cmp cmp cmp cmp cmp in cmp add pop add add xor xor xor xor pop xor xor xor xchg xor inc aaa dec aaa pop aaa dec cmp cmp cmp cmp cmp cmp cmp mov idivl inc aas in aas add add or (bad) xor xor jge test inc xor loope dec xor xor cmp cmp push cmp cmp test nop add loopne add inc xor aam ds xor inc xor (bad) xor xor xor xor xor xor xor xor xor dec xor mov ss ss fnstenv sti ss push aaa sbb cmp cmp cmp ret cmp cmp cmp cmp daa cmp cmp cmp cmp jno jbe jnp cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp jnp xchg (bad) cmp repz xchg mov ds ds ds aas add add xor xor add sbb inc xor pop xor xor xor xor xor dec xor xor scas xor xor xor xor xor xor xor xor xchg xor xor xor pop xor ret ss xorl popf aaa scas aaa mov (bad) aaa int3 aaa fnsave in jmp aaa sub cmp cmp cmp cmp cmp cmp cmp sub cmp dec cmp test mov mov mov ret cmp cmp cmp cmp cmp cmp cmp inc cmp xchg xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ret cmp and jbe,pt jge test mov xchg ds ds aas push aas adc aas sub xor cmp push aas mov add mov add push xor xor sbb pop xor xor xor mov mov lock xor xor popa xor fwait xor xor xor xor xor xor xor xor (bad) xor jnp mov cmpsl ss or test test mov cmp cmpsb cmp cmp cmp mov sub cmpl cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pushf cmp lods ds repnz aas sti aas add add lods add add dec xor mov xor xor xor xor xor xor jp scas xor xor xor xor xor xor xor cmp jno lahf ss ss pop cmp cmp jl mov cmp cmp cmp test pushf cmp cmp cmp dec cmp push cmp cmp cmp cmp cmp cmp cmp cmp dec cmp sahf cmp adc cmp pop cmpb ds sub dec aas jb cltd aas ret aas add add add rolb add xor push xor xchg xor aaa xor inc xor jle mov xor xor xor xor xor data16 pop xor clc xor xor xor xor xor xor xor xor xor xor xor xor cmp jnp mov movsl xor lret xor cmc xor adc and sub inc ss test lcall aaa push aaa arpl xchg sahf aaa mov aaa call aaa daa cmp cmp cmp cmp xchg dec cmp pop cmp cmpl push aas add add int3 add add dec xor pop xor xor xor inc xor xor into xor xor xor jge xchg xor sbb pusha ss mov mov ss aaa push aaa fs insl aaa jnp xchg aaa cmpsl aaa int3 aaa in aaa sti aaa sbb xor inc cmp mov cmp cmp cmp dec cmp popa cmp cmp cmp test xchg cmp cmp cmp cmp jb cmpl cmp cmp cmp cmp cmp cmp cmp bound mov ljmp ds ds ds ds ds add add add int3 add add xor xor nop xor xor pop xor xchg cltd xor xor xor xor xor arpl mov (bad) xor xor xor xor xor push xor push xor jo xorb xor (bad) xor add push ss dec ss ss jnp ret ss aaa dec aaa xchg aaa out sti aaa adc pop cmp push cmp jo mov cmp cmp cmp cmp cmp cmp cmp cmp popa cmp cmp cmp cmp cmp cmp cmp jne,pt in aas idivb add add hlt add add xor xor xor xor js fwait xor (bad) xor xor xor xor dec xor xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub pusha xor jge xorl xor mov xor divb adc pop ss and sub cs ss ss movsl ss add and cmp outsb aaa jne jl xchg aaa mov aaa out lock add adc sub cmp dec cmp cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp xor out ds aas pop aas lret aas add add cmp add or push xor jp xchg xor xor out cli xor outsb fidivl ljmp cmp cmp cmp push aas add add add test add add xchg mov cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp fistpll repnz add add mov add and xor push xor xor xor xor xor xor xor imul jge mov test ss jmp ss ss ss add add aaa adc cwtl aaa divl cld cmp cmp cmp cmp cmp popa cmp test cmp cmp cmp cmp cmp dec cmp mov mov cmp or cmp pop ds jg in add adc aas ja fwait aas lods aas lds add add add xor xchg xor xor xor xor insl xor (bad) xor xor xor xor xor xor outsl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp fnsave outsb aaa lcall cmp cmp cmp cmp and xchg cmp cmp cmp jo jge (bad) cmp cmp cmp fnstsw add add add pop xor xor xor cmp dec xor and dec aaa push aaa sub dec cmp sarl pusha add add add add out (bad) xor xor xor cmp inc xor push xor (bad) xor (bad) aaa dec cmp cmp cmp cmp cmp cmp cmp cmp iret cmp cmp xchg mov aas addr16 mov add add add add (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc aaa pop aaa mov mov divb sti aaa cmp inc cmp cmp cmp cmp addb and add call cmp cmp cmp cmp cmp cmp mov nop add je add add sbb xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor fidiv jnp xlat ss ss fwait cmp cmp lea into cmp cmp cmp cmp cmp cmp inc ds ds ds cmp add add lods xor xor xor mov (bad) xor xor xor xor xor xor bound jl mov nop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp aaa jmp cmp (bad) cmp cmp cmp cmp cmp cmp cmp mov add bound xor jg mov (bad) xor xor xor xorb xor xor xor mov into xor mov xor xor xor xchg xor test lods xor pushl sub sub xor xor cmp cmp inc mov nop ss ss ss add or aaa xor cmp cmp pop aaa xchg mov aaa enter (bad) aaa aam fdivs fdivl cmp xor xor cmp xchg cmp cmp mov mov cmp add js add push xor pop xor dec ss ss mov aaa adc sbb and pop cmp cmp cmp cmp xchg cmp or adc push cmp and sub xor aaa cmp cmp dec cmp pop cmp imul cmp cmp cmp cmp cmp cmp cmp cmp pop ds ds add xor add push xor xor xor xor lods cmp cmp enter out xor jbe aad add add add mov xor xor xor xor mov scas xor xor xor sub xor xor xor xor sub cmp inc xor imul xor ss mov aaa in aaa hlt aaa or daa cmp lret cmp cmp (bad) cmp push cmp sarl stc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov mov aas xor dec aas (bad) aas cltd aas fdivrl add add add pushf add add xor xor xor xor xor xor and pop ss (bad) mov leave ss divl adc cmp outsl aaa daa cmp cmp cmp cmp in in cmp cmp cmp inc cmp push cmp cmp mov cmp cmp movsb cmp es inc ds ds ds ds jo jl (bad) ds ds ds aas dec aas jbe jl (bad) aas add add add rolb add push xor mov mov xor xor xor xor inc xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor push jno test mov xchg xor xor mov sarb cmp pop cmp cmp cmp cmp test xchg cmp cmp cmp outsl cmp cmp xlat cmp cmp cmp adc sub cmp cmp cmp cmp cmp cmp cmp aas test mov lcall aas add add add push add add xchg xor xor xor test lret xor xor xor xor xor xor xor jge cmpl dec cmp cmp cmp outsl ds cmpsl ds mov add add sbb add dec xor xor xor xor cmp add xor add cltd xor xor xor xor xor xor xor xor xor xor xor insb test mov xchg ss ss mov ss aaa sbb and and sub sub xor jp xorb aaa mov mov repnz std aaa sbb pop cmp sub sub dec cmp test cmp cmp cmp cmp cmp cmp and and sub iret cmp cmp jb cmpl add add add xor xor hlt xor cmp dec xor xor xor xor xor xor loopne out push xor or sub cs cmp push cmp cmp cmp inc cmp cmp cmp outsb cmp and (bad) cmp outsl xchg lods add add add xor fnsave ss xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp jbe or ds test mov ds aas and cs add add add add or or xor push xor dec xor xor or inc aaa stos aaa (bad) aaa repz mov cmp cmp cmp lahf cmp add cmp add inc cmp cmp cmp cmp cmp cmp jb jns cmpl cmp push cmp mov ret cmp xor add add scas xor xor xor xor push js jge (bad) xor (bad) xor and pop ss ss ss out out ss ss (bad) aaa cmp xchg cmp cmp cmp jne jge mov cmp xor add nop add and add adc dec xor aaa xor xor xor xor xor xor xor xor mov add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov ds ds ds fidivr in out ds ds ds aas adc pop aas sub xor aas movsb aas add add add cmpsb xor xor xor xor (bad) ss cmp cmp cmp inc cmp cmp cmp cmp daa ds ds jnp xchg (bad) ds movsb lods ds aas loopne add add jl add or xor inc xor push nop xor xor xor xor xor jo jl mov pushf xor xor fdivl or pop xor ss ss ss jge xorl sarb loope xor cmp inc cmp pop cmp insl cmp fnstcw xchg cmp mov cmp and and sub sub xor add add sbb add xor popa xor xor xor xor xor ss add add add cmp add mov xor xor xor xor xor xor xor xor xor xor out and scas cmp cmp cmp cmp cmp cmp add sbb add out xor xor cmc cmp cmp cmp add sub add mov xchg xor xor cmp cmp cmp cmp idivl cmp cltd aas iret aas add add add dec add add xor xor push xorb xor xor xor xor xor xor xor xor xor xor xor test ret xor xor xor cmp cmp cmp cmp cmp add and add add add xor test scas cmp cmp cmp outsl cmp lcall aas push aas pop aas outsl aas (bad) aas fnstsw add add add sub add popa xor mov mov xor xor xor xor xor xor xor xor cmp add add mov ss ss pop cmp cmp cmp cmp cmp jae xchg cmp cmp cmp in cmp add add push add add xor xor or mov aaa ljmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp pop cmp xchg (bad) cmp cmp cmp cmp cmp add sbb add sub xorl call cmp cmp cmp add pop add add xor xor xor xor xor xor xor xor xor add mov xchg cmp cmp aad fstpt jmp cmp cmp dec cmp cmp cmp test es sub cmp (bad) aas in aas add add daa xor xor ss ss ss fidivl fidiv loop out ljmp add lds in aaa std aaa sbb imul cmp add nop add insb add add ss sub (bad) aaa fidiv xor pop cmp mov jmp cmp cmp cmp nop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp test cmp jo mov fnstsw push aas and cmp jae lret aas idivb add add sub inc xor xor xor xor cltd xor xor jns pushf xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub cmp pop xor jg mov lods xor (bad) xor (bad) xor sub cmp inc ss ss ss mov xchg ss ss movsb ss ss mov ss ss fnstenv jecxz in divl add add add mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor adc sbb dec xor fs test nop xor mov cmp cmp cmp cmp nop cmp mov add rolb xor add les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor rolb add add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor dec xor push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb in call cmp cld cmp or or adc adc sbb sbb and and xor xor cmp cmp inc ds ds ds ds ds ds jl,pt cmpb mov mov nop ds ds les add add add or add adc sbb and sub xor cmp inc xor dec xor pop xor fs jo je js jl xorb xor cwtl xor movsb xor mov mov mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss ss cmp mov add mov ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sub sub cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter add add add mov lods xor (bad) xor hlt xor or add or add xor add je js or adc and and xor cmp cmp inc xor xor xorb xor mov xor xor xor xor xor adc sbb sbb and sub inc xor push xor xor xor nop xor xor xor xor xor xor xor or and xor cmp dec xor xor jo xorb xor mov xor xor xor xor xor xor xor sbb and xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and xor cmp push xor xorb xor movsb xor aam fdivs lock adc and sub cmp cmp inc ss ss ss js jl test pushf lods ss (bad) les int3 ss hlt ss or or adc sbb xor inc aaa inc aaa push aaa pop aaa pop aaa pusha aaa fs push aaa cwtl aaa pushf aaa lods aaa mov mov mov aaa call aaa add add or adc sub sub inc cmp pusha cmp cmp movsb cmp fdivrs fdivrl loopne call cmp and sub sub xor dec cmp cmp cmpb cmp sarb cmp cmp cmp cmp cmp cmp adc sub pusha cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp fdivrs and sub cmp pop js,pt cwtl ds ds add and cmp inc aas pop aas pusha aas cmpb aas pushf aas movsb aas lods aas mov mov aas fdivrs loopne call aas clc aas add add add adc sbb sub dec xor pop xor xor in xor xor xor xor xor push xor je js xorb xor xor xor xor xor adc sub xor xor cmp inc xor xor insb xor xor mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor push xor int3 xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor js xorb xor call ss and xor push ss ss ss (bad) fdivs in add adc xor cmp inc aaa dec aaa push aaa je xorb aaa lods aaa hlt aaa add sbb sub cmp inc cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp je jl xchg cmp cmp cmp cmp cmp cmp dec cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor inc cmp je xchg cmp in cmp sbb and sub xor cmp pop ds ds mov ds add or adc sub xor push aas push aas xchg aas mov enter fdivrl hlt aas add add add and sub cmp inc xor push xor xor xor in xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor add add xor add jo cwtl xor test lods xor xor (bad) xor xor xor xor xor xor xor xor xor xor xor cmp cmp adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp les enter sarb aam fdivrs fdivrl loopne in call cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp dec cmp jo je js jl cmpb mov mov nop ds ds mov loopne add and inc aas fs nop aas mov aas lock hlt aas clc aas cld aas add add mov add add or xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sub pushf xor sbb add mov cmp cmp cmp cmp cmp cmp cmp or adc add and inc cmp cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp add add jnp sub dec xor xorl jle int3 xor xor xor xor inc cmp cmp nop add add leave xor cmp cmp mov add and das cmp enter add add add jge sub pop xor xor xor cwtl xor xor xor cwtl ss cmp cmp cmp cmp cmp cmp cmp cmp icebp ds add add lods xor xor xor xor xor insb xor jge (bad) cmp cmp cmp add rolb add aaa xchg aaa sarb test add add xor xor pop mov ret ss ss cmp fidivr cli cmp jb or cmp cmp jle,pt in cmc outsb aas add add add add xor xor xor ss cmp cmp cmp cmp add push add add add xor xor xor add xor xor xor add push add add add ss aaa outsl cmp gs cmp cmp mov push add push add add add cli xor cli xor or cs mov in cmp mov inc push add add add jp les jl push xor cli aaa daa cmp data16 cmpl cmp cmp cmp cmp cmp mov aas add add add add and cmp dec xor xor xor xor and and dec xor xchg xor xor mov mov (bad) xor or xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor dec xor mov xor cmp jo mov nop ss fdivl loop sub aaa mov loope inc cmp cmpsl cmp cmp cmp cmp pop cmp jae mov mov cmp cmp cmp cmp loopne (bad) cmp sarb sarb out add sbb and aas dec aas outsl aas cwtl aas test add pusha push add add add xor xor data16 mov loope out repnz xor xor xor xor jns mov test xor xor xor xor adc xor xor xor xor xor xor xor xor xor xor xor xor mov ss movsb ss push aaa adc sbb sub cs inc aaa push aaa pop aaa xorl aaa xchg aaa cwtl aaa sahf aaa movsl aaa stos aaa mov mov aaa (bad) aaa fdivl loope out in aaa lock divb sti aaa push cmp cmp cmp dec cmp pop cmp jbe jl mov test cmp cmp inc cmp test mov sti cmp cmp test xchg ds aas add add add xor xor xor xor ja (bad) xor xor xor sub push xor mov xor xor xor adc xor xor xor xor xor xor popf xor sbb imul (bad) xlat ss xor gs movsb cmp cmp cmp cmp ds aas add add (bad) xor xor xor cmp inc xor push cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp xchg ds fstpt in es addr16 sti aas add add add and xor mov (bad) xor xor xor xor cmc xor xor xor xor xor xor xor xor xor xor xor xor dec xor imul lods xor in pop arpl jl (bad) ss aaa push ret cmp sub inc cmp sarl cmp cmp cmp cmp sub dec cmp imul cmp cmp mov lea sarb add adc sbb sub xor inc ds arpl imul jge lcall ds ds jecxz,pt ljmp aas adc and es push aas push aas push add xor test into xor xor xor sub xor jo (bad) fdivl hlt ss aaa push aaa enter lea lahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc pushf cmp lods cmp sti cmp cmp cmp inc ds ds ds ds ds lods fnstcw add add and push xor xor xor sub pop xor mov mov cli xor xor xor xor xor xor xor cmp xor xor xor xor xor xor xor xor xor xor xor xor cltd xor loope in xor pop aaa popf aaa sub dec cmp cmp cmp rolb mov xor xor xor fnsave or sbb xor xor jne jl mov xchg xor call xor js or sub xor xor xor pop ss cmp xchg int3 cmp cmp cmp cmp sahf cmp cmp cmp mov loope repz cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp into ds fidivrl loopne out out ds ds add or adc sbb and sub xor aas dec aas push aas pop aas addr16 js lea cltd aas clc aas add push add add imul add xor popa xor xor xor xor xor xor xor xor xor xor jno mov xor xor xor xor xor xor xor sahf xor pusha cmp jno mov pop cmp cmp cmp cmp cmp ds movsb js,pt jge (bad) aas add push add add xor aas xor mov les int3 xor xor xor xor xor xor xor xor xor xor jge mov xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor lock add add add xor xor xor xor xor xor xor xor xor or les enter add pop add add call cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp xor cmp inc cmp dec cmp pop ds ds sarb aam fdivrs fdivrl loopne in call aas hlt aas clc aas cld aas add add pop add add add xor or or adc adc sbb sbb and and aam fdivs fdivl lods xor xor xor xor xor xor xor adc sbb xor xor dec xor xor xor xor xor xor xor xor xor xor xor sbb and xor xor cmp inc xor push xor mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor test mov xor pop ss ss enter add or sub inc aaa dec aaa push aaa enter or sub inc cmp cmp test mov test enter hlt cmp cmp cmp pop cmp insb cmp js jl xchg cmp xor add add add add sbb and cmp mov xor or sbb sub dec ss ss ss ss ss aaa add or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp les dec cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb sbb and and sub sub xor xor inc cmp pop cmp cmp fdivrl call cmp cld cmp cmp pop aas jl movsb aas les enter add add add sub dec xor xor pop add add add cmp cmp cmp jp nop ds add add pop add add add xor mov ss cmp cmp test aas add add pop add add sub arpl fnsave add sub xor xor xor push ss cmp pop add add adc pop xor xor xor xor xor sbb xor xchg cmp add lock add add add ss lahf cmp cmp add or and add jno mov (bad) cmp cmp xchg cmp cmp cmp inc aas popa aas add or adc add and ds aas add or and add pop xor in xor xor test movsl ss cmp cmp cmp cmp cmp xor add add pop xor xor xor test stos fbstp pop cmp cmp cmp cmp inc or adc add pushf aaa das cmp cmp cmp push or sub add inc xor or ss cmp lea lahf ds push lods aas xlat aas add add add add pop xor xor cld xor jo add add add xor cmpsb xor xor xor bound xorl cmp pop cmp add add add dec xor cmp nop or or add push cmp or mov add in xor cmp cmp inc cmp aas add add add mov xor xor inc cmpsb cmp cmp aas add or and add aas xor xor xor xor and or sub add xor xor xchg xor xor xor xchg movsl xor xor cmpsb cmp cmp add or adc add lock nop xor xor xor add add add xor xor xor cmp push cmp add or and add popa xor xor xor jp ret cmp cmp aas lahf aas aam add or sbb add adc dec xor xor xor xor ds add add or sbb add lods xor xor aaa push cmp cmp or and add mov cmp cmp cmp cmp cmp add add pop xor xor lahf xor (bad) cmp cmp cmp cmp cmp or and add sub inc xor xor xor jp insl aaa and fidivrl idivl add add add add test xor xor xor xor xor pop ds aas mov aas add add add pop xor cmp cmp aas add add sbb xor stos xor aaa aaa cmp adc cmp cmp cmp add nop or sbb add xor mov cmp mov (bad) cmp ds aas add add (bad) xor xor xor jp (bad) cmp cmc cmp in ds aas add add add or ss aaa jns add and jb jg cmp add add add xor cmp pusha aaa fwait aaa fnstenv cmp ret cmp cmp aas push aas add or sbb add cli xor xor xor cmp sarb loopne add add push (bad) xor xor xor xor push xchg fdivs sub xor xor xor ret aaa xorb aaa and xchg cmp cmp in pop cmp cmp lock and add cwtl xor aaa jno mov jg add cmp or add add add test jmp mov xor xor addr16 loop add or and add or popa xor xor xor add mov cmp cmp and add add add xor xlat aaa sub outsl cmp cmp cmp add xor add add (bad) xor xor xor xor pushf xor xor jne mov add add mov xor mov popf cmp cmp cltd cmp add push or and add pop xor xor and jg sarl (bad) cmp mov inc cmp add add add insl xor xor fidivl xor mov ss aas lret aas add add add add add xor xor xor ss ss cmp add add add aam add sbb xchg sbb int3 aaa sarb add add add imul xor xor xor dec xor xor xor cmp je out add add add or outsl xor xor ss cmp mov cmp xchg aam mov mov add add jae jo fdivl xor jns iret cmp cmp cmp and add or adc add scas cmp cmp jns add or adc add mov cmp cmp aas (bad) aas add or sbb add insb xor xor cmp sbb add lock and add jns jmp xor xor mov (bad) xor ss ss add add or sbb add mov xor push cmp cmp or and add (bad) xor xchg xor cmp cmp cmp cmp sub add add or sub add cmpsl xor xor pop xor (bad) aaa mov cmp cmp ds ds pop aas add or adc add test adc xor cmp or sbb add jge leave xor (bad) mov lea and push or sub add sbb je out int3 xor xor ss ss cmp cmp add pusha or sbb add pop xor xor inc xor cmp in or add add or xor add xor xor xor ss divb pop aaa les add add add pop xor or sub add xor mov in xor fdivl inc aaa jnp int in cmp fidivr cmp sub add add inc xor cmp cmp cmp cmp cmp mov add add add xor push ss ss aas cmp sarl aas add or sbb add sub dec xor jns sub out imul loopne add or adc add and mov cld cmp add or sbb add push xor xor sub ret cmp cmp add lock xor add mov xor xor cli xor je xchg xor ss aaa lods aaa int3 aaa in aaa or fidivr xor mov cmp cmp cmp adc add (bad) xor xor add or sub add ret xor xor xor xor xor xor jmp xchg cmp cmp cmp cmpsb cmp cmp and xor add cmp add sub xorl xor xor cmp cmp cmp cmp or sbb add add fwait xor xor cmp cmp inc or adc add mov fidivl xor or mov add add add add add xor xor cmp aas (bad) aas add add add add and fbstp repnz xor xor xor push adc mov cmp cmp jo add add or cmp gs xor cmp cmp cmp fistpll data16 cmp cmp add add sub cmp cmpl cmp int3 cmp dec cmp mov add add int push xor sbb add dec xor xor ss cmp cmp cmp cmp add add xchg xor xor xor mov cmp lret rorb add add ret xor xor cmp cmp aas add or sbb add stos xor xor movsl cmp add loopne add add xor les push xor clc ds or adc add inc aaa mov cmp and add xor push xor xor xor cmp cmp cli xor add or add xor xor cmp cmp or add xor and lea repnz insl cmp mov out aas add add or add xor xor xor xor cmp jae sbb inc or add cmp xchg cmp mov add add add mov mov ds fidivr add add add add add xchg sahf xor int inc aaa mov jno add add add add int3 xor outsb ss ss adc sarl or add add add adc xor cmp cmp cmp cmp or add xchg cmp aas add add add mov aam in or cmp and xorb aaa jo xor into cmp cmp cmp add add add and xor xor aaa sub mov xor addr16 add add or add ss aas add add or add xor xor loopne add add add mov (bad) xor jl cmpsb xor ss add or add xor xor xor bound test int3 aaa (bad) cmp add add add add sub xor lea int3 aas add push add add add xor pop xor aaa out aaa push cmp data16 cmp cmp cmp add and add add mov sub adc daa cmp cmp aas add push add add add xor xor cmp add add add add xor mov pop cmp cmp push push add add add sub cmp cmp aas cmp mov insl cmp icebp add add add add loop inc xor ss push cmp and xor cmp jo add add pop xor add add bound (bad) xor xor xor cmp cmp cmp jo ljmp add add xor (bad) ss cmp mov add mov cld xor xor ss add cmp imul fs scas aas add add add dec cmp push cmp cmp or rorb sub add add das xor xor xor xor sub jl popf aaa lret aaa jne jle push jne,pt add add push add add dec cmp cmp cmp cmp add push add add mov loopne fwait xor lods xor xor xor aaa mov lock add add add cmp cmp add add add mov xor cmp cmp aas add add verr add add xor xor xor xor inc cmp cmp add add mov xor xor cmp cmp cmp cmp sbb add add lldt add ret add push cmp cmp add sbb add jmp ss cmp aas add add add add dec xor xor xor ss aaa mov lds dec cmp add add add add mov xor adc and mov add jo add add push xor xor add add add popa xor xor dec cmp cmp ja,pt fidivrl lret aas add add add or fnstenv inc xor add add mov xor xor cmp cmp cmp add mov add add fdivl nop xor xor xor xlat ss sub pushf cmp rorb sbb add xor jae add xor and add rorb add add add xor cwtl xor xor fs dec cmp loopne add add add xor xor aaa cmp mov cmp fstpt and dec aas add add ltr add fidivl ret xor int3 xor cmp cmp cmp adc add or cmp adc sbb add sbb xor cmp leave cmp cmp hlt aas add add adc and add cmp inc xor xor ss aaa xchg aaa fnsave sub cmp cmp add xor add add add cmp pop cmp cmp add add add leave xor cmp cmp cmp cmp cmp add add add add xor fwait xor xor cmc xor xor lea mov test neg add push rcl push setnp inc shl cmp push rcl shld bt mov inc and cmc mov not jmp inc jecxz fistp xchg mov in mov or inc cmp test in jne popa popf add stc out sbb repz sbb inc mov xchg shrl jecxz cmp iret mov ja lea mov pop int3 ja jg repz cli into or cmpsl cmp mov lret mov cmp push mov int3 adc ljmp jo jg xchg lret fisttpl enter lods dec xchg xor xchg enter fcmovnu inc push mov clc sub add sbb incl cmp or ja fidivr hlt mov fistpl dec lret das or jge in rclb cs daa fsub push outsl in add je jnp sbb (bad) xchg daa aaa jns mov out cmp out jg pop std and cli and je mov sub dec xor sbb jl adc cmp mov (bad) fnstcw jb lods mov movb jb push jp cmpsl inc jg jno inc push cmp xchg pop js jnp out lock mov dec lret push fmull in fistpll in repz push inc into jno test push push xchg inc stos pop ljmp pushf icebp test xchg mov dec jne (bad) (bad) mov (bad) sti fnop dec imul push jnp cmpsb jbe popa testl test cmpl push gs fbld ds cmpsl sbb fldcw and pop lea arpl dec or shrb sbb cmp inc push aas dec xor movl and call cmc call or leave std add lock xchg mov jmp nop sbb dec xchg sub pop inc out dec push dec loop sbbl cmp push es sbb sub cmp sub fdivl in or fcomps rcrb (bad) int repz mov pop imul mov mov mov dec push adc (bad) jno mov sarl test lret imul cmovnp sti or mov push or mov or imul icebp ja and ficoml daa jmp sub outsl xchg (bad) xlat push or adc push lods jecxz out lock add bound out rorb bound sub (bad) jo vshufpd clc pop and mov mov fldl xchg mov dec push mov sub and adc sub pop loop gs ljmp cltd pop cmpsl xchg jb movsl jp jg jae nop mov mov (bad) ss dec popf inc (bad) lods jno bound jns repnz in push cmp aas ja add adc mov aam jno inc hlt fwait mov pop pusha inc clc clc call mov push mov jo loope mov ds loope scas in fadds repz inc (bad) pop sbb xor in inc in mov ret sarb sub jmp lahf mov ss pop push out scas cld jae ds lock mov sbb ret ret pop loope ds inc insl sahf cmpxchg bound pop fisttp sub ret pop sub or or daa push mov dec jp es std pop sbb mov aas pop cmc dec pop lahf movsl insb cmp add imul push int lret push loope pop cld mov fistpll or mov ds inc fldenv cmpsb mov adc (bad) cmp jns jmp fs rol sub fildl mov sub jnp enter fcomip cmp imul je jae insl movsb (bad) call inc loopne mov dec mov imul insl jb pop jle dec mov mov pop pusha ret mov inc cltd xchg rcrb rorl lock add mov notl and loopne int3 add mov or addr16 movsb imul fs movsb lcall jns adc dec mov cmp fisubl jno aas inc dec imul cmpl add sub push lea call call pushf jmp pushf pushf movl call jmp jne fs inc sbb and hlt adc fldenv je fsubl jp jbe jae faddl mov push es inc xchg xbegin stos jp mov sbb (bad) or out inc jne push out dec cld icebp into cmp dec imul pop fbstp mov fimull push fldcw scas mov mov push sub fsubrs in into sbb mov dec adc sub push xchg ret mov xor enter rcrl dec (bad) push cwtl jno ds dec cmc dec add push pushf pusha mov lea jmp jecxz into mov imul cmp fsubp mov dec push push mov mov clc out repnz cmp and flds (bad) std push call inc mov fnstenv xchg mov jge shl das push hlt push ja in cld adc sub jmp lea xchg pop push leave pop push xchg mov outsl jno sarl jge lret adc mov insb pushl in pop pusha mov imul mov aad sub push push call pushf cmp mov xchg mov orl dec xchg push mov fistpl push mov pop in inc xchg mov jg mov ljmp lds dec je mov daa push and scas inc mov bound lea fldt add or fisubl jmp mov mov xor lods push cmpsl hlt stos sti call cmc rcr mov and mov test sub and xor dec jo fsubrl mov ljmp or sub mov lret notb rcr sub or sbb and bound adc repz or jo out aas (bad) fsincos les ret fsubs inc cmp and clc cmp cmp lock pop call bound sub ret fwait stos aad ds movsl and inc cmc mov lahf mov pop gs test xor mov and imul mov jb jl out jae pop mov (bad) jg lea jg xor out mov (bad) fcoms scas test xor inc aam mov xor inc xor lahf js repz (bad) lahf jb daa mov sub insb xor sub shrb hlt cmovns inc pop sub popa or mov arpl cmp jno cmp icebp lea xchg dec pop mov inc std jnp pusha pop lock mov mov sahf mov nop mov fidivr pushf or outsb mov adc mov ss mov adc shl cmp loope gs fwait jle out insl jb add popa mov inc daa clc or rcll lods cmp sahf stc push push lret push hlt sub cmp mov jnp sbb daa aaa fbld inc in gs sub test jbe cmp jns jge ret cmp call sbb andb cli push rcr xchg sub jge push xor bts and push pushf setle inc mov push mov shl clc mov bts jmp bt ror pusha pusha mov movb xor jmp clc mov imul dec add dec movsl pusha sbb loop jmp sub mov lds sbb fisttpll mov push sub test or dec rcll repnz in mov mov cld es (bad) das scas lock movsb mov jne or popf das lods leave cmp jge inc popf sbb decb pushf shl fbld dec jnp jbe stos (bad) into add inc jns cmp hlt stos mov inc stc aam jmp lret aam or cmp mov fwait add dec outsl popa fs imul add mov call shr inc xchg ror inc aam aas mov rcl pushf not ror mov clc xchg bt test rcr rcr mov pushf push sub pushf rep not call call out hlt lret lret shrl cmp cld mov imul xchg imul insl rcll out (bad) cltd and repz pop loopne add loop xchg mov sahf pusha loopne mov mov add adc (bad) mov jg jo jno call call ret inc cwtl sub xor jo stos mov xlat cmc jp push test inc jb mov pop into xchg lret loop or dec cmpb fimull mov nop cld adcl and cmpsb cmp jg jnp jg jg cwtl cs cmpsb cwtl cli movsl cmp (bad) jno cmp (bad) fildl pushf lea je xor add not mov stc add push mov data16 icebp add mov lea mov push cmp call xlat popf mov or fnstcw ret aas out lods aas (bad) jmp dec mov inc add cmp (bad) mov (bad) dec jmp sahf rclb decl push call jle xor or icebp mov (bad) xchg jb fwait push cmp popl imul push jbe push mov imul push pusha jo dec mov frstor jl and mov sub insb mov xlat je aad mov lock sbb aaa xchg leave jbe dec adc pop inc pop popf repnz rep fcomps dec mov pushf push push stos sahf pusha inc pop jle movsb lcall loop ss jg ds push jno aaa ret les mov sahf ror leave jge mov dec cltd inc int dec push faddl outsl cltd inc leave push inc cmp or flds inc adc pusha jnp lds rorl jmp loop and jl adc pushf loop in dec sbb add push push out push arpl stos add lcall jl xor aam and in sbb jle gs cli and mov jne lcall mov loop pop in add je mull out fisub es add stos call jno sub jns mov dec popl push idivl cmp xchg jno fs (bad) sbb or xchg ret shl (bad) mov push sub movsl or lock xchg dec (bad) movsl fstps leave push lods xor mov xchg (bad) call mov inc cld int in test ljmp movsl js mov mov lcall shrl sbb mov mov pusha je push imul mov sbb pop mov pop mov sbb inc cld cmp xor mov insl jge push pop xor cmp pushf push push lea jmp lea je cmc cmc call mov add xchg int3 pop mov or mov cmpsl fmuls int cmp mov sahf scas outsl (bad) lahf imul sahf fbstp js xchg inc sbb cmp push addr16 jbe dec mov xchg lods stos mov jge and sbb push movsl pop loope movsb test outsl xor inc bound mov and lds insl in xchg mov sub add xor add inc gs outsl fs gs imul add mov jns mov sbb mov clc cmp jne push dec nop add lods jae scas mov stc fsub aaa lcall clc daa aaa pop push pop bound call push pop or arpl sbb mov mov inc cmp mov icebp mov insl push pop push test sub pop mov add sbb dec cwtl sbb nop or test les mov loop sub pushf xor fstpl bound int icebp loop int sub daa push push fucomi dec test jo jmp fwait movsl aaa push adc add jge rcr xchg mov fnsave pop (bad) sarb push jecxz loop daa cmp std jmp jmp ljmp sbb jo pop (bad) jmp movsb xor xor jns ss pop cmovg cltd inc pop insb jo jo mov cmp mov jae dec ss gs pop mov mov popa sbb adc cmc add sub mov sarb nop pusha push (bad) cmp push repz or and mov imul push loopne jno mov inc mov imul mov pop mov mov addl (bad) adc cmp inc sub es jecxz pop adc (bad) push mov shl xchg lret fstpt xor cmp jnp popa mov jo outsb stc (bad) outsl cs inc inc nop push dec cmpsb fdivs in cmova ret scas mov inc push arpl (bad) popf rcl and pushf cmp xlat gs add or js iret add ljmp (bad) cmp mov out lret lret daa xchg sbb cmp (bad) iret into ljmp adc dec pusha aas pop lcall add mov pop push (bad) push sub dec adc stc jmp das fs test adc cmc stos lods xchg xor (bad) or add in xchg mov fisubrl pop xchg dec insb out test mov popa pop mov insl roll faddl adc xor leave (bad) fcom jmp bts shr bt mov pushf cmc jmp lahf cwtl seta lea pusha movl pushf pusha pushl popl pushf pushl ret jmp mov mov gs push (bad) out fnstenv mov jne insb (bad) ja mov push test jmp lret fild sbb push or mov flds imul leave imull sbb sbb imul sahf xor aad loope (bad) mov sbb xlat dec jnp push sahf cltd mov mov push rorb adc lea mov mov push arpl add movsl sbb push inc cmp and pop mov sbb loop mov scas push out mov clc add lret mov je jge loop clc add push jo dec adc mov adc or xchg dec js cltd out icebp inc cmpsl mov mov out jp in jno fs push jo js sub add addr16 sub mov adc sahf orb stc mov movsl sbb jnp popa mov mov inc ret add and mov aad js stc (bad) fsubr sbb in ret sbb cs movsl cltd mov mov ret sbb cmp jns subl cs pop stos hlt insb adc mov in in push insl or (bad) dec xchg out aad (bad) jno xor clc xchg lahf (bad) mov cwtl lea lea call add push adc inc add or mov add jle in xlat dec fidiv lock faddl out jnp cltd test clc push rorb mov int cmp dec jo ja mov lea push call dec sbb lret jno adc adc shrl daa roll mov lods xchg dec fldl inc push into aas jnp clc or push sub dec jp out cmpsb lea jg leave sbb mov cwtl jecxz mov iret jno std loop (bad) int3 rcrb (bad) (bad) jno das cmp inc pop mov movzbw lea jmp movw lea je pushf mov jmp pusha lea call call pushf call xor pusha cmc rol jmp lcall daa inc lds xchg sub fcmovnb fnop cs add or pusha mov (bad) lret push mov mov (bad) inc fdivr in xchg dec fs les movsb int pop fstp outsl sbbl sub lods mov mov xchg pop dec test xor pop mov mov or ja (bad) cmpsb outsl test cltd out das sbb int lea xor mov stos mov add dec mov mov jae cld popf cltd psrlq (bad) mov or loope cli das das add scas push jbe icebp mov and jno cs bswap lea jmp pushl jmp rcll push jmp cli jecxz lret mov push adc xor xchg addr16 inc pop cmp outsl mov sti in pop arpl or adc cmp lods add jb into shrl jge stos mov arpl ja inc xor push stos testb sbb stos adc jbe push mov popa push lods iret mov bound mov mov add arpl mov cmp in (bad) loopne fsub mov outsl jo push push jno jno cs cmp insb in test addr16 inc push add jo sbbl scas (bad) popf add (bad) (bad) test jge test lcall daa cmp or xorl sti add dec mov mov push iret leave cmp imul popa adc cltd daa movsb and sbb jb pop lret mov dec sahf xchg lret cmp pop mov mov rcrb cmp add das push fwait ret ror aaa jmp mov xchg aad jp push sub je test cld lea xchg jae mov mov mov pop test lds jl xor lcall sub push dec xor push in sbb les push test mov cmc inc cmp rcrb adc inc ds mov xchg mov pop pop add lret (bad) push mov dec sti aam clc les (bad) fucomp adc xor int clc mov (bad) mov clc mov or (bad) sbbb mov cwtl pop test jl jl leave cli movsl fsub aaa jno sub mov (bad) neg sar rol xchg jmp cmc lret and push mov scas lcall inc mov (bad) sti cmp jmp dec push push dec mov out je lock ficomp mov xchg jo inc push repnz ljmp (bad) cmp cmp pop and pushf add outsb sbbl xchg hlt imul call xor mov mov cmpsl sbb xchg test aas inc repz pop add imul out cmp ds frstor xor imul adc push add insl in xchg xchg enter cmc xchg or jg mov sub outsl outsl pusha movw call cmpl xor sbb pop loopne mov sbb push cmp lahf mov jle adc aas push add lock sub lret mov cmp push rcrl in aas loop or jl push jp (bad) dec jnp pop es pusha mov das bswap push data16 inc das leave lods icebp inc enter mov lret xchg add fsubl stc dec xlat cmpsl jle push popa leave mov or sbb ret gs inc add and icebp pop and popa pop push (bad) hlt imul sbb mov movb es sbb sub sub jae daa js mov sahf adc xor in leave xchg movb movb call sbb sbb cli cmpsb push cmp inc out insl xchg movsb out mov mov shll lds lods mov fldcw sbb mov xor push xchg stc and aam fdivp cs inc jnp pop loopne,pt xchg inc fisttpll fild and sbb mov test sbb jge int3 repz xor mov xchg lret hlt dec lds mov xor xor jae ja (bad) lcall dec pop push sub dec aaa jne mov jge (bad) jne mov je inc lock push sub loopne (bad) repz lock dec mov addr16 xchg test xchg pop ret adc shrb push gs sub pop inc add iret fisub mov pop imull push xchg lods push dec mov cwtl sbb mov je mov lahf adc xchg and xor add sbb xchg cmpsl dec lcall add mov cmp dec les das jo mov inc or add andl movsb cld sub jb daa ja lret jae xor (bad) pop or aaa jmp dec rcr add loop jmp ljmp sbb xchg push fild push jge pop inc cmp leave cmp scas (bad) lcall add fisub push lcall fs js pusha clc rol call push add movl lea jmp xor cmp cs fdivs ja outsb mov (bad) and ja xchg push out lret jge icebp adc push pop lods out lea (bad) into jno pop lods cwtl into fldcw mov into mov mov (bad) push push mov add xchg enter xchg push mov test insb sarl ret mov add sub loop dec mov sti xor loop bound repz inc sbb sub add inc cmp mov cwtl inc movsb jnp (bad) lea sbb pop dec int3 shlb inc (bad) out shl pop cmpsb das xor (bad) faddl rcr out cmpsb sbb stos cmc add jle xor adc lahf and dec pop pop andl out bndldx sbb jbe push stos mov jb sbb lods mov scas xor inc lcall test icebp or dec pop inc pushf insb (bad) jns test mov (bad) mov mov push pusha jne loope loopne add cli jno mov xor dec mov or lods add js sub imul scas outsl call jo js cltd fidivl pop sub pushf insb in bound outsb les sub inc xor sub or daa clc into adc cs daa aam daa fsubrp dec or add dec push inc push dec cs insb add jne lea push pusha mov mov call cmp jmp add dec outsl arpl inc jb add add mov popa xchg (bad) call lock incl add jb jne jb push popa insb jne inc add inc and sbb adc pushf pushl popl movb pushl ret test inc fwait stos pxor fisttpll insb repz outsb xor inc add lea sub out lret repz idivl repnz in shl jg in adc mov sti arpl cld dec adc push jnp xchg icebp push or push push and cmp xor arpl in loopne dec daa mov test jg dec lock dec ss push fistpll dec orl push xor and jle push insl and (bad) stc pop add adc mov popa leave loope add pop (bad) pusha mov out sbb and push ds sbb xor push xchg jnp imul imul jne pop push mov arpl movsl mov data16 (bad) dec fildl push sub vshufpd mov pop pop daa out je mov sbb mov inc loop daa jns jns push ljmp mov push lret mov or sbb xor xchg test std add push adc push negl sub mov push inc outsl lret fld jnp fsubrl mov repz and enter movsb lcall leave cmp imul push test adc add movsb sti mov into stos roll enter mov cmc jmp add test mov stos mov xchg pop (bad) mov nop in jle push test mov (bad) out add mov mov lds dec jbe and inc popf or daa popf in scas iret and dec aad xchg out dec xor cmp rclb inc push aaa jp dec xchg out pushf sahf sub jg jne inc insb push mov int test push out sbb ja inc add and dec iret adc out sub (bad) lock subl jg lds jno and mov or sbb jp inc mov je ja sub pop (bad) stc dec xchg or mov push jmp or add ror pop int3 sub inc cwtl cmc mov mov (bad) mov leave or pop mov or fisubr call lds mov int3 jae je fnstsw pop or pop xor cmpb mov test stos pusha sahf ja cmp sbb jmp mov mov fiadd sbb (bad) movsl mov adc mov jno and test in enter bt jmp push push xor xor fs insb add ffreep incl add or (bad) testl (bad) push or or add xor movl movb pushf push pushf movl movb mov lea jmp push sbb jae mov xlat out pop (bad) pop fisub lods pop pop mov mov push test sub test enter cmp xor mov pusha mov add or sbb sbb dec dec cmp pop das xchg loopne mov mov and xchg jmp xor dec test js mov mov lret nop xchg sti mov pop fwait jg adc test dec push jnp jle xchg into loope scas les imul outsl jg xor data16 sbb pop leave mov mov in aad fimull and or xor ss and adc insl adc add sbb inc out pop iret (bad) cmp cmp nop mov or inc int3 jae pop lret and sbb inc cmp int3 (bad) xlat and sbb jmp or sub sahf xchg cmp sarb mov call or inc mov or fnstenv mov mov inc sbb mov jmp and xchg (bad) jl or xor sti arpl popa mul mov or or cmc call push dec dec je push sub mov push and jns pop push imulb sbb sti and in das jo mov scas jo xorl sub mov cs pop test mov movsl cltd test inc sbb sbb mov aaa sbb fs (bad) xor jno nop es stos push lods push stc inc decb or mov xchg cmp out and negb (bad) bound cmp adc add scas loope andl sbb xchg mov mov or inc cmp rcl into shrl int push test xorb push enter jmp inc movups outsl insb xor xchg cmpsl inc movsl lcall mov xor js int3 inc lock adc das iret sub pushf xchg sub xor mov mov mov jp adc sbb sar cmp inc adc mov mov jns cmp popa pop jno insl jge adc push add sub js fidiv lcall inc and test nop pushf stos xchg jl adc and mov nop sar insl mov or sbb cltd es daa out lret stc pop imul idivb movsb and dec xchg or mov (bad) pop gs sub sbb cmc stos popa jle pop pop addl repnz cmpsl pop mov xor call gs ror bt sub pushf pushw popfw pushf movb movw mov inc pushf adc pushf push push pushf pushl ret rep pop mov pushl mov push push lea jmp rorb xchg xor enter cmp pusha out fs data16 call mov imull stos jmp into pop sbb (bad) pop test or pop das xor dec push or (bad) mov stc rcll out outsl ficompl lods cmp cwtl (bad) xchg xchg pop xor in (bad) loopne sbb lods repnz lds xchg mov out lcall push xchg cmp sbb jb or sub iret push subl insl xor cmc iret sbb iret adc mov push repz dec adc add cmc dec test loop dec mov inc frstor xor sbb fistpll mov ds nop and xor popa aas fdivl test xchg lock test (bad) dec (bad) add mov xchg sub ja aaa xchg leave mov seto mov jg pop jg inc sbb mov mov mov xchg mov cmc stos jmp iret das aas in loope aad popf lods adc push cld push mov cmp (bad) imulb mov pop aaa daa jno ss mov loope stc icebp ret in scas mov bound rcll popa push fadds mov and mov out hlt or push rolb aas adc outsl pop cmpsl je outsb or adc mov ret add pop xchg adc mov dec mov cmpsb mov mov fcmovnbe mov lcall les mov std or js pop pushf xor push cmp clc cld data16 repnz (bad) test push pop iret aaa sbb aaa push dec adc test sbb aam or and fadds cmp into push test out jp out lock sub cmp sbb (bad) sub jle fsubs nop and imulb cmp inc push push mov adc sbb mov (bad) jo push jno sbb add mov xchg and and outsb jl add cmp mov and lods dec fwait sbb xchg push cld mov insl stc lret jns (bad) lcall cltd gs pop and sbb ljmp dec stc movsl mov pop adc jnp xchg jmp leave insb sbb add test or (bad) das ret inc out leave jae nop mov dec pusha pushf jg mov jge cmp jecxz push mov or cmp cltd out repnz call lock cmp dec out cmp sarb sar sub insl mov jbe scas add push push orl es imul dec mov jge add adc frstor out bound sti (bad) push add xchg movsl les cmpsl mov lea std loope cmp insl cli or (bad) negb dec pop sarl aad int3 popa jge adc out hlt dec dec mov pop (bad) xor cli ss adc ret cld dec out insl xor push mov pushf push imul or clc xchg sub movsb inc mov leave push sub sbb (bad) sbb sub jae jmp jecxz jno sbb mov mov add jmp (bad) or pop roll sub push push dec sub inc mov fnstenv hlt add and inc dec pop xchg nop mov enter push lods xchg (bad) fsubrl add mov xchg cmp adc jecxz and push popa mov repnz fiadd nop scas mov xor stos out mov inc fwait stos and fldl2t jecxz mov jbe scas (bad) fldl in decb pop roll pop rorl popa jl cmpsl mov incb mov adc shr and jg jbe leave push stos jmp jge fstpt fwait arpl mov dec (bad) outsb adc xor mov movsl fldenv inc (bad) fsubrl les mov pop add xor mov lods mov out sub adcl or aad pop outsl adc mov mov xor outsl das test and sub jae ret mov daa sub stos push leave or push (bad) xor cmp fcmovnb xlat movsb mov dec jae jg addr16 jo mov (bad) dec sub (bad) repnz bound jnp cltd (bad) or cli dec xor xchg lods mov cmp dec bt rol clc call pusha movl movb pusha call push movl pushf pushf movl pusha movb pushf lea jmp pusha push movl pusha movl movb pushf mov mov lea jmp (bad) or les push cmp int cmpsl mov lds mov push sub or inc pop mov das frstor or push (bad) jmp sbb push xchg push into fimul imul xor mov shlb pop lds adc lock ret adc test cmp mov jle push jne add adc add pop and and sti stos jne mov jle xchg lds mov iret fbld sub add sub dec jae js insb xor push stos mov frstor xor sbb sarb push enter imul pop data16 mov ljmp push sbb daa loope dec rcll enter or push xchg push je imul sub push lock movsb or test or pop mov test dec lock mov fsubrp cmpl pop xor fsts jo sbb dec xchg sbb fsubs lea scas push add pushf test jbe sbb call call adc xor aad mov loop lcall inc mov sbb jae and adc cmp mov cld decl push stos mov mov inc sbbl jle xor sbb imul in rclb mov push out out pusha lcall mov aad adc dec std daa out inc and cmpsb push push dec mov stc and inc mov pop aaa adc call mov popa mov mov cwtl cmpsl mov xor jnp sbb push leave push les int3 pop andl cli cmpsb (bad) pop sbb or and (bad) (bad) out mov divl jge jp push sub sub mov popf jne sbbl sahf rclb popf push fistpll push push cmp mov pushf lea ja setge inc pushf inc jmp pushf pusha or call jmp cmp pushf cmc cmp call xor bswap and call lcall or jge cwtl add dec xchg fidivrl xchg enter loop sti add cmpsb movsl insb jae push outsl xor popa push negl lds clc xor inc mov xor adc mov add sarl mov jns js scas in xchg std loope push pop inc popf lods movsb in xchg dec xchg rorb pop int and sbb jmp in mov xor das fbld xor pop push out mov mov (bad) fdivrs rcrl add adc jno push orl mov xchg push out lret inc js scas inc add insb ljmp pop ret sbb push repz loope sbb inc mov popa (bad) jo xchg add ds sbb test fbstp aam stos cmp pop ret xchg faddl xchg int adc pop lahf insl jp inc pushf pop cmpsl aam mov pop or or jg jne sbb dec mov (bad) jmp sahf (bad) xor loop in (bad) js xor push sub mov mov jno and push dec les pop inc pop push sbb mov mov sub imul dec fild jp xchg sub lret fimul je inc ja push sbb sbb xor leave movsb lahf mov sbbl outsb lds clc adc fwait adc call in in add add dec jmp test mov (bad) js jmp sub or out and jb cmp sbb stc and sbb add and inc sbb sub (bad) dec sarl in or cmp aaa sahf add sbb es mov adc (bad) dec jno xchg or aas popl xchg scas popa mov test jecxz mov scas iret scas dec idiv push jne mov adc lds int3 clc clc cmp jmp call cltd (bad) push loopne in cmp or arpl mov mov push xor test popa fucomp or loop cmp fucompp testb ljmp mov popf add mov movswl out decb push fs and sub adc xchg and sbb cli lds outsl bound js or cli es in leave faddl arpl mov pop movsb cmp pop loop out adc adc inc or aaa fildl pop cmp mov jb jno adc pop ret pushl popl stc cmp pushf movb lea ja sar sub jmp add out mov jmp push push mov jl mov cmpsl jns fs enter cs inc jge dec rol mov arpl out jg outsl scas pusha ffreep (bad) call mov add cmpb and jno stos mov xor pop test mov fist in push jg xchg sub aad dec mov jmp jp adc inc cmpl xchg lock pop ret dec shrb loopne je mov ret pop push popa lods push push cmp and lahf loopne jno adc insl sti fs push das jo fs inc push rorb sub mov fldl stos pushf add int3 js loopne xor out rclb or imul shrb sbb mov insb (bad) xchg adc add sbb sub rcl sub xchg mov sahf dec adc pusha jo pop add adc cltd insb jl mov ret cmp push sub call lahf rolb push clc scas lret fistpll fwait mov mov mov ret mov ffreep pop fiaddl fdivrl mov add fimull ss push add lods pop inc push dec and push mov pop outsb mov add arpl pop jno adc adc nop push pop shl push out stos fist rclb cmc dec nop push xchg stos call int3 scas iret jl (bad) mov push dec dec push das jo push gs fldt push insb aad loop or mov movsl mov jns ret cld inc push lods xor sub sub inc mov mov mov mov push cmpsl call dec dec pop pusha (bad) in into arpl ret (bad) and orl xchg out cmpsl jecxz mov sahf sbb sahf cltd and and adc daa aaa cmp dec lea lahf mov mov xchg cld or xchg sub xor and test hlt lret jne dec lcall cwtl out push cmc or mov lock sbb mov stos iret iret je,pn jae imull jge or cld jg mov std xchg pop aam imul aaa mov aas aas sbb push test jp stos cwtl mov pop shl add and push and fimul imul xor cmp imul push stos js push or loop jmp mov pop push dec ja ljmp mov leave push push push dec xor push mov call jge and adc test xor inc sbb sahf test mov add or fsubrs xchg lret out push daa cmp xchg (bad) aas sbbb mov jne push pop imul sbb jns push xchg mov addr16 xchg jnp fadds xchg test loop lea push in and adc sub mov jmp pop jl decl popa adc (bad) or out lock inc clc or jmp sbb push jmp jbe mov sbbl mov iret (bad) rep in jno (bad) push (bad) pop mov mov mov dec mov ret std loope loopne lret clc out and or mov xchg shrl dec nop mov pop mov outsl mov stos mov fstl pop mov xchg mov push inc idiv pop jbe ja or push unpcklps addl test call cmpl and fwait push mov add or sbb jne ffree add aaa sub out sbb inc fwait mov das das mov loopne ret rclb fisubl iret mov js mov adc xchg int3 loope sub sbb repz mov (bad) insb repnz aaa repnz xchg ja (bad) and cli imulb test ljmp cmp inc insl xor rorl sahf and cmp push popa lods push nop mov mov lock in inc cmp dec push loop mov push pusha das push imull (bad) aad pusha jmp mov movzbl pusha movl movsbw lea call test pushf bt sub lea push or push movb call mov pusha pushl ret mov rcl mov clc cmp repnz pushl lea jne mov pushf movzbl movb pop push lea not lea jmp pop into xor jg loope ja mov rcll aad adc or or imulb cmp sbb fs rclb lcall push dec mov add ret (bad) call inc xchg aaa mov fiaddl pop xchg xchg mov xor and adc dec adc inc cmpsl js ror mov xchg stos xchg sbb sub comiss cmp push cltd neg loope fs ja pushf call mov pshufw push aam ret cltd sub cs jae rorb pop jns jns add ret mov or cmpl bound inc jne inc fcoml fwait add jno cmpsb mov jmp xchg dec sub push and xchg dec dec sahf arpl decb inc jne mov movsl mov clc or pop scas sarb pop cmpsl pop add loopne aas jg push scas lock ja es jb ja pop adcl fbstp jmp fistpl and mov mov xchg or out scas sahf loopne mov inc dec sahf loope movl movw push pusha movw lea jmp clc pushf pusha or call mov dec mov sub insb imul in fisub adc inc stc cmp jecxz mov leave lret sti rorl stos xchg movsl push mov cld (bad) xchg aaa inc flds cmc add sbb sahf pusha and dec shr push sub insb hlt push mov jnp lods dec aad imul movsl ret mov and and add das sbb nop psubq cmp aaa in xchg pop xchg fwait inc fadd mov (bad) leave adc cmp xor xbegin push icebp sahf inc roll dec jne je inc jns gs outsl push imul push movl jmp sar mov ja pop xor (bad) call movsl cmp rorl xor fistp (bad) sub aad movsl mov dec xor loopne sti stos outsb enter (bad) outsb fstl out lcall test and test sbb lods mov push out push push cmp je sahf in jb mov lds mov adc fnstenv xor test xlat push out sbb jns jne mov and cmp push loope pop (bad) sbbb adc inc int mov pop cmpsl ja je sbb iret mov push movb lea call push pusha pusha push lea jne jmp cmp pushl lea je pusha pushf pusha pushl lea jmp cmc (bad) mov or nop cmc push jbe cmp or repnz mov jmp and push iret gs enter cwtl divl mov cmpsb xor ja dec mov and adc jg cmp inc cmpl (bad) or sarl dec stos xor dec xchg pop loope jns jmp push fisubl push cmpsl mov inc add pop add cmpl jl pop sbb int mov xchg mov inc jb rorl push ret fwait dec (bad) cmpsl xchg (bad) mov int cli adc fld cmp jecxz sbb outsl out pushl or mov mov cmp jmp xor mov cmp test mov cmpsb cwtl adc cli pop addr16 outsl inc add andl xlat lock jae mov push bnd jbe jp adc loopne sbb add ds stos xor rcrb inc sub jns cmpsl stos lea push xchg arpl mov xchg xchg sbb sub scas lock sub mov adc leave push and mov cld and push outsb xor cmpsb pop mov (bad) jl shrl pop rcrl call sub sub xor in and push fnstenv int3 js mov stos pop sbbl inc push pop es int std push mov cmpsl push in in jmp (bad) scas aas lcall fiaddl call jge adcl xor lock out mov pop insl outsb andl pop movd test loop and aad cltd adc push nop mov mov mov outsl iret inc fucomi adc add push jno push sub push vpmaxub mov cwtl ja mov rep fisttp in sbbb cltd sub jmp cmp sbbl push int test jno test push andl rorb pop add aad sbb stos jns push int3 rcl daa jnp lret shrl jae and jg iret fisttp pop pop sti pop jp call std imul (bad) dec xchg shl cld push sub push cs jg sbb stos mov test mov mov inc push mov or inc imulb and adc cmpsl mov cld ret dec xchg mov int xor jno pop mov pushf push movb movl call cmp cmc add pusha pushf mov pushl lea jmp xchg xchg push cli pop push bound daa insb repnz push and sub cmp jmp repz into data16 xchg mov mov push or sub jl fldcw sub jmp in or sub insb ljmp out and fwait jecxz xor aam movsl test call push fldl push addr16 mov xchg push int mov out imul dec push loope cmpb jmp push jno push orl pop popa push movsl cmp fucomp add or mov call mov mov push dec aaa es add mov pop cmpsb lea aam out loope or in xchg mov aas jns push clc or mov sub icebp daa dec out (bad) je or lahf enter add dec pop jns pop popf in test jno imul dec xor inc push insl pop nop (bad) push popf roll jno cmp sub and push add cmp (bad) fisub mov lahf jbe push cs add pusha mov lea jae jmp sub mov mov cmp fs lea lahf negl push imul add sahf test xchg cwtl mov xor dec fldt xchg loop inc pop fisubl jp jb inc clc or adc fsubl ret adc cmp lcall mov lock sub int jle gs inc or mov and lea mov xchg scas nop pop test xor inc sub or and push pushf repz mov ja lret imul cbtw loop dec jno dec (bad) les sub sti pop add stc cmpsb clc bound fucomi imull rclb sbb lea pop cmp xchg sbb iret jg jae fwait cmpsl or or adc cmpsb mov sbb mov pop ror jbe dec mov add out faddp fidivrl push or clc stos adc sbb ljmp je jno add add rcll scas mov cmpsb fldl2t loopne stos frstor sbb inc cli (bad) fstps add insb xchg lds dec (bad) lock gs fldt dec jb aad mulb inc fcompl inc push pop ret in sbb sbb (bad) xlat out js xchg cmpsb adc adc fcmovnu add insl mov push xor (bad) call jge repnz jbe out add dec mov std or aad loope scas and mov mov aas loope add call (bad) fadds inc cld (bad) fsubr sarb rcl mov addr16 pusha jg mov add vmovq mov shrb xlat out push sub add seto btc sar call jp pop scas push fwait test jo ror cmc leave jnp lock dec xor jl imul fs or dec xchg mov mov pusha jmp sti inc dec fstps shlb push movsl mov dec push gs mov clc (bad) outsl nopl in (bad) lds ljmp xor es push xor test lds aam insb mov cltd fwait test or mov pop adcb mov rolb test stos adc or icebp mov pop (bad) pop push jle mov jbe mov stos aas lahf xchg cmpsl mov ret jno add movsb push cmpsl aas in adc cmc stc push sahf xchg dec push sub shr mov sbb rorb push lods pop mov mov std xor ret inc popf pop test enter xchg bound dec mov cmp cld jae inc fwait stos rolb xchg cmp xchg xchg sahf pop lea data16 and pop mov das adc push jmp mov cmc shr xchg sub iret in loop jno add xor int rolb ret scas add paddusb push mov cmpsl mov addr16 sbb push xchg inc sub push push cmp pop int3 popf jo push movl pushf pushf pushf movl pusha pushf pushf lea jmp pushf pushf dec pushf jmp jecxz lcall out call xchg stos mov mov insb ss xchg fsubs gs dec dec adc pop xor push in push mov add stos add fnstsw gs mov addr16 test andl loope daa rcll hlt iret shlb cmpsb fdivs enter enter loope push adc jl jno add push inc push lea jmp jnp inc adc sub push pop mov out inc pop orl insb xor and adc add inc pop pop push dec inc cmp or adc (bad) leave aad je aas andb lea fsubl cmpsl idivl stos adc shr xor dec pop mov dec mov mov add jae mov jg subb ret out adc sub pop fwait sbb push in dec hlt sub das lcall push out mov push out jecxz fistl or loopne push fldl mov sub push into lahf adc lock and jl dec xchg inc mov mov jb push sub inc fwait in iret inc jb pop adc sahf int out pop out push push out push cmp inc in enter sub bound icebp xor pop mov lahf test test sbb jle frstor mov scas cwtl stos add repz lret pop xorb loope fucomp addr16 js cmp popf repnz in bound aas jecxz (bad) push push push dec mov sub pop mov enter imul jmp (bad) push push mov cltd fimull (bad) jb cmpl ljmp or inc (bad) mov mov iret out js push aaa inc push ret sbb mov pop pop xor sbb sub cmpsb mov aas mov imul add rcrb rclb cmp cld mov rolb sub mov lock shrb mov inc jno call jmp shr in push popa jne rcrb imul jmp aam cmpsl pop push test sbb mov outsl or in xchg insb pop fs stc or pop mov imul ret nop flds cmp mov sub cmp jb (bad) iret adc hlt dec mov or adc (bad) adc or hlt stos test (bad) jae or ror mov jecxz push push cmp inc sbb mov pop out stos cmc sbb shl mov cld mov sbb fs js dec push fs xchg fsubr mov push int3 xor add cwtl call mov arpl inc cmp ss or (bad) and call jle add stc xchg mov addr16 repz call (bad) fsubrs mov push xlat inc jb jl popa jno and mov sti movsb inc fwait stos xor fstpl xor je iret lea pop lcall out fwait (bad) aam repnz mov xor cmp push pop movb jecxz inc fdivl je push jns xchg inc (bad) adc sub pop (bad) xor je ja (bad) dec dec aas inc or push push xchg or lock in lcall cmp clc dec mov adc cmp pop pushf lea not mov jmp pusha adc pushl pushl mov pushl lea jmp mov imul enter add icebp ljmp jecxz and xor cwtl daa aaa fldt mov lea mov adc xor clc (bad) and test jg push push arpl arpl adc sub xor push push cltd mov jecxz loope xor or pop mov imul or mov xor cwtl inc mov jo xchg je pop mov sub push dec push push pop imul mov xchg cmpsb jl mov xlat xchg sbb dec cld (bad) jno jmp pop add or adc sub loope inc add popa pusha out jno dec sti sub jge cmp subb outsl ds addr16 dec xchg jnp pusha jo je in popa jle es mov mov int3 loope and xchg (bad) or sahf cmpsb out les jg (bad) cmp lret jl mov inc or jbe push bound cs cmp fcmovb mov loop pushl mov movsl pop pusha jle lods repz cld sub fsub lods xchg xor icebp adc lcall ds int inc ja sbb mov mov mov mov dec sbb sub (bad) frstor jg jle adc mov pop add fild data16 pop js mov fadds xchg out xchg ja stos and stos stos hlt iret jecxz cs cmp (bad) int3 shrl push mov (bad) imul std popa xor inc push in adc jmp mov clc out sbb cmp mov daa push and ja pusha add sub jmp stos movb movw pushf push lea jmp sub cmp faddp xor sbb enter mov aas movsl sbb sub inc aas int3 xor out dec fistpll xchg ljmp mov lret aad or push enter iret cmpl aad je jl cmp sub aas add lret pop push lret ret jp,pt push adc into ljmp je test cmpsl cs negb imul mov fldt movl pop pop xor adc add xchg lret and fiadd or lret mov mov pop push imul lock mov mov lock loope outsl xchg jns xchg int add insb push add xorb mov fucom repnz lods lcall imul cmpsl cltd lods jle dec push pusha rclb ret movsl mov cli or mov add out popf arpl (bad) pop sub sbb sub insb popf sub adc rolb fwait adc dec cmpsb pop (bad) pushf lods sbb lods mov mov daa xlat lret shll dec push sub jno jno stc pusha das and add clc mov cmc test test lea jnp jne pusha mov pushf call jmp enter jp stos add cmp ret test div push stc imul add mov fisub inc and aad xor sbb testl cmpsl fcomps adc push inc int3 add cld ret adc sub adc jle and imul xlat test xchg mov jg icebp into mov xor lcall push mov dec xchg cwtl (bad) sbb movsl out rcrb push pusha cmpsl js addr16 pop outsl pop add in dec repz in and sub mov xor xchg jnp xlat xchg and clc aam cmc stos cmp adc jno mov je xchg out loop mov push lds jg add mov push mul sahf div insl jp jbe jns inc mov iret or rorb mov shl loope mov fildll gs inc shlb and or insb inc pop das addr16 rcrl pop inc jmp test jl js push outsl xor mov aad jge das mov sub insb dec jne sub sub lahf add aad mov out data16 (bad) jno clc dec inc add inc rcr mov mov push stos cmc jecxz iret das mov test mov icebp sub dec adc add or stc cmp jne fidivl (bad) repz jg icebp cs stos mov or ret cmp jnp cmpsl lea test sahf loop,pt jb int repz out mov int xchg insl mov pop stc test mov fidiv jmp jecxz out and adc lret repz sub pop and test icebp out das jno imull (bad) mov scas rcll int3 (bad) dec mov or add pop out daa xlat out jo mov dec adc ror fmull test mov dec sahf test or negb fidivl fdivl pop sbb repz ds enter stc add call daa call test jg mov into aaa pop add stc sub fs adc repz add cmp inc push sbb loop and insl iret and jmp cmpsb stos push ds pop push cmp xchg cmpsb sub dec adc xchg movsl cltd mov into sti add push pop add fnsetpm(287 and xchg sub sub xor scas les mov jo jg pop and xchg mov test add sbbl pusha sahf push in cld lahf add popf out push mov vdivpd mov ret jmp pushf mov scas int3 shll add cmp fsubr or cmc dec aas shrb xchg jmp adc jmp fisttp mov repz jbe insl xchg scas lods push arpl cltd and pop add in dec xor mov and bound xor aad subb mov xlat sbb mov pop add les imul iret test lret pushl adc dec iret hlt lret inc stc dec mov clc pop sub sub imul xchg popf gs xor sub or and mov js cmc in inc jns dec xchg call cmp lds push out dec enter mov in or xchg xor (bad) cmp cmp adc pop mov testl inc popf repnz testl pop inc test ja mov popa fwait loopne add mov mov lret mov add mov popf jne mov inc ficomp jno cmc repz mov add add push sbb push xlat adc add add ret add add add push add add add push add add add push adc add add scas aaa pop add add add add addb add nop pop adc add add imul add adc add add xor sbb add add xchg pop pop add add add test add idivl add and push add add add pop add cmp adc test adc add add fbstp orl lahf or int xchg pop fistl popa aad sbb inc inc aam dec and sbb inc mov xor xor cmp bound mov lock sub ret sub xchg lahf in pop lea fistp mov lods mov jecxz jl dec aas imul dec cmp mov xchg xor add in jl pushf outsl mov fcmovb sti xlat xor ja cmp push cmp pushf jge xchg mov outsl push stos jecxz lds mov fdivrs cmp outsl jge lret sub (bad) mov push aad dec push scas cwtl stos adcl mov ljmp inc paddb add adc sbb push pop add mov bound mov je mov mov sub push lret xor push mov mov std insb (bad) call jmp xorl sbb movsb or loopne jae mov popa (bad) pop inc movsb pushf jo ljmp jae or add ss test mov cmp jno mov jne jmp loopne rcll jns outsl js push and sbb clc mov or adc and popf in xchg out pop outsb adc add stos mov call xor sub jecxz lea xchg sarw nop xor add mov mov mov jg cmp or adc adc (bad) mov add inc subl or mov xchg cs xorb cmpsl inc movsb mov stos scas mov mov pop mov ljmp mov push insb movsb and push ret loopne pop inc cmp xchg xchg js or jae xchg xchg out push mov jae insl out add or xchg jecxz pop in lods iret jno or je dec add jecxz movb out push fstps mov loope popa inc inc pop sbb aam idivb mov mov in push gs and pop sbb and sub inc jmp jl test lods add push mov lcall lea adc push push aaa iret cmc cmp mov pop js orb and cmp xchg outsb sbb mov les je loope hlt dec cs jp pop xchg and inc bound add arpl testl pop int3 mov rolb pop jmp add xor mov nop xchg (bad) adc divb outsb arpl (bad) xor adc xchg pop cmp gs out cs out test pushf or dec mov xchg cmp int fsubrp movsl insb cs fnstcw stc adc or xchg push pop inc ret lods hlt add pop mov mov jo cmp add mov (bad) rcrl cltd xchg jg icebp inc stc mov or dec xor pop in test pop cmpsb mov xchg cli lret xor and inc fcoml andl bound push inc insb stos xor mov ja pop sub mov loopne arpl dec pusha mov pusha loopne cli ja out mov enter orl inc mov aam pop pextrw xor ss aad fldl inc cmp xchg das jnp jg jecxz das lahf je call sti popf or out lcall inc adc sbb (bad) jge jne push in and jns lock pushf mov rcrb js add nop jmp adc jae jno mulb cli push enter lcall mov mov sbb xor xchg mov mov push cmp xchg jp pop mov push in pop or sub lss inc mov (bad) imul fs adc sub loopne jle sub add cmpsb mov cmp test jmp pusha stos scas stos or repz xor mov or stc cmp (bad) call lret push icebp sub popa fidivl add adc nop aad ret arpl xchg pushf push outsl call gs push mov (bad) loope sahf stos test mov dec mov out push push inc popl outsl aaa leave pusha ret sub pop aad pop mov (bad) pop push iret aaa shrl cmp in and push adc dec mov adc mov gs lds jns inc jb jmp mov lods sbb into mov stos (bad) lds repz scas lock inc cmpsl aaa xchg inc xchg lret das pop mov inc fimul in das hlt cmp mov push inc mov pop jo data16 es (bad) jbe add mov (bad) mov cwtl sub pusha push xchg outsl lea xchg test xor adc pop add and mov cli shll (bad) jo add xchg pusha push jb xchg jl es mov dec shrl xor (bad) clc roll mov jae lret daa pop fidivrl ds and enter jb,pt hlt es pop loopne in test sub xchg scas dec aam inc mov insb gs sti fidivr jl imul push add adc sarb (bad) mov mov mov and or mov sub nop or mov sbb jg ret add insb push sub ret int or popf das out mov dec test dec inc sar xchg pop out cmp jl mov xchg dec shll leave xchg xchg hlt lods (bad) fiadd lods add pop pushl jns pop xor jno repz inc mov (bad) cmpsl mov xchg mov fidivrl leave mov js cmc pop mov pop cmp loop dec es push outsl test icebp popl in jno mov outsl cmp repnz ljmp jl js out sub push push (bad) aaa aaa repz or adc test mov sub lcall decb ljmp (bad) jb pop or sbb mov out xor sub or fdivl add jmp incl inc out push ds in cmp sbb mov jns cmc or jg nop or pop jl imul aas cmp test jno cmpsb mov loopne jb or lret sub aas jbe xor iret pop push pop lret sub scas scas call shll cmp sub mov cmp outsb clc or clc out jle push stc dec inc mov and mov pop insl cmp lahf mov cmp (bad) mov sub nop or xor push pusha adc xlat aam adc das cwtl iret iret jnp call mov dec into scas out lret inc cmc mov lock and add imul loope loopne xchg mov popl push add ljmp test test in movsb dec es fsubrs sub addb fnop rcll (bad) cwtl jb jge js pop cli adc ret nop pop mov out cmpsl sub dec in jo (bad) scas add daa xchg je inc incl adc insb jbe dec jmp lret test aas jb insb cltd pop cmpsb dec inc rcrb aaa (bad) fldenv add mov sar lock out pop stos and cmp dec std mov mov icebp icebp nop jp mov push popf out popl lret stc scas clc dec mov push pop stos bnd scas sub xchg xlat add push stos sub sbb xor sub xchg outsl dec add loopne xor movb push cmpsb das clc dec cli in adc insb sub inc and cmp push or loopne mov xchg push rorl outsb cmp mov loopne mov scas and loope sbb popf daa mov or pop popf push stos xchg xor push popa push fsubr inc dec jb loopne jl add cmpsb cmp mov jg mov ret sti loope arpl adc inc imul mov pop sub push lods pop cmpsl push mov mov mov or xor xor add fwait dec sub icebp jb mov dec cmp inc dec push out testb or adc inc lea testb lret mov mov aaa inc pop fistpl lahf cwtl inc jns mov lcall clc dec dec mov dec inc int xchg add dec test scas scas dec xor popa lret pop or mov mov dec xchg das adc aad cmc loop pushf fwait mov sti icebp xchg ret loope mov add popf mov rorl mov xchg sub sub clc sub rcr xchg idivb insb dec inc adc sbb bound mov out mov clc xchg movsb adc mov xchg inc data16 aam xor movb test jle sarl loopne pop cmc and xor aam arpl ret pop sub mov sub jmp (bad) xchg gs loope mov fcmovnu bt in xchg into mov stos fdivrl pushf (bad) in xchg insl loope xchg push cvtps2pi test xchg jmp and pop sub rcll lds popa inc add push sub adc inc aaa lea mov fisttpll arpl and xor sbb push xchg enter cmpsl mov push aam stos aad mov xchg xor or pusha dec xchg aad mov mov jp or into push pop mov ret das in gs adc imul cmp adc stos pop xlat lcall jo (bad) mov dec mov xchg pop cmp cmp fildl orl dec and lcall (bad) insb sbb shrl (bad) ret imul or jo (bad) sbb cmpsl lods cs (bad) loop in cwtl call sti pop pop dec jo sbb lea arpl outsl int mov fwait cmpsb repz cmc sbb push aam fisttp outsl ljmp leave mov loop add test xor xlat lgs insb dec sub mov pop lahf inc aaa cmp push test xor stos mov mov xor pop mov aam aad pop psubsb es cs dec pop sahf mov inc mov pop or insb xchg cmpsl xlat outsl jb leave cmp stos push cmc mov or or scas pop pushf in sbb dec pop clc sbb mov jne leave jae xchg test scas or dec mov xchg jnp,pt rolb lock pop stc jge sti icebp call bound sub mulb stos jge andl gs mov mov sub jecxz out loopne scas pusha or mov add push fisttpll lretw and out sbb fdivr push pop lret jge popf mov jg repz scas pop sbb leave and mov dec data16 lahf fcompl cmp add aam push bound sub orl lcall or push xor fsubl cmpsb add dec ss and xor mov jbe sbb lret xchg cmp neg sub js pushf cmpsl popa arpl (bad) arpl cltd xor mov or shrb repnz push leave dec cmp fidiv aaa push out mov fadds fwait (bad) mov fisubr testl nop push popf pop outsl jg fbld icebp sub mov sbb xlat dec sbb sti jo push sub loop addr16 roll gs scas fisttpl std push fcmovb xchg jno mov into test sbb xchg push mov sti insb xor sbb sub push jae loope cwtl mov or xchg push out push bound or lret push dec mov aad inc xchg imul fimul push dec decl lods imul mov movsl gs mov arpl lods rolb out fistpl cmp in mov call inc test ds andb in lret mov cmpsl lahf mulb pop jge jmp xchg cmp pusha movb movl push push mov pusha mov pushf pushl ret jmp cwtl mov movzbw pop mov xchg push not mov pushf bswap mov movb jmp icebp and (bad) aad lcall adc pop rorb inc pop and pop rcrl jnp xor enter adcl addr16 scas push inc push enter sbb cmp xchg dec clc adc (bad) sbb loope cmp cmpsb mov mov (bad) push test cmp repz pop push insb insl push test mov jg test ret (bad) xor xor ds mov lret pusha xchg cli adc inc leave xchg inc inc insl adc or push in repnz rorb add out mov xor mov xor jno aad mov movsl fldenv cmp jno jnp adc cmpsl sbb inc jge pop pusha jo notb bound xchg inc pop push sub (bad) mov cld or xchg imul push in push aas cld xchg mov xchg lret leave scas adc repnz sahf dec aam out mov gs int3 xor mov cmpb outsb xchg fildl mov mov xor add scas xor and sarb adcb jo push fs or or mov dec lea jo shr sti popa jge sbb adc pushf ret fnstsw xchg or rcrb adc popa jl movsb fwait stos jno shll inc cmp jnp (bad) xchg movsbl movsbl pop bswap bswap mov pop movzbw pusha pushf mov pop movsbw push movsbl mov push push mov mov movsbw jmp (bad) cs adc stc add repz and iret jo mov out aam (bad) leave mov sahf inc pop pusha inc jge xchg mov jp,pt inc arpl mov inc xchg adc lret add sub inc mov (bad) xor repz or shl sti out loope pusha movsb lahf dec jns push jns fbstp mov aas add sub inc cmp pop outsl lcall ljmp jecxz mov dec push sbb iret (bad) aaa xchg imul push mov sahf cwtl cmpsb insb (bad) icebp adc push gs (bad) jae mov mov push sub pushf js imul ja inc fcmovnbe xor cmp imul mov call inc cwtl lods xor push in ret sbb imul pop into nop mov push gs iret sbb adcb (bad) sub add inc loopne iret test into stc xor in rcr dec adc mov movsb mov xchg movsb xchg (bad) cld arpl xchg int3 or shlb jno ret js in push in cmp in inc in inc push dec je mov sub test lcall push jno sarl inc and (bad) out push adc mov mov pushf mov push mov pushl ret inc mov sub iret inc inc inc push xchg sub in hlt cmp sub or in xchg or movsb inc jg (bad) in jae inc jle jno ss enter lcall xlat int mov ficompl repz nop scas test jo aad and shrl jle imul lea jne push cwtl lea pop mov pushf push push lea jmp mov pushf pushf movb xchg movzbw call clc rol pusha call shll mov sti or sub xchg inc mov stc fsubr dec notl cltd push les xor mov mov push or fs or jge cltd in mov ljmp shlb popf fwait push sub dec stos out (bad) out inc (bad) dec subl aas jnp imul add cs sub mov push cltd xchg sbb and pcmpgtb decb mov pop inc jle mov (bad) hlt jmp aas icebp and jno insl mov lcall jl test xchg test out imul lea je lea bswap pushf mov mov call sub dec xlat out adc fdivs notb pop nop scas test (bad) xor mov jno mov mov push cltd jb jge pop scas popf loope cmpsb mov xchg out popa (bad) insl mov leave mov jl mov hlt fadds mov mov scas xor jns jnp stc xor inc sti pop sbbl inc xor push stc inc decb mov xchg mov jae pusha pop movsb clc mov xchg test adc inc insl and inc repz add jo or fidivr lret push add mov mov jno into sbb movl mov lea jae push pushl popl pushf pusha pushf pushl ret sbb iret mov xchg or fwait lods lods jno sbb pop sbb (bad) (bad) pushf dec icebp inc imul or les loop hlt dec aaa mov lods rcl push int ret push dec dec pop sbb mov jb cmp mov push arpl cmp jmp decb dec je jo bound jne scas jne push sub loop push iret adc repnz (bad) repz xchg add outsb mov cmc mov push inc jl mov mov mov mov jno into dec inc add call dec sub test xor push iret jns mov jno mov call push inc push mov sub aas pop xor aam data16 nop fiaddl mov mov (bad) not pop cmc leave imul dec stos movsl lcall jne xor inc mov pop xchg (bad) sbb jg sarb into lds icebp in std pop (bad) hlt adc and jae dec xorl add fistpl mov or jp xchg jne insb cltd test aam inc cli or pushl fninit mov add push (bad) cwtl mov imul sti mov lea jb cmp cmp pusha jmp pushf lea jne rcl aas inc pusha xor pop rol bsf mov add or not dec add add shr not mov bt pusha test pushf pusha pushf call (bad) sub inc xchg daa push addr16 (bad) fimull mov sub imul dec aam repz jge out or insb xor popf mov data16 dec push insl push in dec je mov testb (bad) outsb faddl xchg int and pusha cwtl shrl cld push mov out lcall movsb (bad) cwtl (bad) mov jl jnp (bad) stc data16 lahf dec ja sbbl loop push fs std (bad) inc jp data16 lahf adc lods icebp data16 sub int3 xchg clc out pusha jmp ja pop pop ror gs and mov dec ret cmp cld (bad) divl into xchg xchg or dec xor jg sahf pusha jae inc push movsb stos push or cli pop pop mov or lcall cmovg pop lcall mov sahf movsl movsl mov mov xchg (bad) and pusha (bad) jge and aad loope mov lods inc fwait aad adc xchg clc loop cmp push repz mov call cmpsb clc lods icebp mov mov pop out pushl push pop jl jp jle incb imul add inc js je jb arpl jae movb call add push popa je inc imul jae add and or insb xor lods dec hlt dec (bad) push xchg cmp or xchg sub dec xchg mov lds sbb cmc out icebp xor sbb inc sbb stc xlat testb repnz add mov xchg fisubl lahf inc push jno pop pop mov popf pop mov cmp dec xor inc repz sbb arpl push hlt jmp mov inc fs xchg repnz movsb push dec je push scas add push out dec lds dec push cmc xor adc mov mov xor cmc push clc push jo es (bad) (bad) or (bad) popa rolb fwait cmp ret xchg sub adc mov fiaddl popa stos xor (bad) mov ficom mov pop insb adc popf testl cmp jg jge cmp dec mov lods mov pop cmpsl ja movsb stos mov jg fisttp aam lods mov fidivl or stos xor aaa orl addr16 hlt mov xlat push rcrl mov negb aas test mov lret jo pop pop mov cmp inc test cmp or pop sti arpl xchg mov lret imul cmp pushf mov std incl imul mov mov lret xchg ljmp mov fwait repz aas cmpsb cmc fidivrl test dec insl push je insb push ret js orl mov lods hlt mov stc hlt jmp arpl subl sub xchg pop cmpsl jmp dec jno leave popl dec adc sub sbb dec pop pop out movsb movsb mov jmp pop cmpsb rorb pop aas pop and fucom fdivrs add sub mov std rcll stc adc shrl pop movsb mov jle sub fsubl incl enter shll adc inc cmpsb cmp or dec xor lds imul pop bound pop sti dec or dec mov hlt data16 xchg cmpsb jl jecxz jns jno testb (bad) movsl fnstcw mov pusha dec xor sub (bad) mov xchg (bad) mov sub dec sub data16 or push ja outsl mov and push jle lea push fwait cmpsl adc mov stos xchg jmp sbb add mov stc jb pop addr16 js jno push push add scas or xor gs bound dec lds cli and in pusha (bad) pop add jno leave add inc and dec call je adc jmp push sbb dec cmc stc inc push mov and jp leave cmp and pop adc movsl cltd loop push fxch aad (bad) loope in div ljmp pop mov out pop (bad) or bound or divl pop and imul adc xchg jp (bad) dec cmc sub or inc in jb jge in sub pop in push icebp outsl mov in jno inc fwait mov cmp lock mov into sbb sub adc data16 fwait sub xchg jno movl push and jmp push fldenv and jo test shrb fiaddl jno mov mov jp inc or cli or inc push inc aam xchg xchg add arpl fadd mov js jp and out enter sub lods pop mov inc lret fxch sub sub popf lods ret ljmp mov js cmp xchg pushf call std bswap push rorl shrb es cmpsb sbb xor and and add inc mov gs (bad) lods loop cmpsb or out into mov in enter inc pop cld inc int3 push mov dec inc xchg in rcr das sub or insl jb pop mov int3 scas jl cwtl pushf cmpsl inc adc scas jne call insb leave movsl outsl out lods adc out lcall and or das leave das mov adc add subl jb dec aaa lock iret dec ds fs mov mov in iret scas iret adc mov fbld jo fs inc jbe in push nop mov cmpsl clc xchg mov mov fidiv fwait mov bt jmp lcall stc lods pop inc add ret pop push mov iret pushf and sub sbb fucomi mull fwait arpl bound jg and in les inc (bad) in fcoms inc inc test scas shr jmp inc clc push cmp inc cmpsb cltd fisubrl int cmpsl ja push xor add repz pushf sbb call mov pop push fadd ffree and push fs jmp jns hlt ljmp or test sbb mov stos cmc mov insb lods jno lds xchg pop test inc cmp mov imul fsubrp icebp cs pop dec cltd add int3 ja aad arpl in xchg in sbb mov faddp xchg xchg pop js outsl jl or in lret or and pop ja test ret sub (bad) jmp adc push sub xchg lods out push aam xchg std iret popf movsl cld fsts cmp push in xor in mov or inc jecxz sub dec xor mov push les push scas lock inc pop in repz pop xlat in sbb push pushf mov push or imul aad mov outsl fisubrl aas frstor leave sub lahf xchg scas mov lcall mov js inc add inc fisttpll push icebp pop add std or movb nop jmp push cmpsl inc sahf cwtl out sarl pop xchg pop out inc and adc pop mov popf xchg leave push or add lock push hlt jbe fcmovnb dec repnz mov mov (bad) iret fistl mov or addr16 dec rorl add pop mov (bad) jb adc pop add mov dec jno ret ret int3 sarb sarb inc lea aas je hlt lret sbb mov and push icebp sub dec rolb sbb fwait stos xchg ljmp shll movsl fisttp xor mov lea inc mov shrb pop push loope dec frndint xchg in inc les dec and jns fidivr faddp shl clc sarb (bad) fbld sbb lock call clc xchg movsl push add jns inc xchg push jno sahf adcl sub aaa fadds add xchg jmp (bad) push mov lods mov insb aaa inc roll push fs or (bad) test fs les sbb push pop push (bad) mov and adc int out pushf mov mov cwtl xor pop (bad) jge loop xchg adc jns out out cli dec mov out pushf xor lds popa (bad) cmp popf inc (bad) sbb cs mov (bad) aaa daa or adc int3 into lock or adc sbb aaa es mov mov movsb imul out xchg jno,pn je cmp cmp jb push or mov and fdivl mov inc mov jmp cmp popa mov enter arpl mov pop or cmp notb push push fsub std ret repz dec sbb add insb jle xor jb faddl xor in fsubl xchg scas cmp enter aas lock (bad) xor mov push leave negb aas and add hlt jmp pop mov lods dec mov (bad) xor mov loopne jg or clc daa pushf and mov ror mov add dec mov sti pop out popf incl subb or scas orl xlat cmp pop lcall and dec rclb mov ljmp pop imul dec imul jge pushf movsl adc in out or cmp cmp or or xchg xor lret incb fs and loope lea pop scas dec mov rorb jae sbb mov aam mov adc pusha pop cmp dec jno ror cmpxchg popl test clc test jmp movl jmp not clc mov test pusha shl pusha lea je call clc test call or mov push cmp push movb and add je pusha pusha add sub pushf bt call push push inc push inc dec push cs insb add out dec inc pop subb and sub icebp sub ret jl das jo add cmc dec pop cmc test gs out icebp int3 stos lods insl scas popf jmp pop popf rclb sub mov lea push shrl (bad) scas loop movl or enter add push mov adc add add inc xor xor int decb push cwtl fucomi dec mov test cmpsl cmp mov push jnp lret xor sbb movb or imul add stos sbb add loopne sbb add jl push and fldenv adc call or or out vpsrad test xor imul or dec roll daa cmp cmp mov sbb (bad) cmp aaa mov cmpsb in test ljmp push jae enter fstps mov es adc lahf pop test jmp fisubl mull xor mov pushf pusha lea jne push stos push pushf mov pusha lea jmp mov movb movb pusha pushf lea jmp movsb pusha pop rorl adc cltd gs cmpsl dec jmp or lret aam xchg in out enter stos movsl call add arpl jle pushf stos cmp push push mov icebp outsb push mov loopne and call mull popa xchg clc cmpsb out inc les pop push cli push and sbb pop dec xlat mov push and or cmc ljmp sbb pop pop pop mov lock das (bad) push cld (bad) stc data16 inc push rorb mov sbb (bad) dec mov push add aaa xor stos les pop mov lahf pop rcrl mov push mov mov loopne ss add dec popf out sub ret adc jns push lret mov in sub adcb sahf and and inc repz push call cltd (bad) fldenv ret aas cwtl daa or ret in cmp add jl (bad) aam aam sub sub mov call fs mov int3 out mov jae add add pop insl push push mov pop loopne mov push mov jp mov test mov lock add leave aas mov scas scas arpl call jno mov xlat xchg fnop push iret inc das xor mov cmc std or or mov mov mov mov cltd pop bound and or cmp jo lcall sbb xchg jg out ret imul int mov (bad) aas dec repz xchg outsb dec mov mov hlt sub sbb pop scas push fwait push jge lcall or dec jno mov call adc xchg add lret mov add cmp pop inc pop and pusha hlt dec call or mov cltd dec push mov les mov xchg popa jle stos mov sbb aaa rorl dec fs push adc fildll sub jp pop pop dec jb imull push sbb cmp in inc pop push jmp and adc std xchg sbb repnz push das xor fisubl push sub sub clc cmpsb fsubs xchg (bad) sub xor ja xchg movsl jno mov pushf lea ja pushf inc pushf seto mov jmp stc das mov mov xlat sbb adc outsb out jno lret xchg ja mov stos adc aas mov cltd xchg mov shll int jmp mov push (bad) hlt mov out xor pushf jg jo add push jbe cmp sub cmpsb js (bad) loopne xchg movsl push or fild and (bad) fldenv rorb sbb lcall dec add test inc pop jbe jo pop decl pop lods xchg sbb std ds xchg fcompl mov mov std icebp ret lock push (bad) mov popa (bad) jle shrb dec call dec push jno inc mov imul test jo sarb mov jmp sub and mov mov mov xor insb jae scas sbb push or in add movsb fisubl xor movsb cmp jp jp out pop sbb ror and sub inc mov pop cmp mov cmpsb add xchg jns js movsl out ds pop mov lds mov jge push sbbl mov dec mov fwait dec push cs mov jecxz jno mov call rep jmp xchg dec jb jno rcl xor dec sbb int sbb popf add cwtl mov (bad) int (bad) leave fsts cmpsl mov pop and fcmovne div jns (bad) das aas cmpsl push cs dec sbb inc inc sbb ret test out shl cmpsl pop test js (bad) sbb jg xchg mov mov cmpsb loope mov sbb out pop lock fbld and in pop push gs add mov movsl mov adc (bad) jo pop jno mov pushf call test push call lcall sarl jns lods pop test xor (bad) sub clc xchg imul pusha jae cmp test pop imul push (bad) jno adc or push mov push in repz adc push pop pushf pop lahf scas mov mov aas sbb (bad) ljmp xor and xlat fsubl pop (bad) xor mov (bad) mov stos pop fist fsub mov mov pop loop inc rorl jbe dec pop jno mov inc pop and pop mov mov lea aaa push fsub jno cmp mov and push xchg clc xchg mov mov orl nop lea (bad) ret mov pop dec pop pop outsb ficompl mov lret pop mov adc jne jle test cmpsl pop xor in loop cmp test test int3 push cs pop rcrb sbb into cmp sub push dec divb push mov gs pop or mov mov out sahf push inc jnp jecxz inc test es and push xchg cwtl out pushl sbb ljmp inc (bad) faddl fiadd push jno lcall aas add jno mov call or cld call js sub iret icebp scas (bad) popf add jne fadd mov jno push mov stc in dec (bad) mov inc sti lahf inc ret or mov xchg mov cli sbbl aam xor jnp and je enter mov (bad) aad pop rorl or and aam ret sbb aad cmp repnz add daa jle mov or sub pop inc lds clc inc dec jo mov and pop inc cmp imul and mov dec std or jl (bad) mov shrb xchg xchg dec fwait inc mov sbb pop insb pop (bad) jae push (bad) sbb and in jp test mov adc mov test sbb in pop rorl ljmp icebp adc mov out pop xchg gs scas rcl add sub (bad) movsl jge sub lods fwait sarb or ret faddp sbb push out ss ficoml xlat xor cmp cmpsb mov insb mov lret imul mov jno mov mov mov pop addr16 mov in push push repnz mov or mov xor insl push jo je pop mov lods rcll je sub push (bad) insl (bad) loopne fsubrl add pop jmp loopnew arpl sahf popa mov pop aaa lock (bad) adc jne fs push pusha xchg sub scas cld shrl mov pop (bad) pusha jb xchg or inc ret gs mov mov cli lret sbb das mov mov cmp sbb lock sbb mov add or mov flds pop shrb imul imull and inc (bad) pop xchg test or cld or sbb mov jae mov adc pop call pop xor mov nop cmp fs add mov xchg adc and push test sbb fstl scas mov xor cld adc push ja loope (bad) pop and pop pop and jae add cli dec or stos push xchg sbb hlt add xor scas jle aam xchg lahf lahf add in sahf rolb xabort add xor mov das sbb addr16 xchg mov jb imul test sub lahf push mov add btc mov inc shr add mov jmp movb cmp call call call bt cmp mov lea jae call rcll scas lock out cli cmpsb fs cmp pop and fcoml mov aam negl sub clc add jmp (bad) aas mov xchg and cli and stos fisub push fcomps (bad) sti pop enter repnz into cmp adc rcll sbbl popf mov jle icebp lea fcompl subb loopne sub cltd pop jo sub sbb movsl mov mov fucomip adc xchg push pop xor ja or arpl call movsl pusha das scas cmp jg (bad) dec adc lock iret push lock sub imul dec sub lods stos loope bound test lret hlt js jl mov (bad) je arpl cmc sub inc out jl ljmp push sub pop xor sub insl add push stos mov test dec test (bad) mov sub bound std mov (bad) mov dec clc pop push or pushf cltd push jp adc lret movsl lcall mov jecxz push pushf movsl and adc push add ret (bad) les lds xchg mov jle xchg fnstsw inc cli sbb xor cld jno mov mov mov stc gs je mov mov fbld jae lahf insb xchg mov cwtl mul fsub sub sbb mov sti data16 or (bad) cld cmp mov cwtl (bad) stos lods ror mov repnz push add sub inc push push or gs pop loopne mov hlt jb mov mov shrb mov sub ljmp cltd mov push dec push (bad) mov mov mov (bad) mov enter incb shrb and or scas dec nop adc dec bound aaa adc add repnz inc cmp mov aad inc pop lds pop sbb jl andl xlat addr16 inc dec jae mov xor mov xlat xchg call xchg mov stc movsl cli test rclb dec ss jle inc mov mov clc mov fcomps jl push sub (bad) js mov push (bad) and jecxz adc sub outsb lods sub adc sub cmp pop mov xchg daa pop (bad) mov mov xchg mov add xor mov push scas pop decl daa sub sbb inc pop and cltd sub mov mov (bad) lock lods mov int3 push sub mov cmpsl aam loopne cmpsl movsb jp lds mov scas cltd lods xor and std dec push test pop out in cli in inc stos xchg les test out test push pop addr16 mov (bad) jno,pn (bad) test or xor xchg int3 and stos xor mov adc mov js test (bad) push loop fs add sbb repz mulb dec out test loope pusha andl out pop insl add push dec nop outsb jle mul push push add xchg sbb loopne iret popa mov out xchg scas mov lock icebp (bad) aas iret lock call test je adc jno mov clc pop pop ret fsubs movsb mov jns or and gs repz pop push mov je push and xchg mov sub test out cmp negl dec je les lret frstor cmpsl cmp movsb cwtl scas mov in mov ficom pop jno fiadd mov addl mov push jge je push sahf (bad) cmp sub or mov es inc repnz and pop aam stos pop imul insl mov out into aam mov adc cmp loopne mov (bad) leave repnz xor mov inc inc out xor xchg dec mov mov cmp jecxz push lret gs aaa call enter in std pop and mov clc xchg lock pop or push cs das scas int loop cmc add (bad) test inc loope pusha mov pop mov inc push mov lods mov add test in int mov push nop call xlat out and movsl cli cwtl (bad) mov fldl adc in pop sahf add add sbbb dec call cmp in mov test cmp mov pusha ljmp sar add xlat xchg xchg mov shrl add popf add icebp mov inc leave (bad) mov (bad) inc (bad) mov mov (bad) mov scas stc sbb cmpsb fs (bad) sbb fnsave jle sahf hlt stos push popl dec lods pop mov ret cmp xlat insb add mov scas lock xor pop inc push jl xor adcl xchg jle insb add and add jbe insb xlat mov sbb gs call test or xchg jmp jecxz inc cltd test jne negl dec pop lret repz in data16 push repnz mov sub (bad) and in fadd arpl xlat insb repz cmp cli movsb shlb pop cmc test les (bad) mov mov cmc cmp test outsl in cwtl jecxz jnp movsl pusha aas sub pop xor or (bad) (bad) pop push cmc dec pop jp jp fcmove sarb xchg ret out inc push dec cld enter pop xor or xchg leave (bad) fdivr aas dec push movsl cmp push push push push pushf ret cmp push stos jg lods jae fwait dec xchg pop xchg and in lock push adc inc out dec pop push test xchg rep or loopne sbbl sti inc popf sarl outsb adc jno lods mov sbb pop mov stc sub pushf jmp movw movl lea jbe shl mov dec (bad) repz leave pushf bts mov pushf shr bsf add adc dec shr pop movl cmp movsbw sub mov sub cmc pusha pusha cmp mov jmp jg outsb push mov sbb (bad) out int out fsubl mov mov movsb push fbstp aas (bad) cmp dec rol fucomip jecxz adc xchg dec cmp loopne adc int3 shl in jmp sub xor in sub nopl adc push dec jp sbb and jno xor xlat cli icebp push pop cmp and fdivs mov incb xor push mov daa dec sbb lret fcoml scas cmpsb cltd test lahf mov out sbb cmp mov sub stc adc push int cs loop cmp jno stos int sbbl xor push adc mov aam stos call inc cmp cmp inc push insb jl mov imul sti rorb sbb test xor imul adc add mov dec lret mov jle pop lds out les jnp jo fldcw ss cmpsl iret movmskps (bad) stc test sbb mov cmp cltd xor aad dec test xlat fcomps mov pop fsubl mov cmc imul mov dec adc stos jnp xor inc inc dec xor cs insb add add adc lea jmp in shrb inc (bad) push sbb nop cmp daa xlat sbb dec push lods adc call sarl push arpl pop insb and outsb jno insb jl xchg rcrl mov (bad) call push fistp xor dec iret shrb dec js arpl aaa in int3 xor adc aas (bad) int mov lock fbld and (bad) push jne cmp pop mov test xlat daa jmp dec add sub fwait stc das insb xchg jmp dec movsb push and inc sub mov inc sbb imul mov nop jnp xchg je xchg cmp xlat pop ja outsb shlb or and pop jno stos mov jbe test call fmull jbe test sbb lods shlb xor je dec mov and and data16 cmp cmp out and sbb cmp or out sub sbb fldl2e cmc shr cs repz imul inc stos sbb sbb mov xchg (bad) inc sub cs (bad) sub psubd inc fsubr sub mov fstpl dec mov (bad) mov (bad) enter xchg les mov jns cmpsl js js jge push je xor mov test pop stc inc adc popa adc (bad) jbe inc lret xor jnp pop inc lcall and lret and cmpsl xchg lahf lahf loopne sbb fwait loopne pop enter sbb fwait (bad) rorb rcr pop out (bad) adc out jnp icebp aaa jae aas dec push dec xor mov negl jmp outsl jl fisubl pushf inc mov xchg mov ljmp int and fdivrs out popf loop out pushl jbe and pop popa sbb into (bad) pop cmpsb iret imul pop xlat fnstsw sahf loopne in add std pop inc xor cmp test mov shl adc and inc inc sbb jmp lea je jmp xor sbbl negb das xchg push insl adc jnp (bad) imul dec add dec xchg imul aad push pop jp push cmpsb je pop xchg inc sbb jge push stos cmp push outsl les mov ja mov mov cmc js pop shrl mov dec in mov imul inc in mov (bad) push popf ret sahf and pop and mov mov test cmpsl push cmp or out cltd scas mov mov or dec push lret hlt adc clc (bad) fld cmp adc std and mov mov arpl adc (bad) adc fildll mov mov (bad) (bad) fs (bad) (bad) xchg je mov cltd push jns xchg jae xlat (bad) fnsetpm(287 data16 cmp imul stc xor not lods mov not inc cmc setp rol sets push inc inc inc bt ror rcl shl sub call jnp push fldcw cmp out jg add dec cmp push jmp out sub inc lods pop outsb cs pop inc cmp sub pop addr16 ss daa cmp push imul js popa mov leave repnz sbb adc sub shld mov xor jmp sub lods jns xorl es clc stos fld pop push inc push sbb sub outsb cltd cmpsb or out inc cmp mov xor sub pop dec cs pop or cmp or fldenv cmp outsl imul addr16 jno pop sbb imul rcrb mov mov add mov iret jp movb mov mov (bad) cmp xchg pop dec (bad) adc xchg divl clc ja mov cs imul pop dec jp and pop stos cmp ja pop cmpsb dec inc pop mov mov mov sub dec push jmp call jl or sub gs ds jb ja cwtl ja mov ja sub jo mov (bad) cwtl test jg jmp aam into bound mov inc jmp cmp sti jp xorl cmp xchg fwait (bad) dec nop cmp sub xchg pop outsl js daa test mov or mov xor push cmp jp ds pop cmp cmp lcall icebp xchg and pop jne xor bnd imul or add push dec call test sbbb and mov sbb daa xor dec addr16 and jb inc jae test cmp fwait pop pop sbb mov push jle dec stc and xor cmp rorl aad push bound movsb and cmp pop cs xor scas popf inc aas mov outsl into jmp sub test leave ss cmp sub add mov ret cli cmp lods dec inc fnstsw jp in xorl xor fstpl addr16 test cmp xchg cmpsb add out dec (bad) dec and leave jmp cmpsb cmp into pop push inc jecxz scas movsl jne decl das lcall aas mov mov add dec cs in scas cwtl test dec mov inc sub loop ss test add pop dec sub cmp pop push cmp (bad) outsb jle sub imul pop pop dec out push push push ss sub lcall cmp je dec lods fmull addr16 jmp add addl orl or add (bad) aas inc movsb xchg sbb sbb inc dec cs mov adc out mov cmpsb inc add in outsl ret mov jge push and inc leave pop cld mov pop cmp or pop out js pop add add push mov js jl dec jl mov adc ljmp mov dec rcrl pop nop test es dec dec mov in dec xchg mov gs pop and sbb dec inc cmp stos push ja or push ud2 pop pop out ja xchg or and mov enter pop cmp sub aaa out test pop cld insb cmp aam xor push lods insl rcll push shrl jp and cs or (bad) in call xchg insl inc sub push jb ss add imul xor ss (bad) cmp icebp sub aaa sub or sub push stos (bad) push mov or push leave mov inc scas pop cmpsl sbb insb ds push mov test lea xchg sti push mov je stos and push jae or test insl mov dec test jb pop fisubrl dec or xchg dec ds cmp mov aam outsb leave xchg and aas jns (bad) mov dec xor stc rcl imul mov popa pop sbb jle inc cmp icebp mov jb mov (bad) leave dec lds add lret xor add inc aaa push sarl test sub cwtl sysenter cmpsb ret dec jmp out or inc ljmp adc enter xchg jl xchg scas sbb jnp test mov sub pop push pop or bound in test jp cmp test cmp dec data16 shrb ja imul cmpsb jae cmpsl sub imul cltd sub dec jbe lods out repnz cmp dec dec jmp and pop ret (bad) and lods lods pop fptan jg leave lcall sub dec sbb movsl call pop ja js das mov cmp push jns pop out mov mov pushl cli mov mov call cmp xor movsb sbbl leave int3 and lods fwait es or inc icebp adc sahf rolb sub mov pop mov jmp out insl lret push (bad) repz das cmp (bad) daa lock mov cs cmp push jbe push inc addr16 jb xchg data16 mov nop das mov add (bad) into mov std jne inc out aaa (bad) push inc push sub outsb sti mov sahf jno jb addr16 imul fildll insl aad stos add mov enter aaa cs jle or mov jns xor jp add ss push jg sub dec stc push ljmp xor sub arpl push fstps push xor out outsb xchg inc das dec out inc dec incl or inc mov sub insb dec aaa adc out dec les xor cmpsb pop daa in (bad) push dec mov pop dec std and mov lock adc pop notl daa sub push fistpll adc inc outsl sbb arpl repz push (bad) sub rorb loop push std daa mov stc cmp dec aad inc mov mov ds aad scas push push aad bound aas adc (bad) add cwtl cmpsl push fldt mov dec aaa popf cmp cli sub test jne xor sub rcll xchg sar pop cs lret pop sub pop cwtl divl xor int outsb data16 or dec cwtl pop xor call and movsl outsl das inc dec mov push sub xchg (bad) sbb hlt or and add mov jae xchg ljmp sub or repnz int add sbb push test dec aam int (bad) ljmp xor adc jno add daa dec daa jp pop (bad) lock int3 push push xorl int push idiv out push push rorl mov movsb ss jae push or decl xor jmp sbb aam sub mov (bad) sub push mov pop (bad) sbb push jne dec push mov insb (bad) js add fs int push push adc (bad) xor add out in sub pop add sbb jmp dec lds data16 or out inc repz xchg inc hlt insl sub je pusha iret mov sub mov std sub sbb dec inc push inc xchg cmp out mov cmp leave add int jo jmp sub cmp pop xor sub mov cmp popf xchg xor add dec gs inc in mov mov ds jp ja dec push cmp jp cmp mov push mov pop popf ret xchg popf out scas bound lcall lret pop sub (bad) xchg out aaa pop pop add mov adc (bad) sarb (bad) repnz xor dec ss bound lea cmp int mov sbbl sub cs pop add aad inc mov lds ss mov rcrb mov test daa (bad) (bad) int enter out xor inc push sbb mov push mov pcmpeqw daa pop ror andb pop jno push dec out in inc sahf mov pop xor loope arpl std jno mov (bad) int3 dec movb ret lods shll fs jmp cmpsl movl jne inc leave xor rolb sti or mov enter dec or cmpsb test out imul fcompl mov mov fwait les mov sub pop xor push cmpsb cmpsl outsl lock push push add push push cmpsb loope (bad) aas es jno push mov bnd inc lret mov adc stos pop dec insb int dec or fs mov dec dec sbb add cmp mov mov jmp xor push xchg (bad) loop and int enter addr16 stos daa (bad) mov mov mov cwtl enter sub jo inc cmpsb int test imul cmp pop jl cwtd push sub int mov or (bad) xchg daa daa outsb stc mov lock cmpsl sbb fsqrt adc jl (bad) mov movsl sub or ljmp dec int lock mov dec pop lods mov push into in addr16 jb int push jecxz push nop xchg push push cwtl add pop mov dec add cmp push cmp sbb gs xor (bad) pop lahf push dec lretw xchg out fldcw int scas int3 into test ljmp push mov sbb loope and inc sbb xchg add add pop jae ds leave or jnp daa bound sarl loopne dec sbb sti stos cmp addr16 add daa fadds leave jnp ljmp adc insb pop xor inc mov sub sub pop cmpsb cmpsb xchg cmpsl cmp or mov mov xor imul iret mov xor leave mov dec push addr16 sub sub jo xchg push and dec mov push cwtl mov ja cmp into pop cwtl sub mov in push adc stc ja mov int3 xchg inc repz cmpsb leave cmp sub adc les leave clc mov (bad) jl mov push data16 mov out fstl sahf and dec and cltd jae test dec loope cld push jnp inc xor jo lods push ja pop (bad) push pop lcall out ret mov (bad) aam (bad) mov out leave ret std fisubrl jns imul jmp jae lods fs dec adc dec pop sbb sub leave push sub shrb fnstcw cmpsb cmp lret and ss (bad) or pop (bad) cs dec (bad) jae jo dec js push test lea int inc neg sahf pop popa lahf mov fwait pushw cmc cmpsb sbbb inc sbb (bad) push loope mov push jno jne leave dec jmp das mov (bad) jecxz and into mov lahf sub js jb pop lahf push movsl sub mov cmp test xchg leave mov cmp push cmp mov (bad) ja lock call push lret (bad) mov mov sub (bad) mov push dec out mov aaa int sub loope loopne mov (bad) lcall xchg cmp ljmp rol outsl dec cli fmul shl rcrb jl mov xor clc idivl (bad) in jo sub (bad) push cmpsb dec fisubrl fwait test int add inc and pop sbb adc pop inc jae jbe loopne (bad) jo mov (bad) dec mov repnz fimul stos orb ds into cmpsb jecxz jne xor outsl loope ja leave int (bad) ds mov scas mov xor (bad) dec imul jb (bad) fidivl js cmp icebp int testb cmp xchg jne add (bad) rcrb push mov sbb pop lds lret dec pop sbb out mov dec cwtl shlb mov sbbl cmpsl int xchg lret adc jle out mov mov jge ds xchg fisubl out lods adc outsl mov xor sub icebp mov mov iret jbe inc dec sub stos push or js stos ror lea fild sub dec sub sub popw aam jnp std and imul pop mov std xchg xor out stc dec dec int imul test (bad) out bound cmpsl xchg (bad) int adc jne ss jp add bound inc cmp (bad) jge lret pop aad mov push dec inc jns push push cwtl aaa xchg dec (bad) dec push mov ds mov lahf mov xchg pop ja scas jne mov mov into lea jns xlat aaa mov lcall scas daa jo clc lahf scas leave nop mov int mov jmp nop dec xchg mov mull cmc push pop jecxz in sbb insl (bad) imul and mov mov test aam push xchg xor lret push cmp leave sahf int icebp scas jmp addr16 daa push (bad) mov jb insl lds inc in or or jp cmpsb mov push stos jg inc cmp mov (bad) mov adc xor out xchg mov xor dec xchg out int3 dec (bad) dec mov jo cwtl scas pusha inc push xor jnp in icebp mov mov lret jns sbb inc push in (bad) call xchg mov jae xlat enter cltd out add mov mov jnp jb,pt and add in fstps (bad) fdivrl in lds loope (bad) mov mov hlt cmp fiadd sub or mov sub sbb addr16 push jne dec sbb jbe and dec mov pop pop add add mov inc (bad) leave scas push ret daa rcrb into divb test push jne inc out jbe pop xchg mov xchg cmp (bad) push dec xchg lahf add cmp xor mov insb in jp out mov lret adc mov mov push daa int outsl ret leave movsl dec and add or mov inc mov cmp sub out imul mov xor cmp sub mov sub cltd ret sbb hlt int loop (bad) fs cs out dec dec pusha dec test add cmp mov imul pop mov adc xor jbe jo jnp stc push mov subl pop xchg gs out pop jns jb jno add jnp inc (bad) or addb data16 stc xor push int test enter ss xor pop imul icebp je (bad) xchg scas pop pop jg xor mov int cmpsl cmpsb rcrb sti dec push jmp xchg pop push std std dec sbbl cwtl mov xchg jo stos xchg mov dec and dec dec inc daa mov dec fwait outsb jo xor dec ror lock cs out cmpsl or rol pop std ror cmp cmp clc data16 sub pop dec jbe xor cmp cmp lret sub leave (bad) xor decl mov jp stc lret push hlt jo imul lods (bad) (bad) jp aad ret pop mov (bad) push pop or pushf cmpsl adc (bad) inc minps jp testl out and js scas or repz xor shlb mov adc lods sub cmpsl cltd pop cmp inc sub xchg cmp mov mov popa daa fcmovb or dec xchg sub pop jmp xor xor rcll pop ror pop in sti pop xchg pop xchg cmpsb xchg mov loope lcall jle repnz jg xchg dec push mov lds sbbb jns jmp addr16 imul int xor jno addl mov xor sub jmp leave cmp in jno pop (bad) jnp (bad) (bad) xor insb push xchg stos xchg out add repz lcall addr16 out fadd shrl cwtl xlat aaa cmp sub inc ljmp xchg enter xlat bound (bad) jne std sbbb leave ret xor mov jecxz lcall push push (bad) mov neg inc into rcrb das mov pop fs xlat cmc inc out aam sub int enter test or cmp testl and push (bad) dec mov pop popa sub adc jns push out sarb popa mov leave cmp nop dec mov inc sbb and and dec inc xchg shlb jb test jne popf es in ds jno jbe mov sahf idivb cmp data16 in lahf push jmp jb pop int popa push pop adc cmpsb or jb mov inc nop sub mov dec xchg pop fcomp shrl int3 xchg xlat adc sub sbb and fprem je (bad) mov or jno pop lret jo or mov push xor cmc or jno push ss sti jo icebp xor out sub push pop adc (bad) mov adc mov sub sub mulb sbb pop push xor xor add sub and jl fwait nop push xor sub dec pop sahf sub leave fistpll int mov rclb mov data16 sub add dec pushaw push cmc push cwtl dec ljmp pop arpl (bad) xlat cmpsl push ss xchg mov lret mov imul addr16 rol mov lahf les xchg fbstp add cmp jl sbb insl xor adc imul aaa cmp pushf ret push push pop dec test mov jl and (bad) jno (bad) mov sub pop ret cld sbb sti stos dec test into cltd lcall leave (bad) mov pop cmp push loope mov inc mov and and nop cli lds daa cmc mov fwait and inc and jno call lea (bad) lret les cmp and pop imul pop mov jnp cmpsb fyl2x mov dec or inc imul adc outsb sub inc lods fnstsw mov (bad) dec push shll sub xor stos insl das mov xchg mov xor shlb es test xor jo ds lcall inc lahf inc mov xor push pop push leave sub icebp jb mov sub add xchg xor sub test mov sub int cs scas cmpsb imul scas gs xchg lret (bad) ja xlat es lret pop add nop fidivr test out push int3 adc sahf movsl mov cmpsl inc cmp jle bound subl (bad) dec jnp mov (bad) mov call pop dec mov adc jnp inc push int push shrb (bad) in ja add mov lret movsb fs dec jbe sti cmp sbb push or push jmp mov adc pop repz push mov (bad) mov fs test jp mov gs sub jg xorl cmp push es dec int mov mov push leave ja fcoml pop pop adc loop or imul inc (bad) xor add lret daa int into je xor sub xor orl int cmpsl adc (bad) data16 inc cs out stc push add es stc inc test (bad) ljmp call cs inc (bad) xchg outsl leave fisubl fwait jnp cmpsb stos aas push pop test imulb xor add cld stc or orb (bad) popa out cmp or lea mov add add test cld sbb out iret cmp int and fidivr cwtl jo sbb jns stc jmp lea dec (bad) notb cmpsl mov into jb add push nop inc jne roll fldenv pop push data16 push (bad) addr16 fnstsw jbe mov pop inc pusha and sbbl cmp dec cmp arpl insl mov xor cmpsl dec sbb je sbb jno dec pop mov inc in mov je testl and out repnz jge cmp and leave add sbb push int xchg jmp dec (bad) xchg push pop xchg in xchg adc (bad) mov dec or mov data16 dec xor jp or push push sti sub int repz lods inc cmp movsb dec das lods or push imul push mov push xchg push (bad) into scas fcoms test push cmpsl dec fildll dec ret cs int dec xor lret mov cwtl cwtl add pushf rolb jecxz add mov mov sub pop loope mov dec adc dec out mov or pop mov stos ds mov es xchg jnp inc push (bad) lret (bad) jb adc jmp rcl push mov mov aaa repnz fdivrl mov icebp push and cmp mov mov sub out stos mov sub mov jo push rcr ja sub mov cs leave stos push xchg sub sub jo hlt popa push outsl rcrl or mov and scas dec (bad) mov (bad) mov cmpsl sub push jl sub int mov push lds or imul fisubr pop adc imul adc ja lods pop push fstl push push mov addr16 mov mov rcll stos cmp mov push sub pop jns shrl lea add scas inc fmull cmp push in pop xor mov add cmp jge js cmpsl (bad) jno hlt mov (bad) in sbb (bad) out cli xchg dec bound cmp jno or bound jne sub lock test insl lret pop bnd adc lret test lret adc or jne (bad) ss dec mov shrl cs sub inc inc dec dec push or ficomp stos cmp int3 inc lods ss not pop daa inc shrb sub cwtl bound call mov out mov outsb daa jb (bad) jbe pop jp pop das jle jno cmp dec mov jge das fisttpll insl xor int adc dec dec dec leave fs outsl jnp cli (bad) (bad) mov or xchg cli sarl dec or jg mov mov and xlat cmp popa jne insl sub dec fldcw add int jae xor jno ret (bad) icebp mov sub movsb push and mov or xor adc scas (bad) pop xor inc negl mov addr16 ja loop mov mov mov bound cmp dec (bad) mov test int rcrl test push pop push int3 ficoml xchg add (bad) mov pop in int cmc aad sub inc sbb (bad) test mov mull sub mov push or ja sub js pop (bad) jae mov adcb sub xor fs push cmp int sbb out and insl jno jp imul xor cmp sub mov ljmp pop jnp std mov pop push xor push pop repz jbe mov xchg sar xor vplzcntq push dec fimul ja decb push bound jo dec xchg pushf dec mov daa adc dec cmc dec ja adcb out icebp dec push (bad) arpl aas cmpsl in pop sub and mov fiadd repz clc push pop sbb mov adc inc andl adc scas cmp cmp aad test sub rcll cmp add (bad) push lcall je fs inc int cmpsb cmpsl sub and xor push pop xchg or testb inc push xor dec ret inc ffree mov pushf add adc pop and and dec dec cs imul cwtl dec dec mov fwait data16 dec jg mov lds data16 inc lods cli cmp imul dec int scas in testl scas dec icebp jmp and adc dec movsb outsb push push ljmp pusha outsb xor jge mov lret cmp leave xor pop mov xchg dec mov dec stc jl loope loope bound xor ja loop sti lret int inc shrb cmpsb cld push jno (bad) fnstenv sbb repnz sbb js sbb and mov shrb pop sub ja and rcll pop jmp test aas and cmpsl inc decb std js (bad) inc in aaa ljmp in jnp inc cmp mov push xorl int subl jl sarl dec add daa cmc jae dec lock xchg daa lods xchg push sub dec into sub les or lret mov adc cltd test mov in or insl xor and scas pop adc sub dec lods dec (bad) sub int (bad) sti xor and sub (bad) test jmp cmpsb mov arpl andps xchg bound pop push mov jmp jp (bad) sub shl mov pop inc pop std mov test lea add fisttpll xor (bad) jno jno pushf inc push jg scas pop loop aaa cmp mov inc sub ss sbb xchg pop lods adc dec jbe adc gs incl inc and sar int3 les and jo cmp adc cmp xchg cmp mov mov sarb cmpsl (bad) (bad) adc inc xor cmp jae cmpl sub sub fs je mov inc xchg (bad) imul in cmpsl cmc movsb push or cli (bad) sub or sbb lock cmp push leave mov xchg int mov ss jo mov stos leave movsb and jns jno cli ljmp inc ss jp (bad) repz cmpb and xor mov inc (bad) mov in xor cwtl sbb sub pop iret push pop imulb mov ss add or inc stos jl push sub inc orl sub leave cmp dec xor fildl sub cmpsb decb cmpsl lea push daa insl lret out sub push sbb or mov xor dec dec add dec (bad) stc mov (bad) loop leave mov insl push add inc mov cs test jmp daa xchg cwtl push jo adc xor pop push ss arpl xor sub jl test lahf (bad) cmp adc dec jnp sub xor in cmp fbld fisub sbb mov cwtl pushf outsl push rorl scas hlt div mov pop aas imul jb hlt fidivr rclb inc xchg dec scas dec in clc in int hlt negb imul testb mov leave xor cltd adcl addl insl mov addl test inc jl insb lcall aaa out dec jb xor mov sub out leave inc repz lock or stc cmp in inc push xor mov (bad) push pop xchg pop in add popl aaa repz jno stos mov push xor pop sti lcall fcmovne cmp jnp sbb (bad) cs lds sub mov pop ljmp cltd add js mov or xor push sub sbbl insb mov push pop ljmp leave push jo jecxz jg js cmp in cmpsb fs in sub push xchg lock pop push jge cmpsl jle sbb lock lea (bad) xor dec test pop test mov cwtl adc out idivl int push xor or test xor (bad) enter mov sub movsb ds or jo or imul mov leave mov rorl adc add sbb mov popa popf sub inc push pop (bad) pop dec (bad) lret lcall leave data16 int out pshufw xor jp insb xor pop and std sub daa mov sahf or adc sbb mov dec inc jae sub mov sbb cmp ljmp or mov cmp enter add mov stos arpl mov repnz jb cwtl mov push jmp jae push xchg nop arpl shrl jae add leave (bad) pop (bad) sarb mov test mov movsl pop out lahf cwtl jle pop test mov add addl (bad) mov insl jp cmp scas sarb dec jnp jno add cwtl in lods push ss and cltd addr16 outsb xor cmp xor xchg inc dec ds leave div insb inc jne sub (bad) pushf pop imul pop adc (bad) jp std fldenv cmp into out mov cmp sahf insl out mov push insb cltd mov xchg fcomp rcrl (bad) cmp jo pop and xor cbtw inc mov ss (bad) dec test fstps xchg (bad) sub int into aas outsl ficomp jle dec and xchg sbb cmp xchg mov int mov ds aad scas rcrl in and lcall or pop pop sub fs or (bad) jb daa cmp mov andb add sub xchg ss (bad) out and bswap cmp push and data16 xor pop leave xor mov jge js test mov addr16 ja push divb jmp push sub shr pop ja cwtl inc stos pop imul or sub adc pop push adc pop mov push dec sub pop int icebp loope movb int3 icebp or dec dec adc out jg mov lock cmpsb ret add inc sub jns ds dec mov cwtl cmp and mov cmc xchg sbb cli dec add sub fs in dec push aam xchg lods mov (bad) int xchg or mov push cwtl mov inc ds ds jno enter xorl xchg and in orl jbe push xchg sub (bad) cmpsb pop int call ds pusha or aas push xor outsb fdiv dec inc push push sar daa mov popf or mov cwtl int fiadd dec cs mov arpl add lods dec fisubr int or mov ja push aaa je (bad) xor mov push jnp iret in sub add push jo aas inc inc ljmp (bad) sahf cmpsb les shr and daa imul divl stos aas mov loop lock adc leave (bad) jp jo jno mov call int3 leave lods sbb inc add xor loop mov in data16 add sub and sbb fisub divl stos jbe stos cmpsb lods int push cmp jne inc aam mov aaa int cmpl pop dec ret test (bad) sbb sarl (bad) pop mov les mov inc pop lods push xor xchg pop stos xchg push leave sub jae cmpsb jno push ss xor xchg dec mov xor dec sub push rclb push nop cmp fwait lea inc adc ret call cmp adc jb dec mov lods sbb cmpsl scas sub jae aad xor std mov call leave (bad) or lods adc inc daa mov dec stos leave fldl divl xor arpl daa popa (bad) mov cmp mov inc pop (bad) cwtl sbb mov pusha push mov int imul cs (bad) fs pop outsl rorl xor (bad) jg and loope dec jmp aaa movsl mov mov inc int into test jl inc dec int xor xor test jb (bad) inc push xor xchg into loopne (bad) mov out cmp adc dec mov dec jbe test cmp ja or add dec add mov jno inc sub jno repz sti push pop xchg mov sti (bad) ss insl test dec xchg repz inc addr16 andl adc int push dec outsl imul push mov cltd jp call movsb inc or push (bad) ja cmp sub test xor ja popf add out add pop outsl pop cld mov ljmp daa movsb jle pop mov test (bad) aaa lock (bad) pushf adc xchg (bad) push cwtl insl xorb push out int xorl mov xor dec nop pop lods je sbb das mov inc pop push inc mov mov lods nop outsl fidivr add dec jge dec push mov pop dec jae cmpsl pop je call sub cmp mov es dec mov sar or dec cwtl (bad) jl gs dec jb test add int fmull (bad) (bad) push je push jge addr16 push jo dec jnp sbb icebp jmp sub lret mov gs fsubrp mov mov test imul int push stos scas sub test es dec mov push andb adc mov ds sub cwtl dec test xchg test mov push (bad) mov jnp cmpsl (bad) insb lds mov ret gs jnp aaa cmpsl or shll in xchg mov or arpl xchg pushf ss leave jno rcll push int mov dec into arpl xchg imul ret mov xor or xlat xchg pop loope mov mov int push mov xchg dec xor inc movl adc int mov push sub in mov lahf dec pop pop cmp dec out mov cmp push out mov push mov into push push mov clc inc sbb dec imul sub sbb mov xcrypt-cfb cmpsl repnz dec aaa lods fucompp pop cmpsl push jno push mov inc xor sub movsb mov ja cmp lret fadd mov mov jae or leave mov push pop xchg add mov pop pop scas jmp in add sub lock lods cld push mov movsb jl addr16 dec and arpl cmpsb mov lods inc xchg bound pop cmp mov ds push pop add adc jl xor pop sbb ds sub lock insb dec xchg cmp in pusha push popl jb gs jmp jno dec (bad) fsubrl (bad) jp ds enter lea (bad) (bad) inc xchg and xor add sub pop inc push aad mov pop daa mov push xchg adc (bad) das push sub sub mov dec popa int test mov or hlt mov sbb jo cmpsl lret imul push cmovl lods push push jge mov pop or bound frstor jbe jmp mov clc dec leave mov and lret jmp stos xor fs cmpsb out iret mov xor sub and sub mov outsl imul sbb cltd fsubrl ret jbe sbb dec mov (bad) xor mov push dec and test mov add cmp or (bad) mov cmp insb and xor movb pop jno test ss adc mov lcall daa push pop cmp pop in gs mov aad ss cmp cmp (bad) addr16 outsb jp xchg andl jmp mov adc inc mov sbb mov sub push jb arpl or add mov cmpsl jbe push popf sti pushf sub push mov scas fs dec jae fistp mov and nop jo xlat xchg test push pop xor dec addr16 or mov ret pcmpgtd (bad) dec jae cwtl dec insl aad inc insl sub leave icebp adc movsb popf sub ret dec lods data16 dec mov adc mov jbe sbb xor arpl or dec push push push and sbbl les xor enter mov adc test inc xchg lret cs jb pop mov mov sbb movl sub clc jo leave sahf pop ss je hlt inc lcall callw fist out cmpsl adc sahf addr16 leave add adc leave or sbb mov or dec pop repnz xor xor adc leave jge ds fisubrl call xchg insl rcll (bad) mov and lea divb xor leave jns cmp sti lea pavgw lock push test lret leave mov or push xor and int xchg cmpsl mov dec div push mov fldenv dec stos (bad) cwtl jg cld push add stos jmp in loopne push mov (bad) (bad) loopne lahf or xor jp ja daa int movsl es mov imul scas dec pop dec fidiv jb cmpsb cmp jle sub mov and or cltd dec mov add aam dec into stc std inc mov js inc cmp movsb push push push dec mov mov clc push int jbe mov flds out and add lcall loopne xor loop ds ja xchg add imul cmpsb dec dec fxch mov das mov bound (bad) popf cld push mov fsts push lea lods cmp mov inc addr16 lods outsb insb sub fistp repz push (bad) lock pusha push dec pop mov sub add cmp adc push jmp scas push adc fcoml rorb imulb push negb cmp lds pop leave push in bound xchg mov pop sbb leave test cmpsl dec test stos xchg sbb ds fcompl push xchg mov adc sub sub clc sbb cld and (bad) sbb dec or xchg mov mov adc int daa mov ret inc sub arpl cmp dec mov cmc test insb pop cmp cmp xchg cmp sub dec rolb int iret dec jno imul xchg mov or sbb test mov dec xchg cmp sub xchg push hlt sub cmp ja dec cs cmpsb xor adc pop and add sub xor (bad) ja cmpsb sbb stos add pop pop and in dec les lock push and sub fild xchg jno,pt fistpl push sub int sbb push or sub dec scas daa sbbb imul dec (bad) xor daa jl leave stos aaa sti dec sbb (bad) sub mov and (bad) mov jl call das gs mov cld mov xchg in out dec jg and pop jp pop pop jb sub cmpsl outsl sbb add sbb shlb lret cmp cltd sub popa out test xor movsb cmpsb sub mov not dec stc mov sar jbe imul cmp cmpsb jnp and sub sbb mov outsb lods xor lds inc push movsl fwait mov (bad) mov pop mov jge sub popa out inc adc sbbw sub loopne stos adc stc lahf cmpsb daa mov mov xor pop jmp push sub pop insl mov cs xor into (bad) dec dec loopne repz pop push pop sub sub and arpl inc les sub cmc xor sub inc push leave sub xor incb inc fwait call cltd js shrb pop lock jle xor loope sub fcmovbe jns pop fiadd pop cmpsb inc mov in mov pusha jae repnz pushf das pop ljmp pop mov lds pop notb add dec push enter js sub fidivl xor cs in mov inc cmpsb or xchg jp push pop lds or (bad) outsb jne mov xor dec jmp sub push rclb sub fwait lock jb cs mov int out aas sub movsl add in pusha mov or lds cmp pusha sub dec jnp dec add sbb enter mov mov xor aas repz cmp push dec jl sti mov fnstenv leave jbe dec and lret cmp jb je jecxz push xor popa enter in dec jbe sbb testb jmp int push push push out pop sub adc jbe jl mov mov push jge push mov test fwait mov push jne dec mov stc inc cld and jg cld outsb adc ljmp (bad) loopne or gs aas (bad) (bad) pop cmp fcompl (bad) outsl xor adc pop shrl mov (bad) int xchg sub jecxz cmpsb inc js nop call dec out adc jg adc aaa cmpsl xchg jne mov push pop push jmp fwait cwtl lock cmp sub mov ljmp dec into dec cltd jo loopne in lret cli addr16 xchg push sub popf scas out push jns loope sbb jbe out js iret inc mov pop mov movsb es cltd xor sub adc mov test int3 test iret jns imul adc push sub xor and sub lods add xchg mov or out xchg xchg inc sub push dec push lcall and jecxz inc sub (bad) sub sarl or in sub and sub loop stos mov push lcall add sub rol mov ja lret cmp sub dec mov popa call scas dec sub sub andb ss mov or jmp sbb jmp push cmc push repnz sub cs test insb inc fsubrl push pop jae test fisubrl push (bad) mov (bad) or (bad) daa inc hlt lods dec dec fsts adc dec dec mov icebp cmpsb shll mov push lea imulb (bad) out push dec lahf out push pop push adc std pop xchg nop xchg xor mov loopne cmp mov lcall mov inc stos push jp xchg jno jno dec cwtl adc cmpsl sbb jp push cmp push mov (bad) xor push mov jne addr16 sub movsl outsb xor outsl cmpsl dec fldln2 (bad) sub test pop xchg pop pop cmpsl jl xchg mov dec lea mov xor out cmpsl cmpsl mov in int insl (bad) and cmpsl pop sub pusha sbb sbb (bad) pop dec scas int jo xor shrl sub aad inc jo lods frstor imul cmpsl sarb sbb sub (bad) dec idiv shrl ss sbb inc pop out adc imul test mov sbb test xchg mov jl cmp daa pop xor mov lock mov dec xor dec (bad) (bad) cwtl jg repnz cli jb aam repz repnz aaa or int3 jmp out mov popa ds lret test jo loop vmwrite jb shr test leave mov and ss push fcompl jnp jne push int3 imul (bad) loopne mov (bad) mov stos jne add (bad) sub push subb inc clc scas push push imull daa push pop or xor pop leave inc imulb test roll cmpsl (bad) inc push jl adc jmp pop push cwtl jae add addb pop in incb fwait push jmp imul cmp xchg jp cmp es addr16 sbb not sub sbb lret and (bad) sti xor leave lods fisubrl loopne shrb pop inc out (bad) (bad) stc je sti (bad) push scas ds lods push jne pop xor movsl leave push inc daa iret mov out jg aad mov ret pop addr16 lods sub or or icebp mov mov int3 sub stc jge (bad) insb dec add jb jl lret dec sbb pop mov cmp iret cmp (bad) jmp fbstp cs sub fisubl lds mov add sub call and jmp xor loope or dec pusha shll fidiv push dec jnp jne cmpsl push push stc cwtl mov int3 cmp push xor divb push fidivrl adc pop and bound in mov dec dec leave ficomp jmp push mov cmp cmp idivl fisub pop dec leave inc jb or pop xor jb xor dec jle mov cmpsb rcll or outsl outsb lcall add outsb hlt inc jbe fidivrl repz push push int out aaa xchg (bad) cmp lcall out iret stos fnsave scas into xchg jbe icebp and jmp dec shlb pusha cwtl push scas xor cmpsl sbb fiaddl dec and repz call (bad) dec (bad) shld adc sbb ficoml or daa dec jnp dec sarl mov pusha ficompl lfs ficomp bound inc jl,pn shll xor add xlat jb push push mov xchg inc inc mov jbe dec mov cmpsb hlt push xor insb jno lcall xchg lret adc jbe xchg addr16 clc jae,pn in sub push push mov (bad) iret scas and jge mov dec cmpsl lds jmp aas call push bound mov sub cltd outsb jns cli jbe fcompl pusha cmp mov jecxz and test mov sahf push lret (bad) test bound out daa xor gs test or xor call cmpsb adc push scas xor xor push pop add negb xchg jb xchg jmp fildll stc mov pop sub in aas iret nop sub inc in popf adc leave insb gs sub cmp add jno cmp sub xor dec imul (bad) lds and push call stos inc sbb xor mov pop ret xchg sub and or (bad) jb sbb lods push pop adc mov or cmp mov xor cmp cltd mov mov fcomps fild jbe (bad) xor push fldenv incb xor jbe sbb (bad) sbb mov test xchg dec push fimull (bad) mov out jb nop sub sbb mov insl xor dec cmp test pop mov mov mov jg daa outsb in push mov xor inc lcall adc dec movsl or mov jo xchg pushf dec push std push cmp dec leave js add sahf jecxz add leave lds push ss jnp (bad) cmpsl xchg int3 (bad) je (bad) lahf (bad) jno lds fwait pop loopne sbb rorl xchg sahf xor out stos pop (bad) pushf push ds stos mov cmp arpl das cli cwtl sbb add insb cmpsl in pop push push mov lock cld bound mov inc scas (bad) push xor das cmp ss xchg stos call inc and pop dec das daa pushl mov out sub mov dec inc mov in (bad) or cmpsb pop scas inc push xor and stos icebp (bad) scas xchg in imul outsl cmpsb lods call (bad) lock cmpsb mov inc (bad) scas sub in mov or cmp (bad) int call push pop push jp inc jp cltd inc xor outsl lods jp dec push cltd das bound cmp scas fcmove or dec outsb push sub movsb or jp dec push pop repz mov rolb imul jnp aaa dec mov xchg (bad) cli cmpsb push out call add mov cli enter jo enter mov mov mov sbb mov mov lock push cmp pushf lcall mov xor cmp outsb jnp fxch pop (bad) lret pop shrb jge jae xor mov pop push jp mov cmp inc ds jb mov cmp push xor dec xchg inc jns divl mov jge dec push pop mov xchg cltd pop fmuls mov dec je in insl mov lcall jle out dec jo push out pop shrb rorl fcoms jge pop push rcll mov pop pop mov nop cmp push call hlt jns pop push cwtl lods out icebp mov pop pop and aas imul push cmpsb mov js (bad) push leave jge aaa push mov inc cmp (bad) outsl aaa jle inc jo cmpsb (bad) in xor lcall ret stos dec mov out jae dec fdivp mov pop xor or add sbb sub push icebp fwait push stos imul or mov arpl (bad) not fdivs into test jp mov ljmp popf in lret mov leave jbe pusha scas repz out (bad) imul cld add stos jmp lret jl rorl inc sahf add dec add add inc mov aaa cmp sub (bad) pop xchg shrl fdivs push xor or adc dec cld sbb xchg cwtl fdivs movsb or mov (bad) sub ss mov or pusha sub cld dec mov sahf sub aad js mov add xor mov sbb ss pop jo mov mov pop rorl data16 mov mov cwtl punpckhbw bound hlt cld pusha lock adc dec inc jge or ret popa lods pushf mov flds (bad) sub int loop mov dec jle sub inc test pusha or imul pop pop decl addr16 ficompl out adc (bad) ds sbb inc pop jb mov push sub out stos push mov (bad) enter jl pop pop mov lret out test pop adc outsl inc cs cmp fsubrl std xor inc aaa (bad) (bad) data16 bound or lock sbb (bad) sbb push data16 jo jbe in lods fidivrl cli out dec xchg push cs mov sbb push pop testb cwtl cmpsl inc add mov mov repz inc fmulp adc push add cltd loopne test outsb sbb inc (bad) test xor idivl xor mov sbb (bad) or pop faddl ret mov push cmp push jg cmp push push rcrl mov out movsb jmp sbb add push sbb pop lods pop add fimull in (bad) jmp std pop or cs dec icebp sub and mov mov xlat outsl cmp ret cltd sub jle leave std jbe int js addr16 fsubl and jmp sub cmp in in sbb mov push push pop addr16 push fst and push jb sbbl ds iret add (bad) jbe ja pop dec cmc jg insl dec pop je push xor or imul adc (bad) dec out or bound mov push test and mov inc ss sub addb jns mov (bad) fs sub out loop andb jle inc dec xchg (bad) add cmp add adc movsl xchg pop sub push cmc xor pop sub (bad) iret dec fmull mov insl sub fwait sub and sub lahf js jnp mov sahf inc xchg sarb jne cmpsl fldcw or adc mov cs call jmp loop ljmp shll pop ja sub dec sahf pop ds sub jg or sub xchg test jo data16 das pop cmpsl xor sub cltd ljmp push repnz push addr16 in sub and mov sub ja xchg out ret loopne and jb mov leave sub scas dec and jno lock sbb (bad) sbb sub imul (bad) dec shrb jl sarl out pop call xchg out pop xor jmp add sti int3 and jne cmpsl mov fisubrl xchg imull dec leave (bad) inc iret neg outsl sub ret mov inc xchg subb and and add pop (bad) adc sahf push out sub and std push dec sub and mov test jmp add lahf (bad) decb inc pop pop sub mov add rorb in addl and xchg xor add cmpsb mov fildll imul mov mov jmp and push pop lahf sbb fs ret cmp push test cs movsl xor sbb add arpl dec rcrl lea (bad) sbb test xor arpl movsb xchg cmp cmp push mov push aad sub fptan add aaa xchg sub adc mov bound cs lods add sub push sahf cmpsl add stos popf rorl inc stc xchg adc jl es (bad) enter test scas sbb push pop and dec int cmovle mov mov inc or imul (bad) (bad) fldenv jbe pop jno xchg pop fistl inc push mov hlt ljmp xor jbe xchg mov test (bad) dec mov sbb dec push xchg mov lahf dec add hlt or jae and xchg mov sbb jecxz fcoms pop cmp data16 js les xchg dec cmpsl and push pop mov dec add das xchg push xlat add fidiv movsb fadds (bad) mov mov jl stos jl sti xlat dec and inc mov dec je data16 cmp mov add outsl adc aas jno xor lahf dec cs jbe adc adc addr16 jp inc dec outsl dec dec dec sbb (bad) jmp fsubrl mov add cmpsl int orl sub stc sub (bad) int (bad) xor setne sub jecxz jmp mov sub mov sub and jmp adc insb jno inc repz sub in xchg mov mov sub mov mov jg or mov int3 aaa xor leave mov xchg xchg sub ja call fnop lret sub aad xchg cmp es mov cltd clc push cmpsl pop adc gs int and mov jo daa mov repnz sbbl adc cmp out fnstcw push out xlat jo insl sub (bad) pop shr mov adc xor idiv data16 leave lret jne sbb add and ss aas rcrb mov push sub fcoms mov out sar pop cltd jp add add jae push cltd adc cs movsb daa addr16 push je stc jb jb cmp sub adc and sub rorb out sub (bad) xlat sbb sub loopne ja out lcall fwait shrl add and sbbb hlt pop mov insb test or loopne pop test popf sub xorb mov add sub push int push jo jl mov std stos je xchg out mov add add hlt (bad) and mov cli fiaddl xlat jge cmc sbb sbb dec lret xor ljmp pushf push hlt xchg mov jb pop pop sub lret mov jecxz xchg dec mov test mov push xchg jns and mov daa mov lret sub outsl scas or add jecxz mov jle,pt sub insb mov push or or inc xchg xchg pop xchg sub jmp sub in leave sub cltd stos sbb pop ss cs mov out dec js fisubrl imul fldenv sub insl pop outsl data16 arpl inc or sbb out jg xchg shlb sub or push je (bad) sarl scas (bad) mov adc fiadd push pop cs scas inc xor xchg dec leave or lds repnz xor jecxz jae imul and mov sub cmp or ret or iret lock xor fcompl pop imull aaa adc jae mov in sub insb mov push xor add ss leave xor push sub bound sti lret sar sub out leave dec das pusha jmp sub and addr16 adc jg clc cmp imul push sub addl pop lahf addr16 pop mov in jno xchg mov sub cmp push push and arpl addr16 int inc mov test data16 ja subb dec int in or mov sub (bad) add inc and pop arpl cmpsl push dec ds int (bad) jno pop subl pop jns stos sub push mov enter out push test jp push sbb leave ljmp dec shrb imul shlb clc outsl pushw sub in dec scas aad dec je ja mov pop lret ljmp outsl jl mov mov inc daa and jno jg notb out sub lret cwtl movsl movsb inc cmp sub sub int3 repnz loope sub adc dec leave test mov mov (bad) xor sub dec aad sub mov add imul pop dec sub aam jbe and inc (bad) loop sub aaa pop lock pop xrelease mov loope in xor mov fdivp push sub dec fucomi sub push ss ss mov enter cmpsl andb fsubrp out xorl iret xchg enter outsb mov add push xchg push repz or sub addb sub cmp sar sub les mov sub in popa pop jno mov xor cmpsb mov mov sbb dec ret xor dec aam push dec push inc mov xchg or mov push push dec inc icebp insl push stos lahf (bad) jbe iret or cld mov icebp sbb push imul cmpsl and (bad) jge (bad) sbb inc rcrl ss cmp adc jle pop leave jecxz xor jo adc pop push sbb or (bad) (bad) dec push and dec sub fisubrl fs push repnz gs cmp mov decb push xchg jge je pushf add test (bad) sbb cs andl mov ret clc inc xchg daa daa icebp flds rcrb xchg lret decb (bad) les mov and lret jge sub sbb cmp bound sub aaa ja mov sub sub or icebp lcall xlat sub cmp out pop mov push clc dec jae sub or sub icebp ljmp cmpb lea (bad) jecxz add mov sbb in mov xchg subl fwait xchg movsb sub sub popf adc ds inc xchg js adc std dec push pop das subl jne lret shlb sub pop cmpsb and jbe or loop icebp jle lret adc jecxz sub push pop sub imul sbb scas adc xor mov sub lds fsubrl es loope dec mov and jb psubw inc or repz mov (bad) out addr16 mov sbb sub jp pushf out mov cli or imul inc add xor sub xchg jo insb stos sbb arpl es mov mull test leave subb sub scas push pop rolb rol push sub cltd lret mov add pop les push daa out repz loope sub gs xchg pop addl fbld int rorb inc mov jle inc mov dec movsb in insb sbb mov sub imul or fnstcw (bad) adc jno mov inc movsb test sub dec jl sub or das pop push insl sub mov out cs leave dec mov js (bad) cltd stos scas jp mov sub movsl xor sub jmp or sub lock pop lods sub xor mov cmp xchg jp xor movsl sub jnp into pusha mov xchg shr faddl std adc frstor insb popf das ljmp mov inc mov cmp adc add outsl scas push sub xor mov pushf sbb test pop insl mov mov jge or inc cmpsb mov repnz scas sbb xchg push jb int pop inc shll jp pop push xchg dec cmpsl daa adc cmp jge psllq push cwtl cmpsl nop aam je fcompl ficom pop lods inc scas push shrb push pop dec loopne cmpsb outsb sub pop adc out sub dec inc cmp mov das cmpsl sub out add into insl addr16 xor shll mov xor mov shll dec sub push push in mov shrl clc xchg ret (bad) xchg call pop pop cmpsl movl push data16 sub idivb ret sbb sub (bad) mov cmp jo daa arpl and ja dec push out xor pop (bad) jp mov lret int aad leave dec cmp imul inc daa test inc aad pop cmp mov jo jnp,pn and fdivs pop or call mov adc ljmp xor adc sub icebp or sub jbe dec daa and cmp or inc aaa sub and add dec dec jg push ror (bad) sbb adc das test (bad) int clc mov inc ja pushf jbe push lret dec or sbb sub mov leave iret dec outsb mov dec int insl vmread (bad) pushf sub pop and mov push cmp cwtl dec and loopne stos (bad) out jecxz jg mov into daa inc push clc sarl cmpsl xchg mov int mov lods (bad) jbe push loopne outsb sub push in jmp jbe pop dec mov call cmpsl rolb jle inc (bad) sbb test ds scas enter push mov pop pusha out test jnp xor push fadds cmp mov test mov sub pop xor pusha ficomp ucomiss xor gs dec shrl int pop and (bad) pop dec std clc jmp test imul mov xchg jle cmpsb popa daa inc push movsb inc adc sub pushf sub adc or pop pushf sub arpl cmpsl jg mov and int sub daa cli xchg or push les cmp push or inc dec dec and (bad) push adc stc mov out xchg mov jbe mov and add lock jl cmc (bad) xor jl jle dec lods jg add xchg xor adc in dec and idivb mov push jbe dec dec imul adc addr16 les xchg rcrl sti add subl sbb push mov decb pop cmpsl aam iret dec mov push (bad) ja gs pop test cld insb movsb mov bound jp sub inc adc mov popf (bad) out (bad) sub fild sbb cmp imul aaa out dec encls mov mov in imul xchg in test hlt sub sub (bad) out push loope inc sub test (bad) push shll adc lods and movsb pusha popf popl adc andl imul arpl fmulp out (bad) leave mov aaa and sub cs sti push addr16 scas dec pop mov sahf sub test sti out dec dec adc dec dec dec push push sahf repnz xchg push cmpsl (bad) mov mov add xchg pop inc jb jbe aam in cmpsb cmc dec dec into int push ret or imul cmp sbb pop xchg addr16 jp pop xchg loopne into mov jns,pn fcmovu pop sub adc in lret imul mov xor daa lock pop push (bad) repz mov clc pop cs (bad) mov test dec xor xchg outsl push push js push sub pop mov cmp add mov or test sub cmp leave mov arpl test jg cmpsb or lea dec loop or mov xor and (bad) bound daa add movsb add lea data16 dec daa (bad) lcall call dec out mov arpl push and call in inc push xorl ds daa mov int cmc inc test movsl and mov jl inc mov mov lods cmp mov (bad) movsl jl divl and cld inc adc leave or xor les push inc test out push nop daa mov insb mov andb mov push add pop imul ljmp aam popf test out int loopne xchg test mov xchg jmp cmp xchg sbb lret out cwtl (bad) mov adc and (bad) int insl cs sbb xor pop or cmp pop xchg cmc add lret push inc addr16 je nop pushf adc (bad) pushf xor cld mov and jmp jg push sbb sub jae dec jno inc sbb or aaa les repnz jge repz sub fistl xor decb cmp bound stos xchg nop cmp shlb mov dec sti mov pop push push add cld sarl int jb mov lret test mov ret pop jp sbb int rcrl fdivrs push lods mov jb mov cs push es popf or (bad) stos std push push cmp enter inc dec pop jp,pn ret dec xchg inc movsb int daa cmpsl cli cmp bound sbb das cmp mov sbb cmp or pop and sarl sbb clc addl dec leave and ret pop aaa jnp out cmpl cli insb push fnop repz push adc loop outsb jns sub dec mov (bad) je mov and sub or hlt (bad) icebp mov cmpsb cli mov cmp inc mov std lods sub adc inc das cltd divb dec cmpsb popa lret jp cmp lcall int stc sub fcomps mov movsl stos push into mov xor cmpsl pop int3 out mov cli sub adc pop fistp popf dec mov mov pop push jmp and (bad) jne mov dec jno shlb into and test ja (bad) sub pop popl jmp inc ret leave rorl sub adcb jno int ret pop xchg xchg push cmp test jno pop and mov dec sub fisubr push outsl pop push cs inc mov mov jmp jg fwait sub fbld add call or mov sub mov sbb push scas sub (bad) push jbe inc imul repz sbb in jp push xchg adc xchg mov lcall jbe movsl pop aad stc rorl inc lods mov xchg inc mov imul and jno xor sub or xchg pop ret xor add sub cs adc or jle,pt sti in push and (bad) int3 push jbe aas ds pop movsl test sub inc push cld cwtl imul leave test and xchg ss insb ja sub (bad) push scas ficompl jns mov mov leave jne es popf pop sub (bad) ss nop dec leave push sti ds imul push int insl jle ret pop test xor pop pop int repnz pop xlat sbb aad (bad) ja xchg push dec cmc pop push mov loopne sahf inc divl movsl sub test mov movsl (bad) enter int and inc leave repnz mov imul inc jbe,pt shrb into mov push popa inc outsl leave inc hlt or imul dec dec inc mov xor mov stos dec xchg sub jle mov pop int mov in leave call lock (bad) push loope cmp test (bad) scas dec std cmp and push icebp mov mov cmp add inc setae mov sti fmulp push xchg pop sbb cltd fbld sub outsl ss repnz dec test sub mov test push push std jge fisttp loope mov and xchg xor mov pushw lea imul (bad) xor testb mov jg mov mov call jae faddl pop fnstenv xchg enter inc or lahf push fs sub idivl inc daa xor jg mov jp addl jle jmp arpl ss pushl sarb das mov ljmp cmc popa push das sbb jne lahf nop xor ret fsubs xchg inc mov add fimull lahf mov cmpsb data16 jg add push mov cmp and into sub addr16 stos mov sbb pop inc test cmc test and sub sbb xor jmp mov mov inc jle sbbl push push (bad) pop pop sub push outsl stos cmp and out jne and jnp inc (bad) xlat push ret (bad) lret sahf cmpsb (bad) dec cmc inc aaa arpl and fidivl (bad) jge test pop or push imul mov loop mov (bad) inc leave data16 sub pop adc ret hlt push daa stos call out xor bound pop cmc jmp mov (bad) movsb aad cmp idivl movsb (bad) pop push into lds sub lock push outsl cmpsl mov push mov int adc out in roll and int xor inc imul or cmp lock incb jmp dec jb or arpl dec push dec push inc mov sub sbb cmp shr jg test sbb xor adc ds sub jne jge rolb call mov sub xlat lods push (bad) outsb cld push out and cmp imul call shrl lret xorl lock andb pop iret popa aas sbb ss xchg sbb push mov jo xor inc sbb sti dec add fildl dec leave add subl insl sub das sub into sahf testb mov cmpsl jg xor xchg ja ds int3 xor aaa push sub jne inc cmp mov sbb jns push sbb bound in test dec sub loop inc test jmp sub loope add sub push mov repz xchg push jmp cmpsb stos lret lcall dec (bad) lea enter sub jnp fistpl outsl out ds sub inc add mov or mov push add mov or or cmp rcr xor out jnp mov xchg aad cmp out jae sbbl jbe sub mov cld sub mov sbb sub push adc push sub jo pop outsb fidivr inc ds imulb popl sub cmp jg xor jmp aad fmuls push cmpsl cwtl lahf nop pop push (bad) dec int das xchg loope cmp xor cmp imul xor sbb flds mov ret push mov mov dec push pop or cwtl inc adc mov add into popa movsb pusha sub mov push mov addb cmp cmp xchg cwtl outsl enter stc mov push stc (bad) ja pop add adcb not push jae cmpb rdmsr mov mov sub cmpsb sub push or jle int jmp jnp sub jns inc push shrb cld jl ljmp xor cmp pop xor call (bad) int cli bound inc test cmpl jge outsl sub shrb lods les lods sub push jmp jno jg,pn stos imul imul insl xchg pop jp adc mov lret arpl mov jns imul inc pop jae ljmp pop popf inc out pop cltd ds leave hlt sbb xchg into (bad) cld test icebp fsubr push movsl xchg cmpsl (bad) dec dec (bad) scas (bad) ss inc lahf stos and sub dec jno cmp inc aas jnp dec dec sub and jp pop fisubrl nop inc xchg xor sbb mov imull jmp sub pop jl cwtl and xchg and cmp push mov loope push je cmpsb dec jne lods int3 push jnp loopne dec sbb int3 xlat adc lea dec mov cs sbb test mov mov sbb mov xchg push aas mov out (bad) outsl sub in subb xchg aaa (bad) das sbb jno sahf cmp cmp sub jmp fwait insb cmpsl dec push push in mov test add adc pop sub mov pop insb pop add push xchg mov push mov jnp subl sbb lahf sub or test pusha mov or push out mov cmp icebp xor cmp pusha sub loopne inc repz cs adc mov test dec sub imul sub add lret cs rcr sbb fsub hlt inc mov dec sti pop lea into std jmp pushf fs inc sub cltd pop push dec (bad) sub lahf sub push sub cld ficom repz add push xor xor add ret pop or cmp mov popa mov sub lods and cs mov (bad) sbb sub pop lret adc sbb sub aas lods sahf fidivr or inc mov popa jp xor or pop js jecxz xor lahf daa or push sub lds clc test insl dec stc mov push adcb jae dec pop and and push repnz ja lret out adc pop xor (bad) int jne ret push mov cld (bad) cmpsl jno inc outsl jmp inc jg xlat mov fldenv pop mov shll cmpsl cmp int3 scas and sub insl xchg dec (bad) hlt jge xor int sti xorl test leave xchg pop and loopne imul mov sub sbb rol adc mov leave lods sbb add pop pavgw and inc adc es stc jne dec sbb insl or leave xchg jge xchg data16 mov (bad) dec (bad) pusha stos cmp cld jo imul mov lret (bad) cwtl loop xchg jns int pop fnstenv pop adc int sub push sbb xor sar mov and push sub loopne sub (bad) cmp xchg int es push jne (bad) in rorb pop cmpsb loopne mov arpl (bad) pop movsl ljmp dec pop mov dec sarb xchg push inc scas enter mov stc xor rclb adc leave into mov mov sub insb into icebp cmp daa scas jle ljmp push (bad) lods sub adc xor in mov jae cmpsl mov fdivr imulb mov call xor sbb pop lock insl fimul and mov xor mov decb call mov es jmp or sub dec xchg push adc ja sub js out aas jl mov or push push inc adc dec dec aaa test cwtl add cmp imul shrb js loop and lods dec xchg scas mov (bad) xchg or imul clc add int pusha sbb cmp pop ds movsl mov cmp fdivr test cmp dec test add sub insl xor mov inc mov push mov int inc inc lret das inc ror and jbe js aad rclb dec pop pop dec movsb cmovns leave jne mov (bad) insb adc cs sbb jle pop cli ret jbe bound gs xchg test (bad) jno fildll pop push mov loop imul lret out in mov xor rcll sqrtps mov imul sub dec es (bad) mov mov sub xchg inc xor popf jb sti mov xor mov lods xlat lods dec shll jno int sbb insl ljmp loope xchg dec dec add icebp mov jl sbb leave xchg mov adc and iret scas mov jp dec inc xchg jae dec lahf lods jle mov cmc jl jecxz nop adc cwtl mov jb scas mov xor dec sahf cmpsl int mov insl pop out push cmp nop aad and adc xchg mov loopne (bad) inc dec icebp adc insl jnp sub idivb add lret adc ss jle std jmp mov mov lds call xchg push push fdivrl cmp out loop inc and cmp xchg aaa lock xor or imul int adc xchg aaa pop movsb xchg push jne cmp push mov sub inc cs mov outsb and cli cmp pop data16 xor or inc mov pushf stos into cmovnp cmpsl add out push imul sub cmpsl pop into shll jge scas sub leave stos mov dec xor pop adc getsec mov xchg subl pop inc adc ja rorb pop mov cmp sbb ljmp xchg fsubrl negb adc leave dec fwait lods push int sub icebp push and sub ja (bad) int pushf inc js sub (bad) lahf dec or push aad inc sbb test and add fwait inc lahf or cmpsl fistpll cwtl pop mov adc xor int call out inc or imul sub sub aaa adc inc stos sti sub pop in inc mov hlt popf scas (bad) out fdiv sub in fsubr fucomi xor pop repnz (bad) jbe popf stos sub push cld lcall and mov cmp sub or cs lods mov xor pop cli int3 fildll sub outsb stos cmp pop out sub imul jbe push push sbbb insb imul sub mov sub test cmp mov loope jmp lods js rcr or cmpsl or (bad) scas push pushf xor mov cwtl (bad) outsl and fwait jo pop (bad) (bad) lcall shrl mov jge inc push mov mov repz xchg test push jno push int3 mov enter (bad) jl cltd dec aaa lea inc push mov cmp cmc jg fidivr pop dec dec xor gs test sbb scas mov jg (bad) inc mov inc xor mov add movb pop ret cmpsl mov xchg adc int and xor add push lret inc pop rclb imul push jecxz mov mov fsub loop aaa jg dec rolb push test jns das int3 leave adc lahf cmpsl scas inc fwait sbb data16 xlat jmp fimul cwtl adc movsb push out addr16 mov cmp repnz insw mov jg dec stos pop fldcw inc stc xchg je movsl (bad) rclb test leave add mov test (bad) movsb mov fchs mov mov (bad) call adc jl inc sub sbb loopw xchg (bad) sbb cs xchg (bad) fdivr out das test iret mov cwtl scas xchg rcrb pusha push adc jl sbb pop pop lods xor pop jo mov insl and mov adc sub int3 movsl (bad) push pusha out inc loopne dec cmp dec (bad) in cltd pop mov pop cmpsb push scas outsl xchg (bad) or dec sub js repnz pop jnp notb fistpll (bad) int fs or decb jno jb mov pop mov outsb je mov imull and xor shlb mov cs (bad) mov pusha mov arpl mov pop clc push ret rorl mov sub inc sub jns cmp sbb and dec movsb push test sub mov addl aaa cwtl addr16 adc jae cmpsb add mov or lods xchg bswap fdivp daa push mov push and xor imul cwtl test sbb xor adc sub dec adc arpl xchg imul push popf dec jno push fimul mov out mov fmull int or sub fstps push adc loop cmc adc inc push or or sbb in pop sbb adc stos mov ss or add addr16 shr aaa pop int3 xor sti adc imul jecxz (bad) jo cmpsb cltd out loope and xlat and ja sub cmp jb addr16 dec idiv push in xorl scas bound stos jo push addr16 xchg fdivrl sbb xor fidivl push lods push (bad) mov popa push rcrb dec pop movsl jbe cmp fldenv iret ficompl xchg insl not push loope stos (bad) enter mov dec icebp jmp fdiv mov dec std sub decb sub shrb scas popf fldl jnp push adc (bad) div cmpsl popf xor cs adc test stos and and loope inc or test sbb jae sub inc test cmp orl jle das sbb cmp inc shrl jne and addr16 dec popl cmp push sub sti dec mov int3 xor sub cmp push sub icebp mov dec adc mov jg (bad) mov leave xor or xlat sub (bad) ss rolb sub icebp fsub call mov movsb in push sub aam ja xchg sub inc push popa divl stos jnp push xlat jae insb sub rorb xadd dec jns pop outsb xor push sub sub dec repnz jmp data16 (bad) and in sub loop std sbb mov cs pop or xlat inc jnp (bad) in pop sub int ds bound movsb lods setl sub mov cmpsb xor jp xchg int3 lcall enter sahf jb push movsb xchg sub sti cmp adc psrad insb lods ret lret pop fidivr pushf mov xor sbb sub dec leave jg jmp ds adc add mov popa xchg sub push and jnp mov das (bad) mov sub lds xor mov cs popf push fsubrl imul (bad) jb sti sub sbb test pop andl pop sbb sub fildll xor sub cltd daa and es idivl fs sub and mov in xchg loop into imulb fildl sar daa movsb jecxz fs fpatan dec pop ljmp push jge jno fstpl mov mov jp lret scas pop sarl (bad) fistl (bad) (bad) mov mov out loopne xchg cmp rolb stos push (bad) (bad) not cmpsb popl and arpl sub insl cmp mov lods pop addr16 dec sar imul addr16 test lcall or push subl dec cmpb cltd xor jecxz es push mov mov pop leave sub cmp xor fcompl sub stc lods test sub pop cmc (bad) in mov je std mov cwtl lret or xchg lods mov out sub xchg push jbe dec ljmp and jno cs xor jmp or or in cmpsb cs push dec xchg cmp add xor push adc sub mov cmpsl popa pop out jp pop sahf jo push hlt inc xor outsl or add jne sbb hlt cmp repnz jnp icebp pop stos pusha jbe cwtl fsubrs movb or sub fwait xor pop adc iret mov ficomp enter xor lock nop jb add loope jmp jmp sub fbstp xor jno sbb ss cmp into push or inc mov outsl push movsl and mov cs nop mov mov scas fadds aad mov inc or mov push mov out outsl pop pop fwait sub sub sbb sub sti ljmp pop add sub div pop pushf sub cmpsl pop dec add inc ret or dec jle cmp xchg mov sub push xlat jb pop pop out (bad) cmc push sub les push push repnz imul loop inc gs data16 fsubs leave mov pop out add loope sub jecxz jbe mov icebp mov cwtl dec jg test push mov push insb sti inc lahf rcl shrw cmp push fisubr fwait pop data16 and test xlat sub jne fsubrl subl push js xchg or lret fwait lock ljmp aad push sub inc rolb mov ret dec test xchg mov mov sub fcmovnbe orl int3 xchg ljmp loop push ljmp or test insl out mov pop test add cmpsl pop jnp sub insl pop daa add xor std loopne imul mov scas iret jbe sbb test adc sub jg dec add mov addl push cmpsl fldt lds insb andl dec clc iret dec jle jg inc pop and dec popf jmp cmp add dec push inc int3 cltd mov ds fsubs xchg cmp iret shr (bad) lea inc adc ljmp jg adc das sbb sbb pushf dec push adc cs into jecxz mov jnp inc cmp push loopne (bad) pop test mov dec into pop lahf arpl jbe mulb out xbegin sbb push mov pop sub xlat call push sub xor add daa dec lock sbb pop test je sahf (bad) pop imul jns sub sub rcl sbb jae mov xchg cmp jge and lods scas add cmp sbb (bad) repz (bad) ss cmpsl (bad) mov xchg sub lret neg sahf add xor les cmp add cs mov mov lds aad mov imul cmpsl cld inc sbb ja sub dec sbb or cld cmp push ja and cmpsl insb mov test fbstp sub sub inc out clc test scas call sub sbb (bad) aas (bad) sub xchg roll sub ljmp and xchg xor nop (bad) xor ljmp out ret sub addr16 sbb icebp cmpb cltd dec mov jbe cmp xchg nop (bad) aad pop sub popf sub dec les subb adc sub (bad) iret cmc cmp movsl sti (bad) cs test adc dec std add inc or sbb (bad) ss (bad) (bad) mov dec add je fsubrs addb push dec push cmp in mov aas mov xchg sub aaa jle or (bad) (bad) mov pushf ljmp cmp sbb out sub mov cmp push pusha in (bad) and imul pop lods mov in bound sbb xchg enter xchg inc sub push dec lcall mov inc (bad) mov mov and test ja adc aam cmp fsubs sub (bad) jle cmp inc fidivl test pop push push jmp mov inc jge or sbb add sub inc xorb or imul xchg jne lds jl jge ja xor pop imul aam sti ss addr16 cmp mov or std xchg sub js mov sub sub pop jmp cs repnz loope sbb stos addl pop xor dec jl add cwtl fsubrs sub adc mov fldcw or pop jle (bad) xor fidiv leave or and pop test sub (bad) push dec add jmp push dec cs arpl dec sbb out sahf inc add sub and test add je cmpsl mov lods mov xchg pop call fadd mov dec sub stos loopne std movsl cmp push js fcomi addr16 sbb sti dec sub iret enter sub jno imulb sub pushf (bad) or bound sub daa dec cmpsl es xor mov stos add xor xlat jb std sarb push sub inc and mov movsb mov cmpsl imul xor aam ret push gs mov or mov xor push leave or sub sub test or aad icebp inc xchg cld sub outsb (bad) pushf inc mov xchg loope das mov fcmovnb scas xchg mov push test jg xor fisttpll inc mov (bad) (bad) sub push dec rorl movsb push jo ja sub cltd adc test jb sub sub js dec (bad) cmp cli cmp rol xorl ficoml mov lods in lret lock push fldl jae and sub pop or xor inc enter movsb mov sub dec pop arpl cmpsl sub sub inc es mov sbb jnp mov movsb pop lock sub stos push xor xchg adc int3 sbb out pop or sub push ret adc sub add and daa das jno jle dec stc cmp decb test fs sub xor mov sub shrl faddp dec xchg push push bound mov data16 mov push clc jb js jb xor push xor xor sub ljmp pop dec inc dec pop xlat mov and sbb cli or ss adc jbe cwtl imul sub adc leave or or mov and roll push xchg push xchg jnp sbb jg daa shrb das sub mov mov sbb jp and out add xchg pop fdivs std cmpsl mov sbb fidivl divl lock add ficomp jae mov testb add mov jnp dec xchg cmpsb jns int inc popf out ret add fistpll cltd movsl dec lcall or sub xchg mov das dec cli mov sti push lahf jge int3 sub out pop cltd call into sub ret mov ss enter and outsl inc aas mov pop adc push adc sub inc (bad) in orl mov cmpsl scas and bound xor out cltd add pusha (bad) testb bound test dec push sub loopne sub inc test (bad) add inc (bad) mov enter xor aaa sub aam (bad) sub sti clc xor sub push aas jge and aad xor pop call cmp jmp sub mov cmp jl push sbb pop movsl mov daa aad lea sub cmp data16 (bad) js jmp sbb data16 push xor and fucomip int or rorb cmp daa test popa push shlb jo aas mov adc xor ds pop inc add rcll mov lods fwait in repz mov cld xor in popa loop sub and js sbb push mov (bad) push xor cltd xor movsl mov inc fildll movsb test out add push sub stc sub leave adc outsb decb test ss mov imul cltd or adc inc jb cmc sub inc xchg loop stc xchg sub push cmpsb mov and fwait xor or sub imul or or ja jge fs and (bad) sub pop push (bad) inc insl lods adc jne and push pop (bad) inc shrl jbe pop icebp (bad) sub dec (bad) sub movsl and jb add inc jb pop fsubrl fsubl inc pop fnsave dec dec push jo imul mov and mov leave cmp sub dec arpl punpcklbw xchg sub shlb xchg push xor (bad) ss outsb adc or add addl inc incb (bad) xor push adc popf sub xor cmp jg sub int3 or sub and inc lock out les or xchg mov in xor or mov js sub mov scas mov push xor adc add inc (bad) sub jge jae fisttpll (bad) mov sub imul sub negb sub daa xchg cs sub mov add dec shlb test mov and pop push cmp gs adc push ljmp imul mov arpl add lret sub pop int3 sarl call cs and jno (bad) out dec mov ds sbb inc ljmp leave and (bad) sub mov arpl jp into orb addl fadds sub sub repz push xchg xor scas movsl icebp pop inc jno sbb mov sub into jnp loope inc xchg sub rolb (bad) add (bad) (bad) and rcll dec lock pop aam sub mov mov (bad) jne xor xor cmp repz jle cmc fdivs (bad) adc (bad) icebp inc repnz into not xor sbb adc xchg in test push ret movsb sub xor test xlat std jae push sub daa jo and or cmp cs les cmpsl push mov daa xor pop ljmp adc inc cs in je sbb out stos bound dec (bad) shrl xchg inc mov ret sub popf mov cmp sbb repz and xchg or (bad) jns push aad js xchg xchg add mov inc jg mov mov ss jno mov mov and inc jne ja subl and dec and jnp lods push (bad) inc pop pop sahf sti (bad) arpl popa sub inc cmp add add push sbb push or addr16 pop inc push sub sbb fldcw fwait mov add repnz bound in mov out sub lea sub jecxz mov push in jp or jb add jns enter (bad) iret jge dec pop in xchg sub mov lea mov xor sub stc bound lahf xchg data16 gs (bad) call mov dec push jmp inc fmul repz subb (bad) jmp mov jg mov fcomip sahf jnp movsb decl out ljmp lock sub inc xchg scas sub jl sub add test sub cmp fisttpll and sub jecxz lret cwtl sub gs cmovbe inc jnp sub ja xor xchg sbb popf sub xchg xchg cmpsl mov mov out sub lods cmc shll (bad) sub xchg mov or jl sub push mov fbstp jecxz jg mov fiadd xchg repnz (bad) sub aad jecxz pop out decb cmpsl movsl pop push repnz imull das sbb pop or jl sub pop repz push (bad) dec jmp adc mov mov rcl (bad) rclb repz addb ss push js and test dec cltd fwait adc pop addr16 push (bad) jbe test enter sar sub pop int3 adc test insl jecxz scas xchg (bad) xchg cmp and jge call cmpsl out inc btc jb dec sub push hlt pop scas int xchg sub and in rcll sub or xchg aaa ja xchg pop jno dec and dec xorb jecxz dec cmpsl ja lock push je int adc insb pop sub cmp dec jns cmpsb pop xchg push mov js imulb sub pop pop repnz add pop jbe rol mov xchg cpuid mov sub clc stc cmp sti mov test ret sub jns sub movsl fdivs mov inc push mov push push xor and push (bad) and lret je dec sub ret icebp xlat fucomip lods mov add dec sub pop lahf int inc addb int3 dec xor sub push das pop jmp sub jl insl mov xchg rorl sbb mov cltd pop sub es xchg fldl or ss sar sub outsl pop cmp cmpsb dec dec jg sbb cmpsl sbb jno push jp xor fwait sub stos push pop jb mov and sub cld sar rorb fs push lods sub adc insb pop insl jb in pushf xchg sub cwtl scas jmp imulb add subl push cmpb mov fmuls aam xlat repz ret xchg jecxz xchg jo mov pop movsbl sbb xchg xor mov leave std repnz add push pop mov and shrb loop inc sbb sub hlt daa sbb imul sbbl dec add sub xchg mov scas mov outsb jge mov push int cmpsb punpckhbw push sub lret push or hlt test fwait cmp js leave test mov into ds xchg faddl jnp fs daa lods and ficom cmp mov ljmp mov add negb mov test inc mov cld add icebp test addl add sub (bad) dec jno cmp arpl push hlt mov sub lahf movsb daa (bad) (bad) in adc sbb pop ds out jp sahf sahf test dec mov stos cmpsb stc xor jbe cmp repz in jb fisubrl mov (bad) ret sbb add jno push inc pop (bad) imul and xchg inc popf and adc push sub loope or mov ja (bad) xor mov pop ficompl fsubr inc sub adc hlt add jp movsb sub ret or add test sub mov or mov ss sub push jge cmp xchg mov adc sub pusha (bad) jo enter fnstenv sub lods sbb sub add and xchg dec add xor out jno cmp out testl aaa dec in sub sbb and (bad) les daa xor inc dec mov lods cmpsb mov (bad) jecxz push pusha icebp movsb mov pop insb push jo (bad) les ljmp mov adcb mov sbb sbb ljmp sahf (bad) cmp mov add les pop test ficoml sub ss in xlat in lret fdivrl push cmp or and popf fldl mov stc push cs cmp and inc xor popa out adc mov mov push add hlt aad fwait inc xchg pop xchg nop sub push lock je ss mov lret cs sbb clc lea sub sbb daa or sub push arpl inc out fwait ds jne pop sub jg rolb mov fisubrl mov out stos cmp mov bound dec jnp dec add into jbe in sbb aas pop aam pop push or pop ret test cmp das addr16 mov test outsl ss insl lods imul xchg push sub addl movsb data16 jbe sub sub ds jns movsb and fbld cmp mov inc pop test sub fdivl mov jb loopne cmp sub fiadd ss pop out das rolb and ror and sahf add mov add loop dec call mov cmc rcrl test shrb cmpsb xchg add loope aas shll call sub jle mov jge push aad and and jns xor cmp pop mov xor mov xchg dec sub stos pop mov adc outsl cmp std cmp pushw ror sub push jbe test mov cs jge addr16 push aas pop repz jbe pop sub aaa outsl ret test pop (bad) push sub data16 test call xchg push and adc cmp xor std push inc xor mov test stc cmp xlat mov pop cltd stos mov sub (bad) push pop inc adc fildl arpl mov jb dec mov dec dec std pop sti xor roll dec (bad) pop cs aas (bad) cli dec pop gs in loopne daa push cld out out daa or std iret xor popf xor mov ja or cmp and lahf insb pop in test ss lock ss or lcall enter addr16 push cmp and loop xchg push fdivp pop adc push mov roll add sbb mov sahf gs xor add sub or fstp pop lock fcomi inc xor sbb cmp fs or add mov add pop lods mov shrl dec mov inc mov jb push test sbb push mov ficomp pop xchg push mov ljmp daa (bad) frstor gs arpl sub iret pop xor cltd pop mov add cmp scas out cmpl fxch ss in (bad) pushf lds imul push stc cli sbb inc inc and and cmpsb imul enter cmpsl cwtl sub jmp push inc jae xchg std ss jo ljmp pop adcl (bad) ss sahf sub mov sub add pop sbb sub cmovbe out xchg lret sub js jb fiaddl fistpl inc cltd fildll cmp popa mov dec lods test sub sbb lcall inc jbe jb or je sub mov xor movsb cltd addr16 loopne out sub sti sub inc or stc outsb aas sub mov mov mov mov bound adc xor and es das mov in xlat cmpsl jo scas mov fs push repz sbb push lcall sub movsb sbb and out cmc movntps mov sub inc call sbb add lcall jle mov loopne repz push dec test sub xor inc xchg or cmpsl and xor (bad) xchg cld sub fucomi and mov xor sub mov and repz push iret mov or inc inc enter dec incb gs mov gs js xchg divl cs cwtl pop hlt push jns into call sub sbb (bad) cmp push jbe push hlt sub mov stos (bad) xor push loopne sub mov pop sub outsb xchg sub jle dec sub jnp (bad) jb scas popf stos add fnop fist jmp inc mov sbb mov dec push mov sub lods cs in and in lret and xchg cmpsl je and arpl in cmp mov lret lret xor mov pusha pop and or inc shrb xlat lock test test add out stos ss dec fildll test iret sub xchg and shrb dec xchg push xchg leave clc inc xor push int and aam mov mov add lret adc adc out jle cmpsb pop cs or push imul dec adc push jae mov outsl inc push push loope ja sub dec sub mov addr16 outsb ss push enter push into mov sti adc xchg cmp or cld insb mov clc out sub or xchg pushf sub imul and lock std int3 rcl (bad) outsb push jbe cs cmpsl push and movsb ss aam aad loop add push jnp lret fisubr add rclb jbe sbb jo jl xchg jns xchg (bad) sub sub sub fdivs lret xor shll enter jg imul jno adc jbe sub rclb iret cmp (bad) xchg xchg pushf repz push cmp lock rorl cmp adc jae jecxz fldcw aam clc sub scas outsb (bad) add mov jns popa sub icebp inc test xchg xor push sub lock sub mov or or ja (bad) dec sti imul add mov pop ss xchg mov ss jo pop in mov sub sub subb sub in mulb daa dec test test or ret mov mov mov icebp or outsb sub movsl movsb stc mov xchg sbb imul rclb cwtl mov sub xlat jmp mov jne adc (bad) xchg es or inc push jle inc fsubr mov mov xor call or sbb add icebp pop fwait push out add add sub ja or or dec push jmp xchg sub mov lods inc push xor dec daa mov xlat and arpl sub cs jg gs cmpsl sti (bad) iret jge mov pop jno or adc pushf mov push nop and popa mov xchg test push cmp sub mov mov sub int (bad) jns cld sub lods (bad) cmc fiadd xchg sub pop sub xchg sbb push lahf int sub sub inc xchg mov add xor ret pop mov pusha sub cmp in and sbb push ss push mov nop cmp scas (bad) dec dec pop imul (bad) mov mov dec fxch (bad) sub sub inc sub mov push jmp mov pop lahf sub hlt imul iret es xchg adc mov ja mov sahf movsb in sub sub xor dec test sub int lcall aas sub xchg lods sahf test fisubr mov movsl cmpsl out (bad) adc into xor out sti dec xor pushl sub hlt movsb movsl cli fnclex data16 pop cmp in and and pushf stos ret mov mov test or insl mov jbe aam int3 mov (bad) mov jg sub fldcw cmp and inc xbegin push xchg push dec xor (bad) jae push push dec fisttpll sahf push fcoml ds mov adc and loop das sbb pop lahf jg add dec add jno cs sub jge pop or stos leave mov or pop dec jb mov out push push fcoms lds sbb jp fs subb add sub fmuls mov dec push dec mov xorb ficomp dec sub inc add or xor mov roll into aam in outsl fisubl mov push aas pop push adc sub add sub push in (bad) sub mov sub inc mov mov ret sbb pusha mov sub sub ret xor call stos bound jecxz mov fstl std and dec cld jne and sub imul push (bad) outsb in sub adc push negl or jbe inc pop bound jnp,pn ljmp daa int pop stc test sbb outsl xchg fisubr dec or or xchg add xor ja xor pop cwtl cmpsb and jge sub imul fild in sub in push sbb mov sub cltd xor sub stos pop dec xchg and sub sbb jne push data16 fwait mov sub dec movsl fmull jae sub (bad) xor push out stos pushf fsubrl xchg ror rolb loopne mov push mov (bad) popf pop xchg sub jmp cwtl shlb test adc cmpsb imul push gs aas cmp xor test (bad) lock pop test imul sarb iret sub lret push fiaddl inc or jg cli repz jo mov lret push inc or push mov movsb test xlat or scas leave sub scas jl cmovge sub test jo xchg int3 sub sar pop xchg xor test push sub mov (bad) loopne inc sbb rcrl insb xor sub push idivl sub add imul xlat cmc xor push jmp sub push xor jno lcall push inc (bad) push jle out add or xchg movsl sub push and icebp mov cmpsl out sub pop jo push jge,pn loopne lcall sar cmc aad mov addr16 sub fdivrs sub cmp mov inc test add imul lock icebp fs inc aas bound testb dec sub enter fimull bound adc test es pop cmp and sbb loop mov jbe and outsb adc pop dec xor mov popa cmp pop add iret dec dec and mov out dec aas xchg add xchg pop add fldenv sbb pop (bad) leave jne push dec ja sbb scas imul cltd jbe push (bad) cmp pushf ds ja loope xchg aaa call mov push (bad) daa dec xchg inc push inc dec insl mov jb sub xchg and and aad into stos jp jae fcmovu jnp int3 jl mov (bad) cmpsb (bad) out or sub arpl inc stc fild add (bad) mov mov int call sub leave sbb inc push rorb fbstp cwtl jecxz icebp xor sub je,pt stc inc aam es sub push into mov in pop pop addr16 mov mov imull in xor sub mov mov lods cmp sbb and dec push jae cs and add stc or sub sbbl notb sbb movsb or fwait mov dec sub and mov pop loope sub add pushf (bad) and xor fwait outsb fisttp inc in mov xchg shrb cmc ja xor pop out push mov popa and push adc iret dec jp xchg xor add das out je insb dec dec and sub dec (bad) xlat adc sub sti into (bad) decb cmp xchg mov fisubr int push bswap dec (bad) jmp int test pop fs dec add or sub movsl push into mov sub xor aaa and ljmp popa cwtl inc (bad) sub (bad) aad xor popf lods pop mov adc dec cmp sahf cmpsl (bad) (bad) cwtl in sbb cmp jg test xchg cmp fdivrs or shrl and or fwait (bad) clc jbe sub mov nop js ficom sub mov add push adc mov std inc push dec rcrb add andl xchg pop push mov int and cmp dec cmp adc xor mov jnp push xor stc int3 (bad) (bad) xor xchg or jecxz or (bad) call pop fldcw sbb out insb outsb and repz fdivrs aas test js and pop pop ds jo or jp mov arpl cmpsl cmp leave pop or das inc mov scas push leave (bad) rorb inc push notl loop xor add (bad) dec mov data16 push (bad) dec (bad) in daa daa enter data16 call mov pop or and cwtl cmp push xor (bad) jle fldcw xchg xchg fstpl ljmp sbb aaa clc cmp in dec (bad) icebp loop xchg in jns xor in push mov test push out ja fmuls jp outsl jnp push dec inc pop inc leave mov cmp jbe push inc leave pop xor test xor push push dec fdivp shrb lret fcompl sub push repnz dec mov outsl (bad) jne push rcl mov bound push cmpsl imul movsl or jg (bad) lret sbb mov push lea push aas sub add push push ja xor dec int loopne dec jb mov mov cmp xor jle out hlt cltd cmpsl push jne sub daa jb decb pop mov add jno,pn mov test call xchg cmp cmp mov xchg xchg inc es push xchg push jl pmaxsw cmpsb mov inc cs dec inc jbe mov mov rcl shlb out fistl lret fdivrl lods int add js jmp lods inc push rorl test pop dec sbb cmpsl mov xchg jo mov loope pusha sti in sub popa sti push dec ljmp stc aad (bad) ds or fcoms and cmp sti movsl cmpsl in jae pop pop mov bound ds cmpsb daa xchg cmp (bad) imul cmpsl movsl cmpsb xor in mov pusha sub push je mov mov inc cmp sub pop jb in mov xchg cltd repnz xlat cwtl sbb fisttp jecxz inc movsb in jno adc sub ljmp jmp pop inc jbe sub cmpsl lock add bound mov sub daa cmc popf enter xor pop ficomp pop adc inc mov jno add jno lret sub shrl (bad) cld dec jns cmp xchg sbb lds mov outsb fucomi jne shrl mov or sub sti in sbb inc adc js (bad) xchg jl repnz lock add jb inc jns jne cmp jl jno sbb sti movsb cmp fldcw sub dec imul inc js jmp push mov in cs ret push mov outsb iret insl dec out and out and or loopne push xchg xchg push jnp roll fisubl push and pop mov popa shrl cltd jno or dec jo ja mull aam jb movaps cmp out cli mov sbb call popf sub xchg xchg out jmp in lahf sarb mov sub dec or cmpsl in das leave pop sub or ds jo or lahf jnp iret popf mov iret cmpsl in dec jge push iret and subl or push push dec adc mov les adc jl,pn into (bad) hlt dec int adc dec ljmp inc jbe in and das (bad) xor push mov mov ja (bad) push jb push sbb pop and adc adc (bad) cmp test cmpsl cld sub mov pop push jne push cmp xchg inc ret imul xor mov mov fwait adc push scas xchg ljmp dec les adc xlat dec pop in insl push cmp and mov cmp inc mov adc repz ret pop std popa add add roll int mov (bad) xchg insb cli (bad) lret push and jbe fwait jb or test push xor jge pop cmp xor xchg xchg inc test inc sub jnp pop js cs leave mov inc (bad) jl push call adc sub sub mov andl push outsl ds hlt cmpsb cmp stc jmp jp sbb subl push call fisttpll dec dec faddl fwait add pop aas mov leave mov hlt fsts lods push dec push iret xor stos and inc sbb dec aam mov xchg mov (bad) jb jb sub dec out dec jp hlt cvtps2pi sbb sbb xchg add stc dec push idiv mov and sti in int3 and push add dec sbb ret cmpsb xchg pushf (bad) sti bnd jp gs jno push mov lahf call mov into icebp sub loope sarl iret add int rcl sub xchg sub pop dec xlat fwait or jp mov push push pop and leave out sarl int push mov mov fucomi ss mov or out sub jmp inc push push mov adc mov jo xchg inc outsl pusha cmp cmpsl pop jg jnp and xor pop jmp adc les jnp (bad) lods jg out (bad) inc int dec ror dec xorl (bad) dec push and (bad) xor cmp pop push into mov (bad) lahf jg and sub outsl imul jl fcmovnbe in jo push jo lret and push sub jae mov sub das dec and cli fbld mov cmp push xchg cmpsl mov dec shrl int adc scas (bad) enter sub test adc (bad) mov mov (bad) leave xor insb lods mov cmpsl jae nop (bad) mov mov (bad) push mov xor push popa data16 das pop (bad) imul mov cmp jnp push dec mov cmpsb (bad) cmp and aam mov mov (bad) mov add sub lahf sub sub fistpl stos pop rorl mov jb and lahf out js mov sub popf das cs aam rol shll mov sbb fcompl adc es lret add rcrb movsw movl xor lock sahf mov popa jmp fstps adc sub outsb xor rol dec add push bound test loopne sub push push repnz incb push xchg ds in pop outsb cmp mov enter push and imul xchg sub ss mov jmp loopne push jp adc sub aas clc cmp mov xchg inc iret cli pop repnz or insb sub leave lret xor lcall inc xor fisubrl sub push push mov lods sub cmp cmc push ss cwtl jg fdiv aad test push fwait push sub sub jecxz sub hlt inc mov and dec pushf xchg push mov push xor sub jge clc pop or cmp insl or dec addr16 mov mov test pusha das int xchg add pop inc mov mov sub inc mov add into (bad) sub ds insl and hlt orb jmp jo idivb xchg cmpsb in call std in dec pop xor (bad) or jne outsl les push dec mov cmp push xchg jecxz cmpsb leave lods sarl push xchg and mov inc lahf mov (bad) mov jae sti sub stos gs call sub mov je ljmp add fadds ret sub out inc xor leave inc subl dec mov push dec and scas push (bad) movsb jle inc insl cwtl sbb mov leave dec int scas inc xchg in fcom fisttp xchg mov push mov push adc int dec mov xchg and out (bad) push insb push push dec (bad) cs dec push lods mov mov call (bad) int xchg lods jns dec xchg push sbb (bad) icebp add out xor orl aas jbe repz adc pop fdivl push sub push and add pop je push and clc fdivrl jnp adc daa pop push dec xchg imul dec or inc adc (bad) cs icebp mov mov sub sub cmpsl (bad) movsl cmp mov mov or add imul aad sub mov aas paddw inc and inc testl cld insb push push sub adc imul fdivrl or pop aas (bad) call xchg in (bad) cmpsl sbb lock fucomi push pop ljmp sti jae and push lret xor push andl sub nop pop mov bound mov jb leave pop mov ds add xchg ud1 mov mov fstps cmpsb (bad) sub push push and jmp divb add imul jno cmpsb outsb push dec subb sub jo in (bad) (bad) int movsl ljmp push mov sbb nop or dec stc push int das xor xlat adc jge push xor imul add dec inc out sub push pop jp add mov xchg sub push cmp jg int3 int ja rclb std push and xchg imul xor int cli scas fwait push sub jo mov ss inc std push cli dec mov lock add dec add or fcmove push repz sub adc test adc inc mov test and add arpl dec xchg sub jae sbb mov sbb jbe push in sub sub ljmp sub outsl pop popf xlat (bad) jo bound add sub aam jnp sbb sub mov in insl bound mov mov imul leave test and xor and push lcall sbb dec inc sub shr adc push daa xor pop gs xchg mov rcrb fdivs popa cmc mov shrl nop sub inc sub add fcompp cmp adc and lods sbb jno cltd scas mov push and sub xor push pop jmp xor clc push jns mov fsub sub xchg sahf stos jb (bad) sub jo shrb cmp insl fucomp daa inc jae mov sub iret mov lcall (bad) cmp sbb lds jg dec into jp xor daa ret pop mov std sub leave loopne sub movsb insb pusha sub xchg cmp add mov in sbb sub cmp mov daa sub push pop lods or sbb or dec call fs or mov xor movsb or arpl mov bound imul xchg dec adc sub jle mov pop cs dec (bad) mov push lock imul mov push and daa gs pop and popa inc sub sub xlat lahf rorb repz ss push fdiv arpl call repnz xor fsts mov bound or in scas (bad) and (bad) ret pop dec cwtl dec imul pop jp rcrl leave mov cmp popa and sti aad adc and dec icebp pop cmp int jb mov sub dec lcall cmp loop inc push sbb int adc call dec scas cmp sub xor xor mov fstpl jno addr16 (bad) leave mov add popf xor mov push outsl sarl ss or dec into (bad) outsb bound pop cmp mov pop mov or loop mov mov adc inc ss leave xchg testl (bad) jo call leave gs fiadd xor std sub aaa (bad) hlt (bad) push push arpl fdivrl imul sub int out scas stos pop mov mov sbb (bad) das loop dec dec inc or mov cmp mov ljmp fnstsw or jmp loope push push stos xchg dec int pop mov mov scas sub mov xor loope mov out int ret (bad) mov cs or (bad) and ret stc shll cmp add lahf or rcr inc push imul dec mov pop pop (bad) ja daa mov adc dec je push subl out jle loope arpl icebp xor pop push push aam cmp (bad) hlt pop and cmp add insl aaa xor sarb cli stos jecxz lods jge iret dec bound les xchg jne out mov ja dec sub adc negb cmpsl scas push and pop push pop push inc push jb mov xchg mov imul lret pop or cmp jno fstl mov enter insb cmpsl int mov imul lcall (bad) cs mov out imul adc lahf sub mov sub gs clc f2xm1 dec fsubrl add xor fwait jge jg mov and loope jl mov pshufw or mov fnstsw xchg cmpsl fild jne pop jns fptan push inc xchg jb fwait cmpsb (bad) xor push pop pop inc fmull int arpl inc test jnp repnz std in add cli sub pop into addr16 in mov stos dec test cli pop add jb adc adc push jmp xor and inc cmp or xor mov and cmp test dec imul pop push mov addr16 sub mov mov jno dec sbb sbb ja pop cmp fsubrl int scas orb jbe jnp aaa iret rcl fsubrl push xchg ds xchg sbb in push rcrb fxam lods cmp enter orb lock dec cmpsl push sub xchg sbb adc dec jns or push mov (bad) je out xchg and add daa mov std cwtl rorb (bad) rclb loope jmp mov data16 mov adc or je mov pop ja xor (bad) add jp adc lea xchg xchg xlat sub push pop int3 stos pop imul push mov in xor jne or inc nop jl leave xchg mov dec mov push imull jbe out pop das ficoml jne push repnz xor clc test sub idivl push xor cs push mov imul aad mov mov jg jb push and sbb repnz inc push xor es sbb and inc out cmp sti xchg addr16 and dec stc shll cmp xor das sbb imul cmp mov xor mov mov ret cltd insb inc pop jns adcb out aas push stos sbb dec jg in inc aas pop (bad) ss mov dec cmpsb pop push dec imul push (bad) hlt pop cmp incl sbb jb out cli push inc out sti or xchg imul cmp ds notb dec decb arpl push add xchg fiaddl daa cmp xor jp lcall push dec cld daa cmp xor (bad) xchg aam pop pop pop leave mov and and push sbb (bad) xor fsubrs enter (bad) nop inc ret xchg pop aad jmp add and std push cmp sub sub daa int xor mov push xor int lret or push mov imul sbb push ret mov stos push (bad) iret xor sbb push adc scas and aad ja repnz mov dec ficomp ss xor daa mov cmp sub outsl imul sbb mov mov cwtl jle cmp popf adc or pushf sti cmp (bad) dec pop pop push notb push int mov cmp push cwtl adc mov sub adc jns pop and inc push mov sub pushf jmp jmp xchg les fsubrs push inc xor fs mov pop jg adc sbb pop ds add leave push daa pop iret (bad) lahf dec out jae sbb (bad) mov lcall imul xchg sahf insl push inc cmp das aas imul out call leave sbb cmp in aad mov mov mov pop das ss pop imul divl loope,pn bound push leave inc inc insb cld sub cmpsb mov cli imul imul cs or dec mov imul in inc outsb (bad) jns aas loopne in and mov movb imul push lods jp mov jg (bad) call mov cmp and xor dec (bad) lods xor inc push leave add pop cmp lret ds mov lret mov jno sub ficomp pop mov fidivl cs add fldenv daa pop and xor bound leave ja sub out (bad) mov mov stos out aad inc jp jle push into mov pop fs or dec adc hlt dec jb push jb push jge hlt add movsl outsb cltd mov xorl hlt push jge mov mov push mov bound xchg mulb aaa es inc sub pop dec daa or push sub idivl jg jp xchg push inc ds push xor data16 jg mov inc inc int pop lahf iret sub aaa pop and dec cmp cs int inc (bad) les jg sub xchg sahf leave mov jo xorps inc adc mov push cltd or pusha jmp lods les sbb enter inc cs sahf aas (bad) int3 mov xchg outsl out cmp mov mov loope or int3 sbb outsb leave xchg dec add es int stos cmp pop xorl push divl or fnstenv xchg fldcw dec sti stos leave inc test and dec into cmpsl mov pop and mov mov xchg gs inc jp inc push (bad) mov mul sub das push push test push aad jne aad (bad) je pop sub imull xchg out aad pushw xor and pushf add mov repnz push leave clc stos xchg sub xchg cmp lahf loope test and pop leave push lods mov push sar xor fmuls sbb sti xor inc sbb push data16 push sti inc into jnp cmp mov mov popa je jp je pop adc jp fwait xchg test lahf dec es loopne sub pushf in push cmp push lcall sub xor mov addr16 xorl mov rclb cmpsb xchg (bad) mov add sahf sahf jg scas (bad) jne push insl cwtl mov xchg das lods insb sahf jle mov and sbb (bad) xchg push sbb data16 jo jb sbb or nop leave add movsl jo pop outsb add jb movsl mov or jp dec push xor sub mov rorl push mov mov pop orl mov shrl out xor dec pop fs ror and out scas cmp fwait stc mov js jb mov negl and pop mov cmp cmpsl add sbb push adc ds inc pop mov mov xchg dec scas or cld push and pop inc xchg pop xchg mov sarb repnz lahf loope jb pop pop jp push aad aas pop inc pop sahf or imul pop xchg scas jbe jno pop shrb (bad) fsub das inc and mov mov jno sub jnp push mov push xor lret xchg push xchg movsb jecxz and rorb pushl test ljmp add out lret cmpsb outsb or scas (bad) cmp adcb pop enter callw jnp mov test jbe in pop ss dec jb push aad sub mov cs test xor xor (bad) sbb jge sub sub pusha add roll notl sbb mov cmp xchg jl ss xor dec and inc mov imul sbb add arpl cs add test aad mov mov pop dec xchg cmpsb stc or mov mov jg jl leave mov std and jl inc xchg out hlt (bad) leave into insl rorl jl pushf mov mov cltd orb (bad) pushf out jae sahf inc dec mov sbb (bad) out stos (bad) xor addr16 mov adc cld or jmp out cmp das dec dec cmp push mov push mov aas ds push loope xor arpl cmp cmp arpl mov or out into outsl out dec xor push inc pop stos sbbb cmp (bad) push fildll cmp bound inc cmp in scas fs ljmp pop pop add sub and xor out xchg push std ss lods imul push push sub stos repnz mov clc adc sub out cmp rorb add dec lock cmp inc decb push test scas dec xchg (bad) dec jle int3 sub xchg mov ret xchg dec lret adc xchg xchg mov cmpsb pop aam dec lret and outsb and cmp pop inc (bad) fdiv out jp pop inc mov push xor and or std push xor lret stc xchg xor aas inc pop xlat and insl movsl adc and divl data16 push sbb xchg mov idiv mov popa rorl lahf mov fwait rolb jl out jle sbb sbb cmc sub dec out into cmc mov cmp push jge lds dec and loope out cmp jae jp pop jp ret outsb mov mov push ja dec or mov popa inc xor cs mov jb add inc lahf das pop jno stc lcall shrl lret idiv xchg mov clc ret jmp mov leave dec test inc dec insb sub pusha mov outsb leave push mov jmp adc or sbb int3 xchg cmp lret ss jae fldt dec std xchg dec dec (bad) insb pop ja lahf cwtl popa jp mov pop mov jnp jb imul pop pop out imul push xor jnp push lea popf cli jmp das shrb ja test push clc mov cltd inc ss test push xchg aas lods mov fcomps icebp jbe pop push pop clc loope sbb hlt dec add mov xchg dec mov xlat jb mov inc cmp xlat xchg push shrb jno jp scas cmp mov fwait scas cmp mov fwait mov icebp in mov mov dec dec jb into push int3 pop leave push dec dec jp add xchg jl pop jg test sti push sbb aam jmp mov dec cmpsl leave pop dec outsb mov inc push out cli aad pop fcompl bound cmp mov lahf or cmpsb leave stc daa cmp into sbb cld pop pushf gs insb pop push sbb (bad) mull outsl cli mov jmp mov mov mov sti ljmp rcrl dec xchg sbb aaa sti dec ds popa call negl jp sbb xchg xchg cmp mov aad test fstpl mov jns mov bound mov adc data16 dec hlt xor push push sub lret pop xor fisubr test jmp ja imulb repz mov xchg int scas or in dec data16 jb jmp iret ljmp daa jne mov or pop (bad) cmp ds jle or fldenv and icebp inc mov jae ljmp cmp popf cmp or shlb sbb nop mov mulb or inc dec jb das stos jae clc jb jns mov ds mov and push imull jg inc lret sbb dec insl aad mov cs addr16 out cs xor cmpsb push cwtl fisubl js jb pop cs sub push xor fldenv mov pop ficompl (bad) push xchg imul add push (bad) in (bad) dec stc xor ljmp push dec repz sti add aad sti jns sub std inc cmp jle jmp leave add jp mov mov xor sub fidivrl scas xor cmp pop inc adc movsb inc loope and adc jb inc dec dec inc outsb push test (bad) dec sbb pop aas xchg or insb sub and dec inc dec sahf pop inc lods push lds aam or lods jno xchg shlb or sub sti push pop inc lcall jb dec push sbb inc sub xchg ds fisubr cmp pop cmp jl ja xchg add out mov jb mov aaa push cmp ss xor aaa mov stc push cmp adc movsb sub mov xchg ss add (bad) shrb pop test iret cmpsb inc outsl cmpsb loop push cmp add hlt ret popf addr16 dec mov aad and xchg xchg xchg jae cmpsb ficompl addl outsl cmp push aaa stos fucomip mov mov (bad) jp cmp sub sub push xor push pop ds aad dec mov cmpsb mov scas loop aad inc cmp and ret aas hlt cmp mov dec lret push jl inc pop cmp mov cmpsb inc xor mov rol pop insl add jmp movsl scas lods pop aaa rcl cmpsb xor out inc xchg adc out xor fisub leave insl mov clc test jnp call lods aaa adc inc out lcall push add (bad) xchg mov arpl inc push negl xor jno inc dec sti mov aaa pushl mov sub mov jno scas xchg sbb mov push (bad) jecxz std inc mov mov xor pusha push scas out xchg pop sbb imul jae movsb mov fs mov in sti sahf inc imul and bound cmp aad aas sar xor xchg push xchg fisubr sbb xor lcall fimull insb rolb mov mov gs ds pop fwait or add sti adc push xor ljmp jp or js insb insb fisub push xor out jmp sub push mov xchg mov outsl inc add lock popa add repnz mov stc popf xor cmp jae mov montmul cmpsb orb jno cmp repz inc or int3 repnz gs sti in bound scas mov movsb (bad) mov sbb int jae dec arpl out stos mov adc ficomp push cwtl ret dec out mov mov push sub adc adc push or (bad) mov test mov xor dec mov hlt cmp xor int inc fwait xchg dec xor lods ret push lock inc dec repnz jmp insb inc (bad) mov (bad) pusha daa mov sti cmc lds int outsl push dec and push sub and sbb out sahf or dec inc daa dec sti push push push inc cli jb cltd les dec push sarl popf hlt subl mov in in enter lahf ds pop dec mov xor lock aaa or pop test mov xchg mov (bad) lahf jmp cmp aad mov (bad) mov shrb mov xchg into aas inc or sub mov test repz xor xor cmpsb sti cltd sub (bad) leave incl iret ss mov aas jge mov sub dec lahf (bad) jae fldl2e scas out adc dec (bad) sbb mov popf negb mov mov pop pop jmp (bad) daa or adc mov mov daa aad leave mov mov sub push push xchg out mov int cmp lock xchg push es lock (bad) sub jo,pn jbe push cmp dec and cmp test xor enter dec xor jb sub push dec add in cmp cmpsb test clc addr16 sbb mov out leave jg mov fcompl pop xor add rep inc sbb jbe mov mov mov lahf or or fcomip dec add sbb andb clc dec fsubrp dec pop push xchg dec sbb aaa mov xchg cmp and scas adc add test das and inc stos mov dec dec lock sub les jns lcall mov sti push jg inc mov push sub pop and scas dec cmpsl inc add or cli jnp mov dec pop out mov test (bad) dec xchg sub lea push cmp or sahf dec push leave scas idivl ret lods orl pop mov aaa clc lret mov lret test rclb rclb push xor jb pop jae bound pop cmp mulb xchg leave inc dec sub fdivrl xorb mov testl pushf repnz movb xorb xchg ds sysret pop and gs lahf xor outsb cmpsb (bad) outsb popf imulb ss push dec scas xor cmp leave jle (bad) push popa stos jmp movb outsb mov xlat push sbb (bad) call out sub xchg pusha (bad) (bad) jecxz xchg lds (bad) cmp stos lods std (bad) sarl rolb sbb or pusha (bad) ret sub jg leave (bad) sub xor ret stos xchg js add sti popf dec ds (bad) bnd xorl jae leave inc pop jg adc sbb xchg stos (bad) jecxz push sbb not into adc outsl leave add (bad) js sbb xchg (bad) jle in or jp mov stos sbb push test (bad) fdivp into stos adc and inc mov lods sbb sbb out inc int cli push dec push daa (bad) push xor dec and mov and in mov inc pop aas xchg out pop repnz dec and xor or add inc inc and imul inc repnz push mov lret mov push jp jae sbbb sub pop outsb pop dec push (bad) out movsb dec xchg addr16 fucomp add dec lods out pand clc js out outsb jle mov movsb push fsubrs xchg inc sbb dec in ret mov add or adc scas mov pop mov mov add mov xchg xor cmp dec jo jl xor lock push (bad) add mov aaa pushf movsl cmc (bad) and mov ljmp mulb inc ljmp lahf pop aas mov mov mov (bad) outsb orl dec scas pop ljmp mov outsb mov stos xchg sbb (bad) outsb int3 loop dec (bad) js and jno mov push or mov mov movsl mov fcmove lret or inc mov cmc adc in int cld jp pop jnp pop xor push test (bad) cmp mov (bad) cli xor and pop inc sbb mov mov sahf notl sbb cwtl ret jmp scas cld je movsb divb push scas lcall and addr16 fwait nop out popa (bad) loope hlt (bad) lods stos inc mov cmp jno lahf mov addr16 (bad) shr arpl mov sub mov push dec push (bad) xor cli das lret mov in or inc arpl pop jb inc scas cmp loop jg add sub inc mov jp dec insl pop inc jns mov test cmp loop addr16 push enter jnp dec (bad) and mov stos rclb jl push cmp outsb push dec sti dec xor mov ljmp aaa inc out imul test das sub incb cmp stos or adc jo dec add mov inc leave mov and mov mov (bad) sub popf cmp mov cmp iret add mov jg ja in xchg lcall leave xchg sti add addl lods out dec sbb mov jle leave (bad) xchg pop ds push lret cmpsb jbe jo cmpsl adc scas andps or (bad) daa adc dec mov imul or cmpsb daa dec imul fcoms mov pop inc dec fdivs clc fnsave push std sbb inc push scas cmp mov sbb (bad) jp ss push cmp arpl mov fs and iret test push out out add and popf cmpsl popa add jb jno push cmpsl cmp mov or cmp push ret dec jp cmp sub test fwait aad xchg mov pop subl adc xlat outsb mov adc push out outsb push dec add pop cmp sbb lret xchg clc mov les cwtl shufps cmpsb jle and and dec dec lods dec jbe stc jl addr16 inc outsl inc and mov xor into lahf sarl lock mov xchg mov clc outsb jo cmp aad dec dec lret cmpsb dec add dec lcall xchg or in jbe into inc int mov dec mov mov iret pop aaa scas cmp adc movsb mov ljmp xor mov jcxz dec cmpl (bad) dec xor xchg cwtl dec sbb mov scas (bad) insb pop xlat jmp int sbb sbb test (bad) in push cmp fwait rcrb add stos lret push mov jbe into jae (bad) unpcklps push dec scas ja stc fsubr push jb mov (bad) addr16 cltd les hlt xchg movsl jmp add mov and pop outsl cmpsb xchg fstps xchg or psubd stos (bad) push push add xor push jnp pusha inc nop pop or xchg imul jbe pop loop test dec repnz leave mov jo test pop cmpsb xor pop mov pusha fisttp or sub arpl loopne incb add jb pop sub jbe xor push (bad) in pop inc (bad) push add iret pop xchg push pop cmp jb aaa dec push iret bound cmovns ljmp iret stos scas inc or add movsl cmp fsts xor leave mov or fdivl xchg sbb sbb jp lahf fwait imul sub clc imul stos pop sub xor or jl and inc jl and lea shrb xor cli sub jnp aad pushf inc loopne sbb xchg sti clc loopne or sub jb add mov and je or imul jp xor out das cmpsb inc dec push dec cmp insl inc aad loope xchg insl xchg mov cmp sub (bad) (bad) ss mov (bad) iret push pop cmp in jle loop pop mov lock push fs out jecxz pop sahf (bad) mov dec pop das cltd push mov pushf jns cld imul pop jl inc push fnstcw pushf dec ljmp outsb fcompl ds fs pop cmc ss pop nop inc mov push xor scas stc mov jb jb mov push sub pop fdivr insb mov jle bound test test push mov pop fidivrl xchg inc jo movsb pop repnz dec xchg lods fdivs cmpsl int3 das dec (bad) aaa das sub sub xchg loop lods mov sbb push insl cli scas cli dec leave insb cmc outsl inc and and dec fxch lock add pop jmp (bad) mov leave jb lea ret xor call dec mov pop into push sbb sti aas pop add cld sub iret addr16 rolb cli lret lret cmc aam out fiaddl daa sub cli jb jle lret jmp push sub ss xchg adc jo addl ret push insl addr16 push push dec lret pop mov inc jmp mov (bad) jg xchg add shrb adc inc cld inc xchg inc xor mov loope mov add pop dec lods subl inc outsb ret jge lods (bad) repnz xchg sub push cmpb aaa sub xor or adc and loop pop mov mov loope in ljmp dec test sbb enter mov xor insb mov pop loopne pushf sub sub leave rorb dec pop (bad) sbb scas mov mov dec fabs adc ss aam or pop xor push pop xchg lea adc xor (bad) dec imul xor idivb (bad) cmp sahf cmpsl (bad) push mov aam scas jl subb divl aad iret stc push or xor cmpsb sahf adc push es fldl cmp pushl les mov jb daa pop mov mov mov das sbb in (bad) dec mov (bad) jb dec fsubp xchg leave push aaa mov cmp aaa mov cmp pop (bad) bound (bad) dec sub cmp mul lods mov jae sub jl or push push inc cmp js xchg aam inc cmc xor xor pop fcoms push (bad) rcr inc mov scas xor pushf fldt ficoml or cmp cmovb ficom or test subb inc mov daa outsb ss or sbb sub insl pop test dec insb inc testl and mov out cmpsb mov mov popa fiaddl cmpsl cmp aad dec jbe mov dec test in dec push mov das inc lret jb enter xor aas xor xor lcall fcompl mov mov cs aas adc xchg xchg repz or data16 dec mov ja je push cmp inc cs out inc jmp outsb fdivl sbb or ljmp and cmp movsb adc jae cmp call lcall rol movsl pop adc addr16 (bad) outsl das or repz cld sbb clc jbe bound sub data16 sbb cmp jle pop pop cmpsb ja out inc push daa mov lcall loopne leave or int3 xorb lcall in enter sub sub cmp cmc je jp sahf cwtl dec cmp mov (bad) das fidivr xchg inc (bad) in fsubrl out xlat jle nop jecxz xlat or adc jbe push and jmp cmp jle negl (bad) add pop scas dec mov sub imul or cli addr16 push mov scas cwtl mov sub stos inc ljmp cmpsl push xor test dec inc push sbb or mov roll sahf andb in fistpll mov dec js into incb or push addr16 xchg xchg insb les cmp jle cs cmpl mov xor daa popa lahf or cli mov cmp aad (bad) fdivr insb insb jp adc cmp add sub aad scas jp ret lret lret pop or jo mov (bad) dec inc orb arpl dec xor (bad) inc les push jo sub and sbb cmc mov pop mov mov jp pop pop stc push daa mov jg lock add adc jle ds dec push adc imul mov add aas or (bad) leave out inc loopne dec xor ficompl outsl sub daa negl jnp xchg scas cmp mov daa (bad) enter dec lahf cmp call and dec (bad) (bad) aas pop pop (bad) in xor mov pop push adc and in sub push icebp pop push je and adc rclb push or leave mov in pop pop inc mov imul push and mov mov aad fldenv or jo push xor xchg (bad) push and call jge mov ds test jl push jle xor dec pop mov cmpsb idivl xor imul xor mov out mov dec jns incb jecxz push push fimul inc (bad) cmpsl rol push aad fisttp ret xchg push lock pop das or lea mov lods arpl xor bound mov add jo pop pop in push dec xor pop jb sbb sub mov xor inc add jae imul sub cs aad add out xchg xor sbb jp pushf cmc dec insb pop into out mov add fisubl mov mov fwait jp dec out sub sbb stc mov cmp das leave push fmuls mov out stc mov mov gs pop push fwait pop cli sarb sbb dec cmp stos sub pop cmp xorl mov jnp aam push leave lea jp imul fxch fs test das pop sbb enter cmpsl popa mov iret idivl or sbb stos inc loop sub add sub push aam push xchg mov rcrl fidivr mul test leave cmp popa cs adc fdiv sbb push inc xor dec dec jns xchg (bad) test fbstp stc (bad) std jo pop jns,pn jbe or int call aam inc pushf push ss not inc test xchg xchg data16 sbb inc movl cs jecxz sub ret cmpsl dec out jl jnp lea push ss xor dec clc sbb pop ljmp push pushf sub mov mov push test dec pop jp dec imul fidivrl rolb mov fbstp mov push jge push sub push (bad) addr16 sbb cmpsb xchg dec jne sbb shrl outsb push push outsl dec sub cmpsb jle mov sti mov xor mov movzwl dec pop imul dec mov outsl lcall push dec lret outsb dec dec jecxz es mov dec std cmp dec aad xchg enter daa or dec imul dec lock mov int inc loopne xor xchg mov sbb add mull inc sub ja jne mov fnstcw inc sub dec mov mov pushf xlat cltd sbb push mov stos jmp addb inc adc xchg lock dec mov scas loop out insb sub push xchg out inc rolb inc fdivl jl mov push xchg sbb ja,pt call imul (bad) jle fnstenv jl sub pusha lcall push mov sbb cmp daa in (bad) inc cs mov sbb int sbb (bad) lock (bad) jmp jl outsb leave inc mov mov inc and push add aas test cld mov imull dec xor addr16 ja inc inc push call dec cmpsb addr16 and js stc aas insl cmp cmp sbb fucomi into cmc sahf mov push mov das cmp xchg adc push paddw (bad) repnz mov sub div jb aaa or push lahf bnd push pop iret cmc jns aaa stc cmp jb pop cltd mov or cmp add adc pop ja xchg push mov neg rsqrtps (bad) mov xor jg data16 sub mov dec xor aad push repnz icebp pop cmp lret adc inc mov dec outsl dec dec push test add call daa mulb (bad) dec mov repz aam arpl mov jae int lds ret mov jns out aad or pop and mov sub jmp and out sub cmpsl fwait jae leave and add mov enter loope not call and pop dec pop js inc sub jb mov lds mov jb mov mov out jg mov jmp mov xchg pushf mov sub sub js push imull (bad) jae ds sbb ja sbb leave outsl sbb call or sub xchg fisubrl aas hlt and adc pushf dec inc cmp mov aad sub leave repz ja push sbb mov loop dec rep mov scas push jnp out inc adc (bad) xor out stos jno cmp int push mov loope imul notl (bad) and inc push (bad) ja aad div pop mov (bad) nop xchg mov divl push sahf xor jno inc (bad) mov xchg dec imul rep push mov lcall push add or (bad) cmp gs mov int3 push or push inc mov stos dec mov sti cld lock fisttpl inc inc scas neg lret xchg outsl push xor cltd jp sub dec int3 push test pop fsubs inc sbb rolb movsb cld fstpl xchg inc push popa sub out pop es sbb inc inc cs out aad aaa ds jns stc clc add aad arpl sub cmc ror mov sub call into adcl dec ror jbe or iret fisubl aad adc shlb push xor mov cltd xchg push cwtl test ljmp cmp pop sti (bad) lock cmp jno jbe dec sub imul lcall push std sbb mov push cmp xor or out push leave das das inc or pusha sti stos cmp and loopne xchg (bad) repz xlat cwtl lret pop pusha dec hlt outsl fisubrl in (bad) and pusha das cwtl adc push dec leave ljmp stos lea (bad) xor outsl jbe and je xchg xchg mov stos sbb sbb enter les leave out sub loop aam push fbstp ljmp or inc mov dec into int sbb pop pusha sub inc cmpsb or insl test and (bad) fisub es sbb stc adc mov dec lea push sahf sbb scas test jmp out inc and movsb xchg emms dec jo sub xchg xchg or (bad) insl sub ret out or cmpsl inc push xor xor push mov lret mov adc push roll in or mov imul sub push (bad) out cmp xchg mov pop pop push stos movsl mov xor pop lock bound dec imul (bad) outsl addr16 push fwait adc xchg shrb shlb push push mov stos or sarb jl mov xor mov bound arpl pop test ljmp (bad) inc fimull jne (bad) or inc outsb push repz sarl push punpckhbw (bad) xchg cmp int sbb scas popa sbb and loop flds aas daa cmp add (bad) cld sbb dec pop pop mov scas inc xchg xchg aaa dec fnstcw loop or cmc shrl sub test inc mov pop scas push jg scas lahf out and add ret mov in daa push fbld add bnd lret sbb out pop add inc dec sti mov int stc push mov dec stc mov push push xor xchg or push xor inc repnz or adc sarb cmpsb inc test push test sti dec inc xor and pop leave adc cmpsl dec ror jg jae ret movsl xchg sbb pop add add test mov bound insl dec loope loope (bad) add cmpsl mov gs sti cli push lea push inc mov push xor bound push and outsl imul xchg scas aad mov clc or mov jnp loope out mov jb (bad) push cmp pop sub (bad) xchg mov adc push lcall movl fcmove xor dec aas jae incb sub leave cwtl xchg add addr16 xchg (bad) sub mull data16 jle leave sbb cltd jmp ret or cmp (bad) (bad) leave xchg adc xor pop leave mov jae int cmpl mov ds mov mov lods adc pop inc xchg push or jle jae mov pop push test cmp jb stos (bad) popf sbb jnp push xor pop and movsl les xor das pop lret (bad) (bad) sub (bad) pop sbb out inc mov and cmp ds repz sub sub aaa (bad) and rcrl cld mov mov dec add in sub inc cmp cmp insb movsl pop mov ret cmp imul jp lods inc jmp repnz mov push cmp addr16 push movsb outsb std fwait iret (bad) addr16 dec mov dec dec sarl stc pop iret sub pushfw mov mov negb cli jecxz jle adc jno cmp data16 daa and insl out out fnstcw xor push (bad) daa dec leave cmpsb daa movsb mov mov in leave add mov mov lcall jnp cmp js adc sub clc jno in test stos outsb mov loopne mov cli (bad) mov ds and jle push jbe js outsl insl jb (bad) lods (bad) outsb jbe cmp bound mov xchg xor lcall mov (bad) mov pop mov outsb adc cmp cmp mov test or jle xor cltd out mov stos cmp cltd mov neg test xchg mov dec inc jns jnp iret incb cmp pop or sti ds vphadduwd mov xchg (bad) aad movsb (bad) leave es or push shlb sub (bad) cmp or jge dec pop mov or pop jle loope imul push inc or loope sub test sahf or jp hlt push push add push jge push (bad) in movsl push lcall test inc ja jb addr16 (bad) das dec out mov rolb mov dec xchg sub (bad) imull dec and add dec lcall xor inc stos in jno mov cmpsl inc dec cli (bad) pop pop pop dec cmpsl cmp sbb bound sahf push dec or loope mov cld mov push pop xor sub inc out adc jecxz push inc push dec push cmp xchg mov add xchg pop xchg push and cmp and lret xor pusha test push sbb pop test fs ds and into std int movaps mov je cmpsb pop xor jbe subl sbb aam cmpsl cmp and lods fs dec roll jg imul mov sahf push jno lcall cmp or xor mov idivb je or out dec aas cmp pop (bad) pop jb,pt sbb xor scas dec mov aas dec push xor jg bound jbe je lcall sbb push loope sub mov out inc push js test add inc jno sub std push fcomps cmp loop mov mov xchg stc std into rcrl or aas daa aad sbb dec pop xorb clc add movb sub ret jle xchg in ret jns (bad) or cmp jmp (bad) inc sbb and pop dec jb pop inc out mov out lea mov (bad) cmp lds push fwait mov sub sub lahf cld mov mov cltd push cli and cld (bad) repz pop int daa pop dec sbb cs xor pop inc into dec xchg xor sti ror cmp mov dec dec sbb push inc das jae aad scas out loop mov dec ljmp mov inc pop sbb stos enter arpl ss jecxz dec or lret mov ret ds sbb mov sub leave ss jnp mov xchg jg jmp inc cmp lods cmpsb iret xor fwait mov xchg ret and xor data16 aas ret pop es jno push leave lcall lods sahf shrb leave jb aas pusha (bad) jbe aam sub push sahf cmp cs xor imul js sbb cmpsb adc nopl movsb jl inc das arpl mov outsl xchg dec movsb int fist (bad) cmp pop cs aad pop pop mov mov lods shlb lods cmp add aas sub xchg lret loopne mov mov push lea pop jo cmp imul imul or xor sti in dec pop jae negl xor mov cmp and xchg inc mov rclb mov movsl popf pop sbb scas imul add add jmp xor and ljmp dec lahf addr16 (bad) xor cmpsb and pushf mov stos scas or push pop dec cmc cmpsl outsb dec aaa xor lcall push sub dec dec cli call dec cltd pop xchg sti ss in icebp dec std nop cvtps2pi and bound cmp and dec push sub in dec das sub sub data16 xchg mov add arpl mov push cmp and test dec push cmp inc mov aaa cmp mov push add imul xor jo xor aad jo mov cmp aad pop sbb fsts xor ds das pop je sub push mov cltd je push ret ss daa pusha bound test out push push cmp hlt lcall add repz mul pop test lock out sbb or pop pop js stc rcrl leave mov scas cmpw jge mov jns cmp leave cmpsl hlt dec ret xchg cmp insb aaa pop sahf out daa jo addr16 ds rolb (bad) dec out (bad) push aas in jg fisub pop iret pop int xchg enter aaa (bad) and mov xor dec into cltd xchg mov lods andl repz jne push pop and in addr16 aaa jbe and xchg je cmp (bad) icebp sti lock addr16 inc inc dec mov adc xor shll mov mov sbb sbb fwait repnz ljmp pop sub daa popf pusha or outsl (bad) fmuls pop jle xor or mov cmp xchg mov leave xor cmp cltd inc sub mov inc leave gs rcr mov xchg lods xchg xor icebp push jae loope mov mov xchg pop pop leave aam ss adc loope sub repz call dec test xchg cld jno mov sarl or adc leave into int outsb ret cs mov sbb mov xchg jl cli (bad) cmp xchg pop pop cmc xchg adc inc sub push adc dec in mov and or out mov movsl insb xor jne mov xor jmp mov iret pusha xor (bad) xor push aad sbb cmp pop sbb cmp pop sbb cmp ficomp pop imul sahf stos sbb cmpsb bound jo aaa inc push push pusha inc (bad) ja inc enter inc mov mov dec aas mov cmpsb xor mov fldt inc push and cmpsl sbb mov mov xor pop xlat insb dec pop jb test lock dec mov icebp repz jmp imul fnsave adc add mov fs cmp cli jp mov lock mov out mov ss pop leave popf bt out outsl dec push pop cmpsb inc jl pop mov cs mov cmpsl pushf dec jae sbb lods (bad) and xor fsubrl (bad) cmp push inc jp aaa (bad) xor lods mov mov mov aad daa loop daa mov inc fidivr popa sub xor dec insb xor (bad) xchg jg push leave dec push stc mov xor aad sub push sti lret cmpsl xchg leave repnz and jnp dec outsl (bad) es movsl mov mov jb imul jb sub (bad) stos aaa or jl dec inc jmpw cmp mov or pushf decb jae pop pop outsl jbe adcl insl add xchg pextrw inc arpl xor or and adc mov add push imul popa clc into mov push and ret imul push outsb fiaddl ss cmpsb insb fnstenv push mov int xchg arpl aad cli cmp (bad) test test dec es andl mov and pop std mov lahf cs inc sahf inc adc lea popf xchg inc repnz and roll clc jp in andb data16 jg cmpsb cli aaa mov and mov mov and rorl (bad) cltd dec into mov into dec sti ss cmpsb das rcrl fisubr fcmove add call out addr16 cli cld sbb (bad) aaa ret mov mov scas lahf cmpl fisubl jae in repz sahf jmp (bad) xchg and movsb dec popf data16 jno jno aad push bound mov xchg scas cmpsl sti (bad) aas pop sub ljmp loop add (bad) pushl jnp inc (bad) ljmp jp lds push pop fmull adc xchg aaa leave scas xchg xor ja stos ja loop or mov mov sbb dec lods aaa int dec and idivb sub pop das push out daa dec sub dec jb sbb xchg sub loope lcall push sbb lret dec and cmp aaa into and addr16 out bound sbb mov cmpsl jne jae xchg ljmp xor or (bad) dec pop add sub imull xor and ss sub popa lods shrl je sub into cmpsb repz aad pop push xor push out xchg or push and mov sbb pop dec test or mov das inc jbe cmp (bad) jae les ss incl dec (bad) out and fwait or stc inc aam insb and sti lods mov decl push lahf adc js or mov sbbl into jmp or sub cmpsl fdivs loope jle imul inc push ss nop jl ljmp xchg loopne add cmp push daa call pop pop or sbb ss rcrb sbb push fwait inc pop pop insl mov lahf pop sbb adc jle dec pop data16 mov sub push cli addl pop mov xchg lret push cmpl repnz jno mov dec sarb xor inc lcall xor cmc stos lods movb daa lods mov mov shl push into (bad) dec mov cs pop adc imul mov addr16 xor dec mov push daa pushf cmpsb lcall mov and xor sbb adc mov sbb mov and mov test add jp rcr sbb lds jle jmp sbb imul jp sub sbb ds (bad) add pop fisttpl jp cmp xchg sbb les fwait inc jae das lahf jmp push push add mov or xor push inc xor fwait mov add cld or incl mov sbb add (bad) cmp jns (bad) sbb test inc idivl xor inc xchg jb imul pop les add loope mov fwait xor lock mov cmp jae imul les add mov mov and pop xor cmp mov sub or inc push lcall cmp push lock jb lds (bad) sbb lods adc ret rolb pushf pusha pop test mov adc mov int push sub es dec push fldenv dec shrl mov inc daa icebp jmp insl sub test pop addr16 dec loop push pusha adc and pop es mov adc popf jbe sub cld mov push aas xor out cmp aam dec pop cs ss or repnz je roll jno cmp (bad) mov mov popa push dec sti rcl push sahf test imul pop call imul mov push gs pushaw jnp add jbe lea imul arpl dec cmp cmp inc ljmp popa xor scas (bad) mov out lods push scas xor cmp push cwtl push push pushf dec dec repnz and jl sbb loope,pn addr16 cli mov arpl cmp jecxz out out in inc stc icebp xchg push inc push xchg xchg daa jb pop sub je add sahf sti xorl inc mov ret cmpsb xchg push dec gs (bad) sbb cmpsb xchg addr16 arpl cld fsubrp aaa push dec sbb jp aaa test xchg std sti test cmc das stos scas into or pop shr out loope xor xchg pop pop repnz ljmp inc shrb pop repnz jge jne add push mov sti imul cwtl lock popa aaa testl imul mov fildl jns out add fcmovnu lds mov jmp (bad) pop adc mov push pop lret adc cmpsl gs mov inc les rcrb or popa cmp sub orl jb sub lods cmp ljmp fcomip je ss or cmp cmp sbbl popa es mov pop roll mov out or dec adc mov shll jmp xor adc jp push lcall movsb push xchg aad adcl (bad) jmp mov mov leave test je mov mov mov outsb mov ja pop pop pop mov mov call sub add sbb mov push popf jb in or fwait or pop dec insb outsl pop sub cmp fwait vxorps sbb push sti jb mov aam cmpsb mov inc cmp jo ja arpl shrb pop in and jge mov xor sub sbbb gs daa sbbl leave fnstenv jmp jecxz out sub stos push aad (bad) pop das ret dec sbb xlat dec mov andl lahf repz insl mov ret jb inc adc xchg pop scas insb nop mov mov imul orl jb subb loope cmp adc pushl dec adc mov int3 aad int3 mov repnz dec dec dec cmc aam sbb loope add dec test push std stos outsb negb insl cmp test mov pop sbb lcall or ret imul pop mov imull pop jb sbb sbb (bad) inc dec cs jbe and add int stos ret push push out cmp lods negl insl dec les add int sti add es ss inc push push xor push pop int xor cmc aam hlt push (bad) push mov cmp movsb mov int3 and xor emms sbb out dec jg dec pushf fs pop loope dec insb jnp xor mulb push lock dec add pop das (bad) inc xchg and push push mov push jae dec scas leave and inc inc std bound pop cmp pop sub or and not pop mov das push mov mov pop and sarl xchg adc xorl aaa popf outsb and dec leave sub les out cmp sub out xor stos mov scas sbb add mov stc pop dec leave loop adc inc in push pop and leave test push es xchg lahf cltd (bad) mov (bad) jnp ret adc in rcll xchg rclb in out inc pop loop fldln2 xchg inc aaa dec lahf stos les mov inc shll cmp mov lods popf push in imul cmp jne jnp es jle dec mov push sbb jp cli notb fimull (bad) jge and mov dec mov (bad) dec inc ret out and jb sbb jnp push mul dec mov pop dec mov (bad) and jbe aaa into push dec or xor enter dec ja aam or stos xchg mov mov push ret (bad) cmp xlat xor out repz imul roll or mov sbb xchg xor or (bad) sub xchg cmp push das out dec outsb add cmp (bad) stos push aaa (bad) out mov pop cwtl cmp std fsubrl dec (bad) mov scas movsl (bad) or jl rcr xchg sbb bound ds and das sbb jle dec dec jp jb shrb sbb xchg jb pop mov jb cmp dec (bad) pop outsb xchg dec add cmpsl mov aas mov jp mov outsl push mov insb daa dec xchg outsb (bad) dec fidivr cmpsb dec out xchg repnz cli mulb push int imul pop mov adc pushf or xor push xor mov push cmp lahf stc add mov xchg inc sub sub loope inc sub and adc and mov fdivr outsb fmuls in pushf scas cmc (bad) mov push adc xchg push mov dec and icebp loop adc fildll push stc mov lds cltd aas fsubrl loop shrb fsub pop in or sbb stos sti push (bad) leave and and fdivs sub push cs pop outsb sub in dec fs fcoml push push adc or imul jo daa sub sbb out pop mov cld mov pushw xor pop pop and test shrb or sbb mov inc dec das pop xor pop aas or lahf (bad) imul in iret inc adc xchg (bad) cmp sbb sbb leave pop and mov sub ret jl or dec dec imul jnp xchg mov and imul dec jae jmp movsb pop pop pop sbb inc jns adc add (bad) mov push pop subl imul test negl cs xchg or scas mov mov cltd inc jg xrelease arpl cmpsb sub dec add inc adc and daa jae pusha dec loop push stos inc testl pop out add dec add (bad) xor mov mov lahf int3 mov jg inc mov jmp stc leave pop cld aas ret mov cmpsb fsubl fwait pop add lret xchg imul jbe leave rcrb out and aad test jns sti jp ss mov stos jg leave mov aaa rclb addr16 (bad) clc ss dec aad dec stos cmp idivl inc sbb cs movsb fiaddl pop mov push jnp scas xchg xchg dec pop pop jmp xchg dec push xor mov push mov mov inc lcall daa rcrb int jg cmp sub in roll pop push bound out fldenv mov (bad) cmp mov cli daa aaa leave jmp iret cmpsb (bad) out scas xchg xchg mov adc ss push and idivl daa (bad) xor dec dec mov sub aaa leave dec lock int3 mov das stos cs aad es xchg push jne mov test inc aad (bad) js leave inc scas push push cmpsb jg jmp adc inc cmp and in (bad) icebp je mov lret imul (bad) fnstcw cmp mov push add cmp idivl lock xchg push pop inc into daa mov notl mov (bad) push sbb stos or inc jecxz pop daa xchg mov imul jb into pop lret cltd jb mov ss in scas sbb push mov xchg dec mov jecxz aad leave js jecxz xchg lfs push dec mov dec aam mov (bad) ja movb in sub pop (bad) mov imul jp mov (bad) imul mov test and dec movsl jns and push mov stos pusha int daa ss xchg imul popa sbb mov inc fwait (bad) div inc mov fidivrl xchg jecxz jbe out jmp xchg (bad) gs stos stc xor or jbe icebp xchg (bad) cltd jnp mov ja lods mov lcall lret bound into mov int3 add (bad) sbb adc pop pop daa fldcw or test inc add stc or sub push js aad lods push insb xchg insb test lahf jno mov cmp xchg lods scas lcall sbb cmpsb scas stc inc jp in faddl divb shlb lahf enter sub xor push xor pop push out jp lods sbb dec pusha movb pop pop cmp leave and adc fs loop or pop int3 loopne and mov jae jnp addr16 jb xchg add js pop push cmp xor jnp shl inc rcrl mov add cmp adc not adc stc icebp sahf add pop adc out hlt enter test aad jecxz pop (bad) idivl daa xor xor cmp jns jbe mov dec repnz outsb outsb mov sub js or xchg div lods or leave dec icebp cmp movl pop iret pop mov (bad) mov inc dec xor or xor lret xchg inc daa xchg mov inc lret pusha jnp icebp jae push sar xor jno mov movsb mov (bad) dec sub mov xlat dec sub shll (bad) ss mov push not push pop outsl popf enter clc and push push dec sub movsl out or lahf imul insb fs aad fwait or (bad) rorl push sbb cwtl jmp add push push push repz loope and (bad) in xchg jp cmp fidiv push sub mov jmp movsl lock xor movsl mov js add dec movsb into mov push sahf push cs sbb dec mov rcl jo cld in ficoml test dec (bad) jnp sbb leave fdivp ds jbe jbe stos sbb or pop pop int3 cmp inc dec mov out in cmpsb push inc xchg loop sbb and push call jo mull push inc nop test and inc notb inc and dec or inc inc sbb stc frstor out stos leave call lahf or (bad) gs add outsb ss ds xchg jl push cmp cwtl and ljmp push sub or inc movsb sub xor xchg test mov push add jb,pn mov cmp int3 pop adc mov aad leave inc sti pop outsb xor das insl test pop daa loope lds js cmp scas mov push test mov int3 into lds pop lahf std aas cmp mov inc aaa out mov and adc ret hlt pushf add popf xor sbb add cmp int xorl lods dec inc int3 push lock fbstp xchg sahf push sub inc push xchg push and stos dec pushf ret sub (bad) addr16 add xchg adc addl or push push aaa push pop shrb push lret inc adc data16 pushf xor inc cmp aaa push push push daa xlat call add xchg xor js or testb cmpsb mov cs xor cmpsl fisubrl (bad) (bad) dec push xchg insb mov push adc pushf aas ficom xchg jmp sub inc das sti add sahf aaa adc test ret subw (bad) push fistl ret inc sub jle or addr16 dec jnp mov and (bad) jge push aad ljmp js stos andps rclb push adc xchg mov cltd ljmp mov loope and daa cmp in push dec aad xchg in cmp push lret iret cmpsb rcrb stc lcall lret stos pop dec leave mov enter mov fistpl addr16 mov fnsave inc and sahf mov pop ds or push arpl hlt aaa out dec sub loop push pop jle sub pop xor jnp inc xchg mov and imul ss negb xchg push cmpsl and xchg xor jl mov sti adc adc pusha sub je dec or aam stos lret sarl leave mov adc mov scas jnp xor jbe lret push leave or fidivl pusha push mov data16 (bad) je ret push bound inc mov xchg notb int sub mov inc test and pop xchg mov and out lahf pop mov inc dec push xchg cmpsb (bad) (bad) xor shrl aas aaa inc adc ja or (bad) jo inc push jb sub adc ja inc inc xor push xchg lret dec push sub inc pop cli jbe loopne mov mov subb lret mov inc and outsb pusha das pop call xchg jns push pop (bad) sti jae push (bad) adc xor int cmpsb xor lea jne pop inc dec aaa mov (bad) aas push sahf lock dec lods jge dec lods aaa test aad cmpsl dec pop inc xchg mov std and rolb push test test dec push push or test loopne,pn (bad) sbb lahf mov dec inc push jp pop dec pop dec cmp push ss push mov inc (bad) cmp dec inc (bad) xor inc pop and jnp (bad) out jmp xchg push insl or int cs jp inc sub xor push mov xor cmp sbb or add pop lret pop push aad leave push adc mov insl mov aad dec pop scas imul out jp sarb pop das (bad) daa jb pop jb fs out cmpsl dec cmp pop stos sti xlat mov mov neg xchg push lahf or push faddl mov mov add xchg jmp pop push (bad) sub mov cli ds push fmuls xchg aas jne fidivl jmp push pop push dec mov pop cmp leave out cli jl inc lods imull faddl mov inc sbb orl repz xor fmuls loopne inc dec lods mull add fisubr or mov in aam mov loope (bad) pushf mov fiaddl outsb xchg push ds sbb leave jg insl or movsb pop xor pop jecxz iret xchg cmp (bad) jp jbe xor jp stos cmp cmpb push clc fcoml dec pop inc (bad) jbe xchg leave inc aam imul mov bound push mov dec aaa cs loop xor addr16 bnd jp test fdivrp (bad) decl and jmp iret pop xor out iret dec pop sahf xor xchg leave sbb iret mov xor jno push xchg pop or mov hlt push in inc sbb iret out and push xor or jecxz orb daa popf inc movsb lea and das adc adc jge scas leave push jb xor sbb aaa and arpl imul outsl jl test test test scas sub mov push add bound out sahf sarl xor lret mov and call test sbb shrl cld lods out cmp xchg scas pop sub mov mov (bad) inc call adc xchg mov sub push andl (bad) int dec lods xor inc adc aad mov pop xchg jbe testb lock xor je jo ds xlat pop and pushf das insl lret inc jno push es mov andl ljmp fdiv xchg es dec arpl or cmp dec cmp aam leave or mov mov sbb daa mov and rorb leave lock xchg mov push pop daa fs movsb pop mov xor popa push insl lods lds push jo push negl stc xor addr16 out loopne fiadd xor inc shrb mov inc pop (bad) cmp jb mov push sbb dec or bound sub push push mov xchg inc xor cmpsl sbb and mov and pop cld lahf xchg in lock inc xor add mov mov je scas aam cmpsl mov hlt or add xor pop pushf push xchg xor dec lcall ja and ret dec sbb sub int3 clc in fildll cmc idivl fwait push in pop sahf push jb std cmp es (bad) cli mov (bad) out add jbe aaa and call sti mov mov adc push and mov mov inc cld push push les rorl dec loopne ret xor cmpsb xor data16 outsl dec outsl imul dec jl lods stc jle xchg stc mov push aaa repnz sub xchg push sub mov int cmp leave mov dec pop into or in and jl iret insb scas add push adc jns cmp and test xchg push dec pop mov aaa push xor sbb mov sub xor dec push dec inc ss aad mov sub leave rcr mov push dec sti stc push cmc mov sub push roll bound imul dec pop cmpsw mov dec pop rcrb xchg mov jle cmp xchg adc ds push aam call xor or (bad) xchg push stos dec pop pop sti dec inc stos cmp lods dec (bad) jae (bad) fld ss jne add or sub cld push mov mov xorl and stos mov jb gs or jb test mov idivb leave std mov mov xor jge lret and in dec and cmp adc in lahf fwait sbb test je adc sbb je sub add test jne jno ror lock sub push and outsb and cwtl pusha pop scas or enter push or add inc and int out lcall movsb mov sbb or mov ja (bad) imull mov dec jb scas leave cmp xchg pushf insb xchg jp scas jbe mov pop int cld cmp xchg imull mov cmp je in mov pop and mov ret adc cmp mov in cmp adc sbb ds je cli jns dec lea cltd popa incb dec stos mov cmpsb fnstsw pop test (bad) movsb gs addr16 xchg stc iret sti addr16 inc jnp push cmp insb ja cmpsb imul pop jo movb xchg ret out cmp and push sub or sbb ja cli aaa std push cmp sbb push and cmp and (bad) xlat daa cmp nop nop add test pop xor leave ret inc mov cmp jmp push pop sub dec leave add jg add repnz mov dec cmpsb lcall ljmp popf jb int mov push adc inc cmp pop rcrb test jno fisubrl (bad) cmp mov lock sub pop ss cmp test lcall push mov xchg jne inc ds add xor pop jmp ret xchg nop jp mov xchg push mov push out dec enter leave push icebp push data16 xor (bad) orw mov iret and out cld jecxz test lods jb lods mov scas or sbb push out push ror push fmull (bad) fidivrl mov inc aaa dec adc daa mov roll push test mov sbb fildll dec push sti or mov sbb ja jge (bad) fldt mov (bad) (bad) icebp mov out daa or (bad) imul xor mov push sbb pop shll mov mov enter jnp data16 cmp adc aad repnz pusha sub or in loope pop bnd sbb sub add notb mov adc les push add test stc push jnp cmp cs iret shll mov sub int cmovbe cmp cmp push leave nop push xlat mov and mov pop sub sub aad xchg out sti ljmp mov dec cmp cmpsl mov imul xorl jp pop shll add inc lcall lcall cld xor sub (bad) xor sub cmc rorb aad push mov lods fdivp sbb push movsl pop fldt jp,pn imul sti andb sub xor clc xor call inc cli enter dec mov inc stos pop cmp test ds xchg js cwtl fs add ja dec cmp sub into pop test cmp fwait sbb jnp clc lods mov mov test sar lahf cs jecxz cld mov cltd leave out pop loop inc xor lods or xor mov pop push lret cmp jecxz mov sbb dec jnp imul fsts push pop mov push inc mov xchg sub cmp mov jmp cmpsb mov cmp mov fcmovu pop loop stc cmp add xor (bad) fwait lods outsl mov jp sbb nop mov ss outsl cmovp leave loop cmp pop cmp addr16 pop imul pop fwait cmp mov sti xor cmpsb add (bad) psrlw and inc bound enter mov jbe pop hlt sarl int sbb lahf xor (bad) ljmp dec mov cmp add leave or sub mov addr16 or mov imul outsl adc ds test add inc push push dec push mov jge (bad) xor lret sub adc scas dec ret xor adc bound xchg dec pop out mov jae mov mov loop inc test cli mov push inc lcall dec and jae stc aad mov std lock add inc test add jno xor jle cwtl xchg test adc push jnp (bad) lret in cmpsl xchg dec xchg pushf mov mov jl adc mov xor mov inc cmp out movsb or xchg scas test jg xor lahf cld jmp insb xchg adc mov faddl mov scas add scas mov push loopne jl adcb mov ss fiadd or xchg lds pop repz outsb test in pop add fs das aad or cs cmpsl mov cmp fdivrs cli sub mov arpl adc leave pop sbb lods pop add ds (bad) lock mov push decl sbb sub aaa dec and add ja pop (bad) cmp test mov cmp xor popa bound jmp jmp jnp outsl addr16 sub ret cli fdiv int setl pop (bad) jge call dec aad stos (bad) call xlat jae aaa lcall mov sbb push cmp pusha or dec or pop dec cmpsb inc sbb push ss fimul ret inc std cmp jge outsb test inc shrb xchg sbb aad jecxz dec addr16 inc imul test daa push mov daa int3 ja sub jecxz (bad) jp (bad) pop shrb and shll leave outsl (bad) in jo pop flds xchg data16 sub push jp inc and cli repz add cld fsubl psubd dec mov jb es imul cmp out int loope imul outsl jg xchg jp imul jl cltd inc pop pop push (bad) sbb imul pop add rolb or negl inc scas loope mov in pusha sarl lods out sub call dec sbb sti aad or (bad) jp xor loop sbbl (bad) dec xor aad adc dec pop call xor xor dec cs dec xor leave inc sub cmp jbe push subb pop mov xor insb fsts jnp daa jle cmp lods loope stos (bad) jb jge pop pop push nop cli es iret xor xor mov int3 xor pop xor andl xor inc xor mov add les sahf xchg int inc mov cmpsb or aaa imul (bad) xor scas ficompl test sub lcall push push fwait jbe jl mov adc add push jnp pop test jo lcall shrl orl lds adc jle xorb and xchg leave cwtl call lahf jae xchg test push shr xchg inc aad xor dec fistpl movsb mov lahf out push or repnz jns jnp jge sbbl jmp popa in ret pop add dec (bad) push jne fimull cmpsb fucomi inc add (bad) sahf and scas cmp negb les dec or jl xor rorb and mov push mov sub pop imul js nop jp std dec rorb int3 (bad) leave jbe pop xor repz or or sbb cmpsb cltd lret inc mov out adc aaa lret inc addr16 or inc mov pop pop int arpl sbb lock test pop jg mov neg aam sbb add add push mov pop xor ss test add mov std push scas jle adc test pop insl repnz (bad) divl out xor lea xchg and xchg ss (bad) (bad) pushf daa jg insb jne jecxz mov mov dec and xchg insl cmp dec ret or xchg or adc xchg leave adc in call push or aad add mov adc xlat mov push mov push fs je repz ds jl outsb fdivr pop inc notl sbb lret inc cmp xor stc or (bad) sbb mov dec push adc or das jl mov push in pop (bad) stos outsb loop daa xor (bad) jae jp and jns outsb aad clc and adc mov call jbe inc jo sahf std das sarb mov mov mov leave loop js loope imul xchg push adc aaa inc xor ljmp xor mov xor push out ficomp adc xchg dec xchg xchg insb andb mov push mov and add xchg lods lods mov add mov inc xor xchg loop scas sub push push std xor or jbe adc add xchg sub push xchg dec inc les push ds addl cmp ficom cmp xlat xchg leave pop push sub mov mov adc lcall fisubr push pop je call mov fild mov push adc inc std xchg addr16 sahf or mov sub mov sahf lock inc sbb inc cmp pop fdivr xchg cmp inc xchg int3 xchg outsl fadds pop push daa repz push cmpsb roll data16 adc xor and in fldt jg out out jne dec std mov adc pushf push cmpsb (bad) imul cltd lret xor pop loop push xor repz (bad) xchg cs enter sub fs aas pop addb sub push aaa fs jnp shrl xlat jge inc std imul lahf out xchg enter jbe icebp mov mov lahf (bad) dec xchg sbbb ja mov cmpsb sarl push jnp adc in mulb incl or push jo incb arpl dec arpl xor dec insb jg mov xchg or pop sub jg mov mov test sub test push mov out fnop push shll lret jg xchg leave push and xor scas mov loope xchg pusha (bad) jl aam ljmp push sub rorl out neg inc push (bad) insb in cmpsb jcxz (bad) lret sbb fwait push xor sub pusha ja adcl shlb imul lret (bad) cmp mov call sbb sar jl out add enter outsb cmp mov idivl into adc pop xchg cs pop test imul xchg pop cmp es mov ret sti push mov or jmp and scas loopne mov lahf mov jnp jl pop mov out jl cmp cmp jnp mov loop push lods sub pop xchg std call clc aaa (bad) and push ficompl mov rcrl or add andl stos test rolb aad (bad) idivb inc add jb add fdivrs push repz add jae cmp negl cwtl inc pop jmp rcrb scas decb xchg test aad aam aaa mov outsb in sti stc sub cli xchg pop fnstenv scas jle and test sub pop cmp into dec xchg (bad) sub adc adc and sbb lcall je pop addr16 sub pop adc mov sbb lahf pop sub fdivp pop aas int adc sbb push pop inc jge lcall mov out push iret pushl js sub jge add stos testl cld loop jge stos pop cmp or mov mov add ds push daa pop outsb adc negl inc xor sti and in dec sti aas scas ret sub gs mov jmp mov fisubrl pop lahf lods iret out or jl (bad) push test xor repz aad sti roll jbe dec enter or out dec out fsubrs rorb xchg dec or addr16 test insl cli or in pop lea push test jne xor repnz jo (bad) sub fcomi rolb test jb inc and xor dec int cwtl jb jg adc sub xlat sub mov scas fcoms sbb test mov (bad) arpl in and in fcmovb mov sbb dec dec inc fs fild enter dec mov push lahf testl enter (bad) fsubrl out scas loope dec xchg dec pop test mov jae push lret mov movsl mov movsb cmp dec (bad) mov aaa inc loopne mov cmp pop outsb aaa dec jg (bad) jb mov inc fsubrs cltd aaa add in dec fisubr mov xlat mov out mov daa movsb pop ja cmp dec push bound out cmp xchg xor jbe jg in mov std sbb (bad) call ret mov dec sarl add sti ljmp enter adc lahf daa sarb je xor adc bnd sub xchg add jmp arpl inc rorl std mov imul push sub gs insl lods and or aam jo xor jne push cmp pop sub dec (bad) ret int3 cli jo,pn and mov clc sub ret outsl pop in loopne inc icebp aam mov push cmp stc sbb sub push (bad) out fistpl sbb dec xchg mulb hlt test sub (bad) sub jno iret push test or sub mov stos push mov pop dec push dec scas xor jne stos or outsb pop inc push inc out dec outsb or mov mov mov push push pop pop bound pushw jb jp (bad) sub xchg lcall mov mov lret (bad) fcmovu sub out out repnz ljmp add or adc sbb sub daa sub xor cmp sub dec dec push push pop pop xor imul es xchg fwait lahf mov sub lret iret shrl xlat fcmovnu jecxz jmp repz sti add or adc sbb and sbb xor fbstp pop lret adc repnz stos push out out ret pop pop push inc repnz cmp inc mov int (bad) (bad) bound xlat repz adc dec jae idivl stos ja pop inc inc movsb sub jo mov dec out cmpsl sti out lret fstpt jecxz mov pop push inc dec ja arpl jb popw sbb dec pop inc add mov sub outsl jmp xor mov fbld lret mov mov jecxz (bad) std rep fndisi(8087 pop test js divl popf jecxz pop sub mov fidiv adc gs or into sbb jge not inc ficom mov mov mov mov push lahf add or cli (bad) fistl sub dec (bad) sarl fisubl sti or xor popa (bad) inc lret fmul mov and ret movsl mov mov inc dec sti adc mov (bad) mov je movsl sti inc scas sti ret stos icebp or jecxz fsubrs std dec clc roll rol mov cmpsb xor mov (bad) dec (bad) jb jp (bad) sahf (bad) loop js lret lret ja enter mov (bad) ficompl inc dec lcall lock out dec stos xlat nop popa mov xor out pop cltd pop loop dec aam ljmp sbb out outsl ja out mov fisubr stos cwtl pop addr16 jl test stos jae cmpsb push pop push les test jmp out add mov mov cmp mov pop stos cli push out and fs aaa cwtl lods mov push mulb (bad) or loop lock sub ljmp sub movsl leave lret pop mov add mov mov pop fildl fld sub sbb faddl or cltd mov std out aas jmp (bad) outsl popa mov gs inc jb nop imul add cmp push or cld scas popl jg je mov (bad) aas pop add lret xchg push mov in out sbb mov xor pop adc jno add (bad) xor shrb push (bad) std ss push add out lahf ret jns (bad) hlt xor sbb fdiv inc cmp pop stos xchg addr16 or jb jb mov mov das and sub jmp xor je,pt in push je cmp push ret cmpsb fistpl aad mov bound pop xlat cmp rorl push pop mov inc cmp dec xchg pusha inc push xor or data16 into enter dec (bad) xchg stc shlb dec push das cmp (bad) scas sub xor and xor pop cmpsb mov adc cs pop xor mov xor mov push jp or sahf jae cs xor insl sub push aaa xor xor cmp inc sub push push pop pop pusha sub jo js addb pushf mov mov mov enter fcomp loopne sub in lock clc cld add adc sub sub inc inc sub push push pop pop popa sub jno jns addl movsl sub mov int aad fucom in jmp std add sub push adc sbb and jl stos outsl push cs push stos idivl lret jae adc cmpsb lret ret inc jbe (bad) shrb pop sti lods dec or ss loop push xchg mov fstps dec rolb mov add pop arpl cmpsb push (bad) jae into jle sub ret js jmp or xlat aaa dec push mov lret aaa xlat pop or aas mov sbb (bad) push sub cmp inc inc aaa jmp or cmp push mul inc je xchg mov aas and ja mov cmpl sti push fildll jae dec (bad) dec pop cmpsb pop xor dec (bad) mov cmpsb test dec andl add jae stos inc xchg repz arpl sbb mov xor lock cs out enter and sti sarb push inc mov mov add sub repnz out fidiv push pop cmpsb xor xlat (bad) mov push xlat adc sbb lods xor inc iret lret jmp aaa push in or xchg mov push mov inc or jp lret and xor ja sarb stos cmpsb repz vmovhpd jo fwait xchg lock cmpsl cmp fisttp mov punpckhwd mov push cmpsl mov shrl das mov mov or fildl cld sti mov mov imul (bad) adc (bad) cmp adc push les addr16 push sbb movsl inc cmp fwait xchg push mov cmp jb lock repz ret stos add jmp cmpsl xor jb in add inc lcall ja dec xor cmp dec sti mov pop dec jmp orl out mov aam and mov mov repz mov (bad) jmp or repz mov dec dec mov mov lret sahf sub sbb int3 mov clc jg fsubrl jecxz mov (bad) xchg jp,pt out pop lahf jns mov dec mov jmp pop dec mov fisubrl into jmp cltd dec imull (bad) dec and lret fldt dec insb outsb pop (bad) dec mov ficompl into xchg ret sub inc cmp jl into xchg lret dec push aas push popa outsb inc enter or push sub imul repnz (bad) out ret pop sahf mov out insb xchg pop sub jp imulb icebp stos cmc scas (bad) dec mov xchg movsb mov out (bad) mov mov inc mov and or (bad) sbb sub dec dec cmp fdivs test dec pop jb mov xor inc cmpsb daa ss dec dec inc (bad) insb push repnz or cmpsl out outsb xchg dec xchg push scas daa aaa pop pop dec divb mov inc (bad) insb mov cmpsb aaa xchg xchg mov dec cmp aaa or dec jmp inc mov aaa mov imul insb or dec sub mov inc daa insb cmpsb out test cwtl mov inc xchg insb pop scas jp or lods inc lock cltd mov inc enter js cmp dec inc jb scas or cmp mov aaa daa jp leave ss sub ja dec xchg fbstp mov stos lret es js inc ss push mov ss xor cmp out addr16 pop xchg sub out add mov int3 cmpsl (bad) push mov jb out ss xchg mov ds pop mov sub sub xor xor clc xchg cmp movsl mov fwait mov dec addl mov add xor mov imul mov push lods xlat pop repz jbe cmp jbe pop xchg aad jbe inc push pop (bad) or inc inc xlat (bad) jle jbe cmp ret ss cwtl inc jnp mov mov sarb push sbb add std pop push jbe fsubp (bad) dec and add and adc pop daa lods pop das (bad) mov xchg das xor sub cmpsb add cmp mov mov lcall in adc xchg pop (bad) aam data16 or sbb xchg and (bad) call out pop push in sub pop push fsubrl inc or xchg inc cmp ja insb dec or inc adc mov sub pop scas (bad) xchg test loop inc push or pop inc ss iret xchg push popf and lret stos xchg sbbl pop aam test inc je cmp test aas mov dec data16 leave jno,pn jnp scas imull repz inc bound std push jge das sub iret xchg cld adc or sub sbb imul in inc or mov pop xchg ja sub popa dec pop pop stc (bad) std jns pop xor sbb lds pop sbb adc pop dec xor xor inc inc or jmp cmp cmp dec loope push pop inc pop cld arpl and cmp in sbb add inc movsb movsl loop add sub lcall repz pop out adc arpl rol mov fistpl cmp dec aaa jg outsl adc loop jecxz test xchg dec push mov and dec dec cmpsb dec pop fdiv pop lret push mov jle mov xchg jecxz cmpsb pop aaa mov push mov dec mov jle sub fsubrp push mov pusha sub and pop jnp jns,pt cwtl enter (bad) icebp pop loope insl jns push push xor inc mov xor out test xchg jge ret inc sub cld dec sub cmp (bad) xor pop sub jmpw push rcrl pop jg (bad) jmp aaa ja cmpsb jge clc inc and and xlat fucomip out dec cmp sub cmpsb sahf repz push stos out mov sub mov mov xchg daa jg in je adc pop pop sub push nop sub and jne icebp std push add ds mov test mov aas xchg dec cmp (bad) lret pop (bad) lcall fisubr outsb scas mov jae pop mov mov pop cwtl fstpt mov dec repz mov cmpsl iret out or mov (bad) out sub xchg pop mov aaa out call dec cmp cmp xchg call mov cmp add ljmp cmpsb push outsb addr16 out maskmovq sub inc mov mov sub and rorl dec (bad) pusha lock lods sub dec add mov cmp iret adc addr16 xchg shl jae (bad) movsb lods sub xor aam jno lds lcall or push aaa enter push out sub push push sub (bad) loop dec (bad) imul sub fs (bad) pop xchg shlb stc jmp xor aad xlat outsb cli sub mov xchg arpl push lods push sbbb outsl dec jmp jns inc pop test or sub cmp dec push mov aas into push add imul jnp lret jl (bad) (bad) pop lret mov pop xlat mov push repz int3 push out into dec or cs mov and subl or loop adc cmp jmp std sbb in jl pushf test arpl mov shl cld sahf xor cmp mov lods call outsb cmp insb xchg pusha es fcomps mulb cmpsb push imul mov outsb pop jb xchg outsl cs clc push pop pop movl cmp cs daa faddl and dec test fdivs sbb push dec xchg jl pop icebp flds (bad) insb cltd icebp sbb mov cmp mov pop sub notb sub mov jbe leave inc mov scas cwtl jp leave push mov sub mov dec ja out mov push outsb jmp jp test inc or in pop jp scas mov cmp insb cwtl dec mov inc cmp push cltd inc leave pop xchg jle mov sub adc divb sub cmp fild rolb outsb sub scas pop jae out pop xchg xchg jp jns stos push adcl xchg lahf cmpsb cmp pop fs fwait mov scas cmpsb imul data16 xchg sbb (bad) repz cmpsb stc mov add pop dec popa pop ja cmpsb mov add mov pop cmp dec daa push cmp xchg or fsubl imul daa leave mov dec dec lahf daa cmp push or pop and (bad) cmpsb dec sbb cmpsl mov dec test mov jno das jns cmpsb jmp cmp cmp (bad) imul imul xchg pop or xor rcll sub aam out sub pop dec lods dec lahf popa dec test sub in addr16 cmp loope addr16 loopne cmp in pop in pop jp dec ret (bad) inc pop daa mov lods push cs imul fnstenv mov add fxch mov fld popa dec aaa mov sub jb mov inc lahf insb imull dec or loop notb pop cmovle add fnstenv and loope or daa call in flds dec xchg (bad) cmp add leave scas adc scas dec out das mov inc imull enter dec (bad) jb scas (bad) lock scas dec aaa (bad) xlat dec js mov insb xchg scas leave cmpsb and inc xchg mov arpl fidivl and mov dec inc mov xchg mov leave sub lret sbb adc repnz test add jb stos jae out ret outsl rcll in lret jo scas sub sub nop xor sub int3 sub in cmc pop mov stc cmp inc mov aas imul pop pushf xchg mov cli mov lret jae daa mov and xor cld pop addr16 loope sub sub mov insb xor sub ds lock aaa xchg je cmp ficompl adc or aam dec mov or icebp cld mov imul and jo xchg mov ljmp fsts jae insb mov and sub dec xchg stos rorl addr16 cmpl xor mov leave out insl jne in sub mov (bad) cmp add mov lret add aad scas lods xor pop rorb enter sub add inc cs dec hlt push (bad) fcoms and xor xchg or out sub adc sub pop outsl and adc inc lods mov push icebp cltd sub es mov dec and sti inc push nop pushl imul pop or inc mov iret shrl lea xchg in (bad) out cld cwtl and and movups mov das xchg xor sub xchg cmpsb test sub or fsubrl test inc (bad) and xchg adc (bad) sbb sbb lods cmp std movsb mov inc mov jmp xlat lret jl iret sub fdivrp inc push pop shrb cld aad xchg (bad) xor push mov lds repnz leave adc movsb into xor lods cmp jnp xchg aas repnz (bad) test iret mov fsts push sub out js adc imul xchg mov pop ss pop bound lods ds in outsl test std pop mov sub je das xor pop add bound lods mov pop xor xchg sub jo push jae inc repz xor cmpsb jno sub stos jmp lods (bad) data16 mov jne movsb call xchg xor outsl cwtl bound mov loopne sahf sub imul cmp mov jno (bad) sub fstp out pop lcall dec stos sub mov lret outsb pusha mov pop jmp cmp adc push push mov aas ja adc or cs (bad) and xor mov sub mov (bad) (bad) cmp pushf xchg xchg shrl xchg fs xor sbb lret dec loope fldcw ss dec pusha cmp mov ret lea mov adc mov in sub nop out cwtl add loop cli add bound call sub dec lcall repz sub sub aam and and out dec sub push outsl insl out lock sub (bad) and (bad) dec lea rolb push stos sub adc lods sub daa jge out imul jge or fldcw mov xchg dec cmp ja inc pop sub andl mov or sub push mov insl dec pop sub jo dec dec mov xchg and mov ja sub loop jbe popa test (bad) dec pop push push shll scas xor arpl sub mov (bad) push jecxz shr sub stc enter or lahf push pop xchg rorl (bad) mov aaa cmpsb or mov pop je out or adc xchg out push ss icebp pop sub mov pop jle pop in leave sbb or ljmp sti (bad) adc xchg sbb mov mov decl adc imul aas ret inc gs out xor xor leave cltd pop xor dec lahf in je popa gs cwtl add sub add outsb das sub repnz xchg and add adc xlat (bad) mov or jo lock dec sti lret mov mov cmpsl addr16 leave sub scas xchg jbe sub xchg cmp sub aas call bound adc mov xchg lods inc cld in scas leave rol cmpsl push xor popf sub aas lcall dec sub sbb inc push stos and or sub shrb (bad) or fisttpl xchg mov inc pop out clc or int3 pop sbb shlb lds ja mov cs in add or push dec sub out push int cld lods pop dec xor mov pop pop adc es inc xor push push stos xchg push sbb xchg mov cli sbb pushf or cmp sub es inc dec xlat (bad) mov sub std jnp dec add into cli pusha out sub cltd inc test jg add inc and push inc xorl jecxz in xor mov and or pop ljmp mov sub jge mov mov call pushf xchg in sub sub mov inc xchg data16 push dec das inc add adc insl xchg sub add mov fnstenv sbb dec test mov mov sub bound cmp scas fs sbb add sub std or jg clc push xchg in and inc add (bad) or fldcw jne cmp ret dec inc cmpl gs pop pop pop out push cs add cmpsb (bad) mov sub push mov xchg push aas lods lea adc or ret insb mov insl stc movsl cmp out neg mov pop bound es push fwait sub dec jmp sub lods jecxz das inc cmpsb jbe xchg arpl movsl sub fwait aas repz (bad) cmp dec pop mov in cli jne std test fsubrs adc mov test dec rcrb fwait in sub cli add mov mov stos shr fldt inc pusha push cmp jnp ss stc mov out ss aas daa ljmp lcall gs and in jmp mov sub fiaddl insl stos (bad) dec sub fldcw (bad) or sub in outsl add xchg loope inc mov loop (bad) (bad) rol rolb subl xchg sbb loop scas bound (bad) lock xchg sahf in sub pop and inc out dec pop adc sub dec and fcoml icebp mov ds dec ss or mov aaa lds pop adc cvtpi2ps daa pop nop jg xor out pusha push or mov ds dec jo das daa scas dec bound xchg lods imulb inc sub xchg dec or mov sub out arpl jno enter mov xchg sub stos jg shll stos push addr16 jge sub mov jbe ss inc add or sub xor mov adc (bad) xchg jl inc aam mov jp xor inc call or frstor sub scas ljmp pop in lret (bad) add add fcomi push sub xchg mov test cmp jb cmpsl xor (bad) fwait mov sarl mov xchg adc lret fxch add and sub loop inc lods push sub dec ficoml and mov cs das mov cmp insb xor lods js fst je mov mov loop aam push jle mov pushf sub out sbb std gs arpl jae jle mov adc pop (bad) loopne inc stos icebp gs pop stc mov inc in mov mov adc in pop jnp fsubl jae xchg xchg fsubrs addr16 push fistpll and outsl mov (bad) xor cld pop sub or gs loope,pn sub push jne pop mov bound clc mov test bound pushw pop cmp push fwait dec repnz test inc lahf sub push aaa xlat aas or push adc inc in int3 aas ja pop (bad) (bad) adc imulb enter imul lret fucompp push lcall popf gs inc sub and push loope push or jae sahf xchg sub mov pusha bound pop lods sub outsb jl mov aas pop fildll ss int sbb sub stc jp lods inc jb sub in into pop cmp bound sub adc out repnz jb cmpsb jp loope pop jbe in inc cs adc push mov loope xor mov or xor sti cmp in cmp loopne add sub xchg mov dec mov cltd mov cmc jae sub shll sub jle sbb xchg cmp sub aam add ljmp inc sbb les iret ss or inc aas test movsl mov xchg mov xchg mov pop add test inc mul insl sub cmc sbb clc dec jle sub add (bad) mov ss push jp mov sti shrb stos sub xor vmovss adc iret inc aas lahf mov popf sub mov fistp xor pusha sbb std mov test sub jbe rorl cmp stos lcall lods mov ds add xchg cmpsl sub sub mov xor orl iret and push mov scas pop sub nop adc xchg insb push sub lea xchg in push hlt es pop sub sbb cmp mov jo sub add test jl fwait cmp aam out and insl inc fdivl push cmpsl outsl inc popf jg xchg les push sub repnz loopne out (bad) lret and cmpsb data16 pop in inc xchg and lahf mov mov mov sbb outsl mov mov imul jl aaa (bad) cmpsb dec xchg and jle jnp push jge cmpsl fisubr xor dec ljmp stos push xchg outsl movsl dec outsb lods mov sbb stos and mov stos sub pop addr16 pop jae dec lret add scas add mov xchg fdivl push ds dec xchg lahf hlt sub (bad) jne,pn mov and fsubs cltd dec cs cmpsl movsl fcompl cmp push mov enter out cwtl dec call jne push cli mov sub fldenv shrb jp insb dec xor dec mov inc xchg pop aaa inc dec dec inc jb mov out dec or xchg push inc js pop imul jp outsb js cmp mov js push sub imulb xchg dec jae cmpsl lret js xchg insb cmpsb scas out xchg out loopne jae out sub js dec push xor mov jb mov or les add insb test mov pop divb dec out dec test mov outsb sbb cmp (bad) mov addr16 mov sub xchg dec mov std xor insb cwtl scas sahf aaa sbb scas test leave cmc dec scas insb inc scas or (bad) or mov adc cmp push cmp js sub mov addr16 push xchg mov push and mov cmpsb sbb cmp cs decb rcrb mov ss dec imul jb mov inc call aaa push or xlat scas (bad) aaa mov dec xchg jb mov inc insb push scas aaa aaa pop out (bad) push out dec xchg sbb out jmp inc cltd insb imul dec mov adc outsl inc cmp and adc adc mov popf xor cmp dec cs movsl stos aas cs xor pop loopne leave addl push (bad) pop dec xchg stos mov mov jmp addr16 ja fldenv aaa daa leave push pop mov add push or js sub sahf jb mov shrb test cld jns cmc jb sarb push ljmp insb subb push imul pop jb popa int3 mov sahf sbb pop or mov push jae imul lods mov dec jnp xlat lcall jle imul inc mov aas in in test jae lds pop cs cmp xchg jl iret xchg aaa cwtl xorl push cmpsb shr jg outsl les mov cltd aaa inc inc jecxz rol cli mov xchg leave adc in fimull (bad) stos das cmp mov and dec mov mov sbb mov ds rorb ficompl sub add sub mov sub aaa je stos mov popf xor sarl or scas sub mov mov lods outsl fsts xchg xor pop cmp ss in stc push mov lret (bad) sub jge sub mov or das test mov loop,pn cmp imul push lods in int3 add push jns out pop ret testl imul push lret pop mov gs add mov xor pop cmp sub into jnp ss out icebp add imul push cmc sub test xlat add sub imul bound sti sub in xor pop movsb test repz addr16 mov add push sbbb pop ja sub push adc and sbb in int3 ljmp dec lock or sub fsubp stos sbb mov xchg imul sbb pop or sbb (bad) inc inc push jmp or pop sarl mov sub push les ljmp mov push rcr ss xor mov adc mov add dec fsubrl movsb es adc incb inc fwait mov sbb xchg pushf sub adc nop mov mov sub shr je push (bad) repnz les xor sub or add push imul mov push mov dec ljmp adc pop insb sub adc jns pop aad stc inc sub out clc mov test (bad) (bad) imulb aaa mov xchg fs xor sbb js aad popa or pop insb sub push movsl repnz sbb adc jno (bad) sbb ss mov (bad) std sub dec in jg ret sub movsl mov add in pop sub mov pop je pop xor ret mov xchg int popf mov or (bad) repz mov mov test stos push jae scas xchg inc xlat cltd inc loop imul sub mov inc and insl pop push insb sub pop sub sub pop fcomps mov fmull pop jb push fs push sub test mov ljmp or jg int3 repnz cs out mov arpl repz sub fldenv mov cmp sub pop ds out ja mov push movsl in out (bad) jae sahf sub rclb push les add cmp jle je sub mov mov inc hlt pop cltd and into je add outsb dec addr16 push enter js sub cmc add xor lcall or stos jg outsb sub data16 dec jl or aam sub (bad) orl call cmp push sti lret (bad) mov sub push pop das outsl add mov jl stc and (bad) daa jae mov cmp pop stos sbb inc pop mov add fmuls mov mov sub and jecxz outsl sub mov int and xchg inc sub mov jmp daa adc add ljmp dec mov mov push sub sti or pop rolb pop inc aaa sub bnd jl adc mov cmp sbb ja les add dec sahf xchg das xor cmpsl imull add fdivs lds aaa sub pop inc inc mov decb lock out sub cld shll sub mov js sub push jl dec shll push daa xchg das xor shll out fwait xor repnz jg jmp adc sub daa and jmp xchg jbe or fnstenv adc jns leave jmp flds inc dec pop sub cmpsl sub add push outsb sub fs rcrl xor andl sub mov out push jns int3 jg jl sbb xor mov or inc sbb lds daa cmp pop cmp sbb rorl dec pop cmp xor or or movsl mov popf (bad) push adc xchg loopne sub insl add pop adc pop pushf mov pop pusha (bad) mov icebp sub lret jle (bad) jo or lahf sub xor jge inc std pusha out imul outsl (bad) push pop lcall in inc daa test in jmp sub push cmp jmp xchg daa and sub jne pop insl xchg fimull decl jae pop add inc out negl iret push test test or cmp adc addr16 mov push jle arpl mov cmp popa data16 shll mov std loope ss push icebp inc rorb aaa sub daa addr16 (bad) pop ljmp jae (bad) or add in aas mov aad fildl rcl sub pop sub mov pop rclb inc jns lret xor pop jo stos loope rorb xor jmp ret sub sarl fsubrs hlt or inc sbb ljmp sub cld pop dec mov sbb xchg aaa dec lock cmp xchg xchg (bad) xor mov popa std iret jo or (bad) mov andl dec push mov xchg not pushf add in xlat mov test ljmp rclb adc inc add sbb jno imul xchg popa cmp daa rcrl fs mov lock inc bnd push test pop (bad) loop je jnp jp sub push sub mov ss mov out lahf outsl hlt dec sub (bad) out outsb in lods lock rcrl sub jecxz and movsl test sti shrb inc mov mov inc pop mov jmp add adc xor pop mov sub sub push (bad) push imul or in sub in sub dec or (bad) into cvtpi2ps mov scas (bad) jo stc sub xchg sar rcrl jmp push (bad) daa jnp gs pop jecxz jae sub pop sub or push ja cmp mov sub scas sbb ljmp sub pop jg lea outsb rcr mov out imul add jmp and adc push sub shlb sub int3 jp mov push ja dec dec insb adc jnp mov push mov add cs xlat sbb or ficomp inc scas je cmp sbb mov push loop bound mov hlt cmp add xor sub cmpsb sti dec pop lock xchg test mov mov fwait mov push out test (bad) imul (bad) out into sub or out call xor xor xor xor mov cmp es ret xor out int3 out inc jo adc testl sbb xchg dec mov jns pop call jbe cmpb sub (bad) or jg into cmp jle cli dec sar sbb xchg jae sbb push jecxz pop icebp jmp les int jge push aad lock fs daa lret repz aam mov outsb subl add pop ret std ds mov xor push les test push fiadd lock push mov sbb shlb add sub jne mov stc shrl sbb mov xchg lods ss mov mov shlb inc cs ret add je movsb mov jo,pn add cmpsl lods mov dec std dec leave dec sub shll jle iret mov jmp sub jb pop push pop mov sub xchg aaa sbb push jbe lret lea jmp lret mov fs cld cmpsl and fdivrs or jge insl pop pop push xor ss and les jle nop sub gs sub pop loopne test push std sub sub es fldcw and adc xchg cmpsb lret mov inc fdivs jne mov adc dec and lods xchg inc adc pop and rolb loopew aaa dec sub pop imul mov mov leave add fsts sub popa push sub sub loopne push mov push sub je sub mov daa stos sbb cmpsl fisubrl pop sub enter pop ret ficompl mov lds sub pushf repz inc cltd cli dec adc dec mov mov sub mov mov loopne data16 xlat gs or inc sahf add lea out jecxz mov inc cltd xchg scas aas lret sub cmpsl add and test movsl cmpsb (bad) xor mov mov in xchg cmp jp inc scas sbb pop or fnsave pop js push jmp push jp dec or scas pop fcomps popf fistl icebp sub dec jge adc arpl jecxz (bad) repnz imull in push mov fiadd (bad) xchg int3 jge jmp pop or sub ljmp data16 out call mov and push sub cwtl and cs jl ljmp (bad) push cmp out push cs xor lods sbb mov pop sbb mov and inc xchg test outsl mov cmp stos mov xchg xchg push inc outsb pop popf mov inc icebp dec sub xchg mov sub or clc aad xor data16 cld sub pusha mov inc sub hlt fcmovnb xchg cmp pop jo mov mov into jl adc inc cs iret cltd ret jns cmpsb das lods fisub cmp inc das push and fistpl loope and dec xor int3 das subl cmp (bad) adc push dec add paddb ret pop mov sbb pop fucomip pop out sbb divl js sbb sbb loopne insl fsubrl mov ret sbb sub xor in sub and mov out xchg cs mov push lods daa fisubrl pusha ljmp dec pop lcall adc rol cmp mov movsb fldt mov mov les dec out cmp adc mov sub cmp lret sub mov pushf adc mov mov icebp shlb jmp push sub fs xor inc adc mov sti cmpl les and cmpsl push (bad) mov scas jno iret pop sub pop hlt stc pop jo loop xchg inc dec sub addr16 lret dec add cmp push clc dec les or imul fwait lret (bad) mov add popa daa adc cmc push adc adc lds cs invd out xor sbb push mov ret xchg mov andl pop icebp xor mov out dec ss dec mov jmp xor popf cs lods cmpsl add inc scas jo jmp orb repnz sbb mov push in gs pop jb scas inc inc cs push cmc cmp sbb inc out or dec imul popf lods in fs xchg mov and mov out xor inc int sub sub push jbe pop add xchg adc push js push (bad) xor dec enter fneni(8087 pop icebp std int add sub cmp aad inc arpl and pop aaa dec pop out pop push movsl les jae (bad) sub fisubr and dec cwtl xor sahf mov rcl add dec (bad) or into pop out push punpckhbw ds aad sub hlt fdivs int3 adc inc in mov mov daa push jp adc xchg inc add cmp sub inc cmp and out sub scas sbb sub and mov jle,pt cmp sub inc enter (bad) je xchg sub gs lds imul pop jmp (bad) adc out jl int3 xor rorl sub inc (bad) hlt xor repnz (bad) jge sbb sub jmp or popa xchg mov stc and cs sbb sub stc sub xchg in ret nop add sahf insb pusha rclb sub in sub xor adc mov aaa push jmp cs icebp (bad) jnp out outsb sub pushf das enter les add adc rclb adc aas jp mov push stos add and daa xor scas xor repz enter fdivp push cld cmp loop sub pushf mov aaa inc dec inc jb dec (bad) (bad) jle mov loop add cmc push inc mov cmp loopne sbb out in sub pop outsb pusha xchg iret sub das scas cmp test push lcall aam push jecxz mov jp sub jmp jne jmp (bad) outsl imul xor insl adc sti lods iret sub xor add push clc in add sub xchg cmp in ds sub dec addl sbb loopne (bad) jnp cmpsl or ss jno add leave cwtl imul jb xchg popa mov pop adc pop add xchg add dec xchg mov and fstpl mov mov sub movsb xor cltd sub cmp xchg loopne stos and adc dec incb in data16 lahf fs or mov (bad) adc ja xchg sub jp fst push push stos xor (bad) mov fdiv lods xchg lcall xor sti cwtl jbe insb dec sub pushf sub dec adc mov rcrl cltd adc sub mov mov cmpsl sub fidivr das subl in inc xchg fsubrs call xchg push sbb inc mov push inc (bad) cld sub jl sub pop mov shrb push push hlt out dec sub dec add sub ret adc sub fisubl mov dec sbb jl in popa mov shrb ds xchg mov xlat and scas sub negl dec repz sub stc xchg lods cmpsl pushf push loope call loope (bad) lret pop nop ret sub cs roll or out xchg adc inc xchg scas cli lret sbb cs mov pop push divb in push cmp dec inc adc lods pop push cmp insl fbstp sbb cmpsb sbb cwtl les xchg ss aad mov mov dec and fs shl test imull cmp call adc xor aad adc jmp push repz fucomi icebp cs loopew ljmp sub sar xor and inc sbb pop sti iret (bad) call xchg aaa xchg out sbb jp pop outsb stos mov bound inc (bad) call mov dec xchg inc stc and adcb sub add adc std sub loopne enter outsb cmp sub add sbb stos pop adc aad mov sub jl cwtl scas out imul fiaddl add xor mov stc xor sbb test enter mov mov test pop jp sub sar cmp push inc jbe and or xor mov xchg pop int sarb ljmp sub sub fxch or add cmpsb (bad) sbb popf pop sub and outsb jmp lret jecxz cmpsl sub and imul fcom sub lcall inc dec add (bad) aaa jne mov iret in dec jle,pn inc and dec dec out sbb das or cmc mov push lds xchg outsl call cmp jp call sub dec ret add pop sbb outsl test loop push mov jecxz mov inc add pop pop (bad) shrl in mov mov push pop inc sub pusha and add int3 sbb dec sbb xor scas repnz inc test imul ja movsl daa ret add notl push sub (bad) cmp in mov push xor dec repz (bad) dec ja (bad) stc cld cmp sub in sbb add (bad) and adc push push pop sahf dec mov xor cli add push pop mov mov clc dec (bad) cs push xchg ror cmp movmskps push mov leave outsl jmp mov aam cmp fld and xor xchg sub mov mov test mov je lock lret rorb fild enter pop jb and mov mov xchg nop sub fbld sub das sbb jns and test mov in adc aas lcall and ja pop (bad) xchg jns jmp cld int3 lret test ret jecxz,pn mov stc dec push loopne,pn gs mov push out cwtl jp and xor jmp fucomp sti (bad) xor decl push cmpsb pop or pop jecxz,pn lods pop lahf stos movsb sub les lock cmp push sub inc in mov mov mov sub dec lea mov pop test out in sub push xchg cli je mov ds hlt sub popa sub ljmp test fcomps xor imul iret sub mov pop add pop jo sbb and fdivs jmp std dec sbb (bad) incb es sub addr16 sub jno cltd mov xor or jne mov inc sub test movsl (bad) xor shll add cltd sub mov insl ds pop xor sbb ds shlb out addr16 mov jmp or out push sub cwtl (bad) jno pusha push mov sbb push jbe add cmc cmovno sub pop mov hlt dec lcall or sub enter inc push es adc sub xchg cmp daa loopne push dec andl mov mov ret xchg mov dec push jne sub and push repnz push jbe jg fisubrl add test rorl sbb cmpsb inc imulb (bad) push cmc pop inc and out pop mov mov mov jg or and add jge (bad) pop and sbb sub dec test jb (bad) xor clc inc mov out jl jo pop in fistpll pop add mov cmp mov inc stos sbb insb jp daa sub iret adc jns sub xchg ss andb in dec and fildll mov cmp or cmp icebp inc and enter pop sbb mov cmp sub fldl xor mov xchg int pop pushf sub popf (bad) rcll dec test mov rcr fstpt xor enter sub jo xor subb or insl stos and mov cmp push dec inc test lds mov jmp adc shrl hlt clc (bad) sub in cs mov sub test dec sbb cltd stos (bad) xor xor and mov les push int3 frstor mov sub sub (bad) je xchg es adc lods mov or sahf sub mov sub fs addr16 xor mov leave add test sub cld add xor or test test outsl dec mov mov sub test mov sti (bad) lea sub push xchg imul jle sub or inc inc pop loop jne xor out push dec loopne lods lock lods jmp pop lahf iret adc or hlt push mov cltd out in push lds pop in sbb outsl mov ljmp and aas or xchg addr16 es cmp fnstcw xor xor xlat sbb test sub dec insl add call les xorl pop inc jo loopne fcomi and mov leave aam test (bad) or mov and add aad inc mov icebp sub inc nop rcll mov sbb (bad) popf pop es add adc inc lods imul jg adc ss popa mov fmul or out out imul mov ret push out pop pop mov int sbb mov add leave or shll push dec push dec sub mov sub movsb and sub out data16 stos xlat push dec cmpsb pop pop push ja cmpsl cld sub fdivl decb daa addr16 (bad) icebp push inc cltd jno (bad) mov stc daa xchg inc pop xchg mov iret dec xchg aas dec cmp push sub movsb xor in sbb add sub (bad) xor sar and push mov jge push mov mov mov xchg aam ljmp insb (bad) lahf add xor sbb in imul pop add (bad) pushf mov pop insl inc (bad) pop jns sbb mov mov push xor sbb sbb add mov test fucomip mov and ljmp sub test jns cmc idiv (bad) dec mov sub lret data16 dec mov movb push (bad) mov and mov (bad) stos lcall add inc fldt push ucomiss iret jge or and imul add sub out mov push adc push push outsl jge sub pop adc cmpsl ret cld rorl sub mov icebp push mov add mov js sub fstpt mov mov sub in lret (bad) and lcall scas test xchg add arpl nop adc and push sub out inc cmp daa lock in jmp mov mov sbb mov arpl inc (bad) mov sub imul xor out push daa mov out adc inc jae sub loop add (bad) loope lret dec jle (bad) mov add xor mov imul popa dec iret lcall xor push mov ljmp mov mov jp sti cmp aaa mov out and add daa sub jl dec jecxz mov insb movsb cmpsb stos (bad) aam dec jg cmp mov cmp mov bound mov sub push (bad) int3 inc or jb xchg pop sub aas or xor sub mov int3 inc lea sbb jne and jne xor xor xor sbb sub cli cmpsb push sub push mov rorl es cwtl mov test repz out icebp adc cs mov push adc add lock inc xchg cmp and pop test pop sub mov repz cs mov in out mov lea (bad) jb and pop or ds mov sub xchg outsb sbb cmp dec jl lea xchg mov xor ljmp lock leave jecxz jge enter jl or pop push sarl inc cmpsb sub dec sbb mov fdivl and sub (bad) jb push inc or dec repz dec lods lahf loope cs lcall das shr cwtl sub mov inc jo icebp mov mov fimul sti sub lods jmp movsb sub jne iret sbb or dec arpl ds int3 sub into pop les (bad) out (bad) (bad) add cmp sub lea jnp fs clc aad sub repnz (bad) lahf pop jmp sub jge fs dec lea cmp and cmpsl rolb lods mov loop push cmp int3 es test sub stos aaa scas sub pop add push dec repz or in adc xchg sub xor cmp dec cmpsb or scas leave cmpsl cmp cmpsl sub pop sbb mov (bad) enter sti scas and int3 sub mov out or cld dec sbb insl jb pop cmpsb mov call hlt inc mov insl adc aaa pop push xor sub fstpl mov shl and or jge push (bad) sub dec add loope mov outsl push mov mov dec cli cmp sub cmc sub mov sbb mov movsl jmp sub or out inc movl out daa sub add mov ja shrl jp test cmp movsl es js cmc or aas jg imul fisubrl adc clc mov mov out fsubs pop (bad) repz clc ds out ja or out cltd into jp (bad) cmc rcll test fwait pop idivb and ljmp cmpsb lcall decl xchg sub mov mov cs pop jne out jecxz lods mov arpl push fdivs bound xchg mov nop cmp and cmc push or lds leave mov sub push jl shr inc test aam ret sub or popf das and sub aas or cs mov repnz jp jb sub mov sub xor jo orl inc mov dec sub xor pop ss xchg push faddl or notl sub pop popf xchg mov inc sub push idiv sub add sub and dec sub pop mov jno insb scas cwtl stos sub mov xchg and jl lahf sub xchg jmp ss jecxz and jns sub repz pop lcall cltd test push fstl xor and test sub and mov ljmp scas sahf push cmp (bad) xor ret ss xor sub pushf dec imul sub or aaa cmp xchg mov add popf fisttpll mov imul mov jne out xchg roll (bad) daa mov mov xchg cltd sub sub dec notl adc xor fimull lods dec and loope outsl popa mov sub fldl2t cli loop xchg jae lock or xchg jbe int dec sarb ret data16 (bad) bound ja xor cmpsl or mov jl or xor arpl pop dec sbb pop xor cltd subl sub gs in sbb les ds outsl (bad) push add xchg pop inc mov jecxz jno jp push fstps or in ret and pop sub mov xor cmpsl daa pop ret fsts mov jne sub push sbb sbb xchg fild icebp sub dec (bad) inc imul (bad) adcb xor lods fsubl leave repz dec mul ja sub sub lcall dec subb cld rcll push cmc (bad) mov sub rclb xchg sub adc out and fldt sbb jmp cmc jb,pn in stc sub lcall push cmp cmp mov subb mov cmpsl and sub inc inc js adc rcrl (bad) pop jg dec sti mov test loopne sub pop clc std ret cmpsl mov xchg lcall fstpl adc scas or mov repnz aam cli insb sub adc or pusha ss jmp mov mov xchg xchg push lods dec mov mov test or pushl jge fidivl scas mov mov inc and sub jp xchg jmp jbe dec jnp lods sbb mov rorl jns inc out sub xchg imul pop jo fwait lods scas sub js ja mov daa sub xor fs or sub insb xchg int xor iret notl sub (bad) aas mov mov mov out xchg sbb imul sub data16 push fwait ret and mov mov mov pusha jo pop cltd jle push out xchg sub sbb nop loop movsl pop sub imul mov sub adc in and ljmp daa test jb cltd xor in mov adc dec jns pop sub push js cltd movsb sub fucomi mov lds int3 mov jnp push fadds xor inc dec or sarb sbb add mov loop (bad) je xor outsb sub inc xor mov ret mov sbb sahf cltd push and aas fldenv mov cld xchg sti lea cmp sub push or inc xchg jo jnp sbb das xor inc dec daa xor sub jns mov adc dec imul push jmp outsl (bad) cld cmpsl or mov mov jbe push sub pop imul (bad) push test bound xchg add xchg dec (bad) lea sub dec cli sub mov mov sub mov lods or loope imul mov sbb test sub sub jle pop iret xchg sub mov lcall sub or inc enter pop insl (bad) xor jnp lods mov xchg (bad) sub ret nop push lret pop jnp push pushf test jl push lahf xchg jp stc inc ficompl dec test xchg outsl xchg xor ret jge loope lret fwait rorb (bad) add outsb push jns mov cs dec jae jp (bad) xchg mov cmpsb sub call ds fildll js xchg adc mov popa mov (bad) xchg add pop jmp sarb icebp fdivl test mov neg daa inc imul xchg dec (bad) jecxz call cmp sbb adc fucomp in adc ljmp enter or mov jl push fidivrl or sub (bad) outsb and cld sub adc mov cmp inc movl sub push iret inc add or or lea (bad) cmpsl or sub loope mov push mov int addl sub cmp inc xchg fsubrs in in mov pop cmp add scas in xlat roll mov and push xchg adc mov es mov sub jae inc jb or call and xor sbb insb ss pop or shll xchg shr adc das icebp xor loopne sub mov rolb (bad) popf xchg fld cld lret sbb cmp insl mov lea sub cmp sbb pop jmp mov mov arpl sub add fcmovu andb into mov inc mov lret mov test inc mov and sub pop outsl scas cmpsl inc mov jns,pn xchg in sub neg adc inc scas cs push imul sbb fstpt dec daa test pop insl lods in loopne and push hlt cs test fldt fistpll pop fdiv gs sub adc add leave lcall sbb add sub rolb mov dec cltd pop cmp cmp xor (bad) negb push or jne mov rcll test push xor dec lret jge int3 in fsubrl sub lahf mov push scas xchg push pop pop push sub inc add das mov lcall or int3 mov stos and and dec or sub jl push lock pushf cs (bad) or push mov cmpsb mov arpl mov andl hlt loope sub push sub mov xchg scas sub pop lock jae mov xchg test mov das data16 imul push jp sub jo jns loope mov fisub lods aam mov fs lahf sbb sub dec xchg cmc jo scas pop bound popa inc and dec test loope in fsubp fmuls cmp mov rcl xor fistl mov aas jmp ja sub mov shlb mov sbb and not pop mov mov fimul sub and xchg or mov cmp push addr16 imul jns les and movsl std mov aad adc (bad) outsb pop popa arpl mov rcll lahf rol sbb sub inc jno mov scas rclb sub mov lea stc and imul cmpsl rorb (bad) jbe outsl pop (bad) jmp cs imul test mov mov sub dec shlb push xchg out out mov loope dec daa rorl ds jmp in push sub sbb sub lcall sub std int3 or cs xchg aas cltd mov and into jp loopne pop push pop insl fidivr jg xchg xor imul sub imul jb fnsave movsb sub (bad) fsubr xor lret (bad) mov movsl fsubrs push mov cs lcall (bad) (bad) data16 lods push pop sbb repz rcl idiv incl jge fnop bound sub (bad) cmpsl and dec in pop orl mov shlb into orb or fidivr mov ja sub pop hlt insl movsl ds vmovaps insb out mov outsb sub clc sbb in cmc aad mov sub jb cmp mov (bad) (bad) sub (bad) xor sub sub lcall xor sub push stos xchg xor out fucomi das test mov xor cmpsl lds cmp repz inc scas cmpsl cmp sar xor sti and mov das cltd cs xchg cwtl mov (bad) jl cld out pushf sub call sarl push (bad) hlt fldenv pop imul mov push sub or push xchg (bad) pop icebp xlat sbb cli popf sub xchg add out arpl das dec sbbb icebp push jg mov lret aad dec dec sub insl bound mov sub sub gs mov repz sub cli lret inc pop jne and insb ss inc or arpl sub repz loope lock sahf push in sub push mov ljmp arpl jae dec insb jno jns cltd pop sub enter mov add mov lods std dec sahf mov pop fcompl cmpsb adc mov pushf dec shrb es add xor sbb adc lds mov sub adc sub fprem gs cmc cmp call sub xchg xor push pushf cmpsl sub mov pop repnz sahf lock leave xchg rcrb adc (bad) mov test and clc cmp ss addl mov sub das popf and push rorl xor loope xchg dec mov sub inc pushf stos fnstenv sub push mov je stc or rolb cmpsb inc aam sahf test call jl in mov cltd lods bound sub push adc add xlat into fidivr mov (bad) ss out cmovbe jmp inc data16 mov sahf in sub out dec pop xchg movsl sub jmp cs fcoms mov sbb pop adc data16 or jno inc fucomip pop cwtl sub je xchg inc addl cmpsb push mov mov mov or movsb daa or pop sub xchg cmp mov dec call imul popa mov (bad) testb jle hlt push lods incl mov xor imul int call cld push getsec and inc sub jecxz mov push test into lods aas sub mov faddp clc fisttp loope ret sub or cli int3 in jl pop js orl lahf bound pop inc nop mov int add in jae iret jns jl push mov shll sbb ljmp stos xor adc daa (bad) int faddp mov test adc icebp imull xchg (bad) adc inc out lea lcall and sbb mov std pop out dec ja or xor bound sub pop pop mov sub jecxz outsb mov adc pushf xor bound add push aaa jge call jns jp rcrl out test mov ljmp xchg loopne ficompl in repnz lret pop mov jmp cmpsb out sub adc flds xchg in ljmp addl dec orb add rorb xor aaa jb inc addl stos ljmp ljmp outsl ds and or sbb sti dec push (bad) imull lcall dec sub ret mov aam dec dec sub cmp data16 inc add inc fcompl or xor in cltd test inc fwait xor in sub or fmulp adc mov dec xchg xor jbe lahf cmp and mov popf pop add fistl sub sub jne pop cmp dec mov sub push mov sub mov lret dec and iret in stc stos push cmp or add aam notb xor (bad) xor mov aaa and cs outsl scas sbb in pushl aas lcall repz xchg mov xor cs fcoms shrb test lahf adc or sti jg mov push xor xor (bad) out push lods jae lock std lods aas clc cs inc xorl addr16 xchg or fsubrl daa bound (bad) jmp sub xchg dec cmp push ja movsl in mov and rorb test dec adc sbb stos addb xor cmp notl incb in adc and mov sbb rcll in mov (bad) loope sub dec sub aam pop inc dec jp je mov (bad) leave xchg lea add jmp xlat xor mov pop out push arpl call lgs xchg cs sbb lret sti inc or sub stc rclb sub test cs jo test or cmpsl std fisub in loope lods cmp orl sub sbb pop stos push mov fnstcw mov mov aaa sub xor jb adc cmc popa test stos rorl lods pushw fstpl outsl dec sub out mov scas adc mov in test sti lds push push adc xor sub dec imull sub imul sbb cmp xor lahf jnp inc mov hlt in mov xor jns popf scas adc aas jg sbb mov mov repnz (bad) xlat pop fs push push pop sub mov jge xchg or test sbb and sub in fistp xchg inc or scas mov das ds repz cld xchg cmpsl add sub fs sub push (bad) adc mov pop ret (bad) lea cld push mov push jbe mov lret lret sbb scas inc lods daa and xchg sub cmc ljmp xchg stos sbb popf mov popa out aaa roll lods dec mov (bad) pop imul scas sub mov cvtpi2ps adc out inc jg out dec add lea sub (bad) sbb adc push sub mov movsl outsl sub sbb mov or or cwtl xchg inc pop lea pop push ficomp lret mov call pop ss adc mov popw push (bad) jmp cmpsb mov sub adc iret jo adc sub xlat lds sbb clc xchg xor insb lods insl dec aad xchg cs std decb out pusha or jp cld add (bad) sub pop xchg adc jo pusha add pop fucomip test sbb sahf pop out xchg popa sub sub mov and mov mov sub imul mov (bad) pop mov fsubrp xchg into xor push cwtl lret xor add ret inc pop lods jmp dec jl sbb mov sbb pop cmc jg mov loope cld xchg fnstcw mov inc ds negl xor rorl iret and imul mov mov sub data16 repz rorl sbb clc push push adc xchg adc cs push mov bound cltd dec sbb xchg fistl gs sub xchg cwtl lret out sub xlat aad js lcall call xor movb fsubrs jae and iret sub dec cmp sub int3 jno (bad) mov loopne sahf ficom push test bound xor in icebp repnz xchg jno aad outsl xlat sub sbb dec out inc cs in dec test dec pop outsb lds and mov je movsb pusha fsubrs xchg push xchg gs jnp sub mov sub pop xchg ds xchg sub or mov sub inc mov sub mov out fldcw out cmp in inc mov cmp sti xor sbb leave addl lock jecxz test mov sub popa xchg insl sub ficompl data16 cmp mov dec mov add mov cli dec mov and xchg test mov push mov out (bad) aas test inc sub test in dec xor loopne dec sbb out aaa test rclb mov add js int xchg xchg adcl sub orl je rol enter daa jle mov inc movsl inc mov iret jns jne lcall xor or mov aad pushf mov (bad) mov outsb (bad) mov adc insb pop push sub push out sub mov cmp dec sub out sbbl push add je (bad) mov jmp sub enter sub push adc jecxz movsb test jne xchg sub push jo mov std iret adc push sub or pop mov sub xor bound rorl sbb push cmpsl ss cs into xor xor rorl mov push cld test jmp inc mov pop pop dec sub xor jg imul or shl dec jge jns sub sbb enter dec call sub jae ss loop aad fiaddl hlt stc cmpsb and jns cmp imul pop daa notb sbb mov call rcll lret (bad) dec testb imul mov ficom cmp push pop push xor out (bad) ljmp bound or test fmull push xchg inc (bad) cmp cmpsl and xor mov mov pop mov ret (bad) xlat or jbe sub gs inc push sbb out jbe pop (bad) pop (bad) xor fcomps lea adc lret mov inc jb cmc push test dec test (bad) flds mov mov cmpsl sub mov hlt xlat add xchg ss js mov test movsb out mov jle (bad) idiv subb vpsubusb sub aas mov sub jbe cmpsl out in fsubrp jp and aaa sub cltd mov xchg shrl mov out jmp and dec dec push scas sbb or out cltd sub jb je pop clc sbb loope jecxz stos inc mov js pop sub mov dec cmpb arpl rcr mov cmp imul sub xor push push stc dec pop adc sbb or dec ret sub mov mov (bad) dec xorl (bad) nop cli mov aaa lcall js and inc data16 lds ljmp ret inc mov arpl cmp movsb scas sub out fsubrl sub loope shr (bad) fidivr push mov sub cmpsl arpl ficompl cmp aaa push sub rcrb inc mov clc mulb jb aam cs (bad) repnz sub test fisubr xchg xchg jle fcompl or enter test jns push pop insb inc mov push mov negl inc push aam sub lea sub mov cs out cli imul jne arpl sub xor inc lea sub aam lds (bad) lcall push aad stos mov jl iret scas popa and lock pop sub inc sub jnp push dec decl adc sub (bad) xor adc shrl imul jbe out pop mov das add les or fisubrl stc push jbe loopne leave sub adc data16 and pop inc cmpsl test pop jo xor add sub out sbb sub xchg in mov das mov sbb insl nop mov cmp stc inc sub jge fwait push stos xlat pop decb jb fisubrl out add test leave push sub dec push popf (bad) lret mov cmp jge test cmp xor subl add add ss jmp push sub leave pushf sub xchg shrb dec icebp jbe scas sbb jle cmp (bad) push push xor xor (bad) insb fldl daa mov lcall sub nop imul mov (bad) scas push sub test dec orl out hlt inc sbb cltd lds add mov add sub and push mov sub xchg mov push ljmp scas jns inc pop push ss push sbb cmpsl stos ret sub push pop shrb fwait callw jmp int (bad) cmpsl imul sub int3 outsl push push cld cmp test mov mov jno cmp xlat sti xor xor in sbb jmp or mov daa adc (bad) sub cmp sub or dec sub and and fucomip jns sub test sub scas pop aad jne push pop in ja bound (bad) fldl pop inc jbe mov inc int3 lcall push jge stos and sbb pop inc mov cltd mov sub jge das xchg (bad) xchg andl xor or (bad) cmpsl or or cmp aas cs push xchg xchg jecxz imul mov cltd sub ret add sub push dec mov ds pop outsb cs sub and cwtl mov jmp xor dec xlat adc ss or loope pop sub xor (bad) sub stos js (bad) iret pushf cmpsl xchg cmpsb and movsb mov sub cs cmp mov add pop imul mov jg or xor cwtl inc nop enter sub inc xor sub js ds lret aad fisttpl cs mov xchg adc es cmp inc jo ds imul imul int adc lods dec cmp mov jno sbb and inc leave mov loope daa adc add out les mov cmp jmp sub mov jne xlat sbb lods sub std inc and mov stc stc dec jno push mov (bad) cmpsb mov mov pop cmp mov cmpsl push aaa or hlt pop jo lock je enter xchg test pop xor inc or std sub inc mov pusha (bad) or or dec add sub daa movsb hlt dec (bad) (bad) out mov xchg scas or stc aam adc (bad) xor mov in enter sub mov pusha jecxz daa cmp xorb jo sub jp cmpsb jmp bound cmp sub pop out inc lcall (bad) repz clc ret sub inc inc fimul rcrb pop scas test int3 dec sbb sub push loop sub mov mov das adc shrl stos enter pop out xchg (bad) mov jbe cmp pop dec xor mov jl sub cmp push cs (bad) fcompl test sbb dec ds insb sub xchg sub movb cs cs push pop cmp sub push idiv mov or push lock sub sub movsl and dec js mov or and (bad) cmp in xchg cli fimull insb shll hlt test mov bound jge lea cmpsb sub mov mov jo js jns jmp (bad) ja xchg jne aas mov xlat nopl fs test sbb jae js mov cmp stos fisubr jb inc pop add mov fwait jne (bad) or ja or fist sub jne mov mov mov rcrl mov int inc daa adc adc or push stos daa inc test adc mov mov dec fidivl repnz fstpl sub and hlt loop das sub jg dec mov leave xchg cmp cmp test outsl imulb jmp (bad) add xor call mov pop pop cmpsb cmc dec sbb jae mov fcomps sbb scas mov cs lods sbb mov xor insb test cmpsl (bad) push sbb scas sub sub in dec mov les repz xchg mov dec sbb pop popf or jg fwait cld lret pop or push inc push push mov dec jge bound cli push arpl xor inc mov add sub mov (bad) pop inc or mov jmp mov sub test add ja stos popf jae popf push and xor stc repz hlt xchg jp,pn mov loop cmpsb movsb ja cwtl mov rep lea jb sti inc sub cli data16 add dec fstps mov mov xor loopne mov popa stos dec sahf pop in sub jbe scas fcomps call stos fs mov pushf dec sti andnps subl fsubrs sub fidiv out push sub push jmp adc push inc cmp stos fwait push cli add shlb sub rorl inc xchg mov fucom out das sbb jmp (bad) jle fwait or adc mov orb jecxz cmpl icebp push (bad) add sub sarl fdivrl stos sub dec push (bad) notb sub mov loopne lods mov rcll out mov sub add (bad) inc pop pusha jbe push jl aas jno and push jp in scas push sub and cmp and jbe loope bound movsl mov in je pop cmpsl mov loop sti cmpsl or sub xor push dec sub or cmp pop aas sub out cld addr16 jae pusha push daa push push adc push in ficompl iret xchg aam movsb daa (bad) das sub xchg cmp push stc mov sub push sub dec orl fxch sub push or push sub and shrl loope cmp push stc dec fdivrl (bad) cmc ss dec sub xchg shrb sub scas sbb fisubr pop dec mov xor sbb insb sub xor js dec pop mov aam dec push sahf fidivr mov add fisubrl push xor xlat sbb sub jb mov call mov sbb cs test add add sub les dec or inc test movsb mov cmpsb adc sub orl mov int3 sub adc (bad) stc sub sahf test (bad) out lea dec adc loope sub push dec xlat push js cmc or jne push int3 scas cwtl test bound jg add imul inc inc dec cmc fcomp xor pop ja xchg inc lahf sub iret cli aas mov out es dec mov cwtl in adc ss jb push and sub mov fldt jmp addr16 xor stc cmp and pop ljmp or clc mov sub loop fucomi jno fiaddl bound int3 mov mov cvtpi2ps hlt aam push xchg mov out or mov fwait xor cmpsb pop imull aaa gs add inc mov fldt popa imul and cmp push jecxz out inc inc xchg fcoml pop xchg sub fisub lods sub or std sub gs aad enter (bad) fildll push push pop imul inc mov ss iret mov jb and sahf xchg jae pop cs xchg sti call or (bad) (bad) mov add popf jmp (bad) mov adcl int xor movsb mov pop test mov cld push dec test inc push push hlt xor jmp inc fidivl push add test sub adc repnz test sub mulb pop jns sub push lds test mov pop jp jo xchg xor cmpsb fdiv sbb pop sub daa dec and scas jns push and push inc inc add push push aam sbb inc addr16 jno fcomi call sub ror out test rcll bound mov lods mov dec sbb push sbbl sub ret mov out test andb inc mov sub fdivl pop (bad) dec mov pop insb jno push test fs movsl add adc movsb and jns out int3 and mov jmp push inc pop dec repnz icebp cmc dec sbb and pop jne out sub inc mov sub sub sub pop jae je push sub fwait mov sub mov cmp je jno jge lret addr16 xchg adc imulb mov lods adc push stc std out sub and push push xor or bound mov das ss or ret or bound (bad) mov jbe pushf sbb ss and nop lods imul lahf hlt enter lcall fsubl jae jo insb fsubr jge,pn iret imul jecxz sbb mov mov xor addl mov cmp inc (bad) divl fldenv pop mov (bad) push cmp sbb lahf fs imul lods mov sub sbb sbb inc mov adc cmpsl mov xchg jne cmp add pop mov push dec sub fs and enter test pop ljmp jl xchg cs push loop cs dec xchg sub aad (bad) loop cli sub and sub mov sti jp cmp ret out sub push adc push (bad) int cwtl sub cmp pop lcall add aad sub inc cmp inc xor and js jmp pop sub add and fdivrp push sbb and xchg xchg pop popf cmp outsl pop mov sbb test sub mov int push push test fs sub or pushf fxtract sub aaa adc lcall lds xlat ss mov stos shr ss xor (bad) mov push popa adc sub mov aad test adc or jne mov cmpsb push cmc inc sarl (bad) cld cmp sub jecxz scas mov mov or sub fneni(8087 or add jno jbe cmp sub sti rcr and push sub sbb and inc ja addr16 sub adc sbb data16 cmpsb dec cld ss jl divb jmp push adc test cmpsl bound cmpsl mov inc and ds ljmp inc mov mov adc out adc (bad) jns mov iret push mov cltd inc lods test jbe cmp or cs push mov vucomisd out (bad) pop inc stos push loop aaa (bad) sti sub add and icebp jmp push shl movsl xchg int3 or stos xor or jae in nop xchg dec loope add dec daa pop or test xchg cmp out add ds out hlt cmp adc xchg sub test jmp adc dec movsb (bad) sub push dec adc mov sub inc leave je xchg jge cltd negl imull out mov ja mov stos stc mov (bad) sbb sub lret jns test ret out ret sbb shrl popa mov bound jb jbe sub and jl mov imul add out jno insb ss jmp sub inc add btc daa pushf popa xor sub inc es push adcl dec sub and test push xor nop pop ljmp loopne mov loop and cmp sub jno xor clc push test pop sub xchg aaa icebp push jl push mov sub sarl into ja jp sbb mov jp pop mov pop jle,pn pop push cmpsl pop pop sub cmc insb mov leave inc repz cmp hlt ljmp lock pop inc pushf adc jl xchg std into shll mov sub xor jb xor inc sub insb cmc sub in ds adc xchg bound adc push test cmp add (bad) push mov pop adc adc test jbe sbb fcoms jmp (bad) xor insl bound daa lcall xchg lea out shrl push jle jg,pn sub dec add sub mov insb out mov dec sub popf sub jge in cs mov stos sar push jmp jnp push mov jnp ret cmp aam push push mov pop sub inc negl mov and scas out cmp sub (bad) mov in out in cs mov cmp ds mov dec sub icebp stos and mov xchg iret inc mov adc lods cwtl xor mov fcmovne lcall scas jnp xchg leave dec fdivs inc aam imul pop or fucomi leave cmpsl adc mov inc bound push xor cmp mov (bad) cmp push jns adc sub xor mov lds cltd rcrb (bad) jnp stc mov mov dec and bound in loope rcr mov (bad) sarl lock repz sub call in sub test pushf out mov inc add xor mov stos push daa sub lahf add scas sbb js movsl jbe sub sti mov lods sahf pop (bad) dec sub adc out pop or test jmp in imul push aas inc jno rcrb xor les out mov mov das pushf lods clc push mov push jle adc and push scas sub inc sub push xchg mov pop call rcrb sub adc jno,pn add cld int3 push mov in loope imull adc xchg inc enter loop daa out xor aad sub dec lcall sbb jge sbb daa jmp cmpsb sbb fsubr mov cmp mov mov pop sbb mov sub daa and and sub xor fisttp push out mov mov pop imul cltd (bad) push sub mov stos pop jbe (bad) aaa mov mov sub mov subl out push inc testb sub nop cmp add mov pop das xchg icebp or loope (bad) ret add cmp ds sub jne hlt pop outsb add push sub ud1 mov fiaddl mov cwtl insl imul xchg inc sub call (bad) lret xor or aam and std pop fdivrs mov jb or add mov enter pop cmp mov cmc sub dec pop cmp ss adc and outsb mov or test mov popf or sub jp inc rclb popf sahf out sub xchg sub mov push sub movsl and outsl sarb stc jp or pushf mov outsb icebp arpl sub (bad) loopne sbb lcall and out push dec repz xchg outsb stc inc out clc mov ss dec mov mov and mov jne into cmpsl mov data16 cli imul sub inc push test mov or ret dec subb imul sub es imul mov cmp inc xorb jge (bad) sbb push lods sbb or cmp mov loope dec jle xchg ss and (bad) nop pop ret xchg stc scas xchg mov add test pop or cmp mov (bad) arpl (bad) je push sbb adc nop adc stos jmp sub mov movsl test repnz add sub cmpsb mov bound (bad) jo lcall push sub js in xchg adc bound sub imul adc bound test jb dec test inc jbe outsb sub dec aam ss arpl into xchg clc movsb daa jle mov dec add push movsb cmpsl xor push xor mov test cmp insl int3 sbb lods sub fiaddl imul sub mov bound cs pop loope sub sub std rclb xchg sub pop pusha imul jecxz loop test and (bad) mov lret xor xlat cmc cmpsl mov je and mov sub sbb aas jg mov adc popf pop in fisttp adc adc cmpsb femms lock iret cmc es sub aam adc or xor test je sub sub lock in jg sub out sub ss mov add pop mov clc inc mov or add add hlt aam or lds bound lcall popf fisttpll cmc (bad) sub sub and in push inc dec dec and test ljmp push sbb sub push aaa mov lods mov or mov mov andb cs cs mov mov cli sub lret cmpsl and mov fs mov sub sbb pop jle sub adc cmpsl iret sarb adc jmp or sub inc and popa mov cmpsl jp in mov push sub sub xchg rcl sbb xor pop jae out fstps sub stc cli test shrb mov and jmp mov pop mov xchg data16 sub push xchg sub sahf mov fsubr lret jp popf or call cmp (bad) sub fidiv sbb das out dec or aam inc push sub lods negb ret cld jbe in inc xor add push ja cmpsl pop pop xor loope mov mov arpl rdtsc icebp and sub fnstenv loop aas imul int3 add loope xor fisub and test cmp and sub insl adc ss jne test dec (bad) mov mov test sub ret add inc sti sub ja adc mov test subb and (bad) pop sub lcall inc test push or out xchg mov stc xchg sub call int3 adc cmp push and sarl add call (bad) push dec lods sub (bad) (bad) mov popf cli inc outsl stos inc mov or cmpsl fsubrp inc and fildll mov mov inc (bad) stos cmpl test push mov sar fwait cmpsb xor ss (bad) lret dec adc push xchg sub pusha insb rol jne mov sub out cmp gs or mov fs or dec xor scas fbld ss dec xchg lock cmpsl adc loope mov cmpsl inc repnz sub es mov xchg fnstcw fmull push scas insl ret orl push pop sbb sub jb cmc fld1 ss sub mov mov mov adc je shrb test pop pop or add sub cmpsl lahf fbstp sub push pop scas outsb xor dec cld xor test fsubr dec pop sahf les in sub inc mov mov adc test (bad) cmp xor cmpsb inc lcall in or push jge dec (bad) mov dec jbe sub inc pop adc and dec push xor sub loopne call sub pop test or leave adc adc sub call (bad) addl pop cmc cltd dec (bad) push sub xchg add sub jbe sub mov popf xchg inc add xor push mov loop ja arpl out dec cld mov imul je dec js dec mov cmc mov sub call sub aaa ja add cmc rol into push imul mov mov es in pop or jle mov mov inc and inc (bad) mov mov sub lcall in jecxz mov dec xchg shrl xor inc mov sub (bad) and fcomip stos lahf loope and jno ret (bad) mov (bad) xor stc shl in cmp icebp cmp mov ret push jp imul test pop xor push jno (bad) sahf jbe lahf jp ret lds repnz jl fdivs xor and sub sub out lahf les sub cmp push mov sub js sub cmp pushf push insb adc das sub pop mov mov jb sub jecxz inc xor dec push add xchg add sub popf mov sub es adc js divb out pop lods fnsave nop push int3 adc pop cmp push int cmpsl daa sub (bad) mov xchg sub jbe (bad) push pop pop push fucomp inc pop sbb cmp test jl loope mov bound push xchg mov iret aad inc pop xor (bad) mov fildll stc mov repz xor sub cmp and cmp xchg data16 jo pop scas and adc test jb test jmp cmp and xchg sahf xchg rcr daa adc inc jbe sub cmp jo (bad) loope dec jl test inc in fcomip fmull les dec xchg test adc push push cli jne lahf and xchg sub mov adc outsl rorl int loop sti push sarl daa inc add lods cmc push in fsubp mov aas sub scas adc mov jmp out jnp dec add cmp sub sbb inc in daa movsb in sub outsl je jle pop push dec jge imul lds mov xchg cs popf fimul add or aaa pushf fxch sub push ljmp test adc and and mov pop inc add icebp fdiv mov pop jns or mov popa out jge sub xor shll andl sub push imul push cli sbb xor jg push scas inc cmpsb fldl sub push fwait pop icebp xor cs cli lret outsl pop sbb sti cmpsb dec add and mov data16 loopne xor inc pop cs in ret push aad outsb or pop mov or adc movsl jle aad xchg jae or xchg jne xchg mov stc ljmp push add clc xchg adc sub mov sbb sbb mov daa mov test notl out add pop xor push (bad) sub movsl in and add adc stc dec aas icebp and xor test mov out xor (bad) icebp sub fcoml mov popf mov sbb sub into (bad) sti test icebp imul sub loope in bound sub stc cmp loopne jns test inc test fdivs in subb add outsl sbb sbb mov mov aaa movb pop fwait hlt (bad) pop dec sub pop loope jae cmp es or sub popa pop jl lods mov stc xor addl mov pop mov sub mov (bad) sub xor loope lock ja arpl scas and inc jo dec outsl mov mov sub xchg out pop pop ss popa leave cwtl push sub loop sub movl sub (bad) cli dec push mov mov xor out pop jl or out mov sub mov mov or pop and sub sub in loopne jl and mov shlb mov in cmpsl lret sub cmpl xor (bad) inc mov sbb mov pop fs xor adc repz pop shll sub cmpsb out sbb inc mov addr16 jns or adc or lret inc sbb jmp sub rcrl and (bad) xor subw je imul sub cmp lea sub inc xchg lods test dec add adc xchg mov sub sahf clc aad sub add rclb mov dec cmpsl and inc xor sub ret cmc aam ss jmp xor sub and out sbb dec add xchg leave push outsl (bad) push sbb sub mov pop sub or aam xor daa mov mov push cmp add sub dec dec dec mov cmp jb push sub mov je out cmp xor mov sub xchg pop pushf pop (bad) pusha push sub adcl sub pop lea ret dec adc pop jb out adc mov cltd mov test mov enter fld aaa push shrb jmp mov aas and ss add push addr16 sub mov sbb cmp sub fmul lods sub mov test roll pop sub les (bad) pop mov sarl xor aas inc push cmpsl mov call ficomp mov data16 imulb dec sub inc stos sbb cmc fdiv repnz decb dec sbb lea pop sub xor jno pop xchg cwtl sub jno hlt push sub sahf repnz sub xchg lahf cmpsl push cmp sub mov addl (bad) sti push daa mov xchg cmpsb xrelease imul pop push movsb xor sbb fstl mov or push aas lahf sub loop mov push sub (bad) insl pop xchg jnp imul pop jno gs aas adc adc (bad) lea sahf xchg or cltd add push pop aad push and repz push jbe pop cwtl or ror sub xchg (bad) in popa loopne,pn fs xor enter cs lahf xchg xor fstpt xor xchg pop push (bad) divl sub mov and or sub push (bad) xor cmp sub mov test and mov sub out jmp inc ds jbe adc xchg dec fidivr idiv aaa adc repz and (bad) sub clc loope sub daa mov adc pop mov lret sub mov jecxz sub aaa pop sub movsb cmpsb xlat jbe popf sub xchg pop sbb sub sbb xor push and pop xor jno xchg pop mov cmpsb push in push jne xor sbb mov data16 fneni(8087 push loop leave das dec movsl sub cmp sahf xchg cld cs pop mov push js push push pop scas mov or sub push add jb decb adc jbe test and and cmp adc fcmove mov movsb mov xor or jbe fldenv movsl mov into mov inc sub loope cmpb sbb xor movsb sub jg,pn jb (bad) dec sub add mov or sub mov mov pop jmp sbb int3 sub jns pop out les ficom (bad) icebp xor and pop lcall pop xorb daa mov sub xchg sub ss sub ja mov pop mov pop jp and and push (bad) cli int3 fldcw sub leave addr16 and fsubr das sbb xor mov cmp sub mov mov xchg orl dec shll jae dec push xchg cltd mov cmpsl out sub xchg or ds or aaa add push shr sarb cltd scas roll xchg data16 sub pop stos sub or inc (bad) jae mov sbb mov push inc sbb flds mov inc or movsb cltd mov cmp ss xchg sbb pop cmp sub mov lods in mov push lock push sub loope cwtl mov stc sbb es pop push sub les negl inc iret call jle push shll sbb pop mov push cmpsl cmp sub or addr16 push sub and push jbe lcall sbb pushw bound jle and and sub in push bound arpl sub das sbb (bad) rorb dec mov sub pop xor ljmp aaa mov mov or fisubrl push sub sbb pop jmp lods push sub lods sub push add cltd (bad) ss mov stos pop mov ds cltd int jmp pop mov std pop ss or pop xchg pusha divl sbb leave cmp cmpsl push pop sub mov pop aas enter pushf test out add imul (bad) test pop jbe shrb sbb push stc (bad) ljmp lds add jge mov fucomp mov outsl push mov xor or mov aaa daa leave xchg sub pop sub lret js sub aaa hlt mov jb (bad) fcoml sub sub test mov sub scas fwait xchg int cmpsl add mov sbb dec mov mov hlt rorb pop inc popf push repz mov push sub ljmp call movsl xchg lock int3 sub lcall xchg stc rorl xor dec jge (bad) pusha imul lret or push movsl cs movsb incb gs ds daa xchg in cmp lock sub test stos sub sbbl jmp adc test mov loopne lahf and pusha sub xchg insl in inc add test fisttp mov and or jmp stos sub mov dec mov and sahf lahf repz int cmp pop inc ja inc data16 inc sub and dec insl adc push dec jo lea fdivrs ds xchg sub xor add jnp push in jo stos pop dec pop xor sub icebp test leave dec into gs out lcall daa jg jb (bad) mov psrlw lcall icebp jne icebp or adc int fwait sub (bad) xor (bad) and mov loop test shrl jns cmp or popf test stc push pop pop (bad) out xor push inc sbb mov cmc popa add lods jcxz cmp mov arpl sub (bad) sub in mov mov sub jp popa jmp push xchg and int sub mov push pushf jmp dec popf xchg test addl jbe sub sbb and movl mov pop ljmp sub sahf aas stos je or sub push mov ret jg sub jno mov xchg mov sub mov outsl xchg sub jno popf xchg test sub jmp icebp jg push mov test cld aaa cmp aas lods mov ja sub mov sti cmp inc add imul mov pop cmc (bad) iret adc (bad) or rol loopne sub pop sub xor fwait dec int3 adc sub call data16 jg sub pop ja inc jno xor dec dec inc daa shrl and pusha cmc mov pop fwait popa bound sub jo lods cmpsb pop mov sbb push and jp ds or mov sub iret cmp bound lret xor lock test sbb and clc sub mov mov mov sbb mov pop out rol mov imul sar out add mov xchg aam shlb sub xchg in sub cmpsb cmpsl inc sub adc roll jae (bad) cmp popf cltd xchg xor ljmp (bad) cmp mov dec xor inc imul xchg sub in out xor cmpsl cmp stos mov lods push mulb inc clc add lahf aad sub int3 cvtps2pd lds lret in adc fldenv sbb ja and mov dec sahf push jns repz push inc and mov inc mov bound push lahf or insb fnop fmuls xor inc xorl (bad) xor lock inc mov sbb xchg mov add inc mov add (bad) rcr lahf fnop push or adc dec popf out cltd sub ss pop cmp inc (bad) jbe (bad) dec adc call pop mov cmpsl cmp cmpsb int xchg xchg sti dec inc and or sbb mov dec jmp xchg sub dec mov icebp dec xchg mov lcall ja gs dec test cmpsb leave or out or mov mov xor jne jo ss (bad) int3 je test scas jg sbb xor xor (bad) out sti pop dec mulb sub dec xor int mov mov cmpsl dec pop xchg jp xlat sub out cmpsl push push push fmull out insb jns ret inc adc xchg dec scas popf or dec inc cmp dec sbb jp dec dec or xchg sti notb and nop cmpsl aad inc movsl inc sti iret push jmp lods sbb insl out (bad) neg or dec xor imulb sub (bad) in push pop or jns sub int3 iret test divb pop out loopne pop and push sbb dec pop aad outsb int push mov sbbl test inc push popf dec push jp jo call das or push xchg orl fxch rcr pop fsts xor mov addr16 (bad) push push test popf mov dec inc jno mov dec not sbbl loop jb xchg daa push push cs xor stos addr16 cmpsl pop inc insb cmp pop loope xchg push xor xor lds inc push sub sahf movsb sub xor mov cmp pushf xchg out and imul (bad) pop xchg jb jnp xchg or scas ss sbb inc sti and (bad) mov scas test out pushf dec jecxz data16 and sahf pop daa jl bound xor insl in push xor insb das cltd mov pusha add call push test jbe imulb sub xchg cmp pushf xor sub frstor cltd xor popa scas xchg mov (bad) xlat repz (bad) les orl or jmp (bad) jb (bad) (bad) push sub cmp cmp sbb xchg cmp (bad) sub push jnp cmp push dec mov andl push jmp mov sbb add jae,pn sub adc iret sub hlt inc mov enter scas sbb incb and (bad) sahf leave xchg mov cs and sbb daa cld iret add subl inc es test xchg (bad) sbb lahf notl mov subl ret ja push mov pop sub add jno cmp and push mov (bad) inc (bad) int sub fiadd dec mov int3 xchg insl popf jge jecxz add pop outsl test dec sub add nop (bad) repz data16 mov test stos sub inc mov pop (bad) lret out mov or lock or imul test and popf (bad) out bound add mov sub cmp es test jg sub mov ss mulb mov sub rorb jmp pop mov xor xor icebp mov xor sub daa mov cmp pop into (bad) in xlat xchg loop sar mov push aaa sbb test sbb jecxz cmp sbb jo pushf repnz and (bad) mov inc pop inc out jle inc jmp sbb sub sahf inc cwtl push repz (bad) ret sub roll jmp les or cli lret loope jecxz adc jno sub ds xchg das inc test hlt xlat pop (bad) (bad) xchg push (bad) mov sub add sbb sub pop or adc inc jns repz xor mov xchg in sub xor iret adc rorb mov and jmp mov or ja add adc test ss js cmp or adc leave inc sub jecxz bound aam lret xchg inc xor into add push mov and stos sahf test cmpsl cs cltd inc add pop xor or (bad) test push aaa adc fnstenv jge xor pop xchg pop sub mov mov jno sub sub test (bad) cmpsb mov cs repz mov aaa mov xchg imull or insb shrl mov aad stc push jmp pop sbb cmpsl jne sarb sbb sub inc pushf or sahf cmpsb int3 xchg xor out add mov popf clc cmpsl push cmc icebp pop pop aam roll arpl pop rcll sbb push sub sarb (bad) sbb ss add or and sub sub push sub fwait xor pushf mov push add (bad) jmp cwtl sub jecxz cmc cmpsb cmp movsb ja fstpt add loop lret sub leave sub iret lcall inc test mov jae xchg ret and dec sbb push sub sahf repz sub xchg loope icebp iret sub movb jno sub imul sarl mov cmpsl or insb pop push sti fwait sub stos and mov sbb dec jns dec sti ss ja pop jo sub jae sub insl jnp adc inc dec sub cmp adc ficoml cmp pushf sbb popf mov or lea dec xor clc (bad) push test (bad) mov dec mov (bad) js sub inc ja mov outsl jnp mov mov movsl cmpsl xchg outsb rclb mov bound cmc sahf nop sub and sarb mov mov push lea mov mov jb or sub int mov call adc add jb xchg lcall lock xlat xchg push xchg je lods pop inc xorb cmp pop aaa push or push insb cmp jne leave xchg inc enter sub adc out lret dec xor sub xor inc push dec test jg push data16 jb fdiv cmp mov jp and js mov dec ds pop push cmpsl sub daa jbe xor aaa cwtl mov ja xor push jne movsb xor pop jge dec push movsl add fs sub push add cmc push (bad) leave stc ds les xchg (bad) push subb adc jnp xchg mulb test push test push mov mov ret push jp clc pop ret pusha out mov push mov imul push loope fs int scas imul sub sub or dec (bad) inc fdivs ret or dec push shrb clc aam mov xor inc or mov jl cs lret xchg out mov fisttpll mov mov ret sbb dec ljmp (bad) into sub pop lock outsb mov (bad) stos sbb and mov (bad) ficoml adc rcrb xor push push xchg xor push stc cli or sarb out or adc imul pushf shlb shrl test les lret xor iret in mov sub iret push test fcomps sbb mov and mov cs fldt mov cvtps2pi add mov or xchg test cltd add (bad) mov jg bound jg into fdivrp lds xchg mov cmp dec lock jbe pop lods sub inc and sub aaa loop shl xor xchg dec add lods and push sti imul sahf xchg insl das dec sbb cltd repz (bad) mov cmpsl sub daa cmp push imul fimull pop xor xor sbb adc xchg jno addr16 fldpi push cwtl movb (bad) push sub jl stc lock sub movntps or fidivl sbb push jp aaa add ljmp cltd (bad) push adc cmpsl xor sbb sbb fstps mov pop jbe mov outsb jmp popa sub inc mov psubsb mov mov push js xor cltd or jmp daa cmpl push xchg or sub lea push inc xor inc push mov xor shrb xchg mov subl icebp lea xor inc mov cmp loopne loopne,pn mov jge add inc pop push addr16 sub and dec dec (bad) xchg mull popl push xor dec adc or fstps sub xchg (bad) sahf stos cmp es cmp sub xor or sub mov movsb test pop add repnz pusha sub adc inc (bad) mov outsb sub cltd mov jo ret xchg sbb cs pusha adc out pop inc (bad) jmp in inc cmpsb es or or imulb mov in dec xchg jp fldl enter icebp es leave push fstpt and add push sub data16 push cld jmp jg outsl out adc jp lcall movsb inc lea push lock cli cmpsl dec (bad) pmaxsw inc pop shr cmpsl loope jecxz lods imul pop jp ss sbb aaa adc test lods mov fadds sub or sub sub push insb push cmpsb call mov adcl push xchg out (bad) enter xchg push xchg cmpsl aad ds jg fs in mov loopne jle gs mov sti ss mov int adc or pusha leave jmp in cmp push jp popf outsb pop and xlat mov cli orl adc mov loopne lret add stc lods xchg sbb mov push jno pop push xchg daa (bad) mov lret call in cmpsl sbb lock cwtl jge pop xlat pop jo sub xchg repz or sub mov dec ret sbb test xor in push call int3 and inc scas xchg fwait push and adc or jecxz xor dec enter lahf icebp pop or jns jp pop add mov fstl jbe xor (bad) mov and test lods push sub jp push cmpsl add sub mov xchg ret sbb sub cmpsl cmp push dec movsl test jo inc pop ljmp mov push sub dec insb nop sub add and sub fisubl xor push mov imul in cli sbb inc int3 mov aad enter sub mov loop add push test sub inc push js cmp add mov data16 mov or adc xchg movsl mov mov sti stc cld xor mov test or or int pop outsl adc clc shll and add push aam lret loopne sbb (bad) pusha fucomi sub inc push inc out bound xchg cmp rcrb add fmul sub sbb sbb ficompl xchg push loop push popw in xchg sub and cs je mov clc or incb add repnz jnp insl fsubrl (bad) cmpsl pop sub pop mov stos ret fisub or les ds sub sub cli and adc inc mov push cmp or cmp pop outsl dec orb xor or sub dec sarb adc mov sbb lds or sbb nop cmp inc push ret leave test push cli sub or mov jmp stc into movsb mov dec dec nop sub and clc test xchg js xor xlat inc push addr16 daa popa ja out cs mov lcall jno dec and dec jle pop das sub xchg movsb bound adc xchg inc push aas cmpsb pushf cltd out dec icebp push xchg push dec sub stc xor add mov cmpsl push mov ds jge in sub jmp or add jns int3 subb jb add mov sbb jl mov sub mov addr16 (bad) push add or sub add jnp mov shll outsl xlat jo fs sub jno inc push jbe aas (bad) lcall popf inc dec xchg movsb mov jge insb pop or pop ret mov cli lret mov ss inc or push push cmp int3 loopne movsb mov sub gs inc xchg fsubl arpl adc or mov ss hlt out in sub out lahf rorl pop (bad) divb xlat push ret test ficom xor fstl sub aam (bad) or mov inc sbbl xchg sub js and shrl loope jb sbb mov mov mov bound cmpsl or mov jp repnz mov int std dec ljmp pop fidivr jne pop ret and sub pop pusha gs es in adc pop out push xor or adc cmp outsl fnsave push sbb jge imull mov sub in push jbe,pn push outsb pop (bad) inc mov mov in jbe fnstcw mov jge mov (bad) ret daa jbe leave (bad) lret movsl push es dec xor cmpb imul dec xchg pop mov add sub sahf push pop push (bad) ficompl arpl fldt rolb and lcall jbe jle dec leave pop jne dec cmp imul pushf pop add cwtl xchg push es ret les xchg int pop rcll leave sti push push pmaxsw mov imul push fistp pop pushf cmp ds popf push xor data16 arpl or sub adc jnp hlt leave loope das int gs inc or fidivr or mov jg stos cwtl push push dec leave adc (bad) mov outsl xchg sub dec loope clc inc adc out push sub or push daa xor jmp imul (bad) sti push enter mov sbb leave dec jnp and in fldt test clc das jp xor cmpsb xchg (bad) aad pop sub mov cmp xor fs test cmpsl enter (bad) rolb adc out pop jg xor test xor aas xchg fwait xor and inc add mov jnp jno scas fimull push pushf imul inc sub std scas adc daa cld add jmp push ss inc sar imul lods leave imul (bad) pop pop out (bad) and dec (bad) pop loope aad dec idivb jne dec push in inc iret dec aad lahf mov aas test adc arpl cli dec mov sub inc gs push fmuls fs ret fldenv rorl jo lds mov cmp int adc (bad) jmp cmpsb pop xchg xor pop jnp aaa lea outsb int sti les lock xor icebp and pop add inc cld repnz sbb fisttpl push pushf sub (bad) iret clc aad cld movsb cs cwtl int cmpsl push imull leave arpl inc jae add inc mov xchg mov dec or jno adcl movsl add pop out jo hlt test lret dec push cli (bad) pop jo xchg mov adc xchg jl repnz loope std sbb xor cmpsl pop imul mov cmp push dec int cmp (bad) sub push cs push leave out sub add xchg ss cmpsl xchg adc lret (bad) aaa movsb retw sub leave es mov mov pusha (bad) jg das xor or xchg xor sub out nop inc arpl jne jmp in jo arpl inc cmp inc sub mov leave ret js test xchg (bad) dec fld1 cmp addr16 xchg or and pop mov sub jo ficompl int ja leave mov pop xchg fs cmpsl aaa add mov or out addb test scas xchg mov mov add jl setbe xchg adc mov test bound lds int out jno xor out ds lret enter pop cmp push push cld jnp or dec jns push je andl jl push push inc pusha push push insb (bad) or jmp movsl jo daa loopne mov fs mov aaa imul xor sub call xor ds leave add fnstcw xor xor scas push and leave dec sahf sbb xchg push pop stos ror xchg mov xor xchg (bad) hlt mov dec xor cmp dec js aaa cmp es cmp (bad) ja dec and push pop stc jb popa push aas cwtl daa pop push clc int jo call cmp incl sub fildll jbe out int xchg jl arpl adcl xor xchg push inc fcmovbe idivb cmp addr16 xor dec sbb jp ficompl int out divb inc movsb test adc cmp pop imul sub inc inc arpl lds push fs adc shlb or inc dec dec push jno cmp jnp xchg or dec arpl andl (bad) ds scas push test sbb jl adc inc sbb dec xchg leave sub mov xchg das int (bad) sub jp xor mov add mov js fcomps lahf xor cli cmp cwtl jg mov idivl jae xchg cmpsb inc inc xor xchg mov or add (bad) fidivrl xor xchg movsb jnp leave mov ds pop call icebp andl cmpsl pop pop addl push or out jo push jno pop cmc (bad) jo pop adc sub xchg add mov sti iret sub popf lods and sub push mov push jbe insl jb bound jmp mov sub gs mov int3 sbb sbb arpl leave sahf repz xlat sbb cmp push jp mov movsl aad sub arpl sbb data16 and test lret xor inc cli stos inc xchg movl loop imulb push outsl fcomp push and adc xor mov sub adc lea (bad) mov out and mov xchg or adc in pop das or xchg add push pop pop ss push inc or add lret (bad) jecxz ficoml xor rorl arpl inc movsb adc ret sti into jle ret test arpl sbb insb mov ficoml mov jmp cmp xlat repnz adc mov test jbe stc jns xchg aam popf jno ds fildll into movsl sub dec andl rolb mov jne inc sub adc pusha xor dec cltd pop sub mov sub inc lcall bound adc xor xor popf cmp jge je mov mov xor add imull jmp jbe mov int cmpsl inc mov or loope cmp jb,pn outsl scas leave shrb hlt (bad) imul (bad) sahf xor jns pop imul mov adc sub call ret push popf (bad) sahf lret sub clc ss into jne dec dec pop dec add dec fwait push dec popa push xor xchg lock lock jns sub loop ljmp insb sbb push rdmsr or cmpsl xchg push jg dec mov push pop mov (bad) loope ds adc fistl or adc lods fdivs std push cmp mov add sub aad cmp ret scas add mov dec push dec or stos iret jp sub dec jmp xchg cmpb mov icebp pop aad sub or and out mov inc cmp inc xor sub xlat sbb sub notl mov rcrb int les imul dec add ljmp int repnz pop enter xchg mov daa stc (bad) jl fsubrp shlb jmp repnz sub push testl sub mov jge xchg mov mov (bad) movsl ss mov dec sbb and jmp inc push mov sahf test aad dec psubq mov jl in inc or sub out fidivl cmpb sbb dec jbe ficomp cmpsb in fist inc int (bad) push repnz es cmp dec dec xor shll rcrb cltd mov pop sub data16 mov fsubs call fisttpl dec mov fs pop push int fwait pushf neg (bad) lods sub jl (bad) stos push or cld and dec in and sarb xchg add bound pop xor inc mov sub fxch (bad) sub cld fcmove sub sbb outsb adc cmp mov dec in les mov into xor aad xor sub dec dec rolb in adc add int3 xchg cwtl xor (bad) outsl je adc inc data16 cmp xchg repz std daa int dec arpl sbb test iret sbb arpl xlat stos movb and test (bad) pop xchg mov mov add clc lock iret push inc sbb sub enter pop daa sub lods in cmc push xchg and (bad) xor xor dec mov scas mov cmp push dec stc orl adc sub stos out icebp sbb inc and sub cld dec add xchg cmp cmp imul inc stos dec and test repnz nop icebp sub push pushf jmp sti adc jle aas faddl ret ja,pt out xor sub out push repz cld pop mov xor mov mov gs inc mov sub sbb xor adc aaa push gs sub mov (bad) (bad) dec or lcall int3 fxch sub sub js jecxz cmp ja add fistp mov dec out (bad) sbbw sti or test call fisubrl jno adc frstors call xor dec jecxz pop test inc fild mov sbb test (bad) sti stos and test popa jmp mov shr es cmpsl mulb xor (bad) mov xor decl sub scas testb mov aas scas sbb or out inc ljmp dec (bad) aas inc popf stos xor adc ret in cltd loope cmp sub sub xchg rcr jo push and add and mov pop xor or icebp push enter sub sti xchg mov cmc mov (bad) fs push ss fwait lods jnp dec adc mov mov cmp pop pop xor pop push sub pop je push dec jne call cmp add sub jecxz inc fwait scas repnz iret xchg and ds and sub (bad) sub xchg xchg mov jl fisubrl fwait scas fnstenv shrl es outsb push mov push adc outsl out sub mov mov lret mov add icebp (bad) fstpl inc jb jle in sbb ss and test adc or sub shlb jp popl and imul jmp ss inc push sub es pop add pop pop leave mov cmp cmp push mov jb int fmuls cmpsl shll mov push inc out lock lcall leave shl lcall out cwtl (bad) stc push fwait addl xor cwtl (bad) inc adc mov add enter leave lcall in sti and fucomi int jge jae add scas xor fcmovu and mov xchg and inc push test sub xor popa dec dec add fsts cmp mov repz stos shrl in dec cli lock scas mov stos cmp sub pop jo call sub popf sub xchg iret aam aad int fsubr lea push scas xor dec add xor ljmp dec mov add and pop stos inc leave xchg imull adc cmpsb cs pop push cmpsb adc add bound loope add fucomip jge dec adc mov sub push sub dec adc xchg xor or dec xchg stc xor lods in cmp out icebp fldcw inc clc cmp or cmpsl sar loopne out arpl sbb jp lret or out sbb (bad) xchg mov push pop jae sub push push xor inc sub gs (bad) mov pop sub stc (bad) sub out fstp sbb adc (bad) mov sub mov mov hlt pushf sub pop bound nop add sub call mov sub aad pop fidivl sub xor sahf or andl dec loopne movsl aam mov iret mov pushf sub xorb adc repz adc cs and mov push jns pop inc sub and cmc xlat cs (bad) aaa mov mov mov add mov cli fldcw push mov jge leave pusha inc push mov push xchg ja sti adc sub orl shrb cli dec xor pop xchg push or test out mov (bad) fidivl int sbb push sti inc outsb cmp outsb cld jp call mov cs push add insl mov mov mov dec out add leave jle inc or pop add scas ficomp imul sub in inc (bad) pop test in movsb inc ss mov ja add jno,pn cmp push xchg test jb,pt lods push (bad) pop iret jnp rcl xchg mov jae adc xchg int sti xchg push lcall scas pop loop inc dec dec hlt jmp xor outsl sarl jp leave sqrtps insb xlat jle jge outsb push jns push insb popa out add jo mov push sahf int jecxz push dec mov jge sub addr16 add push (bad) dec bound sub scas insb (bad) sbb mov aaa xor push imul sbb addl imul lods (bad) xchg lahf cmpsl mov (bad) or je imul lea icebp fs xor jmp int3 xchg int std rcrb es adc cs mov inc mov inc xor add mov pop out hlt dec or ljmp cmp fdiv dec leave sub xchg fimul jmp aas sub in insb (bad) pop ret pop xchg iret je pop sub lret sti sbb aam sub (bad) cmp jecxz,pn cltd mov mov (bad) xor adc pop imul push sub addl pop mov dec (bad) cmc imul aam sbb mov mov shl cs imul data16 jns lea fstl ret aas adc jnp dec mov sub movl push mov adc idivl cmp adc jnp sbb mov inc movb jno mov test mov bound es add add mov jo sub mov popa in mov xchg andb jecxz or sub lret ss in and jge jge sbb arpl roll pop mov dec mov scas nop dec dec stos cmc and (bad) inc push jge into and icebp sub cmp cmpsl jnp daa addr16 cmp sahf or scas sub sub push lea and jbe sbb (bad) enter cmp iret push gs (bad) popf and pusha in out outsl pop sub xor jle ds adc or and fcompl imul xchg pop xor push leave data16 adc stc orl xor gs sbb out inc pop sub lahf sub sub jp (bad) call dec jg mov cmp in sub inc or xor xor ss lds ljmp sub mov mov daa pop jb sti insl and or jmp or sub into jnp mov mul fimull (bad) xor jbe iret sti es jle lahf dec ds movsl adc lods xchg test sub jmp in fucomip dec notb ss int aas mov or dec sub mov repnz inc mov xchg test dec push in mov aas or sub mov ja xor jbe divb sbb iret imul sub hlt les add out dec push xchg sub bound (bad) repnz mov repz xor pop sbb jmp and dec sbbl js mov idivb ret out jl cmpsl push jl jmp dec pop movsl test data16 or cmpsb in inc btc mov out sahf lods mov push rolb je pop sub lds or in fwait enter lahf and inc or mov ss push inc pop pusha and lcall jl sub leave push daa and dec stos cltd pop in inc adc les xor sub and mov cs lock mov adc in jmp mov jge loope aam pop aas add lcall (bad) mov mov sub ss ja (bad) icebp or sub lods test test imull call pusha imul xchg ret gs cmp dec sub cltd cmc popa loop mov sub push lods mov xlat mov mov js (bad) imul cli dec push xchg (bad) dec repnz xchg push (bad) push call push fmuls bound in dec lret inc inc cwtl jae stc adc orl mov sub outsb cs lcall fldcw adc or cmc adc inc jge sbb xchg pop jb aaa nop mov lahf data16 mov mov jbe dec pop and adc repnz fistl insb fnsave sahf fs pop mov mov imul inc jbe sbb pop pop insb lods push gs (bad) ljmp sbb push and lock pop test lahf aad pop mov mov (bad) or fldcw push push fstp sbb (bad) adc iret lcall orb jmp loopne push je push sahf fnstcw and sub mov fsubr scas (bad) lret mov mov and sub stos sbb pop xchg es cmp adcl push xchg sub movsl sub mov insl pop sbbl loope mov pushf stos vmovups mov add bound (bad) ficomp pop adc adc ds jo cmp push inc xor cld xor mulb ret mov fwait xlat daa scas sbb inc arpl mov pop dec sbbb dec pop cld sub xchg adc inc sub test gs rolb sub sbb js and pop int leave movsl dec not sti and push call iret jmp xchg fisubl fcomps sub jnp pop inc mov loop mov jg jbe inc lret not inc push test xor adc lock mov cmp test mov cmpsb xchg out jne adc movsb mov add sbb pop push jge mov jb add lret ljmp (bad) xor fidiv jl mov cwtl xchg mov add sub and ss ret mov aas inc je push sbb (bad) adc jp jb sti jb cmpsl and std adc stos sbb pop fs lret mov jae cmp and push sub daa sahf cmp inc dec sbb cli mov fnstcw inc mov scas pop mov popf loop out mov sub adc pop mov add sub push pop jo jbe enter icebp sub or add xchg mov fiadd (bad) loope or sub pop jae loop mull pop mov adc addl outsb addb in mov sbb insl cmpsb es rorl or pop xor add in ret sbb movsb xor and cmp jp dec loop push (bad) mov xchg cli addr16 lahf xor movl and jns stc in (bad) data16 inc les andl mov add inc icebp mov cmpsb leave adc mov mov fstpt stc push out mov outsl cmpsl (bad) mov push mov cs pop xor push lea xor cmpsl lahf pop test ror dec inc and jae loope scas pushf jmp pop std push push fdivl mov cmp lea leave xchg pop xor xchg imull cld adc in sub jmp sahf call ret ja xchg in cmp jnp lea test push jl sbb lret push enter ja jg ret pop sub xchg jmp jge lods adc divl cltd adc jmp xchg cmp jecxz (bad) cmp and mov jmp sub ljmp dec xchg lahf lcall lods shrb (bad) pop pop fstp xor sbb loopne sahf lds adc pop out aaa icebp push daa aad inc addb sub push ds xchg ds sbb jle stos push stos lahf js and mov add xor cltd ljmp sub xor cwtl jnp cli xor or xchg cmp test mulb push flds mov and cld dec add xor dec sbb xchg xchg orl fwait pop jmp pop std mov lods pop shrb es pop sub add insl or jnp hlt ss mov sbb xchg sbb or jp sub cmp mov arpl pop cmp inc and in pop inc jne outsl lahf imulb xchg mov pop jae dec add fidivl lds (bad) xor leave pop (bad) sub ds pop cmpsb (bad) xor mov jnp pop dec jge mov outsb push jg or ret and cld rcrl push mov ss nop and ds (bad) int mov dec add add inc xor gs lcall in xor push lea xchg (bad) out lahf sub jecxz int dec cmpsb dec ljmp pop push test lods dec loopne (bad) cmpsb sub mov ljmp fldt fmul or pop push push xchg cmp cwtl pop push push or push test leave (bad) push lret cmp pop (bad) jo dec aad (bad) (bad) xor mov jp lds daa sub sub (bad) insl jb jno cmpsb imul mov fmull cmpsl cmp jo pop adc mov aas sbb in mov jg cwtl jae pop int sub xchg jns ljmp pop sti dec out push xchg lods scas sub inc test aam mov xor mov sub mov adc das clc jl cmp or mov rcll mov adc push mulb cmpsl lock fsubrl lahf push dec add lods mov xchg jl (bad) mov (bad) xchg popf stc out cs or lock add test pop in cs fldenv and adc cmp jg inc inc push leave sub test pop arpl xor movsb test ja test popf sub imul sbb and out mov pop mov or adc sub les stos sub sbb cs lods shll push fnstcw inc mov mov sbb (bad) loopne pop test je mov and push std and sbb movaps jl sarl sahf gs ja mov outsl dec and pop xlat inc push mov pop out sti dec sub push and sub xlat adc mov xor xchg (bad) ret add xor jo lods mov push shrl les fbstp jns addr16 sti test and cs push cmp cmpsl jnp push adc inc fnstsw dec rolb pop sbb (bad) scas jbe jg dec flds es outsb pop cwtl and ljmp movsb mov sub cld clc and aam push mov stos nop pop jbe xchg xor je sahf mov add int3 add dec iret testl sub sahf ficomp sbb jno pop fs (bad) mov add or jbe or sub mov push xchg inc sub repnz push lds jb daa movsb xchg mov fwait das mov roll dec push movsb (bad) repnz xchg sub sub sub scas cmp add jb repz sub inc or inc loop fsubr mov pop mov jg xchg cmp bound mov movsb sub in daa cs in add mov test lea sub sub aam mov push scas mov fadds pushf add sbb ror pop xchg fstpl cmpsb sub and mov dec ss cmp xor push inc sbb cltd btr call not adc lds add mov cs dec lods hlt fstps test xor push fucomp adc sbb iret (bad) mov lock push xor repz xchg push mov rol (bad) push sub bound pop shrb movsb pop shrl (bad) push sub in sub fildll outsb xchg icebp jbe jae div (bad) adc insl jns aad push or mov loope aas movsl sub fadds vcvtsi2ssl pop jne xchg test cwtl fmuls add (bad) sub xor xor push stos mov jb rcl adc movsl sub inc repz inc pop push add sub cltd sub (bad) cmc sub (bad) fildll pop cld inc mov jae out movsl stos pop in rcll cmp push push sti leave jns int3 jle xchg and rcr sub jmp test pop repnz fisubr dec inc orb and sub cs mov inc data16 and sub aad dec ss mov dec pop mov jmp fmulp jnp push (bad) sub push enter sbb sahf or mov popf dec mov daa jae push cmpsb add fsubr sub movsl cmp xchg (bad) mov icebp out lcall es fucomp mov xor jmp mov sbb sub stc jge mov cli into dec jg xor sub add ret popa out stos ds sub mov mov std shlb ja notb push pop fmuls jmp cmp fwait cs adc stc mov ret ja out pop fsubrl ds ja,pn js mov xor pop push fmull enter or pushf ret adc (bad) data16 inc lcall mov popa dec pushf sub jo cwtl and pop sbb ret xor mov hlt pop mov and fildl mov imul fwait inc dec divb xchg sub sub lret out cwtl xor jl test sub jmp mov pushf mov add int sbb sbb push nop test pop push inc (bad) test insb div fisubrl nop loop dec and add sbb or sub add push xlat sub jg mov xor imul jmp push sahf push inc int3 lcall xchg cmp jg loop rolb xor and sub mov xchg pop jb ja mov jmp mov sub and inc xorl pop je jbe es imul imul jno in (bad) push sbb sub jecxz or sub jns aam pop fwait sbb int daa fildll sub lcall fdiv xor jle popa mov pop inc cmp mov jnp sti dec cmpsb cltd xlat cwtl xchg inc (bad) sbb pop add pop in lcall loop daa test fsubrl jecxz lret sub pop cwtl cmpsb ds inc and mov inc jp mov ficoml jb or inc mov in and jb jl sub xor pop out rorb cmpsl (bad) (bad) iret outsb (bad) fisubr or or in mov mov ljmp xor in (bad) fstps mov sub repnz fildll mov leave push aad adc pop fwait ret das repz bound sub mov sbb lret add mov dec decb dec add inc stos stos ret mov cmpsl sub fdivrl lock jge ds dec sbb enter jp sub rorl or sub mov arpl mov (bad) lfs outsb sarb pop cwtl popf push stos scas inc stc jmp ja add cmpsl adc movsl push sub pop movb mov (bad) jnp xchg mov call mov das sbb or stc adc sub es (bad) imul mov lock pop jbe call jge inc out xor ja insl popa mov push mov push mov cs jns and xchg aaa mov cmp dec and sti lods mov cmp fdivs sub dec push lea popf adc xchg jge call out fcomps or test insl repz sbb xor iret test add (bad) dec mov dec popa or sbb in sub xchg mov sub sbb data16 push jl mov nop push push pop stos xchg add loop pop jbe sub andl ja scas cvtps2pi cmp pop push push pop pop jno sub and dec movsl ret subl (bad) out ss in sub pop subl sub xor aad add lods popf sahf sti leave mov adc rclb add shll pop sub and jl aaa dec imul insb sbb loop lods imul mov jp cmp mov and icebp fs aam inc mov dec sbb cs sub es jb mov or sub imul or add cmpsl add push and dec dec sub push js xchg fidiv adc (bad) or je ja mov lret movsl lods mov pop xchg ds dec clc sub (bad) (bad) xlat insl bswap fcmovb fbstp mov out scas push fwait xor sbbl adc or sarb xor push cmpsl xchg inc xchg add daa test xchg loop mov sub (bad) push mov push aam cmpsl (bad) leave aaa fildll rolb xor inc xcrypt-ofb cmpsl out leave xor sbb rcrl addr16 mov mov push xor in sub int jge stos xchg xchg in js pop test int movlps push push adc ds je int push cmp inc lret cltd scas sbb clc push (bad) dec ret clc orl in fdivp out (bad) xor mov out inc pop mov mov and mov mov imul mov sbb jbe xor mov xor dec shrb orl mov test pop push lcall add or movl or lea call xchg mov mov pushf xchg mov xchg cmp sub push cmpsb out xlat inc or dec sub les dec sub repnz mov jbe outsl (bad) mov (bad) push fdivrp cwtl sub jle pop jnp lea mov mov repnz cmp lods and add aam push addr16 inc pusha mov mov test aad mov xor fmulp adc mov aad pop or movsl inc mov in shlb icebp cli rcl xchg add (bad) je mov mov and mov bound aad in adc sub mov sub repnz outsb fcmovu gs in aad dec out and mov or cltd in in adc mov das sub out mov (bad) cltd jae sub shl cmpsb xchg cmp jns jb inc cs pop mov outsb inc xor sbb adc jecxz push pop (bad) sbb cli int lret xchg xchg xchg xor add dec jo sbb out push lahf in sbb bound jne jb cmp add sahf xlat adcb hlt int cmpsb inc mov out test jg add sub test ja aad and xchg sbb mov pushl xor xchg mov fidivr or sub aaa mov bound scas es mov mov push jae iret mov sbb xchg orl xchg sub cltd xlat jle fwait inc pop sub mov jg push and dec inc orl outsb fnsetpm(287 sub mov push lods scas cwtl popf sub inc fdivr cmp mov in ret lret mov mov sub pop mov jmp xchg push xchg push inc or scas pop push sbb xlat lock sub hlt fwait push cmp push fs lds jns dec fstpl sbb into dec iret js xor add pop out repz in (bad) test loope sti and jo or push pop pop popl repnz sub clc adc adc jle in xor pop sub jno cld mov pop fucomp pop push mov inc mov sub lods mov push jbe jge adc enter fsubrs or add mov inc sbb cmp leave mov mov sbb jmp jo roll dec cmp shlb mov fucomip lock xchg leave mov int (bad) push sub sub data16 ljmp xor iret adc dec ljmp push cmc loopne aam (bad) sarl sub cld xchg xchg ret or sub jmp add sarb and sub sub lret jecxz xor push jnp add add scas sub int3 std sub inc and push and cwtl xchg scas cmc sub xor test addr16 pushl lcall lret push int xchg cltd lock lea jge insl sub (bad) lods sahf sub cmpsb and cld dec (bad) jl dec inc (bad) push je push mov ljmp adc mov sub in and mov jbe xchg dec (bad) pop (bad) into cmp jg cs fucomp sub pop (bad) hlt fstps mov inc push sub imul mov mov xlat enter cmp sub in or and lret cmp sub test cmp in adc push push out negl test sub push sub leave dec add mov fisubl xchg cld push test jg inc push inc stc sub repz ret sahf imull fwait xor imul bound inc sub cmp arpl or mov loope in mov mov idivl cld test jge xor rolb movsl xchg test scas pop inc jb xor push sub and pop sub fstpl or sub xchg and ss jbe jns loope push sbb mov and sbb or loop test lret push ficoml sub mov pop or inc xchg sbb rdpmc sub daa push mov dec int3 jno cwtl xor and loopne xchg fnstsw insb mov fisubr aaa cld lret in fstpt dec mov call sbb cmovge (bad) inc dec loop xchg xor es lea inc pop or loop inc cmp or andl xchg mov pop mov int3 mov cmp and jbe mov (bad) fs cmc jb mov push leave inc push cwtl aaa bound jge pop roll mov (bad) dec mov adc loop inc sub int fwait add (bad) leave aaa pop mov pop xor fisttpll dec dec leave leave and jge cwtl push outsl cmpsl mov inc push xchg movb xchg cmc addr16 stos ljmp test mulb out repnz push cwtl ja addr16 jge pop push dec mov cmc and cld stos dec leave (bad) call lcall mov imul push fsubl (bad) mov aam aas xor sub (bad) fisubr (bad) gs mov sbb mov inc int ret push sbb cmpsb push call xor cmp pop xchg xchg mov int testb and inc sbb or fistl pop mov cmc sub mov fcom fidivrl add ds sub inc mov inc in stos imul lock sub out in adc mov cmpsb arpl mov pop icebp inc xor add es ss xchg fs loop sub cmpsl sub pop sub pop (bad) sbb repnz sub insb jge push pop sahf stos fs mov cmpsl stc mov inc dec (bad) test push lods pushf add repz pop dec mov jmp sub mov jne sub scas (bad) das add and mov mov sbb mov aad in inc sub push lods or sub sub lret jp xadd sub movsl imul sbb ds or lds cmpsl popf shrb xor push nop adc mov sub cs imul and xor in sbb mov fwait pop sbb bound fdivr sub pop aaa xchg jge sbb les pop jnp fwait dec cli es pop jns lock sub jp jne push mov es sar push js (bad) imul inc pop inc pop jno imul jecxz out mov fcomp sub ret enter sahf sub cs add and add sub pop sub pop lcall in aad ret dec fs sub shll push cs push jae sarb jge or xlat add pop je inc lcall cmc testb add aaa pcmpgtd mov das (bad) mov add int aad sub out xor jae sub xchg ds std mov or or xchg (bad) repz imul into in mov test ret add mov (bad) (bad) fdivs (bad) jg jl,pn shrb push js and mov add pop add cwtl mov cmp popf xor aad xor xor mov adc sub push jecxz jmp and out loopne add mov jnp icebp sub push daa cmp xor clc mov sub sub push mov sarl add dec and rdmsr dec dec (bad) ret sti scas mov mov test imulb rcll or ret and pop shrb cmp iret sahf xchg inc cmp js addr16 push cmp insb xchg mov mov lcall popa sub pop fildll stos sbb dec push xor push cmpsl and inc lods sub xchg mov mov inc cmpsb sbb jo add test mov test in aas cmpl lret aam sub daa sbb pop inc push notl imul jo sbb ret addr16 repnz push loopne dec out rorb test push idiv fsubr sub mov sbb push dec push pop cwtl imul inc xchg push subl call dec add test out inc cmp adc sbb (bad) xchg es push and xor adc or insb sub inc ds jno pop sub mov push cmpsb mov lahf sbb aas sub pop jb,pn imul jmp adc (bad) mov sub sub loope call dec aad jmp inc or pop cld adc adc inc sarb out mov jmp sbb js sbb inc mov or xor xor xchg cmpsl sub das sbb and dec (bad) xchg sub sti jbe cmpsl subl sub daa ja mov imul mov mov adc mov sub and arpl sahf mov subl push add (bad) adc scas jo popf or insl xchg icebp rclb test jl neg outsb and in cs adcb push (bad) sub mov fdiv sub aam ja enter jmp imul or inc lret cs push ja ljmp xor push movsl adcb callw aam mov sbb gs jno cmc push and test loope sub sub sbb incl aas and test out dec sbb pushf dec cmpl and xchg jl ss or enter cmpsl jns scas movsb or aad sbb jbe cmpsl jns lahf jb xor test (bad) sbb push ds xor xchg and xchg mov cmovs mov mov fisub mov mov dec xor addr16 and dec dec or aas xchg das sub lods jmp mov es cmp dec fdiv insl fisubl add inc in cmp cmp scas mov or mov ja or jp add sub stos push (bad) call dec xor sub push sub or fwait dec je movsb dec loopne sub bound mov pop dec and (bad) ret lret xor xorl sahf cmp out mov fimul cs nop pop (bad) cmp mov repz mov int3 mov test mov pop sbb push out lret or daa dec ljmp lret push dec lock fpatan inc out fucomip subb sub cs test leave jmp ret mov or sbb inc sub repz notl outsb out cmpsb inc repnz jecxz mov cmp add cwtl pop (bad) jg cmpsl mov leave mov stos pop push test pop add popf xorb addr16 cs adc add or jg fistpl add jb mov imul fbstp ss pop inc (bad) sbb loope int3 cmp xchg jge cmpsb sub and sahf cs inc frstor adc es mov and lahf (bad) rcl fstpl sub sbb lods std mov lret dec (bad) lcall es add sub ss mov int cmpsl cmpsl addr16 in sub loopne sub push test dec fldt cmp jno adc inc dec add mov xor imul xchg cld cmpsl scas inc test lods xor cs loopw ljmp xchg outsb enter cltd fldenv loop in es stc sub dec out repz sbb mov orl cltd out or cmc pop adc cmpsl shlb and arpl ljmp pusha test xor adc sub push ljmp xchg outsl test nop gs push sub rcll cmp sub pop call adc jmp sbb test dec sub test mov push dec or dec fldcw pop sub pop out cmp xchg mov icebp iret jb lods adcl jge cwtl jnp pushl xchg adc cmp sub cwtl int or push mov int cli sbb fiadd sub mov in iret jge ret xor pop mov adc arpl or hlt pop jb push sbb fisttp sub push mov imul jge jne fmulp xor cmpsl pop es clc cltd xor mov sbb not out xor out data16 inc (bad) jb push and icebp jns mov sub jae lea jb pop std dec push mov pop scas mov xor (bad) divl mov xor adc icebp mov les inc jnp xchg pop pusha mov push sub dec jmp insb rol jmp add mov xchg repnz out test scas pushf call imul dec lock or or push push ja sub movb sbb negl jne,pt nop mov or cmp dec jg (bad) pop (bad) sub lcall dec inc sub add inc jnp lcall fmull push push dec fidivr adc aaa stc push sub cmpxchg xor xor shlb aas add xchg pushf inc data16 andl push push inc inc cmp fbstp push dec fdivl adc ds add dec dec cmp (bad) int fisubr add cmp push push or cs pop cmp and arpl lret mov aam out orb bswap daa cmpsl and ficompl leave lea int dec sub cwtl fidivr jns cmpsl and cmc mov mov mov mov cmpsl lea add mov sbb or xor sub mov out cs sbb sahf or pop mov dec and icebp popf dec jg pop sub push dec cmpsl leave (bad) fistpll jo pop addr16 jl push cwtl imul insl mov jb scas ljmp sarl les and aad sub test addr16 inc (bad) or dec rorl xor inc icebp push dec pop lea jg out push (bad) mov xor ljmp pop jne pop adc gs test cltd (bad) push outsl gs rorb mov and and adc push dec (bad) and jle ja cltd loopne repnz mov gs daa push cmp sub das mov pushf fist sub lods popf cmp (bad) dec lods inc sub dec jbe inc sub mov jle,pn dec or out out pop mov cmp push jmp je rclb pop mov daa ljmp sub dec sahf sub adc (bad) mov jp xor xor test aad scas sbb push cmp pop jno sub inc xchg ficomp scas pop push xor in fwait cmp jecxz pusha call sbb insl lods ret jns mov repnz and sub sbb sbb in not (bad) sub out fs jg mov inc adcl test sub bound dec dec mov (bad) std sub add shlb xchg out clc cmp sub (bad) loope cmpsl inc mov test fcmovnbe jae js adc or ficom call dec sub test lahf scas xchg adc sub adc daa js dec cltd loope lods repz cwtl xor sub cmpsb and hlt rorl adc and sbb adc stos push fidivr pop jl (bad) mov in lcall cltd pushf push call test sub jge fisubrl imul dec std inc lds push and jns aad jne dec sub dec xchg pop outsl push sub mov aam sbb cwtl xchg mov jmp hlt pop and lahf in mov jp cs std push pop pop dec xorl lods ror mov ss and xchg dec mov mov sub mov mov (bad) xchg dec xchg (bad) adc adc or push or inc mov lcall adc stc lret xchg lods jmp iret cmpsl movsb addb iret lds fcoms add andl dec sub jae out pop icebp fadds add cmp ret mov insb daa (bad) call aad push fdivs adc pushf daa push jp pop push inc stos dec roll xchg cmp push mov ret mov jg mov pushf (bad) pop jmp mov dec (bad) leave xchg jb cmpsl xchg inc dec mov xor inc push push and jae push or dec lcall repz cs dec divb push and add cmp jmp cmp shrb add jg and std ljmp aaa icebp outsb dec inc xor cmp inc lahf call out push mov sub mov addr16 pop xchg adc xchg int or xchg subl sub sub daa push cmpsl sub xchg data16 addr16 cmp jge sub gs lods popf mov test mov sub push subb cld jo xor xchg jle imul int (bad) daa or arpl repnz mov shll mov mov hlt adc cmp cmp adc cmp xchg shr pop into sub or jno into lods jo xchg scas add push inc loop sub pop push sarb sbb addr16 repz sub into cmpsl fadds cmp pop cmp dec cmp cmp cmpsl int loop jno,pn cld mov int ljmp xor inc das movsl jge int or test (bad) scas pop andps xor ja sub leave nop mov fsubl sbb scas and mov fist xchg pop cmpsl pop cmp int jbe das mov xor test sbb das jg ds int mov push testb add jne dec adc push xor xor inc roll lea in mov xlat repz out inc in cmpsb ja push arpl sub cli sbb sub jmp scas sub aam cmp xlat xor gs push in aaa mov (bad) lds lcall jecxz adc movsb test sub idiv fs sbb sub push popf mov mov movsb cmp mov in cmpsl pop stos lcall sub sub dec pusha mov (bad) fbld add cs sub sub lret inc outsb pop repz rolb dec test in outsb in sbb inc sbb lahf (bad) call sub pusha sbb push insb sti int and lds movsl sub cwtl fcoms jns mov sub pop push loope or sbb push add pop addr16 cmpsl fbld mov lcall or (bad) dec sti xor cltd and jg shrl or (bad) or jecxz lea and scas pop cmpsl test in and insb lods cmp sub aam mov mov mov sub lds sub jno jge lret in (bad) and fs mov cmpsl mov ret push xchg ss adc dec pushf jmp push sub mov inc mov movsl aad sbb lcall fyl2x mov cmp into jbe cmp push dec cmpsl sub pushf fdiv sti sbb xchg in sub mov pop jl mov stc aam inc lea enter sbb mov add fsubrs cmp sub cwtl daa dec cltd out mov sbb int sbb mov ljmp mov cs leave sbbl test sub outsl xlat mov sub mov or fisttpll sub rolb sbb jecxz pop jo aad mov pop ret mov jp loop fcoml rorl mov mov movsl div ds lock nop lods mov sub mov scas lcall sti push mov pop scas in sub sbb jmp mov sub mov ret jg sub out jecxz jb jno std sub mov dec jl shrl sbb sub push push xchg movsb repz das xchg push sbb sub inc and (bad) pusha xchg test xchg test fldcw sub (bad) subl mov idivl sub xchg icebp xlat sub mov xor sbb lea xchg dec out mov cmpsl lea sub insl clc idivb xchg sub jne test (bad) repnz lea jecxz and je pop and mov shrl pop std add test or int3 mov push (bad) test (bad) cs fwait sbb sub stc lret jg push dec dec push jmp adc cs stc loop ds test pop cmc adc jp into inc ret xchg fnstenv sub xchg xor pop cmpsb lods das lcall jb jmp or mov movb stos jnp cs adc out arpl push sub xor cwtl sub (bad) divl movlps push cld (bad) mov dec test out sub xlat aas lret dec sub xchg xor push and adc mov adc aam sub out outsb addr16 testl cmp push mov fwait cmp cmpsl sub fstl sub and lret mov xor lahf xor sar adc inc or ljmp jmp mov shrl cld cmp ret mov mov cltd lods pop add lods jl xchg jns enter sub dec je mov insl mov sub push adcb sbb idivl xchg mov cmp mov hlt (bad) xchg inc mov sub cli test lret adc cmp xor lds jmp jns sub jle add push fwait xchg cs mov orl out ret mov sub fs xchg mov incb inc cmp sub (bad) cmp sub dec mov mov lahf or lahf cld jmp es adc add sub lock gs in push movsl inc mov (bad) rcrl hlt out add cmp cmp mov jecxz in popa dec and lcall aaa mov sbb outsl sub pop mov push dec (bad) pop bound sub (bad) test jp cs sub mov cld cmpsl cmp dec jg,pn test cltd out mov popa out xor dec add data16 or push fmuls das sub add sub xchg sub shrl fwait mov pop adc pop scas addr16 mov sbb loop cltd cli out cmp hlt mov loopne imul int cmp fcmovnb out imul lahf sub scas and xor sbb ljmp out es mov jle cmp mov lahf cwtl sub dec mov cltd mov cld xchg call insb fildl in fist (bad) iret (bad) jns sub scas sbb fsubrs and leave ret ds jnp sub xor sub loopne push not mov loope xchg (bad) cmp jb lods mov and lods add sub jg movsl xchg inc xchg js jg pop and (bad) mov jl sti push daa or inc les stc xor or sbbb mov call or xor sbb jmp bound pushf orb sbb or and cltd jo jb mov sub hlt push fmuls add sub outsl pop push cs bound adc call das push pop cltd lcall push add pusha mov xor icebp add mov outsb out fildl mov xor push pop inc leave mov out add test fs sub gs js pop add sub or popa pop ret fidiv cmp or (bad) lods add arpl int3 cwtl ret inc xor add mov sarb mov pop inc lret xchg out fsubrs lcall adc js sub pop mov adc fiadd add mov inc out sahf fcomps dec pop fwait sub scas mov cs (bad) ja push out pop sub push adc sub cld rcl xor xchg (bad) mov fldenv ss jns xchg call mov inc std dec dec or mov sbb add in pushf test mov je xchg mov aaa loop cmc orl adc fisubrl sbb inc pop insb movsb stos and jne jmp sub in dec es adc faddl adc inc add sbb lret sbb mov and (bad) std fldenv xchg cwtl mov push mov sub inc mov sub mov push ss push push jge mov bound call xor xchg loop sti xor mov mov sub pop bound xor adc (bad) out jne jae std lret xchg mov cmp xor pop sub mov lahf enter or jne ss into loopne adc and sub ljmp paddw mov add sub lcall cmp mov jmp ss sub test mov fwait enter es add dec jbe daa and lcall sub fwait lods add sbb test (bad) cld or hlt movsb movsl xor stos leave addl push fmul mov bound xor dec inc mov sub ficom rclb push jecxz or push icebp cmp pop sbb xor mov push test and jg mov add and cmp mov dec push pusha mov sub clc cwtl mov mov add outsb sub icebp ficompl mov pop xor fdivrl xor lret (bad) jbe aad adc loope push jle sub or enter or or lahf movsl in jae fisubr xlat dec test and mov push dec jmp mov adc dec leave cmp dec mov pop shrl jnp ret push fwait loope test movsb add mov sub (bad) fnstcw sahf sub outsl xor inc jno and dec adc cmp ret dec and push popa add insb and sub jno cmp inc or arpl in and ds inc push ja addl xchg sub adc mov lahf mov cmp or sbb inc dec add dec sub add pop mov daa push fld stos (bad) (bad) mov jecxz and push jmp dec sti push sub pop addr16 xchg mov shlb mov sbb out jae and add push jne inc fdivrs mov jmp sub rclb sbb hlt sub mov aaa je arpl pop lcall (bad) jo cwtl sub jge xchg cmp sub sahf fs jb fdivs inc sub lds addl mov sub xchg in pusha sub jbe jecxz add loopne loope test repz out lcall pop leave add xor mov push mov rolb sti daa pop inc xchg cmpsl es sub mov mov iret jo inc or andl lcall outsl enter push mov fldt out out fmuls jmp inc xchg mov lds or jp enter leave sahf fwait xor call imul mov scas mov inc addr16 cld push cmpsb std ret aas xchg xchg xlat push sub insl mov inc in ficoml cmpsb dec aaa sub gs pop out sbb and dec mov xchg (bad) je (bad) in lret es inc stos mov sub leave jl sub push pop mov addr16 dec ret or movsb test pop sub aad fiadd lcall inc and (bad) outsl bound pop (bad) (bad) fildll aas dec xor into jp stc cmp sub jne sbb xor fidivl xchg push clc ds in and daa dec cmp mov adc mov cli and push mov or push iret loopne lock ret push fwait xor jle add loop or lock pusha sti dec test inc in fbld sub cld pop fwait dec test pop jae xor cmc dec adc les (bad) leave lcall orb mov adc xor mov inc mov push dec xor mov sub rcll sbb and addr16 xor and scas cltd ljmp sub mov out sub mov sub bound adc mov data16 sub and sub clc pop mov ficoml adc sub pusha dec mov and push sub mov push push scas sub into xchg or ret or sub mov adc push addr16 negl in adc xlat push repz call std arpl pushw cwtl inc mov cmp xchg sub (bad) jbe sbb mov push out sub xor add mov pop (bad) test decb mov jecxz imul push repz sbb push test sub outsb sbb jbe (bad) int daa shr movsl mov std dec decl icebp push adc div test scas jmp pop dec add and imul jl jecxz mov fcoms lods faddl mov sbb pop cmp push movb cmpsl (bad) bts sti push sahf dec test bsf lds push pop push sub sub leave ret jnp lcall add cvtpi2ps jae xor inc mov icebp pop inc outsl imul test xor and pop lahf (bad) sub sarl imul sub push in xor adc (bad) ss add lock pop cmp ss sbb sbb aas pop ret mov push push cwtl jae push leave data16 jg fdivl push lea hlt cmp repnz cld leave cmp lcall addr16 cld (bad) int3 jae aas cmp jg aam lret dec jb mov adc dec cltd pusha ss jne fcmove adc pop out push or cmp (bad) and cmp xchg in out add push adc jae rorb movsb push jp int insb xor inc out movntps pop data16 rsqrtps cmpsl or jl dec (bad) cmpsb mov mov ja out leave xchg (bad) xor (bad) rcrl mov mov fcoml add mov xor int dec mov not and out cmp xor iret sar cli or dec std fld pushf andb daa add je repnz aaa push stos pop inc data16 mov jnp jns aaa pop int fs aad mov hlt ljmp sub xchg lahf xor popa and test cs jbe add sbb jo push repnz int mov pushf mov ja sbb cmp jb (bad) cmc jnp jp movsb data16 int ja mov sub mov das inc jle mov jno adc jbe and or xorps jle daa jae add cmpsl into and in adc pop sti push data16 test pop sbb dec or xor jge mov fwait pop ja imul (bad) mov push jge jns jnp jno scas xchg xchg push mov pop lods iret adc jge adc push push (bad) sti sub adc out movl jo push jo aad insb cmpsl leave cld lahf je jp movsb loop dec fsin dec mov inc add lods mov test cmpsb ja inc lcall pop call jp test and repz leave push sti mul xor dec jo in fstl xchg (bad) mov pusha push adcl jbe pop inc or icebp add jno push xchg sub scas or xchg dec xchg xchg cs mov cmpsl stc loop push jns aaa sub pop cltd and jbe inc inc notb push jl adc mov leave xchg push and sub fmull pushf and leave test sub (bad) sti xor xchg sbb adc inc rclb jae xor and fwait sub out sarl jo jae lods scas adc sbb lret mov aaa xchg roll insb lock in sbb xchg push int incl dec call addr16 sub mov inc sub ret ret stc cmpsl sub push in dec (bad) mov dec ds mov jbe movsb in aad sub adc sub push sti repnz stos into inc push aam mov and mov lret loopne add out cmp stc cli pop les or sub pop repz and int sbb outsb add pop iret sub aaa sub inc xchg xcrypt-ofb cmpsl sub pusha mov cmp sbb in jb cmc fdivrs mov add andb sbb (bad) sbb test daa lahf int add mov les add xor in inc add xchg dec call mov clc push sub cmp dec push sub (bad) push sub mov sub nop xchg xor shl (bad) rol movsl gs sbb push pop popf rolb pop repnz add ret push mov insl xor and les loope jne mov push sub or cmp xchg pop outsl inc scas enter push sub mov out cs lock push or in jb push hlt sub and xchg pushf inc repnz insb fisubr stos les xor popa jl (bad) bound xchg mov into xchg fwait pop and inc dec jl lahf lods out adc sub addl call adc mov adc fimul mov adc add popf outsl mov pushf mov push ret and std cs fildl mov ds popa dec jg lods pop ds lods add or cmp movsl cmpsb mov sti cs sbb push int cmp and std add or cmpsl outsl cwtl jb or fs in push dec or mov (bad) iret pop out fidivl shlb inc sbb pop sub cmp nop (bad) dec out xchg mov hlt pop mov lret add test dec push sbb pop fidivl js popf xor sarb aad jb enter or xchg rol fldenv sub or or lret loop (bad) sti sub fucomip xchg jbe cwtl loopne jmp je mov out negl sysret out sub jns dec xor pop sub cli (bad) loop push sbb subl pop outsb stc fstpl or sub mov jmp sbb call cmc aam jmp out daa (bad) (bad) push (bad) cltd call ret push int sbb add pop ret (bad) and scas sub dec push push dec icebp lret lahf sbb jae rcl add or pop xchg (bad) cmp out sbb inc sbb loop lea out or (bad) or leave or test lea sub sbb fstps pop leave aam ret call dec mov leave lret xchg cmp sub fwait scas inc rorl test imul jge cmpsl lcall pop inc stos lret cld adc test jecxz leave jbe fildll (bad) lea sahf jle xor push call sahf cmp mov loope incb cmp jno jmp mov xor sub sub sbb and out inc test or stos (bad) mov outsb cmpsb in add mov xchg push xor mov sub aad jmp out js repz dec pop mov pop or popaw out dec xor push and xchg (bad) mov jae or cltd pop jae mov decb cmpsl mov and daa (bad) push dec xchg pop pop push loop shll dec cmp sub xchg mov rolb ror ds lret jp cmpb pop xchg add and push movsb imul sub repz fcoml push xchg cmp push push and call shlb jno fimull cmp lock dec pop stos nop test out jae sub inc xchg bound jmp cmp imul or push pop imul stos sub ret and imul out sub and insb arpl fwait stc std mov inc jge mov push xchg mov mov pop xchg jmp fistpl push cmpsl and mov cmp aad popf lahf mov cs rorl and dec or ljmp dec rcll cmp dec jmp jnp pushf (bad) test jb mov and test js adc aad push imul std fcomi pop adc movd mov mov sub pop in mov or ljmp rorb pop faddl or lcall dec push xchg or bound idiv sub repz fcmovu push or lcall adc pop dec push shrl aad fucomi lock jo xor lcall and add movsb xlat mov mov sahf daa and inc or xor mov gs pop jg mov testl fisubr cltd ljmp scas push pop mov notl jge ljmp enter stos test lcall cmpsl mov xchg in inc lea mov (bad) jno xchg sbb das fwait lock movsb repz mov dec xchg xchg ja (bad) shlb jmp in repnz pop sbb (bad) push ja push nop ret sub mov inc xchg sub mov sub push stos cli mov rcll xchg jle or inc cmpsb mov jp rcrl push stc adc movsb rcrl adc cld xor repz add lret xchg test xor pop jmp sbb dec jp in mov mov nop in mov or sbb stos dec jmp mov fwait int jae mov dec shrl jmp inc push cmp and test aad cmpsl leave pop and outsl pop fdivl xlat icebp jb inc push repnz inc add fstpt sub push cmpsl imul cmp (bad) push xchg ss or lock cmp imul sbb dec pop inc dec repz lcall lahf push test in dec subb scas add cmp dec insl jle dec mov and push and (bad) icebp pop out in sub (bad) jmp loop jns jns mov mov lret mov sub bound mov cs (bad) dec cli xchg mov es dec xchg fimul push ret add mov mov pop lcall imul adc mov jns push sub push dec sub push pusha sub jg (bad) jae es mov push push in cmpsl jno into (bad) inc xor cs lea ret sub jp imul insl rcrl fsts jns push lahf subl repz jno fucomp out pop scas sub sub pushf push mov test sub rorb adc std xchg and daa (bad) lock cs aas mov lds or mov pop mov movsb jecxz sbb mov test mov fistpll cmp call xor in adc leave repnz and loope jno dec xor mov pop jno inc pop shrd xor pop icebp pop mov jae popl movl cs (bad) add dec leave jbe movsb jae,pn add and sub pop test and inc pop add imul cmp push pop pop pop inc lahf das fiadd int mov ds (bad) repz sbb shl sub xor cmp or hlt xchg jo loop cmpsb inc or rcrl lcall (bad) lahf inc aaa stos push jo jp push lds push pop out arpl xchg ss cmc scas push scas xchg pop jo jle or fsubrs addr16 cltd mov jge aam xchg sbb dec nop stos (bad) and jp sub iret xor (bad) xchg ret int arpl dec test mov mov sar mov (bad) dec xlat xchg add jmp pop dec imul inc sub loope scas pop sub fdivrs lds test imul rorb ss outsb stos mov push clc (bad) xchg xor sub ljmp cmpsl mov fmuls adc push mov or cmc pop paddsb push lds outsb pop sbb jbe mov mov repz aam mov pusha xchg in mov sub imul xor mov dec sub xchg rolb sub mov cmp sbb imul cli xchg mov dec es cmp xlat pop out jecxz add add mov rolb ss and push mov sarb bound insl adc jno inc mov and dec mov test xchg mov xchg or rcll add cwtl ss sub dec jnp sub lret leave add sarl or les call and ds adc ss xchg lcall cmp push jg push jecxz fwait and mov inc jbe jmp dec cmp test int3 xor mov cwtl aad lock push pop mov jmp clc les dec mov inc aad in repnz adcb clc adc fwait jg adc fmull xchg sub push jo outsl nop mov fsub in jl sub mov rcrl cmp mov xchg xor cmp lret ds sub mov and test mov loope imul cli data16 xor adc jmp xchg mov push cmpsl sub imulb icebp cmpsb and lret cld cmp add push orl inc sbb pop jns iret and int3 lods dec inc dec subl rcrb faddl sbb out mov (bad) push cmpsb or sub inc fimul cmp loopne mov into stc add test sub inc repnz inc imul outsl int3 stos and cs sub stos add (bad) xor jg pop mov loopne ljmp mov in test sub pop push sub mov mov jp inc out sub das xor push sub out pop inc ret in scas mov adc push jmp pop and sub in lahf mov (bad) call gs sub jg outsb (bad) pop pop cs push cltd mov sbb sub fistpl xchg sub push inc dec pop add (bad) cs dec fdiv les call adc pop xchg sbb mov into mov lret sub lea pop jb push xchg (bad) and xor out bound movb loope insb cli jge out into dec cmp adc cld bound stos mov inc add outsl clc rorb cmp into sub jmp stos sbb xchg ret add cltd mov push int3 mov fisttp xchg test or cli or pop pop inc mov imul cld xchg jecxz adc push mov pop or jns sub sahf rolb mov add and test mov mov in sbb and pop jae sub dec add cmpsb push imul leave mov std bound xchg idiv sub jns adc adc mov fdivl iret adc test fsts std sub lock dec out pop cmpsl (bad) cmp pop (bad) cmc sti jbe js push dec xchg jns sub inc imul lods push xor int sahf fimul pop fdivp stos sub (bad) cld je arpl sub mov sub (bad) cmp call test ficoml lods sub dec jmp xchg (bad) sarl popa leave and js xlat jo sbb sub cmp outsb sub pop shr xchg push cltd xor add arpl mov push adc inc sub xlat mov (bad) sub mov xchg inc (bad) arpl mov int3 ja fnop cmp sub std and dec sub lret mov lcall out sbb call jns jg inc movsb cmpsl cltd aas and pop xor jl pop test ret in movb push js jge outsb cs pop mov add mov imul sbb rol sub and pushf sub cwtl in ret sub sub dec push int3 cmp pop aad pushf sub cmp jno lcall xchg cmp sub ss or pop (bad) mov aas inc jmp and push sbb or sbb in pop mov inc add mov ja les (bad) lds xor movsb mov pop jmp dec decl xchg xor mov (bad) int3 sub call sets jns mov lahf sti stos leave data16 out (bad) jle sub cmpsl xor add or test inc cmp in test (bad) xchg jbe js fnsave (bad) mov das (bad) xor dec shlb mov mov push push xchg jnp lock inc (bad) jmp fcoml bound push mov pop xor cmpsl leave shll negb push test lret addr16 xchg imul cltd add call cmp or fsubrs and mov inc or int xchg mul mov fs fyl2x arpl jle repnz dec je pop (bad) cmp jbe ja negl xor dec bnd sbb sub cmp (bad) cwtl imul stc shrl mov bound jns dec xchg and jge popa cmp aam xchg pop push bound lcall xor and pop push adc or and xor scas lahf cmp aad xchg jecxz mov cmp int3 xor xlat aas mov (bad) xor and mov leave call test jl dec cmp dec xorl fldenv fiaddl mov lock xchg push (bad) popa add int in andb pop ucomiss mov scas cmpsb mov mov adc jns pop push pop push sub (bad) jb dec std aaa mov imul push xlat addl jne dec lock daa popf adc mov mov or sub jl mov dec mov sbb lret adcl cmpsl out pop dec adc dec sub fmull into insl addr16 (bad) cmovg mov push jmp dec pop inc stos (bad) hlt enter cmp ret int (bad) pop xchg mov sti cltd bound sub and jp (bad) push sarl testb push fisubr pop inc leave lods xor in addr16 mov daa cmpl add sub jne (bad) fisubr pop cmpsb push scas out and push fcoml cmp stc fcompl pop scas ds sub xor xchg out sbb cmpsl push add adc popf hlt int3 cmp inc int and sub imul int push (bad) ja dec xorl mov jb cmpsl cwtl stc jns pop addr16 add sub mov mov inc (bad) loope lret fxam pop mov sub jae xor jmp fstpt sub sub sub pop aam lret inc add jmp jne xchg rcrl cmpsl sub lock cmp inc stos insb inc sbb (bad) hlt clc mov test cli and push sub mov icebp leave in push and push subb mov or mov push jmp cwtl int call and push ja mov or movsl sbb sbb (bad) dec pop pop mov dec fistpll sub out or andb push mov lcall (bad) dec out cmp aad pop sub bound xor cmp ss aam xlat adc pop cmp sbb cwtl stc push mov jb je clc fdivs fs ss dec js pop xchg stos in mov pushf cmp leave inc xchg test dec dec mov fnclex push insb jg cmpsl daa int je not jmp sahf testb jae push mov jg outsl add insb and mov cmp xchg jae fisttpl into fbstp movsb jmp xor mov popa (bad) and out add mov jge data16 and add mov and push mov rol (bad) cmpsl fwait mov jnp and (bad) stos les push jo aaa std mov int push and push mov sahf fisttpll test loopne xor mov inc pop (bad) xor int cmpsb and movsb cmp les test stc in pop inc inc adc push nop and leave mov mov xor mov push add mov mov cltd xor (bad) and enter mov leave xchg mov in fwait lock and insb je nop xlat shll (bad) mov in cwtl inc push jo xchg pop cmp jp cmp sub inc xor add dec cmp shrl popf dec jg or leave repnz test scas dec shl lret xlat xor or (bad) xchg in pusha dec mov or mov mov mov cmc ja mov subb pop loope push nop sub jp inc enter int jl fcmove mov or dec add mov cmpsb sbb sub jl sbb fmulp into cwtl dec push dec mov sahf frstor inc out push (bad) jo adc addr16 jl xchg and fidivr (bad) pop mov add push jge (bad) pushf sti jo int cwtl or and push loope xor call xor (bad) push daa jns arpl inc js cmp mov pushf out cs mov fidivrl mov pop sbb aaa les imul add es jbe adc fimull xchg mov inc dec xor push jbe clc jecxz lods leave fild lods mov dec cmc xchg out pop test addr16 js add pop fldl inc int fnstsw mov cmpsb jo dec std aaa or fwait les mov inc in dec les push cmpsb xor pusha lahf push cmp cwtl mov mov out cwtl ja xlat scas mov jmp cmpsb aad jne cwtl pop das jmp add enter lock mov dec imul cmc mov xor cmp sbb jnp out mov int adc ficompl cmpsb add cld stos cmp imul push dec mov out sub mov movsb sub inc aam fwait sub imul pop cmp fsubrs pop pushf cs into or into sub test data16 lret jnp stos and adc mov in and jl negl loop sbb push jmp mov jl mov jo add or mov movsl fwait push stos dec pop pop xchg out test push pop loopne fs test stos imul in dec sub dec mov lret xor lcall notl pop out (bad) sub xor cmp inc (bad) ret test sub dec (bad) mov mov sub divl xchg add sub push dec sbb push ss daa sub sbb cmp or (bad) repz or sub inc test fprem1 xchg das sbb add call (bad) movb xchg adc inc cwtl stos sbb icebp push sub mov push xchg xchg sub aaa and ds cmc cmp pushf std into sub sbb mov jge pop orl or sub or add out outsl ss cli adc mov loopne lods sub inc and mov xchg bound push iret mov sbb push fsubp sub inc sub inc dec jb (bad) pop inc ret imul daa inc fiadd shrb inc or insl lods adc xchg test inc cli rcr push xchg xor or dec jle xor sbb sub ficomp addr16 inc or cltd lcall movsl push pop sti xchg test mov mov js leave insl xor add repz bound or cli lret cmpsl sbb push or sub pop jne je xor pop out hlt inc sbb xchg mov orl dec bsr enter (bad) lods scas test sub movsb loopne dec arpl leave mov push cmpsb or sub jae and icebp lahf daa sub or mov adc adc imul sub notb sbb out fsubrl sbb add pop outsb cs jmp xor into in out push sub out lock lods mov push idivl and sub mov dec push add cmpsl push xchg pop clc and dec cmp daa je xor int add push mov and mov dec xor rcl test xor lock out cmpsl and outsl leave (bad) loop lahf and sub cli jae and movsb mov jbe xchg lds dec adc mov loopne xor inc fldenv jbe cmp pop in push (bad) test push popa and sub mov xchg leave mov lods adc cmp mov fs cld int3 push add stos int push xor rcrb cmp and push fdivs mov out sub cmp add frstor (bad) int cmpsl cmpsb xchg mov (bad) stc popf mov test jp push aad or cmp mov cmp leave cmp (bad) pextrw mov fcmove test pusha push ss int cmc xor xor lahf ds xor cmp fist sarb int xchg fistl ja push or popf mov insl setnp sbb sbb xchg mov int3 and dec pop scas out test fsubl fcomps and (bad) adc movsb dec in inc mov jmp sub call lods pop sub stc rcrl push loopne jecxz jmp sbb sub xchg inc xchg cld scas sub sub and pop outsb xchg stc jmp sub push jnp cmp ss or sbb lret sub push lods sbb add xor je (bad) cmp jns sub lds data16 xchg xchg sahf ss es mov cmp mov addr16 test dec dec leave fs push ds cmp (bad) xor pushf mov mov cmp inc or fdivl sub scas imul sub pop out das xlat jbe pop cs or daa push icebp push or sbb jp adc imul outsl mov fwait stos jmp notl fsubr cs xchg cmpsb les scas into js cs sub jecxz jmp sub push cmc push pop mov (bad) outsl mov daa jno sbb rep movsb jp cld push push sub insb adc jecxz jo ffree add rorl and fmull mov mov adc leave cmp outsb es add incb sub lahf sub push mov sbb mov jb mov enter push xchg inc adc sub push xor or sub movsb test pushw mov sub mov jg pop sub and insb shll nop pop xchg adc mov fimull lods mov sub dec sub dec sti sub in mov adc mov adc arpl pop mov pop sbb or xchg push dec (bad) fwait jno xor leave jp mov divl inc add jbe enter (bad) (bad) dec ret in lds xchg ljmp jne add sub sub xor and xchg cmc push fwait outsl fcoml popa jmp lock xchg jne,pt sub sub dec in mov repz movsb mov pop subb or sub insb lret cmp adc sub add test in push cwtl xor cmpl das mov push jle,pn les cli cmp pop bound jle dec aaa cmp cmpsb bnd jo fsubrp push call xchg and aas sub mov sub scas sbb mov stc aaa adc js dec sbb mov (bad) and test xor push push push pop xchg ss inc pop lock and cmp aaa cs test adc orb dec sub pusha cmpsb std jp cltd xor iret dec lcall xor leave add add popf push xor jle rolb rclb and mov jne xchg and test cs cli sub les sub mov sub inc rclb ljmp and ffree pop call aaa das push cmpsl movaps lret mov xor addb lods jge push das dec cmp repz add and mov fimull mov push pop xor dec js mov imul aad dec je pop sub mov dec sbb and das xor insl fisubr das xor mov (bad) test ljmp insb sub ljmp sub xchg lds (bad) jnp je add fdivs adc and cmp loopne xor (bad) in stc test push stc lods push stos std sbb xchg pop pop popf scas dec xorb loope (bad) outsb cmpsl mov or push daa das jl aad or mov jge data16 jg sub out lcall scas les push jae je and cmpsl leave mov jo lods int3 ja out jae sub pop sbb cli inc mov pop jns in cs or bound push adc dec imul movsl in cmpsl mov movsb ret push sbb xchg ljmp mov mov fcmove push pop popa push out dec (bad) or mov pop inc or (bad) aaa std xor stos sbb add and idivl cmp cli add push push das in and repnz jecxz out pusha addr16 dec mov loope,pn sub push mov xor iret dec sbb xlat xchg vpmullw std xor push es enter push movsl fld sub hlt (bad) fxch data16 es pushf enter lahf sub in aam jle fucomi mov (bad) lock (bad) xor dec popf sub sahf (bad) js gs jo jge int dec sub sbb movsl daa or hlt pop mov dec into call sub fadd add mov repz loop addr16 test test mov jb (bad) sti fsubrs push jne sub icebp jnp dec dec mov shrb stos scas iret stc jno sub mov imull mul xchg scas pop inc aad iret clc imul sub dec mov movl pushf adc mov push in lock jge inc enter xor stos sub jle push sub aaa ja push int3 ja fldenv cmp sub (bad) lock sub jmp xchg add sub sub ss loop lret (bad) out andl push xor test cmpsb fwait shrl inc push inc mov push bound xchg leave cmpsb gs mov lock adc (bad) in dec andl push sub jb mov mov sub out or or xor aas out sub ret andb jmp icebp adc ror loop inc adc bound aaa mov fisttpl pop aam mov (bad) in mov adc sbb test push fs sysenter ficomp or imull sbb shr cs mov inc aaa xchg inc xlat push addr16 cbtw add add ret mov popa leave dec push fidivl dec mov out fmull das daa lea xor xchg aaa leave xchg dec enter (bad) push scas cmpsl add push jg mov jmp fdivs sub xchg push pop jb rcrb or lds add negb adc and jo dec add xor popf ds mov outsl outsl inc push dec sbbb leave push cli fwait sub jo xor movsl dec mov movl (bad) movsb cs sub adc or adc xchg scas jl cmp subl out out mov cs int cmpsb and adc test xchg xor xchg (bad) jmp test outsb dec cli cmp sub call (bad) insl sub lahf pop dec test xor fnstenv adc cwtl popf xchg pushfw push rclb mov arpl inc andl inc add pop or sub popf sub adc or pop push add push dec cld sub pusha push sub xor arpl fucomp cld sub xchg fsubrp hlt adc sbb inc add cmp xorl push decb cmp shlb pop xor lcall (bad) jp sti cmpsl add sub xchg adc jnp,pn js sub imul cmpsl push push mov sbb in pop bound int3 addb sbb loope test cmpsl jge push cmp repz cmpsl cmp xor inc (bad) int mov sub dec shrl negl fsubp sahf sub pop es sub xchg mov sub test xor into rorl jns sub mov pop push push push fwait scas push test icebp outsb bound jbe addr16 xchg cmp inc ljmp sub mov xchg scas es jmp cltd leave bound lahf xor mov sub pop or imul xchg cmp push addl and jg mov ficomp mov movsl sbb sub jmp mov jl mov and (bad) sti xchg popa stos stos bound out dec sub out fsub push cmp sarb (bad) mov (bad) pop jbe movsl mov push mov fcomp sub adc sahf cmp dec in inc sarb push scas (bad) iret jnp or sub sub shl pop mov jae aad icebp xor xchg test and or fimull xor fisubrl push movsl sbb mov sub movsb idiv xchg inc inc out add and lods jb jle sub adc inc sub push test aaa sbb push sub jge ljmp arpl add or into jns insb xor sub inc repz or xor icebp jbe xor xchg (bad) cmp lret lahf adc xchg mov enter sbb std and (bad) sahf mov jle sarl std repz push loop inc cwtl cmp lret aaa sub leave inc cmpsb loop mov pop add mov jp jg sub ficomp (bad) and xchg loop int3 insl (bad) call setb jnp mov pop lock dec inc inc lods mov (bad) adc loope cmp movsb pop dec insb icebp mov add or fidiv mov jge das mov mov stos (bad) inc pop dec xlat addr16 jbe aaa ss imul adc test test jg test cmp imul xchg lret cmpsl jl dec or sub nop/reserved cli loope mov jb (bad) push jle sub popf outsb fcmove jnp pop cmp fs and inc shr dec adc cmp inc ljmp pop ja mov test mov sub mov lahf cld data16 jb lods enter and fimul shrb mov push inc dec (bad) and sahf ss fucomip mov ljmp (bad) iret addl xchg sub push xchg cltd mov out scas and sub (bad) mov gs lcall movsl mov sub cmp sar fsubrl pop mov push cltd push iret push enter hlt sub addr16 dec sub test sbb inc call and sub fnop cs add mov sbb jne push or mov inc mov loope adc fldenv sub xchg cs jb push sub push repnz xor sub mov dec xlat adc fist cmp iret test scas ret mov and xor imul add and sub jmp aam loope mov sub outsl mov jae sub iret add mov loopne imul and push dec jnp push (bad) sub sbb fisubr pop icebp xlat jnp cmc fstps sub test pop (bad) xor loop lock sub inc cmp pop insb lods inc rcrl (bad) out sbbl sub mov push test aam adc xchg and or stc bound mov int3 mov sub add mov push lock test stos dec cli dec mov xchg cs or mov cmp call xchg xor inc jmp out jb mov (bad) sbb cwtl inc ja in data16 addl mov jns fimul dec dec xchg orl sub cmp sub (bad) mov xor mov das xchg sub mov sub sub cmp dec sub out fucomi out out leave lods sub (bad) dec cs mov (bad) test data16 fdivrs inc mov sahf xor mov stos gs inc mov sub mov xchg enter lahf push pop jae add mov sbb pushf out sub adc xor jo ret pop je psraw jo sub movsb jecxz and sub inc add push jnp pushf mov add les push jl fdiv dec sub dec imul push push and rorb mov sub pop push dec movsb daa imul ret jmp adc mov mov pushf ds (bad) xchg xor adc mov mov sub push mov les inc fild ds pop mov xor xchg sub dec jg sbbl mov test lret xor call dec sub loopew jbe iret jge aaa pop daa lahf ficom test ret mov mov ss out scas xchg scas je or je sub (bad) cli jp (bad) (bad) cwtl call cmp push mov int or add leave pop (bad) cmp (bad) cwtl dec addr16 mov xor cmp jg push (bad) adc pop mov test and add fisttp pop orb lock sub xlat sbb sub add fcmovb push (bad) loop and cmc mov or subl jae (bad) test es int daa addr16 inc lret popf mov xchg push adc xchg mov rorb jne jbe iret in jl cld xor ss pop in cmpsl adcl add stc loope adc mov sarl lods pop loope pop in or pop sahf jmp jecxz vdivsd subl insl pop push js jge adc sub popf adc add inc dec (bad) jo lcall fidiv sbb xchg dec jae and iret pop jb cs xchg stos mov inc (bad) jae inc lcall mov pop subl outsb fstpt loopne insl and adc jl aam adc jnp pop and fstpt xor sub lcall sub daa cmc and jmp daa fs inc pop nop xor in test in push ljmp fistpll insb cmpsb js mov out xor adc push xchg sub dec add sub in cltd push bound pop aas mov xor and cmp and cli sahf std dec lds adc mov ret adc gs dec sub clc cmp mov andl sahf or fldcw mov add dec call jmp test add cld dec (bad) ss push cmp or sti adc mov inc push pop sub or in inc mov pop outsb xor or dec sbb test fwait sub into sbb cs and sbb daa push aaa jmp cs inc push pop and cmp and test fs push sub sub cwtl call insl pop popf sub and (bad) sub xlat imul sub pop and lods and cltd out and xor inc or lea addr16 xor jb cmpsl out jp jnp cs test fdivs ficomp data16 sahf mov iret adc loopne sub cmp or dec in inc lea (bad) (bad) divb rcr fdivl ds dec sub int3 jge jnp sti loope sub test aam cli lcall inc xor dec sbbl adc sti dec insb test addb jl into shll inc xor cmp das sub sub test ljmp (bad) mov push adc inc push cmp dec sti sub les push test inc inc std test mov sar std jl mov scas js sub dec sti sub xchg out sub mov jmp lahf ljmp or (bad) bound rdmsr (bad) jbe or repz sub (bad) lods js les push jl push cmp push iret loope jecxz mov je cltd (bad) mov sbb rorb cmp push or and mov push dec loop mov cltd test lds sbb fidivl ret repz push icebp jl jmp cmpsl out and sbb mov push enter (bad) inc test fwait sub push sub sbb pop xchg push test daa fcoms pop rcrb iret sbb dec mov xor pop sub movsbl fucomip adc sub (bad) ja xchg mov cs clc mull cs decl pop push jbe xor xor icebp xor int3 scas adc clc xor ljmp xchg sub adc adc stos pop adc js dec loopne iret jp xor (bad) xchg bound and pop lods fabs clc rcrl inc dec sub pushw jge sbb stc sti or sbb or insl fdivrp dec push sbb mov sar imulb mov nop pop les iret test shll (bad) aam (bad) mov into dec std sub jb (bad) xor sbb clc cs pop int fdivs (bad) sbb es int or jns clc add mov mov cld and cmpsl std push iret jge add lcall in adcl pop jo insl mov pop lcall pop fldenv mov sbb add xchg cwtl xchg (bad) or mov aaa pop push adc cld out test out sbb or leave mov addr16 popf cld mov jle and cmpsl jl and or inc xor push push repnz or sub push subb add (bad) loop jle or enter push xchg les sub (bad) mov cmc sub cmp addr16 sti pop jns push dec push sub (bad) (bad) into in in pushf push and (bad) (bad) mov or popa sarb sub pop sbbl jp sub mov jo out stos and cwtl mov std and test push sub mov push shrl ds jae sar js test jmp sub addb xchg push jbe sti js xchg shl mov pop icebp pop inc sbb lcall mov in sub cmp or mov push in (bad) mov and bound rcl dec test jb aad adc mov leave in cs aam sub xor mov ss xchg cmp hlt sub test sub imul push paddw ret xlat jbe bound sub fldenv xchg and in jnp inc dec stc and mov xlat rol or ds insb pusha cli dec push sub xor xchg sub sub or sub cltd cmc xor scas popf sub das mov adc lods push sub shrb sbb stos mov cs js pop mov inc cmpsb and leave xor fldl sub rorl jmp loope fstps test stc cmc jb je mov insb dec idiv sub jne mov ror lahf outsl mov adc loope dec cmpl sbb test jb fldenv cmp int es loopne stos push orb push push ds jl mov sub sti loope mov aad xor and loopne inc cmpsl movl jno imul add arpl test outsl cmc add jp shlb mov cmp mov in xor push fdivl or dec addr16 xchg clc mov lcall xor push xchg push leave mov pop out mov cmp mov ds xor out je mulb cmpsb cmpsb mov pop mov int3 and int repnz mov or call mov sbb or dec dec stos gs cs mov inc daa fs adc cs inc js,pt jne subb xchg sub mov mov scas mov (bad) inc mov xor sub int test sub push jae clc daa mov andl nop out pushf xor stos lea sbb dec ret push sub cmove push jp fdivs (bad) jmp aaa (bad) aad mov test ljmp pushf insl add int jmp insl aaa fldl dec push jo jp push (bad) pop sbb xchg in jb inc pop lock cmp sbb inc inc shr adc loop pop mov clc sub stos lahf fbstp out adcl addl sbb lret add pop dec subl sub push out sub fcmovnbe fwait dec fidivrl sub popa lahf les loop cmpsb popf data16 sub or sbb sub es repnz xchg inc sub das test movl jl std aaa sub scas jp mov inc or cwtl or pop test inc sub mov xchg jo adc dec push inc add and sub iret cli adc mov and sbb and fprem1 cmpsb push mov ret popa std stos jmp es leave aas cld jmp aaa repz gs out mov add in iret stos and lock jb in sub sub mov sub mov ret and sbb test icebp fsubp daa aaa xchg sbb lods push (bad) pop outsb outsl mov (bad) (bad) jb cs (bad) jle mov mov inc jno push and (bad) icebp fnstsw sub repnz fiaddl pop and test lds sub popa insb adc sub in fcompl xchg repnz clc movsb orw dec add and sbb or push (bad) sub lock lahf or inc (bad) outsb pop cmpsl dec ss test add inc test les and sub or imul cmpsb and xchg mov fdivs jns push (bad) je jnp flds mov sub aas data16 mov js fisubl push aad cli gs (bad) or and (bad) fsubrs arpl (bad) xchg mov push test inc push jno or (bad) or out aas and fsubrl popf aas add out rorb push sub push push lock ret jg daa push push or pop mov out jmp mov in sub cmp (bad) cltd add pop sub mov (bad) mov call int cmp dec (bad) cmpsl fwait inc sbb out (bad) negb adc xor dec jmp iret sub dec jg sbb ds xor jmp cld cmp and jne fadd leavew sbb andb in pop daa mov mulb dec mov aaa (bad) jge cmp stos cmpsb mov sti jmp dec mov or jnp sbb ss jl cmp dec icebp xchg mov or out jmp stos add int and in (bad) mov ret cmc imul mov adc sarl stc pop out inc push jo adc movsl inc int mov out ss push sub xor fsts adc mov jb ds push jo xchg xor dec mov and mov imul pop inc lods jb xorl sbb sbb clc jl cmpsl enter inc and or jg rcll and std pop add push xor jnp int fcomps mov xchg stc leave fidivr repz pop enter cmp aad xorl lahf sub cmc adc jbe leave stos mov mov sahf jecxz popl mov test xchg int add (bad) inc es lahf pop cmpsb outsb (bad) ljmp sub jmp inc pop ja pand cwtl out mov jl lret leave sahf add pop sub and out ljmp test (bad) wbinvd ficoml (bad) (bad) dec in ljmp cmp and aam das loopne lret js push cwtl loopne out cmp cmp stos aad sbb fcomp stos push test in or daa icebp pushf enter nop insl dec mov xchg sbb mov push (bad) push mov dec cmp jge jle lahf inc pop leave mov lret jecxz push outsb rcl cmpsb or sbb clc cmc inc movsb rcrl inc std mov pop lea adc (bad) add enter ss jo or mull push xchg in pop pop aaa adc mov scas dec pop mov enter xor sbb (bad) xchg loopew mov loop mov pop push xor scas (bad) sub imull xchg or add adc sub jl sarb jo cmpsl pop mov pushf sahf sahf addb dec imulb sbb pop cmp pop and xor jnp loope (bad) dec pop push repz fbstp jge inc jnp mov fdivrp pusha mov jne repnz (bad) push jbe (bad) imul mov cmp add and xor scas out or test nop jp dec cmpl mov cmp sbbl ret addr16 int3 dec test sbb sub jne add pop ret mov mov scas mov adc int3 mov pop mov (bad) dec fcompl jo xor dec add outsb sahf lods in ljmp dec lret inc sub out or loope sub sbb adc inc add ret add rorl leave sub imul icebp repnz fdivrp sbb sub movsb cltd xor add sub ljmp addr16 iret nop sarl jmp add (bad) xchg and mov jo repz sub or xchg aas xchg inc fwait sub gs sahf mov repz (bad) cld dec leave xchg arpl pushf inc or mov xchg mov ret test xchg mov arpl mov leave mov pop mov push pop pop jge sub pushf mov stos rcll fdiv pop push jo inc cs mov push ret aam sbb inc sarb jbe xor and test (bad) adc cs insb jnp scas fild insl xchg push sub icebp (bad) inc bound outsl arpl imul mov mov sbb add inc movsb bound out sbb stos fwait sub inc and sub cwtl mov sti xchg and imul adc fs cs outsl les jle dec rorb jbe xchg adc sub jnp add daa cmpsl (bad) fistpll sub in lock ds dec in cmpsb aad lcall or out sub cmp and inc push xchg out push sub adc xor mov mov push push (bad) fisub sbb out loopne lods sub stos lcall add mov pusha adc inc leave push sub hlt jbe pop rcr sahf std push cmp jp fadds sub outsb out pop fwait ret push cs dec add ljmp push sub xchg divl push sti into and in adc and jge loope sub inc loop sub dec cmp imul outsb sub sbb in xchg pop std punpckldq pop sti ljmp int3 mov jnp sub mov incb mov test repnz ss sub out cmp fdiv push sub fnstenv inc fistp inc xchg lret push std inc adc xor xchg adc lahf dec jl leave dec inc out sub inc lret push sub insb loope into push stc cmp out and mov out xlat sbb loop inc bound psubsw mov mov mov fisub xor test inc sub push sbb mov inc inc in dec jle and cmpsb jmp daa imul push lods iret xchg mov mov lahf mov nopl movl sub xchg jl dec pop es push test std popf fwait cmpsb nop or xchg cmp sbb sub lds xlat jb pop xchg enter insl push enter ds add sub je fldt lcall sti sub mov and or pop pop pop fsubrs fdivs sub or shrb inc mov and inc mov into js dec sub pop cmp push cmpsb iret pop jae (bad) sbb push sub ret push sub and fcomps sbb xor push mov das lcall jl inc inc mov mull jbe cs ljmp (bad) sub adc adc mov lock shrb stc cmp decl push bound xor stos fwait sbb daa pop ljmp fndisi(8087 fidivrl push xor daa cmc popf scas sub je or nop js sub icebp (bad) cld lret les (bad) sub repnz jp es dec sub lock ret sub shrb outsb dec mov cmp pop aas xchg sar add and sbb js mov sub push movsb imulb cmp adc jbe in sub inc add ss adc mov add loop inc add test lds adc sub fisubr cmc orb cmpsb mov sbb jne adcl mov lea mov test in sbb loop in mov xchg ret adc push sub pop addl jmp lahf enter les mov (bad) dec js sub nop cmp enter mov or cmpsl xor subl xchg and sbb push jl sbb clc std mov sub inc sbb and nop pop sub push jns sub xor dec dec cli jb sbb fmuls cmc sub mov or mov std adc rcl aas or dec mov cmovle sub sti shrl push out sbb jbe xor mov sub out mov push mov jns in push popl push and fcompl cmp push mov test push fdivs ljmp inc and in ds adc sub dec das sbb pop xchg outsl mov lock ss or imul xlat in pop lcall sbb sub adc lds loop mov mov divl jb xchg loope push dec jg test mov or xor sbb data16 cmpsb mov sub hlt stc xchg fstp (bad) iret lahf cli sbb sub lret mov cs mov jmp ja out dec push mov aas push mov scas ja sub push cmpsl mov push add and jnp mov data16 mov dec (bad) ss inc pop pop sub test cmovg sbb sub jae add xchg push dec cmp aam sub pop adc sub mov add jp xor inc pop fldl repnz push cld inc in cmpsl jbe jae and daa mov cmc mov inc (bad) (bad) push cld sbb jns dec mov sub inc rorl or in inc gs jae or imul sub add inc sub je and sub (bad) push or xchg sub push int mov fldl jecxz loop popf and push inc pop mov cmpsb jl daa push sti int3 shll ds cmp adc jo test into sub pop ss push clc push push sbb ret bound pop fisubrl frstor je sub or shrb mov jle dec mov lcall test fwait xor jge xor outsl pop ret mov sbb cwtl sbb (bad) lods lret xor jl pop xchg subl xor repz add mov push cmp mov adc les int movsb js (bad) ja in (bad) dec xor movsl push test jecxz jnp sub loop (bad) notb scas pop or aaa add sub rorb dec sar add rcll inc inc cmp cmp jb sub pop mov test lret pop xor sub movsb out inc out mov add cmp adc xchg xor aas sub pop push stc dec movsb add ret icebp pop aaa fist push inc jmp pushf xchg xor cmp add adc repz or fildll pop int3 (bad) xor jmp push js rclb sub add pop sub xchg testb sbb xchg lcall jecxz (bad) (bad) push xchg sbb aad cmp sub dec arpl movsl or sub test fwait sub sbb sbb mov dec and mov push dec inc cmc mov aaa push sahf imul les call (bad) cmc sbb andl sti and (bad) cwtl repnz nop mov cld dec je or (bad) movsl sar es test add aam mov dec dec xor push dec xor call stos int push add add lock jl,pn jns (bad) inc cmp lcall mov or ret dec ss fisubrl pushl sub cmp andl cmc mov pop mov xchg and leave xchg cld es orl inc in dec imul mov and leave mov or fiaddl out and xor jno lret in adcl cmpsb bound dec jnp sbb mov xor xor mov add ficomp roll mov push scas mov pop sub fisubr adc cli pushf cs leave hlt mov shrl inc (bad) movsl sub fwait inc pop incb aad push push lods fidivrl repz and xor subl fdivl push cmp sub inc stos sbb mov or mov cld rclb push dec add ficoml push sub cld sub je mov push mov sub es sahf adc daa jo cmp push or inc xchg jnp lret cwtl ja adc pop xor (bad) push and mov out iret sbb mov mov xchg mov scas add leave add (bad) dec out or jbe inc in sbb int3 ficomp call stc mov dec ret jge cwtl in dec sub adc dec mov iret out inc push pop push cmp mov dec or add nop sub das dec add adc call mov adc xchg mov cs cmp fisttpll sub sbb and mov addr16 inc sub movsl sub lds dec xlat sbb sub mov stos jne mov jp adc sub bound in adc sub push je jb lock sub jp sub arpl dec mov enter out xchg jg dec adc xor add mov mov cmpsl int xchg sub shll dec std ds sub imul xchg dec or jns imulb stc dec mov jmp push (bad) cli sub in movsb fdiv inc push fisub cmp push stos repnz and mov inc int in clc xchg lcall loope fstpl outsb (bad) dec or cmpsb jmp in int3 jle inc mov jno popf repz push jbe (bad) xchg aad mulb mov sub js stos bswap fwait and insb xor mov in cs add push xchg pushf stos ss out mov test sub dec cld int or cmp out mov xor or fwait sub mov rclb push sub lret mov jnp mov pop cs inc xlat sbb inc sbb and dec mov lods and inc in xchg imull sbbl rclb jb inc push sub out lcall and mov into or add cmc test sbb jnp add pop lods pop lcall test addr16 ss or xor lds ds and sub jns adc jmp push jp jb pop aaa cs out lock dec pop xor out leave push ds adc add pop sub adc movsb jnp mov lods and js frstor loop fsubrl aad and rclb stc dec (bad) nop cmp rorb ss ljmp andl dec push push popf stos jmp mov ret jmp (bad) leave testl add dec cs cmp inc data16 adc dec jge stos int (bad) sub mov cmp (bad) sub jp push gs add mov in xor lea fcmovnb loopne sub push mov fld mov mov xchg jns gs mov inc dec mov (bad) clc sub pop mov cmc aaa outsl xchg cmp aam fldenv jge and cmp sub iret mov rorb sbb nop sahf shrl leave insl mov xor movsl cli js cmpsl mov jb into jp jne sub lods jmp (bad) out pop pusha sub gs xor outsl fstp cmpsb push xchg push mov in pop ljmp add (bad) mov call dec icebp adc mov mov xchg or inc subb pop xchg das (bad) repz inc push jno inc popf lods test sub pop mov cmp call inc xor (bad) iret out xchg ud1 sbb cmp xor push push stos pop aad mull jmp xchg xchg ds sub cmpsb mov push enter add mov icebp mov stc lock lret sub popa ss daa mov sub or dec sbb (bad) inc sub rorl movsb sub or pop sub fwait xor pop pop aas adc (bad) js aam sub add lret sub or pusha push sbb dec add inc jle pop lret sti cmp pushf sub imul pop mov mov inc dec (bad) jg push jbe sub adc scas xchg sahf scas test daa or xor push in xor cs ja ficomp xchg sub adc data16 loope,pn or mov push jmp call and lods mov out scas arpl enter sub (bad) push pop push pop flds inc into clc jb rol cmp sub out data16 mov mov sub jg inc xlat lea test sarl dec ljmp pop mov mov or mov int3 or push in and mov or lret sub popa mov cmc out xor outsb lea or push sub mov pop add test dec mov push lahf inc clc repnz mov test sub push xor cmp mov sub sbb or push fdivl cmp sub xor pop add test jo sbb lock cmpsb (bad) jb ds loop stos cmp stos push cwtl (bad) and mov adc adc stc (bad) nop inc and adc sub push adc pop sahf dec rorb fwait jno mov pop fldcw (bad) fwait loop stc or adc stos or pop dec dec test xor fisub mov lea mov jb or scas push push pop les mov xor sbb sbb push dec lods test mov sub push or add or out mov out mov sbb jno lret pop rorb push divl push push sbb jnp lret movsw js add insl int mov pop push data16 leave pop xlat xchg push jns (bad) cmpsb add jg push cmp sub ficom lret inc sbb movsl psrlq pop jne popf cmpsl dec stos imul push jne and xor jns,pt add mov lea dec add sbb cmpl xchg xchg les push cmp push imul cwtl scas pop dec leave mov cmp mov orl jnp jle imul dec mov adc xor arpl fwait adc mov icebp xchg (bad) mov dec lahf (bad) stos negl xor and gs mov idivl xchg adc jns imul pop inc fnstsw push cmp jnp adc lahf mov lods push ja (bad) and test jecxz (bad) int cmp mov out fcomps rclb pushf jb addr16 add scas (bad) push fbld mov push jp,pn movsl adc int jns ds cmpsb dec inc add stos insl xor fldcw fwait sbb jg jg pop xor (bad) and jge js push stos pop pop fstps add cs or lret push je lods or insb inc and ret and sbb rclb pop xlat mov aad fcom mov cmpsl (bad) ds pop cmp adc hlt xor add icebp jl pop inc lahf push outsb push leave mov pop cwtl sbb popf int scas push repnz jp fsubr (bad) xlat out jmp loopw int cmpsl rclb gs dec mov push mov fisubrl insb pop cs xchg out loope popf popf ds inc aaa sbb nop jmp xchg cmp test dec out (bad) scas pop mov mov inc test jbe fldl enter aaa pop inc xchg mov sti cmp sbb aas cmp mov pop sub jne rol add adc cmp fsub ljmp (bad) sub pop in jg cmp fisubr das mov sub lock icebp int pause mov inc mov insb neg iret cmp pop jnp fisub add outsl sbb pop or jp pop xchg mov inc (bad) das cmpsl xchg lock push push nop jne jp push xchg fs sub push adc push sub into in adc loop,pn jge xor fucom ss xchg pop mov ret push jp inc push mov rorl rcl xor cmpsl cld add mov or inc fildll sub std scas push add int inc xor mov (bad) push and cltd pop inc adc xchg jns cmp int (bad) mov arpl pop xor xchg and pop test adc leave std mov mov mov ds dec push ret in sbb mov mov inc pop mov fbstp mov into adc hlt cmpsl fnstsw pushw cmp jl xor and push out inc (bad) pop repz mov cmpsb fcompl lods cmp add lahf adc insl hlt popf xor out rcrb pop fwait and push cmp and aaa sbb fdivrl movsb stc add jb lea or sbb jle pop xor sub ds adc imul push cli cmp push leave (bad) mov ss divl ss mov push js push test inc aaa insl sub mov cs or jbe,pn xor cli and push dec or in aas cmp stos xor test xchg mov leave mov jp xchg jo movsl fmuls in popf push xchg dec imul inc sbb aad or lret lods pop sarb add incb fcmovnu aas test cmpsl or and sbb sbb outsl les aad pop (bad) es ds mov test (bad) in jp sub dec adc or jno inc sub sub add mov jns sahf xchg (bad) int3 cltd (bad) insb mov (bad) push out cmp je cmp sbb (bad) mov int mov leave ret enter inc and cmp sub movsb and cmpsl push iret push pop ljmp mov add fldcw js (bad) jb movsb movsl shrl arpl test ret (bad) sub xor mov movsl push xchg inc sub (bad) sub push lds sub jns,pt aad sub add rcll repz pop popf mov adc sub pop (bad) adc push sti lds andb cmp popf sub out fcomp scas out adc sub shrl dec add jmp (bad) jmp stos bound jecxz mov sub and rcr lods sub jge out and mov repz mov mov dec clc data16 sbb xchg inc and sub lods sbb cli int sbb in mov les sub mov adc inc add scas sub or lcall mov adc in inc fwait lods push (bad) sbb (bad) into std ds lret rcrb cmp sbb or mov inc pop inc sub sub adc loope lret cld adc (bad) mov mov scas imulb xchg fprem jmp sub and sti inc sub push test mov and pop xor ret cmpsb or call mov aad mov scas js not dec sub jmp roll das in outsb int3 sub mov shr (bad) push rol sub stos popf fnsave add stos jns (bad) jbe ss cltd lcall (bad) and in sub test cmc scas sub mov fidiv add pop cmp inc mov pop (bad) sub in dec sbb dec jno insl sub push push lea xchg daa ret or adc cltd sub addr16 mov sub in movsb daa sbb adc cmp or pusha jns sub loopne out pop jle lcall cmp mov mov les outsb jg test sub add out bswap or xchg pop xor sti nop mov cmpsl pop test in add mov pop (bad) data16 loopne,pn (bad) cmp insl jl cmc pop and bound ja inc (bad) sub dec cli push sub mov lret or in inc mov sub cli and inc and repz outsl cmpsb push mov push lahf pop int mov mov mov pushf sub cwtl adc and mov ret les pop jno ds (bad) xchg cmp pop mov lret xchg ficomp add mov lret (bad) xchg les mov adc int jg push cs push mov cmp out cmp je fsubrl push mov mov jnp imul faddl push dec cmpsl sub dec sti outsb xor pop adc ljmp push sbb push add sahf sub push je dec (bad) and out jb sub cmp jp cld test inc int sub (bad) jnp out pop xchg adc ret cmp sub sbb pop sbb push mov jecxz data16 sub shll cmp sar dec mov adc inc mul pushf pop in sub inc xchg jns jp aaa data16 jae cmp cmp inc jbe aam cmp dec sub or xor dec loop cmpsl jae out dec dec leave pop mov mov pop lds sub (bad) movsl inc leave and (bad) fucomp sub and sub imul clc fmuls sbb sahf daa xor loop addl and aas or sahf cmpsl jmp add or or jns cmp adc sub sub mov adc xor lret rclb and or jne sub sub test inc cwtl push rorb mov call stos sub jb pushf sahf sahf lds sub pop dec add xchg cmp sub icebp pop inc cmc mov (bad) dec jae into sahf movd sub insb inc out cmpsl mov pop inc xchg cwtl cmp mov stc push lcall cmp mov aam cmp out sub jb loopne dec sub mov xchg inc enter je sub fs and ffree (bad) dec mov lods jb sub pop and daa insl pusha xchg and (bad) and inc inc dec xchg xor jge dec in pusha dec push sub iret into mov cs push adc sub movsl test fs sub sub test pop imul int or int3 ror xor pop jno mov sub inc jae mov pop cmpsb adc mov lea gs sub psubsb pop sub lcall push or frstors push mov (bad) loop push mov sub sub push jae gs das mov (bad) mov mov adc idivl inc or int3 inc xor pop call cld enter rol xchg dec movq add inc loop xchg xchg xor ret aam mov mov sub mov dec sub lods and sub aam data16 ss mov mov in and jmp mov sbb inc or test hlt stc cmpsl xchg stos cld cmpsb (bad) leave test push pop cwtl outsb mov dec xchg jno clc pushf dec cmp sub dec pop lds or aaa shr fs pop ret sbb adc sub insl sub std aad cmp push inc ds cltd xor loop mov leave cld int3 push push xor cs or sub fs lcall cmp jns fwait nop lods ja jl push dec (bad) (bad) ret mov and (bad) and push xlat in xor dec inc out cmp pop mov aad (bad) loope cmp enter and cs mov adc int push dec loop push mov cmp dec push jge mov cmp jb and mov iret xchg xor and sbb sbb loopne aas fcmovne xchg (bad) int3 lahf je or and out xchg and mov lods rclb nop jo dec and and mov mov cmpsb mov sbb pop sbbb pushf pusha push daa lea mov repnz addr16 imul cmp jge sub rol add adc sub mov movsl sub js mov repz movsb in sub or sahf mov cltd (bad) sub xchg (bad) popf xor ret lret jb sub mov cmp and addr16 inc or cmpsl mov sbb insl std mov push enter xchg movl loopne lcall sub xor rorb mov inc adcl sub push das cltd ljmp clc cmp sub sbb jp das xchg cwtl sub (bad) int adc or add ds pop adc jns dec cld and lock inc in sub push xor pop mov add mov adc xor sub mov sub mov sub inc push or jns out adcb loop xor xor push cltd fbstp ret adcl outsl enter pop (bad) dec add cmpsl push mov in xor hlt out popf sub sbb mov fucomip cmpsl ja ds test into jnp cmp lods aad in sub insl stos push sub inc inc enter mov shrb and ds (bad) outsb loopne lahf xchg scas sub stos sti mov cmp mov popa mov fbld push mov jb fwait inc data16 pushf sub pop sub and add or lahf jmp pop lcall add mov jp cmp cmpl sub (bad) out into sub cmpsb xchg adc test lret pop movsl das imul push hlt fsts add inc xchg xchg ljmp (bad) sub enter and sub jae sbb inc sub and fiadd addl scas cltd add sub inc mov sub cmp add sub mov imul roll repnz fild mov sbb stos ljmp sahf out jne cmpsl or sti (bad) (bad) sub inc adc jl push jl les insb lods mov roll xchg mov ja insl add push (bad) clc daa in sub imul jb bound fwait test inc ret mov sub ss jbe inc test sub sti enter out and xor int jne sbb in jb imul dec iret cltd mov push cmp add outsl jnp xchg xchg leave inc xchg push jns add movsb xor insb lds xchg mov jp test push popa mov adc mov into imul mov dec std scas sbb subl aad push stc jp jnp,pn cmp (bad) cmp imul dec inc fsubs (bad) xchg aad mov (bad) xor popf or iret data16 mov xor scas add sub sahf or xchg out sbb push jp test xchg and mov adc and (bad) pop loope jno mov mov xor in sub aas lods cmp icebp or notb sub movl mov daa cltd push pop inc pop icebp (bad) jmp popf sub (bad) out les lods mov cmp jl lahf add jmp dec js scas jg and mov (bad) inc add ret mov cs push jne cltd sub add dec enter sub lahf pop mov push and loope das mov popa out cmc push sahf pop cs fcompl lods pop lods pop mov leave cmp sub xlat add into xor cmp mov ds (bad) xor fcomps and scas push daa lds jl sub pop cld and (bad) mov mov xor sti sbb jp push xchg std das cmp clc imul loope daa dec sub icebp in in sahf lds adc inc pop scas lcall sti cld xor jge dec xchg ljmp or jge ja add ffreep xchg cmp out adc fwait inc imul (bad) sub dec push (bad) cmp xor cmp test push jne mov out xchg cs jae cmpsb dec sti xchg dec sbb lret add jp mov cmpsb jne das test lock adc test divl push scas mov push outsb pusha in test xor jb jae xchg (bad) jb (bad) sub mov into shll fidiv or sub or ret lret mov sub fcomi and int imul inc jnp push outsb stc inc out mov cmp mov test and push xor in cwtl jbe loopne outsl (bad) cmp lcall mov cs daa pop dec into iret out jne push pop fildll inc mov (bad) pushf mov and andl pop cmpsl adc jne cwtl fucom jns out sbb daa sub jno sub sub test jmp das xor out sbb sub inc call stos mov das js call xchg aam aas sbb je,pt sub push jl add nop pop or out add sub adc ja dec pop int3 cld pusha (bad) pop mov and les rcrb adc fnstenv mov fsubl arpl cmp mov stos pop pushf sub in pusha mov sub icebp pop mov mov pop jl sub xor sub xor mov fstpt jae inc mov cmp cmpb cli (bad) sub imul clc sar sbbl popf lds je test push sub xor int inc (bad) (bad) xor push ds adc dec mov stos pop fidivr xor dec in ja jo and stos adc cltd xor dec sbb ret sti dec push jne cwtl inc mov xchg jmp lock xor out xchg xor sbb int inc fdivs jbe aas and xorl ret pushf inc cmp stc insb fsts leave and outsw int jg inc xchg add loope sub pop rcr push fistp (bad) cs lret cmpsl int adc cs sbbl out popa dec xor ret popf sub xchg sbb pop (bad) dec (bad) imul jbe cmp sbb mov cld jnp sub cli push mov imul (bad) sahf sub inc sbb insb jecxz jle mov xchg mov out popf xor (bad) ret test ss movsl mov leave lret cmpsl ja ss test pushf cmp cmp push (bad) push inc bound xor mov push jle push int sub sbb ror push mov rorl mov and out dec sub pop stc not (bad) push das mov jb loopne sti sti call sbbb mov leave add lea sti adc lods jmp mov jne push jae sub mov add repnz sub adc std das mov lock ret rcrb xchg pusha mov scas xchg inc jae adc loope or sub lahf sub out cltd sub loopne mov daa sub sub aam mov push (bad) sahf cmpsl or repz outsb sub popf dec fadds cs frstor mov jb lods in loopne mov or lcall imul cmp dec test fwait data16 aad push rorb push rorl imul jnp mov jge push sub jns lods cmp or ret shrb pop jmp adc out mov lods pop inc cmp sub jle in xchg cltd mov jl push lds repz cs out adc cmp mov into sub rolb inc popf dec ss add pop ljmp lods aad pop push jo cmpsl mov (bad) mov sbb sub pop pop mov adc stc add mov cmp imul mov push jno daa push les jns and leave inc pop fcompl push mov push xor jle or (bad) xor cmpsb push fnstenv rclb mov sub add lret sub push inc (bad) aam xor adc xchg sub or push ja mull clc std sub aaa ljmp cmp sbb fwait push leave pop ret and (bad) or out pop xchg mov dec jbe jae inc or add xor gs arpl push add out lods adc sbb ret and loope jbe fistpl negl jbe xor or xor pop cmp or or (bad) or push jp dec aaa pushf les cmpsl inc xchg bound leave mov sub cmpsb jl xchg jbe push and ret lret idivb ljmp xchg (bad) adc test fcmovb push inc fcmove cmp xor xchg dec mov jne push (bad) inc lahf add dec clc es cmc leave repnz and xchg push xchg lret pushf xor mov cmpsl jnp bound pusha in cmp stos xor pushf xchg shlb out push fstpl stos add xchg iret data16 xchg movsl cmp xchg and ret ds pop or mov repnz adc pop dec addr16 outsb jb aad es ret fldt mov push lea fdivs xor xor repz inc mov in stos adc imul cmp popa mov sub popf shl and nop popl sub lds movsl mov and popf jb mov scas loopne add or inc (bad) sbb mull cmc stos dec shrl fcos mov xchg mov mov ds cmp addb xchg bound scas and and sub call inc popa mov mov mov xchg out mov sub lret lahf aam sbb in add pop adc out outsl test dec fisubl and or movsb inc enter mov (bad) mov sub jno dec jl sub mov in ss or je push imul push sub insb lea jb test lock xor dec lods sub sbb jmp xor popw in cltd (bad) xor xchg pushf push test push and mov lods pop pop jo and push in lock adc (bad) or xor or push xchg cs insb insl cmc clc sbb ficompl xor movlhps pop xchg sub add sbb sub popf out push ljmp cld iret outsb cmpsl sti lock fist mov pop das (bad) gs sub adc insl lods cs outsb cld dec or fdivs popf inc jns xor inc lret cs sub sub dec add out add push mov je xchg insl jge cltd push cld dec js fidivl daa mov cmp (bad) sarl xor lods sbb pop sub loop shr (bad) out add aas xchg sbb adc dec popa out push bound jno icebp sub (bad) (bad) imul or and sbb dec jmp enter inc push sub aaa (bad) bound sub leave andl fwait sub fdivr dec (bad) icebp fneni(8087 sub outsl into mov call dec scas sbb dec add and arpl xor outsl ds xchg cmp inc dec in or add xchg push dec push data16 (bad) in ljmp cmpsb stos push jne jmp dec jge adc adc inc repz sub test cvtpi2ps jle xchg data16 lahf push mov jmp sub mov push fldz das dec sbb mov mov mov aam cmpl mov stos out sbb xor add cwtl jle push jnp or test inc mov cs pop enter cmp int cltd dec add add mov popf jnp xchg (bad) in imul dec orl or lods in (bad) sub and loope rcrl test or rorl pusha sti fwait sub xlat out push or mov and sub (bad) adc mov mov cmpsl mov mov movsb movsl loop inc fdiv andl daa jl int iret bound and sub inc jge clc push loop divl std jbe loope inc push mov sub notb cmp mov and dec inc lcall mov jno jae mov and push fsubrs cs pop adc jg adc mov sub mov lods lcall cmp xor push sbb in pop enter inc xor push stos rcll sub mov add lret fnop bound jnp push push add movsl xor test push xchg sub xor (bad) fmuls xchg cmc out test sub test jae pop sub jmp in fmull (bad) lss sbb pop addr16 les xor test imul pop or mov mov xchg cmpsb add sub push sbb ja les (bad) repz lds mov sti cltd dec enter loop pop outsb sub adc (bad) hlt sub orb fnstenv test loopw sub or mov fdivs jle push out out incl cmp jg test sub dec mov insb sti stos jbe int loopne adc sbb push dec xor fs daa dec shlb and test push adc (bad) lcall inc out sub mov movsl mov inc lea arpl repz jae jle cs test shlb cmpsl jge mov subb (bad) lahf icebp push mov ss jne jmp xchg pop sub sahf dec mov dec les sub and and mov push mov sub push push mov add xlat jb outsl icebp loope jb movsb adc fsubrp push sub mov jns daa push sarb push pop add dec or jbe xchg (bad) arpl sub or xor push idiv test in push mov dec stc dec cs pop inc call in adc fimul cmp cli xchg int3 sub pop lahf ss add adc ss bound ljmp adc nop stos cmp fnstenv jo in mov sub sub loop jns,pt add and cmp sarb inc jmp inc xchg mov out fcmovu fisttp fidivrl out pop scas andl into pop dec sub cltd sahf in gs das sub xor aas add ret test push mov aas inc sub ficom sub inc addr16 fbld das scas dec mov sub popl xor push jge jae fdivrp iret shrb xchg cs jbe sub push repnz sbb (bad) (bad) mov in test mov cltd cmp or adc js test push push adc jp push sub pop out fmull push cmp mov pushf clc lret and fidiv or mov lea pop adc mov push mov aad sub inc add push fwait imul sub bsf push push sub xchg mov add inc das mov movsl push jns sbbl jecxz cmpsl stos ljmp sub sbb xor and jp pop fs xlat jge in stc daa mov hlt fdivrs sub add mov ljmp movsb mov ss mov jcxz xchg and pop aam loopne push mov adc insb mov stos jbe dec (bad) jb ds ds sbb in jge xchg cmp xor stc in push xchg jmp cmp push mov pop movsb gs fwait enter or repz cs ds cmpsb jge aam push or cs sbb ljmp into push repnz pop or imul movsl shrb cmpsl arpl inc or (bad) je xchg cs test int3 mov mov std and inc ds jb leave es insb fidivl mov cs xchg ret jne jge out imul jl adc mov jns sub cmp jecxz movsb sub ds out sbb (bad) ljmp mov xor (bad) push sub out leave movsb fcoml mov jmp jb sub inc movl fsubrs imul push xor jns shrb mov xchg cmpsl leave ljmp sub dec aaa and mov inc sub xchg ds or sub ret js sub sarl (bad) pop cmovno xchg movsl das inc fs push adc incb or xchg mul jg mov lret push dec inc sub sti add mov xchg ret fmull les inc push xchg mov test sub dec ret je pop and inc fwait cli mov mov leave les sub jno stc rcrl inc xor (bad) popa mov sub rcr (bad) stc test jl mov call stc jb cmpw cmp lcall rorl negb pop jb (bad) imulb dec jbe push inc outsl leave insl sub mov dec mov or mov icebp adc jne jno dec sub cmp je pop or push in jecxz jbe xchg cmp fmuls jbe pop add xchg leave ret pop ret (bad) push or inc aas cmpsb xor leave jg popf or in inc adc imul mov sub movsb sub add dec in mov int3 addl (bad) add jecxz dec mov fmuls mov dec push inc mov sub call and and icebp xchg movntq insb xchg sub out jae xchg jmp sub mov out divl cvttps2pi and sub fistpl jne out icebp fwait mov sbb xor insb sbb ror sti rcrb jno dec (bad) sub push jbe (bad) dec and call dec sub in pop out push xor xor (bad) lret insb push inc or jge inc sub inc xchg xchg leave incl lret jle,pn std push xchg or cmc inc lcall mov ja (bad) jecxz sbb pushf (bad) jmp push cmc fildl pop mov movsl push mov cmp mov sub out sub lret adc mov fidivl insb (bad) notb inc add out sub inc (bad) dec pop test fs leave push xor andl fimull in sub in and adc push jno push xchg lods mov sub push sbb jns sub jb loope notl movsb ss sub xchg lea sub cltd sbb aaa xlat ss inc cld iret adc xchg dec inc sub pop mov jmp imul stos mov and pop pop adc adc ds outsl and je xchg or out sub jnp jns xor pop or xlat sub out push sub mov stc or lahf sub pop mov sbb cmpsl roll lcall pop pushf dec in jno fnstenv or sub dec lds int3 ds xchg xor push mov sub cltd mov cmp adc jg push sub cli fdivs ret and in mov adc sub jl test (bad) mov ljmp in sub stos sbb fldcw pop aas mov jl pop test repnz fild outsb sti mov test and jmp jge sub rol test mov aad dec fsubrp (bad) lret leave pop dec test sub repnz push sbb in out push pop lock sub mov daa lahf mov sbb ss jbe mov xchg out dec adc movsb inc fdivl mov cs ss addr16 insl pusha cmp negb in sbb js insb jno jge xchg movsl xchg ljmp mov sub in movb (bad) test xchg jae testl xchg cmp adc xchg pop sbb sbb in dec iret xchg repz ret shrb sbb mov repnz cmpsb test loope dec repz pop ret sub adc cmp lods add mov ret ja push cmp mov test mov dec push jno repnz test add stos lcall dec inc sub je sub fsubrl ret dec sbb movsb jp cltd xchg daa mov fnop aad mov jbe cmpsl or or ss (bad) and xor xchg cmp shl jns and pushf pop and lret dec test sub data16 mov dec mov data16 adc lea pop pop jl pop (bad) les dec dec pop leave and and ss cmp or js jnp rol leave into lahf orb sub pop out lds adc mov add jmp pop pop and mov dec add pop ljmp jno sub or fdivs cmpsl lret xchg movsl sub dec test cwtl xor ja jmp jecxz stos xlat cs inc jecxz in fdiv mov cmp nop xchg (bad) cmp mov subl xchg inc test add mov fsubrl lahf fild mov icebp pop mov xor xor bound pop out arpl fidivr or das rcl sub dec test ret sub cmp iret notb mov and out cmp adc jae sbb push inc push arpl sub (bad) repz jne popa in sub outsb insb pop jmp pushf sub jg (bad) ss inc or cmp mov inc xchg sub scas pop mov push sub decl popf sub adc loop jbe cmpsb arpl orb sub aaa (bad) sub adc (bad) hlt dec push sub lds or repz daa aam movsb dec mov mov add mov imull inc popf xor daa jge mov fidivr into jl insb sub mov sub mov dec cs in xchg out jge push iret imul mov push pusha mov popa (bad) push and or scas cld sub dec sbb sub cli pop rorl push sub pusha imul test stos cmp (bad) ds pop scas std sub mov je ja out ret cmpsl jb imul push xchg xor call push jl xchg addr16 push repz xor jmp mov dec cmpl test call loop mov ljmp stos inc addr16 jge sub (bad) and inc subl pop pop aaa adc ret jmp add mov aad adc loopne sub push and (bad) cmp (bad) or push repz mov push int sub or inc adc loope in sub adc test (bad) xor xor add mov daa mov adc sbbb mov xchg or inc mov lods in icebp fstl cmp dec std ds jecxz xchg iret sarl sub loop mov sbb sub push ss sub stos fsetpm(287 cmp decb adc jecxz std shr loope test aaa sub cwtl loop dec adc xor xchg lcall and iret lods inc jns xchg sub pop outsb and subl pushf jo,pn hlt sub shlb mov leave push inc ds mov cmp sub xchg jg sub adc inc sar cmc dec xchg ss mov dec add push (bad) ljmp and and fildll ljmp add sub cld add loopne in sub push mov movsl push xlat je pop jo sub and lret mov fdivl mov test (bad) lds dec inc xchg sbb out lcall inc mov cmc stos sub or mov cmp jae sbb add push xchg (bad) cmp loop adc push lock and xchg dec mov loop adc pop aaa xchg out add pop loope cltd push lret push leave push push xor insb popa mov jg bts call push mov popa add aam inc inc cli scas repz ret mov pop push pop push jmp cltd lcall jne add ja xlat int mov xchg movb push dec iret sub stc mov dec (bad) test mov pop sub lds push imul adc sub negb andl popa insb jno jne stos xchg imulb lret sub add xchg mov xlat insl imulb aaa push sti mov (bad) inc pop sub pop into sub adc xchg (bad) (bad) cmp jno flds jmp sub dec sbb sahf js cmp mov test fidiv and xchg mov add inc jmp clc and lahf mov jbe xor dec cli das (bad) sti sub shrl push out pop subb enter scas ret push jnp,pn aad jl push dec enter lds sbb aam jb push mov dec jnp fdivl sub scas mov arpl sub sub mov (bad) call pusha in fimull rcr dec pop and mov jle jmp mov sub mov mov je sub mov js enter inc mov push cmp out pop jbe,pt mov loope cmp xchg sub ret xchg add sub int3 push clc inc cmc in lock jae adc out mov jo loope mov fcomps or inc fimull jge xor jo jne es scas cwtl mov stc pushf mov aaa dec mov pop inc data16 jnp test inc and dec push (bad) xor popa and int lret jb (bad) pop call sub cmpsb push pusha aas es sub xchg (bad) cmpsl inc sub leave test cmpsb sub (bad) (bad) notb cli cs outsb pop das cmpsl pop adc ret and mov jle lods sbb fisubl lret hlt adcl push cmpsl pushf jns faddl sub add mov xchg rcrb ds pop sbb jbe nop cwtl mov imul cmp stc leave scas sbb mov ss test xor cli pop leave fstl cmc lods out outsl adc (bad) mov leave in std cs mov call (bad) and in out jae push pop test sbb or iret sub out pop mov dec jg popf stos sub sub incb mov sub push sbb xchg inc cmpsl int3 ds sub fsubrs sub jo movsb and bound imul add (bad) clc sbb xchg adc ss mov inc xchg insb jmp and push inc and pusha sahf lds test xor insl test fisubl mov sbb fcmove jp pop adc push je jg pop sub pop popa out arpl lock leave outsb mov int jnp pop lods sub out cmp (bad) xchg sti dec sub jecxz inc orl push sub add leave cmpsl loopne test xchg das (bad) repnz aad cmp test push inc mov cmp sbbb xor orl repnz adc add sub sub setp ss cwtl arpl sub pop daa bound pop ss fimul mov jns xor jg insb loope mov es push xor jae adc out mov push sub xlat faddl push push xchg out loop pushf movsb mov repnz outsl enter out cs sbbl inc or jmp stos pop mov cmp mov call scas pop (bad) jo nop xchg pop push mov stos sti in outsl cmpsb inc shrl xor iret push jns loop jns sub jge pop stc aam or sub rcrl inc lcall (bad) mov jae rcr insb mov fmull inc test mov and sub sbb xchg iret jle ja adc rcrl and cld sub mov xchg ds sbb decl or lods out popf sub xchg ss cld addr16 stos addr16 pop dec xchg repnz lods push dec xchg scas movsb or int and lea pushf cmpsl int mov push cwtl sbb xor cmpsl and cmp leave fstl jnp data16 hlt enter dec sub pop push jbe loopne addr16 xchg sub jae lcall mov gs adc bound mov sbb sbb push push and out xor imul ljmp cmc sahf jp into push clc jae sub xchg pop int daa and xchg (bad) sbb sbb and es push mov xchg xor adc mov mov daa cwtl jg jb jp push std sub mov ja int lahf shrl push scas mov adc movsl mov out dec mov shlb dec imul fadds mov sahf call cmc pop call lods xor adc mov imul call mov ret imul mov stos and aas rcrl xchg mov jge in pop add js sbb shrb or jg mov popa cmova sub fisub mov sbb adc daa push sub inc add (bad) fildl pop lds sahf lret cmpsb test aam fisubr ja bound mov add push out out clc nop iret mov sub rcrb and sub add cmp loopne jmp or das sbb cs xchg push call je sbb pop ljmp subl xlat mov insl fildl fnop jecxz sbb mov sbb ss cmp pop inc add and cmpsb sahf mov in sub jmp ljmp cmpsl adc sbb sub push orb int3 and adc out pop loopne lds lock sbb pop sub push shlb mov fcomps loopne out ja aam (bad) iret or or lds leave loop mov jmp das int dec lods xor adc es out push push dec dec push iret test push lahf shrb ss dec dec push sub (bad) cmp lcall xor cmp jg lcall dec daa int3 inc jne adc lea mov leave push cmc and sti inc outsl pop pop lods jg rorb or pop mov cmc pop js mov int notb xchg inc push add icebp sbb int es std sbb (bad) leave mov xchg or jg arpl add movl and jecxz dec sbb jbe xor (bad) push iret mov aaa popa dec (bad) dec insl ror dec adc test add cli jecxz stc add pop or pop mov js,pn xchg mov scas stos push or jo sub cmpsl ja adc push (bad) leave (bad) gs outsl (bad) iret (bad) mov add xchg outsl mov test push and xchg fisubl add fildl adcl cld stc dec (bad) dec pop lret jb sti js ds loopne int arpl add and pop jmp lahf mov ss leave cli dec push jnp sub pop popf cmp jnp dec and dec mov xor notl push bound xor jns stos sub sbb pop andb push push mov data16 cmp test mov (bad) lcall xchg and jo sbb push or (bad) and pushf ss hlt jae inc xchg call mov lahf pop int test cmpsl mov cmp imul mov xor inc cltd mov sub sahf ficomp loop movsl sub sbb jbe mov lods dec sbb cs mov adc jge call ret and addr16 cmpsl arpl popf xor sub pop mov aaa push and cld rcll jns push pop sbb sub nop add ljmp inc mov push push pop test jg pop lahf loope mov (bad) jmp inc dec std lods (bad) mov inc dec sarb and fisubr out call lahf test cmc outsb mov fisubrl pop and mov int3 in leave mov and pop ret cld test push xor mov mov sbb int test mov add or imul js ljmp test pop lods fbld xlat jl xchg pop xchg dec loop push ss test popa ss out sbb rorl push add std sahf movsl daa das adc and (bad) cld push js sub pop or mov xchg sub shl (bad) mov lcall les rcrb jne sub mov loop push push shll sbb out fstps or cmp sub jle mov sbb cmpsl or shrl aam mov bound int lret sub rep sbb add sub mov mov int3 cld jg mov jp ss std cmp push cs call fisttpl pop (bad) jbe test xchg daa adc inc add mov sub push test int3 out scas xchg ds mov push sub ss movsl fldl inc xor fsts roll inc sbb das xchg loope test mov shr aad xor jg pusha sub mov xchg arpl test xchg cmp fisubl mov mov pop lcall cmpsb and scas sub add pop jnp sub in xor cwtl in jae scas dec mov aam mov repz cmpsl inc add mov ret dec les outsl add lock pop lahf testl sub ficoml xor (bad) pop out dec xor pop jno cs (bad) jb xor xor sub sbb pop mov mov pop testl xchg adc pop shrl lret loop mov ss repz gs push add pop sub lds in cmp xchg in imul stc loop fildll cmc repnz jno (bad) pop rorb cmpsl sub cmp sbb add mov (bad) fneni(8087 stc rcr (bad) (bad) ljmp cmpsl xchg scas cmp nop aad icebp push mov movsb and aaa pop add leave xor lret loope or pop and push es (bad) int3 into jg fstpl cmp aas mov pop cmpsl ss leave shl xchg xor leave fs dec sbbl jmp inc lods daa cmp jg int shll sub adc mov push inc das mov xchg ret xchg pushl adc xchg mov ss paddusw mov das adc jo (bad) test add add xor ljmp adc push das popf sbb enter js scas lods test and sbb push pop test xchg xor mov push aaa mov fstl jne push inc fwait leave pop stos lahf sahf cwtl push or add push dec leave dec stos out add pop xor mov push les or icebp in imul and mov push xor add inc jne insb jne and inc leave or sarb cwtl xchg xchg jl jecxz mov mov sahf and pop gs imul mov xor cmp dec sbb ror or sbb cmp data16 adc sub out pop adc rclb sub dec dec movl xchg cs stc ja jmp cs cmpsb mov mov jecxz cltd cmp push jge iret add push or pushf arpl inc sub jecxz clc adc in fdiv lods xchg (bad) cmp xlat xor push pop or popw subb jecxz xor mov cmp jne adc int lods inc leave xchg (bad) jnp xchg jnp cmpsl (bad) lret cmp inc cli inc (bad) push bound inc lret ljmp int popf pop (bad) dec lret mov mov in dec mov ret aaa ss mov test cld cmp ret imul xchg aas inc dec jmp mov mov pop jge (bad) dec adc insl pop das push mov mov sarl xor jb (bad) es sub pop jb cmpsb mov jnp dec mov and jno xchg imul lret sub jnp xor lds test loope cs xor jmp pushf jnp sub pop pusha icebp movsl cmpsb (bad) xor xchg mov cmp je fnsave xchg pop lock push jg xchg sub sti mov cld sub ljmp in push fsubrl pop icebp mov push pop cmp mov pop inc mov leave mov dec sub inc aad js arpl ss pop loope gs call push pop je sbb outsl repnz add pop adc inc mov shll push fwait cltd ja aaa xchg xchg dec gs subl and sti int3 mov outsl in cwtl xchg cmp jns out sub lods (bad) lret out inc sub (bad) fxch inc jl sub sub sub std jmp jns sbbb mov sub mov sub popf aaa out mov jb fldt movsl outsb aad call loope bound push mov mov sbb notl xchg mov lret xor mov sub loopne (bad) into mov jl imull pop lods pop and (bad) daa sub mov jmp inc rolb sbb loopne ss adc xchg jmp aas mov jns xor pop lock and bound fcomps jne fcom xchg and out cmpsb cwtl jnp sub jp movsl xor push cs and cmp lods xor push xchg mov xchg or dec (bad) stos jno call or int3 sub stc cmp adc jl mov (bad) sbb xor pop popa out push int3 aas push sub jbe adc dec push jne mov dec push jge cltd js xor push iret testb (bad) mov ret or and cmpsl int3 push inc xchg add (bad) test arpl iret cld ds leave add in cmp imul and test jmp (bad) loop jge adc popf fstl movb icebp cld scas shrl out addr16 fisubr sub daa std mov notb pop out inc outsl cmpsl popa test mov in stc lahf sub sbb into adc sbb js daa mov xlat rorl cmp fxch fidivrl mov dec or jb pop inc jmp sub xchg cmp sub (bad) push out sub sub add ret aam sahf notl xlat gs jmp fisubrl cwtl inc or cmp loope in test cmpsl movsl cmp adc xor int add rol stc cmpsb or test mov and sbb mov sbb inc push scas (bad) lahf popa outsl add popa mov lock scas jae mov loopne mov sub std fnstsw ror mov and xchg adc and lods cmpsb cld stc xchg (bad) sub push push mov cmp pushf sub outsl int shrl xchg fidiv (bad) daa and out daa jp sbb jg inc adc lods out push sbb (bad) call call cs sub push dec test sbb or dec push push (bad) sbb add adc sub hlt cwtl test insl mov popa xchg jnp pop cwtl adc pop mov xchg pop fmulp xchg mov push and xor ja out (bad) sub lock les dec sub xchg rclb sub out jmp pop sub repnz mov bound pushf and jnp pop or jne test sub mov (bad) xchg scas out jecxz enter pop jle lret push sub test movsl fwait inc mov shlb into mov sub in inc inc add (bad) or mov adc mov sub push and daa xchg sub aam jb sar int jo test cmp adc add sbb pushf movsl sub imul push (bad) out fsubs cltd movsl add mov sub out cltd sahf lret sub or sbb (bad) xor fwait sbb aas or adc cs imul mov cmpsl mov fldl mov xlat popa sub idivb dec popl out jl int3 inc test adc mov cmp movsl mov fiaddl jg fbstp test jb sub addl xor jb adc sub cmp loope fstps cmpsb clc ss test inc in leave cmp lahf jbe arpl (bad) loope out call or into imull lea imul lret dec pop jge enter sbb sub in pop aas xchg lret jge cs sub add gs fdivl sub into orl (bad) repnz pop mov dec xchg or leave cwtl stc cmp insb cmpsb mov pop aaa outsl outsl xor mov jle repnz and push add mov dec or sti popa icebp cmp dec sbb sub fcompl jne sub xor dec push sbb orb inc mov pop sub in mov inc imul sub jg inc sub cltd test addl out scas flds adc dec dec mov add push xlat or cwtl xchg or xchg insb fidiv lods (bad) popf lods stos notl dec cmp ja or movsl sub sub fnsave or cltd fsts jbe lea pop aas cwtl or bound enter xchg testl call sub in pusha push repnz sub adc push hlt pop cld sub sahf sub or dec mov and sub sti leave arpl mov nop in jecxz in outsb pop stos ljmp jae hlt out jl sub dec adc adcl xchg loopne sub cwtl xor pop in sub scas mov add mov in xchg (bad) mov loop dec idivl out repnz jns push sbb or outsb mov cmp push imul lcall (bad) (bad) inc ljmp dec push mov push mov push (bad) dec ss or xchg mov movsb in outsb rcrl mov jne gs adc cmp pop cld cs call pop daa dec rclb ss lds lods (bad) into shrl imull ret xchg mov xor jae cmp mov es cmc xlat lahf sub call je mov sub dec push neg out mov mov sub and rorl jg inc adc insl arpl pusha push ss jno mov mov loopne test iret jp icebp (bad) stc cli sub fidivl cmpsb and xor fs sbb mov mov add imul jp dec cmpl fwait andl sub cmp daa test in mov nop mov sbb lret fadds mov or (bad) cmpsl push pop xor sbb sbb sub adc or and mov xor mov cli add add sub inc mov int fnstcw in cmp popf sub popf sub ljmp sbb cmp imul jno or mov pop in lret jge int3 es mov andnps sbb jo daa addr16 sub xchg dec aaa xchg fsubr sub lcall mov les ret test dec cwtl fs sub or outsb pop stos fwait adc or push mov rorb (bad) movsl hlt ds mov lahf jl std data16 adc xor cmp fmulp sbb scas push idivl (bad) mov stos sub mov sub mov add jo ret (bad) and (bad) pushf test loop dec dec jg push or fisub or push sub ss adc imul jo daa hlt lret jl stos mov js sub je xchg mov mov inc push cmp cmc sub add sub idiv sarb xchg aas repz jns and in out mov add pop aad int xchg and imul dec inc jo push push or xchg mov idivl cmc int sti push cmp xchg xor stc arpl loope jl xchg and (bad) mov (bad) notb lock sub cmp pop and and ss push pop cmpsl (bad) mov inc mov addr16 xor jmp movsb lret je andl inc scas inc sub or or int shrb sub xchg in (bad) pop (bad) jge push inc push dec aaa (bad) jg negl loopne nop pop leave (bad) mov int and or inc and test mov xor hlt xlat out xor sub xchg mov pop cmp test xorl mov xor cwtl sub sbb rclb sub pusha popa mov dec subl push jge,pn bound insl jb add imul mov call add or xor or imul loope or lods jmp dec and pop loopne jp cmc sub push aad sub xchg mov add sub popf mov int3 call int push sub mov ds jmp push dec sahf dec jle daa pop xchg or (bad) ja mov and fnstsw in push dec pop cmc push dec out lahf sub mov xchg test or test dec test scas fwait sarl sub jge fcomps jno inc adc add and pop mov je adc imul or sub fs sub fiadd bound js cmpsb jnp jns sub pop popf dec dec mov xchg ds loopne mov stc std aas jne test push cmp and jno push test or out nop push dec and test cli lret das inc ja adc loop inc ret idivb stc fcoms cmc sub mov sti roll adc int pop add inc cmp pop mov cmp aam cmp insb fsubp mov xchg push and ljmp les inc sub inc leave enter jns ret or jg lret lret push sub inc popf and dec push loopne jl adc xor dec addr16 sbb jmp inc push in icebp sbb int3 movsb mov std inc cmp mov xchg dec test or movl movsl cs int3 push inc imul stos sbb push push aad mov cmp daa mov push and ljmp push in pop leave rolb ds bound dec jp sbb cltd inc test add xor and push mov push xor fistp daa out pop cmp add adc xchg fnsave inc js xchg std xchg push ret sub sbb cmp xor ss and xor int inc xor pusha or arpl dec stc cmp cli lock mov mov push sbb cmpsb arpl into inc xchg cwtl pop or xchg or push sub in push xor push outsl adcl dec pop int ficom jb sbb cld jbe cmc push mov xor sbbl movsl xor mov rcrb pop dec jecxz mov scas int (bad) loope adc or xchg inc movsl lods add push jg mov jmp test push repz loopne push stc movsl (bad) adc mov pop cld xchg test xor jp (bad) and jae inc insl sbb mov xchg out mov push cmpsb mov int add mov dec jbe lods gs lock ss into mov cs adc rcrl pop sahf in popa ret add jbe in cmc insb fstl hlt xor pusha jge scas mov cmp stos pop sub and or jo and add mov daa sbb fimull inc inc aam test lret shll aaa (bad) sub (bad) xchg jae push out sahf mov cwtl xor pop inc ret popf sub movsl test mov incb (bad) cmp mov imul js sub negb xor gs repz xchg pop adc push mov sbb sub pop mov mov sub mov cmp add inc xchg lret fisubr in sub stos pop fiadd push loop jg push loop lahf in push js or xchg push xor or mov notl push fwait add xchg mov jmp in xor les cmp mov iret fstpl dec negl ds mov sub jle jo jmpw adc push pusha inc jnp iret and (bad) pop in (bad) xor jmp sub jmp outsl fwait scas out inc or cmc (bad) mov cmp push sub add lods pop push lock fild xchg jl data16 push sbbl xor xor sbb jg sub aad mov fnsave sub imul sub add lock jo das cmp loopne push cmpsl sahf cltd mov (bad) fnstsw sub decl pop jb or inc movsl inc push dec mov or aaa cs lcall sub jb test sub push lret add cmpsb imul push stc loopne ljmp lods iret fadds adc add mov popa cs jb in pop push dec lahf stos mov cld mov push sub inc cwtl gs jo fisubrl je cmc push mov pop push aad mov insl mov arpl pop nop stos das addr16 or jno sub test xchg adcl or push ljmp pop into in adc sub in dec pop test sbb loopne ss dec subb mov and mov inc xchg dec ja idivb enter pop sub fisubl shr inc sti sti inc jb ljmp daa (bad) adc push jg in movsl sub sahf dec inc cmp int das fldcw call and sbb push push mov sahf jl inc (bad) fnsave cmp cmpl push test inc sub out outsl repnz ja or (bad) push ret push imul add push loop add cmpsl mov add push mov push xchg fstp cwtl sti je mov fisub cmc lahf in popa mov pop sar sbb xchg xor (bad) mov fstl mov dec fs idivl cld push cmp push mov dec add sbb jp xchg test xor and es mov mov aad addr16 dec sti sub or sub lods std int jns jle push adc pop or shrb (bad) (bad) fadds mov adc sahf cmp cmpsl test mov sub dec flds fnop mov loopne sti sub and mov push mov jne add mov jbe iret (bad) sub sbb pop dec add and out and std sub add jecxz ds xor sub pop data16 decb (bad) sub adc and sub pop mov and xor in bound ffreep add mov sbb push hlt test pop mov jbe and arpl inc fdivs cli stos inc and shrl outsl je mov test lahf sub sub cmpl jge and daa incl dec or and mov into test js push loopne cmp mov mov repnz or inc pushf test insl adc sub dec cwtl addb push or aad push adc sub mov push and cmpsb repz sub cmpsb add push fmull outsl push cmp das xor inc xchg sub je cmc aad mov fprem fistpl std in sub adc mov mov jge cltd das lahf pop sub sbb xchg jns push mov insl loope cmc enter ficompl fistp sub ja fidivrl jmp lcall mov push mov pop push sub and sub ret pop push call cs mov inc and or (bad) imul sbb in and rcr add cmpsl xchg test pcmpeqb inc out lea outsb insb ret mov lea or xor push cmp sub mov rcrl popf sbb daa inc pop icebp inc cmp mov or gs cwtl sub ss mov xchg (bad) negl xchg (bad) je pop (bad) mov xor push test jne xchg mov add call sbb (bad) xorl add xchg das sti dec add je daa dec xchg jmp hlt aad cmp lock (bad) aas jb ds sar shrl mov lods or push pop xor outsb push jo xor mov (bad) dec xor sub sti sub inc test mov rorl fldl mov cs out mov jp mov xor out jne pop ds rsqrtps sub mulb xchg mov sub sub xchg loopne (bad) mov test loop cs ljmp insb or sbb and sbb cwtl fdivr dec xchg test cs xor (bad) mov sub test mov mov add sub xor rcrb mov push push bnd mov push xor cmp lret add in movzwl (bad) xor je cmpsl movsl mov cltd sub mov sub push js fidivl adc mov sub loop cmp mov cmp inc movsb insb loopne scas mov into xor test mov and jle ret stc out lods inc aas pop in adc xor xchg aad mov and adc sub push setno ds test pusha push cmc mov lcall lret mov ret mov sub lods push movsb xor adc adc cmp ds sub lret (bad) pop sub fidiv lods data16 fnstenv cltd movsl repnz out cmp loop ljmp mov push (bad) jg test shll decb outsl mov dec hlt push stc out popa sub and cmpsl sahf push ljmp or jae push lcall sbb (bad) in je (bad) sub adc out jl cmp cmp dec enter mov sbb push sub xor push sub cs (bad) lods fwait enter sub scas sub cld cmp adc mov repnz arpl mov bswap fnop dec mov sub mov mov adc sti out out push xchg mov push testl or inc inc xchg sbb fisubrl fwait sti jo imul std or sub pop xchg xor fcompl adc sbb and jecxz cs aad rorl push xor js add in jg sub out test add daa (bad) clc mov fdivrs cs scas sbb ret lahf mov dec movsl mov cwtl loopne adc out xchg rorb out xor add push test aam lods mov or and mov xlat jo and jnp xor cltd lods fwait or movsl lahf (bad) cmc inc ss dec add fisubr pop (bad) xchg xchg push lods xchg jmp into imul stos sub sub repz pop jnp iret mov mov ret sbb push inc cs lods in sbb pop jecxz data16 loope int outsb movsb push daa aam test inc add or mov or mov sub sub sub mov push push adc sub arpl lcall or jmp adc add in inc loopne and call sub fwait pusha movd (bad) adc sub je jecxz inc add xor push push jnp mov sub movb or sbb imul cwtl add push sub leave test push fidivr ljmp in insb push out adc outsl int3 mov leave ret push xor (bad) mov aaa les call js xchg push inc xchg lahf movsb enter inc sub sarl stos pop (bad) in js mov scas outsl xor data16 pop mov ja lds add sahf push es int ja xor std in mov and xor xor pop push movsb or pop xchg pop ja enter sbb mov push lods xchg ret outsl pop push pushf out jg icebp cld pop xchg in push push cmp dec addr16 lds mov push stos jo leave mov xor cmp cmp or push imul test out push dec (bad) pushl pop or dec add adc mov sub scas sbb xchg popf xor sub dec testl jg push aam sti inc mov lahf sbb mov inc (bad) cmp js or mov sub mov notb (bad) cmp push cs cmp xor sbb jae xchg dec rorb add sub mov scas xchg mov xchg (bad) cmp push sub ds inc aad and iret jbe cmpl sti in arpl xchg push jae test jl leave sub icebp dec ljmp cmc clc mov shll fsubl and (bad) sbb test inc jmp repnz and dec jle jmp pop cmpsl cld jmp or lock sbb cli xor test pop (bad) std mov sti sub aad ret aaa out mov cs fwait sub fdiv and sub add fcmove add push inc or pop daa ja push dec jl and lahf adc dec into or sub add ja sbb jb in fcoml sub cmp sub out enter push ret sub add sub xchg nop sub lahf pop pop in fcoml xchg cmp (bad) jbe pop int stc dec jne aas mov sbb (bad) and or outsl fwait mov roll cltd fpatan sbb xor sti decb loop inc rcrb leave call repz xor sar lea rcrb dec sub lret pop push pop mov sub insb fmul add jl inc push rclb sub out outsb cmpsb add lret xor lds dec xchg (bad) adc or idivl lock fistl shrb mov push sub sub jmp cmp je push jl ss xchg xor popa addr16 add sub jo push sub lcall mov fmuls inc xchg sub jns js test shll sub jmp xor xor jb popf inc push sbb push negl outsl and sub cmpsl out or xchg lahf sub jmp nop cmp sub jg and xor ds pop stos dec insb inc fdivs lods xchg out jb push lods int3 into js xor mov in add inc cld subl fist inc sbb xor pop pop jl dec inc xor les pop sub push pop packsswb ret xor mov push movsb mov add adc in int jle ds inc hlt cmp inc lret (bad) mov dec push imul mov movsb pop xchg (bad) lods push addr16 mov cmp jl xchg out roll lret cvttps2pi add cmp push dec mov or pop push imul cwtl in fwait dec mov jg pop iret (bad) das jb push sub test imul in sbb mov xor ficomp xchg daa (bad) ds pop jmp dec xchg xor test jns (bad) cs xchg add pop xlat mov lea mov inc sbb std rcll movsb inc add mov stc in xchg in xor mov cmc mov ja mov js stos cmp or sub sti jmp (bad) jns push inc int jbe stc leave lret cmp fnclex ss sbb movl ret mov clc daa jge sbb les sbb (bad) cmpsl shrl (bad) jl cwtl scas je push xor sub leave or (bad) pop (bad) push dec sbb movsl in dec push dec cmpsl xchg xor add addr16 notb mov and sub cltd push jecxz sbb div sbb dec inc mov or mov jmp jecxz and push mov ret adc ret cmpsl dec inc popf bound dec xor sub push ljmp sbb adc bound xchg les and jecxz cmp xchg mov insb rolb adcl int stc popl pop pop sahf jae int push cmp jmp sub leave and loopne sarl mov mov push dec aaa int and sbb es dec cmpsl data16 push push push dec sbb or cmp cmc push scas aas jno andl ret fisubl icebp xchg pop into dec sub add les mov xor ja pop ficompl add xchg xchg jno shrl bound pushf (bad) adc pop ja xchg mov mov leave and mov mov sbb xchg cwtl xor fyl2x push sub dec sub xor pop xor (bad) icebp lods (bad) dec scas xor mov sub je pop test movsb push mov cmp int inc data16 sub cli xchg mov fdivrs or mov jb imul out mov xchg adc sub test lds sbb push xchg mov push xchg aaa nop clc pop rorl cwtl mov xchg out push and dec push jae jbe lcall or jb mov adc fidiv xor sub pushf xor sub sub mov leave mov xchg iret inc imul aaa ja pusha insb xchg xor mov and repz inc jmp pop xor or fstpl sub imul xor push sbb fs movsl adc mov mov adc push les sub xlat sub lods ss fistpll rcrb push adc into out std xchg jmp js sub lahf int3 test call dec loopne sub push (bad) inc mov mov int mov into clc sub leave out mov or and imul es sub mov xchg or push hlt cld push (bad) adc push jmp sbb sub mov ficompl sub lock sbb mov and sub addl (bad) out sub dec adc ss dec fisubl mov jae xchg cltd lret push sub mov negl (bad) sti ss lret ljmp push jle iret mov jns sub dec cmp or cmpsb sub das xor ljmp pop inc js sbb repz or xchg xchg inc push arpl das (bad) lock or sub popf add pop andl addl sti mov hlt xchg in cs leave stos xor inc loope sti dec mov lret sub cmpsl adc cmp imul and test mov test sbb pop mov jne lahf data16 mov mov pop dec sti inc mov test push jne mov sarl aam pushf inc or sub sub sbb mov sub sbb shlb jbe adc hlt cmp stos lahf movsb fiaddl push (bad) repnz daa xor inc xchg mov dec stos pop or das mov inc cmp js int3 add jae ror popa sub add xchg sbb mov or mov xor outsl push cs push (bad) xor mov lods leave ror cld pusha idivb lahf pop dec sub mov roll lods daa out xorl mov and das (bad) pop push sub and pop and pop jmp sub lcall inc xchg xor sbb jp in push nop daa pushf int jg push scas inc daa loopne icebp jnp dec dec sub mov dec aam iret jge push jns mov xor cmpsl or inc sti dec jb sub sub call and sbb cmp lret jnp fcmovb ret mov push movsl xor ds jns mov loopne in sub cmp (bad) fisubr mov or ja in adc scas cmpsb dec push jo inc xchg sub or add adc inc push mov xchg clc iret jge subl aaa push outsl sahf sub shrl movb add jp cwtl movsl xor push fmull jb and outsb push imul ja fcompl cs jmp ret dec test or sub ret sub in sti or jne pop mov push sub sbb sub int fwait sub dec push bound pop ds inc shlb push (bad) insl jbe sbb lods and xor cmp mov ja sub inc mov xchg cmp cmp mov mov movsb outsb sbb mov or pushf push fildll sub mov (bad) neg lds sbb jg push pushf outsb cmp lods sbb adc jne sbb daa js cmp loopne and dec es add repz pop lret add call sti push xor sub orl add int xor cmpsb scas mov sub stos adc sahf leave lock (bad) xchg cs xor xchg xor jg pop or lahf test push stc dec adc shlb pop cs add cmp xor sub jmp pushw incb xchg out les hlt xor inc leave and data16 cs sbb add cmp sbb mov das int3 pushl xchg call mov fcomi inc jnp sub push out sub inc fs repz pop jo mov and sub xchg lret scas xchg xchg (bad) ss cmpsl rorb mov test aaa std daa addr16 push sub les sbb scas xor jge mov and popw sub push (bad) data16 sbb or sbb fidivr xor pop sub sub or imul or fstpt loop xor mov add cmp pop pop sbb cmp push stc dec lods sub pop jae mov or int3 xor xor xchg ss ja daa hlt xor aad fisubrl arpl daa jnp test call fucomp inc sub mov aaa adc jmp sbb loope push sbb lcall pop aaa adc sub dec int push out sub mov pop sbb shrl ss jp and push cmp loope adc sbb push sub pop jle mov adc incl mov pop sbb stos popf jnp mov int xchg lock jns (bad) dec daa in mov (bad) sub out mov sbb cmp daa xchg repnz fwait orl sub loop sub lcall int3 or push mov mov mov jbe mov adc stos cmp jge sub mov test call movsb jb loope dec xor sbb enter mov push jbe push lods inc cmpsb pusha and jo fdivr and dec jg sub js lds pop jae fdivrl sbb cmp sub inc loope mov xor sub jge imulb sub in pop lahf xchg mov sbb shrl cltd scas pop mov sub jnp mov in lret jmp bound sub xor leave imul inc jo call xor fsubs loop adc ds test mov sti cmp mov mov mov and stos (bad) leave (bad) or hlt jbe rorb sub (bad) (bad) sbb shrl push cmp fstpl loopne dec pop leave fstpl loop inc daa dec test adc popf jnp jbe push fsubrs (bad) shrb push sbb adc lods (bad) cmpsl adc xchg test dec ljmp jmp and xchg arpl inc jecxz,pn sbb addr16 cmc mov pop loope outsl cmp lcall pop int or push and or sbb ss pushf lcall out pushf add daa pop add adc xchg (bad) stos xor pop jg push push add mov push jno outsl sbb int add cs xchg add cmp lret rol cltd (bad) dec inc bound scas and push sbb inc shr fisubr and jl xchg leave mov (bad) int3 cvttps2pi mov cmpsl adc inc (bad) neg gs inc xor xchg sbb int jmp ret mov lods popf bnd jmp test mov add cmp rcrb add adc sub dec jle cmpsb mov mov ja enter adc daa pop insl (bad) lcall lea and adc jl jge sub loope mov fnstenv out sub sub inc xor fsubrs out inc xchg aaa mov lods mov jmp push leave fsubrl add dec push lret xchg sbb sub (bad) out das (bad) dec jns jge push dec loope or xor jmp jo scas mov or test fs cs and test dec mov dec sub jbe cmp nop sub daa dec test stos add sub push jnp and push xchg xchg jbe pop add cld jge adc and mov sbb sbb jb mov inc xor mov adc (bad) cmp and xchg jbe clc aam inc xor pop icebp aad fisubl sbb hlt pop jb cmp fsubs push rcrl adc adc mov sbb push add sub movsb or cs test fildll in fbld shl ss outsb pop fidiv insb jb sbb pop cs imul out xchg push and cmpsb pop test pop inc fisttp sub inc mov mov sub mov inc sub and mov mov xor out movb movsl mov popf cmp cmpsl in movb push push cmpl mov test (bad) sub pop aaa repz pop mov inc jge fs insl xor sub (bad) add idivl ss test cmc call nop xchg (bad) repnz (bad) aaa mov cmp adc mov leave add xchg jmp lods loopne int test or insb aam mov inc fnstenv sub xchg push inc jne pushf imul jnp bound lret sub lds popa mov inc repnz es out shr sti dec adc add jg and sub pusha lcall and push (bad) adc mov imull or push ja sub xor dec daa (bad) leave lahf push shrl cmp jmp push cli iret fldl out movsb ds sub mov push inc push pop sarb arpl lock jb jnp cld mov jmp fisubrl push dec inc fwait inc mov jae cmp insl (bad) enter or xorl add (bad) push fistp pop call mov dec pop and (bad) and repnz (bad) jbe (bad) das adc outsl cwtl movsl pop add out ss dec inc cmp push cmp jae dec xchg ds and leave jno push mov mov cmpsb cmpb ficom rorl xchg mov push jl cld add inc push lahf mov es mov jb std jns ret (bad) adc cwtl sub pop dec xlat cld or lds pop and push mov adc jno sbb pop push lret out lahf fldenv out in add fcoml lret jns xor sbb mov adcl sbb and ds cmpsl leave mov das fwait loop push sub mov int sbb push js fmull jne jae xor and es fcmovnb sub sub xchg ret and push and pinsrw scas test aam sbb js mov stos cs ds sub push sub xchg add pop fsubrl sbb sub adc scas adc cmpsb dec push popa mov out push pop leave imul pop ret sbb cmc push jle cwtl int xchg jg xor leave xlat rorl xor sbb lret push add cmc pop imul scas ja ret xchg adc push ret or lahf xrelease push jns jnp or xor fsub sub and sub dec sti jecxz addr16 bound out push mov add push sub (bad) les adc movd js sub out push pusha out mov xor pop sub ret ret xchg adcb xor sbb sub pop sub pushf xchg lods push xor repz movsl test ljmp sub sub popf out xchg xor sbb inc inc mov subl cld test data16 and test xchg adc sahf dec stos sub and cmp lret inc and ss sbb call bound sub xchg cmp lahf sub mov pop pop inc shrl push dec inc jg xor and pop jmp cwtl push fscale xor xor cmp and mov mov ja dec and dec xchg ret and imul jg jnp pop ss push adc out sub in push hlt dec adc mov sbb sub fldt push clc jo and jns add pop xchg mov sub aam mov sbb jge or inc cmpps mov dec cmc sub sbb and jle and popf sub mov jge shrb int fistpll test cs sub in (bad) mov loop or (bad) dec adc int mov or lods mov imul setns iret std loop,pt mov sub repz sub mov imul xor dec sub cs (bad) jae push mov fs into je insb lahf imull nop and daa movl sub dec adc push imul fdivs mov adc sub (bad) dec pop adc sbb in iret jle sub xchg call stos sub dec orl sub fnsave test lahf leave inc push lret jnp push or jne roll adc cmp ja daa lahf cmc push int and cmp imul es ja mov and fucomp push aas mov push pop inc gs sub (bad) test iret data16 add push sbb sbb sti imul movsb insb mov pushf sub mov push sub scas xor xor and dec sar sub adc sub cmpb xor mov and mov inc sub imul lahf sub pop mov sub jle adc and jno,pn das mov dec clc fnstenv xchg nop mov mov adc test (bad) ret data16 lods and push arpl add mov lret jecxz les add jmp and (bad) outsl hlt inc fstps ljmp jmp hlt ficom or movsb jg out fs push lret sahf cmp clc push pushf mov aaa loope addr16 andl mov sub jp outsb pop pusha test test gs mov out dec movb ret shl cmp out push mov shl push sub outsl lods dec popf jno pop sub and dec aas sub cmp mov pop pop or arpl and in pop daa adc or pop push pop ret ss sub lahf stos ljmp std sub mov rorb inc or pusha out jmp cmp xchg scas pop sub sbb fild sub cltd scas stos sub daa les push mov sbb push add and in inc test mov mov adc jo ret jg pushf sub add dec pop xchg and fdivs xchg divb sar cli mov xchg test pop mov int daa aad adc cs movsl mov (bad) sub xor out mov shrl jp xor shrl adc pusha cltd (bad) out pop xor xchg cwtl or sub pop and mov (bad) mov xchg or jb (bad) and cs add test lea jb xor in sub xchg rep (bad) fiadd or stc sub leave push mov lock (bad) xchg sbb xor pop test push aam inc stos dec dec xchg adc int sahf out push mov (bad) dec outsl mov xor jg or dec addl hlt add out cs lods pop add dec inc mov jb leave sub (bad) addr16 and andl and loop add push jle aas cmp int lock lods cmp mov leave lcall jb mov rorl pop cltd (bad) xor mov xor bound aam cmp pop push outsb cmp sub sub jnp sar inc rorb imul sti push xor push mov popf jb sbb out push or add arpl loop sbb xchg test mov call fsubs (bad) adc imul push out enter std sub inc pop inc inc sub popa out xorl mov bound jmp sub pop rorl mov jb add jl or jmp cmp jnp rcrl aaa jbe mov cmp or dec jnp test subl out and jne arpl add enter jge loope sub es or sub push pop xlat push leave in pop mov adcb out jmp dec int3 stos add aas add es mov pushf add xchg aad dec rcl jnp aaa nop/reserved or jle xor insl add or cs std and sub xchg mov ficom push insl sub notb jnp sub mov aas jg ss int in pop cmp fildll leave pop cmp aad sub (bad) fisttpl mov (bad) adcl loop jae vorps dec or dec cs jecxz dec jl add pop cmc cs xchg (bad) mov and outsb sub cmp loope pop dec or cmp add ret bound sub adc xor or call ss jmp or loop pop sbb pop sub cli push loopne fsubr cs push inc fisttpll or repz mov test out ss (bad) adc jbe ret sub loope fnstcw in push sub xchg (bad) cmpl xchg inc cld daa sub push gs xchg mov pushf jmp fucomip out and or flds addr16 out pop ljmp sub and sub sub sub clc xchg pop in addr16 or sub or into xor sub lahf cmpsb mov pop insb or jbe add (bad) lock dec (bad) dec (bad) mov cwtl mov adc or lret dec out cmpsl add sub push push mov lock out and addr16 fmul inc add sub test sbb mov lds sbb xor mov or push sbb loopne insb and out fldcw push jns hlt jp push pop dec sub js sub sub sbb xchg in xor (bad) fdivs push lcall inc push (bad) sti into xor pop mov pop adc std push in cmp je testl mov lcall movaps mull bound xor sub jg lcall cmp orl xor or cmpsl xor loope sub jnp or ret fbld loopne rorb cs sub sahf inc jns daa inc or pop sub jae lods and bound pop and and or push stos and in xchg xor pushf out jo imul mov shrb iret ss inc mov and stos bound push dec pop cmpsl popa inc and subl nop jmp ds repnz sbb jns test mov rorl inc xor adc call addr16 dec xchg dec xor sbb fstps inc or ds mov jecxz movsb insl mov arpl leave test jne and inc push test add add sub movl outsl push ss fistp lds test xchg into cmpsl and clc test movsb cmp adc pop arpl sbb mov fcompl jno xor stos inc cmpsl jnp sub sub dec cli cmc adc sbb pusha and sub fcmovne mov push imul xor dec pop push mov sahf dec sub lret in imul sub les test fist or aad test in fistpl sbb cmc xor jp fcom mov iret divl mov incb sub outsl sbb movsb dec sbb push lock sub xchg push dec into push test sub sub jno mov cmp repz sub push pushf or fcmovnb pop shll cwtl daa ja or push scas nop jbe js repz test (bad) (bad) mov insl popa pop ds shrb sub je test and outsl cmp stc cmp bound push push cmp adc cwtl shrb lahf leave sub test gs add sub insl add mov xchg stc jl mov adc push (bad) pusha jbe lret loopne jmp pushf sbb pop mov adc bound loope inc hlt sbb jne fucomp add outsl jo clc pop mov loop push xlat out ss movl inc sbb test ss push dec add sti and ljmp sub dec decb fdivs xlat bnd mov call sub fsts inc mov daa mov mov addb push sub sbb xor mov iret (bad) daa cmp subl mov sub cmpsb push data16 loop ss adc mov xchg shrl imul jnp mov cmp push xor xchg cmp lret mov insb bound out (bad) ss fcoms sub clc sub dec mov in stos mov cmp loope and aaa xchg jns xor test or fisubrl jl rorl insb xchg jecxz sbb fidiv scas daa sahf xlat cs jmp or sbb sub idivb mov test sbb xor psllq sub cmp add push (bad) clc and xchg cmpsl mov fmuls mov adc sub aad ja adc in (bad) cwtl popf mov pop mov cmp sub fsubrs in repz xor out lahf xchg sub cs push jns test cmc jb xor stos or movl mov mov fwait scas out push cmpsb adc lret fsts je xchg add xor adc cmp fsubrs test ds lahf repz (bad) mov push jge sub jg ficomp stos lods mulb add (bad) xor push pop sub outsl adc imul pop xchg adc sub (bad) adc pop sti sub inc mov rol test (bad) aam xor mov cmc sub pushf jns sub push inc xor cmpsl sub sub push xor adc std adc and mov dec push xor and popf push inc sub stos mov test movb fstpl and lods fadd test ss loopne pop or sbb xchg (bad) hlt cmpsb mov dec cmc and sbb and mov inc xor cmp data16 loopne fistp jg int cld leave xor test adc jl (bad) popa mov push loop stos lds (bad) adc jns mov dec mov ffree aam repnz pop outsb cli cmp pop or sub lods push into inc mov int pop iret cmp mov sar cltd mov dec cmpsl add cmp out cld into mov mov leave sbb jnp cmpsb sub data16 inc xchg lret add lahf and fild xor push add push pop das cmc pop pop jns dec lret sbb sbb add dec pop movsb insl (bad) xor push stc cwtl ret imul leave dec dec loope stos push subl popf push insl sahf push aaa push adc sarb sbb inc sub out sub jp out dec xchg mov scas xchg mov push sub mov loop divb pop cli inc pusha (bad) int3 fdiv dec or sbb add aas outsl xchg or dec pop jae leave push adc das pop rsqrtps ds cmp (bad) and ret cmp pop stc fildll sbb xor dec jae aaa push pop add (bad) loope int cmc pop add and ja pop jecxz popf xchg icebp adc das test add mov add nop dec lea jo mov mov push cmpsl popf mov push jae int sarl add sub pop mov or stos push cmp int loope cmp (bad) scas cmpsb aas push pop sahf andl daa jno gs idivb jge jp leave cmp test dec daa aad dec dec ret inc andl cmpsb aad adcl sbb popa inc enter dec sbbl add mov adc fstpl imul inc inc (bad) mov mov xor aad idivl data16 mov xor int pop es xchg shrl insl rcll push ror movb dec test xlat lods rcrb inc adc cmc sub dec cmpsl int mov push lret insl movsl into cmp loope xchg mov add ss cwtl mov imul imul mov or rdmsr mov rcrl xchg push dec jl imull leave inc addr16 int or sub lahf mov pop sub dec mov shll popf out subb sub sbb xchg pop jle sub pop ja sub inc lcall movsb pop lock test fisubr ljmp fwait sub (bad) and stos or test dec loope test adc push sub xor sahf (bad) call test inc or cwtd jp (bad) mov (bad) call push lods mov lea imul cmp xlat mov (bad) loopne jae pushf mov pop sbbl ret fst sub sbb nop in lock cs jo jge lret pop inc fs imul rcrl mov dec mov cmp push cs (bad) out stc pop stc icebp xor push mov inc or loop fsubl cld scas call inc arpl ret and add test cs call into daa xchg dec jle shll sub fsub sub mov (bad) sub cld sub ja adc add and push sub mov sti and mov push and pop xlat jb ficomp call or fdivrs mov sub or loope dec aad or sbb dec xchg and mov mov or xor (bad) cmp into js lock cltd and sub cmpsl int stc dec (bad) push jg mov sub jp bound dec psadbw jbe xchg inc push or mov or xor lods and push mov pusha not adc clc rcll leave mov iret and sub mov loop aad scas adc dec jp add push pop push sub mov push cmpsl mov sub or lds sahf cli push fwait sbb test mov sub and sub jns cmp out inc sub xchg aam jae stc sahf gs and icebp das lret loop push lcall push xchg mov nop mov sbb in pop push and cmp (bad) ret cld inc inc sahf test dec sub je fdiv daa test inc add jmp daa add fdivs daa and xchg outsb jo sub (bad) push mov stos mov cltd push xor cmpsb repnz incb inc rcrb out lds std lret and sti mov arpl jp mov pop enter inc bound dec (bad) cmpl push aas cmpsl adc test (bad) or in inc sbb ds ss mulb pop je inc jge and cmp out jo scas roll lcall sub pop mov mov pop sbb push cmpsl pop scas stos (bad) mov stc scas bound mov jnp jmp mov cmpsl xchg cmpsb sahf add xor sarb les inc or fnstcw jb dec sub imul stos (bad) jne sub sbb jmp cmc jmp dec and movsl pop in popf adc loopne sti dec sub icebp mov dec leave popa push fisttpll cmp sbb cmpsl mov (bad) inc xchg jmp fdivl movl out aaa ss icebp test adc jle mov add sub test or adc aaa adc dec mov decl stos (bad) addr16 sub adc mov sub push out mov cs insb mov hlt pop sub pop inc decb inc add pusha je divb xor cld xor mov out lods scas mov jae inc cmpsl add decb arpl test xlat sbb inc mov jbe xchg mov imul cmpsl (bad) adc cli inc cmp xlat xchg sub fdivs and ret xor jmp in push clc push adc (bad) ficom cmp aam or jbe cmpsl and push pop movsl into push mov or cmp add popf bound mov ja cmp lods clc xor or mov mov sub or or cmp (bad) or jo mov (bad) pushf (bad) sbb insl repnz jl clc add ljmp cmp mov outsl sub test fsubr xchg popf sbb aaa out iret (bad) fiadd push jle loop out loop loopne pushl rcrl inc sub fcomps shrl enter sti mov clc in fidivr or sbb push xor leave sub bound pop cwtl clc sub dec cld js fcmovu xchg in repz sub pop mov add or outsb lahf add sbb mov decl sub leave adc dec adc adc les sub test xor sub mov lahf jle mov sub orl cld adc das cmp subl jle in loopne xchg mov (bad) data16 dec loope aad enter push mov les dec inc fs xchg sbb inc fsubl lods xchg sub xchg std push sbb mov push mov fs xor mov cwtl adc sub hlt mov into (bad) enter push js sub in bound adc sbb add xor xchg jbe ficoml sub stos sahf loopw sbb xchg or xor inc and mov cmpsb insb add test jns sub cmc sub sub sbb cld add test or out cs js jmp inc movsb and pop sub inc push or imul mov dec lock stc push or xor sbb movaps lret test ret pop mov xor push lock inc sti jg sub std mov imul push jmp adc jecxz and ficoml mov sahf int3 leave test jmp dec mov sub icebp mov subl arpl lods jnp loopne sub sub sub dec mov push inc sbb sub or cld xor mov sub add adc xor xchg cmp rcr sti sub aam sbb sub jp cmp mov xchg sbb sub dec (bad) call xchg aam fwait push xor insl sub dec test inc or cmpsl mov dec in fcomps jae stos cmp notb nop xor dec aam cs loope sarl fistpll mov (bad) fnstenv or sub loope add scas sahf leave jg cmp subl xchg jl bswap sub lcall cmp in mov imul push push cmp jmp int3 xchg pop scas stos push (bad) test add jb dec fistpl sub xchg fxam jno adc insl mov xchg fwait int call call pop pop fsub pop scas aaa xchg imul sub lods jmp popf and int scas gs sub clc roll les or sub imul jae sbb nopl call or sub movsb jo mov pop sub (bad) dec std dec add jecxz ss (bad) xor es fidiv push pop mov cli addr16 int3 sbb arpl sahf jmp test adc xchg addr16 add sbb repz test int3 sub out inc push or ficomp sub sbb xor orb out out mov inc sbb mov je and (bad) repz sub pop (bad) in pop cmp stos jmp pop mov scas mov data16 ss mov es test cld int testb sub add pop lcall rcrl and sub dec addl or fiadd daa dec jg sub mov arpl jns xor push stos or movsb and mov mov les les mov test repz push pop push jno cltd sub in jecxz es in push popf lcall jns (bad) pop test sub lds push fidivr adc iret mov and cmpsl sahf repz push gs jno add xchg stos fsub decb sbb inc jmp push jge mov xchg cli fiadd dec sbb (bad) sbb adc rorb xor (bad) into fsts hlt (bad) adc mov ret mov dec sbb ljmp or ret rcl push inc jo xor push adcb sub and sti lods fwait stos xchg (bad) cmp sub sbb nop jg test bound ljmp lock add insl xchg cmp (bad) mov test and push jnp sub pusha pop mov (bad) cmpsb test jbe sbb popf add prefetch sub push ds ret scas inc and pop mov adc lods repz adc sub out mov dec mov mov icebp sub int3 bnd jbe mov mov nop lret xchg cmp das xor jmp sub pop loopne (bad) jne sub xchg and lds cmpsb push aad xor call in sub xchg inc negl scas push sub fildll das fisttpl sub jg mov xchg cli dec push daa jp movsb and lahf or daa sub ja jg sub out mov mov into sub ret sahf cmpsl out js adc imul sbb push xchg mov pop leave mov cmp insb mov out and sbb sub add xor mov idivl leave cs scas out imul aaa inc pop and xor scas fwait (bad) fidiv mov int3 ljmp in bound cmp pop icebp xchg jbe cmp mov sub dec clc int dec and das mov and push mov stos lahf movl jno sbb sbb pop push (bad) data16 add adc mov pop fldenv sbb (bad) mov leave dec cli inc xchg push and shlb mov mov dec stos mov int xor sbb mov outsl and xchg and push jl ja pusha xor fwait adc fisttpl adc push shl neg dec and xchg xor gs mov (bad) and mov fisubr add loope fbld mov aad adc cwtl xorb sbb icebp div and xor or xchg xchg cld cmp mul lret and fmuls call inc and int sahf mov or mov es (bad) aas cmp hlt mov push pop jno sub push test lret aam jp aad inc (bad) sub pop ret or push mov inc es ret les inc and or jmp fistl sub (bad) inc cmpsb outsl xor int jne mov jl sub sub arpl sbb out push xchg sub push cmp cs les insb xor xor jge and push std daa pop data16 pop shll fdivl sub mov add inc sub nop mov repz or mov or in call sub sub gs outsl cld je xor out mov sahf mov xor mov ss xchg sub rcrb xor movl sbb jp popa add jnp pop sub out test lds cs clc rcl cmp fs mov popf jbe mov sub jmp adc stc push push into test aas sub jno arpl push pop dec and ret mov in xor inc js cmp rolb ss mov xchg test sbb xchg rorl or (bad) mov push push sub pop add rcrb cmc pop int3 push js dec (bad) add jp push loopne xor (bad) mov out xchg push lea pop sub mov and add lahf in pusha mov sbb hlt sub ja add imul push cli fsubrs xchg dec std decl inc test and shlb sbb xchg push adc insl fsubl push mov (bad) ljmp adc inc or into sqrtps adc adc cmp fsubs mov mov adc sub push repz popf jmp (bad) scas add fsubs or clc (bad) mov sti iret ror imul jno xor sahf cmp mov sahf inc sbb fsubrs movsb test pop xor cltd ss mov xchg pop cmp fdivs std leave ja dec test add xchg cmp or xor mov mov jg sbb add lret cmpl xchg aam add inc int xor hlt pushf fwait imul dec int mov mov test popf aaa jmp rol cmp xchg jbe mov fwait out ds pop mov cli (bad) in fwait dec sbb loop sub arpl daa jl pop icebp mov cmpsl insb bndstx in sub push outsb pop jle dec mov sahf lds xor je and xor lods enter xor mov lods xchg stos enter or pushf xor out (bad) adc jge out rorl and sub sub insb faddl leave dec dec ja rcrl ret add sub hlt inc add enter inc xchg aad lret rclw pop mov pop cmpl inc jecxz and sub cs out repnz out inc (bad) xchg sub cmp jb inc pop sub out push jbe ss rcr cmp push jo in pop out mov mov cmpsl nop pop outsb inc sbb ds leave pushf sub call xchg push add sub pop lcall iret les sub leave das xor (bad) mov stos jb sub mov xor cmp push daa add ljmp mov sub repz aad sub je cmp xor jl mov push mov clc pop sub xchg rcrl pop add cld addr16 ja and stos pop sahf pop mov lods mov push notb or leave adc push lahf mov mov xchg mov and xor arpl (bad) mov xchg sub xchg sub sub push movsb es ret pop mov sub mov sub pop xlat (bad) fwait jecxz cmp jno cs add aam inc mov push mov out ss xchg jp adc sub arpl mov imul fwait sub xor ds popf inc daa xchg int3 popl stos outsl (bad) test repnz (bad) aaa sub cwtl test popa sub aad mov mov std mov or dec mov pushf xchg add or and cmpsl cltd xor jmp test and pop in int js adc outsl sub lahf movsb sub lret and push jp sub adc movsl outsb (bad) dec nop int3 and sub mov fiadd sub jb cmp movsb sub test shll test in and hlt sub cmp test iret sub adc pop mov das mov or jno dec fbld iret test add jmp mov daa fwait sub cmpsb out push or pop inc fucomip sub call insb stc mov sub dec mov (bad) cmc test imul daa inc xchg mov inc jb xor shll push and xchg or pop sub jo pop xchg test (bad) sub idiv int3 push or push add (bad) xor imul addr16 or enter sbb lcall leave mov xchg movl ljmp aas pop mov mov sbb fistpl mov aam jmp (bad) in pop sub pop jnp sbb (bad) mov jne or int cmp push dec jns movsb test addr16 (bad) cli jbe jbe sbb jg stos jnp fs push test ds (bad) mov movaps jmp mov in (bad) cmp insl cwtl mov push mov push sub cmp cmc pop dec jo (bad) lret sub cmp movl bound imull or sub leave or inc icebp int mov push add cmp sbb fildl cmp mov mov aaa dec jmp icebp lahf push jae xchg push leave push adc push popa xor push (bad) (bad) push xor in xchg pop xchg bound pop lcall add fadds cmp out adc sbb test lret push add xor loopne mov fnop sub jp and (bad) dec stos les (bad) mov dec aad fcomps mov push mov mov mov scas push add cmp lret inc sbb sti sub fnsave cmp lahf add lahf dec jl xchg pop icebp xor ss out sbb mov test push mov faddl cli adc push repz test lcall pop mov rcrb cmpsl push xor push bound shrl mov inc out dec fwait mov adc pop jg sbb sub pop popa (bad) sub push in cmp push (bad) mov add daa rcll inc xor dec jb sub cs mov or inc movsl mov jo or lds loope jo add dec sub adc inc (bad) jae cmp and dec cli cld lret mov popf jg dec add jp ficoml (bad) fidiv sub mov sub push push mov inc or lcall sbb cmp push test push popf xor mov in sub sub (bad) push or sub mov notl scas sbb fidivrl push sbb xchg sub and jb or sub xor inc dec inc (bad) xchg insl jb inc push jg cmp or and cli pop jb mov cmpsb ret add lcall daa loop sub push mov int in mov std xor push cs mov int loope or xchg mov subl mov loopne out rep mov fistp jne outsl xor pop cmp mov jl xor lahf lds mov xor aas popa fwait dec int inc test pushf pop pop (bad) adc push cmpsl cltd clc test adc pop cmp or pop call dec mov enter jno scas push lock mov jns pop mov mov pop adc sub sbb push stc sbb out sub dec lea push adc lods mov (bad) mov sbb dec adc (bad) popa cmpsl xchg xchg push jae pushf push and int3 loope test js lcall xchg mov mov pop adc daa sub out call in and sub cmp pusha mov pop lahf pop test loopne sbb (bad) and jb jp jo push pop adc cld leave int3 pop cmpxchg xlat fisttpll icebp loop (bad) int int mov inc test mov fsubrl mov or out mov sub pusha mov fs inc or test out cli mov enter bound mov jmp sub and pop cmpl cs sub jmp insl inc test leave or adc ret cmp inc sub movsb add push inc bound (bad) int3 push out inc mov pop adc dec add addr16 insl or jle popa mov lds les insb fidiv fisttp lcall ljmp fadds adc and jg and add sub fldt sbb dec xor fldenv jl stc sub inc lret mov enter and xchg inc ficomp jnp dec imul mov inc and loop mov jbe (bad) push das pop sub inc xor test (bad) test sub or int int and adc (bad) pushf scas sbbl mov test or dec jl mov inc push push mov ljmp and lahf ja stos sub dec pop sti mov popa cmp out int movsb lahf cmp loop mov (bad) or cmp aad sub push call mov or inc adc sub adc or adc call xor and lea jl ja nop ja js lea rorb mov mov out js ds push sub leave or sub sbbl add push and sbb push push adc outsl lcall addr16 aad loop sub sub or aas cld addr16 popa imul cmp cmpsb and pop test (bad) ds loope test lahf movsb ret push aad cmp fsubrs inc (bad) dec xchg test cmp shrb ljmp and loop sub pop add cmp adc fsubp cmp bound subb sbb sub mov push icebp sahf sahf outsl sub inc mov sub ljmp xchg dec fldl jo sbb out sbb lret add subl icebp (bad) xchg bound or sbb xor fisttpl mov inc pop imul call les pop fwait jecxz inc rorb push sub cmp sbb mov sub sub sub push test addr16 mov mov push fiaddl dec mov stos and xor fadds add pop movb sub arpl mov push (bad) fisubrl (bad) sub xchg fidiv outsl xchg inc (bad) dec mov js mov sub test sub sbb mov in push mov pop aaa xchg aam sub mov mov and in xor sti cltd sub jo cmp and pop lods xchg icebp shr jo sub (bad) not ljmp adc out in (bad) mov test in cmpsb pop adc add (bad) sbb inc xchg mov xchg sub xchg loop notb push sbb into xchg push je test out push pop in (bad) jnp sub sub and pop in jl imul jns push cmpsl mov jbe add xchg or sub sub pop lods pop pop aam repnz pop inc cmp iret in inc movsl push sub dec mov and lods push jp cmp adc sub mov fisubrl push pop dec addb cmpsb and into dec xchg add addr16 icebp ret sub xchg and outsb pop cmp insb add sub and jg mov dec push sub inc or cmpsl mov sbb ljmp cmp cmpsb mov and push ja popa push lods jecxz adc out (bad) loopne pop xchg xor in sub mov adc xor push and mov mov mov adc (bad) aaa dec nop and test movsl les or aaa lods push adc cmpsb in cld xor movsb test dec jo jnp mov xlat (bad) fimull insb ret clc push push cmpsl sbb (bad) xchg (bad) sub or in jne add outsl scas sub mov fsub xor mov call rcll xor inc jns (bad) or push loopne (bad) jno xor jge pop insl leave add dec das daa dec cmpsb push fisubr mov mov xchg shrl bound fnop inc ficoml jo es mov dec add clc test xor sar imul jp mov sbb in iret insb das sbb add addr16 sbb jge out out mov insb fimull aas out sub repnz xchg pop rorl sub pop mov (bad) ja arpl and cltd in xorl (bad) mov push lods xchg popa rcrl (bad) popf lds hlt call (bad) leave cmpsl pop fwait sbb (bad) pop scas xchg fwait inc or cmpsb in mov out fsubrl push xchg ret push jo jnp fsubs pop push cltd fbstp pop sbb jo ret sbb cmp dec cmp fnstsw push rcll xor scas inc jp imul adc movsl mov jns cmpsl (bad) bound mov (bad) mov push push into push fisttpll rolb mov cmpsl out jbe lret push adc jns cld xchg xor fcompl lret sbb mov dec adc inc imul push nop mov scas sub flds dec (bad) xchg inc mov dec das sub test sub shll out jp add mov add jle sbb and repnz jb sub inc xchg fs mov nop jmp stos scas lret xchg mov dec mov nop cmp push das (bad) jne mov movsb jmp cld mov repz sub rol add dec (bad) xor xchg push sub mov fistl stos mov loope or getsec mov push jg pop or push cmp sub popf sub decb les aam xlat (bad) jmp jmp cmp pop imul ret mov and push in push int ljmp subb and xlat cmpsb int cmp (bad) xchg push arpl cltd push mov test mov sbb fcmovne cmc int movsb shl repnz ja xor das es jns push sub inc out mov inc sahf pop movb and add (bad) cmp in sub add pushf (bad) fmul cs mov (bad) mov (bad) push xchg inc mov (bad) bsf add daa or dec shl aaa and popa in out repz lods jmp (bad) scas push pop sub imul sub and aaa shrl dec iret nop push stos mov mov xor mov test pop sub adc jnp cmp and sahf sbb cmp fstpl test pop sub add movsb cmpsb sub fsubr orl jl shrl sbb bound (bad) mov popa add cld scas fwait imul mov clc (bad) mov pushf xchg cmp imul les lods int mov fwait ds sub cmp ret std int into inc inc lea adc jmp fiaddl cmp and sub and out adc add in push in loop jae fimul or movsl mov rorl sub aas hlt add add inc rclb lods mov shr insl mov scas sub sub out mov jecxz iret sbbb std add and (bad) or xchg xor and sub push xchg stos xor sbb mov sub clc insb outsb (bad) stc sbb push sub xchg jl gs loope xchg xlat js fldcw loop cmpsb notb aaa cmp sub adc fucomp je sub ret jbe arpl test insb xchg aad addr16 aam sub pop pop mov decl pop je test lret cld fisubr pushf sub push jp jb push inc xchg out in inc push data16 ljmp dec mov cld imul cmp loope dec or ret xchg add inc sub add adc push or (bad) out movsb jmp sub fildll rcll lahf mov (bad) in rcl arpl in cld iret mov jmp jb xor aam je or pop lock addr16 fiadd call add pop sub in (bad) movsl cmpsb xor jecxz and xor mov adc dec add and lods into cld push cmc ss (bad) stos sub aad arpl test sti ret jnp (bad) stos ljmp mov movsb pop inc xor mov ret scas cwtl movsl dec (bad) iret mov (bad) outsl ds fldt aam sbb out mov push rclb sub mov sub or adc dec das mov sub pop inc (bad) ss cs mov ds jmp fdivl inc pop dec aas imul mov sbb mov mov int lods sub push mov xor xor cmpsl pop add xlat sbb xor das xchg sarb mov mov ja lock loope mov dec in js xchg leave loopne pop mov pop fdivl sub addr16 pop lret popa lahf add scas fisttp aad dec push and cwtl leave mov pushf sub adc stc pushf push orb sbb or pop dec sub fildll dec movsb or and sbb fldcw jmp notl sar adc mov xor push cli cmp fimull push cltd fldenv and xchg faddp pop dec scas add inc jle dec dec add or pop adc sbb lods popf bound or rorl test and shrb es or jmp add int cmpsl cs out mov fwait in pop out xor mov into mov js aaa adc adc loope sub mov cmp add xchg mov push sub pop push ljmp out hlt xor adc jns aad mov cmpsl (bad) jge sub (bad) loope fwait arpl add mov call loop jmp outsb cwtl aas cs leave xor (bad) out cmp jne shll je out or adc dec mov xchg movsl sub (bad) ja popa out xor and jge es hlt pop movsb pop loopne in xchg (bad) jmp sbb outsl daa xlat add adc adc call mov cmp cmpsl (bad) ds pop stc lods sub outsl jge jbe in lahf (bad) sub adc mov sbb mov or sbb addr16 cmp loope int3 imul sub mov adc outsl hlt aam xor jl jo sub mov push aad dec mov pop ret sub loopne icebp test cmpsl jno pop mov stc inc insl push sub or mov or and lods insb xchg xchg mov jg cmp push and pop in lods cmp (bad) jns or add aad notb sub lret and insl push out adc in call rcll pop inc xchg rcrb mov sub popa out pop pop ds xor loopne cmpsl mul jecxz sbb push inc pop jecxz insb xor and fnop pop cmpsl dec dec dec (bad) cmp dec cs or mov iret jmp es jmp push enter and dec mov jge add fwait add test inc push sbb das sub loopne lcall je popf jb xor pop lods into inc fldl cltd lret xor call fnstenv and testl sub shlb jnp pop push sub sub push leave adc sub mov and fwait imull xor xor mov pop sub jecxz and test aam fnstenv dec mov daa push and adc (bad) cmp not stc rclb sub pop xor or jo (bad) fs mov pop ss scas sti add std sub mov call enter jns cmp mov stc (bad) repnz mov stc loop inc or sub out push cli setnp call movsl sub in int3 cld xchg fnstenv push mov jns test cmp cmp push ja sub daa mov mov fimull jl cmpsl test push idiv mov rorb lret imul sti inc stos dec push sbb ss cwtl dec flds fldl adc push call insb inc inc rclb cmp imul adc test push pop cwtl clc lcall fxch sbb shll xchg fdivs cmpsb xor movsb daa xor push adc add push push push insb dec push sbb outsb cmp xor sahf ret jb rorb pushf (bad) sub and stc jmp push fs add sub or add push push mov pop sarl iret adc mov ds loop sbb mov sbb or inc mov xchg sub loope xchg add mov sub mov and pop cmp lahf jmp xchg cli sub xchg test jp sub les icebp dec cmpsl pop aaa adc push lcall sub mov loopne sub inc or push sub cld into unpcklps sub test pmulhuw sub ror push enter lods mov fmuls add or or imul loope jbe sbb add (bad) add cmp push xor inc out xchg pop pop xchg pop gs les stos lret mov fcoml add pop mov adc aaa nop in pop jg and pop rolb sub mov pop xchg and ss push lcall dec add jbe jbe jmp sub pop push std push int outsb fbld sub xchg sub mov jb push cs sub dec pop push es imul js sub or (bad) or ja pop iret sbb pop (bad) xor (bad) mov sub movsl movsb jl dec dec popf mov sub mov and cmp xor inc subl xchg cmp xor out test in or ss jg push std dec bound sub sbb cs sub insl dec clc push cmp adc inc jae push sub mov dec or nop dec movsb mov mov adc xchg mov popa jle xchg inc or lds add lcall mov xlat mov sub ds sahf jb or test or lcall fimul mov sub adc out loopne lds cs mov and scas inc leave sub adc and nop flds lea jge stc imull rcl or sub insl sbb push test aam mov imul adc daa add popa adc stos mov out loope out sbb jp into mov popf adc xor pop rclb in push int3 addb test cmp push sub fs mov nop popf aad jbe adc test add pop fiadd sub add sub pusha dec add or cmpsl movsl lods cs dec sbb mov mov sub lcall cs xor mov and je sbb bswap jg out mov lahf cmpsb xor mov int outsl jmp cmp inc ds lret mov loope mov lds iret mov fnsave sbb jp dec std lock cwtl icebp mov jns shrl iret (bad) imul in sub movl and pop inc ficompl push fs jne xchg sub inc adc push int xchg ss clc aam mov cld cltd icebp test sub push mov (bad) jne dec fistp fisub pushf xor (bad) or adc addr16 cmp test cmp int xchg push leave pop dec sbb fwait adc ds fsubs call xor or pop loop xor ret sti fdivrs call xor movsb or lret xor int mov push push cmp cmp dec xor and xchg add sbb (bad) xor push mov iret nop pop movsb sbb inc adc out and arpl int fwait insb fldl jo jns pop inc add sub stc adc (bad) outsb or decb adc cmp dec cmpsl loopne push leave ret sub lds push dec inc int stc std adc (bad) (bad) negl mov int (bad) jmp push orl xor int sbb insl jne push mov adcl lcall xchg dec ret mov sub bound pop js cwtl pop sub fcmovb out xchg scas subb pop add dec aaa or sahf add xchg leave adc in sti sbb jge,pn (bad) pushf push pop and stos rcr frstor movsb xor mov aam push xor push data16 inc mov pop pop cld (bad) std mov out add jo insb jb arpl stc iret (bad) std out sub fdiv xlat jae pop sub ds aaa (bad) xchg lea stos insb imull and sub in outsl pop mov fnstsw xchg mov pop xchg push pusha cmp cmp or bound cmp and mov sbb insb pop ja sub lock (bad) mov push test xor pop rcr cmp enter mov dec movsb and adc sub leave (bad) inc lock mov jg ljmp sub jg push mov xor xor out inc pop lret mov sub dec pop bound test hlt imul sub mov inc sub cmpsb call xchg out rep pop fnop and fstl sub or sbb cmpl cmpsb sub jae popf shrb mov adc inc adc push ja jno sub add and inc scas sti push adc sub jmp pushf xchg cmp or ss or push (bad) test loopne sbb movsb dec int sub jp int3 add out insl pusha mov (bad) mov pop mov pop pop lock xor add push ja cmpsl (bad) cmovbe inc loopne out and mov or jnp jmp pushl add imul inc or (bad) push test pop test sub mov int pop pop call insb xor scas out push sub out dec data16 sbb data16 leave sub mov sub addr16 test pop dec jns sub in pop jae xchg mov add sbb sbb out (bad) jmp and sub jns cmp hlt ds mov lahf mov dec dec sbb xchg outsb jmp sub cmp cmpsb arpl call fidivrl enter test mov rclb das mov dec jmp enter xor jne cli inc loop sbb in push push jmp mov xor xchg outsl mov push push push pop in (bad) xlat stc sub je movsb mov jge loop mov nop icebp pop xor (bad) jmp inc lods mov xor fstp sub out das jmp jb loop sub fistpll in out sub add clc ss cwtl pop xor xchg adc jmp adc cmpsb je add incl cmc shrl call jl (bad) jg xor xchg fsubrl inc icebp (bad) xor jle cmpsl hlt push or loope push adc shrl adc mov push mov out add ja cmp sbb rcll (bad) push pop or (bad) sbb leave loopne loopne adc in (bad) ficoml aam mov stos dec incb sub insb es dec notl mov xor sub pop dec ret int ds push jp stos or xor popf decb iret and insb (bad) out roll ljmp add out jnp pop test stc outsl push adc dec fucomp es add cli std rorl loopne pop or push out mov cmpsl push inc pop and sub adc xchg push cltd cmp mov cli xchg icebp mov sbb mov adc call lahf out mov and hlt jns add test ficompl jno dec mov push imul fbstp sub cmp cmpsl push leave adc ret mov pop mov pop (bad) mov int mov push (bad) das dec cmp push leave (bad) lret sbb jmp pop xchg fisub subl mov jae push adc pop fimull ja cmpsb (bad) push test test loope inc out xchg lods ret mov aaa push mov mov shrl (bad) bound popf enter cli inc mov sbb int daa cmp arpl push iret xor push outsl sbb jge adc sbb lds push aaa sbb dec push add lods xchg or push adc ja (bad) cmpsb pop add leave sbb mov mov pop stos test or mov cli scas pop pop jbe (bad) jb push sub leave test loope add or xchg jp mov ret repnz xchg mov call jns,pn adc jle shrl aam xor push pop pop lock (bad) and xor in jmp out mov stos cwtl pop or (bad) repnz adc push je sub leave insl mov inc add adc xchg mov mov iret lcall cmp gs (bad) dec flds imul mov cmp lcall scas xor shrb outsl jnp and push xor (bad) jl test stos scas repz repnz ffreep insl loopne es (bad) dec sbb jb sub jbe fwait mov aad push fcoms into pop loopne out pop add pop ljmp aaa popa adc sub inc stc outsb stos sub jnp addr16 mov dec aas popf out inc cs xor cs loop mov into test xor add (bad) icebp add dec js mov icebp std mov xlat hlt sub sub sbb scas int cld inc iret sub sbb push or xor scas sti test stc gs into jle push mov jmp mov and push sub jbe pop cltd scas pop mov dec and shr pop lods inc cld and sub push add or arpl adc popa push sub pop fdivl xor xor or cmpsl sub pop add adc repz call xchg ret (bad) ja pop mov data16 sub jge add lcall in xchg cmpsb adc push jp jo pop sub or sub inc cs (bad) adc and xor ss jo pop mov cmp ljmp dec cmc and mov popa mov cmp xchg sahf xor inc pop adc imul aam iret cmpsb push pop lock or jno sub aad (bad) jae sarl dec imul clc push out push cmp cmp sub in jbe cld sub mov pop jo add cmp sar cmp cltd ljmp sub cmc idivb xchg out pop nop test es cmp jbe ret sub hlt push xchg mov rorb call jnp cltd jecxz cmp jmp das mov xor cld xchg xchg cs and imul mov clc jecxz dec mov lods test cli sub movzbl fnstsw mov lea repnz mov stos mov xor insb std cmp jnp fisubrl movsl mov dec push mov das ds out cwtl adc push and outsb test arpl and andl sarb sub jge add push in jnp jno cs xchg push sub hlt pusha stc lock leave cmc negl lcall dec or and push mov scas jnp mov insb repnz xor push add or adc repz jl shll int pop push or lcall dec (bad) daa jg outsl dec movsb xchg cmpsl lahf addr16 int or (bad) outsl cmpsl addl jbe or cmc add mov jo outsb xor loopne sbb dec cs dec pop jnp int3 cmpsl lret add jne stos in sahf jno clc ljmp lret dec lret push pop (bad) les sub popa dec push xchg into arpl sbbl mov push push xchg or pop leave test es xor xchg push hlt adc add scas jns dec (bad) aam sub (bad) or loop scas sub outsb inc sbb loopne insl pop push stc cmpsb adc push xchg add mov ljmp aad and add push iret xchg (bad) aam out push dec cs adc lar push adc mov or in out or cwtl out out sub and es push sbb test in sub fisubrl cmp lods inc ficom (bad) sub jb scas (bad) cmp jne clc sub outsb stc cmp int xor sahf pop jno or push mov xchg test cmpsb ffreep add ss mov mov mull add xor sti pop fdiv xor insb or test test lods sbb mov push sub leave pusha push jbe shlb pop mov or jg adc (bad) leave add mov mov jecxz adc mov mov sub jmp movsb bound sbb and out fwait sub inc testb (bad) fsubrs pop je cmpsb inc dec xchg inc xor cld mov and fnstenv ficompl outsl sub sbb push sbb mov sbb daa push aad repz or inc mov in cmp sbb adc dec aam cmp test dec sub test in pop sub xchg mov dec shrb clc nop cmp mov jnp inc cmpsl jge lods add loope mov sub xchg das xchg add mov notl push jns,pn test push dec jle sub jne sub rolb clc es pop pop mov jg jl movsb test pusha icebp (bad) sub iret idiv lahf in pop pop and inc sarb mov mov sub je pop lds lea inc lahf imul fsub xor mov mov sbb cmp add pushf orl popa adc out sbb mov fs lcall cld leave or mov repnz (bad) iret adc (bad) insb sub mov (bad) fmuls cmp adc jp (bad) pushf jmp ss or and xlat movsb mov stos dec test cmpsb mov test mov adc test adc subl sbb mov sub mov clc sub aas in pop cmp cmp jno lret cwtl daa add ss jne jnp and jns and out sub dec dec int dec fnstenv inc push sub inc jno lods repz ds push pop pusha xchg sub arpl and and ja pop aam inc ret cmp nop jp or xchg bound fwait xor pop adc or inc andl xor shll mov jmp in dec fnstenv es lods or clc sub mov pop sub push jne xor in inc test or push in sub loop repnz xchg incb popa mov dec hlt fcomp pop in icebp xor nop mov jecxz cmpsb jo add loopne and call stos sahf xchg arpl call mov inc fwait push je aad adc pop je movsb test mov subb jnp xor sbb dec adc std mov jge xor sub shrb mov mov aad add outsb pop xor call add andl sub mov jg cltd (bad) dec lds dec lret (bad) outsb outsl sahf sub gs dec push sbb inc cvtps2pd sub lret addr16 mov cs ret stc push shr jmp dec cmp sub out pop pop inc scas js mov fistp or daa or sahf lods push fcoml (bad) lret dec lock stc cwtl pop punpcklbw shll jl cmp xor push or pop and cmpsl iret sub jg movl arpl pop lahf xchg xor cmp jle sub xchg and rcr out das adc mov lcall in push movl scas lahf js lret sub ficompl sub adc in sub or shll inc adc sti jb or push adc scas fucomp subl gs aas add enter and fidivr leave cmp sahf lret jb (bad) ss cmpsb sbb mov sbb mov imul lods lcall into repnz test sub pop and cmp iret mov fdivr (bad) sub xor loop dec and mov loopne push pop icebp test cmpsl rcr xor xchg int (bad) mov and lea pop sahf xchg popf mov jb (bad) inc mov sub xchg jo cmpsl cwtl adcl jmp and fidivl decl dec lods sub dec sti mov add jp push test pop lret sbb data16 imul or sub jle test fsubr pop pop sahf pop repz sub inc add ds sti nop cmp shll and mov stos sbb sub mov jl or (bad) testb push gs jp jne ljmp xchg sub jg add sub add or mov movsl and int3 das insl sub sbb fsubrp dec inc sahf add test into cmp out bound movsb add inc cmp or clc mov sahf arpl addb and pop rolb loope out and clc ret xor mov test fldenv push or sub leave add sub jb (bad) dec cmp jecxz sub push mov xor mov mul push cmpsb xor sub cltd imul dec out mov jp inc sub sbbl cmp mov out int std scas repz mov dec mov pop push cmc fwait sbb test rclb cltd xor sub sti pop sbb imul sub cmp bound fild adc and out in arpl mov push xor push push mov add sub pop stos (bad) xor xor aaa cmp jno fwait sub (bad) fldt mov (bad) je jb jb test cmc sbb pop pop and add mov pushf stos jno and cmp addr16 pop jo stos dec push (bad) dec xchg xchg mov scas or into sahf addl lahf in scas mov cmp cmpsb repz mov sbb pop call jno mov leave ret mov sbb mov cmp push mov push scas leave das loop movl cmpsl inc inc pop mov repz jl xchg (bad) cmpsl push cwtl pushf nop sub adc scas pop pop dec adc jl jo imul adc ljmp or incl push and mov push leave mov mov jo lahf idiv dec popf mov leave enter mov stos xchg cmp cmp lret xchg push jae idivl mulb push fisttp in fisttpll cmp adc ss fimull int popf cmp pop mov aas inc das enter outsl daa sbb int cmpsl das xchg or cmpsl pop cmpsl je,pn int cmp sub dec jae jno mov addr16 sub leave sbb inc mov test test cmpsl test aad jbe mov or xor (bad) mov arpl inc push cwtl dec push enter std pop and pushf lods out pop mov lahf and jae stc (bad) lahf repz shr pop jle sub aaa mov ficomp xchg pop xchg iret jae xor adc repnz mov jmp mov data16 ljmp ds dec add inc inc xchg movsb sub sub enter dec dec dec ss cld sbb mov cmp out test mov ficom sbb xchg cmp int mov or fdivrs xor jbe sbb and test mov fwait jnp inc pop int lret stos hlt leave or test sub inc (bad) std movsb lret dec xchg loopne pop mov and adc cwtl int cmp add ret icebp loopne mov loop aaa add add dec or dec adc leave push lret insb jbe inc pop lock pop mov leave cwtl jo enter push into test sar pop shr pop pop and mov fsubl mov pop jb or cmp jbe fistpll sub mov arpl or xor or sbb push int jne and cmpsb fstps aam int test or (bad) push (bad) aad sbb xlat or scas xchg and push fsubrl jns xor push decb scas or jg sahf cs pop ds xchg mov jp lea pop mov adc and and cmp or xorb orb and mov cmp fwait cwtl cs arpl loop push jbe mov ret pop imul jge pop int jge sahf mov pop (bad) fnstcw sub dec cmpb jl pushf addr16 out (bad) int cmpsl ljmp and inc sub lock adcl fmul xchg ret mov js mov inc shrl and sub fidiv cmc jp imul push (bad) jg pop or (bad) aaa push scas add inc mov push ss fist imul pop daa or jecxz sahf sub cmp mov xchg enter sub cmp (bad) xchg scas mov mov cld addr16 push pop cmp sbb pop mov lods add jae outsl insl xor nop in cltd loopne dec push sub mov and imul mov inc sbb insl fstpl rol and dec xor in call pop jb mov fpatan sub push xchg andl lea jle cld or addr16 xor (bad) cld arpl int3 sti inc cmp (bad) aad ret pushw mov addb sbb in mov (bad) lea in jg jmp enter push insb inc xchg add leave ja xor cs popf mov pop cltd test or cmpsb cli dec sub je xchg out adc scas pop sub ret and sub push inc or imulb lret sbb ds les push aam stc mov test cmp fdiv inc sub jo adc xchg ret ss add in (bad) leave push push jp mov lock mov sbb dec xlat test fsubr jg int add orb mov (bad) or inc inc or and test jp sub call js sbb inc loopne xchg push cmp pushf sbb sub push mov fwait imul mov sbb int3 push inc jb and adc sub inc mov cs ja rcl test sub jmp repz dec testl mov mov dec imul or ret daa stc in pusha sub mov les dec xchg mov push or std mov push outsb mov adc cmp sub int3 xor jp clc in cs fisubrl out leave imul or sub jge es dec lods mov lahf or sub fdivl dec dec and movsl sub out fcom and mov cmp (bad) (bad) cs scas add gs addr16 sub xchg mov fstps stos and pop or insb lea shrb repnz xor and clc sub loopne lods sub scas xchg dec jnp mov jg dec adc pop add fimull imul or hlt and mov outsb stos lock loop xchg pop (bad) and fldl sub cs lret sti push and jno es jns cmp add xorl in xchg jnp cli int3 fcmovb adc add daa out or repnz imul push (bad) out pop lret (bad) sub lock movsb daa mov fwait xor and cs test aam imull sbb cltd sub subw fwait add ljmp aam ret lahf vcvttss2si lcall ja mov nop rcrl leave sbb daa and or sbb push addr16 js dec sub add jne enter cli inc and loop imul lret popf imull sub sbb jle out in jbe mov and enter popf xor stc sub cwtl xor inc xchg inc or imul cs sbb adc jg shr out mov mov mov into push sarb movsl jbe (bad) mov leave mov aam jg ljmp test add pop inc lahf cwtl push sarl ret test mov out cmpsl stos (bad) jge jne adc xchg push lods jle cwtl jae mov xchg jl bndstx sub add or mov arpl pushf pop jns jno cwtl and pop lods es leave addr16 clc lods sbb fs or add mov jle ja or std lahf shll rcrl ret test inc push test sbb cmpsl test jg imul xchg cmp outsl int3 inc pusha fidivrl outsl and aas lea cmp scas cld movsl ficompl into cmp pop and jne loopne int3 test pop test cld lods call (bad) aam jno jge push jo ret sbb dec inc js shl addr16 add jg lcall adc mov push xchg int dec pmuludq data16 pop test ss sbb cmp add in leave flds in xor shrl push clc xor loopne not jge sarl repz in scas sbb mov stc jnp push jae daa sbb mov lds jmp pop mov push and cmpsl scas mov clc (bad) dec add cmp leave jae xor fnstcw rorb sub data16 mov imul pop push aaa jno aad out inc cmp adc js jl roll imul jns mov xor clc into dec cli jmp adc scas sbb fsubrs (bad) jmp cmp sub icebp mov out std push stc and add cli ds enter mov leave out adc shlb loop bound mov mov dec inc mov sub xchg adc cmp out gs shlb xchg dec mov aaa push pop or mov mov mov enter cld dec push fisubr adc jp,pn lret sahf mov ficompl (bad) mov pop lahf cs sub cld or xchg push cli push lret (bad) sahf cmp or adc mov mov sub cmp into or stc loope push arpl mov fcmovnu insl fisubr pop mov push out (bad) xchg dec int3 push test into addr16 add popf lods jecxz inc pop cs dec inc daa lods daa cmp (bad) mov lcall nop and outsl mov add push adc mov xchg (bad) pand adc faddl iret xor loop mov pusha add cmp (bad) or push mov insl mov iret test movsb mov idivb pusha mov dec das cmc in fistp daa mov and push xchg cmp repz ja js pop cltd stc daa cmp adc sub aad in mov mov adc pushf cmp ja mov cmp (bad) insl enter cwtl sub adc fsubs loopne test jne aad lods xchg pop mov cmp xchg shlb ret cmpb (bad) mov jb es sbb sub mov adc call fwait in je sbb mov loopne decb cmp (bad) sbb mov lods mov pusha pop call (bad) xor and insl inc test pop inc loopne lcall mov pop test sbb stos imull sub loopne jmp int sub add movsl sbb out sub xchg xor lret fistl xchg cmp ljmp cs xor imul pop je sbb stc xchg roll in xchg jns sub or dec rcl mov cmpsb sarb lret jae xor aad test push enter jmp mov call dec out leave sub and pusha mov movl jl mov lahf bound (bad) stos or and add (bad) xchg xor push cmpsl jo mov das jg insl in leave cld adc add pop cmp enter nop fwait or cmp cltd faddl push inc sti jl cmp ds sbb rorb sarb ret jl jmp loope inc lea adc sub std xchg imul sahf xor leave lret loop or add scas mov cld dec inc or aam jo cli jne iret sub lret pop cs js xor sub rol push pop push mov mov in stos adc stos dec mov jl inc push jbe sbb cs mov mov cmp lea (bad) mov xor arpl lds cwtl icebp sbb cmp and xchg bound insl mov dec push xacquire push sub xor mov (bad) mov dec mov add inc sbb cmc mov shll (bad) sbb pop or movsb pop je ficoml inc int3 push jo test xchg adc dec aam gs dec mov movsl leave sub pop out (bad) push sub push stos add rorl mov sub pop xor jmp (bad) sub mov data16 test adc cwtl (bad) jns jno cmp aaa sbb nop adc rorb imul push jns xchg sub dec jae inc jno (bad) dec ljmp mov (bad) out leave adc inc ret push hlt (bad) out mov scas and sub sub jg fcmove push or cmpsl in and or data16 pop inc mov cmpsl sub xchg aad sub fcmove fsts dec xlat sub bound rcrl pop pop xchg scas out cmpsb sbb adc sbb add mov cmp call and mov sbb mov sub mov movsb dec add loope pop mov sub imul (bad) imulb mov push mov inc and in aad adc js or shrl lret sub cmpsl aad sub js sub sbb repnz push push push movsl leave repz mov jbe push mov aam mov scas jnp push sub roll xchg sub (bad) clc dec orl jo lods (bad) jnp lock xorl mov mov adc pop sbb ss movsb sub in jmp mov cmp sub lock in add leave jno (bad) stc fnstsw into mulb push mov jle mov xchg jmp lahf insl sub ret cmpsl jle push pop lods xchg sub pop inc sub push fcompl cltd aas out mov fcomp jmp jl inc adc dec jg int loop inc sub sub adc or dec fcoms cmp push mov sub sub scas (bad) push cs cmp lds mov mov aad cmpsl push lar ror mov mov rcl inc dec mov adc dec in out pop cmp xorl mov leave stos or mov pop (bad) mov movsl xchg dec jns push roll sbb int mov cmpsl pop adc or leave xor sub movl int mov int3 cmpb aas jae aam in cmpsl inc test add js popf adc mov push cmpsl notb outsb call mov addr16 xchg into outsl loopne into mov xchg lcall jbe rorl cmp int3 loop je mov leave mov test or jl jae (bad) xchg mov punpckhbw adc divl xchg insb dec (bad) notl test data16 push push push test sbb mov lahf cmpsb jnp jo cmpl pop es push pop ss daa cwtl (bad) push ja in mov mov mov xchg int js jbe cli pop and pop pushf ffree or call adcl mov rorb (bad) pop push sbb jp imul rcr and dec aad push jnp outsb lret fwait adc pop in cltd cmpsl aaa shrb inc push pop cmp loopne mov pop inc xor mov xchg imull add cmpl sbb sub leave insb push (bad) mov pushf xlat loop in (bad) les scas jecxz dec hlt mov icebp cs fwait ss lds leave loope es jae cmpsl pop aas jle mov popa xor (bad) aaa adc xchg test cs sbb and dec out (bad) or int repz cmp pop (bad) adc cld je (bad) mov inc leave jl mov enter andb outsl inc cmc mov mov jge push subb ss dec imul icebp inc popa sbb sbb inc jae shrl fs mov inc das cs je arpl aaa adc (bad) int stc movl xchg dec xor sub mov (bad) jae push ds cmp pop jle mov iret dec (bad) or das andl (bad) or aam fmul mov dec dec adc addr16 loope int3 dec dec mov add jno sbbl dec xor cli pop call xor movswl add cltd xor and jne lret ret js out xchg dec int sbb dec push cmpl loope ret xchg cmpsb leave mov cmc nop and adc leave and out jno cmp and repnz dec dec cs leave pushf xchg mov mov int aas fisubr add xor mov aam adc sub pushf fistpl push lahf aad inc xchg test mov mov cmp or sub push insl (bad) jp jne dec xor (bad) and loope jne stos lea inc push (bad) repz sub js dec test and (bad) das lcall fs fadds sub jno cmp xchg push sub inc mov nop push fldt jecxz inc inc mov cmp sub dec dec and sub das shl push rorb jmp pushf lods add cs test inc pop lods pop stos and push sub insl mov mov sub and jnp dec push pushf and add jmp jp,pn mov popf lret rcrl test or fidivl jo cld insb mov dec lock imulb aaa enter and fdivrl push cmp and push sub mov loop dec mov loopne je daa sub ret dec push or sub adc inc sub cmpsb rclb and cs data16 das iret test cmp outsl pop notb xchg cmp sahf mov and dec sub xor mov mov shrl (bad) sub pop adc rolb add test inc pop jno,pt shll jnp cs dec je insb xchg mov scas cmpsl sub cli mov (bad) in jbe movsb inc mov adc (bad) sbb pop sbb cmp outsl mov adc test mov int3 (bad) fstp mov cltd sub movsb test sarl hlt add xchg js mov ljmp push movzwl cli das add loop xchg lds push jnp cltd repz call cld cmpsb les jo iret ror ja mov (bad) xchg mov or jno repz sub aas scas inc sub pop pop pushf and mov cmp inc int3 popf lods lcall pushf repnz les push xchg mov insb fsubl lcall neg mov dec xor jb nop mov jnp cld mov add jae imul and lods sbb mov xor push sub fdivs insl fildll jmp je push (bad) xchg loope sub leave mov cmpsl and in fadd sbb sbbl and xchg pusha push mov pop jbe fidivrl pop xchg mov pop andl inc cmp push cmp stos call (bad) fxch push (bad) imul mov jmp inc in dec or test loope cmp loop aad es cs jnp mov lcall outsb adc inc push orb pop xor out leave push dec int and not dec push in call orb (bad) in xor jae jns push sub push jge sub movb adc mov es imul sub sahf dec dec add mov cli push sub scas nop in cmp jl xchg push loopne shrb sub mov lock mov sub add repz iret adc fdivrl adc cltd out mov xor xor pop cmpsl jg push xchg aam leave leave inc mov pop jb inc cmp aad add sub sbb sbbb dec push dec cli fcomp cmp jns sbb fwait sub fstps add sub lea cmpsl cmp imull shl iret fnsave lods dec mov test test mov cwtl enter add clc leave popf dec movsl cld jae mov xor mov jno inc out data16 sti push cmpsl loop es xchg int stos daa lock jo dec les mov loop out (bad) add ljmp add xor push push cmpsl fldt pop (bad) push outsb std push out jb sar and pushf mov cmpsl xchg pop cmpsb leave test outsl xchg popa lahf cld push std xor sti insl fwait jb adc dec xchg sub (bad) jg pop sub push imul inc addl xor lds push int jae mov data16 push and sub mov imul int3 daa fs aas pop cmpsl int xchg ja and lods xchg imul or adcl sub ds test mov pop jmp in bound mov jnp xchg aam inc push sbb cmpsl mov mov xchg xchg mov fucomip popa dec pushf (bad) out fiaddl movb mov int push je cmpsl rcl int outsl push mov rclb gs xchg stos ror jg and pop cmp and xchg stc leave add xchg cmpsl (bad) in mov xchg push mov ficompl cli pop ja xchg or inc rol out test xor mov ja test movsl or adc cmp gs ss pop sar adc pusha add xor add cmp cmp mov add aaa inc arpl in icebp cmp push clc lahf and fisubrl sub mov inc sub xor jmp fwait pop jae out sbb cmpsl sub daa jmp (bad) xchg inc pop dec sbb dec clc orl lret mov out popf jno sub mov mov xor sbb dec js enter out and shlb dec sbb ds rolb inc inc sbb xchg repnz jae mov cmpsl sub and aaa nop in and les sub sub out mov ficomp add int3 jbe or xor cmp int jnp or sbb aaa mov outsb push sub imul push jae repnz sbb scas xorb and test shrl mov add add ret sbb stos ret and dec dec jnp mov daa in sub out out fsubrs dec add icebp add iret mov test and pop out xlat sub cld addr16 inc dec inc dec or (bad) fsubrs jl xchg inc cmp (bad) mov int add rcrb xor js and mov xor (bad) jno lcall (bad) adc aaa mov leave stc bound daa ds cld inc repz or pushf and (bad) pop dec aad ds dec in push and shll mov sbb dec pop movsl icebp push loop fildl aas xor test add test ss (bad) in (bad) iret mov pushf dec sub leave mov (bad) ss pushf push dec dec mov dec in leave lock add jo movsb (bad) mov pop cmpsl xor fs in pop je mov pop mov bound cs dec movsb int xor jmp push outsb ds addl pop aad and push cmp (bad) aad mov movsl int dec dec pushf jo fnstsw push cmp push jne dec outsb ja call mov push outsl and push add aad push push (bad) scas mov push insl movsl insl jp shll jae fmuls push leave or push cmp int3 xchg fwait outsb xor (bad) and loop add ret xor fiaddl adc popf mov cmp pop int sub xor mov mov push outsl and pop xchg (bad) and mov cmpsl xor popf cltd test ds clc loopne jo sub mov xchg fwait xchg xlat and add arpl dec mov xor popf mov cmp fwait (bad) cld repz push (bad) pop cmp mov loope insl les cwtl xor add pop sub cmp add negl xor ljmp bnd incb dec shl sub inc mov cmp sub (bad) test (bad) sar addb in or mov sub decl mov inc loop sub or push out data16 lods cmpsl (bad) jmp cmp cmpsl jle mov pop inc leave add fnstsw not imul push sub rolb mov sub jbe push clc inc mov cli int mov adc jno imul inc (bad) xchg lods es lods jecxz shr test push dec movsl test (bad) push push jne push inc movsl rcll adc push mov sub (bad) icebp std jmp lret leave popa fild and xor scas mov sub (bad) mov jae aam bound imul (bad) nop push leave ret outsb dec rorl sbb out sbb in fdivrs inc jl lock sti jne (bad) jmp push js lahf fs (bad) mov leave mov ds jg adc ret es inc cmp xor (bad) sub sbb xchg insl sahf dec mov (bad) xor sub xor mov mov ljmp push int out xchg lahf dec push jle stos cmp mov leave (bad) push stc push dec je mov push push xchg aaa xlat out outsl icebp popf jb push sti int loopne pop and arpl xor add loop test shrl cltd mov mov inc imul jle push mov inc mov mov pop push aas xchg sub lahf adc jae test pop sbb dec (bad) (bad) loopne dec inc mov cs fsubrl or inc xchg sub fbstp or sbb (bad) lcall lret das cs jg dec xor xchg pop add push dec push nop jns dec loopne and xchg pop outsl fucomip ss jmp cmp inc mov cmpsl or cld push mov pop push sub das sbb popa and sub sbbb int3 jmp pop cmp scas jecxz movsl sub rorl sub push lret xlat mov aas jg popf xor stos adc sub inc pushf ja in and lret sbb out and xor mov fmulp adc push and shrl std rcll mov sub sub insl add bound andb leave je imul pop sar or cmp hlt push dec int3 sub and enter ss int3 jnp sti cmp mov xchg orl sbb xor push add or in sub nop (bad) jg outsl push jp ss xor call or aaa mov lock sub mov test daa mov dec dec call adc inc into in ja cmp test mov push pushf js sub sahf add jnp and pop add in out ss sub dec stos sbb xchg aad or bound xor pop les dec pusha leave add pop mov and in push pop push pusha sub (bad) and out pop add sahf test sub inc out sub out imulb imul rolb bound jb call pop sub adc sub sti pusha jnp add stc xchg sub mov movsb cwtl scas add sub adc lret pop xchg mov test mov pop (bad) mov test int3 out sub ficompl add mov xor scas sbb mov sbb mov and test ss and sub mov push jns (bad) pop loop das jmp inc andl adc pop sbb ss cmp xor pop in cmpsb sahf jns sub popf int3 aam mov inc (bad) shlb inc mov imul out add inc add or lods in bound cs mov xor add mov ud1 sub out fstl out (bad) sub test fnstenv push stc or and sub inc std into and faddp cmp dec cli insb sub mov fstp push jb xor xor inc pusha stc sub fwait add add out jl,pt cmp rorb jmp stc sbb cld jno scas fwait jmp jge lods add movsb xchg mov test or repnz xchg jl andb pop lds pop push xor cmp stos add mov cvtpi2ps ja ljmp test movsl push sub movb (bad) jne and sub sarb jno mov xchg cmp dec mov add cmpsl popa dec xchg or pop fwait aam xchg cmp adc xlat loope sbb (bad) iret test daa std stc jae xor jne lahf mov mov and xchg das lcall sub xor push in loop sub xchg sub sbb sbb (bad) mov insb mov cmp sti sub (bad) mov stos enter dec shrb sub sub lea dec xor cmpxchg inc test xchg mov push mov pop ss insl stc iret cld jns cmp sub add addr16 shl mov icebp out (bad) sbb subl fdivl lds xchg (bad) repnz sub daa js inc or xor or xchg push repz mov xor xlat cmp or push ljmp cmp xor daa imul inc push jno pop pop sub test dec mov data16 jb insb cmp push aas cmpsb arpl movsl into loope imul xchg lret adc fdivl add mov (bad) into sub daa mov (bad) arpl pop test sub movl cmp data16 mov push imul ret pop (bad) xchg pop (bad) stos js mov add cmp or cmp adc out jp,pn daa arpl fdivrp imul sub add adc notl and sub fstpl dec aad repnz jbe or sub dec cwtl and and jge mov ret ds popa addr16 sub cmp inc fwait jg or pop mov sub test mov or cmpsl jg inc aaa adc xor sub int3 sub push sub (bad) je fcomp jbe xor and outsb outsl jmp inc xor lret push imul and imulb jbe sub xchg mov fimul bound in sahf imul xchg dec sub sbb roll test jo sbb rcll int3 inc scas cltd sub pop fdiv jecxz,pt inc (bad) insb imul add in cs xchg jg sub movzwl or cmpsl dec stc ja xchg mov mov adc cmp mov push cmc push shrd fsubl ss sbb (bad) jmp push test outsl mov mov cmpsl mov pop iret (bad) or in inc jo add mov inc push mov inc sub add mov mov sub pop ljmp pop aaa in lock lahf movsl rcll or xor xchg mov sarb test cltd jmp mov sub adc xchg pop push (bad) test mov adc mov aaa (bad) ja enter sub stos fwait or pop or and sbb push mov int insb xor push sub ljmp cmp enter dec decb aas sub adc lea pushf inc and inc insb add xchg cmp or sarb inc nop dec rcrl mov adc sub and aas inc cmp sub xchg ja in or sbb mov (bad) stc loop mov xor sub scas xor inc fcompl mov xor (bad) sub sub mov add movsb in repnz cli push inc sub xchg mov add and lahf fbstp add sub test (bad) testl shrl xchg rol add shrl shrb fdivrl movsl dec into jnp aad loopne jns inc or ret pop je ja data16 out (bad) ss xchg pop or stc adc jp test ja push xchg xor dec in sub sbb sub jmp cwtl cltd cld stos pop test mov (bad) outsb xor adc je data16 sbb out add cmp xlat mov mov cmp sub dec imul test aas mov leave or sar inc dec fisttp jg push mov xchg test roll inc into test mov add test movsl fcoml inc mov adc sub stos and fs cmp sub push mov adc xchg fwait sub sarb xchg mov inc int3 push out jge push rcll ljmp mov test push mov add pusha adc adc adcb sub rorb std ljmp fldcw mov loope add sub (bad) (bad) push sub sub or pop inc jbe into out ficomp cmp jle pop outsb cltd xor add (bad) clc imul or dec popa cmpsb push pop ja ss adc test loopne in pusha (bad) iret dec les cmpsb or jae scas stos cs and jns and (bad) sub cltd inc add push push int3 or imul sbb sub inc (bad) push (bad) lret fxch loop xlat aaa nop leave data16 dec sub hlt jae jge push lret int arpl and out fildll xchg push test jnp mov pop inc or cltd sbb ja stc mov inc in sub rcll int sub cmpsl jle mov fisubr or movsl mov les icebp loop popa jmp clc stos sbb add data16 std and ljmp int3 ljmp sbb mov addr16 jns dec jae cld leave sbb cld mov (bad) dec push and cmp cld mov scas xor sbb jg dec pop mov (bad) mov sub mov push xor jg pop mov mov push dec leave ret (bad) call lods popf dec movb das and es daa int daa and pop icebp in xchg leave push lcall add loop inc into (bad) or pop add sahf je xchg popf jl pop or push xor pop inc int jo sub push xchg cmp mov cmp sahf fxch cmpb into sahf mov je push xor pop aam popf orb (bad) (bad) fsubs test add xor leave icebp xchg div pop or (bad) aad push xchg jno xchg and push lahf addr16 fldcw stc std inc jne sub fcomi out test in cmpsl dec cwtl in jne mov (bad) int test in push addr16 test negb scas push adc outsl sbb jns dec stc sahf inc int pusha bound popa test fisubl shll sarl test inc mov nop and xor push dec insb repz fadd jno add and mov cs leave adc pop cmp sarb das mov or out cmpsl jg cmp jb xchg add mov in loop popf xor pop mov cmc ljmp and mov pop mov andl daa cmc or mov outsl pop loope push sbb ret mov lods lcall xchg aad sub jecxz daa sub inc (bad) shll in fildl arpl mov sub adc jl loope cmp xchg ret or sbb icebp pop lods mov inc inc and xchg rorb and outsl das ficomp sarb roll dec icebp pop fstpl ss mov (bad) push and lea sbb pusha test imul xor shrl stc sub or push sub pop not ss (bad) mov jnp sub push fdivr out stc jle out or add ss add cmpsb jmp adc add or (bad) mov cs scas sbb stc dec ljmp cld arpl push dec out fnstcw xchg int3 jge mov pusha cs movsl ljmp sub mov insl cs shrl shrl (bad) iret jb sub aas pop test push pop loopne stc lock ss jb int3 xor ss dec js movsb mov cli dec lret add push out inc stc push push adc sbb in jge xor sbb cmp xchg adc add (bad) ds mov scas out push sub sbb mov inc dec mov jno cwtl mov inc mov pushf daa push js sub mov nop cmp cs mov cld mov mov (bad) iret call xchg mov sub std dec mov push xchg or xor push jp xchg imul sub xchg loop out (bad) or sub add dec cs test sub aaa iret clc std or add jbe xchg and lahf sub xor xor cmpsl sbb popa daa scas pushf xor jmp push daa lahf cs inc aam inc dec mov inc adc dec (bad) adc jno test ror repz or mov adc lret aaa mov daa sub pop out xchg mov sbb ret or dec push adc popf add xor cli push push sub movzbl (bad) mov push lahf in sub or lea int sbb push sub or lds jbe mov outsb adc sub outsl (bad) fistpl sub cs push add int3 fbld jno xlat xor inc aas lret sub adc outsl (bad) jo ficoml mov sub jb dec mov cmp or add dec add sub repnz xchg hlt aad mov pop jae sbb add xchg inc push fiadd fstp sub jns test call les and ljmp jbe and (bad) cmpsb jmp push daa les rorl popa cs add lods (bad) xor mov call test add or jl pop jbe dec sub dec dec sub idivl jp and das inc push das cs sbb mov xor inc jge sti scas movsl stos jno mov lock cmpl pop dec movsl test and sub and sub repnz sbb push mov xor je adc xor cmpsl push xlat lock insb inc test inc imul mov or in lcall pop cmc push inc mov jbe jae xchg shrl rcl sub int3 lds outsb pop inc test add cmpsb xor jle mov or loop fcmovne in punpcklbw clc mov popf (bad) lahf sub imul sbb xchg inc (bad) ja jle arpl cmp out (bad) mov dec sbb aas cmp test mov xor push icebp repnz fdiv pop sub out xor sub jecxz mov or xor outsb pop sub call dec cmp mov stos mov imul int3 fstps out sub dec cmp sub pop xor mov xchg mov stos dec adc test enter outsb xchg cmp jno icebp stos sub xchg movsl mov out sub sub adc sub out in insb test add mov xor push ss test add xor mov loope negl adc pusha (bad) jle movsb and mov dec outsb sub jecxz sbb inc lcall mov loope sub (bad) (bad) xlat sub std fldl je fnstenv and shlb test fidiv sbb cmc mov imul stos (bad) sbb xlat hlt fscale data16 ljmp lods sub cmp movsl movb push cmp (bad) loope xor inc les out or in jbe fxtract add fs sub push mov mov loopne cli adc (bad) popf inc negl and lret jb rorl push imul sub stc and and pop adc xor sbb int3 scas loop push sub ret jbe or shrl nop push xchg mov ret jmp add mov cmp inc cwtl clc pusha (bad) (bad) jl rcll xor push fcmove int aaa jl dec test inc cmp cmp pop push jp and pusha loope sub clc cmp test mov xchg daa aad movb xchg enter scas int mov push jl and cld push enter adc mov out int ret test in (bad) lea out inc fwait cltd xchg aad jnp jecxz leave xor int3 mov fistpll pop test mov inc fild mov dec test jg cmp sbb pop sub ret xchg and out outsb cmp adc dec sarl xchg nop jle int3 and push enter arpl cli jge adc (bad) leave dec adc ja cld test shrb xchg (bad) sub add int3 pop mov leave pop adc and sbb xchg sbb jbe,pn dec popf or add ss xchg (bad) out adc into jmp push fstps jmp sub cmp movsl jbe sbb push cmpsb push cli dec mov adc imul movsb (bad) lret jno push push test push mov loope mov es shl jns mov cmp scas test push insl in sub dec push jb int3 leave rorl ret jmp in fiadd insl psubsw push addr16 clc ja push jo inc negb inc cltd jge push data16 jae jg mov sub xchg jl jnp and ds and xor mov add call cmp add stos or and nop push dec bswap jp or mov jnp cld imul movl mov cmpsb dec cmp int aam mov push push stc movsl gs leave cmp and pop sti inc mov push mov push into test xchg inc lods xlat test test jne cmp pop adc ja xor xor xlat sbb (bad) idivl push jb push test (bad) jno sbb jo or popa in repnz daa sbb (bad) movsb jbe lods cmp sbb pop movsl sarb adc lahf mov ficompl xor arpl ljmp data16 cltd stos nop jle xchg jmp cmp xchg sub pop jae mov sub push pop cmp cmpl mov addl jbe adc hlt mov mov dec ja leave lods movsb cmp rclb mov outsl sbb pop pop mov mov xlat jmp das fwait (bad) insb sbb out fnstsw pop les std push stos cmp (bad) mov jns lfs out shrb and rcrl (bad) das jg and push inc cmp mov hlt mov cwtl mov or mov push (bad) mov fimul stos jp ficomp xor push sub xchg sbb scas stos pop sub fs in jne ds xchg mov inc shlb and push cmpsb leave sub lret pop addr16 adc out out and (bad) push pusha adc xor cmp inc cld inc fidivl lahf or xchg outsb push ss mov (bad) dec cmc add leave mov (bad) aaa sbbb jo cld mov mov add mov dec push xchg cs aam cmp sti cmp push inc add mov fwait test cld loope inc xorl push ret mov pop and cmp jg dec loopne lahf jmp daa inc mov jbe pop shrl dec pop cmp mov rcll mov xorl mulb push mov (bad) pop fst dec mov in mov mov cmp xchg repnz int fdivl push dec leave mov sub inc fcoml pop rcrl (bad) xor cmp inc insl fmuls cs inc or aaa out rcrb sahf sahf push leave cmp mov std test push cmp mov sub inc and (bad) iret std dec test jo sbb insl mov dec jne sub mov push pop sub adc test fistpl sbb jbe cltd daa push rcll dec mov adc popf ret daa aaa xor inc sub dec pxor icebp push cs jbe mov mov inc pop or mov inc fisubrl int3 mov lahf cmpsb mov cs dec ja sub mov insl cltd jmp cmpb mov into or sub das xor mov push stos sub js cltd pushf and stc jnp sahf mov enter movsb sub mov sbb sub lea dec data16 dec or outsl aaa sbb stc rcr push sub in sbb xor pop in sub sbb cmp fmulp aam lcall lret je fwait stos ljmp data16 push add sbb adc test scas push ret jnp ljmpw movsl and cmp in mov ljmp cltd jno out sub mov xchg sub loop adc int test xchg jbe lock sub shrb pop in nop shl push fstpt xchg ss out sub dec lods sbb loope and les aas fisubr ljmp ret jle test or and jnp or sub pusha and imul mov jmp (bad) and mov insl pop sub push cli minps inc mov sub add inc jge sub cmc incl inc sub sbb push jl adc imul pop je dec add bound xor sbb lds inc cmpsb sbb sbb xchg adc xchg xor in and cwtl icebp ja ds cmpsb stos rorl jns fnstcw out pop fwait jge sti test inc lds loop lahf push shrb inc add mov sub cmp loop addr16 out xchg sbb jo aam in jp push push int3 fucomip bound outsb stos mov xor cmp mov movsl clc lds sub adc mov lcall fcmove jle test jnp sub sub cmc jno or push sbb xchg and movsl dec add pop push shrl test inc inc lea in sub sbb or js add (bad) mov sub pushf das in sub fimul inc rolb sti push jl test cmp rcl and push xor aad fstps repz push xor xor test mov (bad) call adc daa cli jg and or hlt movsb movsl sub mov insb cs mov jnp xor lret aam leave add lds inc jns sub int jle pop jb sub mov cltd scas outsb dec bound cli pop (bad) clc xlat call push enter aas or outsl in idivl mov ss int sub clc add adc and and rcrl push jbe sub ret lahf ljmp (bad) cmp push test push xchg ss and jo mov xor pop cmp inc test and sbb dec insb or adc jmp jge inc sub xchg lret cli (bad) shlb lahf xchg in dec jg mov fist mov fdivr lds mov jnp imul pop aam mov push push adc jne lock add insl out or in rcrb adc outsl (bad) arpl test jg cli movsb mov je ss sub add jge leave mov pop sub mov sub in cld nop repz std pop cmp aam call mov (bad) rcl loopne dec push repz add sub data16 movsb xchg ss iret idivb fisubr xchg sar lods fsubs pop sub in icebp push sub add test cmp ss (bad) jo daa addr16 cltd mov mov inc jp mov mov outsb or adc push xchg pusha daa je xchg xchg cmp pushw xchg (bad) push dec add sub xor shrl sub sub sti int xchg shrl sbb insb lds cmp adc scas nop mov cmpsb stos push lods pop jae push dec mov fldcw pop dec jns inc mov xor jecxz imul jmp xchg sahf mov loop out mov sub (bad) std push inc pop les and adc fsubs dec test inc cs fisubr mov fist into addr16 rclb aam in sub adc pusha pop sub incl movsl add cmpl or inc (bad) fcmovne lcall xor push je cmp sub ss pop ja or aas mov les repnz sub mov (bad) (bad) dec ds inc pop es cwtl mov cmp sahf xchg sub push test mov cs jo mov repnz xor pop cld dec pop pop fwait test scas sub mov in fadds dec test jne sub cwtl mov inc dec add and cmp and sub cmc mov pusha push (bad) das and fcomip fwait iret and sub gs loope mov mov cltd jecxz cs test push fsubs sub lcall pop aam in jne,pn out test adc dec sub hlt push jp push idivl xchg sub in mov fbstp into (bad) mov loop fsubrs jmp xchg mov cmp jp adc sub mov push xchg (bad) (bad) out jnp rol xchg test or (bad) outsb bound xchg mov fisub dec test or jno (bad) mov pop and fs ljmp mov ret pop je enter mov sub sbb cltd cmpsl bound das adc data16 sbb cld mov sbb test cmp or jge mov jo ss xchg push lcall test mov xchg cmp adc cld cli lret (bad) sbb dec xchg fucomip bound mov bound adc je sub add (bad) jbe jno in pop mov mov push and add scas sbb dec (bad) or dec jno xor stos icebp outsb lret sbb std mov add imul push leave and sahf dec cwtl rcrb inc loope push pop pop pop loop mov das xchg and fisttpll aas arpl stos pop cwtl jnp fwait ds and jb in sahf mov stos arpl inc jno fcmovbe jo jg stc out jbe movsl aas jae cwtl int xor sub hlt dec aam enter out ljmp sub add push cmpsl xor mov inc or ret movsb iret lcall es sahf mov cmc fistp addr16 lret fwait loopne out jp and lahf add aad sub (bad) xor sub sbb dec sub sbbl xchg cmp je in aam lret cltd movsb jbe jae sub sub cmp bound inc inc and sub imul cmp es ds cld add inc xchg add xor sub or mov sub dec mov shrb cmpsl and (bad) shrl sub pop push adc sub subb cmp aas push push jge pop xor sbb aam setnp int xchg (bad) jne inc test pcmpeqd xchg jb fcmovbe cmpsl movl pop jbe mov jnp js test fdivrs push sub cmp lret cwtl sub mov inc sub test jne sbb sbb repnz sub dec jns xor ja out sub fwait lods mov cltd fmul fsubp (bad) (bad) mov cs arpl lret movsl jmp loop pop push inc fldt btc jbe (bad) in pushf cmpsb dec or jns out les sbb jae mov repnz (bad) jo pop pushf test jno xor out pop mov inc xchg and mov orb jp aaa rol or fcoml cld cmp mov push and insb add lea cmp enter xchg cs loopne add dec dec push adc sub xlat mov movsl cmp ds jp push jmp or push xchg sub adc dec std test or lcall leave test popa mov pop js test dec inc lock dec (bad) hlt test arpl addr16 adc cmp and ds cmc dec fsubrl je mov adc pop in and mov push jg mov inc cmovg cmp scas sbb in lcall pop jae push inc andl mov cmp or in sub dec scas pushf lahf jmp pop ds push or iret clc cld dec sub in jb inc xchg inc hlt popa outsl pop movsb pop sub stos movsl ds mov xor xchg aaa hlt inc push jnp sub jo mov mov and lret lret test (bad) dec in fwait sub pop jo shrl (bad) mov add sub push shrl push imul cli jne ds pop mov fwait sbb sub nop insb push loopne in add insl (bad) push mov mov ds sbb sahf inc out mov pop das leave inc push cmpsl jmp cmpl xchg test cmp sub rorb jle mov sub shrl cmpsb mov cld adc dec cmp jo sub mov pop lds sbb sbb sub out pop cwtl aam out and push mov push sub sar cmp jge sub aad sub jnp dec cltd icebp push sbb cmp push movsl push add data16 inc jge icebp adc xchg ja push test ficompl (bad) jbe adc cmp dec imul out pop and push in xor push mov std mov data16 and mov dec mov fwait (bad) mov loope sbb sub xlat bnd jns test popa sub inc adc jecxz xchg fstpl sahf sub adc cmp scas mov cmp (bad) (bad) loopne enter push cli iret jnp icebp pop aam sbb xor or clc xor sub pop insl (bad) (bad) sbb cmp rolb inc out shlb repnz dec leave jae adc jae pop mov cmp shlw aam int3 stc movsl lods repnz mov jle push mov sbb aad push (bad) or bound sub xchg mov xchg inc stos jp ja int out adc mov pop add pop inc leave stos je les pushw mov xchg sarb cld xor ret test out and loop popa out push popf mov xchg stos dec das (bad) pop call leave push sub adc cld lea mov in imul push adcl jb push jmpw sbb repz sub call push movsl push pop gs cltd lds cmp ret int cmpsb xor inc std movsb inc rclb sub mov jnp (bad) sbb cmc sub inc lea mov jo xchg mov adc into jl sub mov pop jle,pn fistpl or sub cmp lea jg xor add mov iret adc sbb sub push mov add add in iret test movsb push push loop cltd mov adc (bad) fiadd subl sub mov dec jae cmp adc sub inc push xor lock in (bad) ffreep aas sub xor les xchg lds (bad) mov stos addr16 jmp in xchg push ljmp and arpl mov xchg inc test mov lcall xor sub bswap xchg xchg pop push gs lea or mov nop mov mov xchg dec mov sub add jp scas mov sub push addr16 pop sub (bad) dec push jecxz or jl pop pop inc dec and stos cmp ret add das mov inc dec cmpsl fwait cmpsl xor (bad) outsl leave push out fstpt imul sub adc mov rclb test mov push es repnz into sub lods aaa shlb ljmp inc sub cli pusha inc xchg in test fadd pop and mov push lea fwait xor mov dec jle cmpsb inc subl sbb xor das mov pop sub imul xchg xchg ss add push scas jle addb js mov mov mov xor sub xchg cmp jle adc mov pop sub sbb js push (bad) dec push cltd inc data16 inc xchg sub sub push mov pop out pop cmp or cmp add shrl sbb xchg aam mov mov adc mov (bad) iret aam test mov ja loope mov jg,pt xchg cld fnsave pop scas and pop out inc sub push dec push sub (bad) lret stos sub out push in or mov or cmp inc mov mov or repz lahf pop sub fild jge lret jl add add sub subb mov pushf ss jno sbb mov sub lcall push sub cli mov push inc scas add (bad) xor push fs xor clc xchg call insb pop sbb pop into inc xchg adc cmp sub and (bad) push hlt mov stc test cmp xchg adc pop clc loope (bad) sbb and xchg in inc jns ds aam add sub add pop and mov xor int3 jge cmp in les mov mov andl jns shlb inc push cmp scas mov push fnclex aam sub orl or sub and mov or hlt (bad) pop (bad) sub mov add jg sub cmpsb sti mov (bad) sub and mov sarl imul dec jl hlt cmpsl ss push inc sbb sub and or sbb mov inc mov sub cmc aam or imul gs jl fisubr dec xor ja or mov xchg (bad) cmpsl pop in imul into jp daa cmp adc ficomp sahf mov lods xor push pop ljmp mov mov push xchg adc call push stos lds pop sub ss cmp (bad) (bad) or add fimull sub jp scas jg sbb imul (bad) imul gs loop daa mov fstl cmpsl xlat dec mov call xchg call insl sub test fistpl out mov movsl es cmp iret lods jbe rorl adc cmc fsub jecxz lods add adc push adc xor aaa pop sbb dec leave inc mov sub inc repnz sub rorl outsb sub inc xchg lret loopne dec xor loope pop stos adc push add xor xchg rorl cmp insl fmull call sbb dec int3 sub push arpl test fs or aaa hlt push mov call push jns (bad) mov jne pop mov inc daa sub sub in sub loop sbb add dec aas jbe adc xor int3 daa (bad) mov sub bound (bad) sub xor mov or inc adc sbb xchg call hlt push (bad) out dec jg cmp cmovg push fucomp or mov pop mov sub fs pop add out and push mov jl push push sahf daa sub or mov repz notb int3 push xor ficompl sub and sub sub (bad) (bad) je (bad) shll ds jns xor decl fdivs loop inc outsl jo xlat jno add dec jl daa ret mov push and xchg popa in jge jmp pop jmp jl out adc arpl (bad) adc dec sub add sub xchg cmp mov cs repnz ja aam test pop jmp out xchg in mov adc push cld mov and sahf sbb lea mov sub sbb bswap ret adc lret je jnp sbb jmp movsl push push cmp add outsl adc js jg mov xor ja mov es cmpl xchg popf arpl (bad) int cmp jecxz lds iret cmc daa fcmove rcrl (bad) mov aam cwtl int popf sub movsb fcmovne cltd out add inc sub arpl sbb sbb sub test sub enter sub inc int3 xchg push cltd jmp loope,pn jnp into mov adc int (bad) mov out dec pop xor push push adc xchg int addl (bad) mov sbb xor adc (bad) push insl cmp int cmpsl lods cmpsb jo dec (bad) int3 lods xchg int shl dec aaa jo int3 dec add (bad) ja mov sub stos scas adc xor dec mov (bad) push adc sarb and xchg mov inc jp mov test xor out outsb jnp lahf cmp clc xor push test mov sub les xor and jnp test lds subb adc cmp cs and sub repz (bad) mov sub push and xor push cmp ss loopne pop je inc mov jb rorl mov rorb inc xlat shll dec fcomps cmpsl jg adc jmp ss (bad) dec sub in mov or sar out cmpsl xor int sub sub (bad) lea adc test jmp int jle (bad) leave xchg xchg push mov adc xchg cwtl add imul lret jg cli and xchg stos (bad) fldcw xor inc inc aaa test arpl jns imul push (bad) jne sub or scas dec mov xchg scas sbb jp add push cwtl addr16 mov loop jae mov cwtl data16 mov leave (bad) jl jne and jp mov push lcall das dec mov add sahf sub (bad) mov xor pop loopne (bad) jo dec jbe mov lret fisubl mov outsl addr16 sahf loop push dec leave test sub out inc jmp ret rcr cmpsl mov sbb mov sbbl and mov addr16 data16 pushf jl xchg lret mov jns cmp or sub pop sti mov fwait mov pop stc les mull and xchg lcall in leave imul xchg jmp and and ficomp and or pop cvtps2pd int cmpsl (bad) leave das or or mull ficompl int mov push add (bad) push pop push jb add adc xor stos roll hlt mov xchg xchg (bad) xchg xchg stos scas inc or push mov pop cmp mov push sbb loopnew imul xchg adc (bad) lock pop lahf loop ds pop (bad) cmp jmp push (bad) push xor push ja lret adc (bad) sbb ret nop jo sub loope xor or jo push icebp jnp xor imul hlt jns addr16 mov jno int orl hlt aaa jbe scas jo add push dec push push push mov mov xchg outsl jb fisttpll sbb movsl nop fnstcw mov push or fcoms addr16 inc insl popa mov pop cli in stos and ja lahf scas in xchg cs jnp fisub (bad) jl push mov dec push and mov add test xchg push sub in jo push inc aam (bad) fidiv aam movsl (bad) cs out insb cmpsl jecxz or and (bad) repnz (bad) cs scas gs fistl add dec mov cmp jmp cltd dec insl dec dec ja out ss pop sub mov andl mov sub dec add dec adc sub push inc or sub nop cmp insb sub add dec mov pop lds xchg sbb pop in fwait lods dec addl or mov jle add shrl scas adc bound jo and jmp sub jp and cli loopne cs (bad) cmp std xorl mov sub pop popf stos ljmp sbb pop out movsb inc cli dec (bad) clc inc push xlat jb mov jns (bad) sbb fsubrl fldenv push jne jecxz add lock lods sbb sub icebp lret cltd out loope sbb jnp sub pop mov and push cmpsb adc or sub (bad) dec pop outsl add push dec or push adc outsb jmp add sbb sub arpl add or sti lret or xor sub mov jg js and movsb (bad) lcall rcll xchg xchg mov xchg sub push outsl les (bad) sub jp push jle pop jecxz push xor add and insb loope cmpsb out jmp out ja push pop jo and jmp ret subl pop sub out loop pop sub test testb sub lods jo mov dec sub mov pusha push mov stc iret xor add test push xchg test cmp fisubrl jne ja fildll gs (bad) dec out sbb loope xor inc mov cmp aas xchg xor dec addl xchg mov fisubl sbb fdivrs clc cmc mov jno cmp addr16 aaa adc ss iret pop dec fldcw cltd leave push pop ljmp sbb in icebp push packsswb push test sub pop aas inc or jg mov mov aas cmp mov xor popf cmp gs mov imull sbb dec cli sub pop les leave ds shrb dec dec out mov push inc movb into sub inc mov sbb adc leave icebp add cltd jg xlat jae adc (bad) cmp ret test out call je movb in dec bound sub cmp and xor mov fidiv mov in arpl sub jge sub dec test add adc or lods in adc mov movsl sbb clc (bad) in jbe xor orl arpl int3 pop and and mov les fsubr fcompl and lds les or jg rclb inc sub (bad) out push sub sbb or push scas pop sub xor xchg ss loop rcll push packsswb movsb cs fwait or pop sbb dec movsl repz jle and ret pusha pop jo sub xchg out test in leave outsl mov mov xor jp sub sbb or inc addr16 mov xchg push dec push push sub pop je bound fildll lea outsb xchg rcll or pushf cmc pop test inc pop scas out xor addr16 mov lret push out fs xchg sub data16 cmp test mov xchg data16 sahf das cmpsb fldl daa ret sub jecxz sbb mov cmp cmp and jo add xchg jmp (bad) jb mov aas xchg xor sub mov ljmp test les pop jecxz sub pop ljmp rcrb icebp ret mov mov mov sbb leave (bad) xchg push hlt sub out fucomp out cmp sub sub mov cwtl clc pop sub jae (bad) movsl fwait repnz (bad) ret (bad) ret outsl das sbb pop inc sbb stos push ret ss add xor dec out push add imul loopne nop cmp mov js push push sbb out xor clc dec jbe test (bad) idivl mov mov add mov je xor sub rcll movsb mov jo in jle stos (bad) sub push jne lods adc hlt (bad) adc pop jl push das sbb fsubs cltd pop inc add aas xchg push mov and fldl mov push idivl push adc lret daa (bad) cmp jg push (bad) negl daa jmp sub mov repnz movsb and mov mov adc movsb js mov add mov into mov (bad) jns jl inc (bad) das cwtl xchg cmpsl jbe in (bad) fcompp cli ss jno fsubp mov jns sub popf cs mov jbe,pn loope or jecxz icebp retw mov daa push sbb sub jecxz adc sub mov push ja sbb lods adc and pop jb fidivr dec jnp sub out inc cs loop lea jl mov sub pop lock arpl or inc xchg mov cmp or lock out fwait sub jb cmp push enter scas cmpsl sarb jo cmp stos sarl and out jg mov pop mov ja sub xchg pop sbb fs mov inc aad push sub popf out sub sub sbb sub adc jp mov dec (bad) arpl lret sub in fs mov (bad) in loopnew enter dec dec rorl (bad) pop rep les xchg mov fwait scas into xor sub cmpsb in int3 inc sub mov or imul insb push fsubrl data16 sub pop inc or cwtl push mov pop ds iret jle adc movsb sti push dec out inc xchg sub sub lcall sub pop pop call popf sub sbb mov sub jl lret and cmp adc cmp mov outsb xor stos mov popa mov (bad) jb jl mov mov xchg fwait mov popa test sub hlt sub xor mov lea add out ficomp nop cmp dec sbb call pop and sti jg dec ret push jo shlb or int3 icebp mov das push pop imul add clc fwait cmpsb cmp bound push push lods push dec xor out and xchg test imul and psrlw inc jge repnz rolb jnp int3 mov push cmp jl jbe dec jge add inc (bad) cld mov movsb pop push xchg or push arpl inc es fucomi cs sub lret and popf (bad) mov ror mov push pop xchg add sub outsl mov cmp test lods leave cmp call arpl sbb adc inc out jno adc fsubrs mov aaa cmp xchg adc sub fistpll sub incl fwait arpl in out pusha out push cld inc fist sub pop push loope and out aam shl add fdivrp leave lret sahf jg repz cmpb dec nop adc adc gs cmpsl inc fsubrl add inc lea (bad) lret mov jb cmp and pushf pop addr16 jnp sub iret mov mov adc cmpsl leave pusha mov sahf mov sub inc (bad) push test sub and shrl push out rorb and inc dec jg out xchg jae ret mov cmp jb mov dec loopne (bad) movsl xor mov je in sub sub push and ja mov cmp and xchg mov xchg sub jg add shrl ficompl xor mov inc cmp call sbb push lds cmpsb or in ss pop out test pushf jno sub jo adc jno (bad) xchg sti sub pop in inc xchg dec dec sub imul or aaa mov (bad) daa push push fdivs scas dec fidiv jg push push xchg cmpsl daa add dec mov pop push pop push (bad) jb popa mov pop jmp xchg and int or push xchg inc inc jmp (bad) jb js sbb push or jmp fs lahf jae xchg and test pop cmpsl push (bad) out cmp out sbb pop hlt mov jo loop out outsl jg jecxz xchg xchg ja cwtl ret insl cmpsl sahf xchg (bad) scas lods les arpl shl cmp dec and int jns pushf lret mov into push ficom lods jl or ja or das jg dec test mov dec jl jecxz jno inc (bad) cld pusha push mov cld xor adc cmpsl data16 popl popf and push pusha mov sbb push shl sub leave mov cmp pop cmp scas adc sarb ja add mov (bad) dec jp xor cmp insb movsl ljmp mov push sahf xor mov mov mov insl pop or push mov ljmp rorb sub es sub sti lret or outsb xchg or xchg push lea sub stc aad mov mov xor and or inc mov lods mov cmpsb add inc movsb mov dec jnp lock les sub push pushf (bad) adc cmp add insl and dec adc dec enter (bad) or add and out aas adc push loop fwait ds sub ss mov push xchg pop dec sub mov out and out fdivrs cld scas pop xor sub dec aad sbb into call cli hlt mov negl fidivr test cmp cmp and inc inc lea dec lock push inc adc inc in mov cmp xor (bad) mov lcall or in sti mov mov or clc mov jo and pop sub push xor int mov mov ret jl inc jne mov mov aas dec or in std push dec aam je cmp insl addr16 and int test push dec sbb jbe sbb xchg leave iret pop jb fwait dec mov out sub fstpt sub (bad) mov xorb or rorl dec jmp dec popa test xor inc xchg xor mov adc push ss popa dec in fbld push sub sub add or sub (bad) inc push inc in sub push fldt cltd lcall popa ret test test aad push pop leave add addr16 xlat imull popa cmp sub jbe xchg cld test pushf scas ja data16 push in int push cs in mov lock imul mov and movsb sub faddl (bad) jne jle (bad) adc or dec xchg cmp icebp into cwtl mov push stos es fsubr out adc (bad) cmp in pop cwtl sub add dec add lret lahf rolb add aad sub repnz mov call leave jmp fldcw ds mov push cmpsl aaa adc adc cmp in pop sbb dec jg cmp fidivl pusha adc sub sbb cmpsl flds jmp mov push sub pop adc cltd mov mov (bad) daa xchg out fistpl push sarb (bad) loop insb ss xor icebp jbe jmp sub pop mov negl (bad) mov xchg xor push mov inc adc (bad) stos popf sub xor clc lods mov call movl push lea dec (bad) push mov push push or out and leave lahf sbb clc pop and outsl aaa cwtl inc aad mov push leave jbe push and test jb jmp shll lock bound cmpsl (bad) scas push popf nop xchg mov mov int mov push push inc std (bad) adc jp popa xor loop stc std lret cmpsb push daa mov cmp sub sti je (bad) lock in lods jle fwait and or jae inc leave inc (bad) movsb stc dec mov and push leave fsubrs push ljmp mov int jbe push es lock xchg dec int arpl pop cwtl inc pop leave pop mov (bad) xor test cmpsl test int sti jecxz int3 divb insb push push test call and es sub mov scas pushf js sbb xor ret ficomp pop push imul inc call aaa xchg mov cmp add jns mov out pop jmp test cwtl ja lret aad mov (bad) fwait xor jp push data16 and test loop sbb xor sub or jnp subb js pop dec xor mov outsw aam fwait dec addr16 ja or aam sub jns shrl cmp fbstp xor gs imul mov add popf mov test fldenv cwtl cs int insb sbb mov cmpsl jecxz ret into dec popl les pop mov sub dec add fsub and xchg jno test test sarl push stc mov lret or dec shrl cmpsb leave aam jno mov sub pop (bad) sti adc incb fwait leave cltd bound icebp mov aad cmp mov push ss inc jnp test div cwtl xchg loope xor mov adc leave lods jp mov stos mov aam and ja xor aad pop and jp ja inc int fstl (bad) jbe and sub shlb ljmp outsl movsl pushf bound movsl jp out add rorb push (bad) nop cmp (bad) xor mov data16 sbb push push sub pop mov test inc ja movsl sub data16 ds movsb cmpsl xor jmp cmp sub xchg (bad) not ds cmp sbb lahf dec jl dec dec sub sub inc mov enter xchg push ja sti stc jae xor jns pusha ljmp (bad) jae cmp adc fistp arpl and xchg cwtl sub xchg scas sbb and sub cmp in and fisubr cs or cmp loopne mov test pop jmp push aas scas out cmp pop out bound hlt jo mulb mov xor mov addr16 ljmp movsb lret scas sti lret mov pop xchg cmp sbb push inc dec inc subb lods xchg mov sbb orb (bad) les sahf jo fsubl pop inc int3 add lcall jnp inc add fisubr mov pusha sbb hlt das jmp xor mov call jp popf xchg ss jbe imul dec ret aaa loopne mov xchg fnsave dec pushf and testl sub je dec jle ss leave incb lods stos cmpsl xchg insb outsl jp insl sub dec andl jae mov (bad) outsl int add in xor dec xor jns inc ret fisubr movsb es and inc and sub aaa cmp cltd sub leave sahf clc xor (bad) dec test mov mov lods mov enter shrb in (bad) cmp jmp in out mov jne adc xor test jl push lret movl add lds testl adc int3 (bad) xchg xlat cmp shr subl mov push cmp xchg hlt repz and or sbbl daa lret mov cltd xor sbb push jmp push lret test inc push xchg pop (bad) jne out arpl leave sub lahf (bad) cmp lods pushf jae daa sub (bad) lock shrb adc bsf pop sub xlat ret cld (bad) sub pop push addr16 push sub push inc cmp nop sub push loope mov dec and jecxz add cld add add mov mov lods (bad) outsb dec cmovge rcll daa (bad) icebp in addl lea mov mov ret mov mull sub cmp insb inc xor lock mov sub or repnz mov stc push mov sub je lret sub hlt into lock aad rcrl sbb or jns sub divb mov cmp jae (bad) mov inc dec sub (bad) cmc push ss push inc pop dec push lret sub dec mov lret sub mov push adcb xchg mov idiv (bad) lea cld xchg add loopne,pt (bad) xchg movsl addr16 js les mov inc movsb mov iret stc sub enter adc lahf inc test sbb out and test adc mov call pop and shll or faddl out mov push jbe push sbb data16 add jl int3 dec test cmp fistpll test sub cmp testb mov jp push pop xor mov jns sbb mov xor call or jg in push je test sbb mov sub bound leave out lods sbb test xor push xchg das dec popf in pop rdmsr stos lock or mov fiadd cltd call xchg inc dec jno aad lret xchg fucomp out mov dec pop shlb int pop push pop xchg (bad) xor jl imul fnstsw (bad) daa (bad) popa mov pop daa jp pop push xor roll inc (bad) cmpsl or (bad) int pusha jmp in jbe dec leave les cmpsl and dec push lret sub sub cli push cmpsb push daa data16 jo fwait and shlb movsl jbe fbld imul and (bad) std push imul cltd popf nop ds or data16 sub mov jmp in xchg out nop in jae insb jbe movl inc push mov push les inc sub lock lods test mov fprem1 sub mov rolb (bad) cmp call icebp mov pop test inc into leave in xor dec movsl add subb jne xchg insl pusha mov je fidivl xor addl adcl add jae sub repz idivb mov cs rclb jnp ss cltd inc sbb or aam mov sub push je xchg dec and push mov sub pop sub test xor mov lock and push lods outsl pop out loope out movsl lret cmpsl cmp subl ret xchg pop jno push inc call aad (bad) (bad) test sbb fs imul movsl sub loope inc and cmpsl add and unpcklps ljmp push cmp popw and mov cmpsl jg mov mov fsubrp mov mov test addb adc mov sub add inc aam sbb cmp shlb std dec jns ficom xor mov jle jg mov lret inc or pop pop and loop dec (bad) incl aad rorb leave sub insb push in nop sub bound popf dec cmp sub (bad) data16 fs lret sub sub pop sub out mov xorb sub sub aas mov or jnp,pt out xor rol inc dec pop es mov bound icebp pop stos fucomi sub xchg loopne pop repz cmc je pusha shrb lds dec dec push inc sbb (bad) mov sub incl jo mov fsubr test cmp xor fldenv pushl dec jge sub add aaa cmp mov (bad) dec sub sarl ss mov cmc addr16 vcvtsi2ss lock or pop jb (bad) testl and or sub sub mov addl sti push sub movsl daa jnp sub stos mov cmpsb cli pop cs mov cld adc (bad) iret sub cmpsl and cmpsb icebp lods es ret daa inc loope xor (bad) lcall push daa dec dec pop and sub mov or mov (bad) in mov pushf (bad) aaa or jno or test sub sbb push push adc cmpsb xor pop adc pop push jo jg mov mov lods int inc subb je (bad) sub push push mov mov fisubl xor or in push and sbb mov push bound cltd in and adc xor push out push dec xlat hlt mov mov jo decl mov ds cmpsb ss test fsubr into data16 daa mov lahf add xchg and lock (bad) mov stos movsb ja mov jle inc rorb call mov loop cmp cmp imul lock inc mov mov sub (bad) aas mov ss pusha dec add pop mov pop or jnp jg (bad) sub sub mov (bad) push int cld pop rcrb leave inc adc mov push int addr16 jb out pop jnp rorl push repnz call or mov sbb aaa ja xor sti int sub sub and adcl cmp in arpl jo push sub (bad) movsl sub sub insb jb or and ds mov lods pop mov xchg out or cmpsl pop sbb mov sub mov out ret das ds jp sbb xor jl mov pushf cs inc or insl nop xorps xlat pop icebp sbb fistpll or out fisubr adc mov jbe pop (bad) repnz add mov xor mov inc imul rolb loop enter repz fstps or or vmovaps xor and jo mov rorb xor adc pop scas jb xor negb sbb scas sbb jl repnz mov (bad) (bad) jae xlat daa dec sti add fildl fnsave (bad) imull imul adc bound pushf loop inc add aad dec add leave cs push and dec mov ljmp dec xchg xor gs call shrb ret xchg inc scas daa xor lods cwtl (bad) sti jge sub and sub lock adc sub mov sub inc inc xchg sub fidivl ret lret mov lea mov xchg outsl fisubrl jns (bad) cmc stc inc sub enter jl in call mov inc rorl lret or repnz xor repz cltd push clc es pop imul or ss push xchg push mov sub negl adc pop or xor fisubrl out sub xchg sti jae mov adc sub int3 mov jecxz push test mov fisubl push lahf repz fmull sti (bad) enter in and movsb ret fwait cmpsl xchg sub icebp xchg mov (bad) mov and repnz cmp icebp xor adc popa jmp jae add xchg xchg cs repnz aaa push shr mov adc push fstpl xor sub dec inc sub jno push jns inc insl inc std insl out (bad) xor mov and or and fwait mov inc mov and mov xor sbbb (bad) fucom pop cltd in inc pop cwtl imul test dec dec aad fwait int rcrl loop out cltd sbb adc rolb cmp jmp push inc lods push loop (bad) test cmpsb xchg stc push fwait push aam lods mov mov dec push jbe mov es xlat xchg pop adc in mov cld data16 pop cmp es aaa loopne pop xchg stc std push dec insl and add jb and or add xor mov (bad) outsl inc movsb fsubrs xor int push mov lds lret out pop add jne orl gs popa cmpsl rcr orl daa leave call fidivr addr16 add or bound push sub jge jne and xlat ja enter dec sbb cmpsl push out push and (bad) push sti sub mov outsl daa xchg ror xchg push icebp out leave jne bound pop pop outsb dec mov aas insl cmp xchg jbe daa fisttp (bad) out imul push shlb add mov or push pop mov mov testl xor sub dec mov push add dec push lret dec mov and aas sub out pop icebp test int3 call mov add pop mov mulps call jg xor sub (bad) cmpsb mov add adc and dec addr16 cmpsl push mov iret push xorl stos pop push mov sbb ret test mov xor (bad) adc js aam jbe jns rcr mov push outsl xor and adc xchg lea or jae clc cmp xor sbb ss out jbe sub fisubl insl sub ja cmpsb scas cmp int sub mov in int3 inc sub into es popf aas jb xor stos rcrb cli inc cltd (bad) (bad) add sti fwait mov pop cwtl (bad) lock mov sub cld movsb or in dec mov push jbe ds movsb sar and sub fsubrl in xor jge add inc pop (bad) sub leave xor out aam sub gs mov insb or xchg or jnp cmpsl lods fiadd and fdivs stc (bad) jae pop cwtl sub pop rcrb lods mov jmp iret sub mov fwait push cmc ss xor sahf sbb daa mov mov pop iret xor jno ds dec mov mov js sub rorl push push popa dec cmp ljmp inc test sub in sbb dec fild dec add mov pop dec movsl aam fsubl sub xor jno xor arpl or data16 sahf faddl outsb fucomip out dec pop repz xor jecxz jne das dec sbb js pop mov and or sub fxch das test inc sub add xchg jecxz and sub sti adc push pop lods into add rorb pushf (bad) stos ljmp mov cwtl jbe popa cs fidivl jno and mov xor iret scas fwait ljmp and cmp pushf mov (bad) (bad) jb dec rorl mov sub rcl ss fs sub jo (bad) icebp cmp sub sub and mov pop sub lahf stos jmp insl (bad) fcompl and lret popa cli dec push push clc out mov cmp adc xchg jb (bad) shrb (bad) cmpsb sub fsubr sahf adc pop push sbb inc push mov sarl mov ficomp popf outsb lcall lock sbb sub push std inc adcl loop jo inc and sub pop add fidivrl mov sub jmp cwtl ss aad ret imul addb pop clc sub into scas dec xchg mov cltd sub mov iret xor aaa push mov sub pusha insl jp jne fcomps add sub push fwait popa cmp (bad) ret cwtl into jns sub xor pop mov dec push mov cld insb pop push add jb dec add push popf aaa adc push mov mov movl cmp cmp jb mov sub sub adc gs push jbe sub pop outsl pop inc inc or fwait sub push stc repz sub sarb xchg mov mov mov dec (bad) jbe jne and mov int3 sub dec lock dec xor or movl mov sub pop bound pop pop in inc (bad) jmp loop cmp inc add (bad) cld push sbb add mov cltd lret jg sub and movsl cmpsl mov jg (bad) aaa cmp cmp rcrl out sti add fxtract push mov or fnop adc out xlat fisubr or sub inc mov xchg loope movsb and sub in cld or test (bad) jns pop mov mov in sub lret nop test ret inc (bad) adc mov or and and ljmp enter imul cli (bad) (bad) aam clc fsts jbe jmp lret js sbb outsl xchg rcl sub dec ror add notl inc adc mov mov inc jnp pushf das stos icebp cmc dec ucomiss pop jno push fisubr aas in (bad) adc xchg pop lock cmp fmulp push sub jmp int (bad) sub add sub test xchg pop hlt mov sub in mov lahf xor out cld subl lock xchg xor nop xchg xlat cs adc mov inc sbb cmp aad xchg js cmp enter add ja lods aas cli outsb aaa mul clc call xor adc jmp sub cmpsb (bad) and jg add or inc adc out jo cmc sub or clc push in (bad) divb mov sti imul lret rcrb sub (bad) into call xlat fucomp icebp and mov adc jl outsb mov outsl mov push cmp mov adc or xor jl dec std scas sub lods bsf ds mov dec shrl and add and sub scas xchg inc xchg adc (bad) cmp lcall cmp push and dec (bad) jg sub mov mov cmp or inc enter add pop cltd cmp ret lea mov and repnz add imul mov fsubl xlat xchg dec aad loop jle lds push ds pop push xor test jb mov push sbb bound orl cmpsb clc sub push xor lds inc add jp scas and ret sub fs cmp out or pop imul es sub dec or (bad) add mov pushl sub dec or or add cli mov xchg adc fcoms cmpsl pop pop add test cwtl adc sub ss jae ss fcomps int3 adc (bad) xor into daa in pop cmp pop movl aas (bad) cmpsl fsubrs xor adc push pop cmp int cmp sub and push stos aaa sub cwtl inc jb jne (bad) mov push jmp sub test test sub push les addr16 push xchg sbb add cmpsb mov jle out cmp cmpsl push arpl pop pop push loopne bound mov push es leave stos dec leave or and ljmp cmpsl sbb adc outsl pop pop jnp and imul imul adc stos out int and lret push in aas mov inc inc std ss loope jnp test jecxz jge int mov ljmp mov das or mov icebp sbb xor push jbe jne push sub jo xchg mov inc jo andl pop in dec and or lahf pop cmp (bad) into xchg jb dec adc (bad) in fcmovne repz aaa push unpckhps mov add fnstcw outsb repnz push int xchg les stos xorb push jge (bad) cltd rclb sub packssdw xchg add pop jg inc xor sbb loopne adc add loope pop idivb add xchg dec cmpsl push push sbb xlat inc jmp repnz pusha subl or iret push out movsl jbe push push jb pusha pop mov divb rcrl arpl stc push insl lods push jg sbb cwtl sbb jbe push fsubs mov pop pop lock pop orl les mov dec sbb mov stc adc fistpll mov out in sarl cli xchg adc pop ja cmc dec xor add dec sub jg inc xchg arpl jns fstpt fildll es adc adc pop mov xchg out (bad) and testb cmpsb xchg dec or push imul dec push push mov cltd out int lds dec int popa mov push lea sub out test call sub stc outsb int sbb pop sub sbb int fsubr or arpl das sbb mov out addl cmp out fdivrs and popl out xlat out out data16 or pusha add pop out xor sub loopne jl and dec mov sub mov xlat add scas or cmp rorb add cmp cmpsb clc push xchg sub stos mov adc mov bound out shrb sub scas cwtl fmuls inc cs sub mov add repnz aaa mov cmp sub mov xchg sub adc or les adc es adc sub loop adc push cmp loope inc insb adc add xor and daa mov test in (bad) adc sahf orb jbe,pn and insl jbe je sbb xor push fnstcw inc push inc sbb std or sub cltd aaa cli and in into test jns bound inc aaa not or pop test pop sahf mov rep lahf hlt iret jp enter in std int test cmc xor dec push jns pop imul jb jmp ds mov adc out pop (bad) out jecxz and stos fidiv dec jp cmp imul lret rorb in movsl inc int adc push lea push push addr16 shrl popa test sbb mov jo adc cmp (bad) pop outsl (bad) mov sub (bad) jmp insb out fdivl sub add sub (bad) add repz std rclb lods sub mov sub lret pusha xchg xor push aaa or sub out mov sbb cwtl orb movsl stc mov imul jno lcall mov out sub dec push fisub mov pop insb lods fdivrl jle jbe bound sbb cld cmp insl loope fisubr aam jmp lea rorb outsl fcomps sarb insb jns or pop lock ljmp push cli cld cs or pop sub outsl pop sub (bad) ljmp arpl int popa test les sbb pop nop test ja xchg lahf repz pop mov mov lcall mov cmp pop out jmp sub hlt mov lret push push (bad) and add je xchg mov ljmp enter dec add pop sbb test mov rcl cmc scas pop gs mov xchg mov into scas pop sbb pop mov sub daa outsb inc add sub iret and sub or lods mov inc fmull mov leave out insl addb inc or loop ja cmpsl cmpsb sbb xor xor movsl adc lods das ret cmpsl leave add mov popa pop sub and pop (bad) test dec inc mov int and sub (bad) repnz ds cs jl leave jno (bad) fidiv mov aaa dec test scas cmpsb cmp leave (bad) and push clc push and sti xchg inc cwtl rcrl int popa mov and sub push and lock adc cwtl mov fnsave mov shll mov add and (bad) iret jb xor and cmp imul dec (bad) movsb jnp leave inc orb mov cmp out pop mov in mov pop cmp sub addl mov (bad) xchg mov sbb add mov mov lcall sub into aam insb jle iret icebp xchg arpl push xor and js jbe je cmp and cmpsl dec jns push aaa push xchg and popf add sbb adc out push test aaa cli nop movsb test pop jne sarb xor fdivl mov sub adc mov repz cmpsl test es movsb sub mov sbb inc mov cmc xor mov sbb push loop sub movsb mov push adc mov sbb movsl sub sbb es cmp ss leave in test shrb (bad) je jp xor inc add sub cwtl in mov push loope cmpsl mov mov xchg xlat insl push lret sub mov mov mov cmpsl test mov fcompl push jb lcall movsl sub jne xchg and jnp ja (bad) mov mov lea xchg xchg sub daa popa push push ss add cmp or aam xor xchg xchg sub out (bad) (bad) pop xchg add jmp or lods movsb mov or xor into sub add xor js sub sbb mov sub out jns (bad) push xchg cmp cmp shrb jmp or sub ljmp pop sub cld pop adc push repz leave mov cmp mov dec mov xor cmp into sahf ljmp jl aam mov jle test fildll xor sub and sbb lcall mov arpl sub sahf mov fldpi xor sub dec out and out sub lahf jae sahf addl das sbb nop les shrb sarl fldcw roll jecxz jp push inc movsb movsl sub adc int ljmp jl (bad) fs sub dec aaa add xor cmp lea mov cld das pop (bad) sbb sub sub mov daa and and sbb sbb mov xor inc and ja mov mov add ljmp (bad) aas mov pop sub (bad) lcall mov mov sub ja push rorl pushf sub in fisubr cs out or fsubs mov or xchg aad iret enter pop ja movsl ficomp insb shrl lea rorl xchg sub jg jns,pn or sub mov lea fisub out movsl xor stc cmp int xchg dec push insl mov sub cmpsb cmp or mov mov cmc mov sbb xchg or or out inc (bad) push inc sub inc lds sbb add daa test in icebp outsl pushf adc pop adc and lods (bad) call inc jne adc push inc es sar mov das and xchg fldl jp std movsb adc xchg dec mov notb adc xlat rorl add inc xor fdiv cmpsl dec std in jo ds lahf jb das loope pop aam aam pop cmpsl and arpl into pop in add repz jbe jl aad xchg mov pop leave out in and rorb js sahf imul dec xchg out stos jne mov xchg jp adcl das imul out and push xchg cwtl jecxz push mov dec cmp stc xchg add cwtl mov out mov sub xchg cmpsb outsb fnstenv out leave or in sbb in imul sub pop jle mov bound leave pop adc cmp sub aaa dec and stc pusha xor sahf ror and inc and cmp mov les dec lods js push outsl push and scas pushf cs jp addr16 cmpsl pop push sbb aam sarb data16 outsl dec add dec xchg and mov sar int sahf mov push cmp mov and jg mov sbb xor pop les push xor xor out cmp hlt (bad) cld and gs pushf sbb sub out mov inc xchg bnd ja xchg icebp sbb mov notb jae fs pushf out pushw imul cwtl popf push adc sub mov imul aam je sub cmp inc (bad) ret mov dec ljmp movl stos sub ja out jl mov sub mov sub movsl add push cmp icebp (bad) clc mov sbb outsl ret in fisubr inc pop push adc xor inc mov dec lcall pop icebp jns pop ss ds pop sahf mov xlat fwait enter jbe inc insl fsub dec lahf ds add xchg dec jo imul pop in push call mov xor outsb inc cmp adc sub (bad) inc or adc fnsave mov aam in pop jbe pop cs push icebp jnp push enter dec cmp and add mov popf subb pop (bad) (bad) dec jg xor sub pop and cli cmpsl and ds jmp sub cmpsl rolb cmp xchg call or jg test test xchg out lods (bad) cmp test fcmovu jo xchg ret mov xchg sbb sub jno out mov orl leave aaa bound movsb aad or lret cs mov sbb or sbb in add cld xchg out rcrb cltd ds loope fwait movsl stc cmc inc jb jb dec loope mov pop inc xchg sub jo cmp push pusha (bad) into insl fidiv mov xchg add jnp or jge popa jmp je cld sub lcall pop or cs xor in sbb inc scas stos and mov push xchg sub sbbb cs xchg adc ljmp sub out fcmovb xchg mov (bad) sbb add and cld mov sub aaa lret leave data16 fcoms ss movb jmp clc aas xchg sub xor push or add (bad) pop adc cwtl xor push daa mov xchg arpl mov (bad) dec (bad) cs fucomi js inc and test repz cmp out xchg sub pop ret add add sbb imul (bad) roll mov (bad) out jge and xor pop es sub bound dec inc adc cs int repz and test outsb int ljmp push lahf leave adc sahf pop mov out inc gs cs push and scas imul mov js sbb dec jne cmpsb adcl inc leave scas mov dec xchg pop cmp pop lret repz (bad) xchg mov lcall mov add sbb lcall (bad) sbb xlat xlat mov push sub add xchg xchg leave lcall (bad) dec pushw idivl push test mov pop repz mov xor mov lods lds sub out (bad) loope sub dec fstps mov outsb fwait and out imul in inc mov mov shrb xor mov xor pop test lcall push lock cwtl cmp jnp fldenv jmp ljmp cs xor es pop mov jg call cmpsl or xchg xor inc mov push mov push rorb idivb pop sub outsl and mov mov jecxz in push push sti and add push push loope cmp dec icebp mov sbb jmp lahf rcll mov cmp mov dec add je pop cmp lahf sub loope icebp ss fldenv pop mov pusha lods cmp and popa lea sbb mov (bad) mulb loop inc mov rorl cld out and push test push (bad) in imul das jle or push xchg aad mov ljmp lahf fildll push sub cmpsl scas dec (bad) sub in (bad) ja cmpb int3 jmp pushl mov ja movsl jecxz scas pop adc pop jno push outsl xlat add (bad) ficompl sti cmpsl push (bad) repnz clc mov pop shrl sbb inc mov addr16 and jle jge lods (bad) sbb (bad) mov or insl out shrb stos sahf inc push xchg stos test and jp sbb fidiv cs cmpsl scas out inc jg bound xchg out mov jp pop into push inc call mov sub or mov les and and in addr16 sub pop mov adc lods xchg sub cld cli int3 mov sub mul inc pop out test lcall pop shll mov or xchg adc mov mov rcl inc gs push mov sub decl xor or test xchg mov sbb aaa cld loopne sbb sub (bad) jmp dec jnp dec adc jo jb testl outsl and xor and dec mov push in popf sub jecxz sub fsubrp sub test mov sub xchg das imul inc dec adcl add and notb scas dec jg loopne push (bad) ljmp xchg daa adc movsb cmpsl ss repz mov and into mov (bad) or or scas aaa or jl test dec xchg cmp movsb xor notl jbe mov sbb cmpsb pop pusha nop int push mov push subl inc lret push mov sti push push mov arpl clc es cmpsl sbbl cli loop and into les and orb repz hlt mov mov mov js or xchg and inc lods pop test inc (bad) mov popf fwait test pop cwtl pop test movsb jne int ret sbb int3 mov xor mov and in lock jns (bad) fimul xchg pop push adc rclb xor mov (bad) mov or f2xm1 bound fwait push mov inc dec movsb push (bad) es xor adcl mov push cld loop inc inc ja jmp jmp add inc aam (bad) int daa cmp sbb test loopne and notb pop leave fcom in lret xor sub int dec jl,pn or repz arpl ficoml push pop jno dec addr16 dec cvtpi2ps mov xchg out cmp rcrb mov shrl jg cwtl stc sub mov out mov and sarl fisubr mov cmp mov scas gs test sub xchg xor lret sti pop sub outsl mov inc or xchg push call sub in jnp xor repz mov jbe push mov inc push lds mov out lods cmp cs pop push jo imul pop pop xor imull push iret (bad) xchg aaa cld movsl jmp daa dec adc adc adc sub jl sub xchg adc in sub dec test aaa aaa xchg or and push test sub push xchg sarb jge (bad) jbe pusha mov ficomp xor (bad) enter pop lods sub xchg xchg dec mov sub sub stos and mov js stos jne cmpsb cmpsb loopne insb adc dec std movzwl dec orl push or push icebp jns mov sbb jnp pop (bad) mov sub cmc test add xchg or mov mov inc push nop inc cld push xor mov cmpsl stc xchg sub push sar mov clc sub test ds xor shrl cmpsb jne mov inc test jmp dec lcall stc aam roll aad ss add dec xor shrl push stc jmp fisubr aaa (bad) iret adc jle movsl rcrl mov xchg dec int aad adc fcomip sti sub inc roll sub pusha ljmp imulb cld jmp (bad) insl sbb push mov jge cs or sub or imul cli iret aam or add sbb xchg mov into ret inc rcl sub push stos jmp das jl ret jmp ss out pop stos sub add mov sub mov je jmp (bad) pop pop or (bad) pushf sub jbe ret add aam cmp inc cmp and aad cmp sub jp int jmp shr shrl nop in or sub shlb push repz jo nop mov stc std data16 jae push lret mov pop mov mov scas pop cmpsl xchg addr16 call fisub or xor jno jl das sub pop enter push out outsl sti push sbbb movl scas add std out lret and mov enter or xchg repz push mov mov push dec test or test pop ss outsb xor mov (bad) pop add int xchg inc aam sbb (bad) xor scas cmp cmpsb dec (bad) call adc push cmp add sub fisubrl pop ret inc sub pop adc cs mov push mov mov and sub iret dec addr16 xor jl sub les cmp cmp xor mov bound fisubr adc cmpsl mov inc mov sahf jae out sub push arpl jmp in js imul or and sub pop mov idiv jbe dec mov (bad) aaa cmp xchg adc add lcall out fldpi sub scas cltd frndint addr16 sub fadd xor push scas dec fwait leave mov mov lcall sub movsb xor repnz jo,pt decl in sub cmp inc sub jno adc pop inc or pop cmp push sub sahf repz or pop jne sub outsl add xchg or or loopne pop xchg (bad) int or rorl xchg imul pop jle sub jp cmc bound xor and mov call out (bad) (bad) mov push test pusha jmp cs js data16 (bad) lods mov (bad) out out (bad) dec sub clc dec movsb mov es mov shll pop jb scas sbb inc sub mov loopne rcrl fcomps sub out mov or test jmp fidivl mov inc and push fistpll in sub enter mov pop pop imul orl mov imul addr16 pusha gs fwait sub sub mov add fs cwtl xor mov fmuls add and (bad) sbb repnz shll dec xchg ret xchg push (bad) adc std cs and fidivl lods daa out mov push push out stc lcall xlat dec jl sbb dec xor fstpt (bad) clc add dec adc xor test bound or cs sbb je mov sub push in and adc push sbb xchg into jp add das push shrb or sub test dec inc sub mov mov mov inc jbe icebp (bad) loope loop inc outsb cmp push addr16 push aas dec sahf decb gs mov push js push ret pusha sub sub int3 jle pop jmp inc fs and dec push out cltd add cmp cmp xchg lods shrb mov popf mov adc mov insl adc lds mov mov jae add enter repnz (bad) cmc adc stos or lock shll aaa testl gs fs sub pop cwtl pextrw test or push dec mov mov movsb jnp daa fistl pop cltd outsb pusha push stos lock sbb mov pushf sub and ljmp mov out rcll sub ret jecxz sbb jno imul stos pop out add movsb sub repz faddl dec (bad) (bad) jno insl sbb fdivrs push inc test push iret ss (bad) ss loopne pop sbb call pop add pop sahf xchg das jns movsl movsb subl jmp loop and ljmp scas add leave jbe mov xchg enter pop lret ficomp xor (bad) jb and dec mov xchg inc scas in adc and cmp fldl leave mov inc push jp sarl jno ljmp cmpsl insl leave adc cld add cld push or dec pop jge sub dec out pop cmp fistpll in out pop push add (bad) dec dec fcmovb test mov es sub sub pop mov sarb mov lock and inc lahf int push push cltd test push imul stos fcompl jmp fadd shrb dec fsts in addr16 push clc push int3 idivb scas dec push xchg xchg adc add push daa mov fisub xor push fisttpll loopne adc adcb pop iret ret jne xchg insb jl xchg sub (bad) daa dec stos nop adc cmpsl inc scas xor dec or js sti and push xor mov cmp (bad) mov pushf or push jg sub add adc imulb (bad) mov cmpsb or push scas cld icebp cmp pop sub fnstsw sub cmp and fwait dec pushf pop sub orl xor mov sbb loopne or addl adc scas adc jecxz sub sub das popf push cmp rcrb mov sbb push sub pop mov movsb fdivs add je cmpsl mov das or sub xchg rolb xlat lea stos aad and push pushf jnp orb mov fs adc xor mov jne jbe adc inc inc aaa adc leave mov fwait shr (bad) loopne inc xor xchg mov mov cwtl xchg xchg dec lods int sub xchg inc (bad) mov sub mov imul cltd xor aad clc cmp insl sub cmp fbstp orb push xor sbb imul fwait data16 add xchg sub jecxz jo (bad) mov ficom out mov pop cmpsl jmp sbb push or hlt lods daa mov pusha dec das std leave sub sahf mov roll incb ficom push sub dec or iret scas lods stc mov bound call sarl (bad) pop sub xor arpl test mov mov mov cmp cmp inc orb sub push idiv jno,pt (bad) sub sub xor les sub mov outsl adc inc or dec movsl std sbb add sub dec mov sub inc imulb sti iret sbb xlat hlt dec (bad) xchg push sub mov ds xchg out aam xchg aaa (bad) cmp rolb (bad) xor pop and adc push sub jne fimul stc jno sbb loope frstor sub std and cld jmp iret aad jae out outsl pop pushaw cmpsb and push jmp inc fdivs outsb or (bad) cmp stos sbb sub cs mov ds movsb mov sub fcomps enter mov stc cmp inc imul pop sahf adc pop sub in fstpl outsb pop ljmp insl inc lds inc std ds repz out inc inc pop insl loop sbb outsb mov sbb sbb in or andl xchg call mov test push fdivs lds pop cmpsb ret add ja into jnp test sub dec push mov and mov or lods dec je push mov pop pop in dec cs xchg mov nop or xor cmp int3 shrl sub sub dec imul pop addr16 les inc fldenv daa push repnz jl sub arpl cmp cmpsl cmpsl jb pop mov mov fild add addl mov in push xchg cld int3 loopne cmp mov jno dec sub leave les inc xchg lea sub push pop mov sub mov cmc xor inc inc sub cltd and rorl sub lods (bad) mov and cmpsb (bad) ss repz cmpsb int add sbb mov cld and imul rolb pop addr16 or inc in aad mov or into and push sahf sar xchg in xchg out fsts sbb add mov xor mov cld or sub cwtl mov mov mov sub mov and dec push fiadd sub es sub hlt pop pop cmpsl cmp fwait lret push cs js xor insb mov and arpl and push imul cs not xor and (bad) mov aad sub insl loopne sub pusha insb fs pop stc push adc adcl push push jae popa lcall pop inc ds mov mov sub in adc jb sub fcoms out ds cs sub inc push mov in cmpsl stos negb inc imul push xor and mov inc (bad) mov cmc jns mov fst cmp adc push push sub mov aam testl cmp aam ja sub mov push sub cmp jae lods jg aam scas mov (bad) std stos push cltd lret pop insl sti int fsubrp pop lods bound push shr sahf gs ja int imul xor cs rorb push loopne mov mov sub sub jno test ret nop xor iret aam cld inc sbb jle imul sub cmp push stos jo ret sti sub sub ficom mov sub sbb add fild cld sub aas call je sub mov ficomp scas xor pop mov int cmp xchg xor ds mov jnp inc mov sub imul dec mov out lret cs movsb mov mov lcall loop and test push loopne rolb sub add xchg into out sub xor xor xorl sub add pop cmp push pop mov xchg sub cmpsb out xchg adc push cli imul push cmp mov adc rcr std (bad) adc sub jmp lea inc push cmp mov cmp push xor (bad) das sbb sub insb fldt les leave or xor stos decb lods add pop cwtl adc mov inc cs lcall inc ja frstor stc mov adc push and das pop mov sub push dec and daa movsb push test loopne call jb loope jne jl add push mov loopnew bound stos sahf in pop inc or jmp xchg cmp jb (bad) fiadd inc sahf ja loope lea sarl enter xor push (bad) js push int3 (bad) mov cwtl pop loopne,pt fldcw jl negl jmp int xor mov call adc nop leave scas and mov cmp and popf push ret (bad) fmull xchg out dec jno ret xlat push sub push (bad) nop lahf outsl clc and test leave jbe ret inc sub out mov cmpsl mov lahf cwtl aaa test out cltd xchg push dec mov out loop mov leave scas push mov aas push loope jge (bad) pop fbstp xor dec xchg (bad) mov mov (bad) cmc jnp mov push sub daa movsl pop xor inc ljmp jle test (bad) in pop dec ret sub and test sbb cmp aam (bad) mov sub and sub movl dec fld mov xchg fldenv jno pushf out (bad) sbb or push sbb decb (bad) loope mov stc call int bound mov xor cmpsl adc pop or or out stos scas lods mov mov or mov ucomiss inc pop xor aas test xchg orl jo dec int3 sahf std push cltd cmp insl sahf xor push add sub jg pushl jmp dec xor mov jl mov pop into movsb leave push cmp lea (bad) int xchg fwait sub xchg imul and mov mov mov (bad) imul mov leave out pop sbb cmp cmpsb cmp movl rorb into cld mov arpl outsb push out pop cmpsl push mov dec sbb or mov test gs cs and xchg in out jb inc (bad) lock sub jbe push and inc jnp lret mov inc pop in pusha cmpsb dec push mov xor cmpsl addr16 sbb (bad) xchg jl or test cwtl jnp xchg push jne or ja cmp jae inc (bad) xchg int3 mov cmpsl inc lahf leave mov sbb pop flds movsl int3 push xlat cwtl jp test push aaa (bad) xor mov inc mov mov fstpl cli mov leave cwtl push xor jns inc out fidivr xor cwtl sbb idivb inc outsl leave fs (bad) pop cmc pop cmpsl sbb mov pop imul sbb jno cmpsl stos add daa cwtl imul dec fisttpll cli cmp mov div cmc test ror push call outsl inc pusha push int inc dec loop insl loop sbb movsb cmpsl (bad) mov sbb (bad) std xchg and movsb in je imul (bad) fs (bad) push sbb test cmp test test lahf jp fwait xchg dec cmpsb notb or and fsts pop ds sub or add (bad) sbb xorl cld sbb mov clc push sahf rorb adc mov xchg and fadds imul mov and pop stc je inc faddp mov lea xchg cld cmp loop das ja inc mov cmp cld (bad) jns sbb fdivrp rcl jge sub xor cmpsl sbb fsubrs and imul or test sti sub lea jg xchg int ds lock xchg pop pop fnstsw fsubl jne xchg scas out js addb cltd scas xchg (bad) and mov pop pop push test push adc rcr insb aam lock sub das movsl arpl scas mov push jmp jno push and inc ss xchg aad dec repnz data16 and int xchg xlat xor js inc popa ss inc cwtl adc or mov in jns xor ret enter int3 iret ss in je mov test bswap jns cli dec xor enter dec xor push add or adc mov mov xor sbb (bad) dec cmp lods pop ja and int3 (bad) adc arpl out xchg mulb pop stos fisubrl subl push push das add test dec arpl and jno sbb dec sti inc ret ds pop test cmp jl and jnp rcl push dec sbb test fsubrl ljmp lods dec mov fstpl push fdiv mov cmp int mov xor mov xchg loop popl dec or xchg jb dec add mov sub cli and (bad) es push cmp jb mov and pop push inc test (bad) idiv dec test lret repnz push jmp mov imul push lret fidivrl sbb shl arpl (bad) incl jb loope aad icebp sub add adc (bad) sarb (bad) mov pop push push push mov je sti jp sub push sub es cmpsl leave popa out inc mulb inc cmp mov insl cmp sbb das imul add and test sbb and xchg movb adc cld lea add leave push push inc sub cmp pushf sub (bad) mov jo test inc sbb sub insl gs loopne cmp std sbb and lret sbb sub adc xor dec dec cmpsb add sub xchg js test cwtl cmpsb fwait xor mov inc call cmpsb in mov in and scas and sbb adc stc cmpsb xor cmp or sbb sahf stc or jo jnp add lods mov arpl ret int dec sahf (bad) xchg xor jp outsl fwait jmp pop fmul add sbb pop cs fiadd mov mov xchg fistpll cwtl movsl nop mov fmull cwtl in (bad) push add lret pop sarb xor sub cmc ja xor jb and push push loop (bad) loope mov int push cs arpl lods in nop inc adc dec repnz push xor jg icebp adc enter movsb scas cli dec cmpsl inc push in inc jbe aaa xor sbbl pushf pop hlt call push adc lea cmp push aaa pushf aaa jae mov fs add xchg sbb aaa mov sub int3 pop leave pop fstpl bound das adc cmpsb ds int jne sbb aam (bad) ds repnz dec inc jle fisubrl imul sub push push mov mov mov jb test jl daa xchg jbe push lea cmc cmpsb lret add lcall add jbe or and adc and leave inc popa enter test je mov or arpl adc mov cmp imul loope mov cmp cmp out popf jns daa mov sbb mov iret adc jmp cmp jae lock cmpsl cmp (bad) mov jge (bad) addr16 ljmp mov mov leave fisttpll bound add push ret mov sbb rolb adc xrelease sub dec push jne insb loopne in push rcrb or in jecxz pop fucom fldt insb xchg adc or mov cld lret jno movsb and loopne enter mov adc test ret popf lods sub xchg mov mov (bad) in cmp sub lock adc sub cmpsl bound pop jmp sub lret das dec xchg xchg (bad) test jo adc minps push sub add sub push push out add mov movsb stos pushf xchg cmp sti pop iret jmp inc mov pop cs push cmp mov push imull pop jo lret rolb push cmp sub cs out sub lea and rcll movsb and clc xchg xchg sub and add cltd nop inc fwait insb divb (bad) sub insl push call out fwait mov addr16 imul pop cmp negb lret or jecxz adc fnstsw mov loop add lcall sub or ret push pop aam and pop add divl scas pop (bad) test sbb cs out leave mov sahf subl dec add pop fs adc xor ljmp cli cmp leave dec cmp mov imul push or cmp cmpsl jo or shr jmp cld or mov sbb push xlat popa js ss sub xor jl mov inc (bad) out scas push push fbld ja test lret icebp sub mov push adc mov int popf cltd dec sahf jbe sbb xlat mov (bad) mov mov push inc inc dec and cs fiadd jb clc iret leave xchg aam and sub sbb pop cld adc aam icebp sub pop std mov push mov sti cli pop xlat outsl adc es xchg movsb popl adc cld jo sti xor jg jp test js imul sub lock jns out jecxz cmpb jl fstp out sarb jp xchg ljmp test daa or (bad) fild pop add fld hlt xor pop cmpsl jbe mov out pop arpl (bad) cmovbe int dec inc xor daa cmpsb pusha mov dec std jmp leave jg mov push cmpb das mov scas push and cltd jmp and xchg xor jb mov test pop push aas sub add ljmp lock inc int (bad) xlat jns lahf cmpsb icebp xlat cwtl xor jb mov hlt adc aas cli iret sbb stos adc cmp sub push sbb (bad) rorb unpcklps mov sub dec in push mov adc das outsl js out sahf loopne dec jne sub push enter (bad) push jl sub mov scas xor xchg mov xchg (bad) ss push xor enter pop movsb faddl mov jno add push or sub push cmpsb scas push pop pop stc xchg cmp out sub dec xchg cld mov shrb ds cmp mov pop jnp dec hlt or lahf and or or dec pop lahf xor mov push nop sub cmpsl (bad) imul sub mov out sub jp ss xor nop sbb cmc imul mov push pop adc repnz fistpl xor lret fidivr cs in jae inc imul movsb mov jnp jb insb or push cltd push dec pop les xor ret sub adc shll jmp inc scas sub add mov pop xchg push dec leave cld and xlat adc jp stos pop cmpsl sub push out sub push cmp stos dec inc mov sub mov jl in mov push hlt or test into imul sub sahf xchg sub cld call push in sub ss sbb mov insb jb mov fimul add sub (bad) jmp loop lret pusha sbb addr16 out push out mov sub arpl push xchg insb gs cmp mov call xor repz xlat jne cmpsl sub and cmp (bad) mov popa add xor dec xor dec fstpt or sub dec jg push sbb xchg shrl insl lds fcomi fidivrl cmp (bad) out inc (bad) xchg aad stc sub lock movsb pop mov leave (bad) ja inc add pusha mov inc and add daa sbb dec (bad) lahf lret or loop sub jb psubq jmp pusha pushf xchg sub scas push xchg bound testb push hlt mov jp mov addr16 cmp cmpsb add adc xor or loope xor inc sub add and dec mov out inc sub test mov xchg mov push shrl inc push shlb mov or mov push sub lea xchg ds push ja dec jo jg sub inc cs in and test into mov add sub je jg inc jl jp icebp cs mov sub ljmp or pushf daa jp jp movsb aaa cs xor cmpsb push fsubs adc dec lea cs jg jmp imul sub test rorb rorl sub push ds mov insl sbbb pop and add cltd icebp daa (bad) enter adc mov sbb mov loop jno jle cmp add fadd lahf das out inc fstps jge call inc jp int sub inc cltd in mov leave mov or out fidivl lea fcoms jne es cmp or adc xor jns aam rorl fwait bound xchg mov mov data16 ds xor add jmp mov fsubrp (bad) sub mov mov out sar cli xor popl rclb enter mov insl push clc cmp sbb pushf daa daa jmp or sub mov jo out sub jl or or sbb jbe mov sub dec push loopne sub mov iret sahf lcall ret rcll (bad) pop addr16 dec xor jno mov test in call push aam jg out js movsb ss adc bound ret out sub mov mov sbb mov dec cwtl js push popf xor sub mov jb cwtl pop fnstenv out adc inc mov (bad) ljmp (bad) mov and xchg js enter mov jle sub mov cmp lock sbb and or ljmp cmp divl insl mov cmp add sbb sub lds notb mov mov daa das cltd (bad) adc std and inc add nop mov sub mov clc push mov in sbb dec outsb neg rcrb sub pop fwait sbb jns cmp in add xchg xlat jbe mov and jno jl sub dec (bad) call outsb jg push imull or sub dec not icebp fsubs bound imul pop sbb cli aaa sub xor aam mov mov outsl pop lock push (bad) scas push adc xchg inc gs stos icebp jg jnp sbb in jbe adc fdiv push pop xlat lods enter (bad) push or cmp cmp pop cld mov mov inc cmpsb jmp mov cmpsl es or test in popa xor inc inc mov mov std jae lea popf rcrl mov lahf in sub es jne in jl test inc out pop push ljmp lods lcall inc mov js jp inc xchg aam ret (bad) push jns insl mov add pop sahf ss lahf mov inc test ja dec imul int mov (bad) daa ret je sub je sbb cmpsl mov fldl sub add inc (bad) out pop (bad) je les mov inc cmp imul xchg sub sub or or or es leave inc sbb sub mov es movsb daa loope fisubl outsb out and jl sub test inc repz jp or imul ret mov sbb sub cmp inc mov repz inc lcall inc or ret sbb dec sub orl jnp push into leave adc mov sub xchg mov lret sub cmp sbb in lods cltd xor fsubrl push fldt aas or mov (bad) lret add or lock pop cmp divb sub add jbe cltd cmc and aad xor cmovno movsb sub mov stos sahf mov dec test inc sbb add xor inc sub shrl xchg push insb pusha xchg pop outsl xchg lock push out push repz loop sbb pop dec push pop jge rcr das jp and adc hlt fadds enter ja (bad) ss push pop jae jge mov mov test and mov popf aas ds lret fwait adc sub gs cmp mov and push subl or repz pop add pop mov enter repnz adc dec fild push daa dec jle sub cld cmp cmp decl lods ret mov jbe add shrl jl or sub ss sti push adc mov lret and xchg std (bad) dec lahf xor inc and sub sbb out cmpsl dec mov in (bad) dec aam push jbe inc pop xor cmp push inc test cmpsl enter adc jae shrl cmp cs add dec push mov test aas push xor icebp fisttpl jl adc dec (bad) rcrl ja lahf pushf mov int3 xchg xlat sbb imul jmp ss xor out ja adc ss cmp jmp psubsw enter loope and xchg negb xor pop or call orl cmpsl out sahf inc in pushf sub add cmp push xchg ret addr16 xor fsubl or mov push pop push or aas dec mov stos int jb lret push int3 leave add ljmp int xchg inc loop jo cltd mov sti stos int jmp push mulb or push sub pop pop dec pop dec xor int test (bad) out mov or fisubl icebp or lods ret into shrb xor adc push rorb pop pop mov aad sti daa xor outsb fimull sarl sbb sarl (bad) (bad) cmpsl out push call (bad) xor daa nop cmp push jo test dec cmp repnz lods jg push push int aad xor pop aam es popa loop add int (bad) xchg xchg pop jle cwtl cmpsl movsb sbb lea cwtl daa mov add or sub dec jbe adc add pop dec ret inc leave movsl mov daa aaa ljmp lds int sub mov xor leave gs leave dec cwtl int outsl stos rcll dec js push pop pop popf iret int cvtps2pi or sbb mov adc push sub xchg outsl bound test push pop scas add ss or sahf push movsb (bad) out scas lcall cmp int3 mov dec jne mov (bad) lret outsl xchg ret and add (bad) xchg lds hlt push cltd pop cs (bad) pop cmp lods outsl ret mov enter push ds dec arpl aaa out add subl cwtl inc xchg outsb add in push lock sub out lret mov dec lahf push ds bswap mov fxch addr16 pop (bad) inc push lahf cmpsb inc insb push in out mov ss sbb xor jns insb in ja inc add (bad) (bad) jnp pushf adc cwtl xor and and pop dec cld adc mov fwait addr16 fcmovne nop mov loop dec int lret (bad) pop adc test jmp test push xchg jb cmp sub push mov pushf inc sbb insb xchg pop mov mov ret pop pop je outsl fcomps and sub mov jbe jb jb jbe test int xor (bad) mov (bad) push sub jmp dec aad mov loop ret add es cld test sub pop ja pop adc dec out ds sti (bad) pop insb and or sub int lock xor icebp sub in add lea dec xor sbb je push ds imul adc cmpsb jbe addr16 int push add pop inc mov xlat leave mov cmp cmp mov imul or pop cltd and push scas adc sub xbegin aad xchg jecxz mov cmp int3 rep inc dec rcrb sub adc outsl pop orb leave test js jp mov cmpsb fistl int dec sbb cmp sbb hlt push adc and ja add int imul mov sub imul push jg cld js pushf add (bad) pop dec inc ja mov sbb jecxz inc adc (bad) fiaddl push jnp dec xlat test mulb pop jnp jne movb sub mov data16 (bad) sub stc into ja pop add imul xor sub bound cs cmp push icebp cmp popa test and push sub rorb (bad) or repz jmp (bad) enter leave sub aas clc pop in push jo sub int3 (bad) jbe outsb pop leave loop aaa adc adc int3 or cmp cs iret divb stos sub xchg popf fsts mov pop leave push sub dec call rolb inc lds addl push repz mov jecxz sub addr16 sbb lcall xchg pop stc mov loope and outsl dec jg dec or fnstcw sub fsubs pushf sbb aaa and rcr dec cli add ja popf dec movsl iret dec cmc and insl add dec sti sub or cwtl std xor sub jmp jns mov je aaa fucomip pop mov mov int3 push dec mov out fidivrl in push loope cmp push aam sub xchg adc or dec loope cmp jle add sub icebp push (bad) jmp cmp xchg idivb mov push divl lcall test fdivrp pop push ljmp xchg jecxz push lahf sub out loopne les clc mov pop out insl (bad) movsb pushf xor test jnp jmp xchg cmp data16 repz cwtl fdivrs cltd loop push mov stos lret sub (bad) cmp jge inc sti sub dec xorl sub in mov adc xchg out loope jnp lods loopne out xor fsts cmp mov jg stc (bad) dec push pop push cwtl (bad) sub inc xchg inc or cmpsb (bad) sub daa rorb xchg iret arpl sub rol push inc test or add pop or popf pop out hlt clc imul sub mov jmp sub mov mov gs mov loop adc adc push jbe test (bad) fsubrl std pop movmskps xchg mov or fisubl xlat repz sub repnz in sbb mov lds inc arpl hlt or and sub roll (bad) xor jo,pt out jne cmp jmp cmp dec lret dec lret sti cs xchg outsl loope dec jnp xlat sahf pushf xchg lods idivl sub inc mov leave pop aam lahf scas cmp outsl cwtl ljmp jnp xor sti mov add cmp dec cli outsb adc dec inc lahf cmp and jo cmpsb fwait andl int mov pop addr16 subb mov mov adcl mov mov scas (bad) aad xchg jns xchg daa inc imul xchg jae notb jp jecxz (bad) lods imul ret jo dec jnp cmp cltd pop jbe cmpsb sahf mov sub push ds rorb mov popf subb fisubr jo and out mov int3 (bad) insl pop lcall mov push daa dec hlt gs push clc sbb mov lret inc leave cmp insb aaa xor jno lock jmp sub mov sub pop cltd xor fwait xor pop mov mov mov nop xchg mov arpl addr16 fldcw jb sub fnsave xor adcl test mov int pushf or jp mov rorl push ljmp adc sub mov mov mov sub enter xor inc jbe xchg test movsb (bad) or and sbb add push jp pop sub sbb test jne and dec fstpl xchg pusha aas or pop dec jl jbe adc xor fdivrp sub sub lds enter shl jg dec mov loope out ret into xchg sbb shrb cs pop inc xchg test jmp sub cmp std push cs and cmpsb dec dec test jbe aam cmpb (bad) aas es shrl add inc (bad) fidivr jnp mov push sub mov add (bad) ljmp mov lahf fild lret jno inc int3 test pop jae pop mov cmp ds arpl loope sub mov cmp (bad) cmp push mov daa pop mov outsl les out loopne jecxz test mov push pop and xchg mov and cltd sub sbb out dec jb add xchg mov sub jno pop sub xorl push cmp sub xor xor outsb xlat xchg sub insb lods sbb hlt jl adc ret sub pextrw push mov and nop sahf daa (bad) or sbb xor out lods sbb adc cwtl or push cmp loopne stos cld xchg xor aam sbb push nop fldcw into hlt bound int3 jo out pushf jne jp aam xor mov push (bad) sti dec cli sub mov sub dec lahf cs add or stos loopne adc in loop stos mov dec out add mov add push and in xor dec scas adc jbe jo jp jg pop or add mov stc jne cmpsb pop sub mov mov cs jp cmpsl jns test adc ds push push cmc rcpps das rolb das cmp push lcall push dec lds out lock call or lock adc pop icebp cmp dec (bad) dec adc cmp pop pop (bad) repnz test mov pop inc lods ret cmp push dec int aaa sti mov add cmpsb pop pop fwait sub cmp jno int3 jle mov jnp (bad) imul lock ret cli push jo out cmp cmp or fnstcw ds and push and xor rcll loop mov sub (bad) jl js (bad) dec xchg push push imul and mov sub imul jb shll mov mov inc xchg mov ds xor push add adc out add pop xchg jno ss pop cmp cwtl sub int3 mov sbbl cmpsb movsb not pop mov or out mov mov cmp imul sbb inc jnp ror (bad) cmp mov enter test aam xchg dec dec adc (bad) jg outsl mov sahf mov xchg dec rclb adc insl inc pop mov lds ret stos js sbb xor and stos int cmpsb adc add loop xor repnz mov (bad) daa cmpsb pop data16 and mov or jecxz outsl sbb addr16 mov cmpsl push mov cmpsl inc add push ficompl push cmc push lret dec push das sub mov mov push dec ficompl (bad) sbb sub out fistpll ret pop xorl mov or nop mov adc fdivl outsl fstps mov je and enter stos pop sub xlat sub xor into shll test xor ja add pop cmp ss mov popf push int3 test add dec and inc cli cmp loope pop pop sub hlt loope lods in pushf out pop stc aaa sub (bad) cmpsb dec sbb adc sub add fsubr addr16 jecxz outsb mov pop lcall loope push xor push sub andl (bad) iret enter adc jno pop test cmc pushf or sub cmp cmpsl cmp mov xchg sub pop insl sbb loopne fucomp cs repz ret test bound or in mov and pop mov push pop xor push dec mov inc push mov jge push inc sub dec orb mov arpl stc sub and sub and pop movsl (bad) in sub push mov lcall push scas jbe push idivb push out add imul push jecxz push daa xor or jmp push imul inc das sub pop add sub std test enter test mov inc outsb insl mul push fwait push inc or loopne sub mov leave lcall aaa pop fs jae pop out daa sub dec push insb bound or gs scas sti ja in and mov aam sahf cmpsl data16 das jns daa hlt loop lcall popf sub popa cmp adc sahf pop daa repz xchg jno cltd push mov shrb fbld test (bad) cmp or mov iret mov mov push jmp xor out pop pop sbb movsb mov imul sbb dec subb cmp sub mov (bad) bound insb cld mov iret (bad) adc in nop rclb xchg daa sarl add fiaddl movsb xchg (bad) repz out test bound pusha adc sub or cmp test xor pop nop sbb jno in leave repnz js sub lock andl rorl and (bad) xor cmpsl mov cmpsl daa insb pop sub or sub loopne mov cmpsl popf xor (bad) sbb or mov sub cli imul dec sbb push mov imul xchg pop push movsb cs jns stos jecxz mov test lret roll sbbb je push ret jmp pushf fdivr outsb test mulb add sub fsubp sub lahf mov out pop push nop dec mov imul fs pop rorl movsl dec inc cmp fistpll add test test jmp int3 or inc hlt dec not std sub pushf lret mov fstpl in sar cmp xor xor inc pop or mov dec jge mov out cs push xor sub mov pop or adc fdivrs hlt (bad) stc fbstp and or inc aaa sbb cld add aam aas dec movsl lods dec sbb in scas movsl xchg sub adc xor js loopne adc xchg jmp lea push lahf jecxz inc add inc cs push cmp cld out fadds es mov or clc lahf cwtl pop jmp cmp pop add sub jbe scas cwtl push jbe insb cs and xor inc cmp xchg mov fildl mov and hlt sub iret sub aad ljmp sbb xchg mov xor jo popa add mov add push movsl or cs icebp outsl out fbld fsts and fwait movsw roll sub mov call out rol add sbb clc imul jb pop jmp fwait mov sub bound fimull mov inc mov xchg les jb sti sbb jmp xchg sarl frstpm(287 jmp data16 adcb into mov jne inc xchg fldl2e xor and scas (bad) arpl push adc test imul add sbb pop push sub push fmul out test jo push pop push into and imul jg pusha add push mov sub sarl or xchg mov adc nop jecxz xor jae (bad) mov mov test mov loope vprorvd sub lods fisubl jge pop fimull int3 jnp sarl push xor add sub cmp or lea mov xor inc subl xchg xlat jno mov pop fbstp pop insb lods shrb sbb (bad) stc (bad) test insl push jmp das movl clc dec push push jne xchg sub sub and lahf or sti loope dec mov pop ds jge in int inc andl nop sbb pop sbbb jno mov cmp add jns cmpsl fwait hlt into leave imul inc sti xor (bad) add sub popf or aam jmp inc sahf or add cmp jno ss adc fstp inc dec adc push pop sub sub movsl sub mov lret (bad) pop xchg xchg xor xchg ds adc ds fidivr stc sbb out add pop pop fnstcw or mov jb mov fsts sub sub (bad) iret mov fs pusha ret popa (bad) xor mov sub sbb sub popf dec jl jae mov sub fs sub inc fsub imul cmp pop lcall pop lods pop cmp mov aam mov dec data16 fidiv pop xchg pop ss iret or ja push leave imulb mov sub and xor mov add cmpsb fisub cmpsl pop cwtl fchs inc lea push outsb mov sub movsl xor fsubrs movsb sub daa ja mov test xchg mov sub mov adc cs mov adc lret sub popa call sahf js mov aaa iret or xor or daa jecxz out ds push out inc loopne rcll xchg sub add into push jo sub sub and out mov jnp jmp inc or sub add dec inc (bad) faddl cld sub stos test and push sub xor xchg adc loop inc fimull fsubr sub mov fstpl (bad) (bad) or xchg ret mov shl jb sub flds dec mov ds fdivs adc call icebp jle or sti test jbe cmp loope adc (bad) jg fwait ret aam popf es jge pusha dec sub jge outsl cs jp jo test addr16 mov clc js (bad) out jno push fdivs add pop inc (bad) add out mov insb scas lods or and (bad) pusha push lret insb dec movsl loop imul push dec xor add and mov (bad) push int3 stos add insl movl out imul bound mov adc pop mov dec jns aad mov xchg dec bound inc (bad) ds fs adc out data16 into pop mov enter cmc pop hlt cmp insl insb push leave jle xor dec pop mov (bad) mov cs stos int3 sub std push cmp jp dec adc sbb (bad) movsl out mov imul inc jmp push cmpsl cwtl sub in cli dec xchg cltd adc pop or leave jbe aad sbb cmp mov clc push testb arpl out xor fcmovb or dec mov mov jno push pop cmp mov ds loopne add cmp std arpl adc mov gs xor cmpsb nop or xor mov mov inc cmpsl leave loop out pushf or mov push leave add and jg fidivrl dec in push dec xlat fnsave cmpsl int push imul fistpll arpl lret fild cld mov rclb iret adc cs cli call lret repz or adc fisttp cli jb inc scas aas and pop jecxz hlt sub mov dec clc scas idivb mov pop dec rorl aaa int in xchg and es mov (bad) leave push fchs push xor push inc and and clc mov jbe fnstenv es (bad) sub dec cmpsb fmull cmpsl fdivrl cli shrl pop gs cmc xor sub mov xchg iret int3 mov xor out movsb enter xchg jae sti jle dec es cli adc aaa mov inc leave sub cmpsl inc in (bad) lahf cs add fidivl mov cmp push pop dec add imulb pushf sti adc push (bad) adc inc xchg (bad) loope popf push sub movsl fdivl insl and cmpsb or lock sbb sahf mov dec cli cmp dec inc sub lds mov out and jno and and push or or mov add test es inc ror (bad) leave test cs pop add loope cmp lock (bad) xchg cmp xchg jae jmp in add and test rcll adc clc (bad) cld jge sub popf lods paddsb mov test jns in ss cmp iret test or repnz outsb inc les and mov lods in sub fiaddl sub mov push cmpsl cmp push test or sub xchg add push jne sbb ss jbe out fcoml imul mov aaa jl (bad) fcmovnb test rcr hlt dec lea sub push add sub movsb or test movsl lret std sub inc (bad) cmpl xor push insb divl mov xchg sub (bad) xchg jmp mov mov pmulhuw xchg imul mov loop test pop pushf jp rcll lock je xchg leave sbb push mov add test punpckhwd les fnstenv (bad) dec jge xor repz lahf outsb fisubrl sbb jmp sub ret ds subl sbb insb fcompl jp lock stc shrb in pop sub inc and sub jge js and out mov adc sub mov push pop daa dec and jmp mov data16 jno mov xchg incb mov sub bound ja shrb or dec imul mov out pop test sti dec push lahf sub adc mov sub insb jno pop lock loopne movsl sbb imul xchg push in cmp ss in push jle ficompl pop mov ja mov mov repnz pop (bad) sbb xchg insb adc mov sub cs mov int shrl out jbe data16 test cmp xchg test sbb inc sub test push stc cmc sub dec imul sbb mov and (bad) sbb xor enter push not adc out cwtl loop xchg dec sbb push pop xor jg sub xchg sbb test jmp and cli cs cmp add pop in (bad) mov adc stc imul les notb push xchg xrelease jne out inc xor lahf fldcw and ljmp (bad) xchg cmp add inc add pop (bad) pop jg sub pop bound decb mov out shrl xlat jns push sahf mov vpshufhw sub pop popf fsubl test cmp and jp sub mov sub js sbb mov imul lock push sub (bad) std fsubs sub pop aam pop out cs pop pusha mov int3 or mov xchg lods cmp mov inc push enter sahf sub aaa mov out ficompl fsubrs cltd jp mov repz or xor cwtl call jns movsl shrl mov and repnz sarb std mov psubb push pop lds mov cmpsl jnp xor popf sub pop push add mov pop adc mov sub rcrb ss xchg adc fldenv mov push xor adc jge pop mov popf lret mov and lock out sub or subl int xor and sub cmp pop out cs or ret cmp leave cmp inc mov pop or push popf scas adc fiaddl dec roll push movsb xchg and fcmovbe mov jb jl ret (bad) xor data16 lock mov aaa mov xor mov test fsubrp dec xor icebp or stos iret dec mov fwait sbbl bound icebp pop xchg daa cmp in std jno (bad) dec loop sbb pusha inc int xchg cmc and pop cmp mov stos mov jo cmpsb sti (bad) imul (bad) inc push sbb xor and ret jp mov rcll cmpsl (bad) mov aad cmp mov or cmp stos jge aaa inc int3 sbb int mov in sti sbb sub cmp or (bad) rcrl inc (bad) fcomp jno inc adc popf outsb (bad) (bad) ret and je aam (bad) loope je and add lods mov les (bad) leave or (bad) in sbb mov jbe in hlt imul jae cmp cmp imul or push out dec imul push pop jnp in nop push sbb sub inc (bad) (bad) adc lret xlat push lret fdivrs xchg aam std sub inc (bad) fisubrl (bad) notb and mov mov fidiv (bad) mov pop and shr push mov mov (bad) sbb inc out call pop cmp jb outsb aas data16 mov fwait jnp sub lcall stc adc dec int sti push mov xchg pop (bad) mov push and pop stc cwtl dec rcr jb dec es jo out sub in inc cltd in mov push and divl mov cmp ljmp ds pop inc in jl aas int movsl nop gs cld pop daa push push or addr16 in cmp cmp inc insb dec lock inc push in mov dec jmp (bad) aam rcl fxch fistp sbb push cmp push xchg and adc pop test cmp repz adc (bad) jmp sub jno push xchg ret xchg lcall pop outsb stos (bad) jecxz cmp aad pushf aas xlat loopne or (bad) xor aam cmc sub xor push ljmp jbe jne and sar ljmp and adc sub or cmp js pushf or sub shrl xchg xchg mov cwtl sub dec orl std dec cmp aad push aam aaa push add cmp and jne cmp popf jo outsl loope into xorl leave xchg (bad) inc sub add sbb out mov (bad) cwtl push pop sub jge int jbe mov and outsl cwtl add out std push dec call (bad) testb sub in stc jb,pt or daa loop mov xor add push inc ss fdivrl xor add mov dec mov mov les vpmadcsswd push dec leave stc pop inc rcr dec negl outsl or sub cltd mov push push pop xor in push jbe insl int3 out inc inc int push jp test imul inc dec rcrb dec test (bad) dec (bad) (bad) out rorb xchg and stos cmp add and adc cmpl cwtl lahf leave cli pop out and stos incb fdivrs cmp xor dec ja pause int3 adc sti stos jecxz sbb sub dec std ljmp mov xor lock loopne add lea and mov cs adc out lds add sbb dec inc sub sub pop lea stos ss xchg fsts jbe pop icebp (bad) jb enter xchg push push mov sti nop xchg notb jle (bad) sahf mov sub mov adc mov cwtl xchg xor out or pushf xor xchg popf subb dec jl push ret sub sbb push mov frstor nop sub imulb dec outsb pop or pop mov jno xchg das pushf test (bad) outsb loop cli xor jmp pop pop sub jne loop xchg repz movsl inc (bad) cmp pop icebp jbe ss dec and sti addr16 lcall inc cpuid lret push loop sub or sbb (bad) jbe pop sub jb sub cs in pop lahf cmp test cmp sub cmp pop jecxz mov push or jg mov loopne sbb incb cmpsb out out xor cmp icebp std int xchg adc mov push sub dec ss sub sub insl into xor sub fwait push jbe cwtl cmpsl adc lods addr16 mov lahf das adc pop push fbstp jl adc mov push or (bad) mov mov adc pop mov outsb pop pushf xor mov and cmc rclb sahf sbb pop push mov cs mov or insb mov ds and (bad) test xchg sahf in popf insb pop stc lea pushf jmp or imul lret cmp loop cmpsb cmp sub sub sti out mov shrb adc or cs fldt ljmp mov xor mov lea cs fdiv xor dec into roll jge push fsts mov or lock xor add sub xlat adc icebp push push sub or stos jmp sub orl inc xchg push adc bound inc imul stos pop jb cwtl cmpsl jmp and cli (bad) stos mov sub (bad) jb (bad) je in pminub pop xchg sub es das outsl jg insb cwtl sub (bad) or inc xchg xor mov sbb xchg xchg lods sbb mov pop cmpsl arpl cmpsb std sub (bad) xchg ss sub into test fmul repz sub mov mov lret and ljmp mov bound lea loope,pn in sbb shrl pop rorb or jl mov xchg push and in push shll cmpsl sub aam pop inc mov cmc enter movsb pop outsb sub and xchg push xor push lds dec test mov int ret xor adc mov inc rorb adc mov mov test sub cmpsl mov sbb inc fcoml pop add movsl in fwait fs mov aaa nop xor es rolb adc fisubr insb fsubrl dec arpl sub lret popf adc (bad) rol (bad) pop and xor jne jge dec sub shlb test aam pop sub jno lods icebp out sub inc or pop mov inc insl rcl push xchg jg dec inc inc sub out cmovne sub int3 inc adc gs adc cli pop imul inc orl cmp in mov arpl lods dec popf mov push xchg jle sub xchg mov shrb xchg xchg xor adc xchg xchg sarl sbb test pop jae add sub dec sar sub out jne or mov mov xor leave jp or xor cmp and pop (bad) pop sbb aam test jno mov insl mov cmp insb popf mov adc jb movsl (bad) clc jbe test push jb cmpl jmp xor xlat push std dec mov and mov cmpsl lds cld mov cmc sbb imul mov sub leave jnp ljmp inc mov xor xchg int adc xchg jbe cmpb scas sbb hlt call (bad) sbb jo push cwtl and inc push cmpsl int sub mov mov push mov sub dec mov shrl (bad) cs mov outsb mov or cmp adc scas lea adc pop jb scas addr16 fistp lock xchg clc rcr inc or jg mov mov sub sub mov mov sarb sub dec mov data16 and shrb jnp sbb aad lea aam inc pop lock xor roll cmp cmp jecxz xchg xchg pop out cwtl popf cmpsl stc out imulb add lock mov imul (bad) jb mov inc repz mov sub insb lods ds mov sub or push movsb jb xor in xchg xchg jge,pn sbb sub and sub xor jle test dec decb sub push out ss cmp repnz imul jle ja rcl pop jns addl or and in adc mov mov sub add shll inc cmpl jnp inc lret or imul mov pop popa lret mov ja or inc xchg loop lock fisubr mov or jge push sarl test (bad) and mov xchg arpl aam mov repz cmp sbb cmp clc sahf repnz ret jbe xchg int jo jl sub pop add mov out loopne ja iret adc (bad) ret (bad) sub mov mov sub or and ret enter xor sub add cs sbb in push xorl stos sbb in ss cmp dec aas mov cmpsw subl lahf pop sub add xchg pop stos ljmp arpl cmp dec sbb outsb mov xchg adc sub and rol mov loop cmp fistpll hlt in in movl pop ljmp mov btcl mov pop mov mov jle,pt stos icebp mov mov aad pop movsl push cmpsl pop cmc sahf jge js push jns lods push pusha in dec sbbl cvttps2pi imul cld push or xor sub dec dec mov mov mov mov leave outsb xor cli dec int sub fimull push push mov add pop sub jecxz scas repnz fistpll push add (bad) or mov cmp fisubrl jnp add in cld xor push mov sbbl out arpl dec sub negl cld jno sub xchg fidivrl clc and aaa data16 es (bad) cmp pop gs arpl dec (bad) push pop mov cwtl inc jg dec ret hlt rcrb in adc dec (bad) fistp sbb pop cs sub (bad) in push ss sub xor repnz cltd or into dec sbb mov mov xor lds test in fdivl jbe and iret sub xchg test dec pushl outsl fucom dec lock cmc arpl out adc inc sahf xchg popa movsb inc pushf cmpb stos add test fwait sub fnstcw imul ss aad (bad) or enter sub jno pop inc out and add adc faddl fnstenv cmpsl iret ret sub bnd mov pop jo fistpl adc insl adc mov mov sahf iret jle (bad) mov popl xchg sub inc fs mov test mov stos sahf fs mov cmp rol jecxz pop hlt dec leave subb lahf fild mov imul pop push lret push cmpsb (bad) aad enter mov inc out fsubrs or sub sbb pop test into mov mov cli imul add lods lahf inc cmpsb jbe xor loopne mov out xchg mov fisubrl cmp int3 mov dec js jb in xor push ss xor adc sub adcl mov xchg sub bound loope popa in jbe rolb iret add or sub inc push xor out cs jo inc xor ret test test sub add xor sbb es xchg leave call jl mov sub mov dec leave roll mov pop insb jno cmpsb mov into add fsubr mov mov or mov (bad) cmpsb jno sub push cld push sub icebp ja sub cmp popf shlb hlt imul pusha pushl in jmp sub add mov sub and sub lcall in pop daa lods dec (bad) mov loope (bad) mov push push pop sub sti cltd pop icebp xor test lock imul pop test jo sub pop mov cmc ja push popf sub dec imul add inc lcall out sbbl sti jle sbb iret stc cmp loopne inc xor movl mov mov xchg ja dec and jmp adc imul dec int pop mov mov inc pushl cld inc sbb sbb stos jnp leave popa push (bad) (bad) push dec sub cmp cmp shrb dec aaa fistl leave push push inc push fcompl adc test repz inc inc out in cltd nop lahf push xor mov jne or xchg in xor sub xchg sti adc jb xorl cmp adc cmp dec ja fisubl push adc inc popa jo out mov imul cltd jecxz fnstenv push mov movsb cs sub inc call into shll mov es sbb adc and ret adc movsb data16 mov jmp stos adc sub cmpsl (bad) push jb lods clc pop loop push jns in mov (bad) (bad) int aam and fcoms pop enter imul push lahf pop mov ret adc cld es push dec mov leave aam pop imul ja cmp push idiv sbb test pop jae push add sub add ljmp popf or or pop fdivs add sub aam mov push dec mov bound sbb pop jmp xor imul push ja adc jp adc push nop jge push movsb sub and cs pop cmp jl aad pop mov sub lret sti rorl cmp lahf aas in les xor popa test cs xor adc pop shrb pop cli int3 es dec sub jno cs push xor pusha insb clc sti lods add and popa jbe,pn and ljmp jp adc int dec inc inc fisubrl or jmp clc sub mov sub and add clc jp movsb mov inc or bound xchg ljmp jno push std sub dec jnp insl dec je sub jg push sub cmp (bad) aaa xchg jge movsb ss pop lods xchg daa (bad) std sbb mov sub (bad) xchg mov mov mov sub ret xor stos in (bad) nop lret loopne push xchg loope sub mov push xchg cs and inc lock std call or and jmp cmpsl imul inc sbb sbb cmp mov add mov sub enter inc xor pop call sub pop jl or pushf sub imul sub cmp ds jbe xchg int sub sbb mov xor repnz fldt cmp xor cmp push sbb mov sub dec fwait add fstpt popf mov scas xor loop orb xor imul cmpsl mov fdiv xchg mov xor mov cmp movsl sub push sti jb pushf xor ds fnstenv or test ret and xchg stc push jbe shrb dec imul sbb sarl mov or popa or xchg adc into aad jnp adc mov stos cs (bad) cmp daa inc dec sbb inc add popf mov out sub sar xchg mov aam bound fimull test pop sahf cltd arpl push sub dec add (bad) jno shrl push daa adc iret lret xor imul jle mov adc insb sub jne jns subl repz dec cwtl aas scas xchg jge ret dec jns xor sbb data16 stos notl xor xchg in mov xor (bad) fcmovnu pop int3 xchg test lods (bad) daa mov scas popf sahf add enter repnz sub cmp jecxz add fcmovnb adc lahf mov add fild sbb enter xchg daa aas test in cwtl ret xchg je cld lcall push pop jge jmp or cs ret (bad) fimull push stos or xchg mov sub xchg mov outsl sub sbb (bad) incb inc cs imul jns jge mov push xchg push add leave jle jbe sbb push aam out in cmp push jl decb ja sti sub mov data16 xchg and insl mov shrb pushl add xor cli xlat out sahf cmp pop aas mov gs sahf jl mov leave cmpsb fwait clc mov and cli dec mov sbb pop and pusha sub lcall push aam jb sub sbb in ds or mov inc leave imul pop push push push (bad) push loop dec xchg mov es push add pop dec adc mov out xchg neg mov mov (bad) xchg loopne stos xor pushw or das xchg jmp sub bound xchg repz xchg or sub push pop push rcrl loope pop xchg xchg out xor push test fldcw lea or jmp mov jne aam je fsubs repz mov adc popa aas dec test cs outsb pop push jecxz addr16 pop cli rclb mov pop dec into divb int3 mov and jb xlat sub xchg xchg inc inc scas fidivl push sbb data16 push sub arpl inc inc mov sub inc test and fldt push outsb ret or divb (bad) cmp mov jmp ret fldt icebp cli out test ja enter iret int cmp adc (bad) sub add push xchg inc inc movsb jmp dec jns stc dec in or (bad) or pop in sub and pop je leave cs cmpsl insl sbb sub rcr inc imul cmpsl in add adc scas push ss std shrl stos mov xchg sub dec jnp not dec cli sub jb sbb (bad) sub mov ss dec sahf enter mov out mov lret mov mov dec std sub or bound enter enter mov cmp or xchg gs or sub mov mov js sbb sub orl mov sub insb mov out push and sub lods dec push and sub leave cwtl xor jl fmulp xchg inc cmp aaa in stos out push add (bad) mov cltd into add sub cs dec incb and bound loope fisttpl xchg mov jmp mov cmp sbb or stc dec aaa aam jbe mov fcomps push sbb mov out jge jbe or push and sub push jo push push out sub mov sbb add xchg int mov test jnp (bad) inc gs cli dec cmpsl mov xor adc iret ja sub (bad) std dec dec leave int3 or sub push into fwait or ljmp pop outsb stos pop inc xor (bad) cltd scas out addl fstl loope dec popf mov mov pop sub push test xchg js add sub leave jg sub inc (bad) and shrb rorb test into push sbb xchg mov inc movsb cmpsl dec icebp leave pop adcl xchg lods dec and lret aam adc test ret or lahf dec dec add cltd adcl sub sub rcr sbb mov gs mov xchg leave test (bad) mov dec cmp aad loopne mov push xor cli out mov push pop out pop jmp add loop xor sbb mov inc ja imull mov sahf loopne adc push ret lods (bad) (bad) or dec and xor and mov xor xchg daa adc mov push jp outsb pusha (bad) jmp sub sub sub popa xchg sub cmp sub shlb push outsb mov mov lea repz cmpsl aam jne sub fprem1 ss push movsb adc fwait test jmp (bad) push insl lock sub (bad) shr fstl insb sub movl sbb call xchg lock (bad) mov mov das jle out ja and in sub add cmc dec mov (bad) xor mov hlt dec and or or jmp inc sarl xor lods (bad) arpl jne leave adc push div xor xor arpl ljmp (bad) notl loopne movsb push lds in test jae test hlt xor sub cwtl leave dec (bad) test aaa sahf jb mov xor call data16 in (bad) lret out imul movsl imul setns pop dec clc mov inc shrl lahf leave call adc add mov (bad) (bad) jecxz xchg add mov int mov jnp out jnp aas push and pop pop push xchg or dec int3 jne inc popa mov repz xor sub push sub (bad) xor inc xchg xor inc mov adc jb and xchg pop sahf (bad) cmpsb pop xor jns imulb push int cmp dec mov (bad) mov jecxz jg aaa pusha movsl loop or loope inc cwtl addr16 lahf std xor popa and leave ja cs int movsl inc xor mov (bad) lcall insb pop shll fild lret mov xchg ljmp mov push insl dec roll mov mov hlt lahf add scas dec fiaddl push jo icebp scas inc leave aas dec lods xchg sbb lret ja out mov in push xchg fwait cmc mov rcrl adc mov xor dec adc imul dec les hlt in stos pop cmp aas adc shlb push dec cmp sub sub mov and test sub jo or popa fmul cmp sti fisubrl sbb mov jp cmp out xchg sub dec add lock cmp add in xor test jp lods mov xor out cmp xchg sbb outsl jbe cld adc in xchg movsl cmp sbb pop mov dec mov jge xor or sub ret outsl dec insb cwtl ds mov (bad) push fstps and das jns dec inc dec inc push fiadd sub test daa inc pop insb jge cmp mov in xchg push push push and stos sbb pop enter xor dec jge jbe push pop enter sub xlat cltd lret or pop xchg (bad) mov xor icebp xor add adc mov cld cmp (bad) mov add fwait xchg insb cmp and mov cmpxchg daa xchg jns adc shlb inc push int adcl stos leave dec rclb es pop or add jmp push pusha sysexit lock pop cmpsl inc lock sub and cmp xorl xor jmp inc dec mov movsb subb mov mov add xor dec dec in insb push jp subb data16 lret mov push sbb sarb ret sbb sbb fidivl dec or mov or fbstp or sub jle addl int jg xchg das cmp (bad) icebp fldenv (bad) xchg mov insb cwtl cmpsb jno call push sbb ja mov lahf lock push pop mov jo xchg dec xchg fmull popf out ret mov imul push mov push rcrl push mov xchg add sub sub or loop cmpsl daa lret or xchg fsubr ss jle push mov (bad) sub fistpll les mov push xchg jne fistp leave lds hlt xlat cmp sub dec ja jns push xchg (bad) out mov lock loope or cmc sub test push sti cmp pop jno mov dec repnz (bad) push ljmp stos addr16 lahf sarl (bad) out pop mov sbb cmp lods ss xor scas fucomi leave jae js into imul adc sub arpl rcrb clc sub ljmp inc add scas jns adc cmp sahf repz mov push ss pop leave adc sub fildl lods xor std dec push (bad) test xchg insb xor popf cmp ret or or mov repz jg push add ss into fimull ss dec or sub inc cld sub test and ficom xor jl aad stos mov lock sub sbb jb sub (bad) xor cs dec add pop dec jns daa cmp pop lods and sub (bad) aam sub push movsl adc dec subl lret sub into push js mov insl lods cmp ss loop jmpw pushf sub stos mov jae fs cmpsb sub (bad) push push mov fisubr out jl cmpsb or cld sub leave xor stos rcll fwait lahf sahf or jecxz jmp cmp pop (bad) not sub mov fs sub ljmp cs shlb jo xor mov (bad) jle bound mov mov pop sub pop loopne ss mov xlat sub enter sub call xlat repz push pop jg (bad) xchg ret inc loopne jmp cmp lods loope mov into imul adc xor leave mov daa lahf and or mov rol jge adc into mov pop cmc loope daa rolb dec xor (bad) dec jbe inc imul inc daa call test push int xchg test andb jnp ss pop call cmpsl negb cmp and pop popa fstps jo inc (bad) mov (bad) (bad) idivl push adc popa and cld jg,pt mov cmp xor int or (bad) fisttpll push mov pop (bad) xchg sub leave (bad) dec test in or lods sbb fidivl ret mov test mov fwait pusha dec int outsl loopne out inc sub test jle sub dec testl lds (bad) lock out xchg and in dec jge xor (bad) lcall daa cmpsl add and sub jecxz movsb sub and ror jbe dec leave adc pop mov into lock sub or cltd outsl and lahf and loopne ja mov push int3 inc mov jl cmpsl jl or loope (bad) int3 and insb sar push dec std je mov dec sbb cmp jecxz clc ds mov nop cmp (bad) and movsl inc jb sbbb scas popa (bad) daa loop js (bad) push mov ja negb cli shrb emms cwtl imul leave mov cs sbb cld fldenv push mov and cmp xchg sub mov test aam into jne adc pop mov cmpsb jbe sub test mov lahf xor sub aas mov (bad) addr16 cwtd adc out mov jg fsub sub push push mov ret and pop stos add or or add out xor arpl add pop pusha (bad) cld mov insl loopne inc mov hlt cs xor and adc scas cwtl out daa sub sti rclb call add sub mov fidivrl cs int inc fisubr mov add pop fisttp dec inc fcompl adc int stos in popf sub mov lcall mov movsb (bad) dec xchg pop inc mov arpl push xor pop jp xchg jo leave ret push cmpsb jnp or cs rclb dec daa mov in push ds push (bad) mov leave mov rol inc orl (bad) lock mov and xchg lret dec xchg xor mov sub mov lds leave jae insl cmp mov popf lds ljmp jle jl xor inc cmp inc lea pop inc push add cmpsb int push sahf push adc pop pop lods fldl ret and mov mov sbb dec push clc sbb and adc test movsl sahf mov lods adc inc ret cmp add cmp sbb pushf mov push pop lock push mov sti sub inc and lods in mov mov add cld sub sub and sahf jno sub jo or mov push nop test add ret (bad) lds mov enter cmp inc and and in test int3 fildl sbb dec sti cmp loop xor loopne inc gs cmpl lret push (bad) push inc ss mov add dec sub sub faddl pusha xchg iret sub add add or in sub pushf fs orl dec mov inc popa sub push adc xor and das test cli out mov mov sub mov cmp jb pop (bad) push mov push xchg sub or jle lret cmpsl inc lahf xor push mov mov rclb cmpsb inc imul xchg (bad) out jecxz adc adc sub xchg mov shrl mov cltd sub rcll test mov andl jmp dec sahf sub imul (bad) out sub hlt xchg xor cmp rclb push and or daa lods xchg pop std dec sub mov sbb xorl clc fnstcw or popa dec cmpsl cmp sub sbb movsl out fstps (bad) sbb sbb push and (bad) jno dec xchg pop scas sbb sti iret adc sbb pop aad xor sub insl lods pop lock sub cmpsl popa mov jge xor mov add incb cli in scas mov jnp imul enter sub pop mov icebp mov out pop lock push jo add (bad) cmp repz bnd jg data16 aam push mov into sub mov cwtl sub sbb and mov das sub shlw orb pusha insl popa in mov and cwtl fisubrl iret mov xor add push ret call push jmp test lds imul and shll ja (bad) enter mov arpl sub fisubr jne jp std ds dec mov cmp rcll adc cmpl mov adc adc sarb mov sbb add or dec cs hlt mov (bad) daa xlat fs xchg gs sbb and mov jle cmpsl push sbb adc inc cmp js hlt and jp cld stos inc sub pop repz mov sub mov sub cmp bound call ss jecxz leave push pushf cmpsl xchg int sti out test dec lds dec std outsb ret xchg pop or ja mov dec ja adc mov inc or leave fwait (bad) cmp adc aaa dec xchg test fsubs fidivl ja ficompl xor faddl or sbb adc fildll (bad) cli or cmp push (bad) jle mov lret and lods movsl aam xlat aam std daa call pop jo iret sub cmp xlat pop add or stos xor (bad) jo jo jnp out in fadd scas ljmp pop mov (bad) test sbb in push xor adc mul int jo jg adc sub out stc decb ljmp mov inc mov mov mov and (bad) and shrb mov ds inc inc inc mov mov jl test pushf and stos fsubrs pop or jo fisubl in (bad) loop pop push jno mull sbb xor ret and mov pop mov fcoms andl dec in test or xor rcrl push xchg jns repnz sbb push and xor push es jbe leave cmp shr out (bad) lret loopne xchg loope jp lods xchg mov cmpsl pop fcompl inc (bad) adc xor push test mov (bad) addr16 push push jno pop icebp test add sbb xor xchg bound and adc push test xor sti faddp jmp pop out loop (bad) lock jmp imul div cmc aaa cli cmp aaa dec adc subl lea cmpsl and add aas or orl sbb add jmp (bad) mov xor subl mov jmp cmpsl jl (bad) mov dec jl mov xchg or lds rcrb lods ss xchg sub sub repnz inc cwtl enter sub and sub jns jge sbbl cmp (bad) ljmp incb mov push sub add ja push pop push dec xchg push push inc insl or in mov and das (bad) mov jmp arpl lret adc push (bad) lret xchg mov mov pop les int3 movsl (bad) out xchg push and xchg push cld push push aas test in imul dec cmp data16 cmp sub roll daa imul mov lahf pop push clc jno sub or and data16 jmp lret pop test daa jmp out iret push rcrb jbe aas imul xor cli es and pop or ds in cmp int aam js ret mov andl sub sub mov fmull popa arpl dec movsb xchg mov enter shrl mov sub or pop scas lcall insl lock sbb loop ss mov mov adc jno les add xor mov and std out dec inc sbb dec xor call mov xchg jl add stc add leave test mov sub cmp das outsl xor cltd movsb movsl xor jecxz dec cmp in sbb out mov pop xor cli mov xor daa dec adc punpckhdq (bad) outsl scas lahf sub xlat out fild mov jp inc xchg stos add enter mov sub inc sub repnz xchg in inc in les decl cmp sub sub sub or jmp jmp outsl pop pushf sub (bad) add dec sbb push pop pop test add jge pop dec test mov push pop out loope ret mov pop sub sub inc jl jne sbb gs push sbb aas mov cmc movaps sub add mov sbb xor cmp mov sub pop paddsw and adc aad sbb inc sbb fadd lcall push mov push or sbb mov or push xor push mov pop or daa or pop jbe ljmp insb mov jp loop pop ja fidivl test push sbb add sbb push sbb sub stos sbb fwait pop and (bad) jle out sub ljmp ret loope fucomip mov lcall test enter div jmp mov mov push cmpsb (bad) push pusha mov pop je mov in cmp push sbb out sub lock push incl push push jl cmp jae jg push pusha push lahf enter xchg mov cmp push jbe mov push mov jb aaa icebp jge (bad) int test inc add inc leave andl hlt push pop pop pop cwtl and pop push addr16 cmp push mov xchg das or cld cmc lret aas mov stc lcall xchg cmpsl out xor pop push mov add cmp push ljmp lock xor data16 jmp sub push add inc xchg fldcw sub push (bad) pop inc jp push inc push adc out mov lret rol call xor (bad) in aam sub stos repnz adc (bad) hlt and xchg in iret jo loopne mov lock int gs sub iret sub fnstenv jne push int3 mov adc sub pop push pop cwtl cs dec in dec pop push or mov aam jp pop addr16 mov xchg stc inc push jnp in xor mov cwtl popf mov sub out inc mov jbe leave loop push std lock sub aaa mov scas aaa stos cmp (bad) inc pop cmpsl pop and xlat loopne es fmull in cs int inc and xor int3 rorl jnp sub leave pusha out cmp add cmp fistpll pop add les push mov dec out mov fsubl popf or and leave (bad) in mov adc icebp xchg hlt sub leave cmpsl (bad) into pop outsb movsb xchg jno arpl js inc mov fsubp xor dec push pop sti sub sub pop cmp and cli dec mov mov push dec clc jne sub cs clc imul js aam (bad) mov cvtpi2ps hlt dec les sbb xor ja cmpsb inc xchg sub xor (bad) mov push or fisttpl dec ds ss sub mov bound sbb lock nop movsl shll fnstcw loop push mov clc mov sub push not mov out xchg scas (bad) out pop stos sub add pusha adc test jns test sbb mov xchg cmp in fldt dec paddw sub cmp lcall shlb jo xlat sbb xchg ds imul je xor inc xor sbb mov push (bad) jmp call cmpsb movsb int3 push pop sub fwait jbe xlat loopne outsb jbe xor xor sub push add (bad) scas sbb out mov dec mov stos rcrb movsl adc pop fidivr cmp push cs or mov imul outsb add fld1 je mov push push outsl pusha test les pop or int aam loop mov cmp std (bad) fildll and cmp xorl and addr16 repz fimul push xchg xor or inc adcl aaa int stos mov mov push les sbb pusha leave clc inc into or push fmul inc fdiv lcall or xor inc xchg jb loopne test stos movl push mov mov clc dec in std lret lret daa or add xor dec dec cmp out daa iret fwait cltd mov or inc int xlat sbb push aad loope mov les int3 jl xor rorb cmpsb pop sub cmpsl mov ret test xchg scas xor ja aas jmp pop push jae out test lea jbe sub mov jnp dec out mov xchg shl xor pop js cs mov outsb hlt jbe sub stos loope sub stc pushf sahf (bad) xchg mov mov sub pop dec jne movsb out sub mov std sub dec push jmp int fwait lahf and stos mov dec dec fistpl add movsb pop adc out adc sarb data16 lret daa mov (bad) movsl and push je jne or movsb cs bound out daa adc das pop in xchg sub adc scas push xchg jecxz and (bad) cmpsb and add scas xchg rclb sbb (bad) sub (bad) cwtl mov jp out cmp insl nop mov sub movb sub lret sbb and cmpsl jb mov sub pop bnd sub loopne and sub les ja out sub dec mov xor push hlt mov out ss xor xchg xor jecxz pushf cmpsl test mov iret sub imul lret or sub fdivrl pop pop fdivs add and mov adc and popf mov scas ljmp movsb ret xor (bad) sbb xor repz jae inc or jns (bad) test xchg push mov clc pop inc in push cmpsl and shll pop jb dec addl sbb xor sub sbb leave add inc cs xchg xor popa mov data16 lea loop test in add pop ss push inc cmpb lock pushl rol cmpsl adc add pop outsb (bad) sub hlt cmp shll test dec sub loope test push out ss mov outsb mov in pusha mov cwtl or ja icebp add int stos fs sbb lods in incb inc xchg jns sbb pop nop adc push test ja add and add stc loop pop or bound xor pop std mov mov sub icebp push bnd ljmp add out stos out jns sub pop or push outsb in jecxz inc movsl (bad) mov lret jle push mov mov ss pop loopne mov mov inc ret xchg xchg aaa push adc scas sub cld movsl or and add sub rorb sar push inc outsl xor cmp jb mov sbb xor sub cli sub pop outsl les orl push adc movsl loop cmpsb imul cmp cs cmpsl mov cmc jmp or sbb sub jne jno xchg mov ljmp sbb pop xor pop leave and lea loop mov or inc clc sub dec lds cmc (bad) idivb xchg push out dec cs xchg sbb pop sub fcmovnb xchg lret cs mov jg fcomps pop xchg cmp ljmp testl dec jns sbb (bad) sbbb mov mov mov jo sub jp cmpsb xor xor xchg cmpsl lods aad cmpsl xchg xor mov scas xchg inc cltd or sub inc jne pop push mov cmp (bad) sbb fwait sub lods scas sub pop inc mov imul push loop sub js xor dec sub data16 dec pop sbb xorl sub out addr16 mov int imul (bad) lcall lea mov jno xor mull stc jo sub and cmp or ficomp icebp lret mov add dec xor in add in inc mov clc sub adc mov sub loopne scas xor push ss cs sbb fisubrl int mov sub fsubr push cmpsb aam test insl jge (bad) (bad) mov andps mov or subl fneni(8087 inc mov cs (bad) mov adc sub inc (bad) call fnstsw or pop nop ds sbb cmp out sbb pop fmul icebp dec jl and and push push adc pusha divb jno pop outsb jmp bound fstps sub jnp pop sahf sub cmp xor jno movsb in or fisubrl add mov pusha outsb sbb lret decl inc or sub sarl push xor xchg stc lods or sub in pop xchg scas push sub adc push popf dec fdivl mov push ret addr16 push jge push (bad) sub pop cwtl or pop push xchg sub out dec outsl hlt dec lahf int3 jb sub mov or pop cmp sbb dec or pop daa push or add or xchg mov dec adc lahf sahf xor xchg (bad) jbe pop pop dec cmpb cmp lret adc pop ret pop in icebp mov cmpsb jo sti mov cs test cwtl scas fucom xadd mov (bad) mov sarb jae jp jge in mov sub fisttpll subb push rclb shrb or dec sti iret cmp jb punpckhbw push add pop ret inc sub stos and in mov outsb or push push mov sbb out mov sub rorl (bad) jo imul sub in inc mov fcomps xchg add dec mov aaa lret sub int3 out loope sysexit xchg mov pop push sub loopne pop sub or mov into jbe sub inc out xor je rcrl dec jo test adc jl jbe mov add push xchg cmpsl adc int cli jl addr16 out jo inc lcall xlat insl add or jb sub test ficompl popa push ja sub pop push sbb inc jnp leave fs pop loope dec movsb and mov (bad) cmpsl push in cmpsl (bad) pop dec imul std repz data16 push jge pop xchg mov or leave fdivs sahf data16 (bad) sarl arpl aad repnz sub mov std aaa cmc inc daa (bad) (bad) mov (bad) add pop ror imul xchg adc test cs into in ds push ret out mov push (bad) jg push mov or mov sub fmull mov or mov push pop push cmp out and cmpsl int cld stos popa xor push enter xor pop xor xchg push and jb es adc movl ss push pop sub cmp leave pop mov sub push (bad) and int adc jg mov xchg das dec cli push sub push fyl2x cmp add ljmp and sub and or mov cs into sub out stos inc mov test int3 jae sub mov out sub (bad) or divb aam dec ficompl test lods adc das mov pop test add ss xchg inc shrl mov add popf inc test (bad) xchg (bad) xchg sub jmp js,pn add shrl lcall sub adc mov xchg jp,pn push pop jle push paddq mov into xor mov add mov lret je mov not sub lret sbb sti shrb ret mov daa fldcw pop hlt xor xchg push sbb cmpsl push test icebp sub (bad) aad movsl movb mov sub jns cltd sub adc outsb xchg xor fisttpll jmp sub cld mov push cmpsb and push and fisttpll fsubr xchg cs lcall lods sub in subl xchg into inc mov push ret sub cmp ds arpl pop mov sbb lret mov leave sub das inc arpl sub or pop repnz ds add scas add inc mov sub icebp jmp sub mov dec add mov and push jb popa jbe fidiv rolb sub repz xchg out pop fwait sub movzbl mov (bad) sbb push (bad) sub movl movb pop jmp or jne sub mov pop fnstenv aas cwtl (bad) mov xor sub stos push (bad) pop pop test mov jb jecxz out xlat sub mov fisubrl das mov cmp xlat and jnp push sar cmp lcall test and movsb sbb jl mov and and jmp rolb cs inc adc dec mov cmp inc dec daa mov and mov jmp daa and ret xor cld cs nop xor test dec mov xor push cmc (bad) fwait imul dec mov or (bad) mov out mov leave sbb jbe push mov in adc addr16 ds loop cld (bad) cmp jo cwtl daa pop test divb jbe dec scas inc lcall pop jno dec push enter loop adc sub xor mov mov fisubrl xor data16 inc mov and add daa test sub sahf sub lcall push cmpsl (bad) fiaddl aas sub jae mov inc add fnstenv jp sub jns mov fistp lea inc push aam and sub push dec aas int xchg dec clc aam mov das outsb in add jbe in or push sarl fmull inc int mov adc dec mov pop and mov xlat iret mov imul push xchg sbb pusha sbb mov push push imull or or inc (bad) dec xchg mov aaa ljmp negb rorl inc sbb xor adc push mov xchg pushl push adc pop xor js add mov sarb (bad) scas sub cwtl (bad) insl popf add push push sub mov pop inc out scas dec rorb rcl xchg lea ja dec mov xor xchg rorb sub adc cld lds clc sahf test int mov mov addr16 and cmpsl pop add leave leave adc out aas in repnz rcll lds leave (bad) xchg sbb push test push push out or leave (bad) in cmp iret inc cmp xor enter (bad) jno dec mov and jnp add add mov and inc test test into or add mov mov sbb inc call dec push mov sahf cmp lret or add jge int mov fadds jmp dec push out data16 push clc fnstcw mov xor pop sbb out into flds iret cli ds fwait push ja sub mov test push jb fidivr pop test mov jle sub cmc dec (bad) mov add cltd or push push jle fstps mov (bad) out (bad) xor jb pushf sub cmc push xchg jge and add nop add sub cmpsl sub imull stc sarl push fild jle,pt xor les or mov push mov sub aaa add mov inc into sti cmp inc sub mov mov cmp or call sub out pushf dec mov test mov xchg mov jg imul stos (bad) mov inc sbb test fisttpl jmp out int push ss xor lea inc call movsb cmpsb test in dec or push xchg mov inc and (bad) shufps ret sti mov add bound int daa sbb loopne (bad) loop xchg sbbl adc inc jecxz cmp mull fild pop pop out ds sub adc or dec jb dec and popf fldcw inc lahf cltd lods loope mov fs fwait mov jg cli push cmp js fdiv data16 leave lret dec sub cmp iret dec div sub adc and push leave fidivr jg sub mov stos (bad) sub scas not (bad) jl push lea xchg lea lods and leave mov xlat pop bound dec inc ljmp pop jp pop add sub call iret jbe pop jno mov test push jae inc (bad) jno insl sub hlt push fcomi cmpsb pop cld (bad) cmc mov sub sub aad je iret aam repz pop (bad) cwtl fcoms test divl sbbl dec lods inc (bad) inc dec enter add push cmc and test icebp jb es mov (bad) or fsubr popf je xchg add data16 int mov into (bad) in fbld push ds xlat jb data16 push xor mov jbe ret sub or sub imulb jns inc mov mov sub lret cli lock adc sub ds inc repz dec mov push jae je mov and sub inc imul aad jmp sub das (bad) ss divl sbb popf sub pop insb jno (bad) ret xchg shl add mov push mov jo sub add leave jl cmp mov push mov inc add rclb mov or (bad) lcall sub push dec or outsl inc (bad) ja test leave (bad) mov push mov sbb test nopl push xor push outsb mov int push xor adc das and mov sub aam jge jl (bad) mov test ss repnz adc push push pop dec jnp ds dec xchg add loopne int and adc gs add out dec or loop sub stos push jb sub mov iret push ja mov push adc mov sub mov xchg push cs add cmp out cmp dec pop mov mov scas and jle pop cltd ds jns leave (bad) or or test lret shrb in sbb xlat mov xor mov xor sub hlt push mov xlat pusha out jmp jge mov cmpsb jnp addr16 mov dec data16 outsl (bad) push mov mov mov xchg jle xchg push (bad) dec (bad) jne lret jle push stc cli push hlt pushf adc outsb xor add ss dec enter je in add out cmc (bad) negb jns (bad) pop or xor xor add jbe cmpsl dec sbb test adc cs insl (bad) cmp test mov pop daa sub and sub imul sbb das fisubr je jnp sbb jecxz jmp pop sub and mov push mov mov dec std out (bad) movsb es sbb fisubrl add sub mov (bad) jo rolb push test sub std dec mov nop in in (bad) xor sbb and mov push fadds inc mov comiss test and push arpl fs movlhps rcll icebp xor (bad) (bad) clc (bad) jbe jg jp cmpsb in and xchg xchg stc mov jl gs pop cmpsl cld add add mov roll mov test sbb mov data16 mov adc imul dec sub cmpsb jecxz out int xchg iret in cmpsb ret int daa or cmp fisttpl std adc (bad) cwtl push popa xacquire enter jns dec sbb jae adc inc pop fisubr (bad) stos repnz nop mov xor outsl leave sub (bad) mov xor out lds and es cwtl jno cmp jmp inc xchg daa out loopne leave loop pop mov fucomi cld cmpl and out sbb xchg leave jns cmpl sub sbb xchg sahf sbb mov arpl adc xchg dec jno loopne ss mov xchg les cmpsl int pusha push and cli not lods inc out cmpsb js ret and out push roll in pop int mov mov jns pop stos mov sub (bad) stc jb dec sbb jb push popa mov push ljmp (bad) cs hlt cmp and rcrl int sbb xchg inc sti les data16 fdivs fstpl nop repnz xchg xchg in arpl movsb stc into dec out mov jo or aad mov sub insb int cmpsb mov xchg sbb popl push addr16 daa sub mov bound ffreep dec inc outsb lods pop movsl jb imul bound int push out cmp lock sar cmpsl jns mov mov push movl aam xchg push int pop cmpsb (bad) repz sbb mov test imul loopne bound cmp hlt add dec cmpsb xor xor pop cwtl js sbb xor cmp leave loope scas (bad) push aaa (bad) sub cli lds add mov cmp push (bad) mov (bad) push insl xorl je cld ljmp sarb dec adc imul call sub jecxz cmpsb xor ret adc in inc in cmp add and adc mov jp pop dec js dec sub int or ds pusha dec and jg or or (bad) or pop int3 mov loop ds dec rolb mov push idiv jecxz aad or mov sbb dec test (bad) jecxz mov cwtl sbb sbb outsl lods cmp stc ss push loopne sub in xor adc mov dec loopne aas jp cmp insl xchg push mov outsl outsl cwtl clc inc adc push (bad) (bad) cs arpl add jbe je and push pop xor jecxz leave mov pop scas cmpsb xchg push push std int push push jmp xchg xor lret leave iret lods jbe adc jnp adc mov xor pop int mov leave or sub lret inc (bad) mov inc scas in je dec sub mov fwait xor pop ds pop dec test fcoml sbb call push cli adc into (bad) cmc adc xor test pop popa sub push cltd cmp mov int ljmp out sub sbb xchg addr16 jp xchg xchg dec sti hlt (bad) push repnz xlat je cmpsl jp sbb jnp lret add clc out push ja push out and ret popa mov movb arpl xor cmp cmpsb sahf daa pusha push mov push leave or adc mov fucomp push outsl and jne lock scas (bad) cwtl inc push ficoml test adc xchg cmp sub and movsl in sarl add enter sti xchg push ja sub sub das sbb jg pushf test ss outsb pop pop (bad) and and mov and mov push sub jb pop or push clc sub (bad) jbe add or rclb sub jne mov or cli sbb movsl and mov (bad) (bad) imul xchg jp dec jne sub aam dec dec add push xchg lods pushf fadd add or mov mov fstps push pushf das inc inc push ret out out sahf sub popa add test sbb popf les mov nop xchg mov xchg movb cmpsl push icebp sub in aam dec call jne inc int mov (bad) or test sub cli int3 mov push pop sub push jp sti cwtl das outsl jmp xor inc dec fucomi dec mov ja cmp cmp jns sub das loop jmp insl mov arpl push sbb jo test cltd ljmp test push test sub bound jg dec repnz dec sub scas lret and mov sub or jbe lahf lcall rcll sub in fcmovu (bad) test mov cmp inc fadd cmpb aam sub sub cmp shlb out in ficomp adc lret mov sub mov clc iret sub lcall add cs xchg cmp xchg icebp fwait stos sti lret or sub cs imul push jo add mov sub orb and adc bound int3 (bad) and cmp fsubrl cltd xchg mov push (bad) sub cs sti push lods push in cltd xor or daa das and xchg dec jnp ss cld iret sub jno sub push mov mov int3 cmc pop mov ret xor les frstor repz in shr mov and add (bad) mov mov or sub jp sub pushf xor bound push aas jecxz sbb (bad) mull cmp add or gs es scas mov sub subl and aam push or mov mov sub loop icebp fsubrs jge into cmp imul sub rcl (bad) data16 adc mov push fiadd xchg cmpsb test jb loope pop popf adc daa pusha fcomi popa sub gs fucomp test add dec orl sbb xor cmp push mov mov push or add pop repz jnp iret or ss push divb loop xchg lock or push push or addr16 in inc arpl test adc xlat movsl aas sbb xor dec movsb icebp cmp lea sub mov sub dec sub xchg jnp dec cmp pusha or cmp sub mov dec (bad) jnp cmp xor push shrb jnp jne inc push inc mov sbb pop ret mov cmp ds int aaa es or bound aad subl mov add pop push outsl in push daa jae push sub cmp pop adc adc leave ret xchg cmp cwtl andl or neg rcrl sub xchg repz sub sub sub mov in jle or out andl pusha les insl inc push inc add xchg leave push sub test test arpl push jecxz xor daa push leave add jns cmpsb (bad) js rcrb mov js daa push xchg add test cli jecxz pop jp xchg adc xor cmpsl leave aas das mov iret fisubl call mov mov loop test push nop or sub push mov inc sbb and and outsb push lahf mov or mov test mov sub adc sbb mov aas inc pop jmp adc shrl mov scas test dec lods sub xchg call push sub cmp gs lock mov xor sub ja adc inc lods mov fisub lock dec jecxz xchg jnp (bad) (bad) test ds cmp imul dec cmp sub and data16 test imul rorb pop sub sub leave add add pop jle imul jno clc cmpsl lds ss repz inc or or loopne dec shrl incb (bad) sub sub or sar or push and lods sbb adc sub arpl aad and cltd dec mov pop jo xor out fildl loopne push stc inc out sub popa pop ljmp and aas xchg or in das rclb (bad) jnp sbb clc dec push sub push jmp xor cli push fsubrs jo adc mov cmc cs sub lret iret push arpl and cwtl popf icebp cmp sub dec mov mov add and sub loop xor jno xchg cs and xchg in scas sub mov add mov push adc in je adc push into test adc divl sub and cmpsb pop push sub leave xor lds dec sub xor inc iret pop aam popa mov mov cmp mov inc xchg xor dec sbb xchg inc fisttp jne (bad) mov aas dec xchg push mov mov aam or sti sub repz and mov sub and mov push sub inc (bad) stc fiaddl cmp mov push add dec mov sahf lds and les sarb xchg mov fldcw or push jbe adc fiaddl add dec or dec fldl (bad) scas loope pop imulb es xchg cwtl xor mov stos pop mov cmp fsubrs xor push rcrl pmaddwd fsubrl jo jnp mov sub push shl lcall sbb cwtl jl or ljmp cmp mov adc sub add fidivrl xlat out hlt pusha pop int3 cld xor adc cmp bound mov mov stos sub pop jo sbb mov inc cmp (bad) sbb jp ss out out cmp adcl add imul add out dec xchg sub es mov xor scas int3 (bad) cmp rcrb cmp out mov and jb das sarl inc xchg jbe test jbe cltd xor dec jg imul dec jge or sub (bad) ret enter (bad) or adc push aad leave insb mov cmp lea fsubrp cmp movb ds jg pop or addr16 mov aas cs adc or nop testl ljmp jbe mov xor push lock inc pop leave insl pop and add test fsubr icebp sub mov dec arpl sub pop inc cmp das addr16 xor imul fucomi cmpsl mov mov inc sbbl and xchg js dec nop cmp fprem1 mulb pop ret dec xor mov (bad) sub lret (bad) push jae cmp and int sti mov jg add or (bad) test in dec pop cmpsl call sub inc movsl xchg mov iret mov mov add cwtl in fwait js lock lods lcall mov jl into pop and shrb xchg imul cmp mov or mov push push add or mov inc jns in xchg xor (bad) pop sub cmp pop xor es mov pop arpl lret dec in push cmpsl and jg mov cli cmp push inc pop inc imul dec std and xchg fcmovb xchg mov aam sbb movsb rclb js push cmpsb mov pop jl imul cld mov scas test jmp pusha imul hlt imulb add adc cmp push or lcall test push add (bad) repnz out sub outsl out and and push imul lock fwait xchg add loop bound xor sbb mov sub repz sbb cmp push pop sbb andb adc clc push pop pop std xor sbb mov jb outsl mov jae mov int mov jae push sub or jle rol in (bad) jns mov arpl push xchg pop out mov lea push sub pushaw test push fdivrs dec jnp popf aaa in push sub stc push sbb jg and dec mov (bad) sub int jo aaa leave je mov outsb adc int sbb (bad) popf xchg adc imul (bad) mov (bad) fldenv cli sub pop xchg xlat wrmsr xchg add lret fwait mov sahf int jmp push push push sub dec (bad) ss push ficomp mov xchg cmp fcomps aaa dec sub pusha cwtl (bad) push xlat arpl lds jmp cmp and sahf xchg div mov sub rcr int3 (bad) cmp cwtl or push xor in dec rorb sar and outsl xchg sub je ds loop dec xchg cmpsl dec push cwtl data16 (bad) adc outsb fcmove lret aaa xor mov add fist int3 jecxz sub notb pop inc or pop sbb inc jecxz daa adc push loopne mov aas (bad) and data16 sub cltd xchg cmc sub or dec sub or adc fwait sub cmp mov ret pushf out jno cltd (bad) ljmp push adc dec mov test cmpsb je pop cmp and push dec outsl jns mov inc imul (bad) hlt cmp jge aam and mov mov (bad) dec jbe push xchg je or jecxz mov sbb add adc mov sar std sub push icebp fcomps pop out xchg sub pop pushf jno dec jne lcall rcrl inc sub in and aaa push pop and or jg lahf loop sub push sub sbb dec scas cli adc pop addr16 push test push pop in (bad) mov imul dec ss cltd sub into outsl fisubl js cwtl sub sub mov hlt pop add ss adc mov jae bound lock jecxz les xchg mov dec add rcl mov mov fdiv (bad) push xor in sub jecxz inc sub push dec imull sbb bound pop je das test or xchg jmp sub add xchg mov fidiv pushf loop pop push push mov sub fiaddl loop pop insl loop outsb mov sub xchg add andb movsb and jmp addr16 sti inc test icebp cmpsb add cmpsl sub in ficomp (bad) notl std dec mov pop sub add sub insb cmp add ret mov fstps or add cltd repnz lds jle mov mov adc sti sub sub sub testb sub out xlat clc aam mov mov push jbe xchg arpl mov cmp pop fnop add js lods leave cmpsl mov xchg or inc xchg cld outsl lods sub push jge mov push jmp adc sub mov adc inc mov sub icebp pop xchg movsb ss pop sub cwtl stc (bad) push aaa mov call mov ljmp (bad) mov nop out sub or repz insb lcall adc sub xchg and out xchg jmp rcrl pop cmpsb and lds lcall and rol jns sub int3 or jbe adc ljmp mov dec push fsubl cmp shl sti cmp fadd repz sarl lds arpl cmp pusha inc out (bad) mov setnp (bad) shr jg mov xchg test mov fwait cmpsl pusha and or xchg adc out pop cmp mov jl lock add adc das jg sbb lods sub sbb test leave mov sub dec lods fldenv lock mov (bad) jg fwait sarl das out std jp jle int lods mov shrb inc call popa mov fpatan fdivl fisubrl push mov jp jmp add lds lods ljmp rcrb mov adc insb xor push inc push mov jmp add sti aas inc pop enter sub add dec repnz incl or dec sub xor mov xor mov xlat push jo mov inc jne fidivrl leave test cld lret sahf add and addl or push sub ss rol addb xor push icebp add or out decb xchg dec lods sub shr xor jbe inc (bad) xchg push xrstor sbb xchg dec mov push sub and shll sub inc xchg aad or push push push xchg sub lds jecxz leave or cmp adc sbb stc inc sub stc cli mov pop inc ja test push (bad) orb or sub fisubr adc mov in jmp fsubrp repz mov add sub inc xchg push scas loop jae sub cmp dec bnd sub mov mov add sub xor outsl mov fcmovnbe xchg sub bound mov (bad) inc ss xor aam call or ljmp sahf or sub xor mov push mov testb popf dec pop mov sub jnp or fucomi pop mov inc xor cmp das (bad) (bad) das lock stc test push adc jle jb fbld dec test sub dec (bad) inc out cmp js sub les cmpsl sub jl xchg int movsl (bad) sub pop sub xchg pushf lock (bad) in stc sbb fs cld cmp sti inc arpl adc (bad) xchg push inc or mov jae add fwait and js mov ja push test jp dec stos sub sub lods stc push mov xchg push call std sub sbb sbb mov stos stc (bad) or loop add dec adc mov shrb cmp pop or xor movsl sub lds sti mov cmp (bad) sahf xor and adc loop mov push es push fisubr cmp inc xlat movsl cmp cmp movsl (bad) adc mov dec aad out mov cli xchg sub adc mov jbe xchg inc and pushf scas xchg push dec ret or sub sti push push int3 (bad) jne mov mov test push mov inc stc cs xchg lcall inc xor mov shrb add mov cs inc mov ds mulb mov or dec jbe sub jge insb xchg out adc das pop jo stos lods aam and xor fwait (bad) (bad) dec jb leave lret sahf sub popf iret stos mov or nop (bad) loop (bad) sub fcom lds lret xchg aad mov inc and sub das xor es clc push sub pop push sbb add daa fs lcall add push decb add rclb or stos inc jb enter sbb test arpl popf (bad) and inc inc push mov in cmpsl or aam fstpt subl in add sub xchg xor sub lcall lock daa stos inc test jle xchg and mov xchg mov loopne jge out imul faddl aad cmpsl movsb and mov sub in push bound mov dec xlat xchg cmpsl outsl repz or jbe mov sub add (bad) sub int3 pop fs outsb stc cmp cmpsl add push sub loopne dec stos mov push (bad) mov dec mov add push sahf jecxz repnz inc ret enter mov push mov hlt xor sub or (bad) push stos pop mov add xlat inc out callw fimul insb dec add outsb cltd fbstp adc inc sub (bad) sub cld push mov loopw out test add sub xchg addl lods outsb fldt movb mov sub xor cmp ret daa (bad) cs xchg popa push xor cmpsl (bad) push js cmpsl (bad) aaa xchg hlt nop outsl stos sub or movsb mov push outsb fnsave fildll out mov nop (bad) jb pop jg push (bad) int jns xor outsb sub lods mov out xchg pop or imul scas fimull jns pop pushf test leave xchg cmp ss mov pop cmpsl sub push xor jb mov jns fwait ljmp xor or xor inc loop aas stos add popf imul fcmovu xor repz sub mov cld xor add sub mov mov or push push jbe outsl sub sub push aaa push pop jno adc sub jmp pop je clc fidivrl inc sbb xchg sub repnz lahf repz jns xor dec or mov cmpsb and cmp mov sub mov push pop and popa bndldx sub test (bad) mov push gs xor lods sub mov jnp shrl sahf mov pusha adc add aad sub dec sub notl into mov out xchg sahf pop mov xor cmc sub and in fistpll pop inc or rolb mov lret jl xchg mov fwait imul outsb outsl push (bad) insl loopne adc das sub clc fldl dec test and sub push stc cli jp mov lds xor or mov mov leave ficom pop sub xor je out imul not pop hlt (bad) mov scas sub ljmp loopne (bad) fistp rorl mov cs xchg mov or sub mov mov out fmuls jne mov call mov or popf xor ljmp mov aaa ja fstpl decb outsl scas xchg sub add pop addl or loopne dec or sbb ss add rorb or mov push ljmp or cs stos jmp mov cmp ret lea pop lods jb push notb jnp jge mov test mov jl nop sahf sbb add or pop fldenv arpl notl sub test cwtl scas inc shlb jecxz leave sub push cmc xor cwtl mov sub mov push cld out cli daa mov add int dec gs or push xchg inc cli fimull inc paddusw xchg out xor cwtl sub fisttpll cmovns addr16 int bound dec mov adc xchg push push pushf insb jge stc mov sub popl mov (bad) cmpsb cmpsl data16 fidivrl adc mov (bad) jo or enter xchg lods (bad) adc add xchg xchg mov dec cmp mov std into packsswb or (bad) jnp or or repnz (bad) mov push (bad) movsl mov sub pop (bad) repz and push jb sub push fiadd mov cmp adc xchg ficoml mov add insl bound jb lods sahf push and mov sbb and arpl lcall cwtl mov pop push add iret jl dec (bad) xor paddb pop pusha inc cs jl push cmp imul fist pushf loopne cmpsl sahf sarl inc out repz cmp xor sub mov aas mov mov jno pop jbe sub push js inc push xor in cmp shrl sbb outsl push jns sub xchg lret out in xchg push xlat jae repz xchg popa in cld sub jg bound mov add sbb cmp sbb jb aaa (bad) in fist sbb mov pop bnd adc xor in mov adc push dec and push push push xor daa jg jg (bad) jmp test ljmp mov insl ret jmp scas arpl icebp fxch dec or jbe push xchg test push cmc loop mov ds jno or inc adc cmp or in adc jge xlat rcrl push dec pop mov xor or daa cmp mov xchg enter adc ret inc (bad) or mov mov jl adc push imul jbe int or aam fwait dec mov int icebp sbb aad icebp movl mov fmul imul mov test mov movsl out test loop movsb mov aas cmp aaa (bad) push adc lods pop or fdivrp ss cli dec pop pop fldt (bad) loop and adc icebp loope adc jg or (bad) icebp sbb das out scas sub sub dec aaa fs (bad) inc mov sbb movsb pop test sahf les pushf mov imull iret add or and mov adc popf (bad) leave repnz les xchg ss jno loop cmpsb add sub test outsl (bad) and (bad) aas adc test (bad) sti pop addr16 xchg sti cmpsb jns push test (bad) jo push test int push ja shr popf xor dec lock lods insl xor icebp ja cmp lods movsl fldenv es or (bad) mov (bad) int push test sahf add ja jns addr16 mov sarb leave adc je cmp and loope dec out inc jo sub inc sub push adc cmpsl push adc sti jmp shl mov fwait cmp imul xchg jb dec inc daa (bad) mov (bad) cmp hlt inc mov es jne int imul ljmp aad inc int3 jge aaa cmp test cs aas sub imul stos (bad) test jmp xchg aaa ds cltd mov enter or movsb mov fstl imul mov sar mov push add dec call mov sub mov mov lods insb jg push mov sub clc es pop and mov sub dec cmpsb pop mov jb cmp and sub mov (bad) dec cmpsb xchg rorb dec or fdivrs rclb mov bound mov pusha push sub or cmpsl cmovg sub cmp pop ds jb mov cmp sub imul sub push jae js pop add inc ds mov jecxz lcall mov inc movsb sbb dec xchg outsl adc push call test enter pop sbb jns jae (bad) cmp jp scas cmp (bad) pop popf stos int mov sub insl xor iret (bad) icebp (bad) add sub add sti bound cs lea pop adc pop adc mov insl mov cmovl add push sub or int3 std sub mov cmp sub aas jp (bad) mov sub mov adc sub bound sub xchg sarl movsb push sub xchg and sub mov fcmovu pop bound push data16 mov and lsl push jns pop xor loope es sahf out ficompl mov sbb cld call inc add add jecxz fsts xchg stc xor push pop sub repnz das pushf icebp inc mov xor cmp cld pop mov mov jp or jmp sbb mov outsb cmp mov xchg pop sub dec std and sub not movsb fsubr leave cltd push or xchg test xor cmpsb mov add (bad) pop sub dec subb or and cmp out int pop or mov test test les mov popf jno jl es (bad) cmp add and es xor pop ret sub or push jg push shrl lods cltd ficomp mov mov sub jp xchg imul push sub pop inc hlt push rcl mov js inc pusha inc jo or mov mov shll sbb adc inc ror pop xor test jge add inc or test inc push ja iret jne dec in call xchg insl push pop or imulb repnz mov sbb push int3 mov mov adc aas lret sub outsl sbb add in jnp or rorb adc addr16 loope pushf imul int and adc xor ds inc aaa inc mov fimul out push sub mov sbb pushf mov xor (bad) (bad) mov arpl push out mov xlat dec cld mov add idivl insl lret nop popa push inc cmp xor fxch ret test (bad) add dec (bad) cmc inc fsts scas adc scas xchg divl push push cmc mov add add out jp (bad) jg xor sarl stc ss (bad) call pop pop adc fwait lea pop sub pop nop sub adc pop icebp movsl mov mov mov mov dec push sub pop pushf lods xchg fidivrl sub cwtl fidivrl mov mov jno sub lds mov jb xchg pop mov (bad) notl (bad) mov ror in call mov pop (bad) mov std int push lcall or inc pop call add setnp push inc je cmpsl out inc imul push (bad) int pop es xchg mov lahf and mov movsl je shrb add pop pop cld test xor dec movsl sub push push mov (bad) jnp jne mov jge,pt int fwait (bad) fsubrl push fistl je scas pop pop mov (bad) jb dec cwtl addr16 xor js movsb addr16 cs outsb insb (bad) int fist insb pusha test loop and sub std dec and sti sub and fildll dec add lahf movsb sub cmpsl lock dec in adc test out xchg cli insl cltd test cwtl lret push sbb lea jo fsubrs sub dec subl add js fs inc (bad) ret sub pushf inc dec xor and mov (bad) pop and sbb fcomps add movups xor pop and inc shll cmpsb add (bad) sub ljmp (bad) adc cld sub xor inc repnz cs shr cmp jbe sub lock movsb pop jge sub mov xchg (bad) loope cmp and lods ret loope fsubs and adcl js outsl sarl daa popf jge adc stc sub mov inc das sub push jecxz sub and push js insl testb adc fildll xlat clc shlb loope mov dec in sub shlb stc movsl sub inc lret push adc sub fisttpll dec mov cmp mov je xchg sub sub mov mov enter ds push sub out pop cmp xor test andl dec mov sub cs insb jnp xorl push data16 adc cmp add arpl mov adc movsl push sub ret sub lods (bad) out mov sub xchg ret dec lock ss scas lcall fnstenv loop lcall int3 jl int xchg scas and mov popf xor in jnp lods (bad) dec lcall xchg cld loopne sub insb mov (bad) movsb inc sbb into std dec lret cmp xor or xor push and cwtl mov int3 (bad) out pop sub loope dec inc je dec sub lcall push jmp sbb dec cmp es subl fmuls xor orl or ret jp ljmp in sub or mov repz out xor int lret scas pop jmp push bound popa mov jl pop dec sub in xor mov fwait dec in jbe jae (bad) (bad) xchg mov test push sub jmp ret or (bad) inc leave push jns or inc sub leave popf fcoml dec and inc add mov add cmp pop (bad) jecxz push xchg or into pop leave fmul into mov addr16 cwtl add adc dec push jbe out adc sbb scas sub bound sub std push lods lcall adc xchg or sub scas lahf add sbb roll mov (bad) mov dec jae push pop imul mov int3 cli aaa sub pop xor mov sbb sub cmc mov icebp mov cmp lods (bad) mov push sub icebp inc dec pop add adc cmpsb test data16 jl int3 or add sbb lret xor add mov mov sbb mov enter subps xor cmpb and sub inc cwtl dec jg add jmp push cmp loope fsubrl rorb dec xchg cmc out (bad) cmp pop std and jnp inc addr16 (bad) int fnstenv shr pop inc insl push (bad) lahf idivl cmp mov push add rcrl cmp stos dec and dec pop out fimull ret stc cmp xor push xor es push add adc sub inc xchg inc xor inc dec popa (bad) mov push jecxz sbb mov cmp rorb sub mov push pop xchg jb call push rcr in xchg jno mov xor gs jb arpl shrl mov popf adc mov ljmp aas ds iret fsubrl sub fstpl outsl pop sub popf pop jb call test inc rcl and subl push mov out hlt pushf mov lock cltd push ds push fidivr sub stos ljmp mov mov mov sbb aad sub pop sub sub ds jp (bad) movsl test sub adc popf jb out pop xchg iret sub add add xchg popf xchg (bad) push add dec in inc xchg sbb sub mov and sarl ss add and movsb sub aaa ja and out sub adc ss jne sub incl repnz sub mov push inc imul lds (bad) cmp push (bad) cmc dec je add xchg sub cmp sub hlt lds mov bound clc jle ja shrb test sub pop xor jge fwait mov cmp sahf mov dec sahf aad and leave fidivrl test xor in cmpsb jb ja arpl (bad) loope or mov jmp mov push cmpsb cs push fsubrl iret test pusha inc add add je dec int imul leave mov (bad) pop push dec sbb inc inc push jge jp cmp dec cmp or cmc aas jbe das shrl dec ljmp dec xchg cmpsl mov int dec jb (bad) sub ljmp inc xor test fnstenv cmpsb lds out js pop xor scas repz adc inc out (bad) leave mov mov xchg pop orl inc mov jl scas (bad) mov adc dec inc fwait aas jl int mov push int3 xchg lret enter or test mov dec (bad) mov repnz push iret cmpsl pop mov popa xchg cwtl in xor and xor pop adc repnz andl mov fcmovnb mov cmp mov test cmp push clc sarb leave mov loopne les sbb nop leave gs mov jns (bad) pop push sub dec das adc sbb hlt xlat mov sub dec jl xor daa and fwait sub dec xchg mov shrb mov cltd cmp mov push divb jp stc sub inc in les jne push xchg mov loop mov sub or flds sbb nop popa sub in or xor pcmpgtb sahf cmpsb out and std xchg lea xchg in dec mov orl xor lret repnz mov jmp (bad) jb push jecxz movsl insb popf pushf cltd jno sub cmp inc in roll jg xchg sbb dec (bad) lods cmp sub rcrb add rcr jno jge mov push or xor xor addr16 ja das lret sub popf or cmp dec pop xor stc inc test sub movsb iret out ss push arpl mov mov daa fwait xchg popf cmp fdiv fsubs lods lret cs fldcw or cmp stos and xchg sub and in in ffree mov ja loope sub jnp dec das sbb sub mov mov mov jbe pminsw aad iret jge dec fsubrs add adc adc pop std jg bound add add inc and cvtpi2ps das fild dec add roll or sbb (bad) fwait xor stc lcall lock mov lds mov dec leave fidivl sub shll das pop xlat push loop ss enter je loop dec sbbb sub sarb pop push and popa jbe ficom ja fmuls and add sub push out cld mov movsb dec test iret push mov lods call lods aaa fwait int mov enter adc dec pop repz pop jbe out cmp dec xor add inc movl jp and add aaa adc cs test sub cmp or add fdivrl sub insl lods mov inc push add aam fidiv sti cmc sbb ret add dec int3 jle sub and lds nop xor into movsl daa mov pop and xchg jb sub mov lods jp mov sub or cmp sub pusha call or cs mov das cmpsb insl lahf sub fidivl mov jb or adc jge inc sti xor cmp imul push cmc aad xchg jnp fsubp adc sbb imul sub push adc and push cmp dec cli bound data16 mov in hlt mov cmp imul mov or xor test jno dec add ja push mov icebp fidivl addr16 fnstenv sbb pop mulb fdivrl dec cmp test fmulp je bswap push cs stos aaa cwtl int inc mov push or sub dec mov push ds and popf jae out dec dec shll ds cli push sbb dec add fmull std outsb (bad) mov (bad) popa push cmp fdivrs cmpsb xchg addr16 outsb push jl inc pop ss int (bad) in int3 insl adc fimull fcom js or (bad) dec fs ret mov mov test es mov leave xchg mov mov subl cmp dec movsl and dec cmp jl shrb pop cmp cmp dec cli pop push ds lcall pop mov ror icebp call imul jmp inc dec int cmp fcompl sub push mov push or push insb jb jo inc out jge out mov pop xchg iret pop in sub addr16 sub adc insb loop add jp lcall sbb cmp jbe fdecstp ss out dec sti dec or loope scas sbb fiaddl popf stos xchg xor sub in pushf sub sub sub dec (bad) mov pushf lods pop inc jns ja cmpsb sti shll cmp out sub or mov inc sub leave pop pusha nop push rcrb sub in adc xor xchg add ss mov stos dec out (bad) cmp and xchg push incb xchg cmpsl or sbb out subb roll jbe jl sub mov inc adc pushf sub cltd sbb xor outsw and faddl clc iret sub dec lcall mov int mov xor cmc jns xchg loope lret out mov lret je and js cmp nop ja dec push xor sbb repz cmp sub out and test xor sub repz fidiv enter leave daa and loopnew pop pop lret add jae sbb mov testl inc out or mov bound sar into pop in cs fsubr mov inc orb lret dec scas sbb repnz (bad) outsb pop mov push stos and push mov fwait and dec mov nop xchg sti fcmovnbe sub adc jge push mov out sub jnp push pop xchg mov (bad) cld jecxz subl jb pop (bad) enter (bad) jns cltd xor dec mov test ds lcall ret addl ss inc xor xor insb sub aad movsl xchg pop and sub xchg sbb flds cs (bad) fidivrl aas jne mov lds jle (bad) loop xor jo sbb sti push sub jecxz ss or ret inc std mov sub add aaa sub adc adc sbb or inc mov mov inc fldenv sub stc popa push test loope xor sarb push cmp xchg push pop aaa sbb insl xchg xor add jecxz push fcomip add mov andl xchg test xchg or adc test das mov sub les adc test mov cmp sub jl fcomi inc (bad) in push lret cwtl dec subl inc mov add sub cmp cs iret (bad) sub int mov js aas mov mov mov out lds jo xor cmp or cs in dec test lcall inc sahf jno call sub push ja cwtl in and or (bad) repnz sarl xor cmc push test (bad) mov jbe jecxz,pn jg repz adc add outsl data16 pop mov ret xchg dec fimull cmp out pop fwait test push std pop or ljmp lock push enter xor push mov jne test and sub in pusha mov mov mov push es loopne stos (bad) lahf hlt xchg sub xchg in popa aaa mov cmp adc xchg cltd xchg and mov pop or test outsb sub arpl xor es dec adc mov jmp int fucomi sub jl bound and xor cmp (bad) dec ja sub mov mov or sub outsl ret out adc sub inc cmp and xchg inc test sub mov arpl jae js pop push pushf sub pop ss ror add fcmove xchg out xchg es adc je inc xor sbb lods jl inc inc popa jl sub rorl xchg mov insl dec ss xchg arpl sbb xor push jae inc cli lods sbb sub sub decb pop addr16 pusha test or jl jmp (bad) sbb bound repnz xchg fs es lds (bad) sub mov dec (bad) xchg (bad) pop and cltd and sub imul pop enter xchg and sub cwtl imul into int sahf mov subl cmpsl mov mov scas sti daa sbb dec lea jbe push sub dec xor mov fistp xor into sub (bad) mov movsl sub jns adc sahf push je jg sub lcall mov mov inc inc mov rcl push rorb sbb pop push fcmovbe dec sub adc xchg jl imul out and lcall fsubs incl sub cmpsl pop faddl mov xor (bad) cmp enter fisttpl dec jcxz daa pop insl stos fistpll sbb (bad) lods icebp stos test shl mov push push sub notl xor test incl icebp sahf cmp pusha icebp xchg inc enter push fstpt iret ja push enter fs mov mov sub ljmp mov jo jl or sub outsl les ss loop imull bound daa mov ja mov aaa ss dec (bad) xchg xor js test push test sar sub mov mov nop xchg cs rclb not sub sub mov cmp jo cmp push xor and (bad) mov stc rcr in sub enter lret sub insl test rolb loop movsb (bad) clc push jp cmp mov sub imul lahf sub cld ret xor arpl (bad) and sub pop push jb mov sub and mov popf dec sub test sub cmp or imul push mov sbb push (bad) iret hlt sub ljmp ss fsub imul mov cs mov insl cli sub outsl pop bound adc ret inc fldt or jnp mov (bad) mov data16 push or sub cs jmp aam repz fimul lea mov movb jmp or mov aas sti sub daa xchg xlat cmp inc sub and in pop adc lcall das xchg mov inc test mov jb xor out das sub ds cltd ss lahf jge,pn les aaa mov test sub aaa (bad) lret bound pop jmp sub xchg sub fmul sbb orb xor enter int jne sub xor mov (bad) ss or push mov xor lods pop cmp inc jno es pop cli dec dec loopne mov std rolb xchg aas push sbb cwtl xor test (bad) hlt aad xchg sub dec inc jmp xor (bad) aam sub mov cld icebp dec sub mov test ret sbb or (bad) imul dec jg cmpsb and mov ret aaa and xor mov pushf or add clc jno hlt fstpl cs lret cwtl dec iret mov mov xor xor mov or mov cmpsl ljmp lea pushf adc mov leave fstpl xchg pop and mov mov lahf xchg add mov mov lea jecxz dec (bad) and aas dec mov out pop or cwtl mov sbb gs inc and int out test xchg jp mov addr16 dec in mov cmpsl push popa and jne xchg xorl in inc push lret daa mov leave in out and cmp cli mov and je mov mov mov aad add pop sub int lods testl push push add ss mov das (bad) jbe xor lahf sbbl and add cmp sbb enter mov int (bad) (bad) cmp push push ss jo test sub leave add ds sbb push adc icebp push xor xchg mov cltd in add mov adc add inc daa fildll cmpsl inc or xchg (bad) cmpsl leave fldt popf mov popa jns xchg sub (bad) adc arpl mov sbb sub and popa pop push lds mov cmp mov sub pop sub xorl loop jmp cmc push js jmp pop leave test cmp test arpl mov sahf mov or xchg insb sub lods popf dec add iret xor jno pop sub push fmull cltd push jbe cs inc adc and pushf inc (bad) (bad) (bad) cmp lea xchg loopne mov mov cli cltd or data16 xor int xchg cmpsl xlat jg xor jb movsb pop cmp mov sbb mov dec int ffreep sbb inc shr mov stc imul jo mov inc pop adc in fimull jns xchg imul cmp insl or jbe sbb sbb hlt pop (bad) mov clc and inc fmull mov cmp outsl test push int (bad) and (bad) ficomp es out sub adc inc pop jbe adc dec in or add aas scas pop and rorl into popf dec adc dec jns lahf rcrb jmp lock movsb adc gs cld loop cmp (bad) std mov pop fs daa fildll je push push mov dec clc sub stos cs inc (bad) idivb ss inc lds dec or push ss sbb sbb and test inc loope cmp xor movsl leave test shl mov popl dec adc xor pop (bad) sub adc fcoml (bad) dec fdivl pushf push xor leave int3 das jmp int3 mov mov int3 in into and repnz int pop mov lahf inc push test jg lcall push cld sub mov rcrl lock cwtl xor insl inc jne adc sahf mov xchg cltd mov and scas sbb pop sub and push rcll insb inc or sub xchg push xor cmp sbb xchg sub pop mov or xchg pop lret mov inc push outsl scas cmpsb test cmc mulb pop dec push inc sbb aad enter (bad) int3 add pop adc cmp ret (bad) jae adc call pop lahf mov cmpb or ja mov cmc jb sbb fs pop sub leave into bound mov int pop sub rorb (bad) enter (bad) mov icebp cs push mov xor lods fsubp mov cmpsl xor movl dec sub int3 sarl push pushf sub gs in enter clc xor sbb xchg popf stos xlat push in cmp sub lret fldenv cld xchg jbe (bad) jne cmpsb in and adc or call sahf mov mov mov adc push cmp negl mov popa in push lcall fsubp mov sub out loop sbb mov xchg cltd xor push or sub je in pop nop mov sub int3 sbb ljmp push ret sub sbb stos fcmovb or sub push xor out int3 outsb stos pop add mov push (bad) ljmp scas rolb mov jbe loop mov mov jo sub jmp lahf dec sub (bad) mov addr16 loop aas inc je push rcll xor int jmp (bad) push lds cmc jg outsl sbb jp dec inc mov sub scas mov aad xchg (bad) mov fwait or out adc arpl aaa or pop mov (bad) xor sbb pop ljmp scas in push jnp dec jne cmp jge sub push sti lock mov int mov sub dec dec icebp mov jbe inc mov mov pop push int aad mov push jecxz fwait mov push (bad) mov xor cwtl and mov xchg outsb mov adc pop jge (bad) negb loope cmpsl jp es clc dec mov jecxz loopne cmpsb notl fidivr push add mov (bad) repz adc xchg (bad) mov cmpsl fsubrs test pop imulb jnp das push and mov mov scas (bad) push sbb pop mov outsl (bad) and mov (bad) lret push iret (bad) pop inc or mov dec mov jb sbb adc mov (bad) sub addl adc sub leave push xchg icebp push xchg pop push jmp jp jb and sub leave (bad) fxch icebp adc test movl jecxz cmp and leave int inc out mov in add ret das jns notl push iret fwait inc lds mov mov push pushf test ja jo mov sub call jbe xor scas jns add out sti push mov je gs or ffree mov in push xor int3 pop leave or inc arpl xor xchg sub dec movsb adc dec xchg ss loope outsl arpl pop sbb rclb xor mov cli or mov and or sub mov ds sub fstl out sub or stos (bad) xor imul mov inc imul mov faddl or fstpl inc dec (bad) mov notb sub mov sub dec aas or add into stc aam sub arpl lcall lds pop push daa into dec mov inc nop jb test addr16 adc xor fsubl inc mov int3 inc shrl add sub imul movsl es loopne sub into xor lock popf fisubrl jnp aam es jl jns ffreep stos pop mov jecxz sub popf mov jnp (bad) jo ss jae or cmpsl mov (bad) fdivs adc xchg cmp mov hlt dec or sub pop clc dec pop call xchg cmp pop jo divl mov int fwait inc loop mov xchg xor je,pn leave cmc or pop sub arpl xor pop add lcall and aam jge push mov pop pop xchg fldcw fndisi(8087 ret in sub adc sub insb cmp xor adc pop push sbb aaa subl popa sub sub insl pusha xchg (bad) pop loope sbb mov (bad) mov movsl push mov outsl js insl lahf (bad) lret xor sub lds mov inc daa aam in mov inc sub mov and aam adc jmp dec add cmp add movsl jnp push push loope sub test (bad) in inc int cmp sbb mov cld rcll dec push leave repz sbb sub sbb jl,pt aaa lret jno cmp data16 in sub sub mov sbb test mov cmpsb xchg mov andl sub pushf xchg sub int3 push sub ljmp jle inc mov sbb xor mov dec sub ds pop mov call scas mov mov push sub inc test xchg outsl dec (bad) push daa sub mov pop jb mov sub (bad) sub or mov jecxz imul xchg push fisttp (bad) jmp add lahf cmp int (bad) and leave iret sub lret xchg push pop mov jnp mov xor fldenv cmp xchg pop ds scas test int cwtl data16 sub in (bad) outsb in pop add jbe dec std jmp xchg cmp xor pop (bad) js sbbl orb jge std out cmp pusha pop daa int leave daa ja cwtl out test jnp je pop and cmpsl jle ss int3 inc jmp mov jnp popf and std stos jmp lock jecxz pushl inc or cli addl sub repnz xchg add fstp into imul out jmp and sub imul inc lahf cmp mov xchg and (bad) leave mov cmp lods sub enter jecxz fistpll add (bad) xchg ss push bound sbb sarl pop adc cs (bad) cs cltd sub adc pop mov cmpsb mov outsb inc mov xor lret test fstl (bad) mov sub add adc dec jns sbb xlat (bad) jo mov lods idivl pop cmp push aas xor mov dec sbb int orl leave mov or push inc lods data16 mov aas xchg outsb lds adc ss scas insb push mov movsl (bad) jg insb jmp fstps xchg pmuludq je xor sahf push inc sub lcall dec push leave push push sbb test out test cmpsl fs dec mov insl repnz cmc ljmp cmpl push xor cmp push enter cmp mov lods jle push out sub stc lock sbb ret inc inc or (bad) push popf inc mov leave test pushw pop cmpsb js test scas xchg add data16 jnp into adc inc movsb daa jne out inc mov lods mov xchg lods pop es fdivs test and push stos (bad) jno and xor in daa aas mov jecxz stc mov mov cs pop movsb daa aad popa xor inc push sbb xorb and sub push xchg push adc add and dec shrl push jge test ret int into fstp adc clc pop add jno jb aaa or (bad) sbb scas jp xchg iret and jl mov push mov aam add and clc fisubl fisubl cltd push rcll bound loop adc outsb (bad) es shrb cld xchg push cmp (bad) leave je,pn cmp clc mov stos sub push call jnp cmpsl dec out lahf int mov and push call xor lea leave adc mov mov test (bad) cli mov pop xor add push adc das and hlt insl mov push jo inc andl jnp cmp int imul inc cmp out pop sub mov dec outsb xchg push sbb xchg movsb and inc mov aaa movl test (bad) ss adc outsl inc push ret les ret (bad) (bad) ja aaa inc cmp push sbb push dec pop push leave test jbe test push mov decb dec jg mov add das push movhps sbb push sub (bad) or in std cmp mov ficom jmp icebp int shll xchg (bad) dec mov inc popf cltd imul dec and dec sub int push enter xor and mov mov js push cld mov scas pminsw and mov ret dec xor sbb inc int imul (bad) push (bad) fsub dec enter loopne cltd inc mov das add daa (bad) leave (bad) gs std mov xchg imul push btc dec (bad) jp push (bad) sub mov cs fcompl push dec sub jo and int sub sub (bad) loop cmp aam outsb jo cmc mov rcr loope ret repz pop enter or sahf add add (bad) xlat jo add ds ljmp and xor aad lods mov iret xchg cmp push stc inc and sbb mov push or outsb ret sub jne sbb sub aad frstor jae xchg sti xor jg jns incb fistp popa nop cmp xor data16 push clc orl mov in mov rolb adc fucomp add cli clc xchg gs imulb out inc ja sub fildll mov jp xchg sub inc xchg xchg jle,pt cmp push lods or out sub xchg cmc jns cs or lock mov jmp jmp out test push mov sub cmpsl sbb xor cmpsb push jb push insb movsb cwtl and insl fldcw test or test pop cwtl push (bad) or mov int push nop scas mov push push xor pop push std icebp xchg pop loopne mov pop sbb mov ret in aaa loope cli add cmp xchg scas repnz cmp push ja ret xchg cs jmp popa inc xor dec jnp fdivrl leave mov lods xlat int3 enter inc or sbb leave ret adc sub xchg out lea rorb mov lock mov and mov test (bad) int push or sbb sub rcll adc int3 sub mov jmp scas sbb out test push mov call aad cwtl mov stos pop lds or bound or in popa adc mov jb loopne shrl ret xchg mov and cmp repz (bad) xchg pop xor xor lea test fidivl daa mov in ss xor in test (bad) int frstor sub cmp fstpt rcll das sub add sahf xor adc or inc in bound push imul sub adc mov sbb pop movsb movsl mov in mov call fnstenv sahf lods push pop repnz icebp sub adc jl movl xchg aad cmp sub movsl in mov push pop out xchg das enter rcl mov int sub xor andb mov push loope xchg ljmp jnp dec xor sti sub jne dec mov xchg ss xor insb leave insl lock sub pop icebp addr16 test idivl and mov test arpl sub inc out mov fdivl movb aam js (bad) jno cmpsl out sti dec push sub cmpsl notl (bad) sub adc sub fiaddl pop mov imul pop mov cmp incb (bad) mov sub push jecxz cmc sub stos jb push ret adc pop jnp dec (bad) aas int shrb add and push in (bad) adc sub and sub loope jmp popf out fmulp jp dec popa out sub xor cmp sub mov popl sti add fiaddl inc (bad) int3 sti jge fstpt sbb adc xor out call cmp rorl leave adc mov mull xor dec jmp sub jmp int sub inc and xor fcoms cmp inc dec mov inc outsb add adc call pop in fcmovb add in sub decb sbb cltd mov sub insb imul xor inc jnp clc xchg aaa xor adc ds jp lds sbb xchg fldl mov xor push ret push (bad) lret push pop int xchg mov add mov mov call incb jbe adc decb movb sub sub and cld jg pusha jmp ja ret enter sarl push int sub and or add inc sbb ss bound (bad) adc mov mov bound xchg or fsubrl popf nop in ljmp loopne outsl mov (bad) sub push mov sub cmp loope and sub mov xchg mov cltd sbb sub or add or sbb sbb xor repnz inc sub dec (bad) nop ds idiv mov movsb hlt xchg adc sub and adc sti sub xor add int pop push adc jl jmp mov sub dec fs pop mov dec add push inc cwtl xor ljmp or cs add sbb (bad) mov dec fadds lea push mov in ja xchg sbb fnsave push push and sub push lea dec mov push lahf daa into sbb jmp inc and test dec cmpsl sub aas sub stc rcl imul push cmc xor mov jg sub dec sub pop sub fisubr pop lods sbb jb pushf scas out loop jbe fsubs mulb add jl cltd sbb fidiv js inc movsb push xor test mov lcall leave mov sub std and sub test push addr16 dec sbb test iret xchg mov mov push subb fsubrs fstp or cmc mov inc sbb add stc mov orl (bad) fsubr mov rorb and inc roll cmpsl push fldt fmull int iret ds inc or je imull jno hlt dec lcall sub inc dec ljmp sub and rorl test cmp cli fdiv xor sbb inc and add fdivl popf pushf sub inc addr16 sbb jge nop and pusha loop adc inc mov (bad) sub cltd and push mov sub xchg sub sbb lods ljmp push mov or sub fisub pop shlb loopne sub outsb mov faddl inc data16 cmpsl out cmp jecxz int3 hlt aad (bad) push into xchg cmp ret or jnp sub out and loope xchg call xor adc push xchg adc stos scas lahf pop enter and jecxz push inc pop and (bad) mov push xchg scas subb leave sbbl pop push lds jbe sub mov int3 fistl jne dec or jo sahf call sub leave xchg add cwtl fwait (bad) sbb ret cltd popa dec bound xabort or sub and leave or arpl mul daa push (bad) in es add (bad) repz jno ret cmp sub roll cmp push leave aad cs cmp jno test aad sbb jge inc or dec adc inc push push jo stc cwtl test and pop pop test mov das add dec mov xchg outsl push push dec xor jo push lcall (bad) add lods fisub popa repnz mov jnp scas (bad) (bad) push lods push adc cmp (bad) neg scas mov imul mov pop pop cmp jmp or cltd movsl iret jmp (bad) push cmpsl imul test (bad) std scas insb sub fwait mov test movl and rcll push jne sarb jo aam mov push pop leave inc stc push add andps cmp fnop sub cmpsb pop sahf fstps xchg xor jp test xor mov push leave scas ss pusha movsb push jbe negw repnz fdivs lret pop pop cmpsb sub lds loop push and (bad) inc mov stos xor dec rcl xor cmpsb repnz add xlat inc lret (bad) negb aam outsl insl cmpsw out mov mov faddl out (bad) cmc (bad) sub dec (bad) cmp roll xor enter (bad) pop jne aas and cmova call inc xchg jno loope xor popa call sub (bad) jg fs adc jecxz mov push adc inc cmp popf loope jg (bad) xor sub push aaa ja movsl test (bad) xlat mov add sub mov pop jmp test stos xchg loope xor clc aad mov sbb fldl2e and and sub push mov push mov sub push lds lcall sbb imul shrb test icebp inc push adc sbb sub dec push cmpsb mov lahf inc iretw shll sub inc add pop lock xchg or bound mul push sub call jmp mov xchg and jnp mov nop mov sahf xor jne loop mov ss pop (bad) lea jb in pusha sub sbb iret cmp (bad) test xor sub mov mov mov mov or mov (bad) dec fbld lea add fldenv sub int cld dec mov imul cs cwtl fadd jmp ss test adc dec inc push and ljmp pushf (bad) and mov inc xchg sub es subb aaa pcmpgtb xchg dec xor mov sub addl sbb daa sub mov mov arpl mov or xor or jecxz subl sbb inc dec xchg cmp add je fucomp pop insl mov push gs sub push mov jb sbb sub ja add push xlat in inc loop and mov sbb xor jl jb xchg cmc testb mov outsb sti jp lods sub ljmp pop lret xchg jne push imul sbb sub fwait sub sub jmp or or mov sub push adc fsts mov insl idiv sub lock shrb sub movsl sbb mov imul fadds hlt js jb sub dec sub imul or aad sub iret inc or lret addl mov xchg cmp mov mov (bad) fsts adc fmull inc dec aad push adc mov sub jne or out mov xor inc (bad) lods mov jb jl cmp jo adc push inc out roll (bad) cmp fstpt mov cld int3 inc mov pusha adc repz aas mov cmp adc xchg call sbb mov cmpsl daa imul jmp push cmp or in mov outsb mov nop sub mov lcall (bad) push cmp adc add push je mull or scas xchg xlat push and aad imul into jmp lahf cmpsl out xor cs ss or and sbb cs and test fildll fisttpl inc xor sbb loope sbb jg jo add push scas sub (bad) pop sbb cmp adc popa in mov hlt lods xor lds sub lret js xchg pop inc dec mov insl rolb jbe xchg hlt xchg gs xchg and mov ret jb sub mov jp add daa popa repz out (bad) fneni(8087 lock imul sahf add jmp and dec jno sub or ja push jl or out mov add inc sbb cmp push mov xchg fldcw pop in lcall scas sahf sub jnp fldcw sti shll jecxz out mov cmp push std mov cmc into sti sub (bad) xor inc and mov movsb seto aad mov cmp push (bad) inc jns or loop bound push (bad) xor mov call push scas notb push out aad cli dec sub in jl jbe xchg jo loope jle leave out adc and jno lcall jo mov jns imul inc push clc dec sub mov inc dec dec xor dec (bad) int dec cmpl inc mov xchg jmp rcl mov scas sbb jmp jg jae lea loopne pop cmp adc xor mov mov in or add dec fbld fs aaa mov (bad) stc push push sub sbb xchg mov fcoml orb neg jmp mov sarl dec mov push int3 ret xchg cwtl or sub push mov xor or cmpsb or dec call push adc imul addr16 inc push xchg cvtps2pd in xor stc push popf shl aaa xchg pop add cwtl pop fildll mov push mov aas adc push sub cwtl ss insl pop mov imul in icebp push sub push jg push dec pop or popa cs lret jbe inc adc and push or push sub movsb (bad) jg lret stc das adc aad sub and push cmp cltd imul lock push push pop fldcw out repz out sub arpl es and or test push sub xchg dec out pop stos dec add lcall inc sub repz lods arpl imul sub daa in jge pop stos pop (bad) ja jo push cmpsl dec add sub jmp adc ss test push mov sub (bad) (bad) push popa clc daa inc push fstpl jno movsl sub adc sub pushf cmp out push stos testl and pop bound mov pushf or push sbb (bad) lret dec leave sub jmp cmp sub xchg mov sub cmpsb mov sbb and inc fimul outsl das cmp cmp movsb sub and mov adc cmp push sub dec sub xlat inc rcr movb inc or dec jp mov movl sbb stos xor aas cmpsl pop (bad) leave sbb idiv pop ja ret loop adc lcall push hlt push pop call xchg (bad) cmpsb jns in sub (bad) mov push mov insb pushf mov lret (bad) xor sbb and ds in cmp sub xor push shrl jge adc sbb xlat sub (bad) mov xchg sbb cmp aad push mov rol xchg icebp mov dec aas push adc xor add mov sub into push push shlb cs (bad) (bad) pusha aaa adc mov lret out out pop cwtl frstor outsb push sub sub sub mov sub (bad) sarb mov (bad) dec mov mov imul mov ljmp cmc push cmpsl scas xor insl xchg (bad) sarl inc ljmp xchg push gs test push mov mov roll rolb dec dec push mov inc add pop xor xchg sbb pop dec in adc sbb xor adc mov and std (bad) imul pop dec mov fnsave dec movb movsl dec arpl push pop shrl mov jb sub inc dec clc push insb adc mov mov (bad) (bad) in fisubrl jmp and ret orb cs push stos cmp lock sbb fucomi or adc cltd push sahf cmpsl mov data16 mov mov (bad) repnz push sub push push (bad) lods sti push js,pn push jbe iret pop dec punpcklwd cmpsl inc jbe insl enter adc cmp sti iret loope sub movsl cmp repz inc pop jmp push push sub fwait pop inc or cmp mov ds fiadd pop sub mov shld cmpsb arpl mov push xor iret outsb clc xor jnp fldt call (bad) loopne fstpt jp,pn popf repnz js xor push pop mov sbb dec test fdivrs iret aas mov xchg cmpsb jl (bad) jle push jo push jnp notl xor mov cmpsl and xchg cwtl rdtsc adc ss lahf or xor pusha cmp cmp (bad) push dec repnz (bad) pop add adc iret sub inc (bad) inc sarl in inc pop shll insb mov sub xor clc (bad) fsubr (bad) inc or cli sub mov shlb out mov pushf sub loope daa ja push sub adc inc mov aam sbb xchg sub push and inc dec mov push mov shlb push adc stos stos fucomp rcrl mov xchg xchg cmp xor jno dec cmp sahf subl push add and add mov sahf enter push mov pop or sub xchg mov dec loop pop pushf sub mov sub in loopne jns out mov sbb inc jo call std jp sub dec hlt outsb outsl lcall xchg aaa ja jp dec arpl cmp jbe sub test fildll (bad) lret sub cmc rorl push (bad) jmp mov sub arpl or int cld xchg movsl scas loop jg or cs int mov or loop mov imul pop sti sub jl,pn jecxz xchg inc sbb inc add jl xchg dec in popa arpl idivb sbb jnp out pushf add sub sbb sub push mov cmpsl int cmpsl icebp pushf dec aam inc jo inc dec shll (bad) jbe rol adc imul mov or fiaddl xlat (bad) cmc mov lahf outsb shlb adc and cwtl (bad) in cmp fnstenv cmp icebp pop mov pop out les xor dec int test mov adc and xchg xor cmp and stos sti lock icebp mov sub pop stc xchg sub pop icebp and pop pop mov cmp icebp pop mov addr16 dec sub xchg cmpsl jnp (bad) adc out popf jno jo add mov out scas push pop push mov cmpsb mov mov test out jmp dec testb cld mov or mov cmp inc dec rcll push jae test sub popa lahf mul mov testl (bad) dec loop cltd fidivr ss iret mov cmp movsb sub (bad) stc ret push pop fcoml (bad) jecxz in cmp mov push pop mov adc in jo mov in or sub das loope les mov jnp xchg aas jp add mov fnsave pop out daa xchg pop sub lods mov xchg into test adc cmp jnp ds cwtl pop mov xor ja mov leave ja pushf sub cmp mov ret xor les mov dec mov xchg lock xor icebp sub fs lahf mov xchg mov xchg mov push or (bad) add mov iret ja data16 js fimul imul ds movsb dec gs aam add mov test dec inc sub sti lret outsl add lret pop daa mov push mov loopne ljmp push cwtl das mov sbb sar into lcall pushf (bad) clc push mov add cmp adc mov jo jp adc and dec jne pop aam mov daa fldl cltd loopne inc lods stos dec sbb negb (bad) push mov sub dec cltd pop nop push lods pop sub jmp inc add mov and aam mov shrl add pusha orl sub in push push or aaa adc dec adc add ficomp jl inc add fsubrl mov inc inc dec out scas dec mov lcall sub lcall jp in iret cld lahf inc jp popa sub sbb fs rcrl out popa outsl inc inc arpl ret dec mul popf xchg daa push sbb and cmpsl lods sub dec scas sub sbb sbb jge shr and ret mov out sub inc adc pop adc adc imul out mov inc mov pop ss jecxz xor cmp add xchg and fwait bound stos and je push mov mov outsb les out xor cs inc or lock mov fist sub jge inc test dec mov sub cmp scas push test mov mov in (bad) dec lods xor scas aad (bad) daa xchg push ss outsl and pop mov pusha jmp pop add sub test imul or lods jmp das pushf xchg (bad) mov (bad) pop repnz in jne cwtl shrb inc sub lahf cmp xor pop xor call shrb xor jg sub popf sbb sub pop sar pusha out cmp lods jmp fisubr loop int3 mov jge insb test daa pushf mov imul and jge cli jmp sub dec mov adc arpl imul js cmpsb into mov mov test sub seta pop adc stc nop loope mov cmpsb xchg ja push or inc je inc push imul das and jno mov jmp cs addl dec sub fsubrl repz jg dec movb add fwait test cwtl sub xchg dec add push sahf cmp mov cmp imul into mov xchg dec cmpb add lods aam sahf add out lea int stos imul wbinvd xchg sub ror sub xor test sub jp lahf mov push xchg sub imul adc xor jg cli sar std je mov mov sub mov mov cmp xor (bad) jmp sub push movsl and add into cmp dec loopne pop jp push nop mov out popa pushf imul loop fisubr push inc mov sbb sub and xchg test sub pusha ja loopne (bad) mov insb inc jno dec lcall jne syscall cmp add movsb je daa sbb adc test dec push outsl sub push cmp push mov fldcw jecxz lods std int hlt pop push stc cli lret xchg loopne loop xor xchg daa testb pushf subb movl push call jnp sarl scas cmpsl ss imul adc sarl cmp enter lea pop push stos mov sub shrb sbb ja jp jns lods sub dec icebp xchg push pop shll sbb test ret xchg xor or pop out or jle lods sbb push flds sub jmp jbe dec ljmp adc add pop cwtl leave test mov sub test imull or (bad) push sahf repnz cmp xor in xor sub or xor int and sub jge pop jne data16 adc loopne mov xchg or shll sti sub or inc xor or push popf sub (bad) data16 and int3 mov bound sti xchg fs test int lret sub cmpsb iret lret decb mov inc push adc fiadd inc sar inc leave dec xchg xchg inc adc scas jbe sub inc in pop imul cmpxchg or arpl pusha jg aas or outsl pop xchg xchg aaa decb ficom adc jne test icebp ds adc or mov clc cmp fistpl xchg sub sub push sbb inc (bad) xchg movsb sub dec fsubr enter sub aas movsl (bad) ja xchg inc addl xchg addr16 xchg sub cmpsb (bad) dec (bad) dec push sub fidivl cmc or pop pop push nop xchg mov pop xchg ss cwtl pusha add iret sub sti cmp jge decb inc add (bad) int3 fxch adc sub sub pop push adc movsb add ds ds pop out mov sub ret xor push pop cmpsb dec rorl mov int3 or dec aaa sub scas sbb ret jo inc adc jae push xchg lock sub sub repnz add xchg mov cmp pushw sub or adc xor push mov mov push cmpsb imull push js mov out pop and test mov sbb test test sub pop cltd es sub loopne insl pop add sub inc inc lret cs dec dec into mov add dec jnp enter out inc dec jb mov pusha and std scas popa mov pop add cmpsl in icebp in and mov mov xor fcomp sub idiv sub (bad) adc mov mov jne xchg aas lcall xchg inc or mov lret push sub adc mov mov fidivr gs sbb inc add stos bound pop hlt dec xchg and loope repz ljmp jnp mov adc and popa jge sub mov xor mov out sub iret push jbe sbb mov test jl into sub dec movsl es mov mov pop ss rorl pop lods ds push notb sbb dec xor inc pop fstps add xor push xchg xchg fxam mov (bad) out push jb sub pushl sub out inc mov stos loope idivl icebp mov and daa pop (bad) jge (bad) jne adc je push arpl push sbb out pop (bad) cs cmp sti add into jae cmpsl or (bad) jbe cmpsl sbb imull dec (bad) xchg jno xor adc sbb push mov das ret stc mov rorl or iret daa out test ret adcl or add sub add mov sub addr16 and sub out decl dec bound lret fwait stos add in jmp fsubp jbe in jo iret (bad) mov sub or lcall aad ds xchg das and sub int lea sarl cmp subl adc or sub ljmp add pop mov cwtl lock add fwait sub pop or sub and test mov ss push mov jp in sub mov dec or (bad) stc scas xor sub add loop sub repnz icebp cli into test xlat push cmpsl cs mov sub or fisubr es aaa (bad) sub outsb adc cmp mov aaa push sub or sahf mov or ss mov mov jno mov lcall mov sbb mov mov aad sub sbb inc sub (bad) inc data16 mov out cltd lret inc xchg gs push mov out cli scas pop add movsl pop daa stc lcall imul std stos cmpsl es cmpl dec cmp pusha jns cmp int in and sub or xor push cmp xchg out stos repz into iret jle insl sti mov into call pop jp addl js xor inc xchg sub inc mov sti cs lea daa mov mov jmp lds aas fidivrl xchg and (bad) (bad) sub int3 gs test mov sub ss xchg addl fstp xor inc or or jae aam jns add push ret outsb pop mov pusha mov dec stc loope mov rorl fdivrs mov xorl xor fwait daa lods ljmp inc xchg out movsl xchg xchg imul hlt (bad) shl push cmp daa inc out push xchg stos and sub sbb mov out xor jmp (bad) mov inc insb clc into sub or jl jbe add push cmpsb xor cmp (bad) enter sub cli rorl fisttpll lds dec add push insl out adc or mov lods in mov add clc cld insb push rclb push js loope sarl sbb adc mov sub jmp jbe pop dec adc lahf outsl xchg sub mov enter fiadd sahf pop xchg int3 sub jge fdivr dec sub sti cmp es pop gs cs pop outsb popa push jp push xor cmp out and inc jns repz call std int mov sbb insl xor fnop cs add pop jmp fidivl adc scas fnstcw mov inc mov sub int push dec pop imul jmp sub adc mov mov xor je test out jg ret fldenv es shrb xor cmpsl repnz and flds or mov mov jmp jbe lods pop sbb sub push sub (bad) mov pop xchg and (bad) sbb shrb cmc or adc sbb push sbb sub xchg and nop pop sub out inc jb jmp leave outsb push rolb adc sbb cmpsb xlat outsl sub and mov std out adc pushf sub xor rorb push xchg ja xchg xor dec std popa jmp mov ret (bad) fcmovnb xchg jp inc push xchg movsb aam sub push cmpsl mov sub mov cmp cmpsl and inc jg add and inc mov lahf movsb shll and clc jle cmp mov jecxz in jmp push mov cmpsb mov gs and lods ss rcll (bad) pop pop lahf std iret sub pop aas pusha ljmp xor dec (bad) scas push mov mov movsb jmp sub cmpsl mov daa mov lock stos or fimul pop (bad) sub xor movsl inc shlb pop mov ljmp push insb jo (bad) std ret sahf mov sbb ljmp mull pushf and mov or cmp mov or sub mov jl cmpsb sub or icebp sub or inc sub inc xchg cltd and cmp jmp loopne xor fidivl bound cmp stc shrl mov fst xor sub pop insb ljmp arpl outsl xor adc fsubrs jnp ss ss fnstcw sub push cs mov cmpsb (bad) and stos cmc xor popf cs sub (bad) iret mov fldt inc or (bad) sub pop xor arpl push xor add (bad) push add imul fisubrl je jmp dec dec sbb jae inc sbb and gs inc int cmpsl mov popa sbb dec scas test inc int adc arpl jge push dec inc mov pop dec loope (bad) pop int jge jl push cmp cmp inc aaa leave pop xor adc dec fcomps movzwl mov mov test cltd adc xchg adc and imul and inc push enter rcrb fs psubb (bad) leave test loop mov jnp pop inc mov cmp jp xor dec int sub lret dec xchg mov cmovge xor push out inc mov sarl cmp push add jp (bad) xor or cmp mov pop pop lahf cmpsl inc and in pop cmpsb mov (bad) mov and and daa adc push lea cwtl pusha dec jae sub xor cmpsl test sub sar cmp mov outsb fwait scas mov pushf mov pop out das pop shlb xlat push xor aas xchg and mov stos nop mov cmp and dec mov loopne mov sub mov mov dec lcall loop pop sbb inc pop mov add cmp sahf (bad) mov cmpsb leave dec xchg xchg pop xchg pop sub aas jp fldcw jae dec push js sbb dec ljmp pop mov cmp sub scas out cmp int mov mov jg push (bad) hlt push jns je ljmp adc ds and sub sbb add cltd dec add ret xchg (bad) repnz pushf jle jbe sub xor aad sub fbstp icebp (bad) xchg sbb jae cmp sbb hlt or sbb js cmpsb cmp push pop out sub ficoml and aad mov xchg or dec sahf add pop jb aam mov movsl or insl fdivrl lahf cwtl sbb lcall into cmpsb and (bad) push add sub aaa sar sbb mov (bad) scas fildl rclb jbe jl xchg xchg fs cmp and push jo sub mov mov es adc (bad) out cmp out and dec and aam mov int3 in out scas cmp fsubrs sbb mov jmp cld or pusha pop inc dec jge xchg mov sub adc (bad) xchg out pop cwtl daa scas or mov int dec imul adcl (bad) leave sub mov sub ja stos xor ds or add sub xor pop pop or fnstsw sub es xor mov inc and das lods nop call stc mov adc sbb pop jo xor iret pop out dec or dec adc ss cmp push test cmp or rolb mov imul jle dec inc mov push add adc push jns sbb imul dec jg pop xor or sub add inc into lcall mov nop push push lock das dec jge push jb inc pop sub and push sbb in jl jl dec test into jnp cltd cmp cli or and xchg sub pusha add fs je aas inc fldcw and dec jle sub nop out repz adc in mov xchg lcall mov stc cmpsl mov clc iret subl popa push cmp dec cmp inc sbb (bad) fist pop sub adc fdiv xor in mov adc lods pop imul scas mov and cs and jae rcl sub andb out and push inc inc (bad) ret push inc test pop loope mov andl imul mov jns (bad) xor es daa movsl mov sub xor push sub add lret (bad) loope lods mov cmpsl ljmp fadd or sub add mov xor lea outsb pop sub std dec push sub and cmp or cmp lods and mov sbb push mov adc sub outsb les pop cmp loop pop bound bswap fst sbb push dec insb push (bad) jb pop sub mov lods pushf fdiv sbb sub rolb ret test xchg cmp jp and sbb addr16 adc aaa (bad) int lds pop lahf (bad) inc add test jge pop pop cmp out and cmpsl test cwtl les inc dec push test mov sbb scas fsub sub adc dec push cmpb xor inc repnz inc cmpsb leave sub movsb out mov mov pop adc lods pop fnop mov insb and gs or push add push inc mov mov mov adc adc xor push dec push std addr16 cmpsb in add inc test jl int out and icebp sub push in leave mov test loope imul and ret int rcll rorl insb lret cwtl (bad) pop pusha jmp jae aaa int xchg pop and add in scas mov adc dec test ret mov lds dec leave ds ds jae and movsb or xchg mov or inc sub (bad) in stos repnz ljmp roll int3 push jnp rorl cmp mov dec and cli (bad) mov fcmove iret sbb negl xchg outsl js std repnz cmp pusha xchg int3 push sub jnp cmpsl pushf and (bad) cmc mov ss xchg cmp js adc xchg cli push dec and push push cmp (bad) push xchg mov call jp movsl fsts pop in ljmp (bad) (bad) cmp popa daa data16 (bad) fs (bad) divb dec ss out adc sti jae aam adc push mov loop sub and xchg mov rclb adc pop insb bound mov in mov lahf in fldt xchg movsb mov daa into mov sbb jne adc fcmovnbe xor push push pop cmpsl add out fldt and mov cmp xchg ss aam mov test add or clc jge sub (bad) adc xchg cmpsb cs jnp ret push inc (bad) sbb jbe jle mov imul int3 ss (bad) notb mov cmp outsb stos or or sub mov lret and dec jl add aas (bad) (bad) out int jl jmp fisubl mov mov dec imul sub test jne jmp call arpl clc sbb or test mov add sub imul dec dec lds sub mov inc lcall pop ljmp loopne lds push jg sahf stos jns mov jmp mov mov pushf pop (bad) incb movsl lcall or out ljmp int mov into cmpsl sbb xchg sbb out cmpsb adc int push stc in jo rcrb pop add push dec xchg sbb scas ror lods stos push cmc (bad) or mov fdivl push xor push not pop sub pushf notl leave inc adc mov rcrl (bad) push scas pop stc jne dec jge int aad dec jg mov or ljmp add repz rorl inc fcoml movb cmp jl fnstenv inc in sbb outsl or sub mov outsl add cmp push xchg mov pop adc je jae mov push mov sarb test mov mov sub outsl or test cwtl push ja aad mov xor sub sub adc pop data16 sub sub daa (bad) ss and int cmp outsb (bad) sub xor or mov push std mov push ret dec push enter cs (bad) icebp sahf push mov shrb je leave mov stos out sub cmp add dec and je aas mov getsec push imul push jae xorl and cmpsb mov push xor mov fchs sub cld call or jecxz xchg daa repnz mov dec jnp mov std or int cmp aam cs fldt inc pop pop inc push gs sbb jb pop outsl scas sbb test jne sbb cmc shrb (bad) jmp sub movsb std mov sub mov dec stos or (bad) jg mov push jb fcmovnbe clc xor mov push je test xchg test sbb mov test in jmp insl mov sub pop push in in leave test mov xor pop or ret ljmp int dec std add hlt xor add and cmp xor mov sub mov lcall enter inc popa cs push hlt and and (bad) sub pop shll aas jbe sub xchg mov ds adc (bad) and out fstpl sub xor inc mov test mov mov mov push fdivs inc dec lods sahf movsb pop loopne outsl inc jecxz es sub aam mov sbb out and mov pop (bad) or sub inc add clc push mov lds aaa ss cmp jle or push scas or sub and sub xor scas (bad) mov sub mov push sub sbb stc mov mov sbb sbb sub sahf adc (bad) ja inc pushfw insb mov push sub push push dec pop xchg mov pusha cltd lret cmp stos mov popa add (bad) (bad) xor test hlt sub inc add pushf jmp mov adc mov cs add ljmp xchg mov inc cli roll mov mov int3 jle iret fildll mov inc pop arpl sarb dec mov xor sub les clc xchg mov shrl test pop push ss push cmp and xor jo or daa mov lea sub mov sub std (bad) sub pop sub mov xor (bad) fs push adc adc push mov or fldl2e (bad) jmp or movsl cmpsl lods jmp push add es cs push lret pusha int3 std sbb (bad) mov test push subl lahf push push jmp stos mov xor repz hlt xchg int3 aad loop add movsb call mov add imul dec sub mov enter sub mov jp cmc test (bad) dec mov pusha insb adc xor (bad) and mov mov xchg mov orl lea sbb mov lcall into sub mov cmpsl and in dec sarb cmp fyl2xp1 sub clc lea lcall xchg sub (bad) sub push mov sarb jb or (bad) dec mov bound xor hlt cmp cmpsl inc sub jno push lock sub mov xor ljmp cltd jnp push sahf int3 sub fldcw mov and sub inc pop imul xchg in out arpl data16 mov sti rorb pop repz push sub xlat xor jecxz (bad) fsubr out push sub jl sub daa lahf ret and bound cmp jl lods popf inc fxch pusha xor dec xchg in mov shrl popa push shlb inc stc sbb sbb pop mov dec add pop (bad) adc icebp sub pusha sub roll inc mov sub fbld movups lds dec sub sub push and hlt popa sbb mov (bad) cmp push pop cmp aad or sub ret imul inc and lcall dec mov xor sbb add mov cmp cltd xor adc insl or les roll sarb adc imull dec push pop scas daa and dec out jecxz sub push lea sti dec push leave repnz or sarb icebp popf pop sub outsl out stos jp mov ror push cmp add cmpsl js rcrl sbb popf push ss pop and mov sub ss fcomp xchg cwtl xorl push cmp sahf dec push test (bad) cltd mov push cmpsl or popa xchg mov test nop aaa loopne lret (bad) jle dec es lea les xor jecxz cs js stc popf pop sub dec jle xchg mov aam fsubr int3 jge sti xchg add je in out dec sarl inc push sub jb sub rorb push cmp mov xchg push pop iret pop (bad) lock cmp jae xchg (bad) jmp mov xlat adc mov call (bad) adc xchg xchg dec jg ds out test sub (bad) stos enter or inc stos loopne pop mov sbb cmpsl je cmc sub jl push jnp mov ret sbb mov aam adc pop ja adc bound cli mov dec ss (bad) xlat ss sub int lock (bad) dec subb cmpsb dec sub pushf movsb lea sub xchg xchg and push sub jb loope xchg ja pushw adc mov leave mov dec adc mov xchg jmp push xchg cwtl fistl sub push bound cmp dec in adc mov xor sub rol adc scas dec xchg int scas push lods mov adc data16 adc js and out ja (bad) inc sbb xor (bad) out repnz adc add cmp add ljmpw dec adc jl push cmpsl (bad) adc loop popf pop loopne and loop cmp and popf mov mov jb int pusha icebp xchg (bad) out mov mov jbe decb jl mov adc popa mov jb and in and faddl daa push sbb ret stos aaa cmp jno leave jge mov movsb mov (bad) ret sub mov js sub cmp jle sub lock stc aam push inc pop ret jecxz std ds or dec sbb jl mov push add push adc sub ss mov dec std daa or and movsl dec fwait ss mov sub sarl sub inc or xchg xchg mov and cmpsl mov bnd xor lods mov imul sbb mov mulb out (bad) arpl inc std push dec (bad) jnp call loop vpsraw mov shrb push mov in jno lret cmp aam mov sub sub xor out (bad) es bound cmp fwait lahf sub adc out sub and dec cmpsb sub adc pop mov or sub fs outsb sti es (bad) jbe pop repnz mov push or and lcall sub stc fnstenv xchg xor rclb gs adc cmpsl sbb inc xchg (bad) stc shrl and xchg mov push jb sbb push dec outsl rorb sub fidiv scas mov pop mov (bad) mov and sub out icebp movsl je cmp cmp pop mov lcall sub inc lahf cmp arpl and jl push sub data16 sahf sub daa sub enter cmpsl pop fidiv loope push mov sub cli add movsl lds int3 (bad) aas or (bad) push leave sub popa sahf and mov gs push out dec sub jbe jae inc roll sub and cs sub das cmp jns adc icebp (bad) sbb xchg sub inc in sahf (bad) into cld (bad) call sub push adc xor add pop xchg add or cmp rolb mov push cmpsl int adc movsb sub scas pusha adc loop,pt or cli stc into push sti dec push lret push or sbb jns pop movsb dec lea shl push sbb sub into mov inc call cmpsl xor sbb sahf jne pop cltd mov pop icebp inc jmp repnz loope xor pop sbb pop inc lahf fcomps inc sub inc mov clc into (bad) fwait sub xchg sbb jo lahf dec sub imul and mov pop leave jnp mov cs cs leave xchg cmpsl adc xor loope in mov cmc call es inc ret stc ret stos pusha push stc mov pop pop sbb pop add sbb push mov jb dec (bad) pop out lds pop out adc mov ds scas dec jb (bad) cwtl mov jb in mov setbe das adc jmp xchg push or ljmp fs fisubl jmp push and arpl js push pop (bad) dec cli les jmp jp aaa push int lods push mov aas (bad) hlt cmovge leave jae pop or xchg jo dec addr16 or dec int3 inc shr mov sub leave addr16 outsl rcrb xchg mov cld fwait imul arpl ds sub cmp sbb pushf push push sub mov ljmp test (bad) repnz aad (bad) adc inc push mov subb test decl loopne fsubl js and jnp xchg cwtl inc test adc movl (bad) sbb cs imul xor mov rcrb pop xchg cmp cmp in leave in push icebp mov push mov xorl das xor mov test aaa mov call test cmp movsl xchg outsb and xchg pop jnp push dec pop cmp cmpsb std pop dec sbb xchg in dec cmpsl int lds xchg pop sbb sarb push inc push and ja sar call adc inc mov xchg xchg mov inc sbb xor cmp mov cmp add dec ljmp jo imul jbe cltd orb xor ja dec jecxz cmpsb das push add or (bad) sti (bad) mov xchg add (bad) (bad) repnz jb fucomp and push mov xchg add test lcall test cld loope jg rcl call xor ljmp and jae or sub (bad) cltd icebp mov dec push push mov out mov and or jo mov lahf rcll repnz cmpsb mov push pusha cwtl pop mov data16 (bad) aas xor iret lahf and xor lahf iret inc jno adc int push jge add jmp cltd dec cmpsl jnp adc (bad) rcrl sbb mov adc outsl lods stos inc xor into push (bad) out pop (bad) leave lock fmull mov jnp mov mov js leave (bad) jb addr16 inc stos pop aad rcrb popf cmc in jne enter lods sarl push or scas sub mov jnp xchg adc ret vpshufd adc jbe mov std aam pop and or push in cmp xchg sbb aad jae ret inc xor scas jb jno inc test mov inc pop cmpsb dec insb out pop push daa out outsb cmpsl push add and mov push adc das jnp popf mov sbb and inc bound lahf xor xchg mov add sub push push xor sbb jmp push xorl pop pushf movsl subb jno sti push sub jl cli ja pop adc (bad) push cld or push cmpsl pop ds aaa cmp repnz (bad) and in rolb arpl jle add jnp fidivl cmp xor push push mov adc cwtl dec fcmovbe out push add test push (bad) mov xchg out sbb (bad) sub in xchg cli add or mov ja lds daa jecxz scas sbb and fidivl jbe pop insl in add aad icebp pop addr16 sub sbb xchg rorl sub lds push lret pop aad jecxz push das loope inc jo out cmpsl daa ss jge fsubr cmc xlat repnz jb sub addb bound cs test out lods pusha sub or mov movsb imul dec xchg popa testl test jb mov cmp add data16 movsl sub decl sub push mov inc xchg incl xor dec dec lods das frstor push jl mov sub call mov push dec push (bad) add mov push in sbb jno aaa sub or pop out cmp sbb pop aas daa jns or test jg in xor and test outsb int3 push and out jo push sbb test jg scas fildl and leave sarl imul pop loop add es xlat jno and jae adc push loope movsb xor (bad) xor pop mov xchg jbe fildll bound clc push pop lcall dec add inc xor and cmp push sub sub mov jbe xchg (bad) or lcall in mov test jb push repnz add cwtl xor (bad) into (bad) cmpsb stos mov ds popa imul push push and imull dec add xlat fidivl and subl push pushf je sub dec call arpl inc bound or ret enter test mov sub imul mov test inc int3 jle push stos add bound cmp push sub jne inc sbb rcl dec cmpsl int3 xor sbb cs mov sbb imul sub mov sbb jbe and lods (bad) lea add sub push xchg das adc mov imul into arpl js test add sub dec les insl sub movsl test sub fldl test (bad) es mov jge sub sarl pop pop sub xor (bad) xor (bad) dec ss sub inc mov and imulb cmp pop out inc loope loop xlat mov pop hlt xor (bad) xor cli mov into cmp out out xlat sbb mov std dec or sub add jae adc mov ja insb bound movsb pop imul movsl mov or out test lods inc lds xchg fwait xchg push pop cs and rcrl cmpsl add into adc inc sub add repz sahf test inc test leave sub insl pop fs adc push mov jne and out dec add pushf sub lea or cmp dec (bad) mov pop lods sub sbb push test sbbb gs sbb cmp and add jnp sahf jo ds sub sub pop mov cs mov lods iret test cmp (bad) cs jae (bad) jb,pt fmuls xor cmpsl ljmp push sub mov add dec imul adc add nop pop scas enter fisubr imul inc push (bad) adc cmpb mov or dec push fsubs sub mov imul out (bad) test xor mov lret sbb js ror cld mov push sahf adc shl insl push lret stos out test dec test xor adcl ljmp jecxz sub xor jmp lds decb ret es dec sub lods or lahf cmp sub aaa xchg cmp aad xor sub add pop cmp add test cmp jmp sti xor fs cmp mov pop insb xor cmpsb sub jmp mov cmp into add sub push int out hlt adc mov sub insl sti fildll sbb lods mov jne mov test test pop je xor lret fnstenv insl jne shll mov sub imul jl daa fsubrl sarb sub aad sbb addl mov pop add xchg enter sub loope sub insl sub mov add jge in mov fs jp or roll in fildll stos dec ret daa mov test inc sub mov mov jg cmpsl ja rol insl or adc leave jg repz jno notl test sbb data16 mov fwait adcb sub dec push xor mov pop (bad) xor pop test out lds nop std cmp lcall popl xchg xor stos pop in call mov pop push and je xchg inc jbe adc push xchg fldl cltd mov pop lds or aas stos add sub pop fwait sbb dec das sbb (bad) ficoml clc sub aaa or call out dec inc movsl mov push jne sbb jle jg or je test mov enter icebp cmpsl cs rcrl or out fdivrs xor xchg loope icebp das dec cmpsb aam aad data16 push jo xchg loop jo jg push scas or jmp sahf decb sbb inc in in push int jnp adc scas xor (bad) jbe insl and fimul cmp push inc adc dec insl or ret cmpsl andl mov jne call sub divl and sub out and (bad) mov cmpsl leave ds icebp and mov jnp jbe lea push lret sub push dec leave mov bound cli int3 loop adc pop mov cmp aad push dec or enter inc jne xor out lods mov push popa pop dec and adc pusha out and cli int in sub cmpxchg xor ja (bad) aaa subl add inc fmul jns push cmc and jb es and adc daa int mov xchg push add mov jbe mov aaa enter and mov test lods xchg cmpsb ret add inc test insb push ret jge cmp adc (bad) and repz (bad) dec sarb sbb fmul loope fsubl adc leave push and pop push outsl or sub (bad) mov xor jbe or mov xchg push adc or sub mov add cmp jg iret xchg cmp sub jb and xchg pslld cs repz xchg sti dec leave sub xor dec fisubr in sub fucomp inc jg dec push xchg cmp lods sahf std loop popa sbb mov inc xchg sbb dec adc int jns int sub iret ja push inc loopne pop pop incb jnp dec sbb xchg aad mov movl (bad) mov mov mov xchg sahf fisubr inc ret call cmpsb pop add add enter xchg pop xor dec fldcw xlat cmc and xor add cmpsl dec stc shrl adc ds jp in aas (bad) je mov fldt test (bad) add sbb pop sub repz les dec xchg movsb icebp jl inc xchg addr16 stos mov sub lcall pop mov jbe je push and sub sub cmp mov (bad) movsb mov das sbb xchg sub adc push pop jmp fwait call cmpsl out mov (bad) pop mov jp dec inc xchg sbb xor and adc jns lods xchg pop ds cmpsb xchg int or sti mov (bad) mov cs mull adc repz test jmp int sub jo push push (bad) or daa pop mov mov clc hlt cmp cmpsl leave (bad) cmp mov nop icebp daa dec fxch test loopne movsl cwtl lods fisttpll push push or pop into imul (bad) jbe imulb push (bad) out (bad) pop push into fucomp sub or push xchg icebp xor cmpsl je cmp and pop push dec cmp fstl inc pop clc adc outsl mov (bad) (bad) lods mov cmp ret aam mov or sbb cwtl leave lahf ss lods insb fstpl lds pop out mov adc pop ret or bound dec pushf imul sub int3 mov mov in out outsl pop push ss mov jae lret sub es xchg inc mov mov xor sbb test dec sub inc push and pushf jbe int3 inc sub leave rcr bound jnp pop sub or cs iret ds dec les mov lock sar lods push cmc push mov mov push adc sbb sbb xor xor jmp push sbb fild sub inc xchg cs mov and daa and pop aad movsb in dec shlb insb repnz ja mov test ljmp xchg dec sahf add cmpsb push pop jbe (bad) cmp (bad) jo (bad) lock push lods mov out jnp xchg jecxz loope fadd lret sub test or xor jno mov stc outsb outsl xlat lock push fs fs sub jecxz dec les sub sub test fucom jbe push pusha push inc loopne adc pop jae xchg xor data16 mov add popa test out mov in sbb rclb lret and add daa (bad) pop mov mov sub inc xchg stc dec or mov aad sub pushf int adc stos sub cld jge ja in ret andl sbb in das lds xchg fldt lods or jecxz leave xor cmpsb and push push mov sbb inc cmp into clc cmp xchg cmp xor shrl mov or mov es pop push movl es fmul lock inc inc test push data16 cmpsb std and mov pop push (bad) test enter xor adc scas add movsl fldenv sub mov jno data16 stc sub out std lret mov subl mov xor sbb add shl sbb shrb mov jle pop loope (bad) fst dec push es imul pop lret mov mov ret xchg inc (bad) push inc ret xchg sub mov mov cmpsb cmpsb out inc mov mov por addr16 inc pop cs push mov loopne push movsl adc popf loop dec arpl (bad) cwtl or sub pop int (bad) loopne,pn xchg mov xchg insl ja jb int inc stc xorl adc (bad) sbb das aam sbb enter in scas push push xchg jo push fild int inc pop jmp sub test cmp rorl sub int in sub xor stc push adc int dec mov gs pusha push xchg outsl pop mov jge out sub adc jbe call or inc xchg jl aam xlat add inc ja or xor bound iret cmpsl xchg aaa mov loopne (bad) (bad) ret jg inc fisubrl lcall ss aas or in cmp out jmp enter sub cltd subl loopne or and repz mov sbb test or inc push mov xchg push pop les movsb xor sub icebp xchg xor push cmp jl cwtl mov mov fmuls pop dec ds mov jo call jg mov lods imul xchg leave jmp jecxz leave std jno iret add (bad) test pop pop pop fsubrl test jp adc arpl into pop lcall sbb cmp dec cmp aas mov int3 jmp xor out ds adc sub testl jne (bad) mov xchg scas sub pop leave aad enter arpl pop jg shlb dec (bad) jnp mov pop mov aaa fisubl rol lea leave negb inc fisub sub push push add and fldenv sbb or fisttpl pop sbb sub mov jmp adcl inc xor aas sbb mov icebp js lds int in mov cld jmp pop sub inc (bad) ja (bad) movsb xor (bad) rcl iret jno loope cli sbb dec (bad) adc jno add sub xor sbb or and ss xor call es stos mov es jno jnp and int3 clc xor fnsave inc stc mov rcrl enter clc lds or (bad) fild and push mov lret (bad) adc imul enter test xchg cmp xchg jne jle leave sbb or jg pusha dec imul aad arpl push in cmpsl pop ret xchg (bad) sbb test sbb fcmovne pop jl mov mov lea fstps push cmpsb ret mov pop enter ds movsb (bad) sti mov loop pop mov imul adc ljmp ja adc xlat jo jnp add dec xchg dec data16 xlat adc rclb or aaa jp push jl stos in push mov xor ret mov sub int lret and xor arpl lods push addr16 test mov loope pop out in sub jle jno adc lds nop subl jae dec add inc inc imul sub push (bad) pop add xchg mov sub dec popf or jle rcll sub mov mov sub (bad) dec push mov adc jbe inc daa push or sti jmp call pop stc fwait push ficom adc mov pushf mov cmp cmpsb popf push shll cld movl dec dec je cli incb lods into sub rcrl mov (bad) lods or or lea (bad) mov daa in ret je cs jne imul int and mov aas jg es jb mul ljmpw sub xchg inc sbb out pushf sbb and out fst jae sub orl lahf mov xor jno dec adc aad and pop js inc inc and or or mov shrl mov icebp jns lret std xchg jl shr mov push sbb inc dec inc xchg leave sbb add dec mov fisttpl mov xorl mov dec out fcompl dec push test jmp cmp (bad) xor into repnz inc sub pop jb int sub dec test jp cld stc dec sbb data16 push (bad) mov jle sub sbb leave ret pop sub jecxz xor test ds repnz leave jg cli push mov fnop movsl inc mov lret sub pop insb lods mov aam xchg jae mov sbb xor mov inc pusha add loopne test int3 sbb mov aam or out or cmc roll loope cmp pushf sub int sub mov adc jo movsl and sub pop cs mov loop daa adc or lods mov loope xor xor jle mov push jnp cs sbb mov in xchg cmp dec dec add push ljmp test jae jg add pop inc aaa int lods mov aad adcl jbe inc sub adc jbe loope pop xor loope mov roll cmp pop hlt inc je movsb inc push ret jnp mov loope sub imul test mov fdiv test cmp data16 push xor leave out je pop jp dec lcall (bad) xor test aaa and push js in pop fwait enter int sub mov sub fldt push scas jmp sub imul adc test cmc mov test pop (bad) dec mov rol fs sbb ss and and sbb pusha mov sub ret cltd xor insb inc fiadd xor cmpsl sub sbb pop ss aad mov jne stos inc push sub repz pop or lret test ja jmp mov add xchg cltd inc pop std lods sub cmpb push sbb pop jmp mov adc cmp (bad) mov outsb dec and in add push dec js ret or out sbb sbb sub add (bad) sbb jge lea nop and lods push popf pop scas xchg sub push cmpsb jge insb jno mov out xor push lods addr16 sub jl hlt push repz lea (bad) lods bnd aam pusha lods bound test fisubrl or or mov dec sub mov (bad) sub in out or mov cmp imul cmp lret or inc sub push xchg int3 ss imulb ror jge leave push jb sub faddl sub int3 jl pop push (bad) divl int pop in pop std sub pushf pop sub xor jecxz mov ret xor jno sub or cmp mov movsb sub jmp cmp fldt jno sbb mov and cmp iret int add cmpsb and bound mov bound dec not sub and imul daa push jg xor lods pushf in inc mov fwait and sbbl add pop sub outsb jnp push push int and push mov sub loop (bad) sub sbb jno sbb mov sub mov push repnz mov adc lcall or (bad) mov scas lcall push push pop lock insb addl (bad) or jnp cltd ret lock (bad) fdiv test (bad) test cmp add rolb mov or gs cs cmpsl push or inc adc ret cmp inc test shl jge lea cmpsb mov push (bad) xor jg xor stos jmp inc xorl push jno cmp sarb ds xor enter push cwtl inc dec sub pop xchg mov lahf enter or sub sub cmpsl leave cmp pop jnp pop push jns sub lret jg inc jo mov imul gs cmp add (bad) adc mov stos jg popf push push mov cmp sub es and in icebp cs xlat fdivr in cmp cltd call pop adc cmp stos nop rcll jecxz imul bound mov lret mov sub jmp cwtl in icebp inc test xchg rorl bound mov fnstcw sbb dec sub add add or push (bad) or sbb mov arpl push iret fmuls inc sub in mov notb push adc xor ss testl add cmp and les aad push sbb or sbb fadds movb jbe cltd mov decl jge (bad) adc out pusha inc ss in mov mov daa and in ficoml cli je dec mov addr16 loope pop repnz push das outsl mov mov push push scas negb add add cmp pop pop test mov or push ss lods dec repnz (bad) sub cmp inc mov cmpsb stos xchg mov cmp xlat (bad) call jbe sub pop jb arpl and mov outsl push pop call inc jle push shrl sbb sub ljmp movsl and xor xchg test test sbb inc xor sub dec cmp adcb xchg in mov mov ss xor rclb je jns cs cmp pop cmpsb leave jmp (bad) push dec ficom (bad) mov inc cwtl sub cltd pop fadd das decb sub push mov sub cwtl lret jb fsubrl and sub add popf mov call test stos mov fsubrs push jnp daa ss out ret pop pop cmpsb pop mov sub ljmp xchg inc loopne xchg rcll xchg cmp leave jbe cmpsl and in cmpl pop test clc aam fdivs stc push mov jmp arpl ret adc lcall (bad) jae pop fidivl imul or (bad) push outsb dec iret or int3 ljmp mov movsl mov arpl xor mov mov pop movsb sub inc lahf stos jmp sub add mov mov or xor adc sub mov push mov test out std fnstenv sub xchg cmp into mov push sub adc jmp (bad) jp mov std into cs (bad) mov (bad) push jnp fdivrs test cltd mov and loope jbe cli dec xchg mov cmp adc iret cmp fistpll les repnz fwait aas sub ret (bad) jmp mov (bad) int sarl mov sub dec lcall jecxz mov psubw in mov mov (bad) aam xor test movsl call fist push mov daa sub push sub loope push cld lret sub imull push jbe cs cmp sub jg aas sub mov data16 scas jp test into cs std (bad) ljmp cbtw adc and xchg cvttps2pi dec cmp (bad) popa repz movsb jb pop scas dec icebp test jmp push sub cmp jmp xor je jns sbb sub jp sub lret inc xor in dec iret addb ds je or ret mov hlt imul xchg addr16 and fdivr mov movl sbb scas xor inc or sub xor hlt cs fstpt lret lret pop add sub mov push imulb aaa mov lods popf sub enter add sahf xchg inc mov fcompl cmp nop xchg sub fildl (bad) inc push sub mov sub jb ja xchg mov fdivs (bad) (bad) sub lods xor sti (bad) jg cmp adc mov movsl push push push xor imull notb loopne into outsl (bad) rorl pop sbb add cld imull mov call das sub scas fildll les (bad) je adc inc cltd rcrl je push inc out fnop aad fsub push mov cmc mov jno lds and fs test and insb ja cs (bad) int xor jg das (bad) inc sub sbb nop sbb add aam jmp mov (bad) xchg mov mov stc movsb add sbb std dec mov pop bswap cmp out push ja insb mov test outsb fcomp scas dec ljmp mov xchg pop sti xchg cltd sbb add push leave mov or out push xchg push mov cmp out rolb gs into lahf push leave push adc lea cmc pushw aaa incb outsl adc leave push push lods xor shrb cmp pop dec pop sub mov int dec mov leave mov cmp movsb movsb dec dec aaa lods in cld movsb or adc mov lahf imul add out call cwtl adc adc push pop cld (bad) cmpsb ds push jge mov adc sub dec dec das stos std imul sarb dec leave add sbb mov arpl and mov popa sbb mov out rcll int insb or mov iret cmpsl mov push jo xor xor dec rcrb inc xchg leave ljmp fadd and sub add pop add push sub inc xchg aad iret mov xchg in jg sub jb xor sub inc sub mov (bad) jnp cwtl lret inc rcr cmpsb inc scas sarb test sti sub dec ret xchg mov in hlt mov mov faddl inc cs push pop addl xor dec sub ret mov pop cwtl cli xchg sub sub add xor (bad) insb and mov cmp sub mov cmp bound inc mov push and faddl es movsb (bad) movsb pop fidivrl mov pusha (bad) or cld das dec push fs daa mov sbb cs mov or loope,pn stc cmp (bad) xchg inc sub aas jb in inc mov popa or push mov cmovg scas in bound aas or andl dec imulb jl les sub outsl out add push sbb push lods or jmp cmpsl out fwait xor mov sbb xor sub out cld add lock popa add scas lods adc int3 push cmp dec rolb inc mov ljmp sub jle pop jmp sub dec aad ret mov out sbb sub jmp divl pop mov push sub mov inc jne sub lret sbb sub cwtl mov xchg in mov lods sub or ds sar mov mov aam lods cmp mov lret gs jp imull shlb sub enter mov leave sub cmc push mov sub imul xorl leave add mov pop das sbb outsl sub or or cmp add orl sub in je imul shll frstor (bad) in dec xchg inc xor imul cmpsl push sbb arpl push xor sbb loopnew stc std pop lock sbb and leave lret stos sbb adc test mov jecxz cltd scas daa cmpsb sbb dec insb fisub sub jmp add mov sbbl sub jne or sub sti push pop jno xor cmpl xor xchg inc mov push pop xor inc leave dec lods loop das pop mov dec inc bound xor sbb stc (bad) push and cmp lock jb popf or adc sbb sub daa push inc leave jp test lcall mov movl jp loope enter push mov int lahf push mov (bad) adc mov ljmp clc adc sub add movsb or sbb out cmp or cld fs in add lods repz xor mov jnp adc sub shr dec das pushf fiaddl test sub data16 ss mov push add pop xchg cmp dec cmp es aad inc mov sahf incl dec mov clc and (bad) outsb bound aas cmpsb loope push fild dec push in loop jo sub sbb fdiv sub and cmpsl pushf mov pop rcrl lahf mov xchg ss jno inc das pop icebp mov mov movsb cltd and subb and mov xchg mov and fiaddl mov cmpsl sti xor add gs clc (bad) iret adc fnstcw sub shlb mov test inc in sti mov test sub xor mov pop icebp cwtl mov test int fsubrp inc sub mov data16 std mov sbb inc adc pop cwtl das test (bad) jne rorb cs test out rorl dec inc cmpsb sub or inc addr16 imul mov (bad) (bad) mov (bad) mov mov cli mov adc (bad) iret and cmp jmp adc cmp mov dec add sub mov and das insl stc (bad) sub pop loop push pop sub ret dec jg out push call sub cmpsl movsl in imul xor dec cmp movsl imulb cli inc sub xchg icebp pop dec (bad) movsb add add xor sub outsl mov fsubs inc rorb adc sahf and push repz sub in pusha mov push jb inc pop xor in sub push test cmpsb adc in std dec add jp push xchg ljmp mov stc out adc mov mov mov adc mov stc daa add loope jge bound sub jnp (bad) out push in pop sbb xor test dec cmp lcall ds out inc xorl xchg rolb data16 lea sarl and and adc aam insl std cmpsl out push push sub jnp sub stc push pop ss imul xchg push and cmpsl dec sub mov jo or outsb int3 adc xor mov mov add (bad) cmpsb es pop loope mov push int mov out loopne (bad) cmp sbb lahf add jge or lock or sub mulb lock jns test gs mov ret cld xchg (bad) jb sahf sbb out cmp aam mov mov xor push adc xchg stos addr16 movsl int sub sbb xor mov xor scas add jp leave dec rcrl sbb add pop clc data16 mov pop icebp (bad) mov in scas int movsb adc push int3 xlat fadds jp jp lcall dec sbb xor sbb xor imul sub test lock ljmp push pop insl inc xchg mov arpl call xor xchg movsb test sub pop mov mov mov lea push pop pop ficompl pop and lcall lds adc push sub (bad) xor fcompl cmpb daa movsb loopne imul jle and imul cmp mov ja cmp mov and xchg pop pop (bad) std mov push sti xor daa dec mov and xchg data16 jno rcr nop mov faddl movsl cmpl sub cld xchg movsb std enter mov stc lahf lret xchg push stos cmp inc sbb dec push mov jne aaa xor sub shlb lock xchg lret leave xor leave push cmpsb ja int mov add dec push jle inc sbb stos or mov loop out fmul dec loope iret outsl sarb (bad) push mov lret sbb daa jp add int3 pop inc lea aad xchg (bad) xor cwtl pop movsb push jb and rorl mov int out mov xor xchg sub leave mov mov push jne mov push push icebp (bad) imul add cmp jnp ljmp mov sbb add sub ret out std mov les mov xchg xorl push mov dec push or (bad) mov inc dec sbb mov xor movsb out leave lds and insl mov sbb ss lahf mov loope sub les jmp shrb jno inc add arpl shll jmp divl xor and mov and nop mov cmp ja js bound cmp jnp rcr dec aad call cli in js xor sub fisubr adc divb cwtl icebp jg es sub pop repnz ret bound sti sub (bad) sub popf xor sub push push push inc gs sub xchg (bad) addr16 jge sbb add repnz lock aad jecxz je,pn xor shrl jmp pushf adc shrl and xor orb pop mov sub ja adc mov ret or cmpsb aam popf test sub dec xchg cmp mov push pop or aad pop (bad) xor stos lret add insb cmp adc push shrb lods dec mov inc out jge push sub adc movl jmp leave cmpsl repz cltd jecxz pushf inc pop cvtpi2ps mov shrb clc dec cmp pusha sub cmp xchg (bad) fldt add fisubr sbb sub inc or out (bad) cmpsl xchg cmc mov sub (bad) inc aaa xchg movb or psubsb mov sbb call nop jl jle leave sub loopne or inc or jp pop ljmp sahf (bad) cld sarl (bad) stos fwait aad jl push nop mov dec bound cli dec jnp adc xchg es out sub sahf sbb sbb mov jae out (bad) push test xor mov lock push jg mov leave fldl fcmove (bad) and cmp hlt dec leave mov jl or xor leave xchg xchg jb jns mov out and sbb push das dec add in and push loop push mov nop (bad) sub cmpsl gs cmp out ja int ret ret leave mov pusha mov xchg pop push xor sbb aaa ja cmc aad dec ret pop sbb test dec (bad) (bad) incl push loopne dec inc jge mov dec pop fsubrs add loop gs ss push addr16 pop fcoml (bad) rcrl das xchg cmpsl sub and push inc mov lret lods sub pop or fwait sar loop popa ret jnp xor jnp out push push push jb outsb xor imul int dec jg dec adc mov sub mov sub pop icebp lods sub mov sub mov mov jae cmpsb sub movsb clc popf mov push push dec push lcall mov jmp jae cs (bad) dec fstpl hlt or cmc sub out jge push int ja bound adc mov imul addr16 data16 cmp roll add lcall out arpl pushf lods sub jl in push gs leave or in fcompl lahf sbb dec out pusha jecxz and test andb in xchg mov inc sub movsb cmp add push pop mov and cmc rclb pop imul jl jns push fs aad and xor mov inc pushf xchg sub pusha push mov or xor imul sub mov push jle cmp out stos mov sub sti in xchg (bad) mov outsl pop sub add cmc sbb cmp rcll sub jge pop ret and sub sub sbb loopne nop (bad) ficomp or push sbb ficomp in repnz lods out sub mov mov imul adc sbb movl mov inc mov pop adc ds pop fdivs mov stc aam gs test mov in icebp mov xchg sub repnz xchg movb inc sub cld lret or cmc sub push imul sbb pop fild test cmp xor popf sahf dec xchg adc mov and xchg sub pop inc xchg cmp adc pop icebp fucomi das cmc rolb pop ror sub add sub cmp sbb dec cmp mov sbb sub xlat jno push and idiv aad cmp add or and lods leave divl js sbb lret jmp sbb clc push or gs fsubrs and orb cmc jb jae and lods outsl fstps sub (bad) and xor fcoms pop out sub pop lds push sbb mov (bad) jb sub push repnz nop push push sub xor dec sub scas mov std push jns mov sub mov sub (bad) sbb sub push lcall mov push imul (bad) fimul sub clc ficoml iret sbb sub and inc loopne add jl push scas cmpsb lock mov cli xor or adc test jne sub mov push daa jl test sub inc or iret call lcall or inc push jns into clc push jle pop sub dec jmp frstor add push xchg arpl rep andl fild aad xchg fisubl jns iret adc add push daa (bad) mov push lods cmpsb arpl rolb xlat push ret mov and inc add sti mov lock inc jb xchg push mov xchg mov in ds cli testl lcall push scas mov sahf loopne test stos sbb sbb cwtl push jno jbe (bad) mov bound sub mov fcmovb out pop adcl out and inc add scas fwait mov add push bound dec test cmpsb mov xchg jge fildl and mov dec add js sub sub xlat dec in push push pop and out lock cs xchg sub and sbb leave mov mov add call cmp inc or xchg mov cmp jb pop sub push add pop mov fucomip ds xor divb mov adc in jp (bad) loop jb dec pop jnp mov fnstcw xchg loope jmp imul stos and inc sbb xor movsb jo adc xchg jns movl andl loop push lahf in cmp pop lahf add xor mov cmp cmp int jbe (bad) cld pop das mov in aad aad mov mov push cmpsb jmp in mul shll jo mov mov xor adc adc fcmove dec fldl fidivrl mov loop imul test ss xor pusha pop pop cmp loope push and mov push leave cmp in sub popa lahf and stc in imul inc leave push sub out xchg sub mov fsubrl mov xor les sti or outsl test clc ss mov dec jecxz sub xor clc rcrl lret or inc or xchg add or pushf and xchg inc insl xchg xor stc outsb mov xlat cmpsl jge sub pushf cld fmuls icebp arpl or leave push and out xorl mov jns (bad) sub xchg xchg add aaa fidivr mov mov jg jae nop xor mov call sub faddl bound xchg dec mov push push xchg xchg push out mov and dec fisttpll stos out ja or fmuls sub sub pop rolb push push or and dec mov sub int mov adc out fdiv cmc inc dec add jg mov (bad) sar or mov pop leave aam mov xchg call test in cmp scas pop push ljmp xchg cmp and xor jecxz loopne out rclb xchg test xor es mov ds (bad) lds add mov sub je repz dec aam stos pushf sub movsl cmpsl addr16 push xor xchg or scas std xchg fs data16 dec xor xor sbb (bad) aaa test (bad) sub jge mov fmull insl and push in and xor (bad) daa pushf movsl rorb jge and cmpsb pushf subl cld sub (bad) xor aaa and sbb xor push lods icebp sbb (bad) je cwtl jae (bad) jbe and add sub or jbe and andb outsb std pop cmpsb ficompl js mov int jmp inc test sbb fbstp bound leave out mov xor ja and or push mov or mov xchg inc int sub sbb dec das (bad) repz sbb mov jecxz sbb insb push jnp cmp mov fmull pushl fst mov std bound inc push xlat cmp pop aad cmp sbb into out jle daa cmpsl fnsave jp cs add pop inc in mov push lret pop mov cmpsl dec xchg and push sbb lcall adc cmp test push insl xor fildl daa dec fwait in xchg ret xchg push js mov loop inc int mov sub (bad) pop dec dec xor dec lcall aaa mov int add pop mov sub mov in jp mov cmpsb lcall adc inc xchg jmp add out stos pop enter shr hlt adc xor insb mov fucomi dec lds sbb das jle and xchg add scas hlt push stos fwait xor mov push leave (bad) mov sar fimul push sub sub sbb mov sub sbb sbbb adc jne fwait mov enter push lcall sub es enter push ss or xchg pop ljmp add mov arpl push push lods inc lds or xchg cltd adc cmc rcl mov mov lret sub lret loop rcrl cmp jmp sub jbe bound pop push divb or xchg or ss test jmp call cmpsl jp mov jg sbb push jecxz jmp push pop adc test add xchg test inc cmp jge sub rclb notl rolb out in daa das sub add (bad) jmp jo pop iret jge int scas cltd cmp jb aas mov and inc sub (bad) out sub mov out inc mov icebp in not fcompl cmp imul out push push cs jne shrl lahf dec adc jle bound ja inc in fwait sub mov in mov sbb fs mov pushw leave and lea pop insl aad pop mov sub lcall test daa stos mov push pop mov dec jl into notl outsl inc addr16 rcrl mov data16 test sub cmp pop sub cwtl xchg jl sub cs in xchg and adc mov xchg pop lds or add fimul and sub fisttpl mov push (bad) or jle dec pop pop pop decb daa stos pop (bad) pop (bad) inc test sub rorl mov jbe xor push cmc sbb pop push out or out pop fxch mov (bad) sub lcall inc lcall pop cs or mov popf aad arpl fdivs mov je xor mov inc cmp inc xchg jmp xor and cmp sub xor sub clc mov xchg ds adc es xchg notl push scas call test daa ret fldcw push movsb imul sub std fisubl cmp je mov cmpsl jae ljmp xor and pop xchg mov mov repz fsts mov push ss pushf jo test xchg push cmp iret push jns rcr xchg push push sub adc xchg cmp addr16 ja addr16 or adc jge imul xlat lods dec into lds push sbb sbb int push int3 mov clc pop jae jle cmpsl sub outsl scas push addb pop pop sbb (bad) popa test or add ret xchg scas nop jg sub arpl lcall dec adc dec repz iret mov adc pop sub xchg mov outsb sub icebp adc imul aad push jno sahf or pop in mov mov cmc mov dec (bad) sbb mov lock rcll shlb mov cs loop mov push hlt test push mov rolb inc fidiv inc add xor mov inc rcrl (bad) enter fcoml sub (bad) inc lahf sub mov imul pop sub cltd sub sub jg xor pop lahf jmp div inc fsubrs or test (bad) pop in sub fsubrs cvtpi2ps dec and xor repz and inc xchg mov test or aaa mov je xchg fwait add xor sti or or (bad) ja dec stc inc sub aad dec adc (bad) mov mov sarb pop orb addr16 fnsave cmp sbb and mov subl push (bad) stos push lea dec xor test lock pop sub xlat hlt imull dec xor mov data16 sub mov sub scas (bad) lret stos flds sub sahf mov pop sub stc fbld and imul jns repz sahf int push scas aad mov inc test xor ljmp cs js or push push cmp insl xlat mov dec int sub mov inc mov sub (bad) ss jnp test sub out pop add or jae mov lds aad in add (bad) cld cmp sub imul sub xchg punpckhwd jnp cli mov les push daa sub push pop fiadd lock fbld cmp aam jmp and mov push push idivl cmp movsb in push xor rclb sub mov sahf ds or aaa adc aas jg mov sarb enter sub outsb fmull sub push inc mov (bad) call inc sbb push cs ret lds mov jnp sub nop push lcall cmpsl sbb movsl mov jnp sub xor cltd das adc cltd jp sbbl sbb jno xor imul inc leave adc dec push pop xor push add sub xor stc adc or jg cwtl iret push and sub popa pop hlt mov mov jo and fdivl add sarb (bad) push stos cwtl popf dec push cmpsl xor mov sub outsl pushfw repz jo add cld insl adc dec mov add sub (bad) xor imul movsb call pushf fdivrs cmpsl scas aam shlb pop jnp fbstp adc cmp into xchg in mov lods sti mov jnp dec imul pop mov inc notl cmpsl icebp cwtl (bad) stos sub fcomps jmp mov jmp fiaddl cmpsl pop out pop add sahf cmp out inc sub ret fnstcw outsl sub cmpsl dec xchg or lds cmpsl xor pop (bad) inc sub jb fidiv lcall adc or or sub cmc push or in cmp lahf push sub rcll add sahf xor adc push stc test dec mov mov xor in imul pushf je out fs or xchg jbe pop loopne (bad) (bad) sub repz adc add mov lea (bad) repz shrl xor loope loop sub mov daa mov sub cmpsl gs or rcrb jmp mov aad xor es push inc or pop jb jnp mov (bad) fmuls mov jg outsl inc push sbb xchg sub sub push and ret imul popf fidivr xor mov cmp or pushw dec in bswap enter xor pop pushf or inc mov outsl xor leave test mov jo,pt pop fldcw outsb pop popa mov test mov pusha gs mov adc ja and sub and jl bnd or ds les sbb sub outsl hlt lods push into xlat push cmp xchg sub sub jnp xchg cs jne pop add out mov (bad) mov movsl aam sub popa pop and ds mov outsl dec fnstsw lea test and xchg mov test std xor fisttpl adc or push bound xor fcompl jbe int in loope dec lea sub mov fwait scas out xchg (bad) mov jmp pop enter fisttpl and push adc popa imul aam shrl test data16 movsl mov ja sub sar mov aaa fabs sub pusha sub xor sub pop imul jecxz (bad) mov mov cli inc sub xchg sub repnz adc add lods leave into xor add jle jl mov cwtl imul xchg pop push or jp mov xlat loop mov aas stos xchg inc icebp xor outsb add mov sbbb ret and mov (bad) (bad) or adc sub movl call pop cmp cmpsl or imulb pop mov fdivs mov test es sub jnp movsl fst sub inc pop adc lea or jl ud1 cs pop out adc adc enter push arpl sarb (bad) sub addr16 dec repnz or cld jle mov cli adc xchg and jmp mov cmp shrb pop inc out mov outsb pop sbb adc les mov inc add or sub je jns add fs (bad) lds test mov push data16 dec push out mov add fsts loope inc loopne bound addr16 sbb rcl out xchg dec ret mov mov mov or adc pop gs lahf add xlat and push mov pop sub mov outsb add sbb inc dec subb rcl bnd lods or sub loope jbe xchg cmp lret test es pop pushf (bad) xor add sub sub clc mov sub shr (bad) dec inc bound cmpsl push decl rclb xor (bad) push hlt mov inc insb sub js sub jns push popa add cmpsb inc movsl or sub out les lods mov pop in sub push sub add add ljmp mov flds ret mov adc cmp in fldt xor int or scas outsl jbe xor sub test cmpsl xor sub (bad) or mov sub enter outsb stos std cmpsl out pusha movsl and je xor pushf jb cmpsl shlb xor es jecxz cmpsl inc sbb cmp add cmpsl xchg fist adc sub jae xchg out sub mov clc pop or roll lahf mov (bad) sahf jle data16 sbb nop fistpl push or test mov in std shll popw daa les pop daa not add xchg jbe pop xor push sbb imul mov mov pop inc adcb mov mov lea pop into sub leave (bad) in arpl xchg aam mov outsl add xor inc xchg push xchg stc fcoml sbbb xchg and cmp add dec push out pop icebp ret cltd jne cli sub jg ljmp or in aam je pop loopne add (bad) jae cmp cmpsb mov aaa or adc mov test pop adc test xor lret loop pop pop pop xchg sub clc cs jns cmpsl (bad) jae push orb out xlat movsb daa or pushf arpl mov push mov push ds cmp mov stos or sub jg push clc inc push and jnp push fisubrl add lea call push subb das popf xchg cmp mov in cld mov sub cmc daa mov pop jg pop lcall sarl fiaddl int3 add inc fnstenv sub xor rcrl and std fiaddl mov in fild dec sub add out or scas fnstcw mov xchg sub xor repnz ja push cwtl mov data16 cli scas fwait jne fxch test fild inc jmp inc aas mov sub mov xchg jge insb outsl sub cmpsl sub and push divl sbb int stos into ss inc negb das sarl xchg and pop cmpsl out sub cltd bound mov jns mull sub sbb cmp sub adc or fildll stos sbb nop (bad) xor sbb xchg cltd ds test loop sub std scas (bad) (bad) int3 push lcall jp cmp sub flds loopne cmpsb mov lods push hlt (bad) pop mov ficomp and lods push pop mov mov sub sub jo (bad) jbe lcall and test pop or sbb mov (bad) xor adc mov mov or push push sbb in adc xorl ret sub push sbb ss xchg mov dec ja idivb mov adc sub adc jecxz push pop enter xchg or out xchg mov xchg mov cli (bad) jmp sub and push divb inc or sub jno sbb sub loop xchg sti or dec dec lods adc test cmpsl imul bound sbb lcall aas pmullw scas arpl sbb inc (bad) fsubp sub sub pop push ja sahf pop (bad) push pop or xor lahf (bad) mov (bad) push add fldt movsb and push jo or int adc rorl popf cmpsb inc das jl cmp push out cld sub pushf fisubr sub lods addl cmp mov adc out sub lret fsubrp jb (bad) repz cmp sub jno es pushf (bad) and fldl xchg stos iret sub sbb pop outsl sub cmp aam mov dec or jp xlat hlt in jbe sub jns (bad) dec xor (bad) out or add arpl mov xor jl jnp and sub sub xor (bad) xor pop cmpsl cwtl int test into sub mov xchg mov sub int aam adc movsl sub movsl sub mov mov and push pop mov push fwait sbb lret ss insl (bad) mov xor cmpsl cli push std es mov inc test or (bad) imul out lods xor mov cmp int subl js xchg xor adcb (bad) xor xor inc dec push push adc dec jb sub shrl push mov cmp adc xor cwtl leave push jle sbbb fmulp lahf insl call (bad) xor ss pop jbe jns (bad) mov int into lock cmp gs loope (bad) dec mov aad sbb inc leave incl out addr16 and inc mov movl aad dec mov sub and adc int push xor adc mov cmp mov jg xchg cmpsl out (bad) dec imul jbe shll cltd lods pop imul rclb dec jl fld1 call mov fildll loope insl dec shll sub sub ss or cmp cwtl stos pop and (bad) xchg cmc inc adc jle shlb or addr16 pop imul sub or jbe cmpsl xor dec mov pop data16 dec lret xlat sub std int3 push jl xor rclb push (bad) leave sub test sbb popa arpl out cmp scas inc mov xchg out mov mov bound sub push jne les movsb sub mov jg stos push push sub stc jg int test push lahf push notl jmp aaa ss adc ret mov and mov pop push icebp ror addb test sbb nop fmull and mov nop cmpsl rcl jne lret (bad) mov pop adc out pop insb sub ss jb pop or sub pop test sub push sub stc aad jecxz dec jb jne adc sarl sbb dec hlt pop jnp or call pop jl pop insl adc repz sub lret sub cmpsl mov data16 adc sub mov sub addl mov sub xor out (bad) inc mov dec xchg xor imul roll and gs xor ss fidivrl pop inc (bad) sub cmpsb das fist mov cmpsb loope push push xor push mov stc mov js cli cmp xor sub adcl cli push mov outsb out lret push jnp mov xor sbb cmc jbe or cmpsb push fstl popa imulb sbb mov data16 fisubl es xor stos pop xchg rcrl jo,pt inc push and and std adc dec sbb int test cmp das std inc in sbb (bad) in addr16 sub cmp pushl aas add int3 pop pop inc and and mov leave xchg inc mov sbb call adc xor inc dec jo aam pop push sub leave push jp dec or pushf push or fildll sub cmp push cmpsl push adc sub mov lock inc fwait jmp subl rorl add sub jae push jbe lret mov rorl enter out iret imull icebp test cs pop repnz adc test push in sub and (bad) jno cli lret ss dec mov int mov inc pusha call lock bound cs and mov ljmp lock stos mov mov mov add scas cs (bad) sub pop icebp xor cs pop sub nop mov push dec add loopne lods xchg (bad) imul scas add sub push and jnp cmpsl or xchg pop sbb mov sub repz ficompl and js loopne or movsb in add push mov xor std dec (bad) xchg cmp push ds test addr16 movsb out ss outsl xchg pusha jl sbb aaa mov ds push push or sub cmp out inc xchg dec mov in jmp clc lahf bound sub pop arpl cmp (bad) xchg sbb cmpsw adc das sub and stos into cmp cld sub mov fnstcw jl sub mov pop push (bad) sub xchg push xor and push (bad) inc dec add push cs or idiv cmpsl dec movsb cs aaa xchg leave pushf in leave push fwait (bad) and fnsave rorl mov inc dec js loop stos xor jo jb push enter xchg (bad) rorl dec incb (bad) cs aas loope int sbb addr16 sub je leave push and jnp add lcall rcrb xchg pop call (bad) ds dec xor fimull inc mov or addr16 out adc inc faddl cmp jno leave mov sub jp mov idivl mov fcomps lock lea fisttpll insl dec int dec dec (bad) rcrl or dec add adc pusha scas sbb pop pop movsb sub sub xchg ss jae cs push test or or cmp (bad) xchg outsl aam ds jbe xor into dec and aad mov xlat jp lock cld dec mov push call icebp out sahf in loop xor push sub iret cmc sub fcmove lcall mov jmp inc dec push and daa sub loop jb int sub push mov and ja cs test cmc or jb neg push loopne and sub cltd or and lcall shrl jne push (bad) fdivrp jb push movsl fsubrl pop and and test sbb sub (bad) outsl rorl shrb and les test loopne xchg test mov cmpsb mov loop dec xchg outsb loopne sub out sbb les sub add rol cltd sbb mov or ss mov sub jbe mov stos pushf fdivl and scas or sub push and loop dec xlat (bad) sahf jnp imul lcall push xor dec fcoml incb cmp push dec adc lret clc pop mov sub shll push add pop pusha imul sub mov add sub call mov into (bad) int3 sub out dec mov mov je pop or ja xor push jmp shrl cli pusha out mov out rcrb jne push sbb adc lea mov push xor sbb fcompl daa (bad) mov rcll pop mov mov jns ds sbb mov push enter xor push jne scas sub push dec in fsubp push sub sti push ja jbe (bad) aaa out cmp push lcall test cmp cmp test push in jp mov push sub jne mov xorl cmp test test mov into jns push cs je sub movsb sti lret inc jnp jg push add int3 add mov mov loope adc lock push bnd pop xchg jge pop sbb stos sub addr16 push fmull jno (bad) pop cmpsl cmpsb add inc push jae leave ja dec inc push test cs nop addr16 lds arpl cmp add adc xor or call sub je push lods xchg mov dec lods arpl sbb lahf cs notb jge lea cmp add or sub jp hlt cmp insl faddl dec repz jg inc pop jo sub std mov jnp out cs rcrl or sub scas icebp push in in mov push jbe lods popf ljmp pushf out push sub and mov xchg mov sahf stos xchg xchg cwtl and push or outsl push push dec mov add out inc mov into jb insl xor push jp jg int (bad) (bad) mov mov push jo and lock cmp jno jge arpl cs cmp cmp jae add cltd dec jle mov push xor and push sbb fiaddl arpl pop movsl outsl dec xchg repnz dec fwait orb adc cmpsb sti ja cmp fldenv dec rorb pop ds and jmp dec add inc cmpsl int (bad) cltd bound and inc add sub mov pop stos int dec addr16 std cmp push adc xor push adc sub test movsb mov xchg clc mov out rolb (bad) cmp cmp or lahf mov scas daa movsl in fstpt leave push adc dec pushl add (bad) pop sbb jns xchg adc push adc call inc dec mull dec sub es imul insl pop test icebp dec call push pop movsb sub leave lahf int3 xchg imul sub push sbb ja lock lds clc cmp lods push push (bad) lret xlat js adc inc jg or adc dec imul sbb movsl insb loope adc mov jle hlt sbb mov jg sub or mov xchg mov push cmc adc test mov dec sbb sub xchg sub inc xchg stc (bad) cmpsb cld dec movsb xchg ljmp xchg sub add fwait lods cmp sarb pop fmull ret xchg sub xchg push dec cmp jp jmp inc and jbe arpl rcr cltd adc xchg xor push in daa sbb sub inc aad sub stos xchg iret jge dec in sub mov imul cli dec lahf int add cltd lods jge xchg cmpsl mov lods mov leave add cs clc arpl sbb sbb push es and shl mov (bad) mov mov arpl dec sub mov shrl jnp sub adc arpl xchg xor xchg pop in inc stos inc aas insl in or ret cmp ja (bad) fdivl es cmp mov movsb mov add imul lock or addr16 xchg bound cs cmpsb and std lret or outsl mov push mov mov (bad) call dec int3 int xor xor pop pop or cwtl push jnp mov and fldt int add jecxz inc adc outsb (bad) xor imul inc jno sub sarl dec push cli and fisttpl sahf mov cmp or mov popa sub push add pop lahf pop lcall (bad) in mov js jne sub ret add outsb fwait popf sub dec inc xchg mov bound (bad) sub adc jns call sbb jnp and add jbe mov mov add xor jg into pusha jmp cmpsb out cwtl push sub push jbe sub repnz inc mov jmp inc add mov andl xor flds inc jecxz insb adc sub stc dec mov rcll arpl shrb pop push cld cmp (bad) mov insl mov and cmp sub (bad) pop in aas lcall sub inc sub dec push ret lea iret mov stc push xchg jle (bad) jb or jge xor (bad) cmc and sub or andl loopne mov cs fucompp inc cmpsb sub pop or cmp test or push cmp loope or add sub arpl sub daa mov mov nop fcoml mov lock ss jo in push sub sbbb aad xor xchg push daa out subl pop xor push or dec sub sbb xchg inc cwtl cltd mov cli lods dec jno xor mov mov xor lea sub mov js rcll jle dec sub out out arpl test in cmpsb in xor jne mov test sub lret and mov and (bad) add out or leave je sub or or adc add inc sub sbb out sub xor iret pop sub out popf xor data16 dec mov hlt jp movsl pop mov sub ja inc icebp pop sub (bad) ljmp sub mov cs inc add and lock lds jge cli xor pop repz sub cwtl mov enter add scas and jo mov stc cmpsb (bad) lahf fcmovbe insl xor dec mov ss pushf stos push scas pop imul jne adc or push dec repnz imul dec mov js rcrb jne push push or add stc (bad) lcall aaa imul dec test call das mov pop and xchg gs inc fimul inc pop pop je hlt sub xchg xor out push push jl jnp pop sub cmpsl orb cs fisttp adc mov push mov (bad) cmc mul add in or xor or jno,pn std mov (bad) outsb cmp sbb fdivl dec dec sub or push jmp mov ds inc cmp jecxz ret sub lock jae in subl cmpsb (bad) test mov inc pop test dec mov pop insb push sbb add loope and mov incb xchg (bad) or sbb sub leave jecxz and out sub inc push pop mov das jmp adc pop lock rorb jb out mov xchg xlat (bad) xor in cmp xchg sbb aad lds fs sahf xor mov imul mov out sbb cwtl dec mov or cvtpi2ps repz dec aaa xchg sub ret lods pop sub push push test insb add das sub ret ss lods mov cwtl xor (bad) xor add pop js push sub mov dec jo push jg jecxz mov cmp scas out and sbb pop push stos fisubr shlb mov out mov and stos sub in and and push xchg dec aas xchg jmp jo fcomip aam data16 insb pop fldcw mov dec sarl xor je cwtl mov push mull fmuls enter xor cmp xor testl inc add add xor mov scas cmp mov in fs ljmp lods dec sbb jnp les mov adc int mov pushf mov sbb (bad) sub dec stc adc cmovbe test dec insl xchg xor xor cmp mov (bad) cmp jmp lock leave and inc (bad) pop push fdivrl rcrl cmp mov adc fildl fldenv ljmp pop push and pop mov jle jl xchg and sub out mov push cmpsl pop fsubrs std push sub dec imul data16 cmp sar mov push inc in fisubr (bad) int lock shll imul (bad) cmpsl jge insl out adc push push inc sub outsb (bad) dec ss int aam cmp cmc test sbbb or jo push cmp sub or cld sahf test pushl sti icebp pop push arpl sarb lret sbb xchg push sub pop mov fnsave pushf inc jmp sarb cwtl in (bad) pop xchg and sub xchg xor or mov dec jl jno xchg loope dec push lods sbbl clc xchg push mov cmpsb int bound in jne insb pushf insb jnp sbb or dec test cwtl sti in or pop pop mov pop aad je data16 ja sub inc pop push pop cmp mov inc push mov addr16 daa cmc in into (bad) mov push ja test cmpsl out adc adc movsb jl cld or imul inc adc test xlat andb jp jns xor out movsb sub mov push aaa cmp pop in (bad) fs cmp and int sbb or sub and out mov mov std mov sbb sbb sub mov pop sub and pop lahf stos mov xchg xor jo ficompl arpl or int push push inc dec sub fsubp inc jbe rcrl sub push les or dec mov push (bad) es repz add mov ret adc (bad) or add dec mov fs mov sub jge pop aaa push addr16 stc (bad) push mov cli push inc (bad) adc imul jns mov jmp test enter mov push cld jae inc sub int3 std and push xchg repz insl mov jns outsl fnstenv sbb cmp adc mov daa paddd dec sub add xchg aad loopne test dec mov aam in cs push xor jl dec adc sti push hlt (bad) subb sti push sub out and jbe xchg adc fisttpl and push test xchg cltd jmp dec xchg xor out sub jecxz test or jg xchg mul xor jne sbb adc jl push mov xor and cltd insl push mov lock (bad) mov dec repnz sub outsb or mov and sub sbb loope sub adc and push pop movsl cs sbb loop cmpsl rcr arpl mov hlt inc cs testl pop popf int sub sub out push xchg mov inc or decl roll jle cmc ss je test bound push inc inc xorb mov dec movsl pop jg cli adc pop sbb ficoml dec cmpsb jb imul sub enter lods mov adc push movsb mov dec bound adc das sbb negl movaps int3 xchg inc js jl sub inc xchg mov cmp jecxz jne and ss xchg mov sub push cmpsb push outsl sub inc cwtl xchg cmp mov ret roll sub sub lea adc lods mov sub (bad) xchg adc or ret add fistpll xor push cmp xor or cs ret lods xchg lods popa cmpsb mov mov add add adc xor into xchg mov and mov (bad) out fldcw xchg (bad) notl in jbe mov in scas dec xor sbb push pop jne test and or test leave xchg pop push movsb aam dec call sbb push inc nop add pop jp add lret lock leave nop mov dec xchg mov xor mov xor sbb push in sub imul adc jle test into sub insb repz ss imul (bad) mov and mov rcll dec ret and (bad) fsubr movsb or jp add jmp sub cmp add inc add movsl jbe fldz fsub outsl or jp xchg and sub or push clc inc mov xchg fnsave jge push daa iret stc dec insl bound sub add dec je andb fcmovbe push ds sbb mov ljmp jae xchg into shll push inc iret jmp cmp xor push cmc daa pop hlt pusha mov mov inc sub bound shrb pop popf stos ljmp call push mov stos clc sbb bound imul js jo pushf mov adc out lret lock cmp adc imul daa dec loop popf add fucomi push enter dec mov arpl pop ret or mov dec pop mov sub dec add (bad) mov inc pop test add xlat nopl lret add scas nop add jo xorl je mov cwtl test bound jmp mov dec (bad) jne xlat orb mov jb inc push push sbb xchg adc mov and bound (bad) pop addl cmpsb xor xchg js sbb loopne add push adc inc xor leave daa xor divl jp in mov int xchg and fwait cmpsb push or out sbb int ja xchg jecxz loope cmp and ss pop leave fildll mov push jg xor insl lock daa dec lahf (bad) aas xor out cmp aam inc mov insl mov (bad) adc aad clc popa loop rcll stc push pop bound (bad) outsl icebp sahf push sbb enter adc fs xchg es or mov (bad) test test and adc push enter subl xor add sub pushf subl dec inc sbb cmp idivl sbb popa cmp inc cwtl push cmpsb scas sbb in mov dec add xchg (bad) fistpll (bad) out cwtl adc (bad) sti (bad) pop jo xor mov aas inc push jp mov sti push loope mov cmp mov fwait lcall sldt push inc mov push stos insl out out and jmp sub sub subl xor adc aad push (bad) (bad) mov (bad) push nop cmp cmp ja cmp mov aas cmc adc ret (bad) jp inc lahf (bad) jb or inc xor aad inc sub push xor mov or dec std movntps sub add mov jecxz (bad) sub lcall ficoml mov jbe mov cmc add pop mov cs scas adc pop clc pop adc xor outsb (bad) fwait sub aad cmp call es push push mov mov (bad) scas sub jae adc pop mul cs sub xchg cmpsl (bad) jb stos mov or jbe loope insb inc xor mov push rcrl dec cltd mov daa and inc mov frstor pop cmpsb and scas aas or jmp sub fcmovbe je or dec dec loopne repnz sbb push lret mov (bad) and orl mov xor sahf jae shlb cmpsl lea ficomp mov repz sub dec jg jmp cmc mov (bad) shrb sub (bad) ss outsl lahf in lret shrb pop cltd or mov xor or push inc push jecxz aam jle pop les clc std cs movsb pop mov addr16 jecxz mov sbb insl lods cmp cmpsb mov add js arpl jg xchg fsubrs jge adc ljmp mov inc sub lret cs (bad) ret pop push xlat js mov cmp adc dec mov cmp push jne push frstor lret cmpsb aad fwait adc mov ja mov and sub rolb push paddusb mov (bad) leave ss xchg cmpsl xchg xchg jecxz,pn repnz push xchg inc and inc jne adc push in mov scas mov lcall test shrl jns arpl mov inc inc test sub xchg sbb imul outsl gs push inc xchg ficoml lret ss clc cmp pop dec arpl cmp adc jb movsl test push cs (bad) (bad) movl sub lcall sub pop pop outsb stos call bound inc pop inc adc sub jmp pop jle imul and hlt out loop mov jae sbb mov jno mov xor adc jge mov sbb inc push outsl mov sub in inc les sub test sbb (bad) adc popf sub bound sub dec cmpl jnp sub xor jno data16 (bad) imul lahf stos mov pop test cmp bound mov (bad) and in call (bad) jo insb out dec andl push add lcall imul fwait dec scas pop daa mov hlt mov cmp sub mov stc cmpsl movsl jge adc push dec add jbe cltd xchg sub jl in xor inc pop stos inc out mov jb fstl inc dec and sti test ds out fistpl cmp in fisubl inc cmp push dec lods sub fcoms push sub fucomp mov sub pop and mov push imul push imul outsb out mov lcall mov xchg mov sbb fidivrl fistpl mov xchg insl fmuls int loop or lods and or leave data16 jo pop cmc aad stos lcall add sub sub enter mov call mov mov mov adc adc sub xchg xchg xchg mov xor ret stos push cli xor dec fisubrl cmp rclb sbb mov (bad) or and push jbe mov (bad) cmp cmp sub dec jle sub rcll sub in lret inc add mov mov mov mov or inc xlat icebp aad rorb mov cmp ljmp sub push xchg faddl dec xchg xor jne inc in jmp cmp fdivr out adc ret mov iret ss cmp sub pushf sbbl (bad) cmpsl or ljmp sub xor and pop test test inc or inc fadds adc dec add mov sub add push inc or sbb sub adc xchg adc jnp add (bad) push test clc daa push pop or jae sub mov std lcall leave lret faddl push aad cmpsb sbb mov cmpsl lods dec fbstp dec daa out jp pop lahf arpl std (bad) (bad) aad lds (bad) adc sub cmp hlt loopne out mov pop mov mov cmp movsb cmpsl sub cwtl mov loop lea lds dec jg jmp jp add (bad) xchg sahf ret dec out jb int (bad) or scas sub outsb (bad) sbb xor insb ja jbe (bad) mov push inc orl repnz inc mov xor or sbb dec aaa popa xchg or mov and push cmc inc mov adc xor lods sub jmp cs js cmovl sbb and mov (bad) sub jl jae cmpsl and lret add mov xchg mov or dec xor hlt sar mov xor leave (bad) lahf fild jg mov inc jb popa mov sar insl or push push test (bad) xor and push fisubl loopne rorb testl scas sub cmpsl adc push push aam int int inc je and andl stos dec push repz jbe cmpsl dec fild pop (bad) int cwtl mov cmp and sbb xor leave and test add mov adc lea into pop mov pop call mov pop (bad) xor push (bad) inc jp dec pop out test xchg int mov in jbe pop mov (bad) push sub pop mov mov mov cmp mov mov pop push jo testb in pop jno or das and push cltd ss outsb sahf sub or cwtl stc jmp aaa pushw and pop imul ljmp test icebp leave pushf mov pop outsl xchg loop and aaa aaa mov or movsl cmc in call pop cmpsl sub ds hlt inc adc jo popf cmpsl dec sbb ljmp ss out xchg dec cmp pop xor popa xlat xor outsl leave in sub fisub mov outsl lods mov jecxz dec sub add (bad) xor or ss push out leave lods stos sub imul dec orl (bad) (bad) in or mov addr16 mov ret mov movsl sub cmpsl out lods dec jae addl test xor jo sub sbb cmp sarb sub fistpl pop icebp cmp stc sub enter aad ret add adc mov sti lret pop cmp sub lret and sub test arpl push or fdivs cmp sub pop in cs stos mov xchg and jecxz lahf sub rolb arpl (bad) sub push movsb sub aas or pop fidivrl test (bad) and push pop mov das test adc in and mov enter sub push cmpl movsb in push jne jno mov fcompl xor mov lahf inc sub aaa in push sub in (bad) loop aas sub inc cwtl adc jno ss nop mov or push mov mov ret mov rorb mov (bad) push push in sub xor mov idivl out or lahf outsl pop enter aaa xor adc std shrb stos loopne das popf leave insb push inc stc dec rcrb xchg lock xchg and mov (bad) lods xor xlat jns sub xchg adc fwait dec adc lock dec nop pop test call movsl inc xchg cmp je add xchg xor scas mov mov push mov mov sahf incb dec test ds jnp loopne sub imul out mov jne dec jge mov cmp add sbb sti and (bad) ja sbb jae sub cmp out fidivl sub repnz xchg daa data16 sub jns fwait call xor sub and sti sbb (bad) sbb sub cld scas stc das inc sbb stc jb jb or nop cli rcl pop sub rorl dec add cld jmp jg push imul movsl inc test imul lret lods cmpsb sub arpl cs pop out outsl hlt dec (bad) test inc sub not cmp repz adc add dec fldenv das pop sti sub sti push fiaddl ret repz in pop and push sub inc in movsb test lods jne sub and sahf ror aaa stc stc fsubl inc fnstenv loope push (bad) cmpsl imul sub repz xchg adc lock jb leave in xor mov push aam addl dec subl jb sub dec mov sub imul (bad) into sti dec dec cs gs and and movb and cmp cs mov mov icebp test and adc jecxz xor pop loop and or fiaddl ja loopne cmp mov in pop or daa mov mov (bad) cmpsl sahf jb jp imul inc sbb push hlt (bad) popf mov cmp mov jbe,pn pop jo push xor lods scas inc ss popf fildll dec popa icebp pop mov jmp loop stc ja cwtl add jne jmp in push in decb and inc imul inc xchg mov test cltd mov add outsl xlat dec fdivrl dec std sub lds push icebp sub je sbb and mov mov xchg dec adc out mov pop mov add fsts icebp pop cltd add or (bad) out jb ss leave cmpsb jbe (bad) ljmp rol sub adc and push gs out sub and loope cmc cmp dec push xor leave fisubr popf and sbb in xor or inc mov fild loop lret sub mov mov mov push cmp in push repnz pushf mov cmp lock cmp imul rep sub enter dec fsts ljmp gs lahf xlat sub stos sbb cltd ljmp and fcomi xor sahf push xor es movsb xor leave sahf andl fcomi jl test xor scas cmp adc inc into scas jl sub out fisubr stos sbb sub xchg mov pop in cld daa out cwtl (bad) xor push ss iret jecxz call cmp div data16 (bad) lea xor xchg sbb xchg sub push sub or lods (bad) xor push xlat add cmpsl mov fs (bad) ds aad dec add pusha xor test lret inc loopne imul aad popa nop ss push lods stc lds cmpsb xlat mov mov cs mov lahf hlt mov test add lea inc cmpsl and pop imulb pusha jnp dec add dec mov daa divl inc add out xor data16 sub sbb ja (bad) inc and jp pop orl fisubr sti movsb sbb and push ja and stc xor mov cli cmpsl test (bad) movups loop mov xchg sub (bad) and subl in rcl (bad) or mov and ds incl add sub sahf pop out daa cmp mov push pop out fisttpll cmp imul mov push mov in adc sahf inc dec cmp in cmpsl push inc xor sub dec std xchg cmp (bad) inc ret test daa call adc leave test shrb cmp and jb cmpl xchg loop,pn push sbb fs xchg sub fmul sub or sbb cmp adc add movaps imul ret loope cld sub mov xor mov je sub lods mov add xor add mov mov mov into cmp (bad) or test sub xlat adc cs roll mov dec sub inc inc test hlt lods sub push xchg jo jl mov cwtl mov insb ficomp inc test jge pop or and jg (bad) push sub jns rorb adc gs pop sbb xchg mov enter sub cmpsb mov cld pop and insl (bad) xor pushf cmp adc cli lret pop jno les sub nop cmp jg fcmovne and hlt negl cmp inc mov pop jb xor clc aaa push (bad) je mov sub stos adc (bad) adc (bad) xchg mov or push xchg add andl ret push mov push fdecstp push es sbb (bad) lret (bad) ficom xor call (bad) push jae cli sbb ret ss jo and sub in xor mov repnz sbb data16 popf jne sbb inc or push sbb pushw loope sahf inc xchg repz hlt (bad) pop push ja sub mov mov cmp and out jbe pop jae test ljmp push pop mov xchg movsb das xor dec or push sbb daa or sub inc adc mov imul aaa mov jge sbb sub andl push test mov jmp cs adc jp int3 sub fmuls add or out movsb sti cmp cmpsl in and das mov xlat ljmp mov cld cmp xchg fnstenv sbb xor sub jmp xchg xchg bound out cs into out pop stc mov sbb xor sub and add xor aad sarl aaa pop cltd mov dec stos push or je dec (bad) mov xor ror sbb mov les mov leave adc imul dec inc xchg pop outsb push add inc push sbb add aaa movsb je data16 or int adc push push js jp leave imul mov int3 sub data16 jle outsl ret and in mov and dec cwtl imul push sub xor jnp inc ret bound mov sahf int stc addr16 push adc push pop mov ror push mov ds cmpsl cs icebp (bad) je pop sbb push inc outsl cwtl sbb sub test xor (bad) cs pop loope mov fcmovnb loopne sbb es lds shll inc adc das mov cwtl sub cwtl ret push incb cmp sub adc xor fdivl push inc inc add ds pusha gs insb cmp or lret xchg stc out and pusha mov sub loop jp call movsb daa sub mov xor imul xchg xchg dec out insb inc (bad) jmp shrb insl push call ret mov jb,pn mov fildll test (bad) jg test adc shrl in and int arpl loopne dec dec movhps cmp gs push push enter inc cltd or arpl xor mov add dec adc sub jle sti adc cmp shrl ret jnp mov out xor or sysret mov addr16 jns and mul cmp dec sub pop cs mov and mov pop pop rcl sub std push aaa ja addr16 jecxz int3 (bad) sub daa movsb sub cmpsl xchg cmpsb and xor inc adc out decl lahf push inc add adc mov out ret (bad) imull push cltd les cmpsb and jo or or dec mov pusha mov mov std jb sbb xor sub mov xchg lds pop insl (bad) fstp paddsb push sub in adc mov mov or add lcall adc cld xchg cmp mov cmp hlt aad daa (bad) (bad) mov adc leave mov repz add push fcomps lock pusha (bad) cld outsl lahf ret pop imul mov push jno xchg ja pop nop test sub add or cmp imul bound ret sub mov mov mov inc roll adc and ds aad push xchg ss xchg cs xor cs shrl jge loopne sub jae hlt f2xm1 xchg mov sbb xor inc loop out push js mov add aas mov jns aam test inc cld dec sub pop insb lods jp mov jbe and xchg js and movl dec xchg mov xchg dec sbb in sub inc or sub (bad) pushf inc bnd mov dec pop rcr inc jmp jae mov sub cs mov (bad) sub inc mov mov (bad) repnz xchg lea push mov or inc mov or aas loop fcompl add mov vorps out fwait ja push aaa dec divb fimull aad inc fs cmpsl push dec mov xorb fisub pusha into in (bad) int mov cmp pop cmpsb cmc add or (bad) jno cmpsl leave pop cmpsb mov adc jl jmp dec int3 mov fildll fwait cmp out dec sbb jae jp je (bad) mov xor fwait cmpsl push inc stos pop cmp push leave movl cld push leave test lods iret flds xor int sub ss sub ss dec inc push cmpsl leave pop ljmp mov sub pop push fwait cmpsb call pop mov pusha dec dec shrb jno or xor pop mov add jecxz mov js dec xchg int3 mov cmpsb (bad) jmp fnsave cli adc cmpsb mov mov mov adc mov jae push out mov jmp pop jl jbe pop jns push mov xchg sbb inc pop pop adc lods xor (bad) inc int xchg lock xor in jp xorl fldt loopne and addr16 nop lock push inc dec pushw jnp push push dec es jne mov and mov jge jo pop push into fldcw mov leave ds out mov lret or push popf (bad) imul dec sbb stc popf adcl sti mov dec fnstenv ror pop cmp xchg repz cmpsb popa push jbe inc sub cld cmpsb jb jp scas xor or dec daa out push fld jb pop adc adc bswap xchg fadds dec dec dec cmpsl lods out mov inc and xchg pop mov flds push popf fwait jns sbb je dec mov mov into pop mov fwait jp dec ja mov and sbb das mov cmpsl xor into sub jno aaa popf mov jns (bad) (bad) loop lds push int adc pop add or push pop mov bound xor sub push popf (bad) jae in xchg int cmp movsl in cmp repz aam ja mov fidiv lahf dec in pop sahf adc pop insb jne cmp inc into ss pop adc sub adc fcmovnb stos push xchg inc scas mov pop dec add jbe negl ja mov loopne int stos dec and sub pop addr16 sbb xchg (bad) jno push jp,pn xor into push data16 mov sbbl out sbb dec sti sbb push iret mov inc xor inc jb in jo inc pop mov jns popf mov (bad) pop xchg mov (bad) push negl cmpsb inc adc jl ds in mov jnp or in out outsb jge,pn jmp or fisubl cmp loopne ss int3 (bad) test addb pop mov sub rol cmp fnop sub lds loopne lock push cmp fistpl sbb mov movsb test push jl and pop xchg inc or xor es movsb mov mov sub mov inc jae push pop lock sub (bad) out fcmovnb xchg jae and and ds cld jnp mov cmpsb test pop insl lods pop in cmpsb push xor dec fldcw stos mov scas sbb sub xchg xor flds out outsb pop pop popf (bad) and andps or in sub (bad) in pop and daa push jnp fild pusha imul sub inc daa fcom negb xchg fs xor cld outsb xchg aaa cmpsb push xlat lahf sub loopne loopne adc mov aad ja rolb cmpsl push int mov mov ss push (bad) fcmovu cwtl (bad) mov cmp jmp adc sbb push mov mov xchg mov and push popa jns dec pop push sub rclb neg sbb xor lock add mov (bad) or repz cwtl js (bad) push loop adc jmp test aas ret fldenv popl lds xor outsb pop pop or sub pop cmp rcrb lret rorl movl pop mov mov push jge ljmp inc (bad) pop push mov int inc aad out cmp (bad) into mov or inc out jl jo popf cmp fisubr popa or push push fisubl (bad) repnz cs push cmp mov push jge (bad) icebp jb jg cmpsb fisttpll mov sbb lret push enter push dec test cmp dec jo clc stos dec test push lods fxch outsb cli sub mov fucomip stc int3 pop nop dec sub xchg clc iret dec sbb notl adc jg add repnz dec push clc sub jle call jno test adc dec jmp xchg cltd iret sti sub clc out js into mov xchg jns and ds dec sti sub jg push cmc ss fisttpl loop stos pop xor jmp aad imul lahf test sub mov shll mov pop pop daa add imul lock push sub and scas sub (bad) (bad) cmc inc lret cs push inc repz push (bad) mov cmp mov je leave (bad) sub mov in loop outsl xchg es sub jmp pop add cs inc xchg stc rcl push jecxz add pop std xor jl cmp ljmp lods cld and xchg cmp mov shrb lcall movsl jg fldenv jno enter sbb ret cmp je xchg mov or fnstcw inc cmp (bad) push sbb adc lret jbe iret mov imul or insb pusha mov mov sub (bad) xchg nop sub dec cli enter ret pop push repz fwait cmp push sub xchg test jle add push lea (bad) jg sbb cmp cs leave or test xchg xor into les sub add ds push xor ret test sbb sbb das xor xlat outsl enter sbb jns cmc inc sub popa leave test notb pop mov (bad) dec mov loopne jno daa push fbld lock sub dec dec mov xchg in add fs or lcall ret sahf push pushl sub (bad) cmc push pop sub sub mov sub ds loop data16 or xlat ret stc subl rcll sub loop xchg cmp or ds push cmp inc cmpsb (bad) mov mov fs sbb mov push js out int mov into or outsb sub jge dec ret add adc pop sub sub aam mov mov sub mov or xchg sub out mov mov add (bad) push adc mov cmpsb stos sub pop mov lret add jnp push fwait lcall jmp inc pop test jns lods pushf fsubrl adc dec pop sbb xchg sub cli mov test arpl push push (bad) adc mov mov sub jmp lock and testb rcrl jnp pop inc push test cmp jbe mov dec mov cmpsl das ret xor aaa xchg sti (bad) mov cs pop lret and jnp jp mov pushf mov std or pusha movhps xor jl pop push daa movsl lret scas xchg jg jbe sub mov inc dec and or push fs ret pop icebp dec inc dec jg addl mov call loopne roll in cmpl aam jmp (bad) addb test xchg and jnp and inc rcl mov and jl xchg insl xchg cs pop mov dec xchg test sub lcall cld xor adc addl lds leave movsb jl mov lods and jbe loop cli addr16 aaa jmp leave ret adc mov mov (bad) jno add fisubrl outsl shl dec jg add pop sub stc push mov jns mov out push sub in xor sub test xor in xchg aam fisubr pop push jb dec (bad) mov pop dec mov test push lock ds mov adc xchg xchg rolb mov (bad) inc sahf aas (bad) jae or sub xchg add sbb sahf cmpsl ss push in notl fimul xor mov (bad) lods xor mov sub adc push xor cwtl jbe out sub cmpsb jb mov cmp mov pop mov sub add pusha test mov lods jns sub cmpsl cld sub int insb or bound lahf pushf sbb push jno ljmp je dec and jecxz in xor lea lods leave stos subl mov sbb pop int xchg sbb push inc clc or add ret outsl pop test (bad) mov pop (bad) mov cwtl movsl pxor mov xchg push push push sbb addl sub xor data16 clc inc sub cmp aam (bad) add lds add and imul imul int loop mov dec lods in jo push aaa ss or shr jo push jnp mov push test push adc adc pop sub xchg fwait icebp jmp inc out jnp movsl lds outsb lods push out or xlat jae mov sub xchg pop xchg xor cs mov into sub xor fs popf test cmc dec (bad) in imul cmp push lea sub xor pop shlb jp test jecxz cs push sar out mov mov add and jg fisub aad sbb jecxz (bad) mov pop std inc dec jns loop fisubr subl fisttpl cltd fisubrl repnz lods je pop sub adc pushf mov or or mov pop xorl pop jmp mov inc data16 mov inc adc mov mov es outsb mov lock stos mov sub daa and gs mov and rcl repnz xchg popf (bad) push cmp push and in mov jo lret pop or cmpsb and sub bound inc or push xchg mov adc xchg hlt xor lcall andl jge dec cvtsi2ssl mov pusha outsb addr16 sub push popa mov bound lahf movsb inc or fstps iret jge ds cli pop loope adcb mov push pop mov mov push hlt aam push out adc xor xchg jne aam mov and fsubrl (bad) jle aas push mov xchg out int pop xor and das mov sti in adc int xor ficom inc sarb and cmpsl cmp test lods into adc fiaddl movsl mov pop nop jnp dec jg mov and sbb jl leave jne sub pushf adc push sti sub loope mov sub add fwait cmc insb push xor sub outsl enter pop aaa sbb gs cmpsl repz scas (bad) adc sub push mov xchg jl lea jae xor and jge lcall stos ljmp loop jmp dec adc je cmpl ds daa das (bad) sub or out push lods lret and mov scas inc pushf out and sub rcrb xor nop cmp xor mov sub mov fwait leave fdivrs mov and mov loopne or icebp jmp jge push jmp push xchg jno cmp and stc call or sub mov lret ss pop pop inc push leave ds inc pop jecxz and scas mov jge sub mov (bad) mov lods mov push (bad) out xor dec jg mov xchg int cld shll mov and ja iret and mov fucomip ret sbb cs xchg mov dec jecxz incl sub mov push in inc mov jecxz test inc fildl sub push inc (bad) sbb jmp lods cld bound scas out test sub mov cmp sub negb mov pushf addr16 inc dec (bad) jo dec xor ss push repz sub mov sbb outsb xor sub ret rcrb aad dec mov lret jnp sbb add push outsb daa test lcall or push cmp xor icebp push imul add adc ja cmpsb jbe in es test add (bad) or fs stos or push sub dec push mov sub xchg enter jl mov mov jecxz cmp jnp sub in loopne arpl test pop inc xchg jmp aaa adc cmp or insl inc pop ficomp std icebp and sbb jnp mov les pop rcl sub dec xchg insl sbb sub or mov xlat outsl test inc aas mov bound inc fs jo cwtl sub adc test inc sub xor mov xor int3 cmp sub or mov lods dec nop xor mov ljmp (bad) jae in push add adc pop mov jno xchg repz jcxz (bad) sbb adc sti (bad) bound fmull leave lcall xlat sbb cmp or dec ss cli ljmp mov mov add lods sets loope call cltd std test jbe ss inc xor cmp shrl scas lret js loop jbe in dec mov sbb leave cmc xor scas xchg jg pop pop std fdivp cld sbb cld faddl inc pop nop int and add sub cmp sub and leave pop (bad) (bad) lock xchg mov mov leave mov testl (bad) push lods sti sub sti adc dec push jnp jno lods add cmp fld1 fidiv pop lahf inc test push lahf add inc push clc sarb pop das sbb jns dec addb testb test cmp pop xor and lcall (bad) shrl nop mov dec xor movsl scas sti sub bound add test or cli push jle (bad) outsl (bad) dec or fldz xchg test fdivrs rcrb sar popf xchg push addr16 pushf dec jb les rcll xchg inc test jbe imul cli popf sub pushf mov sbb jl rcrl sub lret xchg xchg icebp es (bad) mov ret xchg call enter sbb fidivr nop sarb aas mov in test jne mov fildll adc (bad) aaa sub imul repz pop pop sub test mov xor sub out jle pop imul sub adc loopnew xor sub shrb std mov sub xor push pop sbb push sarl cltd data16 test push not outsl leave sub sub adc aaa xchg xchg adc sub fisubr sbb dec lcall ljmp inc pop push imul enter cmp sbb jmp mov sub jns mov ja mull xchg mov jp daa push and stos mov into cmp adc sub push icebp mov inc add pop push sub ds sbb sbb jmp jmp mov pop xorl and out dec sarl sub dec mov xchg cmpsl mov (bad) cltd jns shrl or inc sbb data16 pusha imul pop add pop inc add icebp sub mov pop adc sub (bad) aad clc dec int3 inc add addr16 push in lahf and pop inc imul in cmpsb ds in or aas ret mull fcmovnu mov mov jp (bad) cld (bad) sbb lcall dec dec jnp scas sbb dec aas pop sub xchg push cmp pushf cmpsl int gs jp sti push enter mov int adc stc or push cwtl repz (bad) sbb jns xor push push (bad) idiv clc fs mov movsb xchg cwtl jno loope mov adc aam xlat (bad) leave cltd jg pop mov ljmp or mov cltd adc aad ret cmp pushf sub inc imul scas mov lock fimul or cmp aas inc and push cmp lds pusha out sarl and les in imul sub push dec dec inc xchg mov and push jae xchg push inc movsb xchg sub pop jne xchg das pop and scas (bad) call imul xchg outsb or ja adc mov leave xorl and daa xchg lret adc sbb out push cmp into test dec call dec test shlb xchg sub inc arpl mov ss sbb adc sub sub cmp or ret add or add out sbb dec adc cwtl (bad) pushf mov cs outsb outsl jmp fcomi incb out lcall dec mov xor sarb lcall addr16 adc sti push push cmpsl fwait jecxz and cmp jge std sub lahf les xchg sub (bad) sub leave xor lods xor pop inc cmpsl dec mov cmp adc mov imul inc fdivs in sub mov dec add inc push test cmpsb icebp jmp ds loope add lods inc flds sub mov (bad) sub js add jp fstps mov mov loope fcomps rcll les mov sub sub mov cli jp push inc pusha mov aas ret jecxz mov daa call jmp in pop test scas inc mov pop xor sbb (bad) jbe ja mov lcall push pop ljmp adc xor test add and cmp cmp loop push sub das (bad) jne inc cs aaa mov xchg mov sub push mov mov xlat and and sub outsl int3 xor pop mov aam jb repz outsb dec les mov cs or sub xor mov sub add imul inc sub sbb ret mov fwait pop inc mov pop push sbb add push jge sub fwait lock sarl int3 or pop or mov lcall xor xchg lods aaa mov fnstenv mov sub lcall or shrl sbb lds das sarl movsl cs ja sbb lret sub push aas fmul sub movsl push mov sub xor jmp (bad) add aad adc inc ss and jnp mov inc xor sub loop mov fldl ja mov (bad) cs ficomp sub or push jbe sahf sbb (bad) fldcw (bad) jb scas mov dec lds sub fcomps imul (bad) dec out dec mov pop mov ret cli jg stc cmp sub or ss jb jnp jmp mov decl movsl ret mov adc movsl add inc mov fs mov ss xchg jae push sub xchg ss cltd mov (bad) cmp push mov xor sbb imul adc lods add jmp lods movsb jno sbb in cmp loop sbb stc dec (bad) hlt stc xchg test lods mov xor in sbb lods mov test aad adc xor jns test sub iret xchg aam pop in ficoml out test push mov xchg inc or cs cmpl cmp push dec mov test (bad) popa cltd or xor (bad) dec dec clc inc rcl push jo jmp sub push adc lods sti enter out or dec decb mov hlt aad dec adc push loopne mov inc stc (bad) push jns int3 or push add pop adc jno,pn ficoml mov stc cld sbb call add push fidiv cmp lret push lods lahf cmpsl cmpl mov lods and xor loope sub (bad) xchg mov and dec aas repz bound jb mov sub (bad) fisubrl loop pop icebp sar mov aaa xchg jle push insl pop sub pop cmpsl stc push mov mov pop sbb mov sub mov cmp and xor les rclb sbb scas stos fwait ret mov xor movsb xor loop and xchg cmpsl mov fs stos sub pushf icebp imul lret cwtl popf loop push out sub jmp xor mov movsl movsb mov cmp xor mov push subl out pop xchg mov lret sub dec mov pop lahf pop sbb fild insb add cli lret (bad) divb adc push sub push push movsl cmpsl and dec jge (bad) (bad) xor pop or xchg popf sub pavgw ss jle xchg adc inc hlt ffree (bad) pop fdivp pop jbe aas cmp inc into sub enter lea (bad) loopne fcomp repz sub sahf test cmp jne aad ds sbb daa mov dec jp xchg mov pop repnz jge (bad) push pop nop sahf inc gs add xchg (bad) fldcw sbb fiaddl inc std sub xor sub aad xlat sub mov jne inc stos loop jge mov ret decl push cmp sub jns leave movsb sub cmpsb hlt dec ror push inc (bad) ja or sub scas inc add inc mov push shlb test leave in es xchg and mov lahf and das in imul inc stos mov adc ret (bad) cmp and xor sub mov push jmp mov rcrb jbe cmp cmp leave into stc dec sub ja xor in sti and out inc cwtl int mov push jmp jp add fcmovnb lods xchg and cs and test cwtl push push or sub or jae and inc mov push xor inc mov lret fwait inc pop movl sub loopne mov mov sbb test push xor imul js adc jge mov cmpsl movl cwtl push push in jbe in std out imul adc pop loop mov xor aaa sbb and dec inc repz int adc mov int3 test push push int xchg adc out enter data16 and dec loop jno into xchg push (bad) dec inc ficoml mov xchg cmp pop sbb popf and outsl xor test test jno or jmp push insb dec outsl int pop cmp adc push xor xchg xorl jno jnp cmp in leave (bad) cwtl ja ljmp negb dec imul daa pop xor cmc stos sub insb or ss in ret jge ds aam lcall xor (bad) add lahf icebp cmp out inc jnp (bad) ss jbe leave push adc push daa dec les cmc fxch in sbb adcl and leave push mov jg dec xchg fisubl out sbb aad xchg cmp (bad) (bad) std cmp outsb in mov cmp inc pop mov mov (bad) aam (bad) mov xchg cwtl daa jmp mov inc cmp and rcl sub mov sub xor iret sub push daa cmp mov xchg lods ja sub in adc cmp push jb sub pop inc cs mov loopne shr gs stos sbb int3 inc aam push and (bad) repnz pop sub dec lret jnp ds xchg sub jmp rclb pop test lock loop and sub ljmp (bad) fadds (bad) fiaddl jnp mov jnp sub fnsave mov mov mov fs fmuls xchg popw sub inc das xor rorb xchg fwait adc inc sbb bound sub cltd xor loopne mov jns or cmpsb scas pushf fmull and inc push inc (bad) mov inc inc push xchg lods push sub fcoms add and dec andl and adc ds xor jo jne in jnp movsb mov lea cmp or and sbb pop mov sahf out mov addr16 mov sub mov push mov movsb fs or ror enter push and jl sub in ljmp dec mov sti into sub pop gs (bad) xchg cwtl (bad) xor subb les inc pushf jns push outsl (bad) int3 fwait cmp lods and (bad) cmp dec xor es mov (bad) cs icebp scas sbb mov xchg psubsw xchg pushw cmp cmpsl je movb sbb popl loope push nop and sahf sbb pop (bad) xchg sbb push (bad) sbb lcall test pop or hlt ret add pop jb addr16 xchg mov int jle inc cs pop inc stos cs or hlt in mov push mov cmpsb in pusha into cmpsl add insl cwtl cmc out cs xchg fsubrs movsb or sub mov adc insl cmp sub pushf dec mov push sti dec dec inc push jbe sub xor int mov dec movsl movsl dec adc arpl mov add cmp xor mov in jp push add mov shrb mov or imul imul insb or and movsl adc pop inc nop cmpsb aas mov dec ljmp jo mov (bad) sbb ss mov push clc test jnp xlat lahf cmc enter aaa addr16 sbb sbb sbb lcall in fcomip fadd mov adc cmp ljmp xor push lcall (bad) decl or int3 incl mov or and adc dec cs ret in sub test adc leave sub pop add movsb inc shrl pop and sub cmc jb mov ss mov popf data16 dec and mov movaps mov pop push cmpsb or jnp mov cmp lahf clc iret lods pop fimull inc sbb inc add rcl xor cltd inc icebp data16 mov sub fwait out cmp popa insb (bad) jmp inc ds scas sbb arpl inc sub pop imul sub (bad) iret or mov sub sub mov in mov movsb mov (bad) call ret cwtl rclb lods sub test push stos sub in add lods inc sbb daa cmc xlat xchg add hlt sbb and aam dec add outsl negl jb sbb adc cmp push jb,pn and cmpsl jnp cmp and js iret xor jg insl bound cs pop dec jbe mov stos push mov loop pop imul je popf lods fldt xor xor or sub ret pop cwtl jb subl shr jno loopne pop sbb enter mov mov cwtl and cmc stos dec pop fnstcw pop mov (bad) jg cmp pushf imul test dec jmp push push lea adc test or cmp pusha test test xor inc (bad) leave stos jge pop lea popa adc pop cmp mov stos addl pop jbe lahf and (bad) jl cmpsb rorl inc add mov data16 jp inc imul popa mov in jge pop jne je pop mov adc bound (bad) jg ret decl push das mull lock adc je push mov ret mov leave xchg orl jno (bad) shr push pop sub leave xor lcall cmpsl and mov dec or movsb fwait (bad) jno daa test les xor push or adc adc add mov jo cmp cltd dec loopne add add or fidivrl and jo outsl (bad) sub push sub mov mov leave mov rcrl test insb test xchg movsb sub movb pushf sub sbb ljmp push cmpsl into sub jne sub loope sub push jo retw aad push sub mov or in mov aaa (bad) mov sub out mov xor add in jno je cs cmp sbb out mov add xchg ret ja sub gs mov cmp mov fldl dec stos andl lock mov push ss and repz push mov dec add stc lods loope mov sti jbe dec adc stos data16 mov add sub fcmovb push (bad) lret xor gs int3 mov xor test (bad) jmp rorb jbe stc push nop clc push pop cs cmp dec jnp bound inc inc mov push icebp movsb xor cld push xchg popf sub call sbb into fildl mov dec lret sbb lods in lea dec out sub sarb mov dec mov lret sub sahf inc jne and jecxz (bad) in ret (bad) xchg jle or sub imul jmp mov or mov hlt sub mov sub sub or and inc movsl inc mov out pop sub js fdivs repnz sub lods subb or jns int3 dec add ja (bad) xor pop mov fs push and ljmp or sub negl mov loopne or pop add cs push fisubr popa insb push cmp sti mov imul mov jnp in jns pop adc sbb mov repnz dec add jl pop sub pop pushf cmpsl fnstsw xchg jae aaa mov ljmp in jp daa mov sub pusha mov (bad) aam sub jno inc std push stc rolb imul (bad) je sub adc jp and adc paddq clc cmpsl and (bad) loop hlt sub cmp jge xchg sub lcall xchg loope pop pop jmp add inc inc and fsubrp ss leave mov inc jbe cmp dec sbb xchg ficoml mov call pushf test sub dec clc call mov sbb xchg lods push lret into adc je dec push push mov loope ss xchg push push sbb cwtl push adcb cmpsb add or mov dec out pusha mov int3 xchg data16 sbb lds dec xor jge (bad) cmc pop xchg idivl inc jo push addr16 shlb xor gs mov pop stc imul add mov xchg popa ds jge test inc and jb in push jo cmpsb sub mov or sbb sub movl add or inc movsb ja mov sahf push sahf and pop int3 inc pop aas mov popf sbb dec mov popa fwait jge and add test add jl clc cmc movl mov push sbb mov and mov ja or out and lock adc imul aad arpl xor inc cbtw inc add mov fiaddl xor mov daa stos mov mov mov cmpsb jmp xchg loop adc add stos lock xchg and and add repnz (bad) sbb add leave push mov or cmp cs les cmp inc call clc jnp sahf and mov inc out or addr16 loopne test fstpl jns pop in daa jo cld xchg (bad) insl jecxz popf xor xor pop dec lcall dec fisttpl mov js or push (bad) lock pop cmp leave jg cs sub pop (bad) pop jo dec lock jge fisub push pushf test pop divl and push jle xchg outsb es dec dec cmpsl dec test xlat push js daa push xchg daa dec or jnp aam mov shlb jg fdivs es inc (bad) push lods fildll mov push pop inc cmpsl add adc inc pop adc stos int3 lahf inc sub (bad) test xor fstl fwait sub mov dec push jl mov mov daa xor clc cmc push lock jns,pn pop es inc (bad) (bad) mov pop out insb test xor sbb daa push mov outsl inc sub inc pop dec and (bad) xor dec imul iret inc inc or clc sbb inc repz and inc adc (bad) clc daa sbb (bad) push adc cmp sub pusha leave fiaddl dec xchg or out xchg loop imul ja jb and mov push inc cmp jns sub xor es xor sbb mov mov stc xchg push xor sub shlb and gs sbb xchg xor dec andl cwtl cmp or jl sbb dec arpl das int3 int jnp jb daa cmpl inc loopne jae js je inc jecxz stos cmp dec mov daa pop in or lret cmpsl mov int (bad) loope cs push pop (bad) mov cmpsl sbb and cmpsl lahf and lret sub data16 test loopne and (bad) inc cmpsl mov cmp jg sahf cwtl or int hlt add (bad) push xchg xor (bad) cmpsl and mov inc sub adc testl cmp lea les (bad) lock cmpsl and loopne add xorl ret enter sbb sub sbb pop pop lock xchg sub xchg aaa mov xchg cmp repnz mov mov (bad) jmp sub movl sub xchg (bad) ss add lcall jb dec rcll divl les sub mov arpl orl ja mov sbb arpl imul cltd lcall lods repz iret and or mov and int xchg push xchg push mov ss adc iret xlat out or mov adc pushf xor adc cmpsb xchg mov test inc int mov mov sbb ficoml lods fadd mov adc and test mov xchg test scas popf repnz jl fwait lea mov sub into xor jmp ss cs and mov (bad) ss pop jb sub shlb shrl xchg or sub arpl xor jnp cmp sbb cltd sub lock out jecxz rcll mov cltd sub and sbb bound inc (bad) mov xor in push (bad) jg sub adc fcompl jmp fwait pop fist dec (bad) fisubr sub adc out xor pop fildll inc mov fnstenv fisubr jb sub lods jp outsl sub inc cmc fsubr cltd adc mov fdivl sub or jp cwtl das outsl aad mov jne jg stc movsl repz insb loope fldcw mov cmpsb addr16 fnsave xchg sub sub (bad) div dec jns dec mov mov lret cmp or xor mov pop mov int3 stos sbb inc and sub sub repz sub xchg imul (bad) pop sub inc jne pop add fbstp pop test mov fildl add mov sbb call ss out scas pop insl jb test jbe push sub and inc lods lcall mov mov dec and jbe add stos sub aam sbb dec loop lahf jns dec fcoml call adc adc xor test jae jl push sbbl xchg hlt movsb loop in push xchg (bad) (bad) and sub adc lret ret pop bound cs cs pushf xor mov sub (bad) pop mov shrl psraw sti or adc xchg mov loope xor push sbb jbe sti daa add (bad) mov dec jae dec and mov gs pop push call cs cmpsl and mov sub mov loopne xchg xor out mov (bad) int3 sbb add mov and in push pop insl orl jbe push (bad) je lods and idivb jl mov test or arpl push push cmp leave push push sub push mov inc pop leave sbb out pop dec or mov add fwait or (bad) dec xchg leave cli subb test xor mov loopne jb fcompl mov push cmpsl in outsb cmp jge jae sub adc mov pop jo jl ljmp (bad) repz inc outsl fisubrl pop daa test fadds xor sub cmp sbb xor pop jl popf pop nop inc call cmp popa xchg sub cmpsl push dec lock sub and mov push (bad) (bad) adc inc fwait (bad) cmp xor rclb mov dec add aad in fwait gs lds or sub divb fprem1 add cmpsb mov mov sub mov xlat xor sub sub sahf sub lret aam idiv lret sub jnp mov or pop or (bad) xchg fidiv lock mov movsl and sub jge push rolb data16 icebp insl mov push js fcomi and sti add sub icebp xlat sub xchg add sub out aas popa out sub sbb roll imull mov or (bad) cmp push mov sub push (bad) xor push scas nop sub dec scas out sub cld dec jle scas xlat or aad inc dec sub inc pop mov adc push fild mov (bad) lcall inc inc mov mov cmpsl dec shrb or jecxz in jge sub xchg mov mov popa ljmp cmpsl xor (bad) sar sub sub or movsb out nop mov sbb mov sub call imulb (bad) xor push stos and xor sub xchg es add sub push jbe aad outsl bound test pop sub and addl in insb push pop iret pusha mov sub test cs jnp ja pop push jecxz insb jmp mov enter jo push mov push jb inc addr16 out aaa aam lcall xchg ja jg mov mov int3 jmp das push ds (bad) inc cmp divb xchg cmp repz stos (bad) adc xchg (bad) inc jnp into dec cli xchg aaa xor fwait sub shrb insl data16 shrl icebp adc adc or add xor cmpsb lret sub jg cmp popa mov mov (bad) or or push mov push mov in jmp adc cs sub and lahf test testb inc dec std xor imull dec js push out fsts cmovl test pop pop (bad) mov add scas sub inc add xchg ffree or popf aad sub adc sub mov in mov jmp repnz out test int3 push mov cmp popa pop mov ljmp mov sbb rcr jge and (bad) cmp or sub pop popa insb lods pop aas in dec gs jo sub mov sub jnp adc in jge int3 mov inc or pop out roll cs cmc cmp scas sahf test adc (bad) (bad) sub int3 xchg cmp fs in sub and frstor jle push inc arpl sub xchg adc mov cmc xchg out aas loope,pn sub test js sub pop jnp or aad js lds imul pop pop sub mov popf popa sub add mov or sub pusha addr16 sub outsl adc dec mov call push sub icebp sub call jbe mov (bad) fnstsw and dec inc in push pop test not push mov and xor mov xlat cmc sub push leave dec (bad) sub jecxz in sbb into mov adc pop cmpsb repz sbb shrl shll popf mov cwtl mov pop mov sub mov rol jns lahf je xor (bad) jecxz mov or ljmp adc sarl fwait mov inc fucomip test ljmp out setg or inc push sub stc int lock cmpsl cmp or pop sub or pop cmpsb dec mov sub aas mov dec mov push inc dec out out or push dec aam xchg push jns jbe cs addr16 je xchg adc xor adc dec xchg jno jecxz lea sub push sub or jmp sub xorb adc adc leave ss leave inc in inc sbb inc adc fidivrl rcrl add mov flds les inc inc or xchg pop inc (bad) out dec cmpsb mov cmp cltd movsl cmp xchg aaa cmp add cli int3 and dec in sub repnz cwtl push jbe test and xor jne cwtl cmp jns adc mov xor sbb sahf (bad) imull pop cmpb movl adc mov dec or aaa (bad) or sahf sub aam lcall mov das outsl add pop dec or sub and pop call call jmp out cli out or (bad) and or and sbb pop add or insl outsb sbb lock movsl push xchg and inc mov mov ljmp and sub dec or arpl pop or int dec out push sub cmp pop scas f2xm1 sub outsb jne inc sbb mov push xchg sbb mov add xor icebp mov push (bad) into and sub mov (bad) dec xchg pop and add repz lds sub ja push test fnsave int3 sti mov jb and test addr16 mov daa enter mov sbb inc dec cmpsl es mov int fdivrl sub xchg add sub fiadd xchg xor xchg xor push cld xchg mov sbb jmp and divb pop adc mov dec sub fsubr hlt xchg ss outsl jp push incl aad orb ds je pusha inc sub repnz gs dec dec call cmp pusha outsb imul cmpsb mov or jbe inc (bad) mov sti mov insl pop xchg xchg push int stc xor and push pause in cli push data16 movsb jmp pop ret shrl sbb and or stc (bad) (bad) stos fcomps dec inc pushf out xor stos push loop mov mov mov xor push cmp push xchg push cmp fbld leave mov jnp xlat fcmove fstps and test fcomps incb test or and adc push mov inc testl lock adc scas adc push jo cmpsb add dec jno sahf fisubrl dec pop jp arpl scas adc adc int inc sub movsb and in aas or xor pop or jno jl fdivl into xor outsl xor lahf dec stos xor mov pop sbb xor sbb ss leave aad xor pusha data16 fldenv clc sub or adc push iret movsl dec int mov and out fwait inc int mov (bad) dec dec mov push cmc sbb xor mov pop insb insb (bad) dec int jmp test and mov pop add push adc cld pop push popa data16 adc push ret mov fistp les mov mov jecxz sarb cmp loope cwtl leave imul push pop (bad) cltd mov xchg aad xchg iret into push outsl test out sub imul mov mov popa lea sti dec xor mov test imul ret (bad) adc test jp rorb lea subl push rol loopne push add adc imul inc aam or enter (bad) dec hlt cld mov decb (bad) data16 loop and test test (bad) nop pop sbb lock in cmpsb mov inc adc cmpsb fsts insb xor jnp sbb and xor and inc mov (bad) cmc int3 fs outsl (bad) ljmp je pop rcl leave (bad) sbb bound imul mov cmpsl jmp xlat pusha test fwait (bad) pop in mov sbb mov jnp aad xchg sub std pop int3 dec mov jb sub fdivrl cltd mov mov (bad) jnp dec ss mov dec push lea and cmpsl loopne data16 sub int pop lret out mov cmp push push loop (bad) out xchg jmp xchg bound std add lahf cmp lods xlat push iret xorl cmp jns sub xchg push cmp lock inc jmp mov imul pushf jns xor lret cmp push sbb mov mov jmp shrb sbb inc roll icebp sub outsl push (bad) jnp cwtl shll jb fnstcw sbb jb jns cmp fisub in push push adc cmp jmp adc gs rorb jmp in arpl cs push xchg ror rclb add inc mov inc int xchg pop cmpsl mov mov data16 jb adc cmp mov bound pusha jmp loopne rclb adc xchg jp subl inc dec cmpsl push ret sbb adc mov sub sub das pop mov jl shr dec fs xchg dec xchg out cmpsl ja pop jmp push sub mov pop push clc cltd sub mov push (bad) jl cwtl xchg repz xchg xchg adc movsl mov xchg addl outsb jge push es fnstcw leave inc xchg call fldl2t aas sub xchg pop adc nop fs xor sub lahf (bad) add fdivrp sbb sub inc shl out std lcall sbb mov mov cltd lret cmpsl in fneni(8087 push sub mov adc insb bound xlat test mov iret sti sbb push out mov sub pop push jns dec adc enter ret int3 or cwtl sbb dec movsb fwait and inc mov shrb cmp inc xchg lret call and rol push sub xor jo inc mov popf (bad) in adc push cmpsl or call jne xchg jbe mov xor pop out (bad) pop inc jmp cs rorb or mov mov cmp push scas dec cs sbb cmc test xchg dec incl out bound (bad) mov sub mov push sub fld add ljmp jmp jecxz inc call cmpsb outsb ja mov cmpsl and add cmp popf or dec fucomi pop (bad) cmpsb test cmp push (bad) mov mov imul mov mov sub insb push jno xchg test cmpsl or cmp andnps cs fsubrl or sahf out test test mov xor popf sub mov jno sbb inc int3 rcrl sti add jne jp cmpsb icebp cltd dec cmp cmp pop out sub jge jg and movsl and dec sub loopne mov hlt call pop cmpsb inc or fistpl enter jp jbe push lods iret sbb dec jne sbb dec ss aad not push inc or bound add jb xlat add stos and loop and push cs rcr insl sub aas xchg arpl in and or pop mov sub dec push sub sbb out dec mov adc cltd xor loope sbb sbb mov int leave push lahf pop fidivl mov jno sahf sbb popa cmpsb stos push mul subb jecxz add aaa leave inc dec cmp mov lcall pop jge inc icebp mov (bad) int3 int3 add push es leave xchg div loope lea push int in mov mov mov pop inc cmp leave in mov das sub repnz flds aas jns lcall int pop and mov mov in inc dec or arpl leave jae sahf sub rclb lock insl sub and lock dec mov cmp test sbb inc add cmc mov push movsb enter into ret jns add cmp cmp cmp les sbb jnp fdivl push pop (bad) adc xorb (bad) ds add inc xor dec cmp cmpsl call ja call fsubrs mov into jne fwait aad xchg cmpsl cmp push ss repnz push iret sub les xor dec sar ret fldt mov lds jbe js adc jns sub fistp loop fwait mov jge into sar cmpsl daa mov push jae or sub sbb push pop sub leave cmp pop inc stos jle and test lds bound pop int sub pop arpl xchg sbb mov andl push repz xor sub adc sub pop in divb xor xchg lahf das sub fildll aaa popf push int (bad) leave add out mov loopne icebp fimull test sub jns,pn and test (bad) sub out sub orl aas daa fisubl dec add pop int inc or ficompl pop dec push enter mov pop dec xor mov jle sbb or mov cmp push jl mov cmp push xchg cmp icebp cmpsl loop and daa ret push (bad) insb xor dec lds xorb int3 dec int3 imul fidivrl movsl insb dec addr16 lods insl dec call loope push sbb insl pop add test and cwtl sub fucompp (bad) (bad) sbb loope lods out xor pop into loop dec int nop pop pop pop xchg push inc lods out jno ret sbb aam xorb fld1 push test mov test les icebp jbe daa (bad) movsb xchg push lcall mov and arpl sub dec jae pop or pop (bad) xor pop das jae loope jb mov mov jl das jecxz mov cmpsb push jo dec (bad) mov clc sub lret push xor (bad) insl sbb inc popa xchg int3 in leave or lea lock mov cmpsl pop in cmp cmp mov hlt rolb int mov insl aam xor jne dec fistl lret loop ficomp lcall sub inc mov add cltd in fs mov mov cmp and in dec inc ret push jbe shll ss add xlat sub xor daa hlt outsl scas xchg sub jl insb or push or mov mov fisub dec enter bound test int sub mov lret or add aad in mov sub std je xchg cmpsb dec or push push inc pop xor int std ds xchg mov cmp sar mov sub data16 mov jnp (bad) xchg in sahf dec xor fwait das xchg sub mov or les inc add lcall (bad) jnp mov pop cltd dec jle loop movsl sub xor cwtl jecxz jmp mov mov out sub add sub adc scas sbb or test int3 pop jp imul sub dec xchg insl stc inc out (bad) out sbb cmp daa mov hlt sub leave add fistl cmp cmpsl repnz pop shll sbb (bad) and fs call sub std dec mov jb hlt sbb stos and jle or test imul mov jl dec push sub jnp rcll les call cmpsb stos sub xchg fwait aaa lods ss rol cmp push and dec pop out nop sub out mov bound push mov in and xchg pop (bad) xor sbb fcoml mov lahf je sub into shrl cmpsb outsl and pop pop dec jbe push dec push lods lret daa cmp int cmp aam mov and (bad) leave jmp out (bad) gs push enter add inc xor mov das jnp push inc movsl cmp ljmp sbb mov data16 ret mov mov (bad) fwait mov xchg (bad) jnp dec xor push call mov xor cmp rcrl pop cmpsl test aaa int mov das xchg cltd sbb fiaddl add mov fcoml hlt or fidivl sti lods push fstps cltd jmp xor divb cmpsb dec sub xchg jg fadds add je mov xlat ja loopne test fdivs push insb stos pop into aam lods push (bad) cmp mov inc xchg daa mov int inc jle sub orl sub dec inc stos lds shr fdivs add shl addr16 les push repnz (bad) inc in and outsb jle mov into and clc push ljmp arpl (bad) mul jns adc add insb in add decb loope aas sub mov pop and sub sub sbb jg cltd adc sti pop out cli loop sub sub sbb loop xchg (bad) hlt int jle sub push ja xor test dec test xchg std xor sub jmp out xor mov adc (bad) sub sub and arpl es cltd cmpsb cli xchg sub rcrb pop xchg and mov jne,pt test sarb push xor ss push out test push inc cmc mov (bad) ss bound in push mov or dec cli dec pop aam cs dec lcall sub jno cli and inc cwtl call test sub lods iret sti push cmp sub jae xchg xor movsl arpl mov arpl stos lret (bad) push pop add and scas push pop movsl in test push push insb cwtl mov es (bad) mov fldz out inc cli leave (bad) mov imul mov aas popf sbb mov sub cmp jmp cmpsl daa sbb push jnp jb or mov ja aam pop test mov add cld sbb sub stc aaa xchg xchg dec test jns in inc cmp loop outsl mov mov lcall and popa out mov jb inc jb and daa cmp mov pop cmp lock or lock push xor int xor jp (bad) aaa mov ret jmp or inc ret dec and xchg mov xchg pop jo lea (bad) fsubs js leave mov xor lea inc sahf xor pop sub sbb fidivrl inc mov out sub out fnstenv xor jbe sub mov sbb push pop ds jno enter sub adc pop outsb (bad) xchg sub sti xchg int call js sbb xor ss aam mov pop sub dec sub xor sub es sarl ja lock shlb popa sub adc add stos mov cmp cs test insb push cltd es lcall sub jecxz ljmp xor mov cmc stos and out pop scas push sub add cmp or push sub mov iret leave repz jb sub cmc inc push (bad) jae int mov mov std push mov lret jo add pop dec jge nop (bad) lret (bad) xor mov dec fbstp and nop dec push sbb push sub or push ss sub push xchg jg mov aad pusha incb dec sahf (bad) sbb cmp rcr inc cmp pop sbb rcr fstpt sub sbb add leave adc stos dec (bad) in adc ds (bad) jb es cmp std mov mov mov fwait pop test lea dec inc cwtl mulb int push mov push pop out push sbb out bound fistl mov dec leave scas sarb xchg ret test push and fiadd jne mov dec push mov mov pop xlat (bad) dec in (bad) mov int push dec adc out arpl (bad) bound dec push inc cltd jge sub lods aad mov jno pop ja pop iret popf jg ljmp pop pop enter out lock cmp dec cwtl sbb ficoml cs out jge scas sbb xchg addr16 loopne lret mov mov jp pop adc push test loop jmp and and cmp or add xchg sub (bad) fdivl outsl (bad) xor (bad) aas outsb or push jne aam insb leave push mov xor and ss inc push fcoms dec jecxz add movsb dec popf dec cltd lods or ss int lcall or inc arpl loopne dec jbe ret adc rorl daa outsl dec repnz xchg mov je int sbb bound dec cmp sbb leave cmp pop movsl out je pop nop les mov into mov and mov stc jb cmp bound xor out fidivrl sti nop daa fadds push les inc mov stc cmp xor dec pop xchg gs push mov sub pop mov xchg test fdivl cs imul repnz into jbe dec adc dec js inc xlat imul sti xchg outsb leave mull dec lret div cmc xor push int je pop mov addr16 mov hlt leave mov mov pop je (bad) cli sub adc dec dec in push popa push push leave mulb out pop ret mov dec xchg adc cmp mov jmp xchg (bad) mov inc test inc (bad) xor cmp xchg shlb jge daa add pop jns mov out xchg repnz adc dec push jne (bad) in repz mov xor and dec mov lret cli xor jbe pop sbb leave pop loope lods sbb jne push xchg dec bound ret fidiv lahf daa mov dec mov xor lea int3 mov imul inc xchg test ds mov cld xlat dec cmp jne and fwait xchg jb js xor cwtl in push movsl jmp pop sbb adc jge adc (bad) sub and adc and aaa psrlw push adcl dec sbb in ret in jp call push xchg flds nop mov xchg repz mov sub pop pusha nop dec push pop pop jp call cltd divb sub dec sub mov xor mov arpl push dec push mov rolb sub cld dec pop sub add mov (bad) dec xchg mov jmp dec mov sub mov pop pop clc sub jmp mov sub mov sbb adc mov sub xchg xlat xchg (bad) inc cmp mov icebp sub jmp lret rcl (bad) mov (bad) cmc outsl sub in rorl jno jb jmp loop aam pushf sbb cmpsb cmc sahf sbb mov pusha in sbb sub movsl jmp sub jne inc sub repz dec cld fnstcw sub jle hlt push inc lret (bad) pop fistpll test jnp xchg sbb mov sub xorl jg,pn popf (bad) out stos push into call mov lds pop dec cli sub cmp out inc out adc out sub leave jmp sub inc or xchg jle mov stc rcll imul outsb sub pushf pop mov mov and sub sahf sbb negb and or scas mov pop add sbb jp jmp adc xchg mov adc xor and pushf pop insb jno mov fldt sarb pop push or mov sti inc aam inc out sbb sub rcrl xor cltd bound jge scas mov sar mov mov sub stos sub inc (bad) sub rcll aas sub outsb dec arpl cmp adc and jne sub add push or cltd and pop jmp test sub lock and jns cmpsl inc ljmp jne lret scas jb mov jle (bad) and and or xlat jmp std test adc sbb xchg test push xchg mov sub adc dec pop imul cmpsb ficomp jne jns dec sarb jl sub sbbl cmpsb sahf mov ss xchg or imul das pop icebp int3 jbe adc sub pop mov push sti dec mov and xchg adc imul push xchg (bad) int pop (bad) in jb inc sbb movsb aaa lcall and (bad) movsb stos test xchg mov (bad) jbe adc mov sub jbe xchg lock xor (bad) arpl lods lret ret adc js mov dec xchg adc (bad) hlt xor mov out fmuls outsb adc mov or shr addb mov psubsw loopne fnstsw mov dec out push fiaddl xor ss push push out pop mov cmp cmp rolb push mov inc adc sub aad fildll imul mov inc (bad) test push imul sub push and mov dec lahf sub call add mov or in adc sub xchg int3 or out sub daa rorb jbe nop mov sti mov sub sbb fnsave add cmp movl lods rep aad adc loopne pop add inc dec mov movsb xor pop mov adc lods pop jb add ret nop (bad) dec es pop pop (bad) out data16 in cmpsb arpl sub pop jb dec (bad) lods lock push neg leave pop test and sub test mov pusha loop or dec jb sub fnsave repnz adc mov pop sub gs std adc lea or sub and popa test in dec jle stc cmp imul ss sub jmp mov scas daa fdivs clc and adc inc test inc adc mov mov (bad) sub fcomps sub pop sbb dec push xchg aam les push bound scas out mov inc add daa into pop pop js fstl fsubr mov ret inc test arpl cmp enter fstps sub inc mov mov clc cmpsl mov popa out sub push adc jno (bad) loop lret scas push xchg nop add ja (bad) int jmp rolb adc cmp cmp jecxz xchg sub lods sbb inc sbb rorl pusha push testb daa movl xchg jg ficom push les nop xchg or sub mov roll sahf sub dec or test int xchg push jbe out xor in dec imul cmp popa insl xchg ret rcr test loopne fcoms and jae xor cmp and daa aad shlb and add sub jae imul jp or scas sbb repz movsl and orl cmp add jbe or dec cmp xor aam cmpsb fldcw gs cmp repz push movsb push test sub inc or lds sahf pop ljmp mov sbb pop icebp inc cmpsl xlat ret outsb sar mov jmp cmp call cmc jbe adc pusha jg and and mov test adc mov mov and movsl hlt (bad) sub imul mov dec test mov out iret sub (bad) aaa xchg xor pushf loop imul xchg aaa adc fcompl lret icebp leave fiaddl jo mov and cmpsb add clc sahf or xchg xor mov jno xchg sub add sub test dec adc push mov ja int stc adc push xor ss lcall in mov dec sub and cmp out pop das int aas clc call mov addr16 push inc or fsubrs pop mov jnp sbb enter xchg lahf or pop hlt xor push jne or sub mov out cmpsl and inc ja sub (bad) jo or jb (bad) jmp jbe cmp xchg and inc imulb dec cltd mov dec sahf fxch cmp repnz sahf fisub sbb test xchg jmp aaa push jae inc add add loope pop jo cmc jns pop push lods jmp in push fildll add push mov mov ds movsb or jns mov push (bad) into sub cmp lods fwait sub sub or sub pop je cmc cld cmp sub lcall js push jp,pt add and xchg or shrb push dec pop jp sub fs orb cld (bad) add or bound fs test xchg imul sbb adc lea or insl js (bad) xchg add (bad) xor fiadd mov (bad) call sahf lahf sub dec cld mov das sbb dec mov xlat icebp outsl mov adc mov jp sar (bad) lahf sbb jbe mov stos sub (bad) sbb add outsb es adc loopne cmp sub sbb imull aaa int jle and cmc xchg ljmp sbb sub imul fs loope clc je ss dec imul sub mov push dec idivl xchg inc (bad) test movsb cmc sub stos jp mov (bad) outsb out and xlat xor cwtl fwait inc lods push sub inc sub dec inc or sub pop insb sub push (bad) in call out cmp rcrl aam cmp (bad) iret xchg xor test std ds xchg fucomi dec enter dec inc mov test loope sub fidivl ret dec jl rcrb dec push loopne popl or out das sbb inc jle int3 aam cld aad int3 jmp and (bad) sub jo xor sub mov fdivp push xchg in fildl xchg mov cs aam jg jmp sub iret sbb dec xor leave sub lds mov daa sbb pop (bad) dec loope leave push sub mov sub xlat jns mov cltd mov pop outsb stos sub jle pop mov xchg adc mov pop jmp jge aad in cmpsb das and cmp repz adc out sbb les lcall fdivrl stos pop or in int3 stc loopne out add (bad) jge inc xchg mov push or push dec es stos mov (bad) jp xor jmp loope (bad) push jge shlb and and enter mov dec lcall pop insl popa imul fldt dec jle mov mov repnz mov sub leave mov inc shrl sub jecxz imul iret xchg int3 push addb stos lcall add adc xchg xchg sbb or dec xchg jo adc add (bad) push ja ss mov incb aam test inc push mov ss rcl add push mov jmp xchg xor mov or sub xchg inc dec and fist xor sbb fwait sub in es sub mov and int pop cld xor repz das jnp mov test push (bad) xchg in ja add arpl push add (bad) icebp mull pop cld (bad) bound inc push cwtl imul xchg std lret mov sti cltd sub dec stos test outsb push jns mov loop popa faddl loopne cmp shll insb into dec cwtl cmp jp cmpsl rcrl pop pop mov (bad) xor data16 int outsl test push inc movsb add jecxz int push add cltd test add dec pop inc dec cmpsb cmpsl xchg jmp pop add mov adc ljmp adc adc sbb jns int add cwtl (bad) pop and push sub int3 repz ds fwait pop in push adc popa cwtl cmpsl int (bad) test xor pushf out fcomps fs nop loopne outsl lahf sub call add dec out imul sub pop (bad) leave sbb aad push test jbe add mov sbb jmp ja rcll or test cld (bad) sub mov xor inc lahf mov sub add std lret hlt xchg sub sub int enter sub jg fiaddl fsubrl fs je cs sar int mov sub pusha repnz sub xchg int pop pop pop ds mov sbb insl cmp adcb jmp loop mov sub lea cs daa mov push out out sub fmull ret add sub adc ficomp inc sub push add ss cmp inc data16 stos pushf stos sub daa popf scas sbb lcall test icebp scas sub pop mov adc into sti gs cmp jecxz sub xchg pop mov or sbb dec push aas fwait addr16 sub sbb test test pop icebp inc xchg aaa stc pop pop fsubrp sub or jb pop hlt lcall js xchg add ds outsl (bad) add imull jns dec dec add cltd fnstcw sub movsl xchg or arpl or jle jbe sbb cmp and mov sub mov cmp loop and ss xchg cmp cltd test shrb dec inc int add xchg aaa out repnz in call inc push loop add es (bad) fldcw xchg cwtl (bad) leave mov cmp and jle pop push mov scas divb test fwait dec xor sbb push daa scas pop movsb or loop cs xchg popf rorb cmc cwtl imul or fcmovnbe jb push lret arpl dec or pop xchg and popf adc xor inc and push adc imull je add repz and mov repnz cltd mov int lcall aam popa int3 dec or lods cwtl mov and push mov sub inc das adc inc test fbld outsl xor rcrl xor leave rcll pop imul ljmp or subb cmp daa rclb mov cwtl push dec push xorl mov push mov insb les cld test adc and sub (bad) ficom cld test in push aam std xlat jp pop loope or push dec cltd inc stos pop aam push ss dec movsb xor dec addr16 xor fcoml sahf stc push mov mov or push jns repz xor cwtl cmp xor adc pop xchg mov sub fwait icebp jg clc dec in movsl cmp dec (bad) mov pop cwtl jns ret mov mov rcrl sub popa test enter jbe pusha pop push cmp xchg sub inc mov pop jb test imul fistp mov inc ljmp arpl pop insb repz imul imulb pop test dec xor sub arpl jnp jmp push outsl test js jb fadd mov cmp add (bad) jae dec or adc cltd sbb repz xchg enter adc push call cmp arpl mov adc sbb push lock negl aad (bad) xlat push movsl and sub out pop loopne test dec cs mov sub inc test pop push popa sub aam fdivrp mov ss inc add rclb imul adc jecxz and mov enter mov xchg mov adc xchg push sub arpl insb (bad) push stc out xor mov jmp xchg (bad) xadd popaw jae pop inc push jmp sbb sub mov imul inc jae outsl aaa xchg lods cmpsb frstor adc imul adc sub out pushf repz lods movb mov push pop push orb sub scas mov test jae imul loopne aam xchg or and mov push mov mov fsubrl cltd mov sbb out pop or js adc (bad) jb sub dec test lods jne mov dec lea addl xor and push test sub mov ds mov inc adc sahf cs outsb rcrl arpl sub dec mov mov test (bad) repnz pop adc sub add js popa push into pop stos loopne add (bad) repnz stos ds xor sti mov push inc int dec pop xchg push and inc push movsl or fisttp xchg out sti icebp and leave pop or (bad) jbe adc sub leave cmp pop ja xchg xor sub jb mov pop push mov rorl dec xor mov push mov fsubrl sub fs sub test ds xchg pop in sub or cmp call dec imul ret sub cli lock sub out mov adc cmpsb push scas dec movsl adc mov cmpsb push dec jl xor add sbb scas addr16 mov xchg (bad) dec xor and les movsb dec sahf jno iret xor mov call jle js call test sbb movsl push dec jns and divl mov rcrb xor loope mov shrl or push sub sbb in jb (bad) (bad) lock pop addr16 ljmp insb pop sahf cwtl sub aam xor leave xor mov divps inc leave cld dec push add adc cmpsl lods stc push mov das cs fist cmpsl stos pop imul cld xchg fisubr sub test loopne sub test xchg mov add lret bound and cmp and (bad) sbb fwait sub fwait sub sbb ret pop inc xchg add stc dec call (bad) sahf movsl repz sbb insb js and cmpsl fs xor mov xor bound into sub shrb lcall je pop cltd cs nop ds cmp push sub lcall int3 mov jmp push arpl mov rcrl cmp loopne mov push mov lahf stos add xchg sbb das cmpsl or jb pop pop call or jb jl ret mov jbe rcrl fldenv inc push xchg shrl pusha out mov movsb imul mov es or int3 jg outsl xchg lcall idivl xor es pusha rcr lods icebp jbe lock xchg sbb mov add or xchg mov jecxz sub out push ficom mov sbb mov insb jmp sub fildll es js or lcall imul out or mov sub in jbe adc jns cs and imul sub addl sub push or xchg xor stos (bad) mov mov dec jle insb add mov add subl cmpsb pop cmpsl mov ds push lods aaa sbb mov sub sub shlb sbb sahf frstor repz or mov out pop inc lea sub jb icebp notb push add rdseed aas test lahf fbstp push cmp (bad) ss adc mov dec mov sub or ljmp pop das sbb sbb inc icebp cmpsb jl adc (bad) adc lea jo mov push sub jo sbb pop and dec push in fnstsw int mov (bad) int add push sbb xchg inc push adc sub inc (bad) cmpsl mov lret sbb pop int fnstsw dec lret sbb sbb jae in jb jge jp scas lods add leave ljmp lods test or test and cmpl xchg test mov dec mov push jge cmp inc clc push fidivl add ret int mov xor jno inc xor imul test push popf decl pop sti or cs out xchg fildl sub adc cmp cwtl pop pop roll jecxz push dec xor or mov sub pop lret gs push fdivl loop es ret iret cmp stos out lret outsl lea jno jns lcall (bad) jg mov daa jnp icebp lds test dec sbb outsl leave pop jno addb mov (bad) dec std lahf in ficomp jecxz mov imul std stc xlat lock sbb dec jo push pop mov dec inc mov lahf pop flds test test push outsb sbb scas js in dec in movb call sub dec shr fs into push insb bswap mov stos shr orb mov mov mov mov popw rolb jecxz cmp add mov das jno push outsl andl int pause sub or cli mov rolb pop dec addb cwtl insb mov push sub repz mov lret (bad) mov mov push jbe insl push int3 (bad) sub int lahf je out and rorl in sub lea rcrb fisubr sub hlt aad inc (bad) xchg scas mov xchg or xchg xchg xor cmpxchg and mov aas jp loop sub aad repnz xor daa push mov mov ljmp jno dec in dec cmp (bad) inc xlat dec loop cmc sub mov or ds rcll adc mov test icebp inc addr16 mov (bad) xchg mov test sub dec aam xlat icebp std push sub cmp sahf hlt fldt lcall (bad) jb or cmpsb bound fwait pop inc sahf (bad) arpl dec sub add pusha cmp or inc fnsaves inc push fbld in sbb imul iret fs fisubr test sub mov scas xor mov in jg xor test lret mov xchg jmp inc inc lahf outsl sub das sbb loopne and (bad) sub xchg and sub call sub xor jae aas xlat sub xchg mov sub std dec push mov int dec aaa sbb test jbe mov or lcall test pop sub clc push repz mov inc sub popf inc cmp data16 pop pop loopne push nop in inc mov adc or xchg cs mov jg push or inc adc xchg pop sub cmp cwtl and sub movsb scas adc (bad) leave pop dec loopne xchg movsb ret push dec fcompp xchg inc push fwait dec xchg call in cmpsl and je testl test stc ja cmp sbb jno jmp cmpsb mov sub xchg (bad) dec inc stc js add ja sbb adc mov int movsl mov int3 (bad) inc je addr16 in adc push je lret scas (bad) fwait je or dec notl fiaddl add (bad) cwtl adc int adc pop ja imul mov xor out dec cmp add pop cmp mov es (bad) loop stos jg xor dec cmp mov mul or xchg cs add lret flds cmc add sbb push daa jbe leave push inc (bad) cmpsl into scas dec fldt sbb out sub mov xor mov dec (bad) mov dec ror lock out subb jnp sbb ja cmpsb and inc mov lods sub icebp (bad) lret pop in loope insl dec jle push pop xchg add insl loope (bad) sub cs loop push ja out (bad) movsl pop push mov loop inc icebp adc inc bound pop dec inc (bad) sub arpl cmp cmc lods pop jle or shrb xchg add ret xchg ret sahf mov dec test and cmp dec dec push out sarb jecxz push jecxz (bad) insl push cmp mov adc and stos inc xchg lock icebp xor ss (bad) sub loopne mov mov dec sbb fmul (bad) movsl mov jbe cwtl fidivl ret nop xchg (bad) sub aaa lret mov dec cvtpi2ps imul jg xlat mov xchg sub test stos lahf test arpl dec xchg adc cmpsb loop test pusha mov or jp push imul xor cmpsb and sub sub sbb (bad) arpl fnstenv sub jnp test je cs adc in pop mov daa lea scas ret orl xor xor or in stc lods xchg jnp fdivrs cmpsb fs std in push stc cmpsb pop sbb ds lock gs jp inc clc cld jg shll cli push xor pusha adc aam movsl mov int je pop aam pushf jb mov push inc mov cmc rcrl jo push cltd mov shrb xorb pusha and mov aad pushf jno jb mov and jmp data16 adc insl mov leave pop daa aad shrb or cmpsl mov and leavew divl insb push aaa jae mov outsb ja lret pop testb andl dec and (bad) and (bad) pop (bad) int push outsl cmpsb push mov pop push jne scas jmp jns dec dec outsb hlt cmp xor dec xchg cwtl test sub leave lea push frstor dec arpl or ljmp dec pop mov sub mov jg and pop cmp mov imul add xchg movsb dec in leave stos scas sti dec pop adc (bad) cmp fwait call stos loope addr16 jmp pop sbb push cmpsl xchg sbb movsl and jnp icebp mov in fcmovnbe dec push dec arpl pop push cmpsl aam xchg cmpsl loopne sbbl push add add sbb push repnz (bad) movsb add int aam cs in or mov jo inc (bad) decb dec xor sarl cmc movsb and int adc xchg imull or mov ljmp sub dec movsl aaa loop outsl sub stc pop add pop ret mov jae repz lcall push jle,pt sub loop test in cmc sub call and push dec jl repz dec sub pop mov push je jb add xchg in frstor test enter mov inc aad rcl sbb push lods in imul sub cwtl dec fisubrl lret es inc addr16 pop jns push mov inc jmp lods mov les push pop mov and test cmp fldcw adc mov cmp nop in pop in dec and es jmp sub xor call mov call inc aas xchg outsl pop or xorl xor sub mov sbb mov xor lea xchg cltd jae cld jmp (bad) push fwait inc sti lret insl dec sub call pop mov add push (bad) push cli cmpsb sahf mov scas pushf pop xchg sub daa loopne outsb mov inc sub iret xchg (bad) xor arpl cmpsl and xor scas sub and ret test lcall dec pop popa adc xchg jae adc (bad) mov pop jmp ss mov push sbb mov mov out loopne scas mov ss cmpsl jle add fsub mov imulb push cmp mov fidivr xchg lahf pusha mov std sti dec dec fsubl mov and adc xor fsubp sub roll inc jno sub pushf call sub cltd xor sub jb pop sub pop mov (bad) pop mov lret fisttpl inc jno ds ljmp dec mov pushf inc pop outsb jecxz push ljmp (bad) jae jge es jl mov cld lahf sbb mov bound jecxz sub out daa cmp les mov sbb scas adc cmpsl mov jbe test mov cmpsl mov sub or sub sarl pusha push inc in add (bad) fldenv repz out fnstenv enter ret sub lock lret loope cmp jl sarl xchg jb inc std in jae and sti cmp mov aam xchg mov ds fstp loop je,pt leave fldcw pop jb inc into clc sub inc jge dec je mov lcall call mov test xchg loope xor jmp and xchg jbe fs xor test sub jne xchg pushf repnz jo push (bad) test imul jnp and (bad) pop sti rcll adc cmp sub pusha subl cmp cs enter dec iret sub cmp jmp xor (bad) divb pop cmpsb jnp cld sub push mov fisubrl jecxz and rcl jns scas mov in xor ds and push sub sub addr16 outsb add ret or out mov sub movntq test pop repz out xlat mov xor cmp jb hlt push in jbe movsl cmp sub cld push sub out dec ficompl pusha sub ja imul jb sub mov sar xor lret rorb or fnsave sub fdivrs in popa sbb cmpl jmp inc mov cmp push jle xchg xor clc push pop sti pop dec callw stc mov fbld dec lods fisttpll dec int insl outsb mov sub pop push loop xor jo adcl les clc push xor mov pop int3 and stc into adc ret add loop add ja cmpsl and (bad) mov rol jp es push dec dec int test loopne pushf int3 dec dec pop (bad) out mov add dec fwait sbb push jno and cwtl or negl dec stos loop movsl je push outsl mov push cmp leave icebp fstpl and push mov lods pop addr16 pop testb stos or lret (bad) pop mov data16 fmull pop test test pop sti mov loope mov test xor mov xchg or push jnp fist push iret fcoml add lods cmpsl (bad) or (bad) jb adc inc inc push int cmc lahf roll (bad) in dec mov jge,pn lock out popl stc popf xchg outsl nopl sbb nop mov cmpsb push sbb dec mov clc add fs scas mov inc push in sti aaa call leave adc out ficoml or mov sub (bad) fdivrl sbbl ret xchg mov fsubl sti je repnz add (bad) lret sub pop leave lcall push cld add add adc pop dec add mov cli shlb push add jae aam and test loop push sub push daa adc sub inc lods dec sarb ss nop sarb pop in icebp stos add cwtl add fwait pop xlat (bad) inc mov or and test dec lods add pop mov sub xchg cmp into sysenter sub sub xor mov test pop js sub clc shrl nop xor xor jns movsl and xor xor or int3 push mov cmpsb adc test addr16 test pop sub dec (bad) dec mov repz or es cmpsl mov xchg or mov ja mov out xchg add push mov or sub outsl enter xor pop ja pusha dec insl pop mov cmp pop ss repz leave adc pushl fwait scas mov sub jns imul sbb (bad) scas cwtl jg sahf outsb sub or push addr16 xchg sub sbb ss fsubl inc pusha xor push jnp and stos scas sub cltd pop adc adc cmp sub cmp popa jl js fdivrs jbe out jmp jb and jecxz sub and sub sbbl mov (bad) loope and or dec xchg inc (bad) jne pop and push mov push cmp mov loop sub jp cli fisub test es push popf or lahf cltd loopne movsl xor push das xor icebp sub sub cmpsb outsl dec inc sbb es jb decl pop mov test mov and pop push arpl daa inc push repz dec or sbb in out sub sarb std mov outsb adc pop cwtl fcomp sti mov test sub cmp mov shld stc sub leave scas push hlt outsl jmp ss andl inc enter sub nop (bad) jne jp jmp add shll hlt aaa daa push mov inc dec push out jg inc sub push fcomps cmp cmp sub jecxz daa scas adc and jmp repnz inc (bad) xor sub fs enter inc repnz je xor jo mov adc popa mov dec add lahf sub data16 pop mov inc movsl jno sub sti fcomps jb gs push sub movsl notl add push add outsl (bad) or fsts out cmc (bad) jmp sub das lcall and xchg or test jnp jmp dec mov sub test mov inc data16 (bad) adc xor not ret push mov sub add mov dec add xchg test jge out sahf sbb mov sub les inc out mov fisubrl ljmp sub sbb (bad) in xchg ss cmc adc sub ljmp sub mov scas mov adc add pop faddl or cmp sub std dec xchg (bad) orl inc jg (bad) adc mov and ficom ljmp sbb mov inc sbb sbb cmp insl pop pop sub cmpsl mov add loop xor fimull sub ljmp mov imul out and push neg lock sub loop cmp mov repnz sahf daa mov lock sahf sbb std or (bad) jae test dec mov sbb jo das or dec xor out xchg sub lret add and sub mov out cmp nop mov mov sub mov mov jg aas push cs std dec dec jge mov dec push js,pn inc xchg scas out and mov ds inc or sub fbld cmc fnstenv add dec in dec aad data16 sub js neg addr16 sbb xor push nop sbb loopne mov (bad) pop insl mov mul sub pusha int sbb sbb sti adc mov out and mov popf cmp or push pop jae sub xor shll mov fnstenv inc or pop es and jge out daa and pop inc inc inc sahf xor mov xor add loope imul ret and mov push inc in insl inc fistp sti sub cli dec nop and stc push mov test loope mov sbb aad shrb mov inc lods fwait ret out fildl fs xor imull mov add mov test sti xchg cmp cld sub sub inc (bad) ljmp cmpsb sub inc cmp or movsw mov sub aaa xchg fnstenv mov les pusha ret cmp jle xor xchg lods icebp test cmpsl pusha pop pop sahf out dec adc hlt add nop xor lcall jmp sarl ret xlat cmp xchg xor adc outsl jp and jae fsub adc mov sbb sub inc mov cli fwait mov lcall jecxz sbb inc pop cli jb xchg cmpsb icebp adc (bad) incl daa negw sub push shl ja jg mov loope sub inc push cmp or push daa inc icebp scas jbe add mov rcr andl arpl loop shrb push leave xor cwtl pop cmpsl inc push pop inc out xchg dec stc add nop idivl test mov and leave mov pop mov fidiv daa movsl xor xchg data16 push pop nop jno jno xchg xchg cmp (bad) stos sub daa in arpl inc push adc pop xchg jnp cmp mov aad dec iret sub sub shrl int3 push mov add mov aad mov bound and sbb (bad) and or mov add sbb mov fucompp nop jl pop out sub pop jae leave push sub fimul jb mov pop adc rorb add cmp adc iret int3 push xchg xlat (bad) insl (bad) mov xor push inc dec cmpsl leave lock hlt dec fwait (bad) push add add xchg jo ucomiss inc fsts dec cmp loopne addr16 xchg sbb mov int popa push mov inc cli sub dec loop and pop cmp jbe pop test push mov shrl mov sbb rolb push (bad) fidivl ljmp ss int rclb imul cmp sub rclb aaa cmpsb inc pop loopne nop (bad) jp in jecxz pop adc pop or leave fiaddl push lea nop sbb push cmc jp (bad) aaa int cltd cmpsl mov cmc test push jbe sub jno cmpsb cltd xlat pop mov cli inc dec sub lods sbb xor xchg stc or push sub pop add lahf orb cmp fcoml insl fwait dec xlat xlat aam mov les mov ficoml inc xor addl sub lahf xor and jbe cli xchg jp imul pop xor pushf (bad) or cmp stc dec sub push out int cmp cmpb not pop jns jp push mov loop out (bad) jne ds xchg dec push xchg push ficompl bnd xor dec push jge aad xor inc iret outsl jb lods jecxz jl cmpsl cltd clc push xchg les inc dec rolb push scas andl (bad) popa les sub mov inc add jl mov jo and jge in test fwait cld stc push movsb jns sub inc (bad) jb iret call mov adc pop ds sbb adc inc and shrb xchg push and mov jmp lods in fsubrp and nop and pop inc jle xchg sub das or mov enter icebp inc push sub lods inc push dec cmp das pop sbb xor pop les cs mov jmp dec (bad) xor add adc mov nop fidiv bndldx sub icebp inc cmp pop lret test push or sub and repnz xchg sub sbb aam pop or dec inc dec loope jge mov mov sbb cmc scas lock or sub sub es xchg add mov push dec cmp ss subl int3 hlt pop and pop pop jb sub xor adc movsb es lods pusha in sub or mov cmpsb lds push jae fsubp in dec mov jno pop les sub lahf fistp pop mov jge add lods cld fldenv hlt sahf out and sub rcrb sahf fildll push sbb and add push fildll in sub subl fcomp ds jle,pt test sub js mov loope,pn push pop bound shll sub xchg mov push xor orl sub aad mov lahf fisubrl aam or vpunpckldq or ss sub push sub sub aam scas sbb jmp jecxz (bad) cli pop sub (bad) and ljmp and pusha sub sbb cmp daa sbb ljmp sub dec and pop push (bad) mov fcoml xchg add test movl and std push jecxz jmp or dec lahf test enter push inc aad push dec mov mov cmpsl movl es test in push cwtl leave pop bound jg add in jno mov jmp mov out test xchg mov push fnstcw or jae dec mov aad mov out jl (bad) mov push lock ret test dec int fwait ret push add sbb mov dec movsb and fsts test loop int pop dec jo jmp and test pop pushf leave inc jo mov lret lock sbb mov test dec loopne jecxz fwait add push jl (bad) int xor jecxz mov (bad) xor sub daa (bad) cmp xor imul in sti mov stos inc lcall dec sarl inc xor jnp ja adc cmc pop sbb stos dec and lds out pop sub pop (bad) mov push cmp jo fisubrl stos (bad) int out pop aad shlb data16 adc dec dec insl jae push push jo imul loop sub push cmp in dec fistpl dec sub adc (bad) pop ds add dec xchg push and xor std stos pop data16 xchg js nop addr16 je mov test scas loop mov inc push enter (bad) mov rorb insb mov or (bad) repnz inc and mov (bad) xchg push cmp scas mov cmpsl loop push inc mov cs leave lahf dec xchg mov adc mov lea pop xchg xor mov or loope sahf mov insb add je,pn xchg loop (bad) pop xlat jg lods cs pop movsb dec pcmpeqb cmpb adc push pop enter into test sub mov sub movsl add insl pop push es jbe or rorl lock (bad) call fadds data16 (bad) xchg push mov popa in cs xor inc leave lock in mov (bad) cmc jb xchg aaa enter jge rorl inc cwtl jae (bad) lods jb enter dec dec cmp nop mov jl stos imulb cwtl subl and mov dec sbb mov (bad) mov push push inc (bad) sub sub (bad) negb aad mov int addr16 sub addr16 (bad) mov ja shrl (bad) call sbb sub mov notb push pop or sub jbe push test push jmp sub sub push pop in sub jg sbb jle and sub push mov sub loope mov dec lods pushf jae or cli xchg sbb (bad) jnp icebp inc pop cltd dec add push insl pop fwait dec movl ds cmp mov mov cmpsl ss ret fisubrl sbb popa (bad) xchg enter test mov push pop insb idivl cmp nop cmp adc add push jbe test ds pop xor inc add cs or sub fwait enter in add sub test jge dec cmpsl or sub mov xlat cmp and cmpsl jb mov std or (bad) adc pushf lods popf imul daa add mov ds divb cmpsl rorb sub and and xlat jb outsb arpl std test push cs loope adc stos push sub pop mov (bad) or data16 lea dec ficom aaa loop cmp jmp sti out in pusha not bound ud1 xor jecxz or and imul mov (bad) mov test aas pop jecxz cld xchg xchg lahf jecxz shll imul fwait rol jnp (bad) fisubr sbb jle dec popf ja sub push mov fistl int lods out dec dec cmp push xor and xchg movsb test sub (bad) mov (bad) xor cmp sbb popa push inc adc inc pop nop xor ljmp mov enter leave adc lea xchg in gs sub fdivrl mov inc (bad) sbb jmp outsl jo das sub mov adc push and jae cmp push mov test add inc mov pop (bad) mov gs add inc daa loopne push data16 aaa ret jmp jb inc out push leave dec imul push fisttpl dec clc cmpsl lea push mov and push insl decl ror adc addr16 jl rclb clc push and dec pop sbb fdivs fisubl jno jbe ljmp inc movsb leave cmc daa push dec mov daa jae jno loope inc push xchg sbb leave or bound lcall cmp out dec dec enter dec and out hlt enter xor push adc mov imul jb adc cwtl push inc xor adc cmp mov jbe movsl and mov fidivl adcb shrl cmpsl push inc push jae dec mov xor sbb jo jno aas into jp enter and lock setle mov test out movsb rol mov push int cli fs (bad) or and dec inc mov sub sub stc lcall xor mov int dec sbb lsl xchg mov outsl addl push stos cmp adc nop addr16 popf jnp xchg jo pop insl insb fucomip loop leave lods inc jo in sub sub lods (bad) cmp adc sub out mov pop aam hlt pop jo lods add sub mov mov fsubrs pop xchg jg jne xor lret std test imul push adc je lock sbb xchg lahf cmp xor xor push adc xor cmpsl int3 jnp std sub mov xchg push lods iret leave xchg mov push out and sbb inc mov mov mov scas or andl mov xchg sbb mov mov push aad lret mov jg dec aam lret push fs mov sbbl call inc sub jmp push cmp adc stc cmp cld rol cmp or inc xchg fidivrl ljmp enter test mov ret cmpsl push cltd mov push or loope dec stc push (bad) bound jnp cmpsl or jo cmp xor mov popa sub jo mov (bad) je popf sub pop sub cmc insb hlt push xchg js sub shlb or sar push imul movsl sub out das and inc sub mov insl aaa jb jl es xchg or or inc push pop sbb push stos (bad) mov stc dec in inc into or sbb decl push fisubrl adcl cmpsl push out dec (bad) ret sub sbb mov inc add js add andb adc pop pushf adc lret jle mov lds movsb mov lods xlat imul sub adc sub popf mov incb call pop loopne pop addb or inc pop cld cwtl or sub jmp aaa sub cmc (bad) insb daa movsb in or cmp orl inc sub push adc pop add ljmp lahf push mov or sbb adc sar jl,pt das cs push dec cs adc inc sub mov inc imul add ss sub mov mov cmp inc out pop mov or mov fsubp pusha mov ret push out sub aas and inc and mov mov dec repz mov sub (bad) sbb mov lds and sbb push mov lea add jp ret dec jg in out push inc pop icebp repnz aad fisttpl daa pusha sub inc or imul dec lcall sub jb pop sahf das cmp or mov pop add dec test (bad) ss or sub imul ret push dec inc add fwait bound mov or push decl and ret add jae jle jge or in lret sub mov sub cld int3 es je sub sub data16 or mov cmpsb lahf clc outsl inc pop cs fadd scas and cmpsb loopne push cltd jmp pushf mov xor dec add or popf icebp or ud1 aam xor loopne inc or gs adc adc pushf mov pop loope jmp dec (bad) push or insl xchg dec jb lahf adc test or jl xor xchg (bad) jno cmp iret popf pop out inc scas mov fprem1 int3 cmpl sbb movsl inc or std sbb stos and enter and pushf pop ss je xor rclb (bad) dec (bad) lcall sub cmpsl inc les enter push pusha sarb push mov xchg xor cmpsl push lcall and xchg jb shrl aaa adc mov jb sub sub test mov mov int sarb cmpsb out movaps enter xor adc not adc iret fcmovb add arpl xlat nop sub ljmp aam and mov add cs daa js notl add fidivl sub and push imul sub sbb xchg subl add jg dec push push hlt push stos sbb sub inc pop mov sub aam stc lcall sahf mov outsb sub mov inc lea sub fisub push xchg cmp ja (bad) ds scas jg into call les clc cs cmp (bad) push sub movsb push notb stc sub cltd rorb sub mov imul mov adc mov ja push int movsl mov into in xchg pop and test xchg push cmp and and sub shrb sub pop fiaddl jo out jmp dec (bad) call inc or outsb pusha push cmp das xor shrl adc xor push sti cmp sbb movb sub jno and sarb out dec inc jmp mov leave outsb xor mov push lahf mov cmp push dec leave push push (bad) sahf lcall add mov and cmpsl sub incb (bad) xchg leave push rcr push cmc sub mov sub pop fldt cmp and push mov movsb (bad) out xor sbb lret jecxz push cmp mov add rolb loop pop jns push mov push rcrl and push popa scas int pop pop dec and test adc int pop dec (bad) mov stos push mov adc (bad) sbb xchg rcrl sub (bad) add cmp test fildll cmp lret push dec lahf add nop ret xchg mov jp (bad) xchg jno into pop add xchg int ljmp adc jae loopne je scas jle movsl (bad) sarb std clc das dec loop mov adc arpl push cmp xlat (bad) dec dec mov pushf jb pusha loope cmp mov call add fsubp mov mov mov mov mov sub test icebp int mov in fst sub jne loope pop inc push pop fs cmp xchg sbb outsl fnstenv xchg jbe shlb sub stc cli jb popf (bad) ja lret add mov or xchg mov sarl pop sbb adc sub outsb (bad) xchg lahf jmp sub ja dec inc mov jae stc jno sub cli ficom xchg sub in pop xchg repz outsl push repnz (bad) jb sar rorb (bad) or scas loope cmpsl sub mov xchg lcall mov and push push leave js mov dec test dec mov pusha test sub jle fwait stos jbe adc inc loopne (bad) sub pop or inc lods es sub pop push (bad) out popa test adc sub pop mov cwtl or cmpsl cmp mov push fyl2xp1 clc pop sbb scas cmp inc cld mov inc mov sub stos lcall cwtl lods dec pop add and inc cmpsl mov inc lea loope (bad) (bad) enter and jg cmp xchg aad dec scas xor mov adc push stc sub or mov ss mov insb ds loope data16 sbb cs jne popf dec adc cmpsl push cmp push test in fcoml push das sbb shll out sbb pop push mov cmp push inc cs cwtl pop int mov jno loop mov push cs popa lahf sbb add push push xchg cwtl xchg dec into pop dec push lock push dec sbb push arpl push add lods jo lods sbb mov mov pop cmpsb movsl mov sbb push cmp and out pop xchg clc pusha movsb push add outsb mov out xor sbb pop mov dec jg jae in lock (bad) je or movsb test push adc sub into test test int inc inc mov adcl push pop or and je stos and adc xor fldcw fsubs loopnew push sub daa jae xor aas les mov add outsb pop mov dec mov leave sub insl int3 fsts push pop mov rclb in cmpsl clc adc xor shlb std adc cwtl (bad) mov popf inc (bad) mov aad mov fiadd push sub call push and dec push cmpsl test fnstcw movsb dec cmp jns (bad) daa pop lea ret sbb mov xchg inc add lods dec mov arpl mov push imul push outsl rorl lea and mov sub mov sbb mov loope sbb push lock mov xchg sbb inc cld pop test mov jge out leave inc enter mov pop xlat jno pop pop jo adc stc test mov cwtl icebp and sub fildll jg mov sbb sub lea call shl sbb push dec scas (bad) clc sub or inc inc sub push sub cmc stc add xchg mov xor pop rorl xor imul mov push mov push cmp mov js loop outsl or lods inc and pop ret daa mov movaps ret incb loop lahf test out xchg inc andb repnz in add pusha loop ja mov xchg cmp cmc ror dec (bad) sub test cmp or sub fnstenv or aam push das ret xorl cli shll dec loope jl sub int sub mov rol dec sahf push daa cmpsb adc movsl loop sub pop inc xchg xor push mov (bad) cli dec xchg aaa add sub aam lahf xor rcll outsb inc sbb rol or or cmc cs mov jp xlat int3 cs dec xor fdivr sarb add mov shrl pop icebp xor pop outsl loope loope adc sub nop in inc pop sub xor and out pop sbb push xchg outsb push xor mov sub aad sbb sub cmp test mov sub pop cmpsb cmp (bad) jg and or sbb dec cmp shrl shrl enter sub out xchg pushf das popf ds push mov pop lock pop (bad) loop sbb notl jg fildll roll movl dec sub lock scas out push push jb jb fbld dec cmc dec jle push adc jmp sub insl sub xchg cmp xor movsl sub stc into pop outsb mov aaa adc inc sub adc dec in pop aaa decb sbb push repnz (bad) cmp mov push lret sub adc out mov std dec bound adc push jl pop lock sahf sub cmpsb lea cs push shll stos movsl cmp lds xchg jmp test stc andl aaa enter ja ss pop or call inc test or sbb sub leave push cmp sub sub stos sahf or daa lds leave adc das pop roll cs imul jl xchg scas test insl inc (bad) test aam dec add rclb jbe sbb inc mov aam xlat (bad) fisubr ds jge fist jmp (bad) ljmp cmp or movsb sub sti lret (bad) decl push sub mov sahf aas push push add mov clc push movsb out jbe dec xchg mov mov adc inc repnz sbb movsl mov fs xchg lds mov jb aas xchg cltd mov add inc and out popf xor int hlt aam es xchg in lahf in or rolb add imul arpl pop adc jne (bad) fisubrl cmp sub jl xchg adc sub out repz loopne pop ja cmpsb xchg mov sub pop lahf xchg mov daa push inc sbb pop fwait bound sahf ret aad or out or out cmp adc rorb addr16 add in or iret push idivl sbb insl popf sub test pusha push jg,pn jecxz test cmpsl ljmp cs mov inc pop pop fistl repz jb add aam and inc daa jae and sub nop lret aas loope and sub insb mov or lods or sub cwtl (bad) push scas mov jo push enter sub inc int3 add xor xor cs sbb cmp pop sub enter loope pop and push jecxz and mov inc ja repnz bound jmp insb ficompl enter shl bound cli cmp push jns insl (bad) dec and dec xchg ja sub dec scas rorl add clc shll jnp int3 sub fsubrp sub inc (bad) into xchg aaa or aad mov adc movsl sti mov inc std mov xor dec je and rcl inc push jb (bad) xchg adc ret (bad) lock mov and jb cmp mov sub sub js pop mov pop sar dec inc mov decl (bad) and clc push stos mov mov call repz fldcw sub add dec add or sub pop dec add call arpl mov aas mov and icebp sub pop das ds xchg call xor pop ret xchg push pop bound rcrb sti sub ljmp out sub fsts xchg mov (bad) dec int3 out nop int jle jns lahf xor lcall pusha push push mov cmp movsl popa lods pop je xchg cmp dec in ret idivb mov loope xor fs add ret imul jmp mov call sub push inc test js ss or hlt xor sub out pop stos push jne jb mov in das mov mov int in (bad) sub aad sub mov jno inc scas aam int3 scas pop mov lods sub sub bound mov cmp mov sub int3 ljmp ret jge mov enter xor (bad) inc sub cmpsl mov sub popa imul or aaa push jns data16 loop jl ds testl pop jp push ds fidivl xchg dec in or xor push lds or push (bad) jae mov cmp sub hlt cmp sub xchg aaa push je int3 add and xchg push lahf outsb jg in fwait mov sub rcrb push cs ja adc (bad) jbe nop pushf and sub (bad) (bad) xchg push dec lock push stc and scas sbb sub push bound cmpsl inc sub jne push repz sub stc out insl push mov mov xchg orl sub mov pop pushf xor cwtl push xchg pop lds cmp leave mov fstl shlb mov dec shr push mov das and push daa jnp and adc cld (bad) cs add testb mov jmp adc xor test test int3 pop jl mov lahf pop cld add jle push push dec mov mov jle jnp daa xor xchg and or (bad) fdivrp jmp cs leave lock sar pop leave int arpl cmp test repnz pop jns lods mov stc dec movsb out inc (bad) lea push pop push or fs and xor jl push or cli jmp cmp cs xlat mov cmpsb enter pop into stos inc addr16 xchg adc or xor mov scas sbb mov jno cmpsl cmpsl adc or std mov sbb ret and sub nop adc and mov push adc mov and push ret aas pop fst jns sbb (bad) jne mov fimul icebp test cmp call stc aas leave int insl or inc ja aaa and cmp std leave push outsb loope sahf pop mov imul and mov daa jb (bad) mov fsubrp xchg aad arpl jb lds (bad) je enter jbe or mov sub cmp lret cs rorb mov out fiaddl js xchg mov fcoms or xchg xchg add jg jp,pn idivl push jle xor lods sub jp cmc push js int mov shlb xchg push mulb lret stc dec movsb sub pop sbb (bad) mov fmull (bad) xor sub jo lds leave dec inc jecxz lahf jmp add sub adc and push ja rcrl and mov aam dec add mov sub test cmpsl push inc fsubrs movsl ret jo cmp push xor or push sub jbe sahf fdivrp mov ja cmp fisubr in or (bad) lret push inc xchg into jnp test mov xchg dec (bad) out out pop std adc cmpsb mov mov loope cmp pop stos push bound sbb mov jmp sbb ljmp mov add cwtl or inc pop nop mov push sub mov push sub lock xchg mov scas fstps pop cmpsl add pop aam mov push mov adc ret (bad) push cmpsb push movsb std mov inc xor inc mov subl in test stos sub push mov push inc test jo xchg and cs sub lea pop outsb daa sub push repnz sub aad inc push mov push push jbe and arpl mov xor punpckhbw mov xchg out lods cmp ficompl or ss repz cltd mov lds xchg mov fsubs sub pushf xor aad cld or cmp (bad) fimull sbb mov sbb icebp sub out pop jo dec mov sub inc cltd mov sub and (bad) repnz adc add xchg sti dec sahf imul outsl sbb xorl dec (bad) cwtl lret dec sub jae rclb loop mov xchg add lahf add mov mov xchg pop push push sub cmp rorb or dec add jmp lret cld (bad) mov scas pop stc add sub pop jae repz addl sbb ja sub xor pop push jl pusha and cmp push mov ds gs mov popf into test int sbb jecxz out sub pop hlt jnp sub pop sub cmp lods mov fwait inc pop pop sub mov sub fisubrl imull adc mov in mov or test adcl pop sub mov cmp mov enter cld cmp mov add ret (bad) push xlat repz lret push fwait or lret xchg sub push jle dec sub cmp add into ret sbb sub scas or sub dec or or push inc repz ljmp jge outsl pop lcall loope (bad) sub aam xchg pop lds cs loop into sarl mov cmpsl lods pushf fsubrl fnstenv imull call sbb cmp xchg repz dec stc inc push jmp fildll lea xchg push mov jg jmp cltd ret data16 push xchg xor gs sub inc or (bad) xchg sar inc pusha inc pop jb int3 test xchg stos adc outsl xchg cmp push (bad) fcomp pop cmpsb inc js in fbld push cltd mov sub (bad) aaa and cmpsb push jp fldcw daa out insl xor jl int daa push jo (bad) mov jns dec adc in cmp fdivrp adc std xchg or cmp mov lahf mov pop dec loopne test pop inc mov int3 cmp stos mov out push pop mov push mov inc pop fdivr (bad) mov fbstp dec imul mov sub movl loop call int jnp sbb pop xchg xor jmp loop jns lods pusha (bad) js jo clc jb push pop or dec dec sti int shl mov pusha das and xor (bad) ja,pn or mov mov or add push mov js sti dec xchg push and in push sub int test lcall dec test sub sub jns jnp cmc sti fsubl sbb nop and xchg ja jo mov pop into mov fucomi stos cs ret push inc adc int push gs (bad) (bad) push mov jne mov xchg adc sahf (bad) enter dec and loope and push inc pop xor mov or jb xor lods je into mov sbb inc xchg aaa inc pushf xchg bound scas mov pop lea frstor inc jp das std add popa xor pop xchg test sbb cmc sarl add dec out mov and iret mov popf mov dec in pop mov jo sub aaa int cld icebp add xor pop cwtl push jg inc sbb jge mov (bad) mov dec test dec (bad) sbb hlt movsl xor cmp cmpsl sbb sbb push fcmovne lods fcomps movsb stc fwait das fidivr xchg inc add pop ljmp xchg leave dec pop (bad) daa add cmp cmp xchg push std inc add loop bound aaa push aam stc inc push jne dec cmp out es (bad) test inc (bad) fwait movsb inc sub add clc cmp sub js jmp pop and sub mov pop scas and pop mov pop dec xlat aad mov jo sub xlat stos (bad) mov in pop xchg int loop int3 lret pop mov adc pop mov cld jle pop stos or lret sub mov push xlat add sbb (bad) mov or aam mov lret xchg jg popf ljmp adc adc add push mov decb push jns dec movsb cmpsl fiadd pushf loopne and cmp rdmsr nop je xor mov or ds jle ja adc pop data16 into mov push adc adc js push jl cmpl es in loop fcoms push cmpsl test fstpl ret pop inc cmp enter dec mov push jae fsts push scas repz aaa sub mov or dec add xor loopne dec or cmp dec repnz push xlat fwait in add leave (bad) and add out cltd (bad) clc imul dec mov and gs fisubrl add jl out jb push lock push lret std mov or adc cmp sub jnp std mov fidivrl sub test sub je xor mov dec call (bad) aad pop push repz mov xchg test jbe adc cmp xchg push jb sbb int3 mov sub mov sub ret sub stos lcall cmp pushf inc sub cmc fldenv inc xchg mov pop jmp add mov das stos test mov jl pop out pop (bad) sbb fnsave jle hlt clc and jb out orb cmp rcrl push pop inc or sbb out or sub popf (bad) sub and sub rcll fldt movsb (bad) ret add test pop sub jecxz fiaddl movsl ret push jbe (bad) sbb push mov out je lcall and orb adc sub fildll lahf sbb inc pushf in xor lds inc jnp dec jge mov dec add std ret test cmc sub sub adc addl push sub mov call mov dec (bad) daa jge ret jg,pn lock and cmp and inc sbb pop adc cwtl ss in ret adc sbb xor repnz dec insl sbb xchg cmp aad mov push fdiv pop pop inc subl and negb xor stos cmp aaa adc xchg sub adc sub xchg dec add dec mov jae inc std out push sub call push xor push mov xchg imul xchg mov sub xchg mov xchg dec jmp add notb lods lcall jno movsb sub out lods push cmp scas ss mov nop and or add sub inc (bad) xlat jb sbb or adc mov jmp cltd pop xor daa out icebp test addr16 in test ljmp cmp js sbb call cmpsl es fdivrs sar mov sub ret sti mov mov call mov lds and dec inc pop and dec sbb aas lcall stos ja sub fbld cmpsl mov cmpsl cmpsb xlat mul push dec test and jns push stos jo lahf shll (bad) int sbb mov cmpsl ret adc repz out and cmp cld sub jnp mov (bad) jmp hlt test insb pop bound or loopne pop dec (bad) dec xchg add jne in cmpsl ljmp and adc jbe and and add not lea in call inc sub nop jecxz shll (bad) dec sub ret mov inc (bad) or and imul inc jno xchg out dec inc dec cwtl cld sarb push loop es push push jb cltd arpl js imul xchg shrb xchg jp lock sub je cwtl xchg ss setg (bad) and push add inc inc into mov mov or sub repnz ss push jmp push or es test push jp rclb cmc dec inc int mov add dec (bad) inc push enter dec stc leave ljmp mov dec int3 mov int3 jbe lds int andl in mov es push inc pop xchg jne daa andb clc jge dec or fdiv ljmp inc sbb push stos mov add (bad) or in inc andb mov je hlt mov push dec jmp adc mov sub lahf mov sub cmp xor cmpsl gs xlat and ret (bad) shlb xor in push stc and adc jmp fmull stos pushf sub pusha mov sub out mov and repz or ret je dec adc ret push btc (bad) sbb and cmpsl mov jmp jmp cmpxchg mov arpl pop jae (bad) sub mov stos popf jmp sub jo pop or jb sahf sub mov mov clc sub jne dec lahf add pop inc mov xchg addr16 mov loopnew cs out imul or sub mov sbb cmp imul out sub or test scas jl test dec ja jb subl pop leave jl mov cmp and jnp pusha add mov or jb cs leave idivb movsb adc push (bad) (bad) jb ss pusha into and xor push (bad) mov pop les push (bad) xor xor subl xor jns mov aam lods insl clc inc dec scas adc daa cmpsb pop call jnp xor mov outsb faddp je pop xor ja fs or adc and (bad) push ret sbb add xchg out test push or je cmp mov lahf leave scas pop cmp int (bad) aam popf sarl (bad) mov dec jp cmp sub cmpsl int pop in gs xor xor cs lods add push lods adc push jmp out pop mov bound imul add arpl fisubr xor rcll dec xor or adc xor ret lcall dec lods sbb (bad) lret jb sub xor mov cmp push or es das sub divb sub adc push int outsb fisubr dec adc insb fcompl nop or mov stc repz or mov aam xlat cmc dec (bad) mov mov sub sub xchg and mov adc jno cmp and pop push ljmp popa xor aam inc fincstp xor dec jmp gs dec movsb cmp xchg sbb mov jb adc lret sbb movsb dec pop or inc sbb das pop imul movsl pop scas sarb mov sub cld pop fistp mov movsb cmp sbb sbb xor scas cmpsb sub mov mov cmp sbb insb dec mov daa fldt test fstpt inc jns sar or in int3 sub push sub loop (bad) jne mov cmp jns push call inc fdivl repnz mov or sub jo sub pop and sub imul and (bad) stos hlt aad sub daa addr16 cld cs mov xor mov cmp mov xlat repz lahf cs and in arpl mov ss xchg jle jge sub ficompl mov pusha cmc test pop lods or adc aad mov std sub dec orl (bad) repnz movsb xor aam pusha iret sti xor addr16 xchg (bad) std sub xor imul sbb mov decb scas push test test pusha push fsubrs sbb clc lret leave sub cmp push f2xm1 push dec mov dec out jge mov jae cs imul clc cltd lahf inc cmp mov lea fdivrs pop xchg xchg sub pushf adc inc test loop bound arpl ds leave in jns mov inc ret or movsb mov xchg xor jno (bad) bound fildll nop cmp repnz test sub test sbb push test mov and xor sub sub jmp lock mov mov dec ss xor jo,pn mov test or push inc into push imul add and (bad) mov inc test mov stos test xchg xor mov cmovg push lods jp lahf add sub hlt loope or push nop and jne out repz je movsl push mov inc movsb sub mov stos fwait pop inc daa xor pusha decl inc fwait sub sub sub cmp cs pushf imul dec (bad) scas fisubr es roll mov in or pusha repz das lods addr16 setbe loope mov (bad) or jae fsts sub out daa and (bad) fs inc sub scas mov mov xchg rclb (bad) out sub bnd sub mov pop sub xchg xor and xor xchg pusha sub sub add sub xchg mov int3 int3 aaa out sub cmp inc and xchg add test mov in stos sub icebp add test aam and push outsb cmp jl test sub push jns inc xchg imul das xor (bad) test clc shll push adc sub aad mov lock (bad) pop movsb inc sbbb sub gs inc push fstps shrb adc pop sub pop arpl (bad) clc mov xchg mov mov out cmp or sbb (bad) mov fucomip mov inc out (bad) jbe cli aas push sub jg ret call test idivl mov adc mov cs cmpsl and inc out adc insl mov jl cli inc mov mov out ret mov lea jne test cwtl pmulhw xchg pushf inc pop repnz cld jbe decl sub fsubl inc cmp stos or sahf rorl sbb mov inc sbb jns and sub outsb jno push or in pushf scas bound fld test pop sub or push jmp mov pop test mov testl sub stc push mov aad sarl pop pop rorb fisubr loope lock movsb sub repz addr16 icebp jle adc sub stos mov popf lods xor adc jb ja js mov (bad) pushf fs je sti sub cs cmc popa fisubrl lahf call xor sub cmpsb mov lock xchg jmp in sbb push or pop frstor lods ffreep pop (bad) add into push add inc mov jge (bad) notb sub shlb jns mov dec sbb pop jl loope or xlat sub rorl dec xor adc pop mov div xor jl mov cmc ss (bad) test or adc cs push jo lock rcr out sub gs sarb inc or (bad) negb push jns sti xor out mov push jp cmpsb jb jno decb imul jp jns leave add adc cmp cld in dec sub in pop mov sub lret (bad) rol clc cmp aaa pushl lcall inc adc sub pusha sub pop jae xor and jg lods sub into pop or in and sarb add mov lods add imul sbb out jns lds sub clc push inc mov and dec out xchg lea and dec ja sub mov push test popa test xchg pop or cmp cmp out fs add leave out test jno jecxz and push insb pop dec ss (bad) mov or das daa xchg pop jae mov out mov bound xchg loop xchg mov dec push mov xor jno push jnp sub sbb add movsb mov cmpsl cmp dec cmp add shrl mov or xchg sub sub or outsl pushaw addr16 xchg sub ss jne mov fcoml (bad) (bad) cld cmc sub mov mov aaa mov adc or jnp jo bound invd dec push cs jb test jge push sarl and cmpxchg dec into leave data16 xor clc adc popf adc (bad) scas ficompl rcll cli pusha decb jle jnp or js push test enter rorl xor test into imul jns aaa test cmc pop icebp or push xchg jae mov xchg sahf shrb mov push stos ss sbb cmp test imul sbb out (bad) dec inc mov int ffree fcomps or fucom push xchg or arpl push scas loop cwtl in lcall adc mov lds mov cld orb and jge sub jbe adc inc addr16 stos mov xchg pushf push popa leave sbb daa mov ljmp and cmpsb out cmc jge scas fadds pop das movsb decl mov (bad) out (bad) mov inc test sub cmp jno and icebp popa insl xor xchg inc add sbb lds arpl push not adc mov mov xchg enter imul adc cmpsl cli xchg push jle sub out or inc xchg sub pop cvtpi2ps int3 aam sbb movsb and sub fsubr jae lods (bad) jb fdivrl daa movsl out and sbb lods call (bad) mov movsb mov jo je mov stos and out xor outsb stc adc jmp sub jg mov js cmpl mov sbb clc hlt cltd (bad) cmc sub fnstcw inc push mov movsb jb sub iret dec or andl (bad) outsb sahf xchg sbb mov cmp dec pop dec int aad cmpsb mov dec into outsl mov dec inc ljmp sahf cld data16 mov sbb xor adcl and adc aaa cmp adc pushf xchg and cmp mov mov into cltd xor cmpsl mov sub int add xchg mov enter data16 cli xor push stc cmpl in mov test mov jbe xor pop jecxz mov cmpsl adc xor loopne andb mull enter in pop inc push sub sti pushf adc inc mov pop outsl lods pop sub (bad) lock insb inc data16 adc pusha test lahf and sub sbbl sub inc lea dec inc add mov out dec js rolb sub pop jb test mov or push xchg lods pushf mov or stos fwait xchg pop jmp aad sub sub sub (bad) jbe pop and icebp jle iret notb cmc inc mov dec jno sub fwait jnp aas fldt jcxz cmpsb cli shrb jmp add ss xchg cmp and jae pushf mov movaps mov inc inc add xor jge not sub pop cmp das sub cltd mov push jns movsl test aaa sub pop lcall lahf hlt je bound xchg aad lea inc loopne adc and or faddl cs sbb xchg adc or fnop push mov pop pop cmp sbb hlt cmc test sub (bad) fdecstp loop cmpsl xor fcoml int3 dec insl sub pop pop stc add xor push or xor enter mov (bad) mov nop arpl inc mov pop jo sub mov sbb jb loopne (bad) mov (bad) inc test cli xchg lret cld xor call dec jge sub pusha pop cwtl mov cmc sti arpl or dec push jns,pn in ljmp cmp leave rorb jp rcl pop loop scas stos jmp movsb sub xchg pop push or cmp jae scas mov sub in add in decb (bad) cmc call mov dec rcrl mov cmp cmpb xor jge stos xor int fistl pop and dec pop (bad) (bad) jg les adc loop add scas sahf dec cmpsl test dec mov xchg xor pop test mov mov add in push icebp mov stos lods xchg (bad) ljmp sub daa dec push xchg cmp cltd ss xchg xlat push jbe sub dec jl sub insl sbb and mov loope lcall or xchg lods subl inc ret insb sub iret and add sub shlb dec inc mov leave add cmpsl imul and das xchg (bad) cmp rsqrtps mov xchg sbb aaa jecxz and mov adc and add sub xchg or (bad) mov and xor daa lret xchg mov pushf push fisttpl sub lock pop sub or xor dec sub loopne js icebp xor popf xor or sub push shlb bound stos dec (bad) adc lret jns in and movb jle sub icebp jno leave mov enter roll sub push sub iret cmp mov lods pop ss cmp sub (bad) into cmpsb inc lcallw sbb sub fcmovb mov and sub xchg jns and add int sbb mov pop sub lods and push sahf call inc loope mov ljmp mov and cltd sub and dec pop pop dec pop or aas cmc cmpsl cmpsl les sahf add dec subb out jne fstpl sub roll repnz cwtl xchg push mov stos jb,pn lret sub sbb mov gs and popa adc pop iret sti dec xchg cs sub jp leave adc cmp mov mov push sbb call daa jmp lds inc push lcall and lret iret out jle inc xchg sahf je sub (bad) aas daa loope push cmp stc imul mov daa out int sub cmp je mov cwtl xor push lods and sub aas mov jnp sub int3 or (bad) mov sbb mov fnstenv lds (bad) jl sub push mov push and and cmpsb xlat jbe out and xor loopne inc sub movsb ss mov das mov scas sbb cwtl mov sub pusha jp xchg pop movsl cmpsl sub add push sbb jae add jnp jb mov jo popl jns sub lret mov sbb sub xchg inc dec lods cmp faddl xchg sub and outsb or pop bound sahf mov das fwait mov pop mov bound test aas movsl pop xchg jb sub sbb lret cmc xchg (bad) jne or push loopne repnz pop je mov fcmovu stos xchg pusha mov (bad) aaa xchg jmp push or loopne mov mov add lret setno test (bad) xchg (bad) ficom jne,pn mov daa jne leave mov jno and or jmp cwtl push mov push mov ds xchg fnstcw call int lret push cmc adc add jae scas or cmp mov adc addl cmp or inc adc push pusha sti ds xor inc mov sub sahf fcmovb mov rcl or pop shrb fdivs fadd push data16 test test xchg lods and in inc xchg push and sbb mov xlat (bad) push call scas aaa jbe loopne sub ljmp mov test push sub xchg sub mov repnz add cltd test sahf or fidivl gs imul call call je push repz (bad) cmpsl add push mov cs mov jecxz lahf lcall shr or insb xchg (bad) sarl mov mov or pop pop add mov cmp sub cmp push adcb sub (bad) cmp aad dec ret jmp dec std cs shlb mov cmp sub sbb pop sub lahf fdivs inc xchg jmp outsb pusha test jg or lret popf scas xor dec test mov mov fs bound sub js cmpsl aam pop lds hlt mov xchg push push push fadds (bad) xchg cmp cmpsl pop sub cmc (bad) (bad) mov cs leave dec lods sub sub test je sbb adc push ja pop xchg std stos shrb leave mov daa negl xchg xor push repz sub test cmc fmulp adc decb test and jns and or (bad) js test repnz sub inc adcl and cli adc or orl mov sub int pushf mov xor add sub cmc adc std sub mov adc out in cmp inc pop mov pop (bad) rcrl js addr16 xchg dec add fisttpll pop jo lcall cld jmp stos scas test push dec std (bad) ds mov aas push cmpsb mov cld push sub add (bad) icebp lcall popa outsb (bad) insb fiadd out sub sbb sub clc xchg fcoms imull cmpsl mov xor arpl sbb pushf sbb sbb leave pop (bad) jmp test sub ja xor ficompl sub call imul test inc sub push jbe adc xchg sbb inc add mov mov cmpsl cmpsb cs data16 jle inc mov or int sub cmp in mov dec lcall insl imul (bad) lods insb aas add pop or sub xor or add pop push into movntq das push push (bad) hlt sub mov xor push std inc sub out pusha xchg and loop lahf insb sbb push loopne push and adc sub cli fadd in mov insl mov (bad) or minps xor repnz jno pop data16 and mov pop lock jnp imul mov aam mov call rol jo mov lahf adc adc xor sbb mov enter jl int divl push push mov push sbb sub gs pop mov cmpsl rep and inc inc in and sbb test xchg movsl jle inc pop adc and out mov pop test inc lret (bad) bndstx lret out pop test in pop (bad) outsl adc fild lea mov rorb imul xchg or xchg loope stos sub out in add fwait mov lret in or cltd scas sub das test push adc add daa push mov xchg js or leave sbb (bad) xor add out and (bad) stos in mov jecxz mov lahf mov dec and sub fbld in cmpsb xor (bad) mov sbb test xlat sbb pop test or shrl mov mov sub lods ret xchg sub (bad) xchg js loope pop push inc mov inc push rolb (bad) out push ds mov xor sub mov shrl mov pop add insb cs sub mov adc mov cwtl or stc dec mov jmp mov rcrl lret sbb fcompl iret clc movsl sub jg shrb fiadd call xchg inc sbb dec je hlt sub pop mov sbb scas pop or dec sbb mov cmpl test jge push push pop dec in adc les and int pop sbb push in pushf pop and pop sbb jp mov test mov lret jp lahf and hlt cmpb push add dec call or mov inc jb cmp enter adc mov jbe and pop out mov adc dec and dec shlb ret pop mov scas or push adc loopne fisub roll aaa pop push cmp lahf sbb push mov ss jl mov inc lcall (bad) pushf imul leave clc addr16 in mov push inc sti jmp add push mov jp dec push cmpsl or cmp push test add push aas jb push out jl sbb ljmp jp pop rorb aaa xor roll pop lods pop negl test loope mov lds pop lea cmc fsubs call dec jns inc fs cmp stc mov aad imul loopne jb aaa push or sbb arpl sub incb inc (bad) mov push add call (bad) mov sub jb add sub imull inc sbb mov and (bad) mov and inc jmp push sbb cli aaa cmp loope popf je fsubs jne fsubrl arpl dec std and mov cs jns mov mov mov adc test imul jb arpl add jns shrb repz push mov adc jl push pop push push ret and add mov icebp and xchg into jne add or lahf in pusha and and pop inc mov (bad) ret sub fnsave add push (bad) jb gs sbb sub int3 xchg sub mov lcall push xchg cmpsl cmp ficoml mov dec sbb clc cs xor sub test in fnsave pop fsub call adc jne fsubr repz xlat icebp sub fsubrl cwtl adc into jb cld pop sub and dec jg cmp divb pop pop in push push loopne in mov and daa popa out loop mov adc push cwtl leave sub ficoml in inc sub mov arpl nop sub divb loope dec aad mov jb cmp cwtl mov sbb testb xchg sbb xchg inc xor mov in int popa (bad) sbb pusha sub imul movl lock stos mov pop cmp cmp (bad) adc movsb cmp int (bad) sbb (bad) jns jp adc imulb (bad) shrb repnz mov jmp push mov jmp sub es mov jae sub cmp repnz mov ja into cs ss mov mov popa data16 sarl jnp cmpsl jo xor mov (bad) or hlt daa fs inc mov fsts jle (bad) icebp push sub (bad) movsb sti jmp sub sub sub (bad) divb enter sub les movsl or (bad) cs (bad) adc add pop push data16 adc xor stos dec lcall add and fcoml loop xor jle mov rcrl cmpsl push repz jbe xchg sub mov xchg push sub or pop cmpsb inc mov lahf clc cld or into ror std mov mov subl sub movb in sub cmp xor insl fsubrs pop inc roll das es cmpsl lods mov and pushfw adc or das push pop out test pushf jmp add sahf sahf aad sub jbe xor ss idiv arpl sbb inc mov sub xchg in nop aam sub idivb shll xlat mov sbb sub mov mov dec sbb inc jns movsb stc xchg (bad) pop out loopne push cmpsl push jge or xlat jne je pop mov jmp and in pop (bad) ljmp cltd mov fldcw push inc or popf stos pop pop jmp xor icebp shl sbb sub dec mov daa insb mov inc gs adc lock sahf mov pop daa sub sub xor or insb fcoml mov es and aas sub mov sub enter mov xchg inc xchg sub mov es in les bound dec out and mov push mov sub sub add les xchg popa sub lods push aad xor imul sub js or fs cmp bound dec in mov pop add add or cmpsb inc pop lret jle lret aam enter ss out pop jl sti push jno jae push jns fsubr mov lea add or cli repz sub inc and inc add dec cs in xor test add jno dec cli push sbb push push push cmp push xchg clc ja dec dec xchg pop in pop mov adc push fcompl pop data16 sub int aad enter and into xor into fcomps add dec daa fldenv leave and cmpsl ljmp pop mov mov dec inc dec mov adc aas int push sbb mov movsl test jbe dec repz daa out mov shr fistl xor lret cmc cmpsl mov stc sub int xchg enter ss (bad) aad int3 out (bad) xlat push and xor (bad) leave cli push aad loopne mov int xor mov mov sarb pop fsubl leave int aam nop xchg icebp jno inc push (bad) mov push push mov (bad) pop lds test inc mov dec lea add shrl call sahf xor scas cltd cmpsl and dec add add std adc sub cmp or (bad) cli clc inc sub mov pop scas adc mov cmp lahf xchg inc cmpsb mov negl jl movsl div xlat sub stc aad sub sbb push icebp shrl dec mov aad push mov jecxz in popa mov outsb and dec sub ret insb ss test jecxz shlb cld inc test mov xchg pop mov or xor sub xlat sbb sub sbb dec sbb jbe and mov rorl scas sahf lret pop pop push test adc movsb (bad) enter dec push add icebp insl lret sub cmpsl enter inc sub jnp mov rcll xchg mov cmpsb push scas pop sub or mov (bad) sub aaa sub xchg jge or adc (bad) call lods pushf fsub mov inc mov mov push arpl dec jg sbb mov int3 jl xchg sbb (bad) pushf cmpsl cltd and jg in fildll cmp movsb enter xchg and adc xchg rcrb jno sub sub add dec (bad) mov cld push mov xor pop loop mov je (bad) imull sub mov add and fstpl xor lcall jns fsubrl (bad) cmp inc adcl pushf in push cmp insl mov lock (bad) rcr cmp push or daa loopne adc sahf mov std lcall inc ss int bound pop sub lret add int mov (bad) xchg (bad) jecxz jp mov (bad) imul adc and leave pusha or out pop jae dec std int ja sti add in cmp dec dec xchg dec stos xchg sub cmpsl jge push sbb or fidivrl add clc leave mov adc aas xchg adc inc add pop dec (bad) fistpll sarl xchg mov pop out push mov outsb inc leave push xlat fs xchg pop icebp push movsb shl inc adc (bad) cmp xor dec (bad) repz jne cmp mov test cmpsl addr16 xor ja inc add rol sub push xor aam loope jo mov push enter pushf sbb roll sub jg and int push inc mov mov fnstenv es insl out lahf (bad) xor add cmp pop xor pop mov les xchg jl push jb icebp xor cmpb cmp fcompl and lret pushf pop aas leave inc sub push je inc jmp cmp cmp scas pop add xor dec std popa outsb stos push or or and and sub sub loop lds mov xchg cmp stc xchg sub test sbb gs pop imul fcmovb pop cmp jle movl (bad) pop and es push push jns pop adc lds jl cmc leave lock sub inc xchg sub push cmc sub clc std lods sahf fildll out sub mov sbb sub jge cltd (bad) ss ds or cmp stc aaa iret sub pushaw and (bad) test out in out inc xor mov adc or xchg push leave sub sti add sbb ss fldenv push push mov sub add push mov jg mov mov sti push out lahf test in bound leave out push les mov or adc push sub jo mov pop insl jbe (bad) cs inc pop in sub jo ljmp imul popf sub data16 sub mov push mov and inc and cmp jp push xchg gs push fyl2xp1 (bad) into cmp shrb stos cli xchg in xchg (bad) xor mov mov dec pop inc sub xchg lcall and sub sti push frstor test out pop movsl mov mov push sbb xor sub sub cli dec movsb mov push push sahf mov mov lahf dec aaa push das sbb (bad) fsubrs scas mov xchg xor add fsts xor mov fs sub cs incb cmpsb test sbb or loop and lea lret sbb xor in dec stc push inc mov or lock mov mov sub arpl pusha ret jmp xchg cmp sub hlt xor and and and cmpsb mov inc (bad) pop jo loop sub or sub enter sahf jg inc (bad) ja mov mov es hlt sub addr16 int aaa cmpsl sub add sub mov (bad) sti call test notb sub outsb dec xchg sub jae add mov in sub mov and loop lahf push sub mov cmpsl sbb in xor cwtl fwait lea push pop cmp dec cmpsl pop popa jmp sbbl (bad) loop adc mov imull cmp jg sub dec decl and sbb cmp sub (bad) lea mov mov pushf je movsb inc mov outsl loope xor ret (bad) imul data16 xchg xchg pop jno cmp sbbl movb out dec cs xor mov xchg jg mov mov (bad) xlat sub xchg aaa nop mov mov (bad) rol cmpsl fnstenv cmp sub insl lcall jb sub stc push mov stos mov and shr fbld outsl in xchg sub icebp xchg loope add les inc add adc ljmp jge push xchg cmpsb fsubl shl int insl add call mov aas dec inc call jae mull or sub jecxz pop xor inc adc dec movsl mov outsl jae (bad) dec jle popf test out jg push jno dec (bad) mov xchg (bad) adc or call mov mov fist daa into aaa data16 mov aam adc arpl daa daa jle int adc das push jge jno pushf or sub aaa hlt rolb subb movsb or roll add xchg or cmp sub insl popa xchg das sub (bad) cmpsb xchg mov into or mov add sbb jg adc jge (bad) std int3 (bad) sub rcll imul mov mov sub mov jmp push lods (bad) loope pop pop mov jo xchg xchg sub les fbstp int3 insl pop scas mov xor into sti lret test mov mov pop xchg lock dec inc stc fsubs sub or sub cmp lods add add sar jmp xchg or dec ret mov jbe aaa sbbl xchg in call dec push xor sub and test cmp arpl and stc inc mov (bad) (bad) mov int decb and sub add sub xor (bad) sub jecxz icebp inc push repz dec and insl rorl fstpl push jb ret xor es int3 jbe push xchg fwait stos sbb sub sbb (bad) imul mov movsb mov jns fisubl out andl out inc sbb decb dec call sub fbld pop xor sub loopne xor push jns mov int mov adc mov lock test je insb dec mov pop mov bound sbb xchg jb sub fildll in loop mov out cli sub nop mov mov adc (bad) fsubs fidiv cli push enter adc sub jmp xor push sub pop repz iret adc adc sub add lock leave or in (bad) cmp sub movl inc mov sbb push inc in sub mov sub push popf pop cs pop xchg mov call sbb xchg lea jnp dec stos mov sub gs aad (bad) dec mov cmpsb jns sub les icebp adc iret pop call lods adc mov mov and sub in imul mov fucomp inc jecxz out sub sti jae or pop sub xchg xchg fnstenv or or xor push push sub sub (bad) stc pop fnop sub popf xor (bad) pop jbe test cmp lock sub add ret cmp pop mov jnp cmpsb dec mov mov push data16 push sbb inc cmpsl loope xchg sub mov cmpsb jl dec sub sbb sub sti dec pop dec push inc sub pop sbb xor les jno and lock mov push lcall cmp xlat pop sbb movsl push jg and sub insl lea sub jo add cmpsl pop cmp push adc sub sbb test jge je push mov sbb mov cmp adc inc xchg cltd inc test lods mov and lcall das outsl mov add divl into push or repnz movsl sub adc push mov cltd in mov sub addl insb pop mov or lods (bad) jge xorb or ss xchg pop pop cltd leave out push clc adc pop jne or sub jmp mov cld dec mov fsubr mov cs add sub imul scas sub sti cmp push sub sub aad mov aam sub mov sub pop popf clc push push fprem1 sbb sub pop shrb (bad) inc jp jbe inc data16 mov leave or call mov fdivrs dec movsl sub pop rclb aas xchg jge mov inc mov pop test call aam jbe lret std ds sub sbb data16 inc inc gs test inc jbe pop aam xchg jbe out (bad) (bad) mov xlat dec and aas daa xchg mov js addr16 outsb loopne sbb ds lcall (bad) dec (bad) and dec fwait cmpsl or out (bad) sub std ljmp add push dec sti les sbb xlat push dec daa push add dec xchg lods test out data16 xlat sbb push lock aad mov add fdivrl sub fdivp mov lods das and sbb sub pop cs out sub rcll mov (bad) mov outsl sub in bound sub sub xor xlat ss mov cmp aad mov xor pop inc andl subb fs add mov mov and sub stos sahf fisubr jg scas mov or aam fxch sub mov ljmp sbb or sub pop mov dec dec in mov mov (bad) je pop sub lcall sub xor xchg pop adc sub lret shrb sti dec sbb pop fldenv test sub push icebp xchg mov pop cmpsb and stc dec push adc and xchg sub jb into iret and sub lds xlat xor pop bound or fsubrs test stos ljmp sub lds arpl jno hlt or sub int sbb pop jb (bad) cli push jp jb pop push mov adc xchg sub lods dec sub lea test push xchg adc add popf into aad sbb mov mov mov divl repnz test jnp std push test xchg loopne sub (bad) cmp ud1 mov cltd ret pop movsb pop xchg sbb sub das push dec lea add mov add mov cmp (bad) and addr16 adc xchg inc pop inc mov test aaa adc gs add jmp ss iret call dec std call call (bad) daa mov call out (bad) adcl inc (bad) test xor andb sub xor adc sub clc int cltd lcall xor push rorl jge sar cmpsb sub aam inc sub inc insl sbb mov rorl lret sub jo adc jmp fidivl adc pop jbe and subl adc or pop (bad) mov sbb (bad) jb nop and in mov (bad) je pop cmp data16 shrb add mov pop pop outsb adc and andl repz daa cmpsl push bound out dec sti sub ljmp xor not comiss icebp push or sbb pop es or loop sbb push outsb shr fildll push jmp cmp mov loop sub out (bad) xchg addr16 xchg xchg lock inc mov (bad) jmp xor dec jnp push cmc and jmp sbb test mov out popf out xchg and lock push xor dec cmp sbb mov punpckhdq popa pusha std xchg xchg subps mov adc outsl int sbb test fmull mov push scas mov stos pop faddl dec dec dec pop push push cwtl (bad) push imul push add test xor pusha lahf int push es and leave or (bad) jg sub (bad) jno mov (bad) pusha and sub icebp jbe (bad) cmpsl int ret xchg dec adc cs test sub pop stos add in loopne (bad) lea pop sub lcall push repnz arpl mov jecxz dec ds and xchg cmp add repnz data16 cmpsb mov cwtl push sub mov shlb enter xchg sub das dec add inc std dec jno mov pop push cmp dec pop packsswb add sub inc sub push pop std repz or (bad) inc dec (bad) cmp xor sub dec sbb dec aas xchg bound aad xor cmc push ss ss jae sub dec lret mov (bad) push push or cltd addr16 sti scas sbb inc sbb dec sub in mov jo mov inc sub into sbb sub rcr mov sub mov icebp data16 sub push bndstx (bad) jo pop jne xchg sbb xor sub push jbe pop gs cmc daa xor jns out cmpsb jecxz or repz fstpl fnstenv and cmp sub jge push xchg aas jp imul xchg xchg sub sbb mov or mov push inc mov repz cld test fcmovu aaa push pop adc mov sub jmp repz dec mov mov mov cmp lret jg jl jb cs sub or jl mov sub add daa or inc test pusha jge or xchg fsubrs mov sar lods dec sub fstpt jae add insb or pop dec dec jl fwait cmp sbb ljmp out push xchg arpl pop call sub lcall sub mov lea jns xorl add fcomps xchg mov fsubrl int3 add lahf ss sbb ss xlat outsl enter sbb push (bad) out mov jb cmp or rcll mov lahf in mov sub je inc xchg mov push (bad) in stos sub push add leave jne inc aam lret cld fucomp ret popf inc sub out out imul fwait jne hlt push dec subl ds shrl out xlat sub cmpsb sti mov or daa cmp pop cwtl lock stos dec aam dec les fsubl cmp or pop inc fldenv adc mov nop sbb lea test movsb test jp mov dec jle dec mov call insl mov (bad) loop cs mov call dec pop cmp pop das mov or push inc lods (bad) incb (bad) call xchg sub dec add jp out push test inc mov stos or sub pusha fwait lcall sub adc ret xchg hlt sub jecxz xlat mov cwtl in arpl and sbb sub dec inc icebp in mov in and repz xor addr16 call add xchg sub dec sub pushf xor inc or cmp jne push sub jnp pusha sahf mov cld sub fneni(8087 mov adc cmp push inc (bad) push and dec sub push push mov test or xor imul lea push adcl mov sbb ret stc int3 test pop fcomps mov jae adc xchg pop add push and mov cmp mov add mov xchg mov mov sbb enter movsl and scas out dec inc mov imul cmp or es pop test xchg and int je sub lahf daa flds xor test sub in mov stos jl pop lock xor sub jnp movsl sbb out icebp mov (bad) shrl popf jp ljmp std sub es sub int popa out fiaddl mov jg shrl fiaddl out fstpl and or out push out ljmp adc xor mov jmp xor lods popf adc pop ljmp xor fisubrl call ret pusha loopne mov push adc sub repnz jle bound mov movsb cltd xor sarb xor (bad) lea cmp xor pusha jbe in mov sbb sub enter push or dec leave in inc sub (bad) aaa or xor out cmp adc dec (bad) cmpsl sti xchg lods adc and loope cmp in inc aaa movsb jnp popf and sbb xor jnp ret and movsl sub inc fwait inc fisttp xchg fild sahf jo sbb add or push addb mov add aaa sub insl daa andb add or rcr sbb sbb fisubl out fidivrl dec mov adc cs xchg jge fs (bad) or add mov call fnop push addr16 (bad) pusha jmp lahf xchg flds xchg or aam gs test aaa test jp push mov dec mov add lea or inc lret pop push stc pop mov movb inc je adc cld jp push leave js push jnp dec les xorl lock push clc int arpl jno (bad) jns inc push jno stos adc lcall sub sub mov push cmp push ja xor fldcw daa enter sub push jp push daa and aaa fld ficoml (bad) arpl stos and inc sub xchg adc inc pop ja lcall outsb fisubr xchg stc insl dec add sbb sarb sub stos loope nop cmp push stos sub pop cwtl xor push sub push mov adc jns and jno mov push je adc sub xchg enter sbb lods pop pop cmp clc imulb lea push dec mov sub push loop in shrb sub sub sarb push adc inc into mov jo adc int addr16 xor fwait cmpsb test jb pusha arpl stos push sub mov mulb test xchg cmp cmp and leave push addr16 leave push inc scas pop outsl or sbbl mov fidiv jae outsb sbb jne (bad) (bad) dec adc test lods cmp (bad) (bad) mov cmpsl out pop xchg in into and push notl sub push mov sbb mov (bad) ret mov and iret aaa adc or jae add sub jno jecxz xor jbe lret jg mov gs cs xlat push xchg sub (bad) fldenv sub insl jne rclb cmpsl lea pop lcall outsb inc sbb push js sub xchg cs xor out or jmp inc xchg push sub and out daa pop sbb cmp push imul dec push or loop add mov ret cmpl push sub sub push jge mov xlat pop xor int inc ljmp push dec (bad) cmp arpl cwtl sub add mov pop cmp pop sub mov sbbl mov mov pushf adc sub ficom std xor dec movsl es sub xchg into sub jnp pushf int3 les (bad) and hlt pop xor mov jmp sub (bad) cmp sub inc enter lods sub je adc (bad) sub add sub mov imull cmp fxtract pop cmp jns outsb cmpsl cmp aas cmpb call scas inc popf sub leave xchg mov dec mov jg mov lock xchg pop xor mov fwait test hlt lcall inc mov xor adc sub mov ss push popf fnstenv mov xchg dec sub aas sub (bad) mov mov mov pushf sub cmc test add mov inc jae add pop daa out (bad) mov call mov jbe mov ret push sub inc es movsl mov and (bad) ss xor icebp and (bad) in lret sbb and cmp xor sbb mov aaa dec xchg ja mov les mov addl jmp inc cmp xor orl inc xor roll sbb sub push cmp fdivrl fistp adc pop dec nop fiaddl loope xor lods cmpsl scas pop cmp adc sbb push jle lea cmpl and pop jae cltd test lcall adc jp bswap inc push sub and shrl cwtl jno push jno mov (bad) lret addr16 jae or mov and xor movl or cmpsl (bad) loop jle sub jmp mov jl add dec cmpsb jge jp xchg push insl rcrb ret cmp or icebp nop stos jns leave icebp test out dec push adc (bad) jg es and outsl sub (bad) xor xor into inc orl or popa es test add (bad) ja mov and add push pop xor jns inc int jecxz jp pop call stos lock push out imul int3 mov inc out stc mov dec data16 loope push push sti sub adc (bad) ds imul enter test push push sbb adc fdiv rcr icebp jne (bad) xor add pop je cmc push repnz (bad) or bound add jb stc or add lea push and jmp daa add fwait push lock push jbe adc outsb pop je xchg or add and mov cmp adc mov sub fcmove or fisubr mov mov mov ja test sahf popa cmp inc add mov rcll sbb pop sub es add (bad) cs ljmp xor sub push jne jp in ss sub sbb xlat sub mov fwait or fbld insb add mov mov adc aad enter dec push cltd das mov ds inc movsb sub lock sub lcall xchg sub xchg fsts (bad) mov adc testl imul mov notb loope inc sarb fistp xchg iret ja cs sub cmp jle rclb xor push xchg lret add call jp add jb mov adc mov testb cmp scas xchg fwait lret into sti sbb push xchg lret test lcall icebp fsub mov sub mov mov sub pop mov mov push sub mov pop mov cmc adc add sbb mov int gs jo popf or movl addr16 int3 mov xchg repz bound or inc imul fcoml cmp cmp mov cld xor dec cmp mulb push jl jle sub cs mov stos inc das dec jle lds imul mov ljmp or xlat inc jno popf cltd xor add rorb or sub gs mov fildll aam or outsl fldl jecxz out inc xor sbb leave test xchg cmpsl and sbb xor dec or imul ss (bad) ja aaa outsl (bad) ljmp leave mov sbb push mov inc inc push imul clc inc ljmp cwtl inc mov xor and call dec mov (bad) sti imul popa xor leave fimul in test movl add jg cs loop cli pop sti jbe mov cmpsl push (bad) xchg adc dec (bad) pop daa aas inc (bad) mov ja out push cmp sub test mov pusha push inc mov push in xchg ret jnp cmp test push sub jo or push or int in sti dec xor idivl nop fucom add xchg cmp inc push mov jle inc pop int push xlat dec lea ret cmpsb adc loope cmovp and ficom repz xor dec loope gs scas cld leave out jl pop cwtl loope xchg (bad) roll xor mov mov pop insb adc addr16 jbe gs out fcoms out xor insb or add push pop jns push (bad) frstor int lods adc ret add loop into push hlt movsb gs addr16 mov loope,pt jge cwtl and int lods push cmp in cmp fsts pop xchg adc or cmpsl dec (bad) notb push aas xchg and stos jno and cmp (bad) push jecxz sub roll mov inc mov sub jne cmp xor (bad) outsl std xchg leave repz mov clc mov add add int3 pop xor or pop leave fsubrl mov (bad) aad pop push and dec cmpsb cmc insb loop fldl je cmpsb mov (bad) pop (bad) imul fisttpll and mov mov dec out leave pop dec int3 lret fwait push xor dec mov xchg xor call stos lods push cmp lock addr16 pop scas int iret or popa jo les jl mov sub leave loope test xor leave jae loop jbe sbb fildll fs mov out cs in jmp int enter (bad) mov jb xchg mov sub lahf test cmc dec dec add jne adc nop cmp adc iret std jbe sbb ret or sub (bad) cmp cmp mov xchg inc test sub pop pop sub shrb mov sub mov repz insl jb (bad) iret in imul sub icebp pop movsl and mov dec cmp (bad) ss push inc call and gs out fldcw ficomp jmp sbb icebp inc xchg jns jmp mov (bad) cmpsl mov sbb pop mov sub sarb mov push enterw mov adc imul pop sub xor jo mov jmp add ret andb pop sub pop cwtl pushf xor push jmp sub aas and mov push call cmp test ss add ja out inc cmc sub repz xor jns rorb sub es mov fldcw cld stos shlb sub adc xchg xor data16 cli and adc pop jge pop adc or mov arpl push mov xorb (bad) mov mulb lret fldcw loop inc sub inc xchg mov aam sub xchg mov sub ret or clc outsl sub enter and add cmp cmp hlt push out push sub mov sbb push dec incl xor leave xchg jecxz,pn aas cwtl fisttpll shrb inc push inc fisubrl stos jl or sub jecxz push cmp dec xchg jmp gs sahf into xchg popa sub xchg mov mov nop adc insb rolb or mov imul lds pop push shrl js inc dec andb pop rcrl sub cltd loop sub adc adc mov (bad) scas jl push shrl dec xor shrb adc sub inc sub or and aam adc xor mov mov nop (bad) in pop jne jmp ss jl mov leave notl add sub inc leave orl daa (bad) inc into testl xor popf sub test lods dec jge js lahf cwtl push add sbb sbb imul add jo mov (bad) leave jl xor test inc cmp and sbb mov dec ja inc mov mov int lahf ss outsl sub fwait cwtl dec leave clc int3 xchg push in stc add sbb adcb repz lods inc loop or loop leave ficoml jp test jo add inc call add inc leave lds pusha rolb (bad) repnz lcall ljmp mov (bad) mov int test (bad) in hlt unpckhps jmp push fcomps aad aaa mov test push call test sarb in es icebp mov jbe in sub lea dec mov movsb xor cmpsl push adc test adcl movsb xchg jae sub fdivrs ds mov clc jbe jp addb test push cltd cmp out out pop loopne xchg xor icebp ds jbe push ds mov loop,pn inc dec (bad) xchg imul add das icebp imul push call imul les out test pop in push push mov push aad test adc stc fwait jb stos jb lcall add pop lock je int3 sub xchg das cmp jl sub leave sub dec add inc std iret call stos fwait adc push jno imul int3 sahf ss aam rorl and push mov and xor sub push jb out rorb arpl xchg xor inc fisubl mov notb test add nop pop fnstenv xchg data16 sbb test xchg jle ds mov (bad) sub adc sub cmc inc (bad) xor xchg aaa sub ljmp and inc popa push out push dec dec ja sub lds arpl mov sub sbb jo call ret sub aam adc pop push jp cmpsl ss add imul in jno int sub fisubrl and cmp (bad) dec inc and jno mov inc push loopne cmp not cmpsl xchg out push popf sub in jbe push sub push jne nop arpl or (bad) lods or mov dec es pop imul cmc pop cmc cmp push dec push call (bad) lock sub cld adc mov push ret shlb mov mov xor cmpsb push inc xchg ss (bad) cwtl outsl movsb mov and pusha xor data16 aaa jo cld and cmpsb leave fbld pushf mov sbb jns xchg jecxz movsl inc lret add movsl sub insl pop inc pop call pop in inc mov inc dec sti cmp sub insb ficoml or jbe sbb out sub cli sbb mov hlt loop in test arpl mov pop pushf mov sbb sub rorl cs std or pop cs mov popf cmpsb fsubrs pushf fadd and rclb (bad) dec xchg fisubr aam adc push mov fdivrs call idivl test into outsb push repz inc subl cmpsl xor clc pop pop dec xor lahf out loope push insl jp dec outsb or pop or in movsl sub mov pusha subl adc mov (bad) stos sub aam xor fidivr shr data16 das xor fs push jae cmp in or xchg add pop lcall xchg push mov cmp add xor daa in jne jnp cmpsl and stos add out daa int test jl jle push stc mov push clc sub add add mov scas sbb adc pop (bad) iret cmp fs ss mov or getsec cmp not cmpsl mov jge mov movsl repnz push insb pop lcall mov push and add into or mov repz push jmp lds call fdivrp int sub pop jae xor xor sar dec maskmovq notl xchg stc in sub fdivl mov in in fisttpll lds sub push jbe sbb sahf sub mov jbe pslld sub repz sub cltd in push jmp lea or xchg stc js jge decb call and or (bad) (bad) lea cmpsb add test (bad) xor lods sub es pop sub nop/reserved sub inc loope mov test sub xchg sub ss push push jns pop call cltd imul xchg and dec ja cmc dec addl sub dec cs mov and test add cmp nop adc rcll pop or cmpsl sub add pop or sub cmp sti push js,pt dec push fbld mov xchg fwait xchg push sub sbb push jbe sub in daa addr16 cs fnsave and mov jp xorb aad jb push test inc add inc iret idivl push mov adc dec (bad) int mov adc cwtl cmpsl aad inc test cmp push (bad) mov pop inc sti pop mov das cmpsl dec add cmp lea push xchg out sbb pop js shrb and out out mov fnstsw cmp or dec cmp (bad) icebp sub call mov ds inc xchg sbb das dec roll loop int cmpsl out sub call cwtl sub mov rclb cmp pop sub das outsl inc rolb gs aaa xchg aad push icebp dec (bad) lahf pop push jbe lods pushf outsb fnsave adc push or pop inc inc pop int3 push jb imul aas jo sbb into and mov mov lret (bad) sub mov sbb leave push push sub idiv aas lret cmp scas scas mov data16 popl fsubp fildl sub (bad) cmp ret lock outsl dec push pop push push cmp cmc sub out gs cltd xlat or lahf test sub loopne xor mov shll fwait lret jl lahf xlat frndint sub lock add adc xchg push ja rcl roll insb pop jle inc jmp mov (bad) dec test icebp fldl2t jl in loope and out mov outsb stos jmp sbb scas sub xchg sbb inc or mov in jg xchg pop sub sub stos cwtl cld add sub addr16 mov add sti outsb test xchg mov mov push movsb adc sub adc sub gs mov (bad) (bad) sub xchg dec jl int3 sub scas mov sub xchg outsl mov cmp add mov jnp and push sub andl adc (bad) pop inc sub je and push xor addb sub sarb repnz sahf lock shrb insb loop aam sahf bound mov jo (bad) cld xchg sub mov stos mov and call cmp in and lods out add sbb jmp sbb inc mov adc popf pop es cwtl cmp stos sbb test pop jne (bad) sub sahf add mov je ret dec fxch mov sub scas adc sbb cmp repnz and ja lods sbb int push addl pop xor mov (bad) xchg cmp cmpsl mov xor lds inc addr16 ret pop push pop xchg in out addr16 add push mov lds stc pop jle adc int xchg add daa test jl dec dec andl hlt xor sub pop sub fcmovb leave aam ljmp and inc repnz inc push pop cli test mov dec mov add xor sub (bad) negb adc lods ja fidivl adc cmpb mov xchg pop jbe mov inc xchg inc add inc and insl notb dec je xor inc or push mov sub xor jbe xchg cmp addr16 mov xchg das test pop popf shrl test cli dec pusha in (bad) mov nop inc lret imul jnp mov sub jecxz dec or les xor xor fcomp push jle and sub pop inc jmp or ret mov leave jge cltd jae sub sub std int cs inc cmpsb mov sarb notl mov (bad) or mov sbb fprem1 mov into sub out imul mov cmp or adc push mov cs add lock icebp xlat inc sti mov lds cmp ja fdivl movsb pop addb pop orb or (bad) cmp push dec inc sahf roll ds stc shrb push cmpsl jg sub push popf shrb xor sub pushf mov lods sbb adc xchg cmpsb movsb or dec jg cs call add sub sar push sub in inc fimull xchg mov push orb popa jmp imul out test cmp lea or sub scas shr jmp dec mov arpl sti sub in fisubr pop decb cmp movsl mov and jbe test cmp mov jecxz sub push loop push push inc popa jmp call xor push sub mov push loop or pop int3 xor call dec cld sub dec dec out pusha dec mov cmc pop mov sub adc sub cltd push mov test popf mov not jp fsubrp iret dec xchg cli (bad) not sub or push cwtl adc jg mov fbld test pop mov cltd lcall inc fmul mov pop scas push mov addl sub sub jecxz repnz jecxz sub mov sub nop xchg adc cmp mov inc or loop sbb (bad) fcomps push test call xchg shrl (bad) repnz int data16 rclb test lods sub call fsubr push das inc (bad) xchg daa push bound mov sub fidivl or arpl scas xor dec xchg fwait sbb (bad) gs (bad) cli dec pop jecxz pop out sub test push xchg inc pop sub dec lods aaa sub xchg scas mov dec mov sub jecxz xor test fwait test nop add inc sub add jmp inc pop mov sbb out sub (bad) in sbbl jo dec shll test (bad) adc sbb pcmpgtb insl std sub mov xchg and cmpsl stos adc sub insl or icebp jnp xor imul ret and std call fwait jp sti cmc data16 mov ret pop xor int3 loop out dec je,pt (bad) xchg test xchg mov es or iret es sub mov dec leave ja imul std and dec (bad) jbe jae cs inc test sbb das call aaa xchg in jmp dec ja adc xor in cwtl dec jecxz arpl int jbe (bad) idivl sbb (bad) fwait or inc pop xor cmp xor mov je sub mov dec ret (bad) dec cmp cli add dec sub (bad) add jno fist pop jb pusha and adc rcll xor cmp and jb fwait rclb jo and dec andl push aas icebp js dec jp xor dec cmp xchg xor cmpsb adc xor dec leave mov jns mov mov and jo adc icebp in addr16 data16 add push cltd aaa jp cmp xchg pop mov call movsl pop sbb pop cmp repnz cwtl push jp xor cmp push ja pushf inc cmpsl xor or sbb xor hlt loopne addr16 adc (bad) sub adcl imull push ret subl xor mov out insb adc ja mov mov adc stc mov inc push dec out ja or pop push mov xor ss es dec add push xchg push (bad) daa (bad) aas lock sbb cmp and mov pop cmpsb xchg sbb pop push test jne pop push (bad) bound ds call in pop push addr16 jnp cmc aam sti aaa fimull int push xor push add inc stos xor jns gs sub (bad) sub cmp cmpsl jp idivb cs push xbegin sbb adc (bad) (bad) pop out pop sti xchg test dec mov xchg pop dec push cmc adc push outsl leave lahf setp dec ficompl dec or xorb pop adc xor imul popa inc leave adc outsl pop jo xchg je lahf (bad) fucom cmp pop rolb int aas test mov inc inc xchg jge cmpsb adcl add dec or ss insl jle xchg stos pop aad mov dec dec jae les jg mov ja xchg inc mov sub add cs movsl test push sub jnp std jo dec in or lods jg push dec xor xchg pop jg loopne sbb pop mov jg fldenv inc or xor add mov decl movl xchg or inc mov mov sub cmpsl leave xlat and adc sbb loope idivl sbb rcrb pop inc loope dec daa push sub fnstenv call sub sub or rcl mov stc xchg (bad) sub jg das pop dec cli or ss mov dec lahf dec std js icebp push mov std je cmp insb and mov shlb fs cli xchg outsl fsubp ds push int jno pop sub push jo hlt out cld sbb sub in mov and test and mov sbb int jb mov push sub insl mov push mov cmp push pop orl inc or xchg push xor sbb jp test or or aaa mov sub inc das lea pop push cmp mov cwtl (bad) cmpsb cli ljmp nop into and loopne mov cmp xchg xor js pop (bad) shll sub cmp dec mov cmpsl sbb push rcl jmp shlb stos aas sahf dec pop mov loop push mov lcall and mov clc jecxz mov cmp add push mov lret je cmp dec jns and mov sti ds addr16 mov push rorb adc jb ja aas jle mov push pushf movb xchg sub mov xchg addr16 dec imul stc sub test xchg cmpsl pop mov ss jp fidivrl cltd (bad) sti xchg jl,pt imul push test hlt xchg leave outsl imul das mulb xor bound ss push mov ficompl and xor mov int (bad) xor hlt inc cmp scas int (bad) mov cmpsl push sbb leave icebp negl jns push les push adc daa insl je lods dec jl xchg adc xor jns imul int3 out xchg (bad) adc aam test dec loopne popf or pop adc push inc sbb mov sub pusha cmpsl test movsl int push loop push xchg fsubrl cli jp xor loopne push movsl mov int push or sub test hlt mov or mov packuswb mov push and mov sub fcmove notb sbb xor dec and lret shrb data16 (bad) imull cld jge stos (bad) jle sub (bad) iret popf sub inc dec jg (bad) test pushf sub or cmpsb push mov aas call xchg lods cld lret pop xor sub xchg dec xor cmpsb mov mov call cltd pop lods in arpl jmp sub out jecxz cmp rolb push sub imul sub cmp (bad) sub stc cld xchg cmp stos dec scas fwait pop mov inc ds sbb dec and push fldt or stos inc inc addr16 mov aas sub ljmp lock dec out and arpl testb xchg cld lret and pop call test int mov in shrl ret mov shrl fwait xor cmp pop push inc sti push sbb jmp inc test call cmp dec dec les xchg (bad) jmp add out in scas mov inc xchg nop cwtl pop or (bad) sub outsl (bad) leave les out cmp loop lods cmpsb cmp es cmp je push pop std cmpsl fisubrl push adc mov add and cmp mov mov bound cmpsl mov jl (bad) mov movsb adc pop lahf addr16 addl sub movsl movsb sub xor adc xchg dec inc xchg out xlat cmp lcall dec rclb jge sub lret into das xchg add data16 fwait jg int inc cmpsb fidivr sbb cmpsb (bad) jne test cmp test jo sub pop dec mov mov xor adc sub dec jnp loopne cli jbe pushf xor ljmp adc bswap mov cmc sbb or pop js aad jl cld cmp or (bad) jmp pop ds sub and inc cmp loop movsl mov xchg stos cmpsb sub cmp sub fimul jb inc dec rorb pop push sub scas popf out cs arpl (bad) or jl fs inc dec icebp fdivr jmp jb inc sub into js mov ss ja xchg lods pop lock (bad) sub sub bound lahf sub mov in stos lcall cmp cmp loopne mov xor sub jmp pop ljmp enter sub (bad) cmp inc push jecxz mov or popa in sub mov push mov clc aam sbb insl (bad) jle push add mov daa mov mov mov insb aas or leave mov addb cmp fs out inc movsb sahf ss shlb xchg loop (bad) pushf es addl in shrb cmp lock data16 dec jae sub rorb add mov sub inc pop push iret push out jae sti sub sbb aaa (bad) dec sub jg clc sub inc mov jp ja mov cltd jl cmpsl (bad) mov gs add pusha and xor test inc mov lds xor sub push idiv bound (bad) lcall mov (bad) inc cmpl jb mov leave cmp cli jecxz mov lods lcall in pop mov jbe or mov stc (bad) mov aad mov arpl test or test sbb push inc gs addl xor into mov pushf or fisttpl adc pop enter rol cmc call sbb jmp ljmp movsl sahf sub push push sub and sti sub gs imul das adc mov inc sbb scas xchg and (bad) dec jb sub loop popf dec add hlt pusha jae cmp sub jns cmp inc sti inc add adc sub xor gs fwait lock enter out add push mov or dec add orb push (bad) pop sbb ss dec aaa xchg pop insb stos loop and divb test movsl adc bound dec mov cmp fwait out jns (bad) div rcrl out in or and jle jp mov pop and rorb ret fucomip mov cwtl mov mov xor arpl addr16 mov jmp cmpsl inc xchg cmp sub add adc sub and add scas cli data16 fsubr (bad) xor cmp pop inc add sub xorb sbb (bad) into add flds mov rcll int3 jl popf (bad) je inc ss stos clc sarl ret mov pushf ss push pop cli int3 cwtl sub add decl mov or push je sub adc stc sbb aad push in test pop pop imul sub sbb jbe clc sub js xchg enter cs mov mov push subb mov ss dec mov jg arpl stc shll movb out sahf sub stos sub xchg push jbe lock dec loope test or adc inc xchg popa jo in pop mov xlat jne sub enter ds (bad) mov inc aam (bad) adc (bad) dec fimull xor xchg and sahf popa push aaa (bad) inc push fmul (bad) mov clc aam cs das daa sbb lock cs mov jbe inc movsl sub xor xchg ret dec fisttp out fs xor fstp push dec push notl push sub adc jns sub add loop sub push fwait push xor loopne cli push mov sub stos pop jl enter test sar ret stos es sub lahf lds mov pop inc decb pop adc scas sub fdivl in enter out inc repnz lcall or push pop mov sbb shr pop mov shrl pop jno inc push clc adc sbb aad sub stos mov (bad) pop enter adc aam jmp jb addl sub adc arpl rorb cmc sub add (bad) xor sub idivb scas sahf cmpsb adc xchg leave call imul push push daa lock (bad) in and push into push cmp mov cmp test cmpl cmp and leave and inc mov sbb xorl ljmp pop xchg mov xchg add movb cmp push sub inc pop lods leave fsubs pop lds (bad) jb dec and repnz dec daa cmp icebp cmp ja aaa jae dec inc and sub pop adc cmpsb pushf scas jg repz loope xchg ret sbb mov mov xor push pop mov rol (bad) cwtl or pop or and stos jno xor sbb dec (bad) or dec push pop and xchg jecxz jg dec gs sbb jo int3 dec loope mov sbb cmpsl xchg sub sbb cmp addr16 jb lmsw mov lods (bad) movsb push clc pop inc jo bound das cwtl imul mov pushf imull pop mov (bad) xlat into xor xchg push cltd xchg aaa mov cmpsb imul (bad) scas fimul adc (bad) and or cmp dec push adc outsb sub dec xchg (bad) int add adc xor mov inc xor pop sub mov adc sub cmp adc jge adc push rol mov addr16 and sbb push xchg adc insb mov jae dec jbe cmp push mov cwtl pop cmpsl ja sbb pushf int cmp imul insl sbb lods jo sub mov mov or dec mov (bad) mov ret aas xchg test dec add xor pushf leave (bad) push ret add outsl inc cmpsl adc push cltd sub xchg aaa mov ja ss and push aad std cmp mov mov cmp jp scas pop mov dec dec insb pop mov cli test xlat out (bad) xchg imul stc faddp adc cmp adc sub add xor leave daa sub push pop and mov imul (bad) push xor (bad) jge add aad dec insl and loop mov fsts push fmull sub adc jnp dec cmpsb jp daa cmp dec std sbb ret mov and pop add add adcl dec cs jp cmp pop mov fdivl ret inc (bad) jne (bad) (bad) loop jge push dec test sahf int dec cmp popa pusha int3 xchg (bad) subl leave cmp stos fisttpll pop call mov and int (bad) aad (bad) addr16 and pop and lahf fsts dec leave notb mov addr16 ret aaa xchg and adc mov mov fisubrl insl or aas push jle cmp mov sub jno inc sub xchg xor pusha notb pop cmp sub sub insb out dec xchg pusha fisubrl add fstpt jg scas push add mov push xchg ja data16 repz push (bad) fcom arpl mov sub aad repnz dec sti inc mov das xor xchg pushf cs rorb xchg mov push mov inc sub and xlat and popl jo adc rclb movsb addr16 adc loope sub mov lods mov jno insb pop cs popf xor push and mov cmpsl pop pop cltd push call ja jb adc cmpsb (bad) jmp ds sub mov xchg sub orl out mov mov xor push jl add pushf out xchg and out int3 ljmp push ljmp clc jge call adc xor mov rorb xchg push pop loope mov repz mov and pop dec mov pop push mov mov into icebp add aas or movsl sub ret or sub push in mov jl sub arpl mov int3 or lahf add push mov jge sub pop hlt fsub sub movl adc scas clc insb xor lret sub shrb or sub call mov xchg fwait cs adc jbe pop fbld push je rcl xchg jmp out repnz xchg and cmp rorl lods enter ds shrb decl cmp scas sub ret and in push jbe (bad) sub ret or sub rcrb fistpl rorl movsl inc mov pop fisubrl insb mov in fidivl (bad) jae pushf mov or pop cmp bound je outsb jnp adc jmp loop sahf adc int3 xor fwait xchg aaa pop mov mov push ss sub xor lcall and xor xchg (bad) fs sarb lahf clc inc pop pop mov sub pop ret and movsb bound xchg mov dec imul or adc jne push (bad) jle mov adc js lret add cli dec pop ljmp mov bound cs add sar xchg xor jecxz jp (bad) mov mov and inc cld fdivs es mov jbe jo mov fidivl data16 xchg sub outsl or (bad) lret test dec pusha jb jo aaa sub and mov repnz fdivl fs cmp sub sbb cmp (bad) fsub mov add dec int scas sbb ficom xchg lahf inc insb cmpsl pop cld add lcall mov aad popa dec test xchg test (bad) jae leave ljmp push test mov and out pop cmc sub dec in cmp push js sub or cmp orl lret ret xchg jnp or dec rolb jg imul cmc mov pusha jns test cmp fldcw insl (bad) sub push mov addr16 sti push mov (bad) push clc jae sub mov sti out sbb scas sbb out jbe sar dec fucomi xchg jns sub sti subl cltd cmpsl ja mov lock aas movsl cmpsl in sub cltd adc cmc imul icebp mov in call mov pop jb ds dec inc test sar dec les mov scas add cmp pop ljmp cmp subl cmp pop inc sbb sti outsl sub sbb pop call add scas sub out aad inc inc loopne icebp push test sub pop mov xchg adc sar or sub outsl fimull push xor and xor int3 scas sbb (bad) jne or sub es mov jge and sbb addb cmp in cs adc addr16 inc add ja ds sub xor scas mov sahf sub imul cmp or outsl in push sarl inc sub imulb mov mov test out sti xchg lret (bad) (bad) iret imul dec (bad) sub pop icebp push in cmp add bound xor dec mov sarl push imul cmp je mov adc mull outsb sub andl ret push andb fstpt ss pop cmp sub into ja jl xchg cmp xor adc cmp movb push jnp push fsubl mov dec push sub pop lret cld and fsubrs push jle dec lret sahf push out jmp test addr16 xor jo mov cwtl add or fwait das and aas sbb adc xchg xchg sub aad pop (bad) adcl pop ficomp adc or rclb sbb fiaddl mov testb cmp xchg xchg jecxz roll idiv sub fsubs jae mov fildl mov sub mov push in pushf xchg sub ljmp fdivl fwait lods (bad) fisttp and jp js mov (bad) or sub push popf leave movsl pushfw sbb daa test cld bound out aam sub inc fmul cli popa push sub and mov pop add and call push mov pop in jmp inc jl cmp sub mov popa dec stc mov pop mov sbb sbb enter mov fbstp fwait lahf cmp add mov out daa jmp js mov add sbbl loopne jecxz in lret push sbb mov int inc fisubr in loope call and fwait lock sahf mov (bad) imul push movsl or sub xchg lea push popf or mov sub movsb mov fsubr cmp (bad) sub pop out fwait stos sub dec mov sub cmp outsb fsubrs (bad) jp loope sub push cmp xor ja mov rorb sub call push js daa movsl mov subl out fcomi (bad) adc jecxz xchg fdivrp and push and aaa jecxz lea mov mov (bad) cmpsb lahf in std (bad) popf stos mov fldenv add jmp stos clc pop rcl lock imul fmul jp push repz jbe fwait mov fistp cs mov cs push inc or pop int fild scas fwait repz int pop ss push mov repnz add mov leave bound (bad) int (bad) jbe xorl aas push adc test cwtl adc cmpsl jg dec mov lock loope mov pop bound data16 (bad) mov leave clc sub jb jecxz jp stos sbb sub lar lret xchg mov into inc sub xor andnps push adc cltd scas insl jecxz sbb std notb sub adc cwtl sub out pop stos pop imul or ds sub adc add flds test scas mov daa aad xor push lock inc icebp mov sahf cmpsb out inc sbbl mov lds xchg mov test xchg notl pop out sub dec adc jg out out mov subl movsb mov out dec xor data16 loopne xor xor ss mov out jp je dec daa push icebp push xchg test enter insb pop popa aas xchg sub daa xlat pop (bad) ret add rcl sub in cld adc imul jb pop jge cs mov rcr call mov outsl aam jge mov sub push stos aam int inc in cmp scas out insl fbstp dec scas jnp adc sub or shlb (bad) sbb mov outsl sbb xorl in sub fisubl and cmp cmpsb cmp das scas ds inc adc push xchg inc or je or sub xchg mov bound sbb lea push js xchg mov sub add mov (bad) out push mov or xor decl xor and dec jo lods mov cltd jbe icebp test popf fsubrp dec ret sub je xchg sub cmpl and dec inc or mov lahf out ds mov sub hlt test push pop inc out adc and lods (bad) lods xor lods es xor xor stos sub in sub test jns lods add ret mov ljmp add adc (bad) call and xor mov loope lret add nop mov mov mov or cmpsb pop repz push nop addr16 push pop dec popa (bad) sbb cs xchg pop daa stc xor sub mov xchg cs add out cltd lds out in pop jl lds add pushf sub daa sahf loopw,pt fild cmpsb inc add push cs int3 mov xor mov loope lods or repnz (bad) mov arpl leave idivl or jecxz xor pop sub (bad) sub push push and push push cmpsb test xor sbb loop pop push loope lret mov dec lock add inc push cmp out js inc mov pop sub rorl or shll cli cmp rorl sbb or mov mov loopne popa or stc xchg ss test ja jmp xchg enter sub push cltd inc push pop (bad) sub sbb and rolb sub push pop or fs add mov mov out add jmp bnd orl and sti mov daa mov sub fwait pop mov sub adc mov push jb in fisubr and cmc rcrl mov imul dec (bad) (bad) jb jg stc out fistpl (bad) fcompl gs mov (bad) (bad) sub pop scas ljmp stc sub inc addr16 sarb xchg loop pop in shll sbb mov sub lds ss enter dec sbb sbb lods scas ficomp xor iret push cltd xor nop sbb aam scas out push cs mov dec or mov lods or sub jge sub add bound test add test ljmp pop lds add mov test push (bad) sub jnp stc xor lcall sub mov scas mov inc pop inc ja cmpsl hlt dec sub sub add fadds xor jb mov xchg sub cmp push jns pusha add lods push hlt out data16 xor (bad) pop sub fs inc add fisubrl sub out inc mov xor insb add call pop ja (bad) sar imul sub je dec adc incb outsb sub pop (bad) sbbb fldcw mov out test sbb inc adcl hlt cmp sti (bad) es or js cwtl sub xor (bad) jg dec xchg iret dec push sub push jbe push jo mov cmp pop mov sbb adc dec outsb sahf sbb orl add into stc testl leave in mov stos sub lds cmc push mov lock out xor xchg in xchg mov adc jbe sub cmp fldenv xchg sub (bad) jmp xor gs cmp mov ss jecxz xchg sub pop jmp jge es dec xchg jl sbb xchg lock pop mov mov sub (bad) repz inc or push sub jnp or jl call dec sbb arpl (bad) dec cmpsb sarl add and or mov xchg js in or mov mov das pop enter lock les jno mov mov mov jge outsb pushf out jmp outsl xor jbe cmp cs test sub sub insb fcompl xor out std push xchg and (bad) (bad) mov (bad) cmc jb sub xchg sahf rolb sub add cmp and and push or mov mov getsec sbb insl pop outsl scas sub sub out les push push dec cwtl shrb lds push xor mov enter pushf sub fstl add cmp test scas push and push in shlb sub bound push (bad) pop loopne mov (bad) xchg les ud2 or cmpsl icebp roll sub std jbe xchg and inc addb loop sub dec xor inc (bad) xchg popa adc xor jae and or cmpsl cs es scas xchg sub xchg sub and js pop out push jge push push test add xchg orb aas mov mov rol add cmp dec cld and pushf lods das sbb sub push xchg fsubr lods sbb jo,pn ret xchg loopne ja or daa and pushf loop orl cmp xchg jmp mov mov xor xchg jge jbe or sub pop sub fdivl leave ret sub pushf lods iret js jns fxtract inc lock sub unpcklps push sti lea movsl cs clc cmp pop sub bound bound xchg aaa xchg dec adc sti dec adc sub ret orb xchg add sub push mov mov or (bad) pop aaa scas sub mov pop ja stc (bad) jmp sar mov int3 sbb pushf inc pop imul test insb jo ficompl mov stos sub iret outsb pusha test xor jle cld mov inc ret jmp aad scas cs mov mov sub clc push push push test ret jae push js daa add inc (bad) in mov shrl cmpsl das lcall add cmp pop out outsl leave imul jnp pop mov xlat mov cmc sbb lea dec (bad) and ja adc aas and jg jg sub mov inc jo jb cmp mov bound or int3 add mov cwtl dec out mov imull mov ja movl or je jne in scas push add push mov fdivs sub jo cmp jecxz xor sub jb out push cwtl outsl (bad) sbb test adc stos nop jo call iret popa fisubr push out sub mov lret dec mov dec mov jecxz sarb inc test pop mov mov lret sub js mov dec out push shr jbe clc sub jnp xchg test cmp popa subl out cmp shrb imul arpl xchg inc aam cmp (bad) cmpsb lods sbb enter inc (bad) popf out pop mov jecxz mov cmc pop sub jle fucomi sub jne sub int call daa sub shrb subb cmp sub cltd daa mov xchg addr16 cwtl sub mov (bad) mov adc decl sub pusha mov mov sub fldcw lcall and shrb and jno decl dec sub jo add or shrl aam mov leave pop out pop jg xor out sub hlt or movsb ds sub adc mov jb xchg fisttpll xchg and (bad) pusha add mov xor jge adc inc inc sbb cmpsl dec mov es push lods in stos test sti int3 jae cs add and imul adc lret (bad) jp movsl mov sarl inc push push and dec dec cmp aaa push dec inc sub dec sub out push jmp loop sub jbe cs xchg (bad) cmc push pop test dec jg pop ds sub sub push add jmpw push inc int3 mov sub adc sti mov cmpsb js fucomip loop addl xor push movsl cmpsl jge dec mov sbb sub adc pop xor push mov mov and leave xchg shll sbb adc xor mov lock fcoms add movb leave xchg xor lret cmp mov out pop or or sub (bad) scas pop or lret xchg shr sbb add lahf sub shlb mov lock cmpsl movsl add fnstcw loop add ss notl arpl leave ja out sub js hlt fwait dec pop or jnp jg in cli into sbb int inc cs push sbb xor jmp inc inc jne cmpsb ss imul push cmpsl cwtl and and loop js xchg dec pop sbbb call sbb incl insb imul push in adc xor in lret adc pop mov movsb adc inc mov pop inc ss sbb mov push movsl add adc cmp xor popf adc mov in subl or push pop mov dec int push or sub test push int dec xchg inc lock and leave clc pop int sbb sbb cmpsb mov adc sti sub pop add in add pop fidivl dec iret jp dec popf sub dec dec pop gs sub inc or arpl outsl mul sub imul arpl test ljmp into rcrb ja mov inc cltd scas mov inc sub push inc cld push in mov cs jp fimull xor int3 cmp and cmp cmp add push fs push pop in xor fistp mov mov dec insl rclb daa or ss pop jae and mov add cmpsb sub cwtl add jecxz mov loope mov repnz dec rcrb xchg in loope loop movsl lahf or xor and or xchg adc and inc out push pop shlb and incl xchg ret xchg add push jle sub fiaddl sub cmpsl test mov scas adc test sub in or inc push and cld mov jnp adc pushf rolb add push sub std popa insb cs mov loope sar shrl in rcrl sbb inc mov xlat push insb inc add sub out inc mov sahf (bad) repz aaa xchg cli imul xchg decl pop add js das xchg sub push test loopne adc mov xor test jle push push sub xor push push cmpsb mov or sub push stc dec pop mov mov lcall pusha mov sub mov sub inc xor (bad) out and or call stos sbb jecxz gs sub sar cmp sahf add mov sub cmpsb rclb xor inc cmpsl jp adc dec push lret shrb xor sbb sahf and sub mov push push dec and cmp sub ret repz sub sbbl cmc into mov pop sti push or cs cltd out pop scas fild out or mov cld ss std (bad) mov xchg lahf sbb sbb xchg add inc sub jae mov sub pusha roll jecxz enter ret test lods push sub push jns sub push clc cmp scas ss les loope rclb lods mov data16 sub xor sub out jne mov aas pop sbb jp lret pop aad inc movsb lods adc dec popa fdivl jge cmp cltd mov lahf and mov sbb jge cs insl pop lock lcall roll push sub xor add jae sub add insb fsubp in inc sub xor loope dec daa es cmpsl dec jg dec ret stc fwait push and push ds leave pushf sbb addr16 bound add daa ja push loop xchg int shll cmp or lret imul ljmp lea and sbb flds add repz lcall nop stos xchg cmp sub jae rclb cmp cwtl xor ss or out movsb daa addr16 mov pop mov out dec jbe loop int3 pop cmpsl cmp jns dec (bad) in inc and mov (bad) sub push sysexit aad sti push pop sti sub sbb sub test pop repz xchg xchg fdivrs sbb loop sub push xor repz movsb pop mov hlt insl les jns push icebp xor movsb cmp sub out das stos fcoms lods cwtl lret lods addr16 pusha gs daa jge xor or add ljmp sub outsl sub repnz sub xor xchg inc orl adc or mov stc pop ret les cmc cltd (bad) cltd mov lahf aad xor sub lret rclb stos cmp push lahf (bad) or or sub popa out xchg into mov sub ret adc incb scas cmpsl mov out cmp adc notb test jae cmp mov ds mov push popa add jae dec push push out repnz adc (bad) not sub test imul lret push push (bad) cmp bound clc lods push mov iret inc out xchg mov xchg daa lods aas adc nop scas dec fnstenv in xor adc cmp or pop nop xor fsubrs sub jae (bad) adc cs xlat add bound and dec jecxz push sub rcrl dec insb scas sbb insl (bad) cmpsl dec inc mov std or out jbe push mov rcl and xchg sbb and mov out sbb sub je and xchg xchg (bad) pop stos mov inc push cltd adc xor push mov leave push cmp adc jo sub (bad) sbb sub repz mov inc xor insl js mov movsl xor pop and sbb jg rol test outsl cltd adc jle add or cmp push sub je ret cs jmp (bad) cmp mov data16 inc into (bad) out jae pop sub insl scas call xchg push out push sub lcall popl or in lret xor out addb sub or pop mov or dec sub addr16 fldt outsl push movsb addl sbb dec sbb xchg sti inc cmp les test nop cmpl cwtl mov xor stc or sbb ss leave cltd aaa mov sub pop xchg decl push jo pop dec cmpsl adc mov push fs rcrb sub loopw ss xchg xor or icebp xchg sub in mov push pop xor aad dec push xor pop push push dec xchg push mov stc fs and add mov loop or out test xchg push fwait or test push leave ret mov popf outsb iret cmpsb fiaddl sbb dec stc sbb lods cmc cs popaw and sub push cltd cmp addr16 sub (bad) outsb xor mov and xor sbb and inc test movsb into insb adc or mov xor sbbl fmull and out ja popf fnsave cmp jp leave add pop (bad) (bad) inc mov mov jo push repz sbbl push arpl mov mov jae test cmp int3 (bad) and dec jle iret xchg sub jg mov fsubs mov push mov inc ret adc dec daa call mov inc dec push ficompl stos rcll xor pop lret ja or jmp leave xor (bad) push mov dec push cmp in arpl popf add sub icebp mov push jge sahf jge fsts cwtl addr16 loopne sub arpl jno (bad) std fdivrl sub xor jo push inc cmpsl out mov push aaa scas nop pop mov (bad) sub aaa cli xchg (bad) (bad) sahf xchg and dec pop int mov push push jl cld mov aam aad add mov dec jge add cmpsl (bad) adc lahf dec pop int inc loope pop xchg push daa scas add mov jp stos std mov fxch loope jb fsubs bnd inc or outsl fcoms test jo adc rcrb fmull xabort test and jb cmp mov pop ss dec inc inc dec inc dec ss (bad) mov adc enter arpl mov add clc inc leave dec call in push xchg sub andl mov adc or imul nop int inc and je jl fstps repnz xchg mov push jb daa sub jbe,pn popf pop adc xchg std dec mov mov push push out repz out xor sbb icebp popf stos sub pop mov jp ss push inc clc sub or sbb pop pop push jno inc cli jne addr16 push enter sub incb js mov pop inc fnstenv pop or dec dec cld pushf cmp pushf mov and cmpsl es add fisubr scas (bad) imul insb and ret fldt push test cmp cs repz mov push neg in call fildll mov ja and leave adc mov and push int pop xor jne (bad) cs data16 cmp push xor push dec sub mov add (bad) mov xorl sahf adc or dec mov (bad) jb cmc dec jb es aad jmp adc (bad) push pop lahf movsb rcrl pop dec aam int cmove outsl push call jne xchg push sar mov out daa lcall fwait js xchg loop out xor int3 mov dec jp push pop jp push dec jecxz inc inc pop jp inc pusha insl xchg repnz lods jl leave dec xor cmc ficoml pop les cmp dec lahf leave mov and int pop mov into cmpsl imul out xchg push fwait (bad) push xor ds push jg adc jl fisubrl std imul imul cs int jg insl xchg pop fidiv inc sub (bad) cmc mov lock adc not arpl test ds xchg adc out mov inc push push dec fdivrl test cld testl fsubrl enter insl fdiv push scas ds test sarl push dec andl pop sub fdiv xor daa stc or fist jnp inc pushf shr test aam mov je jg push lods sti mov sub xchg mov inc decb mov cmp xor xchg int3 jo inc mov imul xchg mov pop test xor ds sahf adc outsb pop sub xlat iret mov jge push push inc mov adc sub mov jae inc add or leave and cmpsl sub add push sub pusha dec (bad) mov sub faddl data16 das adc mov fldenv jnp dec cli into push sbb xchg loope sub xor jmp fildll in add jecxz pushf test jp mov xor xchg cmp add mov push sub std inc rolb loope push mov (bad) xlat push mov bound jbe sub cmp xchg sahf push push xchg jge out jg std inc lret mov mov push or jo xchg xor inc xchg sub adc (bad) or stc stos sub mov inc inc not adc or or sbb sub xchg push adcl mov (bad) sub aam into es push (bad) iret pop rcl xchg push add pop fwait enter or mov out dec (bad) testb inc dec mov in out xchg bound push mov mov sub aad pop jno sub lahf pop mov jo lret aaa fsubrl xchg cmp jecxz adc jmp jne lahf movsl loopne mov add ljmp sub pop or adc test or mov cmp mov cmp cmp fildll js dec hlt adc cs bound mov and mov adc jmp mov js dec ret lret jecxz push cmp xor (bad) jge imul mov dec dec test inc ja mov push dec xchg ds sbb (bad) xor xor or pop out cmpsl sbb sbb inc pop ret xchg dec jge or push divb sbb loopnew,pn rclb int xor (bad) pop jnp sub pop xlat jo mov or inc or and xor call mov mov sub cmpsb loopew int3 and imul xor mov notb orl sub int3 adc jbe iret adc in (bad) enter cmpsb mov sub cmp dec out adc sbb xor mov jnp cmp (bad) shrb stc dec dec xchg das jo fsubrl pop inc idivb adc sub mov je mov ja push add addr16 (bad) hlt cs sub and cmp mov (bad) out xor lcall (bad) jae mov ss data16 (bad) es mov xor divb fdivl lea mov dec loope vmovntdq add jp ss mov adc pop pushf inc out pushaw sti scas inc sub xchg adc cwtl push pop dec mov call fstpl push in sub (bad) rcl fs pushf add push add dec sub leave incb je dec orb daa sub xchg mov ja ret mov inc cmp in cmpsl fisttpl sub jmp sub push push sub out mov mov push call sub bound sub sub jbe cmp addr16 rcr fidivrl fiaddl fs push mov mov mov add ret or scas mov stc (bad) sti (bad) std ljmp jnp popf sub out and cmp int xchg fistl add (bad) sub rcrb repz scas daa mov lods sub jne imul mov jbe scas inc push mov js pop inc test mov and cmp lods pop fsubrs cmpsl sub add push sub and cmp adc sarl dec sti lods sti test fidivr push inc lods dec and sub idivb push or push adc mov pop outsb mov pop movsb pop test popa dec push pop or gs jge sub sbb sub jns push adc lahf sbb mov outsl xor movl push push mov notl sub and dec mov (bad) sti test dec (bad) out (bad) mov ret sub addr16 mov les test jmp bound mov mov movsb xlat repz lahf cmp mov xor pop enter and pop or gs push sbb (bad) repz ret add out cwtl jbe jns sbb xor jg sub lahf dec pop test push lods out gs leave mov sbb jb fsubrs in dec mov lahf leave xchg cmp dec out fs (bad) xchg jno or dec int3 inc imul fwait loop inc fldcw (bad) popa rclb sub pop or pop add mulb add inc pusha or jp ret dec aam sbb xchg mov cmp and loopne sub cmpsl movl insl adc notl mov adc leave sbb (bad) into frstor and and jle test movsb sub or jne pop dec addr16 adc xchg sub adcl cmp dec mov sub mov xor inc pop xor fwait mov (bad) popf mov mov push clc cmpsl nop jmp loop jl mov jge data16 xchg and popf mov jbe ret push inc popaw dec hlt in subl jg sub cltd lcall cs leave imul inc dec (bad) int aam and inc push pop fnstcw push or cmp in xor jmp insb and fsubl mov pop add scas cmpsl pop xchg xor sbb mov dec (bad) jl push add and je (bad) xor dec xchg fsubrl cmp add sub mov sbb jb loope sub in pop insb cmpsl add gs adc push mov adc movsb test mov mov jne xchg push repz add xchg push leave insl xor push mov fisubl lds add cld cli ss xor mov iret notb sub (bad) cmp sub imul push sub xchg (bad) aas imul (bad) mov clc add call loop jp push sub pusha push out popa mov adc cmp ss sbb fstl adc cmpsb add sub mov insl mov dec push stc adc sub jmp in pusha push and xor dec sub fsubp sub jecxz mov inc fild push pop mov sub cs sbb jno loope daa es insb or sti mov push repz mov lret jbe push test add cld mov sub push movsb push xchg inc xor test mov (bad) jo nop sar mov sub sub je (bad) inc push loope adc jnp inc jb mov push dec pop inc cmc test out sub mov sub dec mov bound fadd int3 bound inc and in xor xchg adcl pop adc ja pop out sub repnz cmp std sub mov inc mov xlat dec sahf lods mov notb push fdivl xor xor pop int3 std data16 cmp sub or jae loopnew cmp dec push outsb sbb mov test test jo ss fildll shrl flds pop pop lea jge inc ret dec das faddl inc push push imul jmp xor lock mov decb clc clc leave mov sahf inc cld lahf push mov orl jl xor xchg and xchg insb vpmacsdd push aas repnz sub dec pop pop mov repnz inc cmp dec leave (bad) jae das mov dec xchg test mov push jp jp push jg mov dec jbe or scas jbe xchg das test cmp or mov negb pop lcall leave (bad) stos cmpsl add push jbe add sti fcompl dec jl ret pop mov mov push mov loopne or cs jmp in out mov mov xchg adc outsb aad ret xchg iret adc and lea fldcw dec and pop in movntq (bad) subl push xor test xchg daa out mov (bad) xor mov dec fwait leave cmpsb mov cld lahf or loopw adc popf int3 scas pop lcall push (bad) and rorb add loop mov jg mov aam enter push ja fs mov (bad) cmpsl mov pop or addr16 ja jmp push pop xor pop (bad) xchg mov sbb push test dec (bad) dec push push leave add push fsubs cs in fnstsw ror lret jns stos pop (bad) popf or jo sub jo and sbb mov das pop in sahf adc imul jp xchg mov sub sbb sub mov lea cmp cs or sub or mov out mov sub leave inc add inc adc fbld xor (bad) adc sub xchg rclb out incl xchg mov sbb jle or ds bound ja cmp mov cltd sbb xchg cmpsb jb mov dec (bad) notb jl rcr jne inc js jmp and cmp ret scas mov not sub jo cwtd stos sbb cmpsl (bad) sub mov and shrb inc or mov sub pusha cwtd or sub sub dec mov and loop dec out sub sub mov fildll imul movsl ss out mov push add xchg and std dec push sub scas xchg in mov sbb sub enter push mov jp ss test sbb loope fild ja cs scas fsts cmp imul imul leave call or jg mov or in inc push outsl je sub adc cmp mov push lods in push lods lcall mov fldt xchg jae inc movsb add jp push stc xchg es xchg lds pop sub loope xchg rcr insb ja mov sub aam stos lcall sub (bad) xlat ds movsb xor mov add mov int icebp sub add push mov jmp les xchg and xor jo repz adc push (bad) out popa cmp arpl mov and jnp push jge cmc flds inc and fisubl test xor in ja test mov outsb sub sbb stos fwait lock movsl sub (bad) jg push fs push mov sbb lret and mov dec add scas jo inc sub xchg pusha inc inc cmp mov adc repnz bound mov cmp pop stos (bad) or sub push leave scas push shll sbb (bad) cmc mov jecxz jno inc pop insb icebp jl movsb mov jns dec mov mov push in xchg outsb fildl sub xchg int jl dec (bad) leave mov out mov xchg (bad) cmp pop adc out xor cltd add jo sub push pop mov imul mov es out jns (bad) int jne and xor push add lret lock push jmp lods sub sbb jge (bad) insl xor add test addr16 data16 mov sub test imul sub aaa xchg mov add sub and loop pop push sti jbe jnp adc rol push mov sub mov (bad) xor lret add cmpl popf out imul aad pop (bad) fdivp es jl out push xchg cld cmp out xorl pop jb pop add sub add js xchg fs inc mov call imul xchg popa sub sub sbb ficoml outsb sub cs dec cli jb pop cwtl call test enter mov icebp dec push repz iret js or sub rcrl fsubr jmp out inc mov xchg and call (bad) cli js inc insb inc out xor pop xchg lds sti jg cs add and sub inc push pop data16 jno mov in lea adc push js fisubl sub sub pushf mov mov (bad) jmp mov and jecxz lahf dec lret adc jle sub in pop adc mov pop pop lea lcall pop sarb mov fdivs fcomps jae test rclb mov and outsb loope pop jo,pn push mov clc push daa dec inc lcall scas pop test fcom sbb sub out (bad) (bad) (bad) mov daa xor pop je cwtl gs sub mov xchg aad loope jae mov mov addl aas data16 xor test mov imul stos inc xchg dec ret add test jae icebp fmuls gs daa mov xor pushf xlat fdiv dec cmp rorb scas mov ret add int3 xor mov lea (bad) fsubrl cmp or sbb xchg cmpsl es sub test jbe jg or sub jno dec dec sahf adc ljmp mov xchg iret inc aam jmp jge adc cltd ds cmp dec cmp movsl sub loope push jg,pn outsb pop mov out lcall gs scas pop orl rcr (bad) xor jne push es jge sahf std push push mov pop repz mov pop notl jl add dec push movsb aad pusha cltd xor aaa mov inc pop adc lea loope adc push rorb int xlat cmpsl cs adc test mov cmp cmp push add xchg out inc pop (bad) data16 mov imul mov pop mov pop imul sub call mov dec mov sbb sub clc xchg xor call mov insl adc test rcrl mov inc push imul mov inc sub inc pop cli xorl adc jle bound dec fbld pop test ja mov inc sbb inc xlat sbb or push enter jne aas lock mov cltd jg mov mov pop dec pushl test inc rcr push pop icebp cmp sbb clc icebp test cmp xchg std cmpsl in lret adc mov dec sub cli sbb fcomps xor xchg add daa out (bad) xor jcxz rcrb push lcall movsl sub pop xor jbe xchg stc sbb sub push test loopne and add shrb in test sub into aaa mov push mov clc push sub dec dec outsb add cmp sub sbb ss subl aad dec pop test sarb sub aam cli jecxz jnp jge push aaa xor sub sub jle,pt scas (bad) repnz loope sbbl int3 jl stc mov dec push divb sub (bad) cmp pop cmp jb fwait out xchg add add or sub sub fs lods jle cmp aam lahf or inc xchg sub es loop jo and xlat adc mov aam lcall cs ss push clc aad dec push ja call repz jne push lahf mov movsb xor inc fwait lods pop sub xchg push ret shrb jl cmp mov scas xchg mov push mov sub jl int3 pop pusha out mov sbb cmpsl push repz or jl push int3 jle sub stos and mov test push mov in testb popa dec jge mov and outsb std cs nop mov (bad) add sub mov outsb mov xor adcl and sub and add sub xlat dec aad xor push or adc mov sbb mov data16 fldt mov pop movsl movsb in insl cmp je das xor in sub jl ds js inc stos and test iret sti mov and aaa ss outsl (bad) jle dec std xor add data16 or test addr16 push xor inc add movsl test popf sub ds or jecxz lods sbb pop sub imul dec (bad) xchg out das xor lods cs mov and imul jb dec lock adc push inc jne mov ljmp sub (bad) rorb sub xor mov pop loopne addr16 stos inc shr xchg mov and mov add xor push repnz sub mov add aaa lods std push arpl xor cmpsb jmp push mov xchg andl icebp sub sbb jmp inc jae add xchg cmp xor jns test out dec add xor pusha es xchg jp xor cmp repz addr16 lret in pop scas xchg call cli xor cld and addr16 sub inc incl (bad) popa js scas loope sti lods (bad) into sub cwtl fdivl push pop lret xchg inc and mov or in nop jle int mov in lods or and cmpsl lods mov and test enter (bad) popf ret or or add dec rolb xlat das test sbb mov sub jle push sub popa out and call cmp lock jge add mov inc sti jne ja dec (bad) fnstcw pop call jno pop lcall sub lock push roll out ret jne and dec mov sahf xor add jne stc dec jo out push imul dec call inc and mov mov cs daa cli sbb push sub jmp and out lds xchg das test rorl lock cmpsl mov int3 adc adc cltd xchg aaa adc add (bad) pop jo,pn pushf cmc or out ljmp shlb daa pop ds adc mov or xor fisubr sub aaa xchg dec adcb pcmpeqb nop cmp mov test sub daa movsb popa jbe insb adcb xor and fsubrl mov jae push call cld out sub test int or push cs jbe push dec jo imul jg rol add mov into xchg mov pop sub mov ds push test add inc (bad) nop cmp outsl fsubs inc mulb out test test mov mov push sub ret push lret mov ss inc or dec scas adc mov adc pop add ja,pt enter out cmp cmp sub push mov lahf sub (bad) cwtl jp hlt add jb mov outsl in xor push sub pop sub jns sub cmp rorl scas pop addl pushw cmp sub loope aad arpl test cmpsl cmpsb mov not (bad) frstor pop lods mov and sbb insl (bad) jbe test psubsw xor mov in or and xchg pusha pop clc inc mov stc push cmp xlat adc dec jno jnp in lret pop sub inc push aad sub aaa adc test test out mov ret adc add jo,pn push mov fimul xlat mov mov das sbb jne cmpsb out mov inc mov rorl shrl jecxz mov dec lahf ret (bad) push dec int sub cld jmp repz add sub jmp jnp,pt les push mov jecxz pop lock xchg (bad) jo jmp inc pop lock cld lret jo pop and jecxz mov fisubl roll and adc out and addr16 cmpsl dec xor cmc mov pop push out push adcb dec int jge mov daa cs loop sbb and mov mov bound and negl ss dec scas jl xchg cwtl dec sub out into aad and adc mov mov ss mov out xchg loope pop ret call int inc and dec (bad) pop xor push inc sub out xor leave sbb out pop xlat push mov or mov dec add xchg push mov sbb fdivr xor test out (bad) pushf adc xchg leave dec jne leave sbb test push sub test ficom sub adc mov sub jbe xor dec data16 inc push mov pushf cmpsl xor jmp jb loope pop mov or add and into sbb cmp jl push mulb xor ss cmp dec jne and ss jno sahf cmc daa aam mov out cld inc leave rcll jp movb mov jg dec mov or in ffree test pop inc xor mov test adc dec ret inc push jg pushf mov dec aam mov push and bound lret outsb dec lahf xor push cmp push jo addr16 bound imul jo popf cltd inc ficompl mov in add jnp push add xchg fs subl and push into push mov es les cmpb xlat call xor mov in lock xorl cltd fdivs icebp aad dec enter pop inc pushf push jnp mov adc xor sbb xlat push ds leave fsts adc (bad) sub push int movsl inc dec pop das dec jne push mov mov and (bad) sub mov mov outsl jo ficompl jg xchg cmpsl add imul mov jno dec scas dec sub dec lret jg adc cmpsb mov push ss cmc xor mov mov imul push in sbb lcall mov adc lea ljmp cmp xchg ss fdivs mov test fldt add cmp lcall loop and pop les sub xor or or cmp or inc imul cmpsl (bad) push loope xor fwait leave mov push movsb test and sub cmp leave (bad) xor es push cmp pop (bad) sub incl fs inc sub in mov (bad) pusha out loopne bswap or inc adc cld dec mov and test dec jp lahf movsb call sub mov xchg mov pop jo inc sbb sub xchg orl dec cmp out sub orl sub sub std test mov inc jmp or leave sub add sub dec mov dec nop pop or fdivrl dec fldcw sub lea adc test pusha cwtl or mov ss ja cmp int cmpsl xchg mov xchg push fwait aas mov jl mov push sub mov pop repz mov imul ljmp in sub mov jp je mov inc push or inc lds dec mov sub add jb mov pop hlt mov adc sarl dec pop popa outsb mov add jge mov xorl imul sub adc adc sub mov aam xchg mov stos jmp fsubr sbb sub lds mov shr adc loope shr add mov pop lahf cltd xchg inc push mov test dec sub jle mov (bad) cwtl fmul sub out loopne xchg inc jnp pop sbb cmpsl adc or pushf sbb and (bad) jg in add cwtl jp dec outsl and adc aas data16 add int and aad and jl mov cmp loop js and (bad) outsl lods sub xchg inc pop jo dec and jo jmp jb and dec xchg js loop inc cmp in nop dec push dec fdivrl lods adc mov inc cmpsl adc dec ja mov bound lret or je insl out cwtl xor ss or add sti dec pop or jmp lods inc (bad) cmpsl in test adc mov jge leave nop shrl or cmp pop mov arpl loope or fsts push hlt pop inc jo xchg dec out sub popa sub jp in jge cs or ret (bad) pushf sub lea cmp sub lods popf mov lods clc and loop test pop sub xor sub sbb xlat aam stc push mov sub dec arpl std dec test loopne test out sub shrb jno sub bound and daa daa movsl pop in bound sub cs add xchg cmpsl dec xor ret jmp jne cld ret sub jbe pop stos adc push inc in loopne (bad) out xor jl and test std (bad) push (bad) repz mov sbb stos mov dec (bad) mov sub (bad) int lock pop adc (bad) mull jb xchg test popf push fbstp adc mov (bad) xor xor cmpsb pusha push xorb fidiv push sbb pop pop push cld mov jae xchg and loopne pushf inc out mov fimull std rolb adc lods (bad) lahf lds adc sbb and sbb cmp xchg int3 adc sub scas sbb repz jae or aam sub inc ret mov daa pushl fwait jmp mov jbe sub dec sub cmp clc iret adc adc pop cwtl das test sub bsf pop sub or cmp mov stos adc mov mov push (bad) dec (bad) cmp jne test shrb (bad) sub xchg push jnp adc sub mov or sub nop xor jae (bad) hlt dec fisttpl and sub jne sub push sahf cmpsl sti xor sbb sub sub xchg movsb xor sub pop insb roll and sbb jmp sub or mov subl aaa nop shrb mov adc lods loopne aad mov sub roll fnstcw push mov arpl dec add sbb add jo jecxz pop insb not sub and lret cli clc pop mov arpl pop scas sub push pop mov ficompl dec rorl dec test jo mov and xor push ret ja lahf sub adc enter ss fsubl sub cmpsb sbb arpl aad aam fsubr cltd jno mov jb arpl sub mov xchg cmp mov fisub sub pusha hlt subl push out mov push xor xchg xchg lret push sub in pushf mov dec cmp outsb jb test push fidiv sub cwtl push xor sbb jl,pn or mov data16 mov out mov dec and push repz sti sub enter jae inc aas stc mov cmp push xor mov arpl imul adc mov movsl sar incl sub mov push mov or (bad) jbe addr16 fcmovnbe add mov sahf xchg ss je ljmp test inc (bad) jno out cs jns xor inc call xchg mov outsb sub mov jns xchg sub mov popf movl push adc mov cs loopne pop cs inc sub js adc jecxz add cltd pop (bad) push inc pop dec sbb sar cmc pushf les jp jp add fidivl in sbbb out int cli (bad) (bad) jb nop repnz bound aaa data16 and imul xor mov push ds movl jge out sbb cmp add test push aam inc pop inc push jnp mov and inc adc push icebp popf mov fnstsw jo aad push cwtl test push repnz xor mov inc push out ret xchg jp lods pushl push in mov dec jne loope xchg leave mov cwtl pop jbe call rcl xor addr16 fstpt xor and pop or (bad) stc push sub popl (bad) lahf mov stos and add aaa adc jnp enter ret push push lock rclb testl (bad) adc mov xor jmp xchg mov (bad) mov push mov loope into aad jnp xor xor popa (bad) add cmpsl push (bad) (bad) leave xchg jmp jo pop es shlb xchg cmp dec mov leave xchg inc jp mov loope pop dec imul movsl (bad) in fs leave mov or push jl fucompp (bad) fincstp cmovae cmp gs ja stc in and or add popf into dec dec mov or data16 push jno aaa sbb sub (bad) dec mov (bad) out jns mov push xchg mov aam (bad) sti jg fldl push jns or xor pop adc out fnstcw je dec test and paddd sub adc xchg pop daa push mov xor fnstenv icebp mov mov xchg scas aad (bad) daa xor mov pop repz sub fisubr cmp mov mov shl aam (bad) in shrl lret or xlat icebp xor sub push mov xchg (bad) int3 aad out sbb push xchg sub cmp sub int3 cltd inc cld xchg inc xor jge sub mov stc cmp iret sub in or cmpsl and and hlt pop test (bad) jge jmp mov (bad) cmp les push fwait shrl and sti pop out sub andb daa jae inc mov cwtl or aaa lods mov push cs push daa mov icebp fwait dec sbb (bad) inc add je and (bad) mov fldz sub cwtl xor (bad) sub hlt (bad) sub mov add icebp repnz push test test and push xchg and dec mov sub repz ret dec fimull pop cltd scas cld or test shll cmc pop dec xchg movsl jg add push das pop imul loop test mov pop jae xor mov mov (bad) je lret push addr16 inc loopne psubsw in std sub push jae (bad) lcall push mov js call pop xchg mov add aas inc xor lods fdivrs push in cmp outsl lahf subl adc sub xchg movsb cmp mov mov or or shl add adc mov xor inc pop or icebp sub inc inc sub les (bad) rorb in (bad) imulb dec jle pop outsl mov cmp sub xchg pop inc add movsb mov dec lea das mov mov cmpsl push pop popa inc fisubl rcrb xor out mov lret sbb shrb sub sub pusha sub in (bad) mov pop mov sub push sahf stos scas sbb mov mov ljmp fcmovb add cmpsb sub jg int and sub nop in (bad) cli shrl aam push ss call jmp jecxz lahf ljmp add cmc sti xchg mov push andb mov mov into xchg (bad) mov fwait xchg pop xor add leave mov sti adc xchg and repz push int3 mov lock push mov sbbl cmpsl leave jno jp adc mov test (bad) sbb pop jge push push je or (bad) add sbb int je jae (bad) mov xchg pop sub jno (bad) leave andb je jmp adc mov arpl test sarb jg pop mov add jbe pop in faddl mov add xor sub cld nop cmp insl fmull (bad) (bad) xor cltd in lret dec ja test in aad mov push test sub cmp les mov int or mov in dec test test cmp lret js ss inc or pop cmc scas jbe add cs into call imul inc sub mov mov push xchg loope loop insb imul sub jns dec sub dec sub hlt pop test and mov mov rcll bound mov ss jns insb in es or inc rclb mov jmp (bad) sub jo rorl pusha call dec sub jle or pop lcall xchg subl stc push cmp popf test (bad) jb mov sub test rcrb push pop xchg add sub mov push sbb call add icebp data16 (bad) xlat xor add scas cmp xor fnstsw xchg mov loopne mov inc mov xor fiadd jp lret pop cmpl cwtl or sub mov in outsb scas push push loop or sub mov loope out inc in fidiv sub sub mov rcr loop movsb std dec mov push xor fildll outsb stos cmp cltd xlat popa fwait sub push fs lea stos lcall (bad) (bad) and sub add (bad) cs imul and cltd decb movl mov sub jns bound mov test or add push jmp jg inc lea inc sub sub divl orl ds jns push jne pop dec adc xchg or mov fisttpll jb sub clc cmp not fcomp jne ret mov leave add subb mov aam xlat or aad out mov sub mov cltd sub idiv xor into ss js into dec pop xchg and imul es addr16 icebp loop fs loope cmpsl adc loope add ljmp out cli sub xchg add cwtl mov mov outsl cwtl fwait lret xchg ja aam imul mov popa adc stc xchg int sub addr16 sbb jp,pn xchg pushf xchg mov (bad) aam test sbb scas icebp lds test cmpsl push stc dec arpl subl adc cwtl jb sbb inc sub adc xor fldcw jne repnz sbb sub adc inc sub jns stc xor mov (bad) jbe sub jae sti sub lahf cmp imulb aaa enter inc push mov xchg stos push fldcw lock fiaddl ja push xchg pop and push or xchg gs jbe mov and push mov divb cmpsb mov sub fidivl scas lret test push sbb xchg scas sub push mov cld (bad) icebp xor sub fwait sub lods lock and and xor daa mov dec xor sub movsl jg int3 xchg xlat add cmp scas sub mov sub sahf pusha ds dec in jp,pt into notl test jecxz sub pop xchg test adc fdivrs mov aam mov cmp in jmp sub xchg shrl dec (bad) mull cmpsl repnz scas mov sti pop sahf lods lahf fbstp fdivs shrl push nop mov and stos adc loop pop in xchg add fisub shl adc dec shrl mov loopne adc jbe scas and pop test push sub (bad) ja data16 mov sub or fstl divl cmp flds jb xchg mov sub out add jns pop dec inc sub xchg sub pop dec shrb jge lcall inc push idivl jecxz inc sub popa sub enter rcll pushf push faddl and arpl sub sub sub test jnp sub adc sbb test add sti push scas xchg loop inc iret out test xor add xor jo popa sub stos shrl jp and mov stos add fistpll lret push jmp mov scas into jnp mov cmp in cmpsb sarl pushf addr16 loop test outsl call jmp orb sub (bad) mov add dec push aaa test mov in pop xor fldt mov sub daa and fdivrs into push sub mov aad push add rcrb mov jbe ljmp test frstor mov sbb mov lcall aas inc sub arpl stc bound jno push sbb xor push pop mov mov and jg in jo sbb push mov inc add and xchg pop sub stos loop (bad) cli sub push xchg lods inc in cs push call inc mov inc cmp je insl fcmovu cli xchg cmp daa gs pop popa push cwtl lea sbb daa and (bad) xor aam es leave dec mov int (bad) sbb (bad) flds mov aad and add jbe inc sbb dec push cltd mov int jnp data16 cs (bad) fldenv sub xor xchg pop nop sbb inc pop sarb aad ret push std sub and out call dec and daa pop int lcall push dec pop and mov cmp adc sub jae sar cltd push loopne movb cmpsl push cmpsb push fcomi bound jb jb mov negb jmp popa hlt mov je xorb sbb push sub sahf fcmovnu push pusha hlt fldcw pop jb sub push xchg xor dec cli inc iret notb ss pushf sub fsubl cs scas inc lahf adc mov push mov pop int3 and test or std xor icebp fldenv xor (bad) and dec or sahf mov cld sub mov and fimul mov push add in jle pop cmp dec inc (bad) (bad) (bad) adc out stos mov fnstenv or xor cmp xchg in inc out imul sbb or sub sub pop daa sahf jb add add xor cli xlat add jnp jbe adc xchg mov movsl adc mov and cmp popf jbe in lret stos and (bad) xor bound leave push sub int inc dec insb cmp push and aam imull inc and cli bound in pop inc adc dec cmc aad (bad) push cli dec mov mov xlat fwait movsb xchg and icebp loope insl dec jge sub and shlb (bad) or pop addr16 pop hlt stc (bad) jmp es mov dec or movsl xor out jecxz dec or fdivs lret cli add xchg out ret add (bad) aas pop in sub mov jp,pt sub lock nop lods and adc xor sub xor and sub fld1 xchg jns sub leave cmpsb and hlt les adc cmp aad (bad) cmp push sub adc pushf test pop imul mov mov cmpsl mov and mov xlat sbb adc scas sbb inc sub fnstenv mov ret dec dec (bad) ds add mov das fisub sub ret jmp sub ret aam jb mov cs pop jae lahf hlt imul mov js and fisttpll fcmovbe jmp cmp lcall int3 lcall test cltd in sub ja push nop push sub arpl inc mov mov push jb xor icebp ret and fstps xlat push testl and cmp pop out xchg push cmpsl sub aam dec sbb mov sub jp into xchg push xor (bad) daa pop jmp sub mov mov mov je aad mov sbb lret pop insb xchg out cs gs scas int imul or push orl and cli imul loopne cltd xor lcall (bad) cs and mov mov popa dec cli lock scas add mov sub dec sbb stos xor adc (bad) scas sbb stos add leave lds jae addr16 aam add pop add (bad) cld sarl push jo iret sbb xor push dec or lret dec xchg mov and cmp (bad) leave cmp mov lcall lods jno jl sub cmp pop (bad) and (bad) sbb push pop pop stos incl mov in push ja or stc sbb push divb inc jp cmpsl jae jmp inc out push pop sub pushf xchg xor fildll clc add and loop out insb arpl and dec dec pusha or (bad) fnstenv push xor adc mov clc cmp xor sub leave sarl inc (bad) lcall icebp adc cli add sti cmp lret adc sub cmpsl and cltd xor fidiv push xchg sub cmp sub data16 and sub arpl out xor ljmp sbb flds mov pop dec jg test loop adc (bad) mov push pop out sub out xor popa xchg sub push sbb jp,pn dec dec mov repnz sub cmp xchg xchg mov aad pop cmp mov sub sub sub push lea sub pop ja aaa inc mov pop adc dec jb cs loopne mov inc sbb xchg adc sub and rorb ss push in ficompl sub sti fcoms (bad) dec ljmp fpatan lea pushf call data16 sbb or test jmp sub mov fwait ss sub mov not adc ds jb sbb jmp dec push das pop cmpsb cmp mov push xchg push clc cld mov push pop imul test popa out fldcw cmp icebp out and pop cmp inc push sub mov adc jns test xchg mov jbe jp clc out jmp arpl inc push (bad) pop (bad) sarb (bad) xchg movsl mov or pop xor adc mov xchg testl dec sti push jns xor pop jb or daa lds pop in mov dec adc cs add in jbe movsb out sub sub lea rcll outsb decb mov das add inc sbb and out (bad) pushf cmpsb jmp in hlt fstps bswap mov cmpsl or loop xchg std xor popf daa cmp sub adc lahf lds xchg inc aaa enter out fcoms push daa test jmp mov sahf test inc loop jg (bad) loopne (bad) cmpsl ret sub loop add sub cltd inc push test push lahf pop jo out insb ss incb movsb sub jb sub cs aas cwtl iret stc mov sub mov xchg sbb std (bad) mov in cld push nop pop jno cmp sub movsb ja sub jb jl push pop cmp aad lret fucomi loope xor imul mov pop mov sub xchg jb,pn xchg sub lods (bad) lea int3 sub mov add inc mov sub cltd std xchg daa es cmpsb out add shll xor sub in aad addl addl xor pop test cmpsl daa cmp fnstenv sbb icebp mov jg sar cmp jb cmp data16 mov add (bad) loope pop loopne,pn or adc jb mov sbb sbb loop ret push cmp xchg and xchg popa cmpsb rorl mov stos sub test cmc ja push sub or pop jb sub xor sub (bad) cld orl and cmovge fwait out movsl sub in pop mov hlt jnp push push loop inc pop push cmp mov into dec scas inc pop out add aaa std sbb xor loope (bad) and repnz adc cmp lea cmp cmp mov (bad) int3 leave inc ds jnp push fldenv push cld sub or addr16 push outsb fstp sbb inc popf cs and lock mov mov push sub or cmpsl jne aam cli movsb es incb lcall and cltd data16 gs ljmp jno push movsl add sub je or sub mov rorb shrb out cmp bound and cmp cs ss out imull cmp inc and (bad) mov fnsave sbb push loope (bad) in out jne adc sub gs mov pop stos or mul enter jg mov xchg ret xor push stc into inc jbe cmp test push mov cs stos push sbb mov xchg add out sub (bad) aad sub mov cmpsl loope mov out or outsl inc or leave sub pop lahf test cld popa in mov xchg sub sbb idivl sub jbe repz sub lods mov decl sbb lahf push int std sub or mov or cmp jbe ss pop les leave mov repz aad dec add adc (bad) jbe cmp loope push ds sbb jmp push (bad) lahf sbbl bound sub int add lods cmp loopne (bad) sbb mov xchg xor daa (bad) int test jg push sbb mov int xchg cltd les fidivrl (bad) icebp mov mov iret xorl fwait loop adc dec (bad) int sub leave push inc add ja int inc add (bad) aad icebp xor int jge mov sbb push mov adc test xchg jnp dec ds and dec aad jbe incb in or test dec push lods push pop dec mov mov jge sub dec lahf (bad) int adc lcall pmulhw aaa cwtl int test out clc mov enter repz (bad) adc xor mov shrl cli repnz leave xorl cmpsl add movsl jmp shrb xchg pop or in call mov jo xchg or icebp cmc lcall ss jo cmpsb and xchg mov xchg sub add adcl mov push sub xchg dec popf xor mov add dec fnsave in push adc cli test or jg (bad) cmp xchg push ret pop pop loop repnz sub inc call nop cmp mov pushf sub (bad) lea scas sbb mov sarl loope aaa sub lret mov loopne (bad) adc outsl das xor sbb cmp pushf jp inc (bad) jae movsb xor adc adc testl aas pusha jnp repnz addr16 int gs cmp cmp sbb (bad) fmul test push push stc lods mov pop repnz add adc mov xchg mov outsl hlt xor pop inc (bad) call sub gs hlt test push sub sub sub in stc mov pop icebp adc mov inc sub movsl aas (bad) ljmp mov subl les stos push inc jmp sub dec test loopne mov (bad) mov adc out sub sbb sub sub xchg cmpsl mov mov fstl pop or decb clc sub bsr outsl push cltd scas leave and xor stc imul dec add (bad) ss test mov dec push in cld pop adc loope ret es xchg mov sbb cmpsb test in in in or jp xchg sub pop and xor in adc fwait and ljmp sub sbb mov push dec int or or cmp push push testb inc push int jbe hlt mov mov sti push dec adc data16 inc push cmpsb js sub mov jne movsl mov push in nop test and push adc add aaa (bad) mov pop dec (bad) stos (bad) jp xor lea jp repnz pop cs mov xlat inc dec sub push and xchg scas aaa jecxz sbb imul xor dec jnp push rorl xchg dec pop js out andl and out mov mov xchg push sub and out hlt clc imul sub dec jnp adc inc push inc push sarb sub bswap dec jge mov sub scas cltd fnstenv stc push cmc fidivr sub sbb and mov cmpsl and ficompl nop xchg int3 dec xchg or adc add sbb fxam or les or dec push (bad) add pop pop fimull jg adc insl scas mov cmpsb sub sub scas dec sub fwait hlt (bad) aas mov mov pop push pop lcall sub push fcoml mov or dec rcll loope jns xchg ljmp call dec cmp mov xor dec test mov or sub dec cltd push je iret mov jb mov push cld test in pop mov mov test jns aad push sub (bad) mov sub push lret (bad) xchg xlat dec pop sub pushf cmp dec inc or xor jae repnz sbb push cmp sub push adc and loop test jecxz pop dec lret push dec call subb pop sets fisubrl sub lods out jb insb sub dec mov push and sub das fild pusha or xor repz jle aam push sub cmc fwait daa sub mov add loop cld push fildl cmpsl sub mov outsb mov cmpsb je insb stos imul inc inc jle and aad sub out adc ja inc movsb in push add adc cmp test jbe sub adc jl jnp mov icebp pop dec ss mov sub cmp arpl repz cmp adc (bad) je cmp int3 inc mov dec add sub cmc jb ljmp out fmuls dec icebp jmp pop int3 cld fwait and lods sub cmp sub lock jb les dec inc test sub jmp mov sub sub sub pop sbb popa sub pop add mov pop sub les mov add loopne movsl mov jae jl sti out pop sub sbb mov fdivs pop mull dec or add sbb xor xlat ja movsb cmp adc daa cmp push ds mov jmp aad es xchg adc cs cs imul (bad) add sbb push clc outsb inc dec push fistp (bad) mov ss adc ds popf lret aas inc enter cld lret incl gs push lock fsubrl adc dec jb inc int3 ds jo push push sub push lret movsl popa or xchg lock js test jb aam and mov std leave test add (bad) fdivrs test sub sti lret or and mov cmp adc adc cmp stc push fildll rcrb icebp into psrlw fcoms fldcw add psrlw sub imul pop add nop sub and mov fpatan (bad) fucomi lock sub into pshufw mov adc (bad) imul add sbb ljmp (bad) xor xchg dec sub sbb push mov lds adc shrl and gs lcall add mulps pop mov sbb jl fstl push cmp sbb icebp pusha imul loop pop inc les int3 xchg add setbe and ret push xor sub (bad) into cmpsb cwtl push xchg xor call leave mov mov add leave xchg adc xchg insl int inc dec std cmp mov and out or ficomp adc cmp sub es (bad) hlt fidiv push inc cvtpi2ps adc mov je pop cmp cwtl mov and xlat cmp enter test and inc cmpb (bad) xor pop es test test (bad) pop jne icebp xlat mov in push popf lods cwtl sub insb ljmp data16 loopne sub jecxz ljmp pop mov push jbe (bad) test xchg es dec popa and pop sub mov das pop scas or xchg jle,pt mov js xchg inc sub xchg pop sbb test imul sti lea xor fdiv mov push sub mov data16 pop repnz push inc or xchg dec (bad) aas test pop sbb cmp adc mov xchg cmp mov nop int3 dec jmp jb mov adc or xchg test mov adc lods sub loopne jmp mov cmpsb sub and cwtl xor mov mov dec push loop inc sub addl ljmp xchg out or mov sub pop fwait xchg sbb lcall push aad pop xchg data16 test push sub dec sub out pop and xchg sub xor inc test push jne call mov rcrl lcall cmpsl xchg sub jecxz mov in jmp enter sahf jmp jb push negb push clc and sub cs add shrb addr16 or lret (bad) imul push adc sbb daa xor and addr16 ret push jns inc xlat mov sbb xor ret xlat push call mov fisttpl inc sub cltd xor fsubr lea jb and xchg xlat inc sub aam loopne jno ss outsb fldl dec mov jecxz in and cmp lret psraw sub add cltd jne and pop sub push jp push (bad) jbe sub inc addr16 sub aas jg cmpsl pop pop push gs iret mov dec pop pop out lea push mov xor nop aad sub js fsincos aaa push xchg push xor xor imul mov cwtl dec cmp (bad) or dec (bad) int adc test jl dec mov popa in cmp (bad) into int jbe push adcl push jl or and push aas outsl xchg pushf jns push pop mov ljmp push push mov pusha push fistpl sub (bad) inc cmpsb push pmulhuw and iret outsb xor rorl ret cmpsl lret sarl push pop xchg shrl inc inc std push fdivr sub cmp shlb (bad) mov cwtl pop mov imul push xor sub push (bad) or pop mov (bad) push push sar cld leave mov sub and cmp mov inc mov lcall clc icebp jl shr mov or sub mov sub mulb push into les pop cmpsl inc lret add test mov lahf cmp loop push clc xchg and jge and outsl in adcl scas jecxz xorl lock stos pop mov clc xor sbb lds jbe movl xor sti inc dec or push bound xchg aas jo push jns sub sbb sub aaa mov aad fiadd pop hlt xlat add popa shrb cld or dec test xor push sbb lret mov xchg movsb arpl xor out inc jne sub adc lahf in movsb test dec popf imul scas cmp push sub (bad) int3 subl or sbb xchg ds mov ja orl adc das mov mov sub or mov addr16 scas jo sub add cmc jb test leave push (bad) out cmp aas call pop xor cmpsl jb sub loopne,pn shll jnp or (bad) jecxz test jg cmpsl mov gs outsb es xor mov test inc or jge xor jae sub cmpsb sti xor lcall repz mov dec repnz jg lock cmpsl sub int out mov mov push xor xchg pop sub adc jecxz sub ret add lock cmp cmc test pop mov push test fwait sub lret orl das fwait adc and sbb jmp in jb mov pop imul int sub out sub push cmpsl and popf mov inc sbb mov scas out adc ljmp jmp loope mov repnz cmp push mov inc shr sbb sti pop sub out mov pop sbb cmp add jno shrl jae lret icebp push xchg jnp cmc inc mov sub mov xchg out mov mov xor inc leave xor adc xor in mov sub aaa sbb lcall mov pop pop add push and pop mov inc fildll push es mov xor out inc leave adc pop cmpsb insl and rcrb test test cmp sub rcrl xlat adc fincstp shl into pop bound xchg push out (bad) std sub cmpsl push sub mov inc call inc xchg int3 push push mov xlat mov pop nop mov fwait xchg loope dec pop sub lcall mov ljmp (bad) dec push mov call cmpsb int jl call cmp out daa enter call and fidivr mov leave in cmovno mov int3 xor cmp int or shr cmpsl sub hlt sub dec pushf cmp int mov insl add pop (bad) fistpll cmp daa popf xchg data16 and cmpsl and add push jp xorl arpl push lahf xchg in mov orb enter push mov (bad) shrb test mov pusha push cwtl loop xchg xor hlt les dec outsl sub add sbb cmpsb jge mov xchg adc outsb mov fldcw lret in xchg pop inc sub push out stc mov inc sahf sbb pop and jne and js scas lahf loop cmp scas sub aam pop xor fsubrs sbb jmp es lahf push and data16 xor insb divl push imul loope pop iret lahf push push jo in mov jmp xchg jbe shr or mov std das sub (bad) mov (bad) adc add adc fisttpll adc sbb int mov scas lret dec stc cmpsb insb leave jmp mov int inc stc cmp daa stc or mov xor fidivl cmp or add int aad jnp,pt daa adc test iret sahf into inc popf das sub les jne shrb cmpsb and add mov mov sbb out xchg add jp rcll push sub nop test jo ss pop fstps mov push fidivr add add aaa sbb fsub mov inc push cmc jns inc mov sti cs test sub push mov out inc mov arpl call arpl jbe jo dec scas push push or (bad) sub add jle lret and push inc mov pop (bad) jmp loop pop jno or rclb sub mov ficomp adc arpl mov mov xchg jbe sahf or push push jp cmpsl out bound mov cmp fimull cmp lahf (bad) and out int lods mov adc test jg push (bad) incb xor sub mov dec or and cltd lds enter loopne and aam jge aaa cs rorl ds sub xchg or negl sub lods fwait jecxz sbb ja icebp test loop aas or inc cltd sub cmpsb int3 xchg mov and cmp outsl es popa testl aad cmp dec dec mov or sbb sub fmull in inc fsts or cs mov add lods adc xor mov dec lds pop shll cs fnstsw lock mov stos adc and fildll sbb or mov inc and xchg or ret xchg sbb rclb xchg push sub add lahf (bad) cs xor shrb sub add inc fistp mov movsl idivl cs add push push cltd stos adc mov mov sahf (bad) repnz pop stos lcall mov push dec roll pop adc xor out fcmovbe jl inc sub (bad) or sbbl bound hlt dec add sub jb dec decl mov fs sub cmc jnp and adc sub and xchg push ljmp jmp or lods push (bad) out js iret mov push cmpsb inc cmp jnp out pop lcall sub fmulp test cld dec dec sbb push jbe sub pop aam push icebp xchg lcall sub outsl xchg rolb add cmp cltd sub dec dec jge lea arpl sbb int mov cs call add jno in aam sub push push cmpsb mov mov cs lret inc nop xchg push sbb out dec sub test outsl jp fwait sub dec fcomps push (bad) jo pop sub push int nop out push push sub imul std push cltd jae and fmulp xor dec jp push xchg cli fimull ds mov mov push jne (bad) dec pushf divl pop xchg in cmpsl subl fcompl stc pop fdivrs daa cmp dec aaa adc call pop and call lahf leave mov add mov dec leave sbb ficom dec adc icebp and insl (bad) push push adc repnz test sbb or imul loop adc sub pusha insl movsb cltd ret and bound popf int dec push loopne insb stos mov jg ljmp pushl clts inc mov sbb push je es add sbb enter insb sub loop out push out pusha jg add jnp sub aaa cmp push dec jo xor mov sub mov sub sub and ret (bad) jb push sub cs pushf fstpl inc lock shrl addr16 push mov repnz repz jg lcall cmp mov bound push fstpl rolb or gs sub std aam loopne,pt jg add push ja mov xor hlt or movsl out daa and push leave inc xchg sub sub jbe xor cs fisubr jg in adc and (bad) stc and aad mov jge test push cltd mov pop lahf (bad) cs cmp mov cmpsl pop jl cmp sub test incl or jb lahf ljmp movsl lahf aad imul stc xor inc cmp out leave cld mov inc mov (bad) cmp imull xor xchg aaa arpl out cmp push and test sub rorb leave sbb mov movsb mov cmpsb ss (bad) mov mov popa mov pop cwtl pop cmc leave fidivrl out mov xchg pop std stc orb lods idivb stc (bad) mov dec push jnp or cltd adc cwtl out leave jmp fstpl pop jle (bad) enter jno and mov mov les lods (bad) sbb or imul sbb (bad) cmp pop adc fildl xor (bad) clc ds rolb mov push (bad) dec and push dec inc jae jp cmpsl outsl sub (bad) pushf lcall int mov dec daa (bad) mov pop mov (bad) outsb pop aad aaa imulb xchg sti sub out xchg shll jnp pop cwtl in cmp lods js add outsb in xchg cmp les push addr16 ljmp mov mov fwait or xor sub mov xor fwait mov sub pmaxub test or sub cmp or mov mov sub loopne cvtps2pi cmp pusha in cs mov push jl sub mov test dec daa (bad) loopne test dec sub stc fldl mov inc and sub out in lcall clc int xchg sub sbb push cmp (bad) ss push scas out jb mov daa mov imul add sub das cltd cmc fstps jae lods inc jge adc sub mov or push jbe mov mov (bad) or in lret test fsub xor cwtl fsubs jecxz pop test aas inc inc add lret fcmovu out pop push dec push loopne sahf pop test lods cmc adc sbb xchg (bad) sarl sub outsl repnz adc out mov jmp sub jno popa ljmp hlt inc pop inc add mov sub ss xor xchg gs leave jbe xchg sub hlt mov (bad) out repz sub iret sub (bad) cmp mov ss sarb push shrl pop dec addl jno aam mov jg or add daa xchg push call lcall (bad) fnop and in fldcw xor pop mov shlb xchg add je cmp fsubrs mov std shrb push je mov fstps add dec mov rcrl mov cs pop scas je call inc or (bad) ja sub mov or or add imul sub (bad) test pop frstor cs movsb add aad stc lcall add sahf pop dec clc addr16 mov push (bad) cmp subl mov add pop push pusha lret or inc clc push int3 jl mov lcall cmpsb jns dec pop icebp fistpl add test sub dec repnz push adc insb lea inc push adc mov mov sbb jl clc cs cs sbb or jle ljmp cmp neg mov xchg push jno in mov cmp cmc sub sbb je sub dec cli leave and sbb pop sbb sub ja xorl movsb mov ficompl sbb jg ret sbb mov push sub push jnp das imul in pop rolb daa xlat mov inc cmp (bad) sub add sub in sbb in aas lock mov pop ret sbb (bad) and outsl nop sub cmp push (bad) push push jnp push outsb pop bound lock pushl mov mov jno inc sbb out sahf repnz pop sub jg,pn jns sub push jl rorl xchg jge test xchg mov pushf dec sub mov jmp icebp jbe data16 jno mov fistpl out pop mov fwait enter cmpsl xlat cmp xchg cmp jg test call or outsb addr16 dec mov test test loopne jbe xchg cmp stos add and xor arpl lds sbb jbe pop lcall lret (bad) out pop cmpsb pop pop pusha addr16 popl leave bound imul int3 adc mov mov test or dec or jb sub xor loop pop inc mov out cltd or xchg jbe rcr or shrb (bad) hlt add mov sti inc or mov cs cmp pop std ret mov int xchg rcrb xor mov adc out in pushf lock ss gs popf mov xor sahf daa pop push push sub or imul cltd sub add jle data16 out cmp decb out rclb pop je jge shl add inc jg and jnp pop out dec push push adc scas (bad) mov xchg inc mov imul pop fcoms push cmpsb insl popa sbb lods loopne in es jns sahf daa les add insb mov or shrl and dec mov in mov sbb sbb mov mov orb (bad) clc jge (bad) insl sub das push mov jo loopne or dec scas push addr16 out insb pop int nop sti sbb imul ret jo push lods push or ret xchg sub pop jg push sub sub dec jge imul fcomps jmp cmp jb inc mul sub lds mov out out sti sub inc xchg ljmp insb roll jnp sub and aas jns sub sbb xor jae add fnsave and pop ret xchg xor jecxz arpl test jp push xchg outsl sub push cltd call mov scas sub mov sub add cltd push out repz lret mov rorl xchg ljmp imul and repnz mov pop pop sub sbb xchg mov lea mov fwait mov pushf sub inc test pop and repz (bad) mov movsl test jns popf xor push inc pushf mov sub das sbb push xor in fwait lods lods jne sub movsl call test jmp xchg and fsts pop sbb hlt push inc movsb and pop lahf pop sarb mov jb ret or cwtl jge push test mov add pushf sub push fs add fisubr je pop mov cmp pushf icebp mov sub inc or cli fldt or data16 inc out pop and nop dec adcb sub (bad) xor in or push stos in sbb add mov pop mov xchg cmp imul xor ss aam sub int dec mov cmpsl jl jae cmpsl or movsb call xchg mov (bad) push pop frstor loop or xor stos dec cmp (bad) icebp (bad) cmp int xchg loopne pushf xchg pop aas dec ds push mov subl cmpl (bad) sti aad push imul jns mov aad push rcr popa ffree xcrypt-cbc cmpsl aam int adc mov test xor movsl (bad) sub push add adc cld xor ljmp and sarb or push adc shl (bad) sub lahf out fisubrl mov mov pop dec icebp add pop xorl mov mov (bad) fcompl dec dec sti push and adc pop jmp sub outsb (bad) adc jo imul dec cmc jnp test loope or lahf xlat out fildll hlt mov mov aaa decb lcall cwtl (bad) ja adc mov push sub (bad) cmpsb push psrlw (bad) jge outsl or inc aad test adc push pop dec inc int or outsl mov lock fs mov (bad) xor mov xchg push scas dec jmp lods int add mov xor fimul pop dec pushaw out jge adc push in mov pop adc dec outsl cmpsl jno inc neg jg out out in fiadd ss orl cmp pop leave push int3 pop inc (bad) xchg mov test dec loope mov inc je mov sbb dec xchg aad mov xchg dec mov jo mov test stos jnp push mov dec dec shrl mov jo push xor insb xor mov xchg sub fs movsl or aam int popf out into sbb nop movsb outsl imul cs push fwait sub pop nop jle dec pusha jb lret loopne dec fldl out mov push fucom stos and or mov dec jecxz popf inc test xchg jns popl popf dec mov mov and (bad) neg cmp test pop int3 inc xchg dec aas inc jb add push mov sub adc and es dec xor aaa int push push roll pop xchg leave jb (bad) enter test xchg xor jo xchg cmp rclb cmpb cld jg adc test lretw push mov negl (bad) outsb popa rorl cmp xorl sub xchg mov jmp fcompl aam movsl mov dec lock ds jmp or mov pop push stos xor out cmpsb mov xor daa inc pushf lods sub fs daa xor xchg inc jg test fs pop insb jno leave sub sub xchg add sub push rep outsl cs add adc jns adc out ret cwtl dec ss loop xchg push sub rcrl push cmp loope cld push xor xor sub ljmp icebp or in imul dec loop sbb cmp ja shlb rcr sub add dec sub (bad) or sub dec and sub in dec or test adc rorb mov pop ds notl jmp cld int into pop repnz inc test adc xchg push sahf cmp or adc push inc jae sub adc sub insl test (bad) sbb sub cmp or imul enter call fcoms dec inc test push cmp je movsl dec dec enter dec out (bad) adc notb mov fisubr arpl sub sub mov data16 pop shlb ret (bad) add cmp adc push push (bad) inc (bad) lods and sahf popf inc outsl cli cmpsl (bad) out pop mov mov (bad) shll out xchg inc and cmp or loopne jp push add int3 pop imull nop mov imul lock pop mov inc inc or push and (bad) sub jno adc leave test leave or pop cld fcmovnb and int ja jl in out dec xchg leave in sbb fwait cwtl cmp cmp aam mov daa cli fchs dec dec in xchg xchg jl fmul inc sub dec push or aad nop cmpsb or push aam pop cmpsl pop pop leave fiadd sub mov sbb ja xor aaa sub pop dec fildll xchg sbb push sbbl mov int3 pushl lock push mov xor fcoml shrb pop ja xor xchg (bad) mov inc test fdivrl or aas sub (bad) or daa icebp mov shrb pop pop lea popf (bad) lock dec pop sub idivl jae add shll push lds repnz add push push xchg sub nop mov sub ds in push add push add jmp in mov cld fisubrl cmp inc add or nop jb sbb push xor jno mov mov sbb mov and mov addr16 cmpsb int repz xchg adc addb inc or or xor or into sub mov cmp and or pushf mov adc add or sub mov mov push and (bad) test jae xchg mov mov jle ds lret (bad) mov adc push enter jmp xor clc sub cli iret xor dec rolb fucomi mov jecxz sub add stc and push xor loop adc lods test rcrl jmp dec sti push push in jp lods dec xor add adc cs mov es or ret jmp push inc mov addr16 pop fildll fwait pop inc (bad) xchg lcall les sub out adc scas lcall (bad) sbb cmp insb (bad) jne add inc cli push rcl js jmp iret test pop sub pushf cmc xchg sbb icebp sahf cmp pop daa sbb dec xchg push rcrb out in sub dec xor inc push mov mov shr push mov sub into dec bound dec or sbb jle pop insl jb mov and daa stos xlat das adc xor mov shll out movsl and leave or movsb jp inc inc shrl inc jb scas dec out cmp lods push xlat stos sub mov int3 adc dec lods test cmp js into mov adc mov add cwtl xchg les jbe inc sub leavew aam mov sub (bad) sub sbb test mov aaa sub stc dec push sub imul or (bad) pop movsl ds sarb xchg ss int mov sub and movsl cs call jns lret inc inc je dec inc sub inc ds lods dec add mov in imul cmp cltd cwtl ss cmp sub daa or adc xchg daa cwtl xor sub inc pop push arpl jl ss pop int aaa add fdivl fucom stc lahf sbb decl and leave lcall mov add mov cmpsl icebp ret mov jl sti xor fcomp repz pop lcall sub ja movb add pop js dec aas dec push add fldl2t cwtl pop pop cld enterw push iret clc mov mov push mov hlt popf (bad) ret int3 bnd push push xor push add sub fnstcw adc pop je js call (bad) and cmp sub repnz jecxz sub push ds sub scas sbb sbb jmp xor jns or das sub aaa lret shlb (bad) hlt pop inc fwait lods inc dec mov test and inc sbb pusha cli sub enter loop mov push jb sub mov inc dec (bad) cmp out pop (bad) mov jl xchg inc xor sub mov in sbb cmp aad jae jp push xchg test xor imul mov or addr16 and dec or cmp and scas jmp cmpsl (bad) inc cmpsb mov lods outsl pop mov aam cmp sahf cs xchg dec sub jne or ret sub daa insl add pop fwait das out dec sbb out addr16 jb sbb push jbe sar dec xor adc (bad) jmp or out add sbb push stos pushf sub das xchg and sub push repnz aas xchg sub popf stc iret mov and lods stos dec call push sub shrl mov test jmp adc leave xor pop dec imul je inc (bad) mov decb sbb or sub dec lock pop js fiaddl mov add jno pusha outsb ss ds push nop outsl rclb xchg stc shrb dec sub adc loopne cs jo imul sub pop and and sbb jp add sbb push inc cmpsl movsl loop jb jne shrb and and mov adc sub inc sub dec sbb sahf inc mov punpckhbw cmp and mov subl std xchg xchg fdivr sbb cmp mov sub xchg cmp (bad) in cs lcall loop xor cmp xchg pop test imull cltd cmpsl cmp adc inc mov mov (bad) negl fisttp mov lds sahf cmpsl out cmp jns in mov adc cmp (bad) mov add cmp testb cli sub dec pop pop adc les mov cmp inc das leave dec push mov (bad) push fwait push ret or repnz test (bad) cmpsb pop popa les mov (bad) es push pushf (bad) sub fdivrp sub jl or rcl pop xor mov or push mov loop mov and out adc mov shrl dec dec (bad) xchg mov cs jns push mov les xor adc lret push daa xchg jle movsl outsb popa mov sti push fdivrs mov dec cltd push (bad) jle scas test cmc sub xchg mov rolb clc shlb jge out add adc ja cmpsl popa outsb pop fwait sbb inc mov push cs push imul movb xor jmp and jmp sub inc test mov mov sub cmp test jbe sub fdiv dec andl popf cmp mov testb ss faddl stc das dec cmp int cmp jnp sbb lret sarb and and daa into xchg adc fucomi rolb das xor mov mov sub mov loope inc int fiadd sbb inc pop dec (bad) (bad) bound outsl je ljmp test addr16 jecxz pop ret repz push sub cmp sar out mov pop jge xor and out fwait imulb sub push mov aam sub lret mov xor xor mov xchg inc (bad) int and cwtl das test cmc push pop mov and mov push mov test out insl pop pop outsl cmpsl and nop cmp popw mov push in mov push in bnd negb ficoml pushf adc ret fwait mov pop push adc dec cmp js or cs add sub out movsb popaw adc mov mov and jge xchg inc leave sbb inc push adc mulb jbe dec dec adc daa ret std xchg arpl dec ja sub cmp lds push xchg jbe iret sub inc pop movl negl dec ss das push sti xchg sub add loopne std push sub (bad) test push shr adc push add cwtl mov pushf std call inc add cmp xlat cmp xchg mov shll mov bound imul mov adc sub xchg lock push ficompl mov notl out cs or or mov test pop xor and cmpsl pushf iret insb pop mov sub aad movl (bad) test inc sub pop das call popf lods add push pop pop pop out (bad) sub and imul and sti fist dec movsb sub sub test (bad) xchg cmpsl movw sub xchg mov imul aas mov pushf cmp scas add jb popa call mov pop cmpsl aas mov jecxz cmp push repnz jbe iret jmp decb cltd (bad) push dec std sub movsl and jno (bad) jl sub add sub notb aas xchg decb (bad) inc push stos push adc out cmp jno sbb cwtl add lods test push xlat push push sub dec sbb ja lret add in xor push mov lods cmpsb hlt ds mov cmp bound loope mov cld iret sub and mov adc fildll dec (bad) jecxz insb adc adc add sbb lds sbb std push push push into js fdivrs fwait sub and imul xor add stos adcb mov push dec fsubl inc bound mov xor mov sti mov sbb mov loopne jbe push cmc sbb push (bad) mov push jmp andl sbb xor aaa mov (bad) pop push leave jge jg out out (bad) adc insb mov popl jg test mov sbb (bad) popa jo and stos cmp (bad) dec sub test cmp or sub enter enter add je (bad) (bad) jno das push mov jo popf sub dec popa pop loopne ss jp out cmp aas xor int stos shll and mov jne addr16 push mov repz cmp adc out (bad) mov and push jae sub dec xor sti sub rcll sar adc mov and dec call into xor push (bad) sti int adcb movsb scas xchg loop dec inc cmpsb daa jmp movsb out movsl out cmp mov test shrl cmpsl and cmpsb leave mov scas push mov pop sub sub sbb jl jp adc pop pushf jmp cwtl add stc lods rclb roll dec inc in add inc sub ds js shlb sub pop int3 shrl (bad) and dec inc test lret ss add mov jbe add mov push xchg sub inc mov das cld leave cs (bad) loope and pop xchg out mov cs mov push lret ret cs push dec adc sub out fldenv imul dec pop jle sub fiadd sub icebp popa insl jb (bad) sub mov out and mov push jne pop jb sbb aaa leave push fwait lock push adc mov sub cmp sub scas add cmp sub loop lahf movsb sub mov out sub mov test sub pushf test add cs cmp pop sub dec ss sbb sub clc out lock pop pop jno clc cmc inc sub je dec stc mov arpl lea dec imull into jno sbb int3 loope jp inc mov leave dec les mov inc hlt sbb add dec shr adc cmpsl cld mov sub mov xchg mov pop fsub xchg jp rorb data16 aad cmc dec daa sbbb rorb adc insb fisubr movsl pop mov inc add inc leave es xor sub push stos xor gs adc inc sub pop aam sub push jns jne cmp xchg cmp daa and das sub nop/reserved rcrl xor outsb das cmp std leave call sbb popf fadd (bad) or loopne mov mov sub push je (bad) xchg scas mov iret adc fldl2t jae xlat (bad) sbb jb std sub bound xor push test mov out (bad) arpl sahf sub fcomp lcall xor xchg xor sub ja push jbe clc jl cli xchg xchg daa ds movsb daa out pop mov call mov pop push pop cmpsl mov mov adc (bad) ss jne leave mov lods sbb scas sub (bad) sub (bad) leave stc loope daa cmpsl push xor scas push in fbld cmp outsl pop and mov jne lret popa push xchg movsb in ficomp sub fldenv sub stc dec test ljmp shrb xor push mov cmp imul fidivl adc xorl sub or cld xchg mov aaa cmpsl mov mov enter mov mov jo loopne xchg roll adc add xor inc sub leave shrl jle loopne in sub ds mov addr16 cmpsl push stos movsl pop sub dec inc jge inc imul adc adc cli stos arpl call aam (bad) out dec shrl dec movsb sub addl ficoml sub pusha sti add push pop sub push scas sub mov sbb ret mov adc xchg scas or test jmp sti iret aam jbe dec sahf mov movsl out adc jle sbb incl in mov loop mov scas or sub push xor (bad) lret jp cmpsb movsb sub lcall gs pop stc jns add scas sbb xor cs sub sahf sub sub or pusha dec jle sub hlt stc ds sub mov das xor fsts out repnz or ds sbb fptan cmp sub icebp pop cli cmp push stc xchg js and mov pop jmp push into inc mov (bad) movsl imul sub pusha sub aam neg into and mov lret daa jp jno ret aas or mov mov pop push jnp (bad) fwait pop mov scas mov or lahf sbb ret mulb sub mov mov add sub sub cmpsl mov sub push (bad) cmc out dec mov inc pop inc in cmp cmpsl leave loopne es jmp jl imul outsl bound mov repz inc sub daa jl push decb lea jns push push leave cld push loop hlt ret stos ret popa out pushf popf sub mov scas pop cwtl dec pop sub pop cmpsl int mov ja mov ret ret mov out jb pop xchg and cmp inc mov inc dec mov (bad) mov xchg ds push fisttp mov dec arpl fbstp bound rorl push and inc dec adc cmp repnz loop outsl loope in mov inc popa mov into out push jbe mov push mov xor sub icebp pop sub pop jnp leave clc mov mov cmpsl bound inc fs push sbb dec inc leave loop int jge push ret push data16 xor jo and ljmp ret std stos xchg fnstenv gs call dec pusha mov fmull ds pop dec adc sbb popa xor pop test push insl mov lods mov test jb lods int add lods jb in jp mov bound movsb cs ljmp aas ret jo inc enter pop push adc inc loop movsb or sbb into xchg cwtl mov dec push out (bad) xor add or inc sub cmpsl mov sub addl or enter adc xor mov dec sub push sub in aas hlt sub adc (bad) or push movsb adc fs test pop mov nop cmp aaa mov and pop jbe (bad) sbb scas sbb inc push pop leave stc pop push add fsubrs decb sbb and pusha fs test cmp push jle fist xor int3 jo std sub inc mov dec sub repz inc sub (bad) movsl call cmp jp sbb pop shr test xor add pop lahf sub adc jb icebp fidivrl jnp jae xchg cmp push sub jbe scas sub sbb mov (bad) (bad) into sub ds mov loop (bad) fdivl icebp mov cmp outsb sub loopne xchg cmpl popf inc xlat adc jne fldt push cmc pushf mov lds xchg prefetch scas out and jnp jae jecxz sub jge adc inc fdivp sub add adc enter dec or push ficompl cmc fadds mov mov pop and xor lods movsl sub mov xchg xlat (bad) cmp and inc ss test jle or fsubp sub pusha mov sub repz add sbb dec sarb and mov sbb test lods scas mov lahf (bad) leave mov sbb or adc lods dec add stc push push mov imul sbb sti adc xchg (bad) xor arpl test int3 sub pop pop pop push lock ja xchg push shrl xlat lahf cmp inc in lods push push mov sub fisubrl xchg mov or fdivl adc out jl scas cs jg mov or dec movsb scas and push sub fstpl mov out rorb movsl movsb inc add call and or enter test les dec imull fidivr cli into cmp add xor aaa xchg rcrl sub aad and ja sub jl (bad) cmp test pop insb mov jmp mov sub addb decb cmpsb pop fsubrl sbb outsb in mov sub loopne insb xchg lahf enter push and cmpsl lcall (bad) push unpcklps dec pop mov icebp test sbb dec jl push cmpsl loope jmp sbb mov inc fildll inc in mov mov mov sub jae xlat pop sti cld sub (bad) cmc jle (bad) stos sub xor orb sub aad mov cmp nop mov cmpsb bound inc bound test test inc daa gs das stc lock stos cld sub sub pop lcall push jb imul inc (bad) mov mov sub cld push push push xor aaa je (bad) mov jge bound gs les mov jns cmp imull pop outsb add data16 (bad) xlat insl out sub sbb mov jmp js cli fucomi or mov out lods ja repz pop pop stos mov sahf sub aas arpl xchg jge scas cmp jno rorb das mov adc cli sbb test sub pusha jo sub xchg adc rcl popf orl out fiadd aaa (bad) (bad) add mov stos cmpsb mov sub push jp sub ss ljmp inc mov jb (bad) push sub add cltd fldenv sub push pop imul xchg mov or mov es lods pop pop imul mov jnp loop sub sub xchg xor add pop out inc fcomps cltd das shlb sub mov mov aas xchg push jmp mov movsb outsb mov enter jl ret push test mov jne push (bad) jle,pt mov and dec ja test les mov pushf std shrb sbb mov adc lahf sub mov pop das mov push mov sbb (bad) mov xchg ss stos ss mov lahf xor outsl xchg aad jnp cmp cmpsl leave nop add mov jmp sbb pop test jg js sub jnp dec pushf dec xlat insl out adc or int arpl mov ret inc lcall pop push leave lea jne xor inc sub hlt pop cmc stos (bad) dec aam into sbbb push addr16 sub dec popf jo dec and jo pop addb jg jmp push sub cmpl scas lcall call orb adc jbe sub cli sub jg fldcw adc push sub (bad) dec into stc mov sbb jne xchg sbb mov hlt dec adc sub adc dec push pop bound mov cltd int3 iret (bad) in repz hlt sub and enter adc lret add xchg jg add sub jo mov in mov dec orl sub movsl (bad) push jnp sub data16 (bad) sbb inc mov sub adc iret pop push aam sub aaa and pop mov mov ficoml sbb and sub andps cs out mov push or xchg int or icebp cs mov lret jns daa add push cs jo and call enter (bad) push jle imul pop (bad) loopne sahf push hlt repz ds movsl mov dec leave jns dec stos mov inc mov loopne cmpsl roll (bad) and dec cmp sub jbe hlt xor adc mov hlt daa (bad) lahf dec nop adc pop xor mov xlat cld jl or add shrl xor mov andl int sbb rclb jmp mov lods xorb adc or cmpsb xor jbe xor ficomp loope imul sti cwtl fist sbb (bad) int adc and popf loopne pop adc adc push ds cmp sub fwait popf insl rol (bad) dec andl xorl mov mov adc pop movsb jg jae sub scas rcrl and (bad) lahf fstl pop push lea shl adc int into idivb push addl ror addr16 enter push outsl push pop cmpb xlat push sarl decb pushf or repz sub inc push pop daa and fistl sub pop cmc dec add lods movsb cwtl jge cld dec lock or inc test fistpll and mov sub push push sub or push scas cmp sub js pop adc xchg sub (bad) mov push sub popa outsb lock iret mov pop arpl insl jns sub inc (bad) mov jns out in fild sub fnstenv adc fstpl lods jecxz and mov cltd call dec sub cmp cmpsl mov push movsb lret sti aaa int sbb add xor and jae mov leave fdivl push push dec push nop dec sti icebp repz ds lods lret dec aam in inc cmc xchg inc mov sub repnz lahf xchg xor faddl (bad) lea jmp mov jb dec es push sti mov daa adc popa lahf cmpsb push addr16 adc mov ds mov dec aad jnp int xchg shrl mov loopne pop jno pop jns aaa fstp addr16 and add sbb sbbl pop and fadd mov imul dec (bad) leave stos xchg cmp jle aam jne mov enter arpl shl je (bad) mov repz scas rorl cmp push jg les jns lock fsub xchg leave mov mov daa xchg inc push mov loope ret dec sub dec dec jge cmp or mov imul inc insl daa pop jnp fsubrs sti in jo sub loopne push sub sub mov leave push fnsave push pop dec shrb scas pop sub jno xor sub aaa jb jbe mov pop in ss dec outsl dec push nop pop (bad) or push es test fcomp cs jnp cmp fildll gs das aaa sti lahf stos (bad) cwtl andl js mov jl loop test push in out cmpsl and inc mov int (bad) push imul xchg cwtl aad cmp and (bad) int cld or add test cmp aam pop inc fdivrp dec int pop and stos cmp sub (bad) cmp inc leave mov dec scas dec inc and xor dec (bad) sub addr16 jne cmp mov idiv push cmp jg and jecxz in mov stc inc xchg jbe jl adc sub mov push cmpsl adc xchg in bound xlat mov mov add loop cs addr16 fcom loop jns and mov leave pop push fcoms and stc data16 lea pop daa cs cwtl push mov mov or fwait aas insl mov fwait xchg dec dec mov mov sub add std mov push jp loopne jo push inc push lahf sarb es or jb rcrl push mov out sub outsl sarl scas lcall jbe test push dec add inc dec jns mov xchg lods add push jo inc push sub daa movsl xor adc cmp cmc xlat add cmp mov fsubl into lret pop movb mov repnz mov cld out test leave sub mov roll mov mov jbe lods adc mov push xor cmp push cld jmp inc lret cmp mov dec fsubrl pop cmpsb int lahf test (bad) rorb inc mov popa adc jl sub sub lods push mov sub call mov enter pop imul add or inc inc mov arpl pop scas cltd xchg xor push mov out test jp pop (bad) out xchg test loopne pop icebp sub sub movsl mov sub sub sub fwait mov ret call mov push std loope pop adc add pop cmp loopne,pt jle lods popf fucom sub cs sahf mov jo add dec popa cmp ja cmpsl jns jbe mov stc lcall push (bad) (bad) inc or roll (bad) xchg jne addr16 mov pop test int3 mov push out mov mov jb mov sbb loopne mov jle cmp xchg cmp sub sahf mov (bad) adc pop cmp pop lods mov (bad) in movsl and int xor xor sub sarb (bad) sub test lock loope cmp sub pop rcrb ja sub negb mov cs pop jle push jns jns loop jmp mov push insl jns inc hlt push xchg ljmp movsb sub nop dec test jno js insb inc les sub push stos ss cmp sub pop pop aaa call hlt push movsl mov in pop jp dec cmpsl xlat nop push cmpsb mov (bad) sub movsb mov loopne dec add sub mov neg mov push bound mov movsl push repnz xor ds cmp add test gs dec jl fisubrl popf adc out push idiv and lret push adc lock pop dec faddl js inc mov push loop mov inc sub sub inc xchg addl mov ss push mov repz clc mov inc push rorb imul arpl into sub loop sub mov lock jbe test xchg outsb imul fwait aas (bad) sub jmp cmpsl jbe and js shrb (bad) mov test leave or add adc dec daa aad daa aam (bad) dec jge shrl inc lds sbb aad sub in bound dec sbb cmp xor xorl loop cmpsl je test push fisubl dec sub push sub pop pop inc testl dec in jecxz je cmp jb inc cld adc mov js in mov add mov inc cs rclb push pop lods push in idivl (bad) push push pop jmp cs cmp stos pop fisub test sbb sar cmp pusha ljmp into push ret jnp ljmp sub pop sub int and out pop and mov aam sub sub lock jno jbe and jae adc push sub cs repnz dec (bad) dec pop push cmpsl clc dec add mov xchg sub imul iret add or push movsl add mov dec inc or ret sub gs or shrl cmp loop jnp adc xchg cld xchg cld xor into mov stc and inc (bad) mov add popf mov bound sub xor pop sub or or (bad) call jl sbb test cmpsl lock lock fsubr cmp and mov mov cwtl xlat repz pop push aad cs out xchg idivb iret aam or leave mov (bad) in inc dec sub mov jg jo cs rol or or mov (bad) xchg mov inc adc jo es (bad) xor in sbb pop or cli add sbb sbb fmuls push repnz push aam daa test push sub xchg subb sbb add insb add and je xchg jmp mov cmp sub add ds cmp cwtl ss cld test lods sbb pop lea sub fnop dec cmp out fidivrl jo std dec push imul stos cld mov inc test leave lds mov sub and (bad) xor (bad) icebp push inc aaa leave fs push adc or inc cmp inc sub mov jnp pop pop dec bswap test sub scas pop xchg jecxz adc leave jb adc sti aaa loopne and (bad) jmp mov daa and cs cmp repz (bad) push mov in repz test xor sub lahf hlt inc int data16 out lock insb repnz addr16 adc jle jecxz lret jmp fnop call cmpsl jnp leave sbb push mov jbe dec stos sbb (bad) jo mov pop dec adc repz jmp ret aam sbbl (bad) adc pop cs xchg arpl (bad) ficompl cmpsb cltd lcall push std xor xor or sbbb dec iret and xchg xchg outsl xchg push cmp mov sub out (bad) xor or jb fisub ret aaa js jmp or cwtl (bad) push push cmc sub data16 jmp sub cmp gs es sub (bad) cmp in add js sub sbb sahf lods in mov out es daa sub stc push pop fs xor sbb jbe ds scas sbb js fcoml xor inc sahf sub pop jp jp,pn jle sbb xchg cwtl add in jae stc add call bound or (bad) lods push dec out mov orl aam and sahf (bad) mov popa sub dec add repz imul cmp or daa lcall loope cs adc push jmp ficompl js cmpsb mov mov insw and out push dec push cs leave lcall sub push cmc push jp std leave fdivs out aaa or fwait xchg sbb repz mov sub sub ret xlat (bad) lods or js out mov lcall mov xchg sbb sahf sub and sbb sti sub mov sub rcrb leave popf pop mov inc mov sahf add test jb loop mov idiv inc or mov jb adc dec inc sub xchg (bad) push enter divb lock divl int3 shrb jo push lcall imull or pusha insl push mov jne inc or xchg daa inc pushf sub and (bad) xchg ret xchg rorb ret jge and (bad) sbbl ds loope sahf cmp or out repz sub xor push lret fcomi pushf stos and push fwait lds jcxz sti mov ret sbb pusha mov imul movsb jno mov add inc or nop mov jo xchg add mov dec push jno add mov cli mov dec bound int3 xor test outsb sub jmp sub or xchg mov cmp push mov loop mov jg cmp inc jle in sbb push test cmp push inc insl (bad) dec dec pop mov sbb test call sub jne ss sbb sarl or mov add arpl push add dec loop lods jo scas sub ja sub lahf and js sub out mov sub adc sti mov mov or call aaa xchg jmp inc mov out jae sub pop in cmp and add sub aas dec insl pusha mov and roll movsb loopne test adc sub (bad) xchg xor ss push arpl hlt lea out (bad) out xor les sub sub arpl rclb or (bad) inc or test jae dec dec out ljmp xor jge cmp ljmp loope and in mov daa js push cmp into out mov push idiv imul movb es pusha sbb xlat push clc out or (bad) sub daa fdivrs jnp cmp jae repz and lods jb mov sub icebp jl aaa lahf adc sbb (bad) cmc je int3 push mov xchg loopne fcomps lods cmpsl inc nop mov dec ret sub push in sub adc and stos mov mov sub fsts ds lret les xor pop test sbb and fild dec xor xchg mov (bad) test xor jns cli sbb (bad) xor push push mov xchg cmpsb fptan test jge out in mov adc aam sbb jge jno fsubs lods sahf js dec mov (bad) inc rclb and ret stos sub (bad) cmc nop cmpl pop pop or leave jle push pop stos mov pop add push dec mov pop out dec or sub loope,pt insl outsb stc pop cmp ja jbe mov movsb mov cs imul cwtl xor jbe lahf sub inc dec xor dec sbb or enter cmpsl ret mov pop sbb sub (bad) dec mov pushf mov dec push jno daa mov popa and fidivl out dec int jl push cltd push (bad) jecxz and loop in jp or cmpsb jae out es test adc fisubr inc mov mov adc jmp mov test imul scas dec mov and jnp scas sub and or xor pop mov das sub out loop jecxz mov rcrb add addb jbe pop aam sbb xchg ss test push daa int jne test pop push inc outsl out dec lahf test es in sub mov lods cld mov sub push jns mov test and subl ss aam leave shrl inc jp scas xchg call mov adc aaa inc sub (bad) (bad) incb cltd xor (bad) xchg pop les sarb sti jno pop ja (bad) sub dec jmp (bad) mov sub sbb pop (bad) dec pop xor cmp add cmp mov cmp and imul fneni(8087 gs sub bound dec pushl sub xchg outsl loop fildll xor js jg sub mov push mov out sub (bad) lret sbb fdivr dec mov xchg sub fucomip ds stos and sub scas faddl cmpsl cmpsl pop aad sub xchg adc push push xlat sub lret cltd pop jne sub loop outsl or sub xchg dec mov sub movsl mov xchg push popa sub inc push xchg add fstpl jae push lock add sub imul ljmp sbb outsb cmp push inc lcall ret stos sbb cltd cmp mov lods mull xor or dec mov sub mov xchg adc add sub xor mov lcall daa or in sar sbb push xchg lret call mov add int3 (bad) jb pop stos sub nop mov cmp cmp imul mov mov xor pop jmp push cmpsl cmpsl adc cmp and shrl inc cwtl mov mov loop dec scas lcall shlb clc std push mov je sub decl bnd (bad) sub mov jbe in xchg loope pop loopne mov pop mov jbe and in dec (bad) ja nop pop sub scas (bad) je pop in pop ret or pop ret mov fistpll inc lods es insb xor fcomps push pop pop jg adc sub test cs push pop mov incb push push adc cwtl jns mov loopne sbb add adc pop fs fcoml mov or jl lret xorl sub sbb lret ret sub sbb adc cmpsb sbb mov ja mov inc push xor mov sub push out jmp sub cmp lret xlat fistpll mov add cmp jno mov jmp int jns mov xchg or jns mov push mov pop sub mov ret outsb daa out mov loop lahf cld (bad) into sub lea fistp inc sarl test stos xchg scas mov out push (bad) jne imul and mov add xchg int xchg ljmp jno stos addr16 or loop loope adc fnstsw out aam pop push mov mov rcr fiaddl mov or xlat jae int3 jno jbe add out leave pushw sub or sbb mov (bad) mov pop push inc push icebp inc jno xor pop dec test cmp rcll pop sbb pop int jnp stc push test inc xchg (bad) sub inc jnp dec jg sub icebp fiaddl xor sbb jbe test (bad) sub and cs push inc icebp es or sub mull jnp enter lods sub shrl jge mov mov and (bad) mov sub mov sbb xchg imul aad push pop in insb sub xor mov dec pusha jge xchg or cmp (bad) xor enter and fdivl test gs sub or mov into testl sbb cs imul jnp sbb (bad) shl lock cmpsb sub and jnp (bad) jb rclb sub iret leave idivb int lea inc test popa sar rclb jmp popa dec fistl push idivl xchg into sub cmpsl (bad) pop in mov nop sub insb int out jno xor add push (bad) inc dec mov add push dec push sbb cli pop cmp iret jnp jmp push or aas sub ljmp es inc in mov sub add jo add (bad) mov sub mov add sbb mov aam fdivrl fildll in scas mov sub add sbb mov inc pop push pop movsb (bad) je xchg and pusha ja pop jecxz mov cs push (bad) xlat (bad) aad mov (bad) jl sub sub pop add mov mov sub push mov scas test dec inc or push shll inc sub sbb clc jmp sub cmp les pop and xchg sub or sub xor rcll mov push mov pop push bound pop stos fstpl cs mov imul sub loopne cli push imul shlb rclb fldt jp popa mov aas lahf test std pop xchg sub mov rcrl sub mov clc sti jmp icebp add cmpsb push cmpsl mov pop jmp es push lcall ljmp dec mov sub pop or sub and adc pushf xor pop sub jns jmp mov sub inc cmp xor mov and sub ret push imulb rcrl lods mov sub pop push cmp add mov test dec jle sub sub addl sub les rcll test addr16 bound cs sub cmp stos and cs xor push jg pushf out imulb mov sub mov sub add push loop dec jg sub (bad) push ja sub fisttp clc mov sub pop popa adc jle shll push jns cmp jecxz and xchg xchg sbb xchg inc add or mov rcll pop loop mov sub or jnp add sub call or xchg loop sbb sbb adc cld dec push jmp loope shrl add dec jnp mov pop mov test (bad) lahf sub xor jae add mov xor rcr lock jmp das pushf (bad) mov xchg adc jp call imul pop xchg adc sbb in jne xor adc sub sub mov out jle in jno loopne (bad) (bad) jo add dec xchg jb dec movsb xor std or leave pop lods shrl stc push inc push or add push call lahf xchg daa push cmpsl jae push add sar fisubl mov xor test pop int jge dec inc xor js daa push imul push idivb loopne nop rcrb sub add mov xor jl or cltd fldt inc push lea pop jl jl push (bad) pop (bad) cwtl pushf fwait xchg fucomi mov add or (bad) push push cmpsl addr16 loop div sub sar (bad) xchg sbb xchg adc mov fidiv xor decb fcmovnbe sar sub jp into leave mov mov mov adc cmpsl xor aas hlt fidivrl cmp jp pop mov and loope rcll and jmp pushf dec mov inc in jae mov jp adc push clc pop out outsb sub lods add sub push repnz in xor stos sbb mov in nop cmp xor outsb aaa and sbb xchg das outsl flds sub adc add push sbb sbb inc hlt rcll mov ja inc adc sub cmpsl pop jno xchg cs or or (bad) sbb fldt test cmc pop popa pop or adc mov (bad) or add pop stos (bad) outsl sub fs daa negl les cltd push xchg or in mov jmp sbb (bad) dec pop push fdivrs mov jno pushl mov dec sub test bound sahf fwait xor and adc and daa ds les dec popf sub pop inc lcall cltd cmp divl cwtl in icebp xchg xchg aas push sbb dec xor mov push jl js cmp int mov jp lods ret mov into arpl std scas jns imul scas mov sub bound (bad) enter addb sub out jbe mov aaa data16 xchg cltd dec fwait neg popf inc sahf leave inc fxch jns (bad) aas cmpsb dec fidivrl push jbe xlat jne push dec out push es or sub test xchg dec inc and or lock mov push setg xchg pop cld testb jne sub fstpt fsubrl push jo jnp inc int sbb cmpl xchg xchg adc arpl adc jne subl sbb jl dec ds sub and push (bad) xor xchg add push imul jo adcl fdivrl jp jg das fmuls pop aam or or int clc mov mov add pop ds bound pop xor sub testb scas mov js xor jp bound inc xor stos bound sub cmp testb and lea lret jo cs rorb jle mov fdivs sub mov in push pop jecxz aas out dec jp movsb xchg xor enter push xchg sub stos ljmp mov (bad) int3 pusha std adc lcall xchg cmp ljmp fwait out test mov pop cmp xlat inc push (bad) dec sbb clc inc and imul arpl jp sub dec xchg xor inc push xchg mov or sub mov data16 mov mov dec in push divb cs ffreep adc daa mov repz (bad) jae lahf mov inc pop imul scas clc pop xor mov xor ret add repz adc sub fmuls aaa (bad) out pop into icebp call sar jmp sub gs add bound and mov mov or scas and sbb or pop test mov sub sub push xchg je enter loopne nop sbb pop in jmp mov push (bad) je xor shl or mov gs (bad) icebp mov mov inc loopne (bad) (bad) mov int xchg cmpsl or cwtl pop shr or pop inc or jg,pn mul ss mov cs cwtl leave int or sbb inc in sub cmpsb xchg (bad) mov popa jb and add dec scas xor movsl sbb and ss push pushf test mov mov movb mov fwait das jnp xor inc fdivs sub orl std es xor add loop sbb jl ljmp jnp cmc out lcall ss scas test sub fsubrl sub xor mov in test inc or sub mov stos inc mov adc jne fistp into cli rcrb fnsave mov fnsave mov jl stos (bad) daa xor fisubr or subl into mov (bad) sahf or in push daa testl iret int3 or jp shll inc ss loope test add adc mov int stos fnop sahf sub and lods clc sub fst fstps xor sbb xor pushl ret pop mov sub add cs popa xchg mov fcoms inc (bad) test and xchg mov cmp pop fsubrl sahf sti add daa jmp mov mov push mov data16 xchg jnp addr16 arpl or pop rcrl int3 sub jmp les cmc adc xor cmp insl pop fwait sbb pop imul mov xchg int3 sub xor out (bad) push mov sahf jae push sbb cmp lahf das and leave add data16 addb sahf sub mov xchg cld xchg sub ss sub xchg or aad pop test mov and insl push (bad) pop xchg aaa arpl dec movl mov cmpsb xchg adc mov es pop jmp data16 mov push inc add in sub mov xchg push (bad) adc stos push jbe push sub stc sbb pop je (bad) lock dec dec xchg sti push loop clc cmp fcmovnb mov mov xor and add daa xor xchg cmp sub push mov mov lods sbb push (bad) jb adc (bad) aaa in ja pushf or cmpsb mov sbb adc mov add inc pusha sub mov pop push mov subb out subps fstpl jb outsl inc ret mov xor xor or or mov push mov je jno and ret add sub xchg mov mov sbb cmp notb loop cwtl xor inc mov sub enter inc lods roll std xor lret sub mov (bad) int3 sbb sub popa addr16 dec mov movsb test mov adc in cmpsb daa stc push int3 jae aad repnz bswap dec adc hlt pop jne js (bad) fstps fsubrs stc adc test leave stc xor test xchg and rolb jbe jmp or in test xchg push jb insb (bad) sbb pop addr16 lcall and or dec xchg in ficompl adc sub jecxz mov and pop xchg cld push inc or add sub mov jbe outsl adc xchg add push adc mov sub jg hlt push dec adc dec or xchg repz pop sub jne dec add popf cmpsl push pop jmp xchg mov cmc dec or sub sbb stc pusha mov repnz cmp movsl and int3 adc sub mov cltd xor shrb xchg mov cmp sub mov stos mov mov repnz and scas xchg test fs (bad) jno sub sub dec jl js movsb bound jns inc sub out popf ss rcrl push push or xchg xor sub dec sub xor fisubr xchg xor ds cmp (bad) jne mov sub cmp scas or pop jb fistpll (bad) loope leave mov add scas out pop (bad) cmp xchg aad shr mov jecxz imull jle pop lods and sub push mov add add push popa push push sub and sub inc aad shrl jns mov adc test loope cmp addr16 xor jb adc mov add sub scas lds mov push xor jno adc aam jns ds xor xor mov arpl fs nop mov (bad) and lahf sub mov rcr mov (bad) in fimul (bad) repnz adc sub lds add lret or mov or mov stc xorb in mov fadd out cmp les ss imul leave or dec insl add dec cltd sbb adc mov imul inc sub mov xchg mov repnz movsl call jne xchg jo mov jmp cmc add jno fisubr sbb adc arpl in sbb sub dec push (bad) icebp cwtl xor adc rcll rolb stos jns data16 xor fnsave xchg ss jge fsubrs mov ret fldcw mov jbe mov xchg sub decl cmp outsl inc push inc mov xchg arpl mov addr16 test lods xor lahf stos rcrl xor xchg rorb sbb fwait push mov mov or stos xchg dec and (bad) jge test call ds mov sub mov data16 or mov jno push xor aaa push leave adc es lret dec sbb mov xchg xchg add sbb test sub pop outsl lods fwait lock push jns xchg jbe mov sub popa out repz sub js imul push dec fisubr subb popf dec subl int rorl sbb jae inc out sub adc insl mov sbb inc mov sbb sbb sbb repnz mov (bad) jnp leave xor push dec mov negl cli mov rol adc jge mov xchg jmp xchg popa xchg mov sub test fdiv mov mov pop push sub int xchg xor jns ss sub dec pop loopne pop sub and sub lret cld (bad) fmuls es xchg repz pop pop iretw fnstcw adc mov fistpll loope arpl cmp test mov mov inc mov shl je mov push rol sub shrl sbb ret jne dec rolb fisttpll iret adc mov cmpsb outsb out (bad) xor xchg sub mov enter jecxz push callw sub pop and adc jge loope (bad) cmp call and cld and push push jbe popa sbbl push popa push (bad) mov mov mov add (bad) fstl mull cmp push xor mov out lahf movups dec sub or adc clc ja inc mov mov (bad) xor sbb test cltd cmpsb sbb add jo cmc cld hlt aaa push sub pop cwtl in push cmpsl mov xchg xor bound mov and fidivl push mov add dec mov repz mov sbb pop mov xor cld adc cmpsl cmpsl cmp xchg je or imul sub daa mov xor mov hlt push leave cmp ret push push out ja sbb dec test aam or and sub dec or outsb push call aas inc mov leave cmpl add outsl add inc xchg jbe dec inc xor jecxz sub iret stc xor idivb fsubr lcall ja sub fsubr das adc mov in rcrb lcall lock iret popf sub into jmp and movsl test jne or xchg pushl lcall cmp faddl sbb jbe inc jbe in mov sub cltd dec xor sbb dec out popa test push (bad) mov ljmp jmp fwait (bad) lret adc in pop stos cltd sbb fs and mov (bad) dec mov ds xchg fmull sbb aam rorb clc sti mov mov jmp incb out adc aas ret mov into aad and ljmp in std scas loope sub outsl pop popa out data16 je stc mov fsubr cs imul xor fisubr or or test insb std sub shrb and ficompl aam push popf sub adc lods cwtl mov outsl sub and push pop mov sub xchg and int pop mov (bad) mov cld and push sub mov imul (bad) lea and push fsts jno mov stc mov dec addr16 sarb out or or push orb push inc in (bad) les pop sub push ss adc aad fsubrl push cltd bound iret xchg lret adc sub cwtl fmuls data16 jns daa mov fwait mov add cmp mov add ret sub sub fldt sub mov jns xor mov imul dec add xlat inc dec pop jg imulb dec std mov mov scas lahf in ljmp or cmp lds inc cmp loope cmpsl and push sub mov mov sub pop push fisubrl int adc pop clc dec rclb adc cmp push jo and cmpsl not inc movsl daa jmp sbb adc insl sub test loop dec and sub and cmp mov movd (bad) push repnz outsl jl mov inc push xchg pop fistp mov fldenv in sahf sub jmp add mov inc dec int3 inc mov cmpsl imul rolb (bad) (bad) xchg add (bad) sub mov adc leave push paddb pop mov es cs pop pusha rcrb xchg jmp and test mov or or sub mov xchg (bad) cwtl shl xchg movsl out sub inc push aad lret ret notl repz sub test mov sti add int xchg jae std fucom dec sub mov and inc ret es push and repz pcmpeqb cld sbb dec (bad) xchg lea ss int shll inc incb test enter out pop sub push aaa bound mov xorb inc test inc push or and sbb fisubrl lret inc sub mov jbe cs sub shll push fcoml add outsl lahf ret leave dec sti push sub sub gs cltd ret test test in pop hlt push aad adc sub jg inc lahf movsb push out lds dec call push lahf mov push xchg inc int xlat dec adc xchg dec mov push sub ja imul cmp imul and fwait fwait in jp add cmp pop add mov push push insb jnp int3 into and (bad) jecxz push mov fwait stc lret xor xor dec scas adc push push cmpsl insb xchg sbb test jae shrl (bad) cmpsl popf xchg aaa mov pop (bad) push mov int add cmpsb push add pop movsl out jae or pop in sub imul dec dec sub mov xor add stos cmp daa insb push inc mov fs xchg out pop or push fistp mov sbb push pop push xchg nop mov xchg add lods push in fmull push xlat daa ja push push cmpsl dec sbb push cwtl scas xor and popa jae pop lods dec inc in cld (bad) loope in aad out ja (bad) ret cmc nop xor leave push inc push mov test loope sbb into push and inc mov sbb cs fldcw loop xor adc mov push xchg pop cmp mov int insl sub jnp sbb scas jle inc inc out (bad) mov out into push inc aaa leave xor xchg dec pop subps sbb pop push mov out aaa or (bad) jo xor arpl push int lods data16 fstl dec mov lods mov mov cmp cmp cmp daa das fldcw adc (bad) push dec pop sti pop sahf loop cmp dec std popf insb jne mov pop mov jno cmc push push push std mov fdivr outsb fadds xchg cmp and lods mov (bad) jae add in pop sub cltd clc push (bad) or ret sbb xor cmc jb addb add xchg and sub inc push jns in sub aas aad inc int3 add (bad) push (bad) out sub lds fsubrp insl pusha (bad) pop jo and xlat stos pop ret sub sbb xor add fcomi jno loopne aas out or fstpl mov sub lahf mov int insb popa mov jle stc inc imul or inc pushf lock stos add push sbb sbb sub je xor leave sbb int3 dec popf sub and mov jo sub jne sub cmpsb lahf add stc push push in aaa ja sub mov outsl xchg jbe inc pop sub dec push repz sub sarl sub fadds sub or mov adc scas add (bad) dec out mov xchg lcall or je sub in push (bad) divb xchg mov ds orb sub out pushf jecxz jns sub std lret mov jb adc into dec incb daa push dec cmp mov loopne in or pop shrb mov adc inc incb adc xor fisub fwait sub sub ret fucomip sub in inc icebp pop adc mov movsb dec clc std sub jbe lcall mov jns cmpsl mov stc shrb test push jae enter push jnp mov sub sbb mov addr16 loopne inc mov pop cmpsb add pushf xchg (bad) xchg in out cmp sub push jns mov test sbb fsubrs adc mov lods fwait lock xor shll mov notb inc push clc jp mov incb in jmp lock stos test bound in push stc sbb mov fsub jmp dec mov hlt ss loopne in imul ss sarl xlat sub xchg sbb xor push cmp loop sub cmp ficomp xor sbb maxps aad mov cli jbe add mov pop jb addb sub and jmp (bad) repz sub jno jecxz and sub cmp adc xor (bad) pop cli fldt sub lock dec in and xchg mov lret iret imul adc sbbb clc mov mov mov jge jg adc xchg mov or adc push aas inc adc xor lods add pop mov cmp pushf std sub push and int3 mov add out mov icebp test mov stos jno and out jecxz,pn sbb outsl cmp jge test pop fs ja pop pop cmp xchg sbb dec mov aaa jo cmp pop push (bad) mov cmp sub cmp arpl std jmp jae js std lret rorb popf and int3 cltd mov dec mov (bad) daa aad sub jb add cmpb sub jns jle cmp nop and dec mov (bad) pop in and jnp stos push push mov cld push mov out xchg and icebp mov testb push or lcall cs popa (bad) hlt xor fnstenv in clc push inc test xor lret jmp shrl lret xor movsl lret int3 iret inc add mov (bad) repnz (bad) mov sub xchg scas mov cmp xchg aaa cmp or sub push mov imul bound xor sub xchg xor fwait mov lea fcmovnb bound or push aas xor cmpsl dec push sub adc pop jnp adcl mov xchg cmp pop jns jb sub fiaddl pop lods or data16 fimul cmp xor push sbb dec adc push insb mov in xchg mov xor inc out xlat icebp sub cmc dec and pop cmp mov sub mov fistp loope lods mov (bad) pop cmp pop add mov xchg fsub stos and cs adc (bad) es jb subb dec jno inc dec sbb fwait inc sbb addr16 cwtl push mov dec lea leave (bad) inc or in dec cmp scas movhps lods dec in and sub mov xchg or cwtl dec jne add cld shr push sub sub aas or lcall (bad) xor add xchg xor mov sub dec pop fimull in leave movsl push or pop (bad) mov shl or sub pop inc scas sbb je dec in xlat fbstp jne adc pop mov add (bad) adc add (bad) sub jo cwtl xchg dec inc push push sub mov xor mov pop xchg adc pop mov fidiv inc mov outsb mov pop fisubr aas fdivrs pop dec inc and pop jno sub push addr16 sbb sbb lret adc imul je loope (bad) jecxz ja dec and lret testb imul loopne mov shlb cmpsl leave mov xchg imull jg int in das xor sub loop cmpsl mov pop adc (bad) sub or and mov push sarl fs sub and dec (bad) dec cltd mov sub xchg mov aad (bad) inc call xor shll jecxz and add sbbl sub lock mov shrb sahf sub jmp sbb xor hlt push jbe fnstenv inc sub push arpl push dec sbbl adc incb jnp addr16 in fdivrs xor jb das (bad) test stc (bad) xor inc (bad) hlt outsl push xchg or cltd in (bad) pushf cmp mov notl test or sbb (bad) add jno adc sbb mov add xchg mov ror aam dec jbe inc mov pop outsl cmp mov push jle inc mov adc out iret (bad) cld pop out sbbl push cmp movsb mov ja in xor mov sahf xchg mov xchg test mov test movl pop ud1 loopne sub or push jg xlat gs inc cmpsb pop je movsl sub mov or mov das loopne sub test sub fwait scas paddd xchg or adc inc cmp call movsb inc (bad) mov sbb mov loope decb lds bound jg daa inc pop loop xchg sub cmp mov sbbl or jbe add mov in jb enter (bad) xchg rorb mov push or sbb cmp sub aaa dec andl les sbb xlat inc mov cmpsb mov adc inc xchg sarl xchg adc das jbe insl test adc nop cmp adc and lods popf test lods test jne cld pop bound jl test xorb or push xchg das jle mov int (bad) (bad) and imul xchg aaa ret cmp jmp pop inc cltd fistpll ror fldt xor imul sub or sub mov (bad) frstor mov pop iret sub dec mov cmp paddsw sub aam dec sti inc pushf pusha sarb or jb adc adc add pop fmull xor addb mov test ret fwait sarl adc add dec stos leave jg adc mov mov es mov dec je notb sbb idivb dec aad push stos and loopne jmp nop sar rorb arpl inc fistp ret cmpsb push (bad) icebp mov sbb jg,pn sbb add cmp das inc subl loopew and and xor mov es js sub dec push inc xchg mov cmp sub mov gs aas clc or pop mov adc popa or imulb ja push sti into aad sub in jb divb cs lret or insl push imul (bad) jmp add jecxz mov lahf mov shr shlb mov imul dec jnp arpl push push dec jno loop mov inc dec es sub xor jecxz push jno pop cmp ss mov inc stos pushf cmpsl and and ja loope and mov mov inc or pop push call inc cmp data16 lods je add sub ss mov ret inc test jge popa jno insl lods or inc popf mov in sbb ret push into cli cmp pop xchg loopne (bad) mov movl xchg sbb inc mov sbb stos sbb xchg shrl and push orl xor mov xchg mov push cmpsb sbb leave and push jb pop or subb mov jns orb rclb adc in push repnz into add pusha dec mov lcall lcall jg cs imul inc fidivl bound mov sub pop add jae (bad) cltd push rclb push cld cmpsl inc in lahf lods xor fwait mov jmp or imulb popf sub jae push inc out bound dec xchg mov sahf sahf daa jno dec adc std cmp jge popa sti icebp (bad) imull add jmp inc dec lahf mov sub cmp clc push and (bad) xchg in nop cvtpi2ps sbb sub cld mov pushf sub mov fldenv ret popf scas movl sbb lret mov inc and sub sahf (bad) mov sub cmc mov sub js dec xchg mov mov xchg cwtl mov cmpsl push imul test scas mov or or outsb sbb bound cs test loop lcall and cwtl lds mov inc inc sbb in or jns sub fstpl push loopne mov mov lods add out sub imul sbb stos add xor sahf test pop inc adc dec mov mov stc cwtl cmp push xor jecxz (bad) mulb sti push ret jg cmp cli movsb adc pop push lret mov pop xchg fstpt adc test inc or cmpsb std rcrl ret push cld ljmp lods pushf inc or adc sti cmc fcom hlt cs xlat lock jmp leave addr16 out mov cmp je cld push mov adc aaa mov into dec and fildll mov mov add das push pop repz cmpsl inc sti (bad) sub adc movsl (bad) mov push lods mov cmc scas sub stc sub fstl mov ret mov aam push push outsb cmp mov stos push dec push in not adc jmp call add sub pop push lret cmp mov xchg xor xchg aam sub les fldt adc das push daa and sub and push dec xor pop pop and popl scas add loopne pop sub in sub addr16 call and cmpsl decl pmuludq sbb add loopne test pop lock mov (bad) ljmp lods add in cmp scas sbb sub sbb mov mov sub inc mov jecxz sub mov cmp clc sub jg iret pop and scas mov sub lods cmp mov adc xchg pop in inc push inc pushw in ja sub rdpmc and mov jg lea sarl fs push lret sahf popl (bad) xchg sbb sub inc inc int3 fiaddl das xor cmp daa sbb lret and je jle out xchg mov leave sub in jge nop ds lods mov into bound lret (bad) pop mov xor aas out pop sar inc pop mov push (bad) sbb fildll ficoml arpl mov fwait stos mov or jbe sub (bad) dec mov dec insw sub jbe mov inc or add add (bad) mov mov ss enter daa je and bound iret (bad) mov inc and sub gs les fcomip jmp fldt mov jae sub insl loope push sbb sub mov scas daa sahf pop lcall hlt dec push cmpsl sar dec ds pop cwtl in and sbb mov sub aas pop cltd mov push scas leave mov cmp mov push sub lds sub repz inc dec adc (bad) aaa das cwtl aad sbb dec and inc icebp xchg xchg daa es iret xor cmp rolb jb jne push pop sub imulb sub arpl insb or sub dec int3 xchg pop je lods aad fildll jecxz stc rolb fsub lahf loopne jb (bad) dec in daa mov sub cmc pop sti das mov test mov lcall sub cmp je insl cmp inc popf das pop sub jae outsb imul jge sub dec dec ss pop insb sub mov inc mov xchg mov adc test ret test jne adc mov clc xor rorl enter mov scas pop mov in sub fistp int3 ds push sub or pop sub lods adc (bad) lock orb repnz addr16 pop mov xlat xchg xlat fisubrl pop out enter mov and cwtl mov xchg cmc rcl out sub cmp out mov loopne add jno or or ja or dec jne cmp fdivr push xchg sub cmp dec loop sti push out or addr16 ja sub xor sahf daa sub insb ja nop out lcall dec vmovq mov mov dec nop cmp aaa xchg int insb adc ficom xchg sbb (bad) pop (bad) out and insb (bad) lahf sbb cmpsb lods push and cmp sbb push out jmp leave xchg ret pop mov sub (bad) dec pop popf nop cwtl outsl sbb push push mov std push xor add push sub sbb inc jge scas lods shlb pop sub orb loope js mov xchg aas popf pop jnp scas sbbl stos test data16 fnstenv jmp adc cwtl lahf pop lods int xchg adc push (bad) jbe xchg leave fiaddl addr16 or add sub data16 jmp aaa cmp cmpsb or out loopne aaa or test andl xor enter sub fisubr mov ss out dec sbbb sub lock jge or push push dec add leave push add mov cmpsl out sahf (bad) lods push xor sub jb je mov stc stos sub mov ret push and into cld push xor add das xchg mov loopne dec adc and xor or shr fsubrl xor outsb stc cli pusha add sub sub adc bnd and add gs pop inc or mov loop fist jle push loop jae mov sbb mov and push les inc add mov sbb gs decl sub sub ret (bad) out push pop ss cmc or jg dec into jnp mov add jno or sahf lods mov mov and sub push ja mov fildll stc (bad) sub dec mov (bad) enter mov dec push popf ds lret cld sub dec push movb or mov loop sti iret cli pop sahf scas mov fadd mov stos (bad) sbb push js sub push cmpsl into enter xor or gs push movsb xchg pop jbe sub sub pop ljmp inc les sub aaa ja push (bad) mov cs and jmp das xchg xor mov scas pop mov stos arpl lods out pop cmp jne insl pop inc lahf stc es out fldt je sbb mov andb sub into std daa mov pusha sbb rolw imulb xchg jl mov fwait sub sub imul jbe icebp mov test sub mov mov jno pop test add sbb dec (bad) sub outsl xor loope push cmpb fidivrl idiv fs rcll push shl mov int stc xchg loop lcall push jb fisttpll cld int pmaddwd jp (bad) push xchg pop xchg pushf neg inc leave (bad) in imulb add inc cmpsb add inc icebp xchg inc pop leave jge loopne xchg sub push mov jg (bad) jb pop (bad) popa mov int3 jp scas std push add std xchg jb xchg and mov jbe xor or popa pop adc pop jp and loope cwtl mov xor add jno or sbb sub fucomip mov cwtl sbb jmp not daa call and push xchg test jl int3 sbb mov pop (bad) psubusb jle imul cs and push movb dec insb and out (bad) daa and out inc rcrb cmpsl jo ljmp jns orl or cs (bad) sarb add data16 inc daa seta sub std sbb imul mov call call std mov movsb iret pop inc sub cld mov sahf dec xchg mov test aaa call ret pop inc aam repnz (bad) test call ret add enter pop sub mov ficompl cltd repz mov daa icebp xor inc addb xor fisubr iret push bndstx inc or sub jge nop sub leave sbb lock (bad) jmp sub jmp sub mov jbe (bad) jae mov xchg pushf ss adc les mov mov dec jl js data16 aad mov jecxz test pop add lods adc ss xchg jo (bad) call cmpsl mov mov movsb inc mov dec cs mov pop dec leave and roll add mov mull test movsb enter (bad) push cltd mov dec test sub icebp roll mov stos and mov add jb jo jb mov call lret iret mov ret rcrb dec std dec push adc fiadd fisubrl inc sbb test pop xor mov imul cmp test adc sub jmp in out jns mov sub inc enter call sub out clc rorl xor leave lret cwtl sbb das outsl push push movl xchg sub xchg mov add ret add shlb roll and jg inc sub mov jno lahf sar fldt and inc add or add lock faddl or add sub mov test jbe dec adc (bad) cmpsl and inc inc clc push xchg cld je jne adc arpl (bad) sti sub xchg mov sub test movsb sub dec stc stos sub insl fnop iret mov inc push lret push cmp js push (bad) sarl xorl or mov cmp int and xchg pop xchg sbb jno sub das sbb pop and mov popf xchg fldenv ss xchg incb dec push (bad) in sub jno,pn dec in int aaa adc subb out xor push mov add dec pop adc jl imul xchg push add jl lds clc subl inc daa imul push adc xor cmpsl (bad) inc int mov in fsub pop cmp sti arpl loopne cwtl insb sub inc sub cwtl adc and out int or cmpsb push cs outsb add int add mov mov jle mov push xchg test pop cltd cmpsb ljmp inc enter mov xchg and test lods das mov sahf (bad) dec pop movsl lea or sbb lock jne jo pop pop sbb jns test and adc cmp scas adc mov les test jbe pop shl sub cmpsb lahf cli lret daa cld repnz mov jg push adc adc aad pop inc lcall and mov sub loop push pop popf or insl pusha add (bad) pop xlat jae lcall leave jns test mov xchg aam ss cmp cmp icebp mov popa stc add or cmp insl cltd sub inc popa mov cwtl xchg insb loope dec data16 fldl or sub adc ljmp mov sub add outsl add sbb mov and sub insl loope and mov add lds inc dec loop ret jmp xor clc pusha aas daa daa js mov push gs pop jmp xor xchg xor addr16 sub sub sahf ficom push mov xor sbb ret scas sti lret sub jns pop (bad) in data16 dec jg sub mov movsl cmpsl in es mov xchg sub or or call aaa inc or out daa fisttp push pop sub movsl mov mov (bad) push push push sub addr16 sub jns mov fsubr push movb cmc sub xor add fucomp ret pusha imul jnp mov push xchg add sbb jbe out mov loope sub sbb adc mov dec lds aad or mov sahf (bad) and adc fwait dec add sub adc sti addr16 sub xor out repz push mov int3 call sub xor loope push mov add add cmpsb xchg movsl cmp jg out aad in mov jl stc jo lahf xor push mov andl jge mov int3 push out in sub int iret ss mov aaa push cmp aas push daa mov in xchg arpl mov cmp cmpsl adc pop pushf lret jg std push xchg add pop les and pop xchg mov xchg pop call mov call imul popa js inc xor adc fidiv pop int mov pushf leave into mov call or pop pop cmp shrl xor xchg cmp loope dec bound sbb pop dec push mov jg frstor xor mov and repz sub jne sub imul mov sbb add and imul jbe fimul int cmp mov mov xchg xor mov jle das xchg cmc push add movsl mov cs movsb sub sub cmp jmp add dec (bad) (bad) sahf mov and sub adc aas mov adc loop ds pop and mov mov mov or (bad) bound mov loope push inc (bad) shrb and mov into lea push mov add std addr16 gs dec je (bad) mov cs sbb cmpsl insb in fisubr cmpsl push clc dec mov mov repnz sub int3 ret leave dec shll fs xor fisubrl cmp fdiv sti dec mov xchg sahf dec xor test rorb sbb inc mov out cli int3 out sub pushf test in mov sarl scas mov mov sub and inc cmp ds fst bound daa cli dec dec xchg mov or xchg test (bad) push mov jb test call or fsubs or cmp mov lea inc xlat out and mov (bad) cld iret pop push shl shrl dec fisttpll ret stos popa lret adc out jmp lock lahf sbb inc cwtl sub insb lods fsubr mov sti cmp or sub fldt xlat mov test ss adc pop xchg dec or and adc sub xor sub test scas jg (bad) jle imul into inc sub sbb and jl js add add (bad) idivl enter jl dec cwtl insb and adc jnp aam pushf test xor lods loopne fbld mov dec (bad) cvtpi2ps mov inc stc fcoml in adc outsl and lods scas (bad) (bad) lcall test movb add cmp mov and cs ds cmpsb test cld xchg jge dec (bad) pop and cmp popf push lea shll mov push mov mov fldt (bad) mov int3 pop test push test mov insb xchg int cmp mov and dec in cmpb pop fildll mov rcll inc rcrl push push cs pushf jbe lock or cmp mov out mov je,pn mov (bad) ss repnz inc int xchg sbb cmpsb push cmpsl mov loope iret test cs cmp lret imul add repz sub into orl jge sbb stos ljmp mov iret (bad) mov data16 aaa and test stc lds in xor adc aas inc adc pop sbb fsts test push (bad) fadds pop push ret xchg adc jo das xor sub mov lods push arpl inc add mov dec test fldcw sub test adc lea xor pushf subl jae pop imul jno sub notb gs push lret sbb sub cwtl mov icebp mov jg sti sub sarb adc shrl cmpsl mov test leave pop lods xchg cli ljmp or bound cwtl (bad) dec sub aam cmp inc cmp std inc adc dec sti in popf ror shll xchg push (bad) arpl mov daa cmc adc pop (bad) push jb or xchg loope push adc push and pop push stc cmpsl jno loopne sub jb pop adc inc sub pop and cltd leave mov in mov jg sub cld aad push (bad) test mov leave out adc sub sti push xchg cld imul leave ret movl and movsl stos cmpsl pop repz (bad) fisttpl (bad) dec outsl sbb (bad) scas test mov add inc insb je cmp test jg cmpsb xlat scas arpl xchg add push push xchg movl das sub xchg out add outsl leave mov cmp (bad) call adc iret xchg cmp sti cmp mov sub orl test adc push and fnstcw sub sub dec (bad) and cs push aas (bad) call dec into cmp jl sahf mov int repz fs call push ljmp sahf push lcall xor (bad) into pop fstl xchg xchg fimull mov rorl xor mov inc pushf add (bad) lret std sub aas cmp lahf ror or sbb pop addr16 notb int mov jge sahf jecxz leave add jp (bad) daa or (bad) push xchg push xchg inc or (bad) xchg sub push int sbbb imul inc sub sbb or aam add adc imul call movsl sub adc sub arpl inc sub xchg cli scas pushf sub push and sub es cmpsl push and (bad) sub pop push mov leave bound pop cmpsb xchg int jb sbb sub ss or or mov icebp jno jnp cli dec iret sbb movsb lcall sub adc int and sbb into xchg aad jmp sub sbb push cmp and mov and shrb xchg pop imul lock (bad) add sub xchg ss and sbb jo xchg inc or dec inc mov lds sub (bad) fdivl mov shlb adc test sub jl push sub rorb cmp and les pushf or cmpsb lcall and pop mov cmpsl sbb push inc or cmpsl dec cli or mov lods and into (bad) cmp fwait pusha jge adc mov inc push je in mov cmp popa push sub cmc test (bad) out ja sub ret or jns sub arpl (bad) mov out and outsb rcl mov bound test fldenv cmp add into sub ja aam (bad) pop inc addr16 data16 xchg out push inc stos dec cmp jge xchg inc sub insl lods std int sub sub pop sti xor fsubrl or push out adc es addl jge push in hlt mov sarl mov inc add and repz pop mov xchg mov dec sub (bad) and add push sub fsubr lret cli aas movsb sub sbb ret loop sub jbe xor loopne dec xor repnz out cmpsl (bad) adc jecxz movsb mov pop hlt inc cmovbe dec and pop insl pop and addr16 adc mov rcrb rcrl test (bad) out out ret or out js add jb arpl sub scas sub inc add adc sub xchg mov std ds (bad) repz or das cltd mov data16 nop je repz jns pop test mov nop xchg and not mov out jl xor fisubrl inc lea or ss cmp test fcomps cmpsb push push arpl mov insl stc loopne push and loope je xor push xor test sub imul cmp and adc call icebp sbb loop jmp pop and cwtl scas xor insl scas xchg sub cmp (bad) std dec sub xchg cmp out pop unpckhps cmpsl add fstpl mov jl pop dec xchg dec andl (bad) jg sub pop push repnz (bad) ja sub cmp xchg inc out ss mov aas fucomp ds jae pop pop call push mov and sub sub jp inc lret sub fwait push cli lock sbb jmp popl and push xor pop push sbb lret lods sub jmp inc add out sbb cmp test ja fs push rcrl lods lcall scas dec in fisttpl and movsb sub or sub fimul sbb int or dec adcb and push xchg push imul jp lahf in and fistpll inc pusha subb repnz xor dec bound gs mov std insl mov (bad) mov lahf or add xor add dec out je int jmp push mov pop out negb add ret push adc ret mov and cld dec fucomp out cmc jb xchg mov repz cmpsl loopne (bad) lret movsl imul xor xchg (bad) jl lods dec jle out add dec (bad) int or pushfw xor je push cmp cmpsb sub test mov push test xor push xchg inc inc or es mov jb rol sbb xchg jno nop test int mov and push dec shlb cmp ja les mov les sti xor mov and imul cmc cwtl sbb jo into inc loop xorl lds fwait pop stos lods out mov mov sub cmp int mov mov stc push pop (bad) jb cmc cltd rorl leave adc and xchg pop pop mov lcall xchg inc push fsubr dec out repnz adc fwait rcl leave jge sub pop in loop push cmp sub pop cmpsb rcrb ror xor inc sub mov dec out push xor aaa mov addr16 out in test add movsb scas loopne add into test mov jbe and in sti icebp cmpsb sub fistl add push jns repnz inc adcl mov cmpsl push push jecxz loop adcb outsl lahf imull sub sti push (bad) in lea cmp xchg fsubs jecxz and js push sub bound data16 xlat jns daa push add loopne outsl jle and cmp or cwtl mov pop push xor in jge fstl negl sub das lcall in fcompl sub call push xor add dec ljmp ss into cld mov insb sub add push and orl int push pop fidivl xchg mov mov adc add daa cli or push sarb mov jg jb dec xor cmc lcall (bad) int and pop ret lods push movsb arpl dec cmp jp xchg xchg test xor mov jl fs dec fadd or rcr adc imul rorl jl sahf cld imul adc movsb or (bad) cwtl in (bad) and cmp int jnp testb (bad) std jo hlt mov int3 mov insl cwtl hlt xchg test jmp fidivl xor leave mov repz ret add xor ret and or xchg adc mov inc add (bad) stc cwtl addr16 gs aas into popf add fnop cmp fstl into pop cmp test std mov sub mov (bad) adc icebp xbegin imul gs or aam mov mov push sub push mov mull lods and xchg sub inc sti cs (bad) pop mov dec inc jns add jno faddl adc adc cmp rcrb je xchg bound test test movsl sub cmpsb mov lods (bad) stos movaps js jbe leave int3 (bad) adc jns lods adc sub inc cltd jb cmp stc sub push push stos dec leave add add aas mov cmpsl arpl and xor fimull iret mov or pop cmp stc jns cmp and push jle sub xor xchg sub xor cmpsb inc and sub out lcall insb test lret sub adc sub xchg lods in (bad) mov jnp pop cmpsl out mov sarl syscall push sub scas lds out clc jno jmp (bad) out stos lahf fbstp aad pop or jo or push and adc add rorl mov cmp mov clc push xchg cltd das aaa nop rcrb nop sub jl (bad) xchg or and ret test test sub xlat add sub hlt repnz mov ret daa clc lret jnp fidivl sbb aad pop stc das movsb out sbb pop adc sub scas cltd add sub aaa adc push xor mov jne cmp jmp inc sub cmp push dec mov sub pushw inc pop xchg adc sub lahf add fsubr repz leave xchg (bad) xor sbb sti daa dec ss and pmaxub inc or in testl cmp arpl and aam rcrb and or int3 sti frstor mov sahf enter repnz jge sub jecxz dec pop push in cs cmp dec sti add fwait stos cmp fucomip xchg push roll jbe (bad) jne bound jmp xor jae sub push leave push (bad) adc imul out jp (bad) jbe or in add ret ljmp (bad) jns push cwtl sub fstpt cmpl call mov or dec call in leave sbb sbb or adc mov push je out xor sub xchg adc (bad) fldt daa sub sub dec add scas pop insb loop mov sub lds in insl jmp aas or or lcall jecxz mov mov sub stc in and sub mov sub jb sub sub sub mov cld jae leave sbb mov jp xor inc sub int3 data16 add sub pusha fnstenv sub sarb cmp dec adc sub add sahf sub sbb daa sbbb cmp sub cltd dec (bad) mov jns test mov mov sbb xchg test or movsb std sub cld inc lahf pop add pop jb jnp,pt inc mov gs xor and sbb les add ljmp std pop cmp scas popf mov cld mov sub fisubr movsl movl outsb pop sbb xor jg sub lret loope cmp in int3 jp sub outsl pop mov (bad) rclb test (bad) int3 outsl fstpl bound fwait lret sub les sub jecxz sub pop push fdivl stc stc les cmc aad arpl jmp sar add cmp insb xor sbb lods cmc leave mov inc sahf out ficompl sbb fimul cmp inc pop mov call inc (bad) repnz mov cmpsl aad mov and xchg pop enter divb ret sbbl sub and mov (bad) iret dec push ret add mov repnz xchg fcoml lds mov cltd and arpl sahf loopne fcomps scas cwtl icebp and lds mov lret (bad) xchg mov cli paddq sub pusha outsb stos sti lret divl in adc outsl inc cwtl call xor cwtl int jo sub loop jae xchg xor daa scas (bad) inc sub call repnz fmull lods sub xchg cmp push inc inc out sub cmpb and sarb pop sbb mov pop out push test sub mov lods mov repnz scas out pop arpl leave loop push es clc notb add mov and cmc movsl sub test mov mov or pop stos and das (bad) mov sub push xor loope push daa ja add lret rol sbb push test ret push je xor mov insb sub cmp in cmp loop pop add push insl ficompl push fcomps aam xchg fnstenv add inc ds lods sbb mov jae or arpl test dec out adc cs pop icebp repnz into sub xchg int3 sub sarb jg out adc mov inc stc add push sub daa (bad) je inc std cs stos ljmp pop xchg sbb (bad) jg sub xor jns leave mov xchg cmpsl xor sbb xchg enter xchg xchg mov data16 sbb cmp enter sub inc add sbb cmpsl xchg out popa addl out sbb stos sub xchg scas sahf (bad) ss (bad) sbb ficompl in and out pushf push fisubr bound xor nop test jmp in mov dec jmp add sub push cltd jnp out xor inc xchg mov loope inc xchg rolw jns cmp cmp test sub outsb movsb cs test sbb dec int inc sub out bound cli mov push rcr xor ret test (bad) mov and push lods sub ror movsb jmp (bad) xor pushl push fsubrs or sbb mov inc jg sub xor dec out pop ss push or xchg mov adc pop sub loop stos cmp add mov ja arpl inc (bad) mov leave dec sub add gs stc test out inc roll and sub ss test inc push (bad) inc and test xor sbb mov fnstsw icebp fcmovnbe or cmp and jbe adc and add call loop and mov or sub adc pop mov mov data16 mov sub dec jmp jae mov mov mov jb rorl out pop and mov inc pushf sbb ss sub (bad) mov jbe insb lahf or push ja pop lea fneni(8087 adc xor push jnp,pn adc popa imul shrl mov jbe push call xchg stos insl mov sub jo out imul out mov push cmp push jno (bad) test cbtw sub call add clc sub fimull or push xchg daa and insb test adc mov andl xchg movsl rol fwait push xor imul push jae xor rorb fsubr dec sti push ja and mov and lcall jb dec in fcmovb push mov sub stc jo sub insl fdivp pop rorl and test int3 sub mov or out dec sub jg jb lods and xor aam leave pop or stc ror mov inc out xor out dec pushf sbb daa out xor cs addr16 push sbb loopne jg mov daa push rcl mov cs and pusha (bad) add lret jo fwait push les cmp sbb cmp movsb mov sub jbe pushf loop dec cwtl jg fiaddl inc adc ds inc fldt ret and xor loop daa dec insb xor rol add cmp cmp movsl sub push das or je push mov add dec push out fdivrs (bad) icebp arpl sbb lahf daa sbbl xor rcll push movl jno mov fdivl (bad) sub cmp loop cmp push dec and and dec mov sbb and sub (bad) cmp stos sahf push jp fcmovnbe adc adc dec dec pushf je and ret fbstp inc (bad) (bad) pop dec adc jns rorb cmp arpl push jne push push xor aam jmp jo pop scas sbb sbb dec std pusha movsb adc mov jmp dec mov mov sub (bad) ljmp dec ljmp push clc imul or push sub fidivr ficomp jmp fsubp pop pop (bad) insl repz mov and jo jg dec mov dec and aam pop xor inc movb scas mov aam jecxz push dec adcl popa call and stos pop pop fdivs mov jl xchg out xor or out and push mov (bad) jbe sahf push pop inc pushf sarl rcll (bad) decb push sub fstpt adc cs sbb sub jns es fwait out jecxz adc jnp shrl dec adc cltd cmc and or clc shrl sub lds adc hlt (bad) loop jns or and pop cltd sub cmp mov das test scas sub pushf sub aam mov pop out dec cld ffree in icebp ja push add inc repnz cs movb sub sarb or clc inc xor fbstp out xor xchg insb std aaa shrl scas aam jle dec repz sub sahf dec lsl sti andb scas xchg sub or out sub xchg stc rol (bad) ss or mov sahf arpl mov mov repnz push inc or dec and sub mull (bad) jbe or loope lds test ret test sub bound pushf fldenv jns xor sbb in xor jbe xchg or cmp sbb xor icebp sbb inc adc inc jmp xor mov cld mov out mov rorb cmp push sub mov test jno sbb ljmp fldcw pop jmp call adc les inc push and and sub add adc push test out inc and mov rol mov les inc xchg dec add stos clc out stos repz jmp sub mov xchg add or jns sub jo and (bad) (bad) mov cmpsl ret int3 pop or in stos sbb fdivs mov mov sub dec jns push les cmp cmpsl aam and sub xor inc daa dec pop loope ret jecxz mov jno adc adc sub xor dec test (bad) sub add int movsb inc or std cmpsl lea inc outsb and jne mov lcall push movb dec (bad) jge iret aam and cmp or mov push jne and pop mov xchg out jl add cmp pop icebp add scas fsubrs xchg jg pushf mov jb into stc daa push jmp aas fnsave int dec mov xchg sbb clc (bad) clc inc push push jge arpl imull ret push cwtl fidivr dec scas pop pushf or jne cmp or dec pop data16 mov or icebp and jg pop (bad) mov popf icebp (bad) push xor (bad) xor fwait push fnstenv inc aam xor adc mov and lds scas inc mov jp stos pushf fmuls pop jne fst into aam int jns xchg in and pop ret adc iret test push (bad) je rcrl cmpl pop cmpsl lcall add push dec mov stc adc fwait mov (bad) hlt cmp pop movsb fcmove fcom test out cmp fdivrs (bad) mov xor xchg subl xchg shr call sub imul adc sub jbe int3 cmp faddl scas cmp sbbl or pop test mov rcrb push pushf arpl sub jg mov shlb push jnp push stos test test sbb mov push repz push mov inc adc push outsb sub xchg add cmpsl or adc nop push (bad) jnp out jp sbb push mov xor pop and dec fld inc je xchg les push shlb push or jne dec addr16 mov sar outsl cs (bad) fcomi outsb mov mov xchg sub xor call rol shrl inc adc jae xchg jl sub adc bound sub outsb mov aad jp mov jnp (bad) (bad) outsl xlat dec fdivs xor dec out (bad) pop jne daa popf cmp push jae shll pop jmp dec clc std push mov inc jae add cmpsb in in dec icebp push sbb bound push stos lcall sub mov mov mov xor stc bound aad cld pop ret std sub insb pop scas add or fsubs xchg mov cwtl sub jno pusha jmp imul add jbe sub sbb push or push test (bad) push adc add ja les (bad) aaa stos loope pop cld cmp (bad) pop ret out scas shr int3 sub aad cmpsb jl out dec ret fwait in repnz cmc leave movsl or or scas add ss (bad) int (bad) ss cltd leave sti or sub bound jbe adc outsl dec dec or lds outsb inc fist ret enter jo rcll repnz mov mov sti mov sub push (bad) movsb push mov xor (bad) repz mov adc sub jge sub push test sub pop in movsb ja push jecxz jp lahf out xor cmpsl xchg xor fcompl es loope (bad) sub sbb add popf lods (bad) daa jbe fildl outsb jmp jo mov stos mov jae ljmp mov sub data16 sbb or push pusha sub das test arpl and dec mov fcoms movsb inc inc cmp push daa push ret inc xchg mov in mov xor (bad) das xchg push jnp out (bad) imul lods sbb test sub lods xchg mov add dec dec (bad) jb bound loop data16 mov dec sub jb dec ret loopne pop jne sub sub and mov inc push (bad) push cmp js sub movsl sub mov hlt sub mov jne ret daa inc push fadds xor ljmp or jne mov mov rclb shrb daa shlb add inc mulb pop iret jb mov and bound imul cwtl int pop (bad) dec in loope cs fisubrl and lahf lock inc sub mov jo jp frstor std call mov cmpsl ficomp and leave pop fs jo and adc sbb mov (bad) daa scas out in xchg into loop sub add das loop sub cmp mov sbb test jl,pt loop add lods aas sub cmpsl icebp faddl adc sub out lret jns dec xchg inc aas mov dec dec in stc sub xchg movsl sub mov pop add push pop insb fsts xchg stos and or sub push ret sub adc mov jne sub push dec push call arpl pop xchg xor ret (bad) inc sub fsubr je out leave add (bad) cltd scas iret sub jecxz mov dec popf les scas sti cltd jl mov imul pop int xchg and adc (bad) push lret test cltd push fcmove outsl jnp mov mov test sbb hlt leave jbe push adc insb sbb pop pop adc data16 fcmove mov sub pop and and xor lock (bad) out xlat mov dec lcall sub fcmovb insl mov cmpsl int mov xor int sbb dec aas insl loopne into jnp xchg add jb push fstps repnz xchg imul sbb loope rcll aam dec mov jge xchg fimul or mov nop loope sub iret idivl xchg and sbb xor add cmp sub dec fcomp sub inc (bad) aas mov add adc ret xchg inc ds mov cltd mov ds inc les mov inc xchg add sub jge sub mov mov dec aas mov fwait mov jnp imul loop sub pop fdivl in mov out xlat or sub xor sub test (bad) sbb inc (bad) jns sahf fisubr inc mov sbb ds scas mov std cmp sub data16 insb nop sbb loopne xchg (bad) dec push cmp xor xor sbb les cmp (bad) xor stc push in xor fsincos dec (bad) pusha cmovbe xor xchg aad jno mov jp pop imul mov and push xor jo jp inc inc fdivrs sbb jecxz cmpsl sub out add dec sub mov inc sub xchg ss push arpl fdivp ljmp xor adc and je daa movsb lods ret sbb and sub adc add sub stos fwait sub inc jmp in int3 cld push push test jmp test imull (bad) js into std (bad) dec mov sub xchg jne and (bad) ret stos stc jae add adc sub subl push mov (bad) push mov cmp dec daa clc (bad) (bad) into sub mov xlat push aam xor mov (bad) jno adc dec cmpsb orl sub repz test sub mov lds arpl call mov mov loope bound icebp push clc cmp mov xchg je xchg xor ss inc mov mov xchg mov cmpsl and sub push xchg mov sub and xor (bad) repnz jmp xchg insl pop pop inc ja aad sbb fwait lock je frstor shll mov lret mov mov jmp jle push jl push cmp nop sub or popa cmp arpl xchg mov inc imul cmp cmp adc es or fimull or pop xlat sbb push cwtl sbb test sub xchg cmp jg xchg lods sbb icebp repnz xchg nop sub sub add cmpsl sbb leave cmp mov movsl dec in rorl and cmp adc xor xchg (bad) mov sbb leave in push cmpsl or dec sub enter dec adc ja mov les out pop xor stos add sub cld stos xor inc jno aaa movsl cmc les mov sahf push insb sbb and fmuls leave out fwait clc xchg inc add jl loope sub nop shrl xor mov jp fdiv cmp mov lret dec xor enter fwait xor jno in dec jge rcr loopne insb sub pop add adc ss push push xchg cs lret jecxz (bad) imul lea jnp mov cmpsl (bad) js sub add insl sub out test mov cwtl xor sub pop sub lods ds cmp jge xor and aad pop sub xlat int3 fcmove xchg or pop sub ja mov push in sahf imul mov adc or mov sub and sarl sub mov sbb dec loop sub mov push lcall sub and xor sub andl pop stos push sub inc inc sub cmp adc adc push scas mov pusha inc mov sbb in ret dec icebp sub outsl sub push sbb mov dec push pop lods and xchg aam sub inc mov xchg movsl lret or mov xor jge dec sub fyl2xp1 pop cmp lods test bnd (bad) ficoml sub or dec jle inc cs popa xchg sub push dec decl pop and xchg aaa mov sti sub xchg push (bad) jbe xchg mov mov js cmpsl std pop add nop ds mull movsl sub ret adc sbb test addr16 insl push sub rcl sub dec int3 mov rolb and iret les jge and movsl xor dec in sub inc or mov dec pop fmull fistl icebp fwait lret adcb sahf sub push imul sub test pop push scas leave mov xchg xchg into or leave (bad) in not sub push mov cmp (bad) mov cwtl leave pop cmp int fcompl jns fnstsw imul pop cvttps2pi outsl push (bad) dec shrl addr16 movl leave sbb pusha xchg daa cmp push stos (bad) stos xchg int (bad) enter mov leave popa push or jmp mulb cmpsb shl stc and push enter or (bad) mov ss sbbw fsubs pop cmp daa (bad) mov jo das xor dec cmp lock jg or aad fwait inc stos push xchg jb leave cmp mov cmp adc int cmp jno push jne (bad) jnp rorb clc and lcall or mov ja andl inc jbe frstor mov pop imul or cmp push inc scas cmpl aad xchg add sub sbb pop insb leave std xchg dec out outsl fcompl cmpsb out push inc aas and mov fsubrl clts push xor mov sub sbb push sbb jnp sbb mov dec pop and or adcb mov inc (bad) sub jecxz bound mov adc stc mov loopne adc lcall icebp gs jle imul (bad) push (bad) jp adc stos cmp adc mov push scas adc test (bad) or mov icebp sub adc or and adc std imul cwtl push sub imul push push test or add jl rorl loopne add dec fdivrs outsl repnz dec xchg or dec pop xchg jb fwait dec (bad) pop test mov push cmpsb in push pop add popa sub pushf add movl mov pop adc add daa jb xchg push movsb or fwait loopne cmpsl leave dec mov or sbb scas out xor stos push int mov and (bad) mov mov inc dec int push push jl (bad) jmp xchg add cmp js loope adc leave xor sub sub or jge mov xor in xchg mov sub push imul xor (bad) push pop push jno cwtl xlat sbb cmpsl push mov fstps into in or cmp cmc gs ss pop mov lcall scas and pop jne out pop lock testb in test inc cld mov jae data16 imul enter sub inc mov sub xor jnp cmp inc sahf lods sub adcl fisub sbb orl add sub bound ljmp test add lcall test jle addr16 xor mov aad mov or mov and insl out fadds cli ss sub movsb (bad) jp sub mov xchg sub jo sub out mov dec dec (bad) mov fistpl mov push add sub adc mov or les sub lcall adc in or pushf mov pop and mov aad movsb and and cld dec test inc es imul movsb nop jae rolb mov mov lods sub jecxz ds (bad) pop sbb sub movsl (bad) xor outsb std lret in cmp sub (bad) out pushf sbb mov push and mov dec pop cmpsb dec adc je test call and sub fsubr lret sub add pop sbb xchg sub push stc dec xor mov sbb sub insl sub bound mov je push dec stos movsb loopne loope out out jnp jo mov in incl and ja fistpll insb loopne jge inc mov cmp dec test or (bad) out mov test testb mov fs popf fxch sub push data16 push adc and int3 mov sub repz (bad) jae xor cmp jmp jmp cs dec enter jecxz (bad) or xor sub rol push jp notb jmp cld push ret add push imul int3 lds adc cmpsb jnp (bad) out test test sub add lret fwait stos mov cmp sbb push bnd ret xor and mov jge pop push out adcb mov inc imul call (bad) adc sbb arpl mov leave adc dec xor adc or jl mov bound add cmc outsl cmpsl jno cmp mov pop cmp pop pop mov pop sti pop int out nopl fcompl jmp mov movsb (bad) jb mov push add jo inc adc mov ljmp popf xchg add sub shrl ljmp into stc or sub leave push subl lods cmp in fcoms cmpsb push jo pop pop or add push inc mov icebp cmp and mov xor push jb cmpsl mov leave in lods lock xchg adc adc ljmp repnz leave inc inc mov dec add inc jb sarl or cmp mov mov xchg insb ficoml sub dec ret push stc cli lahf sbb xor jne insb xchg in ss push cmpsb hlt mov sub jmp scas jecxz cmpsl mov ja mov imul cmc out loope lods push clc sahf lock xchg arpl aaa xchg add sub jns sub cmpsb xchg or ficom xchg mov mov das gs sub jns das jne data16 outsl roll out fs into cli lcall or sub xor sti adc ss xchg pop xchg pop dec sbb jl mov sahf mov lods push sub out lea jo xchg out mov fidivr js daa fldt mov sub sub add push cmc pop cwtl fucomi mov sbb idivb (bad) xor fidiv stc jb ss adc sub test push push push mov inc dec jnp xchg mov and pop jmp xchg add sbb pop sub jae sub pop stos cmp inc xor subb xchg jecxz and cmp sub out sbb pop push adc add es test mov inc push pop rcl and movsl adc (bad) mov in push and dec sub xchg mov adc mov mov and in sbb jne std push xor jge sahf lahf or aaa leave push lret add push orl jp mov mov cmp loop pop sub and mov pop mov pop popf mul push (bad) adc mov fnsave sbb fwait lcall pusha in sub fcmovnu mov mov sub pop jo or adc push fsubrl xor inc mov clc cmp push aam mov xchg repz subl test or sub or push (bad) test and jmp out fdivrl cmp loop mov call xchg mov (bad) pusha out sti push call dec sbb push sub fcoms data16 or and test jne test sub push or cltd xor leave ficomp pop decb jmp sub lock test inc (bad) dec nop mov mov mov xor xchg add addr16 mov sub xchg jg out test add aas mov loopne cs movsb add sub dec jb jbe inc sbb sub cmp fwait push call in push and rcrl push and inc sbb jmp mov icebp push out loop out xchg adc sub les icebp (bad) movb loope and pusha and or in dec sub bound jbe or leave pop dec movsl daa subb or pusha push stos test ljmp jle jae outsl or loope daa and mov xchg push test sbbl inc (bad) fisubrl fsubp jne daa dec sar es push ss rcrb shr mov sub jmp inc div push dec je xchg shrl fmuls callw std sub fwait js,pn mov ss repnz lock aaa (bad) mov sub scas das mov movsl cmpsb sub jb jb fwait xor jp fsubrs fisubl (bad) inc cld rclb test pop mov push mov mov pop psrlw (bad) aaa xchg clc into dec sbb and sub addr16 inc sub xchg lock imul cmc cmpsl jp mov cmp in repnz cmpsl jmp sub pop or (bad) negl pop enter adc sbb inc cltd mov lods sbb add sub imulb iret sub fcomps jl xor inc in xchg sub aam jo pop sub adc xor ss mov pop loope bound jl loopne stc jb push push jo inc test imul or adc jns jmp xor ljmp inc test cmp (bad) cmp fldcw sbb mov nop stc pop das pusha mov mov dec sbb push jb adc orl xor jbe mov sti pop int addl rcll jne xchg mov dec mov mov aas inc pop add mov push into xor add pop loope inc movsb push cmpsl aad ja (bad) dec imul in sub push add js add dec or sub mov (bad) or xchg test adc cmp orl enter add ja sub imul addl push lahf mov push shl fcomps push adc adc cmpsl cmp adc xchg aas xchg das pusha int pop sub and movsl or aam dec pop rorb inc les inc inc jp movsb lret cmpsl pop cmp into jp xchg sub pop int xor lods push dec lret int push cmpsl das addr16 aad pop and adc lret out jo fidivl mov (bad) mov test cs sub xchg xchg (bad) sub push push sub mov mov (bad) xor das outsl mov loope pop ficoml mov ret push bnd pop sub cs lds into jl dec pop shlb ss push movsb jnp lret cmpsb movsl add ds lret dec sti push push push sbb adc jecxz iret cmp xlat icebp cmpsb adc retw inc adc xchg stc pop lock and (bad) jg out inc dec (bad) dec or xchg pusha enter fsubrp sub lods inc loop and daa cmp imul loop inc or xor sub gs (bad) decb mov or sbb fiadd adc xor icebp fnstenv cmc (bad) sub (bad) fisttpll sub stos push outsb out movsl sub add bound lods popf movb fwait sub jb (bad) xchg adc adc (bad) cmp mov jg cltd (bad) push into sbbb xor push div (bad) sub jp xor mov push fcompl mov add in (bad) push inc imull xchg ds movl mov daa pushf mov pop adc ja jg sbb push jb pop lods mov movsl aas sbb hlt pop scas sbb inc sub aad or subb and sahf test mov out cmp fs xor or mov cmp mov movsl fsubs sub and add sub push jbe jb and and pop es jecxz add addr16 jns jle loop or dec adc ljmp ret xor mov xorl mov mov (bad) mov xchg test or sarb ret mov or sub mov icebp pop pop jo sbb mov or xchg daa xor in inc iret nop pop lock sbb cli sar xchg daa outsb fs push rcll movsb out lcall mov sub inc movb ss out (bad) daa add loop or aas sub mull pop fidivl cwtl unpcklps pop in mov sahf gs pusha (bad) in sub or dec ret push das loop xchg cmp bndldx push outsb inc insl cs xchg push (bad) cwtl mov pusha out sub cmpl push fs or jg js xchg and dec cmp test jmp nop (bad) aad pop mov sub adc cmc cmpsl xchg adc int mov and or push push pop mov dec (bad) fdiv inc sub jne cmp xor sub fild inc xchg lret hlt xor bnd jmp cmp scas sbb jmp ret mov dec (bad) stos push sub aaa nop sub mov mov pop jmp xor fmuls cwtl cli ficoml cwtl add push pop arpl loopne mov jne xchg mov cmc add and xchg iret cs je or cs fiaddl les fcmovnu fnstcw insl ds jnp scas fwait pushf cmp gs sub (bad) inc mov aaa sbb daa xorb jne sub sahf subl inc ss sbb fisubrl fdivs xchg xor in sub scas xchg iret data16 sub (bad) sbb or out sub mov mov daa xlat jb ss mov mov jo add enter or pop or sbb mov jnp mov (bad) cs dec pop insl (bad) popa imul int3 add jb idiv lods js pushf popf mov jg cmp jnp inc mov mov pop addr16 adc outsl jp dec sbb sub jl fildl mov push sahf pop ljmp or and daa jno pop sub jl cmp roll push stos jge imul xor adc push jno and inc repz cs jb or sbb xchg sub test fcom js out and sti xor lock (bad) push out xchg mov inc (bad) push ja,pn or fwait cmpsl sbb jno push clc nop sub inc or and cwtl cmp int cmc bts push daa hlt lds (bad) sub mov mov adc push mov dec into push jmp outsb and xor push loope rcrb int pop mov jle std mov and gs fstpt repnz xor inc (bad) and add mov popf cld dec fdivl leave fsubs sbb popa int aad lock sub notb sub xorl mov data16 pop cli xchg out xor mov les repnz lahf sub and imul ss (bad) cltd mov or lock sub scas (bad) jae cmpsb stos ljmp out add push into mov jp inc lods sub adc outsl aas jae in sub sub repz push push cmpsl adcl pop lahf and pop mov (bad) cmp rclb add inc xor negb mov mov mov xchg out sbb xor mov js mov in dec mov int loopne pop sub leave sbb fldenv out adc add subl daa (bad) ljmp std stos sbb adc push jnp mov mov pusha push shrl mov sbb xchg out mov int inc cltd cmpps inc dec adc add in cmp ss imul les aad (bad) pop sbb or or dec jge push dec push cwtl dec leave cltd xor addr16 xor cmp inc imul stos (bad) aaa test add fcmovb das push push gs stos cli push inc es xchg xorb and (bad) test jp push mov shrb and loopne jp sbb cmp std xor je jno jecxz sub xchg inc and push (bad) sub lea mov pop mov int xchg cmp cmp in mov pop in pop into push aas or call orl sub jecxz or sub lods sub mov (bad) xchg pushf inc bound cmc dec dec andl outsb cld dec pop inc pushf lods xchg mov push lahf pop lcall inc push arpl sbb out jbe adc dec lds roll or inc mov js loopne xor sub aaa sub adc sahf dec jb std fneni(8087 sub and (bad) jb imul rorb push sub push or sar sub test out data16 mov sub sbb (bad) jge cmpsb push sub cmp loope (bad) mov jge lea pop push enter mov cmpsb and mov mov or xor sub int mov ffree leave bound (bad) jge loopne pop adc fistpll or test jnp sub (bad) lret pop test and in ja popf test mov test add flds test cmp inc sub and (bad) dec pop orl cmp push sub pop cs jl add cmpsb add jae,pn ss fnclex into jmp sbb sahf sub push cmpsb es sub sarb test shrb loopne mov repnz add rol sahf test pop jb sub test sub dec mov ja mov sub cmp mov fdivrl sub call mov push ljmp pop or or jmp inc sub and xor out adc pop mov cs push add shr aas jle iret mov jmp sbb js cmp xor fisubr inc test xchg cmp scas cltd stos cmpsb aam fnstcw sub push cmc ss adc cmp fs inc ucomiss pop mov sarb daa leave sub (bad) cmc ljmp push lock pushf ds mov xchg adc inc les outsl add arpl mov cbtw xor xchg dec adc xor sub dec lcall jge push pop cmpsb aad ficoml (bad) movsb adc sub out (bad) jo pop test rcll mov cmpsb out js,pn xchg add mov and or jg push fs push or faddl mov cmp icebp arpl push push push out push push cmp adc or pop sti cs or daa cltd int dec adc jl arpl mov fsts jo and cmp psrlw and add or jg inc or dec adc loopne fsubrl sbb xor push push mov sub dec gs push out mov adc sub pop cmp xchg dec mov data16 xor sbb dec lret test insb cmp (bad) mov push mov clc aad push xchg fidivr sub insl (bad) xor cmp xlat or lock pushf mov and mov std push movsl stos test pop jns int3 adc cs sbb fucomi cmpsl lret dec ret outsb (bad) insl pop push cltd sbb mov rcll push scas sbb sub push jge pop sub mov jo fimull jnp sub outsl data16 pop bound lret aas js pop push mov cmp jmp movl sub xchg aad jl rolb push pop push scas add das jmp sub frstor mov mov fcomps xor movsl test ja adc sbb sbb sub mov mov mov adc push push fcmove sbb lahf cmpsl lcall gs popl xor xchg mov dec decl inc fisubl (bad) (bad) pop test xor (bad) or cmc sub pop xchg ret cwtl jo je in push cmpsl inc rol fdivl aaa sub sub jmp inc add imul leave leave (bad) or mov mov mov and inc sub ret (bad) push xchg daa or push add pop (bad) ja adc repz jne sub pop push (bad) dec fnsave sbb jl cwtl fidiv jns sbb inc sahf xor fldcw jae in jbe sub xor add sub add or xchg sbb mov rcr test ljmp xlat (bad) adc popf pusha sub mov mov or dec sub mov and sub xor jecxz and add jnp push (bad) push push cltd loopne xlat adc dec jl ss pop (bad) mov push repnz test xor pop inc das push cmp movsl sbb sub imul sahf sbb sub movb push notl into leave sahf add ss loopne int3 push cmp push imull lods sbb int pop es mov imul adc (bad) sub inc pop jne add ds dec jge loope mov and mov jbe jb lds arpl outsb cmp loop rorl adc jg jmp and test arpl aaa push clc sub popa cmpsb sahf sub and push jno mov lods and sub (bad) sub emms repnz daa mov dec jb enter jecxz xchg daa ljmp test push repnz push je inc add rclb pushf ret scas xor aad add int sub rcrl cs sub adcb scas mov (bad) ja mov jno movups mov pushf add dec decb mov das xchg or insl jne sub mov or sub or adc test mov sbb push sub in sbb mov cmpsl and or sub leave cmp cs ss (bad) jb dec divb in mov sub lret push call decb mov cmp and sub fadds dec xchg cmp popf movsl sub dec sti add jae xchg popa out and sub push sub (bad) xchg insl data16 xor sub pop outsb sahf xchg call push sub cmpsl mov add xchg mov enter mov lods test cmp pop ss cltd movsl inc add sarl ret inc push ja ret sub sbb lea out xchg fnstenv (bad) fwait sub push xor imul lahf jl int out data16 jnp sub adc arpl insl pop (bad) cmp ret push sub sub stc ljmp mov sub inc add xchg sub jo loop jle push dec aad sub sbb sub jnp jp sbb jg adc loope add dec xchg (bad) ret sbb cmc push xchg out arpl jbe push sbb fscale sub cmp lret jecxz dec (bad) out xor outsb adc hlt inc lds sub or sub pop ljmp pushf stos add inc cli into jnp mov sbb loopne mov push call notb jno push call ja xor xor or mov or (bad) mov sub je xchg mov les sub mov add push or cmp inc jno pop xor mov pop arpl push notb inc int cmpsl mov test jmp jp iret sbb inc leave fidivl sub sbb daa dec data16 daa mov in lods push addr16 pop sub cwtl int dec xor mov scas cli mov adc loopne pop stc push pop mov sub mov sar push shrl sub insl xor mov or xor mov nop adc or and sub das cltd (bad) bound std into push mov aas cmp sub add pop stos sbb sbb push cli push test jmp mov ss das outsl sub fsubrl jp sub cmp pop pop (bad) aad cs es jge jbe pop fisubr sbb sub outsb les fbstp sub pop and mov call xchg mov push unpcklps xor push xchg add adc cmp sub sub sbb fisttpll das stc inc mov pop in mov outsl mov mov mov (bad) clc popf stos jmp sub in out sub mov lret jl push jns fldcw inc pop sub cmp mov xchg and sub ss jmp aaa adc scas push pop cmpsl std cmpsb jl mov push push cmc or add inc icebp inc xchg mov int3 lahf jo arpl sbb sbb push arpl enter xor jb je adc addl pop mov inc fwait xor dec sahf les dec addb cld or mov dec xor inc jb data16 ficom push in fs cmp push add sub fsubp (bad) repz dec sub les lods sbb xor sub ss rorb std xchg int3 fldt jmp in sub jbe mov in jge loopne subl fnstsw or ret mov jb stos inc mov sub push jns sub sbb mov dec jl mov push mov dec sub fild inc sub dec or gs jmp (bad) aam xor movsl mov mov fwait dec rcrl sub (bad) cmpsl je fildll iret push imulb jb sti stos xchg and aad adc lcall popf pop mov pop cmpsl adc outsl mov add inc push loopne movsl pop lods out popa add inc inc pop leave lods push adc cmp lock scas fadd xor jnp sub cmp enter sub mov xchg enter out xor int imul daa pusha push pop lahf dec call loope int3 inc xor cld push pop push (bad) xor int cmp dec xchg leave add pop gs xchg mov sub add rorl mov shl ret int (bad) mov call push mov dec adc mov ja or xchg in cmp sahf adc cmc xchg (bad) and scas cmc idiv jnp outsl adc test icebp inc adc mov sub push notl leave test sub xchg sarb (bad) stc into movups mov test push ficoml push fistpll xorl jg ds nop (bad) xor mov out movsl jl jecxz repnz cmp psubsw pushf cld or sub shrb das xchg mov or and xor je daa cs popf mov xor lods in inc pushf test test mov rcll scas icebp call popw xchg push (bad) and je push fstpl or fimull nop fwait sti fsubrs in dec push jnp (bad) xchg sub dec stos or add (bad) or push sub out adc (bad) mov (bad) imull or ljmp aas cmpsb jge sub mov shll sbb adc out xchg fld jmp sub or stos adc sub aas lea icebp cmp adc cs mov pop fsts sub les mov sbb inc test push hlt sarb lret pop jmp imul mov dec andl push pop nop leave (bad) popa adc (bad) psubsw and push dec les push test xchg dec cmc jmp jae js sti rorl daa dec add rcrb pop adc xchg (bad) sbb cmc jno push dec fpatan jge in icebp cmp adc jno mov adc jns lods gs sbb jnp enter pop mov sbb sbb negl je leave sbb test and int3 add cmp jle cmpsb lahf aam ss sarl into sub dec push inc data16 mov int3 pop inc cld cmpsl out mov mov sub sub jo sub pop jmp xchg jmp in fisub leave dec adc pminub mov ret and sub xchg push rol jb xor mov mov sub cs or sub inc inc dec lahf sbb jno loopne cmpsl cmp and dec scas cvtpi2ps outsb mov ret or and mov xor sub in push test cmp lcall or push add stos xchg sbb sub or push push sub aas scas sbb sub xor repnz or jnp dec mov sub adc (bad) das mov dec (bad) aas outsl xchg mov mov sub add cmp rol push ret mov inc or push shr lods fwait test xor iret out pop pusha (bad) jns and sub (bad) dec adc std lea iret test sbb test (bad) (bad) dec cmp sbb adc sub or sub in mov jo sub subl into cmc or cs (bad) dec jp mov mov xchg ret das xor out and dec jecxz xchg sub xchg cwtl enter sbb mov movsb cmp nop sub or (bad) sub push idivl sub ja (bad) push inc adc daa jg cmp push push push (bad) push xor jge sub xlat stc sbb das mov (bad) inc rorb xchg rorb mov or aas mov pop mov jbe gs sbb mov enter ja inc aaa and (bad) jae out fistpl xchg or sub xor pop out cmpsl repz sbb xor pop cmp mov pushf or or add mov hlt out push xor call daa xchg lods pop sub aaa addr16 sub lds push adc dec (bad) pop sub fldl inc cmp fwait add mov xor sub sbb push les gs fcoms jg cmc xlat or jmp mov sub outsb fild ret jp pop lock (bad) jne pop fdivrl stos fldt pop adc xchg pop bound orl xchg imul out outsb push insb and mov sbb dec dec insb std leave sbb inc testb push cmpsb ja inc sbb ss or outsl scas xchg cmp rol cmp leave movsl xchg call push cld sub and lret mov into sahf lods sbb jg sub mov xor int3 jno loopne mov xor stc mov or sub sahf imull popf test not gs movsl fsqrt mov push mov sub jl push sub jge ds mov inc dec inc mov sub out enter mov inc and cmpsl jbe xlat mov add rcrb mov mov lods mov cltd push jnp adc cs jae (bad) repnz or call nop jge mov mov pop fmull icebp mov jecxz imul das adc aas insb (bad) (bad) into shlb sbb popa jmp add inc (bad) xchg test mov rclb lea mulb scas fsubrp sbb add or popf fdivr daa loope pop sub repnz add into cli rcrl mov cmpsb and sbb add cmp fwait sub (bad) (bad) fist outsb daa vxorps iret push dec inc lds sub mov mov addr16 push subl fldt daa (bad) mov pop inc (bad) pushf sbb dec pop push jle fdivrs pop or test out sub mov jmp xor or xor sub mov mov mov xor push bound push cmpsl int insb ret popf sub dec (bad) daa and out pushf mov or out sbb push addr16 push ficoml fiadd jbe aam nop mov adc loop dec jecxz lahf pop cli sub mov mov or outsb mov imul adc aaa arpl lret cmpb add enter sub dec add icebp push (bad) adc or loope test bound js cmc mov fcmovb addl sub pop adc aam dec inc and dec xor gs mov inc rcrb push push testl bound sbb sbbl and cmp inc test lcall fnstcw xor mov pop ljmp aaa (bad) sub mov sub popa call test jmp pop popf xor dec cs and mov mov jl int pop mov sub jge mov add fwait mov push push ret sub and call mov mov les dec or add test pop push mov mov jbe cs or xor lcall dec jl dec sub iret outsl mov lods repnz or push push sub imulb scas xchg pushf mov or or xor xchg sbb mov rolb add gs sub xor or ds dec (bad) lcall or ret (bad) xor push mov (bad) or imull sub lea dec mov jp fcomi mov mov pop sub xchg xor mov add cmp sub sbb sub fsub add xor out dec std push int scas cwtl sub xor test mov mov popf cs dec leave sbb (bad) sub lods cs cmp stc (bad) push xchg sub mov (bad) sbb xchg cmp bsr mov outsb scas add add mov outsl in movsl and sub sub data16 (bad) popf les push jecxz push jns inc mov pop sub xchg xchg icebp sub mov cmp out cmp sub xchg cld sub repnz out fildll pop pop cs inc inc pop and gs leave repz adc jns xor (bad) pop cs test lcall in dec out mov mov imul sub push or mov xor push sub adc out fistpl lcall jns shl push imul andl fsubs aad push and insb ror sbb lcall xor add leave push dec and xor mov call in xor movsb out push pop and add mulb fcomps out cmpl jno add push sahf cmpsl loop mov cli pop and (bad) dec sbb xchg sti xchg movsb mov (bad) rorb stc jb and cld push inc pop rolb fucomi (bad) ja sub mov add loop inc out andb sub out (bad) cmovo pop sub fsubs or xchg xchg divl sub dec jg sub xchg rdtsc sub inc dec ret sub test lods mov stc (bad) aaa jl sub fwait pop cs inc and sbb ret (bad) or push add test cmp sahf and jbe into jo cmp (bad) mov push mov movsb sub (bad) or adc mov inc sbb add aad loope mov les and xor fadds pop xchg jg mov xchg in mov push add pop ret sbb and sbb jmp aaa cwtl inc cli nop sbb leave mov cs cmpsb xor imul fstpl xor push or xchg cld addr16 sub xor mov sub mov mov jbe cmp adc test arpl pop jbe and mov mov mov sub cmpsb add cld sub dec inc (bad) arpl push (bad) xor add mov fucom cmp sub cs or cmpsb (bad) jne xchg into rorl fmulp xor (bad) xor xchg loop add sub popa mov dec mov and pop ljmp out inc sub (bad) int3 sbbb les mov dec loopne or pop sub jne pop out lcall push fmull and nop sub and sub lahf out mov xchg dec sbb mov cmp lret iret mov xchg rcrl sub and or out loope mov ss jecxz in (bad) jmp aam dec add xor mov xchg es sub push adc cmp loopne cmp xor pusha movsl ljmp sub mov push dec dec test push pushf sub mov insb in addr16 out fidivl cmp sahf test adc fstp in jno pop mov out mov ret add inc jnp imul sub sbb inc cmp cwtl jnp pop and es jbe push mov adc sub out popf mov sbb inc jg or mov add ljmp dec popa push jns push sub mov xor push xlat jge cwtl cmp jl sub rorl mov sbb xor add rolb jo jnp mov sub adc push jmp dec jb sbb lret xchg pop mov ss push ficomp jae lcall call movsl cmc cli loope add sub jp out das mov cmp stos decb push idivl lret outsb xchg repnz xor mov sub inc mov out jl pop mov loop (bad) in pop cmp pop ljmp adc sub ret jmp loop jecxz fwait cmp divb push cmp xchg flds dec sti aaa mov sub idivb xlat sub loope xor es sub mov sub mov aaa bound (bad) leave cmpsb sbb dec dec lcall xchg cmp mov outsb imul into cwtl sub sbb icebp repnz mov into cs in loope jnp imul inc sub icebp pop les sbb fucomip andl loop mov add lret sub roll lods je sub lcall movsl bound pop cmp stos ljmp les sub inc mov gs scas xchg sbb push mov or test lret std jecxz jbe outsb jns pop mov pop dec leave sbb sub ss ret call cmp js mov rcll fildll push inc xchg pop pushf int3 xchg cmp sub xchg pop mov andb ss hlt shrl arpl and mov out aam ds fwait pop shrl cmp je push leave mov push aaa mov push ds loope sub (bad) jbe and data16 cmp cmp int mov nop cwtl fnstsw inc addl sub movsl push mov mov outsl pop das push ficompl and sub and sub sti mov or adc (bad) loopne ret or lcall sbb jne add fidivl scas mov sub mov xor loopne cmpsl fcoml sub and add adc xchg dec in pusha jmp xchg mov (bad) icebp dec mov xor int sbb jne sub aas mov divl push sbb sub sbb xchg mov xchg sub pop (bad) (bad) add inc mov pusha xor push push cmpsl push push dec call cmpsb sub or sbb int (bad) jbe aas xchg push lock jne pop sub test xchg dec ljmp add sub and mov add icebp add xchg inc daa mov out popf sub mov add and sbb pop loope push sub stc mov dec test or or fnop push popf test imul je sub out hlt aas (bad) int xchg mov cmpsb stc (bad) leave repz add loopne xchg sub jne mov mov and adc rcll jmp sahf mov int3 xor scas test fnstcw push dec adc nop and outsl hlt xor and out cmp adc jnp adc sahf mov xor and aas mov aad sbb fldt repz scas stos orl es inc pop sub pop rcrb fs sbb cmpsb aas or rcll cmp jecxz lcall dec rcll nop rclb imul test jmp mov sub push (bad) jle push rclb rcr jb sbb (bad) xchg sbb xor adc sub jecxz add pop sahf sub sub sbb pop inc cli inc mov iret jle mull adc orl inc ds (bad) je and (bad) fmuls inc addb rolb shrl cmc iret test xchg je add dec push xchg ret call push ss mov fnstsw and outsb ss cld lret jns ret jbe icebp mov mov dec (bad) or add ljmp imul jbe in mov lcall add (bad) jno xchg cmp call loope cmp xchg sub rclb cs push aas mov xchg jae enter rclb mov outsl xlat sub pop jmp mov (bad) imul push js cmpsb scas fbstp addr16 fidivr or inc test lcall add lods stc adc (bad) data16 inc jb inc dec (bad) call cmp (bad) fs bound movsb jg and call mov mov das mov loop jp mov sbb enter inc (bad) mov inc xlat enter cld adcl leave std mov aaa int dec adc je xchg scas cmp loopne ror out aas cmp sub jns pop mov std loop iret out lods mov pop leave adc mov add push cmpsb xchg aam fnsave pushf lods add pop inc inc sub cmc sub pop insl pop mov mov xor movsl jle push cmp or mov addr16 outsb shrl in cmp aam inc mov sub xor sub ds or adc (bad) xor jb add xor lret out out sub mov dec add sti cltd or pop sub mov jg and sub repz and push sub cltd std shll sub fdivs (bad) insl loop sub sbb pusha (bad) iret (bad) jae inc cmp inc ret xchg jns out (bad) push lahf pop lods or push cmp enter pop cmc ret push sahf shrb adc test ss test lahf and xlat fcomps test ljmp lcall cmp cmp or push (bad) or cs sbb test xchg sti enter xchg scas das fwait pop jo xchg xor sub fidivl sbb and repz out and loope bound pop jne nop push xchg jmp scas pop mov js sub lods push sub in inc inc fist xor xchg mov test (bad) and push dec jbe mov sub fbld int imull leave pop out dec mov addr16 cmp sub push ja mov pop mov push mov jmp int3 sahf fldenv push jmp ss pusha pop les pop into jbe adcb xchg xor xor fs daa xchg add add mov or sahf sbb jo and aas push mov inc cmpsl jns loope cmp ret adcl mov pop mov movsl or add inc cmp xor dec push inc cs jb cs inc jp inc (bad) xchg enter pop leave push push sti jp mov loop sub js push cmpsl lret out add loopnew std and cwtl dec and sub jo int3 push data16 les mov out mov lahf add mov imul push sti (bad) mov test xchg sahf add cmc icebp dec loope xor or xor pop sub push xchg in adcl cmp or pop adc ret imul lcall dec cwtl leave (bad) sti xlat (bad) sbb (bad) pop inc add push loopne xchg stos mov xor pusha addr16 push push xchg test dec pop cmp iret or popa in cmp out inc stos cltd (bad) or and jae dec pop cltd out std in jo pop leave mov and adc cli push add sbb sub shl sub loop div mov rcrb test jnp push (bad) mov inc pop jp mov daa sub (bad) test ret subl add sub lock (bad) push and push sub rclb dec sub in dec add bound mov pop or insl stos mov outsl xlat sbb js stos subl lea xor sbb add out addl push pop mov decb mov loope shl out (bad) pop jbe sub add stc ss adc orb and call nop out loop pusha test out inc cwtl sub pop or call sbb notl (bad) pop adc inc inc or sub icebp mov inc in jl pop pop sub xor fisubr icebp stos gs xchg out ds lods in test (bad) fidivr mov ds adc inc fistpl sub (bad) jne adc xchg pop cmp dec add xor xchg push xchg lods inc adc mov cld (bad) aad dec cmpxchg and mov and ss ret ja addr16 fsub xlat mov (bad) and pop jmp ficomp jge leave movl rcrl data16 dec xchg or nop sahf push pop popa sbb int jnp loop push adc leave outsb xor sbb cmpsl pop and ss adc scas fxch incb pop or or mov jp aaa test mov xor mov daa shl test pushf scas outsb ficompl loop inc sub mov sub enter jge int stc ljmp sub sub or add dec (bad) jmp (bad) jno jg loop xor cmpsb or adc sub in ficomp or cmpsl inc pop jmp lock mov mov push xchg dec add cmc shrb mov test sub out (bad) sbb pushf in pop and cltd xor sub nop xchg sub dec mov dec ret push jb scas out sbb (bad) sub cmp mov imul lds adc das lcall sti or sub outsl es mov sbb push test adcb test cli int3 stos sub mov fldt lahf cs xor test shrl lock push cmpsb mov fwait xchg mov jmp lods jo icebp jg popf cmpsl cmpsb jns xchg xor cwtl or push mov xchg sub hlt and mov iret jmpw icebp (bad) loopne cmp sub jo pop adc mov fdivs mov (bad) jg mov lcall mov inc mov cmpsl (bad) outsb mov fisttp inc adc add sub mov sub leave js add sahf arpl sub sub dec cmp mov gs addr16 fmull cli push sub and fistpll mov test dec sti cs imul jmp cmp dec fwait dec push sub sub or cs sbb dec fnsave sbb xor lret fstl push jae and lods pop xor pop je loopne js xor mov (bad) push leave push cmp sub jae xor adcb add sub push dec (bad) mov aas mov xchg dec (bad) sub iret lods sbb cli sub out pop sbb daa sub call add pusha cmp ret mov jp aaa loop pop xchg mov addl xor fisttpl lret pop push jno mov lock sub cmp daa pop xor mov (bad) rcll sub push test sub dec test fildll bound insb (bad) inc jb push jg aad loop arpl push cltd push movb lock dec fsts xchg pop (bad) jbe (bad) movsl and notl test sub out fisubl sub int3 movsb pop pop lock aas or push je sarb dec mov jmp bound add sub (bad) mov dec inc test ds mov pushf pop xor sbb call jb xchg data16 lcall add enter jbe or cs sub sub sub (bad) sbb std (bad) cmp mov out or sbb sub test call lds xor pop in repnz cwtl jbe sahf in dec daa pop dec pop dec lods inc sub xlat imul sub insl stos (bad) sub push fsubr adc rorb pop out aas dec push mov cli andl leave mov out arpl and jne std dec mov outsb mov sbb xor push inc sub lahf xchg sub sub xchg pushf std outsb insl adc pop out dec xchg adcb sbb scas int3 sbb mov sbb or xchg and (bad) fisttp dec aas (bad) cmp loope adc xchg fisubr xor mov out pop subb xchg pop hlt mulb or inc mov add ljmp (bad) imul and mov sbb hlt sub mov jp xor dec cs jecxz jo xor sbb lret int3 sti cmp mov mov add jno and mov lahf sub pop inc dec inc jl fildll mov jnp (bad) and adcb sbb sub (bad) adc fstpt sub mov in xlat mov mov lcall out dec cmp and xor subb sbb push mov insl mov call sub pop bound psllq inc sahf or fidivl jbe testb xchg mov sub sahf std fwait xchg push (bad) dec pop test pop movl cmc aam movsb sub addr16 mov cwtl cmp dec add js push xor data16 and es dec dec jle or (bad) xor repz insb mov inc push and dec jecxz cmpsb pop xor xchg test mov rorl xchg dec push icebp sub (bad) rorl lret xor ss repnz sahf inc mov stc aaa out dec out rorb xchg push fildl aam fldcw push loope pop sub fmuls (bad) jbe out imul and ds (bad) out xchg sbb jge loopne mov xchg cs adc ret cmpsl add ljmp je inc xchg and mov sub sub in fcom lods mov xor mov ja sbb sub ds lcall pop add sbb push sub mov mov xchg out add movsb pop ss sbb rol mov push icebp (bad) pop add lea mov and sub add (bad) cs out int3 sbb sub or sbb sub int sbb subl ss ret bswap mov xchg mov fimul sub inc aam mov loop repnz lods stc repz cmp cmpsb jbe sub call xchg mov push dec lods sbb dec mov test loopne test mov pop fcompl dec push (bad) dec pusha pop xor das mov inc gs xchg sbb cs add out (bad) mov inc movsl (bad) lahf mov (bad) enter mov ds pop inc test or push push mov cmpsl xchg adc bound adc jns je mov jle mov xor sti pop incl sub or in pushf cmpsl fsubp imul jecxz sub jmp jge stos lahf push sbb pushf fildll ja pop mov inc test out mov movsl xor or fildll sahf out jo pusha xor imul jmp xor sub inc mov and lods push into stc cli mov in cmpsb daa stos pop xchg js jae ss pop lods fs test popa sub sbb dec cmp cmpsb fsubrs adc dec mov xchg sub scas cltd fnstcw aaa and inc shlb mov int3 mov mov jecxz dec mov xor dec es add iret cmc aaa mov fildll xor test xchg push mov sub jnp dec loope sub int3 add mov inc subl rcpps add test stc loop sub fucomip (bad) stc mov bound stos xor sub leave xchg push (bad) flds sbb mov aam push dec cmpsb loop pushf xchg pop neg test sub mov iret sub out jle ret in pop mov pop jmp add scas inc sub dec (bad) (bad) dec (bad) movsb test push int (bad) cmpsl and aam scas adc leave (bad) cmp fbstp and jnp push sub lahf out pop add lret cmpsl es xor test mov fwait sub (bad) and push sub lea test push (bad) out pushf rcll push mov jnp sub jl dec pop sub imul sub lock lds cld jnp push imul sub test mov adc test add (bad) scas pop add ss lret out and cwtl popf fnstenv out add push out fiadd scas push sub sub pop jmp sbb test push aaa mov cmc imul mov or sub call jne push add sbb pop icebp xor sub inc and pop pop fldt cmp into (bad) jg sbb dec mov ja jns mov inc sub jnp dec sub jmp inc test lahf cmp mov ljmp cmp add fcmovu inc das sbb inc call cmp sub insb mov sub xor cmp out bnd xor repnz in sub int cmpsl or xchg icebp pop pushf sub aam mov and jno mov jle nop sub notl repz pop dec adc sbb xchg xor push xor cmp cwtl add xor add inc cmp jbe enter xorl pop jle or xor gs out or push ss rcrb add stos sub xor mov xor adc cmpl dec sbb sub inc sbbb cmp jo xlat loop cs and cmpsb mov out fisubr ds data16 add outsl lock jl in jb ret sbb dec ja cmp shrl cltd mov jnp dec sbb cmp and test clc pop das mov into xor in cmp enter pop ret and sbb test mov xor cmp pop mov in es bound sahf pmovmskb sub js and sub push mov sub inc out push btr mov cs xor xor pop ljmp (bad) pop cwtl sub xchg mov mov (bad) sti in iret xor popa std jge rclb cmp mov ljmp lret push cmpsl inc cmpsl mov pop and sbb mov xchg repz push xchg (bad) ss xchg cs and shlb mov pop push test daa pop mov into sub pushf cmp pminub xor push int mov clc mov (bad) mov pshufw or xchg rorl dec sbb push mov lods sbb inc push pop dec (bad) jno xchg jge jns xlat cmpsl js xchg sub inc cmp push daa inc movl mov xor sub mov in shll ss mov test push sub pop and jns leave lods push cs xlat jo jno ds mov aas sbb (bad) adc mov shrb lret stc mov sub push jns jb je adc int das sub lods mov idivl ret pusha sbb cmpsl movsl sub stos jmp push or sbb cltd or jle xchg fwait xor cs test dec sub sub in jne fidivl mov orb addr16 mov xor imul or dec ds stos dec lds mov jo or pop cmp push mov loopne dec (bad) dec adc sub sub xchg add (bad) cs lods sbb push xchg sub subl pop push add mov daa pop cmpsl jb fdivs mov dec pusha addr16 cs xor (bad) hlt xor cmpsl xor mov lock and push push jbe out adcl fimull mov push in mov push sub dec xchg xor mov bound outsb cmpl fnsave xor sub clc mov cs xor and xchg cltd xchg scas mov xor das sarb push pop jbe sbb js sbb add sub flds xchg xchg mov repz shrb jp mov add mov jge enter mov loop inc (bad) cmp xchg aaa mov sub aas and dec ds push mov gs push jns adc sub pop loope aad leave add inc cs xor jne stc lret xlat xor dec jle mov jl fldl mov sub sub int or sub xchg movsb cmpsl push addr16 fadds into int rclb iret outsl and jno cmp leave dec dec add inc std xchg repnz int mov adc lahf bound jo out pop inc push jae outsl mov dec jmp jp movsb dec adc push sbb lret popf push (bad) out dec popa popf hlt sarb adc into test daa aad push or mov (bad) dec and pop or dec mov aaa dec jecxz loop add sbb sub and in sub arpl mov sbb and push cs dec inc je cmp dec pushaw add xchg push dec inc add faddl leave and std loope test fcomps int3 loop inc push insb sub push cmp dec loope mov or mov xchg (bad) fiaddl jp jle dec aaa cli ret pop mov arpl cwtl mov ds (bad) mov push jb adc push jle mov leave icebp hlt mov mov push xor adc sbb jp or movsb push dec lcall push cwtl sbb into push data16 faddl aad das cmp fbstp lret mov inc mov jnp sbb xchg scas fistl imul mov call mov adc jp lock loop test xor leave push jmp dec fld sbb jl fistp jb add or sbb cli loop sub xchg jg sub or add pop push cltd xchg iret xor xor int scas sub arpl mov sub int3 xchg push push add jg jb out sub lods mov mov leave jg and add or lahf fist push out (bad) mov in cltd xor jnp dec xchg in sub jg inc ds mov addl out sub daa (bad) idivl (bad) leave and lret sub push subl jnp es les outsl dec xor sbb popa test sub xor mov dec jle (bad) lret cld mov add xor xor add adc xor (bad) sub jecxz mov test jns inc mov inc inc out cli ret test lods mov sbb sbb sub add add inc daa sub outsb aaa ret clc sub mov sub add std arpl in sub int3 push mov mov xchg cmp sub ja test clc sahf add or add dec xor test push xor cs and sub pop cmpsl mov xor push adc fwait and aaa xchg or or sbb scas sub std shr loop jg sub lods and pop mov sub icebp pop sub in int3 inc inc xor xor clc (bad) (bad) int lods pop lods sbb test jg stc lds sub stos add pop sbb pop and cmpsl jp sub sti into fidivl jb push test mov push inc pop or push inc dec js cmp mov shrl xchg sub add jns add adc adc sub jno dec notl pop (bad) jmp jge stos sub leave sbb sub push sub enter aas out ret sub mov rcll cli and cmc dec sbb sahf std pop lods test lcall add test or dec pop fcomip pop fdivp imul add pop sbb inc outsl (bad) test cs scas dec scas jecxz push cmc cwtl xor mov cs pop test ss jl aaa test sub xchg jmp aad mov sub dec (bad) es pop mov sbb add repz hlt pop xchg repnz jno xor cmp out jbe lea mov add pop ja mov insl inc out andb sub fneni(8087 cs icebp ljmp push push adc adc outsb stos adc dec xor jge pop into xor push sub sub sbb jne push sahf push cs out hlt push lods stc inc xor int xor pop rcll sub xor (bad) sti scas sbb call inc in pop push mov insb ds mov adc (bad) jmp das clc lock imull aas xchg xchg mov sub dec sub aad je jb inc sbb push cs inc push lods into pop pushf loop xor lahf enter mov pusha gs xchg (bad) daa fadds sahf dec bound outsb add jmp gs push daa stos (bad) (bad) sub adc jbe repz out and cs or leave in int3 cmp adcb jb sbbl lcall mov rcrb dec ret mov popf sahf popf sub ret add sub jle std jae sbb jb ss sub call dec dec sbb mov xchg sbb jmp adc loope or repnz xchg cmpsl mov into sub inc mov mov sub mov inc (bad) cmc cmpsl or sub lret jmp sub jnp and mov xor xlat push imul sbb lcall mov sub jge int3 push test (bad) and adc dec or xchg sub stos push repnz jmp sub fdivl gs jo decb mov cs mov (bad) repz jo or aad test inc xchg pop (bad) sub inc popl sbb push cmp or fadd movsl inc clc mov out sub popf adc push adc scas mull lret add andl in and push jmp jecxz pop sub sti pop pop leave push mov popa ftst gs add out or stc sub pusha addr16 pop sub mov push clc xor mov cs and enter sbbl mov xchg adc mov cltd in test mov ficom xchg and sub and sub int or cmc ret cmpsb or push jae sbb adc add sub jnp dec enter call and add fisub pop out sub cwtl lret rolb push arpl xor (bad) movaps daa in dec test xchg jo mov xor xor mov mov imul push xor xor leave or mov orl ljmp jns xchg notb mov cmp mov mov xor dec or bound cwtl scas cmpsl push ret enter jp sub and mov mov or loope mov inc or cli mov add test inc pop (bad) jp aaa sub scas pop mov add aas mov jg ja jo or or push adc bound jge jno aas push push push inc fdiv pminub ss pop mov or (bad) sarl orb loopne (bad) dec pop test xor in imul hlt pop aam orb popf popl mov mov test sub push or ds cwtl rorb test fs lea aad sub mov outsl addr16 cmp loope insl sar std and lret dec push jnp test mov pop sub jbe mov lock sbb cltd cmpsl mov sub jb popl (bad) cmc mov popf adc xchg cs xchg xor add das mov cmp xchg cltd sub push sti inc mov ret fsubrl inc add popa pop cmpsl jae sub or sbb xor sbb jno daa xchg (bad) int fisubl iret sti sahf or pop cld mov add xor lret add in icebp lahf les rclb sahf xchg sub test mov stos sub mov sub cmp daa lds mov addr16 aad test aaa repnz hlt jmp adc jnp lds fs test test fsubp adc mov adc or sub xchg scas out mov addr16 sub add cmp cmpsb lahf pop call fsubs sub dec cmc fwait orl ja mov jbe add cmp test call xor inc mov lcall jb cld xor cmovg dec lcall imul sbb test cwtl add add das push add ss xor ss loopnew and dec xchg in call cmpsl inc dec imul mov xor cltd aaa lahf sub ljmp icebp pop pop sub stc xchg addr16 out inc fisttpl adcb mov mov inc or inc psrld push out (bad) sub xor std mov daa (bad) cwtl cltd arpl sbb sbb mov mov sub adc or fdivs add lods push jl,pt or lcall cli andnps shrb dec mov (bad) fbstp sub dec lea adc lods jmp into leave jg sub out mov sub push outsl scas cld repz xor mov enter in mov pusha jo xor popf mov cld push lret jge add inc popl push dec lcall xchg aad pop sub adc loop pop call daa and out ud1 push mov cmc (bad) fsts sub mov subb (bad) dec ljmp mov xchg add pushf ds cltd fsts sub fucomi sub addr16 add sbb cmp test adc sub divl sub mov loope cmpl xlat sti sub pop idivb scas add rcr test xor or ljmp loop loopne cli push int rcrl xor fs in int push test jne push dec rcrl cmp dec mov jns or xor (bad) imulb push clc movsl in mov je aam mov (bad) es or and and push cwtl sbb (bad) push lods popf inc call data16 jg in sub insl int rcll mov loop les movsl (bad) (bad) mov push jge addr16 cmpsl xor out gs mov jge movsl cmp les and (bad) sub xchg push data16 pop add enter ljmp out mov sbb xchg pusha into push dec movsl outsl cmp dec call ret dec enter inc push fdivp pop mov jnp movl loope inc insb xchg leave xor int3 cli mov push xchg movl cld sub or pop xor cmp scas sbb jge sub call lock scas insl rcll andl (bad) cli cmpsb repz adc mov pop icebp pop sbb scas mov or xchg or scas xchg (bad) jmp aam (bad) mov jbe sahf addr16 sbb test push int3 mov lahf sub (bad) mov add nop in mov sub sub in je sub push shrl mov dec sbbb pop into jl mov clc cmp pop insl push arpl test xchg (bad) lea pop push or cli add xchg sub mov call das test push sub (bad) xor in adc push outsb pop jb imul out loopne shrb sub jg es cmp lock push sarb leave lods xlat sbb enter jne imul outsl sub rorb test fsubrl fld nop mov pushf lods ja xor ret xchg mov inc cmpsb stos mov jl mov or jbe push pop sub jge cmp and sbb pop into push push mov ror stc adc adc call (bad) jbe sub roll mov fistpl bound jle movb shrl jnp pop inc push into je xor in xchg lods sub leave sub fimul add andb mov cmp mov (bad) sub mov ja pop push mov fisub cmp inc repz std ljmp inc dec test add (bad) mov sbb cltd scas add aas xor push pusha ret shrl loope push test cltd orl test sahf adc cld sub cmp out fisttpll sbb cmpb sub sbb sub bound fdiv fidiv aam or sbb mov sub lahf rcll shrl cmp (bad) outsl les call inc xor dec inc xchg sbb or push sub repnz out sub pop pushf mov sbb sub ficom dec jb push jne xor mov lcallw shl stos xor sub mov fcmovnbe addl out loop fsubrs inc push pop outsb xchg ljmp push stc cmp xlat sub ret or imull xor lods cwtl adc icebp (bad) dec sub dec mov mov sub mov enter sub sub outsl pop sbb or popa gs xor insb mov sub inc test or sub inc xor jnp aam and call rcrb int mov dec fcomps mov dec or loopne adc jge adc (bad) iret xchg movsl xor sbb cmp cmp xchg sub push cmp jle mov sub cli dec lea (bad) pop sub clc aad adc sub (bad) pusha outsb or sbb push andl adc cmp sub ljmp cs cmc xor out out cmp movb sub loopne sub inc test sub push jmp xchg icebp or data16 cli gs pop jns divl inc push inc sub sbb int3 decb xchg xchg lock pushf test push (bad) or test aam imulb sub inc fisttp sarb fsubl dec cmp push sub fdivrl push mov xchg xchg mov int dec sbb sarl push addr16 fwait lds loope mov (bad) jg into cwtl scas cs mov leave lods push (bad) enter cmp imul lret popf stos jl push bt bound mov mov mov test lret mov push (bad) inc (bad) or flds imul mov xor cmpsl xchg cmp test movsb cmp mov pushf dec gs pop cmpsl movsb jp adc mov inc mov lock dec lea leave mov xchg loop adc adc popa cmc push nop out pop cmpsl inc jo (bad) mov pushf or or xchg std push sbb add sbb gs and lcall icebp stos mov test fucomi std inc mov hlt pop jb lods es xchg push push inc cmpsl in mov xchg dec pop pop jl jbe in lds xchg inc std adc jae sub scas dec cmpsb addr16 sub stos test lea adc test (bad) cmp insb or or sbb xchg stos lcall cmpsb adc push cmpsl xchg mov or mov add mov (bad) sub ss jmp push ljmp inc daa push nop loope jecxz mov fistpll xor or cmp cmpsb mov lods fwait sub ds jae popf repz sbb xchg sub and jl test push imul cld jbe (bad) cmp mov sub inc cmp addr16 cmp roll push push int3 leave sub pop out add je pop xchg lret fisubr cwtl cltd xor mov and push sbb outsb cmp sub orl jl sub pushf adc imul and les sub jle xchg mov mov inc jo and cmc push loope (bad) push and into repnz (bad) dec pop lret out test aad xor cmpsl mov xchg push push leave xorl test adc test push add ds push jmp xlat xchg scas or arpl loop sub mov fbld sub fpatan push dec sahf inc xchg sbb outsl test out xor bound mov sub xor out lahf inc sub enter mov test prefetch imul pop out cs out cmpsb sub mov fldt or leave jecxz mov sbb bound adc fcomi sbb lock cmp mov inc mov loop jp fsubrs iret out mulb sub sbb stos cwtl mov ror lret add pop jmp sub push mov pop or fsubrp fidivrl imul add loop idiv cltd call lods mov mov sub rcrb inc lcall cmc icebp mov arpl lret imul inc mov mov add xchg xor clc (bad) mov lcall mov pop jp fisubrl js cli cs stos jb inc pop fsubs fidivrl enter mov popa cld lret xchg test push int mov inc xchg push inc mov cmp sbb xchg pop lds dec imulb push mov scas adc aam xor dec sbb out scas add and pop adc dec xchg cmpsb (bad) aam cmp stos adc addr16 sbbl sbb xchg push out cmpsl bnd mov add and dec fmull dec xor insb bound daa lods sub leave andl adc lea jg hlt stos in fs cmp inc or leave je dec add mov loopne push mov sub bnd sti cltd pop mov sub fiaddl push dec push in and jno mov cmp adc outsl scas xchg cmp dec decl sub test clc sub inc cwtl xor shrb sbb data16 lods xor mov dec mov fildll lcall cmp cmp cmp dec push and (bad) (bad) aaa (bad) sahf push popa push mov cmp adc std daa imul xor out js push and and int and xchg outsl cmp iret sub int hlt mov inc fdivrl lods pushf loop dec addr16 ds and jns inc sub mov dec aad stos lahf mov and dec lods repnz push test int3 sub cmpsl leave pop fwait imul adc jmp sub aaa xchg gs sub inc cmp mov repz test jns cmp loope add aas outsb pop fisub pop sub add and sbb adc lahf and jl cmp pushf inc out mov inc dec loope scas add xchg ss out sub sbb mov cs (bad) (bad) cwtl mov lock aam push lcall xor ds mov dec xchg lahf sub gs stos sahf scas int3 sahf push imul xchg shlb sub push pushf inc or and or cmpsl hlt and sub inc aam repz lret sub sbb cmp jp es imul jb adc jnp in mull sub pop insl (bad) sbb dec sahf arpl popf out in sub mov rcrl out cmpsb ret dec incb jne (bad) pop pop data16 xor mov ja inc push iret (bad) sub pop adc sahf xchg rolb sbb jnp lods jbe fstl in loope xlat icebp xchg xor loopne and sub test push cmp aad lret outsl orl aas (bad) sub data16 cmp jge cmp in pusha enter cmp inc (bad) mov popf dec subl aaa aas push imul pusha xlat jae xchg mov fildl addr16 jns out cmpsl in clc stc pop sub pop imul das pop adc addr16 in fistpll and mov add mov bound fwait (bad) mov cltd xor sahf insl mov mov sub or lds jle mov xchg mov jmp ret or jb and cmp pop sub xchg scas add mov dec jne or cli outsl xor das pop imul push int add cli stos test and into call loopne aaa or sbb mov pop mov mov and call into dec (bad) fptan imull ror xchg (bad) push sub cmp push inc lea aaa cmc out int sbb pushf int3 sub fimull inc movl out and push xabort aaa or inc leave arpl xchg mov cmp adc cs pusha iret leave and stos je loop cmpsl dec push sti cmpsb bound sub sub jb lods nop test add jg mov sub adc mov leave (bad) movsl xchg mov push dec add inc adc mov xchg aaa push jae into fiaddl incl ret outsb pop leave imul xchg daa and fisubr xchg popa out loopne std and call (bad) nop sub adc inc clc movsb out xor js or outsl out sub fmul cmp lods dec sub xor std test ds fs lcall xchg cmpsb xchg stos bound or jg mov sahf and and xchg (bad) jb js dec pushf jge ficoml jne sub push add sbb mov add pop mov push test pop xor aas adc sbb movsl inc xlat lock mov inc sub push push (bad) testb cmpb or aam sub inc (bad) mov push lds push notb xor push jnp mov xchg and cmp mov decl jge into sub cmpsl mov test xchg test push inc xor sub enter sub adc cld cltd xor cmpsb test lods stc push xor mov add adc mov int sub xor push and xor fstpl sub sub jbe leave incb or xor bound mov mov mov xchg adc cmpsb or insl pop lahf iret bound and sub jecxz out jbe mov sbb sub mov (bad) sub pusha push add adc xor lds pop cmp out pusha dec daa and cmp mov hlt xchg inc mov pop push js popa les mov mov cmpsb faddp sub push hlt xor cmp imull cmp mov dec add and shll or int3 adc lahf sbb fcomip inc add clc movsl pop inc movntps mov popf sub xor loopne or mov xchg mov add ret addr16 sub mov sahf test mov out dec push aas mov add or xor jnp pop xor movsb cs xor mov mov mov sub leave inc add icebp fdivl dec mov cs mov cmp push sub and sub mov cmp repz xor (bad) sub push mov pop stc (bad) xor xor sub sbb sub lods jbe sub dec sub cld iret xchg xor mov mov adc lock jne test mov mov xor push adc push and int jl sub or fwait test sub daa add movl push sbb dec mov cs dec ret inc addl das mov rorb mov cltd push fcoml inc push pop push test in (bad) lret nop pop sub push aas repz and mov rorl std push mov not (bad) jbe pop cmpsl (bad) sub jo popa aaa jae xlat cld pop movsb adc push and fldcw jge in xchg push fucom cwtl daa aam icebp ficom nop pop sub jg pop in cmp pop leave push cmp xor dec mov push aas ror xchg ljmp (bad) sub vpsubq js dec pop or out or mov clc into dec jle pop jb mov push mov mov std inc or cmp jmp jb dec test fadd mov sub xor pop aaa ss loope pop aam sub lret in jnp addr16 test aaa mov andb aas stos pushf mov mov iret push call push mov jmp xor out or cltd mov xchg sub stc push push fisubrl sub xchg bound repz jmp stc sahf sub orl outsb inc scas (bad) ds imul stos ds and fsub push out cld sub xchg lods pop mov sbb sbb loop jmp sub ret sbb (bad) sub jbe outsb xor loope subb shrb in pop enter test mov mov fidivl adc and adc test adc in xor mov cmpsl cmp push popf sbb or cmpsl push xchg les cs jo scas mov call fsubrs mov notb fldcw gs fcmovnb inc lds jbe mov dec stos (bad) sub sub popf push sub dec iret ss addl test test je shl aas sbb push xchg js sbb call rol fild sahf jae push lods mov xchg xchg push icebp dec xor jmp sub mov aad xor jb loopne iret aam popa popl cltd in dec icebp inc dec push sbb xchg mov push push sbb into shl sub sbb sbb or fsubl mov into pop sti xor test pop out in aas inc mov mov adc push inc ret jge int in loope push cmp push stc cli insl pop mov push addr16 aad cmp cmpsl bound mov xchg repnz xor add fimul lods ret stc jns inc push enter test mov xor ljmp pop add (bad) sub xor iret jb push in loopne lds inc sub mov loopne xchg bound and (bad) mov or inc movsb lcall pop mov push outsl mov sub mov fstp pop shlb or test fsubr inc sub push sub xor popf icebp sbb sti inc hlt or jbe inc pop (bad) push (bad) and ss add loope mov add ljmp inc cwtl jbe dec jl or adc jge into daa push dec sbb sub cmpsb cmc inc inc (bad) and ror or sub outsl fwait push or ds cmp (bad) push popa (bad) divl arpl mov clc or mov inc push dec push aaa sbbb pop dec enter in push loop rclb jb mov es cmpsl lds sub xchg jae ljmp jle inc push mov push sub enter and in inc (bad) xor outsl pop push xor int push and inc imul std dec mov cs scas outsl pop loop hlt inc cmpsl int3 sub sbb jne push mov pop xor in cmp ficom xchg adc jmp dec nop push dec mov mov xchg jbe cmp das bound (bad) sub cmp inc mov mov lahf cli cld lret adc (bad) aad sub test and inc movsl repz call call test inc cmp int loope in push jp and ss mov out imul cmpsl ja enter inc cld loop insb jno shrd movsb movsl jae loopne and popf (bad) jae jmp jb and sbb fldt int lea lds add (bad) push pop mov pop popf dec out sbb fnstsw (bad) repz mov notb hlt out dec aaa or repnz fdivp jnp (bad) pop and adc push pushf int popa inc jp sbbb cltd dec jae pop dec cwtl js mov cmp int lock cmp ja sub inc jecxz in repnz dec pusha (bad) ret insb push pop iret pop hlt ja leave rsqrtps cmp movl inc push movsl das jmp cli pop jmp (bad) jl mov jecxz sbb mov fistpll (bad) shrb fimul dec dec inc nop inc int pop sub je mov jne aad pop cmpsb jae,pn dec cmpsl adc mul sub (bad) repz mov mov add jne dec fs inc lods pop inc push dec jecxz xchg (bad) mov ds cmp out fcomps push pop std mov cmp popl std xor test lods fwait mov add cmp adc pushf stos jb or lods push pop push mov sub shlb icebp mov push out sub xchg hlt xlat mov clc mov jmp lcall mov dec pusha test sub mov and (bad) (bad) dec xchg lahf (bad) adc jecxz and jmp (bad) mov cmc inc push jno insb jae nop out (bad) xchg pop stos mov or pop scas pop out mov iret cmpsl or (bad) aam xor and movsb bound jb lret iret push or cltd (bad) sbb gs xor addr16 sbb or stos jl jp add dec in sub and pop fs sub lcall aam mov (bad) jo pop push sub xor pushf fcoml sub xor push sbb xchg sbb aaa jbe pop repz sub outsb ja sub ret cmp mov jecxz xor repnz sub loopne les fbstp test push push mov sbb add sub lret and and mov dec je jbe cld dec sub or les xchg mov test sub xor cmp subl jns stos mov es fisubr xchg inc mov aas outsb push cmp sub data16 dec push sub jns push fistp cmpsb jnp mov adc outsl and cmpsb popa jmp cs daa (bad) jmp dec js and stc mov mov sub xchg sub pop and in rcl sub adc aaa mov loopne jns iret jne pop pop jecxz lahf mov mov daa lock lcall loopne pop jp sub testl daa cwtl ret mov outsl je out movsl ss sti inc add shr mov pop outsl icebp fisttpll adc (bad) aad popa mov xor scas xchg je mov push sub push lret roll inc sub mov sahf xchg add hlt xor adc enter sub and fwait sub cmpsb mov fidivrl gs cmp sub pop pop lods mov mov sub mov mov inc mov bound pop jp cmp and jno inc sub sarl dec fnop cmp rorb add dec mov lret sub add mov popa in xchg je inc dec adc add loop sub pop fdivs leave xor add in push sub sub push es adc rcr in in fnsave cltd push leave out cmp sbb jl scas sub int3 sarl enter cli out sub insl jbe add (bad) xchg pusha inc sub js iret cs mov fimul dec xchg inc sub negl imul sub insb mov movsb sub mov xchg hlt dec popf cmp push repnz mov fidivl scas sub imul sub je add and test sbb and sbb mov and push subl insl negb adc lret or dec pop test arpl push sub push sub xchg jle pop cmp sub jb sarl fisubrl sub sarb sub call sub xor stos mov (bad) stc outsb arpl sub out insl inc fistp jle (bad) mov cmp arpl sub pushf rolb mov sub out inc callw test pop jmp (bad) popf or pop daa jns ret pusha dec lods sbb cmp cmp and sub or adc pop cwtl movb faddp or repnz sub out (bad) rcll mov hlt adc ss add pop idivb imul sbb inc pushf sub cs loope xchg bound jb mov (bad) sbb pop lock jp jl test xchg xchg sahf or sbb stos dec shr js out je add sub ds dec sub (bad) dec fwait daa mov out push les loopne iret mov insb imull aas shlb mov inc lcall loop ljmp test aad scas fsubl dec subl push jle ljmp inc dec jmp push adc addl push adc mov and scas sub rorl jnp cmp cwtl push inc ret xchg inc (bad) sahf es mov lea rol cmp imul push jl xchg mov hlt push sub ja adc (bad) es das cwtl (bad) into test sub pop ror or ret sub loop inc sahf (bad) imul mov mov clc push pop cmp mov and aaa rcrl dec xlat leave lods dec cmpsb mov inc std dec (bad) (bad) push nop imulb cmc sub mov das arpl insb add mov cmpsb or insl jnp adc sub outsl fucomip out push ss jno out addr16 mov test sub movsb xor (bad) adc sub add pop fnstsw inc mov std push lds in or sub mov sti dec jbe (bad) lret sub xchg sub fsubrs mov cwtl push pop xchg push cmp and xor push popa add aaa cli jl hlt push repz je xchg mov hlt mov cmpsb sbb scas cmp mov xchg jmp adc fild pop xchg mov adc sub daa pop mov clc mov sub mov and jnp loope lock cmpsl and out movsb mov jmp test mov sub scas sbb pusha jmp cmpsl clc rolb adc xchg xor sbb cmp and fisubrl rorl cmp sbbl out fsubrl icebp push push sub pop cwtl leave int3 mov lcall jns mov pusha push ret push jmp add dec cs and xchg pop adc int push add dec jl and mov mull push in sub dec pop inc mov jae lret dec mov nop pop adc dec cmpsl jg dec mov mov popf or fnstenv mov out jbe rorl push sub fwait mov (bad) repz sub mov cmc mov inc xor addr16 mov sub fildll hlt rcll (bad) and pop mov scas sub adc xchg xchg sub aam in cs fs sub leave mov push adc dec add cmc push xchg dec lret imul test sbb (bad) add or cwtl ss in inc insl dec xchg xor (bad) dec test dec jp pop mov add cltd inc fistpll mov lock dec inc mov push shll sub fnop enter jne hlt mov test sub repnz mov movb test sbb sbb inc mov xchg aam push sub fidivrl ja cmp or fs mov jmp add loop sbb mov int3 (bad) repnz mov inc movsl lahf or push xchg dec test or idiv and inc icebp fsubl lcall rorb jb pop cmpsb lret aaa sub xchg mov push cmp sub (bad) out (bad) ss aas pop xchg mov cld leave cli ja,pn cltd cmc pop (bad) (bad) mov ds dec mov mov sub enter imul das inc andb xchg js nop sbb addl cltd adc sub pop mov in inc adc les out (bad) cs cli pop jbe sbb or addr16 dec cwtl aam sub fistpll push push (bad) aaa (bad) iret sub sub pop repnz stos sbb shll dec test dec stos sbb sub ss cmp sub mov test repnz sbb pop nopl sbb scas xchg sub push js dec push imul dec shrb clc and sahf sub add mov jns jb loope loop jl cmp loopew lea xor inc xchg push cmpsl inc insb fidiv pop jbe jmp sub cmp (bad) push decb sub adc xor fcomp in and insb cs or lret pop mov shlb add sub leave add testb fsubp dec sarl in rorb and mov sti dec (bad) fwait mov dec out xor inc add movsb out (bad) rorb jnp cs push ja xor int dec fwait xor int3 ljmp mov les dec mov adc cmpsl rcr xchg jecxz mov lret xchg jp nop cltd inc lods or pop popa pop push dec fsubl xchg lcall pop cmp (bad) rcrl rclb add pop xchg adc sub clc iret aam nop jmp or mov mov out cs fsubr mov ret add sbb xchg (bad) xchg xor push push mov mov int3 inc test sub xchg dec xlat cmc repz sub mov jecxz aad cmp xlat adc addb (bad) xor pop in cmpsl (bad) cmpsl sub adc dec inc orl or sbb jmp sbb cltd or push sarl dec into shlb mov pop aas jg jmp sahf mov roll pop lds sub pop inc out leave jg call or loope sub ffree cli push mov lods cmp mov es add jg sub mov scas lds adc mov mov repnz mov imul adc add insb pop cmp lret hlt aam flds jle test cmpsb sub icebp xlat je xchg jmp sarb int imul push (bad) loopne lret mov lahf iret daa (bad) int popa mov push jnp mov scas inc mov sbb cmpsb mov xchg int repz (bad) jbe push (bad) dec leave out aas mov bound (bad) sub es cmc pushf xchg ret mov mov xchg out lods sbb xor xchg mov or pop add inc fwait in fdivrl icebp pop sub jbe add std iret dec sbb ret xchg xchg xor inc dec mov pop or stos push mov mov jbe mov lcall xchg das sahf test adc xchg aad movsb mov ret lock arpl add sub mov fnsave jbe iret call into mov std sub jmp dec sbb int or insb pop add std add jmp sbb sub or dec repz mov cltd scas mov push fnstenv sub mov mov mov outsb xor and jecxz push into imull sahf pop sar push xor lret rclb cmpsl fbstp pop lock stos decl ret lret mov push inc xchg icebp scas sbb xor adc daa or sbb lahf in mov or enter mov sub inc ss adc xchg sub bound imul movsl cli insl inc insl jecxz sub and xchg cld int out mov or fdivs dec or mov xchg stos dec divb sbb in (bad) outsl jl inc sub mov xor mov cmp or xchg test sbb out jl jge mov pop pop insb mov sub sub call clc stos cltd mov mov add mov pop data16 js adc vmovaps xor mov add out cli mov sub out pusha cmc jecxz cmpsb and inc mov out or cmc mov jbe cmp clc push sbb fnsave xchg inc test mov sub (bad) repnz mov inc push out add or mov xor jecxz or add and icebp pop jle,pt hlt pusha sbb xchg pop xor in pop popf hlt in add and int3 imul jns and mov fs add (bad) sub cmc mov je mov cs popf lods stos and shrl cmp mov fwait mov mov jle loop dec fnsave sub cli pusha imulb (bad) sbb ja pop jge test xor fs mov push sub sbb fildll adc push push inc and adc xchg fstp xchg (bad) inc pusha or out dec bts jg hlt pop roll fwait cmp or sub and sbb incb push std mov mov imul adc xchg fs leave rcl push xchg insb push (bad) xor mov lea decb fidivl movq mov out mov ficomp es lret fs dec in jnp stos cmp pop sbb gs mov cmp push cld js cwtl and cli inc xchg cmpsb mov aad pop lock jecxz sbb into dec xchg mov insb mov (bad) test sub xchg sub jae mov sub mov or lock cs jge pop aas xchg pushf mov stos sub fdiv clc pushl lret es std inc addr16 mov movaps mov fidivrl pusha sub adc adc (bad) dec mov mov (bad) sub sub add xor add stos arpl jo test and push lods jb push and push mov movl jae sub jp adc sbb mov ja int add clc add xor movsb sbb xchg popl test xor cs add cmpsb push inc sbb add push lahf call cmpsb sti sub movsb pop mov shrl inc (bad) cli ljmp jb aam enter xor rcrb lret jb std add (bad) sub rcll lahf dec test lds xchg pusha mov sbb xchg lret inc js inc sub mov js into and lret stos adc adc jae dec fimull shlb jns and lcall (bad) cs sub mulb mov or cmp loopne mov sub aad cld or (bad) dec (bad) nop mov lods push jo js std es push aaa repz sub cmpsl je lahf pop add or sub jge inc mov pop loope xchg sub xchg idivl inc mov and xor (bad) repnz lcall adc (bad) pushfw stos bound pusha test or inc xchg (bad) sti lds aam ljmp jl push nop sub into std mov sbb pushf sub adc out push xchg lea sub xor push cmp and out push jnp,pn adc or add lds test push mov notb movsl mov icebp and not add leave fisub cmp pop imul scas rcrl sub lahf loop jns dec (bad) mov push fisttpll sub pop in jns mov pop cs and cmp sti daa mov xor mov daa mov cmp mov pop or sub pop mov push loope aad inc je cmpsl adc inc jmpw sarb push adc sub dec sti cmp sbb and cmpsb aam dec ljmp inc inc test inc push repz mov sub mov addb sub ds sbb cs lahf test adc clc push mov mov cs int test icebp ret dec mov sbb lret sub imul xor inc add adc out cmp bound aam sub cmp and or cmp fs (bad) mov (bad) or aad lods popf frstor mov into ja imul shll je fwait jnp inc mov inc or dec pop gs ret outsb pusha in and dec cs mov adc iret loope xchg adc enter inc push in sahf cmp mov push sub inc or adc gs or comiss mov sbb push or sbb (bad) cmpsl popa hlt sbb dec jg data16 rcrb inc mov jnp jmp cmpsl dec push jo out addr16 ret jmp jb loope popf fisttp or cltd (bad) aad fwait sub xor sbb and xchg pop scas sbb cs outsl xlat fsubrl das clc and sbb fisttp xchg dec or es jle jl xor mov sbb inc jmp sbb xor (bad) mov pop push xlat repz sbb adc jns aas nop ficoml xor push xchg jmp or scas push pop cmpsb call sub popa cs je mov push lcall jmp sub (bad) add xor jb aaa jb mov sub xchg push xor or fsubrp aas mov test cmp in add push je leave pop pop mov and jne or and out sub jg dec mov inc add int3 in push (bad) dec adc jb jg cmpsl mov push inc sub ja jp loop cmp bound xor movsb pop push fdivrs fldt inc mov insb sub inc jb (bad) dec and add mov bound and insl fsubrl mov pop lods push aas mov imul test jecxz inc mov add pop (bad) cs std iret (bad) inc cmc imul mov lret sti cmpsl sahf add sub les xchg ret add jecxz sbb sub dec call lcall stos jecxz mov sbb (bad) insl xor cs cmpsl (bad) hlt add push dec sub ret es pop jb,pt fdivp aam lea cmp or xchg stc into sub nop rcrb xor arpl es adc push out (bad) dec add dec sbb sbb std dec test dec (bad) notl cmpb or jb call (bad) stos arpl xchg fwait mov pop mov pop js mov sub xchg push imulb mov pop mov adcl sub mov leave push sub inc xchg adc mov push jae sub incl jb mov adc sahf or sub out sub cmpsb pop test sbbl cmp out sbbl or iret insl cmp dec movsl sub adc and or lea cmc out add sub sub add xor sub add in icebp mov (bad) adc shrl push shr mov mov insl lods inc (bad) cs icebp fsubr cs and sub enter mov sub shrb dec sbb nop lretw popf scas mov xor jecxz cmpsb jl sub jne jo mov fxch jb pusha frstor test mov add movl call mov push jp,pt data16 jne mov and and fbld cwtl mov popf out pop push ja mov push push sub mov adc in rorb inc icebp movsb or push cwtl rol out (bad) (bad) idivl sub imul push movsb sub dec (bad) jno inc cmc pop push roll cmp and pop mov xchg xchg or lds push test mov popa sub jno lods stc pop lahf push test movsl mov dec int3 std push sub sub fisttp jp sub sub or fisubrl outsl jae add mov aas (bad) fildll loopne (bad) int mov xor (bad) lock sub sub cwtl imul mov aam cwtl fcompl lahf sub aaa push (bad) in mov es jb frstor xchg dec leave add clc or mov adc mov dec xlat gs ja xchg int push fldt adc adc sahf dec popf leave test mov addr16 imul sbb loope cmpsb aaa sub scas leave and xchg xor mov and cwtl xor mov xchg fsubrs mov mov xchg mov or ret test push add pop push sub sub mov xor inc or add loopne sub std into mov sub cmp les xchg inc cwtl or (bad) mov in sub into and fsubs push ret jnp mov push sbb mov inc aaa or loop mov sub rorl xchg add je lcall mov pushf push fimull mov pop inc sub cs call in rcrb lods ja pop xor adc out or adc push (bad) jbe push lret sub and mov sub cmp or ss out sub sub push dec fnstenv adc movsb lahf daa sub jge mov orb mov sub mov das outsl out in sbb imul pop inc or in xchg loope sub mov out imul xor mov dec sbb out test xchg or cmp sub push mov lcall js cs fwait std dec or sub into cli xor jge in int3 jae aaa pop data16 xchg in push mov fwait in push sub out cmpsl mov (bad) cltd sub pushf scas mov adc mov and lcall cwtl or xchg xlat in pop fwait inc sub add stos push and loop ds cmp daa and (bad) sub test cmp nop jb repz repnz add sub mov insb push popa mov (bad) out movsb mov mov sahf or xor cli dec mov dec fistpll inc shrb (bad) clc das sbb inc sbb lock mov in dec pop lcall mov jle mov adc sub or mov jno inc rcll shrb xor call lret xchg sub flds outsl mov (bad) pop es pop jmp insl sub pop mov sbb xchg dec stc sub xchg cmpsl lock push test repnz or adc push cmp shrb in enter ret pushf loope iret idiv lcall aam mov lock mov aad sarb add popf inc aaa (bad) test xchg pop popf inc fldcw pop clc adc jecxz mov jnp ds test pushf or or inc sbb lea inc lcall out hlt call inc cmpb std dec aas push xchg (bad) sbb dec mov test popa arpl dec loope sub test push sbb cwtl cmc pop cld sti sub test pop cmp in adc in and aas jecxz xor ja cmp xchg xor jo rcrb mov and cmp jno sarb dec sbb xchg scas cli push cmpsb loope out cmp jmp lcall or (bad) bound mov cs pop mov iret add ret sub sbb cmp sub fiadd mov sub fstps push pop aam and push sub enter dec cmp ds aad (bad) pusha push fnstenv es push hlt dec xor dec sbb mov mov add sub ds cmp inc test mov sub jns or push sbb xor cwtl sub push std icebp sub sub arpl mov sub addr16 dec cwtl enter mov xlat stc cld dec sub jb in sub insl stos dec ficompl inc sbb lock js mov andl mov daa sti jecxz aam leave icebp add out fcmovnbe push jl mov sbb sub xchg mov push jae mov xor adc mov or nop dec call adc negl adc adc pop dec dec mov dec int push mov mov push adc sbb lret dec data16 adc cs int out xor push mov nop lret cmp and stos dec (bad) int adc cmp fs and sbb mov out pop rol inc mov (bad) dec divl in sbb sub stc cmp (bad) push lods fisubr ror dec stc shrb inc xor dec pop push and in out icebp rolb (bad) jg mov out ss mov adc in fiaddl xchg loope mov add (bad) pop mov (bad) les cmp hlt push jp jb or (bad) movsl movsb inc push xor adc cmp and inc mov xor insb jo es mov pop dec add (bad) into rorl sub in adc dec cwtl and sub lcall xchg imul scas mov add and xor sbb leave dec cmp sahf lcall ret jmp inc sbb in dec std xchg shrb push insl pop push stos ds xchg aam stc jns dec pushf imul sub cmp stos push pop aas mov scas push out mov mov or aad sub int3 int sub (bad) (bad) add adc jb lret enter movzbl xchg pushf jae push mov loope or sub jne xor and inc pop jecxz sarl sahf mov adc push sub sti out es pop cs xor mov loop cmp pop popa out mov sub cmp leave dec cmp stc dec xchg fsts mov sub ja je call test jmp xor mov inc ret or fld fisub sarb sbb sub sub lea xchg xor sbb hlt stc std lods es cmpsb xchg sub lcall pop inc leave jle pop out or jle mov inc mov mov stc sbbl xchg scas adc dec fbld xor addr16 sub stc lods jb fsubrs sub sub imul je ss inc pop sub loope and sub pop scas and mov movsb (bad) adc std sub and popf xchg xchg push aam push add mov lahf mov sub sbb push jp sub pushf stos xor cs pusha insb mov mov mov data16 (bad) mov mov adc call cmpsl sbb or mov mov adc or (bad) dec jnp jl mov push sbb sub sub jbe inc fsubl inc lret inc xchg (bad) and (bad) hlt cltd test movsb icebp pop cs jno sub je push sbb fldcw cmpsl push and pushf mov (bad) push jns cmpsl xlat pop mov lods mov ja test and (bad) icebp test aaa or call xchg adc add sub push inc icebp cmp push cmp (bad) push jbe insl call xor test pusha cmpsl xor loope test ret jb or xor mov (bad) adc icebp xchg aam loop inc push daa xchg push jl mov test xchg sub imul mov ret (bad) movsb aam fldt sbb fidiv movl push stc mov add jp mov outsb and sub sti int3 add adc lcall or mov in jne loop (bad) jns sub cmp pop push dec (bad) aas jge mov sbb cmp sbb mov mov pop push or pop (bad) pop pop xor (bad) mov lock sub sub jecxz,pn fwait stos inc push (bad) cmpsb xchg mov jb sub adcl rclb test pop dec lahf popf push dec jp sarb adc test cmp pop leave inc lcall daa (bad) adc push push aas sub lret and ficoml mov fnstcw addr16 sbb shrb mov rcrl ss xchg sub pusha pop or ss in jge adc sub mov movsl jmp and insb xchg mov inc jl push lods and rcl bound sub xor sbb push cmpsl jo pusha decb ficom movsb cld mov or data16 cmp in sub fwait das test outsb sub cmp adc je mov add or fidivr inc into loop call pop sbbl jo push xchg or movsl sub xchg cmp sub mov sahf test jno pop adc dec or (bad) jne lock sub xor in lds int sahf xor sbb or (bad) jbe sub jae (bad) mov cmp xchg and sub test les add pop xor fs enter mov xchg dec loopne pop xorl dec push in sbb das cmpsl and jecxz sti xlat cmpsl jg jecxz adc (bad) repz sub sub or push jne jns daa or shll push sub out (bad) cmp mov scas cmpsl scas fdivr dec sbb hlt out xlat fildll inc add push daa mov les push and ss fdivs ds test loop xchg movsb mov movsb xchg mov sahf or aad rorb jmp xchg sub call fcoms or scas cs movsb in cmp xchg movsb addr16 fiaddl fwait cmp mov jno daa rcr dec movsb xchg popa je sub imul mov test pop mov cmpsb mov mov inc test and loope lcall push int3 std jmp xchg es sbbl xlat inc sub sub dec jp or sbb and dec leave sub add les mov les out inc add cs fwait pop adc out xchg pop icebp dec les fsts inc or sbb cmp inc or push jae sub enter mov aam mov adc popa call (bad) dec sub pop jb (bad) and enter idiv xchg xor lret pop (bad) cmc xor sbb cltd mov jns jmp dec sub lcall sub jo js andl shll add adc mov adc sub cmp jl nop jge jbe pop stos lcall push mov sub out fs push shrl jno sti add push or xor adc sub adc movsl xchg dec dec clc or out bsr sbb pop in inc sbb mov pop lods popf sub mov das (bad) in scas sub cmpsl mov in mov mov addr16 and mov orb cmp adc aam out and lret dec jge clc in call mov pop shrb push repnz sub icebp dec arpl adc add sub xchg xor (bad) mov sub movsb pop add cmpsl sub add fmul push xchg shrl leave out in out sbb dec and fdivrs lods hlt imul ss cs out xchg fisubl sbb subb cmp pop jo mov pop adc pop dec jg cs adc mov sahf mov xchg xchg lods mov sub dec dec xor pop pop loop sub mov das rolb cs pop jno leave cltd cmp or addl aad daa insl xchg mov ss sub out test out decb cwtl pop ljmp sub mov iret insb push mov push aaa mov sarb roll int cmp jcxz (bad) out out mov mov rol xchg call daa movsl movsb sub add out inc mov dec lea cmc sarl dec inc daa and imul divl xor std ds inc dec mov fnstcw push dec dec lahf xor pop inc xchg js fdivrs xchg sti push mov imul jp and sub orb cli jle push pop dec lret sbb jl adc xor arpl or jl xor and cmpsb sub cmpsl inc stc push jbe xor sub icebp add jne and imul jmp cltd das xor xor cs jg daa push pop call repnz divb loope ds test xor aas xor cmpsl jmp inc movsb fldcw imul std sub and cli pop push cmpsl inc ja adc fsubrs sbb xchg mov mov imul and mov hlt arpl jecxz iretw sarl scas cmpsb stos daa aas mov jne mov cmp mov mov mov add ss test addr16 sub movl repz test xor iret push sbb sub cmp mov cmp or call cmp mov das movsb cmp jnp dec cmpsl mov fdivl cmp sub and stos mov (bad) repnz cmpsl and pop xor dec hlt mov add jecxz movsb mov add inc sub (bad) fdiv fdivr jnp jne and bound push xchg mov cld stos lahf dec pushl jbe cmpsb cmpsl clc mov mov xchg jb adc pop or inc mov rcrl push mov sbb xor cwtl adc fxch insb ljmp cmp xchg pop xchg jae pusha (bad) inc push cmp cmpsl out xor adc push xchg and dec popf jecxz,pt lods fdivr pushw adc loopne mov lock hlt jae push mov or dec xchg sub adc mov insb aaa sub or dec popa ja sub movl cltd xor xchg dec into jns cs pop outsl fucom (bad) testl mov mov lock inc lods and popa adc jo andb xchg sub incb jnp je insb sub lret mov sub mov mov dec cltd fcoms pop sub movsb js xor cmp mov mov adc push stos pop (bad) out sub fldenv data16 pusha sbb enter cs sub aam insl cmp cltd cwtl pop jecxz shrb cmp lods xlat out xchg or jle sub sarl jl movsl test lods sub and fisttp mov jb lods sub mov or pop inc out jae sbb jnp adc daa push addr16 (bad) or sub ss mov dec or out cli int sub lods push mov xchg mov sahf sub dec (bad) xor sub fs (bad) insb sub jns std inc das cld in xchg lea jns xchg or xchg ljmp out or mov adc nop mov js test sub sub xor mov js cmp pop xchg fs or out and mov roll fs adc sub mov sub xchg icebp inc push pop neg dec add xchg inc mov in mov or pop ret test xchg cmp xchg sub out cmpsb cmp (bad) jb or mov mov xor loope xor push sub adc mov and mov and repnz xor lahf int cmp adc xchg ret or stc (bad) ficompl jnp fldl push jnp lock xor dec mov or mov mov and ja mov dec in insb mov sub mov sbb xor call sbb push xacquire rclb and int xor push fstps mov xor mov sti xor in sbb jge (bad) cmp xchg sub pop xor hlt jge pop jge sub jb fadds (bad) ljmp dec data16 jbe bnd sbb or jmp fmul testl mov sub mov leave mov sahf fsubr inc ficom push and int3 (bad) dec mov repnz sub jmp add loop (bad) idivl jo mov sti sub test push dec sub insb sub adc adc test sub push push cmp fidivl divb aad xchg aas mov test shrl dec (bad) adc out inc lds test popf cs jo scas cmpsb movsb in ret fdivl ljmp sarb sbb movsl sub test mov enter jp test inc repnz roll xor sub cmp dec jg repz orl pop jno push push dec cmpsl (bad) fsubr inc sbb mov push es cmpl icebp pop frstor dec dec icebp jnp iret ror inc mov xor leave cmpsb jns jns cmp sub loope adc push out cwtl push (bad) jl add mov gs incb ja sbb adc fidivl stos dec pop aad insl (bad) int lahf xor jne pop fidivr mov sub out sbbb sub fiaddl (bad) cmp xor jg (bad) and in or and mov pop (bad) leave insb loopne sub cwtl or or fmuls es test cli dec fidivr jno inc ja xchg test dec stos adc cmpsl push sub (bad) xor ss leave stos (bad) inc test push cs and stc sbb cmpsb xchg dec fiaddl daa mov xchg pop lods xor xor dec cmp in int in popf pop push mov adc mov mov lahf fsubrl xor lds sbb addl (bad) adc mov cltd scas sub inc leave mov fdivl pop pop and pop fstl and mov pop in mov imul dec cmp pop jge fcom js push std test sahf ljmp shrb xor leave out mov enter popa dec xor sti outsl sbb sub sar insb push dec pop or cmp lods out jg ja movsb ss not fs imul mov stos bound and mov es (bad) int test cmp xchg dec or inc popa pop icebp mov sub rorb inc insl pop ss cmp daa mov pop das jl and xchg pop in icebp xchg push cmp ret movsl pushf repz and stos call jns push sbb data16 aam push xchg lret push push xor adc xor call adc rorb inc ds push or cmp enter xchg sub inc add ljmp push pop sub xchg adc aad sbb test mov ret std pop xor xor sbb sub adc cmp insb push stc lods das jl sbb int xchg inc sub mov decb or jnp mov xchg cmp cmpsl pop lds lret sub pop mov daa xor push jae fistl add ja sub fsubr and loopne,pt ret inc pop bound xchg xorb iret adc mov or mull sahf (bad) adc xor dec mov sbb sbb jmp and mov in pop nop in xchg sbb nop sub inc (bad) clc push pushf arpl sub lods lock mov test stos push pop sub gs in or add lret mov ja test sti lods and cs imul test jle,pn and xchg ljmp push or or jl out cmp adc movsb (bad) icebp repnz sub in pop inc adc or sub pop lock shll mov cs pusha sub fadd cmpsl test test add xchg xor lea mov sahf sub or lret inc jle dec add sub xchg iret push ja cmpsl lods and jae loop jns cmp mov xor xor or popf icebp (bad) jg cmp shl push movsl xchg mov sub fidiv lcall sbb mov or adc inc add push jb xchg jno outsl push mov in jle cmpb xor adc ss sti lret mov fs decb cs imul inc scas lcall mov xor cmp pop jbe add dec add lods hlt outsl lods shrb mov sub mov push xor hlt dec (bad) fst or sbb sub dec or xchg mov jmp pavgb ljmp test in fnstcw or das popa int mull inc insl dec iret push pop dec mov test rclb dec jg cmpsl xlat movsl (bad) clc jl mov xor jl (bad) jmp cmpsl dec (bad) js mov jecxz fildll (bad) xor and sahf in movsl test jl lock or mov xor vprotw jp aad out icebp xor sub sub ja mov xchg cmpsb inc imul in mov je mov and jge add pop sbb aad sub arpl sub sbb lods fucomp pop adc sub and sub bound adc or jnp into cwtl lods push cmpsl pop bound inc push jp xchg xor pop adc jo inc test clc fmul out (bad) jge sub outsb dec add adc pop mov cmp push addl outsb or sub lret cmp adc jne jecxz xchg cmp ret push add sub dec ljmp and cmp sub lea or add je mov and cmp sar lahf jg or push addr16 push sbb pushf mul (bad) xchg push mov and xor outsl jle daa aam (bad) lea mov pop inc test enter mov sub clc loope (bad) data16 or xchg sub mov aaa push lahf sti sub cmp push jno (bad) adc ret aam out inc mov and xchg push adc lret inc in mov loope sub clc ret fnsave jns and push xor stc lods ds pop stos sub sarb jg,pn std sbb in push hlt cmp xor shlb bound sub scas jo sub imul pop push das pop and sub dec popf mov (bad) lcall sbb adc cs scas lods ljmp push xchg sub add ret xor out fdivr add mov int3 cld cltd loop aad push xchg daa cmp sbb (bad) and pop adc stc push cmpsb aad mov (bad) adc insb das and cmpsl cwtl and (bad) int push ljmp inc mov jg cmpsl pop dec popf daa addr16 mov sbb or mov aaa cwtl cmc push test ss cmovl jb push and int3 data16 adc dec dec jp ret xchg cwtl inc pop daa ja (bad) dec scas adc or push les add call fsub (bad) (bad) lcall cwtl cmpsl push cmpsb adc mov out int pop jmp clc (bad) mov mov cmpsb push xor fidivl aaa imul stc jne sbb sub push xor loope (bad) xor and or xor std or aaa sbb outsb cwtl mov cs shrl adc sub addr16 cmp js xor push cmp hlt xor xor daa jne sbb es ljmp add add out dec mov sbb imul mov stc shrl iret sahf notb loop arpl test nop cli scas and stos cmp xchg out pop sub sub (bad) (bad) call cmp sbb sub or adc outsl mov ja mov cmpsb inc inc xor inc aas sub mov or cmpsl out lods add cltd fldcw and lods subl xchg loopne mov icebp scas add jb sub in and cltd lds gs mov sub push loope out mov sub or sub lods fwait jne loop in push pop lods sub add ret or lcall out scas and cs imul lea mov jl fidiv or mov jmp fucomip ljmp pop imul xchg out flds js pop push mov aad cmp and and pop leave sub fs sti pop push or adc in das and outsb inc test sub cmp movsb lods mov subb inc pop mov loopne aad jns cld or sub sbb sub iret imul test int sub push dec mov sub dec xchg xor inc add cmp push xor add sub mov ja mov inc sub mov add xorb mov pop aaa xor push adc jle add pop (bad) sbb rcrl jl push fwait enter inc and or push cli stos stc aas mov inc sub fucom push jns outsl add aas sub insl pop stos mov sub mov cmp leave add jecxz mov mov sahf jns ljmp lret inc xchg and xchg ss jp leave aaa aas imul push bsf stos pop mov sbb test sub repnz test mov call sbb or xor inc lods scas and (bad) add pop insb (bad) ss or leave lds cmp jge or ljmp push movsl loop xchg stos push lods mov cmp xlat push out stos dec pop cmc rorb movsl out sub stc ja push adc int movl daa test add pusha lret push push or sub sbb dec dec sub out xchg sub pop or cmc adc jae push or scas cltd lcall push mov sbb jb push mov sbb pop xchg shrb ja push push ss insl jb sub jle sbb inc cmp mov lcall pop dec add (bad) enter lcall sbb bound dec mov add pop push loop (bad) jno lds fs test adc mov xchg inc test addr16 push add repnz fucomip xor mov movsb imul and out push mov jno bound lret daa jp and stc mov mov adcl sub cmp inc jnp in ljmp mov xor sbb loopne ja ss daa sub mov sub cltd adc jb pop ljmp mov pushf and xchg xor adc jp ret idivb leave bound test jae sti cmp outsb pop cmp (bad) dec dec rorl inc arpl out (bad) daa push xchg cli dec jg scas repnz xchg and mov (bad) dec xchg sub scas sbbl jmp test mov not sub pop xchg lcall and sbbl pop (bad) loope (bad) jge add fsubp sub testl scas ret out mov or xchg adc dec push test push xor lods and test (bad) clc movaps mov jge and int3 test ret lods push pop nop mov ficompl or aad jno cmpsb fwait inc mov cmp sub push clc cmp lret lock cs push arpl cld mov (bad) jp xor pop cmpsl daa xor (bad) mov leave ds sbb adc dec push icebp outsl hlt mov mov cmp xor push cmpsl (bad) hlt jmp sbb push enter (bad) mov sub pop gs xor sub jno sbb jp push aaa jnp std loop or ds xchg mov stc cmp repz outsl adc cmp adc cmp sub leave jp icebp or fcompl inc ror cltd adc mov ror fsubrs les leave mov jg cwtl push out jmp cmp out inc push push cmp adc lock sbb mov push fisubl push jo mov fisubrl adc mov outsl sub mov aam int sbb les mov (bad) sub out imul jp movsl in dec pusha movsb mov pop cwtl cmpsl aad int stos popf mov movsb inc pop or push jb stc jno int jno sbb test adc jnp inc ja dec cwtl jmp into adc hlt cltd cltd mov mov push dec dec cltd dec pop cwtl push into ret jecxz jg sub xchg jmp pop ds dec aam ss push out call dec stos sbb jecxz push push mov fwait call pop aam lds insb mov xor insb loop or (bad) data16 xchg push enter out ss adc or and add ret push (bad) xchg in out leave lock test mov add outsb sbb (bad) mov push fdivrl ret inc sbb (bad) imul addr16 subl push jb out clc ds data16 cmpsb pop lods cwtl dec push fsubl mov aam data16 and subb pop cmp jbe mov sub lahf aad and stos jnp mov sti push xorl scas test jle adc loop subb mov adc out adc sti aaa push jl jge mov inc movsl les push and sarb mov jecxz push into int (bad) cmp pop (bad) or jno push jnp push sbb push ret and mov and lods mov dec jne push leave (bad) hlt sub jecxz jl ffree pushf and or rcr insb dec fisubl (bad) mov jbe adc insb sbb imul push jo dec sub dec dec cltd jno cs ds js lret std sub pop out fistp (bad) push aaa cmpsb xor jb and dec mov push jmp xchg pop cwtl (bad) ds incb cmpsl aad mov push (bad) lods adc push xor mov pop movsl mov leave inc jb lcall shrb jge push cmp pop inc jb sarl or sub mov xor and psubusw push xor pop push mov or pop movsl and out (bad) fldt ret daa movsb or rorl test xlat xchg cmp sbb sub aaa xchg push cmc aaa inc fcomps push nop jg sub scas mov sub std cmc call sub ficompl lods jp jne xchg push pop movsl pop fsubrp xchg (bad) push lret test cltd sub xor xor mov cmpsl dec call add rolb push and mov aaa push mov (bad) jne jbe sub imul rorb adc cmp aam mov test dec xchg jbe xor lahf add jmp in dec jns xchg lcall ss iret and and jl ds loope aam pop and dec lods mov mov rcll jns mov sbb stos inc or lcall cmpsb mov sub iret cmp sub in sbb jb popf test xor and cs cmp cld dec sbb aas testl xor xorb inc fwait popf icebp cmp (bad) mov addr16 adc adc sub sub push fldt mov int lock inc cmp das iret fsubrl dec or cmp int3 fisub daa ret (bad) or ljmp daa pusha sbb mov cmp adc outsl cmpl xor sti nop loopne aas xor adc or pop loop int out jecxz mov aaa xchg sbb mov adcl pop mov add stos je add test lods jo sbb clc mov test cmp cmp int push (bad) icebp in leave outsb test (bad) sbb decl mov adc lea jbe add in js push cmp cs mul jmp mov leave test pusha inc xor or jmp sbb mov sbb inc pop jecxz and mov dec jg xor (bad) ficom push jne jp and push push and pop daa pop lods or daa pop mov daa mov jb add sahf cmp mov push and ret or daa cmpsl das jns arpl mov enter pushf sub mov lret jl inc mov push lock rcrl lret or adc xor (bad) ja rclb addr16 (bad) adc sub or rol leave lcall pop sub mov dec sbbl mull jbe push sub sbb xchg adc jecxz ret cmpsl ja ja fsubrs mov ds movsb sbbb cs stc aad jno rcrb sbb push mov jne and (bad) repz pushf or mov aam adc cmp sti stc push or push pop outsl loopne jo xchg mov or add jmp aas lock ret mov push dec add ja dec push sub out dec int3 or bound xchg mov or mov or test out inc jmp dec movsb sub outsb sbb sub sub lret mov imul ss xorl push cs pop lods xlat daa mov movsb pop jbe cmc xor inc add outsb popa fwait xor popf sub lds in icebp shrl sbb in push sbb sbb movsb dec ds in loopew cmpsl xor or xchg mov inc cmpsb mov loop sub pushf imul xchg sbb sub mov sub dec and or dec jge xor fildll and push sub cmp scas jnp shll adc xchg and inc xchg jbe loop cmpsb push sub call pop or sub shrl pop in cs mov sub xor repz and pop pop aad jb js clc cs jmp mov imull xchg mov lret ret dec sub adc and adcl sub mov les outsl and cmp xor dec jl pop mov inc inc xchg das popa pushf cmpsb sub inc test lds xchg sub int or test sub pop (bad) stos fisttp add inc sub sub mov sub jns or sbb cs into lods lcall mov stos sub scas mov push push sbbl popl mov adc jmp cmpb sub jnp ds jmp mov sub rcll fistpl or pop sub js xor repnz xor (bad) push decb mov push aaa jo adc in out stos adc jns or adc icebp negb loope xchg xor push sub outsl cmp add pop lds cmpsl push dec cld sub jp push sub pop imul mov adc xchg enter adc or rolb push hlt (bad) push adc (bad) dec test aam mov je lods flds insl xlat fmul test lret adc f2xm1 dec xor xor mov sub cmp add adc add das test rclb sub aaa (bad) xchg dec sub push imul adc cmpsb loopne imul sahf loop sbb lods aas pop in push sub lock fldcw or stos in fildll sbb mov sub mov ficom sbb arpl fimull jo pushf add jmp inc test in xchg xor sahf subl or adc xor (bad) dec out daa scas mov and outsb xchg push sub or nop mov push add in pop popa cmpsb stos sub cmp stos sbb cmp aaa sub daa dec ja cmpsl push xchg repz pop push leave sbb jns lods bound inc in popw and and inc repz sub repz or jmp int3 stc cli push loop mov andl xorl mov jae rcll xlat leave jb add dec iret pop pop sub mov xchg das loopne push test arpl cmp incl push jmp xchg pop xchg data16 lea ja cld or les fwait out mov and add push pop sahf fcmovb fmuls mov int push stos adc in jl,pn pmaddwd fisubrl mov dec sarb adc adc adc ss sbb push imul inc inc sub mov (bad) cwtl adc es out dec cmp jl js cmpsl int push imulb push pop xchg jbe or sbb das dec insb sbb fcomi out adc lahf loop mov xlat aad xor movsb push in jg,pn arpl push jae jnp pop adc faddl outsb push push mov cs jns or mov sti call daa dec insb fldt sbb fisub aas xor lods mov ja adc (bad) ss add dec and adc fcompl sub testl sub push (bad) dec and aas jbe jge sub imul pop push fidivl xchg jb aam movsl daa sub (bad) int push inc test add out mov mov (bad) cmpsl imul adc mov outsb and sub decl sarl jg xor sbb ss loope jo test inc in fisubr pop cmpsl mov aas sub mov bound (bad) loopne (bad) (bad) iret cmc sub test je inc mov cmpsb mov ret and andl (bad) dec outsl (bad) fcmovnb push lar jl pop (bad) imull jnp adc cmpsl and or push imul dec movd in cs mov mov push (bad) hlt jmp clc dec cmc shlb push sub mov xchg add lahf jbe test les shrb out xor xor daa inc push inc cs out and dec cltd xor add dec lds rolb sub test jg and lahf adc (bad) mov or sti out mov or pushf js sub adc push mov mov push jae scas sub cmp ret (bad) (bad) and mov pop sub in xor mov cmp mov xor pop jmp xchg pop sbb adc sbb pop cli bound and push pop aas shl add movsb out dec xchg mov dec mov imul sbb pop xchg mov in incl mov adc jmp sub pop loop popf sahf sbb clc sub jl jns js cmp shrl xchg xor inc push cmpsb and out gs sahf stos add incl shr cs sti pop dec mov adc mov aad jp xor xchg dec jbe sub mov push loop (bad) mov xchg fimull incb sub xor mov movsb sub aad inc xchg sub enter lret xor xchg enter or and syscall push jbe out sub dec std roll jne je mov push mov sub (bad) loopne ljmp cmp adc jne jp or pusha or stos fsubrs mov jb dec es inc mov cmpsb push jne movl and dec push cmp daa pop sub dec and cmc mov (bad) aas imul push aas in imul adc nop rol out inc cld out or mov xor insb dec or aas (bad) movsl adc data16 or sti lahf cmp mov dec push sub dec xor push insb push (bad) push out cmpsl push test or lods fmulp xchg dec jae cwtl dec fstl fbstp cmpsb je dec out mov dec out cltd and push inc jae insb xor pushf push mov push lret cmp xchg lahf push push in psrlq cltd leave pop test sbb (bad) icebp jmp in dec test dec inc xchg dec inc dec movsb das and fidiv stos sub clc push lods and push jp pushf sub stc and popa cmpsl outsl cmp loop mov jne xlat aaa xchg adc out arpl and cmp cmpsb sbb or jb push xchg sub or shrl out xorb movsl loope pop dec lahf ret mov in jbe es cmpsb pop (bad) mov jnp mul int or xor (bad) lahf inc and test in jb fnop mov jne gs mov mov push inc add adc or movsl popf jns xor push dec pusha aaa xchg sub push jg jo rcll lahf loop push mov jnp outsb js enter mov push pop das movsb add jp cmp push and (bad) movsl push dec pop mov push xor mov pop jns pop je out xchg enter ljmp xor (bad) lret jnp sbb inc jno fsubs test jmp pop xor gs clc sub aad movsb inc scas cmp mov pop sub dec aas mov icebp (bad) fsubp jmp sub mov lahf test cwtl jbe lds cmpsb cmpsb fldcw sub push sub jnp mov push pop inc add mov ss dec xlat pop push mov sub mov mov sbb mov jmp fsubrs lock pop lret sub pop outsl je cvtpi2ps cmp cli mov stc cs push cmp jle mov adc sbb adc mov int or test adc xor push test imul lods and push sbb cmp adc insb push inc inc xor add and shrb (bad) and test (bad) mov imul mov sahf out arpl in mov mov (bad) xlat sbb sub js bound mov xor mov push mov adc mov xchg add data16 or sbb sub mov dec add pop icebp repnz push in xlat cs cwtl or test pop lcall imulb mov pop lds sub sub add sahf cs mov add mov clc je sub mov nop data16 in xchg test jmp (bad) lcall push (bad) cmc inc and call jo push or mov cmpsb pop mov sahf sub fildl lds sbb repnz mov sub mov mov pushf jl pop mov inc cmc dec jo scas call sub hlt xlat lods les insl cs shrb pushf movsl xchg jl sub cld into sub in fsubrs inc push sub out adc dec sub cs lret sub cmp inc rcrl icebp jb scas in fstp sub mov jg subb dec mov test ret loope aam fs inc lods sbb cltd or scas sbb xchg in loop (bad) xor out sti sbb (bad) out sub ljmp pop lds push idivb push dec xchg decb sub xor (bad) lods push mov or mov add sbb push adc adc outsb pusha gs lea or inc stos sbb jnp adc call lahf pop xchg mov arpl jg mov loop jbe arpl pop and cmp lret sub mov or mov mov lods xor add and mov cmp sub mov in xchg adc cmp sub mov jle push lods loop mov fdivl add fxch mov xor jp mov sub in mov decb xor sub mov mov jmp fstpl data16 xor loopne sbb out daa pop mov ss and movsb jmp jo ss sub (bad) int3 (bad) cmp outsl pop rcrl jp cmpsb out push imul adc (bad) ficom repnz xchg xor sbb jb int and arpl mov xor popf cmp fimull sub cmp dec pop loop and or add ret sub fwait pop cs inc jmp pusha daa es mov inc sub dec dec cmp add mov (bad) and xor push jae inc shrl or xor xor cmpsl stc imul jecxz cmp std ds stos sub hlt dec enter add (bad) imul rcl jb bound test out sbb fwait mov pop ds inc sub pop inc test movsb xchg int push stos insb ficom aas mov orb jmp jae fstpl pusha aaa sub loopne xor fnop sub (bad) out call (bad) xchg or dec data16 mov test fdiv jge lret je adc adc repz loop jns pop lock inc pop and sbb mov mov and xor jae add inc sub jl in push pop pop jge push mov scas sbb or and xchg sbb pop outsl pop popf fiadd mov (bad) data16 test nop mov cmc pop cmp jno int enter xchg call or pop jno faddl lret sahf fistp sub push inc fdivrs mov sub insb popa insl (bad) loopne jae daa mov pop sub jge rcll push movsl cmp and scas sub les pop sbb jae adc outsb dec bound mov sub scas stc push stos pop and cltd xor mov cmp dec ds stos adc jo mov sub nopl push xchg mov (bad) ret push xor aam cmp mov sti ret test and xchg int dec xor jbe xor icebp lahf nop sub push fstpl sub xor push pandn inc ret (bad) jg test mov aam dec enter mov daa sub xlat and cmp lods xchg lcall cmp jnp fsub jle ds push js das adc dec sbb stos xchg arpl rcrb sub mov cmp ss push outsl ficoml adc adc inc mov xor (bad) daa loop sbb invlpg (bad) jnp inc int jae idiv and pop sub mov mov adc ds es out repz dec orl push pusha es sub nop mov push and out inc dec mov push sub mov and mov xor call xor add aad mov fwait cmpsl scas test callw loope mov xor sti cmpsb popa xchg sub movsb cmp pop push je ds stos hlt fsubrs rcll sbb sub sbb xchg dec leave mov xchg scas enter aaa fsubrl rol repnz ret test pusha sub sub clc xchg push stos clc cmpsl leave cmp fisttpll push leave jo pop jo inc in jbe pop sbb inc xchg test test leave cli pop or add dec shlb leave cmp gs jnp (bad) xor inc dec jl inc cwtl jae sbbb push leave lods (bad) popa xchg fwait loop xor inc mov cmp mov leave pop int3 movl jmp dec push leave (bad) sub inc cmp xor inc jg mov hlt mov push das push jne icebp add int jo mov adc push js ret jg pop mov sub pop hlt pop jo jl xchg fucomi mov mov jl mov adc adc pop icebp mov std push clc into jl movsb mov inc adc push cld into sub (bad) pop lcall jge aam popf sub bound imul and or into ret test scas add pusha enter pop cmp push add push push test sbb out fadd (bad) jmp icebp das sub xchg xchg daa cld lods xchg rcrl fsubrs rcrb jl shrl jno or sbb gs adc lock cmpsl xchg sub xlat mov sub fsubrp cmp pop cmpsl push jnp movl ss mov mov add jge push lea and (bad) gs xor loopew fs inc adc dec push mov cmp in fwait sub sub sub fsubr xchg sti cmp repnz xor imul mov mov mov xor sub pop (bad) sub imul enter sub rorb and adc push dec and jle jmp lock addl out inc mov mov int3 mov inc dec int jbe jl sub (bad) aaa nop rclb push pop subl je outsb (bad) (bad) (bad) sbb icebp ret push (bad) sbb sub sahf js inc leave cmp adc adc sub and dec int3 test aad addl jle,pt sbb mov cli add nop cmp xchg sbb sub in and ret dec sub xchg dec ja pusha sti sahf mov (bad) jae lea inc xchg push test sub sub or jp push dec adc fiadd cs mov dec daa popa dec xchg sar sbb mov ds (bad) outsb (bad) (bad) jecxz lods mov adc xchg cmp sub mov adc push repnz pop shll test imul xor mov mov fsubrl adc dec push jnp sub lea adc mov add aam dec (bad) fisubrl add lcall hlt xlat out mul mov pushf dec add mov mov icebp push jbe and xor mov add lods lahf sub fdivl inc sub push jmp xchg repnz xor cmp mov mov jns sbb xor in aam push dec sbb fmul sbb not leave mov sti add push mov jl mov push push je sahf xchg into push or jp adc push (bad) push lcall adc push or push out or mov std int stc popf icebp lahf (bad) pop mov (bad) jae mov in jns into sub push std sar jmp mov mov test rorl jo leave mov sbb outsl (bad) jbe mov or dec push fbld push out jge andl sub jmp in loope aas decb in xchg dec outsb jb sub notb sbb adc or test cmp cmp sub xchg out popa cmp dec sub in pop bound cs push lret or or sbb adc xchg xor mov sub ret inc sbb push loop aad jnp or pop mov fidiv mov jo add nop lea mov pop pop mov sub mov push xor sub pop in fwait lods in pop xchg ss or and push sub int3 fs mov cmpsl sub inc mov sub movsl cmp push stc cmpsl daa and jge mov sub lret movsl push ss pop inc mov push fisttp push cmp xor aad ds sbb mov cmp sub mov mov sub xchg cmp adc and test cli mov fmuls sub cmpsb nop stos jecxz cmp das sub sahf sbb iret sbb ds test in scas out sub mov pop or js inc (bad) lds mov rcll push data16 mull into cwtl mov sub jmp movsb loop,pn lahf ja mov orl movsb (bad) xor cwtd mov and xor xchg arpl jp ds es in xor int3 stc or inc dec inc mov ja orps xor push sub scas int sbb cmp gs add movsb jno sub dec sub outsl je sub (bad) xchg lds add lahf mov nop test outsl and mov sub mov (bad) pop and leave and jns adc (bad) ja aaa xchg lods into pushf mov and fs rorb rorb shrl into arpl mov loope loopne shll call movl sub in outsl adc outsl cmp jle (bad) sub stos cmpsb xchg mov cmpsl push std dec (bad) lret int fnstenv push sub pop test push xor mov mov pop xchg sub (bad) sub sub out jl cmpsl pop push insb ja and pop pusha (bad) sub mov pop mov mov fidivl (bad) adc jnp jge xchg int xchg (bad) dec push cvtpi2ps addl push dec and test sbb insl (bad) sub out roll das sbb out dec sub mov ficoml test popa sub and loopne stc pop mov add dec adc mov (bad) push sahf jnp xchg sbb sub or cmp and gs sub pop cmp adc jnp cmp jae jbe sub shrl sbb gs add je mov cmp xchg jmp xchg inc or sbb std lock xor and call vpunpcklqdq loope xchg xor sbb and add sbb or pushf mov or lret shll push std dec dec (bad) sub inc xor cmp popl inc sub das mov daa data16 pop jl in xor cmp push ljmp insl mov add ds pop sbb and ds (bad) fisubrl (bad) roll mov movsl lret mov lds repz jnp stos nop mov jl (bad) call lret add fstl jmp jnp (bad) sar and arpl or push cmc adc imul push call mov mov xchg and insl sub push pop fisttp pop ds cmp imul (bad) shl fmull enter test call (bad) jne stc dec push (bad) cs mov in push cld ss sbb mov daa sbb push jb icebp (bad) fwait push cmp inc mov bound push jns insb fldt rclb (bad) mov adc loope decl out push out mov cld xchg xchg leave flds pop xchg inc lods aas mov pop cmpsl add flds mov xchg cmp push bound or xchg pop test int jmp mov cltd xor mov scas out or test pushf sub in dec xchg inc push fisttpl in mov (bad) jl iret rol adc sub pop dec cmpsb xor jp sbb (bad) lcall sub test dec mov rcrl mov xor jo insl xor push add sub lods xchg stc popf ret jp cmp pop outsl dec dec push arpl outsl sub jno daa mull (bad) lret xchg cmpsb mov adc pop and (bad) dec out or xchg mov int3 es movaps push mull or adc inc sub loop out loopnew lret (bad) ja push mov test pop xchg loope add add mov shlb pop pop daa or sub pushf adc sub in jmp loop sti xor ja cmpsl iret out sub lret rcll movsl sti sub (bad) (bad) cmp or sub (bad) ja jg xchg sub in pushf mov push rcll or popf sub cmpsb pop out das cmp sub ret sub sbb test mov inc ss sarl pop leave dec inc sub push pop fsubrl rorb aas and jmp xorl xchg pop xor jae mov jmp xchg mov mov aad fucomp mov adc in dec inc push (bad) loope loope in lret divb movsb sub out (bad) pushf (bad) les test sub or push sub enter or js push insb and sti addr16 jle mov cs dec cmpsl out (bad) sub pop dec in push inc xchg dec sbb fstpl das cld xor add rorb push (bad) jg sti cmp pop sub mov popa aad dec xchg sub jl xor in mov daa cmc inc test dec imul sub mov pop sub notl xchg fnstenv lahf sub insl (bad) dec cmpsl (bad) lds pushf adc sub fcoms mov aad sbb fidivr ret test call push sub popa enter cmp stos in cmp (bad) sub add ljmp aas inc ds add jns sub xor negl pop cs xchg test shr aam sub mov mov in std fwait sub loopne push sub or cmp dec sub out sar rorb mov (bad) out loopne cmp pop sub jo push jge out cs add das mov jnp mov pop icebp xor shrl int sub cwtl repz pop or das dec adc cmp in loopne adc sub std jo sub jle push movsl inc lret rcrb das adc jo fwait or fadds pusha jno mov sub jecxz loop test adc sub aas pop xchg test and (bad) call into or xchg dec sub pop outsl mov mov and repnz mov xchg cmovne inc sub sbb inc xor sub aad decl add mov jb sub out cmpl and push or sub xchg cltd fnstsw and xor jp mov fidivl or xchg mov add push sub push xchg mov rolb pop xchg shrb sahf adc push insl loopne push or xchg adc or and lret psadbw mov jne mov call outsl and mov push mov pop cvtpi2ps xor jle mov pusha pop sub jne inc dec adc xor test arpl xlat lea (bad) cs and loope jo ss jno mov xor rclb sub push mov sub push push aaa adc cmp mov lea sbb sub cmc push adc or fprem push jp movsl add xchg fstpl pop ds (bad) mov enter sub aaa inc or inc mov adc mov push sub orb test jmp (bad) vcvtpd2ps cmp xor push fwait aad ja js (bad) adc out adc out xor cs (bad) frstor cld cmp xor insl lods cs movd leave pop fimul ret xlat inc adc (bad) jp inc fnstcw xor int push adc or mov jmp jns pop sub adc sub sbb cli in pop out sub sti lcall xor push adc cmp mov fcompl jmp mov sbb stos dec lcall cmpsl cmp sbb jl cmp mov inc scas cmp push imull hlt stos jp and imul in (bad) cld repz push xor cmpsb jnp mov xchg sub pop rclb ret mov and jnp mov mov sbb fcoml sub aaa push mov sbbl ja out in jbe shrb dec sub mov pusha jmp xchg sub xchg fsubr xor ds jno pop icebp sub or xor jbe mov (bad) test push sbb (bad) ds es scas inc inc mov cwtl (bad) xchg xlat movsl test dec xchg fnop or sbb stc mov sarb cmp icebp dec adcl and lods cmp out push sub leave push dec insl in imul (bad) sar push cmpsb imul sub out fisubr add pop mov out inc daa ret or fcomp jbe ret enter xchg sub cld sahf test dec sub pop cmpsl cli push mov adc lcall and lds call int call insb int3 (bad) cwtl scas test mov jbe mov dec out sub inc stos sbb and dec arpl sarl push lahf adc and ds jbe xor jle lret or gs sub clc lods xchg mov sub ficom mov data16 jl mov test cmpsb popa mov repz aad pop gs xor das mov sub pusha imul stos add fsubrs xor jl sub adc mov enter das cmp call jecxz mov pop and adc or cmp xor leave sub (bad) sbb cmpl gs test mov sub in cmc aad xchg jmp fdivrp add sub mov xchg mov ds push pop sub pop and xor clc out pop cmp cmpsb rcl mov fidivl (bad) dec add out sahf (bad) int pop jge mov mov dec pop sub pmaxsw sti icebp push cmpsl (bad) in jae insb push sub loopne call pop leave jbe push test push jp jmp inc insb fwait fwait outsl into push cmpsl loope leave push add inc sbb push lea ja stos push arpl shll std inc shll iret nop cmp leave test mov jp leave nop dec cmp dec fcomip lahf scas sbb pushf ret lret pop jo and mov arpl cmp push push test test ret cmp mov push es xor gs adc adc ja lds int cmp ja icebp pop leave add popf lahf dec jnp lahf mov out xchg sub xor push (bad) xor adcl aad mov jne xchg push xchg lcall outsl nop inc js rorl jg js push xor inc pop xor clc (bad) jo call dec out insb add mov mov xchg leave jp mov jl cmp clc test lcall add insl xchg inc push xor addr16 push pusha push or loope adc subl int jbe rorb or push (bad) repz lds pop xchg cmp push xor dec scas and sti fidivrl mov add (bad) xchg add out cs rorl cmpsb xor leave adc cmp cmpsl push int3 push mov int mov (bad) dec add loop pop inc es int xchg fdivr cltd mov cs mov jp pusha cmp int3 daa fnstsw or ret cltd lahf sub int divb adc clc aam cmpsl and and mov out jl call inc ss or xchg arpl and inc rolb bound bound inc mov and cli sub sub rcll aam fiaddl jo inc sub mov inc sub xor and inc int3 jne sarb mov and sub cmp push outsb cmp jg pop icebp jns lret mov sub cmp mov faddl adc mov test rorb fwait cs push or fistpll shrb lods rclb sub outsb inc mov loope jns insb and push ds (bad) jg cmpsb in or sar data16 pop (bad) adc sbb ja in nop shrb xlat repnz jecxz ret push jae leave push dec add inc inc mov push add lahf test adc sub (bad) sub insl lods ja test imul push sbbl or push enter mov dec test leave push rorb inc or and daa push dec cld push mov add or iret jbe ret xor push cmp andl or data16 scas test inc test movsl bound adc pop stos xor dec and rcrb xchg dec dec pusha push cld arpl jnp leave xor or sub or insl sub (bad) testb add xchg sbb outsl lcall sub sub es xor sub lods jle std pushf in sub iret or in xor (bad) fild sub cmp imul aaa fs push cmp sub insb lcall xor enter jmp xchg shrb adc jle xchg cmp ljmp lods jo adc pusha xor mov in mov lock int3 jnp mov dec test or enter or or adc mov add adc mov mov or sub cmp jno cmpsb xor sbb pop sub push xor mov inc and mov or xchg (bad) ja aam fwait aaa fldlg2 das pop cmp lock jp lock jge cmpsb cmpsl aas xor arpl xchg push repz push mov add in cmp xchg sub iret push cmp leave jg xchg push push dec cwtl add stos add lahf xor icebp and pop adc lret imul inc sar add popf out push orl sti dec frstor adc (bad) mov push aaa push sti add pop inc push xchg pop loop pop push outsb pop jae (bad) push imul inc xchg xor pop xor js (bad) cmc shll int mov pop (bad) sbb and fwait push mov xchg in sub out mov movl pop dec jnp dec js xor sbb rcrl sti (bad) mov sbb push in (bad) loop push popf call push push aam cmpsl adc cmc or xchg lock mov cmpsl int dec bound pop or xchg jle xlat jb xchg fistp or insb jb jno sub mov lahf inc push xchg and dec inc jg sbb in jp jno inc pop test dec mov inc pop mov push xchg mov jmp imul xchg cmp loopne fisttpl pop mov cltd out lret repz add jbe push jno not retw repz ds insl stos jbe push scas jmp shrl adc and jp mov mov leave sahf and pop pop pop or xchg (bad) out int test repnz (bad) movsl jmp test hlt adc subl insl push dec test push push jl lods xor jno push ss or cwtl push push add int loopne mov dec movsl imul mov (bad) mov jnp push xchg push inc push mov jl push (bad) enter sti (bad) cmp xor mov in enter add push bound inc test aad inc push xor das das loopne stos mov adc pop in cmp shll bswap mov aaa jge xor scas (bad) mov lock mov pop stos xlat lods cmpsb fldenv paddsw xlat sub repnz push sbb sbb jns inc movl cs test stos pushf cmc roll and popa lods cli and push ljmp cltd lea shlb push test shlb adc movaps out pop in in pop fildl fmull into subl mov enter loopne xor pop dec out mov adc movsb mov data16 stos or dec and push in or lea mov cmp sub scas faddp addl (bad) cmc push lds xchg mov aad sub push ja or sub mov mov loopne mov fcompl clc sub jl call cmp push js lahf push pop dec std mov inc mov ljmp pop adc pushfw cmp push sub xchg cmp inc jbe pusha push inc pop xor adc mov outsl cwtl inc daa imull add and ficom leave xor ds jbe sbb jbe (bad) fwait outsl inc mov es and (bad) call daa xchg lret dec inc cmp pushf iret cmpsb pop sub ljmp leave lahf mov cmp inc loope cmp stc mov jl imul and sub clc rcrl hlt sub jp fwait xor inc scas popa rcrl mov push adcl sbb adc shrb out leave test into jnp or mov outsl les fiaddl lahf aam icebp cs aad enter popf jb push js sahf sub jle imul xchg sub inc pop cli imul xor inc or inc dec fisttpll js cmp nop cs dec cmpsl outsb and shrb sbb jg fwait sub mov cmpsl lret push cld cmp sub std cmp test pusha lds sub xchg cltd nop cmp cmp xor inc sarl shll fdivs rclb mov sub in push daa lea sub and insb fdivrp and jnp push cs pusha ds jmp dec jle sub jecxz (bad) mov shrl mov unpckhps cmpsl lret jl jge push pop insb inc mov cmp (bad) xchg into sub fsubs arpl std inc cs pop mov xchg xor xchg jbe out mov (bad) jo cmp aas xchg loope imul push jnp mov cmp lods mov jae mov xor orl xor push outsb shrb push test in (bad) sub jo ja adc cmpsl xlat lods gs (bad) outsl pushf sarl cltd (bad) in aam pop pop jmp imul loopne sub data16 jns pop add push sub dec (bad) cmc ss pop xor sub in xchg cmpsb dec cltd mov (bad) jb mov sub mov lahf daa lret out inc call push cmpsl loopne subb xor xchg xor xchg es fcmovbe outsl popf lock jecxz mov dec subl stos pop pop cltd lret leave dec roll hlt push sub test out ljmp sti cmpsb pushf popa cmp lods outsb adc push or lea mov or and sbb fbld or lahf dec lcall cwtl jne dec stos xchg mov int push push subb xor cmpsb mov inc jl gs lock cmp mov sub mov (bad) outsl cmpsl rclb call aad mov sub movsb movsb mov (bad) xchg ja ds sti test cwtl xchg leave xor (bad) aam mov pushf jbe push inc mov cmpsl and xor int3 push inc sbb jp hlt inc mov push mov push xor push mov mov aam repnz xchg out push sub dec dec and (bad) push adc sbb xor cmp pop hlt sub cld lea cmc cli sub adc and cmp mov aad adc sub fcoml dec test push dec push enter (bad) out (bad) out sahf test and mov out jne xor sub (bad) mov mov call sub adc fimull call mov sbb (bad) sub dec movsb lret ret sub sub outsl mov push mov leave sbb mov test push sub adc sub test mov outsl cs inc push push cmp imul fidivr xchg scas test rcrb or (bad) movsb jbe enter sub nop movl (bad) movsl and jbe mov jmp in mov dec loope sub adc stos xor sahf dec push int inc dec rolb out xchg in (bad) sbb sub (bad) int3 int stos push sub jo fcoml add movsl adc movsb adc rol (bad) jne sbb mov es imull or scas arpl stc jl inc xchg lea sbbb mov mov jl pop movb fidivl mov cmpsl dec or jmp stos adc jp int sti pop and jg mov cwtl popa push clc inc inc push cmpsb xchg dec jae imul fwait sbb fisubrl jo std mov push sahf (bad) inc push adc xor leave sbb lcall loopne add push adc dec jp add cli xchg cmp dec ja insl cmpsl repnz leave and imul hlt and jno mov and bound test sahf iret xchg call inc mov pop mov fwait (bad) pop rcrb xor sti (bad) or lds xchg rcrl mov test or xor pop sti sub push jne shlb mov push and sub (bad) bound cs pop in or in in sub loope push xor push hlt mov cmp movsb stc sub repz inc idivl test add mov inc adc test pop xchg push sub mov into psubw stc inc idiv jmp pop mov pop (bad) not cs js cs mov mov mov push cmpsl (bad) mov orl sub mov xor fmuls roll (bad) cld in ficomp ret or imul xor xchg pushf lock jb (bad) and in insb shl sbb cmp or jge xlat daa xchg mov fnstsw cmc loope dec or jnp aad sub orl fnstsw xor cmc stc psrlw sub xlat movsb daa jno mov rcrb dec add popa insb sbb cmc mov mov int3 xchg rcll cmp xor cmp fldcw hlt push cmc sbb stos mov ss adc dec mov inc sub mov pop dec jae cmp or fildl and sub inc jle add push stc call jnp jecxz (bad) jl xchg xor test aam dec test or sub insb addr16 leave test arpl xor addr16 adc sub roll fadds pop or cmpsb xchg add (bad) stc jge dec mov adc dec leave sub push stos (bad) mov leave lea push shll dec cmp mov fstpt push (bad) sbb jmp cmpsb int and pop lahf movsb ds pop rclb push test scas (bad) mov pop sub jmp push imulb add sbb out jno push mov fdivr cmc pop ja daa out cmp subb cmp push cwtl outsb dec (bad) mov subl mov inc jnp mov int loopne cmpsl sbb testb xchg fisubrl rcl stos inc leave scas or xchg daa jbe dec jmp (bad) sbb mov aad push sub sahf lret inc jmp push mov dec add or sub shll inc sub mov xlat adc pop or cli cmp add add push dec rorl dec cmp xchg test cmp dec in or idivb in mov jbe in sar dec inc push (bad) int3 test sub dec repnz mov cld imul shlb test ds sbb stos pop xchg sub xlat (bad) lret stc addr16 out and jecxz aad add gs iret or sub fptan xor jp out xor hlt dec pop mov fistpl daa cwtl ss sub dec ret int (bad) ds add lock enter lcall pop aam mov push inc adc shlb das mov aas cmp sub (bad) negb mov or (bad) fnop cs dec mov jb scas or stos and xchg sub sar bound aas mov jmp pop xchg sub sbb cmp jmp jmp cmp jnp fisubrl dec std cli sahf jg mov adc inc xchg mov mov and mov dec cld xchg or movsbl jl ja test jne test fdivl int in mov fld xchg aaa push (bad) cli iret int mov cltd lods dec jbe sbb test (bad) sub popf cmp cmpsl int sub ret sub cmpsb fcom test shrl xchg shl movsb out fisubrl and xchg xchg sti ret jg aad daa pop xchg and cwtl push add js nop dec fisub hlt cmp push push js sbb (bad) pop sub push mov aam shrb jbe or fcmove xor fadds ss cwtl cmp fs mov push fwait push lock mov outsl pop xchg ficompl das cmp sub les jb pushf mov ljmp add sbb cs jo dec out dec mov pop (bad) in enter and cmp add push sbb lahf jae and add jle outsl popf sbb imul out daa out movsl push jbe cmc sub gs mov (bad) dec daa push jl cmpsl and jb and (bad) (bad) xchg sbb leave jl dec push lcall push inc mov dec daa dec jae leave mov mov mov sti repz lcall adc ja test lea rol fwait shll pushf fwait mov lods inc into sbb int cmpsb pop jo push dec mov stc adc mov mov je adc mov inc mov pop int xor push fbld loope mov jecxz xchg lcall (bad) mov dec xor int pop cwtl mov sbb add pop mov fs mov (bad) jge push jno,pn std sub dec scas cltd and cmpsb push ja loop push xlat sub dec mov sub jno stos scas lods mov and add fidivr or test lock add adc sahf stos add and aas pop sub ret test xor mov daa inc jl (bad) icebp adc rcll mov test rorl pop sub inc sub sbb loop xchg mov ffreep add jl (bad) incl sub xor mov mov pushf mov and sub inc scas dec sub in ret dec cmpl insb pop and inc ret adc pushf dec subl js xchg decl loope jae xchg xor sub ficompl rcrb xor out dec in mov inc popa fisubrl sub arpl lret (bad) sti out xlat sbb jecxz,pn xchg aam jnp call in mov out and cs pop imul jne add (bad) icebp outsb cmp rcl sub sbb fiaddl (bad) push insb xor mov (bad) pop (bad) cmp icebp repnz out es lds (bad) mov loop sbb lcall fwait sub pop mov mov ja sbb bound leave sbb mov mov and cld inc cmpsb cmp jge pop sub add jmp cld ds pop bound xchg clc divl lods test fisubr pop test xor daa subl jo mov dec push dec jl push xor data16 enter pop xchg jnp ds nop jmp popf push outsl addr16 sub cli (bad) test arpl mov je enter cld mov rorb jbe into das jns inc stc push test fcoms adc pop daa or cwtl sub nop roll (bad) fidivr pop sub in mov cmp clc jbe push imul sub les pop dec hlt push mov cmpsb mov ss mov subl pop les daa xor xchg insb (bad) cmp (bad) dec sbb push jne adc mov push fucomi lock inc jns in lret cmp or ror fsubl cs xchg xchg jmp cmp push insb pop ss and shr fstpt fwait xor repnz cltd pop ds sub scas xchg xchg jl imul sbb mov sbb push scas push lods mov sub insb bound mov jo lods fwait push sub jno sub xor add inc (bad) mov (bad) in test xor cli movsb add adc pushf or sar lret shlb int cltd pushf ret stos loop addr16 lret dec daa mov adc leave stos ss xchg mov fsubr ljmp xor xchg pop mov sbb popa out xchg xchg sub pop cwtl or in mov leave in mov imul cmp inc add fwait push xchg cmc dec bound xchg imul push jno mov jne sbbl leave mov push mov dec jge sub sar mov mov shr pop jp push outsb lods xor sbb fdivrp out adc bound cmp push cmp outsl loopne ss mov inc out int and push mov add sahf jo repz jg dec movsb push nop std std iret and sub dec loopne mov data16 mov xor jle,pn scas call lock cs pop dec (bad) ss xor dec jecxz or cmp int jle mov mov fwait in int3 repz cmp mov outsl cs and cmp xor sbb data16 sub add push add aaa or out sarb and push int clc stc push mov leave pop mov xor in iret sahf mov inc daa outsl xchg add jnp push adc sti aaa inc (bad) dec push pop clc dec xchg mov jecxz mov daa dec sbb fwait mov movsl lods andl add sbb (bad) add cwtl fdivs push adc addr16 lock xchg jecxz,pt lods decb (bad) js sub mov pop js mov inc xchg mov inc pop sub push cmp cmp fnsave cmp cmp dec ret into loope stc or sbb bound cld fs stc outsl mov sub (bad) push push andb push or es adc fildll movsl jo jbe lret and mov outsb cmp jmp cmp aad (bad) loope jb sub lock pop movsb or mov cmp cmp sub dec sbb leave stos fbld dec fsubrs cli push sub fisttp out push mov pop mov cwtl fsub (bad) lahf add pop or in mov test in dec repz jp pop jae loop adc inc mov jmp push mov fnstenv xchg cwtl sub loopne in push ja xor and sub cmpsl (bad) and ljmp mov rorl imul cmp outsl aam faddp mov pop xchg leave andl or shr nop (bad) icebp cmp popa mov in or mov lahf add ds push and pop dec cmc (bad) arpl mov or inc jne mov cmp mov mov lret inc mov push mov mov sbbl jo sub loope jecxz data16 aad mov cld mov push pop in data16 dec popa cwtl mov jns cmp jb jae pop movsl dec ds push cmc push cmpsb mov popf push jns xor push pop scas push (bad) fadd and sahf sub mov push fwait (bad) clc jbe je mov test fsubrp loop xchg (bad) sub popf pcmpeqw sti mov lock cmpsl pop (bad) mov sub jb repz or xor sbb jae push sub or test jb popa insl lods and fmulp insl cs fldcw mov cli sahf sub jecxz mov inc cld out pushf mov imul dec vmovntps (bad) aaa xchg cmp call inc sbb dec std sub fwait cmp sub cmp xchg sub and pop jno mov adc ja,pt movsb test loope lds inc and jg loop mov sub das rcrl pushf or cltd xor insl pop scas ficomp lret sub sahf xor xchg ret add mov mov xchg ss lcall xor leave add imul or and lea dec add (bad) and rolb mov sbb int3 sub (bad) sub xlat adc dec notl pusha dec and cs push leave xchg movsb test fisubr out jle push imul sbb stos cs cwtl add lods add shrl repnz loope xchg xor (bad) cmc pop lahf stos inc push addl mov inc imul mov (bad) mov pop rcrl pushl shlb sub push bnd pop mov fdivs popf sahf out stos sub pop gs jo lret vmfunc sub add pop mov inc push mov mov jmp jb mov push push pop insb jno dec jge in lock cld jecxz loope ret lds data16 dec push leave jmp cmp push ficompl stos add fstpl fwait dec repnz dec xchg arpl sub inc jae nop cmp int sahf sbb sub lods mov mov or enter lock or add cs xor (bad) fsubrp call dec jp cmp addl data16 ja,pn sbb cmc pop sub push data16 sahf adc mov push xchg enter inc and mov adc push jb shl jle lahf pop outsl add in sub cwtl ss push inc xchg xor sarl or sub sub jle or test lock cmp xor cmp jns sub xor dec out std dec daa in scas (bad) sub mov and lea inc inc sbb nop or sbb jo sub hlt (bad) add sar clc jb loopne adc mov add cld loop cmpsl mov add orl dec sub sub lret out leave sub jae push les mov sub or mov pop cltd sub xor xor leave mov cmp adc insb inc sub pop jb test jo into inc push push popf je sub and fwait add ss jnp dec dec out inc leave mov outsb fiadd mov dec sub push mov mov (bad) xor mov jnp int3 push cltd out push or or jb cmpsb ja push adc mov (bad) icebp lea (bad) outsl fisttp sarl ds std adc xchg jo test inc pop ret mov cmp cmc cmp xchg push fstl sub xchg hlt xor lods xor cmp cs sbb leave arpl bound cmp sub movl or insl push pop and cmp mov cmpsl imul ja adc cmpsl les pop leave mov lret pop add mov lock fmuls ret shl (bad) cmp sub adc mov push in sub cmpsb test sub (bad) stc movl pop xchg bnd out not pop addr16 inc add push lock inc push ret lods adc (bad) sbb pop pop sub mov test jg jnp lret stos sub or dec lea mov xlat xchg fistpll sub test push (bad) lock sub xchg stos insl push dec or sub je mov call jp xchg inc xor aam push vaddsubpd vmwrite fistpll imul inc cmp cmp mov xchg rcrb push leave sub xor inc aam imul adc lahf leave in (bad) dec iret adcl pushf sub sub mov xor pop adc mov push adcb xlat ljmp lods jp xor fimull aaa jl insl dec jno add pusha mov jl movb xlat dec cmpsw mov mov and lods sbb fistp inc insl (bad) out sub dec inc push jno adc mov push jg pop push inc cmpsb jae lcall xlat add cmp jl aad stos xlat and into sub mov sbb adc mov cmp sub leave adc addr16 dec xchg out pop xchg jg xchg icebp pmuludq jp ret fwait andl pop int sub xor pop ret sub enter dec orb mov or (bad) dec int mov aas cld or roll mov cs mov pop fwait xor fldenv add fiadd sub ljmp and mov jg inc xchg mov ja cmp dec imul aaa lea ds lods and fnstenv sub push (bad) ljmp jp (bad) lret test add lods or loop lods xchg or xlat add ja push rorl out fsubrs (bad) xchg push sbb or (bad) jne jb loop xchg dec cmpsl es subl fwait in pop add pusha sbb xchg mov mov jge sarl ret mov xor jp nop rcr es sub inc ret add outsb mov sti or test pop jo xchg mov ds icebp int inc mov jmp lcall pushaw mov mov push sti and add jmp push cmpsl sbb mov and (bad) xor fiadd jecxz push jb pop call adc xchg push sub mov ficompl and mov and pop sahf adc sub out (bad) rcrb insl fildll push (bad) iret sti sbb sub nop stos sub imul mov pushf sub xchg das shlb or imul out pop pop sub loope clc std and mov cld stos repz cltd jmp inc imul pop xchg shrb cmpl and out inc lret imul or lds xchg or movsb pop ret (bad) mov lret orb sbb sbb jno xchg xor inc imul adc pop pop out cmpsb mov xor inc fstpt daa pop adc sub push lods mov mov sbb xor xchg ja lahf inc cmp mov dec xor rcl stc cli arpl sub sahf addr16 add jne bswap rorb cwtl push (bad) repnz xchg or sub jnp mov jl xchg add push leave shlb lcall push sub pushf sbb lods outsl jb jbe jge or movsb sub sbb add sbb pushf sarb push adc cs addl fiadd enter pop sub mov sbb ret loope sub sub sub dec (bad) mov cmp in inc lea inc mov sub scas popf sub mov (bad) push mov push sub les in xchg cmp iret sub (bad) xchg out and jmp lret int3 sub pop leave lods adc dec jle addr16 and stc hlt cmpsb shrl and xchg and xor jno cmp push loopne subl imul sub int3 test jb in push cltd dec add xor mov adc test pushf imul lcall cltd mov pop and inc xor lock mov mov pop ficoml sti sub cwtl lret and (bad) lock sbb data16 hlt lret mov test push enter cs stos ljmp fcmovb mov in sub sub xor add lods pushf sub cmp sbb inc lock sbb pusha jae cs jp jg pcmpgtb lods sbb jl mov cmpsl je push sub mov (bad) (bad) ja inc add xlat fwait lods dec jl pop sub nop inc (bad) cli ljmp ja inc pop movsb xor xor lcall push rorb and pop leave sti ficompl xchg out dec fisubrl (bad) fnstsw fldt mov mov jnp cmpxchg icebp ret mov xchg mov inc leave lret fwait cwtl jns inc movsb aaa sbb xchg push mov out (bad) scas mov mov movq mov hlt jno ficom pop leave push sbb pushf dec and cltd push cwtl movsl gs add jno lret pop in lods pop andl inc mov das js pop outsl push jb aad adc or jbe leave and cmpsl (bad) cld xchg pop (bad) shrb cwtl stc ss loop into jmp mov inc call dec test mov jmp out cs mov cltd mov js jl addl je shrl mov leave mov mov sub insl cmpsl scas (bad) jne mov movl mov mov imul imul cmc sahf jb add aas push mov fcomps outsl test inc jp icebp std lea sti sub xchg push sbb jbe xor adc cmpsb jne sub lcall cwtl lea inc dec lods xchg mov jl data16 sbb mov fiadd mov push xor (bad) (bad) dec mov int3 popf push mov jle pop pushw mov sub clc pop aad stos mov imul mov adc scas xchg cmp pop sub mov in xor push xor ret out cmp ds jle cmc (bad) fwait sub clc enter dec jnp icebp (bad) and push lcall notb xor mov sub mov sbb add ljmp or loop,pn cld mov xor ficompl push or add jl xor scas mov push jmp cmpsl cmp inc nop mov xor addr16 push xor sub ss jg test lods add rorl sarl jb sbb das lcall add cs iret test (bad) scas ds sbb xor xchg pop and and xchg daa test cmp loopw mov xor cmpsb out ljmp pushf xchg xor jl insb (bad) sbb (bad) and xor mov xchg es and movb push and xor sub insl pop push or in mov popf mov int pop cltd ss enter xchg scas pcmpgtd push popa xor insl push dec std push ja jecxz inc aad rclb adc dec jno cmp jp inc jge sahf or jbe pushf lcall and out aas or les and test sub mov sub dec out push adc xchg cmp lock sahf cmpsl mov xchg push fucomip dec sub cmp dec push fidivr sub xor sub movsl mov push scas and sub adc (bad) imul in (bad) inc aam lods int3 jle stc dec dec lahf test sub fstps jne loopew xchg dec out cmp cmp add sub adc xor ja cltd and (bad) divb sbb fdivs (bad) mov dec rcl mov xchg or jne (bad) mov jo mov lods push add xchg add and dec mov cs xchg mov xor daa inc push push (bad) push bound addr16 movsb popa leave ficomp test fisubrl push test xchg push icebp data16 mov sbbl dec sti add sarl sbb and inc xchg jecxz pop pop out pop xor test fisubl inc outsl je sahf xchg fildll xchg sub jl stos scas or insl js (bad) bound inc push (bad) dec or sub cmp gs rcl dec ret lahf pushf xchg aam xchg sub inc pop jmp jmp rorb xor sbb adc dec jle sub sub mov push es sub xor dec aas or aam scas dec jg cmpsb jge cs and ret and stc adc sahf stc loopne mov xchg adc add sub push inc scas inc ljmp jne dec add addb cld in dec mull fwait std sub mov mov out xor pop mov xor add fbstp in inc sub push dec sub movsl loop sub mov popf sub stc cmc pop pop cmp adc sub add dec std ss mov pop dec movsb cmp ss insb pop (bad) mov xor arpl les xchg leave fstpl aas jg ficoml sub cmp and bound sub loope sub shlb int3 jl mov pop mov sub jns adc mov and sub xor cmp imul sbb or and inc add jmp (bad) dec and xchg mov call ret cld cmpsb (bad) outsb xor ja orl shrl loopne mov mov mov aad sub mov sub inc repnz adc jnp push mov scas mov (bad) jle (bad) pop sub jmp cmpsl movsb ds nop push xor lret dec leave inc fs add sbb rclb call lcall imul mov add out sahf dec push inc sub int3 (bad) clc loop rcrl ret xor jge sub in jnp jmp sbb fst lret mov push mov push in sbb sub aaa adc mov (bad) daa mov cmp mov sbb std mov lds sysexit in fimull cli ds mov sub stc dec add sub jns pop and fdivr jo sub xchg leave in pop ss rcrl clc mov cmp adc enter and jbe aam stos or movsb test imul (bad) add push in push jmp fisttpl int dec xchg cs mov pop add push mov arpl mov daa sub push addps push ss cmp retw das test xor mov xor pop iret sbb das jmp sti in xchg mov negb push xchg xor lock dec mov pop lahf sub popa outsb outsl jmp cmp mov stos (bad) mov inc jnp (bad) xchg mov sub xor (bad) fs xor in push jae cmpsl jno mov or sbb xchg xchg sbb xchg addr16 bound adc sub and cwtl mov mov cmp frstor push fnstcw je mov xchg inc pushf xchg cmp bound lds mov mov adc push out cmp ret sub mov adc cmp and jb mov inc lds push cmpsl add je or mov sub xor sub adc arpl mov cmpsl call insb push pop inc or (bad) mov in loop fsubrp xchg fldt in sub mov sti pop push mov sub inc xor pop imul addr16 xor (bad) ds lods data16 lahf ret mov or sub (bad) dec xor jb sti dec or out adc xor xchg lcall pop push push sub aaa push (bad) xchg fs mov cvtpi2ps pop jne iret jnp mov out out mov push inc xchg ret imull ret mov push sahf fmull dec fs das sub leave adc sbb aas inc or xchg jecxz mov or movsl imul dec arpl stc inc pop in jg idivl sub int add iret cld cmp mov sub fcomps sbb adc push int pop jb sahf cmpsb in fidiv xchg pop inc sub sbb push lods mov int adc int3 sub or cmpsb movsb sarb lcall cmp xchg fs ds scas sbb sub xor cwtl pop inc jae pop les out push in outsl je inc mov or adc mov sub aas mov pop sub nop or outsb test xor jmp inc mov outsl push call sub sub or sub stos mov mov es dec xor aam adc or add dec jno jns sub cld dec int xchg and psrlw xchg sbb ficompl xchg sub or outsb mov jb mov int jo or int3 jg cmp mov leave subl int mov jg jo mov loopne sahf (bad) pusha dec push pop (bad) jnp push in ret in loopne,pn dec int xor test aaa daa push in ss add pop cltd ds (bad) xchg mov mov rcrb mov cmpsl into out data16 push mov jp and std (bad) adc xor loop repnz fwait push push lods ja adc adc xchg pushl cmp leave and fsts dec or sub pop adc insb add jp outsl cs sub sub fdivs enter aam push and lock and leave jb adc int3 pop mov dec fsubr fcompl adc loope mov sti dec test jo leave clc sbb arpl add (bad) mov sub int imul int sub data16 mov xor push push (bad) cmp xchg dec dec mov cmp push and sub (bad) jge cli das aam in mov inc int pop (bad) daa aas cmpsl cltd dec sub or mov xchg inc addr16 inc xlat jmp and in pop pop sub cmp pushf sub test int lods daa sarb inc push inc icebp popa repz rcll or arpl mov mov jmp ds mov pop out pop cltd out cs push aas (bad) std dec cmp int pop xchg leave push andb rcl sbb ja jge movsb jo jb mov cmp enter inc push cmp and inc jnp,pn or jne nop sub (bad) jb ljmp cltd sub or inc sub xor cmp (bad) divl (bad) sar outsl pop inc dec loopne xchg mov xchg jmp dec add pop loop adc pop ror (bad) notl add ret aad and mov fs adc jo ds xchg inc cwtl js loope cmpsl push or mov (bad) and add fldenv add push sub arpl xchg and mov jmp and das xchg js cs psubd sub mov cmp pop loop mov sub jb out sub sbb int3 jge sarb mov leave sub orb out push and mov loopw gs jbe cli push leave ds ja aam aas lock stos mov and out rorb scas xchg incb add imul pop mov or ret js sub rolb cmp cmc ds add pop adc sub sarb push decb xor imul xor push and aam popa push ret mov mov adc jle in xchg test sub sti or cmp mov aaa fimull push sahf icebp pop fbstp and outsb ret cmp adc std sub pop cwtl scas sti xor roll jbe push sbb pop ljmp scas cltd mov jp (bad) sub sub and ds mov inc inc aam pcmpeqd cltd scas out ja imul test iret sbb sub dec mov pop sub ss pusha and popf cmpsl out pop pop test dec fs pop hlt imul dec bound adc adc sbb sub sub call mov adc stos sbb movb mov sub outsl and mov mov stc stos and sub mov add imul sub cmp pop lret aam jno sbb pusha in sub sub mov inc dec and test lock movb dec add xchg or addr16 loop and cli mov enter sub dec divl inc xchg xchg xchg ds in push (bad) sub mov push enter inc xchg sbb sub cmp inc clc jecxz cli ja jmp fstpl jmp sub mov sub jl imul (bad) dec out (bad) push in pushf int mov add and xchg inc mov mov jae lret in cs cmp aaa sub add rcrb push imul ljmp gs mov sub xchg xor push insb jbe mov adc sub mov lret add dec scas popf call dec out sub test push test cs sub sub jl sbb jmp mov and inc test ret seta enter jle repnz outsl or in faddl or cmp xor xchg inc ss xchg aaa ja je dec stc jns dec (bad) mov and (bad) mov into push mov lcall push jbe xor pusha aad push push xchg test xchg out lret pop fisttp fwait xchg xor out cmpsl pop xchg int3 sub dec mov add sti or daa cmp decb ds sub out jg iret adc stos mov hlt xchg xchg add xchg lea mov push add sahf sub inc sub pop push lds sub loop mov es in (bad) xchg xor (bad) pop test rorl jno mov pop pop push jl sub mov mov sub test test je adc cmp mov mov in mov dec jl xchg int sbb movsb pop and and push sahf sbb mov lods ret imul xor ret into mov sub pop sbb or jg int imul lcall mov jbe push xlat sub inc push lods int push sbb xchg fbld adc fsubrp popf xor mov movsb add xor inc add outsl inc sbb cmp shrb sub loop jecxz xchg cs fs cmp mov dec cmp xchg fldcw (bad) cli ds into adc repz dec insb inc loope fs sub add sub pop fwait push mov xchg loopne aaa subl aam sahf iret mulb data16 sub sub insb sbb addr16 call push dec push pop push dec ljmp loop movsb xlat repnz push rorb push in jl lock jnp mov dec xchg mov lahf xlat sub adc push or ja leave (bad) jp cltd ljmp pushf jb sbb js xlat fsubs rolb jb push xchg sub add mov roll int mov sbb jne andl test add test bound fxch pop rcll sti fsubs lahf inc sub dec mov inc sbb or test push aaa into leave in jp sub int3 push lret daa rol pop jp sub gs (bad) dec mov dec cmp adc cld xlat (bad) jae orb lret xorl out test out inc movsb sbbl xchg add int ret enter imul xor arpl std sbb (bad) lea popf es cmp sbb xor cltd mov aaa addl xchg jo adc sarl lret inc xlat sbb int3 into sbb mov or aam stos fdivl or addl mov mov adc fisub insl and mov inc pop cwtl sub clc stos or (bad) jecxz sub sub imul movb test cmp cmp jmp cmovo adc rcrb dec adc adc push fsubrs aaa rorb jo ficompl test push add mov sbb imul (bad) sub push adc shrl mov gs mov sbb outsl add push push xchg dec fidiv sub stos jmp fucomip scas xor lcall adc int3 mov sub xchg pop pop mov mov enter shrl jb sarl dec (bad) sbb mov int3 push pushf sub dec push repnz sub mov scas out cmc add sub xchg aad cmp xor lods (bad) repnz cmp add or movsl notb loope xchg mov jmp push push sbb xor loopne jl push (bad) mov (bad) xchg add push add mov push je ret mov ss sbb jl and pop sub rclb mov mov mov push (bad) pop icebp hlt cmpsl xlat jmp push ret add out shrb mov fucomp jmp lcall pop fs jns jae pop xor inc or ss and leave push jnp sub and jne rolb arpl mov stc aad sbb test mov sub inc jb inc xchg xor popf mov test or repz or popf dec push or imul adc cmp xor ljmp dec div dec popf cmpsl sub push mov out pushw pop orl outsb mov mov pop outsl xchg (bad) icebp xor xchg push sub xor jne cltd std xor aad mov loop rcrl je or sti cmp out ja sbb push pop cmc movsl pop sbb addr16 xchg pop and jnp cmpsl push push push pop jb fstl sub loopne insb loop or std cmpsl repnz fdiv fmuls movsl jbe cltd and lods inc xchg mov push data16 addr16 xchg stos sub pop add in sub mov lahf test dec aas dec xchg sub sahf ds mov das xlat nop or lea fdivs dec fidivrl dec mov pop movb mov lahf or loop fwait lret fmull mov es int mov sub xchg adc mov inc push (bad) imul out xchg xor sbb stc add orb mov sub (bad) mov loop lcall in movsl pop push or mov loop jb cmp cmpsl int mov push xchg fmull cmp xchg cmpsl (bad) sbb sbb pop (bad) aas ficomp rorb push pop pushf int and call cli cwtl jnp (bad) xchg cmpsl and jmp sub jmp sbb lods popa pop aam test lahf jg lds xor imul int3 mov push pop fcoml add xor (bad) xor or jno jnp cmp lahf pushf sub (bad) mov sbb dec ja inc dec push fwait mov (bad) rol mov int out push push inc movsl test and and (bad) xor leave mov inc jmp jp mov outsl pop xchg jae inc push xchg mov push xor imul jnp jnp pop js into test int mov cmp out and xchg cwtl cmpsl sbb pop pop xor hlt stos jl xchg lgdtl jne pop mov xor sahf mov xchg mov jge dec in fwait add popa mov loop insb sbb iret dec add dec icebp aaa add repz pop mov add or iret bound insb mov daa loopne clc daa pop ss lods repz mov jbe popl je cmp fldcw cmpsl or and int jo aaa mov mov adc inc leave ror add mov pop adc xor or and test adc test mov in xor pop ljmp leave lods std sub (bad) pop cwtl jle call mov pusha in xchg push push movsl sub (bad) fwait in lods push sub push outsl or add mov mov out sub mov or sub cmp jl or mov mov fadds fsubp sub jnp and cli dec test loop or fsubp sub cmc push sub or mov mov push into jl clc repnz call jecxz jmp fildll (bad) cmp push sub sbb dec jg je in or jle lea sbb inc sub imul test pusha mov xchg cmp xlat sub repz cltd orb sub and jp imul ret xor xlat test or sub mov icebp sub add ficoml sahf xor ds inc in call sbb aaa adc cmp mov mov pop mov in es daa mov sub (bad) inc (bad) stos dec inc mov (bad) sti push scas loope pop jbe push sub popa add push pop pop jmp outsb iret jp pushf clc rcll pop cld and adc aam je xchg sub sub sub or lea cmp jl xchg flds sub (bad) ds aad cmp data16 test shrl test out imul lret stos sub mov addr16 (bad) int nop cmp popl sbb cld test aad sub data16 xor mov iret sbb pushf mov inc dec lcall jns add jbe,pn mov cmpsb mov cs adc into js sti stos jle call mov inc mov cwtl fcomps mov imul mov dec mov or mov mov sti sub jmp insl loope sbb (bad) dec into lds aas add out (bad) sub movsl cli jne test jb js pop sub or push adc inc sbb movsb cmpsb mov mov push in mov mov pop fstpl insb stos mov push push jae add repnz pusha mov mov inc sub lods sbb push in cmp imul pop sub scas sbb js imull lret jl pushf mov ret jmp (bad) aam daa mov cli shl aad fiadd jnp pop pop dec xchg pop ss aas lcall rorl mov xchg (bad) sub jb sti cmpsl neg sub aad xchg mov xor int3 cmpsb mov fldpi sub test dec cs push cmp fstpl (bad) jl fcompl das test popf mov inc push xchg int sbb push push inc adc or loopne lock xor lcall xor dec sub repz sub (bad) sarb lret add jle addr16 cmp adc cmp jp pop icebp mov mov addb jb test or (bad) stos test ret inc aaa xchg pop outsl call scas out fstpl and dec pop sbb jl lock loope inc xorl cmpsb or nop cmp pop xchg hlt add inc sub popf addr16 movsb jbe pop stos mov shrl ds mov push (bad) psrad lds aaa and (bad) mov dec (bad) xchg std out sub dec mov sub ljmp sub push or test mov fwait add fdivl xor inc sub ss xchg mov in icebp push int3 sub add mov xlat sub dec insb add mov rorl ljmp ljmp jne sbb dec adc fstl pop test mov lret sub inc and and sub adc add lret pop nop or cld outsb fsubrl sar sti int add mov xchg add add adc scas icebp sub movsl (bad) sub dec mov pop jo,pn incb (bad) hlt cmpsl pushf mov xchg stc sarl mov clc xchg push or jp xchg cmp popf stc rcll adc pop adc pop push and ret push cld nop (bad) bound sub iret jmp sarb sahf sub and jbe cmpsb xchg mov mov push or andl int3 dec xor mov (bad) sbb mov test daa push sti xor pop rolb cmpsl push jbe mov push jne dec cmp xor xor add jge rcl aas cltd pushf dec (bad) in movsb rcll jbe dec lds lods cmp les and mov fs push stos push lea jle jmp xchg and incb std dec lds pop cmp add sub and mov aaa ret sbb sarb push jns test cmp mov cmp and cwtl rclb mov jae lods push outsl pop sub push fisttpl xlat jmp pusha mov sbb jecxz mov aaa adc push add arpl add push jg pop jecxz in push ret xor sub ficompl cltd cs mov jecxz inc lret or mov xchg and and xor cs cmp cmp sub xchg add stc out loop push mov rorl add mov mov ja cmc out sub lods mov mov sub jb test (bad) bound rcrl sti sub push xchg and ret pop sub jle jmp or lret rep cmpsl pop pop mov mov xor scas mov test add mov imul inc (bad) cs cmp sbb cmp xor lods sbb negb mov aam sbb lret std add leave push or cmpsl mov aad (bad) lret aaa sub xchg mov jo sbb sbb das outsl inc lahf add into mov xchg mov dec sub imul dec lock and daa (bad) push hlt js push and sbb xor dec push subb ljmp xor dec mov jb orl ret push push add cwtl sub daa cmp repnz lods cmp sub aas xchg les outsl sub lahf clc or daa mov test lcall or jnp push syscall sub and xchg xchg je jb outsb pop shr sbb jl xchg inc insl push adc jae (bad) loop cmp push fwait into lea insb cwtl test ds xchg in adc mov inc imul mov imul inc mov scas sub xor sub pop arpl fucomip and pop jne les cmpsb stc add dec sti aas mov adc stos and fisubl out fidivrl adc sub dec add in imul xor sbb (bad) push outsb push js hlt pop and (bad) int jmp pop push lret sbb push lods fidivrl mov mov mov int scas test push pop leave out ret test or pop mov xchg cmp pop sbb push leave lock (bad) outsl dec (bad) mov pop cmp push adc mov or mov cs mov inc inc mov or cmpsl pop jo mov adc pop jp xchg dec test in cmp cwtl push jl dec sbbl or adcb cs sti cmpsl mov jge xchg ds testl aam sarb test cmp lea push test mov mov lret clc xchg add (bad) cmp xchg xor notb sar cmp push in xor xor (bad) fdiv fsubrs js sbb pushf inc aam xchg mov jge pop icebp sbb mov addr16 inc xlat mov sub cmpsb sub xchg mov in pop scas lret dec addr16 mov call sub pop mov sub xchg mov addr16 jecxz pusha xlat cs add cmp sub cmp sub push xchg or mov inc ds xor insl pop out lret sub insb or mov leave pop or lcall jbe outsl sub and rcrl cmp les insl fdivl insb fcoms je leave (bad) jmp pop addr16 mov sub push repnz jp mov xchg pop xor and and or and in xor xor xchg pop in dec ret jb shrl pop pop xrelease imul lds and mov or fbld jbe push test sub push add sub mov sbb cli mov addb cs mov cltd pop das sub pusha ret test push lods sbb fnsave insl loop cmp test sub clc push pop dec fsubs sub xchg cli dec stc out mov push repz sub nop fistp flds or (bad) repz subb lods nop add notl psubsw xchg xor cmpl jb out pop lahf adc push xor mov cmpsl fsubrl or (bad) orl lret enter in pop sahf cmp or lret out inc pop dec sub inc jne nop jo (bad) push repz or incl sub and outsb decb js mov bswap jle push inc lea ljmp insl lods not or cld shlb sti daa xchg dec jle mov and xchg shll lods push pop add ja enter push not push rcrl js xor push mov sub jne xchg xchg sub ja,pn sub movsl les cmc sbb xchg sub xchg inc xchg lds sub insl pop outsb popf cmp mov adc loope xchg fnstsw sbb push leave (bad) xor xchg sbb mov dec inc mov mov je pop fs sti and (bad) or push std cmpsl add push sub add jmp in (bad) xchg push xor pushf arpl sub cmp adc enter test jg loop imul xchg lret cli daa xchg inc or pop jg (bad) sti lret sub adc xor sub jmp mov cmp inc loopne aaa arpl and call push lock xchg sub arpl fldt sbb pop in add sub add push aaa icebp fstps aam jl sub sub push cmp fsubl arpl jge mov push negl mov jbe cs mov pop iret mull (bad) repnz das dec js test inc jecxz aam push push loop jns xor or dec cmp pop inc not clc outsl gs es lods cwtl mov sub add rcr cmpl aas cs inc test inc add aaa stc mov cmpsl into push rorl dec (bad) pop out (bad) (bad) bound mov or xchg mov test fsts cwtl sub lret mov fimul daa pushfw sarl and mov jno into imul mov inc stos insl stc stc jp movsb sub mov fld add cmp dec mov test push push sub (bad) jne sub mov lds push xor add les aad dec sub xchg cmp scas out sub add jmp sub mov pop adc xchg push es (bad) mov push out insl sub lock js xor arpl push sub jge bound pop mov ja (bad) repz xor jle lcall jo lods sub push or loop sbb jne push je fmulp insl cmpsb inc pop mov outsl sub xor stos sub loope push sub mov int mov cld cmp add adc cld or xchg dec loopne xlat popa or (bad) loopne std call clc iret mov jne mov pop push pop outsb sub inc into (bad) fdiv stc test fbstp das cmp std adc and dec fwait adc mov stc cli daa xchg les sub repz sbb dec or cmp sub mov addr16 leave add lahf cmpsb and ss xlat ljmp cmpsl popa inc mov xchg inc addl add dec repnz mov imulb add (bad) out xchg pop sub pop dec and push jp sub lret or xor push repnz xchg daa insl test stos sub sub iret sub jg test adc sbb push and int add sub xchg imul es test dec cmp in dec push (bad) es out sub jb jmp push (bad) adc sub daa (bad) or mov sub cs adc cmp cs aas pop loop mov loop test mov cmp cmpsb call xchg test inc add std or add sub lahf iret (bad) ret dec mov aam (bad) jg addl loop ret adc adc sub cltd lahf mov add sbb pusha sbb sub scas clc sub subb shrb sub pop cmp xor lds scas sub pop mov sar fimull stos jle pop repz fldcw push and mov lahf (bad) cli int3 dec or dec jnp (bad) mov in icebp sub cmp movsb jmp jmp loop and sbb xor add dec pop inc fwait bound add cmp fdivr sub outsb mov dec sahf sbb sub sub out movsb xchg jmp mov mov (bad) add data16 cmp xchg push andb sub (bad) jle aad push clc pop (bad) (bad) js xor add mov sub inc int shll in cs push jbe mov adc sub fsubr cld push lret jno,pn push pop lds pop sub testb xchg mov jo loopne popf xor jp sub dec push jae repnz or out jne movsl sub dec push xor and cmp sbb pop dec sub cmp (bad) outsl fwait sarl leave add cmp popf nop lods push cmpsb (bad) movl cmpsl adc push xchg ror xchg jnp fadds nop mov int sbb test in jno adc mov dec lahf (bad) mov sub sti aas push sub jmp leave pushf (bad) push cld (bad) clc imul mov (bad) xlat sub mov test mov jb mov jbe and daa jnp fwait sub loop (bad) cwtl jl outsl sub ljmp repz sub mov enter cmpsl sub repnz mov inc adc adc aas mov xorl leave repz sub xor popa xchg in push addr16 sub aad sub imul inc sub jmp adc and jl sbb iret jbe rcl bound aam ja and insb loope test dec xor sub in push dec sbb jbe fldz call xchg sub aaa mov and sub mov rcrl out pop sub xchg mov bound sub cmpsb ds je lds imul and inc mov xor call sub in push jne cmp sub sbb leave es (bad) mov jns jmp cld shll xchg pusha rcrl aaa and call push jb xchg sbb lahf xlat daa xchg mov aam data16 or mov and pop (bad) xor fcompl pop fcoml jecxz out icebp mov (bad) loope or or adc sub leave jae adc xor loopne cmpsb cmc lock cmpsl sub xchg pop pop outsl push popa mov add call gs lods cmp mov in (bad) push jge dec ja mov ficoml lock imul leave fwait psubsw movsb xor add es sbb into (bad) inc insb xor mov cli or ss imul or push out and push adc test dec imul push adc int repnz sbb mov dec addr16 lahf (bad) cmpsl sub les leave pop mov es (bad) imul call daa out sub enter mov cmpl (bad) loope mov mov ds aas push push shrl test (bad) jb (bad) and or sbb ja daa pop dec decl jle jg cmp inc cmp mov mov int lret and ret xor push add std js into clc mov test repz outsl pop popf sub mov xchg mov push lock adc sbb hlt das ds push fs int sbb jmp and xor scas movsl in dec fwait cltd (bad) lock test xor pushf push and dec dec xchg dec xchg xchg mov nop sub leave pop inc adc fistp mov pop aam outsb xchg inc jae sub (bad) mov fisttpl sub inc (bad) sub inc call movsb test fs xor cmp and sub jne addl and jo mov push add adc stc rcr call dec pop cwtl stos movsl scas rolb jmp (bad) idivl inc mov and push sahf (bad) add ftst mov popa add sbb mov ljmp sbb das call jno inc xchg sub jmp pop repz xor dec lock sub inc xchg xchg aad mov dec pop xchg insl cmpsl jp pop xchg mov mov test inc inc or inc mov and inc dec in loop adcb int3 sub or in pusha sbb mov (bad) push sbb dec popa push dec mov out sub dec and jae js and pop inc cmp sub inc bound cmp cmp xor fldenv clc nop sbb xor add fwait jo leave clc (bad) in jle ljmp out dec bound rcl mov jb loope inc mov test push mov xchg fcoml faddp fwait jg xor divb sub mov mov and lahf push out (bad) push (bad) out sub pop mov xchg int3 sub stos (bad) cld jmp fs jne out fwait cmpsl movsb pop cmp leave dec adc sbb mov (bad) je cmpsl js mov int3 dec dec sub addr16 adc or in loope and call adc sub push imul daa cmc dec or lret jae out ds popf cmp pop or les int3 push dec xor push leave outsl and xor jbe sub pop pop in or mov outsb jno jl xor sbb cmp bound inc gs jae and xchg push int pushf cld fistpl push das jae int3 mov xchg fcomp sub inc pop out enter and inc popa in mov xor jbe add dec dec and jge into or or mov movsb enter (bad) cld fidivl popf pushf ljmp lcall or roll xor (bad) out (bad) loop xor fxch cli push lea push cmp mov cmp shr sub mov jge insb ds leave pop xchg xor int (bad) mov xchg fsubrl inc (bad) xchg sti lods or mov mov adc xchg cmp cmc push push dec loope insb cli incb subl lahf jnp imul cmp jb add outsl push (bad) jb xor leave push mov jle xchg add sbb cmc inc cs xor push es imul cmovp sti outsl push in xor stc xor test sub pop fwait lods pop icebp pop sbb lds jp add (bad) xor push sub fsubrl add dec push leave shl dec ss cld xchg mov fiadd dec insb sbb cmp or cwtl xor push into fidiv xlat xorb pop sub cwtl push (bad) aad dec push push out sbb mov push addl negl mov das (bad) mov adcb and rorb lds sub push movsb mov dec aas cmpsb pop push sub pusha pop lods xor and loopne in xor mov nop adc pusha das cmp dec mov test xor dec xor das pop mov imul lock pop fisttp mov test sub pop aaa sbb insl and in pop cwtl aas test out xchg stos mov xchg push adc (bad) ds lret cli push jb pop cwtl and outsb push mov inc cmpsl xchg sbb xchg push and insb and push push cld lret or inc sub and sti (bad) cmp push icebp and jg (bad) mov leave pop mov lock xor nop inc jnp mov lret inc ds cmp and mov cmp (bad) sbb mov insb mov pop insl adc push jmp xchg or fwait and inc daa and insl push jle jns imul dec add ss stc pop sub push dec xchg sbb push sbb cs jp sti hlt sub gs pushf test mov jg push orl sbb std je lret xor inc data16 sub sub mov mov popa dec adc lods xor jle,pt pop mov sub push dec test les xchg adc and punpckhdq sub sbb (bad) sub fs sub push mov and movsb mov enter sub cmpsl popf dec ja addr16 adc sub movl jo (bad) adc std and movsl bound push sti mov addb into repnz mov int push mov jp ficoml fidiv enter mov sbb clc xchg and xchg inc push pusha in sub jbe mov (bad) inc test xchg sub rcll hlt inc ret daa sbb (bad) aas sub jns stos mov xchg push adc mov hlt jg sub mov in sbb (bad) cli dec inc pushf sahf rorl xchg in std push nop mov getsec cmpsl xchg pop dec ds ds sub push rolb leave xor inc and sub (bad) jle and push cmpsb push repnz sbbb inc stos pushf or and punpckhwd add test sub icebp int xchg bound je out adc repz push icebp inc js push sub popf push cmpsl aaa fsin mov jo xlat sub adc cld inc mov int3 in (bad) fdivr enter test mov ficomp mov sub xchg sub dec iret xor jbe out sub movsb xor cmp scas sub mov adc or sub pop mov pusha sub cs loop mov push and sub pop ss mov stos aaa or incl and mov push cli or shll das outsl insb pop sti iret mov fsubrp mov cmp adc jle int subl bound and jnp or sbb sbb out (bad) sub jne sub imul repz int aad push fucom push inc (bad) into jle jmp ja add jp mov push push jge xor xor lds stos ds or jecxz push aad int3 lahf cwtl push dec dec cmpsb insl iret cwtl xor popf push int (bad) push sbb cmp jnp sbb mov sbb int3 repz mov pop scas movsl lods jo xor jge pop pop cli jns cmp in sti xchg loopne js cwtl and xor add jno aaa sti (bad) stc pushf pop je flds movsl popf pop lods xchg jge pop pop outsb out push ret aad fsubr mov inc movl stos adc ds jns pop (bad) scas shrb push jo xchg cmp xchg (bad) scas out sbb lock cs push icebp dec inc dec sub lahf push popa mov outsb cmp (bad) aad ja inc sub mov inc test jnp,pn sub mov repz xor cmp call sub rol dec (bad) fistpl push sub sahf (bad) enter out jb dec add popa xchg xor and mov cmp unpcklps loope fwait xor imull dec push stos sub pop sub fadd movsb (bad) mov and outsb pop adc pop or dec dec addb lds sub insl in push inc gs mov dec mov dec mov sub into jns imul push pop out mov daa je xor mov cmp sub (bad) fmul sub sub jo imul clc roll cmp pop mov cmpsl aam lahf xorb adc mov inc or mov js dec (bad) sub and mov cltd lds dec cmpb mov fs js sub jle test lcall sti add sub cli int3 shrl dec lea xor mov out sub pop ds sub insb sub je mov loop and in inc aam roll fs inc int3 mov into pop push sub (bad) and xor inc jg repz out out ja sub cmpsl stc or lods fwait outsb sahf fistp dec mov movb fs dec cld mov (bad) sti int3 xlat jb sub or xor push add fnstenv mov repnz inc cmc and xorl jmp stc push pop fwait leave cmp sbb xor sub sahf popa or pop addr16 mov inc hlt outsl lahf pop sub cs xchg mov pop cmp cmp ds push dec xor push xchg push test mov rorb fild cmpsb xchg (bad) cmp xor push mov xor movsl and pop test sbb ret nop pop insb sub scas push sub or das push push mov stos add sub ja sbb xor leave jle or jne imul inc leave push sub xchg xor jmp add outsl (bad) push dec mov hlt sub sub sub pop pop rol in (bad) cmp dec (bad) fldcw cmc mulb outsl pop test test sbb mov inc sbb mov pop pop in cs shrl popa sub (bad) (bad) iret pop lods sub mov and adc push test add cmp jne hlt jg xor addr16 dec xor inc mov xchg dec xor xor stos mov mov sub movsl movl or test dec sub cmpsb pop push inc jne mov mov aas sub sub xchg inc pop push push es in inc (bad) sub scas xchg xchg scas sbb pop jbe mov cwtl push idiv mov inc sbb scas mov daa or jl je jmp (bad) test dec loop sbb xchg fsubrs sbb sub hlt jnp cmp mov cs fnstsw or cmp cmpsb xchg jne stos mov add sub clc push mov sbb jno ja arpl sub lcall stos fcomi mov je and lock sbb or dec or xchg inc dec stos dec rolb lahf imul and leave or adc xor push popf mov inc inc mov test test rcll adc in ja fsubrs loope add daa add add bound lcall les mov (bad) pop jo inc mov jbe loop inc jmp push mov xor daa pusha psllq add cmp stos push xchg jle gs jmp add sarb add fisttp dec (bad) mov mov (bad) cmp aas and movsl cmpsb xor cmp mov fwait aam mov sti add push adc lcall sbb xchg xlat jle fisttp or mov sub in push ds mov sub xchg sub pop rclb sbb pop pop ljmp test mov (bad) sub out hlt xor or pushf cmc sub (bad) or pusha movsb stos xor sub mov mov out ss dec mov jns test mov xor sub insb imull jl xchg (bad) sarl int shl clc sbb mov xchg xchg sub cmp sub ficompl or idivl nop shrl cmp mov aam fldz repz add ljmp in push popa das sub jp pushf and jg dec (bad) push iret sbb (bad) mov pop xlat sub and cmp push cmpsl jnp xchg sub jno inc pop xchg sbb cmp jns leave fnstenv mov js lock jge jno and sub pop outsb ret push jne mov in cmp push cmp pop popa gs cmp les enter (bad) aaa (bad) push jns and iret lret jge out xchg movsl sub adc fldpi sub aad and popf add xchg lock xor aam (bad) inc jmp cmp (bad) imull iret or aam fst out pop sub bound je (bad) pop pop fmuls xor inc xor push xor in lods lods cwtl ficomp jb pop in pop leave stos inc xor pop cli insl int3 nop inc in cmp cmp and xor sub sub mov in ficomp xchg int3 sbb add mov dec mov (bad) pop mov mov push rcll ret aas mov push (bad) adc sbb dec pop out xchg out jb dec jecxz ja mov test inc cmpsl leave repnz xchg push arpl outsl pop mov fmull dec loope mov jbe dec add test cmpsl nop int mov fisttp es (bad) andl xor dec push and stc je sub mov pop mov add push xchg jne es sti or mov pop enter or lea cmpsb dec push lods cmovge test sub js cltd push cmp (bad) mov dec fcoml adc int push int dec pusha movsb sub cwtl xchg dec cmp sub leave repnz rolb (bad) and jge jg pop scas sub add daa sahf adc cmp jbe sub jns pop fidivrl jle enter lea pop shrl iret fucomi sub test lock not xor sub xor sub mov (bad) repnz pop (bad) shrb std sbb aas adc mov insb cs mov push jp jnp dec lcall pop pop lea jge pop je lock jmp stos arpl pop fldt imul mov sarb (bad) jge enter movl sub mov mov loop test pmulhw dec notl test inc or sub fildll xchg cmp test add xor push nop push cmp ret aam pop in inc and xor (bad) add sbb sub sbb add cwtl push mov sub dec or or adc and mov movsl cwtl sub mov jb sub mov sub iret cli aas and push pop mov ds mov and cmp jne das gs jecxz and rorb cs mov popf scas leave inc cmpsb cmp fsts call sub lar not addl fwait cs sub cmp push adc push sbbl mov push and push leave pop lea icebp sbb test aam lea aam cmpsl add incb int mov movsb or (bad) test sbb fld mov and and push clc lahf jns cmpsl inc scas ret lahf push xor push inc aaa rolb push dec adcl enter mov ret aad jge or pop cmp call dec dec adc notl push outsb pop (bad) xlat jecxz loopne pushf cltd std aas in pop fstpl xchg arpl stos int and lock (bad) cmp or add cmp sub mov or insl testl cmpsb (bad) fdivrs mov fsubrl pop (bad) jo pop (bad) sub and ficomp icebp repnz mov adc into push jmp es inc jb inc inc test cmp mov push push mov mov jl mov lock add sbb out bound sbb jge nop jbe inc jl movb mov sub pusha call cltd adc lret adc cmp leave xchg sub push push loop clc std sub movl dec insl adc dec or (bad) mov or (bad) shl mov lods inc xchg ljmp inc imul movsl mov xchg sbb aad fimull add (bad) sub ljmp popa out fldcw das xor aas jg scas ljmp add xor rclb popf daa sbb mov sub fidivl and lds jnp bound push push bnd sti in jbe push ret insl arpl gs cmpsb and jns xchg dec pushl pop lods in test dec cli jae mov insb sbb ss flds inc imul jge hlt inc pusha pop dec dec pushf jg,pn sub outsl fcomps lods lds sbb rorl inc cmp (bad) (bad) daa in jmp dec clc dec lea cmp hlt (bad) sar mov adc je mov adc icebp mov cmpsb (bad) ret bound sub outsb push push sub xchg xchg shrb mov enter jb push dec sub stos and jmp ret enter test stc push inc test lahf cs or and popf arpl stos xor cmpsb inc call push jle mov stc push les add shlb add jae xchg repnz inc push jno sub dec adc inc sub cmpsb cmp xchg imul ret sub jno insl mov lret icebp inc and add loopne adc aam ret shlb clc rorl sub xchg jl lcall orl cmp dec xchg adc repz enter or leave dec cs and (bad) mov arpl sub pusha sub dec in cmp (bad) and sub xchg xchg (bad) repz rolb sub or push cli add in pushf shrl xor push push loope xor daa lea pop push pop repz xor (bad) (bad) push lahf test jne mov test add push mov cmpsb jl leave lcall hlt dec pop xor das sub lahf jno fwait movsl sub adc mov popa sub imul in jmp pop dec mov bound sub out arpl sub jg out or add scas sbb jmp xor pop xchg sub or cld out push jp out sub dec loop sub mov js mov mov push mov neg in mov pop or add ds pop jno jnp inc lea iret adc outsb and push scas mov and mov xchg ljmp (bad) (bad) test xchg das mov pop sub call fidivrl and jae das popf (bad) cld daa jmp add push sub mov inc andb mov cmp cmp xor jp outsl fnstenv pop mov in mov mov mov mov sub leave xchg mov inc fwait or leave sub cmpsl fmul mov in adc loop mov mov xor add insl or mov mov out fdivr int rclb add xor jp notl mov popf mov icebp mov scas sbb sub push neg call jmp (bad) in (bad) (bad) sub fisubrl adc ds xchg jno pop mov sub cmpsl cld pop ret loope mov out jle or sub pop mov push push pop jmp daa pusha pop xchg inc cmp ret push sub jns movsl std call sub dec pop sbb sub and inc iret sub out jne cs lods push jae outsb push out add addr16 mov cmp sub (bad) jne sahf ficomp mov std push jecxz and pop jno fmuls xchg mov adc cmp sbb push pop iret jo jmp lcall and jb fcomps jb cld iretw test lods cld mov sub mov or inc sbb push lret sti cmp mov inc jnp daa add mov dec xchg cli imul dec xor xor mov mov lds repnz xchg sub mov dec ret push ja (bad) imul (bad) mov xor sub lret sahf or sub dec add loopne sub sbb jne xor (bad) adc cmpsl or jns sub lret sub cmp out dec mov mov add adcl xchg xchg movsb insl or call popa mov jne sub into test out xor or int lea cld cmp adc jnp xchg and sahf dec push scas xor lods dec (bad) out cmp imul cs enter add inc shrl inc sub cs cmpl or loop nop sub cmp outsl aam mov sub mov daa mov push adc sbb jge lret mov addr16 (bad) cmp add push xor fwait cmpsl mov out out cmpsl bound and (bad) sbbl arpl jmp das lcall in mov shrl xor sub inc adc subb shl outsl sub ljmp add call lea push dec pop lock fidivrl jp xor cmp sub mov movsb sub jbe fstps pop mov sub and sti dec mov cs dec dec pop adc pop add cmp xor cltd xchg and sub and mov lods inc daa dec mov outsl addl int pop jno cmc ret push pop pop mov xchg in je clc sub loope pop (bad) jb sti cmp add sub int push insl and xor jno xchg jle movsb (bad) pop pop cmp je sti adc (bad) push jns ja (bad) sbb xor clc and mov js int xchg jo loope (bad) mov push out sarl cmpsl movsb dec cmp aaa lret loop les mov dec pushf or jl sub sub dec ret loope movsb and push jno mov xchg leave jne push and fs jbe ljmp (bad) fsubl (bad) mov cmpsl leave fdivrp sbb (bad) in cmp mov add (bad) adc and test (bad) idivb pop cmp leave stc dec movsl inc pushf paddq cwtl push es push sbb sbb xchg pushf insb pushl cltd mov xor imul inc cwtl jp jb and xchg push or adc sub xor int std stc mov inc imull sbb stos aas mov sub movl adc clc dec movsb push aaa cmc jle and popf add adc sub popa push push sti dec cmpsb (bad) mov icebp dec sub jno pop jnp cld pop cs pop and and or xor mov mov add (bad) stc ss jnp sub xchg xor dec test fistpll (bad) int sbb push in jo (bad) inc ret add push leave jle jp pop rcll lret xchg and dec (bad) popf sub mov aad mov xchg push jns aam pop icebp fcompl or mov xchg mov lods ficom adc push fildll test loopne insl push jnp loop cmp cmpsl shr sub les mov inc sbb out hlt pop ljmp jecxz xchg adc sbb jae lods and into shrl clc push scas imul xor sub mov les sub lret and fcoml and ss and std dec pop dec pop inc jae inc add imul xor adc dec xor es std daa adc fldcw jne cmpsl rcr test add dec xor orl repz pop (bad) or ffree mov cwtl (bad) cmp dec outsb cli test nop cmp bound movsl or outsl scas rolb mov cmpb sub sub mov jns (bad) icebp rorl sbb (bad) mov push js sbb adc sub es mov jae xor add mov daa push int notb xor sub nop push inc xorl dec aas aad lret sahf inc insb je fwait adc mov pop rsqrtps add cmpsl test ret sbb sub fsubrs and das pop mov xchg sub (bad) sbb and or push xchg imul addr16 pop lods cmp push jne push push xchg xchg xor aas (bad) mov and inc pop lods addr16 mov test xor sub sub xor pop bound cmc aam jnp (bad) cmpsb xor mov std daa cld notl imul dec lea xchg sub xchg lahf mov xor mov jbe jo rorb mov ds xor sub push sub mov pop in enter sub ret sub push (bad) xchg adc sbb sub popf lods in fwait sub dec sbb aaa push ds mov leave out fisubr mov sub fcomps push xchg xor pop ficompl dec dec pop test mov adc mov pop sahf outsb xor in sub cwtl jae (bad) mov pushf jecxz cmpsl push mov clc rcl cs xchg scas dec cmp addr16 mov mov bound push add mov dec test jno adc cli dec test jbe les fwait sarl jp xchg push dec leave fildl inc mov dec xor ja push adc cmpsl mov clc sbb enter or (bad) or rorl lahf mov adc repz in jne xchg add pcmpeqw ror mov int into cwtl pusha dec xchg or lret sbb das xor fcmovbe cs jo push pop (bad) xchg fidivr leave adc or call push push adc out adc xchg cmp or xor mov inc mov cltd sbb jo mov rcrl xchg push or inc cmp cltd adc adcl adc push mov push leave sbb ja sub ss dec dec xchg fdivrl cltd add adc push out leave pop inc loopne sbb outsl fs ret and mov sub push adc xlat loope add xor cli and imul int add sbb cltd pop jecxz sub addr16 mov pushf jbe pop movsb fnstenv xchg xor sub cmp scas out outsl pop and add dec sbb mov shrb mov pusha hlt fcomp lret mov daa mov adc mov into and add int mov stc shrl inc fucomip ljmp sub loopne out test addl adc sti in sub sti xlat sub test mov cltd les inc add cmpsl mov push pop push xchg xor sub or inc sub inc fadd cmpl das mov imull sbb (bad) pop (bad) dec mov adc fsubrl lcall mov out into and scas pushf stos mov lods in jne xchg push sub dec mov (bad) icebp xor jmp loope,pt aam adc mov js sbb mov jl push divb pop mov xor mov sar mov test inc xchg pop add mov jae sub loop jmp xor cld push mov sub sarb add dec (bad) xchg out push push je push jmp (bad) mov sbb sub push xchg sub cld (bad) xor jb cmp enter add adc std fisubl push out mov sub mov push sahf int jns xchg mov adc sub enter fimull jbe js sub push (bad) jne ss cmc sub test hlt inc jb addr16 sub notl sti dec sahf loopne sub mov inc js push mov cmp sub dec adcl xor sub xor sbb sbb inc sub adc sbb jno ljmp pop out dec xchg sub sub mov cmpsb sub sbb push push repnz dec orl out arpl or mov add stos out jmp into call loope fnstcw sub mov cltd loope xchg rol or sbb mov jb adc cs testl inc xchg sub pusha inc pop cli add (bad) out inc loopne jb out sub sub sub or ja stos and push faddp adc mov push jecxz xchg sub lea sub orl and sbb xor pop sbb subl cmpsl dec shll mov loop pop repz sbb cli repnz pusha sbb push add or cld enter inc jb ljmp or push jno,pn jmp out and jl pop jp loopne xchg and stos mov scas aam outsl and sar cmp rcrb ss mov and fs ficompl inc or jl repz cld push mov push dec ss icebp (bad) dec das lods test xchg push ret ds mov sbb hlt outsl sub mov pusha pop inc adc adc stos mov xchg xor sub cmc push cs fistl or stc sbb data16 mov mov aam (bad) xor in push xchg dec add loop fistpl (bad) scas cmp inc aad test repnz hlt in mov jmp cwtl dec ret push into loope daa fwait cmpsb idivb sub in mov inc mov sub dec rcrl cmp (bad) pusha outsl fsubr (bad) loop leave or sarb xchg inc push stc aas icebp shrl cmp sahf lods sbb or test nop (bad) mov fldcw sub sbb sub int3 and sub addl sub and pop pop in fcmove in inc add inc mov adc sub cltd dec jp inc xor mov mov arpl xchg sub and sub sbb mov cmpsl sub sub imul sti (bad) aaa xchg push xor dec pop mov ljmp dec jo mov add sub inc jg mov cs xor js sub int dec sub jecxz clc sub xchg sti mov mov adc outsl hlt int (bad) mov sub arpl (bad) nop ds cmp jmp in cli dec (bad) cs or inc mov xchg push fcomp xlat sub outsl mov add mov sub fs rolb je ss sub or test xor mov sub (bad) push pop dec into enter mov xor push repnz push adc push imul subl ss call xchg fwait mov pop sub lret jg adc xor aad sub sbb ljmp dec bound orb xor cwtl scas mov or lahf dec jg jns push dec fwait loop jmp pop ffree aad xchg adc adc lods jae jmp cld push push pop and negb outsl sub xchg fcoms es cmp xchg pop push mov and dec jge sub dec ficomp js and hlt mov jnp cmp push ljmp xor stc scas push inc mov mov cwtl add xor sub mov nop inc imul or ret fisub clc fiadd mov cmpsb das in or (bad) mov dec (bad) xchg cld xchg xchg inc sub movsb inc arpl lods push cld dec jne sbb or fcmove in jg add mov mov pusha push jo cld dec pop in loop gs cwtl leave jbe adc jo xchg push mov mov test loop adc or stc sbb adc and inc pop dec adc ss push pop push mov ret jbe cwtl push stos pop xor add syscall repnz mov or adc jp arpl and leave sbb dec jae and sbb adc and (bad) outsl push lret bound lahf cmpsb inc mov pushf add sahf int dec jmp mov cmp or adc mov pop adc enter pop mov jle jae imul ror ret sub xor out pusha outsb mov or sbb sbb or xor mov or sub mov jle dec pop mov iret sub ficoml repnz mov adc or lock shll test in aad daa mov xchg outsl cmp lret add (bad) fcmovbe sub clc inc sub ss ljmp insl mov ret addr16 xchg jle cmpl cld add push and or out test aam xchg and repnz (bad) aad dec xor subb cmp dec adc aas out xor icebp mov pusha pop movsl or jb push in sub jns jbe popa mov and aas sub stc lods (bad) sahf mov xchg pushf das xor inc cltd and and or sbb ds decb pop pusha addr16 test pushf daa imul jle or push xchg ja or (bad) inc orl mov sub cmp inc sarl inc add imull into ds mov das jnp push sub adc pop dec sbb (bad) fisub fcmovu out mov jmp lret mov sbb gs xchg sub push stos sub (bad) lcall daa mov xchg jbe or and xchg jmp ret fxtract scas pop ljmp loopnew inc orl sub pop cmpsb data16 and js (bad) mulb jl or xchg movsl movsb jo add jo and mov sub lock or sub mov shrl adc pop cmp or and lock daa add sub push sub movsl and mov sub dec shrb push inc jb jns pop sub stos lahf fild mov (bad) imulb loopne sbb dec lea sub imulb mov or stos mov test pop pop into cli popf dec sub sahf and faddl das pop inc loope and inc cltd mov ret mov push xor or cmp xchg scas cmc (bad) dec sbb lock rorl pop int out and xor ja sub xchg push or push and movsb (bad) aas jbe pop xchg and mov cli fsubrp aam mov xchg jnp lock dec std push cwtl andl adc pushf int inc (bad) dec daa pop inc cltd daa aas (bad) push xor daa mov and mov sub xchg dec popf (bad) mov mov lods sbb pop ds jle or notl pop pop outsb stos shrl cli icebp jge xchg fstl mov adc xchg mov pop cwtl xor or and aaa ja sub into jns dec cs fidiv inc arpl or ds js xor cmp sbb aam iret inc mov push and ss push stos nop xchg sub lret rcll pop mov js data16 out inc scas out hlt (bad) mov sbb inc in ret pop shlb or push pushf (bad) cltd sub xchg or pop pop arpl shrb push das popa cld loopne mov inc test (bad) xor sti sub adc loop add sub in sbb aaa ficompl (bad) (bad) js test movsb and push xchg sarl sub jge adc dec xor adc incb jnp dec fsubs xor push xor and sub jns inc call xor mov sub jno mov inc lds xchg add jmp rol cwtl outsl xchg mov xor leave sub jb inc or and lock fcomip pop sub sub and fwait insb dec sub (bad) sbb adc leave fiadd test lcall push sbb dec jb mov orl add adc ss repnz cmpsl mov mov or movsl sub jae faddl mov test jmp sub js mov (bad) ficompl sub dec jge push call or lahf insl in call cs loopne sub cmp rorb sub inc add sub nop shlb aaa pop (bad) xchg (bad) out bound insb ja daa jae test jbe sub test fs movsl test loope rclb xor cmp or dec push std lret push mov daa leave sbb outsl or iret and (bad) push inc push xor nop jns dec jb lcall test icebp jne pop xchg int mov std in test std push das add (bad) sub cltd sub nop ss jae insl jo xor lret pop inc out inc jb mov dec inc test mov stc mov cmpsl cwtl movsb jb jg xor int pop mov fimull sahf mov inc shll cmp jb cs mov cmp test mov repnz inc xor (bad) lock push add std mov out test int xchg (bad) jle incb cld pmulhw adc fstps lea pop xor cs push adc divb fild jl sub add jno repnz (bad) mov push jo dec add jecxz jge in dec lds pop pop add cmc inc popf scas and movsl rolb iret in ss insl pop pushf xor jmp mov jbe inc and jmp mov movsb insb mov dec inc incb and imul or or dec lahf stos in fistpl xchg sub push jp mov and das mov movsb daa xor les push xchg ss jbe mov fadd scas add add ja and std and pop add js pushf popf sub pop cwtl mov movsb stc pop int pop loope (bad) pop sbb pop mov cmpsb or jp call lock icebp punpckhdq adc int cmp cmp or push jb adc pop mov cltd add (bad) add sub div outsl adc scas cmp repz test aaa nop mov dec cmpsl xorl dec int jns loopne call cs add (bad) push adc dec jno push inc push pop leave (bad) test cmp xchg push int jns mov aad (bad) bound push data16 dec add fmull outsb mov push jno pop sub icebp pop test sub (bad) xchg pushf aad test push mov xchg and and insl fstpl mov daa xor outsl sbb sbbl data16 jno cmp push loop add in pop and push mov or dec in rorb xchg (bad) jp into (bad) std stos int3 (bad) int gs out sbb xchg xor push movsl lret call xor adc cmpsb lods stos pop jo cmp fadds mov pop and imul pushf imul mov dec xchg push xor pop test es dec int ficomp cmpsl movsb (bad) sub (bad) (bad) gs xor dec xchg jp int3 add leavew inc xor inc push dec jg pop cmp lock fisttpll adc inc push rorl and (bad) push roll pop leave addr16 push sub fs and icebp cmp jl insb sub cmp push ret (bad) repz into jp xor dec or out jnp leave and pop into sub ljmp xchg and or jno ja inc cmpsb sub push out lret movsb jno or and (bad) cmovle gs cwtl inc (bad) mov add nop jnp daa bound and cmpsl fisttpll xlat mov rcll subl leave sbb xor inc push fdivl push pop (bad) jmp outsb sub int push xchg popa lock fdivrs dec pop pushw adcl pop int mov nop mov aaa int3 mov cmpsb cmpsl int sbbb cmp sub adc cmpsl and cmp push mov leave repnz and adc leave mov in push cmp sub and add inc fiaddl dec or leave notb outsl (bad) sbb insb iret xchg ja push cmpsb push pop inc add and jo lods cmp inc mov and arpl inc dec int imull jnp cltd repz sbb cmc push add aas sub xchg cmp jmp test push inc test mov pop push pop in arpl sbb aad out add data16 rolb in pop xor test push cs test xor cmpsb and xlat adcb int mov sbb out push (bad) and xor je sub rorl gs int in enter int3 adc in (bad) inc cmp movsb test lret arpl mov loope add or popl out inc jo (bad) push adc je jle aas pop jg push aad and and pop adc (bad) aad sub pop (bad) sahf (bad) fistp push mov ja sbb and and hlt jnp push jae (bad) mov stos scas xchg addr16 lret inc stc jg (bad) daa fldcw mov mov into fisubrl sti push leave loop or add fcompl lock leave jb inc cmp cmp sarb es enter out mov inc push sbb mov dec inc mov xchg and pop outsb arpl scas xor std xlat ss xchg ljmp mov (bad) mov push inc xor sub sub mov insb sub fmull mov adc in sbb inc daa out sub sbbl mov mov fwait sub xchg sbb mov and and xor lahf push jbe xor inc iret mov add sub cwtl fsubs lret and test adc mov xchg jmp and lcall test mov (bad) lods in inc pusha icebp lcall fs ret add arpl mov adc pop sub in ret sub ds pushf stos mov ss jmp dec jle punpckhbw out in in (bad) cmp pop lods hlt aad xchg and out cld jno sub pusha in fnstsw aaa das lret pushf aam push mov sbb cmp loope shrl out popa fs imul out sbb in cmp jl sub fwait addr16 movsb lds or add xlat shrb xchg xchg iret or aas cli dec dec jnp mov imul rcrl lock xor xor and sahf mov aas or loop call shlb ds xor cmp and gs insl frstor mov sub aaa sub (bad) lret lret jle or adc mov leave lcall pop in out pop mov dec ja add lods (bad) mov aad inc sub push cmpsb jno popa movlps cmp xchg inc in mov mov test xor jge loope push adc fwait mov sub cmp popa data16 sub ss sub sti pusha xor lea xor scas cmpsl xchg cltd fnstenv adc push and std (bad) cmp inc jmp ss insb jno repnz jge into push sbb push mov pop push scas sub int3 mov cmp sub pop jo mov sub cmp push mulb push out iret jle adc or sub dec sti jae lds inc mov (bad) jge jmp dec cmc cwtl jns leave inc arpl xchg dec call bound callw or cmpsl cmp movl andl push sahf sbb lahf adc mov jnp push daa lret push cmp fsubl pop ljmp aad cs mov xlat test xor jns pop loopne or ljmp int3 arpl repnz (bad) rol imul pop nop mov sti inc imul adc cmp leave jge (bad) inc loop cmp push ds shrl je es outsb mov pop daa test mov mov cmp xchg push out cltd push popa pop xchg ljmp dec mov pop lea movsb fwait cmpsb mov addr16 cmp adc test hlt push in dec jle jp mov sub int mov mov pop fsubl push pop jle cwtl test aam rol xchg loop pop jne xor push cmp dec mov nop inc sti dec dec (bad) mov jae rolb sbb int fbld lds mov adc notb dec mov lds jle jbe cmp jno enter push pop mov (bad) jecxz mov es clc jbe jmp adc les mov test mov addr16 leave jp aad std pop mov mov mov mov hlt sti into pop rcrb xorl inc mov int pushf dec sbb adc call mov add pop inc popf cmp je xor sub jb cltd dec sbb pop pop dec cmp xchg and imul push dec inc add test mov outsb rorl lret xor cmp jnp jmp inc int and pop test jmp mov daa sar arpl inc std lods in and arpl cmp pop cmp pop jbe jl loope push push gs mov push xor sub and (bad) mov popf jae jne daa and (bad) enter test push (bad) clc repz cs in leave pop sti inc cld in insb jl test je,pt ds and ficoml adc push mov sub cld mov in add (bad) push fwait jae sub push testb cmp rcr inc popf sbb mov sub sbb sbb xor push ss pop bound lea jb sub das pop mov inc mov inc add mov pop mov push stc inc or mov sub ds jne or subl or add pop sub xor sbb fldt inc sub ss sub lcall xchg sub push or mov loope outsb shlb (bad) je sub xchg pop lahf or dec ss frstor pop test adc sub pop and in addr16 ret in sbb cwtl movsl sub jno gs sub out rolb jb push sub scas loop sahf inc into stc daa sbb pop insb lods sub push mov mov sahf fs push cmpxchg8b (bad) lret mov sbb and xchg rcll and (bad) mov (bad) fisubrl cmpsl sub sti dec das adcl shlb mov shll sbb mov sti dec jo dec or pop sub call ja or jp xchg daa out fnstcw ds sbb js loope popf and shrl (bad) iret jg sub hlt sbb mov ret add jne (bad) mov sub mov adc mov inc das loopne test pop sahf stos incb and cmp fsts iret aam jp cltd mov mov mov fsubrp cwtl pop sub push repnz les and lds rcll dec movsb mov pop sub shlb fs aaa lahf mov test pushl sbb bound pop stc xor add dec push sub (bad) ret mov loop and test imul into fiadd jmp adc rcrb mov movsl movsb mov dec popa cs cmpsb sbb push out sti icebp inc test push jl daa fstp cwtl sub adc cld push inc and cmpsb sub jmp mov xor mov pop jecxz sbb cs aaa adc mov dec xorl adc cltd jecxz mov pop mov std in imul mov jmp lock rclb mov inc aad dec pushf scas out inc call test shrl xor push cld or sub outsl div xchg sub loopne and out outsl pop popa sub push dec decl adc aad out out icebp cmp ret adc div mov jp cltd sub jl dec (bad) pop jmp xor jns jno enter sti test jle push mov push pop ss and and (bad) mov mov sbb cmp adc sub scas cltd push sbb jl roll je add stos rorb inc mov sub pop and incb sub sub add mov hlt add cmp push push push sbb mov dec push inc and sub sbb mov sub sub push adc mov (bad) jmp xor jg xchg xchg cmp imul (bad) repnz hlt mov enter jns cmp jnp gs rcll js xor dec cli insb (bad) mov sub jp es and (bad) sub mov orl outsl addr16 xchg xlat mov repnz lods cli imul add sub cs js mov pop in cmpsb lods jecxz cmpsb jl jecxz xchg lret or inc pop and in jbe mov lds stos sbb pop pushf dec andl jnp mov rcll push (bad) (bad) sub (bad) icebp inc out mov sub xor sub jp jae mov leave sub sahf lea fstpl fs xor cli lock pop jo mov mov fistpll test jns loop lahf cltd inc fiaddl jae daa add mov mov push cwtl xor addr16 sti push mov inc int jne dec and in xchg dec mov dec cmpsl or out cs faddl fs lock push cmp dec mov or mov cs in shrb xor aad xchg push xor push imul xchg mov add pop xchg jbe outsb mov lret add pushf add out jb movsl out cmp or outsb and pop cmp inc push sub arpl fadd xchg aaa scas leave sbb test das ror popf out dec pop clc push pusha pop xchg push int jle mov push adc inc sbb jb fwait cmp or test mov mov mov lock data16 xor dec movl insl push lea or test or push aaa enter mov push in cmp sbb stos insl insb ds sbb sti xchg jb in lcall mov mov push add cmpsl movsl jmp daa and cmp sub rorb (bad) lock xchg imul test sub test test dec sub call sub pop mov es add std mov push rolb les rcrl xor call mov (bad) xor in sub add ds push rcl xor add cli into test dec ss cmp xor imul fmuls xor mov mov test arpl mov flds pop inc fwait sub lret out pop cltd mov sub mov (bad) jl stc rcr in jns pop sub xor daa inc roll mov sub in daa lds xor mov pop pop push sbb cs decb push mov sub inc test sub sbb ret stc and sbb call jae inc pop dec stos sub push cmp (bad) out in mov sbb inc and jecxz sub jb adc sub or dec sub pop outsb stos dec sti and scas jmp add fsubp (bad) mov cli adc dec cli dec mov addr16 ljmp leave push (bad) jo scas mov out (bad) dec std int3 rorl sub and xchg or cltd sub punpckhwd sub push ret xchg dec add jl enter pop out xor ds ret sbb (bad) dec add inc inc mov lret pop hlt aad push inc sub das cmp xchg pushf push cmc hlt outsl into idivl test das xor test inc pop decb xchg push imul sub out je or cs aaa shlb sub lcall mov (bad) xor lods pop cmp into fwait sub clc sub dec or push sub aas outsb outsl int test mov out sub bound cs jmp sub mov mov les sub fadds sbb sahf hlt fsubrp fsubl fdivrp pop or ds xor xchg push cli insl and (bad) daa hlt cmp out pop cwtl ss sub ret jne adc int3 lcall out sub repnz mov and (bad) rcrb push (bad) mov ds pop leave sbb aam dec jmp inc test push jns test push sub add (bad) inc (bad) insb inc out sbb sbb leave jne jbe jno sub mov jae sub (bad) or testb push push int3 mov iret popaw ja sub dec or cmp push pop (bad) pop mov adc cs (bad) (bad) xor jbe addr16 mov jle mov dec in add arpl (bad) or and les cmp jp pop jbe cmp jp daa push daa lahf add xchg mov lcall mov andl lods push sub and cmc iret sbb (bad) push je pop insb xchg das data16 push aad dec push cmp fnstcw sub dec pushf mov insb xrstors iret pusha fwait mov arpl cs sbb into sub movsl push mov bound xor push test sar cmpl cmpsb out or mov dec je cld popf sub sub pop pop cmc push decb bound dec test xor insb pop sub xchg add sti lret inc hlt sub cs cltd data16 push pop jg (bad) add and xchg and loopne and mov shufps or adc or or daa sub (bad) rclb pop add jp sahf add dec sub inc popa lret cmp loope dec sub icebp and (bad) mov mov sub push mov jle dec mov dec (bad) sub sti or mov rclb sub push sub cli sbb mov fildll or hlt cmp sub popf mov push jl xchg xchg iret stc push subl lods push stos (bad) lock (bad) (bad) mov daa or mov add scas leave mov xor sub cmp or ljmp or or (bad) fsubrl sub sbb cmc lret jg cli pop imull out aaa xchg mov roll push or rolb sub cmp mov imul daa pop call mov das sub addl add sub cmp mov pushf stos jmp fs aad sub decl mov pop push ja scas cs cltd mov and mov and adc xor fildll mov loop pop rol repnz add sbb ja cwtl lahf sbb xchg push sub sub fimul sbb sub fcomp push mov imul sub pop sub jg push out popf xor xor lds test xchg mov or jns sub hlt mov daa fisubl in sbb movsb stc cmpsb clc movzwl js jnp fbld jno gs outsl push pop or icebp dec pop rcr imul sub xchg push xchg movsl inc add mov cmp and fidiv aam mov loop daa cmc les inc test mov adc ss ds sbb inc mov aad scas or jg xchg test in mov mov cwtl dec scas mov mov cmpsl xchg pushf fdiv xor and xor and sub sbb mov std jl ret loopew adc mov add xchg cmp jbe or mov jmp xor (bad) mov fmull movsb xlat lea mov rcl cmp sbb lods das sbb push imul mov mov lods jno adc pop movsl out les stc cmc jb lods call and adc pop stc (bad) jecxz lret into sub inc pop jne jp int dec in arpl push pop xchg dec inc dec fldcw ja lods and jecxz movsl cld adc repz inc pop jo ds mov mov push pop loop cmpsb fs jg repz ds jb fstpt fwait sub inc dec stc (bad) jmp pop sub fcomps and dec cli jne pop aad or dec out jmp rcl mov into ja cmp scas sub or sahf daa mov xchg lahf mov add push or fsubrs loop mov ljmp loopne ret (bad) test (bad) popf jp sbb inc in cmp sub in mov fchs push movsl sub cmpsb xlat push imul sub fdivl and push sarl pop xor test sub xlat add out or subb pop (bad) pop dec test mov jl sbb pop xchg xchg (bad) cmpsb lcall gs pop push movsl and sbb popf sahf ss out xchg dec lods lcall jo mov cmp xchg das test mov orb cmpsl lods out movsb and xor gs inc xchg inc sub sahf xor lahf dec inc data16 out pop adc in jnp mov outsb in jns xor xchg daa lahf pop or mov or push out and repz xchg add pop jb inc mov (bad) mov int3 rolb pop scas and sub imul ja loop cmp sub dec lods aad sahf aad lea notl inc jb test imul cs pushf cmp sbb bound inc loope stos in call and es cmp cmpsl out adc sbb xor cmc cmp xchg add sbb int outsl (bad) add pop loop fwait push add in test cld rclb sub lret sub out ja pop std shl push jb or sbb (bad) inc pop xchg cmp jb popf and mov aaa sub lock int mov fwait rcrb sbb inc loop (bad) cmpsl out test xchg icebp mov (bad) (bad) push fmull lahf int and mov dec or jl and adc leave and sub fwait push popa ss cs js pop jp sub mov jl jo popa (bad) mov fcmove xchg push add jg cmp mov out pop stos lret leave or inc fisub inc (bad) push inc ljmp test leave (bad) repnz push fsts jne fstpt push es mov xor cwtl lock addr16 popa pop cmp jecxz or sub dec (bad) sbb sub popf inc nop push sub or cld pop in sahf jnp popa popa lcall out mov (bad) aam adc (bad) adc cs repnz out fldenv jp scas add std jb sbb stos inc xchg int3 stos push hlt jmp in mov and sub mov and push push cmpsl add mov cmp in xor ss aas fstps fcompl (bad) fisttp pop mov (bad) (bad) int addr16 call lds adc loopne inc sub les xor xor cld dec (bad) dec lahf cmpsl sbb mov mov ret mov xchg and stos cli push leave ljmp pop sub jg dec lahf arpl and in adc push jbe out push push jecxz cs incl sub scas movsb std sub cmp test sub pushf jbe pop adc cmp ds xor jo sti rcll scas sbb mov test mov and fistpl inc mov sbb and hlt pusha insb sub and icebp ds sbb aaa test cmpl sub (bad) roll xchg inc pop dec (bad) sub in sbb insb inc add xor fwait sbb ficoml fsubrp cs sub mov add push mov xor sub scas sub inc push ret push sub mov in (bad) sub mov sub sub mov xchg sbb and sub add mov sub call movb fstpl test or push fldcw mov out cmp dec jg test mov sbb je sub ja add inc sahf xchg sub pop mov call sar or cmc sub dec bound movsb mov lea inc lahf push movl sub adc dec les addr16 pop jb inc sub out pushf mov adc test inc lcall mov (bad) push and pop pop xchg sbb mov jmp sub pop (bad) cmp clc cmpsl or mov lock xor cmp cwtl add xor mov pop push jmp xchg mov sub adc frstor inc or lock in icebp test and dec jb divps bound test and mov sub push pusha cmc (bad) xor jne add jecxz push mov jmp dec dec jnp imul and stos sub dec or mov xor mov out push cmpsl ret sbb aad int3 inc xlat into leave sub and dec inc rorl mov jle in sub dec adc enter popl test add and outsb mov bound sub push push sbb sub mov jb (bad) pop loope test mov test dec push repnz es cs ja inc movsl push sub sub outsl cs mov mov sbb dec xchg mov sti dec sub leave add xchg jno adc cmp das mov and or lods cmpsb push les sub mov xor or nop xchg sub xor push enter leave aaa ds sub in test (bad) xor daa mov andb push xchg add cmp or sub or pop xchg inc sub (bad) mov cmc ss cltd sbb xor inc iret (bad) ffree (bad) test sub inc addb adc inc cmpsl clc or outsb inc mov mov cwtl push jle push repz cmp cmovg sub adc sbb stc sub ret push mov mov outsl inc xchg fstps pop xor jo cmp mov dec sub push sub call sub daa mov sbb inc andl enter int jae leave ss cwtl in add sbbl mov enter jecxz mov pop fwait dec sarl cs push sub (bad) repz xchg xchg insl test dec inc adc stos xor mov or inc jp fsubrp pop and cmovbe ret sbb mov out data16 sbb or fbld pop or data16 rcl pop push add sti jge lds inc jecxz adc or lahf jo,pn jle push das push lds xor cmp xor sbb dec stos jno jb jecxz in in (bad) into test (bad) dec sub popa jmp and xor test inc xchg sub mov and imul es jnp push jmp jbe aad jae sbb inc decl fisttpll nop sub cmpsb lods cld daa sti sub xchg push ds inc add xor movsb sbb sub mov dec adc sub mov fdivrs jecxz pop scas enter adc mov imul sub add mov mov jl mov xchg jnp dec in fsubl cmp xor cltd push imul lret sti sub fdivrl xchg cmp sbb jmp push out pushf sub xor rcrl popa jmp iret negb and in xchg and out inc inc arpl adc sbb cmpl sub sub addr16 sub jnp ljmp inc sbb push cmpb mov sub dec xchg in subl adc sub into test insb pop (bad) pushf push add loop xor leave jmp xor push jg data16 sbb pop lea inc cltd jge js xchg aad scas in mov loop notl mov jo fwait or in pusha das fwait aam test push mov sub out push push mov leave ficom dec test adc addr16 fnstsw jmp andl cmp aad cmp popa int (bad) in jp push jae (bad) xchg sbb sub push leave sub (bad) cmp in lret fiaddl lock add dec (bad) daa cmp fsub sub push xchg push inc push dec dec xor aad and in outsl xchg xchg mov lret jmp pushf push loope data16 cmpsl dec inc jne mov jg add pop push rorb sbb jmp jne xchg jo std mov dec mov movsb inc aad and sbb addr16 in xchg inc xor and shrb or mov ret jb pop jne clc inc (bad) leave add sbb mov xchg and (bad) (bad) int sbbl xlat cmp ja xchg mov cmp sub test lret lcall mov xchg punpckhbw or mov xor subl jae rcrb sbb sub scas mov inc enter sbb leave push loopne push daa jbe mov cmp pop leave (bad) nop or xor mov xchg mov ja sti into sub stos repz je mov test sub outsl ret add enter cs mov fsubr mov dec and aam clc jb inc adc inc sub int add inc xor pop xchg rclb inc js xor insl nop jb lahf jo inc push push push xor cltd push aaa adc movsl int into and add mov jge add mov jnp and or in pop pop mov sbb hlt lock xor sahf jg pop mov mov xchg (bad) (bad) and dec xor je enter pop add outsl shrl and and data16 rcrb sbb sti out add and int3 cltd insl add lcall xchg sub push stos inc jo scas inc daa cmp lods fstl mov ret aaa pop pop cwtl jl push in ret xor daa aaa cwtl (bad) push out mov jmp jmp and cmp aad sub (bad) xchg iret lods add sub orl jbe adc inc mov js mov jb test sub push (bad) ds ljmp (bad) inc aas push (bad) push xchg pop das les cmp loopne or inc stos sbbl inc jge pusha cmpsb cwtl push jnp pop fisubl cmpsb movsb xor in sbb jle (bad) int inc adc fwait mov mov mov int xchg into xchg cli in inc and push jl aad cmpsl push push push jns rcr je addr16 mov inc nop pushf adc mov push sbb cmp (bad) (bad) push mov mov jmp cmp aam jnp call gs and dec std and imul sti ret icebp cltd push cltd lret pop adc iret cwtl push adc popf or cmp xlat dec push rolb movsb imul dec push cmpsb xor ds jnp lea sbb adc rol and data16 xor jp jb inc outsl sub int sbb (bad) mov push scas xchg adc jnp push (bad) popl jno pop data16 cmp cwtl xor ror or loop mov inc push out mov jo sub test mov mov sbb cmp jecxz loopne cmp xchg mov enter movsb outsb cmpsl cmp cli add and sub inc pop or push inc lcall cmp add adc repnz sbb dec push inc add and aam in push push sub xchg jnp (bad) scas sub mov aam xor loope sub sub in or aas mov push lahf and xor push dec mov push cmp lods sub adc pop xchg not (bad) (bad) notb sbb jmp push loopne mov aam lret sub daa add insb fidivl pop push nop cmp pop sub dec xor sub cmp jmp mov pushf jge jnp jp loop push (bad) sbb cli fnstenv mov rorb jg cs (bad) mov sub sub shrb adc inc push mov inc mov sbb xor push les jbe xor adc dec int dec mov xchg inc xor xor scas cmpsl adc insb mov lods xchg push push out popf cmp and dec jb mov call scas popf decb dec fwait xchg mov rorl out sub loop jmp dec imul data16 rol icebp pop jg ds adc inc inc dec loopne adc push dec lret shrb in les cs stos add dec fucomi cmpsb sbb fidivrl push dec sub in mov pop bnd fisubrl and daa cwtl (bad) (bad) ds jmp xor out mov pop jb cmp and test les mov cld push daa xchg jmp mov mov adc jp cmp daa addr16 iret sub icebp pop fwait lret pushf daa js rolb lret loopne and xchg clc imul jo loope push pop data16 pop xor mov push inc or (bad) std mov cs repnz ljmp xchg jb inc test dec scas lcall sub aaa or pop and insb jns cmpsb data16 jp sbb fdivrp iret aam cs jno jmp enter or rclb xchg jl xor sub rcrl dec leave sub sbb hlt pop and xchg iret pop sub xchg test ja aad xor orl insl mov outsl rcll js sub call mov xlat aam xor and pop movl inc movsb cmp repnz mov fnstenv stos lahf fbld outsl xor sbb sahf mov pop subl inc lea push sub mov or jb push ljmp out (bad) jae push js mov push jp sub jne sbb sbb xor dec sub popa ret pop xor sbb sbb or cmp sub scas jnp mov test ficom fs push and out pop jno sbb call mov scas sub sub (bad) test cmp push (bad) and ss adc and popa mov out idiv sbb cld sub pop insb loope xor iret fisttp mov aaa in xor decl bound xchg into inc mov (bad) pop in xchg popf (bad) adc xchg and cmp lods pushf sub push je,pn adc fsubr pop in dec xorl push mov jo mov inc inc push xchg and insl ss les mov daa es test add ds (bad) nop mov sub and sbb xchg daa fwait mov xor xchg xor insl adc xchg sbb int3 rorl cmp cmp or sub test push movb sub lahf (bad) idiv mov mov dec repz dec mov cmp jne movsl add sub xlat jae,pn outsl into nop sbb sahf ret cs jecxz rcr fbstp mov shrl push push pop pop lock mov push leave inc into addr16 cmpsb inc outsb pusha mov fstpt (bad) (bad) or cs cltd lcall and shrb movsl (bad) movsb sub pop ret add inc jno movsb sub inc int3 add mov cmpsl mov ret cmpl xchg popa cmpsb aad enter (bad) in push (bad) jecxz or pop jp in iret (bad) sub xchg dec test jg daa xchg cmpsl (bad) mov jecxz fs sub mov ja fsubrl xchg pusha jno movsb jnp cmp int rolb test push leave lret mov dec mov (bad) cmpsb adc mov sub int fldt sub lods test leave dec lods fadd xchg fcmovb daa cmp sti dec lds lods daa sbb jbe insl push sbb dec cmpsl and xchg les test push and fildll push jno inc pop sar mov cmpsl push (bad) data16 cmpsl push enter jle push xor push loope shrb xor addr16 (bad) (bad) pop dec shll sbb sub imul out pop add lcall cmp cmpsb adc daa push (bad) or fwait cmpsb mov xchg xor (bad) jne mov ss dec cmp jmp jae jbe clc inc add (bad) pop cltd ret push dec xchg mov roll mov (bad) sbb or sub sub sub jns (bad) sub jo cmp pushf scas insb dec sub mov push ja enter xor mov push pop insl mov aas and test inc sub ret (bad) fldenv xor icebp sti cld fsubr daa test cmp enter jne mov pop mov in jle ret ja pushl add cwtl ss cmp in ficomp (bad) pop scas pop bound mov adc mov ljmp fst cmp sbb movl div add arpl mov stos xchg or fldt idivl jno dec shrb aas mov (bad) (bad) xor test sbb jge xor xchg aaa test cmp pop jnp mov sbb xchg test push jbe lds jae dec cli ret out pushf pop ljmp into daa test cmp xchg cmp nop mov mov fisubr test insb mov push push cmp sub mov daa push jle push in pop or psrad and and addl push jp lds aam int3 sti rcll adc xor leave xor lods clc stos sub roll push mov mov mov sub pop insb outsb and push int push and nop fcmovb sub jl xchg arpl inc dec leave loop push leave xor xchg pop fs cmpsl cmp xor ja pop jae cmpl nop in rcrl movl pushf cmp mov or pop popa jbe dec mul icebp jno and int pop clc cwtl pop push mov (bad) cs mov pusha pop lods mov shlb dec push fcomps pop inc xchg sbb inc xchg dec decl xchg inc repnz jle scas int3 in mov dec mov xchg stc fbstp call leave aaa sbb (bad) inc or push xchg jle popf shrl sti mov pop sub xor lock adc lahf sub xor inc sub or test pushf addr16 fwait hlt int3 sub aas xor push inc push cmp jp push inc (bad) aaa dec hlt imul sub sub rclb into lods pop scas mov mov popa add xchg dec push sbb jp inc jnp pop test dec jmp out lea dec dec or ret jmp mov loope dec divb xchg sub jp loope push or sub das or sub cltd add sub repz inc call xor aad inc cmp std iret sub sub out ret dec jg mov mov sbb mov and ds add aad mov xor xchg mov mov jl aad xor stos pop test mov enter sub inc pushf pusha inc cltd jae pop ja cmp sbb movsl mov stos cmpsb and sub fnstsw or movsl les (bad) clc mov psubsb mov fcos (bad) sub pop out stos mov pop ret cld inc test shll push jcxz ss xor cmp xchg dec sub push pop mov or outsb sti pop icebp (bad) stos test xchg fldcw fisubrl adc popa lods xor push mov test arpl fsubrs not sub int3 rcr stc sub mov push sahf lahf movsl test xchg pop das mov loop jl jnp std dec aaa rcll xor pop jb mov mov pop pop lahf sarb mov fnstcw test mov cwtl cs (bad) cmc pop leave dec xchg jae adc add jns push cmp xchg jecxz mov xchg inc cld addr16 mov (bad) pusha push (bad) das leave fisubrl jns pop std push xchg fnstsw push outsb (bad) sub subl and pop and jo in imul xor jb shrb cmp adc push popa movsb aaa jmp arpl sub jecxz es mov test out mov push xor movsl mov xchg xchg (bad) xchg jbe add loope pop ljmp or or xlat aad jb sbb pop xor (bad) hlt inc xchg jnp xchg xchg cli test pop push aaa and mov mov xor (bad) push lahf lds sbb sub mov cmp adc mov inc mov mov pop and pop cltd mov icebp push into xor pushf cmp xor scas imul cld cmpsl jg data16 ret test push cwtl and loope cli jp frstor dec incb push aaa inc dec subl mov or mov dec xor arpl mov pop and mov cmp dec mov xchg mov mov cmc cmp aam test orl mov stos mul fwait (bad) (bad) mov pushf mov inc jns jmp push sub in lret (bad) fmuls mov push dec or movb and jle stos pop popf daa insb push sub dec int sub pushf mov and push jmp and daa jo pop jae (bad) fs mov ds sbb pushf mov (bad) int3 (bad) sti lock push mov pop out loop outsl iret adc and aaa push ds fnstsw dec leave into das out xchg add data16 xchg mov dec sarl add lret dec sbb sti cmpsb in in fsubr mov cmpb in mov int pusha pop push push (bad) cs aam xor sbb leave sub mov les sbb sub mov test data16 xor jp jle push pusha leave jb repnz hlt adc (bad) and push lods and insl (bad) inc jns cmpsb movsl gs adc mov iret or lods (bad) test sub lock sub sub xlat dec notb mov sub sub and jle dec sbb bound cli sub mov sub and sbb fnstsw loop xchg pop lds xor fcompp cmc ss fcom lods pop and and mov repz cmp mov dec outsl sub sub insb xor pop sbb (bad) sbb decb sub xchg out mov adc fsubrs sbb ss outsl push sbb mov mov fdivrs sub mov adc xor cld mov xor mov mov and loope xor leave dec (bad) mov jmp out and mov sub test sub xchg or shll jne xchg xor ds mov push push jp sub fwait sub ss in arpl sti bound (bad) stos daa mov ret jns sub xor jle ss loope pop enter mov sub fpatan clc sub xchg pusha out adc sub mov jbe loopne adc popf notb sub ljmp das imul arpl pop inc inc cmp sub sbb insb xchg adc mov insl cmpsl and (bad) jb xor add cs outsl ret jmp mov leave jg cmp daa movsb imul in aad sub jbe lods mov jo,pt cmp (bad) test rcrb out jge push sub xorl push (bad) enter jecxz mov (bad) cmpsl (bad) rol ud1 shll test std dec mov out das and sub cwtl push dec lret push push inc test addr16 fisubl xchg sti push ud2 sub sub (bad) iret shrl test mov (bad) in in push loop sub sub push push popa inc cwtl and into cld cmpsb and pop mov adc push js outsb pop popf push (bad) mov into test stos sub xor scas push leave and mov daa daa and shrb mov jnp ja sub loope sub sbb clc sbb push mov mov es add or mov xor pusha push inc (bad) cld mov xchg aad in jno sub jl int3 xorb xor xlat sbb sahf sub ret fnsave cmp inc pop imulb adc sub mov xor outsb mov outsb sub (bad) hlt insb pop imul or fmul std mov sub jbe sub stos sbb add rcll push jp sbb fxch xchg mov mov ret or fwait sub loope pop pop outsb push popa inc sub mov lahf movsb sub xor call stos mov mov mov dec inc hlt xor or cmp inc test fucom jl mov or xor push xor aaa ja sbb jae mov aas mov jns cmp hlt cltd in cwtl inc add sub inc or sbb sti out mov mov push out inc insb and (bad) xor stc and and loopne push add sub sbb je and shrb jmp mov inc cli js das inc mov jns in mov cmc sub lcall test jne xchg pop dec pop inc call cmp or fcmovu jmp leave mov push or mov addr16 jmp or push inc lea sub (bad) into and add pop or lds dec dec aad leave jbe and sub push push cmc xchg and mov dec scas aas sub movsl in ljmp subb mov sub cmp mov dec sub push mov cltd mov sti fsubs in lcall lods mov cs and ss fnop adc out (bad) movsl sub xchg jmp sub cltd (bad) imul mov repz in (bad) cmp outsb or add loopne shrl dec out fcom mov test (bad) ret test mov flds into push bound add inc mov sub mov test mov sub shll or je mov jmp call or arpl nopl sub pop pop and test imull arpl arpl pop xchg outsb pop arpl sbb ficoml xor test sub arpl jp cmp xchg outsl bound push dec ss in inc in je push xor (bad) sub cltd pop jl mov sub cs push xchg repnz out mov loopne cmp pushf mov xor inc out or es pushf adc jmp and cmpsb gs ss inc or movsl lahf xchg mov sub and push mov pop sub mov clc cmp pushf sub xchg sub out pop cmpsl les push fisubr sub dec fisubrl out cmp rcrl inc xchg ss cmp push (bad) loope scas ret cmp dec rcl scas sbb ja mov out sbb jnp jns push xchg dec adc mov leave xorl loopne insb pop mov xor jle mov jge or mov (bad) adc imul pop loopne cwtl cld jb std add mov shr cmp push jmp pop daa and ds adc cmp push sub sbb sbb mov aaa pop fwait jo inc sub (bad) jns aam push and push mov in (bad) jnp xor lods dec popf imul adc or outsb fcomps or mov push xchg psadbw stc (bad) mov xchg out jbe icebp in or dec lahf lret xor push sbb dec cmp aaa std dec loopne cmp leave and push lea pusha xor movsb stc mov js mov cmpsb loopne mov jbe scas sbb inc dec sub cmp mov test popa xor lea icebp pop xchg mov adc movsb daa fwait mov cli dec jg dec and mov sbb pop (bad) aam xor int push sbb sub inc jmp ret (bad) add add push mov add imul add pop pop test lret es cmp mov mov add (bad) icebp xor sub fs push jo daa insb pop (bad) mov ja cmpsl pop adc outsb fldenv mov cltd call pop mov mov lock scas and sub jge jl or pop cs imul jge insl movsl icebp aad imul leave loop inc fcoml aad sub and mov ja ret test cmp test sub jns rolb push dec loope mov outsb adc jbe inc push cmp xchg or dec push sub test pop xchg cmp xor mov adc pop xchg js ds sbb inc jns mov loop stos (bad) push xchg shl notl mov leave mov mov ss xor pop push jno mov inc fnsave jp xchg mov into xchg imul outsl xor pop dec incl das and popf jge aam mov cmp jl jmp (bad) ds test sub rolb pushf xor loope mov sub imul in sub push jbe (bad) xchg cmp insb mov js enter xlat arpl popf fisubrl fdiv aam jo lds xchg shrb jecxz jmp mov (bad) cs orl repz inc jl and push sbb cmpsb shll cmc sub mov lahf fwait cmpsl sbb mov fcoml xor dec out mov pop scas mov pop arpl fsubl dec andl xchg ja fwait adc fdivrs movsb leave xchg adc xchg and icebp jg popa mov sbb cwtl mov xchg xor and in lea push or and out adc jb imul sahf push dec sti stos lds popf lahf ds add xchg cmp mov lret stos sahf mov lods inc in push xor lods pop daa scas fwait inc les pusha jns stos in out mov inc lret jge xor cmpl xchg loopne and mov add add bound mov js aam xor ss pop ret test pop subl or sub aas jp xchg sbb pop sub cmpsb jae pop and je mov cmpsb xchg adc mov jne dec pop sub arpl sti add dec data16 loope subb shlb jo (bad) sub scas sub jle,pt jb cmpsl out push inc cmp je sub and (bad) ja inc nop shr dec int sbb sub pushf ss mov (bad) fimull push in imul jl lret scas add or sub hlt ja repnz mov sub sti jbe pop bound js fneni(8087 cmpsb jno sub imul ss lret add sub popa and int cmp sub mov sub cmp inc inc sub cli popa sub xchg add mov cwtl inc mov loopne out cmpsl sahf xor dec jne push jb shr sbb cmp inc inc sbb push loope or push mov cwtl inc xlat cmp scas push adc lahf arpl movsl sub push insl adc test mov cmpsl and ljmp jp cwtl add push or rolb dec push xlat push push icebp mull ss dec loopne mov mov jmp int mov addr16 iret leave cli sbb andl movsl (bad) mov xor lods push and in mov and pop leave test sbb je clc movsb sarb je in xchg (bad) std popl es and pop jg jl rorb (bad) xor (bad) cmc cs imul ret test fwait sbb lock mov iret xchg int and addl es sbb pusha jno mov lret jo pop mov jg sub sarl mov les or xor cmp inc mov push stc pop mov cmp dec jp cmp cmp (bad) pop and pop movsb (bad) mov push aaa xchg jo pop inc inc imul cmpsb mov inc daa cmpsl mov stc or cmpsb stc int add pushf (bad) mov (bad) andl mov mov (bad) ss jo push fwait hlt cmp incb xchg pop dec out std icebp mov adc or lods xchg mov push test and (bad) mov push mov fistpll (bad) mov cmp push aas cmp (bad) push std test dec or mov iret adc ljmp ret pop push pop and js mov icebp jb lods fsubrl sbb mov (bad) iret scas data16 stc xchg aas and jae popf cmpsb rol sub out ror fbld loopne into jb xlat lahf int3 aam lahf xor xchg xor jno fist xchg xor pop ret sti das mov xchg leave push out pop out mov inc (bad) ljmp mov pop test push dec xchg xorl lret gs jg push (bad) jae and nop cltd push adc push and sub outsb mov push int push push cli mov int3 jp fmuls inc ljmp adc jb add jmp test lds imul jns or jnp pop movsb dec (bad) push cld jae ret incb xor outsb mov push xchg (bad) mov push repnz dec (bad) mulb xchg jmp addr16 gs pushf cmp xor push lahf sarl loopne pavgw sub (bad) mov mov aas pushf cwtl into cmp cwtl adc out pop jne cs add scas int xor add shrb leave pop cmp test aam dec int xchg movsl aad push mov mov jnp lods mov sbb aam cli mov ja,pt inc push push pop adc pushf dec adcl add test and sbb xor aad mov das lret sub stc fnsave std int lods add clc ret outsb cmp add pop cmp or mov and fdivrl das ss sub call insb rcl and sub hlt outsl mov cmp lock jno dec cmc push push clc add shl or js cmp sbb xlat sub hlt push dec add jecxz data16 xor pop lock push nop push js fisubr clc push push mov sub mov xchg dec or out cmpsl repz sub push cltd sub inc sbb jl push jg dec leave sub cmp arpl jecxz sbb (bad) icebp sahf and insb ret mov test sub or iret pop jo lret or les lahf jb addb sub mov (bad) sub daa or aam mov mov imul sbb sub aas push dec cmp aam adc adc add xor sub dec dec popa push clc push std or sub loopne sub pop pop dec inc dec jno inc and out bound lds fs inc test leave ret inc xchg mov cmp movsl inc jle cmp push imul jl adc jge add bound pop stc imul les jnp (bad) (bad) dec bsf cld int3 sub pop lds add test addr16 jno js test sbb xor sub andl xorl clc aad cmc xchg daa jle xlat xchg inc mov dec aam stc xor sarl cmp mov sbb push (bad) rcrb scas cwtl sub pop call call insl dec cs jbe sbb push leave add mov ljmp mov movsl mov inc cs jle inc leave test loope in (bad) mov adc test lods xor and inc ss pop dec mov sub popa dec xchg movsl sub adc clc mov sbb addr16 in pushf xchg stos in sarl (bad) mov cmp adc mov sbb push sub mov (bad) jo sarb pop jmp jle stc into (bad) mov jnp mov stos loope dec cli cmc or sub cli add sub dec push cmp lds sbb xor shrl lcall xor or sbb sub sub xlat arpl (bad) mov shl sub add test mov addr16 mov shlw push xchg sub sub xor pusha sub xchg cmp stos lcall add xchg (bad) fbstp jo jno and pop and sti push sub subl sub fcompl dec sti lahf dec ds xchg pop jno mov fnstenv adc cwtl mov cmpsl out imull rcl adc sub hlt pop ss xor jnp imul ret inc jo xchg inc mov sub inc fnstenv mov in jge pop sub ss push je (bad) fucomip fildl add cmpsl and jae movsb (bad) dec xor adc call or ret bound inc sbb sub inc pop mov and sub fldt sub (bad) mov xchg xchg mov mov pop sbb push stc arpl (bad) sbb in dec mov outsl sub cmp roll lods mov (bad) dec pop mov sub fnop cmp sti cmp outsl and (bad) out adc fisubr mov lahf cli cmpl jo sub insb imul lret sbb stos ret sbb mov sub arpl sbb add and sub mov mov push shll xor add lret cld cmp cmpsb in mov out jnp scas dec xor insb mov or and leave sbb movsl cmpsb sub jne mov ffreep cmp aad scas sub xor cmp push dec decb or into sti add test pop imul sub popa mov sahf dec cld and arpl xchg lret leave pop sub cmp sub clc push (bad) sbb movsb ja shrb das outsb mov xchg jmp mov fdivrp dec mov xchg jmp mov maxps pop sbb sub addr16 stos sbb xor xor clc xchg stos (bad) cmpsb adc ds push rorb test lcall cltd jne inc sahf cs cli dec lods push push outsb fsubrs mov repz loopne movsb xor fistpll rcl das stc pop fcoml push push stc dec cwtl xchg aad push adc jmp xor mov loope inc sahf push pop fmull int (bad) shll int jp xor dec int3 or cmp xor pop and jnp sub popa sub cmpsb push mov sar (bad) jae dec daa pushf ret xorl decb (bad) sub movsb mov fimul bound mov int inc pop mov jp push xor mov and stos lret iret mov es sahf mov cmc or pop push cwtl insl addb js fimull icebp sub xchg fmull sbb cmpsl pop addr16 dec xor inc adc pop push (bad) xor (bad) jne sub lods inc sbb mov inc mov mov fimull sbb fsubrs ljmp push fisub or sub aad mov cmc aam mov out xor xor jl inc adc in sub xor loop insl rolb cmp lds call and mov mov pop aam nop divb adc xchg sub xor xor movsl lods aam iret jp cmc sub shl sub cs xchg pop (bad) (bad) dec cmp pop add int pop xchg mov (bad) push pop jae sbbl jae jp adc jecxz cmpsb (bad) into mov fimull mov je push adc and pop into and imul push lret repnz mov scas xchg mov addb and or dec sub mov shr cli int cmpsb pusha mov pop scas sbb scas sub popa mov test sub push cmp or fcomps sub or cmc push mov (bad) inc add es insb out lahf fstpl jne mov mov sub xchg out add sahf jbe adcl mov dec push imul divb (bad) push sub insb (bad) xchg lret push inc sub repnz pop sub (bad) mov sub insb jno in stos rorl daa movsl in loop xchg stc dec sub cmpsl ljmp mov sub gs ss int3 sub inc and sub int je push mov jmp dec inc mov and cmp (bad) push mov fwait push and lds dec repz xchg mov sub jecxz test leave lahf inc leave cwtl mov dec popf sub (bad) loop sub les hlt xlat fcmovu sub mov dec push mov cmp push xchg sbb push mov into enter sti andl ret (bad) je mov into (bad) std call clc cmpsl push sub mov cmpsl in lret rolb lcall test loop dec xor add ss jp mov sub adc xor sbb dec xchg mov jp call into jp out out shrl dec loope mov or inc xchg sub and lahf cmpsl leave or and fwait xchg lret cmp cmpsl lods test inc push dec jnp sub add or jne push imul sbb dec mov and cwtl add sbb enter (bad) je lock cmp pop xchg icebp cwtl loopne addr16 inc dec fimul sbb lret jo int ja,pn mov cmp leave inc outsb sbb enter pop jg popa ja mov inc inc add dec xor call dec sti (bad) bound adc xor mov push inc mull pop xor inc mov clc xchg mov leave arpl daa pop lock sub popa and leave adc add xlat cld fmulp data16 jl mov mov sti ret imul aas push scas in dec dec mov pop jp das inc pop push sbb jbe sahf push sub lods imul cmc (bad) mov dec push add fwait subl leave pop mov and xor int pop xor xchg leave sti test dec cmc push (bad) xor outsb jl das addr16 fwait in mov lds or xchg sub mov loopne jle stos xchg cwtl idivl pop jne dec ja shlb sub cmp cmpsl mov popa cmp dec cmpsb leave (bad) pushf cld sbb outsl and imul jecxz mov roll enter negb nop pop mov scas add mov mov mov add lea out (bad) push and xchg hlt add push xor adc dec and mov sub imul outsl push mov xchg adc test pop mov gs or cwtl inc fmull leave sub out enter pop sub leave lcall mov cmp cmp add jbe out jns push dec pop inc mov mov dec loope mov and or int movsb in and rorb push sub aaa nop (bad) divb mov fmul imul dec inc xchg test mov pushf xor sub or mov cmp jmp test sub mov or inc sub gs fsubr out lods jne test xchg sub hlt inc out push inc sti dec mov mov lcall pop into pop loopne ds stos sbb sub (bad) int adc sub inc or cmpsl mov (bad) fmuls pop xchg (bad) es sub push adc push addr16 or fistl sub mov lock dec (bad) jo jl sub outsb (bad) std pop and jmp out daa inc adc fucomip out fs hlt daa inc push ljmp mov xchg bound jae scas lods xlat nop cmp clc pop xchg outsl scas fbld mov sub push add and dec lods call mov jmp aas mov pop mov dec mov cmpsl mov adc pop cwtl insl bound daa (bad) mov adc sbb add pop rol das fstpl (bad) mov sbb jmp sbb jecxz cmp push adc xlat loope unpckhps xor (bad) or mov sub mov (bad) sub xlat aad dec mov sti cmp xor jb mov jnp iret cs sub mulb inc mov ffreep (bad) ds mov cmc aam sub call subl adc xchg jg cltd add mov aas lret icebp fsubp jmp (bad) fist sub daa sahf pop scas fnstenv mov adc hlt mov out (bad) ja outsb push xchg xor daa cmpsb sub das jmp (bad) fwait lahf repz push aam push mov cmp add cmpl leave inc mov cs call in adc out decl jge imul push sub mov inc dec add mov xor (bad) std sub dec add sub std sub jle sahf lods in adc inc idivl mov movsl in or mov jns loop jmp imul xchg lock movsb addr16 fisttpll lahf cmpsl aam divb outsl pop sub mov dec sub adc shrl fiadd cmpsl repz adc incb das mov sub jns mov les jmp aam xchg push ss loop sub in push mov sub lret add sub adc (bad) pop fcmovnu enter (bad) jg int3 mov std add xchg ds (bad) int3 xor sub stos and push jecxz sub push xchg (bad) xor sub sub mov cmp (bad) fwait jb loop and into mov xor cmpsl out jecxz ds jg stos or mov das adc (bad) stos and cli push push sub fildll je mov sub adc gs or rorb das in daa icebp lret dec inc lahf sub cli jle movsl and clc sub popf xor jp inc jae mov stc xor iret xchg daa dec sbb ja,pn jmp js mov clc xor sub mov dec ljmp mov enter lahf aas scas sbb xlat inc adc mov (bad) jp mov (bad) cmp mov inc sub lods xchg mov mov (bad) mul loopne cmpsl jge aaa scas (bad) cmp iret aad mov cwtl lock fisubrl dec and addb inc insl cmp xchg and cmc fdivs mov sbb jnp xorl aad xchg pop aas in out insb sub das rcl cwtl iret stc sub stos cmp mov pop push or cmpsb and push sub xchg mov jns (bad) cs mov cmp sbb (bad) aas into sbb test or mov xor or cmp test cs or and mov jb dec push leave loope sbb movsb (bad) sub xor dec movsb imul pop test outsl in lcall addb shrb dec or mov mov arpl adc loope pop sub mov push cs cs lock pop jne fistp mov cmp sbb notb ficom sub sbb fisubr pop xor sbb cmp mov lcall movsb fldenv test pop (bad) leave sbb aad sbb dec push lods dec jmp icebp es int3 fprem xchg addr16 sbb das cltd or scas adc jb dec sbb ret sub push jae into je pop sub aad roll add and loope and push sub lods jne fmull xchg sub pusha imulb push and dec dec cmpsl and (bad) fsubrs daa movsl jbe inc aad pop add nop jp sub and cmp inc daa leave sbb push add in push lock inc (bad) insb cmp stc mov jbe in int3 cli insl sub out push int dec lea fwait dec jecxz (bad) mov mov sub dec mov cmp xchg leave out int (bad) mov inc and subb push dec mov fldl (bad) jmp xchg cmc dec xchg or sub jo and cli mov sti add cli outsl dec dec cmpsb dec mov pushf insb mov xchg movsb jb xchg xchg jns mov adc mov push enter mov in xchg inc jnp ss xlat jae out shrl repz push xor data16 lods ret jl rcrb mov jp in loope jbe xor sahf sbb add jo movzwl jns push cmp in jle pop test sub (bad) adc mov aam outsb sub lods mov xchg cmp pusha outsb pop dec sub add sub jns cmc aad addl and pop push jnp (bad) sarl sub push imul loopne lods inc (bad) xchg arpl xchg cld adcl outsl repz dec jecxz pop push sub aaa mov (bad) dec (bad) sti test inc cmp mov jae test aam shl jl xor mov mov movsl pusha cmpsb cmp or jo push lods xchg test (bad) mov nop jb cmp jmp xchg sub insl dec mov scas sub add sub jl xchg dec cmpsl nop or loop mov cmp imul adc sub sub fsubrs pusha add cmpsb mov sub stos push outsl sbb mov imul xchg mov rorl sahf cs mov sub xlat lock lods pushf iret sub loop sbb dec sbbl mov jecxz es or push out sbb outsl out cwtl sub ret and dec fisubrl sub mov clc fidivl fwait sub insb icebp out mov subb mov and jp or cld into daa xchg add sub bnd sarl adc in and pop mov dec test push jge loope cmpsb mov push daa pushf fnop jl sti ds jnp xchg sub mov sbb pop xor inc sahf xchg dec test popf sub outsb loopne xchg push add sub mov ficomp sahf inc out sub daa sbb lcall inc lods leave sahf stos daa add adc out fstp or arpl in xchg mov ljmp cltd xor xchg int std loop daa (bad) out imul lea adc mov cld out imul ficomp cltd sub bound bt mov pop cmpsb mov loope popf sub push out scas jmp sub add pop lods push and xchg jno or sub shll popf xor andl test inc add or ss sub lahf xchg xchg xchg mov in mov addr16 pop mov jo jg cmp stos xor std dec or mov fwait test pop xchg pop inc mov mov xor repz sbb lods fsub mov sub jne insb jecxz jmp incl call (bad) or pop and hlt fmuls mov xor push adc (bad) push mov rol jge bswap sub inc add jl sub clc std mov cs push fildll xchg add imul cmp ret ss xor test clc pushl cli loope sub dec sbb les pop iret xchg mov sub pop in fsubrs aas test jno (bad) test push jae jb add int3 cmpsb and mov jge dec xchg roll sub or (bad) jecxz jne ss xor in (bad) lock pop daa xor call mov and dec lods or push cmp pop lcall (bad) pop fisttpll mov add jl clc cmp adc call jle icebp sbb dec out arpl ret push mov fnop inc enter push add (bad) clc in sbb mov adc scas (bad) fyl2xp1 inc xor int jge mov push sbb icebp pop sti push fnstenv pop jle scas mov ja dec or cs push sub cmpsl aad fmul add mov push shlb out lret aam sub sbb inc int pop and leave aas cmp lcall test push sbb jb ficompl in xchg inc adc cmpsl aam lcall cmp sub inc or dec sti je (bad) jbe add push inc test fs sub fwait jge sbb mov addb push das in pop mov jo jnp xor sub faddl inc loop imul cmpb arpl mov pop das pop sbb sub bndstx cmp dec mov aam data16 mov addb dec xchg fwait sub sbb lret sub std popa jmp or inc push sub adc mov repnz cvtps2pd loopne ret sub sub and inc icebp mov idivb lcall sbb push cld outsb popa dec mov ficoml std lcall lahf test jb sub and sbb movsb sub inc jg les cs jecxz inc int rorl xchg xor or int pop cmp test xchg out xchg jb cli in mov fdiv arpl cmp pushw iret push sub (bad) mov adc popl xorl mov cltd sub ljmp mov add fsubrl daa mov adc pop test push jns mov (bad) imulb pop cwtl xor out xor jns or cmpsl lods sub (bad) ds sub mov (bad) mov inc or dec imul into cld add stos fisttpl mov fnsave add pop mov (bad) rorl sub ds mov adc or mov rcll data16 sub in loope mov pop sub xor fs jno cmp mov or xchg out lock sti mov les (bad) sub push lret cmp out mov loopne ret add cmpsl sub dec xchg xchg push xchg pushf sub ja inc xchg jb mov out sub cmpsb fs dec in or enter and cld push inc xchg cmpsl fwait inc pop in fistl and inc ds das outsl sub and fsubr lret shrb push sub pop cmp inc dec inc push inc jbe sub rorb fsubrl xlat dec fistpl sub test xor xor dec lcall sub hlt xor loope sbb inc movsl mov push sub test aas mov (bad) xor out scas sbb es push sbb scas mov adc rcll xchg inc pop lcall xchg outsl dec sub jmp sub pop jp adc and push sub popf (bad) mov dec xchg push arpl loopne sub inc mov push addr16 push (bad) and inc stos shrb sbb enter adc inc or adc push xchg in sub inc jns in repnz jmp jae sub je jg fistl add and sbb sbb mov pop sub jge xchg cwtl pushf lock test daa pop xor pop fwait das cmc scas add push lods sub dec idivb sub dec rol orl sub mov xor data16 outsl pop movsl push cli and inc push and jle jne fsubr sub cmp (bad) jg and ss (bad) (bad) sub das sbb imul sub cmp jbe push xor pop inc xchg xchg jb scas mov push lea jge inc or ss mov sub insb sub push pop cmp jbe dec (bad) aad xchg and or fs dec ljmp inc or outsb fildll in movsl mov mov (bad) sbb dec out xor dec jg jecxz das mov test inc lds xchg pop imul inc iret add sub sub adc (bad) xor add addl test (bad) ret movsb out cmp lret adc in mov test pop out ss jmp cmp fs dec mov fs repz stos lcall inc cmp sub (bad) jbe push pop jb movsb (bad) xchg mov and xor aad cmp sub add out push loope daa sub mov xchg pop pushf addr16 push scas add jmp mov inc xchg xor sub xor fsubrp push or dec adc mov adc bound jo xchg mov cs xor inc pop add addr16 and (bad) jg movzwl mov shrb push jne mov addl out sub jmp pop pop mov popf sub dec lcall pop movsl je aaa adc jo mov jmp mov ret (bad) adc movsb arpl adc xchg xchg jle sub lahf sub mov mov xor sub xchg mov sub mov cmc adc cmp inc iret sub xchg int or sar dec sbb mov xchg mov jmp push sub fstps sub js xchg repz inc push mov sub push xor cwtl fnsetpm(287 aaa cmp mov lahf pop inc daa stc or lds sub xor or mov push xor repnz adc pop (bad) jbe ficoml jmp (bad) (bad) mov xchg pop pop decl jle arpl test cltd sbb popa data16 sub xchg mov (bad) jno stos add mov scas insl pusha mov ja push ss sbb fldl sub mov call sub xor sub je xor jle sbb aad data16 ss outsl (bad) mov (bad) fwait mov cmp gs aaa cmp cmp dec cmc jle sub dec (bad) dec sbb cmc sub push mov xor rorb jns inc leave dec sub push inc mov popa mov test adc int3 or test or std sub fild and xchg cmp inc inc and cmpsl cmc fdecstp push sub add push and pop pop mov sub das xchg xlat mov sub idivb stc iret cmp cmp fild push repz mov leave out mov sti cmp leave daa sub les sbb sub or mov ds push pop lods aad mov mov stos push int3 sbb cld sub jecxz sbb or sub xor jb ds cmp movsl jb pushl inc adc int imul pop fwait testl test xchg jbe pop xchg movsb das mov pusha add dec subb cmc or sub stos cmp inc cwtl je dec add cmpsl or push cmp lret push idivl mov xor inc sbb mov add sub dec adc movl sub mov or inc xchg xor dec mov (bad) repz sub sti orb ss xchg loopne ja inc pop xor stos test and fbld jns lods xor imul or jg gs xchg movsb and pop leave inc sub test sub cmpsl bound or or push mul inc dec sub jl (bad) and jg or cmp sub sub (bad) aaa mov jmp sub in dec cmp pop sub imul sub call and sub fucomp xor or inc mov cmp pop add imul jp cs cwtl jp int insl xor (bad) cmp inc jb cmpsl mov inc cmp mov faddl pop push and jno call pop popa leave lods and cld mov les mov test add and cwtl sub mov popf enter popa push sbbl test pop push ficom push es push test add adc push test je es sbb sbb sub inc sub mov out push aaa nop push mov addr16 sub stos xchg push loop mov cmp inc pushf jmp mov into sub lds jb add jbe adc sub add (bad) lret and adc mov push (bad) ljmp ret mov addb cs mov push sub sub xchg fcomp (bad) mov sub shr test xchg adc jl xchg cmp cli pusha imul rcll add sub mov sub cmp cltd push cmpsb stos mov xor insb (bad) xor rolb pop inc mov xchg lret sbb sub inc push lods inc cwtl mov movsl adc sub (bad) xchg ret shrl jmp in arpl sub pop push (bad) cmp int3 iret loop dec add jae mov mov sub out (bad) call jb pop pusha cmp mov loopne push jnp ret (bad) gs test lea loopne dec out hlt (bad) inc sbb gs (bad) aas cmpsb mov shrb mov cwtl sarl addl dec xorb insl outsl (bad) or lea ss sub inc pop mov in in push jl inc (bad) xchg xchg cld add sbb insb jae xor mov into xor pop movsl pushw cmpsl leave test ja xchg jne or jg mov xor mov into push sub nop je cmp mov pushw sub cmp call ss mov xchg sub mov lods xor push mov movsl dec (bad) out scas xor xor dec mov dec push pop ret andl sub push leave push test lods jb sbb in ja add and xor adc xor dec push mov lock cltd daa sub adc inc divb xor pushf and sub jne das dec add xor push xor mov andb test sahf jg sub das fwait sbb or mov pop jae sub push outsb dec xor cmp shrb mov enter xor and ret cmc or xchg pop ljmp push inc and sbb fstl push cs push sub push dec out sub ret push enter or mov daa (bad) dec xor cmp sub add push movsb mov pop adc sub test fmuls inc cs cmpsl lock pop cs inc mov aam jge scas sub add and clc push repnz xor xchg (bad) mov je xchg ret mov jp sti sub test pop mov add or xchg cmp mov sbb test mov into mov enter sub fldenv push dec les mov stos (bad) loope jbe xlat ja lods ds test popa sbb mov jb lcall push cmp out mov (bad) out jp incb lods add add outsb jle mov lock dec daa mov jbe incb pop out mov dec in sbb fs cli imul mov xchg lea (bad) (bad) or inc stos sar cmp sub xchg clc cmpsb aad and popa in xchg outsl sub sub xlat in aas jb dec fisubr and lahf xchg shrl sub mov xchg test rorb sbb pop sub cltd jns inc lods loope mov sub (bad) cmpsl xchg add cmp lds xchg sub ja add shr loope ds jmp int3 jae lret (bad) insl xlat sub pop mov fisub subb sarb mov sub sub insb adc sbb inc push div inc sub insb sbb xchg and int3 adc add (bad) dec push cld sub cmpsb mov pop xchg mov cmp and cmpsb mov dec fidivrl lahf sub sub or fisub push ljmp sub xor das stc cli (bad) out aad push inc xor pop adc cltd rclb mov pop shlb lret xchg (bad) and push enter sbbb dec push insb cmp mov sub aas inc test fsubrp or pop mov jge cwtl movsl mov pop jno mov dec jg sub imul mov sub decb ret xchg fs lcall lret popa add xchg imul push dec js pop bound sub movsb mov gs sarl test xchg sub pusha or adc sub xor sbb pop insl stos data16 push push adc adc aaa xchg push mov mov arpl inc (bad) mov sub je xor leave pop sbb inc push out lahf dec aaa xchg fildll andb push mov movsl mov adc xor lea dec push push imul and stos push or int3 rol xchg data16 (bad) push cmpsb mov fisubl cmp xor cmpsl sub xchg bound sub sbb mov (bad) xchg cs xor lea out mov cmp push notb sarb pop push xchg add imul mov push push cmp adc fcomps rcll mov imul mov lods pop jp mov ljmp dec imul leave and add dec push iret loopne (bad) int push mov push xchg ucomiss cmp leave sahf dec gs mov add gs sub fsubl sbb sub add xor inc mov movsb sub push pop in loope sub pop out fwait sub mov mov aad mov call sub sub sbb push or sub sar and or ret dec sub cmp xchg rcl sub je mov sub lods popf (bad) leave sub mov hlt pop dec add xchg xor mov loope add in pop mov push sub stos sbb jno adc pop mov push add xor scas loopne jl andl sub cmc fucomi mov loopne jo jne jp decb jbe mov sub fldcw imul insl ja pop lret fstps daa in stc adc xor mov cs (bad) jne xor test enter lahf and and es insl jge cmc sub push daa mov mov sbb inc idivb (bad) jae inc push mov push mov sub inc pop xor jo sub sbb sub aad rorl out dec cltd scas insl pop lahf and add sub arpl mov icebp jbe sbb dec ret sub (bad) in movsl test sub out pop sub mov ret adc mov jns push leave xor sbb addr16 fucom cmpsl cmc aaa sub repnz pop dec mov fcompl or imul mov insb popa data16 int3 add sub mov push aas scas out push fnstcw push sbb fidivrl add fwait ss outsl int jbe pop loopne sub cmc (bad) sbb sbb or dec out push cwtl (bad) dec mov mov lahf xor pop jns addl pop xor bound cwtl es sarl push dec rcrb subl jno icebp jge sub std fistl cwtl loop jb mov push and leave mulb mov dec xchg mov mov pusha push push xor into inc std jmp cmp push es lret xchg xlat es sbb sbb stc add incl adc fs out aad int call xchg sub xchg lahf push sarb xor out sahf push mov ror aas sub push mov pop and xchg (bad) aaa pushf fwait out notb es fs es aam fist sbb mov push fimul xchg test addr16 jb cmp push dec sbb lahf je jmp dec xor shl leave leave mov mov or cmp cmp push lret and cmpsl pop mov (bad) mov ss inc out lahf out scas cltd jmp stos push mov addr16 mov inc or movsl loope sub call xchg inc xorl cltd xor sub jmp xchg lods mov fnstenv sub hlt iret in out cmpsl sub xchg push xor fsubr jo scas cmp cs xlat pop add sub arpl push jae ds sub pop mov notl (bad) mov cmp sub xchg rorb (bad) test test pop shrl movsb cmpsl mov xchg loopne sub ljmp mov add cmpsl inc mov sbb push out ljmp inc ret cs lock add les (bad) outsb adc mov fnstenv mov cmp (bad) cs je leave mov or dec outsb mov cwtl ds out sbb pop dec push out and xchg inc int push bound and pop adc push inc bound jmp aas push cmp jno (bad) divl pop les leave divb mov fdivrl pop scas push sub dec cld sub jge dec jo lods mov not dec and sbb call pop lods data16 cmp in pop sub push jmp addr16 jb loope mov sub push push lret cs mov in jno out icebp sub rorb xor fsubrl sbb cmpsb out jg in scas sbb jb (bad) bound test adc fcmove jecxz daa sub cmp jb dec data16 repz lods pop in sub push lods popf lcall sub inc subb loope mov aaa imul mov push add lret xchg cs aad inc inc (bad) repz sub enter xchg sub jns movsb jb,pt cmp into adc insb mov mov sbb (bad) jmp in lcall cmpsl test (bad) jne sub inc iret sbb fprem1 sub jb imul fwait mov or or sti loopne ss cmp dec (bad) fwait (bad) jnp push mov mov add cmp pop sub add lret mov push mov daa es jmp cmpsl out dec not fcoms jnp xchg pop ja sub and jbe sbb add adc popa cwtl lea push outsl or int xchg jl enter cs rcrb cmpsb xlat adc lret add pop insb sub xor jle cmp dec fiadd or xlat sub pop inc jae pop sub dec test adc and jo or ficoml inc jns sub sub loopne cli and call adc dec arpl pop push mov loop xchg dec sbb dec add inc mov mov sbb adc movl int addr16 in cmp xor mov inc xchg sub push es bound je cmp in sub add add pop or push loope,pn sarb pop test movl sbb pop test dec outsb xor jne rcrb mov inc std iret xor xor nop cmp gs mov pushf jbe push mov lods mov xor scas mov ljmp sub (bad) inc arpl cwtl sub and addr16 pop push sbb sbb sub add mov mov or mov cltd hlt adc into or add sarl mov imul push sub leave (bad) in or push or jg (bad) mov insb test push mov clc shll sub aad loopne cltd jl sbb cmp push xor sub test jl lods xor pop sbb lea mov or int loop push push mov leave push pop sub movsl aas pop jle push sbbl push stc cmpsb and fbstp (bad) mov (bad) ficomp push ret xor adc std push sub sahf movsl xchg pop sbb sbbl push xor sub gs push lcall int scas es dec cmp xor cmp les and adcb mov popf adc (bad) dec pop pop xor arpl and cmp nop lret test push pusha outsb and cmc jne pop jb push int cs (bad) or je jmp enter mov popf pop stos fmuls inc jne out and fs adc lock or adc cmpsl inc add inc cmc (bad) push mov outsb test cltd pop test mov push in push cmpsb stos ljmp dec in out loop movsb mov xchg push cltd and sub push jecxz mov sub loope outsb std lret and and adc lcall (bad) sahf push ret xchg add in movsb inc dec push sbb mov iret dec adc int3 xor cltd scas xor test sub enter dec jge les xlat jo out pop jle mov sbb lods jmp je lret jns imul test sti mov mov sub leave add out xor sbb out aaa in jge jmp jns push jge pop mov and mov pop cmp sub and push jmp mov xor aas jmp std into sub dec adc ja call push inc jae fdiv dec leave test movsl leave sub (bad) dec sub nopl adc xchg int xchg mov sub sub xchg cmpsl mov inc cwtl fwait sbb ds out pop mov test out xor fcompl inc gs faddl mov enter dec enter mov sub faddl int dec pop fs aad sti cmp inc cmp dec cltd jmp add jno (bad) dec lret mov adc adc mov cld pop repnz xor and or int xor xor cmp ljmp cmp in mov int (bad) sub scas dec push (bad) dec cmpsb dec pop cwtl (bad) int3 jp add stos loop es ds fs push inc aas or xchg leave cmpsl mov fcmove fbld add sbb inc cmp add add into into mov and push xchg jo dec push int pop mov mull ret inc push cwtl mov push lret xrelease out test or imul (bad) iret dec jne in mov cmpsb pop idivb xor enter lds or sub and sub xor cld dec imul xor test mov int xchg or pop jb xchg in and cli lock out mov fnstsw lcall push lea sti into jbe pushf mov in mov cmc ss or fisubr imull mov cwtl xor repnz push loopnew sub add jg lods rcrl scas mov mov ret add jmp jo sub loop fldenv push shrl loope mov pop (bad) dec sub sub adc jp sbb ss mov sub sbb in lahf cmpsb out movsb and sub and cmp outsl (bad) cltd mov jecxz dec call sub xlat jle sub mov ficompl sub adc mov xchg ficomp and sahf imull push std fsubs scas and dec dec rorl inc (bad) das insl mov dec sbb ja addr16 jg xchg adc aam repz pop lcall aaa dec (bad) mov sub or mov es add dec jns das inc xlat es or jb lods adc cmp and (bad) stos sub xchg test and cmp mov mov mov or dec data16 push mov push cmp popa loopne mov dec mov movsb bswap out inc imul lock outsb out jo nop xor test ljmp dec cwtl push xlat dec in inc in jbe mov add jp std sbb mov pop fbstp ds hlt es dec (bad) data16 dec inc dec lds or jae xor or sub inc or adc push test and cli dec xor push (bad) jb inc xchg test adc mov enter fs xor and outsl imul mov xchg lahf orb mov xor push pop leave mov jb and cltd cmc inc jl leave xor push rolb push sub aad (bad) mov or out sarl mov adc xor stos sub mov inc mov xchg and push and jae repz mov movsl dec add sbb inc jbe fnstcw sub addr16 sbb xchg sub jmp mov adc jae repz pop scas (bad) adc cmp dec std mov or cs adc xor pushf sub push ja int into addr16 pop popf stos inc pusha adc lea sbb pop and cmp hlt or inc fisubrl or xchg int3 sti add sub mov and sub jecxz test fsubrl xor sbb xchg les aam xor pop sub mov sub add (bad) (bad) sub int roll pop icebp push arpl std xchg and in (bad) enter sahf ficomp and mov scas or cld lret and addr16 and (bad) jp ret in lret lea inc dec mov pop mov aaa sub adc mov ljmp add push jns jge shr movsb sbb sub ljmp cs mov sbb xchg inc add sub pop mov repnz sub les call xchg mov push jns lds or push sub hlt movsl push inc sub popa mov adc arpl lock mov fsubl push notl out test dec push sub es mov js sub sar cmp mov dec adc mov sub pop lcall mov in push lret push es pushf and (bad) dec adc lods cmp sub (bad) cmpsl fild pop fsubp cltd sbb (bad) lock cmp fcomp (bad) xor sub push xor jge outsb push fsubrp lea sbb mov inc push clc mov daa and sub cmp jg mov adc xor push enter jae imul mov inc call pop or fadd int dec or dec arpl test sub and (bad) int3 aad jne mov mov movaps test mov test mov fildll cmp rcrl data16 dec sbb jo jmp lcall add das pusha es sub push insl ds dec dec sbb jno cmpsl xchg leave push stos xchg test imul outsl (bad) push mov and arpl fmul loop addr16 shll int mov adc popf fucom cmpsb fisttpl mov sub leave add ss pop add sahf fwait xor xor jp outsb fsubp or dec insb dec xchg adc mov jne jmp xor daa shlb sti dec pop jg push sub (bad) fidiv es mov jae data16 (bad) jl jmp inc (bad) gs aad xor (bad) jbe in out sar sbb test addl mov sbb fiadd xor adc bound jo pop cwtl in jge push cmp aam (bad) vpunpckhwd daa test mov (bad) xchg cmp leave mov test loop test push jl dec lock loope and push and std add sub fcmove cli xchg xlat lock divl call xor sub push cmc insb cltd das mov cwtl test jnp sar stc inc imul mov fldcw adc das mov rcr inc pop mov add mov icebp jge pop mov sub divl loop insb std lods add (bad) mov sbb ljmp mov sub xor (bad) sbb in scas push and lods hlt push or sub mov sbb jo xor call and inc (bad) repnz mov xor lret or xchg cmpsl test mov sub imul int test popa mov dec add push ret xor push cmpsl add loop mov out mov or push pop push out jnp rolb test mov jns or imul inc mov lds mov lret stos pop (bad) sarl sarb stc add nop movsl daa sbb cmp (bad) data16 inc jp enter sti sub adc mov outsl test pop data16 fcomps dec cld cmp test add (bad) jbe fxtract rolb mov xor add rcrb das xor lahf sub test adc loope mov adc daa push xor or sub fucomp jmp sub jle jne push mov cmp mov xchg sub fistpl mov (bad) enter jo sbb push dec xchg repnz jp adc aas (bad) xor das sbb inc (bad) fisubrl or cmp outsb pop addr16 sub add sahf xor out sub dec adc and arpl scas sub pop inc sahf movsl mov es test loopne leave pop aas inc xor mov push daa push push jae inc test lds mov adc mov and stc enter xchg pop or mov xor fsts out push inc xor jno fnsave jne test mov mov ret push ja daa or mov dec mov es stc xchg imul xchg pop (bad) sbb or scas cwtl jle pop test push lahf cmpsl and add scas mov push pop add inc jno sub in enter push es sbb pop sbb (bad) int test out xor add cmp leave stos lahf fdiv xchg test je incb jno repz push aaa xchg pusha jns sub xor push add mov xchg jmp xchg mov push into xor adc xor pop cmc push mov and sub sbb mov add push jle sub cmp addr16 pop xchg enter (bad) pop (bad) lcall sbb sub dec stos testl in adc xchg cltd and sub mov pop pop push mov pushf fmull dec ljmp int3 pop jmp cmp sub push lcall dec outsb sbb add imul mov aaa pop stc movsl xchg add push xchg adc mov push jo sbb sub jmp push cmp jl rolb sub mov add sub fldcw or inc fistp xlat cmp xor adc je test xchg sub mov aad fmull mov cld xchg sub adc notb push sub dec push std ret jg loop cvtpi2ps pop call cs pop mov out cld and mov addr16 lea sbb divl fsubrl sub test loope repz jbe dec sub ss pop jmp xlat sub xchg ficomp lock aam leave roll pop je pop rorw dec ss push pop sbb (bad) cli pop sub mov push hlt ss jno or xchg or aam sbb in sub push popa xor leave (bad) push iret xor mov cmp sub add scas out imul lahf pusha pop mov out jne lods cmpl mov adc (bad) add (bad) xlat xchg push loop call inc sub imul jbe mov sahf push sub test int3 and das jle iret dec and repnz add cs movsb and pop loope lds out cli aad inc mov push std lods dec pop aad ret push xor sub push cmp adc repz xchg mov (bad) sbb pop clc sbb subb and xchg cmp mov bound test (bad) sub xor loopne stos mov (bad) out (bad) push push xor enter add mov sbb nop jp mov xor xor jb cld (bad) test (bad) xor enter xchg jecxz mov scas (bad) hlt scas pop xor mov loope fsubs cs mov aam pop jns push mov sub callw aas ss jecxz mov sub or daa push scas sub inc rolb (bad) icebp pop xchg pop ljmpw fdivl sub jns cmp mov cli into sti mov clc leave and dec inc lahf test std insl in add (bad) mov xchg push jne jle sub xor jl dec jge jo cltd lret sub mov mov decb fsubrl imul inc ds popa and bswap lea xchg adc lea sub cltd sub push dec add mov testb lds loopne xor cmp fisubr dec mov cltd xchg popa xchg sub xor pop pop push mov sub xor add sbb lahf idivl notl int xchg and popf test test mov test adc jae sbb or (bad) sbb and (bad) pop and aad cld hlt insb mov out dec jae test or outsb mov push sub or popaw xchg add call dec ljmp loop pop push inc arpl inc mov add cmp inc add xchg in sub test loopne or xor xchg push push lods sub pop pop les cli imul mov adc stos xchg mov imul sub mov xchg sub leave sub pop sbb pop mov xlat iret std ds mov pop dec sbb jmp cmc stc cmp push jle cmpb sub js add and sub incb out jns aam imul dec adc fldl dec sbb ds enter in sub cmc sub xchg xor ret xchg sub xor (bad) push and (bad) xor pop pop sub gs aad rcrl subl std adc test sub cmpsb popl cmpsb xor or add cmpsl jecxz adc sub or dec mov pop jo stos ret pop push or (bad) cs sbb add mov test lcall lret stos and cmc mov sbb (bad) (bad) movsl cmp movsb sub jne dec jbe pxor add and jnp ss add mov sub jle sub hlt pusha mov cmc or mov jmp mov add xor daa add sub ret lcall jnp std jae push (bad) xor push sbb enter xchg sub fstpt inc imul shll jnp mov sbb mov sub mov pushf test cmpsl jecxz and fwait sbb xchg mov sbb xor add dec cwtl cmp scas add test rclb xor fldcw and loopne and es mov or mov inc adc out sbb dec and daa outsb push cli pop or sahf ja movsl (bad) pop inc or jl inc pop inc inc sbb cmp dec (bad) sbb xor js push push xor jae sub jcxz test leave cs pop xchg bound xor push push add stos rol aad test pop leave rcrl imul stos cmp cmp leave loope xlat hlt mov inc mov adc sub inc lcall cwtl dec (bad) stos dec jnp mov add pop sub mov icebp or popa loop cmp test cmpsb daa int arpl leave fs pop scas mov std or and jmp ds into xchg and dec fidivrl sbb ret sub and jbe pop cld (bad) cmc sbb adc jbe jae in mov push pop jge mov addr16 sbb mov cmpsl sti hlt (bad) dec inc jno fisubl inc out in mov gs int ret aaa lods add add test mov (bad) mov pop test out imulb pop cmp lret xchg sub jae mov iret mov ja sbb push shrl xchg imul and dec daa lret mov dec mov repnz pop xlat inc je sub jb std mov cmpsl (bad) push dec (bad) cmp jno rclb push ds orl insl test (bad) mov jne sarl fadds and mov cmp sub pop shrb pop jb aas cli iret test sar test jnp popf mov int3 fucomp cs sti dec push loope stc or xlat sbb bound fistl cmpsb inc cltd lods jo jg add test imul mov cli sub cs in popa (bad) call inc pop mov push dec push fidivl (bad) xor popf jle jb ljmp rcrb pop cmp sub push jnp push mov mov imul sub rclb ror rorl sub sub decl jae xchg sub cmp mov (bad) notl std sub pop sub jns mov sub cltd dec xchg jecxz dec jg movsl add jbe fldcw mov sub stos in push push mov in mov sbb jle jo dec sub mov loop std dec sbb sub daa mov sarl stos sub xchg or sub gs mov mov test xchg andl loopne popf adc sbb adc out jp addr16 in sub mov cmc sub sub daa and lret lret cmpsl sbb ds jnp out aam mov mov push adc in sbb outsl xchg mov mov pop aam in sub pop outsb jnp xchg movsb popf xor (bad) das out sub jbe lock mov ss sbb mov pop add mov movsl xchg xor es lock and mov fwait sub pushf sbb mov jp bound jb xor call incb aad add test fidiv cmp cmp cmp (bad) mov iret iret add inc mov or daa xchg xor mov sub stos add xchg or pop insl cs adc pop insb cmp or xor mov data16 test cmc mov jp mov lret xor mov leave cltd add sub mov enter into cmc (bad) inc aad and lahf call sbb (bad) fnstsw xchg loop jnp sub ret aas push lcall dec mov popf movl stos jnp cmp xor pop sti test adc xlat jmp popa add sub aas inc sub in mov pop shrl scas sbb ljmp rcll and sub icebp fiaddl mov pop sub jecxz adc push xor xor movsl in outsb jns pop cs sub mov inc fdivl inc stc push jns push in and sub hlt dec (bad) sub fwait aas adc pop push lods mov adc sbb adc sub xor pop in pop add sbb stos mov mov dec loopne push and (bad) out js cwtl lret pop out xlat and aad in movsl xor add sbb sub mov add das sub ljmp pushf sbb mov push addr16 inc sub fdivs clc sbb leave out jmp and push sub mov sub pop jo or cs sub xor pop mov loop icebp jge cmp cmp mov into xor ja sbb mov xor push cmp inc movsl ror int push jp nop mov mov push and movsb jnp leave fimull cmp test mov xor dec sbb adc pushf (bad) aas daa xchg (bad) adc ficom in and sbb bound inc mov adc iret enter inc fsubrl pop ret aas xchg popa int3 call (bad) dec or sbb inc aam and int scas mov fldl pop scas and cmp xor xchg cmpsl leave mov cmp jns sar popf movb outsb ficomp std xor leave sub aaa cmpsl in icebp dec xchg push test cmpsb pop mov (bad) (bad) pop xor aad adc xchg (bad) out mov (bad) mov scas pop dec or adc and push mov mov fcomps lea mov int3 sub sub cwtl (bad) repnz getsec xchg sbbl ret lock lcall hlt mov adc push jb leave dec adc insb int3 repz lods stos sub aaa cwtl inc jns push sbb xchg frstor lea jae inc dec movb inc inc (bad) sbb ss cmp hlt push pop data16 xor popa sti addr16 sub into sbb sti add idivl pop int pop scas jle inc popa (bad) loope,pn add ficoml sub cmp jae mov fimull jle leave cmpsl (bad) add dec inc add pusha aaa clc clc jge push in sub sti mov xor int repz dec insb xchg jb cmpsl test sub stos push pushl loope cwtl (bad) cmp push mov xchg add in jae or dec into (bad) adc (bad) test sub inc adc inc and fldcw rcl xchg push mov clc mov pop push dec push imul icebp xchg jb test push sbb pop jp stos jno jne js (bad) pushf jb fstl jb aaa jl mov leave (bad) lcall or cli (bad) xor out dec dec pop sub out inc daa dec cwtl inc leave sti adc rcl xor lcall ljmp push pop or pop dec push xor dec outsl cwtl adc cs int outsb das xor push pop or mov dec inc inc incb lea adc (bad) jge pop es loop lea inc leave ds (bad) cmc push inc or push les inc xor adc mov sbb adc (bad) dec test inc out dec js xor push scas stc aaa or pushf inc jae push mull sar mov mov lds push in jnp rorl mov push out aaa sub cmp cmp pop aad xchg in sbb cwtl leave sbb jnp int movsl push aas push mov or inc mov lock loopne test push xor aad push int addr16 inc es mov pop cmp lahf mov push aaa or in mov lods mov dec sub push dec (bad) subps cmp pop sbb iret hlt jne mov pop test xchg or dec and dec push cmpsb cmp int (bad) dec fwait leave push in jnp,pn push (bad) or jno lret cli insb cmpsb jb aaa sub xchg stc repnz ds and sahf xor aam xchg mov scas mov sbb pop cmpsl push add rol clc in pop in sub js pop icebp adc mov mov imul loop cs std dec adc push mov xlat test dec or pop lahf (bad) sub xor pop fdivs fdivl cmc loopne xor push call add jbe (bad) ljmp jg jp js dec into cvtpi2ps sub daa (bad) std mov push pop icebp xor jmp test fiadd push nop xchg fwait dec incl or ja mov lret pop repz je (bad) popf ds repnz lds sub mov dec xor ret out inc mov cmp loope sub data16 popf push hlt pop and add mov loopne imul sub cmp (bad) rol lods jl xchg repz jl inc adc and sub cwtl sahf xor fildll mov cs cmc ss dec sti cltd pusha ljmp sub pop mov cwtl jb pop sub and ret sub in cli lret iret add rolb scas test lds cmpsl mov shll test sub aam into ja mov btrl jmp std jl,pn push mov sub or cld sti dec push std pop pop pop add xchg xor fcomps pushw inc loopne mov mov sbb xchg lcall ret cmp mov les (bad) shrb xor and inc sbb xor sub arpl pop inc sub addr16 test testb dec pop pop sbb cli out sub or xor sbbb ficompl xchg pop cmpsl loop sub mov push dec test sub pop jno pop jg,pn add imul sahf mov inc std xor adc hlt stos shl in mov sbb and pop (bad) and xchg sbb lods in jnp rcll fisttpl enter inc dec push jns xchg sub (bad) addl call mov dec push lcall dec add (bad) aam push outsb push mov push test xchg sahf add jne cs dec (bad) mov sub mov xor or push insb adc fs mov int mov xor loope (bad) scas sub (bad) in add inc adc and fstps mov push cmp aas pop ljmp andl mov sub push imull (bad) push push add inc sbb sub jae (bad) jbe es or jnp addr16 sub lcall mov sub and lock mov shl (bad) inc push int imul outsb test aaa out xchg mov (bad) aas icebp fadds movntq push dec push ja jns dec and icebp push push stc lcall daa (bad) div (bad) push je rcr icebp les out dec sbb std adcl push inc dec inc dec sub cs jecxz jl cmpsl cwtl sub push pop test outsb and jl out dec and mov iret dec mov jl aas (bad) pop pushaw or add mov leave cli xchg scas (bad) dec push jp inc fldl (bad) stos int3 pop outsb scas pop pusha cmp sbb mov mov repnz stos dec cs add xchg sub mov pop test cmp insb leave test fldenv stos outsl arpl cs sbb (bad) int sti imul rclb mov cmp hlt into dec imulb lds sub fdivs push mov mov fcompl and xor sbb cltd scas add test enter or push and setge orb sbb (bad) ret ds mov sub jle mov xchg lds sub cmpl xor mov sub push pusha cmpsb pop jno dec out movsb (bad) fs cs inc pop js push data16 mov daa int sub inc pop or rorb xor jbe adc enter cs jb cmpsb add out mov mov mov outsl daa sub jae inc and fidiv int mov xchg xchg add add dec push xchg ljmp dec daa or mov pushf sub movb pop in fisubrl stc push pop jns cwtl scas pop jl pop add (bad) sbb sbb arpl pop (bad) enter dec mov rorl lods popf sub adc sub nop cmp imul jb aam inc repz test cmp xor (bad) ja mov ds add add sub pop xchg mov out pushf cltd push movsb cmpsl xor loop sbb pop jns outsb fbld dec mov das sbb sub pop adc mov inc daa loope out lods cmp push pop fs call sub shrl mov jl xor in fbld and sbb mov daa fldpi outsl adc jne mov inc cmpsl sbb mov addl push xchg sbb mov leave cmpsl aaa or test mov adc imul daa mov mov jmp push fildll mov adc mov mov dec (bad) insl out out iret sub mov (bad) daa sub dec lea dec jle sub sti not mov rolb stos xor (bad) fdivp data16 xchg mov push lret cs imul ret add and jge jle (bad) jl mov and ljmp inc cmc insb inc (bad) aas lods in test push fistpl pop sub jge sub and push push inc or dec stos popf push mov shrb jne mov xorl and or push clc mov in test movsl movsb sub test inc sbb js shll fisubr inc xchg cmp xchg adcl stos inc jg adc decl lahf cmpsb outsb jne mov arpl pop lret inc sbb lock in shlb mov daa (bad) and clc into lds es rolb sahf cmp pop xchg mov jns test ficom xor push jmp cmp (bad) sub xchg loop lods mov lret mov fidivl jbe cs xlat cmc aas pop or push ret insb push xchg adc push ja jo leave push leave jp or cltd sbb jb cmp stc jge jmp pop and sub xor inc int lea lea (bad) xor push int inc lods mov xlat iret movsl sub roll jl nopl inc push dec inc mov dec dec mov repz xor push test nop mov inc movl loope pop into mov add fwait cmpsl in (bad) popf movsb js sub lods int enter xchg addr16 movsl cld test bound pop jno cltd sub sub push xlat pop sub push mov pop sbb mov cmp dec inc xchg push sub and std daa ror sub lahf adc inc (bad) mov xor mov insl out imul inc lods pushfw adc jecxz (bad) adc sbb adcl jns fdivrs cwtl adc pop leave xor add imul ss sub aad ds in adc cltd jno push sub int loop push jge call add mov and jns test rclb add sub pop test xlat jg xor fcom mov mov lret adc mov adc sbb and xor insl and mov mov push jg push testw loopne nop sarb dec inc cmp (bad) jne lret lcall out sub xchg (bad) iret and adc adc cmp es adc cmpsl sub xor insb pop scas mov push (bad) sbbl rorb sub imul and inc jle,pn sub out xchg sub or pop xor or xor pop lahf int mov push lcall movsl data16 rcll addr16 out fwait or lahf sub xchg push sub mov jle popa fisubr imul jo cmp fmuls lcall xchg mov add mov xchg jmp xor adc dec sub lods and das (bad) rcrb iret fiaddl test sub push add pop jecxz push jle push sbb cmc daa mov sub mov mov xor sbb imul fcompl clc sub or dec pop out fimull addl jno mov push jbe (bad) incb lahf push xchg nop movsl sub data16 cmp loop xchg cmp test in cs sbb cwtl jmp cmpsl sbb sbb pop sub fwait mov test test lods push leave or scas dec popl cltd mov ja std outsb orl ss push insb cwtl push jmp dec inc loope xchg sub jg (bad) out ret dec cld (bad) rsm push lret mov jb adc sbb inc cmpsb xor in push mov test xchg xchg sub stos jno cwtl daa ds xchg push and scas and mov jbe into or daa sbb paddd negb scas inc mov lahf cli or xchg stos sbb les mov or pop cs push fs (bad) pop jno and sarl leave out and pop fnstcw cmpsl imul jle xchg pusha lock xchg leave loopne add ret pop ss aaa jle dec push jp jl lret pop sbb int out (bad) and push leave mov mov cmp or push mov stc jbe leave lds dec xor sbb sbb arpl cli lret push jne cwtl mov cld inc xchg sub fistp jne daa das call notl and jmp adc xor fcom jns testl or xchg sub aas push (bad) sub mov mov xchg rorl pop jge mov repz sub dec mov push int3 addl bound add ret sbb sub lahf fist cmp or fs dec movaps xor dec call jge cmp sub push je pop pop gs cmp mov add mov int3 out dec jle mov adc pop push enter mov sub mov fisubr cmpsb cli mov sub push jg in and inc lret imul sbb xor sub mov cmpsb js or inc cs arpl sub ret enter lret pop jp test and push out xor or outsl sbb pop jno pushf and sbb xchg xor loope test pop jnp or shrb jmp xor clc pop sub (bad) fs mov jno sub jo into add sub sahf out sub xchg inc jmp and xchg (bad) and (bad) sub daa xorb sub ja xor pushf ljmp mov push cwtl fucomi jl lea ss sub cmc push lock icebp adc aaa cmp lret push sub or (bad) mov mov inc mov les pop jne push push cmpsb sti inc pop ret inc pop (bad) xchg hlt cld mov loope xor leave push mov or hlt jbe daa jnp push xchg xchg xchg dec jmp fnop bound int sub xchg pop mov call loopne sub cmp push sbb outsb and and xor cmp push imul jmp repnz bound xchg xlat jnp sub push jae enter ret fstps mov out cmpsl cmp adc es pop sbb es inc sub xorl push mov inc mov dec cli ret xchg add sub inc push or mov aad dec xor pop fadds sbb sbb and jecxz jne inc sub or mov in add (bad) mov inc sbb lahf jle mov cmp jns imul test popf cmpsb push addl xchg enter sub adc mov scas cli int xor js fsubp and (bad) xchg loopne adc lods sub jle stos xor adc sub ljmp mov sub imul mov bound lods and in inc jecxz mov ss mov mov or add cmp push test xchg mov sub (bad) mov inc add ret repz sbb daa movl dec add inc mov and iret pop sub push mov scas fstpl jnp cmpsb inc adcl dec sub pop int cld test xchg mov lods push sub push xor cltd adc mov sub mov sub dec mov (bad) sub adc sub cmp xchg lret cwtl (bad) popf sahf xchg sub aaa sub sub jns out sub lods mov int3 pop cs (bad) dec jb add and rcrl mov and sbb add (bad) jbe pop aam repz fcompl daa mov cld xor shrb movsb ds (bad) jne js cmp insl pop pushf clc sub and ss dec nop lret in or shrl sub repnz cmp sub sub clc and popa sbb ljmp pop mov dec cmpsb addr16 add push adc out sub decb cs test push xor and cmp push jno (bad) sarl into (bad) fucomi test xchg xor (bad) and xchg and or xchg jb mov (bad) push repz mov xor jge jo mov and es jle xlat dec cmc imul mov inc xchg adc stc shrb adc xchg (bad) xor test dec dec lahf test xor mov lds jecxz xor sub icebp scas pop addl stos xor sub out scas ficomp lock popa inc or fisubl icebp stc es or push push xor cs mov push jno pop cmpsl push mov push cmp movsl and sub gs subb mov mov xor xor (bad) sbb fildll loopnew cmp xchg cmc push mov jb mov sub (bad) mov add fstpl stos xchg mov hlt pop ss repnz icebp in enter jbe mov or loop inc pop sahf push gs in mov cs sbb shrl notb scas imul out dec inc aas xchg inc out push lcall xor cmp mov mov (bad) lds repz es daa out or mov ss xchg push mov adc inc inc mov adc jb mov leave sbb aas lahf fsubr sub add mov leave fiadd cltd (bad) cld mov aam mov push dec movsl xchg jns hlt ss fsts xlat jno push cwtl int (bad) ss or (bad) dec cmp cmpsb dec jmp push icebp add dec (bad) mov or sub adc push xchg inc jnp ja cmpsl (bad) int pop scas std scas (bad) lret cltd les scas int or sub outsb xrelease jae mov cmpsl fwait cltd dec dec es xor call leave hlt ljmp test (bad) push and loopne push jp insl es sub sbb xchg xchg jo mov loop test inc movsb mov (bad) out push jns push xchg test mov aas ss and xlat ss and xor enter inc and sarb push mov xor pop enter jne jns cmpsl data16 mov cmp in dec sbb sahf or jg sub in and adc iret ds adc test add aas xor adc iret xor sbb subl xor dec xchg sbb scas mov mov (bad) cltd dec cmp test pop dec add mov stos test out das enter clc adc test jl hlt pop ljmp daa cmp sbb sub into fnclex adc mov (bad) xor hlt push sbb out pop push idiv stc jp or pusha in xor xchg pop pop cmc dec and sbb pushf (bad) pusha mov jns addl cmp xchg hlt (bad) lods std inc adc sub mov das pop sub rorb test xor and push dec in aaa xchg in testl fnop inc ds lds adc int3 (bad) mov push cmp pop jl mov sbb sbb cmpsl shlb out push xor pop adc push shrb mov and outsl push subl cmpsb sbb cmp mov dec and or cmp cmp in push cmp pop adc int leave xchg pop pop cmp (bad) icebp dec and mov push addr16 dec sbb out mov sub sub (bad) lret sbb cmp mov mov xchg or lods scas adc inc ja fs dec sti and lock rclb int lret test adc mov or lods jo movsb pop pop add jp add push loop lahf xor cld and jnp adc push mov (bad) push mull leave mov or std aad adc mov pop sub imul leave cli or inc and cli mov jbe jno ds mov jg adc punpckldq movsb pop fmulp push cmpsb and push or ljmp lea inc rcrb push or jecxz cmp jbe ds fist xchg inc mov aam (bad) cmp fcoml test adc push xchg insl stc in loopne iret dec in aaa dec imul aad (bad) les sbb cmp icebp std (bad) push mov imul sub or ficom (bad) jnp xor outsl pop sbb pop xor cs push jo jnp xor pop dec daa jnp or xor or dec cmp mov lock cwtl dec pop cmpsl mov push or aaa mov xchg adc call daa je addr16 fnstsw in out (bad) popa out add push fwait mov int iret mov lds jmp or xor pop fmulp cmp lods sbb lahf mov push (bad) xor loopne cmp je icebp fcomps pop mov lahf fnstcw jmp xchg fwait int xor aaa adc pop cmpsl mov movsl push sub jmp int jle inc (bad) add gs movsb pop push negb mov std and sub hlt jae cwtl imul add movsb cltd dec xor (bad) mov mov jo mov jp aas mov cmp pop inc bound mov (bad) jnp dec push mov and aaa add sub flds inc xchg pop jb aam test fimull xchg aaa xchg sbb xor sub repz mov and pop adc je test test jmp test inc add sbb sahf add and xor popf stos sub jae xchg pop jno test inc lds lahf or scas cwtl icebp push in ret sub adc sub mov movsl fdivl sub pop out cmp sub add in cmp push dec mov jp mov sub push and or adc movl imul sbb fildll pop add sub mov out pop cwtl pushf mov daa add test fdivs nop cld test sahf mov jo int3 subl loop jb sub dec and sub push enter xchg popa addr16 or adc dec sahf dec subw jnp testb push pop jg cmp pop jmp sub pop repnz pop (bad) out data16 xor sbb insl fldl je push les cltd or fmuls xchg lahf ljmp add push jno cwtl aad inc jb icebp scas mov cmc div je int jle shrb mov mov sbb lret push xchg adc pop sub xchg xor mov ds fisubr add dec and jb and movsl (bad) (bad) adc dec movsb jg xor mulb repz cld lea cmpsl mov adc idivb enter call insb int leave jnp and dec aaa mov cmp ficomp cmp sbb mov and add push mov push pop stc lcall aaa aaa ret addr16 ss xor int ss add pop mov lods mov push sub into ja sub add leave lret pop mov mov push lock mov jmp pop xlat jae push mov sub or aaa mov push sub adc jb sub andl xor test sub push jbe sbb mov frstor sub ret outsb jne inc inc sub pushf sbb sub jge mov push inc sub adc sub icebp ljmp xor loope and sub (bad) or jl jp sbb cmp jns mov push js or push fisubl and xchg mov mov dec loopne push cmpsl lcall push loope sub stos lds sub (bad) movb sahf (bad) mov mov or push mov scas or psubq lret adc mov or dec push call mov sub xor and sub lds lahf mov enter jnp mov sbb out fcmovne lods push cmp in xchg cltd push je inc lods push and lcall (bad) ja sub sbb mov (bad) sub adc out sub cs fmull ret cld shrb jmp cmp shr xor pushf push sub fiadd cmp or shrb pushf cmpl and push jmp fimul stos addr16 sub push icebp push lods pop lods dec sub sti pop lock sbb aaa xchg lods pop and out mov push jge xchg xchg ret add loopne icebp repnz and lock and inc mov dec (bad) ds or push cmp jge fwait enter repnz repz gs in lds sub lcall jb in ds push sub test dec jle das sti cmp and mov push sub in fidiv (bad) idivl lcall ret and sub fisttpl dec and loopne sub mov dec es jnp cmp sbb sub pusha insb rcl in cld mov mov dec dec fmulp iret sub ret out add (bad) jecxz lea jp iret mov jb subl cmp or aad or std sub loope and cs cmp xor or mov cmpsl xchg pop mov jmp rorb in lock or fisubrl out int dec movsb sub fcompl cmpsl rorl push add mov mov stc pop test jb adc popa xor jg xchg push sbb leave ficompl sub inc or pop mov mov or repnz aad ss jg das sahf out jecxz or loope fcompl or and fsubrs push xchg cmp and aad sti leave xlat mov stc pop loop ljmp lret iret mov test scas push xor adc ljmp scas jo std jno fdivrl imul add mov aas scas test nop mov mov add mov ret mov xor adc pushf sub mov or push push adc incb or pop stos cmp push xor cltd inc popa or jb mov out imul jbe xor adc lea cmp inc push mov cmp mov xchg mov cmp and (bad) and shrl jecxz fsubr int fistl das aaa (bad) jo bound std in pop int test mov ret sub lock nop xchg movsb cmp test mov daa arpl xchg sub aas jg sub jae (bad) (bad) insl mov sub incl test cmp mov xchg rcll aaa push sub dec test cltd mov out mov sbb ja cs stos cmp inc sub and cmp push or ss ret or mov mov mov push or lds or pop rol sub in out adcb mov (bad) adc adc push cmpsl add adc sub dec pop in sub cwtl repnz xchg or or dec outsl inc pop adc xchg xor iret shlb test add inc push test je xor jge ret cmp inc imul dec mov xadd imulb inc leave movb pushf stos push and (bad) fadd arpl stc (bad) popa arpl daa insl imulb outsb cmpsb or lahf outsl pop loope fild in mov sub pop lret push push dec aam inc icebp dec push mov xchg ds push in into shl loop or and mov cmpsb and xchg adc push js cmpsl pop pop jb and sub fucomip lock cwtl outsb mov fwait fs lcall push sub push add jno jge mov mov dec add (bad) mov inc inc add pushf mov xor (bad) adc cwtl push ljmp daa mov mov loope and sub fldcw push push int pop cmc int3 push icebp inc or xchg cwtl xor hlt sub add and jl (bad) sub mov add pop nop bound enter push (bad) and or sbb sub sbb movsl test rcrb mov push xchg mov mov mov leave icebp (bad) xchg adc or data16 xor into scas and sbbl xchg mov xchg and jbe and addr16 in xor test gs int pop and xor cmpsb (bad) jge rclb xchg or sub repz mov adc jbe sub std ds xorl cld jmp adc mov mov icebp fldt sbb insl aas lea lret mov xlat pop imul push jp or test pop inc movsb and sahf push cltd out mov inc inc and ljmp das cltd out cli imul adc scas pop fisttp sub xchg sub mov push mov daa pop jae xchg (bad) or and sub hlt mov add ds (bad) mov and push je pop or sub in scas mov mov out in mov or add cwtl sbb or sbb test cmp pop pushf das outsl sub dec orl cmp out stos iret ret popf sub and xchg xchg mov mov ret sub adc fbld nop sbb adc adc add mov pop fcoms outsl (bad) lahf outsb inc pop push adc cs and jbe out xlat sub icebp in lds fwait sub dec pop ja scas imul jnp rorb sub test mov aaa loop sbb dec sub repz stc xchg loopne pusha mov fisttp sub dec lcall mov xlat or sub sbb iret mov sahf add es mov test inc cmc int mov daa sub into push nopl pop mov movq dec (bad) push sbb sub push int mov sti dec (bad) jbe push aaa fdiv test xor pop stc add sub (bad) fs pop and mov or push inc mov jmp leave in pushf and xlat xor pop div xchg (bad) push mov addr16 inc (bad) iret sub inc jno sub ds cmp pusha cmp jge push js and js scas dec adcb cs and mov mov pop roll or imul add mov push sarl adc test mov int xlat (bad) xchg outsb cld imul cmp xchg nop jb push mov clc inc dec sbb cmpsl jecxz mov bound mov jl enter inc sub cwtl cwtl or jp imul cli into sarl movsb es icebp dec sub mov js sub push movsb mov arpl or mov sub imul sub or fsubrp (bad) in dec dec les and push lret jge sub mov push test sub push xchg sbb jbe shll out and movsb mov mov sub sub mov arpl sub dec iret mov (bad) aam cs (bad) movsb lock and xchg inc rorl lcall adc mov jb mov bound cmc pop mov add int movsl push push (bad) lea cmpsb adc or (bad) es and cmpsb andb xor cltd and leave cmp dec xchg cwtl sbb repz lret sub xor push sub fildl mov xor xorl mov dec (bad) cmpsb cmp xor pop loopne xchg stc push leave bound push cmp mov jmp dec icebp addr16 cmp inc adc mov lret or dec xor std and call xchg dec cs out daa int push iret sub add dec daa inc leave mov mov push outsl ja mov and aas out mov push inc ret (bad) hlt aad sbb pushf rcl jne sbb stc push icebp fstpl jecxz jns leave xchg (bad) cmp push push bound sbb cs mov push int pop pop or call cmp xor mov fcmovb sub pop mov (bad) addr16 adc push arpl das push xor pop jge pushf movsb aad cmp int xor (bad) mulb push xor push mov mov cmpsl enter mov pop bound and sbb jg mov cmp sub clc inc add push (bad) add popf fildl in cmpsl push push lahf (bad) push jb ret scas mov icebp lahf jo pop push sbbl (bad) jmp adc sub lahf inc arpl in out stos out iret sbb (bad) ror jb pop loopne jle (bad) add cmpsl lods or mov inc data16 push fisubrl or popa jnp aam mov stos int adc sub and mov movsl or push dec aaa repz xchg (bad) aas mov cmp or ss insl stos xchg jns loop andl xor je cli push iret sbb jl (bad) mov loopne cwtl call enter mov dec or push cmp sub push sub hlt mov aad leave or mov std dec cmp stc or cmp int and insl mov sub xlat mov repz int sub es lock aas sub dec (bad) jmp lahf sub push pop (bad) rolb sub aam out cmpsb lret lahf inc dec pop fdivr (bad) aam loop push pop xor into jmp adc sub sub fdivl push or in sub push lods pushf (bad) mov add rcll add inc sbbl es or into test jnp mov push cmp mov pop ret and push jnp push add mov call (bad) insl loopne les cmpsl out mov or stos daa sbb adc sub test lcallw pop and (bad) or aad add inc aam enter mov sub mov adc sbb sbb and jnp fs mov (bad) xchg rorl test adc std pop jp sahf fsubr xchg sub mov sub and xchg sub pop jmp into adc sub subl adc pop ss je pushf aam cmp lahf stos jmp sub cmp dec addl xchg sub xlat (bad) sub setbe add mov jge in mov cmpsb inc enter adc mov call fnstcw outsb mov fucomi xchg dec and or xchg lahf lds in (bad) enter notb iret cmp rorb pop orb dec test shrl fildll push jns lret pop push push loop,pt sarb mov repnz xchg cmp mov loope loop and aam sub pop stc xor sub xlat add pop mov data16 jne dec xor sub add mov rorb imul daa aad jecxz into leave adc rcrl xchg jle in xor hlt pop pop stos daa mov jnp dec sbbl (bad) pusha and xchg call arpl ret sub js push cmpsb fwait inc (bad) out cmp sub bound (bad) xlat (bad) (bad) cmp xor and addr16 sub mov cmp or sub sbb push sub add sbb out sub scas mov sub cmovg ret (bad) push cli sbb cltd cmc (bad) dec sub js adc and or (bad) xchg sbb fnstsw push add lahf (bad) or cmpsl jae fimull test lods (bad) jnp pop int cmpsb inc sub les push mov push ljmp add mov pop push and fwait push (bad) pop adc sub ret pop inc sub fucomip push dec fdiv sub mov and inc pop lahf or imul cwtl add pop lods stos xor pop (bad) cld dec add fdivrs mov mov adc into sbb sub mov sub aad sbb add scas sub mov jns hlt sbb pusha movsl add daa dec dec out dec sub lcall dec repnz fidivrl in lods sub ja sbb xchg cwtl scas ljmp adc mov xchg out pop sbb sub shrb fucomp lods sbb stc sub test int adc std dec xchg mov (bad) dec cld sub (bad) xchg sbb sub mov outsl aad xchg xor sarl iret jbe mov xor lcall sahf leave inc add pop fdivrs fisub push cmp loopne sub cmpb pop icebp add add push daa xor aas jg cmp pop sub mov (bad) shll mov xchg dec and sub lahf movsl mov hlt mov inc sub sub sbb xor les popa push mov xor lcall pushf leave leave and cld cmpsl shrl dec cmp mov sti inc sub cmpsl mov test lahf add adc push repz clc pop sub mov jg,pn (bad) shrl paddd data16 (bad) push out and push pop ja sub and dec test fisubrl scas cmp (bad) cs fwait cmp (bad) (bad) fnstsw cmpsl xor popa inc pop adc (bad) adc rclb sub push std rclb lahf sub xor test (bad) push adc jge addl scas (bad) movsb cmpsb stos fxch jmp (bad) iret xchg inc dec xorl sub mov jle sub out in xchg cmp mov fnstsw sbb leave inc negb jl sbb cmp mov (bad) dec std sub mov sub and inc xlat lock testb or cwtl xchg jmp rcl cs push jg jns xor mov jl sub decb outsb (bad) pop flds iret jns sub icebp fcoml lds adc arpl int fwait inc insl imul js pop int3 (bad) xchg les dec mov jmp mov sub inc popa mov mov scas mov iret xor cmpsl sub sbb adc pop mov add loop xchg bound rcll leave jno es test dec cld sti jp loop jmp iret sub jae popf pop xor push add arpl les pop xor subl dec mov inc pop imul test mov add ret movsb les ss xor and sbb jmp mov sub dec jg mov pop and and fwait xchg push cld sub mov jne leave inc sbb nop adc jl mov call repnz add sub jb (bad) (bad) dec jno mov into sbb pop add leave and sbb stc mov cmpsl sub cmpsb mov aas cmp je cmp or cmp sti hlt std test mov and ficompl das xchg les aad sub into or add insl push (bad) outsl xchg loopne es movsl sub xor imul movaps mov scas pop add loop xchg stos inc and mov sub sub call es sbb aaa add leave inc mov int3 std scas (bad) mov out push clc dec (bad) mov jmp jbe mov mov sub xor cli call jae loope xor adc (bad) hlt cmp pop xchg xor movsb jmp push popa pop sub (bad) cmc pop xchg int cmpsl cmp ret cmp sub hlt fsts mov and and mov movsl in leave mov sbb (bad) mulb adc test cmp jmp icebp fs (bad) adcl cmc test (bad) push mov cmp ljmp push insb jno pop jb fnstcw mov fdivrp jge and sub push pop inc sub rcl cmp xlat xor in popfw push jbe mov in in and and sbb jns rorl lea (bad) and bound mov lods shlb xor xchg fucomip loopne or mov xchg lds ror stos cmc cs jae xchg xor sbb pop call test jmp adc push sub idiv dec fdiv sbb or fldenv jmp dec sbb push test cmp mov dec xor or jb aam outsl cmp out adc sub jb xor jo pop sub stos jns pop inc cmp mov adc je sub pop hlt and mov in ret adc xchg jnp mov push push pop xchg push out dec mov insb sub out pop cld outsl cs xor mov mov loope adc cmp sub and xchg cltd sub jns into sti push mov movsb leave jl rcrl test test inc sub adc add mov cltd xchg xor sub outsb popa movl xor (bad) dec in sub movl xchg jp (bad) sbb fimull xchg data16 inc (bad) das pop sbb and iret into imull mov test push push sub in scas pusha push sub adc jp push notb mov xchg dec mov sub push lock xchg mov mov daa inc notl dec add push ds scas push (bad) out and mov loop cmpsl (bad) inc pop or mov inc xor (bad) std sub leave imulb push movsb jae cmp nop add insb or sbb push cltd cs xor add sahf arpl sub aad sub (bad) out inc mov push int jp lods dec stos fstl xchg stc ja cmpsl int3 in and out sub or and inc sbb or sbb les cli inc push dec jecxz sbb cmp mov outsl (bad) aam xor sub or (bad) sbb movsl xchg lret cmpsl xchg dec mov cmpsl dec sbbl push int xchg sbb mov jb sub loope or repz loop in inc cmp mov sbb test gs add mov mov sahf cmpsl push ret jmp cld cmpsb in dec cs adc jmp mov and push sbb xchg mov mov imul add or jbe push retw jb repz cmpsb dec jnp movsl popf daa lock xchg sbb sbb cli es out pusha dec inc mov sbb push jne xchg dec (bad) sti dec jb call xchg popf mov test mov (bad) movsl xchg stos aam jmp mov xchg ss repnz xchg sub push pop add add fnsave lea mov dec mov ret jp xor clc push sti sub mov imul or loop sub out sub sub lods loope sbb adc in or xchg popa dec jo ja negb addl sbb sbb mov sub test js push sub xlat push mov in popa mov push clc sub scas inc (bad) fcmovne std push jl enter mov xchg sbb rolb sub jge sub cs fstpl sub and sbb jno cmp sub cmpsb inc xor push adc movsl sub sbb scas add test stc jns std dec les adc dec adc mov fildl xchg xlat out push jbe fldenv mov stc dec mov jb jmp sub jl les dec jno sub sub mov loopne xchg sbbb imul lds cmp sbb jge mov or out inc push leave inc adc inc loop (bad) jmp dec lods and rorb orb sub scas ds (bad) xchg mov out xchg test jmp addl pop out mov mov sahf jnp sahf outsl adc mov ss inc push sub and push add fimull jb insl and inc (bad) cltd add aaa enter pop hlt divb rcrb lock push push sarl sub push or cld test in sub leave mov or stos sub lret dec cmpsb in pushf test test popf mov pop cs or jmp mov xchg sub notb or andb imul pop gs mov in ljmp clc cmc shrl lods add rcll adc lea xor push lods jb in dec sub arpl sahf lret jg push inc xchg or xchg lds data16 xor je in sub mov (bad) adc jae mov and sub jb rcrl xor fidivl add popa pop dec jl or popf jle inc iret push jge lods pop jmp (bad) int and mov jle inc out mov insl jmp mov aad inc lds imul sub mov hlt imul sub fcomps adc sub bound sbb mov cmp lahf stos rcll xor mov pop daa mov push jbe jae jb adc scas gs jecxz sbb adc shrb xor out mov jecxz adc outsl stos jge bound adc sub cmp je enter add fmull or xor xchg stos sub sub cmpsb (bad) scas sahf mov pushf pop test adc sbb mov adc pop iret sbb mov lock mov xchg push and adc push push jmp cmpsl mov push (bad) ret sbb mov sbb cmp push bswap test in scas ss or je and dec into leave (bad) or sub push sub out gs aaa xchg fsubr mov adc or inc mov pop fmuls adc aas push push mov xor jns sub mov (bad) pop int (bad) sub mov popf dec rep dec or mov push in mov out subb push mov push dec cmp sbb sbb mov stos jle int nop pop icebp leave inc (bad) leave (bad) imul mov in sub dec into call xor daa push pop cmp xchg mov mov mov cmpsb outsl mov fwait aaa push cmc adc mov int rcll loopne push and sbbl adc test in push sub (bad) mov js xchg and paddq scas in out mov fwait push ds fldcw fwait jno cmp cwtl cmpsb arpl ret jns int enter int3 dec or jo cmp cmc pop cmpsb cmp int3 lahf mov push xchg cmp jne jl jl pusha inc repnz xor xor icebp push je in jo sbb pop fadd sub cli jne pop into ja xchg cwtl sub push push xor inc mov xchg cmp (bad) mov mov mov ds jno add (bad) dec out jecxz sbb sbb adc rolb jns add push sub out fnsave dec xor call daa push repz sbb sbb lcall pop fidivr mov cmp push mov repz std ss dec push jp daa mov fwait dec mov mov sahf or sub sub imul pop inc (bad) jbe scas sub mov jecxz jmp cmp es sub or sbb mov loop loopne fldl iret stc popf push push push js imul cmp dec test (bad) ss incb outsb add sub call lret pop daa enter (bad) sub out pop scas mov test dec repz jle jno pop test sub inc mov dec jae (bad) loope xchg mov and pop sahf dec (bad) sub dec (bad) repnz int3 pop (bad) aad test or add lahf xor push dec pushf lret fsubrs sub mov or loopne (bad) rcrl mov and xor fucomp rep inc lahf pop bound adc mov bound jnp loope ds mov cmp sbb test cmpsb cwtl add in sub mov sbb in mov fmull mov pop pop pop dec std ds popf stos jmp jb cmc cs adc dec (bad) roll addr16 fdivrs loope sub inc and int3 cld test in dec nop sub jnp xchg cmp ss mov stos ljmp or and sub adc scas pushf test and (bad) in loopne test cmp add arpl cmp stos out (bad) in dec lahf outsw cwtl (bad) nop daa lock arpl sub push scas outsb ficompl lods mov cwtl les das xchg jle out xor sub fsubp add movsb sub les xor mov and push loopne jb (bad) pop movsb andb pop adc loop jo ret mov test (bad) sub int stos and inc gs iret cld adc or jl inc fcmovnu pop out divl fldt xchg xchg jnp mov loop and decb or push push inc fwait scas sub mov clc jg xor and test sub int3 mov notl gs sub sub pop jmp sahf out cmp lea data16 aam and aaa cmp sub das adc dec mov aas popa sbb jnp pusha mov sub bound test loop xchg xchg sub sar aam inc fwait mov (bad) push jge out sub ds outsb mov insb sub inc inc (bad) ja cltd jno scas int mov adc push leave adc push std lock mov (bad) nop inc push inc add adc std push push push shl ja sub leave hlt jg (bad) and addr16 pop sub adc push xor in (bad) ja fs dec mov sub (bad) shrl jne mov mov out push out inc or jmpw push push in daa xchg sbb js ss push aaa inc pop jno in fadds inc xor dec pop xchg pop fistl inc adc (bad) jb in push sub mov add mov push xor ja out jbe add cwtl (bad) mov mov insb out movsb mov (bad) jb dec cmp pushf fldenv lock roll inc int mov dec icebp dec jecxz pop xor cli mov xchg bound jns jp and aad or adc inc cmp sbb mov cmpsb or cmp int test sbb test ret mov jne cmp (bad) fstps cltd test sti dec addl or cmp sbb mov pop (bad) xor fsts lock cwtl mov cld push and or cmp mov aam xchg into and push je ds xchg in test icebp pop lods nop sub xchg aaa xchg mov inc mov lahf mov idivl cs cmp sub xor insb pop mov xchg jmp mov xor dec mov cmpsb sub dec dec or call fmull cmp jmp jns pop jle sub push inc jbe sarb loop lret movsl adc (bad) cmp push sbb sbb add push out mov cmp test jb cmp push mulb sbb ja loop push mov std pop insl popa punpckhwd faddl and push sub leave dec inc jno inc imul push xchg jbe bound cmp popf mov jo xchg (bad) out gs push adc sbb lcall cld pop leave add mov bound jne ss repnz cli dec and jb out lahf pop (bad) jp and mov pop and mov leave dec daa pusha pcmpeqb aaa and cmc jb dec xchg test fmull out adc out dec pop into fcomps ds mov push mov pushf cs (bad) popa setno and add mov sbb lret cli addr16 lods push cs lds (bad) dec insb cmp xchg mov and cmpl outsb stc scas inc mov sub xor adc jnp stos dec ds ljmp xchg adc ja push dec push sub fiaddl jmp dec pop inc xchg sub jbe push cmp fwait (bad) out mov jle or mov pop loopne insl cli jbe imul push inc jg loopne int3 cmc ret or lods subl mov inc xchg jmp mov adc and mov pop aam out inc sub movsb ret push or ret call push dec jnp (bad) leave cmp subb ja rep fbld stos arpl enter sub mov mov in cmpsl (bad) mov test or xchg mov and add sub pop lds data16 lret rorl mov push mov sbb sub mov pop in fs outsl aas dec loopne jno and cmp idivb aad dec mov or sub lods and mov sbb sub push pop fildll ret and sub das push lret cmpsb and sbb xor add push cmp shrl push ja adc pop sub ret test sub repz cli lret sbb mov push pop je mov scas and mov xor sub test add (bad) out es (bad) cmp inc xor mov adc mov xlat lea mulb mov inc cmp adc addr16 sahf das inc mov adc mov ret xchg sub cli cmpsb out jno,pn jecxz fucomip pop or in add xlat sub dec insb bound test inc call jp xchg push mov lock sub (bad) lea test cld loope stos push pop and addl ds jmp cmp cmc (bad) cs add loop iret sub mov sub mov or cli js dec add daa aad (bad) (bad) or outsl sti sub adc sbb imul aaa mov push addl (bad) repz jecxz xchg dec push sbb add adc ds test sub xchg adc and mov inc push sub jbe jg fisttpl dec xchg ret jg mov test add not fldcw cmpb je,pt movsl leave lea mov in arpl push adc outsb adc lods sub lds lcall xlat loop mov xchg inc mov cmpsl dec dec and mov mov leave sti pop sub lea push jno aad fs lods insl and or xchg fldl dec sti jno dec push pop insl (bad) push push sub add push mov imulb pop adc inc inc gs int3 xchg addb addr16 fs lock cmpsl dec leave mov loope xor jl sub int push cmp push and out fadds mov inc scas inc sbb mov das and data16 aaa fs dec sbb sub and or pop mov incb rolb mov inc divb cld or mov xchg loop,pt in mov push lods mov (bad) iret sub inc dec cs or push aam cwtl leave fs and adc xchg roll and sub (bad) jno add or jae mov pop sbb pop mov mov scas xchg lret test fsubrl nop ja out pop add inc sbb (bad) fisttpll std sub out xchg add jmp xor jcxz mov icebp push xorl jecxz out popa xlat movhps pop pop sub lcall shl inc mov pop mov push fwait enter pop add mov sarl pop cmp pop popa push push fimul sub (bad) xlat sbb jl test sub inc and cmpsb mov int adc je (bad) mov mov sbb jb test xor and enter inc cmpsb ffreep inc inc imul sbb lock addr16 popa dec push cmp lahf test and xchg imul cmpsl addr16 add into sub clc inc jae cmpsl pop cmp xchg jo ror mov ret dec aad xor aas outsl mov sub mov not scas adc cmp sub pusha sub outsl test loop jo cli sub sub cld mov sarb xchg int pop sahf adc leave or push sbb sbbl xchg mov cmp cld std sbbl ss push fbld clc rorb fsts int cmp cld lahf aas or and in and inc inc (bad) and sub lahf pop shll cs js test adc cmp inc call and leave adc inc call cmpsl ja addr16 cmpsb stos ljmp data16 test insl inc (bad) mov iret xchg int lock sub adc (bad) mov cli lcall mov add dec fmull (bad) jne mov and je fldt icebp xor mov mov pushf scas imul jno loop jns out lcall sub pop mov in sub pop rolb lods adc sub xchg mov inc sub int sub sub aam pop insl stc out sub mov jnp std sub adc jecxz or ja repz stc (bad) aaa sub ss imul ds jmp mov loopne repnz lret inc loope cld cmpsl and or sub inc xchg rcr in xchg inc mov fs scas xor (bad) xchg es cmp (bad) int mov (bad) lret ss ret nop sub (bad) idivl sub mov sbb or cmp mov push jno sarb dec fdiv xor cmpsl jnp mov inc fstps popaw mov bound into sub out push mov jo push lods jae fdivrl xor cmp cmp cmpsl and and idiv enter jbe (bad) sub loopne lods orl les lahf sub insb sbb fisubr test jmp rcl ret (bad) mov jb int or sarl les add aam out inc cld push jg mov das sub inc xchg out outsb pop decl sub cmp out (bad) aas sbb sbb mov cmp loop inc fnstenv pop icebp lcall mov stos ljmp data16 mov popa mov sbb aad lock mov sub xchg cmp cmc leave adc call popf loope out ficompl and out dec movsb cmc adc push cmpsl (bad) jo and ss stos out xchg out les fs add aad es mov aas pop ss and xchg sub sub scas not or jmp fwait mov aaa mov stc cmp fcmove shrl (bad) jae dec mov inc sub inc pop push repnz sub add mov dec nop aaa test notl lahf fwait and sub test and and out jl dec adc sub fnstenv es hlt xor add sub sub repz orb incb mov data16 cmp lds mov dec loope push cmpsb icebp int3 mov aam push movb out mov sub pop call push lret add sahf mov push sub lahf outsl fimul pop jo,pn lcall mov add sub bound pop adc lret cmp lds push dec into xchg aas sbb pop xor sub nop in sbb or fisttp adc aam cld fist xchg jmp xchg jns push add (bad) icebp inc rcl jbe push fbld sub jge cwtl outsb or fdivrs sub and cs loopne and pop loopne cmp sbb jge or lea sar mov inc inc sbb sub int3 jnp lret jg push out lcall mov cmp (bad) js je sub dec cld jle pop sub lret cwtl imul aas gs sub xchg xchg out loopne jg xor loopne dec jg cmp pop aad pop gs sub add mov rolb sbb lcall dec (bad) (bad) movsb arpl and rolb pop xchg imul lds insb sub lods and loopnew test push xchg push mov call pop popf imul add scas sbb ss in pop aam mov mov test cmp or repnz or dec int pop jb or dec sbb mov mov cmc pusha inc leave xlat sti call cmp xchg test sub leave loop inc jecxz xchg cmp mov addr16 push sub adc push and ror lret cmp cs push dec sub ja push clc xor aad popf leave ret jno sub xchg mov adc (bad) inc xchg data16 push or jbe push push fsts mov stos pusha and sub outsl xchg das pusha into in inc cld and sbb fldcw xor fstl cmpsl stc enter mov adc push xchg cmc jle,pn sub mov imul adc loopne cmc or test cmp jns movsb mov cmp repnz xor rcll dec sbb xlat mov js sub cmp pushfw dec cmc add pop fisubrl stc enter or out inc (bad) rorb sub loopne ret adc dec push out or mov and or xchg bound loopne mov cmp pop dec or push cmp mov icebp mov cwtl (bad) ror cmp mov nop out add mov xchg and sub dec or out xchg pop or sub lret insb loope inc (bad) iret les inc mov mov (bad) mov call ss in arpl fadds cmpsb dec xchg sahf daa jl (bad) push stc dec fsubrl pop out inc lods ja ss jge and in push daa ja push mov sub jp and inc mov jno int lret bound mov push push pop imul mov cmpsl cmp js insb movsl mulb cmpsl xor jle test (bad) dec sub sub popf pusha adc fsubrl add pushf cmp sub movsl mov sub mov jo,pn xor inc or xlat xchg or fsubp ret shrb and sub mov push ja xlat popf cmp pop lods sub mov add push push xchg and cmp rcr push mov int pop fnstenv iret stc cli sub ds add xorl xchg (bad) jmp mov mov sub lock adc mov xor fimull test sbb sub bound cs (bad) loope cmp in cltd scas lret and sub ret (bad) test cmp adc mov mov cwtl js fldcw mov fidivrl jbe jmp xchg adc stos xchg cmp enter inc arpl fs and (bad) cs sahf scas mov sub (bad) jbe cmp sub mov lods dec sub xor dec push cmc dec inc dec ret in sub mov jo andl je mov nop mov and fldt arpl mov dec sbb dec dec sub bound or sahf test je dec push sub repnz mov dec orl shrb inc ret sbb xor movsb daa sub xchg mov mov fisubr ljmp jne mov cltd inc mov in mov xchg ret fldt add or xor imul movsl xlat jbe sub ss lock ds xchg rclb dec mov and and (bad) test xchg jl gs sub lock test xchg fwait out outsb loopne decl xor cmp xor cld rcll xchg jp,pn lret mov jmp imul xchg cmp adc das jnp dec data16 add jb outsb mov daa mulb cwtl in fcoml mov inc mov cmp or jg je ds jbe mov push inc cltd ss arpl loopne mov insl sub in xor xchg fistpll sahf fiadd pop add dec jnp xchg jb out sub hlt pop das sbb aam sub push or add bound xor insl or cmp js (bad) sbb cs lret xor in sbb fdivs lods in xchg cmp and movb push pop mov pop add sub arpl mov outsl add jnp xchg sub ret lcallw int3 out xor mov add inc mov mov dec dec dec lods (bad) add sub iret jns jmp mov lahf enter fdivp cmpsl aas daa jl int3 xchg int decl and dec cmp mov xor bound lock and cmp fbstp adc add sub mov xchg sbb daa inc add add cmp rcl sub sub rorl rcll scas sub in or xchg je mov mov inc int and icebp pop (bad) sahf lds or sub popf dec mov out cwtl cmp insb imul sub sub push int in arpl jl jb cs or mov leave enter xchg imul popa call imul gs push cmp sbb xchg mov and pop bound sub or push pusha mov inc mov jecxz cld xchg pop jp push adc test cmpsb jge push mov insb push fwait push xchg stos ljmp outsb and push sub mov in sub popa push bound xchg iret jecxz in mov sbb sbb test nop orb mov sub pushf dec inc cwtl mov dec jmp mov xor dec loope cltd cwtl cmp or and loop inc fnstcw cmp sub sbb jmp lds cmp popf pop pusha cmpl pop icebp sbb fdiv cs mov sbbl ss adc pusha in dec movsb jecxz into or iret ja lods sub add loop clc mov push xchg jp xchg iret call scas pop inc jb lds rcll (bad) or jp sti xor push mov sub addr16 stos lods das adc ds pop push sub lret jl cmp cmp mov push insb adc pop call push into sti xor cmp std push inc movsb xchg scas xchg sub ljmp inc in (bad) add and sbb iret xchg dec inc add test cmp stos xchg push ss and jecxz sub xor scas rclb ret mov loopne or lock mov sub mov mov iret in divb mov aas in cmp test or sub mov jns mov lcall dec addl sbb dec jge ds mov cmp inc mov jecxz lcall xchg push sbb rclb and jp hlt shlb xchg cmpsb sub popa jmp sub fidivl cld sub dec adc arpl push xchg mov (bad) (bad) clc xlat hlt cs add jns sub int3 test dec stc rcrl fdivl xor xor mov out adc hlt std dec and jl jle xor (bad) mov adc cmpsl out addr16 ss cltd adc inc or es and add xchg xor sub push outsl sbb in pop and fisubr nop movsb mov xor xchg (bad) not movsl loopne fdivs xchg data16 mov scas xchg mov mov repnz cmp bound js cmpsb mov ret fucomp stos cmpsl xor mov jbe lahf je femms cwtl inc adc data16 push scas test scas inc sbb std sub (bad) sub mov js jg dec cs scas pushf xor out test cltd sub notb pop mov inc inc in mov lahf icebp test adc xor fdivrl int rclb loop adc and lds in inc xchg sbb add push or sub cmp pop add push push test mov xchg inc xorb sti dec sbbb movsb add hlt fcomps sub inc out popf xchg push cmp push leave xchg imul rcrb xor test int dec (bad) outsl lods in pop iret stos xchg xor push mov cs test aaa and arpl xchg addr16 ficompl jbe leave jno cs or pop fisttpll daa arpl push jbe cli cwtl sub out pushf cmpsb mov popa outsb push dec leave std mov push add pop jmp cwtl (bad) sbb sub add (bad) fstl jno test mov mov and dec scas mov cmpsl int xchg or add dec insb pop (bad) push or and loop push insl jne leave jmp (bad) cmp mov out cmp push push pop in int stos das xchg cmp clc add jp pop std pop pop int sub les pop sbb lds jmp sbb lret mov cli lcall jno fcmovbe sbbl pop movsb ja xchg lea test scas push jmp push in je and leave cli (bad) enter loope sub mov je cmpsl aam xor fstps sub cwtl (bad) sbb pushf cld loop pop dec xchg push (bad) std arpl imul test xor or in (bad) pop jnp xchg cli or and push ljmp xchg sbb (bad) mov int3 mov (bad) adc pop fxam and sub notl sbb pop cs in loop mov or daa lds jp or sarl in cmp insb mov cmpsl into mov sub clc leave lret or (bad) xor mov popf fstpl sub mov sub sub push (bad) push js or mov adc cmp out repz mov in inc dec repz xchg pop jge add adc jecxz movsl stc sub push mov cmp dec cld cmp xor xchg daa lret or sub js fldl cmpsl addr16 jmp pop lcall ds xorl call add sub mov push xchg ss daa mov adc push jg lret cmp mov or imul das rorl (bad) sub jmp lea mov das jbe,pn es (bad) aaa in fwait sub jle jp out xchg scas dec (bad) mov shrl mov xchg sub xor xor jno loopne ljmp mov sub jo mov aam sbb jne int in clc shrb add inc jns mov sub stos jnp dec mov pop into cmpl xchg leave out or jl mov adc mov jge sub test repnz inc sbb xchg sar addr16 out sub xor (bad) stc add testl dec adc mov (bad) pop cmp jmp cli dec push sub fucomp fcmovu and add sbb mov into movsl cmp lahf aas inc adcb jle jge sub rclb mov pop xor fs icebp adc jns adc sbb loopne pop inc sub aaa mov sub sarb idivl sub push pop cmc inc cs xor pop mov sub lock sub cmp sti (bad) fs sbb in loopne popf sub and sbb icebp xor sbb xchg sbb xor sbb jbe aad cmp loope and aam fldt call fisubr mov sub imul pusha not bound into sysexit cltd mov xor jp xchg ja icebp gs das push xchg sub dec cltd mov jno dec stos push je or fwait das (bad) mov repnz pusha hlt pop sub ljmp xor sub (bad) mov test jmp mov loope js out loop sbb ss lea mov and push mov and adc cs xor cmpsl roll js data16 cmp or add jns ret sub andl jl or icebp or andl jle sub xchg fidiv add shlb ljmp xchg xchg jns sub add test or jmp stc lcall lea push sub aaa xor sbb sub pop inc ss and lock pop enter inc sub addr16 cmpsb ss cld bound dec popf push popf sub sbb out xor dec fisttpl mov divb sti jmp or ret jle shrb dec pushf daa pop dec dec push rcr jge inc (bad) int inc pushf xchg test inc sbb psubsw inc addl imul mov mov adc daa mov call push sub cmpsl enter mov hlt mov dec push sub push xchg pop mov mov lcall dec in pop scas insl subb testb jnp rcll sbb adc mov mov xor jne lods add lret push pop (bad) stc adc ret cmp (bad) in aam dec mov mov push dec dec cmpsb out cs cwtl (bad) sub jns jp mov lods xor sahf jns stc sbb or and daa bound push testb sub int pusha std es outsl leave lods imulb lahf and int push jns imul call (bad) in rcl dec stc mov fs push fdivrl inc loope js aaa sub xor lahf push fs cmp sbb mov and mov daa arpl jo daa and cmp pop ficompl or push cmp fwait leave int jg inc stc cmp lock shll jle mov sbb das jmp mov mov mov or dec pop out sahf rep sub test (bad) (bad) int sub xor lret and mov shrl and mov pop cld imul icebp fwait jmp (bad) push aad push orl repz decl outsb add rclb iret sub inc add mov imul inc xor jo lds jno pop inc xor pop sub popf aas or pop ljmp fbstp and pop mov cwtl mov pop mov adc xchg sub cmp ja out add add xchg pop jae inc sarl cmp jecxz mov mov hlt push jmp xor clc std or sbb mov mov add cmpsb mov sahf fxtract scas xor int3 xchg dec or scas or xor mov sub int3 icebp fsubrl sbb lds sub mov (bad) rorb push xor imul adc sub jo popf sub jne js inc scas repnz xchg xor aas jno jmp stos mov (bad) rorl inc jmp inc jl jecxz ret mov xor jb es (bad) negb out dec adc faddl mov cmp cmp int sub and push jle,pt cmp jne adc packsswb and sub es lods xor jl ss ja loopne test sub jecxz pop popf leave fsubrl aaa mov cmp nop mov sub popa clc fildl flds data16 (bad) aas sub les test in data16 lds cmpsb xchg add sub dec mov mov push xchg xor xor leave dec lcall mov mov out loop lcall js or push ss ss aam cld int3 push fmull in sub sti mov adc xchg add sbb add lret mov ret iret cmpsl pop outsl mov xor jl mov addl sub cwtl jnp popa add push insl rorb push (bad) jbe cwtl push dec ror xor loop ficom sbb dec out cs cmpsl enter pop testl and or mov daa hlt pusha lods test cmpsl addr16 (bad) adc jmp in inc daa imul and fisubr sub xchg in dec (bad) mov (bad) insb add sbb mov sub mov xchg (bad) cmp imul test add mov pop jb bound movsl sub and xor test mov mov popa pop outsl mov test jmp int out mov roll mov and pop fisubl add fs rclb cmp push pop insl xlat sub test mov loop and xchg stos (bad) jae pop mov call data16 aaa adc daa loope push lods push dec mov sbb ljmp jnp xchg (bad) (bad) or cmpsb jl in mov pop daa adc sbb jmp and fisubr lahf stos scas (bad) cmp and js aad fwait sub xor sub xor sar add jmp push inc adc scas cmpsb incb dec sub rclb cmp cltd cmpsl mov mov push jp mov sub lea sub mov les das inc xchg and pmullw bound lea sub outsb addr16 mov cld pop xor push fdivs stc bound insl push out hlt mov inc lods jg pop lahf jo inc mov dec fsubrs enter xchg std clc or addr16 inc mov mov pop push mov jmp xor xlat sub fucomi adc stos stc rcr xchg ss ja mov sub xor inc xor xchg cmp test in lods (bad) sbb and inc xor pop mov mov or inc sub dec test jo sub push (bad) sub pop mov xchg dec js and xor jecxz cmpsl jno mov sub xchg movsl sahf push mov push adc and icebp fucomip inc xor sbb xchg sub in sub xchg cmp sub sub mov and aad pop sub lahf fdivs in dec cmpsl sub xor push lea jns xorl or mov int3 mov dec negl sahf push jb sub dec (bad) xor sbb sbb aas cmpsb dec cmp xor cmp sub cs mov push sub cmp mov sub sub xor sub or pop cmp or roll lock sub lret std out push stc mov sub adcl ss dec cwtl dec jl xor sub ja sub cmp shlb push stos fidivrl jl inc add sub mov pop add mov clc lahf sub mov add cs loope and inc dec adc inc sub xchg iret mov xor dec movsl adc (bad) scas fistpll imul fcompl (bad) cwtl jb dec popa test roll dec push (bad) cmp and push push fdiv popf dec jl xchg (bad) lret shrl dec xlat jecxz ss int paddsw adc add (bad) cmp push or pop test sub mov mov int3 add mov push or mov sub mov sarl dec dec cli insl inc sub addr16 sub xor mov sub pushf xor (bad) ss mov sti inc mov xor jmp icebp push jmp sub xlat add out mov repnz sub mov jns mov sub add add mov cld sub cmpsb jae insb jnp es mov sub rclb xor int3 rorl or sub adc pop aaa call xor sti mov xor cmp mov dec outsb leave (bad) dec insl push ss pop or test pop jmp (bad) inc xor add push cmpsl xchg push cmp cwtl insl mov mov xchg mov test fldl movsl push mov ss push mov adc cmp loope jbe sti mov sub (bad) lret rcrb push dec stc cli lret jnp inc insl and mov inc push (bad) sbb push inc push (bad) cmpsb cmp imulb lahf pop outsl cmpsl adc add pop mov (bad) mov push push sub xchg and (bad) and cmp in dec imul inc bound jl cmp sbbl cmpsl (bad) pop sub (bad) push addr16 mov jb arpl fisttpl mov enter dec dec aam nop stc insl aam cmp int push xor add clc dec or jno fistpll jb leave adc test dec sub pop popf cs lahf xchg and fdivrl fiaddl leave and test fnop cmp cwtl add ret dec or mov mov (bad) xlat xor lea push clc cmp push adc xor pop push test push sub ds dec cmpsb addr16 pop push jne outsl mov (bad) leave and test aad and mov xchg ficomp xchg incb lcall pop das pushf (bad) inc roll inc or mov dec or subl in mov push xchg sub arpl mov jge sbb scas sbb nop dec loop shrb lods pop xor or pop sbb stc icebp (bad) pop inc lcall sbb or jge pusha hlt stos mov repnz sbb mov adc ds jo (bad) push gs dec cmpsl sti ret movsl in dec inc or adc test pop div and (bad) xor pushf add xchg maskmovq negl xor adc stos or test pop jmp or (bad) pop pop or dec push mov sub inc (bad) mov cbtw sbb sti cld ss dec xchg in jo in add gs test cs xchg push or imull (bad) scas jo push loopne push cs pusha cmpsl xlat jmp roll push mov (bad) into (bad) sbb scas fcomps (bad) jl dec fldenv cmp int3 xor or leave xchg daa push cmp pop mov push shr into sub rorl aad sub insb mov scas sub js sub in lcall inc loop or adc test call adc in mov inc jg insb jno sub fwait sub loope sete and jle (bad) negl fcomps into bound ret movsl and gs lahf cmp repnz movsb inc in cs mov fild call cwtl xor fwait daa pop xchg ret sub dec or cs sbb fucomi sub daa stos and mov lds dec push jl packsswb insb es pop inc pop cs loopne cmp ret jg sub clc movsl sub sub stos and sbb (bad) cmp xchg loop in sub sarb and jns stc jnp rolb sbb adc leave mov fsubrp dec (bad) mov loopne (bad) xor push cmpsl xchg xchg mov push cs or inc or loop data16 rorb insl jns adc dec cs xchg loop (bad) adc repz test adc cmc jnp mull pop or dec push xor cmp arpl push jp push aaa cltd ljmp call (bad) stc aad outsb xchg dec sub cmp out xor or jbe imul xchg jecxz cmpsl push lock ficomp (bad) push out bound pop out mov test daa mov push dec std imul or cli cmp adc sub pop mov sahf or in or stc inc or dec push dec popf cmpsb xor jbe sahf adc cmp notl fbld cmp cmp (bad) daa int mov insl inc push int sub test push xchg sub inc pop push iret sbb push or adc out (bad) call adc loop dec insb mov shrb jp dec repz out imul rcr sub dec popa xlat lahf repz imul jmp sbb mov pop rorb jmp fldt xchg das jnp stos ljmp jo,pn mov std xchg cmp movsl dec adc mov push divb test sub lock inc sub shrb or outsb fldt add xchg test popa lds cmpsl adc push repz sbb dec jmp sbb dec cltd ljmp adc and push push dec add inc cvtpi2ps gs out push push pop mov mov sub mov xchg and cmpl cmp jb and dec jmp mov adc bound or lcall adc popl add push inc mov jne and imull std or ja sub in (bad) movsb sub data16 sbb xor sti push sub sub pop (bad) out inc xor push jp or popf daa xchg aaa mov sub cmp lods dec (bad) jge xor jp adc xor ljmp jl ds push xchg or lds cmc xlat bnd push cs jb inc xchg cmpsb sub test push lock xchg mov sub mov stc and pop in push mov bound in loope (bad) push pop push inc movsl sbb nop jge (bad) repz stc sarl cmp cmpsl sub popa mov fstp xor or dec cli or xchg (bad) das outsl subb sub sbbl loope inc lock sub mov movsb sub jmp and leave push data16 es mov jg dec nopl ja mov in (bad) pop pop cwtl ret xchg or cli jb inc aam fildll jo imulb orl or mov mov mov sub insl dec push cwtl add sarl das pop cmpsl int3 enter scas sbb in popa outsb or leave and add sub dec sbbb mov fcomps sub dec mov (bad) dec in cmp push pop fwait push dec xlat adc mov scas sub movl or call and xor push inc push sub adc (bad) data16 sub mov iret xchg jle lret sub daa xchg jno jae cmp les stos jge sub cmp pop outsb (bad) cld dec imul sub mov and sub xchg mov push and test pop xchg out ja imul mov xchg jmp or hlt rcl repz loope lods mov call data16 leave cmpsb cmpsl sbb rcrb (bad) jbe cld sub sub push bound xor cli inc test cmp out arpl lret and rorl shrb bound dec inc and or ja inc (bad) bound iret sub hlt push or xor clc mov in dec aas cmpsb mov pop fisubr test fcoml inc int arpl rcll add mov aad pop out sbb jge gs jle cmp fsubp int3 sbb ljmp movsb leave mov jb,pn xchg pushf rorb repnz or and outsl addr16 je xchg mov dec (bad) lea or leave mov mov cmp inc aaa rcrl dec xchg ret (bad) jno mov cld (bad) int3 xchg movsl adc cwtl adc pcmpgtw jbe imul sub pop cmp stos or adc mov pop xchg pop mov inc (bad) sub scas dec push enter mov dec ret imul mov push call push mov pusha inc fisttpll xor sarb dec push sub add mov int3 sarb icebp leave jl test and adc mov adc lret (bad) cmp out (bad) arpl enter sub add std int pop iret das xlat (bad) sarb fs in and arpl std cmp jbe mov ds arpl push int adc dec sub inc push jge mov sti es (bad) mov sbb dec inc or jo cmp int test or mov fwait mov mov and jb jnp sub cmp andl gs cmpsb dec (bad) cmpsl dec xor pop cld push cld imul int jnp lahf mov sarb cs adc xchg shll popa shrb push ja inc mov mov and pop popf jb push mov ds pop mov push loope and xchg mov out lcall push pop test sbb mov ret pop push leave adc or inc pop aam jb out xor lcall inc enter daa roll hlt pop int3 jmp adc jmp pop mov xor mov xchg fbld fdivrs cmpsb push mov sbb push rol cmpsl lcall sti cmpsb adc xchg mov sub add sub (bad) jecxz jmp cmp push sbb mov das imul out pop sub les cmp cli sti scas adc dec fsub outsl in sub mov mov (bad) mov sub icebp test mov add xor hlt out xor push xchg pusha ret rcrl test push cltd cmp sar out in test cmp jl dec push sbb in popa insl xchg out insb std inc or js addl loopne and cld and inc inc lock mov inc cmpsl pop orl jmp mov and sub inc or out sub pop in push sub negl sub add xor jnp push clc cmp leave aam cli dec mov (bad) sub sbb mov lea sub mov dec (bad) jns xor dec adc mov test aas push or push cs lret adc sbb movsb sub daa cltd daa and cs loope stos sarl addr16 fs data16 sub leave ds sub lret mov sbb mov test stc aam cmpsb das xchg cmp jns ss inc lds sub outsb ret test inc sub test sbb mov pop jnp popl lods out ficompl jle addr16 int inc sub cmpsl pop mov mov add inc jae shrl cmp das add lods (bad) mov je dec fnop xor test mov leave xchg jp sub or jae dec add aad out mov sahf (bad) hlt subl (bad) (bad) sbb pushf daa dec pop lock jns lea adc pushf stos ljmp xlat fsubrl hlt push loop sub adc sub fisubrl leave (bad) sti aas sub pop cmp inc jmp mov pop imul xchg cmp mov adc adc and mov sub cs add dec sbb sbb push mov xor push push divb dec sub cmp sub (bad) loope,pt dec xchg call adc pop inc or or ret test mov cmp add daa mov inc test lret jle xchg pushf jmp and mov out jbe sbb sub (bad) or movsl imul mov push jne and dec inc (bad) push mov adc xor and dec push ja inc daa mov (bad) mov ret jg (bad) nop sbb int inc add sti cmpsb scas lahf clc adc xlat movsb dec mov cmp jbe lret xor inc push xchg daa mov test mov test cmp loop xchg lahf lahf mov lods and sub mov push mov jbe js push fmulp adc add data16 inc repnz pop cmpsl stos daa (bad) int xlat aaa or lods icebp sbb rcl sbbl shrl ret xchg push leave add jl push jb ja jae or mov push jmp jmp push and jb test xor dec in push ret or dec sbb add shrl xchg cmp ret andl add xchg xchg aam outsl sub cwtl int cltd cld cmpsl xchg repnz mov icebp push jb fs aam adc xchg or mov push ret aas cld xchg aaa daa dec je or dec cmpsb add adc inc (bad) push mov mov pop xor dec out stc test cltd lret cmpsb jnp leave and out test sbb pop in inc and lret add cmp test pop jb push jo sbb mov mov push add jge add cmpsl pop ret xchg in mov jg xchg (bad) negl aaa push aaa and leave stc pop out sti mov sbb test sbb fidivrl xorl sub sbbl push cmpsb int add or jge call cs insb pop in push je sbb cmp repnz push bndldx mov add jnp pusha add es stos jp mov loop pushf insl (bad) and xchg rcl das icebp and test cld mov mov add out and mov stc adc in pop mov pop adc mov dec mov push push hlt mov sub push mov push add xor ss pop mov leave leave out mov push fcmove jae add sub (bad) cmpsb in dec mov insb cs sbb sarl mov imul test bound int lds stos or xor add jmp mov inc or lds andl pop mov push xor int lret enter jmp addr16 scas sbb fs mov or roll fnsave leave loopne clc int inc jo push std xor shrb cwtl leave adc cld dec loop sarl (bad) loopne pop out push les jb dec push leave clc push cmp std cs pop and cmpsb xor inc sti aad xchg cltd imul push outsl andl pop mov inc mov lahf push dec loope and push push xor je,pn xchg mov in dec (bad) loop sub clc xor mov xchg mov inc sub inc ljmp xchg and sahf in fsubs xor dec xor clc (bad) sub xor sub sbb les xor sub push sub jb jnp mov sbb rorl lds out sub sub jge test inc pop jns sub fs push adc adc sub (bad) jb imul shr in mov sub out jno das pop jbe sub sub fdiv or shrl pop jne stc sahf test iret out or inc lcall jmp or and outsl into sub xor xorl sub add adc adc cmp icebp sub jl cmpsb and cli into psrlq xchg sub mov ds mov add xor daa mov ficomp add les out andl cmp aam (bad) xor fisubr std ds sarl xchg stc stc adc idivb mov aad ljmp cmp adc mov sub loop ret lgs sub push in add lods loop sub jo das sbb lret je xchg ja push mov lret cld in dec ret insl loopne jp pusha in inc dec clc (bad) cltd sbb fidivl ret sbb or decb pop cmc mov inc ljmp loopne loope mov ret or incb mov sub adc pushf mov mov sub and jmp lcall out mov xchg fsubr jbe lods sub cld int3 shll ja xchg cmp add enter mov pop jmp int3 inc loop addr16 addl add sub dec imul icebp das pop mov or lods jo (bad) sbb add sub cmp and sub adc or push xchg xor daa mov aad xchg repz push loope pop jle inc sub (bad) dec les movups mov sub sub add add imul subl inc insl and inc xchg das cmpsl cmpsl push divb sbb sub fisubrl dec (bad) clc into sbb test loope lret sti cmp push test mov ret daa shrb mov sub cs (bad) adc out ss enter incl jbe mov mov jb std xchg es shrb dec dec or test push icebp cvtps2pd imul mov adc pop ds (bad) fsts xchg and mov dec aaa cli mov mov and push cmp xchg jne sbbl pop jne mov push (bad) xor pushf mov inc jge je out aad xor adc push stc into out jl cmp pop out inc add ficomp ja pop dec xchg mov imul pop dec ds out test test push mov xchg and and sub sub inc sub lock or mov cmpsl and or call cltd cmc sub mov fldcw inc xor or nop xor fisubl mov jbe pop adc push dec cli shll jae jmp icebp dec mov sbb or test push pop jo mov or bnd jbe inc mov pop das outsl mov arpl call test sti jle icebp xchg dec (bad) fcmovnu xor push cs out and sub push cmc pop sarb mov hlt jo fwait pop repz sbb sub jg jno adc sub inc lods lcall sub xchg mov sub cli and dec aas mov hlt stc sub push rcrl aas cmp cmp xor popf daa dec xor push jmp in pop insb or mov shrl sar mov xor dec pop fmull test ficoml sub push cwtl add pop and cli lcall insl cmp mov jns movsl (bad) sub rorb xchg sub sub scas mov das xor arpl cld sub aam or cmp jge sub mov das mov mov jo pushf mov jnp stos mov punpcklbw mov add ljmp je or mov call push jp inc lds cld pop out out hlt cmpl jno mov and call ficomp iret sub push mov dec jecxz and adc mov test mov adc repnz les stos cs mov pop inc fisttpl out sbb scas out mov data16 nop push and fldt inc sub sbb push cmp dec cwtl fidivl sbb adc out (bad) adc or imul or scas cmp iret xor xchg mov outsb pop lds mov pop test sbb (bad) repz cli jne xlat sbb add push xchg fnstsw inc mov xchg adc push mov sub (bad) ss dec jg mov mul cmp lret sub popa loope xor fisubrl xlat lods and inc sti sub mov cwtl sub mov jno mov cmp lods cltd pusha jl xchg cmp cmp (bad) hlt sti add or mov pop inc sarl insb unpckhps sub mov repz add add jns push and inc sahf xchg lods jmp cvtps2pd dec cmp pop pop add pop cmpsb rolb repz iret cmovo jbe stos movsb sbb mov sbb add (bad) std sysenter int sub mov jecxz imul jle push sub int3 add fisubr test aaa movsb in lcall imull cmp jne bswap rcrb popa jae sub lods (bad) cmp jnp pop iret xchg sub out fwait inc or popa xor bound mov jnp sub cmp sub sbb mov les bnd sbb sti sarl rorb andl or xor dec lods in pop scas push push jmp or js or xchg call mov mov lahf hlt outsl push dec mov pop mov daa shufps xor xchg test xchg movsl inc (bad) xchg andb mov (bad) xchg push xchg addr16 mov xchg mov or mov jno xchg or xor sub lcall or fs adc jl (bad) fwait add or pop xchg xor push push in or xor pushaw sub and cmpsl loope push dec xorl add int push push jmp jb sub and jecxz aam and push insb xchg daa mov in inc jle nop shl loope,pn inc add sub pop negl sbb dec sub ss orb aam imul push jge inc adc cmpsb push sub and sub or pop mov lss cmp sbb or gs dec lods rorb bound loope imul sbb cs mov loope mulb xor sbb sub xchg sbb sub push mov add aad inc in sub imul mov int3 cwtl sub in xchg xor add popa push mov xor inc mov dec lea jl sub mov push call cld hlt fcoms sbb ds push (bad) ret in cmovg lahf cld int3 and (bad) movsl xor subl sbb pop loopne test fisubrl jle adc sub jne push ds data16 aam and sbb add stos call jge inc sbb adc push cld lret (bad) sub mov sub pop out das pop es inc sub aad pop sub pop das sbb jb repz mov bound mov sbb das es xor test push ds push notb fiaddl mov dec sahf into and push inc mov roll jmp fs mov lcall xchg dec and lds out rolb in stos in daa bound fild sub push sub jg,pt sub lds aam inc and push enter pushf or clc ffreep add (bad) cmpsl xlat adc sub mov and stc ret sub ret aad push push aas jl lret dec xor call (bad) mov (bad) outsl sub mov mov sahf out call lods fwait mov sub iret clc cli xchg xchg xchg pop jg bound or into rcrl mov mov xchg inc imulb xchg fnstsw imul shrl pop insl call xchg imulb aas lea sub cmc dec inc sbb outsb cmp stc xchg pop jo dec cmc inc xor mov orl lahf mov (bad) int push push jmp inc stc lds addr16 dec imul cmp lret sub mov data16 loop icebp or or stc xor jecxz dec adc sbb out out sub fldcw or int3 xchg xlat cld iret adc in ja sub xchg movsl movsb sub out into sub cs lock xchg or (bad) lret out jmp xchg xchg sub rolb jb cmp push sub and arpl dec (bad) roll sub ret add adc sub dec dec and inc js inc movsb cmpsl out clc movsb out pushf stos dec orl sbb mov ds mov sub sbb into dec sbb ret int3 mull push cs stc cmp and (bad) xchg (bad) je daa iret cmpsb sbb mov call push mov mov sub jnp push add in xor sarb (bad) or not sub or test sbb and sub adc and sub cmp test xchg push mov call in cltd or push lcall push xchg std fsubr pop cmpsb cmp xor mov (bad) leave jb ss ljmp mov xorb (bad) sarb cwtl int jae hlt cld stos lods jge icebp (bad) (bad) cmp in push mov jns ret (bad) or sub icebp mov cmp or cwtl es shrb shll sub jnp imul push jge cld leavew pop add xchg jp push mov xchg movb sub lret test jecxz add leave (bad) fs jl aas adc push jmp rorl subl (bad) fiaddl js sub mov pop lcall sahf push mov adcl lods dec sbb add clc cmp test add call test xchg dec cmp out adc fs jmp (bad) fwait cs fisttp lret pushf icebp mov jnp ja shl arpl jns push dec sti adc push jge sub mov adc push outsl aad pop stos sahf jmp sub fnsave xchg in data16 mov inc lret mov mov or inc std sub idivb ljmp and mov push lcall cltd flds inc mov push xchg push out adc xor insl lods xlat cmc jge sbb test mov sub in mov movsl adc sub xchg inc hlt sub into (bad) dec (bad) shrb xlat dec das (bad) ficompl push jle call inc lea aad lcall repz das pusha push push xchg add jge xor sub arpl jecxz mov out lock xchg jno push jns push aaa enter sahf sub nop dec arpl sub (bad) repz cs aam lods imul mov push xor shr sub mov mov pop mov idiv pop jo in dec push sub sub and cld xchg (bad) mov and insb mov xor sbb in xchg xor mov jns aad js movsl mov subl pop lret and xchg inc add scas repz push jbe sub sub orl push mov in sub in mov sbb adc xor cmpsl jae adc sub scas dec xchg adc sub nop test fistpl imulb sub xchg cltd outsb add loop sbb mov adc movsl fisttp sub test movzbl roll leave add test mov sub mov in aaa adc dec cmp add pop mov pop sub pop push idivl sbb inc mov sub test dec sub icebp xchg sub mov ds mov xor xor sub push sub cmp es leave or sbb jge cld repz in cs andb sbb sahf std jg and inc inc cmp inc in cld ret mov pop and and arpl push out push rcrl fldenv xor in dec loop or lret lock (bad) leave test fs enter arpl mov ja pop int add push xchg sub sub adc cmpsl adc push (bad) sub dec push sub add jg movsl or (bad) cmc aas dec mov ret pop mov jbe jo mov mov cmpsb sub xor and ret pop (bad) mov ds xor je push lret mov addr16 int int push sarl sub (bad) cmp pop mov int push into dec ds jnp in clc outsb pop mov pop pushf jp into pop mov push (bad) mov subl loop daa ja inc test shll push sub fisubr push popf leave out xor mov xor xorl popf xchg pop fcomps add sub push int mov sub lods mov sbb jnp xchg gs arpl xchg pop (bad) push fmuls dec and push dec adc sub mov push (bad) sbb int jne mov (bad) icebp sub xchg jne sbb add cmpsl add daa leave dec cld aas jno ret leave pop adc clc arpl jb adc test pop mov fucomp sub icebp (bad) movsb xchg cmp mov lcall jo xor fistpl and (bad) mov shl cld fsub out es ret dec push mov xchg sub scas popf and and lahf (bad) pop daa test pop jl rcrl mov icebp lcall push inc js sub and sbb aaa xchg lret leave int3 outsb mov mov cmp int3 jns pop dec jge push call stos enter jge xchg mov pop jno mov dec add xchg mov pop xor mov cmp stos cmp fadd sbb insb xor ret mov jo movsb lahf inc xor dec fdivr (bad) xor ja jns clc add js and jnp fwait push movl mov xchg cmp mov out movsb dec (bad) jbe repz mov insl push dec lods pop lock add mov aad sub test cli movsb xor adc addr16 and fbld jecxz inc pop xor push jge mov sub adc cmpsl leave add and xchg iret mov std xchg int3 sbb rclb inc sarl push int insb push jmp mov out xchg imul jecxz dec insb pop rorb sbbl xchg dec mov ss push pop in add push and xchg xchg (bad) test mov inc pop sub leave and dec cwtl mov xor xor dec xchg jo fistl pop sub test hlt std mov into cmp jbe lret (bad) or or mov mov cmp and les lds add pop sub push ja add jo out repz mov inc adc sub push xor ss pop mov dec lods insb lret push sbb sahf mov pop dec jne (bad) xor inc daa mov test negl sub mov mov cltd mov pop mov push hlt stos mov js dec adc jle imul xchg cmpsb mov addr16 mov lods add call imul pop leave movl jmp add mov scas (bad) pop loopne addr16 mov cmp mov add sub mov inc out repnz adc in push flds rol adcl sub pop popf shrb xchg pop or imul aaa sub fstpl ret xchg mov rorb sub das sbb mov retw mov mov nop fsubr inc imul (bad) cld sub adc pop adc out (bad) mov and sub sbb xchg xchg lahf sbb adc es cmp daa icebp add mov mov xchg fisub sub test pop dec cld lods mov icebp addr16 fcoms das lcall hlt inc add mul cmp stos in loope mov or cmp sbb inc cmp sub or inc out pop es mov jne xor repnz xor xchg aas sub aad adc pop pop sbb or xchg cmp outsb sbb dec sbb subl fdivrs adc bound add and sbb push or pop fprem1 neg pop sub xor cmp adc pop add aad sub (bad) jo xchg and fidivl or xor add js mov inc mov jns inc cmp xchg sti pop adc and pop scas stos sub addb ja ljmp jp push or push xlat or (bad) scas push outsl jmp mov push fldt sbb stos shl cmp leave jl xchg pop pop insb bound (bad) push lahf sub repz and loop mov sub fs (bad) dec sub pop pop add xchg loop es pop and sub adc imul push imul lock xor test or sbb sbb fdivl jmp add in rcll mov mov sub cmp xchg mov push mov mov movd (bad) jl insl sub cmp mov (bad) fldcw mov fdiv xor and add jmp es and das add push mov sub mov fdivs (bad) popf sahf daa xchg and mov sub fldt cli ret cltd lcall mov sub add sub stos insb imull pop push lret xchg enter cmp or out mov xchg jbe test jo mov pop ja rorb icebp or or dec daa jnp mov cmp jbe loop jecxz into ja jmp shrl popf push aaa mov imul mov (bad) lock dec test ss sbb scas test pop fs or xchg daa and sub xchg xchg sub add lahf sub or arpl push in loope addl add mov out loop inc out pop xchg orl dec ret pop or dec nop push mov sahf sti dec sbb jge ljmp cmp outsl (bad) (bad) inc rorb sub leave cld movsb push sub mov push cmpsb cwtl sub xchg or inc xor sbb mov jge dec jbe sbb push cmpsb loope insb call (bad) dec pop lods lret pop push arpl or inc fldenv adc dec dec cmp test out mov xlat (bad) jbe inc or iret mov push push push pop roll lock aam movsb pushaw mov das mov jmp dec imul rcl loop push jmp dec jae mov cmpsl leave mov jbe xchg sub test inc xor jge test pop adc or sub adc sbb into aam in icebp test mov and dec (bad) sti loopne ja into jp fwait scas (bad) sbb jb lcall std mov cmp jnp push js and or jmp add sbb pop sbb cmp or je xor lods xlat xor pop fcoml mov (bad) aas fs pushf xor push pop push test pop outsb mov cmpsb ds aam sahf xchg sub cmp jmp sub xor mov jb lret std rcll clc push bound cmpsb call daa in (bad) xor cwtl mov notl mov (bad) mov inc (bad) int push mov incb arpl xchg pop mov adc divb sub and dec xchg jo mov inc adc dec movl cmp shrl jae lea mov stc pushf addr16 and mov jne dec gs ss addb and sbb in incl mov push pop mov adc sub cmpsl cs cwtl dec pop sub jb aam or push int jmp sbb scas cmp sti cmpsl (bad) jg call sub sub mov stos cmp xor imul or adc mov or call test xor and mov xor adc inc mov std aaa rcrl or xor repz sbb sub (bad) cmp xchg push add pop lds push inc mov dec and shlb and mov loop aaa loopne fisttpll jnp (bad) pop fs cmp and cmpsl push lret pop int arpl or arpl ss jle aaa lret aaa push dec lahf mov rol pop dec into insb jae push mov push bound rcrb aad xchg aad cmp icebp push loop and addr16 fstp lods mov xor decl mov bswap pop inc fidivr adc stos rclb pop dec push jo dec mov xchg cmp xchg adc loope sbb dec xor push dec xlat pop incb inc scas jns cli sub js idiv xchg cmp jmp bound cmpsb int cwtl sub sti int3 (bad) out hlt adc push rcl ja xor fisub xchg (bad) dec mov pop lock and cltd cli sub mov sahf xchg mov xor (bad) xor push stos outsl (bad) test mov rep adcl sub pushf cmc sbbl push dec call xor aam stc cld (bad) jmp xor jle dec push in lds or call xor xor push std ds inc add sub (bad) das ret and push repz jno push mov in mov lret test not sub dec mov add sbb ja popf out sti (bad) cmpsb out outsl in sub push int jbe ja mov iret jl,pt push mov jecxz push fsubrl pusha push jl lea (bad) mov xchg sub popa mov rcll and notb cmp sbb dec sbb sub mov jb cmp (bad) sub jl xchg movsb aaa lock push push push xor fld adc loopne pop sub sbb sbb push cs repnz sahf negl pop ds sub fiaddl fs xor and inc pop je adc jp sbb sub addr16 sbb jbe xchg shl inc popl movd lret jg jecxz xchg xchg push js dec sub dec stos sub popf dec fsubr lock (bad) imul sub lea or ficomp fucompp cmc push cmpsl (bad) repnz movsb pop aad mov arpl jnp add or movsl and decl int sub lret or xchg mov adc test out aad add lcall lret xchg xchg and stos mov cltd cmp data16 or repz cmp (bad) hlt xor sub adc stos fiaddl or xchg jl or ljmp fist sbb and (bad) lds or cmc adc pushf sub inc pop sub xchg pusha addr16 divb pop int xchg sub movsb test or mov xlat (bad) mov decl stos pop xor dec xchg dec iret int xor addb jnp mov fildll (bad) sub dec sub dec jg stos mov in pop jae xor or cmp add mov cmp mov scas fisttpll push lock mov mov lret loop lret xor adc daa and dec dec mov xchg jae push pop mov out adc lcall popa test test cmpsl cltd cs aad xchg mov jnp add sub call sub dec dec sbb pop xorl sbb out mov jae mov pop mov (bad) int3 and icebp jne sub mov xor fisubrl jle fmuls out icebp mov dec stos sbb data16 clc push lods lcall cli pop cmp mov lret addl sub (bad) or xor xchg xlat sti add cs dec and gs sbbb mov mov (bad) sahf sub inc daa je sbb xor gs sbb in sub ss mov sti cmp mov subl jns lcall cli sub (bad) imul test fs lods cmpsl stos xor mov and xchg xchg outsb cs pop shrl mov mov adc mov clc push and idivl std fnsave dec push or lahf adc pusha movzwl xchg call es and mov and lret sub mov repz jle cs fdiv fildll mov decl push jne and (bad) mov mov push push push js pop int3 mov lret sub inc mov cmpsl (bad) mov sar pop sub fwait sahf xor xor or inc xorl xor dec push pusha cwtl int3 jl rcr stos das lcall std test imul je out out xor fisttpl push mov dec out mov sub xchg in sub push fisubr push movsl dec dec orl sti jle dec popl jno fucomip fsubl mov mov lahf or (bad) aad outsl and and cld jle ljmp hlt inc outsl fs sbb es add mov mov divb int3 cmp jge lea mov and dec dec adc repnz daa movsl pop cmp mov adc inc sub jp xchg inc jbe jge xor rorb test inc jb push sub cmpsb or sub xlat xor xchg xchg or pop imul dec xorb xor adc pop jb jb,pn jmp sub and pop jl gs (bad) pop mov incb dec sub enter add gs in xor insl sub fistpll inc add and insl rolb stos psllw and inc cmpsl adc add mov jo stos push int fwait and xorl cmc popf cmp adc mov or add icebp (bad) std pop aaa movsb fnstcw and inc daa dec xor push cli or pop or push scas pop out jno lahf dec lock fs ds push test pop xor (bad) lods je iret lea jo xor sti xor daa xchg xor mov jns push dec jnp dec add sbbl push shlb iret dec stc cld mov dec jns push sbb jb cmp (bad) stos movb loop dec test jae outsl (bad) and cmpsl jns mov inc pop adc scas inc cmpsl leave (bad) int test ret mov dec adc mov arpl enter or bound cli sub dec leave jbe dec push enter push (bad) loop inc cli test xchg subl and cld adc add pop (bad) pop cmp popf pop and addl lock jnp push popl dec add dec cmpsl pushf mov jb enter jle adc jmp pop cmp bound add push adc adc das or pop jnp sbb pop sbb sahf shlb lods pushf mov int addl divb icebp loop push mov sub call adc xchg sub pop movsl sub jbe xor xchg imul sub dec shrl andb test and adc enter (bad) pop lcall enter add loope rolb xchg std pop (bad) sub jne push js mov jecxz rclb bound sub rcrl adc pop sti rcll pop imul xor nop test movsb dec cmpsl das xchg mov sub mov inc stc push jle test (bad) cs sbb test push sbb sahf sub and and xorb sub push mov test pop mov dec movsl psubsw sub or cltd cmp arpl fsubrp lcall fstpl mov mov fisub xor push pop fsubs sarb adc fcmovu cmp insb mov adc sbb repz pop sahf loopne mov (bad) out mov sub fldt jb rcll push gs cld sti xchg push mov dec jecxz dec cltd or and mov mov hlt jae cmp sub ffree cmp loop scas std xor sbb aam sahf cmpsl lods sub repnz ret mov dec sub sub jne dec test clc ret mov data16 xchg pop push push or push scas addr16 sbb and adc cmp xor push cs mov push pop (bad) in add outsb sub fdivs (bad) ss aam loope sar xor xor cmp shrb clc ljmp or push push jge (bad) lock lods inc outsb lcall orl cli popa (bad) sbb or mov stc das pop push je jl stc clc lahf and inc daa data16 ds decl sub daa xor ret inc pop push cmp push rcrb mov in (bad) jmp jo push jb loopne rcrb xor sub daa loop popa movsb adc push push add out cmpsb mov or hlt int3 aad outsl leave push adc test mov jno mov and into sub sub cmpsb jnp rorl (bad) and jne inc xchg sbb add xor int mov jae adc aaa adc leave xchg mov std cs adc inc sub stos add xor (bad) cmpsl xchg imul (bad) or inc mov xchg and cmp (bad) xor or ror aam xchg push jp push cli xlat push flds cmp loopne push int mov or fstl enter mov (bad) fildl sbb push or daa cmc mov imul lock xchg dec leave sbb push xchg out pop ja jp enter push inc xchg fwait push lods push bound mov lea fs add xchg push mov push test cmp mov aad cmpsb shr jb push inc mov adc stos iret pop and rorl out xchg xchg (bad) xor mov leave sub jb data16 jb,pn jnp leave fisubl sbb push out adc pop faddl mov dec mov movsl repnz ja scas pop es aas cmpsb out mov mov enter int addr16 push sub (bad) insb out ror inc cmpsl push and adc cmp lahf and neg mov in dec test leave es pop sbb push test inc leave fidivl xor fwait mov xchg xchg lahf std pushf dec sub int in jo ficompl enter pop std dec (bad) cmpsb std inc (bad) insl xor movsl and sbb push push sti xchg fmul (bad) adcl fwait adc fistpll xor std enter (bad) gs ds sub dec mov loopne,pn adc or std es inc xchg cmc and addr16 rcl push mov lds addr16 add mov cli (bad) fadd (bad) pop cmp js inc and push nop mov or jp bound sti into out les daa (bad) nop mov push adc mov sub xor or mull repnz push mov pop lods sbb sub xlat mov (bad) jo xchg imul cmp mov sti pop sub xchg inc xor pushl orl sub jnp loop inc test (bad) adc mov shr lcall add pop fimull sub leave (bad) cmp pop in mov jbe sbb in cmc or cs stos inc add lcall ja mov mov std popa jmp jnp ja mov stc jle sub xchg inc xchg add mov push cmpsl inc dec lahf loope sub pusha icebp push idiv ja aad jl cmp cmp inc sub fiaddl vhaddpd icebp sub xchg mov in test or cs sbb dec (bad) sub pushf stos scas push loopne scas (bad) xor lods pop test mov and or or cmc fisubr mov sub xchg out jnp ret add sbb icebp daa data16 fldt pop cmovge or shrb sbb les into sub pop sti sub mov jge js sbb rorl mov lods in loopne add dec (bad) std rcl test enter ret sub subb cmp pop add sbb pop sub jge js repz pop outsl scas sub fs inc inc ljmp pusha cmpsb and and out adc jmp sub jp test mov jb out (bad) sub mov insb enter inc cmpsl movsl movsb sub push xor jae mov cmp (bad) bnd sub cmpsl js xchg or ret pop xlat cmc ss adc mov lret ja xchg mov leave mov jo inc mov inc ljmp outsl dec flds jo test dec cmp shl jbe out inc sbb outsl inc xchg pop dec fwait icebp mov leave sub dec xor and mov fistpll cmp jg inc movsb ljmp fstps jbe mov push sub adc ja in fistp push pusha pop daa cmp (bad) mov xchg ficomp xchg sub pusha xchg dec fidivl adc fldcw dec imul xor sub xchg pop mov enter ret cmpl inc add (bad) mov pop in and jg push icebp arpl cmp jle xlat ret push mov dec fisub dec cld ss inc jns cmpsl addr16 (bad) jo sar scas xor inc cmp pop fwait sub and inc (bad) push (bad) cli push add sub and pop sbb dec sub clc mov pop jns sub or leave je rol adc sbb ss mov xchg bound test sbb mov jl inc test (bad) jge daa fistp mov sub movsl xor test inc push add xor stos cmp add adc cmpsl push sbb mov daa imul xor mov inc dec pushf subb inc add in (bad) pop repz mov test mov cltd xchg jbe arpl ret jo stos loopne bound sub mov inc stos (bad) scas adc push sbb lret mov inc das mov jns addr16 sub dec movsb sub add js mov sub sbbl aas add jae sub fwait pop dec cmp lods xor sub (bad) lea pop xor test sub in inc cmpsl adc push lahf lret pop popa and daa dec inc stos (bad) mov add loop sbb mov ds adc xchg lret xchg cmp insl xor ss cmp int cmc cmp mov xchg push sub fs enter push cltd push mov cmpsb dec scas sub add jb imull aas sub cmpsl jmp pop sub cmp and cltd xchg push sub mov adc ja cltd test inc inc adc dec fiaddl les repz aas rcrb popf mov or dec ss test cwtl out cltd sbb inc out mov and sub fcmove lods fistpll addl sub cwtl ficompl lea dec xor xor mov loop cltd cmpb pop jl in pop pop loope pop sub mov inc in sub mov xor mov lock cs sahf movsl pop pop sub jo ss adc cld ss cmpsb xchg sub stos xchg bound xor jmp pop arpl mov mov jae mov cltd mov or cmp xlat out fisubrl and push dec imull mov out sub push pop (bad) icebp lock cmpsl push jne inc sub jo pop clc fwait xor pop sub push inc ja inc cmp dec xor lds arpl xchg out push sub mov jns outsl daa cmp jle mov jo faddl ss mov or enter ret loope mov xchg sub mov sub fidivrl stos sub scas pop iret add mov pop sub pop pop jo push cltd pusha jge andb repz std cli xor cmp add out jns cmpsb lds pop jmp sub clc out cwtl loop or sub test sub mov cmp pop scas in mov sub dec lret xor cmpsb shrb pop adc (bad) sub int3 cmp out aaa sub sbb inc mov cmpsl or repz jp and sub (bad) pop sbb adc push sub fs xchg sub clc push xchg out popf mov (bad) repnz or adc push pop and sub mov pop mov jge popa push ljmp insb push (bad) lods sub in out jno cs add (bad) push jl sub add cs mov pusha jnp adc sbb lahf cli push xchg push test test mov mov cmp repz sub sbb sub js cmp cmpsl (bad) sub scas inc addr16 (bad) addr16 push out jae mov xor xor ja lcall adc adc pop jp cltd adc test dec inc mov pop mov pop cmp (bad) pop cmp sbb push xchg in clc loope cmp cmp rsm inc in sub insb xor and and lods sbb aaa cltd inc fldt inc arpl xchg cs lret hlt fstps dec dec add stc cmpsb das mov inc jbe xchg pusha push scas jo adc sub inc or test hlt sub jp out sahf push repz shll fisubrl (bad) cli push xchg insl push lds dec jle sbb cmpsl bound xchg scas (bad) aaa sub hlt push mov or mov call dec movsl xor adc sub xor out mov mov mov push xchg or stc imul rcr sub stos (bad) pushf sbb and pop sub clc mov xchg jle mov mov scas inc or sti out dec daa jg inc popf ss inc jno xchg jle test xchg popf sub hlt mov pop stos push mov sub cmovne cmp dec pusha sti lock sub (bad) ss inc or mov scas dec xor and fwait pop sub jb push jp jp or dec cmp add lds jge sub dec xchg mov push in daa (bad) shrl fwait test int dec ret lcall add adc (bad) sub and jecxz mov int movsl xor jns shl mov insb (bad) sbb adc dec or xchg cmpsb mov cmc inc mov hlt decl in je lods sub sti (bad) loope cmpsb (bad) inc sub aaa add ret cld sub stos fdiv (bad) xor rolb lods jne lahf inc jmp pop inc and mov (bad) or or sub cmp (bad) dec sub repz in mov xchg xor sbb and clc ret movsb xor cmp daa push daa and mov dec sub and xchg xor mov fisubr scas inc aaa dec ret pop adcb mov out jb (bad) call pop fbstp pop xchg popa push (bad) cmpsb and lock lds fistpl sub xchg out xor or mov cmpsb popa mov jge cmp lcall aad and imul je cmp adc xor sub xorl jge and jmp decb dec sub xor cli cmpsb cmp decb adc call push xchg inc xor (bad) dec in fs and pop and jno adc cmpsl movsb push dec int3 jb fbld dec inc fistpl fwait jp push and sub (bad) or inc xor subl mov cmp rorb lcall jge in sub imul int xor (bad) xor cli std lods (bad) sbb in sbb cmpsb popa xlat sub sbb imul cmpb out jecxz idiv push roll ret popf dec pop jg dec sti test std ja out hlt imul mov popa inc cmp cmp add cmp das pop cld dec mov sub dec insb cli pop mov ja jmp add (bad) mov lds std xor xchg (bad) mov xor je cmp scas jmp cwtl sub loopne adc push popa dec fwait jne cmpsb (bad) sub or xor ret out (bad) test mov push fstpl movaps fninit (bad) xor lds push cmp ror stc cs xor or in (bad) fcompl sub loop pop sub clc jb ljmp scas sub js (bad) xor xchg pop shl inc mov movsl push popf add dec mov imul push popa sub or addr16 stos mov jbe push sub fidivr sbb inc sub (bad) out sub sub mov jo mov mov sub jp push dec sub sbb sbb hlt incb repz cmp sbb cs hlt cltd adc fimull lods outsl daa lahf mov xchg scas iret (bad) sub pop leave dec hlt popa push cwtl bound ret (bad) push in mov pusha cmp shr imul sbb cs fwait orl mov xchg daa lds push or mov stos popf cmp mov in xchg jge xor fdivs out or loope push jno sub pushf push cli pop pop test push add int3 xchg repnz (bad) ja jb xor mov lea in hlt jnp lock xchg or pop and fadds add iret jg pop aad sbb sarb pop in lds aas sub mov popf (bad) jno cmp rcll mov cltd cmpsb sahf test and inc stos mov loopne or jne fs sbb (bad) adc mov add clc loop cmp push push mov aaa xchg dec push movsl sbb in ja cld xor pop mov ss lds mov fs inc push iret jo lods mov cmp push mov (bad) lahf pop orb out ljmp dec js xchg test inc sub ja mov stos sub jbe pop int sub push bound push mov jno jg (bad) or xchg mov fs pop leave mov movsb jp push cmc or lods inc mov push mov jns mov and pop aaa fimul jp inc pop in mov sahf cmp stc mov add es stc sarl rorl jl mov stos shrl pop (bad) pop push sub outsl outsb nop jnp pop dec mov les loopne sahf add rorb and call pushf lea jb pusha pushl ret call jmp cmc pusha cmc cmp pushl lea jae stc rcl ror mov neg sub btc mov sbb mov setae mov pusha xor clc mov repnz push call bswap mov pusha not lea call ja mov xchg in sbb fadd jmp rorl inc jle adc je mov aas cltd (bad) dec flds push bound outsl shlb dec nop adc pushf mov sbb mov imul rcl jae and adc pop pop inc sbbl insb jb cmpsl mov rolb jnp stos pop orl mov sbb adc inc stos xchg (bad) stos test jne push cmpsb pop adcl pop pop lahf test jecxz dec (bad) mov jle cmp jge cmpsb test adc nop out mov lret rdtsc or cs ret (bad) (bad) xchg not mov xor xor andb mov mov int xchg xchg lret add pop sub fisub xchg jle mov std xchg push stos cmc gs mov mov mov fsub xor mov gs pop mov push add pop mov adc (bad) (bad) outsb lock pop mov insl xor aaa mov mov push pop es mov in cld mov jns loope dec xlat out andl adc pop rcl movsl mov cmpsl mov xor idiv out je inc (bad) aaa and test test cmp add jl (bad) arpl sbb ja movsl jp mov scas scas lock jae (bad) jae sub lock mov adc pushf pusha pushf pushl ret add pusha mov pusha lea jne pushf pushfw popw setns mov jmp and dec divb repz or (bad) jmp and add jno mov sarl loopne xlat flds xor dec movsl pusha cli movsb (bad) mov xor (bad) mov sbb gs loop lods pop out in insl adc jo jge jns cmpsb fldl2t sbb clc add or jecxz (bad) xchg jne enter nop jne push cmpsb roll inc sbb inc inc imul adc sbb xchg call pop aad jns push jno and cmp jg hlt gs (bad) lods xchg insl cwtl pop js jo inc cmpsb cmp and push dec fldenv mov mov mov les adc and xor mov mov shll xor fisub lods jno ljmp pop mov call aaa popa (bad) adc xor out xchg (bad) or cwtl inc aas sbbl bound clc data16 xor loopne mov loope sub movsb push inc js (bad) mov or jno (bad) mov push call cmp mov sub add daa push pop (bad) inc insl mov icebp dec notb cmpsb dec test les sub rorl dec mov jae or mov push ljmp lods imulb sti fcoml mov fchs incb mov sbbl mov fidivl mov pusha pushf call pushf mov mov xor xchg imul mov push xlat out xchg sbb sbb pusha cbtw pop stos mov out lock mov xchg test mov add iret lar testl dec inc mov and mov push lea jmp push push test xchg pushl test mov stc mov test test pusha xchg stc jmp jp pop jle pop pop pop jo jecxz dec pusha call or add mov sbb and add std or movsb mov fs and ljmp sbb lcall pop imul push pop cld cmp pusha (bad) push (bad) repz imul lcall adc aas add mov mov jg push ljmp pusha test data16 cmp mov dec ss into (bad) fisttpl iret push lock lds sbb (bad) aas ljmp mov movl call cmp pusha call (bad) xlat cmpsl mov fadd add repz mov std and push mov or shrl mov je inc mov jl ja pop loopne mov jg add enter xchg jge xchg lods iret scas stos mov inc cmp jge sub mov mov dec jecxz,pn dec lods sbb adc mov (bad) mov clc push lret xchg rcrl adc xchg jle ret xor and stos mov in xchg mov clc or mov (bad) xor inc cmp inc cmp push pop mov call cld ret fstpt or sets aas or sub insl sarb sbb jno,pn enter (bad) (bad) roll rorl inc cmp xchg sti cld jle cmp mov mov stc dec je pxor data16 jg sbb sbb (bad) dec mov rorb and add push (bad) jno mov xlat or es lea (bad) mov xchg inc mov mov and fistpl jmp pop popa addr16 ja push call loopne loopne andl sub scas nop jnp xorl lcall pop mov jbe dec xlat call repnz mov aam (bad) lea jb rol (bad) pop lock iret test sub mov dec into mov popf stos pop fbstp mov push mov rorl stos inc fistpll and mov or int3 xor mov mov sbb push cs add cli and xchg loope push or popa fldt cltd pop push sbb xchg cmp stc pop pusha jecxz rcrb cltd aad leave fnstcw xchg mov xchg pop idivl or jecxz adc pop icebp mov ret fdivl call or std add out pop fistpll push sub sbb jno mov pusha jmp pusha lea jae push dec mov not mov pusha push inc call adc sti mov or jp dec mov dec xor test xor cmpb je and dec mov js push arpl and roll mov cltd loop or pop imul jno push add or mov rcr dec xchg push idivl rcrl xchg sti loope cltd imul xor fisub pop xor mov xchg bound add add xlat out jecxz mov decb and lds cmp lea sbb jmp in xlat movsb fidivl ret lret lcall dec ror repz aas cmp and lds ds lret aas testl loopne mov test das add xchg or inc mov aas inc mov arpl inc cmpb insl push jb pop lahf ljmp push pushf into or dec loop cmp mov push ret push arpl push push push ss sti addr16 jb test inc lods jae or das push inc jns xchg js inc mov or call and add add pusha pushl movl mov pushl lea jmp subl mov (bad) sbb repz (bad) dec outsl punpckhwd int imul mov fsub sub lret jae pop rcrb (bad) cli repz (bad) ds push clc cmpl dec mov xchg xchg jg divb and into movsb out mov xor dec sbb lock cmp ja out jmp cli dec nop (bad) sub repnz and mov (bad) pop and inc lods adc jmp jns xchg lods cmc test pop mov js ja mov (bad) popf pop inc push mov sbb mov leave mov inc stc (bad) cmp dec repz hlt or pop xchg lods mov lahf pop lret pop add fst inc jo and fildl in out pop xchg xchg dec pop enter mov lcallw (bad) cld scas push pusha popa (bad) cwtl pop into scas inc mov push mov faddl sarb xor lds push popa out push pusha out push (bad) sbb adc aam fistpll int3 mov mov (bad) pop repz xor ljmp dec adc xchg out arpl push xlat cli mov movsb fucomi cmp dec dec xor sahf cs ss push popa mov pop fcompp sbb cmpsb fsts pop pop pop dec (bad) or (bad) in lock fiadd dec bound xlat or inc fsubs ss fistpll mov sub out push cld inc lcall mov lahf imul push mov mov xor xor das jo popf fldcw inc fucomp nop dec sub inc sar ret cs rcll adc sarl adc xchg rcll leave cmp mov sub fldt pop mov push mov sub lret fsub loopne jb shll mov stc sbb adc jns repnz xchg test xchg fistl mov cmpsl lahf lahf scas push pop imul enter mov andl mov mov push pop inc int3 push cwtl inc adc loopne pusha push test push or mov mov daa push ret (bad) mov fisubr js pop add repnz sahf mov jecxz rorl pop fldenv mov push push adc (bad) push mov rcr rcl (bad) idivl shrl aam stos je je dec push cmpb stos insl cmc leave ss sar cmp inc cmp xor sbb push or insb xor jnp pop mov mov pop or push jno mov or mov icebp fnsave push dec repnz leave shrl jp imul inc cmp and iret cmc adc rcrb movsb jnp mov test rolb repnz scas lock ss sub fistpl decl inc xchg mov (bad) or inc cmp xorb sub ficoml push (bad) cmp ret fsubrl pop les cbtw jecxz pop add (bad) jbe mov xchg jne lret rep rcll (bad) cmp repz jmp cmp loopne fdivl jno mov out pop movsb stc or pushf lea jne xor setbe mov cmp pusha test pushl or pushf lea je xchg not lea not movzwl movzbw lea call mov test push push push mov lods bound mov mov and push inc cmp pop sub lds jne pop fs in repnz frstpm(287 mov pop mov mov lds addr16 pushf push push fimull std push pop and pop mov mov sub mov lahf inc insl mov movsb cli movsb adc cmpsl js mov dec stc sbb xor aas dec outsl scas test push or outsb xor ffree xor dec hlt cmp sub movsl sbb cmp jge subl mov sbb sbb mov xchg lea movb pushf sub call sub test xor fidivrl fwait push clc addr16 std (bad) push add sbb das dec sub insb jb addl pop mov movsb fwait ja or and cmp cmc lcall push push xchg pop ror fistl sub nop (bad) xchg pop stos cwtl push scas xor scas mov dec les dec sbb cmp mov iret (bad) lahf movsb unpcklps dec xor aad xor mov loop clc (bad) push insl jo cmp sbb je push push scas jo jno mov jl mov cltd cmc call and out push insl or cmp or push dec push mov je adc adc aas js inc fucompp aad vmovupd inc ret mov jnp mov xchg dec sbb jo mov rclb add adc lods sarb dec sbb fnsave jns (bad) mov sbb jb fs pop sub push cmpsb out mov adc inc mulb sbbl lret jae rolb cmpsb pop call loopne sahf push cltd gs push and data16 lahf add mov lds mov fs or mov mov ja imul jne pop push adc dec ds push cwtl jecxz popa ds push xchg mov les (bad) fisubrl (bad) pop ret repz pusha jecxz fstl movl dec bound push hlt repz xchg scas das icebp into gs mov mov lcall pusha leave or popf pop in jb jbe and sub jno adc pop xchg mov call or xlat fnstsw lock into shrl pop sbb push inc adc leave push (bad) xor inc lret sbb rcr pop scas lsl pusha pushl jno scas pop lds (bad) in push add movsb adc pop in mov add or loope scas loop repz orl push mov (bad) adc jae and sbb test push cmp (bad) das jo sub mov frstor hlt push iret cli add les (bad) cmp push das xor cmc sub das dec out call cmpsl int jecxz clc adc add (bad) adc lcall in pop sbbb sahf std mov or inc std inc xor cs loop insb add jb mov out nop cmp jae iret iret ror mov mov add fisubl test mov pop daa cmpsb js test rorb adcl sti add sub fwait outsb shrl adc push xchg dec imul push stos jno scas cs xchg dec dec push sub pop sub ja or or arpl and (bad) repz rolb aas ljmp lock add call mov or cli test mov enter (bad) mov rorb xor psubsw in pop xchg test sbb daa aas ljmp (bad) rorb inc std (bad) ds mov mov mov out lea sub test lahf inc ret rorl dec adc sub fucom cltd (bad) sbb xlat or cld dec adc pop lods ror lret and jae test sub jmp pop movsl (bad) mov data16 cld dec mov rcrb movsl cltd imul fadd outsl cmovs aad xor call clc (bad) mov adc xchg pop mov jne push mov (bad) aam add adc xchg outsl xchg xlat lods jno mov cmp lock mov cmp loopne xlat pop mov inc add xchg test inc pop dec call or mov (bad) loopne mov mov pop cmpsl or dec adc nop test pop test xchg jg cwtl fnstenv lods call subb clc dec sub rcll lock ret (bad) jg shrb pop fsubl jnp jnp xchg inc adc inc fnstsw sub xchg cli test pop push mov cmp pop and jp and cmp insl push mov ret fsubr sbb idiv xchg jae (bad) cld mov out scas adc add hlt sbb in and dec popf jno lods cmp sbb fdivrs out dec (bad) xlat xor sarb mov or inc jle sarb lds fwait push popa fdivrp cmp (bad) test sub arpl push mov jnp pop test ljmp pop stos pop xchg outsb test inc out xchg in dec ds ret jnp pop cltd aad jb jle adc (bad) (bad) mov sbb ret push add fucomp aad out pop incb mov pop stos repnz (bad) test scas hlt ljmp jo in push shrl cmpsl mov and je les and fadds or cmc or clc dec dec push dec mov ror adc fldenv lret xor xor xor daa jl jl push leave idivb inc andl aam sbb lret ja shrb scas cwtl fwait add mov (bad) mov out dec aad (bad) cmp or mov iret jg sarb ljmp call insb pop notl je fidivl pop xchg jmp daa pop scas xor cmp out push mov sub movsb jno stos xor outsb xchg call movl pusha movl push movb lea jmp call inc pusha mov jmp cwtl mov repnz lods pushf inc pushf xchg jae push stc and xor (bad) ds and mov push and or add and fsubs out fdivrl or frstor addr16 fisubl mov ja lret adc pop push dec mov mov bound add movsb mov (bad) mov mov es mov xchg xor mov ja movl dec xor out das lret mov add call (bad) mov div in sbb pop scas xor or bound shrb std movsb sbb lsl pop jno test cmc add cmc test push add pusha push push dec jmp stc jmp call lock jmp (bad) mov ss pop test pop stos sub mov dec ret cmp test pushf add xor out pop adc pop cmp mov push lods cs lret cmp cmp cmp test (bad) ss jecxz inc pop fwait inc jecxz xchg andb repnz lret jae jmp jae lea cmp inc mov sub or je pop outsl scas ljmp cltd aam adcl cmpsb fldln2 rorl push sub dec xor inc jg adc xchg aam pop test lret shrb mov jmp shr mov sbb and sbb pop in xor mov dec lock push call sbb fstpt dec sahf or (bad) mov xor push sti mov dec lock add mov inc sub xchg xor and pop sbb xor loop cmp bound sbb cwtl xchg (bad) mov jo cli add orl (bad) xchg stos or ret cmp jo ror iret xchg pop cmp out sbb leave jne mov inc arpl lods and push mov and scas (bad) jge leave xor cmpsb sbb mov (bad) enter out sbb or in mov add inc outsb jne push jb arpl jae outsl fs gs add aad sbb pop adc jo adc out mov mov sbb jecxz or inc popf sahf cmpb sbb push jbe push into addl push sub sbbl xchg xchg xchg push out mov cmpsl aas adc cmp nop out xor out lret push aaa pop out xchg cmpsl decb push mov in mov xchg movsb sbb push into fidivl cmc pop jmp push or pop inc cmp (bad) cli lods mov inc cmp cmp in bound test les mov lds cmp (bad) stc clc inc enter and xchg jno cmpsb inc dec and or xor imul cmp or sbb ds jnp mov out mov xor mov or pop addr16 mov rolb lahf add pop aas icebp cs fisub (bad) push stos push mov sub sub pop dec mov jmp mov jns ljmp bound aad aam shl inc push inc cltd lods dec nop adc xor add cmp out loopne or repz jmp pop test dec xor cli lock (bad) out jo popf cmp jle lahf loopne in inc fsubs cmp scas pusha sahf lods mov scas pop cmpsl pop (bad) aam pop cmpsb add dec jbe fs je bswap not movzbl lea mov pusha lahf not mov pushf push lea push jmp add dec outsl arpl inc insb insb outsl arpl dec lea pushf stc adc sub lahf push add aas push cmc neg push call pushl popl pushf pushl movl pushl ret mov inc cmp (bad) stos (bad) addb lret aam pop and jo fwait xor mov xorb jle nop rcr cmpsb or xor adc mov es jg aas inc jmp sub xchg cmpsb iret adc callw add lret xor popf sahf add jnp push imul aas xlat andb scas lock pop and test stos adc and fldcw sbb xor dec pop xor cs sbbb mov sbb ret int3 js call bt bt xchg movzbl mov clc sub jmp test dec or mov fimul mov xchg xchg dec push imul mov mov clc out xor sbb xchg mov jmp popa gs xchg rcrl xchg xchg shlb pop out out cmp dec xor mov sbb sub lods xchg rorl inc add test push xchg mov inc ljmp iret mov or and pop ja cmp push sub mov inc mov lods jo (bad) lcall xchg push out fidivrl jg push add cwtl inc dec xchg pusha movsl out push cmc cwtl dec (bad) fs outsl push mov test mov fs sub mov jmp out inc jno mov bsf jne or sar mov call fnstcw int3 mov mov (bad) mov pop pop add rcr mov mov cmpb push sub xchg sbb andb (bad) enter (bad) cmp loop in clc (bad) fiaddl scas add inc paddsb xor shr cmc ljmp mov sarl mov jge stc out int jb mov mov icebp adc faddl add jb std aad pusha repz push testl add (bad) dec inc outsl mov ljmp or loope ljmp xchg cmpsb cld test inc insl jne cmpsb fmuls mov pushf xor outsl das push insb (bad) lcall (bad) cmpsl mov (bad) (bad) jno mov push inc sbb pop push shll jle mov xlat adc lds dec xor pop sbb test xchg in sub mov add mov add or push lea in inc cld jmp mov push cmp sub inc fildll xchg mov cmpsl in stos dec rcr jmp mov (bad) sbb jmp icebp mov add mov fisubrl push add hlt or rcr adc ror ror fbld call and sub jbe xchg xchg push nop test jno mov pop mov dec dec mov out sub cmc in push aaa sbb notl shrb pop imul adc adc cmc dec rorb fs loopne cmp pop aam inc push mov sbb pop lds fucomip add pop cmp or pop mov xor mov sub popf inc push lock movsb cmp lods xor rclb insl fcmove fiaddl jp (bad) sub ljmp add mov cld or mov or pop movsl jns test jb cmc sub cs sub fsubs adc jo jno mov lea jb pushf cmp pusha push lea jae shrd stc bswap bts mov or pusha add mov pushf mov cmp jmp jbe inc pop inc lret je (bad) mov or movsb sti dec xchg popf mov push mov (bad) mov mov xchg jno outsl xchg xchg xchg mov out cld mov mov int cmp in sbb sbb mov (bad) cmp negl fucom repnz int3 push fisttpl aad in dec hlt and and adc stos jmp into jecxz push les repnz and rorl in inc jl lods pop out fidiv adc lds inc aas rorl jno mov jmp (bad) (bad) cmp (bad) push pop loop add cmp adc pop push mov test outsl stc cmpsb (bad) (bad) jb adc mov push lods or and setae ss ljmp pop lret and out fsub fisub mov popa xchg dec push es cli in cmp sub aas lods xor pop das xor inc pushf mov cmpsl xchg in cmpsb stc (bad) (bad) inc lret or jno lahf xchg clc stos mov or push pushl lea jne movzbl mov test pusha stc stc or jmp movw lea je clc test add clc cmp pusha pushf jmp push xor int3 int3 fcmove notl jmp jo push dec movsb popa pop dec push push xor lea inc std in icebp xor inc push push adc subl inc add jp repnz mov xor xchg sub in or push stos mov sbb mov outsl push add and push mov lea mov jb jp jg mov mov pop clc inc in xor pop adc ret pop lahf push mov dec je call jecxz cmpsb sbb cld divb scas push xchg inc popf and mov cmp xor cmp aaa test addr16 lahf cmp dec xor mov cmp in loope jmp pop cld push in dec mov outsb or in out mov push push addl fstl in rolb mov scas adc add cmp imul pop sahf push cmp add and jge jmp add test out ss insb cld arpl cmp jle rolb and addr16 sahf inc jb adc dec dec push add scas sbb xchg dec jnp sbb repnz cltd insb rcrl add sbb stc jecxz inc xchg inc jg nop movsl add dec daa ja pop jno out jno popf and mov test cmp call sub adc and sbb fcoms dec xchg pop stos xchg int3 mov xlat xor sbb int3 push adc sub fnstcw fidivl push push mov mov in fnstcw mov push loopne (bad) fildl xor cmpsb adc seta jg adc jmp sub cmpsb int3 mov push cmp sbb xor jge or popf loope mov xchg xor cwtl inc push lcall int int push dec or push lods jae dec jle icebp lods popa popf lods jno popf sub or sbb pop xor jae outsb fld mov mov push push and movsl cmp mov (bad) test fldl les (bad) fnstcw xor in sbb add lret sub push xor fwait dec sti xchg js (bad) mov xchg imul jmp sbb aam push enter xor jge jbe enter push push test xchg sbb in push xchg neg es loop mov add fs cmp sahf xchg sub pop loop loope loopne add inc push fisub cltd out and xor xor or dec nop outsb sub mov sub add inc pop jne pop pushf popf repnz sub out test inc fdivl add sbb dec mov mov bound ljmp in outsb ds jmp jbe lret or mov mov add nop sbb sbb mov xchg (bad) jbe jmp cmp dec fildl decb daa jne (bad) dec adc in xlat out cmp sbb sbb xchg xor push (bad) fdivrl popa rsqrtps dec dec jno xchg test adc sub stc adc add or mull push (bad) pavgw sbbb nop pop sbb lods pop mov retw fwait sub sbb jne xchg push push jno fwait sub lea je jmp mov cmpsl xlat sbb int3 jl sbb fadd cmpl xlat pop pop jmp mov sub jns stos mov sbb push (bad) pusha xchg test jo sbb inc fistpl cmp scas das adc inc xchg (bad) or pusha out mov orl repz aad insb jb ret pop inc pop nop dec pop pop xchg movsl jp gs xor rcl jmp shrb in outsb lock adc ljmp jbe popf and or xor jl out mov push mov xor icebp mov jne insb (bad) mov cmpsl test (bad) or push test sub cmp jns cld adc gs loopne jb push dec lock dec aam push outsb jle hlt lret incb mov or sbb and dec jmp sbb add mov jge repz push lock pusha call xlat adc inc add call cmpsb fdivrl clc iret cltd inc notl dec test pop stos xchg add ja stos fistp lret imul hlt ljmp mov jmp xor cltd fbstp sbb mov imul xchg or movsb fidivrl xchg int3 xlat je jns js push add ret loopnew lock (bad) jg (bad) dec add or out push sub popf lods mov dec adc mov rcrb xor jne xchg (bad) call lcall sub popf cli test shlb fisubrl arpl mov jns jle and mov fnstcw xchg jne cmp and cmp jg jb fistpl (bad) and cmp lahf faddl push cltd xor cli jno cwtl sbb jle sub push cmp js sarb mov (bad) adc addl push daa cmp inc push cli inc int3 mov popa push or add ss rcl cmp jge movsl cli jbe or repnz dec pop fwait inc lret jp pop or mov in icebp fcmove cmp stos mov mov cmpl loope dec jge xchg je ja rcrl arpl outsb jo pop push inc fistl paddb and pop jp sub dec dec push lahf data16 jb mov (bad) loop push lods mov mov dec inc das (bad) or je stos sarl fldenv and faddl addr16 jb dec incb inc fwait mov in jb (bad) mov mov inc cmp adcl fs push xor pushf outsl (bad) push int3 pop add clc or jbe out test inc cmp or lea or jnp mov sahf pusha jo xchg stc in enter mov outsb mov fucomip (bad) or and sbbb fimull mov jne pop xchg dec in push pop js pop (bad) jle add enter xor mov movsl out test mov movsb popa sbb push aam dec je js jno xchg pop jo and jmp push pushf mov movl mov pushf jmp mov ror (bad) out pop sub push inc cmp pop cmpsl sbb loopne mov lds cmpsb nop scas out jp cmp scas cmp repz ret sahf test fdiv gs push xchg repz push rolb (bad) loope cs stos and jbe jg xchg lret loop push mov xor (bad) jg cmpsl cwtl out (bad) es pop (bad) xor add cmc sub rcr push or shld bt mov (bad) repnz pusha mov movsbl jmp xchg btc clc mov cmp stc cmc clc sub call jmp lea je push call pushf movl call cmp mov and mov mov lods stos aad lea popa call int3 push test shl mov mov cmpl cmp xor cmp jbe insl les xchg cmpsb or sbb mov out add and sbb push pop inc push push ljmp gs mov (bad) jae imulb cs push push icebp insl mov xchg imul leave xchg mov mov mov pushf mov not pop pushf pushl ret call mov repnz into inc pop mov in stos popf (bad) jb shr pop mov dec jno sarb sbbl dec imull jge (bad) (bad) xor push cmp and je insb into mov push arpl push cmp xchg out pop dec mov pop divl xor sbb fidivl mov pusha mov out clc es orl pop sbb in mov cld imul adc push cwtl movb mov fistp add testb xor pop jle ds gs (bad) aad xor mov mov jno xchg out cmpsb mov repnz pushl jg xchg movups adc dec push and xlat mov cmp cmp and xchg dec adc sbb inc out int3 jg pop loopne outsl dec nop pop add adc jo mulb lds notl push jns jo shlb inc fstpl ja adc xchg cmp push std push mov push jns stos adc jmp outsb push dec or and xor cltd cmpsb mov sahf aam sbb inc fucomp xor repz jns movsb ficom fnstenv popf and (bad) cld lea push rorl pop leave pop shrb imul cmp adc jecxz jmp sti xchg or ret (bad) jno xchg add ss sbb fucomp push lods lahf mov pop out push cltd shll (bad) repnz sbbl mov jnp lahf fsubl (bad) push fnstcw leave std dec mov repnz imul pop pusha test fmull mov imul mov xchg lcall mov xchg inc adc jo pop push mov jae out loopne fldenv (bad) or mov or cmp and sub fstl sbb pop (bad) and xor pop xchg addr16 pop mov push sub out xchg imulb mov push test sbb notl ret sbb imul js fadd test inc std inc insb flds mov mov sbb out outsl xor inc xchg or cmp xchg xor jno pop js push mov sbb xchg jle imul dec push push test inc xor dec pop mul mov mov push (bad) pop outsl mov pop cltd mov (bad) xchg out in mov (bad) lahf inc sti mov lods shrb mov inc sbb cmp jg pop xchg pop ss sub (bad) and add cmc pusha pusha cmp cmp movb lea ja push pushf add add add xor setns neg inc mov push cmp pusha jmp jmp jno inc adc push xchg nop iret push mov mov xchg js aad mov sbb push arpl jns fwait and push mov in imul stos cwtl (bad) out imul gs xchg push int aam stc adc loop adc and (bad) fcomp lahf std (bad) inc sahf adc ljmp xlat mov push lods push aam test shrl (bad) pop fadds cmp ss (bad) (bad) jmp push into gs mov xchg cmc test sub jne mov mov or adc or (bad) in sbb je mov sub pop cli inc sub jno xchg sub inc stc or call mov mov rorl dec aad fxam jb mov sub sbb pushf inc scas push push pop in lret jl mov sub in fucom dec xchg sbb pushf inc push or bnd and ret repnz rorb dec cmp pop sub mov gs mov in adc lret fcmovnu out ljmp loopne push cmpsl ja xchg (bad) (bad) test cltd fldenv xchg xor cmp (bad) fdivr pxor inc jl loopne jno cmpl pop stos sbb enter mov inc cmp dec pop sbb adc jb (bad) jge jmp (bad) (bad) xlat enter jns test add cmp mov jne test inc aad pop leave jne loopne xor sbb add cld arpl (bad) pop lds jp adcl pop xchg push jge pop push imul dec ljmp cmp push and xor movsb sbb loopne les into adc add dec xchg sbb scas jae add imul sub enter mov icebp xor int xor fidivl sbb inc sub mov test daa xchg fildl mov mov and cmc jg gs xchg dec faddl sarb push push push dec aaa es dec sahf jne adc push pop sub jo (bad) cltd push pushf add push xchg inc push adc popl pop adc cmp add fidivl repnz jo cwtl fisttpl loop fucomi mov jge cmp fnsave sub jb cwtl inc rcrl fnstcw and insl push jo cmp and sub fwait movsb jnp js repz jmp out mov pop (bad) xlat outsb rclb mov inc ret fnsave xor (bad) or dec mov add (bad) cmp sub iret iret mov mov xchg xlat cmp aad inc add xchg or pop lods push sub mov mov inc fcomps lock movsl jne pop dec xchg mov or sub jno lea mov dec cmpsl cmp xchg aad fucomip mov jl mov adc xlat cmpsl dec scas loopne aaa into clc (bad) sbb cld push push mov pop jge add cmp cmp (bad) xlat dec xchg add cmc cmp gs mov ja jo xchg aam out (bad) cmc leave sbb jne add xchg (bad) jg outsl xchg mov add jmp jecxz dec mov (bad) xlat cltd (bad) scas aas inc fstpt (bad) lock in pop lea popa jecxz pushf pushf mov pushf movb push pushf pushl ret pusha pushf lea ja sub sub sub shrd mov rcl add neg mov sub bt cmp mov jmp jno dec xor or fwait add mov stc and aad imul repnz (bad) enter data16 sbbl nop cli gs test xor pusha inc mov lahf aas negl dec push and push add sbb mov shr cld loop out pcmpgtb cmp fs sahf pusha arpl xor fucomp aas add out mov xchg xor clc mov cld mov jo bound pop enter adc aaa pop pop aas add mov lds cmp test xor push outsb xor inc int3 jae sbb ret (bad) sbb sti in subl test cmc sub sub (bad) mov jl mov js out in or fnsave incl mov pop sub cld cmpl mov js int3 ret mov test dec sti xor or sub cmp push fbld inc cmp push lods imul popa dec scas xor sub mov in push lcall lds sbb cmp jge imul fwait scas mov jno mov outsb mov add je gs imul cmp call jmp cwtl dec jae jle jno cmp int mov (bad) ss cld and push push mov mov ret scas lock (bad) mov enter inc cld rep cmp ljmp mov sti and dec or cld insb repz ret je jo in mov mov outsl xchg js mov cltd pop sbb jns test pop addr16 nop das jae lcall (bad) sbb xor mov loope push dec rcrb push or test mov mov xor mov inc sub lock lea sbb (bad) imul hlt stos xlat xchg adc xor mov or push jno (bad) aas cmp fisubl nop jmp icebp pop ss and (bad) mov rcl mov out pop daa cmpl sti mov cs mov mov popa loop daa mov test fcoml mov (bad) shl shl enter mov adc fistp sub cmc adc sub inc cmpb push daa push jno adc jp pop mov inc xorl popl aam imul jmp cmp or adc sub mov mov xchg xlat test cmpsb bound leave jl xor push cmp mov in xor pop sti cmp cmp mov cwtl data16 push inc xor pop xchg sub out sub aaa push ss inc and jg movsb mov push jmp add xor add push aaa dec scas inc outsb xor and inc repz cmp repnz aad test (bad) push or int3 pop pop sub pop lahf leave mov inc (bad) sub xchg lcall imul popa cmp addr16 daa mov cmp sub out inc sahf push pop aas dec addr16 leave cmpsl xor call push movsb out mov push sti mov imul loopne jmp aas mov sti xchg cmc jae jns bound pop add mov inc inc mov cs data16 daa mov (bad) call out popf leave adc xchg popw push hlt inc mov paddusb mov jp sbb fs mov xor (bad) mov or loop dec inc fidivrl push pop adc cmp insl imul jne sub dec jg (bad) leave add dec addps outsl test adc aad rclb jno sub push jb xorl ss fs jb insl std push sub jae dec out stc outsb leave (bad) mov push cmp push and dec (bad) xlat (bad) cwtl lds or jmp stos in sub mov push (bad) sbb in outsb sbb jle sub aaa jae jle cld jle mov rclb daa mov pusha in xchg xor xor fdiv mov sbb sub pop fwait dec jg sub push xor (bad) push jge lahf stos out mov call stc sub cmpsb push enter or mov add fdiv lret inc cltd insb sbb mov sub data16 sub (bad) aaa pusha add stos push outsl divb sti and push addr16 jg pop rclb lds adc aad fiadd fsubrp lret jnp negl daa ljmp pop sti lret insb ja push and mov in js mov loope push fmulp fldt dec push jnp dec xlat mov cmp xchg mov scas pop stos xor in mov adcb sbbb inc push repnz iret scas ss cs dec pop sub scas or xor rol aam scas cmpl mov and movsl (bad) xor add dec push jbe inc mov mov cmpsl jmp in aaa pop shrl add mov xchg dec iret xor pop stos iret adc mov xchg in cmp (bad) orl cltd pop pop bound loopne aas aad pop lret sbb xor iret dec push cmpsb test xchg scas mov fsin test jb out leave mov cmc imul cld mov mov pop jg cmpsl or inc cmc clc fistp jmp lock push sahf leave scas lret inc lret mov (bad) sub sbb js fisubr test cmp stos lea daa lret and jecxz mov imul jne,pn xlat cmp push jbe mov mov mov imul out (bad) test cmp inc js mov sti inc stos dec or cmp jo mov jo xor sub sub in or pop jb cmp mov cmpsb and mov mov addl sub cmp pusha fidivr xchg inc and inc aas jo addr16 xchg dec stos idivb bnd scas divb divl sub jle shll dec xor cmp jmp mov jp mov dec test dec cmp mov lcall (bad) imul and shrl inc mov nop mov scas ja pop (bad) mov stos imul ds push cmp mov jae cmp xor and push xor pusha inc xchg fcmovbe cmp fdivrs out popa xchg jg out push js jb test leave lcall cmp das inc inc inc (bad) mov cwtl cmp outsl leave imul ss aaa mov loopne ja notb inc mov dec sahf mov push setbe push dec inc cmp (bad) dec lods and mov out mov mov int3 fbstp divl neg lahf pop iret inc movl insb fsubrp ds ljmp int xchg movl jg and (bad) pop xchg leave or pop imul pop in ljmp cmc jle jb aam pop cmpsl xlat leave sbb lods add inc (bad) hlt push scas fimull inc mov xchg fcmove rolb dec clc inc mov dec mov adc add sub mov in mov out cmp push mov mov out sti and add addr16 dec fsubrl and jb,pn xchg push push xor jmp mov inc push fstps inc dec xchg mov pop popa mov jp les int rcl outsl mov inc test lahf stos jnp imul addl repz ds or mov mov scas xor mov cmp add sub pop inc test and push jp sti push fsubrs lods pop push mov loopne mov mov xchg enter jp repnz aad push xchg mov aas out mov adc shrl pop cmpsl stos or aas pop inc cmpsl xchg jg stos (bad) arpl push add (bad) and loope inc dec popa neg out je scas pop or cmp (bad) mov aas cs out adc dec (bad) out nop (bad) leave pop aaa mov test mull sub jae lea push ret fisub mov xchg jg ss cli dec inc or cmp movsl lds xor pop cmp xchg or and scas dec (bad) jne int lret push pop mov pop leave lods enter arpl pop or xchg popf jg push (bad) imul leave clc cmp push sub add inc scas clc and pop imul xchg mov jb pop dec sub pop pop sub pop jl dec dec cmpsb jp pop push xchg sub xchg jbe popa sahf cmpsb mov mov cmc test sub push push push jp cs cmp add cltd push pop dec or pop mov sar inc daa push add jb push mov xchg sarl leave movsb xorl xlat sub push pop or sub dec pop pop cmp leave cmp fistpll cmpsb lret outsb cli es jmp push ja addl (bad) enter cmpsl push push es cmp leave movl aaa aad cmp inc mov mov cmp (bad) pop push mov or mov dec popf adc sahf dec outsb repnz sahf (bad) (bad) mov pop dec loop lock out mov cmp insl push fwait jle mov leave inc jmp imul insb aaa jae movsb arpl int3 pop ficompl clc andb jecxz inc imull (bad) jae pop repnz push clc cmp or sbb jno scas pop cld push stos sub or das adc scas into pop out push ror das cmpsb ss mov movl mov inc mov add and into or loopne fistp ss fwait sbb jg iret or arpl push (bad) fimull mov lock mov mov cmp test cmp adc imul push push mov outsl scas jbe push mov and inc mov cmc aam insb or or and (bad) mov outsl mov xchg pop ds push lahf inc loope push xor cmp push stos notl lahf push push fistl cmp or push stos lods int (bad) icebp out cmpsl pop leave rclb lcall mov push mov cmp inc jg outsb push fwait leave mov dec push addr16 punpckhdq icebp into ljmp and int cmp dec imul mov daa (bad) cli std pop sbb dec dec call aas push mov lods mov cmp xor imul push stos xchg xor push xor jg lahf int3 ss xor mov pusha movsb mov push into sbb cwtl inc dec inc dec cmpsl inc dec cmpsb sbb xchg scas mov jp push (bad) or push loopne xor dec dec inc (bad) push idivb addr16 xor xor dec pushf cmp shll imul (bad) adc cmp out xchg unpcklps outsl or addr16 int3 divb scas add cmp pop iret add add gs daa ja,pt cmp js mov mov andl enter sub add xor push push cld push (bad) shrb sub adc aaa xor int3 cmp dec inc jbe rcrb sbb into pushf dec push jp pop push sub mull dec outsl lret push int3 ret and fcmove int3 jmp sahf xor push mov aam dec (bad) cwtl pop lock das bound (bad) iretw (bad) xchg adc fdivrp jp jl hlt adc mov dec mov inc inc int cmp sbb outsb sbb movsb push leave movsl mov and jb ret push mov mov jo enter loop mov push dec fcomps insl arpl aam jp and fidivl daa jecxz or mov pop dec pop pop inc xor push mov out mov leave scas mov dec push jb testb jns inc (bad) aad (bad) negb stos daa xchg test jb xchg jnp mov push out lods js test xchg cmp enter sub repnz adc stos ljmp ficompl push movhps mov push pop mov mov mov sub outsl xor push outsl dec xor jp cmp shlb mov jno (bad) mov scas dec (bad) xor sub and adcl (bad) dec mov ficom (bad) fsubr mov (bad) xchg test mov cmp sub mull mov jne cltd cmc (bad) mov dec mov into mulb adc inc cmp sbb js (bad) ljmp sub jae lret push pop dec cmp mov cmpsb (bad) cmp ja fstps mov push scas push mov adc test dec dec mov mov sarb stos mov cmp cmpsb aas stc adc jbe daa test test cmp xchg sti ss mov cmpsb scas in pop sahf cmp mov iret arpl out imul push leave mov fmulp and xor ds push or cmp inc pop inc bnd and xor fadd mov ss out iret sub int3 outsl xchg mov jp push insb (bad) out pop movb add into ret mov imul (bad) jo leave mov pop push popa push movsb lock prefetcht1 inc dec (bad) mov cmp xchg enter dec mov pop outsb mov (bad) cmc pop mov int3 pop sub inc xor stos or dec sbb push js dec add push jo mov inc pop test idivl je je mov add ljmp inc xor xchg stos cld out aas fisubl in fcomip mov lcall aam xlat loopne add sbb jmp fldenv mov sbb iret xchg jp (bad) push push ret adc ret das cmpb scas movsb ds fidivrl js dec xchg sub push push popl mov mov xchg dec push dec add push dec push cmp push mov push sub stc das xlat lock ljmp imul ret nop aas lret mov leave aad jnp mov mul sub push xor mov dec mov iret (bad) fcompp roll lea in imul jg jl push mov dec push xchg int cmp pop sub cld out leave cmpsb icebp jo jp dec inc add dec add int3 pop pop sbb mov or mov jge xchg mov pushf lods dec mov aaa push jae pop mov push push mov xchg or fwait out push icebp push sbb aas push js cwtl andl mov jmp repnz dec add add mov imul das sbb in jne aad inc aad jae sbb inc xchg xchg clc push and inc mov and ja in in test mov xor das xor cmp mov xchg outsl dec add (bad) or dec push cmp push and dec xchg push repnz (bad) mov push add loopne sub cwtl ret ret xor xor ja cmp dec xor jecxz xor mov cmp daa dec adc cmp or inc insb jnp push sub enter cwtl movsb and es sub jno add xchg mov xchg dec push (bad) cmpsl pop adc push shrb jp scas jae bound adc push xor sbb push arpl cmp std adc dec arpl pop mov inc push xchg pop stos add fs push push leave mov aas lds leave mov outsl pop mov bound stc in jbe icebp and (bad) and rorl inc or push stos xor ja in sub sub jmp scas jl inc loop jnp mov inc xchg jnp enter xchg dec mov dec imul dec rcr cmp popf (bad) stc ret inc xchg mov cltd rclb sub (bad) mov arpl fdivl loopne mov mov pop fstps inc sbb pop cmp mov cmp push jno std repnz add sbb inc pop push pushf xchg mov out cmc jae sbb sbb jb fwait jecxz jp mov aaa stc sbb lea sbb cs inc test stc dec stos mov dec outsb leave stos adc mov aam dec lret mov cmp adc (bad) lea mov xchg pop sbb push mov jo sti jbe aad outsl mov cmpsb (bad) xor ds stos scas js or sub mov test add imul lahf leave pop imul adc inc jae test (bad) outsb mov hlt xorl popf mov mov dec mov stc aaa fld or adc es cmpsl (bad) outsb leave jns push test lock cmpsl or dec push pop mov and idivl scas push jbe (bad) pop sub or xchg jae push add sub cmp sbb and pop mov sti cmpsl xchg test mov aas int aam out cmp fdivrs jle fisubr scas jg xor pop cmp clc insb test cmp (bad) ja xchg sahf lahf dec jae mov cmp shrb and dec mov scas sbb dec cmp jae mov xchg mov jg ret (bad) jle inc cmp mov insb dec movsb scas lret jbe jl push orb insb xor push mov jl rorl cmp jmp sub cmp mov xchg xor adc mov out clc inc mov mov cmp mov stc cs adc pushf push or dec sti std mov xor (bad) imulb pop sbb push jp jb mov push outsl outsb pop cmp aaa mov mov lods (bad) movsl arpl xor cs cs js not or in aaa std mov or jno push xor sbb leave mov mov out (bad) mov fldenvs ret xor leave mov xor xor mov xlat cmp aad add mov int lods fmull scas inc out cmp dec sub (bad) sub pop add sbb xchg cwtl adc into nop push push push mov pop fisttpl rorl lock sub leave push xor dec mov (bad) imul xchg mov test jno xor jb pop iret lcall xchg fisubrl xor xchg and xchg notb enter es mov fnstcw int3 push (bad) dec das clc pop push (bad) lahf xor mull xor push clc (bad) mov push mov fnstcw and aas cmc aam ja bound or inc dec xor sub outsb dec andb add lods or jbe (bad) mov xor pop sti jbe pop sub push in push cmpsb (bad) aad mov and repnz andl or fstpt or mov insb andl or imul adc pop dec mov dec je lret xchg push sub add pop xorl sti cwtl xor fcoml iret add ret fdivs dec push mov jge cmpsb jns pop dec test (bad) fcmovnbe sbb mov mov pusha sub and pop repz mov jbe (bad) js insb roll (bad) sbb xchg (bad) ds push add push mov mov hlt pop insb mov in dec test mov sbb ret iret (bad) rorb sarb xchg adc addr16 jne cmp imul fmuls push push scas daa jp sbb push or fmuls adc aaa scas out stos push adc jp push test cmpsb iret mov imul sbb dec psubd mov adc ficoml lods movl (bad) xchg imul jge in pop jmp (bad) mov outsb and xchg mov jle lcall addr16 mov daa jmp cmc loope (bad) cmp or push (bad) call cmp or test cmp sbb push sbb jo movsl sub cmp data16 test jmp jmpw dec mov outsb js jmp cmc inc jb dec leave in dec clc test jns mov fadds rorl dec xchg jmp out xchg dec (bad) jmp cmp inc pop pop mov sbb xchg in repz sahf cmovns popa mov or (bad) ds sbb leave bound inc negl loope sub ss mov mov jb push mov call insl pop mov mov cmova cmp pop lods mov pop adc mov dec xchg dec jb pop (bad) mov push xchg push out inc push cs add mov or dec cmp out adc movsb pop mov cmp cli push xchg dec outsb xor lret pushf aas mov xchg mov cld lods push imul inc js mov mov mov cmc jae pop nop sarl jp stos insb mov mov or test dec daa cmp addr16 inc ror inc addr16 add test cmp xchg dec fisttpll jns dec push dec leave adc cmp sarl sahf xchg popa int sbb aaa mov mov or imul mov jno scas inc jnp inc inc dec clc test xchg inc push mov xor fstl std sub lahf jb pop les adc (bad) cmp push xchg dec out leave fildl fidivl mov dec and mov pop fdecstp add test fcoms inc std in stos add shlb mov inc xchg push adc mov and cmp (bad) jmp jp (bad) imull int or test sub inc movsb pop test iret jb,pt pop sahf xor aad jnp scas pop (bad) pop sub mov popa jp cmp xchg push (bad) jno dec or or or jp xchg jnp insb aas dec xorl dec subl sub notb inc nop mov bound out fsubrl and xor in push cmp ja shrl xchg dec jnp pop mov cmpsb fcomps xlat pop addr16 in iret sub insb call xor cmp mov gs ja sub xchg and mov sbb dec jp xchg aaa cmpsb leave ret xchg in inc lret scas outsb dec lock imul leave es mov inc mov jp dec inc add jb int3 pop mov ja push data16 sub dec inc cmp push repnz xchg iret xlat inc test imul sti add jg fiadd pushf push add ja jae pop das aaa sarb push stos out insb inc ja inc mov pushf imul inc push inc into imul dec adc add idivl jmp mov movsw jbe push or movsb jl bound bound in xchg xor ss out out sub outsl and pushf cmp pop insb xchg and mov mul cmp jae jp adc fiaddl fs aaa (bad) pop scas pop mov mov fcoms insb mov (bad) leave ret mov cmp mov pushf mov mov xor mov sub dec dec push cmp icebp sti outsb mov and je scas loope ljmp call jge sub cmc dec push js ret cli lock ds inc sub push or idivl mov jg mov xchg sbb cmp fistl subl push sub bnd arpl ss cmp mov dec (bad) test inc fsubrs push and cld adc sub popa std inc dec xchg cmp xchg mulb sahf leave jb out jle in mov into mov lret outsl lahf cmp shlb mov loope scas or add rorb pop mov lret outsb repnz add inc js push jg lcall test out js sbb mov xchg out insb rcll sub sbb repz sub out push js loopne in dec sbb daa das xchg add mov je,pn sbb mov inc popf mov add je pop ds and xor add mov add fiadd imul ljmp scas je out xchg and out pop dec aaa jmp xchg cmp aaa lret mov aam das and mov mov clc cmpsl xchg lret cmpsb les mov lret dec ljmp sub sbb fild pop jecxz call and int xchg mov shr push test fidivr mov gs outsb jae mov fidivrl test and xchg scas js pop js pop lret jbe jo mov (bad) mov pop (bad) sbb xor and arpl in aad push jp push cmpsl sti jbe mov pop roll sub or lret dec jle pop (bad) (bad) mov das cmp dec js (bad) and imul mov push outsb mov push pop jbe xchg (bad) je int in pop push and mov sahf mov cltd mov fwait je scas xchg dec or les loope cmpsl cmp (bad) imul mov sub mov cmpsb xor push mov idivb push add mov (bad) test pop lret divb or push mov pop je jb hlt ja mull out push aad lret int3 and mov push lcall dec bound (bad) xor or mov xor mov adc mov inc cs cld cwtl int out addb in js bound pop ret jmp jb daa roll dec lahf mov (bad) xor sbb (bad) outsb iret pop or scas nop repz dec sti cmp adc adc dec inc dec cmp sbb sbb rcll imul cld stos cmpsl xor out xchg push xor call cli inc push call add stc adc push inc sub pop sti bswap cmp dec in clc sub test push in or cmc push imul mov std ds test incl test and mov lds jg adc test mov (bad) stc mov pop mov mov cmp jo test push scas add movsb dec scas dec sbb aas and rol jl xchg orb sbb jnp fdivp mov push mov imul sbb push pop sub (bad) repz or imul jmp repz dec mov shll das push scas mov clc insb dec dec daa adc or cmp mov sub pop jno or pop aas dec mov push add (bad) adc sbbb loop aas int stos in cmpb xchg push mov jp into dec add fild cmp mov addr16 ret inc pcmpgtw jecxz mov fdivs js push sub push cld xor (bad) cmp xchg clc and repz xor cltd in xor out (bad) jp ret scas in ds aas xor and and cmpl (bad) sbb xchg (bad) outsb push lret push mov lahf (bad) xor push push cli inc mov jb sub cmc (bad) mov lods sbb cmc mov jge inc or and leave insb xchg add lcall test mov fcmovne mov sbb subl leave rorl cmp xchg xchg (bad) in pop lods mov scas sbb mov dec pop outsb or data16 ss das or imul clc mov idivl repz lcall mov lcall mov dec inc popa sbb into pop das jb or jbe cmp scas das js pop popl loope xor pop jno into xor mov and out mov loopne xchg outsl setae sar add add push movsb sub outsb into hlt inc xor cmpsb xor and or pop out xor scas pop push lahf lea mov sar sbb jge mov jle leave mov xor test dec or xor jmp xchg cmovl adc pop mov lret fistpll jbe sub es sbb cld (bad) daa (bad) cwtl inc ret (bad) jns mov mov inc fwait aas xchg mov (bad) sti mov (bad) cwtl adc inc cmpsb pusha rol lods push sub cmp gs sub jne shll jge enter xchg pop pop lods jle push out dec pop sub push mov bound or stc mov lock mov add push lea and out mov jne jnp dec or xchg push aaa (bad) pushf inc xorl push iret pop jo lds (bad) push lahf (bad) mov call leave cmc test into mov cmp rorb fnstenv lea jmp fwait test inc or ds jmp dec mov mov (bad) fidivr pusha mov xchg hlt push inc mov push in sahf pop sbb mov push imul dec adc testl pop stc addr16 push and test sub xchg ret dec jg jecxz mov or sub leave jno dec adc cmc inc xor push cltd out sub fcmovb jmp (bad) aaa mov mov andb mov dec cmp xchg das mov pop aad fldcw fwait jo and push mov jnp mov inc push pop mov test in lods cmp or out addr16 test and test lahf insl clc mov sub int or cmpsl sub test mov aas test es pop icebp pop mov pop mov sub mov or adc lea xor inc call xor mov cwtl push mov cs mov insl pop mov dec cmpsb loopne cmpsl inc xchg mov pop sub cmpsb data16 icebp mov cmpsl cwtl ja mov add repnz cmpsl inc mov mov mov clc aas leave sub push test jecxz int jnp mov ret inc jp bound aas or or sbb rorb lea addl jns lret push (bad) push rcl scas int sub sub jae (bad) fs mov sub sub jle mov enter adc cmp xor ret rcll mov xchg jno or mov adc lea pop jb icebp xor scas pop cs (bad) cmp addl daa test test and dec dec mov cmp out repz jmp sbbl repnz mov jno xor idivb mov lock ds aad jns (bad) daa sub out mov (bad) sub sbb push test mov mov das push inc das addl push inc sbb xchg adc cmp push int3 sarb push lret cmp push fnsave dec sbb push mov xchg push mov aad mov add in dec aad fsubl push sbb push insb jnp or inc mov xchg (bad) shrb mov xor loop lods cltd shll out dec jnp stos loopne cmp (bad) je dec shrb outsl ficoml std fisttpll mov cmp jl cmp dec pop lods push sbb jecxz in add jns mov fs mov das dec xchg bound les push idiv jns xor jb and sbb mov roll mov imul jg aam mov jb fldl mov mov push jle (bad) aaa scas in loop inc xchg add sbb aad jnp dec (bad) insl pop or push bound adc and push (bad) jns (bad) mov out aas dec imul add insl shll adc or xor xor sub dec or xor push or inc xchg test push bound fisubr icebp sub and les pop fmull lock scas push std stos scas cmp in pop pop adc jb xchg insl push loopne loop add scas testl xor fistp mov in orl mov cmp shlb and add ret (bad) in mov push sbb nop int imul cmp push pop test out jmp xchg rcrl pop pop cmp jp xchg and or mov jns mov xor stos es cmp mov jbe dec mov jecxz stc dec sahf inc popl or push mov jg push fdivrl mov fildll mov xor ja and ret aaa out leave insb pop dec lahf gs mov outsb push movsb mov cmpsb inc out mov push cmp mov cmp into stc fidiv sbb (bad) test data16 cmpsl into rcrb lods mov jle dec or in dec dec loop mov dec and test add js pop jp jae rol xchg outsl push lret jp enter pop inc dec mov bound mov xor inc mov jnp,pn test mov (bad) xor xchg hlt hlt pop sub dec xorl pop repz sub call outsb xchg or push jbe ljmp inc push daa mov repz test lret push cmpsb jnp mov dec xchg (bad) cmp mov or popa pop dec jne fwait leave mov jb lret push jp stc adc jb lock mov push dec sti stc xchg sub mov movsl jmp ja les fsts pop mov dec sub aas rorb xchg dec (bad) inc inc push mov push dec imul lahf jmp add inc pop jge push fxch jle mov xor mov mov xor pop or push call sbb adc notl pop adc iret cmpsb leave test fldcw sbb movsl notl fisttp push gs ss pop xchg imul cwtl or cltd dec je sbb ss inc aas leave dec out fcoml pop adc sub sub xchg mov in inc sti pop add ljmp push push pop xchg pushf fs in xor jp adc imulb (bad) aaa add sub imul xor cmp mov xchg addr16 lcall mov pop pop call aad add (bad) addr16 sbb and ja mov (bad) inc mov xchg (bad) enter ror (bad) movsb (bad) and lcall sub xor add or sti leave daa stos dec cmp aas cwtl insb jl dec sub push jecxz mov or xorb cmp cmp std lea jl (bad) in or cmp inc or sbb inc fisttpll js loope sti je jmp sbb out leave sarl sbb stc fwait push dec movsl sub pop or mov jge cmp movb sbb mov push or dec inc fwait or inc or push int3 fst jae lock test pop or popa push inc pop aas and test addr16 lock cmc xchg sub sbbl imul jbe je aas add adc cmpsl pop fxch xor insl or daa inc (bad) dec pop ret aad enter jecxz lahf cli outsb cmpsb ds leave pop scas push outsb or (bad) adc inc lock pusha pop xchg scas jno mov jg dec mov hlt mulb mov div stos inc pop and mov sets das int mov popa incb lods cmp push test jl pop sub cmp pop mov xor out push call imul repz pop mov je jo jl out loop xor push pop stc lods mov push jb mov jge sbb jp pop pop aad inc shrb cs dec sub pusha (bad) cmp sbb das xchg ljmp test jp gs sub mov or popa inc pushl jno shlb rolb jnp loopne rcll rcrb jl pop push sub cs ljmp pusha push arpl cmp ss test ja das push es sysret cmp insb (bad) jmp loopne or and xchg call mov xchg mov enter or or ffree xor or js test arpl push ss aad mov pop xchg mov adc cmp cmp jbe jbe xor inc cmpsl (bad) and or test mov es jb mov lods xor mov inc cmp dec cld out gs je xchg ret dec inc xor cmp sbb das fadd and fldenv repnz cmp lods push (bad) lods adc ret lret mov xlat fpatan sub cmp outsl and (bad) mov inc or mov mov (bad) decb sbb (bad) pop pop push jp pop push (bad) pop mov test mov pushf cmpsl mov out fisttpl sahf test pop ds aaa xchg (bad) (bad) rclb stos pop xchg sub sti pop jb (bad) mov mov xchg pop sub sub mov leave stc jbe jecxz enter imul icebp inc jecxz mov add mov mov lret sub js mov xor or mov cmp aam nop push cmpsl mov add inc xor dec mov stos lds fidivr icebp push popf jbe push lcall call sub pop imul in inc insl push aas inc adc in lcall das (bad) addr16 lea adc icebp pop fidivl aas push subb jno je xor xchg jns inc stos xchg xor push (bad) ja aam sub inc and pop pop or lock imul inc jmp mov (bad) test pop cs sbb mov js inc fistl and sub xor sub inc es or mov (bad) dec cs xor mov xlat and mov lahf dec pop jp rol jle into test xchg in les cs jo xchg cli sub cmpsl xor (bad) in mov ss (bad) fimul sbb lret inc and sbb push mov ds or dec xchg push (bad) shlb mov sbbl ret call sbb movsb or and add jo dec sub fwait or mov mov sub enter jmp into (bad) cmp neg fldcw bound push cli imul mov jae cmpsb (bad) mov and push jg sub jnp cmp jp xchg jmp jb sbb scas (bad) adc sub pop push scas out sahf fimull fldt leave int3 fwait lret jmp cwtl cwtl xchg mov jns movl mov int3 push cli lcall sub fxch loopne rol pop loop imul push inc enter or inc loopne dec mov aaa dec sahf or addr16 xchg es cmp mov repz imul je or js sub je jb (bad) test xchg add call mov add mov pop xchg scas or ret mov (bad) mov xchg push addl (bad) mov inc insb mov push lcall add hlt dec inc jnp cmpsb or push jae out cmp jl adc movb mov cmp repz (bad) pusha pop stos cs movsl adc out add push jp pop xor sbb iret mov les xchg or ds sbb cmpsb push icebp jecxz cmp xor mov jle push mov mov mov or les xchg lahf inc pop jb cmp dec scas (bad) mov aaa fnsave sbb push and data16 ss xchg inc xor mov pop fwait jmp pop call dec movl sub dec ss popa ret pop dec jg mov mov sti js lods push jbe jle pop inc xchg mov dec push pushf int mov sbb es push xor sbb jp aaa inc push push sbb (bad) popa mov push xor dec ret and daa out cmp aad sbb mov rorb cmp in dec loop pop leave mov psllw sbb or push pop inc out out shrb imul sbb mov leavew subl mov cs ljmp aas pop das pop jle dec int3 cmp dec xor out push repz pop mul aam in fiaddl pop jle xor mov adc inc sti int cld xor call xchg pop xchg jae aaa jl outsb inc jb cld insl jbe call (bad) call rcrl dec insb shrl js aad jecxz lods xor push into mov cmp mov mov cli dec sar sbb jno inc (bad) repz push scas je dec lock sub cmpsb sti pop js pop pop adc outsb (bad) call (bad) cmp or jno loopne ja jle pop mov jecxz test leave dec xchg std and mov sub inc leave mov dec lock mov jecxz xor test xor push in jecxz out pop mov aas xchg jmp xor jae lcall leave movsb popa sti add mov or jae xor repz outsl pop mov xchg add adc inc dec bound sub inc jp push mov sti pop aad or dec xchg xor xchg ja mov hlt or int in dec sarb dec pop cs push cmp repnz mov das mov pop push mov cltd lret cmp enter pop jg cmp sub shrb lods cmpsb pop es pop out pop jns jae call fcoms or cmp dec adc dec cwtl stos ss cmp add or jno pop jns ss push push cwtl xlat push xchg xlat xor hlt scas imul mov sub out insb fild cmp push bound dec mov ficompl mov mov je mov cmc jns addl imul ret stc in sbb cmp or fnstenv jmp leave hlt adc or std decb ds xchg cmp dec lods dec adc pop sbb aad push stc adc add mov sbb mov test ljmp push mov into insb mov or sbb leave das sbb mov mov jmp dec je mov jb jb jnp enter xchg mov inc or push sti inc lods dec cmpsb arpl jle dec or cmp and aam insl imul imul xor xchg (bad) sbb jo sub push sbb fbld cmp repz dec addr16 test movsl push mov in sbb mov mov ret and call test cltd les adc std pop mov mov pop addr16 sub cmpsl sar stc fiaddl pop fbstp icebp loope stos jmp sub ljmp or into dec lcall test adc lahf into xchg mov iret jp push dec mov sti test rol mov jp or cwtl test push and and shll jo and add (bad) sbb inc stos movl jbe pop cmpsb inc ret pop mov lret jecxz (bad) les jnp dec fsubrp xor jns outsb xchg inc inc idiv or lea mov jmp inc or xchg sub sub rolb aaa dec or push sub lods das (bad) jbe dec cmp ret dec ds pop leave pop call movsb stos jg repz jg dec shl inc cmp (bad) push pop pop mov int into mov repnz xor or pop call add sahf imul fsubs gs mov adc scas (bad) cmp (bad) aad minps cmp mov data16 clc dec pop test (bad) ret (bad) cmc jno or jp cmp inc or push fnstcw sub sbb loope mov mov or lods out es dec sti in inc cltd or xor cmp test and aad or scas dec inc push xor leave mov sub fdivs aaa cmp inc push sbb cmp mov jo dec cmp push leave lea xchg js daa cltd into cmp ret fidivl xchg aaa pop out mov pop icebp push cmp outsl div je ja sbbb leave jb lcall stos enter xchg dec mov mov dec cld outsb in ja and lods jb sbb pop inc inc mov (bad) in insl push (bad) cwtl dec xchg xor pop pop cmp enter cmp out dec push lret scas aam adc xchg jp push cld dec addr16 push dec sub cmpsb sub ret mov scas and jne cli (bad) mov sub or or pop (bad) cmpsl fldenv mov or call clc xchg mov sub mov adc cmp push add jnp push outsb xchg xchg repz imul aaa daa pop cmp incl sub push dec sbb sbb (bad) push in mov (bad) jp pop mov jns cs xor and xchg andb xchg insb or lods outsb pop stos daa cmpsb hlt xor xor push mov lods cmpsb pop mov push fs mov sbb (bad) pop jmp daa shlb inc lcall roll lock mov mov testb rclb dec and mov into jbe (bad) outsl pop sarl mov bound call sub imul stos xchg setp mov pop mov jnp cmpsb imulb push cmp ret push ja es pop inc dec imul cli addr16 push leave cmpsl inc movl xchg (bad) push adc mov xor mov sbbl and ss sahf mov call aaa enter or out push data16 sbb jle insl pop dec rorb nop mov fdivl out push mov out sbb jmp sbb pop dec cs stc xchg dec pop cs std jbe xchg lahf mov mov jbe xor sub jno std mov lret icebp mov push out or push pushf imul push call dec (bad) inc mov cltd pop pop sub cwtl movsl pop mov dec dec clc arpl test cmp or daa (bad) jge shll fsts daa sub add daa cs adc sti leave imul dec mov inc daa ds das jp mov mulb daa mov and loop les jg and fwait jae scas lods dec orl cmp pop adc repz jbe inc std mov add or stc shrb push ljmp xchg nop jb aad adc ficompl movsb mov test repz es fadds out bound sub mov xchg out add xchg xor ja cmp mov stos cmp out inc push aam xchg ss inc movzbl fnsave cmpsb repz test aad add mov stc repz sti in xor or ds std inc pop cmp or test mov push xchg jbe outsl orl (bad) mov push insb (bad) (bad) cs in sub cmp xor inc cmp clc sub push (bad) pop adc inc fisttpl gs pop adc pop xchg mov dec imul jp cwtl cmp dec call aad and pop leave lahf push rclb push mov mov adc xchg cmpsb sbb imull leave stos fstps (bad) cmpsb ljmp jg jg sbbl xchg dec hlt sub shrb pop mov sbb pop adc add inc cli pusha cli adc int pushf pop out push dec inc add sub mov es push mov out fiadd pop mov lret in jmp add mov pop es jbe mov lret stos fisttp add lret sbb shld test shrb test adc add decb or lcall dec push cli push out dec aas inc pop lret ljmp or or dec or repnz cmp data16 mov adc fidiv fcomps lcall aad loop movl into cmp mov cmp jnp aad sbb push movsb movsb xchg xchg stc push pop out scas adc xorb call xchg rcr lock inc or jp cs cmpsl inc outsb test push add or jp les inc out stc dec dec inc xor fsubrl adc adc jmp and js movl dec inc lock xchg push dec dec cmp dec xchg lods dec mov lods xchg inc xchg aad or push popa enter jbe or xchg dec fistpl push push mov mov mov imul jb mov icebp pop mov sbb cmc cmp sub xchg adc leave mov push mov and dec insl or xlat sub mov sub dec sbb mov cmp push cmp out cli dec add (bad) ljmp inc out (bad) arpl (bad) aad outsl sbb ja add rcl dec enter mov popa cmpsb dec jns or adc pop js pop adc dec insb dec pop mov cmp scas out imul sarb out andb push sub sti cmp sub leave sti aad adc sbb cmp or jmp or mov mov mov dec lea into xchg inc jb std fsubrs jl xchg call pop dec xchg dec push shrl cmp inc jg pop push push icebp (bad) xchg cwtl idiv sub xor jmp sbb and divl out mov setle mov cwtl cmp sub jl jae add std mov mov push adc aaa dec or daa dec cs ljmp cmpsb outsl es ret outsl mov cmc mov test xor adc dec mov or ljmp aad add push pop pop mov add loopne pop jp adc out mov mov daa push loope (bad) ffree push fsubs mov inc sbb dec sub dec adc push (bad) imull (bad) cmp test xchg sub lods pop cmp dec lock or int push xchg outsl sub mov sub je fs out jb mov jae push push mov repz push aaa sub adc (bad) je pop popf inc orl push mov cwtl jle push int3 mov sub inc dec aaa ss gs out xchg pushl xlat pop mov jl cmp les and adc add stos pop in mov lods ret and jo push or cs data16 les jb cmpsb lcall xor mov mov lcall push cmpsb and call jae fdivp cmp fsub xlat (bad) adc and adc repz lods in pop push cmp cmpsb iret aaa or shrl repnz addr16 push sub add xor pop cmp or (bad) pop adc je dec jbe lods pop dec in push adc adc or ss sbbl mov xor dec or push jns pop call (bad) cmpsb dec fimull cmpsl enter imul leave hlt stc push mov xor aad add lahf xchg xchg cmp pop pushf mov and mov xlat jns or notl and push std push clc sub cmp cmp nop test add dec sbb movsl add scas mov arpl mov sub mov push pop sbb leave adc push xchg mov inc in in dec jns xchg stos xchg (bad) sti dec popf in sar lret pop mov mov jno cld fmuls cs lret mov ds leave cmp cmp and jp (bad) fistl xchg xchg mov inc lcall add jae sub adc jbe int push icebp sub cmp mov xchg leave out call sub push jne in jne shl inc mov enter and cmpsb jp aad mov outsb push ss mov and mov sub fisttpll sbb jnp das cmp mov sub sbb jbe mov add jecxz (bad) mov ja addr16 shrl jne push daa idivl pop mov call iret or lahf push or dec test and test adc cmp jge test popa ret mov lahf sahf or das test das pop dec std addl xor mov mov jge push mov nop fsubs cwtl adc out movsl inc aad int add test faddp cli xchg and pop xchg test inc mov jb and push cmpsb cmp dec push xchg pop sub mov inc out daa and jno enter pop xchg and xchg (bad) leave mov mov out cld imul add (bad) sub push outsb imul inc aaa cli pop dec addr16 mov dec aaa cs movsb pop xchg idivb stos pop loop jp mov lret cmp ja dec xchg insl dec mov testl (bad) or cmc mov lcall cmp mov insl xchg cmpsb loopne (bad) push lcall jnp aam popf sub jae add ja add mov lcall out cmp jp jp mov mov mov xchg adc mov pop inc data16 in fidivrl call dec lea (bad) add aaa pop in enter mov sub sti push mov cwtl jbe in aad mov out decl enter xchg aas adc xor mov mov xchg repnz aas or leave xchg stc cltd adc or jno push adc popf aad push daa inc pop ficoml or push xchg (bad) bswap out sbb mov addr16 xor sti lcall sub nop sti int3 and out and sbb in sbb loope divl cmp clc out sub daa out ret lret mov (bad) dec inc out inc iret daa xlat pushf das ficoml xchg loopne das (bad) push gs adc aaa leave inc test inc pop xlat push adc je dec sti ret cld and int3 cmp inc mov movsb roll insb and frstor icebp inc xor ss mov call cmp mov mov mov cmp movsb aaa fisubl xchg dec sub jg xor leave test xor jge ret sbb fs les arpl leave int3 (bad) xlat jp lcall xor sbb int leave fwait leave dec aad sbb jp inc mov into mulb sub jmp xlat loop loop jno mov mov dec adc movsl fist cmpsb sub pushf aam (bad) push push adc dec cmp decl enter in mov nop popa decb scas xor sub test inc mov sbb mov add inc leave out pop nop lahf inc insb xchg xchg inc inc scas out test cwtl push cwtl push aaa sub aaa dec jp idivl or pop arpl loope push add push lods dec pop pop ret add out (bad) xor pop xchg mov mov (bad) dec (bad) xor neg xorl test (bad) ljmp les jo and sbb add jl mov xchg icebp inc sub jns pop push into push repz lcall xor inc iret outsl call mov or pop sti mov pop ficompl cmc inc dec jbe stos dec or xor scas cli cwtl stos sbb fdivl xor and es (bad) inc fmuls dec ss push pop jb xor pop xchg mov pop xchg dec mov out or cmp dec pop push cmpsb (bad) arpl gs arpl inc jns pop or push sub cmp int inc repz xorl sahf lret outsb (bad) jb rclb sub fmuls inc xor dec mov ljmp jnp jl mov das bnd (bad) jp nop pusha test dec or dec inc (bad) fwait call or lea mov fidivr fnstcw jmp fcmovnb inc jnp adc push repnz fsts pop xchg xor leave (bad) lea push push cs jecxz adcl lahf (bad) in push fnstcw cmp ds mov enter loopne jge loop jl xor mov scas data16 lock jae outsb pop jne icebp push fisubl xor mov lret subl loop mov mov cmp cmp shr scas dec fildll sbb les adc sahf cmpsb idivl push mov sub dec mov mov lods jb xor mov adc cld mov sub ficompl sti cmp mov mov lret data16 or jb dec outsb inc sub scas jnp xor push stos mov dec jp jns test daa jp sub xor xchg dec fdivs adc pop test sarl out call cmc (bad) insl in pop pushw sbbl dec sti push sub std pop imull stc imul adc in aas and (bad) leave loope cmpsl mov subl pop sbb push push js push inc mov rcrb pop pop loope and push leave daa decl lahf push out sub mov enter popa out adc and movsl and (bad) mov mov mov das push sub and cmp jp jle stc mov xor out jbe xor out into fdiv sub mov fwait mov mov (bad) cmpsb jno pop scas ficompl addr16 jg in push cmp das scas mov push cs mov cmpsb data16 dec push das cli (bad) (bad) mov movsb fwait dec lock xchg dec cmp push movsb xor and (bad) cmpsl (bad) and or push adc cld xchg sahf ja push or pushf xor and xor pop and jno dec push pop fsubr test cmp fadds cmp mov inc jle cmpsb pop xchg push loop sub dec pop cwtl lock rsqrtps jecxz cmp int3 xor sub bound sti out pop pop jp cmpb dec daa cltd (bad) sbb je mov ds lods out push iret rcrl inc es clc loope mov xlat push mov mov std push scas call aad lods xor repnz fcmovnbe xor std fsubl movsl dec cmp jns arpl test leave (bad) mov pop (bad) mov addr16 cmp and fisubrl fbld pop sbb xor jb xchg pop ss pop push aam cmp push lret lret and inc out push sbb dec testl imull scas scas or cmp cmp (bad) dec inc cmpsb idivb pushf pop push fidivr test or pop data16 sub daa cmc cmp push mov adc addb and mov mov push (bad) sbb add cmpsb pop inc lods lcall jo sbb fwait aad aam jbe call pop lcall pop dec arpl add pop jb dec pop jo adc cmp pop test dec xchg dec cs xor ss les sar adc and aad xchg jae cs sub jge pop push xchg cmp push or jbe jns and jp outsl ret scas push or sbb mov pop cmp push cmp popa mov rcll adc sahf fldcw cmp inc scas mov mov sub sti jp jmp adc pop dec xor nop cmc xchg pop ss sub mov jbe ret mov imul enter cmp scas inc push xchg or push xor movb sarb hlt adc mov or mov pop add adc scas adc or mov mov daa jg mov pop inc push fwait xchg mov aam repz aad insl inc dec xchg add push mov leave dec rcr mov pop mul push in mov inc dec pop popa or out push cmpsb xchg leave bound dec mov xchg idivb mov mov dec fisttpl cli lret ret sbb push leave out aaa and fdiv pop mov pusha mov add nop dec mov push ret in lret pop ja,pt jb addr16 cmovge imul xchg jbe dec xchg (bad) iret ret (bad) leave aad ljmp jecxz inc add adc jnp dec pop int daa gs push mov pop pop aas cmp fwait add push cs push (bad) mov mov sti fdivrs inc inc clc sbb aad mov dec jp inc jnp lahf (bad) mov bound jmp jnp test inc sbb push push ret adc dec push sbb aad imul jg ds test fidivrl jp mov leave or cmpsb cmp imul and mov andl fmulp jbe and gs dec pusha fisubl and out neg pop add cmc faddl enter insb das mov into out and out inc cmpsb mov dec out xchg std stos push jae mov rol out test mov dec in sahf fimull push or adc mov iret es add sti add aad adc or mov push stc push rdpmc cmp les pop pop pop (bad) ss cs pop adc bound dec aad lock mov jno ss sub push mov incl push outsb (bad) cmpsb sub repz push movsl jp or sub bnd ja sub xchg pop out pop test sbb leave cmp cmpsb icebp lock dec dec outsb add stos scas (bad) fisub xchg adc aaa cs sub dec shlb and in call pushf dec aas sub jmp dec add push arpl pop imul cmp sub add mov push (bad) xor cli sub inc sub xchg (bad) rcr inc cmp mov aas jg mov or mov jl arpl and fidivrl sbb jmp xchg in cwtl aad xchg inc cmp je sub fs pusha cli outsb ds dec pop out stc (bad) fistpl (bad) mov adc enter mov pop pop stos sbb lret jnp jae insb insb dec lret mov ret clc mov xchg adc aad repnz subb shll test jbe mov call push xor outsl leave dec mov cmc imul mov pop mov cwtl dec add jecxz push xor xchg es in dec (bad) aad imul inc xchg push cmc sub fnstcw jp iret and dec inc (bad) xor mov push aaa jmp jno adc cwtl xor cmpsb mov adc xchg jno or push adc pop jae in adc (bad) mov dec scas adc mov sub jmp and div sbb push cmp add and adcl out or xor stc xchg scas jl pop js insl insl mov sbb fwait std ss lahf push test and or (bad) ficompl pop mov pusha lahf jge xor sub ret movsl xchg (bad) pop pop imul stos movsl pop sbb mov in (bad) xchg cli lahf leave into shll push fldcw (bad) xor pop lods sub xchg push into mov cmp int pop into push pop inc cmp add mov les jbe rorl imul call aaa insl cmpsb out and (bad) fsubrl cs repnz mov aad mov push and pop arpl ret out jp mov out push xchg or mov decl xor add add es insl xor in pop jnp or sbb daa lock ficom mov dec ljmp or out xor js dec pop aad stos (bad) jecxz xchg out je mov push enter in jns cmpsl mov or adc xor xor (bad) cmp mov mov sbbb mov add mov das push sbb lret fst jecxz or dec (bad) (bad) imul or sbb xor xchg repz stos dec push cmp imul add cld inc pop or pop add xchg or add jge xchg mov repz (bad) inc xor leave and scas mov xchg or add rol pop movl (bad) dec mov cmp dec neg mov sbb dec dec dec dec adc test inc pop mov mov or jg js loopne xor dec shll inc js pop insb cmp fsubrs mov jbe and stos cmp inc scas cmp clc xchg jg add xor js je dec sbb dec xor xchg inc dec jmp sbb cs lock and (bad) jl popf mov mov add jbe es sub aad cmp leave lea adc pop (bad) or cmp adc in sahf add or pushf bound add jle call push and rolb mov call add outsl add iret ficom mov test dec idivb mov imul cld jno loop mov add xchg xchg or out jno xchg mov cmp xor and addr16 cmp stc push xor adc jae fdivrl incb mov pushf pushf cmc push jp data16 dec inc ds lods mov cmp xchg cltd mov mov xor push cmp orb mov dec mov jbe (bad) mov popf or imul dec sbb mov sbb inc das and mov test jmp lods cmp (bad) (bad) popa sub pop (bad) push cld aaa repz mov rclb pushf lods xchg mov test in leave push xchg outsb dec jle imul pop mov adcl movsb dec mov xor mov adc jne std xor push aad xchg shrl xchg dec pop sbb sub jb leave repz stc cld adc aad insl leave scas xchg pop in int flds leave sbb dec sub mov aad jno,pt (bad) adc cmpsl adc xchg push xor bound push mov ds in push push leave jp test (bad) leave pop sbb and mov and mov sti sbb (bad) cmp outsb xor adcl jl push das xchg imul mov and (bad) iret xor sbb xchg pop lcall adc mov movb mov sbb mov add les lahf sbb daa adc sub mov mov pop loope push das jno mov ja data16 and dec fwait xor orl or movsb mov mov pop cmp addr16 mov mov add jl lods out mov xor scas iret fimull sub sbb pop adc scas inc rorl fimul jne dec xchg sub mov loop sub bound xchg lods push xchg mov sbb cmp sbb sbb inc loop jnp loopne fldcw sarb dec into lods pop dec test pop jmp sahf ret call sbb jbe sbb pop ljmp jl cmpsl mov insb dec xchg mov (bad) jo sbb mov out mov mov mov pusha aam dec arpl (bad) and sti mov cmp sbb push dec js aad pop mov imul sub add not or mov inc push xorl movsb insl push js dec (bad) daa sub std jnp sti rcl ja iret or (bad) repnz push xor xor data16 jecxz jb dec pop cmp mov lods dec add insl lock jb stos nop outsb stos (bad) xchg lods xchg dec out push inc inc mov popf adc push cmp insl sub xchg leave shrl and mov mov out jmp inc sub mov js gs cmp xchg cmpsb pop sub dec jp data16 lret fwait out jne outsb bound aas fcmovbe push stos aaa jno pop dec push jns cmp fdivrl aas or insl cmp sbb and ljmp xchg insl dec adc sbb jo test sub insb pop pop inc xchg dec insb jmp cmpsl jo dec push sub jmp jp xor jb inc es inc shrl shrl sbb pop and push scas sbb je sub lcall push out aaa aas xchg lods sbb mov in in xor xchg push push divl aaa jp xor aas jbe movsl das dec lahf out jnp mov (bad) imul sub jne push mov fdivl mov in iret ljmp pop loop add sahf (bad) mov jge mov sbb jp leave push mov test test mov inc popf cmp dec push dec and xorb repnz add dec push out in lea (bad) subl and stos push sahf jnp xchg into cmp scas pop leave out add sti cltd call lret xchg jl ds lahf push xor add fidivrl dec les adc fldl2t jno adc pusha leave jl ss push or out adc mov (bad) popa iret mov out and cmp adc push out inc daa (bad) daa (bad) and shr inc lret test jge sbb leave pop cmp ficompl fwait xchg cmpsl or lcall jp inc mov push (bad) leave je push cmp arpl cmpsl jp or leave add rorb (bad) jp das dec test or test aas arpl sahf stc jecxz je push and scas icebp fldt scas mov in sarb push (bad) xor mov or sub (bad) es loopne or push in scas daa cltd and pusha push repnz sti dec leave in sbb mov out jl lret jp push sub xor data16 negb cmp dec dec sub push (bad) fxtract or pop mov daa paddsb pop divl mov imul lock dec or mov mov cs mov push pop dec lods dec nop cmp cmp out nop cmp inc scas dec pop imul xorb dec aaa cmp leave add lods jl dec lahf cmpsb jl push stos mov push movsl jae dec gs loope jns dec xchg outsl loope cltd test or stc pop sub cmpsb mov push stc mov faddp adc je incb and fisub (bad) mov mov push in add popf insb lret lcall or mov call inc mov cli and fidiv sti loope push leave out mov sub clc adc and cli into leave scas pop fcmovnb xchg push fisub cmp xchg (bad) push mov imul pop jb cmp mov mov stos push add dec stos out pop shufps ljmp mov aad das cmp push lret lods lret call lret mov inc push ret ror sub dec xor cs mov pop rorl mov and inc jnp inc fisubl jo dec cld dec push dec (bad) pop sbb jns ss xchg sbb pop aas dec clc lret or (bad) xchg mov dec ror fwait inc jo sbb jne jnp cmp dec enter std pushf push pop test and out (bad) jbe sbb sahf jno jl jecxz jnp out fstpt bound clc es in popf daa out shll push jp pop dec jle adc sbb jp xor pop imul loop repnz sbb mov jle lahf clc rorl sbb scas insb mov fisubl mov lock cmp inc bound mov mov pop mov cmc ja (bad) push outsl cltd xchg pusha mov push xchg jae xchg jb mov jecxz inc dec and dec imul mov data16 xchg sub clc nop gs pop sbb out fcmovne lods xchg (bad) out aad leave xor inc test outsl xchg jmp sbb xor iret (bad) adc (bad) cmp je (bad) cmp inc mov gs iret (bad) jns dec cmpsb addr16 scas mov push fwait xor call sbb repnz test insl fwait jl pop js jb and aad pop aad pop stc inc xor or push push flds pop dec (bad) aam cs imul fwait test jmp leave mov call (bad) lahf shll jmp stc mov in cmp stos xor cmpsb leave fdivrs jecxz pushf and movsb nop mov test outsb push pop mov mov int add sbb jmp (bad) inc jl inc mov xor lods mov adc aad iret jmp stos cmp jl orb xchg out test pop mov aas mov inc ds movsb xchg mov stos cld and cmp loopne fistpll push js clc ja cmpsl out scas lods inc mov add loopne and (bad) data16 hlt ja push push xor js sub mov add lock mov jns jge cmp jg scas adc or aad inc sub mov mov push lret cmp jmp add xchg push mov push ljmp sti fidivr or dec xor mov jl pushf jg cli test (bad) xchg sar fcompl adc lcall cmpsl pop (bad) dec ljmp adc rorb mov push jp xor xor and xor or lret dec pop mov ficomp (bad) cmp jle and lods mov fisttpll mov inc int inc call outsl out xchg jg push fwait jb lcall sbb std inc leave cs into sahf mov mov aas dec inc cmpsb hlt mov xor sbb cld sub pop sbb or or cmp cmp stos pop sub xor dec pop loopne sbb or mov mov dec inc mov test jg and rol outsl cmpsb pop jp add mov mov jb mov xor mov in mov cmp ss dec inc mov xor sub mov push outsl sarb pop sbb jl and stos xchg loopne mov inc mov arpl dec mov jo movsl xchg cmpsl or scas cld dec and mov and xchg cltd sub sbb or inc dec xor xchg and lds daa movsb sti xchg jb xchg shr adc (bad) repnz jp fdivp pop inc cmp mov or stos mov cmc jge xor cmp lods dec sbb adcl ja cmp mov scas sar and and push mov sub mov push push mov (bad) daa mov mov mov pop and clc lods inc ss lret ds cmpsb test mov lods inc xchg dec and mov neg and (bad) xchg cmp dec dec test les mov roll push psrad enter (bad) data16 push (bad) das jae aaa mov jp daa add loope leave in xlat push mov push push imul inc sub lods jne inc icebp pop dec lret push lahf xor push mov ret in es sbb imul sbb addr16 dec lret push xchg jno (bad) sub aam js shlb cwtl (bad) cmpsl imul mov out lcall push test push aaa xor dec and pushf inc loop inc ret je pop test and lcall jnp add inc divl inc or xor jb shrb aad ljmp cmpsb inc and mov das xchg push mov fdivrl loopne mov xlat imul cld pop cmp push inc sbb pusha adc data16 add cld iret inc and jle fldcw outsb sbb push push js push xchg cs test aaa mov or dec addr16 (bad) fmuls or pop sub (bad) es data16 sti cmp pushf sbb das lods mov cmpsb sbb adc stos dec mov dec mov mov add (bad) jp mov aaa lcall adcl jb mov hlt dec add mov outsb pusha and lods add outsb int xor xchg pushf scas lret das (bad) pushf mov popf cmp push scas imul test cmp outsl aaa sahf scas dec sub stc pop popa push outsb xchg jle inc ret xchg cwtl dec imul inc test jp and or gs push adc test push repnz or mov xchg lods inc pop pop push jg call pop push xlat mov dec add sahf outsb or cs ret xor pop addr16 ss aas cmpsb inc pop inc mov out cmp loope pop cmp push pop cwtl fadd aas clc mov push lods jne bound pop push push mov (bad) sub cld int3 inc cmp pop jno sub sbb shrb mov ljmp xchg dec pushf xor xchg leave lods mov pop sbb and mov push scas (bad) jmp rcrl dec xchg push adc jae jl movl inc jge mov cmp xor (bad) (bad) ds xor jb fsts sbb xchg popa inc scas jno test sti inc dec jle out mov adc mov mov adc cmp jp loope mov mov and in inc inc aad jae jg add lcall scas xor jb or fidiv lahf xor bound in jp fisubr ljmp push inc and and stos add xchg in imul xor in dec movsl cmp push sub push jns sub das sahf xchg popf popa adc push cmp unpckhps sti push pop jge mov lock xchg mov mov clc int pop mov and and rorl push (bad) xchg xchg (bad) sar ss outsl (bad) dec cmp (bad) mov (bad) js sbb xchg mov imul (bad) cmc cmp push out push pop nop cmp sti mov ret scas mov cmp jb cli stos notb pop jae bound ja je nop rcr bound push jp arpl mov stc xor fwait jbe jg outsb mov dec mov ljmp icebp dec xor and aad mov (bad) fcoms fs pop lret and jb inc pop dec lods mov scas mov sub mov out push and (bad) jge,pt (bad) jb aas icebp cmp xchg in cld cltd mov sub (bad) xchg cmc aas and add cs pop xchg fdivs xchg insb jbe push push nop sub mov jge out ljmp dec add aas sub daa aad mov xor cmpsb scas fcmovb pop mov lret mov xchg dec sub (bad) jecxz add cs push fwait mov or cmp inc push mov lods cwtl sti jl idivb sbb test or lods xor fiaddl xchg add jnp (bad) lret (bad) ljmp out dec cld insl fsts cmpsb pop push in adc mov outsl lcall lea (bad) sbb out pop in pop nop mov stos adc pand pushf das (bad) lahf sbb inc mov dec test xorl cld test addl lock stos jle dec fildl addl and dec ret mov (bad) int add pop addr16 test rorl fistl mov dec test push and (bad) cmp or pop xor das stc outsb fnstenv mov adc mov xchg jne or scas movsb dec jne adcb xchg and mov mov pop cmp adc lods mov jae sub mov arpl lret sbb and pusha popf add sub (bad) adc cmc popf scas imul jae mov dec push dec cmp dec cld movsl dec cmp mov ret (bad) xchg dec jle or xor lret xorl sub dec dec iret subl cltd hlt shll stos add repz sub cmpsb pop xchg ljmp jbe ljmp lret sbb xchg outsl pop push push jge cmp sti cmp xchg jno or inc pop jmp loopne fiadd jl cmp test or dec sub ljmp out dec jmp bnd mov cmp jnp loop push sbb jns sahf sahf jg test lods (bad) adc scas push std cmp hlt and adc dec pushaw aam js mov or icebp inc sub fisubl jbe lret jl cmpsb lcall daa cli (bad) cmpsl mov push (bad) in and push repnz fsts stos push jb leave pop pop jg (bad) xor pop repnz lahf pop mov (bad) and ja dec jo bnd out movsl and jle cmpsb into mov push fs dec pop push ss (bad) xor aaa imul sbb clts out xorl pop jb jbe aad call and xchg pop jo xchg push jns push aad xchg dec out aaa add dec cmp test notb insb lcall scas cmp sbb jns hlt cmp aaa js fyl2x jb push jno push pop test pop push iret ja leave push test ss inc adcl mov stos loop mov sbb pop mov test inc push xor xor mov (bad) int (bad) loope (bad) stc cwtl outsb pop insb out inc mov push sahf add popa je or or mov outsl (bad) mov dec in pusha (bad) and add xor fidivrl and ret lds scas out icebp jno or aad addr16 (bad) lret pop xor pusha outsb rcr daa test or xor pop dec cmpsl scas mov in mov std cs cmp mov pop stos aas out sub or jae sub adc cmp mov pop jl sub jae stos or mov push (bad) jmp pop cmpsb push pop pushf test dec (bad) dec imul leave aad jnp dec (bad) mov cmp (bad) jp or dec or push mov lcall dec jmp pushf dec sarl push ds roll das std and ror cmp ds bound mull mov add xchg sbb dec xor cmpsb insb (bad) dec or mov dec xchg jbe and addr16 sbb mov loop jo cltd insl xor or rclb sahf scas pop lods shrl in lahf xor in and imul rcll mov xchg outsb jg out adc int3 lahf aaa cmpsb aad mov push fstenv adc stos dec fwait cmpsb or and xchg repz jge out fidiv cmp ds sti inc push sbb lret inc adc and clc or push mov (bad) out leave mov dec aam cmp outsl repnz stos xlat lea xor push xor mov decb ret mov add enter ljmp mov xchg cmp xchg lock push and lods cmp add mov js,pn (bad) xlat in jb mov inc jns cmp imul dec out inc push jge mov iret icebp jb aas add xor pop (bad) sub add cwtl xor mov outsl leave xchg not ds cmpsb push xor inc jbe and mov leave cmp jae mov push pop loopne mov outsb les mov rorl jp cmp pop mov mov jbe cmp rcl mov sarb jl push and (bad) in pop cld or jg jmp test imul xor cs iret xor mov mull mov std or xchg popf pop aad mov add mov cmp test mov cmp js cmp mov inc mov cmpsl and stos cmpsb xor jg mov and dec fwait pop sub imull fcmovne loop aaa je dec pushf xor leave nop lret sub (bad) jb imul dec dec in addr16 add rolb testb mov cmp sbb and jmp testl insb adc xchg xchg mov ret cmp cmp mov loopne ret sub mov jb ret outsb fdivs jp in hlt fdivp mov push imul pop lret (bad) dec adc xchg in dec dec insb dec pushf aam dec or add add mov cmp and stos sub outsl add bound daa jno js,pn cmp xor mov cs lcall pushf sbb dec xchg sbb dec dec popf push into aas xor dec and mov mov subl push dec sbb lock cli lret cwtl leave mov rcll test stos aaa push jg dec pop lret adcl dec cmc mov sub xchg pushf cltd mov mov popf push (bad) mov aaa ja jecxz mov aaa push lds xchg pop push mov or and outsl out mov pushf mov (bad) push pushf and dec jp call test push notl push xor leave faddl fsubrs sbb push negl sub test pop cmpsl inc xor fstpt xchg xor adc (bad) mov lret dec fld aaa scas pop loop popa (bad) jp dec xor jb and dec inc xchg and bnd push sarl (bad) lret movsl inc push push cmp dec mov cmp in int or cmp jbe decb jbe and cmpsb stc lret inc out pop add add ret bound lods push adc into sub lock cmp mov cli loop dec js dec lods dec sbb xor fcoms dec test xchg daa divb add inc xor inc mov pop cmp mov data16 dec and (bad) arpl cli xor pushf or pop inc std stos fs cwtl adc sub fisubl pushf adc cs (bad) (bad) or mov ljmp push dec xor push push out xchg mov lret sub cmp cmp lock inc imul (bad) leave repz sub push jbe (bad) or loopne xor fcomip pop and sti mov xor xor lret sub sbb rorb pop and sbb iret jb pop stos sub pop xchg pop aas (bad) (bad) or dec ret into cmpsl mov xchg push lret test dec lods into push pop push mov sub fs inc cmp stc inc mov scas mov jge pop mov jle (bad) js mov push inc push fcomps cmp mov fs jecxz xchg inc notl fs jge push push outsl cld pop mov loopne push sbb enter sbb add xchg fdivs out divl xor push fsubrs inc lods jmp mov cmp fcmovu and sbb pop (bad) imul mov mov dec sbb lock imull cmp xchg mov sahf cmpsl jg (bad) repnz ret (bad) mov leave cmc mov dec pop rcrb inc adc cs push mov xchg scas xchg and movsl hlt popa dec push push lea imul inc shrb sub inc movl or into pushf leave test call pop mov push push dec scas xchg mov insb in ror testl adcl jge fidiv push pop cmp mov pop lods das xchg pop mov dec pushf repnz rcl cmp sbb add dec inc mov or imul push repnz and mov in mov shll cmp lock fdivrs xor cmp mov push imul jmp bound dec das (bad) lret cmp pop lock repnz inc sbb pop movsb xor lods pop inc pop sbb test (bad) jmp adc mov icebp in fwait push pop cmp dec inc cwtl inc test add les jg pushf xlat xchg iret jo ja (bad) fwait push mov mov iret mulb (bad) sti xchg inc cmp push imul ds xchg inc xchg repz aad aam repnz iret pop mov jb ss daa dec (bad) mov cs cld pusha xchg sbb dec pushf or jbe mov jae push pop test xchg iret test loopne push in pop sbb push lret cmp mov ljmp push xor leave jb add sbb rolb mov mov test icebp fist xchg mov in dec outsl out out mov imul movsl dec cmp and sub aad push aaa cmp cmp pop pop dec push (bad) leave lret xor cmpsl cs dec xor adc jo sbb out bound sbb adc idivb cli push inc xor in push dec dec push divl xchg mov jg pushf mov dec mov ffree pop push push int sub xor mov dec insl sbb jecxz iret sub adc imul arpl inc movsl outsb push popa sbb scas or jg aaa jmp negl (bad) outsl int mov cmp aaa xchg xchg ss daa pop dec cmp push inc or adc mov insb sysexit ficompl sbb (bad) (bad) out jns inc dec (bad) xor dec fldl and data16 inc movsl pop pop nop decb insl rcrl sub and or jo dec sub scas xor pushf jg je (bad) fnstsw mov or icebp jo pusha xchg arpl push psubusb jmpw sti pop jle sahf mov xor push dec inc (bad) cwtl fisubrl es js lds xchg mov xor (bad) xor dec jo (bad) bound sti push jo scas dec xchg out mov push movsl cmp aaa leave test cmp and (bad) (bad) push inc fcmovb cmp cmp movsb addb sbb add add sti pop lahf ret loop into call lret pop movl or pop mov mov pop sbb cmp imul pusha pop data16 loop fstps movsl mov xor sbb (bad) push push sub mov sarl out fdivrs mov aad (bad) scas ss xchg xchg lods xchg pop xchg js cmp aad das xor push mov xchg (bad) pop fs push out jns push cmpsl inc (bad) mov mov sbb pop cli es cmc push xor or adc stos imul dec jmp cmp mov ret ljmp mov mov dec lret lret out jae popaw ja int3 mov jp les cmpsl jbe,pn lock leave dec pushf scas cmp mov clc and inc inc dec ja lea dec adc hlt out dec pop ss out jb rorb loop add pop fidivl das paddd push pop mov cmc arpl subb pop cs dec loop sub divl (bad) stos push lret cmp mov xchg xchg iret mov ret adc std dec mov sti or addr16 inc das xor sbb sbb mov pop out push nop push inc divl mov inc icebp imul jmp xchg data16 fldcw jb stos imul aad push aad pop xchg repnz pop jl aad mov pop out repz into outsb jg mov movl add hlt ret fmuls aaa pop out cmp inc xchg and jl xor xchg test shrb bound cmp sbb and pop mov pop test cmp xchg dec imul faddp nop xchg pop insb xchg jg dec cmp mov imul mov in (bad) jecxz cmp jne sahf pusha inc inc and sub andl inc push adc (bad) lret ret sub jle inc lret bound idivb mov inc jo jl or inc fimul dec pop or fsubrl cmp adc repz pop sti ret inc jmp bound mov jg xlat jp cwtl xchg push sbb mov sbb outsb xor cmp iret xor addr16 inc (bad) int add mov jb test daa sbb out movsb sbbl cmp mov cs cmp dec mov sbb movsb jmp adc pop add daa and fwait dec testl stos jmp sti mov jg jg or mov fdivrs (bad) mov aam sarl movsl (bad) mov inc push enter or jnp fs xor push inc ss jbe adc push rorb push and sbb imul leave jb flds bound out lds sub and cltd dec push mov and (bad) loopne repnz stos and jne call test rclb push cmp (bad) dec cli pop adc out frstor cmp inc (bad) iret addr16 inc xchg cld int3 mov mov mov outsl mov mov aas add lret sbb inc ds andl (bad) and (bad) fistpll xchg ret xor mov in mov imul repnz into sbb xchg cli pop dec pop test imul bound clc inc push dec cmp stc mov xchg shrb pop shr sti push fst jge imul and lds (bad) out testl sti mov insl fsubrs fisub imul xor jge push add cli mov sti mov xor lcall cmp cmp test push cmp xchg add cmp adc lret ret inc lcall mov xchg (bad) fcmovb (bad) pop lea or (bad) xor dec mov mov movsl xor sbb add test in jl xor dec fstps sysenter mov ljmp push push test (bad) jbe jl les add mov xor inc mov adc icebp jl jb ds aad cmp cli sahf addl and hlt pop mov inc mov pop xor push xchg lret push cmp popf xor xor jbe (bad) scas pushf mov dec gs repz pop mov mov imul lods xor cmp (bad) cmp outsl mov mov mov or sahf cmpsb pop jb lods fcompl dec and int jb or sub adc imul xchg pop ret out jg bound inc stos dec mov andl les cmp imul cli test sbb jp xor dec lahf or pop (bad) mov aaa (bad) sti jbe adcb mov clc lret push sub cmp clc add out cmp jnp es inc cmp adc gs sub (bad) or push mov or (bad) xor dec leave adc loope mov pop in fdivrl dec cmpsb clc xor or js sbb mov cmp test dec xor ret cli pop jbe mov jns mov in sbb dec xchg les loopne inc cmp repz data16 jnp jb add dec icebp shr sbb dec call xor sub sub add sub jmp xor push mul daa ret fcomp das jl add ljmp stos js sub dec xor (bad) sti cs leave das divb push jp sub xchg jns mov lods dec cmp lret pop std insb adc lods lcall jb adc jmp jno movsl pop cmpsl ret ds (bad) aad rorl leave push xchg hlt repnz rol pushf mov inc popf dec or push imul or sbb in fs push mov out xchg mov inc imul aam dec loope shr pusha xor cmp dec cmp out xor cmp pop jl jl adc xchg jp or xchg cs mov cmp leave adc pop mov lret jne xchg sbb xchg pop ds (bad) or insl xor push add push shll lcall popa add dec inc pop sahf xchg mov sbb push xor lcall repz cmpsb aas xchg mov es (bad) stos leave dec mov mov push ja enter jnp (bad) cld jbe sub leave jbe sbbb add out shrb mov mov add push ret leave mov (bad) jg insl lret aas fsubrl jmp xchg in push adc add cmpsb pusha inc mov jns push outsb and cltd push inc sub sub std inc xorl and lods shll push pop xor jns lods cmp dec out jnp mov loopne or xor xor fisttpll fnstcw pop mov or (bad) bound call fild es (bad) lahf leave aam out dec pushf outsl cmpsb dec sub (bad) dec mov push xchg ss leave jg mov fwait dec in or sti sarl nop loopne add push jmp sub adc sti pusha jge sbb adc push mov out pop jbe mov into incb sbb leave mov test ds push pop xchg dec push push scas mov movsb mov adc iret data16 out fwait arpl cmp (bad) icebp addl jg sub lretw pop pop mov and out fucom add inc xchg orl lock negl cmpsl and pop in out sub inc pop push repz inc pop push repz inc pop dec cmpsb iret (bad) into aad mov jno xor and mov scas stos movsb scas mov lea repz (bad) data16 not xor mov andl mov add repz not out scas (bad) dec add out flds test xor xor pushl xchg daa sub mov xchg push jg out cs and mov mov imul ss adc add int and (bad) mov pop lahf int mov stos xchg sub pop xor adc xchg inc push stos or sub mov aas cld stos (bad) icebp ljmp jge in lret int3 sbb stc ds into movsb dec repz jp (bad) xor dec mov aas push inc fdivs xor in fadds mov leave (bad) (bad) push call dec push mov jo shlb outsl outsb fldl mov in jl into (bad) daa fist mov loop popa inc mov inc mov lahf sbb or leave ja nop xor mov dec lods rcrb enter movsb cmp dec sub es outsb adc xchg mov mov (bad) xor xor aaa sbb js push mov dec gs pushl mov das in lret pop repnz aad mov jmp jp,pn test mov loop or pusha sbbl pusha or repz jae cmp mov (bad) xchg sbb enter lods inc inc imul imul lods push (bad) into icebp pop insb dec jns mov in mov and dec (bad) divl sub aam push pop fcoms (bad) es subb inc sub lcall das loope pop mov mov sti nop push dec pop testb sub out fisttpll es pop daa mov pop stc inc stc aad xchg mov jnp mov test mov pop ret cltd (bad) xlat imul jl xor sub mov (bad) mov dec data16 pushf movsbl jnp mov rcl jg mov dec sti into mov notl push imul (bad) sbb cwtl arpl inc sbb push push ret xor bound cmp iret leave pop repnz push jbe sbb lret orl push dec stc loope push inc mov push add xchg in imul cwtl cld push pusha scas lret cmp ret fisubr pop mov push leave push or push mov outsb pop cs lahf lcall cmc push ds sti stos sub jg pop xchg cwtl pushf xchg loope aad stos (bad) addr16 (bad) dec ljmp jb ror fwait enter test xchg aad push (bad) jecxz dec push pop pop inc repz or out sti inc loop xorl cld jns dec ja dec adc jmp dec addr16 ja pop dec loop push ret pop scas (bad) stc push outsb add fimul push mov xlat mov lahf in lods scas cmp pop out sub fisubl or sub pop insl or mov cmp dec mov lea cltd push push fs idivb add jns leave movsb sbb fmull push es push (bad) fcomps and jg das jb mov pop jp arpl nop mov sti or mov aad inc jg je and loopne jmp out jp stos mov pushf iret repnz aad (bad) stos or pop pop (bad) mov fstps (bad) lea or (bad) les pop jecxz pop add loop dec into enter dec pop repz dec sub js inc pusha fs jb pop test mov lea pushl pop loop push pusha inc test (bad) cmpsl mov (bad) push (bad) into cmpsb dec inc aad test add fcomi cmp cmp inc cmpsl mov call (bad) or lock cmp sbb std inc or xor sbb jb sti outsb cmpsb ja add push (bad) push int jno mov jmp jp test mov cmp mov cmp leave lods ss jmp push mov mov divb daa ljmp fs aad movsb (bad) loope stc leave pusha mov or mov mov imul div int3 movsl lret sbb lahf jg rcrb pop dec mov jp add leave shl sti mov or leave js test dec aaa ljmp sbb cmp (bad) aad jae in jge mov call or (bad) bound fld xchg dec sbbl mov (bad) aaa out add das rcrb movsb pop pop jmp cwtl iret pop pop sbb movb das aad aaa fist jl popa push lret ss in cmp rcrl push cmp jns stos dec jle sub int xchg mov cltd and sub stos xchg rcr cmp in dec test pop fdivrl je mov mov push in jnp cmp push dec or adc aam jbe mov push and cmpsb mov mov imul les das sbb xchg stc jl stc aaa leave aad xlat adc mov mov lds loopne sub jp subb das (bad) hlt push jno inc mov xchg pop shrb bound inc xchg sbb mov sbb into lock mov (bad) clc stos push repnz push pop lods cltd adc lods loopne fwait pop mov sub add ds cmp test jns out xorb pop inc fcomps xchg loope mov mov dec jp dec mov es cmp inc ja cltd andnps jl bound jns xor fwait mov pop push add jl cmpsl (bad) out lcall push repnz cltd imul dec pop push cmpsb sbb stc pop jg inc dec outsl leave loope sbb das sbb cmpsb mov test adc stos cmp inc jns aam cmp scas std int3 fucomip fstpt pop fxch pop push sub out outsb dec mov clc push jno dec call leave std adc push jae push scas daa out jge push push stos push repnz jg arpl leave sahf mov ljmp jo sub sbb xor push cmp pop push in pop pop xor aaa mov insb int es mov cmp jbe mov adc imul jmp jb insb jne clc call cmp pop test dec repnz lds lods out mov add pop bound mov cmp mov mov xchg mov (bad) in ret sbb mov xchg jb scas mov xor and dec sbb jno (bad) les es test ja dec fstps arpl mov clc mov mov mov jl mov imul add dec cmpsl and inc mov bound ds inc aas cmp mov sub push push xor or pop ret xor or and mov mov cltd add cwtl or adc out pop cli ja jbe cmpsb mov mov sti push clc push andl std sub add jns push js mov icebp dec sub dec xor mov add push sti push sub jp pushf mov (bad) sbb int3 dec jmp data16 stos xchg out xor cs (bad) (bad) (bad) hlt divb push or arpl add pop ficompl xchg pushl shrl and sub sbb dec adc insl sbb data16 insb xchg ss push cmp jbe xchg out jbe inc out int3 pop cmpsb stos leave jge cs hlt pop das xor sub cmpl xlat divb push cld xchg push add notl sub arpl aas lods mov push mov jnp lcall outsb in aad ja (bad) xchg dec pop (bad) int sbb jle mov jp or and bound dec mov adc in push mov xchg adc cli movsb rcrl sbb dec push pop dec fs adc nop add sbb jne xlat pop pop or das xor sub lds pop pop add dec xchg iret lret popa mov popw aas lock dec or jbe ja adc and jbe push nop leave ja xor (bad) mov xchg jae pop xor mov jmp fiadd dec iret mov cmp add dec aaa js dec dec out repnz sbb mov subb xor enter cmpsb scas dec mov fwait aas add aad push scas mov sahf jnp xchg iret or fs push aam sarl ss rcll addr16 scas mov cltd and or pop pop leave ret push in pop int xchg dec (bad) pushf call aad jbe fcoml cmp jle mov sbb mov jbe (bad) lea lahf xchg decl fisubl idivb lret nop jp xchg push rcr scas sbbl inc inc cmpsb lods addr16 test cmpsb les sub test push (bad) out add out pop pop jmp jnp xchg dec lcall adc sbb pop or or mov lret js loop pop mov push out scas test xor icebp sbb or into cmp lahf push pop cmp or pop (bad) and rcrl xor js inc test ret movb mov bound jno cs mov aad mov adc notb loop mov dec cmpsl addr16 sub call push out mov sbb call push pushf or add sbb js popa test mov inc lods dec stc mov pushf or push push jbe adc sbb pop add mov mov and pusha aas in mov xor pop mov xchg push xlat iret dec cmpsb fdivrs pop (bad) test das (bad) dec call sub rcl orl xor inc sub pop jae pop ret ret mov add sub lret sub test cmp add push mov scas dec xchg sbb data16 push cmpsb cmp (bad) in stos movl int xor aaa cmp jg bound add iret inc mov imul cmp lret js bound jo lock push sbb mov sbb (bad) leave inc and bnd sbb ljmp scas mov or das pop or outsl data16 jp in andl sbb push inc out mov insb pop dec or sub aad (bad) lcall or imull int3 mov lock (bad) jae dec dec fsubl cmp repnz pop lret and jg push or jnp repz mov mov pop xchg jp in and xchg jg mov and or and (bad) leave testl xchg jb jne adc dec sbbl mov in adc xorl ss sbb pop call xor ljmp pop mov lods xchg mov rclb push addr16 in lds es test mov dec jnp in sub mov push or movsb mov cld sbb cmp repnz out add cmp xchg stos sub mov ljmp cmpsb mov andnps inc and sbb movsb (bad) jno outsl jp aaa (bad) xchg sarl xchg pop mov dec ror add push jns dec sbb xor (bad) or adc cmp int3 push cmp jmp ss stc dec std loopne das leave stos pop mov cmp inc sbb (bad) jmp dec lods xor pop popa mov xor mov movsl dec dec cmp (bad) js sbb push mov mov cmp jbe mov jg inc push popf mov sbb lret or dec xor jp cmp sbb std push sahf mov mov xor jns fdivrs xor cs cmp push (bad) push push pop sub les insb pop adc xor stos ret or out (bad) (bad) sti dec (bad) sub dec mov jl int sbb mov inc idivl pop (bad) aad gs sti fnop std push jo inc in or int3 ja fistp inc xor stos sub pop loop push in test outsb maxps sahf stos daa inc cmp xchg push (bad) mov pop push imul test mov add fsts xchg (bad) aaa cmp roll mov mov aaa popf cmpsl mov inc and xor fadds xor call data16 push iret lret leave push (bad) mov int3 clc js in pusha adc (bad) or mov (bad) xchg pop movsb dec mov push cltd out (bad) daa and (bad) jl movb aad xchg jmp loop fdivrl pop clc addl xor sbb xor fiaddl mov imul lret push jns,pn mov mov (bad) adc push outsl negb jns dec adc xchg sbbl fld (bad) sbb lahf push fiadd loop mov push and pop xor dec cmp cmp call repz (bad) negl mov push inc sub fnsave cmpsb stos pop mov out jg test js (bad) and call in insl mov jne stc or gs imul xor std push cltd mov inc aad bswap mov repnz push jnp sub aas sbb adc hlt push sub nop rorb mov notl inc and das push (bad) fdivrl mov add inc imul xor sub adc outsb push imul mov roll leave daa sub inc inc or push outsb mov mov jno jb imul das jbe jb mov repz mov mov xchg in mov sbb xchg cmp fnstcw jo xor and loop mov lret xor mov cltd dec imul cmp out fstl xchg push es dec fnsave movsb mov imulb out ds add aad pop xor xchg fnstenv mov jmp (bad) mov jmp ds push stos stos aad or push add push cmc jb inc jae fsincos xlat or xchg leave test cmp es std int3 inc into jne cmp cwtl je scas dec iret ss out pop lahf xlat inc pop std ds xchg std pop xchg mov daa aaa add gs or jo cmp cmp pop push aas lods push sub dec and enter mov and jo pop sub aad iret int adc cli pop insb je xchg mov inc cli notb jo jbe mov push and cmp push add cmp imul jg cmp mov push lods lea and fmuls cmp in stos pushl cli int3 (bad) mov ss pushf mov lock inc dec (bad) mov fwait stc xor fs mov or push xchg cs pop inc cmpsl ret fsubs out dec xor xor xor pop add sbb xchg sbb ret dec mov push popf ret push mov push mov imul addr16 mov call call es pop addr16 cmp dec mov addr16 push rcll sbb xor fwait repnz mov sbb jp and imul inc das mov movsl push stos mov je dec pop dec addr16 int3 leave mov decl xor mov js cmp xor fcmove dec xor dec mov pop push add push inc std (bad) inc test mov imul leave nop scas pushf xor bound jmp cmp sbb jle xor fdivrs xorl cwtl cmp loope dec xchg push movsb jo xlat stos mov insl jae loop jne and push dec test lds xor test inc xchg cmp dec add addr16 sbb cmpsl push lahf insb ss xor xor jge (bad) dec pop add push push adc (bad) dec int jge sbb and or ja jo fsubrs (bad) xor sbb loop mov insb mov dec shl dec lahf in lret cmpsb gs pop addr16 xchg enter pop (bad) jg dec (bad) xor jmp iret inc mov js addr16 pop clc jecxz fstpt push adc jbe cmp outsb into xor outsb pop xchg imul dec in push loope xchg and repnz cmc or (bad) pop push flds aad dec xchg dec mov xorl iret inc mov lahf lods leave data16 mov pop mov std push adc mov cs mov mov dec push xlat dec int adc adc outsb jbe (bad) push jbe test js insb dec mov test cmp mov dec ds or cmpsl lcall sahf jbe lret mov inc clc xchg mov lods jnp push sahf jae je jno xor add enter mov xor in call popa jge mov jle adc jae js sti stc sub mov test pop daa jp lds and mov rolb enter in cmp loopne iret sbb (bad) fsubs jbe lcall xor push dec mov je (bad) inc mov mov xor inc mov inc dec mov insb mov push mov dec sbb mov push inc pop mov dec push dec out mov enter mov push pop addr16 cmpsb rorb xor push in jne popf aam (bad) adc ret and pop cmp xchg push jg je inc cmp inc (bad) fnstcw dec dec fld sub add or push sbb les mov adc pop cli pop fsubrp mov sarl iret out jbe cltd xor xchg outsb leave dec mov add movsl imul lods cmpl ficoml addr16 repnz imul mov jg aad aam negl loopne and lods push and pop push dec test sub js mov loope movsb aad clc jbe jae imul xchg xchg adc mov in (bad) push xchg mov mov loop adc cld popa int xor stc cs xlat add and addl mov mov popl push xchg or jp test jmp push idivb inc out test sub jp add jbe dec sbb addr16 scas cli mov loop and fimull adc int3 pop push sbb (bad) xchg inc mov (bad) daa dec jecxz scas sbb jbe sub xor sbb ljmp lret or mov adc or sub imul push mov pop out mov (bad) jge cmpsb ja leave popf arpl lea cmc dec jmp jno mov inc cvtdq2ps loopne dec outsb pop push push pop call orb (bad) lods nop mov mov aas daa loop sbb outsb sbb mov cmp inc loopne cmpsb dec test dec ror and inc lock and pop shrb sbb jle mov inc mov dec xchg mov out ret xchg cltd mov cmp cwtl int push mov fistl jne loopne inc and leave pop cmpsb mov or stos xor ror mov or dec dec inc pushf mov fxch daa insb popa cmpsb cmp jle movb (bad) int3 iret mov in ret outsb addr16 icebp stc jp sub mov xchg add mov dec inc leave jae dec jl (bad) xchg or ret mov xor (bad) sbb dec (bad) leave inc or lcall cs pop lret xchg or sbb jp ret inc bound jb shll test sub aad scas in ljmp push arpl call push jne or mov hlt jecxz push pop adc xor dec or pop inc dec lods daa cmp out inc pop pop das jo pop fcompl mov cwtl popf adc sti push jmp imull sti test imul push iret ds cmp leave outsb cmp push orb sub push aas cmp call fisubrl sti xchg jmp pop xor inc ja,pn loop icebp inc sti sbb or movups adc inc cmp xor iret jmp lcall push jg or push cmpsl mov or loop push stos xor inc cmp add jmp dec jb jno daa sbb dec test push dec dec pop leave pop add xor dec in (bad) cwtl lret es and test mov push xchg daa sub xchg jmp dec adc nop sub mov rclb lret test cld sbbl stc data16 push xchg mov cmp and scas mov dec out (bad) xchg push cmp xorl das mov sbb push pop sbb pop sbb cmpsb fiaddl outsb loop stc adc int imul sahf cmp and xchg fsubrs lock bound sub mov mov jmp fsubrl test xchg jb pop leave loop add mov cmp inc pop or mov and xor sbb mov movsb test nop outsb jae out cmp movsb mov push dec stos jecxz pusha adc lods lahf popf hlt sbb jp inc data16 mov bound push mov aas arpl test mov mov push stc lds xchg ljmp mov pushf popf ds push adc ljmp xor sub mov push xor in pop fistl in jnp fs push push pop push dec inc xchg lahf leave stos xchg mov inc (bad) rcrb push add ds in daa gs and adc ficomp push sub dec andb lods jae push test cmp push jb aam add pusha inc mov divl inc push pop in ficomp pusha or sub xor xchg xor push push xchg addr16 dec inc test gs jmp or (bad) xchg sti aad jle jb mov lret fiaddl add dec (bad) cwtl mov jl mov push add xchg jl into cli jb pop push inc leave mov repz dec pop and cmp jle (bad) mov lahf xor push ds packssdw adc jg mov jbe shll xchg das test xchg orb xchg sahf loop test xchg mov repz loop jae cmp jbe sub xchg add mov adc push adc xchg into ss leave jle fsubs loop subl lock or cmpl mov cmp pop xor jge nop mov jmp ds xor cmpsl xor xchg mov notl pop cmp sub sbb pop mov jne leave push inc fbstp (bad) ljmp pop addr16 mov mov dec inc sub jne push das mov jnp inc aas (bad) cmp dec or inc stos fwait fs test or push (bad) dec jnp dec jns push sbb subb adc sbb cmpsb imul sbb xchg loop add and sti jb xor jp inc xor dec pop push sbb out lds cs mov jp jb adc push cmp jle dec je cmpb in (bad) jmp outsb cmp xlat jnp push cmpsb mov inc inc ja sti xchg scas or cwtl mov sbb pop int out inc (bad) cmp xchg cld dec insl fwait lock push cmpb ljmp sbbl mov das jecxz mov imul dec jmp int stos pop mov pushf add cmp mov leave pop insb dec push lcall jle jp cmpsb inc pop xor push sarb test jg inc lret xlat mov enter pop push cmpsl cmpsb pop (bad) mov jbe mov ret adc nop pop and pop aad push fxch loope mov loop shrb out inc xlat cmp cmp cli or insb push or lods je pop cmpsb outsl subb dec and xor orl stos xor (bad) jno jmp fnstcw in sub sbbl leave mov notb das fs sbb stos cmp daa pop dec mov jle (bad) out cltd outsw loop xchg sub sbb pop add daa push push sub xchg ss mov push ret pusha inc imul repz jg leave daa iret adc push or imul mov call mov pop lcall mov push sub (bad) adc jnp xchg (bad) das push fidiv (bad) imul icebp mov cmp xor mov (bad) fcomps cmp sti xchg lahf rorb clc ret mov jmp add mov mov fdivl add mov je push xor mov dec mov inc inc ds aas es and jno loopne sbb jae lcall pusha jnp lds pop adc push es sub dec arpl xchg icebp jbe fild outsb int mov cmpsb inc xor std scas outsb test or xor pop aas cmp xor sub dec outsb aas (bad) iret jnp xchg (bad) (bad) aas cmp insl sub inc xchg insb (bad) enter push inc sub mov push mov cmp movsb xchg sti dec push cmp pop testb sbb pop dec jg shlb pop mov pop xorl cmp xchg stos xor xchg push add jbe loopne pop dec outsl insl imul int3 das cmp sub pop pop cmpsl pop loop xor push dec fwait (bad) push imul inc dec test jge std pop xchg leave push int jae push pop xor (bad) dec arpl xor pop pop sti xchg mov cs negl lods mov cmpsb into fwait mov cmp lret jmp iret xor mov out jbe sub in pop jae or dec ss push dec sub jo mov sub xchg and xor repnz pop push inc inc imul daa popa inc adc xchg arpl in and ljmp and jg neg sbb xchg inc pop xor sti sub dec dec push mov dec repz ror test (bad) adc rep nop mov orb push pop xor movsl inc mov and leave sub and jns push es sub add lock lret dec add xorl xor in adc andl les ja addr16 lods and xor cmpsl pushf mov (bad) mov add inc adc lock mov fimul loop push ss (bad) mov and bound xor xchg das hlt or xor push in adc push push fmulp cmp das (bad) out inc outsl xchg (bad) je mov aaa jp andl pop aas movsl ja pop pop jnp cmp rdpmc leave jmp or push jmp repnz and aas jb sub push imul sarb adc clc mov repz pop inc jp sub aad mov sub mov dec scas xlat out jae out fwait pop jmp sbb xor mov sub push out xor push cmpsb sti cmpsl sbb pop add in jp (bad) cmpsb mov in add and dec ss stc jecxz,pn mov push pop xor or cmp pop inc cmp inc push int dec add mov cmpsb call das loope sbb inc lods push scas dec mov int3 icebp subb adc mov push jp cld sub add xchg mov xor orl fdivrp jg xor dec xor xchg jle stos pop sub int call outsl push sbb mov or mov inc dec mov xchg into sbb dec imul ss outsb iret imul mov inc dec aaa cmp xor mov add call adc jmp incb cmpsb dec xchg daa out sub xor cmp inc aaa (bad) mov push sbb out mov pop push push scas test mov shlb jle push cwtl inc insb call add scas and mov mov repnz stos push pop int xor adc push sahf movb cmp lock lret mov sti mov sub add dec xchg jmp ds push fistpll dec js (bad) into adc out rcll pusha (bad) mov data16 scas lret inc aaa push (bad) xor sbb inc (bad) ficom xchg adc subb lret addr16 xor push push adcl mov xchg mov push (bad) hlt int3 and and in or inc xor test push or pop mov push test push fcmovne cmp aam rcrl sub bound es fisttp sbb lea inc xor out mov loop inc cmp dec jb dec xor cmpsb pop aaa jp mov push jg addl dec sbb inc stc cmp sub (bad) addr16 jg dec add xor outsl pop adcl aaa cmp inc or bswap loop bound inc stos jg (bad) cpuid stos out adc push sbb pop hlt push out adc lods xor mov sub or inc cmp out mov xor mov xor fisttpll inc adc lcall cmp or mov push mov iret cmpsb jge lahf fbld sub push xor enter mov xchg mov cmpsl jnp out aas inc daa push test pushf dec jmp (bad) pop jmp sbb cmp jmp cmp cld addr16 pusha outsl push jmp imul lds std jmp (bad) mov sub cltd or mov das mov xor adc jo addr16 jnp or imul outsb xor test xor mov dec mov fcomps stc sub jb xor or push es add sub push insl mov (bad) call pop mov dec mov scas mov in (bad) or stos or sbb ret call loop pop mov dec jmp and push loop cmpsl sub inc (bad) neg outsl pop in add mov cltd adcl adc shrl aad in xor mov sarl sbb mov lds ss insl in sbb pusha mov cmp pop mov cmp fcoms jne test add inc xor (bad) pop sti cmpb adc cmp pop int loope xor cltd fistl insl popf les lods leave xlat xor scas sub and into in dec (bad) aas lret push popa sub mov push cld jmp mov push dec cmp push jae dec inc and ret mov mov loope cmp mull sarl das fucomp xor sti jmp lods icebp (bad) nop popf cmp mov (bad) fadd dec aad fadds das (bad) or (bad) dec fiadd stos xor mov mov nop or and adcl ds adc jbe fnop jo or pop xor mov push dec jp pop xor dec jmp jno inc jp fisubl fidivr pusha outsb push mov mov lcall (bad) pop js das jae orl cs inc xor pop lahf jb pop stos ret stc fstps (bad) pop xchg jg pop mov das rclb sbb mov daa (bad) xchg in xor and pushf cmc imul fwait lds movsl sub or push inc jns xor ja cmp push scas add dec mov dec das int lods mov xor sbb rcrl cs push mov sub repnz jb bnd push xchg push cmc xor push inc mov cmpsb add pop int addr16 cmp push pop mov test in jmp das mov mov (bad) movsb dec cltd iret scas cmp mov and cmp or test in icebp cmp (bad) cld xchg scas ss fwait jmp repz pop and mov aad lock xchg push aad mov xor dec outsb xor xor xchg mov xor push out inc add dec mov inc ss sub iret jb in jno dec jl mov or mov (bad) pushf outsl dec loop andl push push sahf pop xchg add ljmp jge push mov mov sub ss test push lea and dec mov dec cmpsl jbe test mov idivl cmp ja push xchg pop clc je dec adc push shr xchg jmp mov dec adc out (bad) dec inc pop sub mov mov movsb sub (bad) mov testl fiaddl ret sahf sahf fwait (bad) je adc mov mov inc je lea xor rorb sti add pop pop lock fs stc ja out je mov out addr16 mov xchg xor dec or sbb ja shrl pop (bad) insb adc pop sbb pop movsb lret (bad) pop inc mov cmpsb loop movsl lret int3 push add jmp jle test insl jns cmp inc xchg adc leave addr16 pushf sbb pop lret addr16 or pop arpl jnp outsl dec stc int pushf push addl lret loopne mov pop imul test adc fistp mov daa mov loop dec or mov dec push xorl adc ss xchg jmp (bad) xchg lods imul repnz out pop adc loop pop (bad) lock cmp data16 scas sbbl mov inc cmp push xorb mov stos stos push push imull sarl frstor mov sub jmp sbb negl and sbb adc dec xor jmp pop jae cltd and cwtl daa lcall push pop call mov inc xor enter cs xor sub outsb push ss jno pop clc stc push popa add cmpsl pop cmp pop inc jg mov sbb xchg bound xchg fwait mov test or dec ja in out dec mul mov scas xlat lods cmpl mov cmp mov and enter push out inc imul leave outsl pop test cmp adcb stos adc xor out sbb jmp push ficomp lods mov fsubl jnp dec loopne jge sbb jb aad cmp cmpsb rcrl pop sub aaa inc call push or push and dec je dec daa pop jbe jecxz inc jge imul into push sti dec jbe adc jp addr16 aad (bad) cwtl push adc mov dec push inc pop mov fdivrs int3 insb mov mov push cwtl jecxz je je sbb xchg cmp and inc jmp xchg xchg iret jb ss adc ljmp sti pop pop pop xor sub repz mov mov mov in into cs dec mov adc mov push mov popf pop inc xor ret jae cmp push sbb cmp jns mov pop (bad) flds das xor lods xchg xor jns xor cmp add dec je push movsb outsl ljmp mov push (bad) xchg pop xchg xchg cli in repz mov mov sub xor fstpl pop jl pop fldenv xchg push pop inc jp aaa dec sub push (bad) jae sub xor mov mov adc js dec les test outsl xor loope cmp inc outsl xor push mov jne jle dec cmp fistpll dec scas sarb inc inc stos cs mov setle jge rcrb cmp popa rorl mov pop cmp sbb cmc into mov jbe loopne lea push xor (bad) leavew fiaddl in push outsl dec outsb mov leave mov xor (bad) aad out dec sub scas sbb cli pop aad jae dec mov sub jns (bad) sbbb push dec repnz and stos jnp jg cmp adc dec jbe jnp xchg je or sub sub mov inc pushf sub iret adc test cmp mul loop push outsb sub inc js cmp and (bad) push or inc scas or scas push movsb and daa ss imul test push fs (bad) jge pop pushf adc push (bad) inc ficoml cli shrb cmp jb mov sti and (bad) jg pop lods (bad) fistpll pop rcrl push decb dec push jo jge cmpsb fiaddl mov insl jns pop or stos jge or aam out fucomi sti mov data16 cmp fcmovu adc inc int sbb (bad) in jl (bad) leave add jp ret push mov mov jmp inc in jl sub aaa scas jb mov jg dec sbb inc xor push fild lods fs pop cld push xchg rolb adc (bad) sbb pop mov dec mov pop push dec out imul pop mov sahf iret cmp pop mov wrmsr incb mov and scas dec (bad) adc clc jns jno ficoml mov dec or inc and xchg mov push and shrb out sbb dec imul sbb pop xor bound (bad) cmpsl jnp cld mov es fiadd mov inc fisubl insb daa je xchg lahf pop mov dec arpl inc xchg jo dec leave or mov inc testl mov enter loope xor adc movl mov mov pop into xchg stos cs call sub xlat aaa loop imul popa dec test dec cmpsl (bad) and leave dec jbe (bad) lock lds lods jle sbb xor pop jmp dec fsubrl push cmc (bad) roll out inc add xor add cmp repnz push imul mov jbe pop inc pushf xchg fcompl cmp pop jl jb mov in xor repnz xchg leave scas cwtl mov mov pop daa push (bad) push mov or rcrb jle outsb sub push jp in cmp pop and lods test pop jbe pop cmpsb ret jl adc dec pop xor ss adc sbb imul sarl sbb pusha sar jle jle push jb cli scas fisttp jmp add stos add iret scas outsl cmp pop mov mov adc lea mov aam out cmp xor movsl xor mov stc std (bad) clc push clc aaa fadds test enter dec pop xchg cmp pop call sub ljmp and xlat push xor xor push ds movsb into dec mov stos push ss xor ss mov dec inc jg jb aad mov cmp aad jg rcrb icebp stos gs into jae inc cmc js and outsb xchg xor ss xor notl sbb inc lahf dec jb dec jecxz xorl sti scas inc scas push and outsb jo dec adc jl aaa jle dec pop lea and outsl insb add jl mov (bad) aam push and out scas fiaddl adc mov xchg inc fldenv push mov es scas (bad) pop cmp and fldcw stos test pop icebp push test addr16 jmp jg mov xchg enter mov xchg cmp jp inc xor cmpsb outsb je dec cmp scas push jecxz movd mov std scas scas sti insl xchg jle in stos inc (bad) inc xor jb jle push add jo inc sub (bad) lret push cmp outsb and imul sbb push leave fcoml pop lods dec (bad) fnstcw cmp mov and push dec cmpb fsubp out rolb inc bound out imul cmpl fsubr jae,pn lods sub (bad) dec dec adc into out movsl xor mov ret adc dec in pop jae movsb (bad) jbe fldenv (bad) out push cmp dec or add dec (bad) mov or scas xchg xchg cmpsb cmpsb inc aaa xchg sub (bad) sti mov pop xchg adc jp and and sbbb lret xchg xchg es enter add stc aad inc es cmp cli xchg mov sbb xor popa imul stos fdivs mov divl scas aam jno and lods out shrb call pop mov leave add dec in xchg inc or xchg push (bad) negb inc pop pop lret loop pop jbe nop lcall test dec ds cwtl (bad) leave adcb nop adc in pop aad mov push lcall (bad) mov (bad) pop aas int mov dec test int3 scas and push sbb test jg ljmp or out test shll out sbb sahf dec popf ds dec jmp pop push xchg cmp xor sub mov dec dec inc int int3 sahf pop sbb jne inc or lods leave mov stos test cs sarb pop (bad) mov mov ja (bad) fwait stos in and fnstenv sub insb push xchg dec mov outsl fsubrp movsb ja mov jae xor insl fisubrl lods movsl push sub pop cltd leave pop mov call pop adc pop into xor xor popf in xchg jb mov xor sbb pop mov fcompl (bad) xor mov hlt dec pop dec inc dec mov fcmovbe ret push fdivs xor es sbb pop das dec xor xchg mov jbe sahf fisubl or jecxz loopne adc push push sbb pop adc dec pop ja cmp sti ss (bad) movsb test and mov lcall mov shlb mov loope push xchg sti xchg iret mov cmpsl scas aad addr16 (bad) addr16 xor xor (bad) movsb push aaa imul jle lock movsl je cmpsl cmp jmp daa push mov das push stos mov das dec mov outsb fdivrp test ret jg flds or arpl and aaa add cs xor aad sarl inc mov (bad) dec push stos mov daa push iret fisttp out mov pop stc cli shrb add bound xchg (bad) fldcw xchg dec jl enter lret sub call mov push cmpsb mov fcompl mov xchg in pop outsb push popf jae xor jne dec and pop dec sub divb test dec mov movsl rorl mov dec xor out mov push sub xchg inc mov mov mov in jo push rclb aad push pop inc jno outsb in ljmp xor adc sub push sub jl dec inc or inc or mov aas nop cs int insb arpl adc insl dec dec aas push loope (bad) idiv loop imul jl push fistl pop push mov loop incl mov cmpsb movsl adc sub push inc push mov jp jo sarl fiaddl sub outsb leave test pop aad sub mov lret fwait imull pushf dec or push inc dec out jo dec push aam fiadd aad inc js push push inc mov arpl mov mov (bad) sar ljmp sarb ret rclb push outsb mov (bad) dec out insb dec outsb scas add push (bad) push stc aaa jge dec or insb dec jne mov xchg mov jns push cmpsl movsb aad rolb outsl sarb ljmp pop cmpsb adc (bad) and test pop pop dec push sub das jl sti pop mov lahf ds xchg dec rolb stos ret push inc pop xchg add jp mov lea fnstcw mov pop (bad) jle add mov aam pop pushf imull pop cmpsl and daa jbe fiaddl insl daa fsubrl xchg sub jp inc (bad) outsb mov push sbb stos fs xor adc push lea js movsb jmp sbb lahf mov ret roll in in mov mov sub push arpl xor (bad) insb xor sbb add fidivrl inc pop mov mov xchg into inc jle fimull aam icebp mov leave adc pop and (bad) test aas mov push dec inc adc xchg inc out add sub add and push xchg sub adc ja ds xchg dec sbb xor in lret xor das cltd mov pop mov adc stos pop leave add push (bad) sbb mov xchg adc push orl mov pop nop (bad) insb loopne (bad) jecxz or sahf ror xchg icebp cmp pop sub sub sbb je cmpsl mov imul and push mov (bad) jb lret pop icebp cli cmp (bad) std pop loop popf inc adc sti xchg mov loopne add je leave jo test pop pop push sub xchg push int3 lret aad mov std sub push cmpsb leave add cltd lock jmp ljmp jecxz insl or jae and andl add push insb jbe sahf dec xor adc sbb xorl pop iret xchg inc xchg cmpsb add das insl push and aad cmp fnstenv sub push mov iret pop cs xor pop dec jle xor fnstsw lret xchg lods mov iret (bad) mov sbb ds sub lds movb sti xchg push dec inc cmp dec and je movsb push jns xor orl mov mov out pop xchg pop push mov push cmc insb nop xchg jne pushf rclb sbbl xchg imul mov jb lods iret sti imul xchg ss push (bad) fidiv inc imul fisubrl push mov insb inc jno mov push ret loop lock xchg inc jb dec nop cmpsb cmpsl jnp (bad) mov pop jnp fwait jns adc insb test mov shll jmp enter push jp xchg bound mov (bad) ss adc cld scas push add (bad) xchg mov (bad) jnp (bad) dec dec jg sbb into push pop imul int push cmpb mov test dec insb push jmp leave andnps jns mov aaa mov adc mov insl xor cmpsl outsb jno jmp jo or out leave (bad) call enter cwtl int3 push add xchg sub adc les pop iret outsl mov push jnp ljmp mov push rcr ret xor cmpsb xchg mov mov sbb test sahf xchg dec mov sub xor adc mov jl xor adc push adc add dec dec lods and in mov lea push out cmp xor mov lahf jno loope lds divb add movb aaa push jae jle scas mov mov lea test int ret pop fucomp into inc xchg dec aaa push movsb imul ds js addr16 jmp leave das mov inc jmp mov xchg outsl (bad) repz test leave inc scas pop pop ret roll andb push sbb and pop pusha out lock insb decl mov jno dec sbb aad xbegin push js adc mov (bad) in mov mov cmp loope adc insl xchg cld fldz jno adc jbe xor cmp testw js jbe test out pop inc mov and insb je mov stos in push push aaa push out xor inc sbb mov sub insb das pop (bad) gs mov bound aad fisubrl mov ret jp int3 es mov push dec (bad) inc repz out inc je imul test rol xchg andb (bad) or adc jo shl repz arpl fsubrs test lods bound sbb sub arpl arpl push dec pushf cmp pop sbb lods in (bad) js in dec idiv pop jecxz cs test xor mov adc leave inc jmp sbb js (bad) push enter stc ljmp scas out push lret xchg push pop (bad) das pop pushf push inc sbb loop pop xchg call (bad) stc jbe stc cmpsb dec idiv sbb arpl cmpsl loopne push test dec mov lret mov dec and jo,pn nop test sbb ss push int3 call dec leave mov push jl push (bad) scas mov clc es adc add push aaa mov sahf xchg pop mov hlt push sub cltd push hlt out add jbe lret test mov xchg addr16 mov xchg cs in hlt (bad) mov test (bad) xor inc xchg jmp adc aad mov gs jg jecxz dec jle cltd and test sti imul jb (bad) dec mov xor daa scas cmp jbe data16 in dec jb sarl (bad) scas (bad) xchg das mov test stos scas jp fcomps jge dec adc mov roll addb (bad) jns ret out leave iret xchg add negb mov stos mov inc and jno push mov pushf jnp outsb (bad) push push jb test adc pop leave mov mov and and js in (bad) ss inc jle sub sar sbb dec outsl fs scas dec int3 int3 and (bad) fstpt addr16 and js jae (bad) fisubrl adc sbb sti add cmpsb (bad) add push fsts push stos push pop inc scas js sbb push adc pushf inc dec pop push xor push je push mov sub push (bad) int jb sbb push cwtl pop pop enter sub push mov adc cmp sub mov sbb mov or xchg nop mov jbe pop jae (bad) jb es ficoml cmp xchg (bad) mov (bad) cmp subl mov jb in loopne mov mov cmp out dec xchg xchg pop sbb xlat lahf lds mov jno adc and mov fidivl jb addr16 scas xchg les fisub cmp xor adc mov scas pusha mov push cmp fwait into (bad) sub dec xchg setae mov test sub pop cltd cmpsb mov mov pop push sbb test leave iret ljmp cmp adc pop mov outsb mov pop incb xchg enter lahf cmp dec int pop nopl xor jno enter pop mov cmp stc shl mov aas xor adc lcall xor jp sbb mov sahf mov pop or sub call pop lods pmaxsw mov (bad) mov data16 sub (bad) sub jno cmp fstps push cmp adc mull outsl or fwait imul xchg cmp mov mov je jae and int cmpsb mov jns and and mov mov loop out dec in sti je (bad) (bad) int3 arpl jmp jle xor xor inc push inc outsl jle add jmp pop mov jae and (bad) adc add stos and adc mov mov leave out cmpl jmp push mov cmpsb or mov cmp imul lahf in cwtl (bad) aad jbe cwtl iret push adc jp roll or dec test aaa pushf push fsubrs mov nop push push sbb fs inc xlat cmpsb pop adc jo leave pop push pop inc daa subl inc push or pop and jb mov jnp in test imul outsb or jno fs lds mov cmp pushl xor push lock inc and mov cwtl sbb adc (bad) and pop sbb adc xor pushf adc mov mov stc lea std (bad) mov (bad) hlt cs aam or test fcmovu mov and mov adc mov aas jo,pn jb repnz cmp adc lods cwtl int3 (bad) xor (bad) stc adc lds pop xchg mov and dec arpl es cmp pop mov dec or adc (bad) int3 dec add repnz outsb (bad) es inc inc lret js xor sub lahf (bad) aad sbb int imul or lahf sub (bad) push dec inc popf adc data16 mov inc lahf cs push (bad) loopne add push test and outsb cmp mov popa sub lcall bound notl and int3 int add jb and shlb outsb negb mov push inc arpl aam inc sbb in test inc addr16 cmpsl imul jo in xor cmp and or mov mov lock adc (bad) mov or xchg aad data16 or jle lahf jns or push xor aad imull dec es pop mov sbb pop leave pusha mov call adc mov mov movsb push mov fcmovb pop push popa jo push xor inc nop xchg jge pop cmp icebp into lcall fwait lods pop lfs mov jp (bad) out outsb sbb (bad) or aad rcrb mov enter aaa cmp and push xor jo stc and js call (bad) mov cwtl rcll xor outsl leave les cmp in or outsl data16 jb bound jae adc xor mov popf int3 aad xchg adc stos cmpsl daa add lock incl push cmp cmp iret jnp into inc leave mov ljmp jnp jle cmp mov xor into xchg jb push ja xor arpl fstl mov stos cmpb rclb add dec and inc shll (bad) ss ficomp sahf jb loopne out leave push test jb mov shll push or inc jnp out sbb sub fcmovb mov fmull push and ds jo mov stos cli hlt and enter push xchg int or or pop (bad) aaa in loope addr16 (bad) iret orl loop xchg push xchg fwait je push lahf shrb dec or iret cltd int3 push sbb lock adc aam aaa sbb add pop in stos sti sbbl adc xor inc jae,pt call jnp inc mov jmp jl sbb dec lahf cmp ss add mov jge dec mov and ds inc mov dec xchg push pusha inc push mov insb pop dec (bad) in nop dec sub push push mov dec push test inc out sub dec sti std jl xor adc cmc push add cmp icebp mov sbb inc scas stos xchg jno stc fadds xor (bad) (bad) fisubl (bad) (bad) or jo jo movsl (bad) mov in dec jmp out jle or pop leave daa mov int sbb jp pop jne loope insl (bad) pop pop stos jno ss ds push xchg xchg jbe mov shr or ja inc jae movsb or adcl add test lahf xchg or sti push inc aas imul cs mov lahf sti sahf cmp or je in push call pop inc push sbb cmc cmp or sarl cmpsb insb jb pop mov int dec and stos negl enter add xchg add inc mov arpl push and nop addr16 dec sti add pop inc out imul pop repnz cwtl daa out cmp repnz push fs fldcw sub stos sub inc out ja or mov sub jge inc adc dec (bad) jmp pop xchg xchg add jmp fs and lcall mov mov fcoml xchg fisttpll jbe mov les pop xchg push testl jg imul push dec int push inc sub ret mov addr16 inc xchg (bad) aad scas mov inc mov scas out push mulb mov je repz xchg test jp push sub pop repnz incb rorb lods ljmp lds xchg outsl pop push ret add push jno aad push rol add int3 daa and pop jp adc mov jge into pop mov inc mov out sub mov or push add out std (bad) fildll jb dec loop jb iret xor in lods dec dec mov push xchg mov std dec sbbl jp mov (bad) adc xor sbb cld adcl mov inc push dec or mov cli loop dec xchg dec andb or xchg and (bad) shrb adc push and push ret inc sub int lcall sbb stos pop jp (bad) pop xor in dec adcb pop cmpsb xor cld test jae adc idivl dec es xlat aad jle idivl mov sub push cmp test xor sti xchg cmp adc imul sti mov (bad) mov std mov mov cwtl xchg sbb push das enter mov jnp mov call mov dec adcl lods sbb call orl xchg xor cmpsl cmc into jmp add sub mov or out pop mov or or cmp out js xchg push jo lods lds push test iret push loop inc xor aaa push xchg push (bad) sub pop pop and mov mov test ja sub jle sbb xor mov push and leave (bad) jg rcrb push mov xor dec pop or sub pusha jno popf xchg mov dec stc pusha (bad) mov sub pop shl notl inc ja xlat dec cmpsl mov mov aad xchg out imul imul cld stos jns cmp je jmp xchg stos stc fidiv jb andl shr sub inc or jno push out xor cmp fsts (bad) es lods pop loope or adc insb pop out jb fildl jno push imul dec clc out jmp cmp inc movsb cwtl push xchg fs pushf out mov setae hlt out mov add mov sbb fwait lods fidivl adc push (bad) cmp dec sbb fimul jmp mov sahf pop inc stos (bad) mov sbb mov xlat jne out adc outsl lock je mov xchg push sti cmpsl mov lahf (bad) push test sbb pop imulb stc dec into inc inc sub (bad) mov pop sub cmp sbb dec and pushf adc sub adc and jae lret adc push inc jns int jno xlat shrb ret inc enter inc jbe adc movups mov icebp xlat (bad) cmp inc fildll dec out lahf jo out push pop pop es in lods inc jo aaa pop or andb jae fldenv xchg sub xchg jno push jbe jne jbe pop test ja roll xchg dec push insl mov dec cmp or xor cmp nop xchg pushf inc enter mov jb and jo mov lods or fisttp inc orl je add add sbb das ja jbe leave cmp pop (bad) cs fidivrl dec jmp jmp in out inc lcall dec into jb xor test repnz lcall pop push leave xor mov cltd popa pop add in xor push adcl inc dec std cmp lea add dec inc adcl pop mov dec or (bad) mov negl jno (bad) jo mov sbb inc pop push jmp test sbb aam dec (bad) mov pop testl les cmp mov sub mov cmp jno sub xlat cmp je mov push jp lods icebp sub popf es sub jno xor daa nop inc imul pushf jg arpl addr16 bound mov cltd add jnp sub aad insl scas cli add scas and jb jae mov fstl aad shlb outsb pop push (bad) outsb addr16 outsb cmpsb xchg cmp mov je adcb xor sub sub jno pop mov ljmp lea fnsave cmp add xor sbb jnp aam imul fwait (bad) cwtl and data16 nop add (bad) jno jecxz mov lret rcl pop pop add sbbl dec cmp imul adcb cmp scas inc jge push sub mov sarl jb lods sbb pop sub push push popf inc das pop and out dec into mov out inc or add lret push cmp stos xor add xor xor inc pop dec loopne jne fcomip incb xor mov (bad) hlt mov fs es cltd js mov xor mov pushf jle dec aad xchg out xchg rcl push outsb cwtl inc outsl mov pop dec stos mov jo out dec outsb decb xor cmp stos stos inc lods dec jb das and push cmc outsb or lods jbe lcall dec mov dec cmp loopne fdivl add int3 inc add jle into add hlt loopne call stos test xchg jno and call stos mov out int3 lcall std (bad) pop mov push fwait sbb and lea outsl xchg out sub dec xchg push cwtl xor or dec cmp aaa test lret inc jbe add cmpsl leave divl dec mov (bad) jo sbb arpl fmul mov dec or and xlat repnz mov aaa int pop sbb pop push push jne mov inc push jnp xor into sbb push hlt int scas sub dec xor es or push out or push adc loop (bad) hlt push ljmp mov scas ficompl stc mov push jbe cmpsl loopne mov add mov arpl jge nop sub pop subl sti lret sbb ds shrb icebp cmc stos push sbb inc ret (bad) ljmp int repnz in or sub popf jle dec (bad) mov cmp dec pop loopne inc sarb lahf cmpsl push sub dec jbe cmp (bad) loop fstpl inc xor push outsb lret subl cmp int je push or int in or add dec or and test orl push cmp mov testb jb test inc cmpsb dec inc into xor es inc out ret sub insl jae,pn cmpsb jne mov aad (bad) test xor dec jo mov sarb push aad jge cmp sub jno dec mov ss clc pop push mov imul dec cmp pushf aaa aad cmp add xor xchg test dec rclb daa lock mov push (bad) leave lahf test dec data16 iret and xchg mov pop sbb (bad) loop dec fldcw lahf data16 jmp out and jbe pop mov push inc dec xor sahf idivb and dec dec mov mov jge sub stc inc jnp lock push loopne sub or out test test dec aas mov popa insl leave or bound neg inc xlat adc pushf inc mov inc jne push test push dec adc mov adc push iret push enter divl lret dec jbe stos mov sar mov push mov dec test fstl dec cmp mov mov shrb (bad) shrl cmp mov lret dec xchg int or aad ja push mov pop into lcall pusha jno sub ss cmpsb out mov (bad) insl mov int jno cmp cmp clc inc fistp or stos sti lret push jmp xchg inc dec mov int pop in adc outsl push leave dec and jb pop (bad) or in scas jo add (bad) adc xchg repz call imul fdivrp dec (bad) mov jo and ret mov jae mov lret out pop in scas rolb mov pop into leave jbe sub mov repz dec shrl dec jmp xor pusha mov sti aas insb inc push adc mov rcll leave pop fdivrs fldenv jmp mov movsl pop test leave (bad) hlt mov and (bad) iret test xor popf pop mov xor (bad) enter and and repz lcall xor test or ret dec stc xchg addr16 cmovne or sub insb mov mov je ss mov inc cmp arpl push add pop pop fidivl sub jae mov push es dec cld orl dec (bad) sub jp scas push pop xchg xor sub (bad) repz jbe shll and (bad) lods push out mov jle dec bound and sub loopne ds scas (bad) aaa mov xor (bad) pop mov dec jnp jmp sub jg popf xor jbe inc cs fstpl xor jns repz cmp mov fidivr enter lea cmc inc sub pop das icebp repnz jno inc ret pop and jo cmp dec imul pop jp dec xchg insl lods lret pop mov outsb jns,pn pop pop cmp aaa xchg pushf xchg lods popa mov jp inc stos xor jmp movsl (bad) cltd push adc test dec (bad) icebp aas dec test aaa dec dec sbb ja push ja sub leave fistpll adc cs insb mov pop or cmpsb ss lret ja insb dec mov cli popf insl outsl mov sub imul mov scas mov xor cmp aad testl fisttp push loop insl xchg jp popf fidivl add mov orl pop sub inc inc aas mov mov dec add mov mov sub pop add (bad) int3 adc stos and pop repnz dec or mov cmp gs dec cmp push test xchg popf or ljmp cmp mov sbb inc inc inc adc sbb scas std xchg ret cmp test int arpl xor ja js lock push pop sub lret cmp cli push (bad) adc xor fxch testl adcl int pop aaa cmpsb push aad or push jnp mov pop or cmpsb addr16 adc push (bad) jno pusha mov push mov aaa hlt dec es jp pop push xchg nop push lahf mov mov je dec mov ret push adc push mov inc popf lods adc test push leave int ja (bad) ss mov and inc xchg or mull and outsb dec mov movsb jge test xor cmpsb cmp or daa mov daa mov scas xchg (bad) es int cmpsb popf mov mov cmp jmp jle dec bound (bad) jno jp pushw xchg cmpsb cld xlat sahf insb jnp dec sbb es sbb mov fbstp pop in out mov sbb int ss out (bad) (bad) push stc jle or sbb and xchg jmp push ret dec jmp lods lds jp xor outsb addr16 push xor fs repz mov dec push jmp push ds aad dec (bad) icebp cmp mov (bad) xor jl std dec and scas jns ja loope add mov aad jnp jo fbstp imul mov lock or jno jno inc dec mov fnstcw cltd cmpsb push push scas or daa push lods dec or push test (bad) jecxz push insl sub adcl iret out sub dec add ja (bad) cmpsb lods lods mov push imul outsb or push push dec or mov negl cs js js dec xchg out cmpsl xor pop push push enter xor cmp dec pop inc pop mov enter mov mov int (bad) mov pop inc xorb out ljmp adc aas mov test pop jle aas (bad) out icebp iret mov mov sub add lcall stos sbb xlat idivl mov sbb push data16 jl mov mov mov je bound jo mulb mov push das mov cmp pop dec inc mov cmp inc inc lcall jmp jmp xchg stos cmp lret mov or jg repz push push mov push inc iret xchg add incb mov icebp bnd sti dec loopne mov cmpsl hlt addl mov sbb test test add int xor adc or out divl (bad) push aaa sub add cli loopne mov sbb das (bad) dec mov (bad) iret outsb xor aad (bad) pushf lods test mov sahf out dec lahf cmpsb pop repz fsts adc test add push push jns push mov sahf xor dec rcll jp rcll popa xchg test and xchg test fstl or adc inc (bad) cmp inc pop shrb xchg dec rorl arpl das add addr16 cli inc push jp pop popf pop fwait cltd fiaddl mov ret dec clc sbb jl out jb lahf imul data16 sbb mov lods out bound jnp out mov out gs xchg lret (bad) jmp push lahf (bad) addr16 inc cmpsl inc imul adc rorl sub add jmp daa cmp push std cmp scas bound fcom fistl out repz lcall inc mov and jae nop arpl mov sub sbb je mov (bad) pcmpgtd ret inc mov sub cltd popa jle dec mov ss sub jne fstpt neg inc push sub mulb add mov jb mov and sub fwait push pop clc jp sar inc enter aas cmp aas lods arpl jo testb adc sahf jg mov lock lods (bad) fcoms lods not lods arpl add mov sub dec lret pop xchg mov mov out cs leave adc lods hlt lahf and push mov push pushf and test xor mov aad jb out fnstcw out mov pop shr push mov mov push ret adc cmp sbb ja pop dec xchg and gs xchg cmpsb sub aad xchg or lret pop test cmp push stc dec popf imul sub inc into leave dec test mov outsb mov jp xchg clc scas fcomps push mov scas pusha imul mov jnp cli call xor stos add push fwait pop pop xchg (bad) int xchg sbb xchg jmp outsb fidiv inc es scas out andl dec jmp push inc sub dec negl add js imul fisttp push (bad) sub sub dec mov aaa mov jp dec repz xchg lods mov sub sahf sub ss push adc add adc aaa cmp add jbe sahf inc (bad) fidiv pop jnp es fucom insb jne cmp mov ja fisttpll test mov sar push sti ss lahf (bad) dec jge clc sbb add mov in jmp xor adc push jnp out lret or push out mov and fwait push mov dec pop insb cmp fldt push mov lret cmp xlat lret mov popf mov cmp insb fidivl sbbl pop mov xchg dec test loop int xor cmp inc ds xchg fxch cmc insl cltd das ss idivl add jg into (bad) dec imul data16 push rcrb ds stos loop xlat pop (bad) hlt jae or mov sahf arpl scas xchg iret xor or cmpsl cmp outsb int dec jle dec pop push std inc in mov inc jp pushw inc sbb sub jb mov inc fmuls sub insb dec sub shrb fmull xchg and pusha push or cmp mov mov and xor jno loopne mov xchg pushf pop inc dec jl xor or cmp xor imul daa test lock jmp xlat push xchg bound or std daa outsb sti fisttpll setnp push push dec xor scas sbb ljmp out push mull sbbl (bad) aaa jae inc movl cld or pop enter (bad) es testb dec dec push daa and mov aad (bad) ja data16 dec dec sbb out in push and or test psubusw ss pop stos sbb rclb mov jbe xchg ss mov repnz cmp pop dec test dec push xor pusha mov mov mov dec xchg lock sarb mov sbb xor pop (bad) sub mov daa inc pop mov aaa cmp xchg dec push xlat lock or inc pop addr16 sarw fwait pop push sbb add orb cmp mov dec movsl dec cmovl pop sub dec (bad) pop sbbl negl jae cmp cs lea loopne cmc and cs jae mov jb adc sbb fcoms or push jo (bad) adc add xor daa sbb lods mov repz sub sbb inc cmp and inc shr sub mov dec out lock xor sarl push mov jmp xchg cld out xor jp jb cmp insb lret push (bad) daa arpl push lcall stos dec sbb mov cmp sub or (bad) aaa xchg (bad) negb lock push sub dec imulb aas ret icebp sbb inc movsb xor (bad) mov in dec outsb scas das mov and sub scas jb push enter out into push jns cmp hlt lahf in pop pop push push dec inc cmp out sub push aaa pop and sti pop xrelease sbb data16 sub lods cmpsl loopne or cli xchg push aas push shr jp sub push pop push xor dec jle int3 jl jns imul jo das add cmp adc repz dec inc fwait outsl pop sub cmp icebp pusha mov arpl push push lret test dec aas jne ljmp inc loope in sti or dec jb pop pop lods dec rorb sub push mov jbe mov and clc pop out sti mov lcall out ss dec push cmp pusha (bad) push pop xor lcall rcrb cmp test jae out cmp (bad) or mov iret sbb jno addr16 cltd les jp sbb cmp add dec inc aas xchg (bad) and js pop test mov (bad) cmp mov sbb test mov push jns mov mov jae ja cmp gs iret gs (bad) dec xor out dec jle leave pop push cmp out stc fwait mov cmp ficomp mov sbb pop aaa das or sub pop cmp mov aaa push mov (bad) push inc iret cmp pop jp sub mov add cmp sub das ds adc out in js xchg xor es bound clc cmpsb pop stos sbb outsb imul sbb (bad) inc (bad) sub or push fsubrp push dec pop stc lret xor mov sbb jo pop test divb xor adc rcrl lock (bad) push mov mov push cltd dec xor mov jp xor aas out decb sub out push mov ret bound adc (bad) pop push push or ret mov mul sahf xchg adc int es clc sbb cmpsb fistl dec pop mov divb pop dec dec mov or scas xchg xchg daa xchg pop (bad) dec repnz and inc sub pop dec jp push pop out mov fcomps mov mov cmpsl adc shlb div out inc ljmp iret sahf insb fisttpl sti stos jp add gs pop idivl push lock pop test enter lahf into es fildll pop dec sbb push push ss adc pop sbb (bad) jg inc cli push clc dec xchg inc mov dec sub mov sti inc xchg inc addr16 punpckldq add sub outsb sbb cmp xchg scas jne xchg fdivrp jbe stos (bad) xor mov push push xor and in mov fisttp arpl cmp daa and bnd mov pop cltd pop dec out nop out int jg jmp dec dec test add notb cmc aam push push insb hlt pop mov icebp stos mov or sub das sti xabort scas and pop sti jmp sub popa test leave and mov sbb fisubl inc push mov leave test mov test cmp negl stc sar pop fstps pop rclb das mov stc jecxz sbb jp orl cs shlb cmp add fwait out cmp xor cmp cmp or cmp jae (bad) mov dec cmp sbb rcrb push sbb cmp xor xor add outsl cs (bad) pop or push and sbb xor mov push cmc add dec aas pop dec xor pop cmp jns rolb cltd aaa jmp int push pop xor sarb fdivrs popa sbb adc es cmpsl pop fwait inc nop sub stc imul std test push or das popa dec ss mov push jo pop dec adc inc mov imul les imul xor inc sarl mov adc insl xor pop mov cmp adc imul inc mov test aaa push test pop push and jge xchg test mov es pusha test push or cs push mov and adc scas aam dec sub mov hlt sub aad jae out and xor and mov cmp arpl mov lods iret jecxz cmpsl dec pusha outsb pop leave fstpt bound std pop lcall cmp cmp inc push pop dec pushf jp dec ss inc cli cmp sub sahf cmp xchg (bad) mov or aad push sub jp cmp daa subl scas dec sub jge (bad) cwtl mov push pusha jne sbb test jecxz cmp sub mov cmpsb decb inc jno xor cmpsl in sub push sub rorl mov mov (bad) ja push loope push cltd fnsave fsubrp inc adc sbb xchg push sub mov pop and ljmp adc and (bad) das mov (bad) repz pop movsb push mov imul ja fidivl loope pop adc in adc xchg call dec pusha ret data16 dec aas je nop jmp adc sbb cmp lahf xor loop xor fisttpl mov sbb lock push clc mov in or and dec lcall stos lret or and inc aad pop rolb (bad) jl push pushf sub mulb xchg jmp pop movsl push dec push (bad) xor cmp cmp loop adc dec test push pop sub cld test js dec jbe mov (bad) adc xlat mov cmp loop mov mov outsb push lock rolb fiadd jne push inc and add js jp mov dec dec xchg outsb test jecxz mov adc inc add push push add aad push out jmp out push data16 hlt (bad) xor decb lea int sbb js shrb jb movsl push lock xor pop mov dec xchg mov in or aad lret jg mov add cmp push imul sbb fidivr push pusha leave jbe inc add jo test xlat xor cmp fldcw loope xor dec jg stc das call cmp push out sbb xor es jb sbb ss push mov call mov or push jmp ss xchg and jnp or (bad) mov cmp xchg out std jle push xchg jp mov dec std insl inc pop adc ficom jne data16 mov push or loop push sbb pop push pusha push jp int3 or xor pop ja push pusha cmpsb jb sub pop pop mov test daa test lea push iret jb,pn add or rclb sbb dec movsl cmp sbb adc je,pn cs test aad int3 sub shll sbb xchg enter and cmpsb jp push rorb sub lcall jbe shll dec jp cmp js ja jp pop out and xor dec pop push mov cmpsl pop and rolb sti sbb mov pop idivl pop jl cmp pushaw insb shlb (bad) lods das adcb das sbb inc ss add jb inc aad test add jo aas adc pop jecxz cmpsb mov imul add push cmp mov cmc pop sti jg sub lret (bad) jg cmp inc gs push add sub cmc fcmovnbe mov mov lret stos mov loopne das out lahf push icebp scas sar outsb xor add push das push insl jmp cmp dec mov scas loopne mov iret ret or push or and (bad) mov push sub or dec lea pusha push add stc inc mov xchg scas jnp aaa and mov stc xor pop popa push int int movsl stos push push add movaps push ds sti insl and cmp xor mov dec (bad) gs push mov ja add sub inc dec aas or cmpsb xorl xor cmp jo inc mov es mov das push mov inc mov aas dec dec sub xor sub pop addb pop mov out mov shr iret sarb pop lret inc scas mov cmpb xchg out stos mov inc cs mov cmp dec push sbbb inc dec cmp addr16 jp sub sbb mov mov movsb cmp jle in adc mov push mov and bnd mov mov aaa adc icebp loopne pop imul out das iret (bad) fmul xor and sub xor inc mov jp jb sbb loope sbb aad (bad) lock ficom xor rcll out lock or into outsb sbb cmp movsl mov dec lret lods push js cmp test paddd jp jg xchg mov mov push pop loopne (bad) out shr (bad) leave sub rorl test mov stc scas inc call insb and sti stc pop subl pusha dec pop or lahf int imul push and int3 repz mov mov das ljmp insb lret and or das pop and (bad) cmp aad loop push icebp push mov lahf cmp je sub sub outsb lahf push repnz xor lahf sahf fcoms jb or mov out sub cmp xchg push es lods pop jmp enter dec pop xor in mov rcll test lahf cmp xchg xchg xor push xchg into mov iret mov sbb lock lret pop lods in ds out lahf jbe ds jb push add push test or call dec leave mov dec jb push xor aad inc aad es dec leave and aaa xor das jnp mov and dec aas pop jb mov divb mov insb frstor mov sti in jbe jne les mov mov xor test out pop mov iret test pop mov and sbb and loop sbb dec sub push icebp jge sub cmp or fcmovb repnz insl pushf stos daa notb ret bound cmp and test scas scas sbb cmp cmc xlat stos cwtl xchg enter pop sub jbe xlat lret out (bad) (bad) jo dec mov adc sbb movsb push fldl dec scas pop xorl addl adc mov dec fldl movsb or sbb movsl mov leave add xchg ljmp push cmpsl xchg cmp ficompl ret adc fsts push pushf xchg dec (bad) dec loope aas xchg enter cli (bad) enter mov mov imul in leave movsb push iret sti shll inc inc jmp mov (bad) pop mov or pop pop inc push push scas stos mov leave (bad) lock insl xor push push lods cmp sbb inc inc (bad) dec test pop cmp movsl cld cltd mov dec xchg imulb (bad) jbe sarl ja jb jecxz adc dec pop inc cld ja shr mov cmp inc (bad) or mov mov (bad) int3 sub xor adc fidivrl pop or pushf sbb and outsl jle sub sub adc xor xchg jecxz mov ret mov cmp pop leave test sbb jg mov fisttpl rolb stc ret jno stc pop push es push xor insb xor xlat cmp int fnop mov sub xchg leave cltd jbe je adc insb inc (bad) or pop ret xor nop clc push mov loope mov daa enter iret outsb xchg scas pop aaa xlat (bad) add jg lret mov cmovns mov loop shl mov adc xor je,pt sbb in loop sbb fmuls pop pop adc es mov dec pop jbe sub adc es test je mov jge inc sbb or push idivb nop stc xorl mov arpl and in sbbl call or pop mov sub lret jmp cmp es loopne das jb fstpl (bad) enter or (bad) leave lods inc test mov js fbstp and and (bad) add fwait dec stos fnstcw sub dec daa enter dec sti push jo pop cmp xor addr16 xor inc les adc ret pop out pop ret loop stc enter or cmp jp push jbe cs loope das push sub pop cmpsb aam addr16 es mov repz das mov sahf inc mov das or pop int fcmovnu jmp ja mov mov cmpsb rol (bad) dec daa fwait mov mov pop (bad) sti imul jge orl les outsl pushf xchg jb inc add fxch repz cmp inc in dec adc jnp dec add and adc push aad popa leave jb shrl test imul or fwait add aaa scas (bad) lar mov adc insl pushf push jo jns int sahf inc push cli push xor (bad) imul fldl imul cld mov aas fisubr inc fsubl in out cmc cli mov test (bad) cmp jl ret fist sarb leave mov and mov xor xchg inc ret mov and dec jg int (bad) sti aas jp cmp dec pop imul jo lods fwait (bad) mov mov out mov jb loopne (bad) call (bad) int or xlat out and fisubr testb sub sbb cmp out pop les sar or jle mov or mov scas cmp pusha jae maskmovq testl xchg dec or inc dec xchg pop test and xor adc pop scas xchg push out cld test xchg xor out add or and jecxz,pt push mov rcr js jb mov es jle adc leave inc jne je je cmp scas inc sbb movsl cmp stc sub (bad) out mov push bound adc stc inc inc std pop dec cmpsb (bad) ss xchg sti dec pop pop add in pop in ret ret imul fdivp add ds (bad) sti iret shlb xchg jmp add jbe aaa (bad) cs test jne xchg daa iret cmp in sbbl out fwait or sti lcall adc dec pushf push loop cmp xor call mov aad mov dec outsb dec xor aas scas sub sbb (bad) mov (bad) jnp sarb jp loope subl adc sbb sub (bad) sti lds jnp mov xchg cltd icebp ret rcr cltd sbb add push jne std dec (bad) stc notl rolb push cs stc xchg dec aad or fimull mov dec sbb xor mov inc pop movsl dec aad inc cs in pop sub and push fcmovbe inc mov lods bound jnp test sub out je das sbb ljmp add xchg mov xor pop or lcall (bad) cmpsb mov mov inc aaa push push sub mull jb (bad) call xchg movb lahf lods ja fstps addr16 add (bad) pop (bad) sbb aas pop xchg push cmpsl dec cmp or xor or jne nop scas mov jg jp push jb addr16 out lcall in jle (bad) out das pop out jg or inc (bad) add xchg popa push jae int fdivl sbb out rolb fcoms je push cld into pusha mov pop inc sqrtps dec jle jnp and aam mov sarb or fmuls mov pop in adc push scas rcrl push jne in mov jp mov and mov xor sub int3 xchg movsl pop jle mov jb addr16 xor jmp arpl or sub aad push xor sbb leave into sti shll mov divb push xor dec sti xchg aad inc xor cmp lcall push pop fnstenv and push xor xchg push enter adc out push dec mov into clc std adc sbb in nop and scas inc leave mov and imul cltd mov add nop push (bad) mov fnsave xlat sbb pop fistpl or std cmp xchg jle push inc les jnp insb xor mov mov mov movsl das inc add push inc cld sub inc test sub push (bad) (bad) pop sbb fcmove add jp aas jno movsl inc jp inc pusha mov fstp pop adc sbb or dec inc cmc fistl dec jle and jae push or cmpsb jmp add and mov sbb add bound dec dec push dec fcomi and or and addr16 mov shlb inc adc sar stc jnp xor movsb mov mov adc sub ss shlb dec mov pop sub and loope inc data16 fmull push adc dec je pop xchg jno lret leave push cmp and jae dec cmp xor addr16 int3 mov call nop jmp lcall arpl dec adc aaa (bad) dec in lds idivb and leave lret lret inc popa call stos mov or loop push jg dec xor xchg out adc stos push sbb push je sub jp rolb pop movsl inc pushaw push cmp inc lret sti test sub sbb jp cld scas pop add jae and das bound leave or jmp sti insl cmpsb jae push cs cmp scas in adc in xchg push dec cmpl push mov fstpt xchg jl insl and pop (bad) push mov dec push in cmp orl inc xchg push out cmp (bad) das inc mov int mov inc ret (bad) mov lret addb inc add xchg sbb mov inc call out pop jge out out fwait out ret fldl leave mov jg push push sbb xor cmc mov cmp in mov dec jnp (bad) push pop enter adc ds xor dec movlps jne push daa push dec js (bad) cmc sub xor cld mov sub nopl std dec jnp pop sub leave or or mov flds rorl push test mov ret outsl mov xor aaa fs mov sub sti dec test mov pop mov xchg pop or and outsl cmpsb push es jbe adc mov pxor ret jbe xor inc add bound (bad) mov sub and sbb cmp mov dec cs and stos dec or jae movsb and fsubs out push ss push add shrl (bad) out stos xor imul dec dec bound xchg repz call jne or sbb loopne mov add in jno rcll sahf or pusha sahf pop push inc cmp dec testl or movsl pushf bound or lods notl jno stos ds (bad) imul sahf sbb mov dec dec mov rcll and mov pop inc adc sbb mov mov dec mov xor inc push test or les andl movsb movsb dec cwtl push mov and push test sahf leave repnz scas out into (bad) jp leave pop dec adc add jnp or mul push dec aaa outsb (bad) dec aad cmp repz (bad) dec cmp sub fwait or inc cmp jns bound aad or inc sub stos mov jae je cld inc ret jp sarl xlat repnz sub xor jne sbb xchg push aaa outsb scas ret les dec ret sahf mov stos or pop adc or mov (bad) leave cmp xchg test push sbb in dec inc xor pop repnz push pop dec fisubr aad insb into stc mov xor dec mov rolb xchg sbb outsb stos pusha xlat outsl add and pusha mov (bad) xor pop or pusha pop loop ljmp pop inc inc fwait sbb pop xor mov jmp push test ret pop push sub adc iret mov das xchg xor cmc aam ds cmpsl xchg imul pop stc add adc lods dec outsb dec dec loop cmp add adc dec scas pop push orl jmp leave rclb adc loopne dec push jle mov sbb push pop xor pop mov cmp aas sub aas push stos xorb cs push out adc js inc scas ljmp add mov leave cmpl outsl dec loop mov orb pop loop mov aas mov jl xchg das sub sbb or shr sub test fisttpll and xchg sahf sbb outsl sarl addb (bad) adc stos sti xor stc int movzbl je mov daa mov push cmp jle ret mov inc ds fcoml (bad) notb lods push int3 jmp test fcmovnu xchg pop test addr16 or and fldcw xor sarb sbb test lret sysexit push mov cmp test xchg ret aam xchg fwait jo add mov push jl or int3 adc mov or stc nop and clc lods pop les aam or pop push inc es cmp or pop test or pop test push shll inc mov ret test cli outsb mov loop sbb int idivl clc xchg mov daa in (bad) out pop jne imul add ds jp inc xchg in test test inc cltd jg pop add imul sbb cltd sub cli cmpsl out add push lods daa cmc adc ds or notl sahf and mov mov mov mov inc pop add jnp sti outsb jbe dec es sahf fnstenv aad out sbb jp daa xor jmpw pusha call cltd fldl adc aas aad (bad) xor in mov fsub xor pop xor ljmp cltd into leave dec cmp sbb jb (bad) out xchg loopne outsb add stos into inc (bad) pop test aad insb hlt jp mov xorb push pop mov stos push add jae or into add scas sbb xchg push lcall push jb cmp fstps sbb pop jl in adc dec push cwtl mov inc inc cmp push scas push imull pop sahf inc push jne leave pop xor pusha repnz repz mov mov inc pop bound pop test aaa stos dec aad iret das popf test insl lods xchg or inc addr16 daa cltd gs inc push cmp call inc xchg test sbb in jecxz cltd pop push push or fwait pop push into imul push cmpsb adc ljmp dec pop xchg popa push and incb insb adc mov inc ss pop jl mov test sub add mov sti addr16 cmp mov jp cmp or inc mov pop lret jo iret mov push es pop inc sti mov cmpsb js sbb mov scas scas cmp and cld outsl mov or adc repz fadds lea inc cmp loop push sub aaa add mov pop inc sar jo xchg dec push inc sarl mov add rcpps aam or cmp aad stc mov scas fstps mov addr16 das imul lret (bad) ja dec lds mov xchg daa neg ja aaa sbb push (bad) lret mov pop es jns in (bad) or in mov mov clc test xchg push inc lock negl mov mov mov stos pop inc dec dec xchg (bad) jae leave shll xchg mov std mov xchg push fs out or add imul lahf mov lds pop pop inc add mov push (bad) in mov push popf or pop xchg mov xchg push std out test xorb adc (bad) in iret cmpsb mov dec mov popl xor push movsb push xor adc mov xor xor stos mov pop jbe cmpsl enter push insb pushf sub push adc mov push mull or (bad) out add cmp or sbb mov pop mov sub stos ds push outsb adc lods add out lcall mov stc dec push xor or sbb cmp imul and into sub jnp ret popf inc mov jo rcl test (bad) push adc ss lods dec incb int xchg pop stos sarb (bad) jo stos scas push push cmp (bad) push dec repnz (bad) cmp xor dec push mov or and xchg and sbb push pop and inc cmc inc push imul push cmc negl push dec dec in scas lcall arpl out imul or mov xor cmpsb sbb or popf mov push jp outsb xchg notl ja ret push inc mov sub push jp fcomps mov inc inc inc aas adc std decb movsl mov pop mov test dec test xor sub scas dec scas aad cmp and cmc push mov ss xchg ja,pn pop sahf jmp inc (bad) push dec mov adc aas ss push inc pop loop pop mov aad xor xor mov cs push sarl cmp loop das subl loop pushf mov sub mov cmpsb sub ficompl xlat mov movsl loope add push out and mov daa cmp add xchg pop insl iret adc das (bad) cmc out movb (bad) jg lcall into inc and adc sarb xchg mov imul mov mov cmpsb out mov (bad) pop leave movsb xchg insb ret (bad) iret (bad) lahf and sub inc inc aad mov iret xchg scas rcll sub pop xchg (bad) ret jns das mov sbb mov cmpl mov push pop ljmp push scas mov (bad) cmc aad test xrelease in clc scas shrl ds bound and push cld ss nop into pop jbe iret test gs ja ljmp mov jp cli sub leave adc mov cmp inc fisubr or adc ret cmpl and push inc or push sub aad ret xor bound loopne and cmp loop xor mov stos xor push divl ret add dec push inc sub push call inc loop idiv cmp sti roll idivl mov dec (bad) push mov divl movsb adc and push inc and imul xchg jns int3 push negl add push xor decb out cmp out sub mov shrl out sbb lods xchg (bad) lret neg jg sbb add dec bound dec imul xor (bad) in pop inc fnstsw push add or mov jo ds or es jl cmp pop cmp scas inc fimull (bad) data16 push lret xor xlat scas pop adc dec leave mov push push imul mov sbb xchg in push scas and leave and sub sbbl arpl lcall push popf or xchg mov leave mov and push pop inc lods orl jne in mov mov inc arpl cld fst cmc inc or or out pop data16 aad adc cltd ret mov jge xor sub fdivp or lea dec ds sbb jno pop ja lahf cmp jg jae pop addr16 mov lods imul jle leave sub test and mov cmp pop xor dec iret xchg in rcrl jmp bswap fisttpl add in fwait dec (bad) repnz addr16 xchg ret or sub jbe (bad) jl sti inc cmp mov push mov adc enter lret out or cmpl fcmove ds ror and pop cmp ret inc mov xor ret rorl mov mov ljmp mov ret mov inc aas ret mov inc mov out in sahf (bad) clc stos inc cmp sbb inc lcall jp sbb mov mov mov pop adc addr16 xlat je sbb mov jnp ror or jb push arpl cmp mov xchg cmp xor jp cmp mov imul pop or aam into sbb ds ss imul or mov cmp mov xor rorl jecxz xchg ret lds rcrl cmp jo push xchg sahf xor or lret es push inc adc or xlat in dec cmp cmp cld xchg test and shrl mov test mov push mov mov push xchg pop xor mov clc inc push inc fwait push fdiv (bad) fwait mov aaa rcr je sub mov adc mov out data16 dec xlat mov inc xchg insb ja push cmp cmpsl (bad) pusha pop mov outsb leave fwait scas cmp jno jmp jno or cmp int3 movsl out ss cmp dec clc cmp iret aaa inc xor push pop and push mov out pop divl mov push pop push mov or mov (bad) iret push cltd add push xchg cmp or pop mov ss and pop in lock mov fsub movsl jnp pop xor jae clc pop loope in hlt push xchg cmp jmp loop movsl dec scas cmp mov (bad) inc insb jp dec push inc insb pop (bad) dec dec (bad) inc insb cmp je push mov pop pop mov dec ja (bad) int3 push les push dec stos jp sbb ret mov sub leave push lahf ret dec push xchg jno and in test mov loop sbb pop aaa push push imul js das test js stos inc mov popfw imul in xor dec imul mov lods jecxz push push cmp jg test pop sti jbe xor stos repnz pop out (bad) sub repz leave mov mov in aad fmul mov icebp (bad) dec jbe push sarb leave inc icebp pop mov mov mov pop dec cmpsb xchg mov faddl xchg leave or fisubr loop das pop jmp cmp jmp jg pop fcmovbe movsl adcl sub push (bad) addr16 sub xor addr16 (bad) push cmp inc notl jp mov adc jmp mov jnp adc add xlat xor cmpsb push xor ret (bad) mov pop pop mov inc inc shrb mov sbb sbb jo dec mov pop out (bad) leave int3 outsl push imul cmp xchg and xor mov in mov push mov sub imul or and lahf push jge pop std pop daa aaa sub mov outsl movsb leave js xchg ljmp mov xor out push push out sbb in incb rorl subb sub das inc push aad mov (bad) fsubr aaa daa sti jp xchg xor push repnz and push xor fs gs cmp sub push test fwait mov aad mov pop and ss mov sbb nop inc push dec sbb leave inc aaa insb mov xlat faddp jne out leave cmpsb xor push stos shrl icebp jbe (bad) jg sub cs (bad) xor ja aam cmp cmp xor dec cs push inc xchg daa inc mov repz push sub mov movsb mov push pop inc and add scas xor push and and addr16 cmp loope xchg mov stos in mov std jmp push popa aad movsl fwait stos add scas lods insb push out outsl xchg adc xchg imul mov pop cmp scas ds or dec repnz fwait call rol dec inc mov ljmp ds mov add mov dec loope xchg pusha push fwait insl pop idivl out add and leave lahf jae or leave sub cmpsb jnp jno lods mov xchg aaa or stc (bad) xor cmp pop pop out popa js cmp rolb ss mov scas (bad) jae mov out cmp mov ret sub int xchg mov jg cmp inc in das add inc lcall xchg sub loop sbb adc pop or out imul adcl xchg leave pop mov and adc pop sbb cmpsb (bad) sbb scas xor cmp or in inc mov inc ss call cmp jmp lcall shrb icebp (bad) push push inc insl xor pop daa idivl sub and dec aad xchg xor xchg scas xchg add les dec std jg adc dec mov sti (bad) or js in and push lret outsl push cmp xor mov (bad) lret ret xor push jecxz fidivrl jle insb icebp cmp add daa sarl scas pop cmpsb mov fsts leave ret pop cmp or and (bad) pop addr16 dec nop test arpl out pop (bad) sub add ret and inc test negl mov lcall repz lock xchg mull (bad) vxorps dec inc hlt inc fwait imul mov out mov sub pop cltd fiadd aad or dec in test fdivrl insl add jp das out pushf nop mov sti pop dec add push sub jae push outsb test popa xchg cs inc in push cli sbb add fs int out sbb outsl inc pop cmpsb push (bad) sti cmc sbb dec jbe or pop and xor (bad) jbe (bad) sti or repnz fildl sub aad lods sub push xor sbb test clc xchg aad and lahf subl ja repnz loopne cs (bad) clc std jb pop lods push lcall fcom fistp mov push jae cmp sub jmp pop std out loop loopne xor or jp cmpsb lock int repnz cltd pop test inc mov test sbb or push xor ret mov mov xor push in out mov in mov call sbb pop (bad) fldenv adc cs xchg leave dec dec loopne nop and (bad) jo push (bad) iret sahf flds xchg or dec sti std scas aas fwait mov imul mov pop scas jg add test inc int mov cmp pop mov mov xchg xchg aad (bad) cli popa iret std notb push jp ss dec ja repnz dec inc int iret int3 ret dec mov test adc mov arpl in xorl adc test cmp pop or jbe pop enter cmpsb mov clc fidivrl cltd jno adc sahf (bad) cld dec jmp sub scas push push pop stc je pop andnps imul daa sbb fldcw dec mov pop xor scas or jbe mov test bound sarb adc cmpsl mov xor sub push sub push sti ror repz xor outsb call mov dec fidivl or inc mov into xor mov (bad) cltd mov cmp jnp xor xchg jp sub subl inc or (bad) out outsb jg dec in mov sbb jb (bad) cmp fnsave arpl enter sti addb dec rorl inc sub ds lods sbb inc cmp arpl push xchg jmp push xor (bad) das dec lods mov arpl int3 (bad) fistpl in (bad) fdivrl push pop and sub lret sub xor cmpsl ds cmpsl xchg sub es stos jl push test hlt cwtl fmul lret sbb stc enter (bad) out hlt cmp gs push je (bad) (bad) nop in jnp in cmc sub rolb mov mov xor jae mov test jg mov inc daa pcmpgtw sub imul xor push mov add cmp lock sub ss movsb addb push sti xchg mov inc es dec jne pop pop sub fsts paddb mov repnz fld cmc lock cltd inc inc xor sbbb mov and push sub dec mov xlat jbe lea loope icebp adc into mov lret dec jg add aam cmp sub cmp cs jg mov cld mov xor and jbe int3 aad jmp mov mov call push test inc push pop lea mov fcmovu dec es xchg test push insb dec dec add cmp aaa aaa stos nop mov xor and ljmp fnstsw jns and cli sub packssdw sti pop pop push addr16 mov xor cmp dec and add stos sub jb dec xor jae (bad) xor xor fidivr dec es dec dec sbb aas jle fisub int out jb fiadd iret lock push (bad) in outsb (bad) stc daa xor sub cmc out in lahf push stos dec or push and mov out sbb mov mov scas pop jp pop or xchg repnz loope stos and dec xchg xorb sbb int fistpll (bad) clc mov or pushf gs (bad) sbb cmpsb icebp addr16 dec (bad) scas iret out push xor pop enter xchg lret int fidivl dec repnz out jp or xchg dec lahf insb scas sbb adc dec jbe std mov push mov imul xor push jo ret out sbb test (bad) xor pop push les cmp arpl mov push lea add imul test jo pop fidivl push and imul cs in sbb pop dec sahf jb fistp mov out mov aaa lcall mov sbb jle mov mov dec inc dec es and cmp lods mov jg cmc dec push jae negb sbb xor mov pop fistpll jo cmpsb jnp daa notb push (bad) aam (bad) aas (bad) stos pop jae inc jb addl mov loop movsb js lret jo cli sub fwait mov lcall cmp leave jge adc shlb outsb lcall mov lret sub jnp jmp mov mov push (bad) (bad) dec mov or inc dec jle das lcall sbb push scas lcall mov dec cwtl add pop mov cmp or push (bad) test dec iret dec mov imul out out mov sahf int3 bound cmp adc ja push cltd dec leave ljmp sub cmp and pop jbe xchg out cwtl orb imul movsl das cmp jb loope or lods mov das xchg jnp xor out cmp scas cmp pmaxub dec xor (bad) fwait loop and xor shrl dec dec mov popa ja js jl or rcll mov xchg enter push pusha outsl cmc inc push inc les inc xor and aas mov in or mov inc push (bad) sti (bad) je mov sub xchg inc pop daa fidiv mov mov mov roll sbb leave stos xlat sub jb or mov mov sub insb jle lods push add fldenv or xorb cmpsl sti cmp je shrl scas mov xchg and cmpsb fistp cmova mov mov mov sti dec mov popf popa mov das scas test (bad) dec aad leave sarl lahf push mov add pop daa es inc dec xchg jmp ret pop inc inc aad add and dec jecxz push fsubrs push leave dec adc sahf xor pop popa ss and aam adc call mov and mov sub xor dec inc lock daa pop sub jl call mov sbb or push push test sbb clc push leave out pop mov pop cmp fs mov push jg pop shl lds push shrb pop sub push xchg push push jae mov int add adc pusha sti lahf sub inc jp adc iret test in xchg shrl dec in inc jl addb aaa xchg lret fisubr push loop,pt fnstenv int cmp cmp pop dec int3 mov jbe lret adc aaa or jl out cmp pusha cmpl xor inc push pushf sub xchg or pop das test add push and inc sub add cmp loope (bad) cmp loope mov cmpsl mov mov xor insb add xchg das dec add sbb das dec sbb pop sbb jmp mov outsl dec dec xor inc iret dec push sti ss decl cmpsl jmp sbb lcall ss dec int pop lds cmp (bad) cs dec sub out outsb and test mov (bad) enter pop push and jb push push xor pop xlat js movb jle int mov shrl push mov push pop aaa dec imul add leave cmp out cmpl and imul dec aas loope push test aaa data16 inc xchg out jp orl inc ret xlat sti (bad) xor jle push in int dec dec sub push test movsb cmpsb outsb js push ss (bad) sti sahf sub xchg insb out pop repnz mov push cwtl fmull ja scas das pop mov dec cmpsb lret das pop cmpsb jecxz jmp or mov das stos pop mov pop cltd jecxz out jno loopne (bad) leave movsb adc cmp mov pop imul xor loop (bad) outsb call dec mov rorb sub add cmp cmp jae adc xor push stos out sub notb mov dec dec (bad) dec cmpsb aam data16 cmpsb inc rorb rol or jg push in leave jl clc ret addr16 out out les imul sbb mov push inc push insb test cmp sbb lods sbb ja dec insb cmp or scas cmp or sub jo mov adc lret call add cmp and mov jbe jp or inc rcrb nop rcrl dec lret mov or xor sbb jecxz push jns and es int add outsl or inc and pop test js or push add adc or clc mov inc sub jle fnsave sbb jl inc mov out arpl push dec inc lret negl push sti fildll fisub ss and jo cmp insb dec jb xlat add xor sahf push cmp xor sbb out jge lea dec scas adc pop mov jmp jns mov int ds out (bad) xchg js fisttp jl outsb incb sub test cmpl loop nop pop xor decl dec mov cmp fimul and cs aam iret sti xchg (bad) cld mov (bad) enter pop and mov sbb sub fwait arpl insl xlat ds dec or daa out mov (bad) push lock sahf lahf test adc dec sub pop push cmp shlb dec in cli mov jb push inc (bad) push jl out out xchg cli dec mov imul or imul arpl xchg mov ss cmp pop stos push push push imul pop jae loop ret jnp cmc jno sbb in add repz pop ret xchg jb dec ficom inc jmp xchg ret (bad) in dec push cmpsl aaa out push enter or jns out xchg pop jb stos int and cmp xchg xchg jle (bad) daa fadds (bad) daa mov dec xchg push cmpsb jle ss lahf mov mov stos (bad) xor inc and cmp cmpsb push mov fbld push mov mov xchg xor stos mov pop pop mov pop lods push mov neg jns sub leave out aaa fwait sub xchg fcomp dec mov nop ss ss bound sbb rolb mov lods dec int3 sbb push test int inc popa sub out adcl xor daa inc inc cs aad and ljmp lret push mov xchg aad or aad dec movsl mov ds mov std stos iret mov push js decb cs aaa cli sti push insb out mov fdivrs fiaddl (bad) jg bound shlb outsb xchg aad pop mov mov pop cmp xchg push pop sti mov gs cs sti and cmpsb (bad) bound sarl push pushf jg push sbb out std out xchg and cmp outsl mov adc mov cmp sti push mov push cmp cltd cs addr16 shll lock jmp mul popf sti (bad) jnp (bad) test shr push nop (bad) jp adc push push loope lret pop dec iret inc stos ljmp xchg fistpl sub out loopne mov lret xchg mov pop push std or (bad) adc dec jle repnz push jmp cmp dec icebp inc pop xor jbe mov push imul fimul xchg int3 jne lds push cs cmp sti mov aaa mov out test aam test cmp enter (bad) cmp adcl faddl cmpsb jcxz adc mov push xor xor scas or cmp xchg sbb (bad) lock mov jl pushf jns xchg dec pop xor inc pop flds cmp dec mov scas cwtl fs out jl lret mov out cmp (bad) mov mov pop jb mov pop push push mov lods and lcall dec sub in and jo push jl std cmp int (bad) push pop daa jg iret and cmp cmp xchg sti pusha test jb add or leave pop dec bound sbb es cld add test pop add sbb inc lods push jp sbb ret lret imulb into (bad) ja iret push mov mov inc out or fcoms (bad) mov pop loope in (bad) or cmpsl or xor or dec and mov push cmpsl lahf lds push push pop mov dec imul dec pop and imul fiadd insl lahf sbb test cmpsb enter aaa cli int lcall mov adc in jo jb (bad) (bad) xor mov outsb stos ss inc cmp insb mov leave xchg mov daa xchg xlat test mov addr16 jmp outsl popa inc push nop scas pop adc mov lret xchg lock addr16 cmovb pop and jbe sbb insb push fimull test ds fsubs mov in xor jnp xchg push push cmp mov ficompl cmp xor popl imul stc sbbb mov push jmp xor push and leave (bad) out out mov idivl jns out daa adc xchg mov aaa pop ljmp cmp enter sub mov dec aad mov outsl jae mov push pop fist mov test xchg sbb lods test testl cmp outsl sbb push loope addr16 mov xchg mov cmp pop sub push push arpl hlt aaa out addr16 cld test pop fiadd ss sub ja cmp pop xchg mov addr16 lods mov ja pop into cs call and int shr jge mov sti dec stos add xor sub pop adc cmp mov outsl and jp mov in dec outsb (bad) jnp xor dec (bad) lret push addr16 cmpsb rolb mov fisubl and data16 dec sub sub jbe mov ja data16 int shll mov lods fidivr mov xchg lahf cmp iret or xchg add cmp push repnz mov repnz inc mov mov cmp xor adc push in dec inc xor dec sub ljmp das cmp (bad) mov out (bad) cmp inc xor stc push xor sub cs adc imull outsb in ret aaa xlat int mov inc pop dec inc dec xor jb (bad) sbb dec dec hlt add lahf scas sbb ss mov xor mov cld js xor mov ss sub xor mov push sub cmp xchg stos or push (bad) notl adc fs rcr (bad) (bad) jne clc jbe data16 lods test jl fnsave jb testb lods xchg push bound subl mov mov aad bound mov pop cmpsb int mov push mov mov sbb test movsb or dec cmpsl insl ss inc out and aad leave push sub fld mov push int sar dec pop jp aaa push aad and (bad) lret jnp aas scas loopne pop repnz scas pop jb mov inc pop push sub or cmpsl xor aaa pop mov xlat jb mov fisubrl xor imul test or dec out xchg movsb nop sbb outsl leave pop daa (bad) dec data16 sub mov sub daa das xchg ljmp or push dec (bad) sarb sbb push fs cmp (bad) adc scas ljmp sbb outsl sbb cld js inc pusha int outsb cs or lcall leave sub adc add jl (bad) jb pop pop pop aad cmpsb xor roll adc aaa out aam sub jae sbb adc loope fiadd fidivl lea popa add stos (bad) (bad) sbb mov mov jp sbb cmp loop push mov gs arpl daa push adc out add jg icebp dec lods jmp mov sarl xchg add je pop inc dec ljmp cli aad clc xor push ds mov lods adc xchg inc fcoml lahf sarb cmpb lods inc or loop ds mov std cmp ret pop fs out dec pop (bad) out dec es cs xchg pop cmpsb cmp and cmp std in js push xchg leave aas sub push jg jp or cmpsl sub ja inc pop push int cmpsl and dec jns into mov sub cmpsb jne aas sbb inc in dec test sti sub cmpsb dec rcrl imul stos pop adc dec push (bad) push es and lcall or das cwtl mov imul in or aad mov xchg mov add inc mov into push push cs iret push leave xchg push xchg lods jb sti (bad) negb inc adc mov push insl mov shl cli jns js push adc mov sub outsb and mov or jg lock jnp jp ja lds data16 cmp (bad) mov outsl push or int3 or iret jp pop push inc dec lahf aad inc adc fist mov cmp sbb cmpsl jl das xchg cli xchg leave jae mov sarl bnd xchg push lods (bad) dec dec pop mov push rorb out movsl inc sbb iret and jne xchg mov ljmp ficompl push inc jne les das dec adc push popa mov nop xor sbb js adc add and cli xlat (bad) test fnstenv out adc out push scas sub sub add fsubrp fsubl mov imul jbe pop pop cld cmp dec cmpsb or popf lahf add (bad) cs jp (bad) jns push adc xchg scas jp sub out inc mov out cmpsb ss xor js inc adc jmp xchg pop popl shrb push jl or bound fsin clc pop jae mov (bad) testb pop loop add subb (bad) pop lods fildl dec push cmp dec pop jbe test mov cmp cmp xor xchg and rcrl and std je sbb pop arpl div push icebp clc shrb mov hlt loop repz das clc inc sti push mov pop adc adc pop fwait sub ss dec pop leave add loop add push mov and cmp ret imul xchg pop mov pop xor xor jne mov sbb jmp fisubrl js test shrb aam and imul test insb fs cmc sbb leave mov sbb xor dec jo xor mov fldt mov cmpsb (bad) dec sahf leave test jl and mov outsl es xchg mov or or push jle jne js incl jns enter pop imul push ds cwtl daa or data16 arpl adcl cmp fimull push sbb (bad) xlat stos int3 adc sbb push adcb push daa cmpsb cmpsl in sub and (bad) scas dec sti pop jae stos repnz mov das cmp cmp jmp pop aas and push inc xchg xchg addr16 and and pop fstpl divb outsb fimul daa sbb orb pop test ja lds mov adc lock jge sub jl rorb addr16 cld jns push fisttpll pop sbb mov (bad) leave out stc scas jmp leave pop dec push outsl push jmp int adc push xor sbb movsb dec or sbb imul mov ret mov in jp xchg out dec je and cmpsb fiadd lea inc (bad) xor xchg push push adc push dec or adc jb dec inc and xchg xor sbb add pop (bad) xchg aam ret mov mov rclb mov ljmp push inc cmc push int repnz sbb ds mul xchg ja (bad) rsqrtps cmp jl xor inc xor mov shrl push out aad out stc adc cmpsb cmc and into aad (bad) push mov cmp sub or or movsb rcrl dec jb lret test popf mov ds xchg add sub int push and mov out sbb ffreep into adc (bad) iret jae push andb push pop ds cmp and mov xor cmpsb iret push (bad) (bad) dec xchg dec cmp jb cmp dec scas int3 loope aad (bad) sub cs mov (bad) pop jae adc sbb jp insl or scas mov adc pop pop add in push push inc xchg add and mov stos call fwait xchg in fldcw cmp in int push dec push (bad) push mov xor inc inc int3 scas pushf subl cmpsl push jb push dec cwtl push in push js jmp dec fdivl push loop (bad) negl dec lret int (bad) aas aad push or sub mov pop cld mov and pop pop stos jae in pop xor adc (bad) pop imul dec scas xor stos mov aad out or sub dec adc fucomip cmp xor (bad) sub mov fldenv arpl or in jge cwtl push and sub mov int ja int3 add aad add mov mov pushf mov sti mov mov xchg fwait mov out pop and adc add pop movsl pop mov push lock adc (bad) sti pop shll mov or push call subl loopne push sub js or xchg div lods imul gs xchg shrl push jp pop xor (bad) mov xor xor ss rcr gs mov es xchg inc xchg (bad) leave jle lret or shr fwait mov jno mov dec out xchg stc or rol in aaa sub sbbb roll andl cmp (bad) imul xlat push outsl imul dec jp and sub movsb adc leave inc sub cmp daa jo fwait xor jno fdivp mov sti data16 test jl clc push push dec cli leave repnz mov jmp and ss push es push xor cmpsb jbe and stos xchg repnz mov push cli mov add pop addr16 sub sub adc cmpl bound dec pop ss mov jmp jp,pn adc or mov sbb and cmp out mov cwtl push imul cmpsb pop dec push out inc xor ljmp sub mov test pop cmpsb aad pushf loop jns or ja jl (bad) insl out jno jmp mov mov push jbe in sbb aad cmp ficom cmp or dec push mov inc fstl push data16 inc dec sbb sahf push xor test (bad) dec test xchg push ds aas cmp lods cmp inc xchg in adc test adc es stos ljmp scas jb pusha ds push cmc push xor das sbb push cmp sub pop cmp jmp push dec pop add and jmp dec or jmp pop cmpl xchg mov cmp pop adc xor daa aad add lock icebp ret fidivr push inc inc jl xor ss pop (bad) jle pop stc leave not dec addr16 pop or and sub mov jg jmp sbb adc and daa mov sub adc mov es or jno ret (bad) xor scas daa cmpsl push or roll dec iret cltd mov lods mov xor cmp jno xchg lods jge (bad) inc fsubs add ja negb pop loope sub test and sti adc xor mov fbld sbb mov add movsb mov sub int xor fnop sub push mov jae iret sub into lret push lea add pop dec jge jno sub jecxz into add jl aaa xor test dec cmpl cmp add pop cmp push push mov call stc dec jp and lods sbb jecxz (bad) push push jmp rolb sti lret aaa jg aad fidiv ror push add xchg mov cmpb iret out addr16 test ja xor iret test scas test cmp int3 mov (bad) ds jp mov dec xchg pop es cmpsl mov xchg lods das and inc (bad) divb and pop aad outsb sbb leave and fs jg (bad) pop or mov sbb sub jbe push and popf mov out jg sub mov scas inc int (bad) push inc pop and inc add xchg xor add inc in dec dec outsb push jp ja jmp shlb hlt inc sub sub and test ret pop lods lods push push pop push aam dec xor inc push xchg shlb or jp in sahf iret sub mov dec sub mov ds mov leave adc int3 add gs push pop push push push (bad) fdivl sbb pop dec mov sub cmp addl outsb cmpsb or in data16 add sub xor js cmpsb push iret cmpsb outsl fs orl xor or cmp fsubrs xor inc out leave xchg or cli xchg jae loopne (bad) andl (bad) ficompl aaa stos cltd mov add inc mov push pop cmp sub push inc lcall cmp rorb jle push mov mov push cwtl enter and fnstcw dec movsb cltd add lret push jl inc pop cmp mov cmpsb out mov add mov imul pop lock cmp push adc sub gs and cmp aaa cwtl cmp add les lea jmp xor cltd inc mov fmuls imull xchg cmpsl (bad) mov mov pop push cli fsts mov (bad) xor sbb and xor inc (bad) push aam dec jecxz je pop sbb and nop pusha sub xorb lea nop in ja cmc clc jb lcall pop sahf inc addr16 cs jo jle pop lock pop aas sar xor cmp insl sub sbb mov add dec int adc scas or icebp jo or shrb dec sbb xor sbb jle insb push or mov fmuls ss out jmp sub push mov xchg mov outsl push out inc mov xchg lods jmp nop jg sbb movb cmpsb into jbe add xor dec or psubb adc movsb xrelease jnp mov sub out jne pop sti in or pop les (bad) in (bad) int push inc or jp (bad) stos rorl testl cwtl xor shlb xchg fptan (bad) lret or mov test adc ljmp or mov push xor insb dec imul cmp cmp int inc loopne inc xor mov iret inc dec cmc pop inc icebp enter je mov out or xor sti in jmp push int jns sub ss add jl cmpsb xor jmp fisubl dec cltd xor fdivrs idiv ret fadd jae dec rorl sti repz adc aad or leave mov ja hlt push ja mov jb daa pop push dec sbb inc sbb mov pop cwtd cltd outsl or (bad) stc sbb mov subl into es push leave jge jb popf cmp mov dec sahf add scas push cmc mov aas or clc repz add sbb cltd fiaddl leave jo popa mov mov aam out (bad) xor lea ss dec lahf (bad) jae lea test (bad) aas out aam pop int scas mov lret aad jp sub mov and repnz inc mov pusha imul sbb inc (bad) xchg push xor pop lea outsl mov mov cs push push xchg cmp cwtl stos (bad) in test dec lea xchg leave jb das test nop popa decb jp add cmp aaa faddl mov sub inc pushl leave rcrl js mov iret leave fdivp fxch and (bad) (bad) jae cmp iret push adc js cmp (bad) mov sti mul xor negl mov call addr16 or les pop mov sub mov idivl push ss xor sbb push xor sti xor jns mov inc ficompl push xchg imul xchg inc leave xchg call test mov inc imul sub jecxz mov int3 mov lahf imul scas (bad) rolb mov inc sub stos mov clc arpl and mov jp xchg pop aaa aaa daa dec xchg cmp aaa adc je clc inc and inc mov bound aas or inc int sbb (bad) xchg or xchg xorl fs push cmp inc cmp push jo imul fldenv lret (bad) aaa jae xor mov add imul xchg mov adc mov xchg push jmp pop mov xchg inc loope add ds xchg std jle jb (bad) hlt (bad) xchg mov test pop jmp scas xor push leave cs es dec (bad) int pop xor inc popf xor inc xlat mov mov mov mov pop (bad) notb jnp mov dec cmp pop dec insb inc xchg push jle in ss dec sti xchg push mov aam mov enter mov (bad) lods ja clc push pop (bad) call or lods and push imul xchg test mov sub stc mov addr16 aas pop or stos mov inc mov out xchg mov and inc out inc dec push cmp test (bad) mov mov addr16 pop xor std cmp jb or aad in aas xlat adc cli lods jbe jecxz mov leave adc jle jnp jmp dec scas and cmp lds cli sbb adc loop pop xchg aad inc push out mov mov lahf (bad) lds sub xchg decl adc loope mov cmp dec inc adc faddl add int3 dec bound or jmp scas (bad) xor fidivl xchg inc cmp sub dec xor or mov mov or push push pop out xchg (bad) ljmp mov outsb cmpsl dec daa cmp aaa repnz xchg dec sbb xchg push push mov push dec stos insb and mov mov inc xchg (bad) ret pop mov push push out jbe mov xor cmpsb or ljmp in lret jp mov pop jecxz pop push stos into push mov test or jo jo fsubs pop gs test loopne push lea jbe xrelease lret or cld mov dec orb iret sbb xchg divb notb pushf imull jnp mov outsb fiaddl dec adc add shlb inc mov dec mov lock pop (bad) dec xor pop (bad) sbb mov or pop xor stos xchg test jb mov stos (bad) jp lock jb mov mov inc xor jp data16 rorl pop shlb cmp mov sbb adc in mov (bad) push and lret mov (bad) outsb mov fmuls fmul mov leave sbb dec call and jne xor pop mov or pop push inc lock xor (bad) insb xchg comiss push xchg adc and hlt inc mov cmp sbb xchg adc mov pop enter inc lcall stos iret jb push add adc inc xor push pop int test (bad) pop xor sbb mov push repnz sahf iret call fnop and addl js xor outsl ljmp dec xor xor (bad) sub push mov sub (bad) inc xor xchg add gs rcr ss jo jp (bad) dec arpl or pop xorb imul sti mov outsl out cmpsl inc out push (bad) aad push jb pop or stos dec mov jne rcll mov dec mov cmpsl and jno push sbb lret loop loop cwtl daa push pop sub insl xor cmp dec sbb push test mov stos push movsb sub push pop fiaddl out shrl repz pusha (bad) out cmpsb or stos dec cmp scas mov cmp arpl dec xor out mov add data16 jp insl mov je mov testl mov mov sub sbb sbb rcll add dec add idivl sub mov fnstenv ss aam repz jne mov dec roll sbb dec xor aad in mov ret or add jo mov inc lock (bad) sbb cs push in inc aad pop jae jg cmp mov cmp xchg adc xor mov and lcall addr16 int cld dec in jp xchg cmp dec flds add or jbe scas fwait xchg cmp dec adc outsl insb lahf jp jp push pusha scas jno mov xor push mov fsts fcmovu orl mov cmovae dec xor push icebp push lret mov add or into je (bad) addr16 stc inc cmp mov cltd or call leave mov int dec test pop cltd mov push aaa adcl push imul fldt pop sub leave cmpsb adc sub inc dec xchg imul icebp loope push adc (bad) rorl inc (bad) sti jbe aad lods adc test scas jbe add ficompl cmp xchg push sub dec scas add sub aaa dec pop imul push mov repnz dec imul sahf mov add and or inc xor adc cld ret aaa pop sub jmp xor fnstcw outsb jno pop inc jmp xor add leave in rcr sub dec jmp push call int3 mov inc mov sti test in hlt scas mov int3 rorb jbe icebp ss mov pushf mov test sub xchg out dec leave sbb out jmp mov pop cmp mov lcall std push dec cmpsl mov push mov mov add jno and cmp ljmp push sub xchg popl cmp mov xor (bad) imull pop cmpsb aas test sub sbb mov inc (bad) push push call sti imul sbb cmc mov mov test ds push call loop add jmp and dec popf aam jns stos mov setae xchg mov ret mov add arpl pop inc (bad) xor sbb mov popf inc (bad) icebp lock lods fiaddl and adc cmp test push mov pop inc dec lret js jl (bad) push addr16 pop lods xor mov xchg repz push loopne dec mov adc xor or imul popf gs xchg rorl jmp xor cmp imul push stc mov call pop lds dec push mov stc jnp loopne xchg mov lea jbe mov stc xchg push or or pop cmp and ret sbb das adc or dec not fcoml aaa sbb sub xor arpl mov ja pop out fldenv cmp (bad) aam or push mov push leave push test cld decb es mov daa fcmovnb mov dec enter clc popa pop and inc repz push mov imul or ds leave sub iret pop movsl or js incb movsb cmp (bad) test fstl dec iret (bad) iret jp and inc inc mov dec (bad) push ss addr16 outsb cmp and js leave hlt xchg scas imul (bad) and mov mov cmp (bad) cltd pop cmpsl and cmpsl cmp xchg and dec or neg xchg pop jno push add ret std jne les or or mov mov bound and (bad) aad call cmp rep movb (bad) cmp rorl out leave mul out or inc cmp sti lret add dec shlb lods sbb push xchg jne fisubrl push adc inc outsl inc movsb ret xchg cmp stc movsb push (bad) mov std push push mov int3 pop pop pop js in push mov setnp jno (bad) mov in ret cwtl sti cmp dec xor es xchg push pop inc es sahf add pop daa xor xor call sub push cs iret dec loopne outsb sub in or pop mov movsb push je sbb and fs leave push sub sti imul fstpt insb jbe pushw mov es mov jp mov push mov js push dec or arpl lods and shll inc pop xchg adc mov pop push push jg aaa lahf out and dec jecxz ret and scas daa push fbld add bnd lret adc add mov pop add sbbl mov xchg dec (bad) mov cmp js out xor add push movb push cmp sub decb lods inc and dec stos mov stc out arpl ja aas inc cmpsb push xchg xor shrb push imul decb inc lret xor mov push push leave out sub divb xchg jno xor (bad) ljmp jo js dec dec xor leave mov mov sub sbbl or loop mov jae cmpsl push fwait aaa js imull dec sti (bad) fwait or dec call stos push les movsb pop lods rcrb fsubrl mov scas cmp mov sbb push test xor ucomiss ficom loopne mov push loop jg sbb mov shrb ss inc imul outsb lods mov insl test dec jno jge mov pop push je lds out xor mov popa js inc cmpsl scas cmp mov es and push dec enter dec rcrl xor nop loop or jle movsl adc cmp xorl mov and sahf cmp or xchg add mov dec cmp ss pop jnp outsl mov pop dec and leave mov lret cmp pushf in xlat push mov xorl mov loope adc cmp int mov cmp jge pop add cmp aas cmp (bad) ss push mov (bad) mov scas xchg movsb xor notl lahf sbb jno mov js fisubrl cmp pop sub cltd sub (bad) icebp mov fmull mov leave sub xor insl pop or out and loopne push jb jg aas jmp stos xor xor xor push daa fstps mov shlb leave mov sbb mov (bad) push leave (bad) mov in (bad) pop stos cli add mov cli mov loopne gs (bad) into iret data16 inc in pop pop popa call lds push dec dec movsb dec mov aaa das mov (bad) dec lock sub xor or data16 out mov mov sub ds sbb and dec aad jno pop out adc cmpsl (bad) out mov stos clc pop adc or cmpsl imul repz cmp (bad) push xor push negb fwait outsl dec push sbb add jl leave and loop leave mov data16 mov ret sbb adc mov and (bad) jne fcomps (bad) addr16 (bad) jp iret xor jp and daa test scas stos mov (bad) push mov inc test pop sahf xor jno mov lret and cmpsb sbb sbbl inc fdivrp xchg inc xchg idiv sub xlat adc aad (bad) (bad) aas xchg xor scas dec or call sbbb out mov ljmp mov cmc add xchg mov aam mov push mov scas push (bad) and and shll dec lds aad pop dec jne (bad) dec mov movsb insb adc (bad) and call dec push insl test and push fistp mov adc std dec and sub xchg setle aas (bad) dec lahf push push push inc mov pusha sub clc (bad) in pop (bad) sbb sbb push jge repz mov mov xchg jbe aaa cmpsl leave mov (bad) (bad) pop dec std nopl cld mov (bad) push ds cs jle fisubr mov push cmp pop pop or lahf cmpsl jle pop xor sti jae and sbb into leave (bad) sbb fsubrl iret cs mov inc xor jae inc mov lret mov int mov (bad) lea sub xor mov adc out (bad) jg (bad) push push je cmpsb cmp mov fiaddl pop cmp mov test in sub jbe dec loop lods (bad) pop addr16 shlb mov mov (bad) cmp orl movsb (bad) ficom loopne mov sub and incl add add dec dec jge call inc jae push jle and cmpsb dec cmp add shrb in inc adc jg mov push mov cs imul pusha jno (bad) stos dec inc je,pn inc repnz mov mov leave xchg js pop mov (bad) (bad) lds inc xor dec or jb push pop loop es inc xlat dec jns daa sub mov cmp mov ds xor jne (bad) dec mov cmp ds icebp das idivl in mov pop jb mov and mov jge out jne pop jle mov inc daa pop sub sub ss inc inc mov mov lock xchg push lcall (bad) imul enter mov jmp mov cmp hlt fnstsw sahf test mov mov lret sub dec notl and push leave push lcall xor sub notl inc stc xor fs inc imul test dec dec xor xchg push push pop lcall addr16 repnz xor xor cmp mulb inc aam ds test inc test pusha pop scas sti out or mov jp and jb (bad) enter cmp jmp mov pop dec pop or stos pop cmp sub xor and ffree std into scas pushf cmpsl (bad) or lret push mov inc dec imull imul inc add fdivrs enter ret fsubrs cmp and push loopne dec ljmp jnp dec leave mov outsl mov scas sub int sti jo push ljmp xor inc ds cmp (bad) jl aas sar (bad) xchg or je fs dec outsb xor mov (bad) punpckhbw dec popl hlt in cmp mov in and (bad) and pop in mov jbe fld1 (bad) icebp sbb dec xchg cmp pop addr16 mov lret out push aaa popa pop inc and jge cmp es fcompl push mul ret outsb fmuls pop push outsb out and mov jp ljmp inc (bad) pop addr16 pop or push sbb lods adc and pop xchg sub out jb (bad) push xlat pusha pop and fldenv mov leave inc aam fisubrl lcall sahf sahf inc roll xor pop sub cwtl stos and pop xchg leave pop test xchg mov adc push ret jb sub popa sub ds xorl (bad) lcall mov adc xor sbb std loop push jns mov and mov inc pop pop sbb and mov loopne xor int in cltd fdiv jp mov aad cmp mov inc push enter mov cli push add scas ss nop jb xor fsts push ljmp push repz push and push mov xchg repnz and jg (bad) lret cs add lret push jbe sahf in int3 call idiv pop mov outsb int jl add cmp leave lret (bad) inc iret xchg lcall push pop xchg dec push (bad) hlt rcll inc lods xor lret and outsl cmc mov pop (bad) movsl sbb (bad) ja jno mov bound lods cli outsb jle mov notl insl jmp add mov (bad) xchg mov jb addr16 xchg push pop cmp mov inc dec push (bad) mov adc add lret negl pushf mov cmp jmp mov stos movsl stos pop out adc jp inc cwtl ds aad jno cltd push sbb inc jl fcmovb pop xlat xchg inc cmc popf mov hlt mov in movsb jne mov mov in pop sbb push data16 push dec leave int3 in mov mov push and xlat push std add pop cltd jb push test cltd mov (bad) ja (bad) jno mov push arpl mov insl das pop dec xchg mov mov imul es js jne or aad push mov (bad) mov jb mov aad scas icebp ja pop (bad) and or inc cmpsl scas xor out in adc out pop dec leave mov pop outsb fwait dec pop dec xchg adc mov cmpsb jp pop inc inc call (bad) sbb pop fiaddl and mov (bad) int movaps cltd dec aaa jmp rolb or ljmp imul ljmp loop iret sub pop fwait push adc cmpsl and aad leave and push inc inc repnz fisub sbb test ljmp mov insl and in mov push insb sbb bound cmp adc repnz push in add in (bad) fnstcw sti (bad) push fcoml outsb xor add in sub fcompl popf mull test mov jnp sarb add jl jbe daa xchg add add fldl imul test or or push sub sbb ds leave add inc push dec cmp jl lods (bad) xchg mov pop int cmp mov jne jmp outsl loop xor adc xchg jno push (bad) push fidiv out sbb sbb jbe mov int xchg cmpsb imul aad sub and dec push pop (bad) stos fyl2xp1 aad into xchg fwait shrl fadds cld enter insb xchg pushf pop xor stos push pop xchg pop mov mull repz pop push lret cmpsb dec les push xchg xchg or insl xchg push sbb sbb and pop sbb lcall sbb pop test shrl aad das sbb jl jae orl dec clc scas in cmpsb test sarl bound and inc xor test mov xor xor test mov stc fisubl sbb sbb mov fimull mov push dec sar sbbl mov xchg cmp test lahf mov scas push mov aas mov adc pop enter rorl add inc je pop xchg out add (bad) sbb imul lds (bad) scas insl mov dec std ljmp or xor lock cmpsl scas daa es cmp xchg push aaa sub dec sbb dec (bad) (bad) icebp insl push jae movsl jmp lret int bound mov in ret sub dec xor push push pop jp jb dec lods add bound (bad) fstps sbb aaa xchg mov mov lahf mov decb scas adc popf xor pusha (bad) mov add data16 lahf mov sti addr16 pop and dec pop std lcall pushf ljmp mov jge (bad) adc cld scas inc movsb mov cmp inc sub push inc inc cmp or pop mulb sbb push sub xchg xor cld je cld icebp psubq xchg scas leave jl xchg outsl jp lcall inc xor out in mov aad jp cmp jle inc cs cmp xchg pushf jecxz jo out xchg ja mov mov xchg mov mov out (bad) dec sub (bad) outsb repnz mov pop (bad) into sahf push push mov inc sub lahf and jb (bad) (bad) pop inc (bad) xor lods data16 mul mov xchg enter push push sti mov mov int xor push arpl sub sbb mov loop (bad) dec pop adc or pop out fstpt repnz pop inc push out or out scas mov andl enter push inc xor and (bad) test sub out and fldz aad pop cs into test cmp push add and pop bound into loop std pop mov jno aaa (bad) and xchg jl xor outsb mov (bad) jb daa testb jle enter push std ret out add and mov mov pushf push inc ss fcomip dec mov cmpsb adc push inc jp sub xor outsb push jl fisubr cmp leave or cmp xchg pop ds fwait add shlb pop pushf das cmp mov sbb push insb and jecxz cwtl push mov push jle ss mov adc ret pusha jle ss and push xchg stos rorb inc je decl (bad) int push int3 cmc dec pushf mov fisubrl inc inc mov int cmp repnz xor xor clc outsl mov add lret jle sar lcall or (bad) mov inc cmp inc nop mov (bad) aad fistpll incb mov outsl aas ja dec cmp push out mov jae sbb mov pushf adc imul das or jp lock cmp cmp sub test out xor outsl bswap sbb pop add mov cmp fsubr jmp faddl scas sub inc cmp adc orb mov push inc mov xor xorb outsb mov mov cmp dec dec fisubr jg,pn push cmp mov dec aaa ja mov imul in enter or dec and jmp loop xchg mov aad lret in add pop push outsl xlat aad into js iret addr16 (bad) adc imul jbe push push and insb mov pusha (bad) decb (bad) xor inc cmp add dec mov xchg pop pushf mov mov inc push mov imul mov ds int jl cmp lods mov inc push out mov lods test jb dec ljmp movsb mov sub inc dec stos jge jbe push ss xor xchg jge imul mov push inc push repz jbe or mov or cmpsb sti idivb adc leave rcrb outsb bnd int inc das jne push sub pop mov push cmp cltd mov mov pop push cmp jno dec pop cmpsb jp stos push mov mov add stos pushf pop insb cmp bound mov and fsubs scas sub jp leave inc fidivrl lahf (bad) in inc inc xor mov das out out gs jb sub les cltd sub push enter jb repnz adc mov ds pop xchg (bad) addb cmp sub pop aas dec jb (bad) fmulp xchg sub scas push push xor out sbb cltd adc jb xchg dec cmpsb out pop fwait sti sti div cs inc cmp cmpsb int or mov xchg (bad) fistpl hlt fwait out aas cmp insl repz dec mov out aad jl push insl xor sahf repz push pop add push gs sub hlt jno,pn sub ds dec xchg sti cltd mov pop push lock mov pushw inc aad movd imul fwait push sahf mov mov cmp lahf scas jae leave (bad) mov pop sub xor aad pop mov std fisttpl out rol scas dec int out push mov mull out push push stc xor ja sahf mov bound inc mov mov jecxz int (bad) jae mov push loopne add iret out int inc sbb xlat lods xchg fsubl cs (bad) push dec ret xchg push icebp or loop inc add add aad scas jle sbb adc (bad) jge insl cmc jle adc (bad) push mov push movsbl sub cs fdivrs (bad) jnp rcrl jp sti dec mov cmp cmc inc push sbb (bad) repz cmpb fwait dec fs ja int3 stos jae and adc sahf cmp pop pop int3 or mov push mov rorl sbb movsb and xchg pop sbb xor or push adc out insb xor not xlat pop cmp jae xor int3 icebp insb in aaa call xor ss jbe sti adc pop aaa add dec dec mov cmp bound ret sbb sbbb inc arpl mov out test adc fidiv inc int dec (bad) pop inc add loop stos mov dec jmp pop aaa push sbb mov lds mov cmpsb mov jae sub mov sub arpl cmp pop jecxz xor xor movsl jl aas call xor sub pop adc xor dec jbe inc dec inc push pop push sbb in and pop pop ss mov out aad pop xchg or fsubl cmp inc mov mov es jbe xchg mov pop into xchg cmpsl adc add sub push cltd pop mov sahf cld inc in fild sub mov aad rol (bad) hlt cmp dec or dec or cmp sub addr16 mov or jmp into mov mov jp pop push mov xchg cs scas stos mov jle fs jle cmpsl dec sbb mov cmp out leave cs adc and ss add loope cmpsb in cmp (bad) cmp aas jno,pn scas orb outsl sbb (bad) xlat dec iret ss leave cld sbb test cmp outsb das mov push lcall and dec inc jmp (bad) fstpt mov jp movsl and mov (bad) or movsl mov and mov push je inc sub adc xor mov xchg leave lret pop pushf mul pop and out mov daa sbbb into mov cmp cmp lods push dec shlb mov xchg push (bad) cmp aam add jge sbb and movsl xor sahf adc xchg sti js cld cmc mov push push ds (bad) push lcall inc or aad jae mov xor add sar jnp and xor and xchg cs pop inc dec pop ds inc mov cmpl out leave jae sub dec dec fwait push leave lods stc inc mov fisubrl dec add out iret mov sbb fimull in inc dec out leave lret mov xchg enter fidivl xor pop lret test in push cmp (bad) sub sub hlt mov cld adcl cmp out ljmp shrb mov test inc push push xor pop pushf daa lds mov (bad) (bad) jbe xor addl sbb cmp mov sub xor pushl dec push jp mov stc push jnp jmp xor mov mov add data16 xchg jb mov inc aaa insb pop scas idivb subl add jp std mov into or or jp pop pop inc test pop xor sub push dec sbb repz xor xchg and inc adc mov jmp and dec aam jmp pop pop (bad) dec aaa dec xchg mov rcrl mov out scas pop shlb sahf mov xchg clc sbb addr16 sub adc ja mov inc push imul pop pop cmpsb or test jb in and sub into fcoms jle fimul push xchg dec adc aad cmp cmp addl push rcrl int mov sub mov aad sti leave xor add xchg dec rol scas or (bad) jb cmp add pop jbe cmp sbb divl and mov push sbb dec inc leave je cld ds mov out inc loop jg cmp mov pop ret and and inc daa dec mull sbb push push bound pop cmp jp lock mov xchg ja daa push or push (bad) iret fisubl xchg std jbe adc push loop bnd add ror sbb imul inc cmc prefetcht0 flds cmp dec xchg pop lret in mov adc pop mov cmpsb push push cld out xor leave int3 sbb xchg (bad) push sub adcb pop mov out imul xor push test or push lds mov sub cmp sub inc iret cmp and xor imul and fdivl jae adc ds mov and (bad) cld dec aas (bad) aad das xchg insl jno pop jns js es mov pop mov data16 sahf loope jo sub dec pop mov cmp iret test cli and frstor xchg (bad) int adc (bad) mov popa add xor shrl cld cmp not mov stos push aas pop xor adc dec repnz idivl cli aaa addr16 fisubrl dec mov (bad) xor mov mov lret cmp leave jnp test mov sub xorl inc push incl dec add fildl sub cs cmpsl dec inc push push mov jp jp (bad) mull push (bad) adc pop xor aad sub jmp push cmc shrl fisub dec xchg xor add (bad) pop push leave sti cmp xor insb mov insb aas lcall xchg mov subb adc sbb jo rcr (bad) es clc mov xchg add ds lea out (bad) push fidivr or inc jle sahf adc and imul mov nop pusha pop mov xor aad adc outsl mov out jg in into mov cmp push leave data16 dec and and jp mov dec jp adc mov insb sub mov test insb dec push push push cs or loop cli cwtl xor add loopne fnstsw out jbe out bound cmpsb push daa sub test daa mov push out dec mov add pop leave mov jnp les int3 sub stc data16 mov daa dec cmp ljmp mov mov cmp sbb push xchg jb cltd mov cltd outsl addr16 sub (bad) jno mov add ljmp sub fnstcw push mov cmp push loope push sub mov add jmp aaa pop mov xchg mov pop int dec (bad) and xchg sub push (bad) out aad jp push mov and rorb insb (bad) lret jb xchg dec push cld xchg aas repz and adc push sub sahf pop out inc xor or pop aad nop stos jbe jnp in cmp cmp cmp dec sbb mov xchg push mov pop je xchg out mov rcrb push lock divl ret inc dec outsb push cmpsb mov not into mov push inc fidivrl adc pusha xchg out xchg cmp mov mov jns mull push mov push lret jl jne int cmp cld out pushf movsl fs jo mov pop nop (bad) dec mul int sbb data16 lahf stc sahf int rcrb add dec jge dec daa mov mov jmp aas mov add lret push mov cmp loop scas pop push add pop jp out mov pop aad add or sbb push cmp push pop mov inc xchg xchg sub jecxz jl loope in in xor leavew ja mov cwtl sahf in fisttpll loop (bad) cli cmpsb and iret dec sbb cmp or xchg les and mov rcrb inc fcoms aad inc lock inc popf lea lahf fwait add cmp leave dec (bad) push cli and rorb (bad) imull inc outsb ror push add push mov sti sub cmp test inc sbb sbb pop arpl mov repnz or inc fcmovnb inc xchg mov push inc repz cld pop push lds adc inc ret (bad) pop dec leave outsb sub (bad) (bad) or jbe mull mov jmp jnp mov mov ret adc jl icebp bnd jg fldenv icebp fidivrl movsl jb orl aad ret push push mov stc scas icebp add cltd out aas ret addr16 jno (bad) dec lods xor dec sbb mov leave ret jmp nop jbe mov xor inc test fimul pushf xor ret cmpsb mov cld int dec int xor cmp cmp jle xor int fist popa daa cmp repz ja mov and pushf sub cmp xor sbb push aas sub aas xchg (bad) push insb loopne sbb (bad) mov les add lods pop push xor inc adc pop add jb sbb xor sti in pop dec xor sub cmpsb push sbb sub ljmp xchg aas popf (bad) sbb xrelease xor mov shll mov push (bad) clc repnz cld xlat jl pop fwait jp push pop icebp data16 lcall cmp mov dec lcall lods jb lods shrb mov (bad) notb xor xchg mov dec jae mov mov mov and dec dec jae sahf (bad) cmpsl subl data16 outsb jge addr16 xor sbb lret xor and push jp inc mov scas out outsb out or ss stc lods adc scas push sub jbe adc mov insb xor out or jmp lock fbld scas insl or pop aam (bad) das jb test mov inc testl mov mov jecxz pop nop add sar pop xchg mov sbb test scas divb xor inc pushf lahf aaa fs imul xchg sub pop xchg cmp and andl mov lahf das mov mov out cs pop sbb push jnp inc push in or push sub fimull mov push mov cmp push addr16 ljmp sub ds int3 cmpsl dec sbb int outsb loop lea ss cmpsl dec pop pushf aad int into cmp mov cmc and mov sub cmpsl sbb push dec xchg and xor inc aas jne ds and push fistp das insb dec cmp lahf sbb cmp pop sbb cmp mov inc cmp sbb push cmp sbb xor clc cmp inc pusha dec es (bad) dec mov xchg cmpsb mov aad lods jp pop daa imul add sti outsb mov pop aad mov mov jae and adc fstpt pushf daa addl inc aad pop int jb cmp mov push xor sub adc int mov cmpsb mov cmp inc stc push mov adc or arpl aad push cmc call outsb inc dec mov push jmp push subl xor push xchg mov imul mov cmp js xor mov mov pop lret repz test dec rcr (bad) jbe imul (bad) xlat adc cmpsl xchg popa repz jl mov gs cmc clc xchg xor (bad) cmpsl cmp push and aaa test mov jbe bswap lea bound daa add insb sub jb movb push daa xchg insb cmp aad sarl mov data16 cmp jb inc mov test icebp push mov jnp aad push scas mov popf imul je push cltd mov jne test cli jbe jb and push and xchg and adc or xor adc adc test aad inc xchg cmp ljmp xor ja mov cmp jns push leavew cmp add (bad) xor int sbb bound aad xchg mov mov outsb lret xchg mov mov mov (bad) mov loope mov pop mov fsubrp rcrl jns adcl (bad) xchg sti dec or inc call pop wbinvd mov xor fisubrl pop (bad) ss daa sub ss mov sub pop xchg insl jg cmpsl mov xchg pop jl mov mov cmp mull push add leave cmp dec jae jbe and test lret sti inc popa adc dec fstpt (bad) mov bound cmp add (bad) jg rolb rcll sub movsb mov mov out mov mov jp jb xor (bad) mov or or sub aad cmpsl rol push dec push adc addr16 cmp push (bad) sub outsb push dec adc fbstp in mov lock and mov mov push mov test into add pop jp sbb cs push lods aad lods push iret mov mov mov xor das mov aad pop mov mov insl int xchg lcall stc push xlat cmc cmpsl pop jp cmp and rcll add dec pop or (bad) repnz in jmp cmp push xchg or push push mull (bad) lahf push xor push add pop push xor sub push push outsb cmpsb dec xor sbb add sbb cmpsl add ss xchg repz ja push mov pop adc lahf mov mov cwtl inc je mov iret sub push pop xchg dec clc in ja inc sub loope loopne ja lods mov or imul mov jb xrelease test cmp cmp pop dec fidivr repnz imul jmp into leave add adc pop in dec iret inc mov xlat movsb (bad) jg cmp rcr inc pop outsl icebp dec inc mov jmp sbb mov push rorb aam fidivr ss cld loop or and sbb push in xlat cmp mov iret (bad) xchg lahf fisttpl and dec inc cltd xor dec movsb or push icebp jecxz mov out cmp sbb mov insb lcall cmp pop cmp into sbb in (bad) dec adc pop jecxz cmp xchg cmp jecxz add push mov cmp mov jle dec (bad) xchg inc insb hlt dec leave movsl fs mov aas pop stos cli add negb sbb fucomip stos outsb aaa (bad) out scas jp es hlt dec or into out mov (bad) mov scas inc jnp dec push mov cli mov daa and roll movsl fstpl into or fmuls cmp orl fldt mov gs fucomi fadds iret dec fdivrs fcom lret lods push mov xchg imul mov jmp pop enter pop (bad) fs jb mov xor dec jnp iret dec pop int inc rcll add out mov enter xchg das xchg mov sahf mov mov adc in fstps cli push fcomps mov jp mov gs mov sarb mov cwtl cmp in repz push fnstenv and mov cmp mov sub add int mov fwait or negl dec push inc push (bad) pop stc pusha mov aam and push jo leave cs xor pop insb dec mov and push aaa test stos loope insb sbb test mov pop inc or mov imul cmc dec sub es adc xchg mov lods add jb out ds pop mov push sbb adcb dec sti sahf xchg testl and jno dec push jg push cs sbb repz dec cmp loop mov cmpsb pop mov jl outsl sub mov iret dec jl jl dec and fwait sbb repnz cmpsb pop lahf cmpsl (bad) xchg and mov jno imul xor cmp aam mov iret insb addr16 add push cmp aad or push aad adc sbb pop jo pop es fisttpl lods jb mov mov out push js xor xor cmp loop adcl or imul mov data16 inc and bound sti out add push movsb scas sahf add pop (bad) lahf push sub aad rsqrtps test inc add es sub inc dec (bad) xchg inc imul gs mov loope fildll mov pop popa push prefetcht1 sub sbb push call outsb pop push popa sti mov dec or lods outsb movsl movsl xor cs inc mov dec cwtl inc aaa imul out test mov xchg cli mov sahf mov inc (bad) mov add jae xchg and mov inc cmp dec inc pop push lahf add stos push sub rorl inc mov and mov cltd adc lahf dec xor iret push lods push dec adc xor push add leave pop sarl inc sarl adc (bad) out or push fisttp stos pop out jae aad sub das dec adc xchg inc and or (bad) and ja inc xchg les sbb iret push leave in dec inc sbb cmp lret hlt pop sbb daa pop adc push negb or pop mov jb frstpm(287 ss data16 jb add (bad) add lods and (bad) decb push sbb xchg push call sub cltd cmp outsl pop shrb mov dec cmp cmpsl xor ja mov xor sub test ja ljmp loope enter inc mov test into imul inc int stc pop in icebp adc aam add pop pop out sbb sbb outsb sub xchg jns repz mov es test rcl popf cmp push arpl mov mov dec and outsl sti push into fs mov dec cli dec rol jae and xchg inc xor fs cmp mov test xor loop ds or (bad) push lods inc push loop cmp in sbb sbb sbb sub push ss jnp loope mov inc aad cwtl mov sub xor sbb out stc pusha or (bad) outsl mov mov sub pop ss cmp sti in cmpsl (bad) push cs inc xchg js push subl mov mov add jae inc pop jmp (bad) push xorl xchg iret sub xor orps push out dec popf xor lea lods push das xor adc jne icebp pop fsubrl rorl leave push mov add stos dec sub cmp and stos and pop dec dec sbb jecxz push (bad) dec test mov js les jl enter outsl mov dec mov sub adcl int ret test inc push xor jb or mov ljmp add push jg jmp (bad) and aaa push imul dec push mov xor rcll cltd mov arpl enter dec pop inc mov pop xchg sti jb push xor mov add mov cmpsb loopne dec pop inc (bad) mov int xor leave push sub push xor add xchg mov stc (bad) std roll cmp stos int inc sub stc aad cwtl dec lods add dec test adc cwtl cmp popa clc push jp ss sub into cmp sti mov sub aad adc jle das xor pop popf xchg mov dec fwait sub adc cmp sbbl and dec mov push sbb shl (bad) sbb out movsb jmp out sti ficoml leave sarb jbe cmp mov jae,pt ss ret data16 in lret push mov push arpl push add cmp inc jbe mov (bad) jge jmp (bad) in pop (bad) into sub insl mov pop xchg mov enter sub pop pop jle (bad) stc xor (bad) in add int3 or push pop ss sbb enter cmpsb sub push add mov jb daa imul sbb (bad) sti stos or arpl fwait les jbe xchg outsl pop (bad) push jb cmpsl fcomps sub pushf mov dec jmp leave pop cmp stc mov mov sub mov cltd and (bad) ss fs xchg fisttpl or add dec sbb sbb inc pop fidivr or dec jmp dec ss pop or (bad) jnp loop ds dec iret scas lods dec aas add jmp (bad) mov pop outsb pop outsb aad adc popl lahf (bad) fwait int3 incl push cmc out inc push imul dec mov popf sub dec push xor in mov mov push mov cwtl and pop sub xor iret int dec sub aas (bad) addr16 pop xor xchg and add pop int iret jae loope std mov inc pop dec leave pusha xor fwait adc mov adc negb aaa sbb mov mov jns mov in shll in mov or lods je jp,pt inc sub dec pop stos mov cmpb mov jbe aaa sbb aaa daa scas dec lcall inc scas (bad) sti sahf popf outsl movsb xchg xchg or ss mov aad pop cmp sbb mov jle es mov jbe fcoms ljmp loopne cmpsb loope mov cmp and lahf sbb inc fbstp add bound ja pop ds xchg push hlt and sbb mov inc push or test inc sbbl enter xchg and outsb test adc fs dec leave fidivrl ljmp (bad) iret jb dec fsubrs in daa xor xchg (bad) lods out inc cmp idivb popf imul and mov xor jle cmp jge pusha pop and dec movsl push mov sbb xchg mov push in ss cld push adc inc mov movsb pop xchg addl mov clc xchg nop push push and pop dec mov nop dec (bad) adc lds sbb push addr16 sbb dec nop adc sbb ss adc push test mov iret sub and lods pop and jae mov bswap xchg sbb xor mov push push stos les sub or or insl pushl sti dec cmpsb adc or add enter push outsl push sub mov pop sub mov imul inc push dec cwtl xor mov adc mov mov mov movsl imul inc aad sub bound ret jb xor jae fsubrs mov movsb push and cmp push dec clc (bad) jb dec jmp pop out dec aad mov mov aaa mull jmp jp and inc je cmp push pusha sbb mov dec cmp leave fwait or lret test (bad) in arpl fsubr and into sub mov test jge imul dec fwait inc mov leave stos mov xchg jae mov leave dec jno ds pcmpeqd mov xor jb or mov cmp mov divb fldt cmp leave flds les adc dec dec mov jbe xchg and mov lcall mov dec aad jge jbe in push adc maskmovq imull or outsb imul xchg mov subl bt push aad sub mov add inc or out out pop pop jb inc or or aad mov out (bad) xor pop mov jnp or ficomp jne es loopne sbb imull jecxz sub xchg ja ds icebp add cmc xlat inc push and add add push stos sbb sbb push xor repz cmc xchg pop lods xor lea arpl ret ret add push aam aad sbb enter jp lahf mov ja push mov ret push dec scas shlb inc sbb xor dec out outsl ret js ret int3 cmpl repz mov jae add lea es push icebp (bad) push lock sarb jne enter cld das rcr jg sub pop lret loopne cmpsb scas inc repnz dec jb mov int dec adc push push ss sbb or pop movsl cmpsb aaa dec xor dec out vmread push mov (bad) cmc jle adc aas negl stos ljmp test es cs sarb and lahf lcall xlat xor mov fwait sbb int arpl outsb out cmpsb jp sbb or push addr16 outsl dec mov leave xlat jp sbb jg push jecxz ret addr16 rclb dec in sbb pop (bad) mov (bad) or pop or sbb (bad) bound shrl add pop (bad) int out dec dec adc sbb dec dec aaa push xor dec cmp dec mov add dec (bad) xor push lods push or dec cmp inc (bad) imul add sarl notb test (bad) lret dec js xlat xchg push dec mov sub imul fwait push test rol imul jno test movsl outsb xchg les repnz dec cmpsb adc movsl stos push xchg mov and pop and xchg jmp push jge dec mov push adc adc and mov inc in jp cmpl and jnp xchg sub jno xchg push xchg (bad) dec lock inc push loop lret mov and sub int jns sub xchg jg xchg rolb cmc test inc mov sub aas cmp ljmp mov or dec xor jp notl pop xor jp cmpsl cmpsb push (bad) dec push test in das (bad) jp cli lret rcrb dec ljmp jbe push add out outsb jae mov cmp (bad) out addr16 (bad) jae lea scas rol cmp (bad) insl sarb fidivrl sbb mov js daa mul fadds xchg das out and pop dec aaa jae out pop cmp (bad) jg jae daa idivl and push mov or pop imul stos ss (bad) ljmp jp xchg push dec cmp call cmp mov mov cmp cmp (bad) push mov or xor jp fwait dec out pinsrw out xchg or push mov push push fisubl icebp xor ja fiadd cmp dec dec mov (bad) xor pop stos sub aam mov (bad) insb pusha xor xor adc mov push push bound xlat xor mov (bad) xchg enter or out xchg dec push jp call xor mov and xor or and sub gs outsb mov (bad) pusha pusha xor divb add jge pop mov mov imul dec or xor (bad) mov cmp jbe test lds imul mov push scas or stos loop movsb out jns out mov push jmp add popa out aas imul sbb inc dec lret cs inc (bad) jb stos cmp push lods push jb push cs dec lods jb stos pop cs mov mov outsb hlt dec jp pop (bad) cwtl mov pop imul xchg inc call das leave rorl fiadd stos mov or (bad) pop (bad) outsb mov (bad) mov or pop pop cmp std outsb cmp out sbb mov das pop push cmp mov out and faddl dec cmpb and dec inc mov (bad) mov xor pop add mov movb xor lret xchg cli and outsl sahf stos dec xchg adc lret imulb push cmpsb xchg inc cmpsl test jg into lods pop xchg outsb imul iret repz test cmp cmp adc jecxz dec push mov mov or dec jp push inc or rcrb data16 ja (bad) mov xlat int3 mov ret xchg mov push dec (bad) dec and xchg push gs dec pop fbld daa cltd inc and stos dec inc jmp xor cmp lods cs xchg push das daa pop xchg stos in mov mov and (bad) push xlat dec insl ret out dec repnz sub jbe sbb in (bad) xor add push dec sub sbb cmp mov pop aaa xor push cmp xlat stos mov dec cwtl aaa jg test push pop mov cmp cli stos sbb dec sub mov pop dec cmp dec stos pop push and hlt mov scas or outsl push mov pop cltd cmp gs test aaa or out fldcw pop jns xor dec stc aaa xor or pop sbb xor out cs inc das cmp push hlt imul sbb mov mov dec outsb inc das cmpsb stos inc push scas (bad) outsb jmp mov dec divb gs pop outsb cmp cmp or dec aaa aaa mov inc outsb mov hlt push outsb push outsl mov and push ja negl cmp lret stos xchg push dec cmpsl cmp cmp xor and int3 jmp das (bad) mov (bad) call sbb mov adc gs outsl stc fsubrs xorl sbb inc aad inc jl aad cmp xor jo jge sub aaa (bad) lods enter (bad) dec imul adc loope fstp mull mov rcl hlt sbb jb lods cmp test fs out dec out sbb cmpsl mov cli ja jb stos leave shll ret lods and aam stc or xchg pop jle xchg push aaa leave (bad) or push jle push outsb mov adc mov push in (bad) pop iret jp push sarl mov pop mov xchg dec jae leave adc mov insl inc pop dec pop and ja pusha pop std repnz add outsl cmp cmp ljmp (bad) add pop jae bound mov jmp sbb data16 mov cmp cmp out pop push scas jmp fcoml mulb pop loop inc pop jp std data16 adc movsl push pushf popa jae in mov jb daa sub out in push or (bad) int dec push and pushf sti mov adc pop cs bound aad lods aaa ljmp xor adc dec repnz pop jb xchg sub pusha shr aas add (bad) lahf sbb sbb jbe push iret sub mov jbe test mov into sbb cmp cmp and and mov pop jo and jbe (bad) mov aas cmc mov enter jp fmuls cmp scas xchg cmp out pop ljmp inc daa mov pusha aas int pop inc imul daa outsb mov cmp dec cltd mov test push mov inc mov aaa xor in stos xchg lods imul cmp pop sbb push dec mov xchg scas test divb pop in push pop outsb aas std pop or aad add dec jle in mov push jp sub daa jp cmp fdivrs xchg mov lret xchg xor shlb sarb imul dec (bad) push cltd cmpsb fisttpll cmpsb lret jg repnz (bad) (bad) mov dec ja mov shrb push mov push icebp inc or in (bad) xchg jp jp push mov or xor inc hlt mov cli imul movsb js jl popa jp (bad) dec nop sarb jle jp (bad) int push jg jp cmpsl mov jp js jl popa imul daa mov sub dec pop cmpsb pop ljmp push aas cmpsb pop jne push cmovs xor and ret test adc dec push push dec dec cmp push xchg hlt data16 cmp out or inc xchg daa mov dec lds push lods adc sti cmpsl mov inc mov outsl (bad) leave in mov mov mov rolb inc fmulp lahf cmp stos cmp dec call insb or das jmp (bad) stc dec scas sub xor push sbb xor ficoml sub lcall into dec add loopne xor sbb shl insb aaa aad (bad) hlt push stos push mov xlat or xor mov or xor inc cmp imul scas xchg lret mov scas shlb cmp loope xchg ds lods test aas push push dec pop xchg stos stos cmp lods adc mov push and ss lods dec jne xchg sbb and jp adc jmp jb int fmull cmpsb pusha xchg fwait pop aad xorl (bad) add int imul inc aad push insb (bad) in dec xchg clc xchg in mov (bad) cmp loopne lret (bad) jp or shl pop int cs outsb sbb hlt mov push rolb stos dec ds add jecxz inc add pop leave xlat loope dec cmp jno (bad) inc pop (bad) testl pop or movsl enter insl adc jmp cmp ds and inc (bad) xor in movsl push add sub cs push pop sbb bound aad mov es xchg je clc xchg dec je out leave loop ficom push mov mov pop mov push xor inc hlt mov cmp adc fidivrl iret into xchg pop mov push data16 dec mov imul aaa nop fiaddl aad sub jns,pn or xor mov fiaddl jp insb push dec cmc sbb movsl xor sub shll insl lret push inc icebp shll scas adc daa or xchg imul in cmpsl gs ljmp lods inc ficompl mov outsl int lea mov fist enter xchg nop loop frstor sbb push pop (bad) xchg cmp jp icebp pop mov mov mov sti lcall or lahf pop test addr16 roll roll pop xchg sub inc pop out fxtract dec mov lahf jnp add das mov jo clc cmp push adc ficomp (bad) movsb sbb mov and idivl daa xor (bad) mov dec xor add outsl (bad) jae and aaa or push and jnp add call cmp pop out movsb pop mov leave imul push icebp sub jmp jns jae aad outsl and lods ds push dec int push ds aad notb lret stos inc xchg mov pop mov fsubrl cmp sti inc adc inc adc sbb (bad) sbb pop sub jo xor sti xchg push arpl inc movsl ljmp inc push clc fdivrl arpl sub adc or mov imul outsb dec cmp add lock aaa inc mov pop jnp mov (bad) aaa pop in inc in sub test jo xchg mov xchg sahf test pop inc (bad) imul iret cmp pusha ds add sub push sub and xchg xchg sub inc test sbb (bad) pop pushf sbb push push imul jns (bad) add dec inc jmp gs jnp sbb adc jg rclb dec dec arpl in sbb aas jg fidivl lds fwait push mov jae icebp js scas (bad) mov out leave (bad) dec scas push push scas or stos or pop loop or xchg das lcall popf sub ds mov jmp aad subl cmpsb imul inc xchg test pop (bad) cltd cmp pop gs push sub cmpsb mov icebp addr16 adc int3 test cmp dec insl mov shll and push cmp mov or (bad) js cltd sub stos dec ret sbb adc ljmp leave (bad) fidivr in and mov inc or xchg imul cmp jns rolb and push cs xor add mov aad cwtl and bound pop iret pop int3 pop out lahf ret outsl sub pop pop loop sub add cmpl mov cwtd icebp xchg or (bad) lahf jp ret adc cmp xchg in mov idiv dec fs jae and das lret rorb and push into and jge,pt cpuid push (bad) mov test mov (bad) lods inc mov (bad) cltd or fldl jbe jno fistpll dec push divb int xor or dec sbb rcrl cli cmp jnp sub jle adc popa imul pop pop fwait loope lret push dec andnps or imul lods and cmpsl stos dec inc adc fisubl in or pop xchg jae js ds pop loopne sub stc add (bad) icebp xchg cltd fisub sub (bad) imul rolb add ret mov das imul inc lret sbb fidivl xchg adc orb mov dec scas and imul inc jnp ds cmp fisttpll mov mov sbb jb cmp cmc mov mov dec aaa jle add out cmpsb test (bad) pop pop inc stos test ss sub adc dec iret pop xlat push (bad) ja daa or (bad) lods (bad) jp mov movl jmp and inc inc ret mov das dec mov inc outsl rorl jp sbb aaa es dec lret orl pop mov or jbe out jle stos sahf xchg stos jb push sbb daa dec imul popa leave xchg fs mov jecxz push mov or dec xor and dec inc loopne outsb mov push popf xor popa jl notl fs dec mov fildl sbb or (bad) or jle pop (bad) pop jle mov push stos inc xchg test xchg cs adc stos fmul movsl mov dec inc fwait int add push xchg arpl sub arpl mov jmp mov loopne in (bad) jno out addr16 icebp add xor lret in inc mov mov sub push stos aad daa repnz icebp jno enter push test daa jno shrb icebp push push dec pop (bad) das mov scas lahf arpl lcall dec outsb sub les shll cmp mov inc adcl iret addr16 xchg dec flds xchg sbb jl fldcw and or clc daa enter add mov lea xor dec imul add and or aas fimul dec jmp or push or pop push sti pop sub lahf adc (bad) mov xchg xchg push mov mov push movl mov roll (bad) imulb insl cmp mov mov out ret scas pop inc add push scas outsl nop lcall lret inc adc out sarl dec mov outsl leave xchg cmp push mov sub jno in and sub jp aad fcomps or das pop ds sub mov and popf add imul inc imul lahf shrl xchg sub sub popf xchg and int out mov inc mov push lods and pop shlb iret or add mov imul fidiv jne adcl in or dec stos fsubrs mov sub fimull cwtl loop or vpsubq (bad) xor lret and mov pop clc jb lods pop sub fisub push cli outsb ss aad mov push dec jge mov scas repz pop fwait aam xorl out aad jl cmp xchg sub pop out jne sti lahf adc xor sub sbb sub mov dec xor insb fildll push dec sbb outsl lcall push push push jne les mov cs dec (bad) jno mov insb mov push dec xor cs divl cli dec leave add call ja in xchg lret outsw add xor sti arpl or (bad) addr16 ror mov les mov jg ret ja int outsl sti stos test xchg push cmp add cs dec leave test out dec xor push cs (bad) repnz cmp cmpsl xor movsb mov cltd or sbb imul int3 out push pop add mov push pop dec jp pop mov inc sahf pop and push xchg ja imul in es xchg sbb es pop xor insb fimul test mov sbb data16 call gs cmp test (bad) stc push jne sub or sbb jns lret stos jns insl xchg jmp mov or shr cmp mov adc ds sbb jns and push xor cmp shr pop sub sub dec add cmp sarl xchg push mov add dec idivb push pop (bad) inc aad xor mov jbe insb mov pop sbb pushf out mov mov push sbb enter mov or ja daa test push xor outsb cltd jo fs xor nop pop jnp mov jno or rcr dec aam arpl movsl in cmovl inc xor pop mov jle add xor iret inc and jmp inc hlt push das ret (bad) popf notl sbb adc jb leave std imul mov and dec adc addl (bad) cmpsl xchg dec xchg aad pop adcl xchg repz sbb dec outsl lcall jns icebp cmp push js push leave inc sub mov inc je pop jbe jae xchg mov xchg cmp aad (bad) mov adc arpl jmp pop mov scas xor sub sti imul insb hlt add add push test lods mov xchg inc pusha dec imul xchg pop out xchg ss xor dec out shrl test push or enter push pop jp (bad) scas pop js cmp lcall add adcl xor xor jp pop xchg iret push and xor sub insl sarb mov lahf popa and jns cmp push gs jp inc shrb xor and les cmp testl (bad) cmc cmp movsb xor and rolb repnz dec mov xor cmp fnsave xchg clc lahf mov cmp dec push ss adc mov add cmpl dec adc lock inc (bad) inc lahf aas mov dec dec das mov xchg lods sbb scas dec int cmp xor push fisubr popf mov movsb dec mov repz cmc (bad) mov pop int mov idivl jnp mov jne icebp out mov pop inc mov push dec outsb adc in fldcw pop jb mov jbe les shrb outsb jp pop pop jb xorl xor jle dec mov dec push dec cmp (bad) fwait lret scas pop xchg add cmp mov push cmp movsb scas int dec popa nop push xchg or or fstp rcrb sti add lcall sahf jno outsb sub sub dec push rorb adc dec data16 mov cmc inc cmc gs in mov cmp push or lods addr16 lret pop mov inc pushf jb lock jno xor jb iret test add outsb sbb lods insb (bad) mov mov loope inc add mov mov jecxz (bad) xchg and and icebp sbb roll scas aad pop xor jg insb pusha flds pop jae loop jge dec fstl das icebp add (bad) inc lahf aas test mov cmp das icebp pop ljmp sub jno insb push cmc adc in fstpl dec stc xor dec cli add jg inc push insb std idivl and push (bad) dec dec and mov data16 stos or inc dec push push mov outsb adc cmp cs push fidivr sbb sub cwtl into jecxz je sti call jno xchg outsb xchg scas and pop and xchg sbb push stc aad xchg loope jle sub movsb mov and out sti pop xchg int xchg dec mov insb idiv movsb lret cli sbb mov (bad) out mov push push mov cmp push cmp lds inc push push push loopne cmp fs cmp imul inc leave pop inc push inc pop jae loop ret and dec push fxch aas adc leave inc das adc cmp test dec jmp adc dec scas adc dec cmc or movsb stos or xchg push mov adc outsb xchg push clc cmove push dec push or push push insb dec cmp fs cmp push adc jae clc cmovs insb data16 push mov insl mov out insl insb mov jge inc insl int3 jnp int3 das (bad) daa lea cmpsb repnz cmp mov pushf lret (bad) js lret push mov in dec aaa or mov or (bad) mul jp inc rorl movsb stos or in sbb push xchg xor push dec (bad) xor lret insb jnp aad in dec incl add testl popa jp push gs hlt nop dec inc mov in mov divl (bad) cmp inc scas cmc inc in (bad) add pop lods inc imul aad jno mov cmp or mov outsb push test adc lret (bad) dec pop std pop dec fisubr ja std in fsts aas stc imul lcall roll cmpl push push lret cltd test or fmuls or mov adc cmp xchg stc adc pop stc clc mov mov mov push push popa cmc repnz cmp dec jns cli dec dec cld cmc xchg lcall xchg lods arpl xlat pop add ficomp dec add divl push cmpsb ffree push sbb mov inc icebp adc pop lods inc imul popa mov lahf loop icebp sbb pop icebp sbb xchg lcall xchg mov (bad) sub in fistpl adc lcall xor insl sbb fwait in dec fldcw in imul xor xor push sbb xchg rolb xchg outsl out outsb aaa (bad) mov icebp xchg repnz jg shlb jno insb mov ss cwtl aas or mov sub ljmp xchg push dec or pop das aad sbb pop test dec pop adc dec int test inc mov dec cmpsb lds pushf cmpsb pusha lods mov stos dec inc mov mov insl cwtl push test imul dec dec or les xor xor rorl outsb mov ss stos cli aaa lcall call mov (bad) pop aas es rorb stc push xor lods and mov xchg loopne sar dec inc imul aam cs mov es iret jbe mov iret cmp ljmp mov adc test xor mov and jmp mov mov aad das and (bad) in decb dec shrl sarl jb js mov call jp xor lods shlb ds dec push jns popa jmp movsl cmp cld or mov jecxz pushf imulb loopne mov enter cli cmp (bad) (bad) cmp mov shrl insl adc or cs cmp sub aad or sub mov jle data16 aas mov cmp dec daa adc in bound addb xchg mov hlt or popa xor add push jmp adc xchg je jo in cld push lods repnz out mov enter outsb cmp cmpsl mov xchg clc xor cmpsb push test dec movsl in dec sbb dec cmpsb enter int mov imul and (bad) es aas cmp sub cmp cmp xor jp jecxz add mov mov sub outsl dec fistpl enter jmp and jbe or xor push not imul and iret je mov pop testl push or push cmpsb pop jp lods pop push adc pushf sub fsts lret mov dec neg lcall push jns loope js lcall ret cmp paddusw xor mov cmp and shll je popf cmc orl arpl stc enter push insl lock mov loope mov cs dec shl sbb jp icebp xchg mov negl (bad) or inc clc aad in call lret mov dec xor xchg jns or mov shr pop cmp ret scas dec or roll sahf and mov arpl inc push sti aad movsb mov clc mov cmp dec push je fidiv dec and lret push inc int cltd mov mov xor xchg insl or fs popa test push cmpsb cmp cmp movsl sub imul mov mov cmp sbb sahf jge and push ss cmp inc jp pop pop fs sbb pop xchg cltd cmpsl mov imul scas or and daa mov leave leave inc negl and loope and cmp cmpsb aaa out daa outsb addr16 cmpsl cmp pop dec push jo arpl adc cmp daa hlt bound testb hlt notl sub dec mov or data16 sub adc mov xchg xor push jne (bad) loopne sub sub mov xor mov mov mov xor int3 pop sbb sub and addr16 negl in or test test (bad) and mov leave out jl outsl outsl es jnp inc pop mov sub push or sub int sbb in jmp dec inc sub and loope scas loopne out mov mov fabs cmpsb lret fcoms es fadds and (bad) push xor in sub jle push jmp (bad) sbb cmp shr cmp xor sarb rcl fpatan cmp test or jne scas imul (bad) daa or mov in aad repz sub dec inc cmp loope inc dec or sub pop ds push int push pop pop push sbbl push xchg sbb repz lock xchg js add dec cmp cmp cmp movsl les mov cmp sbb cmp mov jmp cmpsb sti lret jg mov sbb cmp mov xor and fsts jnp jmp fcoml or (bad) sti xlat adc push jp jne in ret sub add jg negb pop cmp loopne push out outsb sub stos mov mov mov mov ljmp sbb or aad (bad) aaa xor iretw leave ss cmp pop js stc stos push stos fsubl sti inc or mov stc xchg jp adc fwait movsl imulb push sbb lods xor xor movb repz js es sbb sti dec cli push ficompl (bad) jb ret inc cmp mov and jo das inc divl inc outsb or fwait pop imul pushf cmp rclb leave inc orl out insl das cmc test lock shlb (bad) pushf or and shlb jno or or push lods lods and (bad) enter inc push test (bad) sub daa bound xchg fwait int cmp es shrb xchg das sbb pushf dec dec data16 ret incb jns,pt sbb outsb add jle xchg or or lahf jg pop cmpsl pop pop imul pushf or ds push push dec pop jp dec lock adc dec add push enter ret in popl mov cmp sahf pop sbb jb popa jns pop lret and and dec adc stc sub mov adc xor inc mov fdivrs xchg jo mov or fdivrs (bad) aad inc aad repnz pop or push clc xor xor (bad) push pushf into sahf pop mov int das and xchg icebp aaa dec and in in es iret imul inc and inc iret mov cmp mov int3 das negb fistpll sub mov xor adc mov in push pop adc mov jbe push and inc and mov rclb sti repnz push imulb sahf push inc imul adc dec leave inc mov scas aad fisubrl in in add add out push sub inc inc push ficompl xor adc add sub adc push out stos stos xor adc out lods ds xchg inc aad xchg sub dec push (bad) push aad and dec out icebp cmc mov adc push les xchg or inc push stc aad sbb pushf cmp insb das dec loopne jg scas mov dec scas xor sub cltd xchg imul add dec jp inc mov rorb dec inc dec dec adc hlt xchg mov add pushf cltd cltd (bad) mov dec mov pop mov jbe cmp xchg jo dec fwait xor mov popf outsl push std stos sub data16 sub dec adc inc out dec js xchg dec loop outsl in cli xor fnstenv pop xor xchg xor incb xor js cs mov iret lods loop pop push mov or jb in out cmp dec (bad) mov sbb xor cmpsb jg inc mov test or (bad) sub aad jle xor or bswap cs xor (bad) push cs xor lea into leave out int adc ret and outsl enter xchg mov push ja (bad) (bad) test push jecxz shlb scas fnstenv pushf pop pop pop push push movsb lods ja inc stos cltd cmp scas mov push dec or jg cli sub mov sbb cmp iret ljmp cld outsb leave xor xor push dec mov out or adc mov or ret outsl jl xor rolb mov outsl xor mov fadds mov add jne ds xchg inc and adc (bad) fiadd and mov scas inc inc insl insb sbb and cmpsb jo push pop mov mov pop push js sbb and pusha cmp push stc xor mov dec ja imul addr16 pushw loopne and in xchg xchg stos imul cmp xor xor (bad) sbb cmp out adc daa mov sub mov les repz (bad) cmp aam mov or push test rcrb jns out mov dec cmpsb movsl inc mov push aad push lret leave sub addr16 sbb out xchg push dec add aad stc call ja mov frstor iret pop sub sbb jbe (bad) (bad) je pop jb fwait jmp outsb cmpsl in (bad) (bad) xor (bad) lods xchg (bad) cmp cmc xorb add push mov sub lret and sbb loop xchg push popa (bad) leave sbbb rcrl popf mov in push dec ret jbe mov movsl iret jb push sub cli rcrb ja adc insb (bad) mov icebp adc jg dec imul jge mov cmp aaa push dec les push (bad) cli lods scas in outsb sub sbb lcall push inc mull cmpsl mov push popf mov xchg push cmp mov pusha daa fisubr xor cmp pop aad fs sub pop cmp (bad) fidiv xlat pop (bad) jo push dec pushf popf mov push mov xor inc dec fnstenv outsb dec sti (bad) cmpsl les cmp sub pop mov leave or and int3 loope fisubrl push out scas adc jb pusha mov mov adcb leave pop lahf div out shrl pusha or (bad) pop loopne aaa icebp or xor jb ja xlat and data16 sub xchg jno pop inc xor dec inc fwait push fldl2t loopne pop add xchg xchg imul scas leave or cmp inc xor leave xor out ss dec adc xchg sub dec insb leave lahf test stos xor or xchg push cmp dec lea fsubl sbbb (bad) mov in cs stos or fnstsw pop ja pop cmp adc decl add aas xchg push and leave imul cli loopne sbb fnstsw fwait pop cmp xchg sti fistpll push xchg inc lret adc mov sub in and mov sub lea leave add xor pop cmp mov cli xchg push stc iret push pop mov push dec jmp xor (bad) fcmovbe test leave push (bad) rcrb in mov sub stc loope test sub stos test push iret mov inc cmp stos mov xchg dec and and test shrw push push ficom (bad) adc cs iret xchg cmp hlt addr16 les les es mov aad sahf add add pcmpeqd pop int out pusha dec scas (bad) mov adc aam mov or push (bad) dec dec adc out adc int3 mov andl imul xchg cmpsb ret aad call js rorl or cmp push mov xchg xchg jne call xor jp popa lahf mov stos int xor mov mov and jne mov clc and mov dec lods inc icebp cltd data16 push add mov insl rclb push in repz imul jno push push in xor cmp (bad) pushf inc pop jg arpl mov cmp repz cld (bad) xor icebp pushf leave xchg iret pop and in mov pop pop fwait dec leave and in mov pushf cli cmp sbb pop push cmpsb loop xchg dec call jo push aaa test sbb xor mov mov push testl js mov sti jmp xor leave mov push xchg cmp test mov mov outsl fidivr xchg pop jne jl mov sti jbe mov xchg int xorl mov cwtl gs std lret jb dec cli and into pushl sar mov fdivrl pop (bad) jns imull ja inc jae aas cs fcmovbe dec jns arpl jecxz ljmp cli bound xchg data16 cmpsb (bad) ficoml es shll mov xor fist adc xchg adc bound lret pop push push mov aam pushf xchg sub xor dec iret and xchg xchg mov push out mov lock or adc sub in scas jp test cs ljmp nop les das push push enter in and adc (bad) add addr16 dec cmp mov loope out jo mov ljmp cs cli mov (bad) out out mov jp (bad) push dec xchg and or lahf outsl imul inc pop hlt clc loop cmp stc xor out pop lods adc in cmp adc dec jnp ss push jae mov dec or stos dec aad lods cmp cmp bound negl fdivrs sbb mov stos pop push out mov push mov or fildl fwait mov pop push in inc out ds leave inc int pop sub adc mov loop ds ss daa sbb jecxz mov imul es (bad) jbe mov sahf or mov jbe jp jp ret dec out mov inc jno leave (bad) cmpsb inc inc pop aad jge pop stos dec sub sbb add ret arpl subl or int mov fwait ss popf jb inc or mov sub inc dec mov call cld inc jmp loope aaa out xor mov int sti xor inc xor daa rolb ret dec lds dec call dec push xor inc lahf inc sub pop xchg sbb fwait test xchg arpl roll xor outsb movsl mov lods lock jecxz outsb addl mov inc divl mov push mov shrb out sbb mov daa cmp aaa cmpsb addr16 pop cmp js sbb scas shr mov (bad) mov jmp adc add xor lahf bound jg addr16 in pop (bad) ja and pop xchg push dec add cmp dec pop aas xor jmp out ss and jg (bad) adc ret sbbl cmp lods movsb xchg mov es bound and or adc xor xlat cmp bound pop scas stc (bad) ja sub loope data16 push mov test dec jg or leave (bad) addr16 lods popa lret imul sbb push xchg outsl stos leave push dec mov aas xlat (bad) or (bad) pop jmp xor jne in inc in outsl cmp jg in xor mov dec inc fdivs cwtl out bound test jae les xor or pop outsl adc mov dec lahf pop push add shr pop sahf pop jp inc fmull xor in aaa sbb notb ss out pop outsb xchg mov push repz add mov mov nop ja mov add and jb clc pop inc scas inc enter pusha ja inc sbb sub imul inc inc addr16 pop mov sub xlat shlb ja xlat pop or sub mov push (bad) out mov pop mov add mov scas mov dec mov fstpl inc fstpl jb movsb sub sbb push insb in pop pop dec cmp dec jp movsb (bad) sbb jbe cwtl mov into sbb pop icebp ljmp cmp int mov lret mov xor push (bad) and mov xor mov push mov mov or out pop xchg xchg push (bad) dec push xchg mov xor xchg ljmp ret aas aaa push pop popf push dec ds push or shrl pop ds call movb add sbb mov cmp insl lock cmpsl ss mov mov dec int3 mov xor jp sbb jp inc dec push addr16 xor push push dec cmp movsl fsts call aaa sti fwait jp scas xor inc push mov ffreep (bad) dec aaa cld inc xlat push lea push pop dec scas leave aam xchg jb je les in mov push push lock cmpsl dec (bad) xchg inc lcall sti cmc xchg rol sub xor pop enter push pop outsb lock and decb jg,pn hlt mov push cmp std (bad) mov movsb in ds push clc out mov jno cmpl sub in daa pop mov cmpsb bound xchg xchg fldcw push jnp mov (bad) das lods pop pop stc pop (bad) mov ret cmpsl (bad) sarl pop push imul mov (bad) cld pop inc xchg aaa jbe and mov xchg sub xor cmp mov mov push iret aam jp imul inc lret test int shrb insb or mov addr16 push test (bad) and (bad) mov mov pop outsl sti notl clc cmpsb sbb xor pop push mov int repnz in aad or jg repz scas xor cmp inc xchg mov data16 or cmc fidivr jae adc fwait repnz xchg or test push pop outsb negl or (bad) leave (bad) test out addb das xchg iret mov lret and mov adc inc adc addr16 call imul lods sbb negl xchg scas push sarb das movsb imul mov push test ja cwtl leave push (bad) imul gs dec fcomip pop mov fwait scas xor repnz out push mov imul mov mov sub mov out (bad) pop adc inc imul es (bad) push mov inc (bad) dec inc scas ret jg cmpsb subb or je push (bad) scas push mov push jae movsb mov add push repnz out arpl pop adc jmp adc mov enter cs lock ds pop or adc sbb sub push pop jl pop (bad) daa outsl addr16 sub mov dec imul push adc sub scas cmc jge mov push xor ret sub jecxz mov inc pop (bad) sbb cmc imul aad xlat jae or (bad) into (bad) imul int scas gs data16 jg call mov sahf addr16 notb lcall xor xchg jle dec cmp (bad) rclb inc daa and push lds push cmp adc sub (bad) mov repnz out testb out repz outsl scas push aaa mov dec xchg jb in and popa push test push sti push punpckhdq test out shrb ret pop dec xlat mov call inc xor dec cmp cmp mov push sub xchg imul cmpsb out std ss notl xchg or inc sbb jae and jle stos or and cmp jo dec fidiv sub cmp cmpsl push aaa mov (bad) pop add mov (bad) test mov cmp dec sub pop out jb mov stc iret push inc (bad) rorl sahf sti test lock repnz ret add nop adc imul std xchg fbstp int3 test cmpsb adc dec ss push dec ja sub je js (bad) call inc jb or data16 je dec mov imul lock (bad) idiv cmc aas or inc jbe jbe xor inc rolb jmp pop pop test leave fild shl mov out repz xor sub outsl dec jg negl inc lret imul xchg (bad) mov inc inc sbb fiadd lock push jno mov not xor ja push ss in scas sbb xor sbb sub jo cmp sbb and or push dec sbb push mov push pop arpl xor fs mov dec pop lds pop lret in dec pop and jae push xor stos add sbb add out xchg cmp push cmp gs push subl push jne fidivr jp or lcall mov jg or call mov or jp mov fwait rolb cmpsl out (bad) imulb gs imul movsl (bad) mov push mov lock ss adc out xor in jbe pop callw mov jl imul stos sbb fstps push lods inc add pop jnp in lea xor sahf test cmpsb pushf mov add adc xchg mov iret push or jb xchg sarb jp inc push xchg or in mov dec sbb mull inc in repz inc test repnz out rclb or into (bad) mov pop pusha inc push xchg fstpl jo mov push xor cld lret (bad) mov pop das inc insl ss push cmp push jecxz mov mov lret (bad) dec jnp sub adc outsb xor imul test sbb inc adc bound and adc aaa xlat imul and cmp mov sub pop inc es (bad) in daa mov sbb jb xchg test (bad) push (bad) dec pop push out lock pop inc mov scas cs sbb loop and notb out stc inc jns addr16 call adc xchg dec sbb mov out pusha icebp inc loop js adc ret in mov in adc pushf dec cmp lahf pop jg (bad) stos or arpl or aas cmp cmp imul outsl jp insb sbb pop loop fcompl cmp xchg call or jnp mov outsb mov test dec daa sbb clc fs lahf xchg xor lea mull pop stos cmp xor push mov jae idivl add or adc nop cmpsl out pop adc dec dec arpl sbb ss and aad fwait sbb mov mov test jl sub out sub mov push in sbb ds push push sbb jb xor xor or cmpsb hlt xor mov sub xchg add and mov cmp (bad) push mov stos sub push leave pop inc lcall popa xchg and xor sbb ja leave lahf into mov lcall sbb push addr16 fwait aad dec push cmp dec pushl int cmp xchg or repz rcrl mov push push pop xor push fsubrp int jl pop scas cs stos daa cmpsb xchg pop (bad) cmp in mov test (bad) jmp lret lea into cwtl push jbe push dec xchg std push (bad) divl lret jg push lret cld (bad) fcompl adc dec pop jae leave movsb push cmp inc (bad) jae mov push push daa inc repz mov stos ss cmp push inc dec ljmp xchg inc xchg lods sub dec sub xchg fisubrl orl stc pop fstps dec aad sbb jnp cmp jae jnp cmp cmp or int jp mov dec push dec or dec call cs mov ljmp inc push and jmp out arpl pop jae inc mov mov aaa sti mov inc incb aaa dec pop mov cmpsb arpl (bad) addr16 insl adc cmpsl inc cmp aaa sbb pop int (bad) mov pop (bad) pop xchg push jo jae iret xor lahf push mov popf lock fisubr push mov pop cli outsb push enter pop xchg jae aad mov js mov mov cmc push inc pop cmp ja mov popf cmp inc (bad) int pop (bad) aaa push mov push das lahf and cmp xchg xlat mov (bad) cmp cmp adc test mov push (bad) cmp push aas cmp subl pop add push out cmp cltd sub cmpsb imul test aam dec cmp pop inc daa daa imulb (bad) fwait pop into push ja loop cmpsb rolw dec insl adc popa loop sub int fildll xchg mov or pusha mov xor out jbe pop fistpl mov sbb sub mov inc xchg lock xchg mov lret xchg imul dec outsb es cmpsb cmp pop cmc stos dec popa arpl pop xchg je int sbb in xlat loop jmp enter insb lock jo push mov iret cmc pop adc sub jp sub sub cmpsb mov dec cmp lahf or inc xchg inc lahf (bad) cmp xchg testb jl (bad) lret data16 jo or inc sbb pushf lods call jnp bound xchg xchg cmp sub push insl sti inc loop test pop (bad) xchg daa movl fwait sbb xor xor mov cld stc adc cwtl cmp (bad) stc dec inc nop call and jbe add bound mov leave inc outsb andb outsl cmp push inc data16 push (bad) or sbb xor stc xor mov jo repz or lea adc xchg inc (bad) jb push ficompl and and imul sub movsl sti (bad) repz out test cs aam cmp mov lock sbb push outsb xor cmp pop es rcll (bad) cs xor sbb repnz push (bad) ss iret insl dec xor jbe sahf push and fidivrl mov mov leave pop xchg (bad) xor mov push xchg mov lea xchg or sbb lcall pop pop mov add cmp js fldenv dec inc sbb pop int dec pop and addr16 inc add cmc jp rcll inc lret pop aaa daa dec ret cmp or pop and push xchg pop and popf pop sub cmpsb into sti (bad) push mov jle out pop cmp cld cmp mov or xor sub dec sub pop dec xor push (bad) pop pop inc ja adc fldt jg xchg cmpsb cmp leave movsb mov std mov inc mov xchg das pop fwait pop and push pop inc and inc jae pop mov cwtl sub mov inc jp and push mov sahf cmp (bad) jae,pn mov testb mov insl fwait sub xchg popa xchg push add adc repz dec lret sub or imul mov xchg jecxz fdivrs pusha inc pop sub lea test es lock mov (bad) test dec or popa inc pusha mov dec shll mov outsl bound push ret aaa mov push roll pop dec pusha inc lock into mov addb outsb lcall push jecxz aaa push scas stos insb dec adc inc cmc addr16 test loope jbe aas bound sub and sbb lods inc scas push aam mov xchg outsl mov cli std mov push scas mov adc popa push xor pop cmp dec cmp jmp pop cs orl dec jmp je push and mov insb push mov mov adc xor cmpsl mov movb mov popa out test (bad) jnp (bad) mov cmp inc xchg cltd stos mov testl cmpsb pop jbe test or cmp imul aaa and insl pop fiaddl addr16 ja push cs push inc sti jne mov nop jnp and mov ljmp decb mov or call or out cmpsl xchg cmpsb ja sti fnstsw inc mull mov lret aas and aad inc cmpsl dec divl dec out xor xor mov push pop xor rclb jne or push mov pop mov data16 jne (bad) and mov sub jae sub jns inc testl sub cmp adc dec jbe and lods mov lcall xchg scas scas and mov daa xchg sbbl sbb adc arpl out (bad) movb dec test sub (bad) lret lea cmp push negb imul xor push jo sti xor inc lahf cmpsl test ja stos ds or aas dec xchg mov repnz (bad) xor adc addr16 dec dec into push push dec pmaxsw xchg jno outsb xlat mov sbb add and es dec mov push mov cld je mov ljmp shrl inc jp imul es sbb pop cmp xor push (bad) cmp lret sbb xor dec jb loop cmp outsb jno imull sub inc leave pop mov aad cmpsb sub sbb lock aad mov addr16 outsl dec lret jp xor jl adc icebp xchg xchg xchg xchg sbb xchg cmp cmp jns push pop imul imul ljmp outsb mov jbe aaa pop es ds std loopne inc push pop push out jbe cld out lahf rcrb push sarl test jle imulb adc xchg and sub mov inc and dec xor xchg and cli lret imul leave and sti std (bad) lahf add pop inc (bad) insl (bad) data16 ljmp repnz aaa das stos dec lods add inc fidivr outsl mov xor out out arpl pop push mov push cmp xchg inc (bad) (bad) mov es mov lods jp mov test push out nop xchg shll cmp sti out dec mov sub sub stos mov fstps fimull jbe dec inc nop movsl cmp cmp leave jmp sbb jo inc xor aam jp sub (bad) jb in daa lcall jmp push (bad) mov dec cmp cmp push scas pop aaa adc add or jo xchg inc jmp cmp dec dec adc jl inc (bad) jno aad lock cli mov fiadd or aas pop sbb mov mov pop adc or push and call dec js sub icebp or dec lahf mov inc imul jmp inc add sahf dec jno push into pusha inc inc inc mov xchg dec sbb (bad) lahf add leave xchg or jmp es out sbb jb cs fist fldl ds inc aam mov jno ss or inc xor pusha mov les dec sti mov push call fwait leave repz pop testb aaa dec daa jmp push aas sbb (bad) or mov clc mov arpl mov jg jno jnp mov sbb imul ss inc jg sbb insl or push sub inc jl push jbe dec adcb dec or or mov mov dec jbe sub sbb mov xchg cmp dec data16 pop jmp pop sbb aaa jge cmp movsb pop jp pop and dec (bad) mul inc int mov cmp xor jp stos push push push dec dec test test mov xchg call adc pop jns add jl sub add mov adc xor sahf imul dec loope sub pop mov mov inc cltd loopne mov cmp daa je dec repz sub xor pop aam test (bad) lds xchg aaa cs loop fs xchg xlat (bad) repz scas jp jno or xchg mov out mov fs imulb push mov jecxz daa scas daa jno mov cmc mov jbe aaa pop aad jb jb lahf icebp (bad) daa mov xchg mov xor push xchg and adc pop iret inc or sbb mov sbb push das and pop icebp das pop adc (bad) mov repnz daa jns or pop pop lret nop mov sub test psllq jno lret xchg out pop mov and mov mov repnz jb xor xorl in test mov das xor leave sub push daa dec sub inc pop lcall inc je das (bad) mov leave mov enter pop dec out sbb inc cwtl dec mov add pop pop dec icebp xor cmc scas pop outsb xor add test dec or cmp mov out and dec xor pop shl ret ja imul aaa arpl lods jno dec in ds das fisubr mov lea cld cmpsb lret out pop inc mov sbb dec add or dec rep mov pop daa and aas mov mov add add mov sbb inc adc inc rcl fimull and ds stos pop imulb jne insb xlat lret cmpsl mov sub xor pop dec inc cmp pop sar jg icebp sbb repnz test out call sub ss push stc push pop mov movsb or dec bound sub sti push out mov daa cmpsb in and push mov pop dec in popf movsl push aam mov xchg ficompl ljmp ljmp out dec cmp (bad) (bad) or (bad) jg mov sbb test fldt sub push or push sub aad ds pop ja sub cwtl jp test imul lret dec dec inc subb lret es icebp lahf ja mov sbbl or popf scas clc (bad) mov pop or lock dec pop cmp data16 sub lock push jp add (bad) xor or jb ret mov jbe push inc pushf push sbb mov lcall xor mov stos in cmp and loope dec daa pop cmpsl dec inc dec jmp inc mov mov jg jp cmp stc pop xchg testl inc mov shrb ret pop out or dec lret sarb pusha xchg call push mov and movsb outsb dec jae inc iret push (bad) jbe and lods or xchg into out pop loop clc mov inc add inc ds out xor push sbb pusha jae mov jecxz fnsave and stos ss adc xchg xor pop pop ds mov lcall lret daa mov test push in mov (bad) pop cmp mov push dec xchg lcall (bad) jae jmp ret and arpl ja (bad) dec xchg mov cli rcll xchg das xchg pop fwait dec push in in pop shrb fmull sbb in aad notb inc rorb cmp sub ja (bad) xchg cmp xchg mov out cmp stc nop call pop dec lahf sbb movsb scas mov sub cmp inc and push add ret cmp jne dec call pop enter in imul push decb cmp std xor dec sbb jmp inc xchg xchg push jo or jl push stos sbb (bad) fs dec push jge mov aaa ds mov insl movsl call fwait pop xor push xchg xchg push stc jns adc mov mov sbb sbb dec sbb lcall or das sub push pop aam push js adc aas dec pop or cli ljmp jb and dec pop out dec aas pop cld or xor fwait cmp jno sub imul adc rcl inc rclb iret xchg add xchg or cmpsl dec sbb cmpsb push add adc jmp fsubl sbb inc dec mov inc sub sti dec fcmove mov and test sti jle push (bad) inc outsb icebp lcall rorl rcll hlt sahf (bad) clc loopne das movb push insb cs iret inc jo test adc jno (bad) fcmovb push pop push daa ds in hlt inc or sub jno (bad) add sub insl or push cmpsl lcall mov mov mov daa sahf cmp add mov and push inc xchg (bad) mov xor mov push idivl push es (bad) jnp pop out dec outsl sti inc aas out and and and adc cmpsb push xchg dec jmp sub (bad) mov loope mov cmpsl cmp push movsl aad imul dec not shr mov push mov jle dec inc ja xchg imul mov cmpsb inc leave int pusha repz mov fidiv push shrb jno push push out add repnz xor cmpsb fadds jnp push xor dec jne (bad) push andb fimul mov inc movsl scas mov add lret inc push lods mov jo outsb (bad) dec xchg push andl and test (bad) not lock stc lret and shrl (bad) dec hlt test add xchg movsl mov cltd mov aas xchg leave push cmpsb push mov mov js inc mov xchg (bad) fldcw xchg cmp pop jmp jmp cmpsb xor outsb add mov mov stos imul adcb dec jp (bad) (bad) stc out inc aaa cmp xchg mov sbb dec scas fcos or adc xorl cmp dec adc decl arpl sbb movsl xchg xor push outsl add xchg sub jp insl popa sbb cmp pop enter decl pop ficom cld jb mov sub in mov das dec xchg adc dec jb arpl dec subl leave mov cmp cmpsb pop loope push push insb pop pusha and or negb out or mov jns test sub lea arpl pop push push inc jp cmp movsl pop stc inc cmp fldl2t push mov (bad) cmp mov push or dec mov xchg push and hlt outsb inc add movsl cld and cs sti ss aad scas popf push push (bad) je inc pop stc jmp push xchg cld or imul insl push and inc jp mov push outsl mov mov loope pop pop inc xchg pop sub stos dec sbb mov loope (bad) dec sbb and jns cmp and lods (bad) lock sub out fimull mov daa bound xor jns xchg sarl sbb sub inc sub cmp popa jo sub sbb enter add lock mov cmp or xor mov or in ds int ja (bad) mov or pop pop jmp dec dec sub (bad) cmp repz addr16 js cmp cld xor inc or (bad) pop cmp lods in out ds cmc fwait push insl or fcompl iret ss cmc aam mov and and loopne orl pop punpckhdq test and out push sub gs xor push es aaa sahf add pop pop push and dec in and insl jp mov daa aas pop je (bad) xor push arpl je loopne stc sub mov cmp sbb inc sbb out jl dec js pop stc scas cmp dec std insl fs pop (bad) outsb aaa daa les mov stos imul push clc sbb cmpsb inc in and inc and cli cltd pop dec lahf inc add pop or sub pop cltd test inc mov stos xchg out and inc scas mov das (bad) or pop jg jb ds xor enter push dec xor push and outsb push mov inc bound pop (bad) repz movsb addr16 sbb imul testb mov inc loop test sub ds aaa push outsb loop daa or push sarl xchg cmp outsb mov jg lea stos fs xchg jle or pop orb xchg pushaw mov xor dec subl or bound stc mov aaa mov sbb and mov dec jnp jg mov dec push or fldcw dec notb int jmp xor sti fidivrl add test xchg in (bad) outsl imulb push mov or pop daa dec push les dec loopne xchg sbb push mov and bound cs rclb xchg inc dec or lret jbe inc jp ret out in outsl jmp mov jmp lock push imull (bad) mov ret fcoml pushl cmp add or dec dec out into push (bad) jns push push (bad) push cmp imul daa dec cli out mov add aas xchg mov fisubr cs ljmp (bad) outsl jae imul icebp pop push pop imul jp icebp mov and repz and dec xchg xchg int3 rdpmc mov (bad) mov mov mov insl xlat xchg xchg dec inc xor push inc jb std mov mov cmp dec cmpsl push cmpsb aaa lahf div xchg cmpsb ja addb jns xchg f2xm1 cmpsb movsb scas adc sub inc mov test xchg push push fsubl xor mov pop loop imul lds xor popf dec adc cmp mov adc adc push xchg or mov dec xchg push and sbb cs xor fiaddl mov dec pop jmp inc sub movsl push ljmp pusha sti push mov jae repnz insl cmpsb cmpsb dec jbe sub and jb pop es mov cld repz cmpsb cmp cli fwait or fisttp push call es xor mov (bad) and outsb dec and insb lods addb in or and iret add sub xor jmp xor sti (bad) popa and inc pop popf rcl std inc adc int fldcw bound pop (bad) dec jmp mov imul mov dec push mov and jno icebp fdivr (bad) push xchg pop jb mov out jmp cld sbbb adc mov jb and ja leave and hlt fwait (bad) out aaa (bad) mul test out mov mov cmp and jl in xchg push and pop inc pop (bad) clc cmpsb add push dec mov pop aam mov dec arpl jno (bad) cmp adc jb aaa js (bad) in inc sub fisubl outsb cmp btsl mov cs and fs jnp fldl sub add imul rcrl jo jnp xchg jp cmp and fnstenv rol aaa add push or mov inc mov pop inc inc fisubrl pop inc out or int3 cld and int3 clc sbb ret inc es clc stos into pop mov cmp shll xor (bad) jl call aaa xchg aaa and stos inc inc pop mov arpl xchg daa adc insb sbb scas ret xchg scas out push push movsl mov dec dec or push and (bad) inc outsl jp lods push notl mov push pop andl fs pop rorb pop fsubrs jmp dec das cmp jle or push movsl jne popa lea out and cli (bad) in ds mov push mov xchg stc sub jecxz aad data16 ss sub jne xchg nop ror (bad) mov pop dec xlat jne dec xor xchg jne cmpsb lock jne cmp imul imul xchg mov sub jo je nop fldcw mov mov sarb jecxz dec sbb and aas cmpsb lahf std xor and jb mov enter je or movsl (bad) je pop sbb scas mov pop and call xor xorl cli jb shl test push inc outsb scas (bad) pop sbb insb scas mov fs cld xlat dec das stc mov dec pop cld sbb xchg (bad) outsl popa addr16 jp push out jbe sub jbe mov xchg push cmp sub cmp cli leave into jbe (bad) imulb push inc subl jb outsl cmp sbb push cmpsb js cmp sub pmullw adc out sti fldcw negb outsl sbb jne dec clc aad fdivs lods push movb daa mull cmpsb icebp add cmc nop pop xor xor mov cmp add mov add cmp mov rcrb int loop in jl dec sbb not dec ja je add mov das dec xor xchg roll cltd xor and fwait (bad) push inc cmp mov dec mov das cmp dec jge imulb push aad in or inc sub imul or scas daa scas sarb sub nop pop scas pusha pop mov (bad) pop stc inc inc fmull dec or dec int3 sub movsl je fmull mov pop sub mov (bad) jl sub mov cmpb jp or sti jne mov mov mov or push test dec pop push sbb out sub test xchg mov arpl xchg leave lock lahf xchg stc lcall gs xchg pop mov push xor leave mov inc push loope sbb dec mov xor push xchg (bad) testb push xchg (bad) pop sbb out push jnp repz xor jmp dec xor ja ljmp dec inc xor sub add dec jb mov test test sub adc sti jle mov leave adc sbb dec test jbe cmp loopne dec inc push pop pop xor fisubl cwtl add loop fs xor negl push adc push xchg outsl lahf ja ds push inc dec sub jecxz mov or nop lea aaa insl out adc mov or mov push subl lds aam jecxz or mov add inc push jb xchg cmc ret lods xor jae mov add mov lcall scas outsb xchg push (bad) daa jae push out lock lahf insb inc xchg cli mov xor sub sbb or cli xchg xchg add inc popf mov jmp mul sub lea pushl add cmpsl data16 cs daa arpl outsb sbb lods int les mov call inc push jg mov lret inc cmp cmpsb in and adc xor cmp jmp scas or test fadds inc or mov (bad) std insb xor fildl ljmp mov mov test push divb mov pop insl lret mov xlat fsts sahf xchg stos adc scas bound scas dec (bad) int scas cmovs adc mov (bad) cmc cmpsb ret adc movsb sub push mov and or inc insb in sub or fimul dec add inc (bad) adc mov dec cmp xchg test xor aaa mov mov cmp pusha (bad) dec aad les push imull repnz adc ss xor xor mov fnstsw ja and sub test imul mov imul mov lock push jnp out push addr16 ja orb fldenv cmpsb push iret mov push incb lods adc jnp popf imul es and lds sub mov push sub cmp xor push cmp push inc lea cmpsl and inc jp xchg enter xchg das (bad) dec (bad) mov push stos divb push push ja daa (bad) aaa cmp inc lock (bad) das addr16 ja cltd (bad) xchg clc bound mov push das out (bad) mov push mov aas cmp data16 jl mov outsl pop jge cmp pop out cmp dec insl cmp jle cwtl test out dec push xor inc fisubr adc lods adc jns inc mov pop cltd jmp es xchg cmp pushl cmp add inc pushf mov mov daa inc push push stos pop cmp pop mov insl int jmp push fstps push jo daa push push cmp in jbe adcl movsl add movsb mov add sub (bad) ss cmp or data16 jle,pn jbe sbb push cmp out ss aas cmp insb dec dec ds xchg adc push ja aaa mov or mov xchg pushf push fsubs stos (bad) jmp push dec out xchg push test xor out negb xchg das daa mov (bad) push or gs lss ja xchg xchg fisubr dec (bad) xchg das xlat mov jl cmovae dec sbb fwait in push fwait cmp push fwait pop insb jmp insb jp fwait js push push mov cmp test inc mov mov out clc pop inc or push sub sbb insb imul dec outsl push outsl pop mov cltd dec inc stos cmpsb cmp sub or mov inc sahf aaa jmp cmp arpl pop stc and popf ds pop add cmp or inc push sub popa dec loop cmp and (bad) inc pop xor pushf sbb fisttpl popf mov inc (bad) sbb rcll imul jmp adc out subl ret push mov jle dec mov fldenv inc xchg call aas scas dec cmpsb and jno jb pop xor mov cmpsb inc std xor push ret out xor ljmp cwtl mov xchg aas out sub iret mov dec push scas fs ljmp nop out jmp sbb loopne cmp mov arpl imul xor sbb lahf sbb imul sti sbb leave lds adc data16 mov jae daa ja or test jg or dec sub negb adc mov xor out inc push jns addr16 outsl cmp jae pop arpl mov aas sub xchg xchg jp lret sti imul cmp aam mov out repnz adc mov fsubrs (bad) mov mov imul xchg jmp and mov pusha ja mov outsl jecxz fnsave dec in jp inc insb inc and jbe out jle adc jle outsb cltd or loop scas call push sbb stos lods daa dec pop addr16 nop or aad push mov lea sub fwait xor imul fbld add or jnp mov stc imul outsb sarl pop sub sbb jl fld1 addr16 sub push adc outsl mov pop rorb mov ds in cwtl jae lea out mov fwait sub scas arpl outsb xor pop cmpsb sti mov or push mov sbb dec addl pop ljmp and lock cmpl popa out imulb stos dec mov test in or sub jno pop ds dec jo mov jnp dec cmp add sub jle and pop jns dec sub ret stc push push sbb inc fs jg jnp mov pushf cmp push sub or cmpsl push pusha dec jns dec arpl mov sbb (bad) dec xchg pop call pop sbb cmp cmpsb mov xor cld shrb fisubl or add push cs outsl out inc mov (bad) jl pop imul push roll notl fidivr pusha adc adc subl jp inc std (bad) sarl or lods mov sarl ds or inc hlt imul decb fidivr add cli and or dec in ss xor test push movsb outsb jno scas ret and fwait out pop and xlat mov or ja hlt shrl mov insb or mov cmp stc sbb and dec inc aaa dec inc sub xchg js push test mov mulw out sbb fcom lea cmc arpl xor and jg jmp roll sahf stc ds mov outsl scas (bad) pop dec lods mov fbstp pop jp inc stc adc mov (bad) out daa stc rclb cld sub adc cmc or pop xor push push xchg xchg xor ret push mov cmpsl cmpb popf lahf mov insl xor sbb imul js inc add ja (bad) rolb push (bad) mov pop cmp inc jp mov cmp bound push cmpsb jnp cltd xor adc out popa inc movsl xchg sbb sub rorl add xor mov mov and lock aad lcall jmp test jae mov ljmp mov ds jns gs idivb dec push mov pop test pusha inc pop repz adc sub push fsubs (bad) cltd je in add leave push sub popa repnz stc into mov mov jmp ss and sub cmpsb fisubl insl int mov pop test or ret leave (bad) push aam lcall mov dec xchg pop gs dec popa fdivs sti addr16 in dec call aad (bad) pop sub sbb sub leave adc mov cli dec mov jp adc dec pop aaa es jae mov xchg mov or iret push fwait (bad) push dec fmuls jns lcall dec inc cmp sub out mov sub sub mov inc fbld outsl test and shlb das (bad) push sarb jg popf jp,pt xchg js test push and test mov cmp iret xor and arpl sub jecxz add mov xor in pop adc out or js test cmp testb ja ret sbb mov into dec dec (bad) or test pop (bad) or push xor dec cmp mov fild and mov mov and xchg adc adc shrb jg dec sahf jnp loopne test fdivrl lods pop xor cmp aad adc cmpsl icebp inc call push or xchg xchg shll stos xor sbb pop jg ljmp cld leave dec sbb les adcl cld xchg (bad) dec rclb pop (bad) pop sbb lret jp outsb cltd or das mov push sbb and les imul int notb (bad) daa sub jae adc into nop sbbl jl rorb outsb xor push inc or jb daa jp,pn jno mov xor sbb push lea pcmpeqd popa imul dec add imul js fcompl imul xchg mov cmpsb jb cwtl into data16 dec in sbb push out test xor sbb sub sub jg call cli leave ja xor daa cmp dec test cmpsb mov dec pop lahf mov cmp xchg mov xor sahf decb mov outsl stc pop notb adc fwait ret mov and pop jge push jp outsb xchg jnp stos (bad) mov pop and rol int3 int cli (bad) dec repnz outsl aas fs scas fsubl or mov cmp jnp xchg mov ljmp and xchg js jg jbe fstps inc sbb cmp jo sbb dec push insb xor pop xor sub mov cwtl mov adc popa outsb test rcrl js mov test pushf push (bad) xlat or dec sub inc xor dec (bad) push in mov mov or push inc mov int3 clc jmp mov iret jnp sahf ret push xor jno cmpl aad sarl dec out lret push roll (bad) pop aas xor data16 adc (bad) push pop mov sub pusha pop mov xor cmp jnp or shrb xor pop pushf mov sub adc mov push (bad) fsubp rorl sub pop aam inc in pop das aaa and cs inc test ss mov inc in insl and rcrb or divl sub jl xor lods push pop xor sbb adc push in and sti out pop pop out mov (bad) jb lock dec popf int gs sub sub imul into (bad) jg adc call aad adc imul pop jg cmp cmp js jmp mov mov mov adc push dec jnp dec pop call mov fldt daa cmp ja loope jp fcoml xchg outsb (bad) xor jb not lods mov dec pop jo adc arpl and cmp jge loope in xor insl jmp (bad) sub cmpsb jl cmp (bad) dec adc js lock dec (bad) and (bad) dec inc cmpsl mov out pop ja cwtl mov mov addr16 push dec or mov mov repz scas insl jp (bad) out jl inc mov inc sbb or mov cli sub loop dec pop xor outsl and mov pop push insl insb cmp and dec xchg out jno sub sbb dec xor ja dec dec sbb dec dec ffreep (bad) movsb js pop movsl outsl es bound mov xchg mov fcoms sbb pop out lds and dec dec and push andb cmp push das dec push mulb bound sub fdivrs inc imul mov and ss push jmp stc sub out movsl insb out bnd outsl jmp mov jp insb lret mov cmp xchg movb (bad) call out jle dec popa mov data16 icebp adc out subl (bad) icebp ret mov xlat loop jp int3 jb int loop fcoml dec es lds test mov mov mov cmpsb js mov mov and xchg and dec out outsb sbb adc out cld mov movsb jg aad cmpsl pushf test stc or push jp stc sub dec adc test lahf inc jbe mov arpl lcall pop lahf repz pop lea or addr16 xor outsb int3 cmp gs aas push dec cmpsb leave and jecxz movsl or clc cs and push push leave xchg xor popa and inc cmc mov mov push mov call xor cs jp jno mov ljmp xchg dec inc insb sbb jne ss call dec insb imul imul cmp dec mov cmp dec je or cmp test ds (bad) mov (bad) or jl je ret jnp je sbb enter jg or gs push outsl fisubrl mov sub cmp jle addr16 push out xor mov push cmpsl push mov pop mov sbb lahf imul imul dec jg xlat ds and cmc cmpsb push icebp and lds inc mov push pushf cmpsb add ss mov mov aas cs push inc dec and in gs das jmp cmp pop into addr16 imul inc inc adc pop fiaddl and sbb (bad) sub cs into add jle movsl data16 ss or inc dec (bad) sbb aaa aas dec mov pop adc adc inc mov imul or aad or xchg xor sti jb loop into stos in sarb mov jecxz mov sub pop jo lcall jbe xor inc cmp mov dec pop jp jae mov (bad) out inc mov ja sbb push cmp (bad) (bad) ds pop in adc xlat xchg pop jg repz xchg cmpsb faddp dec call icebp out cmp or inc cmp inc hlt dec inc out daa dec daa mov mov pop xchg dec pop aad sbb sub pop dec or sub std ljmp pop lods dec and mov mov pop insl stc xor dec dec push stos adcb cmc pop ret mov enter (bad) pop or cmpsl inc sbb cld daa dec or pop and out inc (bad) ds scas xor push cmp pop and stc mov mov push push leave pop mov pushaw aad fisubrl mov dec cmp cmp cmpb ss xor neg daa or dec inc or jg test outsl leave imul sbb pop xchg lock loop (bad) lods dec aad mov inc loopne test add dec test loop pop add mov mov xchg insb sti pop push pop dec jnp pop xchg xor push push fcoms dec jbe popf mov adc push push jns jbe jno push xor and ret add push stos mov inc inc jns (bad) popf into shlb leave pop mov outsl mov fs (bad) push sub rorb sub push loopne mov dec sub lea or mov xchg aam shl jmp xor mov test dec (bad) cmp jns in inc cvtps2pd adc or inc adc sbb frstor jns arpl movsb push push das inc sbb test (bad) and add adc jbe hlt lds mov push jmp pop icebp adc mov (bad) lods fwait mov outsb inc insb push gs inc xchg movsb fwait enter dec dec shrl aas lods push aam iret cmp (bad) aam cmp fimul insb shrb mov leave cmpsl xchg sub cwtl lcall adc xchg (bad) fs ljmp divb sub (bad) out aad loop mov or sub sarb mov es outsl push ret aaa xchg mov pop adc pop and aam arpl int3 push repz jno ret dec out push in mov or jbe jg fsts pop lock sbb mov jns aad outsb mov jb sub xchg inc mov sti inc mov inc pushf daa js test xor (bad) incb xor ret mov cli cmpsb dec jo jp ljmp adc loopne pop and sub cld push and sub cmp dec pusha sarl xchg test and sub sub call dec sbb push push or jp (bad) pop imul xlat out dec jl mulb cmpsb dec mov mov (bad) rorb aas xor or inc (bad) cld into lods cltd adc xor xchg dec cmp inc lea imul out jg gs sbb imul iret jp inc xor and sbb out addr16 ja add mov ds xor mov inc or imul sbbb dec or dec into or inc mov inc daa pop pop test daa dec push mov xor inc repz pop cmp xchg mov sarl push mov scas sbbb pop mov xchg cmc sbb xchg sub jno jmp aas cmpsb (bad) push mov mov xor pop cwtl xor test xlat (bad) push push mov push arpl cmp pop data16 stos adc pop lock (bad) in push test imul push mov (bad) push ss scas mov pop fcomps scas ret sahf arpl push es pop outsb pop and mov mov sbb mov cli test out mov or pushf push mov inc jl leave and inc sub inc adc int jnp jbe lahf shll jne loopne inc or mul pushf jne cmp es sbb push pop int3 push push leave xchg sbb arpl fmul fisubrl fild (bad) lock data16 push push mov and xsha1 cmpsb mov and sbb outsb outsb jno inc mov adc push push jb mov sub ja adc pop aas mov xchg adc mov mov adc lods repnz clc xchg mov ss mov mov pop movsb leave and cld dec insl sub dec adc outsl pop movsl aaa push cmpsb das push (bad) aas lahf sbb popf ret imul cmp lret jp outsb add inc xchg ret add aas dec push pop leave dec or sub sti incl inc lock push xor inc popf push jbe adc xor adc ss lods movsb test cmpsb mov outsl or je xchg or jbe call test leave dec scas dec dec or repnz push mov and lahf jns inc mov mov and lea fwait pop in outsb stos cmp xor shrb mov outsl jp and into push daa and in or push and pop push xchg and dec mov les jg or push rcrb test test and (bad) imul xchg and or (bad) sub rorb xor and out xchg repz lcall scas mov mov inc ds dec xchg xchg les sub xchg (bad) and sub pop cwtl arpl inc cmpsb push xlat xchg daa adc jle sub (bad) cmpsb push xor push (bad) or popa push mov xlat cmp lods mov mov xchg xchg repnz es mov xchg fdivrl mov xchg rorb sbb outsb daa or dec ss gs test es sub sbb mov ja jbe enter pop pop mov jp leave pop sbb push fisub jbe mov sub xor adc push scas mov loopne cmpsb es fldenv mov mov into fs dec test jb sub push sub daa aaa cmpsb ret ss xchg push xor and les jns enter xor daa dec data16 daa mov inc cltd loopne sub inc das dec dec test dec mov ret or pop dec inc dec (bad) push cmpsb cmpsb dec test fs ret fcompl mulb push dec jecxz adc push or dec or cmpsl pop xchg ljmp fbld (bad) js in out add push in push stc daa mov adcl aaa dec out dec jmp push in xlat ss cld daa inc mov push mov sub out cmpsb adc adc cmpsb imul jae and insl outsb sbb sub xchg pushf popa mov rclb les push idivb test cmp xor xchg sub jbe popf out xor mov xchg dec inc xor cmp mov ja,pt sbb pop pop add mulb push stos daa sbb adc (bad) mov inc nop pop add std lock inc div dec ret shrb cld or xor lret xor das bound lods push out fild xchg inc or pusha jmp and iret inc mov orb mov lock imul (bad) into sub cmp push sbb inc pop xor or (bad) mov test out pop daa inc das cmpsb adc inc sub inc daa cli test cmp sbb push loope xor cmp call ljmp inc pop mov loope popa aaa mov mov aaa cli push push cmp push jbe pop mov cmp mov mov dec div push inc mov insl dec mov gs hlt push mov cld push pop jb pop (bad) mov or rcrl imul gs push (bad) add jg mov push add pop out pop and (bad) scas or fsub cmp adc adc xor and or xchg or das dec lea or sbb dec cmpsl mov pop push and stc lcall mov inc cmpsb std xor inc cmp sub cmp arpl pop cmp dec push sbb xor dec cli popf lods sub or (bad) stc jp jg mov add add mov and mov push rorb mov dec mov ljmp into cltd pop inc rcl pop (bad) (bad) daa cmp loop lret push sub (bad) jmp or mov std (bad) shl xchg mov add xchg ret push dec xchg mov scas lds jecxz jmp or aaa jb das test out rol das cmpsl mov inc fldl push pop das stos daa xchg jae dec jae fnstcw inc mov imul popf mov push pop dec lods cmpl and inc jb jg sub stos cmp cs push add jb cs mull mov lahf and lods or cs idivb add loope fcomps mov lcall (bad) jbe popfw pop push fstpt mov fldt xchg xchg fcomi dec push adc cmp cmp fsubs aaa lds test inc sub sbb ret mov cmp cmc je (bad) idivb push and andl rol pop mov sbb sbb call jp icebp xchg mov repz pop rol xor out push sbb mov sub dec mov dec inc jb movb test dec jmp mov insl negb push pop dec pop mov sub adc leave pop pop xchg mov aaa insb jmp aam out and xchg ljmp arpl dec cs icebp pop cmp pop cld js pop out mov cmp lods mov repnz sbb testl adc sub mov jb scas jmp das push cs leave rorl mov inc mov rcl mov ret xchg jp repnz push jae push xchg mov or adc rorl xor sbb lods es mov mov mov popf or add jmp mov (bad) and and push test shrl add imul inc cmp adc aad cmpsb dec xchg pop loop fwait pusha (bad) add pop jp mov adc cmc mov inc fbstp mov hlt sarl inc leave lods hlt dec xlat mov and cmp jne cmp mov icebp std cmp and mov push sbb repz iret mull mov mov je roll in xor inc sub cmp cmp dec dec mov dec es sub es out mov xchg sbb popa leave jbe shll stos int3 mov pop (bad) sub mov (bad) jmp scas jb imul out dec fadds addl mov dec sub dec (bad) push leave imul cmp push nop stc mov repnz test cmp in pop pop rcrl sub jmp xchg push int cmp adc leave loope jo sahf out inc mov mov popf in sub leave sub mov sub inc or scas andl sti lahf xchg sbb aaa mov inc push fdivrs into push mov data16 in pop fiaddl fnstenv addr16 mov sub inc aad pop adc sub out test int mov in inc inc jbe leave jecxz and jl mov popf adc movsl test jmp cmpsb jb and test xchg pop adc or sti ds inc inc mov enter push mov xchg mov mov xchg jno sbb mov adc mov xchg sbb (bad) jo push ret push test jmp dec push cli or inc and push add dec ror push or test icebp loop sbb adc and add std lods out fs ljmp jb or scas loopne hlt sbb dec mov sbbb xchg test xor fldcw idivw inc cmp ss ret jae sbb aas dec aad dec inc cmp cmp jbe xor flds aad mov mov shrl repz jecxz push (bad) in xor jg movsl shrl test popf fsubs ss out or cs cmpsb je,pt notl stos push push scas scas out sti (bad) das xchg cmp dec sub ljmp sbb sti cmpb into sub outsl jg cltd test add sub or jp xlat cmp pop pop call outsl mov push inc jmp ss xor sub sbb adc mov int3 pop bound push icebp sub jo shrb pop cmpxchg sub adc fistpll pop mov dec or adc dec or arpl xlat xchg inc cmp jle adc xchg dec cmpsb inc sarb loope jbe push es push or inc sub aad or (bad) inc dec jnp inc push inc sbb (bad) sub iret cmp (bad) mov jns loopne out jb jo repnz inc xor popa daa jecxz jbe mov imulb ds dec sub (bad) push es dec ret lea jge call pop sarb xor cltd es sbb jmp cltd inc test ret xchg pop icebp inc mov in push fmul xchg sub jmp xchg pop pop mov loop jg dec pop jae jp data16 adc out jo mov cmpsb sub sub push xchg aam inc cmp pop xor into jp (bad) sub push mov mov lahf pop push pop push adc push repz xchg jns push and inc push mov and or (bad) imul xchg test mov cmp ret bound sub jp jno cmp lahf js xchg les (bad) cltd dec inc rorb xor add push inc lock cltd jns out sarl mov sub pop pop xor xor lret mov dec and mov and movsl xor sahf shrb cmp or icebp push push (bad) mov push lcall aaa cwtl cmpsb push je xor ja popf xchg cmp pop imul arpl cld (bad) in repz out (bad) pop add pop imul pop neg call enter sub es mov lea or outsb dec lods les js jno (bad) js push sbb inc int xor sub xchg mov jg add rolb mov mov cmp stos jbe mov cmp cmp dec into inc in sbb sbb aad or xchg pop imull (bad) ja dec mov mov das add dec mov inc lret adcl cmp bound cmp cmp call and jbe push xorb (bad) clc ljmp lret cmpsl lods ret enter mov push fwait nop scas push xor jp jg popa mov mov stos inc mull pmullw insl dec push nop jae or out ret stc xchg push mov sub adc jp stos lea push sub cli daa xchg sub test adc mov add (bad) sbb leave xor jns jle push leave xchg (bad) adc arpl xor lock enter cmp rol inc push sbb xchg jb xorl xor mov shlb or pop jmp sbb dec lcall call popf mov outsb dec mov cmc das ret lret in cmc aad dec sub xchg lcall loop mov outsb mov or test pop adc fsubrs cmpsb (bad) or sbb and prefetchnta out and push dec aad and cmp imul push jno jns sub ficompl add ss into mov dec cmpsb iret push inc adc adc mov sbb mov xor xchg mov testb orl mov stos dec cli push test xor ret xchg movsb ret sub or mov iret mov pop mov xchg jge mov xchg lret lock (bad) movsb jb scas lret dec jb sbb mov and sti sbb jge fwait dec leave xchg es xchg ficompl mov cmpsb (bad) inc in push aas iret jnp in jns enter pop orl je ja es jecxz push inc je cmp mov xor mov loop stos mov pop adc leave lret inc and sub rorl xor add (bad) sbb in xor insl test lea mov xchg cli adc dec cmp cmp mov mov push inc test mov add jmp dec fs pop loop arpl jb push jge rcrb stos lahf out mov xchg jbe jo and ss leave je repz cs fs and add in je lods or and faddp push clc mov cltd dec mov jo push push dec leave (bad) sbb (bad) xor inc jp les xor xor lock sub daa adc push jo jb fldl mov ss mov mov and mov lahf pop push mov xchg cmp call cmp fimull loopne cmp mov lock mov lret mov jg (bad) in push std dec push dec fcmovnb or stos xor mov mul or and push cmpb dec mov scas sbb aaa cmp (bad) cmp mov ror inc cmpsb and out and mov mov (bad) mov mov sub adcl add cmpsb cs xchg je imul jl lcall sti int mov inc cli aad aas js (bad) sub add jbe out jno cmpsl mov (bad) stc mov sbb push dec imul push jg or cmpsb iret cmpsb aad mov xchg push adcl or (bad) icebp mov out mov negl dec mov and inc jp insb test mov fisubrl outsb pop stos sbb sahf push aaa js sub (bad) and push sbb jb mov or jl push les or sbb mov sbbl cmp cli daa daa divl fstps inc (bad) sti dec mov daa push inc punpckhdq dec lock and aad and adc add pop sbb outsb xlat xorl js sbb (bad) mull loope aaa pop sti jne cmc push sbb pop aaa pop cs ja dec or mov leave xor cwtl cmp and and xchg in outsb dec ffree in stos inc inc adc (bad) sub jns inc leave lahf dec arpl rcrb sbb imul dec mov fistpll push dec xchg xchg sub add xchg mov and mov icebp data16 sti cmp outsb out test mov dec or divl fisubl inc ja xchg xlat pusha pop push mov cmp push pop mov sahf mov nop push pop mov sub imul xor (bad) nop sahf outsb xchg ds push xor (bad) sti or lahf dec cmc test cmp and jnp sub stc popa iret movsb and inc sti popf fwait lret aad mov stos rorl lds fwait mov mov lods xor push jb cmp (bad) lds xor test ret (bad) lods (bad) adc cwtl sub mov add pop enter sti in int3 lcall ss notl push inc mov aas lds pop sbb (bad) lahf pop pop loope or dec idivl push xchg icebp loope jl add push jb push sqrtsd daa mov cmc sub call push sub mov cmp inc and and or jg xor jae xchg mov ds daa das dec dec mov popf stos pushf lahf dec xor loope inc cltd test test add xchg lea aaa mov xchg dec (bad) mov push cltd (bad) lret imul and outsb lret pop pop push mov cmc pop out push sbb arpl mov xor movsl mov sti daa addr16 ss fs loope mull mov lea jbe cmp jl mov aas push jg xor (bad) sti scas (bad) les fcoml inc pop adc and jo mov enter push pop and cld loop cmp sti add leave xlat adc aad subl xchg sahf jecxz jne clc adc stos add fimull xor push add (bad) mov daa cmp (bad) sti inc inc ss repz pop popa rolb es adc mov aam adc imul js or add push sti aad shlb stc sbb push leave add repz xor pop pop xor add inc inc lret es test mov data16 fisubl push mov jecxz (bad) xor xor cmpsb sub add out call (bad) data16 daa sti iretw ss sbb pushf test mov cmc cmp adc pusha and push jmp lods fwait xchg icebp daa add xor out cwtl sub pop lret jp stc xor mov xor xlat insb push jb aad (bad) lock ret xor jp dec sbb jns pusha rolb xchg imul addr16 jbe sbb dec dec sub push push aaa lahf incb jno mov std mov jb test jb icebp or movsb testl add jno pop mov mov dec insb inc sbbb loop mov jmp leave mov sub jbe inc addr16 mov inc aas mov dec mov add stos xor add mov dec or movsl imul mov and divps jo test jns cli mov lret inc sub lahf xor jp leave mov movsl mov mov cmp jge (bad) jl jne jl mov adc or idivb out sub dec mov cmp push dec das (bad) iret mov je cmc rorb pop insb shrb inc and lods test add xor int mov jo push dec divl cmp push xchg xor cmp jb and dec xor sub mov out push add nop popaw mov loop ds mov push insb and inc dec ljmp pop or adc dec push xor ja das cmp adc addb mov cmpsl xor push inc cmpl jnp jg and dec iret jp mov jbe xchg dec cmp add add ss sbb inc sbb fmuls mov lret jp push sahf orl pop sbb jae dec mov pop in fwait fs xchg lods push popf test out aad imul ljmp (bad) xor aad and push daa es mov insb jno out dec cmpsl xchg pop ss mov mov inc jmp push mov inc cmp lret jle cmp mov jne and jae xchg insl or and adc (bad) mov aad pop mov jb fidivl test mov push leave cmpsl jnp out mov and rorl push out lock sarb dec lea popf push cmp sbb cmpsl out (bad) or fsts mov push out xchg insl mov lret jns cmpsb pop push inc cmp mov pop xchg push add cmc loop xchg jb lea inc pop leave sub add push mov mov push mov or add jl mov out cvtpi2ps inc mov lods lret fdiv xor jg daa mov out enter jae or jnp xchg pop insl adc aad push js cmp mov imul dec jmp mov ret sub or lret sub sbb scas jge cmp leave mov xorl gs fistpl add or out push push jle std repz aad jae std in insb ljmp ficom mov pop (bad) shrl xchg fildl mov adc and daa jp inc stos jg gs pop adc push and mov jp sub adc mov icebp ds sti jbe push outsb pop popf (bad) dec inc or sbb and outsl push mov push out pop pop out push or mov dec sbbl lods push sub cmpsb inc pushf xor inc sub cbtw sub sbb and jp (bad) sub inc sub push dec lea fcmovbe pop cs inc popa das cmp enter mov cmp out leave mov orb cmp imul push rorl mov ret jp pop stos repnz sti jns (bad) mov dec mov jecxz inc (bad) notl sbb lret xchg and (bad) xchg dec jg stc adc sbb add mov push (bad) jp,pn ret jmp (bad) lahf cmp sbb fimul xor and push mov jbe fsubrl cmp or shr pusha es aam cs jge and push popa add leave xchg mov mov and mov or jne xlat icebp ljmp jp xchg dec and mov cmpsb jmp cmp or mov cbtw xchg mov mov pop mov xchg dec sbb (bad) test inc adc idivl push cmp xchg rsqrtps aaa ja mov test and mov jp dec js mov data16 dec xor cmpsl add or imul jns add pop jmp fistpll xlat sahf mov insl lods aad das stos jg xchg jmp data16 add out daa sub sub arpl mov test sbb and sbb and lods cmp push mov decb jl mov movsb rol inc movb (bad) ss rorb ja inc outsb add iret ss loop dec rcll hlt mov (bad) mov pop popa lret and mov and sti jp enter data16 jp xor stos (bad) pop (bad) shr fwait mov fsin jb out cltd testl dec mov inc adc jmp add leave aaa arpl adc in aad sub cs inc xchg leave mov int3 sub addr16 xor iret out mov daa dec fimul cwtl sub jb adc sbb pop pop push mov pop or pop push and pop ljmp or or pop dec cltd inc lret add jne push pop add cmp mov cmp add sub imul fidivrl clc push lods jo sub (bad) and mov jno xor jb push femms (bad) out in dec addr16 cmpsl and dec pop fdivl xor push cmp mov jmp inc adc sub inc jecxz lds adc xor gs mov mov pop mov (bad) cltd xorl (bad) scas es loop cltd adc imul mov out dec cltd dec xor pop adc mov jmp adc pusha dec inc test mov arpl inc dec repz lahf cmp pop lahf jmp add (bad) mov jae repnz aas sub jle cmp sbb mov lahf push mov out inc or fwait notl outsb stos jp push xchg pop mov into ja xchg mov jo fwait notl xchg stos in push jp push aaa xchg jb or aad and fwait lahf mov pop sub daa repz push cmpsb mov jne sub inc (bad) cmc lods mov dec jp xor xchg push cmp daa movsl sbb or pop mov or (bad) lods pop mov xor mov cmp push aad xchg xchg xor rorl imul lahf fwait lds shrl loope inc lahf test and gs mov mov push sub pusha pusha adc into shll stos mov jmp dec sahf adc subl stc (bad) jbe mov inc cmpb jmp ffree repnz sub iret xor lods adc cmc and mov lcall aad loope cmpsl dec imul arpl mov mov xor lods sub cs mov cmp insl sbb mov pinsrw and clc les ja ljmp push cltd test inc sti xor test leave gs out inc add test cltd dec dec jnp imul xchg (bad) mov fisubl daa push outsb (bad) cmc dec imulb xchg dec adc jbe jecxz daa (bad) push cmp jl xchg pop arpl loop cmp scas dec (bad) xor sbb or jne push inc pop and ret pop (bad) dec dec (bad) or sub (bad) in cmpxchg (bad) sti aaa icebp enter jae xchg aas sti jp (bad) jbe jns push sbb fsts or lret (bad) jbe test movsb stc js jnp (bad) dec push getsec mov inc int lret cmpsb mov lcall addl cmp es dec jne das add repz mov pop aaa orl arpl mov outsl add aad test popf ljmp imul xchg rolb outsl ret aad cs stos andl popf in mov pop push inc push cmp inc pop sbb lcall scas lea sub movsl lods push pop fcomps gs mov std fwait sub mov sarl in adc std push xlat push push inc xchg (bad) adc push sbb scas das jmp push or jmp add shll sbb pop outsl cwtl push jp aaa daa pushf outsl sbb std mov stos (bad) aad sub lea divl sbb leave shrl aad fstps xor inc push aaa pop or mov lods sub pop test mov es jg adc hlt pusha mov lcall std jge mov repz rorl (bad) test mov insl lods xor mull xor stos add and and shr aaa clc sarb push std push pop imul outsl or out decl aaa cld push jle pop imul cmp jmpw or sub ss iret gs cmpl leave mov cmpl jnp pop push enter and xor add cld sbb pop xor (bad) mulb adc pop xchg jp pop lret jb sbb cmp or dec outsb decb sarb or mov (bad) ja inc jbe js out mov mov and popa outsl jnp pop ret jg sub daa push lea pop xchg inc mov xor stc es outsl scas out daa xor mov (bad) int3 push mov sbb jl ljmp jb mul ja ror sub jnp pusha ret cmpsl pop add and lea dec and pop jmp sub lret lcall sub out and lret sub sub xchg xchg (bad) cmp divb sbb jbe mov fsub inc pop sbb aam iret xor stos xor cltd sub pop stos mov (bad) mov sbb adc cmpsb sub xor jge push sbb sub (bad) in sub dec xor test clc iret mov jne jne stc and arpl dec xchg jmp sub es push jno mov aas aad aad dec pop push cmp push mov ja xchg sub lds gs jmp or (bad) push or adc mov out scas aad insl aad ficom sarb out sub adc gs es repz es ja mov and push (bad) push test iret mov mov jle push pop jo rorb data16 aam or lods cmp ds dec rcrb sbb lea mov out push outsb sarb jns ret pop add insl cmp xchg dec xor andb test test adc mov mov xor loope mov mov sbb sub ss pop scas sbb (bad) negb (bad) shlb adc cs adc int cmovg les in push push mov fmull push jle imul adcl rorb les mov (bad) xor popa test cwtl js les ljmp cmp cmp dec or cld aad jo dec sahf aam out cs mov inc (bad) ss sub ljmp pop jns movsb stos pop test push adc int3 test push std pop cmp test (bad) out jecxz jne jbe push divb mov inc adc out in jg outsl and lods push sub gs insl in sub outsl lods ss les lds sub jmp dec popa aaa rcll movsb out pop sbb gs mov imul jle jns lock shlb js les inc jne inc dec dec jg cld mov insb push jns fildll sub mov jnp das mov call mov sti ds adc mov jl testl test enter push adc (bad) shrb fadds enter mov decb subb jbe aas test lock pop repnz cmpsb inc enter sub xor ss or adc test pop inc loope pop repz cmpsb negl dec inc dec inc push inc cmp pop sti ss jmp mov out sub push push inc arpl push inc std sub push dec add imul into cwtl adc addr16 mov and xor rclb mov sbb mov call sub sub jb ficoml aam aam mov jns pop in js leave (bad) sub sysexit pop adc loop jmp (bad) mov enter lcall sti push jg pushf jbe inc in xor push cmpsl lret rorb and inc push inc fmul push sub aad pop or mov push lcall inc aad ss xchg lahf sbb in insb (bad) aaa js dec push int rcll sti mov jns cmove add cld xor push inc sahf sub aad xchg scas ret dec sti cmp int test pop sti dec push sub dec int jge addr16 cmpsb push cmp insb xor mov imul fsubrs push (bad) mov pop xchg push sarb into in and inc dec jg mov and sbb push enter dec sub mov sub xchg xchg or sbb sbb and lock dec lods mov (bad) mov mov push mov mov push inc add push push adc and pop push ljmp or dec push (bad) mov pop or int cmp data16 addr16 push in dec cli mov clc insl arpl sub rclb clc cld stos push leave push outsb or popf dec (bad) jg jb in in inc mov pop call shrb sarb mov pop repnz fiaddl xor xor mov pop sub lret lret pop test xchg mov sbb mov aad or test sbb sbb mov cwtl shrl pop pop xchg cs test mov push cmc call daa sub out popa dec mov fild xor xor sti popa or insl push sub mov mov push adc sbb inc and gs jne and and popa add das lahf dec ss and cmp cmp ret or dec fldcw cmp push sarb dec pop cmp sti stos cmp dec out or and sti jb jo mov pop inc dec inc mov dec xchg dec inc add paddusb mov cmp pop test imul cld jb inc mov xor pop negb bound inc clc dec repnz add divl mov adc (bad) fldt fisub (bad) adc dec sahf push enter push outsl int3 and fiaddl push sbb and mov mov insl mov mov push jmp xor xchg scas xchg aaa lahf cmp ds (bad) push (bad) or das push dec mov ss add cs test js ret loopne jnp insl fisttpl test push or leave test dec sbb test sti inc pop ds fwait or add iret fidivr lcall sti sub es lods dec xchg shrb xor int3 sbb mov stos sub bound stc (bad) (bad) push xchg insb addl dec (bad) mov jecxz jo push ja dec add and out ds mov subb cmp pop push cmpsb dec pop popa aad rolb and lods (bad) aas or pop jo fcomp into push sbb xor sbb push loop cmpb inc add adc aas data16 fdivl out mov pop shll inc inc push cwtl js push sbb mov das rcrl loopne mov push out dec push mov inc sub xor dec xor cltd xor push dec jnp and ds xchg mov jg imul mov cwtl mov bound daa mov daa and hlt sub inc inc xor fcmovbe cmp cmpsb add push dec cmpsb mov jmp gs xor or (bad) or pop test and push jl add cmp test cs idivl and jb push dec mov imul or and stos daa or (bad) jp gs jae dec cmpsb fisubrl or test sbb sub pop in dec (bad) fcmovb adc mov scas daa push (bad) cmp push in iret decb cmp dec js cmp ss (bad) sbb lcall (bad) int inc das roll push xor inc sub stos (bad) xor sbbb icebp pop cmp sbb sub mov and push xchg (bad) cmp or out mov js or dec or outsb xor push mov adc (bad) ja push sub lods inc mov jp fnstsw xchg or out (bad) cmpsb xor push push hlt inc xor xlat sbb daa or jmp (bad) cs insl lret repnz and cmpsb cmp enter orl das and mov les mov xor sbb sbb mov jno jp daa inc leave cmp mov int pop popa push dec out or and mov clc stos mov scas xchg sub gs call cmp leave pop push loop test in cwtl mov fmuls mov jg add xchg pop mov adc mov popa jmp scas push cwtl mov sbb mov mov repz inc adc and push rorb notb jl inc sbb cmpsb imul mov pop or movsl cmpsb outsl xor mov ds cli (bad) test or (bad) or jmp repnz sub inc and lods stc pop loope in and mov fisubl outsl mov adc sbb (bad) and fnsave xchg add adc inc pop add dec icebp pusha push test stos mov mov sbb cmp push adc out aaa push xor call call mov lea sub sub xchg push dec add rorb out push mov lea decl adc cmp push mov jg cmp cs push sbb outsl insl test mov or dec cmpsb sbb addr16 loopne inc mov js fimul ds leave int push mov out js jbe mov mov sub bnd xchg movsb imul mov mov add lock mov jp pop js nop test mov in dec inc ret dec push scas xchg stos insb xchg jb outsb sbb dec push enter push in inc lcall sub ljmp push testl inc fadds gs xchg dec push mov outsb sbb dec in push insl sbb stos call jmp (bad) cmp lock inc cs mov out inc xchg mov daa xlat xchg lods rcrl jp xor out mov pop pop and jecxz xchg addl sbb xchg in xor jb int loopne sti out and iret leave mov xchg loope sub and mov nop jbe sbbb rorl (bad) ss push cmp jge dec stos xchg daa imul jb mov dec out push mov lret and xor pop fistl pop inc push movsb icebp xlat pop in jno inc mov sub (bad) mov cmpsb sub push mov jnp ficom pop sti dec ret in inc popf push and sub daa or add mov jae pop add jns pop ficom xor mov fidiv ret inc idivl or data16 sub (bad) pop jp imul imul pop dec pop dec inc jo and mov add xchg mov or dec in push das roll lods pop push sbb ret (bad) xor xor cli sbb bound or aaa sub sub dec inc ss in sub cwtl dec jbe xor into mov out data16 xchg mov pop test out out jne,pt push popl pmaxsw out xchg dec movsb jg cmp inc daa cmp sub and mov pop in gs (bad) daa daa int lods push jb add pop dec call cmp ret xor push inc cmpsb push pop cwtl dec lods daa push xor or and aad pop adc adc push insl push out pop cld xchg mov aad lock cmp mov aaa dec inc xlat negl sub inc stos cs lahf lods xchg inc pop sub mov lea and clc cmpsl divb test mov push movsl jp push push btc (bad) mov push and gs mov das mov outsb daa dec cmpsb xchg mov lahf xchg sub mov dec cmp in sti mov pop cmp or jle shrl lea xor fwait mov iret push je outsb push repz cmp push dec xor or jae inc sub mov push mov and mov xchg pushf popf (bad) int and jl xchg jb test lret enter lods addr16 push push lods jb inc mov cs int3 dec dec dec stos mov sbb pop dec cwtl testl sahf dec pop jge loope rorb add dec icebp dec fsubs sahf fwait aam cltd xor adc in and mov mov arpl loope inc and pop cmp xor mov cld dec inc and lds dec jg cmp mov lock int3 mov dec std sub data16 xor xchg or shrl push dec push adc xchg into push pusha cmpsb repnz push outsb daa sub outsb mov inc mov xor leave xor notb dec cmp mov insl mov (bad) sti lcall pushl bound cmp addr16 icebp ret push push mov data16 dec cmpsb imul jno in (bad) jne push insl (bad) jns pusha lret dec cmp jp int3 fs out out test lcall xor inc setp push or pop xor test mov aaa iret jmp xor cld scas jp idivb dec stos xor dec test ret xchg aad mov lcall sbb jg sub call insb dec gs in aad add in out divl daa push in push popa lahf dec out jno lods decb push sbb aad mov imul dec daa out dec mov dec xchg bound movsb aam dec add leave pop cld sbb sbb xchg call dec out xchg xchg inc dec sti stc sbb inc cmp dec push xchg push xchg sub fistp mov das xchg dec leave popf rep popf cmc mov sub sti loopne dec lret (bad) gs sbb dec cmpsb or ss sub orl dec call out mov or dec jae int3 push adc insl push or ljmp and xor cmp cwtl mov jne mov push or mov (bad) je mov test dec dec or and cmp out jmp mov scas or sbb ss pop jae test adc mov xchg int or notl cmp aad adc es push jbe mov int3 push ret jg enter inc into push cltd scas push xchg sbb jmp arpl xchg lea xchg das lcall enter push negl inc push inc inc dec sti out adc in icebp jne xor and xlat push jo inc dec out divl pop rcrb subl mov sub or jg mov cmp or jnp aad scas adc scas leave jge cmp lcall jle xor out sub dec and vpsrlw leave test xor aaa insl inc getsec jp push scas pop jbe aad in in jp push pop (bad) push push inc cmpsb pop add pop test dec pop loop,pn mov and fisttp dec pop jb test sbb push mov outsb (bad) push sahf sbb (bad) std pop std jmp mov pop inc int pop push nop (bad) jmp pop and enter fptan dec leave and sbb cmpsb test xchg int in add add xor xchg xchg (bad) fisubr das ja push stos xchg cmp scas jmp pop cmp mov push mov push inc xabort mov pop jmp (bad) mov clc inc pop cld imul std mov dec jae lock js sub jecxz jno rolb outsb test sbb jl inc jp push (bad) xchg add pop xor dec test les insb mov sbb arpl js in js inc mov clc in cmp jbe sbb dec pop in test mov push inc enter mov sbb push stc (bad) and inc push cmp add hlt lock xchg inc mov mov das pop gs hlt mov data16 mov cmp pop xchg in clc fdivrl scas adc or cmp xchg loopne dec mov das cmpsb fldcw jp cmp fcomps sub sub push xchg dec mov sbb or and fcompp xor push push mov cmp ja dec push mov js test cltd push cmp mov aas xor dec jns xor jg push les fdivl mov das and mov (bad) iret call mov dec out scas cld sbb add adc dec icebp dec dec fs aaa fsubr (bad) out xchg mov outsb inc ljmp push (bad) mov mov mov enter ljmp lret dec mov sbb push xor icebp cmp push ljmp das dec push fdivrs pop adc movsb jns dec hlt mov repnz stc (bad) (bad) jb outsb les imul mov daa cmpsb inc push cmp mov rcl addr16 mov inc shrb mov jg data16 xor and shl dec or pop pop call mov push mov or mov and int3 pop or jns outsb daa inc push (bad) adc mov (bad) inc cmp xor leave scas flds xlat shrb dec xchg dec jp mov mov pushf sbb mov dec fwait push aaa arpl dec and mov dec test push (bad) sbb pop arpl push pop dec das inc push daa pop dec mov push adc sub mov or das and clc mov dec jae jns scas or aaa add jns leave sbb mov test jne lret pop mov (bad) push inc mov xchg lea out dec mov cmp mov scas mov jg fisttpl push push int3 xlat das cmpsb push xor fwait push popf outsl mov cmp mov xor push (bad) mov in cmp pop fdivl xchg jmp push mov push js push xlat dec divl cmp adc (bad) adc mov insb out lahf inc outsb mov push pop add xchg stos jmp aam jbe aas jne,pt pop jb push mov dec mov xchg mov stos ret loopne lods enter cmp mov cmpsl dec and cmp dec repnz inc push add push out mov dec or jle cmp test cmc mov push orb mov pusha mov dec test or jp fisubrl jns sbb imul rcl add jmp or popa outsl dec xchg xor push push inc cmp cmpsl push in cmp push push dec adc or (bad) scas movsl scas cmp insb push dec daa loope mov mov push call add insb dec cmp orb mov ret ss fwait lods aas sub inc mov outsb sbb clc push rorb (bad) stos out jmp pop inc pop xchg imul or fdivrs popa xor cmp dec inc mov or pop dec ds mov (bad) outsb pop dec pop or mov xchg mov aaa inc and cmp ficompl pop inc pusha fwait aas xlat stos sub in mov jp jecxz jp mov mov cmp push or mov (bad) (bad) cmp pop add and push cs sub adc cld dec test push movsb sbb cmp pop cmp inc inc sub sub xchg and repnz xlat (bad) ds daa sti mov (bad) pop adc push (bad) idivl xchg xor jno mov mov xor aas xor sub mov and js imul adc xchg les add daa dec cli or dec dec mov lods imul lods imul and and cmc cmp adc bound jns insl xchg cli stos aaa lods jb aaa pop (bad) or loop fnstsw cmp sti cmp cmp fwait ljmp ja pop das divl mov push dec fidivr or (bad) ljmp adc pop cmp rclb sahf (bad) mov (bad) (bad) push jno cmp mov pop and inc push call out jb cwtl pop ss out pop iret jmp mov imul inc psrlw ret pop or es xlat xchg incb adc xchg fisubrl mov scas mov int ljmp mov notl cwtl sub outsl fadd sbb mov mov dec out mov sub push pop movsb outsl dec (bad) jae lock xchg sar xchg icebp jle cmpsl ficoml inc pop aaa lcall dec int mov (bad) leave movsl stos aad mov dec push stos or or (bad) aam int jae xchg test leave (bad) push repz add pushl lea jbe lea jmp into out xchg jp cmp movsb or push test fwait shr insb xor je jnp ss push jno mov sbb jp inc jecxz and ret mov inc push jae mov mov jo xorl jne outsl mov (bad) sub aad lcall push mov jnp aad movsl pusha movsl mov fbld cli mov gs loopne adcl push test loopne jne dec mov fcomip push xchg int3 loope xor scas iret call leave cmp pop xchg lcall test and mov mov jno jns hlt push stos bound pusha jo dec or sti lret xor add fsubrl test push lea dec jbe insl fiadd jge imul adc sbb or mov movl adc sub test ret hlt movl popf je pusha jo ljmp mov ret or push loope mov jns cmpsb cld aas jo ds jg repnz sub shll iret mov mov pop lea loopne lods xor test (bad) (bad) fsub mov (bad) jno js dec loopne jecxz cmpsb sbb imul or pop ret loop cs or or sbb repz sub push rcll xor jp adc mov mov imull jne lret pop jmp pop or aam or ret ja xchg data16 fisttp daa push int3 xor jno rcr mov aaa mov cmp ja cmp cmp inc movsb cmp sub mov decb jmp jmp repz ffreep fisttpl mov nop mov pop js jb popa mov pop inc pop push sub mov and push hlt ja sbb xor mov mov mov adc push mov mov mov mov repnz sub movsl cli xor dec mov fsubl mov movsl enter adc test (bad) out movsl call inc cmpsl jge subl lret aam repnz aad push out pop or fdivl inc ret pop xlat fild dec xor mov shr inc (bad) aam in mov movsb and (bad) nop roll sub xor insb repnz sbb rcr adc out pop xor dec sahf jno ja push xchg or popa inc repz shlb mov call mov test push sub pushf jmp jp push outsl xor sbb pop cwtl inc mov push xor or les xor fwait hlt ljmp iret movzwl pop xchg inc rcll out push jno inc lahf pop das loop repnz cmp cwtl cld mov and mov fsubl aam loop or and stos xchg mov mov mov or dec (bad) fucomip xor mov push and push dec xor sbb add enter add stos roll pushf idivb cmp sbb or add cmc sub jno mov lret adc inc jno jbe clc mov dec xor imul pop jmp iret iret sbb push outsb adc jmp aaa cld inc jle mov mov fiadd jmp scas add or inc push cmp imul sub inc popf repnz xchg stos movsb fldl je les push ljmp jl push add jno jne (bad) and mov aam nop out (bad) outsl out cmp dec addb lret frstor ret arpl mov xchg in mov jg (bad) mov pop outsl xchg jno test inc enter rcrl xor add adc pop inc pop inc (bad) jns xchg jmp loope or ss add cmpsb out loop stos imul iret jo mov lcall (bad) out mov and das jns pushf add in push js pushf inc push notb inc std test popa out jnp in sub ja outsb sarb movsb in lahf push jns mov pop xchg leave or sti cmp scas push lahf gs dec xlat cmpsl cmpsb fdivrs sbb ljmp pop aad mov je inc jns cmpsb (bad) pop xchg jo movsb stc xor test movsl ficoml stos xor jge enter inc cmp mov push pop mov sbb das xchg nop pop je pop mov aam bswap cmp clc push shl movq fadds push in mov movsl or add insl mov lret or pushf ret jo lcall aaa sbb inc test push lret mov push subl mov fstps loop add mov (bad) mov jno je sbb aas insl out lcall inc xchg mov push leave lahf add xchg aam lret push arpl mov cmp xchg jmp or xchg int cmc sub xlat cmpsl mov repz (bad) dec sti mov js push mov mov aam pop and dec mov pop add inc push adc xor call inc lret (bad) popa sarl mov leave pop es in cs rcrb movsl add repz in int loop dec mov and and dec inc pop imul xor in mov push repz add cwtl lea jae test call lods mov decb xchg rorb xchg pop mov inc dec insb inc scas pop inc dec mov js xchg dec push or pop pop xor mov dec jb cmp xchg sub xor idivb xchg dec mov mov xlat push xchg dec cmpsb jb mov dec out fdivrs or xor cmpsb inc xor cmp insb scas lret push lods push les mov jle pop imul js ss dec fisub sub jg or mov mov jp,pn cmp push stos lcall js xchg cmp (bad) mov or pop shll in mov aaa clc dec sarb dec out dec xchg cmpsb icebp mov fs jmp push mov jne mov loope,pn es push cmp sbb fildll cmpsb subl mov iret rcl fcmovnu jecxz out out repz add or stos sub das xor cmp sub dec dec push push pop pop sub imul jnp bound loopne push cmp jo push or xor dec mov or stos pusha mov movsl dec lods mov sbb jle and dec out stos sub pop lods sub xchg rorb out sub add mov pop mov mov (bad) ds ds or ret iret cmp fidiv jne mov and lods cmpsl lret mov dec or dec sub sbb dec divl mov inc cmpsl insb xchg dec (bad) jb mov inc cmpsb insb xchg scas xchg jp mov inc dec insb cmp dec sbb sub jb mov inc mov dec dec aaa sub dec fdivs mov inc push aaa xlat cmpsl dec dec cmp stos addr16 inc jb mov inc out (bad) scas xchg dec or add sub cwtl scas js pop cmp divl xchg scas ja push pop dec (bad) jb loop out cmp add cmp js pop aaa or pop jp cltd in cmp push fcomps das out xor push dec out ss jp out cmp es cmp (bad) dec imul loopne and adc out lock cmp je,pt sub clc enter stc dec imul sub jecxz lret mov mov bound repz mov (bad) stos push div mov stos pop mov mov ret push loopne inc mov mov inc inc fcmovb (bad) or sub fistpl imul mov push xchg mov dec sub (bad) dec cs push jecxz mov (bad) daa xlat punpckldq jb jne xor jecxz or inc ret (bad) mull (bad) ljmp (bad) divb fimul cmp stos sti sub out (bad) push cmp repz mov sbb stc rcll fildl jns out ret fcoms fbld daa outsl dec inc inc ja popa bound cwtl sbb ficomp scas stos mov jns sub out lret jecxz xchg push sti jecxz pop fwait rorb leave sbb mov dec mov inc xchg out xchg dec dec mov sbb mov inc push aaa mov dec aaa jb loop push adc js call inc or xchg jae mov (bad) dec insb xchg cmp push xor sbb (bad) or sbb dec lret push xor out mov outsl jno and mov push dec ds adc sbb pop call cmp push mov test sbb aas mov cmp dec lods sahf fstpl inc xor sub out enter lret jmp mov mov sbb jmp test ds mov push and or movsb xor shlb mov jecxz test dec inc adc sbb cmp jnp or mov popf pusha mov aad shrb lods roll mov icebp lret sub cs (bad) push rorb loopne mov pop cmp ss jns push enter sub mov sub loopne mov (bad) bound sub cmpsl add pop xchg das mov cli or inc mov test mov shrb lods cmpsb sub pop add insl push push (bad) cmpsb mov xchg ret sarb ret mov daa popf sub push dec xchg sub cmp pop pop cmp push and jmp push test (bad) mov movsl arpl jb std jmp mov add imul fdivrs daa rolb xlat in sbb sub sbb das adc add popa stos cmp add aam sub push xchg lods cs cmp js rorl test aaa pop jp nop in mov or fcompl mov inc mov sbb ljmp mov sbb mov pop cs and jle aaa and or into or fsubrs imul adc pop mov ja xor insb sub pop adc sub ljmp insl pop xor out sub test cltd dec xchg ss leave mov (bad) ss das inc add pslld xchg jno sub loope sub or inc and sbbl cld out mov lock les aaa mov dec mov jae sbb sub mov sbb leave inc sahf mov subl xor xchg mov in xchg outsb xchg mov dec cmp push sub js push sub ja jmp xchg or out sub repnz incl pop or shl aaa ret sub andb push pop outsb pop dec out xchg jb scas stc fs test xor sbb pop out cmpsb (bad) arpl out sub xor jbe inc pop js shrb mov cmp insl cs scas push (bad) dec and icebp mov or inc imul addr16 jmp ja repz outsl sub dec stos out push sub sub cmpsl xchg cmpsb pusha jae push rorb lret js daa dec inc mov push adc pop mov outsb dec (bad) mov push out dec dec or cmpsb jmp mov insb jp jnp mov sub xchg mull divb mov mov enter cmp leave sub xchg cmpsb mov inc ja jae sbb test (bad) mov insb (bad) push or pop out dec pop or cmpsb or sub mov jo out sub inc out mov insb push dec scas mov xor mov or mov mov setbe inc jbe iret insb into dec clc mov dec xchg stc pusha inc ds insb (bad) mov sub mov js daa dec pop or xchg mov fsubrs inc mov cltd out lahf or mov and cltd mov ficom mov insb pop dec sbb sub xchg outsb xchg sub inc ljmp or sub sub mov mov dec or inc lret sbb dec dec icebp push jnp jle outsb xor sahf mov insb cli dec push push mov (bad) mov insb cmp cmp inc lcall or fimull mov pop xchg adc jbe out sub dec repnz inc mov (bad) mov outsb xor xor mov insb xchg dec orb xchg adc orl or push pusha inc push mov mov insb add add inc ret insb inc dec inc mov inc mov icebp and and dec loop and or pusha inc and sub sub lods fs push in mov dec sbb fs push lea push sbb mov push jl dec jge inc cld icebp std and push frstor popf icebp sbb mov push mov dec mov inc je jne insb hlt sbb fs push mov aad xchg and adc dec inc and icebp lds insb test test and push and icebp in insb in movsb fs push outsb addr16 gs (bad) scas addr16 cmp dec imul jnp sub outsb daa inc daa ss xchg sub jb mov scas cmpsb cmp dec push mov dec sub mov mov push inc push mov push mov sub ss ljmp pop stos sub xchg or (bad) mov and xor (bad) std mov or int inc out mov mov dec xchg pop sbb inc jmp mov jae jp out stos ss lret mov (bad) jae sti mov sbb xchg clc cmp (bad) mov cmp sub das mov cmp or imull lret xchg sti push loope std bound repz stc scas pop jno mov pop or mov xor adc test cmpsb lods arpl lods fistp dec mov mov mov xchg lahf jae add mov clc mov xchg mov les jecxz mov addr16 sti or in scas lret in cs dec mov jnp or pop xchg add jecxz jp xlat fsubs inc lcall in xor cs sti cmpsb int3 stos dec fcomip cwtl cmc ss dec xor movsb scas lock cmp movl in pusha cmpsb xchg push lods outsl std ret shll (bad) data16 xor push cmp (bad) xchg xor inc sbb fsts jae,pt outsl outsl inc dec push jae push inc out (bad) das push ja ds (bad) pop test stos xchg mov mov dec inc jb mov push push pop lret inc dec mov add mov pop js loop sti lods push lret out das lods inc push mov push sti or dec ret lret data16 lret test dec fsubl js clc js jmp rcrl icebp dec mov xor xlat int3 push loop sbb inc mov (bad) sbb imul mov fneni(8087 mov (bad) (bad) ret stos push xchg ja dec push mov mov xorb (bad) mov dec xchg cmpsb mov jae inc jno mov xchg jns dec cmpsb xorb and inc mov clc hlt cmp push dec (bad) mov das inc fs cmp lret dec (bad) or sbb cmp aaa push insb pop jae lods sbb lcall mov xchg imul scas daa lods push pop pop mov jecxz sahf ret dec mov push inc dec sti in daa xlat in push push jp mov rolb push push mov lret mov addr16 fldt xchg mov cli push fidiv scas xlat insl (bad) out push jno dec jg pop bound sti clc push xlat js (bad) mov push cmp mov mov fisttpll xlat out dec cmp jl push push imulb (bad) not push push mov data16 jnp mov inc pop je iret push stos mov mov das sbb push add movsb jle aaa clc mov add ja push inc mov xor mov adc in push cmc pop lock jo cmpsb xor mov mov jbe outsl lcall aas (bad) fimul out fisttp sub jp mov mov jmp inc (bad) xchg and push lds mov sbb pop addr16 inc mov pop xchg fcomip insl data16 dec mov and lock xchg push lret fisttp push mov pop (bad) cli outsb insb xor out mov jb push cmp add je sub adc insb jb sti notl jne inc dec fimull insb pop cmp add ret notb mov dec mov fisttp mov rcr mov stos repnz das inc iret lods jmp jbe cmp adc add lret mov popf pop xchg mov push or sti repz cld mov out dec xor jecxz stos idivl push adc scas adc push mov mov xlat jge xlat dec out ret cmp jae jecxz (bad) ror xchg push dec sub scas mov cmp mov leave lcall lcall ja xchg lret int3 (bad) sbb rcll dec popa and lret mov dec jnp (bad) out xchg lea mov enter jl inc fdivrs mul aaa stc cmp xchg aaa ret lret test lret aas lock cmp cmpsl into dec jg mov incb stos repz icebp inc jns lcall fwait jp stos pusha lret lea pop push jge cmpsb sbb sub dec addl lcall sbb sub sub fstpl mov and xlat mov mov or into lret cltd lea leave sbb push inc xchg xchg pop enter loopne (bad) jb push mov outsl test mov cmpsb rol or les ficomp nop loopne ret js,pn outsl mov and jns insb clc adc sbb loope adc inc jle stos cwtl push mov sub inc aaa pop sub sub mov xchg or outsb out adc and cmc inc (bad) notl inc aad fisttpl (bad) sti test and in dec xorl or xchg stc out pop out lea jne mov mov nop inc inc stos clc inc xchg (bad) or int3 (bad) mov sub leave xor push ljmp jle inc sbb and jecxz push popa sub negl in mov add test and jbe or push ret push push sub sbb aaa mov outsb lcall pop leave mov ret or pop ret das les sub push in adc movsl call dec aad mov mov ret cmp sub ret imul cmp sbb pop cmpsl icebp (bad) jne xchg mov inc cld xchg dec sub sub ss cmp loope (bad) jmp rcll cwtl sub sub sbb xchg sub dec bnd test addr16 jle mov sub cmp inc xchg sub pop mov sub mov (bad) xchg or into sub dec cwtl cmp sub daa mov rorb in sub in fcompl (bad) ds jmp inc (bad) fnstenv sti dec ror pusha arpl in cmpsl sub adc jg cmc ret sub movsb cmp ja dec adc daa testl (bad) int3 roll sub inc inc and inc out add cld push daa es jne inc pusha pop std sub jecxz mov inc xor sub pop cmpsb sub clc inc add push xor loop insl jl add lods cs out and pusha sub lret inc dec nop jg js mov hlt inc mov sub mul (bad) mov es cwtl or je xchg pop stc clc add sub fistpl sub jmp test scas lods faddl aas rcrb packsswb repz pop jb in in add cs insb daa cltd icebp and ja xchg outsb jmp pop clc nop xchg xchg (bad) sub in jae cmpsl mov sub loopne cwtl sub mov xchg jl ljmp je dec adc pop ss adc (bad) or xchg pop flds sub adc mov inc or clc jno sub xor fist push and icebp (bad) sub add test icebp pop pusha xor or sub (bad) adc sub inc and jl lods jo mov sub cmpsl push mov lock dec sub push (bad) sahf sbb sub jmp outsl inc and cwtl jmp xchg mov sub pop insl dec jb add out scas adc pusha cmp sub stc jno sti call mov add in std sub and out sub scas imul mov ss push imulb mov in fsubrs adc xchg sub and in sub xor (bad) lret push aad sub mov (bad) fs mov loopne cmpsl aad cmp or xor push nop or mov mov add insl out add sub fldenv push dec pop sub ja cmp push adc sub jge add mov lret call scas push xor aam mov dec adc ja lret sub add sub sbb mov push pop dec imul sti pmuludq xor cmpsl insb (bad) (bad) xor std xchg push mov inc and mov aad push sub pop jo mov jmp mov imul outsb lcall fdivrs sti xchg sbb mov pop sub push pop fcoms outsl test pop push test xchg dec cmp sub xchg inc sbb (bad) adc adc test jnp inc aas out dec pop movsl test data16 mov aas in decl scas lock xchg jo frndint cmpsb jnp mov sub sbb cwtl jae cmp (bad) cmp call fs (bad) jae or cmp movq push jo and sub dec sub arpl add (bad) sub sub mov cmp sub jle loop mov push inc inc test push pop pop (bad) add cs aaa notb pop je cmp sub sub sub scas insb inc sub lcall lcall lods iret ja lcall imul mov inc and dec inc and test dec sub adc adc inc xchg add sub sub sbb and sahf add fsub xor sub or imul and xchg cmp inc fwait xor mov repz or jg xor mov call inc daa inc lock cmpsb pop dec (bad) ljmp arpl or or mov sub test int pop in xchg je sub out push leave imul mov cmpsl repz push adc xchg push sub sbb test pop dec sub pop cmp jno das dec sub push cld cmpsb int sub je push mov push lods jno push mov jecxz cld sub adc dec out les cs popl dec sar mov mov jg (bad) aad jle mov lret je cli enter mov mov jmp and inc sub dec adc das mov and pop pop mov je out inc gs inc pop (bad) dec leave push push lret sub (bad) incb mov ds daa in cmp jge (bad) jno pusha xor sub in pop cs sub mov mov xor push xor pop sbb pop xorb mov dec cs pop dec lret sub fsubl stos add add cmp fldt getsec mov add xchg out pop sub mov or mov (bad) sahf sub or and into sub mov stc xchg push sub ret xlat out sub gs ljmp dec aaa or xchg out mov call push outsl pushf mov test cs das fdivl or js sub test jg scas sub sbb mov int3 push loope in movsl cmp out or xchg mov sub xor roll sbb mov jb xor rolb lock mov jns je cmp inc scas notl sbb and shrb jl adc jbe pushf cmp cli ljmp bound mov sub lods icebp sbb mov scas (bad) divb sub pop ret jl fwait xchg push sub xchg cmp sub jno data16 push sub sub aaa ss test clc push movsl mov imul inc xchg dec cmp js sub insb movsl xchg sub les and sub hlt mov iret push leave orb or stos sbb cltd aad (bad) stc pushf fstp add sbb aaa sub jne outsl pop xor lcall pop lock fwait sub pop imul sbb sub cmp xchg sbb pop rcr sub jmp mov iret lods sub (bad) pop hlt lds xchg xor in cwtl nop daa hlt pop insb sub cs dec insl cmp leave (bad) sub lock mov mov push sub stos mov push pop (bad) and in sub imul inc arpl popa xchg and sub adc mov iret sub (bad) sarl addl rorl cmp bound inc push mov mov xchg aad jo sub jae mov cmpsl out mov insb mov mov sbb aas fildl mov pop jno ds pop sub sbb xor cmpsl mov popf adc fnstcw stos push sub xchg push (bad) lret xor xchg sub push inc test dec or in inc adc (bad) mov dec mov fdivs xchg sub stos and mov sahf jbe mov (bad) lcall sbb nop jns addr16 mov cmpsb lods inc (bad) cli sub pop pop push mov mov and movsl rcll dec sub clc add sub out push mov dec fs add sub xchg fidivr or push adc cwtl mov mov or roll fmulp ret out lock sahf sub popf add icebp mov into ret mulb or dec push jns push ds stc imul mov jmp pop packsswb mov divb testl leave and mov xchg call mov add std xchg sub push adcl cmp sub mov xor or mov ss pop out push jo sti mov pop test aam mov ret sub int ja mov jmp int3 mov imul pop add imul sub fidivr jo movl add sub sub mov inc fdivs mov out imul add sub adc add popf and sub mov cli xchg and sbb call int3 sub cs cmc xchg aaa imul add loopne (bad) iret lahf or cwtl xchg cmpsl int fwait stc adcl cmc mov cli (bad) cld sbb jbe stos xor dec pop add insl xchg (bad) sub cmpsb ficompl sbb mov inc jbe fisub sub lods xor push lret add insb jge jl sub lea mov push subb dec imul push sub mov pop lahf std aam or cs mov fsts xlat sub rolb lds jne mov daa fdiv inc push test jmp cmpsl mov (bad) or jnp cwtl cmp ret xchg sub addr16 jle mov mov test adc push cs out stc push fsubrl or mov sub add sbb pop mov imul lods sub xor and xor clc movsl ss lret sub add and inc adc jmp sub inc jo sub iret movsl nop leave mov in (bad) movsb idivl in daa pop stc fstpt sub enter loope sub add rolb cmp (bad) cmpsb int3 imul mov incl lds scas call out divl (bad) jnp in movsl or sub js rorl sub cltd idivb sub xchg dec bound pop push xrelease inc scas ss inc adc les pop rcll icebp mov sbb inc dec mov sub or aas insb sub inc clc pop repnz (bad) mov push in mov jmp and ljmp sub movsl fidivl divb cld cltd roll jmp outsb (bad) sub loop pop rclb enter pop jmp outsl ds xchg inc cs lahf inc jle or mov sub sub je jg aad inc sbb lea (bad) test add sub pop out dec sub or cmp lds and sub sti (bad) cs hlt js inc (bad) (bad) out xchg and mov ret ret or out ss cmp mov jmp and sub mov fs sub mulb inc sbb loop (bad) xchg mov mov dec fcmovnb ficompl sahf xchg hlt jb mov push adc jg cmp sti and xor mov test sbb sub mov or rcll bound adc sbb sub not es mov insb pop pushf sub dec lds out (bad) sbb and pop mov dec lret cmp jp mov lods dec xlat and sar in mov sub inc outsb jbe cld xor rcrb fisubl jb sub mov out sub mov dec cld push pop cmp sub testb cwtl (bad) sub inc in insb lahf jns (bad) lock inc sub movsb cmp ss xchg mov xor js jne sbb adc cli pop sub popf pop inc fstps inc pop sub sub mov int das data16 and ss fs jle dec test fimul mov ljmp xchg sub push (bad) into cmp mov push data16 and inc mov add je lods mov fsubrl sub mov insb out sub sub aad enter sbb dec mov pop xchg mov push push or jne addr16 inc ja add out sahf lcall inc adc stc sub mov sub cwtl pop test je stos aam sub ficomp jbe mov into hlt jmp sbb ficomp inc test ja inc mov sub data16 repnz mov out mov and push stos push shrb int3 dec repz and call xor ret int push sahf sbb ss and jmp pusha jg sub in (bad) movsb lahf mov push adc mov loope arpl xchg add xor lret inc mov out and sbb xchg push sbb jb cltd xchg test push xlat in (bad) loope mov mov jecxz cmp dec jp test sub adc push test movsl pop adc mov test and push or lods cs loope jne adc std fldt sub dec cs xor sbb int3 xor int mov lahf lds mov and stc mov mov (bad) lock push jmp push xor pop cmpsb in xor jp cmpsl dec into mov pop fidiv xor sub push dec adc and (bad) xchg mov push les inc ss jmp enter and sub call mov popa lcall mov sub mov leave add pop cmp sub jp incl pusha out add loop pop fdivs in pop lcall sahf sub mov add and ds xchg cli dec dec addr16 (bad) ljmp arpl aad cmp (bad) jle test out and roll xchg (bad) (bad) stos push gs lret cmpsb in mov xchg int xor sti mov push and dec bnd mov movsb sbb pop or bound lods xchg (bad) aad lahf ja sahf mov pushf daa cs and or dec je push or pop stos pop scas lcall xchg mov aam enter pop sarb pop mov xor sbb data16 and inc scas daa inc jl cld mov add (bad) out sti jmp int3 pop mov xlat sti push jg aaa mov jnp jbe cmpsb out aaa fnstenv xor xor out inc mov arpl fisttp sub test sub (bad) cmp rcr clc mov cmc stc pushf cmc add jmp push enter gs xchg imul dec pushf mov mov and lock inc scas rcr push imul out sbbl jg adc push inc push dec faddl lods repnz push xchg dec stos push dec pop xchg mov push pusha cmpsb stos and fstpl dec mov imul sub cs and jne popa js mov push sub jecxz mov (bad) adc push sub sbb or jl mov jne jle (bad) nop mov iret mov das jae dec lods jecxz out jns insb or xchg dec pop dec lock pop sbb cmp dec icebp scas adc pop sti arpl push outsb xor push cwtl test or fldl push lcall hlt pop push sub lods mov sarb dec stos leave mov (bad) fsubl mov xchg pop jo mov cmp loopne mov inc add mov jle jl loopne and xchg faddl xchg sub cmp fiaddl push insb pop pop xor inc jb jmp movsb and push push add xor test out push call mov dec and jg mov pop xorb pop insb sahf mov pop (bad) jae xor sahf mov test loopne jmp mov adc sbb (bad) xchg cmp jmp hlt lret or testb jae out push cmp mov add push out and and push sub mov test scas and insb adc push xchg js fldl cltd mov cmpsb leave jne lds out add imul mov fs (bad) pop mull pop pop mov pop and lcall pop dec dec inc jl mov adc pushf lea jae jmp pushf lea ja mov inc pusha inc adc ror sar xchg rcl aas aam mov (bad) repz sbb mov mov test xchg pushl bt mov pusha bt jmp stos int3 xchg jbe lret shrl dec jns cltd (bad) push mov inc pop cmp mov adc pop jecxz or arpl push test add push sbb in cld out pop rcrb add lcall xchg cmpsb jns loopne mov add (bad) ficoml dec pop mov clc sti inc dec rep test data16 inc xchg sub call inc fiadd mov icebp (bad) sti bound in repz stos in stos xor mov sub pop int mov fs push cmp xor pop (bad) fistp movsb sti mov xchg xor mov and dec or insb push addr16 push movsl aad jno or cmp in adc lock cmp leave mov inc (bad) pop jecxz movsb es into icebp add pop jae fwait xchg dec sbbl mov adc test pop lret (bad) fs aad mov inc add mov (bad) ret adc add aaa xchg pop scas mov sub and dec out int inc scas das inc xor and lods adc outsb stos popf cmpsl cwtl jecxz push jmp sbb and in rcrb (bad) in sbb dec sub movl pushf pushl lea jmp dec mov pop dec sub cmc imul add lds adc add or cwtl fldcw test (bad) stc adc cmpsl pop cmpsl mov stos addr16 sysenter in xchg add popa test and addr16 push ljmp cmp cmp mov and cmp imul sbb jne and pushf inc fldl2t shrl pop sub icebp dec loopne sbb std sti adc gs xchg jmp iret mov xor cmp jo jp mov jno dec jae ret sbb pop cmp (bad) xchg cmpsl lods (bad) out sub lret cmpsb clc pop and fist jnp jbe out xchg scas jno cltd out xchg or mov jns mov mov fnop inc inc add aad pop rcrb cltd mov int iret shr sbb push in mov cmpb (bad) push shrl test (bad) dec adc jle mov mov mov pop or loopew lahf sub dec test int pop lods sub mov adc mov mov fwait inc fadds cmp jbe mov fisubrl adc mov int mov ss pop shrl jno dec push aas mov jo pop out pop pop pusha movsl pusha mov add (bad) pop test mov fsubs pop insb push ljmp or dec mov xchg fiaddl test in adc imul xchg cmpsl cmp push mov mov iret hlt push iret sub decl insl xchg fiaddl pop std iret bound and das dec das aas add sbb pusha sahf repnz inc gs js fistp pop push mov repnz outsl iret lahf loopne aam fnstcw add insl mov popa mov jb jno dec dec inc mov in rcl or pop mov aas cmpb lods shr mov std xor (bad) aaa fadds data16 fwait in ret jo lods mov out shlb fisub mov mov jg insb fsubs lea mov cmc int nop mov cmp loopne cmp mov jmp sub dec xchg scas sbb movsb jp (bad) ffree daa xor dec jge or stos jl xchg or push fsubrs xchg dec or jecxz daa pop daa outsl outsl push mov hlt sub add jl pusha js xchg ljmp jnp scas mov mov and jb loopne sub mov out mov xchg aad pop dec cmp mov fildl pop popf aad sub cmp push (bad) mov cmp lds cmpsb inc popf jne imul mov mov outsb lock jnp out (bad) pop (bad) sbb inc mov inc cld push (bad) sbb sbb nop push cmpsb sub cs jnp xchg push add xchg mov repz (bad) cwtl std fwait sub cli cld (bad) cmc imul fild inc cli dec cs int3 lea or inc push inc pushf cwtl pop insl adc insb cmpsb cltd test sbb ret pop out out lret xor push loopne sub imul pop jno dec mov pushf lea je pusha lea jmp test cmp lea push pushf mov pushl ret mov jge push push pop fiaddl mov sbb mov scas ss je seto xchg or lahf lahf loopne out (bad) arpl pop mov sbb mov sbb pop mov pop inc mov sti mov ss pop (bad) das inc pop icebp lea insl mov scas test push lods jb sbb pop inc negb xor mov test clc and call inc ret sbb sub pop das (bad) out add cld cmpl xchg sub and pop daa cmp and popa cmp lret movsb popf mov gs ret test shrb push roll test mov or pop and push out xchg mov xlat addr16 mov jg aas push loope jp test scas das test cvtdq2ps insl xchg adc xchg or jne test cmpl sub test addr16 iret jo je jno inc and rcll pop dec aam xor bound inc jnp jmp sbb lods push into xchg ja adc push dec jbe inc mov les mov pushf loop (bad) pushf icebp mov negl pop fdivrl (bad) in and xor lods sbb test ljmp inc sub in imul xor add xchg xchg jle (bad) add adc push dec movsl rorl fildl lret cmp clc mov dec loope les mov test mov or mov jnp addr16 lods lock dec adc xlat pop mov sarb pop (bad) fmuls hlt dec sbbl mov jge and jmp (bad) and dec (bad) sub add xor fidiv jecxz xchg stos ret cld cmp loop lods stos mov jb ss rcll mov fstpt (bad) jmp shll dec jae shrl mov std inc inc js pop push jle lahf inc fdivl je pshufw inc cmp jno inc inc dec jo,pn inc mov inc lods mov pcmpeqw sbb adc ret out sbb (bad) out les dec dec xor in add cld inc push mov mov sbb call in dec cmpsl sub xor push decl test cs pop ret cmpl mov hlt ja pop push push fstpt pop sub xchg stos rep repnz push jns cmpsl js movsl xchg sbb jmp mov mov push or pop into jno xor adc xchg jae push mov adc add jno fldl pop inc sub dec shr xchg xor xor dec (bad) xchg ljmp enter or cmp psraw loope add adc jae dec push mov pop fadds push add pop mov or fs pop jecxz push fadds or add imul fstp add cli or push aam and xor stos je je jl inc push xor inc dec xchg push imul daa sbb sub mov ror fs xchg dec repnz mov jno mov jno inc push aas pop out adc push push pop sahf inc fidiv (bad) fildll mov sbb insb shlb out inc sbb ss insb jl sbb xchg and push (bad) jbe xchg aad cmpsb js (bad) lahf (bad) js daa sub sub sub bound mov adc imul add addr16 daa xor mov mov imull sub jp clc vldmxcsr into imul je xchg mov xchg adc mov inc arpl arpl inc pop inc repz popa jle jbe push loopne mov mov add xor cmp inc pop jp and xor aaa mov mov push sbb inc pusha das movsl sbb pop cli inc xor jge (bad) xchg sub add inc pop inc ds fs push jo sub jo enter push add sti cltd sti fs lahf cmp pushf add lods out jnp cmp rorl and xchg fs movsb push lods adc scas scas push push push xor xor scas (bad) sti fwait xchg hlt lret jne gs or roll adc sbb inc ja cmp cmp scas jae or cs xor cmp mov xor sbb mov push setp jb daa ret sbb cmp data16 or pop rorb int3 (bad) xor sbb inc mov call jmp inc pusha movb ror pushf pushf jmp movsl iret jo dec gs push sti test test (bad) out jge and cmp popf and cld mov add inc cmp add xchg jo and lods mov jle and sahf adc mov sub sbb add ds or push fs cmp insb rcr es xor (bad) push mov xor inc leave xor popf and sub pop cmp aad sub add cmp sbb stc loope adc lret shl ljmp mov call es inc mov and add gs je push jb arpl jae jae jae jb add movl mov lea jmp jl push loopne insb mov fisubrl jg push into icebp add out xlat daa jne mov es bound inc lds popa cmpsb sbb adc or pxor xchg incl rclb mov jmp insb shl mov cld mov iret adc inc test fildl out inc cmpl or pop popf inc push pushf ret out add (bad) jmp and cmp mov or fist mov in test test adc pop out sbb cmp in loope jno inc out cmpsl mov sub jns inc dec jle mov lock and aam jecxz xor scas push ret jnp lahf fbstp pusha push into jo push into push in (bad) sarb les cmp rolb shrb mov lcall sbb out scas push pusha xor mov xor jecxz push xor in xchg iret cmp push mov cwtl inc mov add or pop xchg pop mov icebp mov xchg (bad) mov sbb icebp lods jns das (bad) out pop inc sub or add sbb and arpl pop popa cmpl mov jno popf (bad) mov sti (bad) dec mov jle lahf and out rcll sbb mov and jnp and mov mov jnp fs adc push sub into shll and jns mov lods scas mov pop add out fcomps and int test mov adc call cltd xor jbe jbe jg mov sub push and sub pop inc insl cwtl cs jno aas sarb pop stc gs push push lret inc test dec je cwtl ja fs inc aas push mov inc out xor and xor or jnp cmp mov nop scas push mov push push xlat out jecxz test and bsr daa testl xchg xchg jne data16 loopne ret std and call cltd loop lea aad hlt ds sbb data16 add jecxz mov or pop (bad) dec inc pop sti inc or jge mov jno xor jne xor dec xor inc push sbb (bad) or mov jno sub fdivrs mov and lock std or mov mov sbb stos inc (bad) pop push lock add dec pop fs shrb out js int pop inc inc rcrb cmpsl pop daa nop dec pop sbb cmpsl clc or or sbb or adc repnz cmp xor lret and push addr16 scas pusha lods (bad) int3 push int3 pop insb or adc es inc fdivp js imul and loope jne fidivl push push repz sub subl and sub sbbb mov call les cmp imul xchg dec addr16 cmp mov frstor lret sub pop inc push es dec xchg xor add push imulb and icebp xor (bad) mov rcrb cmp das xor sub mov popa jle andl adc mov lret jns rorb pop sti les sbb xor scas adc aas xchg (bad) xor add pop cmp scas dec add xor movsb inc lea lods pop mov pop lcall out (bad) push loopne sub mov or mov add mov (bad) cwtl mov sbb dec sarl or push xor jae adcl je jmp push pushl popl pusha mov pushl ret mov mov movb call jbe xor sti cmp jne sub loope,pt mov dec xchg movsl jns xchg jns testb pop rcl xor mov fwait dec fsubl cmpb fwait test cmc xor rorl jl pushf add or and lods jo iret daa cwtl jae adcb push into pop icebp stc movsl mov in and test push out mov scas sbb loop rolb into dec pop xchg lea fadds in mov scas xor ds inc adc sbb cli and xor pop dec adc (bad) mov imulb xchg dec push sub pop (bad) xchg lret ja dec mov scas mov add (bad) ret (bad) xchg mov movsb popa jno sti mov test jp test or and pop inc test inc pop inc lcall je jecxz mov sub mov xor push repnz dec mov out mov aas cmpsl ja lock sarl inc sbb pop pop push cwtl stos fucom jno cmp sbb (bad) repnz xor xchg cmp fabs inc lahf mov pop (bad) push pop push or in jno sahf sub add aas mov sbb push dec mov cmp iret das push test jecxz mov repz ss test lds mov cltd test dec mov dec imul orl jns mov test insb (bad) and ror fild or les (bad) loope shlb mov rcr and pop (bad) push xor aas adc mov inc adc shrl mov mov ret rcll push add movsl stc cmp faddp mov fadd in sbb xor xchg jno cmp mov les dec push je loopne call popf pop dec xor xchg xor lret xchg push mov ret inc lcall daa cwtl out icebp cs xor je mov mov push jb shlb dec hlt dec sbb in push arpl (bad) mov popf arpl imul jns stc mov vfmadd213sd ret test adc rorb pop pop cld mov jl jecxz fist mov call in dec jb pop cld bound sbbb arpl sbbl push rcrl mov jne fs jmp add inc gs jb jns outsb jbe jb outsb insl outsb je insb outsl arpl movl jmp fwait mov in jno and push leave push push aam mov xchg popa fdivrl and and lret mov xor or inc js mov mov dec fnstcw inc mov push sub das mov cmp dec jg xchg mov nop jnp push inc jge or call mov xor dec mov pop lods pop imul out (bad) push imul aam mov cwtl inc pop inc test mov push add fistpl das out xor cmp lods out movl clc cmc repnz jmp roll mov cmp xlat lahf test sti inc xchg xor stos ror push sbb daa jge cli or cld movsl pop imul ret or adc out aaa in pmulhuw sbb cwtl adc mov xchg mov inc leave push pop loopne xor add cmc mov push or cbtw fnstcw and cltd cmc bound jo mov ljmp (bad) dec cmc hlt pop movsl in and pop sub shrl cmp mov repnz leave jmp dec xor imul lock outsb adc xlat call movsl mov and aam jl inc popf dec xchg mov push xchg sub mov push mov cmp cmpb pusha pusha jmp cmp adc scas sbb jae add push and push inc out xor jae stos hlt stos gs mov sub adc fstpt mov daa mov call xrelease sbb in xchg sbb push sub ret sub sub sbb jno cmp pop add cmp xor rcrl mov jo add dec adc mov adc xchg popf push sbb ja sbb adc mov insl leave xchg js xlat (bad) insb mov fdivs into jo mov inc lcall pop aaa jg mov mov call inc call inc push inc jge movsb mov mov int3 mov mov push lret sbb sbb aam and push icebp popf loope test dec loope hlt inc add push jne int and sub and sarb adc xor pop push sbb add sti cmp (bad) loope inc aas sbb (bad) push xchg lret cmovne pop xchg pop sbb out sbb ljmp addr16 cmp sub js lods and xor lcall lret adc and pop mov pop ss in fildl out mov mov pop test jne cmp ret fucomi (bad) cmp js push sub dec (bad) push mov arpl scas and mov faddl or xchg or sbb xadd adc imul or in jnp aaa cmp inc mov lret aam lret add push and or mov jg rorl fisubrl xchg je addr16 sbb insl pop pop lods push je xlat out imul fldl repz add ja mov js push xchg sub cmp sub jno xor push pusha lea jne pusha bts mov pushf pushf call rcll test test fsubrs xor sar pop push push (bad) nop mov add (bad) mov push enter adc xchg xchg cmpsb fs adc inc lret test inc pop movsb sti movsb sbb inc xchg mov (bad) lcall pusha mov push rcr sbb sbb push mov arpl and fstpl xchg jmp out add mov pop cmp or mov cmpsb cmpb call fsubp sarb cmc jno xor jb cmpsb lahf gs dec xchg (bad) dec pop pop mov xchg imul mov pop (bad) xor mov jg jbe test mov inc cld push xchg xor inc and aas add jo cli in jae (bad) pop lcall and hlt imul jl inc push mov (bad) mov jecxz mov sub pop out xchg je xchg xchg loop outsl inc test pop outsb ss loopne in fisubl cmc pop push add decb adc jne push sbb insl jno sbb cmp scas into fldcw adc shlb shl push repz movups adc icebp lea fcmovb mov dec xlat aaa (bad) mov xchg or jno xor xchg lea and mov sub pop jmp cmp (bad) push mov jb roll ss xchg and cmp dec pop shrb lock inc mov push jns fs xchg call outsb (bad) pop pop inc sbb mov leave jne jle mov fstpt mov inc mov cmp clc or jnp mov loopne sbb inc jno xor ret mov out sahf cmp jne cmp sub aam idivb bound jne and pop add pop inc scas xchg sahf in jb idivb imul fadds adc mov sub jmp push sub scas iret icebp scas xchg jmp (bad) js cmpsl cwtl (bad) das sub mov xchg js push mov call mov repnz xor jne rcrl loope outsb (bad) fsubr ret inc stc push sbb fsubp stos adc adc xchg dec jb pusha imull inc push add jp shrb loope xlat out xlat or sbb inc push jno xor adc mov cltd movsl jae arpl roll inc ja push mov jae jbe pop inc cmp and sahf add repz aaa sbb sub cmp and sbb data16 lcall adc or pop lcall sub (bad) in sahf out loop imul mov rorl pop and mov sarb cmp jae dec cmc sub sbb add dec pop aad mov js xchg cmpsb and (bad) aas shrl dec in rcrb add add add mov pop ret or dec mov xor inc testb mov jno cmp shr pop stos sub push sbb sbb pop mov inc fldl2t mov addb mov int cltd sti aad jb cmp mov jmp repz sbb dec adc inc fbld cmpsb mov adc jbe mov ss sub mov movups repnz inc pop lcall iret (bad) or sbb xor inc xchg add rcr xchg scas nop fadd xlat sub mov adc idivl mov insb mov ret inc fstps dec scas pusha fistp inc push or xchg repz (bad) (bad) pop add pop sarl mov lret dec adc sub test or mov loop scas movsb lahf test aam lcall (bad) out xchg lret aam mov in std loopne adc adc dec pop jno xor vmovntps add rcrb push xor pop (bad) mov lods add ret pop mov (bad) xchg scas mov xor mov adc sti ret inc add loop call stos into xchg lahf orb cmp xor or add jl popa std add xchg inc push and add sbb pop orl mov std es pop mov adc pop inc inc sub push ss and jecxz scas xor xchg mov sub pop mov mov pop xor int3 arpl sub (bad) insb aad daa xchg or movsb sti jmp frstor xor sahf repz std add adc shr dec aam jle adc insl repnz stos enter jl mov mov jno sub cmpsl push dec ja lret imul cmpsb js inc mov cmp je outsl jnp adc popa popf lods in incb ja shlb or adc out das test push sub fwait adc dec icebp xchg or int int3 scas mov imul les adc mov jmp movsl ficoml inc cmp jns dec imul jno xor test inc ja stc rcl rcl sub not add jmp jae xor std popa jno sub mov daa in int (bad) and dec popa movsb mov incb sbb push cmpsl pop add xacquire int sub xor cmp inc sub push dec out nop jne xchg int inc pop pop cmp pop and dec dec arpl cwtl aas enter inc sbb lds (bad) and dec nop movsl mov int jnp out inc push dec and pushw mov aaa stos or imul out pop decb adc out push xchg jae es mov mov shrb adc add lock dec or dec xor aas dec xor imul add cmp sbb sbb inc insb jae xor inc cmpl sub icebp dec mov mov mov addr16 xchg mov cmp or jns dec xor jne add sbb or pusha push (bad) jle dec push jbe and shrb cmc negb incl jge (bad) sub mov fistp es pop loope ss and sub xchg dec ret adc mov shl fcompl in mov in dec jno sub sub clc shr mov jmp sahf inc jns xorb notl dec push sub cmp sub add mov test jg scas ret leave sub sahf jne jne and add pop mov loopne jb inc inc add in mov push dec test push cmc dec mov jmp push mov adc mov fist sub je,pn std dec mov mov (bad) daa xchg (bad) hlt inc pop sahf ss sti jge jbe and leave adc xchg popa cmp jp imul in lds movsl jp push jnp or sub and sub xor pop sub jmp mov fs jb clc jo bt cmp jmp push lea jb clc cmpb push movw lea jne bts shl shl pushf mov pushf pusha stc add bt stc movzwl bt pushf rcl dec mov call fmull test jge repnz (bad) inc push add inc cmp scas pop cmp and or aam dec cli cmpl les cmp das push mov cmc stos adc add es jl mov mov int inc push jb sbb mov xchg aas (bad) sub mov sub ret bound (bad) mov cmp daa add and ds rcrb aad cmp add xor imul pop inc fnstenv jmp cmp test sub jnp push aas pusha inc pop cltd insb (bad) pop mov les xchg aam pop sub mov push dec adc sahf stos mov aam cld mov xchg dec or aad out mov jns sub lods adc push dec jb lret sti outsl push dec dec pop test add aas andb pop pop fs xchg shr sub xor iret ffreep fucomp lret das dec jbe int3 loope push sbb fcomps outsb scas cmp hlt add or and iret ss and sbb fsubp and ljmp or push xchg test std je xlat in adc pop jp lret jbe shr lret push xchg cs jecxz pop fcmovb xchg or clc cmp test mov dec int3 scas imul js adc fcmovnbe push xor push jb xor pop mov mov xchg xchg dec push out mov mov scas xchg xor icebp scas mov jg push scas dec xchg pop test and inc ljmp xor or xchg enter add push addr16 sub fs call pusha lea jmp lret stos xchg ret mov mov and xchg or das dec mov pusha rorb sub pusha iret lret test jo dec (bad) or inc adc hlt mov adc and insb adc rcll popf sbb sub int3 push loopne js adc rcrb pop cmp scas xor push mov mov sbb dec shl inc fldenv movsl push test cld (bad) data16 mov test jmp xlat pop pop insl mov fsub daa clc mov inc js aaa or leave xor pop push addr16 inc pop aas aas aas sbb jmp add and int sub sub stos jns dec call clc pushf sub bt pushl cmc repnz call cmpsl hlt mov mov arpl out inc aaa call ds push sub negb add sti cmp loop adc dec (bad) js dec mov mov pushf and jle scas (bad) adc (bad) leave fstps shlb pop mov cmpl clc dec jae inc pop out negl (bad) jnp xor mov fs ja push stos rcr add jns (bad) cmpsl cmp outsl xorb bound inc mov out adc sub lret (bad) enter push jnp cmp pusha arpl sub cmp sub pop sub test xor cmp imul dec (bad) (bad) mov pop inc pop inc pop xchg lods loope,pt mov dec adc add imul ror xor ljmp in add sbb cld pop out iret es push add mov gs pop xorl call mov pusha in cmpsb push mov aas aad mov inc movsl cmp mov bound pushf inc cwtl in sbb mov pop das push jae mov je jnp loop incl xor mov sub inc mov pop daa bound ret loope or flds inc add xchg mov lods inc std mov xor loopne in xor sbb inc ret shl sarb and dec xchg aad addr16 sbb mov clc cmpl fcmovbe outsb xchg mov push mov or cmpsb fiadd daa (bad) das jle enter int daa push lods int3 bnd xchg sarb aad fnsave int mov mov jl dec xchg xchg int3 movsl cmp and pop daa arpl cmp movsbl mov movb movw pushl ret int3 lock jo sub fildll dec adc pop mov shl test adc int ja (bad) dec (bad) aaa adc inc push (bad) ljmp mov ja push and mov div out lds mov pop outsb mov lahf push negl gs fild sbb xchg mov xchg jb jge leave cmp (bad) xor cmpsb add pop fldt mov jg inc sbb arpl adcl push cs push pop (bad) in mov sbb or stos adc or cmc ljmp add aam xor push sub es es (bad) call add add (bad) jle loopne repz insb and pushf call ja push dec jbe pop imul lahf test pop add push jae push dec les lret sbbb fistpl jmp jo cmp pop jns push popa je jg repnz fistp pop enter imul lret pop jle adc pop shrb jno test jecxz and das addr16 lods push ja or incb pop out outsl add (bad) xor sti outsl out aaa sbbl pop jmp dec jbe jge jne hlt sub call pop pusha out mov dec lret into nop xor repnz stos xchg mov ficomp cmp inc leave push aam mov and (bad) lods xchg add push pusha dec idivb rcrl pushf jecxz sarb adc dec mov jge pop (bad) dec les cmc test adc in mov mov xor add cmp cld cmp ret arpl cltd dec je dec sub cmp test shlb or xchg push adc cmp sub rcrl fildll xchg or and or lea addr16 and push sub add ficomp fiadd and pop mov dec adc add xchg out sub ret popa pop inc push push out jge cmc sbb lcall jb adc sbb and push popf es fst outsb jle pop call aad pop adc xor shll jnp outsb cli hlt movl or (bad) in mov fbld push or fwait sahf xorl icebp stos aam pop pop adc sub adc (bad) jg mov mov out das xchg incb inc cmp mov push sub jno and repnz xor cs insb add imull add mov push pusha pushf pushf lea jmp clc les lods fisttpll sbb dec push dec movsl pusha aas xorb mov or xor pop cmp cmp jp shl sbb mov xchg aaa jmp repz aaa fadds lcall sti jecxz repnz cld lcall add movsl cltd push jmp jmp aas pusha jo mov fcmovnb aam ljmp fdiv jg mov jle jb adc lds scas xor gs push mov jl xchg test adc adc push pop xchg stos (bad) push xchg fnstsw inc fimul loop (bad) or add lahf test jb in and pop imul lret xchg sbb adc mov mov inc repz es fwait ret rcrl sarb xchg xlat es fsubrl xor cs into lock pop and xor push jg xor mov bound jb jge movsb mov es sbb pop lahf loope add add xor icebp scas jne (bad) mov pop sbb imul arpl popa fidiv mov cmp dec push push push insl in xchg out icebp add push mov mov es xchg mov scas scas aad inc xchg stos xchg or sbb sub pop and inc (bad) push sbb xchg popa out jmp ljmp fdivs mov cmp mov loopne sti cmp push cli movsl mov jmp or (bad) lcall popf test (bad) cld mov mov adc imul xlat cmc jbe pop lahf mov lret pop add ljmp pop mov xor mov jb xchg add inc gs outsl fs gs imul add rorb lea mov mov pop pusha push pop mov movw movzbw jmp movb inc call mov jnp push test mov leave lahf push push hlt cwtl out loop aad sub pop ret out jo mov and pop leave jbe dec push add mov leave (bad) fucomp sub inc (bad) aas xchg or scas ret ret jnp cmc or pop les fdivp mov jle mov fidivr mov test test lret movsl stos cmc xor pop adc sub cs pop das xlat xchg out sub ss bound push xchg xlat sub sbb imul mov fld sbb (bad) sbb dec stos pop into nop add repnz and das xor xor jno and sar mov sub fildll or repz push pop (bad) push cmp or sbb pop incb scas xor and xchg inc stc data16 push or imulb dec add out xchg int leave cmp imul cltd movsb adc push fdivrp fdivl out scas and in mov or scas push inc scas arpl push imul xor mov rorl negb jno xchg push mov xor and and push pop daa incl inc jg pop and or cld jmp push enter and lcall jmp or cmp ja int les cmp jecxz ljmp js test repz xor aam test ljmp fcoml xor sbbb push icebp neg jp,pn lret (bad) jns stos inc xchg nop mov das leave movsb jnp mov test hlt xor inc and and mov cmpsl cwtl sahf rcl add loope xchg jbe imul stos in frstor mov ss cmpl and fsubs xor loope pop out fucompp mov or pop pop enter movsbw sub pushf bsf sar rcl lea test clc cmp cmp sub stc stc jmp pusha pushf sub cmp jmp push pusha lea call test clc jmp mov xchg pop js les fsubl jno xchg pop in aam cmpsl rorl mov xlat lret shrl add cmc jmp outsl mov rcrb xchg jp mov aaa mov pop inc add cld popa arpl lret jno mul std in icebp mov (bad) dec lret stos mov imul sbb push int cmpsl test inc xlat cmp psadbw pop jecxz jl (bad) cli loopne mov fs push scas loope aam xor dec push mov xchg dec cli (bad) push sbb and cmpsl jnp mov or pop ss movb fdivl xlat mov shlb cmp imulb xchg stos hlt mov ljmp ficomp and sbb jmp and xor lahf test aas jecxz jl mov xor in push cli jl sbb sub icebp pop xor lds jbe orl add out fist sti jge call push arpl subb and dec mov mov shrb jno sbb mov inc push sub cld mov push jb xchg scas ret push aam shrb jl or daa cld inc mov jl cmp inc clc jl mov popa clc movl cld dec mov pop sub mov mov test push loopne hlt add cwtl lds dec xchg fwait test call jo jg fs and cmp mov je jb or (bad) in lahf loopne ret mov inc (bad) inc std outsl mov nop mov ljmp jecxz cmp adc call pop sbb and inc pusha rol call jmp call or aas mov dec push lret into push cmpsb inc add aam xor lcall jns xchg lea (bad) sbb or clc hlt push std push sub rcll add test xchg negb sub xor dec popf inc adc aaa and mov call cmc ss pop cmp cltd insb lahf pop outsl popw fwait es jbe leave or (bad) in dec je pop je and add or scas lock pop adc imul out adc popa mov lods xchg push jno les add mov push sbb jno sbb movsl adc movb ror cmp cmc sub lea jns pusha pusha lea call jmp cmc jmp (bad) aas add xchg mov add add mov push outsl xor pop mov stc test jno orl jns jnp fs xor fnstcw rorl int3 or push cmp (bad) lds scas push xlat lahf sub test dec jno leave mov mov dec mov mov cmp inc jae pop mov and jne push dec adc (bad) push sub leave jl cmpl and lods mov int3 std add stc sbb mov lods xchg mov mov pop sbb mov jns jnp fs jae test clc call pop popa push faddp fsubp and aad cmpsl pop pop cmc dec sarl push xchg dec mov inc cltd dec je push dec push arpl pop jb jne mov fdivrl add outsl call xor jno popf mov sub mov test call jle sti jecxz sbb add add cmc sub sbb pop shrl int3 insl adc pop sbb iret loope push pop je sbb xor leave push adc push xchg dec lds mov mov (bad) mov call and push lret push loopne arpl addr16 inc movq add aas aas dec stc loope jmp adc pop stos add push sub cmpl pop sbb imulb push mov mov lods jne cmp out fsubs push sub add dec jns adc xchg mov jp incb pop out jle int jmp push mov jnp cmp sbb sbb pusha lods jb jno cmp shrl adc sub mov cmp sbb xor lahf xchg sub jecxz clc inc jle or fcmovnb add (bad) pop add pop lods fwait ret jo (bad) insl mov les movsb sbb sahf insl jb int mov out dec xor jno sbb aaa daa pushl pushf sub clc bt pushw popfw jmp lea je push sub bt movw cmp pushf mov call movl pushf pushl lea jmp call movl mov rep not lea pop mov mov push pushf lea jmp test cmp pushf pushl lea ja call jmp add push gs insb imul je gs add outsb lea jae test cmp pushf pushf lea jae clc call jo das xchg sub iret xor sbb push inc mov int and pop inc fwait arpl test test mov (bad) xor mov cmp jae fsubl mov mov aad and inc mov jle inc jno pop sarl sub (bad) insb mov test pusha xchg push into xchg dec push outsl jo jg mov data16 mov out cltd mov dec testl lret imul adc cmp push cli ss mov loop xchg repnz add sub stos pop repnz lret jbe xlat adc xor jge ja xlat pusha aam or mov dec mov pop add cmp cmp adc or sub inc jl adc mov out add or xor add jg (bad) loop ja in shl jno pop xor or cmp pusha lea jns pusha pushl lea jae test test add push jmp ja ss jb pop insl pop ljmp jne mov movb icebp popl out xchg cmpsl faddl push mov movhps mov daa mov mov test enter xor jno ljmp imul dec pop dec push sub cmp mov hlt ljmp sub xchg inc ss out pop jecxz out fldenv cmpsb fnstenv daa push dec ret sub inc jno push sarl sbbl push imul (bad) addb bound (bad) jl cli inc lret js mov fcompl movsl sti adc cwtl mov mov xchg cmpl enter push mov inc (bad) jne pop icebp mov xchg inc mov and push add loopne hlt stos jle lret mov ret sub lods jo mov dec mov sbb pop fistpl popa sub cmp iret xchg outsw mov popf ja pop xchg aas inc push faddl lahf fbstp jmp lret inc mov outsl out push stc movsw cmp or faddl jg int3 shrb pop std je fs jne mov pushf mov pushf pusha pushf lea jmp movb movl push pusha push push lea jmp hlt pop ret dec repz push mov sub fadds sbb rorl adc daa xlat movsb fidivrl imul imull jge call lea les and nop xchg mov popf rcll popa leave in sbb pop std bound adc cmp movb repz or pop in divb mov je cmp adc icebp fcmovnb sarl leave xchg int push mov pop jge fistpll or inc decl (bad) xor push or sbbl mov cmp sub jbe xor add inc fldcw jno adc in xchg pushf imul and add into lods sarl (bad) cld mov incl testl sub push addr16 iret fadds fst leave or push cs fidiv stc sub dec mov andb out loope add repz pop out pushf test xchg pop add push mov test xor sbb sub jmp iret adc sbb xchg loopne in or lcall xchg or xor pop add ja mov mov je mov jmp cmc xor mov push cmc mov xchg jmp lea jae cmp cmp call aad movsb clc xchg cmpsl mov inc call dec mov in fsubs push nopl mov inc add mov test arpl cmpsb cmp daa mov shll es sub loope pop cltd iret nop mov lock ss inc mov cld (bad) shl add subl xchg mov mov add inc mov test ret add mov jle push push xchg push data16 push mov mov rorb ds in add lea rorb xlat sbb adc xchg inc cmp aam pop lods mov sub popf stos cltd cmpsb sbb jno and dec adc jp outsb scas push mov lods adc xchg aam bound dec nop inc sub testl mov fistpll test xor gs dec adc aaa addr16 sbbl test jno scas cmp add xchg lods je rclb mov mov sbb sub popa fidiv jge push mov andb outsb jo pop cmpsb sti repnz fs leave loope fwait adc insl xor sub jmp sarl xlat faddl dec or and out jo jno adc lret push insl xor or dec (bad) repnz cmp adc sbbb jne sbb xor pop (bad) (bad) cmp mov fwait lcall fisubl mov jp pop push sti into aaa imul mov test cmpsb stc push pop fsubl out xchg xor adc adc pop jle push fld dec mov xchg mov into (bad) or pop mov inc jno adc mov cld (bad) decl cmp add bt cmp push lea jae pusha stc cmp call in iret mov imul jmp xchg mov sti dec cli fs pop sti mov mov xor cmpsb (bad) mov sbb mov or sti jmp xlat scas dec popf adc mov scas fimull rcrb mov and sbb sub in mov lcall mov or test sub sbb mov fildl enter call pop mov outsb push cmp push mov push dec jle int jne mov inc (bad) xlat inc rclb ljmp mov adc xor pushf movl jmp jmp not mov clc mov cmc cmc push mov pushf push mov clc mov bt ror pushf bt jmp call test cmp cmp pusha mov lea ja pushf mov pop pushf call stos xor movsl sti sub ljmp sbb loope jmp dec mov ljmp fsubs rol pushf lods stc es lock scas xchg mov (bad) fild dec movsl iret adc xor mov cli jb rorb push jnp adc clc sub pop negb ljmp jecxz ret (bad) mov in shr daa ret sahf pop dec popf push jge pusha cwtl scas scas mov mov test xchg pop test dec inc pop jecxz push push popa nop pop flds cltd rcl and push sub jo xchg xchg inc sub sub idivb adc jp bound pop inc out xor push push jno jno push out imul inc xchg mov xchg data16 jl mov (bad) adc mov das nop mov (bad) xchg mov int3 les arpl inc in (bad) sbb xor std or mov js in inc test sahf fldl inc cld test xchg xor rolb xor cmpsl and outsl shl loope add gs adc pop test xlat adc push sbb pop pop dec rcrb test rcrl jae repnz mov sub add mov dec jns,pn inc mov and loopne add notb push mov sbb arpl mov mov mov gs rorb pop push cmc lcall ror pusha pushf sub pushl movw pushf lea call pusha cmp clc bt cmp pushf pushf pushf jmp pusha pushl popl push pusha pushl ret push lock std std xchg xchg addr16 sub jge jae pusha popa ret int pusha rcrl pop bound xor shrl sub popa mov insl aam push iret add in fisub adc test dec lea add mov inc inc aas and xchg push (bad) scas add fyl2xp1 xchg and lock fisttpl inc and adc sub pushf lea jmp or js fsub daa stos repz lods or dec (bad) and xor mov push jmp popf or or sbb fidiv add clc or je insb (bad) jg jbe push sub inc (bad) dec sahf aaa xchg in push shrb aad xor adc ret adc scas xchg dec mov cmpsl call dec mov xchg movsl daa xchg fcoms pop and call out mov and addr16 mov mov inc pop fsubl stos movups aad cmp or pusha shl not mov pushl lods pushf call (bad) leave xor ja mov enter sbbl add pop cmc dec and shrl mov mov pop cwtl flds (bad) mov int3 (bad) inc xor and fild or in repz test sub dec mov adc pusha lcall dec fisubr in cld sbb jecxz fisttpll das repz push outsl xor std (bad) rcrl movsb sti (bad) adc mov add push adc add sbb inc sbb or xor jno pop inc mov fwait xchg push loope xor sbb pop add cmp mov mov arpl xchg jne mov or and hlt add movl fs jmp jmp cmp push and lods popa (bad) aas fnstsw lock mov outsl xchg xor mov fist mov stos in je aad adc cwtl inc test sub xchg sbb repnz stos aam or jno sahf and mov cwtl fistpll stc out in call add mov inc stos out lcall cmpsb jl lds bound add mov (bad) and adc gs icebp pop add lock in mov inc mov dec testb pop fs pop or push mov movb movl lahf not mov setle lea jmp movsl (bad) mov lods repz (bad) push jns mov and or mov aad cld add lret das daa js imul push hlt out or xlat out subl mov jmp jg outsl dec xor push pop or pop push sti jle and pop lds mov data16 testl sbb sbb sub aaa sub push push jbe popa imul fistp std and (bad) int xor das mov in aaa (bad) out (bad) xor es iret xchg imul pop sub mov in bnd push pop push out inc jno or roll mov add pushl xchg call (bad) xor cmpb int3 leave push fidivl pop cmp (bad) mov add testl insl test xchg pop pop lcall mov scas loopne push sub jg test shlb mov adc into pop mov and insb xor mov jb (bad) push ja adc (bad) ljmp out loop mov mov (bad) (bad) xor repz mov repz ss xor (bad) (bad) xchg je repz mov sbb fucomip insl jno sbb lcall pop sbb es sub (bad) pop adcl inc mov addl shrl (bad) sub cli test sbb repz mov ja xchg mov xchg imul mov pop dec adc fbstp push rorb lcall push cmpsb jl repz sub jle int into inc or inc sbbl (bad) (bad) mov pop sbb pop inc fs pop inc shrb cmp inc add out and popf add mov mov cmc dec add add mul std or jbe xchg mov out push js imull in pop or pushf pop sub add call inc dec dec xor cs insb add movb or pushf pusha pushf jmp out mov test pop pop cltd xor into fdivrs fwait inc xchg ljmp and mov movsb (bad) jae dec xor xor cmpsl push (bad) sbb arpl and sbb out outsl mov hlt aad daa pop fs rol notl push push push or jb inc mov pop mov xor add outsb mov add fisubl shl jbe push jge pop and sarb sub push frndint dec xor (bad) jno sti sub or cmp cli sbb (bad) or cli dec mov imul xchg xchg lods shll stc out fidiv into sbb inc pop ret xchg je lea pop pop xchg loop push lea jae test push pushf push cmp lea jnp pusha lea jae pusha clc call pushf mov lea jae test pusha mov neg mov movsbw bt mov call pusha jmp and or lods xor shl mov xor in add ret add dec cld dec inc cmp pop mov mov dec cmc les sub lods out movsl (bad) xchg dec inc pop mov pop popa adc mul (bad) aas inc push jmp mov pop outsl leave jne icebp test xor fldlg2 xor dec aad sbb pop sub arpl dec add pop xor test xchg or or sub sub and test adc mov cmc mov stos popa jle fwait xor (bad) loopne jno push mov insb rcll leave lea pusha mov pushf inc lea push pushf lea call pushf pusha pusha push adc pushf call pusha or pushf push pushl call loope int3 mov sub aam inc sbb fimul inc dec dec jnp pop out stc pop add cmp test ja outsl iret adc xorl xlat lds push in xor fadds iret push into jo subl rcl out jmp repnz xchg ret mov stc inc dec jo jmp sti scas xchg mov fisub fwait movsb xchg jmp dec leave push insb fbld pop mov jno sub sub in repnz mov dec jne mov ret push add fcoms int3 ss daa sbb jno add rep pushf mov push movl movb movb lea jmp call pusha jmp lea jbe push neg sub btr shld mov lea or jmp mov lea jne seta mov push pushf push lea call push adc pusha pushf lea jae push pushf pusha lea jne jmp inc mov mov inc mov pushf lea jmp lea je push pop movsbw mov jmp lea mov bt sub pusha rep push movsbw movsbw pushf mov push pushl pushl pushl lea jmp repz call call dec jb and jl cmp pop jg mov push dec ret cmp nop (bad) xchg mov jbe test push scas push data16 push addr16 pop movsl sbb push cld mov xor mov add mov sbb mov sbb push mov cmpsb mov popa mov dec (bad) aaa xchg pop (bad) lock imul loopne and push push or xlat cmp (bad) mov sbb mov push lret dec mov xor mov push xor sti pop xchg sub daa pop dec jne imul lahf mov loop pop movsl data16 sahf repz add jo mov mov movzbw bswap mov mov mov mov lea jmp mov pusha movb pusha movw lea jmp ret inc jle pop (bad) dec pop dec mov sub out cmp pop fsubl jno addl lea add push cld dec xchg dec push xchg aaa out das dec outsl les and jge jge int3 xor fdivl cmpsb pop scas lret out movups arpl sahf mov out fstpl dec mov leave (bad) dec mov push push idiv pop dec dec nop add aaa sub push daa cmp je mov loope not out dec negb mov jnp aaa daa xor sti adcl je jno add iret lea call push cmp pusha call lea pusha jmp icebp out mov lock cmp lret lea or lock sub push jb data16 out insl push cmp mov aaa sub stos ds fmul xchg mov ja cli xor fimull and call push pop inc push pop jmp mov shrb test in jb dec xchg inc mov aad sbb jge outsb aad ret insb add sub add int3 out in cld cmp inc mov jbe pop inc jo loope les xchg dec xor imull push xchg push or xlat push cmp jecxz inc rorb jno add jp repz stc lds add sbb inc xchg test out ljmp sub cs cld imul les sbb xor pushf add sarb (bad) push push mov out dec jb cli sub pop cltd scas cmc sbb inc xchg daa add sbb add dec test push sub scas jp out out xor sbb sti fs mov jle ficom push mov insl pop xchg cmp sbb aas mov jb mov dec clc inc mov sbb jmp clc out lret inc xlat pop ret xchg (bad) and mov jno add imul xchg scas mov jmp sub (bad) jmp aas xchg xchg arpl lcall add inc pop mov imul xchg jmp mov out int sbb (bad) das sbb adc dec loopne outsl aas inc jb stos in repnz clc xor pop arpl jg push sub sbb icebp sub xchg frstor xchg sbb call bound dec ss lods add or lods jb aaa inc pop pushf imul adc loop sbb iret adc add movl jmp je add sbbl and rorl js ja dec std mov mov fisttpll and push xchg cmp cmp cmp addr16 cmp rep inc jle sub movsl cmp add or jle jmp jecxz rclb or mov js pusha out xor pop adc lcall cmp mov push mov xor fwait and lock jnp xchg stc lods adc push or sar (bad) out push scas insb mov in stos add pop jae ret data16 adc sbbl test test sbbl add pop (bad) mov pop insb push lahf lahf push scas mov fstl jp pop lcall cmp mov lea ja mov pusha jmp or push push mov pushf lea je push pusha bsr add pusha clc sub rol shr jmp out into mov rclb sbb sbb les xlat xor lahf lahf dec xchg in push lods lods icebp stos aam cld pop and xlat out mov bound cwtl or mov (bad) popf lods or or or stc fisubl inc sbb inc jmp arpl sbb sub adc mov imul mov push lods xchg mov scas shl mov dec push gs add mov pusha incl mov nop pushf mov mov and call push stos pop cmp fimul aaa enter imul or sbb iret inc sbb repz mov push dec fdivrp sahf inc push xchg test sahf (bad) cmp in xor lods out out add dec cmp cmp sbb cltd test adc lcall sub repnz push add cli clc pop fldt cmp loope cmp aad iret fild cli (bad) jmp sub cmp add pop fdivrs ja dec mov iret mov iret das mov in and jo dec js cmp jg cmpb outsl or (bad) sub pop mov jmp cli xchg inc mov xchg mov out mov lods sbb jecxz negl aas testl movsl jnp pop sar popa cmp xor fild push adc mov fnstsw and std mov out pushf lea jne bts mov clc pushf sub shr stc xor pusha lea pusha cmc sub test cmc pushl popl cmp clc cmp call cmc movb or jmp xor pop and adc and call aam out out fld stc out lock push cmp jnp (bad) xor add xchg test push flds pop sti inc nop (bad) lahf jmp mov push nop mov adc and paddusw mov dec lret lret in fucomp mov mov add and push dec mov enter iret ss and push iret fisttp nop cs or cli cmpsl inc loope add push xchg xor in cmp int fbstp jns lock cmc mov fiadd pop pop dec and cld push sbb ds cmp mov std push or add xchg or inc jle sbb mov aad inc jno cld cwtl notl add aas bts push cmp mov neg sub das push cmp das cwtl inc push aam movzbw or push aam add cwtl inc sub cwtl lea pusha pusha call sbb fadd mov mov dec add add inc or insl fsubrp pop les gs je pop inc int3 mov sbb scas xchg push fidivrl adc stos (bad) mov pop cltd inc imul ss aas sub in pushf mov pop lods adc fdivs out xor ss cmp push mov xchg cmpsb pushf xor repnz jb cmp xchg pushf pop stos je mov dec jmp xor push pop and das outsl jg fldt push movsb pop jnp mov ljmp mov adc outsl movzbl fsubl inc scas push lods jae dec xchg mov push test sti mov mov add rcr test mov push jmp or call inc dec push inc push dec cs insb add jb bound xchg out ds es inc xchg sub cmpsl mov ljmp ret icebp outsb mov addl dec out push sub cmp dec popa jle ds jb lcall (bad) jno lret add jp inc stos shr incl push cs je lods pop ret jnp leave je mov sub sub cmp xor arpl rorl adc fist bound jp loop data16 pop lret adc pop bound (bad) pop cli inc cmp ds ds adc (bad) fbld jno cli repnz sub (bad) xor cmp push mov int stc mov push jmp xor iret mov adc inc fldcw inc jmp push mov (bad) and or pop repz pop jle push add push or popf xorl xor push sub mov or insl scas mov push xorb dec (bad) xor inc cmp decb cld xchg inc loop mov cli lret fmuls mov stc gs jmp cmp xchg bound cltd or push jg cmp mov push jg mov mov inc pop push pop stc test sbb cmp (bad) incl pusha pop pusha inc fiaddl mov lods xchg lds pushf ret dec shr mov les sbb pop cmpsb cmpsl pop rcrb xchg mov (bad) js imul xchg or ss test inc popf incl stos mov mov fsubr push add ret mov mov inc xchg scas daa push pusha aaa push sub adc xlat xor (bad) sbb aaa call pop stc or (bad) ss clc push int3 adc test ret fadd (bad) push cmp es adc add lret pop decb inc imul mov repz jmp inc js xchg and inc push imul inc fisubr adc sbb das pushf adc xchg inc cmp jne test fcomi out sbb sbb add mov jne mov add imul and (bad) loope je push and mull jnp loopne dec scas fwait les add fsubp popf loope jno clc mov bt movzwl add mov movzbw rcr mov push add bt mov cmc clc test call ss icebp lea xlat or adc sbb data16 or mov jae fistpll xor and jg and add xor inc pop push lea jo nop lea fldenv adc fstl jns stos imul add data16 test pop and fwait test and jnp adc jp repz xchg mov pop scas rcr std dec push test mov jb mov xor stos sbb and pop out (bad) mov stos sbb xchg dec (bad) cmp pop lock testl cmpsl mov test inc add pop out pusha stos jne in xchg push popa inc popf fildl repnz and scas out and cmp sbb jbe (bad) sbb std les sti arpl push xchg dec adcl cmpsb adc hlt lods push cmpsl out out inc and jl fcoml frstor mov rcrb adc lret imul mov inc mov sbbl and mov lret lock adc popa jge sub and sbb pop das (bad) and dec push sub outsl outsl pushf inc cmp mov dec mov lret xchg popa lea push insl out out punpckhwd sub xlat pop (bad) icebp lea lods into ror mov test or xor das (bad) mov insb xor sbb arpl or pop mov mov mov pop clc and jge aad int (bad) incl hlt stos in frstor insl xlat dec in imull add std or dec mov pusha fistpll insl pop pop cwtl cmpsl inc pop insb cmp push push int jo ret int push loopne cwtl out fldl dec orl (bad) sbb jge mov cli les jp xchg lods dec setae mov cmc mov pop cmpsl sub adc inc cld jne psadbw push mov add leave adc push ljmp lahf adc lret adc adc (bad) imul mov into jecxz inc xor rorb jg and imul loope mov punpcklwd xchg mov scas nop shrl push hlt dec pop fs mov lock xchg mov sbb adc inc clc or out in xchg pushf ret adc or or je xchg imul pop jecxz push in cld xor nop das dec outsl fisub add imul dec fs jns icebp dec inc pop xor fcmovnb sbb decl jle stos data16 mov fmuls insb cs mov movsb lret cmp pop push rcrb (bad) int mov sbb hlt stc xchg stc movsl pusha jmp sbb shrb push js leave jg jle mov mov mov into inc sbb adc pop xchg dec cmp push arpl leave dec or push mov popf lods adc cmc add jl mov pop xor pop (bad) jg inc xchg add mov imul cmp adc mov inc leave scas xchg popf movsl test cwtl pop cld jmp cmp fidivl int cmpl xchg xchg mov insl or lret andb call jne,pn faddl pushf jb sub leave jne ret pop paddd pop inc testl ja push lock jmp jno repz adc arpl mov xchg lods adc and fs push adc pop and adc pop push out (bad) fiaddl int3 pushf ret rcll outsb push xchg mov fiaddl movsl sbb aaa inc xchg mov sub dec mov cmpsl std inc (bad) xor inc inc mov aas mov lahf sub pop test sub mov movsb fwait pushf cmpsl mov and fist xchg icebp push mov fiaddl jecxz jbe movsl sbb sbb out (bad) sbb roll add pop movsb pop test mov pop jns lea ss adc pop xchg push mov (bad) pop repz btc mov cmc pushf cmc cmpb jmp mov jmp cmpsl pusha jle sahf push mov pusha push cltd mov outsl sub sbb or push stos cmc inc cmp stos hlt repz and mov inc xor scas enter loop mov movsl dec push in lahf rcl cld jg inc pop and dec dec jb sbb pop xchg subl dec outsb push dec lea jns addl pop int cmpsb test stos xor inc iret dec mov jb aad cmp in jae cwtl insl rorl pop repnz adc bsf btc mov bt pusha test shl push lea je call jns xor jmp adc lds sub pop insb repz into (bad) mov loop push and and mov jle push es mov pop andl cmp pop outsl inc pop insb popa movsb jge inc stos lock adc xor or ret add das ret push sbb push repnz mov icebp fsubs int enter (bad) js or jo das xchg sub inc scas cli ljmp or cmp and push push jns jns mov xor xchg or cmp inc dec or pop data16 mov inc add xor or push les sub dec movsb addr16 inc les gs lcall and lods bound daa fsub sub mov mov int or cli in or (bad) dec dec rcr adc cmp pop out stc xor mov pop jmp arpl jmp popa mov out jge out scas cwtl push push sub pop mov mov hlt ljmp cmpsl sbb rorl iret das dec adc jbe jb jno lock or pushl popl movw pusha mov pushl ret cmp call cs or add add jbe mov jb jns int mov xor inc sbb xlat fcmovb sbb into clc out icebp pop fadd xlat inc imul ss imul cmp ret pop in lea js addr16 jo jg jbe into mov add push xor cmp mov inc rcl inc mov mov fisubl mov repz icebp adc bound cmp pop scas pand inc sbb xchg dec adc xorl jno out ds add movzbl push call jp push lcall push cmp xlat inc mov push cmpsl mov push negl or pop mov push loop aas call push pop popa mov adc push jle and or idiv dec lahf inc mov cwtl clc add pushf lods and or test xchg ret dec jb (bad) xlat nop jne jl pop inc popf and sub aaa or inc (bad) xchg lock mov xchg inc jp jmp and mov sub cmp add push loopne (bad) out (bad) or cmpsb bound mov (bad) xchg fcmovb jp test mov pop pusha in xchg in mov ffreep sbb in pop out cs mov dec inc dec xor cs insb add or adc imulb pop or cmpsb pop cmpsl pop aam jg pop enter mov or sub and (bad) sbb imul jo fist test pop movsl or and pop adc repnz int push mov (bad) mov and (bad) dec mov mov aaa pop pop sbb imul jno inc push cmp testl inc mov xchg sub pop sbb iret xor leave push loope mov out inc push adc push and xchg faddl std xchg or add fsubs jno out adc mov jmp jb inc test and cmp jae js leave or xor aas fbstp out cmp fnstcw pop push xchg out mulb out shrb mov icebp inc cmp jge insb xor push mov dec out test in or out iret fistp aas lods mov mov push (bad) lahf add orb fwait leave lods rorb les imul dec fnop call dec adc out aad jp sahf mov or lcall mov hlt shr inc fadds jno in repz arpl and ljmp jbe mov (bad) xlat add lcall mov out jae sti xchg pop add add inc repz fcomi push sub mov mov adc inc pop and add jb in and imul mov add lods jno jl sbb pusha xorl sarl dec pop push (bad) (bad) (bad) jo jbe fiadd cmpsb insl ss xchg rcrl sbb inc pop test shl (bad) sub pop aam pop bound mov (bad) fcoml pop test mov popf jne enter repz pop jno in mov and jmp mov rcrl xor popa push ljmp loop fldenv (bad) sbb xlat addr16 in scas cltd sub add inc cli or inc adc or xor outsb std fidivrl mov adc push ljmp aas (bad) adc mov xchg mov insb add fwait leave icebp es fbstp insl jge jo mov in jns add jo pusha cmp rep lods push jmp mov lods into xchg adc mov inc xlat lret (bad) repz xlat enter rorb mov icebp add jmp mov push cmp out (bad) jmp addr16 and cmc push dec out pop add call cmp jge xor call pop test insl jns cwtl pusha lahf jg jmp mov into inc mov inc dec jb push xchg and test cmp fistp sbb idivb fisubrl and repnz pop ret clc cmpsb popa sbb xor mov or xorb ss cmp stos sbb fcmovnb mov and pop sti xor sbb int sbb or std inc lret and int mov push jno ljmp cwtl icebp inc inc and add add pop movsbw movsbw call push lea je test pusha cmc test or pushf pusha pushl push lea je xor daa bt xadd xor pusha btr btr add mov pop bt mov inc mov sar pushf shr stc sbb mov stc call imul dec pop fucom xchg add insl fildl (bad) adc inc ffreep ficomp sub lfs out jecxz mov rorb jg jp mov (bad) mov cltd fcomi pop out shl sub hlt add pop push push sub jns cmp xor cmp popf loop adc sbb push punpckhdq test pop and sub sub xchg imul dec or repz or mov lds repz (bad) lea call mov jecxz dec cmp mov scas lock and adc hlt dec push push aaa xchg nop (bad) jno ljmp insb insb cld or repz les fildl mov add out mov ret jnp jle jge leave movups add (bad) cmp and and push test adc (bad) repz lret adc mov ret mov inc rorl shll mov jbe rep add mov or inc jb jmp xchg sbb addl push xorl into jb lock jo int3 mov aam or and xor inc jl fs les js pusha jo dec push pop mov dec sarb cmpsb cld mov (bad) push out (bad) out repnz jnp popf add jns jo cmpsb cmp pop es or xor cld jo add sar popa imulb ja inc xchg lea jp cltd mov das mov mov test xchg fildl jo pop lock pop jle mov adc or arpl out add ljmp jle and std dec push mov rorl ss push repz push shrl je int3 leave (bad) jne xchg inc add call xlat push sub loop incb xchg call xchg mov add (bad) (bad) xchg fs shrl mov jne aaa out dec jg add pushf adc fbstp out xchg scas xchg in cs pop loope dec xor dec xor jb pop test clc cmpsl idivl cltd jg in inc jns call clc sbb mov ror addr16 adc fiadd xchg jmp sub aad add nop outsl mov inc cmp loopne es je rcr mov adc inc popa cmp xchg sti cmpsl mov jmp ss fs ret inc mov hlt stos cmp or push shr xlat daa push sub cmp das aas sti push imul repnz loop xchg and ljmp xchg into sbbb test lock dec inc pop outsb cmp std stos repz sarl xchg in cwtl sbb roll push out sbb gs sbb das outsl push mov pop addl push pop inc sbbb sti push pop out lods arpl pop pop mov mov or cld add adc ljmp pop out test mov inc or push enter jecxz (bad) (bad) mov pop sbb daa mov pop cmp cmp sbb ds cmp sahf vmwrite sbb std push (bad) hlt adc stos xor jae push (bad) or adc cld cwtl push cltd add repz inc jl in adc ljmp xchg test push sub xchg jnp dec shrb in xor imul out xor sbb fs jne jmp movl pushf lea jmp pop rcr or dec inc fldl rorb sarb (bad) fidivl int mov add dec (bad) push add cltd push in movsl stc cmc dec xchg lods adc int3 jae sub inc adc cltd cmpsb mov lsl lea sub add mov clc push sub and cmpl sbb fmull fiadd nop add dec pop in and lret inc rorl jno in pop xchg leave pushl lea je cmp add pushf test stc pusha cmp jmp in mov jge mov inc xchg push hlt add mov push cmp lret cmp or sbbl int3 pop cs popf mov dec jmp mov xor scas mov dec ja or and sbb cmp in mov mov imull mov pop sub adc shlb jg je jno cmc mov xchg inc pop mov sti jb (bad) ss dec repz sbb inc popf mov and out test sarl mov jns andl or in cmovg repz lea in or mov pushl popl pushl movb mov pushl ret leave iret nop lret pop pop xlat insb mov bound outsb xchg sub or inc lods pop outsb nop adc hlt stos icebp mov cmp inc test outsb loope clc pop jecxz cmpsl push xchg imul lcall pop add and sub bound mov xchg lods scas jle or dec mov or jne mov inc adc add push insb pop mov lock out lgs pop mov rcrl ja (bad) stos movsl jle adc cmp sub ss xor sbb lock jecxz jge mov faddl cmp pushf lea ja bt imul jmp xchg jo pop cmpsl push xchg push xor push xchg dec cmovg pop imul (bad) sbb dec or mov inc xorl pop xor fldcw cmp pop cmpl mov lret jo and popf adc mov mov jmp fwait xor bound outsb xor xor pop add mov call movsb sbb jb pop mov sbbb pop loop sahf xchg je cmp in imul (bad) xor add xchg stos pop (bad) insb rclb add and jae (bad) into xchg (bad) mov sbbl notl xor inc ja mov fucom movsl push je jnp inc cwtl mov fbld sahf fbstp dec stos popf push sbb cmp loope pop insb ja test arpl int xchg out adc lods bound sbb daa sub in xchg int add jae fistl and push aam sti add lds mov stc (bad) fstpl in hlt sub jae dec mov sbb pop loop or push inc sbb nop out ljmp cmc push int outsb xor jge nop push imul add hlt dec sarb and xor jbe mov mov cmp cmp rcrl inc test out (bad) fldl or push lock das dec std imull sbbl xabort dec js mov notb mov dec imul (bad) aas dec bound cs pusha sbb pop sbb out dec fldt xchg gs test adc pop sbbl sub and and adc in dec hlt aas loopne jno loope mov scas jmp clc call outsl mov test pop mov push mov mov xchg dec jo mov outsb jno and out js adc ror aam ret insl mov daa mov jp cmp mov je loopne (bad) xlat sysexit cmp push dec jns test in cltd push mov push (bad) nop negl cs mov daa ret sbb jg jg mov mov fistp lcall or xchg xor mov sub jl into jno xor jo arpl xchg push insl mov jl divl gs jns mov push pop pushf pop sbb jmp into into mov cwtl das sub andl mov xchg dec lock mov mov add push dec push push or inc push mov sbb push leave inc add cmpl add or adc jg leave xchg cs fninit addr16 cmp insl dec or test std cmp les hlt or pop inc or mov and jo mov jno loopne icebp cmp std incl pushf lea je test mov or add (bad) testb bsf (bad) repnz mov push test clc test call mov push addr16 std cmp cmp adc sub (bad) ja push xchg xchg and insl inc lret xchg movsb xchg push fisubr or or rclb mov cmc mov lret loopne cmp mov adc out adc sub xor sbb icebp scas mov mov fisub jmp (bad) mov add aam pop push dec jge hlt mov cmpsb (bad) mov out fcomp (bad) fsub repz imul or and push into lcall pop pop movsb sti lcall jno fild test pop and pushf pusha push lea call pusha movb call pop sbb mov mov fwait and jno rep pop addl jno mov daa aaa cld and adc xchg cmpsb les or and or int3 negb sub add push sbb jbe (bad) shlb or lret pushf mov mov xor jecxz xlat out dec mov and or xchg cmc pusha aas popf outsl stos dec jae pushf dec push xchg xor (bad) fist sbbl cmc repnz push cs in fidivrl mov cmp imul stos xchg das jo push pop add pop fimul sub loop (bad) in xchg sti pop popa push stc mov mov mov inc pop xchg xor repnz rcl inc cltd in hlt dec mov pop jbe mov mov scas shl sbb call or ds xor mov repnz test insb xchg sub sbb sub xor dec pop add add ret mov fldenv xlat or inc iret iret mov lock adc dec les mov loopne fist loop mov fistpll and enter mov jno fucom lods sbb xor cs insb add xor call stos pushf setge mov lea pushf mov pushf pusha lea call call in inc fisttpl std popa mov adc or push ljmp sbb and arpl insl mov fisubl sbb mov jbe mov push xchg das jo js jl mov dec add in sarb cmpsl mov mov mul (bad) xor cld pusha fnsave mov dec pop add sbb push jno fdivr xchg inc lcall xor mov pusha movzbl mov pushf pushl ret inc jg add mov nop pop sbb ret fsubr adc daa (bad) ja dec jns jmp mov mov lods sarb push cmpsb sub insl outsb or hlt pop wrmsr inc popa movsb fsubrl cwtl cmpsl mov adc xor loopne outsl clc or xchg in mov leave pop and mov loope add lret xchg jmp xchg dec jecxz fistpll test (bad) xchg xchg enter (bad) inc sti pop lcall adc hlt cld (bad) lods pop mov inc repnz dec xchg add sub jnp dec xchg cwtl cmpsl aam mov shr inc fstps stc out pop jecxz sbb mov lret pop faddl mov mov enter sbb dec add mov xor sub push fiadd add and push xor mov aam (bad) fbld inc jg mov push aaa aam loopne (bad) push ljmp imul je add mov cmpb shrl mov cmp test mov gs inc jge aad insl adc outsl in icebp mov (bad) (bad) int lods repz jle pop notl jg sahf loopne aam or xor out arpl push mov jno fistl pop pushfw lea push jmp inc lahf add or js push dec popa aam adc sub out pop out mov mov fldenv jmp jns mov adc aam mov stos call ds inc nop lret sbb mov pop ret mov mov pop shrb outsl mov pop cli test (bad) leave movsl daa xor jb mov pop outsb cmp jne nop (bad) pop ljmp add xor scas pop test push fsubrs xchg cmp xor das pop pop je int3 sbb cmp imul rcr lahf repnz ret fwait xchg push call dec xchg mov movsl mov xchg lret sbb sub (bad) xor pop fisubl add cmp repz push inc push dec xor cs insb add push mov mov aad push test imul push adc ficoml fiadd sahf add and rolb push dec jo push push (bad) int stos in sti and ljmp mov push xchg aaa pop les dec xor pusha sahf scas dec fadds or cli clc sub adc and cmpsl xchg insb stc iret mov ret adc (bad) sbb or (bad) pop jecxz and mov lock add mov and xor adc xchg ljmp inc idivl adc jno,pn fldcw stos adc daa push dec pop mov jno cmpsb leave fsubs ss lods dec cld push into mov loopne repz sub jmp (bad) aas sbb push repz mov jb cmp push lret (bad) and add xchg jb addr16 imul push or fucom test stos xchg and out jns mov dec cmpb adc fnstenv stc inc xchg addr16 sbb sub pop pop lds mov shrl aas aad lds mov jge sub pop mov enter pop fdivr xchg test imul pop mov xchg mov lcall xlat pop sub xchg sub jne dec pshufw jecxz xlat out fucomi add arpl xor mov sbb and fadds push xchg push icebp jge aam mov inc imul cmp mov lahf add scas jo xchg (bad) loopne jns pop movsb int lods xor jmp push mov popf push in inc clc mov jns movq outsl dec xchg lahf andb sub stos push mov (bad) enter mov pop xlat sub and call (bad) push loopne xlat sub lret scas aas or insb mov jge xor lods adc and ret (bad) mov cld mov push (bad) pop xlat iret cmpsl arpl jns xor loopne shl repnz add sub leave jne fsubl lcall push rcrb xchg pushf andl mov out cmp dec jno xlat nop (bad) cld add inc push dec cs dec dec add xor add popa pushf push pushl ret push inc push movsl sbb sub in rcl add int3 cli add push sbb shrl aas (bad) mov pop add xlat out in or shlb jecxz xor cmpsb jno pop stos mov fdivs mov push add (bad) xlat shrl (bad) js push adc sbb (bad) mov pop in cmp fwait push das adc inc adcl sub cmp movb xchg loopne mov add enter mov cld (bad) pop push je aam repnz scas mov pushf daa js push mov mov lods or (bad) in mov sarb add xchg and unpcklps inc fstl jo jae push dec push xchg dec dec mov mov mov inc movsb mov (bad) aam xchg jb flds jb scas cs lock xchg dec fcomps hlt and xor (bad) lret or adc (bad) sbb cmpsl lcall inc pop movsb sti (bad) out pop xchg ss mov ja push pusha jmp mov jg push push mov fidivrl out movsl mov fldenv and lret repz or pop (bad) add lea jns ror bt sub jmp jge push inc xchg pop push mov enter lret aam minps and incb sbb and testl mov jge repnz call adc stc xor push hlt inc xor loope sub push aam fdivp aam leave ljmp adc dec rolb cmpsl xchg cmpsl scas mov push xchg nop mov bswap movsl daa rol xor clc and (bad) popa inc popf jo mov ret mov inc adc xor lock fadd stc lret in scas int cmp push in mov mov mov pop jno aam ficompl shld aaa bt mov stc bt shl jmp mov (bad) xchg add and inc je push call repnz (bad) lock sbbl imul out out pop mov xlat xlat out aas push mov rorl lds push sti dec movups fbstp cltd mov stos fistp mov std sub stos add out divb addr16 insb push xchg stc push icebp mov lock mov inc push adc dec lret lret add jmp into dec jb or xor push loope push mov test inc ds loopne daa aad rolb gs cmc lcall popa mov mov leave push sbb cld (bad) aaa cmpsl imul inc dec xor inc and jle adc jmp adc mov clc jmp jne pop and mov dec leave jg push sub push lods xor mov pop push sbb adc int3 push stos sbb ds push or inc outsb jno cld sub mov aam mov fldl (bad) rcr sub mov lahf fsubl mov fsubs cwtl hlt mov ss jg scas dec test mov push jno addr16 xchg es lcall inc pop sub lock aaa fadds stos add pop loope and rorb mov dec jbe dec fsubl arpl jo movsl xchg lods popa popf aam add adc pop sub sbb mov mov mov loopne sarl bound jo addr16 xchg mov add pop inc cmpl push in push faddp (bad) xor sub sub jnp outsb shlb sbb pop int call movsb imul mov and push mov mov inc xchg and rcrb and add and nop stc jg and popa (bad) jge and dec in xchg mov mov or loop adc dec xor andb jns sub pop (bad) jno sbb mov add int3 call xlat rcrl mov jae insb pusha call inc sahf add sbb addr16 lahf cmp add cmp sbbb mov push or js rorb mov daa adc aaa sub pop cmp movsl sbb out into push test and js int3 lods mov mov (bad) or hlt mov mov test loope pop int fadds and xchg ljmp test push das out decl lcall loopne out xor js mov outsb cli movsl insl mov push jp fnstcw aam fisubrl insb inc cmp sbb psllq psubq mov out sbb mov jg jno rorl sub lock adc jbe iret xor bound mov inc inc mov sbb xor in xchg je adc das push hlt mov lret mov fistpll rorl pop add (bad) das jo out sub repnz pop push push jbe mov mov mov sub ds sub ja xchg or push dec dec cmpsb pop inc cwtl jae jl pop rclb fs jne cmc sub and mov cmp add pusha pusha movb lea jmp addr16 push je pop gs cmp (bad) jne pop jg fnop cs cltd pop enter mov sbbb mov mov mov stos cltd mov pushf add push jne sub sahf jge sub mov fiaddl xor rorb sahf outsl xor dec ds jbe or bound nop push dec and nop lock in pop inc mov std xchg sbb jmp stos (bad) fsubl idivb adc stc test mov sahf shrb mov jmp jbe add push or jno iret and jb shlb add fs add and ret xchg add sub in push int adc imul add cmp sub popf and hlt pop xchg pop or mov stos sub and dec mov or xchg rcll pop popf stos jle adc daa dec outsl fsubl fcoml cmc pop fistl test repz scas sub into push imulb jl jno stos mov loopne les scas jg repz push or sbb in lock mov xchg outsb push out fnstsw test sti mov xchg stos rcl push out mov sub std or arpl jb mov (bad) mov jle push mov lret (bad) iret lods mov jno iret dec inc dec xor add ret pushf pushl inc xor call repnz mov pop outsl and dec mov mov add test imul inc lods xchg (bad) mov lret inc aas xchg outsl in (bad) cs mov gs divl mov lcall xor es es sbb adc sub xchg pushl lahf xlat sbb mov fwait jecxz (bad) pop inc jno in stos dec (bad) adc pop xchg scas push ljmp push and add ds icebp inc ja lret mul inc and mov add adc sbb jp xchg cmpsl movsb (bad) loope or mov popf outsb jno jne jge popa mov xor mov into cmp fs inc lea jnp bt rol ja pushf mov inc call sbb insb ret push cmp out jo nop (bad) mov jl hlt push push xchg dec push das dec xor add das mov lods adc enter ret xchg (bad) into iret xchg daa xchg out lret dec aam out sbb xor lahf fs inc xor or add mov js pusha mov mov clc push out hlt push test mov out (bad) (bad) mov sub pop mov cmc add jno sbb arpl mov adc jmp loopne aaa test jo imul mov xor cltd and test cmp mov add stos add and ljmp shrl push fbstp (bad) xchg lods dec cld and xor or push movsb mov rcrb inc mov dec adc ljmp stos shlb stc arpl sbb imul mov imul enter inc test sbb test int3 int3 ret adc mov mov lea ja pushf jmp push add mov out (bad) lahf outsb or ljmp pop cwtl jae adc inc xor lret xor cmp jno jbe and lahf and push push xor sub jne pop outsb popf (bad) pop icebp adc mov ret rcl or xchg nop out decb sti sub xchg cmpsl sub sbb xchg roll dec mov sub push daa push cmp insb cltd jl sub adc scas sbb mov addr16 jno lret dec inc add or aas and int imul insb jae xor test push mov add faddp mov xchg jae cmp cmp stos popa test mov push les ja ficomp sbbl fdivl or pusha scas outsl and pop in xor leave fsincos in data16 jl xchg and adc pop notl and or (bad) mov shlb cmc call inc sahf fiaddl xor (bad) idivl (bad) jl xorl stos lods xchg sbbb jle stos movups xor daa aaa jno lret mov in loop push pusha mov in or lock jbe outsl lock out xor gs imul (bad) mov jp sbb adc push outsl dec jno add and pop out das pop and fisub cmp sub (bad) xor js fistpl push rcrl (bad) popf imul (bad) mov cmpsb fild pop fs cld (bad) fadd mov cs mov push pop fisub push mov mov lret mov movl push call js aas sbbl xchg repnz cmc sub or xchg imul push sub inc fwait jo out (bad) (bad) cltd push flds mov stos adc or (bad) popa aad lcall jg pop sbb lcall outsl scas or stc and adc mov or xor loope out push inc xchg dec push push lcall faddl pop imul xchg cmpsl idivl push lcall aam (bad) sar xor inc cwtl jae int3 mov loop adc pop add sbb mov (bad) push stos push jo pop (bad) outsb pop testb add aaa dec stc es inc shrl data16 ljmp rclb movsl and push inc or fiadd sub scas fxch pusha cmpsl jecxz pop xor dec xchg sub pop movb (bad) cmp cmc aas jl dec jbe outsb jle push fsts lock call mull js pop test mov add leave xchg clc jle dec and cld cmp push adc in inc sbb xchg outsl sub in jge clc pop mov fnstenv mov pusha cwtl inc xchg scas mov out icebp dec cld dec aas mov mov ss aas jns je jge mov ss jecxz (bad) rorb inc or fstl call cltd imul mov xchg cmp sub inc push add scas or dec xchg dec mov or sub push adc sarb movsb push mov xchg out xchg push popf andl jno enter loop mov push pushf mov push lea jmp xchg loop mov xchg dec mov jo sbb fsubp fwait add mov and cmp cmp pop mov mov fmuls out cltd out lds and mov add (bad) mov push cli pop sbbb (bad) lret add cld push fsubr cmc push sbb in xor inc mov pop imul xor adc jno popf faddp faddp push or rolb cmp push fldl aad sub arpl add pop add aas adc mov inc xchg xchg cmp in repz es dec sarb ret adc std movsl stc or push mov icebp out (bad) (bad) cwtl test outsl fidivr mov cmp sub dec cli je (bad) adc test and mov lods sahf inc fs xor popa js outsb shl mov sub pop orl rcrl sbb xchg or or xor mov cmc fnstsw mov or sbb push out out adc jle mov lods (bad) leave dec adc jno movb sbb je clc pop out mov pop inc cmp aas pusha ds and dec je mov mov int and aas mov lods mov es ljmp imul push mov pop add push imul adc sub mov mov stos xor insb xchg rcll push add push fs cmc mov mov sub adc jle sub ret push add addr16 (bad) das sub sub stos je mov bound pop imul lea je push cmp pushf pusha movw lea ja jne jmp iret movsl lcall test out push rorb and inc dec sub stos out lahf inc mov fisub jnp sar inc mov dec les mov sbb mov scas mov arpl pop mov aam iret and mov subb in cmp flds lock add add inc rep test jmp divl push mov ror jp jge popa jle fwait stos pop out lahf mov fmuls cmp mov loope mov and dec mov out xor lds insl mov mov ja and jno,pn bound cmp out inc test popa bound pop ret repz fsubrl push add int3 adc adc ds (bad) je mov inc mov push jno jge pushf lods lods ret mov adc and test (bad) in mov arpl jmp xor and hlt imul les imul xchg sbbl lahf and ds lods into xchg adc inc fisttpl pop enter jno les pop rorb decl adc lahf push adc sub and das xchg addr16 push sub dec push movsl cli cmp fistp vpaddd add in cld test jnp clc daa sub mov in mov stos jne jnp out insl pop (bad) in push sahf mov mov inc ret imul or (bad) aas or jp cmp (bad) mov pop push jl or pop cmpsl mov lock out out sub loop cmpl mov pop insb insl xchg dec xchg mov popa aas xor push adc jno movsb fsubl ja scas pop (bad) dec mov out (bad) mov mov sbb in inc incb inc mov cmpsl mov or inc pop lock push movsb cmp push push xor xchg in mov imulb int3 jae outsl dec xchg in shll add test inc sbb add ret mov scas pushf pushl pusha lea jne setge movb lahf setge lahf bswap push movzbl lea pusha push pusha movl jmp add add adc repnz add lock pop adc outsl gs add adc outsb pop adc out adc adc adc jbe adc outsb xor add adc jle adc dec ficompl add adc xchg add lock mov add adc xor adc xchg pop adc cmpsb mov adc sahf pop adc out push add add add add add add lock scas pop adc xchg or add add add add add add or add add add add add add lock (bad) pop adc aam adc insb lock into pop adc repnz add add pop adc repnz add add movl pushf call movb mov mov movb not mov lahf lea lea jnp pushf push mov movsbw mov movl pusha jmp add add add (bad) arpl add add pop add add add add add add add pop add add cli lea add aam add add cmp add cli lea add add add add add add add add add add add and add and add and add and add and add pop add pop add jae popa insb insb add fs gs inc outsl jne je jb gs push je imul gs arpl jb add outsl js inc insb insb add jb imul add insb outsl popa fs gs inc outsl jne je jb gs push je imul arpl outsl js pop insb insb add fdivr xor cmp pop and jmp int notl (bad) mov dec jle xor popa clc push cmovb in jns mov inc jnp iret dec ror in dec mov xor daa test rcl mov (bad) out cli adc enter mov (bad) fmuls popf cli aam enter movsl (bad) lahf sahf dec mov cmp sahf jnp sbb bound pushf pop ljmp dec adc mov mov sbb jo mov push or lds push mov arpl push rclb outsl pop mov jne,pn test mov xchg push dec adc in pop lea mov nop int3 jl fwait add das test or fbstp mov ret enter sbb fbstp dec ret je jo clc pand sti inc pusha or repnz cmp daa mov rclb pop dec in in ja sbb xor repz pop nop imul xchg fisttp jae xchg cmp fidivr mov xchg fdiv into cs sub push stos cmp jbe mov pushl inc lret pop dec mov push mov mov popf mov jno sub mov xlat and mov or push daa jg aad inc fwait xchg inc or int cmp nop notb push lds sbb jp (bad) repz pusha cld arpl push aad shr xor sbb pop or xlat cmpsl fsubrs pop nop pusha fwait xorb sti mov or stc fmull mov mov insb call loopne pop out jnp and dec (bad) cmp pop sar test pop fmuls fisttpl cli outsb add ret xchg push add insl xchg cltd inc xchg xchg sbb pop jecxz (bad) shrl and mov daa fsubs fsts sub inc and ret push enter or dec lds int push pop pop fisttp aas (bad) aaa mov ss lret stos mov aas test test shrb pop mov or pop pop je hlt aad daa and dec movsb dec cs mov test lods jecxz ja sbb xor divl jg lahf aas add add aam xor repz insl insb dec insb cld cmp (bad) xchg pop fadds (bad) inc loop addr16 out imul pop dec (bad) dec (bad) mov cmp mov cmp adc push push mov (bad) jne pop addr16 add pop scas orl in jecxz xorb into sbb inc mov push mov sub fsubr xchg or inc in sbb jnp pop (bad) aaa addr16 fwait rorb pop xchg jne fisttpl dec lahf les movsb mov movsb es push sub lods sub jmp dec repz mov cmpsb jo push cmp in or mov and or cmp mov sub mov pop push or mov and mov dec jns adc inc call cmc (bad) out mov inc jg xor cmp xchg sbb les sbb adc imul dec icebp push mov popa sbb sub (bad) hlt mov jmp hlt mov hlt add pop push sub ret cmp ljmp xchg inc xchg lds pop enter inc inc pop pop push jno mov push jb ja pop and decl lcall pop rcr sbb je add sbb mov jmp insb jl inc rcrl cltd xor jne cltd mov sbb das and hlt addl icebp popf dec push mov insb js lods fsubs cmp dec mov movsb jl jne pusha pop or mov xchg pop faddl xchg lahf movsb push iret cmp rcll add push (bad) xchg xchg cmp sub je push call (bad) out add push stc jmp sub popa jo rcl lods jmp (bad) in into loop xor inc out js fisttpl push lahf aad dec icebp push rcr lods mov call sub dec shlb nop test or mov xchg test xchg in mov mov popa mov mov inc pop pop cmp popf lret mov xchg scas xor adcl mov call lods pop cmp xchg lock add scas mov rol sbb nop xchg movsl and je rorl xor xor in or mov loope mov and mov sbb or add mov dec cld aad fildl jno and dec rcrl jbe inc push inc enter cmp inc dec xlat insl cmp xchg (bad) imul stos push sub mov xlat xlat outsb lea xchg les aad dec into pop jge add xor jnp je outsl in cmp mov or je data16 std sub ja inc out sbb mov mov pop xor and bswap pop mov gs mov mov add hlt xchg mov out sbb add jmp into inc std xlat mov fldt (bad) data16 and lock fwait sti out insl aam pop icebp mov mov cmp jbe icebp out pop cmp lret loopne xor ja imul mov sub mov in and dec sti mov stos jns push aas int3 incl mov iret rolb push push pop popf mov sub mov push in daa lods sbb jo ret cli cwtl mov add push sbb jae add xchg fs xchg mov bound mov fldl sbb inc xorb mov inc cmp push sbb hlt cmpsb rorl clc in scas xor insb mov and xchg xor mov pushf sub outsl lods js (bad) shrb je mov cwtl lret addr16 sub mov mov push mov xchg popf pop adcl dec inc das mov cli mov inc sbb dec aas mov jo inc call in jecxz (bad) cmp addl test adc in decl lret test scas test inc cmpsl popa rcl test scas out out ret in push xor jb clc mov enter jb jmp scas sahf mov jo lods out test out jns rol loopne jg sub je jns aas mov cmp or scas in ror fdivr lea jbe fwait js int sahf (bad) sub cmp push push jmp push es mov mov into sbb (bad) ljmp cld and adc cmp xor sbb mov cmp jae xchg add cli or mov in into out repz imul lea enter gs lock inc or push int3 js pop dec fmuls repnz pop out ds cltd enter adc sbb (bad) sbb out or sub sbb scas inc jb push and mov stc popf dec mov cmc add sub scas out jbe mov pop fmull dec xor fnstcw int3 fs mov iret cmp out aam fistpll mov fadds mov nopl int3 inc inc or sub and pop iret xchg (bad) adc sbb stos lods outsb loope insb jg sub pop loop mov pop movsb pop hlt jl (bad) jno pop aaa int3 nop xor or cmp push lea fwait mov sbb out mov sub or hlt mov cmp fimul jno push sbb cltd dec call pop mov jl (bad) push mov push int out sbb inc push push scas into adc les je fxtract pop movsb push outsb loopne into int3 push xchg cld outsl arpl or rolb rclb pop mov stc dec cs ds fcom das mov cwtl hlt aam xchg fdivs in pop pop mov pop mov in aam or add ljmp in fldenv inc dec push mov cmpsl into cli nop xchg popa in adc cmpsl inc ja sub inc sbb sbb mov das sbb cmpsb sub jo insb iret cmpsb add (bad) push cld xchg dec out (bad) mov std cmpsb in iret inc pop jge push sub pop xchg fcoml (bad) jae inc mov cmpb pop ficom and pop mov mov xchg adcl and pop (bad) xor lea in bound sbb movsl xchg jl mov aam push adc cmp (bad) js pop mov incl jae int cli push test test jg (bad) mov scas repz and push jns es lcall bound mov sbb sahf push (bad) xlat les xor popl lea imul cmpsb and inc icebp enter subb mov and xor sub sub sti mov out or mov lods and (bad) cmc inc push out dec sbb pop inc jae or jg dec lock pop cmp sbbl mov leave push xchg xchg cmpsl mov pop subl jmp popf in popf sub or adc mov icebp pusha (bad) ret movb mov mov hlt mov stos pop in sbb enter out jge mov add cli das cmp in call lea cld fisubrl int mov cmpsl xchg dec sbb mov hlt and out fcoml push outsb imul cs insb add add cmc pushl add cmc lea jg pusha ror test jmp dec fldl or std or jp xchg stos popf fld imul jns mov test fist repnz jo and sub stos mov push icebp icebp adc movsl xchg daa (bad) push mov lcall rorl repz xor cmp lahf scas into adc dec mov lret jno fnstsw daa sub xor dec mov fldl xor jne push fs mov pop pop cmp push or test cmp xchg out pop (bad) sbb cli sbb pmuludq imul shl ret pop insb insl das and and xor out jno pop cmp dec adc jmp push cmp movsb sbb pop pop inc orl add aaa stc loopne cmp in push mov mov outsl jno mov in (bad) or bound cmp out jnp outsl iret inc fisub xchg pop cmpsl mov cld loop leave insl repnz out sub data16 in push rclb mov fnstcw insb je xor mov scas add jbe ds stos cmpsl dec and jbe lds inc push in lock stos dec mov jmp inc or leave js cmp push add mov add inc xchg or sahf shrl fwait stos push cmp inc mov sar jmp lahf inc scas xor dec icebp adc pop xchg mov jns jb inc pop in or cmp or jmp aam call mov cwtl pushaw sahf lods mov lods repz ficoml push or (bad) dec mov cmc repnz int repnz jmp repz mov mov das sub ja jecxz clc test push stos xor sbb and js scas xchg ljmp mov fxam cmc fldenv (bad) faddp sbb fisubrl aad stos pushf mov imul add outsl dec add cli adc loope adc data16 jno xor mov push nop mov or in cmp sahf lock sahf (bad) cli leave xchg mov cmp xchg inc (bad) cli jbe fdivs pushf lods xchg out mov push lcall in xchg test cli cwtl pop sbb fwait inc enter xor jge arpl mov loopne pushf lea jae jmp inc inc push inc push dec xor cs insb add mov inc cmp jno icebp loope jl pop loopne sub pusha stos push cmp xchg lods push test punpckhwd cld or je mov enter insb xor rorl les push dec xchg dec xchg or fs hlt add popa bound push inc fsubl imul dec xchg ja xor (bad) lret sahf add stos hlt add dec cmpsl pushf pop lcall lock imul aaa mov mov xor in js mov movsl add cltd mov stc add xor fisubrl data16 (bad) cld cmp cli dec xchg jle jecxz fxam cld and push fiadd fsubs jg jnp jno mov mov xor pop sbb aad and jne jo scas inc ret cmp pop mov adc arpl mov in sub loop in insl xor cmpsb outsb rcr dec daa gs icebp adc aaa fimul hlt mov pop sbb xchg push (bad) fldcw xchg cmpsl adc pop mov sub aas xor inc jns mov cli lock repz pushl pop pop and mov inc sub mov xchg xor lahf pop inc push repnz (bad) cmp ret and cwtl pop rorl movsb popa mov or mov ss xchg dec pop stc xchg sub mov stos shl loop dec push mov scas aas incl lret push cld (bad) mov arpl mov add push pop and jl out xor push jg fisubl mov and push sbb mov call insl add xchg loop aam lret jae push cmp lcall imull (bad) (bad) push dec jno scas ret int3 out movb movw mov pushl mov cwtl movsbw mov pusha movl movzbw lea pushf mov jmp out cmc leave sub jnp pop mov les adc push mull adc mov mov popa sbb into fcmovbe leave lret outsb push pop pop sbb and aam ret nop cs arpl push sbb sbb sahf stc ret add loop adc popa mov mov loopne push daa jl adc lods add cmp cltd dec jno loope loopne loopne or sbb mov xchg imul in loop pop das mov rorb inc cmp dec pop in push cmpsb clc (bad) (bad) jle pop test cmp rorl cltd and pushf ret data16 or cmp jno scas xchg fisubrl lea jne pushf pusha mov pusha mov movb lea call push mov mov mov push push lea jmp mov repnz push pusha lea jne test mov bt rol shrd sub not mov cmc sub jmp movw movl movb pushf lea jmp mov mov aaa hlt sub xlat test ljmp or push fmuls iret (bad) test popf dec xor cs ret addl jmp ja cmp inc lods xchg xor loopne clc xchg and scas cltd ret inc xor ret xchg jno (bad) fmull cli clc or and xchg addr16 imul popa rcrb mov xchg (bad) stc jmp mov mov fucomip adc sbb lock push mov sbb adc push xchg jno lods inc dec (bad) dec lea call inc lcall cmc or fsubrp pop in jb popa ret xchg (bad) mov test and mov ja or xchg addr16 xchg scas icebp add lret stc insl and sub add xchg push popa mov fidivr movsb dec cld hlt ljmp or fs outsl popf mov add iret mov dec ljmp xor or bswap loop inc and xchg mov mov adc cmp pop enter loope sub push fcoms mov xchg (bad) ljmp xchg mov mov pushf mov adc jno lods popa cmpsb sbb rorl sbb mov je dec imul (bad) repnz dec xor ret pop scas dec push dec push add movsb pop adc std mov cmpsb stc or (bad) or sub pop mov jge xchg mov repnz push mov out add xorl sub loop int into pusha movsl dec mov adc mov test pop dec xchg mov in mov push sti fs lahf aas xchg or int3 (bad) js jle rorl (bad) sbb cmp xchg add pop stos insl and sbb inc jb popa je dec outsb jae popa outsb arpl add dec popa jo imul gs add bswap movsbw pushl popl movzbw mov lea movw call stc xor xlat enter inc sub pop inc cmp add test and sub jl outsl push dec mov movsb cld xlat enter push xchg and sub sub test aam xchg repz iret xor cmp imul and loop adc pop (bad) mov inc xor es pop inc jo ds mov sahf fistp pop mov outsl jo jg adc push lea enter cmpb mov xor stos leave ficompl pop and cs aas loopne rclb and sub lcall lcall jae adc inc scas push jbe jle (bad) jno stos pop mov push inc inc xchg mov pop shl bt mov pushl shr mov movb clc call add jmp inc bt push ror movb sub test test cmc stc pushw popfw lea jb pushf inc jmp push fldl sbb ret sbb pop test mov add hlt ljmp (bad) pushf push in pop mov iret adc mov push lahf in adc cmpsl jmp add fisttpl jbe imul mov ret imul (bad) or in jns mov dec (bad) icebp adc sbb sub mov mov mov jno test xor jmp scas xor cld add or jne push cmpsb stc push int3 mov mov cmc lret add (bad) das add cmpsb rcrl mov dec int mov cmpl pusha jl popa jle push xchg dec pop lods xor imul xor dec jno push cmp lret mov add (bad) jae cmp clc cmp outsl pop iret popa imul pop pop jno pop mov xor (bad) repz (bad) and fnstcw iret das fsubl in adc jmp adc pop mov pop aas push (bad) dec call sub test lahf and mov loopne sub ss das dec mov mov jbe xchg ds insl ret cmp movsb pop push mov popf inc js dec ljmp ficom fidivl test push xor pushf pushf mov push lea jmp sub cmp mov mov jae pop fldenv je xchg pusha aas inc push into sarb push and inc inc jge lea inc std push jne popa mov mov es enter xor push cmpsb cmp fwait (bad) enter aam les jno test (bad) test gs outsl fs gs popa outsb fs gs add xchg push insb ret push or lahf sarb sahf mov test dec mov int3 xchg (bad) dec repnz aad out (bad) cli in jne jbe xchg leave fisttp xchg aam repz sub cwtl movb sbbl fwait (bad) aam pop cmpsl ds pop inc cmp daa aaa xchg xchg push mov mov repnz mov stos jbe xchg inc gs js mov cmp js cmp insl adc inc in push jb or sbbb outsl jg orl push dec negl fidiv stos sbb outsb lock fcompl jl lcall jecxz aaa dec pop adc jns arpl dec mov (bad) mov in (bad) dec xor popa bound (bad) leave push jno cmpsb xchg lods mov jmp rcl pusha xchg (bad) lock cwtl push btc mov rcr sub shr sbb mov call pushf mov movsbw movzbl mov call insl lcall imul les ret cld mov sbb icebp lahf mov pfmax xchg jmp cwtl mov inc repz or mov mov aaa inc mov cmp stc ret pushf dec outsl jae pusha movsl data16 xchg sbb xchg pop xor add inc jns test fucomi or lock xchg lods sub jp jo pop add in pop rep add mov lds inc sbb pop cwtl fist (bad) cmp push out mov xchg cmpb xor sub sbb cmp movsl mov jo (bad) (bad) call into int adc sub out sarb rep call divb stos xchg or inc in jnp shl sub inc movsb mov (bad) jbe mov xchg rorl push pop add push je pop pop adc xchg (bad) into das (bad) lock je ficompl pop cmpb or mov inc aad mov push ret mov push sub movsb mov into pushf ret mov lret data16 cld xchg (bad) sbb loop into pushf sti mov (bad) leave sbb inc fwait mov push dec xor stos push enter aaa aam cmp fiadd cmp jae sub pop movsb out or (bad) call adc mov (bad) js les dec push sub add fs adcb es outsl mov lea sub (bad) out arpl lahf dec xchg push cmp cwtl xchg loop pushf loop add (bad) insl (bad) sbb mov in sbb pop aas pusha pop mov mov lock dec mov and gs xchg adc sbb cmpl jl push mov jno movsb adc jae xchg sub jbe or sub dec stc inc jp ljmp jb lcall into in (bad) test stos mov adc jno mov in cwtl push ret out and sbb mov ret inc cmp pop scas push or mov aas loopne dec rcl in push lock ljmp sahf movsb jnp add cltd iret xchg push bound xor lea mov int cmp add popa push xchg jae js test push in rol fist daa xlat sub pop mov xchg dec push dec push fisub dec shrb and and push mov mov je das sub (bad) fldcw mulb lahf scas faddl jo pushf lock mov fprem1 and mov fwait add je and sub lods shrb mov xlat mov test pop push fildl pop inc jecxz add or les pop call ds test xchg or sbb pop dec movsl mov sahf insl outsl ret sbb adc (bad) loopne xchg ret imulb movsb fidivrl add rcrl xor xchg gs mov leave (bad) and call std xor adc xchg mov in stos cmc add inc sahf and daa sbb aam cmpsl es dec popf adcl in xchg pop pusha test xor sub mov pop mov mov ja cs xchg fidiv pop dec leave add or xchg stos dec frndint lods xchg pop out add mov jl fcomp inc test mov adc (bad) pop xchg int3 repz sbb popa cld mov or lods shlb loop (bad) in mov scas mov cmp imul pushf pushl lea call bt cmp call mov pop fsubr jno stos rcll cmp cmp inc leave push xchg dec or cld inc jne xchg or mov loope lret and mov rclb aad mov aam ljmp jp into push or jne add mov dec adc mov or sub aas aam imul mov dec daa xlat out loope sbb mov mov ja js xor lcall sahf cmc leave or dec repnz loop jecxz add mov xor cmp xor pop (bad) pushf mov dec mov mov fmull rclb test int jno mov lods movw pushf inc push rol lea jno pushf inc pusha jmp jge push dec jo pop pushf cmpsb bound and inc pop incl and out cmp imulb fwait test shl push lods xchg aam pop xchg scas fnstsw push enter pop sbb pop lcall and je dec pop xor leave rcll cld push push leave or and push push push leave jecxz cmpsl mov add mov pop insb in ror jne outsb add lods xor push das insl adc out iret xor int test add stos in repz or stc inc mov jecxz or je movsb cmp and pusha mov sahf push adc xor outsl push mov fs push out mov lcall add adc cmp sub mov add lock pop push hlt (bad) cmc dec pop clc cmp loopne ja pop jbe xchg inc std cmp ret int3 les (bad) sbb fsub clc jbe jne stc es add xchg jo test cmpsb mov enter adc sub cmpsl clc dec and pop (bad) iret mov mov pop std popa lds jb sti or lahf int adc clc repnz test xchg repnz xchg ret ret add movsbl pusha mov movzwl pushf lea pushf lea push movw mov pushf lea call jmp pop pop enter cmp xor test push jp clc xchg push mov pusha xor movsl jmp push or fcomp cwtl test lods sub xlat daa or sub jae imul stos sbb mov mov out (bad) mov insb cs mov and data16 (bad) (bad) xor jno sahf fdivl xor movsb cli or pop xor data16 mov seto mov push sbb mov mov in ret stos adc (bad) mov ljmp push mov lods mov add jge ret or xorl divb je (bad) xor ds aam inc aas adc xchg mov cltd jne dec xchg movsb lahf sub insb jb fist (bad) xchg insl pop xor fdivrl loope mov or adc out sarl adc push jmp add repz loopne inc xchg add stos mov pop mov jbe dec mov popf dec inc in jb adc test pusha pop ret je lock aas pusha (bad) mov fld mov jne mov mov mov and sbb cwtl loopne cmp pop movsb pop mov dec popf inc dec nop lret imul scas mov mov in jbe rorb cltd xor jb addl push xchg out das aas insb lea leave fnstenv in inc fsubrl hlt fs mov push enter fldl2t pusha (bad) mov cmp addb and mov mov or adc mov and aas in scas sub ds xchg je mov clc cmpsb push int3 sub ret mov stc jno popf sbb and pop fldt gs mov sub sub int loope,pt sbb sbb data16 mov mov xchg ja jb jge inc andl test jle lods out mov mov (bad) cwtl test jne lahf inc xchg pop in dec (bad) mov lods iret aas jnp aas dec pushf stos mov hlt popf mov flds push arpl lret scas pop or aad xchg mov gs pop and pop pop pop or mov movb lahf cltd shrb jne popa jle stos jle std add aad add popf ret pop jecxz adc dec pop jno pushf mov pop incb jo adc adc sbb adc add add add add push adc add add add outsl or push sub lock inc push mov test xchg lods lret xchg jnp inc lcall repz or and int and out scas xor xchg sub xchg cmp lea (bad) adc and or mov push in pop loope dec push stc ja adc (bad) popa ret sbb sbb in daa cwtl mov jo cmp ret roll daa adc push insl inc adc mov add dec mov mov int fstpl lcall lcall lahf mov xchg add imul pop (bad) dec adc push push outsb mov mov sahf stos or cmp incl pshufw je test mov add cli sbb ret jb mov leave push popa xchg sti add cmp (bad) jl or cmp dec rclb aad cmp or (bad) cld pop inc xchg pop jmp and (bad) xor or fildl int3 add sti xor subl pop mull sahf out shl jae stos pop mov ds pop outsl fwait cmp fxch pshufw or loop mov stos hlt mov stos jae mov jno lcall adc add movsb jmp xor add jo (bad) js les sarl pop lock je test mov faddl outsb push imul dec adc sarl mov jns jge mov dec ss jno push daa cmp and pop ds xchg push or je jp std cmpsb js xchg sub test lock push xchg push dec pop stos scas mov add std and adc xchg xchg mov or add xor sti mov rorl ljmp mov and pop lds ds jg fnop jne loopne mov sub jl les xchg in icebp rolb jno pusha mov scas icebp add sub pop jne aas or enter xor inc push pop out aas out xchg mov add mov test gs test test (bad) or shrb arpl cmpl xchg insl in cwtl fbstp mov ds add inc jl lods icebp scas lock enter jno cltd mov imul mov lcall enter mov push mov mov shrl shrl lea cmp insl add cld and out or jnp cmp mov fbld add lea jnp adc jnp fcomip in ljmp pop push (bad) sub push and mov xchg std lret imul out cld adc in insl mov sbb jg sub sub mov add insl ret mov das cmp fstps lea aam jb xchg push sub jno lahf pop cmpsl pop les (bad) sub testl mov es cwtl fdivl mov pop lea inc xor jecxz push iret inc fidivr pop sbb rcrb jo and mov mov jae and dec pop (bad) pop adc idiv push pop incb sbb jb push sub adcl jp inc mov aas mov inc sbb imull xchg add jg dec xchg dec cmp insb jae adc ss mov shlb pop je enter in inc mov stos or mov jo add loope jecxz (bad) movsl fldenv inc ret loope lret test jb xchg fnsetpm(287 inc sbb lock mov popa stos xor lods jno xchg sub sub fs jno push lea je pusha add pusha cmp mov jmp xor mov bt pushf rol pusha sub pushl cmc mov clc bt test jmp pushl lea jne stc cmc mov test call lea jae test cmp stc cmp pushf lea jae stc clc jmp sbb push iret hlt lret pop out call sarb pop sbb rcrl dec mov ss cmp enter imul and cmp add xchg je jg mov mov out push and in int3 out movsl mov xchg jb lock dec jne cmp arpl aad xor popa jle and repnz loope xor pop daa popf push or inc sbb pusha aas push jo test scas out pop add (bad) add adc xchg add jmp fs je call js push mov mov loop outsb inc jns jl sbb imull xchg pop inc pop aas sbbb adc ret jl stos add hlt mov inc fwait stos jecxz sti inc int add cwtl pop outsb ss or icebp add dec popf add jmp pop das xor jno xchg cmp mov loope test cltd mov xchg mov add aas loop sbb (bad) negb and imul or mov push mov enter (bad) loopne adc cmc mov mov jo inc out pop add add hlt iret (bad) hlt adc pusha pop repz adc cmp (bad) jno xchg aas push mull xor (bad) jbe jno xor daa xor les sub mov rcrl xchg cmpsb inc add lock cmpl pop faddl add mov test stos jmp cld cmp sbbl sub das (bad) aas dec jle fdivl ja sahf pusha iret pushf inc cwtl faddp call nop jg int3 sub push jmp cmp js hlt call or inc popf andl push sub dec jo jno xchg pop aaa or cs iret xor pusha call icebp int sbb shlb in mov xor cmp push jge subl into iret in out (bad) fs scas lock sbb idiv dec mov xor sbb shll sub (bad) mov xchg ljmp mov outsb push push gs or fwait sbb ja push sbb out shrl sub xchg push or pop xchg leave mov mov je stos out sub lock adc popa outsl xchg pop out cmpl dec mov sbb movsl mov xor jne or dec add dec std loop es lret mov lahf pop xchg mov int out sbb mov inc xor mov jmp repnz mov aas lea jo mov stc pusha pop outsb ss pop adc jmp aad adc sahf rcrl fdecstp cs ja pop xchg test lods push mov sarl push movsl pusha mov jno loop pop xchg xor (bad) pusha lea ja not pusha pusha call mov stc movw bt sub call jl pop inc pop rorb adc movsl mov enter aaa sub das loopne shrl sahf frstor jns jp imul inc fsubl xchg iret adc adc sbb aam mov xchg cmc add movsb popa shlb lcall xor or dec sbb push adc call add pop adc outsb scas jno xchg sub jne fs jb jmp shrb push mov and push and aad xor pop sbb outsb mov imul js call jl in pushf bound sub lds aad or adc mov out pop loopne push pop orb and inc push push adc xor jg into or cli call mov sti sbbl dec ret inc dec icebp push and or mov pushf adc sub sbb dec adc xor rorb je push test xchg aad pop xchg add pop stos xchg mov aad sub sub xor scas in fadds (bad) dec push (bad) pop int3 cmpsb cmp sbb mov repnz into (bad) jo fbstp pop dec xchg ret push jne std lret jp rcr cld jae and mov cltd pop sbb fiaddl add jnp push loope jle inc outsb (bad) mov bound pop xlat push add mov sub add or nop mov xchg or xchg cmp pop add and cmp inc out int lret pop mov sti loopne cmp xor fsubs cmpsb mov mov lea (bad) mov fadd jge dec pop xchg imul (bad) (bad) call imul push cmp pusha clc add pushf push pushl movb lea jmp jmp adc in and mov adcb lfs (bad) lods jb shrl sub dec jbe leave insl shll scas (bad) mov inc pushf daa xchg cmpsl das (bad) lahf fiadd pop add into jecxz lods xor inc or jmp out mov mov mov jnp aas lahf loopne dec mov mov xor mov mov test mov push std inc pop pop fldt iret sub add dec lcall call arpl sarb xor xchg sub sbb stos pop and test cmp sbb pop fwait add out pushl nop fnstenv inc cld push push mov call lea je push pusha pushf jmp jmp mov loope outsb inc loop dec jno adc lods mov mov xchg das jo mov aam lock sub das fsubl int3 push test mov cmp jnp cmpsb cwtl and imul xor adc or sub mov cltd out push lret inc fwait lock faddl scas mov pop nop iret sub mov pusha adc push sub in cmp imul aam adc cli and mov mov call ss mov jg xor push push cs mov addr16 jle or (bad) iret shrb sbb or pop arpl cmpsb sahf loope push fsubr inc cmp decl icebp in inc loopne (bad) aam sub out jo sbbl stc cmp adc sahf loopne outsl inc imul ja lret sbb repz inc fcompl cld faddl pop lock insb lds bound gs push mov push dec add sub pushl out mov adc es add adc cs cmc adc inc addr16 xlat sbb push add loop sarb jge popa mov jo push jne int ljmp lods xor call aas xchg mov (bad) outsl iret sbb or and lods repnz mov mov push add dec pop in aas add push jns xchg in push mov (bad) icebp out and ljmp sbb add sub or pop jecxz out test cmp dec mov andps loope or repz (bad) fisub adc in sub sahf loop sbb test aad inc aad mov cmp and decl add inc int cmpsl jno mov pop lods xchg call movsb cmp iret xor sbb dec inc sbb fwait push dec xchg sub das outsl (bad) mov mov mov push xchg mov (bad) or inc cmpsb sbb and sbb lods xchg mov loopne xor inc js ja lods popa ljmp (bad) in lods das sbb inc or adc mov imul repz dec xchg aad (bad) mov cmc lret insl inc xor adc fbstp shl dec pop jmp sti jbe popa cmpsl repz clc (bad) std mov gs mov call jnp push imull test mov mov cmpsl sti mov pop xor inc jmp add add add stos aad mov adc daa pop fldt mov dec xor dec xchg push lret adc bound insb cs cmp cmp pop addr16 xor (bad) int mov cmpsb pop test adc cmpsb sbb mov test pop add les ror and jp pop xor or sbb (bad) out cmpb xor mov jle and push mov dec loop adcl lea pop sar stc xchg xchg fs cmp or mov inc mov cmp lcall or inc sbb push ja mov push shll int pop lea test call bound sub mov ss push dec xor sbb std loop popf cmpsl fadds pop sbbb sbb pop repz xchg pop out adc ret fldt dec mov aas cmpb sbb jns shrb lods inc jle popf rcl inc xor insb xor sbb mov xlat test mov leave int push iret (bad) adc xchg daa jg jmp (bad) dec icebp arpl outsb icebp add movsl xorb js mov aaa test in cmc cld inc rorb pop rorl inc cmp outsl lds mov leave (bad) xor cmp or mov jne push push call test xor or ret sbb mov lea jp gs inc gs mov jecxz fdivrs loopne inc push and pop jo (bad) jg xor daa (bad) cltd stos mov pop xor mov (bad) or cs lret add (bad) in jbe mov cmpsb in sbb popa stos xor mov jmp cmc stos hlt mov sbb pop push pop dec jle xor inc cmpl ljmp ljmp pop jno mov test fwait lods cmpsl xchg aam popa mov mov cmp cwtl sub jbe insl test shrb dec xor fldcw and js in js jge jl rclb and mov push mov aaa xor (bad) adc jecxz jg sbb idivb stos repz insl icebp xor xchg lea jge jecxz pop sub dec inc addr16 stos repz dec lock jo inc cmpsb mov insl sbbl xor xchg jle adc cmp ds mov inc pop fisubl jb movsl stc fwait push outsb add lods icebp dec add dec shl xchg int3 (bad) mov into or stc outsb xor cmpsb clc mov in mov mov push push xor jno and test sub lret shlb stc dec inc out (bad) imul push or rorl dec or lods dec mov sub lahf add mov sti movsb mov repnz outsl in cwtl iret add fsubrl cmp aad ficoml cmp je mov loop push mov pop pushf mov pushf pushl ret sub call add push push push inc jb gs gs outsl jb add mov repnz ror and or (bad) mov stos rcll push in pop cmp loopne pop mov pop loop shrl shlb and test fisub mov (bad) fisubl sbb lret sub pop mov hlt mov ljmp xchg std mov fldl xchg test xchg mov test dec outsb adc mov push inc push sbb outsl jae test xor cmpsb mov rcll fisub aad lds jl test push (bad) pop and or sbb or inc xchg jno mov cli (bad) call bt movb add cmc cmp pushl mov test test pushl jmp pushf push lea jne pusha pushf mov jmp pop adc clc dec dec xor mov sub push push push fnstsw pop jmp sub pop in pop loopne xor test rcll scas jne popf dec xchg mov cltd or dec xor xor jne pop pop pop rorl push push jle repnz imul stc cmpsl and pushf pop inc cld push pop inc mov ja or sbb push ljmp mov leave pop xchg bound (bad) call outsl mov cld call std bound mov add fldt jb (bad) jne fldcw out cmp cmp inc sub push lods jb xchg dec mov mov pop das jno xchg lods out sar and lcall nop xlat mov insl fisttpl add repz bound adc and sbb push push jae insl mov mov jecxz inc inc cmp nop xchg pop and inc pop popa jns es dec jno inc push pusha jg cltd addr16 imul (bad) fisubr sar lods in dec xchg outsb and mov movsl jge in std and mov xchg jo mov fistpll (bad) leave popa mov outsb adc daa incl push es lock enter fld mov cmp jae inc jge mov cmp jp push mov mov xor aas dec stos xor out jmp lret mov daa push adc lcall pop add or mov push scas push repz aad jne xor sbb loope les or adc fs fimul dec je les insl mov or mov jecxz mov push fild loopne movsl out mov mov lods out and sub stos mov pop or cmp mov jmp and xchg out jbe lea push outsb push mov and das jo pop lods mov add mov mov lock rcrb les jb (bad) rcll test fbstp test pop (bad) ja pop rorb repz pop adc pop lahf inc sub mov jae sbb xchg jecxz outsl scas ret push fwait push sub or dec and mov jg loopne fcompl jbe popf aas lahf dec xchg pusha xor and xchg je adc sahf test pop adc mulb mov in shll xor cmpsb lret rcll insb fcmovnbe sub cmc out push dec fildl call enter sahf scas jo outsl xchg and stos mov aam int3 and adc das dec out cmp pop test lds lea jl inc pushf lea jmp inc call xor pop lock aam mov push or cmpb push popa popf sub or insl mov fbld fnstenv out jo out cmc mov addl mov into dec les xchg lods roll ja mov fldenv lahf lahf scas gs clc out out inc fucomp mov pop mov xor loope test pusha xchg fwait mov jnp jae insl (bad) xor inc sub imul add inc repz mov and adc mov xchg or in call call aas xorb pop aaa pop in je sub fs jne clc inc mov rcl sub pushf (bad) imulb fyl2xp1 test shl mov lea test pusha sub call leave cmp arpl insl cwtl jge cmp out ss jbe gs inc aaa inc add cmp push cs movsl aad or ja data16 pop sbbl adc cmp inc inc sbb pusha fsubrp (bad) push cmpsl mov push jb mov mov jl jmp rcl mov mov stos xor push and (bad) lret and pop decb aad incl mov aas inc pop and fwait sbb dec xchg dec nop out clc (bad) insb mov aad bsr dec lds mov cwtl arpl lret repz pop sbb xor cmp call aaa fldt dec adc push pop nop mov mov add cwtl out fisubl inc frstor aam adc mov enter sub mov dec je ds popa jle inc push leave stc lahf cmpsl push iret push movsl stc (bad) push cmp dec mov mov decl push gs sub push sub sub inc fisub cmpsl xor popf push repnz lret mov ret fucomi mov lahf push in cld jno (bad) push jns jo jmp jne xor aaa aam imul lods cmp adc dec clc out (bad) pop loope int3 (bad) and lock into rcll cli fs pop aaa int push out ret dec xchg cmpsb pop popf add cmp (bad) xor xchg aaa into fbld xchg (bad) out fidivrl lret iret and jae inc mov in inc push daa cwtl in push mov cmpsb push outsb jle adc push stc fptan es pop or push dec cwtl cmpsb xchg mov adc sbb sarl std jecxz (bad) jno add pusha jo xchg mov sahf mov adc arpl pop aaa push and int3 adc out insl push js outsl xchg or enter cli (bad) aam pop (bad) add loopne es loopne push imul insl push je cmp dec stc jb fsub sub cld or dec out dec push push rorl adc pushaw pop mov scas add or xchg sub jecxz out (bad) mov int ret sbb sar lret lret adc sub in jmp lods nop mov mov adc add dec nop mov mulw cmpsl pavgw sbb mov inc rcl sub test add fsubrp adc inc rcll adc imul or out (bad) rolb push clc xchg cmpl xchg call xchg mov xchg movsbw setp mov setl mov movw pusha call push pushf lea js push push lea jmp test or (bad) insl (bad) sbb and mov push int3 scas lock sub inc push pop and fucomi gs mov call cmpsl imul mov aas bound pop or mov lret and sub or cmp push out aad and scas jb mov call popa mov dec push loopne inc cmp movsb lret insb adc inc push jno addb std popa jno xor mov mov cwtl pop mov gs stos push leave fnstcw ljmp and jb push incl sub jp mov sbbl test insb (bad) pop push mov push rcl clc cmpsl push push xchg sub xor mov add stos jg mov outsb in xchg lods mov sbb aad pop test outsb mov xchg mov (bad) pop cltd insb fildl std add jnp xchg sbb and ljmp jbe xchg mov fwait and xor mov jg or daa jno dec ss shl (bad) and mov jne shr sbb dec pop enter or cmpsb sbb add fcomip mov mov pop cmp inc or clc inc add (bad) repnz mov mov add add adc add in mov in test loop inc cld pop out shlb push mov in shr xor pop lahf shr inc push ret dec test fs aaa cmpsl sbb xchg cmp dec repnz rcrl lds shrb xchg pop pop div iret mov fwait push jno jle nop (bad) pushl fs call call push arpl xor cs insb add out test inc jg,pt mov jp (bad) jne and mov add aam fisub pop inc aas sbb movsl inc pushf (bad) shl lods rclb cld dec ret sub in mov loopne add jle sbb mov push pop and push jb fmull cmp cmp pushf pop pop ret pop (bad) out inc int add fildll cmc sub pop pop jecxz fwait arpl imul cmc inc insb xchg insb (bad) jbe xor sbb flds cmp or repnz mov xchg in or sub mov add or and nop (bad) ffree lea jo push pusha push push pushf lea jmp push push inc push xor cs insb add add ficoml and and jmp lea sti mov mov sti cmc jge movsl cltd repz xor push pop fadds ja loop and outsb fxch push (bad) leave push les (bad) or fisttp mov mov in dec mov mov mov out aas std inc popf cmpsl and popa jno jne mov dec or add push cltd test jmp sbb or jle pop je mov jge rcr inc stos xor std roll (bad) in add mov aas cli xor sub es mov or nop cs loopne int and outsb push cld (bad) sbbb sub ss call jg psllq mov sti les xor stos je dec div leave cwtl daa adc mov mov jmp arpl ds or or ret insl mov push mov fwait add push dec push mov xor mov pop cmp loope jne dec cmc add push outsl and (bad) dec sbb fsubrl pop jbe fmull mov jae and hlt xchg flds les sbb aam cld ret scas lock imul insb xor insl inc ret mov jl mov pushf call call sub popa mov push jb cmp (bad) rorb dec lea pop jns and jge or cld (bad) xchg cmp inc or xchg cmpsb fstps xchg jmp mov int loopne cld call sbb repnz clc or mov jmp adc scas mov pop sarb xchg mov pop ret mov pusha push lahf add lea movsl or mov and je outsl xchg mov fdivrs outsb adc inc pop ja imul nop iret and sbb or sbb xor sbb pop jnp and dec push dec sub push add pushf dec icebp push pop dec sub scas nop roll jle imul sbbb pop je dec adc inc push adcb fisubl clc sar or std and push sbb shll (bad) cmp ss leave mov jns push cltd cmp or push ljmp dec ret sbb cld jb add xchg mov lret incb pop add jno jp ret les xchg mov in push call jae dec adc and jmp imul mov pusha jmp xor adc pop lods mov adc les cmp mov cmp nop lea xchg ret jl push fsubl mov sbb xchg ljmp xor test xchg sub mov jns mov inc outsb outsl out ret mov insb fcmovnbe cltd and sub mov jae pusha popf repnz mov (bad) leave cmp das das mov cld cmp xor test int pop jp test jnp add inc insb jne push insb jbe jb popa arpl add fs jae pusha lea jae pusha cmp pusha mov lea ja setg inc not dec inc mov call lea lea movsbw movzwl call lea jne pushf pop movb setns mov push cwtl call push mov mov imul hlt repnz dec (bad) js inc pop es and movsb cmp add or adc repnz (bad) out push xor mov and xlat pop loop ljmp and and ss inc sbb mov scas mov sbbl popf and jge sbb cli lds imul fwait push loope,pt aad cli sbb xor push scas pushf sub (bad) repz push cltd out out add xchg mov iret pop adc aam xchg adc jl jnp xor add or lret push push jno js int fcomp add mov mov out sbb out and fs lds lock mov jg in (bad) stc xor outsb and cld pop arpl subl add (bad) enter pop hlt pop inc stos adc cmp cmp and xor mov or sbb push ficoml (bad) jl jge xor lret rorb mov ret mov int3 out dec lock push sarl das add mov leave dec push adc add jg (bad) enter mov leave mov repnz insb repnz and cmp jno ja psubusb loopne cld or add dec jb lds dec cltd es cmp and (bad) into or push pusha mov inc or test sub xchg movsb faddl xor pop stos jae mov fldt shlb pushf repnz xor xchg mov xlat insb sbb add inc jmp mov cmp xor bound nop imulb arpl dec adc add sub loop mov adc push lret imul cs jns insb out cmp dec (bad) dec out inc sbb and cmp pop jg adcl jno jbe pop xor sub jmp cmp call push mov pop ret int pop push idivl xlat mov addr16 loop fs loope leave fld sbb mov push sti sbb sbb hlt pop push cmpl jmp repz mov gs xchg jns inc push mov xchg nop xor (bad) xorl rcll xchg in (bad) push (bad) mov xchg aad jp mov xchg pop or and out leave sbb push or xor and outsb adc insl insl jb scas pop cmpsl (bad) scas stos mov xchg dec mov mov and and xchg mov inc mov cli and pop cmp or or jne call xlat cmpsl pop jne jmp xorb jns lcall out imul or and jo scas sub push call adc mov pusha shl inc cld or mov mov in int3 and xchg frstor cmp adc idivl lods repnz pop (bad) iret out pop and push mov enter and xchg jne ds ljmp and test bnd mov loope or cmc call sar mov clc test repnz push lea jne bswap call jmp out mov cmp push das mov sbb dec inc cld mov loop push dec icebp add adc (bad) js cmpsl in jb sbb xor lea cmp cmp sbb cld or test add xor sub xchg dec dec adc out or jnp and sub mov and jp jp and or inc rolb mov lahf add jbe jp jbe pop data16 scas shrl (bad) mov lcall inc js xchg mov push outsb adc or movsb sbb les fildll jo mov xor arpl mov and adc mov dec loopne mov jg loope adc fwait pushf ret lock flds xchg movsb dec push imul je gs mov shrl inc jno pop (bad) leave or popa pop arpl jns mov sub imul xchg push adc popa movsb mov outsb loop (bad) jae sub aas aam fisttpl lods mov rcrl subb or or stos cmc add jp mov int3 loope dec lahf add leave jbe enter es xor add ja icebp ljmp xchg xchg cmpsl movb cmp push movb lea ja push movw imul pusha bt add push pushf pushf pushf lea jmp sub sbb push stc (bad) sub stos cmc mov loop fstl sti out scas insb jae sbb das cmp adc jl xchg mov icebp push lret dec pushf mov cld mov mov test and das mov rorl jnp ja sarb ljmp push push imul test dec push stc xchg xchg xlat fnstcw aas lahf xchg stos mov mov cld xchg or mov xlat push out sub xor pop cmp sub mov push inc sbb jno jb or sub ret and mov fs call cmc cmp jmp mov jb cld sbbl mov mov dec out mov pop (bad) sub jp push sub pop inc aas hlt sub pop fisub jnp sub popa jmp pop push jmp add insb shrb lods stc loopne ret sub sub pop lods xor and inc (bad) popa jle dec outsb mov pop sbb or cmpsb pop and int3 xchg fwait push gs sub pop mov mov jno dec ret sbb inc pop jecxz fcoml and mov lds mov add push (bad) mov and xchg mov out (bad) dec and cmp mov mov test scas nop mov jno data16 mov adc test test xchg jecxz sbb jmp ror jno,pn jbe and dec xchg out mov xchg ljmp pusha fbstp jmp xlat movsb mov mov jno jno sbb sbb out push xchg sbb sbb (bad) aas test lods xor jge push xchg sub pop xchg outsb lcall push stos in arpl lods mov popa jno ret stos bnd jp add mov pop xlat stos xchg movsl mov aad jns mov nop into adc dec in frstor cmc dec lds fdivr add mov or xchg mov push xor dec push cs sub call inc pop incl mov xchg clc scas adc and mov dec mov xor add imul adc mov xor cmpl pop jo leave push enter pusha jg pop fwait mov dec sub xchg lret mov add outsl mov in inc icebp lods add bound (bad) pop push cmp enter pop aam ffree std lahf and sbb push push pop lods iret shl sbb push popa fucomp xor mov ljmp cmp mov cmc adc pop scas iret adc stc lret dec dec pop sub aam xchg sbb pop lcall fadd pop rolb xchg mov xchg movsb lcall and ljmp pop adc or push or pushl outsl adc out icebp scas icebp lods loope,pt adcl xor and inc push cmpl out push leave push gs imul jmp (bad) outsb jle mov in xor popf pop cmpl stos in mov dec sti and sbbl inc xor dec mov aam int push insb xor out and or jnp jge pusha mov inc push sbb inc and and pop insl jl in dec mov into adc gs cmp roll push div jmp (bad) jno outsl loope cmp inc jnp enter jg pop lea lret (bad) adc push test mov mov jl aaa push inc mov pushf ret add repnz scas adc imulb (bad) out (bad) xchg cltd xchg mov adc push es push int (bad) cmp lahf mov cwtl lods lahf in pop and sbb cmp adc cs inc jg fsubr call inc push lahf and push jbe dec xlat adcl lcall mov add call mov mov mov vpsrld pop cmp cmp xchg sarb mov jno outsb scas loopne fbld xor xchg repnz stc cmp pop mov gs push cwtl xchg test pop fs jl push jge jae xor cmp add icebp push popa sbb jg iret shll jae pop push sub cmovs push rcll lods shl mov (bad) sub dec or in sub bswap fidivr cmc cld adc je lea push lret sbbb sti int loopne orb les lahf push scas mov jmp sub sub and sub mov imull lcall mov (bad) jl push nop lret popf sub cmp xchg jno insl jg mov jnp outsl (bad) in mov and (bad) rcr mov add fstpl cmp sub int sbb pushl out and or sub dec lea imul dec dec outsb shl lcall or pop xor jo inc push out or adc js loop test pop sahf xchg pop outsl iret lahf loopne add lods rcl sahf mov adc and push push jle sahf loope out ljmp test lret inc xlat cmpsl xlat cmp int3 ret pop popa pushf lea jnp push pusha pushl push lea jmp mov pushl mov push pushl pushf popl push call pusha mov mov pushf lea jmp pusha mov pushf pushf push movw lea jmp jmp call bsr lea cmc stc call cmc rcl lea clc stc cmp and not not rcl bsf sub call and mov cmc stc xor rol add mov mov call call jmp jg cmp sub call add push call mov sub not adc rol mov jmp call push movw mov mov mov pusha pushf lea jmp call pushl popl mov movb lea jmp pushf mov sar mov pushf neg sub js cld pop jmp mov call jmp push cwtl pusha mov jmp push mov push lea jmp call pushf jmp btc mov clc stc stc sub stc add push pushf popl pushf pushl popl pusha mov pushl push lea jmp dec cmp test cmp mov add pushf mov jmp mov call inc cmp call mov dec bt mov pushf stc cmp mov not mov push test cmp not cmp bt and call jmp cmc rcr jmp bts mov call push pushl popl pushf movl pushf lea jmp add jmp cmc bt sub call add push mov push push lea jmp jmp pushf popl call mov pushf lea jmp push cmc xor movb clc not call cmp (bad) repnz mov add mov pushf add call lea jne test cmc lea test jmp bt bt sub jmp call pushl popl pushf lea jmp jmp pushl popl mov mov pusha pushl lea jmp cmp stc add pusha pushf mov pushf push lea jmp aas mov pusha xchg stc cmc clc xor stc cmc clc ror call mov pushf popl mov pushl popl pushl pushf mov lea jmp mov pushf cld call movzbw mov cmp neg bts sub mov pushl pushf call pushl popl pushl lea jmp lea jne bswap movsbl lea shl xorb movsbl pusha lea mov push push lea jmp mov inc pushf pushf decl push pusha call call pushf jmp push pusha mov mov pushf mov mov lea jmp setb mov push mov pusha pusha mov pushf lea jmp jmp cmp bt xor call movsbw push dec neg shrd bts add movzbw shrd mov test add jmp stc cwtl push sub jmp jmp pushl pushf movb mov push pushf push mov lea jmp push movzbl mov mov shr movzbw add dec jmp dec movb mov pushl pushf lea jmp xor pusha pushl push xchg push movl mov call cwtl mov clc push mov pusha bswap pusha test movb add push pushl clc add clc lea jb push sub pusha pusha jmp movl jmp pushf bswap movsbl bswap mov pushf movsbw lahf movsbw mov jmp push call aad shrd mov rcl and neg mov push sub stc shl call cmc bt add pushf jmp rdtsc mov sar and or mov cmc jle bt pushf sub jmp mov mov pusha push push lea jmp push pushf popl pusha pushf pushl popl pushl lea jmp pushl pusha pushl pushf popl jmp mov movb lea jmp jmp cmp sub pusha pushf cmc bt ror stc movb jmp shrd sar mov cmp clc push cmc add jmp pushl popl pusha pushf movw push lea jmp bts call dec rol mov call mov pushl jmp not cmc xor cmp cmp jmp call test shl cmp cmp bt shr bt clc bt cmc or cmc jmp and movzbl add clc shl add call das mov pushf add pusha call adc mov call pusha movb jmp push push mov pushf push lea jmp pushl mov pushf pushf pushf popl push push pushf pushl popl push lea jmp pushf popl pusha mov movw mov bswap jmp cmc bt stc imul mov call aas sar mov shrd cmc sub btc mov sar sar xor mov test pushf pushf add pushl jmp jmp cmp bt sub mov bt clc call das aad aad mov rcr mov stc bt push jmp movb mov push pushf pushl ret cwtl push stc clc stc sub jmp mov mov cwtl setbe mov pushf push divl call bt clc or call bt ror bt push sub jne cmp xor push bt pusha add cmc cmp cmp pushl sub pushf mov pushf push lea jmp movb push pushf popl lea jnp push push push pushl popl pushf lea jmp jmp push pushf popl pushf push pushl popl push lea jmp pusha mov push pushl pushf popl push call jmp rol mov pusha movzbl xchg ror pop pop mov pop seto stc mov ror xchg btc xchg mov not pushl rol call mov pushf pushl lea jmp bt btr cmp mov sar rol clc rcl mov bsf or bsf or mov bt sub push mov call pushf call mov movb pusha lea jmp jmp add call sar mov pusha stc bt add pusha mov push jmp pushl mov push mov lea jmp mov pushf jmp movl mov mov push movl push lea jmp pushf mov pushf movl mov pushf lea jmp cmp add movb lea jmp pushl mov push mov jmp pusha mov push pusha lea jmp movb call pop inc inc shl rcr add shr mov pusha pusha call pushf mov push pusha movb pushf lea jmp movzbl cmc pushf clc add pusha pushl dec clc stc stc ror bt stc test neg call pusha and cmc call pushf lea jne pusha call movb pushl mov movl mov mov push pushl pusha pushf pushl ret pusha mov call add pushf mov pushf push pushf lea jmp (bad) negb (bad) lcall setle mov cmc not cmc stc not cmp pushf sub pushf stc and pusha mov mov pushf pushf popl movb jmp add jmp sub jmp pushf push call movw jmp stc clc clc sub stc bt xchg pusha mov cmc jmp jmp call call call mov push mov movl movb push lea jmp mov jmp pusha lea cpuid pushf sub pusha cmpl movb pushf call lea jg push pushl popl pusha lea jmp mov movw mov call not lea dec mov bt mov inc bt mov pushf call pushf pushf pushl popl pushl pusha pushf pushf lea jmp stc jmp not bt test cmp add stc pusha cmp add push pushl mov clc sub call cmc shld push pushf mov call mov and cmp rcr add sets pushf not setg mov jmp push pushf mov pushf pushl call call jmp pushf bt not test clc push test add lea jo pushf cbtw clc pusha jmp inc bt jmp mov pushl pushf lea jmp pushf mov clc pushf mov stc test jmp pushf pushf mov pushl push pushf lea jmp call lea jnp btr bts mov bt clc jmp clc pusha cmp pushf jmp cmp aad mov adc adc daa mov jmp jmp mov mov call mov mov pushf lea jmp pushl popl push mov push lea jmp pushl pushf popl pushf mov movw pusha pushl popl pushl mov lea jmp jmp jmp mov xor mov clc test movb add call call pushl mov movb pushl lea jmp mov movsbw mov mov movw call lea jne movsbw clc mov call call mov push mov jmp movzbw mov movzbw pusha jmp jmp ror clc stc xor clc lea stc not push xor cmc call pusha call pop pushf pushl ret jmp pushf mov pushf push lea jmp push lea pusha jmp push push mov push movb pushf lea jmp cbtw pusha movl bt pushf cwtl movb stc sub mov jmp cmp cmc xor test jmp mov pushf mov pushf push pushl ret pushl popl mov push pushl pushf lea jmp pusha jmp clc bt jmp movsbw push call clc push cmp mov jmp movb push jmp pushl popl pusha lea jmp cmp jmp btr ror movsbw bswap pop jmp add pushl pusha push dec movl call mov pushf push lea jmp push test sub stc mul call jmp push mov call call rcl mov clc not btr dec add bsf btc sub or mov call call mov pushf lea jne add cmp xorb setge lea pop pusha pushf push lea jmp movsbw pushf lea pushf mov pushf push mov call pushl pushf mov push lea pushf mov push push lea jmp mov pushf pushf pushf lea jmp pushf popl jmp pushf bts test xor mov rcr shr clc add pushl pushf ror add not shrd push neg pusha jmp not bswap movb dec cmp add pushf rcl add or rcr neg bsf mov movw call test bt sub bt test cmc push add pushl lea js pushf pushf popl push mov pusha pushl pushl popl pushl push pushf lea jmp rcl mov cmc rol pushf test add jmp movsbw pushf mov jmp jmp jmp clc lea jno and stc jne cmp jmp pusha lea jne pusha sar xorb lea not movzbw call mov push pushf popl pushf mov jmp cmc sub pushf pusha call pushf mov mov jmp lea jnp pushf push pushl push pushl pushl popl pushl lea jmp aam pusha mov clc add pushf call cmc sub push jmp push jmp inc test xor bt not push jmp lea mov add push push mov pushf mov movb mov lea jmp mov clc pushl sub cmc cmp pusha shl push call bswap cmc bt popf pushf pop jmp bt sub pusha pushf mov mov call xor mov cwtl bt pushf bt sub mov call rcl rcl mov rcl pop das not jmp push pushf jmp mov jmp cmp test sub push pushf imul push jmp movzbw data16 repnz bts movzbl movsbl ror add rcr sub jmp call daa pop rol xadd pop bsr rdtsc pop xadd not pop bsf dec pop shl jmp push pushf movw idivl call pushf mov pushf pusha lea jmp add add daa mov bt bswap push mov call push push mov pushf pushf pusha lea jmp bts lea push rcr sub lea das sar setg lea rcr and bsf btc sub jmp call push call pushf push lea je jmp mov call pushf pusha mov mov mov mov lea jmp sub cmp test and pushf pusha movw pushf pushf popl movw pushf pushl popl pushf pushf lea jmp clc lea clc pusha cmp xor push pushf call bts inc jmp mov jmp sar pushf or mov add bsr add push sete inc ror xor mov jmp clc rdtsc stc sub push mov jmp call sub pusha push mov mov pushf push movw lea jmp cmc sub bt push shr movw mov push mov jmp imul pushf pusha mov mov jmp mov or cmc sub mov clc pushl popf pusha push pushl lea jmp call rep rcl inc cmp mov ror data16 (bad) mov cld clc cmp pushl popf mov lea jmp test push mov jmp aad mov inc call jmp push jmp mov rep movzbw bts jmp call mov movb pushf lea jmp add call pushf popl jmp mov movb jmp jmp cmc mov cmp xor pusha mov bt cmp pusha sub pushf mov shr jmp mov clc stc stc add pushf shrd pushf mov call add clc mov stc mov sub call pushf mov pusha mov mov mov push lea jmp push mov pushf pushf lea jmp mov push pusha mov lea jmp xchg bts clc pushf rcr pushl popl push pushf movl lea pushf movzbw pop mov movsbw ror bswap dec cmp shld add xor shrd movsbw lea rcl test or inc sub push data16 not lret lea add clc bts rol mov cmp ror adc add btr pusha pushf mov push ror sub pushf btc inc not sbb neg rcr ror xor bsf bswap lea lea dec clc sub ror clc lea movzbl lea call movw lea ja cmp dec setne mov dec setne js and lea shr sub das jmp movb movb pushf popl movb call stc mov btc or mov bt add call cmp pop movsbw test (bad) repnz bswap lea movzbl pop pushf pushl ret pushf mov pusha push push pushf lea jmp mov pushl popl mov pushf pushl lea jmp add cmc cmp add pushf jmp shr notl rcl dec xor mov call push pusha pushf pushl popl mov stc cmc add cld bt stc pushl popf pushf push lea jmp cmc rcl mov pushf sub pusha jmp call push sub pushf jmp sbb bsf mov and call test push mov add pusha stc sub jmp pushl popl pushf lea jmp add add rol mov xor bt ror mov cmp sub pusha movb cmc shr pusha pushl call pop pushf mov mov lea movsbw bswap pushf cld push push mov not lea std movb mov mov not movsbw call mov mov pushf popl lea js pushf pushf mov pushl popl pusha push pushf push lea jmp mov push movb pushf popl jmp test inc mov clc cmp cmp add pushf mov dec pushf pushf mov pushf inc pushf cmc stc jmp pushf pushf popl push pushl popl movb lea jmp dec ror shr cmp mov call pusha stc add pushf push lea jmp pushf pushf popl call call jmp mov mov mov lea jmp jmp clc mov pusha call push mov push mov lea jmp mov mov push pushl mov lea jmp call pusha mul call mov movb cld movb call mov mov pushf call bswap bswap sub bt ror jmp mov pusha mov pushf movw jmp pushf lea jmp bts mov sub daa sbb aam mov cmp sub push cmc pusha stc imul call push pushl popl mov pushl lea jmp movb push mov push lea jmp daa daa mov call mov pushf lea jmp call call mov pushl pusha jmp bswap not ror xor (bad) icebp shl add shld sar shr shr movzbl mov lea jmp pushf popl jmp jmp inc dec jmp jmp lahf lea cwtl jmp mov test jmp mov movw mov pushf lea jmp xchg movzbl repz push call pushf movb mov push pushf lea jmp mov pusha mov pushf pushf pushl lea jmp jmp mov call call mov pushf movzbl cmc jmp rcr call add sbb lock repnz cld icebp add repnz lret lock out add enter in add (bad) add clc out add out add mov add mov out add lock das icebp add clc out add jb add cmc repnz mov add out add lock jo add mov out add lock push out add in add shr inc fdiv add out add pop icebp add (bad) add lock out add cld icebp add clc out add test add mov add and add (bad) add dec repnz mov add sub add lock dec repnz push out add lock enter psllw inc mov lock or add or add lock ja add dec out add lock pop icebp add (bad) add repnz out add jl add loopne add call repnz out add out add das icebp add (bad) add jl add daa icebp add lock sub add cmpsl out add lock pop out add jb add out add dec repnz loopne add (bad) add pop out add das icebp add (bad) add repnz enter mov lock mov add or add lock jb add jb add or add into out add icebp add lock call out add mov out add mov add das out add and add clc out add ret icebp add out add lock repnz cmpsl out add mov add loopne add lock cld icebp add (bad) add cmp icebp add repnz daa icebp add sub add pop icebp add repnz out out add out add cmp icebp add out add enter clc out add lock cmp icebp add icebp add (bad) add (bad) add out add (bad) add out add repnz repnz lock ret icebp add dec out add icebp add repnz psllw inc dec repnz jl add lock enter ja add lock mov add repnz add mov add repnz psllw ret add out add icebp add ret icebp add jb add enter clc out add mov add (bad) add mov add icebp add repnz push icebp add or add jge add pop icebp add pop out add daa icebp add loopne add out add out add or add lock sti out add test add repnz out add pop icebp add out add mov add add add jl add test add dec repnz enter add repnz pop icebp add sbb icebp add loopne add jl add mov add lock (bad) add jb add enter add fs jne jmp bts xor mov mov test call jmp inc and add btc mov push bt call pushf cmp call jmp bswap and movzww bt clc stc xchg cmc pushf pusha clc xor call adc sar neg movzbl mov adc mov clc bt add pushf jmp div mov mov pushf movl mov pusha pushf popl jmp pushf pushf jmp inc jmp cmp xor push jmp jno mov jmp mov call pushl pushl jmp pushl pushl popl push push mov lea jmp inc btr cmp mov jmp pushl popl mov movw lea jmp cmp add seta sub mov sbb ror mov test sub clc push shl pushf pushf jmp mov pushl lea jmp add add lock sub pop adc add add add shr add dec add mov add pop cwtl add dec cwtl add push cwtl add lret add cltd add dec cltd add jle add scas cltd add aam add cld cltd add dec lcall sahf lcall add add pop fwait add lods fwait add rcrl add setl add pushf add movsb pushf add rcrl add popf add dec popf add mov add aad add sti popf add and add (bad) sahf add lret sahf add hlt sahf add setg add lahf add popa lahf add lods lahf add in add or add insl mov add out add adc mov add mov add aaa mov add int add std mov add mov add add add and adc and adc daa leave adc 