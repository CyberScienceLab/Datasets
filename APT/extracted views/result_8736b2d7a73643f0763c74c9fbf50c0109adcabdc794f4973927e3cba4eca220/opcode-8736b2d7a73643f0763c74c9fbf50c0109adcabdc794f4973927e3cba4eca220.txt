xchg retq lods ja xchg push jle outsb addb rex.W pop sbb lock cmp (bad) push retq pushq mov frstor in cli rep mov nop and lret add mov int3 mov jb and add sbb cmp or jb xor or pushq pop out pushfq and cmp mov movsb push cld mov (bad) xchg (bad) (bad) jo mov retq andb jne xchg (bad) mov lahf rex.X xchg pushfq push (bad) (bad) mov pop xor (bad) test jrcxz rex.WXB loop cmp cld gs or mov roll enterq jp repnz push out pushq (bad) (bad) (bad) rex.W in xchg rex.R rex.X imul (bad) repz or or shrb and callq out insb (bad) pop (bad) mov xor enterq mov rex.W (bad) pop outsb (bad) xchg xlat sbb or mov imul icebp push sub rex.X jno (bad) mov std std (bad) lcall jp xor pushq cmpsb test (bad) (bad) jg es (bad) (bad) lcall mov mov xchg sbb insb fmull (bad) cmp callq shufps mov rex.B add and xor fmuls retq (bad) lahf rex.WB rex add packuswb mov imull test rex.WRB cmp ja fsubrp test fldcw nop push scas jl in rex.WR cmp jp (bad) scas ljmp rex.WX mov mov callq (bad) data16 cs repnz jmpq je clc cmc sub cmp test cmc cmp jmpq jmpq mov movzbl movsbq pop retq jmpq jmpq jmpq jno outsb fcomps mov sar mov mov fwait xor cmpl xlat imulb fnstsw sub cmc rex.WRB fidivr xchg scas lock (bad) (bad) test jne gs test add (bad) lcall test rex.WRB hlt jl repnz cmp lcall scas xchg jns loop (bad) lcall sbb jg mov mov cmpsl es (bad) jmp jle pushfq or ss (bad) fdivl lods insb adc rex.W rex.W insl adc stos xlat paddusw jmp mov andl or jge popfq pop (bad) jle add mov (bad) pop adc ficoml mov sub xchg movsl cmp fimull sub rex.X mov (bad) cs or mov rex.W loopne jae jmpq or jmpq jae bswap movsbl mov inc mov lea mov jmpq jo ja (bad) lock sti rcl btr shld add xor mov setno inc add mov jmpq jmpq seta je (bad) out (bad) sbb fsubr addr32 enterq clc bswap decb imul movabs fstpt movabs push xor or sbb (bad) (bad) (bad) (bad) fist retq (bad) fwait mov (bad) jg sbb (bad) lcall cmp cmp es (bad) jge,pn mov mov (bad) cld int lods (bad) xlat rex.RB sti add mov pop (bad) imul xor (bad) jbe (bad) (bad) rex rex.W (bad) rex rex.RXB add callq addr32 mov mov test mov icebp add mov or std sti cmp test pop stc sub leaveq mov leaveq test cmp nop push ss outsb mov mov add rex.WB lods xor pushq fildll push cld data16 (bad) mov in mov xor clc push ja mov lret shl xlat retq or repz sub cld pushq and pushq flds xor pop jb sbb or and (bad) (bad) (bad) mov callq in sub pushq imul push xchg sub (bad) (bad) and rcll adc hlt pop cmp jb cwtl sarl lahf rex.WRB push or adc rex.R loop (bad) lret lcall nop (bad) lods mov and rorl rex.X add mov cs pop cmp jbe data16 add sbb outsl mov mov xchg and test shrb adc js jne xor mov cltd add xlat jl (bad) (bad) mov sub pop cmp movslq jmpq jne sbb and add adc lret cld je sbb sbb (bad) data16 lret (bad) lods jno cmp int3 movsb jmp or add fs movsb outsb xchg rex.WB or jnp rex.B int (bad) (bad) mov (bad) xor rex.W jb hlt insb xor std (bad) (bad) fcomip rex.WRX mov (bad) pop loop mov cs (bad) push push xchg movabs sbb ficom cmp rex.RB rex.RB mov lock rex.RX (bad) sti (bad) cmpsb xor fprem xlat shrd rex.WRXB scas xlat iret pop (bad) fisttpll imul out hlt xchg push (bad) rex (bad) (bad) cmp and sub (bad) sub cltd push (bad) jnp jo test fs sti imul (bad) (bad) mov (bad) (bad) (bad) (bad) fild jb rcl rex.WXB adc push (bad) mov ror and push jbe (bad) cld xchg jle and xchg negl andl cmp (bad) jmpq push xchg lret pushfq sbb adc add mov (bad) gs (bad) (bad) lcall sti (bad) lcall lods (bad) (bad) icebp mov pop sarb mov pushfq (bad) adc xchg push mov xchg mov outsb ljmp (bad) mov (bad) sub rcr (bad) movsl cmp adc or movabs xor xchg push pushfq rex.WX adc jo (bad) sub lock (bad) mov xchg or and (bad) xlat ja popfq jge (bad) fstl rex.WR bt test add stc clc stc rol cmc not jmpq jmpq je cmc cmc cmp jmpq add jmpq jne cmc movb jmpq jmpq cmp cmp jmpq setp setne lods jmpq bt test jmpq jmpq dec bt jmpq je cmc cmc clc stc cmp jmpq jmpq jb scas sbb mulb movsw jge enterq jle pop (bad) rex.RXB movsb pop imul clc (bad) (bad) mov fdivs iret mov movsb (bad) lods shrl retq pushq push mov std (bad) (bad) mov pop pushq mov mov mov jnp (bad) (bad) fucomip push ss (bad) lcall cmc mov test loop sbb mov xor cmpsl movsl in rclb iret (bad) cmp rex.WB fwait jp cld rex.WRB mov add fwait pop in pop (bad) sahf rex.W cltd (bad) notb ss rex.XB mov mov in movsl pushfq adc (bad) pushq xchg pop shrl adc retq rex.X mov ss je hlt cmp (bad) lahf (bad) pop (bad) cmc push rclb std adc fcomp ss outsb mov rex.X add iret or add xor test mov inc inc stc bts add neg not shl movl shl add sub lea mov cmc clc test cmp cmp jmpq out adc add add (bad) lea add add add or out xchg add add fstpl add push sbb or add (bad) add add add addb add add add ss sbb cli and add mov adc in adc jne adc (bad) sbb add add add adc fnstenv add ja sbb add add (bad) xchg sbb add add (bad) sbb add add or add add add add sbb jmpq adc (bad) mov xlat imulb scas (bad) mov popfq pop insb (bad) xchg jne or out (bad) jbe movsb hlt adc je stos add loop and je mov fiaddl jle stc mov lcall (bad) in movslq rex.W (bad) test lret or mull (bad) cmp rex.R xchg (bad) (bad) cltd movslq (bad) fcmove rex.WRX icebp sbb cmp xor cltd ss scas jmp rex.RXB scas js out rex.WXB std jge loope rex.WR rex.RX pop xor (bad) mov jno cmp mov fimull fisttp out (bad) rex.WRXB add (bad) (bad) fistp sub (bad) sti (bad) lcall and sbb xchg pop sub mov fwait sbbl leaveq test adc insb insl insl fildl xor adc jle push xor pop rex.WX xor mov or (bad) std rex.WRB int subl pop (bad) in push fcoml push xchg addr32 xsha256 cmpsb (bad) movsl mov cmpsl push cmp or lss xchg enterq callq sti movsbw add btr sar btr and mov shr mov jmpq callq jmpq jne cmc bt movb cmc test jmpq jmpq bt jbe cmc add jmpq ja bswap bswap setnp pop sete movsbq not xchg pop setb setae xchg movsbw pop mov pop jmpq jne btr shr cmc mov bt jmpq jb cmp cmc clc stc cmpb jmpq jmpq jne rol movzbw mov cmp sub lea data16 mulb (bad) mov clc sub stc bt pushq stc test cmp jmpq jmpq jo pop enterq movsl test lret xchg sbb sti shrl pop outsl lahf in adc (bad) xor jnp cltd xor (bad) mov pop insb sbb retq leaveq push mov cmpsl outsb (bad) pushq fucomp or fs std (bad) (bad) fildll and rex.RXB addr32 js jbe jnp mov test pop (bad) cmp mov test and cld (bad) lcall cmp lcall (bad) mov (bad) push mov (bad) pop sbb (bad) and adc int cmp xchg push xor lock fmuls test (bad) sbb rex.W divb cltd jns or (bad) mov add mov xor mov jb sub lahf jl adc rex.WX rex.WX (bad) sub (bad) adc jmpq jae jmpq (bad) loope sbb mov (bad) cmc push fcomi xchg cmp jg ss sub cli adc (bad) fsubrp popfq clc mov xlat retq and adc mov lret xor rex ds xchg hlt sub (bad) push (bad) outsl not sbb lret lods pushq jmp sbb out movsb in retq xor xor xchg rex.WB (bad) cmp std test stos rex.WX adc mov mov movsl jg callq lods xor je adc xchg scas cwtl out std (bad) (bad) incl (bad) lcall lock mov rex.RB adc andl adc fisttpl cmp cs fstl mov sub shl (bad) (bad) add sub (bad) int jge (bad) pop jrcxz (bad) or cmp retq jrcxz sub nop mov int3 add sbb mov cli frstor xor adc mov fwait sti adc fwait retq (bad) cmpsb movsl fs addr32 mov out hlt in cmp pop cmp jmp stos or (bad) (bad) lcall (bad) iret lret lods pop sub test pop sub movabs insb mov cs or fs (bad) rex.WRXB int movabs js outsb (bad) xor shl (bad) sahf insb jmpq cli cltd js rex.RX rex.WR bsf add neg mov jmpq jmpq jne cmp cmc clc movb jmpq jb jmpq movzbw movsbw movsbw movsbw pop retq movzbw mov jmpq ds adc nop (bad) mov mov mov (bad) or jge or pop orl popfq jmp mov sub test sbb lock (bad) mov (bad) mov fsubl cmp (bad) (bad) fist (bad) xchg movabs movabs in (bad) rex.RXB enterq xor lock push in jle cld (bad) (bad) ljmp xchg movabs sbb lock cli rex.WX mov and cli (bad) lcall mov retq xchg xor rex.R adc shrd push sub gs rex.WXB andl xchg jns (bad) xor rex.WX rex imul rex.RXB push or movsb jl rex.WX lret test add adc jmpq jmpq jmpq cmc cmpb jmpq jae jmpq jmpq test movzwl shl mov cmp stc cmc cmp add stc cmc stc cmp mov clc bt stc jmpq xchg out (bad) insl (bad) mov xor push ja pop mov add mov fildl adcl loope pop fdivrs rol je lahf jl rex add fidivrl lods ja (bad) sub (bad) (bad) decl rex.W (bad) scas lods or adc fisubl (bad) (bad) fistp fild lahf mov cli enterq hlt retq outsb rex.WRB fbstp lahf (bad) shrb cmp xchg repz outsb (bad) sub mov or pushq (bad) (bad) adc xchg lret divl (bad) (bad) (bad) (bad) (bad) sub scas in movabs pop mov or shll test and lods mov jmpq (bad) mov jmpq rex.B mov mov rex.RXB add push repz leaveq (bad) test jrcxz xchg notb loop mov test out jle insl pushfq insb and roll jbe xor fisub fistp rex.WX retq loop shrl cmpsb test xchg xchg (bad) lcall (bad) rex.WRB out (bad) lcall test push xor sarl jg xabort repz out stos movslq jns xchg adc jns sub (bad) mov jg pushq movabs iret xchg jg imul pushq and imul (bad) fisub push movabs (bad) xlat iret scas test and fxch jno jbe or mov fsubs lahf rex.WRB xor xchg clc add rex.WRB (bad) mov out mov int3 sti sub xor mov test mov add stos (bad) test fidiv adc gs adc imul cmpsb xlat andl (bad) je mov and xchg (bad) test (bad) push test jns sarl rex.R rex.R fwait retq (bad) (bad) mov pop xchg (bad) data16 xor add scas cs xor (bad) stos leaveq jo (bad) or sub (bad) loopne mov adc (bad) mov scas cli (bad) lcall cmc in (bad) xor mov mov push movsl push rclb test (bad) (bad) xchg sub (bad) and mov (bad) (bad) enterq cmp (bad) (bad) jl (bad) jb xor xchg insl cmc mov (bad) out sbb adc movabs (bad) int add jmpq je btc add btc not xchg lea sub clc rol shr xadd xadd jmpq jmpq stc cmc test cmp jmpq jb cmc bt cmc cmp jmpq cmc movsl (bad) push jo mov cmpsl data16 sub adc imul (bad) mov loope insb pop sbb cmp mull add sahf jge pop mov stc jae in (bad) (bad) (bad) (bad) jmpq sub and out rex.WX jmpq xor xchg or xor cmp (bad) push fbstp (bad) rex.WRX fiadd jg jno adc (bad) rex.X mov rex.WB fnstsw sbb (bad) lcall outsb xor or mov test xor cld fldt pop jmp stos cltd pop (bad) seta xor mov cmpb retq (bad) jo imull cli jp ja rex.XB add rorl imul stos push xchg jae jge fistl jno loope (bad) imul rex.XB adc in sbb lea movabs sti or xchg sbb add addr32 xchg jno mov lock (bad) in int pushq or push jbe rex.RB rex.WRB movabs movsl (bad) hlt mov mov rex rex.WX (bad) lcall (bad) cld (bad) lcall mov jno (bad) cmpsb mov jrcxz (bad) (bad) je,pt push xor je loop negl (bad) push (bad) sub adc enterq hlt test push mov mov hlt test cmpsl adc (bad) outsl fwait (bad) xor out lock test stos lret sbb out (bad) std (bad) jo (bad) rcll jae mov (bad) (bad) mov mov cltd rex.B jg scas (bad) mov xchg or test fcoml fmul js (bad) cs fist pop mov fsubl jae mov icebp sub mov mov (bad) std std out or fldenv insb sub retq loop mov pop cmp push add rex.B push pushfq sub adc and and rex.XB mov out insl in mov (bad) pop (bad) int rex.RX xor jp (bad) jmpq fist (bad) outsl add cmpsb out lods mov enterq stos mov mov ds rex rex.RX cmc sub mov (bad) test mov mov mov mov scas pop mov lods nop in cmpsl rex.WXB mov sbb jb jb nop loopne or test out cmpsb sbb or sub (bad) fs lret fstpt mov int (bad) cs (bad) and cwtl jo (bad) in cmpsl fsubrs mov addr32 in sti outsl loope cmpsb (bad) push jrcxz movsb xchg cmpsb ja movabs adc sub jns pushfq rex.XB (bad) enterq out rex.R repz xor mov loopne movsl xchg loop cmpsb or (bad) xor movsb mov int3 jmpq loopne movsl jmp (bad) mov lret sbb jno add movabs fbstp (bad) movabs rex.WB fsubs out add test (bad) cmp and movabs add enterq lret vmovntps fidivr push je xchg sar fisttpll cwtl xor and or pop mov shll (bad) jg rcl sbb jnp mov mov or push rex.WR and stos pop jb fdivrs (bad) retq mov pop jno push xor or rex.X movabs (bad) (bad) rex.WB movabs (bad) (bad) fucomip or not (bad) (bad) xchg mov add and sarb insb or mov cmp rex.X xchg repnz test sub adc rex.RX mov (bad) and (bad) enterq pushfq xor sbb mov (bad) loopne xchg add push or loope push jb clc movzwl inc ror mov bt add bt cmp mov test clc bt test jmpq callq jmpq cmc imul cmp cmc clc jmpq cmp cmp jmpq je jmpq mov mov jmpq jmpq and (bad) mov lock decl (bad) sarl xchg add cld fs pop insl or ja xlat and imul rex.WX insb (bad) iret push rex.X jno packuswb jne clc cmovg (bad) cmc cmp sahf xchg std hlt loop loop or or mov or lahf repnz movslq std (bad) lcall bt and sub insb and es fidivl jnp adc popfq lea (bad) movabs insb lods imul stos and pop stos (bad) cli xor insl adc movabs lock (bad) in adc (bad) movl ja cmc lods jnp loopne push cld data16 mov icebp sbb movabs lock addr32 shll clc ss add jrcxz pop cwtl clc cs movabs loope (bad) sti es int (bad) (bad) lcall add (bad) xchg mov (bad) out rex.X add push mov push adc sub test pushq imul pushq sti (bad) lcall (bad) repz lahf data16 cmp (bad) pop and cmp sub jl (bad) cmc insl stos pushq mov or or lea xor xor out lea jrcxz xor and rex.W ss xchg imul (bad) or jno sbb (bad) cmpsl hlt ja jmpq jmpq jmpq push push rex.RB rex.RB rex.WRX cs insb add xchg jne ja mov xchg clc sub addr32 rex.R fwait push jp rex.B rex.WB adc adc pop imul or mov leaveq mov insb fwait sbb pop jne nopl (bad) (bad) inc retq andb adc movabs cld (bad) lcall (bad) sti (bad) lcall xor sub sbb lea jo xchg scas callq jp lods (bad) jb fcmove cmp xchg and (bad) movb adc sub movabs fs (bad) outsl (bad) fnstcw (bad) or popfq (bad) and xchg mov (bad) (bad) (bad) and ds stos test pop (bad) jp fadds mov sbb maskmovq notl iret jg pushq sub sahf (bad) callq pushq xor movabs (bad) leaveq test (bad) callq jrcxz mov add mov insb rex.WXB cs mov jge in add jb rex.X movsb xlat cmpsb (bad) scas lea (bad) adc jmpq je bt add stc cmp jmpq callq bts sar inc add rol mov test cmc clc cmc cmpb jmpq cmc and test stc add jmpq je clc bt jmpq je bswap xchg mov movsbw lea bswap mov movsbq movzbw mov not jmpq sub bt cmc pushq stc cmp jmpq mov sahf or mov test (bad) movsw jge add std fdivs movabs movabs loopne (bad) cmpsl data16 ds insl adc insl xor (bad) push in xlat (bad) (bad) lcall cmpsl xchg lret stos or test push std (bad) lcall mov (bad) lcall ficomp sub (bad) outsb (bad) (bad) jbe (bad) cmc mov (bad) cmpsb fisttp (bad) (bad) mov cwtl pop outsl (bad) out rex.WRX (bad) (bad) scas jl pop leaveq (bad) divl (bad) (bad) ljmp rex.RB or test mov mov sbb xlat or sub xor rex.WRX outsb xchg mov cmpsb in mov cmp andl cmp cmp subl and mov cmp and jmpq not mov mov jmpq jmpq ja rcr shr shr test sub dec bsf neg add shrd mov rol mov jmpq ja xchg pop movzbw lea pop xchg pop not lea lea pop jmpq jmpq sub sub shr rcl shl mov shl or dec setnp add inc xor mov ja test bt cmp test jmpq and mov mov outsb popfq or ds scas pop (bad) lods jne push jae test sti cmp fldl fidivrl mov pop (bad) mov lret (bad) leaveq clc pop (bad) (bad) (bad) (bad) (bad) std (bad) (bad) hlt mov mov xor cmc sub idivb mov ja enterq cli sub and (bad) (bad) fistp and (bad) lret imull rex.WRXB rex.WRXB sub jmpq addr32 leaveq je (bad) mov insl push sti fidivrl xchg insl jl rex test clc xlat rex.RXB or add icebp jno mov cmc pop xchg lret jge shrb or vandnpd sti sub push xchg (bad) add xor and mov lock jmp shr rolb movabs cwtl sti or (bad) test jle std lret lret add (bad) jg jp stc adc and movsb jmpq (bad) (bad) mov outsl out jbe flds int sbb adc jne in rcr mov stos jmpq out test pop or loop xor sahf jge fcomps outsl add rex.R (bad) (bad) mov movabs rex.WB lods rex.WRB (bad) cmp or enterq cmp scas mov add lret shrl out or adc adc (bad) fcoml (bad) imul push icebp (bad) push in xchg pop adc (bad) scas push xchg int rex.XB cmp sahf jbe cwtl pushq xor push xchg or pushq callq test jmpq jne bswap sub rol mov stc add jmpq (bad) lock scas jmpq bt cmp jmpq jmpq xchg mov pushfq sub (bad) decb jrcxz (bad) std mov (bad) pop (bad) lahf cs test insb pop loop f2xm1 cmp stos xchg xor outsb (bad) fidiv push jns lods out std (bad) lcall (bad) cmpsb (bad) sub rex.WXB fcoms test add or int imul ss test adc xchg je jbe push scas lods (bad) (bad) lcall ds (bad) lcall callq add push push mov cld jbe cmp loop sub pop mov fsts rex.WR lea (bad) sub and adc mov outsl mov test fisttp fxch imul enterq mov pop and mov add add jmpq cmp shr cmc cmp test cmp jmpq jmpq jmpq bswap movsbq movsbl movsbq movzwl not not not lea mov mov jmpq (bad) pop hlt pop jle mov push or movsl cmp xchg adc sbb add mov (bad) jno cmp mov rex.W (bad) push jne add rcll in add pop outsb mov push rex test enterq cwtl enterq or cmp (bad) (bad) mov xchg popfq roll movabs repnz (bad) (bad) mov mov iret scas (bad) pushq mov adc mov add (bad) cs jl movsl adc pushfq mov fimull in mov imul xor sbb cld fs cmp (bad) sub fadd movabs stc (bad) outsl mov retq sub rex.WRX insb mov std sub sbb (bad) (bad) sub jb and loopne scas rex.WRX sub cmpsb pushq cmpsb test (bad) adc (bad) mov clc movabs and and movabs xchg xor (bad) lahf push xchg add (bad) (bad) xchg femms rex.RXB vsubpd jp lods sarb pushq (bad) sbb std (bad) (bad) fist pop rex.WRXB lods in mov and repnz (bad) incb cld (bad) lcall cmc rex.WRX out cli (bad) lcall pop jp and in cld cmpsl (bad) mov cmp rex.WX sub (bad) cli add fisttpll fwait push mov rcll divl int jbe jb loop fs mov sbb sub and add sbb pop movsl adc mov mov rex.RXB cmc movsl jg xor (bad) loop nop push cmpsb ds jl cli stos xlat addr32 mov hlt cmp test fcmovnu out add sub xchg (bad) xchg or jno sub (bad) sti and xor mov mov test orl rcl movabs xchg (bad) rex.X rex.WR adc push (bad) (bad) mov roll ficomp sbb rorb jmpq fisttpll xchg jle sub scas (bad) ja xchg add movslq xchg scas gs jne pop loope push out jbe xchg scas xchg icebp paddb lcall pushfq rex.RX (bad) xor (bad) pop pushfq jl pushq xor rex.RB stos mov insb hlt movsl adc mov addr32 mov (bad) addr32 mov callq repnz in cmc test cmp cmpsb and test callq jmpq je lea shl shr bsr push bsr shrd test mov data16 lock rcr sub movsbw not setae lea jb callq cmp and bsf btr add shl lea clc adc mov cmp bt cmpb jmpq test jmpq xor (bad) (bad) (bad) mov (bad) leaveq mov (bad) pop cmp nop (bad) mov mov mov mov shlb jmpq mov mov (bad) lcall (bad) cld (bad) lcall test hlt xchg imul add mov fs sub xor (bad) test xchg xchg xlat rex.RXB jge sub out ds mov push pop pop cmpsb cmpb retq jg cs mov push (bad) fiadd fadds rex.RXB sbb lea mov negb add or or sbb adc (bad) mov in jrcxz or add outsb jbe (bad) jbe add sub test (bad) insl icebp or xor sub jl jne jmpq (bad) push cld adcw rex.XB ss mov (bad) js sahf ds xchg sub mov (bad) out and sub mov movntq mov pop insl std sub pushq mov movabs (bad) lcall (bad) sbb lahf fisttp stos jrcxz int3 roll pop rex.WR or (bad) sub addr32 jrcxz mov fnstcw fisttp andl (bad) lcall cmp (bad) lcall movslq push jl rex.RXB jb loope xorl and (bad) (bad) xchg push (bad) out or loope js outsb fimul mov data16 cmp pop fmull cmp add (bad) mov jae mov int ficompl jmpq faddp out push add cmp and jno movabs mov pushq jrcxz rex.RX sub or sbb xchg test mov in test test test (bad) (bad) sub and rex.WX (bad) (bad) (bad) cmp cmp rex.X movabs out push jne sub (bad) lcall adc adc test jbe addl sbb cli sbb xor je mov imul xchg xchg negb retq in push xor jne adc stos mov jp cmp mov jrcxz outsl adc js addr32 rex.WRB (bad) sarl jmpq jo ficomp (bad) mov (bad) jg or pop popq (bad) cmc insl mov rex.WB xorl lea (bad) rex.RXB sahf callq jmpq jae rcl mov cmp mov neg clc mov not sbb lea sar mov stc sub cmc jg clc repnz jmpq cmp cmp sub stc cmp bt cmp jmpq jmpq bswap mov pop lea movzbw pop lea bswap pop jmpq cmp js jb bt cmc cmp jmpq je bt push sub shld mov bsr rol rcl dec sub movsbl lea jmpq mov setg jmpq and push mov popfq adc jle in rex.RB rex.XB xor idivl or add xchg add xorl pop xor popfq in pushq rex.WR xor icebp sbb (bad) (bad) (bad) ljmp mov (bad) ds rex.WRXB and test (bad) (bad) (bad) sub sti (bad) lcall mov fistpll or rex.WR adc xchg cld lock test mov (bad) ljmp callq stos lret test sub mov add imulb (bad) mov (bad) (bad) hlt add pop int lock lret xor rex.WRX adc movabs and mov enterq xor stos jnp movabs (bad) jp rclb xchg outsl je fstpt loopne (bad) adc fbld rcrb cld cmp callq jmpq callq jmpq jmpq jmpq jae mov sub shr mov rol not sub (bad) lock setae not mov not mov jmpq jmpq jmpq bswap pop jmpq jmpq ja and sub mov movzbw shl add movsbw add shr mov stc sar dec xor mov clc stc stc repnz jmpq ja jmpq jne clc cmc cmp movb bt stc test jmpq cmp jmpq out mov (bad) xchg mov mov sub rex.WX xor mov pop and rex.XB rex.XB movabs mov (bad) mov xchg outsb popfq std fadds (bad) xor rex.XB add or mov add (bad) cmpsb rex.WRXB (bad) (bad) (bad) lcall idiv (bad) lcall rex.WXB lods xor loop rex.RX jnp icebp rorb or adc adc xor in rex insb (bad) fbstp xchg movabs enterq fwait (bad) lahf out test cwtl movsb cmpl rex.WX sub in (bad) mov sbb outsb jbe sub jmp (bad) icebp (bad) mov or cmc adc ds push cltd push xchg (bad) cmc jge stos cmpb adc mov sub pop add mov not not mov jmpq cmp add jmpq callq jmpq shr clc test jnp cmp jmpq mov jmpq jb jmpq gs mov fucomip (bad) (bad) lods pop lret (bad) icebp sbb sbb sbb add jmpq and pop jb add in push xchg cmpsb xor jmpq (bad) (bad) (bad) (bad) xor fiadd rex.WRB mov jge movabs lret jmpq (bad) mov pop cli (bad) lcall mov add mov (bad) (bad) sahf or (bad) jle (bad) jb data16 (bad) or (bad) sub mov out (bad) sbb outsl (bad) loope (bad) rex.RXB cmp (bad) mov adc jno (bad) jge rex.WRX xchg push out negl adc pop lret and rex.WXB icebp icebp imul data16 sahf jbe je xchg (bad) sbb rex.WXB (bad) shr jge add sbb add sub sete add shld mov not mov test test je cmp repnz jmpq jmpq popfq jge jl (bad) mov or notb jno fucomip rex.WRX pop movsb and sbb in push (bad) (bad) xchg cmp js cltd sbb negl out mulb or (bad) (bad) (bad) incl shll movabs mov adc (bad) fisttp (bad) lahf mov lods jbe stos negb cld (bad) lcall and (bad) lcall xchg imul mov imul stos test in repnz jbe rex.XB mov loopne lahf movsb hlt mov movabs sub push xchg jle out rex rex.WX lret (bad) pop rex.WX mov movabs andb pop hlt jno fstpt mov fadd or mov sub je add pop cmp (bad) in sbb (bad) cmpsl data16 cmc insl pushfq cld xlat push jbe add jg pop sub fwait movslq xchg rex.R (bad) pop cmp pop ja jnp insb (bad) (bad) lcall push xchg sbb adc mov js rex.WRXB (bad) push in cld (bad) lcall rex.XB out rex.WX (bad) lcall scas rex.XB pop out cltd out (bad) mov rex.XB xchg xor (bad) (bad) jg (bad) ficom or push xchg ficoml jo cwtl or cmp (bad) in stos adc add cmp mov adc add iret push jns rex.WR adc (bad) mov pop fldenv popfq sahf retq or mov rex.WR jbe pop add (bad) out retq rex.RXB (bad) movabs (bad) divb fs rex.WRB cmp mov mov negl or rex.X adc test iret sahf clc cmc test repnz jmpq je test clc test test sub clc cmp jmpq movabs add mov ja adc scas in fadds clc xor pop int3 es gs mov lahf (bad) (bad) jne (bad) xor push rex.WB add jg (bad) fsub sbb rex.WR std jae xor mov cltd iret jae stos fiaddl add (bad) loope decb insl pop jmp adc outsb pop rorl xchg jmp sub clc (bad) or cld loopne rex.WRX in std callq fisubr jmpq sbb loop seta cmp xchg je cs jge loope sbb sti lret out cmp orb adc (bad) xor out iret jb cmp icebp movabs rex.WRXB jmpq jae stc jmpq sub jmpq je cmp clc bt bt sub cmc clc test cmp jmpq repz mov (bad) fisubr fnstsw mov std pop cmp hlt pop std and movabs loope or repnz movsl cmp fistpl addr32 rex.X cmp rex.B imul xor lods (bad) cmpsl and rex.R rex.WX xor jb mul lods add (bad) add jmp stos and test (bad) ds rex.WXB mov add mov lods xor and cwtl or (bad) and fwait push test lods pop mov add int (bad) out rex ds xor jmp or jmpq cmc sub rcr mov cmc stc bt clc sub bt cmp bt cmc pushq cmc cmp jmpq xor stc test cmc clc repnz jmpq retq fmull (bad) iret (bad) xchg cmp rex.RX std lods sbb lahf (bad) fimul in sarl (bad) mov sub stos and repz or movabs repz push pop insb insb frstor jb mov movsb sub iret nop (bad) cmpsl (bad) sub rex.WXB pop sbb xchg sbb add jbe enterq pop mov sarb (bad) (bad) mov rex.X mov mov test xchg mov cmpsb rex.RX adc push sbb (bad) (bad) pushq mov movsb rex.X add (bad) cs in faddl xor pushq shll addb (bad) je xor fcoms (bad) (bad) (bad) (bad) int3 rex.R rex.X iret jns adc scas (bad) cmpsb (bad) (bad) enterq mov (bad) mov jl repz (bad) cmpsl (bad) sub insb fmull pop out (bad) iret sbb xor add out fs rex.X loopne test rex.WRB addr32 pop cmp push (bad) jmpq not jmpq jne bt movb cmc stc bt test jmpq rex.W (bad) (bad) (bad) mov add xchg (bad) sahf sub (bad) fidivrl rorl xor xchg cmc mov mov rex.X push mov jbe (bad) movslq nop jo xlat popfq cmp rcl jp push movslq rex.WB adc and or (bad) (bad) jg or movabs pop rex.WRX jo xlat shl test sti cltd pop xchg rex.RX (bad) in lods sbb fsubl pause xor cmpsb test paddusw jne test push xchg outsl movabs or (bad) mov rex.W rex.WXB notb xlat retq in jl add add (bad) xor (bad) rcrl xlat or mov (bad) xlat and (bad) lods mov and cs jge ja es retq leaveq rorl fs xchg cmp movabs dec js lock ss rex.WRXB cmpsl out int fwait jnp repz repnz (bad) (bad) lcall cmp push std (bad) (bad) (bad) mov pushq xchg enterq rex.WRB imull (bad) jl jns addr32 ds addr32 mov sub sbb (bad) xor rex.WRXB cs fisttpl mov xor cs adc adc cmp cmpsl (bad) xchg adc xor (bad) rex.WRX fsubl jle,pn int3 sbb rorl mov cmpsl test enterq neg stc sar mov shl mov (bad) icebp add test bt cmp xor cmp cmc repnz jmpq jmpq jmpq jb stc cmpb jmpq repnz jmpq out mov mov jg and rex adc jmpq out cmp add rex.WRXB (bad) (bad) mov lock outsl sahf ds (bad) (bad) jb imul jmpq (bad) (bad) lcall push or adc (bad) hlt mov xchg cmp cmp (bad) fs xchg (bad) shll and std (bad) lcall xchg xchg (bad) mov pop (bad) or lcall mov lea jae rex.RX gs fidivr xchg (bad) cmp mov sub (bad) mov pop mov ja (bad) and cmp imul jo pop lea sti shrb js rex std data16 sub (bad) (bad) sbb (bad) movslq cmp popfq rex.RXB (bad) (bad) (bad) cmpsl negl and add xchg out adc sub add jmpq sub mov pop xchg jp rol fcomi xor sbb rex.WX rex.WRB add sbb pop outsl (bad) jg xchg (bad) test jmpq icebp mov mov rex.W cmp loop movsl rex.RB cmp sbb pop cmp (bad) (bad) mov rex.WXB xchg jmpq faddl (bad) xor jge xchg add sbb lock test jns cwtl ja push fimul sub gs mov movswl iret and mov (bad) push in and mov mov mov lret (bad) mov xor decb in cld xlat scas sbb (bad) std (bad) (bad) (bad) (bad) decl xchg hlt push jae xor cmp pushq leaveq jo push rex.B (bad) out cmp or decl xor (bad) (bad) negl retq mov cmc insl cmc sub lahf pop cwtl lahf cwtl (bad) (bad) and (bad) (bad) (bad) pop lea cli int (bad) in add movabs loope lock cld (bad) (bad) mov popfq cli (bad) lcall sub rex.WXB imul pop loope (bad) retq retq sbb xor (bad) xchg jbe lods and rex.WRX sub mov loopne sbbb std sub imul push lahf vhsubpd (bad) rex.WXB pop test mov rex.R rex.X rex.WX (bad) jo es (bad) xchg jmpq sbb jne xchg (bad) mov mov mov jnp sub movabs (bad) scas rex.WRB jl lea movabs and adc fsubl test (bad) add jno (bad) and lods in pop insb sbb jb mov imulb rex.RX add cmp (bad) (bad) mov in sarb xchg shrl (bad) (bad) (bad) mov sti (bad) (bad) jg rex.WB mov fistl mov fcompl and test jb fwait jp mov cmp fidivrl mov cwtl push scas (bad) mov mov fcoms xchg (bad) (bad) movabs std std add iret (bad) mov add add mov pushfq insb je adc rex.RX out cmp (bad) (bad) xchg out fisttpll subl push xchg (bad) insb jmpq rolb callq sbb (bad) xchg (bad) mov sub or rex.WB notl cmpsb xor add (bad) mov insl in callq mov (bad) fucomip mov cmpsl in (bad) jmpq (bad) test fs in in (bad) lcall push (bad) iret callq test (bad) push (bad) gs (bad) lcall repz (bad) test cli (bad) lcall (bad) mov sbb (bad) (bad) mov xchg cli loopne out xchg fmulp adc or xchg cmp hlt push jmpq mov (bad) (bad) lahf rex.WRB xor xlat adc push or (bad) mov mov mov pop rex push decb xchg negb pop mov in add pop rex.RXB je cli mov (bad) outsl icebp popfq jne (bad) (bad) rex.WRX cs xchg (bad) movabs cmp fnstsw cltd xor mov sbb retq ss cs jl sahf (bad) insb or rex.R popfq adc jp add mov movabs mov rex.XB rex.WXB int3 insb je and addb (bad) add pop sbb (bad) (bad) (bad) jmpq std (bad) (bad) fistp js (bad) rex cmpsl xchg xor jl stos int mov xchg xor scas hlt xor cmc movabs jrcxz sub scas dec pushfq rex.WX seta xchg (bad) rex.RX jbe cmp pop adc adc (bad) xchg rex.RX jmp adc gs lea or nop fdivrs test bswap btr stc bsf mov test rol jmpq rorl rex.W (bad) mov rex.XB (bad) lods jae push push sbb (bad) fwait negb pop sbb int (bad) xor rex.RXB fnstsw (bad) cmpsb mov mov stc adc repz fcomi mov mov jg (bad) icebp add mov cltd cmpsb (bad) adc mov pmovmskb outsl (bad) push xchg in xchg imul cli sbb xchg push mov retq sub (bad) (bad) cs xor mov fidiv cwtl (bad) mov pop jb xchg push (bad) push jne rex.R sbb jnp (bad) mov int3 je std or repz icebp and mov (bad) (bad) mov fs rex.WX outsb (bad) sahf (bad) movsl mov (bad) (bad) (bad) mov callq (bad) lahf decl jle (bad) push cmpsb test fistp cmp sti (bad) lcall and rex.X test or or gs out pop js rex.XB (bad) rex.WR xor rex.RXB (bad) faddl movabs rex.WXB adc mov or jmpq cli xor or loop (bad) rex.WRXB lahf (bad) (bad) in jae and jmp adc ficoml movsl (bad) rcrb mov repnz and add cld cmp jmpq jmpq ja jmpq je jne jmpq insl in movabs xchg xor mov movsb pop imul cld xlat cmpsb out jmpq mov imul pop (bad) (bad) fisubr fldl (bad) or (bad) (bad) mov fs mov retq (bad) lahf rex.RXB icebp cld (bad) (bad) (bad) sbb imul nop (bad) out iret rex and not scas add movabs sbb stos sti cmp and retq lock data16 roll mov mov adc (bad) (bad) pop mov test stos jg mov (bad) je adc test cld or (bad) push sti fimull xchg mov (bad) rex.WRX adc rex.RXB std add enterq (bad) clc test cmc jmpq push rorl scas (bad) movabs rex.WRB rex.W (bad) lods cmp rex.XB pop or lret sbb pop jo xchg out stc and (bad) (bad) fbld fs push and pop cli out pop lea (bad) iret (bad) pushfq pop pop out jae (bad) jle push rcll mov sarl sub rex.WB rex.WRXB insb mov pop lea (bad) sahf (bad) (bad) in adc out rex.R rex.WR sbb and scas jl in mov stos data16 iret cmovbe (bad) rex.RXB test cmp jmpq movzbw lea jmpq test movb jmpq sub xchg lcall (bad) mov or cmp lret add mov add pop jno lods je sar rex.X cltd adc outsl mov out (bad) sti leaveq lods jae (bad) xor add cmpsl add in pushfq jnp or cmpsl fucomip mov jae cli (bad) roll xor data16 xchg mov and js imul ss (bad) fcoml lcall int sub rex.WX add cltd shrb and rcrl fsubrp popfq clc push ja push sbb rolb jmpq push out std fdivrs jmpq (bad) test sahf loop popfq cmc pushfq or retq cmc xchg insb (bad) (bad) (bad) fistp push lods (bad) lea add (bad) pop cld or cmpl cltd fistpll rex rex.RXB fldcw xchg (bad) stos sbb retq sub add xchg int3 pop add xchg je rex.WRX xchg xchg (bad) (bad) (bad) insl xor cmp push iret leaveq jae test add mov xchg push stos js and popfq rex.XB cmp xor sub xchg (bad) movsl test mov repz nop pop sbb cmpsb imul data16 sub and jl jb or rex.WRX je mov jg lahf (bad) sub adc add lret cmp rex.WR (bad) push movslq xor cs insb add mov (bad) pushfq (bad) mov pushq mov notl jne nop sub pop jb fstpl push ja or (bad) (bad) lret fidivrl pop movsb fwait pop cmp movslq retq retq adc xor movsb (bad) (bad) (bad) mov movabs in or std (bad) (bad) pushq sbb lcall add jnp shlb (bad) in or (bad) sbb rorb rex.WX outsb retq sti mov push mov fistp xchg (bad) and xchg jbe movabs fcoml mov insb jnp mov push mov jmpq push jg xchg rex.WRXB add add (bad) pushq jg ljmp outsl adc jl mov mov sti (bad) ja cmp neg sub rcr add shld mov sbb add mov cmc jmpq add rex.R gs jb jns outsb jbe jb outsb insl outsb je insb outsl movslq add add add sldt add add add add movabs add add add mov movabs add add add xchg mov add movabs add add add fwait negl add sbb lods cltd sldt add add add add adc push movabs add add add addb (bad) movabs add add add test sbb fstpl add add add nop cmpsb adc andb add movabs add add add cwtl xchg sbb movabs add add add add movabs add add add jp sldt movabs add add add or movabs add add add js verr movabs add add add jl sbb lock add add add andl sldt add add add add movabs jmpq jmpq jmpq pop jmp or leaveq add in lods sub (bad) rex.WRXB and and sub movabs lods hlt adc movsl (bad) (bad) xchg test jnp mov jle xchg push jp (bad) loopne (bad) (bad) (bad) mov (bad) pop notb sbb ds mov push sbbl adc cmp push callq pushq rex.RB (bad) leaveq (bad) sub jp and cmp rex.X rex.XB fwait rex.WX rol add out (bad) jp std (bad) (bad) jg rex.XB es (bad) and rex.WRXB jo mov or mov add sub rex.RB cmp or (bad) add (bad) int lret sti jmp adc sub ja test adc lods push xchg lret and cmc out cmp add pop nop and ds jmpq jmpq je jmpq je bt stc cmp jmpq jmpq nop fdivs movabs jp and ljmp movabs icebp mov mov lret xor rex.WX rex.WRB add rol (bad) cmc popfq sub sub mov sbb xor adc mov push (bad) rorl rex.R (bad) jg in sbb (bad) (bad) lcall leaveq mov lock lods sub (bad) lcall mov mov cmp (bad) fist movabs jg jae out rex.WRB xor movabs or pop imul (bad) test pop cmp or test nop and (bad) fisubrl movslq or fimull cli jmp movabs scas jge and test shrl int3 insb adc leaveq cmp xchg push cmc xor fistpl rex.RX jle jmp add ds repz or jmpq je stc stc jmpq jmpq movabs fsubrp lods subb jl add clc (bad) and movsl ds jbe movabs xchg (bad) testl ds mull (bad) es movslq movabs shlb out loopne clc adc mov out xchg (bad) sbb mov mov nop xor scas (bad) jmpq scas (bad) (bad) rex lock js loopne rex.XB rex sbb mov ror sbb adcb or sbb or (bad) (bad) sub rex.WRB (bad) (bad) faddp xor pop xchg (bad) movsl (bad) icebp mov cmp mov clc movabs movabs mov out or repnz callq jp (bad) cmpsb data16 pushfq (bad) mov fnop repnz lock (bad) jle cmpsb stos jbe out hlt jae clc sahf cmpb (bad) pushq or lret fbld lahf jmp jo rex.WX mov jle ficom jo ficomp (bad) pushq rex.RX jrcxz rex.WXB adc rcl xchg (bad) test js pop xchg js xchg jge (bad) (bad) cmpsl popfq xor roll and xchg lret ds (bad) push xorb out rex.RX repnz pushq cli loopne insb cmp mov and jp fbld add loopne pushq (bad) jbe and mov or mov retq sbb hlt retq xchg jbe xchg jmpq fbstp (bad) mov addr32 mov (bad) push rex.RX retq sahf mov test (bad) outsb stc rex.XB incb (bad) (bad) in jg rex.RB movsl mov jne fidiv mov stc movsl (bad) lock xor fnstsw rex.WRX addr32 loope pushfq outsl and data16 loop mov (bad) xchg je sub insb popfq mov ds loope add rex.WX lock scas pop fbstp movsb mov jp and (bad) int xchg loop jns jno,pt rex jrcxz and movabs retq fiadd (bad) and (bad) int retq movabs data16 or (bad) (bad) je shrb and sbb (bad) xor sbb clc in mov mov rex.WR or test out or mov ss ror pop xlat out out cmpsl cli jmp (bad) jo jb adc incb fs mov je pop push rex.W mov pushq mov popfq stos loop sahf sbb xlat mov push movsl nop ja jl add loopne or out pop adc pop and movslq icebp cmp (bad) (bad) (bad) (bad) callq xchg (bad) (bad) loop loope jae mov mov movsb (bad) jge xor mov leaveq fsubrs (bad) nop jnp out cmp mov test retq (bad) (bad) xchg sub rex.RX and push cmp std js mov pushfq in enterq xchg add loop adc test jno cmc test fs je xchg rex.XB in jbe rex.RXB jle mov scas jns push adc leaveq loop (bad) (bad) pushfq stc mov stos movsl (bad) jle sub cmp jns or in mov jbe jb fistpll insl rex.XB push and (bad) cpuid (bad) mov sahf push sbb xchg data16 pop repz xchg rex.X fisttp out outsb insl adc mov (bad) scas mov jns je and pop lock add adc lock insb (bad) in js idiv rex.RX add insl cs mov in es out cld or loopne or xchg (bad) jae lods lods test stos mov (bad) mov (bad) mov movabs lahf mov xchg xorb (bad) pandn mov add outsl fidivr mov outsl ja test (bad) adc pop sahf xorb out cmp lahf jl (bad) mov adc jg adc outsl jl mov add cmp movabs fs loop sbb mov and lock jg movsl scas cmp mov jmpq xchg (bad) hlt icebp (bad) ja rex.X xchg out pop lock (bad) ja jg out xor outsw out sar scas cli out mov decb movabs rex.WRX outsl pop fsubp (bad) sbb push xor test (bad) ds movabs hlt cmpsb (bad) sub fwait lret addr32 data16 out (bad) cmpsb mov hlt out add fmull cmpsl cmpsl out xchg lret (bad) (bad) (bad) jno push or (bad) out (bad) (bad) cmc (bad) pushfq roll (bad) out roll sub xor data16 cmp out mov mov clc adc int3 notl test (bad) sub rex.RXB (bad) cmovl xor out callq in pop lods (bad) and sbb jb (bad) (bad) lret addb (bad) push sbb (bad) lahf (bad) and fcomps lods add sub pop adc in int3 (bad) jl (bad) jg mov mov movsl xor pop adc adc xor xchg mov (bad) adc pop (bad) and loopne enterq add stos sub sahf cld imul (bad) movsl leaveq test pushq popfq cmc cltd sub imul lret (bad) icebp jns jmpq push jo add or cmp (bad) and mov fistpll je nop or rcrb sbbb (bad) icebp pop cmpsb callq (bad) mov (bad) js lea or stos pop jnp ficoml retq sbb ja movsl movslq test test (bad) xor movsl xchg mov psllw xchg in subl lret xchg push jle test sub jno (bad) icebp add xchg cmp cmc scas movsl je cmpb sti loop (bad) or jno int leaveq loope cmpl adc xchg punpcklwd out mov xlat or fiaddl jns retq push (bad) mov mov (bad) and xorb (bad) psubusb mov mov movsl xlat and lods scas in cmp mov mov pop jb add es xchg fnstsw pushq scas (bad) movsl mov stc data16 repz pop rorl movsl add sub jp movsb mov jmp (bad) mov hlt mov pushq (bad) retq mov and imul or lahf push (bad) scas add mov test sub xor jo mov jnp cmp mov (bad) out (bad) rex.W pop test mov adc loope sub addl sti and (bad) lahf sub add sbb paddusb (bad) mov (bad) dec or jne loope push cmp and (bad) mov (bad) fisub callq cmp in lods (bad) (bad) pop jg mov xor push lret data16 ja outsl (bad) gs mov or in jp insb mov (bad) mov jle (bad) (bad) lea mov mov ds scas cs cwtl add (bad) mov mov add addb in mov rex.R and loopne shll rex.B lods out (bad) or sub jl (bad) xor insb jbe (bad) jle stc lahf cmp jae jo loope add data16 sbb loopne fldenv insb out sub mov and (bad) jl hlt ficompl jo (bad) fbld lods cmp mov movabs (bad) mov rex.WB lahf test retq fsubl mov xor mov in push jl adc and (bad) loopne movabs jrcxz xor callq imul je rex.WX (bad) rex mov out out jno mov cmpl cmpsb lock cmp scas add fwait and movsl pop fnstenv jge jmpq lahf sbb movsl (bad) mov data16 add rex.RX ror push out jae (bad) jge rolb jo decl enterq addr32 cwtl (bad) and and sub pushq xchg in rex.R clc (bad) fsts fisubr mov rex retq (bad) popfq stc sub jrcxz incl (bad) add test sbb (bad) js lahf or scas mov (bad) test movsb jge test jle add in (bad) clc add je pop and cltd stc xor or jb movsl fadds sbb scas (bad) test out adcl jg scas mov push repnz movabs and mov and out (bad) rex.WX sti ja (bad) movsl std jle (bad) or movabs gs (bad) jae in pushq pop sahf movabs (bad) cmpsl (bad) (bad) cmpsb xor mov (bad) (bad) mov (bad) and movabs (bad) movsl push and mov mov cmp pushfq pop jae rex.WRXB mov mov pop fimul test cmp push or cmp sahf (bad) xchg test fidiv jp sahf jle in in movabs iret mov (bad) jbe movsl mov stos xchg mov push pop adc (bad) adc pushq (bad) out cmpsl xchg shlb (bad) and jg rex.X (bad) mov push cmpsb rex.X xchg test stos jno stc (bad) outsb cmp xor test jge jge jo pop jle data16 sub cmp movabs lods scas test fildll and (bad) repnz test adc xor sahf sbb addr32 inc out jo xchg pushfq mov ds cmp stc outsl cmpsb rex.WX (bad) fsts jl icebp lea mov ds adc test imul in (bad) xchg xor mov fisub cmpsl xchg pop divl gs sbb jrcxz adc adc push movslq loope mov mov and jb insb pop test pushfq (bad) (bad) (bad) mov int adc (bad) (bad) incb js mov cwtl xchg fsubs cli test or data16 movabs fadds rex.WXB xchg cs fstpl (bad) js mov out xchg adc sub (bad) (bad) mov sahf test mov rex.RXB iret lods imul and adc jno (bad) and or scas sbbb test mov jl mov push (bad) xor fsubp (bad) clc and mov movabs mov add lahf xchg in add lahf movsl fs lods (bad) jl pop lods callq divl int icebp pushfq lock bnd (bad) jmpq (bad) xchg (bad) icebp xorb in (bad) fs mov mov jl xchg cmp test loope rex.WRX scas js mov stos xlat mov sbbl loop jb mov addr32 and int3 in fild sub xchg loopne sahf mov icebp push sub (bad) and sbb fcmovnu retq sbb pushq (bad) ffree movabs je iret andb fnstcw adc (bad) or iret (bad) add sub xlat addr32 loop fimull or pop (bad) stos rex.XB jrcxz add adc rex.XB (bad) out jl xorb (bad) fs insl jbe leaveq (bad) test mov out xchg movsl (bad) fisubr cli movabs push je movabs shlb (bad) insb mov mov fmul repnz sbb rex.RB rex.RB repz cmp popq in adc sete xchg pop mov rcr mov lock xchg movabs scas callq jge fisub adc in sub out ja ficomp and push std mov sub adc and rex.R outsl loope (bad) push add (bad) mov ss scas lock rex.RXB mov and or stos fisttp push or (bad) cli ja insb (bad) xorl fdivr (bad) es lahf jo loope rex.WX xchg pop (bad) pop xchg and sbb sub movabs fsubr test cmp fidivr movsl add loope pop (bad) fisttp (bad) (bad) push or push loope sub es (bad) movabs js (bad) (bad) xchg or cwtl pop mov adc mov (bad) jbe cld sbb ds insl (bad) data16 (bad) pushq (bad) sbb movabs out movsb adcb push pop add loop cli je pushq rex.R mov test ja jle je (bad) mov (bad) fbstp cld sahf movsb jne jle fsubrp rex.RB sub (bad) adc jg jle rex.R push push insb sahf in jno jbe lock xor push (bad) sub pop jb outsb repnz pop fadds rex.WXB sbb mov add mov sub or mov gs movabs (bad) in mov sub xchg movsl add ss xchg jle (bad) shlb ljmp shll cwtl fwait mul movabs insb xor rex.WRB cmp add mov jo (bad) pop jae cmc retq pushq (bad) (bad) lods cli (bad) movabs cmp xor mov (bad) test and (bad) xchg data16 jnp outsb mov jbe mov je icebp je adc (bad) jbe sbb retq xor rex jbe (bad) fisub test out add and callq scas out jg outsb mov int mov rex.W fild xchg movsl gs rex.WX (bad) fsubl rex.RX jo (bad) out fisubrl pop imul pop fisub sbb fiaddl add mov lock cmpsl movsb xchg jno sbb rex.RX cmp movsl clc (bad) mov nop out mov loopne rex.WX retq and test (bad) js orb scas movsl ss cmpsb (bad) pop movabs push add mull int rex.WRX nop in xor jge xorb (bad) xchg xchg (bad) cld stos rcr mov movsl out (bad) push mov lods testb pop subb movsl sbb jle push sub adc cmpsb int in rex.WRB fwait andl movabs mov pushfq movsl xor and jg insb je xchg gs mov (bad) mov ja ss retq fnstsw insl (bad) mov cmp out jo sahf ds sti nop cmpb (bad) cmp or xchg xchg callq xchg push mov scas lods jnp addr32 sbb addr32 ds jnp sub movsb shlb andb (bad) lret mov scas retq insl cmpsb push mov sbb cmp sti or (bad) (bad) mov xlat pushq jg rex.WX push sub mov mov rex.WXB pop cltd cs xlat js sub jbe ds sti shll cltd pop jle movsl (bad) mov clc jae xchg mov js stos jle loope xchg nop (bad) mov fistpl paddd loop sub sar lahf adc push rex.W leaveq push (bad) in mov mov outsl (bad) lcall jg and rex.XB (bad) loope outsb movabs rorb mov mov cwtl ja or and xchg test lock cmpsl sub mov nop mov and cmp test jle stos jo jmp and movsl rex.B rex.RXB xchg mov pushfq es sub rex lock test jo enterq cmc (bad) jns int3 lods push enterq xchg xchg (bad) cmp xchg or sub and (bad) in rex.WRB (bad) or and outsl fiadd in (bad) jg outsl pushq jne (bad) retq xchg nop mov and sbb sahf cmc test movabs rex.WRB xor (bad) and or or imul mov (bad) rorb js sbb push jo cmp mov (bad) rex.WRB test ficom or data16 adc mov mov rex.B fs (bad) sar (bad) xor in fisubr gs cli jle mov lods (bad) sub sub addr32 sahf data16 leaveq (bad) movsl xor (bad) lret in pop movsb push push rex.RX movsl mov (bad) jp xor xor and fs movabs add pop sub (bad) (bad) movslq mov rex.X rex.X jg out sub (bad) movabs (bad) and movsl idivl movabs pop iret hlt xchg (bad) fcoml (bad) movsl cmc (bad) loop add movabs mov lahf or loopne add rcrl sub mov retq in mov (bad) (bad) in (bad) jl (bad) and mov fild in test jbe cmp cmp cmpsb movsl and adc mov loope add pop andb jle rex.WRXB cmpsb and (bad) cmp pop xchg ja and callq gs mov xchg test sub mov fs jp es jbe (bad) pushq push insb (bad) je lret scas rex.RXB cmpsb rex.B gs movslq mov enterq rex.X jnp and cmp (bad) jle mov (bad) (bad) cmc adc jno (bad) movabs popfq and push and xor sub mov retq fistl xchg lock (bad) retq sahf out loope movsl mov jge insb (bad) add fiadd pop xchg pushq rex.WRB data16 mov mov (bad) add jbe pop jne pop movslq fs (bad) and movslq test lods adc incb in cmpsb stos mov (bad) mov (bad) mov and adc ror jb jle test in imul test cwtl sahf loop xor iret jle and cmpsb lahf sub (bad) or xchg (bad) pop rex.W pop lock jle jle movabs scas jmp and pop pop sub rex.WRB movabs stos or out mulb mov (bad) retq (bad) sbb (bad) movabs rex.RX mov in movabs pop mov (bad) movabs rex cmpsl callq scas push adc adc out cmp mov rex.WRX movabs jno data16 jne fs cmpl rex.RXB xchg sbb pushq iret xchg sbb xchg (bad) cmpsb rex.RB (bad) outsl jg out (bad) jg movabs xorb stos mov and lods int rex.WRB outsb sahf xor xor mov jo mov (bad) out (bad) sarb mov pop mov sbb adc imul pop mov (bad) jmpq (bad) and push xchg add or xchg movabs and test lret xchg (bad) jmpq enterq or punpckhdq int3 (bad) fild (bad) cmp mov vcvttsd2si nop out fs push sahf rex.B pushq rex.RB cs (bad) retq scas or (bad) adc jo jb movabs mov pushfq xor cld movsb and xor jl rex.R mov add add pushq movsl hlt shrb xchg (bad) stos add es movsl adc sarb movabs retq fsubrs mov pushq outsb xchg stc fidivr mov or mov in pushfq (bad) ds (bad) test shrl add cmpsb jno insb fidiv add mov mov (bad) (bad) insb movabs loopne sub jmp movabs fwait jnp jns,pn xchg mov movabs stos rex.WRXB add jge sub fbstp (bad) scas mov clc jrcxz std jg sbb repnz insb (bad) (bad) rex.XB inc loopne (bad) imul mov lods popfq push sbb mov lock loope mov rcr (bad) sub leaveq rex.RB jbe mov mov insb lods jae jrcxz fildll fs push mov pop push lock xchg xchg (bad) lods xor add add cs rex (bad) rex.RXB rex.RXB loopne (bad) mov repnz cmc (bad) jp fisub and pop sbb cmpsl (bad) out (bad) jg jmp jb test mov (bad) lahf add out mov es movabs mov (bad) mov movsl int3 xchg mov rcll xor rex.WXB sbb in jge sarb and mov mov js loope cmpsb (bad) jp in outsl insl jle ds lret mov scas (bad) lods es (bad) push subl icebp xor or in xchg or fs and imul lods movsb jo rex.B addr32 (bad) rex in movabs js or mov (bad) ja enterq (bad) leaveq mov (bad) cmpsl xor cmp test (bad) hlt xchg jbe movsl scas in (bad) mov sub (bad) rex mov pop repz andl retq movabs adc xor iret mov adc and sbbl outsb xor mov out add sbb add retq movslq pop jge movsl rex cld cmp mov repz push add jmp ds pop mov add xchg imul scas sub mov xor (bad) rex.X (bad) rex.WRX rex.WR mov cmp hlt decl sbb xor fiadd rex.WRX sbb (bad) (bad) repnz cmpsl loopne sbbl xchg outsl leaveq rcr sbb fisubrl js xchg mov (bad) (bad) or out (bad) out adc pushq cmpsb loope (bad) int add (bad) loopne (bad) lret add push jmpq jle mov (bad) divl xchg mov fisubr push cld pushfq rex.WRX mov add adc jo lods or jp loope test xchg movabs (bad) add xor orl or jp int xchg enterq imul movsl test (bad) mov mov popfq mov jmpq stos sub test enterq (bad) jae jl cmpsl cli rex.XB movsl leaveq (bad) xlat rex.B add sbb sub movsb xchg (bad) movabs mov mov push sar add xor movsb xchg jns or rex.X or (bad) pushq notb loope es mov rex.WB lock sub xchg ficoml lret jmp (bad) (bad) lods (bad) gs xor hlt movabs movabs lret shl lahf rex.RX jp idivl lret (bad) (bad) movsb stos jae pop ja clc movabs cmp fdivrl mov loopne jno or test rcrb movabs insl xchg fnstenv rcl je jp loopne pavgw in lods test (bad) fbld lret sub rex.RX data16 mov rex.RB fmulp jo hlt xchg rex.WX movsl pop mov test jrcxz sbb in xchg sti lret xchg out rex.X lret cmc adc adc cs pop xchg leaveq loopne adc test jle movsl (bad) rex iret testl pop (bad) ss sub mov stos sub xacquire sbb shll (bad) add add stc cwtl stos jbe test sti loop lret or movsb (bad) add shr insl int3 mov movsl ds rex.RX sub sarb (bad) mov pushq mov callq xor orl movsb leaveq jo andb sahf rorl lods mov pop (bad) (bad) jae sbb shlb (bad) fstpt cs js mov (bad) and add add xchg rex.WX sub (bad) cs stos cs shlb outsl xchg rex.RXB cmp cmp test mov in movabs enterq (bad) sahf cmp andb (bad) xchg sub incl jle jmpq jrcxz add sbb imul movsb (bad) fstp test jbe add jo movabs jns sub lods mov fimull sahf jge pop (bad) mov and jle sub and (bad) stos fs (bad) movsl retq out and add rex.X movabs stos test and and es push (bad) rex.WRB je (bad) cli rex fwait callq sub xchg movsb (bad) xchg rcrb stc add (bad) movabs movsl (bad) jo xchg fild xchg (bad) js (bad) push pushq outsb movsl int mov (bad) (bad) fistpll outsl (bad) jl add ja int and and pushq scas scas enterq xchg add sbbb popfq (bad) rex.WRX mov jb (bad) std pop mov test test shrb rex.WRXB out mov rex.W gs popfq andl xchg popfq rex.R jmpq fdivp add movabs outsl mov push adc stos (bad) (bad) popfq sahf (bad) (bad) pop (bad) mov mov push (bad) in sbb xchg (bad) out (bad) xor cmp lods sub test and jmp and (bad) scas jg out mov sti scas callq cmp xchg pop mov jg mov jnp fisubr hlt loopne (bad) mov (bad) lea xor adc mov rcll pushq rex.X stc jmp (bad) shr (bad) out cmpsb test (bad) xlat lock mov mov scas notb addr32 in add sldt cmp adc movabs fstpt mov out jbe xchg (bad) imul enterq in addr32 sbb (bad) mov sarb (bad) or and cltd test jo loope jrcxz es shrl (bad) mov lea test sub (bad) jo mov cmp scas fdivs jb data16 addr32 jmpq mov gs mov shll pushq xchg push rex.RB pop (bad) rclb or orb out (bad) mov imull xor loopne jp rex.X rex.WB out in (bad) test mov jge push out or rcr (bad) rex.R jle or lock sub cmp (bad) jb (bad) or (bad) lret mov jno in rex.R mov (bad) repz retq xchg in xor add (bad) jrcxz shr repnz xor ds jg xchg and lock loop (bad) mov sub outsl fs js (bad) test movabs imul rex.B mov xchg mov shlb xchg movabs (bad) out loopne lods rex.WRB push jnp lea cmc ja (bad) fsubp or or sbb int mov jge sahf xchg decb jo add rex.WR loope,pn fisubl jne movsl rex.X push and sbb mov movabs and iret movsb xor int3 movsl test rorb add imul data16 cmp gs ficomp test jl mov or jae shrb insl xor js out (bad) notl data16 mov pop mov xchg sub (bad) (bad) (bad) fist insl mov cmpsb cltd rex mov and mov sbbl insl (bad) div jno out rex es data16 (bad) (bad) xchg xchg movabs (bad) out mov rex.WX clc gs push cmp in and repnz cltd sub movslq movsl out loope stos callq jl rex.RX push (bad) or rclb addr32 xchg xor stos (bad) or rex.WRXB movabs cmp jl xchg pop sbb pushq movsl iret rex.WX lods adc hlt stos (bad) xor pop mov fsubrp std and jbe je jae fs jmpq ja test sub mov (bad) lret sti pushfq (bad) mov cmp orb repnz jbe rex.WRXB retq out subl mov repnz lret rex.XB adc out push rex.WR sahf movsl out shrl iret cltd jl out sbb xchg (bad) sbbb mov push or movabs add sahf in insl mov ja notl out lock xchg fisttpll mov or add imul jrcxz std or (bad) (bad) lea mov xor pushq and mov rex.WRB push hlt test popfq scas mov and test incb shll pop int3 cmpsb (bad) rorb sub or xlat (bad) lock sbb adc (bad) loopne (bad) rex.RB out xchg scas or retq retq rex.WR adc cmc cmp xchg lea jmp or jbe imul mov xchg and scas lock rolb add or sahf cmpsb adc (bad) (bad) enterq xorb (bad) mov (bad) (bad) jge scas imul rex.R (bad) and ss mov movsl mov sub (bad) retq sub jno cmp and retq xorb packuswb orb jle pushq loope (bad) (bad) hlt and movabs enterq stos pop jb push rex.WRXB scas jo add cmpsb and and mov cld (bad) adc push (bad) rex.WX jle or pop loope or stos pop (bad) mov (bad) sub (bad) add rex mov and sub sti cltd sub (bad) movabs (bad) jb mulb mov sub xor sbb test mov movsb test sub jno lahf cmp jg sub cltd and jge adcl and retq (bad) jl movabs rorl cld out jno or mov icebp jb add mov cmpsl mov (bad) cltd (bad) outsb cmc add (bad) stc lods fisub jg rex.RB jle lods and (bad) movsb std rex.WR sub ja (bad) (bad) rex.WRB (bad) (bad) sub (bad) mov std (bad) (bad) lret rex.WRX test (bad) cmp sarl fisttp loop jbe (bad) movabs xchg (bad) jmp (bad) pop sub (bad) (bad) jo (bad) (bad) jbe (bad) or outsb movabs movsl rex mov xchg test sub pop ficom mov xchg sub mull (bad) cmc rex.WB pushq imul or stos mov rex.RX and fnstcw jp sarl negb mov (bad) and sbb fdivp pop or in xor add rex.WB xorl scas outsb imul pop or in push sahf movsl (bad) mov jmp xchg leaveq addl jrcxz mov pop fsub (bad) loope pop xlat test mov cmp rex.RX pop jb rex.WB lock (bad) sub pushq adc sub callq sub jle and js pop mov sahf in scas test (bad) sbb xchg push shrb (bad) loopne push out xor add fisttpll (bad) je or fisttpll (bad) mov outsb (bad) mov mov cld pushq es sbb rex.WXB fisttpll (bad) (bad) jg (bad) rex.WB push (bad) iret iret fwait jne rex.X fisubr pop movabs sbb movsb xchg je lahf fs push pop fsubrs rex.W or jmp (bad) in int out stos shlb je outsb xor (bad) (bad) add movsl (bad) xor gs rex.WR rex.RXB pop scas in mov (bad) mov movsl mov mov pop stos xchg sub (bad) pop mov lea in addr32 jp jns (bad) jg pushq add sbb (bad) mov hlt (bad) outsl pop out (bad) mov sbb mov adc add (bad) outsl xor xor insl sahf sahf rex.XB (bad) (bad) mov (bad) int3 and fild (bad) xlat pop push callq movslq jbe mov push sbb fildll cmpsb rcll loop (bad) cmc mov out lahf addr32 insl cmp outsl (bad) movsl repz rex.WB retq divl sbb rex.RXB in decl xchg cmp jnp (bad) js sahf (bad) sti adc mov movabs add xchg (bad) xchg ja out movabs mov xchg and mov shr outsl out (bad) and mov sbb (bad) adc int3 (bad) add or insb insb mov jp outsb movabs in xor (bad) pop and (bad) (bad) (bad) rex.B movsb movsb (bad) out sti scas push (bad) loop leaveq or fdivrl jge xchg xchg rex.WR (bad) add sub mov addr32 xchg addl and sbb cmpsb and frstor fdivp mov (bad) xchg cmp test int adc xor test out sahf sub out xchg sahf mov jmpq (bad) xchg jo out callq (bad) rex.W mov jp and rolb mov mov movsl mov jb and sub push sahf (bad) xchg (bad) or pop xchg push testl sbbb popfq lods (bad) mov loop movabs (bad) fiadd jno (bad) xor lahf (bad) sbb mov imul mov or cmp rex.W (bad) loop or mov scas movsl mov cwtl (bad) or outsl jmpq pop cmc adc (bad) test mov (bad) adc stos (bad) xchg movsl mov and shrb pushq xchg rex.WRX jmp movl adc and rex.WRXB mov rex.WB cli pushq (bad) (bad) sahf (bad) mov pop int3 mov mov test cs mov (bad) lret (bad) (bad) add movsl outsb mov lret mov movabs movabs int fwait loop pushq jge rex.WRXB jns sub and ds rex.RX or loopne loopne (bad) mov js rex.WRXB rex.WX add rex.XB loop or adc movabs scas movabs xchg rex.WRXB rex.WR int pop out lods and or xchg sbb (bad) push test lods rex.WX (bad) (bad) out mov (bad) sub fiadd mov sahf xlat cwtl in rcr xchg and mov gs cmp xlat icebp xchg xchg movsl rex.RX rex.WRXB xor (bad) xchg iret ds in mov adc sbb mov pop fcmovb sub rcr adc mov movsb pushq jnp or loop sbb (bad) xchg sub mov or gs stc or int3 loope xchg xor (bad) xchg ja (bad) xlat cmp in xor (bad) (bad) rcl add retq sahf fadds (bad) enterq xchg rex.W fwait fs repnz movslq or jrcxz shlb jle fwait mov (bad) clc jno (bad) jle (bad) lret rex.RB (bad) adc (bad) xor sahf sub add retq mov or sbb insl mov movabs rex.RXB movsl adc imul xchg cmp xchg cltd jno (bad) xchg cmc lahf jmpq out (bad) xor lods or movabs cmpsb stos (bad) data16 lods rex.RXB lods xchg (bad) outsl (bad) ja jbe sub rex.B rex.R callq mov movabs lods sub lret movabs and add mov (bad) addr32 stc and pushq loope mov fdivp mov xor lock pop test (bad) test pop or xchg xchg (bad) repz (bad) cmp outsb (bad) pushq fsub stos lret xchg jbe imul jb out xchg imul movabs out rex.WB sbb rex.RX xchg rex.RXB movsl (bad) clc mov movsb rclb (bad) sbb (bad) shl mov imul pop xor rex.XB (bad) rex.X lock xchg mov hlt and movabs jle xchg rolb push out rex.WX mov rex.WRX (bad) mov or mov cmc pushq (bad) xchg insb smsw cmpl rex.X sbb mov gs stos (bad) mov idivb outsl mov shrb (bad) jae mov sub rex.XB enterq push jnp add sbb xorb (bad) rex lods lahf cmp jrcxz shrb sbb test (bad) rex.R loopne rex.RX (bad) rex.WRB rex.WX movabs cld cmpsb in (bad) movslq repnz add pop cmpsb sbb add sbb jg jno lock rex.WRX lock outsl mov cmp mov mov jrcxz (bad) ja loopne mov cmpsb movsl adc adc adc (bad) add sahf mov fdivrs push rex.WB pop orb xchg pop movsl iret loop int3 jg (bad) fdivrs jp mov xchg mov jbe mov cmpsb (bad) fisub xchg cmp pushq not mov enterq popfq cmpsb jnp and rcr (bad) js insl mov or cmpsb cs (bad) fidivl loop dec sbb and negb lea mov mov (bad) or mov mov add jae out (bad) loopne adc (bad) cmpsl cmp scas sub std sub fs rorb je repz xchg out cmpl (bad) push jg insl nop out lahf mov outsb int mov mov outsb add push mov cmpsb ja adc mov adc (bad) adc negb movsl outsl or (bad) push cmc xor loop movl and fs pushq jb jno mov rex cmp cwtl and (bad) movabs rex.WX jbe (bad) xor outsb jb push mov xor mov and (bad) jle ja loop sbb shll scas rex.RB push test iret imul adc (bad) mov or (bad) and jb rex.W cli rex.WXB outsb movabs mov rex.WRXB (bad) cs rex.W rex.WRXB add fisttpll (bad) mov std adc push test std pop lret pop (bad) je add (bad) fbstp mov mov cmp jae (bad) push xchg jns out mov (bad) stc (bad) es xchg lods out jge sahf rex.X cs mov xchg loopne std push movsl cmp (bad) or pmullw imul loop cmp xlat loope cmp es jmpq sbb sub test ds mov jbe adc mov sbb movsl jno sub int3 fbld pop in (bad) jg (bad) jo rex.RB ss jns xor cltd mov push xlat lea addr32 mov outsl sbbl pop lahf adc and or mov (bad) xorb jg clc lahf sub pushq add out xor jae movsb pushfq sub mov out cwtl (bad) lock pop xchg ja iret rex.X outsl push jge (bad) (bad) lahf push pop addr32 stos pop add out js scas fistpll cli movslq push add loopne mov (bad) or imul lret repz mov (bad) pop xchg ja pushq rex.RX ffreep push enterq lods add xchg (bad) (bad) pop scas movabs sub push sbb fisubrl cwtl adc movsl pop (bad) mov (bad) push or jrcxz or je mov int3 mov jns rex.RXB sbb (bad) (bad) rex.RX or sbb (bad) jle mov (bad) outsb stc (bad) jle movabs cmpsb pushq imul mov out sub and mov lods cs push push jmpq out movsl cmpsb adc (bad) movsl out and (bad) outsl (bad) in (bad) pop lods add movsb cmpsb mov or cmp adc (bad) mov pushq inc fcomi xchg out xchg cmpsl rex push fsubl mov mov lods rex.X cmpb or movabs push iret pop negl mov (bad) rolb (bad) fbstp loope (bad) insl (bad) sub mov add (bad) (bad) cmp cmp (bad) push je lahf and mov imul mov push pop test jl sahf movsb loope int jp (bad) xlat (bad) add (bad) or xchg pop insb (bad) (bad) (bad) retq std mov negl pop lods pushfq sahf (bad) xchg mov adc and (bad) xchg (bad) insl insb rex.WRX (bad) push clc jns loop sbb imul int xlat mov scas sbb fidivrl rex.RXB frstor test cmp mov (bad) cmpsl popfq cmp retq push jo movabs (bad) sub xchg ja cmp xchg mov movsb popfq (bad) mov (bad) sbb sbb lahf (bad) (bad) lock outsl jge xchg mov jae imul stos adc movslq pushq and fsubrs pop push (bad) push pop (bad) rex.XB (bad) and cli mov mov adc cltd mov xchg rex.WR loop cs rex.B rex.WXB (bad) cmpsb in pop cwtl cld pushq jle xor and cmp rex.RXB mov mov stos mov (bad) repnz fdivp pushq (bad) mov clc jrcxz lahf jle movabs js (bad) mov retq (bad) movsl leaveq popfq jbe rorb stos pop mov lret (bad) movsb out cwtl ds pop and incb mov mov jp mov or xor sbb and xor jp adc lods rex.R (bad) repz ss jno stos (bad) (bad) xchg out outsb mov (bad) frstor (bad) fbstp jl stc pop lods sbb loope push pushq (bad) and push rex.WRX ja repz xor jrcxz adc pop ss out movsl xor xchg mov or (bad) mov out sbb ds pushq push fiadd cwtl rex.RB and rex.WB pushfq nop or movsb (bad) test pop (bad) mov fsubrp sub je sub (bad) out int movsb cmp add rorb jp xchg mov out rex.B insb jo pop push (bad) fcomi in jle lahf (bad) (bad) shrb xchg adcb mov divb jo and pop (bad) sti movsl jp rex.RXB xchg pop jne xchg or xchg test cmp insl mov pop (bad) jp retq leaveq sbb mov adc and jl cmpsb pop movsl mov loopne lahf mov jl outsb mov mov xor xchg imul pushfq and xchg xchg icebp movabs je jg sarl cmc adc movsl pop ds ss or pop jg adc loopne xor pushfq sbb callq (bad) movsb sahf je fdivr shl outsl mov xor movsl clts mov movsb jle out lea mov fs rex.R add (bad) in (bad) outsl add rex.R adc je sub (bad) rex.WB rex.RX js,pn mov (bad) cmp ja ss subb or rex.B rex mov outsb (bad) push sbb rex.WXB rex.B jp nop push hlt mov insb rex.X fs mov rex.WXB rex.WXB lahf ficoml rex.WX push (bad) fistl mov rex.WR (bad) loopne and jo outsb lock fidiv movb and std ja and add push jae cmp (bad) rex.WX pop (bad) (bad) stc retq xchg pop sbb loop mov stos (bad) rex.WRXB jo testl out (bad) insb xor in sbb jae pop fidivr (bad) add icebp (bad) outsl xor hlt (bad) rex.WXB (bad) mov cmpsb movsl iret or or add jrcxz movabs hlt movsb mov (bad) jle shlb mov sbb roll (bad) cmp jmpq out insl jmp movslq lret pop rex.WRX repz fwait xchg sti in pushq data16 movabs movsb (bad) lock pop (bad) (bad) scas mov movsb and push movabs rex.XB jrcxz enterq pop test mov enterq mov movsb (bad) xor mov mov (bad) (bad) mov rex.WB xor jb xlat scas movabs or stos pushq (bad) mov imulb movabs jne (bad) out add (bad) jl in adc lods sub or leaveq movsl jrcxz hlt addr32 rclb and loopne mov (bad) movsl rex.RX xor roll pushfq movabs rcrb rclb in jbe and xor (bad) (bad) mov clc movsl (bad) mov movabs je popfq rex.XB mov leaveq ds outsl or or mov push rcrb je movsl int (bad) test loopne test movsl (bad) (bad) cltd rex.RXB enterq jle (bad) shll (bad) sahf repnz xlat loopne cmp (bad) mov enterq (bad) shrl jnp (bad) add lods out movl xlat scas sbb (bad) (bad) mov (bad) (bad) add (bad) push mov xchg (bad) insb xor outsl adc fs mov and or loope loope adc and xchg loopne mov (bad) and callq (bad) outsl fxch (bad) rex.RXB xor retq sahf (bad) (bad) pushfq divl fwait (bad) data16 jae (bad) add js movabs cmpsb (bad) pushfq test movsl sbbl movabs mov jg jle shll ja jp rex.W rex.X mov pop imul in sbb pushq mov fwait sub or pushq sahf movsl fiadd (bad) sar cmpsb je outsl and pop mov subb (bad) in rex.WXB (bad) mov mov cmp mov (bad) (bad) (bad) pushq movabs cwtl jmpq mov jne gs mov adc or movslq xchg and sahf mov stos rex.W (bad) cmpsb xchg (bad) mov (bad) sbb movsl mov mov sbbb (bad) rep (bad) movabs or out push std (bad) fimul push xchg mov jl out cmp movl andb cli add out xchg out rex.W sbb data16 insb jge outsl (bad) retq (bad) jbe and mov xchg (bad) (bad) je fidiv repnz movsl fiaddl jrcxz rex.RB rex.B mov in es xor xchg loope add insb lret (bad) (bad) (bad) cmpsb mov cmp movslq rex.R mov jge imul or (bad) or add adc gs stos xchg sbb (bad) (bad) (bad) in (bad) rex.RXB cli (bad) hlt sub leaveq loop xchg (bad) xor stos (bad) movslq rex.WRX cwtl movslq xchg (bad) lock xor mov pushq cmpsb rex.WRB rex.W je pushfq or sub cmc mov popfq (bad) movsl sbb imul mov lea std lock in xchg fstl movabs jl pop rex.WB enterq (bad) add jo je in jle (bad) (bad) (bad) jmpq ss add mov rex.X movsl vmwrite rex.WRB std pushfq mov test jno rex.RXB (bad) rex.WX (bad) out enterq pop mov es in rex (bad) sbb outsl fisub pop movslq xchg jne and fisubl sahf push rex.WRX (bad) mov push xchg movsb push adc mov pop loope xchg xchg mov mov imul (bad) jae xor (bad) jl fstp mov sbb sub ss pop (bad) cmp cmp xchg mov jmpq (bad) (bad) and adc sbb (bad) mov insb jbe pop addr32 lea sbb clc push add sahf pop mov pop lahf jl jnp and xchg mov (bad) rex.WR test rex.WR xorb jl mov mov (bad) jb or sub shlb insl mov sub pop (bad) lret out adc sbb callq repz mov adc jnp (bad) jmpq rolw jg rex.WRB (bad) out add pushq mov jb (bad) pushq lret or jle (bad) mov xchg lods paddq nop (bad) mov pushq push push movslq lret and adc (bad) out jp mov mov lock out xor movslq rex.WXB repz sub movsl or mov lret movabs test rcr jnp and lods faddl jmp (bad) out (bad) mov push fs cld (bad) data16 adc (bad) xchg rex.WRB loop movabs and rex.WXB in cli sub fs je (bad) (bad) (bad) lods jg shrb testb jp add movsl iret jle (bad) rex.WX (bad) test mov or rcr mov mov mov clc (bad) mov xchg std insb mov test lods pushq test rclb test rex.RXB rex incb xchg sbb lret mov mov rex.XB data16 iret push fcoml movsl cs nop rex.WX (bad) pop (bad) movsb sub mov mov (bad) cltd and fcoms jle and add (bad) mul xchg out (bad) mov rex.WRX jle jle jb pushfq or jl jb fs (bad) xchg loop movslq mov insb data16 lret jbe fisubl mov insb fwait add sub data16 add jmp lods (bad) mov push add imul xchg rcll sub idivb or loop scas sub or mov mov lods pushq fidivr int retq (bad) out add push jg cmpsl movabs xor mov jle movsb lret iret test test outsl mov movabs mov and (bad) (bad) (bad) mov iret cmp mov xor xchg fidivr int3 movsb (bad) pushq ds mov cmp lahf movsb leaveq mov or decl scas nop adc mov pop in sahf movabs jg jbe add retq int3 pushq movsl int scas (bad) sbb sub (bad) (bad) pop add push jno rex.WRX fcmovb and (bad) sub ficomp jo imul ds ss retq int xchg jno or lods lock addb add (bad) movsl ds scas outsb subl rex.WRX mov mov (bad) movsl xor insb add lods stos hlt (bad) sahf leaveq repz add rorb test mov test push sbbb xor or hlt movsb jp rex.WX icebp retq rex.WXB mov pushq (bad) cmpsb mov mov mov jo pop lods jmp (bad) rex.RB xlat sub (bad) cmpsl lea movsl xchg mov lods fild rex.WXB or cmpsb fbstp (bad) mov shrb test add lock fsubs push and (bad) sub lahf mov cmpsb pushq xor lock sahf (bad) data16 push test rex.B (bad) retq pop lods jmp mov mov imul ficom jg shrl jbe mov or jbe push je ds ja pop pop loopne cmc cmpsl sub loopne mov pop enterq pushq rex.RB xor or xchg rex mov xchg out or ficomp (bad) imul (bad) loop jle test gs xchg xlat out (bad) pushq cltd lods iret insl outsb jo jbe mov cmpsl xchg jle lock jge mov push mov (bad) mov lret rex mov stos xor pushq jo lods pop loopne (bad) adc add xor subl psrad pop jg mulb outsb pop jg sahf (bad) (bad) test and xchg test out (bad) (bad) fsubrp (bad) imul or (bad) lcall xchg (bad) pop sbb (bad) xchg mov xchg mov sub cmpsl lahf retq pop xchg push stos sahf (bad) sub cmp rex.RXB cmp rex.WRB jmp fbstp js rex.RB jle data16 loope es movabs mov push rex.WXB (bad) sbb pop andb or or cmpb out mov rorl loop subl lock repnz mov mov lods mov repz xor jb addb and lahf mov rclb add paddsb mov xchg pop (bad) adc pop stc movsl sbb jbe loop xchg and xor in or hlt (bad) (bad) and mov xchg add cli cmpsb pop mov movabs (bad) (bad) movsb ss enterq scas jbe push jo addr32 fidivr outsb (bad) push movsl add es xchg repnz outsl jnp and xor pushfq ja mov loop (bad) pop adc adc and pushq mov cmpl xchg ja mov xlat mov sahf (bad) sub push xor lods sahf loopne or or mov adc mov or mov addr32 jrcxz jbe rex.WR ja pop enterq sub (bad) rex.WRB loop cs (bad) (bad) test jb pop out rex.WRX adc orl mov adc (bad) and pop (bad) xor lock pop rex.X movabs out (bad) rex.RB movabs cmpsb or (bad) nop sbb (bad) sbb callq movsl xchg jg xchg xchg mov rex.RX (bad) add es adc (bad) jbe mov rex.WXB fs sub mov and add mov hlt mov mov jrcxz cmpsb sub push xchg (bad) jge mov loop mov add icebp je scas movabs fistpll lods push gs lret push fbstp movsl stos (bad) sub push adc or mov sub xchg or pushq cmp pushq cli sbb sahf stos movsl imul (bad) test (bad) pop insb jnp cmp mov push ds sub and loope stos sbb jno test adc jg cs (bad) flds fbld jb rex.RX int3 pop jae jp sbbl rcrb cld addl out xchg loopne mov sbb pop mov sbb jmpq (bad) and pop cmc ds out lods adc cmp mov jne jb or pop push and (bad) adc xchg jrcxz insl (bad) cmp (bad) mov or cmpsl sbb adc jno out adc in xchg or pop pushfq movabs (bad) mov cmp (bad) cmp (bad) push (bad) (bad) sub addr32 xchg cmp or mov movslq (bad) and outsb cs pushq (bad) push lret (bad) (bad) movsl test loopne rex.WRB movsl (bad) pop adc js cmp ds (bad) jns (bad) jrcxz (bad) ja je int (bad) cmp scas mov (bad) rex.X cmp mov mov cmp jle repnz mov jle in (bad) enterq pop incb mov movsl cmp (bad) or sub cmp scas (bad) xchg stos rex.W in loopne and retq orb mov or movabs scas jecxz mulb jl rex.RXB gs (bad) cmp sti ficomp (bad) out (bad) (bad) push lret (bad) jge cltd rclb push pop in ja,pn movsl push (bad) leaveq in rex.WRX popfq std loop or std mov data16 (bad) pop mov cmpsb sahf sub cmpsb fbld ror shlb sahf hlt xor pop jns sbb xchg insb xchg negb jge vandnps and jp xchg rex.WX cmpsb sub clc jno adc (bad) pop xchg pop add cmp fiadd push cmpsb js iret jbe out setns or push jae rex.WB add retq nop sbb (bad) fistp fwait je fidiv (bad) test pushfq in lahf sahf cmpsb out jmpq rex.W loop js xchg (bad) mov fimul clc fcomip callq out pop fisttpl icebp retq or add cli mov in mov enterq (bad) mov pop insb je cmpsl mov out cmp add int add xchg nop retq mov pop and (bad) adc push mov xchg (bad) mov cli sub mov callq pushq rclb cmp outsb sbb jg test sti repz sbb es push imul fistpll or sub jno push js movsb xchg mov je rcrb mov mov sti cmc jle imul cmpsb stos mov icebp in or pop insl pop repz sub cmp stos test fsts sub (bad) jg int3 push and (bad) stos mov (bad) mov movsl xchg cltd mov and cmc push (bad) (bad) add movabs fldcw xchg icebp loop in xchg movabs lahf push jp lret mov in pushq sub and test movabs rex.XB xchg adc sub ss jle (bad) jl rex.X pop sbbb ja iret lret setl outsb mov jle cmpsl outsl imul lret add rex.WR sbb xlat movabs or adc (bad) lods fbstp test jle pop sub pop retq mov (bad) mov fidivrl mov pop cltd mov sahf roll mov (bad) mov in or mov rex.W mov sub jmp (bad) jle mov pop and test iret and or repnz jle pop jle movhps andb rol (bad) lret fistpll loopne xor (bad) mov push loopne mov mov loopne cmp mov cmp movslq add pushq mov jl pop fimul add pushq fisttp movsl mov rex.WX rex.RB fisubr mov fist imul xchg test adc or sbb pop loopne mov jb sbbb test cld (bad) (bad) (bad) mov popfq pop ja cli pop (bad) movsl (bad) and pushfq pushq jb cmpsl jnp rex.WRB addr32 retq cltd jnp sub ficom or xor jno sbb rex.W cmp cmp loop sub (bad) cmp loopne add jae adc retq mov in pop test fnstsw sahf mov (bad) sbb sub xor lahf sub push lods xor fxch ss outsb out vandps jno in pop xchg mov mov hlt pop in movsb fstpl je sub int adcb mov pushq add scas cmp icebp rex.WRX stos sarl movabs push loopne imul loopne pop jge cld movabs (bad) incl (bad) (bad) lret xchg add (bad) iret (bad) xchg shl out xor rex.WRX cmpsb pop jnp xchg pushq cs (bad) adc pop lret test xchg (bad) (bad) adc jno jo movhps and jl fnop sbb test faddp adc mov or je (bad) sahf and sbb jle (bad) mov jp insl push (bad) xor pushfq (bad) je retq divb callq sub pop movsl (bad) cmp rex.WRXB movabs lods imul push sbb sbb lret jp pop pushq imul sahf mov push test callq jle cs jp adc pushq movsb (bad) rex movb (bad) (bad) int3 (bad) xchg negl fiaddl sub (bad) shrb mov test hlt movsl (bad) or rex.WXB or loopne cmp mov leaveq enterq mov ds rex.WB or mov rorb jmp addr32 out (bad) rex.X stos cltd rex.RX pushq sahf (bad) (bad) loope mov push retq loopne pop rex.X rclb (bad) loopne (bad) xchg or rorl lods movabs xor cld rex.W sub or mov (bad) sub movsl movabs mov (bad) and adc out in rex.B mov rex.WX movsl int xor sbb callq test jo (bad) js,pt ja rex.XB adc rex.WRXB jle sub mov sbb and xchg (bad) imul imul jae jmpq mov rex.B (bad) xor callq xchg pushq pop and (bad) movabs add movabs hlt rex.WX pushq xchg cmp add lods (bad) addb pop (bad) sub mov mov jo (bad) icebp mov mov iret enterq clc iret mov sbb mov movabs (bad) gs in and stos loope out insb movabs xchg cmpsb adc stos jns (bad) movsl (bad) (bad) pop fsubrs bnd fidivrl mov xchg rclb sub fild adc and and xchg push mov (bad) push adcb ficomp stos mov jg scas out fs pop pop xchg std (bad) insl outsl and rex.RXB testl icebp xchg out pop pop (bad) cmp (bad) lcall movslq sbb jns outsb mov fidivr out cmpl outsl js (bad) and adc enterq (bad) jb jbe rex.W and rex.WXB notl es pushq adc orl rex.WRXB jle callq rcr or adc mov mov push scas clc cmp mov mov or loopne cs jo adc stos leaveq add push lahf mov loopne xchg mov sahf push jbe or jae retq enterq movabs add je (bad) bnd mov rex.WB jb int jg mov hlt test fs pop mov and mov je jb fisubr movsb movabs test xchg xchg (bad) pop pop (bad) outsb movsl xor mov sub pop mov mov nop fld adc or ffree mov (bad) retq add or stos xchg jbe rex.R push (bad) cmp xchg rep movslq pop imul movabs imul sbb and (bad) sbb jrcxz push cltd sbb scas (bad) adc (bad) cmp xor sahf (bad) rex.WB out iret mov fldcw and xor dec (bad) (bad) sbb je rex.WXB scas outsl sbbb (bad) mov outsl sbb pop cwtl or add rex.RB rex.RXB add imul pushq mov lock es in and je movsl xchg in or lea xchg and rex.WXB push sub shr (bad) mov add imul rex.XB pop jmpq rex.WXB in cltd rex.WB out gs scas mov sbb lret mov rex.B rex.WRB cmp cmp (bad) pop movslq stos xchg mov cmp mov movsb xchg xchg xor rex.R add sahf cmp sti out test mov imul fwait mov repz rex.WX data16 in hlt sub int3 (bad) in loopne int scas (bad) (bad) jno jmp movslq pushq (bad) leaveq sbb xlat rolb mov cmpsb gs (bad) or mov mov movabs popfq ss (bad) xchg repnz test pop (bad) int3 push fsubp mov movabs sub (bad) jge fcompl pop rex.WB movabs movabs push sahf cmpsb test xor pop and sahf fstpt fiaddl fdivrs bswap rex.WRXB cmp (bad) movsl movsl (bad) push adc clc in and pop mov clc mov sbbb jg out scas testb (bad) jbe scas mov rex.WRXB and hlt mov sub cmpsb rex.X test mov sbb add popfq stos lahf push (bad) fsubrs movsl and movabs clc movsl imul cmp mov fimul push ror rex.WRX and mov out movsl (bad) (bad) push pushfq lods outsb and mov or pushfq rex rex.WRXB test out rex.WRX add fsts pop outsl rex.WRXB sub rcr or decl sub rex.WRX (bad) xor movsl iret pop jl je outsb (bad) mov sarl (bad) push out and mov repnz popfq addr32 adc sbb cmp addr32 loop bnd (bad) mov xorl rex.X repz add mov (bad) (bad) cld clc leaveq (bad) (bad) sti lahf addr32 mov (bad) clc xor mov sub xor movsl stos vmovdqa mov cld and out pop outsb rex.RX sbb fild mov pop loope rex.B push (bad) test out cmpsb mov lock repz cwtl sub sbb out fsubrp add (bad) callq mov (bad) pushq cmp pop mulb mov and xchg shrb (bad) leaveq movslq mov adc je cmpsl fild add sahf push and sahf add out jg rex.B ja,pt movsb iret sarl loopne (bad) ficompl fidiv out mov sub (bad) rex.WRB xchg mov sahf out xorl sahf cwtl xchg pop mov (bad) movsl shl rex.XB fisttpl add (bad) imulb int3 add out add std cmc lods cmp scas fstpt outsb rex.WXB xor insb fidiv in lea je xor imul jne in sbb movsl mov xlat jg mov in xor (bad) (bad) rex.WX pop cmpsb sub enterq mov jrcxz (bad) fsubrs sbb jge (bad) jne fadds (bad) out jne out fistp retq enterq (bad) (bad) movsl jg adc mov sbb add jmpq pushq add (bad) popfq pushq xor jbe mov cmc jmpw sarb push fmul cli pop add push fs sbb in mov movabs xchg fstps jle (bad) mov (bad) shr fsubrs add mov mov adcb push mov xor and (bad) ficomp xor fbld popfq mov sbb out loop sahf outsl mov (bad) or (bad) push mov (bad) (bad) add add jg add xchg mov (bad) xor jl (bad) mov cmp outsb outsb movabs pop add push xchg lods mov cmp test and xchg (bad) rcrb mov and lcall (bad) movabs rex.W mov adc jp movslq mov js (bad) mov cltd js sahf push pop rex.WRB xor es sahf xor pushq je loop out sbb rex.WB (bad) xchg fwait (bad) notb (bad) adc add mov scas stc ja mov pop lret rex.WR mov rex.RXB clc pop out movsb fs jrcxz in or negl out sub pushfq fisub callq std rex.WXB (bad) stos iret rex.WX gs or pop retq loop js lock fmul cwtl sarl pop pop xchg retq (bad) push andl ja sahf xchg xchg mov mov nop xlat cmpsl imul mov insb out (bad) mov (bad) pop (bad) (bad) jrcxz xchg jmp shrl movabs sahf add (bad) lock movslq out adc rex.W mov jbe xlat rex.RXB loopne subl loope cmpsl xlat not jb lahf lods and movsl cmp cmpsb mov fnstcw jp sahf movsl and mov add or cmp es jae jle xabort add mov pop fwait lods js addl pop out rex.RX (bad) test mov xchg (bad) cmp scas and (bad) mov retq xor fidiv and cmc (bad) jg movslq stos xchg rex.R rex.XB adc mov cmp movabs outsl jnp rex.RB fs retq (bad) lods movsl jg push test test jrcxz rex.WXB repnz lods cs mov data16 or cmpsb divb addl (bad) (bad) movabs repnz je rex.RX lock repz or xchg lea rex.WXB add (bad) (bad) adc test gs xchg fs scas mov xchg (bad) lahf (bad) int mov adc sbbb rex.W sarb mov outsl xchg cmpsb gs mov (bad) jbe (bad) lret out movsl (bad) rcll roll fndisi(8087 rex.WRX icebp rep xchg pop jmpq mov (bad) mov jmpq (bad) fbld (bad) imul xor movabs rex.RB repz jo rex.WR rex.WRXB rcrb sahf lcall (bad) jno (bad) xchg rex.X lock (bad) (bad) jrcxz addr32 pushq xchg mov in xchg shl xchg add cld sbb ss xlat scas push (bad) adc cltd (bad) out and (bad) pushq cli in int3 pop pop int lods pushfq fbld jne fcompl retq outsl xor stos (bad) jb cld data16 jle (bad) lret pop adc sbb mov in scas or pop sbb lock (bad) jno adc movabs fist je sub test pop xor rex.XB rex.WX (bad) lods jns rex.RB jne jns jge rex.WR xchg xchg add mov add fisubr (bad) (bad) mov jno mov loop (bad) mov mov lea jns jb jbe adcl push mov (bad) (bad) rex.WRB rex.XB fild (bad) lock push movabs (bad) mov sub cmp rcrl pop ficomp or (bad) rorb scas jbe jmp shll (bad) xchg or and lahf imul (bad) pop or (bad) data16 pushq rol pushq xchg (bad) or mov or addl (bad) lods mov rex.WR btr popfq rex.WRXB rolb nop leaveq push fisubr int mov sub fidiv xchg add sbb sub mov fldl jmp fbld xchg fldenv mov rex.W (bad) (bad) mov rex.WRX imul fwait test imull jo repnz mov sbb test mov (bad) movabs outsl jae (bad) mov int3 pushq movabs lods movsl shll (bad) mov outsl or (bad) rcrb shl outsl data16 pop xor rex.RB (bad) rex.W movabs sub mov movsb cmp add rex.WRB es rex.WRX lods out fisttpll repnz andl repnz cmpsl cmp sub push mov outsl shl add cwtl outsb int fstps add (bad) (bad) mov icebp mov jo rcr mov movabs lods rorb insb (bad) pop jns shll (bad) out in jl (bad) fs rcrb test rex.X mov jo (bad) ds jnp repz or jnp out lods pop lods fs out insl sbb shrl ljmp xor outsb mov push mov add sub sub (bad) mov rcl fnstsw push jl mov lods and and add out fmull mov rex data16 stos insb pop (bad) xchg xorb add out int3 xchg mov pushfq jnp stc loopne fdivrl lea retq and decl clc xchg callq rex.WB (bad) mov test gs mov movsl jo (bad) jo pop (bad) and xchg pop (bad) or stos popfq data16 push int and mov scas jbe rex.WR pop xchg (bad) test (bad) push enterq adc (bad) insl (bad) jbe add addl movslq xchg sbb add test movabs sar (bad) fisub shlb retq (bad) cmp fdivp jbe (bad) and add cmp jmpq mov testb fwait adc mov jmpq cmpsb mov or test cmpl lods outsl mov test es mov sub xchg mov lods mov rex.WRXB rex.RXB rex.WRB fisubr (bad) mov (bad) xlat (bad) test repz sub clc mov pushq (bad) (bad) (bad) (bad) jge addr32 scas sbb cmc sub loopne jbe js and mov movsl sbb pop psllq (bad) (bad) xchg and mov xchg (bad) sub outsb mov push loop test rex.X js rex.W insl pushq xchg es in insb cli xor cmp pop ljmp cmp and adcl gs outsb popfq and mov stc or jbe sahf insl stos scas movabs in cmc xchg (bad) test out xor add out jge jg mov callq mov subl incl lods stc (bad) int push stc (bad) xchg insb sub pushq rclb nop je adc repz sti loope decb (bad) rex.X jg adc or mov xchg clc test xchg rex.WXB mov loop out (bad) test fdivr xchg (bad) andl mov test rex.X callq xchg mov mov incb movabs clc and es in in rex.WX std in sti orb (bad) adc and or sahf cs pushfq adc stos lods fwait andl (bad) mov pop mov adc fnstenv cmp repz (bad) pop movabs (bad) (bad) lret imul ja nop (bad) movabs xchg xchg scas add insl push sahf add rex.WXB callq int3 mov xchg jmpq sahf mov movsb retq lahf jp ds mov andl cmp movslq mov jmp or cmpsb adc cmp jl push xor leaveq xchg in lret insb push lock movabs jl pop sbb (bad) cld sarb add add lods sahf out idivb or sahf xor pushq mov mov hlt stc test in fbld je jle (bad) cmc ds pushfq or xchg sbb enterq adc stc jle stos mov js (bad) jbe mov jo scas cbtw (bad) icebp retq fs ss (bad) stos mov add lret sbb mov outsb ficom or mov mov movabs sub xchg pushq repnz (bad) (bad) jbe mov leaveq (bad) push (bad) adc fdivl add mov cs and test out sbb loopne in pop rex.W pushfq fistp mov push mov mov xchg and movabs shrb in jae jle enterq rolb (bad) in jmpq mov rex.RXB rcll push add es movsb lahf (bad) xchg mov sbb in cmpsb es or je movsb rex.WRX sar add cmpsl rex.RXB xlat sbb mov movabs (bad) adc fwait sbb jl sbb enterq pushq cmp xor test mov jg (bad) push enterq in (bad) mov in (bad) (bad) mov push jge or fs rex.XB ficompl outsl and jo and outsb add xchg jbe loopne push (bad) (bad) (bad) imul (bad) sub shrb repnz xor rex.WX in lock gs repnz in mov js pop std jne pop js mov loopne lret gs jl lock xor int (bad) and es mov (bad) fwait rex.XB (bad) callq out rex.WRXB jp rex.WX lret es ja fcmovnbe movabs mov movabs jne and rcl lahf jl jp mov or cmp mov mov outsl mov lods je rorl mov (bad) icebp (bad) cmc mov imul pop test xor mov jo and (bad) (bad) mov cmp je (bad) out pop neg pop shrb fmul sbbb (bad) int3 test mov stc rclb push rex.WB rex.R sbb (bad) pushfq pushq push rolb push jo test xchg movabs jo (bad) testb notb (bad) jno pop sarl rex.WRB rex.R pop mov imul (bad) (bad) data16 lret cwtl enterq jrcxz stos sub out stos adc rex.WRX and mov fdivrp movabs (bad) insb icebp fmulp in gs and in stc add xor mov (bad) (bad) loopne in rex.XB ds decb test push and ss test mov fist lret (bad) cltd frstor pushfq rex.WRB or mov test fwait xor and test mov rcr cmp mov jne or movabs mov xchg pop adc insb scas push fldcw sahf mov jp pop (bad) (bad) mov pop (bad) lret (bad) cmpsb lods add or cwtl (bad) pop movsb (bad) sbb lods movsl outsl (bad) data16 jne movabs (bad) xor in mov jmpq rex.WRXB in pop xor scas fwait (bad) test fisttp cwtl mov and jrcxz or fs and test jg (bad) (bad) rex.WB (bad) sbb push xor scas movabs pop fbld or jle jnp cmp cmc mov movabs add movsl fcmovbe ficom fildl fidivl movabs rex.WXB insb mov vpmovzxwq rclb xchg sarb lods sub push movabs ffreep clc mov xor rex.WB rex.RX fcmovnb jne in (bad) je rex.WXB rex.RX jae pop repnz ja movsb adc xchg add test sbb leaveq pop mov out push xor sub imulb lahf cs xlat (bad) nop lret xchg push sub jne rex.XB rex.WRX xor xchg in hlt out movsl (bad) and or lea setnp pop (bad) or cltd sbbl jrcxz movsl pushq pushq jg in outsb pop jmp out mov psubusb jae jg mov xchg fist and pop pop enterq and pop test sbb fbstp rolb gs mov fs mov xchg mov pop (bad) or lahf scas adc xchg push movabs insl in xor rex.B cwtl rex.R mov popfq sbb (bad) rex.R fcomps stc pop subl enterq adc mov push scas mov mov xor sbb ds rex.WB testb incb lahf and retq jl mov rex.WB roll jnp lods out stc (bad) or mov and (bad) enterq add fimul mov mov sub ja (bad) int push pop jge test xchg (bad) fimul ja cmp xchg push orl fsubrs repnz rex.RX (bad) xor test (bad) xor (bad) (bad) xor pushq pop mov pushq (bad) add jg xchg pushq (bad) jnp imul pop test xchg popfq jb adc subb adc scas movabs pop (bad) loopne mov mov or and lret mov sbb rex.RB rex.WX sbb movabs (bad) xor cltd (bad) (bad) mov or scas addr32 cmp mov out test and test lahf rex (bad) rex.RB mov pushfq nop stc mov (bad) mov lahf push rex.RXB and push cmp add and decl lods rex.RB rex.RX scas and pop sahf (bad) movslq pushq fsubs (bad) mov movsl (bad) je rclb fadd lods cld sahf sbb sub jae jno loopne icebp xchg lock pop add push lock sahf js lahf data16 mov faddp (bad) pushq test (bad) (bad) or es repz rex.WRXB in cmp rex.RB (bad) and xchg rex.WB cmpsb lret and (bad) test movsl rex.RB fadds and stc in (bad) (bad) icebp nop repz mov sbb (bad) (bad) (bad) (bad) or xchg test jrcxz cmp mov sub rex.RX movsb (bad) rex movabs (bad) pop cmp jmpq pop gs outsb rex.X xchg xchg pushfq jl shld (bad) cli sahf test sahf (bad) clc test fs (bad) in (bad) mov xchg lods jg shrb and imul (bad) scas movabs pop movsb std pop fxam cmp (bad) jne (bad) mov movb mov gs sub mov rex.WR pop stos pop (bad) test sbbb cmp sbb movsb and and xorb and (bad) mov and and xchg (bad) je (bad) insb roll (bad) mov enterq insb loope sub rex.B sbb xor sbb imul adc (bad) pop mov jne test (bad) hlt and icebp loopne cmp movabs jo scas (bad) rex.RB test mov cmp (bad) sub loop insb icebp xorl mov pushfq scas stos loopne scas rex.WB jb jle flds cmp (bad) xchg ja je js jno fimul rex.WR rex.WR rex.RB out imul and push es loopne outsb (bad) jo lahf loope imul ja pop jbe retw int3 rorb xor sub sahf loopne data16 stos rex.B jae pop (bad) lock movsl xchg xor rex.R lahf rex.X repz and stos outsl fsubrp sub cs (bad) and in cwtl retq rcl ss flds jmpq iret lret xlat stos loope pop mov jle loop rex.RB sbb and cmpsb jrcxz rcr test push (bad) mov loop xor lods (bad) cmc (bad) pop xchg mov in rex.WX add sbb loopne mov gs movsl pushq fisub out test out movslq pop lea xchg jle pushq sarl ja and mov xor fbstp jle in hlt fidivr fcom mov jle jmp outsb fcoms ja es (bad) cs in ja adc cmp js fdivrs sub mov cmp repnz cmc (bad) pop xchg (bad) mov xchg or pop rex.RB mov lods mov cmpsl pop add rex.WB rex.WX push xor xchg xor cmpsl sahf rex.WRXB (bad) sub es rex.RB nop cmpsb sub movabs mov (bad) cmpsb push add mov jnp pop (bad) adc mov scas cli adc outsb jrcxz xchg jmpq xor mov (bad) or cmpl shl imul loop callq ficom mov cli popfq (bad) and enterq int3 out int3 div pop sub mov pushq sbb lea xor cwtl mov addr32 movsb out pop test stos and add xchg fidivr adc sub xchg rex.WRB cltd rex pop adc sub (bad) movsb outsb add xchg out stos in in repnz add out rex mov jl sahf bnd xchg movsl and mov movabs pop sub or in enterq rex.X xchg xchg test (bad) mov (bad) fildll out add (bad) fcomps jg pushfq outsl or in xchg (bad) jae xchg shll (bad) outsl lods sub push rorl pop std mov pop (bad) negl rex.XB stc sub jo incl pop std packuswb in add ds divb xchg lock (bad) (bad) out movsl sbb mov push rex.RB movsb mov nop or stos lock xor fmuls sar cmp mov pop and mov sar and iret loope or or movl (bad) out (bad) rex.XB fwait add xlat std pop in movsb out (bad) sbb (bad) cmpsl mov pop or movslq movsl nop mov sub fisub or outsl and out rex.WXB repnz movabs retq (bad) mov mov fs out or adc test (bad) lret add rex.WB test int3 adc rex.WRX xchg rolb retq or adc in int3 movsl (bad) jp loop out mov movabs pop rex.WB rex.RX movabs loopne cmpsb loope mov fimul sub jge cwtl mov in ficomp ss mov sahf stos mov cmpsb add and test jo movabs fnop (bad) xor adc and and in mulb lret xor enterq in xchg xchg in mov sahf cmp mov (bad) (bad) pop xchg (bad) (bad) outsb (bad) dec mov (bad) jl sbbb xor add mov mov sbb cmp pop or movsb outsl adc sub outsb mov mov imul nop or xor enterq out (bad) rex.WXB rex.W sahf cmpsb iret out movsl or adc rex.R (bad) clc pop js (bad) movsl add cmp outsl adc or mov jp sahf lret enterq jo,pt mov sbb mov imul gs mov sub (bad) mov rex.R ss rex in nop xchg iret or rex.RB jp testb cmpl lods test data16 xchg in pop rolb cmp and lock test leaveq jo (bad) pop rex.RXB cmpl mov (bad) jb mov pushq add lock mov xchg in cmp movslq mov and mov (bad) rex.WXB and retq insl std mov mov xchg jle add jae mov (bad) mov (bad) ljmp (bad) (bad) callq outsb sahf xor cmp clc jb push insb mov jmp (bad) (bad) addr32 rex.WB jae sbb mov mov lret incb adc cmpb in mov movabs in mov and out (bad) rex.RXB mov cmp cmp fidiv push test add pushq (bad) outsl (bad) jo movabs (bad) jp,pn adc adc fldt retq imull cmpsb pop stos fwait lret add out rex.WX add decb in loope rex.WX in fmuls mov movsl hlt int push (bad) clc add test or imul rex.WXB (bad) adc mov (bad) jg fbstp jle iret or rex.WRXB or shr shlb add cmp fiaddl jb enterq xor loope iret and cmp ds jg jrcxz (bad) and and xor sub jg xchg lock test movabs (bad) gs (bad) mov pop sahf push fidiv outsb and cmpsb mov rex.W jg retq (bad) rex.W popfq test fild enterq mov (bad) addr32 and and hlt hlt rex.WRX vcvttsd2si fnstcw shll jae cmpsb test rex.WR imul and pop repz rex.X mov fsubrp mov and addr32 mov test mov rex.XB pop adc sub cmpsb and jle add data16 xlat rex.WB loop jmp jle movslq lcall lret pop incb and loope add loopne pushfq (bad) fsin mov movsb out mov pop cmpsb shlb jmp or pushfq ja pushfq out mov add (bad) repnz mov loop or icebp test retq sahf mov lret in pushq stos imul (bad) rex.XB (bad) (bad) icebp jrcxz scas adc fwait pop xchg push (bad) or jns (bad) mov lret cltd xor fistl (bad) je and ficomp movsb movsl outsl xchg pop push xchg lods lods test outsl pop fsubp movsl xchg adc jbe (bad) ss push xor (bad) mov mov enterq cmc sub movabs fildll jle or pushq sbb jg insb adc fdivl stos ficompl movabs push and (bad) cmp in (bad) rex.X int3 sbb (bad) repnz pushq mov pop rex.RX rex.WRX ds or addr32 push and push and sahf push outsb outsl mov enterq in repnz xchg cmpsb or subb add sbb rex.RX js pop sahf imul add stos jle jg lock mov in xor push (bad) sub rex.R je icebp ds (bad) sahf (bad) repnz loope mov (bad) pop push sbb xchg and (bad) pop mov rex.RXB jg shrb or rex.RB outsb out sub fmul imul sti (bad) imul vpsubd mov (bad) sub sub adc mov xlat jrcxz icebp sub cmpsb lods mov (bad) cs enterq retq test enterq in jbe adc jle cmp enterq jbe or sti pop repz jae mov jmp xchg rex.WXB lret add shll out stos ficoml (bad) mov lods test loope out shrb scas rex.W rex.X or xchg fistl fsubl ficomp insl or mov add (bad) pop addr32 movabs pushq loopne mov cmp and add iret movabs test iret jae loopne insl test callq lock xor loopne lahf and lret (bad) lret xor cli (bad) sub rex.WRXB scas pushq pop push jge lahf test stos add jo outsl cmpsb jle push cmp sub gs rex.WRXB fcomps jb pop jg movsl rex.RX imul (bad) and rex.WXB rex.WXB rex.B add test (bad) loope repz adc push in sub fldenv mov sub sbb fstps (bad) xchg and lret sti xor loop or sar imul jae mov xor (bad) (bad) movslq test rex.WRB mov andl xchg mov jbe mov jae (bad) mov jno lock sbb pop mov fidivr sahf mov mov mov xor (bad) add ds mov push push pushq (bad) mov mov add push out (bad) int test (bad) mov (bad) pop adc push and cltd mov int (bad) jg loopne ljmp (bad) fbstp loopne (bad) mov movsl int3 push loope push cmpsl lock fildll cld (bad) rex.XB mov jae sbb sarl cmpsl mov orb scas and (bad) jbe movabs repnz std loopne mov cmc scas xlat adc pushfq test test and lahf (bad) mov adc and (bad) lea int (bad) sub pop movabs pop mov fisub xchg (bad) mov xchg add rex.RXB (bad) es (bad) hlt xchg movsl cmc sub push rex.WX out (bad) rex.WX (bad) fs out out and add jns scas and or in (bad) (bad) stc neg xchg mov and mov mov jg jbe movsl jl es and (bad) outsb (bad) inc or or sbb mov xor out or (bad) (bad) (bad) adc (bad) lock test js movabs stos rex.RX mov (bad) xchg jo callq adc push mov (bad) es iret (bad) or (bad) andb sbb (bad) leaveq or sti (bad) lahf sub stc add mov out shrb out push ja repnz push rex.RX cmp mov mov jle fnsave retq testb pushq mov adc cmp lock sub xchg sub and and test cmp incb xor in clc orl out mov adc in (bad) mov (bad) xor push or mov lret mov rex.RX js or add lahf rex.WXB mov imul (bad) pop sub loope push pushq and sbb and and (bad) test lock mov sub cmp retq or sahf cltd adc ds fisubl icebp fist retq shlb icebp fsubs rex.RX data16 cwtl (bad) addr32 movabs jmpq movabs rex.RX pop or or sub popfq loope cmovbe (bad) loope loop test (bad) movsb jrcxz out imul lock js scas fiadd adc mov add add pop or rorl loope scas lret callq movsl jmp callw (bad) (bad) movabs xor mov in sarl movabs test pushq loopne xor pop sahf (bad) retq pop (bad) nop fbstp jnp retq adc rex.WXB and xor cmpsl pop cmp movsb (bad) fbld movslq movabs pop xorl (bad) (bad) (bad) mov rex.X adc (bad) jae iret out rex.X jmp movsb (bad) xor rex.WRX lods push pop std mov (bad) lret mov adc je cmp mov pop stos lahf xchg je mov rex.RB xchg cmp jg sahf retq add sbb movslq movabs mov fisub or push (bad) (bad) fisub jnp sub mov lea movabs mov jmp sahf movabs add and adcl (bad) rex.WB pop rex.XB retq movsl jne or lock xchg in pop rex.RX movabs cmp scas movsl mov rex.B rex.R mov scas flds rolb andl repz (bad) loopne cmp push mov test stos fcmovb pushfq xchg ficomp (bad) mov movabs addr32 retq (bad) mov iret out cmpsb (bad) jp mov pop fdivr jp and mov sahf xchg rex.WR fwait fs data16 (bad) data16 mov sub ljmp jae (bad) (bad) sar sahf test sub div jb push shrb test mov rex.WR rex.RX js mov jbe clc in addr32 ds imulb movabs add or rorb sbb loop movabs fdivs cwtl imull jb xchg movabs (bad) jmp (bad) xlat rex.RX jl sbb mov jl or retq (bad) leaveq outsb (bad) pop shlb outsb test js (bad) pop lock int3 rex.XB or (bad) pop (bad) rex.RXB (bad) mov cld hlt cltd cmpsl (bad) cld lret (bad) fistl rolb xchg pop rex.W (bad) xchg fiadd data16 mov orb mov mov lods rex.WB mov hlt lods cmp icebp adc pop out rex.RX outsl mov (bad) rex.WR cmpsb pushq adc lahf popfq mov std (bad) and xchg fild mov insl cs movsl outsb mov and pushfq movabs cmpsl (bad) outsb (bad) sub cmp lahf mov jne push pushq adc adc jbe movabs (bad) movsb es and xchg insl jle jp in adc rex.WB pop adcl pop push pop and push gs (bad) fs out rolb popfq rex.X int3 scas movsb popfq rex.XB shrl rex.X mov cwtl sahf outsl mov rex pushfq loope in cmp jle adc stos jmpq jp out xor (bad) jle out out mov outsb (bad) es rex.WRXB (bad) cmp popfq jl retq movsb (bad) loope callq mov (bad) adc pushq adc xchg (bad) fidiv callq adc and popfq push add mov movabs xchg loope (bad) jrcxz movsl sarb pop xchg rex.WXB pop pop xor fisub leaveq and mov pop imul movl fidivr xchg movabs mov or or jnp xchg mov rex.RXB jne mov decb xchg push roll cmpsl sbb sub incl mov mov push rex.WRB cli rcll or jb or (bad) xchg shrl movsl imul rex.WRB es icebp cs jns rex.WB rex.WB hlt out cmp xchg iret and mov je icebp fidivrl cmp fcmovb shrb pop xlat (bad) repnz xchg mov mov jo mov (bad) cmp fsubl jl mov mov xchg xor or jbe adc cltd (bad) test cmp movabs lahf mov std rex.RXB cmp fs rcl jbe mov xchg cli mov (bad) xchg (bad) jg mov push insl imul (bad) insb lods (bad) nop cmp mov out jo mov rorq and sbb bnd in push adcl fdivrp (bad) cld adc retq jbe ljmp insl (bad) out rex.WX lock enterq xor xorb out xchg js addr32 (bad) cmc mov idivl addr32 sahf sahf mov (bad) out push movabs pop jb push and mov pop mov pop test rex.WB test adc add pushq insl in sub adc mov cmpsb xlat or out fildll fcmovnb rex.RX scas sbbl jg fs scas xor cld cmc test movabs mov (bad) (bad) (bad) (bad) mov rex.B sarb popfq rex.WRB fistp in pop xchg adc cmp jb adc cmpsb imul stc cmp (bad) retq (bad) rex.WRB rex.RB (bad) (bad) cmp ja pop jmpq (bad) stc (bad) movsb pop (bad) mov cmp ds mov (bad) out leaveq sub (bad) jae cltd push lret pushfq gs (bad) outsl movsb or icebp sbb pushfq mov stos mov jno nop clc cli pop adc and (bad) (bad) addl imul xchg stc xchg (bad) sahf mov mov movsl mov scas sub movsb cmp lahf jp mov scas addl (bad) (bad) xchg pushq or out repnz fsubrs and push lods pop mov in lret mov (bad) mov stos mov mov xchg pop (bad) xchg iret and xor movabs data16 pop mov stos out lods cmpl cmc jno mov push ficompl xchg loopne add movsl xor outsl rex.WXB rex or movsl in sahf movabs cmp jle clc movsl je mov mov repz sub fild retq (bad) pop (bad) push pop (bad) cmpsl (bad) (bad) imul jmpq (bad) (bad) fs shrl jmpq or xchg pop push mov scas or pushfq loopne xor imul add push stc xor rex.W pop jl (bad) lods lea push loopne pop xchg add paddd mov cmp (bad) test rex mov push sarb movsl and flds sub mov imulb fs test movzwl cli cmpl js push mov sub jle jns (bad) jbe pop adc add js idivb rex.W (bad) loopne cltd rex.WB movabs (bad) mov repnz mov frstor sbb add repnz cmp jp adc pushq out pop (bad) rcrb popfq add in xor xor lret movslq xchg and jne adc out mov xchg push mov xor jb in cmc jle push int mov fdivr cmp (bad) (bad) sbbb mov lret (bad) sbb rex.WRXB hlt xchg or (bad) fdivrp sti fildll or push fs jnp fild xchg mov jg movsb (bad) adc jb jl pop mulb sbb pushfq mov sub je rex.XB mov push nop andl rolb (bad) jle (bad) fisubr lods (bad) or outsb in enterq lahf out (bad) int3 jno pop sub subb sahf mov mov sub push mov add rex.WX cmp rex.WB jmp cld rex.RXB (bad) insl pushq in insb xchg and cmp cmp xchg pop jrcxz (bad) sbb ja sti push out icebp xchg mov sahf (bad) mov mov nop xchg fcoms movsb scas rex.XB out movabs outsb pop gs rex.WRXB std ja xor rex.WRXB pop hlt in insb mov mov pushq in (bad) add pop xchg (bad) jp (bad) stc out imull rex.WXB lcall loope,pt (bad) popfq movabs cmp mov (bad) lea jno loope iret (bad) cmp insb or callq sub stc jg pop popfq (bad) movabs mov jmpq xchg sahf xchg rex.W cmp (bad) jrcxz movsl repz cmc js test xchg sbb (bad) rex.RXB stos testb mov (bad) xchg movsb ds (bad) jbe movsl xor rex.X rex.WXB out add xchg sarb movabs (bad) (bad) and add and adc adc fsubrp mov mov (bad) xchg addl (bad) div mulb mov add lock xor (bad) scas lock sub outsl push adc mov cmp (bad) (bad) (bad) (bad) and fiaddl cs out loop mov out mov (bad) mov (bad) addr32 out divb pop jg jo adc sub lods jae int lretw push fwait add jne movabs outsb out and xchg jl sahf fwait or (bad) shrb mov jae flds scas movabs sbb mov jo movabs push jl sub lods add rex.RX sub je out movabs xor sbb movabs jns xor jge (bad) pop (bad) add xchg cmp cs xchg xchg loop rex.RB rex jmp push mov test jo sub rex.WB movsl imul pop ficomp or ficom retq in cwtl adc adc cwtl mulb xor lret test movabs mov pop and (bad) and stos sbb testb add rex.WX sbb out jrcxz (bad) push (bad) outsl lock lods es pop movslq (bad) hlt cmpl insb decb lahf add sbb and pushq data16 sbb lahf outsb mov repz imul (bad) loope (bad) std movl (bad) sahf lea stos (bad) (bad) std rex.WRB in movsl add repnz and movsl (bad) stos outsl in mov xchg sahf (bad) ds outsl fisttpl sahf andl (bad) rex.X pushq or scas sub fistl subl xor mov xor js rex.WR pushq mov or pop movabs jle cmpsb insb sbbb lods xchg lahf (bad) jo rex.WRXB movsb in std (bad) out (bad) mov mov mov push movabs test mov mov or movabs fs sbb pop fisubrl lods movabs retq push mov cmpsb lahf (bad) loop scas jno outsb mov cltd movabs push or std (bad) rex.RXB mov jnp push rex.WRXB sar fisub mov xor rex.B xchg jle or xchg mov rex.RX jle push int3 (bad) (bad) push test xchg mov pop fildll adc pop mov (bad) cmp jmp (bad) rex.WB sar adc xchg notb movabs insb lods and (bad) and adc mov xchg sbb decb nop mov fwait sahf mov movslq (bad) out xchg ds push cmp push mov test or int lods sbb clc (bad) xor jp mov scas xchg cwtl loope cmpsb (bad) rex.RXB (bad) pop (bad) mov test rex.WR outsb rex.WX xchg jrcxz (bad) mov imul or lret add mov out (bad) pushq gs mov mov jns adc ja movsl pop callq int (bad) rex.RXB scas sbbl mov movabs out mov jbe movabs rex.WRXB xor push clc (bad) loop or sbb (bad) insb mov mov notb mov mov cmpsb push outsb sub (bad) adc movsl cmp shll cmp out (bad) push cmpsb mov mov cli (bad) xorb pop clc (bad) xchg (bad) rex.WXB ja sbb cmp sbb and jns mov lods mov jbe mov lods test movabs sub mov divl mov xchg mov lahf scas test rex.RXB leaveq in adc xchg shlb xchg jbe sbb gs mov (bad) rex.WR movsl mov ja (bad) stos or pushq leaveq sbb sahf (bad) pop loop xchg xchg add sub or retq callq retq in enterq (bad) add mov movabs nop insb out fnstenv ss mov cltd ss retq imul out sbb adc and jg movabs mov mov rex.WXB movsb (bad) xchg (bad) (bad) sub fisub and scas (bad) rex.WX lock push ja (bad) xor loope and jb (bad) cmp out push (bad) imulb es push pop mov loope (bad) (bad) mov out mov (bad) and and callq test and lret (bad) sbb rex.WXB loopne (bad) cmp mov insb sbb mov mov fldenv add xor mov add adc jo loopel and sub sbb rex.W ds (bad) jae rcl fisubl subl xor and sbb (bad) or push jb fnstcw test jb iret add pop fstl mov (bad) rex.WB push sub rcrl (bad) mov loope sbb icebp (bad) adc and pushq fisubl (bad) adc jle adc mov outsl push (bad) jo sbb mov hlt retq (bad) jp push fisub movabs stos mov fucomip and cmc sbb pop (bad) and imul fldt and xlat (bad) and (bad) in xlat mov adc imul (bad) (bad) pop scas pop mov leaveq sub test mov scas mov test imul sarl (bad) push movabs (bad) sbbb lahf cmp rex.R lock mov cmpsb or push jo (bad) orl (bad) imul (bad) sbb jmp xchg es (bad) scas xchg rex.RB sti rex (bad) imul jnp (bad) jge cmpsl incb ds pop sub push (bad) loopne (bad) xchg xchg sub adc mov loop jno scas (bad) adc mov sahf cwtl (bad) (bad) movsb rex.WX push pushq xchg mov (bad) jo retq (bad) mov jbe pop insl or rex.RXB (bad) jg xchg and out movabs fsubp (bad) movabs (bad) movsl xlat in rex.WR add ds mov (bad) addr32 jb mov fwait lahf push (bad) callq (bad) loopne out icebp movabs retq push cmc push (bad) (bad) imul in scas (bad) (bad) sub cmpsb shr sbb movabs movabs outsl loop sub lods mov movsb pushq pushq rex.WRX or rex (bad) (bad) cmp (bad) rex.W mov mov (bad) out and movabs mov (bad) fisubr pop xchg rex.WRXB movsl mov sub sub insb sub push adcb push jae (bad) movabs ds out sbb jb jle mov fistp movsl in fadds rcrb jle (bad) (bad) retq xor (bad) movsl jns pop or hlt outsl (bad) retq lods sahf pop (bad) out rex.XB retq movsl jo adc or (bad) sbb outsl (bad) mov sbb js pop jl out outsl sbb fwait sub in mov jo pop rex.X rex.WRX sbb js jo movsb jnp outsl cmpsb lahf pushq cmpsb or (bad) fdivrs (bad) adcl mov lock mov stos loopne fs mov out (bad) imul outsb lods rex.WX sub jns movsb out add lahf cmp mov sbb xor ss mov cmpsl cmpsl mul out outsl (bad) cmc jmpq addr32 cmpsl fcoms rex.WRX repnz mov sub rorb (bad) cmpsb mov sbb jb stos cltd out sbb (bad) loop (bad) movabs add cmpsb cmpb jg clc movsl fisubr fwait mov mov rex.WXB lahf jno adc pop rex.RX shl fdivrs add sbb mov cmpsb (bad) sarb sahf mov enterq insl movsl clc sar and and (bad) adc xor ja (bad) out loope fidiv cmp clc xchg lahf outsl sbb decl sub callq push sbb xor hlt pop jo (bad) cmp or sbb movsl xchg or sub (bad) ja,pt sahf mov rex.WX out nopl hlt rex.RB notb rex.WX cli mov (bad) pxor mov movabs iret and (bad) (bad) sub (bad) fimull out mov adc (bad) (bad) lods sub mov in in rex.X mov rex.W pushq (bad) jb sub (bad) out div out cmpsb outsl jne incl pop (bad) mov fcompl jmp hlt je rex.WRB mov (bad) cltd xlat and (bad) cld jae or rex loop int mov stos stc lret js jno (bad) (bad) addr32 je mov (bad) adc jrcxz (bad) (bad) movabs (bad) mov fildll test jle loope fadd test adc popfq enterq int (bad) pop (bad) xchg sahf insl mov pop add mul (bad) in cmpsb movabs sbb cmpsb lcall lods insb jb sbb mov jg and fcmovu mov rex.WRB imul retq sbb adc (bad) in addr32 loope xchg mov xchg ja cmpsb cmp adc es gs and fwait add (bad) out adc add push out cmp rex.RB push jmpq movslq push pop fiadd popfq or std outsl (bad) mov loope out jb jle and add test (bad) fidivl (bad) movsl add cmp mov imul jp mov pop loop data16 repz callq rex.XB adc and scas rex.X movsl rex.WX mov push loope in mov test (bad) jno insb jrcxz (bad) (bad) insl fdivs (bad) (bad) nop fistpll out movabs lea sub mov int3 or movsb (bad) imul jo (bad) mov nop icebp jo cmp callq scas mov nop jo setb ja or add push (bad) lock fsubl (bad) (bad) (bad) mul rex.RB loopne sub (bad) (bad) xlat and pop jmpq test cmpsl push loopne rex.WB jl enterq jno (bad) pop cmp test jo or sub retq lea mov jg shlb std jno lahf outsb mov pop retq (bad) jbe or sub mov mov jo rex.RXB lock out decb movabs popfq cmpsl fdivr push cmp clc push and sahf scas (bad) mov (bad) pop ds gs (bad) and cwtl cmp cmp (bad) adc jno or repnz gs and (bad) test gs xchg rex.WB (bad) cmc mov cmp (bad) rex.WXB cmc cmpsb es pop cs xchg fisub roll ficomp mov scas (bad) mov jg rex.WX iret or out sbb mov std repz (bad) clc add andb out pushfq (bad) mov callq stc fdivrp rex.R rex.B rex.WR and pop fidivr rex.WRX mov mov in jno test rex fsubrl sahf es rex.WRXB rex.RB out outsl sar jge out mov movsl mov sub add pop roll pushfq (bad) testb mov out xorb rex.RX fwait and divb cmp add fimul push out mov out (bad) (bad) mov adc jmp cmp lock imul jp or mov (bad) rex.RXB iret addr32 mov lret mov rex pushq gs (bad) mov (bad) adc mov sti lods in movabs sub (bad) in cld mov jl rcrl pop loopne cmp mov cmpsl jmp (bad) and scas xchg adc (bad) jle loopne cmpsl mov ficomp (bad) sahf pushfq enterq xchg mov imulb hlt repnz insl (bad) cmpsb enterq sbb sbb sub cli mov (bad) (bad) loope (bad) xor mov in jle rex.WRXB (bad) lods jle rcrb adc movsl repz (bad) (bad) fistp sbb and jnp (bad) jne test push xchg loope rex.WR js int3 push imull loope add rclb nop loopne adc and out (bad) stc out rex.X xor sbb loopne and ja xchg rex.WRXB fs nop pop xor rex.W (bad) adc xchg xchg pop (bad) pop rex.WX sbb ja loopne lret movsl enterq andl add jle out add (bad) (bad) roll adc in out outsl jp jne (bad) push xchg addr32 mov (bad) cmpsb (bad) (bad) fwait pop push jrcxz fidivr mov (bad) (bad) mov xor test jnp xchg and lahf xchg cmc sbb imul jrcxz fistpll pop and (bad) mov imul ja lret clc mov jge cmpb ja rex.RXB (bad) jle scas stos leaveq push pop (bad) mull cmpsl jno xchg es callq repz add mov lods movsl rex.WB subl mov (bad) out sbb mov retq adc mov insl lea fs in sub xchg mov movsl test movb add pushfq mov add (bad) rex.RB clc rex.WRX adc jae push addl xchg in sbb jno sbb mov fcompl jmpq add in mov movabs jns scas (bad) ja (bad) movabs in adc xadd movsb xlat test mov sarl (bad) fisubr cmpsl cmpsb test xor (bad) (bad) (bad) int3 pushfq insl jns faddp outsb out jp mov mov leaveq idivb cli rex.WX f2xm1 rex.X mov icebp imul fs (bad) or pop and orl xor outsb pop outsb (bad) push (bad) lret loop mov fldl xchg (bad) (bad) int cld pop cmpsl rex.RX sbb jb repnz sub testb outsl addl lahf adcb fnstsw xorl (bad) cmpsb mov push (bad) mov lret fdivs jge xchg mov sahf data16 mov sahf mov fwait out fimull sahf (bad) ficomp repz push (bad) pop jbe (bad) outsl rolb movslq cmpb loopne sub sub retq fidiv mov sub xchg repnz stos rclb xor mov rex.B outsl movabs xor and adc mov enterq rex.WRB data16 sarb faddl icebp std (bad) cmpsl fs lahf movsb movsl out rex.RB outsl mov pop int3 imul mov pop sahf (bad) movabs mov fsubl jnp rclb cwtl lock push mov rex.WB fsubp movabs data16 in test cli pop (bad) xchg outsb (bad) cmpsl rex.WXB out (bad) lods out mov (bad) jae loope mov jmp push (bad) or fsubrs push je movsl (bad) sub xor (bad) (bad) rex.W ss mov mov (bad) fisttpl cmc movsl (bad) lods sbb and nop roll push rex.WRB jbe rex.WXB (bad) es mov (bad) (bad) in mov (bad) and cmp in (bad) rex.X jo movabs sub (bad) addr32 leaveq add rolb cwtl rex.WX (bad) addr32 add subb mov xor cs xchg outsb out add outsl mov jb xchg mov add in cmp movabs rex.RB or xor jg xchg sbb sub cmpsl (bad) pushq pushq cmp loop cmpsl or (bad) movsl sbb shll push cmp xor movsb pushq (bad) movsl lods sbb jp imul je mov adc movsl rex.WX jp xchg push (bad) add sbb (bad) pushq movsl ss rex.B xorl mov mov (bad) movsl js (bad) mov (bad) (bad) sub or jae lods ja sub sbb fidivr rcll lret (bad) and sti (bad) or movsl jno xacquire (bad) (bad) int xchg rex.R jns or (bad) mov (bad) mov adc (bad) cwtl cmp out mov lret pushq (bad) adc movabs lock imul loope add add retq mov jns mov add movabs jno (bad) xchg retq clc push (bad) out (bad) not push out iret mov sahf movsb movslq sbb xlat test in xor mov mov jg test sahf push mov movabs sahf and (bad) (bad) xor movabs sarw in jo loop repz cmc icebp loop add cmc mov mov sub cmp jne mov sbb sbb or and rex.WX rolb pushq movsl fdivr jno rex.WB push cmpsl vpsubw insb test or mov lahf mov test scas mov jl and sti xchg movabs sub jno adc sbb pop hlt outsb push repz fdivrs in jo fild (bad) xchg xchg (bad) or pop (bad) (bad) and jl lea fwait in pop hlt sti (bad) pushq mov jno faddl sub mov movabs (bad) rcrl (bad) mov icebp cmp (bad) outsb mov lods rex.WRXB jg imul jnp jmp rex.WRXB push jmpq (bad) xchg out (bad) fldenv xchg lods and rcrl fs cmpsb andb fsubrs push (bad) (bad) mov add adc fistpll movabs test nop (bad) mov scas loopne movabs stc pushfq adc mov test push sahf (bad) add rex.WR subb jne adc jnp rex and cmp (bad) (bad) jnp stos cmp imul add (bad) in cmpb repz pop rex.WRX pop test xor mov fstpt in loopne (bad) (bad) sbb jne sub addr32 pushq movabs xor sbb adc sbb mov adc jo xchg pushq xchg mov add mov jbe lret imul fsubrl outsb insl js lahf cmc pushq jge mov cmc leaveq adc movabs (bad) cmc outsl xlat or out (bad) pop and insb xchg (bad) mov push push nop int or xor mov rex.W data16 data16 or clc (bad) movsb sub push shrb shlb mov rex.WRXB mov pushq pushfq pop movsb jp push scas (bad) ficoml or rex.RB (bad) sahf (bad) hlt mov mulb shlb movb rex.WR rex.WX (bad) popfq ds test jl js (bad) ja cmpsb imul addr32 (bad) sbb push andb (bad) cwtl loope (bad) out in pushq lret sbb loope cmpsb dec adc (bad) sbb add jb rclb adc repz movsl cmp ficomp cmpsl rex.XB in jne (bad) and sbb fcoml xchg lahf rex (bad) push rex.X repnz xchg mov (bad) (bad) add rex.X movsl retq hlt shlb pushq movsb (bad) mov (bad) test cmpsl or andl mov sahf or cmp lret movhps outsb in fistpll add add pop mov movsl andl (bad) (bad) sahf mov sahf rex.XB jmpq (bad) scas mulb std mov cmpsl add test (bad) (bad) out cmp ja mov movabs mov out addr32 out outsb jae (bad) xlat rcll outsb xchg fs jb movsl push pop cs loop sti repnz push xorb (bad) xchg sti pop cmpsl mov mov or pop or xchg cmc (bad) rol mov mov jp lods mov jnp (bad) sahf or test rex.RB retq (bad) pushq jmpq int3 jo (bad) loope,pn fisubr test or (bad) jrcxz (bad) sub movabs sbb (bad) jmp scas std enterq cmpsl mov js scas rex.B mov (bad) or neg adc repz outsl loope pop or add jae in xchg mov mov (bad) rex.R enterq out (bad) pop xor xlat in xchg lahf (bad) outsb jo test (bad) lods test jg xchg mov repnz (bad) mov pop retq fsubp pop mov (bad) hlt mov out rex.WRB scas loop in movabs and sahf sub (bad) mov cmc push jns je rex.W (bad) ds (bad) adc (bad) mov lahf cs sbb (bad) cli (bad) jae or and cmpsb xor rex.WRXB xchg sub pop rex.RB rex.R retq movsl adc movabs movslq outsl mov movabs out out pop (bad) jrcxz or (bad) mov loope rex.W (bad) mov pushq callq rex.WRX cmpsb gs cs je rex.WR add rex.R es (bad) lea fdivs in mov (bad) rex (bad) mov pop popq (bad) xchg cmpsb wbinvd adc stos fisttpl stc fdivs pop stc (bad) (bad) xchg cmp sub xlat ds mov (bad) (bad) cli es and scas xchg adcb and rex.WB add rex.WXB xor xchg mov inc sbb add rex.WR rex.RX rex.RXB outsl (bad) cmp mov fs outsl pop cmp mov jrcxz,pt push (bad) cs (bad) out movslq rex.RXB sub adc jbe scas and jb xor int3 rex.B (bad) rcrb jle (bad) outsb (bad) jbe stc fldcw pop mov jg out rex.WR (bad) xor pushq rex.WX xor (bad) and clc push imul mov int lret (bad) sti movabs (bad) fisubr xchg (bad) callq and push xchg iret js xchg cli (bad) and (bad) out and sahf (bad) (bad) je (bad) sbb adc add xchg or mov je rex.RX ror hlt cmp rex.RX ds in pop (bad) loopne notb jrcxz mov rex.WX cmp (bad) scas jge xchg movsl sub rex.RB in stos add loop push cmpw xchg fist shr jbe lret (bad) mov rex.XB mov adc cmp adc test jbe retq rex.WX mov movabs test (bad) pop paddd cmp notb fidivl jo test rex.WRXB add (bad) rex.WXB jl pop stos loopne sub rex.RB sahf and sbb xlat loop xor mov test fisttp xor rex.X sbbl rex.WR rex.W xor and sbb rex.RB mov adc xchg rex.WXB fbld test or sbb mov movsl xchg mov jg sbb movsl rex.W push pushq mov (bad) movabs pushfq movabs rex.W addr32 pushq rex.WR (bad) loop ds push mov xchg cmpsl rex.WB (bad) loope js movsl jmpq test push mov stos rex.WRX movabs xchg mov lock mov jle js es mov popfq (bad) loop clc adc (bad) lods mov mov retq adc adc pop and (bad) pop sbb je (bad) cmp pop lods fs (bad) lret xchg rorb lock jne (bad) movabs insb (bad) mov add mov or sub rex.RB fist (bad) cmpsb sbb icebp test pop (bad) mov lret rcr pushfq pop add xorb rex.RB jb cmpsb or xchg sub retq stos (bad) pushfq loop mov clc fsubrl stc outsl js jno repnz test (bad) out jmp loop scas xorb pushq test int3 js faddp xor adc repz mov mov xlat (bad) xor enterq cmp mov sbb cmpsb (bad) out pop cmp (bad) cmp (bad) mov jle add out xor rex.WRX in (bad) int ud2 callq shlb (bad) xlat (bad) or mov imul sub repz sub rex.XB mov test pop add jmp or pop sbb int rex.WRXB rex.RB sbb movslq (bad) (bad) (bad) (bad) fistp test cs sub pop movslq rex.WR movslq lock rolb es (bad) jg push sub cmp (bad) notb xor xchg lock mov xor test rex.R xor (bad) jno add jge mov mov pop xor or (bad) sbbb in and mov (bad) stos or mov add mov callq (bad) jle (bad) jbe mov or mov and sub imul sahf add out sbb mov push callq scas jnp add xchg rex.WR pop sbb xchg mov out jle jae cmp jle (bad) push xchg in loop gs cmpsb sbb movsb nop data16 movabs cmp cmpsb out je stos adc and rcr xchg (bad) (bad) pop (bad) orl adc (bad) rex.W add lret pop retq add xchg sbb fwait std mov push sbb lahf loopne xchg test adc lahf movsb cmp jrcxz out rex.WRX out mov mov callq (bad) divb mov mov int cmp loope movabs and loope sub test and mov (bad) movsb add in clc movsl cwtl (bad) (bad) push mov mov jle cmpsb cmpsb rex mov lret stos lahf or push rex.RB cmp adc rex movabs xchg jrcxz jle movabs movsl mov mov mov (bad) sub int (bad) jne imulb outsl jle scas loop sub push (bad) imul scas add cs sarb cmp rex.R ja sahf rorl retq mov pop pushfq (bad) xor cwtl xchg lahf mov mov xor ror fucomp (bad) es rex.WRB sti stos out loopne (bad) jg rcrb mov cmp popfq ror imul (bad) retq jae adc (bad) fadds jnp pop xchg int3 jle push cmc (bad) movabs in rex.RXB (bad) rex.WRXB mov add mov jle cmpsl insl lods scas (bad) jle loopne stc pushfq cli jle sub add out (bad) fs and (bad) lock pop out lret gs fiadd rex.WRB (bad) sahf sub out mov scas and loope movabs and xlat sbb fcmovne loop add pop jo (bad) in jp rex.RXB loopne (bad) mov jnp pop ficom or loopne movabs (bad) movsl insb insl (bad) iret jl mov (bad) mov iret lahf mov pop shl insl push outsl (bad) mov adcl jns (bad) fsubrl push (bad) nop js and scas (bad) rcrb (bad) fistpl add sbb (bad) lahf (bad) mov out clc add (bad) divb or (bad) xor test mov lods mov test (bad) cmp sahf test cmp movabs jo jle mov fsubrs cmpsb repz stos pop mov or xor fstps rex.XB nop pop movabs lods jg cmp (bad) rex.X rex.B xor mov jb mov (bad) in mov movsl xor mov repnz sub and (bad) std rex.X in push sub loop add cmpsl pushq (bad) pushq fsubrl loope adc push loopne (bad) (bad) mov movabs xchg sub (bad) cld mov pushq imul xlat fidivrl (bad) xchg data16 lea mov or out xor test cwtl (bad) adc adc (bad) insl (bad) pop fwait scas push mov rex.WX (bad) decb movabs or adc jrcxz (bad) insb adc (bad) lods sub (bad) sbb xchg stos test sbb mov repnz in imul lods mov out jnp rex.RX add shrl sbb lods (bad) add movabs outsl clc imul (bad) mov mov in out out pushq ja cmp mov fimul movabs add cld cmp cmp push or cmpsb in push out pop pushq jns fstpl adc adc (bad) loopne pushfq rex.WX lret in (bad) add movabs movslq insb and add jle rclb jae cmp test movabs lods jle adc js loope jl xchg movsb cld lods pop mov stos enterq mov and cmpsb lods lods ss int3 or jmpq mov xorb clc mov jo lret (bad) movabs rex.WRX insl (bad) shlb lods gs (bad) outsb je cmp sahf clc mov mov ficom mov jge data16 lods movabs pushw and outsb (bad) lods xchg add (bad) adc sbb jle (bad) lods (bad) rex.WXB imul and mov push xchg enterq rex.B pushfq in std xchg rex.WB fidivr es rex.RX rex.W pop (bad) stos xchg js sub ja and jge callq sub loop sbb scas addr32 mov lock mov (bad) and xor movabs cmpl int mov loope insl lock fidivr enterq cmp (bad) rex.RX (bad) test out (bad) cmpsb push cli outsl rex.WXB adc or (bad) jle icebp add retq pushq addr32 std xchg adc movabs adc movabs push cmp (bad) sbb (bad) jb sub xor lret neg movsl mov jl rex.XB fs jg (bad) (bad) mov fwait cmpsb shrb rex.WB cli je and mov js mov hlt xchg lods cmp add mov (bad) (bad) jb packuswb pop rex.WXB jb movslq mov shrl movabs (bad) xchg stos movsl and retq jo orl subb rex.WXB push lods out sub (bad) (bad) add mov (bad) stc rex.B loop movabs clc gs jp out xorl (bad) (bad) jb push in sbb xchg cmp enterq stos (bad) iret leaveq stc xchg rex.WB iret jl (bad) adc push push mov lods and out test jne notb retq push and (bad) cmp stos (bad) pop (bad) fucomip (bad) pushq (bad) in fcmove jp sbb push or lret jmpq (bad) mov imulb lahf adc notl test (bad) jo out imul sub rex.XB shr sbb shrb sbb sub (bad) movabs (bad) cmpsb fildll in mov in (bad) pop fsubrl push enterq repnz outsl and (bad) sub pop sub addr32 mov xchg pop adc test xor movsl in insl rex.WX and sub adcl divb (bad) pop sub icebp adc sbb push mov (bad) fcompl mov and sub and fsts (bad) and fs movsl (bad) fnsave xchg mov (bad) loopne icebp je adc add mov sub xorb in sbb retq hlt cmpl adc sub (bad) mov mov movsl jno outsl mov rex.WR (bad) rex.WX add movl mov sub sub outsl (bad) xlat mov sub mov (bad) out mov pop jmp pop (bad) ds mov (bad) pop in mov mov or xchg enterq in int jb jmpq ror and mov and imul je adc fdivp (bad) fistp data16 jle es add jge sbb retq xchg fisub jg clc mov lods mov and pop rex.RX mov lahf je cwtl cmpsl fidiv push lea pop test rex.RXB rex.WXB movabs jge sarb movsb outsb jno movabs jbe pop jns scas out pushfq rex.XB jl and (bad) movabs addr32 mov movabs cwtl pop xchg in rex.RX push xchg cs (bad) or fisttp cmpsb jle jrcxz add or addr32 pop (bad) iret mov (bad) jnp hlt lea shrl iret movsb adc out mov xor or retq out or adc cli lahf repz cld cmp xor mov (bad) stc adc hlt mov addr32 jle adc push scas outsb movabs stos callq mov fiadd out xchg loop (bad) movsl shlb mov movsl (bad) flds sbb add sbb ja outsb sahf (bad) lahf je outsb repnz fidiv rex.W ds ja xchg popfq in jg jae cli sar rex.WRX (bad) xchg jno clc cmpsb (bad) cmp or jne jae std add int jb (bad) cmp movsl mov repnz rex.R xchg clc cmp rex.WR addr32 adc sahf and rex.XB lods mov hlt xchg add xchg add movabs stos cmpsb (bad) sub mov adc jmp mov cmc sbb imul insl in mov and cs mov sbb jle movabs adc fisttpl push mov jbe jo,pt test outsb (bad) (bad) cmp jmp movslq xchg mov push sbb rex.WR jo sbb and mov pop xorl and sahf sarb mov notb hlt int pop xchg (bad) mov push (bad) notw add and pushfq jmp jne movabs xchg pop cmp sub rex outsl (bad) shl mov out xchg push movabs jmp mov pop xchg add movabs movsl loope pop (bad) mov and jae movabs int3 xor in add jmpq (bad) je (bad) sar out outsb mov xchg xchg js loope cmpsb clc (bad) clc xor sbb rex.X in fcompl rex.RX icebp lret pop cwtl xchg add cmp and add jp cli cmp (bad) or test jmpq fwait mov lahf xchg pop rcrb xchg in fimul cmpsb gs rex.WXB mov and loope sbb mov stos (bad) or stos movabs in callq sbb mov movsl popfq rex.WX sub rex.RX movl fisubr xlat nop (bad) rex.R rcrl imul and iret xor mov mov insb fbld pop and out popfq sub jb mov pop xor repz in in and mov jge cmp fistpl cmpsl xchg rex.RXB es push testl (bad) rcrb rex.RB test stos (bad) add mov gs cmp and mov rclb clc mov movabs mov sub stos loopne movsl es (bad) xchg or mov mov add pop test popfq scas addl lea or jae adc stos in rclb fildl test jno (bad) mov xchg adc jns stos pop pushfq xchg jl rex.RXB nop xchg rex.RX (bad) movl jbe (bad) stos xchg fldenv mov mov sarb push out jo sahf fldenv je in cmp mov scas movabs (bad) pushfq mov stc scas (bad) or movslq rex (bad) mov xchg (bad) jl mov mov jae push movabs (bad) addr32 or cltd sub adcl out movabs es and jg sahf fs outsl test movsb mov (bad) xlat mov xlat or out imul imul (bad) mul mov dec rex.WX rex.WB xchg pop fidivl sbb loop mov or (bad) mov or (bad) (bad) js callq and or movsb cmp loop test loop mov inc pop mov jns data16 jge pushq test mov (bad) (bad) jg sahf loop,pt outsl pop pushq (bad) mov insb rcr mov sahf pushq in fstl mov add xchg rex.WB nop jl movsl xchg movabs or (bad) pop mov add test sub fistpl mov jge lods fistp ss or (bad) fsubrs (bad) jbe or sbb rex.WR mov and mov (bad) add callq mov mov in and push in fisttp (bad) or rex.WRB sahf rol xor (bad) pushq insb fdivl sub imul xchg mov adc (bad) icebp test jrcxz or rcrl and in stos sbb scas rex.RXB rex.WRXB shrb mov or jmpq jl rex.WRXB (bad) lods pop (bad) scas lods and imul mov xchg sub rorl mov push mov testb insl out es icebp pop imul mov jne movabs mov mov scas cmp movslq pop xchg mov in rex.B jle (bad) mov repnz movabs pop or gs add xlat rex lahf (bad) (bad) mov cwtl test rcrb xor mov xchg fs jo add adc (bad) sbb nop rex.WRX shlb in rcrb test in cmpsb mov adc scas or enterq jge pushq cmpsb (bad) and fwait (bad) movslq xor xor out ds mov out mov insl imul fmull loopne and movsb movabs frstor (bad) insl adc retq mov lods mov loopne sbb jb xor data16 cmp xchg cmp (bad) scas mov xor xlat retq scas mov lods rex.WRX and outsl sahf pop sbbb push outsb or rex.WR (bad) mov rex.RX or callq pop lods adc lahf rex.RB jmp iret push out (bad) mov add (bad) rcl sbb mov fidivl test mov add int3 sbb movsb scas pop rolb cwtl and and (bad) cmp shl addr32 lock movsl lahf cmp fldenv fbld cmpsl rex.RX loope sbb sub loopne rex.RX mov (bad) push push push adc and imul mov (bad) in je jp js movabs mov fidivr loop jp in add mov cmp imull lret sub rcll mov cs cld sbbb add cmp jl rex fs mov repz bndldx (bad) and xchg femms xchg cmpsb lock stc imulb lahf jne or lods out clc ficomp ror adc rsm ds jle (bad) sbb stos sahf sub push jb movslq push (bad) (bad) sub ds (bad) loop stc stos jg (bad) adc movsl jg fistpl mov outsl xor es mov cmp push push popfq loope mov jp pop push jg jb sbb add jb test jg jbe cmp jmpq mov incl lret (bad) (bad) add (bad) lock (bad) loop sbb (bad) jo movsl fwait jmpw clc mov scas xchg test or lock (bad) repnz pop (bad) pop test fstpt mov jg lock or insb fimul (bad) jmpq stos lret loope (bad) (bad) (bad) jae add (bad) sub (bad) pop pop jno (bad) fist movsb (bad) cmp andb test cmpsb (bad) movsl xchg (bad) rex.WR push xor and cmpsb fidivr jne adc or loopne mov sbb cmc (bad) roll (bad) push out (bad) sub enterq movabs test add (bad) lods pop nop ss repz out mov cld mov jle cmp xchg sbb push rex.WRXB mov rex.WRXB add sbb push jo sahf out leaveq jbe push xchg cwtl mov pushfq lods sbb xlat pop and rex.RB jmp jmp (bad) (bad) callq mov pop jb push fmulp sbb adc (bad) std test adc fsubrp or out cmp stc and sbb js pop clc jrcxz sbb (bad) (bad) movslq insb ja xlat test rex.X fwait movslq (bad) movsl ja outsl and icebp mov ja cmp in pop movabs (bad) xchg fcoms mov xor outsb and sbb rex.WRX nop fnstsw (bad) movsl mov fs rex.X add rex.X xchg movabs jmpq mov cwtl jle js mov int3 cmpl sahf ds fs jp sahf jg fs jb icebp mov imul (bad) sbb rex.R lahf addr32 rclq pop movabs sbb pop fbld pushfq js sti xor fisttp in sbb mov out jne jbe rex.RB adc jne adc retq cmp jmpq sbb lods mov movsl (bad) cmc jb mov (bad) pop rol and jge mov pushfq (bad) in pop nop mov pop add and clc and (bad) incb (bad) (bad) movabs sub rex.WRB pushfq (bad) jp fildl subl jge repnz (bad) mov gs retq (bad) jl rex.WXB (bad) loopne jbe loope movslq add rex.WX mov std cld push jg xor lahf int3 adc cwtl fwait in (bad) jbe (bad) or (bad) (bad) sbbl (bad) mov sbb jne push (bad) (bad) in insl fildll ror lods adc outsb xor pop (bad) jno rex.WXB lahf rex.R (bad) int out (bad) (bad) xchg out mov mov fistp cli xor lods repz jle movslq rex.WXB push pop jl jge leaveq movslq hlt (bad) adc pop rex.WXB and outsb xchg addr32 out (bad) fildll push pop jmpq pushq retq xchg loopne out insl je cs cld int3 fnstenv xchg movslq add pop push xchg fwait test (bad) (bad) imul in jbe rex.RXB adc and (bad) mov xlat add rex enterq int enterq repnz mov cli mov xor add movslq (bad) movsl push mov (bad) out or mov fdivs push repz outsl or loop cmc rex.WXB rex.RX (bad) rex.WR rex in loopne sub mov loop movsl movabs cwtl mov sub adc outsl retq sub loope callq movsl xchg scas jrcxz movb (bad) mov mov in xlat adc stos rex.WXB lock and imul sbb (bad) jne jbe jns loopne (bad) mov imul sub mov movsl ss imull cli in mov (bad) sub or sub je and (bad) lret movabs lret pop subb sbb mov jl insb je movabs fistpl pop vcomiss lock rcll std outsl imul jbe test (bad) pushq (bad) (bad) (bad) (bad) ja (bad) rex.WRXB imul es callq sbb enterq cs movsl cld movsb xchg ja adc lods outsb sbbl stos sahf int3 or stos or jbe (bad) cmpsb jp (bad) ficoml mov enterq (bad) add sub cmp pushq stos movsl insb rex.WB repz mov push outsl pop ja je sub and sub cmc sbb es faddl lods rex.WB leaveq cmpsb xlat and lahf sbbl pushq lods (bad) jrcxz (bad) es xchg outsl rex mov rex.B fdivr push out data16 pop add fld pushfq out out mov add or test and addr32 mov (bad) rex.WRX rcl (bad) adc (bad) js,pt addr32 mov rcl movabs movabs push rex.WRX cmp jg outsl out mov scas mov xchg rex.RB movsl mov jg adc or sub adc jb xchg lock sahf movabs lock jmp (bad) xchg leaveq or cmpsb pop lahf jrcxz rex.WB shrl xchg scas xor stos ja mov movabs jmpq (bad) jne loopne push sub cs stc xchg xchg fld pushq movsl mov rol rex.B repz mov cmp mov add movsl shlb mov imul sub vmovaps cmpsb or mov or ds incl and fs (bad) loope test test lods mov out mulb out mov rex.WXB mov cmpsb (bad) sti mov mov fistpll pushfq movsl mov movabs mov rex.XB (bad) clc or insl xor rex.XB imul sbb or in (bad) movabs sahf (bad) pop imul movabs stos xchg iret mov sbb jg gs rex.B xor rex.WB cmp add and lea (bad) loop (bad) outsl sub jmp (bad) jb (bad) loop or cli pop pop sub pushq (bad) popfq je iret stos sbb xor fidiv (bad) (bad) movsb loope xchg icebp and pushq xchg lea jrcxz loopne or and gs hlt jrcxz insl or cwtl mov loope push nop xchg movabs andb (bad) pop sub pop (bad) clc in mov fisubrl adc iret pop or gs mov out jmp mov xchg lahf xchg stos callq pop add lahf sub out outsb pop test mov rex.WXB sub xchg outsl jle mov jrcxz ficomp (bad) out (bad) repnz loopne (bad) or movabs mov cmc adc outsb callq (bad) jo xchg (bad) jb fsubs stos data16 pushq outsl imulb movabs rex.WXB outsl sbb hlt movsb (bad) loopne cwtl push loopne sbb adc pop std lahf roll data16 and nop rex.W js or or lea lods mov subb mov (bad) test (bad) mov lahf sub cmp add clc jo movsb cwtl cwtl jl jrcxz xchg rex.WB mov fcomps mov push lods (bad) pushq shrb sahf push (bad) loop pop rex.W (bad) (bad) sub mov xchg cmp in xchg mov lret xchg in imul mov xchg sub jb xchg push xchg pop loopne jg pop xchg cmpsb repnz shr movsl (bad) repz rex.X jb in sub out (bad) cmp and fprem1 mov movsl addr32 sbb (bad) adc in (bad) xlat enterq lods sbb retq (bad) test shll movslq (bad) js mov scas mov rex.WRX mov (bad) je pop pop callq outsb (bad) repz sbb cltd xchg test xchg callq in mov pushq scas divb fisubl movabs sub js mull mov loope (bad) outsb sbb subl add pop pop rol (bad) and sahf jo out sub adc movsl fdivp nopl out pop and lea (bad) movsl mov sub cwtl pushq (bad) lret (bad) movsl cmpsb mov sbb sahf in jl and (bad) mov jg (bad) loopne in movabs jle (bad) xchg add (bad) (bad) sbb (bad) repnz (bad) cmc pop ss jb out (bad) mov movsl lea movabs (bad) cmp jb mov rex.WB ja pop movabs pop mov rex.X pop fs pop mov (bad) (bad) retq xchg mov loope mov push js outsl pop movabs hlt outsl add movabs lret rex rex.WB fiaddl mov xor ljmp callq (bad) sahf jg (bad) stos sbb in jne clc and (bad) jns xchg pop (bad) cmc fnsave xchg movabs stos (bad) add or (bad) (bad) (bad) cld (bad) (bad) callq xor mov leaveq or movabs lods jmp pushq and test jb sbb adc lahf fs mov pop imul mov or sbb xchg pop movabs (bad) shrl sbb or test out (bad) (bad) lods enterq and xchg mov rex.RX (bad) movslq pop lods in idivb add jl mov out mov add mov movsb and sub rex.WRB (bad) nop xor sbb (bad) insl jle lods pop jo outsb add (bad) rex.WR addr32 sbb (bad) sar xchg in jle (bad) or cmpsl push ja repz mov cmpsb lods or jrcxz cmpsl rex.WX js sub xor scas sarb movabs cld sub pop mov xor xor (bad) xchg scas js movabs jmp (bad) mov mov (bad) sub cwtl xchg movabs (bad) mov (bad) in enterq lahf mov jg mov sbb int3 enterq fmul cmp rex.WRXB cmp (bad) xchg push addr32 jl callq (bad) fwait (bad) mov rex.RB movslq movsl jmpq shll mov enterq sub adc mov insl test xchg (bad) cmp sub cli sbb mov add adc (bad) movb (bad) mov add rclb stos cli out retq adc (bad) fiadd test pop popfq subl movabs add rex.WX or add movslq je movabs (bad) (bad) or retq loope lock loop testb (bad) lods fs push gs clc pop lock pop xor rex.RB in (bad) loope (bad) rex.WRX in rex.XB xor (bad) rex.WB pushq (bad) (bad) adc in int imul xor sbb icebp sbb rcll pop rex.WRB out out sub (bad) pushq (bad) gs (bad) pushfq mov sub add mov mov (bad) out mull mov pop movabs mov addr32 movsb jmpq (bad) pop jl adc jns shlb add callq movabs xchg cmp adc xchg movslq scas (bad) (bad) sbb movsl addr32 enterq enterq movabs cmp cmp (bad) (bad) mov mov sahf mov mov adc cmc mov (bad) movabs insl (bad) movabs shrl or adc ja pop loopne mov cmpsb pop sub rex.B xor addr32 movsl mov sbb xor mov loop jne (bad) mov imul movsb iret adc imul (bad) jrcxz and xor jno xchg mov (bad) xor mov stos cld imul jmpq fcompl insl out (bad) clc (bad) sti pop out movsl push rex.WRXB jp and movsb cwtl jo and (bad) cmpsb and add or xor mov je stc push repz mov jmp (bad) rex.RB enterq test mov mov insl fsubs jmp rex.B addr32 hlt jae mov in mov and cwtl emms movsb push sbb xchg mov rorb push (bad) in rex.RXB mulb std jo lock je jns mov out mov (bad) mov pop data16 (bad) rex.RXB push (bad) test icebp scas out movabs mov sbb mov lock sbb (bad) scas (bad) xor xchg ficomp mov retq sbb out xor or rex.WR jo ds rex.WR rex.WRB xchg out sub jge (bad) cmp pop push lock jp cmp jg pop mov stos rex.WRX or lods rex.WXB stos adc cs (bad) (bad) jg lock loope xor adc scas mov scas mov add mov lock je pop (bad) jl adc (bad) sbb cmp xlat cmp data16 test pop loopne (bad) jl icebp mov mov and jl mov in jne loop retq rex.WR lods sbb out or mov pushq (bad) push mov stos repz outsb pop in xlat rex.WX retq rolb movslq jne (bad) (bad) xchg stos (bad) jmp add jns mov push in test xchg cmp add or jbe sub add or xor stos (bad) xchg mov pop rex.X test rex.WR push (bad) jb fnstenv lods (bad) movsb enterq lahf (bad) lret (bad) out je mov iret pushfq (bad) (bad) fildl mov movslq mov xchg pop mov sbb je rex.RX mov rex.R (bad) (bad) and test enterq fildl xchg (bad) mov nop mov xor sbb (bad) fcompl (bad) movsb cltd addr32 insb lock cmpsl repz callq (bad) sub rex.WR out loop pop lea push sbb xor (bad) sbb in (bad) sub pop lret push sti add pop fcompl movsb or lods rorl fidiv out in mov and lret (bad) jg in roll ds mov es (bad) sbb loopne xchg pushq mov ficomp pop (bad) movsb adc (bad) shrl mov out (bad) sti fidivrl (bad) int rex.WRXB mov mov rex.WRX addb mov cmp pushq pop mov (bad) cmpsl mov xor rex.B rex.WX jo mov sub jno pop cwtl or rex.XB es (bad) repz fistp mov xchg (bad) (bad) pop outsl fldl push cltd rex.R rex.R xor fsub rex.WXB pop jl fucom out (bad) rcr pop (bad) jae jne mov push xchg sti test (bad) rex.WRB (bad) (bad) idivl (bad) push seto je adc mov out adc add (bad) cmc pop popfq in shrb int3 xchg sbb adc test jo adc rex.RXB jb pop cmp (bad) (bad) (bad) mov (bad) xor or adc movabs repnz xchg movslq insb callq cmp or rex.X add movabs or hlt stc push xchg xchg mov enterq jge xchg enterq insb movsb vpxor push (bad) test cmp cmp adc movsb (bad) rex.WB xor xor addb clc jo stos cmp movabs outsl (bad) jno rex.RX (bad) imul lock mov (bad) pop lock rex.WR outsb pop insl sahf cmc cmpsl fucom jrcxz rex.X mov mov pop cmpsb and sub (bad) loopne xchg push add mov push and mov rex.RXB (bad) add xor rex.WX mov mov movsl sahf (bad) fldl pop lock iret in outsb jno (bad) (bad) mov loopne or sub xchg test pop mov add mov loopne sub sub imul roll cmp rcrb mov jbe rex.WB mov (bad) (bad) (bad) sub out hlt and push and fucomp mov sbb rex add (bad) (bad) hlt pop imulb xchg pushfq loopne and out stc xchg lahf xlat stc enterq cmp sbb pushq jle stos xchg cmp xchg rex.WR fdivs and pop or cmp rex.WRXB orl push (bad) add jae sbbb cmp cs mov cmpsb mov (bad) notb stos xor sahf movsb fnsave (bad) add cmpsb (bad) scas scas scas xor mov in mov rcr jae (bad) test lods mov loope cmpsb out int (bad) sub loope cmpsb int (bad) or (bad) (bad) xchg sahf pop pushfq rex.WXB lret rex.WRB (bad) xchg jns test out sbb mov in jl jne movabs in fdivr pushq (bad) lods sub movabs hlt jo xor (bad) mov (bad) push xchg (bad) mov rex.WR rex.RB fdivrp mov fsub cwtl (bad) add rorb insl pop scas ss cmc sti rex.XB movabs insb pop retq rex.WX out add (bad) cmp (bad) cmp jg mov adc pop (bad) mov shrb cs rex.RX xor (bad) out movabs out out (bad) (bad) imul subb cwtl (bad) addr32 stos mov adc xchg cld jae (bad) shlb (bad) and rcr (bad) (bad) lret xor rex.RX out mov clc outsb rcr cmpsl movsl pop push adc jo andb test (bad) (bad) add lock repnz xorb mov movsl xchg (bad) pop xchg pop rex.XB or jmpq mov push xchg pop mov xchg xchg or pop xchg mov data16 rex.WX (bad) fstpt rex.WR jns popfq in sbb fsubr movsb rex.RB sahf retw xor loope add (bad) jp (bad) callq mov movabs hlt pop xchg js movsl and xchg xor xor subl rex.WB rex clc adc out out mov (bad) cmp jb adc xlat rex cltd adc (bad) movabs sub mov enterq fwait sahf enterq xchg movabs jbe or cmp pushq xchg cmp adc jle add rex.B hlt loopne rex.X mov out pushq cmp outsb lock fwait and rex.RX movsl mov movabs subb cmovb out pop std scas (bad) xchg push sahf xadd nop push jle fs push (bad) hlt rex.WR mov test jbe or xchg mov mov (bad) (bad) (bad) ss xorb sar lret frstor sbb jp jle mov (bad) (bad) fsubr sahf or jno mov test stos (bad) js (bad) sarw rex.WR movaps (bad) idiv push ja data16 loopne mov shll loop pop xchg adc pop (bad) or rex.W out je pop sbb xchg mov outsl (bad) (bad) jbe cmpb fdecstp and mov jo mov (bad) and pop sub (bad) mov mov xchg push mov mov push jbe loopne mov push (bad) and rex.WXB sbb mov jmpq cmpl rex.WRXB adc movsl pop jo add loop or pushq xor cwtl inc (bad) pop imul jo rex.RXB lahf (bad) jrcxz (bad) mov rcll (bad) xchg sbb (bad) cmp cmp leaveq outsb sub mov pop movabs repz mov push fimul cmpsb movabs xor je test xchg mov xchg xchg retq retq fcoml retq out (bad) (bad) rex.WXB xlat cmp movslq scas mov add (bad) fcomps test test push add cmpsl imul mov jno mov callq mov lock (bad) mov sbbl hlt jns divw movsl ffree mov jae (bad) mov (bad) xchg stos fcoml jns fisubrl pop sbb adc or (bad) (bad) or fildll xchg cmp es sbb fistpl push rex.WX xchg ja mov (bad) pushq std int3 mov movabs (bad) out test movsl mov jrcxz adc pushq std cmpsb pop sub test jns (bad) cmp scas or out sbb clc sbb cmp rex.WRXB jle or out cmpsb sub jrcxz or sub (bad) (bad) movsl or (bad) cmp pop fsubl movsl rex.WRXB xor mov movabs or mov cmp sbb (bad) cmp pop ss movsb cmpsb push movabs pop pushfq test adc stos rolb fcompl rex.RB pop rex.RX or std add or xchg movabs ljmp mov sub adc cmp mov in fsubl adc and rex.WRXB lret push (bad) xchg jp jl int3 pushq (bad) adc or sub leaveq and adc idivb add test (bad) pop mov in push roll loopne mov cwtl xchg mov (bad) loope lret sub push pushfq add mov (bad) leaveq (bad) movsl nop iret je test jno (bad) (bad) push je pushfq pushq jo mov outsl test loopne addr32 mov mov adc xor movabs movabs pop out rex.WR cmp cmp xchg movl js in (bad) rex.WB callq movsl jrcxz xor mov push fwait (bad) enterq test add xor jg adc movabs neg idivb out mov addb add (bad) imul popfq movabs mov xor movabs andb add (bad) rex.WB cmp in xchg (bad) repnz mov jge pop callq (bad) pushq rex.R lock cld cli (bad) (bad) sahf pushq adc lahf loop (bad) cmp out pushq rex.R insb rex.RX adc (bad) pop enterq (bad) xchg gs jrcxz mov pushq data16 push add test rex.WXB fwait repnz nop cs data16 int3 push jbe jl (bad) jb in jmp rex.XB jne lcall xor mov jns lods cmpsb scas test iret (bad) repz mulb outsl sbbl sbb cmp mov (bad) rex.RXB loope xchg mov (bad) ficomp out enterq jb (bad) push cs test xchg push out scas cwtl (bad) fild movsb (bad) cwtl repz pushq add mov and in jns test pop stos (bad) sbb sbb fistpll (bad) out mov xchg sub retq sub mov jmpq mov in xchg mov (bad) (bad) add sar mov imul mov and rex.X jb loopne xchg rex.WX idivb addr32 fcmovnu cmpsb jne insb repz mov repz cmpsl sbb callq sbb pushq popfq sbb xor (bad) mov sahf jnp adc test rex.RB pop stos mov popq mov adc sub mov outsl mov (bad) pop int fadds (bad) loopne (bad) pop loope (bad) xorl jrcxz jae cld mov jae sahf adc (bad) pushq movsl pushfq movsl leaveq movabs loop xlat sub (bad) xchg pushfq xchg movsl lock pushw or movsl rex.WRXB and rex.RX xor hlt (bad) loopne push (bad) cltd movabs cmpsb test in or mov jp rcll icebp adc callq cmpl cmp (bad) test add addb xchg add sbb (bad) mov mov jno cs add jno outsb add jno sbb (bad) or xor sbb int3 out mov flds test cmp cmpl rex.WRX stos and sbb mov xor sbbl sbb rex.WB sti mov stos cmp out rex.R pop jmpq pop (bad) (bad) and lret in subb adc mov jge clc div mov jae jl movabs rorb fucomp repnz rex.WX lea fidivr (bad) (bad) test int3 xor adc (bad) scas mov movabs cmp outsb push mov lret adc (bad) jbe loope (bad) nop (bad) cmp push xchg mov (bad) pop jnp lods callq push xor fisttpll sahf adc rex.WB jb add rex.WRB adc loope insl out cmc icebp sub nop lret stos test xchg (bad) push sbb lods (bad) int rex.R fcoml test (bad) iret sbb loope data16 rex.RXB repnz loopne,pt (bad) xchg (bad) ficom rex.RXB (bad) mov lea lret (bad) jno lahf (bad) rex.RX xor add push mov imul jo mov mov out je or mov sbb xor (bad) cmp (bad) pop or loop (bad) and pop pop (bad) punpcklwd jp (bad) outsb stos sti idivb cmpsb rex.RXB rex.WXB pop (bad) jb rex push and or movabs xchg sub push lret add jne es cwtl mov xchg rex.WX (bad) (bad) sub jb xlat or and xor sbb jmpq lcall lock in (bad) sub jle (bad) jae fidiv or sti rex.WRX es test retq fildl mov movabs sbb xchg mull ss mov test int rex.WRB adc test mov (bad) int3 adc movslq shrl (bad) in fucomip push cmp rex.WX sub mov hlt shll in shrl ss push jo jp outsb imul xchg jno lods cltd xchg (bad) sub andl push out lods int xchg stc insl out (bad) sbb scas outsb sahf (bad) int3 mov pop (bad) (bad) and subl xchg es je insb cld test sbb mov imul pop in jle mov rex.B (bad) mov xor fildll insb xor sbb cmpsl callq add fwait mov (bad) add push sub or push xchg (bad) cltd pop (bad) pop cmpsb mov xor rex.WX (bad) cwtl mov rex.WB fildll je xor addr32 pop ljmp jb (bad) xchg imul cmp enterq loope cmc ds clc movsl (bad) cmp jle notb insb data16 hlt push imul push imul (bad) lcall jo sti (bad) rex.WX in insl mov rcr scas or jns mov pushq adc jle movabs negb pushq loope scas mov fcompl mov out fs sahf stos or notl shlb fiadd pushfq (bad) (bad) rol sbb loop cmp imul hlt outsb xchg (bad) testl xor out rolb pop adc rol (bad) xor popfq pop (bad) or cmp movabs test cmp repnz addr32 (bad) xchg sub rex.WRX callq jne sub (bad) movl pop and (bad) pop xor out add cmpsb mulb push iret mov or popfq and rex.B repnz mov sbb rex.B (bad) cmp cwtl (bad) stos mov xchg adc and out adc cmp or jmpq imul mov test scas out stc (bad) nop (bad) pop enterq jg (bad) jp (bad) cmpsl xchg movsb in fiadd movabs gs (bad) add add data16 rex.WXB (bad) pop jbe pop (bad) rex.XB fisubrl jne jl fiadd lock xor and or test fbld callq sub loope sub enterq pop jg adc decb jns repz add outsb stos enterq (bad) mov sbb rcll or fs xchg xor or (bad) fbld jl add ror sahf add sbb (bad) shrd loop rex.XB sbbb (bad) mov pop std cmpb sbb add (bad) xor or pushq out jp adc pop movabs (bad) rex.WR sahf rex.XB (bad) out lahf (bad) addr32 pop movsb retq sahf pop fs pushq and rex.WB (bad) jnp pop in xchg and pushq mov jg (bad) and push rex.WB test xchg mov or stc gs cmp (bad) cltd mov in sbbl data16 test cmp push (bad) (bad) jno (bad) es andl movsl pop xchg (bad) mov js (bad) jg fidiv movsl (bad) (bad) pop orl hlt jle fildl jp jns (bad) cmpsb test push cmpsb xchg pushq or clc testl out cltd es movabs sub retq callq stos nop lahf sbb rex.WRX stc repz xor mov rex.WRXB loopne (bad) mov loope and (bad) xlat cmpsl rorb or (bad) idiv jnp cmpsl lock cs jb (bad) notb int3 pop jg add imul jp jo loopne lret jae (bad) movsb (bad) fnop sahf test (bad) sahf subl ja movabs (bad) testl fild rex.XB rex.RX and fsubrp (bad) movabs (bad) (bad) add (bad) (bad) sbb cmp pop lret movsl lahf sub add callq push fdivrl cmp mov sub cmc subl lods pop (bad) lea sbb push rex.R fistp pop fisubrl jnp stos sbb and push loop (bad) and outsb movabs jbe (bad) enterq mov sbb sbb jb mov in xor pushq (bad) fsubl mov sub callq (bad) movsb movabs (bad) int rex.B test rex.WR sub xchg or (bad) test cmp mov (bad) mov pushq pushfq sub cmc callq push jl movsl fsubrs mov retq (bad) xorb scas (bad) mov and cmp hlt mov mov xor (bad) (bad) ljmp jns xchg xor rex.WB cwtl (bad) adc fcompl or (bad) pop push mov (bad) faddp je mov pushq movslq adc loope mov push (bad) leaveq jbe scas (bad) pop cmp jmpq (bad) (bad) fimull mov leaveq sub imul (bad) push in (bad) xor (bad) test rorb movabs fisub and add adc jb es movabs (bad) xor rex.XB sbb movsb movabs imul (bad) cmpsw xchg xchg rex.WR scas out pop mov fist cmp xor pop xchg jp jbe mov cmp mov jbe sbb cli cmp retq movabs movsl xchg negb mov jmpq xor or (bad) in mov repnz mov adc (bad) insl test (bad) mov out hlt adc and mov test rclb xchg mov add lock lock pushq mov (bad) or jg (bad) insb movabs rex.W rex.WRB xchg push retq (bad) rex.RB jns movsb pop xchg cmpsb (bad) rex.WXB (bad) xor test fildl insl btr pop jp add movabs and (bad) mov shl movabs insl (bad) sub mov int3 mov pop push or and xor clc retq lcall or fbld in jge xchg rex.WRXB cwtl rex.RB jge (bad) ss sahf xchg fwait mov (bad) lods out mov movabs loopne xchg movsl mov scas jo pop mov lods mov (bad) imul sahf data16 rex movsl (bad) jno retq in cmpsb gs sub mov movabs mov (bad) (bad) lods outsb sub in (bad) push and fs pushq je in mov push js mov sbb ja stos (bad) push cs callq iret or or fsubs hlt mov pop repnz sub jl (bad) mov test rex.WRXB test movsl jle sahf mov rex.R rex.WRB enterq loop xorb mov ds xlat xchg mov mov jne out and retq jbe in in insb xor scas sbb scas lock mov rex.W xor andb fdivrp sbb jl mov mov add outsb lock rex.W jae xchg rex.WXB cmp adc outsb js mov mov rex.RB gs pop (bad) retq hlt pop sbb fidiv rex.RX out (bad) mov cmp and test cli (bad) fidivr jle out scas out loop imul mov test jrcxz jnp mov mov sbb int lret (bad) repnz loop (bad) movsb pushq jae enterq mov repnz loope rex.RB fs retq cmpsb js mov jbe xorb push fidivrl mov (bad) or and test sarl test xchg test js test pop or rex.WX lahf clc lahf es mov mov (bad) (bad) xor cmpsb iret es vmovdqu negb jb lock xchg mov rex.RB int3 rcll js adc sbb or outsb pushq insb pop std out test test pop fs add add cld rex.RB rex.X rex.WRB xchg jle int3 movl test leaveq loop fs pop mov scas rex jmpq es insb gs test (bad) jo in (bad) fildl sub cmp mov pop add pop sub icebp rex.WRXB scas mov test (bad) insb jrcxz andl (bad) in jge xchg mov (bad) fldcw es testb (bad) outsb scas mov ss test outsb retq mov xchg sbb or mov pop jne (bad) pop and insl enterq xor jrcxz xchg (bad) loope rex.WXB fisttpll xchg (bad) mov iret adc gs (bad) or cmpsl rex.WB sub and mov stos rex.WX fadds movabs fmul movsl or flds xchg (bad) (bad) mov cmpsb orb nop mov ja or (bad) (bad) callw cmp jl and cwtl fmull xchg (bad) sub cs cs sub (bad) jle out hlt outsb mov sbb loopl (bad) mov hlt (bad) cwtl movsb stos fidivr (bad) pop jle cmpsb sahf xor cmpl pop sbb loopne js push sahf sbb pop test and pop movslq in mov jl jae sbb pop movabs out jle mov jp and jmp (bad) (bad) xchg pushq (bad) xchg (bad) pop fsubs fimul test jrcxz cmpsl sbb fsubp out outsb outsl out jbe (bad) movabs mov scas (bad) movabs or rex.WB (bad) (bad) rex.WB divb addr32 (bad) push movsb out xorl movsb out (bad) sub sahf (bad) cmpl jle or addr32 data16 (bad) push rex.RX es (bad) mov mov pushq mov jne test sahf jle callq sbb cmpsb xchg leaveq (bad) mov xor jge (bad) fcomp mov pushfq add mov pop loop lahf pop fistp (bad) mov (bad) icebp loopne and andl add lock loope movsb pop addr32 mov scas pushfq push and adcb fsubs pop rex.RX rclb rex.RXB push loopne adc (bad) fs cmp (bad) movslq mov pop movabs jo addr32 (bad) fisub adc (bad) jle testb movabs (bad) scas mov outsl test (bad) retq or js push lods mov rex.WR loopne (bad) out in imul (bad) out movsb xchg insb adcb xchg movabs sbb idivb push (bad) stos jrcxz jg (bad) repz fs jle mov xchg xchg xchg adc jb sub xchg (bad) (bad) pop mov in mov (bad) shrl mov stos test jge mov xor add movsl mov rex.WXB (bad) (bad) jp sbb sbb cmpsb lods rex.XB xor sbb mov and add shrb iret or (bad) (bad) xor adc in adc adc es (bad) nop std (bad) lahf (bad) (bad) sahf movsb (bad) test icebp pop (bad) jg (bad) xor (bad) jb mov in fidiv scas (bad) mov (bad) (bad) mov (bad) (bad) lods andb mov sbb retq in mov jae or rex.XB data16 mov lcall jno xchg je hlt movabs and adc xchg pop xchg lahf (bad) xor xchg xchg movsl ja adc (bad) mov movsl xchg sub and test iret int scas cld jo sub es mov roll movslq rex.W gs mov enterq mov mov adc mov pushq or sub mov jnp outsl (bad) xor outsl clc mov sbb in xor rorb negl cmpsb mov or mov rex.WRB adc scas pushq fild pushfq (bad) xchg fidiv sbb xchg pop insl int xchg (bad) adc sub xor pushq leaveq stc adc movsl (bad) movabs cltd scas (bad) cmp in mov add mov lahf lock fistpll add (bad) mov adc je (bad) mov (bad) test rex.B rex.RB out stos or (bad) iret je nop scas push scas (bad) mov test or or out xor test mov out mov repz movsb or movslq sahf out in (bad) push and mov iret sub (bad) mov mov retq mov (bad) cmc mov movabs mov lock jno pushq rclb mov rex.WRB leaveq jne or mov imul test (bad) rex.WB adc adc movl (bad) scas and cmpsb xchg retq push rex.WRXB rex.WXB in out movabs lahf (bad) popfq jrcxz jbe push loopne (bad) add push xor pushq mov or ss push incb adc out pop (bad) cld mov fidivr pushq add callq cld fucom repnz mov xor jne stc mov (bad) mov lods sub sub (bad) rex.WR pop fmul and mov pushfq sub add in sti ja (bad) push add fwait outsb cld jne and (bad) mov gs sbb mov xchg pop popfq retq movsl out hlt cmpsl rcrb stos loope or pushq push xchg icebp lret stos rorb and xchg (bad) cmp scas lods or iret mov fdivs cmpsl fildl cmpsl or out dec in test mov iret in cmp mov cmpsb mov (bad) pushfq or sbb jle callq lods and je pop ficoml retq add in rex.WRB mov or (bad) movsl (bad) add cmp div cwtl int3 rex.WRB mov pop push sub minpd sbb mov mov mov scas insl rex.WRX xchg push mov fimull pop push movabs cld mov ds std cmpb pushq rex.WRB pop sub imul and rcll incl outsb cmpsb fimul rex.WRX je sbb or or adc lods movabs mov jle rclb add (bad) js xor data16 imul jl out pop cmpsl stos lock in andb cld lods add add fidivrl adc adc fistpll lret xchg (bad) or (bad) enterq sub test (bad) sub xchg xchg (bad) jle add xchg fsubp std (bad) cmc pop and pop push jbe mov (bad) pop xchg lock in outsl loop (bad) xor cld adc sbb jo movsb sbb adc jp and cmp lods sahf movsb add insl sub mov (bad) jo lret adc jmpq push cmpl clc cmp movsb adc mov loop jo (bad) xor rex pushq fistpll out pshufw (bad) cmc std lock (bad) test sub divl fistl clc (bad) mov sub scas xchg jbe rex.RX je pop add vpmaddwd ficom or hlt sbbl movabs add adc rex.RX repz idivb jns mov shrb (bad) fsubrs and lods mov gs rex.WB rex.RB lahf mov data16 (bad) rcr mov sub (bad) movslq xchg lret pop and int or mov or shll adc xchg mov shrb popfq movsb or shll cld insl jp jmp xchg scas movabs sahf fidivl loope sbb or mov cld test sub mov movsl fs xchg mov loopne push add sbb jrcxz clc pop adc movabs (bad) (bad) mov stos (bad) cmp repz mov sub repnz (bad) (bad) retq (bad) int3 in rex.WX clc out or (bad) movabs jmp and xor movabs xchg add add fnstsw xchg test sbb (bad) xchg jbe fisubr lahf clc lahf and xor rex.WXB jae js xchg mov (bad) cmp mov in add mov rolb mov insb mov jo (bad) (bad) add notb cwtl movsb js scas negl mov mov jp outsl movabs xor shlb lret mov fcomps mov outsl jg cwtl nop movabs movsl je mov or push rex.RXB sub mov ja out pop movabs (bad) mov cmp pop xor pop rex.W fwait xlat stc (bad) rex.W add (bad) fucomp sub (bad) std cmpsl xor in ss js lret rex.R fnsave pushq cmc (bad) movsb (bad) and pop repnz in (bad) adc cs (bad) or pop sub repnz mov mov xchg stos add scas roll ds out leaveq frstor xchg jle (bad) fiaddl pop cmp in movsl jne (bad) jle mov fldcw movslq rex.WRXB stos popfq pop sar adc cmova movsl movabs jrcxz movsl mov add sbb fwait lods pop adc rex.WX and mov test movsl rclb cmpsl (bad) (bad) andb jle cs adc (bad) push sub mov pop xor or mov sbb rex.WRB fcomps push add (bad) (bad) in pushq rex.WRB rex.RX pushfq fwait shr movsb incb gs (bad) outsl mov jp add xchg in xchg mov fnsave xor (bad) rex.RB in jl movsb rex.WXB sti stos psubb stos cmp (bad) repz add mov mov rex.WXB mov (bad) in sti jge insl test loope js (bad) retq mov mov (bad) in xor and repz or pushfq mov (bad) add sarb (bad) movabs mov push fadd clc movsb retq sub out insl cli adc (bad) sbb mov stc cmp xor (bad) cs mov mov sarb xor int3 adc gs sahf gs xchg (bad) and sub xchg jmp test stos repnz rex.WXB xchg jp and outsb iret sahf jbe mov (bad) (bad) mov (bad) fbstp fcoms repz fistpll movsl lods add ja cmpsb add test mov (bad) pop mov mull cwtl jns (bad) xor in adc test sarb xchg mov cmp mov jrcxz jmp cmpsb jbe xchg fisttpll (bad) jo leaveq mov jne xchg movabs pop add (bad) rex.RB xchg out repnz jg sti and andl mov jl pop fimull push test pushq mov sar (bad) xchg cs sti sub shrb push xchg add or xor xchg gs push adc mov rex.X jle fsubrl pop sbb (bad) or insl jo push (bad) pop rex.RB cmp rcl (bad) scas jp (bad) xchg frstor (bad) callq (bad) jge (bad) lods iret mov stc pop imul or push add mov sub xchg pop mov jbe insb movabs (bad) ss mov and sahf clc fsubp jrcxz or mov jbe (bad) and jle xchg ds xchg insb gs jrcxz (bad) (bad) (bad) cmp jg or mov sahf jg xlat add xorl pop rorl (bad) mov repnz add jne mov int pop clc push rex.WRXB movabs mov rex.RX out out jge mov (bad) rex.WX (bad) push mov (bad) int3 scas mov adc xor push lahf in mov xor add addw (bad) inc gs xor movabs rex.R sub pushq sbb rex.WXB sbb (bad) gs pop loopne and mov ss adc jb cmp mov jno loopne rex.WR (bad) stos cmpsb or add xchg outsb add out clc mov sbb pushq icebp leaveq js (bad) out es cmpsb (bad) rex.WRB rex.XB rex.X negl fist lods (bad) out push sbb xchg outsb stos cmp loopne es cmp and xchg rex.WRX movabs iret test fsubrp or xor mov pushfq sbb mov out shll or adc sub pushq data16 jl cmp mov push fdivrs lods or mov mov out or xchg mov jns sbbb (bad) jp xor jae or and sbbl scas and pop sbbl pushfq xor and mov sbb pushq movslq data16 sub loopne rex.WXB rex xchg and (bad) mov rex.XB fmuls push or movsl xchg mov pop (bad) add (bad) or and mov movl and cld mov je and jno pop gs pop mov in sub leaveq mov jns add sbb push lret sub ds jno out (bad) retq or ror fisttp repz rex.R movsl in adc jl loop rex.XB adc mov jle pop xor rex.W enterq xchg mov movsb cmpl cli gs out cmpsl and mov rex.W sbb repnz cli sbb loop js pushq mov (bad) pop (bad) hlt or pushq rex.WR loop or mov (bad) cli test retq addl andl sub ss in and mov (bad) mov imul jge lea orb pop push add sahf or int3 popfq bnd lods jle rex.RX rex.WRX out sbbb cld mov retq (bad) sub add callq mov je rorb mov repz cmpsl movsb outsb sub ds (bad) or outsl mov fs adc iret jg and cs pop xchg pop jg data16 and sbb ja (bad) (bad) and cs rex.XB rex.WXB int3 mov cli leaveq cmp pop (bad) loope stos (bad) ss rex.WRXB data16 cmpsl push data16 stos js iret add mov sbb pop cmp insl int3 or movsl lock lret sahf xchg rex.WRB rex.WRXB pop clc and pushq jo scas (bad) (bad) movabs mov pop jb loopne pop in lret and or rex.WB lea (bad) push out pushfq pushq pop rclb loope (bad) (bad) jp sbbl (bad) mov fistp enterq sahf pop jne loopne std (bad) (bad) and (bad) gs cwtl add pushfq xchg (bad) xchg adc cmp (bad) mov fadd rex.WRXB adc callq sub and or (bad) pushfq (bad) (bad) rex.B adc rclb sub test data16 (bad) cmpsb stos xchg (bad) nop movabs loop and fisttpll sub rex.RXB and jp retq adc loop movsl adc fisubr insl push lock rex.WRX faddp (bad) (bad) cmp jp lahf insl scas lods xchg (bad) add xchg push sbb fistpll add push sbb in (bad) jb cmp (bad) cwtl rex.RB jl,pt mov pushq adc jo sahf sbbb rex.WRX xchg (bad) rorb xor adc jb adc test adc movabs (bad) cmc sub out mov jae and adc (bad) jmp add (bad) (bad) repz mov sbb jrcxz (bad) xor movslq xchg (bad) loop mov xchg movsl jrcxz scas mov pop fsubl mov jbe sub fs sahf (bad) adc mov mov je (bad) (bad) mov sbb or clc leaveq fildl stos enterq add ficompl sub mov fistpll mulb jno xchg adc lret hlt jb sbb movsb (bad) fst sbb (bad) xlat (bad) sahf outsl rex.RXB rex.WB js mov (bad) xlat test mov mov retq pop rex.X rex.R data16 lea and jp xchg sbb jnp and (bad) js shlb scas mov icebp xlat jg (bad) and pop cmpb lahf fisttpll cwtl fistpl (bad) push ror xchg rex.WB xor jle xchg pushq mov xor mov (bad) jno adc enterq cmpsb movsl jno out sbb jge (bad) cwtl (bad) outsl xchg (bad) hlt lea or sbb pushfq (bad) vpaddd or (bad) rex.X out fstpl sbb adc cltd retq (bad) negb and or cmpsb add or jmpq (bad) rex.W mov stos xchg imul mov (bad) (bad) jae pop in cmp data16 test imul ja test rex.RX cmpsl add xchg jno push ja rex.R out rex.W push sbb mulb or fs pop loop repnz (bad) (bad) clc xor jrcxz mov imulb mov pop cmpsb push test pushq mov xchg push (bad) jge lods jnp repnz adc movsb lods ror xor xor test mov rex.WR rex.WRB jne nop lcall xor outsl pop ja sbb enterq sti outsb mov pushfq (bad) jl (bad) cmp subl mov enterq lea scas mov out cltd retq mov push mov sbb addr32 (bad) (bad) movabs pop movabs movabs loop std cli insl (bad) jl mov and sbb sbb scas rex.W movabs movsl pop (bad) nop je out loop shrl (bad) out mov outsl ja lods mov mov pmaxsw pushq add scas shrl (bad) xchg lods jg movsl push and js pushfq push pop add pop addr32 mov jne cmp mov (bad) jg clc mov gs (bad) xor jl push (bad) test lea cs (bad) (bad) lods xor mov in (bad) (bad) pushq sbb sahf imul (bad) movsb jnp add addl rex.WRXB cmp scas rex and movslq cmp xor jne (bad) xchg xchg jmp adc sahf clc ss (bad) pushfq js cmova jmp lods jnp lahf sub rcrb (bad) cmpsl sahf out jnp scas (bad) imul cmp adc and jae mov pop jns jae movabs sub out mov rclb (bad) movslq imul out mov callq (bad) pushfq (bad) adc test lea mov jno xchg pop mov cmpsb jno xor or nop pushq scas cmp push rcrb cltd fmull xchg adc in and repz in in callq rex.WRX shlb cli (bad) movslq push sarb xor outsb and movabs movabs and xor adc mov rex.WRX jge,pt mov js jo or add jle (bad) and (bad) jae xchg enterq xchg cmp pop pop jb sbb rex movabs shll xchg xchg cmp xor xchg (bad) sub fiadd push jg (bad) rex.RX iret mov outsl mov xchg out (bad) (bad) xlat push rcr xchg sbb fsubrs sbbl mov (bad) ljmp sub xor (bad) lea mov pushq movabs js sbb (bad) and add mov int3 mov stos (bad) out (bad) jg movabs mov movsl add movslq pop mov cmp iret (bad) (bad) imul jg cpuid movabs and or jp xchg add cmpsl mov pushq out pushfq js xchg js add (bad) (bad) fs js loop jrcxz cmpsl mov push mov add subl scas and sbb in pushq movsl cmp retq sahf (bad) nop jbe (bad) xlat (bad) push mov movsl lea fnstenv pushfq xchg movslq (bad) (bad) jg lock (bad) add (bad) cmp movsl pushq movsl insb movabs subb int3 fldlg2 (bad) loope jrcxz fiadd or (bad) out mov outsl mov pop lods rex.WRXB mov in test mov jo movsl (bad) xor retq fisub (bad) stos xchg out (bad) (bad) outsb mov push sub outsb mov scas sub (bad) rex.RXB ss push jrcxz jb repz loop cs outsl (bad) rex.WX xchg movsl (bad) mov lret popfq insb movabs (bad) outsl cmpsb xchg sbbb int test and xor cmpsb retq rex.WB (bad) and (bad) (bad) add mov ja mov push xor adc mov mov icebp jbe in sbb mov pop movsl jp sub pop test (bad) mov or xchg xor (bad) cld stos adc sbb or lock adc or mov xor loop xor (bad) mov mov fbld cmp movabs loopne push rex.WRX mov sub callq (bad) (bad) and movsl cs andl iret (bad) mov or data16 lret rex.WX jne sbb pop rex.RB (bad) pop xorl xchg (bad) movb insl (bad) add (bad) add lret xor out cmpsl (bad) (bad) movsl sbb fsubrs in (bad) test rex.WX or movabs lret mov iret fcomp pushq rex.WB jnp outsl (bad) (bad) sbb rex.WX rex.RB stc rex.RB int (bad) in xchg rex.WR sarl rex.RB xchg sub or jns jbe or push and and repz (bad) pop in xchg jb adc mov enterq test mov out (bad) loope (bad) rex.WRXB outsl fnstsw (bad) int (bad) fcomip mov or (bad) (bad) mov jb lahf add mov push shrl pop sbb test rex.RXB (bad) cmpsb sbb rex.RB and or sbb movslq movsl sub (bad) nop loop movabs movsb test jle lret icebp jns (bad) jo stos out stos mov (bad) cli loope movabs cwtl stos (bad) push rex.WXB insl leaveq (bad) sahf ficoml sub add jo sub movabs mov clc pop sbb out adc (bad) xor outsb (bad) xor xchg (bad) add mov in stos cli fisub movabs jne mov js mov xorl (bad) add (bad) movabs leaveq (bad) movabs fsub (bad) add xor jbe ficomp mov xor mov (bad) (bad) ds (bad) push mov rex.RXB rcrl sub cs mov (bad) fimul (bad) hlt xchg lahf xchg push jmp add pop outsl lods repnz ficoml mov (bad) (bad) (bad) jle mov rex.WR (bad) xchg rex.WRX stos stc loope sub movsl testb (bad) (bad) (bad) nop fimull je retq ss cmp (bad) cmp (bad) mov cwtl push sbb sub (bad) add sub mov jl movsl movabs mov mov xor sti (bad) mov callq cmp rex.X iret sbb sahf rex addr32 je (bad) (bad) lret mov rex.WR (bad) rex.WB mov sub xor sbbb lahf stc jle sub jb (bad) push push mov pushq pop movsl pop fidivrl rex.WRB push pop xchg push and lahf sbb (bad) sub stos jnp nop pop xlat in rex.W jbe mov popfq loop cmc rex.WB pop lret and adc cmpsb (bad) (bad) movsl leaveq es add sub mov popq test push lahf cmp and mov mov jrcxz push cli cwtl jno rclb in pop test or mov push pop int adc (bad) js mov pushfq stc pop rep rex.WX xor lods jrcxz xchg cmp push fisub ds rolb jae (bad) out cld shrb stos cmpsb nop (bad) (bad) rex.WX subb and lahf lods (bad) rex.WRX (bad) cmc pop pop stos rex.W outsb xchg sbb and sbb (bad) push (bad) rclb (bad) jb xchg rex.B sub add lahf pop mov (bad) loopne,pn fbstp adc insb movabs scas and stos (bad) outsb mov mov test (bad) gs test push lret mov enterq data16 (bad) xlat retq mov lock cltd outsl mov fldt sahf xchg mov jl roll xlat out rex.RX mov and jrcxz ja outsb add rex jb adc faddp movsl js (bad) sahf test in rex.RX js adc rex (bad) and jle (bad) mov movsl insb mov repnz scas rex.WX mov (bad) ror shrl pop and (bad) in mov fistl enterq bnd jbe movsl sub jae (bad) js insl movsl lods movsb out fdecstp mov sub movsb callq sbb stos notl (bad) out js xchg mov and stos and insb mov cmc sarb rex.WRB repnz cmp fistp mov cmpsb or ror jne or cli jne lods xlat out mov (bad) mov mov (bad) fild xchg push adc in pop (bad) (bad) mov cmpl xchg pushfq mov outsb xchg (bad) sbbl rex.RXB (bad) fsubrs rex.WX retq mov hlt enterq fwait pushq lahf pop jmp outsb (bad) xor adc cmpsb out or rex.WRX mov (bad) movsl jg and repnz rex.RXB (bad) xchg pop or (bad) movsl out rex.WRB ds lock sti (bad) (bad) out fwait mov test test (bad) clc mov notb out (bad) adc xor sbb add sub xlat mov cmp mov xchg pushfq add sahf mov push (bad) sahf (bad) movabs mov push pop push push or adcb movsl sti mov mov xorb (bad) out mov or jbe outsl ds rex.W jle iret std pop (bad) clc imulq rex.X pushfq rcl rorb cli mov (bad) ja (bad) xchg movsb adc jge sbb mov insb (bad) sub push jnp out decl stos xchg push jno cmpsl (bad) test lret imul rex.WR ds movabs es or cmp sbb movabs jmpq sub sbb mov push (bad) and mov adc leaveq callq sbb cmp stc movslq (bad) (bad) mov add xchg ss out stos jg loope (bad) (bad) insl jg jbe jo fmull cltd mov cmp mov pushfq outsl (bad) mov js fldt cmpsb movabs sbb ss xchg rex.WB movslq (bad) mov jne rex.WRX repnz mov in pushq movabs (bad) (bad) (bad) (bad) fiadd insl (bad) int out movabs xor test insl (bad) add jle ds xor lahf (bad) loop subl repnz rex.WX mov rex.WB fisttpl jns shrb mov push nop or pop mov pushq scas (bad) (bad) or mov pop pushq jle jbe addb jl movabs movabs adc (bad) and sahf (bad) mov lock jg stos xchg lret movabs icebp and (bad) mov ja (bad) fwait jns xchg mov sbb fisub lahf add data16 pop (bad) loop (bad) movabs xor loop ljmp movsl test (bad) cmpl add mov movsl sbb pop (bad) lods repnz sbb ja and (bad) mov mov mov xor punpcklwd scas add push mov es sahf xchg xchg stos mov add adc in lods (bad) js adc (bad) and mov mov (bad) sub gs out pop jb rex.RXB stos in xchg rorl sub and stos in ja outsb jo out cmpsb pop movabs or rex.W (bad) or out jne out jp,pn (bad) jle or push jmpq rex.WRX fildll addr32 (bad) xchg fcompl sub addr32 (bad) sahf in rex.WB out movslq (bad) mov cmpsb cmp xlat rex.WRB mov cmpsb mov cmp (bad) (bad) retq (bad) jg stos scas rex.WR (bad) movslq (bad) (bad) xor sarb out xchg sub in in mov sahf outsb mov rex.WRB sahf (bad) pushfq (bad) cmp and movsl loope mov (bad) hlt jl mov adc test cmp imul mov lret jle or test movabs out pop loope cmpsl or jo rcrb (bad) loopne rol adc sbb je addr32 stc mov or mov (bad) pop mov ss out lods and mov fmull fisubr stos (bad) pop loopne mov rex.WR rex.X mov or jp add adc cmp xlat push iret sub (bad) sbb imul jp push sbb sbb movslq fidivr jnp loopne rex.X mov out repnz (bad) (bad) negl idivb sti mov movslq test cs add xchg or rex.WX outsl fldenv (bad) out (bad) pop mov movsb cmp jg and (bad) (bad) adc out gs xorl (bad) (bad) cmc xor (bad) nop mov shll or loopne,pn sbb and add lret sbb iret (bad) xor repnz mov (bad) or (bad) int jb (bad) mov mov (bad) cmp add or gs (bad) fistpll jb add jno push fdivp mov out add jb mov rol mov movsl loop,pt mov xchg fsub lods jo (bad) rol xor repnz sahf loopne or cmpsb icebp pop movabs mov je jbe sbb push mov callq (bad) lret jp xchg push xchg callq (bad) inc sti xchg mov out and mov out repz insb loopne rex.WX rex sub mov retq rex.WRXB xchg (bad) cmpsb xchg in out mov mov add scas rex ss (bad) movsl pop and lods mov ja rex.RB test js adc xor rex.WR and stos jns cmp sbb cld repz or rcr push or (bad) movsb jo and shl out in movsb jrcxz fs addr32 movabs loop movabs sub mov push rex.WRX push out sub mov xchg andl cltd pop and stc lods pop mov ja mov fiadd sub sahf jb sahf sahf movsl rex.RB xchg sbb nop adc pushq sbb sbb xchg jp (bad) adc pop and jp (bad) cmp sub adc rex.WX add mov movsl and outsb js mov sahf jmp (bad) insb rex.WB rex.WRXB sbb cli cmpb loope,pn add sbb sub adc jno mov mov pop (bad) int (bad) movsl shrl test sub sbb loop jg sub movsl adc and add imul enterq rex.RXB decl adc out (bad) movsl fiaddl or fwait test or loop scas fist shlb xchg mov test rex.WB (bad) movabs mov mov or movsl movabs movabs mov loopne in xchg push faddl cld rorl cs sbb nop or adc rcl xlat stos sti jae sbb fsubrl pop callq sub xchg fimul xor cmp (bad) (bad) es mov add shlb shrl insl rex.XB rex.RB sbb mov or (bad) (bad) ss jo negb mov lock xchg cmpsb gs out mov cmp jmp or ja xchg push and sub jae movabs rex.WX sarl push retq jno (bad) fisttp pushq fdivl outsb int3 rex.WRB cmpsb add xchg out loopne (bad) or movsb clc movsl loop (bad) adc pop outsb xchg or sbb pop add cmp test jns xor mov xor rcll xorl (bad) jbe add movsb (bad) fidivl and sti sbb js sub pop (bad) fs movsl mov cmpb mov (bad) fbstp outsb rex.WX adc repnz sub (bad) (bad) popfq and pushq sbb jle cmc sahf cmc mov xor rex.WR gs loopne jno and in rex.WX addr32 repz sbb xchg add jg loop rolb cld mov movsl movabs hlt (bad) insb rex.RX retq jno mov (bad) incl std popfq scas loopel decl xchg pop out vhsubps test or in mov cmpsb jle mov callq mov movb rex.WB jl or outsb retq mov loope movsl pop gs cwtl (bad) adc gs scas pop pop mov callq js or xchg jnp test (bad) push cmpsb pushq mov xchg (bad) out mov (bad) adc movsl (bad) test outsb xchg xor sbb mov push jns mov (bad) or mov rex.WRXB mov (bad) test lods (bad) jb int (bad) (bad) (bad) je (bad) adc xchg cs (bad) movslq int out mov and mov sbb cwtl xchg outsl ja repnz adc lahf psrad (bad) scas (bad) (bad) (bad) (bad) movsl (bad) stos cmp (bad) xchg rex.WRX (bad) pushfq sub mov in movsl out fs lock popq jbe iret je xor loope sbb stos xchg jb adcl or rex.WRXB retq (bad) lret shll insb lods mov rex.XB xorb mov rex.R mov testb in mov sbb jne retq xchg mov mov sbb jbe sub lods or lret subb rex.B lods mov cmc jne js,pt movabs (bad) sub cmp rex.WRB add add clc out rex.B lock and or and (bad) xchg mov sahf insb mov imul xchg adc (bad) mov rex.RX stos jmpq and (bad) insb insl fisubr lods sbb adc loope xor and push mov cmpsb pop push jl int3 (bad) int (bad) test xor jmp xchg clc test shrb xchg divb mov js fucom xchg xchg out adc movabs cmp insb clc ficom iret and pop xbeginq addr32 mov movabs (bad) jle jg lret pop mov out roll loope (bad) movd (bad) mov sbbl (bad) repz pushfq (bad) (bad) movsl (bad) xchg shrl retq cmp adc shll imul (bad) mov fsts and loopne hlt add movsl (bad) stos sbb jle xlat (bad) xchg cwtl out outsb leaveq (bad) in fwait (bad) mov fisubl in imul adc jb xchg or fadd adc (bad) add repnz add xlat sarb rex.WRXB mov outsl (bad) xchg pushq jp fistpll rex.RB (bad) sub rex.WB jmpq rclb sub mov (bad) fs lahf cli movabs (bad) jp cmp scas fistpl mov ds jb adc add jmpq rex (bad) jbe stc cmp pop cld xchg int3 mov jmp mov jno or (bad) imul cmpsb jns addl lock subl jp mov retq retq (bad) adc mov sub push xor out fucomip movabs imul lock push jne lea callq fwait xor and lret adc lock xchg sbb cmp sbb adc and push ds cmpsl or (bad) sub shr or or (bad) (bad) (bad) test mov pop add rex.WR sub mov mov out and adc jp xchg push jae pop (bad) outsl xor fldcw js out (bad) mov push stc (bad) movabs jg sahf movabs pushq jl and stc popfq (bad) outsl mov retq add movsb (bad) xor lahf mov mov jo movslq gs (bad) rex xor std jrcxz cld mov mov in xchg (bad) sahf movabs or stos loopne jge rol rex.RX lahf faddp fcomi pushfq cwtl jmpq jl (bad) out movsl jne insl in pop (bad) jg (bad) and lock rex.RXB (bad) or xchg lea test out mov js ficomp xchg nop (bad) add (bad) fistl movsb (bad) jle movabs outsb add rex.RX xor sub xchg outsl or test sbb and mov mov add rex.WX pushfq std jbe fcomps (bad) sahf int3 fwait add add (bad) cs loope push mov out sbb in rex.W fnstenv xchg pop push mov scas add scas jmpq orl out (bad) je xchg mov jne test mov (bad) out (bad) mov movsl std sub push jmp jae movabs (bad) cli and (bad) xor rex.XB flds je jmp (bad) cmpl mov test and (bad) pushq int3 lods ds out (bad) movabs mov xchg test (bad) adc and lret je xorb test (bad) cmp mov (bad) in and add mov loope int3 sbbb sahf (bad) lods movsb (bad) add (bad) rex.WXB push insl sub fisubl cmp nop sbb xor pushq insb xor shll rex.X jp rex.W outsb (bad) callq ja (bad) (bad) ja (bad) (bad) ja (bad) addr32 (bad) (bad) (bad) sahf sub (bad) je icebp sbb jo (bad) or andl push cs cmp xchg in xchg rex.WB xchg nop rex.RB gs int movslq int3 sbb movabs mov cmpsb sub (bad) (bad) outsl rex.B out in jle mov insb stc test jl (bad) sbb je (bad) iret fcomi (bad) lods test push xor hlt or add lea xor and xchg hlt movsl xor out (bad) mov jp xor push movslq mov out lret (bad) mov icebp (bad) xor rex.X (bad) (bad) (bad) movsl cmpsl fcompl lods out mov test loop retq mov (bad) (bad) loope (bad) jo movslq mov xchg (bad) pushfq icebp jle test cmc fs xchg and and add sub movabs (bad) ss jbe mov cmpsb ficoml movsl (bad) sti xorl lret movsl imul mov pop sbb cwtl jge test (bad) pop movb and and push shl movsl xchg add ja xor mov or mov pop addr32 mov jbe scas (bad) icebp addl xchg adc (bad) stos mov out (bad) pushq add (bad) pushq sub loopne sti outsl and mov push sti cmp mov pop (bad) fistpl cmp test mov mov jbe or xchg sub mov pop adc jo xchg (bad) int fs add add (bad) test mov testb retq rcr fcompl nop jrcxz (bad) cmpsl stos (bad) add pop (bad) pushfq (bad) stos push adc insl (bad) in imul mov fsubrp (bad) out rex.WR outsl (bad) (bad) (bad) repnz retq jg rex.B sahf (bad) adcb jno fidiv or fidiv cwtl cmpsl test (bad) lods fisub outsl rex.RXB test out (bad) movabs fmull (bad) mov ja rex.WXB and lret sahf push retq shrb nop add test mov loopne subb out jle movslq je adc rex.B rex.X pop jmp hlt rex.R (bad) lock (bad) (bad) je rex.WRX mov rex pushq fsubrp je (bad) cld (bad) pop mov push (bad) xor insb lods rex.W sbb adc cmp add adcl push (bad) pushq rex.WRX rex.X (bad) data16 in rex.W mov (bad) ds or stc xor xchg test adc cwtl shll mov movabs (bad) push ja add stos fsubs fbld cmpsl and adc (bad) (bad) fsubs adc ss movabs fs (bad) (bad) (bad) xchg test mov sub (bad) ljmp jbe vmwrite and (bad) pushq enterq testb xor rex.R loop xchg sbb lock jle cmpsl out js addr32 mov sub (bad) (bad) (bad) lock je (bad) (bad) loope loope and in mov pushq (bad) xchg stc mov (bad) retq mov cmpsl xchg (bad) fdivrp movabs mov std loopne scas movsb (bad) lock jg or sbb jnp add lock mov pop sbb clc push (bad) (bad) (bad) ja xlat and nop push rex.WRXB pop fisubl or mov xchg rex.WRXB (bad) fstpt push outsl cwtl test cmpsl cmp (bad) (bad) cli add xchg rex.W or add mov add add pop callq mov shlb rex.WR (bad) movsl and jo scas out rorb adc rcll jne xchg mov cmpb mov fmul rol rex adc (bad) adc (bad) and cmc xchg jo addr32 test jb xchg (bad) out hlt rcl movslq xchg xorb (bad) (bad) gs mov and sub xchg loop pop jmpq out movsb xchg rex.WR popfq and adc rcr rex roll (bad) pop movabs imul sarb (bad) addr32 or add sbb add push in rex.WXB rex.RXB movsb movups and retq xor je (bad) pop (bad) hlt mov (bad) mov or data16 jle (bad) add imul (bad) rex.W sub ja test orl mov mov addb out mov pushq enterw scas stos push mov adc insb sbb xor push jno out adc pop outsb mov mov scas adc (bad) out fnstsw out sbb jrcxz cmp movabs xchg pop lods mov (bad) xor mov repz add sbb loopne pushq fiadd sbb (bad) rex.WR jge lods imul adc (bad) mov lgdt mov (bad) lods push jne rex.WRX jg sbb jle (bad) jg cwtl out mov mov rex.R pop rex.RXB in (bad) scas test int jns ficom xlat sahf ss test nop es (bad) in xchg lods (bad) xor rex.WX (bad) xchg xchg fmul mov stos mov rex sub in mov (bad) cld pop sbb ficomp rex.W mov mov and cmpsb loopne (bad) sub or in movabs (bad) repz or rex.WX xor sbb fsts adc adc pop test stos fdivrs (bad) mov fdivr and mov mov or jle sahf es clc (bad) push movsl (bad) jnp out out mov mov pushfq mov outsb (bad) sbb pop decb (bad) pop jl test rex.WX packsswb sub test test cli sahf outsl scas sub pop mov cmp loopne jmpq movabs xchg pushq (bad) mov (bad) rex.WRB insb cmpsb (bad) (bad) in rex.XB testl insb rol (bad) (bad) fisttp cmp stc ja (bad) xor xlat pop outsl jle mov xchg jp int3 test test pop cwtl icebp rex.WR fldt data16 lods pop mov loop out add lods and retq out jle pushfq mov push imulb stos jrcxz lret rex.WRB scas lods movabs lahf outsl xor (bad) xchg xchg loop (bad) mov rex.WB std movsl cli shrl movsb (bad) (bad) fucomp mov or (bad) lret movabs lahf je movslq (bad) mov lods loopne rex.WRX xchg xchg xchg movabs in fcomps jbe insl jb stos enterq sbbb clc and loope cld (bad) xor rex.WRX (bad) xchg (bad) outsl (bad) pushq and pushfq jmp je mov test fucomip out mov sahf enterq movsb add sub outsl int3 movslq insb adc out pop mov orl or enterq mov loopne sub pop loopne and ss mov pushq jrcxz mov movabs jno or loop mov jo lods (bad) repnz jmpq out (bad) cld loopne stos jrcxz push mov mov decb xchg lods (bad) rex.WRB cwtl rex.WRXB xor cmp cmp movabs or (bad) rex.B (bad) and sti fist (bad) lods jp test sbb sbb lods out in rex.RXB cmp callq lock cbtw mov scas (bad) jg add and adc enterq push in and (bad) cmpsb xchg xchg subl in (bad) cmp sub mov out push gs rex.WRX add xlat fadd xchg or jg ficom xchg (bad) add movabs jnp adc out sahf movabs stc pop pop je mov (bad) xchg jno adc add and (bad) cwtl stos (bad) callq cmp icebp sbb mov push pop movabs mov jne leaveq pushq lret (bad) movsl mov pop pushfq outsb fnop and hlt ss fwait loope jle jae testb or cmc test xorb cmpsb lret (bad) lret icebp iret jg and (bad) cmc cmpsl stc outsl std sahf and icebp push pushq xchg jb xchg movabs jrcxz adc cmp (bad) (bad) stc rex.WRX sub fistpll std repz stos rex.WX lods test (bad) and outsb add lret (bad) scas js (bad) test or fs ja cmp jns mov push sbb fildl push std mov pushq mov sahf or jle mov xor movabs sbb mov (bad) jb rex.WRX lret fiadd pop es je or mov sarl in (bad) pop jbe or sbb retq outsl callq jb sbb sbb jg mov pop out (bad) sbb xchg and mov pop pushq pushfq sbb mov test cmpsb movabs mov shlb loop (bad) (bad) cmp pop xchg add push insb enterq out (bad) sarb sbb (bad) mov xlat sub pop (bad) jmpq sbb adc jo outsb stc pop (bad) out (bad) adc cld mov mov (bad) mov xchg fimul xchg mov rex.X jg push lret loope (bad) pop movabs (bad) movabs cwtl (bad) fimull push or cmp scas test fidiv lcall xchg mov loope iret mov frstor jrcxz xor movsb je lahf outsb add jg outsl cs rex.WRXB (bad) imul out and stos rex.XB lods ds (bad) outsb rolb jb jmpq xlat lret js (bad) out retq pushfq (bad) scas (bad) movabs (bad) jg pop imul or sub imul (bad) (bad) cli pop push hlt test retq jmpq or or lods repz je (bad) jmpq test mov lock callq ficom rex.WRB sahf mov stc (bad) xchg neg adc jnp out rex.WR sub sbb mov repnz mov movabs enterq pop lea imulb sub cmp movabs (bad) lahf movabs fisubl (bad) xchg jae (bad) ja rex.WRX (bad) (bad) xor lock fildl movabs lret sbb pop pop stos xchg lods jns jg fcoms (bad) pop pop (bad) xchg loopne outsl and (bad) insb movabs imul cmpsl nop ds xchg push lahf jge shlb jp lods (bad) ficomp lahf fimul fiadd cmp mov xlat fistpll cmp (bad) data16 or clc (bad) mov (bad) push sub mov sarl fmulp and or cmpl lods sbb ror mov add mov loope es lahf (bad) mov adc mov in (bad) or push rex.RXB (bad) icebp mov test sub sub out add int rex.WR scas xchg adcl jne jle rex.RX (bad) mov jne sahf jp (bad) cmpb jnp stos jle jp scas out stos stos addb in repz sbb divb cs sahf js xor stc mov adc sahf xor mov or mov es add lock in cmc js imul and lods (bad) andb lods add rcrl int3 test cwtl (bad) insb or (bad) (bad) sbb outsl test (bad) and cmpsb insb pop xchg hlt pop (bad) addb movabs insl or (bad) fsubl retq outsb sbb jnp mov pop sub mov mov out stos movabs rex.WRX push movsb lods (bad) mov xchg mov sarl clc fimul mov callq rol mov jbe scas ja movslq rex.WR js pop xchg loope push in fcomps nop and outsl sub (bad) out mov movabs (bad) nop (bad) fcmovnbe movabs lods mov (bad) fsts rolb (bad) mov rex.WB rex.WRXB insb clc add div and pop sub (bad) movabs mov nop test add imulb (bad) repz pushfq jns imul mov mov repz sub cli or (bad) ss mov out movabs sbb rorl cmp movabs movabs (bad) rex.WRXB sbb cmp add jmp lods retq adc movabs xchg jnp add jb (bad) mov sub icebp je je xchg cwtl jrcxz jmp imul pop mov int3 mov rolb callq lods (bad) fsubrp (bad) pushfq nop sahf xor adc xor and cmpsl add rex.XB cli pop lret pop mov jns int3 outsb insl int es jmpq cmpsl pop (bad) mov or cmpl xchg jrcxz sahf xor pushq out ljmp outsl sub outsb test outsb cmpsb (bad) mov out fs test hlt sbbb rex.WXB and loopne xchg mov je sbb idivb (bad) rex.W adc jg gs (bad) out mov rex.RXB and mov mov movabs ja movabs xorl jl test xchg iret in test xchg in insb rex.WX js test (bad) idiv cld mov fsubrp div movsb movsl xchg (bad) (bad) movsb (bad) ffree sbb (bad) scas (bad) mov rex.RX rex.B mov mov adc lods (bad) (bad) and add add mov imul add mov jo jbe mov cli (bad) stc rex.RX jrcxz (bad) mov lret scas mov mull rex iret lea rex.B pop xchg movabs jp mov std movslq int3 rex.WR mov jp (bad) pushq sbb push iret pop sbb icebp popfq mov (bad) (bad) mov pop xchg (bad) movsb jbe (bad) mov rex.XB rolb xchg (bad) jp (bad) outsl rex.WB (bad) jrcxz add (bad) jmp adc xor cld in or rex.WX pop movabs test stos lods fimul (bad) (bad) mov fcoml movabs iret sub mov pushq sub test mov jmpq pop (bad) insb adc cmp (bad) cmp pop and or jge iret (bad) xchg sbb add movslq addr32 (bad) out shld out cmp loopne test sub cmp addb and add bsr leaveq pushq (bad) loope adcl fsubrs (bad) mov push rex.RXB xlat adc sbb sti (bad) insl push rcrb js movabs jmpq fwait pop test pop roll fidivrl clc lock rex.RB mull stc mov push xchg test mov add fdiv cmc mov pop lods or in je cld movsl nop pop stos xor icebp sbb int3 xchg rex.WRXB cli fcmovnb pop mov (bad) rex.WX scas cmpsb negl jns (bad) mov xchg (bad) pop xchg pushfq mov mov lret mov addl mov (bad) cmp adc sbbb fmull rex.WB (bad) cmp loop adc jrcxz or (bad) movsl push mov and push and psubb pushq loop cmp lahf add in jbe imul pushfq mov andb cmpsl (bad) insl (bad) mov lods ficompl lahf jne pop pop cmp (bad) (bad) mov (bad) lret je rex.WRB xchg xchg in cmp (bad) adcb (bad) (bad) loop xchg (bad) pushq rex.WB (bad) test (bad) movabs movabs mov fs sub sub jns pop lods pushfq repz fdivrs movabs idivl xchg push scas sub outsb ss rex repnz push andb or push pop out sbb (bad) pushq push (bad) loopne jmpq adc cmpsl add xchg out lods fdiv jle mov mov pop pushq insl xchg xchg test rol test movb (bad) outsb xlat jns (bad) clc negb imul mov push (bad) (bad) jle sub push out je jmpq cmp adc hlt rex js cmpsb insb gs (bad) xlat adc cmpsb (bad) xor testl (bad) fwait and mov addr32 cmc neg or or push (bad) in mov cmp pop xor scas xchg (bad) (bad) lahf rex.B fdivs add or sub pushfq out outsb (bad) mov insl (bad) out adc scas mov stos stc sbb cmp rcr loop jle cwtl (bad) fwait movabs jg jmpq push mov mov (bad) fwait clc (bad) fiadd add cmc fisttp test scas stos mov je out xor repz out cmpsl (bad) cli mov mov ss push je mov xchg loop rex.RXB sub xchg (bad) jle movabs sbbb pushq out pushq sbb or vpmovmskb jrcxz,pn xchg (bad) pop push lret loopne movsl (bad) out stos rex.WXB add (bad) lret sub (bad) mov xlat and (bad) shrb (bad) loopne mov xlat cmc stos loopne decb cmpsb movsl stos in and sbb pop test xor rolb (bad) cmc push (bad) rex.W xchg enterq movsl mov jbe fldcw jns movabs pop pop std rorb or (bad) adc lahf (bad) in (bad) xchg jo mov rex.WRXB xchg mov mov cmc sarb in hlt movslq push xlat fist sbb and cltd push mov sahf and mov icebp (bad) mov gs in pop sub xor add cmp and pop add sti add mov (bad) add push xchg xchg mov in jbe xchg stos (bad) pop jg (bad) pop adc xor out jle ja movsb push and pop stos (bad) (bad) jge sub pop mov cld icebp pop xorl lods rol in (bad) imul (bad) xor mov sbb fsubl test mov rex.RB fst fimull outsb cmc gs jg mov js xor sub sbb addr32 nop mov pop sub rol imul sbb in test cmpsl (bad) pop cs sbbl rex.RB mov mov in test mov xchg in rex.RXB jg jbe (bad) lods stc cmp insb xchg jg (bad) in (bad) jle nop pop jbe test xchg loopne adc jo (bad) fisubr xor (bad) hlt data16 mov (bad) jmp fmulp lret imulb rex.RB fnop jb push (bad) jb movabs (bad) (bad) insb mov jge and cmpsb jbe stos rex fldln2 lea js pop sbb push pop (bad) (bad) and repnz jg addr32 or test and in jl movabs xor mov icebp scas lods mov and movsl and (bad) and rex.WRB jo xchg movabs in loop outsl loopne cmpsl sub jnp int fiaddl or movabs sbb stc fiadd cmp icebp add mov mov jl scas mov movsl (bad) and fidivr ja (bad) push add push (bad) loopne fcompl test lahf push or jge clc jle (bad) cli (bad) or or addl fs mov mov sar int cmp fisubr xchg fist and loope sbb or rex.WX xor sub negl loopne (bad) xchg loope (bad) ds xor imulb cmpsb movabs (bad) (bad) lods rex.R mov retq loope xor sbb test add test (bad) adc push mov popfq movsb (bad) (bad) cmp and adc mov sbb or sub rcrb (bad) out and and sub out gs xlat sub adc out mov push (bad) adc adc jae xlat cli pop adcb jl (bad) adcb mov mov sbb jb cwtl jbe ror (bad) movsl cmpsb movsl cmp jbe sarb sahf and or sbb (bad) cwtl and push fidivrl rex.WB mov push pop clc test fimul jae cwtl ja sub (bad) cs mov cmp mov leaveq mov or and negl rex.WX jmpq mov (bad) jmp repnz mov (bad) (bad) add (bad) mov sub out (bad) (bad) retq scas (bad) movabs pmaxsw lods test retq xor jne xchg loop out cmpsl jrcxz adc sbb (bad) push (bad) pop rex.WRX pushq pop cld pushq (bad) xor je jp mov jle sub mov (bad) fidiv add mov jns out (bad) xor movslq xchg fisubrl out rex.WB cmp cmpsb push fiadd stos (bad) je (bad) pop xchg pop data16 or add sbb mov jb insb adc movsb jns and or mov xchg cwtl adc xor in mov (bad) stos test cmp sahf (bad) jo push sbb andl in sbb (bad) (bad) fisubr sbb rex.XB (bad) jns (bad) push cmp imulb mov sub pop stos (bad) sahf rex.X fildll cld (bad) (bad) mov repz add jb rex.WXB rex.RXB orb mov cmp (bad) retq out xchg pushq push mov (bad) (bad) pop (bad) (bad) jns test mov lret jmpq (bad) fcmove mov mov pushq movabs rex.WRB jb lret mov (bad) and pop mov roll xchg pop ss (bad) pop xor mov mov (bad) (bad) add (bad) in rex.B test sub test xlat cmpsb push adc enterq testb outsl (bad) xchg xlat int3 in add adc lods adc imul lods movabs xor fs rex.XB imul cmp push movabs mov cmpsb retq sub cmp mov add push add es test lret jg xchg loope jg rex.RB frstor mov imul pop orb rex.RB rex.B add jo mov js rorl cmpsb xchg cwtl stos add or push mov fiadd xchg callq iret outsb (bad) xor sbb (bad) jge fcoms pop stos rex.RB (bad) sarl hlt jrcxz push rclb ss loop jno hlt and lret (bad) mov rex.WB (bad) (bad) rex.WRB lahf (bad) loop push add in rex.WX sub rex.RB lods pop mov out mov in rex.RXB xchg in data16 cmpsl xchg mov lea (bad) out sahf out adc pop stos lahf (bad) (bad) loop sahf jp je sub shlb jmpq (bad) stos mov pushq and data16 (bad) rolb outsl pop (bad) mov test cmp mov add fiadd testb outsb jne (bad) test xchg jp jo outsb or jo or rex.WRB pop mov pop (bad) clc stos or fsubrs jns callq pop (bad) jnp (bad) outsb test jle outsb cmpsl (bad) lods rex.X stos mov mov (bad) add xor lods jl sub cli outsl cld (bad) mov mov sbb pop repnz sbb xchg adc fucomip stos fiaddl mov (bad) movsl push xor out ss cmp mov in jmpq addr32 mov (bad) rclb movabs (bad) fisubr insb test fs rex.XB sbb sub outsb fsubrl (bad) mov cmpsb mov push sub fwait and adc (bad) scas movsl add push (bad) cmpsl sbb out xor jo xorl lret (bad) cmp xor (bad) test mov test mov loope jl xor mov mov lret jb mov cmpsb and gs jns rex.WB outsb xchg mov mov rex.WRB (bad) adc loope retq cmpsb cs lods (bad) push js rex.WB repz mov jle add add sub (bad) (bad) (bad) (bad) cld stos sahf push out out mov pushq mov (bad) loope push pop andl (bad) sahf loop loop adc (bad) jbe (bad) mov push mov and xchg pushq movsb out or out mov pop adc int or mov rex.WRXB (bad) jbe addr32 movabs loop push jns xor xchg push movslq or (bad) (bad) test sbb jrcxz cmovb (bad) fsubrs pop pop mov (bad) movsb push cltd je (bad) sub xor sbb cld gs (bad) in cmpsb (bad) mov (bad) adc sahf movabs (bad) cmpsb (bad) ficom or jae iret jo jbe in mov jb movsl (bad) mov mov (bad) xor int3 pop es lock shrl movabs or (bad) movabs push lahf movsb stos mov push adcl xchg or shr movabs (bad) push jns mov (bad) adc (bad) shrb pop mov lret or rex ficoml sub mov ja or gs adc (bad) fdivl xchg jne (bad) sub (bad) (bad) or cmpsb mov jbe pop (bad) jne cmpsb (bad) sub jb imul cmpb iret mov mov insl rcrl jp jb (bad) outsb and pop and sbbl xlat push jl (bad) faddl out (bad) add ffreep movsl (bad) sub and (bad) cmc adc outsl movabs sti sub mov cld rex.WRB mov rex.WRB repnz or pop movsl (bad) mov lea out (bad) jl fdiv callq rex.WXB mov push and mov rex.W repnz movabs loopne pushq cmpsb jp (bad) roll (bad) pop es cmpsb (bad) ss repz lret mov addr32 cli (bad) jae xor (bad) xchg mov js loopne xchg stos (bad) in movabs in push push outsl movsl js (bad) out sub sbb addr32 xor scas js and add test mov in movabs (bad) mov data16 jb pop in sub addr32 or std std (bad) scas jae push repz (bad) repz cli (bad) sbb (bad) or in pop (bad) nop xor cli (bad) rex.XB rex.WRB pushq xor rex.WRXB adc jmp jmpq hlt and outsl lock mov jb test jb nop mov repnz jo jne lods sbb mov mov sbb rex.WRB lods repz sbb int3 lods or push jg add cmp sbb push pop lock sub outsb or fisubrl (bad) mov xchg (bad) jmpq loopne (bad) jno fsubp scas rex.RB jmp movabs rex.WX movsb insb lods jbe mov (bad) in cmpsb sbb loopne mov sbb push in ss rex.B (bad) jo (bad) or (bad) rex.WRX mov add out jne or add push outsb sub or fidivr adc in sub (bad) mov lods movslq jle add add rex.XB scas je je es cmp (bad) mov sahf adc rex.WRX (bad) sahf push rex.WRX push imul sbb sub clc outsl movabs int3 xchg lods add push push test jno enterq repz rex.W stos xor jbe xchg sbb fiadd xor pushq rex.RXB jrcxz jb mov jo mov add movabs insb rex.W adc lahf lret jns mov sbb divb rex.WRXB ss (bad) xor repz push jrcxz scas (bad) outsl (bad) out lods (bad) outsb repz lcall or lods sub out and fistp mov in push (bad) loopne jae add xor push (bad) mov adc and mov rcrl cvtdq2ps cli (bad) cwtl mov fwait jmpq or adc mov rex.X sbb or xor jg movabs (bad) adc or push outsl cmc decb insb push xchg movabs rcrb (bad) mov callq mov adc imul sahf retq adc mov mov lock mov (bad) mov loope rex.W pop xchg xchg movsl xor sbb pop (bad) repnz lret push sbb stos fisttp mov sahf mov jns mov scas rex.XB jnp pushq cwtl xlat movabs mov mov mov mov js cmp in shlb cld subb movabs andl out (bad) fs mov rex.XB rex.R (bad) (bad) add (bad) sub outsl pushq divl (bad) and mov mov or rex.RB movabs cmp sub std (bad) fsub js mov pop (bad) lods mov insb push insb pop xchg in pop mov xor adc xor int3 mov in pushq jmpq sub je jb callq out test js imul xchg (bad) mov rex.RB movabs pop mov pushfq jp pop xor rex.XB test sarb mov jl push jno (bad) in in adc (bad) sbb mov outsl stos fs mov adc (bad) adcl or jge rex.RXB test xlat repz shlb (bad) out imulb fidivr addr32 mov xchg int3 xchg sub xchg loopne pop jmpq mov cmpsl movsb insl sbb and cmc rcrl xchg out lahf sbb jnp fist (bad) fs xlat rex.RB rex.R (bad) nop rex.RXB movsl (bad) cmp mov (bad) ss add insb outsb sahf je shrb jb rex.WB xchg (bad) (bad) movsl out xchg mov add enterq lret pop pop movabs andb fwait test or mov (bad) (bad) shlb lret adc (bad) jns mov xchg adc mov jae or callq mov (bad) xchg push push and (bad) (bad) sarb (bad) movsl std data16 es pop jno xchg retq xchg or (bad) retq (bad) (bad) lock pushq lahf movsl nop cmpsl fldln2 push outsl push loopne rex.WRB or loope push xchg push mov fdivrs sahf mov fnop and pushq cmp (bad) (bad) ss sbb fwait jp xor (bad) cmp in (bad) imul mov lock cmpsl (bad) and rex.R mov roll (bad) jo xchg mov cs and in enterq mov sbb rex.WRX jmp and (bad) sti js out cmp outsl jrcxz gs loope lret or movabs cmpsl (bad) jb add mov rex.WX sbb sbb mov jb movsl xchg lret mov or jl and repnz rex.WRB jbe mov pushq and (bad) jne mov pop cmp (bad) js pop pop mov jp push (bad) lock js addr32 loop ficom (bad) loope push adc cld movsl test push sub mov add mov (bad) xchg pop rex.WRB repz rcr in in mov fcomps fistp rex.B rex.WXB rex.WX jg jbe pop in push adc roll and pushq (bad) lret imul (bad) test movsl (bad) mov xchg xor cmp xchg pushq pop addb movabs (bad) enterq and sbb fistpll or shlq mov mov (bad) (bad) rex.WB jae in xor cmpl add hlt add divl test ficompl (bad) pop mov sub add inc pop adc sti int3 addr32 cmp and xchg (bad) sbb (bad) fdivrl (bad) jb and or (bad) (bad) fidiv fs cmp xchg pop fistpll (bad) movsl (bad) rex.WB repnz fs mov jrcxz sar idivb es (bad) xorl pushq hlt (bad) retq and cmp cwtl outsl lods (bad) rex.WB rex addb and xchg out movsl push test add pushfq mov pushq fstl ds ss pop pop mov mov (bad) rex.WXB movabs jne rex rex.WB fisttpl loopne rex.WX (bad) hlt mov jae sub add scas xchg fsubrs idivb (bad) jae loope clc jnp (bad) fwait push push (bad) movabs pushq jbe jno lock fisub stos jbe jb pop (bad) mov rex.RX ss or push rex.RXB retq (bad) lods cmp and mov rex.WB addr32 jmpq hlt cpuid (bad) mov rex.W sbb test scas or movabs mov cmpsb lods xor cmp movsl xlat fdivs sbb sbb jle popfq cli je fmuls xchg sbb cs cmp rex.B stos lgs pop mov sub loop push jl (bad) mov add lods (bad) ficompl push and pushq mov movsl adc mov jg mov mov sbb callq lods (bad) je sbb (bad) retq rex.WRB fnop out lock and outsl xchg sbb out or loope fstps rex.XB rex.WB xor repnz push xchg (bad) (bad) pushq mov movabs stos out add (bad) jle push rorl sub lea pushq xchg mov lret adc xchg push sti stc test out pop cmp (bad) jnp add sahf xchg out xor enterq test (bad) movsl or (bad) xor cltd pushq (bad) jne mov stos repz paddusw (bad) movsl sbb (bad) outsb jl (bad) or mov pop rex.X mov rex.WR (bad) fistpl (bad) xchg xlat imul add (bad) rex.WXB push adc add sub jns loope push sahf sahf imull (bad) xchg and mov rex.RX jmpq addr32 scas ss jb je lods pushq callq and (bad) imul adc pushq movabs mov movabs leaveq rex.RX rex.WRX rcrb xor jrcxz jb ss xchg rex.WRX push retq rcr fidiv lods jmp js jmp frstor (bad) add xchg in in out fmull sarb out jl ss or xor jmpq mov sbbl scas sub mov (bad) sbb rolb roll jnp jo pop sbb test add popfq rex.WRXB sti mov movabs imul mov sbb cmc callq xor mov shlb test int xchg or or rex.RB add push pushq (bad) ror xchg fimul xchg out (bad) movabs loop jge and rex.W rorl lods addl iret idivl (bad) in rol stos or pushfq in test fistpl fs adc je or or sti rcrb or mov fnstcw add sub or mov cmp out insl xchg nop adcl pushq sbb rcrl outsl in or sub test xor decb rex pop in xchg (bad) sarb cld negl lret pushq movabs push scas es ds pushq outsl outsb rex.B cld (bad) jmp pop add jle rex.WR retq sub rolb ds xchg rex.X andb or je mov push sti mov movb sarb xchg xchg mov sti rex.WR and adc (bad) fdivs push sbb out fdivs retq mov test fs fisub (bad) out pop lea je lods rex.WB (bad) and (bad) repnz cmp shrl pop mov xchg push movsb jp iret add push je cmpsb imul rex.RXB (bad) (bad) (bad) jmp (bad) mov pushq add adcl movsl test jbe or and shr (bad) (bad) push mov (bad) sub hlt movabs add xlat in loopne pushq pushq cs (bad) sahf idivb (bad) callq mov push imul (bad) (bad) ss scas (bad) jbe rex.WB rex.WXB fisubrl xchg (bad) std loop (bad) movabs cmp sbb (bad) (bad) repz xlat jle add outsb addb jne out (bad) lods ljmp or mov int3 imul bnd rex.WRXB fs lods xor test in push sub movsl movabs mov fdiv cli idivl xor pop add rex.RX (bad) mov out jrcxz cmpsb sbb repz jo pop jle jne cmpsb mov mov (bad) test (bad) movabs pushq jl jmpq stc (bad) fldenv jl fldenv movabs fdiv (bad) add adc movabs adc hlt push in and jl sub add cmp rex.WXB xorl cli in repz add (bad) pop movabs cmp (bad) hlt mov pop scas mov fldt cwtl pop mov jrcxz sahf data16 lea mov rex.X js push xchg pop loope xlat xor stos loop js es test pushfq (bad) cmpsl cs mov (bad) sbb (bad) (bad) (bad) mov movabs xchg gs mov fisubr adc xchg mov rcrl stos push rex.WR add ds rex.WXB incb cs out and mov cmpsb mov and mov mov (bad) jl jno mov (bad) icebp mov and xchg jmp outsb mov rex.B xlat (bad) push push subb enterq xor fistp or (bad) in lock sub lods (bad) sbb enterq frstor insl rol sbb push insb movsl lods rex.X lahf mov imul jbe mov test and sbb stos pop negb fdivr movabs scas subl (bad) cmp add mov movabs (bad) loop out (bad) nopl add jmp jo es movsb adc outsl rex.RXB (bad) xor cmp iret fucomp sti (bad) loope enterq (bad) movsl cmc imull xlat or repz movabs xor rex.XB (bad) push sub mov mov repnz repz lods (bad) pop cmc punpcklbw sbb xchg addl outsl pushfq (bad) popfq mov test test (bad) xchg nop jo xchg movslq and mov scas (bad) addr32 pushq in jae add sbb jne fdivrl jae or sub jrcxz rex.RXB rex.WXB mov sbb insb movabs addr32 je sub rex.WX mov jbe jb (bad) mov test shrb xlat in jp mov repnz pop addr32 iret (bad) (bad) movabs in js (bad) clc (bad) out or xchg std movsb enterq imull orl loope out xchg jg (bad) movsb loopne cmp sbbb enterq (bad) movabs fisttpl rex.B sub (bad) add adc mov (bad) sbb sub (bad) mov (bad) rex.WRB hlt jg and (bad) iret mov (bad) push repz (bad) sahf (bad) (bad) xchg cmpsb sub cmp rex.WX xchg xchg movsl test add sbb fidivrl push (bad) (bad) push add pop std scas (bad) test jl rex.WB pop in je sarl xchg sub push lods movslq outsb xor mov lods adc jl or jnp jbe movsl mov outsb add or fisttpl stos xor mov cld out xchg mov jmpq mov jl and callq mov mov push (bad) rex pop (bad) js xor bswap je rex rex.X mov callq rex.RX add std in (bad) (bad) retq cmp jnp (bad) test movsl adc movsb adc adc mov mov rex.WXB rex.RX (bad) rex.X rol cmp push ja test in cmp mov xor mov fucomp jbe movabs sub out xchg mov sahf sahf andl (bad) adc movabs (bad) or sbb lods mov push testb jae movabs test movabs jbe (bad) (bad) mov mov sbb in int3 (bad) sub jo (bad) fsubl mul lea and pushq enterq mov push cmpb or js xor adc rex.WB (bad) (bad) mov or andl rex.WR (bad) (bad) xchg mov sti jmpq loope mov mov xor clc lods rex.WR sub mov lahf (bad) ffreep mov movabs sti negl jbe mov out or or cmpl mov (bad) (bad) cmp ss fidiv (bad) repz (bad) outsl fbstp rex.WXB fcompl test rex.W rex.WRXB (bad) loopne cmp ftst pop rex.WRB data16 out pop xor sbb (bad) stos add addr32 and add mov or bnd fsubl rex.RXB repnz js adc mov push (bad) orb jmp test (bad) sbb adc movabs jo pop sub add cmc movslq mov pop std rex.X imul (bad) movsl (bad) (bad) (bad) mov (bad) (bad) or xlat or sbb cld (bad) (bad) rex.WX cmp or (bad) xor (bad) insb popfq (bad) (bad) jo data16 xchg mov mov cmp mov jrcxz jl int3 (bad) (bad) push in fbld (bad) push rex.WB data16 out jne loope (bad) callq mov or cmp (bad) in sub and fisttp outsb insb popfq mov (bad) xor adcl (bad) mov (bad) movabs mov and ror add pop sub mov nop rex.WB mov scas cmp andb xchg push (bad) or lods (bad) outsb outsb rex.RXB mov pop rex.RX js (bad) movabs (bad) sahf mov (bad) rex.WB (bad) movabs sahf (bad) rex.WB subl adc popfq cli xchg movabs push jrcxz pop (bad) sahf (bad) jle push (bad) pushq add sbb jl push sti orl jl iret fs pop xchg sbb mov pushfq and je sub out movsb sbb sahf insl adc jl cmp jo mov cwtl movl mov sub sub test mov pop sbb rorb sbb in cs lods pop lock xchg push callq rex.B repnz or fnstsw fsubrl lahf stos adc (bad) mov sub (bad) mov cmp cmpsl jrcxz (bad) and pop movsl out movslq sub lahf mov cmpsl enterq repz pushq enterq shll (bad) pop cs xchg or test (bad) lahf sub mov mov jg sbb fdivrl pop imul enterq (bad) fsubp mov callq or mov clc in test or movsl ds (bad) cmpsb jbe mov faddl (bad) cmpsb xor scas xchg loop cwtl cmp je test add jl mov mov sub jbe mov (bad) (bad) rex.B cmp rex.RXB addr32 mov scas xchg mov jne jno push cs (bad) and in mov fild loope and in cld mov mov sbb movsl (bad) lahf cmc mov mov pop (bad) scas decb addr32 (bad) cmp mov retq insl je push cmpsl (bad) test pushfq (bad) (bad) sub lea loop loopne callq cmpsb pushq movslq std (bad) loope xchg enterq fcomp xor jbe and pushfq pop xchg jl or test enterq and rex.WRXB mov loop lods cwtl (bad) pop fcoml (bad) sub rex.WX jmpq sbb outsb std push mov scas insl je adc sub (bad) mov in or and cmc in ds xchg ds stos cltd mov mov cld mov mov cmpsb (bad) cmp xchg sbb repz (bad) rex.R pop out jo (bad) mov and lahf (bad) (bad) and jne (bad) xchg or pushq adc fnstsw lea lods rex.RXB stos orl pop sub jbe outsb or jg sahf mov stos mov sub mov (bad) jo and clc xorl (bad) (bad) jbe (bad) sub jp rex.WRB repz mov pop and sbb je or lret xchg cmp jrcxz push addr32 ljmp (bad) cltd pop cmc (bad) jg (bad) js sbb push pop add (bad) in (bad) (bad) mov (bad) add sub rex jo lahf fildll xchg scas (bad) add shl add jp gs (bad) rex.RX lret sarb mov movabs pop (bad) cwtl adc push int movabs pushq rex.WRB or movsl movlps rex.B pop out mov or fcompl es mov mov (bad) cltd andb jne decb iret and scas jp jg push pop xchg (bad) sbb rex lods or ror test xchg stos (bad) jo pop (bad) rex.XB fs xchg test (bad) movabs retq test add (bad) (bad) (bad) sahf and pop retq (bad) adc sbb rex.WXB mov adc ja (bad) divb mov loopne retq mov (bad) pop imul and jmpq jne adc je (bad) jae ljmp callq movabs addl jrcxz movb (bad) add xor push add sub pop (bad) addl out shrl xor (bad) jrcxz (bad) (bad) cmpsb callq imul add (bad) (bad) outsb loop or (bad) sub (bad) (bad) scas (bad) movsl pop out out cmpsb mov (bad) outsl movsl int3 out fmuls (bad) frstor xchg pop mov jmpq adc add test push cmpsb (bad) movsl fistpl mov xor pushfq (bad) iret neg rex.RB rex.WR add cmp adc mov lahf pushq out (bad) jne rex.WRB (bad) cli flds lods sbb addr32 lea cmpsb (bad) movsl out (bad) adc (bad) rclb rex.WRXB and out jbe mov sub fwait cmp movabs jbe movsb insb sbb push mov test lock mov (bad) (bad) pop or (bad) xchg movsb shrl insl pop lods out fs xchg (bad) outsb (bad) ficom retq outsl jl jrcxz add (bad) scas mov and (bad) cmp add (bad) out xchg jg enterq mov movslq jne stos xchg out lahf mov in cli jp outsb mov stos gs push enterq in scas movabs or retq callq movsl loopne je push xchg leaveq jl sub enterq adc mov mov (bad) lea xor fisttpll loopne (bad) jno rex.RXB mov out xchg mov (bad) add scas movsl jrcxz ja jp sbb pop rex.WX cmpl sub shlb (bad) movabs in rex.WRX rex.W test pop lahf jnp xchg mov hlt rex.WRB imul mov lea (bad) enterq movsl pop adc (bad) (bad) ja out fidivr lods imul (bad) and push fsubrs cmpsb in rex.RX xor pop movabs mov or insb and jg cmpsl lods rex.WRX loope mov mov (bad) pushfq popfq lret cld (bad) movsl stos (bad) out jnp (bad) or add pop movsl addr32 (bad) mov sbb movabs nop (bad) rex.WXB ss sti cwtl jo or pop movabs movl out (bad) pop sahf cmpsb and imul lock pushq or (bad) fdivp std movsl pop std flds lret sub lods in (bad) xchg (bad) mov add rex.WRX stos cltd (bad) (bad) and out (bad) (bad) je cmc pop rex.WX rex (bad) movslq push test and movsb in adc mov sub mov mov (bad) andb jle (bad) pop jl lods (bad) (bad) sahf rex.WR rex.WB in cmc push or cmp and cmp fisttpl xchg jnp insb (bad) rcrb fwait lods leaveq sbb (bad) (bad) enterq enterq mov pushq scas insb sti loope sub (bad) mov fbstp (bad) scas mov sub movsl (bad) sbbb out xchg stos cwtl mov xor lret data16 xchg cwtl ficomp loope (bad) sub test pushfq (bad) (bad) xchg add movabs movabs out cli or (bad) adc (bad) test add and enterq or out sbb mov incl adc and (bad) cltd outsl or rex.RXB rex.RX callq (bad) ss ja lods cmpsl test add scas retq push add movsl (bad) add lret xchg (bad) movsl ja test outsl (bad) mov adc rcr mov mov lret xchg movslq icebp jbe adc (bad) scas or mov (bad) pop outsb add xchg jns ja movsl sbb iret mov outsl movabs push and cmp or cmpsb jbe add movabs in and imul add imul pop fsubl loop xchg test sub jo pushq add sahf cli fwait pop mov gs callq sbb (bad) mov or cmp lods rex.WXB js pushq movabs and (bad) (bad) shll (bad) mov (bad) (bad) (bad) lods outsl mov test test jl cmpsb cmpsb callq fiadd add xor sbb (bad) (bad) gs jo nop sub (bad) xor jno sub mov roll pop xor mov in mov lods add mov imul hlt (bad) mov rex.WRXB lods mov (bad) cbtw imul loope jns movslq shlb imul (bad) (bad) cltd lret in or mov sub mov retq fwait retq movslq rex.R loope (bad) rex.RXB imul sahf gs or sahf in and jae sahf fiadd sbb xorb out movabs add test es insl cmp lods popfq lock xchg xchg sbb mov pop cmp (bad) mov mov clc js int3 mov push (bad) (bad) xor and (bad) leaveq (bad) mov rex.RX push (bad) movsl or movsb mov mov hlt mov gs jbe hlt jnp scas rcr and lods sbb test int3 test lods stc (bad) (bad) mov (bad) movsl and or cmp or xchg (bad) fsubs stos jbe sahf out (bad) (bad) sub ss push xor rex.B addr32 or pop (bad) jno push (bad) pop jbe rex.WRX out lret rex pop fidiv movslq and mov frstor mov add sbb rol mov repnz pushq xchg mov enterq (bad) (bad) mull sti enterq (bad) out sahf rex add ss ja xor movsl rex.X lods incl adc stos jns jno fstl adc movsb pop xor (bad) ds in jg cmpsl cmpsb mov xchg xchg (bad) insl and (bad) pop and or adc mov xchg mov movabs movslq cmp (bad) xor xchg ja test rex.WB fcompl and stc mov lods pop mov sub sub enterq mov or xchg push scas mov movabs (bad) (bad) cs scas or push mov scas imul pushfq cltd movsb cmpb test xchg cmp vsubss imulb rex.X (bad) (bad) and xor and mov shl lock movsl push mov sbbl (bad) movabs add mov xchg movabs sub pop (bad) sti cmpsb jle or nop std mov data16 mov fcompl movabs pop fmull xchg fwait fwait cmp movsl jns mov xor (bad) xor bnd ror lret push mov rcl rex.RXB movsl (bad) or push (bad) mov sahf cmpsb rex.X mov xchg (bad) iret (bad) (bad) enterq rol pop mov shlb mov (bad) (bad) jg xor (bad) xor jg outsl (bad) (bad) mov adc movabs or push mov sbb retq (bad) outsb cmp mov (bad) insl jl out fld sub adc sub fldpi xor push jno pop pop fnstsw cwtl add iret sub in rex.WB jmpq (bad) jrcxz ss ja sti es cmp or mov (bad) movabs (bad) (bad) repz mov sbb jp mov rex.W cld movabs cmp mov je gs mov jo sbb jg mov icebp movsb add mov test jrcxz je ljmp clc sub (bad) xor jge loopne push (bad) jbe movsb rex.X and sti cs iret sahf frstor pushq jno add mov pushfq and test xchg (bad) cmp cmp jno cmpsl adc clc movsb cwtl jmpq cwtl out xchg push movsb testb in stc mov cld and neg icebp mov xor out cwtl mov icebp es pop in callq sahf (bad) mov outsb es popfq movabs iret int3 fsubrp xchg imul out loopne lret (bad) adc rex.WRX sahf (bad) mov jbe,pn in (bad) icebp cmc lret int out mov and cmpsb jl insb rex.R push shrb jp (bad) pushq cwtl and rex.R jle mov enterq rex.WR sbb popfq jbe push iret or or pop loop cmc cmp js fcomp imul sbb (bad) cmpsl pushq loopne je (bad) sbb je outsb leaveq movabs push push rex.WX repz rex.WRXB (bad) loope push in pop xchg lods (bad) (bad) xchg sbb movabs mov jle rex.B in movsl mov (bad) fstps jnp xchg mov gs pop lock retq (bad) xchg (bad) data16 test jb jns rex.WRXB lret rex.B rex.WRB outsl lahf (bad) jmp scas or ds in mov xchg or (bad) jo cmp out add mull in mov adc icebp test mov add (bad) fstps test ds (bad) xor mov cmpsb rex.W mov cmp sbb pop pop movsb jo push jb movsl mov (bad) rex.WB leaveq mov (bad) hlt sub mov adc (bad) (bad) iret pmullw or xlat out js (bad) sub outsl sbb or sub rex.WRB addr32 adc cmc adc loop test mov sub (bad) insl pushq cwtl subl iret pop cmp pop or mov out notl (bad) mov xchg faddp mov negb jnp (bad) pop rex.WR (bad) rex.W push movabs push push lahf cli loopne (bad) stc sbb test xor enterq scas pop out mov sub xchg popfq je scas in rex.R xchg sub mov scas cmp fldl sbb xor sub cmp xor lock rcrb add in lods adcl or andb hlt jnp out jmp rex.X adc addb xchg fstpl mov in add movsb pushq jle test (bad) test movsb (bad) int (bad) clc fiadd jrcxz pushfq or enterq rex.WRB lock mov xchg cld data16 stc mov jo mov movabs mov xor (bad) jns int mov cld pop and cld (bad) push (bad) xchg (bad) rcr fwait loop lods cli insl notl add ss (bad) movabs sbb rex.WRXB jp pushq xor jle jl (bad) lahf xchg (bad) and lods (bad) pushfq outsb adc (bad) shrd and mov (bad) (bad) movsl (bad) movabs loopne outsb movsl (bad) cmpsl (bad) out (bad) xchg in jmpq rex.WX rex (bad) hlt outsb andb pop movabs fcomi xor fiadd nop clc or pushq fs repz ss insb cld (bad) je fs or (bad) (bad) scas (bad) lods adc mov out add lods add rex.WRXB imul nop add (bad) addr32 ror rolb out xor movabs imul mov test (bad) rex.R hlt jne jo (bad) jle jl popfq lods push mov insl jb adc idivb hlt insb out (bad) je fwait adcl and (bad) outsb add repz (bad) cmpsl mov xchg out pop sahf ds je cmp sub retq repz out xchg stos sub jl cmc (bad) or in sbb enterq mov repnz cmpsb sub rex.RX data16 rex.WB adc in imul xlat gs movabs (bad) out loop pop enterq mov mov movsl or sbb cld add (bad) (bad) rex.RX xor enterq xor mov ja rex.WXB jl jbe (bad) shlq fiadd pop jno enterq jb xor callq push fstpl xchg (bad) stos cmc (bad) outsl lahf sub xchg mov in sti es loop mov add movabs jle sahf or fldt (bad) andl mov push pushfq (bad) adc loope rcll rex.R stc (bad) lock movabs (bad) lahf jrcxz pop xorl (bad) insl cltd sub cmp jle rex.W fisttpl cmp sahf mov xchg adc or and (bad) mov ds sahf rex.WRXB rex.X fisubl (bad) rorl shll and mov enterq shl (bad) mov jno out mov retq xchg test (bad) icebp adc hlt loop addr32 test fldl or mov rex.WR and add addb and pop jo (bad) mov cmc pop movsb test (bad) add std pushq lret jbe je xor cwtl xchg pop std fstpl or xchg fild pop or push mov xor xlat clc ficomp cs rex.WRX repnz sbb sbb data16 loop (bad) or rex.WB test es js hlt (bad) ss or out push outsb retq push iret cmpsb rcrl xchg cs mov rex.WR int3 (bad) (bad) jl jne in movsb jo pushq rex.W cmpsl mov rex.WRB (bad) pushq push (bad) cmp rex.WRX lods fsubrp insl scas rcll je ss mov and xor push negl in push sahf jrcxz insb jae rex.WB (bad) adc ds addr32 xor and and lret jmpq rex.WRB leaveq jo shlb movsl (bad) add mov data16 (bad) push xchg in movsl (bad) adc js sub movsb mov push inc icebp or cmp (bad) (bad) sbb mov lahf movabs sub out (bad) or lods cmp pushq jae movabs stos std mov adc icebp cmpsb mov movsl or or not jmp (bad) lods mov js xchg (bad) rex.XB cmp in (bad) movsl out cwtl incb mov push xchg in and mov sarb jrcxz sbbb mov (bad) mov jmpq xchg (bad) rex.WRB (bad) cltd mov mov jbe xchg movsb imul fsubl jno loopne jns rex.WRB rex.RXB rex.W gs jno orl xorl pushq lret rex.WRXB rex.WR test push xor sbb cltd lods or (bad) xchg outsl ss mov ss mov insl xchg imul mov ffree mov in mov pushfq sbb test xchg xlat fs mov rol loopne xchg in xchg add (bad) mov movsl outsl jge rolb lahf callq jmp mov rex.WRX jae lods stos xchg movabs rex.WRXB cmpsl scas sbb lahf testb pop repnz test pushq mov mov adc mov jle loope in or test push test add adc (bad) movsb lods push jo movsl imul leaveq adc xchg rex.RXB mov in xor retq cwtl je (bad) (bad) xchg sbb rex.WR repz andl in xor xor rex.XB in addr32 (bad) movabs mov sub mov gs div mov jo outsb loop in mov scas or loop xlat and pushq or (bad) mov imul jl fadds add fsubl xchg (bad) je pop insb add or cs out cmc xor xlat lret mov scas out lods xor rex rex xor (bad) (bad) (bad) fwait cmp add (bad) and mov mov sahf or movabs (bad) xchg (bad) mov cmp out jnp or retq pushq movsl rex.RXB mov mov sbb (bad) (bad) cmp jbe or jg xchg sbb xor pop test cmp or xchg test sarl subl jp jo (bad) sbb sbb ss sbb insl (bad) pushq jne jns xor rclb mov imul pop mov int lods adc hlt movslq jbe hlt test je mov xor orl or (bad) add jnp mov outsl es (bad) outsl (bad) lock pop jle or cmp xor (bad) repnz sahf scas data16 add rex.RXB jns idivl mov ficompl loopne jb (bad) mov loop and loopne mov (bad) lahf sahf iret sub lahf cmp fidivr and bnd (bad) (bad) rex.R lock out (bad) cltd lods pop mov or push enterq pop shl (bad) (bad) xor sub repz (bad) (bad) or mov fisub fsubl sub outsb sbb cmpsb adc pop add movsl outsb movabs sarl rex.WRX xor pop (bad) mov loopne (bad) adc and leaveq hlt xchg pushq sbb fnsave mov (bad) pushq and rclb cmp (bad) (bad) jo jno gs lods adc xor (bad) or jo add movsl or (bad) outsl (bad) in lods (bad) insl add (bad) mov movabs rcr divl mov mov xchg pushq out fiaddl mov sbb (bad) (bad) stos rex.RXB (bad) jmpq (bad) lahf and (bad) repnz out and sub je rex.RX movl cld push stos (bad) cmp repnz jae mov ja cmpsb and movslq mov jmp (bad) ficom xor pop jmp (bad) mov mov retq and xor test xor cltd fwait mov sub (bad) mov (bad) pop sahf loopne data16 mov xchg rex.RXB (bad) push or mov add (bad) cld movabs pushq out rex.WR cmp cmp xchg mov adc test push pop mov jns sub clc pushq cmp in (bad) cld in cltd add cmc mov (bad) (bad) (bad) jg sbb add (bad) cmpsb jle fs pushq sub sbb movabs movabs (bad) jle (bad) add mov insb or jg (bad) pushq hlt mov orb fldenv movabs jo,pn adc cmp pop sub lret data16 xchg (bad) rex.WXB mov pushfq jb jb (bad) mov orb adc xchg (bad) add movsl xor jne rex.R es cmp (bad) cmpsl rex.WR js jp push (bad) jbe adc (bad) pop (bad) (bad) fstl stos in or movsl jg ds push add add (bad) movabs sub mov (bad) (bad) insb sub sbb push lret mov sbb ss mov lret (bad) mov push rex.WB cs enterw jp pop callq add ja scas xor and (bad) and loope stos sbb rex.XB je mov (bad) fist and ja and outsb insb shl movslq hlt mov pop sub mov movabs cmp pop (bad) cmpb sbb int3 or mov lret push mov (bad) mov lods (bad) repz out int3 pop pop sahf lods (bad) test movslq popfq scas and rex.RB and js ds addr32 jne loopne rex.X mov mov rex.WXB and repnz in (bad) and popfq pop cmc cmpsb sarb add add adc retq jge push mov (bad) mov sbbb and (bad) out hlt addr32 test adc add out (bad) fxch xchg (bad) loopne rex.X rex lahf rex.WB pop ja jns test movsl enterq movsb adc add and (bad) lods (bad) sbbl movabs rex.WRXB rex.WRX es addb cld rex.WXB rex.WX rex.RXB getsec insb (bad) (bad) cwtl sbb test movabs mov pop rex.WRXB sub test (bad) jo movabs sbb (bad) jl pop fmull pushq movabs stos (bad) pushq (bad) and out test push fild (bad) cmp retq movabs (bad) (bad) movsb (bad) (bad) add rorb callq fidiv sahf (bad) outsl (bad) ja xchg out movsb mov add pushq cmpl rex.XB pop (bad) in js rex.WR int out mov (bad) out cwtl pushq callq out scas and adc xor pop scas imul out retq flds js out jp or rcl sbb and idivb (bad) (bad) pop std xor mov out sub add lods mov mov (bad) push rex.RX xchg pop or cmpsl pushq pop or xor sbb jno rex test or ficomp or cmpsb nop imul fsubrs mov scas add and add test rex.WRB jne nop (bad) es rex mov andl scas lods (bad) xor and pushq jp (bad) mov cmpsb pushfq std loopne (bad) stos rex.WRX push icebp orb mov retq ficomp test icebp rcrl fstps jns scas stc ds icebp push push mov out mov jl cmpsl and sub and xchg add sub (bad) rex.RX lret push scas sub rclb cmc mov cmc and pop fisubr xchg (bad) xorl callq fistp out out mov (bad) or pop mov pushq mov (bad) in xor and mov (bad) (bad) mov lods movabs je rcrb jle mov mov imul nop (bad) mov (bad) xor enterq out mov fsubp decb jle mov repz (bad) fsubr jo scas (bad) icebp jbe nop data16 xchg pop ja lahf mov (bad) lea fdiv loopne rolb rex.WX ds fsubrl mov ds ficompl mov (bad) fwait add scas push adc cmc lret fist jbe movabs lret jo pop mov icebp rex.W test add lret cltd (bad) (bad) xchg jbe lods pop cmp (bad) rex.RB lods js (bad) es (bad) rex.W pushq jnp xchg push (bad) jb rex.W (bad) jns movsl add out mov jno pop xchg icebp and sbb lahf (bad) cmp lea rex.RB shll adc repz and movsb movsb (bad) lahf sub (bad) and and mov imul rex.WRX or movsl (bad) movslq mov mov xchg sub mov cmp ss xor sahf pop movsb std jle or popfq adcb inc repnz cmpsb outsb rex xor fs out cmpsb lea movl mov sub sarb ja pop enterq outsb cld addl popfq mov jg loopne fsubl jmp movsl loop (bad) outsl out stos (bad) or movsb sbb (bad) jb out add (bad) jle (bad) out movsl or add push jns std rex.WXB decl cmp loopne movabs iret rol push gs mov cltd lahf stos add jnp cmp (bad) out push (bad) lahf (bad) lahf movabs rex.X mov (bad) xor stos or iret add addr32 int mov nop (bad) fidiv sbb (bad) leaveq out adc xchg mov mov xchg insb jb mov pop mov (bad) test or rex.WX fwait callq xor lods sbb xor in lods addr32 test (bad) rex.WX movabs or pushq mov shr test outsb fidivr fisubr repnz pop fstl sbb (bad) wbinvd (bad) adc sbb mov (bad) sar (bad) lods and testl addl (bad) xchg movabs fisub xor adc xchg adc adc pushq notl add cmp or outsl (bad) pop je ljmp mov cs lods scas cli push in rex.RB push insl push stc ffreep rex.WR repnz loop sbb rex.WX pop lea rex.B adc jno,pn movabs sbb jle fs mov rex.WXB mov rex.WRXB adc out and testb xor and lock vmovsd adc xchg lock (bad) outsb jae (bad) cli loopne xchg jo xchg mov sbb jrcxz movsl mov data16 pop rex.WR faddp or (bad) jl ror rep cmp fisttp movl movslq shlb loope subb add (bad) lahf add out (bad) iret mov add push (bad) xchg cmc xor mov pop (bad) xor sub mov xor mov clc mov mov rex.WB xor sbb addl mov xor cmpsb ds jge mov mov movsl fst mov test xor cmpsb fadds cmp jb iret lahf sbb sbb push (bad) mov repnz jp (bad) int3 scas jo rex.WRB adc cmpsb pop mov mov retq sbb xor shlb insl outsb xor loope add (bad) movabs outsb (bad) pop rex.RX loop,pt fildll fsubl movabs std or addr32 pushq xlat pop in push xor cmp and test movabs pop cmpsl rorb mov insb or (bad) hlt add data16 pop (bad) fucomi xlat (bad) icebp (bad) rex.WRX pushq jbe mov xor push or push mov (bad) movabs mov or add movabs rex.RB jg,pt mov pop sub (bad) out cmp movsl cmpsb in and iret xchg (bad) insl adc cmp movabs in loope pop xchg adc mov push test out pop in mulb fbstp addb rex.R (bad) cwtl jbe mov stos fistpl rex.WX stc mov addr32 xlat je mov mov addr32 (bad) rex.WRXB lods stc xor push (bad) ss test add xchg retq js rex.RB popfq push push or ffree cmpsl mov mov (bad) sub jbe (bad) outsb adc (bad) faddl xchg loop (bad) xchg sbb xor (bad) outsl (bad) js ficomp loopne (bad) mov xchg and mov xor pop xchg out sahf (bad) iret sti movsl adcl jg shl sbb sub mov test (bad) jne push jl and outsl rex.WB rex.XB (bad) cmpsb (bad) rclb push out (bad) loope outsb andl rcrb (bad) enterq lods data16 pop (bad) (bad) (bad) sub rorb data16 (bad) (bad) scas iret pop popfq rex.WRX cmp sbb add mov cmpsl scas (bad) retq (bad) xchg shlb xor xor mov (bad) cli cmp out jne (bad) repz jl lahf (bad) mov (bad) mov (bad) out (bad) cmp (bad) fistpll sbbl cvtps2pd mov imul outsl ficom shlb movabs mov and cli cmp add subl pushq adc (bad) icebp and retq cmpsl and enterq and in add cli (bad) decl sub rex.R cmpsb movsl adc (bad) xchg je movabs mov jle xor or sbb or jae repnz xchg sub adc rex.WR rex.WXB xchg (bad) out pop or data16 rex.XB cmp (bad) nop pop jb lcall cmp outsb stc (bad) lods mov cmp mov fild (bad) in imul lock jne pop cmpsb (bad) ror out pop lods xchg loopne mov lods sub cmp (bad) lods mov (bad) jo addr32 out rolb (bad) lea icebp xor jbe lret cmpb mov lods movabs pop movslq (bad) scas or fisubrl mov mov rex.WRXB (bad) (bad) addr32 repnz mov (bad) and fwait and subl insb rex.X rex.WB rclb (bad) mov fcomip movsl add cmpsb scas (bad) cmpsb sbb enterq (bad) xchg jns lahf cs lahf movabs movabs std scas fiadd jnp mov cmpsl cs out push movslq jp outsb ja or (bad) jge rex.R lods fs insb adc or out ss test scas repnz sub ficomp jne scas data16 (bad) jo out and loope rex.WRXB hlt fwait hlt out jne test je jle rcl out movabs loope imul or insb sub out in and repz adc push int3 rex.RX mov (bad) xor callq pushfq bnd pop xchg jmpq sahf jo xchg loopne (bad) (bad) xchg test (bad) mov gs xorb pop outsb and insb mov out outsb (bad) (bad) mov mov add out add cmp pop rex xchg mov shll adc stos (bad) lods and (bad) addr32 mov mov mov xchg rex.B rex.WR loop (bad) outsl or insl js sub (bad) pushfq out sti rex.RB shlb (bad) in cmp fidivr (bad) jle repz (bad) repz iret jrcxz cs shr cwtl movsl add ds fldenv (bad) cmc mov rex.RXB mov (bad) jo lret in outsl mov addr32 mov and sbb in (bad) rex.RXB add cmpsb pop push or mov mov mov lods and scas (bad) rex.RXB fwait rex.WX mov (bad) mov mov movabs (bad) push rcrb iret jp sbb (bad) fsubl (bad) pop cld sub (bad) out xor add idivb jg hlt mov sub (bad) or stos (bad) and pushq (bad) adc rex in jle callq mov (bad) (bad) xlat (bad) mov or movabs push fidiv lods rex.WX out xor (bad) mov sbb fiadd jle mov mov (bad) xor pop (bad) callq cmp xchg sbbl (bad) add hlt or or sub (bad) cmp cmp (bad) clc mov imulb repz stos pop mov pop mov (bad) (bad) stc (bad) pop clc cmp jge fs enterq (bad) sahf out add xor out mov cs or xchg cmpsb movabs (bad) mov add xchg (bad) (bad) (bad) jp (bad) rex jbe scas rex mov and xchg cmp (bad) rex.RB addr32 (bad) add cmp repnz xchg sbb push adc or cmpsb pushfq pop in fsubr stos cmpsb push add cld jns leaveq gs jle rex.RXB outsb lods mov xor add xor mov xlat jb jle cmp movslq loopne push clc mov sarb iret lahf nop out xlat jbe mov int3 jge xlat cwtl jl add xchg fidiv sbb sbb rex.WRX mov pushfq movabs adc (bad) (bad) fcomps icebp xchg in test adc xchg (bad) stc (bad) mov (bad) mov pop pushfq xor (bad) (bad) mov fildll push (bad) xchg stc or insb jge repnz stos icebp (bad) fisttp stc out adc or mov loope or movabs pushq enterq addr32 scas cmp icebp or cmp (bad) rex.WXB push repz sahf and xchg cmpsb (bad) rex.RB jb or jg (bad) ds xchg add rex.WXB xchg (bad) loopne out sti mov mov jg lods stos (bad) push loopne hlt rex.B rex.WB int movabs mov sub sbb jae mov subl (bad) or (bad) cmp xchg push rex.B fcompl sbb add mov and add (bad) jae or push jge out adc test xchg rex.RXB rex.RXB pop scas (bad) movsl jns shll or sub enterq mov jbe in (bad) (bad) lret xchg push pop sahf cmp (bad) decl adc jno or leaveq xchg mov ja mov (bad) (bad) test xor stos xor cmpb imul (bad) mov repnz xchg rex mov (bad) and clc and pop jp or jb rex.W in cmp cmp (bad) pop mov out or sahf adc mov roll xor (bad) mov stos pop jbe incb jb cmpsl pushfw jl sar movsb sbb rex.WXB scas jge rcrb cmp repz outsb or loopne imul movslq mov add loop outsl fcoms rex.WRB out (bad) pop fldt je jno rcrl movsb (bad) xchg fcomi lret (bad) sbb mov adc push jo (bad) jle je hlt rclb out (bad) push adc int3 hlt and scas pushfq outsb add push mov pop rex.WXB lea pop and (bad) rex.RXB rex.R pop fnstenv test movabs lods (bad) mov iret jge adc (bad) movsl icebp rex.WRXB xacquire and out in and xlat (bad) xchg sbb jbe andb out pop fisub (bad) clc cmp pop jp movsl (bad) insl mov or rex.WB sbb mov fs rex.RXB insl jno loopne mov (bad) fisubr cmpsl outsl shr mov add lods push (bad) (bad) add movabs (bad) movsb icebp icebp out lods adc jmpq mov movslq out (bad) cld fsubl mov xchg mov popfq mov movsl shr andb xchg callq callq movabs enterq (bad) rex.RB sub cmpsl rex.XB stos rex.RB iret (bad) js js xchg int add (bad) jg sahf mov rex.RB (bad) jp addr32 sahf testl out notb rex.RXB mov sub repnz nop sbb sbb push mov xor add pushq jns sti (bad) (bad) jp xor cmp lods sbbb jle adc push mov rex.R outsl or add cmp (bad) pop jb sub test sbb lods (bad) sbb (bad) shrb lods ja sbb adc lods (bad) and int stos (bad) (bad) outsb cmpsb pop adc insb pop pushq xor lret pushq (bad) repnz cmp sub xchg (bad) adc or jmp sub mov je or ss rex.RB loopne (bad) out (bad) mov es nop jle mov sub sbb movabs xchg xor negb in (bad) push rex.WRXB lods add xlat outsb or jp,pt push int3 lea (bad) add retq cli or (bad) mov jge add enterq (bad) mov cmpsl rex.B es rex.R sbb or in and mov movabs cmovns mov mov rolb push addr32 xchg rex.RB rex.WRX jge jbe cmp andl scas outsb cmpsb pushq cmpsb outsl movabs jl mov scas flds callq loope xchg movsl push xchg (bad) (bad) or out mov cwtl sahf cmp jg out xchg (bad) (bad) (bad) or jb xchg fcomp lret xchg (bad) (bad) xor rex.RXB test (bad) movsw cmpsl push jp (bad) popfq cwtl andb cli rorb addr32 sahf sbb xor lahf xchg fiadd nop ds sbb (bad) xchg mov sub mov pop (bad) mov cmp push cli int loopne adc lret and jmp repnz cli (bad) sahf (bad) in add adc or xchg and sbb xchg pop xchg (bad) clc jrcxz incb lret xchg cmc or ficomp mov xchg movabs (bad) (bad) idivl rex.B push xchg and push xor jns addl cmpsb mov rex.RXB hlt add movabs movsl xchg pop shll jp cmp orw (bad) adc movsl mov mov cwtl (bad) sub cmp sub test mov out ja imul cli xlat movslq sbb lods sub pop adc mov sbbl mov (bad) xchg (bad) pop repz pop repnz loope fisubr xchg es adc movl xchg loop lods cmpsb pop movsl pop add fidiv addb mov movsb xchg pop add int test rex.R (bad) mov adc outsb (bad) in mov decl sub xchg (bad) (bad) xlat xchg push out (bad) cwtl in movabs and push movsb icebp mov rorl jno rex.XB std loope sarb mov jle jbe (bad) (bad) xor xchg (bad) or rex.RXB (bad) push addl (bad) movabs xchg stos xchg jbe jo xchg jmp stc mov loopne jmp jno popfq cmp (bad) (bad) jmp xchg lret rex jrcxz shlb pushfq sahf and mov addr32 xchg jp jg (bad) and ds loop mov rex.W icebp cmpsb (bad) (bad) pop loopne jns fldl stos (bad) and jp push jns int xchg jbe retq mov jg cwtl xchg pushq enterq sahf movsl (bad) and rex.RXB (bad) mov mov movslq (bad) notl rex.RXB movslq xchg pop stos push scas (bad) rorb lods mov and rorb sbb shrb andb mov pop xchg out add nop fdiv add and cmpl (bad) outsb or scas pop (bad) jbe xchg mov repz jae (bad) movabs (bad) js movabs and pushq pushq (bad) movsb push retq cmpsl jle movabs sbb pushq jne movabs xchg and push (bad) xchg (bad) lahf (bad) (bad) add rex.RX mov movsb pop push xchg xchg jg jo jbe jg cld loopne icebp repnz callq cltd pop roll movsl repz sahf pop cmpl fldcw jmpq outsb (bad) out or (bad) pushq fs cmp mov in lret rex.WR rex.WR xor mov pop js fild movabs rex.WRB sbb mov cmp sbb pop mov fcomp in test xchg loopne (bad) insb sahf clc callq mov enterq or repz movabs out add cld (bad) fiaddl cmp jp xor (bad) (bad) and pop pop scas (bad) sub fbld movsl lods fstps retq or (bad) xchg rex.X rex.WRX jo movabs and (bad) sahf xchg push nop xlat test shll pop sub stos xor push mov mov jp es pop rex.X adc xor (bad) mov (bad) sub cmp adc cltd scas movabs out imul std int (bad) xchg mov popfq loop jae es stos sub sbbb mov pushfq rex.WX mov mov andl fwait sub sbb ss pop pushq stos addr32 lods push jge add rex outsl negb xchg (bad) sbb cmp fcmovnu (bad) mov mov push data16 cmp mov push (bad) rex.WB (bad) jl stos movabs (bad) rex.RXB (bad) fnstenv sbb (bad) std iret (bad) rex.RX out (bad) movabs cmp xlat push (bad) orl rex.B jle loope lahf outsl in gs mov popfq cmpsb movsl notl test cmp (bad) (bad) pop nop sub movl (bad) div or pushq rex.B (bad) mov push adc (bad) pushq cmp (bad) xchg jle sbb repz movsl mov sbb xchg add cld mov mov out fildll or mov (bad) push imul and sub sbb mov rex mov mov (bad) jl jno push hlt push (bad) adc mov out xlat sub imul rex.WX scas js adc decb out rolb in pushq cmpsb (bad) fwait in (bad) scas jge notl pop movsb xlat movabs mov xchg pop mov (bad) mov loop jb mov pop nop sahf ficoml mov (bad) lret gs je lret or loope fisttp or (bad) pop cmp repnz or subl scas xchg imul add jmpq fs (bad) adc and idivb andl pop and es cltd jo cmp ss divb and orl or (bad) repnz addr32 mov cld mov sub jno mov xor and (bad) (bad) cmp add loope je sub (bad) push movabs movsl divb cld pushfq mov mov lahf jb rex.X movabs nop mov mov (bad) out add adc mov or cli es ja and xchg mov xor jne jge hlt mov jge stc and mov cmp test movsl data16 lods (bad) xlat movsb and mov xlat jg sub mov out (bad) (bad) movabs rex sub pop movsl rex.WRB test pop mov (bad) fsubl mov mov cmp (bad) pop mov jns (bad) mov ds rex.WRXB adc cmpsl pop adc (bad) push jle push mov (bad) xchg retq jnp callq mov clc pushq (bad) sub fsubrl (bad) lahf scas jle stc add mov or (bad) (bad) movslq nop rex.WRX push jp sahf pushfq addr32 test loope out pushq subl clc xchg movabs cmp jbe and sbb sbb or mov stos xchg mov rex.RB xor vsqrtsd mov sub repz jle rex.RX pushq and mov sub (bad) loopne or sub (bad) int (bad) insb jne rex.WXB xchg mov scas or add mov sahf pop mov in sub insl lahf out rex.WR mov adc sahf data16 callq adc cmc loopne (bad) es or adc imul lock mov jmp std pop adc scas pushq mov xchg and in pop imul lret rex.RX xor pop sub (bad) adc in ss push xor jnp (bad) (bad) jnp loopne (bad) mov lea (bad) loope and shll imull fistpll (bad) ss (bad) movabs test adc rex.RX out js (bad) or stos movsl and sub negl fimul mov sub es (bad) pop cld xor nop sbb scas movsb shrb lahf shl cmpsb or imulb (bad) (bad) icebp pop outsl jmp stos jp (bad) jbe xchg jno imull xor cmp xchg data16 rex.WRB test xchg loop (bad) jnp xchg repz out xchg es pop adc add mov xor mov and mov (bad) and jbe mov pushq xor cwtl data16 es (bad) rex.WRB lods xchg jo insl rex push (bad) (bad) fdivl ljmp in mov xchg cld addr32 (bad) (bad) in ja xchg jrcxz rex.RX mov addb lods xchg (bad) movabs fs add sbb sub idivl (bad) pushq repnz fstpt (bad) (bad) sub xchg movsl cmpsb push je xchg pushq sub (bad) leaveq push sbb mov rorb (bad) fbld pushq je add loopne rex.WB or vpsubw loopne imulb pop xlat cld repz outsl cmp xchg (bad) (bad) and lods int3 push addr32 pop in andb std jle addr32 cmp (bad) jnp adcb mov and mov jnp fidiv stos jno jl or pushq add fildll (bad) (bad) cmp imul rex.WXB hlt (bad) pushq adc xchg lods insb mov pop shrl (bad) (bad) jo cmp (bad) outsl jae rex.WRX xchg mov or mov cwtl sahf leaveq jo je pushq (bad) movsq (bad) test push xchg (bad) mov int3 lock outsl loopne (bad) out es cwtl mov (bad) loop lods mov mov jg outsl and in xchg addr32 lret push shrb cwtl fsubrp cmpsl (bad) (bad) fisubr lahf rex.RXB pop and sahf mov loop mov push pop adc lret lret mov mov pushq ds (bad) xlat (bad) add rex.RB fmulp rex.WRB (bad) push test ss movabs jp add rex.B xchg and rex.WR andl or (bad) (bad) mov movsl xchg adc cmpsb and push xor mov pop (bad) (bad) and (bad) (bad) (bad) std loop movabs movsl out mov (bad) and jp movsl nop std mov (bad) flds rex.RXB add (bad) sub imul pushfq pushq lea stos sti sub (bad) js sbb jle mov (bad) jl addr32 in (bad) xor jge mov callq xchg (bad) je (bad) movsl and mov sub cmp rex.WRXB push pop js jp movsl in (bad) cmpsb sahf (bad) push and sbb or rex.WXB movsl mov std mov add adc xchg xchg adc adc sbb out scas xor mov stos (bad) pop fsubl or (bad) sbb jmpq movsl in xchg rex.WRX (bad) fwait sbb (bad) sub test hlt (bad) pop rex.WRXB fidivrl test jno out (bad) je nop loope add and mov out out xchg jo fwait jle (bad) (bad) rex.RB rex.WB pop (bad) jge out lods jge xchg mov cli sbb cli fist (bad) test mov loop mov cmpsl mov cmpsl xchg jo mov rex.WRXB imul movabs jp pushq cmpsb jo mov adc movabs rex.RB mov lahf mov (bad) lods insb test or (bad) mov mov addr32 iret mov scas loopne addb rex.XB rex.WX imul mov (bad) mov cwtl pop (bad) movabs (bad) and je (bad) (bad) out out cmp sub rex.WXB (bad) rex.WRX scas add cmpsl jg pushq xlat xchg (bad) rex.WR movsw pushfq fcmovne cs mov pop (bad) jae mov (bad) pop jb rcr incb adc rclb (bad) outsl loop pop fsubp sub pop movabs jae and fmulp or (bad) jbe adc imul xor out loopne jmpq cwtl xchg sbb mov mov scas xlat or data16 pop jl mov rex.WRB movsb and jbe mov cs ja imul cmp movsb adc (bad) mov sbb retq sbb fisttpl enterq sub movsl cmp nop jmp or mov (bad) rex.W rex.RX rex.WB movsb mov pop clc stos mulb xchg (bad) sahf sub (bad) sub gs rex.WXB (bad) (bad) sub and or in movsl (bad) xlat (bad) scas sbb cmp rex.W sbb repnz add or jnp mov rex.X add (bad) xchg mov cs (bad) sar enterq add (bad) clc movsl and lods cmpsb or lahf mov jmpq or rex.WX xchg rolq repnz in std loope movslq repz repnz test pop (bad) or sti xchg and mov addb cmp lods mov sbb mov and or cs rex.XB push and fcompl xor mov sahf (bad) push (bad) callq (bad) in mov stc (bad) or (bad) cmpsl jbe (bad) outsb rex.X in lret cmpsb int (bad) xor xlat jae or out mov (bad) cmpsl lock adc rorb mov sub cli sbb adc pop cmc xchg jg (bad) mov icebp out imul rex.R push (bad) (bad) fsubl test mov (bad) pop mov xorb mov push pop adc stc insl (bad) movsl insb push add cmp pushq push xor ds (bad) ficom or pop mov jmp lods xor loop (bad) add mov imull scas (bad) ja pushfq cld iret int lret xchg mov (bad) movb leaveq cmpl jnp out (bad) xor xchg push rcrl cmpsl adc std push cmp cwtl cmpsb (bad) push icebp loope lock std rex clc scas outsb mov rcl (bad) rex.XB push mov scas (bad) add stos xchg retq cld or movabs add (bad) (bad) (bad) clc (bad) (bad) std cmp scas (bad) rex rex.XB mov cwtl lahf xor jmpq cli std add rol sbb movsb (bad) movabs test rex.WRX mov (bad) loop ja out addr32 std cmp pushq movabs test outsl out xchg (bad) callq jo xchg sbb push jmpw rex.RX lret neg (bad) addr32 (bad) cmp jo outsb sbb movsl (bad) je imul movsl ja lahf scas xchg mov sub in jrcxz (bad) jp loope fidiv icebp in rex.R pop and jbe subb xchg add add loopne hlt nop jle jle movsl movslq insl (bad) (bad) jo lret sbb (bad) or out cmpsl xor (bad) addr32 lahf (bad) rex pushq xor and pushq ljmp (bad) mov in movabs movsl sub pop enterq (bad) (bad) lahf (bad) push cmpsl fbld jle xchg stos (bad) pop sub sbb adc in scas or imul (bad) sarl rol push addr32 jg (bad) (bad) and out (bad) (bad) or pop and sbb and jrcxz adc jo mov sbb jmp imul add out movsb fisubrl and (bad) cmc movsl sar xchg fimul (bad) jne incl sbb sbb je jl rex fstpl jae rex.WRXB adc add mov pushq (bad) testl cmp xor icebp lea add and and fdivrl movabs (bad) (bad) sub or jbe scas rex lock (bad) pop (bad) enterq jb (bad) (bad) cmpsl and loopne (bad) (bad) repz or adc rex.WX xor gs lods mov and pop xchg iret cld stos rex.WRXB fimul and xchg jno mov xchg addr32 lods test jb int (bad) (bad) rex.R jg adc (bad) mov push add (bad) jmp pop xchg (bad) and (bad) push or (bad) mov xor pop test out pushq sti std xchg (bad) jno outsb lret lock xorb mov and jp mov sbb in (bad) movabs scas rex.RXB fidivrl xchg or xchg rex.WXB jge mov sub scas and fidiv jo sub out imul jns out jge (bad) loop movslq stos sbb outsl mov rex.RB jp insl out cmpsb outsl push (bad) test pushq or add or (bad) pop ja lods pop sub (bad) int3 lahf stc (bad) xchg push rex.RB sub or mov sarl ds lock xchg sahf mov test mov mov rex.WRB xchg xchg mov and jle mov (bad) mov scas scas outsb (bad) out pushq movsl (bad) sbb add jg xchg mov movsl cmpsl (bad) add rex.XB outsb rex.RB adc jbe (bad) sub stos jnp icebp xchg cld (bad) cmp lahf push (bad) xchg (bad) add rex.WX rex.WB ja xor sbb pop movsb fsubs iret xchg mov movslq (bad) xor cmp test movabs movsl ja rex.B and addr32 xchg jle movsl rex.RX or lret pop cmp xchg int and mov jl or vprotq cmpsb pop (bad) jle (bad) and (bad) jo test ds shll stos push sbb xor int3 adcl add repz movsl test mov (bad) jg fidiv sub (bad) cli and sbb lock test std sbb outsl xor andb lahf mov cs lret pop (bad) ja pop mov je rex.WB movslq sahf test and xchg xchg ss out rex.X cmp es mov rex.WR loope or xor loop (bad) xor andl pop mov rex.RXB mov sub xor mov retq mov xchg (bad) movslq retq pop mov ficom rex.WRXB sar and movsb push rex.X pop lock jge xor movabs xor leaveq mov adc cmpsb in cmp mov gs sar xchg test pushq rex.RX xchg mov sbb rclb rex.WXB (bad) pop cmp mov (bad) mov sbb rcrl adc xor lods xor movslq movsl or mov movslq rex.RXB iret rex.RX (bad) shr scas (bad) cmpsb (bad) movsl loopne in sbbb callq out adc lret add sbb (bad) or rex.XB negl lods icebp test mov rex.WRXB jb loop jno fstl outsl rex.WRB (bad) pushq pop movb outsb mov or (bad) lods insl rex.WB mov and xlat or mov sbbb out pop add add sbb hlt sub rcrb cld pushfq iret mov fstl sub movsl (bad) mov or push (bad) mov lods repz and push jno jl cmpsl adcb (bad) mov cld xlat rex.R nop xor enterq xchg ficom adc testl movabs pop add push mov idivb jbe rex.WRB mov mov jrcxz and (bad) sub movsl rex.WB adc jp (bad) data16 rex.WRXB push jmpq iret negb push jno (bad) test test stos (bad) scas or movabs pop cmp adc out subb pop cld (bad) test rex.RXB outsl (bad) fidivl rex.WX rex.WX rex.RXB rex.RB out (bad) (bad) ja jbe sbb rcrl add jle (bad) xchg adc mov rex.RXB loop pop fiadd cmpsb jmpq xchg lods jg mov sbbl je jmpq xlat andl in test mov push movsb (bad) nop (bad) (bad) cmpsb fidivr orl lods je rex.WRB (bad) movsb mov mov jns jmpq sahf push std sub push rcrb xchg adcl add sub and retq pushfq lret insl add rex.WB je jle pop push (bad) pushfq popfq jo movsb cmp push test movabs (bad) (bad) cmp pop out xchg movabs mov jmpq sti mov (bad) rex.RXB (bad) sub jo or sbb (bad) push popfq rex.WRX movabs loope lret lret xor mov add (bad) icebp sbb cmpsb lret rex.B rcrb rex.WXB sub je cmp add mov sub imul fldcw test iret rex.WRX loop stos imulb rol (bad) pop je cmpsb mov insb mov cmpsb pop cmc mov lret (bad) (bad) (bad) push in movabs mov or subl cwtl (bad) ja rex.X imul or fstps sbb mov jo fwait mov add in callq jp mov scas test jo movabs (bad) sub addr32 lahf jp pushq outsl cmp add xor stc out (bad) movsb (bad) callq movsl mov rex.W mov push xchg jle or xor sub clc mov scas enterq imul int3 jle push xor retq mov fidivr jp pop (bad) adc mov mov sti incb rex.WRX (bad) (bad) (bad) add rex.WXB mov loopne fs out loop and pop xorl movabs insb adc in xlat mov (bad) hlt (bad) mov push mov jmpq retq xchg xor jno mov incb nop add lret xor rep mov mov enterq test sbb add or jo push hlt fsubl sbb jmpq rorl (bad) sahf (bad) pop xchg movsl rcll movsb movsb out jl (bad) insb vpcmpeqw mov push add push mov rex.WX mov xor (bad) fucomip xor and in movsl movabs pop rex.W mov loope rex.RXB or xor xchg (bad) rex.WB (bad) subb fist movabs loop repnz jge sbb out xor xor gs js and rex.B rex.RX iret pop sub xchg shrb jns add xor adc (bad) mov movabs push (bad) icebp and movsl movabs outsb or fdivrp cmp movsl out mov mov (bad) jo sahf (bad) movsl cld rex.B rex.WRB addr32 (bad) mov xchg subl test lods jle lods xchg cmc mov movsb adc in (bad) xor je add in fistpll sti movsl lock pop out cmp (bad) cmp rex.RX sbb (bad) push rex.WX rorl imul sahf push xchg jo push fwait in loop retq sbb add push sub pop (bad) leaveq movsl rex.WX rex.W (bad) push jge rex.RX movabs andb cwtl movabs pop sub add roll rex.WXB rex.RB ss xor mov sbb jo insl cmpb movsl xchg mov (bad) jp push mov test cmp (bad) mov xor mov sub test mov stos movabs outsl rex.RX stos lret out sbb mov (bad) mulb in insb data16 or rex.XB sahf jbe sahf (bad) movsl pop xchg std rex.WRX stc cmpsb loopne rex.XB sahf flds mov or push jg pop in sub retq (bad) or cmpl jnp out cmpsb and rclb xor rex.X rex.WB nop or pop pushfq and jle scas gs and movabs jg movabs (bad) and movabs add (bad) movabs add andb retq sbb rcrb push js (bad) rolb movabs stos stc sub mov popfq sahf in jns sahf jns fsubrs xchg xor adc subl xor rex.WB movabs mov (bad) or xchg (bad) sub fimull xchg loopne mov (bad) movsl adc (bad) or jno mov (bad) pop rex.RB shlb addr32 sbb jle xor stos loopne stc pop xor rex.R add or retq test mov xchg rex.RXB out (bad) mov and xorl shll cltd sbb out pop cmp (bad) loopne xchg jne sbb loopne pushq repz (bad) addr32 cmp xchg mov sub jp or sbb add test cld mov xchg ds (bad) rex.WRXB fwait sahf retq in (bad) sarb (bad) (bad) jb rcrb add imull mov and mov mov sub movabs repnz jns cmpsb rex.XB icebp movsb ja jg movabs xor pop cmp xor add mov jb sbb xchg movabs (bad) (bad) rex.RX mov mov cwtl add and outsb pop sub hlt data16 (bad) pushq jrcxz pshufw (bad) cmp or js push mov xor jo movsb movsl sub fnclex rex.XB pushq (bad) pop cmp rex.X xchg (bad) notl (bad) (bad) pop outsl rex.XB gs mov retq jmp (bad) sbb or push xor jns cmpsl callq hlt sbb mov mov (bad) xor rex.RB rex.RB repz cmp sbb loope push sub movslq xor outsb (bad) mov and jp sub jmpq (bad) cli test cwtl or xchg (bad) mov and movsl cmp (bad) add xor xchg in ficom jle retq xor notb movslq xchg (bad) jle rex.X or pop (bad) je rex.RB or and pushq adc (bad) add loopne out stos sbb es (bad) imul jle (bad) (bad) jmpq xchg out (bad) movsl outsl mov test xchg (bad) (bad) mov ss (bad) loopne pop sub (bad) sub je lods pop rex.WRB add add iret push fiadd fs loop xchg xor rex.WXB cmp ffreep gs sbbb jns ja adc pop enterq and xor cmp xchg js nop pmaxub outsl mov (bad) loope imul imul jb and fnstenv lret sub shrl mov movsl mov (bad) rex.WRB negb (bad) xor lahf jp test rex xchg (bad) gs and in test mov lahf scas sbb mov xchg outsl sbb adcb imul (bad) jmp (bad) fsubl mov add loope rex.WR (bad) pop xlat (bad) leaveq jl adc jne (bad) cmp or xchg mov rcrb jmpq and jae mov addr32 mov lods cmp retq rex.RXB movsl int and outsl movabs je test sbb mov xor out retq sbb (bad) sbb test xchg mov jnp callq cmp (bad) xor out cmc lods lods xor sbb nop loopne (bad) leaveq (bad) sbb test (bad) xlat movabs movsl movabs (bad) push (bad) mov outsb stos test pop sahf mov (bad) adcb sbb cmp std jae outsl add xor xchg nop mov mov nop or and ds sub sahf push (bad) jle lahf lods lret add iret in lock sahf cmp mov out xchg xor rclb cmpsb (bad) rex.WB rex.XB test mov int jrcxz movabs and adc hlt push mov pushq or repz adc xor js mov fcompl adc xchg insl test xchg cs sahf (bad) sub je or xchg pop in jo (bad) clc adc or mov (bad) cmpsl test in cmpsb movsb pop add jp (bad) shl sbb roll (bad) mov stos movb mov cmc jae xor punpckhbw fisttpll (bad) mov jbe rolb lock adc repnz retq mov out (bad) rex.RX add (bad) jp mov mov (bad) (bad) imul (bad) sbb add out test data16 xchg jp (bad) icebp mov xchg or (bad) mov std jg mov out or es in (bad) rex.RX (bad) sahf enterq push cwtl pop jbe movabs mov xor cmpsb add pushq cmp out (bad) jp (bad) movabs pop nop and (bad) stc sub imul decl (bad) icebp sub (bad) fisub loop mov xchg sbb jp xor pop (bad) rex.WB addr32 dec mov out rex.RX movslq cmpsl or and xorl push (bad) (bad) iret or add sub movslq rex.X and rex.XB movslq rex.RB scas rex.X (bad) testb outsb rex.WB mov sbb in mov lret fistl test push fisubr movslq rex.WXB pop (bad) pushq pop out pop rex.WRXB rex.WB xchg jl mov mov sti sbb lock and cmpsb mov gs mov jae mov and cmp in cmc movabs xor lea repnz andb (bad) mov shr stos rex.W cmpsb or rex.WB cmpsb xchg lods mov xchg std and sub (bad) scas adcb insb pushq (bad) adc retq (bad) mov or movsb (bad) and and rex.B add add movabs rex.WX mov add adcl cmp (bad) pop pop xchg je pushfq outsl scas movabs jo and pop xchg data16 scas xchg add jb gs rex.WRB or mov xchg adc sbb in in sbb scas (bad) push sti movsb (bad) lret rex retq pushfq xchg pop xlat xor (bad) movsl fisubr lahf clc add lods callq (bad) movabs movabs or cltd (bad) rorb mov out (bad) mov shrb (bad) xchg rcrb fbstp cmp movslq and fcmovb (bad) in xchg fidivrl sub movabs rex.WX mov outsb lods sbb cltd sub mull (bad) fisubr mov (bad) scas movsb cmpsl add rex.RB mov cmp movsb fwait pushfq movabs (bad) (bad) pop xchg retq (bad) and adc (bad) mov xchg mov (bad) std jl movsb addr32 (bad) adc mov add fwait sbb fcomip adc pop mov pop js pop mov or cld callq mov mov loopne sbb lss mul test test add (bad) add icebp sbb rex.XB mov loopne mov (bad) push and adc rex.X jmpq (bad) jrcxz loopne rex.WX rex.WB es rcr fstps xor rex.WX cmp sahf stc mov mov (bad) pop mov movabs sahf or sbb mov mov rex.R cld rex.X cmp xor cmpsb (bad) movsl (bad) icebp movabs xor pop out (bad) (bad) fbstp movsl loopne rex.X je nop retq or sbb mov xchg rex jbe (bad) out rex pop xchg or and movabs mov rex.X clc add cld shll adc fisubr jrcxz pop or sub movabs (bad) add xchg xchg (bad) cmpsl and cmp mov jle rex.B movabs (bad) (bad) push nop push out push rex.RX (bad) fldt mov in jg xchg cmp callq pop outsb mov sub xor lock mov nop jb leaveq cmpsl pop and and (bad) cs std rclb (bad) add pushq repnz adcl or (bad) rex.WRXB out movsl xor (bad) and mov (bad) (bad) rex.WR lock in insb mov adc sub jne (bad) (bad) xchg movabs mov mov lret xor shrl sub pop rex.RX mov mov (bad) mov (bad) and mov movabs mov ffree cmp andl adc cmp add jge and jp scas xor imul scas test pop je rcrb xchg (bad) scas or inc adc cs mov rex.WB gs shll sbb jbe movslq mov movabs xchg (bad) in decb mov cwtl or mov adc jrcxz (bad) movabs mov push and pop and jrcxz mov movslq rex.RXB push mov insb out iret in outsb (bad) (bad) callq sbb add cwtl out add (bad) addl sub (bad) or and in fisubl mov imull pop push mov cmc lods adc (bad) mov (bad) outsb mov movabs mov or (bad) (bad) clc add mov mov je jne adc pop lods rex.WRB fs push roll (bad) (bad) (bad) jns jo cmp lods out xorb cmc movsl shrb fbstp out pop stc mov xchg repnz lock and movabs add movsb outsb out adc rex.WXB fwait xor push jmp xor fldcw fisubrl jns lret incb shl jle ficomp cmpsl ja lahf xchg (bad) ss stos push repnz mov scas or mov ficompl in adc je fistp pop jno xor (bad) lods xchg repz push cs or sbb (bad) xor fild sub mov int3 xor jle movsl rex.WRXB or jg iret movslq and imul mov in mov mov rorb (bad) cwtl shrb or sub cwtl rex.RB int3 icebp sahf (bad) xor loope and jnp cmp fmul incl (bad) sbb rex.B insl mov roll jns cmp mov cltd push jo (bad) bnd cs lea or std fs and clc fsts test rex.X sbb adc push mov cmpsb scas mov mov mov in xchg jle mov xor cwtl mov push stc adc jb add jl sub (bad) retq adc pop mov (bad) mov xchg (bad) shlb ficomp retq fcomps (bad) in and je (bad) rex.W gs jrcxz or pop (bad) cmpsl decl test and insl mov out mov and sbb push leaveq add push insl in sbb outsb sahf stos adc (bad) mov and in adc or (bad) push pop or insl (bad) sub test sbb (bad) sbb or or jle xlat (bad) push push xchg mov movsl mov and rex.WXB outsb frstor scas add movslq rex.W pop and push cmp rolb (bad) jbe cli (bad) (bad) and push mov (bad) cmp std (bad) lods rex.WRB rex.R loope (bad) repz stc cmpsl (bad) (bad) (bad) fimul ja fisub xor jle fcoml mov je xchg imul subl mov pushq es jo movsl xor (bad) lods rex.WXB ss movabs fsub (bad) jbe pushq push mov rex.W test xlat jno xor movabs and pushq rex.W fwait retq fldt fimull gs mov cmp cli es mov lahf add (bad) sub xchg subb stc xchg mov mov int3 fimul addr32 push mov or xor leaveq je test jp roll (bad) mov outsb mov jo (bad) add int3 cwtl insb sbb mov mov (bad) pop pop out int pop rex.RX jnp mov xchg (bad) or (bad) jl pushq add movabs cltd mov sub std ljmp jmpq (bad) movsl lods test xchg (bad) jmpq shlb or push lods test enterq jg add scas icebp (bad) movabs sub ja (bad) push sub (bad) or (bad) rex.XB cmp cs mov rex.WR testb lahf (bad) mov adc movsl cmp mov lock cld (bad) (bad) add rex pushq mov cmpsl je sarl lods incb pop jl movsl enterq scas sbb xor pop (bad) xchg pop fbstp (bad) test (bad) jrcxz mov and scas (bad) cmc pushq jp outsb test (bad) xor push mov mov out cmpsb jl push cli rclb jbe or shl movslq test mov (bad) repz mov pop divl (bad) pop and mov scas jbe adc pushq xor cmp lret shl test add (bad) stc or pop (bad) cmpsb mov mov (bad) jle adc iret mov cmp lock rex.WX test shl add insl jnp jo xchg sarb (bad) fisttp sub (bad) addl mov shlb insl std outsb movabs hlt mov cmc mov int pop sarb cld sub mulb jle rex.W repz data16 in and test jbe out cmpsb test add (bad) lods xor and cmpsl rex add out imul add xor (bad) stos outsl or iret (bad) or outsb movsb fldenv loope out lret rex.WRXB rex.B lods mov shrl movabs xor insl fs scas mov xchg pop mov sub (bad) or lods popfq xchg outsw rex.WXB cmc fdivl lods mov adc adc xlat sbb rex.XB lock jle (bad) out push pop (bad) movsl sbb jp cmp xchg rex.WRX rex.XB sub jae fsubs sbb xchg rex.WRXB mov xchg cmpsb mov sbb clc xor mov addr32 lods test sub (bad) jg js repz (bad) mov push sbb mov movlps push sub scas (bad) hlt (bad) loope fucomip adc lea or jmp xor push scas loope push (bad) and (bad) cmp cltd loope adc (bad) insb lea add xor data16 push mov data16 xchg lret in mov mov rex.RXB (bad) in sti mov pushq cltd xchg rex.RB jae jle mov and cld in movabs lret cmp enterq (bad) (bad) or pop movabs jne and jl xchg cmp div loope fdivs xor mov data16 push xchg sahf (bad) xor (bad) mov mov mov cld (bad) retq xor es (bad) repz (bad) movsb or rorb js retq push data16 fwait xchg repnz mov jnp mov lods rex nop (bad) rex.RB rex.RX jmpq sub scas movabs pushq adc sbb (bad) or xchg rex.X clc (bad) cmp ss adc in (bad) xor jns stos fwait callq std mov movabs repnz lea lods adc and mov xor data16 sahf clc and rex.WRB cmpsb (bad) fstpl xor pop or hlt lret or fimul mov (bad) jmpq sub icebp or jbe rex.WR fisubrl mulb mov jp (bad) sahf (bad) (bad) (bad) (bad) repz movabs lods in sub mov or jnp movsl pop movabs roll or cwtl (bad) sub and cmp xchg fbstp notb or outsl icebp mov add sahf (bad) mov and out (bad) (bad) icebp mov jns (bad) in cmp imul pushq push subb nop shrb rex.XB rex data16 sahf jg (bad) fwait add data16 (bad) pushq adc ss scas add adc or iret xchg test (bad) cmpsb pop fcomps sbb sbb (bad) (bad) (bad) xor cltd movabs pop mov sbb sub xorb gs sbb test scas mov (bad) rex.WRX test sub lods mov cli (bad) addl icebp callq (bad) jp mov and in scas pushfq (bad) (bad) pop lods xchg push mov cmc mov int and and movabs push pop jl fwait (bad) add xchg jo outsl pop sbb rex.WRXB mov vpcmpgtb xorb pop (bad) mov cmpsl in int jne andb (bad) (bad) sahf test mov fidivr push retq mov in adc lods pushq or shrb imul rex.RXB movabs enterq addr32 movsl cmp stos mov (bad) faddl loopne cld (bad) xchg sbb fbld (bad) rex.W jno out cmpsb adc rex.WB rclb mov (bad) jo and mov xor out adc cltd lahf sbb lods scas jno addr32 jp ss xor movabs cltd and gs iret mov loop movabs outsb ljmp mov xchg jle rex.R adc cmp lret shll movabs sub mov jmpq (bad) xor movslq jbe jne and mov (bad) stos shrb inc pop stos jrcxz stos ds pop mov mov cmp mov (bad) test xchg xor sbb mov or pop fs (bad) sbb fwait (bad) adc test jl lods std add jno movsb rex.WR (bad) rex.XB and xchg mov jb movsl lods test stos xor scas fsubrs sbb cmpl add scas fs pop mov xchg (bad) scas rex.WB add movabs (bad) rex.RX rex.WB ja movsb jae and out (bad) rclb fistpll xchg or mov (bad) lods sub movsl xchg fsubrl (bad) lret xchg (bad) add xchg cmc pop xlat (bad) push add outsb leaveq movsl (bad) jb movsb xchg mov (bad) sbb mov jge mov mov mov outsb (bad) (bad) lahf movsl andl (bad) pop jnp lods jmp int stos mov pop (bad) movabs xchg jbe (bad) rex.XB loopne insl and push icebp push mov (bad) incb imul movsl mov xchg and xor stos xor rex.W (bad) xorl xchg jle rex.B jbe (bad) mov (bad) and mov (bad) sahf mov out testb jns hlt movsl mov or cmp leaveq loopne mov xlat in movsl xchg jle cmpsl xchg sbb (bad) repnz sbb repz scas mov insl outsb mov rex.X mov cmp jl movsq stc (bad) xchg (bad) mov lret (bad) (bad) or out jbe data16 movabs rex.WX fcoms (bad) (bad) js pop lock xchg rex.RB bswap mov (bad) (bad) or movslq jbe xor xor and fs sub out (bad) outsb callq push (bad) jle lret cmc loopne movsl (bad) rex.WR rex.X rex and outsb decl and (bad) rolb mov fisubr mov std push add xchg scas mov xchg adc ja (bad) mov rex.WRX or (bad) pop (bad) add mov shll mov test mov mov movsl xor push nop outsl push (bad) lahf mov (bad) mov div in (bad) test pop (bad) outsl mov outsl repz cli cmp insb (bad) xchg enterw sahf (bad) rex.XB rex pop cmp and sub movsl (bad) int3 mov movabs rex.WXB mov xchg and movabs mov rex.RB rex.RX add xchg callq mov pop sub or mov repnz pop mov (bad) sarb cmp and ds ja (bad) jo adc out divl popfq mov (bad) rex.RXB pushq mov sbb mov callq pushq and pop (bad) sbb repz (bad) out scas (bad) cmp pop fistpl (bad) (bad) cmc iret jo mov sbb fnstenv out es iret movabs rex.X pop or repz stos jg in fs pushfq stc (bad) movsl (bad) and (bad) jmpq sub rcll xchg sbb xor mov loopne data16 (bad) (bad) jp (bad) stc (bad) cmpsb sub jmp (bad) movabs pushq (bad) mov rex.WB pop mov rex.X (bad) mov push rex.RX gs adc loop rex.WXB in mov push sbb lret test mov sbb or sahf stc mov shr sbb jl xchg jne (bad) mov mov (bad) (bad) or jmp repz cs out add xchg (bad) or pop fs je or psrlq sub mov xchg movabs loop subl ss test pop jrcxz pushfq testb pop sti rolb mov test or lret test lods push ljmp (bad) and mov (bad) enterq jle mov pop xchg lods push movabs mul int outsl (bad) or test pop jo jne je sbb callq movabs and mov rex.X xor jo ss lret or (bad) pop pop rex.XB fisubl rex.WX cwtl xorl rex.W xchg out movabs lock mov fs (bad) lock mov mov xchg cmc insb jbe add sti comiss jne (bad) callq cld fisubrl mov pop lods (bad) out lods (bad) pushq xchg xchg add sti gs sub add shlb in cmpsb in js out jrcxz or rex.WXB movsl or ss (bad) mov sub test scas (bad) jle (bad) lods repnz movabs (bad) pushfq jg or jl push and cmp negb (bad) mov (bad) xor testb or scas insb or sbb rex.RXB rorl xor insb xchg adc test stc pop (bad) stc add rex.WRB jns cli imul jbe in stc rex jne callq (bad) in icebp pushq rex.XB mov out push jle mov xor mov mov (bad) cmpb std subb andl (bad) sti mov pop in (bad) (bad) mov (bad) (bad) movsl mov cmp imul rex.WX push push xlat and add jrcxz ja adc add push stos pop sahf jrcxz xlat in cmp stos mov xchg lahf mov rex.X leaveq rex.WRX cmp pop (bad) add mov (bad) lods or sar data16 movsl cli jl je mov sarb pushq xor sti mov xor rex.RB xchg stos subb add jbe imul (bad) mov imul cld jno rex.RX sub nop stos rex.WR mov (bad) jnp retq loop (bad) mov (bad) jne je lret in out insb (bad) rex.WR rex.B lret jle xlat jb lods or or (bad) pushq mov test (bad) (bad) (bad) rorb mov (bad) rex.RB incl (bad) scas (bad) movabs jp jle sbb add push jp movslq je ficom pushq jp rex.B je add (bad) push mov (bad) (bad) pushfq jp or xchg (bad) subl imul movsb (bad) cmpb addr32 cli test (bad) jb (bad) lock fdivp cmc mov scas or addr32 outsl add insl data16 (bad) xorb mov rex.RB push scas in mov mov in add out mov pushq in add mov xchg rex.WXB mov adc lahf outsl pop (bad) sbb cmp jae pop (bad) sub jp sbb push mov pop in mov xchg loopne (bad) es test cmp int (bad) iret cwtl out ja loope (bad) imul movabs test movabs notl fldcw (bad) and xor fild rex.WR cld movsb (bad) sahf mov lock ja (bad) cli and in pop xchg rcrb sub sbb jne (bad) (bad) (bad) es add (bad) xlat test and outsl (bad) test ja leaveq cs repz or loop movabs adc xorb movabs movsb out sub pop cs (bad) add iret xorl movabs or repnz sbb mov fwait in (bad) jb xchg sub cld xchg fwait adc in jmp xchg jp (bad) lret cmp cmp test sbb sahf add test rorl fmull rex.WRX movsl mov (bad) out mov (bad) (bad) jle stos (bad) push repz ss fisub xchg rex.WR ds lahf fisubl gs mov jl (bad) cmp popfq divb sub adc cmpsb xlat jnp (bad) xchg lret sub mov mov shll in loop test pop scas test movsl sbbb (bad) cs movabs sbb rex.WRXB push int3 out xlat in popfq (bad) enterq jo outsb addr32 cmp rex.RX cmpsb xlat pop test movabs jl jo (bad) mov pop test xchg fistpl pushq mov sbb je (bad) pop std sub cli out hlt fs or sarb or and nop xlat mov add xor retq fisttp mov lret (bad) ficomp out (bad) (bad) shl fimull lods icebp cwtl xlat movabs rolb cld and push addr32 mov cmp cltd add mov rex.WRX mov mov cmpsb mov pushq cmc imul pop out mov (bad) (bad) mov mov test ss and pop cmp outsl insb mov and xor push lods rex.WRB test add pop push or xor or (bad) pop adc out mov out xchg mov test xor (bad) cmp mov loopne or pop (bad) and add lods in adc jno and rolb test jb loope add and (bad) jle movsl rex.WB rex.R jns decb ja movslq rex pop (bad) (bad) xchg sbb lret mov movsl or rcrb fwait xor stos mov fildll mov jge insb mov movabs cmc insb retq (bad) mov pushq data16 jo icebp (bad) rex.WRB addr32 out mov movsl rex.RB lock retq (bad) orl adc outsb test cli out (bad) xchg xchg gs jne js or pushq retq mov and gs rex.WX (bad) sahf enterq add mov jl jo mov adc xchg mov (bad) (bad) xchg pushq xchg lret movabs shrl (bad) add rex.WRXB jle ds (bad) cld mov out sbb or rex.WRB cmp xchg cmp stos rex.RXB jle data16 rex mov push xchg adc (bad) (bad) shrb mov mov add callq pop sub lods rex.WB movabs js sahf cmp addr32 xchg jge sbb mov fstpt jo add (bad) xor mov and and (bad) (bad) cli (bad) movsb mov loopne jg in scas (bad) mov outsl xorl jge test rex.RXB xor xchg xchg movabs sti mov xlat jrcxz pushq and rex.RB ss (bad) mov jp imull or movsl fdivl xor out cs lret mov mov push (bad) rex.WXB (bad) hlt ja pop mov jl pushq adc loop xchg sub fimul movsl rex.WRX pop xchg push mov mov mov sub (bad) movsb imul push add sahf insl lods xchg or and repnz movslq jrcxz (bad) int push fistl (bad) pushq pop hlt pop jle adc xchg pop lret rcr rex.WB jp (bad) (bad) xchg mov sbb mov in mov rex.RXB jle adc and jp out adc mov mov (bad) std test mov out xor fldenv mov lret push (bad) cmpb pop push (bad) pop xor callq push mov lahf cmp lods rex.WRXB adc out rex.RX movabs (bad) lahf push es mov jnp mov scas add (bad) pushfq (bad) jle mov xchg movsl push loopne jae sbb or pop mov rolb push frstor (bad) pushq lods mov rex.RB movsb movsl retq lret fnstsw stc loop test rcrl in jp mov and cmp cltd es cs (bad) add (bad) cmpsb scas (bad) jp mov (bad) jo adc popfq xchg callq sbb xchg movabs (bad) cmp push and add addr32 rex.W stos mov fs loop (bad) sub xor rex.B xchg add out rex.X (bad) (bad) jrcxz (bad) pushq loopne mov or rex.WRX std loopne mov sarb pop test hlt xchg (bad) (bad) jmp and (bad) mov mov mov scas adc mov add jp,pt lahf mov mov and rex.WX gs pop jno or movsl mov jmpq mov lahf rex.WRX mov (bad) movabs mov retq and pop add data16 (bad) pop rex.WRX pop jbe test pop mov fscale xchg es rex.R loopne mov jle ss hlt nop cmp cmp mov fcomip movsl xchg sarb lock (bad) (bad) in movabs cmpsl std insl rex.WRXB ficompl rex.WRB rex.R rex.WB callq add mov fcom cmpsl movsb push cmc mov (bad) xlat lock pop adc pushfq mov rex.RXB cltd data16 stos rex.WB mov mov fisub xchg jl mov xorb xlat adc in mov cmc mov xchg in ficomp in out (bad) mov jge scas rex.WRB sti ja or cmp and cmpsb (bad) movsl add mov rex.WRX xor fld jg movsb (bad) jnp sbbl mov ss (bad) mov pushq mov enterq or lods ficomp ja es or sbb jle mov push mov movabs (bad) stos sub stos mov or add (bad) loope pop fwait es (bad) jbe rex.WRX movabs jrcxz adc cwtl movslq pushq (bad) in jae outsl push insl sub int3 stos enterq out add mov (bad) (bad) rex.WB rex.WRXB movabs (bad) xor (bad) xor (bad) fidivr jle mov outsl xchg xchg lcall ss xchg xchg es movsl (bad) xor jne addr32 mov callq cli sub cmp imul orb enterq (bad) fsubrl in cmp xor mov rex.WRXB adc ucomiss xchg rex.RB add callq js (bad) lock imul stos or cmpsl adc in lods xchg out loop xchg push js mov (bad) push mov pop in pop test xchg loop push loopne xchg rex.XB or faddl lods pushq lods xor xchg mov mov cs or clc mov stos test test (bad) jp stos faddl movabs cmpsb (bad) fcoml fildl sahf push or in and addr32 rorl sub outsb mov fstps fsubr lock (bad) jp mov sub jb jno pushq stos subl lods or ja (bad) rex.R push jg (bad) cwtl es cwtl imul mov shrb fstl add sbb imul (bad) (bad) (bad) and jae jp jno pop loope rex.W add iret pop cmp xchg add mov outsl mov mov or in jle ja pushq mov imul rex.RXB xchg (bad) cmpsl movsb (bad) (bad) sub outsb jns push (bad) (bad) addr32 xchg (bad) (bad) jg rex.RX and jle out movsb (bad) jg sub (bad) jmp sub cli rex.WB pushq (bad) insl lret mov xor rex.RX rex.WXB rex.R (bad) movabs (bad) lea ficomp xlat jle mov xchg push enterq popfq add xchg (bad) nop out adc lods (bad) clc es int xchg mov xchg out jne jg jno (bad) iret jge out movsl cli callq repnz popq ss imul (bad) std movb cmpsb lods pop jmpq loopne out or outsl (bad) retq pop stc nop sub add adc loop or repz movsl clc xor outsl (bad) adc out mov cmp xchg rex.WRX mov and mov xlat push test or (bad) je xchg int3 sar mov rex.WRXB adc sub or and in mov adc rex.WXB or mov pushq xchg insl mov movabs jbe xor pop movabs mov mov and mov rcrb subb rex.XB rex.RB out pop insb movsl jbe fs sahf cmpb pop add mov rex.R pushfq (bad) imul xchg rex.RX in sub cwtl and sub or (bad) sbb adc mov mov (bad) loope or mov jl jo (bad) pushq mov repz cwtl add stc in xchg mov sub loopne imul sub lahf or mov jo pushq mov movabs sbb (bad) jns sub mov and fstps xor cs rex.WX rex.WB shr fsubrs hlt divl (bad) cmp jo (bad) cmp out (bad) and mov and jmpq xlat scas sub icebp mov outsb (bad) lods hlt test rex.RB xor cmp andl xchg xor (bad) mov orb or hlt test mov add (bad) rex.WRXB rex.RB repz jle and jle cmp pop xchg rex.WR (bad) lods rex.B data16 movsw data16 sahf or shrb add fstpl pop (bad) scas cmp (bad) mov adc and data16 shrb (bad) sbb push ror xchg sahf rolb sarl xchg or addl (bad) jne fyl2xp1 mov in callq (bad) out sbb fistpll rex.WRX (bad) (bad) sbb out rex.X imul add pop adc mov add retq test rex.B ds insb gs xchg out xorb mov ss setne xchg add rex.WR rex.WRXB je jge mov sub lret fnstsw push imulb cli outsb fnsave xor fdivs outsl fmulp in in movslq and rex.WR sub stos pop cld and adc lock sub lahf pop (bad) jo test jo jrcxz nop jle (bad) andb xlat sub mov rex.RX push data16 mov fcmovb test sahf loop shll or and movabs insb jne in (bad) rex.W or or (bad) (bad) (bad) cmp mov clc movabs fucomip repnz xchg in and or data16 jle mov ss rex.XB je mulb popfq enterq mov cltd scas jne stos pop sbb sbb mov subb pop (bad) (bad) fucomip add rcrl movsb (bad) xor idiv lahf clc movabs sahf sub and push pop cli adcl movabs jb notl repnz mov retq repnz or movslq addr32 jno pushq fbld gs repz sbb movabs rcl and adc outsl test and movabs mov or rex.R (bad) scas jno stos or cmc clc out mov and test cltd out mov push in in fsubrs rex.X (bad) add retq xchg fcomp (bad) (bad) enterq xchg loop sbb mov out sub (bad) idivl jno mov scas mov movsb lahf in int3 (bad) (bad) mov fbstp out xor pop mov or mov add sbb scas adc movabs (bad) (bad) (bad) and rex.RX mov and js mov xor movabs cmpb nop loope mov loope and nop (bad) stc mov addr32 xchg addr32 andl rex.X and and jbe movslq test rex.RX jne out mov mov movabs jrcxz movslq pop rex.X sub (bad) in ds mov fisubl mov movabs in mov (bad) callq mov and rex.RXB cwtl data16 movabs repz rex.WRXB addr32 (bad) loop repz rex.WRXB hlt addr32 lahf rex.B jo movsb fildll (bad) (bad) cmc fstps adc out test movsl shlb mov jo (bad) pushq faddp mov (bad) ja mov cmpsb jae fcomip hlt subl stos xchg fistp sub in mov mov and movsl rex.XB mov int3 rex.WRB or out movsb movabs (bad) out mov and movabs xor movabs (bad) add ja fidiv icebp addr32 retq movsb in fistp iret mov movslq (bad) out mov fisubrl retq (bad) ja or jae (bad) fsubrs mulb cmp idiv cmp and jo rex.R jne test lahf movabs repz rex.WRXB pop movsb mov addl fild retq cmpsb stos outsb (bad) rclb xchg (bad) cmp (bad) jo jns cmp int3 leaveq addr32 (bad) mov loopne pop out cmp and addr32 retq movsb (bad) sub (bad) movabs cmp (bad) cwtl and (bad) (bad) lret xchg (bad) adc xor rex.W fnstsw loop jmp fidivr addr32 (bad) xchg mov movslq or rex.RX movabs pushq (bad) push xor mov xor test jbe loope push add mov ja (bad) mov mull lahf callq jmp mov stos ja (bad) mov ss scas sbb jns mov out lea movabs cmpsb loope imul xor lods push cmpsl sarb loop jmpq and ja fisub outsl jle and fs movabs and nop movsb addr32 push addr32 movabs insb data16 retq sahf (bad) jo ja ficomp movabs loopne jo ja ficomp rex.WX (bad) movabs (bad) out sahf sahf retq fiadd movsb (bad) and movabs and (bad) fs out (bad) jrcxz nop movabs jno out (bad) in nop and out movabs jne test out (bad) and subb jo ja (bad) movabs add vpandn rex.R (bad) (bad) nop in (bad) out pop insl out movabs (bad) (bad) nop add out movabs (bad) nop andl add and (bad) (bad) movslq rex.RXB jecxz movabs (bad) jnp stc pushq xlat (bad) and jns outsb rex.R (bad) adc (bad) out jbe movsb (bad) or rex add mov outsl in cmp xchg mov (bad) or (bad) jbe rex.WR adcb callq pop (bad) xchg test (bad) rex movabs jb movsl rclb xchg jno out out out scas (bad) and andb jo (bad) xor (bad) andl repz (bad) or scas (bad) retq cmp std repnz loop or xor push (bad) movsl xchg retq sub lcall cli jl pop adc fisubr pop jle std lret retq jae sbb cli movabs push ds (bad) faddp pushq repz push rex.WRXB pushq std rex xor cld pop movsl jno scas outsl out push insb movsb jg (bad) leaveq js iret push xchg in ror clc fidivr and cmp adc and fdivs xchg add push insl int lret outsl fisub std (bad) addb add add lahf push (bad) cmp (bad) (bad) pop movabs sahf (bad) (bad) cltd mov (bad) fild pushq pop (bad) mov jbe add or sub (bad) test mov rex.R movabs jge out xchg add rex.RXB pushfq (bad) ds adcl ficomp out or rex.WB push (bad) pop icebp mov sub mov xchg mov xor (bad) rex.WXB scas rex.WRX or out movsl sub outsl int3 add int3 imul (bad) (bad) or fbld cs cmp mov cmp rex.RX ss loope clc out (bad) or mov out movabs nop test (bad) jg jno out out out out es jg jno out out pandn mov and cli mov (bad) out movabs cmp (bad) rex.W rex.RX rex.RB gs (bad) movabs test lahf or rex.WX (bad) add and xchg cmpsl imul (bad) push rex.WRB rex.B jbe jg lods mov xchg rex.RXB je movabs mov mov imul fidivrl jo mov mov cs mov cmp out js int adc lahf pushq (bad) ja loop outsl mov test jo rex.WR sbbb pop and (bad) xchg ljmp cltd outsl sbb cmp (bad) out jg sub outsl cwtl movabs rorl lea jbe movsb es (bad) fidivr jae (bad) js movsb jl (bad) (bad) clc xchg movabs add rex.WRX (bad) loop repz jns lock clc repz ja (bad) movabs outsl sub out (bad) (bad) addr32 jle (bad) repz out stos rex.WXB (bad) xchg orl (bad) movabs jb cmpl xchg xchg loop sarl push ja je (bad) int3 lods xchg push pop iret repnz jl stos enterq ss outsb xchg (bad) mov push or (bad) fidiv or test callq or xchg xor pop cmpsl fs push loop fcmovb loop pop stc xchg xchg (bad) fs ja sar xor pop rex.B lods insb loope (bad) (bad) popfq add sub loop xchg lret fsubrs pop ds jnp jle in mov jg mov retq movsl mov mov stos rex.WXB fnop sbb (bad) lahf lret stos cmpsl clc movsl mov insb fnop int3 loop rex.RX rex.WRB mov (bad) (bad) mov nop mov outsl movsb sub movsl (bad) pop pop jl sahf pop sti pop fistpll rex.WX push adc outsb or add addr32 jbe clc pop jle iret mov sbb jg rex.WX shll jrcxz nop loope pop xor adc (bad) sbb xchg (bad) pop (bad) mov movsl jrcxz push cli mov sub jae insb push testl idivb add (bad) test cmp lods jae fcom (bad) stc xchg movsb imul jg pop rex.WR movabs movsl psadbw (bad) (bad) pop mov sub testb mov jb sub push and adc loope pop adc scas or xchg add (bad) push lock (bad) jno or insb (bad) adc decb fild in rex.RX jb or mov mov xlat out xchg xchg es jbe (bad) pushq scas movabs jp andl pushq mov sub xor pop sahf stos cmp pop push and adc xor cmp pop or mov add (bad) sti cmpsb (bad) mov (bad) jrcxz out sub (bad) lods rex.WRB fildl cmp out enterq or sahf ss fbld pushq sarb sbb (bad) scas xchg mov (bad) (bad) int add or fldl pop rex gs adc vpackuswb sarl adc fadd jns add or adc pop pushq fwait pop cmc and sub in movsl mov push test or and pushq and sbb movabs xor (bad) bnd mov repz (bad) repnz mulb rex.WRX cwtl adc mov or sub jbe or add rolb movsl rclb and fidivl cmp mov (bad) pop mov cmp lahf cs sbb movabs fisttp and xchg int adc int3 jmpq (bad) xchg popfq neg mov movabs jmpq jg (bad) test rex.WRX movsl cmc (bad) mov jne movabs test (bad) mov idivb rex.W (bad) xchg in adc data16 (bad) outsb scas icebp mov movsl jmp out es jg (bad) xor in mov (bad) (bad) xorb adcl scas sub (bad) adcl (bad) insb mov pop loopne loop sbb movabs lock iret lret stc xchg mull sub es fldt mov xor movabs (bad) adc rex.WRXB movslq jno xorl xchg mov add pushq mov or movslq xchg scas or sub cmp xor retq adc pushq xor (bad) mov shll faddl jmpq retq cmpsl pop in and push push js jb movsl push mov je sahf (bad) sahf (bad) mov fisub loopne fidiv test or or imull (bad) sahf and stos loopne sbb in (bad) sahf cmpsb (bad) push rex.RX out movsl (bad) rex.WRX push movsb leaveq cmpsb (bad) sbb fsubrp jp xchg mov mov lods (bad) sbb sbb fisubl jo lahf fiadd (bad) and movslq cmp in lods rex.WRB testb (bad) xor sahf out jae rex.W mov mov ds je rex.RX rex.X out hlt out mov in ds or js or sahf je xlat repnz movsb pop mov in js jle xchg and sbbl adc scas xor test jle (bad) ss push shll mov rex (bad) loopne loop xchg sbb outsl out or es nop pop pushq add in jge mov mov mov mov in ds je pushfq cli and xchg and mov jbe or xchg sahf jle mov pushq hlt (bad) movsl xor sbb mov pushq movsl mov xchg sbb outsb jno sub sub push lea (bad) mov (bad) mov xor xor rex.WXB test sbb push sahf xor (bad) mov clc xchg fisttp (bad) sahf rex.WB xchg (bad) mov (bad) loop mov rex.RX fisub idivb stos add cwtl mov pushfq pushq xor cmp jge and cmpsl push ljmp (bad) mov int cmc (bad) rex.WRB add jg cld jge sbb sub cmp stos (bad) mov stc movabs (bad) cmc (bad) movabs fistl jae (bad) lods mov pushq cmpsb sahf or movabs pop jo add bsr (bad) mov pop (bad) movabs int clc ja movsb scas orl or fwait idivq (bad) sidt loop pop test (bad) mov (bad) pop xor rex.RX xor rclb cmpsb lahf mov cs xor jae xchg jbe out repnz jmpq xchg rex.RB data16 push sub or adc jno fsubrl data16 mov add decl stos mov imulb movabs xlat xchg es jno rex.RXB movd (bad) jb rex.WRB icebp fisubr mov andl loop and cmp and mov cmp pop push scas add fwait cmp and jb test outsl or test and jb movsl lea sbb sbb (bad) fstpl (bad) rorl and sub jle movsl xchg cmpsb frstor mov test pop (bad) mov xor push rcll add add mov jne (bad) xor jno pop sub imul retq xchg mov pop out rex.WRX mov and test lods rcrb mov (bad) push or xchg insb movsl (bad) (bad) cmpsb xchg xor or adc (bad) lods test jo sbb mul retq (bad) andl movabs std fistpll jrcxz sub jbe imul or test outsl rex.WRB rex.RB rex.WX pushq mov pushq mov jo orl cmc (bad) adc pop and std pushq je in stc cmpsl mov rcl xor pop xor test mov adc sbb out (bad) imul rex.RXB mov mov xchg loope scas sbb bndldx jb cs mov cmpsb cmp and push xlat (bad) pushq (bad) cld rex.RXB retq pop fimul callq jns jbe jo xchg jle addr32 in fcomp mov rex.R fnstenv movabs movabs sbb mov sbb rex.R (bad) rex.RX fisubrl (bad) (bad) mov scas enterw retq mov outsl push cmp out add (bad) (bad) repz subb sbb test push lock movslq pushq adcb mul xor insb pushfq loopne adc mov mull (bad) repz out xchg jo retq or sbb movabs pop mov (bad) adc mov fidivrl (bad) test addr32 dec sbb popfq (bad) (bad) movsl jle movabs stos mov es mov rex.WRB stc rex.RX xchg (bad) (bad) insl sahf fcomi (bad) (bad) xor loopne test mov movsb push cli in sbb mov pushq jp sahf (bad) rex.WXB rex.WRB (bad) mov jmpq add cmpsb xchg stos push sub ss push jmp adc retq jp jmp movabs movabs pop repnz mov cwtl hlt cmc add mov shlb pop hlt mov sbb lods xor jo,pn ja jno mov loopne pushq ja cmc sub nop cmp pop push xlat pushq adc (bad) jo fisub movabs movsl sbb push jp mov jo xchg jg je (bad) sbb movsb (bad) adc mov jp,pn jbe outsl jl fimull movsl jbe,pn sub loop movslq rex.XB ds xor rex.RB (bad) stos lods cmpsb sbb test sbb lahf std mov and mov lret xlat xor movslq (bad) enterq pushfq (bad) xchg repz es rex.WRB mov sub lret (bad) imul xchg rex.WB rex.WX jbe or (bad) sbb push insb (bad) add xor out mov gs jo in (bad) (bad) xchg (bad) (bad) je rex.X es sub rex.WRX rex.WRX in (bad) loop cmp (bad) fwait add roll (bad) mov retq jg inc xchg mov lret adc xchg pushq ss movslq pushq xchg outsb fisub movsl jns mov jo fiadd xchg add mov enterq add es xorl (bad) fild rex.WRX mov icebp and sub jp stos sbb mov movsl pop outsb cmc inc mov out es and pushfq cmp jmp (bad) movsl xlat pushq mov rex cmc pop sahf push xchg cmp movabs hlt in int (bad) addr32 push mov lret repz push pushq jle xor mov add movabs mov and mov add rex.R xor (bad) and (bad) mov jrcxz rex.XB rex.W push fcmovu fcomip and jle movsl mov pop fisubr mov rex.RXB mulb pop hlt rex.RXB (bad) in jmp and (bad) and js outsl data16 movsl xor sahf cmpsb fcoml (bad) movsb or (bad) pushq retq or jo (bad) ja jb lret (bad) outsb or (bad) add add addr32 xlat (bad) adc mov outsb outsl retq movsl (bad) xor (bad) (bad) decb (bad) sub movabs mov add or adc (bad) jo out movsb lretw fimull sub je push add mov popq or (bad) in and (bad) and orl mov scas mov fist cmp cld stos (bad) rolb push cwtl test jne cmpsl xor sub mov xor or clc or repnz rex.RXB or outsb xchg rex.X pop jg test movabs callq cmpb (bad) ja movabs pop out cmp adc xor cmp pop jae (bad) jrcxz movsb lods addr32 rolb rex.B out ss (bad) in (bad) push rex.WX xchg clc lea mov sub or add test imul (bad) enterq mov (bad) lea lahf cli cli pop mov add or repnz stos out sub cmpsb movsl mov out hlt scas and stos mov mov lock out insb jns,pt rex.RXB cmp rex.R imul (bad) nop (bad) xor xacquire and (bad) incb (bad) cmpsb outsl outsb pop mov mov pushq (bad) jbe mov outsb (bad) fs sub scas rex.WXB rex.WRXB jb lret fs test rex.WX mov fs insl loop jle addr32 xchg pop int (bad) add fnop rex.WX in movsl jg and stos lret imul pushq jmp lods jge addr32 (bad) sbb idivl mov (bad) rex.RX or xor scas xchg shlb loop enterq cmp (bad) scas outsb mov (bad) pushq xchg scas sbb movabs add pop and add addr32 pop scas xchg sbb mov (bad) movsl (bad) xor movsb (bad) xchg or int3 mov movslq adc (bad) mov fidivr movsl xchg jbe out pop mov add (bad) in jb ss rex.R add push push hlt xchg jrcxz (bad) or mov ja mov push mov xchg mul xor jrcxz rex cmp (bad) sub loopne mov out jbe cld xlat mov mov mov pop or mov scas rex.WR rex.RB (bad) shr mov xor orl xchg insl je loope insl sahf movsl out rolb out je mov xchg add stos int movabs (bad) pop fimul lods outsb sub (bad) mov and hlt mov (bad) push (bad) or movslq fdivl movabs add out xor rex push scas (bad) loop (bad) jns movabs xchg rex.RX mov jge loopne mov rex.R (bad) and or pop or and pushq xchg (bad) vpsrad scas or cmpsl add mov mov mov pop cmpb jl (bad) mov add (bad) mov cmp xor xchg pop movabs mov pushq mov adc (bad) (bad) ss out (bad) ficoml mov (bad) mov movsb mov lods adc mov out xlat jle cmp hlt sahf loop,pt rex.WX mov mov je outsb rex.WR mov movsb rcrl (bad) cld jne mov out shlb shr xor sbb rex.R sub push jg jle mov stc (bad) rex.RXB add add (bad) subb xchg nop and rex.WXB outsl and pop in or rex.RX addr32 mov push rex.RB and rcrl sub or (bad) jne or lods mov pop cli test movabs jb movslq (bad) movsb mulb jge push rex.RXB cmpb fisubr ficomp (bad) sahf sar lock sahf cmc or (bad) jrcxz xor sub (bad) mov movsl jp loop (bad) movslq pop icebp xchg xchg (bad) jns insb movabs (bad) test repnz retq mov adc xchg stos mov cld cmpsb push adc movsl xor mov lret in push (bad) outsl add adc pop shufps (bad) outsb je movabs repz movabs rorb stos mov cmpsl sbb jo pop sbb mov js push mov sahf jp (bad) (bad) fldl mov pushfq mov cmpsb lods xor popfq sahf fildll mov (bad) lret ds loope jmpq add jns mov sbb add fdiv movsl add mov sub mov fcmove rex.WRXB jb rex (bad) mov insb or mov retq testb retq rex.W push (bad) repnz outsb hlt (bad) in pop cmc rex.W mov rex.WR shll jae shrb or xchg pushq lret pop movsb mov cmp stos xchg add scas jbe mov movslq mov pop mov mov mov fild mov enterq ss rex.W fildll and mov (bad) ss jp rex.WRX mov cmp fcompl in xchg add cli rex.RX divb xchg jb mov callq (bad) or rex.W ja or mov (bad) add in jno jmpq fmulp xchg mul mov rcrl xchg cwtl sbb xchg jle movabs test rex.WXB (bad) fisubr rex.XB rex.RX (bad) jle enterq (bad) test mov mov mulb nop (bad) out rex outsb fs jge leaveq rex.RXB in in xor push and (bad) mov out outsb pop divb or xor add pushq mov (bad) xorl rex.RX cmp pop mov pop (bad) sub pop mov ss adc xchg cmp add (bad) movsl (bad) data16 xchg iret mov loop stos pop (bad) adc lret in loop xchg scas xchg (bad) lret vpshufhw (bad) scas je rex.WR (bad) scas (bad) (bad) decl stc in in or int3 test subl mov (bad) cmc test retq insl mov push and add insl test rex.RB rex.WXB (bad) addr32 test cld sahf add mov cwtl je push jb mov xchg rex.WB cmp rex.RX push (bad) add sbb xchg or loope pushq pop rex.XB rex.XB pop push (bad) fcoms add and lods xchg jmpq mov imul jle sbb (bad) sahf insl push adc mov adc (bad) mov xchg out mov (bad) cmc lods jae scas (bad) rex xor jmp scas sub push (bad) cmpsb push adc (bad) outsb add mov imul pop andl jo test mov and (bad) xchg in push fs xchg add imul test (bad) data16 xchg movsl repnz mov jle (bad) sub insl rcrl (bad) outsb in movsl adc jne pop pushq pushq (bad) retq pushq sub sahf (bad) sbb jno cli mov (bad) (bad) xchg stos or repz add xchg out mov stos xchg jne (bad) test fdivs sbb rcrl mov movsb adc xor repnz lahf movabs adcb pop or adc push mov movsl fbld push test stc or pop pop pop mov adc je (bad) std push lret in and and je or fadds sbb lods mov jge and out je stos lods jle jle (bad) repnz jno movsb mov (bad) jl sub rex.XB test and icebp cmpsb and sbb cmpsb rex.R jbe outsb jp cmpsb adc out sbb jmp fildll movabs push popfq (bad) sub (bad) (bad) sub (bad) (bad) mov adc mov cmpsb rex.XB lods sbb jge xchg jrcxz sub (bad) add cld lret push outsl xchg mov mov xor pop addl sbb adc mov repz js lods movabs add outsl addr32 stos xorl mov pop fstl sub xor (bad) mov mov rex std lahf add (bad) (bad) or mov add (bad) and cld mov rex.WRXB mov stos test jne iret cmp rex add movsl roll fistpl mov xchg xchg sbb in or cmp xor (bad) and sbb movsb rex.WXB out mov jle sbb out pop fildll movabs stos cld adc lea (bad) clc push or fwait loopne movsl (bad) pushq (bad) push jne or jp lret movsl sahf sub adc (bad) pop scas fildl pop jnp lcall pushfq pop xor fucomip stc or or pushfq (bad) xor lahf ja callq xchg pop test (bad) rex.RXB scas pop movl (bad) sbb test loopne (bad) movabs lods mov fistpll (bad) mov iret mov rex.RX or or (bad) movabs rcr rex.WRX rex.B in neg rex.WR test in jne js add lea movabs cltd (bad) pushfq cwtl (bad) (bad) cmpsb ss pop and cld sbb mov (bad) mov cltd out pushfq pop or stos (bad) (bad) sub xchg imul (bad) lret loopne cmp cmp (bad) pushq jb popfq clc cmp add mov (bad) rex.XB pop push jp sub xor idivb or idiv (bad) ss rol xchg (bad) rex.WRB (bad) ja test es negl sbb adc mov loope movabs callq (bad) pop (bad) push scas mov mov pop andl lea ficomp cld pop cmp ljmp lret gs rex.WX xchg test (bad) cwtl movslq xchg push lret mov idivl andl (bad) xchg subl mov sbb (bad) and jae (bad) movsl sub sti movsb mov jl (bad) sub movabs es addr32 js and and loop stos mov add ja int loope sbb (bad) adc scas lret jmpq lods mov in (bad) rex.RXB sbb movabs sub rex.RX add out mov mov int mov sub sar mov pop pop xor pushq pop mov jp and out mov movsl mov repnz mov adc or mov fwait out jle sub movsl and mov loop mov or rex xor xor (bad) or jle pop jge std and mov roll outsb (bad) mov nop or (bad) sbb mov cmp mov retq sbb rex.WR mov mov mov rcrb push mov lret pop and (bad) mov adc data16 stos rex.WRB jae cmp in add clc jo xor xor in cmp psubsb imul imul (bad) xor mov outsl pop loop push mov (bad) (bad) es cmpsb mov pushfq lods jnp cmp rex.R rex.WR repz add loop lret mov test xlat mov mov or imull (bad) rex.RX repnz adc mov retq ja jno mov xor (bad) (bad) pop and js (bad) pop mov sahf movabs mov (bad) addb js push insl je mov nop push mov repnz pop adc retq (bad) movsl xchg (bad) callq sub outsl ss dec (bad) movabs sbb test add in xchg rex rex.RXB fsts (bad) xor jp data16 (bad) or clts test cwtl in xchg ss pop sub subl sbb (bad) mov out insb je (bad) cmp (bad) cwtl add cmp or xor and (bad) cmpsl xlat data16 lods (bad) jb mov push (bad) rex.RB je rex.WX xor cmp cld movsl mov movabs (bad) movabs xor jne or (bad) test xchg mov xchg or push stc (bad) lret cmp lcall pop mov pushq (bad) mov sahf movsl (bad) hlt sbb out pop clc xchg jrcxz rex.WX jp andl adc insl js pop (bad) (bad) lods neg test lock fistp jle rex.WB jle (bad) rex.XB loop addr32 (bad) xchg movsb rex.RXB movsl rclb imul (bad) rex.WRXB and and rex.R and sbbb insl mov imul sbb pushq mov rex.RX gs mov cmpsb push andb (bad) fstps pop pop or add adc negl movsl addr32 xor movabs je mov cld sub and jmp test or cmp mov mov sub or lods push subl rex.WRX mov fidivr popfq cmpsb push adc pop push rex.WRXB rorb push (bad) int (bad) xlat add rex.RX rex.W or clc outsb imul cmpsb mov andl sub movsb mov movsl ds callq (bad) mov movslq insl cmp movsl movabs xor jmpq loopne xor and jl lret out ss and cmp pushfq mov out rex.WRB rol stos pop (bad) jg movabs icebp (bad) jbe movslq push mov fsubl or insb movslq rex.WX movsb not cmp xchg jb cmpsb fsubp mov retq xchg sub mov out out (bad) rex.XB lods xlat or je xchg jle add adc xchg out and (bad) (bad) sahf (bad) (bad) add jp jle out icebp imul (bad) cmp pushq gs lahf mov sub jg in lods jge rcr adc (bad) jae pop mov jl (bad) (bad) rcrl mov (bad) lret sub movsl sbb sahf stc (bad) mov (bad) loope pop data16 js or test and cwtl sub rclb (bad) mov repz mov jrcxz rex.WR imul in mov callq jg jg cmpsb adc add loope and mov in jnp insl xchg out (bad) jae rex.RB pushq push and pop iret (bad) adc cmpsb (bad) pop shlb xchg add mov adc mov iret adc lods sbb icebp lock adc (bad) (bad) xchg cmp mov sahf movsb xchg out (bad) (bad) pop push int3 test (bad) sub add mov sbb (bad) mov out es rex.WRX jmp hlt rex.X xchg fbld xchg sub loop cmp xlat add jb pushfq (bad) lahf pop fistpl pushq callq cmpsl pop fisubr and mov mov ss and (bad) movslq rex fdiv (bad) (bad) movsl jp callq je jne add xor hlt (bad) cmp add pop movabs movslq int3 jp out sbb xchg jbe (bad) (bad) pop lret (bad) (bad) (bad) rex.X (bad) fmuls es (bad) cmpsl mov gs pop xchg (bad) add cli mov adc rex.RXB (bad) xchg (bad) loope,pt or pop or loop and or rolb (bad) rex.W data16 mov push mov rex.WRXB pushfq stos movabs jb movabs jl xor push push jg pop jbe jl sub cwtl xchg (bad) outsb or test shl adc and add (bad) xor jno adc test (bad) out mov movslq pop mov cmp in outsb pop negb in push movslq (bad) mov in jle mov gs pushfq (bad) rex.RB (bad) (bad) rex.WRB fs push or rex.WB rex.WR xor (bad) cmp cmp and mov out sahf rex.WB lea (bad) cli pushq out std rex.WR add rex.WRX rex pushq jnp pop callq mov (bad) (bad) stc (bad) test (bad) add push imul movslq lahf je (bad) cmpsl in out movabs retq (bad) mov or rex.RXB rex pop pop rex.WRB cmp int3 (bad) jo rol movslq rorl out (bad) rolb jae retq or cmp and cmp rolb lods ror ror sub mov rex.WXB movsb jbe (bad) lock pushq (bad) (bad) xor movabs fs rex.RX or movabs add sub ss and pop (bad) (bad) loope add ja movabs and lret popq jo movabs mov rex.RXB mov lock in jae (bad) js push insl cmp movabs scas es push xchg jbe iret cs fdivs pushq fildll sub (bad) mov in sbb jp mov mov movabs add jmp push (bad) test rex.B clc mov pop add rex.RX repz sub outsl mov mov cmpsl sub push (bad) pop or xchg movslq loopne rex.RB and add mov stos jne adc movsb rex.RB add jle or xchg adc jb push pop negl (bad) rex.WXB pushfq (bad) in outsl cmp in xchg rorl sub test (bad) movabs (bad) insb xor and or jrcxz xor xor (bad) movsl xchg sub push fdivp cmp and (bad) mov loop xchg js insl data16 (bad) neg xchg mov add sti data16 adc outsb jp xchg pushfq jp xor adc sub cli and xchg hlt (bad) (bad) xlat lock jp xlat pushq mov (bad) (bad) xor rex.WXB mov fbld (bad) int sub sahf push xor jno mov mov (bad) rex.RX and ds mov sbb ss (bad) mov stos and adc (bad) stos sbbb mov jmpq movabs rex.WRB nop lahf cmpsb andb stos movabs (bad) mov xchg andb jrcxz nop and (bad) movsl cmp in pushfq nop rex.RB xchg (bad) or cmp jrcxz and sbb mov loop sarb sahf icebp or sbb xor pushq out adc and jl test rex.WB (bad) mov xchg scas xchg sub cltd cli andb cli (bad) cmpsb mov jg sbb sbb (bad) push or lock lahf addr32 push xlat add mov (bad) insb (bad) push mov pop mov xchg xor (bad) cmp or jb insb jne rex.RX jae and test lods jne sub or jg sahf mov jle (bad) rex.X mov clc mov lret mov add scas nop push shl (bad) cmp clc pop sub mov add pop sub lods add (bad) (bad) pop sub scas mov fbstp pop add adc sub rex.W mov cmp sbb jp mov rex.WRX (bad) loope or pushq and jp icebp (bad) (bad) jbe (bad) and movabs or rcr mov mov mov add pushq and jp xchg in callq (bad) data16 rex in cmp sub lea loopne or jl cmp cmp fwait push adc (bad) sahf (bad) shrb push movsl add push (bad) rex.WRB jl (bad) fs sub cmp nop cmpsb rex.R rex.B jle fdiv (bad) cmp xchg cmp rex.B lock (bad) mov test jns lahf cmp (bad) movabs jg (bad) lods mov (bad) movsb mov (bad) mov outsb rex.WRXB jns pop jrcxz (bad) movsb out rex.B jns out mov out out mov or shlb stos repnz je rex.WRX callq sarb rex.WRX mov add push mov xchg add jmp rex.XB (bad) stos (bad) out (bad) bnd and es xor add (bad) stc or loopne movabs outsl retq fsubrl xchg lahf std enterq popq pushq test callq jnp (bad) callq movsb rex.WRX ds jg mov rex.RX repnz retq jno xchg pop movslq pop movabs xor add xchg mov (bad) jne callq loope rex.RB xlat pushfq js push fnstenv rex.WXB add mov (bad) test es xchg and sahf incl out outsl sub loop mov jno stos sbb mov imul (bad) out (bad) (bad) rep paddd mov adc fiaddl mov jmpq test sbb movsl lods xor (bad) adc jne xchg fsub retq xlat adc adc rex.R cmp nop (bad) cs and and movslq push (bad) (bad) int adc (bad) (bad) xor lods jp clc cmpsl mov mov (bad) or movslq mov cltd jae mov (bad) test ds lahf xchg movabs or sbb jrcxz movsl mov lret movsl sub mov mov cmc in in or stc (bad) xor (bad) mov mov jb xchg adc dec jle cmp std jg xchg pop (bad) insb jle xor jo (bad) mov xchg mov mov pop xlat mov nop scas cmc rorl jrcxz loopne add fsubr cmpsl rex.R stos imul mov (bad) icebp cmc pushq (bad) addr32 andnps adc test imul jge xchg test or idivb add imul mov jrcxz rolb outsl rex.B enterq mov subb mov adc mov pop sbb (bad) movsb in movabs icebp fmull and cmp in (bad) cmpsb pushq nop mov push rex.WRB rex.WRX rex.WR (bad) sarb (bad) insb gs (bad) pop add loop (bad) lock loopne,pt wbinvd rex.WRB and adc rex.WRB fptan rex.RXB enterq movsl push pop test and (bad) jbe jb test pop hlt and xor shlb xacquire test sbb push in sub test (bad) pushq xchg (bad) xor jle (bad) xorb (bad) icebp adc int3 movabs leaveq jp (bad) push xlat add sbb sub adc cmpsb xchg movsl cmp jbe unpcklps add je (bad) or movabs cld (bad) icebp mov stos jle out gs rex.WB mov adc pop lods cmpsb adc rolb cmp rex.WRB sbb and rex.WRX cmp (bad) retq (bad) test out je xchg sub and mov add or pop add or nop add (bad) loop out rex.R jns ja loop (bad) outsl or and mov rex.WX sahf (bad) push (bad) mov sbbl retq pop imul idiv (bad) lahf cvttps2pi test mov sbb mov pushq (bad) clc mov rex.RXB pushfq xchg pop adcl (bad) fmull jmp mov rorb scas rex.WX stc (bad) cmp fldenv or imul pushq jnp pop loope xchg test lret jge js cwtl xchg mov movsl or mov lahf mov (bad) (bad) push sbb stos jbe mov adc lret rcl (bad) rorb lret (bad) sbb (bad) (bad) mov jg pushq out (bad) ja sub xchg divl loop adc mov mov jne xchg rex.WX stos xchg subl push imul xchg mov (bad) jl rex.RXB (bad) ds mov push mov xchg scas (bad) sub xchg xchg insb (bad) rex.WR lahf sub fwait sub (bad) adc sbb mov sbb (bad) cmc mov std rex.B in add pop sti add fs jno rex.WXB sub fldl vcvtdq2pd retq and fs rex.R rex.WX or js lret repnz movsl mov sbb mov or rex.WX addr32 test mov (bad) lods icebp jrcxz frstor in adc (bad) cmp movsb mov (bad) fild jrcxz fildll sbb idivb scas mov cmp xchg adc jne (bad) mov (bad) es adc stc mov push jmp scas movabs and test xchg mov mov jns mov mov fistl push popfq jbe in pop and mov in test (bad) movsl data16 (bad) mov movabs data16 insl stc popq movsb mov enterq rex mov rex.WRB rex.WRB rex.RX iret cmc test xchg jmp pop loop,pt (bad) jne (bad) rex.RX rex.X (bad) jns jge repz xchg rex.XB nop and mov (bad) addb rex.RX test (bad) lock pop jmp rex.WRX sbb int3 jge callq (bad) mov fbstp rex.WRB or adc fiadd rex.B (bad) sti fs rex.RB jo jbe movb sarb adc rex.WX addr32 mov (bad) lea push shrl jae lods cli (bad) pop cmp movabs sbb insb mov add xchg je push (bad) mov imul rex.WX pop sahf je shr lods in push fwait rex.WRX rclb cli int3 sub rex.WRX rex.RB lock movsl repz mov cmpsl movsl jb mov jle pushq lret clc xor es pop out jne scas pop (bad) lret (bad) cmc repz std mov mov add or adc movabs xor rex.RB es out rex.WRB xor loopne mov xor movabs add (bad) cmc outsl cmp or cmp pushq jge mov rex.WR in or add movsb imul (bad) jl xchg push (bad) leaveq add (bad) sarl (bad) test or mov movabs fisub pop test cs and sub imul fwait (bad) mov int3 cli cmpsl cs je jns and movsl add add ja mov ss or loope,pt xchg idivl (bad) xchg rex.X cmpsb loop (bad) add outsb cmp data16 frstor jns mov mov sbb mov clc movsl add stos xor cmpsl icebp pop mov and out in movsl xlat mov jbe jne jbe xor (bad) outsl xor out pushq pop mov out cmpl insb mov push fstps add pushq (bad) mov adc test je sahf (bad) cmpsl xchg mov sub fiaddl faddp sti (bad) mov je (bad) rex.WB retq in movslq add mov mov cmc out (bad) imul xor fprem (bad) scas pop notb jge mov retq cmp mov or shl pop and or movsb out (bad) or lret rex.WXB or mulb nop sbb mov dec sahf (bad) add and mov rex.WRX es mov lahf mov ja out scas (bad) out push mov cld test or and xor (bad) stos adc test f2xm1 fldenv xchg (bad) cmp sub subb add sahf nop scas movabs cmpsb out fbld jno,pt movsb cmpsl int3 (bad) scas jmp (bad) pop push jae xchg imul xchg loop movabs pop and adc bndldx (bad) mov adc mov fmulp loop (bad) test pushfq (bad) (bad) rol fsubr movabs xor push cmpsb imul pop out sbb xchg out mov xlat stos movsb repz loopne ficom fnstenv lret xchg ja enterq pushq callq andb add push retq fs fs (bad) add insb rex.R jge out or (bad) mov movsl rex.R cli mov mov sub outsb (bad) retq (bad) ds loop (bad) (bad) add or and addl loope gs movabs mov jl movabs outsl rex.X movslq addl xchg (bad) outsw es (bad) (bad) ds cwtl (bad) mov in (bad) movsb xchg test sbb scas and pop push jo movabs (bad) (bad) pushq andl jo ja loop movabs loop fwait xchg (bad) (bad) jrcxz (bad) cmp es lret jbe addr32 movb pop shrb loopel repz cmp insl rex.WRB mov adc sbb outsb xor sub cmp rex.WX movabs xchg sbb adc (bad) sbb mov lahf out add rex.WR (bad) loope and sub or ja rex.X mov shl mov and pushq (bad) cmp cmpsl out cmp jg lock sbb in sarb and data16 jns jno (bad) sub rex.RB xchg imul out pop xchg (bad) lods insb xlat outsl push sbb mov imul fsubs xchg cltd mov (bad) mov addr32 (bad) cmp fimull xchg adc pop mov lods sbb sbb lods sub movslq pop imul sub (bad) mov repz (bad) insl lret sub (bad) push mov jmp (bad) (bad) push add jp fist jg or in mov (bad) xor and push sahf (bad) (bad) fwait sbb movsb jrcxz rol mov cmpl rex mov (bad) (bad) cli sub out mov (bad) lea lods cmp in sub (bad) lods xchg adc mov icebp sar and insl fimull (bad) mov (bad) rex.WRXB out jp jl mov cmpsb xchg (bad) (bad) rex.WXB sbb in rex.WRXB add mov mov movb outsl imulb std nop jl std outsb (bad) cmp out repz xor push jrcxz rex.WX mov push sub rex.RB (bad) sub sahf ja pop rex.WRB rex.WRXB (bad) movabs iret jge cmpsb or movabs mov lods in add rex.WXB cmpsb or fidivr fnop cmp notb rex.RX (bad) adc rex.WXB push add and insb mov movsl mov (bad) cmp movabs scas (bad) outsb xchg cltd jle mov sti adc mov pushfq mov movabs mov test ja pop pop jb lods movabs int retq fs out mov (bad) je pushq mov shrb loope cwtl (bad) cmc mov or xor repnz outsl in insb movabs icebp loope callq retq mov add scas or or imul icebp mov lods adc adc clc jae or mov jo jae movabs jge (bad) repnz lret jp sahf test pushq lret xorl insl nop rex.WRXB cmp dec (bad) mov (bad) lock mov or and clc pop mov jne mov stc (bad) cltd mov movabs fbld rex.WRB sbb or rex.WX mov out add mov in addr32 mov lret mov and subl movabs add mov mov pushq lcall hlt xchg cwtl adc xchg nop movabs imul add mov iret rex.RX (bad) iret mov xor pop pushq fsub repnz xchg rex.WRB pushq push gs test fiadd add rex.X xor mov jge jg xor (bad) (bad) (bad) pushfq jo ds jl jp movsb (bad) test (bad) lods movabs mov ds rex.WRB test sbb clc rex.WX jle shr cwtl push jno and (bad) fild int3 (bad) cmp mov imul xor (bad) xchg test ds lret cmp pop notb and decl out (bad) mov loop movsb (bad) int mov repz (bad) (bad) jo rorb xchg mov (bad) or sub (bad) jno mov (bad) mov clc (bad) rcrl (bad) fistpl or add jo mov orb jo xchg js pop (bad) jns je rclb callq addr32 (bad) cmp adc push movslq movabs adc je xchg stos retw rex.B lea jle rex.WRB cmc xor imul std sub fbstp cld xchg pop stos jne xor scas (bad) std rex.WB rex.WRX cmpsb mov add out out cld rex.X mov push repz scas rex.WB (bad) scas jo pop push or repz adc xor rex.WB jle xorb mov retq xchg lods fldt sbb rex mov test loope test and retq cltd rex.WR insb adc (bad) and (bad) fwait icebp test sbb jg (bad) nop (bad) out scas pop ss sbb ficomp fs adc jge in lods stos stos cs clc out fs or mov xchg xchg insl cmp outsb lock (bad) js popq (bad) or mov addb cmp rex.XB pop add pushq div fisubr cld and jg xchg cmpsb rex.XB (bad) movabs sub and mov cmp rclb adc nop movsl jno or lock push and rex.XB xchg (bad) (bad) jp movl test loope xchg or enterq rex.B (bad) mov jge stos rolb xchg rex.WX loope (bad) xchg sub push jno imul pop jo in sub jbe mov rex.XB (bad) int3 sbb mul or sbb test pop je mov (bad) je in popfq je test cmp cmp mov retq mov (bad) xchg pop gs xor rex.B (bad) pop xchg mov retq pushq (bad) lods cltd mov insb rex.X pushfq mov mov lock xchg (bad) jnp cmpsb sti movsl out cmp mov mov (bad) shrl mov mov mov xchg movl sahf mov sbb and add movslq fdiv (bad) movabs xchg (bad) subb leavew outsb mov mov (bad) adc jns in out (bad) mov and stc fs mov push fsubrs mov sarb insb in jns loope leaveq jg scas (bad) movabs rex.WXB mov sahf cwtl movslq jns (bad) mov pop sbb adc jns ds scas mov mov rex.B pushq jbe push xchg rex.RXB movslq (bad) outsb addl loop adc loopne rex.WXB add rex.WX (bad) movsb fcmovne jg rex.WRB or ja nop stc add add insb mov rorb mov cmp movabs ja test out loope mov fs (bad) pop lods sbb and xor (bad) movslq test cli pushfq (bad) sbb jmpq xor mov and mov (bad) push and cltd mov mov and mov xchg rex.R lock or rex.WRB push mov sbb fmul mov and jae movabs jnp push out pop add movslq movsl movabs or or test xor rex.B lock sub (bad) movabs cmpsb mov (bad) out retq xor (bad) mov iret sti shlb rex.WRXB retq mov (bad) jb rex.R mov rex.WR jrcxz pushq test (bad) pop outsl cmp in sub movabs and xlat sbb fsqrt cwtl (bad) mov rex.WRXB ss cmp cmp jo (bad) push rex.X mov or scas rex.R fnstenv or push (bad) cmp add xor cs xchg lods pushq and xchg mov mov (bad) cmp or (bad) iret rex.WRB enterq (bad) andb mov movabs mov loope pop and idivl jg (bad) jae test xchg add (bad) ficomp xchg cmpsl movabs adc loope mov adc sbb xorb rex.B or xor mov jmpq fbld jnp callq and xlat movabs fcos orl data16 out loope outsb outsl (bad) nop (bad) mov out (bad) imulb adc (bad) es rex.RX iret mov test mov mov sbb rex.WB loopne rex.WX xlat (bad) insl cmpsb scas lcall mov xchg (bad) andl (bad) movabs out movsb xor push lods push adc mov and rex.RXB mov xchg int3 test rex.WRB rex.W (bad) add (bad) mov pushq and rex.RXB mov mov add mov lret gs (bad) add adc xorb xchg cmp jp push mov movsb movslq cmp and rex.WRB imulb mov jmpq fistp mov rex.WRX loopne loopne out rex.XB rex.X (bad) data16 xchg push mov add mov (bad) lods loop xchg stos in shrb or fstps movabs movabs fisub xchg jno and mov adc retq clc or xchg out fdivrp loop mov js cmpsb rex out (bad) out (bad) rex.WR pop (bad) movabs jb sbb sub subl pushq pushq jo (bad) mov fdivrs jbe (bad) xchg xchg xor movsl jbe xor loopne cmpsb (bad) mov movslq sub test xchg add xlat pop sbb jrcxz xchg mov xchg rclb ss mul in loop lods cmp (bad) xchg outsl xor insl sbbb adc mov push mov test test pop rex.RB pushfq ja fbld or loop xchg insb and test movabs or xchg cld pushq mov rex.WX ss cwtl xchg ja,pt (bad) (bad) lahf jp ds insb xchg in rex.WB dec xchg popfq mov mov movabs rorb scas jne cli (bad) movabs in xor and sub (bad) and (bad) mov add xchg and mov ja add (bad) mov xchg repnz xorl (bad) xchg movsl test jp (bad) jrcxz sub (bad) sar mov test pop movsl jns ja rex.WR and add sub xchg loopne pop iret xchg loop scas mov mov and or xlat out jrcxz mov mov or retq mov or pushq pop pop sub mov and cld movabs gs out scas push es je popfq jle xchg addr32 nop adcl mov scas push rex.WRB movabs sbb in loope jle adc ss outsb scas lcall jmp pushq cmp out jle jae test xlat mov rex.R lock cmp callq cmpl push or lret adc pop roll (bad) (bad) ffree ffreep ja mov js jne cmpsb in loop out jg mov subb jle movabs loop lock (bad) (bad) cli sub xchg fiadd repnz cli sbb xchg (bad) sbb (bad) test movsb (bad) (bad) out sub (bad) fstpl pop (bad) loopne mov jp stos sbb mov jmpq cld movsl cmp cmp or addr32 notl sub retq movabs (bad) mov orl jns or mov retq test nop (bad) inc cmp pushq (bad) lahf jmpq jl or add xchg test sbb and xchg cmpsb cmp mov sahf add scas rex.B cltd xor enterq mov ja out pushq movsl in push (bad) (bad) cmpb pushq out rcl pop loopne lahf add sub push cmpsl (bad) or cmp and mov xor jg int (bad) xorl pop loopne sub addr32 callq outsb neg add movsb rex.R sahf cmpsb outsb lret rex.WX rex.WR (bad) movabs lahf ss mov cmp mov mov and fbld mov notb (bad) (bad) sub xlat clc (bad) xlat test lods adc add sub fildll xchg (bad) rex cs lea xor rex.W jge and and push (bad) test (bad) (bad) outsl movslq mov lods imul (bad) roll pushq lret in insb test (bad) movsb (bad) jne (bad) mov (bad) ds and in iret xor movabs repnz rex.WXB loopne ficoml ds mov mov pushq rex.WR stc (bad) rex.WRXB push test jg popfq test (bad) callq (bad) int in sub rex.WRX xchg rcr or lods int3 in (bad) mov rex.RX mov pop adc xchg stos lahf xorl in (bad) jmpq nop fistp (bad) sbb gs cmp mov jge (bad) lret mov jns jg mov pop xor icebp mov rex.W addr32 (bad) xchg and pop movsb rcl sti icebp sahf es out enterq and shlb fxch stos test movabs xor test popfq mov and loope push pop test stos insl imul mov add mov jrcxz mov adc lret movabs pushq mov jbe fsubrl pop jbe (bad) pop js fisub out and (bad) gs sahf cwtl movsl ja loop (bad) or mov and xorb mov cmp idiv (bad) cmp (bad) in cmp int3 and cmp jne push mov lahf adc test mov (bad) mulb orl in pop je js xchg jo data16 pop addb rex.WR loope callq (bad) jbe scas cmpsb in jle retq fisttpl jo lahf test ja xchg xlat add pop rep imull lahf rex.WX jns repz loopne lahf ss rex.WB lods std sbb sub cmpsb jns cmp test mov push cmpb mov cld cmp sbb sti nop rex.WRX repnz (bad) pushq (bad) movsb loop jle or pushq (bad) (bad) add or callq rex.WB movabs jrcxz int xor pop lret jg loopne pop out outsb loop fbld or repnz add iret jle ficom rex.WRX (bad) out stos fbld (bad) addr32 or rolb jle rex.RXB adc rex.X test imul pushq sbb adc adc gs (bad) stos jnp jno cmpsb and pushq out xchg fs jno or mov stos mov out adc and (bad) lods (bad) (bad) movslq mov rex.RXB pushq test mov add rex.RB sub data16 in or mov xor (bad) mov neg (bad) mov (bad) jge movsb mov adc (bad) sti std mov (bad) pop outsl rex.WRB popfq xchg cmc cmp cli lahf and pop xchg or (bad) js xchg in xchg shl in push (bad) mov sbb imulw insl (bad) icebp jns jo jns lret movabs out fldenv (bad) mov rex.WR movabs and out rex.WRX es js (bad) movabs mov cmpsb js jo jle adc nop out (bad) movsb movsl fwait stc lods pushfq cmpsb (bad) frstor rex.WB rorb loop loop jne outsl mov sbb test mov sbb lods jg add xchg and jae mov jne loopne xchg enterq xorb jnp (bad) xor decl cli cmp add rex.WXB test fisubr jp ficompl push push andl cmpsb (bad) (bad) movabs (bad) loop movslq adc cmpsb sub movabs movabs fs test mov pushfq jo xchg mov xor xchg lahf or mov incl lods clc je (bad) test (bad) cmp xchg outsb xorb fcompl int3 fcomps mov ja je mov fbld subl cmp push test mov jae movabs rol (bad) (bad) rex.WRB pushw mov push es addr32 (bad) out (bad) push data16 popfq cmp mov or sub sub (bad) je rex in mov sbb (bad) sub (bad) (bad) test pushq pop add pop jle (bad) jp sarb xor adc adc push pushq pushq out sahf jp (bad) xchg rex.WRB mov sub test pushfq sub iret movabs rex.WXB in and adc and push adcb retq nop fsubs (bad) sbb xor (bad) pushq hlt sbb xchg (bad) (bad) mov (bad) cld (bad) int sbb imul out outsl and cmp fcomp (bad) or movslq rclb sub fisubrl callq (bad) (bad) (bad) jrcxz xchg movabs cmp rex.WRX scas stos scas scas out pushq (bad) add mov push (bad) cmpsl mov push and pushq test (bad) insl and mov stos outsl rex punpcklbw in neg mov test out pop movabs cmc (bad) sbb (bad) not rclb (bad) ficompl sbbl rex.B xchg adc cmpsl push cmp enterq in and jno xchg lock push cld xor sbbb scas cmp and push rolb push (bad) loop jg (bad) lods fucomp lock push in shl jg rex.RB rex.WR (bad) (bad) (bad) pop add mov lret rolb add xor fiadd lods scas outsl mov rex.WB scas callq push cwtl icebp rex.WRXB shl rex.RB data16 mov mov lock icebp lahf rex.WX jns loop (bad) rex.WRXB rex.X pushq sub lock xor or repnz (bad) (bad) test movsl hlt mov shrb (bad) ficompl mov adc repnz loop and js sahf mov sub int rex.B scas mov mov xchg mov scas adc push xchg rex.WRB push lret in cli (bad) outsb mov cltd jbe rex.XB sbb (bad) adc pop (bad) (bad) or loop adc (bad) (bad) jle cmp (bad) (bad) out insb lea iret movsl pop mov pop idiv and push jmpq test lods (bad) xchg mov xlat (bad) and loop xchg xchg xchg adc push xor movabs or callq xor adc test sbbb cmp pop movsb add imul mov mov push sub cmc rex.WRX outsl clc jrcxz xlat jmpq sbb lahf mov movslq (bad) lahf jns out ficom jge hlt movsl add jne ja rex.B fsubr sub js (bad) fstl sub mov outsb (bad) (bad) test add rex.RX rex mov stos pop and sbb xchg test unpckhps lea mov (bad) out mov sub (bad) mov rex.RXB mov sub (bad) addr32 cmp (bad) pop mov sbbb imul rex.WRB and mov std in jbe scas in or (bad) jp test and rex.XB add mov test mov adc ds jg outsl cmp orb jge ds fldenv popq pop push insb sub adc sub mov mov je rex.WR in rex.RXB movl mov popfq cmp xchg (bad) (bad) (bad) cwtl (bad) rex.WX movsl mov jmpq (bad) hlt sbb (bad) outsl movabs xlat or mov mov (bad) jl js add jns pop fldenv cmpsb adc test mov (bad) out xchg lret iret jo rex.X (bad) pop pushq xor jge in pop lods rcrb mov test mov push adc adc jmpq pop je jbe push subl fwait push and add lock jmp push sub cmc sub loopne outsb pushq js (bad) lods (bad) (bad) jp adc insl (bad) and movabs push rex.X loopne mov scas jrcxz xchg nop add movabs loopne (bad) rex.WRXB rex.XB stos mov (bad) push or mov pushq orl (bad) shrb pop rex.WRB shrl pop rex.WB jle mov mov gs (bad) fimul (bad) fs imul (bad) add xor out (bad) ss repnz mov (bad) jae insl cmp push fyl2x pop stos mov cwtl (bad) jrcxz imul nop xchg stos pop repnz sbb (bad) fcmovnb mov (bad) stos (bad) (bad) movabs cwtl jo mov mov out jp (bad) sti cmp int movabs jno add cmpsl icebp sbb scas xchg cmpsl movabs loop and cwtl test out loop out xor (bad) xchg xor rolb (bad) (bad) jl movsq (bad) mov pop repnz int in and retq fnstcw callq cli xchg rorb pushfq add rep sub loop cmc (bad) (bad) out loope xchg pop (bad) (bad) mov pop cltd test adc test lret (bad) rcrb loop and pushfq test out sub adc pop out mov jne mulb hlt in fist int3 (bad) fsubp cmpsb mov cmpsl scas pop cmc sbb push movabs jns (bad) jo sbb mov cli (bad) mov subl sbb or mov data16 sbb movsb ffreep movabs (bad) popfq (bad) jl (bad) sbb mov loopne cli add sub sbb jle (bad) je (bad) test jo movsb std movsl xchg imul insb (bad) xor out and out hlt jg rex.WB fldt rex.WRX addr32 movabs es (bad) loop rex.XB fs sahf out retq repz loop (bad) gs and rex cmpsl shr fidiv add mov mov bnd mov jrcxz lret sbb hlt jl (bad) sahf shrb (bad) rex.WX add pushq stos rex.RB gs out jle fs sbb movsb pushq insb sbb callq (bad) movsl movsb mov cs mov in fbld gs mov mov xor in movabs scas shl fwait pop stos push mov (bad) xchg pop xchg (bad) sbb jns pushq roll sbbl scas jge pop and (bad) pop pushq adc jne je xchg push and jo sbb pop retq rex.WRXB xor or sbb shrl sbbl rex.WX lock mov shll (bad) jno pushq loop rex.RX (bad) in mov data16 jle (bad) (bad) stos outsb pop out addr32 (bad) xor es out xchg (bad) out mov (bad) out xchg es jmp jmp pop sub loop repz ljmp (bad) mov (bad) insl xor addr32 addl jo movsb and rex shlb sub mov cld jp mov gs jo movsb in add mov add mov fldt loop (bad) nop mov rex.X rex.XB cli movsb in movslq (bad) (bad) mov insb or scas ror (bad) movsb and (bad) (bad) mull jbe insb iret xchg (bad) (bad) fnop movabs cmp or cmp xchg add add push add or lods fdivrs mov sbb in int test (bad) in je in (bad) xor (bad) mov data16 or (bad) cmpsb rex.W loop (bad) xchg pop enterq sub movabs loopne retq fiadd test (bad) mov pushq cmp ficompl (bad) rorb add outsl or mov mov iret mov in xchg sub insl (bad) mov sahf sub iret jne loopne sub xor mov sub (bad) and adcl cmp iret cmp jg lock (bad) rex.WX jmp (bad) jg lock (bad) mov pop (bad) (bad) pop and sahf movslq pop (bad) mov mov movabs loopne movsb add and (bad) push jo cmc movabs xlat ja test movabs mov mov xorl mov jae mov fldt pop insl mov movslq movabs iret ja test jrcxz test (bad) jmpq rex and fildll rex.R movsb gs jne (bad) faddp and mov (bad) (bad) mov fisub jle test fidiv (bad) mov and (bad) jb lret xchg xor (bad) jnp sub fsubp mov rex.WX ds pushq mov mov repnz (bad) (bad) stos js ss fsubs and (bad) scas addr32 test rex.XB mov movsl sub scas addr32 add mov and (bad) add mov popfq mov xchg ror mov mov (bad) stos pop lret stos (bad) mov sub xor lret sahf xchg test cmp fdivp test adc addr32 movabs in test xor and pushfq stos (bad) sahf in xchg movslq movsb sbb fwait movsl (bad) jo mulb (bad) (bad) in rex.WR (bad) mov or mov out sbb jo xchg cmpl outsl cmpsb (bad) mov jg movabs jmpq xchg sub nop push or (bad) cmp fsubs movslq rex.RB in mov jbe pop rcrl rex.WB test rex.WX (bad) mov lret stc jg (bad) cli loop rex.WR xor cmp movsl clc mov (bad) (bad) rex.WR or xlat adc jae std jl loop scas stos mov xor lock ja fs pushfq mov xchg fildl rex.XB jno and addb fcompl mov in jg movslq fistp xchg xchg rex.WRX int testl mov loopne mov mov lea iret insb rex.WX mov sahf or (bad) (bad) movsb sbb jae loopne cmp rep loopne movsb cmp adc test movabs fld out mov rex.W int3 fild jrcxz xor sbb xorl scas sbb pop mov (bad) (bad) and mov cmc and std pop rex.WX pop lods leaveq subl (bad) cmpsl or rex.WB nop or rex.W sahf stc cmp add and push or (bad) pop and pop cld xchg and cmp jne fsts movsl add mov pushfq movabs pushq je sbb sti xchg callq rolb and xor or push mov in push (bad) loopne pushq sti int3 add nop (bad) movabs cmp repz push (bad) pushq outsl movabs jmpq sub loopne out in jae pushq in sbb insb rol fdivl fcoml or test movslq add test (bad) cwtl jmpq js js jp loope jg add sbb retq mov out (bad) movslq mov push sbb imulb mov cmpsb out cwtl cmpsl movslq (bad) movsl push (bad) hlt sub ror sbb int in xchg xchg mov xchg stc imul (bad) mov jb jl insb retw (bad) cmpsb pop sub push out push stc fisubr js push (bad) movsl mov xchg lods adc js cltd mov or cli movabs movabs xchg test pushfq (bad) stc out rex.B ss xchg (bad) fs mov retq stc rex.WX out (bad) (bad) adc rex.WRB sbb mov (bad) movabs imul rex.WX fs addr32 js mov test sub cmpsb lret xorb insl rex.WRXB mov enterq mov (bad) adc vmovshdup movsw (bad) add mov cmp int test lods ficompl xchg add xor adc xchg and xchg rex.B jb mov rex.WRB (bad) outsb and loopne pushq sahf rex.WB or rex.W sbb mov rcrb movabs adc pop push (bad) lods push mov nop mov stos jb lret xchg fs test rex.WB fdivrl out int3 (bad) movslq mov in data16 (bad) (bad) (bad) jbe (bad) xchg (bad) (bad) xchg sub rex.RB cli sahf mov xor mov sahf pop lahf mov rex mov (bad) jno (bad) sub xor clc xchg mov add sub retq xor rex.XB sub xchg gs xor push (bad) mov sub xchg imul sub mov (bad) retq clc adc icebp jp jmpq push enterq lret adc xchg mov (bad) xor test out mov adc repnz lods jmpq sbb or (bad) and in lods movabs pop imul mov pop rex.B (bad) jno (bad) retq pop or loope movsl sub stos in shr xor sub stos (bad) mov sbb loopne (bad) mov sbb and jge sarb test or sarb in in mov add loop jl xor jo (bad) in sbb stos rcrb push (bad) rex.XB fsub ja xchg or imul jne cmp jne rex.R and test stos (bad) sbb subb je add fmull (bad) mov and jl ficomp mov xor and jmpq push rex.RXB xchg rex.XB mov addb or push (bad) loope adc jb test pop pop rex.XB add sbb push je rex.WRX sub push xchg xor lret in movsl mov jns mov mov (bad) jb cld (bad) rex.WXB out or (bad) je in lret jnp mov add pop sarb xchg and or cmp xor rex.RB movabs cmp sbb xor mov fimul jbe repz adc iret out (bad) rex.WRXB retq add test or adc iret in jmp in lahf (bad) lock push jmpq mov (bad) xchg mov or mov add retq sahf cwtl lods mov test pop (bad) push pop push loop pop in push (bad) loope mov (bad) mov mov sbb push shlb rorb scas (bad) rex.RB (bad) testb or (bad) andb lock insl lods push add (bad) test fistpl jrcxz and jno movabs cwtl stos retq outsb adc mov rex.WB pop (bad) (bad) int leaveq mov mov mov rex.WR lods pop mov (bad) push test callq inc pushq pop je xchg xor rex.RXB rex.B adc sub in mov (bad) out cmpsl cmp sbbl rex.RXB addr32 enterq and jae ds lret insl repnz repnz mov cli xchg cmpsb cs movsl push pop ja sti jle enterq jbe adc pushfq (bad) rex.W cmp pop idivb mov (bad) mov outsb callq pop xchg add in rex.W sahf mulb outsb cmpsb (bad) divb fadds nop icebp stos lea imul jns std data16 and (bad) mov mov add sub add pushq (bad) cld push mov mov xchg xchg mov loopne jmp add mov mov fidivr fistl je cmpsl sbb rcrb (bad) fist (bad) movslq rcpps jns mov jb pop rex.WRB scas mov xchg (bad) xchg imul xchg cwtl rex.WRB (bad) movabs movabs retq rex.RXB (bad) jb jle scas or scas mov fildll sbb (bad) jae imul sahf (bad) retq or ss sub (bad) lahf leaveq out cwtl pop movabs (bad) sub int add jle sub rex.WB cld (bad) rex.WB repnz (bad) pushq (bad) callq rex pop cmp adc callq retq rex.W jo lea mov cmp scas lahf pop or jle mov insb mov (bad) rex.WXB xchg stos or or mov mov sarb rex.WB rol bnd cmpsb (bad) push (bad) jbe testb (bad) out mov std (bad) ss xlat (bad) movabs repnz cmpsl and stos (bad) mov jo xchg int adc cmpsb jae outsl push mov cli mov mov stos mov out or (bad) cli jle and (bad) jo jae loopne hlt out fisubr pushq or orb cmpsl outsb std mov cwtl retq xchg pop jrcxz fwait lret mov js lret (bad) test mov rex.WR xchg xchg gs movsb push mov std sbb (bad) sbb loop jbe add pop imul rorl xor vandps lahf rex.WRXB rex.RXB loopne xor mov rex.WRX fmull (bad) (bad) movabs mov xchg (bad) (bad) mov negb (bad) insb or xor jle sub je adc (bad) jo (bad) (bad) fucomi or (bad) xlat cmpsb sahf mov and (bad) mov jrcxz and jne jmp cmpsb xchg movsb mov enterq pop mov retq rex.WRXB ss repnz pop mov cmpsb xchg mov (bad) scas adc js fdivrp xor in sbb xlat (bad) sbb xchg jae cld rex.XB shlb xor (bad) insl xlat repnz (bad) or out ror (bad) cli xchg adc rex.WRB pop pop jnp add pop (bad) (bad) jp xchg orb hlt (bad) xor mov sub movabs loope fnstcw mov (bad) rex.WRXB fdivp ss (bad) pop pushq xlat rex.RX jl (bad) jno (bad) nop adc mov jo mov pushfq sub retq mov test sub loop xchg push jmp xlat sub int3 pushq hlt lods add jb movabs (bad) xchg jns (bad) movabs (bad) xor cltd scas (bad) sub fwait (bad) mov (bad) lea jmp outsb and mov (bad) test out push fcoms iret xchg stos push stos mov xchg xchg sub cld sub add push mov movsb (bad) mov (bad) mov out (bad) xor adc (bad) rex.RX ss movabs xchg rcr in js out movabs push test test xchg in (bad) rex.WR movabs (bad) jg push adc add (bad) lods or xor xchg or movabs (bad) and stos (bad) ss jg mov mov lods lea rex.RXB rex.XB add movslq lret push (bad) std sbb mov jo add and pop gs (bad) test movabs (bad) repz or mov fistpll out sbbb int3 icebp imul cmp js incb (bad) jb rcrl adcl jge sub fidivr rex.WRXB pop xor jmp cwtl pop shrl xchg sbb repz push adc lock divb movabs jp push sub (bad) pop mov mov push (bad) xchg repnz loopne std (bad) out pushq sarb or lods test movsb repnz movabs add (bad) rex.RXB mull jb orl ja addl mov sbb or sub pop jg repnz rex.WRXB js (bad) fs fiadd repz mov rex.WXB pop cmp sub jns (bad) repnz jmp ja rex.RX test mov pushq outsl add jl xchg rex.B xor (bad) jbe sub jnp sub movabs loop js fnop adc popfq cmpb (bad) jle and push je mov (bad) in mov or fidivr test jbe movabs hlt and mov outsl loop (bad) fisub rex.B xor pushfq and (bad) je (bad) cmp loopne sub (bad) pop jg jle movsb imul add data16 (bad) rex.WX jbe mov xchg mov mov sub rex.RB add lock mov lods rex.WR pushq push ds (bad) and clc (bad) or mov movabs adc rex adc sarb (bad) sahf adc or cmp out scas (bad) (bad) (bad) mov pushq mov fistpll jle loope sahf xor sbb outsb test addr32 sub mov out cmp movabs mov cli cmp sarb (bad) movabs clc mov sub cltd sub out (bad) out fist mov cltd mov outsb movabs lret cmpsl rex.WRXB add ss lahf pop (bad) rex.WXB addr32 rcr (bad) push pop movsb int jp cld insl repz mov mov (bad) ds or cmp pop push pop (bad) xchg mov fadds rcl (bad) insb (bad) mov stos xchg sub loopne jb rex.B loop jmpq in fadds xchg loopne mov fistl movsl lock insb (bad) fsubs out sahf (bad) xchg (bad) test fildll jle sub cwtl mov mov shlb lock mov xlat fild cmp (bad) jle and push and jge in xor test sbb loopne not ror adc (bad) rex.WRXB (bad) or (bad) push data16 movabs xchg xlat int (bad) and mov jp rex.RX rex.WRX (bad) sbb or stos (bad) ja imul jge (bad) (bad) hlt cli jle retq push retq stos cmp insl loopne sahf sahf mov jle mov repnz jle mov adcl jle push mov rex.WRB adc leaveq or rex.XB or outsl cld sub (bad) sbbb rex.RX incl mov sbb test repnz ss retq scas pop cmpsb rex.RXB subb sub (bad) push rex.B jo (bad) rex.WB mov push mov mov rex.RB sbb ja fldl mov lods or xor add imul enterq add (bad) repnz adc sbb xor mov movb (bad) test mov fcom xor out imul cmc jle push gs xchg adc in cmpsb pushq out add push mov jg rol push insb xchg jg adc jae add or jle sbb faddl mov cmp xlat je or hlt and sbb xchg ss jno xchg sbb push and push and and outsl jrcxz int3 pop (bad) out (bad) xor push out addr32 add push (bad) mov sti (bad) mov sbb imulb rex.WXB jg out push loop mov lahf and xchg in jle in jns (bad) or (bad) and xchg adc or jl push (bad) loop pop (bad) pushq (bad) add cmp icebp rex.WR jne and fstpl jno,pt movslq jns sbb mov fbstp pop push fisubl (bad) rclb mov fcomp rex jle rex.WRX fs adc (bad) (bad) fidivr (bad) xchg mov and rex.B rex.WR repnz insl cmp (bad) sahf mov out movsb ds movsb pop out cmp jne je rex.WRX and cmpsb push xchg jle (bad) callq pushq iret jnp test shrb push insb xor rex.WX gs and push movabs callq and lahf and leaveq xor movsb jne mov mov sbb jmpq addr32 mov xchg out cmc sahf movabs stos loopne rcpps (bad) cmp lahf sub (bad) cmc fsubr repnz adc jnp ds movsl adc xlat notl sti (bad) loope rol (bad) rcrb adc cltd mov jrcxz sbb pop xor int3 add mov sahf std rcll sarb ficomp (bad) (bad) fldt scas lahf sub or mov mov sahf fstpt cmpsb sub (bad) mov xchg icebp gs xchg push stos add and pop xchg sbb pop (bad) add rex.WRXB pop (bad) je (bad) fimull jg cmp movsb jg insb scas (bad) hlt rex.X (bad) pop xchg andl adcb xor (bad) cmpsb shr loope data16 mov movsl mov add jno rex.WRB push clc mov add add jg pushfq (bad) pop outsb es rex.WX rol add fwait add cmp or pushq (bad) scas movabs add xchg jno test hlt push jae js jno mov jmp cmc or lret (bad) (bad) (bad) or sub jrcxz add callq lret push mov addr32 rex (bad) or fsub subl (bad) add rex.WX jg movsb (bad) scas fdivp es in out sub mov repnz (bad) xchg (bad) (bad) pop (bad) addl add jns (bad) rcr fisubr mov mov test fs add mov cwtl push (bad) or xchg addr32 mov repz sbb stc leaveq jg in imul loopne pop cmp sbb movslq mov mov retq add andl test push dec (bad) es (bad) ficoml mov fbld (bad) andl or (bad) adc rex.WXB mov outsb pop jg xchg imul (bad) (bad) and lods (bad) stos fist mov mov rex.RXB xchg xchg add cli add xlat sti in jno xchg nop (bad) mov ror or jge xor pop (bad) (bad) xchg rex.WX scas ds mov movsl imul lods adc push or jle int sahf movsl mov (bad) jo and (bad) in js ds (bad) adc or fldcw sub (bad) and (bad) hlt (bad) rex.WRXB subl outsb mov callq rex.WRB pop shl xchg (bad) scas rex lods mov imull pop ss xor mov idivl imul (bad) (bad) cmp sbb cmc je add xchg jg jae repz data16 and (bad) out mov lods mov xchg (bad) adc fmull xor lret outsb jno jb (bad) jbe fiadd test jo (bad) jp rex.R mov pop test push mov iret xchg pushfq or gs loope movsl pop cli mov enterq jle mov mov out (bad) xlat movabs stos push rex.XB je push js movsb (bad) sbb xor mov out (bad) ss stos enterq or cli (bad) mov mov sbb (bad) add clc mov pushq (bad) ds pushq (bad) add movsb mov (bad) add xchg (bad) rcrb movabs rclb icebp rex.R pushq out es movabs shrd jle mov mov rex.W cmpl sahf loop jle (bad) rex.RB rex.W mov adc fcompl loop rex.RX ss mov mov jbe test lock xchg pop ds add adc or cwtl xor in mov sahf cwtl push (bad) jle mov (bad) xor (bad) fidivr mov (bad) sbb scas movsl mov xor cmp fisttp add mov cmp js movsb ds add ja rex.RXB (bad) cmp loopne rcrb (bad) adcl pushq adc (bad) fsubp cmp rex andb andl (bad) pop add add movabs loope shlb sahf cli xor and test add (bad) pop ja out mov test test cmpsb fcoml rex.RB fwait (bad) (bad) xorb fbstp (bad) fwait mov jrcxz and jb (bad) nop jl movslq je sub andb in pop test mov movsq movslq push (bad) mov add jg lahf lods (bad) (bad) loop fwait movabs xchg lahf jmp cmp loopne lods js retq sbb lods loop repz xchg sahf jl test movsb lods callq test or movslq rex.WXB mov add pop pop (bad) callq push mov fisubr int3 and addr32 (bad) mov (bad) addl add mov (bad) (bad) (bad) repz adc js ds pop sub (bad) adc repz movabs jmpq and jnp rex.WRX (bad) movsb sbb (bad) movabs rex cmpsb gs mul movabs and sub and (bad) pop mov cltd (bad) (bad) (bad) cwtl imul retq (bad) sub callq xchg mov out cmpsl xchg sub cmpsb xchg jge movsb push xorb (bad) sub cmpsb sbb shl pop idivl in rex.RX xchg scas and sub xchg ja rex cmpsb (bad) hlt xchg (bad) adc (bad) in cli in out stos xchg retq (bad) movabs insb imul rex.R (bad) test jno rcrl lods (bad) xor xchg loopne mov add addb out mov mov fistp lods orl pushq xchg (bad) mov cltd outsl lahf jg fild cmpsb lods outsl mov retq es gs clc add stos cmpsl adc movabs xchg out stos repz out incl xchg popfq shrb lock popq jg (bad) cmpsl sahf mov loopne mov rex jmpq mov cs and shrl test mov fnstenv cmpsb pushq sub out rex.WRB movabs and mov jbe movabs xorl mov (bad) jbe sarb (bad) loope rex.WX (bad) rex.WRX jbe sbb pop enterq mul (bad) loope push imul or js add sub lods and lods mov add (bad) push (bad) jge sub (bad) ljmp (bad) and mov cmp nop xorl rex.W xchg (bad) movsl and gs loopne out xchg and (bad) loop out rex (bad) or movsl cmp jg cmpsl cmpsb jrcxz sub add lea mov in pop jno xchg out xor mov loop rex.WXB jo andl popfq hlt out sahf sub pop mov movabs shr or out stos retq movslq clc je rclb stos push add sbb sub add mov (bad) subl jo gs cmpsb jne test jp add scas cmp add sub mov mov cmpsl (bad) (bad) outsl callq movsb outsl jg jrcxz xchg imul (bad) rex (bad) rcrb enterq fs test outsl testb and fiadd jno in (bad) cmpb add jo or jo loopne push pop mov add fs movsl sub ja cli cvtdq2ps out scas and xchg mov mov (bad) repnz or movabs push gs mov (bad) callq addb mov in and sti movabs sub mov nop out repnz jle jnp (bad) or retq lea jnp test jrcxz lock stc hlt lods (bad) mov (bad) stos and rex.RXB rcl scas (bad) sarb (bad) cmp pushq sbb ja fiadd test out mov (bad) fldl pop mov out (bad) je add sarb test rex.RB xchg repnz xor out in (bad) movsl (bad) (bad) or sub cwtl ja (bad) mov shr push jo adc sarl test rex.B adc xchg (bad) loop mov sbb and roll pushq mov stos repz xchg adc and out out callq pushfq (bad) stos xchg add rex.WRXB imul mov add sub fdivrl popfq (bad) scas jmpq out sub psllw (bad) pushq xchg and (bad) (bad) sub in jl out stc pushfq (bad) sub jno mov imul lahf (bad) repnz or jmpq jno sub subb mov mov movabs sahf sbb jo shrl mov retq mov lods js rex.RX (bad) mov stos mov jno push fcomip jge addr32 fbstp stos outsl out adc push mov sti mov mov mov (bad) popfq movabs and mov movsb mov mov xchg jo sbb movsl (bad) (bad) scas movabs (bad) cli xchg mov (bad) jo retq cli sbb sbb out pop rolb (bad) rex.RB (bad) (bad) fimul div movsb mov callq loopne xchg test in jne mov shll repz mov ja mov jrcxz mov sti pushq xor or fcompl ss sub pushfq idivl repnz movabs and hlt (bad) (bad) jrcxz loope pop cld xchg scas in cmpsl xchg test (bad) jg decl and mov xor mov add xchg ja addl decb ja test scas pop addb addr32 xor (bad) and (bad) (bad) pushq (bad) mov cmp adc test mov xor add mov xchg (bad) mov and jmp test lock pop cmp rex.WRB sbb add lods cmp mov rex.B mov movslq jne mov and loope cli mov rex.R rex.XB idiv out fnstsw mov stos nop clc fnstcw rcrb clc pushq or movabs and lea lods fcomip jg cmp cld mov stos (bad) clc movabs cltd xchg js cld xor out movsl (bad) mov mov (bad) je jno or fwait jge xchg sbb or clc insb add jl scas xchg mov (bad) int test sub repnz rex.WB in (bad) sub iret outsl adc movsb movsl or (bad) (bad) pushfq mov jge mov (bad) rex.RB rex.WX rex.R cmc pop cmp (bad) test and mov jo sbb or add decb adc cmp movabs mov cmp push cmp lods pop js xchg (bad) cmp movsl xchg pop and xchg fiadd (bad) pop pop scas mov lods (bad) test lret add outsb rex.WRXB je mov sarb mov adc scas icebp int es ds and (bad) mov popfq stos adc callq pop icebp mov movabs jl retq in neg stos rex.RXB int push push (bad) (bad) movsl scas cmp cld push mov lahf push rex.RX fbstp (bad) ds xor movabs (bad) test cwtl jne int mov ds sub mov and mov jns enterq push jbe je cld (bad) icebp pushq sahf xor and hlt mov rex.WRX shrb mov rorl mov int repz or push and mov jno sub xor in pop sub movsl xchg lret clc mov outsl push movsl adc ficom (bad) jg outsl xchg (bad) clc (bad) lods test rex.WR mov mov (bad) int sbb mov cmc popfq mov shrb sub xchg sbb mov iret rex.XB rex.W rex.WR cmp es (bad) cmpsb rex.WRB addr32 xor xchg scas loope (bad) mov rex.X idivl rex.WR xchg (bad) adc pushq (bad) or jmp (bad) mov jo rex.RX imul mov or fisub push jnp fwait cmp stos (bad) rex.WRB rol (bad) (bad) cwtl adc fdivl jrcxz and (bad) and sbb cld (bad) sbb in xchg sub or pop sbb and rolb repnz mov int movsl fisub xchg test cmp popfq fstpl adc (bad) movabs stos cs cld scas (bad) rex.WRXB adc rol pushq js loop test add es mov mov shlb stos lret sbb mov cmpsb (bad) sahf retq mov js mov scas (bad) sbb mov (bad) push xchg sahf (bad) pushq insl mov test mov xor sub in insb (bad) (bad) outsb cld icebp sub mov mov out mov add shrb mov (bad) mov (bad) movsl mov and cli cltd (bad) cmc rex.RXB movabs jge cmpsl mov adc scas scas idivl (bad) cmpsb adc cs (bad) lock outsl cwtl cmc mov mov and hlt loopne sub (bad) movabs idivb (bad) cmp sbb movsl pop (bad) mov jno movsl cli lock sarl and clc (bad) shrl and xchg (bad) movslq (bad) rex.WX (bad) cs jb or xchg xchg mov rex.WRXB sbb addl (bad) out (bad) mov movsl (bad) out jns lahf loopne (bad) (bad) mov or (bad) movslq lret fistl mov xchg in adc stc push push xor adc pop or cmpsb pushfq mov xchg movsl cmpsl imull pop push (bad) (bad) pushq test adc in cmp outsl loopne fildll pop movabs int3 (bad) roll (bad) push movslq sub xor xchg imul fcompl mov getsec adc add mov data16 fdivl mov xchg jle xor (bad) jl rex.X sbb pop mov (bad) jp stos lods (bad) mov jg cld xchg cmp test icebp adc jg xor iret jmpq out sub jns movsl rex.W pop mov jbe mov rex.W rclb repz sbb rex.WRXB fwait push outsb pushq jno out pop imul in rex.WX jbe sbbb std movsl (bad) fild sub lret (bad) jbe test (bad) std add (bad) pop and or outsb dec rcr sub test sbb movsl xor add mov jrcxz (bad) mov in (bad) xchg sahf rex.WX pushq es movsl shrb rex iret and rex.WX ds cmp rex.XB rex.WXB lret jbe pushq lock add fmulp fsubs movabs jp lahf cwtl sbb rex.RB lock addr32 push mov addb cmpsb mov movl movabs lahf rcrb movsl mov retq (bad) and jg shl movsb stos (bad) mov retq or rex.WRX rex.WRB test out mov rex.B cmp movabs mov xchg (bad) mov (bad) mov (bad) jp push add movsl rex.WB xchg fiadd lahf movsl mov xchg test xchg js sbb mov movsl adc xor movabs sahf data16 out mov mov mov retq fstl je add loope pop fldt je scas pop movsw fisttpll in orb or out nop (bad) fstpt rex.WRX vcvtdq2ps mov pop or lods pushq ja add pushq push push outsl hlt loopne mov cli (bad) jbe (bad) pop test pop hlt mov insb loop in mull (bad) jge out and (bad) jmpq sahf xchg xchg mov fxch out rex.B imul retq (bad) or retq (bad) sub hlt cmc xor adc mov (bad) notl cwtl test (bad) push and or nop (bad) repz mov pushq rex.RXB hlt out mov pushfq imul and test jrcxz (bad) lahf pop (bad) jrcxz jle pop clc add (bad) paddb outsb rex.WX cmp mov jno pop pushfq fs gs pop pmullw pushq (bad) (bad) hlt in (bad) test sbbb or (bad) (bad) mov movabs adc jae movsl xchg (bad) (bad) in in mov lret in movsl add test add in pop fistp mov int3 jp add movabs loop sbb sub and loopne (bad) fldenv jb pushfq (bad) xor adc jb movabs outsb lret pop rex.WXB and pop test mov rex.WR cmpsb outsb sub or pop pop add andl rex.WRB add pop loope js (bad) adc clc jle mov movabs je jle (bad) add xchg or mov test add hlt (bad) shl mov (bad) cmp (bad) pushq rex.WRXB (bad) jp (bad) jle out rex.WRB (bad) fisub add mulb cmpsb stos outsl (bad) mov (bad) shrb sbb movabs mov jrcxz stos movabs sub loopne lret or imul push jae add test push and mov cmp (bad) movabs mov movabs cmp cmpsb pop out movsl cmc adc cwtl xchg sub cwtl (bad) pop pop imul (bad) outsl outsl cltd sbb mov imul pop fs push ja and (bad) rex (bad) je (bad) movsl callq std mov lret sahf movsl xlat rex.RB rex.WX icebp fsubrl (bad) rex.WRXB sub scas ja xor xchg decb rex.WB fadds push mov sbb pop (bad) test out jg,pt or xor push (bad) xorl sbbb cmpsb movabs cmp rex.B test mov loop sbb clc in rex.WR ja shrb scas mov pushq stc shl in out jae mov xor mov (bad) mov jg or jbe mov mov (bad) cmpsl jno jp fnstsw fldcw and std sub movabs cmp and xorb test (bad) sahf iret or outsb hlt andb xchg pop (bad) movsb movabs lret idiv (bad) and jl (bad) retq pmaxub add cmc mov cs outsb movsb out mov push mov jg (bad) push and movslq retq lods (bad) sbb sti xchg push fidiv push sbb adc push sub movabs test test mov jle lahf pushq je fsubl movabs movabs push (bad) mov hlt pop push int3 or (bad) and pop loopne out jae jle cmp mov fistl (bad) jbe sbb add mov xor sahf frstor jle push and callq mov gs pop mov or mov (bad) jp (bad) (bad) js jno cs cld fisubr mov (bad) mov lock int3 xor rex.B push add movabs pop lods lret test fildll (bad) sbb (bad) xchg sbb (bad) xor (bad) (bad) jb (bad) jp data16 rex.WRXB movsl fnstenv rex.B outsb xchg ficoml xchg jo (bad) xor retq stos (bad) fsubs out jp fisub rex.WR add addr32 (bad) rex movsl push (bad) add in movsl adc mov (bad) fisub gs xchg movsl lock mov adc (bad) or and rcr addl (bad) adc sbb cmpsb jns lahf push (bad) xor mov jno add cli xchg cmpsb (bad) rex.WRB rex.WRX rex.WX jmp rex fwait mov jb adc rex.X mov or (bad) rex.RB repnz cqto pop in jl mov adc adc movabs cmpsb or xor pop cmpb int3 pushq movsl cmpsl (bad) out ficomp mov (bad) (bad) in push push movabs lods mov callq scas scas ss jns retq rex.B and outsl movsl rex.WX outsb pushq xor mov pop (bad) jle (bad) pushw mov movsl push (bad) xchg (bad) (bad) sub movslq rex.WRB addr32 (bad) cltd cmpsb movsl rex.X imul in rex.WB (bad) movslq sbb movsl sub cmp scas lahf adc rex.XB (bad) rcr mov mov mov xchg callq mov mov pushq jp js lahf in sbb and out jp rex.WRX fimul xchg (bad) (bad) mov adc fcomps xchg rex.XB adc repnz (bad) or pushq jl xchg test (bad) mov shrl pop push jno out or (bad) rex.W mov (bad) sbb push (bad) ss (bad) mov jmpq (bad) xor cmpsl cmp adcb rex.WR std sbb xchg enterw sarl mov movabs (bad) rex.R mov in push jge pop (bad) pop add test (bad) rex.WRB xchg jbe push outsb jmpq cs adc bnd mov jle mov sub mov movsl xor (bad) mov test cwtl (bad) cmpsb lahf xchg jo rex.WB in popfq movsl or rex.XB cs rex.WXB rex.RB movabs cmp (bad) mov add movabs fcoml cmp (bad) xchg (bad) mov lahf lock fcoms xor push add jle xor mov pop ss cmpsl rex.WRB test lods or jbe jb (bad) pop mov or (bad) pushq push push rex.RXB xor lock pop pushq pop stos jns and leaveq pop push mov cmpsb sar sbb (bad) repz cwtl pushfq movsl lock lods (bad) movabs pushq (bad) sub mov shlb test cltd retq pushq loop pushq sahf adc jle mov jle xor rex.WX rex.WR add (bad) pop jmpq ss sub and (bad) rex.R jae sub sarb sbb retq nop (bad) (bad) xchg (bad) push iret fstps (bad) addb loop cmp xor cmpsl (bad) (bad) sub adc (bad) pushq (bad) std (bad) jbe fisub (bad) (bad) (bad) xor in xorl mov pushq pop in scas sub sbb stos (bad) pushw movabs xchg out mov rex.WRXB sub outsl rex.W rex.RB gs pop add or mov fidivrl cmc rex.R pop repnz jg cwtl xor sbb mov test gs lods or push add stos ss mov jnp sbb test (bad) adc (bad) jns sub jne test notb jb int3 mov jne add movsl (bad) mov out mov rcrb sub scas or cltd (bad) adc jge push cli jrcxz mov sahf add out movsl divb (bad) jns cmp add add (bad) (bad) adc (bad) (bad) mov repnz cmp xchg xchg mov adc add (bad) mov fidivr lahf decl mov adc fbstp (bad) (bad) (bad) mov xchg (bad) repz movslq push or vpsrlw int3 jle rex.R (bad) cltd (bad) stos jne imul cmp cmp inc addr32 loop pop add out sub std retq xchg nop int mov movsb popfq jae mov push (bad) retq lret (bad) rex.RXB lock (bad) pop rex.RX pop lods add mov fisttpll (bad) rex.RX cmpsb pop movsl fcmovu sub or or outsl sbb pop out movsl out (bad) fidiv pushfq adc xchg (bad) rex.RXB imul sahf mov rex.WXB rex.WRX data16 mov iret mov mov mov and pop (bad) sbb or mov insl cld sub movsl rex.RXB (bad) repnz lahf sub push loop rex.WRXB (bad) xchg sbb (bad) mov int sbb mov cmp (bad) mov clc (bad) xor pop rcrb insl lods cmp fstp mov scas in cmc rex.WRX mov icebp mov jno test fs insb jbe jle retq iret push mov imul mov loope (bad) (bad) sbb cltd jle or mov mov xor outsl mov and subb (bad) mov sbb and sahf push xchg test rex.WRXB rex.B jle,pt rex.WXB loope (bad) test rex.WB push jmp lods (bad) sub xchg fwait in xor cs fs fcomps fnsave stos movslq insb (bad) (bad) imul rex.WR cmp mov jg stos data16 out (bad) cmp adc (bad) (bad) iret push mov jnp,pn pop in sub test rex.RX lahf in js,pt and jl sub xchg pop mov sub push rex.RXB (bad) mov sbb notb in (bad) (bad) (bad) jmpq push (bad) hlt or sub xorb mov pushq (bad) fidiv and and (bad) or xchg push xchg push mov (bad) fimull jge add mov fild and mov (bad) jbe mov mov cmc xor outsb or xor (bad) pushq xchg and sbb lock fistpll enterq in repnz mov test in jno loopne lahf mov movsl jrcxz je push cmpsl xor adc lods mov cmp (bad) out int rcl and mov xor xor movsb mov and js loopne incb (bad) jb nop mov mov stos xchg clc fucomi pop pop lahf add mov mov mov mov (bad) xlat enterq (bad) movsl sahf (bad) pop movslq mov (bad) (bad) xor movabs (bad) (bad) fdivrs loop mov insb movsl in fldenv orb gs and testl mov (bad) sub jge rcrb jp mov rex.B test data16 jg (bad) jp mov or lret movabs lock (bad) lods cmp scas and and (bad) retq and xor xor (bad) mov or (bad) jrcxz addb xchg mov jbe cmpsl (bad) (bad) nop fimul adc jle test (bad) sbb (bad) sub rex.B ss clc outsb mov pop cmpl stos outsb mov pushq (bad) rex.WRXB js pushq or pop jb (bad) mull rcr rex.WRB rex.X rex.RXB popfq movabs rex.RB movsl sbb push retq neg movabs loope rex.WRX sbb in rex.WXB xlat xchg mov (bad) stos ja mov test (bad) rex.RXB (bad) pop rex.RX lahf and fwait mov jns movsl out mov (bad) xor pop rex.WXB (bad) rex.B in xor subb cs (bad) sahf sbb scas stc rex rex.RB int3 jmp mov fs out xlat adc sbb cmpsb xchg test (bad) cld fcompl xchg loopne (bad) rex.RB lahf loope sub rex.X xlat mov movslq (bad) jae sbb or sbb lret (bad) rex.WXB rex.XB and mov pop repnz (bad) pushq fstp movabs out popfq pop xchg rex.RXB pop std (bad) (bad) jl fdivs es or retq rex.WRX cmc rex.XB iret mov jp mov mov movabs sbb rex.WRX xchg push incl (bad) mov outsb je pop test mov mov jl in lahf adc mov jmp rex.RB rex.XB add jge retq rex.RX addr32 pop mov or pushfq mov rex.WX rex.R loop xchg lods (bad) insl fildll fcom data16 pushq movsl cli cmpsl fldenv cmc jb sbb movabs shll rex.WB sahf test mov xchg addb push adc (bad) xor xchg jnp xchg ljmp (bad) rex.WRXB ss (bad) mov xchg cli or rcrb rex.WB pushfq jbe outsb jl jb ss loope mov mov out mov mov movabs adc orl int3 in xchg xor mov xlat jl mov and movslq movsl jrcxz sbb (bad) andl adc xchg test (bad) gs cmp sub sbb sub stos jno adc lret rex.WX cmc jns out scas nop or outsl (bad) shll movabs pushq mov pushq sub push push xchg mov (bad) sub movsl (bad) xchg cmpsl cmpsl (bad) (bad) (bad) (bad) cmp xor mov pop fs sub fs jg jle add lods ljmp sub mov fbld scas pop mov in fisubr mov (bad) (bad) test pushfq in mov (bad) out movsl (bad) jbe movabs cmp out xor rex.W adcl jle imull or or mov sbb loope iret fs mov jnp rex.RXB fcmovb rex.R mov popfq imul (bad) outsb pmaddwd mov (bad) fwait jle sbb rex.WXB fidivl mov test repz pushfq xchg and cmpsb and minps (bad) (bad) jmpq mov loopne push (bad) (bad) (bad) rex.X pop leaveq cltd (bad) in (bad) data16 addr32 push push (bad) and and (bad) loope scas (bad) or sbb push (bad) cmpl insb int xor pop out inc and jle pop lret (bad) (bad) sarb push xchg xor mov enterq test pop and sub sub rex.WRX repz xlat outsl faddl cwtl test jp faddl rex pushq sub cmp hlt test movsl sbb (bad) (bad) in mov mov outsb sarb xchg cmp xchg rex.W test retq (bad) out repz sahf fild fisub rex.RXB jo fiadd xor (bad) xor mov jbe lock sub cmp mov rex.RB imul adc (bad) movsl stos rex.WRB andl hlt and (bad) rex.WB rex.WR add add rex.WRXB pushq lods cmp xchg pushq rex.RXB (bad) (bad) test cmpsl xchg sub imul add (bad) imul js mov je cmc xor movabs mov xchg sub jle or xchg rex rorb rex.B rex.WB mov (bad) lods jo cmp jb movabs ficomp (bad) out data16 repz mov xchg xlat loop adc mov data16 (bad) xor mov (bad) mov addl movabs imul rex.WRX push add rex.WRX lret adc sbb movsl xlat mull rex.W std in mov rex.R push xor mov mov rex.WXB test outsb cmp (bad) (bad) and sub sbbl lahf clc jle (bad) cmp movsl mov negb cmp sbb jrcxz loop hlt and sti jl xchg popq pushq push or cli (bad) fstl mov rex.WXB leaveq fdivrp mov or jns jp push sbb jno movabs jns sub movabs or (bad) loopne jae orl (bad) mov jp andl xchg pop movslq add (bad) callq jle jns mov (bad) and adc movsb jno (bad) or movsl cmp add rex.X adc jle fstpl scas adc or cwtl cmp (bad) jmpq scas mov jbe movsl add cwtl or test in pop add xor movabs jne rex.RB mov (bad) movabs je in jl jne movabs rex.RXB mov test fs (bad) jle pop mov (bad) rex.W gs cmp push callq stos jl movabs rorb push fnsetpm(287 (bad) (bad) xor rclb rex.WXB jg insb out movabs or orb (bad) ja adc scas outsb add movabs cs and xor xchg stos or out cmp adc (bad) (bad) fiadd cs cmp ffreep callq lods cmp movsl (bad) out and lea jge (bad) mov andb hlt lock in and mov rex.RX (bad) add pushfq nop jne sub fimull js xlat (bad) pop fs and pop (bad) (bad) (bad) rex.B mov rcr (bad) (bad) add cs mov fs mov movsw in jno rex.W clc addr32 jge sbb movabs jo out jle (bad) jl icebp (bad) (bad) pushq cmp xorb mov je insl lods (bad) cmp in pop sbb in (bad) in pushfq scas mov mov sub outsb jl jg rex.WB rex.B rex.XB fdivrp (bad) jmp outsb pushfq addr32 outsb or je jg,pn loope mov adc fmull stos and add adc (bad) mov lods push movabs (bad) fs callq adc scas mov xchg nop sahf out (bad) stos sub push stc out insb repz jle jmpq sbb cmpsb mov movsl rex.WRXB hlt rex.RXB cmc (bad) enterq loopne enterq lahf frstor mov adc add cld test jle movsb out cwtl sahf mulb retq sbb fidiv (bad) enterq lods xor xor imul jle fstl fisttp cwtl (bad) out rex.WRXB fisttpl (bad) jns movabs lods mov xchg insb rex.RB out sahf pushq mov js test adc (bad) and jbe pushfq jrcxz fucom mov scas mov pushfq and lahf adc outsb add pushfq lods movabs in mov sub fisub rex.B mov icebp or retq sahf rex.WRX ffree cmp (bad) push or sbb loop lahf sbb mov movabs mov push pop fidivr cmpsb out loopne cmpsl jp data16 cmp rex.W rex.WX mov add xchg and int3 pushq rex.RX icebp xchg test orl mov stos and lock imul and outsl mov cmp test adc xlat rex cmp rclb xor xchg mov sbb jo movsb fucomip jbe sbbb (bad) stc rex.XB pushq loope lret pop push pop cli xchg js pushq jge fdivrp sahf sahf sarb fimul scas jge mov ds retw sub fsubl push outsl add rex.WRB mov adc (bad) je jl pop rex movsb and (bad) mov cmp fiadd fnstsw push cmp fcmove sub or cmpsl lock jo mov or insb (bad) push (bad) mov (bad) xlat test mov adc fildll fcoms popfq imul test hlt mov out rol or int3 gs rex.WRB lret (bad) repz add (bad) sub in pop pop rex.WRB add jmpq (bad) pop xor leaveq mov sub inc ficom adc rex.WR js pop faddl (bad) dec addr32 push rex.WRB movsb mov push mov adc and fiadd jge idivl or mov adc fist or mov (bad) mov jmpq cmp push xor pop in cmp cmpsl pop mov jno xlat jle and addr32 and xor rex.B (bad) movsl xor rex.WX rol jo rex.RB imul jbe mov cmp pop jge in pop bnd add (bad) lods rex.R enterq or add rclb or (bad) (bad) rex.WRB je mov sbb lret movsl fildll (bad) mov add cmpsb fldl jp and (bad) mov cmp pushfq rex.WRXB pushq rex.WR (bad) mov jns adc sub add mov scas adc sbb in fbld or pushq mov stos test mov (bad) lahf outsl or or outsl out movabs push mov repnz adc push pushq xor push push push insb loop loopne ficom cmpsb xchg pushq rex.RXB imul (bad) rex rex.WXB jmpq sbb mov popfq insb pop jb pop mov data16 movabs addr32 add jbe out xchg cmp rorl mov pop rcrb add push scas and callq cltd mov ja movabs js notb cmp lea sbb push repnz mov mov scas sub (bad) lret (bad) pushfq (bad) retq push test add (bad) out scas scas xchg test movslq bnd xchg jg (bad) sahf roll fildl andb cmc add movabs or callq rex.WRX or (bad) loopne fsubs outsl out xchg add fsubrl add repz movabs or pop (bad) loope imul xor imul mov sti cmp xchg or pop (bad) (bad) shrb movabs xchg lods lret mov or mov adc fwait iret jbe (bad) sbb cld cmp pop push movslq (bad) iret or mov test (bad) outsb fcmovu movabs pushfq insb ficom cltd test and pop and cmpsl rex.WX rex.R mov test pop movsl xchg test test cmc lods jne fdivrs fdivrs ja in imul movsb cmp (bad) pop incl pop in (bad) stos rex.WB and add mov addr32 ja imul mov fnstcw popfq jmpq jns xor lods or xchg enterq gs stos (bad) (bad) (bad) jrcxz mov rolb test xor out pushfq and movsb xchg xchg jo andb xchg sub std icebp jle mov mov lret xchg ss rcr add subl or stos mov icebp rex.RX xchg scas lret pop pop adc sub pop repnz movabs push xchg cmpsb add insl fadd xorl xlat adc (bad) loopne and jrcxz (bad) mov (bad) divb and (bad) and mov mov data16 xor rex.RX loopne jnp mov (bad) sbb rex.R stos loop cmp sub and cmp in movabs rex.R in int3 pop xor mov add mov sti jle ror cld insl pushq xchg lret (bad) xchg insb mov in je rex.B push cld xchg fisttpll fisub or and xchg mov cmpsb movabs pushq push rex.XB push repnz sbb orb adc (bad) rex.WXB rex.X (bad) in mov (bad) rex.W add movsl mov in adc mov add outsb (bad) rex.WR lret es xchg jg rex.R mov xor rex.R jg and rex.WXB rex.RB pushq jb pop movabs movabs cld xchg cli loop jg adc cmpl or sbb hlt sbb adc fwait xor loop outsl (bad) retq (bad) rex.RXB es retq movabs xor jae movabs callq jo js push or mov (bad) and loop loop jb or in sbb lret jo push movsl retq test leaveq mov xchg push xor sarb pop jge (bad) or jb sub (bad) cmp lahf scas cld lret lods lock scas fsubr out rex.X out insb orb sarl ds sub xor (bad) fisttp movsb xchg rex.RXB repnz callq rex.W test mov mov iret (bad) add popq (bad) jo outsb mov or cmp in (bad) movsl imul loope fsub cmc xchg jne clc (bad) and cmpsb (bad) sbb hlt xchg mov rex.W rex.WRXB push add outsl rex.RXB loope (bad) (bad) push shll fldenv adc (bad) add (bad) and or (bad) hlt xchg imulb mov (bad) xchg leaveq pop push cwtl xchg fidivrl jno sahf or js imul cli (bad) mov sub (bad) (bad) push mov add outsb (bad) movsl loopne rex.WRB rex pop cmpsb loope test mov (bad) rex.RX add rex.WRX push jle (bad) or movsl fistpll out sub cmpsl rex.WB xchg xor movsb testb je mov outsb test lret jle (bad) mov push out push fisttpl (bad) xor out (bad) (bad) pop add pop rex.WRX es (bad) pushq fildll sub (bad) in cwtl es lret rex.R add pop js rol mov out mov push mov mov ja jno or cwtl add xchg enterq mov (bad) (bad) jnp scas jrcxz (bad) mov pop shrl in mov leaveq jns in and fistpll fimul jb callq mov fdivrl sahf (bad) sbb sub cmp sub lods cld (bad) shld roll add outsb mov lods xor clc adc movslq fsubs sbb js loop rex.WRX rex.WRXB add scas or xchg xor retq loope imul incl movabs rex.RXB lods js cmpsl out sbb (bad) mov push cmpsl mov xor jg addr32 jle (bad) pushq movabs xchg (bad) jo movabs sbb scas mov lret adcl jp xchg pop push movsb xlat lods movabs sub jno or jb jo out cmpsb out sbb mov out (bad) mov cmpsl (bad) stos ficomp cmp and movabs and cs lods ror lret cmp push popq (bad) (bad) lret rex.RX push je add jno (bad) pop (bad) repz cld rex.WB push callq sbb fistpll (bad) imul xchg jo imul push (bad) idivb pop (bad) icebp adc rex.RB lahf xchg outsb insb movabs addr32 (bad) (bad) es sbb mov mov lret out cwtl pushq imul stos pop and imul or push rcrl mov add (bad) jrcxz xchg and jb fbstp int (bad) (bad) out xchg sub movabs fimull enterq pop pop mov sbb hlt cmp jp add insb push jbe pushq or pushq add pushq add xor add pushfq (bad) (bad) icebp pop insb lods scas movsb jo mov sahf loop cmp gs pushq fs sbb push sahf (bad) lods out rex.W sub (bad) (bad) loope lods mov rex.WX sub iret movsl enterq rolb (bad) je icebp rex.XB rex.WRB jno (bad) jl addr32 pushq add insb out sbb lods push stos out in imul pushfq mov (bad) add popfq (bad) jl (bad) scas pop hlt cmpsb stos (bad) or (bad) movslq movabs pop and imul lret stos jge rex.WB scas cmp outsb or xchg push add rex.RB mov (bad) xor sbb cmpl sbb cmpsb lcall in stc xor (bad) stos out push cmp in mov sti or fucom mov retq cmp or adc pop (bad) (bad) or sbb fs addr32 sub stos fistp rclb cmpb lcall in (bad) hlt insb mov (bad) mov sahf jno or cmp xchg mov cmc xchg shrl fs sbb scas pop pushfq mov mov sub cmpl sbb int3 xchg (bad) (bad) leaveq fildl sub je in lods pushq out mov and out mov lods test (bad) mov sti rex or retq mov (bad) mov mov jle outsl (bad) movslq cmp scas fcoml sbb xlat mov js bswap sub loopne (bad) jmp pop (bad) icebp loopne or xchg jmp outsl rex.WB (bad) sub xchg or rex.WRB or mov lods sbb push out jg or fdivs lahf rolb jrcxz out xchg leaveq out (bad) or mov out mov lahf rex.WXB negl sti and mov mov (bad) repnz pushfq (bad) (bad) (bad) scas rex.XB xor jle rex.RB push push sbb enterq add adc mov push pushq (bad) data16 div mov jle pop mov adc and idivl (bad) mov push pop ficomp adc fisubr push movslq cld push addl orl (bad) mov pushq sti xor push xchg xchg stos mov xchg xor cld mulb adc sbb (bad) pop jp push (bad) (bad) enterq lret adc push mov jbe adc mov mov sub repz iret xchg andb push jbe fbstp rex.WRX out xchg fcoms xchg lods push ss or (bad) xor insl rex.WRX movsl retq jle popfq fcompp stos xchg xor (bad) or pop push jg sub (bad) and (bad) mov outsb imul rorl lock (bad) movsl out (bad) add (bad) jne out out (bad) (bad) or out jge ds pop xchg out and (bad) xchg (bad) mov (bad) out mov lods lret cmp out insl addr32 (bad) movabs fs test jle (bad) adc jbe (bad) mov enterq movabs sbb leaveq popfq jne movsl iret mov retw int (bad) mov (bad) push pop insb sub in jrcxz (bad) jg xor cmpsb mov jnp out sti rex.WX mov cwtl xchg rex.XB mov outsb mov jno iret insb add retq (bad) (bad) movabs stos pushq mov (bad) (bad) icebp (bad) mov nop add xorl mov add rclb imulb cmp sub jmpq sbb rex.B mull rex.R pop hlt out fistl (bad) pushq movsb (bad) leaveq movabs (bad) (bad) rex.WXB movabs and cmc es repnz fisttpll xchg lods inc nop addb sub push sahf cmp (bad) sarl cmp (bad) or (bad) rex.RB jle (bad) pop pop (bad) (bad) mov in lods push xchg add (bad) pushq ja pop hlt adc sbb add out jno adc sub (bad) jl lea data16 mov (bad) pushq je es fiaddl pushq out jbe mov lods xchg pop jg sbb (bad) jne push out (bad) (bad) jb push (bad) data16 out (bad) cmp and roll pop fs out push imul xchg pop mov mov pop cmpsb sub test push cmp rex.W in or (bad) rex.WR lods (bad) push jle je cmp push or test jl and out jl sbb fs xor iret retq (bad) out insb hlt fisub and rex.WRXB (bad) je scas mov (bad) sub cmpl test scas jp add rex.WR mov cmovle rex.X addl sbb (bad) cmpsb sub movabs popfq (bad) cmp enterq xchg in scas outsl enterq sub lret mov xchg sbb popfq add (bad) and mov rex.W pop sti movabs rex.WRXB lock negl je (bad) jb test (bad) or mov callq push data16 clc rex.RX and and outsl sbb mulb enterq (bad) jb js pushq mov cmpsb leaveq (bad) (bad) (bad) jo outsl (bad) js imulb jo rolw mov shrl xchg loopne andl sub push callq or pop movslq sar sub (bad) adc jl imulb sbb lods hlt push std (bad) rex.RB rex.WB jl mov rex.RB mov jge movabs (bad) leaveq cmpsl or or data16 mov mov xchg ds pushq (bad) xchg (bad) mov add jae jp sub (bad) cmp sarb sbb fstps movsl mov or mov mov js movabs repz jo,pt add popq loope movsb icebp (bad) test sbb mov idivb mov xorl movabs in rcll add addr32 add and gs stos pop (bad) xchg (bad) enterq outsl xor movabs mov enterq xchg xchg repnz loopne gs fsub pushq (bad) push push pushq jbe xorb movsl push xor sub movabs test out (bad) rex.WX adc cmc cli loopne callq or cmp (bad) push scas pop insl (bad) insb lret fnstenv cmp (bad) sbb cmc sub xchg (bad) leaveq popfq pop jp xchg and hlt int sbb (bad) mov lods cmp (bad) leaveq (bad) cwtl ja jo lods xchg sbb fisubr pushfq xor xchg rex.RX int sub jl movabs test int cwtl lret jrcxz shll (bad) callq (bad) lock (bad) pushfq insb (bad) add rex.RXB (bad) lods sti mov cmpsb and cmpsb (bad) std mov je fild leaveq cmc pushq cld jae push sahf movabs fbstp divb mov xchg outsb fist stc (bad) xchg xchg leaveq movabs (bad) (bad) mov test cmp sahf (bad) negb jle repz (bad) sahf push cld je addr32 fs and sahf cmp cltd movsb (bad) movabs (bad) or jo rex.W movabs movsl retq cmp notl sbb icebp cmpsb add (bad) data16 (bad) or pop sbb add or (bad) icebp sahf or sub rex.WRB (bad) hlt sbb mov jg lods fisubr jle jle jp pop jl loopne out and je (bad) popfq insl sahf mov xlat (bad) sub (bad) pop mov xchg xchg test xchg sbb mov fiadd mov cmpsb xchg push js cmp (bad) fdiv mov idivl add test insb cmp xorl (bad) repnz test rex.XB test int3 (bad) xor test mul adc mov jb mov (bad) mov cli pushq out scas jb jg jne pop xor pushfq ds (bad) add xchg mov insb cmovbe lret loope mov push adc divl jle xchg lahf xchg fmull add je sub loopne jp sub xchg and callq scas and callq cli cmpl mov add rex.X push jb or jle (bad) pushq mov outsb out push movsb rcrb insl outsb rex.WRB adc add sahf or movsb and xor jle imul (bad) (bad) pushq rex.WRB loop test sbb or clc movabs pop mov add (bad) int (bad) in xor scas popfq rcl fdivrp mov add push xchg xor iret jne (bad) (bad) (bad) movsl xlat rex.XB push cmp add jge xlat jge rex.WB cmp pop mov cmp movsl (bad) xchg sub mov mov mov ja clc mov callq cli out fisubl lret jle repnz outsl sub fsubrs mov je jae movhps (bad) adc je mov out (bad) or out (bad) insb mov (bad) cmpsb rep (bad) jbe mov pop cs adc jmpq mov pop stos movsl mov mov mov movsl sbb mov imul in pushq scas movsl adc adc loopne (bad) movsl movsl cmpsl icebp (bad) (bad) cmp jbe (bad) movsl rex.RXB movslq lock std data16 mov iret sahf test mov lret data16 leaveq add mov stos sti mov rex.WRX sub movabs ss sub (bad) js imul cwtl movsl adc mov cld rex.WRB jne testb and xor cmp pop movsl cmp mov out adc push cmp cmpsl (bad) xor addr32 mov cwtl xchg pushq lods sbb rex.WB xchg data16 push rex.WB (bad) bswap pop (bad) notl jmpq rex.RX iret outsb mov add test movsl mov subl (bad) add stos scas movsl rex.X and retq movabs cmp mov pushq insb lahf lods in sbb xchg movsb int (bad) jno sti scas mov mov pop (bad) movabs (bad) in popq and pushq xchg imul (bad) sti imul (bad) adc sub decb (bad) mov mov cld cmpsb jp mov cmpsb sahf (bad) lahf pushfq lods pop je in fyl2xp1 fnsave enterq and pushq sbb stos pop subl cwtl (bad) outsl outsl pop or lock movsb rex.RXB rex.WRB (bad) (bad) mov or cmp add cmp movsl dec jle pushfq (bad) (bad) idiv pop movmskps jo (bad) mov (bad) cmc mov push cmc fadds adc xor divb or push (bad) sub (bad) (bad) rex.X rex.WR fwait add fucom fwait and movsl clc jae xchg mov movabs lret jp movabs test rex.W rex.RB adc stc repnz rex.X es pop (bad) (bad) sbb loop jo rex.RX pushq xchg lcall (bad) xchg rclb add mov cmpsl jle addl xchg xchg ficomp ds leaveq scas jrcxz rex.RB pushq loopne push rex.B out movslq lods loop imul (bad) lods loope and test rex.WRB adc lock lods mov scas lret and fstps (bad) (bad) (bad) ja fisub test sahf cs sahf mov test add sahf mov (bad) sbb (bad) mov mov rex.X mov mov rex.WB repnz xlat test mov (bad) mov movabs (bad) ds cwtl loope (bad) loop jae out add mov sahf decl orl rex.RB and or lret cmpsl push gs in insb xchg pushq sbb pop xor cld (bad) mov sub mov outsb (bad) push adc xlat mov sahf sahf cmpsb test push (bad) test cmp repz pop mov loope mov fiadd xor (bad) cmc mov movslq pop add movabs and mov mov insb js movabs test adc xchg movsb pop jo jnp jle movslq movabs je pushq (bad) push xor loop lahf scas lods xchg jmp movsb (bad) xchg test add test gs mov pop rex.RXB ficom jnp jb nop loopne cmp test adc in fs ja in movslq movabs lahf mov loope cltd (bad) xchg and cmpsb pop je lretw mov out addl fisubrl sbb ds jg jmpq leaveq cmp fdivp sahf insb (bad) mov jge pushq pushfq mov fldenv rex.WR es sbb mov cwtl pop jle repz insl cs cmp sub add loopne loopne xorl pop fisub jle pushfq cmp add andl fsubrp (bad) insb movsl cmpsb adc outsb (bad) cwtl rex.WX adc je xchg and fs out jno scas mov loop lods movabs (bad) (bad) (bad) jrcxz (bad) je (bad) rex.WR push fdivp jg loop fiadd fsubp (bad) clc loope hlt jle (bad) (bad) out pop fiadd callq cmpsl (bad) ja or (bad) imul jno sbb mov jmp sbb rex.W loopne insb add pop add mov rex.W insl jrcxz fsubl jo jbe (bad) jo push sub fbld pushfq or (bad) (bad) adc clc addl lea test je mov test and test mov movsb fiadd jne fdivrp jo pop je jo loop pop xlat (bad) or fidivr js and mov fnstsw movsb scas movabs (bad) nop add clc scas in mov xor pop fldl test sub mov cwtl (bad) cli jle rex.WB sub jb test std in jle ficom add jrcxz (bad) rex.RB fiadd pushq mov adc add jp in movsl jo jp movsb out fidivl rex.X or (bad) in gs stos rex.X or stos mov (bad) push (bad) hlt xlat (bad) mov rex.RB mov fidiv outsb rex.XB add in sub mov in rex sub es jg loop movslq mov push xor xchg repnz fsubp xchg push rex.WXB movsb pop cmpsb movsl xor out add fdiv pop lahf fiadd test fiadd addr32 out and js jne rex.RX fiadd and fsubp data16 movslq movsl jnp rex.WRB or (bad) movsl or data16 vmaxpd fsubl push loope stos negb push xor imul and movsb (bad) stos callq (bad) jo fiadd enterq fiadd callq loope mov mov or (bad) (bad) in cld sub and test fidiv add (bad) add addr32 fiadd stos fwait jrcxz addb mov pop scas fs rex.W add icebp in pop pushq fisub test popfq movslq fildll cmpsb out icebp (bad) pushfq xchg mov (bad) in (bad) push jo add xchg add xchg movabs cwtl xchg loope pop loop int3 and rex.WXB repz insb cld sbb movsb (bad) lods js cld mov jrcxz rex.WRXB movabs pop jp or stos jl sbb (bad) (bad) imul xlat rex.WRB stc fild in mull push test mulb xchg pop jl mov sahf rcrl out (bad) lret pushq std retq cmpsb insb rex.RB lahf (bad) js loop movabs jbe movsl rex.WR xchg (bad) movsb sub sahf mov retq fiadd movsl sbb and leaveq (bad) rex.RXB incb mov sbb rex.XB imul out scas cmpsl rex.X movabs addr32 scas (bad) fiaddl xor xchg negl fcoms mov xchg out adc and and jrcxz pushfq (bad) jl rex.RXB movabs sbb xchg xchg xor rex.XB add rex.RXB pop sahf icebp mov (bad) movsl xor xchg in cld rex.RX jmp insl je (bad) xchg (bad) mov pushfq rex.RB jl clc cmpsb adc mov jle (bad) mov lret movslq sbb in adc js xchg rcrb (bad) rex.WRXB jns (bad) movsl mov fildll leaveq (bad) pushq xchg rex.WX jno adc popfq or push out ss (bad) fistpll jns movabs sbb clc movsl adc jno (bad) lahf vcvtpd2dqy sbb lods adc retq (bad) (bad) movabs jno addr32 es xchg mov sti (bad) (bad) lods scas movabs xchg pushq jo (bad) rex.WRXB rex.RX or and mov xor rex.RX jno loop,pt push (bad) ss (bad) cmp jrcxz retq (bad) out or (bad) pop scas sub adcb jmpq sub retq es jp mov mov mov (bad) sbb xchg loop clc rex.WX icebp in ja pushq jmp adc mov xor (bad) add pop (bad) repz repnz mov mull repnz jo out sbb adcl push add xor roll push lock outsl jae stc rex.WRB (bad) (bad) jg es repz jrcxz jmpq lods (bad) xchg xchg jno stos testl and divb popfq loop shl cli jbe movsl cld (bad) (bad) mov (bad) (bad) (bad) data16 in cmp add mov pop mov and xor jg add xchg (bad) cmpb mov or adc rex.WRX cmpsb test and mov sahf (bad) cmc add cmp jb rex.XB rex.WRB sbb jnp (bad) xchg insb movsb movslq (bad) add movabs jns test jg mov (bad) cltd jnp fistpll (bad) (bad) (bad) (bad) (bad) rex.X sbb and (bad) (bad) mov add insl sbb (bad) lcall sub div fsts rex.WRB fstps rex.RB xchg jl ficoml or pop (bad) insl popq sub add imul rcl sbb loop xchg (bad) or in cltd lahf outsl rex.B rex.WRX or shll stc xor (bad) mov loope (bad) xlat sbb add loope (bad) mov pop (bad) pop (bad) std sub and (bad) and nop test fistp rolb add pop rex.WX ja jmpq jmpq pushq stc cmp cmp jmpq maskmovq negl mov cmc adc movslq repnz (bad) xchg cmp callq rol (bad) adc outsb pop or rol outsb popfq rex.RB rex.X movslq mov (bad) imul (bad) nop rex.WR (bad) shrb adc jmp (bad) fmuls lock jl cmp lock jmpq rex.RB imul (bad) (bad) fcomip push int3 outsb and (bad) lcall (bad) rcrl push out rex.RB cld fs mov int3 adc mov movabs fwait pop and push xchg (bad) rex.WR int3 (bad) cld movslq rex.WRX fsubs (bad) pop xchg push mov pop add jb shrb in mov (bad) pop stos cli xchg adc loop,pt std sub lock je cmp add clc test cmp jb jb bt clc cmp jmpq cs sti gs sbb mov test adc rex.WRB retq pop outsl (bad) (bad) cmpsb and adc cli adc imul jmpq test (bad) rex and movabs (bad) (bad) addr32 (bad) ds lods add clc pop xchg push ss pop (bad) (bad) (bad) jg mov lcall sub lret popfq rex.XB and adc (bad) rex.WRX hlt pushq cs sub fdivs (bad) cmp icebp mov std test movabs (bad) hlt movslq (bad) (bad) imull not (bad) fistp (bad) lea rex.WB rex.WX adc sub add jne (bad) rex.WXB add cmpsl sahf es insb mov add sbb mov cltd rex.WRXB lods divb mov rex.WRB cmp jmpq cmp jmpq jne (bad) lock jp stos jmpq callq jmpq je stc cmc jmpq insl xor mov (bad) mov rex.WX movabs sbb or fwait adc loope pop outsl (bad) stos retq out sarl addr32 cmp xchg sbb (bad) (bad) (bad) callq pushfq mov iret jbe rex.RB lock cmp pushfq rcll add pushq out mov and xor rcll jp (bad) cld es add jne adc int3 adc xor mov out (bad) push cld (bad) lcall (bad) mov mov (bad) lcall cmpsl push test stos rex.X rex.B (bad) cmp stc js int3 sbb (bad) incb sbb xor adc test rex.RB gs movslq cmpb cmpl mov mov (bad) lahf jg xchg fs mov nop cmp rex rex.RX clc or jmpq outsl (bad) fs sub mov add (bad) ds fdivl pushq fidivrl pushq (bad) leaveq int3 test out ss rex.RB rex.RX push add test (bad) and out callq lcall (bad) retq (bad) int3 subl and in std std sbb std (bad) lcall (bad) cmp (bad) lcall imul push (bad) cwtl adc rex.WRXB jmpq xor mov ficomp repnz enterq fwait rex.XB jge (bad) adc mov rex.XB (bad) enterq popfq sbb rex.R add stos (bad) mov or ja rex.WRXB fimul fcom xchg mov rex.X popfq rex.WXB movabs cld bsf shr rcl mov test inc stc adc add mov movsbw movsbw mov jmpq je jmpq jmpq jmpq xor xchg sbb mov (bad) gs jae jb sub pop sar mov fistpll xchg xor repz fildl (bad) jo outsl ja mov (bad) push add mov (bad) (bad) fisttp mov cld (bad) (bad) (bad) adc mov lcall movabs mov cmp mov mull jnp imul out sbb mov cmp movsl jno (bad) cs sahf jle mov (bad) callq mov retq outsb (bad) fcom fild push xor pushfq mov xor mov mov movabs movabs movabs ds sti js xor (bad) sub mov bswap lea jl callq movzbl neg add add mov bts sar mov cmp stc jmpq callq adc bts rcl add shrd setne mov bt cmpb jmpq bt cmc cmc or jmpq jmpq test jmpq jmpq mov jmpq jmpq jmpq mov clc cmc add jae cmc stc movzwl shrd stc or ror mov test cmc add cmc mov bt cmc test jmpq sub sub rex.WRXB fiadd xchg rex.WB xchg xor xchg repz jmpq fisub in pop mov notb xchg xor std lods stc sarb (bad) (bad) mov nop cld (bad) (bad) mov jmpq push (bad) mov test ss mov stc jmpq imul jae fsts xor adc addr32 pop movabs cmc in pop rex.RB xor rex.WB mov xor adc jle cmpsl rex.WRXB in xorl xor mov mov movsbw movsbw mov not mov movzbw mov lea movsbl movzbl mov movabs mov movzbw lea jmpq jb cmc cmpb jmpq jmpq jmpq callq test cmp test or jmpq jb stc cmc clc cmp jmpq jmpq movzbw mov lea mov mov xchg mov not lea not not mov movsbw lea jmpq jmpq add add jmpq push sar mov test bt sub jmpq cmc shr jmpq jmpq idivb mov adc (bad) sbb mov (bad) (bad) lea (bad) repnz xchg ds movsb (bad) jns push jg fimull shrl sbb scas gs (bad) lcall cmp adc jno mov in pop (bad) movabs push std (bad) (bad) (bad) (bad) jl and (bad) xor in cmc push mov cmp xchg pop jle,pt (bad) sbb rex.WRX rex.WRX enterq scas iret (bad) rex.RXB rex.X push loopne incl and cmp and or (bad) (bad) add or (bad) (bad) lahf (bad) in xchg or push xlat insb add pop divl sub int3 sbb sar data16 sbb idivl rex.RXB rex.WX movabs decl xchg adc jle sbb add fdivl mov loopne repz (bad) (bad) (bad) sti xchg pop add sti (bad) (bad) sahf stc rex.WB negb callq cld (bad) (bad) mov icebp cli (bad) lcall rex.WR data16 movsl or out cmp (bad) xchg (bad) fcoml out rex.WRXB rex.WR mov xchg outsb mov add jnp mov outsl mov mov cmp movabs (bad) sahf lret retq fidiv sub mov insl adc and mov sbb rex sub (bad) (bad) jnp fwait xor cmp rex.WRX in shll (bad) (bad) pop adc cltd rex.WRXB pop faddl mov jno mov enterq (bad) add cmc test clc bt cmp jl je jmpq shl mov test and stc clc stc clc add jmpq rex.X lret sbb out mov out mov popfq cmp jmp adc xchg cmc adc jnp idivb jmp or mov ja cli adc sub (bad) (bad) leaveq or rex.X scas pop adc (bad) (bad) jno pop sbb jmpq mov cmpsb mov rex.X mov sarl movslq (bad) rex.WB out js adc movabs cmp cld (bad) lcall add out mov sub xchg test xchg rex.R and jp xor out fldl (bad) es xor adc sbb and movabs sarb popfq mov sahf rolb push std test (bad) jns lret leaveq jno xlat insb or mov jmpq shll jb sar bt bt clc rol cmp bt stc cmc cmp not lea lea setge lea mov setnp pop jmpq ja add sbb adc sub and cmc add clc lea sub mov neg rcr mov stc repnz jmpq cmc imul bt stc jmpq movsb add mov sbb clc (bad) jle insl pushfq add xor fsubr (bad) mov shl mov xchg xor push cmp push js (bad) cmpsl fcoml (bad) xor mov jo iret outsl mov xor (bad) lcall mov (bad) jno loop sub int3 flds add rex.WX (bad) pop movabs or (bad) fbstp sti (bad) lcall and cmpsb jl (bad) sub cs push (bad) rex.R ja movabs pop test rex.RX lahf adc loop jno xchg and (bad) lea or rex (bad) int3 movsb cmp mov xlat adc adc (bad) in pop ficoml fmuls mov popfq icebp imul (bad) (bad) rex.WRX push movb lods push add lret addl add cmpsl es movabs in out sahf fsubrp rex.WRB cltq sti mov imul or cmp mov repnz (bad) lcall adc (bad) movsw add iret (bad) jnp movsb push (bad) movslq or xchg leaveq push (bad) add movabs rex.WXB jmp sbb lret add insb sub outsb jne (bad) adc (bad) (bad) mov jno (bad) lcall retq fucomi (bad) loop rcr rex test mov in cmp rex.WX callq (bad) pop movsl and pop test pop in rex.WXB rex.XB rex.R jge repz xchg rex.WB leaveq xchg jmpq rex.R add rolb bt mov bts shl mov test cmp jmpq jmpq jmpq jmpq je shr add shrd btr lea test sub inc and sub test shr cmp mov adc rcr shr ror add btc ja bts add stc shrd bts mov clc test cmc jmpq pushq jmpq pushq jmpq bt jmpq jmpq jne data16 icebp jmpq setb stos setne mov setge setl mov jge callq jmpq (bad) addr32 xor cmp (bad) jns rex.W pushq sub mov mov repnz cmc loopne cmpsl xlat retq imul xchg pop hlt rcrl jle cmp js push loopne mov (bad) rex.WRXB movsl pushq (bad) pop sbb in cmp jb movsl jg cld (bad) mov (bad) (bad) (bad) pop cmpsl and sti (bad) lcall xchg test mov jle mov cmp (bad) and jmp pop xchg (bad) rex.WXB jo mov lret mov rex.RX pop cli fsts (bad) jno fstpt sub add (bad) jle std sub adc push jmp mov jl fisubl fmull paddusw mov add (bad) jnp rex.X add add data16 movabs mov sbb in fcoml rex.WRXB cmc and jmpq out mov jns clc maxps movslq jae scas (bad) sbb (bad) lcall pop mov xchg std (bad) (bad) mov add popfq sti pop sub (bad) lcall (bad) cmp ss push bnd shrb cmpsb (bad) sahf (bad) hlt lahf (bad) jmpq xchg movsl std int3 ja fsubrl sub lret (bad) mov movabs add or push mulb scas cmp (bad) xchg xor ss sbb and jae (bad) jmp mov cmp xor sbb mov add push jmp movabs lea movabs mov sbb ds jo rex.RX (bad) icebp jmpq sbb xchg sbb xor mov mov jae jp and and mov int3 mov lret sub mov rex or mov cmp movabs pop sub mov lea (bad) (bad) movsb insb sarb rex.WXB (bad) (bad) (bad) ja (bad) mov mov ds fistpl add (bad) jl mov je (bad) add lods mov add rex.RX (bad) retq xor mov data16 loopne cs movabs xor pop movl fdivrl addr32 add cwtl movsl jne fisttpll push movabs (bad) (bad) xlat iret scas xchg (bad) sbb mov (bad) idivl rex.X rex.X mov mov or jmpq jmpq add rex.RXB gs fs jo gs rex.WB outsw add stc xor test cmp jmpq jne movzbw rcl ror sub clc mov rcr ror clc add or setge dec clc mov bt clc test jmpq pop jmpq or mov cmc stc bt sub jmpq inc btc shr mov btr setp cmp movzbw mov btr mov cmc sar rcl mov bswap not push jo ror mov bts shl or inc sub xadd shrd (bad) testb adc xor setb lea bswap lea jmpq adc mov (bad) sbb test and loopne push xchg sbb outsl (bad) fisubr pushfq int3 (bad) (bad) (bad) rex.WRX add lret pop jmpq (bad) adc pushfq pushfq and (bad) lcall enterq (bad) (bad) (bad) fsubrp xor mov jae jne (bad) out lret insb repnz xchg (bad) out cld (bad) lcall pop jmp mov (bad) data16 repz (bad) fs xchg xchg rex.WXB callq fmull xchg mov xor (bad) addr32 xor adc movslq cmp and cmp push xchg adc sub ss ficom leaveq imul jl andl retq xor rcr (bad) cmp xchg cmovl (bad) insl and add cmp jmpq ja jmpq ja jmpq addr32 cmp mov or jmpq subl (bad) retq (bad) cmp incb xlat in rol jle adc jp jge jbe leaveq icebp xlat mov (bad) xor adc ja movabs jmp lods jns mov pop jno cs mov sbb jp mov jnp adc (bad) stos cli (bad) (bad) mov push retq ds adc retq cmp sahf rex.WR subl fmull sub mov push (bad) (bad) (bad) icebp (bad) sarl xor stos mov (bad) or sti xchg outsl (bad) enterq pop cwtl (bad) fildll je stos cs add jbe je add (bad) or movsb rex.WRXB rex.R mov push xor (bad) (bad) adc lret mov xchg xlat idivb sti xchg cmp cmp orl mov (bad) (bad) (bad) (bad) jg pushfq add std (bad) (bad) mov xchg test push add and repnz pop push cmp movabs fadds adc sub or pop pop pop leaveq out sbb cmpsb in int3 or (bad) rex.RXB (bad) lcall jl retq movabs testl shrl movsb push push (bad) (bad) mov cwtl cmp pop mov add xchg rex.WRX pop mov fcmovnb jo lahf sbb jg (bad) mov push xor sbb imul xchg jne mov xchg xor imul rex.B push sub and add cmc mov xchg xor (bad) xor and jo scas mov std in cmp push mov icebp push jmpq push and cmp xchg insl retq push xchg divb sub js xor mov jne sub lret fisttpl (bad) mov push sub hlt rcrl adc shlb clc repnz jmpq add stc cmp cmp bt movzwl btr bt bswap cmc mov clc bt add clc mov jle test test jmpq add mov rep hlt fbstp (bad) cmpsb gs (bad) mov out fildll (bad) movabs (bad) (bad) mov cmpsl in and xchg (bad) adc jno rex.WRX adc cmp (bad) (bad) (bad) mov mov add (bad) mov sbb and sub in je xchg (bad) rex.WRXB xchg (bad) (bad) mov in (bad) lcall rolb rex.B (bad) lods pop mov xor callq shrb insb sub stos cmp xor out out out in add xor repnz cwtl rex.W cwtl movsl cmp (bad) enterq mov movq (bad) in and pop not xor (bad) je stc cmp jmpq bswap mov jmpq jmpq jmpq test jmpq or loope cmp scas pop sahf stc mov rex.WRXB mov xchg (bad) mov adc loop xchg cmp movsb pop imul ds adc cli (bad) iret xchg test subb mov jb rex rex.RX jnp rex.RB addr32 (bad) (bad) (bad) jg mov movabs (bad) lcall jae (bad) lcall sbb cmc movabs sub rex insl adc jle (bad) sub sub data16 in je xchg pop mov icebp mov cmp sbb fldl rex.WB xor push and sub or mov hlt sub out and pop insl movsl pop xchg rex.WRX cs movabs fisubrl and callq cmp rol jmpq je mov lea mov movsbq mov movsbw setg bswap mov mov lea jmpq ja bt bt imul test add jmpq je rcr movsbw clc inc add bswap (bad) cmc add jmpq mov cmp mov cmp rorl mov jmpq jmpq adc jmpq bswap mov stc cmc and cmp test add jmpq jne jmpq jne cmc cmp stc movb stc cmp cmp cmc test jmpq (bad) xor (bad) sbb sbb push (bad) rex.WB (bad) mov repz vpunpcklbw scas rex.RXB push out sbb out (bad) rex.RX cmp pxor rex.RX (bad) rex.RXB pop adc push (bad) loop (bad) (bad) (bad) cmpsl (bad) int cld loopne (bad) and and fdivrs fs mov cmp movsb push std (bad) jl mov cld loope rex.WX std (bad) lcall sub (bad) lcall pop (bad) rex.WRX rex.WRXB popq push (bad) loope imul pop cmp xchg push xor roll es callq frstor jmp sbb (bad) stos xor adc outsl mov mov xchg in hlt and rex.X cmpsb jle sbb repnz sub (bad) in or xchg rcrl xchg push adc (bad) jmpq mov jmp rex sbb (bad) mov fnstsw xchg pop jno cmp jrcxz rex.WRX rex.WB mov fdivrl add ss (bad) fcompl xlat pushq mov vaddsubps (bad) (bad) jg add in rol lret lcall sub (bad) lcall or (bad) or ss pop lret xor jrcxz (bad) rex (bad) xor xchg add cli fildl pop cli mov rorl mov jl or fisttp mov outsb mov enterq rex.R (bad) iret sbb rcrl (bad) sub sbb jbe cmp push lock in jge (bad) mov xlat adc jae cmc xadd xchg mov xchg stc mov sub mov cmc sub cmc jmpq je jmpq jmpq callq jmpq ja stc clc stc imul cmp test bt add jmpq out fildl sbb sbb add movabs mov jns cmp xor xchg sub cli rex.WX (bad) repnz ja ss or xor dec scas ss test loopne push rex.X or test cld (bad) lcall hlt cli (bad) lcall nop push mov mov sbb cmp xlat (bad) and cmpsl mov push rex.WRB (bad) (bad) outsb mov and cvtdq2ps out mov push sbb (bad) stos loop rex.X rex.WX js mov xor stos (bad) ficoml enterq mov lods jp js outsb scas ss rex.WR movsb in cmp mov rex.XB cwtl fsubs lods sub in rex.X (bad) jp push mov mov movabs fwait sbb jns sub outsl sahf fidivr (bad) in and sbb cbtw (bad) mov jae adc leaveq (bad) sbb or fidiv (bad) sub sar (bad) (bad) (bad) mov or pop jbe stos shll fbld mov scas sti (bad) lcall xchg gs sbb sub movabs (bad) lea (bad) imull (bad) std mov add test push fwait int3 adc pushfq int insb movsb push jrcxz rex.WB jo iret (bad) and pop xchg sbb or dec cmp lods sbb rex ja (bad) jbe (bad) sbb (bad) rex.WRXB or repnz add jbe in (bad) pushq (bad) cmp movabs mov sbb loopne xor push jae adc fwait sbb nop (bad) pop outsb xchg hlt adc sbb int pop xor and add adc rex.WB jg pop rex.RX fs jnp add (bad) (bad) mov lods jle rex.WRB rex.XB fdivp add xchg sbb fimull sbbl or lahf and mov (bad) (bad) sar cmp sbb jno (bad) (bad) lahf jle (bad) push popfq jmp insb (bad) xor stos push xor rex.R cmp addr32 cmp and and rex.WRXB mov cmpsl test shrl add (bad) mov movabs callq jmpq add push gs jne jb push (bad) insb jne add mov std ljmp or add jmpq mov sbb test test (bad) scas outsb (bad) cmp pop jb roll rex sti fiadd mov cmc loopne push f2xm1 nop add (bad) (bad) iret (bad) adc fisttp rex.RX fldt adc hlt fld (bad) (bad) lcall out cmpsb jge sarb cmpsb rex.RX jnp (bad) int3 sbbl cmc imul (bad) jg movabs (bad) out rex.RB mov mov rex.WX loopne out lock xorl xchg lret (bad) mov jmp out movsl mov (bad) movabs cmpsb rex.WRX xchg push std add pushfq mov in ss and rex.RXB add enterq (bad) mov lret add callq test out movabs es pop out jrcxz sbb clc movq enterq add adc imul lods jl xchg rclb test sbb sti cmp jp rorl add in pushfq movabs sbb add sbb clc cmpb stc (bad) outsb mulb mov (bad) test (bad) (bad) mov idiv (bad) lcall pushfq pushfq movabs xor retq pop rex.WR pop stc xchg addr32 outsb (bad) push cmpsl and imul mov in int3 rex.R cwtl (bad) (bad) add rex.W (bad) sub pushq fs jmpq jg insl test mov (bad) jg (bad) cmp stos cmp mov lods rcrl push xchg sbb mov popfq pop add jo (bad) jmpq add cmp or jmpq adc jmpq jmpq je cmp jmpq callq jmpq add hlt pop rex.RX sub movabs (bad) (bad) ds imul add xlat mov movsb sbb jge or nop mov fdivs rex.WR (bad) fild xchg rex.WRXB push xor jnp (bad) mov sbb mov test rorb (bad) scas in rol repnz jne xor (bad) (bad) sub jg movabs std or std (bad) lcall cs (bad) lcall mov pop sub (bad) xor callq adcl fdivrs (bad) mov adc cmp (bad) xchg jb js rex.RX fs push cltd icebp (bad) rex.RXB out in xchg pop cmp mov iret push add xlat addr32 cmp jmpq ja cmc shr sub shl data16 (bad) add bts mov (bad) lock stc test cmp repnz jmpq and sbb ds pushfq rex.WR out mov push jbe test retq rex.WR or rex.WX rex mov rcrb es rcll rex.WB insb and xchg cmp out std (bad) lcall enterq jmpq outsb cld (bad) (bad) (bad) pushfq cmpsl (bad) (bad) int (bad) lcall sub pop fstp movsb jb icebp jno shrl fist adc lea xchg adc (bad) push pushfq sbb rcl cltd cmpsb (bad) fistpl iret (bad) mov (bad) xor rex.W ds jl mov jae mov leaveq fs sbb sbb mov xchg lea std jb int adc mov iret push xchg out adc cmp xor xor cmp rex.X jo push imul and rex.B jmpq pushq jmpq jmpq jmpq xor test repnz jmpq jmpq jb stc test cmc cmp jmpq jmpq jmpq rol jmpq jmpq jmpq cmp cmc cmp add jmpq je bt cmp stc add bt cmp jmpq inc stc ja rol cmc cmc test stc cmp movsbw bswap bswap lea lea pop jmpq movsb pop in push sbb movslq cmp callq pop jno push lock push rex.X xor mov mov mov adc rex.RXB movabs xchg add imul ds xchg je lret repz imul pop (bad) leaveq xchg adc lcall xchg fisttp (bad) lcall cmp jge mov movabs rex.WX rex.WRXB rex.R repz loope pushfq rex.WX xchg rex.RXB je push cwtl push xchg out mov icebp icebp imul scas adc imul scas (bad) sbb cmp in (bad) push out ss test sub cld fs out pushq fdivs scas mov add sarl in xorl (bad) sbb push fwait sub (bad) adc (bad) add mul mov movsb movabs movl rex.WB lock (bad) in sub (bad) in add rex.WRXB (bad) testb xor sbb loopne rex.WRXB cs rorb xchg movsb push movabs es ja (bad) (bad) (bad) (bad) add (bad) rex (bad) lcall (bad) out and orl xchg sub xchg in jge fimul imul jnp repz jno mov outsb jbe adc adc retq callq (bad) sub mov retq cmp or mov xor cmp xchg cltd loope loopne sbb (bad) and (bad) (bad) add jo xlat mov test xchg (bad) (bad) data16 mov sub cmp add cmp jo std cmp (bad) (bad) (bad) mov movabs movslq xchg lea rex.WXB jns outsb or and xchg rex.W rex.WRX cmp rex.WRB test jg push mov movsb faddl std (bad) (bad) (bad) rex.WRX icebp loope cld (bad) lcall adc (bad) lcall push std push int and pushq rex.X rex.WXB pushq rex.RXB adc (bad) xchg jg jl imul jmpq stos sub andl sub pop mov (bad) cmpsb cs stos orl ficompl rcrb (bad) rex.WRX rex.W mov (bad) cmc test in and add add mov (bad) pushq and xor (bad) jns scas movsbl xchg add jp movsl and out mov pop xchg cmp push mov callq jmpq leaveq test sub nop push add and in sub movsbl imul jae rex.WR jrcxz push rex.RB rex.WRXB rcrl (bad) (bad) (bad) fildll add sub repnz andl movabs mov lahf jle xor (bad) xchg rex.XB fwait test test (bad) (bad) xchg jle fmull jp add (bad) fistpll hlt je test jnp sbb xchg (bad) cmp (bad) jbe faddl test pushq jmpq testb mov sbb (bad) (bad) pop imul mov sbb sub orl mov jno mov xchg movslq jb callq mov jno mov xchg stos sti sbb fidivr std (bad) lcall (bad) (bad) (bad) add stos and or and sub adc sti in or sub mov rex.RB cmp (bad) movabs sub leaveq (bad) rex.RB sti (bad) lcall rcrb (bad) mov sub je imul add rex.WRXB (bad) jg sub mov pop test add xchg and cltd rex.WRXB ja (bad) (bad) rex.RX fs fidivl mov lahf rex.WRXB std in or lock ss sbbl lret pushq (bad) testl add in or repnz jmpq jne test cmp cmc movb jmpq jmpq cmp jmpq lea sub sbb fwait xor xchg adc rex.WRXB rex.WX std rex.WRB rex.W rex rex.RX data16 add test (bad) fidiv cs push and sbb pushq jno addl or shl mov and std (bad) (bad) fist xor (bad) (bad) cli rcrb pushq pushfq mov mov mov jg sub push (bad) iret sbb movabs or test rex.RB jrcxz (bad) lcall lea jge mov leaveq cmp (bad) mov lods or (bad) cmpsb out in fs jns jrcxz outsb mov es out xchg xor (bad) jae rex.B (bad) iret je (bad) cmp pop rex.WB xchg out scas outsb mov xchg (bad) (bad) (bad) lods and out adc mov sti movsb movabs adc ja xchg clc jo jp mov lods pop mov mov retq xchg jno pushfq (bad) movabs js adc fcomps scas out (bad) (bad) xor rex (bad) (bad) jg xor insl lahf sti (bad) lcall sbb xchg jno cltd add fisttpll and cs mov ljmp cmpb xor xor movsb fmull jb cmp mov mov rex.B (bad) xchg push int repz (bad) cmpsl and xchg data16 cmc repz or xor (bad) push (bad) ss je or fadds icebp jbe add mov rorb sbb lods je adc pushq xor rex.WX jl sbb (bad) movb and mov sbb push sub jae cmp rex xchg sub (bad) ss lods xor rex.XB and and xchg cmp mov sub rol pop cltd outsl (bad) (bad) (bad) (bad) callq add or sub mov or in mov jnp repz (bad) push xchg sub push (bad) pop (bad) xor lods rorl cltd jmpq lods in (bad) enterq xchg cmpsl out xchg (bad) pop (bad) (bad) shrb sbb push pushfq sub mov add mov (bad) sbb (bad) loopne scas rex.WRXB leaveq jns callq mov enterq and fsts rex ja lret sub cmp rex.RXB (bad) lcall outsl loopne rex.XB pop cli (bad) adc push rex.WRXB scas and or add xor shr pushfq xchg imulb cmpsl (bad) mov xorl sub (bad) push scas jge mov repz mov test pushq addr32 jl xor fs push mov jg enterq out lahf mov rclb rex.R add jae in stos jmpq sub rex.RX out (bad) fcmove retq fisttp test cmc add movsbl (bad) cmc add movzbl sbb mov rcl (bad) hlt (bad) bsr sub lea setl lea jmpq test bt repnz jmpq rex.WX test mov mul adc es adc cmp (bad) imul xchg adc push outsb pop cmp pop (bad) mov lret retq or mov mov imul or decb xchg add cmp movslq (bad) lret in add mov mov xchg or (bad) jg faddl movabs repnz (bad) (bad) jmpq (bad) (bad) rex.B fwait mov (bad) stos xor in sub (bad) or in rcll movsb (bad) movabs xor (bad) push adcb push cmp cld fistl adc movsl lods cmp xor insl xor (bad) push rex.X rex in mov adc (bad) ds and sub or jrcxz (bad) loopne mov jrcxz pop lret and pop orb and loop rex.WX push sbb xchg rex.X rex.WB pushq cld sahf fidivrl xor sbb xchg test cmp cmpl rol (bad) (bad) xchg add push js (bad) jg loop insl pop cmp sub or adc or rex.XB cmp rclb scas (bad) cld insl add (bad) iret mov lea (bad) (bad) mov mov cmp xor hlt adc mov add rex.WRXB cmp rex.RB and (bad) lcall pop std (bad) lcall cmp lret retq (bad) rcll test (bad) ja int movabs xchg cmpsb out rex.WX (bad) movslq pop gs cltd pushq callq adc (bad) jle divb xor mov addl in xchg and sti cwtl adc fdivs adc rex.WRB in push sbb icebp sbb loope xor mov (bad) test fwait jnp (bad) and data16 rex.XB adc stc (bad) sub fsts cmovbe mov xor xchg cmp (bad) in mov std (bad) lcall nop and (bad) adc or adc retq (bad) loope ljmp (bad) retq fs cld (bad) (bad) mov sub (bad) lcall mov cmp (bad) add rex.WX rorl cltd mov (bad) pop rex.WXB jp jo rorl mov rex.WRX movabs pop ficoml push xchg divb retq loopne mov ss add or jno push lods xor jmpq callq xchg adc xor or cmpsb add mov setnp add inc not mov test cmp jb stc cmpb jmpq and mov in rex.XB (bad) mov mov fsts test iret (bad) (bad) (bad) vpunpckhbw retq rex.WXB adc mov xchg cmp jmp out mov mov mov (bad) std (bad) (bad) (bad) or rex.B fcmovu mov lods fs push pop jle (bad) (bad) jg adc (bad) rex.RXB data16 (bad) adc rex.R iret adc xchg and xchg nop rex.R scas add xchg (bad) fadds push loop nop add sbb movabs pop (bad) push movabs sti sbb sub push rex.WRX ss pop xchg pause or movabs or mov add mov sbb and cmp js orl jg (bad) xchg sar rex mov jmp (bad) jle sub movabs (bad) xchg je cld je mov lcall movsb out (bad) fldenv iret sub mov xor fisubl or sbb jno push rex.WRXB sbb loop callq push cld sub xor mov out xchg jl jp adc pop (bad) cmc xor rex.WRX or scas (bad) jae push adc (bad) mov add rex.WRXB add movsl cmpsb or add rex.WR rex.RB jne gs je rex.WR outsl outsb push gs imul push or add js sbb (bad) shrb cmpl pop xchg sub sbb xchg cmp (bad) cmp (bad) jo movabs je add xor (bad) lcall in mov adc xlat mov cld (bad) (bad) fistpll or cmc adc (bad) lcall leaveq leaveq mov sub iret (bad) xor cltd hlt lahf push iret rex.WRX cmpsb mov (bad) rex.RB adc jns out push scas jl addl and scas ss rex.R jge push faddl loop movabs mov lock cmpsb push in push add jrcxz sub cmp fcomps cmpsl iret sbb test adc (bad) test pop or jns (bad) popq jmpq mov sbb xor xor pushq pop rex.WRB pop (bad) rex.WRX adc cmc and xchg rex.W xlat in fcomi (bad) test xlat retq mov (bad) es mov rex.WX rex.WRB mov (bad) or sbb mov (bad) rex.XB rex.XB cs je (bad) divb rex.RXB test hlt sbb sbb xor xlat out and sti xor pop (bad) std in mov cmpsl paddusw add movsb jl mov xchg outsl cwtl rex.XB rex.WX add rex.WR mov sbb rex.RXB rex.RX add iret push popfq push je add divb sub out test jg or out and leaveq push ss fs rex.WXB rex.WRX sub pop xor pop imull retq or (bad) lcall add data16 and mov movabs mov jb cmp xor cmp ss cmp pop cmp rex.WRXB and retq xchg pop or imul push and adc xchg outsl add push xchg jns pop sbb (bad) xor (bad) out lea repz movabs xor xchg (bad) fnstenv (bad) or mov mov mov (bad) rex.RX mov (bad) popfq cmp test cmp loop xor enterq xor sbb add rex.RXB fimul pushq (bad) enterq scas sub (bad) lcall rex.X lcall xchg cmpsb roll cmp mov rex and ds pop movabs xor jo pop std stos imul cmpl fdivrl (bad) jbe std repnz xchg xor mov pop out mov sub gs int or and or mov and (bad) outsl out int jg xor sbbl and jo (bad) xchg es mov movabs rex.WXB rex.B outsl mov pop rex.WX push cwtl xlat jl (bad) mov add add jne not not bswap bswap mov jmpq shl xor movzbw not movsbw xchg pop mov movsbl pop not not bswap lea pop bswap jmpq je not push rol xor and mov bts sbb inc stc sub jo bswap lea jmpq cmp cmp jae jae jmpq je jmpq jmpq add mov xor xor cmpsl xor adc clc push ja (bad) scas sub movsb (bad) cmpsl xchg add add enterq stc mov sahf sub jb xor (bad) adc rex.WRXB rex.WRX (bad) lcall imul cwtl js movsl in mov mov (bad) cld (bad) lcall mov mov sub (bad) lcall mov lock pushq jg push loopne lcall je fldt (bad) outsb popfq and adc xchg out cmp pop (bad) or sbb (bad) scas push pushfq in hlt and jmp mov mov (bad) sbb rex.B cmpsb rex.WXB rcrl lods mov sbb xchg rex.RB jmpq add fildl sbb (bad) xchg test loope psubusw rex.RXB retq cmpb cmp jmpq rep lea lea jmpq jmpq jne cmc btr sbb mov mov cmc test jmpq jae cmp clc stc clc xor jmpq je movsbl sub xadd shl adc cmp mov shrd shrd rcr mov rcl shr bsf mov jmpq callq movsbl stc add neg and neg sub mov stc cmpb jmpq push rex.W rex.RB rex.WR xor cs insb add xor xor fs insb add stc adc add in movsbw pop retq jae jmpq loopne test pop sbb mov clc js cmpsb out movsl and sahf in test xor mov xchg rex.WXB repnz int3 insb je movsb rex.XB mov (bad) jle fs retq cltd (bad) leaveq loope mov and (bad) (bad) jg push cld (bad) fmuls mov lcall es pushq repz clc mov rcll gs rex.WRX negb (bad) sub xchg loop (bad) push add iret rex.WRX enterq test xchg imul repnz fisttpll rex.XB adc movabs std or and add sarb rex.B (bad) push jmpq jmpq pushq jmpq jne test not sub not neg movzbw movzbw mov clc rcl (bad) lock add sar cmp rcl cmp mov stc test test test jmpq test jmpq jmpq jmpq (bad) adc test sbb repz mov xchg lret movslq sbb fsub (bad) stc mov enterq clc xlat jg (bad) cmpl outsb rex.WRXB rex.RB cltd (bad) test (bad) (bad) lea test jne sub mov leaveq rex.RX fist mov or insb pushfq rex.XB push (bad) sti rex.WXB movabs sub push int3 (bad) test cmp stos outsl out jno nop rex.WRXB shrl test js xchg xor xchg mov sahf (bad) insb and outsb mov cmpsl rex.WRX xchg iret mov xor lods mov adc (bad) (bad) retq and clc cld shrl pop cmpl sbb sbb cs js shll rex.WRXB xchg jns jnp xchg shr cmpsl xor xchg push int3 adc outsl mov leaveq (bad) rex (bad) (bad) mov loopne retq xchg (bad) sahf cld (bad) (bad) (bad) (bad) hlt mov div jl and cwtl ss (bad) es xor movabs (bad) sub and (bad) xchg rex.R rex.R add (bad) push loopne or movsl cmp icebp icebp pop (bad) fisttp (bad) xchg adc int mov sub mov xlat divps test bt cmc bt sub clc cmp test cmc cmp jmpq cmc test cmp mov movsbl lea lea bswap pop jmpq callq btr bswap add cmc sub not mov bt bt cmpb jmpq callq je jne mov mov jmpq and gs sbb cli adc add leaveq ds (bad) (bad) adc jle lret adc jmpq movsb add sbb fcoml mov movabs (bad) xlat mulb in xor sbb imul mov mov rex.XB in rex.WRB lods shlb cld rex.WR adc mov rex.RX data16 insb mov pop rex.RB rex.WX jb sbb rol es sbb (bad) loopne xor push in cmc popfq jmp sbbb jge rol jle cld fs mov stos rex.X insl (bad) loop sbb (bad) rolb adc hlt or (bad) (bad) (bad) jno lock rex.XB stc iret (bad) xchg (bad) mov mov shl scas (bad) scas jg in cmp jmpq sbb jle adc pop sbb imul scas in (bad) lods rex.WX mov xor and sarb negb loop or adc cmp callq pop pop (bad) lret jbe xor (bad) mov (bad) jle sbb je xchg jmpq test sti sub mov and movsb fsubr fwait cmp sbb (bad) (bad) lcall lods std (bad) lcall rex (bad) (bad) in add (bad) cmp mov sub addl sti fwait xor sub (bad) (bad) or push xor popfq rex.WX mov pop mov test cmp jo cwtl or (bad) xlat iret rex.WRXB (bad) cmp mov and cs in xchg loope xchg rex.W loopne rex.WRB movabs mov movabs sbb repnz imul out and scas pop cmc cmp movabs movabs loop cmp (bad) jno retq cmpl rdmsr jl add or imul mov cltd cld mov loope loopne (bad) or (bad) sbb (bad) lcall lods std (bad) lcall shrd cs add stc cmc xchg jo sub rex.WX xor std sub iret mov sahf sub rex.WXB pop mov callq xor orb sub sub rex.WRXB (bad) cmp rex.XB fisttpll fiadd fadd jl sub (bad) mov sti xor cmp movabs (bad) (bad) (bad) mov (bad) (bad) (bad) outsb jbe rex.XB div (bad) rex.WR xor rcl sar not adc mov bt seta add rcl or dec mov stc cmp test jmpq jne mov mov jmpq ja not sub neg movsbw bswap bts add clc btr cmp mov cmp mov jmpq ja clc add shl shl mov cmp cmp jmpq or sbb (bad) scas ficom loop xchg icebp sbb adc add nop rol jae jmpq (bad) jle mov xchg adc cwtl out mov rcrb rorl cli rex.WB (bad) (bad) mov jne in xchg out out movsl push sub cmpsl (bad) (bad) movabs cli sub jne mov movabs rex.WRB rex.WRB rex.WXB sbb fmuls or xor out fadds push mov out shll (bad) (bad) pushq xor sti cli (bad) lcall add popfq fdivrl cmpxchg xor shlb push out scas pop (bad) int3 movsb fnstcw out cmpsl (bad) out sub pushq je rex.WXB rex.WXB movsq or (bad) rex.RXB insl jne lods insl mov (bad) int or enterq (bad) outsb sahf (bad) jle in paddd stc stc rol jmpq jne test cmp clc movb cmp stc bt test jmpq jb jmpq jmpq je rcl push btr sbb adc sbb mov or bsr bt sub mov setl lea jmpq jmpq jmpq callq jmpq jae cmp test mov sar movsbl setno mov setp clc or mov jmpq cwtl jo (bad) sbb jge cld or cmp and pushq mov (bad) mov (bad) jbe (bad) mov fucomp mov and mov enterq jno pushq out and sub jne (bad) lcall int cmp mov pop or cmc cld (bad) (bad) fcomip add (bad) sti (bad) lcall test pushq imul cwtl ja rex.RX outsl in clc stos (bad) (bad) pop pop cmp sub jo callq test movabs sub rex.WXB movabs stc add cltd rex.WRXB jno or insb lods jbe or loope imul adc sbb icebp (bad) addr32 jl mov fbld (bad) iret xchg and sti mov or add sbb mov jle cmp (bad) sub cmpsb (bad) std mov in mov xchg fnstcw js (bad) rex.WRXB add cmc adc test fwait mov std (bad) lcall rep (bad) xchg (bad) pop cmc (bad) je xrelease (bad) lea mov cmp pushq (bad) test js test xor fwait rex.WRB hlt ficomp fistpl fiadd cmpsb (bad) popfq leaveq rex.WRXB rex.X pop fs movsl test enterq addr32 (bad) (bad) (bad) roll lcall add nop movsb movabs add cmp callq xchg in mov rex.R loope (bad) fildl mov mov jno and (bad) in retq lock loope mov (bad) cmpsl (bad) out idivl xor mov rcrb js rex.WXB push (bad) push add (bad) mov out jmpq jmpq mov pop jmpq je cmp bt cmc sub cmc stc cmp jmpq and sbb cmc loopne pop rol xor xchg cmp gs loop and mov pop cmp movabs imul fidivr cmpsb xor xlat (bad) (bad) (bad) cmp gs or (bad) lcall xchg rcrb loopne (bad) (bad) (bad) sbb insb mov or (bad) movabs and xchg jge rex (bad) (bad) cs xchg test scas (bad) fisttp pop xchg or rex.WRXB lahf rex.WRB sub enterq mov add (bad) test fistpll (bad) lret sbb pop orl cltd out (bad) sub cwtl cs rex.WRB rclb jo and xchg repz jbe lahf add mov add fild mov and or rex.WR sbb or movabs ficom (bad) divl leaveq (bad) lahf movsb fs rex.WRX or cltd rex.WRXB (bad) push xchg adc cmp fmuls ficom adc push jmpq adc and pushq rex.WRX cld rex.R stc movabs out rex.R rex.R outsb imul jb sub rex.WRX notb movabs jrcxz sub mov cltd mov rex.RXB rex.WR or (bad) pop (bad) (bad) pushq fiadd in in mov nop sub pop pop outsl jae sub (bad) mov fidivrl push out (bad) jbe (bad) retq stc rex.B add fsubrs (bad) cli (bad) lcall cli adc sbb pop mov out movsl test jmp (bad) lahf rcll out mov mov xor jmp cmp sub sbb cmp rex jns mov (bad) pop jrcxz adc xor adc ficoml mov adc pop sbb movabs (bad) decl mov iret lea pop movzbq movsbw not pop jo pop retq add rex.WR movslq rex.RX add subl (bad) jmpq iret lea shld mov movzbw mov movsbw xor mov stc cmp cmp clc sub cmc stc stc bt repnz jmpq (bad) xor sbb outsb imul fisubrl lods and rex.WRX sbb or mov push jp repz (bad) rex.WRX mov jb (bad) mov rex.RXB (bad) lcall pop add test clc mov out rex.RX pushq (bad) or movsb cld (bad) lcall add (bad) lcall scas rex.RXB loope (bad) (bad) mov test fsubrp hlt mov mov push (bad) mov incl repz (bad) jmpq mov jae rex.WX callq out cmpsb orb xchg adc jne push mov jne (bad) mov mov jp rcrb js jge jnp mov icebp (bad) push rex.WRXB adc stos cmp loopne cmp pop xchg push cltd jmpq fstpt add adc icebp push insb mov imul (bad) (bad) ja out pop cmp (bad) (bad) out cmp imul adc sahf (bad) (bad) fidivr ja lahf mov pop movabs xchg xchg or (bad) lcall andl push subl loop xorb mov lcall xchg pop mov (bad) orb fldl xor jrcxz push cmpl push mov fisttpll sub and int3 pop rex.R je hlt fildl movabs sub andl rex.WR mov (bad) rclb callq rex.WRXB cs sbb mov jb pushq fild mov (bad) (bad) outsb jbe rex.WR add data16 jne test bt jmpq jmpq jmpq jmpq jmpq rolb ja sbb jns movsb movslq scas (bad) mov mov mov sahf sub sar movabs iret lahf cli sub sbb lea loop imul and lahf movsb movabs cltd icebp mov callq adc cltd adc in rcrb adc (bad) iret sbb xor xchg rex.WB adc outsb fidivr or adc add (bad) and fdivl rex.X pop mov (bad) and (bad) mov pushq fist push cld in or sub add cmp (bad) insl in movsb xorl jmpq add jmpq jmpq jmpq test jmpq jae movzbl and bsf mov bsf cmc sub shld mov movzbq mov bt jmpq fbstp mov mov mov and sbb (bad) rex.RX and cmp (bad) xor fildll stos fidivrl xor (bad) cmp mov stos mov sub lea lret fwait stos mov (bad) (bad) (bad) jg jae repnz clc pushq (bad) (bad) pop adc (bad) (bad) (bad) xchg mov hlt outsb sti (bad) lcall cwtl rex.X rolb out in insb mov cmp cmovae loop pop sub rex.WRXB rex.WR sub lret rex rex.RX movabs test (bad) add mov push xchg rex.RX pushq retq mov loop flds rex.WXB push xchg stos sub andl (bad) lret sbb (bad) in rolb movzbl pop retq jb retq jne setae lea setne mov jmpq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add test bt cmc movb clc test jmpq (bad) lahf mov outsb sbb xor nop pop sahf sub notl mov cmp addb jno test (bad) out (bad) cltd and cmp mov adc and (bad) (bad) (bad) jg mov jae lahf (bad) (bad) jbe mov loope cld add out (bad) push (bad) mov int3 ja jno rcrl jmpq mov test sbb xor int3 pushq cltd add xchg (bad) (bad) callq jl jmp (bad) sbb mov mov shrb repz jns out mov sti xor insl sbb je movabs push retq or add adc sbb pop xchg (bad) xor movabs rclb rex.RX cmpl adc add fisubl mov retq jmpq stos jmpq bswap seto lea mov movsbl lea jmpq rex.X outsl sbb and adc rorl sti push or xchg sti movsb sub xchg (bad) pop callq (bad) (bad) xor xchg stc mov pop js cmp out (bad) jle xor leaveq adc (bad) in retq pushq (bad) (bad) mov (bad) or mov rex.WRXB cmp rex.X outsb lret sub (bad) jp in insl (bad) (bad) pushq push xchg mov test adc sbb xlat lahf in sbb mov outsb adc pushq sbb divb sub paddusw testl callq add shr cld lods loope jo mov (bad) or xchg cmc test movabs lock (bad) flds sbb xor (bad) loop incl cmp (bad) lcall xchg cli fs cld (bad) lcall (bad) popfq shr lock (bad) in mov push push (bad) cs xor retq sbb rex.WB out movsl test jge adc callq addr32 xlat (bad) push jns in ss and or sbb cmp stos push jb (bad) sub rex.WR loopel (bad) xlat lock ss ja rex.XB mov fstpt (bad) int movabs lea push jmpq fisubr cld push cltd icebp icebp xchg push sysenter rex.R movabs xchg push cmc cmp enterq (bad) push or ror rcr sar mov not jmpq jmpq (bad) (bad) rex.RX sbb lret add xchg xor rex.WB rex.WR push jp imul pop (bad) lods test int3 sti rex.XB sbb cmp sbbl pop lock fdivrp (bad) (bad) mov rex.WB rex.WB fdivs rex.WX std (bad) (bad) (bad) (bad) loop loop sti (bad) lcall lock (bad) addr32 (bad) pushq sti iret cli jns mov (bad) mov retq repnz mov cmp cmp lock cmp add test xchg jge jae insl (bad) cltd rex.B outsl mov lret sub xor jne std mov push roll (bad) out (bad) std sub rex.WB mov mov cmp add jl mov jmpq push push push push xor cs insb add (bad) add cwtl jb add lahf (bad) movsbq lea jmpq jmpq callq jmpq jmpq jmpq callq shrd add neg shr stc mov cmc jmpq shl bswap mov stc jmpq mov mov not not stos not mov jmpq cmc movzwl stc shrd mov jmpq jmpq jmpq jmpq callq jp lea movzbw bswap mov lea xchg jmpq jmpq jne cmc and sub xor mov sub add stc add mov stc jmpq jo je bswap movzbw jmpq jmpq add jmpq fidivr jge sbb nop (bad) (bad) jle,pt jl fwait icebp and mov or ljmp mov push sbb and stos sub pop clc pop fildll mov or push movabs (bad) (bad) lcall loop sbb (bad) mov mov int mov (bad) lcall sbb (bad) lcall mov adcl pop (bad) movsb and adc (bad) jno (bad) mov sub movabs (bad) int3 and sub jle (bad) int3 xchg or or cmp ds movsb ds (bad) adc xor (bad) cmpsl imul cmp sbb sub mov or flds fidivl clc xor mov mov movabs add jno xlat (bad) je clc sub bt clc jmpq jmpq jne stc bt clc test movb jmpq bt test repnz jmpq jb jmpq data16 (bad) or out (bad) sub add shl lea shld mov stc jmpq je jmpq jne add mov rcr rex.W icebp mov cmc or jmpq (bad) loop adc sbb sar or movsb (bad) mov std fcoms (bad) and retq push (bad) out fstpl in xchg adc cmc lret retq sbb imul (bad) (bad) lcall and (bad) and (bad) (bad) (bad) (bad) (bad) je add fs es repz mov add cld mov cmp (bad) (bad) (bad) icebp or cmc gs (bad) lcall fsubl rex.RB out pushq pop sbb retq imul cmp and cmp rex.WRB rex.XB add movabs cmp shrl (bad) mov pop adc pop nop (bad) (bad) (bad) int3 sbb jb mov pop (bad) add in push rex.WRB bt jmpq stc cmp jmpq jmpq jmpq jne neg or mov rcr stc cmp bt sub bts sbb sbb ror mov stc sub cmp pushq jmpq adc jmpq test sbb jmp cs movsbl fsts lods jge adc repz pop sub shll (bad) rex.WR pop in fiadd pop notl fsubs mull es (bad) (bad) lcall pushfq xchg rex.X or mov (bad) lahf xlat hlt sbb fisubrl sarl cmc jp pop retq xor pop or and mov (bad) (bad) mov mov loop mov jle rex.RB rex.R in retq outsb (bad) or and add mov es fbstp and adc test jmpq cmpsb (bad) jnp adc cmpsb mov mov sub sub sahf (bad) mov xlat rex.RX pop cmp and xor or cmp stc xor jmpq jmpq loopne xchg pushq mov sub mov scas sub cld es leaveq rex.WB sub (bad) xchg fisubl sub xchg cmp xor sub (bad) xor cmpsb mul add xchg cmc gs out push jne jae hlt je xlat retq stc sti or lcall psllq rex.WRB (bad) (bad) (bad) cmp (bad) rex.WB rex.RB and (bad) (bad) in lret adc cmp push jp cmp (bad) xor fisubr pushfq cwtl pop ds xchg xor stos pop mov xchg out int subl iret sbb xchg (bad) movabs outsb fimul cmp cmp sub sbb popfq jb push (bad) fcmove sub jmpq vpunpckhdq js mov cmpsl xor and xchg (bad) mov std fsubs cmpsb (bad) jl fbstp movabs rex.RX (bad) (bad) (bad) lcall push mov (bad) (bad) or std (bad) lcall rex.WRX (bad) xchg jbe popfq and or (bad) cmp fistpll mov mov movslq mov mov (bad) xor mov ds (bad) test (bad) sti (bad) lcall (bad) (bad) fsubl rex.WR jg fadds test and cmp add and xchg vandps pushq cld (bad) stos insl or and stos and (bad) in sbb pop retq and sub ss cmpsb ds movsb (bad) mov add outsl mov rex.X fistl ss outsb xchg clc jmpq jnp nop cli js mov rex.R rex.X mov mov clc (bad) mov mov mov jnp mov in sti add (bad) clc (bad) adcb (bad) gs sub push xchg xor (bad) outsb mov movsb (bad) sbb (bad) (bad) fild test xchg std (bad) (bad) (bad) rex.WX pop rex.RXB addr32 js add xor scas add cmp leaveq cmp rcll mov (bad) xor mov cmp xor adc insb lea xchg (bad) mov add mov adc (bad) pop or shll rex.W push je adc or (bad) shlb repz push rex.WRXB adc mov jmp mov rex.WRXB cmpsl mov (bad) xor pop out push xor push xchg ja gs cmp fmul (bad) (bad) pop mov sbb cmpsl (bad) sub mov push xchg es jg or jp mov movslq outsb not insb fwait lret ror outsl sahf ds int3 or (bad) xchg pushfq sbb cmp (bad) (bad) loope pushfq push movsb xorl rex.RB xchg jae jmpq rex.WRX icebp (bad) push jbe in cmp lcall cltd int pop sub (bad) (bad) ljmp (bad) jno rex.RXB or lods and mov mov std sbb xor cmp fidivrl sbb cwtl rex.WRX lods jp rex.X rex.WX sub or pop (bad) jp xchg in jmp test (bad) (bad) out mov add mov jno loope fistpll (bad) cwtl pop adc push pushfq sub cld decl sbb or jae jmpq jae btc bt rcr mov shld ror mov sbb mov jmpq mov lods jmpq stc cmp repnz jmpq test jmpq (bad) pop pushfq retq mov cld push pop xchg xchg add divl mov movabs (bad) lock adc lods mov sub (bad) test orl (bad) (bad) xchg mov rex.R cmp addl jno out (bad) in jae addr32 push pop pop cs loope jp (bad) push pop (bad) pop fucomp sbb mov or jmpq iret or pop (bad) lret mov mov loope sbb loop (bad) pop and (bad) mov fs pop test fdiv repnz cs jge mov xor pop push rex.WR rex.WXB in lea cmp cli cmp cmp pop test stos pop (bad) or jp mov pushq insb jbe mov ss cs movabs (bad) xchg adc mov repz mov pushq jno mov rex.X in sbb ror rex.WR (bad) add ja scas pop insl data16 in sbb adc imul fcompl (bad) or cmp add and repz movslq pop repz (bad) xor xchg mov outsl (bad) gs (bad) pop mov sub rex.WRXB (bad) cmp cmpl (bad) idivl push rex.WRB fwait xchg (bad) out xchg xchg cmp ja test sbb lret pop cmp idivb mov rorl push addl rex.RX fs es (bad) mov scas movabs push adc movabs push mov mov xchg xor and rex.WXB xor retq pop add pop imul lock and sbb or movabs sbb cmpsl pushq data16 out xor cltd jo movabs incl (bad) sbb out retq out (bad) pop vmwrite (bad) rex.WX and pushfq rex.WB and ficompl incl mov and iret jbe sub (bad) (bad) sbb sbb loopne jl (bad) imul lods xchg jbe movabs scas xchg mov je test ficomp movabs pop jge push xchg mov (bad) movslq cli (bad) jnp (bad) pop (bad) ds jrcxz out pop xor repz jl pop shr xlat and sub jrcxz xchg mov lahf and xor out sbbl cmpsb sub add xorl and mov (bad) pop jrcxz jmp nop sub sbbl in xchg sub outsb repnz lods (bad) pushfq mov or xor sahf stos movslq data16 ss pop (bad) iret xor and (bad) movabs ja and (bad) adc popfq and xchg sahf (bad) outsb imul test adc movabs (bad) (bad) mov pop xchg xchg xchg stos cmp pop (bad) sbb outsl xor rex.WRB scas lock jle sub je fcomps int3 add stos pop sub xchg fistl pop push rex.WB rex.RX and pop fs xchg addb pop fstpl pop mov mov int3 rex.RXB mov mov (bad) rex.R cli (bad) xor stc mov fcoms pop pop (bad) clc in movsl pop ficomp (bad) push shrl and pop jo sub pop lea adc cmpsl sahf ficomp rex.WB xchg (bad) loope rex.RX rex.RB xor pop sbb (bad) mov jno loope mov idivb mov addb rol outsl (bad) icebp pop outsb outsl jmpq cmp adc push mov xchg mov rolb pop xor xchg (bad) repz sub rex.WXB nop roll xchg xor add movslq callw (bad) cli sub mov popfq pop (bad) push sub pop (bad) mov movabs (bad) xchg jg in pop loope jrcxz pop (bad) repz mov rex.WRXB mov mov (bad) sahf pop push xchg mov jnp jno,pn (bad) inc mov xchg fistp push fwait lock hlt jmp sub rex.R gs ds pop fisubrl sub mov rcrl mov jae xor pop sbb test cli sbb (bad) fisttp jle jns pop pop movabs divb rex.WR adc or test rex.WRXB mov jmpq mov out syscall (bad) cmpsl insb notb add add add cltd out pop adcb imul xchg in pushq movabs out mov pop icebp mov rex.WXB (bad) xchg adcl (bad) sbbl incl data16 movabs jrcxz pop sub in pop (bad) adc add xor jne mov xchg imul jle sub (bad) fwait mov xchg imulb sub (bad) rcl jnp in mov (bad) rolb xor lahf pop (bad) fadds jne movabs loopne cmp rex.RXB pop movabs or xor sbb out sub and xchg adc mov hlt sub rex.B data16 xchg push pop outsb sub pop (bad) (bad) retq mov addl adc (bad) (bad) push pop sub and lret (bad) stos jbe jmp shlb cli (bad) and sbb rex.RX fs ds pop fistpll (bad) jmpq add mov scas pop cmp repnz shr pop es fwait xchg push mulb outsl pop sub and jbe int3 enterq in sub rex.WR rex.W or movsb pushq hlt push pop cmp mov rex.B add and (bad) mov xchg (bad) cmc out pop push adc enterq ficompl xor (bad) push adc (bad) sub lea cmpsb sub sbb out jbe sub jo or (bad) (bad) rcrb (bad) je pop rex.R repz sbb cwtl cmpps jge or test (bad) rex.XB or rex.WRX js jns fs xchg rex.WX pop push sbb cmpsb ds cmpsb (bad) rex.XB sarl fbstp popfw pop sbb (bad) pop pop test sbb movabs adc cmp fs cs xchg add in jnp add and pop xchg test mov sub pop addl movabs sbb (bad) jmpq sub in cmp pop mov (bad) or and push rex.WXB rex.X rex leaveq pop cmp test pushq xchg add sbb outsb movabs icebp fstpl add fs push insb pop movslq fisubrl gs outsb xchg sbb and test fwait pushfq rex.B ds stos (bad) rex.WB pop sub (bad) or jbe imul rex.R (bad) jno movabs mov pop loop outsb in jb jnp pop scas lods sub rex.WRX in (bad) rex.WB sbb (bad) add cs loop (bad) rex.XB nop (bad) xchg out xchg sbb (bad) fbld xor movslq push lret test mov add insb stos jg jle and mov ss lea sbb (bad) pop (bad) cmc (bad) jbe je cmp js mov movabs jmp pop cwtl xor (bad) in xorb rex.RB jrcxz cmp (bad) pop mov repnz cltd out pop sub add rex.RXB add cmp in sub movslq rex.WRX decb add insl pop insb popfq out xchg callq icebp adc rex.WR fisubr jg add outsl lods stos (bad) movslq (bad) adc xchg xor push xchg (bad) jrcxz,pn jp rex.XB mov fsubr (bad) fs or xor adc add rex.B pop or (bad) fisubl (bad) mov sarb jmpq xor (bad) jbe add mov in movabs jle jno (bad) (bad) xchg (bad) mov pop data16 subb vpmuludq xchg xchg mov rex enterq and rex.XB nop adc sbb rex.RX out adc pop movabs rex.RX cmp hlt in mov (bad) mov add (bad) xchg sbbl xchg push sub pop (bad) clc ja (bad) jno scas xchg and lahf outsl rex.X (bad) pop shll loopne es rex.W jrcxz (bad) data16 mov out (bad) data16 (bad) and adc rcrb movsb je lods out loopne,pt cwtl (bad) ja (bad) loop gs fsubrp movabs jg outsb (bad) mov (bad) sahf jo jne movabs (bad) add int3 lahf data16 jle (bad) lahf in lahf and retq sub and fidiv shrb or mov pop mov jns loope test (bad) fisttp (bad) je (bad) jno sbbl mov cmp pop add sahf (bad) lahf es or xchg sub (bad) mov fnstenv shrl jle outsb jo out (bad) (bad) shlb xchg sahf jbe fistpll in sub movabs pop loope rex.WR rex.RB cmp jns stc (bad) nop (bad) (bad) fisub rorb test fadds (bad) jb (bad) mov mov outsb xchg mov outsb or outsb insl lock xlat ss out adc rex.RX xorb add icebp rex shrb adc loope jo (bad) clc out in jg adc movslq mov mov add mov pushq js fisub imul nop (bad) sub or pop rorl xor in fs addr32 loop movabs and movabs rex.WRX movabs xor sbb cld cmpsl (bad) or movsl (bad) pop lock in cmp mov es es movabs int3 stc xchg (bad) imul sub (bad) pop pop xlat popfq movabs orb icebp out lahf mov adc (bad) (bad) jns (bad) mov xchg pushq mov loopne (bad) mov test cmpsb jns movsl rex.WRXB or out and in sarl add mov pushq sub jle fisub mov popfq xorl cs xchg (bad) movabs or out lock iret enterq cmpsl clc or (bad) pushq jg sub insb pop leaveq gs pop rex.XB cmpsb pop xchg es fyl2x mov and je out leaveq (bad) (bad) mov test xor xchg insb cmp add adc pop (bad) xor (bad) gs cmp adc sarb ds jg rex.WRX out test mov cli loopne rex.B mov lock setbe mov jle out (bad) repz add fsubrp (bad) (bad) pop (bad) iret mov add xchg add (bad) xchg add leaveq mov or loope xor retq test adc imul sarb enterq add mov adc sarb xchg add rex.R cs lods loopne add fidivr (bad) mov add ja iret pushq callq sarl (bad) mov and mov mov xor in xor add xor (bad) leaveq sub rex.X lahf xlat (bad) adc hlt outsl scas jns add loopne imul xorl movsb imul add in out movl mov rex.RX test sub gs push push movslq cs lock loope out rex.WRB add icebp shrl retq mov int lods iret rex.WX xor (bad) (bad) jo add stos adcl movabs (bad) or stos rex.WRXB (bad) in cmpsl sbb loope in (bad) rex.WR adc enterq adc jmpq mov cmpsl rex.X loopne (bad) mov repz sub xlat (bad) xor xchg mov push (bad) push in sahf mov gs pop rorl movsl jae (bad) (bad) xor (bad) nop (bad) in adc add repnz push repnz and icebp push iret cmpl (bad) repnz mov test (bad) lea es hlt (bad) mov mov loope mov cs hlt (bad) lea (bad) cld shl mov mov orl add adc imul movabs xchg incl sub f2xm1 mov jmpq (bad) jo jg jg mov or movabs fs (bad) (bad) mov fiadd out jrcxz (bad) out rcrb cwtl ja movabs ds test (bad) (bad) movsb ds icebp rex.WRX movsb jge cwtl push loope cwtl pop out jne addr32 gs rex.RX rcrb rex.RB (bad) test (bad) (bad) enterq jo (bad) (bad) xchg sahf add adc (bad) mov adc lock lock rolb icebp rex.B scas cwtl and iret outsb cltd outsb (bad) xchg mov cltd scas cli leaveq sub xchg mov sbb xchg and (bad) loopne shrb hlt addb jmpq pushq jmpq jb incb mov (bad) fistp js xchg sub sbbl sub lahf out lea leaveq mov sahf jne (bad) and add mov movslq add rorb xchg lock (bad) pop (bad) fcom mov pushq icebp cmp (bad) rcl fmuls pushq decl addr32 add scas sahf jbe clc movabs and nop pushq movabs mov mov and xchg mov (bad) (bad) (bad) ficomp out idiv (bad) (bad) (bad) (bad) pop es rex.WRX pop pop outsl ja xchg scas mov (bad) iret xlat fistp out idiv (bad) movhps pop (bad) (bad) (bad) (bad) rex.RXB rex.WRXB (bad) pop pushq nop cwtl movabs loopne callq adc and xor rex rex.W pop (bad) pop imul movabs loope jmpq adc and xor rex.B rex.WB pop fs iret movabs rex.RXB push add rex.RX cmc adc lret (bad) (bad) cmc fimull loop (bad) sub jne outsb (bad) cwtl or mov fxch loope mov add fdivs jno rex.XB rol sbb jo xchg (bad) push (bad) shll adc icebp icebp mov sub sbbb (bad) loope ja jo rex.WRXB movabs adc sub out adc (bad) sbb sbbb add test fmuls jns lock rex.WRX leaveq pop rol cltd mov callq mov pop jno or lahf test cmpsl (bad) lahf cmp int mov insl subl jnp mov (bad) ficomp sbb lret sbb add fsubl movabs scas lahf sub sub loopne rex.WRX repnz rex.W stc or movsb rex.WRX fwait lahf insb cmp cmpsl nop sbb pushfq rcll adc jo movabs add movabs cmp (bad) adc (bad) iret lret push movslq movabs pushq fsubrl and push push shlb (bad) fimul scas add jg cwtl push pop cli fisubrl (bad) out xchg imul (bad) insb ja movabs (bad) in (bad) pop add adc and jmpq rex.B cmpsb (bad) scas rex.WRXB sahf xchg xlat cmpsb (bad) out mov scas rolb test imul (bad) cmpsl mov (bad) (bad) (bad) (bad) xchg out cmpsb adc (bad) rex.WRXB leaveq pop (bad) xchg mov scas (bad) test (bad) out (bad) mov jnp (bad) (bad) jp (bad) (bad) in (bad) pop jne or rex.WRX fisubr loope (bad) lahf out sbb test cli cmp sbb out pop clc movabs movsb loope addr32 xor sahf xor out movslq jrcxz fs rex.WXB repz es movabs movabs ds addr32 xchg (bad) mov (bad) mov outsl (bad) jg pop ds sahf clc rex ja (bad) (bad) movsb sahf fldl rex.R rex.RB test (bad) add sahf ja (bad) movsl movsb test and add cwtl in (bad) (bad) movsb movsb test pminsw fs jrcxz retq test rex.X movabs movabs gs out movsb movslq jmp and in out movabs and (bad) ds rcrb movabs pop (bad) ja (bad) out movsb movslq mov (bad) fidiv gs fs (bad) pop (bad) pop outsb cmc lahf (bad) rex.WRB std movabs cmpsl pushq andl adc outsb rex.WRB (bad) pop sub sub rex.WRX flds lods outsb fisubrl movabs (bad) add fstpl add out push clc (bad) (bad) (bad) pushq jp (bad) mov mov (bad) (bad) repnz pop add adc and xor pop rex.X rex.WX pop movslq jnp orl mov fninit jmp sti pop add adc and xor pop rex.XB rex.WXB pop fs je pop test mov fsub in hlt cld pop add adc and xor pop rex.R rex.WR pop gs jne pop test mov pop vpmullw in cmc std pop add sub rex.WRB pop sub xchg test add or pop cmpsl (bad) sbb mov and test sbb (bad) in lods jmp or in icebp (bad) out test iret scas jne adc adc pushq pushq shl (bad) or (bad) jo jo loope enterq cmp and (bad) or pop outsl hlt iret push adc (bad) or cmpsb mov sbb cltd ror pop pop pop push rex.RXB popq (bad) in orl add mov sbb ficom pop pop movsb pop and fsts movabs xlat sahf xor rex.WRB cld movabs rol xor popfq movabs or repz rcll pop jno (bad) sub pop out sbbb jns sbb (bad) out or outsl insl leaveq mov cmp callq rex.X rex.WXB repnz jnp (bad) jne,pt in and fidiv adc repnz test or sub (bad) movsl pop mov repz or (bad) icebp cmc cltd jae pavgb (bad) jnp mov out scas jns scas setg leaveq flds sub fiadd fild (bad) std callq movsb xor cmpb scas jns inc fdivp (bad) fstl (bad) (bad) in (bad) movabs (bad) (bad) roll mov movslq lock int3 jno addr32 fisub mov cmpsl lahf loope xchg test xor (bad) idiv mov xor cltd ss out sub test sbb lret (bad) out add test fiadd rex.WRX mov icebp xchg push repnz xor cmpsb xchg movabs and cmp rex.WB movabs push sahf push cld (bad) rex.X xchg addr32 in loopne (bad) fimul (bad) (bad) or ficomp jrcxz rex.WXB jae movabs mov sub out pop mov lahf in mov sarl fisub test sbb jno cmp leaveq (bad) (bad) in rex.RXB in and cmpsl js cld add cltd cwtl cmpsb (bad) add xchg shlb subl lods imul or fcoml push (bad) (bad) sbbl fldlg2 (bad) loop fldenv data16 mov insl and jg xor js or sub movabs repz (bad) jo sbb pushfq xor fisubr addr32 repz add push push loop fbld sub xchg insl pop fs movsl jbe loop mov fisub fidiv xor movslq cltd fs movsl jrcxz loope ficomp jrcxz loopne andl rex.RX jrcxz rcr retq sahf ficom jb mov rex.W (bad) (bad) sbb fidiv ja stos pop mov (bad) fimul (bad) rcr js mov fiadd (bad) loopne,pt add mov (bad) (bad) clc loopne (bad) fisub (bad) movslq cmp jo in in and test nop loopl loopne and xor (bad) fisub enterq out lahf rex pushq es (bad) js addr32 or movsb (bad) js jecxz adc movslq nop rex.WRX add push (bad) (bad) retq movabs out cwtl jo in jmp movabs (bad) lret fisttp loopne repz mov mov (bad) push gs fisubr pop (bad) mov fisubr pop jle loopne lock in pop addr32 xor es mov pop repz cwtl and add movabs leaveq (bad) (bad) fidivr rex.WRX jle sahf (bad) lret mov fdivrs punpckhbw pop fcom cmpsl (bad) mov and shlb jg (bad) (bad) addr32 and gs and (bad) test rex.WRXB cmpsl (bad) pop ficompl (bad) nop imul xor lahf rcrb push adc movslq ja mov sahf andl jp (bad) jrcxz movslq stc sub (bad) lret movsb add xchg movabs loope (bad) out add outsl push and out movabs mov clc and loop outsl outsb js movsb jle retq add clc test out rex.RXB fisubr mov scas mov outsb imull jle (bad) outsl testb (bad) sub (bad) cmp outsl (bad) and out (bad) cmpsl rex.RX sbb lahf movsl test fild add add callq jmpq out (bad) (bad) xor xchg sub movsb sbb jmpq lahf pop xchg in outsb sbbl xor jle,pt ds rex (bad) out ds (bad) push clc add jle add xorl add jl data16 mov rex.WX rex.RXB cmp std xchg es (bad) sbb out out addr32 mov callq (bad) out pop pushq imul (bad) lock in divl test xchg push xchg lods cmp rorl rex.WX push xchg lods sub sub test (bad) test mov sub sub sub mov rex mov pushq jmpq (bad) jo repz (bad) (bad) (bad) in movslq jg (bad) insl xchg sti loop in push mov repz pushq xchg lea rex.RX je sbbl sbb ss adc and or (bad) clc fcomps test shlb mov jno iret lods scas cmp jmpq (bad) and cwtl xchg loop jne scas loope out mov rex.R (bad) sub cmp fnstcw xchg out fwait int jmpq fsts xchg jnp pushq sahf stos (bad) jae (bad) test sbb rex.X test sbb stc mov jno rex.WXB repnz pop mov insl movabs mov mov outsl cltd leaveq in andl xor in stc cmp rex.WRB (bad) (bad) xchg lock cmc xor sbb stos lea (bad) add or fidivrl vmwrite fidiv leaveq xor (bad) movabs xor cmpsl out leaveq popfq imul movabs mov nop imul lock and rex.WX rex.B lret rex.WRXB (bad) (bad) test add movslq mov and movsl rex.W jno cs sbb xchg xor (bad) es jo sbb xchg js push iret setns scas nop lea adcl (bad) add mov xchg pop fidiv outsl (bad) lahf or out icebp mov xchg jp rex.WRXB (bad) and pop rex.RXB rex.B movabs adc jnp jns (bad) mov xchg and (bad) fcoms add jnp pop loop cmpsl test loopnel ficomp (bad) jmpq jmp jg (bad) jrcxz add xor jp mov mov imul rex es test xor jo jo adc mov or popq (bad) stos pushfq (bad) (bad) xchg rex.XB mov rex.WRXB rex rex.W cld callq add test or cmp add xadd jl xor and sub (bad) xor rex.WX callq (bad) rex.RXB insl outsl movabs xor repnz pop mov or rex.W (bad) (bad) movabs movsb repnz mov sti push xor scas (bad) sub ja sub (bad) jns subl mov rex.WR retq xorl out fisttpll jle insb mov xor mov jrcxz jb nop lods rex.B pop xchg pop shr sbb jnp retq hlt sbb push ja mov sahf out mov cld xchg pop jg icebp retq mov (bad) ja (bad) rex.W and (bad) out out lahf and mov cmpsl scas xor mov xlat xor pushq icebp movabs (bad) xchg (bad) cltd cmp rclb and (bad) (bad) sti jo lock add push jrcxz test mov icebp pop stos adc (bad) push jl (bad) (bad) enterq out add movslq rex.WRX out movabs add (bad) (bad) sar cwtl iret cld sarb rex.W cmp test test es addr32 lret retq mov (bad) jne enterq push pop fmull (bad) (bad) jb push jae enterq insl lods fs and lea (bad) sbb sahf mov sbb jrcxz add (bad) outsb repnz mov pop pushq sbb (bad) add add scas test jns jb cltd xor clc add ljmp test mov (bad) nop fisttp rex.RXB es clc test (bad) jg loopne mov in jg cmp (bad) (bad) js test and jo movsl nop lret (bad) (bad) lock adc mov leaveq rex.WRXB lahf sub pop mov cmpsl ja movsb enterq sub xchg (bad) rolb (bad) lahf and mulb add test test sub out callq (bad) sbb jnp push out (bad) clc loop and and scas test out mov callq clc (bad) jo out mov sub and sbb xor mov sub rex.WRX insb pushfq sub pop mov mov fsubrl cmp mov xchg cmpsb rex.WXB pop or stos xor gs rex.WRB cs (bad) (bad) xchg or (bad) int mov pop pop repnz push xchg sub xchg jg and imul repz test enterq ds ds adc flds (bad) cltd cmp or outsb (bad) and (bad) std push rex.RXB movabs pushq xor retq lahf push nop add sarl add jae (bad) cmp xchg test repz jmp movslq lret jmpq movabs xchg rex.WRX movabs (bad) lods cs jrcxz lahf orb sahf jo cltd add sub or cmpsb and movabs xor fistpll adc jmpq lahf mov (bad) jae jmpq clc js test movq out rex.RB clc (bad) mul add out outsl add cmp fiadd rcll out pop fld mov xorl (bad) stc adc ror leaveq jmpq decl rex (bad) sub scas mov or rex.RB (bad) hlt insl xchg add rex.X push sti test sar iret movabs pop mov jo mov rex.WRXB xchg sbb fsubp (bad) add fwait push repz and rex.WRX lock ficompl mov mov lods mov and retq mov cmpl and cmpsb insl cltd xchg (bad) pop and lahf imul lods xor repnz test jmpq sub pop (bad) and shlb (bad) cmpsb (bad) cmpsl nop add icebp add imul (bad) test mov fadds mov icebp add test mov add (bad) xchg repz mov pushq fcoms movabs add stc mov pop insb movabs ja clc pushq add setns test add movabs fs subl jg shlb in retq ja (bad) loop movabs (bad) outsl retq ja (bad) movabs movslq cwtl loope pop push and movabs (bad) (bad) jmpq rcrb and (bad) gs ja (bad) (bad) movsb movabs cwtl and cwtl loopne fucomip sahf test jno (bad) vpunpcklwd fistpll sahf (bad) ja ss pop jns loopne pop jne cs movabs ja and test icebp and (bad) (bad) movabs movsb (bad) test sbb movsb jrcxz,pt cwtl and (bad) (bad) movsb lahf jne (bad) out loop,pt cwtl movabs gs and loop cwtl (bad) ja (bad) sahf test and and cwtl and (bad) (bad) test divb (bad) and (bad) rcrb movsl out test (bad) (bad) lahf rex.RX in retq ja (bad) movabs callq (bad) (bad) rex.WRXB and notb fwait jns movabs incl (bad) scas adc outsl (bad) sbbb jmp mov jno xchg mov xchg loope fild out incb test out xlat ds rcrb (bad) (bad) pop out out out mov jg andl pop rex.WRX pop out (bad) out (bad) jg movabs stos (bad) pop jno rex.RXB sub vxorps add data16 pop clc jo (bad) fisubr out cmp jno movabs (bad) ds fdivrp frstor out leaveq (bad) add retq and xchg xor adc fidiv (bad) (bad) ss lahf adc loope and ds out psrld loope ficomp ds or cmp push (bad) jmp loopne adc (bad) rcrl out fnsave cmc jne pop (bad) pop xchg fwait fs pop pushfq cmp callq icebp push or (bad) pop xchg or (bad) push add scas (bad) (bad) fnstsw scas jle ds pop rex.RX not movabs adc js (bad) sahf lock (bad) or mov movabs pop (bad) add xchg jg mov imul add rex.WX test test xchg imul fldcw (bad) mov repz sub movabs (bad) js push loop movsb pop and pop adc mov or cmc nop or loopne iret (bad) and retq jmp and xor (bad) jae (bad) pop icebp int push je pop test mov (bad) xor movabs fwait mov test (bad) fistl sbb (bad) (bad) pop (bad) fwait rcrb xor movabs xchg add test xchg fabs mov mov sbb xor cmpsl or out add movabs jno (bad) and or sub cmpsl rex.WX add or (bad) and cmpsb rex.WXB lock (bad) mov (bad) repz sub add out leaveq pop test xor movabs adc test pop rex.WRX and test pop (bad) (bad) rex.B movsl (bad) mov clc orl pop shrb pushq push (bad) movabs cmp (bad) xlat sub out out mov xor (bad) and rex.RX add pop push mov ss jmpq mov out callq test nop sahf test js rex test (bad) imul (bad) mov (bad) cltd movabs (bad) iret out jrcxz rolb jns scas cmp cmpl xchg cmpsb jno leaveq (bad) xor add test pop (bad) jno jge xor fmul rex iret rex sahf jg (bad) loope and pop mov mov sahf (bad) sbb rex.RXB mov xlat rex.X repnz mov add loopne lahf adc xchg (bad) mov jmpq retq jg rex.WRXB cmp imul in enterq scas and repnz cmpsl (bad) fnstsw clc jg sbb fsubrs std lods add jmp mov sti out rex.RB rex mov movabs jg add imul enterq cwtl or jo imul rex out imul pop retq jrcxz cmp xchg cmpsl xchg (bad) loop mov rex.WR sub loop jle mov lock pushq and jrcxz and sahf out jns addr32 ja adc rex.WRXB rex.WRXB movsl leaveq xor xor (bad) lahf (bad) and jns movabs jb add rex.WR push (bad) icebp (bad) jae rex.X rex.RXB and iret out jbe sub sbb test lods mov imul mov sub (bad) fsubr retq xchg imul xchg movabs xlat cmp add movabs xor (bad) sar movabs icebp addb ja out movsb jg mov (bad) or cwtl es sub rex.WX (bad) in and adc mov adc xchg test sbb rex.WRB cmp lock out (bad) sbbl sbbl retq (bad) int3 es cs jrcxz rex.RXB fs movabs xor stos lret (bad) xchg add hlt out add cltd lahf sahf cmpsl mov cmp je cmp test retq (bad) rex.W cmpsb repz ss (bad) rex.B test cmpsl clc rex.WRB rex.RX cmovno add mov adc (bad) mov cmp pop mov fs push mov pushq rex.WR addr32 test mov out jmpq lret mov iret outsb and jl and mov push icebp pop jns addr32 (bad) pushfq mov stos cmpsl data16 lock and movslq iret mov cmp subb retq (bad) rcl imul (bad) sub lods pop test or rex.WRB adc mov pavgb nop in jrcxz or jmpq mov or and or js test add mov (bad) lret pushfq and sti cmpsb xor push enterq loopne cmp (bad) mov testl fs jle mov leaveq mov and cmp fbld (bad) (bad) mov sbb lock push ja mov fldt (bad) stc jns or jg pop lea cwtl (bad) rex.RX lret (bad) cmpsl pop addr32 inc fbstp jno or mov lods negl mov insb clc (bad) pop jae sub js movabs or mov data16 callq fcom xor scas (bad) retq xor mov and leaveq test add (bad) pop cmp imul movabs mov adc xchg mov and adc loope (bad) jo jae pop pop xchg pushq repnz test adc push adc stc cmp mov mov nop cwtl repz hlt sbb fildll retq jns push and pop rex.X rol fdivrp test (bad) loopne (bad) mov mov pop (bad) test xchg test rex.R in mov test pop mov jae movsb jno fcomps cmp (bad) fsub cmpsb jmpq stos jns mov movslq jle push jrcxz mov (bad) (bad) or and mov in lock mov add (bad) (bad) loope (bad) jrcxz ficomp jmpq adc movslq rex.WRXB scas jle mov fsubr rex.R fidiv ja and cmp push (bad) rex.XB (bad) push push (bad) movabs fbstp lahf (bad) rol ja mov fucomip fisub sahf pop retq fimul cwtl loope pop lret fisub sahf lahf mov xchg (bad) (bad) (bad) and jrcxz rcrb (bad) (bad) movsb int3 test icebp mov clc and out lods (bad) movsl jno sub pop cmp clc out pop idivl add jne ror push int movslq ds pushq loopne out cwtl adcb js cld jg (bad) out cld rex.WRX cmp outsb jb outsb pushfq (bad) rex.RX es out incl fidivr lahf xchg pop lods jg cmp ds outsl mov add out es (bad) (bad) js movabs loop outsb rex.X in (bad) adc movslq rex.X sub mov jmpq and pop test mov (bad) sbb sahf mov (bad) fidivr (bad) or pop (bad) (bad) jo test (bad) (bad) or cs lods test xor (bad) out loopne lahf in (bad) loop xor (bad) loop rex.WX subl xlat (bad) in pushq shl (bad) subl cmp (bad) (bad) rex.WRX int3 retq (bad) cmpsb xchg push (bad) scas jbe movabs or cmp (bad) ljmp fucomip (bad) clc mov jo (bad) in rex.R rex jmpq es (bad) mov cmp movabs (bad) and test (bad) incb outsb rex.WX jne repnz cld sbb (bad) mov pop mov movabs jns (bad) sbb xor xchg xchg divl test mov (bad) loop movabs es imul (bad) jrcxz xorb out and add (bad) (bad) sbb icebp (bad) (bad) nop (bad) sahf pushq mov mov lahf push cmpsl cmpsl data16 sub lahf and (bad) js rex.B rex.RX rex add mov movabs loopel cwtl mov jne (bad) (bad) rex.X movl cmp cli cs cmpl mov callq jrcxz sahf imull out ds fisub mov clc lea fcomps (bad) (bad) (bad) and lahf (bad) test (bad) (bad) cmp jo loop (bad) incl addr32 mov cmpsl pop in retq movabs (bad) pushq out (bad) mov pushq out xchg (bad) mov (bad) mov je shr (bad) movsb add mov mov flds addl rex.B rex.RXB (bad) jne add clc loope adcb movslq sub fs nop movl ficomp sub or (bad) callq repz dec movabs xchg jb jmpq (bad) shr retq ficom (bad) add movabs movabs in movabs (bad) insw jne out xor sahf sarl mov outsl rex.WR fld pop pop out movsb xor mov scas xchg out xor add out xchg cmpsb lods (bad) movabs pushq cmpsb imul cvtpi2ps (bad) cmpsb add (bad) movabs xor sbb xchg mov cmp in (bad) (bad) cmp rex.B sub xchg lods (bad) int3 clc cld rex.B pushq xlat (bad) mov movabs pop addr32 mov rex.WXB addr32 int3 out leaveq cld (bad) jmpq shr (bad) rex.B rex.WR movsb pushq xlat (bad) mov test rcll mov jne,pn mov mov movabs scas shll mov pop test pushq pop outsl sub data16 jns scas test cmpsb sahf mov xlat out mov (bad) pushq fdivp xlat out mov (bad) movsb push mov xlat (bad) mov (bad) sahf rex.X out mov jne rex.WRX pop pushq mov xchg stos adc (bad) sti (bad) fldcw mov (bad) fidivr jne decw fcoms out rex.B rex.WR (bad) in int3 out xlat cmp sbbl movabs sub add mov int3 out xlat cmp sbbl movabs movabs (bad) add jle scas leaveq out (bad) pop cmpsl mov mov (bad) xor cmc iret cmp xchg jmpq out jmpq movsb or and pushq pop (bad) (bad) xor sahf callq cmc cmp test pop xlat cmp mov pop (bad) outsl pop (bad) and in pop mov (bad) and xor stc add in mov int mov out (bad) enterq jg rex.W mov mov jmp rex.XB rex.X rex.XB in rex.XB cmpsb cmp (bad) (bad) divb outsl mov (bad) test cmp adc (bad) sub cmc xlat (bad) mov (bad) and mov rolb pop pop xchg lahf cmpsb in rex.XB es fidivrl fldenv adc xchg pop pushq xchg hlt pop pushq sub cmc xlat (bad) mov icebp retq pop in adc fsts lahf cmpsb lret subl jge cmpsb xor pop or (bad) in movsb adc push mov xlat (bad) mov (bad) adc adc loop addr32 pop movslq movabs pop pushq sub cmc lahf pop fnstsw xchg cmpsl rex.WR outsl in (bad) movsb mov retq ja mov jnp add test jb cmp or lahf xor jne (bad) mov jge insl subb outsl in (bad) movsb add adc sub mov js icebp cld shrl adc mov mov adc rcr pop hlt rex.WB sub out mov stc movabs enterq rex.XB rex.RB rex cmp add movabs pop mov mov clc or xchg (bad) loopne rorb pop lret (bad) sub mov sbb add movabs or js xor (bad) jne mov rex rex.WRB shlb popfq pop jae add out cs out (bad) adc ja jb js pop push pop mov fistl cmpsb sub fld pop js out fbstp cwtl mov fcompp out xchg in (bad) push test test rex.WRXB sahf mov fistl (bad) xchg cmpsl rex.WX stc add (bad) xor fidivr cmpsl (bad) and adc or clc cmpsb mov push xchg sub in rex.WRB outsb cmp out lret (bad) mov mov repnz cmp in mov adc mov pushq rex.WRX idivl jo mov fistpll push sysret rex rex.WRB test and mov rex.WXB sbb cltd jrcxz es sub sub xchg adc cmpsl outsl (bad) ficom (bad) xchg rex.RB movabs sbb xchg in mov xchg rex.WRXB adc clc pushq (bad) add cld leaveq push lods and hlt xchg (bad) add xor (bad) (bad) shrb sbb and fsts repz pop scas (bad) push pushq imul jno lahf xchg sbb pop rex.WRB (bad) imul iret cmpsl pushq clc xchg xlat mov nop js pop mov in xchg cli (bad) (bad) or (bad) fwait add (bad) je cmpsb or sbb sub (bad) lock adc xchg clc movabs scas es pop jmpq jnp sarl add lods mov cmpl pop (bad) fimul rolb (bad) fisubr mov mov hlt sar data16 mov rex.R jae sub add iret sub xchg jns rex.WRXB sarb mov scas lods xor out insl sub sbb (bad) repnz fwait out cmpsl and movabs xchg out (bad) xor lods (bad) (bad) rex.B rex.XB pushq (bad) (bad) out push jo adc or mov andl movabs (bad) cmp (bad) rex.WRX cmpsl xchg mov movsb (bad) (bad) scas sub fidiv xor sbb lret push rex.WXB lock lahf cmp out pop movabs sbb ficom add data16 sbb movslq add (bad) lock fsubrp icebp mov sbb and repnz and pop mov cmp add cmpsb testl and add loopne incb lret loopne js jg or (bad) pop and (bad) and int or loopne (bad) (bad) icebp adc rex.WB popfq movslq sbb mov repnz shrl test mov jnp imul mov imul sub hlt mov (bad) pop xorb adc mov out imul add jrcxz (bad) out xchg ja or orps xchg outsb xlat stc jns rex.WRX stc lret sbb gs fistpll loop rex.WRX icebp rex.WRX cmp rex.RXB mov in std mov lahf cld (bad) jrcxz rex.WX sub stos (bad) shrb mov orl jo and pushq xor movsb fnsave out push stos in cmp (bad) lahf lret scas jp data16 cmp mov out rex.WRXB rex.RXB (bad) iret lea pop popq rex.RXB xor in in xor sbb cmp movsb int3 sub leaveq rorl sbb mov fisub sbb stc sbbb cli imul xor incl loope rex.WRXB sub rclb xchg (bad) adcl push push adc jne cs lahf (bad) add in out mov in sbb test cwtl lock mov cmp movabs int loope mov cs sub mov cmp or rex.B cmp out jge sahf ficoml add jmpq jb cwtl test (bad) (bad) pop xor lret movabs sub xor mov rex.WRX cld lahf and sub icebp rex.W rex.WRB callq cmpl push xor or (bad) (bad) (bad) xchg push push adc xchg sbb pushq (bad) (bad) ja insl sbb mov push rex.WX xlat enterq outsl loop fstl cmpsb rorl adc and iret test cmp xor cmpsl (bad) dec adc movabs xor test (bad) out jmpq or adc mov adc (bad) xor loop (bad) stos imul shll dec nop ja lods ds jne (bad) sti cli movsl (bad) cmc rcrl mov lods adc int3 fimul mov test in cmpsl jmp lock out (bad) cmpsl cmpsb sbb loopne xchg test (bad) sbb and movabs cmc or (bad) and add test (bad) mov clc nop (bad) jb mov ja xlat rolb and xchg scas (bad) and shrb (bad) (bad) add retq xchg xor mov rorb movabs xchg adc xor (bad) (bad) repnz cmp mov imul cmpsb hlt add test jg sub out leaveq (bad) sub addr32 addr32 mov mov mov sbbl (bad) ss cmpsl test fdiv mov pop (bad) (bad) (bad) rex.W (bad) mov push roll sub stos rex.RX (bad) movsl rex.RXB loopne lock (bad) pop adc adc mov cmpsb lahf cmpsl cmp lods in xor mov enterq mov cmp mov and (bad) fnop and and movabs sbb jbe scas rex.WRXB (bad) pop xchg mov jo rex.WR pop addr32 jrcxz sbb xor movsl cmp cmpsb lret (bad) xor add sbb mov movabs sbb ffreep fsubrp jmpq lods scas mov sbb or test add mov sbb fidiv xor jnp stos iret stc cmpl jns rex.WRX mov rolb push or (bad) gs hlt xchg xor test (bad) (bad) shlb (bad) mov push jae mov rorl rex.RXB js rcrb mov lea orl mov andl (bad) sbb rex.WRXB rex pop mov adc fdivl mov mov retq sar pushq repz xchg popfq mov or and adc rex shll rex.X adc add adc mov out adc scas jo sarb or stos movabs xor cmpsb hlt mov rex.WX (bad) mov incl push (bad) mov cld (bad) cmpsl or fcoms orb fnstcw movsl or xchg iret repz test xor adc sar pushq rex.WR cmp fldt (bad) adc rex.RB fdivrl loope jno loope jbe cmpsb scas and mov mov loopne es out scas test rex.WXB adc fwait shlb mov lock jl cwtl xor jl adc jns pop icebp subb loope and sbb cltd mov sbb sub ror xorps test fisubrl (bad) je pop js and mov jo push test or hlt jae out mov test fs scas adc xor and (bad) cli rorb (bad) jp out movabs (bad) notl rex.WRB push (bad) in pop sub (bad) jo jge (bad) divl shl imul (bad) cmpsb sar and loopne fcoml (bad) or imul cmc mov xlat xor repnz mov rex.R (bad) loopne orb and mov cmc outsl loop xor movabs sbb cli stos cwtl mov mov add fnsave outsb mov jo stos (bad) scas popfq push or or loop rex.WRB add mov jne or subl je clc jo sub add sahf sarl adc (bad) (bad) and clc sub out (bad) mull adc lret lock movabs iret (bad) rex.WRXB push or sbb clc mov cmp shrb (bad) jb mov fimul fcos (bad) (bad) and pushfq iret out pushq mov (bad) rex.RX mov jp loopne (bad) jbe lahf pop repnz rex.WR rex.XB mov or testb adc lret ss xor mov pop addr32 andl movsl fidivr rex.RXB lods (bad) mov cmp (bad) in lea jo push subl out xchg rex.WRB iret scas sub mov jb cmpl clc add cmp xor scas jae loop jae xchg sub cmp outsl xor (bad) rex.B cmc pushfq (bad) imul fmulp adc sbb (bad) lock movabs (bad) (bad) add mov sub (bad) mov lock fcoms insl (bad) rorb ja pop (bad) nop test or adc jne adc pop or callq (bad) jg pushq callq pop in (bad) repz callq decb xlat and add js lock jae (bad) (bad) cs cs scas lret (bad) xor test imul rorb jrcxz in xor rex.WXB fcomip pop repnz jp lret sarw (bad) jbe jle cwtl xchg data16 mov xchg cmpsb mov mov data16 (bad) sub rex.WRX xchg sbbb mov cwtl mov pop subl xchg retq stos (bad) out mov (bad) (bad) addb rex.R (bad) jg movabs cmpsb jo je outsl movabs stos lock hlt jg movabs stos mov mov scas movabs stos xor xor (bad) movabs stos nop out xchg jg movabs stos adc adc pushq adc adc or stos shr (bad) jg movabs stos push out push jg movabs stos pushq movabs stos callq movabs stos test lods jg movabs stos sub sub (bad) movabs stos mov mov movabs stos or or (bad) movabs stos enterq (bad) movabs stos rex.W rex.WR movabs in data16 cli outsl movsb out xor divl cmp andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl andl adcl scas (bad) outsl cmpsb pop andb loopne fistpll movabs stos and (bad) jg movabs stos add (bad) jg (bad) jbe jp cmpsb js jl ja jnp stos jge xor jae (bad) xchg adc (bad) cmpsb mov (bad) out outsl scas subb stos (bad) out (bad) jg movabs outsb (bad) outsl cmpsb movb mov movabs rex.X xchg mov out sahf (bad) cmpsb ds (bad) mov mov (bad) fisubrl rorb (bad) jbe stos (bad) ds rcrb cs movsb ss cwtl ds rex.RX movsb (bad) out cmpsl add (bad) out out test icebp decb (bad) movsb (bad) sub sub pop (bad) fcomps fs add mov movabs retq (bad) mov (bad) fbld and adc movslq test decb mov mov (bad) imul add rex.RXB rex.B pushq roll mov mov push sub or idiv gs xor cmpl jg cmpsb add out (bad) jg movabs stos mov mull clc cmpsb jns stc (bad) jp jnp jl or ficomp loope hlt mov jg pop (bad) (bad) icebp add out fcompl insb mov and enterq in pop orl (bad) rex rex.WRX (bad) rex.RB test out or mov addb sub in jrcxz movabs pop mov out fldcw cwtl (bad) rex.WRX sub (bad) outsb (bad) nop jle jno cmpsb in repz (bad) lock fidivr clc adc outsb rex.WRX jl add sub out fsubp (bad) test cmpsl jle enterq fiadd xchg sbb xor cmpsb sub rex.WRXB (bad) fiaddl jns lods jnp adcl andl sub or (bad) pop sbb rex.B push xchg (bad) and loop ficomp fs pop jrcxz movabs rex.WB add cs sub pop add adc rcrl movabs lods mov (bad) sub mov rex.RXB xor lret (bad) (bad) push pop fisubr or (bad) jmpq jbe cwtl add pop mov mov xor and jo pop lods cmp sub and out or mov (bad) adc sub mov (bad) (bad) (bad) push callq (bad) imul add test pop adc or (bad) mov and outsb lahf sahf movabs lods mov (bad) pop rex.B out movabs xchg adc pop pushq cmp rex.XB pop hlt and push mov pop push or mov testl mulb ljmp cmpsb adc pop and insl cmp mov (bad) pop rex.RXB sahf sbb sub xchg add imul jp int mov ss add (bad) pop or loopne sbb mov push mov rex.RB rex.RX rex.WR (bad) xor (bad) std (bad) cld retq add and jbe (bad) add jnp pop fistpll add mov fisttp and test sbbl adc mov test sar nop movabs (bad) jle pop lea negl scas mov lods rex.B rex.WR jmpq outsb xchg fisub push xchg pop mov movabs xchg sub imul push and jrcxz add sti sub (bad) pop iret (bad) rex rex.WXB rcrl pop jp int sti (bad) pop xor hlt jmp (bad) cwtl (bad) or fistpl pop rex.WX (bad) cmp pop jp rex.R out mov jge (bad) (bad) addl (bad) movabs pop cmpsb cli mov jmp xchg rex.WB sahf (bad) movabs rex.W pop mov xadd pop popfq pop mov push gs cld stos xor xor (bad) mov rex.WR fstps movabs or jrcxz movsl jnp test pop in imul pop fsubr cltd cmp rex.XB rex.WR push mov mov (bad) and ss fistl (bad) xor jl jmp or shl sub nop retq imul pcmpeqw mov cmp (bad) pop outsb outsl xlat popq xor xor mov jle sti rex fwait pop sbb pop out in mov rex.RX cmpl (bad) mov scas cli xchg leaveq outsb stos mov mov icebp negb fs pop pop or xor jne mov jmp (bad) adc repnz push or sbb data16 rex.B addr32 cmp add cld xchg (bad) jo pop in and jp xor int3 (bad) push pushq (bad) jbe adc and xor loope (bad) pop mov jbe xchg mov out push mov xchg test repnz (bad) pop and movslq hlt (bad) sbb add (bad) je jbe pop imul cwtl test rex.WRXB mov in roll sub xchg mov (bad) in and push clc pop rex.XB mov push pop fcompl cwtl lods pop or ds jmpq xor jnp add pmulhuw sbb cmpsl sbb add sub iret xor sti and pop movabs mov imul jl pop xchg (bad) lret pop je std jrcxz movabs cwtl mov loop pop movabs and push pop ja xlat movabs (bad) mov jbe mul jl fs push and loopne and (bad) jmpq flds shll jb out sub xchg (bad) pop negb xchg shr (bad) sub pop iret (bad) or mov fidivl (bad) rcr (bad) int pop cmp pushfq sbb adc cmp cli (bad) (bad) int xchg movabs (bad) pop pop mov es xor cmpsl pop (bad) mov cmpsb sbb add rex.WRX incb pop jb lods pushfq xor insl scas imul (bad) xor incl sub cmpxchg lods cwtl xor mov (bad) xor (bad) push mov lods rex.WRX and sub insl pop fildll pop (bad) jp pop cmp jae leaveq clc jno fs and loop pop and (bad) mov pop stos rex.XB pop (bad) repnz pop and cmp repz in lock jg pop cmpsb (bad) outsb fisub outsb (bad) scas gs movsl out and rex and imul (bad) fisubl (bad) (bad) pop jnp (bad) fsubl push (bad) movabs cmp jnp fistpl sahf cmp xchg and in (bad) sti jrcxz movabs pop iret pop pop fistp jbe jns (bad) mov ficomp mov fildll gs lahf pop ja xlat movsb ss and loop and pushq mul insl sahf jge push (bad) testb and fs movsb jns (bad) movsl cmp fidivrl pop and out (bad) in movabs cmp lahf pop fisubrl in and imul mov sbb (bad) movabs and fsubl jmpq (bad) sub subb sahf callq (bad) pop sahf sbb jp movabs movsb outsb imul imulb jle rex.R pop and lahf pop pop pop (bad) pop movabs pop sub clc fnop movabs out movabs mul push (bad) fsts movsb adcb (bad) jb pop fidivl sti pop jne rcrb jo addr32 rex.R jle add (bad) stos pop sahf xor mov (bad) divps jae addr32 jb ficomp cmp (bad) sahf (bad) movslq jns fldenv xor jp movabs sub pop sbbl lahf pop jg sbbl pop lods rex.RX (bad) (bad) lahf sti fbld jo pop rex.WX cmp fistp (bad) (bad) rclb hlt setbe lahf rex.RX ja cmpsl push in cmp push (bad) mov mov (bad) stos pop (bad) incb nop mov add adc pop (bad) (bad) sahf out sti mov rcrb in int3 (bad) pop (bad) mov cmpsb (bad) loope scas ds (bad) js mov ds mov es and pop mov xor pop out xchg sbb rex.WXB enterq xchg (bad) cmp outsl pop xor nop mov push jge scas shlb in movsl xchg xor mov and cmpsb vdivsd xchg mov push sub loop pop add repz sub xchg orl (bad) jb mov jmpq scas sbb pop in roll (bad) leaveq rex.WRX in (bad) (bad) sahf xchg outsl add pop cmp imul nop jmpq andl mov or mov xor pop sbb sub pop out push add (bad) stc pop pop shll jbe add fimull pop gs (bad) mov callq hlt rex.X pop (bad) (bad) jae pop out test movsl cmpsb xchg adc pop jne adc (bad) cwtl or jmp movabs jle (bad) (bad) (bad) push data16 add xor fwait pop and outsb (bad) lock and push pop je sahf sbb xchg sahf pop cmp int3 fsubs or (bad) mov insb (bad) adc xlat (bad) fistp pop jp sbb or adc pop (bad) paddsb pushfq imul rex.RX rex.WRX movsl pop mov sub mov test rex.RXB movabs cltd (bad) in jbe or sub int3 mov mov pop pop adc xor pop negb xor gs rex.RX mov pop jmpq add testl sub pop cmp gs cli rclb insl pop xchg rex.R lea jmpq lret (bad) movslq pop loope mulb jbe jmp movsb jp jrcxz add xor rex.W pop cmp (bad) and fwait jnp (bad) pushq leaveq test pop cs jno out rcrb lahf jbe nop fadd mov sub imul pop cmp xchg rcrl mov pop or icebp (bad) fldenv (bad) movsl movabs jmp mov pop sub movslq (bad) (bad) (bad) push ss and jl pop xchg adc (bad) jbe fs jg in jbe adc addr32 outsl movsb cmp (bad) pop xchg stos popfq (bad) fisubr add insl or stos pop (bad) adc rorb xchg mov movabs test and mov retq pop cld out mov sbb jns rex.WR mov ffree xchg mov jnp int3 mov mov rex.RX cmp flds sahf pop movabs int sti and (bad) sub sub (bad) mov fwait pushq leaveq jo in xchg (bad) pop add and mov (bad) adc ficoml rex.RB jne psubb repz mov pushq jnp and xor imul rex.WXB xchg iret and pop gs rcrl fisubr sti pop (bad) sar out xchg xlat pop rex.RXB adc (bad) stc fwait movsb (bad) movabs mov xchg or jbe pop (bad) (bad) and jp cmp (bad) (bad) cwtl retq data16 out and js (bad) movntps sub pop rolb mov sub mulb sub jle insb cmpsl (bad) (bad) sub sbb xor xchg loope cmp fildl and jrcxz mov ds enterq rex.X cs push inc hlt gs pop data16 jl pop mov gs fisttp mov cmp hlt and push xchg callq vmovhpd rex.W retq nop pandn mov cmp test stos outsb sub nop push cmc fs (bad) jbe fldl rex.B (bad) rex.XB (bad) pop scas mov cld lods pop (bad) (bad) fs rex.WR xchg pop jnp fist pop insb mov (bad) (bad) rex.RXB scas jbe pop (bad) mov fs imul jl fsubl jle sub (bad) pop and pop (bad) mov out push repnz pop or test shrb pop xchg cli (bad) xor insb (bad) fnop pop imul popfq retq pop imul and xlat pop (bad) fldenv mov movsl pop mov stc xlat (bad) pop clc and rex.WRX cmp xor (bad) ficompl cmp jrcxz fwait push xchg (bad) pop and cmpsb pop jns (bad) pop int xor pop sub retq jrcxz pushq and (bad) jrcxz in cbtw cmp (bad) pop xchg (bad) loopne rex.X pop mov rex sub movabs test ja ds movslq pop mov iret lods fcmove (bad) jp jmp std jge test jb or rex.WRX jns add pop sti js mov lods mov (bad) pushq retq stos rex.R gs outsb movsl pop xchg movsb lods mov movslq sbb loopne movslq je mov pushq jae rex.RB and pop lret test (bad) xchg rex.B cmpsb xchg movsl movsb mov pop pand pop pop or xchg idivl in pop xchg cmp or jbe je add mov retq pop nop xlat pop (bad) fisubl js icebp (bad) mov rcpps lock ds sbb xor sub xor adc adc (bad) clc data16 addl xchg in lods add xchg test (bad) mulb (bad) (bad) rex.X sbb loope mov es pop lock shrb sub outsb (bad) cmp sub xchg imul pop xor or jbe rclb mov mov icebp rorl stc sbb je rex.RXB xlat mov pop sub movsb (bad) adc rex.X (bad) (bad) mov movslq rex.RXB rex rex.WXB xchg rex.WB (bad) jno adc mov or enterq rex.X cmc test roll pop iret cmpsb cmpsl rex.W xchg (bad) pop insl es out movabs rex.WRX in mov xchg vmovd jle,pt jno xchg xor (bad) (bad) fimul pushfq xchg sub rex.RX sub callq pushq ds pop sub (bad) sub mov cmp test loop nop jrcxz pop sbb scas (bad) sub (bad) fildl xchg loopne sbb out push and jge rex.WRXB movabs pop cwtl xchg fistpl cmp loope rex.WRB fsubrl insl and xchg je pop (bad) clc ficompl (bad) rex.WB adc int sahf cmp in pop add mov pop imul xor pop (bad) add adc jae outsb pop rcrl imul sbb lods pop jl (bad) sbb (bad) jbe test add and ror fistpll pop (bad) xor loop (bad) sarb pop mov xor loopne in shr pop push movsb cmp pop (bad) (bad) out loop and rex.B lods (bad) mov (bad) jb int sub push (bad) mov jl (bad) fs je xchg insl jmp jrcxz and sbb (bad) (bad) and xor (bad) pop test mov (bad) out movslq jne outsb (bad) movabs pop callw mov add addr32 int cmpsl data16 sbb (bad) (bad) xor xchg movabs pop sbb (bad) push mov (bad) (bad) and loopne stc xor icebp xor movabs movsl xchg rex.W sar insl repnz fidivrl (bad) mov pushfq (bad) jno mov adc cmp orb gs fwait pop repz (bad) rex.WR jle mov mov (bad) rex.XB (bad) lock outsb xor fist addl je adc mov rex.X sub lret add xchg cmp xchg pop cmpsl cmpl leaveq or or push jae xor loopne and (bad) (bad) pop xor (bad) and mov rex.W lock pop callq jmpq cmp ja xchg jno in pop cmc (bad) pop out (bad) test (bad) imul cld (bad) imul lret jnp rex.WRXB popfq outsb mov rex.WRXB mov (bad) push xchg movsb pop lahf rex.WRXB decb jg sub jnp (bad) lret fiaddl sub scas xchg add (bad) cwtl (bad) pop jmp sub lea rclb (bad) pop cmp lods int3 scas retq outsb push mov (bad) rex.W orl or (bad) rex.WRB pushfq jp rex.WRX add pop shrl test loope retq push (bad) xor pop cmpsl pop cmp pop cltd gs mov outsb xor pop (bad) mov adc js fcomps push fist pop rex.WRB push mov pop cmpsb jmp iret fisubrl rol movsb pop add scas in callq mov or test jrcxz sub rex.WRXB fcoms (bad) in (bad) push (bad) pop add sbb pop sbbl leaveq or mov mov (bad) jrcxz pop loopne pop or or adc stc in sbb cmp pop std icebp mov mov (bad) lret jno in lods incb outsb sbbb data16 stos pushq xchg ljmp (bad) ficoml mov rex.B mov in add pop fildll cld nop insl rex.RX in jmp sbb or (bad) xor test xchg movabs int pop loopne fcomip pop icebp pop xchg (bad) scas cltd test jge pop lahf pop rex.XB fisubrl (bad) rex.WRB sbb pop imul cmpl stos adc adc stos xchg ja,pt sbb sbb push (bad) sti rex.WR rex.WXB data16 callq loope (bad) pop jb data16 sbb xchg out and rex.XB xor rex.RX cs pop (bad) movsl push (bad) callq jnp pop rex.W test scas add mov lahf sarl pop or xor or (bad) outsl fs cld out iret xor (bad) pop (bad) (bad) notl xchg sub imul in andl addr32 outsl pushq pop (bad) (bad) add cld stc sub (bad) (bad) jo (bad) pop (bad) std ja fwait add xchg or and add xchg lcall or (bad) xchg push rex.R (bad) adc xorl in stos pop fisub adc (bad) xor (bad) callq je movabs rex.X add scas (bad) and jns hlt mov mov push rex.RXB xchg (bad) insl pop out adc pop js (bad) test mov sub fiaddl rex.X stos cwtl and in fistp xchg (bad) pop sahf or jp cmp fisttpl fnstcw (bad) fidivl cmp (bad) loop sarb gs jrcxz (bad) xchg in ficom (bad) lret sub (bad) notl push sbb jbe sub pop sub jbe stos faddl sub shlb mov mov push in (bad) sub mov mov jrcxz rex.W data16 cld lret cmpsb (bad) test xchg rcr sub (bad) movabs cmp rex.R movsb loopne pop jle add xchg (bad) in cld scas fadd mov std rex.B int (bad) xchg movsl (bad) push in pop xchg jo xor negl test and faddl pop or scas cli pop fcomps sub add push enterq rex (bad) shl out fisub sub outsb pushfq in fstps jmp mov (bad) rex.WR (bad) repnz orb imul test movb fs cmp orl xor cmpsl pop out movsl and iret sub mov push pushq jns mov fist in jge (bad) mov adc jl add pop (bad) jbe fstl loope lods or loope (bad) (bad) and (bad) fistpl push sbb stos xchg fisub pop out mov outsb and shrb (bad) pop fdecstp movabs mov add js jae rex.WB repnz or pop (bad) or clc jbe pop xchg (bad) xchg movabs cmp (bad) pushfq jae pop pop fcompl or add (bad) data16 cmp ds and in (bad) pop (bad) xor jl or rex.WB loope sub (bad) rex.RB (bad) (bad) lret and jnp sahf (bad) jge mov mov rex.RB lods repnz (bad) int movabs sub rex.WRX lock xchg fs adc xchg and ds adc pop add sub mov insb rex.WB es rex.RB pop mov stos cmp push (bad) pop adc xchg xor xor sub stos sub imul add xchg (bad) xchg test movabs xor loopne subl movslq rex.RX add jle fist adc xlat (bad) (bad) lods rex.WRXB xchg sub sbb xlat fs push mov int (bad) xchg adc or pop xor int3 (bad) (bad) and (bad) xor (bad) jbe es or in test or pop cwtl fs or and mov mov cli jle jne add test cmp in in in mov rex.WR scas sbb lock imull sub xchg push (bad) sti (bad) mov rex jmpq xchg push and xchg pop xchg addr32 sbb mov cmp ja and pop sub rex.RX callq sub pop cltd pop (bad) movsl xor rex.WXB push lahf pushq fstps stc rex.R rex.X in xchg mov sub xchg or fs and xchg andl (bad) (bad) adc repz push sub xor xchg fisub and movsl cltd sub cmp sbb pop (bad) sbb pop and lahf mov (bad) (bad) rex.WXB push pop mov rex.XB cmpsl pop mov jbe sbb (bad) imul sahf jg pop lret add in (bad) rex.W fimul pop push (bad) jns pop mov mov mov pop xor pop (bad) jo pop data16 (bad) movabs mov pop (bad) movsb sbbl scas cli loop jns pop cmp (bad) in sbb (bad) in (bad) sub xor movabs xchg jne insb leaveq xchg pushq (bad) pop mov jo and test fcmovu (bad) or pop mov stos enterq loope test pushq mov out or sbbl cld adc cltd rcrb (bad) jno mov fwait (bad) jo test rex.WRX movslq pop pop jmp mov rex.WXB jrcxz int3 mov mov out imul movsl pushq and mov cmc push pushfq pop retq fsub out xchg outsl stos (bad) rex.R in jge (bad) popfq gs sub in mov rex.WRX es loope xor xchg rex.WB pop loop adcl movabs (bad) test (bad) pop jnp movhps cmp rex.WB loope jne pop cmp adc jbe sbb stos scas xchg cmp and mov orl pop int3 and mov (bad) (bad) mov mov jl jbe mov addr32 test pop cwtl rex.R mov gs push pmulhw mov jo sub idiv pop sbbb rex.RXB pop xchg xor cmp (bad) (bad) jbe pop (bad) movabs pop (bad) jrcxz rex fistpl ja cmpsl or pop xor lahf (bad) fcomps loop jo and and sahf rorl (bad) ss xchg (bad) xchg pop fistp movsl rex.WB (bad) jbe sub (bad) std lock cwtl add stc nop pop (bad) and jbe pop push mov push test sub int out movabs movabs movslq pop (bad) xchg rex.RXB andb imul (bad) pop pushfq mov sub out or (bad) (bad) (bad) shrl scas mov sti loop loop (bad) xor repnz mov jmp xor add jne (bad) (bad) testl (bad) fdivrl cmp fwait xor jge sub (bad) data16 fsubl push lea pop add fsubs clc test test iret cmp in adc jb cmp sub movabs (bad) stos rex.WXB sbb (bad) (bad) ss rex.WRXB mov pushfq cmp jno lea jae (bad) add push popfq and xchg (bad) xchg xchg scas adc (bad) repz (bad) lret lahf (bad) mov sahf (bad) sub (bad) sbb xor jmpq (bad) out mov xchg test (bad) (bad) pushq sub pop hlt lea je mov mov push push retq jno fidivl or clc jnp or mov rex.WB sbb mov xor rcrb (bad) pop test pop clc jrcxz (bad) or adc mov jbe gs xor in scas xlat cmp push rex.RB loopne,pt outsb rex.WR fs loope mov (bad) jae sub (bad) (bad) jg fdivrl or pop xor pop pop and movabs xchg (bad) shl sbb in jns sti fs xchg rex pop sbb cld in push out fsubl fisubl jae push rex.RB in adc fmull pop movabs (bad) adc push xchg (bad) ficompl js pop adc xor pop (bad) xchg scas mov rex.RXB retq mov (bad) outsb rex.RB mov lret jmpq and test rex.RXB mov rex.WB mov sbb pop push (bad) lret cmpsb movsb mov xchg xchg (bad) test mov add jrcxz jle fwait rex.RX gs mov insl (bad) pop mov mov stos (bad) sarb xchg (bad) mov adc jo and loop mov pop mov out jbe,pn cld ja adc (bad) (bad) (bad) jmp outsl sbb test movslq je rex.WB sub pop push rcrb sti adc rex.W jno loop jmp (bad) pop lock out rcrb adc mov retq movsl jbe jbe add (bad) jo movsb mov cmpsb pop and xchg pop cmp cld add (bad) or rex.WRXB (bad) pop sbb movabs pop mov xchg (bad) mov xchg in lret or pop rex.WXB rex.WRXB shrl cmp xchg (bad) shlb sub push lods (bad) (bad) sbb (bad) (bad) pop nop (bad) ficomp mov in test xchg push pop (bad) cltd sbb or or callq adc gs cwtl cmp lock repz sbb jb xchg (bad) xor rex.WRB ds push push scas insl popfw mov (bad) rex.WB jl retq pop and stc jbe sub imul movabs (bad) jne rex.X imul std cmpsb rex.WRXB push or mov pop rex.B lahf js cmc fwait lret or add icebp outsl std jrcxz negl pop xchg ss xchg add sub test lahf (bad) xchg pushfq faddl xchg jne,pn adc cmp lock or xor stos jbe add (bad) sbb sbb and cmp mov ja or cmp adc cmp icebp push (bad) rex.X repz vmread jp jbe and mov outsl pop mov or fs pop ss sub pop loope pop movsl mov int pop mov and (bad) jns rex.R xchg enterq pop js add stos add (bad) lahf int3 xor jns jb shl loope (bad) movabs lods pop and or outsl and lea xchg xchg test mov jrcxz (bad) jns in in (bad) sub (bad) mov cmpsb xlat mov mov xchg push cmp (bad) andb ds stc pop xor addl shlb push pop stos mov cmp mov (bad) outsb movsl add (bad) (bad) push pop (bad) pop retq std xchg jmp insl pop xchg fistpll xchg (bad) clc enterq cmpsb repnz and sti adc in mov testb loope jbe rex.WX movabs mov fsubl jmpq mov ja (bad) outsl rex.WR imull rex.W xor rcrb fild pushq rex.RX lods ficoml rorb pop jl rex.WRXB xchg pop rex.WRX (bad) int lahf or loop rex.X (bad) xchg adc cmovns (bad) pop scas cmp cmc fnstsw jnp push (bad) cli pop (bad) in xor gs xor (bad) cmpsl stos sub jg out (bad) add jo cmp rcr js retq lock sti sbb and cli fist pushfq cltd xor in and (bad) sbb sub and pop pop and nop (bad) pop int adc rex.RXB jne test xor push pop xlat retq xchg test mov (bad) jrcxz out orl rex.WRX and (bad) stc pop xor outsl jrcxz add rex.WR outsb adc clc or cli push pop or and pushfq xorb add push ss mov neg push add (bad) mov sbb data16 and pop and adc fs movsb clc sub (bad) xor pop (bad) adc sbb add mov in xchg jge mov mov (bad) add movabs push test pop test (bad) (bad) cmpsl (bad) jno (bad) or pushfq mov mov (bad) (bad) andb gs add (bad) in iret lret mov retq ds pushq (bad) movabs loope mov add jno movl lods (bad) loope mov mov sbb jns fist or pop pop sbb mov pop sbb mov movsl jne pop mov movabs stos jno jbe test movsl test add and retq mov cmpsb pop sub xchg mov xlat test push or fmulp fnstsw js rex.RX jrcxz (bad) rex.WX repnz sub pop movsl cmp (bad) fdivr sbbb pop xchg fisubl lock pop sbb (bad) sbb jg pop (bad) add movabs repz (bad) insb (bad) rex.WRXB mov adc data16 mov (bad) jle mov jg mov negb test out cwtl xor and leavew and (bad) loopne xlat (bad) movslq jnp cmpb pop mov jns (bad) jp adc movslq fwait xor sub ffreep enterq loop stc adc and pop popfq sbb or je jl sbbl (bad) (bad) cld test and std mov or (bad) in jbe insl xchg iret cltd movslq pop rex.WB or mov lods retq ja and icebp jbe xor movslq and int3 jp sub (bad) (bad) (bad) pop rex.WX adc pop jmpq adcl (bad) pushq jb lods loope jrcxz xchg in insb gs pop cltd sbb adc repz retq push cmp orl mov (bad) (bad) icebp scas xchg jl sbbl jrcxz (bad) pop out imul (bad) rex.WB mov out sahf pushq popfq jge enterq addr32 in pop pushq mov pop movsb rclb push mov cmp fwait push in in pop jrcxz insl xchg (bad) icebp xor testb bnd jg pushfq pop (bad) jns pop (bad) mov and rex.WXB jo sbb loope sbbb adc mov cli jae push in pop out out pushfq rex.RX es rex.RX jrcxz push (bad) in mov pop clc rex.WRXB or frstor pop xchg or jmpq std (bad) xor fistl pop gs (bad) xchg rex.X fs pcmpeqd fcmovbe push push pop cmp add lret add mov xchg jle movabs test mov mov sti shrb rex.WB and cmc mov or cld cltd jno fmuls pop add jmpq or (bad) pushq xor adc rex.WB sahf jbe push xchg movabs add test scas rex.B sub fsubl scas pop mov pushq jae (bad) xor (bad) rcrb (bad) jo cmp gs cmpsb insl add and xor xor rex.RB cmc movabs test cmp pop xchg lret adc push mov (bad) push retq sub pop xor movabs icebp vpcmpgtb repnz pop xor adc jbe (bad) lret movabs jrcxz pop rex.WXB (bad) imul (bad) jb add jno lret xor pop lock ror pop mov nop repnz popfq fstps sarl mov (bad) pushq pop (bad) (bad) pop and iret (bad) adc cmp popfq pop nop lea mov lar cmp mov test data16 rex.X je (bad) cmp rcrl xchg jns rep push hlt or clc icebp cmp stc xchg insl (bad) jb enterq xor cmp shl nop data16 test loope andl movabs (bad) rex.W fistpll mov test xchg pop ja push out enterq je in sub rex.WRXB scas or stos or (bad) repnz jp rex.WX (bad) pop fcomp xorl sbb xchg test rex.R (bad) rex.X push cltd (bad) (bad) pop idivb add pop xchg add jns or jle outsb jmp sbb (bad) mov mov sbb add (bad) insb ds rex.WXB and fist js sbb mov mov popfq (bad) jbe pop movabs lods lret jb pop sahf pushq movabs and push jnp clc pop lods rcrb push xor test (bad) jbe fisttp mov add jg xor out sbb pop stos rex.RXB cwtl cmp cmp rex.W lea pop fbstp mov pop pop (bad) (bad) mov mov pushq loop pop in (bad) mov pop out lock (bad) jge cmp cmp test (bad) mov sbb test (bad) (bad) lret lahf jp mov loopne cmp movabs movslq xchg jbe loop (bad) pop pop in push xor adc fist movsb movsb mov shll out pop cmpsb in popfq fisubrl rex.W (bad) xchg add in xchg rclb pop pop addr32 push (bad) rex.WRXB pop and pop fist xchg fs out mov pop pop (bad) (bad) movabs jmpq and mov cmp mov int3 (bad) fsubs (bad) imul sub jbe xchg cwtl mov je (bad) lock pop or fidivrl jbe (bad) mov movsb js pop (bad) xchg or mov jge adc jrcxz out (bad) (bad) sub in rex.WRB (bad) rex.B cltd mov rcrb fisttp xchg cmp add add cqto xlat retq test retq cmp (bad) pop push mov js pop movsl mov mov pop jmpq fidivr (bad) mov mov in in ss (bad) sbb out sar pop movsb roll xchg gs jb pop (bad) (bad) ss fbld add rex.WRXB jp add rex.WR pop and jle mov movabs movabs fdivrl jp icebp jae pop in rex.RB jne (bad) out (bad) sub cld sbb jnp rclb mov xor rsqrtps in sbb xor imul in (bad) test shlb rex.X (bad) (bad) in cmpsb jrcxz scas (bad) (bad) (bad) xor pop lret stos cmc (bad) in (bad) popfq fldt pop push jg sub fucomp lods xchg cmpsl psrld rex.WXB fs (bad) vdivsd jo mov pop push stc jno mov or push cmp test adc ds sub cmp cld add xchg pop mov rorb test movabs pop and sub ds cwtl fsubs insl (bad) popfq and xchg xor sahf cmp mov push hlt (bad) js std insl rex mov pushq pop fildll (bad) xchg mov movsl pop addr32 lods sbbl add cmp xor sub jrcxz outsb mov (bad) (bad) jnp loop pop fwait iret stos rex.XB pushq jl je pop lahf pop xor cltd mov enterq pop mov jbe (bad) adc jbe rex.WB repz pop xor icebp push and mov adc addr32 pop mov jno sbbb jbe movabs pop pop pop jle movabs stos pop (bad) fucom loopne fistl rcll sbb (bad) pop sub test xchg add jrcxz movabs push insb mov (bad) insb pop data16 fild outsb hlt ds outsb pop xor pop (bad) and cmpb pushq jno pop (bad) mov mov fsubl cmc movsl pop je xor loope xchg (bad) (bad) movslq cltd pop mov (bad) xchg hlt xor rex.WRXB pop rorl push mov incb pop (bad) test add xchg insl adc sbb (bad) (bad) mov (bad) (bad) test movslq pop and retq mov (bad) pop rex.RX (bad) stos adc (bad) jbe jg pop jae andl out or mov xchg cmp mov in jb ja pop pop sub push push or adc sahf addr32 gs (bad) pop movsl adc jge (bad) in pop fwait sub scas pop enterq movabs jle xor push xor popfq ja jb rex jne stc (bad) fcompl xchg int3 cmpsl sub loop adc cmp pop cld sub sbb fwait (bad) xchg scas roll adc mov in test cltd pop loop jge (bad) sbb xchg rol push jbe movabs pop pop pop jge (bad) xchg lret (bad) pop fild (bad) in xor and adc cli xchg mov mov jbe add xchg cli (bad) (bad) (bad) pushfq lods pop loope sub shl xchg cmpsl push pop rcll xchg lods xchg push pop pop (bad) in or xchg loope (bad) test jnp xchg push add pop mov retq jmpq (bad) push negl cmp xlat frstor sub jbe (bad) cmpsb and jge pop (bad) retq (bad) test pop (bad) pop ss rex.B pop cmp imul xor sbb lods ja je cmp jl xchg pushq (bad) xchg add (bad) (bad) test rcll pop (bad) fwait pop or (bad) (bad) (bad) andb push movslq jae pop clc jbe movabs lods cli (bad) (bad) (bad) testb rex.X jmpq stc popfq imul rex.XB int3 (bad) adc clc icebp sbb movslq (bad) and sub and pop cli data16 push retq pushq rex.WRXB movslq mov jo mov leaveq sarl pop pop fsts jns in xor out (bad) stc pop rex.WXB xor outsb out pop adc sarl data16 stc xchg mov (bad) (bad) add out jmpq stc (bad) rex.WXB or xchg insb mov jbe hlt (bad) mov pop (bad) pop mov and cmp sbb pop sub jo loop pop movabs rex.X xchg es (bad) sub (bad) lods jl jmpq sbb push (bad) movsb cmc sub in mov test gs xor or out mov cmc and insl mov addr32 (bad) add adc push pop and lea outsl pop test or ss jmpq pop data16 (bad) mov adc jge fisubrl pop out movsb jo pop lock imul sbb pop mov mov xchg (bad) (bad) or loopne data16 fidivl movsl hlt pushfq push lock (bad) jns lods nop ja pop or out pop (bad) mov iret jle testl lcall pop fistl pop lock leaveq sti insl (bad) rex.WB cmp add insb callq hlt mov (bad) ds rex.X ss lahf adc pushq pop in and (bad) jo fldenv jmpq pop nop add jae ja jge mov rex.WR es sti loop test ja rex.WRXB fsubl xchg (bad) xor (bad) sbb insl shr (bad) ds ss pop rex.WB rex.W pop and repnz xchg push pop pop sub stc add je lret fisubr mov popfq xor (bad) (bad) and cli sbbl notb (bad) vmovmskps ss rex.RXB and jnp nop repnz loope (bad) pop data16 and icebp lahf jle push (bad) lea loope add xchg pop lods in cmpsb sbb (bad) in pop sub outsb pop and (bad) fsubr pushq mov fwait pop (bad) (bad) mov cmpsb pop movabs push sbb sbb (bad) stos pop xor jns xchg xor (bad) ficomp test push pop sahf (bad) rcrl add (bad) lock movabs cmp (bad) rex cmp jo pushq xor fs xor rex.WRB sub rex.R fwait xchg ds jns (bad) xlat cmpb pop (bad) mov pop movsl out pop jmpq pop push retq rex.WX lret jp rex.RX mov rex.WB insb cmp push (bad) (bad) rex.X pop mov and sti xchg pop xchg rex.RX rex.R jrcxz popfq add jne push (bad) pop sub rex.WR ror pop cmp push fmul pop je sbb (bad) pop sub jge pop jl imul jle mov rex.WXB sub cs fistp jns sbb xchg enterq in sub fnsave rex.WB and lret or pop and mov fstpl je rex.XB jno,pt jbe mov xchg pop cs (bad) repnz adc sbb xchg (bad) movq (bad) (bad) incl out insl (bad) out jmpq and fstpt push sahf mov cltd mov sbb mov in (bad) xchg push je mov stos lret and movsb pop test and fnstcw push adcl push lret rolb xchg (bad) mov test rex.WRXB (bad) xchg outsb add rex.WX xchg (bad) fsubl rex.RX jp cmc or xchg jl outsl hlt imul (bad) movabs rex.WXB pop rex.WRX pop sub jge shlb rorl adc sub out lahf test or pop pop adc push pop movslq callq mov loope ja pop sti ss xchg mov int fisttpll sahf out fbld mov (bad) jge (bad) jrcxz sti and loop mov (bad) jne push movslq mull cmovnp xor xchg movabs iret int pop xchg mov pop pop rcl push add pushq pop pop jrcxz rex.RB add fbld mov pop in mov (bad) pushfq (bad) lods xchg rex mov xchg in pop retq fdivl pop ja mov pop fs pushq jmpq je push sbbb sub sbb jbe pop rex.W imul lods es pop (bad) (bad) (bad) movabs mov xor movsl pop and sbb (bad) (bad) and pop rex.RXB fsubs rolb cmp int3 mov fsubrp sub outsl loope pop outsb (bad) jrcxz sbb sbb (bad) movabs or (bad) pop outsl xor rex.WR pop mov test push adc data16 sbb shll gs shll (bad) pop add andl mov mov rex.WX int (bad) mov mul pop sbb cmp (bad) retq push and cmp gs add (bad) scas psubw (bad) xor (bad) adc pop sbb outsl cmp stos es or pop (bad) rex.WRX pop xchg rex.WB rex.R sub cld pop adc repz jns add sub (bad) rex.WRXB (bad) sbb adc xor (bad) outsb in sbb mov mov push mov retq (bad) out jbe lret movslq pop mov fs pop test xchg repz add pop adc (bad) rex rex.RB pushq fbstp (bad) outsb cmp (bad) repnz ja jbe cmp rex.WRB rex.WRXB in fistpl or and push movabs fmuls pop adc mov gs rex.RX cwtl pop or lods rcrl gs mov lods push (bad) loop (bad) subl adc lahf adc xor and (bad) fldcw movabs mov sub mov icebp (bad) push xchg sbb push (bad) rex.XB (bad) xchg (bad) repnz and insb (bad) (bad) adc fistpl (bad) pop adc addr32 (bad) lods (bad) mov rex.R push (bad) clc fmull adc movslq (bad) (bad) cmp lods (bad) jg insl (bad) mov test (bad) popfq or and js movsb adc cld gs pop jrcxz push cwtl pop rex.WR scas adc movabs rex.RB leaveq xor rex.XB cmpsl pop mov sub xor pop clc scas (bad) mov (bad) stos movabs (bad) xchg sarl std negl (bad) xchg sub pop jl mov subl (bad) pop sbb cli xor pop rex.W rex.R rex.WR rex.WRXB (bad) pop rex.X (bad) cmp pop mov (bad) imul lahf imul jg fcompl xor movabs movabs rex.WRX lock fs pushfq cs mov lods push mov (bad) iret loope std rex.RB rex.XB pop rex.WB (bad) pop cltd (bad) lret imul (bad) mov sub pop add xchg test push sbb (bad) xor pop mov xchg adc or and pop fildll sub std rex.R and xor jns stos rex.WB sub jmp mov pushfq (bad) mov clc rex.RXB and movabs retq data16 mov and mov pushq (bad) (bad) cwtl (bad) loope (bad) in sbb pushfq data16 xor add mov mov lret cwtl sub stos iret jbe sbb fiadd lret adc jrcxz movabs in adc stos lods mov jrcxz fwait add (bad) add pop jrcxz callq mov rcr shrd pop rcll pop in cmp sub add cmp lea mov xchg (bad) (bad) cmp (bad) insb push add jle (bad) incl fs lret addr32 pop lahf mov (bad) pushq (bad) and outsl movslq pop push lahf (bad) (bad) (bad) frstor (bad) jbe (bad) xbeginq jp pop data16 (bad) push cmpsb loopne add mov rex cmp adc xchg loope fisubr mov pop test jp loope repnz push rcr adc mov cmp rex.W rex ss jrcxz sub pop sahf pop (bad) scas and int stc sub imul (bad) xchg cmp loope sbb or (bad) mov jmpq jle xor adc pop (bad) lea test int3 sti jrcxz xchg pop jne adc xchg sub fimul (bad) ss xchg xchg rex.WRXB rex.WRB sbbb (bad) loopne xchg gs rex.B rex.WR jae rex.WX xor cli sub pop (bad) rex xor add mov retq pushq scas loope mov pop (bad) sbb clc out nop jnp pop pop xlat fs pop pop xchg (bad) jrcxz adc rex.WRX or pop ffree rex.WX movslq enterq mov outsb rex.WRXB xor mov jnp and rex.RB rex.WRX loopne mov movabs push jb sahf mov (bad) rex rex.WXB pop (bad) sub stc cmp je loopne push data16 data16 (bad) jge sbb cmp in or rex.WRB rex.RX lea pop jae sbb stos mov (bad) pop int3 and adc rex.RB lret fsub stos (bad) test pop pop loopne test jle stc and lods jg (bad) jno movabs pop mov cmp pop (bad) adc imul (bad) sub rex.W (bad) pushq and xor mov mov pop rolb test lretw outsb cwtl (bad) mov sub ficompl mov (bad) scas out pop iret mov pop sbb ds xor (bad) sub pop cmpsb rol (bad) sub insl imul push lock out cld cmpsb pop test retq fimul (bad) or add clc and pushq (bad) and pop decb sar and jae movabs sbb push pop movslq fimul loopne movsb jle xor (bad) cld es mov pop sahf push cmpsl pop sbb (bad) outsl cwtl rex.WRB sti xchg orl sub imul push movabs and sbb retq sti sarb push push xlat (bad) lock pop icebp test push jnp imul pop (bad) ficompl lock pop sbb xchg (bad) fistp and pop jns adc iret jp and (bad) rex.WX movabs cmp (bad) (bad) add addr32 jp je movslq (bad) xor mov mov (bad) mov jge fs (bad) pop cmc (bad) rcr in cmpsl mov add (bad) out cmp pop rex.X mov rex (bad) rex.WR pop push stc cmp pop pushq mov mov (bad) test jo pushq jg and ss and movabs mov callq stos xchg and pop (bad) push mov in js hlt sbb pop xchg rex.RXB std rex.WRXB in pop out (bad) sbb mov mov or ds pop push and pop scas movslq sub mov jns (bad) (bad) movabs sbb pop mov std pop test cmpsl outsb cmp xorl (bad) sub loope mov mov (bad) (bad) jae pop push and jns (bad) fidivrl fidivr pushfq jge (bad) pop and test movabs sahf xor rex.XB push cmpsb jp pop jbe rex.WB movslq mov jae mulps retq adc (bad) pop (bad) rex.WRXB xor and (bad) jle jbe jrcxz fwait mov sub pop rex.RB jno fs add fistpl rex fcompl sub sbb (bad) (bad) pop xor icebp movabs jbe fsubrs pop (bad) (bad) mov data16 outsb sbb pop rex.WB (bad) xchg cmp (bad) mov loope xchg rex.WRXB pop (bad) retq enterq mov (bad) imul cmp (bad) fs stc add jns mov mov notb ja not pushq fcompl pushfq mov (bad) test pop rex.WRXB (bad) pop sti rex.W imul sbb (bad) callq pop movabs shll ja rcrl push loop (bad) (bad) fistpl adc cmp (bad) push sbbl pop xchg add sti (bad) stos fs fwait rcrl mul movabs rex.XB (bad) push incl adc adc rex rex.WB rex.WR xchg (bad) sub (bad) in neg mov (bad) pop loopne or jmpq movabs mov xchg rex.XB xchg (bad) add (bad) rex.WX leaveq (bad) fcomps callq rol pop pop xchg pop add (bad) push push cmp adc in retq jrcxz rex.WRX (bad) or pop sbb mov adc rex (bad) sbb push (bad) scas rex.RXB ss testb in (bad) pop sub rex.WRXB (bad) sti (bad) fwait sub or cmp (bad) in mov (bad) pop cmp (bad) (bad) pop push fild pop sub fldl (bad) pop and mov movd mov movabs (bad) cmp fsubs fmull fwait rex.WXB rcrb jp negl (bad) (bad) adc pop push movsb or (bad) cmpsl movabs insb movabs adc sbb pop pushfq jp push and gs mov (bad) iret sub mov or jno fbstp pop mov adc mov (bad) (bad) and cmp in fnsave (bad) shlb jrcxz xorw pop lea outsl jno cmc mov push sub pop mov fstl and jb (bad) jae jge retq push and (bad) xchg mov jl,pt mov (bad) cld cwtl or (bad) sbb pop nop fcompl (bad) data16 xor adc (bad) and jnp rex.XB and cmpsb mov (bad) mov pop fs movabs insl repnz (bad) hlt xor (bad) out lret mov pop fidivl cmc jl rex.RXB rex.WRX sbb push out adc cmp insb jg add imul cmp mov add sbb sbb popfq lods mov xchg jae cmp pop sbb cltd (bad) pop loop xchg notl mov addl pop faddl add mov rex.WRXB or gs test sub jl hlt pushfq pop in cmc pop xchg fcoml retq lea sub rorb rex.WXB push xor addr32 sbb cli (bad) or jmpq xchg rex.W sub pop mov (bad) rex.WB mov sub rex.X (bad) (bad) (bad) pop pop xor (bad) xor sub pop out in (bad) mov xchg mov jo in lock data16 mov jl add jp (bad) mov sti jo cltd fbld or (bad) jne insb pop and pop test (bad) mov (bad) pop test sbb mov and rorl sbb (bad) jnp pop movabs or pop or (bad) and mov mov (bad) rolb and scas (bad) sub jrcxz pop pop cltd add stc rex sub (bad) (bad) outsl mov (bad) je cs clc fwait outsb cmp xchg (bad) (bad) fs rex.R retq insb xor mov mov mov jo icebp sbbl sar enterq std (bad) mov cs xchg fwait jp rex.X rex.WR pop movabs pop pop outsl mov int3 mov cmp jge pop sub jns push and mov rex xchg movslq movabs mov lock pop pop and (bad) (bad) ficompl callq (bad) je int3 repnz int mov out rex.WR sub cld addr32 loopne (bad) iret jle pop int (bad) pop out mov movabs mov js cmpb and rex.W fwait out add adc push retq jle lods jbe int3 sbb repz sti mov data16 fbld rex add cs cwtl iret rex.RXB or lret lea pop retq and (bad) jmp enterq add movsl rex.RX je pop mov shrl rex.WX data16 iret jp pop cmpsl (bad) (bad) adc data16 movsb lods mov rex.XB in mulb es mov pop mov xchg in (bad) pop (bad) int3 addb push cwtl and outsl rex.WX (bad) stc (bad) in pop rex jle pop (bad) xlat cmp and adc pop pushq (bad) xor scas pop pop fimull rol adc test loopne pop sub add stos (bad) movabs jo retq (bad) pop and rex.X add or movabs add flds movslq rex.X test sbb xchg in (bad) pop cmpsb sarb rex pop (bad) movslq callq stos sub adc pop in rex.B in (bad) (bad) pop pop pop subl and (bad) add pop jnp and shrb callq (bad) std movsl pop (bad) js mov pop (bad) fucomip sub movabs sbb shll pop fmull (bad) sahf out sub data16 rex.WXB lret pop fldcw in adc xlat (bad) mov (bad) repnz pop adc fnop fs addr32 rex.WX pop (bad) pop pop rex.RB sub cmc loope sub lock push loop retq xchg rex.XB imul callq je (bad) pushq mov xchg jrcxz xor mov pop add pop cld retq cmp (bad) adc sub or cmc test movsb add mulb movabs sbb (bad) (bad) (bad) in scas lods movslq callq pushq pop pop mov (bad) mov shlb (bad) (bad) adc gs and es xchg outsb jo roll jno (bad) or or sahf rcrb jrcxz (bad) jg sbb push loope pop sbb mov mov outsl fs (bad) pop cmpl movabs fs (bad) jno jp rol mov jg xlat in (bad) mov pop in mov sbb xor in pop rex sub (bad) imul lods or cmc insb loope rex.WRXB data16 mov pop jb outsl xchg scas sbb out fs insb add pop movslq outsl rex.WRX push add rex.RX pop pop cmp and add push (bad) add pop (bad) test sub xor loop push and int3 mov in adc gs je iret cmp fisubrl pop (bad) imul pop fcomps cmp push cmp sub jl fldenv push int (bad) (bad) iret loopne pop outsb pop fst outsl mov xor andb negl sbb data16 and jle (bad) movabs nop out pop (bad) xor sbb (bad) pop adc repnz scas (bad) rex.WR jl cld mov jns rex.X pop pop jae mov push test jo sbb nop loopne cli mov cld lods pop rex.RB (bad) hlt (bad) lret test mov jrcxz movabs or out cmpsl ja movsb mov pushq xchg andl (bad) fcompl movabs fnstsw adc fldt rex.W rex.WX xchg push mull push movslq mov (bad) fs xchg xchg rex.RX fnsave jbe (bad) out pop hlt sarb pop imul or (bad) sar push fist rex.WB pop subl mov and mov scas lea (bad) (bad) adc out pushfq rex.WRX fbld test pop mov xchg rex.W rex.RB xchg repz sbbb sub jae jmpq sbb push pop jg (bad) mul data16 pop jmpq pop loope (bad) (bad) and (bad) mov mov xor rex.XB jb pop (bad) pop rex.WRXB fs (bad) pop mov rex.WXB jle mov (bad) notl fs stc mov (bad) insl mov mov rex.WRXB or in (bad) in test retq lret xchg pop vmovaps es sub and pop rex.RX (bad) mov pop push xchg mov lret pop sub (bad) pop jns xor idivl (bad) testb (bad) pop movabs jg,pt (bad) jp lret in hlt sbb outsb jle imul (bad) and pop pop stc push (bad) add xor or cli add add movabs sbb ss fistp xor (bad) mov (bad) negb add lea and cmpsl pop enterq movabs (bad) test repz adc xchg xchg (bad) mov rex.WXB rex.WR sub sbb (bad) pop adc mov pop test cmp movslq pop lret (bad) inc prefetch or in xor rex.W fwait notl pushq mov mov (bad) in fisub retq and pop enterq adc and mov (bad) rex.WRXB jbe scas enterq pop cmp (bad) mov (bad) pop out xchg xchg rex cld fs rex.WRX adcb rcl movsl adc stc pop push (bad) sbb imul test pop in sbb pop adc lock adc xor fucomip pop fs test sahf rcrb jg push popfq pop sbb movabs lret je push adc cs (bad) rex.WRB (bad) cmp pop fistp in mov js jbe rex.RB jnp cli pop mov (bad) lea enterq and mov in lods xor rclb rex.X adc sub lods (bad) movabs (bad) or (bad) cmpsl loope callq pop jrcxz add xor imul xchg (bad) sub fs (bad) mov push icebp int js mov xor cmpsb sub (bad) in outsw jb or (bad) jnp and repnz xchg fs jmp pop outsl movabs subb push and push pop (bad) (bad) sub (bad) xor mov (bad) callq repz rex.XB repnz jp sub jge gs rex.B pop je movabs scas pop or retq (bad) (bad) cmp es in jg mov vunpckhps out mov pop icebp outsb xchg test or movslq fidivr (bad) (bad) retq pop mov (bad) repnz lods xchg pop lock scas mov xchg mov rex.RX negl iret cmpl jmpq not jnp (bad) xlat pop fs outsl (bad) mov cli in ficomp pop pop rex.XB mov add hlt (bad) jne ja ror out rex.WR pop retq int3 mov (bad) adc pop mov push pop pop mov (bad) jns mov addr32 out movabs pop (bad) sbb loope cmpsb pop js loop mov mov pop sbb add fbstp cltd push rex.X cwtl in out xor (bad) xchg jmpq adc mov pop pop sbb jmp outsb pop sub gs (bad) jae enterq pop mov xchg rclb pop or and and (bad) pushq xor loopne mov (bad) movabs mov stc rex.WRB cmpsl sub mov test sub pushq push pop out push pop clc scas rex.WRXB xchg sbb xor push jns int jrcxz ja push and xchg iret xchg cld pop roll out mov pop sbb (bad) je loope (bad) rex.WRX sahf clc pop xor adc in test rex.WRB pop sub (bad) sbb fst je loope pop mov pop sbb sub mov lock add vdivpd cmp ss iret pushfq pop fcoml jo mov test movsw mov rex.WX rex.WB stos (bad) pop jmpq cmpsl pushfq icebp pop (bad) (bad) jp out outsb fwait mulb sub nop mov jle (bad) sarl rex.WXB sub test callq pushq std loope (bad) sub lods cli retq es push fs mov pop rex.RX sbbl (bad) cmpsl push fbld or movabs (bad) icebp movslq sti in push test pop (bad) fnstsw add jge adc pop (bad) jnp xorl lret enterq inc pop pushfq cmp or rex.RXB mov test jae pop lods (bad) sub pop jmpq test pop in mov mov hlt and (bad) pop test mov cmpsb cmp mov cld rex.WRB or xchg cmp scas sub (bad) outsb int out movsl jbe cmpsl xchg xchg (bad) lock vdivsd in enterq mov nop (bad) gs int3 jnp (bad) pop fstpt mov sti lock (bad) nop add (bad) add mov (bad) adc pushq (bad) jge movabs scas (bad) jb pop or (bad) sub mov mov and callq sbb (bad) jbe fwait cld lods loopne and jbe (bad) (bad) rex.WXB movsb pushq add and (bad) xchg cmp clc fistpl and pop add (bad) movsl int movabs and jg push cmc jbe sub mov loopne sbb fistpll jp jrcxz enterq jbe loopne jle lods movslq ja pop pop mov jp pop mulb jne xchg pop rex.RXB (bad) stos rex.R fs cwtl mov mov adc fimul rex.WRX out rorb gs fsubl mov rex.WR rcrl mov pop loope pop mov (bad) fwait jo test pop rclb xchg push test pop repz rex.WXB fwait (bad) pop pop sahf sbb add pop mov nop decb (bad) xchg rol adc retq (bad) jne pop outsl iret (bad) sti sub xchg (bad) ficom pop sbb (bad) sub push cs mov rex.WRB or xchg mov pop cwtl adc test rcrl fsubrs lahf movabs pushq xlat adc lahf div and push (bad) lret loop pop or jne out xor mov mov rex.XB sub (bad) rcrb cld (bad) movslq addr32 mov pop pop sahf and push push ds xchg lea popfq rex.RB rex.RX and push sbb fbld pop lods movsb push and jle gs sahf mov std movabs ficom add (bad) movslq stc addr32 test pop xor idivl pop xor sbb (bad) sub outsb fdivrl stc fs cmpsl mov (bad) jrcxz test xchg movslq fcoml mov cmp pop sbb (bad) cmp mov out and (bad) and mov pushfq jb movabs sub jge je rex rclb sbb in imul nop jae adc movslq pushq jo pop movabs (bad) xor lahf sbb xchg and stos loope push fsts jne movsl je pop pop add adc jle iret negb push and mov cs out jb out rex.W sbb bt jge (bad) (bad) lret shlb rcl adc and pop jle (bad) push movabs mov (bad) xchg lods mov nop pop lock rex.WX rex.WXB lret pop mov fsubrl rex.RX gs insb mov or adc sbb pop pop rex.WRX (bad) movsb cmp movabs (bad) sbb std jrcxz scas out nop cmp (bad) outsb and mov pop (bad) stc sbb imul and lock sarl clc pop nop jl or ds (bad) sub hlt adc or push rex.WRXB repnz mov (bad) add mov mov pop (bad) in pop jmp jg or and sub lahf and or sbb adc pop (bad) xor push out outsl jle pop outsb sbb gs or add mov cli (bad) mov icebp fistp outsb sahf imul fcompl (bad) mov pop jb xchg push (bad) (bad) jno gs stos (bad) jns (bad) sbb addr32 out cmp push pop sub rex.WRXB pop enterq xor or idivb adc popfq pop cli imul and xor pop ja mov (bad) pop sahf mov fs (bad) xlat cmpsb (bad) rex.RXB rex.RX jmpq (bad) rex.WRB out sub movabs retq repnz sub xor vcomiss xchg rcrl pop ja mov data16 callq retq xor lods mov push cwtl (bad) or add pop repnz push rex.RX (bad) mov xor pop mov test gs mov sahf sbb in pop jno xor (bad) stc mov pop lret push xchg mov pop mov jrcxz ds rex.X rex.WR lods rex.WX std (bad) jge pop xchg in lret add pop (bad) retq imulb jbe rex.WB cmpsb popfq addr32 push scas rex.WRX fs movsb (bad) (bad) xor (bad) sub add pop xchg pop pop jle rolb pop addr32 scas xlat mov xor mov (bad) (bad) (bad) std (bad) loope add jno incl cmp (bad) in mov cs popfq xchg sbb sub jno pop jb sub (bad) mov fs rex.WXB sbb (bad) rex.X (bad) lods insl decl mov fcomip es xor (bad) hlt sub mov pop adc out sbb xchg cmp and (bad) (bad) xchg outsb rex.W pop jg (bad) jo rex.B (bad) push rex.XB mov lock pop rex.WRX incl xor es cli fmuls testb mov adc pushfq imul cmpxchg cmp xchg mov jo (bad) pop sarb cwtl (bad) mov pop std cld scas push mov loopne adc jge push pop jle rcrb pop sbb adc clc out rex.WRXB lock sub movsb (bad) data16 cmp jle jrcxz jbe mov xchg add (bad) rex.XB xchg sbb sub add sub push fwait (bad) frstor (bad) pushq pop (bad) iret fimull in insb xchg xchg pushfq cli (bad) fsts adc repnz pop movsb (bad) rex.RX rex.WXB add shlb (bad) loop test sbb pop (bad) rex.XB jbe mov mov movslq mov movsb icebp stc loope rex.B rex.R insl mov adc sahf or jg adc (bad) (bad) xchg int3 (bad) rex.WRX lods imul jnp movabs pop lock cmc (bad) pop adc pop insl xlat in sub mov rex.RB adc retq adc (bad) insl (bad) cmp cmpsl and fmull push in mov add rcrl movabs jl repnz pop loope jbe jae loop (bad) sub mov movslq lret movsl sub pop out rex.WX (bad) (bad) xchg (bad) cmp (bad) (bad) stc sub add movslq xchg or fcomps rorl movabs push loopne (bad) (bad) rex.X rex.W adc fs or movabs sub jrcxz (bad) outsl xchg pop test imul fldenv jmp adc outsb (bad) negl repz (bad) cmp xor sub xor push out fs lret (bad) repz add nop (bad) and (bad) fnstcw rex.X push xor xchg and mov (bad) lock xor (bad) jmpq xchg jns nop loopne stos add cmp ja test imul iret insl pop fldenv rex.WRXB je add mulb and adc rex.WRB loop rex.WRX js push loope mulb pop int3 (bad) (bad) (bad) (bad) or stos (bad) mov std jns lods (bad) fildll loopne (bad) xchg xor movslq pop jmp push movslq (bad) fcoms jbe loop mov fnstenv pop cwtl pop sbbl pop popfq movsb lret (bad) pop loope pop cmp pop xchg rex.W stos pop or pushq sahf test repz nop test sbb outsb (bad) cmp (bad) push out xchg ja rex.WX cs scas imul xchg out int3 fidivl or movabs rex.RX pop stos lock data16 jp xchg jmpq test mov mov pop and jae cmp sbb int movabs hlt adcl mov pop pop loopne (bad) enterq pop outsl add jrcxz (bad) and pop leaveq cs clc in add xchg mov rex.RB fwait pop rex.WX insl jbe xchg (bad) sub or and pop rex.XB jnp retq push push pop rex.WX (bad) mov (bad) cs cmp mov icebp rolb pop mov insl pop js mov (bad) add data16 rex.XB int3 ss push lret pop cmp (bad) jrcxz (bad) and (bad) pop cmc rex.RB rex.RX test callq (bad) movslq mov sbb pushq rex.WRX rex.WRX in hlt fadds out add (bad) xchg (bad) mov movl xor fdivrs test jmp jnp jle jmpq (bad) (bad) cld pop mov test mov xor rcrb mov sbb sub test out div cs (bad) rcrl push pop cmp (bad) in rex.WX pop movabs or lods loopne je enterq add subb rcr xchg rex.X rex.RB sub rex.WRX scas test xchg (bad) adc sarb push leaveq push mov mov and fwait (bad) (bad) retq pop push rex.WX rep jnp cmpsl rex.WRX ss (bad) (bad) mov sub insb or mov (bad) or jmp cmp jae insl (bad) and push cltd movabs add (bad) (bad) pushq mov lods pop jno sbb xor (bad) rex.RB (bad) popfq mov jno mov divl rex test repnz rex.RX test (bad) insb stc pop rex.WXB insl adc stc rex.WB mov test rex.B rex.RB pop adc rex.WR sbb pop rex.RXB negl pop ficoml cwtl xchg (bad) pop hlt adc lods pop pop out xchg (bad) movabs cltd adc or imul rex.R lret push cmpl (bad) cmp int3 mov stos pushfq pop (bad) enterq mov or pop testl jbe mov movabs lods pop (bad) xchg and pop (bad) xlat mov mov rcrb sahf mov out test xchg repz movsl (bad) movsb rex.WRX test stos fdivrl clc (bad) rex.XB sbb (bad) mov (bad) outsb (bad) (bad) jae or ja jrcxz xor mov rex.WB cltd ds pop push pushq (bad) (bad) jae (bad) test adc (bad) movsb adc (bad) fs xchg (bad) rex.WRB (bad) cmp and pcmpgtd xchg (bad) mov xchg xor cmpsb sbb cltd (bad) cli test add and (bad) rex.WXB popfq nop mov (bad) (bad) push setge or (bad) (bad) pop or (bad) mov movslq out pop retq addl lock pop (bad) (bad) xlat fsubrp (bad) mov pop adc or icebp mov push cmp and jl jne testl xchg or jo mov (bad) test sbb jge outsb mov movb mov xchg jge (bad) test push pop enterq fidiv mov rex.RXB rex.B mov rex.R sbbb fidivrl (bad) in and pushq xor pop mov pushq leaveq pop push callq (bad) (bad) fwait xor pushq (bad) mov fstpt (bad) jo cld jb add push or or push cs rex.WXB xchg push xor xor movabs cmp add (bad) imul imul addr32 (bad) incl movslq callq (bad) pop pop (bad) pop xchg movabs xchg int (bad) lret pop and mov lret jl (bad) sbb jmpq ss (bad) xchg sti std or imul mov (bad) jbe mov mov (bad) mov xchg icebp (bad) xchg cmp test cmpsb rex.WRX (bad) (bad) push lret adc xchg pop mov sahf rex.XB stos sbb adc rex.WRX jbe sarb or pop callq rex.X pop mov jns jbe pop movabs jmp xchg add sbb cmpsb (bad) rex.RXB sti data16 test lret test (bad) (bad) (bad) xor int3 xchg loop lock (bad) prefetch or (bad) stc xchg movabs test (bad) sbb outsb pop nop xchg push sub rex.RB jbe jb lods je and pop sbb add fwait cltd add lret pop mov sbb insl rcl lock rcrl cbtw mov (bad) cmp pop es sbb pop scas xor cld rex.RX xchg fs repz pop movabs pop outsl fdivs setp lea retq negl cmp (bad) jmp push xor fcomip pop mov movabs add rex.XB fwait imul (bad) int iret (bad) jnp (bad) xchg jl cltd pop push and es movabs xchg (bad) stos pop rex.WRX pop stos and movabs pushfq (bad) jrcxz mov (bad) in (bad) testl pop mov rcll or gs rex.WRB (bad) outsl mov (bad) (bad) xchg sbb add xor out rex.RXB rex.WRXB adc je,pt mov pop stos (bad) ficom pop mov pushq lret idivb sahf sub cs fcomi js movslq pop std xchg jrcxz fdivl pop cmpsl stc imul xor rex.W pushq mov and rex.RX negb (bad) data16 rex.WRXB lock shlb cmp xchg test mov mov (bad) mov es fs rex.RB sarb cmpsb jne je (bad) mov adc pop lods mov sub (bad) fisttp mov mov scas in xor sbb pop mov pop and movl sbb cmpsl adc pop popfq insl in push out test addb xor (bad) decb (bad) retq mov rcr or lock add rex.RXB cwtl (bad) add push xor pop (bad) (bad) not retq lcall jmpq mov mov shrb gs jne repz imul fdivrp (bad) pushq lods (bad) sbb xchg (bad) pop mov sub (bad) (bad) adc (bad) xor and pop fwait pushq int (bad) and data16 lret shll pop sub add pop pop mov and jle xchg mov xor rex.WX sbbl cli insl (bad) jb cltd pushq fs iret pop jno outsl (bad) in cmpsl mov pop cmc or mov roll shlb fidivr (bad) rex.WRB sub fdivs outsb xchg (bad) (bad) repz repnz pop (bad) mov and callw cld jle (bad) fs adc fldenv and repnz mov cmp and outsb sbb icebp pop jae movsl fmuls psubq mov (bad) pushq lret hlt pop rex.XB imull pop xchg cmp add imulb pop and sub mov xchg stos pop (bad) sub es cli push shl sub (bad) and pop fwait (bad) jle stc repnz in mov rclb pop pop sbb mov ja add xor pop pushq xchg mov pop fmulp not hlt out xor (bad) rex.XB push sbb pop (bad) and sbb jbe xor mov imul mov or pop pop (bad) enterq add pop add loopne inc pushq pop insb (bad) shll pop rex.WXB (bad) movabs push add rex.XB pushfq jbe andb stos decl jae jb (bad) pop or xor jp (bad) ja (bad) out xor movslq out and shl sub sbb ss clc jp loop lods add jb pop js imull (bad) (bad) pop out xchg adc adc leaveq sbb push fcomps push rex.WRX out setge imul pop pop add cld (bad) mov (bad) inc adc ja movsl (bad) sub xchg stc movabs (bad) test cmp fdivr hlt push push (bad) pop jno cwtl (bad) mov outsb xchg (bad) movabs mov (bad) std cmp enterq jno (bad) mov (bad) add mov mov mov (bad) jmp fimull cmc pop push ds cmp cmp nop xor loop rex cmpsb (bad) imul pop fwait sbbb ficompl cltd and es lods xor cmpsl or pop mov mov (bad) sbb je gs rex.X mov pushq push xor (bad) adc pop lea (bad) in jmp jp rex.WRXB cwtl cs cmp rex.WR test sub adc (bad) pop rex.RX (bad) scas scas mov (bad) jne movabs pop jnp mov (bad) movsl icebp and (bad) imul movslq lahf add jmpq (bad) push data16 xchg pop lods pop in xor jmp mov std (bad) xchg in rorl push lods loop movabs pop cmp callq movsb xor add sub jbe pop stos hlt mov lret retq rex.WRX add and rex.RXB lahf xor (bad) sbb lret (bad) lea mov popfq rex.WRX mov (bad) xchg imulb enterq loop cmpsb pop pushq push mov and rex.R and (bad) pop sarb bnd jg add js rex mov rex.W mov cld mov xor in rex.WRXB gs rex.RX cltd jno int pushq (bad) rex (bad) xor rex.WR xchg cwtl pop pop (bad) (bad) sub ja (bad) jne jb insb lods pop cmpsb loopne rex.X (bad) mov fsubrl xchg adc int movsl push or pop rex.WRB adc test cmp sbb xor cmpsl pop out xchg popfq out (bad) stc pop sbb andb (bad) (bad) pop pushfq cmp rex.WB rex.RXB mov sahf pop cmp imul (bad) xor lods loope (bad) mov (bad) pop es xor rex.RX mov clc (bad) jmpq push mov add insb jle rex.RB mov (bad) jbe rex.RX (bad) in xchg fldenv mov ds cmpsb (bad) rex.RB (bad) push lret (bad) xlat sbb (bad) popfq loopne rex.X (bad) mov shll rex.WRX pop push sbb pop xchg (bad) sbb adc rolb cmp xchg js fidiv pop callq rex (bad) pop mov testl mov and movabs cmp (bad) adc or sti lock xchg ds xor fs adc pop xchg rex.WRXB sub lea (bad) pop movslq enterq data16 rol insl push (bad) and rex.WRXB add idiv pop subb rex.R (bad) std lret rex.WR in (bad) shll push xchg xchg (bad) xchg movsb sub iret (bad) mov popfq ss mov (bad) (bad) fldt sub jle in xchg mov cwtl xchg retq sub rex.WRX or (bad) hlt rex.RX mov jge mul (bad) (bad) pop rdpmc mov mov pop rex.WRB movsb in (bad) push adcb adc xor lods mov pushfq rcrl jo pop (bad) mov (bad) pop or mov icebp jl iret add pop imul pop imul adc (bad) jb (bad) jrcxz pop sub rorl (bad) adc out test (bad) xchg pop jbe (bad) (bad) repnz or (bad) jo jl pop rex.RX rex.WX and xor xchg lea jbe fcoml push (bad) mov mov sbbl pop (bad) addl pop and mov out outsl add mov xchg (bad) cmp cmpsb andl repz loopne mull in adc stc cmp jrcxz add and retq mov js in xchg imul std jmp push enterq or sub or rex.RB pop cmp (bad) iret (bad) addr32 data16 jnp mov rex.RB test cmp test add rex.WX (bad) cltd (bad) (bad) push loop pop or icebp (bad) (bad) rex.WX sbb (bad) (bad) scas sarb (bad) adc jp (bad) pushq movslq fistp cli jne cmp fs (bad) pop add (bad) pop pushfq xchg out std test nop jle out stos cmp add in out sub pop adc mov xchg jg xchg pop (bad) sarb in sub sbb loop (bad) jbe (bad) pushq loope and or sahf mov (bad) addr32 cmp pop adc add xchg rex.RXB and mov fistpll xchg (bad) movsl jmp add (bad) push test mov mov pop (bad) jbe sbb pop add (bad) stos xor movabs rex.B jle xor stos stos fisubr (bad) mov movabs xchg hlt sub outsl (bad) ficomp pushq pop adc pop (bad) ja test xor mov pop addr32 fsubr jp xchg je push rex.RB (bad) add pop (bad) rex.X ds lock jle pop scas mov ss mov sbb add add xchg sahf cmp stc fbld imul rcrb push (bad) lahf cmp rex.WB jns xchg sub rcrb rex adc in rclb lret cltd or (bad) pop cmova rex.WRB rex.WX int3 xchg and sbb (bad) rex.RX cmp pushfq (bad) (bad) mov mov pop rex.WXB rex.XB scas and (bad) cmp shl retq pop rex.WX pop gs and adc mov xor pop rex.WX std movabs pushq lret pop jne cwtl (bad) rcrb ror pop pop push pop xchg (bad) addr32 (bad) mov data16 cmp pop test fsts test (bad) fisubr lods (bad) subb retq btc movsb rex.B pop sbb sbb push mov fbstp xchg addr32 imul lea mov jg ficomp test xchg jns js mov sub (bad) pop xchg cld pop push (bad) fucomp jle fdivl or fbstp add movabs mov (bad) cwtl movslq add test (bad) outsl test nop imul cwtl mov mov cmc (bad) outsb add (bad) movslq xchg out in cmp xor jo pop mov adc push (bad) (bad) (bad) or sub lods mov jl mov movslq roll cli rex.R mov jle adc sbb test insl loopne fs mov (bad) (bad) jg (bad) adc push callq fcomps fbstp pushfq negl notb pushq xor cmc (bad) pop mov cmpsl movsb sub movabs pop pop mov (bad) mov (bad) mov add jb in pop rcrl adc lret pushfq fs sbb jnp rex.WX rex.WRX mov pop cmp jo cmp jmp sub or fadds (bad) and movabs stos (bad) pop cld or pop popfq decb sar rex.WRXB rex.WX pop rex.RXB retq add or orl js (bad) rex.X rex.R pop scas out (bad) (bad) or add lea pushq in (bad) lret adc rclb pop icebp add popfq cmc pop jl jo jb out movsl fcmovu (bad) xor or rcrb jo ja xorl nop or (bad) and loope (bad) pushq adc jbe test xchg cld (bad) and mov (bad) (bad) mov in movsl retq add outsb (bad) test (bad) iret sarl adc lods rex.W or mov push (bad) sbb rex.RX lea push xchg push rex.WXB fs rcrb enterq sub movsl sbb andb fucom imul pop cli pop insl fdivr nop jg decb rex.XB pushq mov xchg fwait xor sti adc sbb mov pop rex.WR js jnp pop repnz fnop cmpsl pushfq xor movslq (bad) stos (bad) fs xchg pop sbb sbb xchg pop fstl rex.RXB rex.WRXB pop negl stos mov mov (bad) lock notb mov xor (bad) in xchg cs out cmp pop pop ss cli add push movsl sarb and (bad) xor lret (bad) pop loopne out (bad) rex.WRX mov mov mov cld add lcall data16 loopne add (bad) cmp mov mov callq pushq jp shrl cli sub xor sub sub rorb (bad) (bad) push push insb mov outsb insl rex.RXB outsl cmp mov mov cwtl pop push sahf (bad) rex.WRXB test pop jo pushq push pop (bad) rex.XB rex.WX add xchg std (bad) gs rex.X (bad) out (bad) (bad) (bad) pop (bad) int mov in movsl mov and out in pop stos popfq sub push xchg or (bad) loop jbe rex.WXB pop push scas adc sbb push es insb mov icebp movsb xchg repnz insl int (bad) and iret hlt pushfq pop jle iret in adc fsts fs retq pop xchg (bad) rex.B rex.RX and mov fbld push jmp mov (bad) enterq movslq leaveq (bad) cmp rex.WRX rex.WRX and pop xchg pop pop or std loop (bad) jp pop and mov or nop add negl rex.WRXB pop xchg and cmp cmp rex.R pop movsl (bad) pop (bad) rcll pop sbb sahf ror fsubrs outsb sub rex.WR std (bad) rex.W pop stos repz lods sbb outsb mov add pop int3 mov mov loope pop (bad) mov in pop (bad) incb (bad) loopne in icebp lret imul retq movslq adc ss jrcxz rclb rex.WR jl clc js jge mov jle mov retq cli loope in enterq push ficom pop (bad) jmp xchg imul addr32 push pop (bad) mov sbb rex.WRB es cwtl adcb shll movabs (bad) sahf (bad) cs sti adc jrcxz shrb xor js testb xchg xchg pop pop in jmpq jnp in mov pop and add rex.WB (bad) loop pop (bad) rex.WRXB cmc push (bad) sbb mov (bad) jnp add pop retq (bad) pop rex.WXB sub pop stos adc pop (bad) pop popfq push loopne (bad) jg (bad) xchg sbb sbb retq rorl (bad) pop in or rex.WRB pop int adc pop (bad) loop movabs cmp (bad) adc (bad) pop adcl pop fsubp jge (bad) sbb pop fisttp rex.WR vpxor and popfq (bad) in cmp pop jrcxz pop mov pop pushfq insl movabs rcrl outsb movsb (bad) (bad) (bad) pop and (bad) sbb hlt rex.WRX mov loopne sbbl sub (bad) pop pushfq cmpsl pushq (bad) sahf or mov xchg (bad) mov push mov jg (bad) pop xchg fistpl sub fsub (bad) je xchg popfq callq cmc and push rex.XB push gs movsb pop js jmpq cld pop movabs mov sbb sahf repz out (bad) pop pop movabs sub mov movsb cmp sbb (bad) rex.RX in cmp fcomps jne sub scas adc (bad) mov lahf rex.WB (bad) jge jmp cwtl sbb mov pop iret fisubrl jb push rex.WX pop adc adc mov mov sub sbb in sbb fnsaves movsb repnz callq (bad) sbb (bad) pushq out xchg in movslq movslq in rex.WB mov rex out sbbl lret or outsl and and jne fs sub ficoml retq gs fld jbe cwtl sub fistpll sub movsb scas (bad) pop lret jge (bad) mov int3 and xchg xor rex.WR xchg cmc sti rex.WX rex.RB cmpsb (bad) gs mov mull cmp (bad) pop jae xchg lods sbbl mov (bad) hlt (bad) (bad) and pop add ffreep cli and mov xchg mov xchg xlat xchg or idivl mov (bad) jns in loope cmp mov stos xchg (bad) jbe test movslq (bad) pop adc loop sub xor (bad) std add vdivpd mov push pop adc jle adc fmull sbb (bad) jne mov pop (bad) loop pop rex.RXB mov pop rex.B test and mov in mov decl add lret xchg pop pop (bad) push pushfq fistpll iret stc pop pop jmpq pushq rex.W xor pop movslq xchg (bad) std fiadd lret pop lock mov loope pop out push or jle (bad) stos or test imul pop cltd cmp mov callq cli rex.B sub jge xchg or movabs fimul movl rex.XB int3 jle pop add sbb mov jmp pop test mov xchg ss pop (bad) rex.X lret and jne pop sbb sti addr32 jo rex.WRX fistpll cmp lahf out cltd push stos lea pop rex.RXB rex.R pop pop gs add stos jb pop xchg sub lahf (bad) out pop movsb cmp icebp stos cmpsb mov push adc fdivr shll rex.RX in pushfq mov jo xchg rex.RXB and (bad) jmp xor cmp pushq (bad) mov in pop (bad) (bad) subl movsl mov pop xor cmp xchg retq (bad) lret sbb push pop clc pop adc jg stc xchg push mov pop pop retq cmp sbb outsb pop sbb sarl sahf push (bad) xchg fisubl xor adc insb jp xchg rex.WX rex.RXB rex.WRX pop movabs out cmc jne (bad) and imull mov jmpq fnop cltd (bad) (bad) and (bad) (bad) xor lods mov outsl ds movslq enterq adc in jp test cmpsl fstpl movabs (bad) cmpsb jl js rol (bad) mov cwtl add jge movabs rex.X or iret cmp in adc lods sbb rcrl imul loop psrlq add pop cmp or add divb pop adc sahf movsl sbb js pop jle fimull fdivrl (bad) pop insl (bad) popfq stc cld rcrb rex.WRB movslq (bad) pop loop or pop xor mov mov fucomip out sub (bad) pop fsubl pushq (bad) pop (bad) lock or lods sub (bad) pop and (bad) jge loopne callq fcmovb hlt insb cmp pushq mov (bad) jmp repz pop or mov or pop movslq pop lret rex.RXB xor insl rclb movabs mov rex.R rex.W or pop clc (bad) rex.WRXB add rex.WX cmp test (bad) push or jne (bad) test xor stos jbe (bad) in sub (bad) xlat jbe (bad) movabs int3 (bad) mov rex.WXB adc cmc clc rcrl (bad) jno jl jrcxz (bad) stos cmp push push push jle add shll xor adc xchg (bad) mov cmp negb clc nop (bad) imull rex.WRXB insb test or rex.WRXB idivb mov (bad) add (bad) xchg (bad) jns jae out rex.X fs rex.WX sub rex.RXB and rex cmpsb sub mov movabs xchg movsl (bad) imul outsl data16 and jae scas pop loop jbe rex.WRXB loopne std and test cmp fdiv ffreep addr32 mov (bad) and jne andl (bad) xchg (bad) adc push (bad) (bad) pop xor fisttpl sbb mov pop push pop jae jmpq movabs retq adc loopne mov pop or rex.RB mov add (bad) push mov lock rex.WR ss pop int jge pushq repz rex.WX incl or xchg (bad) fistpl cmc mov imul fiadd rcl pop cwtl pushfq retq imul (bad) push pop xchg int cwtl pop mov jns js mov iret shr (bad) rex.WRX (bad) cld pop pop sbb adc sub fnstsw (bad) lahf lods (bad) movabs pop xor sbb cmp jno rex.WR and out pop in or notl rorl pop clc xor sbb retq pop and xchg (bad) add jbe out jbe and (bad) (bad) jrcxz imul cmc (bad) (bad) or pop retq mov imul movl add (bad) push (bad) jnp jo pop (bad) loop icebp (bad) fmull pushfq jbe (bad) in je and jne jle mov mov jl sub stc out pop mov test jns jge js push pop pop or outsl stc rex.WRX add in in movsb (bad) jge adc lods (bad) or sbb push pop (bad) sbb fs push rex.X pop adc fisttp (bad) add leaveq rcrb or fs jle rex.RX test (bad) fisub sbb cltd jmpq data16 push (bad) or adc sbb cmpsb std test imul or mov xor pushfq cmp jmpq in (bad) sbb sub pop hlt movabs test push (bad) insb movb rex.WRX stos xor data16 sbb mov jno testl adc ja push xchg adc pop pop jae js rex.R movsb xchg cwtl cmp add movabs (bad) (bad) movslq data16 sbb pushq pop cmpsb cltd rex.WRX popfq mov pop mov mov (bad) rorb jbe (bad) mov rorl jns xor (bad) ss rex.RXB fisubr and (bad) sub pop pop fcompl ficompl and pop jo adc fwait retq mov test jg fldcw push pop sbb outsb fimull jmpq lock pop jns jo sbb movabs js jne fs add stc push pop movsl mov data16 (bad) retq add adc pushfq scas in loopne icebp lods pop outsl jo (bad) add sub (bad) pop movabs data16 pop cmp add fdivrp rex.W fistpl rolb fnstsw pushq movabs cmp rex.W in pushfq pop out fild sbb movslq fimul jl (bad) mov (bad) pop fcmovnbe pop je in (bad) mov mov xchg sbb mov pop add divl mov outsl jne sbb (bad) sub clc mov lock mov and pop mov or repnz xchg xor pop pop (bad) pop (bad) cmpsb in (bad) pop mov xor rex.RX xlat xor movslq add sbb jno andl or pop imul orl movabs insl mov cld out jl (bad) fidivrl sbb pop mov imul (bad) cmp rex.RB fsts xchg sub pop cmp fisttpl jg (bad) lock (bad) (bad) sub pop rex.RX enterq xor in data16 (bad) xchg pop pop insb xor jbe (bad) mov cmpsb mov pop pop adc sub (bad) and pop loop test sbb clc jge data16 adc in lods outsb xchg (bad) add cmovbe (bad) movsb pop mov jns cmp adc push and pop xor push pop and adc (bad) mov int (bad) pop callq jmp test pop xchg sarl mov mov pop xor xor (bad) xor rex.X sub pop jbe out jrcxz callq xor or jle fcomps stos movsl in sahf jmp mov movabs fsubrp cs cmpsb (bad) imul scas sbb rex.WX mov fcmovnbe in mov and push clc incl fbld (bad) mov lods imull pop (bad) repz cmp jbe add (bad) imul icebp or fild stos (bad) and (bad) pop fistp mov (bad) fnop sub pop rex.RB (bad) rorb (bad) pop (bad) mov je pop xor (bad) (bad) add pop sbb or mov (bad) sbb js lea xchg rex.RX sbb movslq xor pop xchg push int3 outsl movabs int sub pop testb sti xor scas cmp test rex.XB sbb addr32 in jne in adc je,pn jle xchg sub (bad) rex.WRX rex.WXB sub push data16 xchg or lods push popfq (bad) (bad) jb lret (bad) mov cmp (bad) (bad) mov jrcxz push push mov or cltd mulb or (bad) cli adc nop jl hlt idivl pop scas scas rex.R jle ds xor cld (bad) loopne mov in push stos in (bad) not (bad) xchg testb pop jbe pop jns rex.X repnz (bad) pop jo (bad) cmc sbb pop mov mov rex.XB adc repz pushq out in int3 fs xor xor mov (bad) pop stos pop shrd callq xor insb (bad) lods mov pop cmc pop callq push pop testl xchg ja xchg cmp fstpl in addr32 sbb (bad) xlat push rex.B pop jbe add retq and (bad) sub pop (bad) mov fildl pop pop rex mov pop movabs test jge pop stc mov nop sbb (bad) in pop pop cmp (bad) sbbl test pop enterq (bad) imul jne adc sub (bad) add sbb je xor xchg lret ficoml or xor stos outsb out rex.WRXB gs repz rex.WRX std (bad) pop (bad) cmp pushq enterq rex.W jge je fcoms data16 add outsb lahf add and (bad) xorb lea mov jbe add fs addl out cmpb pop and pop pop add retq callq sbb (bad) sub jb rex pop in and and or movabs or insl pop (bad) pop jmp pop (bad) fisubl and jg (bad) repz cmpsl (bad) mov mov mov clc push in mov fcompl and sbb shrl xor fbld adc or pop js jnp jrcxz (bad) movsl data16 sbb faddl mov rex.X push scas (bad) movabs or pop loope pop rex.B cmp jnp imul sub iret (bad) cmp jmpq jb out cli push pop xor or jmpq or and pop in je mov jne pop xchg pushfq stos xor scas and rex.RB (bad) repz sbb pop jge movabs adc repnz out insl sbbb hlt sub xchg xchg pop (bad) sbb or jg lret add pushq (bad) jb push push pop jno loope rex.X (bad) pop (bad) in nop mov ror pop mov std mov push (bad) or pop int pop jle jo pop (bad) mov xor jno loop loopne clc test ds jmp je (bad) pushfq movabs pop sar repnz imul xchg jg xlat cmpsb push insb pop pushq adc (bad) jmp movabs sbb add pop js (bad) adc xor mov pop loope movabs sti imul in in (bad) fwait sbb sub lret lods xor mov or mov idivb test (bad) pop sub xor pop data16 (bad) mov rex.WX test fcomps jb mov pushfq movabs movsl sbb imul iret popfq push mov pop pop (bad) movsl sub push push fucom pop shr pop sbb fnstenv (bad) or (bad) pushq (bad) stc mov (bad) rex.WXB adc (bad) push lea rex.RB pop jns imul mov add stos js test (bad) (bad) out (bad) retq outsl sub lods sbb std rex and jo jnp (bad) mov jmp lods xor xchg ss lret jb mov sbb movsl negl (bad) test mov mov pop ja mov int3 pop sub sbb orw (bad) icebp jmpq loop clc je sbb pop fwait mov sar xor (bad) in (bad) fsubl insb cmp pop sahf incb cmp (bad) sub cmc jo add pop (bad) (bad) cmp (bad) loope fdivrs iret add fstl (bad) (bad) imulb pop or rex.WRX cmp sti (bad) sub movabs fs movabs (bad) fsubrl jle rex.WX pushq outsb (bad) enterq out movsl sub mov (bad) (bad) cmp jmp xchg or in push add pop imull lods jg fdivs pop jae and stos sub xchg imul sbb adcb scas rex.RX mov pop (bad) push (bad) clc pop (bad) push mov loop pushq insl clc icebp pop pop xchg or jg mov fdivrl adc enterq push add jb jmpq pop mov out (bad) cmp in (bad) mov data16 add xor pop adc (bad) (bad) ss pop xchg insb out loop or rex.XB lret fistp sbb lods outsb retq clc (bad) jrcxz (bad) lahf pop ja push addr32 mov xchg cltd add mov pop rex.WXB insl push mov pop loop (bad) out sbb xchg stc fist pushfq pop lods (bad) pop or pop stos pop je rex.R loopne pop data16 jp jae pop xchg (bad) rex.WB rex.WB rex.WRX shrb mov pop pop clc and (bad) sbb movabs cmpsb fist rex.XB mov jbe pushq (bad) cmp int3 rex.XB adc popfq mov adc (bad) in pop gs cs fwait mov jrcxz cmpsb (bad) scas sub xchg stc cli ds xor push mov xchg test movabs (bad) pushq test (bad) rcrb mov int3 pop and lods fisubl (bad) (bad) and lahf ss in pushq fs outsb (bad) sbb shlb out movslq in movups hlt pushfq fistpl ss cmpsb adc push and movslq testl pop in lahf fsub xchg mov mov (bad) jle sub outsb cli (bad) rex.WX (bad) frstor jbe rex.B in cmp pop popfq (bad) (bad) sbb cli sbb (bad) mov pop cmpsb add pop (bad) pop (bad) shlb pop add sbb movsl pop jb rorb orb (bad) sbb pop lock sub (bad) movslq sarl mov sub pop in idivl sub and (bad) and insb (bad) mov ja sti divb test lret cmpsl test (bad) rex.XB or lock xchg cmp vmaxss adcl pop (bad) push pop movabs sbbb jne (bad) pop cwtl retq fcompl (bad) (bad) in movsq movabs repnz pop popfq (bad) xor or lret mov movsl mov lret pop ds mov jmpq insb scas sub rex.WXB xchg rex.W ds or icebp bswap or rcrb imul jae int fadds (bad) (bad) rcrb (bad) adc gs stos jbe mov fcoml mov (bad) jmp movsb (bad) cmpsl retq pop (bad) mov jb (bad) rorl add imul mov xor pop rex.B imul es jge rex.RXB add sub xchg cmp (bad) test add out pop xchg imul repnz or rex.WR (bad) (bad) mov and jne pop adc push adc sub and pop sbb cmp (bad) lahf and rolb (bad) movsb (bad) (bad) pop (bad) fstpl retq (bad) push outsb pop and (bad) cmp and mov movabs pop mov or (bad) xor pop add cs push ficomp lods lea movslq ja leaveq rex.WRXB and pop push pop (bad) sub rclb rorb mov pop push lods mov (bad) pop sub sbb sub pop sar pop xchg repz movabs lock pop in mul adc mov js pop cmp jrcxz pop (bad) jmpq insl rex.XB (bad) xor frstor mov insl and lods pop repz (bad) shrb callq push pop loop pop pop mov (bad) (bad) jns cmpsb (bad) (bad) retq mul mov sbb (bad) out push addr32 loop rex.RX mov mov sbb rex.WB rex.RB sarb pop cs notb sub jg test rex.RB loop pushq lods push unpckhps add sub rorl cld movabs rex.WRXB mov xor rcrl xchg push int3 pushq clc add cmpsb gs lea (bad) (bad) cwtl addr32 stos fcompl push out sub lret test (bad) pushfq jbe es xchg push pop out pop (bad) addr32 fisubrl cs movslq sbbb add popfq gs pop roll (bad) xchg pop sub (bad) stc or jge and and jo sbbl xchg (bad) pushfq (bad) (bad) (bad) pop shll rex.WR (bad) xchg sbb je and xor and pop retq sbb fnstsw xor mov xor pop (bad) mov rex.RX rex.WX rex.RXB sbb xor sub repz loopne xor pop leaveq je lods mov xor scas sub out movabs repnz nop in mov (bad) mov leaveq jne testl mov iret and fmuls cmpsb mov sbb scas fwait fs (bad) setb movabs mov mov jae push mov push (bad) (bad) add in (bad) scas mov (bad) jbe cmp lods outsb fbld in or imul lea pop popfq clc in ss mov mov adc jrcxz cwtl sub rex.RXB (bad) pop hlt sub rex.WR add (bad) xor rex.WRX std test (bad) addr32 cwtl insl rex.R mov rex.WB pop in rex.WRXB fs xor pop (bad) sbb push pop mov pop test or and fwait pop mov test leaveq add jg sbb and test rex.B (bad) in pop xor sub movslq and fsubl lods rex.WRXB rcrl mov add pop out pop rcrl lahf rex.R mov add int3 mov pop jg in imul (bad) and mov xchg loop pop lret pop (bad) out pop (bad) jne add xchg retq rex.WRXB xor mov cmpsl adc inc sti lods movsb jbe rcr push scas loop fist fidivr jbe insb test ds (bad) out movsb cmpsb (bad) loope (bad) adc test rex.WRXB xchg (bad) outsb callq in (bad) cmp popfw add lods mov xor pop (bad) sbb xchg pushq jp pop fwait mov test bswap outsl rclb jmp and pop add and mov mov xor (bad) pop xchg (bad) (bad) (bad) sub rex.B iret fwait shll sub xor mov (bad) pop movabs (bad) xor in push jne (bad) (bad) movabs jb fs mov xchg js fisubl adc push (bad) (bad) xor pop addr32 fldenv xchg rex.B or fs cmp add (bad) test pop mov rex.WRX sbb fistpl pop incl and mov xchg loop shrl movabs ds retq clc mov pop (bad) mov pop imulb femms fs test adc test (bad) pop (bad) mov xchg cmp test xchg pop rex.WB (bad) stc (bad) (bad) (bad) loope out fldenv faddp (bad) jle or push pop (bad) hlt orb mov adc xchg rex.WRB (bad) mov pop rex.RB rex.WRXB adc lock mov (bad) sub (bad) (bad) cmp (bad) fdivp (bad) mov pop jae cwtl jnp fcoml fs push pop test stos rex.WRB mov xor xor pop gs adc icebp xchg test loope mov (bad) pop es cmp jg fdivrl jo pop movslq xchg jrcxz callq movsb cmpsb jle lods xor pop sub and sbbl sbb loope std lahf fimull insl xchg pop iret cmp pop xchg fadds sub mov jbe jnp rex.R pop (bad) movslq (bad) (bad) repz add sbb cmpsb sbb pop pop (bad) (bad) and loopne rex.WX rex.RX rex.RX pushq fs sbb sub lock xor (bad) lods pushq fwait and xor insb xor mov rex.WB pop add xlat movabs rex.RXB lahf pop pop sbb jnp and sub mov data16 xlat mov (bad) fildll pop mov (bad) adc xor outsb fistpl out repnz std jbe mov in jnp movsb or pop cld pop rex.RB adc mulb pop or xor sub pop push cs decb (bad) mov rex.WX rex.WRB sahf int adc (bad) loope xchg pop cmp (bad) rex.WRXB jmpq movabs cmpsl data16 (bad) jo jbe xlat adc mov fs sub loope and rex.WXB scas pushfq pop jmp adcb push pop xor rex.WR mov cltd movabs loop and fisubl sub xor cmp adc rex.WRXB ficompl add and (bad) sbb or ds fwait sysret (bad) pop sbb fsubs or mov cmp cmc pop js (bad) jbe rex.B fs pop fildll sub jge cmp iret pushq in jle mov (bad) pop jg rex.WB and cltd mov pop insl cmc adc pop mov add rcrl fild push notb and ficompl cli rex.WRXB (bad) popfq (bad) xchg and fidivrl test (bad) pop jno (bad) cli divb (bad) cwtl pop ficom pop adc cmp loopne jno mov mov mov lock (bad) imul mov pop pop fs cmc fdivl (bad) mov rex.WRX rex push fs cmp vcvtdq2ps pushfq mov add ficomp ja rex.WRX movabs fsub xor xchg sbb repnz jg rex.B lock cmpsl (bad) pop (bad) rex.RX sbb xchg fnstcw ficomp insb and (bad) adc cmp fcompl sbb sub adc pop rex.W pushq jae pop (bad) nop movabs (bad) mov push fstl (bad) jae or pop rex.W clc jns cld leaveq cmp sbb data16 fdivl gs xchg (bad) adc rex.WRXB retq movsl pop jnp rcrl sbb int3 cmpsb or adc rex.XB pop sub xchg mov shll (bad) jae pushfq insl adc std cmp sbb cmpsb loop out addr32 mov add pop cmc cmpsl sbb xor adc sti pop xchg push rex.WRX pop add xor and (bad) rex jmp rex.X (bad) or retq (bad) rex.WRXB pop push pop sbb sbbl popfq and adc cmp sub rex.R pushq cmp mov mov sbb sbb cs (bad) rclb sarl in mov xlat sar rex.W out (bad) pop shrb mov ds jnp add (bad) pushfq pop rex.RXB movslq cmpl and rex.RB nop xchg push sub jle mov rex.WRXB outsl and cld adc (bad) pushq sahf fs mov rex.WRB xchg leaveq pop int and sbb pop rex.XB in loop cmc and out movsl rcrl (bad) cltd rex.WX icebp xchg movabs add hlt or movsl xchg movabs js rex.RX add fstpl sub (bad) and test pop mov loope mov movslq stos xchg pop mov cwtl (bad) (bad) adc xor pop mov divb mov lea repnz std jo jl add mov mov jge imul sahf js jrcxz or test (bad) or sbb movsl nop repnz movabs pop out push mov or jno in lret (bad) adc or insl out lea (bad) mov pop xchg in loope repnz movslq cmpsb add mov mov mov mov jle shrb mov pop (bad) (bad) jae movsl xor shrl sbb xor lods icebp xchg jmpq pop int test sub (bad) xchg cmc hlt test add push xchg sub rex.WRXB outsb adc std jge pop iret pop gs pop mov xor cli pop cmp enterq (bad) mov xchg mov (bad) pop xor add (bad) (bad) and pop outsb cmp stc xchg test loope jns (bad) pop mov (bad) cmp jbe repnz cld pop cmp in mov pop mov sbb jo (bad) mov mov int3 cmp jae sbb pop (bad) jg add in cmpsb fucomp out mov adc pop mov (bad) ja pop sub mov fistp pop adc push push pop movabs fdivrl mov out movslq movabs xor (bad) cmp fistp sbb lahf xchg movsl ss cwtl adc negb rex.WX mov pop loopne pop mov sub pop movsb repnz xchg rcrb movabs cli xchg rex.RB (bad) (bad) fs rcrw mov fsub retq jb sbb jno pop pop loope mov xchg fxch cmpl fist xchg loope (bad) rex.RXB (bad) pop fs xchg in jmp sti rex.WRXB jle adc retq push pushfq cmp pop sarb adc rex.X rex.WB push sub jge (bad) scas ja sub pop or insb test xchg retq push pop ja movslq or pop ss sub (bad) repnz sarb fwait push vmaxps push jo ds pushfq pop pop jns mov and movabs rclb cmp lods add movabs cwtl test mov pop push (bad) (bad) sbb rex pop retq test cmove pop xchg mov (bad) (bad) lahf jl pop sub lret jmpq pop lock (bad) movabs jp jle gs in push (bad) pop mov mov stc xchg cmpsl pop jns mov (bad) rex.WRX pop sbb xchg jge sbb mov div jle cmp leaveq pop xchg lods pop add pop or test hlt sbb cmpsl sbb mov mov sbb callq pop jne jg sbb jae lea pushq or pop pop (bad) (bad) lods pushq lods cwtl test movsb mov sbb xorb add xchg and loope pop movabs cli movabs (bad) mov cmp stos and rolb movsb loop xor (bad) push (bad) jl or pop iret sbb push cmc add decb pop mov cmpsb (bad) in or jbe adc pop rex.RX (bad) (bad) jns addl pop pop sub mov (bad) movabs rex.R mov pop and xchg jbe lock lret jrcxz (bad) pop xchg sub rex.WR loopne (bad) and leaveq or jl sbb pushq jae jle xchg jnp sahf pop cmp jle rex pop loopne cld outsl ljmp mov (bad) movsb mov shlb (bad) (bad) cld outsb mov dec outsb xor rex.WXB xchg rex.WRB rex.XB data16 cmp lahf mov adc rex.WR movabs in mov (bad) int loopne icebp (bad) sub pop xchg pop cltd (bad) xchg pop insb pop xchg sbb push (bad) adc adc rex.WR xor pop mov sub or pop sti sbb (bad) je mov scas pop rex.RXB rex.WRX jbe jmpq rex.WRB in rex.WRXB fnop and pushq push jne mov xchg mov add pop rex.X subl rex.WX xchg out jbe fildll clc cltd scas gs xor or mov pushq adc pop (bad) ds lret (bad) clc jae pop add xor sbb je insb lea popfq push xchg xor pop (bad) ror (bad) data16 rex.RX ds pop lods pushq or int (bad) rex.WB xchg fstpt mov mov jp fsubr int3 (bad) jb (bad) callq push movabs push mov ds or (bad) fs mov (bad) push adc add fisubl xor xchg pushq xchg nop (bad) movabs lea cmpl pop loop mov ss movslq sbb testb icebp jge fwait pop callq lods mov loope sbb sahf jb fwait out mov pop mov adc out mov in (bad) leaveq negb (bad) loope mov icebp mov xor and (bad) fcompl rex.RXB (bad) mov jbe or jnp jmpq rex.X and mov ficom rex.R sub jmpq pushq cwtl rex.WX test rex.RX lods jp jnp andb cmp subl sbb or rex.RB fdivrs xchg jne data16 rex.WRXB sub movsb and push in out mov sub fbld mov sahf rex.X mov jb hlt rex.WB xchg jbe cmc (bad) mov xor idivb movabs sub rex.XB addr32 jbe imul cwtl loop rex.WR lea fiaddl fs movsb fs xor (bad) jmpq rex mov pop movsl imul pushw cwtl jmp adc lock jrcxz push imul fs loope cltd fstpl and (bad) rex.WB cmpsb (bad) (bad) jmp rex.WR and cmp insb (bad) sbb jle fucom stos xorl xchg scas outsl sub pop pop clc (bad) loop cmpsb jmpq push jle and repz xor insb in jge fs rex.XB rolb add insb push (bad) pop vpavgw int3 (bad) and pop stos sub mul sbb stos rex.WXB or sub or hlt callq rex.RXB pop rex.RX adc pop mov callq retq (bad) fsts pop adc repz sub cmp cmp xchg pop fldenv xchg push and pop cmp sub rex.WRX jg (bad) sub pop cwtl outsb mov pop (bad) sub pop push add mov (bad) jb (bad) or jae (bad) (bad) (bad) pop xchg cmc and mov (bad) iret sub rcrb fisttpl sbb pop (bad) lea test fidivl jg (bad) pop (bad) (bad) pop nop xchg (bad) adc popfq (bad) (bad) sbb repnz (bad) jrcxz mov out adc fwait in movsl sub add rex.WR loope std pop cld (bad) movabs cmp xchg movabs (bad) jmp and (bad) sbb pop cmp (bad) cmp push jg insb pushq rex.RB fs imul (bad) pop mov lret rolb js (bad) jle std add cltd pop pop pop mov xchg movslq jl jrcxz push shlb (bad) jns pop mov cld jmpq (bad) movabs pop cmpl in ds rex.RX (bad) outsb lods rex.WRXB movabs pop rex.W add sbb subb fistpl out (bad) and cwtl lret (bad) (bad) push cmpsb or lods pop test add rex.R rex.WB insb retq scas adc and cmp sub ja (bad) movabs pop jo clc cmpsb mov sbb (bad) mov gs mov movabs adcl xchg je icebp cwtl mov lods sahf retq test clc pop lods or rex.WXB mov movslq pushq js gs cs (bad) and movslq adc (bad) mov insl vpunpckhbw loop cmp mov xchg and rex.WRX xlat mov out (bad) (bad) cmp and pop movsl retq ss jbe cmp pop ficomp popfq gs shll and sbb cmpsb mov xor decb addr32 jmp rex.RX or nop test lock callq jmpq xor pop or pop insl jns or pop fs adc rex.WRXB stos (bad) sbb pop and cmp outsb xchg hlt ds imul (bad) movabs jg cmp js jge rcrb and add mov gs test jg add test rex.XB add xchg sbb fnop test cmp (bad) rcrl scas adc gs add sti mov (bad) pop jmpq je push popfw (bad) jge mov stos sbb in and scas add jb lods mov ds (bad) sbb lret rcrb cmpsb cmp jae (bad) addr32 test xchg xchg enterq mov mov pop jmpq (bad) (bad) movabs movabs pop (bad) jmpq rex.X rex.W lods outsl movsb and jne (bad) xor mov push mov pop (bad) jmpq lret rex.RB (bad) mov loopne ja jge in (bad) rex.WXB mov cmp sbb pushq enterq jmp mov xchg add fld (bad) mov and xchg or pop fstpt cmp xchg jmpq in xchg rex.R rex.B mov (bad) xor in pop cmp retq out (bad) pop cwtl pop fisubl or rex.WX (bad) test (bad) int3 repz cmpsb jl jbe (bad) (bad) out mov (bad) movslq pop scas (bad) gs cmp (bad) jl cmp (bad) xchg movabs hlt pop pop out in pop push adc lods sahf jbe cmc nop vmwrite pop xor imull (bad) imul test rex.RB pop pop sub enterq xchg scas jbe rex.WX push ja and lahf rex.RXB jmpq repnz (bad) rex.W and insb movabs sbb add rcll xchg movslq iret fcom in mov (bad) (bad) (bad) mov insb mov hlt xor pop add push mov pop movslq xor jl (bad) repz pop rex.WXB (bad) cld cli jnp pop movabs (bad) xor adc sahf pop sub loop sbb sub out outsl jo add (bad) jg movsb rep sub pushq pop data16 (bad) jno rex.R rex.B rex (bad) sbb pop (bad) mov push xchg retq pop xor (bad) add rex.W xchg pop push mov out push fcmove jmpq idivb pop js (bad) pop rex.WB rex.XB ds loopne fs mov lret pop cmp ja movabs cmp stos cli xchg or es adc cmpsl stos (bad) pop mov xchg mov sub fs iret outsb pop mov rex.B rex.WX (bad) inc (bad) jbe (bad) scas sub rex.RB or add jg scas push or outsl (bad) fcos push push add rex.WRB cmp loop jo xor test movabs rex.X cwtl pop pop pushq and enterq (bad) outsb (bad) (bad) pop sbb movabs lods movsb fbld pushfq mov push jne cmp (bad) jo (bad) lret sbb out (bad) sub movslq cmp push loope sbb pushfq mov rcr outsb mul sub xchg xchg cmpsb andb pop rcrb (bad) pop sub (bad) push pop sahf repnz jle (bad) push (bad) cmp pop rex.WX pop test (bad) jmpq loopne or jns mov and shrl rex.X stos cwtl (bad) rex.R pop (bad) movabs push pop gs fs fisubr and (bad) xchg ficompl jrcxz xchg scas pop lahf mov (bad) sbb insl and lock adc cltd mov cmp xlat sbb in pop pop sti divb lods fst pop mov rex.W gs (bad) rex.WXB rex.R xor callq pop test mov jmp mov cmp pop adc cmc lods xchg enterq fs data16 rex.WRX mov leaveq jl pop (bad) (bad) (bad) pop sti pop lock and loop mov push pushfq movabs jbe sahf ss loop rcrl xor movslq jns icebp addr32 imul pop js xchg sti sub add pop gs loop imul pop push mov xchg rex.WX sbbl mov fistp xchg movabs sub jg pop fnstsw (bad) adc xor cwtl cld fwait rex.RX (bad) lret (bad) sub or (bad) jno pop mov insb negl pop fstpl sub and cmp (bad) xchg test loope cmp pop pop clc and rex.W pop rex.WRXB (bad) (bad) sahf (bad) mov cld decb push mov in jmpq (bad) mov jo xlat pop and rex.R (bad) pop cltd mov or movslq jmpq movabs lods mov (bad) rcrl (bad) sub rex.WRX pop fistp xor (bad) xor rex.WRXB pop insb test loope (bad) jbe icebp iret rex.RXB add (bad) rcrb rol stos pop sarb movabs hlt xorl and add std xchg and rex.WRXB (bad) rex.RX movabs shl sbb mov cmpsb (bad) mov je (bad) cmp (bad) rex.W enterq fwait test push mov cmpsl (bad) clc addb xchg rex.RX jbe stos fcomip sahf pop imul in sub cmp stos jle push sbb idivl pop pop (bad) rex.WX (bad) rex.RXB pop lcall or shrb loope lret jle jmpq pop push cmc xchg xchg xchg mov sbb mov (bad) rex.WRX sub jp sub mov lods add jne cmp andl (bad) jl int3 sahf ja adc (bad) lret sahf or jmp rcrb fistp lahf cmp (bad) (bad) rex.RX xlat pop movabs shrb fdivrs (bad) repz add ds push rex.WX (bad) fdivrl out cmp movabs sbb pop xchg and xor fildll (bad) (bad) sbb and sbb jae and rex.WB je mov pop push iret std subb xor pop (bad) fmuls cltd fistp pop and and repnz cmpb pop add jae mov stos (bad) cmp frstor ss (bad) ficompl xchg adc fwait cmpsb add jmpq sbb sub or pop pop sbb loope mov adc rex.WRB adc mov mov loope sbb sbb cltd jae (bad) iret mov (bad) and cld mov rex.WRXB enterq (bad) cmp sbb adc pop loop add pop rex.RXB push (bad) movabs and (bad) jo rex.WR fimul rex.WRB cmp sbb pop sbb lock (bad) xchg xor es rex.WRXB pop out pop mov rex.WXB pop test pop stc pop movslq adc (bad) out je cld psubq rex.WRX xor (bad) xchg fisub sub (bad) rorl and fildl push rex.RXB mov add movabs lret (bad) js fsub push sbb pop add xor cmp pop cmp cmpsl rcrb and xchg (bad) lock sbb add mov pop shrb jrcxz loopne pop lea push xor (bad) rex.WX pop icebp xchg test shlb pop (bad) sub add cmc jnp jp movsb push pop or (bad) cmpsl adc rex.X mov loope rcrb jrcxz or out xor xchg jl pop jnp movslq mov (bad) pop add sub loop and fistpll (bad) pop xchg cmpsb pmaddwd (bad) stos xchg retq clc add rex.RX gs icebp (bad) and insl pop pushfq roll push fwait (bad) imul mov or mov pop or repnz pop rex.WB (bad) insl lods lret mov (bad) cltd retq pop mov lea sub pop (bad) cmc ss leaveq lods rex.X rex.WR mov (bad) mov rex.W pop int jmp push (bad) xor jrcxz xchg mov (bad) in pop loope and mov add add pop js (bad) jo jp jmp push fcomi xchg (bad) jle (bad) pop (bad) and jl outsb (bad) jbe mov imul fstl (bad) cmp lods and callq pushq pop pop jnp push repnz pop mov in mov insl icebp sub push pop pop outsb insb jo (bad) xor pop int and mov mov mov (bad) insl rex.WRXB enterq rex.RB (bad) fnstenv pop addr32 rex.RXB pop test jg mov out pushq jnp lea jmpq xchg lcall (bad) rex.XB jbe sbb rex.WX movabs adc in pop (bad) ss fwait mov jb add xor mov fnstsw clc gs insl rex.RB mov rex.XB add testb pop rex.X rex.R stc add cmc mov sbbb xchg ja loopne icebp addl pushq cmp fistp mov jo pop pop jle movabs icebp cmc xchg (bad) cmpsb rex.WRB gs or ds pop mov adc add jo pop (bad) enterq lret pop leaveq seto scas jno xchg test (bad) pop push std sub hlt mov icebp jmpq fsubrs rex.WR stos jbe popfq cltd nop out adc test movslq js (bad) cmp mov (bad) ss (bad) jbe xor jnp sbb iret idivb mov (bad) mov pop xor push push orl (bad) roll (bad) pop jp or repnz cmp mov xchg pop rex.WXB xor rex.WB (bad) lret cli (bad) repz and xor js pushfq rex.RX jbe loope (bad) mov mov movabs repz add (bad) mov je xor (bad) movsl pop (bad) and cmp mov jmpq and pop fstpl (bad) pop pop xchg add movswl (bad) jns movsb enterq mov gs fnstsw pop add or (bad) xchg xchg (bad) int3 clc xchg cmp in leaveq pushq pop subl outsb rex.WRB je rex (bad) int lret rex.WRXB sar pop test xchg xchg (bad) pop movabs jle (bad) nop push test sbb (bad) add or movabs pop loopne in cld fwait adc cs loope mov push pop unpckhps sub mov xchg xorb add fs test pop int and xchg js pop xorl xchg xchg cmpsb test pushq rex.RB iret add (bad) loopne cmp add pop or or xlat gs movslq (bad) popfq movabs adc rex pop mov (bad) xchg iret popfq lret cmp imul cltd mov icebp (bad) xchg adc (bad) jge (bad) pop pushq rex.WX fstps and pop ss xor mov imul std xchg and movsb pop mov (bad) (bad) movslq insb jbe lock (bad) pop sbb xchg adc cmpsl data16 xor hlt fbld flds add pop pop xchg rex.WRB cmc rcr es adc cmpsb rex.WXB xor sub and sub je jne push movsb (bad) pop icebp xchg add xor (bad) ja out xchg or (bad) pop push pop fimul pop stos xlat ficompl mov jb mov pop sti (bad) cmp xchg (bad) push movslq test ja (bad) mov mov jp xchg pop cli jge sbb (bad) xchg rcrl fucomp loop pop imul xor cmp rex.RX (bad) pop (bad) cmp (bad) enterq rex.WRXB fs jns xor (bad) jg (bad) pop leaveq sbbl outsl pop (bad) sub jne fcoml (bad) and rex.RB lods xor pop mov or stc add or cli roll fistp mov mov jno pop and (bad) push scas adc cmp mov cld (bad) iret pushfq (bad) hlt (bad) rex.RXB sub leaveq (bad) xor in (bad) fs pop loope data16 outsb sbb movsl mov or pop pushq (bad) mov in rcrb jbe fucomip jl adc iret outsl jp data16 sub push pushq sub and xchg in cmpsb (bad) movd movabs pop callq cld jg rex.RB pop (bad) add hlt in rex.RXB or push rex.B push or ds rex.WB (bad) leaveq xchg adc insb (bad) xlat cs movsl retq (bad) pop rex.X rex.R ss (bad) mov pop outsl sbb mov jmpq callq mov bnd pop xor push (bad) jmp cmp xchg rclb jp xchg test imul movsb cld outsb xchg lret (bad) clc movslq in cmp pop stc jno std rex.X cs adc mov jl je pop xor pop adc decl sub mov mov adc rex.WRXB (bad) clc pop xor jmp cmp vphsubwd jmpq test sbb xchg jle (bad) sub lods (bad) test mov mov pop je mov (bad) and or rcr in push pop vdivsd div rex.WR xchg icebp rex.WRXB (bad) (bad) (bad) (bad) fistp xor cmp and vmovupd fs xchg push mov loop rex.WRX insb (bad) fsubs js (bad) stos rex.WRX jmpq rex.B sbb pop movabs sub repz cmp (bad) loope sbb imul mov sbb test mov pop mov cmpsb or es xor cwtl jp loope push sbb nop test sahf (bad) or pop mov xor movabs idivb (bad) pop jnp test jo xchg mov popfq std sarl outsb mov mov rex pop jge jle mov in jo jp fistpl idivl pop or fisub enterq pop mov (bad) sti std rex.RX fs (bad) (bad) mov push pop mov in jg jle lock mov and adc (bad) loopne hlt xor std mov in imul and pop fwait xchg pushfq xlat jne shrl pop cmp add rex.W and xlat pop push cld pop stos pushfq in pop movslq sub pop (bad) sti push sahf pushq mov gs pop jbe fcmovnb mov sub (bad) out push xchg mov or adc (bad) retq cmpsb jo pop fs (bad) cmp int3 adc movabs add (bad) data16 pop lock mov xor or and test mov jmpq loopne pushq jae (bad) movsl (bad) lea flds pop int jle shll xor mov retq (bad) xor rex.WRB pop rcl rex.WRXB rex.WB push clc outsl adc mov pop mov cmp adc in (bad) cs mov cmc cltd and (bad) mov jne (bad) pop push (bad) push rex.WRX push rex.WB or mov (bad) shlb cmp (bad) fadds pop xchg fcmovbe iret xchg movabs rex.WR rex.B xchg ds cltd xor mov adc fs add jg pop mov movsl cmpsl xor movabs shrb (bad) or (bad) cmc (bad) cmpsb in (bad) mov pop xchg adc fsts rex.XB adc sub retq rex.WRB adc pop idivl loope mov imul pop mov sub xor lods xchg addr32 rex.X (bad) or retq pushq in mov adc xchg loopne lcall adc jno mov pop gs xchg xchg idivl xor (bad) sub xchg cmp mov pop jp out fdivrp pushq lea fstpt (bad) mov ficompl rex.X pop adc rex.WXB gs xor pop (bad) lods adc shll ficoml int loope pop cs sbb repnz add test pop mulb xchg xchg sub adc pop (bad) cwtl out (bad) rex.X rex.WRXB mov (bad) (bad) push pop xor jl pop (bad) pushfq pop out and adc pop and loopne movabs pop retq mov fs sar loopne pop jmpq pop jl adc (bad) cmp pop js cmpsl (bad) cmpl xchg push mov (bad) insl xor mov pop cmpsb sbb lock cmpsb rex cmp xchg mov pop idivb jno push cmc pop (bad) callq or push testb pop xor mov out and xchg insb jb (bad) popfq sbb in pop rcl jrcxz imul pop rex.WRX sub lock loop xor cmpsb (bad) fcoms add cld (bad) xchg xchg adc pop xchg sub rex.B xor xchg sbb pop and fsubrs pop movabs (bad) in or cld out (bad) (bad) es jnp ficoml push pop repnz (bad) jg imul loopne sarb insl insb jnp out rex.WRB pushfq movabs pop (bad) rex.WX rclb rex.RX fcoml (bad) (bad) (bad) in cmp jnp pushq or jo push fcmovbe (bad) pop mov stos and or out pop push out lods mov mov in cmp push jmp std andl lret (bad) fisubrl or (bad) movslq insb lods retq popfq sub rex.WRXB jg cmp xchg jbe mov add leavew sub in sub rex.RX movslq subl insl rex rex.WB fwait (bad) push mov jnp lods mov shlb mov mov add (bad) fsub imul push out pop rex.WRB insl ds mov movsl and (bad) xchg jbe add cld (bad) (bad) pop (bad) insl or stc fisttpll test xchg cmc sub out nop shl gs or (bad) rex.R es hlt pop (bad) mov test (bad) xchg pop test clc lret rex.WX fwait je jrcxz data16 xchg sbb in jp (bad) cmp lret (bad) mov outsl (bad) pop sbb loop pop (bad) sbb pop out pop sub insb insl mov add (bad) cld loop fidivrl (bad) movabs pop movslq or pop pop xchg test pop loop fiaddl or sbb or mov mov xchg (bad) and gs movabs push rolb (bad) adc xlat jge in cmc xchg push mov xchg rex lock mov insl fisubl (bad) and mov retq movsb es pop sbbb sbb (bad) cmp (bad) mov callq pop (bad) mov jns xor (bad) divb (bad) add or enterq movabs pop retq mov outsl es mov (bad) pop xchg rex.RB lret jb pop rorl pushq xchg lods rex or icebp (bad) scas mov rex.WRB rex.R mov data16 shr cmp outsb addr32 add and stos fistpl rex.XB (bad) mov mov adc (bad) outsb repz cmp sbb sbb mov mov jno orl (bad) movabs adc sbbb adc pop out jae xchg enterq mov stos jne movabs xor xchg ficoml pop (bad) shrl mov add xor or mov sub scas loopne and fsubs test outsb xlat pop (bad) callq stos imul cs mov cmc pop and push mov pop (bad) pop leaveq cmpsb sub pop pop cmp push xchg sbb lea jns push jle lods lock (bad) (bad) in stc js outsl mov rcr (bad) test orl movabs mov fsubrs in sbb pop movabs xchg imul mov scas rex.X mov stc (bad) stos rex.RB cs callq retq rex.WXB rex.WRX jae xor scas movabs sbb int3 or stc sub scas xchg (bad) mov repnz cwtl mov mov mov rcrw jp sbb pop jle sub and (bad) cmp fnstcw xchg callq rorb jle (bad) jg pushfq rex.B fs lock jp scas cs data16 mov fistpl rorb mov jb cli movabs (bad) or pushfq (bad) push (bad) xchg jbe or imul and lods clc sbb lret pop test (bad) pushfq in scas jmp popfq xchg pop fidivr cmp push pop loope movabs pop cmpsb (bad) pop (bad) fs pushfq rex.RB rex.WRX fisubr xor (bad) sbb push (bad) fidivl imul rex.WR (bad) cli lret movsl in (bad) (bad) pop pop add fstps fcompl movsl and pop jle (bad) in xor pop mov cwtl mov pop jmpq (bad) (bad) cmc pop icebp mov pop push in mov fs cld pop adc (bad) setp data16 pop sbb (bad) (bad) (bad) cmpsl push (bad) mov (bad) sub add neg pop and jbe movslq jns sahf stc out pop cmp sub (bad) outsl cmc mov pop movabs jb sbb (bad) pop mov out jne pop cmp cmp jo xchg pop hlt jle jp xchg cmp mov movabs cmp and sbb lahf gs loop (bad) (bad) pop jrcxz sub (bad) cwtl testl jmpq dec push jb notb pop fidivrl xchg (bad) mov add adc cs sbb movabs out nop sub pop mov mov mov pop mov mov rex.WRXB rex.RX in leaveq ss xchg divb (bad) and pop adc mov cmp add jp out mov (bad) divb sub js test enterq cmpsb movl or pop sub pop and (bad) mov push rcrb pop pushfq sbb (bad) pop pop mov cmp add pop loopne xor (bad) or icebp push (bad) push addr32 (bad) xor pop fs mov (bad) cli data16 rex.WXB jg pop pop pop and shr (bad) callq mov scas sti pushfq insl callq push (bad) xchg mov sbb cltd and cli fiadd outsb pop lahf retq pop pop cld or test (bad) scas cmpsb (bad) out (bad) cs retq test gs xor pop (bad) add lret xlat (bad) (bad) (bad) movsb sbb in sbb fs (bad) xchg popfq jns cs mov adc sbb test xchg retq fcoms and add mov pop movabs (bad) rex.WRX (bad) xor (bad) rex.WXB (bad) (bad) add (bad) pop sub jbe pop xchg movups jge (bad) xchg jmpq (bad) in pop movsb scas insl pop sbbl cmp imul mov cli repnz sub or in rex.WR rex.WB add pop mov cmpsl (bad) cmp jl pop jrcxz iret fcompl loope popfq cmp js fsubrs sbb test jne add fimul rex.RX pop rex.W fcmovnbe cmp std cmpsl pop mov (bad) adc sahf adc pushfq vcvtpd2psy in add out movabs fcmovnb rex.X repz sub cld add loope lret (bad) or pop leaveq rex.RXB data16 pushfq (bad) rex.WX cmp add add jg fiaddl xorl cmp jns,pt retq in cmp sbb xor (bad) rex.WRX js rex.WXB fs loop cmpsb (bad) xor sub movslq fsubr je rorb in jmpq insb (bad) xor icebp (bad) andl or mov rex.WRXB pop xchg add lahf rol jmp xchg shrl xchg nop jmpq jbe test movabs jnp in mov (bad) popq xor push jg xchg mov sub movabs adc xchg rex.RX mov out (bad) sub lock and int fisttpl loope or xchg (bad) pushq rex.X lods adc (bad) fstl add add movsl fcomps xchg sar cmp rex.RXB xchg rex.RX or sub mov (bad) push (bad) out jg cltd add fcomps rex.W icebp pop mov ds nop and leaveq and clc jbe (bad) add sbb xor scas sbb jne sub pop mov popfq je insb (bad) sub pop cmp retq pop gs rex.RXB sahf pop jmp (bad) (bad) stos xor and fbstp jbe int3 (bad) pop mov (bad) stc xchg cmp push out fldl sbb lret pop xchg (bad) out decl (bad) xor test ds add in rex.WXB sbb test or fmull jnp insl add (bad) out mov cltd mov pop add (bad) popfq or and test jbe lods movabs pop add adc pushq add movslq mov sbb nop rol stos pop cmpsb or cmp xchg pop pushfq movsb (bad) and xlat (bad) pop xchg and xor loope movabs rex.RXB popfq pop flds cltd xchg sbb mov push (bad) fistl insl (bad) mov and movsb pop adc add add cld cwtl roll loopne cmc jge je sub icebp rex.WRB jbe xchg xchg lret adc and rex.WRX out lahf sub push mov icebp xlat pop pop lods sub push ja cltd std pop sbb and cwtl or or rex.RXB pop xchg test cmp and pop je lods pushfq add pop gs xchg pushq push rex.B rex.RB sub adc sbb rex.XB xchg cmp shll loope gs (bad) jb sbb rex.RB mov adc sub (bad) rex.WXB (bad) (bad) (bad) cmp jp leaveq (bad) and rex.WXB mov rex.B vunpcklps rol mov out jne xchg push jrcxz mov es cmpsl pop rorl push rex.WRXB vmovsd xor mov notb sbb mov lods pop rex.WXB mov xor jb int pop scas cwtl jrcxz movabs rex.WRB rex.B rex.X rex.WRX jbe adc movabs sub movslq insb cmc pop pop adc or (bad) je scas rclb jl add test sub shrl (bad) iret popfq pop and (bad) xchg adc (bad) sarl inc rex.WRXB rorb imul rex.XB ds rex.RX (bad) (bad) (bad) retq test push jb (bad) adc mov mov andb fistl rex.R xchg xlat (bad) adcl pushfq pop lret mov and rex leaveq pushq ds (bad) xchg cli data16 callq cmp notb push lea sbb fs mov pop and mov testb pop add (bad) mov xchg movabs mov and rex.RXB jne pop pop std repz and insb (bad) push or clc fisub and cs xor and movabs pop movabs xchg fsubl mov (bad) pop cltd enterq rex.RX lret pop cmp stos test mov add fbld pop es or rex.WB (bad) ds (bad) sbb and add outsb (bad) out fldcw (bad) xchg mov rex.XB (bad) je pop xchg movabs loop repnz or sub jne xchg rex.R (bad) jns mov mov test lock pop (bad) sahf rex.WX mov pop jle jmpq movabs cmp (bad) scas sub sbb stc (bad) retq insb stos cltd lret add in xor sub cmp pop adcb rex.R int3 (bad) rex cmc adc mov xchg in mov lods and cmp xor xorb pop pop movsl xor pop jb cwtl pop or mov rex.WRB xchg mov sti sti cmpl ja pop jl sbb add xorl cs jo je loopne pop (bad) jnp add pop (bad) push in pop (bad) mov sbb xchg xchg rex.WX (bad) (bad) cmp mov (bad) mov outsb pop shl cmp jns (bad) ja cld mov push mov addr32 nop mov pop add retq movabs (bad) sub rex.WRX sbb (bad) cmp pop js add pop fildll sbb (bad) rex.WB push or sahf pushq clc movsl xchg sub flds sarl jge pop xor sub jle push sub sub or gs pop xchg subb (bad) (bad) and and sub (bad) adc movslq mov and jnp stc (bad) sbb icebp retq rex.WR negl jne fs mov jnp sbb cmp and lods cmpsb pop popq int mov pop retq and xchg xchg mov (bad) sub shrb sub enterq pop (bad) rex.WRX pushfq iret sbb pop lcall (bad) loop test mov rex.WXB pop rex.W sbb adc loop xchg nop in sbb in pushfq pop fs loop cmp rex.RXB cld (bad) sub pop mov pushq cmp test add (bad) retq sbb sti cld iret or (bad) pop sarb shl mov (bad) lahf jb and push add mov shrd jno push test pop cli pop push sbb pop rcrb pushq mov mov (bad) pop jo sub test xchg jrcxz pop callq (bad) push jrcxz jo movabs stc pop xchg sub (bad) jb cmp xchg xor loope rex.WRX (bad) (bad) stos insb pop pop cmpsb (bad) pop sub (bad) repnz stc sub add pop mov popfq mov je lret jbe add loopne adc add xchg cltd out js cli xor mov fstl stos (bad) int3 sahf (bad) xchg xchg shl (bad) movabs pop cmpsl lret movabs int add (bad) test (bad) adc (bad) xor lahf in jbe pop insb loop cmp mov xlat sbbl xchg push sub and clc (bad) mov cli movslq (bad) movsb pop movabs cmp or rex.RB iret jae cmp mov cmp es rex.RX ja ds (bad) imul add popfq (bad) xchg (bad) jmp pop and xchg rex.WRXB cmp and retq xchg loopne pop mov (bad) movabs insl push loope cltd pop (bad) scas hlt xor rex.W callq fistl lea (bad) pop pushq pop cmp mov and cli jg test pop je ss cmp incb (bad) pushq adc (bad) (bad) or (bad) add callq (bad) sub fidivl add pop jle lea ds jmpq movsb movslq pop repnz sub and jle rol sbb mov jl (bad) mov shl mov gs (bad) and pop movabs rex.WR cmp or pushfq lock pop (bad) and sub (bad) jp fisubrl mov pop xchg and lea (bad) ds frstor cld sbb jns lods pop xchg mov or mov es and xchg mov push mov mov cld (bad) lretw fcmove add movsl xchg xchg movabs xchg movabs jge (bad) fwait (bad) cmc or movabs pop pop shll (bad) jbe mov in mov rex.RB jp or jg sbb stc pop add mov (bad) jrcxz (bad) mov or inc sbb retq imul retq jp or sub cli pop adc cltd jrcxz pop (bad) jl pop out mov pop callq or cmc stos cmpsb ja rex.WR rex.R rex.W sbb sbb fadds insb jmpq fist pop or pop ja (bad) cmp movabs (bad) rex.R pushfq movabs out out mov push jne pop in sub fcomps rex.WX mov pop leaveq pop mov jno movabs xor (bad) add pop push out rex.XB xchg (bad) xchg mov loopne incl pop xor cli ja in adcl fdivl rex.WRX rex.R ds sub push pop mov rex.R and rex.XB addr32 mov sbb (bad) xchg pop (bad) mov pushq retq in mov pop jno pushq jae push xor rex.WRB mov and cmp jb (bad) cwtl test (bad) push sub out int3 push rex.R (bad) jb (bad) iret (bad) out pop xor pop mov cwtl adc sub sarb pushq stc sbb insb enterq repz mov pop cmp cmpb pushq (bad) pop rclb movabs fistpll js and lea iret imul (bad) pop (bad) mov mov pop jno jbe (bad) lea fistl cbtw test gs cmpsb clc adc xchg callq and cmp pop stos jrcxz or rex.RB push loope cmp je icebp mov sub rex.X sbb in fsubr movsl (bad) (bad) and mov cvtpi2ps mov insl mov sbbl clc fist fs movslq (bad) test rcll ss lret (bad) cld loope mov cltd rex.RXB fs pop jns sub pop es cs mov and cmpsl retq sarl mov rorb movslq (bad) adc stos pop sbb sbb movsb cli rex.WRB mov and hlt test (bad) adc idivb jle pop jmp imul xor adc push in add mov pop pop sub jns xchg xchg pop jne rex.WX repz mov pushfq (bad) scas (bad) fs cwtl fsubp (bad) sbb (bad) loope movabs mov test pop lret (bad) (bad) test and rex.RXB cmpsb jae xor (bad) ss pushq ud2 (bad) pop mov sbb pop mov mov imul rex.WB jbe stos cltd loope test (bad) (bad) sbb pop (bad) sub and sub (bad) pop stos or mov stc fs (bad) add frstor fdivr pop cmp sbb or clc mov mov xchg pop sbb movabs cwtl gs rex.R faddl (bad) xor movabs add (bad) rex.RXB adc mov pop jne imul in jbe scas enterq fs or imul (bad) divb stos pop pop jns ss cltd add popfq add movabs mov mov callq xor sbb (bad) (bad) rex.XB sahf xor push frstor pop sbb cmp lahf push xchg pop mov adc sub (bad) movabs test movabs fdivrl stos clc pop cmp and add es (bad) (bad) xor rex.WRX and lea cmp mov xchg movsl outsb cld jnp rex.W lods mov pop int (bad) mov cmp movslq repnz jl movabs jg pop rex.WXB add xchg shlb rcll (bad) gs sbb and xchg and lods (bad) or int jne pop or js cmp pop testl mov pop je jmpq (bad) sbb add popfq movabs mov sahf sub out adcl fmuls pushfq xor rex.RXB (bad) fs pop jge mov fdivl jbe std iret sub in movabs xlat retq sbb push sbb sbb (bad) fcmovbe negl fwait add or and int push js pop and clc jbe xchg cmpb pop jmp scas (bad) imul cs pop (bad) rcr (bad) lret int3 sbb jge mov negl and rex.WX lret mov (bad) fcmovu addr32 adcl or fnstsw rex.RXB mov (bad) lods ja cmp rex.RX or rex.WRXB or adc xchg cmp (bad) out outsl add fstpl orl (bad) lods adc gs rex.WR out pop sub loope movabs sub (bad) rex.WR rex.RB mov scas pop xchg and rex.WRX rex.RX sti pop movabs (bad) jp sub jge js xchg sti (bad) xor retq (bad) or pop gs mov mov cmp pop sar mov mov jl fwait pushfq add pushq sti (bad) stos rex gs rex.XB insb jle xchg jb mov pop mov mov xlat pop rex.WR rex.WRX out sbb (bad) jmp push loop stos pop fild fadd in movsl pop mov lret cmp xchg sbb (bad) jbe add sub shlb test (bad) pop xchg lods xchg (bad) lea jae (bad) xor callq movabs jns movabs and mov sahf repz sbb pop loope jmpq scas pop (bad) adc in out pop cmp rex.WX (bad) sbb rex.WB mov ja mov (bad) and scas fstps orb lock add rex.WRXB (bad) adc (bad) (bad) sbb xor fs and sbbl notl pop rex.R adc xor pop rex.WRX rex.B nop ja cwtl lret rex.RX (bad) push cmpsb negb add outsb (bad) ja sub out cwtl xor (bad) (bad) test (bad) xchg rex.WXB movsl push pop rex.RXB fwait movsb and pop stc rex.R ss pop retq callq jmpq pushfw (bad) lahf adc cld pop pop pop adc (bad) fisubr cmp rex mov pop mov xchg (bad) negb jge rex.WXB rex movabs stc pop xlat stos add pop fs rex.W and mov sbb lret cmp pop mov jl je addr32 pop lods cmpsb (bad) out cmp push jne sbb or imul jmp pop xor add stos mov sbb movabs and iret xchg rex.WRX jrcxz shl mov rex.WRXB scas xor sbbb cli fsubrs cmp (bad) test xchg es jb rex.RX xchg pop pop (bad) cmp scas cmpsb rex.WRXB xchg mov movsb push (bad) cltd pop fcomps (bad) rex.WRX sbb sbb push pop (bad) (bad) mov sbb pop (bad) scas rcrl fldenvs jae fs (bad) pop test add cltd (bad) (bad) jl add lods xor imul rex.XB lea loope pushq roll pop sbb stc xchg or xchg (bad) (bad) movsl stos push (bad) (bad) pop ja (bad) gs movabs std mov sbb pop (bad) xor and mov fnop adc cmp rcl sbb sahf (bad) xor rex sub (bad) ja gs loope outsl rex.RXB xchg (bad) adc rex.X or faddl addl add mov pop movsl or cmpsb jp fiadd or (bad) (bad) rex mov (bad) stos pop (bad) fcmove nop add (bad) jnp mov pushw pop jb incl xchg retq movabs loop jmpq sub mov pop rex.XB mov (bad) (bad) test mov pop (bad) sbb jp loop xchg jmp js mov mov gs (bad) xlat xor fidivr xchg (bad) mov (bad) pop in movslq loopne in int jge pop test (bad) enterq and pop pop (bad) movabs fwait (bad) (bad) mov and xchg and lock mov mov sbb (bad) cmp gs rex.WRXB icebp xchg out add (bad) cmp sbb mov (bad) pop pop add jbe (bad) xlat repnz mov addr32 lock add push in (bad) mov add jle in idivb pop jrcxz jge data16 xchg loopne xor mov jrcxz and and test sbb and rex.WRXB adc sahf sbb lea sbb rex.R insl mov (bad) jo push rex.WRB jbe push cmc xor mov callq mov (bad) push xchg fbld stos mov pop packsswb movabs std add xchg rex.XB movabs cltd (bad) jnp push cwtl (bad) jmp rex.XB (bad) iret xchg pop and loope jb xchg neg idivb fildl lods (bad) rex.WX rex.WB push adc rex gs add push in mov pop retq jle ss (bad) pop pop jno test pop push je mov rcrl sbb (bad) cli sub xchg lret int3 clc movslq shll adc xchg cmpsb mov cmpl and jg sub push push pushq (bad) (bad) rex.R (bad) pop mov cmp lahf movsb ja push cmpsb rex.WRX je data16 (bad) movabs pop jbe movabs xchg test (bad) (bad) (bad) jg pop rex.RX jle data16 adc insl (bad) rex.WRB sbb mov loop lea imul (bad) lods fwait sub pop pop rol mov fisubrl addr32 mov sbb or pushfq (bad) adc loopne xchg pop cmpsb adc cmp jnp sbb jp stos xor enterq jns movabs rcr pop rolb add and lahf pop std rex.X push (bad) and and pop jo movslq movabs ds jrcxz pop push fldcw stc movslq xor lret sbb (bad) (bad) (bad) (bad) in and jb movabs cs jne add jb sub mov and (bad) xor fs pop lods insb fiadd movsl mov stos pop enterq divb sub (bad) pushq jae xchg jrcxz loop icebp mov push add in (bad) rex.RXB xlat in movabs movabs push and sub (bad) popfq (bad) pop jmpq add jle ds xchg cli sub iret nop jnp push je in jl fistpll adc adc or (bad) mov mov jrcxz and or xor vcvtsd2ss (bad) xchg pushq loope (bad) xor insl cmp (bad) sti xlat or pop rex.WRB sahf pop (bad) (bad) stc xchg sbb lods out xchg fistp pop movabs (bad) add rex.WX lahf rex.WR rex.B fcomps mov adc rex.WX (bad) rex.RB callq cmc cmp sub fisttpll rex.WX pop iret fwait xorb subl pop cmp push (bad) iret mov shll rex.WR jne (bad) andl cld xor (bad) enterq sub (bad) mov add test movl sub sub mov fwait and callq pop mov jmpq (bad) pop mov (bad) (bad) jbe callq jg retq hlt sub js add (bad) in pop xchg jp push (bad) jmpq pop cwtl fisubl mov (bad) pop sarb stos pop int3 cs lods add fucom or pop (bad) xor pop rex.X (bad) cmp (bad) out jrcxz pop mov pop in js (bad) mov pop xor iret rex.B data16 pop out loope add (bad) pop adc jrcxz push clc add rclb repz mov cmp movabs sbb lock jrcxz pop add movsl and xor (bad) sub rex.WR cmpsb xchg pop movabs xchg (bad) sahf add mov hlt in jbe retq adcl mov (bad) movabs jne sub incl in xchg (bad) jrcxz pcmpgtb xor lea sbb cli adc pop retq (bad) movabs jbe popfq push cld sbb jrcxz cwtl jge pop mov cltd sub rex.R (bad) test xor lret push xchg jno pop (bad) orl lret xchg push in jp test test and rex.WB pop pop or or lock hlt data16 movslq mov pushfq jrcxz js (bad) or (bad) (bad) in jb rex.WRXB jnp pop or jle (bad) cmp pop push pop fadd pop leaveq (bad) lods movabs cld rex.W adc movsl push mov (bad) retq rorb pop rex.WRXB insb movabs jge (bad) jrcxz iret mov pop gs (bad) (bad) je pop sbb sti mov xlat xor xchg jnp (bad) pop idivb xchg ffreep mov pop movslq movabs rex.WB sahf out cs sbb rex.RX xor xor mov (bad) xor fldenv xchg shrl std (bad) push fiadd (bad) cmp (bad) jrcxz mov (bad) (bad) cltd int3 sub (bad) cmp js mov jae rex.WRXB outsl xor jns (bad) hlt add adc mov rex.RX push fs pop sbb out (bad) lahf js sub rolb nop loopne cmp jrcxz mov cld push (bad) pop and cmp sahf imul and pushq (bad) fwait sbb xchg in outsl xchg pop lods ja mov movsb test adc rex.WRXB pushq (bad) mov (bad) fdivl pop shll enterq add pop (bad) mov pop push push test adc icebp push pop rex.B mov loop pop outsl pop mov and (bad) mov jns popfq (bad) addr32 xor and rcrl push adc sub (bad) loop iret idiv cwtl jbe,pn lahf add (bad) rex.WXB nop jne pop sbb jnp jbe cmp shr and sti mov sub gs (bad) pop pushfq pushq movslq cmp jbe test adc (bad) mov pop mov ds and cmpsb xlat xor jne mov xchg (bad) std sbb xor loope pop (bad) (bad) and mov cltd jge pop adc movabs cwtl (bad) movsb ds jle pop (bad) mov pop lods rex.RXB jb (bad) xor jge push stc and mov insl mov (bad) outsl rex.XB sbb and xlat loope movabs subb pop rex.W rex.WR xor rex.B (bad) mov pop jns (bad) mov pop clc rex.WX mov icebp jo mov add out ficom xchg (bad) (bad) imul gs xor add or ja push data16 rex.B popfq rex.XB pop sbb pushfq add mov rex.WX jg movabs (bad) push mov (bad) and cmc lret shrb pop lret movsl xchg (bad) jmpq mov movabs add rorl (bad) mov sbb ds add mov (bad) sbb xchg mulb push rex.RXB and int mov xorl jnp add xor (bad) pop (bad) cwtl outsb rex.WRXB rcrb (bad) add sub fst pushq (bad) (bad) (bad) cs and cmp mov sbb (bad) movabs pushq (bad) mov test lock rex.X adc imul adc cmp (bad) pop js xchg int mov movabs (bad) pop fucomi mov add mov rex.WR xchg add fisubrl stos movsb shlb cmp pop negl movabs scas movsb pop rex.WR cmpsl rclb jmpq push sub jp pop or ds (bad) add inc nop mov jl ss xor loope pop sti movslq adc (bad) jrcxz pop in rex pop mov mov pop cltd and add jb (bad) jnp movslq jne add xchg adc fdivs push rex.RXB and mov lods iret and rex.W rex.WRB xor cwtl sbb and push retq pop loopne popfq add pop jl xchg icebp adc enterq movabs adc pop stos loope mov movabs pop out sahf icebp loope and andb iret mov adc ds mov pop (bad) sub jge rex.R jle std (bad) (bad) or jno mov rclb (bad) pop mov push mov push mov shrl adc (bad) addr32 mov popfq push mov cmpsl movsl (bad) adc data16 xchg xlat mov xchg rex.WRX rex.W add (bad) je retq pop mov pop cmp ss pop rex.R fildll test mov popfq pop mov lret (bad) rex.RX rex.RB pushq or (bad) sbb or and pop ss movabs push jb pop xchg rex.WR lret or in pop sbb add cmpsl js movabs (bad) jns jbe add lahf (bad) xlat push shr and loope (bad) mov (bad) or std cmpsb pop jo out insb jl sbbb in popfq pop loopne push xchg adc loope xchg repz mov (bad) (bad) xchg xchg loop clc pop push pop rex.WRB jno rex.WRX je cmpsb xchg jmpq frstor adc test cmp scas in ss rex.WXB rex loope mov in ja out rex.WRB movabs ljmp pop addb fdivrs pop cmpsb xchg rex.X pop mov (bad) mov (bad) adc mov rex.RXB rex.WRB sti sbb movabs adc clc lret xchg (bad) jns test (bad) and leaveq in pop cltd (bad) rex.XB stos (bad) pop (bad) movslq sbb pop outsl rex in scas (bad) rex.RXB push mov jb sbb (bad) retq lret push xchg in movabs movsb movslq clc or pushfw sarb jmpq add xchg jrcxz cmp lods sub pop and fistpll pop movabs or retq (bad) rex.WRX cmp sub xchg repz fs vmovntps xchg cltd rex.W and pop or mov mov pop mov mov push pop in jae (bad) cmc add push pop and (bad) pop jge stos xor (bad) cli stc mov rex.R (bad) push mov jg pushq sbb cmpl sahf xchg (bad) mov loopne in jae (bad) loopne xor pop rex.X lret test lahf push repnz xor rex.RXB or out mov sub sahf movabs test sahf pop mov mov jge movabs cmp adc rex.WRB (bad) pop movabs sub pop mov jae and mov cmp mov (bad) andb (bad) orl (bad) push jbe cmp (bad) scas jns data16 push loope loopne testb (bad) fcoms (bad) push subl or in lret adc mov nop mov pushfq and push fcomi mov fs jb rex pop add mov (bad) pop test (bad) popfq or fwait (bad) (bad) movabs cmp callq movslq stos movsl scas test adc pop pop (bad) adc fdiv jne pop fcmove mull pop int3 js cmpb es pop sub adc xchg jns xor jle xchg (bad) jb jbe sub xor rex.WRXB gs lret pushq (bad) adc (bad) and (bad) imul imulb in rex.WRXB mov rex (bad) fist pop test adc rolb (bad) icebp push pop xor pop pop add addl mov pop ss fs jl pop mov cmp pop or pop fs fiaddl sbb fdiv (bad) rex.R callq shlb lahf add and rex.WX jbe (bad) in fildl movabs lods (bad) pop notb mov cld sahf xchg add xchg fimul data16 imul cmpsb sbb and cwtl rex.RXB push pop imul xchg jg mov in (bad) std rex.RX push jae (bad) jno test movabs (bad) notl cmp add test (bad) fildl repz (bad) sub jge add imul shl cmp sbb rcrl rex.R xorl (bad) fwait jns cli (bad) sub addb mov loope mov (bad) rex.WR popfq retq lock fild sbbl rex and movabs cmpsl pop fwait icebp jbe push xor xchg ficomp jnp pop gs movslq test jge pop mov and repnz ss scas rex.RX (bad) fsub cld pushq adc movsl mov pop test mov jge xor data16 rex.WRX rex.WRXB pop out retq or (bad) addb jnp sar movsb (bad) sbb (bad) (bad) rex.WRX (bad) movabs in cmp (bad) jbe movsb adc scas sub xlat test (bad) data16 fbld mov (bad) outsb sub push clc (bad) jno stos lods mov movsl (bad) push jo (bad) hlt pop pop (bad) cmp push rex sbb insb nop mov cmp pop (bad) movsb mov movabs std idivb sahf pop sub data16 jb fisttpl (bad) rex.WRXB fs rex.X push vdivpd (bad) fwait cmp rex.WRB pop mov (bad) mov pop (bad) out jb mov fidiv imul (bad) xor (bad) mov pushq jp pop lods (bad) pop enterq sub cmpsl push pop test (bad) leaveq sbb xchg out popq cmp movabs xor test mov (bad) mov adc andl xchg fwait jae (bad) and fnsave cmpsb int3 mov cltd sub lahf mov movabs xor jnp rex.B cmp jbe jo ror adc pop nop es rex.R (bad) pop jmp rorl callq (bad) (bad) stc (bad) adc fisubl neg pop fild data16 stos stc push sarb sbb fwait (bad) mov out jae (bad) pop icebp leaveq mull pop sbb xor cmp jae (bad) jmp pop cmp out rex.R pushq lahf xchg retq rex.WB stc add clc cmp mov movsb (bad) rex.WRB rex.WRX adc (bad) cs stc cmpsl insl loope test pop stos mov or mov (bad) rex.RX in pop jo imul pop gs movabs movslq cmp jb mov jrcxz mov fimull sarb (bad) pop rex.WX (bad) stos pop outsl or (bad) (bad) imul test pop retq or ds rex.WRXB loopne push mov mov mov ds fldcw (bad) mov pushq movabs adc pop outsl loope mov xchg fwait rex.WX imul int pop cmp lret pop push xor mov mov data16 sbb (bad) rex.WRXB addb fstl pop pop xchg sbb hlt rex.WRXB pop loopne jrcxz test rex.WB add mov rex.WX rex.WRX (bad) (bad) (bad) in (bad) mov clc pop in outsb test and fsubrl int (bad) pop (bad) rex.WRXB jbe std jge xorl rex.XB pop pop sti (bad) (bad) (bad) mov jl and pushq iret or sub xchg adc sti and add or xor pop subb adc shl loop ss jl,pn movsb jrcxz pop push rclb pop push add xchg out adc test rex.W (bad) mov mov (bad) div pop mov (bad) push (bad) pop insl (bad) or cmp (bad) cmpsl (bad) and mov mov xor (bad) stos ds movslq (bad) insb (bad) jle mov (bad) cmpsb popfq loope add data16 cli mov mov mov movsl movabs (bad) push xchg xor sti xchg ds pop push gs adc push mov cltd pop xchg mov add lahf jrcxz (bad) cmp (bad) adc enterq rex.WR out (bad) sbb and (bad) fnstsw lods sub jmpq fadd rex.RXB xlat and xor push xchg rex.WRXB pop cmp jmpq or pop rex.WRXB mov rex.R rex.WX loope mov rex.RB jno in je pop movsb cs (bad) (bad) cld (bad) fs pop push rex.WXB fdivl mov (bad) (bad) add out jge pop (bad) jp test rcr pop int3 lret stc xor xchg add (bad) (bad) pushfq movslq pop repz mov xchg or shr (bad) pop lods movsl rex.WX fwait or xchg xchg rex.X fidivr pop jb xor pop and rex.R rex.WRX (bad) jle xchg push sub pushfq sub jge in stos fild mov cmpsl test and in pop rex.XB rcll js or xchg pop rex.WX not data16 shr popfq cmp mov rcrb xor cltd jrcxz xchg retq (bad) pushw cmp pop xor repnz data16 mov ja pop loope andl loop add cltd pop sahf (bad) xor (bad) negl fcomps rex.WXB out lea (bad) rex.RXB fwait (bad) xor or mov pop nop pop add loope test rex.XB xor cld xchg in out (bad) lret or and jbe add xchg movsb mov and callq jno cmp mov mov fs ss lods fwait sbb pop pushfq push (bad) callq xchg popfq jb mov jns pop pushq sub rex.XB int lods mov retq movslq icebp mov (bad) repnz (bad) or cwtl jns pop imul xchg or or jle (bad) sbbb rex.B and fnstsw sub in jg pop scas movabs outsb in rex.WXB rex xchg mov cmp pop jae mov cmp repz xchg (bad) (bad) lret pop sub rex.RB cltd pop jl (bad) or xchg fnstcw sti mov rex.RXB testb (bad) pop (bad) (bad) cmpsb (bad) callq rex.R es pop mov adc cmp rex.WRB push (bad) sub test in pop xor pop adc stc imul rex.WRXB (bad) cmp adc fsubs sbb mov pop xor rcr iret incb stos cli rclb jbe add loop (bad) rex pop push fiaddl vandnpd int3 mov rcrl or sub rex.RXB mov (bad) clc mov (bad) mov cmp stos cmp mov movslq (bad) out (bad) push addr32 scas xlat lods xor or sti add sbb pop mov push (bad) pop mov xchg mov pop ficom and pop (bad) xor mov rex.XB xlat pop movabs jno mov (bad) cmc (bad) rcr pop in rex.B (bad) jge (bad) xor movabs (bad) (bad) scas (bad) mov ja (bad) jg jp gs mov xor ficomp xchg shlb mov movabs mov (bad) xchg (bad) movsl and (bad) jo pushq pop test jle and divl ja (bad) mov in xor and (bad) or lret in cmp pop adcb (bad) out nop int3 (bad) int3 movslq jmp (bad) mov icebp (bad) (bad) mov nop out mov (bad) loopne sbb (bad) cli lods sbb rex.XB rex.WRXB cmp (bad) mov out pop stos fwait jl movslq (bad) pop pop lock ja xchg jmp movabs clc pop rex.WR rex lret pop mov push cld mov rex.WR xor pop andb and outsb mov pushq xchg (bad) cli cmp (bad) pop (bad) sbb adc and pop xchg pushq (bad) and or cmp test rex.WRXB out (bad) in outsl es fs (bad) (bad) or push cwtl (bad) in xchg mov sub gs add mov sbb mov callq insb (bad) sbb orb movabs pop rorl add (bad) fs xchg xlat pop push sbb rex.XB jnp or outsl mov pop or out lods cmp insl in add shlb pop rex.WB loop jo pop xchg fwait or pushq fistp (bad) (bad) shrb push xchg callq callq fcoms pop xorb and clc cmp outsb dec (bad) and jge adc (bad) test idivl lods (bad) cmp divb enterq movl insl callq or jbe push pop mov jp pop fdivrs push and pop sbb mov and jbe (bad) std pop and pop in insl xor sub (bad) negl loop clc adc mov and add jo and pop pop sub cmp cmpsl movabs xor imulb mov xlat or push pop or std mov test es adc cmpsl jnp pop mov stc rex.WRX imul je (bad) xor outsb mov and test pop add stc xor movabs xchg mov (bad) pop lods rex.WXB pop mov shrl ficomp out pop rex.XB imul rex.WRXB (bad) rex.WRXB xchg popfw mov fs (bad) js test adc pop decl je mov and stos jae push shlb nop cmp (bad) js pop (bad) (bad) mov rex.WRXB fdivr pop rex.WRX (bad) sbb jrcxz add shlb loope mov pushq data16 out sub rex.RB pop enterq icebp and scas (bad) mov rcrl jbe movabs pop push (bad) (bad) xchg js adc pop rex.WXB sub pop add rcrb in rex mov retq fldenv imul in mulb adc (bad) and (bad) out cmp rex.WR sbb (bad) and xor sbb (bad) je rex.B pop loope (bad) jns push ficoml cmc adc (bad) loop xchg (bad) jbe (bad) pop mov xor push pop cmp xor movabs (bad) popfq movabs mov mov cmpsl adc out and (bad) jnp sub (bad) rex.X pop addl jne sbb insl pop popfq scas stos jge xchg rex.WR rex.WX xchg push adc push xor (bad) test stos xchg btr adc push cli sbb pop cmp (bad) pop outsl retw gs sahf test pop rex.WRX stos mov cltd mov pop (bad) rex.WXB ss lret push adc mov xchg pushq mov cmp xchg iret add test mov adcl xchg push out fstp (bad) mov shlq jge adc cs mov iret stos pushfq out add addr32 sbb imul pop jbe fstpt jbe jrcxz (bad) retq xor cli mov xor mov rcr mov mov and jbe cmpsl jmp xchg and nop lret (bad) fnstsw clc (bad) fistp sbb and mov pop (bad) movsb (bad) mov hlt xor and shll (bad) sub mov and pop jnp in (bad) retq rex.B pop fdivs fcompl jbe lret movsb jl mov pushfq mov ficomp mov and jge mov jbe add fiadd (bad) test fadd push out (bad) sbb imul sti cld mul xor icebp jns (bad) lods movsl sar mov imulb sbb cmp movabs add jrcxz popfq push mov xor rex.RX rex.WB (bad) std enterq roll push (bad) (bad) rex.W (bad) (bad) mov cmp loop pop and (bad) fdivrp addl data16 sahf xor lods (bad) (bad) jmp cmp jmpq insb enterq or (bad) (bad) scas (bad) adc sub xor jb jnp mov clc mov (bad) (bad) sub jle pop mov add fisttp sub outsb lcall pop rex.WR jns repz enterq and adc xlat pop movd (bad) rex.WRXB rex.RX rex.WXB fisttp push xchg (bad) stos and jae icebp rex.X pop lods mov (bad) popfq jbe adc outsl data16 jl es jg pushfq pushq rex.B add (bad) mov (bad) cmp sbb (bad) or fistp andl push or movabs cli pop mov test add jns pop mov fwait sub mov (bad) mov pop push mov mov sub cmp rex.XB fcomps fsubp fs cmp and rex.R sbb mov pop or (bad) rex.B pop mov andb pop mov sarl and cmp (bad) push (bad) pop (bad) jbe and push pop mov rex.RB sbb add mov sub stos negl cli rex.RXB (bad) and in rorl cmp fcompl xor loopne fisub pop or add mov xor xor sbb rex.RX sub xchg add cwtl (bad) hlt fildll (bad) movabs (bad) movabs pop cli jno out xchg pop rex.WR xchg xchg and cltd rex.X ja sti idivb fistp jl and xchg mov ja (bad) jrcxz mov fs ss std data16 cmpsb (bad) (bad) rex.RB (bad) pop add movabs jno jb (bad) (bad) popfq (bad) rex.WRB fildll movsl cs xor or add mov (bad) cmp cwtl pop rcll shr movabs pushfq mov (bad) pop or movabs sbbl repz xchg jmpq mov and js pop mov rex.X rex.XB rex.WRXB pop push jmp retq test pop and addr32 scas mov (bad) rex.WB pop (bad) jnp xchg (bad) pop lods in test movabs (bad) roll sub cmp pop add insl (bad) fcmovnb movsb pop mov xor and cmp mov (bad) scas (bad) (bad) loope jo sbb movabs repnz rex.WRXB sbb cltd or adc and lret rex.WRX add pop rex.WXB fs addr32 movabs divl loope movabs mov (bad) mov (bad) xorb jmpq cmpsl popfq adc loope pop repnz xchg mov (bad) sub test cmc xor loopne (bad) mov jne push rex.WXB xor jno gs mov jnp jl pop push je mov cmpsb (bad) insl pop jns fistl xchg rex.RX ss cmp pop stos outsb movabs fsubs cmpsb sahf rex.RXB mov lret (bad) pop pop mov sub jo int xchg push movabs jle addb out std clc (bad) sbb retq (bad) mov or (bad) or pop jmpq pop (bad) sbbl push mov scas retq sbb (bad) sub mov (bad) xchg and lahf xchg and or (bad) gs rex.RB outsb jo add out fs cmpsl and loopne sbb adc jbe iret repnz movsb popfq xchg mov (bad) mov xchg int movslq pop mov pop fcoml xor mov testl rex.RXB adc push mov xchg ds push push mov (bad) jne pop movabs cmc mov xor xor sti test data16 (bad) mov xchg cmp sub mov leaveq cwtl subl xchg pushq (bad) ds int pop cwtl repz mov xchg or adc test iret and cmpsb testb rex.WB (bad) or jl lahf (bad) (bad) insb jnp fs mov push or push xor sti movabs mov or push jrcxz rex.B or jge sub lods pop mov outsb enterq sbbl movabs (bad) movabs sbb pop sahf (bad) rex.WB callq xchg rex.WRB (bad) and pop mov or jne rclb mov mov pop adc sub movabs sbb adc sbb xchg nop int3 xchg (bad) pop rex in jge and add std (bad) outsb pop rex.R cmc xor retq adc repz or pop rex.WRB or (bad) push cmp cmp add rex.WRXB or hlt shl (bad) fisubrl (bad) movsl (bad) cmc ficomp mov mov rex (bad) test add xchg mov and pushq nop sbb mov sarb jo add rex.WRX loope gs pop rcrb callq cmp (bad) (bad) jne (bad) pop jbe pop rex.WRXB (bad) adc add add movabs push orl and mov (bad) xor cmpsb sbb loope pop mov in (bad) add sbb rex.RX sub jns pop (bad) shll adc (bad) (bad) or addr32 and cltd jge or pop ss mov shrb pop and lods rcll mov pushq or mov data16 ja jl retq movabs rex.XB cmp pop lcall xchg mov adc jnp pop sahf paddusb xchg adc pop hlt (bad) movsb cmp test enterq mov and pop movabs jmpq mov sub mov mov xor roll jrcxz pop add (bad) (bad) shrw in fdivl roll pop and mov rex (bad) punpcklwd in callq xchg add xor in loope test mov pushfq pop (bad) sahf pop mov (bad) mov (bad) push push mov (bad) imul rex.RX push pop push (bad) fs repnz cmpsb pop or jmpq loope and ficomp int pop push mov movslq (bad) pop jbe push rex lock addr32 sarl fnstenv neg repz pop rex.R add (bad) retq stc xchg rex.XB rex.WXB cmpb loope push fistpll and add sub xlat pop or xchg retq push cltd pop movabs xlat gs (bad) (bad) (bad) mov icebp (bad) pop rex.W es (bad) sub mov fcoml rex.RXB sub rex.XB and ja out adc (bad) pop mov pushq rex.WRXB int3 out in pop jl je jbe scas jo xorb vpcmpgtd jg stc pushq add jp sub pop fdivrs gs (bad) jle sbb hlt ja add (bad) mov lods pop xchg mov fiaddl mov mov fisttpl add sub cld mov (bad) rex ds or fucomip fs imul cmp je stos add adc (bad) xchg pop cwtl sbb push rex.B jne xchg std add xchg lods (bad) test mov rex.RX cmp (bad) sbb sti add (bad) addr32 popfq pushfq mov movabs cmp pop stos mov sbb mov pop rex.XB loopne pop in movabs sbb popfq pop (bad) xor or outsb rcrb callq jg mov or pushfq mov mov js shll cmp xor pop jbe (bad) in retq and push mov rex.R sbb push push jmpq (bad) push cmpsb sbb fisubrl rex.RB or sub iret cmc sbb jo rex outsb test xchg ja repz (bad) sbbl rex.WRXB or (bad) or push pop pop jo movsb fidivrl mov rex.WXB rex.RXB adc jbe or jge jmpq fmul push mov pop xchg (bad) sub mov or jle pop jl fcomi add (bad) cmp pushq jns pop and rex.WXB (bad) sbb stos push rex.WRX (bad) lret rex.W movsl and mov cmp sbbl punpcklwd pop (bad) jbe sub lea sahf pop (bad) (bad) rex.X adc insl push xor add movabs pop vmovups pushq jns and (bad) (bad) pop enterq rex.WX ds leaveq push in pop (bad) loopne mov cmp lock (bad) sarl test icebp pop mov xor in enterq fadds (bad) jmp push and ja retq add mov (bad) mov sub leaveq pop xor rex.XB es sbb mov (bad) jae (bad) adc xor lock and scas int3 add adc rex.WXB jne rex.RB fxch pop retq cmc pushq sbb shr pushfq pop rex.WRX in int movabs xchg negl sub (bad) mov (bad) rex.XB pop jnp sarl enterq adc out pop (bad) rex.WRX test xor sarb (bad) (bad) (bad) (bad) mov sbb add cmp adc imul mov xchg pop rex.WX fbld test vdivps (bad) movsl mov loopne xor sbb scas sbb rex.RB sbb movsb out ss (bad) xchg movabs sub or pop rex.WRB xor ficoml callq mov movabs and rcrl loope adc stos loop pop (bad) (bad) mov push andl push fmull (bad) push sbb sub ja rex.WRX sub sbb rex.WRB out (bad) fucomi stos pop pushq adc pushq cmp clc xor jno pop and pop add (bad) loope (bad) icebp jae rcll cmp enterq pop movslq lock xchg mov (bad) (bad) pop and rcrb mov mov push xchg fbld add and nop pop cmpsl lret jge sbb loope,pn mov xlat sbb xor (bad) movabs (bad) ds pcmpgtb nop (bad) ror (bad) (bad) mov (bad) movslq cmp or xor (bad) jge pop test sti mov cltd fldl fs (bad) stos mov (bad) insb (bad) (bad) (bad) mov rex.WXB mov (bad) (bad) data16 pushq movabs lret ss insb jge ds cmpsb add pop mov rex.R jnp xchg push or fs pop in pop (bad) retq pop adc jg mov and js fisubr vpcmpgtd (bad) sbb vpand jns js rex.RXB rex.WX rex.RB jmpq std test (bad) lret loope add (bad) in movabs mov xchg xchg sbb pop insl lret jnp lahf (bad) pop (bad) loope cmp loopne sub sbb mov ds rcrl (bad) movabs sub pop subb mov pop pushq mov jno add clc pop xor or pushq cltd or lods lea in enterq sbb outsb (bad) pop imul in imul sub mov xchg pop push mov mov testl roll (bad) insl add in (bad) icebp rex.WB jg or push (bad) mov push sbb fsubr xlat cmp jo pop push lret movsb pop addr32 pop adc fdiv add pop cmpsb repnz xchg pop fstl in jge push sbb and (bad) pop int sbb rex.RB jg jl push cwtl jrcxz fabs jnp rex.X (bad) pop fdivrl xchg adc (bad) pop cmpsl mov pop fstpl adc or lea pop mov jp pop cld in pop (bad) mov int3 ds push jae xchg pop sbb (bad) push addr32 out movabs or pushfq pop or fisttpl mov and (bad) adc test sarl in push (bad) (bad) (bad) xchg xor sub mov mov fs es cmpsb xchg negl pop loopne add (bad) (bad) (bad) bts xchg clc int cmp jne jbe insl mov jmp sub sbb fs pop test stos (bad) rcrl rex loop fwait (bad) pop movsl fldt rex.W xor cmc mov lahf mov sub out pop movabs cmpsl ficoml cwtl pop rolb (bad) test mov or jmpq jns sahf xchg mov rolb (bad) test xchg add sub data16 mov cmpsb in pop mov fs jnp jmpq mov scas gs pop jbe rex.RX divb lret lret jmp fcomps fnstcw xchg xor add xchg cmpsb (bad) rorl movslq adc out adc ljmp rcrb loope jae (bad) cltd data16 loop fsts (bad) (bad) in fs vdivpd clc sbb pop fidivl pop jle outsl orb (bad) pushq mov test leaveq xchg rex.WRB cltd pop (bad) fimul mov sub (bad) shll out loope (bad) imul (bad) enterq xchg movsl movslq imul push test fisttpl lret (bad) (bad) lock rolb and or push sahf loopne out and pop mov mov (bad) (bad) outsb pop push cmp in mov push lret (bad) cltd (bad) sub pop imul (bad) rex.WXB rex.R rex.RB mov imul mov movsl mov pop sbb fdivs stc push pop or mov (bad) rex.B and mov (bad) xor and (bad) jle imul (bad) pop jmp std js fucomi cltd pop adc (bad) (bad) or xchg or rex.XB rex.XB insb push jrcxz sti sbbl pop lods fsts in ds adc mov and mov (bad) clc je pop jp (bad) cmp (bad) jle push pop xchg mov pop jb fsub pop rex popq data16 pop (bad) rex.WRB jnp jae pop (bad) xor (bad) push sbb lods (bad) jno mov xor xlat rex.RX rex.WR loop cwtl mov fidivrl insb cltd pushfq pop pushq imulb cmp and cwtl mov cmp and (bad) or rex.B and mov pop test xchg and int ds add and (bad) movabs xlat out je pop jmp (bad) insl jne xor (bad) rex.WRB rex.B cmp ds mov add push sub add cltd addr32 (bad) mov movabs push push (bad) rex.WXB push mov sub jrcxz pop pushfq pop (bad) (bad) and push repnz xchg mov (bad) sub (bad) pop add lcall jrcxz adc and adc (bad) in sbb xor rex.RX rorl or push (bad) pop retq push in mov (bad) sarb xor shll movabs add (bad) pushq cmp rex.WX jns movabs xor pop pop or jl jl lea movslq vdivps xor pop mov movsb rex.X pop pushq cmp jmpq outsl sbb sbb mov sarl (bad) mov scas jbe pop (bad) rolw jae (bad) mov xor or stos cld imul xor int es jg rex.W rex.WXB rex.WX retq cmpsb cwtl or sbb out in loopne out pop cmp pop mov or pop (bad) xlat loope adc lret jl cmp xor fiaddl in rex.WB rex.R popfq test fdivrs callq (bad) repz mov fs movabs mov movsl pop (bad) rex.X loop and push or mov js (bad) xchg xchg pushfq (bad) in negl (bad) loop popfq or test jno (bad) (bad) sbb pop icebp mov movslq mov mov (bad) mov repz rex.RX (bad) movsb cmc test outsb sbb lret cmp gs (bad) jg (bad) lret and pop movabs popq sub or rex.X movslq retq (bad) movabs xchg mov jg movabs pop jnp mov out jns movsl lods out pop mov adc mov data16 pop (bad) cmp in pop sbb leaveq mov sub int3 xchg (bad) cld test mov cltd nop pop movabs fisubl adc pop rex.XB fs cmp (bad) sti cmpsb shl jbe sub or pop movabs xchg outsl push jns rex.W pop (bad) adc rorl cwtl mov fistl cli pop rex.X not pop callq icebp sub ss mov pushfq (bad) loopne (bad) pop ficomp mov add xchg and std loopne rex.R (bad) int pop mov (bad) ja fist mov sbb mov rex.WXB rex mov out stc movsl (bad) pop decl pop outsl pop jno pop lahf fcmovbe cmc cmp push sbb out mov jbe jns movabs pop pop jo test xchg popfq fwait adc and (bad) out xor add mov (bad) sub mov sbb fcoms (bad) stc rex.X rex.WRXB fistpll out sbb js adc cltd pop rex.WRX mov (bad) icebp rex.X jne out test movabs push mov (bad) (bad) shr (bad) fs rex.R add (bad) clc pop popfq mov scas jrcxz movabs out (bad) pop add scas scas pop sub repz ds lea xchg adc (bad) lods adc insl pop sbb (bad) cltd pop rex.WRXB movslq mov xchg cmpsl sub in iret add xchg push movabs and mul jmp test rex.WRB lret pushfq lods test jge (bad) movsl add insb loopne (bad) pop retq sbb jo pop cmp mov loopne or iret sbb jbe pop fs push or test (bad) in rex mov and pop pop test rex.WR jmpq fs rex.RXB sti xchg in cmp pushq in lea sbb callq sbb sti sbb jbe or mov testl fs xor rex.RX (bad) and push (bad) pop jmp sub (bad) movabs mov add (bad) mov jb adc sbb pop pop jnp pop (bad) retq rex.WR xchg and (bad) hlt clc (bad) pop (bad) jmpq (bad) movabs loope pop hlt xor roll mov pop nop out xchg rex.RX rex.RB int3 jbe adc mov movsl rex.W pop push lret xchg sub jmpq cli rex.WX jge movslq gs lods cmp (bad) ds mov pop sbb xorb rex.RXB pop adc push fisubl sahf (bad) jns (bad) mov (bad) mov rcrb rex.WRX pop pop insb gs lock movabs jbe (bad) (bad) and (bad) negl ss movsb (bad) testb add sbb sbb xor rex.XB outsb rex.WRXB rcrb xchg lahf jmp cmp rex.R (bad) (bad) movabs rex.WB rex.WRB out adc mov pop adc mov pop mov lods sub pop cmp (bad) and je mov imul js rcrl mov lahf gs xchg imul push (bad) fwait jrcxz push sbb jbe (bad) rex.WRB or lret movsb (bad) cli (bad) rex.RXB lods cs xchg sbb nop sub and rex.WRB je fdivs shll loopne insl xchg imul rex.XB add sbb xchg pop pop sub imul push negl sub rex.WB rex.XB data16 pop (bad) xchg in gs xchg (bad) rex.WRXB pop xor and es test rclb pop (bad) jrcxz sub pushq push adc pop in jns (bad) sarl scas pop rex.WRB rex.WXB repnz (bad) adc pop (bad) jne (bad) retq pop (bad) loope imul test movabs rex.WR rex.X rex.WXB jg iret add pop jns sti mov out mov sarb mov data16 xor (bad) xchg movsl xchg cmp mov or pop imul pop jb pop mov cmp push xchg mov rex.WX jbe jp (bad) mov xchg (bad) test rex.W pop icebp xchg lret (bad) (bad) cmpsl jmp pop std repnz pop rclb mulb (bad) movabs repnz pop fstpt add in lods (bad) loope cltd shlb movsb sbbl fistp pop (bad) lods (bad) pop loop (bad) out pop jmpq push mov push cld outsb mov jrcxz ja pop lret pushq mov je cmp shrl in or mov (bad) sub (bad) iret (bad) rex.WR rex.WRXB js movabs mov jnp mov mov clc or (bad) out fwait rex.RXB (bad) pop xor loope flds and (bad) fwait sub (bad) in adc loopne pop sub pop mov mov xchg rex.RX ds movabs sub (bad) xchg (bad) lock mov jbe rex.WR add xor fsub (bad) rcrb data16 rex.RB rex.RX (bad) mov (bad) or in out popfq xor (bad) out jbe hlt pop fldt addl rex.WRX lods jbe mov cmpsb cmpsl lret movabs (bad) pop fs mov cmpsl movsl jno (bad) rex.RXB out fild (bad) popfq js mov scas outsb notb mov cmp pop cmpsb movabs mulb rex movabs addr32 pop mov add sahf lods rex.WRB and mov pop (bad) fwait pop and (bad) sti outsl pop jmp loope mov jae hlt jns sarb fbld (bad) adc loopne es loopne (bad) pop lahf sbb scas mov lock sbb retq rex.B pop add je jbe (bad) movabs jns rex.X and sti sbb fwait enterq pop jns cmpsl cmpsb je and repz xor (bad) movabs xor imul (bad) add xchg (bad) sub pop and push pop (bad) lock rex.WRX (bad) sti push fcomip xchg pop and xor pop and sub pop sbb xchg mov (bad) sub shlb orl sbb out push jo (bad) (bad) mov sub pop ja mov fiaddl mov mov adc pop mov (bad) imul (bad) fwait divl nop je xchg (bad) xchg movsb add add fdiv movslq retq and xchg rex.B jbe jne popfq gs rex.WRX int pop xchg xor loop sbb mov lods pop jb add pushq sub scas pop or out (bad) push pop (bad) xchg jrcxz mov pop adcb and cmp mov pop (bad) adc es and add pushq adc (bad) pushfq or ja pop cwtl pop mov outsl pop loope pushq (bad) fs sub cmpsl (bad) xchg roll movabs rex.WXB mov (bad) gs movabs jrcxz data16 sub pop xor mov in icebp (bad) xchg rex sbb test or pop jmpq in add ds movabs jrcxz (bad) xchg jnp loope (bad) sbb (bad) xchg pop xchg mov mov jns adc jno,pt mov pop and stc std sbb imul pushfq fstps adc mov pop (bad) jo xchg cs sbb stos (bad) pushq fcompl in adc add shr out (bad) insb pop jns movslq cmpsb sbb in pop outsb mov lret stos pop std and out add (bad) xor xchg data16 sarb fnop (bad) pop pushfq roll (bad) push lret pop cmpl adc and pop rex.XB pop test xchg outsb sahf (bad) (bad) jrcxz es add add pop mov cwtl jle pop pop andps pop movabs mov (bad) ds (bad) flds sub mov (bad) adc (bad) sub gs pop cmpsb pop pushq mov mov (bad) (bad) jmp and lods movsl icebp adc retq popfq lods xchg rex pop pop cmp xor pop cmp pop adc (bad) gs insb mov rex lods mov pop jge repnz ds cmp (bad) jl in sbb add and mov loopne pop jbe ds (bad) and rex.RX (bad) jno imul fimul pcmpgtd (bad) retq fs (bad) (bad) jle imul data16 xchg and xchg ds (bad) sbb mov pop mov (bad) xchg sbbb cmp push movslq cmpsb cld (bad) popq imul stc movabs rex.RX callq jo rex.WRX xchg scas sahf (bad) loop fisttp jg pushq push pop loope jno stc push sbb add rcrl pop cli pop scas xor xorl adc and enterq ss sbbl or pop sub sbb data16 mov add (bad) mov (bad) repnz data16 out gs fcompl pop pop mov add xor pop (bad) lret scas cmpxchg xchg fs pop clc cmp and fnstcw (bad) cmp movabs out and repz or cmpsb sub pop enterq pushq int lahf sahf (bad) xor pop icebp movsl fcompl xchg movabs lods stos imul jne cmp imul mov rex.WB out push and es imul jl add cld lock sub movb add mov and (bad) loope (bad) mov sbb (bad) add pop sub andl nop pop in cmp adc lea xlat (bad) cmc data16 int add ja cmpsb pop cmp rex.WRB rex.RX rex.X imul repz in fs jbe xor (bad) cltd cmpsl sub pushfq rex.RB movabs negl jge pop or lods fstpl jle cmp sbb mov (bad) shr pop pop mov lods add fcmovnu cmp jnp movsl pop out or stos sbb cmc rex.WB ss cmpsb movsb mov (bad) mov and es icebp pop loope scas mov xchg (bad) add fisttp jge rex.R (bad) xchg pushfq outsb retq lea sbb std (bad) pop (bad) out xchg pushq movabs cmp pause pop int3 (bad) iret shll xchg cs rex.B insb movabs sub (bad) xlat cmp rcrb movabs push (bad) (bad) adc nop roll rex.WRX jbe jg movsl rex.RB and shl pop loopne cmc pop mov (bad) clc mov pushfq sbb mull fsubs sub pop sahf outsl and movabs mov mov and fs xor adc jge rex.B out lods or movabs mov (bad) lods adc rex.B loope lahf (bad) jae imul (bad) out movabs sti (bad) sbb sbb cmp jle retq imul fistpl movabs add stc rex.RX (bad) (bad) (bad) cwtl xchg (bad) movabs push mov scas data16 mov test pop cmp (bad) int imul jns and xor sti (bad) mov (bad) mov pop pop xchg or rex.RX push fs rex.WRXB push (bad) (bad) xchg sbb rex.WXB (bad) pop cmpl xchg insb out mov paddusb xchg movabs test loop xchg sbb adc (bad) leaveq push pop data16 cmova jmp loope outsl mov or icebp sahf cmpsb pop (bad) stc pop (bad) fs and ficoml rex.B pop not retq cmc icebp fwait pop lea sub sahf pop jge and pop mov jae (bad) and sub (bad) sarb clc jrcxz adc (bad) movabs pop add scas xchg int (bad) cli jbe mov mov jmp or fisttpll (bad) mov retq test (bad) sub xchg outsl xchg pop nop mov and xor (bad) lret xchg pop (bad) (bad) pop rol movabs movsl mov xor std data16 repnz pop (bad) mov (bad) xchg int mov (bad) or push jne cmp mov loope pop insl xchg push hlt sub outsb movabs in pushq movsb sbb and mov rex.WRX rex add cli pop out je gs mov (bad) jns imul in test (bad) pop (bad) sbb jo loope data16 out cmc (bad) movsl xchg (bad) (bad) sar rex.WX out (bad) stos add push test pop (bad) rex xchg int jle xchg and js in sub pop mov int cmp mov add pop stos cmp (bad) pop movabs cmp jno pop adc (bad) movsl test mov loop (bad) lret (bad) pop cmp pushq rex.WRX push (bad) frstor mov (bad) mov out lahf pop mov out imul (bad) js jbe cmp imul int rex.WB stc in cwtl pop lahf rorb rex.RXB ds rex.RB pop pop lods sbb adc pop loop retq sbb (bad) (bad) (bad) neg js stos and pop cwtl jp in (bad) or push xor hlt or (bad) jns push pushq nop or sub movabs sub jg (bad) test (bad) xchg mov movabs fbld (bad) scas stc mov add roll (bad) mov add fwait (bad) mov vmovq movabs pop (bad) xor je std (bad) add xchg popfq (bad) gs add pop mov sub add pop adc mov out rex.WXB pop (bad) jns cmp xor (bad) pushfq jp (bad) js popfq pop outsl (bad) rol (bad) ja (bad) xchg adc sub rex.WB stos and and sbb push data16 (bad) rex.RB jrcxz jbe cwtl mov rex.WRXB pop sbb jb xor (bad) sub lret or (bad) pop jno cmc mov sbb mov add loop or sahf adcb loope or and add mov (bad) sub loopne out sahf je (bad) lods mov pop jne mul (bad) jge addr32 movsb mov gs (bad) (bad) sbb (bad) pop es vcvttsd2si repz (bad) jl imul fisubl fs pop andl (bad) cmp rex.B or subl rcrl (bad) pop mov pop push (bad) xchg sbb shrb fsub pop (bad) rex.W mov cli pop pushfq (bad) (bad) mov mov (bad) pop rex.WR jne loope in or add sub pushfq and mov lods negb fbstp pop sbb ss and mov rorl pop push (bad) sub xchg cmp gs sbb (bad) adc addr32 (bad) fistp or je sub (bad) out loope push pop xor (bad) imul sub mov shlb xor (bad) loopne sub jp mov fnstcw mov movslq cmpsb (bad) rclb (bad) pop pop sbb lret mov cmp (bad) mul push xchg test es adc bnd pop loope rex.WRX rex scas mov mov mov roll pop pop rex.W (bad) repz or (bad) pop rex.R pop sub adc xchg fstpt mov (bad) sbb rex.RX int3 in pop xchg mov movslq (bad) pop mov rcll (bad) sub jbe and push mov retq sahf xchg pop jrcxz mov xchg mov push jbe pop add sbb outsb sub movabs add vdivss lret and lsl adc adc fs pop mov movabs imul roll test out (bad) pushfq jmp rex xchg rex.X xlat xlat movabs pushq xor in in ja sbb pop jmpq incl xchg cltd (bad) (bad) jge pop push and sahf nop xchg (bad) ja sbb (bad) (bad) leaveq cmpsl (bad) push and pop fiadd pop mov sar or insl xor pop pop shlb adc xor (bad) stos pop mov pop xchg fs add xchg pop pop imull adc adc (bad) nop test and jo in addr32 fstpt jmpq sbb loopne (bad) icebp (bad) pop or rex.WXB xchg imul mov (bad) jns pop (bad) mov sbb jo repz (bad) cmc pop lret and jb xor pop cmp fstps (bad) rex.WXB (bad) (bad) push or pop (bad) (bad) imul ss add jrcxz iret out cmpsb xchg fisub push pop pop rex.WRB (bad) repz rex.WXB out lret pop fs or mov add in (bad) callq and pop imul xorl pop rex.WRXB (bad) pushfq (bad) in enterq (bad) or xchg xchg jl mov fbstp rex.WRXB fdivl mov in shlb std push push xchg outsb rex.RX rex.RB (bad) and pop pop or insb add cs (bad) mov pop movq add movabs and loopne (bad) cwtl pop out js in sub pop sahf jg lahf sti (bad) xchg push (bad) pop pop or fldl fistp mov (bad) jge add adc adc (bad) jrcxz fisttp fwait data16 fistp stc int3 (bad) (bad) jle (bad) movslq sub pop rex.B push (bad) pop jb mov xor sub (bad) mov outsl cmp stc sbb jns pushq jno rex.WRB test mov (bad) jrcxz ja fiadd sbb (bad) in pop jo mov xchg loope xlat mov pop test sub scas popfq es and and movsl stos or jo,pt (bad) int3 pop xor jle (bad) mov mov and push add mov xchg retw fs lea (bad) scas jge pop adc movabs sbb cmp (bad) sub push xlat stos pop outsb jnp and pop and in sub push mov pop (bad) (bad) jle (bad) retq hlt pop pop (bad) cmp adc sub xor jge add mov pop xor popfq xor out pop addb rex.XB or push in stos pushq (bad) cmp xchg or rex.XB sbb (bad) (bad) in (bad) in add jae imul mov pop mov (bad) mov (bad) rcrl rex.X out add std (bad) in pop xor cmp pop (bad) xor scas cld or (bad) xchg mov jp mov movslq insl out xchg sub or mov (bad) retq out pop fsts push (bad) pop ljmp (bad) mov pop cmp cvttps2pi outsb and cmp cmpsl sbb xchg pop jle pushq adc and ja xchg test (bad) xchg rex.WRXB lea add xor fadd pop jge movsl mov ds rcr pop (bad) test rex.WB adc mov mov xchg movabs or outsl (bad) negl adc (bad) loopne adc fadds retq clc pop cli cmp (bad) add scas and sahf movslq push leaveq (bad) add pop xor (bad) sbb ja sbb gs sbb pop sub and rex.WXB fldcw movabs (bad) jg sub imull pop stos rex.WXB (bad) fucom or pop fcompl (bad) and scas and mov and sub pop (bad) rex.WR rex.WX sbb outsb cs cmp rex pop lods xchg pop fxch mov push es pop mov pop lock subl fwait ja mov loope xor pop push (bad) je pop (bad) rcrl adc pop outsb hlt repnz fildll xor add rex.WRXB gs insb pop (bad) movabs pop pop cwtl xor xor outsb sbb sub in rex.WB pop push int3 (bad) (bad) and enterq xchg jl leaveq (bad) and push mov cmpsl cmova add retq pop in xchg gs pop (bad) pushq sahf xchg rex.RB rex.WR (bad) pushq adc push (bad) (bad) repz (bad) jl (bad) jg cmp pop mov rex sbb and xchg add (bad) mov (bad) mov and sbb fcmovnbe rex.WRX push rex.RB pop sti push in icebp imul imulb rex pop loope retq (bad) rex.WRX rex.WRB (bad) sahf scas cmp cmc mov pushq jmp imul sbb cli pop rex.WXB jno movabs jrcxz jns lahf sarb xorl sbb pop pop xchg in test jbe std gs rex.WB cmp pop rclb rcrl push xchg rolb int3 cmp jo cmpsl clc movsb fs (bad) callq pop sub data16 adc es pop in rex.WB rex mov rex.RXB loopne mov pop es pop push sbb mov rex.RX (bad) cmp or (bad) xchg out outsl (bad) loopne and push in fwait adc pop jge add pop (bad) rcl sbb xor jnp mov xlat xchg rex.RXB pop mov jnp outsb pop jl loopne jmp adc mov add pop insb mov mov (bad) pop cmpsl adc or mov sbb (bad) fnop rex.WRX repnz (bad) mov pop movslq sub cmp mov fsts jb pop xlat lock divb jae mov out fs (bad) pop add jb sbb fs jns or sub shlb jo rex.WRB and rex.XB out mov jrcxz pop jge cmc outsl pop (bad) pop in rex.WRB add out fs loop xchg xchg adc (bad) pop int3 push ja rex.WXB rex.RXB movabs xor mov lock (bad) shll (bad) rorb addl add adc sbb fcompl mov push mov or stos add fsts data16 in mov jp fist (bad) mov cs fisub jnp rex.R mov xor jmpq rcrb (bad) out xchg (bad) clc sub pop psubq mov push ja outsb jp mov scas fadds (bad) mov rex.WR (bad) imul push hlt popfq jbe rex.WXB fnsave test or jbe repnz imull xor (bad) jb,pn rex.RXB data16 sbb addr32 (bad) (bad) or movslq popfq add mov subb (bad) (bad) sub mov data16 rex.WR in test rex.WRX rex.WRXB mov mov pop lret fiaddl iret push imul jl std popfq idivb rex.WXB or and xor in roll cmpsb sbb pop rex.WX test pop mov xchg rclb (bad) fwait xlat (bad) cs shrb pop je and pop sub fabs cltd rex.R adc ss loop push (bad) xchg mov mov negl notb mov cmp lahf rex.WRXB (bad) test add (bad) jb sbb (bad) or sarb gs clc rex leavew xchg (bad) rex.B rex.R pop (bad) (bad) add xor or mov push in pop fwait rex.XB mov or xor and xorl push mov sub adc retq imul in rex.WX lahf pop rex.R xchg (bad) (bad) (bad) cmp pop (bad) test cltd (bad) cmp (bad) pop xor or hlt adc sbb (bad) pop jl mov or or test cmpsb jge and pop (bad) xchg test adc pop test and lea push cli or pop add out movsl rex.RB rex.RX xchg (bad) out push pop sbb xor pop (bad) xchg ss bnd pop cmp enterq xchg xchg push fsubrs gs mov rolb movabs std cmp jae pop pop push (bad) sbb xchg add and out sti (bad) pop or jne cs loop push pop (bad) jmpq adc or pop shlb rex.B inc iret and movabs ficomp mov sti stos (bad) out movslq out jns (bad) jp jl (bad) adc movabs lods jb imul movabs xchg jg rex.WX fwait outsb insb in xor test outsb lods repnz rex.WRB pop jae xchg xlat pop pop pop xchg je insb pop add pop (bad) pop in jbe rex.RX popfq (bad) cmpsb sub (bad) out sbb (bad) jmpq stc loop sub add rex.WRXB insl pop pop or xchg mov movabs insb cwtl movslq mov pop pop and adc data16 add (bad) (bad) jl pop hlt (bad) mov sbb (bad) pop rex.WXB rex.WR pop in push lods pop (bad) xor mov (bad) ja pop xor sbbl jo (bad) xchg jnp mov pushq sbb int adc sub (bad) test rex mov pop sbb out rex.XB fwait rex.RB or sbb pop leaveq pushfq imul pop jmp fisubr rex.RXB sbb test (bad) mov pop rex.B repz stos pop cmp xor rex.RXB pop add mov or lret pop retq gs cmpsl rex.X leaveq mov mov add cmp mov xchg and xchg pop add movabs jmp jnp (bad) pop jle scas (bad) imul mov (bad) callq pushq pop jnp repz jrcxz js or pop callq (bad) pop and sub in add movabs xor jae xchg cltd (bad) stos imul jnp (bad) fs int sub cmp rex.WRB pop rcll pop (bad) insb rex.B (bad) divl pop (bad) rex.WRX (bad) repz rex.B (bad) mov xor sbb imul adc (bad) pop adc pop sub (bad) movabs fs jae (bad) adc movabs rex.WX rex.W jae (bad) fcmovu mov imul mov (bad) pop xchg in (bad) ja sub test push pop (bad) xchg lods jns retq cmp jg cmp stos pop int mov jl (bad) pop push (bad) cmp lea pop pushq (bad) cmc mov ss cwtl (bad) cmp add or rex.WB rcrl sub (bad) test outsb jge sbb ds xor cmp (bad) pop mov divb data16 in and mov out incb (bad) enterq pop sub stos rex.WRX shrb rex.WRXB (bad) loopne popfq fcompl gs (bad) pushq pop (bad) fs movsl jno (bad) (bad) mov lret ja add int (bad) and jbe ss pop sbb in shr pop add rex cmp movsl in test mov andq pop or push xchg or xchg (bad) pop shlb (bad) add pop jb or cmp jl repz cli mov ds fdiv icebp idivb (bad) rex.WRX fwait (bad) sbb mov xchg sbb mov idivb lret outsb xchg rex.WRB rex.XB imul pop movslq cmp add pop fwait mov (bad) xor leaveq cld adc shrb sub out xor sub xchg loope (bad) (bad) jo and outsb lods test sbb xor rex.RB pop sbb (bad) or push scas imul rex.XB push jle (bad) or rcrb pop add loop sub xor jge cmp rex.WRX (bad) xor mov push jbe cs add sbb jbe andl jp sbb repnz out rex.WRX mov cltd jb push cmc lods pop jae sbb xor cli jrcxz push fnclex outsl pop repz (bad) push cmp (bad) cs lahf (bad) mov cmpsb mov subl shlb (bad) pop data16 es std or mov test mov jp cmp jrcxz pop or in mov stc jge lods xchg xlat out push sub lret pop mov jp nop data16 mov in xor in pop mov retq or jrcxz (bad) rex.WX lret (bad) ja xor int3 pop in movslq and fcmovnbe cli pop mov rex.WRXB pop stos div (bad) and (bad) fs and jrcxz loop popfq cmpsl pop pop (bad) pop iret xchg shrl psraw loope lods rex.WXB add pop jmp cmp popfq jle mov pop outsl sub mov pop xchg (bad) in (bad) jnp retq adc mov adc mov in pop jmpq pop xor jbe int lret movsl mov enterq add sbb cs (bad) movabs mov stos (bad) pushfq loop (bad) enterw rex.X rex.WRX rex.WX pop fidivr jle or fisubr (bad) rex.RX (bad) push out (bad) cmp jp ja xchg push mov pop fisttpl and and stos mov mov sub callq lcall movabs rex.XB pop (bad) and xchg pop fcom pop fs out sbb movslq mov rex.WB xchg rex.R xor out or pop sti out movsb out pop adc sahf (bad) cmp icebp jb xor pop pop cmpl and shrl mov xchg movabs sahf and rex.R fnstenv ja (bad) pop or xor add lods (bad) lods jne (bad) movslq sub and std (bad) in pop and mov pop loopne add xor mov sub addl rex.R out mov in push xor fnsave pushq xor fs repz andl faddp xchg or pop adc pop int3 fwait movabs or xchg cmp and pop (bad) sbb jp (bad) out (bad) (bad) popfq add fmulp xchg movabs je (bad) movsb add (bad) iret pushq xchg sbb pushq xchg cltd lods loope (bad) movsb rex.WRXB and rex.R (bad) push int and pop hlt cld xchg repz rex.WRB (bad) fdivrs pop jnp pop shrb sbb xor or cmpsb repz fsubs cmp (bad) fwait rex.X pushfq pop and (bad) loop decb rex.WRX pop sahf rex.WRB pop xlat rex.WR (bad) fsub movabs movsb ss pop lods rex.WXB xchg cmp test and pop rex.WRX cs pop movsl push xlat sbb or pop out rex.WRXB mov mov (bad) scas movabs adc mov fistl je fisubrl hlt fwait add je rex.WRXB in test imul test push lahf mov add (bad) adc fsub (bad) rex.W fisttpl jmp pop retq test adc scas pop gs callq xor ja rex fisttpll (bad) rex.RXB add (bad) icebp (bad) (bad) push sub sbb std mov rex.WR xor retq and and cwtl (bad) shr fs rex.WRB scas lret sbb cmp (bad) rex.WX (bad) add (bad) cmpsl or movabs add xchg jge (bad) (bad) out rex.WRB mov (bad) jle lods imul in leaveq rex.XB insl rex.WR (bad) vpsrlw pop or mov pop adc (bad) decl rex rex.WXB lods mov movabs mov test ds jno pop fs adc outsb movabs sbb xor int divps jbe pop adc jmpq mov loop pop and xor pop movsl out rex.R mov sahf je ds (bad) (bad) xor pop push rex.WB addr32 test and mov sbb stos fs xor pop cmp fldcw cmc (bad) pop stos sbb xchg xchg pushfq cmp in sahf andl gs rex.WB sbb rex lock rex.X in ss pop xchg add shrb pop adcb cmp (bad) or jne and mov fisttp (bad) loopne insl pop and gs cmp test adc sar pop xchg je xchg (bad) fs data16 test popfq (bad) mov in sub (bad) jg (bad) fstl (bad) xor std rex.WRX push pop sahf loop pop pop je rex.WRB mov out (bad) jnp sbbl sahf pushq test test cli xchg add movsl cmpsb in pop pushq jmp cmpsl outsb pop mov (bad) sub or push (bad) (bad) fstpl in pop jl iret cmp xchg pop rex.RX xor mov pop int mov movabs lods push pop movslq (bad) pop (bad) push and pop rorl test (bad) jmpq (bad) rorb xchg out loope outsl mov xchg mov fsts (bad) rex.RX (bad) loopne cmpsl in sub in sub jrcxz push and jno sahf sbb test cmc icebp scas mov pop mov jmp orl adc jb pushfq pop je cld ljmp adc out loop pop popfq mov (bad) fsubp pushq mov movl add pop jae cmp sahf data16 xchg pop fist rex.WRB adc subl mov cli rex.WXB (bad) sahf fstl (bad) push mov adc data16 insl fdivr movsb rex.XB pushq rex.WX in mov enterq clc repz pop ffreep jmp sub mov pop or cmp stc jbe callq in insb cli pop lock adc (bad) pushfq pop pop push sub rcrb pop shrl rex.R or and jb jo mov and and mov enterq retq data16 mov adc rex.RB movabs xchg out jl outsb jbe sbb repz movabs pop sub cmp ss cmpsl sub clc add xlat push icebp lods out (bad) rex.WRX fild es addl (bad) mov outsb rex.WXB (bad) xor sub mov (bad) jb rcrb add push fsubl cwtl pop sbb movsl lods push pop mov jns insb jle (bad) xchg or retq and andw fs push movslq jbe cmp xchg rcr sbb mov (bad) (bad) shll mov sbb pop pushq add rex.RX div push (bad) sbb (bad) add in loop and out loop jle outsb movabs pop jno out sbb adc xchg cmp movabs adcl pop push rex.WRX pop rex.WR data16 (bad) sbb ffree pushq out int3 outsl rcrl pop loopne xor xor in jle mov rcll push xor insl gs pop push mov adc or rex.RB fs (bad) jno (bad) xchg adc sbb movsl mov cmpsl (bad) pop (bad) xlat ffreep sub movslq xchg mov test or (bad) (bad) pop test pop adc out push sub add cltd pop testb and (bad) out sbb xchg (bad) xor (bad) jbe outsl sahf mov rex.WRX cs out insl rorb jp and mov add scas rex.RXB lahf rex.WB and or clc sbb cmp pop rex.WB sub lock (bad) xchg (bad) pop (bad) xor (bad) test or in pop mov pop loope jl add clc mov xchg cmpl pop loope,pt lahf (bad) (bad) pop (bad) fwait jrcxz xchg push push je fistl cmc mov int3 or mov (bad) lahf pushq mov push maxps pop (bad) pop iret movsl and lods stos rex.WRB pop mov rex fs mov std pop push out adc jno cmpsb pop lahf mov fnstcw mov negb ficompl xchg sbb movabs add (bad) retq fs (bad) lods mov (bad) (bad) add (bad) jle in or rorl fild pop jmpq jl xor lret mov pop enterq mov (bad) mov jne jo mov fstpl jmpq mov pop out mov test test pop fsubrp and (bad) or pop fildll and je movsb (bad) pop sub (bad) andb adc pushq pop jle xchg pop adc ja (bad) out icebp pop sbb jmpq cmp mov lea (bad) xor jle xchg mov fmull loope sahf sti add shll sub adc fiaddl in fstpt loop fs pushq push cld or (bad) xchg sub mov cwtl or jle xchg xchg in (bad) and out jle test sahf rex.WRXB movl pop cli mov movabs pop cmp xchg sub add outsl and (bad) addr32 and xchg rex.X (bad) repz xchg pop loop (bad) jb cltd (bad) jmpq sahf pop outsb pop popfq cmp pop movsb adc movsl adc (bad) mov jmp jrcxz insl jns andl (bad) mov cmp je pop (bad) imul pop fmuls xchg cmp rex.WRX xchg xor out sbb icebp jbe,pn fisubl scas add (bad) (bad) pop xor push ds mov jrcxz adc stos pop mov leaveq fstpl mov jno rex.B repz pop xchg mov pop add jno loop data16 rex addr32 xchg mov cmp fcomps add pop adc scas (bad) (bad) (bad) mov cmc pop (bad) adcl enterq addr32 cmp rex sbb rol (bad) scas test cmp (bad) movslq pop je jge in (bad) pop pushq rex.XB pop (bad) pop insl (bad) int jrcxz mov pop cmp pushq (bad) imul movsl xchg rex.B ss imull jmpq test pushq pushfq rex.RB xor cs sub fs (bad) adc movabs sbbl xor movsb jrcxz in je lret fildl sub leaveq lcall pop mov loopne decb xchg cmpsb retq xor adc add pop pop cmp in popfq xchg fs xor loopne (bad) cmp (bad) pop pop (bad) mov sbb pop movslq pop pop mov mov rolb cwtl rex.RB jle cmp pop rorb pop retq out and xor (bad) mov (bad) sahf xchg lea fs out (bad) gs cmpsb (bad) in scas pop lock xchg ss pop lret jrcxz stc movslq pop fisttp rol pop mov rcrl adc enterq push (bad) cli xchg movsb mov outsb mov (bad) cmc fbstp gs rclb pushq or adc cwtl push movslq add icebp rex.XB fidiv test (bad) fcomp push mov movslq (bad) (bad) (bad) (bad) adc push ds xchg jmp mov pop sbb add (bad) xchg test in (bad) lods pop and pop pop pushq enterq ss jl sub jne add pushq lods jo pop xlat mov pop sub insb movabs xchg (bad) push (bad) cs enterq push (bad) (bad) out adc cmpsw push movslq (bad) add push rex.RB pop cs sbbl and test pop fsubl lahf movabs pushq imul xchg (bad) xorl (bad) gs fdivrl ja push and movabs mov jb xor pop js movsl in xchg callq (bad) jns movabs push ja cmp flds (bad) (bad) (bad) insb cwtl fistp xchg (bad) and rex.B (bad) movsb mov mov pop (bad) pop mov jl and js (bad) cmp pop pop rex.RX (bad) enterq rex.RX rex.WRXB sub cmp mov (bad) popfq ds rex.WRB (bad) in mov xor jrcxz (bad) rex.B rex.RB in pop pop test jrcxz rorb and mov jbe std mov movabs jmp orl movabs out stos xor callq mov rex.WR in sbb sbb rex.WRXB (bad) mov movabs pop or or movabs rcrb notb jmp xchg jp test xchg rex.WRXB repnz addr32 xchg mov xor cld or sub scas jno rex.WRX mov (bad) sub in loop loopne xchg add pop or jo adc xchg int sbb lock adc (bad) adc mov int3 sbb rex.R or (bad) outsb (bad) mov pop rex.W add sub push pop pop push pop movabs movslq sub push cmp mov and xor test (bad) test sub (bad) pushq (bad) pop jrcxz sbb or pop mov pop pop stc cmp pop imul movsb (bad) pushq mov bnd ficoml repz fdivs cmp sbb sbb syscall pop cltd cs cwtl push lods enterq lods push mov pop movsb (bad) shrl rex.R lret (bad) retq pop repz rex.WRX push jp xchg cwtl je fs sbb add and insb lret add out (bad) jmpq adc add (bad) outsb and xchg lods out (bad) jns retq xorl rex.WB loopne adc jnp mov and xchg jo popfq sub rolb fucom loope or jle callq cmp pop xor adc lahf pop fcmovnb mov pop movsl and mov pop cli xchg pop imul stos xchg jl pop insl mov add mov movsl lock (bad) xchg js and adc push outsb xchg xor mov sbb push fisttp pop stc loopne gs adc (bad) retq fnstenv (bad) rex.WX data16 setb shr faddl (bad) sub jno es (bad) rolb xchg (bad) mov rex.RB fcmovbe pushq repz add fnstcw jnp iret repnz outsb in incb cmp sbb fs movabs jl loopne rex.X pop and pop rex.WX (bad) pop (bad) push clc (bad) jne xchg cmp jge pop jl stos rclb sbb pop pop cmpsl movabs adc scas (bad) rcrb cmp es sub xchg rex.WR sahf fsubl mov (bad) callq adc xchg jo sub pushfq retq (bad) cmp test out loopne int3 cmc sbb cmp gs jg xor push loope (bad) and pushq jne jle (bad) xchg imul or sub stc adc xchg fist jne hlt jne add lock (bad) rex.XB rex.WRX xor xor rex.RB retq cmp rol adc movabs sbb (bad) imul ds in js mov sub gs int3 jl (bad) push or cmp (bad) (bad) mov stos (bad) xor pushq out mov scas mov and pop repnz mov add (bad) movslq movsb gs enterq mov leaveq (bad) cmp or (bad) mov or (bad) rex.B xchg jge gs mov push (bad) vrsqrt28pd data16 pushfq cmp out pop pop ds xchg rex.R xchg rex.WRB lahf jmp cmpsb add or mov subl and pop jl mov add popfq pop imul (bad) pop (bad) jmpq (bad) rex.RX lods fldl lret and mov jb (bad) ficomp jo pop in cmpsb or out jo (bad) pop jrcxz pop mov rex.RXB fisttp jns sarb jl loope cs (bad) mov jle jo retq xchg lret (bad) stos test pop (bad) mov (bad) ss (bad) jmpq iret xchg pop add adc je and pop (bad) nop mov in andl (bad) push or (bad) cltd cmp out (bad) mov sub jmpq sbb test rex.WR rex.B (bad) and pop mov (bad) add adc movabs fiaddl sbb rclb scas xchg stc stc xchg ds mov pop adc testl xchg (bad) mov retq add movabs cmp (bad) (bad) xchg xorb out jle stos xchg and test jae in pop mov lea xor movabs sbb js pop add leaveq je in adc pop rcl mov jbe movabs push (bad) rex.WXB rex.W ss pop mov or movabs icebp movabs mov (bad) sbb (bad) clc add jmpq add gs (bad) mov adc or rex.B movabs (bad) (bad) repz sub (bad) pop lods cmpsl xorl xchg movabs (bad) pop (bad) pop fstps cs xchg (bad) xchg (bad) vlddqu xchg loopne adc outsl (bad) pop fist movabs pop in cltd (bad) or fnstcw adc movsb jns (bad) cmp jmp mov rex.WXB rex.WRXB rex.WRX js (bad) sahf callq pop sarl mov xchg enterq ss jae mov and pushq imul pop adc clc xor xor push gs xor cltd out std jbe pop mov rex.X (bad) rex.WB mov push rex.XB pop rex.B (bad) rex sub xor rex.WRB mov rex.X in (bad) mov popfq jg xor sti jle roll jmpq gs data16 (bad) rex.WR sbb fisubl popfw mov fadd pop out jb movslq xor xor pop loope pop jns loop add mov sbb cmp movabs rex.WR sbb mov fistpll fdivrs xchg pop and hlt xchg adc xchg iret in mov in mov pushq int retq xchg (bad) pushfq insl callq adc test es xchg (bad) xchg movslq push fdivl out (bad) and jp js add mov in jbe push (bad) movslq pop pop pop rex.WRX (bad) sbb pop mov adc pushq retq pop (bad) (bad) or xor pop cmp jp movslq callq movabs and (bad) xchg rex.WRB test (bad) pop mov (bad) sub jb pop pushq (bad) test xchg xchg (bad) and jb rex.WRXB incl xor sbbl stos cwtl movabs lock loope ja in push es icebp jae and jnp loop rex.WX pop imul and mov or xchg pop imul pop insl outsb fcompl (bad) mov pop pop sub pop push insb or xlat movsb cmc divb and push xor je cmpsb pushq mov rex.RB (bad) (bad) fdivs out fnstsw pop jrcxz (bad) int3 lea movsl push cmpsb xchg sbb cld sbb jnp push mov icebp or jp sub mov rex.WRB pop xchg pop pop movsb jo rex.WXB sub pop stos cmp imul movabs pushq xor clc (bad) jl stos mov (bad) xchg mov pop (bad) adc pop iret (bad) push jmpq pop fwait stos mov jns (bad) mov add and fdivr cmp cmp push std adc fdivl loopne loop mov push pop mov jrcxz (bad) cmp int3 sub test xor and cmp (bad) insb fidivrl (bad) mov xchg (bad) xchg shl pop (bad) mov pop rex.RX (bad) (bad) lea gs lret ja add fs mov jmpq pop cmp mov test pushq mov jbe jge xchg popfq in xchg mov int3 (bad) adc insb insl pop mov and lret xchg mov loopne sti cmpsl sbb movslq ficompl outsb fcmovnu rex.WRXB and jns (bad) and ss push mov rex.X adc pop in stc cmpsb shlb mov pop pop cld xor xchg sub add rex.WRB cmp test xchg stc int3 (bad) cmp (bad) shlb push sub cltd mov (bad) (bad) and (bad) pop lret cltd pop adc loopne sub sbb (bad) retq mov jbe test xor retq loop (bad) out (bad) lods ss pop rex.WXB mov pop (bad) cmp (bad) fadds fistpll pop sbb push (bad) fs ficomp cmp pop movabs pop pop (bad) test push jg jl pop jrcxz jle mov push pop (bad) or repz fstps and pop and mov shrb lret clc adc gs xchg push (bad) stos pop out ficomp mov rex icebp imul test pop cmp loop jmpq movabs rex.WR sub add pop adc sbb lret lret xor (bad) xchg nop jge (bad) pop movsb mov cmp (bad) jo test (bad) movslq or fidivr adc nop fs pop (bad) rex.WRXB data16 jno pop loope (bad) wbinvd pop movabs rclb sti movslq (bad) sti (bad) cld pop iret andl (bad) fst pop es sbb loop mov (bad) pushq and pop and sti pop sbbl out fcomip xchg movabs (bad) xchg movsl adc (bad) gs jbe fist pop mov push adc jp (bad) jg cmp jbe jno (bad) movsb add scas pop out push fsubs cmc push jle pushq (bad) sbb xlat out push rex.XB cmp cli loop xchg adc (bad) pop data16 jrcxz xchg pop fbld in or mov or push movabs loopne repz and push xor (bad) movabs cld push (bad) pushq jge mov add ficomp hlt push mov (bad) sub (bad) or lretw movslq adc mov jg pop and or sbb pushq pop lahf fs (bad) mov add mov sub imul insl fcomps (bad) nop push gs pop notb xchg cmp test mov xor jae cmc (bad) jle in (bad) jp fldenv pop mov stos or pop rolb pop rex.WRXB (bad) cs xchg fnsave mov loopne xchg (bad) (bad) sub jg sub mov mov xor lods jne pop xchg pop lock mov mov push test mov jo fisubr out or addr32 pop sahf test repz mov push imul xor pop cltd andl (bad) fs or (bad) sbb (bad) push rex.WR pushq pop in movsl xchg push es xlat fs push fcom rex.XB mov hlt jg lahf movsb push add xchg movabs (bad) push (bad) repnz andb pop ds retq xlat mov mov pop (bad) (bad) and add rex.WX mov pop sbb movsl jl and fcompl push xchg mov (bad) (bad) pop lret es fisubr sarb xor rex.RXB mov rex.WX imul loope nop movabs push rex.X (bad) lods mov pop jns (bad) fcmovnbe out rex push jno sbb pop movabs and or pop (bad) pop mull pop (bad) jbe adc cmpsb jl insb pop in shlw cmp (bad) loopne ficomp sub mov (bad) pop cltd rex.WRX and adc test pop adc movsb pop movslq jle test pop pop push mov sub insl imul out (bad) fisubl movabs (bad) push outsb adc mov pop test insl movslq lea clc adc cli cmp pop cmpsl out or pop std xchg adc rex.WB (bad) loope sub mov rclb popfq pop vaddsubps push jns repnz jle loope fldt push (bad) (bad) sbb je sub jmpq (bad) std imul (bad) lods (bad) retq rex.W pushq jrcxz ja (bad) pop testb pop (bad) sbb loop sub fsubs xchg mov (bad) test pop mov retq out or popfq xor jp pop cwtl gs int (bad) rex.WRXB jnp or (bad) loope (bad) icebp (bad) movslq jns and (bad) jno rcrl iret (bad) rex.RB rex.WR jmp or jno mov rex.WRX adc sbb movsl loope pop (bad) movabs pop mov jae fcompl in clc sbb xor cmpsb mov sbb jo (bad) in pop and sbb movsl pop add (bad) leaveq jns jge test mov or out cmc pop (bad) movsb (bad) or xlat cld pushq movabs sbb pushq rex.WR addr32 jrcxz adc retq (bad) (bad) test pop jnp ficomp callq retq or pop fdivrs mov (bad) callq sbb mov push loop (bad) je jb (bad) out js (bad) sub loope or (bad) (bad) (bad) jmp (bad) insb callq mov fwait xchg faddp icebp fbstp out pop jo out rcrb push (bad) test (bad) clc nop fs out jmp pop lea or sahf mov retq inc xor xor movabs cmp ja std sahf fdivrl rex.XB retq outsb rex.RXB jrcxz jmpq (bad) retq pop (bad) imul (bad) or pushq push push je insl fildll jle ja out add out (bad) (bad) rcrb imul mov adc jb,pt rex.XB lock cmp rex in jmpq mov pop out pushq stc loope pop out (bad) jb outsb jrcxz adc js add imul mov gs sub cld mov rex.WRXB jnp out je rex.WR (bad) xchg imul stos imul (bad) movsb pop push fimul imul callq (bad) in (bad) jnp ja fcomps neg retq ja xlat (bad) ja sahf and mov cli fidivrl (bad) (bad) (bad) and iret out mov mov retq movabs lret rclb sub fistpll clc sahf out je (bad) mov fisttp cmc retq jnp xchg clc je fbstp or repz push mov or retq and test (bad) nop xchg (bad) test out rex.R cmp imul fistp (bad) icebp fistpll pushq (bad) push callq jge es fs and callq or imul out push jb sti jmp (bad) jae sub retq rex.WRX in (bad) (bad) adc imul data16 retq retq out in (bad) (bad) int xor (bad) nop (bad) push cld (bad) movabs pop jge imul xchg (bad) in and rcrl nop test xchg sub or (bad) (bad) push xchg pop test imul ja outsl sahf pop cli je pushq jae cmp sahf test and and (bad) retq in pop fimul imul push negb cmp jb sarb imul (bad) fcoml mov fstl xchg nop (bad) callq (bad) test mov hlt incb repz xchg ja outsb pop jle pop adc xchg adcl (bad) incb fucom pop jp cld scas pop pop jle mov imul cld xor cli in sub sub (bad) rex.RB sbb rex.RB pop xchg push cli jl movsb enterq (bad) add retq adc sbb rex pop and xlat movabs xchg outsb cmp test pop rex.RB rex.WRXB rex.WRXB lock icebp (bad) ja pop iret add pop (bad) mov (bad) jmp xchg rex.RX pop (bad) movabs rex.WR fldt xchg cmpsb loopne jno pop out adc add adc fcomps push adc xor movsb xchg mov (bad) in (bad) jbe (bad) ja movsb popfq ftst pop jge lret adc int3 and push rex.WRB data16 (bad) (bad) movabs movabs adc mov (bad) hlt xor movabs jae (bad) (bad) or xor add sbb cmp jle (bad) jo movslq cltd adc push xor lods test in loope (bad) adc loope rex.R mov (bad) xchg (bad) sbb push pop or sub rex repnz pop in and decb pop mov fsubs adc mov pop (bad) addr32 fiadd rex.WXB xlat test (bad) push xor jl mov xchg rex rorl (bad) clc addr32 add orb sub rex.B xlat push mov pop (bad) mov rex.X (bad) js xchg (bad) cs test jmp pop rcll mov hlt jne pushq pop mov (bad) sbb or movabs in pop push mov xor adc clc or cwtl cs jmpq movslq pop lret outsb sbb rex.WR (bad) (bad) cli clc jge mov jb test xchg movabs xor fs fimull decb sbb loope (bad) not (bad) (bad) movsl mov orl in or test fwait cwtl movsl jge mulb rex.WR ds (bad) xchg popfq mov jbe rex.XB jne fs sar pop lods fldcw mov sbb jle (bad) movabs sub (bad) loopne fistpl xchg pop in rex.XB jnp ficom testb pop (bad) test decl push xchg (bad) mov (bad) mov or (bad) shrb enterq pop pop pop jge retq data16 cmp lret push mov lahf jge sub out (bad) movabs mov fs ds in retq sub sub test iret (bad) (bad) pop cmpsl pop jg jns rex.WR jl loop pop mov cmp or and in mov popfq (bad) andl jmpq (bad) lahf cmp js pop roll sahf loop xlat (bad) and std pop mov mov mov jbe jmp enterq mov push (bad) mov sahf sahf callq jg jmp loopne sbb lods (bad) xchg or pop in xchg xchg adc (bad) (bad) push fs xchg popfq and sub jg rex.WRX (bad) mov pop stos sbb xchg lods add out cmpsl movabs stos (bad) xchg mov mov pop pop lahf cmpsb cli int (bad) cmp add and and pop (bad) mov jbe xchg out and jmp pop push adc clc jmpq push mov mov (bad) (bad) pop cmpsl mov jb sub xchg ja (bad) test out lods lock gs rex.X mov adc (bad) lahf jrcxz mov rex.WRXB adc out in mov xchg rex.WX (bad) sbb pop rex.WX fsts mov rex.WX xchg push fldenv pop jbe sbb jno (bad) rex.WXB (bad) and (bad) scas pop shlb (bad) and rex es movslq xchg imul fsub pushq push adc rcrq sub xchg pop xchg loope pushq jbe and cmpl (bad) movabs mov outsb pop xchg xchg rex.RB mov pop out xchg pop movabs and mov out (bad) cld sar cmp push je and stos xchg fiadd data16 and and cmpsb jns rex (bad) out push (bad) (bad) sbb jmpq mov adc pushfq insl mov cli (bad) shl (bad) jns out sub shrb rex.RX (bad) insb movabs adc imul out cs sahf (bad) mov rcl mov xor out rex add xor push (bad) jo je,pn not adc repnz fcom cmc rex.RXB cltd pop rex.RB mov movsb or sti fisubr jp (bad) lods cmp push pop xchg not movabs jp (bad) jbe fildll jle rcrb or (bad) cli xlat xchg push fnstcw vdivps iret (bad) sbb movabs sub leaveq (bad) fbstp in jg xchg stos pop loop add and pop rex.RXB (bad) movabs pop loope adc pop (bad) pop jmp data16 rex.WR (bad) pop sahf mov or in mov pop pushfq outsb (bad) hlt sahf sti pop adc (bad) (bad) loop rex.RB jbe stos jge rex.WB gs mov movabs (bad) pop xchg jle fdivs faddl jmpq cmp notl (bad) (bad) or frstor adc and push jg rex.WX pop mov outsb cmp jmpq (bad) (bad) mov stos pop (bad) stos rex.RB nop pop or loop and adc sarb pop lods shrb sub jo pushq lret pop sti sub cld sbbl shlb pushfq out pop mov sub sbb icebp (bad) enterq pop xor stos rcll pop jns xchg movabs xor cmc and mov pop pop rex.R fsubr pop xchg pop movabs jrcxz or out (bad) pop jo fisubr pop movsl ficom xor (bad) pop xchg scas lahf rex.WB or mov xchg orb lea insb mov xor rex.B rex.WRX cmc sub vmovdqa addl ja ss pop pop cli out mov xchg cld pop movb jl (bad) add test pop jge adc icebp mov and loope rex.W insl (bad) cmp std sub sahf out sub push or xorl outsl push and mov pop fimull mov test jae hlt rclb test pop (bad) movabs (bad) gs hlt std pushfq fs rex.RX fwait mov xchg pop movslq lahf (bad) xchg ror jns test jl and and sti rex.XB rex.WRXB xchg xchg in movabs xchg and cmp fwait or jnp (bad) sub mov in mov outsb leaveq sbb pop sub rcrb sub adc pop pop sbb sub mov push pop fdivrl loope xchg movabs push xchg xor (bad) out cwtl pushq and pop fidiv (bad) stc mov clc pop rex.RX sbb sbbl test (bad) pop rolb mov fcompl and fs retq pop pop pop mov mov xlat mov and (bad) and jne rex.RX movslq outsb movabs movd and in retq xchg cmp pushq int pop out ds rex.RB cmp (bad) stos mov jp movabs fs clc loope and (bad) pop pop rex.RXB or lret repz or stc pop jbe and fs leaveq movabs lret pop cmp or loopne sbb mov rorl adc cmpsl (bad) lret pop push rex.WX push callq rex.WB mov pop pop lods (bad) fcoms (bad) lret test sbb jb retq int and and sbb pop movabs xchg pop fcompl test movabs push insb hlt fsubl mov js xor enterq (bad) cmc xchg std pushq gs pop cmp sub (bad) sub pop movsw movslq jno and push rex.WRB data16 mov push pop add movsb mov pop scas lods and clc mov loop in pop (bad) (bad) jmp cmpsb cmp pop mov jae (bad) add mov (bad) std push rex.WX and shll movslq rex.WRB js xor fmul lods fsubrp repnz clc mov adc (bad) cli rex.WRB movabs cmp rex.WRX outsl sbb pop pop lods mov fbld jmp mull adc hlt cld (bad) jle lret rex.RX sub stos imul (bad) ficoml insb pop gs pop (bad) (bad) lea rex.RX rex.X sbb gs (bad) in adc rex.WRXB insb sahf cmpsl and xchg pop movabs xchg rex.RXB cmp pop pop ficompl pop (bad) loop (bad) loopne and sbbb xchg xchg mov jrcxz (bad) cmpsb cmpsb adc cmpsl rex.W sub movabs insb jge outsb (bad) pop push jg sbb sbb xor pop lret stc lods and and mov cmp fistp cmp and adc (bad) adc test (bad) data16 sub xchg ja imul iret addl cs iret and pop rex.RX (bad) cmc sub or mov or jns (bad) stc (bad) pop pushq pop sub mov or push xchg and fs cmp sbb pop jb pop scas cmp jmp (bad) iret outsl mov adc out rex.WRX xchg fs in hlt sbb sbb jmpq cltd movabs (bad) sub sahf and mov rclb je mov pop pop lods sbb fbld shll jge pop and imul movabs mov push or pop (bad) sahf rex.RB rex.WRXB gs pop add sub cli mov fistpl push (bad) negl mov jl jp adc movabs push xor mov in (bad) jno sub mov pop xchg in and rex.WB or repnz outsl or push rex.WXB data16 (bad) mov test sbb xchg in rex.R stc xor rol sub ds cmpsb loopne mov cmp push xor and (bad) pushq addr32 jmpq and pop nop xor adc mov push movabs (bad) (bad) and fiaddl xchg shrl cli (bad) pop loope pop adc test stc data16 unpcklps push adc (bad) callq and or pushfq pop pop rorl cmpsb (bad) jge in rex xor (bad) adc push (bad) (bad) add pop rex add cmp cmp fs (bad) fs xor adc outsb lahf jmpq pop movabs vpshufd retq popfq sahf (bad) (bad) mov in and jrcxz (bad) (bad) jg xor ficom cmc xchg pop pop in callq stc adc pushfq mov popq adc data16 pop adc out je pop movsb adc cli jge xchg fisub retq data16 (bad) and movabs (bad) divps push fs nop mov pop and repnz push (bad) in fs sbb cmpsl or jb es and iret (bad) mov jbe (bad) mov pop pop jns jmpq out (bad) insl xchg jmp mov pop (bad) rex.WRB clc adc (bad) mov test movabs jmp rex.W movabs out mov or fs data16 push fldenv pop in mov jne lods jbe xchg or callq sub jrcxz (bad) pop pop jmp out (bad) lock rcrl jns xchg ds mov sbb mov add sbb push adc xchg (bad) mov pop pop ss adcl (bad) (bad) (bad) rex.X rex.WR jrcxz (bad) mov jno lods in (bad) cmpsb mov (bad) and movsb (bad) and pop test ss out (bad) jle movsl mov lret ds retq cli fistp pop outsl mov insb popfq sub (bad) pop xorl cmp rex.WXB rex.WRB cmc or and sub sarl leaveq cmpsb sub or pop pushq xor pop ja sbb lahf mov adc cmpsb add movabs jle rex.WRX fwait jo and pop add fistp xor sbb cmpsb adc rex.RXB xor lahf hlt sbb (bad) pop cmp xlat leaveq shl pop retq in lock (bad) (bad) repnz adc (bad) loop mov repz jg (bad) rex.R pop rex.RXB pop pop pop and (bad) jle leaveq movabs loope rcrl jge in mov xchg and fwait test outsb out xchg rex pop out (bad) fild out add ds (bad) add cmp pop icebp sbb adc fwait int3 stos mov data16 and and mov rex.WX iret pop data16 and and leaveq pop pop movabs and adc and (bad) ss data16 (bad) rex.RB popfq lret (bad) rex.WX sbb mov pop mov sub adc jle add pop jno pushfq imul add (bad) push (bad) outsb xchg rex.RXB loop mov xchg loope pop pop mov mov (bad) lret pop movslq (bad) pop (bad) test (bad) fisubl (bad) mov test sub fucomp (bad) sub leaveq adc lods pop add in (bad) rex.WB rex.WR adc gs sub xor test rex.R xor data16 jp test rolb mov ss sbb xchg rex.WRXB leaveq xchg rex.RB repnz pop pop test jle pushq xor fsub mov pop pop hlt movl (bad) (bad) (bad) mov (bad) in mov sbb adc imul cmpsl jle and cmp rex.WRX rcll sti nop fisub insl movabs sub mov lods rex.RXB fs jl fisub pop rex.WRB andl jne sbb mov lods (bad) (bad) (bad) mov rcrl pushq jle xchg jo sub loop fcoms pop shr in pop (bad) pop sahf movsl sub (bad) xchg pop adc outsb xlat jno pop pop shll retq and rex.R push mov push xchg (bad) in (bad) add jne cmpsb (bad) movabs pop pop sbb rex.WXB movsb jns xchg add mov lock jge movslq sub (bad) movabs es fisubrl ja jp rex.WB and mov mov pop jns mov int3 (bad) loop shll adc loope push nop xchg (bad) out push jbe rex.RXB jge and out xor rex.WR (bad) cmp addb jnp rex fs retq pop xchg xor jg in push repnz xchg (bad) out icebp lods fs add xchg (bad) sbb insl test rex.WRX pop cmpb (bad) sbb (bad) sbb sahf stos xor data16 sub in jb pop xor pushq pop (bad) mov sbb or enterq lret int3 pop outsb sub or xor pop jrcxz imul adc and pop (bad) in adc pushq stc (bad) xchg sahf cmp and jb adc cmp cltd and xor fdivp jle rex.R sbb rex.WX (bad) pop imul mov sub mov imulb xchg pop pop xchg push hlt pop (bad) pop rcll push rcrl insl in mov jbe mov adc jmp stos mov retq gs push xor jno cmp xor and pop pop in fsubl add pop (bad) (bad) sbb push fs test adc jg mov pop orl (bad) mov (bad) (bad) (bad) or pop sub mov or xchg pushfq cmpsb sub (bad) (bad) mov fs js (bad) jle xchg mov or gs cmp test notl lret pushq popfq loop pop rex.RX in cmc rex mov fadds pop in jne mov pop (bad) mov int3 sbb (bad) fs jns cmp mov cmpsb (bad) (bad) lea outsb pop rex.WRB scas js xor (bad) pushfq mov loop jns pop cmp and mov sub mov loopne (bad) cmc fistp lahf sti and cmp xor pop add pop sub ds and roll fwait (bad) mov cmpsl push xchg xor push pushq insl fldln2 pmulhw movabs xchg and and push (bad) sbb movabs outsl ja mov cmp pop addr32 neg sub jns in fldl cmp sbb mov mov (bad) mov pop and and (bad) sbb addr32 or rex.WR lods xor cmp mov mov (bad) std movabs sub jo (bad) negb insb (bad) jle data16 push cmpsb and and out cmp ds pop sbb rex.WB addr32 mov gs nop push xchg sahf rex.B cmp in sub jle and pop mov cld mov imul rex.WRX test pop pop add (bad) xchg or mov mov flds mov sbb jp pop (bad) (bad) fucomi pop mov jrcxz xor adc rex.WB pop in mov out movsb jle test pop movabs rex.RB fwait rex.WRB push pop adc clc jns fiadd ficoml (bad) pop stos mov pop rex.XB rex.WXB cmp mov je mov mov sub add fisttp or lahf rex.R rex.WX and in stc jne sbb cld imul movabs rclb jbe fmul sub mov cmp pop rex.WX stc fs enterq mov pop test (bad) cmpb vdivps sbb out xchg (bad) (bad) (bad) and ss (bad) lret mov pop pop negb jno jbe push repnz adc movslq push (bad) test cld xor andl jnp jmpq mov lahf insb (bad) pop gs loopne imul push ds pushfq test imul rex.WRB rex.W fldt mov push rex or fcomip insb out rex.WX rex.WR pop (bad) cmp (bad) data16 cld jmpq add fmuls mov xchg rcll xor (bad) pop (bad) jo pop (bad) sbb add lea (bad) sub rex.WRX iret sbb pop pop fstpt xor popfq pop adc lods rcll (bad) xchg xchg and jge pop jb,pn push ss mov add pushfq pushq test and cmc je (bad) push jg data16 jns cmp pop pop pop in pop out in push (bad) xchg movabs callq push jnp cmpsb (bad) xor (bad) movsl mov cs rcll jnp (bad) xchg rex.X test mov pop push (bad) lahf xor cmpsl jl cli loop movsb add rex.WRX pop (bad) decb in add pop and fs ja (bad) movslq rcr jrcxz (bad) cmp sbb cmc (bad) mov push push (bad) jbe movabs pushq iret pop (bad) jns repnz pop cmp (bad) rcrl xchg stos cwtl sub (bad) push xchg data16 cltd test adc movslq cltd pop cwtl (bad) lea pop lock rex.WXB jrcxz xchg sti pop callq add and rex.R cld lods rex.RX sub loop (bad) jo mov (bad) (bad) pop push sub insb mov sub in int test lods mov pop hlt pop stos (bad) rex.X scas cmp (bad) mov push jnp jno ss pop sub jb jbe and jae jl movsl mov movabs or mov push sarl pop fimul push add loope jge xor test rex.WX movslq push fistp pop adc mov clc jrcxz (bad) cmp fs pop mov sub test lret adc cmpsb mov (bad) mov xchg pop pop repz cwtl or (bad) outsb insl cmp decb cmpsb idiv pop lea fwait sbb adc roll (bad) and movsb mov movabs xchg pop xchg mov lods mov movabs add scas cmc cwtl in popfq rex.RB and cli rex.WXB xor pop ds lea sub (bad) add xchg cmc imul lock (bad) (bad) push sub sbb pop loop mulb data16 (bad) fs data16 je icebp ss xchg lock in fiadd cs rex.WRB std xchg movslq pop cmp xchg (bad) mov (bad) out (bad) movabs (bad) add movabs adcl pop (bad) loopne fldt mov mov cmpsb data16 sbbb loopne or xchg pop xor fisttp out iret jbe mov push add or and bswap test sub outsb (bad) pop cwtl lea or pop jg pushfq sbb xchg out push imul pushfq mov pop add sbb (bad) fwait movsl pop pop xchg movabs movabs pop pop rex.WRB pop scas insl or fstps sbb sbb insl xor (bad) sbb in movabs retq jg (bad) decb fsts (bad) or gs clc imul xor pop and es sbb popfw or rex.XB rex pop push pop frstor movslq insb fwait cmp (bad) mov lods xchg xor out test in jbe test in adc sbb pop fstpl mov movsb sarb sub cmc rex callq movabs cmpsb movsl pop jbe (bad) in xchg (bad) xchg jbe sbb mov stc sub xor (bad) fcmovu retq rex.WRX test lods mov and mov or (bad) repnz pop addb shll mov retq jrcxz (bad) imul rex.X adc pop xchg std (bad) mov movabs sbb outsb fimul (bad) cli lods in sbb pop (bad) pop imul rex.RXB movabs (bad) or cmp lret subl add (bad) cmp lods callq int xchg pop mov jg push pop jge pop add jnp leaveq data16 nop xchg mov pop movabs push push stos xor movsb nop enterq sbb pop (bad) sbb (bad) jb rex.RB repz pop pop pop int3 pop callq and mov cwtl sbb jbe adc pop (bad) gs (bad) cmp out cmp jmp rex.WRX rex.X sbb icebp callq push bnd jae or pop in rex.X and lahf push jae movsl nop cmpsb sub pop loope mov adc push pop mov pop movabs enterq mov incb push and lahf add mov xor fcomps adc pushq and pop (bad) int mov (bad) mov rex.WR pop (bad) out sub (bad) movl pop in cmpsl adcl adc pop mov sbb fidiv movabs jbe,pt xor retq cld cmp data16 and mov (bad) cmp cmpsb fwait imul pop mov (bad) mov js pop sbb pop pop sub rex.WRX xor popfq je cmpsb movsl pop negl out ja push in and add pop pop (bad) cmp fsts mov or stos rex.WRB cmpsb jmpq xor pop pop clc cmp mov retq jrcxz xchg movabs cwtl pop fwait (bad) mov sbb (bad) loop jne rex.WXB (bad) mov test rex.WRXB pop (bad) rex.XB shrl and movabs (bad) cmpsb test (bad) (bad) (bad) retq sub adc mov outsb and xchg cmp mov rex.WRX jmpq mov (bad) pop or pop jrcxz rex.WR shll callq (bad) fcmovbe mov rex push cwtl shr jne pop fisttp xchg rcrl imul pop sub pop in outsb (bad) push pushq add pop movslq scas movabs (bad) pop cmp adc or shll mov (bad) cmp rex.WXB ds (bad) rorl mov mov icebp xchg rorl push gs mov xor loope rex.RX xchg rex.WRX fs callq imul mov pop leaveq rex.R (bad) popfw mov gs (bad) cmpsb ja and insb sti (bad) pop (bad) pop (bad) cmp pop sahf je xor and data16 je add rex.WX fistp push (bad) movslq jle in cmpsb cli outsb out sub cmp insb pop rex.WRB rex.RX sbb jns pop (bad) sbbl punpckldq loope xchg fist pop jge pop out movabs pop (bad) clc test notb ficomp test (bad) pop sub (bad) mov rex.WRB sub stos pop xchg and (bad) cmp or test adc pop jg xor push pop (bad) sahf rex.RB adc cld insl jmpq lea outsb sbb (bad) (bad) pmaxsw loope pop xchg rex.WRX (bad) xchg jg fstps sub sub outsb (bad) rex.WRXB stos andb pop in rex.WX cmp pop je nop and rex.RX mov fsubrl sub leaveq cmp (bad) cmp jg rcrb add (bad) movabs hlt adc pop scas data16 rex.X push jle pop mov lahf (bad) stos loopne pushq data16 cmpsl es out rex.WRX outsb push sub mov movabs sub jmpq (bad) xchg sub mov pop ds loope imul (bad) jmpq outsb movsb movabs and in push callq pop cld je cmc rex.WR add loop xchg rex.WRB rex.R divb jbe jmp pushq pop shll stos xchg clc jp (bad) in iret orl cli pop cmp (bad) movabs xchg rex.WRB mov mov xchg add stos mov mov in sub fisubr pop pop xlat pop out sbb movabs pop rcrb and lahf mov stos cmp and add xchg repz pop loop add pop in divb in sbbb cwtl cli rex.R gs adcb loop icebp rcr add cmpsb rex.RB jae add pop xor and and rex.WRXB push (bad) mov jge insl mov or ds popfq and jmpq pop (bad) and pop pop xor xchg add pop (bad) cmp in (bad) and callq rex.X (bad) sbb setae imulb fldl enterq push sahf out adc sub sub imul pop or ss lock fidiv sbb fs (bad) jrcxz (bad) rex.XB lret ja adc pop and pop (bad) pushq sub lods or cmpsb fidivl cmp out pop movsb jmp rex.WRB loope out mov xchg pop fstps jl pop rex.WRB sti push pop lods mov jne adc adc sarb rex.WB pop mov pop sbb and (bad) push cmc test cmp cs mov jb jns xor rex.RX fbld rex.WXB (bad) add test mov jrcxz push gs jnp loop imul push sbbb cmp int3 sub adc sbbb xorl and cmpsb movsl jb jge pop pop rex.WRX pop push sub retq and xchg fucomip insb or adc (bad) jge add movsb mov jle,pt mov xchg sbb pop pushq fistl cwtl loope jrcxz jnp shll lods enterq mov (bad) (bad) push adc pop xchg jae in fsubs pop sub sub xchg xor (bad) and add xchg jo,pn loopne pop and (bad) mov lods pop adc xchg rcll test mov (bad) or mov pushq pushq mov (bad) pop movabs movabs mov imul test (bad) mov sbb out (bad) data16 cmp lods cmp adc fs je movsb (bad) add loopne sar xchg (bad) sbb mov sub xor std js jns (bad) iret xor add ficoml fcomps jp pop rex.RB data16 and movabs push (bad) sbb (bad) (bad) (bad) pushq jge mov (bad) mov pop (bad) leaveq mov rex.WRX ljmp sub (bad) pop (bad) (bad) pushq (bad) loop outsb mov push insb pop icebp fs adc pop js jrcxz xor mov pop icebp scas push xchg pop rclb sbbb or jmp sub subl loope and movabs movabs mov loope rex.WR (bad) and (bad) sbb pop and nop rex.RB fsts sbb push sahf jns stos xor xor rex.RB fisub jle,pn jmp rex.W xchg shrl jge pop movslq rex.WRX xchg or pop lock lods jrcxz fwait jge enterq xor mov rclb and rex.WRX pushfq pop in lock jnp (bad) sbb rex pop rex.WRB sbb movabs (bad) rex.WRXB xchg rex.X rcll lock xchg movabs sub (bad) incb lret outsb xchg out pop fist (bad) movslq lock mov nop or pop pop loopne outsb jge xchg test mov (bad) movabs adc pop cmc mov popfq rex.WB rex.RB (bad) scas pop add xchg jns pop mov pop int3 rex pop (bad) je rex.XB push movsb xchg fsubs mov (bad) sbb (bad) imul lret (bad) rex.X scas movsl icebp or (bad) fstpt mov cbtw adc adc loop movslq jbe cmpsb xchg cmp vmulss loope fs adcl sbb rorb loope test adc pop lock callq pop iret sbb (bad) jg lods repz jb loope pop xchg sahf and xchg data16 mov adc jg mov sbb pop stos fcmovb (bad) (bad) es or movabs rex.RB pop sahf out (bad) rolb mov xor loopne sbb movabs xchg pop callq test movsl xchg jp adc or imul mov in fs rcrl fistp mov cld int3 mov adc mov rex.WB add mov fs loope push addr32 (bad) nop in xchg iret mov cwtl (bad) in xchg pop cltd push loope lea rex imul (bad) fidivr jg sbb pop (bad) mov rex.RXB leaveq and (bad) lea stc rex.WRX pop in (bad) add nop pop pop fabs (bad) push (bad) pop mov cwtl xor outsb (bad) rex.WXB fstps lods and fadds roll pop in in add push and iret fs cmpsl test fistl rex.WRX fildll data16 sbbl fs out pushq shll or jrcxz out xchg and xchg lods or rex.B adc adc loope sbb insl adc pushq mov jo or pop add test jb jle pop push pop jno fsubrl mov lods xor pop or (bad) insb xor movabs js mov mov xchg push shrl (bad) int xlat in hlt (bad) mov xchg rex.WXB pop (bad) jl push fbld loopne or test rex.WX gs test (bad) pop rex.WRX jbe test jrcxz and (bad) lret fstp mov (bad) or mov gs outsb iret repz and in test fbstp or pop pushq rex rex.RXB test (bad) mov insl outsb sbb adc rex.B rex.WRX (bad) (bad) rcrb pop and sbb pop (bad) jno loope jmp push sbbb data16 pushq and repz (bad) xor mov xchg out movabs pop test xchg gs cmp pop in xlat retq in mov movabs pop cmp push (bad) jbe ljmp in pop push rex.WRXB (bad) jmp pop sub gs int (bad) rex.WR push pop or pop mov (bad) sub cmp sbb mov insl jne xchg rex.RX cmpsb xchg sub xor jmp xchg mov sbb xor in pop push fidivl sbb adcb sbb pop in and pop sub xor (bad) (bad) pop je (bad) rorb (bad) pop fmul or mov rex.WR pop sbb jge xchg jrcxz mov cltd pop addr32 xchg loope mov je (bad) sub loopne cld sub or data16 jge mov (bad) sub clc (bad) jg pop rcr test enterq pop iret mov js (bad) int (bad) retq pop movslq pop pop and (bad) (bad) ds (bad) lret (bad) rex.XB pop jrcxz rex movabs rex.WRXB adc jrcxz mov rex.RB mov out sarl xor cmp xchg mov incl in (bad) (bad) clc rex.WRX and test sbb cmp xchg push mov fwait mov ljmp pop xchg (bad) sub (bad) pop xchg rcr xchg jge pop stos pop (bad) idivl cmpsb pop fwait xchg rex.B sub fidivrl imul pop push rex add mov loope mov rex.WRB pop xchg add cmp jge,pt stos (bad) mov mov xor xchg mov rex.B fild (bad) (bad) or xchg xor shll fidiv lea add and movabs add rex.WX in insl mov hlt (bad) jne movsb pop and pop stos pop ficomp sahf cli movabs push fdivrp or icebp rex.X pop out (bad) rex.XB (bad) sub (bad) pop mov andl outsb sub (bad) fs adc lods addr32 pop (bad) rolb pop js (bad) xor (bad) (bad) je pop or mov mov mov sbb cmp pop pop movabs in jo (bad) fldt pop ffreep fs and (bad) pop push cmp jbe sbb xchg in mov gs sub pop pop lods rex cmp xor pop test cmp add rex.WXB loop lock pushq movslq add add stos mov je rorb pop (bad) and jrcxz sub cmp adc stos xchg imul mov scas jge and pushq xchg pop test xchg adc (bad) pop cli ficomp sti rex.RXB out pop cmpsl stos (bad) fcmovnb ficompl pushq shl (bad) lods out pop pop mov xchg (bad) sbbl sbb rcrl cmova clc xor mov retq sub add jge pop (bad) movabs movabs imul mov test jno (bad) icebp clc pop pop (bad) (bad) (bad) rex.XB pop fs and rorl pop adc jnp jrcxz shrl pop (bad) xor jg test xchg pop adc jrcxz sub cltd (bad) movabs loope pop pop (bad) sbb (bad) pop jge mov jae xchg in testb data16 movsb sbb (bad) (bad) add leaveq in jle mov pop sub jbe mov and (bad) sbb enterq mov pop jbe lods test pop push movabs movabs movabs xor mov data16 cltd add rclb enterq or stc pop fdivl cmpps mov pop cmp pop xchg (bad) rex.RXB cmp stos in pop movabs callq (bad) rex.WX rex.RX pop cmpsb adc cs pop pushq sarb (bad) mov pop push cmpsb test outsb fs outsb xor jo or pop xchg rex.XB push jbe popfq adc add sbb out jmpq pushq xor int3 (bad) movsl lret sbb stos scas mov sbb fisttpl sub repz pop fisub outsl pop rcrb stc out push push insb pop and pop jnp sub gs jo movabs cmp jrcxz (bad) jnp jg pop pop sbb (bad) cmpl movsl add and pop vucomiss cltd lods and rex.WB pop sahf movabs mov jo pop mov movabs jg sbb jmp pop adc push pop xorl sbb stc jrcxz rcrb pop rex.WRX fs (bad) (bad) (bad) sbb adc jmpq pop ds hlt xchg (bad) (bad) out sub (bad) insl pop outsl adc or pushq and pop lods (bad) mov jle jmp adc vmovq cmpsl xchg push clc fistpl mov pop rex.WXB mov retq stos pop and pop (bad) (bad) (bad) insl xor pop mov loop (bad) pop retq rorl (bad) (bad) xchg jne sbb sbb out mov mov pop and loope fwait sub adc pmulhw jbe (bad) (bad) shl rex.WRX pop callq or sbb pop xchg movabs pop adc (bad) add jmpq popfw loopne mov in scas fs (bad) mov adc and rex.RXB pop rex.WRX (bad) xor sub jne retq (bad) cmp add lret sahf popfq xchg xor pavgw scas xchg pop (bad) stc and enterq (bad) pop movabs outsb jb imul pop (bad) mov mov jbe es pop jbe and (bad) rex.WB gs sbbl xchg rex.RX lock mov adc movabs jle stos mov mov (bad) (bad) (bad) pop mov sbb movsl push rex.XB fcmove mov mov (bad) lahf push pop loope rex.WRX adc jbe nop movsb loopne in (bad) mov cmp pop sub loop out cmc pmullw pop pop ficompl pushq jno jns xor lods outsl (bad) jl sbb callq pop mov or jbe xchg xchg pop pushq fwait jle and outsl (bad) (bad) (bad) (bad) (bad) fisubrl (bad) adc jle js sahf pushq fstpt (bad) and cltd pop push int (bad) fisubr and and movslq jrcxz movabs mov rex.WRXB (bad) mov push outsl and push fsubrp (bad) lahf fwait xlat jo in rex.WRXB fisubrl in and fs (bad) movsb (bad) in movsl rex.WR gs and pop xor or and (bad) xor icebp sub mov insb loopne movabs movsl fs pop push loop and out data16 movabs jb xor rex.R (bad) rex.W rex.WRXB rex.WRX stc fisub sub movsl cwtl outsb in movabs pop push movabs and retq movabs insb (bad) loope in or (bad) icebp sahf gs rex.RB movslq pop movabs (bad) lods imul mov adc (bad) (bad) (bad) mov fbstp push sub mov (bad) or pop movsb (bad) data16 loop and mov out rex.RX pushq pop mov hlt gs out sbb lock movsl mov rex.WRXB enterq hlt data16 rex.WR and lahf fist and push movabs pushfq fldenv and mov int3 movabs pop rex.WRXB rex.B shl movabs js cmp movabs jbe (bad) movabs in mov retq loopne cli pop jmpq movsl jb (bad) and sahf mov adc pop pop movabs and hlt loopne outsb and (bad) lahf rex.W xchg fcmovu jbe (bad) mov jno mov movabs (bad) rex mov rex.B and loop movslq movabs (bad) rex.B and shlb (bad) in movsl push xor fistp movsb xor in movsl (bad) movabs mov repz pop (bad) add adc mov mov cli pop sbb insb loop and (bad) rex.WB negb test and (bad) (bad) movslq scas mov movabs gs pop movabs and loope xchg xor (bad) cmpsb rex.WRB loope jrcxz in xor mov or push and and movabs (bad) add imul (bad) mov imul (bad) pop mov and pop rex.WB movsl (bad) cs sub outsb (bad) orb stos fs int3 icebp (bad) movsl imul (bad) out cmp rex.RX pmaddwd ds (bad) cmp stos xlat pushq (bad) mov mov imul push js mov sub out loopne movabs cmpb pop (bad) xchg jnp pop (bad) cmp fiaddl jp or mov shlb cmp pop callq and pop (bad) jns cmp jbe rex.X mov pop push add gs cmpsl lods sahf sub (bad) imul movabs mov cmp rorl or js sbb rex.RXB lods or mov and rex.WR push stc xor mov mov (bad) (bad) std rex.W (bad) xor fwait and (bad) lea (bad) pop and jg xchg jl rex.R (bad) (bad) (bad) (bad) cmc rex.RX (bad) pop xchg mov xchg rex.WXB cmp in lods rex.R (bad) stos shlb and jnp cmpb xor in ja clc xor loopne (bad) mov (bad) ja enterq iret rex.B jg movsb (bad) pop and repnz rcrl js callq jbe enterq stos and xor cmpsb pop pop (bad) mov rex.WR xor jp jmpq movabs cqto divps negl sub ss scas js mov mov pop xor nop fwait or push pop movabs fsubs lock cmp (bad) xchg or mov push pushq (bad) (bad) xchg jb (bad) movabs mov leaveq movsb in in rcrb xchg pop out adc pop add rex.XB xlat ficompl out or outsl (bad) adc fstpl add xor lret out fsubl or cmp movslq rex.B pop (bad) mov jb mov push std sbb rex.RX (bad) mov test (bad) ds rex.XB loope (bad) pop (bad) xchg pop jno pop es cmp rcll jbe sub rex.WXB out adc lret jbe stos pushq add or outsb clc (bad) pop retq rex.XB add add shrl mov and jnp adc cmpsl ror loope mov mov movsb jg mov (bad) outsb (bad) test and movabs sub sub and sub out push test xchg hlt outsl xchg push addl pushq gs fist pop rex.X insl sub (bad) xchg movabs (bad) icebp pop (bad) int cmp movslq xor xor shlb xor out pop mov push cmp out nop pop push jge cltd add rcl int3 movslq (bad) pop lret rex.RX insl mov jbe (bad) pop mov movabs pushq ss fsubs gs jbe adc rcll pop (bad) out add mov pop stc mov pop (bad) pop (bad) xor xor popfq lret jnp or jg (bad) (bad) pop test imul push or scas (bad) xchg and jns nopl fcomps insl mov rex.B lahf rorb orl nop xchg rex.B adc add mov (bad) test (bad) rex.WR rex.WRXB pop rex.B fs push test (bad) sub (bad) cmp (bad) movslq rex.WRB fs xchg in subl and or cmp (bad) (bad) mov rex rex.W gs imul rex.WXB or mov and rex.WX push icebp pop jp idivb lods loopne cmc pop loop sbb xchg cmp pop rex.WXB popfq imul pop sbbb fwait (bad) rex.WX sub lods mov in jrcxz pop imul lock mov adc jns rex.WRXB jl mov adc push jge xchg pop jrcxz push cmp jb or pop lods adc adc sbb sbb test repnz (bad) or mov lods fsubrp outsb rex.RX lock xchg insb or rex.RXB mov (bad) rex lock je (bad) jns and or pop hlt cmp leaveq cmpsb imul (bad) (bad) rex.WRX (bad) or movsl mov add mov rorl rex.X adc (bad) lea lods mov cmp out pop push (bad) rex.WX rex.RB in or xor int fisubl sbb retq frstor test pop lea int3 pop jrcxz mov iret insl xchg in (bad) pop or sbb sbb sub imul negl jo pop int and je jmp pop sti scas imul jmpq roll xchg xor (bad) mov cmp push (bad) (bad) pop (bad) out rex.WRX rex.RX rex.RB xchg in (bad) xor int mov jle sbb retq jns jnp sbb xorl (bad) rex pop jmpq shlb cld pop imul test pop adc jo (bad) ss mov rex in (bad) rorl sbbl and (bad) psraw mov pop (bad) push lahf (bad) in xchg ds push movsb fdivr andl pop add js push rcrl lock jrcxz (bad) or pop xchg push (bad) add in movslq fs push sub push (bad) callq (bad) adc (bad) in lret (bad) or add iret pop fcomps mov (bad) movsb pop rex.WXB out cmc rex.WRX pushfq ds sbb adc ss or (bad) (bad) jmp mov xor pop mov test mov (bad) cli jl (bad) adc scas pop mov (bad) xchg retq pop movabs clc repz stc mov icebp mov sbb jnp jp fcompl iret sub hlt in push shlb stos movslq cwtl add (bad) out (bad) shlb pop movsb xchg or (bad) mov lods in cmp mov mov (bad) pop scas xchg rex.WRXB cmp adc std pop rex.WXB negl movsb div or imul (bad) sub fs sub fisttp pop movslq fsubs or stos addl addr32 (bad) add pop and rcrb sub imul pop xchg sti xchg xor (bad) retq xor and jmp rex.WXB loop iret rex.RX rex.RXB cmp pop (bad) sbb out pop movabs lock adc xchg and out and fprem (bad) pop mov (bad) data16 rex.WRB fs cmp add pop div es (bad) (bad) (bad) movsb (bad) rol pop (bad) jmpq imul rex.WXB and jae mov mov scas jnp jne ss rex.RX mov add iret adc pop add out rex.X mov pop add (bad) (bad) movabs (bad) jnp pop or test mov mov jo mov fild cld xor add and in adc add rex.R lret rex.WRXB rex.WB movsb fcmovbe repnz fs mov or mov pop (bad) sub cs pop cmp lret and pop rex.WRB (bad) (bad) iret xchg pop cmp (bad) xchg fldl (bad) rex.R pop sub add sbb out (bad) cmpsq pushq push add (bad) (bad) rex.WRX (bad) pop loopne movabs (bad) rex.W and add jne rex.WRX cs sbb rclb and sub pop cmp sti retq icebp test or and mov leaveq pop pop rorl in xchg sub sahf rex.WR ja rcrb push icebp push retq clc pushfq jbe cld or ficomp cli (bad) mov pushq std mov xchg callq iret icebp pop rex.WRX and stos cmpsl (bad) scas mov (bad) jns sbb (bad) (bad) xor icebp pop (bad) rex.RB cld cs add (bad) mov rcrb in adc jmpq (bad) xor (bad) cli sbb add jrcxz (bad) rex outsl pop out xchg mov rex.B mov sub (bad) pop adc and and in pop shll mov mov cmpsl cmp out xchg (bad) jbe cmp add lahf (bad) rex.WRB outsb mov mov pop cmp test icebp pop cltd and pop adcl (bad) add imul movabs lods ficoml imul stos xlat out movsb xchg mov rex.XB rex.X jge rcrb or cmp adc xor or pop in cmpsb add mov cmp punpcklwd sub callq rorl mov add std cmp (bad) stc and mov pop (bad) movsl (bad) jp movsb (bad) xor (bad) fidivrl pop sbbb divps sbb and hlt pushfq pop in gs movabs movabs jmp sub rex.RX (bad) jge rex.RB fistp pop retq xchg add lret xor cmp pminsw jle jno and cmc and data16 cmp scas imul mov rex.RX rorl imul movslq movabs leaveq and pushq (bad) rex.XB rex.RXB fwait (bad) (bad) outsb imul (bad) or pop rex.WXB sub rcrb pop or pop jns sub (bad) out pop lahf push cmovne fnsave sub pop loop (bad) cs add cmp (bad) sarb jge lea lret jmpq rex.RXB xlat pushq (bad) mov mov imul stos in xor cmp imul jp and push pop mov mov rex.WX stos pushq mov xchg mov fidivl cmp push hlt (bad) out (bad) pop cmp pop cwtl (bad) jae and or movsl xor lock fadd sub imul sbb pop test in add xchg add sbb test sbb sbb in lret data16 or or mov lahf clc rex.WB rex.RX cmc repz cmp jbe sahf insb mov outsb and jbe pop cmpsl repnz test lock pop xchg scas pop insl (bad) callq add (bad) mov and or mov lret lods (bad) sahf mov jnp xchg rcll data16 (bad) push jb or rex.R mov adc out push pop sub out and je jg cli pop adc test and sbb ss rex.WRXB (bad) (bad) loope cmpl outsl pop sti lret js adc jrcxz pop movslq xchg mov or or lahf jb stos loop xchg (bad) scas cs out pushfq fsubl or rex.WXB loopne lock imul xchg clc (bad) jl loope rex.WRXB mov pop xlat sub pop jbe pop cmp jmp sbb jg lahf fnstenvs xchg (bad) stos jmpq lret mov mov xor (bad) pop mov (bad) (bad) rex.WRXB mov bnd addr32 (bad) fs jge sub or (bad) lret mov out gs and push (bad) repz (bad) (bad) stc xchg pop xchg xor rex.WRX (bad) mov (bad) rex.B (bad) fadds adc test or shll movsl and fild fucomip (bad) and jg (bad) mov fsubl xchg pop sub andl pop pop mov mov (bad) pop (bad) movsl add or insl (bad) in test (bad) gs adc mov sub decb mov push xor pop mov rex.WX sbb jge mov pop icebp sub in imul cmp (bad) pushq jno (bad) js mov hlt pop push sub push rex jrcxz push (bad) fiadd fcoms sbbl push sbb rex.RXB push enterq xor rex.WRB pop std imul mov rex.RB gs push rex.RX pop in (bad) rex rex.WRXB xor jno out scas and pop (bad) mov mov jrcxz (bad) push cmpsl mov push clc (bad) xchg sub imul rex.X pushq pop insb fist xchg add iret ja jmp pop bnd push fisub int lea add (bad) movabs jmpq rex.R xor pop nopl out xor nop stos pop (bad) cld mov cwtl xor cmc rex.RXB repnz jrcxz (bad) (bad) xchg mov adc pop push jne cmpsb scas xor (bad) out add cmp rex.WRXB pop lret xor insl ds cmp addb lret or adc and out sar jo stc (bad) data16 jb or (bad) (bad) (bad) pop sbb in xchg pop add and (bad) xor pop sub and outsb (bad) int3 (bad) stos add in cmpsb (bad) enterq xor stos xchg int3 in in out or outsb pop retq popfq loope or pop rex.XB stc test in sub sahf sbb fimul pop int3 (bad) sub (bad) scas outsl hlt (bad) je sub rex.X test pop mov sub sarb movsl mov xchg in scas rex.WR in sub (bad) and mov jle xor pop sub pop outsb ja or out rex.WB fs (bad) icebp mov and xchg retq sbb mov or (bad) jp mov out insl je,pt cmp xchg cmp (bad) pop pop lret cmc roll outsb pop in sub and (bad) loop add pop cmp adc adc xor (bad) fdivs sub test (bad) enterq scas rex.WRXB and push lock (bad) mov xor (bad) fisubrl (bad) repnz (bad) adc (bad) xor jle pop jp jae add nop mov hlt clc (bad) fstps fsubrs js cmpsl frstor pop movsl or pop sub mov rcl loopne and (bad) fisttpl out mov movslq jns rex.WR pop (bad) pop movabs leaveq mov imul sahf xchg sbb pop loope or mov jmp rex.X pop (bad) (bad) cmpsl or xor (bad) push jl mov pop pop (bad) mov mov movabs je in and mov (bad) mov test jl adc data16 (bad) insb int3 push lods (bad) push xchg rex.RXB (bad) ss mov mov fldenv xlat (bad) ja scas pop lahf stos insl (bad) and adc movsb sub rex.WRX (bad) mov pop xor pop imul pushfq sbb scas adc and andw (bad) pop mov cmpsl lret and rex.XB pop or sub fist pop xor jmp xchg push pop pop loopne in sbb movabs push jle mov rcr movabs movslq mov xchg pop cmp jp mov repz icebp loopne rex.WR push jrcxz mov cli rex mov ja rex.WX push gs (bad) pop rex.WRB rex rex.WXB sbb subl mov pop scas rex.RXB test (bad) mov cmp pop (bad) icebp stos and repz mov (bad) mov inc fsubrl pop (bad) ss pushq and xchg add and (bad) retq jp xchg pop repz rex.WB xor repnz jne pop frstor jns mov leaveq or pushfq movabs ds and lods js (bad) movabs jo rol xchg (bad) cmp retq pop outsb rex.WX lea sbb movslq push ds mov repnz lahf jrcxz (bad) pop push push mov (bad) push test mov mov xor movsb mov (bad) mov cltd lahf in (bad) movabs jbe cmp test (bad) (bad) movabs idivl xor pop (bad) (bad) push nop sti mov in rex.WB gs and imul sbb loop retq (bad) xor outsl jbe mov nop cmp popfq pop cmp adc sbb cmc faddp (bad) cld ss (bad) xchg cmp lret popfq movabs (bad) pop (bad) adc fildll pop iret adc (bad) (bad) out rex.RX gs push cmpsb data16 (bad) (bad) xchg (bad) jg data16 mov (bad) rex.R pop xor icebp sar adc mov negl lret (bad) xchg rex.WRX (bad) (bad) jnp pop xor add mov ja (bad) ds pop rex.W test rex.XB mov mov pop or ljmp jae fwait pop imul stos (bad) rcll add ds xor jbe jb mov (bad) in (bad) pushq add add and pop xor (bad) xor pop pop ds (bad) (bad) jg sub jmpq lods out rex.WRX testb test push mov pop sub je test pop movabs lods pop (bad) mov push je stos (bad) (bad) stc pop (bad) jp in in or add movabs and and je cltd enterq not lods insb pop pop cmc loope (bad) outsl pop or (bad) loop (bad) jmp (bad) jnp (bad) (bad) movsl jae mov (bad) in rex stos ds loope fdiv sbb mov retq (bad) rex.WRX (bad) mov outsl decl xchg movabs pop sub (bad) xchg adc (bad) pop rex.W jne retq and jno mov test pop rex.X in jrcxz pop movabs xchg pop rex.WRX ss vpaddq in or (bad) add pop sti and jrcxz (bad) movabs jae xor retq and (bad) (bad) jnp pop fild (bad) xchg or cmc pushq add pop (bad) or mov andl (bad) jge fidivl push out mov stos and (bad) cmp pop out mov nop jrcxz pop xor (bad) mov pop sub mov (bad) xchg cmpsl pop stc and mov popfq vmulss data16 mov movabs mov imul (bad) pop mov sub rex.WB ss sbb mov (bad) test and xor leaveq jnp jle je mov (bad) push cld mov pop lret sti lret pushq and nop rex.X sbb movslq int (bad) imul (bad) (bad) (bad) rex.WRX xchg cmp data16 mov incb (bad) rex.WXB rex.WXB gs cmp shrl stos out (bad) and (bad) jbe out cmp in movsl jbe adc loop cmc (bad) pop insl add mov jne or movsb mov rex.RB (bad) jb (bad) push (bad) pop rex.WX (bad) ficompl xchg (bad) rex.RB pop movabs sub (bad) jmp push fstpt sbb (bad) cmp (bad) je jns (bad) loop mov int (bad) xor pop add push (bad) cld pop iret (bad) lock movabs (bad) xor pop out (bad) rorl jg pop (bad) and repz movslq and xchg jo and jrcxz xchg enterq lods pop (bad) imul (bad) (bad) sbb pop xor not pop cli xchg mov jle mov mov std xchg fmull pop data16 test rex.WRX cmp (bad) rex.WRXB enterq jmpq xchg sub rex.XB rex.B (bad) xor rex.R clc pop jno pop data16 mov rex.X repz mov pop push divb (bad) pop add mov outsb sbb push pop (bad) cmp gs repnz jrcxz shll movslq jmpq ror jge int3 jmpq (bad) lods movsl (bad) jnp cld (bad) pop and (bad) cli stc in addr32 gs xchg adc pop lock fdivrs and cmc push jne test (bad) cltd (bad) rep (bad) imul loopne rcrb push (bad) loop pop cmpsl lock test (bad) and movabs fwait (bad) movsb cltd (bad) cwtl (bad) xchg push test xchg pop cli rex.WR or (bad) (bad) movabs adc (bad) test cmpsb mov jbe (bad) push (bad) jne or cmp xchg fld retq lret (bad) (bad) test jg pop (bad) int3 (bad) mov xor lods add clc ja in adc movsb cwtl add jne data16 lods push cmpsl scas frstor cli in pop test cmp mov xchg xor (bad) and (bad) nop in pop movsb and mov add pushq (bad) (bad) jle jp pop in (bad) pop stos out pop (bad) cltd lahf rex.WRXB xchg rex.WRB (bad) fidivrl and int3 rex.XB adcl rex.WR rol and (bad) sub pop push pop mov add mov out jg sbb and es pop mov testl pop stos rex.WRX (bad) (bad) enterq pop rex.WX (bad) (bad) outsb fimul stos insl ds and mov (bad) xchg ds (bad) (bad) js sub not sbb jrcxz std xchg rex.RB adc (bad) (bad) sub mov jmpq and pop pop sub cld mov xor rclb pop and (bad) cmp mov rex.XB cltd and pop js (bad) rcrl push rex.X cmpsl roll movsb outsl xchg pop movabs sbb fadd xchg xor (bad) pop iret rex nop xlat leaveq pop movabs pushfq pop in loop pop jge sub rex.RX fs (bad) mov (bad) lods xchg pop test mov pop in and movslq jne test loop je nop pop cmpsb jp fcmovu lret push mov adc repnz (bad) xor xchg (bad) sbb xor in retq add rex.WX movslq push movabs sbb and (bad) xchg pop leaveq data16 rex pop and popfq xchg and rex.W rcl andb repz pop icebp ds rex cs rcrb rex.RX addr32 out (bad) pop (bad) mov rex.WB rex.XB lea rex.X pop add mov xor out mov mov pop xchg pop pop jp cmp stos push loop pop movsb clc xlat (bad) xchg rex.RXB nop (bad) sti (bad) mov rex.WR cmp lret rex.RXB ss (bad) cmp in iret xchg test adc xchg std rex.RXB xor andl retq insl cmp mov in push ss sarb mov xchg fisttpll pop rex.WB fdivp iret pop jrcxz jae fistl (bad) pop rex (bad) icebp fs mov gs mov jno and xchg lret retq adc xchg (bad) cwtl fdivrl andb movslq movsl jbe je pop pop mov (bad) (bad) data16 fs sbb sub je test fwait enterw mov sub (bad) stos sti sub add rex.WR and (bad) mov jb mov push jne pop (bad) rex.RB rex.WX rolb repz pop rex.WRX sub (bad) mov xchg sub (bad) rex.WB (bad) mov fs pushq push sub outsl jae rex.WB rex.WRXB scas pop jmpq (bad) mov (bad) nop std ja shrb add rex.RX (bad) outsl push (bad) in mov hlt imul (bad) idiv xchg pop out outsb add (bad) push vdivpd test inc (bad) xor sbb cli loopne sbb pop (bad) (bad) loope shll pop xchg push sbb lock test push popfq add (bad) cmp loope add rex.WRX or push xlat in (bad) je mov pop movabs movabs fisttp mov divb pop outsl or movabs lods rex.RX rex insb mov repz jns test add movsb add xchg and mov loop lods rex.WXB rex.WRX rex.R add cli movabs xchg scas mov push (bad) lock mov and xor pushfq fucomip enterq mov pop add xchg cmp xor or jrcxz push mov pop rex.B mul mov mov sbb xchg (bad) or movsl stos test rex.WRX cli loop jo pop stos mulb in adc rex.R rex.RX test xchg xchg mov cmc cld jbe push int rex.RB cld clc movslq outsb fmull fs or (bad) pop xor pushq movabs pop cmpl jbe jp jae jo pop (bad) jns test (bad) pop (bad) mov or movsl mov cmpsb (bad) fsubs (bad) insl lret in and imul movabs pop shr xchg mov lock out add add mov cwtl cld (bad) (bad) xor jns rex.WRX jle scas (bad) adcl mov rex.X fs rex.WXB pop sub xchg sbb addl test (bad) rex.WRXB jmpq int3 mov frstor rex.WRX lock loope sbb cmpsl pop outsl in scas movsb push jo and sbb movslq mov sub js movsl shrb cmovae jp (bad) movsb (bad) (bad) (bad) ja lahf lods out pop xchg mov subb es and pop jge add popq movslq rex.WR and insl cwtl ds cld pop mov sbb rex.WRX rex.X (bad) test (bad) (bad) (bad) fwait push fild (bad) movabs andl out (bad) in test std sbb jg ja pop add movabs rex.B rex.WX cltd jbe data16 xor mov pop mov rex.W lahf pop out add (bad) mov cmpsb pop or (bad) mov rex.WXB jae xchg mov fcoml pop out rex.WX mov sbb adc cmp and icebp (bad) shr pop rex.WX fs (bad) rex.RX pop cmp cltd movabs (bad) rex.RX pushq incb mov xchg mov (bad) out outsb rex.RXB ss fsts pop loopne cmpsb jle sub (bad) xchg cmp mov rcl std cmp fldenv (bad) cmp rcl add pop cmp (bad) rex.RB ds adc negl test pop cwtl insb callq test cmp (bad) movslq xor cmp loop (bad) in xchg lea pushfq in hlt and ds (bad) and or fs cmp pop not movabs sbb and (bad) retq xchg std (bad) mov jp (bad) push scas rex.RXB pop nop (bad) icebp or cmp hlt movabs rex.WRXB callq sub sub leaveq push fnstenv sti (bad) repnz cmpsb jrcxz xchg repz mov fwait add rex.WB rcl imul cmpsl mov pop setno movabs (bad) mov xor callq push jmp nop test push mov cmpsb and (bad) sbb rex.R (bad) test mov mov (bad) out dec (bad) mov ds mov (bad) (bad) jns mov and pushq ror and add movslq and in cmp adc pop or (bad) fnstcw or sbb xchg rex.WRB mov rex.W ds cmc movsb pop jle (bad) sarb sahf sti mov and (bad) ja push fs xor jg out shr adc pop enterq jl pop pop stc pop (bad) repz adc pop sbb cmp or repnz (bad) pop (bad) hlt (bad) rex.WRX xor fsubrp push (bad) and sti (bad) xchg stos (bad) cmp adc rcr mov mov rex.W (bad) pop pop (bad) cmp (bad) jno push mov jae mov push fistpll data16 (bad) and pop xchg lahf xchg test (bad) add mov or rex.WRB mov add pop adc adc ja data16 pop cmpsb rex mov stc sub mov iret sbb push (bad) data16 sub rcr imul pop repnz (bad) rorl pop rex.WRB imul adc loopne add clc adcl jns gs push rcll rex.WR sub (bad) movabs cltd or stc jne fisttpll adc (bad) (bad) jbe fnstcw sbb or (bad) (bad) callq shrb fyl2x (bad) (bad) xchg xchg sbb rex.RX rex.WB pop pushq cmp loopne out pop addb test adc jl lret ja loopne mov or (bad) icebp out (bad) xchg (bad) mov add mov fistl out icebp out movslq imul cmp jno add movabs fsubp callq mov imul (bad) out loopne (bad) lock push jmpq jno and rcrl (bad) add mov fsubrl push (bad) xchg repz cmp addr32 pushq jo (bad) lea sbb std or loope lahf or stos movslq add movslq iret cmpsl mov adc movabs pushfq and xchg mov rex leaveq js cmp leaveq (bad) lods psllq outsb imul push test fbstp out sub icebp pop mov fxch jns imul cmp adc hlt rex.RXB ss adc lret (bad) loopne pop loope subb (bad) or add rcrl ffreep shl xchg xchg nop sbb orl mov mov cmp nop lret mov pop movslq cli lret adc push mov xlat (bad) jns imul stc sub movabs stc sbb xchg jg out sub push rorl (bad) mov out in out movabs ffreep adc addr32 xchg fild (bad) fisubl fisub iret (bad) and pop ja rex.XB in fsubrp cmpsl (bad) (bad) (bad) fucomip movabs xchg and addl rex.RB and and add ss fistp negb data16 out jle paddsb adc (bad) (bad) rex.WRXB xor movabs iret (bad) cs jle movabs adc adc fstpl in jb rex.WX add jmpq out xchg (bad) sub insl add sbb jmpq (bad) adc fcoml cwtl push scas movabs xor adcl cs xor jl (bad) jae mov (bad) and (bad) movabs retq pop out push add sar cs jae nop lret lock pop outsb fsts int3 rorb jno cmp test rex rcl mov sbb push adc jg mov sbb test jg and loop,pn loop,pt push add rex.WRB or mov add (bad) mov rcll or (bad) lahf movabs sub xor (bad) (bad) mov scas out leaveq xchg jrcxz pop stos shll and (bad) pop rex.W rex.WRB (bad) in sahf movabs xchg es (bad) movabs pop fistpll mov jno adc mov ja test movabs (bad) rcrb fidivr add (bad) fistp (bad) mov and add and pop push jne outsl lahf push rex.WXB and (bad) mov pushq scas sbb loope (bad) movabs and jo movabs movabs cwtl mov imul fisttp fs mov test test and lock (bad) movsl jrcxz cltd mov fbld (bad) (bad) lret cmpsb fisubr addr32 (bad) in lahf addr32 fbld movabs and jne leaveq rex.XB andl add fsubl add (bad) loope (bad) (bad) and or in cmpsb movabs loop mov movabs out and stc fcomp jae push movabs push pop out andb fucomip jle cmp out add ficomp movslq sbb (bad) xor xchg push fiadd sbb mov cmpsl rex sbbb fild rex.RB and divl push sahf loopne in rex.WB in rex.WB addr32 loop movabs and jbe mov mull test (bad) (bad) add iret loope (bad) pushq (bad) mov fucomip rex.X (bad) mov mov jb cmpl rex.XB addr32 data16 xor (bad) cld pop pop pop movslq jb rex.RX icebp imul movabs jecxz (bad) (bad) (bad) and (bad) (bad) fcmovb out jns (bad) (bad) loopne jns mov (bad) out movsb mov pop gs (bad) xchg fistpll xchg rex.RX rex.X (bad) ja jo xchg sub mov (bad) fs fs mov rex.WRB jb sbb stos movsb (bad) rex.XB ja (bad) in movabs adcl fs rex.B jg adc pop (bad) (bad) stos (bad) and outsl (bad) mov out (bad) incb idivb rex.X rex.X nop (bad) (bad) and add mov fistpll rex.X retq loope and in push mov fiadd outsl fisub cmpsb (bad) lret mov fxam out sarb mov (bad) fildll movabs add rex.R (bad) fiaddl in jrcxz rex.WRX ficoml mov loop fisubr addr32 cmp mov fildll (bad) out (bad) xchg push gs (bad) clc (bad) (bad) addr32 add pop pop fild movabs (bad) rex.WRX lcall sahf and and pop jmpq lock pop jbe lahf in jmp movabs sahf loope and rex.WXB data16 (bad) sahf push test and movslq sahf (bad) mov movabs in outsb (bad) addr32 (bad) mov rex.RB lock loope (bad) sub jae (bad) out outsl fs and jbe and and add outsb (bad) sahf nop movabs (bad) and (bad) mov in add je outsl (bad) out outsl in movabs add and and (bad) sahf jne adc and and push sahf sahf movabs movslq gs cmc jrcxz (bad) movsb rex.XB movabs jg cmc scas jle retq pop sub ss (bad) or jg test and xchg add sahf and sahf adc loopne lahf hlt pop (bad) (bad) movabs (bad) loope xor in movabs loop ficompl and xor rex.X lret in sahf out rex.WX and pop rex.WRXB in stos sub and (bad) movabs xchg (bad) push loopne std jb push sahf pop xchg rex.R and lods movabs jbe scas nop cmpsl and fidiv and sub sti movsl in movabs adc lahf xor loop cmc in and movabs in or rex.WRXB rex and jmpq pushq sub mov stos cltd mov mov (bad) scas ja sub lahf scas (bad) adc (bad) and out movsb gs pushq out addr32 mov movabs jle cmc loop imul and fcomps mov pop and mov (bad) rex.B addr32 mov sahf ds test sbb fwait (bad) callq adc sbb out (bad) jne and loope lahf cwtl movabs add out mov in test mov pop add stos xchg movabs rex.XB (bad) es iret sahf and movabs movabs lret in jmpq in and and jrcxz loopne fimull movabs and pop repz and movslq and (bad) jge test movslq rex.R sub (bad) sahf add jle mov out loope xchg add lcall lock in in idivb movsb outsb out rorl (bad) add (bad) (bad) or mov mov loope jns (bad) stc fsubrp inc rex.R mov loope movabs cli jmp (bad) jo xchg loope jo out cmp (bad) (bad) outsb mov and xchg add xor sahf clc lock retq popfq mov (bad) mov in (bad) fidivr out xchg (bad) jo fs loope (bad) fwait sbbl mov xchg retq push pop pop mov stos (bad) (bad) data16 repnz jbe (bad) loopne (bad) stc xorb decb (bad) jg out jmpq cmp jnp jge stc fimul pushq cwtl movabs (bad) mov rcrb ljmp mov (bad) fs (bad) in jmpq rex.B rex.WX andb rex.B (bad) mov fsubp cmp ss add sahf andl scas (bad) in movabs hlt out in mov fs test fs (bad) cs ss cmc fsubp (bad) (bad) gs loope (bad) cmpsb mov movabs movsb mov pop retq mov (bad) icebp (bad) cmpsb nop orl sahf mov out out out mov out shl cmp add out rex.RB (bad) (bad) loope add jmp cmpsb add out (bad) loope js jp jge ds data16 movabs test push (bad) xchg loop mov (bad) movsb es mov (bad) jmpq hlt rex.RX pop ss push out in (bad) in (bad) fs scas scas (bad) (bad) loopne xchg (bad) jbe pushq rex mov lahf in mov retq outsl movslq addl icebp ds gs in loopne gs (bad) xor and (bad) mov rex jge sahf addr32 fdivrp jnp stc (bad) roll loopne cmp mov rex.RB stc roll and push in lock andl hlt (bad) sbb rcll jne (bad) jle ds (bad) and (bad) sahf add (bad) decl (bad) data16 insl rdmsr or retq loop mov (bad) out movabs cmp pushq ficomp sti (bad) data16 sbb scas loopne stos (bad) out add fs outsl mov cmpsb mov push and icebp ljmp (bad) (bad) imul sub jne sarb out je lea xchg jle add mov (bad) divb out pushq jg retq es out ss push jp rex.W movsl xchg lret pop rex.WX es (bad) mov and rex.W (bad) cmp repz movsb mov rex.W jne icebp mov in xor (bad) pop (bad) fnsave adc mov loop fiadd loopne (bad) fcomps out and (bad) movabs ficomp in and out add outsl mov scas icebp jb loop add test add (bad) stc fbstp cmpsb add out (bad) xor repnz out jnp and scas fucomip mov rex.X sahf mov mov (bad) add fs loopne fild add and fs (bad) mov add lock es rex.WXB rex.WRB fs in mov cmpsb in fs cmpsb jle jbe mov lods rex.X out cs xor pop pop add callq incb mov and xchg (bad) (bad) jl clc xor notl gs xor outsb add jle (bad) gs (bad) mov addl idivb (bad) repnz in gs (bad) jle outsb movabs outsb hlt lahf fdivrp xchg (bad) and (bad) loopne push jne shlb fildll pop andl (bad) in stos (bad) adc test sahf and mov (bad) lock (bad) outsl mov in retq (bad) xchg imul retq sub pushq (bad) movabs rex test jle (bad) jle (bad) out out jg (bad) (bad) pushq (bad) jg lahf jmpq loopne test sub (bad) fidiv test cmp in (bad) addb xchg gs test mov fbld (bad) es mov mov loop jo test cmpsb ficomp jle sahf fsubl add add idiv es cmc cs fs (bad) fs add rex.WX mov mov loope cmpsb xchg enterq pop test pop add imul outsl (bad) (bad) div (bad) icebp (bad) add fbld icebp cmp sti (bad) retq addl jo add callq jg add sahf pop mov (bad) ds subl mul out adc (bad) (bad) cmpsb adc fisubr repnz and out repz fs loope nop jmpq and push lahf test out xorl out and fwait outsb mov fisub mov pop (bad) fs es and (bad) adc jp out addl (bad) jle (bad) movslq xchg rol (bad) add outsl ss movsb jrcxz es xchg mov sbb mov lock cmc and sahf loope fwait repnz mov movsb (bad) sub out mov andl outsb icebp data16 mov jle jbe fiaddl add ds movabs (bad) xorl mov and sbb out (bad) (bad) and jmpq (bad) test mov fist jmp rex.W and (bad) (bad) movabs and test test iret out (bad) movabs add add lods jae ds jg rex.XB jrcxz mov mov xchg in add (bad) push loopne loopne push lea test and jle out in (bad) fisub fidiv insb mov cs stc (bad) add rex.WXB (bad) in jo (bad) xchg (bad) loop out je rex.WRXB jb (bad) fidivrl xchg sahf jnp (bad) pop test (bad) add fdivr test movabs rex.X push xlat jmpq in jae add pushfq pop (bad) movsb pop scas pop test (bad) movslq and out or rex.X mov jns cmpsb (bad) push jg psrad insl cmpsl movb stos cmpsb ds data16 addr32 out pcmpgtb rex.R out je int3 outsb rcl xchg movabs imul mov cmp lret (bad) fsubrl mov add movsb mov push mov (bad) lock imul fcomps jo movsb add (bad) in pushq add addb enterw cmp (bad) or mov mov lock andb sahf fdivrs ss rex.X sbb lods (bad) movsb (bad) sub or cmpsb and clc mov movabs gs jno xor movabs cmpsb fs loop add rex.WRX rex.X rex.X out (bad) gs in rex.B outsb loope (bad) xchg loopne xor jrcxz insl int3 add test push add push pushq sahf in fs cmpsl fild movabs add xchg rex.R lret (bad) jg data16 ds xor in loop rex.XB pushq icebp cmpsb loop (bad) (bad) cmpb retq fwait (bad) (bad) data16 mov sahf adc lock in test xchg add or add jle retw movabs mov and test add enterq loope out mov sahf jg in cs jne enterq rcr repz ds fnsave (bad) cmpsb and pop loopne pop lcall add cwtl testl (bad) sahf (bad) (bad) jp (bad) test (bad) or (bad) (bad) std mov and add data16 fbld lock (bad) retq shlb in (bad) add add loop mov retq pushq cmpsb fs outsb (bad) movabs xor (bad) cmpsb (bad) movabs cmpsb sbbl fisubr xor loop out rex and jle (bad) in out xchg add shll negb rex.B mov lods cld rex.RB movsb shll addb cmpsl sahf add (bad) (bad) lahf movslq in ja rex.WRX out mov retq cmpsb lods (bad) fadd addb callq (bad) iret jg popfq mov loope fbld shrl and out mov sbb jo xorl (bad) xchg (bad) cmpsl add mov movabs and (bad) xchg cmpsb (bad) xor loopne jrcxz add add jle rex.RXB rex.RB in loopne (bad) (bad) and cmpsb lahf mov stos mulb (bad) add repz sub lods (bad) (bad) (bad) mov in jno (bad) movabs mov pushq movabs (bad) int (bad) pop test shll movabs pushq out rex.RB repnz sahf (bad) jge cs pop add (bad) movslq adc jmpq cmp (bad) and test test jmp xor (bad) jle and lahf movabs and and int mov pushq scas (bad) (bad) cmpsb ds repnz in retq clc (bad) fsubp (bad) ficom shl fidivr mov jnp add jno and fistl cmpsb movslq jns js (bad) data16 lea mov rolb cmpsb rex.RB rol mov andb mov jmpq (bad) scas mov cmpsl mov imul out fidivr (bad) xchg data16 ds movsb (bad) ss xorl (bad) and rex.R icebp jb cmpsb cmp pushq mov movslq sahf push (bad) loop (bad) mov mov loop in rex.X push sahf and (bad) add (bad) insl data16 sub and (bad) adc insl cmpsb iret fisub (bad) mov in iret xor retq ja retq test and mov movabs movabs add sahf movabs movslq cmpsb sahf movabs callq fstps (bad) (bad) (bad) rex.XB rex.WR insb xchg jbe cmpsl cmpsb (bad) xorl movabs in movsb shrl pushq test rex.RX test cmpl jg add push out out loope add in (bad) sub subb retq add mov add mov (bad) enterq xlat sub cmpsb and rol jnp (bad) roll mov mov (bad) and sub enterq ds (bad) popfq sub lods jle mov rex.WB xchg xor (bad) in cmpsb xor mov ds rex.B cld sub (bad) (bad) enterq mov fiadd orl xchg mov and sarl and fdivp movsl movslq shll xchg movslq xchg (bad) nop movabs loope and test and loope sub (bad) (bad) movabs faddl (bad) (bad) jle mov ja cmpsb (bad) stc in repz andl and (bad) (bad) ds adc (bad) cmc orl and outsb in gs mov cld (bad) pop mov (bad) pushq mov rex.WRXB movabs sbb negl jno mov cmpsb (bad) and xchg jo and cmc mov loope fbld mov pop and mov movabs mov cltd scas mov rex.WRB rex shlb sahf sbb add jg cmpsb repnz xchg (bad) (bad) (bad) repz loope jp movabs (bad) jg sahf icebp loop xor lret stc and add rex.RB jmpq fiadd ds mov out add out repnz jle es pushq cmpsb jne leaveq mov lods loop out push movabs movabs es pop (bad) add sahf (bad) (bad) data16 mov sbbb xchg es (bad) or movabs (bad) (bad) mul je (bad) jae add clc retq movabs jle in pop repz loopne (bad) movabs test out rex.RB test (bad) (bad) and movabs mov lods callq cmpsb stos sahf out xchg jg sahf out lods test pop (bad) out cmpsb and sbb adc movabs (bad) data16 addl mov loop add rex out sahf push data16 cmc push popq rex.XB outsl jle in mov repnz in movsb mov jge (bad) fdivs test adc retq fdivrs sub lahf rol (bad) shld (bad) add fisttp rex.RXB sbbb andl outsb cmc cmp movabs jb sbbl pop mov jo movabs out cs shrb sahf sahf movsb addr32 lods jmpq gs in adc (bad) jno cmpsb rex rex loopne retq (bad) (bad) cwtl shlb pop xchg test (bad) addr32 scas mov fbstp (bad) sahf add clc outsb ds data16 sahf jae es subl test xorb mov loopne (bad) jle dec lahf and add cmpl (bad) add lods and scas cmp test js jno sahf lcall imul xor rolb mov rex.B fdivrp movsl (bad) xchg sub in test (bad) enterq sbbb out (bad) jg (bad) jg lock (bad) retq (bad) int3 pop sbb adc movslq cmp out fisubl in andl xchg pop add cs (bad) xor rex.W rex.B rex.WRX (bad) out mov mov data16 xchg andb (bad) cmp in insl out scas rex.WX stc loope (bad) mov scas cltd (bad) lods clc callq cmpsb gs fisub rex.XB (bad) imul je pop add test mov clc rex.R xchg retq adc loop test out mov jae enterq repnz test (bad) adc jge pop stc movabs rorb (bad) cmp movabs lahf scas rex.RXB and adc test push pop jne out or mov retq cmpsb fisubr out cmpsb rex.RB icebp retq incb cmpsl adc fildl (bad) test rex.WX sbb rex.WXB add jne and movabs es fwait mov (bad) add (bad) es movabs movsl add movabs pop loopne nop movsb mov mov rex jae xchg rex.B mov loopne movabs xchg imul (bad) jmpq or test (bad) rex.WXB movabs mov out jrcxz sbb movabs fmulp (bad) ja mov test in mov loope es (bad) (bad) push stos cmpsb movsl or cmp retq loope clc jmpq (bad) out add icebp pop out (bad) push jrcxz cmp (bad) mov xor jg fsubrp (bad) pop (bad) (bad) repz (bad) mov (bad) jle andl and and fdivrp loope or cmp (bad) (bad) pop mov and in and popfq out (bad) jb (bad) cmpsb and loope out outsl lcall jle rep shl movsb (bad) fsubr movabs mov rex.R out jmp mov iret sub (bad) cmpsl pop and add outsb jmpq mov hlt rex.WRB rex.X repnz je movsb fdivp cmp (bad) mov scas data16 xlat jmpq fidivrl (bad) retq mov fiadd fiadd mov pop lahf (bad) (bad) iret retq lret faddp add and es outsb lock (bad) cmp cmp rex.WX in decb mov scas rsm add jbe out cmpsb mov (bad) sub pop out (bad) rex.WRXB (bad) jg fisubr lock rex.WXB add test xor out fsubp outsb jg movabs mov (bad) sbb mov fidivr fisubrl test rex.X jmpq (bad) sub mov (bad) (bad) hlt xchg rex.XB ficomp mov test xacquire shll movl xor data16 adc xor fisubl (bad) jo sub fistp fwait loopne out (bad) fidivr jno clc loopne loopne sahf xor (bad) mov xchg fisubr rep cmpsb and shlb fisubr cli fwait (bad) imul test jle (bad) xlat ds (bad) test and (bad) es (bad) data16 rex.WR sahf es sahf (bad) mov fdivrl fcomip (bad) jl outsl sahf add and sub test je cmc fistp vunpcklpd (bad) (bad) fs (bad) (bad) jae rex.XB xor subl xchg sahf fiadd (bad) test (bad) and xchg adc faddp or mov rex.WX (bad) movabs adc mov sahf scas (bad) jle loope xlat test data16 leaveq cmp and xor movabs add cli loop mov imul and and xlat mov incl cmpl retq es (bad) ds cmp iret rex.XB (bad) jae adc (bad) testb sahf ss imul rex.WX jmpq data16 mov loopne jle outsb test outsl rex.X fadds movabs rolb rex.WX or stos cmpsb out sahf jle andl out test repz mov mov push retq stc jge stc roll and cmpsl mov (bad) and (bad) adc (bad) (bad) and mov (bad) (bad) and jg rex.RX (bad) pop mov ds xor (bad) sarb (bad) rex.X test shlb and push (bad) adc mov jae cli movabs movabs cmp (bad) jns jno push int3 gs sbb test out imul sbb out jae imul pushq rep loope mov sbb mov xor xlat ja imul icebp repnz addl movsb mov imul iret cmpsb add movabs rex.R sahf rex.RB mov test movslq movabs add rex (bad) jle sbb mov push retq clc std rex.WRX gs test scas cmp imull push sahf mov (bad) mov in add jne (bad) pop repz es mov lahf out mov xchg sahf retq pop rex.X test (bad) in adc (bad) es ds test jle test movsl addr32 ljmp sahf rex.XB test xchg in fimul icebp rex.WRB stc lods out add rex.X test fldenv add sub sahf cmc fwait mov (bad) rex jle mov mov (bad) cmp (bad) repnz pop out jno callq pushq roll rex.WRX cs (bad) jo fsubl rex.R mov int xlat out mov out cmpsb mov es nop js fisub mov xchg jle test xchg out loope add mov test (bad) cmpl (bad) (bad) sbb movsl stos callq mov xchg (bad) jl push data16 or add out jle (bad) cltd lods (bad) jle xor popq je rex.WRXB push rex.WRX out movsb jrcxz add scas cmpsl pop fidivr in movabs rcr (bad) jns out xor mov andl lahf lret mov adc fsubp ds nop xlat (bad) (bad) nop out out movabs and sbb addr32 mov in (bad) jno ficomp xor (bad) (bad) (bad) (bad) in (bad) mov xchg rex.WRX rex.W (bad) scas (bad) (bad) add out shll jl push xchg mov out jns add sbb sahf (bad) loopne jne sub xor lret jno addl and movsb fdivp sub ja jo (bad) adc push and adc add (bad) ffree loopne sahf (bad) mov (bad) out in add (bad) retq cmpsb rex.XB movabs jns xor mov mulb (bad) cli rex.R (bad) fiaddl out mov adc fidiv addl adc lea and or sahf movslq add pop rex.WRB cmpsb (bad) add test test (bad) (bad) dec jns push imul jb in (bad) lret sub cmp (bad) push cmp sahf sahf loope mov jb movabs rex.WRX gs loope adc (bad) mov sarb xlat cmp rex.WRB movabs push rorl test stos fldenv jmpq xchg cli movsb sahf push mov or (bad) repz pushq mov xor add xchg sub (bad) (bad) loopne (bad) callq repnz retq (bad) je sahf test (bad) es jb fs sbb adc and insl mov rolb (bad) xor rex.XB repnz (bad) sahf mov movl movabs mulb fbstp (bad) jne add out in test loope mov and (bad) or cmp jno push adc mov mov and idiv and add jae adc (bad) mov movabs mov or movsb movsb rex.WB add mov movabs movabs (bad) (bad) in es add adc incl repnz (bad) or subl fsubp mov mov (bad) js fs movsb (bad) mov (bad) loop incb mov scas pop sahf mov fs pop push add mov nop mov retq lock loop (bad) roll (bad) sahf (bad) loope cmp adc jmpq data16 sbb outsl jg shlb (bad) sub cmpsb adcl test incb (bad) scas retq callq (bad) in test pop mov (bad) (bad) and data16 je push jbe pop nop out incb out decb outsl (bad) cmp (bad) cmc out fs test xchg in out (bad) or pop fist (bad) (bad) callq rcr pop fidiv movabs rex.X mov and mov pop jl test (bad) test retq (bad) hlt sti jrcxz test mov rolb mov outsb (bad) test xor fs cmp rex.B (bad) jrcxz and nop movsb sahf cmp mov (bad) sbb (bad) repz add mov (bad) out es test xchg jle add cli movabs retq test mov fiadd es je jg add adc jg loop jae jno movabs rex.RX (bad) fiadd mov xor jne (bad) jbe (bad) jg roll es pop sbb mov clc fisub (bad) add jno mov iretw rex.R (bad) xchg cmpsl ljmp hlt xchg retq movabs pop mov outsb xchg callq sub outsb pop rex.RXB movslq (bad) ds add ficomp mov (bad) out (bad) iret callq stos rex.RB (bad) test (bad) fdiv rex.XB jnp frstor (bad) (bad) test jo rex.R sub out rex.WR cmc shlb and negb rex.RX in gs fs xlat loope in and sub cld pop xchg mov cmpsl fs mov hlt jns,pt cmpsb jrcxz out sub (bad) rorl mov mov stc rex.WRXB repnz (bad) movabs insb push add icebp (bad) lahf rcrb shl rex.WRX outsl rex.XB mov ds add sahf cmpl and or fsubs and add iret or jno cmpsb jrcxz cmp and add mov fist mov push (bad) shll xchg sbb fwait mov fwait out fsubs movabs (bad) add and test movsb fidiv mov (bad) cmp (bad) rex.RX loope mov iret xchg adc jne ljmp (bad) outsb gs cmc gs (bad) sbb mov and in movabs retq es ja (bad) mov (bad) out ja push cmpsl (bad) (bad) lods fisub subb gs sahf rex addr32 sub push (bad) sub retq adcb rex.WRX rex.XB mov fdivp push out jne loopne jrcxz movslq lret shll jmpq push sbbl outsb cmp rex.RXB jmpq loope cmpsb add push mov (bad) (bad) cld and fidivl in and ds movabs (bad) lret test (bad) out push ficompl lret movabs loope xchg loop xchg movslq rex.WRX rcr sar mov xchg fdivrp gs outsl jge jbe xchg (bad) add stos sbb adc ficom movsb and (bad) jmp (bad) (bad) jrcxz sbb in movabs jle xchg add xchg fidivr outsl movsb pushq cld jne popfq jne add ja,pt test loop (bad) addr32 icebp mov loop out gs (bad) mov jno (bad) (bad) (bad) (bad) test lock pop (bad) adc fcomip test mov out cmpsb add rex.WB test (bad) add test mov movabs sub mov addb nop (bad) lods adc xchg jle jle fs sub jrcxz cwtl rex.B lock and fcom add (bad) (bad) mov mov sahf insb mov callq sub out scas test lret ds (bad) nop out cmp add (bad) movabs fsubp sti out cmpsb and xlat xchg (bad) test in mov push (bad) sahf (bad) or cs and xchg mov addl jbe mov jae out push add in cmpsb loope loop sti rcrl (bad) je pop outsb (bad) adc mov test fisubr xchg mov add pop lods roll in mov (bad) outsl imul jle rcl mov (bad) sahf cmpsl sahf sbbb or or rex.B fbld pushq hlt cmpsb adc xor (bad) sbb (bad) jo loope (bad) scas (bad) movabs (bad) scas lahf nop xchg xorl and rolb incb lods (bad) cmpsl movabs jg cs pushfq (bad) mov jo ss fiadd (bad) cltd loope jmp rol shrb jle in jle (bad) mov push rolb add cmpsb fist (bad) imul and retq rex.RB cmpsl callq pop jge ds add data16 xlat (bad) add ficomp (bad) decb out rex.RB rex.WRB out ds pop lahf int retq jg outsb incl out mov jle idiv hlt lock test jno imul cmp (bad) mov loop data16 leaveq test xchg jmpq pop mov push mov jbe or cmpsb xchg fisub incb sahf andl incb mov cs subb (bad) add out xchg cs add in and insb xorl cmpsb in scas callq (bad) xor (bad) loope adc xchg test sahf add (bad) jg (bad) (bad) and repz (bad) shll mov (bad) (bad) (bad) jno faddp mov cmpsb movl es cmpsb (bad) sub (bad) ficom (bad) add (bad) cld movabs rorb (bad) (bad) sahf movslq data16 sub rex.RXB xor adc (bad) out (bad) (bad) and nop out pop nop cmpsl and (bad) cmc test jns test negl out mov sbb xchg jg test add sub retq cltd rep (bad) sahf add and loopne jl andl xchg lock pop popq rex.RB andl in rex.XB and xlat mulb movabs pop jno fistpll out test mov in (bad) xor adc rex.R and xor (bad) (bad) xlat xchg movabs fisub ja cs pop mov (bad) sbb (bad) jo insl and rex.WRX fs nop fs stos data16 lahf cmpsl movslq scas (bad) and cwtl cmp rex.W mov clc add outsl push xchg loop adc stc and sbb add add jno jne lahf (bad) orb movslq and xchg sahf push clc cmpsl rex mov mov rex push add test (bad) jl stos loop std rex.X adc mov rex.WXB addr32 (bad) in insb sahf (bad) je lahf movabs fcomip loopne jno in gs movabs cmc adc sbb add fidivl (bad) cmpsb and jae push (bad) sbb (bad) xlat lods movslq out add and mov sub (bad) gs rex.WX rex.RX mov out out stos and clc nop mov rex mull cltd test test test test xor push fistpll (bad) out movsb add jl (bad) jb sbb jg (bad) jrcxz (bad) (bad) loopne and (bad) andl out leaveq pop rex.RB lock rex.XB cmpsl adc movabs shlb rex.RX lret sbb mov (bad) je data16 (bad) fwait add rex.X (bad) (bad) lock rex.W or stos scas mov (bad) pushq pop rex.WX (bad) movabs cmc pop mov or jnp test mov pop xlat jbe lahf ficom pushq fstps cmpl sahf imul subl jo,pn int xlat test movsb (bad) test fcmovu mov movabs jmp mov adc sbb es loopne mov retq popfq (bad) icebp mov (bad) mov mov cmpsl outsb sahf mov ja insb mov loop ds lock sub jne retq sbb xlat sbbl fidivr pop (bad) fxch movabs fidiv flds mov pushq add (bad) (bad) scas mov jnp scas in and in cmpsl (bad) mov rex.WRX mov imul sahf mov (bad) shr out loopl xor lahf test sahf pop add pop orl data16 sahf or or or out gs mov movsb xlat loopne add in in fistpll lahf add (bad) pop rcr movabs rclb shll je sahf jg fist sub scas (bad) xor cwtl ja pushfq movabs enterq leaveq cmpsl and outsl (bad) and test rol cli jae fiadd data16 clc (bad) lock jbe test add (bad) xchg sarl mov loopne outsl movsb sarb mov jne (bad) test es jns imul (bad) cwtl or movsb cmc test mov xchg out (bad) mov movabs cwtl xorl movabs movabs scas (bad) fisub lea mov fs rex.B test shr rex.RX test retq rcrb in (bad) sahf in rex mov xchg ja (bad) rex.WRB (bad) subb incl movabs fidivr pop sahf outsl (bad) cmpsl movslq (bad) sbb pushfq (bad) jns cltd outsl mov cmpb (bad) lret movsb repz (bad) movabs rex.XB (bad) test lock push lock (bad) enterq hlt fsubp callq movabs (bad) cmpsb add in mov and adc fnstenv mov fiadd xor jrcxz xchg adc add ja xchg je jl gs and int fisttp movabs ss loop (bad) movslq popq add pushfq jg jo sbb (bad) ficompl movabs jno mov and ds loope xchg jne and fisub and and add add add add sahf rex.R hlt lock mov push (bad) retq xchg jns mov retq test mov out ds add clc push fbstp insl fild movsb cltd pop fcmovu lret outsb (bad) (bad) outsl gs mov and cmpl andl cmpb es out ficom sub sbb mov (bad) (bad) (bad) gs popfq retq pop sbb push shll test test icebp movslq jrcxz test mov (bad) push lock and movabs jns mov jg jg fs add mov cmpsl sub pushfq mov mov jrcxz in rex.B addr32 loope mov sahf loopne rex fisttp sub andl (bad) jne cwtl retq (bad) pop mov jrcxz sub lret insb rex.RX (bad) mov shlb mov mov retq jrcxz retq sub fbstp js xchg ficomp (bad) (bad) movslq mov mov and mov cli and loope retq xchg jle pop (bad) loope fistp addr32 rex.RX (bad) cmp cwtl (bad) outsl imul jne retq and mov test fcomip ds rcr mov (bad) and (bad) icebp sub add loope (bad) push loopne rex.WRX addr32 fs fbld pushq movabs and sti retq xchg fs (bad) test jbe xchg fisub scas (bad) (bad) outsl xlat cmp rex.RX movabs pushfq out pop retq (bad) ficomp (bad) mov add cwtl test (bad) sbb (bad) imul (bad) jle out add cmpl loope (bad) lahf add stos (bad) cmc scas icebp test (bad) fidivrl addr32 outsl loope jo fiadd (bad) fisub lahf xor jmp rex.WRX data16 pushfq cmp jmp gs and (bad) retq retq push loope and stos and out rex.WRX sbbb test jns test xor adc mov mov (bad) ss jb (bad) rcl jmp movslq (bad) jmp fisub jno loopne add fdivrp (bad) (bad) data16 cmp movabs (bad) test out loope mov rex.WRX mov rex.B shlb retq fisub mov (bad) cwtl pushq out (bad) sarl repz gs rex.WRX movsb retq in ffree out in fisubrl fisub (bad) xor (bad) (bad) ja out (bad) jmpq sbb retq loope lret and pop push ja data16 (bad) jmp xchg retq movabs rex.X rorb rex.RB (bad) (bad) mov test lock retq loop movslq sahf jrcxz (bad) jae mov lods in je push jnp mov cmpsl repz in (bad) adc rex.WRXB lock mov (bad) (bad) mov loopne push pop (bad) hlt test mov test movslq or out clc nop rorb ja outsb out push movslq mov movabs (bad) repz add out in retq out sub (bad) data16 (bad) fcomps push retq mov movabs (bad) jle (bad) lret mov (bad) sub mov sub sub gs out rcrl movabs sub scas iret sbb lods push and (bad) fisub loop,pt addr32 rex.RB je (bad) xchg sahf xlat (bad) out in add mov fimul rex.XB (bad) xchg repnz incb stos xor adc outsb (bad) scas loopne pop push add xchg addl cs push data16 mov addb cltd lods (bad) loope es pop and (bad) mov in rex.R xchg add pop and and cmp movabs out movabs mov (bad) jbe movslq cmpsb rex.X repz std add mov lock pop cmpsb test movabs rex.WR retq and cmpsb movsl push jae (bad) data16 gs scas (bad) add (bad) out and leaveq shll test pop add test sahf adcl fidiv lahf or jb fnstcw mov xor add loop outsb retq and loop and loope xchg movabs in mov and out xchg rex.X and and lahf imul jle (bad) (bad) in (bad) cmpsb (bad) loop sub and and insb rex.XB test adc cmpb pop std sub sub pop sbb leaveq cmp (bad) or add pushfq hlt jb mov mov xchg (bad) rex.R mov hlt xor (bad) fmull sbbl jrcxz rex sub adc nop xor mov je notl (bad) rorl and and jb xor (bad) sbb (bad) rclb pop std mov xor popfq mov mov rex.WRXB push add iret movabs loope (bad) xchg mul push xor and pushq in in out push jne lock iret rex.R data16 repz repnz xchg (bad) jae rex.WB cld es pushfq pop sbb syscall mov (bad) mov rex.B movslq sub pushfq cwtl pop push (bad) rex.WRXB cmpsb mov stos (bad) movsl pop nop push sbb push add pop ficoml lret sbb jbe rex.WXB mov jae movslq and (bad) pop cmp mov lock fistp movabs xor enterq mov jrcxz pop mov (bad) in pop sub and cmpsb or (bad) sti pop xchg and cmpb loop pop rolq (bad) xor (bad) ds (bad) mov sahf xchg mov sahf adc mov xor cwtl movsl out (bad) outsb (bad) add ja (bad) push movsb addl movabs (bad) and fs cwtl bnd (bad) mov and (bad) jle,pt ja retq out movsb test in movsb rex.X ds iret ja (bad) sahf test sbb outsb xor (bad) fisub sahf movsb sarb and xchg jp mov retq test jo shld xor ja (bad) xor (bad) loope adc (bad) (bad) sbb pop mov jle fisub clc xor outsb mov fwait out rcrb jrcxz movsb add xchg icebp adc cwtl (bad) ja (bad) movabs or cwtl (bad) ja (bad) xor (bad) movabs lahf movsb test loopne xchg cmpsl add add adc retq rcrb and ds clc and (bad) hlt movsb je retq icebp xor sarb jb cwtl adc (bad) jo popq (bad) movsl rcrb lock cmpsl xchg fiadd mov movsb adc (bad) ds cwtl pushq (bad) out movsb mov sbb jae clc movsl fisub movsb xchg test icebp (bad) (bad) loope and cwtl mov (bad) (bad) fbld (bad) cmc jnp cwtl jne add xchg movsb jrcxz xor (bad) and movabs (bad) (bad) out (bad) movsl lea sahf push (bad) (bad) add cwtl lahf loope ja sti out movsb (bad) test jrcxz rex.X jb,pt cwtl (bad) ja (bad) (bad) movsb pop test movsl rcrb xor sahf push (bad) and retq fwait (bad) mov mov sahf andl adc pop lods je rex lea (bad) push sahf movsb add adc ficomp or outsl sbb fcmovnb sbb pop in hlt movabs and sahf mov sti pop cs ss jns add ja (bad) sbb xchg test or (bad) (bad) stos (bad) ficom (bad) (bad) nop mov fisttp (bad) (bad) ds pop ds cwtl xchg cmpsl loope add movsb rolb hlt movsl rcrb movabs push loopne,pt lock loop fs xchg xchg push (bad) jle mov nop and loop (bad) rex.B rcr xchg sahf cwtl and or stos sbb lea sahf cltd push mov ja test cmpsl (bad) jbe (bad) fisub (bad) cmpsb ds rcrb add (bad) (bad) outsb rcrb xchg (bad) mov lahf mov fisub cli in (bad) jne sahf out (bad) sbb xlat shll out sarl adc sahf movsb (bad) test loope xchg adc andb mov loopne add sahf movzwl pop (bad) (bad) popfq repz sti adc pop or xchg pushq push (bad) mov or mov add rex.WRB rex.X flds mov sbb insl frstor mov xchg adc (bad) xor movsl mov rex.X ds (bad) rex.RX xor rex.XB mov fstpl or pop (bad) mov push pop rex.RXB xchg (bad) jp add pop stos jne jo imul and lret jno jmp addr32 (bad) xor jbe in rclb pop (bad) ds lret xchg and jmpq (bad) (bad) mov push out sbb nop pop incb xchg imul (bad) xlat rol and sub imul movabs xchg (bad) pop mov xor (bad) pop insl shrl fistpl test fidivl (bad) mov fnop (bad) movsl mov mov xor rex adc rcll jns fidiv fxch sub pop setae ja mov insb callq pop jns iret nop retq sarl pop rcl ds (bad) sbb xchg pop xchg (bad) shlb sbb movsl xor insl hlt fs mov lcall push mov or (bad) cmpsb movabs (bad) pop or icebp sub stos sbb lods fdivrl (bad) adc cld gs (bad) mov lret mov cmc pop pop fisttpl in pop (bad) jb icebp xchg jae rex.WB pushq data16 adc pushq test mov (bad) cwtl (bad) (bad) movslq (bad) imul xor pushq fs pop scas (bad) sub (bad) movabs and divb movsb out and jo cmp mov pop (bad) in cmp out rex idivl lock and add in pop rex.RX rex.WRB out xor pop loopne adc test loope in xchg out retq outsl add add rep jae (bad) xchg (bad) push jnp jns (bad) rorb add jb shr cmp rex.WRXB callq loopne outsb mov pop mov add mov push sarb sub lods mov pop push in rex.XB xchg pop loope rex.WRXB enterq rcrb mov adc frstor outsb push mov rol or xchg movabs mov enterq rex.WRXB pushq (bad) imul (bad) xchg sub xor xchg sbb js cltd and jle xor movsb rex.R pop (bad) icebp test jbe xlat sti int3 cwtl jmpq pop in (bad) movabs jl jo rex.R and push mov adc xchg ja add es negl or rex.WB je (bad) add or pop sti incb rex.WXB (bad) or mov xor cli outsl rex.X pushfq (bad) movsb pop lods fstps mov (bad) (bad) rex.RX cmp and (bad) cltd insl (bad) adc pop cli movslq mov stos push or lea cmp pop hlt or pushq (bad) mov add movsb xchg addr32 movabs je rex.WXB movslq or insb (bad) sbbl jb and mov push (bad) add add cmp repnz movabs rex.XB cmp (bad) (bad) and outsb add test sub ds test push adcb jge adc and hlt rex.R rex.RXB xor xorb pop mov push test (bad) push movabs je mov sub test fidivr or cld lret xchg jle rex (bad) ror pop xor bswap (bad) push add lock jae (bad) mov (bad) pop (bad) (bad) in insb loopne pop repz cmc sub outsb pop push pushfq sub int (bad) outsl (bad) gs pop jrcxz test ffreep mov pop rex.WR rex.XB or std mov (bad) xor jl jle jg movsb jp pop loope movabs xorb ds push xchg pushq (bad) mov jg fimul jmpq xor or sbb imul sbb loop movsb test sti and mov sbb sbb rex outsb movabs rex.RXB pop rex.RX jbe test adc mov pop add (bad) (bad) cmc jge jg (bad) retq (bad) mov gs sbb (bad) pop out adc xchg (bad) jg negl test xor sub rex.X stos lret pop mov orl adc int3 pushq sub sbb adcl (bad) cmp (bad) pop fisub adc ss pop mov push loope (bad) shlb add jp xchg icebp xor cld (bad) cmp cmp add sahf mov idivb fnstenv sbbl sub testl jle (bad) movslq gs mov or neg xchg xor int3 mov movabs (bad) cmpsl test fwait movabs stos loopne (bad) pop mov xor and pop adc add mov outsl fmuls cltd gs js loope and jmpq callq rex.RXB jnp outsb (bad) outsb jge and rex.WXB enterq xor mov callq (bad) lods rex.WR pop fsubs mov rex.WXB xor lcall pushq xchg rex.WRX add fsts out xlat pop cld mov (bad) mov and ja cmp cmpsb cltd fwait (bad) mov cmpsb iret andb xchg in mov jbe popfq jp out out movabs (bad) and mov (bad) add pop enterq outsb stc cld pop insb ror push (bad) xchg pop icebp ss lahf mov jnp,pn movabs frstor fldenv movabs (bad) cmp sub mov ds cmc (bad) mov push mov (bad) cmp push (bad) fs scas and push adc in in gs rex.XB out sub or and push jns mov rex fld pop rex.WRB (bad) nop movabs xlat cmp cmpsl repnz pop push jl in sub xchg cmpsb lret rex.WB movhps retq (bad) (bad) mov gs adc mov xor (bad) add lock or fs stc popfq xchg mov (bad) mov xor (bad) push pop push jg mov lods rex.RX rex iret push fsubl sahf (bad) movsl lret (bad) (bad) pop adc movabs sub rex.WRXB pop rex.RXB mov push outsl xor pop loop or scas not rcrl xchg jne stos test (bad) xchg mov fdivr retq pop adc pop jg (bad) (bad) pop rex adc mov pop cvttps2pi lret icebp loopne push rex.X (bad) in cs sahf (bad) lea mov sbb rex.RB (bad) rex.W cmp ror mov outsb (bad) lret add mov pop out (bad) sbb sub fbld xchg (bad) mov shrb (bad) lret rex.WXB rex.WRX and loope (bad) retq jae movabs jg ror ds mov fisttpll pop (bad) (bad) jno (bad) (bad) add and es mov rex lods jg xchg cmpsl pop sub lret rex lods or and rex.WRXB rex.WRB and jmpq (bad) cld pop (bad) out rorl pop xchg adc push sub xor rex.RX nop pop testl add pop movabs pop (bad) pop fsubrs xchg (bad) sbb mov sti test rex.WXB in jmp adc xor jmpq cltd jns outsl pop (bad) (bad) xor pop pop rex.R retq mov pop push or xor test (bad) (bad) mov add int3 jmp jrcxz movslq (bad) pop mov (bad) mov outsl addl mov fnstcw (bad) or xchg (bad) (bad) out jmpq pop mov or cmp (bad) xchg jo cmp sub rex.RXB in jns movsb lret test mull test (bad) mov pop xchg rex.WX loopne jns (bad) fs xchg pop mov rex pushfq or jmp lahf (bad) movabs (bad) mov (bad) cmp test rex.X lock cld shrl sbb pop (bad) (bad) mov es mov (bad) jbe sub pop nop pop xchg pushq mov cli add (bad) jns jle lahf (bad) fisub std fldenv xlat movabs test loope pop adc movsb sbb lods jrcxz,pt idivl (bad) mov jle in cmpsl push (bad) mov xchg stos nop repz mov rex.W or pop cmp rex.X and cmc loop pop pushq in js jbe and (bad) mov ficompl sub jne shrl mov (bad) (bad) insl (bad) jl pop mov in push pop (bad) test je xchg mov icebp (bad) fistp mov xlat (bad) pop sbb push callq gs sub loopne pop or rex.WR adc cmp and out std in jne xorl pop in pop fwait pop in sbbb (bad) in mov es std cs mov je rex rex.WRX xchg push icebp pop add or pop jl pop test test push (bad) repnz (bad) scas iretq and mov mov pop xchg adc and out cs rex.RX rex.WRX outsl imul rex.WB mov (bad) jrcxz repz pop mov jb sti nop and (bad) roll fwait xor xor pushq and outsb push mov (bad) mov fistpl sub add pop push loope xchg je adc vphaddwd cmp out add lea add sub pop test and pop cmpsb outsb jae std fidivrl je sbb pop xor cmp rex.RXB mov lods sub pop push mov or mov scas mov lods pop fs (bad) sub movabs cltd data16 fisubl mov pop loope pop js movsb test (bad) or (bad) lret out pop imul outsl data16 scas mov cmpsb (bad) roll pop movslq sub sub test or sub mov adc mov adc je,pt lret pop rex.WRX add addb mov jmpq sbb mov cli stos (bad) (bad) push jle (bad) mov rex.WRB (bad) addl loope pop imul mov int fcoms js movslq pop repz (bad) push pushq mov jb shlb clc pop in and fidiv (bad) pop pop (bad) push push (bad) out movsb sahf sub (bad) (bad) mov and mov jns test pop (bad) lahf shl out mov rex.WX retq (bad) jle mov pop (bad) retq push xchg add test outsb test int shrb jmpq pushq (bad) fldl xor mov lods xor or repz test pop fldl (bad) mov (bad) xchg in test or (bad) push cmp pop and mov mov push jno shll jbe (bad) pop movabs test (bad) rcr sub jno jb xor rex.RX adc (bad) adc (bad) and xor movabs pop add (bad) (bad) imul jbe (bad) adc out pop gs (bad) loop or add (bad) (bad) shll pop adc push xchg fstpl fld shrb loop rex.WB fwait xchg fcoms lods push sbb (bad) or pop xchg sub enterw fstpl roll pop addr32 jp or sbb loopne outsl pop test rex.WR mov xchg jmpq cld pop xchg (bad) sbb outsl sar (bad) and pop xchg cmc jo or iret (bad) stc adc out jns (bad) or add loopne fistl pop scas imul xchg xchg (bad) sub outsb xchg xlat nop in cmp shll (bad) jrcxz rex.W jp cmp movsl (bad) stc cmp test in fstl pop adc mov mov xor es addb loope lock jg imul mov loopne and xor sub lret out push (bad) data16 sbbl adc pop sbbl add or push mov fs (bad) sbb (bad) movsl mov movslq pushq loop jle iret mov mov cld (bad) mov (bad) pop mov cmp add jp out (bad) add shl (bad) movslq (bad) pop xchg sub pop and fbld stos pop pop sub pop test int pop fmuls (bad) pushq (bad) clc subl sub fstpt (bad) loope in mov and push cmc lret (bad) js sbb sub fsubrl mov rex.WXB push adc jle jb hlt mov pushq (bad) adc callq out or (bad) jle,pt movsl (bad) (bad) or cltd ds mov jge (bad) adc jbe ss adc (bad) movsb rex.RB add insl push fs pop cmp and mov xchg (bad) outsl loope push mov add fcomps (bad) jb jns mov or insl sbb or jnp movabs xor clc int (bad) data16 and sbb scas jge out jrcxz data16 rex.R movabs jno push cmp mov movsl rex.WR (bad) mov rolb ds retq rex.X (bad) rcr test mov pmaxub callq cmp xchg int and movabs xlat jbe (bad) (bad) (bad) fucom stos imulb addr32 lock loope shrb rex.WRXB mov sub xchg out (bad) (bad) fnop or pop xor lahf mov sahf push iret stos retq (bad) (bad) rcrl movabs push jnp mov retq out (bad) jrcxz mov add pop cmp push sub rex.WB rex.RB cmp data16 cmp stos or fbstp (bad) or shll in add xchg stc (bad) xchg movabs sbb jbe outsb xchg rcl in xchg loop and xchg sub or jbe ja mov stos and (bad) rolb mov pop (bad) mov cmc adcl and adc movabs rex.RB add xor rex.B (bad) jb cmpsl (bad) pop cmp int pop mov mov add (bad) movabs sbb cli pop adc rex.XB (bad) js cmp rex.WX rex.WRX (bad) mov data16 pushq fwait add jl pop xor in sbb fucomi (bad) cmp sub mov rex.RXB movslq fwait outsb js add (bad) (bad) out out sub jae mov add (bad) jbe clc pop (bad) leaveq outsl or (bad) pop rcrb mov (bad) js cmp rcl xchg jl test fmuls iret pop (bad) mov pop (bad) je jne es (bad) jo xor rcll or sbb rex.WRB outsl and pop rex.X sahf movabs (bad) repz (bad) jno data16 pushfq in add ja (bad) (bad) add (bad) rex.WRX lock (bad) (bad) mov xor add (bad) jbe in mov (bad) sbb cmp push (bad) lea pushfq outsb (bad) sbb rex.WR rex.XB out rex.WB test (bad) xor (bad) mov rex.RX cli or sub jrcxz pop (bad) (bad) fwait xchg mov pop push pop callq (bad) pop mov sti (bad) (bad) mov xchg rex.WRX rex.RX jmpq frstor enterq movabs xchg mov cmp jbe sub sbb fistpl mov faddp hlt mov xor pop lahf test rex.R popfq sti rex.WRX stos test jl add std xor bnd cmp pop and (bad) rex stos sub jno data16 xor and dec xchg and in add add (bad) sbb pop int xchg mov add rex.WR fs in pop repnz or std jbe (bad) adc movsl rex.W mov sbb jg cmpb (bad) mov in (bad) mov rex.WRB (bad) repz push (bad) pop sbb sub cmp jmpq scas (bad) lret and mov iret rex.WB fstpl (bad) cmpsb xchg mov lods mov retq pop cmp rex.RB ss nop rex.W (bad) push or push and (bad) enterq nop mov (bad) pop data16 (bad) mov cmpsb pop (bad) mov mov (bad) (bad) repnz movsl iret in pop rex.WRX ja mov push rex.X clc in pop (bad) js push mov and loopne jae cmp pushq mov jge rex.RX lods cmpsl (bad) rcrl rex.WB mov (bad) sahf pop sarb iret pop movabs adc xor (bad) (bad) push sbb sbb gs pop movslq mov push add push test jmp in (bad) mov gs (bad) hlt gs es or mov nop clc (bad) push fcompl retq std xchg movabs mov (bad) cmp xchg clc mov jb jne mov ds out mov iret es (bad) add lret rex.WB data16 jge mov test movsb push leaveq mov mov andl rex.X in and xchg cs (bad) jne fs rex.WRB in movsl fwait jrcxz (bad) ss stc jo mov retq rex.WRB (bad) outsl mov lret jbe add rex.X sbb pop int es push cmpl sub negl test rex.WXB mov lock icebp jno adc rex.WRX cmpsl (bad) cmp hlt in pop in cmp jge lods pop (bad) movabs xchg jno pushq or (bad) or pop sarl add movslq fist sbbb movabs pop dec ja jns (bad) rcrl jne or leaveq (bad) cld rex.WRX loopne jb jbe out repnz and sbb pop (bad) rex.XB rex.WX rex.W push andl je (bad) mul (bad) rex.WRXB bsf mov rex.RX mov outsl jno xor stc icebp gs xor or (bad) rex.RB movsl push popq movabs insb fstps mov je data16 fidiv jb (bad) movsb jbe fsts jle sti pop jge mov lahf push adc mov data16 (bad) adc sbb push xchg xchg ds (bad) mov movsl outsl pop fcmovbe (bad) cmpl xor in cmpsl retq (bad) (bad) callq pop sub or cltd callq test sub xchg rex.WB (bad) pop pushfq lea cmp (bad) divb fs pop data16 jae sub rex.WR shld ds push retq (bad) mov jge mov fcompl or lret pop lret cmp rex.RB xorb fwait mov pop (bad) cmp pushq (bad) push jbe (bad) shrl jrcxz rex.RX jle mov xchg jns adc adc and and nop lods xchg pop (bad) jge out lods rcrl sub testl (bad) pop jb cmc cmc clc stc cmp jmpq add sbb out insl pushfq sub rex.WXB (bad) and (bad) (bad) pop in lret sbb ficom fsubl callq imul xchg xlat negb lods add movslq cmp movq or (bad) or (bad) (bad) lcall je jne jb xor push xor rex.W adc idiv (bad) (bad) fbld (bad) (bad) jae add jrcxz je lods sub mov (bad) and rex.WRXB es (bad) or (bad) mov and (bad) (bad) testb cmpsb jle add popfq (bad) pushq rex.WRB fwait rcl xor movabs imul loop pxor (bad) pop fldenv popfq jrcxz (bad) and rcll pushq bt cmc clc cmp jmpq push rex.W rex.WR push rex.WB cs insb add test (bad) add mov cmp cmp jmpq (bad) (bad) mov test add (bad) (bad) data16 jl sub stc adc decb rex.WRXB rex.RB mov jnp or cmp (bad) lcall push mov lcall adc adc adc movslq sbb std popfq rex.R (bad) cmp xor scas rorl adc enterq lahf (bad) data16 (bad) (bad) fstpl xor jge test (bad) ja add mov rex.XB mov (bad) ficompl xor pop (bad) rex.WRB in add fwait (bad) adc rex.WR (bad) (bad) xchg rex.WRX pop fld callq rex.XB ss outsl mov in jmp pop (bad) paddusw rex adcb ss mov popfq rex.WRB fwait and rex.WB out std xchg movzbl sbb cld sub sbb scas std decl (bad) adc lods jmpq stc xor btr btr sub ror rcr mov cmc cmc sub cmc test cmp pushq cmc cmc cmp jmpq add rex.RXB gs gs imul jmpq ja jmpq jno leaveq xor cld pop (bad) scas sbb rex.RX jmp and pop rex.WXB je imul pop rex.WRX scas jl gs movabs cwtl pop cs insl std or (bad) (bad) popfq sbb jb rex.WXB (bad) lods sbb sub and adc (bad) (bad) mov fdivrp (bad) lcall rex.WX es popfq adc xchg rex.WRB adc jne clc addb sahf cmpsb or not cwtl xlat jne popfq hlt (bad) movabs loop lret scas pop movabs (bad) push cmp xchg push mov rex.R int3 xor or out cmp or imul (bad) add fmul lods adc rex.RXB jmpq jne bswap sub bt mov sbb jmpq gs rex.R sbb fisttpll mov lahf outsl sahf pop incl (bad) outsb popfq in (bad) rex.WRXB jle adc imul xor lock rex.WX pop jne xchg xchg movabs (bad) mov sub stc xor repz (bad) mov jmp shlb xor rex.RX sub (bad) std (bad) (bad) mov sar lcall mov idiv (bad) (bad) cmp cmp mov (bad) outsl mov (bad) popfq (bad) mov sub pop pushfq rex.RXB (bad) mov sbb rex.W mov (bad) (bad) add sub (bad) add std sub (bad) (bad) cmpsl faddl xor outsl rex.R ds sbb and rex.RX mov lods sbb (bad) (bad) sub mov out (bad) push jns sarb iret (bad) ds cmc sbb imulb rex.X jno sbb or insl pushq callq (bad) (bad) sub (bad) (bad) mov mov rex.WX mov pop rex.WXB rex or rorb rex.RX out and (bad) lcall shlb (bad) xchg rex.WRB add add cmpsl test cmp sbb rex.WRX mov (bad) adc jo xor push xchg int3 cmp cwtl mov out rex.XB pop leaveq movabs bt cmp cmp cmp jmpq callq shl dec bswap add rcr rcr (bad) repz stc bt cmc cmpb jmpq mov mov movzbl jmpq jmpq lea mov movsbw jmpq jmpq jmpq bt cmp jmpq callq jmpq add stc add shld mov clc bt cmpb jmpq jmpq cmpsl (bad) cmp scas sbb cmpsl jne ja mov xchg adc cmp fildll mov jne mov movabs adc or int3 sti jnp cmp imul retq adc out or (bad) (bad) (bad) (bad) movabs jp (bad) mov out (bad) cmp rex.RXB rex.WR rex.W rex.RXB scas pop xchg movabs movl xor xchg (bad) (bad) (bad) rex.W repz fidivr mov or pushq lods mov int3 lahf cwtl jno loopne sbb retq scas pop rol adc (bad) xor pushq jae enterq xor repnz xor insl (bad) lods orl popfq push bnd sub pop (bad) callq jmpq jns rol jmpq jmpq sbb xchg xor (bad) ss cmp pop xor mov mov mov jae movb movabs add jl jmp rcrb cmpsb jnp mov (bad) lcall pop (bad) pushq (bad) rex.WR rex.RXB rex.RXB xchg movabs or and (bad) fiaddl jb (bad) jp insl mov movabs pushq pop retq (bad) (bad) mov adc (bad) lcall or movabs pop test jns lock stos adc mov and mov xor or sbb push xchg pop rex.RXB movq sbb jle and (bad) mov mov pop xchg jb (bad) (bad) pop out imul adc mov pop movslq test (bad) clc movb stc cmc cmc test jmpq jmpq jne cmp cmc test movb cmp clc test clc test jmpq callq lea bswap shl cmc add bswap mov mov clc bt cmp cmp cmpb jmpq in mov or sbb sub pop outsl mov sub cmp mov adcb movsl (bad) rex.WRX rex.WB sbb (bad) xchg (bad) cmpsb jmp add rex.WRB callq xlat (bad) (bad) lcall cs callq mov adc in mov or mov jne mov rex.B (bad) iret sbb fimul outsl rex.WRX cs (bad) rex.WRX jrcxz fndisi(8087 cmpsb ds pop cmp outsl sbb (bad) insb std (bad) lcall movabs xor cmc (bad) rex.WR retq xor icebp f2xm1 outsl (bad) xlat add testb js sbb (bad) fiaddl sbb sbb mov cmpb push jmp fwait or loopne jo (bad) es and xlat adc ja add (bad) rex.RXB int mov jmpq jae jo jne jmpq ror jmpq pop cmp mov mov (bad) iret (bad) jne xchg notb jae jl repz mov ss cmc xor mov cmp jno addr32 mov retq out rorl rex.WRX es loop std (bad) (bad) fild mov mov movsl push sbb (bad) (bad) cmp cmp push rorb fisttpl cmp mov (bad) rex.WRX in imulb (bad) je jmpq (bad) ja push add and imul rcr (bad) jg rex.WRX xchg push add (bad) enterq idivb cmp (bad) pcmpgtb repnz (bad) test (bad) rex.WRXB push (bad) xchg pop callq jns pop (bad) std or ficomp pop mov pop xchg icebp mov jne bsr movzbq sbb stc mov bt stc clc jmpq jmpq jmpq jmpq jbe rcl btr mov btr add dec dec mov and setbe sbb rol add xor dec not setae movl cmp btr mov bt clc cmp jmpq je je movzbw mov movsbq lea not mov movzbw mov lea jmpq jne neg movsbw movzbw cmp mov shrd movzbw sub and mov stc stc test clc sub bt cmp stc pushq bt bt jmpq callq jmpq jl jmpq xor scas sub mov sub push rex.X rex.WB rolb int sbb retq (bad) mov xor xchg fcoms js outsl sbb icebp sbb (bad) mov sub test mov pushq push sub (bad) (bad) (bad) (bad) fbstp lods xchg push cld cmp mov int3 movabs (bad) imul scas (bad) mov rex.X scas data16 cld sub sub es sti adc add rex.RXB cmc xor imul incb cmp sub jmpq mov lea not movsbl bswap jg movzwl movsbw jmpq cmp mov (bad) std sub loope pop repnz xchg rex.WR test fucomip mov rex.WR rex.RXB xchg (bad) test rex mov movabs (bad) and (bad) lcall clc test and adc cmpsb rex.WRX sbb retq (bad) sti (bad) lcall and (bad) test (bad) ds fisubr ss adc (bad) push addr32 rex.RX sbb in (bad) adc jmpq loopne int3 fneni(8087 lods scas (bad) sub or (bad) mov (bad) rex.WRB xchg int3 cmp in jae xor mov loopne rex.WRX cmp (bad) enterq movabs or rex.WRX xor out mov (bad) lret or clc rol jmpq bsr cmp inc bsf mov shld cmc sub lea rol mov bt sub clc cmc clc pushq cmp clc cmp clc cmp jmpq jne movzbw bswap mov jmpq jmpq jne jmpq pop (bad) xor and es mov fwait icebp fcos popfq sub imul (bad) out jo jl movsl mov out mov (bad) jne jae mulb in sbb sbb push (bad) or push jp xor jo rex.RB rex.WRB rex.WR or rex.R cmp sbb pushq loop jns rex.WRX fsubrl xchg outsl repz sbb mov mov lret add lock cmpsl out rex.WRB fidivrl adc mov addb in jae add (bad) xorl xor (bad) adc xor mov mov rex shrb movslq (bad) (bad) (bad) jg or cs stos jge (bad) or xor adc sub fs test xchg shll jl cld (bad) (bad) incl rex.B lock cli (bad) lcall cmpsl (bad) andb insl rex.WR rex.RX push xchg pop rcll cwtl add ss rex.RB insl push fstpl (bad) push add pop callq add (bad) sub mov addr32 xor jno rex.RXB mov (bad) (bad) mov rex.RX (bad) (bad) jg in adc add xchg retq dec cmc stc ror jmpq not jmpq je bt bt jmpq seta loop push sti adc loope rex or xchg pop imul fsubl (bad) leaveq xor fistl push pmaxsw (bad) rex.RXB sbb cwtl (bad) std cmp mov test fadds sahf cmp icebp or (bad) lcall fmull out cmp fcmove pop out rex.WRXB add or adc jbe (bad) add scas out jbe fdivl cmp or cltd test jno rex.RXB (bad) addr32 xchg outsl (bad) pop jno push fucomip ds mov rex.RB xor jmp (bad) outsb mov jne cli push (bad) iret push (bad) fnsave movabs movabs cmc adc (bad) (bad) fisubl lea or leaveq and or lock sub (bad) (bad) jmpq pop (bad) sti lret fidivl (bad) sbb mov (bad) push jnp scas rex.WRXB rex.WXB mov (bad) rcl rex.X mov out add rex.RB adc rcl (bad) pop sbb std (bad) lcall test push pop fisttp pop or cmp or movslq stos and (bad) (bad) xchg jns or pop or mov pop (bad) or outsb mov leaveq (bad) (bad) and adc mov je rex.X in lea mov rex rex ds and sti cwtl adc pop cmc (bad) fs cmp add push jne jb pop add test ljmp shlb jmpq pushq jmpq rex.RXB and mov rex.WX (bad) add stos (bad) stc jno cmp adc (bad) jo iret jp rol movslq outsl (bad) fs (bad) in rex.B scas mov adc (bad) lcall cmp pop mov mov mov icebp cld (bad) (bad) fcomip xor (bad) movslq (bad) cmp (bad) mov in push vsubss frstor pop outsl mov cmc jge lahf sarl sti rex.WXB mov rex.RXB es sbb (bad) sbb mov (bad) mov mov xlat xchg adc and or or pop in cmp repz push movabs and sub sbb stos (bad) rex.RXB icebp (bad) lahf scas sub mov (bad) push hlt sbb (bad) rex sahf std jmpq mov (bad) mov rcl setbe mov lea neg bts shld mov cmp clc clc test xor clc cmc test repnz jmpq xchg xchg pushq imul pop (bad) clc out pop test int3 (bad) mov cltd (bad) out xchg loope adc mov (bad) and test mov sub push lods (bad) and adc movslq (bad) rex.WRB movabs insb xchg (bad) push (bad) or pop pushq cld or rex.WRB fstpl insb mov stos (bad) sar gs (bad) cld sbb test data16 add xchg (bad) pop push movsb addr32 andl lret or repnz cld std mov add (bad) fs and sbb pop xchg std decb push mov mov or (bad) mov xchg lahf xchg ds adc lods cld in pushq cs sub adc fcoml xor adc pop in jle (bad) mov imul rex.R insb int3 lock sub (bad) (bad) xchg (bad) xchg test mov mov je pop mov (bad) sub insl jle (bad) cli fs or insl jnp sub loopne adc idivl add or cli popfq fstpl or lock (bad) sub xchg fld push rex.WR cs cli jnp (bad) or jg mov sahf rcl push sub ja loop mov sbb (bad) push clc lret mov scas (bad) movsl jbe int and sub xchg mov fistl rex.RXB mov outsb rex.WRXB (bad) jmp jle mov jb mov adc cmp mov mov fs movabs movabs xchg lods in mov fstps nop xlat mov fiadd movsb xchg sub add jnp push mov jl mov mov (bad) jg pop imul pop (bad) xchg pop cwtl sub test cmc in retq mov js sahf out sbb mov and adc fdivrl stos ja rex.RX rex.RX pushq or pop movsb outsl (bad) add in cmp cs insl jne,pt cmpsl rex.WXB js cmp mov (bad) scas fistp negb test xor adc outsl in xchg mov cmp adc fcompl out xor xchg mov mov (bad) (bad) xchg negl mov jg adc scas ljmp (bad) mov movabs rex.WX pop mov push rex.WRB bnd fs js pop fwait out rex.WRX addr32 (bad) (bad) pop in or je (bad) cmp xor (bad) lods movsb out nop loopne rex.B rex.W movsl pop jg scas mov clc (bad) pushq ror pop or rex.RB lods mov mov popfq movslq jg sahf or and sbb repnz jg mov leaveq (bad) sbb push (bad) add rcr (bad) out outsb xchg pushq (bad) stos enterq cmp neg push and mov jo notb ss (bad) xchg movsb clc mov fistp out outsb mov js or and (bad) mov jb (bad) or stos rex.WRXB rex.WR adc decb fs push cs movabs cld (bad) xchg (bad) cwtl sti int clc (bad) fidivrl sub jbe stc (bad) scas xor imul mov out shll mull lahf sbb in lahf mov jo and sarb sub cmc movabs (bad) jp jmp js (bad) je (bad) fs mov mov mov and jle push xchg subb adc rex.RXB lock push shrb push pop es movslq js retq jne (bad) and sahf enterq fisubl (bad) (bad) mov outsl pushfq rex.WRXB cld mov (bad) (bad) int setne xchg adc mov icebp cmc or stos sbb push movabs adc and xchg rex.RX sub and (bad) insl sub adc jo cld xor out rex.RB lods jmp out loope shll in jb or (bad) and movsb out sub (bad) sahf rex.XB rex.WX scas movabs out cmp and in incl jle retq push out mov out movslq rex.WR mov xchg es data16 subl xchg and insl test and data16 lods iret (bad) adc data16 xor cli jbe (bad) mov sub jne lret mov sbb imul rex.X rex.WX outsl mov iret rex.B fisub (bad) fwait sbb and (bad) jl rex.B mov and enterq jbe movabs or mov (bad) mov stos callq (bad) (bad) std nop enterq movsl hlt mov outsb (bad) je mov scas lahf scas cmpb sbb rex.WB repnz clc jg addr32 (bad) mov add fimul fstl sbb in sahf movabs jle outsb repnz movsl (bad) loopne fs loop movabs fs pop repz shll and jg pop ror callq out xchg sbb adc mov hlt loop cmpsb in fbld sub jo pop andb cmpsl pop (bad) stos mov mov out insb movslq adc rex.XB rclq lar cwtl ja mov mov movabs (bad) sub stos mov xchg cmp and (bad) lock jp mov xor in rol sahf std (bad) (bad) jbe (bad) cmpsl movabs xor test andb cmp sahf xchg add (bad) (bad) add mov rex.WR fnsave (bad) push lahf jl movabs mov clc repnz xchg mov scas out data16 (bad) jno rex.RX not stos or retq js in lods cs (bad) leaveq and xchg movabs loopne mov out cwtl stos xlat adc lods ds push sti sbb jb lret (bad) (bad) je iret test movabs fdivl outsb fildl adc movslq pop (bad) (bad) fcmovnu imul ds mov movabs xor sbb orl adc mov sub mov jl sbb in and (bad) (bad) mov cld insb jmp jg mov pop pop lret scas outsb (bad) xor sub (bad) and add shr (bad) retq out sub mov fistp movsb adc out fdivrl xchg hlt sub jle mov rex.RB rex.WRB (bad) pushq (bad) fcmovnb sbb cmp pop add xchg jns xor (bad) retq xchg (bad) test imul xchg push jl ffreep movabs rcll fdivs pushq jmp (bad) and (bad) sarl imul lock jge jp or (bad) adc pushq (bad) mov xchg (bad) cmp jl fadds jl sbbl rex.RXB cmp or shlb and imulb pushfq (bad) adcb (bad) sbb adc (bad) mov pop leaveq repnz (bad) jle fbld sbb jo mov ror xor (bad) jae rex.WRB scas add (bad) cli mov (bad) (bad) jne hlt stc sbb lret rex.XB fs push xchg stos retq pop imulb mov movb adc sub sbb pushq cltd in add jo xchg pushq (bad) mov xor stos repnz (bad) fs js cmpsl and cmpsb xor sub fs jrcxz cmpb (bad) fwait lahf insl movslq (bad) sub cmc jb retq movabs sub xchg outsl add rex.WRXB jrcxz movslq insb push add stos in mov rex.WB pushq (bad) jo je and jo ficom movabs jle mov stos hlt adcl (bad) pop and outsl add (bad) std (bad) rex.WB es nop in pushq pushfq rex.WB and xchg (bad) sbb cmp jp popfq (bad) add test std rex.WXB pop punpcklbw test lea xchg jle adc hlt movsl faddl data16 insl push mov insb push lretq jp hlt lods mov (bad) or in insb adc sub retq outsl rex.XB sub out (bad) (bad) rex.RX int3 (bad) cmp or mov jp xchg add fisubl rex.B push mov gs or xor (bad) mov js in iret adc sub (bad) push cli icebp movsl icebp sub ja xchg pop sub cmp icebp adc fs sbb pop (bad) jge mov mov lahf scas (bad) rex.WRXB mov xor cmp subl (bad) fsts jb in pushq pushq int3 add xchg adc loop and mov add mov enterq (bad) adc xorb mov add adc movabs rex.WRXB insb in jno mov cld mov int mov (bad) (bad) test stos fistpll or rex.RX jrcxz rex.WRB add sub and andl imul cmpsb loop lock xchg out or push mov fidivrl (bad) or add test jg mov jle outsb add int3 movsb (bad) push negb xor pop in movswl cli lahf and cmp rex.W xchg xor data16 cmp adc push jns mov rex.WR insb fs adc (bad) addr32 movsl retq add loop mov test cli rex.W hlt sbb jg xor cmpsb rex.WRB (bad) xchg retq add repz sub cmpsb test (bad) xchg jl movabs xchg adc hlt cld rex.X push push pushfq (bad) pop (bad) jge repz mov ss cmp or (bad) insl fisubr or lods jmp rex.X in adc (bad) push lods movabs imul enterq add imul cmpsl adc shlb insb add fisubrl (bad) out scas sbbl movabs movslq xchg (bad) mov jle and iret rex.WRX xor push out add jle (bad) lods add or int3 push and (bad) orl int (bad) mov cmc xchg pop pop or adc pop (bad) insb lret xchg mov mov (bad) mov hlt and (bad) adc mov (bad) fcompl (bad) jns es pop std orl adc push subb push cmpsb jb lods sub rex.RB rex.WX scas rex.R and xlat movabs push mov (bad) mov test (bad) insb popfq mov int mov lods (bad) stc sub add mov insb test rex.WRXB rex.X shrb jnp movabs sub cmpsl out (bad) movabs (bad) hlt rex insb stos lock mov in rex.WX je outsb (bad) xor insb or (bad) and frstor mov cli mov xchg movabs sbb (bad) cmp rcl pop add test hlt icebp mov lahf pop pop xchg out pushfq adc fnsave push xchg mov popfq in test add ljmp (bad) out jne xor pop jle,pt rex.RB in pushq cli jl sbb negb (bad) (bad) rex.XB movabs or (bad) cli cmp movsb outsb retq mov push (bad) (bad) pop addr32 sub sbb out xchg jbe fs xchg in jp cli insb insl movabs shrb mov callq and (bad) imul mull idivb lahf movabs rex.X fisttp push mov xor jp mov imul fs xchg mov mov cwtl add (bad) movslq fisubl jae js insl cmpsl in lock cmp stos fnsave outsb jnp mov adcl ss xchg jg push cmpsl add xchg or outsl xor pop push or (bad) adc clc scas outsb ds lock mov rex.WB rex.X rex.WR pop int movabs ss or add test sbb (bad) lods and shl fcoml scas movl add movabs sub rex.WX push adc fucomi xchg sbb jo xchg ja stos xchg loop mov jmp fs in mov fistp and addr32 imul pushfq cmpsb lods scas adc mov rex.RX shrl (bad) retq stc rex.WX or rex.WRX (bad) xchg movabs jne jb cld cmpsb (bad) rex.WXB and addr32 in lods rex.WX sbb rex.WB fmul xchg xor or lahf lock jrcxz in (bad) in rex.WRB mov sub out jbe push out in fldenv cmpsb imul (bad) xlat mov retq jbe cld gs ja (bad) fwait mov movsb data16 or add lods lods (bad) cmpsb mov outsl xor (bad) repz cmc jae (bad) in dec and out rex.RB rex.RX (bad) xchg data16 or insb (bad) (bad) or stos cwtl adc and je xchg mov loope test stos fsubs cmp stos and int3 (bad) rex.WXB (bad) (bad) rex.WRB or mov mov pushq iret (bad) movsb (bad) addl (bad) (bad) out (bad) add movabs cwtl cmp jp imul jb xchg add add test adc stos (bad) mov mov (bad) test rex.WB jnp es rex.WRX mov mov xchg (bad) icebp imul mov (bad) rex.X and or mov movabs lods push (bad) xchg sahf (bad) movsb (bad) cmp add (bad) adc andb mov cld fisub fnop and loope sbbl subl pop insl mov mov cmpsb addr32 or lock sahf mov and hlt imul (bad) clc add xor and sbb (bad) mov fisubr (bad) scas in or movsb pop je lea (bad) retq or push add mov (bad) or and insl lret and test rcr in gs jmp adc sahf (bad) cmp nop movslq movabs in and test add (bad) mov (bad) ja leaveq (bad) (bad) pop add sbb add jrcxz movslq movsl callq and sbb clc sub and lahf (bad) loope (bad) pop xor pop cmp jg movabs hlt clc and lahf scas movabs jbe jno sub test lods decb retq xchg in je loope test mov rex.WRX (bad) orl fistp movslq pushq and and cmpsb lea callq cltd rex.WRXB movabs sahf fcoms xchg pop popq adc repnz (bad) lahf stos (bad) mov fs movsb test fmulp loope in fisttpll movabs movabs or (bad) test xor (bad) mov cmpsb and (bad) lahf (bad) sti loopne loopne and jrcxz cmp fs movsl and in retq movabs (bad) movabs movabs fisubl scas sahf sti lahf sbbl fiadd lahf movabs loop fiadd fs movabs fist clc xchg jrcxz cmp loope fisub cltd movsb or hlt out (bad) mov pop loopne mov cmp callq loopne loopne loopne rex.RXB pushq jrcxz movabs stos adc (bad) lahf adc (bad) xchg addb or leaveq imul enterq or mov mov mov and jo and adc rex.WX stos js hlt rex.WX (bad) popfq jl lods sbb sbb bnd xor out pop fs xchg cld rex.WRB (bad) movabs outsb sahf cmp xor repz (bad) push popfq (bad) int or jnp divb ljmp (bad) sti insl jmp mov notb out adc movabs retq rex.WR data16 fidivr cmp iret es or ror movslq out rex.WRXB sub lods (bad) (bad) in loop mov xchg stos xchg test jp xchg sbbb in and movabs rol sbb adc (bad) (bad) rex.RXB (bad) add xor (bad) (bad) stos sub add (bad) rex.WXB cmp (bad) (bad) mov (bad) popfq jle (bad) mov data16 jb mov std adc and pop rex.W in rex.WRB pop xchg mov jne out fbld (bad) cmp outsb (bad) and pop adc (bad) pop push mov pop mov callq lods loopne mov pop jae sbb (bad) push push je outsb mov lret insb rex.XB data16 fisub pop mov loopne ss (bad) ds popq (bad) (bad) pushq (bad) fcmovnbe sarb out jle andb pop (bad) push mov (bad) addb (bad) sahf sbb out add outsl xor (bad) (bad) test movsl and movabs pushq int3 cmp sub cmp shlb cli (bad) movabs in pushq mov xchg hlt pushfq out sbb add sub add shr sub xor js (bad) shlb mov movsb scas mov enterq sub sbb sbb pop in push mov mov sbb xchg sbb or iret adc outsb movabs (bad) movabs jp adc addr32 cld (bad) or xor rex.R mov ss addr32 adc test sbb in (bad) insb movsl (bad) sahf mov movsb out adc mov lret mov rex.R (bad) fs xchg jl pop add xchg sub xchg out jmp std xlat outsb pushq cmpl mov insl push insb mov stos push push push push or icebp push mov mov (bad) xchg lea repnz je rex.XB js (bad) rex.WXB rex.RX (bad) lock insb pushq test jne stos hlt xlat (bad) mov mov adcb mov cmpsl jg mov and add rex.WRB sbb jne jae je jno out sahf push (bad) push sub lahf int3 xor jb cmpsl xchg (bad) fsubs sub jmp pop jp int3 cld lods mov xor or sahf scas xchg sub icebp xor (bad) mov mov rex.WR or test (bad) cli out adc rex.RX jne rex.R mov add shlb (bad) pushfq sbb (bad) adc (bad) imull test jge adc (bad) repnz (bad) movabs out mov (bad) ljmp insl (bad) xor out push enterq imul rcll cltd (bad) jne jno add sub scas mov fsubs outsl xchg in or and lods add movsl mov rex.WXB outsb push adc cmpsb andl repnz mov mov ds add rex.WXB ficom jo sbb or (bad) adc out sahf hlt sahf outsb xor (bad) retq mov jrcxz hlt and sub and sbb idivb enterq pop insl jg movabs ja retq rex.WRB jne mov mov jbe sub gs fmull jnp pushq stos (bad) out or add movsb sub in rex.XB movsl pop push mov xchg mov hlt rex.RB test cld cmp push (bad) jmpq (bad) jl xor imul jrcxz cli stc xor mov rex.WRB mov sbb xchg pop lret pushfq xchg adc (bad) stos (bad) int rol (bad) push mov callq (bad) movabs insl int cmc jae (bad) jae (bad) mov orl test mov fs xor jle (bad) lret lods fisubrl decb test and pop cmpsb pop and out out sub cmp push test or movslq (bad) shll movsb test rex.WXB data16 adc cmp jae (bad) xor (bad) in test in test pop retq cmpsl outsb (bad) shl fcomip xor movslq mov xor lea je movsb fnstcw rex.WB sub jle mov test (bad) mov mov stos ds lods cmpsl pop sbb jb jns callq sbb or movsb sbb rex.RB mov rex.WX xlat rex.W loop decl or (bad) mov jb jrcxz (bad) insb pop scas (bad) adc movabs pushq (bad) popfq lret sub int3 mov add jne sarb and test (bad) jnp (bad) cmp sbb lods jmpq cwtl jp cld test (bad) adc add outsb pushq (bad) and cmp sub jl jge (bad) mov in movsl pop rcl or (bad) and and movabs xchg fimul add mov adcb imull rex.WRX out imul (bad) jge or and sub mov (bad) shrb sub test (bad) add movabs hlt sbb push xor jl je fdivl xchg jbe add xor cld cmp adc jb push (bad) movsb mov cltd sub jl (bad) sub in push addl or clc mov (bad) rex.WB enterq fistp jno (bad) rcrb (bad) js jbe cltd in xor xor (bad) xchg retq repz jbe mov sbb (bad) rex.WXB push and jge jmp fwait pushq mov adc (bad) adc nop xor int3 mov fbstp cmp pop jno cmpb mov mov stos rex.WR mov sbb movabs adcl cwtl sub or rex.WXB xor (bad) mov iret mov (bad) xchg jb movsb adc fsubrs stc jno or sar cmp int3 (bad) mov rex.WR add add push xchg xor xor mov retq mov or mov loopne or movabs and xchg (bad) mov adc rex.WX movsb sub push mov rex.WRXB mov or (bad) in adc lret rex sub jrcxz out (bad) mov clc (bad) rex.RB in in stos rex.RB gs and jrcxz pushq or lret adc imul (bad) cmp add (bad) loop lret rex.RB movabs sub cmp data16 sahf retq and sbb orl (bad) gs or test fsubr pop lods (bad) sbb xor mov rex.RB (bad) out std mov pop jo pushfq mov loop cmp movabs bnd add mov sub in (bad) pushq sub sbb jno addl and xor fld hlt jg movabs movsl mul test callq push xchg adc mov jle xor mov ficomp xchg faddl stos cld mov jns (bad) (bad) jp mov outsl loope es (bad) sub popq out (bad) je cwtl out add cmp lcall (bad) fwait fwait (bad) test (bad) sub jne pushq rex.WX cmc jne (bad) xor (bad) (bad) and repnz lock sub push xor in xor hlt (bad) or (bad) int mov lods xchg xchg cmp cmpsb mov (bad) fdivp pop out sub rex.WRXB mov sbb xchg out ja movabs adc xlat (bad) movsl pop rex.WRB rex.RB icebp rex.WR retq or sub rorb add mov mov test sub rex.WXB (bad) or sbb sub rex and mov rex.XB int3 outsb jle or adc std add lahf jb std sbb (bad) rex.WRB rex.XB cmpsl in in mov repz insb enterq rex.W xor adc shll lret mov sub or andl (bad) (bad) (bad) jle sub fcomip jno lods es rex.RB or adc add outsb pop hlt fcmove adc enterq mov test repnz sar js retq xchg scas out rex.RX mov enterq pushq sbb clc and add retq or pop test jnp or add (bad) jns jge add je (bad) stos (bad) (bad) int3 outsb out (bad) or rex.RX or cmp jo pop jo rcrb xchg scas hlt js outsb push test fsts test (bad) and shrb (bad) lods cmpsl insl enterq rex.WR sub mov rex.XB adc (bad) ljmp clc icebp enterw lock test push and add (bad) and insb insb mov mov (bad) ds add mov (bad) int3 fstpl mov movslq and pop int3 lods add or pop xor xor rex.X rex.WB cltd hlt (bad) rex.WXB xor fnsave cltd movabs and jae rex.R pop pop stos and movabs outsb in in (bad) mov (bad) push mov rex.R adcb sub out jnp ja xor (bad) movabs insb movsb rex.RXB rex.WXB pop gs jg outsb and xchg cmp (bad) addr32 clc xchg (bad) or sub (bad) (bad) lods xchg (bad) sub sbb mov (bad) sbb pushq movsb rex.WRXB imul fisttpll movsl xor and icebp jle movsl mov (bad) cmp xor fsub (bad) mov jrcxz jo loopne push mov loop jnp push test jg loop rex.B cmp stos pushq test xor cmpsl (bad) or and imul xchg (bad) mov sbb xor movabs fildll add cmpsl mov push and jo hlt (bad) int3 lods stos xchg rex.WRXB pop (bad) movsb fcmovnb lret repnz sub pop pushq and sbb fdiv xchg xor xchg add mov (bad) (bad) jrcxz movabs test lea (bad) (bad) movabs xor test xor adc test jl mov push sub (bad) and jl (bad) push push xor test repz sub xchg retq (bad) xchg jge (bad) xor add add (bad) cli movsl (bad) lods (bad) jo (bad) nop cmc cmpsl jne (bad) out enterq push jg jo jbe (bad) lahf scas (bad) fld std movabs stc rex sbb sbb insb movslq rex.RB test in rex.WRXB rex.W adc iret lods test jo sahf mov rcll sub fsubs xchg adc movabs (bad) cwtl insl mov (bad) jae,pn jb rex.WXB jb (bad) movabs es adc lock pushq mov jg mov in (bad) cmc xchg jno sub int3 outsl (bad) mov sahf sahf retq retq outsl add test and rcll adc xor (bad) sbb push cmpsl jmpq and jmpq and mov pushq mov movslq rex.X movabs xchg movabs jno rex.WXB rex.WXB push (bad) mov mov or xchg test roll (bad) mov push and sub xchg mov fsubrs lods shr jmp std add fs sub insl xchg cmpsb scas stos retq rclb fidivl repnz mov pop or cli push or popfq test outsl sbb lret push jne mov vucomisd jb (bad) (bad) mov je (bad) mov rex.WRXB pushq adc push (bad) mov mov push cmp stos lahf (bad) shl repnz (bad) addb out xchg rex.WX in jle pushq (bad) pushq rex.WXB rex.R rex.WR icebp pop cmp cmpsl push mov ficomp and xor jle (bad) insl outsb (bad) lret insb add mov pop jnp sti std (bad) mov jne xor es mov mov and cmpsb (bad) (bad) es or push cwtl (bad) or mov cli adcl (bad) (bad) mov (bad) jle jg sbb rex.B rcrb fbstp lods lods je xchg movabs push repnz rex.WRB movabs (bad) test adc outsb mov sbb lods jle rex.WRX js xor (bad) jb (bad) (bad) pop movabs sub cmpsb (bad) push jp in int3 xlat (bad) adc retq xor jle pushfq sbb add repnz xchg loop test rex.WXB stos and mov push sbb (bad) enterq loopne cmpsb xchg enterq movslq fwait mov insl loopne leaveq cli pop out enterq jmp xor out jrcxz movabs fistpll dec jle (bad) leaveq stos pushq pop movsb rex.B xchg (bad) or and lods cld or add (bad) adc push pop test rex.XB gs insb xchg push push lods fild or pushfq sbb sbb push add sahf (bad) pop repnz out sbb cmpsb add and pushq out add push movabs pushq push test (bad) fnstsw jo add pushq add mov xor movslq adc cmp test cld jrcxz xlat xor sub adc jl lret sub in mov lahf push int xchg xor pop retq push movsb lods pop xor in test lods (bad) mov int (bad) sub (bad) push sbb and adc pop test sub (bad) (bad) stos jge add mov movabs (bad) leaveq sbb pop adc rex.WRX xchg sbb (bad) stos incl xchg sbb sub cmp leaveq jle adc (bad) insb outsb movabs sub pushfq lret fsub xchg shrl add rex.WRB xchg test (bad) sub sbb rex.WRB mov (bad) mov pop (bad) (bad) (bad) (bad) rex.XB data16 mov repnz movslq divl retq xor xor (bad) jl (bad) rex.R movabs outsl jne (bad) mov cmp ja scas cmp xor xor jo ficoml or jg jne sub xor jl orl or adc adc adc and fimull hlt pop lods sahf jp sub out or (bad) mov movslq mull mov movsl lods and cli stos out mov adc rex.RB test fcompl rex.WRXB out (bad) push rex.RXB outsb cld xor sbb movsb out mov xchg and or mov clc rex.XB rex.WB es sbb sbb push pop push mov out lret lock xchg (bad) es cli stos and mov or int lods rex.WXB adc gs fs jne push movsb add test (bad) sahf mov sbb add mov sub loopne rex.RXB ficompl fsubrl xlat lods (bad) repnz cmc pop pop rcrb rex.W fildll out movabs je (bad) lods lods rex.WR data16 (bad) cmp fcom jno adc jmp jge (bad) (bad) xor xor and (bad) rex.R movabs scas xor gs jle sbbl lods outsl xchg or (bad) add push in sarb pop and (bad) (bad) push and rex.WRB sub cmp hlt lods adc and mov mov jne sub out cld cmp stos fwait (bad) sub mov jbe add mov sub add cmpsb scas mov xlat (bad) cmp rex.WXB fnstsw lods outsl mov rex.WX push pop sbb rorb mov (bad) jg or je hlt push (bad) (bad) push adc (bad) rex.WXB xor lods popfq test (bad) (bad) (bad) movsb (bad) lea (bad) mov movabs (bad) pop mov xchg mov outsl hlt jnp jo adc retq test rex.W sbb testb xchg outsb rex.RX rex.WRX mov or (bad) movabs and test rsqrtps jno mov ja loop (bad) adc or imul popfq cmpl xchg fwait jg lret jp adc pushq insl xchg or add mov movsb fwait imul xor jnp (bad) xchg (bad) (bad) movsl or test pop push rex.WRXB rex.WRXB pushq or cmpl lods (bad) rex.RB stos data16 hlt jne mov or (bad) (bad) xor (bad) xor (bad) xchg mov and mov cmp int3 imul ss mov (bad) mov int3 (bad) loope fs (bad) and rex.WR and js (bad) mov lret xlat xor stos outsw ja je fisttpl xchg scas (bad) js imul xchg xchg xchg scas adc rex.RXB stos xchg int3 in incb jg (bad) ss add movsl (bad) leaveq rex.R (bad) movabs (bad) (bad) mov add movslq es mov mov rex.W lock xchg (bad) loopne xchg stc cmp outsl stos retq (bad) loopne repnz rex lahf mov jns scas pop add loope adc xchg xchg outsl sbb jp pushq push add in outsb cs cs xchg (bad) out data16 jle jnp or or loope retq movslq (bad) pushq mov xchg outsl (bad) (bad) lahf sti mov add lret rex.WX (bad) pop add push pop movsb (bad) pop rex.RB outsb xchg (bad) cwtl callq xchg stc ljmp (bad) jo (bad) rex.RB mov fdivrl mov (bad) rolb out jnp in sbb rex.WR jno jo fs ja fidiv (bad) ficoml jg cmp (bad) fwait movl repnz sub movabs xchg loopne mov mov push (bad) rex.WR (bad) (bad) cmp sub movabs (bad) fnstenv (bad) adc pop (bad) xchg push mov (bad) add (bad) or scas lret scas mov outsb xchg (bad) mull idivb (bad) sub sub ror fisubrl nop stos jp (bad) lahf rex.B (bad) rex.WB (bad) sbb rex.RB loope sbb (bad) or rcrb mov jp add mov imulb sub mov test mov rex.RXB fisubr in sub lret fild sahf adc add xchg sub insb mov xchg movabs cmp push xlat cmpsb rex.RXB (bad) jae loope sahf add loopne cli (bad) enterq test cmp fwait rex.B imul and xchg mov jg jle jo push jae lods or rex.WX lret (bad) push and cmp sahf lods fildll (bad) movabs fildll (bad) (bad) fdivrl sbb iret add shrl orl (bad) mov sub test loope,pt (bad) (bad) out push (bad) stos add retq lods pushfq callq cmc fdivr and mov loop retq fs push xchg and movabs outsb movabs fdivrl (bad) pop (bad) (bad) rex.WR retq and imul imul (bad) movslq pop retq loop or lock rcrl stos or jp sbb (bad) stos retq or (bad) movsb out fistl in jmp je cmp adc pop xchg mov adcl insl ss jbe (bad) xlat (bad) mov scas rex.WRX (bad) cli jns (bad) mov rex.B repz rex.WRXB rcr (bad) int3 add sarl jmpq xor mov je adc insb (bad) cmpsb (bad) addr32 (bad) (bad) jle pop xchg movabs xchg adc (bad) lret scas iret fstsw rex.X rex.WX mov lahf pop rex.RX gs imul rex.WR mov rex.WRX xor mov loope xchg test jns mov mov mov test xchg mov add scas (bad) lods out lea rex.X es test std fidivl icebp retq scas repnz stos (bad) insb sarb adc mov (bad) and (bad) (bad) mov imull fstps (bad) fisttp jbe out movsl jp pop mov adc retq je mov movsl pop sbb adc and or xchg rex.WX (bad) lahf movabs (bad) retq cmp push lret callq cs imul sti mov mov add rex.WB lock mov jno (bad) add (bad) (bad) xchg cmpsl sub fldcw (bad) movslq addr32 (bad) nop pushq sbb mov fildll add xchg (bad) nop pop movabs mov pand pushq mov rex.X addr32 jne add jae movabs fs cwtl xchg xchg mov push roll in mov jg (bad) rex.WB loop pop cmpsl sahf movabs (bad) stos xchg pop (bad) xor (bad) (bad) rex.WRB rex.W roll loope (bad) pop mov mov pop popq data16 rex.WRX pop imul rex.WR jmpq test pop add mov cmpsl adc pop (bad) loope pop mov pushfq icebp cmc xchg rex.WX int in and xchg jl loope pop cmp jge xor movabs retq pushq or and mov iret gs jle sbb out and jo lods rex.WXB adc imul jno rex.WX (bad) pop lods imul movsl pop and rex.RX rex.RX rex.W sbb sbb clc jp cmpsl sub sarl xlat sbb loopne cltd mov lods sub rex.RXB stos sub movsl (bad) sahf rolb (bad) jg rolb sub jbe test loopne mov sbb sbb jbe,pt xchg div mov fidiv (bad) mov stos test jrcxz sbb std loop out sbb rex.WXB fld pushfq cmp rex.X lret jno mov cmp (bad) rex.B flds (bad) sti int3 loop loopne lods xor mov (bad) xchg (bad) cmp sti (bad) sahf sub and jmp jns and or insl lahf (bad) (bad) js adc loop movsb and jmp movabs test mov fwait cld (bad) push out xchg insl pushq out push stos xlat sub subb mov mov cwtl callq jo (bad) add data16 (bad) adc pushq push xchg sbb neg jnp mov in (bad) mov cs xor fs je imul je (bad) add rex.R push test sbb pop and jmp jbe lods adc xchg (bad) mov sbb sbb (bad) (bad) sub es lods mov sarl adc std cmp adc cmpsb je jle xrelease mov in sbb or movl lea stos addl loop (bad) pop xchg in mov xchg xchg mov data16 ss mov xchg sub (bad) xor mov rex.W xchg ss cmp (bad) mov incl lock adc xchg clc movabs movabs lahf movabs js data16 or movabs jge and clc jbe mov mov cltd xchg mov xchg mov insb (bad) (bad) imul (bad) lahf mov rex.WR xor cmp test sbbl sahf push fdivrs data16 movabs fwait jmp sub cmc mov xchg rex.WB mul mov gs and stos imul (bad) push shrl jl fdiv adcb (bad) cmc mov mov lods xchg mov jno (bad) std xchg shrb xchg sub pop mov xor callq (bad) rex.WR pushfq xchg out jmpq fsubr mov jae movsb jle adc (bad) sub (bad) xchg ja xor cmpsb lods int3 (bad) jle gs (bad) leaveq xchg out test (bad) xor xchg or xchg pop and rex.RXB adc rex.WRX lret add and jne xchg jle (bad) xor (bad) or pop sbb sub scas mov push pushq sbb (bad) repnz loopne xor movabs xor cmp (bad) adc (bad) loope in jp mov (bad) iret cmp fldl jg mov imulb pop rex.W push fneni(8087 hlt ds repz and scas (bad) lock addr32 mov pop repnz mov (bad) (bad) sbb cwtl outsb adc repnz insl retq pop movabs or xor insb cs cmp cmp mov jg (bad) (bad) sbb pushfq pushfq movabs xlat cmpsl rex.WRXB stc cwtl lods (bad) rex.WX cmp (bad) jb sbb xchg add je (bad) jnp add or (bad) (bad) icebp mov cli xchg imul movabs out jnp test and rex.RB rex.B insl mov jmp (bad) (bad) jmp movabs sub lods rcl (bad) (bad) rex.WB rex jmp (bad) shll loope rex.R bnd fmull mov cmp mov rex fs mov cmp pop (bad) mov (bad) lock decb (bad) (bad) jg rex.RX icebp in lret mov icebp mov mov xor (bad) sub xchg jb xor jmpq or pushq (bad) rex.W xchg mov jge rex.WXB jl (bad) nop add sbb jg (bad) (bad) mov or sar outsb xor xchg mov movslq xor hlt jae adc movsb sub push out (bad) repnz pop fist outsl es mov (bad) sbb fwait (bad) (bad) and push rex.RX (bad) add mov pop (bad) mov push stos adc frstor xchg movabs rex.W jae mov (bad) mov loopne rex.R insl popfq and rex.RX and and (bad) lret push fistpll jmpq xchg pop insl lods cmp sbb addr32 (bad) test in std jno mov test (bad) pushfq mov sub cmp fidiv (bad) not mov jp rex.WRX jne add (bad) movsb (bad) sub (bad) movsb pop pop or retq add cli sub sbbl hlt xchg (bad) mov pop loopne jrcxz mov ficoml adc test xlat pop (bad) or pop callq fldt js adc pushfq xor pop nop push rex.XB rex.R sub pop cmp mov pop and (bad) mov xchg jl cmc nop and pop xor loop (bad) (bad) idivb clc in pushq rex adc sahf pop mov add mov pop pop fwait mov and mov jrcxz movabs mov mov movabs sub rex.WX add (bad) lcall cmp adc xchg sbb shlb stc mov jne and jrcxz mov adc enterq adc (bad) negb xchg roll and mov jbe cmp popq movabs add cmpsl xchg cmp add (bad) addr32 andb or outsl add repnz sarl addr32 out xor or mov rex.RB lods push pop fimul (bad) push enterq adc imul nop je,pn xchg nop int in out lods stos mov cmpsb xchg lret jmpq (bad) (bad) jg jmp pop movabs cmp in push test jo (bad) xlat (bad) push mov movslq adc fs xchg jg callq jo pop cvtpi2ps add movsb sub rex.RX data16 cmp cmp or xchg push outsl xchg (bad) movslq jb jmp cmpsb adc adcb jle jnp mov cmpsb mov rex.B mov sbb movsl enterq jle mov lods mov lock mov rex.XB (bad) xor (bad) sub loop push leaveq mov mov (bad) rol rcll in pop xchg xchg pop rex.WRXB rex.WXB cmp rex.B repz sbb outsl rex xor pop pop (bad) xor pushq sarl movabs xchg pop icebp and sbb mov cmp jmp mov xchg lods fidivr jmpq jmpq pop add jne jo movabs pop (bad) or (bad) xchg psrlq test (bad) fsts (bad) outsb jmpq xchg xor or movl (bad) mov scas in fsubrp push adc cmp push cmpsl pushq mov shll scas rex.RB rex.RB insl pop jg (bad) stos fwait rex.WRX jle fsubrs xor sub je rex.WRB jbe jae adc jo adc imul es rex.W sbb idivb ds xchg stos sub sbb scas int3 fnsave fsubrs (bad) (bad) rex.WRXB jle (bad) imul xchg insl jbe js jo outsb (bad) lahf cmp mov (bad) rex.X in xor (bad) pushq (bad) and add retq sbb movslq rex.WXB xor idivb int nop fs sub pop outsb and mov or ja jg (bad) fs pop push mov gs ficompl insl pop lods (bad) rex.XB movsl (bad) push adc fimull xchg pop (bad) sub js mov cmpsl pop (bad) rorl sti jl pop jno xchg xchg mov and fwait out xor cltd cmp pop lods lret addr32 adc mov fistp pushfq jnp outsb sbb adc lahf (bad) xchg out xchg mov fimul out xor movslq rex.WRB pop lret rex.RXB (bad) jbe cltd (bad) retq repnz rex.WRB rex.WX repz sbb cld (bad) (bad) and pop movabs out (bad) jb push shrb pop shrl mov movabs stos cmp push xchg loop add xchg mov movabs jg scas cmpsb xor xor data16 addr32 add xchg int3 mov (bad) std mov mov es pop rclb (bad) clc setno cli (bad) rex.RX gs mov addr32 add (bad) mov and fnstsw mov movslq pushfq pop (bad) rolb cld js mov rex.WB rex.WXB and push mov imul jno stc (bad) (bad) rcrb mov jp pop mov ss imul movabs add insb test sub xchg rex.WRXB lret cmpsl pushfq out pop xor shl pop and (bad) in mov mov movslq pop push rex.WXB data16 xchg adc adc rex.R pushq (bad) (bad) (bad) rex.WRX (bad) add pop sub test pop rex incb loop out (bad) idiv pop (bad) andb movabs mov cmpsb mov enterq incl outsl lods push rex.R push stos cmc in mov in adc stos xchg add push mov rex.X je outsl adc pop sub (bad) movsb mov movabs mov mov fcomps adc sub rol xchg jns (bad) push enterq movabs test rex.WRXB xor repnz loopne mov icebp xchg adc (bad) fisttpll pop ds cmp sub rex lret iret push (bad) (bad) fwait mov (bad) fmull jbe rex.R mov rex.RB rex.B pop jno push loopne adc or adc retq mov test lods xchg xchg jp cmp fildll leaveq jmpq (bad) lock insl loope nop iret mov lret mov rex.WRB imul int pushq int3 jmpq stc (bad) xor cmp insl pop retq jns xor test jnp adc lahf fstpl sbb (bad) push sbb test stc (bad) loope and (bad) pushq movsb jle or (bad) xchg push adc incb hlt (bad) jle (bad) xor scas gs xor xor fildll push push roll (bad) cli fs (bad) rex.WX rex.B sub lahf pushq sbb (bad) sub and xchg fcom lods adc outsl sbb and (bad) xchg pushfq mov cmp pushfq out mov retq rex.WB and repnz cmp in (bad) mov rex.W (bad) or rex test nop (bad) movsl sbb adc retq add imul sahf push jno pop sbb (bad) jbe push jbe (bad) cmp in (bad) ja (bad) xor in push lea adc cmp rclb push in rex.WB mov nop jbe repnz (bad) mov scas rclb insb cltd mov lahf add (bad) sbb imul and frstor jbe hlt rex.R or adc adc scas mov jle cs jle (bad) xchg xchg rcll (bad) xchg outsb jae rex.B xor lret adc rex.WB push sbb inc jno je lods cwtl xchg repnz repz mov xor pop mov push rex.RB pop pop jbe xchg adc push stc (bad) lock orb (bad) (bad) stc outsb lret sub imul lods repz in lods jge hlt je xchg repnz xor int3 and (bad) push sbb mov (bad) stc stc mov movsl test test fdivrp test cs callq (bad) idiv lods je push js popfq add punpcklwd sub xchg xchg movabs in jrcxz cmp jne je push outsl mov jo (bad) mov outsb mov adc (bad) outsb lods (bad) add xchg iret out (bad) adc xchg retq (bad) pushq jp adc mov pushq sbb ficomp imul or outsb add stc sub or bswap es (bad) pop scas repnz fildll cld jbe rex.WRX or fs pop rex.WX jl and sbb pop mul scas imul rcll leaveq mov mov mov stos pop movsl nop adc or std cmpb repnz test xchg movsb (bad) push cmp ss fistl (bad) (bad) pushq data16 imul vdivps addr32 sub rex mov nop add test pop test sub cmc outsb insl stos jge pop stc std and pop (bad) mov loopne pop rex.RXB or jrcxz jbe pushfq push int3 mov jle mov cmp pushq lahf or movsl jnp jns (bad) rex.RX jno rex.RB (bad) xchg sarb rorl fldl sbb sub mov xor stos jns out je outsb outsl sub and (bad) es xor add and mov (bad) pop loopne lods insl xor outsl icebp mov cmp rex.RB or mov movabs xchg cmp addr32 xchg rorb insb cmpsb fs cltd int3 pop (bad) rcl add adc adc int (bad) or loopne pushq push add ja test lret cmp (bad) (bad) jge (bad) cmc mov shll xchg xor or lret (bad) pop enterq test roll (bad) cmpsl pushq scas mov (bad) cltd pop (bad) (bad) fldenv mov cltd sbb test rex.XB in hlt imul (bad) je addr32 (bad) pop (bad) cmp xchg add imul rex.WX jle (bad) mov and mov (bad) loopne sbb (bad) cmpsb adc xchg cmpsb retq cmp or je xchg out mulb movabs lods sub xchg (bad) mov or sub rex.WRXB xor sub vfmaddsub132pd rex.RB js (bad) icebp repnz rex.WRX out pop fmull push pop mov adcl mov lret and faddl rex.RB pop fisttp vdivss rex.RX cmpl (bad) ficompl pop (bad) (bad) rex.R stc pop sub (bad) sbb in xlat pop ds push sete lock sub sbb xchg mov in es std pop fdivrs rolb xor (bad) and sbb xlat hlt in insl push lock sbb rex.X rex.RX mov addl in add xor outsb jl outsb jmpw data16 mov out outsl (bad) mov clc cmp negb (bad) (bad) pop jo addl mov mov test ds xor pop mov rcrl retq fldenv (bad) jno out movsb cmp pop (bad) leaveq test out mov int3 in in out (bad) (bad) (bad) push mov pop rex.WX rex.RXB adc pop add pop insb roll xor pop pop movsb xor stos pop movabs cmpsw fs jge adc cmp and sbb pop pop lret mov addr32 ss sub cmpsb rex.WRX mov jbe leaveq xchg (bad) cwtl pop pop (bad) push rex.XB cmp rex.W jbe js sub or mov movsl pop hlt cmp cli je rex.WR lock adc mov movsb pop shl (bad) fisub scas cmpsb (bad) iret jle rex.RXB lahf mov jg cltd jg (bad) sub in rex.R rex.X mov add test xlat (bad) xor pop (bad) (bad) (bad) outsb leaveq (bad) mov rex.WRXB cmpl cmp sub sahf out mov scas movabs adc or or (bad) iret rex.WR mov nop rex.RB mov push nop movabs add mov movabs jrcxz pop pop int (bad) xorb rex.R fisub int3 pop xor (bad) repz (bad) incb adc sbb std mov insl imul xchg lea mov and adc (bad) mov ror rex.RB retw repnz mov (bad) and pop push push xchg xchg subb movsl mov jg loopne lods and mov add add cmp or add jbe mov in pop sbb rcr push leaveq rex.RXB mov jg mov xchg mov in out divb mov pushq ficoml rex.WX andl mov sbb (bad) xchg mov (bad) movslq (bad) ds je pop cs (bad) mov push clc repz xchg xchg sbbb cmc pop jne,pt fwait mov fcomip pop fbld or pushfq lret addb repz (bad) or cmc (bad) pushq push rex.WR mov fldenv mov xlat (bad) jle cmpb addl sub cmp in fdiv sti mov (bad) rex.RXB js xchg jp stos incl movsl mov jne out xor jrcxz rcrl jmp in (bad) adc pop mov lahf movabs rex.XB cmp clc (bad) rex.R cli sub sub mov (bad) cmp (bad) notb cwtl mov outsb adc (bad) movb and leaveq mov iret pop es (bad) and xchg or xor int adc mov mov xchg (bad) xor jp sub cmpl outsb scas outsb jae pop fs push cmp cmpsl pop sub jmpq movabs (bad) (bad) (bad) pop cwtl pop (bad) (bad) mov pop pushq lahf movabs (bad) (bad) pop std sbb hlt movsb mov scas jne (bad) lret jb (bad) movsb (bad) rex.WXB mov pushq mov cmp xchg mov xchg lods xor jo movslq pop out stos rex.RB fmulp cmpsl (bad) mov sahf out xchg jle out data16 retq jo pop (bad) test xlat (bad) adc xchg mov adc and shl in jb sub sub adc rex.WRX (bad) movabs or (bad) (bad) je or (bad) (bad) (bad) (bad) jb and jmp imul cmp jb (bad) mov sahf xchg adc adc rex.WR sub stos lods rex.XB (bad) loop sbb scas insb pushfq or jp in sub push and shl push fcomp addb push stos push out ja divl or adc (bad) test and sarb addr32 mov adc (bad) pop movsb mov cmpsb cmp sbb (bad) je pop mov (bad) jle scas lods callq movsb jnp (bad) lret callq xchg mov jbe cmpsb mov mov xchg loopne xchg push mov and insl scas (bad) mov (bad) (bad) jmp mov (bad) lods rex.WXB movabs test xchg xchg mov sbb (bad) mov mov (bad) mov sub (bad) xchg mov cmp xchg add (bad) xchg ja mov rex.W in mov cwtl (bad) pushq test lret in scas adc lods cmpl rex.W and std lods (bad) cmpl sub out sbb mov repz add (bad) xchg jb add (bad) xor retq imul push movabs (bad) (bad) in test jbe xchg (bad) fdivl xor movsl fistl (bad) movslq rex.B jbe,pn xchg jbe movsb xor pop mov jae (bad) sbb xchg mov or xorl fwait out mov lods (bad) (bad) pop rex.W roll fs pop sbb and int xor out loopne imul fs ds xor pop add sbb jno pop rex.RX es (bad) scas imul (bad) out rex.WXB jne jle fs loop adc lock sahf lahf push pop rolb test hlt jno jmpq adc mov xchg sbbl sub pop sub cmpsb (bad) fstl (bad) loopne in insl addr32 (bad) (bad) mov ds outsl mov pop callq jo mov mov out and mov push loop fistl movsb jbe xor xchg movabs test idivb pop xor add xchg movabs mov sbbb loop adc pushfq pop cmpsl or out orb xchg rex.XB mov fadd ja sbb test rex.X test xchg sub int3 (bad) sbb jge (bad) xchg sbb (bad) (bad) insb or mov hlt add jle pushfq lods outsb in clc (bad) and xlat mov adc fisub rex.WX popfq fisubr pop xor in and (bad) pop (bad) cmp jno outsb (bad) or or gs xchg pop mov es pop stos movabs std jb,pn sub mov or jl xor insb pop xor nop xchg test sub sub rex.WR gs pop add movsl (bad) test pop xchg mov sub pop xor and (bad) faddl and pushfq or (bad) insl sub xchg test loope sahf movabs stc sub sbb (bad) lret jb loopne pop mov rcll movabs lods jg cmc shrl pop (bad) mov or mov subl rex.RB (bad) jp (bad) stos enterq mov in test jmp mov cmp gs (bad) fnstsw xchg movabs xor mov adc cmpsb mov jp icebp or mov imul movsb stos add in or scas jmpq pop (bad) jbe lret and (bad) stos nop push xor and (bad) rex.WRX xchg scas (bad) test and (bad) in movabs movabs je or or xchg jno ja and movabs push mov (bad) enterq lods retq out cmp mov stos sub loopne outsl mov pushq (bad) scas outsl jo incb sahf adc sub clc cmc popfq (bad) sbb xchg callq pop cmpb (bad) mov mov movabs ljmp rex.RX es stos jns jns add mov (bad) ficompl xchg and mov jg sub movsb (bad) xchg (bad) fdivrl mov xchg rclb sub fs mov sbb (bad) outsb sub add cmp movsl sub mov fs mov cmpsl mov sti mov adc xorb icebp cmpsl out mov movabs (bad) rex.WX mov pop frstor outsl cwtl xchg lahf mov rex.R pushq leaveq jbe movabs rex.XB add rex fldcw test cld mov repz jge pop mov or jne xor xchg loopne pop pop adc out mov mov sbb fistpll clc lea rex.WR rex.WRXB data16 in pop sbb rex.WB rex.WRX leaveq xchg rex.WXB test shll (bad) and out or jbe xor scas test mov shll (bad) xchg rex cltd mov pop fmull rex.WR cs loope pop mov cmp movsb (bad) roll mov in sbb callq sbb adc jbe es xchg in insb fcmovbe jl xchg movabs and retq jns orl int mov mov ficompl sub pop add sub pop (bad) or or test jrcxz ss out outsb movabs pop rex.R (bad) outsb pushq mov movabs cmp mov cmp sbb sahf outsb stos pop (bad) scas jbe adc (bad) and movsl adc jle insl push andl jns add sub mov rol mov je (bad) faddp stos cmp lods retq mov mov ss cld mov xor jle add mov imul shrb scas in movabs adc xor jge push xor add (bad) sub mov push test fnstenv fadd lods xchg gs movsl out jbe xchg fidivrl (bad) pop sub mov test xchg and adc sbb out jno mov (bad) mov rex cmp jmpq ficoml cmp cmp push xor sub (bad) fwait sbb scas mov jmpq imul pop cli movabs pushfq xchg mov jbe shrq mov mov pop mov lahf mov (bad) test or pop (bad) jge retq rex.R mov in (bad) lea and mov xor fcompl lock and jbe movabs pop mov rolb movslq adc fistl rex.WRXB punpckldq rex mov pop rclb loope adc rex.WRXB insb rex.WRX and movabs lea mov out js jmp loope sbb xlat pop xor lods out (bad) sbb or rex.RB mov insl cmpsb push pop mov mov movabs pop mov jb (bad) cmp mov movsb pop mov jle iret jo pop clc xchg pushfq (bad) adc imul xlat cli (bad) cmc sahf in jrcxz jbe lret jns add xchg test (bad) (bad) movabs movabs movslq rcrl or lock adc rex.WXB xchg and jne test negl jle insb sbb add sbb vaddsd icebp int3 movslq sbb (bad) sub xor jle sahf (bad) cmp xchg jg (bad) sub xchg (bad) cmp gs (bad) (bad) icebp pop fbstp (bad) pop hlt pop movsb add loop pop adc sbb xchg sbb mov pop rex.WRB rex.WX add push pop (bad) pop xlat cmp outsl lods data16 movsb movsl rex.WRXB fsts rex.RXB movslq pop test (bad) insb adc retq (bad) mov (bad) jmpq nop addl xor rex.RXB mov mov fwait retq out bnd (bad) movabs movabs cltd in cmpsb fimul pop mov xor ficompl emms outsb repnz (bad) jns jne and (bad) pop and jns orb adc rex.XB sub and push pop add cmp sub jle (bad) (bad) push or xchg (bad) sbb cmp lahf (bad) lods rex.WR fs mov and fisubrl insb xchg mov adc movabs iret pop incl (bad) idiv outsl adc mov idivb int3 rex.XB data16 rex.WRB movabs xchg hlt xor mov loop stc sub jbe movabs outsb (bad) movabs callq rolb xor push scas mov push pop (bad) js cmp mov (bad) movsw and (bad) pop outsb push (bad) popfq push adc or mov movabs mov popq sbb pop jbe outsl out rex.WXB lock add jp jmpq cmc out rex.WXB jp outsb adc rex.B pop (bad) rex.WRX mov mov cmc shr repnz test out xlat jg add scas ja xchg fildl ror mov xlat loop cld movabs (bad) pop mov ja xchg outsl es xchg cltd outsl mov push mull and scas rcrl mov sub sbb retq add (bad) cs rex.RB rex.X movsb push shrb (bad) push or (bad) jrcxz xchg repz sbb mov jrcxz incl (bad) pop push xchg (bad) pop pop mov rex.R test pop popfq rex.XB (bad) and push cwtl std test icebp cmpsb addr32 (bad) mov jge (bad) pop ds pushfq (bad) sub jne loopne pop pop xchg pop fstpl pop or or cmp sub movabs jno pop and (bad) lret cmp pushq addr32 outsl pop xchg cld push fnop sbb (bad) movsb lock add pushfq sar cmpsb add pop (bad) (bad) loopne rex.WB sub scas sbb (bad) xchg (bad) xchg lock rcrl mov decb jmpq cmp imul lahf insb pushq rex.WRX es mov out mov pushq sarb xchg add jno (bad) xchg xchg push test sahf lock rex.WB repz pop pop mov push add xchg scas push sbb (bad) cmp in mov in (bad) xchg and sbb pop (bad) adc pop insb add stos sub (bad) jae sub sbb rex.RB lods imul divb jp pop cmp or (bad) in stos rclb pop andl leaveq xchg or jb test rex.WRB jle lock jle xor ds std in cmp out (bad) sbb rex.B callq lods rex.RB roll or outsl mov lret rex.B out stos fsub mov pop (bad) add (bad) mov jno fimul xor shll repnz fs add stos in (bad) xchg xchg mov outsl push (bad) xchg rex.X jg rex.WRXB cmp addr32 xchg loopne loop pop (bad) mov xchg push pop add sbb jo (bad) repz cmpsb stos pop test imul sbb loop jbe rex.RX and imul add clc xor or rclb callq stos (bad) in jne jge (bad) or movl movsb mov mov mov (bad) (bad) pop pop pushfq (bad) xchg (bad) stos sub (bad) adc repnz mov int3 icebp out loopne mov rex.X in callq jg (bad) jne mov (bad) add mov (bad) gs or or sub (bad) in and out xchg push jno (bad) sbb out mov out pop rcl (bad) push push lods stc cltd sub rex.B (bad) jrcxz push push scas xchg (bad) sub jo in in mov and insl push (bad) jl jle xor mov rex.XB movslq repnz mov loope rex.WX adc loopne mov mov (bad) ficompl pop mov (bad) mov lods test cld (bad) stos lret cmp fwait add add sub in movabs cmp adc je cmp sub stc (bad) leaveq mov rex.WRXB fild (bad) (bad) mov mov sub repnz callq imul rex.RXB xchg retq enterq (bad) rolb in sbb sbb outsb xor test (bad) (bad) (bad) loop and in sbb xchg shlb cltd xchg repnz cmp xchg fcomip es xor pushq movabs sub out xor rex.XB push adc xchg mov (bad) (bad) movslq insl lahf and jae mov pop mov pop callq icebp scas (bad) cmc and frstor or xchg hlt jmp sbb iret (bad) rex.X in callq leaveq lret ja mov jmp jmpq fs push nop addl (bad) mov and pushq jbe stc jl stos movabs out out (bad) (bad) mov test rex.X stc mov mov (bad) lret (bad) (bad) adc sbb mov mov cmp jmpq pop (bad) sub je rex.WB out xchg (bad) or (bad) rex.WXB movabs pop rex.WX scas test (bad) pop (bad) adc xor gs cmp (bad) in rcrb stos adc (bad) ss and movsb (bad) and mov sbb xor (bad) jl in jp fisubrl repnz pushq adc nop outsl mov rex.WRB push rex.WR rex.W pop in sub (bad) rex.XB or movabs pop push (bad) out cmp xor test (bad) rex.R xchg pushfq icebp xor retq pop nop adc clc mov fyl2xp1 cmc in pop or mov pop cmp (bad) fdivr lods fisttpl test mov rex.XB ds cmp mov jle vpshufhw in (bad) pop (bad) rex.WRB outsb insl jmpq cmpsb (bad) (bad) lea popfq (bad) rex.RXB ds rex.X xchg adc pop rol js sbb imul retq fs (bad) and and repnz cmpsl sahf and or (bad) (bad) adc sub pop mov (bad) xchg outsb pushfq mov rex.X pop (bad) lea (bad) (bad) mov sti test movabs (bad) sahf and push pop nop push xchg rolb test cmpsb hlt mov fwait pushfq mov out (bad) rex.WB stos xor incl clc jge mov jmpq nop iret xchg xchg rclb sbb in sbb lret lret xchg jmp movabs or cli (bad) pop xor jg jns jo lock (bad) sub test sbb rex.WRXB loop push cld add add mov rex.R rex.WX cmpsl jmpq (bad) pop sti loop scas (bad) sub test (bad) movabs lret pop adc (bad) push pop repnz outsl fmuls mov (bad) xchg lods imul cltd enterq and (bad) es pop mov repz mov pop mov sbb sarb out retq jl pop pop fcompl add sub (bad) (bad) push sub pop outsb lock addb movabs xchg pop xchg jbe xchg rol and or xor rex.RB rex.B pop mov push rex.RXB mov fs (bad) (bad) jrcxz or mov rex.RXB mov cmpsl xchg pushq pop xor pop lahf pop out jle int ss sbb out (bad) movabs pop outsb jnp or (bad) sbb lret xchg lea lretw fdivr or xor test repz (bad) pushq (bad) ffree vmaxsd (bad) sbb outsl xor movsl movl pop fst adc scas movabs xchg cmp jns or and xchg push rorl adc retq scas xor rex.X (bad) adc stos outsb cmp jge push jb rex.R out cmpsl cmpsl out (bad) and mov sub push cld sbb outsb outsb rex.RX xor test int sub xor mov or cmp push retq fs out rex.RB rex.X cmp or (bad) or jne cmp rex.WXB out mov (bad) divb movabs mov (bad) xchg (bad) leaveq xor cmp cmpsb xchg add rcll cmp clc mov lods push xor (bad) (bad) outsb xor sahf pop sbb test stos push (bad) (bad) imulb (bad) and xor rex.W int jae pushq pop sub pushq movabs and cmp (bad) pop mov jmpq sub cmpsb jno adc push jp leaveq lret int3 add jmp (bad) (bad) pop out (bad) outsl xor rex.RXB (bad) xor pop sub push xchg rex.WRX push pop rolb out sub pop pushfq fldl je scas gs fsubp data16 xor pop (bad) rex.RB retq jmp notb (bad) add xchg lock sub xchg mov loopne in add jg sub (bad) out adc xchg adc cs jp addr32 pop cmp and in pop rex.WXB cmp sub sbb (bad) (bad) movabs (bad) (bad) in sbb jle fidivr shrl (bad) adc (bad) fidivrl cmpl lret rcrl sti jns cmp or adc stos fnsave (bad) nop movabs lods rex.WB fs in (bad) sahf (bad) repz or mov pop or sub jns sbb jns adc jle roll int3 mov mov xchg (bad) or in xchg (bad) hlt cs rex.WR mov pushfq pop movslq rex.R pop mov mov xlat sti or rex.W rcl add (bad) shlb sub mov (bad) (bad) lret rex.RX movabs mov xchg jnp jp (bad) (bad) pop adcl sahf fs (bad) fwait pop (bad) int push cmp (bad) jnp mov pushq xchg out (bad) in (bad) insb sub repz mov sbb adc jnp (bad) in and mov pushq mov (bad) hlt mov out push jle rex.WX sti idivl (bad) movabs (bad) pop adc cs lods scas xchg retq sub xchg mov in adc (bad) jo rex.RB pushq mov push mov (bad) int rex.WRXB cltd insl push int3 sbb rex.RB or (bad) xchg adc jg (bad) retq (bad) imul in pushfq adc hlt clc and xlat cli (bad) cwtl (bad) pushq (bad) divb jb sti jle push jrcxz cmp sub rex.RXB cmp rcrl (bad) je (bad) outsb pop test jbe jno insl (bad) cmpsb jbe sbb pop mov sbb lret js,pt cmp (bad) sti cmp xor mov (bad) and movabs and cmp push sub gs mov rex.WX enterq mov mov cwtl sbb (bad) lods out sub xchg sub jle maxps pop rex.WRXB sarl add rex.RX pop xor (bad) or (bad) js pushq popfq push (bad) cwtl rex.RX mov test cmp (bad) sub adc rex.RXB adc pop (bad) add sub stos int3 pop sti cld sub sub (bad) cli cmp and popfq loopne js add mov push and shrb xchg rex.X pushfq (bad) pushq je adc (bad) loope cmpsl pop cmc in test fcompl xchg (bad) sti sub loop pop mov jge cmpsb (bad) rex.WRB cmp fisttpl negb sub pop or add cli jrcxz xchg pop push mov sti mov lods sahf hlt int jns (bad) movabs sahf (bad) (bad) out data16 push sbb mov stos rex.XB and sub data16 shll je mov movb xor out or leaveq clc jns sahf and xchg fwait add mov cltd rex.X js xor push jno cmp add cmp mov push mov sub push mov mov (bad) (bad) (bad) xor imul retq sub outsb (bad) in and rex.RXB in xchg push jb rex.RXB (bad) idivl fldt in adc mov fwait pushfq and sahf (bad) in scas sbb xor pop xchg sahf rex.WRB data16 xor (bad) and imul rex.WX fstp push movslq (bad) (bad) fcompl adc rex.R cmpsl pop imul mov sbb adc sbbl shrl addr32 xchg hlt jno pop mov iret push mov jle pop cs es lahf movsb pop fstpt xorl mov mov pop insb xor repnz (bad) jb mov jno callq mov ds sub pop push rclb mov xchg cmp pop adc mov gs push rex.XB (bad) cmc test and add pushq (bad) mov cmp cmpsb out cmpsl pop sbb pop sbb rex.W rex.WR (bad) enterq sub rex.RX (bad) fsubrs movslq mov jne movabs and (bad) push (bad) add rex std stc in (bad) pop or (bad) lahf (bad) je (bad) cmc xchg data16 mov (bad) (bad) rex rex.RB nop xchg jbe or cmp scas movsl rex.WRB pop (bad) insl popfq push (bad) adc mov xchg adc stos (bad) movabs mov xchg cs (bad) pop fsub adc enterq cli fcompl (bad) adc pop push add movsl xchg (bad) (bad) insl cwtl sbb (bad) lock (bad) fildll push mov add cmp rex.X addr32 jb scas cmpsb movsb add jne imul pushfq retq int3 pop fwait test or (bad) jo loop cmpsb int jbe,pt fisttpl rex.WXB cmp mov (bad) cmc and jbe adc sbb movl pop lret retq mov (bad) lahf insb test movslq mov push rex.WRX testb rex.WX (bad) sbb repnz fisubrl pushq frstor mov and pop and pop cwtl pop (bad) icebp sub sbb stos mov fildll sbb push incb ds pop js mov rex pop xlat (bad) rcll push jno jrcxz pop jne mov scas (bad) (bad) mov cmp jns insb fwait xchg rex.RB or cmpsb pop pop leaveq or divb mov lea pop scas xor push mov mov jl data16 rex.WB mov cmp hlt loop sub cwtl cmpsl mov sub sahf push xor push imul xor (bad) mov cmp (bad) cmpxchg mov cmp xor sbb xor rex.WRX rex.R (bad) mov fwait (bad) (bad) mov push je xchg movsl test in xor rex.WR cld jno pushq rex.W mov enterq lods rex.WX je and xchg outsb (bad) or loopne outsb ficoml (bad) cmpsb adc pop xchg add loop pushq xchg adc mov sbb or test (bad) rex.WB rex sbb movabs (bad) add rex.RX xor or pop iret rex.WR sbb rcl pop int3 jg ja xor mov es imul (bad) (bad) lret xchg xlat (bad) fistp movabs pop or adc clc (bad) cld sub cwtl loopne pop adc and mov pop mov sub mov pop lret clc in ficompl add sub jmpq push icebp (bad) (bad) movslq cltd jo nop xchg push pop rol adcl push xchg and pop rex.WR rex.WX popfq and rex.WRXB hlt jp lods nop fisub rex.WXB rex.RB pop sub mov out jbe test (bad) and flds jl mov cmp sbb (bad) movabs iret add test (bad) jrcxz xor mov and and test retq push int pop jbe sub adc test mov and adc and sub add data16 loopne xor jl push test rex.WRXB adc xor cmp fwait (bad) mov jne xchg rex.WRX or mov adc (bad) fmull (bad) cwtl jg rex.B rol pop out and mov decb lret scas push pop retq add cld adc fiadd mov iret orl cmp sbbb js add push jb mov vunpcklps retq mov (bad) cld mov (bad) scas rcll fcomps sahf movsb and movsl xchg in enterq sahf insb sbb xor clc in retq retq loope pop repnz (bad) xor mov jae (bad) rex.XB and clc pushq push xchg or loopne retq mov lret mov push repnz outsb mov mov rex.RX and mov cmp jo rclb xchg rex.W lods clc xchg or push jns (bad) test mov xor xor adc jne shrl sbb xchg or in stos pop cmpsb pop and (bad) cld mov pop mov mov sub xchg lea jns mov xor push pop jb (bad) rex.WRXB mov ds pop pushfq fsts rex.WXB add (bad) lea add pop xchg (bad) jbe stos mov lret mov movabs lret rex.WXB pop ds pushq rol scas je (bad) mov jbe sub sahf pop mov push xchg and test movsb and adc fstpl in jl fs pop adc pop pop (bad) rex.B add mov or movabs jbe andb incb addr32 pop js xor pop retq pushq pop out and outsb lret enterq (bad) rcl (bad) lods (bad) mov loopne vmovd push sub rex.WXB fs jbe (bad) es mov loop pop pop rcll fwait sar test pop outsb rex jb test js leaveq cmp pop movabs push rex.WRXB fwait sub add mov movslq xchg mov (bad) mov movabs lock sbb push push xchg sahf (bad) (bad) cli nop rex.XB lods add hlt lock rex.WRXB pop mov addr32 xchg fisttpl or cmp (bad) cmpsb enterq sub es lods data16 (bad) rex.WRB out imul fsubrp subl jo jle push push xor rex.W sub adc xchg sbb xor in (bad) dec (bad) imul (bad) (bad) jae cmpsb add pop dec pop rex.WRX cli push rex sbb mov in sbb sub subl lods add rex.WRX rex.WX rex.W subb popfq sbb jae out lahf push (bad) jbe rex.X push shll and out jb pop pop pop popfq mov rex.WRB add adc pushq out (bad) fisttpll (bad) push pop lret jbe rex.WRXB movb testl fcmovnu pop gs fmul pop movabs pushq xchg rex.WRXB mov pop xchg jl fst roll pop push rex.WXB cs and movsl in es (bad) add sti xchg cmp movsb scas movabs rex.RB cmpsb add (bad) cmc jrcxz xchg add movabs (bad) scas add or sahf loope or movabs mov pop rex.W rex.WRB jno fcomp in vdivps add mov pop xchg push push cmpsb int pushq cmp mov (bad) xor movabs or lods mov jp movabs hlt adc (bad) data16 maskmovq enterq rex.R rex.WXB jg es add std cmp jb loop pop pop scas loope,pn mov icebp vdivsd mov enterq (bad) outsl mov mov out rex.RX rex sub (bad) movslq sbb xchg mov pop pop or nop push leaveq (bad) add cli mov jb out jbe jle test xor lock (bad) add xchg mov (bad) ja pop loope ss pushq sar add test mov rex.WRXB and rex.WRX lcall (bad) sbb roll cmpsl jmp (bad) push (bad) data16 and imul movabs addw (bad) mov movabs pop xor fs (bad) sbb lods jmpq xchg xor jbe (bad) lret scas sub (bad) fldcw push mov rex.WRX sbb pop rex.RX loop cltd (bad) gs fstps lret jnp mov mov cmpsb cltd add rex.WXB jb int3 test cmc rcrb jl in fistpll jno sub sub pop mov cwtl rex.WRXB (bad) or movabs jae and lods mov out jp (bad) mov jb fnstsw mov nop mov jb (bad) (bad) outsb (bad) mov lods rex.RXB fiadd sub cmp data16 adc cmp pop lods cmp cmpsb in and lret cmp lahf or jmpq subb rex.WR (bad) xchg jg in fld addl test (bad) xlat (bad) loop retq xor sbb movslq mov rex.WB jno sub rex.XB xchg movabs mov test rex.WXB addr32 iret sarb out repnz sti cmc (bad) movabs pop adc js rex.RX in pop (bad) lahf js rex.WR loopne hlt jae outsb mov cmpsl sub (bad) jle jno fisubl jo adc stos (bad) shll (bad) adc outsb movb rolb int rex.R movabs in cli imul mov xor scas sbb (bad) cli jmp jl mov (bad) and (bad) xor push lods loope repnz push xor xlat popfq or pop clc pop mov sbb mov or xchg rex.WRX (bad) or rex.WRX mov jnp cmp data16 xchg (bad) sbb mov and and xchg mov stos sub packssdw pushfq clc cli jrcxz movsb (bad) pushq add mov (bad) pop (bad) cli jg out in (bad) cmpsl pop (bad) mov std stc pop sbb mov mov or rex.RX loope (bad) push adc xchg addl mov ss movsb (bad) pop (bad) or add xchg push adc fisub fwait add (bad) ds cwtl (bad) sub xchg nop outsb pop or loop hlt sbb xchg sbb xchg fisub and rex.WX notl fwait popfq repnz movabs pop (bad) mov cmpl pop or or (bad) xchg test jne leaveq rex.X insb sahf cmc (bad) xlat loope pop pop (bad) adc outsb cmpl test push in (bad) sbb mov mov retq cmp movabs jle shrb (bad) pop movslq test (bad) (bad) mov mov mov mov inc mov rex.WRXB xchg sbb add jae,pn mov insl movslq mov cmp pop (bad) js xor out jg addr32 adc loope loop gs rex.W imulb fcomps lret hlt pop xor movsl rex.WRXB js (bad) fstpl and cmp push cmp push loop iret (bad) test jnp inc insl pop (bad) (bad) (bad) add jle or sbb rex.RB cmpsl enterq rex.WR sbb fs adcw (bad) mov retq icebp adc outsl xor (bad) (bad) xor rex.WRXB imul mov (bad) xchg or and sub jns mov test rex.WXB sti mov lods loop test sbb jb rol movsl push mov repz cmp fs (bad) or mov cmpsl xor jne xchg xchg addr32 sub cs icebp (bad) xchg adc cmp cmp adc fwait loopne xor int3 stos cmp cmp mov xchg sub rex.W rex.XB jbe lahf xor loopne fnstenv and lret cmpsb and mov or rex.RXB iret lods jo cmpsl mov cmpsb rex.WX negl (bad) in adc lock xchg out xchg mov sub loope movabs retq (bad) add movslq jae cmpsb (bad) pushq and in sbb sbb jge rex.W rex.WB (bad) sbb and loop (bad) lods leaveq mov ja icebp mov add cwtl pop fdivl retq pop adc rex.R push rex.X rex.RB xorl pop icebp repnz jl lea (bad) sub rex.RB jnp (bad) xchg xchg jb mov mov data16 push (bad) lea fcmovnbe xchg mov cmpsb retq push push and pop pop divl loopne (bad) clc pop rex.RB and xchg add (bad) mov data16 (bad) sbb jne data16 xor loope adc fbld repnz and in xchg push sar outsl pop sbb (bad) adc movsl and sarb add rex.WB (bad) pop lock scas pop adc movabs mov xchg fstpt adc rclb rex.R (bad) add lock jmp or (bad) rex.WRX cmp push rcrb (bad) movabs jb mov jrcxz xchg (bad) push rex.WRXB (bad) fld rex.RB outsb push mov pop (bad) xor (bad) sub xchg rex.WX pop cwtl and loope push pop addb sbb push movslq pop xchg addl movsb rcrl sarl std mov lahf and sbb jo mov sub rex.RXB cmp ficomp push rorb in mov sti movabs sbb add (bad) pop mov callq pop fstps sub sbb mov lret pop in jmp mov rex.RXB (bad) hlt (bad) in xchg rolb jne iret movabs (bad) in cmpsb sub xchg adc (bad) cli cmp lods nop outsl movabs (bad) cli loop xchg movsb rex.WRX rex.WXB pop stos sti jns lods xchg xchg clc test stos test mov pushfq push pushq add jbe xchg mov shl (bad) (bad) and push je test iret outsb and repnz cltd movsb sub pop mov push pop jbe cmp mov add and sub scas int3 retq rex pop mov test fisubrl jl (bad) movslq mov sarb or nop mov mov and pop (bad) or push shr gs (bad) or push pop rex.WB mov loope outsb sbb nop push mov subb imul mov pop cs setbe sbb (bad) movsl (bad) push (bad) (bad) ss xor idivb and push mov and movabs test pop push fiaddl rex.B xor rex.WRX xchg push mov sub mov test movabs (bad) xor pushfq xor push lahf cltd test in pushq movsl fsts sbb es addr32 addr32 sbb (bad) int3 scas data16 xlat fwait es pop test cmp (bad) mov cmc pop ror sub and fist push xchg lret leaveq rex.RX cli fs rep rex.WXB adc xor movsb rex.WRXB (bad) sbb js (bad) adc rex.RXB insl mov mov jno or mov push jle int3 cmpsb mov add mov pop xchg fadds (bad) adc pop movabs loopne fsubr jp rex jno rolb xor and insb rex.W or stc (bad) (bad) je (bad) sbb movsl and (bad) repz sbb stc (bad) pop movsb jmpq mov (bad) lahf movabs imul xor data16 rex.RXB fisttpl mov sbb (bad) xor xchg shrl outsl push rex.WRX popfq adc popfq enterq repz cmpl sbb xchg (bad) rex.WXB ja cmc mov fstpl and data16 movabs xchg jae fcoml cmpl (bad) lret xchg lods scas movabs in imul (bad) movabs xchg (bad) outsb pop (bad) repz mov sub cmpsb lods (bad) pushq mov in push xorb jns (bad) rex.XB fsub or or xchg sub xlat loopne (bad) lock (bad) rex.WRX rex.WXB stos pop add mov lods xor sbb adc out fisttpl movabs andl push sbb shrb jp mov iret jne push and or repz (bad) addr32 rorb (bad) loop jrcxz (bad) pop (bad) fisttpll (bad) mov (bad) adc pop mov movabs sbb pop (bad) add ja sub out jne rex.RX repz xor hlt xchg cmp sub sbb mov fidiv mov jnp mov (bad) faddl (bad) clc cld loope pop lahf push rex.WRX xorl and jl jns movabs and stc in (bad) int3 in and ss mov add (bad) rex.R stos xor cli mov (bad) cmpsb lahf jb repnz (bad) and sub (bad) jg sub scas loopne movabs repnz (bad) clc pop fwait (bad) imul in in rex.W int rex.RXB jle xchg adc jg ja push and xchg sub divps popfq cltd xchg paddd add pop add pop scas (bad) retq (bad) xor push jnp pop movslq sahf popfq pop rex.WB lahf and imul xor ja icebp outsb pop in stc cli (bad) mov jo data16 gs mov fstl xchg jbe fcompl mov (bad) idiv (bad) mov or out (bad) or jl cs outsl cmp cmpl and sti adc insb and fsubs mov push cmp cmpsb imul imul pop lods and rclb test cmp sub fidivrl data16 jle fcomps (bad) cmp adc ds pop insl push lods notb sarl mov cmpsb mov jp cmp or sub (bad) movabs movslq (bad) lods add out rex.WRXB ds jno push mov or out mov pop out lods testb sub xchg (bad) xchg add (bad) fcomps (bad) test jbe callq (bad) repz es (bad) (bad) test (bad) in cld ss faddp adc jg mov mov mov push mov (bad) (bad) loopne jl rex.RX rclb cmp lahf pop test outsl rex.W (bad) fwait pop push movsb (bad) xor movsb rorb adc jl cmc lahf insl pop (bad) push cmp (bad) fs je cmpsl retq cmpb mov sub push jle push lret add fild (bad) or pop lret mov cld fisubl cmpsb movslq stos clc hlt jns gs loope jg push sbb lret jbe (bad) out movsb popfq lea rolb sub (bad) pop ja nop cmp fidiv lret (bad) pop fs mov fwait xchg lock insl push pop fcmovb (bad) mov pop jae stc xchg mov pop and in imul (bad) je pop sub and sub fcoml lret jae (bad) jrcxz rex.RXB rex.WX loop (bad) rex.WR insb sub xchg jbe (bad) push adc mov cmp jae adc jp pop cld pop out outsl lods rex.WRXB rex.XB mov push cmpsb jmpq rex.WRX rex.WX lea jb (bad) jrcxz pop repnz or (bad) xchg jge andb pushfq pop mov cmp pushq je push pop (bad) jnp (bad) xchg adc insl cltd movabs mov jmpq (bad) jle cmc cmp insl cmp xchg mov push mov jle (bad) xchg cmp retq and lods out xor or imul pop push test jl jmp adc pop lahf (bad) xor loop jbe mov scas pop cltd pop fst adc rex.WRX pop (bad) (bad) cs int mov rex.XB xchg pop sti es (bad) movsl mov std mov pop (bad) rorl rcl rex.WRB rex.RX retw shrb xor in callq and sti retq jg (bad) iret or push data16 adc pop and (bad) imul jle cmpsl pop pop lret (bad) or sub int3 or scas push mov mov test xor cltd mov mov fsubp test push (bad) xchg xchg pop (bad) (bad) imul cmp (bad) clc mov jmpq jnp (bad) imul es pop xor fistpll test pop in rex.WXB in jnp push pop sub imul sahf pop mov and xchg xchg rorb int3 jrcxz sbb jb insl popfq sbb (bad) xlat xchg out pop jbe clc add add or (bad) pop (bad) cli mov loop and callq jb pop (bad) jmp test movsb fs xchg ss jrcxz or xchg rex.R jrcxz outsb in (bad) rcll test sub fcomps sbb js pop enterq xor and sub rex rex.R fwait stos popq nop rex.X jns or stos rex.WRXB addr32 mov out cmpsb xchg (bad) rol (bad) pop sbb pushq rex.WR jl jns sub (bad) testl cmc leaveq test (bad) and rex.WXB (bad) pop or cmp cmp outsb mulb and jrcxz retq adc scas xchg rex.WXB xchg push mulb pop mov adc ja push ja retq xchg outsl movabs (bad) (bad) outsb pushfq jae fs fistpl lret lea mov callq mov sti pop cmp xor jns scas pop cmp mov push push xchg jmpq lock pop jbe pop insb mov and pop sti xor loope mov out and rex.WRX adc pop fwait lock xor lea sub (bad) pop xchg js sub cmp xchg xlat rex.R push pop frstor fist jbe rex.RB mov loopne cmp in (bad) frstor idiv pop sub movabs loope outsb and xchg (bad) mov mov (bad) (bad) pop or fbstp (bad) es jmp xchg xchg (bad) (bad) stos mov in mov stos lsl sbb jle mov movabs jle rex.XB addr32 and (bad) movabs xor test and (bad) mov (bad) (bad) rex.WXB ffreep (bad) fsts mov movabs and cmp or (bad) cmpsb cmp fdivs stos (bad) fmul pop mov cmp leaveq and (bad) xor insb movsl rex.WB (bad) (bad) pushq jbe int3 adc (bad) movabs andl cmp loope pop negb cmc add movabs sub (bad) (bad) xor icebp jns cmp jne xchg sub (bad) rex.WRB (bad) mov (bad) or (bad) test in xchg sbb push push out (bad) mov mov adc jmp rex.X pop mov jae out pop (bad) mov cmpsb (bad) jne rex.RXB mov movabs vmovd rex.WRXB add xor and sbb or and sbbl and lahf sub push adc mov mov add jbe (bad) push fs mov and sbb adc pop cwtl mov shr addl movabs sub pop cltd push int3 outsb mov and add (bad) sbb (bad) and mov js cmp test rclb pushfq pop popq jl pushq imul fwait out mov pushq xchg rex.WR sbb scas cld sub cmpsb and (bad) (bad) and pop and rcrb enterq (bad) outsb mov pushq and cltd fisttpll outsb cmpsb data16 cmp insl pop xchg push out (bad) rex.RXB pop or mov mov pop (bad) xchg adc mov jle ss xchg stos (bad) movsb or movabs mov pop js movsb sbb pop xchg movabs jl rex.RB fwait sbb test idiv sub (bad) adc jge ljmp sub pushfq pop fsin add test enterq add lahf cltd out mov adc push lods (bad) callq notb fcomip out xchg sbb (bad) movslq rex.W jno pop popfq sbb (bad) mov mov jnp xlat push jmp add (bad) (bad) fcmovbe lods xlat sti (bad) test rex.WRX pushfq jno add cmp mov pop and jmpq stos fmul fs xchg cmp mov rex.B rex.WX pop (bad) lret (bad) iret and mov and loopne fwait mov (bad) cmpsb adc scas xchg lock mov ja clc adc xchg jl mov stc xor pop adc and (bad) jno retq xchg sub pushfq jle int3 jb rex.RXB xchg pop sbb or mov mov cmp xor fldcw repnz hlt rex.RB movabs rclb fisttp mov jp xor (bad) ja pop fcoms test (bad) fs jle rex.XB out (bad) (bad) lret jbe pop xchg fnop (bad) pop rex.R movslq movabs pop pushfq sbb or loopne mov fildll insb (bad) xchg repz pop insl mov (bad) insl jno fcomps iret rex.WXB sub sbbb outsb (bad) mov mov rcrl push push incb jno movslq rex.WRX lea cmp mov rex.RB adc (bad) test retq pop pop add sub (bad) mov mov out sub sbb (bad) (bad) xor repnz rex.WX adc add popfq (bad) ror or or (bad) ss addb cmpsb int movabs pop leaveq (bad) outsb movabs mov pop es scas xor cld jnp mov (bad) lods stos fidivr and (bad) mov rex.WRX xchg jg pushq rolb nop jrcxz pop rex.WX jl (bad) stos (bad) pop sbb sahf pop jge repnz scas popfq rex.WRXB push loope mov pushw rex.WB ss movsl mov jrcxz out (bad) rex.WRXB mov cmc xor cs xchg es sub loopne shl xlat in jbe sub pushq int3 rex.RX xor jle mov retq adc mov sub sti retq leaveq test shrl rex.WB mov mov test sub pop (bad) leaveq (bad) push fildll mov insb mov xor sbb adc sub xchg scas mov test fisub subl xor jbe mov push scas (bad) or pushq std mov rex.WRXB rex.RX pushq cmp clc cmp hlt loop repnz xor sub xchg adcl repz cmpsb (bad) and xor lock rex.RX jbe rex xor hlt in pop outsl pop movslq mov (bad) test rex.X push fistl (bad) mov in pop xor data16 mov xchg add loop addl sbb (bad) (bad) (bad) pop test clc mov add nop rex.WRB rex.WRXB pushq jle shll xchg (bad) rex.WXB cmpsb js nop rex.RXB decb jae sahf sti jmpq shll pop fildll clc loopne mov cld (bad) leaveq or pop (bad) jmpq sbb outsb mov (bad) sbb xchg rex.W gs (bad) in (bad) test (bad) mov jmp push int3 mov add xor rex.RB cmp cmpsb iret mov and pop ds rex.X (bad) lret (bad) (bad) rex.WRX retq ficomp in add and rex.X jbe fist push (bad) and in cmp xor pop ss jg js stos sbb mov out callq add scas and rex.WRB rex.RX pop rex.WB insb rex nop int3 shr (bad) mov retq lahf mov imul xor (bad) lret or movsl adc movsl adc sub add push push sub jle jne sub jb in outsl retq mov (bad) shrb and movabs scas je sub rex.XB xchg push (bad) (bad) div rolb adc movsl xchg subl mov rex.WB sbb stos frstor je lahf pop (bad) lods (bad) mov test (bad) (bad) xchg ss xchg data16 es mov loop iret cmp jbe loopne pushq sbb mov rex.R ds pushq jbe sub scas push pop movabs mov sub mov push (bad) data16 inc xor movsl jrcxz cli sub xchg push (bad) rex.WX (bad) (bad) nop rcrb mov sub mov adc cmpsb out (bad) (bad) xchg or lods movabs pop lods sbb (bad) stos jmpq (bad) cmp jrcxz pop in fcomip sub jo test jl add pushq js rex.W mov gs loop or jbe pushq (bad) lret mov std (bad) movabs push (bad) adc xchg (bad) add jae (bad) add rex.WX (bad) cmp lock out cmpsl sbb (bad) loope (bad) and adc (bad) mov rex.WRX jo jmpq adc adc jle sbb sbb adc test (bad) loopne jnp mov sub and and (bad) xchg adc int movslq std mov (bad) cmp adc (bad) (bad) (bad) mov and pop jl jae cmpsl rex.WB and outsb icebp jb jp mov jb gs pop test (bad) mov repz repnz push movsl (bad) or pop fs jno mov cwtl adc pop sbb mov subl push and and (bad) xchg push stc movabs mov (bad) xchg push xchg and xorb mov movabs push rex.WX lods js sub loopne pushfq jo hlt outsb jo sub int or (bad) loop movabs pop jbe xor add and lahf (bad) int3 je addr32 (bad) jge (bad) add (bad) xchg loop mov (bad) out cmp mov push loope lret outsb push cmp pop jb hlt movsb mov (bad) jrcxz scas insl (bad) lea cwtl loopne hlt lods gs (bad) test sub adc (bad) outsl push mov orl cmp repz outsb lods rex.WR movabs int3 movsb int sbb fistp enterq or pop test xor (bad) cmp mov xor hlt sub mov fldenv (bad) rex.WRB (bad) rex.XB cltd and pop xlat push adc or jb (bad) rex.WRXB addr32 rex.B mov lea pop (bad) mov (bad) jp pop popfq pop stc cwtl je,pt rex.WRXB rex pop adc push pop (bad) mov mov (bad) test negb push sarl test loopne jg gs (bad) jb add stos sub repz outsb xlat mov (bad) (bad) sbb rex.WXB cs sub adc (bad) mov xor pop cmpsb (bad) or cmp sbb rex.R je (bad) out pop in rex.R adc (bad) enterq rex.WRB rex.X mov rclb (bad) (bad) nop (bad) sbb in or and callq pop jmp jg sbb stos retq (bad) cld repz and fistpl pop cmp out mov jge insl add packssdw (bad) (bad) pushfq pop iret push rclb mov retq data16 clc cmp and (bad) loope outsb jrcxz sub fbld and pop sbb bnd mov vfmsub132ss (bad) (bad) (bad) pop sbb rex.WX rex.RXB ss sarl (bad) lret mov int3 imul rorb (bad) retq push outsl insl and mov pop pop rol rex.WXB xor (bad) (bad) sub adc or popfq (bad) sub pop je ror rex.B movsl cmp (bad) and (bad) fmull movl leaveq cmc jne jns (bad) jmpq fistp mov pushq out pushq callw fcoms pop int3 ss lods sub adc (bad) xchg mov in (bad) and jle shlb sbb and (bad) or push lods mov rcll (bad) rclb mov lea int rex.B repnz fimul (bad) movabs pop decl xchg stos add mov (bad) fdivr adc rex.B rex.WB loopne xchg mov cmp mov mov cmpsb clc mov cmp fidiv (bad) sub sub cld loope xor pushq callq in clc lea jae cs cmp push mov jp test jbe and push rex.WRX shrl mov push adc xchg xor push ss xor outsl cmpsb jmp and rex.B pop sbb rex.WRX pop fadds lea js push in add and cld pop jbe rcll cmpsl imul or data16 sbb xchg leaveq (bad) rex.B rex.X mov rex.RXB pop pop sbbl callq scas xchg add fstp mov (bad) movslq popfq (bad) add outsb ficom push mov data16 rex.WR rex.WX pop or mov or ja jge and (bad) pop repnz pavgb pop (bad) xor push (bad) cmpsb sub sbb mov (bad) loop rex.XB cmpsb jb xchg xchg outsb sbb movslq repz xchg (bad) lock decb lea xchg mov scas add push repnz test movabs mov cmp push add fistpl sti pop (bad) movabs (bad) mov pop jp adc (bad) push pop rex.XB rex.WRX and sbb and cmp mov push add in stos jns mov sbb sbb push bts xor lods push in jle cmpsb (bad) and cmp lock es sub pop push mov pop xchg out and jne movabs mov imul nop in mov add rex.WXB adc lret (bad) rex.W int mov rcrl outsb sub test rex.X xor pop (bad) (bad) fistl adc (bad) push pop xchg jnp push stos (bad) rex.WR mov mov cmp pop xchg sbb add lock or fs adc (bad) jg cmpsb pop (bad) rex.WR mov movsl shll rex.B scas jno push (bad) sbb rex.WX lods hlt jo (bad) push lock pop xor imul mov mov out not lahf loop or cmp xchg and xchg cmpb mov jmpq (bad) adc out mov mov mov je,pt clc movabs out cmp jle mov (bad) push cmp in (bad) jle lret xor rex.XB jno (bad) out rcr movsl mov movabs rex.WX out iret mov rex.R xor rex.XB repz rex.WB (bad) (bad) std (bad) test rex.X lret sti and pop sub push loopne cmc and retq xchg (bad) cmp mov test cmc (bad) sti (bad) je movsb mov outsl in xchg insb sub jbe xchg sub insl pushq cmpsb (bad) divl shlb (bad) in scas stc or repnz jrcxz jne mov jmp mov or push fwait or adc pop jle nop jp (bad) add frstor (bad) (bad) mov mov outsl cwtl jge fwait hlt mov cltd rex.WXB sbb add mov or in mov out jle (bad) mov popfq movsb cmp jle ja flds repnz mov xchg in jns in and or sub sub out hlt movabs sti (bad) data16 or mov add out adc (bad) (bad) or mov pop mov movabs push (bad) cmp (bad) mov push outsb and cli cmp stos test (bad) (bad) movabs and xor sub xchg sbb jg testl jbe cmp rex.RXB and imul xchg or cmpl push jle stos pop sub add hlt (bad) rol out pop scas xchg push xor cmpsb (bad) scas push (bad) retq jrcxz rex.WRX or rex mov (bad) movabs jno in movabs hlt xor and xchg pop rex.WR rex.WB jbe adc (bad) (bad) leaveq movabs fs sar rex.WRXB (bad) imul fmul jrcxz sub (bad) or scas (bad) rex.X and int3 or cli jns lods cmpsl pop xlat rex.WRB rex.RX mov pushfq popfq retq jp sub mov stos movabs push mov mov jo notb data16 (bad) stos test sti (bad) ss scas and jle lods add push es cs or jnp pushfq jmpq pop stos loop movl rex.WR xor js (bad) lret out jge test nop insb mov in fbld test and lret (bad) adc rex.RXB rex.WRB addr32 adc (bad) iret out mov rex.X sbb movabs jo incb jle cmp mov (bad) (bad) out je cmpsb jmp rex.XB add jge sub (bad) xor rex.WXB sbb rex.WR add mov fs mov je lret gs fwait cwtl lock movabs pop xor add rex.WXB stc fucomp sub cs pop lahf addr32 ss pop hlt jge (bad) sbb push or (bad) pop repz jmpq (bad) adc clc add test pop movsl xchg cmp std jbe xchg retq add movsl callq pop push (bad) movabs jle cmpl pop test jmpq jle callq rcll jbe loope rex.XB movabs pop out lret add fist mov xchg subl jle mov movabs insl (bad) jle jno (bad) test cmc push lcall insl scas outsb sub (bad) fwait out xchg mov sbb pop fisttp pop movsb bnd (bad) pop jae adc movsb ss or pop (bad) xchg or pop xchg rex.WRXB hlt pop jle (bad) movsl rex.WB sbb sbb leaveq add ds sub in enterq (bad) pushq seto sbb jbe jl mov mov insb movabs sub sub jp outsb or add test fild incb (bad) in callq mov xchg callq scas test (bad) cmpsb pop loopne fildll test movabs fbstp rex.WXB mov lret add outsb (bad) (bad) rex fs jge fildll rex.WB (bad) (bad) lret out jae fidiv flds xchg std (bad) pop fcomip pop rex.WX mov stc (bad) mov in pop out fisttp xor sub (bad) xor pushq rex.WXB stc notb mov outsl fstps sahf stos scas stc xchg mov add repz cmc lock out fistp ds roll jb or cmp (bad) jne jmpq pop rex.RX push xor pop and (bad) retq orb jbe icebp sub jns jo movabs gs pop lret rex.W fs and xor xchg pop movsb sub cmpsb pop or cmc pop or or data16 pop test xchg movabs sbb callq push adc add (bad) out xchg movsl xor (bad) add jp cmpsb in in pop adc adc pop jb in (bad) pop leaveq mov mov (bad) movabs pop jmpq (bad) adc (bad) sar rex.X jne in std xor pop (bad) mov pushq adcb mov pop (bad) lods insb adc adc (bad) pop out mov and adc data16 test push rex.RXB xor mov xchg (bad) xor rex.WRXB jb add (bad) movsl pop push fimull xlat movw mov pop mov out decb in lret jnp fs pop pop xchg rep lods pushq xlat rex.WX rex.RX (bad) push add xor jno in push sbb mov in (bad) fcompl outsl fldl2e mov mov (bad) jbe mov cmc movabs or sbb lret mov movsl (bad) data16 jp out xor mov movsb pop rcll rol mov sbb pop and (bad) sti jg adc movabs xchg xchg cli movslq mov jge rex.X fwait or or mov stos or inc (bad) pop es test sbb (bad) xor adc loopne (bad) (bad) rex.WX vmulss (bad) (bad) punpcklbw enterq pop rclb sub mov push adc test insb lea rorb mov or (bad) pushq (bad) cmp (bad) fistl push punpcklbw adc (bad) rex.RX insb orl (bad) or loope movsl sbb xchg cmp jrcxz cmp jb mov xor (bad) lret xchg movabs jg sahf xchg movabs or (bad) push (bad) movsb rex.RXB mov xor fldl (bad) loopne mov fisubrl mov cmp and test popfq (bad) movabs insb sbb movsb scas rex.R xchg pop and repz hlt push test jbe sti retq (bad) sub cmpsb icebp imul add lods push mov outsb cmc xor out fwait mov add (bad) adc cmpb and add incb jmp adc and rex.R pop mov out loope sbb or push rcl lea or (bad) movabs (bad) (bad) rclb (bad) repz pop out rex.WRXB mov movabs sahf mov es orl mov cmp (bad) outsb mov mov (bad) pop (bad) lock outsb pop frstor rex.RXB fs fistpl movsb ds (bad) add hlt jo xchg jnp or mov cmp iretw xchg (bad) sbbl push jp movabs callq pop mov (bad) addr32 (bad) push fidivrl (bad) add xchg test sub adc pop cmpsb push retq in sub decl pop loopne fbld xchg sti push cmp pop int cld loope xchg iret push shl ds xlat cltd adc addr32 in movabs test rex.XB fcompl (bad) std xchg movabs out nop out (bad) xchg cmpsl push (bad) movsb mov mov loope jle sarl and scas or add movsb je (bad) (bad) pop rex.RXB retq pop cmp es (bad) (bad) cmp (bad) imul imul (bad) mov sub pop adc push add sub imul xchg or enterq data16 xor in adc rcl test pop vpavgb cmp callq addr32 and and mov test (bad) mov (bad) mov movabs add jg jno rex.WR data16 cmpsb movsl rex.WB lea and rex (bad) lock xor pop fcmovu add and jne cmpsb movslq pop rex.RXB rex.WXB insl stc rex.X gs (bad) int3 (bad) mov pop sbb or (bad) jrcxz (bad) cltd and (bad) sbb retq push xorl pop or sbb hlt out xor (bad) sbb lret ss loope sti test pushfq mov (bad) stos rcr (bad) (bad) in sbb mov mov movsb (bad) mov test lret (bad) sahf xchg pop rex.X movsb rex.X mov je (bad) (bad) push xlat sbb lock rex.RB sbb std xlat fs mov in pop sub (bad) (bad) push leaveq sti pop fnstenv sub or sbb rex.WRXB adc loopne sarb and test movabs jno rex.RB xchg xor cmp outsl insb rex.WXB rex.RXB or xchg push push rex.WRX enterq xor pop push sti pop sub sbb fistpl in test stos pop in rex.W mov and cld sbb cmpsl xchg lods adc data16 pop push nop cmp (bad) neg (bad) push rex.R mov insb cmp icebp fstpt jo xchg push jbe clc (bad) push popfq mov (bad) icebp jne xor adcw lret callq jbe (bad) (bad) pop repnz lock pop mov (bad) and out jne mov sti lods sub and in adc stc (bad) mov pushq leaveq jrcxz sbb (bad) xchg (bad) shlb and rex xchg int loopne jno pop cmp movsl jb adc xchg adc and mov fs rex.W pop rex.RB adc push jmp retq rex.WR sbb jnp sub rex.R subl fisubr data16 xchg pop pop mov xchg scas jns int3 mov cmp jp std (bad) or cmpl out xchg xorl jge cmpsb outsb cs outsl in mov (bad) out js jo jb push pop pop cmp adc sub add mov incl test out rex.RX xor mov js lods xchg pop cmp movsb ror xchg cli in imul (bad) sbb rex.WR lret mov hlt sub rex.WB hlt cmp xor pushq jns jp (bad) sub xor rex.WB stos stos int3 fildll xchg adc pop xlat cmpsl jne sbb (bad) or sbb out sbb jne int sahf fucomp adc mov rex.WB fcompl or rol adc xchg push (bad) insb clc jg pop in cmpsl xor adc repz rex.WX ds (bad) outsl jae in cmp je sti lods sbb jrcxz movsl cltd out mov sub (bad) (bad) pop (bad) je jae add gs clc (bad) lahf outsl xor movabs mov cmc rex.WXB push jbe (bad) cmp (bad) movsl push (bad) pop or movabs orl and outsl je (bad) cmp shrb pop add mov and jle cmp out repz mov jmpq (bad) out (bad) or (bad) cmp adc rex.XB test pop movabs (bad) ss push push rorb and push callq lock negb lods cmp jrcxz std (bad) mov rex.WXB stos imul rcrb sbb or add sbb testb and test (bad) (bad) rex.W jg pushq mov insb pop xorb pop loope sub jbe or and (bad) stos adc in pop sbb jp movabs adc fisubl scas movabs decb (bad) hlt push imul (bad) out jb sbb jg pop (bad) es (bad) callq add iret mov sbb cmp (bad) push imul iret jne test or lods mov movabs (bad) imul mov movabs jno lods add iret loope mov mov rex.XB movslq es xor rex.WRXB pop rex.R stos rex.W fs add (bad) mov jmp lret rex.RB rex.R push (bad) lods movabs rex.WX data16 and es jnp sub fwait or jo (bad) pushfq outsb repz rex.X retq imul xor and std xor sub int3 cwtl xor callq (bad) mov gs rex.X callq scas jne mov insl fdivs std add subb add imul out loop cs adc stos pop and je (bad) rex.WX pop retq mov xlat sti loop and jns mov xor rex.W jns mov retq rex.WRX rex.WB pop (bad) movsl loopne cs rex.RXB (bad) outsb data16 enterq fsubs scas (bad) in or sub cmc imul fcompl in or test xchg fcmovb and sbb fst cmp jo (bad) rex.R jl jns jne xchg xor jge out rex.WRX movabs cmc push add repnz imul push cmp rol push or push (bad) loope jno sbb jnp (bad) rex.WX mov sub mov cmpsb cmp fistl mov pop rex.RB cmp cmp or enterq faddp add (bad) (bad) rex.RXB and (bad) add js movsl movabs sub in adc (bad) cmp pop pop rolb (bad) mov enterq adc adcl stos xor (bad) mov movabs push sub mov mov shlb push jno fisubr ds pop rcll jle pop test and mov (bad) rex.X or sub (bad) gs and rex.WRX adc movabs imul or fnstenv or (bad) or or mov rex.WXB movsb fmuls pop rex.WB std cmp and adc add sub (bad) xor pop adc pop (bad) or rex.RX mov xor jmpq loop (bad) jrcxz insb jne cld pop sbb adc movabs movabs jrcxz xlat or addr32 hlt cmp scas mov jle or xor shl (bad) xchg fimull fxch push (bad) gs mov mov notl jno fild jb or cwtl mov rcll push rcrl mov sub cmpsb mov mov lret ja xchg popfq sahf mov stc out mov (bad) (bad) pushq pop pop (bad) lret stos fadd and popfq sbb rex.R jns xor xor rex.WR and (bad) adc (bad) or incl or (bad) (bad) mov loope,pt cli rex.W cs fdiv cmpsl sahf and mov (bad) xchg jl add sbb int3 movsb sahf sbb (bad) xor and (bad) xchg jrcxz (bad) mov jne mov or jnp cmc rex.WX jp mov retq pop jle xchg movsl test (bad) jrcxz mov stos int3 lahf (bad) adc ss rex.WRX mov (bad) (bad) sbbl and (bad) jne movsl out pushfq sbb (bad) fucomp pop stos and rex.WXB rex.RX je fcompl gs idivb pushq es rex.X push retq movabs cmp (bad) movsb xchg stos pop push rex.W pop pop jbe jrcxz sbb pop xchg xchg rex.WRXB (bad) movabs and jbe (bad) in jge adc jae data16 push (bad) lret retq add rex.RXB and xchg or pop sarb fs xor in add int3 rorl (bad) rex.RX in cwtl mov sub mov or fildll or xor xchg (bad) (bad) (bad) cmp pop jmpq adc adc cmpsl int mov (bad) clc stos rex (bad) mov shll jbe rex.WB rex.WB push add add xor jne out outsl stc mov add rcrb pop mov add xchg jg xchg sbb callq mov stos add es pop insl loop notl stos push jbe adc rex.WXB outsb divb xchg rex.XB in jns outsb movabs push and mov mov fstpt sub push (bad) rex.WRXB xchg faddp fs and (bad) insl rex.WRXB (bad) pushfq pushq (bad) ja (bad) loope (bad) rex.WB movabs (bad) cmovbe notb mov mov in (bad) (bad) outsb (bad) rex.WX movslq (bad) loop mov (bad) xor movslq pop ja std out faddl fidivr in xchg cmp fwait mov (bad) fsubl (bad) xchg pop mov data16 cs jmpq jnp cmp cld sub mov (bad) movabs cwtl pop adcl (bad) sbb pop movabs sub and and xchg data16 test adc mov lock jbe pop and faddl add stc jle fistp pushq pushq (bad) out push xchg jnp adc lock mov loopne mov adc mov (bad) (bad) out xchg (bad) cmp jns insb xchg sbb xor and mov frstor jno movabs rex.WXB test or jmpq popfq (bad) (bad) push lods rex.RXB movabs in mov loope lret fistpl fldl2t test cltd rex push stos push jle lret mov cltd (bad) pushfq in sbb xchg gs fwait out out hlt mov push lret add stc mov jmpw gs test outsl mov (bad) fwait pop xor out sahf movslq adc jo adcb cmpsw sbb mov xchg xlat stc movsl icebp jb movabs mul rex.RB outsb test outsl je fs rex.WRX pop nop xchg rex.RXB rex.WX adc outsb (bad) (bad) roll cs fisub fadds lret mov mov xlat fldl movabs mov stos mov rex.W (bad) or adc fldcw jnp pop (bad) mov rex.WX enterq lea pushq xchg test lock mov jno or data16 enterq lods adc mov add lret xchg push (bad) (bad) mov pushq (bad) jne mov data16 mov test je mov mov or repnz (bad) jbe mov cmpsb sub cltq pop xchg and (bad) jmpq out mov (bad) jrcxz pop jmp fwait in and mov push jle jb rex.WB add cltd mov outsb (bad) rcr jne pop xlat sub xor (bad) retq sbb insl fsubrp rex.RX rex.WRB enterq outsb enterq or pop cmp rex.WRXB int3 add pop pop sub cmpsb rex.WRXB and sar pop jbe (bad) adc fdivs cmp andl jle jb rex.R (bad) add lock fidivr pop (bad) (bad) jmp outsl (bad) mov cld xchg outsb (bad) xchg gs cmp test (bad) mov sbbl adc int sub jbe rex.WR mov movabs iret (bad) mov sub mov cld jle cld gs lret mov pop cs icebp push loope sbb jno sbb push out stos rex.WRXB cmp mov mov cmp in (bad) retq fnstsw outsb xchg and shlb in mov (bad) cmp pop cli pushfq clc (bad) pushq adc scas rex.WXB es rex.WX (bad) (bad) sar icebp sbb xor shl test rex.WR push movabs and (bad) fisubr and sub mov (bad) rorl (bad) (bad) mov or movslq test (bad) movb pop mov cli fidiv add lret loop rex.XB div jae push adc rex.X rex.WRX (bad) icebp cs imul cmp addr32 rorl and (bad) mov jmp mov movsl cmp cld mov (bad) repnz add jrcxz scas sbb mov retq (bad) cmpsb stos in jbe test fs fistl and (bad) in xchg rex.WRXB mov push cmpsb hlt mov xor sahf jrcxz or cld es rex.WRXB pop jns imul out xor sub fstl lea pop xchg and (bad) rex.XB add movsl xor movabs xor xchg jg and push scas (bad) rex.WRB jmp cmpl (bad) xchg repnz ja mov mov rex.WRB leaveq insl icebp out loope mov pushq sbb push loope mov mov stos or cli lahf mov (bad) (bad) ficoml mov mulb movslq adc push mov rex.W gs movabs pop test fwait pop xchg in sub mov sbb pop and lock rex.WXB roll insl add or (bad) (bad) rclb push pop xor cmp imul and divb rex.X pop fwait rex.WRXB addb fcoms (bad) ds js mov mov mov fnsave icebp iret (bad) rorb fs mov test or (bad) mov loop rolb adc and jbe shlb jrcxz xchg sbb int cmpl leaveq test loop pop sub xlat add jno outsb je fs sbb movsl ficomp xchg rex.WRX mov (bad) js sub sbb scas mov (bad) lods (bad) je retq lock jo jae sbb pop xor or adc sahf xor roll in rex.WR add and test nop fstpt movabs data16 cmp retq cmp push movslq sbb mov or rex.WB out rex.WRB orl rorb push decb (bad) lret imul lahf pushq out cmc pop cmpsb shrl add insl cmp cmp rex.XB (bad) pop int3 mov fwait xor pop adc loop sbb rex.R (bad) (bad) (bad) (bad) enterq xor subl xchg enterq mov scas outsb scas xchg movabs or sub and (bad) or out enterq (bad) jmpq jo (bad) xor mov rex.X sub fcoms imul cmp mov xor or fsubs add sbb sbb hlt mov mov xchg fdivp lea (bad) jb movabs lods sbb adc mov loope mov mov cmpsb mov test mov pushq mov callq movsb xchg movsb xor cmpsl pop cmp jb xchg push data16 pop (bad) mov jmpq sbb sbb (bad) repnz in rex.WRB adc (bad) stos es cltd jns add mov fwait (bad) lahf lods test mov mov sbb cmc add mov add fistpll jns sub rex.WRX cli rex.WRB xor loop pop cmp xlat movabs nop test cmc xchg (bad) jmpq pop icebp pop mov xor (bad) ficompl adc (bad) movabs sbb rex.R xchg mov movsb (bad) lods mov (bad) sub (bad) jne push jnp (bad) mov mov pop and in retq mov ja jp out (bad) je xchg push xchg cs and outsl mov push fwait (bad) sbb jns jnp sti (bad) ss rex.RXB jl sbb jne cmp or (bad) (bad) adc in outsb sub xor push or mov or cmp (bad) mov and and rex.WRB rex.WR and sahf pop (bad) adc rex.W rex.W adc js add xchg retw jmp or outsb test rex.WRB fidivr sbb out and loope adc or mov jmpq scas pop loop mov mov pop nop lock lods mov nop movabs outsb sarb jae notb cltd imul jge cli jns fs (bad) sub rex.RX (bad) in retq pop adc pop and mov (bad) push add pop fistp pop (bad) stos nop in mov test sbb rex.WRXB fisub cmc es gs pop popfq (bad) (bad) lods (bad) rex.X mov (bad) and pop and (bad) rex.WX out (bad) in (bad) pop rex.B add (bad) pop (bad) xchg xor and movslq pop pop mov mov add mov pop rex.WB rex repz cmpsb pop scas (bad) (bad) adc xchg pop push cmp push mov rex.WX ss xor test xchg pop xor and (bad) xorl (bad) mov xchg adc pushfq sbb cmp sbb sbb lods and (bad) repnz pop lods loopne rex.R xchg retq test stc jne in rex.R fwait out je test jmp mov xchg rex.WX rex.RB fistpl mov retq rex.RX rex.WR negb jge cmc icebp (bad) (bad) xor pop (bad) imul jb xor jmp (bad) ja in sub ficoml (bad) (bad) rcrb fwait mov pop (bad) enterq leaveq add rex.WRXB pushq jle xor and in rex.X cmpsl pop push rex.B fwait in sub insb xchg (bad) test scas jle in xchg sahf or cmp and test loopne in movabs mov and sub es and xchg pushfq lret pop js sub xlat cmp fidivr (bad) (bad) sahf sub add and cmc (bad) adc sti (bad) pop (bad) (bad) add mov fcompl (bad) loop rcl xchg rex.W rex.RXB movb repnz insb stc jbe (bad) outsb or leaveq (bad) xchg adc pop clc jge rex.WB ss sub rex.XB repnz (bad) jbe mov movabs mov jb mov pop rex.WX cwtl pop ja cmp lods gs mov fidivr sbb cmpsb pushq jrcxz in jrcxz repz mov lea rex.X lcall scas movabs adc outsb jo cs flds leaveq int3 (bad) pop cmpsl push adc jg rex.WRB rex.WRXB not jnp cli in insl neg rex.WRXB rex.X mov xor movslq mov sbb or outsl push mov test repz (bad) cmp add in adc imul (bad) mov test insl cmp xchg xor test pop jo (bad) ja (bad) (bad) mov (bad) jg jmpq (bad) xor jb sbb jae shll (bad) adc xchg (bad) mov fmull movabs mov (bad) (bad) and movslq mov jne (bad) add insl (bad) pushq out push gs mov (bad) jnp callq in cmpsl retq and idivl out sbb test int (bad) mov jle cwtl (bad) movslq jb xchg sbb or movabs (bad) push adc rex.R xchg sti sahf sub lods cmp rex.WRX nop mov push fnsave pushfq xchg rex.WRXB (bad) (bad) retq sbb pop fs sub cmp rex.RX (bad) xor enterq mov sbb (bad) loop xor jg repnz cmp pop in (bad) mov push xchg add or cmp (bad) xor mov pop retq mov cmp cmp jno jne cmpsb pop lea add pushq (bad) push (bad) lock xor mov (bad) sub outsb mov retq fs jmpq in (bad) (bad) mov popfq jle out (bad) add push xor sbb sbb (bad) and pop rex.X sbb out (bad) loope jl cmp jbe mov mov jl and imul in clc out outsb xor sub (bad) rex.WR je sbb pushq gs cmpsb (bad) repz cmp (bad) sbb pop jle jb lock push movabs rex.RXB repz mov loope cmp xchg rol and rex.RX mov jle mov xchg clc jbe lea loop push xor rex.WRXB (bad) (bad) mov adc mov sbbl (bad) (bad) movabs adc jmpq mov cs cmpl and repnz sub mov xchg leaveq adc (bad) in fwait (bad) push and scas rex.X fs rolb movabs pushq (bad) js jnp xor mov (bad) iret rclb xor sahf adc retq std imul rex.WRXB and and rex.WR gs push (bad) add xchg outsb pop iret mov gs jge jmp (bad) shrl pop (bad) cmp (bad) adc rex.WRB rcrl xchg faddl pop fwait xchg push (bad) (bad) int3 rex.RB movsl loope rex.W jrcxz outsl cmp jl pop jne xchg mov (bad) jbe or callq add xchg push mov sub (bad) push in fdivs push mov in pop ja adc pop (bad) cmp push out and push popfq rex.WX rex.B js (bad) xchg movabs rex.WRX movslq retq in stos adc ds fstpl or rex.W push (bad) pop cmp jno sub outsb lods callq rex.X xchg jns mov mov (bad) in (bad) fcmovb fisub add push faddl clc (bad) xor sti std xor loope lods pop test rex.WR (bad) (bad) stos and rex.X movabs or es (bad) mov lahf scas int test mov fsubs jp xchg rex.R and sub out stos add push jnp jns xorl out cmp xor (bad) movslq push leaveq xor pushq push in (bad) cmpsl adc rorb mov (bad) data16 pop int3 mov out mov (bad) out movb (bad) jge scas xor (bad) clc cmp retq repz rex.WRB lret add pushq stos fbstp pushq je pop cmp retq out clc sbb xor (bad) jle jb jle add orb mov (bad) lods outsb jrcxz jbe enterq stos (bad) jnp (bad) fisub in rex.WRXB xlat jmpq mov fisubrl (bad) outsb (bad) test int rex.RXB sbb sub ss jno in sub (bad) mov lret (bad) xchg cmpsb pop (bad) gs mov mov movsb push sbb (bad) movslq movabs rorb add mov mov (bad) bnd jo (bad) push lock repz outsl cwtl sbb sub jle stos xchg loope fistl repz xchg fisubl iret out sbb fmull and icebp pop cmpl xlat jo rex.RB sti test and insl rex.WXB mov (bad) adc insb sub rex.XB adc adc (bad) lods push test mov cmp fdivl mov adc or movabs jae sub andl stos mov rex.WX jg mov addr32 in rex.RXB lret stos sbb in pushq xchg xchg int3 adc or (bad) sbb adc cmc loopne jb and (bad) mov test rex.RXB jb xchg (bad) lods sub (bad) es (bad) mov stos rex.WR cmp movabs movslq mov scas rex.WB gs popfq mov jnp push in sahf jrcxz fdivl (bad) fisttpll (bad) jne sub mov and cltd pop or pop sbb (bad) (bad) (bad) or and rex.WXB xchg pop cmp movabs rex.WB icebp fcomps movslq out movsl and add xor callq pop xor pop pop pop pop push push jno cmp jnp rcl rex.X sbb push rex.W pop cmp callq pop scas mov and mov pop incl out out push and adc jg sub addb movsl gs jbe rex.RXB add movsl (bad) (bad) rex.WRB mov pop (bad) pop xor retq pop sbb (bad) sbb jb (bad) jnp out jg insb add mov sbb push add jbe pop movslq fcomps sbb pop (bad) std mov pushq (bad) hlt loopne sbb add xor pop and scas imul in adc mov or pop sbb rex.W test insb lahf (bad) je je adc icebp adc mov retq mov (bad) sbb lahf hlt mov pop rex.X insl rex.RXB (bad) movsl add jp mov jbe cmpsl (bad) scas loopne mov jo lahf or mov (bad) adc test (bad) mov or movabs sub clc divl (bad) je scas sbb mov gs addr32 outsb or mov xchg lock cmp and sarb loopne stc pop loope or jae jb (bad) jbe lods xor mov xchg add movabs jle shrl and push or rex.RB xor out xchg jae (bad) mov push mov cmpsb retq data16 (bad) xor sub push jmpq mov mov outsb (bad) fdivl pop (bad) test ja loop mov callq xchg movsl rex.RB imul add (bad) ss out rex.WRB outsb (bad) xchg fwait mov pushfq xor and xchg rorl movsl xchg (bad) mov movabs loop je (bad) xor cmc (bad) adc rorb lods gs in pushq xlat popfq lods (bad) pushfq push or cmp pushq adc test rolb xlat mov sub lahf (bad) stos rex.WX (bad) mov jbe pop xor add pushq xor rex.R mov stos stos cmp jno jnp (bad) scas iret mov push in nop rex.WXB pop mov (bad) or movabs or data16 loope sub pop adc (bad) add rex.WX xchg movsb sub sbb nop push adc mov xchg in cmp and sbbb (bad) rex.WXB std test cmp xor (bad) test jrcxz cmp (bad) xor rex.R rex.XB roll mov pushq xchg sbb cmp shll mov xor or rex.R (bad) adc (bad) add jge imul xchg insl adc (bad) insl add rex.WB (bad) popfq (bad) push leaveq or pop mov movsb and xor xchg (bad) movl fs or pushq sahf scas (bad) jbe mov retq imul rex.R jle,pt movslq mov pop (bad) loop cmp mov xor pop roll test add iret mov (bad) outsb movabs or gs (bad) mov and data16 movsb stc cld fdivrp idivb imul pop mov std cmp or in insb add (bad) shrl ror (bad) out fistpll retq pushq ja ss and in sub pop mov mov faddp scas or and out mov lret gs rex.WRXB lods movslq lock jae ficompl rex.WX scas add mov jo flds or movabs std (bad) or test rex.R jno mov rex.WRX repz cmp mov cli (bad) or sar rex.WR cmpsl rex.XB mov fidivrl and addl xchg xchg fisub sti sbb ja loopne mov fimul movabs fmul xchg (bad) jp (bad) (bad) lea pop jle repz rex.WRB sbb fs xor mov shr fwait sub rex.WRXB lret add sahf lods mov in jmp mov movsb leaveq xor mov outsl (bad) out mov shrb cmpl icebp (bad) (bad) xor rex.RB rex.R pushq rex.WX push sti (bad) in jne mov mov jae pop int pop pop jo jbe setae jb cmpsb and fwait mov rex.RXB jg (bad) lahf sub test movslq and cld es callq data16 cmpsb sbb lock iret cmpw es pop (bad) cmp out mov rex roll pop stos mov pushq sub mov push rcrb (bad) in cmpsl sbb ss movsb pop movslq mov fbstp decb stos add test sub fs out cmp rex.WRX fwait (bad) pop xlat (bad) (bad) sbb xor andl sti jl lods out iret retq test or cmp rex.RB out in pushq push adcl test movslq (bad) bnd pop xchg pop leaveq rex.RXB (bad) adc push roll movsb pushq and pop xchg (bad) add pop adc pushfq nop rorb (bad) cwtl xor (bad) or out and scas pop insl sbb adc rex.RX mov gs mov jbe cld repz fstps shll mov adc or rex.RX shrb add stos add fstpl addr32 pop rex.RXB ds js (bad) cmc iret pop je (bad) lods hlt loope adc mov pop sbb (bad) and cmpsb or sub sbb movsl (bad) pop sub gs (bad) (bad) xor stc (bad) pop lahf jo push cmpsl (bad) sub cmp mov ds idivl pop sub pushq retq xchg rex.WRXB (bad) (bad) sti repnz outsb mov lods movabs mov (bad) jle jle movabs cmp enterq xor (bad) insl out cmpsb int3 (bad) jae (bad) mov pop outsb add pop cbtw clc jp sti insl mov mov nop adc adc cltd movslq sbb xor and pop nop fnop xchg int and (bad) xor rex.WRX cmpsb push data16 adc fs adc push xor pop test subl jnp add rex.WRXB fmull (bad) out mov pop sub negb stos movabs jg loopne cmp xchg mov pop (bad) out xor fwait cmp divb pop push xchg adc jge,pt iret imul xor icebp jne (bad) out jle pop rex.RB (bad) mov mov mov (bad) movsl pop lahf shrl cli (bad) sbb out sbb sbb test or shr mov mov cmpl mov movsl fadds adc sti jnp jb jns mov xlat mov and out ja in mov and pop (bad) xor je stos test jnp mov push mov movabs (bad) (bad) (bad) (bad) xchg jns out pop mov (bad) lret or (bad) mov pop int3 sub gs jbe and cli add rex.W rol mov pop cmp sbb sbb mov movabs xchg movabs jp or lods jne fldenv xchg rex.WRXB fcoml pushq pushq add mov xchg sub add adc sbb cmp fildl or (bad) (bad) stos enterq mov mov pushq retq shl pop jo rex.WB data16 subb scas int3 (bad) cmp pop jae (bad) in in adc or scas mov hlt sub (bad) (bad) sub in scas xor pop out addr32 outsb (bad) xchg int3 (bad) (bad) ds stos sub lods es rex.WRX in out adc cmp (bad) push rex.WX (bad) jo (bad) xor repz movabs out popfq add xchg or mov (bad) (bad) (bad) fisubrl adc mov lret movabs fiadd mov test adc (bad) jno callq mov jae out push sahf sub movsb or jmpq (bad) sbb lret push cmpsb mov jb movslq jbe repz add data16 fidivrl mov stos mov jnp fiadd movslq cld and adc cmp push lods sbb repnz sahf rex.WRX out mov shrb rex.WRXB add (bad) in sub sbb mov (bad) (bad) xchg mov fbld movsb mov mov rex.B jbe (bad) pop sti or xor in callq mov mov jmp rex.RB (bad) jns jle sub movsb scas jnp iret repnz movabs sub adc adc pop mov pop (bad) xor or rcrl xchg adc andl add pop xchg pop enterq add (bad) cmp (bad) rorb mov in (bad) xor movsl cmc jmpq add mov xchg pop pushfq xchg out in mov std jp lods (bad) or jbe mov xchg movb adcl insb jg rex.R pop xor insl callq nop jge mov mov sub stos movslq or movabs sbb (bad) pop mov mov jne add sub rex.X callq mov (bad) mov (bad) (bad) (bad) jb js jbe jge stos xchg cmp (bad) mov cmp (bad) (bad) or pop mov or ds insb and (bad) cld jrcxz fnop rex.B push ss fcomps loop jp (bad) sub in jge mov retq pop push rex.RXB movabs cld pop popfq in (bad) (bad) fistpl mov retq jmpq pop jae pop push rex.RB rex.XB fcompl mov pushq sahf rex.WX test data16 mov mov push sbb push mov fild cmc rex.WR pop xor push stos clc movsb movabs sbb sbbl jle fbld (bad) in rex.WR rex.XB (bad) adc rex.X movabs jbe or xchg push jnp addr32 fcompl or clc cmp ja imul sbb xchg jp adc movabs movabs (bad) hlt (bad) xchg shrb mov or sub outsl sub jne repnz out (bad) (bad) pop rex.X outsb xlat (bad) sub (bad) sub movsb (bad) bnd sbb sbb jno movsl fcompl rex.RX jnp mov sahf (bad) jae jbe add jrcxz or movabs pushq rsqrtps jge mov es icebp repnz sarl fwait test add (bad) cmp (bad) mov lods clc xchg mov (bad) adc pop cmp and cmpsb xchg jns pop rex.WR rex.WRB jns cli (bad) repz and cmp outsb movsl loop fstps rex.WB scas nop add sti sbb stc (bad) cltd sbb fbld sub mov xchg divl mov pop push (bad) int3 mov mov cmp pop jne jmp fs cwtl (bad) mov outsb push int sbb (bad) pop div repz sub sbb repz pop (bad) loope imul movabs in (bad) negb pop pushfq rex.RB jg sbb ljmp (bad) xchg mov xor mov or insl mov lods xchg adc mov (bad) repnz jrcxz sbb movabs or xchg test mov std jne fs insl (bad) xor jmpq pushfq pop xchg xchg push or cmpsb push (bad) jb,pn in leaveq rex.WRB mov out cmpsb pop (bad) push (bad) movabs mov xchg movabs sub xchg (bad) out cmp sbb (bad) mov jbe rex.RX or je mov out jbe movl push (bad) mov or cmpsb and xchg ss pop cmp lods push xchg pop test hlt (bad) xor pushq (bad) cmp add imul retq cmc (bad) jae lods xor (bad) jns lock xchg stos in fbstp std movabs xlat xchg outsb (bad) pop fisub (bad) test stc mov jg xchg pushq rex.WX mov (bad) xor loop pop adc rex.WR jb pop (bad) fistpl and loopne clc xor rex.WRB jp (bad) hlt mov sahf (bad) mov pop movabs sarl insl pop jp fcmovnb add cmp cwtl mov pop xchg and cmp lret pop add pop in lods jns pushq mov mov (bad) pop cmpsb sub push movslq ror pop (bad) jnp cmc lea in xchg push (bad) mov (bad) jne and xlat in adc (bad) (bad) retw in (bad) pop jle repnz cmp jmpq jle (bad) mov mov xor loop loopne leaveq pop outsl pop and ds and lahf push rolb jne addl adc add adc pushq xchg mov sub outsb hlt cmpsl in rex.W movabs in xchg (bad) stos mov orb add rex.RXB rex.WXB insl (bad) lods add pop stos and (bad) and pop jne sbb or mov movsb shl jle (bad) xor outsb sbb pop cmp sbb jrcxz (bad) sbb stos sbb addl movsb shll (bad) xor orb loopne jrcxz in retq cmpsl xor fildll jns mov rex.WXB imul push (bad) (bad) xchg mov (bad) (bad) fmulp insb xor out (bad) ja rex.WX push add rex.WRX (bad) loop pushq lret nop cmpsb int cmpsb je (bad) sbb data16 stc mul (bad) ds cli stos mov mov mov cmp movslq lret ds sbb fwait sbb loop rex.WRXB pop fist ljmp or retq movabs jae rex.WB out sbb sub sbb xor cli push sarl (bad) and (bad) nop xchg mov iret stos xchg out out in xchg std (bad) mov mov scas pop cmpsb sub ja sbb and fs adc pop rex.WB cmp cltd mov rex.R je pop sbb fwait (bad) int enterq fldt mov cmpsb pop test push (bad) (bad) jbe pop sti mov xor loope jbe shll imul iret lods add jb out mov sub jno retq rcll mov and fs sub test loop add fs popfq (bad) adc pop lahf sarb pop jbe mov push movabs xchg in stos adc pop (bad) test jle pop insl hlt (bad) movsl rex.WRXB push loop jg je push lret sbb add xchg cmc lods push cwtl sub pushfq in cmc rex.WRXB pop jnp (bad) and fcomp xchg retq jb rex.RX gs stos rex.WRX sub imul (bad) mov add (bad) jge xchg (bad) pop cmpl xchg sti test rex.RXB cmp xor rex.R sbb push retq lods lods rex.RX mov out icebp fucom adc clc imulb xor and imul xchg pop xchg test fwait (bad) ss out mov imul or fmul xchg lea (bad) sub fmulp movabs jrcxz jno sub jmp nop lret push gs (bad) (bad) out sbb pop gs or lret callq lret jmp pop add pop or push movd cmp jnp,pt lcall bnd rex.XB mov sub pop mov in rclb outsb and pop jrcxz mov (bad) jge rex.WRX jne and push rex.RXB rcrl xchg (bad) fisttpll scas pop mov and or in pop mov movabs rex.W sbb scas stos pop cwtl fcomps xlat add adc sub popq sub jmp gs imul sbb pop lret (bad) rorl adc rex.RXB xchg pop std (bad) fdivrl (bad) xchg hlt repz rex.WRXB cmpsl xor mov (bad) pop in (bad) mov pop push and pop sub rex.WX ds mov (bad) lods or pop add rex.WR push mov jp pop mov movsb xor sbb rol mov ror lea xchg xchg adc mov fbstp xchg adc loopne xchg jmp mov cmp mov rex.WXB repz rex.WRX ss xchg adc (bad) mov mov push int3 or and iret ficom out faddl test addr32 xor scas rex.WRB jnp or fbld mov adc fs xchg pop xchg xchg pop jrcxz fwait xchg jle stos cmpsb retq fs std pop sahf mov (bad) rex.WRXB or scas repnz (bad) (bad) xchg add cmpsb jl (bad) or subb jns xchg sbb rex.WXB movsb (bad) (bad) push rex.RX lods mov rex.RX hlt gs psllw out int sub out rex.WRXB gs outsb sbb pop cs (bad) mov (bad) (bad) push retq (bad) xchg pop xchg mov rex.WRX jmp out shl movsb pop xchg (bad) add repnz (bad) jle mov pushq leaveq rex.WRB shll xchg (bad) out or orb movsl mov adc and (bad) (bad) xor lret mov jle nop js sub push sub mov sub jb rex.B (bad) std xchg and mov mov insl jmp rolb rex.R lret rex.RXB fldenvs lea or adc add fdivl jl,pn jg pushfq sub imul (bad) movsb movsl movabs (bad) xor cwtl xor adc lods (bad) rex test outsl std rex.X retq mov (bad) sbb callq mov outsb rex.WXB (bad) sbb rcr lahf loop insb orl jb jl xchg fs or pushq (bad) imul (bad) (bad) addb cwtl js pop xchg int3 (bad) push rex.RB in rcr (bad) xor rex.X (bad) (bad) push xchg cmpsb rex.WX jo insb rex (bad) xlat retq and rex.RX fs mov outsb add jae mov fnop lods sub jae push mov loopne insb adc add (bad) scas cmp (bad) and mov sub loop pop add add js (bad) imull xor pop pushq jb (bad) mov jl jo pop popfq fisubl callq pop mov sbb (bad) rex.RB clc pop mov sbb mov loopne rex.RXB xchg repz sub push push int test (bad) sub xchg xchg iret xor sbb (bad) fdivrl mov jl stos (bad) pushfq push (bad) test (bad) jle fprem1 pop cmpsl (bad) adc (bad) push mov sbb and jno xor or xlat pop pop lret xchg (bad) and xor (bad) data16 movsb (bad) xchg rex.WRXB fistl loope (bad) movsl xchg (bad) test adc cmp scas lods sbb and clc xchg jle js xchg (bad) sub mov mov je rex.W cmpsb xchg sbb negb (bad) rex.WXB push or push jg rex.W mov (bad) xchg (bad) and pop (bad) fwait imul jae cld movsl or jne cmc mov pop retq (bad) stos mov movabs fnop rex.WXB mov lahf (bad) cltd mov push pop (bad) movabs sbb mov xchg clc loopne xchg ja pop push and xchg icebp stc sbb mov and fsubrs icebp cmp (bad) mov (bad) mov pop jae and push jmpq sbb push (bad) test pop callq nop xchg rex.B data16 fist (bad) xchg pop xchg (bad) or test xchg and je (bad) pop pop xchg iret xchg xchg repz push jl rex.WRXB in push add jns mov pushq jrcxz fxam jmpq xor or rex.RX rex.WRB xchg sbb xchg lret sub rex.WRB fs movsl (bad) or cld jg mov xlat lea ds pop rex.WB fisttpl movslq pop movabs adc movsl test scas lahf retq rex.WB mov cmpsl (bad) andl jno push rex.XB ss adc lods (bad) stos movabs mov (bad) xchg scas (bad) (bad) loopne mov jle pop imul in or insw (bad) (bad) fisttp rex.WB test adc push lods roll cmpsb callq adc mov pop push loopne (bad) (bad) push (bad) sbb xor (bad) cld sbb fcomip mov pop (bad) movabs mov imul push mov mov adc (bad) out (bad) fisub out scas add rex.X jp mov (bad) cmp (bad) je mov andb test repnz xorl xor adc pop stos cld sub (bad) stos iret mov or push fs (bad) lea mov mov leaveq iret in cmp out xor sbb fstl (bad) pop rex.W je or xchg movabs je mov add jo in jbe rcrl sbb pop out pop rclb rex.WRXB xchg (bad) or notl pop push iret mov and loopne rol (bad) out jmp fwait rcll jbe jge out test pop xchg gs rex.W rex.RB scas and pop fs (bad) rex.WRXB lahf loope sbb rorl in (bad) fstpl jg lock jg xchg add outsb lret or je rex.WRB (bad) jae add push fdivs jno pop add mov pop movabs fdivs mov (bad) mov cli sub adc and adc add push or add iret stos mov (bad) rex.WR jne sbb pop xchg add add or sbb (bad) rex.WRXB je push mov fist movsl jg push rcll (bad) fwait push (bad) mov rex.R rex.B rex.RX add (bad) mov cwtl cmp adc sub jge out xchg out in fldenv (bad) pushq xchg rex.RB outsb push and mov rcll test jmpq mov xor pop rex.XB xor outsb lret xchg icebp (bad) (bad) adcl stos rex.X mov adc es ror pop rex.WR rex.WXB and sbb xor rex.WB xchg push iret rex.RB sbb jbe movabs pop test lahf clc lods mov mov scas clc rex.WR repz fcoms scas cltd loope fdivrl xchg rex.WX mov (bad) fidivl xor lock mov shl retq sbbl std mov xchg jae jns sbb test or (bad) cmp sbb and or enterq and mov (bad) fsts mov or repnz movsl pushfq fcoml jge and jrcxz (bad) or jmpq adc and data16 push int movabs iretw push sub (bad) incb push (bad) sbb (bad) xor out imul lret cmp fs retq negl icebp xchg add retq js rex.B in pop (bad) (bad) fwait rex.RB xor (bad) xchg rex.WXB pop push roll mov xor (bad) (bad) jbe repnz (bad) movabs jnp (bad) jae je jg repnz lock (bad) cmp mov xor rex.WRB repnz fildll push gs jle add mov addb fadds imul cmp (bad) xchg (bad) fildl push adc cmpsb pop push (bad) or pop adc push pop lret jl (bad) jmp pop add fs and xor xor push movsb jne or mov adc push scas adc xchg movabs (bad) je (bad) pop xchg xchg and cli cmc repz (bad) (bad) xor retq sbb pushfq cmp xchg mov jnp imul mov pushq cmp (bad) fistpl xorb (bad) sahf rex.WX xchg mov in (bad) xor sbb jp push (bad) cmpsl push lods pop cltd (bad) pop lret or (bad) pushfq jle rex.WB xor cmp add ja imulb xchg mov push outsb push sarl scas (bad) mov imul cmp xlat rcl fbld (bad) movabs (bad) fidivr cmp pop mov rex.RB (bad) (bad) loop mov (bad) movb rex.W rex.WR rex.W mov jno sbb test test adc xor stos movsl pop (bad) cli add (bad) (bad) jle (bad) int retq or and jbe mov popfq xor idivb mov sbb enterq sahf orb retq and mov jrcxz jns loopne ss and test cmc sbb je pushq lods cmp (bad) nop subb nop jo push xlat jno test (bad) push imul sbb (bad) shll lea ror sub (bad) mov rex.RXB lret out mov outsl imul (bad) je fisttpll repnz and in rex.W rex.WX (bad) jle (bad) out lret out cld xchg int jb cmp mov test andl sahf jae cmp sbb lret insl (bad) pop lret cltd sahf jne lea rcr xor in lods js jl cmpsl push mov (bad) xchg pushfq push lret adc pushq out shrb retq fisttp or mov imul rex sub pop fisttpl (bad) and rorb jp push je nop mov pop leaveq and (bad) imul ds lret (bad) or js cmc (bad) jno rex.X rex.WXB (bad) lret cmpsb sbb xchg mov xor (bad) adc sbbl fsubs jmp in push sahf sbbl loop cmp rex.RB fidivrl test (bad) (bad) shlb (bad) out mov outsl cmpsb cmpsb sub pop and push incb (bad) fimull rex.RX rex.X mov lods sub callq jge jg mov add pop mov scas rex.WR addr32 push (bad) jle pop rex.WRB cmp clc mov and sbb (bad) cmp pop cmp jnp pop adc xchg jmpq rex.W data16 std mov pop lods push (bad) cmpsb loope stc adc push xchg movzwl mov cwtl pop (bad) adcl mov fisubl sbb pushfq data16 mov jbe imul sbb cli (bad) test mov movsb in pop rcl add (bad) add (bad) icebp fdivs (bad) mov xor pop pop xchg addb adc out pop (bad) data16 add jg mov test fcomps xlat pop cwtl mov cltd pop jmpq add rex.XB (bad) hlt adc cmc push pop jrcxz iret fadds and rcl rex.WXB rex.R cmc rex (bad) and pop fs rex.RXB pop (bad) in stos sub mov cmc or mov adcb movslq rex rex.R mov (bad) adc sub ficomp xchg xchg push or push (bad) fsubl xchg (bad) sbb addr32 add or rex.WX fidivr add pop in mov xor outsl (bad) (bad) pop rex.RX sub jbe cmp add add xorb (bad) rex.XB (bad) adc push test rex.WRB cmovg and int mov sbb or leaveq out mov imul or rex.RB mov movsb jbe (bad) rex.WXB rex.W retq sub cmpl rex.WRXB imul mov outsb je fnstsw (bad) cmpsb rex.RXB jge rex (bad) movsl sbb jp (bad) bswap and sbb and cmpsl mov loop or (bad) ficom rex ss jmpq jne jne jb (bad) xchg (bad) mov xchg jae pop xchg rex.B xor rex.RX jb (bad) jno jbe (bad) scas mov sarb cmp rex.X rex.WR (bad) cmc xor out fcomi mov fs sbb jns (bad) es fisubrl mov in movabs loope and enterq pop cmp (bad) test pop imulb xor and lock pop insb imul cmp pop (bad) (bad) jg lods (bad) (bad) jae rex.WXB fs pushq lock adc cs xlat sbb mov cmp movabs rex.X cld lods sub add retq mov (bad) mov (bad) add (bad) or pop rex.WR in es rex.WRXB pop addb xlat movsb stc mov outsl rex.B pop (bad) xor movslq test (bad) xchg pop jrcxz pop cwtl popfq xchg mov and mov cmpsl and test push psubusw sahf mov idivb lods push (bad) pop xchg jg int3 insb mov (bad) mov xor (bad) (bad) jb pop pop fwait mov std ja mov push pop loope (bad) fsubp cmc movsl mov xchg rex.WRX push (bad) jae pushq scas push data16 sub (bad) test mov mov jle mov out mov mov xor outsl jmpq fsubs jle push lods mov out mov lahf in cld mov sbb sarl lods leaveq callq (bad) pushq roll lods mov (bad) lods mov popfq add lods xor rex.WRX int mov xchg xor jmpq cmp lret xor or pushq lret pop sbbl sub stc je scas outsb sub cmpsl cmc ds (bad) adc (bad) (bad) and hlt (bad) (bad) movabs insl cli sbb rex.RB and and mov xchg jle mov xchg test sub or in xor retq pushq mov pop xor lods (bad) xor mov and scas mov subl jmpq xchg mov (bad) (bad) mov mov outsl cmp pop rex.RX (bad) callq fwait (bad) sub in jae xchg mov xchg (bad) xchg mov in jbe lods cmpsb scas cmpsb stos outsl (bad) data16 test mov mov movabs xchg xchg pop or (bad) (bad) jnp mov jne rex.WXB movsb pushq out out rex (bad) (bad) xchg rex.RX ficomp xor rorl and rolb (bad) ds xor rex.R test (bad) mov outsl rex.XB (bad) sbb (bad) ja cmp jno sub mov jle jb xchg imul push movabs push adc (bad) rex.R iret or xchg sub adc pop fsubrs sbb pop fidivl (bad) clc adc loop xchg stos data16 vcvtss2sd in pop xchg imul (bad) popfq test jp cwtl test (bad) (bad) out stos repz imul scas fwait in sahf lock fwait nop fiaddl pop sarl cmp popfq cmp xchg jp popfq sbb callq cmpsl cmpsb cli retq fisubr sbb add sti cld (bad) in test cmp cmc icebp out sahf pushq (bad) rex.WXB ror mov (bad) movabs gs jp,pt mov fisub xchg pop adc pop pop rclb sub adc adc rex.WRX rex.XB scas shrb sti test (bad) pop jno rex.WB (bad) jl insb data16 (bad) rex.WXB rex.X add cmp xlat sbb out in xchg fs mov scas xor lock rex.WRXB imul cmpsb rex.RB mov (bad) xor mov incl pop and xchg sbb mov xchg in push int3 rex.RX push pop mov mov and (bad) iret rex.RB test pushq scas test mov or cmc test or int3 rex.X ss (bad) ja out movabs sub (bad) in rex.XB rex.WX mov push push jbe stos imul (bad) rex.X pshufw mov pop sub stos (bad) (bad) mov add test push or cli (bad) xchg cmp lea rex.X push mov (bad) sbb movabs sahf xchg pushq pushq fsubrs popfw (bad) rorb mov jrcxz imull xchg movabs callq pop and sti xchg lret insl (bad) xor xchg mov adc sbb and sub add iret (bad) xchg jl,pt adc cmp jae xchg data16 push adc (bad) lahf (bad) pushq xlat mov (bad) lret jb movabs std sub push loopne repnz mov scas sti scas test push xchg (bad) xor and insl popfq sub lods or (bad) sbb sub and or and mov fwait add (bad) or insl xchg mov (bad) push rex.WRXB out clc movabs rex.WR and push or mov push out rex.WB scas retq jns (bad) (bad) xlat loop rorb sub add pop es in (bad) lods and (bad) clc cmp jb movabs retq cmc rex.WXB in cmp lods or (bad) cmp scas jle (bad) cmpsl xchg fnstsw fsubr outsb push rol (bad) addb je repnz (bad) nop (bad) jg push subb add lods jge (bad) (bad) adc mov retq nop pushfq stc jg xchg push push rex.RXB xchg addl add mov fsubrs xchg and rex.XB add (bad) or (bad) add (bad) cld rex.WB movslq fbld rex.WX sahf icebp or xchg sbb adc mov icebp jp (bad) sarb jnp mov xchg jp or sub sbb mov in rex.RXB lretw adc pop lods mov sahf cmp sarb out mov cmpsb rex.RX cmp retq push rex.WB jne xchg (bad) (bad) fstps or jg add jl xor (bad) movabs lahf mov sub rex.W rolb (bad) and outsb push std stos and (bad) and rex.RXB mov clc xchg mov (bad) addb pushq and push push (bad) mov int xchg mov movabs push rex.XB cltd ja rex.RB or outsl xchg add pop enterq (bad) push fldcw lret cmp enterq je or xchg (bad) pop jmpq mov iret xchg xor mov xor popfq jno mov xchg cmpsb in rex.WRXB stos xlat (bad) out lret imul adc pop subl ss jae xchg test stos jb in shll push pop rex.B fsubs pushfq and fisubr xchg (bad) fcompl jno outsb lods sub fsts (bad) rex.WRB rex.W mov cmpsb cmpsb imul testb xor (bad) je movsb and (bad) adc rex xor jg jp test (bad) fistl pop movabs add (bad) mov js sub (bad) mov mov loope rex.XB jo fs out test xchg in sbb xor pop xor movabs callq cld push movsb (bad) pop cs std in cltd push pop rex.WRX mov lea jbe sbb pop jb out xchg sub ds cmp ror pop data16 (bad) (bad) pop (bad) je jns cmp (bad) std hlt jno outsl rex.B sbb lret imul add mov jo stos cs (bad) (bad) sub jbe int scas xor and out sbb clc jrcxz pop (bad) lods (bad) sbb (bad) jg and ja test xchg mov int jbe or movabs (bad) int3 and enterq fdivs sbb (bad) movabs mov addr32 (bad) adc popfq pop nop xchg and cmp roll mov pop rol (bad) or xor sub movabs nop push pushfq rex.RXB movd ficompl pop cmp pop xchg pop sbb pop mov xchg iret (bad) rex.XB or pop push out movsl xor (bad) mov cmpsb insb cmpsl gs lahf pop mov jno movsl and leaveq (bad) (bad) pop rex.WR (bad) and sbb or or jo out pop push (bad) mov sbb leaveq jg pop fxch rex push movabs rex.RXB rex mov rex.WRXB icebp rcrb xor outsl or shrb popfq jns mov insl jle mov push or xchg sub movl jrcxz (bad) (bad) (bad) retq lods insb bnd adc sub mov jp add add pushfq xchg cltd fstl (bad) out loope rclb lods xchg (bad) cmp (bad) cmp sub jne mov cmc rex.WR data16 fsubs lahf outsl (bad) mov out std (bad) mov or ja imul movsb adc cld add sub test sub imul adc roll sub (bad) rex.R sub orl pop test in and sub pop fwait jne push add pop add callq mov fcmovnu cmp rex.WXB test pop insb xchg mov and out (bad) outsl movabs out (bad) pushq or cmp iret (bad) xor callq rex.WRB test fstl insl enterq movsb (bad) subb clc rex.WB (bad) pop sbb (bad) movsb xchg jnp,pt jge xor test (bad) pop loop adc movabs sbb mov gs rex.RX or fistl xchg mov adc push push jg decb je rex.WR xor adc loop mulb movabs adc fisttpl xchg xchg (bad) nop xor out nop test je adc imul incl xchg cmp rex cwtl (bad) mov pushq push add (bad) movabs out (bad) cmp mov retq lods in mov xchg (bad) pop outsb jnp nop (bad) (bad) pushfq (bad) mov pop repnz movabs mov push andb (bad) outsb push add and xlat retq (bad) callq movsb test addr32 mov jne and (bad) cwtl mov lods jno rex.WRB orb jg in fs jge enterq sbb xchg mov fldl movsl out pop (bad) cwtl (bad) mov rex.WRB mov (bad) jp retq jrcxz (bad) xchg outsl xlat push fdivp adc rex.WRX rex.XB imull xchg lea jno or xchg or jo retq sub (bad) stos incl (bad) pop pop xchg iret stos sub jmp callq jbe add jb,pt rex.WB lock pop xchg fistpl or xchg jle idivl rex.WRXB in and iret data16 rex.WX jbe jne pop loope pop mov xchg or sbb jo (bad) fcomps mov push insb pop (bad) pop (bad) ficompl retq (bad) callq je sbb xchg rex.WRXB (bad) out hlt (bad) repnz gs retq jns (bad) mov (bad) mov lret (bad) xor ss sub outsb lea add mov cltd mov mov jbe fcmovnu sbb out push retq jge (bad) data16 jne in test sbb or repz pop out (bad) rex.WRB rex.XB movsl mov (bad) (bad) icebp stc mov sbb hlt (bad) in pop out (bad) adc rex xorb sbb rex.X jnp jbe sub xchg pop (bad) jle rcrb cmp outsl rorb movsb (bad) (bad) cmc sbbb (bad) mov mov and pop (bad) testl test mov retq stos out adc adc outsb cwtl sbb sarl pop nop rorb rex.WX pop movabs imul pushq and cmp jle jrcxz rex.WXB rex jge imul subl je (bad) sbb and xor xlat xor pushq addr32 mov jb (bad) movsb rcrl push insl lahf cli sbb rex.X rex.WX rex.RXB (bad) adc (bad) (bad) fmull mov pop shl xlat (bad) (bad) cmp in or test mov mov add cld jle rex.WB jle push mov decl stos addr32 scas loop (bad) push insl or xchg (bad) lahf rex.WRB rorl mov jo test cmp rex.R fldenv rcrb (bad) (bad) clc (bad) (bad) pushfq mov or sub repz xor and push rex.WRX rex.WB out mov rex.X repnz (bad) (bad) add adc data16 outsb and jae jno lret or add push cmp rex.RB stos adc rex.WB cmc movsl push gs jrcxz sahf (bad) (bad) xor add mov (bad) mov mov (bad) push outsl mov rex rex.RB jae,pn xchg movabs (bad) or (bad) sahf mov callq mov jae jb movabs outsl cld (bad) in movabs mov and ss mov mov in rcrl fs clc nop pop adc pop (bad) sti adcb sahf pop (bad) imul push (bad) (bad) mov pop rex.XB sbb (bad) sbb jle xchg cltd pop mov cmpsl push xor mov (bad) (bad) retq jae movslq cli stc stos jbe mov test popfq pop fiaddl ds fs (bad) mov ss in (bad) sbb xchg sbb lods stc movabs shrl (bad) std xchg xchg je test pop sarl (bad) and stc imul nop sbb jl pop pop adc lock rex.WRXB notb sub jg xchg jno (bad) fisubr add or mov in pop (bad) movabs scas add ss pop or incl lea lea xor lahf movabs fadds mov insl push xchg lret cmp imul cmp mov or loope fstps jbe and adc or sbb loopne sbb xor icebp (bad) xor or mov xchg (bad) movabs (bad) fdivr sbb xor xor rex pop cmp cs gs adc data16 rex.WRXB test mov rex.XB xchg pop (bad) or lods jns sbb idivl pop (bad) imul jb gs rex.WR mov jo (bad) lods (bad) int outsb nop push shll or pop cs sarl sbb sarb vmulsd or xor cli push incb xor jae loop pop (bad) mov mov (bad) in cmp sahf pop xchg repnz mov movabs retq cmp mov (bad) (bad) jmpq mov mov sbb rex.WRB pop popq cltd xor lods stos push stc pop rex.WXB repz ror mov or rex.R (bad) stc sbb sbb mov (bad) shl adc lea iret pushq (bad) add jmpq movsl loopne cmp pushfq movslq and pop jno out or xchg add and pushq jrcxz lret iret jg xchg in xchg outsb movabs es es cs rex.WRXB pop retq or xorl mov in push imul jmp lret xchg movsb pop cltd mov jle rex.WRXB imul add mov loop stos (bad) bswap rex.XB imul mov fbld out movabs lahf (bad) stos pop xchg iret push movslq mov mov (bad) rex.XB mov insl pushq xchg jbe rex.WX jp (bad) gs jp pop and cmp xchg xchg and (bad) sbb rex.WRX (bad) movabs ds (bad) hlt pop loope push xchg push mov adc retq jmpq pop lea jno mov pop cld es sbb or outsb push xor and sbb test lods sub fistp pop (bad) (bad) movabs in mov mov outsb incb (bad) outsb in rex.WRX rex.RB fadds (bad) xchg mov shrl pop sbb (bad) movabs imul (bad) mov mov data16 push (bad) mov cwtl lea (bad) or sti mov (bad) sub (bad) mov mov (bad) sbb movabs mov (bad) (bad) push outsb negb jrcxz or jg fistpl int rex.WRX mov xlat mov xor jrcxz shlb movabs (bad) rex.RX or push fidiv rol sub pushq fcoms add jae and (bad) (bad) (bad) (bad) xor xchg rex.RXB (bad) ffree cld cmp (bad) and (bad) pop (bad) jl cs xchg rex.X mov in incb in mov sbb or test xor pop leaveq pop lock je (bad) cmpl testb rex.WRXB pushq rex.X fsubrl shrl (bad) mov adc jl add pushq rex.RXB rex.WXB (bad) sarb fs stos and out and in xchg jne andb sbb scas xor sbb ror mov (bad) fldl in xchg lods (bad) (bad) loope outsb xor es cmp mov xor jns nop (bad) mov rex.WXB mov or loopne addr32 cwtl insb pop (bad) (bad) rex.RX out movsb pop movabs jg frstor mov rex.RX (bad) in cmpsb (bad) jp pop add mov rex.WRX addr32 and xchg jne shlb loope (bad) adc rcrl mov lods (bad) mov jne rex.WR or sbb and jp stos stos push callq pushq push push retq test xchg rex.W rex sub (bad) rex.WR pop sub cmpsb add pop cwtl pushq or repnz pop lret mov xchg fistp xchg push jnp loopne xor clc fildll jmpq imul jmp jb (bad) or xchg cld pop in imul iret movsl (bad) imul cmp rorl push cmp (bad) loopne leaveq cmpsb in or ror (bad) icebp sbb cltd sub sbb jbe lods imul (bad) or sub (bad) negb movabs push vdivsd sahf cmc mov (bad) or in cmp pop push push out adc pop xchg cmp cmc jno or rcrl ds out and push movabs jrcxz mov jbe pop enterq outsl lods pop pop (bad) add sbb adc ss (bad) push outsb lret rex.WRXB mov scas repnz mov fbld xchg push retq or mov enterq out xor mov jrcxz push xchg lea fs enterq cmp and shlb (bad) (bad) fsubl and cmc fs (bad) xchg sbb popfq pop ss mov out sub test rex.WXB rex.R sub or add jle jmp sub jg (bad) mov fwait lods push rex.WRB (bad) and xchg pop fbld packssdw test cld test movslq pop xchg (bad) sub retq cmp lahf sub rex.RX lea (bad) and adc pop mov and cli (bad) jnp mov pop loopne (bad) mov and add mov je xor loope push mov callq jl fnstcw jmpq pop xchg mov and xorl (bad) pop (bad) rex.WXB (bad) icebp and movslq pop rex.X es (bad) or (bad) (bad) sbb (bad) movabs (bad) gs mov pop (bad) jle sbb data16 (bad) hlt adc idiv in (bad) callq rex.X sub mov test sbb movabs pushq add mov pop adcb test jnp xor (bad) mov jge mov pop (bad) clc jbe pop lods (bad) pop adc rex.B pop xchg add sub cltd xchg roll in mov jo (bad) mov jrcxz rex.WXB (bad) (bad) lea rex xor imul mov jnp lret hlt push movsb jp sub movsl gs (bad) pop and cmp fwait mov rex.WRXB xchg movabs pop xchg xchg pop (bad) or (bad) (bad) stos insl cwtl (bad) xchg leaveq cmp rex.WRB pop (bad) jmpq stc xor mov xchg or mov xchg mov xor mov cltd (bad) cmpsb (bad) xor repz mov xchg addb cmp pushq (bad) cmc rex.WX mov lret movabs (bad) imul (bad) in addl clc mov stos sbb cltd mov movabs movsb mov jae pop rex.B fstps addl mov jno hlt rex.XB jle shlb sbb sub sub lahf (bad) pop loopne (bad) repnz rex.W lea lret fiadd (bad) (bad) sbb or shl rex.XB push lods cmpsb xor xor imul jg jbe fsts or pop lods add xor out (bad) mov push mov lea rex.W sub push in jmp mov sub fidiv lods mov mov rex.WR sbb add out es push iret pop mov mov (bad) (bad) pop (bad) (bad) stos xchg (bad) in push imul rolb jno cwtl adc stos fidivl fdivrl fistl in xor xor fsubs mov retq scas insl mov es (bad) mov repz and (bad) and int movabs rex.WB shrb rex.WRB rex.RX adc (bad) in and rex.B mov test push sbb jb fs mov rex.RXB push outsl rex.XB ror rcrb (bad) sahf outsb push (bad) sbb sbb and movsl rex.WXB cmc rex.R and scas sbb popfq cli orl push push outsb movabs jp cli (bad) mov (bad) fprem or sub imul movsl movslq adc rex.WR loop rex.WRX rex.WRB lea and stc xor sub movabs (bad) push cmp pop callq mov xlat (bad) (bad) rex.R xchg mov scas gs mov sub pop stos repnz hlt pop mov cltd and test movslq mov cmp mov (bad) xchg and rex.WB sbb adc pop adc int pop loope pop push jo std hlt (bad) out imul mov movabs xor mov loope xor test outsb sbb in rex.WRXB icebp outsb and xchg cmp outsl xor (bad) mov add jbe andl push movsl (bad) in (bad) pop popfq mov rex.WX cs rex.WRX out jno fsubp fisub lods (bad) lods rex.WXB or loope rex.W subl sahf sub jns and in (bad) (bad) mov rex.RXB rex.WRXB (bad) mov fwait xor imul iret lahf (bad) out mov popfq sarl mov (bad) rex.XB xor test and insb fdivrl mov ficomp and (bad) outsb xchg rorb mov or jno lret xchg add stc (bad) movabs outsb add (bad) lods movw data16 and mov (bad) pushq rex.W lods mov jne adc jge stos (bad) mulb mov sub rolb neg movsl lods jmp out jg xor fs (bad) shlb data16 (bad) jne sbb jo imul or popfq sahf cs sub rex.WX es jbe pushfq in ss cs pop jns add mov adc out rex.R stos jae sub jo js or ror lahf xor jbe pop pop or ds jb pop callq mov lahf (bad) insl and (bad) mov int3 mov test jbe or rex.WXB sbbb sub sahf pop pop fcoms jmp fstps push movsb fs addb andl (bad) lods mov pop sbb insb xchg test (bad) mov int3 mov push rex lock fistpl roll sub push pop jle rex.WRX in jrcxz roll xchg rex.WRX fsubs and idiv retq push mov out in stos (bad) out lods jmpq mov subl adc mov sbb stc mov cmp rex.WXB hlt rcrl int and clc mov adc fucomi in jle cmp js movsb rex.XB sbb push repnz jne xlat retq rex gs movabs movsl lods jrcxz pop rcrb sub sub mov sub (bad) fiadd cmp or xor jae xor (bad) fistpll pop jg faddl mov mov rex.WXB pushfq rex.B cmp add pop jnp xchg outsl int3 or data16 rex.RX rex mov (bad) xchg cmp insl popfq xchg repz pop loop sbb movslq rex.WB jge icebp addr32 jrcxz add xchg ficomp fcoms pop xchg add mov cmpsb mov xlat cs (bad) fiaddl xchg in pop (bad) retq (bad) (bad) pop fimull not (bad) cmpsb (bad) pop rex.WX (bad) mov pushq and out fcmovnbe xchg add stc jge in gs cli sub xchg (bad) push xchg (bad) incl pop sbb and movabs (bad) movslq mov cmp mov sub mov mov lret repnz (bad) cld jle in jne imul (bad) test outsb mov pop jno movsl xchg jns rex.WX xor mov in jmp cmpsl outsl jae ds push rclb sub fstps sarl pop iret jae mov cmpsl sahf adc pop jrcxz sbb movabs jb movabs push cmpsb cwtl pop fistl pop data16 imul mov (bad) in jne xor fisub in mov (bad) and and cmp cmpsb lret pop (bad) rex.R mulb in in hlt and pop jrcxz (bad) pop (bad) (bad) pop rex.WB jbe stos (bad) pop and pop rcll jno lahf pop (bad) push xchg adc push ja (bad) (bad) mov sbb (bad) mov xchg pop sbb or xchg sub and nop pop (bad) xor mov xor test or push (bad) (bad) push sbb pop fcmovb adc rep (bad) xchg push std cs push mov push lahf xchg jg jg (bad) push pop ficom rol pop in (bad) pop (bad) lea leaveq rex.WXB fs xor jae cmc pop (bad) lods xor vfmsub231sd and sbb rol movsl xchg mov fimul adc mov pushfq mov jle rex.R rcl xchg (bad) jg xor sahf lret push sub in sub cmp loopne outsl stos mov (bad) imul cmp lods add repnz and lahf out pop or mov and jle (bad) (bad) xorl sbb mov xchg mov xchg int mov cmp cmp xchg jp sbb retq sahf rex.WX repnz sbbb push mov mov sbb sbb and xor (bad) adc xor xchg fstps mov hlt fistpll pminub adc or mov or (bad) imull xlat js sahf (bad) jp std and mov cld (bad) (bad) out in mov int3 negl jo sub notl pop jbe jno or fsts sbb or popq (bad) pop nop rorl (bad) jbe or mov (bad) andl repz fbld pop loop pop pop data16 outsb add lods xor data16 rex.W rex.WXB iret in or xchg in out push xchg xchg add cmp sub fwait and or mov scas xor repnz sahf loope or imul ljmp outsb out pop cwtl sbb rex.WXB popfq out jle mov loopne int3 pushq mov adc rex.RB rex.WRXB (bad) and movb jmpq adc outsl rex.WB pop xorl int3 cmpsb out gs sbb (bad) (bad) cmp (bad) leaveq (bad) shll fldt jnp mov imul and add pop (bad) test rex.RXB (bad) jb cs mov mov xchg int mov and divl rcr in pop sbb sti push sub out (bad) (bad) jns (bad) adc xor cmp idivl jno (bad) mov movabs sub nop adc in out push (bad) mov in (bad) enterq pop pushfq icebp mov (bad) adc cmp data16 imulb callq add jne pop popfq mov (bad) leaveq add hlt xchg jb (bad) sbb xchg (bad) jno popfq pop orl xor loop pop xchg mov (bad) hlt nop movb mov xchg jl loopne and adc shlb mov pop jp out (bad) jne add repnz lahf sub iret sbb test std mov movabs rolb popfq cmc repz stos movabs (bad) bnd and (bad) movsl mov outsb rex.X (bad) pushq loope mov (bad) (bad) xlat js,pt add rex.WXB rorb adc rex.B and push pop cld jmp or clc sbb movabs fimul (bad) je nop movsl jle xchg jns in cmp decb xchg orl test callq cltd movabs or lea je and mov pop loopne punpcklbw fcoms xchg jp (bad) test pushq retq pop cmp cmp int sbb cmp js loop cmp push pop sbb jrcxz mov cmp rex.RXB mov jrcxz xchg notl stc sub in popfq (bad) cwtd xor and sbb iret cmp (bad) in jmp movslq adc pop repnz xchg popq rex.WRX (bad) movsb pop fwait callq (bad) mov cmpl scas lods pushq push repz pop (bad) rex (bad) jmp (bad) roll xchg (bad) in (bad) rex.WRXB fwait jle push and pushq adc jle sbb (bad) (bad) push rol ja cmpsb cmpsl sub shll test iret jb jle xor and pop cli mov test (bad) retq mov pop push jb std mov movabs pop pop jae (bad) rex.X rex.WR xor fdivl push shrb nop test loop mov jmpq xor stc fmuls or mov jb (bad) jno movsb movsb mov xor xchg jp sbb movslq adc lods rex (bad) xor rex.WX cmp cmpsb (bad) rex.X xor push sbbb outsb hlt xor or pop int3 add mov cltd (bad) (bad) out push out and loop outsl rex.X mov fbld (bad) (bad) iret jns int3 and pop mov lret rex.WXB test mov jg jp cmp rex.WX xchg lcall repz pop mov cmpsb sub jne xchg movabs (bad) in pushq mov lret xchg (bad) rex.XB movsl or and cmp andl mov add in movabs sbb pop and xor adc push (bad) or cmpsb pop mov rex.WB cmpsb ss jle (bad) pop out sbb (bad) (bad) sti pop or push cli (bad) clc flds pop (bad) (bad) rex.RXB rex.WXB test mov cmc sbb iret cmp mov in movslq push rex jle add rex.RX rex.X add pop push mov movabs (bad) fcompl jnp subl sub xor callq (bad) testb cmp add cmp mov fdivs mov sub rex lcall rex.RX test lahf fisttpll jrcxz lods push push add pop cmp lret lods jle cmpl rex.WRB callq sahf pop popfq cwtl pop mov pop iret roll lods movabs xchg in pop and lret cmp sbb insl mov int jno movabs push nop push rcl or xchg jbe jg out inc out jne lods push xlat (bad) (bad) int3 mov movabs cmp fistpl sbb je jb jno in movsl cmpsb lods xchg push xchg imulb mov rex.XB adc (bad) lock mov andl jp scas (bad) jbe push (bad) and (bad) loopne data16 (bad) pushq mov cmp repnz callq imul jrcxz and lret imul lret ss out rol sbb (bad) push sub (bad) imul (bad) lea lahf movabs (bad) mov in xchg and rex.WRXB sub (bad) add stc jbe jae fwait push pushfq movslq or cmc lods mov (bad) outsb in pop jo xor cmpsb mov rex.RB (bad) stos add pop cli and sarl lahf clc and jle sti cmp rex.WB shrb stc (bad) stos pop add neg mov int3 outsb test (bad) movabs test jge (bad) mov or int fcompl pop outsb out and rclb lock incb lahf (bad) (bad) fldenv (bad) (bad) rex.R pop scas jb xlat cld pop lea pop out cmp pop mov xchg pop pop cwtl mov (bad) jrcxz rcl mov fucomi rex.WB and movabs (bad) and sbb pop loop mov shr jbe outsb (bad) (bad) outsb stos cmc rex.WB mov cmp and mov jo and cwtl xchg (bad) (bad) (bad) xlat xchg add (bad) ds jle (bad) push xchg nop mov jnp insb push (bad) jmp mov mov mov rex.R (bad) or jp mov jne fs cmp fsubs sbb push ficomp rex jbe sarl xchg sub (bad) loop jg pushfq or inc (bad) rolb mov (bad) xchg jg scas scas sahf pop popfq fcmovnbe jg sub (bad) and pop lret pop mov sbb out mov pop ja iret sub fidivr fbstp rcl jge adc (bad) jbe (bad) insb xchg xor sub push insl cmp outsb cs or lock pushfq ja sti (bad) and rex pop pop or xorl (bad) rcrl sbb int rex.R and cwtl mov ss incb add mov (bad) data16 jmp mov adc jrcxz rex.WRX pushq stc xor test xchg add add std jle (bad) jb fs nop adc mov out loope adc pop sbb mov es movsl (bad) movabs test cld pushq out pushq sub pop cmc pushfq mov pop (bad) enterq lods and lods jmpq xchg ds loope pop jbe outsb (bad) xchg rolb (bad) (bad) xor jrcxz adc sbb (bad) rex.RXB mov rex (bad) out jns cmp pop std mov pop mov (bad) sti in mov adc sbb divb cmp push lods pop (bad) jge insl push sub rex.WXB nop mov adc push rex.XB test gs pop lods add xchg mov hlt mov cmpsl fnsave retq fs sbb sarb cltd rex.WXB shlb lahf rex.RX sub stos nop rex.R (bad) callq and adc notb rol sub rex rex.RX cmpsb rex.RB push xchg stos add (bad) pop rex.WX outsl movabs out imull mov retq pop enterq rex.WRX pushq movabs cmp (bad) mov fisubl stos xlat xchg pop mov sahf movabs cmpsb adc (bad) jmp cwtl or insl mov pop sub test movabs repz cmp jl or jb xchg pop adc xor imul scas fs loopne cmp fbstp lods (bad) cmp pop rex.R cmp rex.WRXB mov (bad) rcrb (bad) sahf jp cli (bad) mov sub mov jne callq jrcxz sbb (bad) mov pop xchg pop rex.WRXB fs pop repnz (bad) fcompl cltd iret rex.RX jmp (bad) fldcw jmpq fistpl pop xchg jnp (bad) gs mov sub test ds pop jl xor mov jno adc xchg adc (bad) and cli xor rclb (bad) seta (bad) outsl (bad) mov shll pop pushfq int3 movl xchg push pop fmuls jbe sub sbb pop popfq mov fisttpl fs (bad) push rex.WXB sbb mov jmpq movsl mov clc js push imul sahf movslq cmp rex.B cli rex.B (bad) fs rex.WX add or pop insl lahf loop sbb int xchg clc add fbld gs (bad) movabs ror rex.WRB rex.R loope push insb in sbb adc mov sbb sti callq pop enterq add push xchg lret jle je (bad) push not or push jae xchg mov mov iret pop imul sub cmp fnsave in lahf xchg jmp insb push (bad) pop jns or pop pop mov xchg and xchg addr32 sub fs jg xor xchg (bad) stos xchg lods jp rex.W loop mov mov imul int pop movsb cmp pushq push adc push xchg fbstp in mov and mov fwait mov sbb retq shlb insb pop mov xor imul xchg pop movslq push rex.WXB rex.WRB sahf loop cmp cmc in (bad) int rex.W outsb (bad) mov mov adc lret push add (bad) sbb test sbb mov sbb subl xor or idiv mov pop cwtl fsubl mov scas xor psubq adc (bad) idivb mov sahf loope jp and leaveq (bad) xchg (bad) rex.R add rcpps test mov in xchg pop in (bad) in xchg push mov xchg icebp ds sub fs mov inc (bad) or (bad) loop mov hlt out loop lods shr rex.RXB jp cli scas insl jmpq ss mov push movabs push int3 or in and loopne sti (bad) jnp pop cmpsb sub callq pop in (bad) cld (bad) sbb pushq push jp (bad) (bad) insl (bad) in fiadd pop (bad) in cmpsb xchg adc jg pop sub rolb vpunpcklbw insl jbe pop leaveq xchg in (bad) sbb or xlat mov testb xchg jbe out fsubrl sub stos enterq xchg std (bad) sub loopne mov cmpsb adc es rex.WR mov and (bad) add pop test (bad) (bad) and (bad) (bad) mov in jo (bad) xchg (bad) ja (bad) (bad) out rex.RX push lahf mov xchg jle (bad) cmp sar loope imul jp mov lret rex.R jo stos movsl addr32 xlat sbb push loopne test (bad) movabs push xchg cmc jb stos sbb cmp cmpsb mov mov jne xchg jp decb pop (bad) sahf out and lea sub mov pushq cmp nop rex.WX rex lods jp sub out in (bad) rex.B (bad) and sbbl out and out rex.WRB cltd test gs loopne xchg rex.WX imul movabs (bad) or push rex.RB ss insl jp xchg (bad) (bad) rex.WR sub sub sbb xchg jne mov sbb sbb jne (bad) jle popfq pop cmp rex.WRXB je out lahf (bad) sbb es cmp lock mov cmova cmp or xchg ds callq stos xchg (bad) mov ss test faddl (bad) sbb and rclb mov data16 clc fs rex.WR mov ds xchg jp (bad) xchg or mov add (bad) mov cmc (bad) xchg (bad) mov repnz rcrl shlb (bad) jo mov jb jmp mov insl rcl pop sub es cmpsb push int std loopne xchg push adc gs adc adc xchg (bad) rex.RB rex.B callq movabs hlt xchg push cmpsl (bad) xlat sbb (bad) lods sbb gs mov jg jge sahf (bad) cmpsl and cmp xchg outsb mov (bad) push and divl push jnp movabs in callq xor sub rex.RXB (bad) loopne (bad) fbstp (bad) fcomps out movabs rol scas (bad) ds xchg subb mov addr32 scas rex.RB (bad) jle mov out repnz (bad) mov outsl callq rex.W jb xchg xor mov callq xchg jo (bad) mov jle add cmp (bad) sub push mov (bad) xlat ror cmc sbb lret sub rex.WXB sbb jnp mov rex.X rex.WRB mov xchg (bad) (bad) out pop (bad) pop fistl addr32 iret (bad) cmp sub lahf jmpq sbb pop (bad) cmpl std push adc imull sub mov adc mov (bad) sub jbe repnz fistpll sub xor (bad) xchg push test imul leaveq push add in sub rcrb cmpsb movsl loop lret rcrl js out rex.WR rex.RB data16 pop (bad) xchg rex.WRXB movsl leaveq insl pop jns mov (bad) iret and rex.RB movsl xor mov insb out cmpsb rex.X (bad) mov cmpsb fwait mov rex.XB mov jno loope rex.WX add cli retq or retq pop mov out add mov jle adc mov or movl movabs pop cmc (bad) rex.WRB repnz repnz rex.R add js adc lods pop xlat mov rex.WR rex.W fs sub fmul xchg pop mov in (bad) and mov or push addr32 and pop and xlat loopne (bad) sub sbb (bad) or lods (bad) jrcxz adc push rex.WR rex.RX pop insl out xor jae jp rex.X rex.W (bad) insb cmp mov decb iret frstor pop es stos pop movabs cmpsl movabs pop mov scas jae rex.WRXB (bad) xchg mov jns and sub insb imul jp sahf jg xchg jo rex.R (bad) fnstcw fiaddl adc loope rex.WRX (bad) jle icebp mov (bad) xor xlat (bad) leaveq loopne sahf or mov fisttpll rex.WXB faddp movslq sub pushq jmp xlat lret stos mov (bad) int3 jb movsl (bad) pop lods fcompl movsl pop (bad) sub inc cmp mov add mov sbb pop xor out movabs xchg mov gs rex lock xchg (bad) rex.B xor mov xor mov adc rex.RX rex.WRXB insb leaveq div (bad) shr shlb sahf rex.X mov jae iret pushq or fcmovnbe out rex.WRXB adc rex.W pop and xchg nop sbb out rcrb rex.WXB rex.WRX (bad) ds pushq sub (bad) cwtl jle outsb (bad) in fs out adc rex.WX outsl (bad) gs mov (bad) mov lret xor add lods xchg (bad) in test cmpsb xchg mov xor rex.WB xchg shl stos mov movabs (bad) rex rex.WR fwait rcr addr32 fwait vpsrlw (bad) xrstor sub sti pushfq mov loope jmpq adc mov rex.WR pop (bad) rex.WR or loope rex.WXB rex.R (bad) sub imul sub sbb mov or jno (bad) adc (bad) lods scas iret out xor out (bad) cmc outsl jrcxz rex.RB sbb int (bad) jge cmp cmp lret mov rex.WR popfq cmp stos iret retq mov repnz std sbb rex.XB or enterq sbb fsubl (bad) or (bad) (bad) or adc jnp rex.WB fiaddl pushq mov mov push cmc (bad) xchg add mov movabs repz rex.XB fwait (bad) movsb std jne test fidivrl stos cmc std movsb (bad) mov retq rex.WRXB in (bad) movsl pop repz enterq test je push jmpq scas mov (bad) outsl adc shll (bad) jo (bad) (bad) rex.WRX (bad) sbb outsl rex.RXB adc mov (bad) int test mov test repnz adc sahf in (bad) and outsl (bad) outsb xor or rex.XB mov movabs (bad) es loop mov sbb loope mov (bad) (bad) bnd mov pop addr32 and (bad) (bad) or movabs adc adc cmp push (bad) mov xor adc push pop rex.X rex.W or mov jbe sbb xchg retq cmp rex.WRX jnp retq pushq sarb adc scas or xor jne xchg jne out mov orb es mov mov fdivrs lods xchg jns leaveq rex.WRX repz (bad) adcb pop enterq (bad) or loope xchg mov insl xchg cmpsb or es cmp mov and (bad) xchg insb jmp (bad) js cmp (bad) sti fs jle test int mov fstps out cmp loope loopne sub pop rex.X or rolb mov movsb jae sbb in add jnp jmp and sbb pop popfq ror jbe std notb jrcxz jns xor pop rex.W or lahf in sbb cli xor or rex.RX ja fs or rex.RB jbe fnstsw adc fmull cmp (bad) ror cli jno in in jrcxz,pt rex.RXB xor xor fcmovnbe test xchg jo add add (bad) (bad) push xchg adc mov rex.WXB rex.W sub frstor data16 cmp cmpsl popq scas jle mov xchg nop mov jae (bad) jb pop pushq rex.WXB push pushq mov outsb pushq data16 (bad) pop lock jge icebp (bad) loop pop xchg cmpsl mov shl data16 lods or rex.RXB movabs rex.WXB rex.X rex.RB push (bad) cwtl sbb mov cmpl out decb mov rclb fs mov cmpsb fnstsw jbe test mov rex.XB loope mov xorl pop or jrcxz and shlb jo fstps or fs fist jb mov imul shll sarl adc cmpsb sub rex.WRX (bad) jge in leaveq std in out push xchg imulb mov or rex.WB rex.WXB pop lahf lods (bad) mov mov mov xacquire sub test and leaveq js fmull nop (bad) mov movslq out (bad) pop (bad) push sub xchg (bad) addl jne movabs in xchg cmp fs (bad) cmpsb data16 ficom testb adcl (bad) retq or rex.WXB or pushq popfq fs (bad) nop push lret sub scas mov icebp xlat adc mov mov (bad) mov sbb rex.WR (bad) push xlat cmp ficompl cmc cwtl int3 pop rex.R (bad) repz fimul push cmc stos je pop cmpsl jle mov ds cltd and push add (bad) js outsb mov sahf xor jle (bad) cs nop push xchg lea stc in jns mov rex.B jno popfq je pop sarb loop imul rex.W pop (bad) (bad) (bad) lahf movabs xlat xchg mov xchg or clc (bad) mov outsb xor rex.X lret (bad) cmpsb scas fs push rex.WRXB (bad) (bad) xchg mov fstp stos or xchg outsl fdivrs movabs stos std rex.RX bnd movabs (bad) mov (bad) scas (bad) xchg (bad) rex sub push roll mov sub (bad) sbb rex.WRXB (bad) push or cmp (bad) (bad) xchg add stos and hlt subb std scas mov cltd mov jbe repz shrl mov xchg subl adc sub xchg or xchg pop (bad) xlat (bad) (bad) push cmp mov imul mov (bad) rcl test sbb fs cli xchg rex.WRXB rex.WRB ss in and mov notl adc jmpq clc je pop push cmpsb (bad) cmc pushq lahf rcl imul adc (bad) jae test jl pop jl std (bad) jb loop rex.B jle,pn adc sbb rex.WRXB repnz rex.WR jrcxz insl out (bad) fdivrl rex.RXB in or xchg pop xor push fistpl ds (bad) sbb jnp fistpl jp ds (bad) movabs xorl mov int xchg xlat movsl sub imul (bad) jb (bad) mov rex.WR repz in cmp jmpq pop xor fcoms and rex.RX loope cmp or xor pop insb jbe sbb add sbb clc xchg xor xchg jmpq and adc jns (bad) rex.RXB rex.WX or cmpsl push lods rex.X iret lock fistpl xchg jo callq sub int cmpb xchg xor add scas xchg insb es rex.WXB xor data16 (bad) adc pop (bad) fcoml movabs xchg or pop mov mov add data16 jbe sub test outsb lods add andps sahf pop adc add (bad) add cmpxchg sbb fcomi pop cmpsb fistp outsb add (bad) and xchg cltd fs or (bad) xchg rex pop mov push xchg incl jle (bad) punpckhwd int in pop xchg mov cmp scas in in xor jmp add icebp in cmpsb mov pop jmp jle test test loopne pop wrmsr movabs rex add mov loop (bad) (bad) rolb jg (bad) gs cltd rex.WRXB sbb rex.RX (bad) sbb loope (bad) lret (bad) adc (bad) sub fsave xor movsb jmp (bad) xchg ss mov (bad) jbe and cli int loop cs pop jmpq pushq mov rclb vdivss int3 test (bad) jmpq sbb (bad) movslq rex.R fstpl mov rex.WXB rex.X movabs repz (bad) pop xchg xchg movsb movslq rex.WRXB cmp (bad) iret test xlat xchg sbb fsubp loopne (bad) mov and or cmp fs (bad) adc roll out (bad) pushfq push add nop cmpl scas gs (bad) mov out (bad) xor stc cmp mov (bad) push pop xor mov sub (bad) mov lahf movabs (bad) cmp out or scas mov rex loop repnz mov rex.WR mov (bad) rex.RX cmpb retq pop mov xor insb cmp rex.RX sub cmpsb sub pop sub mov out stos sub cmpsb (bad) mov cli sub rex.WB xchg sbb rex.WXB sub adc sarb insl mov pop test scas fnsave (bad) outsl in lods rex.WRXB stc sahf stos (bad) sub movabs xchg xchg mov mov (bad) rex.RX sub outsl jle cmp lods sbb (bad) out mov out stos scas pushq or cwtl loop cmpsb sub mov mov rex.WX or mov jo rex.WRB (bad) in xor popfq (bad) pop xchg xor sub sub test rex.XB (bad) (bad) cwtl push repz xchg (bad) (bad) mov in xor subb flds jrcxz iret (bad) icebp sbb scas inc lret out retq stc stos push xor rorl sub sahf es cmpsb jle cmp mov push (bad) (bad) roll mov mov jmpq (bad) sbb (bad) rex.WX adc faddl test mov or rex.WRX addr32 mov out (bad) fcoml xlat rex cs movabs lret pop lock lret jbe cmp fisubl xchg sbb movabs mov sbb idivb in incb (bad) push mov (bad) push outsb sbb retq (bad) cmp leaveq (bad) lret nop cmp pushq xchg mov rex.R insb xchg (bad) lock (bad) add test or xchg mov fwait rex.RX movsl push (bad) pushq rex.WR repnz mov (bad) jnp adc loop andb sbbb jb sarb rex.RXB pop jo lods lret movsl or lock pushfq pushq outsb xlat cmc movabs out lret lret sub pop xchg (bad) add outsb (bad) repnz or jrcxz sub movsb fldl xlat pop pop jae adc callq rex.XB and outsb adc imul jl (bad) sub cmp movabs cld shr je xchg test (bad) add push pop cwtl mov sub (bad) cmp sub jbe rex.W fs fisub sub test and lahf push cmpsb je pop (bad) xchg sti js (bad) sbb scas retq (bad) flds lods pushq cli xor lret loopne lods (bad) (bad) mov hlt movabs pop mov or xor jg out cmc imul rex.RXB outsl test xor out jae stos mov xlat lods add cmpsb xor lods add cmp movslq outsb out cwtl fldlg2 repz imul mov fs mov (bad) enterq jle sub popfq pushfq test rex fwait outsl jrcxz fdiv mov adc mov sahf mov adc cmpsl cmc xchg rex.RX add (bad) sbb mov lahf std jno (bad) pop loop or or callq shrl jp rex.X mulb clc nop int3 and rex.W jo (bad) rex.RXB fstpt xchg jg sahf mov (bad) lahf rex.WRX scas rex.RX adc (bad) or adc out (bad) loop adc jp test adc rex.RB std cs cmp (bad) gs rex.WXB jle ja sbb retq mov (bad) mov rex.WX jne out jl movabs (bad) adc pushq movsl retq pop mov fsubp cmp sarb add cmpsb cmpsb jp movsl rex.B jb (bad) gs xor test fimul xor rex.WX and jmp sbb outsl sbb mull adc mov imul fnstcw xchg cmpsb sbb mov and sarl jge adc loopne pop movabs xor popfq (bad) (bad) cmc add jb add sahf fcomp or sbb rex.WX adc pop jae add mov movabs (bad) (bad) jp jae (bad) sub in jbe xchg adc mov jmp nop pop sbb push pop movabs jle (bad) addr32 cwtl pop rex.WRB rex.R sti mov mov subl sub shrl jmp push sbb sti add and rex.W xor jge movslq (bad) xchg test cmpb ja (bad) stos jle pop in mov rex.WRX mov xor push add popfq fisub retq and repnz out retq sub cld rex.RB adcb rex (bad) cmp rex.W rex.W rex.X rex.R (bad) push (bad) mov fs push pop rorl rex.RX rex.RB cs xor ror or sbb imul lret icebp int rex.WRX cmpsb pushq push (bad) pop movabs push or rex.W (bad) in rex.WRB scas movslq pop xlat (bad) out xchg mov test int cmc jmpq idiv push (bad) rex.RX rex.WB int pop cmp sub fwait mov clc fdivrs (bad) pop in (bad) pop (bad) rex.WXB mov and outsb xchg pop push int3 lret movabs mov jle pop cli or rex.R xchg lods sbb xor cmp rcrb lock addr32 movabs mov fwait sub lods js scas xchg xor push mov addr32 pop and xchg pop pop iret adc rex.WRB jbe div je and lea (bad) push xchg push mov xchg pop mov insl sahf (bad) pop (bad) test negb repz and pop in cwtl fsts or mov nop incl (bad) cmp (bad) push cmp fmull setbe rex.WB movsb int3 in fcmovbe mov and mov movsl fwait pop lock stc xchg test xor sahf popfq push cwtl mov (bad) rex.X and fsub pop fsubrl or xchg mov (bad) (bad) lret or mov pop pop inc xor pop jb pop mov (bad) orl (bad) or xor mov ss xchg (bad) adc xor rex.WR xchg mov xor outsb lret jb lahf xor and cmp scas (bad) jae rex.RB (bad) mov pop jmpq in mov vmwrite sbb mov je jg cmp mov stos xchg iret or sub cmp push cmp add (bad) mov movsl int3 sbb mov (bad) sbb (bad) scas pushfq (bad) jb test rex.XB imul jle test (bad) sub es fidiv out pushq ss mov xchg movl iret fwait add or rex.X lods mov pop pop sarb jno push in callq xlat adc rex.W ds out rex.WB adc pushq (bad) jne data16 (bad) movabs pop or xor (bad) ficoml jle and lods (bad) rcl (bad) incb (bad) xchg pop jle (bad) rcll cmp mov je gs (bad) (bad) icebp mov fstpt and jne movabs jno test push xchg (bad) int3 rcrb (bad) data16 jae std retq inc cld (bad) rex.WRXB stos sub out movslq push pop rex.WRXB jrcxz test fild fild mov rex.W rex.WXB xor jno cmp adcl (bad) mov pop mov xchg xchg (bad) movabs cld jp jb sub rex.B cmpsw pop (bad) rolb jbe mov sbb pop pop mov (bad) push rolb retq (bad) in loopne scas cltd sbb stos jb rex.WR jno sbb jae rcrb (bad) add cmp adc rex.B (bad) (bad) pushfq mov es popfq data16 mov outsb rex.WR xchg js mov mov (bad) fisttpll andl pop (bad) and xlat movsl sub cmpsl movslq xchg (bad) (bad) add pushq (bad) sbb (bad) icebp xchg pop add lret pop out loopne lea add clc push push rex.RXB js jo mov hlt and add rex.WRXB xchg add rex.B (bad) cmpl pop xchg (bad) (bad) rex.WRB (bad) imul xor cmpsb sbbl (bad) pushq rex.WRX xchg cs rex.RX rex.WXB fs pop (bad) (bad) loopne movsl fsts rol pop xor data16 add jb and mov iret sbb out sbb add jp (bad) (bad) xchg (bad) mov movabs jg imul (bad) or sbb retq scas scas mov (bad) rex.WRXB pushq mov lahf xchg jl rex.WRXB xorb frstor in jne mov movabs retq icebp lea pushq cmp repnz (bad) ja out mov xchg (bad) and cwtl rex.XB cmp sub popq add push sarb hlt fisttp push ss pop rex.RX rex.WRB xor sub movslq ja imul mulb (bad) rex.WR jo cli pop lods sbb mov (bad) gs xchg rex.WRX int3 rex.WR xchg sbb (bad) or jrcxz xchg cwtl and shrb rcrb rex.RB jge retq (bad) (bad) sbb lret mul fisub xlat jle andl adc sarl pushq xlat out rex.WRB movabs xor rclb test mov mulb adc (bad) retq mov xchg xor (bad) stc and movabs rex.XB xchg sarl xchg imul fisubrl and movsl sbb out rex.WX or and repnz rex.WRX lods xor andl rex.WR data16 mov xor and jrcxz mov pushfq movabs push rex.WX out sbb callq mov decb (bad) cltd sbb xchg fmuls mov cmpsl insl fxch (bad) mov fnstsw outsl testl xor insb sbb xor movabs fsts pop loop mov fdivr xlat (bad) add movsb callq or mov xchg add fs push insl mov fdivl adc (bad) (bad) jmpq (bad) or jle mov and (bad) jnp add lods mov (bad) test mov loop sub movabs cmc push popfq xor out xlat mov or (bad) fimul rex.WX xchg fwait push sub mov sahf rex.W and (bad) jne je xchg pop mov fidivl jle cmc fistl sahf rorb jbe fwait scas sbb pop mov movabs jmp sbbl pop cmp (bad) movabs fsts nop (bad) (bad) lods cld cltd sub pushq in iret push (bad) cld imul (bad) clc lahf mov ficompl rex insl pop pop xor and std loope pop sub fdivrs rex.RX sbbl sti sub pushfq (bad) add (bad) insb (bad) ja rex.R pop (bad) adc jge fsubl sbb (bad) add mov sub outsl (bad) jbe fstpt sar pop fmull rex.RXB xchg sbbl (bad) insb jmpq jb (bad) xchg xchg imul pop addl jno in (bad) jbe fistp push or sub pushfq loop pop fldenv jns (bad) lret scas (bad) sbb or lret xor jrcxz outsb xor jno (bad) or jge (bad) lret or mov cmp sbb rex.WRX mov push rex.RB mov xchg rex.RX pop test (bad) cld mov add out in (bad) mov jo jle (bad) outsb and data16 jns rex.WRX (bad) push xlat jo (bad) mov xchg pop in xor std (bad) in mov rex.RXB mov es pop rcl mov adc push pop (bad) sbb (bad) xchg and or jle iret cmpsl mov (bad) pushfq outsb jnp sbb push shrd retq out (bad) outsl jne mov rex.WR imulb (bad) out rex.WRB fisub mov sbb and stos adc mov adc (bad) retq lret nop scas loopne push sub (bad) xchg test xchg imul outsl cmp xchg rorl out sbb (bad) data16 es jb adc jno push jge sbb rex.RX (bad) jnp rex.WB xor ja subb cmpsb mov test push mov mov rex.W rex.RB lods shll test sub (bad) sarb cmp icebp sbb sti pop jmpq (bad) (bad) xlat jno cmp pop out mov popfq notb mov in mov sbb sbb xchg and xor loop iret xchg xor (bad) (bad) xorb mov je je sbb push xor jle add fstpt or int out xor jrcxz pushq out (bad) xchg and cmp in retq push and (bad) in rex.WRXB pop insb mov loope shlb hlt jp mov adc jbe (bad) lea (bad) movabs decb xchg cmp push mov (bad) cmpsb (bad) (bad) push mov or loop stos lock scas fs in (bad) push out xchg callq (bad) xchg xlat repz (bad) mov xchg out out pop js add sub int3 rex.RXB mov rex.WRB rex.WXB (bad) pop (bad) rex.RB fs test sub scas mov mov mov rex.WRX je jbe jns jno sbb adc rex.WX (bad) adc cmp adc cltd test rex.WR fisubl out xor lods pop push rex.WXB rex.RB mov (bad) (bad) clc cmp mov mov ror rex.WR rex.X rex.W out (bad) jbe test loope pushq vdivsd sub pop (bad) test xchg fs mov idivb es xor jb out pop lea iret adc pop (bad) mov adc imulb iret (bad) sbb xchg loopne mov in pushq cld sti sub (bad) out pop clc sub adc fildll fstps pop leaveq pop rex.WR fstpl (bad) addl mov rex.XB rex.RXB rex.XB pop sahf pushq callq js cmp mov hlt pop xchg rex.XB pop sbb repz mov (bad) pop (bad) clc mov (bad) (bad) rex.RXB insb jo loop xchg test and scas out pop hlt jbe xchg (bad) movabs xchg (bad) rex rex.RXB jmp sbb loope xchg mov scas cmp mov xlat rex.R and jb rex.WX rex.WRX (bad) xchg in insl add xchg cs mov movabs xchg mov mov movslq clc or retq (bad) and sub jbe push out xchg (bad) lock or or push xchg mov rex.WR rex.X sti jge mov (bad) sahf cmp loop data16 cmp jbe cmp out cmp jae xchg enterq xchg mov out mov jmp xor jp mov rex.RB jg adc pushq rex.XB pushq cld ja out xor out cmpsb mov sbb xchg rex.XB adc (bad) sub rex.WB fs pop hlt movabs in lahf movabs (bad) jmpq movsb (bad) mov repz mov xor repz mov push (bad) cmc adc xchg (bad) cmp ds lods scas xor or adc cmp jne (bad) lods rex.RB (bad) xor or in out push (bad) mov popfq (bad) movabs pop outsl cmp mov sbb push add mov mov cmp jbe callq movsb mov pushq mov push vcomiss rex.RX sub (bad) test pop xor sub (bad) shlb xlat callq out mov xchg cwtl test (bad) jmpq rex.WRX mov and ja jae pop outsb outsl mov lock popfq xchg mov shll fisubr sbb mov sub (bad) push and jrcxz (bad) jle (bad) jb and idivl nop mov hlt jo (bad) lret js jmpq pop adc pushq sub (bad) pop cltd push int cld divl (bad) add cmc fwait lret (bad) mull (bad) sub add sub mov xchg cmc and movsb or pop pushq fildll movabs mov adc imulb (bad) (bad) sub rex.X outsl cmp mov jne sbb push (bad) (bad) and out mov lret (bad) add leaveq or cmp and out mov adc jmpq mov je jae cmp sub pushq subb xchg jbe (bad) jae rex.RB push cmp mov (bad) cmpsl fcmovnb je test test in jle push xchg out nop xchg sub (bad) cmp rolb mov (bad) sbb sahf jo jmp mov (bad) xchg jle xchg xor fnstsw (bad) std insl fs (bad) (bad) (bad) rex.WR (bad) sbb loopne adc stc xor callq (bad) xchg cmc push xchg cltd adc lods (bad) movabs (bad) sbb cmc out rcr ror stos in xchg (bad) and sbb lea mov sub adc pop or cmp insb rex.WXB (bad) push (bad) or (bad) xchg sbb pop rex.W movabs sti mov jmp div (bad) rex.WX retq retq callq movsl (bad) xchg (bad) (bad) xchg mov xor sarl insl out jae in repz (bad) and add xlat sbb (bad) fnsave jne gs mov imul stos movabs or pushfq pushq idivb retq or jns and enterq cmp outsb test sub jae je (bad) lock add pop int leaveq rex.WRB lods cmp out jo je pop pop retq pop lea (bad) xor adc test in cmp adc movabs in mov pop sbb adc js or xchg (bad) mov cmp rex.RXB shrb cmc mov repz (bad) out fnstsw xor out mov or lret rex.WXB adc (bad) cmp (bad) loopne cli movslq rex.WXB sbb es out sbb loopne jle scas adc (bad) mov fcoms lret lahf push xchg repnz xlat jb sbb jae test lea sahf jrcxz cmp jp lods mov push fsubrs scas lods pop sub mov retq cmp movsb shrb cs cmp (bad) jg (bad) pop add scas stc cmp adc rcrl xor pop pop xor push enterq pushq push pushq pop std mull adc (bad) enterq repz test cs mov lahf rex.WB test rex.RX rcll fnstsw pop sub in jrcxz adc (bad) fucom jb pop add je (bad) (bad) loop xor rorb mov ss adc rclb add xor jrcxz (bad) lret leaveq cmp mov out nop jno cmp sbb hlt stos pop cmpsb pop xor pop test rex.WRXB cld sbb adc (bad) sbb pop (bad) cli fsts push sub ja xchg (bad) jle sti pop sahf pushq sub mov out insb (bad) (bad) and jge xor stos mov sbb mov gs sbb movabs not rex.RB rex.X incl in rex.WXB xchg mov outsb adc pop movsb (bad) (bad) rcl (bad) add jae sbb lock (bad) rex.WXB enterq mov rex fisubl xchg andl mov push jne jb orb adc sti jne test mov cmc (bad) pop rex.RB push add test (bad) (bad) jle or xor loopne mov fildll push (bad) stos sahf cmp leaveq (bad) imul adc rex ss jmpq pop (bad) (bad) fidivr cmp mulb mov stos cmpsl xchg data16 (bad) rex.X or xchg (bad) mov adc and (bad) jae fadd addr32 pop mov out cmp sahf and lahf add cltd mov rex.WRX xchg movsb rorl rex.RXB sbbl movabs or push jno cmp push cmpsb gs (bad) mov jle mov loop lea movsl and (bad) int3 imul out pop add lods mov outsb insb cltd (bad) scas ss data16 movl jle (bad) cmpl lea xchg mov fsubs jnp sahf mov xchg ja fnstcw rex.RXB movsl xor xchg test rex.RB cmpsl mov mov adcb (bad) and jnp insl imul (bad) pop cli (bad) jae cmp (bad) sub mov (bad) pop movabs mov jp jno in adc or iret push add mov addr32 xor sbb mov or pop fxch je adc in je (bad) cmp mov mov ss pop stc sbb (bad) (bad) xor pop popfq mov lahf outsb push (bad) add stos (bad) and (bad) sarb ss (bad) cmc movsb pop rex.WRX (bad) xor mov lea cld mov movabs rex.WR mov mov test jae xchg and jo mov push (bad) pushfq or push test (bad) (bad) rex.W es and fsubs fs pop (bad) sub (bad) cmp mov mov mov pop mov add rcl fs adc mov imul (bad) rex.R rex.XB (bad) nopl div scas insb lods pop (bad) mov pop jge outsb movabs rex.W outsl sbb push cmp xchg outsb rol mov (bad) mov outsl iret jb jne fwait xchg mov (bad) or gs push (bad) pop cmpb shll rex.WB xor mov mov pop add (bad) lock xchg xchg iret movsb pop jo push (bad) icebp rex.R jmpq adc (bad) (bad) pop lret frstor cmpsl sbb fdivs movsb (bad) push fwait pop and mov loope adc mov and movabs test cli clc sub rorl cmc stos (bad) (bad) xchg (bad) ja (bad) cmp fwait movabs xchg retq mov (bad) (bad) test mov test jbe stos xchg mov and retq jrcxz pop jge jne (bad) cmp or sahf (bad) in mov adc sub nop test in (bad) jrcxz,pt rex.WXB mov push stos shlb scas mov (bad) mov pop or cmp rex.WXB (bad) clc mov xor mov lods cmp fdivrp rex.WB rex.RXB adc sbb and lret test jg add pop (bad) rex.WR (bad) (bad) movsb mov cmpsl retq rex jns scas insb rdpmc xlat cmp jl or pop retq stc pushq mov enterq lret outsl xchg rcrb push cltd xchg adc or xchg out sbb (bad) (bad) nop rex.RB pop (bad) or mov iretw cmc loop pop sbb rex.RB out pop fistp push xchg fstps xchg ja and jmpq (bad) fs rex.WR je lahf or test mov (bad) or ficomp rex.WX or jp (bad) mov xor pop cmpsb xchg lock sub cmp (bad) rex.WR push mov outsl xchg (bad) mov pop mov ds notl rex.WRXB movsw (bad) jrcxz rex.WX negb sub sub andl sarb jmpq rex.RXB mov mov sub sub sahf pushfq jmp rex.WR rcrb add xor stc pop and mov rex.XB pop sub test lret mov xor (bad) dec mov jb and cmc mov mov add pop cwtl xlat adc loope movsb ss data16 mulb mov rol cmp jle lods addl jo xor sbb (bad) (bad) (bad) test (bad) mov test sub loopne sbb jrcxz (bad) (bad) xchg out add jne loopne rex.WRXB adc pop rex.WB xchg je sub test out sub outsb (bad) mov add mov test movl jge cmc mov movslq jbe out fadds (bad) mov rex.WRB (bad) mov (bad) fcmovbe mov (bad) psubd (bad) fstpt leavew pop jg rex.WRB fwait (bad) fidiv lret or (bad) data16 jle std adc rex.WX or adc mov jle std outsb and jb sbb outsb cmp cli rex.WRB push rex.R push test rex.RB lods rex.RXB jg push or (bad) movabs movabs (bad) sub js (bad) (bad) xchg outsb push cmp pushfq shll jg sti test jle jb rex.XB mov sub sti jp and jb andb mov gs cmp repz js (bad) push movabs adc lea sub hlt push cmpsl or xchg xchg mov fldl push adc jp xor addr32 fwait (bad) out cltd loop fisub pop jp or jge mov (bad) lahf (bad) sbb mov pop mov int3 outsb pop (bad) hlt (bad) mov xchg rex.W xor cmpsl mov movsb pushq cmp movabs cmp mov xlat enterq sbb mov jg xchg mov (bad) xchg pop clc (bad) mov outsb rorb (bad) add cmp add test add shlb mov rex.R rex.WR xor stos imulb repz pop (bad) (bad) cmpsb xchg (bad) movd or xchg (bad) mov sbb mov test add out (bad) jae imul loopne push fdivs sbb or mov xorl cmpsl sahf (bad) fwait pop rcrb int (bad) cld xchg (bad) lods rex.RB pop sbb (bad) mov gs pop (bad) out je and callq mov pop push in data16 pop xchg (bad) outsl (bad) push add lret out pop sub (bad) pop sub std je,pn loop fisttp jle sbb or adc pop cmpsl pushq cmpsb add insb lock cmp movabs xor out rex.WXB cmc adc or adc (bad) (bad) imul fwait jnp add ss jl stos cmpsl data16 (bad) pop xchg in jmp xchg add cli xor (bad) adc or xchg sbb or pop rex.WX cmp (bad) lahf adc ds (bad) xchg rcll push rcrb mov (bad) movsb xchg lret ficomp cmp lods int3 ss jge cli outsb add sub (bad) adc stos std fs xlat sarl retq clc sbb (bad) lods mov (bad) jg adc (bad) pop pop jle jnp test xor fnsave retq loop mov cld imul and lahf stos fldt cmpsl movabs cld loop (bad) cmpsb cmp fs mov cmp xorl jle outsb cmpsb xchg sarl rex.RB rex.RXB lock mov scas cmpsl lret mov (bad) (bad) movabs sahf stc sar or scas sub pushfq insl cmp shll rex.W jns xchg lods sbb out incb sub je jns ja movabs sbb rex.WXB loope,pt rex.WX and stos in (bad) js mov sbb fldl ja (bad) movabs vaddsubpd push (bad) cmp lock fdivp pushq popfq loope (bad) mov cmp movb (bad) rex.R (bad) lods nop jmp shlb jnp xchg xor int test sub insb xor repnz sbb cmp mov push mov pushq movslq (bad) pop ja (bad) rex (bad) mov (bad) mov imul xchg push add movabs (bad) mov retq imul in (bad) push (bad) rex.WR (bad) adc jle in (bad) leaveq shll stos in sbb rorl mov or xchg mov and hlt sbb outsb retq (bad) push in jp insl push jrcxz (bad) or cwtl retq rex.WR fstpl sub sub (bad) rex.R lret mov fldz mov add xchg mov stc mov (bad) std push push leaveq pop rex.RX (bad) cmp (bad) sbb mov mov sub xorl cmpsb cltd pop sub imul repz mov jl xchg jno out push idivb callq (bad) xchg idivl jmpq mov icebp out pop pop enterq jno outsl in rorl pushq test stos (bad) xchg mov jne in pop fistl (bad) (bad) cmp xchg gs jle movabs mov lods shr xchg mov std sarb pop jne mov xchg pushfq adc testb (bad) (bad) test sub mov stos pop loope adc push test and (bad) add or add loopne sub jns popfq loop (bad) (bad) stc jl xchg loopne roll mov sub xor sti add pop push stos jp cmpsb cmp mov int3 (bad) xchg (bad) pop sbb loope and popfq cmc mov sub data16 sub movsb mov pop sbb (bad) pushq ds cmc out mov add scas (bad) sbb jno in (bad) or xor pop add (bad) xchg pop mov sub ja cmpsl and rex.B enterq push xchg (bad) (bad) sbb and pushfq roll (bad) xchg roll jbe jo and (bad) push cmp pop jns jle mov (bad) add addl mov and pop movswl icebp and adc lods cli xchg movsb cmpsb (bad) (bad) xor mov adc stos rex.WRB rex.WXB (bad) xor hlt insb fs jle imul and adc (bad) cwtl or cs fist cmp push push je (bad) pop push (bad) (bad) lret mov insb (bad) movabs movabs addb out pop sub pop add sub ja test (bad) scas xor lods stos mov adc xor out cmp mov enterq mov rex.WRX sbb jle or jne shrb adc insl jrcxz sahf (bad) mov cmp clc mov or cmc sub ja push outsb xor jae sub movsl sbb and jp jo (bad) cmp vmovaps jle rex rex.X cmp leaveq out push (bad) sarl fstpl xchg out (bad) mov sahf pop sub cs cmpsb movabs sti jge test jne fimul movslq jbe sbb scas addr32 pushfq hlt cs stc movslq addr32 xlat in (bad) test fisubl (bad) (bad) int3 in sahf mov pop movslq add fstps (bad) pop js xchg jo jmpq (bad) jns callq rcll add lock icebp iret scas xchg (bad) xchg in (bad) pushfq push movslq xor repz rcl cmpsl (bad) stos xchg pop js in adc rex.WRXB outsb addb cmc (bad) movabs mov push test push cmp jbe mov mov mov jo pushq (bad) loope in sahf negl (bad) loopne sbb (bad) lahf mov (bad) jl jb adc mov movsb (bad) insb pop jl (bad) xchg adc fdiv xchg insb fcomp in int3 mov or jmp movsb test lret or mov fildll add (bad) decl (bad) mov fiadd clc test rex.WR or push stos insl pushq jbe sti and (bad) fmul and scas mov lods in sbb fdivrp push rorb jns xor std mov outsl or je out (bad) rex.WRX repz (bad) mov callq or movsl cltd and sbb pushq data16 or mov xchg mov (bad) xchg jo and retq shl fldcw xchg adc pop fbstp mov cld rolb stos (bad) movabs jmpq sbb popq push roll cmpsb pop iret cmc int3 fs rex.XB jge sarb sub pop adc mov (bad) repnz xor (bad) jo jno fistl xchg sarb (bad) add out cmp cmp (bad) adc sbb or cmpsb pop mov imul (bad) pop imul clc insb (bad) movsb (bad) fs jb add (bad) hlt stc out (bad) int3 push mov vpermt2pd js mov jno mov imul rorb sbb mov in movabs andl mov lods xlat (bad) jmpq rex.WB mov xor ds xor mov movabs cmp (bad) adc cwtl js in xchg cli rex.WR rcll xchg movabs pop push loope rex.RXB movabs sub fisubl xchg data16 rex.WRXB insl xchg iret rex.RX push (bad) cmpsl mov (bad) outsb cmp rex.WRXB scas cmpsl xchg mov movsl stos pop push imul jne mov je incb mov test sub mov adc rex xor clc imul rex.RB (bad) (bad) mov sbb test rex.XB movabs cmpsb lods repnz outsl jg xor xchg xchg scas test jne (bad) in outsb adc mov adc jnp out mov jbe rex.XB iret movsl sub cmc fistp lock outsl out and (bad) fdiv lahf rex.WRB cmp cmpsb (bad) out mov cmp (bad) rcl out es jnp test xlat cmp mov or mov (bad) mov mov pop outsb outsb jo (bad) nop (bad) sbb jns xor (bad) mov rex.WX xchg cmp enterq repnz pop out retq es jbe mov insl rex.RXB rex.RX pop (bad) xlat mov mov outsb sbb imul data16 mov adc popfq js mov rex.W fwait outsb cmp (bad) icebp jbe fcmovne in iret in movslq sub xor mov data16 pop mov leaveq adc rex.WX fisubrl jle cmp rex.R xlat mov mov enterq push jmp pop movsl rex.WRXB imul push xlat lret mov xchg (bad) movabs mov repnz or cmovl fidiv xor rex.WRX data16 rex.WXB data16 add mov cmp cwtl cltd (bad) rex.WX pushq jno outsb or push (bad) mov lea push and (bad) (bad) or callq mov fcoml (bad) jg fwait sub movabs shr fbld ss push mov pop out pop mov shrl jne xchg ss nop stos ss cli cmp jne pop movabs lret jae sub push int3 loopne addr32 rex.WX loopne push (bad) (bad) sbb add cmpsb (bad) (bad) retq (bad) mov rex.WRX mov cmc jg sbb pushq xchg (bad) push movabs adc sarl stc mov (bad) sub cmp rex.XB fcoms (bad) jl retq cmp es ficoml pop cmp lods (bad) add (bad) je lock and (bad) jae (bad) (bad) jne negl cld sub movsb and pushq adc and pop lret or (bad) push pop rcr rex.WRB mov mov (bad) (bad) mov rolb cli icebp repz or loop and rol mov and movl (bad) (bad) popfq imul pop jrcxz mov retq (bad) push (bad) xchg push rex.RXB enterq retq add mov jmpq add pop cmc lock fmuls mov shl sub rex.W jmpq xchg adc pop jnp mov xchg test sub adc rcl insb (bad) outsb xlat fnstsw std mov fisttp (bad) rex.WX jp jmp and push rolb push add mov rex.R retq mov push mov stos movabs in mov cmp or test pop mov rex.W rex.WR mov (bad) fs icebp sbb and std mov pop ds cmpsb or (bad) outsb mov sub xor data16 movabs pop fldenv jmpq lock (bad) movabs jne movsl pop movsl (bad) test push lods (bad) (bad) imul (bad) (bad) pop rex.XB pushfq pop lret (bad) in movabs gs pop je cltd sbb pop jnp sub xchg rolb outsb outsb xor movabs (bad) loope (bad) adc (bad) (bad) idivl movabs pop jle shl iret cmp jne in xchg loope scas repnz (bad) xor outsl sbb and outsl out cmpsb xchg lret jle (bad) and and scas adc in sti jb sbb leaveq sbb mov (bad) (bad) pop (bad) sub movabs test jbe je push and mov std push jb (bad) add pop push sbb cli mov (bad) (bad) rcrb (bad) leaveq add rex.B scas mov stos out sahf scas fldt (bad) movsb (bad) mov shrb adc loop mov rex.W rex.WRXB lods shl (bad) mov cmp cmp (bad) and pop mov cmpsl icebp push jbe xor adc (bad) rex.WXB out iret icebp stos (bad) adc xchg pushfq sbb push adc sbb mov or mov add je (bad) lret fsubrl jrcxz test data16 adc and cwtl sub retq sub (bad) fnstenv rex.RXB rex rex.RXB mov (bad) and es mov cs fwait jns (bad) test loop push shl sti in (bad) sub gs in js stos pop adc (bad) rcrb out cmpsb sbb rcrb push (bad) loope lret cs test and jle cmp push sahf movabs pushq rex.WX rex.RB rex.WX loopne (bad) (bad) jo and add jnp adc xchg jmp cli jb fwait lods enterq push xchg (bad) ss (bad) sbb scas fsubp rex.WXB repz out and sti jo add sbb addl cmp mov or sbb push loope pop jle and sbb cmpsb sti sbb jmpq sbb jnp xchg jne movb (bad) ficomp (bad) (bad) out push rex.RXB sahf movsl push imul cmp rex.WX (bad) fdivrs mov nop cwtl fsubrp lret adc xor lods xchg push xchg add pop or sub sub rex.WRB mov jge notl (bad) insl jmpq add in (bad) sub (bad) (bad) mov mov xor callq jo rex.XB jle push outsb data16 rol or add add in jle imul xlat mov je fidivr pop sub movsl lahf xchg in rex.WX rex.RXB callq add pop pop movabs fsts retq sarl mov cmp and rex.RX movabs sbb xchg test addw xchg lea rex.RB lret rex.RX pop and rex.WRXB mov (bad) mov stc pushq clc out (bad) jge insb pop mov repnz or jle orl sahf stos movabs popq notb nop add (bad) mov pop pop add movabs pop sbb fsub and cli (bad) jbe sbb xchg pushq mov rex.WRX pop xchg jne xor (bad) cmpsb and iret rex.RB pop push mov fs rex.RX rex.RB pop (bad) sbb pop movslq xor mov (bad) repnz (bad) fimul idivb stos (bad) jmpq rex.WB pop out fdivs pop out jle cmp je jge sub in pop (bad) rolb movsl ficomp (bad) outsb movabs pop or push pop (bad) pop pop test insl sub sbb sbb pop fldcw (bad) (bad) sub and (bad) rex.WB cmpsb (bad) loope loop xchg hlt in (bad) xchg push (bad) incb pop (bad) lods push popfq mov and pop xchg adc leaveq or (bad) stos sub lods in imul test sbb xchg int3 (bad) xor or data16 rex.WR xchg shl (bad) adc leaveq push sbb lea rex.W rex.WX pop rex.WRX pop (bad) adc in (bad) mov xchg roll mov pushfq (bad) callq andb jns test jrcxz rex and (bad) (bad) mov (bad) outsb movsb fs cmp in xchg sub push movabs and rex.R rex.X jns,pt and adc hlt sbb cmpsb (bad) retq jrcxz add pop fcoms (bad) loope (bad) (bad) fcompl repz outsb rcr (bad) scas rex.RX add cmp mov jbe (bad) gs je in jge stos testl (bad) out mov fxch out mov and (bad) cmpsl test push imul bnd sbb (bad) imul (bad) mov mov jrcxz rex.WRXB gs pop add movabs lods test mov mov stc rex.WRX and out lea xchg xchg pop rex.WX rex.XB cmp mov mov fildll (bad) rcrl (bad) (bad) int3 rex.W outsb sub popfq (bad) xor out jg scas mov fsts fistl shl jle movabs fisub push (bad) pop adc enterq (bad) xor out (bad) jae xchg cmp push mov mov mov xor or (bad) rex.WX sbb jg adc mov sub cmpsb rex.WX rex.R fild stos movsl sbb pushq xor jg (bad) (bad) or xchg xor sub mov mov xor (bad) sub (bad) sbbl sbb test pop (bad) (bad) stos cld nop pop test (bad) fcmove mov xchg pushq adc xchg jrcxz jle pop andl out add rex.WX (bad) mov or xchg insl sub or mov or movsl cwtl fsub xchg (bad) xchg stc pop xchg clc movabs (bad) out nop test xchg and fisubl mov (bad) (bad) cmc vpaddd out mov pop adc fildll rex.B movl push xchg push out jp lret jl loop or pop lods sub mov icebp jle push adcl jno sub sub rex.WRX movslq jp mov ficom cmp lods leaveq movsb stos fsubl mov jae stos jae outsl jne lahf movabs adc mov (bad) fs sub (bad) (bad) repnz add (bad) mov (bad) rex.WRXB stc out rex.WR lea movsb jnp xchg fistpl stos outsl push in pop mov cmp in repnz sbb retq lret (bad) cmpsb sbb popfq pop adc adc in xchg int xchg sbb jle sub xchg sub add jge out test xchg repnz icebp je add sbb fdivrl lods jrcxz or cmpl adc and sar and jno loope addr32 xchg fidiv data16 int mov fmull push adc mov jbe pop jl jns movabs cmp mov movsl enterq in (bad) push (bad) rex.WXB rex.W clc nop test ror (bad) rex.RB xlat sbb add xchg adc sub pop lods (bad) roll std xlat pop mov cmpsb es rex.WRB movabs xor callq xchg xor jle jno movsb in rex.RX cmp jrcxz rclb xor cmp (bad) sbb (bad) insl mov movsl and sub repz cmp xor cmp test mov add (bad) rex.B repnz (bad) stos pushfq lods xor imul push scas pop cmpl test mov add push (bad) ds pop xor xchg cmp sbb (bad) jb mov (bad) pushq iret or (bad) xor push (bad) (bad) or mov pushq lret gs mov pushq pop sbb gs gs rex.WRB mov sbb leaveq jb ficom (bad) and mov ja pop rex.RB (bad) pop (bad) mov cli retq mov mov jge pop xor repnz (bad) mov mov mov cli adc inc xorb (bad) movabs pushq push mov push (bad) and movabs icebp repz sarb xchg (bad) sub jle cmp (bad) mov jo (bad) jns rex.RB mov or cmp scas rex.W stos (bad) icebp mov jl sahf cmp (bad) (bad) add addr32 pop fdivrs xchg sbb sbb cmp outsl rex.XB mov rex.XB in mov jns mov clc ficomp pop sub and rex.RXB rex.B xchg loope mov (bad) rex.X rex.RX lods (bad) pushq int out jmp test (bad) insb rex.RB jmp movabs cmp add fnstsw fisubl lahf and and pop mov test pop and in movabs gs or rex.WRX scas pop mov loopne pushq jmpq in popfq and retq adc (bad) cmp mov insb pop fisttpl cmpsb pop jrcxz (bad) (bad) jnp out decl xor enterq movslq jl lret jle sub or mov insl push pop mov outsb loop pop movabs stos pop cwtl retq negb xor rex.XB xchg mov (bad) (bad) insl pop fs iret bswap jae popfq clc loop movabs adc jge sub (bad) pop nop adc rorb adc mov mov (bad) test xor outsb fistpl push mov gs jmpq cld jb mov data16 and cmp jno lods add pop stos hlt sbb mov cld sbb fdivrl fbstp mov movabs (bad) (bad) or rex.RX jmp xchg xchg lea div jo xchg ror lret (bad) hlt mov (bad) adc fadd cs out rex or (bad) sub pop jmp jno mov in add movabs sahf fnsave pop and sub pop mov cmp sti jbe mov rex movabs sub (bad) (bad) out test xchg rex pop repnz add jns pushq push sbb stos (bad) (bad) in (bad) rex.R xor add xor leaveq cmp (bad) stc (bad) rex.WRXB bnd or (bad) (bad) fsubs rex fs rex.WX in fmull (bad) lods mov out sbb mov or mov shll bswap (bad) sbb rclb add or fnstenv lahf (bad) rex.WRXB cmpsb push mov insb loop (bad) (bad) fdecstp stos mov cli ds mov stos stos add jno or cmp pop cmp or cld stos rex.R rex.X (bad) pushq movabs out scas rex.XB and (bad) jnp (bad) loop (bad) (bad) xchg xchg movabs xor rex.WRXB pop cmpsb outsb cmp (bad) adc out push stos mov cmpsb int adc out adc sub xor (bad) int (bad) hlt jle jp insl sub (bad) imul cmp outsb jbe jle mov (bad) in mov icebp rex.R pop lret xchg (bad) pop jne or ds pop and pop push leaveq (bad) xchg push (bad) rex.WB mov and xchg lret mov add cmp icebp jnp pushq (bad) (bad) cmpsb push push or jle jo movslq repnz (bad) imul rex.RXB je mov data16 xor and loopne jl pop xor sub scas fisub pop nop push (bad) pop mov ss cmp out repnz jno mov cmpsb retw jnp mov loope in mov incl and pop pop adc lods in callq cmp fmuls mov pop sub and pop outsl push (bad) rex.WRB pop xchg mov in js fsts pop ss in and (bad) pushfq (bad) (bad) rex.RX (bad) pop rex.R rex.XB mov fadd stc pop add jb pop and fs pushq loope rex.WXB rex.WRB pop icebp callq imul mov js rex.WX popfq adc xchg cmp pop scas jo lret enterq xchg (bad) cmpsl xor fsubr pop mov enterq pop sbb rex.WRB or loope mov pushq (bad) pop (bad) fimull jrcxz icebp data16 sub int3 rex.RX loop fucomp pop pop in outsl adc movsl jae rex.WB jp pop xor xchg jno sub pop outsb pop push adc xlat xor and fnstcw retq and lret decb jle rex.RXB jg mov and pop mov cmp xchg movsl and adc (bad) sbb (bad) outsb out cmpsl cld (bad) rcrb mov jl je jge and iret xchg jmpq pop fiaddl rex.WXB pop (bad) sahf movslq pop (bad) enterq sbb rex.RX or retq pop sbb and mov hlt pushq pop mov (bad) jne leaveq (bad) cs adc fidiv mov movsb mov std (bad) jg xchg rex.W add xor adc fwait (bad) orb ror rex.WXB rex.WR and push cmp xchg xchg movabs stos pushq (bad) fcom (bad) rex.W (bad) xor rex.RX cmp cld divb sub fcoml mov sub cltd (bad) (bad) or mov pop push push rex.RXB mov pop and pop and jle pushq pop rex.RB adc test pop gs sbb sub add roll mov rolb rcrb jo jmp cwtl sbb xlat fmuls jnp movsb mov out and orl jo add divb cld jle (bad) mov and sbb int stos gs mov data16 xor rorb mov add mov jrcxz pop (bad) (bad) rex.RX add outsb jge mov imul and rex.WXB rex.X (bad) ja insb pop sarl (bad) sub add rex.RX lahf (bad) clc mov and fdivs push pop jbe outsb and outsl sbb test test clc sub xchg lret mov jbe jb pushfq pop (bad) sub callq (bad) sbb lock pop (bad) rex.WRB cmc xor cmpsb fildll (bad) (bad) movabs imull xor cmp hlt movabs jo add ror (bad) test (bad) pop (bad) movabs or xor mov int3 and ja fcmove xchg (bad) mov jge stos fadds outsb jbe fwait mov jo jle int xor push pop subl enterq out cltd data16 mov pop (bad) lods fldenv or mov (bad) sub (bad) rex.WX lret jmpq rex.R add jne rex.WRXB rex.WRB lods pop mov mov (bad) push stc insb xlat or lahf add outsb mov mov jmp jbe (bad) callq mov add insl xor andl adc incb (bad) (bad) sbb rex.XB add vmovsldup fsts jb lock outsb (bad) sbb imul adc out (bad) sub fs out in sbb jp sahf in movq test push (bad) sub xchg push stos push stos insl (bad) ds testb pop addl in mov out mov rex.B xchg cld mov mov and rex.WR fs insb mov xor rex.WRX rex.WRB add sarw xorb push rex.B pop cmpl mov pop rex mov sub andl lahf pop pushq (bad) adc pop sub callw clc mov (bad) or pop jae xlat sbb (bad) int3 mov (bad) jmpq (bad) (bad) cmp fadd push mov and repz retq (bad) mov pop (bad) sbb and rex.WB mov cmp pop pop imul out sarb xchg adc xor xor jbe mov sub rex.WRB sbb cmp movabs cmp (bad) sbb rex mov push or fisttpl outsb add stos imulb stc or fisub mov movabs lods fs lahf jmpq or sbb subb (bad) lret mov repnz rex.WXB mov adc (bad) add xchg pushq fucom jl fimul shrl cmp (bad) mov jg test xchg xor fs mov in pop out mov stos pop sub (bad) cld fldcw (bad) jrcxz lods pop movslq lock rex.RX sbb rex (bad) (bad) addb jbe mov (bad) jrcxz divb rex.X andl mov stos insl imul cmp rex.WRX fcmovu mov (bad) pop (bad) stos movabs add int cmp pop loop push mov pop rex.RB pop mov rex.XB add pop xchg xchg jo popfq mov loop gs lret cmp adc (bad) jne (bad) mov xchg xchg add gs insb rex.WXB and sbb jns clc mov pop (bad) adc add in idivb scas insl stos (bad) and ss sahf je or cli (bad) repz cmp fcmovnbe (bad) pop sbbb pop mov jg (bad) pop push mov add cs movabs mov popfq lahf movsl mov test (bad) ss add pop movabs fdivl es insb rex.RX mov vdivpd scas push out out or adc int add pop js pushq mov lods (bad) mov jp (bad) jnp and loope (bad) lea out cmp adc rex.RB outsb fstpl (bad) adc pushq jbe fcoml data16 rex rex.RB sbb mov add push jbe push cmp (bad) test movabs shrb jbe je (bad) mov rex.WRX rex.WRX xchg sub pop pushq mov xor jmp xor shlb lret push mov xchg rex.W es (bad) and rex.XB imul push test enterq out jle (bad) push xor add rex.R xchg retq cmp (bad) sbb (bad) or rex.WXB xchg stos sbb test sub addr32 sbb mov outsb and movabs xor and (bad) xor xchg rex.XB out xor sub je jae (bad) jb xor outsl sub neg stos je in xor (bad) jb rcrl mov cmp fs insb repnz fadds movabs stos sub lods scas (bad) int out (bad) mov sbb jne mov pushq gs add push adc adc fsubr (bad) repz lock stos jno mov (bad) (bad) movabs iret mov rex.RX sarb add scas outsl cmpsl xchg out sbb sbb mov and cmp movabs mov popfq insl movabs fimull and incl (bad) lahf test (bad) pop mov cmpsl (bad) cmpsb int or jne fdivrs scas sub loopne (bad) fidiv pop jmpq (bad) or rex (bad) je cmp (bad) mov sub sbb mov mov or test xchg xchg xchg xchg xchg jae test adc int3 mov addl adc rcpps (bad) (bad) mov pop jo rex.WRB fsub roll xor pushfq rex.WRXB adc jl push jb ss fidivrl or outsb mov adc shr fildll mov out repz nop adc subb jl (bad) insl push jrcxz (bad) jge,pt pop push movsb sahf (bad) mov pop mov rex.RX loop xchg mov in outsb jrcxz jp pop je enterq pushfq jbe out fistp jb cmpsb rex.XB (bad) (bad) cmp icebp push leaveq gs dec lea mov repnz add adc or push (bad) imul fsubs adc pop rex.WRX addr32 jno pushq and (bad) pushq and xchg (bad) out push int js (bad) xchg fstl (bad) repz (bad) jnp cmp xlat jle js int3 or imul (bad) pop mov pop std mov outsb out jrcxz push test (bad) shrl movabs movslq data16 test pop adc imul rex.RX rex.WRB js xchg repz fisubl xchg (bad) sarl nop ds out xchg loope or mov (bad) rex.X jrcxz xor divb leaveq (bad) stos xor and push out loopne imul iret (bad) (bad) movabs fsubr mov xchg loop mov jl (bad) (bad) sbb je pop sarb cmpsl retq jns jno mov (bad) callq sahf mov xor (bad) mov movslq jb jle ja pop fwait clc pop or frstor rex.WX es xchg (bad) push cmp movabs cmpl insl sbb sub repz or (bad) cmp (bad) mov (bad) add or mov lret or clc (bad) pushq pop sbb (bad) adc mov outsb insl sub xchg adcl (bad) movabs movabs xchg mov mov lock (bad) push pushfq loopne rex.W cmp pushq pushq sarl push movabs adc (bad) (bad) mov mov (bad) (bad) and mov sub jns imul xor ds sub jmp callq rex.WR xor pop rex.RB mov cld neg cmpsb and nop sub (bad) (bad) xchg adc pop rex.WRX push sbb movsb cmpsb add lret jb (bad) cwtl sub (bad) (bad) shlb add fcmove cmp test and fistp loop cwtl out cmp cs mov and rex.WXB loopne xchg sbb callq es (bad) (bad) movslq sub and sti rex.WRX mov xchg and (bad) push insb frstor cmp cmp mov retq mov push mov retq jmp lea je xchg test movsl jno ja push or (bad) push rex.R push loope clc shlb cltd retq stos sbb xchg out pop xor stos in jae add movsb pop xchg jmp xlat sbb mov xchg (bad) jle push rex.RX jrcxz sarb jmp sahf mov jrcxz jno (bad) loop mov cwtl shrq in fdivrl jbe movabs sbb cmp (bad) pop (bad) jmp imulb xor rex.RB mov jns mov outsb sbb or (bad) fsts adc pop rex.WRB pop (bad) xchg lea jbe pop in es and movslq je imul xor fs in pop fcoms (bad) mov test fwait push rcll in out and add pop jbe rex.R rex.WRX fs (bad) adc in imul stos fnstcw xchg movups pop mov (bad) leaveq mov fstpl rex.RB rcrb leaveq or fdivr movabs xchg pop sti mov fwait cwtl (bad) int or lods cmpsb retq pop vcvttsd2usi repnz rex.RXB (bad) ficoml xor data16 (bad) xchg rex.WX rex.WRXB xor cs movsl sbb movsb cmp out pop pop sbbl loopne (bad) lods fadd loope notb (bad) loop adc cmp (bad) cmp rex.RXB jrcxz movsb jnp outsl (bad) out pop in (bad) rolb (bad) lock add je pop movabs fucom jmpq rex.WRB paddsb mov cmc in lods pop rex.WRB fbstp jmpq movabs xor jrcxz pop mov jmpq pop jle (bad) std (bad) insb vdivss movb mov jg rex.WX stc jl cmpsl xchg cmpsb push xor mov popfq loop rex.WRX mov adc (bad) adc jb std xor pop xor fcoml sub movabs rex.WB hlt scas push pop rex.WR rex.WX rcrb jg fwait insl mov add jns sarb clc xor pushq shrb pop adc pop cs xchg pop fdivrs xchg pop fistl pop enterq movabs xor push xchg xchg sub cmp rex.X icebp cmp cmp out pop jg (bad) pushq lret xchg cli sbb xor loop jge movabs hlt push (bad) scas rex.WX popfq sbb jne (bad) and repz mov xlat or adc add out (bad) or cmp push icebp adc rorb pop ds jmpq outsb jnp test mov rex.WRX int ss repnz jp insl (bad) in or rolb roll outsb or pop movsl add cwtl clc xor test rcrb addr32 (bad) lods or (bad) push (bad) mov sub cmp (bad) rex.WRX xchg (bad) mov adc enterq sarb jbe pop xchg mov cli jle fcoms push or jge jnp out (bad) fwait push mov cmpsb int rolb and shll xchg mulb mov pop lahf xchg mov xchg or add negl adc lods gs jb or (bad) adcb notl adc (bad) cmp pop bnd lret lahf push mov sahf rorl and and loopne mov in pushq pop iret (bad) pop pop sar out and rex.WB jbe mov sub retq or jmpq js bnd or out jns in and push iret pop rex.WXB addl movabs and (bad) adc xorl rex.RXB (bad) jbe push roll mov (bad) imul (bad) mov test sbb movslq push stc lock sub rorb (bad) outsl jae xor leaveq and mov pop or fcomps movsb movabs push adc or lock rex.WX rex.RXB incl add movslq rex.RX adc jmpq xchg rex.XB (bad) int3 push out scas lret mov jo pop mov (bad) out rex.WRX (bad) xchg imul xchg sbb movsb int3 push fs adc xor jl pushfq push xchg rex hlt rex.WRX xlat sbb rex.WR mov lahf jne (bad) outsb rex.XB outsl je mov sbb mov pop jbe pop pop out ficoml sbb mov (bad) (bad) pop fisubrl icebp callq cmp loope cltd movsl jle rex.WX mov sub fstpl pop adc cmpl push fwait pop out and sbb sbb pop movabs fcomps int cmpsl and rex.WB je pop (bad) lea or rex.R test mov movabs (bad) lods (bad) cmp or rex.XB mov mov sarl movsl fildl ficomp mov (bad) rex.WRXB jnp xchg cmp rex.RB (bad) or or fwait outsb fdivrl je or (bad) out and sbb rcrl out (bad) shr jle addr32 rex.WRXB xor in out xor cli icebp mov (bad) (bad) (bad) adc stos (bad) (bad) out (bad) add adc ss (bad) imull rex lods pop loope cld addl adc popfq divl lret (bad) jle xchg hlt or mov jae adc sub sarl movabs rex.W sbbb cmp sahf (bad) pop outsb xorl imul (bad) mov lods rex.WXB fwait leaveq outsl rex.WX mov mov movabs xor je mov jrcxz mov out adc and data16 xchg jbe cwtl es movabs rex.X (bad) add movslq lret lret xor and and pop push nop mov (bad) fistp xlat rex.WX pop or mov jae rex.WXB jbe xchg loop sbb cmpsl testb (bad) rex.WRB callq movslq (bad) movabs icebp mov cmp (bad) rex.XB sti sub retq (bad) lret divb (bad) insb pop loop jae adc stos (bad) cmpsl sahf loope int3 jns xor pop xchg sub stos (bad) mov mov (bad) in mov cmp (bad) cmpsb nop pop mov callq es and sarl sbb (bad) pop movsb cmpsb sub adc mov rex.WB imul cmp mov adc pop cmp sub rex.B jg vmovd jnp cmp fistp xor fucomp add add rex.WB in test fs rex.WX or and pop iret push mov cs (bad) out mov xorl imull mov cmp cmpsl sbb (bad) outsb iret rex.WX pushq loope mov mov mov movsb rex.WXB hlt std (bad) cmp (bad) xor cmp cmp (bad) (bad) cvtps2pi push (bad) in (bad) js lret movabs mov std out sahf stc cmp test (bad) movabs int jb (bad) push mov repnz rex.RXB clc cmp data16 movsl movabs jmpq lock (bad) movsb sbb add pop add xor (bad) sub movslq and push pop cli fisubrl and rex.RX jle outsl icebp sub or (bad) adc movsb jmp sbb outsb (bad) cli mov and insb (bad) loopne adc mov rex.X cmp adc (bad) insb push pop sbb lret (bad) add pop jp sbb cmp loope (bad) mov mov xorb in push popfq xchg test jne xor cmp outsb rex.XB cmpl lret mov adc rex.XB pop rcr (bad) jp fmuls (bad) (bad) jl (bad) nop mov push jns rex.RB (bad) or (bad) add retq mov (bad) mov sti xchg int3 (bad) fsubs cmc pop ds (bad) mov je rex.RX repnz test jae in mov xchg movsl mov (bad) rex.WX imul jnp movsl vsqrtsd and cwtl adc sbb out adc out shll (bad) (bad) or jrcxz repnz mov callq pop (bad) pop xor mov rorl jmpq (bad) rex.WB divl pop movq out out xchg rex.WX sub mov mov push scas (bad) cli xor mov ds rex.RB fdiv jrcxz movabs push add or (bad) stos (bad) jb adc jle xchg xchg rex rex.WRB sbb iret outsb xor jae test xchg jbe jrcxz jnp cmp mov xchg pushq fwait push (bad) icebp xchg movslq adc movsb adc rcrb and jo callq or (bad) xor (bad) adc jo std adc adc je mov cmpsb sbb pushq or and fincstp mov xchg jns cmp add xor xlat adc xorl sub imul xchg sarb (bad) add pop cltd xchg iret jle mov and mov and xor pop movabs sub fiaddl (bad) fs rex.X xchg (bad) sbb adc (bad) out jmp retq pop in and xchg (bad) shl pop lea int3 rex.WR rex.WRX sub addr32 adc (bad) cmp xlat in mov (bad) rolb add push sub lock cmp pushq mov movsb in pop andl mov nop sbb mov cli sub sbb mov jae (bad) pop in nop push xchg addb rex.WRXB xor fwait rex.R mov orl (bad) xor (bad) (bad) sub lods sbb rex.XB push mov fiaddl adc (bad) jno loopne (bad) and (bad) push lahf (bad) pop loop test (bad) hlt (bad) lods xor mov (bad) sub rex.X rex.W rex.W (bad) fiaddl stos fimul scas (bad) cmc movsb hlt mov gs and popfq adc movsl lods rex.RXB in or fcomp push mov (bad) out clc imul rolb lret and cmp push sbb je pushq add subb cli sub (bad) adc sub xchg add jle jge mov xor bsf cmp cmp push mov and je rex.WX xchg cmp sub xlat (bad) pop (bad) mov movsb fbstp jno cmp movabs mov sub jmp lods jbe rcll jns rex.XB cmpsb sbb (bad) jle mov xor (bad) (bad) xor add fnsave movabs or push cmpsb (bad) add rex.RX xor sbb sbb out cmpsb mov rex.RXB pop mov (bad) (bad) (bad) (bad) jne lock sbb int3 (bad) pop jmpq movabs sbb and mov imul pop (bad) rex.WRXB lods mov jae data16 rex.W fwait mov rex.WRB mov iret fisttpl icebp (bad) (bad) in jo sbb pop mov cltd loop movabs pushq retq jb (bad) jne xchg (bad) rex.WX (bad) jle (bad) (bad) lahf cmp hlt (bad) dec (bad) sub jrcxz (bad) jl or outsb sbb rex jns in rex.WRB (bad) jg or (bad) rex.WX notb (bad) (bad) pop pushfq mov or add push jb mov (bad) sub and (bad) rex.RXB (bad) scas or (bad) push adc cmp push fcoml rorb pop fcoml cld mov sub pop or xchg rclb int3 (bad) (bad) repnz pop mov pop rcll or popfq cwtl add gs mov out mov (bad) icebp (bad) cwtl frstor int3 ss repz rol add addr32 add xchg lea sub adc clc mov xchg (bad) pop cmp rorb add imulb in xchg (bad) and outsb and mov pushfq cmp jle repnz movsb sahf rex.XB lock cmpsl cmpsb (bad) retq or nop pop stos rcrb add hlt rex.WX push je int (bad) pop orl lods pop (bad) in ds (bad) (bad) cmp push mov push mov nop fnsave jae jmpq out push pop pop xchg (bad) (bad) jg mov cmpsb jb pop repnz lret mov (bad) (bad) xor (bad) jg (bad) pop pushq add pop sub adc rex.WRB (bad) fisubl movslq lods xchg cwtl (bad) and (bad) rex.WB xorl rex.WX jmpq imul xlat or pop and cld es sub pushq insb rex.WXB cli jg mov sbb rex.B or and stc out jns imul fisubl add sbb data16 imul xor and mov ja jae or pop (bad) movslq and xchg push xchg xchg (bad) push (bad) (bad) rex.WXB push xchg imul fistpll adc imull insb (bad) in addr32 in callq or xchg (bad) fisub rex.WR rex.RXB outsb pop sub pop outsb xchg popfq (bad) lods (bad) cs sub subl scas and fptan push jnp xchg and sub xor out push std (bad) sub add mov loope mov jb outsb adc loopne xor imul popfq adc xchg mov addr32 mov (bad) and xchg nop pushq xlat or cmp (bad) xchg (bad) mov cmp lock mov jbe rex.X add test (bad) jae rex.B retq xchg insb (bad) pop sub cmpsb (bad) push stos cltd pop adcl jmpq (bad) (bad) cmpsl retq (bad) adc xchg pop rex.X ja (bad) loopne jg iret xchg pop (bad) out stos jmp rex.RXB rex.WX jne rex.WRXB pop rex.RB jno xchg icebp sub fist fisttp (bad) mov mov mov iret sub (bad) and cmp adc jl mov pop mov sub movslq psrld (bad) out rex.R cld pop rex.B clc sub rex.R pop leaveq jo movabs cs or out lea cmp (bad) setno jnp pop (bad) (bad) jge movabs sub or in shrb test mov sub rex clc leaveq (bad) mov out sub (bad) jb scas iret rex.X add xchg adc mov rex.B (bad) movabs mov sub orl push cmp add mov out sub out cltd pop lahf movsl cmpsb fsubrs sti pop (bad) jno add (bad) js mov mov sbb jp sub pop cs jns xchg lock or (bad) adc je xchg mov jno rex.X in out mov lods xchg push rex.WXB data16 insb (bad) pop xor fsubrp int3 jo ja data16 pop repnz jmpq cmpsb rex.WB jle (bad) lods jmp mov sub (bad) xchg push loopne cwtl (bad) repnz cmpsb test xchg adc pop xchg sti (bad) rex.WR (bad) loop (bad) jl pop or xor sbb (bad) faddl pop mov cmp rex xacquire movabs addr32 (bad) fs push rcll xchg cwtl lock add mov mov (bad) mov add pop fucomi rex.RB jb jge jg idivl adc push lea test push iret pop fild loopne hlt cs rex.XB (bad) rex.WXB idiv cmc xor (bad) std mov xor xchg ucomiss jge je fidivrl (bad) add outsl (bad) cmp (bad) xor popfq fistpl cmp (bad) rex.WR stos or (bad) sbb jno rex.WRX cwtl sbb sbb fwait (bad) pushfq xchg jae cmp xlat cmpsl sahf cmpsb loope roll jbe mov mov (bad) loop rex.R in movabs sbb mov std repz cmp sub rex.WB adc or (bad) shrb (bad) or (bad) mov or pop ds xchg fisubr movabs iret jg rex.R mov shl rcll punpckldq in test cld xor loopne (bad) js (bad) pop and mov pop (bad) xor sub sbb pop pop icebp xchg repz sub push (bad) push leaveq je sbb xchg xchg xlat jrcxz in adc mov xchg cmc cmp (bad) mov xor insl (bad) stos or sbb rex.B adc cmc (bad) mov jmpq xlat int pop push push mov movsb and rcl mov pop fnsave loop data16 cs movabs loopne push mov rol int pop jp jno rex.RB imul scas adc xchg pop outsl lahf and (bad) cmc in sub (bad) clc in xlat div mov cmpsb add outsl fs adc imul push add cmc or rclb ficompl mov (bad) (bad) pop pop fs (bad) clc in movabs ss (bad) cltd pop in or jbe push (bad) rex.R rex.B gs hlt lock xor pushq movsl rex.WRXB xchg rex.RB lods add iret lock mov out (bad) (bad) adc mov cmc (bad) stos sub cs lret movabs and rex.WRB stos rex.WXB loopne pop cld (bad) sbb pop push or mov or scas movsb test rex.RXB add rep or or sub pushq sarb (bad) xor sub cmp (bad) outsl xlat (bad) mov xchg test (bad) mov jno stc rex.WR repz (bad) rex.X mov sub jae xchg sbb cld (bad) (bad) lods loop js jne mov jrcxz (bad) xor (bad) push pop imul (bad) test pop pop pushq xor imul rcl adc rex.WRXB rex.W rex.R (bad) rex.WXB outsl pushq je mov (bad) adc push cmpsb callq xchg or movsb fwait sbb stos (bad) outsb xchg loopne adc or and (bad) loop pop (bad) or sarb adc fstpt data16 cmp es add movb (bad) or sub icebp push movsb mov (bad) insb (bad) push jmpq mov popfq imul (bad) (bad) mov jbe movabs rex.RXB mov (bad) rex.WRB ds mov cs push adc (bad) add fistl movabs jae in or outsb add pop xchg andb sbb scas sbb cmpsb lretq rex.WRXB lret test imul movslq fstpt mov push xchg xor cwtl and pop jmp mov fcos movabs pushq (bad) mov or mov (bad) mov xor (bad) mov push in outsb cltd fstpl fldcw xchg iret pop pop out out loop pop repz (bad) xor sub adc cwtl gs (bad) jp cli cmp and cmp jnp xchg jmpq xor jb xchg or jbe xor pushfq fcoml ds std clc (bad) cltd xor rclb xor idiv push jne pop gs pop push mov add (bad) mov sbb rcl rex jge,pt pushq push xchg loopne clc fidivr loope (bad) jmp and xor add (bad) cli (bad) pushq ja (bad) in pop sahf movslq out jno movsl pop mov std pop retq cmp mov rex.WRB sar jne pop rex.WRB test sbb (bad) or jg push rex.X or or or push out lea cmp repnz fistl scas movabs popfq rex.WRX push and popfq rex.WRXB jrcxz test movabs cmc xlat jno mov sahf (bad) cli sub loop jae iret (bad) in mov jl jp add out cmc pop mov (bad) (bad) lock mov stos mov scas (bad) cltd add rex.W je mov mov out push rex.R clc adc fnstcw in cmc and out mov je jrcxz cmp mov rex.WXB lods fsubr addb jno int jp cwtl xor sbb pushfq jns and (bad) mov add (bad) sbb sbb rex.WX stos in pop mov jrcxz rex.W iret cld andl cwtl jo rex.WXB addr32 test ds outsl outsb sbb jo sub sbb pop cmpsb jle mov jnp fldl xchg adc icebp cmp (bad) rex.WRB (bad) xchg rorl pop jne ja jae mov stos cltd sbb (bad) lods pop callq mov ja movslq xor jl out outsb (bad) (bad) adc int rex.R mov jge ss xchg (bad) and (bad) leaveq sub test cmpsb int and mov mov mov (bad) pop mov shlb pop stos xor cwtl in cmp movabs out pop movabs orl scas pop or lea (bad) fcomps (bad) (bad) (bad) outsb jb cmp rex.WR mov insl stos pop pop push int mov pop fstps ficoml popfq mov sub pop fmuls jrcxz rex.WRXB lods (bad) jle adc and adc push test jmp push lods mov and sub repnz jg roll jle out xchg add or andb sbb push push and mov pop (bad) mov retq jb orb jbe movabs sub outsb sbb int3 fstl loopne jno test (bad) jnp shll and mov in repz mov (bad) push cmc or push push mov data16 stos retq rcrl leaveq fcomp int pushfq js pop cmc mov enterq sbb xchg or rex.XB xchg callq test pop xchg out cs add xchg pop adc sub mov (bad) (bad) xor movabs hlt cmp out sbb cmp lods or add sbb callq push notl add jb rex.WRB cmpsb out pushq (bad) rex.X push jl mov cmp mov pop mov xor and lea xlat (bad) and mov cmpsb out xchg mov lret mov jbe (bad) fcoms (bad) xchg loopne imul vmwrite fs insb out in (bad) jg lea mov pop es adc mov xor (bad) (bad) adc rex.WRXB cmpsb xor insl rex.WRB pop iret xchg out in test mul xchg xchg cmp (bad) mov ja (bad) (bad) and cld idivb lods (bad) pop jb bnd scas pop fstp mov mov jno add loope sbb (bad) xor pop and (bad) mov mov mov retq (bad) mov add cltd scas push (bad) ss mov mov add hlt out in pop mov insl xor add or jo rex.WR rex.RX lods out adc (bad) sahf (bad) rorb negb xor mov movabs and or or xchg fs pushq jo rex.WB push mov out movslq and pop mov stos jbe pop mov jmp rex.W rex.WRXB or (bad) nop adc mov (bad) push jmpq movabs jnp xor mov jne (bad) je add clc ss and nop data16 pop out add (bad) enterq jg mov orl xor cmpsb mov rex.XB test mov adc or mov or std cmpsl xchg sbb rex.RX rex.WB mov jle pop movsb sub stos rex.WR pop es cmpsl retq adc in nop rex.WB xchg stos xchg jrcxz and leaveq sbb data16 cli divb pop push cmpsl pop gs rorl pop mov in xlat pop ror pop rex.WXB movabs mov rex.XB rex.RB rclb rex.W in pop pop lret push jbe cmp rex.RXB lock insl add mov pop add (bad) test jns cmp adc pop scas (bad) in sub and (bad) adc pop xchg rclb insl and callq mov sbbl pop roll xor sub (bad) mov retq cli je int3 movsb loope pop sbb repz movabs negb hlt cli sub out pop sbb xchg fs cmp sbb mov mov (bad) add (bad) mov out mov (bad) sbb rex.WX jae jb and mov pop jnp rex.WX outsb adc mov loop movsb adc test movslq mov and xchg rex.RXB xor xlat pop (bad) cmp (bad) (bad) or (bad) xor mov add adc pop (bad) xchg rex.WXB xchg (bad) out mov mov lods and cmp sbb (bad) push sub cmp jno cltd fild xchg lock xchg cmp movabs scas mov insl mov mov (bad) and cwtl mull add jae pop (bad) pushfq xor out fdivs repz adc pop int pushq push xchg pop es sti (bad) jmpq (bad) outsl xor (bad) movabs (bad) (bad) jnp and mov pop rex.RX rex.WRX outsb test (bad) sahf hlt adc (bad) cli fs pop insb icebp cs rex.WRB enterq (bad) iret rex.WRB jb cltd outsb sbb jne (bad) jnp cmp fsub sub ss mov (bad) lret add mov je sbb (bad) cmpsl cmpl cmp btr sub or fdivr shll or (bad) lods out fmull (bad) cmc or adc jle adc es (bad) and jp or imul jnp clc mov pop sti out lahf orl shl push (bad) or (bad) jp movabs jnp jbe int3 stc flds rex.RB xchg xchg callq push rex mov jg movsb out movsb pushq or fcmovnb (bad) rex.RXB scas callq jno sub sub test xchg rex.WX jp stc test popfq (bad) (bad) add pushfq retq mov xor add mov insl or outsb adc out imul (bad) icebp fstpt sub mov (bad) lret lods sar mov ds fcomp xchg sahf pushfq sub or jbe (bad) lock (bad) adc jmpq jg mov test loop pop cmpsl push pop stos fidivl cmp (bad) je loopne mov jl push xchg xchg (bad) and (bad) sub adc rex or add outsl xor rex.B (bad) cmp pop fstpl xchg rex.WRXB adc and xchg push (bad) jp imul xchg fbld pushfq mov sbb rex.W lods pop jrcxz out rex.WRXB or jmp jle jle jno mov xor rex.R push rex.WR (bad) lea cmc xor adc lock sub outsb rex.WR and push push gs mov rex.WX adc pop mov or enterq (bad) (bad) pushq pop sti xor pushq outsb (bad) and fcmovb or (bad) in pop add pop movabs je xchg movsb rex.WRX mov cmc push pop xchg (bad) rex.X jno xor mov lock lret and (bad) lods lods and insl cmp mov cmp pop rex.XB (bad) jae (bad) xchg mov (bad) cli (bad) out (bad) movabs sbb jrcxz je ss sahf cli in jle shrb mov xchg repz shll insl xchg (bad) out rex.X mov xorb scas pop int3 (bad) stos iret je pop push jp rex.WRXB enterq adc (bad) stos rex.W (bad) fdiv je and mov clc (bad) sub mov cmpsb retq rex.WRX (bad) (bad) adc xchg hlt gs adc stos sub idivb or rex.W movabs (bad) test outsl out repz mov jmp and (bad) sbb sbb adc (bad) (bad) (bad) cs (bad) (bad) decl xor mov jne sarb adc xchg rol or scas push (bad) int3 fildl sub cmp xor callq mov callq fs (bad) pop xchg rex.X stos jne mov jmp js jge and callq rex.WXB and rex.RXB rex divb rex.WR test or (bad) imul ds mov pop shll mull and pop fwait lock in fistl (bad) or frstor xor (bad) fnsave (bad) popfq pop (bad) (bad) xor sahf and xchg loopne add (bad) jbe (bad) test and xchg fistp movsb sbb (bad) outsb xor sub loopne xchg shll sbb push loope (bad) mov jbe cmp mov scas push mov mov adc mov xor ljmp xor sub pop (bad) repz paddsb rex.RB xlat imul nop add xchg (bad) mov mov mov (bad) stos in scas in lahf xchg xlat or cmp xor out pop rex.WRXB fist (bad) imul add idiv xor xchg test xchg or (bad) rex.XB rex.WB (bad) jae (bad) mov loop (bad) mov iret (bad) pop outsb jo jp xor or (bad) or pop ss mov movslq rex.X pop pop ja (bad) mov ficomp stos in (bad) jae xchg rex.X insl push xchg mov sub loopne push push jbe (bad) pop mov xor fldcw pop jbe ja in fstpl lahf pcmpeqb sbb jno je adc push repz stos popfq xor and hlt rex.RB movabs jge sbb add jp pop mov mov pop mov retq and out jle cmp int3 mov es (bad) rorb rex.WRB and clc retq loop mov jle out (bad) mov xchg lret pop pop sbb mov or mov shlb pop loop (bad) cmp std sub out add in (bad) stos cld in sbb movabs jl sbb or (bad) sub jne repz cmpsb (bad) xor pop xchg cmpsb push jmp (bad) scas (bad) insb (bad) xchg fsts imul rex.RX mov sbb xchg psubsw (bad) pop and fldl shrl sahf popfq push xchg fmulp in cmc stos movabs rex.R (bad) jae movabs jl out imul (bad) pop insb movslq flds cli rex.WX mov jmp push iret rex.WXB rex.R rex.WX vdivpd addr32 xchg mov cmp out and pop pushfq sbb rex.RX jo (bad) xchg cwtl pop leaveq (bad) lret xchg xor pop popfq sbb (bad) mov data16 (bad) push (bad) rolb xchg and jo rex.RXB mov loop outsl (bad) jbe push icebp lods test xorl (bad) (bad) imul mov and lea pop mov (bad) sub cltd xchg rex.WRX and adc movabs fcoml mov fs movsl mov callq (bad) xor cmp rcrl jrcxz fildll (bad) pop callq adc adc xchg xorl shr pushq not pop (bad) sahf sub mov cmp mov movslq test push xchg rex cmp (bad) sbb pop mov jp cmp cmpsb femms adc ds fisttpl (bad) clc add and je ja test ror adc and xor mov lods jo sub jno loopne mov lea outsb mov and imul cmpsb mov adc test cmp adc scas adc pop imul cmpsb rex.WRXB loope mov rclb sub jns adc mov rcl sbb vunpcklps mov xchg rex.XB cmp jle test mov sub xchg outsl (bad) mov testb add xchg jl std orl vunpckhps movabs (bad) fmull std jno clc test addr32 ror jg out (bad) mov callq lahf rex.WXB gs pushfq data16 (bad) and loop stos fildll xchg jp jne std out sahf cmp jno or leaveq or insl sub or jb mov (bad) ds outsl pushq jg pop nop sub pop xchg sub and mov cmp test mov movslq jns rex.WB outsb loope xor (bad) add (bad) movl sahf sbb stc adc es and push xor (bad) xor (bad) xlat testb rex enterq gs (bad) fistl pop rex.WRX cs mov movsl stc push out sbb (bad) ds fs mov fs (bad) add add cmpsl fldt pop xchg mov iret xor (bad) mov movabs sbb imul shrb sbb cmp in (bad) outsb sbb rex.WRX cmp outsb jno movabs add pop rex.WRXB mov cs stos data16 and cmp fist (bad) mov rex pop (bad) jne cmpsb es rex.WRX (bad) or (bad) jg jle jbe adcl (bad) pop (bad) rex.WX rex.RB jae mov and adc pop jg rex.X test cmpsl lret adc loope (bad) (bad) cmp push gs pop cmc xor outsb jo or pop stos push xlat add incl stc pop jge (bad) fs adc insl (bad) pop rex.RXB rex.W jae xchg orl jle add nop push xchg adc mov fcompl and sub (bad) xchg (bad) (bad) jns clc cs add hlt jno sub xchg xor push addr32 pop (bad) jge mov in (bad) in xor or pop sti es (bad) fildl push mov lods jbe (bad) pop test cld (bad) cmc (bad) movsl and movslq loopne mov sub jbe js callq (bad) retq cmp (bad) xchg add stc rex.X mov sub fwait xchg lods pushq mov and push lahf mov rex.WXB and pop (bad) (bad) rex.WRB cltd loop push mov repz xlat sbb xlat loope gs test pop iret sbb lret mov or insl pop movsl movsl rorb iret pop imul jmp movb lods jle mov adc cmc jmp out push iret jle mov mov int3 rex.WRXB rex.W rex.WRB adc test (bad) lahf adc test rex.RB movabs data16 scas sahf (bad) nop (bad) jg mov in pushq in pop scas lods callq negb shll (bad) (bad) jno (bad) (bad) sbb pop lock jg (bad) mov jne outsl rcr pop push add lret add lret xor push shr scas cltd hlt icebp xchg (bad) mov data16 push mov and pop ficompl enterq mov addr32 (bad) mov jmpq movabs mull rex.WRXB in rex.RXB jp addr32 rorb xor or scas pop clc jae or cmp pop add outsb (bad) jb pop je adc icebp movsb callq rex.W lock retq mov sbb xchg (bad) mov (bad) stc xor (bad) mov mov jae or jae xchg cmpsb adc scas iret in jg (bad) mov jnp (bad) fsubl movslq sub (bad) (bad) (bad) rex.WXB orb jno xlat (bad) in push or mov adcl add negb iret mov pushfq rex.R mov int sbb lret (bad) (bad) fsubrl mov xchg orl adc rex.WRXB movabs sub mov push (bad) pushq je clc cmp (bad) (bad) mov pushq rex.WXB (bad) sub test (bad) stos int pushfq xor movabs (bad) add loopne test stos fs sbb (bad) cmp (bad) adc pop movabs bnd jmpq cmp shrb (bad) pop adc fs jno in mov stc fwait xchg or jmpq stos rex.B movabs (bad) jle push jo sbbb push adc push mov (bad) add test add rex.X mov xor mov hlt (bad) test xlat push sbb cwtl fdivrs cmc push rex.RXB lods rex.R scas xchg mov (bad) sbb out xor movsl (bad) roll (bad) mov sbb jbe mov stos (bad) rex.RX push mov push retq int cmpb data16 incb repz push adc (bad) lahf movabs xchg jg (bad) xor sahf cli sub (bad) xchg lret lret loopne push rex.R push movslq xchg xchg push add out jo (bad) (bad) jrcxz out adc add adc mov lock (bad) in iret xchg movsb add (bad) fcom (bad) insl mov rex.RX rex repz xor (bad) (bad) jrcxz pop cmp (bad) (bad) or (bad) jbe adc out mov fidiv pushq xchg (bad) in rex sarb or xor movsl fist mov in (bad) (bad) cli or cmpsl add xor out cmpsb rex.WR jne pop sbb (bad) (bad) out sub add lock xor lsl (bad) cmp retq (bad) push mov (bad) rex.XB lock mov or (bad) (bad) xor ds mov addb (bad) and sarb rex.R add movabs pop scas rex.WXB js movsb or popfq push (bad) and movl movsb mov mov sub stos mov push sbb cmp xchg stos lea jnp out in (bad) (bad) and (bad) sub retq sbb sahf sub clc out adc pop fisubr imul pushq movabs mov fisubrl pop movabs iret sbb lock mov (bad) jle (bad) xor mov addr32 jns xchg test sbb jrcxz sub sti push sub cmpb jmp outsb and cmp push xor (bad) jns (bad) in nop (bad) (bad) idivb fsubs mov movabs mov xor xor pop cmpsb mov or sbb movsl push pushfq mov fstpl stc cmp data16 push pop cs pop xchg cmc and and xchg mov sbb movabs cmc lahf cli pop (bad) (bad) xchg adc rex.B rex.WB fidivr (bad) stc cld enterq out rex.R fsubs pop fdivl clc (bad) xchg jo imul (bad) (bad) (bad) mov xchg push (bad) cwtl adc xor movsb (bad) pop mov (bad) mov idivb gs sbb fidivl rex.RB stos cmpsb nopl outsb and adc rex.WB sahf jb adc mov scas mov (bad) mov jno movabs xchg jns test fldt mov mov pop movsl jnp vandnps sti mov ja lods xchg sub add (bad) setbe sub movabs in lock cli lahf (bad) pop (bad) xor shll insb (bad) rex.X test movabs clc push cmpsb stos in outsb push rex.WRB (bad) pop sbb adc lea sahf and mov cmp loopne mov out stos fisttpll (bad) cmp or imul movslq cmp jne and fwait xchg rclb (bad) cld cli rex.WRXB pop (bad) or mov (bad) mov (bad) jrcxz xchg pop mov addb (bad) (bad) div mov jb pop iret rolb sub mull jg (bad) test (bad) jmp (bad) cltd xchg scas gs lock divb mov (bad) pop pop rcl data16 (bad) xorb adcl pop pop pop jb (bad) rex.RX jrcxz push xor xchg rorl gs push push mov sub scas lods out xchg adc insl push mov (bad) (bad) xor adc rex.R rex.WR (bad) test (bad) adc xor rex.RXB xor (bad) data16 push xchg mov lock (bad) movslq push mov fwait (bad) pushq adc jle (bad) test jne movsl adc pop rex.WB icebp and push or push jle movq fdivrs pushq sub fbstp jrcxz xchg (bad) sbb imul (bad) sub rex.WXB sbb mov xchg rex.WX inc out data16 pushq (bad) mov mov sbb mov pushq fnsave hlt movsb pushq jns rex.RX and fisub loope out pop rex.WB (bad) sbb rex.WXB rex.X add pop fs hlt rex.WRB mov pop (bad) retq (bad) rorb rex.WR cmpsl roll add (bad) clc rex.X pop sub loopne pop pop movabs hlt sub fldenv rol movabs push or stos insb movsb xchg jbe cmc jns pop fisttpl rex.XB pop jbe mov rex.WXB and iret movslq or gs (bad) adc add movabs cwtl mov addr32 (bad) lock jmp fs std add pop in or pop sarl jae rex.WRB jl hlt rex.WB xor out pop adcl xlat data16 outsb jno je test out sub popfq (bad) mov cmpsb fdivl and in rol (bad) xor jno mov pop xchg pop scas and and pop sbb jrcxz push rex.WB ss jno rolb sbb jb pop fs movsl loop rex.RX push jne movslq adc mov (bad) pop (bad) (bad) adc xchg jns leaveq xchg pop cmp test fldt and callq xchg xchg jb in pop mov add or in mov callq (bad) mov icebp (bad) pop xor mov cmpsl out imul loopne (bad) pop or sub iret test mov mov and mov (bad) and icebp xchg rex.W sbb pop (bad) sub fs adc pop sbb jo (bad) or idivl xor loop mov loope mov icebp sub rex.WX rex.B ja nop push movsb cmp (bad) cwtl pop rex.W retq cmp outsb xor sub jrcxz rex.WX jb sbb (bad) rex.WRX pop jno cmpsb lock sbb rex.WX ljmp movabs cmp cld sbb insb movslq pop cmpl pop xchg add jl,pt (bad) sti repnz movsb rex.WRX jg jno mov in fwait pop xlat rex.WRB test pushq push jbe mov xor movabs outsb mov lahf mov (bad) rex.WX pop (bad) loope and lret pop mov add xor movabs (bad) xchg mov jmp xchg movabs jns rclb pushq sub xchg ss push adc (bad) out mov jns pop mov mov pop (bad) sub test add std xor (bad) jl or fwait rex.WXB pop jp and mov out cmp sahf repnz rex.RB test mov jne push or add xchg loope addl imul xor or cmpsb (bad) rclb jb rex.WX push (bad) (bad) jle scas popfq ds clc out repnz (bad) sti fistpl adc xor cwtl (bad) rex.WXB in (bad) jae loope rex.WX rex.W push add add (bad) xchg rex.RXB enterq (bad) pop fsubs (bad) adc pushfq jl or mov cs jge orb sub (bad) incl or test adc (bad) stos stos mov mov sub movabs mov std cmpsb outsb push adc bndstx rex.WRB (bad) out rex.R (bad) out idiv rex.WXB decl cmp enterq rex.WB cmpsb (bad) es int3 rex.WXB mov jnp sub (bad) add (bad) mov xlat mov (bad) sub (bad) pop data16 jg rex.WRB adc lret jg fistpl movsb pop push pop xor loopne pop pop popfq insb div cmp jo data16 jb loope mov and rex.RXB add pop (bad) repz sub cmp incb stc hlt out repz imulb pop sbb (bad) cmp and fildl in rex.WB fwait xchg mov rex.WRB rex.R pop mov pushq sub retw mov xchg mov rex.RB mov movsl adc (bad) or scas movsb out adc push rex.RB pushq pop jmp in scas xor in and push (bad) negl fistp pushq (bad) sarl iret ja out mov (bad) movsl or rex.WRXB adc jg rex.RXB rex.RB outsb cld mov and callq imul jmp fildll sbb mov shll pop pushq mov ficomp rex.RXB mov cmp ss xchg clc mov cmpsl sub rex.WXB lea xor mov mov rolb rex.X rex.WRX repnz jbe test (bad) nop push pop rol repnz (bad) jb pop mov leaveq jg mov imul outsb cwtl je sub (bad) push mov enterq test (bad) mov (bad) and (bad) ja stos sti (bad) jl xchg (bad) jae test and (bad) retq scas push or cmp mov outsb outsb sub add popfq movsl pop mov out cmp and scas jae rex.W (bad) mov pushq retq (bad) mov std mov sbb loope mov mov (bad) and retq or mov in push ds push shll retq insl mov pop lods push xchg sbb scas pop outsl or rex.B rex.R rex.XB jno sub outsl mov mov xchg out pop fisub add add insl mov (bad) or cmpsb sbb cmp jmp outsb outsl (bad) flds lahf (bad) insb pop (bad) or pop add rolb sti fsubrs rex.WRB enterq cmpsb pop (bad) callq test and mov test pop cltd pop xlat mov cld imulb out shlb sbb push adc xchg sbbl pop pop lret fadds cmpsb (bad) loopne pop jp jbe fwait (bad) mov (bad) (bad) mov lods pop movsb in or stos rex.WRX rex.R pushq (bad) (bad) and insb rex.X ss jne mov je sbb outsb pop cmp out sahf (bad) rex.WR rex.RXB cmp fidivr imul (bad) or test jne adcb (bad) cmpsb add fcomps cmp in (bad) or push mov imul std rex.WRX repnz cli jmpq cmc nop rex.RX fs jbe std movabs out sahf (bad) push jle sub popfq jae push repnz xchg fisubrl push jno fs (bad) stos retq mov lret in mov movslq adc addl xchg xor fmull rex.WR rex.WRX stc insb movabs rex.WRX sub (bad) in rex.RB rex.RB es cltd or xchg add sarb out rex.RX xlat jb pop popfq out pushq or (bad) (bad) pushq or in outsl iret es in cmp and mov (bad) xor mov (bad) out (bad) cmp sbb pop pop xor iret stos (bad) pushq mov loopne sbb xchg movabs js lods movabs (bad) rex.RX add jns xchg fisub sbb lock (bad) pop xchg mov lods imul push jne xchg pop (bad) mov pop (bad) movsl (bad) rorl cmp push (bad) pushq in pop jbe (bad) (bad) push test cmp xchg enterq add incl and and mov jmp movsb pop sbb fcomps callq xchg (bad) cmp pop insb xchg (bad) push faddl jbe,pt mov movabs pop adc fstps xchg ficomp addb rcr fcmovnbe ja xchg cmp (bad) flds (bad) pop rex.RXB faddp iret rex.R sbb loopne cmpsb mov pop js mov mov pop sbb popfq cmc jbe mov (bad) movsb push je add mov sub pop subl sbb (bad) stos jns cmp xchg rex.B callq rex.WRXB rex.XB in lods and cs and movabs rex.RB in mov lock fsubrs out pop jnp orl popfq and lea icebp push (bad) sbb test xor push xchg mov cld mov mov rclb test xchg mov (bad) (bad) cmpsb and sub test in stos (bad) xor jmp jae mov lock jl (bad) mov faddl mov or loopne xchg mov fisub mov xchg adc adc data16 mov sbb sub or in stos imul gs sbb push int retq clc pop nop rcr cwtl xchg mov outsb sbb rex.RXB jmp add pop addr32 xchg mov rolb or out or rex.R push pop pop sbb mov shrb jbe fisubrl sub xchg mov (bad) jg fmuls pop pop push clc xchg xchg (bad) xchg jbe (bad) jnp xlat pop pop fwait callq out pop mov movslq pop outsb lea xor rex.WX lret popfq mov jno pop pop scas or test in mov (bad) pop pop fcoml cmp mov (bad) or jge in rex.WRX xor (bad) std fild lea mov adc int and fs (bad) stc jl mov pop (bad) jg cmp shlb xor pop (bad) adc sub ja jns stos or jle jo mov mov (bad) xchg sub (bad) (bad) (bad) mov xor (bad) sbb shlb out sbb fcmovbe mov jle stc mov movabs and movslq js xor pop stc xchg outsl data16 divl jns loop (bad) cltd (bad) rex ds xor xchg xchg rorl rex.WRB jp fisttpl (bad) (bad) push jb clc and pop (bad) out pushq cli cmpsl shll pushq rex.WB lock insb out (bad) and jbe loop int outsb sub sbb (bad) movabs mov cmp insl mov jle stc jp and outsb fsubrl movabs sbb mov or xchg stos es fsubrp push cmp cmovs (bad) rclb rex.WRB mov rex.X pushq cmpsb mov xor addl pushq rex.WR in sti mov and mov scas insl callq ds and (bad) adc rex.WRB sub xchg cmp and (bad) or cs xchg rolb (bad) rex.WRXB (bad) pop fistl lods rex.WRXB push (bad) rex.WXB sbb (bad) cmc loope adc pop xchg stc insl (bad) xchg jns rex.RX mov rex.X leaveq fsubs fld rex.WB jp movabs add retq movabs cmp fisubr mov and jle jg mov (bad) sub add fistl jrcxz (bad) pop cld mov test lods sbb imul sub xor and in sbb iret and out lods pop cltd jo mov jle (bad) jmpq fs movabs xchg (bad) fnclex retq jle push fs (bad) fildll nop pop mov adc jge mov mov lea mov xorl adc in mov test data16 add cmpsb add or (bad) pop push xor cmp (bad) repz pushq rex.R xchg movabs lret kxnorb pop rex.RXB movabs movabs sti mov scas xchg (bad) lods mov push icebp je (bad) imul fiadd imul (bad) popfq not lahf ja jmpq fxch mov sub xchg callq movsl mov jrcxz rcrl sub add mov xor ds pop mov (bad) mov adc jrcxz rclb sbb sti imul mov (bad) sbb jno and in add out jp (bad) (bad) (bad) adc or and or (bad) icebp fwait add fstps in cmp repz pushq std (bad) jg rex.RX rolb addr32 lret data16 mov shlb mov cmp jnp xorl rcrl insl xor in cltd pop jrcxz mov or outsb and (bad) (bad) rex.WB sbb xchg jmp xor (bad) adc data16 rolb callq in and shrb movslq (bad) pop lret (bad) (bad) movslq or rex.RXB rex.W fs (bad) pop and pop sbb cmpsl sub in pop loopne popfq sbb loopne xor rex.RX rex.WRXB xor pop insl movabs mov (bad) insb sarl sub (bad) in rcrb add enterq and pop pop cmc or outsb lods sbb pop (bad) mov or (bad) rex.WRXB rex.RB cltd or xchg cs pop xchg mov or leaveq rcrb (bad) (bad) mov mov sbb jnp loop sub (bad) callq xchg es add popfq xchg adc (bad) adc fcompl test rcrb mov mov sbbl callq sahf (bad) jns or in movsl cmovno movsl (bad) and rex.RX pop rex.WR mov pop cmpsl sbb pop rex.RX shll subl (bad) xchg popq rcl rex.RX hlt (bad) movslq mov pop in ds rex.WRX jb (bad) sub add mov push sbb fdivrs (bad) movabs (bad) movabs mov mov cmp adc (bad) xor outsb cmpsb sbb pushfq ja pushq in roll (bad) je in mov addl rex.WRB (bad) je or push sti fmuls jge andl jae jne pop mov (bad) rcrl rex.WX stos lock rex.R sub adc cwtl mov lea in (bad) jns je rex.X fimul jmpq xchg outsl push in (bad) rclb xlat add adc test push fmull lret add pop insb movsl adc rorl sahf xlat (bad) lock mov data16 (bad) (bad) (bad) or (bad) rex.XB imul callq mov pop stos pop jne xor retq adc sbb (bad) icebp fcomip xor and rex.XB jle es (bad) shll test pop jae insb sahf movabs xchg ds ror rex.RXB cltd (bad) pop (bad) mov sbb (bad) repnz sub sub (bad) pop add out mov mov loope and rex.X (bad) mov fcoms imul sahf addr32 data16 lods pop mov sbb movabs idiv (bad) lock gs cmp (bad) (bad) sbb add notb retq (bad) rex.WRX pop incb icebp and mov mov rex.WX cmc pushq js add sbb push es pushq insb (bad) or sahf (bad) gs callq cmp repnz mov movslq cmpsb pop (bad) add or jbe (bad) hlt cs (bad) sbb lock xor sbb (bad) mov cmp (bad) lods callq cmp xor or mov and cmpsl imul out sub adc xchg adc int in rcrl xchg jb (bad) add jb test sub in loop (bad) and sub xchg xchg (bad) and (bad) (bad) outsb jae pushfq xor rex.WRB rex.RB (bad) add movabs push sahf xor (bad) add stos jle fidivr (bad) (bad) xchg stos sbb idivl repnz test push xor and rex.WRXB pop repz push cmp andl lock sub jp or cmpsb xor scas pop xor jmpq pop pop popfq pop sbb xchg out in mov jno pop lods stos (bad) xchg jbe mov es and cmp lods in pop gs xchg (bad) lahf xchg jno xchg jb divb sbbb loope cmp lock jle and addr32 loop rex.WB push or fs iret pushq and leaveq (bad) (bad) fldt (bad) pop movabs cmp and adc or push xlat rorl imul jae push shll xlat sbb sbb cmpsl rex.X and and fadds xchg (bad) iret xchg clc andb jmpq push and pop (bad) push rex lods (bad) rex.R sbb out sub mov loop idivl jae test repnz outsl rex.R lea outsb (bad) pop lahf rex.WXB popfq mov mov xor or jrcxz (bad) sti enterq xor push lea sbb loopne (bad) xchg fstl ja out jrcxz adc mov sub pop out sub adc clc rex.WXB rdmsr mov lahf in (bad) fs out sti test scas in pop push mov (bad) pop jl xchg add (bad) xor jbe rcll xor (bad) xor movsl in xor rex.RXB fcmovu push push xchg (bad) fwait mov mov mov movabs push test movabs (bad) pop sbb push rorl xor out movsb fdivrs (bad) push frstor pop test (bad) push mov mov in jns (bad) jp lret and test pushq cmpsl data16 (bad) rex.RB ds fs fs lahf and jmpw mov xor (bad) jb cs sbb jns adc data16 cmp xor (bad) out (bad) mov jmp callq (bad) xchg out xor mov push xorl mov mov movabs jae (bad) mov (bad) out add xor test jae pop mov (bad) mov out jbe mov jb (bad) rex.WR fs cmp pop scas (bad) stc movabs or iret fadd (bad) rcrl jns rclb push jle mov rex.RB adc int3 push mov pop rorb rex.RXB fcmovb pushq rex.WXB add fiadd mov add loop (bad) mov movsb ds push out (bad) mov test popfq xchg xchg movsl (bad) (bad) in sbbb in lahf int outsl data16 movslq rex.B pop pop cltd sbb (bad) cmp movabs cmp sbb xchg jb or or (bad) data16 (bad) sub mov jg sbb pop jne out rex.WRX ds hlt movabs repnz (bad) stos or ja mov (bad) movsl xor pop ror je sub jrcxz sahf push or sbb loopne add loope sbb imul xchg iret mov (bad) mov cmp mov jbe (bad) mov mov xor (bad) mov mov sbb sub sub (bad) cmpsb sti int3 div in movabs sub cmp ja in (bad) jno sbb fbld mov mov rex.WRXB xor adc pop or lods xchg je shrb jmp (bad) xor adc pushq (bad) (bad) mov cmpsl int3 (bad) mov cmpsb jbe rex.WX callq jb jp or rex.WXB xchg add std and rex.WXB pushq notl fild (bad) push outsb retq xchg shll out fwait or xor mov sbb mov xlat sub mov sbb rcr out sub mov mov mov (bad) mov data16 sbb mov mov jp movabs and sub add jb movslq scas outsb cmp sub pop (bad) ds pop sbb movsl and rex.W data16 pop cmp jbe lret int cmc mov retq pop (bad) mov movslq jmp stos hlt mov add xchg shll test mov rex.RB stc mov pushq outsl nop sub jnp rex.X mov mov cmc scas xor mov push hlt movabs push out (bad) jge (bad) test adc pop mov sbb andb or (bad) rex.WRXB movabs rex.WR insl (bad) mov test pop pop jo hlt cmpsb movabs add loope mov loop popfq pushfq rclb fsubrs mov fsubrl (bad) mov gs rex (bad) push rex.WB (bad) pop fs cmp in sub mov or clc cmp or pop (bad) (bad) jl cmp cltd rol test fsubp test sub (bad) movsb movabs fs popfq pop sarl and mov cmc (bad) push (bad) in ss (bad) (bad) jb movsb mov xchg int3 rex.X movabs test (bad) out (bad) out (bad) fnstsw movabs (bad) lret push jl in fsubl adc rex.X jno cwtl fs jb cmpsb (bad) rex.WXB (bad) lret loope jns rex.WRB sub lods sub (bad) pop add (bad) rex.WRB mov sbb rex.RX xchg push xor loope (bad) movabs fs (bad) and jnp adc int3 mov out (bad) (bad) adc jb (bad) sub or movslq mov addl pop add stc xchg mov (bad) rex.RX je (bad) repnz jne mov (bad) and pop or data16 add lret sarl and add outsl adc pop lea std (bad) ljmp movabs (bad) rex.WXB insb cmpsl pop sbb push xchg out xchg in ror and jns mov jb in (bad) sbb mov ds (bad) movsl (bad) fistpll sub (bad) fcomps callq xchg push add fwait mov xor rcrb out xor lret (bad) push xchg cmpsb imul (bad) iret pop and pop sub insl rex.RX (bad) rex.R std push rol push outsl fs xchg fnop adc (bad) loopne mov pop movslq cmp xchg cs movabs popfq (bad) mov pop push mov xor sub and add leaveq (bad) and data16 add je (bad) jns pop imul (bad) loope rex.B pushq (bad) cmp xchg mov (bad) sti iret jbe (bad) (bad) jle loop mov data16 movb (bad) xor add pop test mov jle (bad) xchg rolb (bad) mov jrcxz adc data16 sbb test loopne xchg mov data16 in stos adc pop out add cs stos (bad) push pop sti mull out xchg sbb rex.RX or cmp adc (bad) testb lock iret retq jbe xlat (bad) popfq xchg jg jns sub jle mov push add movsl lods or sub cmp test sbb sti pushq xchg imul mov pop pop xchg fwait mov mov lods punpckhwd and mov add pop jne mov (bad) mov es cmpsl sub push enterq jg addr32 (bad) mov movslq movabs mov shlb sub adc and sub and stos (bad) sub icebp jbe imul loop and adc (bad) fistpll pop leaveq sbb and fisub push fstpl cmpl cmpsl retq (bad) mov (bad) stos push xchg xchg xchg pop push pop sbb test cli icebp (bad) scas (bad) mov cmp (bad) mov loopel (bad) (bad) (bad) rex.WRB lock mov xchg rorb xchg pop fwait pop rex.WXB repz scas clc pop rex.WRXB movabs sub frstor (bad) xor adc jo (bad) outsb pop adc cmp (bad) cmp rcrl mov (bad) mov jnp outsb mov loop cld sti or jrcxz jne or rex lcall clc mov movabs adc movsl sub or adc gs repz jns in xor mov addl mov jb lods jne push (bad) in lret or div in lea rex.WRX (bad) insl hlt adc gs bnd push (bad) (bad) retq mov rex.WX subb jne mov cmc (bad) xor data16 mov adc sub adc fcmovnb imul (bad) scas mov out fcoml sbbl xchg adc (bad) out (bad) sbb (bad) mov movslq sarl xchg rex.RX xchg rex (bad) (bad) mov rex.X xchg retq insl shr jb rex.X mov pushq lods mov rex.R clc jle movabs sbb loopne add or push callq (bad) stos cli and movabs sbb jb cmp rex.X pop push (bad) lret mov addr32 rex.WRB xchg lods je xchg movabs push jmpq add mov jo rex.WR nop adc test or callq mov rex.W fs mov fisubl rex.W adc (bad) pop movabs lea out (bad) fwait sbb jb adc test hlt pop movslq adc (bad) in shll jb and outsb fs pop leaveq cmpsl cltd gs es callq jbe cli rex.WB gs nop xchg rex lock mov sarl add cmp sti idivb (bad) xor pop es retq fnclex xor rex.RX mov xchg (bad) mov mov outsb movabs pop add push sbb (bad) rex.WR pop mov (bad) push (bad) pop adc add movsl pop add addr32 mov add cmp jnp (bad) rex.WRXB fnsave rex.WRX sub add rex.XB (bad) xchg insb (bad) (bad) lods test or scas fisubr sub insb cmp sbb jle cwtl sbb movabs pop (bad) movsl lods subl outsb ja stos movsb rex.WRB enterq rex.WX andl loope addl rex.RXB repnz rex.RX jrcxz outsb test retq (bad) pop notb xor gs jp mov add (bad) fisttp add shll rclb cmpsb test pop (bad) (bad) test pop addr32 mov xor xor sbb lock mov movabs rex.B jb in pop retq (bad) insl pushq rex.WXB callq jg test or sbb bnd movsb sahf or (bad) xchg adc mov xchg out rex.RX test andl rex.WRXB jrcxz (bad) jp adc (bad) add sbb jns push (bad) out jl movabs rclb xor mov rex.WX callq movslq lahf mov xor callq hlt rex.WRXB sbb rex.R sub push (bad) mov mov xor in rex.WRX pop int3 mov nop cmpsb vfmaddsub231ps movabs mov lods pop sub pushq (bad) xor insb sahf and fdivs test cmpl pop jp (bad) movabs or fstps cld jnp mov out pushfq pop mov xlat fimul rex.WRX (bad) rcl insl push retq andl xchg fldl test (bad) fs mov in not (bad) adc rex.R repnz jae jo outsl xor mov pop mov pop adc or cwtl (bad) std movslq pop mov (bad) lret lret nop or outsb rolb scas movb (bad) (bad) or loopne (bad) mov push xor add mov rex.XB rex lock je jae jle roll rex.XB sbb fs rex.WRB cmpl sub rex.WXB mov mov (bad) mov scas out mov (bad) mov (bad) mov sbb andb and jle enterq cmp jg or rex.W (bad) movsl (bad) jnp (bad) rex.XB pop imul cltd xchg std mov jo popfq pop out (bad) add mov (bad) insl xor rex.WB sub push lea clc movabs mov and je repnz (bad) jmpq jo xchg sub sub jb lock js in je pop pushq mov xchg (bad) xchg adc (bad) jmp pop rex.RX rex.WXB leaveq rex.WR test pop add cmpsb ss jg push lods jg cmpsb mov add rex.WRX sbb or mov rex.RX gs stos insb imul pop xor xorl rex.RB cmp jle (bad) fs adc mov loop iret rex.RB jmpq fisubrl imulb cmpsl test pop sbb push (bad) data16 mov rcrl mov sbb or cmc repnz pop adc (bad) imul jmpw lods scas negl xor xor sti (bad) (bad) (bad) fnsave rex.WX (bad) mov lods mov (bad) xor xchg rex.WRXB push rex.R xor (bad) xchg stos mov rex.RX orb std rex.WB rex.X pushq iret sbb sbbb sar movsl jrcxz pop push rex.WB (bad) cmp xchg xor xchg js clc mov cltd add stc rex.WX (bad) pop mov stos xchg cltd xchg jg rex.WXB pop ror or fs pop ss (bad) je shrl lea lret (bad) mov mov pop mov xor pop pop cmp and sub adc mov gs pop pop xlat mov and ja rclb jbe add rex.WRXB or jae xchg (bad) mov out (bad) adc adc callq pop add out fwait mov pop (bad) cmpsl test rex.WB xlat fsubs mov push nop push fs xor and mov cmc or jo pop test ficom in stos rex.RX imul (bad) adc lahf jbe (bad) xchg (bad) out mov (bad) jbe push rex.WX add fcmovu add loop cmpsb subl (bad) stc rex.WRXB pop cs lods add jnp xlat (bad) retq mov out pop out (bad) xlat cmpsl push mov out xchg out add jmpq sbb jmpq cmp rex.WR (bad) or jo cmpsb rex.WRX xor lret scas add xor (bad) rex.WX (bad) mov xor jmpq jne ljmp mov imul scas mov sahf fnstsw cmpsb ja rex.B cwtl and lretw cmp out rex (bad) jb xor sarb adc adc add sub cld pop test xor sub rex.RXB pop push (bad) movslq xchg lea repz (bad) xchg mov mov movabs (bad) sbb rex.B sbb rcll (bad) in add fwait xchg rex.WRX push jle jae icebp pop fstps add iret (bad) or shlb iret xor rex roll xchg cwtl mov (bad) stos add add push cwtl xchg add movsb cmpsb push jle push ja popfq or (bad) rex.RX pop fimul xor xchg sbbb cli or push (bad) cld jnp mov ja mov jg hlt pushfq fldl jp pop mov xor pop rex.RXB outsl clc (bad) stos popfq outsb (bad) xor push and sbb movsb adc pop divb xchg mov cmp adcl rorl lods lods (bad) jge fwait xchg test rex.WB int3 xchg xchg rcll pop jmpq cs rex.WB fs cmp mov xchg jg mull pop pushq sbb mov out popfq jnp test xor lret movb test xchg adc (bad) fcoms and sbb pop cltd icebp jb (bad) outsb rclb pop push stc pushq push rex.B lret pop or xchg xchg loopne rex.WRX (bad) (bad) rex.WR fs or jp mov lret loope (bad) xchg (bad) movsb repnz mov or mov sbb in cmp push mov pop pop pop (bad) fcmovbe pop sbb (bad) xchg shl data16 icebp scas imul rex.RXB gs sbb sub xchg rex.WRB cmc ss pushq and jae and sub (bad) push rcrl clc (bad) rex.WX jo rolb (bad) add push (bad) outsl rex.B rex.B loop mov jno mov mov out (bad) movabs pop xchg jmpq iret (bad) adc (bad) jrcxz xchg xchg enterq js pop idivl add adc pop mov pop repnz addr32 mov pop pop (bad) push enterq stos mov orl rex.WXB fstps push movslq sub jl (bad) int loop push xor or popfq ds pop lods in sar jmpq xchg mov pop loop sub pop sbb (bad) xlat mov add pop lret mov js imul lret mov cli fs and adc mov push lods (bad) or flds rex.X (bad) cli xchg (bad) rclb mov movslq and (bad) pushfq mov rex.WRXB movabs mull cmc cmp jo jne outsl retq (bad) test rex.WRXB xchg rex.WX loop,pn (bad) out out test shlb pop stos cwtl fwait add (bad) mov cmpsb movsl ficom push xor sub (bad) movabs jmp (bad) rex.RB jbe test cwtl popfq or add test fnstsw sbb (bad) jbe xchg cmp (bad) scas pop sarb cmp pop pop (bad) iret (bad) cli mov fcmovbe rex rex.WRX rex.RB lock sub sub xchg (bad) sti in movslq (bad) (bad) (bad) pop and and je lea (bad) repz mov loop rolb loop pop in in mov jmpq loop sbb (bad) cmpsb rex.WRB add sahf cmp (bad) sub jle data16 pushq and push test rex.WRB out rex.B in iret or xor (bad) jb (bad) xchg stos xor xor rorb sub int icebp mov fsub sub (bad) mov roll (bad) fwait loop push mov loopne pop movsl rex.W shlb xchg out pushq xor cmp adc jae add scas out pop and rex.WX rex.RX rex.RB pop repnz rex.X rex.XB mov test or pop jle mov test jp pushq movabs (bad) jno add sbb jg fistl scas add jns and divb xchg pop (bad) and sbb mov mov pop mov outsl ds pop mov rex.XB mov (bad) jbe fcomps sbb mov jne pop pop sti data16 mov fs addr32 nop test (bad) jnp clc out jb (bad) rex.RB lock int decl mov rex.RX add rex push pushfq pop rex.W adc jae jrcxz jbe or rex.WB mov (bad) cwtl fmull or mov jmp or rex.X mov lods pop movabs xchg push jne mov incb (bad) cli mov addr32 rex.X fs rcrl push nop rolb pop jl int3 rex.RXB (bad) sbb movslq cmp and ds mov or retq pop jns push adc rex.WB test sbb or cmp test rex.B rex.R stc lods (bad) sbb mov lret jne loope or (bad) lahf xorb (bad) or mov xchg push pop push jns loop (bad) repz fsubrs insl pop jb lods push fwait xor mov rex.WB (bad) mov jae or rex.WR and outsb xor (bad) (bad) (bad) movabs mov mov mov (bad) (bad) xchg movsb (bad) sub mov fistp fnstenv rex.WB fs lea fistp cmp xchg test push mov xlat xchg xor out std pushq sahf movsb (bad) (bad) (bad) push sti xchg or cmpsb pushq lods ds (bad) cmp adc add jo int3 cmpsl cld out jle loop adc in adc xlat and xchg (bad) and sub (bad) rex.WB rorl jp scas sub mov cltd std nop test (bad) (bad) adc int cwtl loop cmpsb movabs repnz xlat lret add rex.WRX xor int pop ficomp mov or cmpsb iret scas xchg pop movabs cli adc cwtl mov mov pop inc jbe (bad) pushq (bad) mov movabs nop loop or rex.WR lea xor jno pop test (bad) sahf adc gs loope add rolb icebp and add adc jb out pop cmp jmp (bad) (bad) or (bad) stos popfq (bad) cmc cmp (bad) rex.WB jge (bad) and sti xor out movsb jg cmp push xlat sbb xchg xchg push or lea pop imul pop cmpb (bad) jmp icebp pop mov in (bad) and fs loopne push xor insl retq lahf stos mov pop sbb fistl mov adc xor fs jp jno jmpq pop (bad) (bad) sbb (bad) test sub xchg and cmp rex.WRXB data16 (bad) (bad) fs repz and (bad) imul mov (bad) shrb jl (bad) pop scas or out je mov xchg pop jnp in add (bad) mov enterq fs rex.RB cltd rcrb gs retq mov and or mul movsb pop (bad) pop mov adc (bad) or xor movabs icebp movabs and mov fcoms sbb cwtl mov xchg out or rex.W int3 adc negb fidivr sbb retq fucomp fdivs rcl sub loop xor lods out in sti je std test jle push sbb push pop mov sbb stos cmp (bad) test cmp lret xchg mov sub and pop rex.WRXB cmp addr32 sbb or or jns int scas mov fisubrl data16 cwtl in jns imul xor jnp cmp jb pushq not callq sub jno xchg or fsubrl imul xor lods or rex.WRXB pop xchg xchg fnop sub fs push fild in jl fidivl jp cld (bad) (bad) jle adc (bad) mov pop (bad) cmp jge push or outsb pushq rex.RXB mov xchg (bad) test mov add test mov mov test jbe mov movabs mov retq lahf (bad) jne rex.RX fnstsw (bad) movslq std and pop fisttpll mov jnp hlt data16 sub rex.WRB data16 hlt (bad) push pop retq jp and repnz (bad) lea add pop (bad) jae lahf gs (bad) xlat (bad) xchg cmp sti sub rolb mov scas sub push pop test pop mov rclb adc mov sub rex mov jge in (bad) (bad) (bad) pop jne callq and (bad) rex.WXB cmp pop adc or sbb movb callq stc retq push mov mov (bad) div (bad) jno callq insb out and cmp rex.WRX mov js loop cli sbb fsts (bad) imul rex.R xor sahf lahf pop pop not sub mov loope movsl and pop int cmp cmpsb push mov (bad) leaveq (bad) (bad) test and movabs popfq scas mov (bad) rex.RX mov (bad) (bad) rex.WX sti pop xor sbb sbb (bad) mov movslq rex.RB ds cmp loope add jmpq loopne mov jg push repz cmp movabs stos mov xor loope jns pop xor addr32 sbb sti pop outsb add add or mov pop subl push rorb pop mov fcmove mov cmp (bad) cmc (bad) movabs (bad) sub (bad) push pop and jle jb mov add (bad) retq cmpsl or mov mov out andb (bad) cmpsb (bad) jp and (bad) ficom sahf sahf callq and sahf vmovdqu xchg imul int scas in stc xor jno mov (bad) pop xchg mov add callq (bad) add adc in (bad) xchg retq in movabs lret rex.RB lretw sub jae out xor jbe rex.X pop jno insl gs rex or mov pushq cltd out scas (bad) pop or (bad) loop pop repz imul data16 rex.X rex.RB rex.WX add js jo sub and pop rex.B adc pop in in sbb movabs movabs movsb xchg xchg pop test pop fcoml movslq pop or rclb setb movabs mov and js xlat pop mov test pop pop push rex.WRX movabs fsubl mov (bad) (bad) pop sub mov adc rex.X rex.RX fs mov cli pop stos xor ror rex.WR pop scas gs mov (bad) pop mov cltd nop push or pop (bad) sbb (bad) adc cli clc pop (bad) fs jno imul push jmp sbb push loope (bad) (bad) push (bad) popfq rcrb rex.RX jne (bad) movsl movslq pop xor or mov jmpq movslq pop sub rcll (bad) xchg rex.RXB rex.WXB pop jbe idivb cmp sub mov or popfq stos pushq sbb cmc or mov divb (bad) xchg movabs (bad) scas (bad) (bad) jbe out jrcxz ss (bad) loop in leavew sar fwait xchg (bad) mov pop (bad) mov data16 sub movabs or (bad) (bad) data16 out pop (bad) jne sub xor loope sbb and xchg sbb (bad) rex.WRB jge clc nop adc mov outsb jno out adc movsb stc outsb ss sbb addr32 push (bad) flds sub xlat pop push pop (bad) push int cmc jo fbld adc lock push jg xor mov mov (bad) adcb jo imul mov xchg (bad) lock (bad) (bad) shrl pushq ds fwait popfq xchg in pop mov cmpsb (bad) push (bad) outsb insl test pop (bad) imul mov pop addr32 movsl pop loopne in pop pushq mov pushfq push (bad) enterq push (bad) adc sbb repz xchg test mov rex.WXB pop movabs mull mov and rex.WRXB add in rex.RB mov fnstsw movabs (bad) mov jg int3 sti rex.WRXB lods mov insl in jne pop es (bad) cmpsb add mov (bad) icebp fisubr jg pushq pop mov or (bad) lods fwait outsb pop mov jo (bad) xchg movsb cmpsb loop mov div in out jrcxz ja (bad) or and push testb popfq (bad) add nop fsub (bad) adc (bad) xchg xor adc adc cmpsb xor (bad) rcll in (bad) mulb lea lahf (bad) adc subb (bad) and jl xor rex.WB jmpq cltd mov pop jg jp addl pop sub sub (bad) cwtl (bad) pop (bad) add pop adc add jne (bad) (bad) mov data16 push in pop add sbb xor rex.RB rex.X fs adc cmp xchg mov sti ja pop (bad) test pop test mov imul or mov sbb fwait movslq int3 sar out out frstor mov (bad) (bad) movb xchg rolb (bad) scas (bad) sti rep cld push mov mov gs sti mov mov push retq rex.RXB out outsb neg rex.WX iret in pushq cmp sbb mov loop pushq mov mov mov (bad) mov sbb pushq xlat int insl lret (bad) out std fwait mov ficom retq pop mov lock loopne add lret ja (bad) sub mov (bad) or rex.RB in test and xor cmpb std rex.W (bad) rex.WB movsl rex.WX fwait mov rex.WXB loop lret rex.R sub sbb push jbe mov callq pop gs test repz mov add xor insl xchg push movsb fistp icebp (bad) (bad) insb fmul mov inc mov rex.RX rex.RB fldenv sbb psadbw mov or xor xor movsb xchg xchg rcrb push shr jbe stos pop roll mul cs (bad) mov (bad) ficoml push pop cmp js test pop gs and rex icebp jp loopne fnop mov outsb pushw int3 (bad) stc lret movabs (bad) xor out lods loope mov cmp and (bad) mov xchg cmp subl jae (bad) andb sbb lahf callq (bad) movb insl mov (bad) jno add movslq mov (bad) js mov jp rex.WB (bad) add mov pop adc (bad) hlt adc out push rcrl add rex.WB fsubrl sbb mov popfq stc jle and fsubrl insb mov outsb jbe scas ss cld scas sahf pop rex.WX (bad) sub jbe (bad) xor cmp mov (bad) fwait cmp xor cmp xor pop and mov jbe (bad) xchg cmpsb (bad) or out xchg nop adc adc fistpl xchg push adc test data16 sub (bad) addr32 xchg movslq scas movsb stc mov rex.WR pop mov sub sti mov rex.WB addr32 fistl scas (bad) jge pop mov test cwtl add adc rcrb rex.WRX (bad) insl fcmovnb enterq cmp mov add iretw (bad) scas in rex.WRX rex.W fs hlt (bad) mov iret mov (bad) pop sbb lret lahf (bad) pushq shlb movsb (bad) fstl cmp in (bad) sub fstpl (bad) (bad) or mov jne jmp xor jrcxz adc rex.WRB (bad) (bad) xchg cmp adc icebp out mov (bad) addr32 push rex.XB rex enterq mov sub sub pushq xchg stc adc out adc pop rex.RXB xlat sub pop jbe or callq pop push and jl jg retq mov movabs mov rex.WX rex (bad) or adc fdivs je scas outsb cmp popfq std mov or (bad) pop and (bad) (bad) mov xlat and mov rex.X sbb rex.X xlat idivl xor sahf push mov pop shrl (bad) sarb pop cmpsb mov mov (bad) test xchg sub ror mov rex.WX jns add xor loop xor pop imul mov rex.RX mov fnop retq push pop xor or sub movabs push (bad) mov pop mov and xlat int add nop push test rex.WXB out (bad) cmp xor or retq mov (bad) sbb addl (bad) sti mov sub xchg leaveq cmpsb jae cmpsb out xor jle (bad) movabs xchg shlb jnp xchg jne pop frndint rex.WB ss idivb jmpq sub push outsl jae fs stc rex.WXB pop cltd or lcall sahf pop sbb jmpq lahf xchg rex.RXB jns (bad) xchg fldt xchg sbbl or or iret (bad) movslq adc pop int xchg cmc jrcxz loop (bad) movabs pop leaveq rex.X rex.WB lods push mov stos rol pop enterq xchg rex.RXB xchg jo sbb (bad) lods xor (bad) mov mov jo gs out ja rex.WR wrmsr add jo pushfq mov cmp test rdtsc mov in xor retq loope in rorl test mov retq xchg shrl mov jns test xchg cld xor imul jo cmp sub (bad) (bad) (bad) out push xor and fdivl ds (bad) nop pop push sub (bad) pop negb rex.RX imul rex.RX xchg adc in rex.W retq stos xchg jl out fisubr sub insl pop cmpsb in xchg push test push fistpl push pop add pop jo and pop rex.WB push (bad) sub mov repz (bad) cwtl mov pop xchg xchg rex addr32 pop lret (bad) jbe imulb insb callq subl sbb test xor scas jo sbb adc hlt jbe sub fistpl jb hlt jne outsb xor adc sahf out push test (bad) cmpsb (bad) xchg out adc rex.R and sbb cmp (bad) test cmpsl outsb sub retq (bad) adc (bad) jle xlat adcl fmull mov add cmpsl (bad) mov jmpq add jno cmpsl cmp enterq (bad) je lods ss sub add push pop and lods mov je rex.WXB rex.X mul mov mov xchg (bad) mov negb lods (bad) in sbb hlt jrcxz (bad) es shll rex.WR jge rorb ficom outsb testl sub fisubr cmpsl sahf out scas push mov je adc test or iret sahf addl add in rex.W adc (bad) pop sub xor (bad) rcr mov (bad) data16 mov stc pop xchg push sub lock or pop mov push xchg xchg add rex.X ds rorl iret push xor rex.WX xlat (bad) pop mov out (bad) (bad) or sbb or jge xchg lret enterq out jle (bad) int3 (bad) (bad) (bad) mov xchg mov xchg jb scas mov (bad) xor mov int3 (bad) icebp push imul mov adc fs cmp retq push jno jno jb test sbb add (bad) (bad) (bad) je pop ss mov xchg scas cs cmc (bad) movabs or (bad) xor mov loope fs (bad) sbb mov add mov mov andl jle jnp cmpsb rex.WRB or negl lret rol sahf sahf (bad) (bad) (bad) repnz mov movabs sub push outsb mov pushq adc clc sbb rex.X push pop int3 fistp out lock lretw fcoml mov scas and mov or adc (bad) mov fistpll jno roll cmp (bad) rolq xchg xor rcrl sub fs rex.WR adc pushq data16 (bad) rex.RXB rex.B rex.WXB and rex.RXB rex.RX pop fs mov rex.WB repnz mov and movslq fwait sub cmp sbb insl push (bad) push push rex.WX (bad) (bad) jbe fisttpll cmpsl xor je sbb icebp in callq mov (bad) (bad) pop xchg (bad) jno pop clc cmp loope xchg rex.WRXB rex.RX cmpsb mov pop sub xchg movsb pop in push test lretq rex.R rex.WB rex.WRB cmp retq int push mov jge push (bad) pop mov in xchg push clc test movabs nop xor xorb xor in out xlat (bad) rex.WR jl imul adc pop out stos jrcxz mov test lods (bad) lahf and push pop out test push rex.WB fdivrp pushfq cmpsl clc in es cwtl pop cmp lahf movsl cmpsb adc rol stc adc pop (bad) movabs pushfq xchg movabs mov add notb out xor or (bad) mov ja shrb or (bad) paddb or xchg orl mov fs adc (bad) mov lods out pcmpeqw rex.WR shlb rex.RB lock xlat rex.WXB xor (bad) movabs (bad) in js test sbb fcomp movb fist jg pop jnp (bad) mov adc loope push or (bad) test rex.WXB divl mov jns sbb pop mov (bad) push pop (bad) lret sbb test mov xor rex.XB rex.B and fistpl nop addb scas insb cmpsl xchg sub in mov (bad) pop sbb (bad) (bad) movsl pop in js mov xchg cmp sbb push push (bad) sub jbe sar js gs cld jle mov mov sbb xchg sbb fstpl add rex.RXB cmp movabs stos ficoml int3 callq add cmp xchg sub fistpll loopne loop stos fistpl scas add insl push movabs rex.WXB (bad) pop movabs jo (bad) lods mov adc add stos repnz (bad) sbb xchg adc lret sub (bad) pop rex sbb push jae loope je pop sub (bad) adc add (bad) scas (bad) and outsl mov and mov imul je add movabs (bad) outsl mov pushq xor (bad) cs (bad) fwait negb jle xchg fbstp sub fnstsw cwtl lods jb cmp movabs test stc insl movabs lret (bad) in jg and mov sahf xchg and mov mov movabs adc fs sub add cs cmpsb mov jbe pushfq xchg repnz loope and (bad) (bad) cli sub movabs lods fildll sbb nop xorl pushfq mov adc (bad) sub (bad) fldl (bad) lahf fsubs icebp xor (bad) movabs je rex.X movslq leaveq (bad) (bad) cmpl cmp (bad) ja mov pop stc pop add repnz xlat outsb pop shlb imul pop pop rex.B lock rex.WX ss rex.WRX rex.WRXB mov (bad) pop (bad) and rex.WRXB int3 data16 movabs outsb (bad) int mov jb xor (bad) (bad) rorb movsl and (bad) (bad) popfq sbb (bad) cmpsb cmp jmp rex.R xchg loope (bad) cmpsw pop movsl mov pop jbe add (bad) lods (bad) data16 insb pop sbb fisttp ss sarb pop (bad) mov fnstcw rex.WR (bad) and stc sub jb gs pop pop cltd nop adc (bad) movsb pop (bad) xchg es jbe sub sub cli mov or rex.WRX (bad) (bad) jg xor mov movabs mov fs icebp and pop adc mov lret pop jb gs pop sbb xchg (bad) (bad) xor pop and rorl repz jns sbb mov (bad) movabs sub outsl mov xchg stos push add pop sbb jle repnz mull jns js rex.WX or imul mov cli loop fisub loopne cltd xchg (bad) xor mov std mov push push not (bad) jmp gs out rorb or (bad) (bad) fwait sbb jbe add in mov sub xchg or rex.WXB fs mov sub sbb je rex.RX cmp cmp or (bad) xor (bad) and fstpl sub pop test or push jne jg mov and mov pop in stos pop push mov xor cmp or mov cltd mov clc sub popfq mov idivl insb push adc pop imul push in adcb rex.W pop push push out mov pop out (bad) xlat loope jmpq outsl mov mov loop pop pop mov cltd jmpq roll add cs xchg and adc cmp rex.WRXB rex.WRB mov (bad) push add (bad) push movabs repnz pop hlt rex.XB loop insb rex.RXB xor sbbl xor loop movabs (bad) rex.WR data16 mov movsb fdivrs mov xor mov fisubl lods xor cli pushfq orb (bad) hlt sbb rex.X pop pushq movabs or adc outsb fldcw add (bad) callq stc mov lods fstpt outsb sbb mov jb sub (bad) xlat sbb stos jle jo mov mov jmp mov iret test test icebp cmp retq (bad) rcl insb sub outsl popq xlat jb loop lods in mov add rex.XB jns mov mov or rex.XB (bad) mov adc pushq jrcxz cmp jp rex.R stos (bad) in (bad) jo (bad) (bad) xchg or cmp add or stos (bad) adc add xor sbb rex.RB (bad) sub es rex.WB repz lods movabs rex.RXB imul jle lahf mov jns lods sbbl rclb (bad) addl sbb push pop int3 (bad) adc rex.WR rex.WXB (bad) sub (bad) xlat (bad) add mov retq out jns or (bad) movabs movsl and jbe mov rcrl jo fbstp outsl (bad) movabs cld mov mov loopne sbb retq out rex.WXB (bad) icebp (bad) xor stos test jb or (bad) outsl jle mov lods psrad xor rex.WRXB xchg push sub rex.XB leaveq (bad) rex.R clc sub rolb jne xchg rex frstor or xor mov fs stc std pop cmpsl in or xor (bad) jbe fldcw mov xchg pop gs (bad) rex.WRB sub movabs je sub sbb stos (bad) in test jp (bad) pop xor movsb sbb movabs pop (bad) ds pushq mov pop sub xor cmp pop xor (bad) xor fimull or (bad) rex.RX jae cmp and (bad) sub (bad) fistp incl mov jbe jle mov cmp jl fs xchg push xchg (bad) mov rex.W scas repnz or loopne cltd popfq rex.X sarl (bad) pop addr32 push test outsl mov (bad) clc jbe out rex.XB out (bad) and mov rex.W xor hlt mov and xchg rex.WRX rex.X cmp pop loope mov mov xchg decl (bad) pop pop rex.R (bad) js mov mov (bad) cld lods (bad) decb stos pop sub lret (bad) (bad) (bad) xor outsl push lods fidivr fs test sub jo movsw pushfq push (bad) (bad) int jrcxz movslq adc pop pushq iret rex.RB rex.X fs pop sub jle pop fldl (bad) pop or (bad) popfq cs mov (bad) mov or hlt xor rex.R cmp (bad) sahf (bad) je rex rex.WRB jb cmpsl xchg pushq movsb mov mov (bad) (bad) (bad) xchg std rex.WRX (bad) sub jg pop mov stos in mov jle out (bad) (bad) sbb in rex.RB stos (bad) pop rex.X repz xor jmpq lods outsl callq cwtl sbb xchg rex.WX nop rex.WRXB mov jp add (bad) mov cs rol (bad) retq mov jb xor jbe mov mov fisub (bad) roll adc mov movb rex.R cli (bad) push jb std sbb loope pop pop (bad) in add rex.WRX (bad) sub pop (bad) out cltd in mov lret xchg adc data16 pop cltd (bad) nop xchg xchg rex.XB jbe mov (bad) outsl jo mov nopl callq pushfq hlt repz cmc div mov mov push icebp test jmpq (bad) rex.RX mov pop adc int3 pop add outsb xchg mov movsl (bad) mov pop pop rex.W (bad) rex.WRX pop mov jne mov pop rex.W rex lock pop cwtl mov add sub outsb icebp (bad) sbb cmp add outsb cmp mov jno (bad) iret (bad) xor xor (bad) in xchg test and data16 jl loope push cmp jle int jle lret test rex.WX movabs xchg cmpsl xorl movabs add jle movabs jp loopne jg sbb (bad) (bad) mov (bad) or adc (bad) xor pushq mov pushfq sbb gs cmp (bad) mov adcl movabs xchg out addb jnp jrcxz gs pop sbb fs nop xchg sub jl add mov mov addr32 (bad) mov (bad) out sahf movabs (bad) es (bad) scas lret fiaddl ja mov xorb popfq cmp retq jno pop mov movabs sbb mov mov (bad) rex.WRB add jrcxz movsl and mov repz sbb or pop and mov fmulp (bad) rex.WX pop stos and sbb add outsl fbstp cmpsb sahf jae push mov fimul jge movabs sbb mov (bad) push (bad) mov rex.WXB add stos and sbb (bad) mov movsb mov out or cwtl jle mov outsb mov outsb mov stos mov add movabs adc pop leaveq or mov (bad) jp pop mov jl mov repz fs mov mov push cmp out (bad) lahf mov xchg jae frstor pop xor (bad) fistp cmpsl or jb mov fldenv imull rex.X (bad) (bad) and movabs or adc rex mov (bad) rex.R rex.WR xchg movabs pop or insb sahf pop mov cli sub sbb jge out incb movabs cli xchg mov push (bad) fstps (bad) or and insl xchg lock jo (bad) fdivl or xor xchg xlat (bad) lret (bad) pop in fs clc stc loope or test cmpsb jge push mov rcrb xor adc add stos repnz test sarl fs lret (bad) and and sahf pop rorl cld (bad) outsb (bad) or cli pushfq (bad) pushq stos callq sbbb cltd (bad) cltd and mov sub pop jo mov push cmpsb rex.RXB std jne add add mov cmpxchg pop out rex.RB sub loope pop or insb sub mov out outsb push rex.WRX lretw or mov push mov xor mulb sub cmp leaveq jbe jbe in in pushq adc adc std (bad) stc add and or jge imul or xor addr32 pop sub cltd sbb outsb rex.WXB xor loope in leaveq xor fwait mov iret (bad) add xor jg (bad) mov pop (bad) sub xor xlat mov stc xchg (bad) add divb mov mov addl sbb pop out cmp xchg fwait jle,pt in scas mov je mov (bad) mov rex.RXB lock subb data16 jmp xor xchg (bad) cld mov (bad) fs in sub jae mov rex.RX sbb data16 mov js repnz (bad) (bad) (bad) push add rorl jns and (bad) sbb out xchg mov mov or jnp fidivr push jbe loopne sbb mov (bad) loopne movsb stos je movabs sub sbb ss or sbb (bad) nop ja mov lock xor cld fiadd or outsb rex.WX repz (bad) fsubl pushfq out retq pop cmp loop (bad) cwtl xchg in fcomps callq mov out rex xchg pop add ss cmp test or xchg fs mov sahf pop sbb jmp adc rex.WRX xor (bad) addb out and pop cmp push (bad) shrb rex.WRXB ds stos es icebp shlb cld rex.RB pop (bad) test xchg data16 pop cmc pop pop out ficompl jge (bad) pop cmp iret jbe (bad) cmpsb loop fld add xor pop popfq (bad) rcrl cmp rex.WX adc add rex.R fstp (bad) mov (bad) pop (bad) mov xor movsl and or mov cltd ds xor ficompl (bad) or (bad) (bad) scas (bad) (bad) fwait (bad) enterq mov add cmp sbb callq movslq and xor (bad) lods repnz stos (bad) or rex.WRB (bad) (bad) rex.WB rex.WX pop (bad) and divl pop pop and repz adc mov in (bad) fnsave xchg mov jo sub mov (bad) retq rex.WRXB rex.R and icebp or pop movsb rex.WX (bad) pushq xor lods callq rex.WX xchg jnp out (bad) (bad) repnz cmpl stos (bad) sub mov push mull jne add xchg and and jb (bad) repz pushfq (bad) jnp cld mov test xchg mov ss cmpsl insl lea (bad) sub xchg cmp out movabs mov xchg mov cld cli in int3 leaveq movabs int retq pop (bad) jne clc rex.B es jbe jbe xchg or (bad) jns cmpb mov loope (bad) (bad) adc (bad) int3 out movslq jne jbe je sti jl (bad) notl fstps (bad) cmp jg leaveq mov (bad) cld mov repnz rex.RB jrcxz pop jle (bad) pop movsb push rex.WXB (bad) rex.RB jge (bad) mov cmc loopne pop push xlat pushfq and cmp stc ss mov or clc popfq and adc jmpq movabs out xor fcmovne (bad) (bad) xor sub xchg pop pushfq jge nop fs jp and data16 movsb fwait pop sahf add sbb gs retq and and add movsb loope (bad) (bad) jbe mov loop movsl (bad) (bad) pop in jbe pop cmpsb out pop shrb callq rolb movslq pop sub movabs adc (bad) fisttp clc (bad) lods rcrl (bad) outsl sbb xchg (bad) rex.RXB add cmpl mov (bad) int scas jne pop (bad) rex.WXB int mov rex.RX fidivrl add fsubl callq pop push rex.WRXB add negl rex.WX lretq movsl pop xchg test xorb mov or sahf sub fstpl icebp push rex.W xor pop (bad) sub sub iret push pop (bad) loope sti fsts (bad) sbb sub pop (bad) push adc outsl ja jmp callq add xchg fldl fcomps cmp stc cltd js mov std mov (bad) fcompl mov lock pop fadds retq rex.B cmp xor lods jb (bad) mov push rex.WR jl jnp sahf pop rex.RX rex.W test push (bad) movabs cmp or movslq xchg xlat pop lret push fcom je pop lods mov clc sub ds cmpxchg sub scas pushfq insl popfq sbb lcall jo pop xchg cwtl pop cld xor icebp pop rex.RX mov fwait pop lock std fdivrl movabs lods (bad) (bad) pop mov jge stos or xor pop push push subb add jb cmp mul sbb jne fwait xchg rol vcomisd es xorl rex.WB loopne mov pop cmpsb pushq rorl jg sub mov pop pop push (bad) lock sbb rex.XB callq pop (bad) mov stos push xchg pop mov idivb pop xlat xor sub inc (bad) pop push fidivrl cmp adc mov lods out rex.W rex.WRX xor in lods repnz push pop pop (bad) leaveq xchg mov pop cmpsb fs push push nop adc pop add and stos pop movabs or sbb cli sar lahf add sbb xchg (bad) jo mov test retq imul jmpq icebp rex.WX (bad) jns xchg cmp rex.X jae (bad) xchg (bad) fisub ficomp mov rex.RXB and loope add negl hlt test cmp (bad) (bad) rcll cmpb jmp (bad) vpextrw shlb adc cmp cli out add push pop adc pop movsl test sarb (bad) fimul jp adc and movsl jnp add callq (bad) movsb and lret sti stc xchg hlt (bad) (bad) (bad) sti mov jae gs and xchg push sti rex.RX (bad) push rex.WR nop imul (bad) or (bad) jrcxz xor mov and test jno addr32 test stos rex.XB jrcxz rcrb sarl callq (bad) jnp (bad) scas lret rex.WRX (bad) rex.WRB sbb cmpsl pop in jae cmpsb xor push insb rex.WR rex.WRX push (bad) fdivrs (bad) (bad) xlat stos push jmpq repz push mov add std in fisubr (bad) add repnz cmp adc (bad) jne insb repz pop adc (bad) out adc scas lock and xchg movsb sarb or (bad) cmpsb lods imul (bad) subl push (bad) ds push test lods test stos (bad) jp in push push mov or cmpsl jg (bad) out cld xor (bad) pop (bad) mov movabs rex.WR xchg in mov cmp fs cmpsb fldt pushfq (bad) or and imul push mov sbb cmp sub outsl adc cwtl lahf mov push out test iret pop rorb rex.RB (bad) jrcxz sti xor add rex.RXB lret push (bad) (bad) adc and or fnop enterq mov (bad) jrcxz,pn (bad) retq lods movabs mov or jrcxz or mov xchg (bad) add pop xchg mov lret (bad) or mov or jg pop mov pushfq mov movabs movabs fs outsb xchg jnp sub stos movabs loopne (bad) mov xchg sahf xor xlat shl (bad) cmp rex.WXB xlat hlt incl (bad) ds lods movabs and cwtl (bad) xchg push rex.WRXB (bad) or fs xor mov pop jrcxz xchg out sbb lock insb sahf (bad) add xchg fwait and lods sub sub fwait and mov fstp xor lock jne pop movabs rep movsl sahf and loop pop adc lock cwtl popfq pop and out (bad) sahf andl adc (bad) fstpl movabs jg (bad) and cmp jo sub jo retq rex.WR xor loope or (bad) mov sbb idivb xchg lahf lods leaveq pop movsb mulb jg push addr32 jge (bad) cli (bad) loop pop jns xlat mov (bad) movabs push sub push icebp lahf retq cmpsb xor stos rex.WRXB enterq mov ds sbb xchg sbb add cld and (bad) or (bad) outsb (bad) in stos cld rex.WR lock lods mov loopne sbb callq scas pop or jo cmp lea mov icebp rol cmpl rex.WRXB xor mov sbb rex.X rex.XB rex.RB mov add clc xchg jle mov imul fsubl (bad) sahf pop push or adc rcll out pop pushq sub (bad) insb imul cwtl or pop cmp (bad) in cmpsl retq add mov addr32 add (bad) rolb addb lock mov push sub fs mov rex and iret add (bad) push callq (bad) (bad) sub test retq movabs jle (bad) orl (bad) loop adc outsb ss jne jo or xchg (bad) adc jbe nop add je mov jle lret retq fistpl fcmovnbe xchg mov (bad) and lahf and mov jle cmpsb mov push pop jne mov insb mov rex.RXB sbb push cli adc (bad) xchg out add (bad) stos mov popfq rex.WRB (bad) (bad) jp mov push icebp rcll insb loop xor rex.X jrcxz mov mov (bad) lods add out pop cwtl iret mov movabs out mov pop addb (bad) movsb jp xor out and movsl pop jmp (bad) jns,pn xchg divb rex.WRXB (bad) insb rex.B mov lret movabs leaveq add (bad) sbb lock xchg push lahf out push xlat (bad) (bad) rex.WB ds and (bad) in test sbb (bad) push ds adc addr32 jle lret movslq roll int mov mov rorb cmp cmp mov xor jnp or (bad) mov jmp scas stos test add cmp (bad) sub jns mov in loope retq loopne and scas movabs mov add push pushq pop insl icebp mov pop (bad) (bad) out cmp mov popfq mov sub movslq outsl xchg (bad) cmp mov outsb mov jnp cmp (bad) sub sbb (bad) jl lahf loop jns test pop add pop mov (bad) lret fsubp sti out (bad) sub out jl cmp lods mov (bad) jo push or pop pop rex.RXB sbb rex.WX fwait stc pop insl mov movsl fs movabs (bad) repz jg xchg sbbb mov in sahf rex.RXB cmp negb callq in in loope jb mov repnz jge retq movabs or or in pop lret rex.WR lea jle (bad) nop sub stos (bad) (bad) cs hlt ror push cwtl xchg and rex fimull sahf cmpsb rex.RX push and (bad) ds (bad) pushq sbb int3 mov rcrl fstl cs xchg mov (bad) mov jge loope mov add nop ja out rex.WRB lock retq cmp mov rex.WX gs mov push and mov xlat stos cltd sbb data16 outsb lods or sub rex.XB rex.RXB (bad) movabs jne (bad) enterq (bad) push movsb mov rex.XB mov rex.WRXB (bad) (bad) movsb sahf imul pushq movsb push test sub es (bad) movsb insb push pushq jae sbb and push sbb pushq cltd jp jg mov sub shlb (bad) xchg jo jno (bad) xchg xor popfq mov clc movabs push iret push mov xchg add callq jbe icebp rex.R sub mov mov imul xor mov outsl sbb movabs es adc (bad) hlt rex.WB (bad) outsb lods cmp in rorl in add lcall xor and mov pop mov rcl sbb adc add std sub pop (bad) lret (bad) add jnp loopne repnz shrl mov pop xchg xchg jge pop cli js (bad) push int3 and jbe push roll rex.RXB pop test adc pop xor (bad) int3 adc leaveq (bad) xchg cmpsb (bad) cmpsb (bad) pop jo and (bad) push fisttp mov xchg or movsl and test mov stos sub xchg rex.WB sbb int3 retq rex mov imul pop xlat pop cmpsb pop or movabs out fcoms scas xchg mov adc and pop jle (bad) cmp (bad) and sub (bad) leaveq insl (bad) jle jae mov adc rex.RB jmp std xchg or mov xorb mov fcomps add mov jns xchg jle xchg xchg jg (bad) std mov xchg cmp in and movsb enterq pop movabs mov jmpq in mov retq cmp mov outsb mov sti (bad) adc pushq (bad) enterq movsl rex.RX xor xchg xor stc std movslq mov (bad) adc repz cmc rex.RB fwait xchg rex.W add (bad) cmpsb test movabs lock scas gs iret rex.RB mov (bad) or and enterq rex.WRXB adc fndisi(8087 vmulpd (bad) and (bad) (bad) (bad) rex.WXB jb (bad) fldcw pushfq loopne rex.WB retq gs (bad) imul in cmp retq mov and xchg leaveq mov (bad) (bad) (bad) (bad) and cmp pushq and sbb loope (bad) roll mov mov pop rex.WX mov sbb (bad) out pop repnz push (bad) roll cmp pop (bad) mov movabs (bad) (bad) add xor cwtl ficompl stos (bad) mov (bad) cmp cmp (bad) loop push cmp pushq enterq out rex.WRX mov movsl (bad) mov (bad) pop jno (bad) cmpsb mov in (bad) (bad) out (bad) fs and (bad) pop xor js cmp (bad) mov (bad) out fcmovnb rex.WRX cwtl rex.X shrl (bad) pop in (bad) mov xchg outsb sub insb jo (bad) sbb scas rex.WR jmpq rcrl (bad) (bad) divl loope pop sub jne cld rex.WR add in jle sub xor test rex.W mov (bad) (bad) test or jns pop push movabs and idiv fdivr test (bad) jg push xlat rex.R rex rorb rex.XB addr32 mov sbb rex.W (bad) jle pop sti mov in stos xchg mov imul pushq fucomi xor push and pop test (bad) rex.WRB cmc mov pop lret adc popq mov pushq cmp (bad) loope cld out push fcoms stos rcpps sbb jae sub (bad) adc or (bad) cli (bad) movabs cld ja mov (bad) fdivrl addl scas mov insl cmpsb mov je pushfq pop (bad) xchg (bad) sbb loopne mov (bad) insb pushq fbld callq or clc sti sub or cmc jmpq test mov (bad) (bad) push orb pushq callq mov xor mov (bad) sub rorb jno movsl sub mov iret mov lods addr32 xchg push scas out retq movsl test pop nop sarb (bad) insl push (bad) xlat adc repnz pop pop fsubl mov movabs (bad) pop pop adc movsb test lahf (bad) jp fsubr xor test (bad) cmp insb popfq in imul mov push rex.WR (bad) rex.WRB shll sbb pslld cmpsb rex.RB (bad) cmc lods sahf loopne mov sbb push rex.WRB fimul mov fiadd (bad) xor adc mov fisttpll xchg notb (bad) xchg adc pushq and scas or or iret lret sub enterq rex.XB xchg je (bad) rex.WX fs rex.WX (bad) add mov (bad) xor jb leaveq rex.B or test push and ss mov sub cmp push jle shlb cmpsb (bad) fisubrl or rex.WX js and rex.WXB andl jo cmpsb out movsl or int mov movsl scas pop jge xlat mov mov mov pushq jge and fidiv insl rex.WRB lods rex.WR mov pop or mov (bad) sti pop push cmpsl loope js sti pop lret repnz stc loope pop mov push mov jg (bad) data16 rex.RB (bad) (bad) mulb ficomp (bad) stos scas out (bad) sbb pop push adc (bad) (bad) stc mov (bad) cmp sub mov (bad) add je (bad) and rex.WRX rex.RB out push movslq (bad) pushq (bad) and pop cmp sub movsl mov movabs sahf pop sbb movzbl icebp hlt test (bad) cmp loopne (bad) (bad) push pop rex.RB imul mov push (bad) (bad) jne sbb mov pop (bad) pop and fimull add popfq fs rex.WR pop rex.WXB std data16 adc (bad) and or rex.WRX or mov push xor stc sub jmpq pop or lret out (bad) pop pop cmp jg in pop out repz fstl push adc pop jle pop fcmovnb jb int insb and outsb jge mov movslq jg xor add mov nop (bad) pushq lock lahf mov pushq (bad) and mov movsl mov pop (bad) sbb (bad) mov cmp jae xor movabs fstps cmp add xchg rex.WXB pushq movsb cmpl (bad) or adc test jo outsb or data16 callq andb rex.RB cmp mov movabs cli and jmpq je push data16 repz out rex.WB mov scas lret xchg (bad) and (bad) leaveq in imulb pop in jno rex.WRX mov scas pushfq push cli sbb mov xlat pop fistl rex.XB (bad) pop adc rex.WXB movslq cmp (bad) mov or mov pop popfq jns pop jge or sbb xor test jmp (bad) push rex.RX (bad) in (bad) mov testl (bad) loope lret pop mov (bad) and syscall rolb xchg push sbb ds fs divps mov (bad) outsb pop movsl mov (bad) rex.WR rex.WXB fs sahf push push rcll jg rex.WRXB push mov xor add jo ficoml lret imulb and mov (bad) rex.RX rex.RX sub clc mov push pop (bad) stos (bad) add cmp adc xchg rex.X rol push addr32 pushq add imul movslq add sub (bad) movabs nop shr sahf jrcxz incl or frstor adc mov jns outsb push fwait xor (bad) rex.RB rex.B movsb movabs jp xor mov fdivrs sub fdivr mov jno mov movabs rorb xor jnp jns mov loop rex.WXB imul (bad) pop jle nop lods push rex.WRXB outsb sbb (bad) cmp jle xchg push scas loopne sti pushq (bad) (bad) pushq in and mov (bad) (bad) jmpq or or (bad) xor mov (bad) xchg outsb iret mov adc xchg sbb retq xor (bad) (bad) loop mov mov pop rex.WXB popfq push lods mov mov enterq test sub (bad) jbe pop retq mov ja (bad) rex.W rex.WRB sbb repnz mulb xor pop sbb stos jmpq mov pop data16 lock cmp xor rorl fs or rex.WRXB jbe ds lahf add (bad) or xor (bad) rcll xchg cmp rex.W rex.WRX add (bad) cld idivb in pop adc sbb xchg lea (bad) xchg rex.WRB (bad) shll fwait (bad) or (bad) or and test outsb sub jl (bad) loope pop outsl jb rex.WXB movslq shrb add orl frstor xchg jg scas xchg pop mov mov jrcxz rorb push retw je add gs ds sub insb lods (bad) decl adc popfq jp pushq mov (bad) sbb pop nop pushfq (bad) in movabs loopne jo cmpsl and (bad) mov movslq loope jle jmp (bad) cmp (bad) imul mov test testb rex.WRX jge add add sbb pop sub in (bad) repnz (bad) (bad) sbb fidiv (bad) pop (bad) rex.WXB rex.RXB add xchg nop callq rcrl enterq (bad) pop adc lret out int3 xchg sti jg xor movntpd (bad) mov cld js fnsaves clc xor sub sbb lret add jge (bad) pushq fistl (bad) jb cli or mov repnz xchg xor fisub (bad) (bad) (bad) and xchg mov jb xor (bad) sahf mov fiaddl or int (bad) movsl stos cli xchg jae in sbb retq outsb cmp sub rex.W ja fiadd xor mov cmp mov mov stos mov pushq rex.B in rorl outsl callq lock xchg movabs (bad) pop jmpq and rex.RX movsl sbb sbb movsl push mov mov jle xor (bad) gs jmpq divb xchg gs in addr32 insl xchg test cmp outsb or lods jb (bad) rex.WRXB jrcxz and (bad) insb std cmp mov sub test sbb add sub add push cmp fnsave (bad) mov mov sbb jge xor scas adc data16 (bad) jb and rex.X or jl pop lahf sub jno sbb and jg test jbe shll (bad) stos out adc or jae sbb (bad) pop mov out add rcll (bad) fisubr or cmpsb movabs (bad) jb or gs (bad) and push mov (bad) xchg push sahf (bad) mov enterq mov (bad) pushfq push rolb out xor add hlt (bad) and std (bad) stos es rolb mov jmp rex.X test imul (bad) mov or roll xor and idivb mov je add add or cltd fnstcw mov js (bad) fs pushq (bad) lea mov (bad) pop cmp and fcoml mov push out int3 retq es (bad) mov cmp (bad) adc mov icebp add (bad) mov (bad) pop in outsl (bad) and (bad) (bad) xor (bad) jb imul pop xchg mov rex.R or cli ss (bad) and rex.XB lahf (bad) mov cmp pop stos movabs pop cltd add leaveq lahf (bad) push (bad) xchg mov jg mov adc pop insl imul sbb (bad) test jo fs and mov mov sub popfq rex.WRB rex.WRX icebp (bad) xchg mov in mov mov loope sbbl and jb fmuls (bad) and sub out sbb fistpll mov cmp push addr32 pushq rex.WR mov leaveq int3 (bad) or repz lahf test in (bad) mov or fistpl lock push push pop and mov rorb pop pop (bad) (bad) push in (bad) mov hlt jb xchg ss in pop fbstp test pop fiaddl and out pop mov (bad) push sbb (bad) mov pop jp add push push adc (bad) (bad) int (bad) (bad) (bad) pop (bad) sub in sbb rex.WR cmp sbb xchg cmp ja test (bad) (bad) add cmp (bad) leaveq in pop cmpsl stos pop sbb fldl add mov jle hlt out (bad) xor xchg (bad) rex.WRXB adc test cwtl iret fisttpl pop out or pop add (bad) je test mov outsb xchg adc outsb (bad) cmp movabs xchg mov pop rex.RXB jbe mov jle loopne outsb jge rex.WRB je callq jo retq std test out mov movsb scas jmpq test sub rorb rcl pop movsb in jb lods (bad) xchg sbb mov or rcrb pop add fmull sbb mov in sahf (bad) sub stos (bad) out jno jmp pushfq mov cmp test mov in pop sahf popfq push (bad) push rex.B xor (bad) pop insb xor pop jmpq (bad) xor data16 (bad) adc fistp rex.B jl push enterq xchg xlat push (bad) test and adc outsb jnp xchg mov lret (bad) adc sub jbe jb mov retq sbb outsb psrlw pushq loope loop rex.WX addb pop (bad) add mov popfq cmp incb push (bad) (bad) rex.R outsl pushq pop (bad) (bad) xchg nop push or (bad) lods ss or lods cmpsb sub xchg shr mov mov jg add mov xchg jmpq callq loopne sbb cs mov stos push shlb add loopne xchg jp cld push scas sub iret (bad) imul fsubr mov xchg lret xlat cmp or mov (bad) (bad) mov out xor pushq pop mov rex.WX rex.WRB cwtl pop adc (bad) add nop (bad) decb or fwait repz (bad) pop (bad) (bad) adc imul xchg pop jrcxz mov mov xchg (bad) data16 loope (bad) sbb idivb mov (bad) rex.WXB xor sub fnstcw push cmp loopne pop pushq adc adc rex.XB (bad) movabs pop (bad) in imul cltd sti xchg jne sbb mov in and insb xchg lods fsubp lret out scas outsb imul movabs ss rex.XB mov jmp movabs out xor add xor movsl rex.WB and loopne iret pushfq xchg icebp mov data16 nop adc fbld mov mov test ja mov movabs out movsl gs rex.WXB rex.WRXB (bad) leaveq orb stc rex.WRX jle cmp xchg scas sbb or fs test (bad) push mov clc pop lahf and rex.WRX repnz (bad) mov cmp (bad) std (bad) (bad) jbe push adc in cmp and pop (bad) rex sub lods vcvtsi2ssl add mov xchg andb sub push loope loop rex.WRB rex.RX rex.RX fisubr or push lea and insb add mov nop scas and sub fistp repnz and lahf mov orl (bad) jno lret test sbb data16 std cltd rcrb or push imul cmpsl cs callq rex.R movabs adc mov loope (bad) pop rcl pop xor sub pop fbld jge out or mov adc sub hlt pop popq (bad) adc mov jl out loopne retq pushq sbb xchg jle lods push rex.WRXB data16 pop movabs imul fdivl pop cmc adc sub stos sub (bad) rex.X int fs jae rex.WRX (bad) pop imul insl outsb jne cltd mov cmpsl (bad) sub fcompl mov mull jp or cld mov mov rex.WR pushq (bad) je fldcw iret or jg repnz (bad) rex.WR addr32 rex.RXB ds xadd mov jg pushfq cmp loop fistp rex.WRXB cs movabs outsb in out (bad) rex.WX rex.RX xchg mov scas out repz xlat sbb sbb mov push xor jg jae sahf enterq rcrl out pushq sbb (bad) adc rex.WXB add cmp xchg or xchg rcr xor (bad) es mov (bad) pop rex.B adc adc add xor cmp (bad) mov push mov (bad) (bad) int3 std (bad) mov movslq push data16 fistpl lods jne sbb xchg mov and mov (bad) cmp xor js mov ja lea jbe jbe sbb xor (bad) imul or jns movabs lea jne (bad) sub jle (bad) mov (bad) jnp outsl popq jae jb rex.W rex.RB cmc mov jo adc lods or rex.X sbb mov sbb scas mov sbb (bad) loopne lods mov pop pop in jle sahf adc (bad) sub (bad) mov push lahf (bad) xchg xchg lret push mov rorb ja jge out (bad) movabs in rex.X mov mov pop ja ja adc rcr callq xor movabs insb iret xchg mov movsl mov icebp sub pushfq mov rex.WXB movabs data16 adc pushq (bad) pop fwait push (bad) retq mov lret mov xor mov je cmpsb out fist enterq rex.RB mov mov movabs fadd (bad) xor xchg (bad) cmp shrb cmpsb adc data16 enterq rex.B lret xchg jg mov stos pop jb rex.WRX pop retq rex.RB pop stos lods vhsubps pushq pop retq out mov rex.WRX rex.R xor shll leaveq rex.RXB rex mov callq imul ds jg rolb or (bad) (bad) xor mov cmc scas data16 lods (bad) xchg and frstpm(287 pop cmp (bad) lock clc or (bad) pop hlt xor fstpl and (bad) push mov jp popfq in scas jo sub cmpsb xchg and jno insb lea rex.W insb sbb or mov (bad) movslq xchg cmp adc (bad) push (bad) pop fs xor movslq rex.WX or cmp mov (bad) (bad) in hlt loope loopne xchg sahf rex.WX repz (bad) movsl sbb rex.W or cmp ja rex.WRX mov adc movabs or pop out subl jnp js clc jp add or (bad) sarb rex.R xchg fs xor rclb mov (bad) gs adc mov loopne stc xlat (bad) xchg cmp in xlat addr32 push stos pop lea xor out hlt (bad) outsl sahf and rclb (bad) xchg jle lock mov je movabs rex.WXB popfq xor pushq pop outsl lods xor cld lret mov rex.RXB jnp mov pop fiadd lret mov and test rex.WRX (bad) in pop pop or mov xchg cmp fstpt repz xor sahf add lcall stos jne mov sbb jbe rcr mov sti jmp outsb movabs pushq rex.WR movabs push in rcrb out rex.WXB (bad) or jrcxz pop imul (bad) outsb pop test push out xor (bad) clc pop (bad) scas mov sarl (bad) jmpq insb loop sbb test icebp (bad) jne jge xchg (bad) (bad) (bad) (bad) movb mov sbb ror (bad) rep out mov or loopne ja jmpq callq (bad) mov mov pop or mov popfq rex.RXB lock gs movsb out addr32 vpshufd sbb movabs sbb (bad) fs (bad) or pop xorb rex.XB nop (bad) (bad) rcrl xlat xor pop cmp ja outsb stc fcmovne and (bad) cmpsb mov adc cmpsb pop pushfq pop (bad) lea out jbe movabs pop lock jrcxz pushfq xchg int pop repnz add jge jns mov ror pop mov sahf (bad) and mov cltd rex.WX gs retq scas cmp fst sub ds movsl fstpt retq sti (bad) rex.B test jle clc negl notb fistpl sbb rex.WRB pop pop fwait out jae pushq and in pushq rex.W es movabs pop (bad) fstl movsb and push rex.WB rex.WXB cld pop push adc mov jbe xor (bad) and pop movabs insb (bad) mov add adc xchg addr32 and test retq and jns (bad) push insb add xor pop xor jno push test (bad) imul jg callq retq fidiv test rolb test (bad) pop fsubrp jrcxz pop rex.WRXB and jne and or imull jge jp and cld es loopne fistp pop gs (bad) (bad) ja clc mov cmp stos mov ja fbld sub repnz pop mov (bad) in cmc (bad) cmp and lods jrcxz fmull and pop insb cmpsb outsb adc push rex std scas test jrcxz (bad) rol out sbb xrelease jp rex out clc test mov sbb cld add stos jrcxz (bad) sub mov rex cli and (bad) rex.W sahf (bad) (bad) xor (bad) (bad) movabs (bad) fistp rex.WRX loop jbe adc movabs jne xor mov push and add movslq mov or sarb pop add imul hlt xchg pop (bad) sub mov or jbe pop and sbb mov (bad) mov xchg (bad) rex.WRB data16 jno sbb test jmpq (bad) pop cld sbb cmp pop mov stos and xchg cmp mov sbb (bad) jb add add loopne adc retq jbe adc pop iret int lods (bad) pop cmpsb sti pop fsubrp add fs outsb sbb lods out fnop movsl mov xchg in mov jmpq mov cmp sbb hlt cmp js mov je mov jle fisubrl fwait mov pop rex.R repz xchg adc or std mov movabs xchg ds sub callq pop cmp lret mov in fstps jb lahf fstpl (bad) rex.WRX xchg cmpsb out push mov scas jae rex.R outsl xchg mov xor (bad) or (bad) mov movslq (bad) jbe rex.WRXB ror rex.WR cmp stos data16 (bad) jl mov ds test imul rex.XB (bad) mov mov notb mov pop addr32 (bad) jle push cmp pop or sbb or jg cmp frstor sub or jns mov lods stc retq rorb cmpl retq xchg sbb rex.WX fbstp mov data16 (bad) jb xchg xchg mov rex.R orl shl (bad) (bad) mov in lock pushq sub stos fsubp pushfq out mov rclb cmp shl or (bad) and adc sbb (bad) fsubp xchg (bad) hlt sahf mov fwait mov mov (bad) (bad) (bad) mov jnp rcll or fisubr pop adc xor iret stos enterq sub leaveq (bad) jmpq pop sub mov rorl rex.R cmp pop outsl lea test out out fsub push sub scas mov jp (bad) or mov cmpsb test pop in sbb sub xchg (bad) mov in (bad) rex.RX test vmread rcll movabs sahf (bad) sub sahf out push (bad) retq adc roll je xchg (bad) rcr rex.RXB pop int3 icebp and jb jbe movsb clc movabs push mov (bad) stc cmp retq sar rex.WB callq loope lods js pop sub and out movabs pushfq mov push fiaddl (bad) (bad) add mov (bad) shr mov add pop jle pop (bad) (bad) add push cmp loop and cmp nop pop mov stc (bad) jno cmp decb pop in nop adc data16 iret stos scas pushq and rex.WRB lahf (bad) mov xor loop jmpq mov (bad) mov addr32 mov (bad) cmp sbb roll pop test out rex.RB xchg loopne mov out jg or mov rcrb and icebp xor pop mov adc xorl pushq cmp rex.RB cs test cmpsb stos mov in rclb loope movslq fstpl cmpsl stos (bad) pushq pop xchg push xchg cmpl movsl outsl mov fs scas outsl mov xchg pop cmp test mov test mov adc (bad) fs sbb push sub data16 fsubrp xor pop jns mov movslq pop (bad) rex.WR add adc xor push pop pop sub movabs lret int (bad) and lock xor movabs pop (bad) push (bad) imul data16 loopne (bad) sbb inc add enterq pop (bad) ds out and rcrb mov add je movsb or and test insl es (bad) cmp xchg pop loop sub loopne and and adc out (bad) jae mov and jrcxz jne rex.XB or loop (bad) mov jge xchg rex.X cmp mov (bad) lret roll movslq scas (bad) sub stos (bad) or int3 mov ds pop sahf sub in mov push pop fwait xlat sbb out test movsb pop pop adc add mov push mov sbb (bad) or (bad) pop in cltd mov (bad) push fnstsw (bad) ja shrl xchg pop lods (bad) (bad) sub and mov in mov mov jrcxz (bad) (bad) loope or push iret mov and jp pop icebp mov xor shll outsb insl out and (bad) rex.R lods (bad) rex.R cli outsl (bad) (bad) jle,pn sub fldenv sub jg cmp (bad) gs jo pushq retq in (bad) (bad) in sbb or (bad) fstpl in or hlt (bad) (bad) pop movabs (bad) es outsb mov (bad) loopne fmulp rex.WRXB (bad) int3 adc cmp sahf shrb jmpq xchg cwtl and jmp sahf lret add int3 xor rex.R mov movabs rex.WXB rex.X mov imul mov (bad) mov or mov and and rex.WXB jmp fildll scas (bad) ficoml rex.WX loope pop sub xchg (bad) push stos sbb testb adc (bad) jns sbb test mov xor stos test sbb movabs shrl mov pop (bad) mov rcr out fs jp mov push mov sbbb punpckldq or mov xchg repz movabs (bad) movabs jrcxz adc test xor pop (bad) (bad) xchg ficompl or pop jb mov mov rex.R rex.WRX je sub mov mov adc rex.RX cli icebp scas fnstsw rex.WR sbb gs (bad) jmpq cmp mov xlat pop rex.RB (bad) std (bad) sub pop sbb mov int3 mov loop (bad) movabs mov (bad) xchg fimull rex.WR lods pop nop xor (bad) mov stos pop clc sahf push or test jl loope (bad) nop movabs (bad) insb jl cli lahf int lea sub sub ficom rex.RXB test mov imul cmc xchg cmpsb loopne out adc sbb mov xlat rex.R clc xchg retq js (bad) add out pushq mov loope sbb mov insl (bad) pop jae (bad) (bad) cli lock jmp rex.RXB push in and mov xchg push (bad) rex.W (bad) test movabs sti adc cmc fnstsw repnz movabs jb sbb movsb mov push movabs xchg mov (bad) rex.RX and mov fucomip rex.R jb stc sbb lods imul outsl loopne iret lock mov lahf xor sbb mov scas test lods out out push pop movsl rex.WRXB push xor rex.XB mov jle rex.R js add xchg imul or loope adcl or jae cmc fadd andb ror xchg sti (bad) (bad) and outsl sbb lock (bad) lret cmp out pop test cmp fsts jbe rex.RX pop xlat sub jg xor mov mov rex.WRB cmp push outsb (bad) pop or rex.WRB add add fild (bad) (bad) (bad) (bad) fmuls (bad) out and je insl add (bad) mov rex.WB cmp push add or gs ficoml lods lods xor movslq stos push pushq xchg cmpsb (bad) mov lods (bad) xor rex.XB cmc rolb or jl pop lock movabs movabs iret adc loope push mov mov rex.WRX clc sti pushq sti xchg jb pushq push rex stos (bad) iret lahf scas fildl sbb popfq rex.X xor rex.WX fidivrl sbb xchg fcmovnb mov push xchg out rex.RXB (bad) cmovle cmc (bad) or ds add fidivr pop loopne jrcxz sub (bad) sub mov fldenv lods scas ss jp sub rex.WRX rex.R in mov movabs mov (bad) rex.X test scas jle (bad) in push mov mov hlt out in adc rex.R and or repnz in cmpsl (bad) retq (bad) pop (bad) (bad) adc mov movslq mov callq xor xchg add pop hlt retq (bad) cs mov sub vmovapd sbb and adc xchg mov (bad) sub (bad) loop rex.WR scas rex.X rex.WB jg stos xchg retq jae mov out rex.WRX sbb (bad) scas mov cmp fild cmp cmp sbb pushq push adc rex.WX (bad) or or sub popfq fsts adc rex.RXB sub jrcxz jl xor out (bad) and (bad) jo shlb add fisub cmp cli mov push pop pop xor pop fcmovnbe (bad) rex.R sti clc nop (bad) adc rex.RXB sbb xchg in pop fistpl insb xchg pop rex or lods sub mov adc sbbl retq mov add add sub (bad) (bad) mov push jnp xchg xchg cmpsb adc xchg fstpl retq mov push jbe rex.WXB ja imul fildl mov loope (bad) notb addr32 (bad) jae rex.RX jne or adc inc mov pop loop movslq cmp rex.RB hlt or pop xchg adc add cmp movsl add jb xlat shrl insl push rex.WRB sarb pop jp js,pn rex.WRB jno sbb repz lret rex.WRXB xor stos pop sbb out adc (bad) mov or jle mov jle pop mov add in rex.WXB rex.WXB sub es pushq cltd xor mov (bad) (bad) mov mov xlat (bad) xor mov (bad) or add stos retq and rex.WXB mov adc (bad) imul movsl push fdivs (bad) movabs sub adc outsb sbb pop fdivs and scas mov (bad) (bad) xor insb xor fcomps data16 xchg pop pushfq rex.WXB xlat pop or cmp movabs add pop mov cmp pop in insb add cld notl jno (bad) sahf push adc or sbb shlb jmp rex.RB pushfq shlb rex.WXB test adc retq mov pop pushq cwtl divl ja sbb push ss mov pop repnz sub pushfq pop movslq pop pop test in test rex.WRXB movsl rex.R push pop mov mov jmp mov pop enterq mov (bad) push mov xor (bad) (bad) outsb rex.WRB addr32 jle and idivl sub je xor xchg and pop in nop xchg rex.RB out mov mov mov (bad) mov retq xchg in jle (bad) (bad) and add movsl outsb int cli (bad) vmovhpd sub fsubrl (bad) (bad) or (bad) stos sub decl cltd adc movsl adc jmpq rex.WRXB int3 or sbb movsb gs std jns jo lahf jg pop jae xchg repz cmc (bad) (bad) fist sar (bad) iret pop rex fstcw mov cmp xrelease out mov sub pop fwait jns sarb ficomp push fstp push rex.X rex.WR rex.RXB rex.R rex.X or (bad) sub (bad) leaveq mov jmp and pop (bad) mov movsb (bad) movabs and xchg iret adc jge stos lods stos gs repnz (bad) mov pop xchg nop xchg mov movabs (bad) ficompl rex.B mov movabs movsb rex.RB jno test xor pushq mov push repz out (bad) fisubr pushq cs mov mov testb (bad) (bad) sbb cmp fnstsw jnp out pop (bad) pushq sbb cmpl sub stos (bad) hlt (bad) mov rex.XB fadds (bad) test sbb roll movslq pop mov fnstenv (bad) mov adc (bad) (bad) or xchg xor (bad) or (bad) add push mov rex push mov clc xchg insl mov insl cmp sbb cmp xor mov outsl xchg xchg movabs xor fucomip jbe rcrl rex.R rex.R push rcrl rex.RX mov (bad) pop retq (bad) rorb or rex.RB mov sub subl mov insl pushq adc pop xor (bad) cmp and lods addr32 sbb pop and (bad) pop sahf sti jl xchg pop lret mov movabs imul test jo (bad) nop fiadd mov mov rex.R cmp (bad) sbb pop cmc es mov xor out pop mov rcll movabs (bad) (bad) sahf jg rcrl adc add mov mov in imul (bad) (bad) int lods mov jge movabs js data16 pushq adc jno or pushq (bad) rex.XB (bad) jo rex.RXB push (bad) fs jl xchg lahf xor xchg lock xchg mov mov sub cmpsb mov mov (bad) addb and out clc outsb mov mov sub mov jns pop push add cltd mov rex.R mov js rex.WR sub mov data16 cwtl test out mov xchg gs and loope pop rex rex.WB (bad) pop (bad) retq mov mov pushq lahf (bad) (bad) (bad) or out xlat (bad) push jb cmp push jp lret (bad) sbb rex.X pop clc outsb rex.RXB lss mov pop je sbb (bad) stos xchg rex.RB xchg mov mov loop divl mov (bad) (bad) and cmpsb movslq pop adc mov jne rex.RX pushq xchg and xlat (bad) mov repz loope mov xchg pop movabs (bad) imul pushq jrcxz rex movabs mov fimull mov (bad) xor loope mov hlt jno pop xchg sbb or pop push cmp and xchg pop int3 mov xchg sti pop mov or nop adc jbe mov mov xchg sahf fs jae xchg jne out movsb push mov add pop adc mov mov fwait scas sub clc (bad) (bad) sub mov icebp or jmpq mov xchg lahf add imul mov (bad) pop imul pop mov gs movslq add pop adc jbe mov int (bad) pop jnp add icebp outsb mov adc (bad) fstps jns xor dec or mov (bad) jo push xchg push (bad) and pop and (bad) (bad) or ds xor cmp movabs pop push movabs sbb outsb add or ja movabs loopne (bad) jns sub (bad) adc (bad) xchg sub pop pop and negl stos xor callq mov cmp mov roll mov cmp insl pushq cmp sbb and mov jp jbe (bad) rex.WB rex.WRX fwait movslq cs add rolb (bad) add fstps cmp adc xchg sbb and in lahf ds rex.W rex.X rex.WXB add cmp jb or (bad) out pop rex add lahf add movabs pop push roll icebp mov (bad) (bad) (bad) pop loopne push sub cmpl pop jp test xchg fstps cmpsb (bad) mov stos or add xchg adc sahf (bad) movabs outsb nop add push gs push pop rex.XB test mov (bad) push sbb imul xchg cld sbb push sub cmc xchg sbb in sub std iret rex.R jp lock mov mov je pushfq rex.WXB add callq ficomp xor jge retq cmpsl pop clc or out (bad) cmp fimull insl add (bad) (bad) lods add or pop in fsincos pop rex.W rex.RB sbb cmp adc insb sub mov cs pushq in lret es je lret pop adc (bad) mov out icebp adc (bad) and sbb jbe out jae mov and add sub mov cltd pop mov pushq movsb jno (bad) lret xchg mov lods rex.RX movslq xchg mov test cmpsb ds rex.WRXB add fisub outsb or xor and adcb pushq pop (bad) sub xor pop movsb push adcl cs fstpl cmpl mov movslq (bad) adc or pop pushq or xchg std mov or movabs xchg (bad) (bad) rex.W (bad) adc loop (bad) and leaveq cmp pushfq add std sub test or lea pop (bad) mov movsb push rex.WRXB in add outsb mov (bad) cmp lods adc rex.WX push xchg rorl push push (bad) add repz and mov sbb mov (bad) (bad) lods pop mov mov or (bad) and in and sbb retq pop mov rex.XB cli data16 out add retq popfq jmpq add and xchg pushq adc in data16 (bad) out jle rex.W xor adc pop cmp pop movslq adc ds lods pop retq nop out in xchg out testb xchg retq rex.RB (bad) test xchg (bad) pop cmp (bad) jae out repnz mov push rex.RXB (bad) jnp subl rex.RXB rex.WB jae gs in (bad) out cwtl pop pop cmp jb (bad) (bad) mov hlt sub xchg (bad) jle jnp xor mov mov pop mov push adc (bad) test lock scas rex.WXB notb sub sbb jne cmp jne add jo and negl (bad) pushq insl sub rex.RXB rex.RX (bad) mov movsl jne xchg stos (bad) cmp cmp fimul vmaskmovdqu xor cmpsb adc (bad) rex.WX callq outsb iret xor sub push (bad) test movsb and and rex.XB mov mov jle mov xor jb add lretw push std pushq and rex.WR add rex.RXB sub movabs cwtl mov mov movsl mov xchg popfq (bad) pushfq jb movsb movabs xchg je int sbb adc xor neg (bad) callq xor mov int rex.RB fsubrl or fs mov rex.WRB mov (bad) and outsb and add (bad) fstpl movslq and (bad) rex cli movsb jle add insb (bad) lods int rep jbe jae pop lods rex.RXB push movsb callq jae rorb movsb rex.WRB fs rex.WX pop rex.WR rex.WRX xchg rex.WX and mov (bad) popfq mov in movslq rex.WRXB rorb jrcxz or nop or mov (bad) jrcxz sub jbe repz mov cmp xchg mov rex.X fs adc push fist jg cmpsl (bad) pop rex.WX jno xor (bad) outsb rex.WX and adc pop sub cmp rex.WRB add (bad) (bad) cmp gs adc lods sbb lock (bad) loop or mov mov (bad) (bad) jmpq jae or cli scas out retq rex.WRX sahf mov xchg cs sbb mov xchg pop sbbl rex.WRXB cs jl int3 (bad) jnp jns xlat iret (bad) mov mov rex.RB rex.XB mov out iret loope cmpl rex.R (bad) movsb mov jmpq pop cmp jo std sbb adc leaveq and (bad) mov adc je je xchg data16 cmp je lret sbb (bad) sub (bad) (bad) xor movabs gs cmc (bad) rex.WXB outsl sbb fstpl jmp pop push jae (bad) cli icebp mov movabs rex repnz add vpmovqb pop cmp and movabs adc nop mov (bad) je pop or sbb in (bad) or mov lret pop fs ja fbstp (bad) pushq xor xchg rex.WRX fidivr mov pop (bad) jns popfq and push mov pop fst nop stos push (bad) cs xor mov jmpq sar outsl pop loopne lret jbe adc (bad) mov insb xlat fwait (bad) gs pushfq pop outsb lret leaveq pop pop mov rorl movslq movabs fstpl adc jmpq (bad) sub test mov fsubl test scas lea (bad) clc callq mov push rex.R rex.RB cmp xchg sbb adc scas adc (bad) jmp pop mov (bad) sbb sahf adc push lods (bad) sub (bad) jle rorl xor callq cmpsl cmp lahf pop xchg pop (bad) jbe cmp pop pop mov data16 pop int and movabs outsb movsl and ds sbb jp loopne jbe test add jne mov test imul and mov (bad) loope add mov sbb (bad) mov pop mov xchg hlt (bad) mov xchg test shrb sub (bad) jb movabs sbb pop xlat rex.R rex.WX and xchg pop jrcxz sti cmpsb idivl mov add mov (bad) loop pop jo add jnp insl imul push rex.WR rex.WXB and jne fidivr mull hlt sbb pop push xchg movabs scas fisttpl pop movslq (bad) sbb push push rex.WB or and scas pop cmp int fdivrs pop es xchg (bad) jbe mov mov addr32 insb imul pop pushfq fxch sbb rex.WR lretq (bad) and rcrl jo or lock sbb mov cmp or out out ds in jmpq addr32 test retq mov ja movsl xchg enterq pop lret (bad) mov jmpq (bad) mov and retq xchg jns scas loopne mov movsb (bad) push jno test (bad) sub rex.B retq ss callq push xchg add push mov test mov xchg sbb cmc repnz (bad) xor xchg jbe ja outsl insl cmpsl fmul rcl rex.WB jmpq pushq push xchg xchg sub xchg (bad) mov sbb or and pop (bad) lahf push psrlw in (bad) test stc rex.X xchg mov icebp xor mov (bad) sbb rex.WB jne (bad) int3 ss pop pop out (bad) or jnp cmp in xchg stc mov (bad) hlt movabs div flds cmc mov lods insb jle adcl sbb sbb sbb sarl or idivb (bad) insb cmp addr32 rex.WR push ss imul (bad) cwtl test (bad) (bad) mov cmpsb or movabs rex.WXB jo push push or in mov mov mov xchg movsl mov (bad) or add (bad) jrcxz push in jo fmuls xchg out (bad) outsb out out icebp int3 mov or in sbb mov es or sbb and add retq pop outsl (bad) mov push fdivrs lods (bad) push repnz scas insl sub mov jmp in xchg sub fbld pop test pop scas movabs setno sub xchg vpsllw and jp mov rolb or (bad) movabs mov gs scas fcomp xor rex.RXB cli (bad) jae and shll pop (bad) (bad) scas notb sub stos rex.WB cmp retq jb (bad) mov sub adc (bad) and xchg rcrl (bad) movsbl jns and mov std push xchg xchg movsl mov add mov lods cmpsb scas pop pop xchg shr data16 cmc xor scas add pop lahf (bad) xchg push retq add (bad) imul or add rex.R ds cwtl (bad) pushfq (bad) and movslq mov adc (bad) lods jmp sbb fs stos mov rex.WXB movslq rorb sub cmp mov push icebp testb (bad) test (bad) lret rex.WX lret iret stos imul push retq pop (bad) mov xchg sbb sub cmpsb mov add xor jmpq sti mov std rex.WRB std xchg sahf sbb test jbe rex.WRB (bad) out (bad) sub movsb (bad) mov movabs sub mov (bad) mov and jg test rorb xchg (bad) addr32 push outsb (bad) and fmuls sbb add xlat push lock jb stos rex.R lods add sbb and retq xor xchg flds lea retq fs mov cmp xlat sti (bad) cld mov (bad) fisubl cvtpi2ps lret test rex.WR (bad) rex.RX rex.WRB (bad) iret lea scas (bad) pop rex.RB xchg lods retq lret andl (bad) mov fadds shll and cmp (bad) mov (bad) outsb out (bad) scas sub out mov mov repnz sbbb jmp (bad) cltd stos (bad) adc retq mov mov mov mov xor out data16 xchg jne out (bad) (bad) mov push (bad) sub stc fsubp mull (bad) cmp loopne out pop mov mov mov test (bad) pop xor (bad) push insl (bad) lock bt rex.WRB rex.X (bad) stos pop xchg retq mov out callq outsl loopne rex.WRB rex.R shll sbb imul add cmp test movabs mov add mov (bad) (bad) lret (bad) or xor fstpl mov and ja mov add repz ss xor xor or jmpq (bad) sarb xchg xchg out movsl outsb rex movabs mov insb in and (bad) mov pop mov vmovlps (bad) or rex.XB popfq sub rcl push jrcxz xchg js mov movabs icebp addr32 fisub (bad) pop ds jno movsl (bad) add rex.WX mov pop fisttpll es (bad) retq mov idiv iret pushq enterq (bad) rex.RX rcrl int mov rex.RB fistp loopne mov cmp nop sbb in cltd xor pushq int xchg retq cli loop or push test adc fwait (bad) sub cwtl (bad) cltd addr32 add jb (bad) gs enterq pop mov rex.WX nop (bad) lods data16 pop pop xor (bad) pop (bad) cmp and xor jae pop test (bad) mov lods mov in push rcrb mov pushq (bad) mov gs (bad) rex.WRB (bad) sub jmp adc rex.WR outsb sbb mov cltd pop mov push out xor fdiv (bad) out movslq (bad) rex.WX (bad) (bad) loop movabs test retq push add (bad) xchg jb (bad) mov ficomp loopne shrb sbb repz (bad) (bad) xchg nop retw xorl adc lret mov lahf rex.WX outsl jp movsb cs jae pop fwait sbb test (bad) (bad) xchg push stos (bad) cmpsl rex.RX shrb (bad) out mov (bad) (bad) xchg rex.WRX js and push mov xor xchg xor outsb rex.WR rex.WRXB rex.RB ss int cmp lods push rcrb cmp and enterw int or mov retq jp sahf jp sbb sbb leaveq es jge cmc rex.R sahf mov cmpsb mov gs pop xchg loop (bad) (bad) out lahf rex.B imulb (bad) jrcxz mov hlt sub mov push sub (bad) movsl movsb fwait rex.R (bad) adc rex.WRXB cmc sub jp cld add lret data16 (bad) adc enterq cld xchg push loopne in (bad) (bad) cmp or (bad) xchg (bad) lods adc movabs pushq imul loopne add notl stc sbb and xchg add or movsb scas insb lahf movabs add fwait push pop movslq ss mov and sub (bad) test pushfq pop pop xchg fcmovnb icebp (bad) (bad) (bad) lock mov pushfq rex.WB push mov neg fstpt sahf jo add and mov mov in rex.WX fs mov mov push xchg mov (bad) fiaddl test fnstcw fnstsw in or rcr jae mov test sbb mov lods sub jbe (bad) xchg int jno xchg xchg test pop je insl and lods fwait and cmp callq cmp stos jrcxz sahf callq and (bad) lea repz jrcxz pop rex.WRX rex pop (bad) (bad) fimull (bad) in sbb sti jge imul sbbl mov add pop je imul in cmp fisub lock cmc adc mov pushq sub (bad) es lea mov test rolb or (bad) pop iret rex.WB push mov (bad) fnstenv (bad) in pop pop jp (bad) mov mov (bad) sub jo (bad) rorl cs (bad) and adc pop add cmpsb pop fwait add fdivs fcomip cs push rex.XB subl stos (bad) pop jnp cli rex.R mov rex.WB rclb mov jns (bad) (bad) xor lret sbbl cmp jle je out (bad) fcomp xorb mov mov mov (bad) mov xor add sbb sub rex.WXB (bad) fsubrl mov rex.WXB sub jmp lods mov adc xor mov xchg addr32 and pop (bad) fisttp rex.X callq pop jge xabort and (bad) flds in fidiv test sbb shl hlt (bad) pop (bad) sbb sbb loop jae xlat (bad) push (bad) xchg retq mov rex.X or mov outsb xchg add (bad) in imul movabs mov lods pop lods rolb and xchg jl fs in cs sub fldenv and pushfq xchg xor sub movabs mov add rex.W cltd cmpsl imul in rex.RX pop mov imul (bad) lret rex.WB rorb mov mov retq pop pop lret mov sub pop rex.WRXB cmpsl sub test pop pop sub clc mov jmpq jl sub test xlat rex.WRB addr32 fistpl jle sub add adc (bad) adc imul shlb add out outsb mov pop xchg fsubrs cmp or push mov mov xlat repz rex.WXB rex.B je mov (bad) (bad) xor cmpsb pushq rcr sbb (bad) rex.XB int3 adc loop (bad) (bad) mov fldt xchg test pop rex.R (bad) or rex.W ja je pop out and (bad) popfq pop adc ja mov pushq movabs push or and out stos mov add (bad) cmp adc add (bad) jo mov pushq fstl (bad) add xchg negl cwtl clc outsb mov (bad) es mov jmpq mov out cld data16 push or push xchg loope or outsb mov cmp imul movabs push pop enterq jp or lret jno (bad) cmp fmull rex.WRB shrb in test callq jge out lret sbb pop jmp mov (bad) mov sub lods jbe (bad) pop push sbb loop cmp jno or rex.WRXB movsl push ror (bad) (bad) xor leaveq retq mov std mov pop out (bad) sbb rex.WRB (bad) mov scas push pop jbe fxtract loope lods (bad) xchg xor rex.B addr32 rex.WRX out rex.XB (bad) mov and pushfq test (bad) sarb push add (bad) (bad) cmp xor cli xlat sub (bad) adc ja pop push icebp hlt xchg adc xchg mov in sarl pop out jbe (bad) xchg push mov xchg mov pushfq clc loope xor sub test xchg int3 (bad) enterq movslq cmp movsl xor out (bad) sbb jle je xor (bad) std jp mov rex.WB or mov (bad) adc stos adc cmp and (bad) sarb fstpl mov lahf and pop pop mov fildl jbe and repz outsb or jmpq xor lods repz jge cli jmp mov jmp mov sbbl cmp loop push (bad) sbb add adc sti mov fwait mov pushfq jbe shll mov xor sub push stos jge rep push (bad) lea (bad) repnz sub ud1 ds pushq (bad) (bad) movsl and pop add loopne jrcxz movabs and (bad) rex.XB sbb out (bad) jb or (bad) xchg roll (bad) loop xchg sbb rex.WR (bad) es out lahf pop rex (bad) mov fs je cmp adc (bad) adc ds rex.R mov movabs xchg roll mov jnp (bad) sub vpcmpeqb stos in push loop fildll lods or pop pop (bad) rex.RX stc cmp lahf xchg jge or iret xor movsl (bad) es or loop (bad) fwait movabs jo cltd sub test xor xor roll xor (bad) rex.RX cmpsl rex.X mov cld cmpsb (bad) sub mov sbb (bad) rex.WB jns ss imul vpslld and out (bad) jb mov pop pop js pop (bad) or leaveq lret (bad) mov loopne add (bad) pop (bad) mov cmp mov gs mov sti push rex.WR or pop loopne (bad) jae sub rex.RB sbb cmp rex (bad) stos mov rex.WRB sbb pop sub mov jle loope pop fwait or add mov lock cli lea movsl push outsb push lret movsq sti (bad) rex.WRB movabs mov xor (bad) pop or test xchg (bad) add (bad) (bad) div loop mov loopne mulb js scas movsb (bad) (bad) lock mov or sub adc xor shr xor (bad) je jb or test pop sti jl xchg rex.WXB xchg nop cmpsb (bad) rcrb cmp rex.WRX cmp out outsb out fdivl in pop rex.RX rex.WXB mov pop rex.RX pop cmp xchg rex.WRXB pop push rex (bad) mov (bad) rex.WX out pop rex.WRX push (bad) and movabs cld cli insb push sbb (bad) repnz lahf or (bad) int movabs jge (bad) (bad) rol or cltd or cmpsb xchg pushq (bad) lret rex.WB or jl in jmp pop sbb movsb movabs push pop (bad) rex.R jne fwait jbe mov cli mov sbb (bad) mov (bad) fidivr adc pop rex.WRB loope xchg cmp sub mov decl pop jnp (bad) int (bad) and rex.WX xor rex.W jb or xorb xlat jne add and jb rex.WRXB (bad) xor (bad) (bad) imul add jo xor mov (bad) jae data16 (bad) mov hlt cmc lea ficoml xlat callq mov jno repz (bad) fs ss mov (bad) rex fcomp scas jno push movl xchg pop sbb rcrb add mov imul (bad) mov push movl out retq xchg and push rorl rex.RXB push pushq imul or add (bad) rex.WX rex.WR sbb pop in xlat outsb or sbb pop insl callq movabs push (bad) cmpsl xchg fnsetpm(287 out adc movsl (bad) add rex.W mov and fidivl sti iret in rex.RXB fild outsb roll test sbb outsb (bad) lods cmp mov or cs (bad) out (bad) sub xor adc rex.WRXB jo rex.WX sbb push (bad) callq xor cmp add outsb pop push (bad) fs or pop lea jno xchg xor (bad) int movabs xorl cmc andl rex.X mov mov movsl movabs (bad) std xchg iret pop rex.WR mov icebp xor movsl cli movsb cmp pop rex.RXB in outsb push fsubr sub xlat pop mov ror rex.WXB mov data16 retq jge sub lods movabs sahf out outsb add (bad) pop rex.WRX cwtl (bad) adc (bad) adc or (bad) outsb xor mov add int3 cmp push cld (bad) and vunpcklps sub pop movabs movabs mov (bad) adc adc rolb insb jmpq in fist rex.WRB sahf (bad) add stc pushfq or test stc cwtl sahf out movslq es pxor mov outsl mov js (bad) (bad) mov (bad) gs (bad) icebp movabs and imul (bad) xchg hlt test movabs mull (bad) jno hlt (bad) xor fiadd adc pop lret es (bad) lods cmp movabs stc mov imul adc pop sbbb mov (bad) mov rex.R (bad) rex.WXB and shlb jbe stos jp mov callq (bad) in int3 (bad) lods lret (bad) jae mov nop pushq pushq (bad) mov cltd sahf jle (bad) rcl xchg ljmp xor pop cmp pop cld (bad) xchg fidivl pop data16 or lea rex.RB jns xchg and in insb mov mov loope rcrl int3 es cmp and jo incb mov test cmpb cltd rex.RXB (bad) lahf mov testl in push jp (bad) rcr xor fiadd out imul lea rex.WRXB (bad) test cli mov movslq mov mov jmp pop mov int and mov push movabs (bad) (bad) mov popfq (bad) jg xchg js sbb movabs mov rex.WRXB jb lods cmpb mov add fmulp rex.WB pop (bad) (bad) rex.X rex.WXB cmp out jmp mov insl movb loopne nop cmp pushq (bad) out jp insl mov xor sbb pop jnp in mov jb or sub jg rex insl jle pop mov je mov sub (bad) sahf mov sti xchg mov movsw in fmull loopne test xor cmpsb xchg sahf xlat push (bad) mov mov mov and out movabs mov cmpsb (bad) jbe,pt shlb vaddsubpd shrb (bad) mov (bad) cmp push jmpq rex.WB mov push sub adc (bad) mov not xor rolb subl retq (bad) mov jno jmp scas movabs movabs rex.WX rex.WRB cmc stos fnop (bad) rex.R lock movabs or rex.WXB adc mov decl cwtl jmp xchg and (bad) pop sub (bad) adc or or mov and std push cli scas outsb cwtl (bad) sbb jbe mov fsub movslq jbe adc fsubl callq pop lods sub sahf outsb repz mov (bad) stc loope cs imul sub fwait and xchg pop (bad) adc rex.R lods add rex.XB rex.WRXB push enterq addr32 xchg (bad) rex.RXB rex.WXB (bad) scas mov mov data16 imulb cmpsb xor jle jl (bad) fdivrs sahf (bad) mov adc stc push adc pop imul cmpsl data16 xchg (bad) cwtl mov pop xchg (bad) faddp rex.WRB (bad) pop (bad) xchg (bad) jle cmc mov loope xchg fsubp movabs inc (bad) movslq in push sti jbe movabs test xchg mov xchg (bad) or fcoml cld (bad) nop mov push (bad) xchg (bad) hlt mov sub imul or lock (bad) (bad) sahf fisttp jne mov ja jg pushfq rex.WXB je rex xchg sbb xlat add add jnp xlat jo xor mov lahf (bad) adc adcb outsl rex.WXB mov popfq retq (bad) sbbl pop jle xchg in (bad) (bad) in rcrb int3 rex.RB mov jne pop cmp add (bad) rex.RX rex.B stc retq (bad) adc jne (bad) addr32 adc in test lock movabs sti xor jmp mov sbb (bad) rex.RX rex.WRX push movabs jbe pop xlat movslq movsl cld out out sub adc mov or (bad) (bad) callq rex.RX cmp sbb pop lret or pop jl scas rolb movabs cmp scas adc xor insl pushq sahf sti mov stos (bad) and jb ds out pop loopne and or test rex.WX rex.B lea jmpq icebp out rex.W add rex.X hlt xchg mov mov push sarl jo pop mov fnop mov adc (bad) in sbb push cmp mov fisubr stos in push (bad) pop leaveq xchg (bad) xchg bnd rex.R fs and pop push (bad) sbb mov cs mov pop movabs and repnz lret shr rex.WRXB push imul std pop loop (bad) mov pop movl pop xchg neg stos loope pop xor mov movsb stc cmp mov adc push pop jg leaveq fsubrl int3 pop fnstcw addr32 callq mov in in rex rex.X cmp cltd fldl movabs (bad) jns (bad) icebp in (bad) pop and mov or xchg sub fistp movabs and hlt in insl shlb (bad) sbb (bad) repnz jmpq or push mov fs imul (bad) jne sbb xchg imul callq stos movabs (bad) mov cs rex.XB jnp movslq (bad) (bad) push stos lods xchg mov rex.WX xchg pop (bad) and (bad) pop std sti test push incb jge cmp cmpsb sbbw cltd testb cmpsb pop adc xchg lahf rex.WR sar test (bad) pop cmp (bad) scas movb pop fisubrl add xor mov or or hlt outsb adc xor loope (bad) adc repnz pushq testb movsl cmpsb loop adc sbb xchg xor jbe js lods (bad) (bad) pop and data16 push jle movslq push rex.X pop mov out stos sarb fsubs rex.WRB rex.WXB rex.W mov mov (bad) mov (bad) jmpq xor fdivrp punpckldq (bad) pop push movabs (bad) xchg jo (bad) lods pop sub imul rex.WRX or adc retq (bad) push adc jbe fcompl mov mov stos pop xchg (bad) sarb pop (bad) test (bad) hlt adc jrcxz mov cmp idivl xchg xchg testb fnop xchg (bad) outsb in (bad) xchg nop (bad) insb mov mov ljmp xchg test notb in push jbe push (bad) jbe (bad) outsb (bad) (bad) sti gs jrcxz mov cld jbe fst pop or cmp movsl (bad) loopne pop xchg pop outsl mov gs mov jo fs (bad) pushq xlat mov movsb pop popfq xchg int mov and add xor jns rcll jge xchg jrcxz insl cwtl pop out add cmp scas xchg rex.W jge sub (bad) mov out pop (bad) pop movabs push xor and stos lods jl xor rex.RX (bad) enterq cmpsb sub rex.XB fdivrs pop lods sarb cmp sarb insb (bad) rex push sbb pop lods out cmp lods push pop addr32 fidivr (bad) pop (bad) (bad) xor mov sub and rcll add xchg or rex.R fs xchg popq (bad) (bad) vpaddsw loop push fisubr cmp insb retq ss cmp pop (bad) movabs xchg movabs outsb cs (bad) or mov retq or jb movabs loopne rex.WRX jge,pt (bad) jae (bad) sbb jg xor test mov cmpsb js movsb (bad) leaveq rcll pushq xor (bad) fldl pop pop mov adc test or movsl sbb stos pushq mov (bad) (bad) jnp jne sub jmp ds rex.R outsl pop cmp (bad) cmp lods rolb pushq add and repnz xor jns out xlat (bad) mov jbe or sub hlt in (bad) shll jl lods rex.WRB lock pop fmull sbb add cmc retq (bad) (bad) (bad) stos or sbb ficompl mov or test ja or fisubl (bad) cmp push mov push xor leaveq movabs mov xchg xor (bad) divb in fs decb and scas mov sbb xrelease outsb xor pop mov out lods lret mov lock mov mov xchg rex.W mov mov jge mov js loopne jp cltd mulb xchg or faddp add and push jne add retq cwtl loope sub (bad) fwait int (bad) xchg jmp rex.XB rolb jae lods xchg jmpq or fidivr push (bad) mov int (bad) sbb (bad) jmp gs jo rex.WXB test adc rex.W lock fcoms mov in (bad) pushw jae lea mov imul cmp pop test insb mov out cld mov mov fwait xor jmpq test (bad) enterq roll icebp hlt rex.XB imul fstpl jle je pop xchg add jno jb cmp rex.RX repz fucomip lret rex.WRB loop test xor rcrl xchg pop mov fcomi lods mov or jmp iret (bad) lock xchg outsb xchg jo test rex.RB outsl (bad) pop mov rex.RB icebp imul pop jnp mov (bad) and xchg mov sbb loop and pop rex.WB rex.WRX sub jns out hlt sahf movslq add (bad) retq add insl xchg lods (bad) fwait cmp (bad) (bad) mov (bad) mov pop push fwait out je test xchg out callq xchg mov mov (bad) push (bad) sti (bad) fs (bad) lea hlt pop jne (bad) movabs or (bad) sub jg and ja movabs sub fwait pop lret int3 xchg ss movslq movabs imul std (bad) rol movabs or fldt sbb mov movsb loop rex.WX mov jmpq or (bad) push and gs cmpsb cmp add fisubr pushq mov mov xchg stos in mov mov push pushq jb sub jle (bad) mov (bad) rolb jb repnz jl or jrcxz stos scas pop pop pop or in mov (bad) (bad) rex.WR (bad) xor lret (bad) outsb add jg movb jp iret mov (bad) adc pop int sbb outsb add (bad) or repnz rex.WRB (bad) stos data16 movslq rex.R rex.WR lea add cmp outsl or mov xchg jp push (bad) test insb (bad) jbe test pop (bad) lret (bad) adc addr32 cmp jle,pn (bad) add (bad) (bad) cmc cs rex icebp and jle ss (bad) jle xor mov out adc add movabs xchg rex.RX retq incb loopne sbb movabs (bad) int (bad) rex.RX out and and adcl (bad) outsb pushq gs (bad) fwait pop pop (bad) fnsave and jnp xor data16 xchg cltd (bad) in fcmovnu out xchg rex.WRX shlb (bad) out cmp ds add lahf shl cmp rcll mov (bad) movsb jns or lret push adc or adc add (bad) sar clc sub push movslq adc (bad) rex.XB sub lea mov stos adc cmp add cli sbb hlt xor popfq cmpsl mov jno (bad) adcb mov sbb stos adc cmp rolb loop scas rex.WRX addr32 stos mov xor xlat retq xchg pushfq (bad) rex.RXB movabs mov int3 fsubs rex.WR mov cmp clc loop jno enterq mov (bad) (bad) movslq push cmp (bad) sbb jmp mov stos cmp mov xchg outsl loop push int3 or pop sbb loop pop jle out idivl rex.WB add subl in mov scas rex.WRX fldenv mov rex.WXB lahf push adc loopne jl jl outsl pushfq push callq (bad) in (bad) rex.WRX fldenv mov xorb (bad) movabs or and and mov or jmpq in jns mov cld mov callq (bad) sbb add fwait or icebp and pop sbb (bad) pop pop jge outsl jle rex.WX or pop pop push (bad) adc (bad) jae xor pop es mov xchg sti fldln2 fildll icebp retq pop lahf cmp movabs xchg jne mov (bad) rex.WX xchg adc mov rcll pop (bad) rex.RB mov mov scas jmp retq movsl push gs pop pop (bad) push rex.WXB rex.WRB movabs rex repnz xor xchg test mov rex.XB in xchg add add pushfq (bad) pop push push pop cmp notl mov outsl adc mov jrcxz xor mov adc add je (bad) fs rex.X sub loope pop rex.WRB push adc mov rex.X rex.WRXB jb pop fs pop and pop add add add jne sbb mov movabs andb iret adc rex.B ja movabs cmpsl and jle cmc xchg jle nop rex.RB ss mov xor test sub outsb in movabs enterq in cmp (bad) pop sti out (bad) and sub (bad) cs scas sarl pop and neg lret outsb rex.RX xchg outsl stc (bad) push ffree (bad) ja sbb jmpq xchg (bad) rex.W ds jno mov adcl sub (bad) cwtl jo addr32 rex.WR cli out rex.W sbb loope cmp in stos (bad) int sti stos push (bad) cld adc mov or movsb xlat popq rex.WB or lock rex.WRX rex.WXB rex.X insl rex.WRXB (bad) adc or outsb repnz rex.WXB pop lods rex rex.WXB sub js (bad) xor mov (bad) (bad) xchg xchg jne sbbl (bad) jrcxz add mov data16 gs jmpq mov addr32 xchg pop push jnp add or mov and loop loop jle in mov push repnz cmc movsl sbbl and jo cmp cmp cmp callq jmp and xchg sub fs xchg rex.WRX rex.WX out xor pop fucom and xchg callq in leaveq mov xor test pop pop xchg (bad) lret rex mov jb xor (bad) xchg cmpl xlat sbb (bad) loop in pop (bad) mov mov add fcompl leaveq xchg movslq out stos or test cld pop (bad) pushq sub xor fbld lods cmc mov andl addl push xchg cmpsb add (bad) callq mov jne sub xor mov pop (bad) rex.WRX (bad) rex.WRB test cli pop je rex.WXB (bad) gs mov and jg jne in imul xchg jle mov mov je insb retq (bad) sub add in test mov push jl pop or lret callq jnp xor pushq (bad) rex.RB fwait pushq sbb int (bad) loope or pop rclb (bad) (bad) stos (bad) xchg xor sbb rex.WXB mov adc sbb rex.WX mov mov lsl (bad) push pop rex.W es sbb sub pop (bad) adc jle mov pop pushfq (bad) add addb rcrl xchg rex.WXB push (bad) rex.WRX rex.RB ficomp rex and mov lock in fcoml jbe shrb outsb (bad) xchg (bad) sbb xor (bad) int cmp xchg mov mov or pop fwait insl mov iret test sbb icebp jrcxz pop jl add addr32 mov popfq cwtl push sbb (bad) outsb scas adc test sbb lret rex.B rex.WX repz lods jmpq (bad) test or pop (bad) or pushq lea xor pop and imul push (bad) push in test pop (bad) mov pushq adc movslq (bad) movsl pop pop mov adc mov (bad) fstp rex.W rex.WX (bad) pop cmp movsl mov (bad) (bad) fstps cs (bad) jo movsb std xor jp mov fiadd outsb (bad) (bad) mov xor (bad) (bad) std rex.WR out mov xchg pushq pop mov mov sub jmpq imul or std rex.WRB rex.XB imul mov push in mov mov and xor icebp xchg test int3 lods out sahf rex.WRB (bad) (bad) mov sarl xor adc and out rex adc bnd test jbe repz add (bad) int xor (bad) mov in jrcxz in xchg mov mov fsubrs (bad) (bad) and cmpsb or (bad) jo (bad) data16 movabs (bad) lods cmpsl mov sarb jp negl mov rex.RXB or pop xchg test rex.WXB push (bad) clc add mov mov fisub xchg push pop (bad) jbe (bad) pop adc rex.RB lods gs imulb iret rex.WXB or mov push rex.WR enterq pop mov xchg jl cmpsl sub enterq insb and xchg (bad) adc xchg push imul jge (bad) (bad) (bad) pop pop fistpl imul jae fidivr mov test sbb mov mov pushq cmp icebp jns lock imul cmp repz or or adc ds out and jge loope (bad) movsb xchg insb lock xchg rex.WRXB bnd pop mov xor (bad) (bad) out (bad) (bad) (bad) loope lods adc test lret mov mov test xchg push mov push rex.RX test addl sbb adc scas (bad) in icebp add in xchg xor (bad) nop rex.X hlt mov sbb mov pop adc jmpq scas (bad) fwait jb sbb pushq stos stc (bad) mov jmp mov callq jae or (bad) stc sbb mov loopne mov (bad) repnz add test cmc and imul xlat mov hlt cmpsb ja (bad) testl cwtl add jp pop adc loop rex.WRX xchg jne or (bad) xlat rex.RX mov (bad) (bad) sbb xor jmp test or mov mov mov adc rcr (bad) jno rex.WX (bad) callq (bad) (bad) movabs (bad) movabs loop (bad) clc outsb rex.X hlt push mov xchg adc repz stos sbb and mov std or lret (bad) fnstcw jbe (bad) (bad) pop test push jno mov (bad) (bad) repnz out mov div rex.WX adc lea rclb rex.R sahf cmpsb mov sub jne sbb cmpb iret mov movabs fisub rex.RX rorl mov outsb (bad) sbb popfq callq cmp lea rclb cmpsb scas (bad) mov enterq jno sbb xlat cmpsb mov sub (bad) (bad) sub rex.R out adc roll movabs jmp mov retq data16 rex.WRB fimul and popfq or rex.WB mov in loope mov mov icebp sub out and (bad) sub movabs or push insl retq fimull xchg ss jl xor add (bad) cmp and movabs pop rclb lea xchg and or movabs mov xorl cmp stc sub pushq xchg ficoml pop (bad) pop jl rex.XB fiadd out in pop test cmp repnz sbb sub pop sbb xchg pop pop pop (bad) adc (bad) push movslq stc mov movsl push xchg callq push sbb movabs push sbb repz add rex.WRXB adc data16 rex.RXB lock in fwait movabs rex.WX fidivrl test jb retq icebp mov jb icebp (bad) sbb fiadd pop adc push fistpll out lret icebp negb loop hlt rex.WXB repz insb rex.RXB repnz sub (bad) push pushq movsl loop vpavgw fsubrl or rex.W rex.RB outsb rex sbb xchg push (bad) jnp jo xacquire or add (bad) (bad) or stc xchg (bad) andb rcl (bad) rex.X adc xchg mov mov movabs cmp pop (bad) xorl (bad) and xchg mov movabs rex.R data16 fisttpll add add jrcxz adc rex.WXB imul cltd pop (bad) rex.XB xor jb out (bad) imul and rorb sarb jnp stos fcoml adc jrcxz mov and rex.WX (bad) pop in (bad) out mov xchg push fidivr scas xchg or adc sbb (bad) repnz jb addr32 sbb fs sub xchg hlt (bad) pop movabs rorl push xchg jne rex.X rol es cmpsl movabs mov incw int xor xor mov sub (bad) (bad) cmp in divps cmpsb pushq (bad) jbe lret xchg out cwtl fwait xchg pop adc rex.WXB jp mov or (bad) push cmp adc data16 lock (bad) out xor pop gs or jl (bad) sub xchg jmpq jle pushfq in sahf push xor xchg rex.XB pushfw jl sub sub (bad) mov sbb xchg mov mov xor rcll adc mov push stos (bad) pop and cmp sbb jmp icebp fs ds xlat rex.WB movabs (bad) add mov sahf (bad) popfq sbb (bad) (bad) mov shr pop (bad) mov movslq (bad) pop ss jrcxz int cmp xchg (bad) or sub sbb cmp jns movabs cmpsl push or faddl cmp sbb push sbb sub popfq add out (bad) jp cmp outsb imul (bad) mov (bad) xor rex (bad) mov movsl incb jno fidivl test in xchg scas xor icebp movslq adc test xor int and out data16 and loop (bad) mov lods fisubl pop sarl pushfq (bad) rex.WRXB (bad) mov scas movsl (bad) pushfq rex.XB ds popfq fisub test movabs adc sbb and mov pop jrcxz es jp rex.RB rex.RX mov pop rex.WRB mull out cmc (bad) imul rex.WX mov mov pop stos cmp sbb (bad) mov xor xchg pushq adc (bad) rcr xor icebp sbb or lods leaveq jbe scas pop adc add mov mov (bad) mov ss pop (bad) in insl lock cs (bad) rex.WR jb or fucomi icebp fistpll jl retq ss push jns (bad) subl mov retq fistpl test outsb flds xor xlat (bad) (bad) xchg movabs xchg mov out sub sub pushq pushfq lret cmc jo jle xor mov push and push mov stos or mov sbb xchg movabs jmpq movabs in cwtl rex.RX xlat push pop xlat (bad) (bad) mov lea rex.RB jmp cmpsl rex.WR and out movl loope or sbb fisubr loop test cmp or stos (bad) out gs (bad) jb ss (bad) push push rex or mov (bad) mov rex.RB pop imul lock repnz scas mov or test rex.RXB push subl test jmpq cmp outsb outsb cmp addl test mov rex.WRB jle movsb out sbb mov rex.B movabs scas (bad) mov push mov or lods jo sbb (bad) pushq fucomi js retq sbb (bad) rex.XB movabs push fsubrs retq test (bad) loop adc rex.X decb cmp jp jbe mov (bad) (bad) adc sbb data16 jp data16 negb xchg callq cmp pushfq cmpsb and lock repnz rex.RXB movabs adc pop scas sti mov pushfq sub out adc and xchg scas jmp test fwait movabs pop out jae retq cwtl sbb (bad) outsb rex.WB in sub jb mov (bad) insb decl pop rex.R pushfq outsb xor (bad) and insl movabs retq jbe rex.WB scas data16 mov push cmpsb jle add add insl shrl loop es imul push add sbb mov pop adc or (bad) mov pushq or loopne or imul jle rex.WRX (bad) stos (bad) in stc scas rex.WB jle mov pop test rex.WX xlat leaveq cmp fneni(8087 stc pop rcll rex.WRXB (bad) in jne add in outsb pushq (bad) sbb xchg out (bad) movsw push pop (bad) adc pop (bad) sti jbe (bad) cld mov movsl cld jle mov mov xorl jmpq jae (bad) cmpsb movsl jrcxz out retq jge outsl mov loope adc lret mov sahf pop fmull mov pop rolb sbb lods rol (bad) (bad) insl lahf (bad) (bad) pop xchg rex.WRX xchg jbe cli jrcxz (bad) lret loop ja jle sub pop sub enterq pop cmpsl pop (bad) mov addr32 lods push fadd test xchg xchg pop clc in jmpq xor test loopne fwait addr32 jo sbb push cmp adc xchg movabs xchg cmp (bad) rex.WRXB repz rex.RXB or int mov or int3 mov sbb and add movabs sti (bad) and add jbe or decl add pop jb mov mov insb adc cmp and movabs sub cli xchg push hlt lods (bad) nop push iret cltd in jb scas mov (bad) out fcompl out (bad) sub cmp (bad) lods outsb rex.R add sub mov movabs icebp rex.WRX js (bad) mov cmp rex.WXB pop jne sub jo (bad) rex.WB fildll loopne xchg or rex.RB adc jns test mov (bad) xchg mov shrb in idivl pop lret mov cmp out mov add pop fsubs fisub in push rex.WB (bad) rex.WXB leaveq rex (bad) mov cmp or pop mov pop or (bad) push pushq int3 shl mov stos rex.RXB fs (bad) (bad) mov cld mov xchg sub cli add iret ds add cmp jne (bad) in mov push pop pushfq push pop and rorb xor (bad) addb (bad) push or cmpsb add data16 sub and in (bad) (bad) xchg rex.WRX pop push xor (bad) sarb (bad) outsb rex (bad) fstl fs or and (bad) or push or je jbe mov (bad) loop (bad) rex.WR repz add enterq cs rex.WRB adc in test mov (bad) jae in rex.B rex.RX cwtl pop sub fimull sub out pop js cmc es and rex out sub outsl pop int3 enterq (bad) (bad) (bad) jrcxz and xor cmp cmp loope mov pop fsubp and adc jns xchg fistp pushfq inc (bad) mov fs loope rex.RX mov (bad) mov mov cmp fisub rclb xchg cli lahf gs or jmpq mov xchg jle addr32 jb cmpsb test (bad) (bad) data16 (bad) js pushq mov mov mov mov rex.R mov sub (bad) jns ja std jno jo lods rex.WB fnsave or stos test and and scas xchg (bad) (bad) mov movabs cmpsb sub mov (bad) or pop (bad) movsl rolb add repz jnp movabs loop leaveq scas ja in movabs rex.WXB xchg ja int xor jb callq fs or lea (bad) add or or iret adc adc (bad) pop push outsb cmpsb or sbb lea (bad) out sub (bad) (bad) push insb jne mov mov mov fwait (bad) xchg add xchg (bad) jbe pop mov mov mov stos rcll sub rex.WR jbe (bad) xor (bad) jg scas (bad) out jl (bad) movslq test fsts push lret (bad) mov rex.RB data16 sub fildll adc rex.X pop xor cmc (bad) sub retq add adc movabs lahf mov shl pop (bad) (bad) test rex.RXB sbb push mov fstps hlt out movabs movslq (bad) movsb (bad) data16 data16 (bad) lods movabs rex jle std mov pop in rex.X ss popfq rex.R outsb test (bad) adc (bad) adc (bad) add fstpl jrcxz (bad) stc lock pop sbb adc adc cmp in stos imul pop xlat (bad) or and sub icebp (bad) jp pop xchg mov hlt (bad) jmp callq jb icebp rex.R (bad) sbb mov rex.WR pop ss imul cs sub mov sub xchg jb pushq js and std hlt out (bad) (bad) movsl pop roll loop (bad) xchg pop test (bad) cmp or movabs adc xchg pop leaveq (bad) or (bad) movabs and mov in (bad) out (bad) or add rex.WRXB (bad) stc (bad) (bad) jbe jae xchg rex.R rex rex.WRB or (bad) xchg sbb sbb xchg adc and int insl movsb pop rex.WB (bad) pop sub test in xchg je orb add (bad) retq data16 (bad) movabs sub (bad) cmp or rclb adc pop insb xchg ffree jnp (bad) movabs push rol jns fisubrl and rorl push rex.RXB rex.RXB movsb jb stos mov test (bad) in or pop and movslq mov out xchg cmc rex popfq and mov cmp in cmpsb es jrcxz (bad) sub insb mov test jl (bad) (bad) pop sub cmp cltd xchg pop nop addl xchg stc jnp or pushq sahf popfq push fs cmc (bad) mov jg sub sbb (bad) or retq (bad) add mov cmp xchg (bad) xor rex.WXB mov mov icebp mov (bad) (bad) ficoml loope rex.WRX xchg cmp mov mov pop loop ja jbe incb pop rex.R mov xor stos test addr32 adc mov add movabs rex.WB cmp insl adc jmp mov fs sub insb (bad) sub mov or jnp jp rex.XB (bad) or jo (bad) leaveq lods sbb stos adc callq xor rex.WB jle cmp jmpq mov sub movabs test mov clc mov xchg repz adc loope movslq cmp pop rex.RXB mov sbb (bad) jb adc sahf cmp in xlat fidivr lock cmp sti sub testl (bad) (bad) mov movabs adc movslq xchg insb rex.WRB (bad) (bad) (bad) rex.W lods jbe (bad) adc and lahf jmp fcomps rex.WX (bad) (bad) (bad) cmp xlat fsubl testl jg iret and push (bad) movabs pop test (bad) je (bad) int3 sti loopne lahf sbb mov (bad) rex.WXB cmc movabs gs rex.WRB rex.WRXB lock movsb or movabs mov sahf mov je cmp pop outsl test (bad) mov cmpsl sbb cmp mov pop mov mov (bad) insl or pop stos sti pushq jne (bad) (bad) xor sub fwait pop negl push mov pop scas mov push pop sti mov ds add pop callq xor fs pop xchg (bad) (bad) rex.WXB sub sbb adc ds (bad) or cmpsl stc jbe (bad) (bad) sbb or sub (bad) rex rex.RX retq js add jrcxz (bad) or pushq pop mov jbe fstpt sti cs (bad) insb in test mov push pop sub pop sub scas cmpsb test add (bad) idivl adc sarb in pop add jne pop sub imul rex.WRXB push loop rex.WRB and xchg pushfq xchg iret jbe (bad) mov andl mov rex.WRB jne outsb jbe cwtl outsb scas rex.WXB stos (bad) xchg adc add cld pop (bad) insl movabs (bad) retq fsubrl and out loope pushq sub pop loope mov rex fldt (bad) (bad) rex shrb movslq mov rex.XB adc movabs mov cmp (bad) fwait (bad) rex.WRX mov in popfq (bad) xchg (bad) rex.R rex.B fisttpll cmpsb xchg adcb push rolb (bad) rex.X in jge cmc imul xchg rex.WRX fs (bad) sub mov out bnd jrcxz mov xchg sub xchg out out js insb andl (bad) or subl mov sub jle addr32 mov push sbb (bad) (bad) cmc mov (bad) cmp (bad) mov rex.RB pop xor (bad) stos jo mov (bad) mov jle enterq push rex.R cmpsb and xor (bad) sub and pop repnz andb pop (bad) outsb shr jmp jno je icebp pop repz std (bad) xor jbe adc fs (bad) js pop cmp jnp (bad) xor scas sbb rex.B sbb adc (bad) add add pop nop cmpsl lock movl movabs or ds and movslq stos movsb addr32 scas test xlat fist enterq jne xor (bad) je sbb add mov test rex.WR mov shll add jbe cwtl (bad) nop movsl sub and pop push xor pop cwtl lret or (bad) cmp movabs xchg (bad) adcb mov mov outsb sub pop rex.RB cmp sub test add pop cmpsb pop sbb rorb jp lods out mov jmpq push or test xor mov ds imul xchg push in rex.B (bad) pushq sbb xchg retq sbb mov (bad) pop or pushq mov xchg pop (bad) sub sub andb (bad) and inc idiv xor pop addr32 mov and jg out loop sbb (bad) sahf mov add (bad) (bad) outsb scas movabs shlb sbb test imul mov jge pop gs mov pop addr32 xchg jmp jb mov push cltd insb cmpsl ja outsb test loope or sbb (bad) gs loop lods in test insb rex.RX rex.X mov sub (bad) adc insl vandnpd sub loop (bad) hlt xor (bad) pop fisttpl mov movabs (bad) cmp enterq (bad) mov jmp rorb cmp rex.RB xchg rex.RB jnp (bad) or insl addr32 repnz sub shl mov (bad) popfq rex.X mov (bad) fs pop lock loope pop fistpl xchg jg cs data16 or mov cmc rex.R rex.RXB push outsb shrb je fs test cli xor retq je mov js notb mov rex.XB stos clc mov cmp fstps iret cmpsb xor pop mov mov mov mov pushfq mov jle or (bad) sbb sbb jb fldl cmp out rex.RX lods cmp imul rex.WX insb cmpsb (bad) stos mov rolb adc out (bad) xor pop rol pop sub pushfq jrcxz scas jl mov andb xchg mov cwtl xchg callq movabs js sbb out (bad) mov movabs cltd xchg jno data16 rex.X push lret (bad) faddl subb sbb cmp vpor retq popq scas out push cwtl jle (bad) mov adc popfq mov in mov jge sub repnz fwait js rex.B ja icebp mov mov out rex.R mov (bad) cltd xchg in adc (bad) lods lret (bad) xor xchg lret out fs mov adc sub rex.X (bad) (bad) or jle mov fs divl sbb jl jne push pop repnz sar jrcxz cld (bad) pop hlt rex.WB scas movsb out rex.WXB and fwait xor fisub cmp ds rex.WB xchg pop clc mov rex.RX rex.RB rcrl retq mov lods xchg jne gs add jae movslq fstps xchg lea in retq mov mov fwait rolb mov fldl mov and repnz mov loopne cltd pop and xchg iret rex.RB sub and lods rclb rex.X rorb stos jbe adc shr mov adc and or enterq (bad) pop out jle cmp push mov rex.WRX loop sub icebp lods cli lods je int outsb pop adc (bad) sub (bad) pop rex.RB xor ficompl (bad) mov adc loopne in jne,pn in loope ss (bad) (bad) movslq repz fisubrl pop mov (bad) (bad) fs es and jb xchg (bad) lret loope (bad) xchg callq enterq rex.XB or jg in (bad) push cmpl ljmp insl fs rex.R push jnp push jbe add and xchg rex.B mov loop adc test mov test in (bad) mov adc cwtl cmc repnz (bad) push and stc imul lret xchg and pushq sbb mov (bad) pushq (bad) xchg repz loopne or test shrl xchg imul (bad) jp pop add mov pop add or outsb cmp xor mov movabs xchg mov rex.WXB pushq cmp xchg mov (bad) xorl jle jb xor roll push mov and xchg push pop push retq sub xlat sbb (bad) add mov test lret rex.WRB test lods or sahf pop popfq (bad) sahf mov (bad) popfq (bad) (bad) mov (bad) jnp lcall lea sbb loop mov test insb ss fdiv or fwait cld (bad) pushfq leaveq xchg mov rex.RXB pop mov test push push jns rolb xchg or (bad) js jnp fsubrl xor jp pop adc inc out push stc mov movabs pop (bad) sbb xchg and lret and fdivs rex.X xchg fnstcw pushq imulb mov cld pop rex.XB or mov insb jb lods or iret repz xchg mov adc (bad) sbb add and jns je adc mov cmp movabs mov test (bad) out add es or icebp (bad) (bad) mov cmpsl fwait movabs (bad) pop mov pop jae push (bad) rex.WB jo xchg pop (bad) mov jmpq test sub movabs sbb and sub pop xchg int3 (bad) decb pop cmpsb (bad) movabs rex.WX xchg lods int iret xchg and (bad) test movabs adc (bad) cwtl lods lret rex.WRB mov sub xchg cmp movsb adc (bad) in pop adc sahf mov rex.B fadds notb in pop es jo int3 add scas pop and out mov xor pop std jnp (bad) gs sbb and (bad) cld (bad) insb pop std pop callq xor jns mov pop (bad) mov out xchg or sub sbb loop addl sub xchg sbb sub (bad) xchg (bad) rex.WXB (bad) xor sub faddl rex.R gs xchg (bad) rol test xchg cld mov mov pop xchg add imul sub sbb clc xor pop movabs rex.X xor (bad) sbb sbb (bad) pop lods pop callq mov stc sub rclb nop ds in (bad) pushq sub (bad) sti jge shrl sbb sbbl or pop scas rcll out jge xchg loopne insl mov xchg (bad) lret (bad) mov cmp (bad) sub (bad) mov outsb (bad) xchg fwait xchg mov js pop sbb mov add jg and mov jnp sbb push loop (bad) (bad) jmp xchg jmpq push pop or cltd je je mov adc pushq icebp (bad) (bad) nop mov mov test movsb push fildll fsubrs insb psubsb popq loopne jae je jo sbb es and stos rex.W adc (bad) lahf jp sub stc (bad) push (bad) cmp cmpsb movsb adc fcompl (bad) or sbb and sarl and pop cmp jmpq data16 sub clc mov pop (bad) pop sti cmp scas in fnstsw jmp (bad) adc rex.W out jle rex.RXB movabs stc lock pop push xor cmp xchg rorb jns rcrb or (bad) (bad) imul fiadd jrcxz pop (bad) stc enterq cld mov mov cmp push (bad) or jp loope pop push sbb in jge sbb movabs rex.WRB nop pop pop pop scas xor sbb pop jb jrcxz mov and pop xorb cmp (bad) pop repz mov xchg outsb rex.XB movslq jg mov cmp insb (bad) add (bad) pop lret rex.WX add mov (bad) pushq loopne pop jle out rex.WRX retq add mov (bad) xchg pop jmp test cltd fldl outsb icebp out and xchg mov std (bad) test out or jg lock jle int cmpsb (bad) mov jno je cmp in movslq rex.WRB ds out xchg or repnz sbb insl fdivrp pop mov loop (bad) cltd nop jb lods pop fxch (bad) mov adcl jbe sub (bad) mov (bad) sub pop (bad) push fsts pop fstpl mov loop fmull mov leaveq push pop cmp cmp mov pop rex rex rex.WRB rex.RX and and xchg test out lahf xor jbe cmp sti repnz jle pop or fcmovnu and (bad) mov pushq cs out (bad) movabs lods movsb loope and and jp (bad) adc or mov and fs sbb (bad) cltd pop leaveq or out xor popfq pop pop sbb rex.WR (bad) (bad) xlat (bad) push jb retq push (bad) pop adc (bad) xor cs xchg cmp icebp rex.RX mov push imul fidivrl cmp rex.RX ss jo add test xchg callq or fsubl mov xchg add or (bad) fbld in fdivrs jrcxz (bad) iret jge push pop fbld (bad) lret leaveq rex.X jmpq and fcmovu rex.W (bad) (bad) fistl xlat cmp shll pop sbbb scas cmpsb pushq xchg and (bad) callq (bad) jmpq mov mov jne pop cmc lahf push xchg test pop or (bad) sbb xor inc sbb cwtl jge mov sub mov mov nop xor rex.B xchg pop retq out loopne fildll jbe (bad) test pop (bad) data16 in rex.WB and rex.R sub cmp vpcmpgtb (bad) enterq xor int3 or add mull pop push movabs pop (bad) mov (bad) push sub rcl adc sbb int pop pop (bad) mov sbb mov cld cmp xchg test (bad) fisubrl loopne retq (bad) lret fs jo xor (bad) jo mov fisubr outsb loop (bad) je adc vpcmpgtd add rcr (bad) jae cmp and fisttpll (bad) add push adc (bad) jmpq rex.WX repz (bad) outsb (bad) fldcw scas rex.RXB mov mov outsl or sbb mov retq xchg movabs cmp and sbb push sub mov add mov adc or movabs adc sbb or push movslq loop rex.RX nop fstpl adc jrcxz movabs pop xchg (bad) (bad) mov subb xor (bad) callq mov add rex.RB pop rex.WRB rex.W cmc in movsl ffreep adc push pop (bad) (bad) (bad) push sub (bad) and sbb mov incl pop cmp rex.WRXB rex.R mov adc pop rclb fcoms addr32 rex.WR gs neg push mov scas xchg ds js out rex.WX rex.B xor scas or jle and in adc and sbb or adc insl data16 and pop ficom rex.WRX mov xor insb (bad) or lret movabs adc outsb lret rex.B (bad) push test add push adc imul xchg movabs (bad) ss test insb addr32 in add xor pop pushq push fisttp (bad) cmc hlt out (bad) pushq push lock (bad) rex.WR add mov nop mov push pop mov lea or sbb rex.WR jno pop sub jo repz scas mov lods leaveq sbb lahf scas sub jb test (bad) sbb (bad) js sub fiaddl cmp lods jg mov xor rex.WX cmp cmp xchg or xchg cld loope pop or rex.WX mov outsl retq xor test sbb outsb push cmp sti xor fiadd js jae fiadd lcall xchg imul (bad) (bad) cmpsb jle stos push test rex lock or pushfq test (bad) rex.WX mov fisttpl lods pop sahf adc imul loop fcmove sti rex.WX mov lods rex.RB stos scas rex.XB and xor add hlt cld add mov repz rex.WRXB (bad) jle sub mov mov rex.WB rex.X callq xchg movsb and movsl pop fist xor rex.WB xlat xchg push leaveq lret outsb lahf movsl push nop addb gs or mov movsb xor sbb fdivrl (bad) (bad) sbb fs (bad) rcrb (bad) and and pop pop xor adc data16 mov or insb data16 and adc test lods pop sub (bad) mov fimul outsb scas rex.R xchg enterq xor xor (bad) xchg sub xor test adc adcb adc jb mov loop rex.X jae mov push in movabs movabs xor lock mov (bad) stc push fs and (bad) je cs scas xor cmp push rex.RX ss (bad) cmp push push enterq xchg rex.R ficom gs (bad) pop sub add cmc mov pop or cmp cmp movabs (bad) es jns rex.WX pop cmp rex.WRB gs (bad) sub and cmpsl movslq sbb andl adc jg add fidivl rex.RXB mov lods (bad) (bad) (bad) mov outsb mov sub fs rorl sbb test mov mov jl fbld (bad) ds fs cli ficomp jae loopel (bad) (bad) xchg test negb enterq rex.B rex.WXB sbb jb jbe (bad) in or in pop mov xchg jbe sbb mov es cmp jns push rex.WRX in pop mov and (bad) cld mov jle repnz lea scas (bad) in stos (bad) sahf push pop adc xchg cmp rex.RB test rex.WRX in cli iret jl push (bad) pop mov adc pop push mov pop jle adc rex.WRX rorl (bad) pushq xor data16 pop pop and jrcxz push pop rex.WRXB mov ss pop lret je callq adc enterq (bad) pop hlt jo lock rex.WR out and movabs mov test rex.RXB movslq insb out mov xchg sbb jge mov rex.WX xlat addr32 mov cmpsl (bad) (bad) sbb pushq repnz pop adc je ds sbb push rex.WXB repnz fs addr32 cs cmpsl and xchg lods add cmc mov push imul pop cmpsb out xchg or mov xchg int3 xchg loope movslq and lods mov bswap std adc sub scas xchg jnp shl (bad) sar jb jbe (bad) add push jl jmpq rex.WB rex.WRX mov (bad) (bad) lret (bad) (bad) pop rex.RXB and sbb adc int pop jmp lock movsb (bad) pushq mov mov xor insl lahf (bad) (bad) (bad) mov pushq stc xor mov retw jrcxz (bad) test adc add mov pop lret rex.WRXB pushfq pop out and xlat push scas int3 out pop push lea xchg rex.WRXB xchg xchg jg sbb mov fs scas pop mov mov (bad) (bad) jrcxz data16 jmp stos pop pushfq rex.WRXB cwtl stc rep retq (bad) incb hlt jo jb (bad) or pop imul retq jb gs (bad) cwtl push (bad) loop (bad) jae loopne mov (bad) scas insl out (bad) (bad) pop fistl mov data16 fist pop jmp orl add pop mov xchg pop mov repz cmp outsb lea (bad) mov cmp cmp add adc mov pop rex.RX or scas gs push fisub (bad) outsb push js hlt rex.WX (bad) cmpsl enterq (bad) cmc sub cld test pop jle mov (bad) gs mov or pushq retq rex sub pop fadds rex.R cmpsb ds test fisttpl pop faddl pop data16 rex clc in pop sub lods adc ss test pushfq test push rex.R rex.RXB (bad) (bad) xor (bad) (bad) adc push movabs xor rex.RB stos sbb xchg out jmpq retq mov scas push mov (bad) (bad) repnz out popq repz movabs and xor pop callq (bad) rex.RX (bad) mov sub ja hlt mov test push (bad) xor cmp fisttpll pushfq movabs sub mov loop mov rex.WX lret out adc stos cmp ja jrcxz insb sub rcl cmpsb jbe sub sahf or jg jno jns and (bad) jns je sbb shl icebp cmp mov shlb loop (bad) (bad) (bad) adc add sbb fs mov addr32 insb jg imul xchg rex.XB sbb add idiv push mov lret cmc pop imull mov xchg movb cmp mov rex.R rex.WRB mov lock stc mov repnz push add fstpl pop and adc fbld xchg idivb jge sahf hlt mulb je repz outsb (bad) xlat push sbb push rex.WRXB jne ds test fsub rex.X test mov movabs movslq xor xchg (bad) (bad) sub fisttpl cs callq ss cmc add movabs mov (bad) repnz int mov sbb test fistpll fidiv pushfq outsl and jb repz sub pop sbb jmp xor adc rex.X rex.W (bad) (bad) or (bad) repnz or lahf (bad) mov mov ffree cwtl not sahf (bad) jp mov int sbb push jbe or (bad) test movabs xor rol roll pop rex.X (bad) loopne mov lret mov mov (bad) (bad) fisttpl (bad) test cmp enterq (bad) jl adc mov rcrl mov (bad) rcl mov (bad) cmp push (bad) xor sbb rex.W mov je std jle movslq rex.WXB mov stc (bad) stos cmp iret stos je jmp pushq add rex.WX sbb test (bad) cmp sahf rex.X (bad) and int test dec and scas sbb stos in iret in sub fisubl mov (bad) add jb pop add int3 rex.XB out sar cmp test sbb int lods mov cmp (bad) loopne jle cmc sti (bad) insb rex.RX jb pop movslq movabs (bad) (bad) fimull fnstenv and mov rex.WB (bad) shrl (bad) lods rex.WX rex.R mov push xchg cmp jmpq sub (bad) (bad) hlt mov (bad) rex.WRB movabs std in push cmp add push outsl jmp (bad) pop (bad) xor fldenv mov es mov shr rex.WR shl xchg movabs mov cmp sub xor mov adc push (bad) (bad) push fsubrs adc in adc lods cmpsb pushq insl pop callq (bad) mov cmpsb lret xchg clc cmpsb loop xor loope jo add mov (bad) xor fcomps sbb movabs out pop adc fcom test lods xor popfq or jle mov rex.XB (bad) push push mov pop pop (bad) cwtl xorl jne stc gs jmpq (bad) cli cwtl and cmp xor pop (bad) pop imul sbb (bad) adc (bad) fwait out xor pop (bad) xchg mov rex.RB mov sahf jae mov test addr32 in shll mov push cmpsl lods push test movsl cli rex pop movslq rcrb sub (bad) pop movslq (bad) or int sahf (bad) sti repnz jo push rex.WXB pop in rex.WRXB loop (bad) je or scas in negl (bad) add (bad) jrcxz fwait push rex.R push andb sub sbb cmp out test xlat fistl (bad) sbb xor shrl mov sbb pop fmull adc sarl jrcxz (bad) sbb popfq (bad) cmp adc mov data16 pushq sbb hlt je je jbe pop mov subb mov outsl (bad) mov mov mov or je pushfq push movsl fs rex.WXB (bad) mov pop mov loopne mov jrcxz cmovge pop jmp (bad) (bad) cwtl fisttpl lea pop add addps or mov adc jae cmpsw gs (bad) rex.WRXB pop lock rorl test jle or (bad) mov mov (bad) push sbb in or rex.X cmp out test movabs outsl sahf loopne push retq (bad) and adc rcrb in (bad) stos jmpq fistl gs cmp or movabs xchg lods add rex.WXB rex.WRX (bad) jbe xchg adc push and xchg cmp scas mov jle movabs (bad) sbb push and or rex.WRXB retq addr32 pop repz out loopne cmp mov (bad) (bad) cs movsb cmp rex.RXB je mov xor insl adc (bad) movabs js pop out cmc es (bad) (bad) (bad) push (bad) enterq pop data16 pop rex.R rex.X rex.WRXB mov addr32 (bad) sub rex.WRX test retq xor mov jae mov notl (bad) (bad) hlt mov (bad) cmpsl imul sbb pop (bad) cmp hlt (bad) stos pop mov xchg mov sbb fs (bad) adc sti (bad) pop xor imul cmp push rex.RXB jge rex.RB out pop jrcxz cmp xchg add pop ss fstpl sarl out cwtl cmc outsl pop icebp fldt or (bad) jb pushfq mov mov mov cmpsl cmp rex.W fs add cmpsb push push and cmc xor (bad) lods cltd sub jo movabs push push (bad) xchg sbb lock xor imul rclb pop rex.WX sub and js rolb xchg imul (bad) sarl rex.X mov pushq and mov xchg out push cmp movsb pushq add loop mov (bad) xor lret rex popfq loopne mov scas push lahf xchg sbb stc stos cmp (bad) mov test lret mov movslq xor adc in jrcxz or adc (bad) loope (bad) jg and sub (bad) jle ss movabs imul jns scas ds pop sti (bad) jo insl lahf data16 rcll psrlw loopne faddp adc adcl add (bad) (bad) jo iret mov in mov mov xor ds icebp jns or add addb jle out pop mov pushq pop insb jmpq jge (bad) fbld mov mov add push popfq mov add cltd (bad) (bad) (bad) xor pop (bad) mov mov loope rex.WR movabs jle (bad) cmp and cmpsl adc or mulb xor gs movabs push jmp push (bad) fistpl xor mov imul rex.WR (bad) push sbb lock pushq fistp push jl mov nop (bad) sbb pop movabs cmpsb (bad) push (bad) xchg jg add retq sub mov fidivrl rex.XB rex.X adc jl mov divb loope scas hlt xchg fist add loop outsb cmp or std xchg pop push leaveq rex.WR (bad) mov jbe iret retq fidivrl icebp pop jmpq xchg sbb pop xchg xchg and (bad) (bad) jns imulb pop movabs hlt mov adc push mov (bad) cld rex.RX hlt push outsb mov rex.WR addl rorl add clc push (bad) pop sub (bad) in jl movd and rex.WRB sub (bad) ss cmp jae iret ds mov mov (bad) jg stos data16 mov xchg imul scas jmpq xchg lea lahf jmpq pop xchg popfq (bad) ja outsl shlb cmpsb cmp sbb push movsl out (bad) scas (bad) js ds pop fs rex.R or pop pop push jbe movabs mov rex.WRX xchg rex.WB test add je icebp sbb mov pop icebp orl jbe mov mov sub cmc (bad) jge xchg test mov (bad) or jne xor sub in (bad) mov iret and ficom (bad) test movsl mov insb sub (bad) or (bad) and (bad) int iret mov sbb mov or data16 adc rex.WRB lahf xor adc je sbb out imul outsb (bad) lret rex.WRB lea movabs cmp add rcrl int jbe and stos (bad) fdiv pop sbb clc sbb mov fiaddl ficom rex.RX insb rex.WX rorb push outsl retq rex.WX mov and fs mov out mov std retq sahf adc mov and data16 fcoms retq (bad) jle out jnp fs pop sbb je (bad) and loope xor (bad) pop fcompl sbb mov (bad) movabs rex.W xor mov pushfq fsubrl xchg sarl mov movabs add adc jle and rex.RB ficompl frstor xor sti callw jle mov subb pop vdivss or out xor movabs mov (bad) push jg sub scas hlt (bad) movsb (bad) ficompl (bad) sub cltd xchg xorl loopne jp stos rolb fcomi in jrcxz movabs movsb rex.WX movsl cmc jb xlat add sbb int outsl rclb xor jb je sbb rex.X retq and (bad) pop or lahf xchg mov xchg fdivl movabs clc in mov jnp loopne (bad) pop rex.WX mov ficomp ss rex punpckhdq fisubrl retq rex.W rex.WX shll andl movabs test (bad) rex.R rex.RXB repnz je rex.X data16 popfq xchg sub and (bad) (bad) imul add rex.WXB jp pop add test outsb xor push cltd jns (bad) (bad) pushq insb xchg loopne (bad) sbb xchg jmpq scas out in sti stos pavgw jp loope insl out adc xchg xchg stos repz push xchg (bad) stos pushq rex.WRB (bad) xor adc lret push rclb (bad) movabs (bad) xchg (bad) lods in insb adc and cmp add (bad) lea movabs enterq cs shll leaveq add rex.WB subl sbb out shl pop stos outsb rorl fsubrl cmpsb pop mov mov mov pop add xchg add push mov shlb (bad) cmpsb cwtl loopne (bad) xlat callq movb cmp mov imulb add stos outsl out xchg sbb mov pop (bad) push (bad) jne rex.WB xor movl xor pop outsb rex.XB movabs out rex.RX rex.WRB (bad) loopel jns jne lea (bad) rex.RXB outsl scas (bad) (bad) mov callq rex.RB (bad) (bad) sub adc scas sbb fstp or add cmc lods xchg jo jno mov fistpl jbe add (bad) mov cwtl pop icebp adc movsb out or and rex.WX jle ss stc pop rcrb lock (bad) cmp clc insb rex.XB push imul loope or xchg insb (bad) stos xchg out lock pop iret outsl outsb xchg (bad) std stos (bad) xlat rex.WRB sub cmp pop movabs cmp movsl mov lods push xor mov mov (bad) mov (bad) mov sti sahf and (bad) push pushfq jmp add mov mov xchg sbb nop mov clc lock add jne fild mov cmp pop rex.X push retq test xchg xchg rex.RX (bad) (bad) xor je mov add pushq sbbl (bad) lods out orb xchg and mov cmp repz leaveq cmp (bad) (bad) xchg mov fldt pushw rex.WRX data16 mov outsb fcmovbe adc (bad) clc mov (bad) outsb mov sbb pop mov (bad) data16 mov (bad) rex.WR stos jbe in (bad) (bad) xor pop pop insb fucomp movabs vpmulhuw xchg lahf pop sbb ficompl rex.R lea or mov cwtl sbb iret rcr fmull xchg incl andl mov int3 mov js movsl popfq pop mov test in rex.X jge mov rex.WB test je rex.RB sub lods cmc cmp (bad) icebp mov pop rex.RXB xchg test sbb (bad) or cmp in (bad) fstps sbb (bad) pop cmp xchg pop jg icebp (bad) mov out (bad) lods stos adc (bad) pop lock movsl rex.WRXB mov adc xchg mov in rex.WX push lret mov lods cltd rcr cmc (bad) jb mov movabs (bad) insl je rolb sub adc xchg or push mov (bad) xchg mov xchg push test sub or movabs fwait xchg (bad) rex.B pop rcll rex.XB push movabs mov (bad) out cmc insb pop test (bad) fisttpll pop add xlat push push sub (bad) andb outsl or fcoms mov ficomp (bad) pop jrcxz mov and in xchg movabs or or scas div movabs sub xchg popfq lods callq test rex.WRB rex.RX (bad) loope rex.B xor rex.WR pushw pop mov lret leaveq mov cmp imull rex.WB mov callq mov hlt (bad) xchg rorl (bad) popfq cmp test es movsb (bad) in lock loop (bad) and and lods idivb rex.RX (bad) retq pushq imul add jge (bad) xor cmp idivb callq insb sbb cmp rex.WRXB data16 jp (bad) jmp xchg loop sahf (bad) gs rex.X pop cltd xchg (bad) mov js pop pushq (bad) adc pop (bad) rex.WRB (bad) mov decb add mov rex.XB pop mov mov icebp pop lret xchg or gs rex.WX mov mov jrcxz je xor sbb (bad) (bad) (bad) add stos lods pop push sbb xchg test outsb pop movsl (bad) xchg (bad) mov pop retq insl push mov sub (bad) pushfq (bad) adc or and fs mov push (bad) jo iret sbb rex.WR movabs jl movabs add mov (bad) rex.XB rex.WRXB es (bad) nop xor mov or ja mov loope imul push in test and rex.WRXB out (bad) sub insb movabs in movabs data16 rex.WB (bad) movabs retq mov fstpl mov rex.WRB movsb sub rex.WRB scas rex.WRB sbb (bad) pop mov out xchg rex.WX (bad) sbb cltd test scas (bad) rex.WB xchg adc imulb xor (bad) fisubr cmp jl rex.WR xchg jb fs (bad) movl rclb add fs mov mov mov (bad) sub lret ja (bad) jnp or pop sbb push fnsave push insb insl ror add xchg (bad) movabs (bad) pop mov fcmovu push addr32 sub cmp pushfq or (bad) sbb or cmp and jns cmp pop mov mov sub sbbb xchg push enterq (bad) repz (bad) xor movabs (bad) pop (bad) xchg push movslq jns (bad) xchg cmp and xchg or add mov cli icebp pop jmp mov (bad) or xchg adc outsl pop fsubrl (bad) movabs pop pop xchg cmc xchg pop pop rol lret mov pop mov and mov (bad) mov pop or js rorb fisubl fsubl pop jns (bad) lret test sbb push or (bad) lock jb leaveq rex.X fs rcll cmp data16 loope movslq retq pop (bad) add enterq sbb ss pushq rex.WR rex.WB add (bad) idivb jge jrcxz imul pushq (bad) sbb or pop adc rex.RXB addb rex.WRXB loope xchg rex.WRXB out (bad) setle and xchg cmp push loope cmpb xor pop sub xchg rex.W test adc jo (bad) jno loopne (bad) xor xor sahf (bad) cld outsb pop and pushq cmp xor rex.B rex.WB rex.RB pop cmp (bad) fimull (bad) adc (bad) bnd mov cmp pushq nop sub fs rclb push retq lods (bad) (bad) out stos jns pop stc xor or xor mov xchg rex.WXB mov insb and or scas jg (bad) outsb pushq repz mov test outsl mov out cmp es (bad) sbb cmp scas jle movabs xlat fldcw jne xchg rex.WRB sub jle (bad) mov mov xor mov (bad) cltd mov gs push sahf andb jle insb outsb xor jae (bad) movsl jg pop (bad) stos (bad) fmulp imul enterq push repnz imul or or (bad) or sub mov or fdivrs jmp push shrl and xchg mov ffree icebp pop (bad) in out rex.X add add (bad) shrl push and pop mov push test push pop outsl data16 (bad) (bad) mov jmpq stc std cmpsb movsl movabs pop rorb xchg adc pop add sub iret adc pop imul outsb (bad) repz xor cld pop jge out test (bad) mov movabs sbb adc pop xchg lods (bad) fstl fsincos sub push cmp repz ds rex.WB fwait (bad) pop and (bad) movabs rex xchg xchg (bad) push push in movslq js jbe sbb test fidivl xor add mul xor insb pop xor lock (bad) lret pop pop push (bad) mov cmp cmc mov pop (bad) adc or pop (bad) mov or repz in mov push int3 pop mov mov rex.W fdivrs repz in or (bad) (bad) pop negl icebp pushq (bad) icebp pop in pushfq ror (bad) add pop ja,pt rcrl insb andb lods rex.WR (bad) rex pop mov movsb (bad) cmc lock pushfq (bad) iretw sub cmp sub xchg jle std (bad) mov data16 (bad) (bad) push adc rex.RB xchg fnstsw shrl gs int3 cmp pushq xchg (bad) fwait pushq add sbb or rex.WR callq (bad) mov (bad) (bad) push loope adc pop cmp xchg clc rex.B ss nop test add mov sbb fwait outsl cli divb stos (bad) out movslq sar (bad) (bad) insl cwtl mov mov insb cmpsb pop (bad) fnstenv movabs outsl xor pop mov (bad) or callq adc (bad) (bad) loopne (bad) jp rex.XB xor jg mov sub movslq or (bad) (bad) stc adc (bad) fucomp (bad) cmpsl or shll test outsl (bad) (bad) rex.WB or rex.WB (bad) fdivl (bad) or sub fldcw mov test adcl pop (bad) cli jmpq test movabs jb mov xchg rex.W rex.WRX adc xor (bad) movsl mov movabs jbe push push insl adc mov mov test mov jmp es xor sub adc in xor mov push addl adc callq pushq xchg (bad) loope or mov (bad) jl fisubl or jp (bad) sbb (bad) sbb mov (bad) mov add rex.R adc adc add jge and stc (bad) sub stos pushq jo cmpsb stos mov xchg mov cmp (bad) cmp ja add cwtl or (bad) mov (bad) (bad) (bad) (bad) (bad) int rex (bad) (bad) (bad) jno xor shrb sahf lea int3 and fisttpl cmp (bad) rex.WB mov mov mov imul outsb lret rex.WRXB jmp or or pop out rex.B adc jmpq xlat push xchg (bad) xlat idiv loopne mov outsb mov out or imul gs (bad) jb push movabs out (bad) or xor lods (bad) movsb (bad) lret out test mov rex.RB xchg mov fs std jrcxz (bad) xor mov xchg rol mov sub loopne,pt cli (bad) jmpq in jrcxz sub xchg xchg xchg or ds sbb pushfq mov or mov add mov xor push iret rex.WR cmp xchg mov rex.X (bad) mov lahf fnstcw push nop mov pop out sub movsl pop stos pop mov and pop clc rex (bad) pop (bad) or sbb xor xchg iret fs cmpsb movsl lahf (bad) sbb je xchg and test jbe scas insl jmp sbb or xor (bad) ja push cmp (bad) pop (bad) loope xchg rolb push add add sbb cs xchg rex.X (bad) cmp xchg cwtl retq or pop test rex cs sbb rex.WRXB rex.R cli iret mov (bad) (bad) leaveq mov adc data16 mov cmp movabs (bad) mov adc out (bad) add and xlat xor and and fidivr and (bad) sbb icebp rex.XB jbe xor pop (bad) sub out sbb xor add jle sti push fadd je push movabs xor jae cmp jl jg add iret (bad) and sbb imul movabs (bad) adc rex.RB xlat mov int3 sbb or js (bad) mov adcl xchg xchg xlat repnz (bad) sbb xchg cmp sub xchg outsl fbld (bad) (bad) (bad) rex.WXB xor test sahf rex.R mov jno sbb jl stos jns scas jmp (bad) jle adc lahf cmp lock mov mov cmp mov adc mov orl xor or pushq cmp and xor (bad) sbb pop scas insb (bad) rex.X cmp fs and mov and pop sbb xchg mov pop imul add retq pop add mov ficom add mov movslq insb sahf (bad) stc test mov xchg (bad) add adc adc pop jp out pop mov test pop jb retq (bad) fildll outsb jnp mov (bad) fwait iret in lret idivb cld loope in (bad) sub mov movsb or push icebp sub loope xchg rcl out cmpsb mov rex.RXB sub pushq mov push mov pop out add jl fisttp in or test mov imul mov sbb mov mov sarb jb cmp scas cmp adc add or and stos (bad) cmp int out add jo (bad) idivb adc sahf rorb mov add cmc mov xlat leaveq xor (bad) cmpsb (bad) mov or outsl xlat movsb jne add xchg rex.RB pop (bad) (bad) (bad) movabs rex.WR rex.RXB (bad) mov rex.X push xchg and (bad) movabs mov mov sbb mov cmp fnsave sbb test xor jp (bad) sbb and (bad) mov movslq cmp jae out int3 mov sbb int3 sbb sub bnd add adc sarb rex.WB add push test cmp (bad) mov (bad) jrcxz xchg sbb (bad) adc lret rex.WR cmc gs (bad) mov or jrcxz xor in pop jbe sbb (bad) in notl lcall adc xchg movsl loop mov (bad) movslq in or imul repz xchg rex.WRXB (bad) mov xchg mov loop mov sub rex.XB hlt lods (bad) pop (bad) rex.WRXB or fs sbb xor sbb pop jle cmp pushq cwtl jmp je cmp adc cli ss mov rex.RB in (bad) and (bad) or xchg mov rex.WXB or imul movabs stc (bad) jne movabs jno or rex.WR (bad) cs xor mov cmpl imulb imul or subb adc (bad) in (bad) rex.WRB rex.WRX jnp mov jbe rex.RX cmp test sbb xor sub cs mov (bad) mov loopne add mov jns jnp fsubrl rclb rex.W or es sub incl jmpq mov rex.WB pop xor and jnp add je movsb sbbl (bad) mov rorl (bad) mov pop shlb incb pushq test frstpm(287 (bad) (bad) pop add fwait movabs (bad) mov pushq movabs out jp orb icebp in jb (bad) movabs jo and lahf push pop push and (bad) and iret rex.RB rex (bad) pop (bad) add movabs rcrl sarl popfq pop (bad) or fs int cmpsb cmp mov rex.WRB sub retq add outsb data16 movsb frstor cmc sub mov jae (bad) jmp lahf retq icebp mov add pop (bad) imul in (bad) pop (bad) (bad) fs mov xor jge pop mov pushfq mov jl pop enterq rex.RB rex.RXB xchg outsb xor or adc xchg add out and rolb stos xor (bad) jle mov (bad) adc or mov test mov (bad) xchg sbb (bad) frstor xor pop out lea adc rex.WXB adc test and mov sarb mov pushfq push xor cmp test (bad) movsl jp (bad) imul rcll (bad) add (bad) mov jne mov in lods cwtl (bad) xchg lret add (bad) mov stos test pop jo movabs pop xchg xchg movabs clc push in cmp push rex.WX mov divb outsb lock repnz int3 pushfq (bad) out rex.WX pushq jmp js fwait cwtl pop stos add out int (bad) (bad) xor (bad) adc (bad) loop ds sbb push jb xlat fisubl add mov rex.X xor (bad) pop rorl nop and fcomi retq cmp (bad) movslq cmp pop movsl movabs mov fistl pop or roll xchg repz (bad) pop (bad) sub sbb sbb cmp ja (bad) mov loope pop pop out rex.WRXB rex.RX push push or or xor and push retq mov fistl xor cld (bad) rcr and movabs retq xor pop (bad) (bad) pop xchg fmul rex.WX icebp xor sub and in jmpq rol xchg lret jge in xchg out pop or loopne (bad) insb pop fadd fs xor test repnz in jge test sbb (bad) (bad) sbb mov ss (bad) (bad) (bad) rex.XB pop fldcw xor and fwait sarb jrcxz (bad) rex jb cmc (bad) xchg xchg push push push (bad) lods in icebp jo (bad) ss movsl cmp jp movabs sbb jns and jl pushq mov scas outsb jge pop sub mov (bad) pop rex.WB pop cmpsb subl rex and cmp add movslq pushq pop cwtl adc hlt jmpq (bad) rex.XB xchg cmpsl pop pop mov cli out imul or scas pop pushq lods idivb cmp (bad) je fsts mov enterq xor (bad) icebp rex.RX push add rex.WRX repz jl (bad) mov outsb outsl pop movabs loopne movabs xor xchg sub fistpl or push movabs cmp add sbb int (bad) mov jp and adc mov je mov ss loop rex.RXB lea sbb adc adc rex.RX rex.WR outsb movabs out pop out sub (bad) ficompl (bad) enterq scas (bad) test add lock mov (bad) (bad) pushfq popfq lea repnz (bad) sbb cld cmp sbb (bad) lods jmpq test cmc outsb imul callq jrcxz movabs movslq stos sub add (bad) xchg (bad) jle stos mov popfq mov scas pop sti sub push idivb insl (bad) jbe lods add or testb movsl fwait clc (bad) adc jbe push jb push cmp adc xor cmpl in (bad) fcoml push negb (bad) data16 xchg rex.R pop sti push xor stos pop sbb fldcw adc or or jl out jae and cli push (bad) jo pop rex.RXB test movabs xchg pop mov lods int pop hlt jae (bad) push or add (bad) jo adcb jle cmp lock cld stos movabs and ffree (bad) loop push insb insl xor push (bad) cmp imul je cmc loopne vmovhps mov rex.XB (bad) push cli movabs pop rex fcoml lods orl movsl fadds pop je (bad) xor loop fnstsw (bad) (bad) (bad) movabs jne rex.WRX rex.RX mov pushfq fldenv stos mov jns stc add add pushq mov retq callq fisttpl int3 mov xchg cmpsb lods xor cmpsl pop and jno pop (bad) out rex.WRB fs sub mov xchg xor push pop add fdivl (bad) insl sbb fs push sarl loop (bad) test xchg xchg or rcl stos nop mov mov (bad) insl lods (bad) jl (bad) pop push add (bad) movslq sbbl or movabs stos and std xchg push sub (bad) jl (bad) adc leaveq pop movabs fcoms cwtd icebp (bad) or (bad) test rex.RX out and fist rolb lret hlt jno movabs in mov (bad) cs fidivl data16 lods sub (bad) test xchg xchg mov retq sbb (bad) mov out add insb add in jle movabs mov cmc jo bnd mov rex.WRB fs mov (bad) repnz je rex.B callq jrcxz mov stos lods add rex.WB movslq cmpsl test xchg imulb (bad) rex.WB ja in lea push xchg and pop (bad) mov ds in push rep jnp and movabs xlat and retq (bad) add mov adc stos mov (bad) sbb mov push mov test pushq rex.X rex.RB iret sbb jo (bad) fimul or movslq shrb jae orl je jne push adc xchg xchg pop loop fcomps outsl (bad) (bad) adc xor add sbb sub (bad) test (bad) gs and xor pop test fbstp jrcxz pop ficoml scas lret rex.WRB pop (bad) int push sbb pop mov rex.WXB mov push scas in pop mov mov std jge adc and rex.WX sbb (bad) cmp (bad) in test pop rex.W and nop (bad) pop xchg iret rex.X sbb rclb pop add sbb sub sub xchg addl rex.WRXB fs retq rcrl hlt pushq movabs (bad) fistpl or addb rex.WXB jge (bad) or ss (bad) repnz (bad) cmc cmp sbb and jno add or (bad) fisub mov in out jle jrcxz (bad) jne sahf in adc adc insl movabs rex.RX pop sub fldcw or jae out data16 insl (bad) es add lret xor (bad) je jg lock sbb jle jrcxz mov fdivrl scas pop (bad) adc in push iret movslq adc repz cmpsw mov xor (bad) cli xor out out cmp lret pop and int (bad) scas fisubr mov cmp jp jl callq push pop rcll add mov pop jno sbb out loopne mov insb out movabs mov sub js stos mov (bad) rex.WXB cmp jmp movabs in jnp jb (bad) fs or push mov pop jne xchg fild movslq rex.WRB and pop adc (bad) pop xchg mov sbb lods mov hlt movabs mov pushq mov xorb je adc rex.WRXB rex.WXB jae shlb xchg jb xlat push sub jle rex.WRX mov repz mov mov rclb imul sbb (bad) cmpsb cmp mov jmpq lock xchg (bad) rex.WR lods movabs out pop (bad) rolb (bad) rcrl cmc enterq rex.B jb mov add mov jrcxz cmc (bad) retq popfq (bad) xchg in cmpsb insb pushq lods (bad) (bad) cltd (bad) imulb xor jns mov xchg fimul movsb (bad) adc mov rcll jg (bad) (bad) push mov pushq mov in jge (bad) (bad) (bad) (bad) stos pushq mov nop test pop cmpl mov fsubp insb mov pop (bad) pop jrcxz fstpt pop pop fsub outsl sbb adc (bad) (bad) mov (bad) jl adc fmull out jg jns out adc mov jae and pushfq in mov sbb imul in movabs rex.RXB rex.WRXB jrcxz mov xchg push xor pop xchg rex.WRB adc and cli stc pop fisub sahf lahf and cmp push je cmp in (bad) sbbb je mov gs movabs rex.WR (bad) (bad) out scas leaveq mov jmp hlt scas cltd sub jrcxz movabs mov cmc (bad) adc lods cmp movsl int3 (bad) xchg repnz rex.WRB jrcxz push fmul shll mov sbb jb stos add (bad) (bad) ds pushfq push mov xor sbb xor and nop callq mov (bad) cmp out jno add fisubr and (bad) (bad) in movabs fildll movabs negb xor (bad) xchg pop cli xchg jno (bad) ja data16 sbb (bad) lea xchg jns cmp cld out and leaveq mov pop and rex.W add (bad) xor cmp sti mov pop and adc je loopne rex jp cmc (bad) test adc (bad) (bad) adc leaveq xchg clc popfq cmp rex.R jrcxz mov xor mov pop push jno jmpq mov gs leaveq xchg jg (bad) adc (bad) xchg loopne callq pushq sbb sub fnstsw xchg mov mov cmp xor lock mov rex.WXB gs mov add rex.R test pop (bad) (bad) rex.XB and out or lea (bad) xchg sbb je rex.RX retq (bad) movabs push rex.RXB sub mov data16 hlt push add cld add xchg sbb (bad) (bad) fistpl add scas (bad) mov lret movslq lea (bad) xor rcrl je sub push rex.R sbb test fs (bad) mov jmpq jno (bad) jmpq mov pop clc add clc rex.WB jbe rex.RXB add (bad) (bad) cmpsb mov rex.WRB cmpl xor sbb jp outsl addr32 pop callq sbb sub (bad) fstps or enterq xchg sbb ds (bad) cmpsb sbb sub outsl orb xchg or sbb repz rcr fidiv pcmpeqd cmpsb rex.WRB (bad) mov adc or cmp (bad) out cmp jo rex.WRB cmp rex.R fildll sbb out sub sbb sahf sub jrcxz (bad) xchg xchg rex.WB rex.X xor fcomip add (bad) stc jb jg (bad) jne iret in in xor (bad) (bad) mov (bad) (bad) cmp and movabs jle lods sub in scas sbb (bad) movslq rex.B lock callq movabs xchg loop loope (bad) lods scas cmp or push mov jb movabs out sub rcrb pop (bad) adc mov (bad) pop (bad) hlt xor pop incl xchg (bad) (bad) sahf pop in (bad) orl callq (bad) mov lret add (bad) sarl add jl jbe movabs fidivl add rex.W xor or rex.WXB outsl pop pop incl rex.W add xor cmp mov mov xchg adc test mov (bad) cmp push lock xlat retq es rorl pushq rex.WB movsl rex.WRXB stc xor pop fdivp mov (bad) or out lods pop lea notb (bad) mov in fcmovu cmpsb mov iret (bad) (bad) mov pop xor (bad) in cmc fcmovb rex.WRXB add pop fs mov imul rex.X rex.RX lock jae pushfq cmp jmpq ja (bad) pop (bad) jrcxz (bad) or fcomps ds std mov sub (bad) mov (bad) mov rex.XB jbe rex.WXB in stos pop lret or mov ss jnp loopne xchg fs retq fild ficom jle (bad) or pop test jmp xor fcompl movabs fimul xor addb xchg rex.W ficompl rex.WRB (bad) push (bad) loopne adc mov and cltd pop pop sub push ss rex.WRX pop cli sbb xchg xchg add retq outsl movabs mov out int rex.XB imul mov jmpq fldenv lods (bad) test (bad) test push rex.WRX push (bad) in repnz (bad) jae lea cmp mov pop sbb movabs jo ja add data16 xlat or lea jrcxz rcrb (bad) insb es in (bad) pop rex sbb lods (bad) leaveq rex.W rex.RXB loop outsb fist pop lods cmpsl add rex.W (bad) movsl repnz sub rcrb rex.XB loop sbb (bad) nop xchg and enterq mul movabs xchg fcomps (bad) cmp pop sub add loope fucomp mov cmpsb movsl movabs pop cmpsb movabs push out (bad) push mov test fistpl sbb movabs mov es (bad) rex.WRB mov pop sub (bad) jno xchg (bad) rex.R rex.WXB jo (bad) js jbe rex.B movabs mov movabs rex.WRB ror (bad) movabs (bad) (bad) and insb mov jg int3 (bad) rex.WX push icebp xor and and fnstsw sahf cmp sahf sahf xor (bad) adc jae sahf clc lret mov jrcxz xchg test mov (bad) hlt movabs xchg movabs mov xchg cli sbb mov (bad) iret in loop cwtl (bad) in outsb (bad) xor jns sub xor mov mov out repnz pop (bad) idivb mov enterq pop xchg xchg adc fcoms xchg jae pushq fs cli jl adc fisubl xchg rex.WXB mov adc sbb stc or loope (bad) and pop jmpq int3 mov add xor xchg rex.WRX (bad) cld pushfq jmp gs add rex.WB rex.RX xor rex.WR push (bad) adc addr32 rex.XB testb mov fisubr mov push add or (bad) std cmp pop mov add xor adc adc jrcxz pushq in rex.B sub pushq lahf cmp jae gs mov cmp (bad) mov (bad) fldenv pop (bad) sbb (bad) je mov out (bad) xor (bad) xlat mov (bad) loope pop pop jrcxz int3 outsb test sbb pop rex.WR mov pop movsl pop test mov add stos repnz sbb and mov fadd cmp nop callq lock cmpsb jrcxz mov xlat fs data16 lods lods (bad) pop retq fmull xchg (bad) pushq xlat (bad) rex.RB add and xor stos add jne (bad) cmc mov mov push xchg xor jb cli xor add test lock xchg outsb xor pop cmpsb xchg (bad) (bad) (bad) xor test xor mov (bad) mov cmc rex.WB test pop rcl jbe scas mov push std outsb push movslq movabs stc and jmpq (bad) mov and rex.RXB mov je and test cmp sbb movabs out nop pop push (bad) icebp mov jp stc sti sub outsl (bad) mov cltd (bad) sbb sbb popfq loopne icebp or mov rcrl lock test loope and pop (bad) insl test pop loop jbe sbb jmp rex.RB cs (bad) mov or movabs stos movabs (bad) rorl loopne xor rex.XB rex.X (bad) sbb lock movabs lea cmp or mov nop mov cmpsb xor add (bad) xor in and adc rorl rex.RXB add cmp fcomps xchg outsb jns adc and and mov pushq xlat jmpq rorb adc ss (bad) lret pop outsl icebp and rcll (bad) add rex.XB sbb movslq movabs loopne cltd jo push xchg cmpsb jbe fiaddl xor sbb mov (bad) or fwait sbb xchg pushq je (bad) (bad) or (bad) sbb push mov jne fdivrs sahf add or adc rcll sahf (bad) mov sbb jg int fnsave or js mov loop mov or lret in fmul rex.RB jmpq sarb sbb (bad) or pop adc retq xchg fist pop or pop and (bad) or movabs and mov or pop cmpsl pop mov ds movabs fs rex.RXB mov or xor mov mov lret outsb rorb int jnp or rex.WR lret rex.RXB cmpsb jmp xor (bad) (bad) gs (bad) mov pushq fsubl rcll callq fiadd repnz icebp sub sub mov callq outsb or movabs mov cmp lahf adc (bad) rex.WXB out xor adc ds pop adc add lret cmp leaveq (bad) sub es xor and pushq fdivr fcmovnu jl (bad) icebp mov push cmp roll mov adc cltd jrcxz movabs rex.RB and imul add xor push mov xchg (bad) sbb mov rex cwtl cmp (bad) pushfq sbb (bad) mov mov adc (bad) pop mov adc repz rex.WRB sbb gs lea insl lret sbb andl sbb movslq or mov shl sbb lret jg je add xchg cmpsb jb push cmpsb mov loop sbb mov rorb or (bad) pop adc pop add mov sbb mov mov andl mov pop and (bad) (bad) and (bad) (bad) fwait xchg mov lret push movabs (bad) int3 pop in pushq mov and outsl out addr32 jns rex.WX rex.WR push adc in pop (bad) outsb and push fbstp or jle mov xor sti ja loopne psrlq xchg pop and movabs (bad) pop movslq js je xor stos out (bad) rex.WX int lods retq jge ds mov insl scas int adc repnz movabs add cmc sti mull rex.WRXB push out rex.RXB pop outsb sbb scas insl imul push pop xor rcrb subl push pop test or jbe repnz rex.WRB push cmc lods movsb fs outsb (bad) jno out mov pop cmp xor stos and out nop mov pop test rex lods mov mov (bad) int3 and xchg push movslq leaveq lret (bad) ds clc pushq insl add out icebp (bad) sbb syscall mov (bad) adc (bad) jmpq rex.XB ds (bad) (bad) xchg pop push sarb movabs (bad) pop push push retq in xchg lods movslq xorl mov hlt xchg shrl adc mov test std out pop (bad) (bad) adc push cmp (bad) (bad) xchg notb (bad) (bad) xchg pop fisubrl mov (bad) cmp xchg retq (bad) xchg (bad) (bad) jp jmpq sub xchg fild pop lret loop enterq in (bad) cmc loop and mov push (bad) lods stos repz test fist mov rcl or rex.WRB in rex.WXB cmpb cltd retq sub mov nop push xor outsb icebp (bad) rex.WRB cmp clc adc (bad) pop fbstp test rorb hlt (bad) in fildll loopne rex.WRB pop xchg add jrcxz pop addr32 orb add cmp callq test adc (bad) jae jb in pop mov (bad) out scas and rex.WB rex.WR rorl (bad) test xlat rex.WXB nop sahf jrcxz sbb (bad) rex.WRB (bad) es (bad) pop imulb repz xor xor rex.RXB pop sub js rex.XB xchg mov sahf xor xchg je adc mov adc pop or stos and cmpsb (bad) (bad) (bad) xchg (bad) jns in or mov xchg fildl mov xor and (bad) rex.WRB rex.WX pop mov lods fs jbe rcll xor pop mov xchg rex.WRB callq add mov imul fisubl jo xchg add pop and fucomi pop sub or rex.WB fbld (bad) in add mov mov hlt and (bad) cmp (bad) pop add fistl adc scas (bad) xor mov adc mov popfq pop (bad) cltd pushfq pop fisttpl mov (bad) cmp in jne repz jl fnstenv fs pop (bad) (bad) push shll out or fstpt and pop (bad) pop rex.WR rex.R jne stos mov cmp ss test push rex.R sbb (bad) pop sbb rorb (bad) pop gs (bad) iret fcmovbe sti (bad) movabs rex.WRB mov adc (bad) cmp mov in fwait add adc and adc xor cmp in xor sbb sbb (bad) sbb pushfq mov movabs (bad) adc jo push (bad) mov xorb mov cmp je or orb jns cli mov push movsb mov mov pop (bad) movabs mov fist stos cmc pop clc ficoml xchg (bad) cmp xchg std jb test (bad) jg addr32 in jnp,pt (bad) (bad) cmp int (bad) (bad) ror jo push add push divb push out xor nopl sar idivb add cld rex.WXB rex.X xlat xor imul xchg cmp sub xchg (bad) rex.W out cli int3 divb mov sahf cmpsb movabs sub jno pop pop and mov lahf cmp pop (bad) rex.WRB add xor pop cld (bad) mov or pushfq scas mov mov push shrl xchg (bad) out test xor mov fldcw imul movabs and popfq ss (bad) rex.WXB lret rex.WX ss imul rcrl shrb cmc xor mov sub jbe push enterq or (bad) lods (bad) gs adc rex.WX add mov sahf and sbb (bad) mov push cmp jae js mov jmp fs xchg pop xchg add out xor out ja gs or mov pop (bad) push rex.XB ljmp or pop fistp sbb (bad) (bad) idivl mov jrcxz mov gs in jns mov lods mov (bad) out out xor loopne mov fs cmp lahf stos (bad) sub pop rex push pop xorl mov xorl mov and add loope insb ja mov outsb rex.WB rex jne rorb orl (bad) rex.WRX in cmp xchg icebp std cmp sub (bad) xor loope fstps mov data16 rex.RXB int (bad) jo subl notb lea adc jne mov ja (bad) out gs jb (bad) pop cmpl lret movabs out lret mov rex.RX xchg rcl rex.W sbb jle test in imul in mov jmp sbb xchg push xor sbb leaveq or (bad) rex.WX (bad) jg (bad) rex.WRX mov (bad) loopne lret (bad) push repz clc cmp lcall int cmpsb (bad) imul js (bad) xchg jbe jo and cmp mov out loop cmpsb lods xor vpmaxub fisttpl adc mov test js rex.WRXB rex.WRXB cmp sbb out mov callq and iret pop add cld pushq callq (bad) jns (bad) (bad) cs movsb (bad) mov jge fwait lcall cmc rex rex.W jb push push outsb mov outsl out sbb (bad) xchg movsb (bad) clc sub and xchg (bad) mov sub cmc test icebp rex.RXB rex.WXB insb (bad) (bad) jb (bad) icebp sub es sbb and jbe add out insl fnstcw mov (bad) repnz retq (bad) pushq pop rex.RX fdivrl jo repnz hlt pop xor (bad) fidiv in mov adc jge sub lock jae sahf es je in out pop or cmpsb enterq rex.W or pushfq push addl xorl xchg xor loope cmp cwtl (bad) push rex.B rex test imul jle mov and jne test cld rex.RB push lahf xchg pushfq pop jrcxz enterq cmp adc (bad) out (bad) cmc (bad) outsb dec ja negb sbb pop rex.XB rex.WRB addr32 imul pop rex.WRX shll jno rex.WRB (bad) cmp push (bad) scas (bad) (bad) or xchg movsb xor add stos andb or pop (bad) mov lods jae xchg jmpq adc test cmp cmpsl ja pop rex.WRB lret sbb rclb pop hlt js outsb repnz jmp jg cs and adc int rex.X shlb sub loope push cmpb sub and push jge cmpsl xchg add test rex.RX fmuls xor and (bad) in (bad) pushq vdivpd jg mov subl mov add loope lahf (bad) add pushfq sbb test (bad) pop sbb mov or mov (bad) lea jle mov pop lretq jmpq sbb movabs cmpsb pcmpgtw lret pop xor pop add or mov (bad) xchg mov js sbbl fbld ja cmp loop or lret (bad) sbb pop mov ror in xchg add int3 (bad) fcmovne sub mov rex.XB repnz pop je adc in rex.WX mov xor mov adc rex.RXB add cmp rex.RXB mov pop adc loop (bad) xchg xchg rex.W movabs add pop and rex.X (bad) xlat pushq jrcxz rex.WX negl cmc push scas xchg (bad) cmp (bad) or test cmp push pop pcmpgtb (bad) loop pop std push xchg xchg cmp rex fwait (bad) pop jno (bad) and pop (bad) xor test movabs in popfq and fsubl push cmpsb xor loopne mov pop and xlat sbb leaveq int3 or jp jne outsb movabs data16 (bad) sub jrcxz shrb rex.WB (bad) and cli mov popfq mov mov in xlat (bad) sbb sub stos addr32 adc push mov cmp loop fs pop jbe (bad) xchg push mov mov outsl push adcl jp (bad) adc xchg sub jae pop fstps cli sarb mov xchg sbb negb ja imull cmp out mov repnz xor cmp lahf (bad) xchg cmp or cmp outsb imulb imul fsubs (bad) outsb stc cld xor jae pop mov (bad) cmp movsb out movmskps (bad) loopne div retq pop retq (bad) rex.W xor lahf (bad) pop mov or (bad) xchg add pop jmpq sbb xchg pop pop sbb lock divb scas sbb cmp movsl cltd out rcrl stos (bad) pop push (bad) (bad) or mov rex.WX mov insb lret fcoms in xchg xchg lods cmp in or (bad) hlt or jae (bad) cmc popfq cmp out lret movabs add sbb (bad) jb rex.WR xchg (bad) (bad) int3 jp jg xor lods and jae repz rex.RB mov xor fnstcw (bad) push out (bad) callq mov mov mov jge pushq add (bad) in leaveq stc (bad) imull mov jb repz jne adcb movslq xchg gs (bad) out jp js cmp adc retq (bad) mov mov scas (bad) stos pop rex.WRB cmc cmp (bad) lods and add mov xchg pop frstor lahf jno (bad) push lock movslq (bad) xor adc pop (bad) adc xchg xchg mov js fdivrs lret and sbb cmpl je ss and fcoms sbb jae rex.WR rex.WB stos or test push xchg rex.RB test cmpsl repz xor mov fsubp mov ds mov xchg rex.WR rex.WR xor jle addr32 mov (bad) rex.WRB adcl or cli mulb xchg jno movsb in push pop pop xor (bad) ficompl lcall rex.WRX out movsl and xor lods jns jo sub test (bad) mulb jmp xchg orl int3 xor cs movabs movabs fbstp mov orl mov adc (bad) int3 in (bad) fs xor or pop xchg iret rex.RB rex.WRX xchg out xchg rex.WXB pop xchg pop test retq jmp (bad) nop cmp retq cmp or cmp in movabs pushq pop sbb xchg jle mov scas test outsb sub in lock mov push mov outsb in out callq pop jns int3 cmp imull cmpsl pop fstps movsl mov jp mov out jg xchg mov rex.RB mov xor or cli (bad) pop sub xor pop or (bad) fisub lods jmpq shl scas pop in xchg int3 pop (bad) mov mov mov adc (bad) fs hlt xchg sbb fnop iret stos out (bad) outsb or es (bad) xchg mov out (bad) pop faddp add movsl lahf push roll sbb and pop int hlt xor data16 and mov lods jmp lods sub test cmpb mov lret fsubrs gs pop jrcxz adc add imulb movsb mov shlb fstl jge or xlat test (bad) jb retq mov pop ja lret or adc mov cmp rex.RXB in or mov pop negb (bad) pushq push xlat cmc (bad) stos xor sub rex.WX jrcxz jg lods jg xchg insl (bad) in pop pop sbb xchg in sub cwtl xchg (bad) adc out pop ss rex.WRXB push xchg data16 mull movhlps xchg or retq insb movslq mov adc rex sbb pop mov push (bad) cmc add out lock jae mov or jle sub rex.WX insl sbb fst pop mov (bad) rex.RXB sahf scas data16 sub in pop pushfq mov stos or (bad) mov packsswb movabs cmp hlt or js cmovne pop rcrl xchg adc xchg and (bad) (bad) int3 std cmpsb outsb cs adc callq xor loope pop movabs mov mov rcll scas sahf jmp jo rex.W enterq and cmp scas jmp mov push cmp (bad) jle xor cmp mov (bad) scas sub mov clc xor stos insb (bad) popq cmpsb rex.WRXB repnz sbb fstpt (bad) (bad) mov xor jle mov push rex.R sbb push (bad) (bad) lahf fcomp mov test sbbl and jle movslq sahf jle (bad) jae xchg rex.W and jl cmc idivb mov sar test movabs addr32 rex lret out rex.RXB mov stos push and jne icebp xor rex.WX movsl movabs flds insl roll (bad) or jns jnp mov (bad) xor outsb decb push sbb rex.W xchg fisub sub leaveq jge add mov movsb popq fdivrs fmuls adc test rex.WX in (bad) jns and fs jrcxz movabs testb outsb jrcxz jrcxz pop je insl sub rex.X jnp out rolb test insb (bad) movslq pop pop jrcxz (bad) lahf xor lods pop callq (bad) cmp movabs ss es pop rclb xor outsb sbb (bad) icebp retq push ss rex.WB rex.WXB rex.WRX clc jne pop addr32 test rex.XB jle cmp (bad) pop rex.R js pop add jb and test movabs (bad) data16 and stos xchg js jne adc retq pop cltd callq cmc or and stos int3 or rex.WB fwait or int3 sub insb jbe lahf enterq (bad) enterq push imul xlat mov xor mov adc (bad) mov (bad) cmp popfq mov (bad) (bad) (bad) outsb mov pop xchg sbb (bad) lods mov stos mov mov xchg cmp movabs pop (bad) sub push neg fwait addr32 test test xor sbb rex.WRX fs jb sahf sbb jmp insl add or pop rex.WRB xchg adc imul (bad) rex.WXB or (bad) jmp in (bad) in sub clc rex.R mov mov (bad) out lods xor xchg jne cmc loopne pop lret nop movslq adc pushq push sbb and and cmp and rorl in and adc (bad) cmp pop xchg (bad) mov movsb sbb xor (bad) pop (bad) (bad) and outsl (bad) jno (bad) (bad) mov lret rex.B adc (bad) and repz (bad) loopne fmul out rex.W imul pop xor or xor mov (bad) iret mov pop cmp (bad) or jo cmpsb pop outsb iret rorl rex.WB rex.RX and stos mov sub iret rex.WB cmp rex.WRB rex.X shrl fdivl rcrl andb push push pop popq jle jg nop (bad) mov movabs jnp (bad) int3 cmpsb and xchg sbb rex.W jrcxz (bad) jbe push pop sub (bad) xlat pop pop (bad) (bad) push rex.W (bad) out sub jbe cmpsb retq jmpq popfq (bad) xchg xchg cli cmp (bad) xlat (bad) cmpsb sbb hlt adc pop js push (bad) divl and callq rex.RB mov pop in jl (bad) lea data16 out xchg mov sub xchg push sarb fsubr setae (bad) and adc ds mov loop rex.WRXB pop in xor sub sbb add and rex.RB (bad) (bad) adc out lahf (bad) (bad) sbb mov cmp in xlat adc insb mov mov add (bad) mov mov fiadd or mul push test jae test pop jae ss insl out outsb jno mov xchg mov out or xchg movsl push sbb xor jnp repnz add insb xchg lods (bad) or scas and xchg mov lea and xchg and or and (bad) imul pop (bad) sbb rex.R repz pop out xchg loope je push (bad) cltd (bad) movabs rex.RB imul test mov outsb add (bad) mov loope xchg rex.WX rex.R pop jae xchg or mov rex.WB pop jne or (bad) pushq loope or mov or in cmp (bad) cmc rex fbstp psrld xor cmp (bad) rex.WRB add pop out mov (bad) mov mov xor (bad) adc fcoms jb loop (bad) fldt test mov idivl fistpll jbe repz cmpsl movsb (bad) icebp idiv jnp loop pop pushq pop jmpq std ss imul in pop test (bad) sbb adc stos (bad) in (bad) (bad) cltd mov rex add cmp rex.W outsb adc pop sbb cld sub jrcxz jae cmp insl (bad) imul and es jge movabs (bad) gs and sub test xor jrcxz jo mov je (bad) movabs pop sahf or (bad) sbb add (bad) (bad) adc (bad) mov rex.R lods fucomi out ds jns movabs jg mov or out lock movb pop xchg adc movsb adc cli insl jrcxz mulb xchg jmp enterq mov rex.WB data16 out retq sub pop xorb rex.WRXB xchg or add push int3 in jns (bad) cmpsl (bad) jp add in xchg sti adc pushq cmc cmpb retq or xor rcrb cld (bad) je xor cmp mov fwait jbe cvttps2pi xlat retq xchg clc mov pushfq pop test mov cwtl rex.WRXB mov xchg pop fisub icebp sbb push rex.R adc movabs pop lret test rex.WRB mov rex.WR sbb jno test mov or jo imul ja (bad) in imul mov movabs fisubrl rex.WRXB rex.X rex.WRB and xor and je pop jno sub cmp fsts insl lea movabs jae,pn add fisubr out (bad) jle xchg test cmpsl in data16 cmp mov rex.X and rex and (bad) cmpw outsb shll add jns mov fwait xor rex.R neg insb addr32 adc rex.WXB in rclb adc rex.WRXB cmp in (bad) sub push mov jne sbb xchg jbe lods and rex.WX (bad) lock (bad) ficom mov mov outsb bnd pop sbb scas and loope cmp xchg adc (bad) jbe and (bad) add mov jmpq xor mov or cli xchg and jle add xchg (bad) mov rex.W and fnsave add xor (bad) cmp addr32 in (bad) stos xorq shrl add add faddp xor xor rcr jp sbb ja outsb stos mov (bad) (bad) pop jne (bad) adc pop adc (bad) adc loope rex.WXB (bad) lahf lock mov out sbb cmpl and fistl vpmaxub es adc pop divb and sti jg and fwait xchg je cmp xchg fs lods test pop (bad) scas (bad) movsb adc (bad) xchg (bad) sbb out (bad) sub iret pop (bad) adc jns (bad) jmpq out fsubrp jbe and (bad) icebp xor (bad) mov cmp adc icebp pushfq repz addr32 or jne out or mov (bad) sub andl lock rex.WRB fwait (bad) sub test mov sbb (bad) je (bad) out (bad) imull retq scas or fs jg or (bad) cmp fistp xchg pop push (bad) jle jns pop lret sbb jno pushq retq jle mov rep xchg or (bad) xchg (bad) mov (bad) (bad) stc jmpq cmpsb rex.XB jmp stos xlat movsl out movslq sbb mov pushq lods jbe (bad) pushfq lret lods fisttpll mov imul cmpsb movabs push or or (bad) popfq rex.RX stc (bad) mov (bad) hlt cmp out (bad) ficom pop stos (bad) mov fstl shlb push scas test in (bad) loop pop retq sti (bad) mov sbb (bad) rex.WXB rex.W (bad) movabs rex.RXB icebp and sbb lods loope and mov (bad) xor (bad) adc nop in cmpsl (bad) push je or (bad) rex.R rex.RXB cmp rex.R xor cmp in pop pop out (bad) (bad) callq (bad) clc and gs (bad) and cmp rex.WX rex.RB callq pop add mov shl (bad) test popfq sbb scas adc pop adc add fcoms movabs cli mov jmp jl cmp jne pop sub int3 (bad) (bad) cmpsb xchg cli cmp (bad) mov (bad) (bad) and jmp insl rex.X pop jle (bad) std mov gs (bad) vcomisd scas xor (bad) xchg pop movsb and (bad) in stc xor cmpsb stos push cwtl outsb outsb pop sahf fldenv mov or push outsb imul jno out (bad) mov xchg cmpsb movslq jbe addr32 jge scas rclb imul movsl mov out gs sbb idiv js loop add (bad) outsb jae out or adc in pop and syscall addb pop add jg xchg insb callq lahf xchg rex.B mov mov mov pop test push add (bad) adc retq push (bad) mov popfq rex.RB cmp xchg scas test adc js (bad) in loop (bad) test lock cmc in test (bad) (bad) xor rex.WRB mov adcb add push movabs sahf (bad) sub (bad) mov je nop (bad) jns pushfq sbb out shlb xor rex.X (bad) fadds in movabs add rex.W push stos retq pop push shl push popfq lods std mov (bad) ds test fstpt sub outsb (bad) mov hlt enterq jle mov (bad) je mov push cmp in pop or mov (bad) test addr32 or sbb icebp sti jle jbe jle mov pop shlb and (bad) rex.WB (bad) and lret nop fsubrl pop cwtl rex.WB addr32 leaveq rex.RX cmpl mov and pop jl outsl or lahf adc jbe roll movabs (bad) xchg jl test push outsl (bad) xor (bad) (bad) lock or sti xor sub mov sub pop lods icebp out fiadd push pop xor movabs (bad) pop rcl js int xor rex.RB xor pop push xchg mov imul imul pop rex.WB rex.RXB pop or clc cmp out outsb push xchg mov lea (bad) sub in (bad) or scas ds (bad) mov enterq mov je fistl jno push lods test in jb xchg lret or and or add stos rex.WB stos mov fistp mov mov (bad) sub jns cmpsb xchg cmp fs (bad) add (bad) sbb (bad) lret (bad) xor rex.WR push hlt je mov mov (bad) rex.WX imul stos xchg add movsl ja pop (bad) jne outsb xchg rex.X mov (bad) test jle loop (bad) mov rex.B pop stos gs jg rex.WRX out popfq and popfq sbb pop rex.W addr32 rclb add in rex.WRXB rex.WX or adc (bad) rex.WB (bad) jbe ja lods clc jne or rex.WRB cmpsb or sub xchg rex.WXB rex.WXB sbb adc insb and xchg or sub cmp loopne jrcxz (bad) xchg pop in sub pushfq ds rex (bad) mov push fstpl stos adc xchg push pushfq push xchg outsl shrb retq sbb or (bad) imul mov sbb js xchg in jb mov outsl mov pushfq jb xchg xchg mov push cs (bad) cmovg int3 jno (bad) xor jmpq mov stos test imul pushq ficomp movabs jnp pop insl push xor and fwait pop repnz rol cmp rex.WRB mov pop xchg xor negl (bad) fcomp add vmovaps sti cmpsb addr32 or xchg je add cltd outsb dec mov sbb or stos (bad) pop movabs sub shrb rex.WB rex.WB rex.WXB pushq retq fisubr sub cmpsb xchg mov pop callq and jnp cmc pushfq outsl jno int lea sbb push test mov loop int3 add fstp mov or (bad) je (bad) push mov jnp mov (bad) rex.WRB adc shl fldt add mov add (bad) xor loope add and (bad) xor cmpsb (bad) nop mov rex.R rex.W sahf mov int xacquire out push xchg push out pop or (bad) loopne xchg jno ja xorl fisttp push (bad) lret xor mov enterq xor fisttpl repnz or adc lock (bad) (bad) or iret fwait (bad) xor add (bad) movslq xchg lret jbe mov (bad) movabs loopne jb jrcxz xchg mov xchg out insl rex.WXB rex.RXB test add rex.RXB jrcxz sti and (bad) inc or imul rex.R xchg xor mov and add (bad) pop xlat movabs jb xchg (bad) movabs orb rex.WRX in rex.RX (bad) push in rex.WR adc repz xlat rcrl pushq add insb and (bad) add mov pop jl mov (bad) mov lock hlt pop fiadd ss stos iret cmp adc je sub js stc add imul jmp (bad) repz cmp rex.WX test xchg jns enterq insl fmul rex.WXB and rex.WRXB sar cmovl or fdivs or cmp outsb mov loop iret adc je movslq cld cmp (bad) ss cld std stos add jno mov repnz jae rex imul js out movsb lock (bad) jo and adc and jno (bad) (bad) (bad) in cmp xchg clc insl cmpsb roll xchg xor and nop (bad) (bad) ja fsubrs (bad) repnz add addr32 iret loopne rex.RB sar rex.WX xchg clc fildll outsl add or (bad) pop jns rex.RXB data16 pop jge cld (bad) xchg rex.R loopne mov mov or cltd (bad) callq mov lods xchg mov sub or retq loopne pop mov out imulb (bad) int3 pop rex.RXB ds pop add lea (bad) rex.XB (bad) pop sarl cmp jle pop xchg popq jnp rex rex.R (bad) mov mov xor loope (bad) cmp mov xor pop (bad) pop ja imul in sbb push mov fcompl mov pushfq mov push mul xor leaveq lret (bad) (bad) sbb sub (bad) sbb int3 or loop pop popfq (bad) fcomps (bad) sbb sbb cmp xchg mov jb loop mov push mov in mov movsb push (bad) imul xchg cmp (bad) movsb andl movq pop jmpq pushq (bad) xchg or movslq (bad) sbb pop sub popfq xchg mov lret mov pop in sbb (bad) stc xor or popfq xchg and jbe mov sub (bad) rex.WRX data16 and (bad) iret pushq rorb mov stc xor jbe cmp pop rcrq (bad) mov mov hlt jo (bad) ficompl repnz mov sbb mov mov jrcxz movslq (bad) (bad) jbe je movabs and adc push (bad) adc push lods std cltd in cwtl xchg (bad) (bad) mov fs add pop hlt mov adc xchg pop pushq and data16 rex.WRB out jrcxz cmp (bad) cli mov psrlq outsl sbb (bad) add or mov rorb cmpsb in sbb mov xor movsb mov icebp loop adc cmp lahf movslq rex.XB (bad) (bad) pop imul add icebp and push xchg retq idiv rex.WRXB sub stos retq rcr xor mov lahf or mov repz jno sahf mov (bad) callq sub cmp out rex.WRX rex.RX adc rex.WX jb stos mov in jle movabs fisubr rex.WX pushq jb retq jbe clc or (bad) adc (bad) cmp sub out cmp jle js cmpsb mov popfq negl es cmp sub xchg and popq movsl sub movabs (bad) fldcw mov and mov mov jns add mov data16 int3 xor (bad) jmp (bad) lock rex.WRX data16 mov rex.XB jo mov lods stc sahf insl (bad) cmp shrb adc or clc pop (bad) cwtl sbb mov gs push pop (bad) or mov lods (bad) rex.WRX rex.W rex.WX sbb rex.WB rex.WRB push rex.X mov insl leaveq pop mov imul ss (bad) cmp push leaveq xchg (bad) (bad) cmpb jbe jb movabs jae addr32 gs mov div (bad) repz (bad) roll cmpsl pop (bad) movslq jbe imul jo pop lret jno imulb fsubs jbe mov (bad) stos in mulb and mov (bad) push or (bad) rcrb mov and mov pop xchg mov (bad) addr32 or sub (bad) (bad) lock mov xor fdivrs stos enterq jnp fmuls test (bad) pop shll mov or cmp lea imul jle in push cli int3 insb idivl movabs (bad) nop sub rex.WX outsl xchg rex.RB (bad) mov rex.W (bad) in (bad) xor (bad) mov scas (bad) pushq sbb xorb pop (bad) rex.W pop (bad) sbb retq rex.WRB rex.XB sbb sbb (bad) andb cmp jmpq loop pop stos subb fs xor xor lret retq mov (bad) (bad) loop movsl rex.WR lods out fistp movabs mov pop in or (bad) jg loopne pop and scas (bad) mov test movsl mov rex.WRX movslq xchg enterq mov test or xor shll lret fmul mov iret movabs cmp (bad) (bad) mov cltd and fs mov mov (bad) mov repz je xchg movsl push (bad) iret or pop mov orl mov callq xor cmp movsl jbe mov and (bad) push (bad) nop (bad) jno (bad) or test cmc in (bad) mov add loope sahf pop fnstenv cmpsb mov rex.WRX rex.RB rex.RX nop cmp gs xchg rex.RX (bad) cmp fnsave push pop cltd pop mov cmpsb pushq (bad) mov jb movabs loope jg rex.XB fs lods push pop (bad) int (bad) add idivl and cltd (bad) sub (bad) fs cmpsb lea jne fs (bad) rex.WX jb pop imul cwtl sub xor rex.WX mov rex.RXB and callq xchg mov add in (bad) adc jp mov andb pop out (bad) pop sub pushq loope decb (bad) lods sarb xlat cltd mov cmp sub pop divb mov ja out sub xchg retq (bad) (bad) or in sbb outsb add cmp rex.WRX cli jo jmpq movabs mov (bad) adc retq mov mov jns loop (bad) (bad) (bad) or xchg fsubrs retq retq cmp push (bad) sar negl adc movabs (bad) repnz leaveq xor mov and lock out xor xor xchg lahf (bad) sbb out stos pop cmp sbb mov xchg loopne rolb (bad) rex.WB xchg mov cmp sbb in idivb repnz and or (bad) mov cmp pop rex.WB movabs and out lahf pop (bad) ficom rex ds enterq movabs rex.WR (bad) rex.X sti repnz out rex.WB mov in rorb cltd (bad) gs pop pop jge mov mov movsb mov fmuls enterq data16 idiv sub cmp (bad) cmpsb (bad) add jge or (bad) rex.WXB clc xor leaveq mov out outsb pop (bad) fisubrl mov movabs (bad) mov xor addr32 jle adc and and outsb sbb movabs pop sub (bad) xchg cmp retq mov or iret push sbb movsb imul or rex.RB jle insb lods push int and mov or movabs xor xchg (bad) mov push sub push (bad) fstl mov pop adc xor cmp (bad) rex.RX popfq xchg mov addr32 jno cli fldenv (bad) cld hlt je (bad) shrb pop test cltd fwait xchg rex.WRX xlat lods pop rex (bad) rex.RX mov add (bad) movabs push xchg (bad) test imulb rcrl fidivl nop xchg mov loopne (bad) or outsb cmp out es rex.W rex.WRX (bad) ficoml xor fstpl mov test rolb out lock pop imul stos and (bad) mov pop jbe test loop push push callq lea lret scas movabs or stos movabs (bad) rex.WRXB jp xchg repnz pop (bad) jge in mov out movsb scas loop pop mov rex.WRX addl icebp mov frstor pop push (bad) (bad) rex.WRXB push pop sbb (bad) xchg out pop and (bad) xchg (bad) std or rex.WXB mov cwtl movabs in out sbb cmpsb shlb imul (bad) (bad) movabs mov and pop repz and retq pop (bad) jle adc rex.XB xorb mov out rex.WRX (bad) mov (bad) outsb or jno jle mov stos rex.WRX rex.WXB insb rex.RXB rex.WRXB push add mov jbe fldl jmp movsl loop mov rex.WRXB and insb cmc sbb jo adc (bad) (bad) test (bad) incb or sbb cwtl xchg cmp cmovge fdivs pop (bad) (bad) movabs (bad) (bad) (bad) icebp pop mov rex.WRX fdivs cmp jmpq jl jrcxz sbb pop ror movabs xchg (bad) (bad) add jl cmpsl callq rolb add (bad) pop mov js callq and mov (bad) or sbb (bad) in xchg sub (bad) nop vpmaxub pop shrb (bad) rex.WXB rex.X mov stos xchg xlat push cmpsl in adc jmpq pop and int (bad) pop (bad) xchg lret (bad) insl ja add xor (bad) mov leaveq jle (bad) gs (bad) jbe nop push in rex.X rex.WRXB xchg cmp sbb mov sti pushw pop cmp mov mov rcll rex.WRB pop sbb adc xchg or and addr32 (bad) mov jg cmp pop pushq pop jl add outsl and hlt pop sbb roll je sub pop jmpq rorb data16 adc (bad) pop in add cmc rex.RX adc pop in mov pop (bad) je mov (bad) (bad) and and cmp cmp movabs sub pop int3 jg scas (bad) lahf fs jbe cwtl cmpsl pushq pop and out xchg push pop mov pop rex.WB ss (bad) icebp fneni(8087 gs xchg mov lock (bad) push fsqrt and mov add mov fdivrl movabs jo bnd loop movabs loope xchg rex.W cwtl imul mulb leaveq pop (bad) es (bad) xor pop and mov lods (bad) xor rex.WX or retq mov pop xacquire xor rex.B sbb rex.XB and jns callq pop add jnp push (bad) sub jns (bad) or pushq mov cmp movabs jp fistpl jp mov nop pop nop mov jbe rex.WXB fdivrl stc adc loopne pop lods repnz rex.XB in mov add pop movabs add (bad) xor imul rex.WR jno jns nop or (bad) jno (bad) push sti mov xor stc and adc gs push test mov popfq sbb lods rex push rcl xchg lahf rex.B loop xchg lret mov gs jmp xlat in and pop js jl mov adc pop lock fnstsw outsb jno rex.X rex.RB sbb mov (bad) mov scas jg jp stos xchg (bad) (bad) fwait (bad) cmpsb int3 (bad) in in in pop adc push jns lea sub pushq fdivs sbb (bad) sub add movsl js (bad) and cmp push xor (bad) fs rex.WRXB retq movslq mov pop add sbbl in mov fldenv jae loop sbb mov (bad) (bad) push bnd mov stos je sbb rorb pop (bad) xor (bad) mov xchg xor cwtl repnz (bad) je xor sbb in (bad) and xor movabs rex.XB adc (bad) rol rex.WB rex.R rex.RX loop test cmp (bad) jp sti fistpl xor rex.WRB lea mov pop movabs jmp xlat sub cmp nop out sbb mov faddl sbb sub (bad) or xor (bad) rex.RB xchg decb lock or repnz fidivr add cmc jo adc xchg mov jbe (bad) (bad) sbb or (bad) fcomip cmpsl pop ja loop jbe rex.WXB ja rorl gs cmp (bad) cmpsb repz pop lret lock (bad) cmp mov (bad) cltd add jp xor andl es pop mov (bad) cmpsb jbe mov outsb and push test cld js add rex.XB jmp sbb push stos insl (bad) loop (bad) xchg jne pop in or jle pop je and mov add outsb mov xor stos (bad) jns and cmp (bad) sub jrcxz popfq fwait or xchg sbb (bad) jp sbb (bad) mulb pop push retq push rex.X and std (bad) or pop gs lret pop sub (bad) jbe stos (bad) rex.WRXB jbe mov mov ficoml in xor mov or add icebp cs in (bad) test or pop rex.RB (bad) (bad) mov mov test in xor loopne mov sahf rex.WRXB rex.WR fs mov rcl outsl pop rorl push adc test pop insb imul mov rolb sub pop xchg (bad) pop push int3 or fnsave rex.RB scas (bad) rcll jle or mov movabs rex.WRB and fmul retq jrcxz adc adc push (bad) mov jno xchg stos pop xor sbb add push mulb (bad) rex.RX insb mov cmp push mov pop jmpq (bad) mov or out xchg add xor xchg movabs pop rex.WRXB (bad) mov movsb add (bad) (bad) xlat loop sub sbb pop repz in sbbl idiv pushfq xor sub and push pop cmp scas orb movabs jmpq test (bad) (bad) cltd mov adc mov jo jrcxz cmpsb rex.B sarb mov push and rex.WB sub (bad) cmpsb (bad) and (bad) cwtl cmpsl in rex.XB iret jae cmp jle repnz mov rex.W rex.WXB jp cld rex.WB sti sub test test adc repz decb (bad) (bad) (bad) jo (bad) (bad) rex.WX cmp sub fs icebp out bnd xchg cmp pushfq ficompl (bad) mov mov pop jnp sahf mov sbb pop (bad) xchg int3 repnz mov pop (bad) int3 fld rex.WR sarl xor push sbb ja hlt xchg insl pushfq or cld loop mov xchg shr out divl rex.W (bad) adc rex.RB rex.WRB pushq adc fsub mov (bad) icebp movslq fdivrs or faddp stc data16 movabs adc and sti mov (bad) imul rex.RB cmc test sti mov jg (bad) adc (bad) test rex.RXB ds (bad) and xlat fstpt pop pop rclb in rex.W pop outsb insl addr32 or rcrl xor pop (bad) test mov sbb xor movabs callq in (bad) int roll (bad) andb jbe xchg (bad) (bad) jge movsb loop int fidivrl movabs ja pop decb pop (bad) in test pop movabs fldcw (bad) mov loope pop (bad) stc test mov lahf (bad) mov pop cmpsb int (bad) (bad) adc stc jbe xchg movabs jp ss int sbb nop addl movslq adc pop in rclb rex.X mov jb adc pop mov (bad) in or jns ja jmp adc jae xor add xor mov push (bad) pop rcll (bad) stc (bad) out (bad) fsubrp jge cli (bad) hlt mov rex.XB pop icebp xor sub push rex.WRXB rex.X cli (bad) mov (bad) sub sub (bad) rex.WR cmpl mov cwtl xchg push adc rex.RB pop xlat or xor rclb movabs (bad) pop fcmovu mov jmpq lods xlat mov xchg push jrcxz loopne (bad) (bad) sbb cmp cld sbb adc rex.RB jg loope pop jbe xchg (bad) (bad) rex.WXB addr32 cmpsl rex.RX adc rex.WB iret jrcxz movabs mov int and (bad) push out rex.RX sbb and (bad) pop movabs pop (bad) pop jmpq or lahf test (bad) pop lret outsb mov mov stos inc cmp test cmpsb (bad) clc rex.XB loope jg (bad) fcomps (bad) xchg jo insl ds xor mov testb (bad) xor pushfq icebp rex.WB and pop fmuls incb lret ja add xchg cmp shll fcomp add mov xor mov xchg sub and pushq rorb retq test rex.WR cmp (bad) clc push (bad) xorb mov hlt adc push or (bad) adc (bad) xlat adc movsl lock xor repz push out pop xor and popfq cmc outsl cmp sub rex.R mov (bad) push scas insb (bad) (bad) lea andl (bad) pop cmp sti adc (bad) or mov push pop addb mov pop (bad) movsb (bad) lret xor sbb addr32 lods push xor xor or test mov rex.WRX rex.RB jae jno jb (bad) movabs lods rex.WX out (bad) or (bad) notb rex.WRXB out adc (bad) (bad) jrcxz sarl ja outsl in or jo adc add lods xchg cmp enterq rex.B repz mov pushq push rex.WRXB mov movabs lret jno or push (bad) retq xlat mov insb mov je (bad) and pop xlat sbb out (bad) rcl std push (bad) cmpsl add mov jrcxz (bad) (bad) sbb (bad) pop int rex.WXB repz fs movabs test sub or (bad) push jg or repnz gs mov divl mov cmp and int3 sbb sbb repz pop sbb lret mov rex.RB (bad) (bad) jnp xor rcl rex.RX rex.WB std (bad) je,pn sbb push push adc sbb and test pop or cmp xor lret pushq pop outsl cli ss adc xchg in cmp movsb rex.WRB pop scas movslq push ja pop movabs (bad) testl movslq loope mov loop rex.WB lret rcrb rex.WRB lret cmp jmpq sbb leaveq or shr pop (bad) int rex.XB sahf (bad) jbe (bad) mov (bad) (bad) in in (bad) pop sbb adc fistpl ss pop pop sbb lahf jae jne ficompl xchg mov (bad) data16 pop adc jle xor push enterq movslq lret pop lahf jrcxz jp xor movabs enterq (bad) movsb pushq out fs and cmpsb xor in cmc lea cwtl (bad) pushq xchg (bad) mov cmc (bad) out rclb cmp in stos mov stos sub rex.RXB xor cltd mov mov fsubp leaveq insb mov (bad) pop mov jb cwtl jo or fist push cmpsb (bad) jns int3 scas (bad) stos lods jne mov mov mov in jo add pushfq rex.XB xor clc rex.X rex.XB pop sbb sbb sub stos incb (bad) xchg (bad) mov sub jle lret sbb or ds sub add (bad) xor data16 (bad) and leaveq xchg sbb test loop and push push push lods in jnp (bad) test iret adc and cmp sbb jo adc and rclb xor pop (bad) stos ss sbb in in pop in cmp (bad) ficompl sub jge cwtl cmp leaveq movabs sub movslq cmpl sbb lods (bad) sbb push lea xor mov movl and jge jle icebp hlt outsb cmp outsl push fs fstpl pop adc int3 and (bad) fsub mov xchg (bad) push fadd rex.RXB rex.RX int sti mov out push rex.B adc pop (bad) imul (bad) (bad) (bad) lea mov movsl cltd retq push (bad) rex.WRX sbb rex.WRXB lock or cli (bad) std xlat pop setg sub cli test clc (bad) push cmp fistpll push cmp adc and scas mov insl xor outsb (bad) sbb pop (bad) (bad) xchg mov (bad) lret (bad) cmc pop rex.WX in fstpl fstps imul stc mov pop sbb sub xor rex.WXB in (bad) rex.R jrcxz pop adc adc outsb pop and mov loop push xchg adc (bad) xchg gs push lret pop pop fst push adc shll (bad) adc jbe (bad) and gs ficomp xchg outsb pop push rex.WX add in xorb pop push roll mov pushfq in or xorb xchg adc movabs lea retq sbb pop movabs (bad) pop mov xor xchg (bad) sbb adc std stos rcl adc (bad) (bad) (bad) int3 pop mov shr out jno data16 adc mov stos (bad) pop (bad) mov lods rex.WRXB (bad) addr32 rex.WRXB fabs lret rex.WRX movslq mov push (bad) pop xchg enterq pop and push rex.WRX sbb sub in mov rex.WRX pop sub mov xor movsl sbb fsub add push xchg (bad) rex.WX rex.WRX (bad) (bad) pop mov mov lea hlt mov pop xor js xor xchg popfq fcoms push nop addr32 (bad) notl pop in pop out test nop xor rex.XB cld ja std (bad) (bad) xchg imulb mov (bad) cmp hlt loope rex.XB xor sbb jb mov or out cli add (bad) loope xchg je rex.WR rex.WRXB mov mov (bad) sbb pushq lahf add jmp rex.WB jp movsl popfq add and (bad) sub push cmp adc mov andl (bad) rex.WRB adc cmpl data16 rex.RB pushq push movabs pop (bad) (bad) loopne xchg icebp test xchg sbb (bad) pop xchg shll rex.XB stos adc scas pop subb cmp and xor add mov sbb rex.WXB xchg rex loope jmp test in jbe stos rex.WRXB pop out scas (bad) (bad) rcl fidiv cmpsb xchg retq cmp (bad) sbb movb mov add (bad) push repz ja push pop cmp lret pop outsl imul sbb push rex cmp rex.WXB cmc (bad) scas sbb and retq rex.RX scas sbb in (bad) mov and cmp mov fwait movabs jae mov jnp cmc or (bad) push (bad) imul pop test rex.B rex.X rex.WRXB shll rex.RX gs (bad) jbe mov xlat adc and mov imul and sbb rex.RXB rex.RXB sarl (bad) outsb js add ds icebp clc jle hlt or xor sub (bad) mov (bad) cmp lods sub sub fmuls jge test lahf movabs retq xor stos or test lret cmp and movabs rex.WRXB psrld xlat lods insb rex.WRB cmp cmpsb (bad) sbb xchg mov cmpsb xchg (bad) sub (bad) mov fdivrl lret push rorl (bad) shlb pop test (bad) mov in push cmpsb cmp xlat xchg mov jne jae outsl in out sub cmp push (bad) sarl rcrb add sbbb jno rex.RX and pop cmp mov addr32 imul (bad) jge (bad) pushq insb test lods (bad) jge in and (bad) xchg pop pop mov (bad) sarq (bad) pop adc xchg movslq mov jb xchg adc (bad) pop icebp cld data16 insb and std out mov rex.WRXB (bad) jle test xor (bad) jp rex pop adc mov sbb rcrl cmc (bad) jae outsl imul jrcxz xlat xor xchg cmp xchg iret insb mov (bad) adc jmpq xor rex.RB xchg addl sbb or (bad) int3 xchg xor imul fnstsw shll mov cli out jne push (bad) xchg mov xchg ds std and rex.RX rex.WRB rex.WR mov (bad) mov insb rex.RB cmp sbb sbb add repz (bad) jl xchg (bad) (bad) std jne mov xor pop sub fcomps rex.WB xchg and xor rex.X retq and std mov lods pop test (bad) (bad) sub push movsb xchg jle pushfq add push (bad) (bad) lret mov mov out mov cmc (bad) (bad) test loope xchg pop xor (bad) enterq add (bad) (bad) mov xor loop mov mov pop lods or in icebp and jle (bad) cmp pushfq or rcll pop (bad) (bad) idivb sub jb fcmovnb mov xor pop pop rex.WRB rex.B rex.W pop mov adc jrcxz lods xor insb iret (bad) mov xlat adc fistpl cmp jns rcrb xchg add fdiv sbb mov insl (bad) rex.X (bad) push icebp or sbb add mov sbb (bad) mov push sub shll jae insl rex.X and or mov jmp mov loopne decb adc fwait andl repz push std sarl push (bad) rex.WR mov rex.W std rex.WB add outsb sti push and rex.R rex.RB push mov (bad) xor repnz cltd (bad) mov (bad) movabs addr32 sub jrcxz fucom imul fimull sub scas lods (bad) in (bad) sahf out or (bad) (bad) (bad) add je repnz and xlat xor xor rex.WX add scas lret mov ds cmp mov mov cld stc rex.RXB cmp xorl adc (bad) and imul outsb xor rex.WRXB sbb rex.XB cmc mov jge mov or pop pop movsb jae pop jg test roll int3 pop retq add sub jbe movsb pop (bad) adcl (bad) push in (bad) mov and rex.WX (bad) loope callq push push or rex.R rex.WRX nop sti mov in std (bad) test mov and adc adc xor mov (bad) jbe (bad) mov (bad) sub imul adc sbb xchg jg jne sbb js and or lret xchg adc mov pop xchg pushq xlat mov data16 ficoml fucomp loop (bad) fisttpl cmp test movsb loop jmpq sub (bad) insb out mov mov (bad) adc lret out (bad) (bad) stos cmp int3 fdivrl andl cwtl pushq ja repnz push cmpsb data16 stos addl cmpsb sub nop movslq movabs jbe and pop sub callq pop out sbb push (bad) xchg and mov jge (bad) pop push sahf pop mov (bad) pop popfq sbb adc adc lret lahf cmp jo,pn movabs cmc (bad) int3 rex.R fisubl xor add rex.WX (bad) loope xchg movabs in (bad) pop iret push movsl pushfq pop (bad) je out test pop cwtl mov adc lret mov pop fs fcompl fwait icebp imul test xchg fstpt xchg sub jp (bad) mov stos pop scas sbb sbb cmp in adc xchg pop push iret (bad) enterq xchg jge sub outsl sbb add push rex.B lock imul (bad) rcl (bad) mov sahf movabs (bad) or rex.WB mov sub xor cmpb fsubrs rex.WRXB in retq jl rex.RB (bad) adc mov pop test movabs fs sbb in mov outsl rex.XB rex.WB callq sbb in pop jae imul add add insb pushq jne sbb ss scas cmpsb (bad) mov (bad) (bad) rex.X sbb jge adc sbb rex.RB leaveq frstor xchg cwtl mov mov add cwtl frstor mov retq rex.RX sub rex.WRX xchg ficom jrcxz rex.R (bad) sbb jnp and pop push mov mov retq shrb stc lock outsb stos xchg mov js test (bad) or mov retw or jle xor movabs nop loop jle xlat test push movsl in (bad) stos cmpsl movabs (bad) or (bad) loope fistp rorl add test out push add xor (bad) cmpsb stc sub jle (bad) add fs xchg rex.WX enterq jb (bad) sub movabs sub movslq in mov test xchg cs cmp (bad) icebp imul push hlt (bad) or push (bad) (bad) sete or cs and lret jnp xor in stos sahf outsb jo (bad) (bad) rex.WB (bad) xor sbb jge pop callq cmp xor in test lock or subl mov xlat xor (bad) es gs rolw (bad) stos sub movabs mov mov cmp fs xor pop fildll sbb rex.RB rex.R frstor enterq fistpl jge sub insl sahf (bad) pop vpunpckhdq movsb mov jbe push rex.WX cs adc mov pushfq negl xorl pushq pop (bad) rex.R mov ds xor (bad) rex.RXB adc push jo rex.WRX repz lods jle sti xchg push jl je mov jrcxz (bad) xlat in divl lahf or movabs (bad) (bad) mov addr32 (bad) mov lods leaveq hlt retq mov pop rex.WXB data16 (bad) out outsb mov movabs fisttp (bad) (bad) sbb rex loopne and sti gs rex.WRB mov popq (bad) repnz subb insl sub jae imul movsb pop jp sbb loop xor hlt add xor sbb cmp pushq jmp jb jb movabs cli or push movabs sbb sbb insb mov je lcall xor rex.R mov jb scas adc fildll pop add push fcmovnu jne in outsb push (bad) cmpsl jmpq sub pop or outsl repz or (bad) mov nop mov rolb (bad) scas or movsb mov jp jbe loopne add push movabs pop (bad) add adc jrcxz jns pop out adc lret jb stos cmp js pop mov movabs xchg sbb pushq (bad) (bad) lock mov mov mov xlat stos in (bad) jae jle shr mov jno mov adc (bad) push jae push data16 loopne cli pop push jbe add or jmpq data16 mov rex.WRXB stos test lods fisub cmc callq movsl movabs rex.WRB (bad) sbb cmp mov mov rex.WXB shlb (bad) xchg push xchg mov int3 fimul mov int push rex.R addb insb popfq jno mov movabs fidiv ss or outsb push mov rex.X outsb rex.RXB mov lret add movabs (bad) loope rex.WRXB (bad) mov scas retq rex.WRB cmp pop mov mov movabs cmpsl (bad) mov imul mov movsl jge retq xor (bad) lret cs clc mov shll add sbb and pop sbb or or (bad) jno or sbb jnp sub movslq pushq cmpsb mov cmpsl lahf sbb (bad) iret rex.RX jmp in xor jbe out adc sbb push retq add (bad) (bad) test cmp mov and xor fwait outsb popfq fistl sbb (bad) or xchg std frstor push addb mov in push (bad) fimull loope sahf jg pop (bad) pop cmc mov lods fxam rex.W outsl lods test jrcxz push mov xlat (bad) enterq or cmpl jmpq imul gs sahf fcoml retq mov adc pop es pop lods gs (bad) mov add lods mov rex.WRX mov sub xchg (bad) lods xchg gs movabs cmp sub mov jmpq rol mov addr32 test xlat es nop (bad) xor out rex.XB stos jne popq sti mov fdivr (bad) adc mov outsl retq data16 jno fwait push cmpsb lods add mov jp push (bad) test jle sub sahf out sbb or movabs jno or (bad) rex.WX rex.R pop jrcxz mov jle loope (bad) sbb out sub xor ror adc repz xchg mov pop test or mov xchg (bad) rex.WRB popq (bad) (bad) sub out push fwait out jae (bad) mov clc mulb insb (bad) sahf pop (bad) mov cmpps movslq and sbb push fsubs scas fcmove rex.RX or and (bad) and cmp sub movabs icebp sub mov add pop xchg incb rex.RXB out callq lret (bad) in mov movsl out hlt mov (bad) rclb jg roll pop push adc shrb pop movslq (bad) lahf cmpsl mov sub mov out (bad) pop push jrcxz (bad) xor cmp fld1 dec roll rcll pop jrcxz pushfq jnp pop js jbe cmc (bad) test pop push jae movabs sub lea sti (bad) xchg jrcxz (bad) hlt test adc pop (bad) pop sbb add cmp rolb (bad) (bad) cmpsb movsl movabs (bad) jmp hlt adc jp jne addr32 fcomps loope and (bad) callq shrb movabs es fcompl (bad) cmp (bad) and (bad) add sub (bad) pop pop (bad) or add neg test xor xchg pop rolb jrcxz sub sub cmc mov xor and or cmp or mov (bad) (bad) pop (bad) cmp movslq lret pop scas (bad) push sbb xor fist or cltd iret adc xor sarl pop movabs xor mov in rex.X out mov (bad) jg cmpsb in and lahf mov cmp rex.RB add rex.WXB out (bad) cmp push (bad) jbe (bad) in pop pop and (bad) mov (bad) icebp rex.RX (bad) jo or rex.X leaveq pop (bad) jnp sub pushfq hlt repnz cltd xchg (bad) pushq (bad) outsb retq (bad) mov hlt (bad) movabs fsubrl cmpl rex.X rex.XB xchg xchg (bad) rex.WX pop or (bad) cld mov insl data16 pop pop lret enterq cmp (bad) rex.XB pop cltd pop or std jb mov repz jb pop add lret pop and pop movabs data16 mov rex.B jbe jbe cmp (bad) imull (bad) xchg sbb es fidivr (bad) xchg adc adc rex.W fbld push jnp sbb lret (bad) (bad) loopne (bad) outsl rex.XB data16 outsb je and movabs sti (bad) or loop test add test roll adc jnp cltd (bad) jbe movabs add mov mov and callq andl or lods icebp cwtl mov push and xor (bad) mov rol mov (bad) stos fdivrl hlt cmp jmp stos cltd xor push adc je movsl or rex.WB repnz rex.WRX mov jg and push cltd (bad) xor (bad) lock test scas jmpq mov repnz cli add jle xchg pushq scas cmp mov xchg retq (bad) movabs mov sbbl lods rcrb pushq popq pop movsb pop out jp mov repnz fstpl (bad) in cld mov test cmp pop or jnp (bad) mov ja sbb stos sub jo rex.W rex.B mov gs movabs (bad) push or mov rex.RXB mov cmpl (bad) loopne rex.RB cmp (bad) pop fwait (bad) and xchg (bad) adc (bad) push sub rorl pop popfq mov push (bad) or cmp out jb cmpsb sub pushfq in pop gs in movsl adc mov (bad) and fidivr sbb adc mov mov and ficompl xor scas (bad) mov push stos pop push or pop cmp (bad) xlat xor negb and mov and ds add pop repz and sarb adc (bad) retq nop (bad) (bad) (bad) fcomps jge rcrb popfq push in rex.B rex.RB cs mov rex.WRXB cld rex.X (bad) ljmp mov imul mov insb add cmpl adc in xchg xchg jne sbb repnz cld rex.RX pop push adc jbe adc jnp pushq push (bad) and sub add (bad) or push pop sbb loop or push add rorl rolb (bad) mov push mov lret jno movabs hlt (bad) jmp adc cmpsb sub adc and mov test fsub imul fwait imul mov shrl movabs repnz xchg (bad) sahf and repz and push rex.WRB repnz movsb sbb icebp pop data16 mov xlat fiadd jb rcrb in (bad) shrb (bad) imul mov (bad) mov pop imul pop in (bad) popq (bad) mov fild rdpmc subb xor test xor icebp repnz pop mov scas (bad) and out testl rcr imul mov xchg rex.RB mov cmpsl rex.X orb push xchg retq jmp jns pushq jge mov sbb loope test (bad) enterq imul loope sbb jns mov sahf xchg push rex.WB sbb jbe (bad) insb outsl movsl mov (bad) enterq add jge jnp ja rex.RX jb or cmpsb outsb iret fstps push fmull lret std imul jbe movsl add (bad) cmc (bad) xor jno test test cld mov subl in jg xchg mov jb jno add and xchg bnd imul rex.WXB clc (bad) fsts incl outsb jge jno sub pop gs xchg mov xchg xchg loope rex.WRX rex.RB sbb push and sub movabs jb pop test movabs sub sbb movsb mov fs mov mov and lea cli jbe jmp imul rex.WB out clc int mov outsb rex.RX out mov cmp insb xchg and rolb loope movsl sub push add cmp sub jle add (bad) cmp hlt sarl (bad) xor xlat jp and mov rex.WRB or xor (bad) repz or (bad) sub scas imul out or lock (bad) lret out xchg stos rex.RX sub (bad) mov adc or rclb imul stos jnp jmpq sub push cmp stos hlt rex.WR or and pop or pushq mov movl lahf lret jmpq and jne lock adc mov pop lret movsb add (bad) iret outsb xlat sub push push mov mov sub scas jb sbb mov lock push fdivp rex.RX movslq mov sarb pop retq sbb cwtl (bad) hlt (bad) divb xor sbb pop xchg iret stos sub lock loopne mov test repnz es rex.RX pushfq jo (bad) rex.RX fs or mov and repnz rex.RB test cmpsb xchg cmp (bad) pop rex.WRX mov and in loop data16 out jb jo in (bad) pop xchg movslq xorl and jg out push nop (bad) cld push pop sbbl sbb rex.W rex.WX cmp mov jle sbb retq mov adc cli out in push out clc xor mov push iret xchg mov sbb pop xor xchg mov jle and flds cmpsl xchg pushq lret mov movabs and movsl and sbb cld xor mov icebp mov mov data16 lods movsb (bad) adc adc lea retq fwait clc negb bnd (bad) nop pop adc (bad) pop (bad) outsb push leaveq or (bad) jb cltd xchg sbb jmp insl (bad) fs xchg xchg add xor (bad) mov movabs (bad) pop cmc or mov cmc push rex.WRX (bad) adc sub push test (bad) rex.RB and add orl (bad) jmp push movsb int mov (bad) adc xor stos lock in out xchg mov or rex.RB sbb callq cli insb xor out sbb mov rex.RXB cmpsb sahf jge rex.WR rex.WRB xor sbb add or rex.WRX rex.WX push fdivs rex.W out or int3 rex.RB add cmp rex.W outsb loopne lea pushq (bad) xlat clc sti add loopne pushq fmul xchg xchg adc addr32 (bad) adc (bad) (bad) movsl stc pop rex.WXB sbb mov (bad) cmp adc rcl lods imul gs sbb add (bad) in jg js fsubrl insb mov pop push jp retq movsl and clc cld cli (bad) push outsb cmp pop movslq and adc jle incb xor out cwtl sbb fcompl lret xor sbb cmpsl xlat sbb out lods repnz je mov rex.XB (bad) and loope pop (bad) imul idivl movsl and fbstp in (bad) lods int3 retq test mov cmp pop (bad) pushq addl (bad) (bad) push (bad) or (bad) rex.WRXB jmpq in pop cmp jbe or jge rex.XB (bad) pop lahf in jrcxz xchg mov and jge xor adc adc mov (bad) jo outsl gs cmp fstl mov xchg xchg (bad) (bad) jmp jle sbb or cmp jmpq pop sub jle cmp adc xorb (bad) lods mov pop jae,pn clc mov mov out enterq cli sub fs jno sbbl loop and mov scas sub push mov or mov mov jb pop pop and (bad) add inc movabs and sahf xchg (bad) ficompl or xor (bad) lret cmp andl rex.R pop (bad) cmp and movsb ficompl xchg or (bad) repz jmp mov movabs (bad) mov test jle pop sti jbe (bad) mov sbb pop movabs loope rex.WX rex.W data16 out jo pop sar rex.WXB push rolb unpcklps jl pop outsb insl es jp mov cs rex cmp cmpsb imul pushq rex.WRB pop cmc xchg jle (bad) jno cltd mov cmp jbe or movmskps cmp jrcxz push jg mov xor iret xchg (bad) int sarw mov lods cmc push (bad) rex.RX lock (bad) (bad) cmp js mov data16 iret or mov adc xor sbb fisub push sbb xchg push (bad) je test in rex.WRB add xchg pop xchg movsl (bad) push popfq sub (bad) (bad) jb lret pop shld (bad) add (bad) mov or sbb test movabs jge pop sub iret lods push rcr cltd sub cli xlat rex.R fwait loopne retq pop jae (bad) stos in cmp out rex.RX loopne test and scas rex.WX rex.RXB mov in push cs callq xchg data16 (bad) xor callq xor (bad) xor nop outsl push xchg adc (bad) loop (bad) (bad) jg out jae xchg hlt std rcrb rex.RB shll sub jmp repnz callq (bad) rex.WX push test cld (bad) xlat or in rex.WRX rex.RXB lahf out movabs mov pop mov push (bad) pushfq stc movabs cmp lahf sbb rex or scas (bad) imul cmp adc and push es (bad) int3 movabs jne mov push insl (bad) add test loope add and mov gs retq insl (bad) and fist outsl mov push out push movslq sbb mov mov pop movsl out mov cmpsb mov mov imul outsb jnp movabs test pop xor add imul rex.WRB rorb sbb loopne jge mov int3 pop rex.RXB jnp (bad) (bad) stos (bad) sub (bad) cmp cmpsb popfq pop pop (bad) mov imul mov scas pop mov lahf rolb pop cmp nop in imul rex.WXB push pop xor pop stc sub cltd push gs cmp cmc (bad) and mov movabs loop sbb rex.WX clc (bad) adc divl insl je (bad) pcmpeqd (bad) insb pop fs pop adc cld cmp icebp out push int ja rex.WRB test (bad) sub adc pop mov fisubl movslq imul iret mov (bad) std and adc fimull (bad) xchg movslq rep fsubs std test xchg sub out test adc bswap mov sbb sub jmpq cmpsb add mov xchg test mov push clc movabs cmp rex.WR (bad) (bad) cli or cltd movslq retq cs mov cmp (bad) cltd callq xchg xlat jle rclb out (bad) cmpsb (bad) xchg jg sbb jnp outsb (bad) callq mov movslq rex.X loope add data16 imull mov adc mov outsb enterq jmp rex.XB (bad) jmp int3 jo or rex.R (bad) pop mov (bad) test rex.WB (bad) je mov xchg cld mov mov stos xchg mov jg loopne (bad) sbb (bad) rex.WB cmp movl outsb pop cltd mov enterq rex.WX lods pop rcll std (bad) cmpsb cmpsb scas outsl fdivs (bad) push rex.RB sub rorb pop xchg (bad) jg cmp ja cltd nop or pop push stos incl (bad) notb mov pushq (bad) movslq test mov pushq in pop rex.R xacquire addl outsb outsb mov movabs (bad) pop sbbl pop (bad) lods sub rex.WX insl (bad) mov int3 movslq sbb xchg outsb mov adc cmc rex.WX lea in lahf pop mov rex.XB mov jg xor retq pop jle mov and movabs rex.RB xor (bad) pop xor xchg outsl xor fwait push fldl xchg je pushq (bad) sbb (bad) jg cmp xchg test pop xor (bad) stc xchg rex.R (bad) je fidiv js insl and mov xchg sahf jo std (bad) add pop popfq push mov (bad) cmpsl subb roll loopne mov xchg in jge rex.RB adc movsb (bad) and pushq rex.WB andl and add popfq xchg sbb mov insl add mov imul jne ds xchg loope (bad) fcmovu push (bad) mov xor jmp rex.RB mov (bad) data16 pop test nop outsb divl rex.WRX xor int3 sub sar mov decl (bad) mov and lods lret and cmc xchg (bad) jle push rcrl sub data16 out mov movsl or mov (bad) rex.W (bad) rex.RXB (bad) ja add add movsl shll sbb movabs lea pop stc jo xlat pop sub movabs test rex.RX sbb xor imul (bad) (bad) fisttpl mov rex.WRXB out repz leaveq retq idiv (bad) rex.WRX shrl fwait or insb retq iret repz xor je (bad) (bad) or jmp adc cli push loope rcl mov sbb pop movsb je add movabs in mov xchg xchg add (bad) je test rex.WRB add (bad) (bad) stos jae fist scas pop int3 push xor sbb pop push rex.RB ja sbb xor add out scas and cld imul movslq cmpsb rex.WRB punpckldq idiv mov or mov in test shr sub rex.WX xchg retq xchg es test clc add adc in movabs fs movabs (bad) rex.RXB repnz movsl test pop or rcl rex.XB (bad) jle rex.WXB pop (bad) adcl fsubrs (bad) pop adc ss leaveq (bad) (bad) (bad) jp cmpsb movsl movabs cmp (bad) pop sbb lret (bad) sub (bad) pop push mov stc xchg push int mov test movabs cltd mov xor push (bad) mov je adc rex.WX outsb stos push in nop jns pop lods movsb ficom in jne rex (bad) pop (bad) rex.R pop rex.W outsb jae movsl (bad) (bad) movabs (bad) (bad) pop out pop in cmpsl sub sti gs or jrcxz adc rex.XB or sbb decb cmp jl rex.X in rex.WR (bad) sub jle loop sub pushq repz xor data16 mov xor jg es pushq iret jle jo fstps movabs lar cli cmp pop jle (bad) cwtl sbb jge xchg xchg roll ds out pop mov and sahf out retq xor pop sub lret cmpsl lahf mov push rex.W xor rex.WX mov mov (bad) lret jo mov scas outsb push rex.XB mov (bad) or xchg movabs test lods cmp and mov (bad) hlt xor in es pop and push repnz int and cmp mul sub cmp (bad) (bad) xor sbb mov mov mov scas movsl pop (bad) pop int3 ss and push (bad) or pop mov xchg fcmovbe adc cmpsb test xchg and jl mov (bad) sub (bad) pop loope rex.WXB pushfq (bad) add fisttpll mov movsl xadd movabs pop sbb sub (bad) push andb mov (bad) push cmp fs (bad) lret (bad) sub xchg (bad) pop mov lahf or jo or addr32 testl and (bad) subl movabs (bad) cmp mov fistp xor mov (bad) cmpsl (bad) sub movslq and jmpq pop int3 (bad) movabs (bad) std jo,pn stos fcoml add xchg sti fcomps mov movslq rex.WRXB rex.B add in out data16 pop (bad) adc icebp pop (bad) xchg pop xrelease lods imul (bad) (bad) sub icebp outsb outsb fcoml jl hlt cmp andl bswap adc adc (bad) or push mov xor (bad) add add (bad) movabs jnp movabs stc fs rex.RB xor jle fstpt (bad) movslq (bad) (bad) data16 (bad) cpuid rex.WR test sbb or in rex.WX (bad) imul in (bad) adc jg jge fdivrp jmp xchg mov in fs test jo and jle xor cmpsb outsb push (bad) pop (bad) jge cmp (bad) retq cmpsb jns rex.X ss jmp cmpsb in or xlat pop icebp rex.WXB jns sub (bad) adc cmc pop in xchg sarb movabs cmp sbb cmpsb (bad) jg rex.WR adc mov sbb mov (bad) cmpsl mov jmp (bad) movb movsl mov insb jrcxz out (bad) xor retq rex.WRXB xchg scas scas rex.X pop lea xchg iret xlat push ds mov mov and (bad) insl incl jne add xchg outsb (bad) add movabs jge jmpq add rex.B xchg jge movsl ss movabs sbb (bad) pushq fs cmp jb and pop rolb pop idivl xor rex.WB enterq stos cmpsl retq rex.RB mov hlt push xor sub movsl pop insb pop movslq gs outsl mov rex.WX mov cli pop cmpsl sahf lahf mov or rex.WRXB loope sbb sbb sub popfw sarl (bad) adc ss lea xchg pop out and add adc (bad) push rex.WRXB xor jrcxz jrcxz sbb loopne pmullw retq (bad) cmpsl pushq sbb lret cmp in imul jbe in imul movabs jb or movb fimul pop add (bad) (bad) adc test enterq scas pop jle repnz xlat jge sbb (bad) jb sub iret (bad) or and jle roll (bad) out and or out fldt (bad) clc movsl and hlt cmpsl outsb (bad) xchg sahf jle insl in add sbb ds loope mov rex.RX lahf (bad) stc fs mov mov insl callq xchg rex.WB pop in jge adc xor (bad) pushq addl add (bad) rex.WRX movb loope pop jge es mov stos (bad) xor je movabs cmp (bad) loopne (bad) sbb gs pop mov (bad) mov out xchg fcmovbe pop pop (bad) scas and pop sbb scas rex.RX rex.RB pop loopne testl (bad) scas fbld rex.WRXB push lahf (bad) (bad) out movslq jno pop movabs (bad) cwtl add loopne cli mov add pop loop (bad) (bad) rorl pop add cltd jnp pop (bad) popfq imul adc sbb xchg mov fsubs rex.B pop (bad) jl jle mov pop lods push mov xor push rol mov mov jle lret jrcxz (bad) adc push pop fidivrl sbb scas sbb or (bad) mov (bad) push rex.WX xlat repnz out push cs adc shrd js (bad) (bad) out adc pop or rex.B movabs int3 leaveq mulb push jge fistp add rex.WRX outsb fimul fwait pop leaveq pop jmpq sub pop lods outsb (bad) je mov (bad) and push mov pushfq mov movsl (bad) fmull stc xchg jge mov xor jb loop data16 cwtl es xor pop je enterq jbe pop cmpsb gs out (bad) movabs pushq je fistp adc xchg rorl or std (bad) jmpq (bad) test repz rex.XB or mov or ss or mov adc rex.WR movabs pop cltd nop rcrl fstps test out and xchg enterq sbb pop mov addr32 out jrcxz int mov icebp callq mov roll insb add (bad) bnd fwait mov or xchg (bad) repz in pop (bad) cmp movabs sub movabs push or loopne out out hlt (bad) scas loop adc out jb jrcxz (bad) lret in out (bad) fstl andb pushq xchg pushq pop xlat pop fld shrb and sti in mov xchg (bad) and (bad) pop push loope sub mov js movsb ds clc mov js pushq mov movabs lock iret (bad) mov rex.XB jp (bad) mov adc icebp xchg imull jle mov hlt stc jb fistpl xchg push add sete (bad) pushq outsl ficomp cmp je (bad) rex.R mov cmp imul or xchg push rex.W cmp jno mov fistp sbb push add clc or repz jg pop add ror data16 cmp pop imul pushfq loope (bad) rex.WR imulb (bad) (bad) (bad) scas rex (bad) rex.RB fistl int3 or jg insl (bad) fidivrl callq rex.WRB repnz sub (bad) test fimull sub (bad) rcrl push (bad) cmp lock (bad) in mov pop cwtl mov and (bad) sbb mov js (bad) and out scas popq jbe jbe test rex.WX gs mov sahf mov jmpq addl cmpsl sub jns mov rex.X in and fs loope fcomp xadd mov fstpl movslq imul (bad) mov jrcxz jbe xchg (bad) div (bad) ds rex.R rex.WX out (bad) sub (bad) (bad) or rex.WRXB loop repnz cmpsb xchg movabs xlat lret rex.R xor jle nop mov or enterq je rex.WR jb (bad) in rex.WRXB mov fiadd (bad) push sahf jbe jle xchg mov (bad) cmpsb sbb rex.WRXB pop push idivl add and pop adc adc or add (bad) add rex.RXB loop movabs pop (bad) in pop mov loope retq push rex.WRX cmc mulb data16 imul and (bad) (bad) adc lock movabs (bad) (bad) (bad) mov jle (bad) insb popfq push shlb lea or cmp cmp adc add lods mov ss repz xor negb imul cmpsb mov add cmp loop test sub or pop out and shll jmp outsb and lret rex.RB loop rex.WRXB rex.WB xor rex.WX repnz test in lret cmc icebp movabs (bad) (bad) out rex.X loopne (bad) (bad) (bad) mov pop (bad) mov mov mov loope jp jnp jno cli fs (bad) sub imul adc and mov popfq repz jl add ds (bad) (bad) sbb (bad) pop adc (bad) and loop out (bad) xchg push mov rex.XB cltd jbe sbb mov xor pop (bad) jle ror int pop jle push jne add (bad) out popfq pop (bad) rex.WB insb jmpq xor (bad) mov scas loop callw mov xor shrl rex.WRB or mov pushfq adc movabs punpckhwd jrcxz (bad) adc clc xchg rex.RB pop callq enterq add mov (bad) fs mov add cmp jne (bad) mov movsb and xchg adc (bad) and rex.WB rex.WRX addl rorb lret (bad) scas pop pop test cmpsb mov mov pushfq idivb jbe (bad) lret jl xlat and loopne jle hlt xchg cmp fs outsb outsl pop mov cli rex.WRX rex.WRB mov (bad) imul jle cltd xchg cmp enterq push pop rex.WRX pop cmp or mov mov rcrb xchg cmc pop stos pop push push int3 pushq pushfq xchg adc pop movabs cmp loope xchg pop mov scas movabs addr32 repz fs fldl push xchg sbb rex.WXB (bad) pop cwtl pop lret mov addr32 in xor (bad) cmc fstps int cli (bad) gs adc sbb xchg subl xlat sub sub outsb shrb cld icebp (bad) lret (bad) (bad) (bad) add mov sahf lods std out out cmp movabs (bad) cltd add jb in lods rorb fidiv retq mov in sbb mov pop rex rex.B (bad) sub mov cmpsb retq ffree rex imul stc mov (bad) xchg rex.W rex.R (bad) int3 retq rex pop lret repz fstl jle adc test mov jbe or lods (bad) ds icebp adc scas mov mov jge (bad) movabs sti xchg (bad) in sub scas and loope and mov movslq jo jl stc push js mov xchg add jnp in fistpl (bad) ficompl or ds outsb xchg cwtl test rcrb push cmp xor pushq scas repnz xor xchg sbb cmp fwait rex.WB (bad) fcmovb jrcxz adc lods stos mov loope test rex.WRXB mov and pop fsubrs jmpq movabs movabs rex.WR iret and cmp pop insl rex.WX iret decb adc mov (bad) xor rex.R mov ficomp push pop (bad) xchg mov jle es pop add retq outsb icebp fwait jns push fs movsb pop pop pushfq adc mov scas jae rex.RX adc jl mov mov jmp adc add stos insl lahf fs addr32 leaveq rex.WX cwtl jl pop add divl icebp xor je leaveq rex.RB rex.WXB es sbb ds icebp (bad) xor xor jge mov mov cmpsl pop test xchg jno stos movsb stc cmpsb divl and pop and sbb (bad) rcll data16 and gs cmpsb jge scas movsl sbb subl adc test pop shll rorb and sub (bad) pop enterq cmp and nop xchg addb stos add cld movabs or xchg sbb jo (bad) jp ja rex.WR repnz pop xor push add or mov xchg (bad) mov xor xor cmpsl and inc cli (bad) sbb push jle sbb int add add xchg pushfq out xchg pop notb adc iret jne (bad) movabs lods lods xchg (bad) sub mov sub test fdivs (bad) sbb and jmpq retq rex.RX mov test scas xchg jl add fildl rol enterq xchg (bad) rex.WRX rex.B std hlt jb or cltd pop movsl (bad) pop rclb rex.RXB pop xchg xchg (bad) out loop retw or xchg pop (bad) movsl push xchg (bad) pop mov roll lret mov jrcxz cwtl push lock mov std cmpsb push cmc pop loop or xchg mov mov sub cs (bad) gs (bad) and and nop movb xchg addl std data16 pop lea (bad) (bad) and pop sub rex.WRXB rex.RX pop fs pop add movabs mov rex.W retq rex mov push int xor pushfq xor shrb (bad) pop out or cmpsb cld adc lods lahf leaveq xor movslq mov or push fwait cld (bad) movabs (bad) rex.WXB cmpsb out or stos xchg (bad) std repz (bad) (bad) add sub mov rorl out add mov callq mov jno (bad) mov pause sarl rorb adc xlat jl movabs incl mov xchg rex.RX lods (bad) mov mov sbb icebp jle rex.WXB (bad) push lods movabs rex.RX rex.RXB pop (bad) js (bad) (bad) rex.WRB pop lahf loop data16 push sbb fdivl add (bad) pop cmpl mov sbb adc jl mov pop or incl xchg mov jnp add data16 in (bad) pop sub sub loope jg xor rex.RXB imulb fistl and mov sbb cmpl jae pop mov push push mov rex.WXB or stos jrcxz sbb mov (bad) (bad) jb test repnz retq data16 ss add mov or rex.RXB pop mov mov cmp mov pop (bad) lea rex.XB and adc pushfq mov fs div xchg in mov (bad) xchg mov mov jnp ss cmpsb es pop xchg cltd fs jb and push fwait xchg add pop sbb (bad) xorb mov and mov (bad) gs (bad) pop (bad) movsl pop lock xchg xlat and xchg (bad) mov (bad) rex.WR xor repnz cwtl mov pop pushfq movabs jnp cli mul sub rorb (bad) xor loope mov xchg or mov lret popq fbstp fmull lret push mov imul data16 jl lods movabs (bad) fdivrp (bad) scas (bad) leaveq xor rex.X push movslq add jnp movabs lahf callq (bad) (bad) push or fucom iret fs or rex.WRXB loope cmpb xchg xor popfq cmp mov shrb mov xchg pop sub lahf jnp xchg (bad) pop or cmpsb cmp rex.RB rex.W xlat in (bad) jne rex.WB test or push idivb sahf mov jle jmp frstor rorl rex (bad) (bad) and lods stos pop cmpsb pushfq fcoms push test movsl and xchg out sbb clc add jle rex.W or imul xchg or cmpsb rex (bad) rex.R jns (bad) sub (bad) pushq (bad) xor jne mov xor scas (bad) xchg decl xor pop lods in movsb xchg jns movabs sub pop and sbb and xchg adc retq (bad) (bad) sbb (bad) addr32 sub sti (bad) pop add test rex.RX (bad) clc rex.WRXB stc (bad) rex.XB nop jle (bad) (bad) rex jl pushq pushq lods push and divb and or mov movabs rex.WB rex.RX (bad) (bad) (bad) (bad) pop mov pushq rex.R (bad) pop lret jo stos pop (bad) fist inc ss jle in push cmp movslq rex.R rex.X cltd (bad) clc jne (bad) es and and ss gs mov (bad) pop (bad) mov (bad) and push jle iret jbe mov or rex.WXB jmp stos (bad) (bad) rex out (bad) lahf rex.WRB cmp xlat callq (bad) (bad) loope (bad) repnz mov fsts (bad) decb xchg mov fdivrl out push stos loop push rex.WX gs jp (bad) jae pushq mov pop add cld cli (bad) add (bad) xor mov (bad) mov mov popfq mov mov stos jp xchg shl mov (bad) sbb adc sbb scas mov incb cli fldt sub adc (bad) sbb jl and movslq data16 xchg mov push (bad) jmpq lods pop jbe out movsb xchg adc add imul push pop rex.WX xor fisub fiaddl ror fisttpl fmulp xchg xchg (bad) rex.WR rex.RX jge callq (bad) (bad) sub adc flds ficom (bad) out or mov stos fstl cmp and mov push lods lods addr32 push cmpsb (bad) rex.WB movsb lock cmp stos xlat (bad) cs mov mov add cmp pushfq jrcxz (bad) pop (bad) (bad) movl cmp clc imul rex.X sbb movabs test cmp enterq sub retq add jnp jle movslq mov cli (bad) (bad) xor outsl mov pop andl sub sbb cmp fs (bad) xor fnop rex.RB movabs adc sub roll pop out popfq jl lods outsb rex.WXB rex.RX and (bad) mov std mov pop sbb jle jne movabs (bad) pop ds and push emms movslq cld add negb js lods mov hlt sub lods (bad) adc (bad) out movsb jo (bad) jae mull adc xchg mov adc lahf (bad) (bad) divb loop repnz stc imul lahf ja cld std xchg rex.RXB insl fdivl movabs jns cmp lahf cmp xlat adc cmc cld movsb fucom (bad) xor repz xor add xchg rol or xor popfq out data16 rex.WR in (bad) idiv sahf fldl jle pop data16 (bad) rex.WRB mov loopne (bad) in sub xchg hlt addb mov ja push outsb psrlw movslq lods (bad) sarb cmp mov pop movsb movabs mov jrcxz (bad) mov mov jne push pop (bad) iret xor mov pop push (bad) or sti (bad) pop mov movslq out (bad) fistpl push divl pop pop rorl addl iret push mov std xchg mov (bad) movsb sbb (bad) mov movabs cwtl fcmovu push push or outsb cltd jns xor sbb push enterq ss imul rex.WRB cmp icebp sub pop rorl movsl push pop sub pop (bad) psllw imul (bad) adc pop xchg movsb sub (bad) (bad) std ja mov rex.WRXB or sbb (bad) out cmc popfq xchg mov (bad) mov pop fstps loopne pop cmpsb jge scas mov jp jmp xor sub mov pop adc add mov adc iret (bad) jbe cmc in pop sub and xor (bad) and (bad) gs rex.WR xchg jns push rex.WX jo pop xchg rex.RX loope or pushq lret rex.WRB gs ds add rex.RB pop data16 test mov mov std pop or push (bad) imul in rex.X and rex.R and xchg (bad) sahf mov imul ds mov movabs mov movsl fistp outsl xchg (bad) jmpq (bad) and xor movslq movabs test data16 mov sub (bad) cmp adc cmc pop pop in (bad) lret xor rex.WRX mov pop movslq imul or push cmp cmp jle adc iret js fcmovnb loope leaveq xlat rex.WRB leaveq cmp xchg adc jge (bad) add idivb stos cmpsl adc mov fsubp adcl mov mov fidivrl lret mov rex.WRB mov movabs bnd leaveq cmpsb or sarl in xchg rex.WXB xor (bad) mov mov adc push insb hlt clc test repnz retq callq jge or sti sub test (bad) mov scas mov and leaveq xor cli fs movabs cmc jo (bad) mov fcomp push xchg (bad) jmp (bad) mov lret (bad) adc int add (bad) push fsubrs (bad) pop (bad) rex.WX xchg add testb pop adc sub pop cmpsl callq sbb or pop fstl mov scas pop fist rex.WRX (bad) frstor xor adc ds jmpq fwait pop (bad) rex.WR clc (bad) mov (bad) insl test mov movslq test fmuls pushq (bad) xor (bad) sbb rex.WR movabs movsb movabs test cmpsl movabs out or cmpsb jrcxz sbb sub cmp or mov (bad) (bad) lods pop fadd jg stos sahf pop cli out movabs pop xor icebp mov and sbb int3 push outsl data16 mov (bad) (bad) xchg (bad) (bad) pushfq mov mov rorb movabs in cmp xor (bad) jl push jmpq mov js adc iret push jle push jl lods fs pushfq sbb xchg add rex.XB scas rex.WRXB stc data16 fistpl xlat ja cmpsb (bad) xchg pop push int3 and xor mov (bad) adc xchg or lea mov fucomp movsb and cmpsb cmp ds sbb xchg jb and loope shrb (bad) mov cmp pushfq movb (bad) sbb out adc jnp out cmpsl add cmp (bad) push fdivl xchg mov iret sub xchg and push (bad) movslq adc js xchg xor std push fucomp fstpl push mov adc pop sahf movabs xchg pushfq xchg movabs fldcw decl popfq pop lods rex.WXB add repnz fisub or (bad) movabs xor rex.X (bad) pop xchg (bad) imul adc sbb xchg insb insl adc idivb js scas push mov adc stos ror pop int3 enterq rex.WXB (bad) stc rex.WRX or jp adc test mov scas mov es rex.XB mov pop data16 sarq pushq jb cmpl cmpsl and mov mov (bad) xchg lret pop mov mov cli icebp (bad) jae mov sub or (bad) and (bad) or cs or loope cmpsb out add rex.W test xchg (bad) (bad) cmp fist (bad) fadds retq xor lods (bad) or lods (bad) push popfq mov xor (bad) mov cs jge shlb (bad) out lods imul cmp lock enterq and or sub movabs fmulp add rex.RX gs mov jle fstps mov std pushq pushfq push retq jb xchg out jp,pn mulb fldl2e pop pop int3 cld cltd cmp out movabs add movabs lea in jmp test iret cmp adc ds push shlw sbb sbb jns (bad) int3 and (bad) lock add divb mov out ds (bad) (bad) sbb (bad) rex.R sbb out xchg sti push movabs je (bad) movsb rex.WRX mov pop in cs adc data16 add icebp jb (bad) (bad) fistpll (bad) jle (bad) (bad) shl jae (bad) jno nop pushq (bad) fist add fucom pop adc jbe sti jle rorl imul cmpl cmpsb outsb jns cmpl repz sahf or cmpsb jno mov jle mov (bad) imul xor insb loope outsb rex.WRX push mov push in pop xchg jo sbb imul (bad) stc lret and pop rcrb movl (bad) jb pop leaveq sbb (bad) fiaddl cli (bad) ja (bad) pushq mov or rex.X ds movsl pop cli jge adc (bad) pop js sub in in cmpsb pop fs mov hlt (bad) pop stos (bad) movabs or xor jle rex.WR xchg sti push in (bad) jne loope push xor outsb (bad) in jmpq xor jno push and or cmc (bad) fs xchg cmp xchg test fs adc pop pop sub (bad) sbb fwait nop xchg cli stc movabs notb adcb lret test subb fiaddl mov callq scas xchg sub in cmp movsl jbe rex.RX (bad) pop (bad) (bad) mov xchg repnz xor cmp (bad) add lods (bad) rep (bad) rorl (bad) fmul js stos (bad) xor in sbb mov mov jle rex.RX lods cmp (bad) lahf (bad) cmpsb or pop stos outsb clc cld rex.WB jge (bad) cmp rex.W adc movabs lods sbb (bad) cli lock mov (bad) stos (bad) rex.W (bad) outsl (bad) lods jo mov sbb idivb stos xchg ficompl jp jno ja jno (bad) (bad) lea add rex.W rex.WX pop jnp (bad) in (bad) cwtl (bad) js lods (bad) imul outsb icebp pop sub xor pop outsl jae (bad) pop (bad) adc mov jns xor jg pushq outsl xchg rex.XB incl xor xchg jrcxz andb cs je fnop and add decl test jns and loope movabs stos adc pop (bad) add (bad) sahf or mov div mov mov adc sub (bad) sahf (bad) out mov rex.B jo in push jnp and rex.W lea rex.WRB es (bad) in or iret or cmc lret pop or lret out xchg mov and sbb cmpsb jno adc push cmpsb mov adc xlat (bad) (bad) rex.X and or rex.RB mov vmovq xchg rclb (bad) mov test pushfq callq jle cmp jrcxz insb insb add mov ror mov (bad) sub movabs sub movsl push sbb (bad) push mov xchg (bad) mov jmpq pop fcomps mov pop rex.WB adc sub mov in je xor adc push cmp jo or loopne xchg sub and fiadd stc xchg pop mov xor xor (bad) pop enterq gs retw pop mov pop ss xchg (bad) in mov (bad) sub loop mov icebp (bad) (bad) in pop pop rex addr32 cwtl mov xchg jle xor fst (bad) xchg test pop add jbe rex.WXB imul or pop je pushfq xor loopne sbb int roll push (bad) leaveq rex.X xchg add (bad) sbb add cmpsb mov pop cmpsl (bad) sti fcoml jrcxz adc sahf rex.RXB fsubs pop xor (bad) cmpsl leaveq (bad) (bad) adc pop xchg xchg jae sbb lods ss roll (bad) adc add lret hlt xchg in mov mov enterq jrcxz xchg fcmovnbe push retq xorl cmpsb (bad) retq shrb stc pop hlt nop test (bad) (bad) mov rex.WR fs rolb (bad) lods cmp xor jmp (bad) js movsl scas cmp push add outsb pushq (bad) clc (bad) (bad) push movsl js rex.WR lea (bad) and (bad) fisttpll and iret std sbb rex.RB fadd add rex.WRXB xchg jns imul and rcl and mov repz pop (bad) sbb xor add data16 decl sbb sahf (bad) (bad) add movabs fsubl pop xchg hlt out (bad) (bad) push sub movslq je jnp cmp iret xchg movabs and rex.RXB sbbb (bad) shrl outsl movabs (bad) fs shl pop scas scas (bad) movb rex.WR (bad) out div mov (bad) (bad) int popfq pop callq movabs test adc notb repz test (bad) xor ss ficom loopne push push pushq lock sub mov outsb (bad) lret (bad) stos callq jle (bad) adc addr32 xor mov pop sub push out in adc (bad) mov xchg movabs rex.B or lods mov sbb (bad) adc pop sahf mov movabs adc (bad) pop fsubp (bad) (bad) jg cmp retq jbe idivb in test idiv xchg notb rex.WRX xchg rex.RXB cmc adc or add sub (bad) rex.XB or in (bad) mov (bad) sarb js mov push pop cwtl adc or jg rex.WR movsb mov pop xchg mov and xchg sbb movsb pop pop mov jmp movslq iret pop xchg cmp ror sbb mov (bad) jle insb cmpsl sub (bad) fwait push (bad) out cmpsb adc add pop (bad) std cmp xor or jb mov push xchg push pushq (bad) mov movabs sub adc (bad) repz outsl sahf and mov icebp xorl mov pop popfq mov movabs gs sbb (bad) xor cwtl test lock jrcxz je lahf and (bad) sbb xchg outsb test cmp push imul rex.WRB rex.WR xlat and ficompl (bad) jg add (bad) lea xchg push subb (bad) mov out jle push jae test add xchg test jne or push pop nop (bad) jae (bad) (bad) sub rex.RB js pop clc rex.WRB in (bad) adc movslq sti (bad) movabs (bad) loopne mov rex.RB mov jb cmc (bad) rex.WX sti mov or nop push rex pop xchg minps pop mov (bad) rex.WXB xchg callq outsw cmp jae int rcll movabs loop (bad) xor jg pop jbe mov rex.XB (bad) mov sar sar (bad) ss lahf pop out push add mov xchg loop or insb jge pushq push adc (bad) push addl sbb mov outsb iret add data16 stos int xchg hlt mov or sub xchg int3 push lea (bad) mov lods pop movabs movsb (bad) rex.WRX (bad) or out (bad) (bad) (bad) mov pop divb pop cmp (bad) pop pop (bad) mov add pop (bad) mov mov rex.WR lods jb rex.WRB fs outsb in icebp rex.WRB xor stc pop mov stos pop repnz pop cli je (bad) jrcxz xchg cmpsb jmpq rex.XB xlat fstpl icebp (bad) sbb mov (bad) xor (bad) rex.WRB and cmpsb andb (bad) sub (bad) and mov movsl mov rex.WX fs sbb adc rex.RX idivl sub test add shlb mov rex.RB adc pop (bad) js nop insb rex.WX push shlb (bad) adc movabs push stos hlt mov test rex.RXB rex.WRB fwait (bad) (bad) out sbb xchg or (bad) pop (bad) repnz adc adc loopne gs mov and mov adc xchg push pop and and xor mov cmp adcl popfq pop (bad) jno data16 stos adc xchg loop pop cmp push sahf es sub jbe movabs or movsb test lock mov cmp (bad) in test cltd (bad) cmp mov (bad) cwtl repnz cmp sub stos xor xchg or mov lret enterq fist clc xchg cmp fnstcw mov mov jae jle repnz mov (bad) mov callq pop mov sub insb (bad) xchg rex.RB movabs or callq (bad) sbb out rorl (bad) pushq imul (bad) (bad) sbb rex.B idivb stc loop addr32 push (bad) fisubrl cld pop push cli insl rolb jb ficomp pop imul sbb jnp sbb es (bad) (bad) rex.WXB mov sub xchg lret shrl fsub loopne (bad) fnop and test negb retq sub add jg (bad) rex adc rcrl lods (bad) data16 sbb or fidiv sbb pop rex.R sub (bad) lods mov pop add (bad) fiadd sahf xor push xchg xor (bad) jo jl movabs jl pushfq (bad) xchg xlat scas js (bad) xor push and popfq jnp in push movabs cld pushq loope mov enterq sbbl fstpt push jg adc and xorb stos stos or movsb (bad) rex rex.WX jrcxz (bad) (bad) sbb mov (bad) loopne sbb (bad) rex rex sbb mov outsl imul pop pushq jl pushfq sbb cmp (bad) jno mov (bad) or insb (bad) xor lahf and (bad) fwait sarl pushq pop (bad) shll mov std push sbb xchg (bad) es test retq andb (bad) js rex.WRXB sahf (bad) push lahf rex.WX xchg push xchg (bad) cwtl (bad) pop pop ss xor test jmpq adc fstpl sahf hlt loop mov movsb cmpsl (bad) adc int (bad) hlt ja adc ds and adc sbb or inc (bad) xchg repnz xchg add nopl scas jbe fnstsw (bad) jb sbb sub jbe movsl fisttp leaveq sub out sarl mov (bad) mov movabs ds adc sbb movabs cmp (bad) pop incb mov xchg nop sub rolb stos xor lods fsubrl pop (bad) mov fsubrp (bad) jno retq xor icebp jb adc add popfq test jnp and (bad) rex.WRB (bad) out movsl iret adc cmp js and rex.RXB lods mov rex.XB fs (bad) lret stos clc add (bad) imul jb movsl xchg mov rex.W rex.WRB mov (bad) retq or nop jmp and sbb (bad) (bad) push push pop retq mov pop test sub lret rex.WRXB jo (bad) rex.RX (bad) jb scas jrcxz (bad) stos (bad) (bad) loop cmp pop sub rex.WX pop mov mov (bad) sub push pop xchg xchg lahf shld stos stos xor xchg rex.WB mov nop add sbb xchg in (bad) jne test (bad) stc xorl jns sbb pushfq mov (bad) (bad) ja fild and sarl pop stos rex.WX or xor in cli and jns je adc (bad) rex.XB push cmpsb push (bad) xchg xchg (bad) outsb sbb jl (bad) rex.WX add test and push pop movabs popfq out adc test xor add test sbb hlt es mov pushq ds or callq jle shrb retq or xchg int3 or jb (bad) cld rex.R rex.XB push xor (bad) fisubl (bad) (bad) (bad) mov rex.XB bnd es jnp sub retq jne mov enterq and add (bad) stos adc fsubrs fcmove (bad) jrcxz test (bad) adc jne xchg mov es sub repnz shrb (bad) mov repnz jns loop xchg xor rol rcr pushq test test xor push rex.WRX xlat push jl push js movabs mov sub cld jg fsts or mov scas js mov mov (bad) cmc cmp (bad) sub rex.X ds adc mov xor mov testb test sub mov jmpq pop shr rex.WXB jae adc int sarl insl test and pushq test pop (bad) or mov rex.WRXB ficoml jno or int rex.WRX (bad) (bad) loopne (bad) notb (bad) cmp retq lret pop ja outsb xor icebp data16 mov out (bad) push add jg cld cmp cltd iret pop pop pushfq sbb xor sbb lret pop (bad) rex.WRB fst mov xchg xchg test popfq data16 (bad) xor (bad) (bad) fcompl (bad) mov jmpq rcrl adc or rex.X js mov push test and pop gs mov cmpsb pop loope (bad) and rex.WXB or jmpq rex.WR sbb hlt jne pop in sub push mov rex.B cmpsb stos lret rex.W (bad) lea movabs lock sbbl cmp (bad) clc mov or (bad) mov rex.W fnstsw out sbb push rolb adc rex.WXB int3 movsb and sbb (bad) cmp or gs (bad) (bad) rex.W mov mov (bad) iret pushq cwtl addr32 (bad) pop jbe sarb and jmp pop fld or (bad) js outsl loop data16 cli jne pop xor xor (bad) push pushfq pop pop pop or pop mov callq lahf sub stc loop or pop pushq idivb pop sub (bad) jb and rex.R (bad) lea stos adc push nop rorb push xor cmp pop rex.R rex.X xlat retq rcr jbe adc lea outsl sbb cmpsb (bad) rex.WX lods loopne jno decw cmp scas loope and mov rex lret test rex.WX jae rex.X sbb cmp (bad) lock decb cli or iret mov sub hlt (bad) (bad) jno cltd mov (bad) rex.RXB movabs jmp push movsb test mov mov (bad) clc mov rex.B (bad) (bad) mov incb add std mov rex.RB or pushq and lret fimull mov jg adc (bad) sbb sbb push mov mov sbb push mov je xchg push pop (bad) mov xchg rex.W and retq cmpsb stos (bad) ss addr32 or data16 cmp pop add rex.WB fldz pop mov fwait (bad) out movabs movsl mov and je mov push jne fdivp (bad) adc push orb stos xor sub insl add out leaveq movabs cmp jae xchg (bad) and cmc rex.RB movabs sahf outsb cmp mov cmc rex.RXB mov cmp mov xchg (bad) mov mov cmpsl retq cmp and rcrb rex.WXB jns xor addl popfq movslq (bad) fsubl jbe pop ss push and callq (bad) push (bad) (bad) rclb rex.WB (bad) xlat sub jrcxz stos (bad) retq sti (bad) cmp jb lret sub mull rcrl rex.R fistp push retq pop fwait and (bad) (bad) repnz (bad) jp and (bad) adc xor callq rex.WR jle (bad) fwait cltd mov jrcxz rex.WRX jns pop iret cld test retq pop cmpsl (bad) rorb pushq (bad) movabs push xor (bad) (bad) clc add (bad) loop pop mov pop movabs xor rep popq faddl mov rcrl mov movabs or (bad) lock mov int out cmp insb pop roll sub js add (bad) sbb rex.RXB pextrw pop push push push rex hlt mov imul fisttpll repz rex.WRB add (bad) xchg jbe clc mov and xchg mov imul sbb mov out je pushq cmpsl lahf push movsl fstpt mov leaveq (bad) repnz loopne je xchg rcll adc xor rex.RX mov (bad) (bad) fdivl pop (bad) push xchg movabs cmp xor adc (bad) jne xchg jle adc sbb (bad) test (bad) lock icebp (bad) shl push outsb xchg xchg (bad) lods (bad) fs addr32 add pop add and adc cmp mov mov jrcxz (bad) (bad) pop adc pop nop mov gs mov out sub cmp xchg adc mov xchg or pop xor movabs out push movabs test es cmpsl pop (bad) loopne cmp cmp sarb mov movabs sbbb mov mov (bad) lret in and iret fstpl int out mov (bad) and (bad) sbb jne pop (bad) retq fisub callq mov add jns out pop or push pop (bad) je rcr (bad) jbe scas cmp js out hlt movsl movabs movsl lods mov pop xchg sbb rcrb fldt (bad) cld adcl pop lcall hlt movabs (bad) xchg rex.RXB or rex.B xor add and pop setb fnop (bad) lret popfq xchg jp cltd rex.WRB stos (bad) ja jmp adc xchg (bad) (bad) ficompl xor ds push cmp cld rex.XB int (bad) test pop jrcxz sub pushfq pop rex.WRX popfq xchg (bad) (bad) sahf pushq add and mov or (bad) pop pop int3 stos pushfq mov (bad) repz pushq ficom iret pop (bad) movabs cmp jno fwait test rex.WXB mov jbe in sub movabs movabs clc mov in pop mov (bad) hlt ja (bad) cmp xor insl outsl rex.B add stc addb (bad) lods jmpq (bad) (bad) scas fbld mov cmp jg jo loope (bad) or out leaveq mov xchg movb push cmp fnsetpm(287 and sub (bad) push (bad) lea or push (bad) add add jl xchg (bad) jmp adc (bad) and (bad) add rex.X fs outsb xorb lods movabs andl ss xlat pop icebp (bad) xchg hlt iret xor icebp out or cmp sub (bad) in push ss xchg rex.XB mov (bad) (bad) movabs mov mul fwait outsl sbb faddl adc jle jp scas retq mov push addr32 (bad) push rex.RB imul mov lretw xor adc add loopne negb fsubrs lretw and sbb mov xchg rol stos rex.WX rex.WXB rex.WRB jle lret pop fisub xchg rex.WB jge (bad) (bad) stos rex.RB xchg and pop (bad) or (bad) pop (bad) mov fidivr or gs cmp stos mov outsb and (bad) rex.WR pop sub push xor mov jo and pop push (bad) cmpl xlat sub movabs popfq cmc scas insb out adc leaveq rex.R adc rex.WRX std movabs cld (bad) out (bad) xchg add mov lock loopel retq fucomip sub int3 or mov jne pop pop xlat sbb ficompl enterq stos pop fcoml ss in lret xor mov xchg pop pop (bad) (bad) and xor xchg (bad) (bad) (bad) outsb or xlat pop (bad) xor rex.WXB js movsb cmpsb pushq (bad) pop xchg sbb test jrcxz outsb imulq in addl xchg cmp loop sbb jl sbb je retq in enterq and (bad) movabs xlat sbb repnz insl test (bad) rex.RB rex.WRXB mov mov jle sti sub pushq gs mov (bad) pop test mov fs pop rex.XB rex.WRX xchg pop add in (bad) cwtl data16 mov xchg push rex.WXB shl rex jle (bad) jns stos pop fs cmp and jmp (bad) cmp cmpsb jbe add fsubp movsb out xchg xor lock movslq sbb add fimull rex.RB rex.X and jle xor adc insb nop xchg (bad) lret rex.WRB rex.RXB (bad) pop icebp imul (bad) movabs jno and movabs jbe (bad) mov xor jle fs loope rex.W int leaveq push fwait push cmpsb add rcrl in sub jrcxz pop scas icebp and in enterq fisubr out lret (bad) push and rcr xchg fwait out jo rex.RX repnz popq stos in pop pop hlt lret (bad) out (bad) pop (bad) xchg (bad) sub jb imul movsl (bad) push sbb rcrb imull test cmc es pop push icebp (bad) (bad) (bad) pop cli mov mov pushq movsl imul cmp loopne shlb xchg popfq mov mov jp cmp cmpsl lods stos (bad) sbb rolb fstp cmp push rex rex.WX cmpsb (bad) mov push retq mov xchg jbe pop rol pop enterq lret rcrl jle jns xchg rorb scas jae and cmp imul loopne addr32 retq or add mov (bad) (bad) pushq (bad) shl imul pop fwait xchg notb mov xchg rex.R enterq xorl (bad) or (bad) rex.RXB data16 sbb push nop in fmuls out out fisubr lahf push mov push sub (bad) pop (bad) js clc pop cmp jmp (bad) out fstps rex.W rex.WR xor xchg movabs xchg add (bad) test xchg lea jae jle (bad) lock cmpl outsb (bad) add lods or jrcxz cmp rex.WX (bad) sbb cld (bad) jno pop stc sbb pop int outsb icebp rex.X rex.XB pop and mov outsb xor je test (bad) lods sti test xor sbb stos andl rex.WRB (bad) int3 in addps (bad) cwtl fistpll (bad) clc mov pushq add pushq mov mov leaveq (bad) mov movabs lahf out pop pop lret (bad) (bad) mov or mov (bad) stos int (bad) or cmp stos sbb mov and sbb stos mov xor xchg (bad) cmp (bad) mov icebp scas retq and pop hlt mov out (bad) mov sbb insl or data16 pop sbb stos nopl xchg stos add ja add lods rex.RX (bad) rex.WB jrcxz xlat test push (bad) push (bad) jrcxz (bad) pop cltd (bad) and pop pop ss test rorb je (bad) mov (bad) imul lcall insl xor int3 rex.RB fs fwait xchg xchg jg pop (bad) mov insl lahf (bad) cwtl fistl mov (bad) adc sbb (bad) xor pop add clc movups test (bad) cmp mov pushq sbb mov (bad) adc mov (bad) movabs rex.WXB push push mov fsubs (bad) jnp fcompl repnz repz (bad) mov add scas or lret push rorb or add mov loope (bad) mov rex.XB int3 or xor cmpsl pop cwtl jl shlb sbb or cmp pop callq jle cs rex.X (bad) sub pop pop (bad) sarl (bad) mov pop (bad) pop (bad) jbe jo or mov (bad) xchg cmpsb (bad) (bad) sbb jbe pushq rex.WRX mov movsl out pop repz sbb (bad) movabs test pop (bad) mov in sbb or cmpsb mov (bad) orl rex.W sbb iret rex.RB imul movsb stc (bad) (bad) hlt pop xor mov add sub sbb (bad) jno pop in and pop (bad) (bad) iret clc jp sbb sbb sub sub movsb (bad) mov nop (bad) movabs out (bad) out jno loop jae xor stos add int3 sub scas test sub repz adc data16 pushfw sbb rex.WRXB (bad) in rex.WX xchg xchg adc test push sbb (bad) cli js (bad) rex.XB in sub fistpl rcrb mov mov or sbb insl lods rex.WRX cmp shlb test pop int3 (bad) mov shlb add shlb mov or sub stos or sbb mov add xlat jl push xchg jbe test fs mov pop and stc icebp xor push (bad) (bad) test es (bad) stos fucomip xchg pushfq imul pop xchg jae sti mov ds push cli sub pop pop pop push hlt sbb (bad) lock sub sub mov vdivpd (bad) adc xchg outsb and pop (bad) mov movabs jae and (bad) fsubp pop fstp sbb jmp cmp (bad) stos sub xchg rex.WRX mov rex.WB fwait mov pop jns and fstp mov rex.WR push jno loopne mov clc push adc (bad) jrcxz xor fldcw or pop (bad) (bad) jb cmpsl fs rex.WB movsb sahf mov (bad) rex.X add push es mov insl or jbe cwtl pop push (bad) sahf jmp imul shlb movabs xor js scas xchg fimul xor mov pop jle cmp pop fdivrl xchg test scas or movabs adc mov retq and xlat test pushfq xlat xor lret rex.XB mov push sbb rex.WRXB and cs sub lret lods pop jle pop fldenv int std std outsb (bad) (bad) icebp mov (bad) fwait std rex.WRB mov (bad) std rcr rclb jmpq stc out movabs jle rex.RB scas (bad) mov je xor push (bad) (bad) lock and loopne int movabs xchg pop idivl test cmp data16 outsb scas lret mov pop and mov outsl movabs cli out in jbe pop lock fwait xchg ud2 mov pop in xor mov (bad) lea mov sbb imul rex.WR rex.RX ja mov pop sbb rorl fwait (bad) rex.RB rex.WRXB sbb movb insl mov mov (bad) rex.R negb rex pop (bad) jmpq pandn (bad) jrcxz (bad) rcll jp (bad) (bad) rex.RX lahf jae or adc jb (bad) or fistpl imul (bad) sub imul movabs pop lock pop sbb rex.WRB push movslq add rex.RB loop lret (bad) xchg add out add addb adc repz rex.WB out cld sbb mov pop jb nop push rex.WB xchg gs fs sahf icebp pushq push lret retq cmp and (bad) movabs lods sub (bad) rex.WRXB rex.WB jbe loope mov loop cmp rex.RX ss shll mov faddl loop js mov cmp (bad) cmpsb mov sbb je (bad) notl movsb fimul pop retq pop rorl xchg (bad) add jne mov jbe data16 roll fs popfq addb iret jp jl adcl out pop pop pop js xor and xlat sbb (bad) cmp callq jp movabs int outsl pop push stos packsswb imul xor movabs retq push xchg adc pop movl pop jge roll xor xor cmc rex.RXB (bad) or jl stos sbb xor adc cs add cmp mov outsb jns movabs je or nop sarl sbb (bad) jle (bad) rex.R (bad) out mov add js mov pop enterq jae ficom int retq or (bad) xor rex.XB mov in gs movsl cmp add lea movabs mov insl xor (bad) rex.RB push sbb (bad) sbbl mov sbb adc sub sbb ficom rex.R (bad) scas pop loope insl rex.WB addr32 (bad) mov fsubp mov xchg xor pop loopne (bad) fadds data16 (bad) mov mov pushq or mov lret rex sti std cs fidivr jmp sahf (bad) (bad) fsub movsb xchg pop (bad) jae movabs xchg pop in sbbl sahf rex.WRB cmpsl pop pushq and (bad) in cmp (bad) es xchg fs pop (bad) loopne pop (bad) sub imul cmpl add cmp xchg adc rex.RB pop (bad) pop jg pop (bad) (bad) pushq outsb jbe (bad) movsl adc sarb xor repnz mov gs cwtl xchg adc sbb test mov (bad) sub pop (bad) (bad) add fsubrl xchg pop movslq jae mov xchg in push test push mov jo rex.X fs fist imul std (bad) and pop pushfq xchg mov and push jp jmpq cmpsl fadds (bad) push (bad) (bad) add mov sub retq sbb or pop pop (bad) xchg push pop sbb mov movslq mov (bad) stos test pop callq popfq cmp divb outsl and add imul movslq cmpw jmp test rex.WRX lret (bad) rex.WXB loopne jmpq mov (bad) gs xchg pop push xchg push nop xchg cmp gs rcrl rex.WRX (bad) pop repnz fistl fmull (bad) (bad) imulb sub rex.WRB pushq rex.RB rex.WXB add sahf sbb (bad) cmp jg (bad) add popfq (bad) (bad) jns xchg fwait shlb pop (bad) fmulp fistp lods fsub mov xchg and repz je mov idivl in pushq add or lahf insl (bad) mov xor xlat jl push iret (bad) mov cld stos (bad) movslq (bad) and and mov (bad) stos rex rex.WRB mov ss fs rex.RX jge mov retq and or sti jp pop jg outsl hlt mov clc ss mov rcrl rorb movabs mov jbe stos je cwtl (bad) rex.WXB xchg sub pop mov pop mov (bad) xchg (bad) pushq sbb (bad) nop jge insl pushq movsb stc and jmp loop sahf sbb (bad) jrcxz pop (bad) xor xchg cld (bad) lea fs xor mov (bad) outsb and and ss mov loopne push mov enterq sahf or fwait cmp adc (bad) (bad) rex.WX and (bad) addl (bad) (bad) sbb fldl out sbb nop push xchg cmp cld pop xor test pushq (bad) cli sub push negl outsl pop adc mov and not cmpsb repz out pushq ja cmp loope jrcxz xchg sub or rex.WRB fidivr mov pop jle rex.WRXB pop ss jae sub notb or pop mov or jmpq pop (bad) mov mov cs pop xchg rex.WX rex.W fs xor rex.WXB or in movslq ds std push rex.WRXB pop sub xchg push adc or pushq movabs sbb mov ss pop callq add push out mov retq cwtl and mov lods (bad) (bad) movsl orl lods mov ja rex.RX jnp rex.WRB mov cmpsb cmpsl imul lea stos sub rex.RX cs mov sub (bad) (bad) (bad) adc nop pushq fsubl jb insl frstor enterq js out mov sub sti xor jle retq (bad) rex.RB (bad) out fwait xchg cmpsb sarl mov push insb pop popq clc mov (bad) cmp adc rex.RXB mov mov push loop pushq movabs push rex.WXB rex.X add xor mov in (bad) cltd mov pop lret movsb jne pop roll mov pop fsts mov ja xchg pop rol add icebp (bad) pop (bad) (bad) lods (bad) fcomip rex.WRB rex scas (bad) fwait icebp test fcompp and mov sub (bad) or xchg scas rex.WX fs loopne xor cmpsb mov sarb stc (bad) testb mov adc sarb pop lret mov mov xchg mov pop push std and rex.RB xchg sbb xor adc lret rex.X (bad) sbbb loopne or jo xchg cmp nop iret add pop decb pop (bad) xor xchg test ficoml cli movslq mov movsl sbb (bad) pop in xchg in callq mov cmpsb retq cmp fs fcoms std mov pushq xchg mov and nop data16 movsl jg hlt sub push or mov adc jno cmpsb imul push frstor data16 fcom rex orl sbb adc adc jg pop cwtl fsubs movabs callq cmp out in (bad) fs popfq xchg cmpsb pop sbb (bad) movslq and data16 repz (bad) in mov outsl fstps rex.R (bad) xchg adc sbb hlt pop movsl test jle rcrl mov sbb adc (bad) test push (bad) int cmp and (bad) adc (bad) and and and movsl (bad) out sbb out ds mov sti cmp mov or rex.RXB jae movabs test adc mov js or mov stc rex.RX cltd mov mov or lret fldt xor pop mov rcll (bad) mov rex.R movsl jle test cmp sahf rex.X or movsl pop and rex.WX mov roll mov pop neg int out rex.X (bad) (bad) int cmp outsb insl shll (bad) int3 or retq jbe mov icebp (bad) in adc in movabs (bad) xchg stc or mov idivb scas add (bad) movabs roll fimul rex.WX adc xchg cmp out cmp jg xchg (bad) push pop cmp sub or and idiv sbb (bad) stc xchg pop sub xchg movabs sahf sti movsl cmpb rex.WXB cmp stos xchg (bad) adc jl or out (bad) bnd (bad) mov ds xchg (bad) (bad) xchg leaveq cmp rex.WRXB mov callq out sub (bad) outsb sahf mov mov scas jo repnz jle cmp rex.X jle,pt rex.WXB cmp cltd or mov (bad) movsl push xor pushfq rex.XB sti cmp sbb scas cmp pushfq sbb (bad) pop insb pop add (bad) push mov mov movslq fistp cltd icebp out (bad) std cmpsb sub repnz outsb jae (bad) rex.W rex.WR (bad) sub jbe xchg decl pop in (bad) rex cwtl lret mov rex.WR jno movabs or popfq fwait movabs or cltd sbb jrcxz (bad) jnp mov (bad) movsb mov cmc xor lret sub bnd pop mov fs fs es xchg xchg (bad) or fildl pop push mov stc mov pop test in rex.WRX push xchg sbbl lea add leaveq or lret repz (bad) popfw push (bad) (bad) rolb mov pop and cmc pushq (bad) jo loope gs push cmp mov (bad) xchg cmpsb (bad) pushfq mov and fldenv xor (bad) and rex.RX (bad) (bad) ror jrcxz and insb loopne xchg or cltd jae (bad) push loope jno xchg (bad) in jnp mov xchg iret xchg push adc cmp xchg (bad) xchg pop cmc xor movslq cltd (bad) cli lods xor fstpt or (bad) push or sti xchg pop rex.W (bad) jo sti xor rex.RX rex.X mov push mov inc and scas sub cmpsl xchg lods (bad) (bad) hlt shll add test jnp (bad) stos (bad) cmp adc xchg stos sub loop shlb movb adc jne pop pop and nop rex.WX stos sub jns add xor xchg std xor rex.WXB in rex.X (bad) mov (bad) repz rcl mov (bad) nop rex.WX repnz xchg loop psadbw jge lods push sbb pushq xorl pushq xacquire rex.WX stos xor movsb jp fiaddl jge rex.WXB sbb add (bad) jp loop mov cmpsb mov movsb or pop (bad) rex.WR rex.WRB push (bad) shrb movabs adc push adc jbe xor insl mov out cmpsl rex.X (bad) and repz and pop fwait push rex.WR imul push sbb cs pop pop pop (bad) lret es mov and jae pop rex.W mov pop and xchg repz sub xchg loop pushfq mov (bad) rex.W (bad) rex.WRB idivb pop rex.R (bad) sbb xor cmp retq (bad) sub mov addr32 add outsl and pop scas movsb push cli mov rex.WR rex.XB mov (bad) and add jnp rex.B (bad) fstpl (bad) mov incl rex.XB mov pop fwait (bad) push xchg push rex.WRX rcll rex.WR lret int add rex.B jbe xchg mov lahf (bad) or (bad) out (bad) iret jg repnz (bad) rex.RB jno,pn cmpsl divb adcb (bad) sbb sub rex.W rex.X test pop outsl sub shll (bad) xchg lea adc xor stos cmp mov sbbl sub sub push (bad) cmpsb jp push or (bad) cmp or or (bad) imul xchg mulb iret push sarl outsl callq in pushq pushq push or or fisubrl stos ja rex.RX cmc rex.W mov (bad) cld pushq jno xorl fdivs mov outsb rolb (bad) sbb mov or jge je rex.X popfq (bad) subl cwtd or or cmp (bad) gs movsl pop mov in test pop cmp es and xchg mov rex.RB rep imul fisttpll rex.B rex.XB xchg mov mov pushq (bad) pop xlat sti repnz (bad) outsb sbb add cli jg outsb icebp xor pop (bad) sti mov jmp jno sahf add idiv test out rex.WR (bad) int3 sub (bad) mov (bad) loope lea mov psrlw pushfq hlt (bad) imul xor xlat movabs mov out and movabs or add in loopne (bad) (bad) fsts (bad) push movsb mov xchg iret bnd sbb retq (bad) sahf and adc ja test movsb (bad) jl jbe loope jrcxz jmpq andl (bad) or pop or sbb cmpsb jns push (bad) jp insl movabs insl in scas rex.RB rex.X movslq stc jge xchg rex.WB mov jb iret int je (bad) data16 cmp rorl rex.WX jle sbb (bad) rex.WX pop add fs xchg fs cmp xor loop pop sbb xchg xchg (bad) mov (bad) clc (bad) (bad) mov out repz movabs pop out mov adc or test scas sarl xchg out pushq rex.WX rex.RB sbb (bad) in sbb cmp (bad) fbld jle insb jno jbe (bad) sbb mov sub (bad) test retq fsts (bad) leaveq cmpsl imulb (bad) stos xchg movabs retq outsb or loopne pop sbb xor andl out test stos (bad) pop (bad) adc add pop rex.WX rex.RX iret pop mov jbe xor cmp mov sbb mov loope xchg jae cmp lods ds fistl (bad) rex.WB idiv stc jne repz xchg (bad) (bad) pushq pop xchg jbe fcmovu add out jno repz lods cmc pop in jrcxz mov callq xlat mov jrcxz in xchg mov (bad) rol push pop (bad) fs negl xor mov (bad) (bad) mov test sub rex.WRB rex.R cmpsb outsl lahf and (bad) (bad) jmpq xchg mov xlat adc loopne fbld (bad) xchg out cmpl movabs mov outsb xchg loop rex.RB rex.R test jne (bad) in out (bad) jg outsl int3 data16 in lea pop mov fxch add cmpl insl jae and movabs movabs repz (bad) xchg jge movslq (bad) rex.XB loop test scas data16 mov cmpsb or pop loope imul sbb adc jp push fs cwtl jp rcrb rolb xor lods cltd sbb je scas (bad) sbb cmpsb pop ficom push int js in pop sub loopne pop (bad) push (bad) pop test jns out pop ficomp rcrb callq jbe clc rex gs or add sub xor movabs sbbl test mov pop cmp push cli ss lahf movsb rex.WRX stos out sbb (bad) cmpsl stos pop (bad) pushq popfq add sbb xor lahf push rex.WRX lods pop adc loop push or (bad) mov xchg xor (bad) adc or xchg clc jmp fucomip sbb rex.WRXB xchg (bad) testb shrb stos rex.WXB movabs in xchg outsb adc xlat sbb (bad) rex.WX xor sub repnz int3 mov cmp cmp in out rex.WRXB rex.RX xchg xor mov push rex.WRB fwait out or push sbb rex.X xor test jnp cmp fidiv cld stos fistl sbb (bad) jno mov rclb stos jb and (bad) fistp rex.RB rex.WX rex.R sbb (bad) (bad) ja pushq mov stc cmp (bad) rex.RXB mov xchg add mov xlat insb sub retq xchg or cmp clc (bad) ds jrcxz rex.WR mov cmpsb movsl (bad) fwait pop gs push adc or pop retq jo idivb (bad) xor rex.RXB out rex.RB lods (bad) sub stos pop repnz imul jae imul test (bad) xlat (bad) xchg add pop (bad) test cltd (bad) in cmp and movsl movsb (bad) or lret mov movsb fwait xchg push (bad) mov shrb es (bad) xchg (bad) (bad) incb xor out and gs mov jb (bad) sbb and sarb push or mov add pop lods xchg rex.WRXB rex.RXB ss pop fdivrs jne mov or pop add mov loopne xchg in (bad) int3 mov (bad) loopne xchg je jle sub retq hlt repnz retq (bad) outsb iret adc or nop add add add test pop movabs rex.WXB rex.X jle,pt sahf pushq movsb (bad) rex.WRX push jmpq imul (bad) or jns sub fistpll pop xchg rex.WRXB ja mov push rex.RB movsl or xchg outsl pop sarb and scas stos pop loopne nop (bad) pop js rex.RB rex.WXB mov in js jbe movsb push rex.RX jmpq mov stc mov (bad) in imul cmc mov (bad) (bad) add jmpq (bad) mov mov (bad) fisttpll mov xor xchg xchg movsb fistp scas xor shlb cmpl cli jns lods pop (bad) cmp repnz callq push lret (bad) scas jbe test in pushq (bad) sahf pop pop shr fld (bad) mov and (bad) fs jns je scas mov mov (bad) adc (bad) xor outsl rex.WRB xor adc (bad) fwait mov (bad) (bad) (bad) pop cmpsb sbb lods pushq sub rex.RB popfq xchg (bad) pop cmp movslq ficomp xor cmp or mov push cltd and out add and iret or movabs or pushfq rex.B outsl sub pop (bad) adc jo loop mov xchg xchg mov cld ss jno cmpsl insb enterq sub test in enterq pop (bad) or mov sbb (bad) rorb jl movsb lea push mov popfq pop cmpsb insl (bad) or test clc and je xacquire movsl out and sbb enterq push in jrcxz adc or test or sbb (bad) mov rex.RX and (bad) loope (bad) xor rex ss cmc pop es cld push (bad) in and pushq pop rex.X movabs pushq rex.WR enterq adc fnstcw sbb test mov decb xor (bad) mov rex.RX rex.XB add or jnp loope mov mov es lock cs xor lahf (bad) pop push outsl stc jbe cld cmp mov negb adc (bad) fld rex.RB test ds jnp cld fwait cmpsb movslq fbstp cmp lret (bad) add add rex.WRX cmpsl (bad) ds icebp fiadd mov callq xchg shl pop rcrb jle rex.WRXB and pushq fidivr xchg pop enterq lea js add cmp and addl jl test loope gs mov jno push rex.XB or pop and (bad) jbe xlat (bad) add sbb xchg mov pop add mov xorl scas or sbb jno popfq imul jne movabs in movsl pushfq pushq fistpll pop es rex.RB fwait pop sbb rex.WX add fst and enterq outsb pop (bad) in sbb push rol add pop xchg push jge pop repnz sub cmp cmpsb pop pop cltd (bad) rep mov (bad) rep rex.XB cs xor mov xor push test sub rorb (bad) sbb loope hlt test adc jl lock mov cs mov in (bad) sbb push in push out std (bad) movsl xor jbe sbb data16 retq movabs (bad) nop lahf pop (bad) jbe pushq xchg sbb movsb and push stos (bad) rex.W (bad) shr movsl loop lock pop jg rex.RB or jae sahf pop mov mov (bad) fwait loop jb lods movabs jno push add hlt (bad) imul xchg mov or sbb mov rex.RB outsb adc mov movabs retq int3 (bad) mov jge icebp movsb (bad) xchg add mov xchg push retq fwait subl jg (bad) cmpsb xchg cld rex.WR xchg insl lahf movabs (bad) xchg rex.R and (bad) adc pop fdivrs rorl mov pop sub push pop cmp cmpsl insl rex.WB cmpsb rcll repnz outsb test mov loope icebp movabs cwtl cmc jle pop movabs adc testb insb (bad) loopne ds xor push and cmpl (bad) (bad) mov lea pushq mov cmp movabs shrb insb (bad) jp (bad) adc in or rex clc (bad) mov repnz pop mov xor lods mov sub lock cmp cs rex.W in pop (bad) movabs rex.WRXB rex.RXB pushq xchg or sub mov sub std rcll in jmpq mov mov xchg mov (bad) or mov mov rex.WRXB (bad) cmp jno stos pop jno sbb lods (bad) orb rex.RXB lret loop not (bad) ja out cmp imul (bad) js mov rex.WRB rex.WB (bad) out in pushq (bad) rex.WX movabs (bad) loop adc in (bad) rcr (bad) fcoml adc insb pop xchg (bad) rex.X fstpl sarb sub je cmp jo add mov (bad) sub xchg (bad) adc movsl and (bad) xor jp xor (bad) xor cs pushfq and push retq stos mov push imul or movabs (bad) jle sub and (bad) fwait xchg mov sahf (bad) jne (bad) mov mov jne mov stos or int pop jg addr32 roll roll mov mov xor repnz out xchg add (bad) mov (bad) cmp loopne and rex.WRB sub pop cld push cmc xchg (bad) or mov cmc mov add xchg (bad) icebp push mov repnz jp rex.WRB and add add mov cmpsb pushfq (bad) sub cmpsb pop mov jno cmpsb rex.WR rex.WXB (bad) and lods adc cmp (bad) (bad) in rex.RB and pop mov adc pop jrcxz lret mov out movabs mov sbb push adc xor scas test fs or fucomi jbe (bad) (bad) fs rcrl (bad) idivb out rex.WRXB mov es (bad) cmpsl js rex.R push pop mov rex.B pop movsb in pop outsb jnp pushq rolb pop cmp stos push pop xor callq rep fisub ficoml (bad) cmp gs in ja and out push xor pop rorb and test mov pop pop and push mov xlat stc (bad) int3 loopne outsb jae add xor jno mov rex.X rex.WRB rex.XB (bad) pop push adc cld lods adc mov and add mov (bad) pop rex.R ficoml or rex.X roll mov jae sarb jle rex.XB outsb outsb sbb cmp mov pop insl or addl in scas pushq xchg mov data16 andl mov jmp movabs mov rolb test (bad) es out pushq movabs (bad) jb rex.RXB xlat in jp (bad) shlb cmp mov fisub or mov (bad) (bad) pop (bad) sbb outsb pop rex.WRXB cltd sbb (bad) adc mov (bad) sti and movsl xchg xor (bad) (bad) jne mov cmp and or add imul adc pop cli mov (bad) jrcxz movb movabs and push rex.WXB addr32 sbb add jle sub xor loopne sti or jo (bad) imul enterq jne es fcoml or (bad) adc mov push mov and sub push sub and push int adc cmpsb pop rcrl and sub movb rcrl xor push xchg rclb enterq (bad) pop sti repnz shr loope xchg std xchg scas xor mov test fyl2x or (bad) movabs enterq mov or rex.WRXB pushq jnp pop out rex.WRXB leaveq (bad) mov movabs sahf in cmp (bad) jb test or (bad) js rol mov movsb icebp nop xchg mov fwait xchg push pop cmp sub insl retq xchg enterq movabs out pop jo and rclb rolb (bad) jb and decl pop pushfq (bad) rex.WRXB rex.RX sub jmp or mov cmc repz rex.WRB pop cmp (bad) stos (bad) pop xlat push movabs xor fucomip pop fbld (bad) movslq (bad) lea fcompl loopne pop in test cmp mov cmpsw sub (bad) sbbb mov jbe jo mov ja sub and fcmovnbe sub pop xchg (bad) test repnz stc xchg push sbb cli xchg (bad) xor rex.RXB fwait sub cmpsl psllw fcompl (bad) cmp ja out repnz jbe push sar clc sub pop fstl (bad) xor in rclb lretw hlt jb movabs (bad) movabs ss and pop adc lods and mov (bad) int3 fcoms mov add lret and (bad) jae pop in rex.WRX fistpl fmuls sarl pop cld adc mov cmp adc shrl insb cli xor (bad) (bad) (bad) pushfq hlt mov (bad) pop pop mov (bad) rex.WB popfw (bad) xchg out add (bad) sbb xchg test pop sbb add adc test mov or imul shlb pop jmp rex.R insl popfq sbb or imul lea rex.RX xor js (bad) mov xchg vpor outsb addb sub jnp cs test xor (bad) cld and repz cmp sbb loopne gs xlat pop or jbe (bad) idiv lods (bad) callq fldenv cli test and outsb (bad) test cmpsb lock jnp xchg stos (bad) cltd test (bad) sbb loop popfq push sbb retq mov and in xor movabs loop mov xchg sbb retq rex.WRX test stc or (bad) lret data16 cmp rex.R push (bad) cmc (bad) sahf jp sahf mov or fildll movabs (bad) outsl callq insb and pop (bad) lret fsubr js cli jrcxz (bad) retq (bad) repz sbb mov ucomiss (bad) mov add lar xor mov lods sub (bad) insl push mov fstpl sub imul (bad) rex.WXB scas loopne rex.WRB rex.RB mov repnz vcomisd shrl xor and cmp cmp lahf or and mov sahf and movsb out (bad) bnd jle xchg faddp xchg jo mov pushq push (bad) xchg sbb cmp out fidivr mov pop mov in stos rex push fdivr outsb outsl ficoml outsl (bad) sub jle sti gs insb sbb or loope ss cld xor out (bad) mov notl xchg rex.WRB and xchg rolw out (bad) push in test or mov callq rex.RXB xlat fldt mov (bad) xchg and rex.WXB (bad) jmp movslq out rex.B movabs or imull mov fs insb retq jno fs jp and jmp rex.WRB (bad) jnp and (bad) mov out cmp (bad) xchg std (bad) (bad) divb addl test adc sbb xchg outsb (bad) and and rex.R mov movslq lahf mov jmp lods pop and fnsave addw negl (bad) mov movslq pop (bad) repnz hlt rex.WB rex.R jp enterq roll sar movabs (bad) cmp flds mov (bad) insb mov stos sbb pop add add imul cmc scas sub (bad) cmp fildll (bad) or adc (bad) or (bad) mov movabs rex.WRB rex.WXB sbb push xchg ja sbb sub addb jo xor rex.XB xchg (bad) cmpsb xchg test pmulhuw xchg callq loopne ss sbb loopne (bad) fdivrs and fsts cmp loop push jae or jp es push cmp (bad) jle push xor (bad) icebp shlb lods add mov (bad) std out (bad) jmp fsubp sub movabs sbb callq (bad) icebp jae push sub fucomp (bad) fisubrl rex.WX xchg cmp adc repnz rorb fwait add (bad) xlat mov (bad) push push xlat rex.X cmc jo pop test insb rex.WB repnz rex.RX mov fwait mov shl xchg test sbb pop outsb outsl (bad) std lods add mov mov xchg jae callq (bad) xchg rex.W (bad) pop xorl mov rex.XB rex.WX adc jmpq (bad) mov cwtl or xchg jl (bad) and callq (bad) mov mov pushq pop fmuls lret rex.RXB repnz and mov jne sahf sbb and cmp nop adc sbb loop pop (bad) xor movabs xchg (bad) pushfq out (bad) jbe int jbe mov xor gs movabs and adc cmpsb pop movslq sub ficompl rex.WRB add jae mov sub and gs push pop rcll rex.WRX jrcxz hlt testb xchg rex.WRB loope (bad) cmc xchg jbe (bad) rcr adc lea movslq xchg mov pushfq pop (bad) mov addb clc adc movsb and (bad) (bad) adc iret adc (bad) (bad) jbe scas fistpll (bad) xchg rex.WRXB (bad) out cmp (bad) rex.RX je pushq (bad) adc xor sbb out mov cmpsl mov mov rex.X repnz ficompl jmpq int3 sub jrcxz add push and adcl fisubr rex.WX iret pop cmpsl cltd or out add cmc jg and push loope (bad) cli or mov add pushq mov rex.WXB jb pop rex.WRX or (bad) adc retq sub add repnz shll test clc cmp rex.WRXB stc enterq xor sub adc cmp out (bad) (bad) rex.WRB mov mov (bad) in outsb xchg movsb ficomp jae jge push ja sti fs push jnp push movsl xor cmp repnz mov mov rex.WRXB outsb add mov (bad) adc movabs rex.R outsb loop test pop int3 enterq out adcl fimul repnz pushfq sub push pop enterq xor pop std (bad) cmpsb movabs xchg retq clc mov (bad) pop rex.WX sub rex.RX in in or mov int3 outsb mov sub rorl fistpl mov lea (bad) leaveq cmp movabs rex.WRXB lea out ficoml and movabs outsb lret cmpsl out (bad) je or cld pushq imul sbb flds movslq cmp or (bad) sahf xchg movabs push leaveq sahf mov movsl imul (bad) adc fadds outsb xlat sbb sbb xor mov xchg fcoms clc pushfq data16 movabs push push loope repnz imul sbb (bad) out sbb (bad) cmp iret jae hlt repz cmp mov sbb lods sub movabs cli stc sub adc rex.WXB mov xor pop rorb sub (bad) cmp pop movsl (bad) repnz icebp mov xor xchg out jo (bad) pop clc jbe movabs popfq and fs cmpsl fs cmovb jge frstor std cli pop cmp push cmpsl pop in adc push fcom xor rex.XB cmpsb imul gs jae mov rex.RXB (bad) hlt fnstenv imul jno sub test in jae movslq pop add adc xchg mov rex.R push rcrb mov (bad) lret and bnd cwtl (bad) xchg xchg out (bad) mov test outsb add lret pop (bad) pushq pop (bad) fidivrl cmp cmp insl fnstsw (bad) jrcxz repnz xor or cmpsb jbe (bad) rex.RX rex.WRX rex.WXB fmul ficoml (bad) pop or push outsb roll sub (bad) (bad) movabs in add and stos xlat test out adc imul cld sbb movabs (bad) repz test (bad) jl lods mov push and (bad) sbb out (bad) or jns mov sbb jnp xlat movabs stos sahf (bad) mov insb scas (bad) stos and fwait mov jnp xor shl scas (bad) fildl mov jge and test callq loop rex.WX (bad) not addr32 es xchg es push add mov es and push add sbb rex.WR notb adc cmp ja cmp loopne xchg adc enterq or bnd fwait adc or addr32 (bad) jbe rex.WXB (bad) fwait pop shrb lahf mov mov movabs pop sbb xor outsl jmpq sbb movabs push (bad) rex.X mov outsb (bad) pushq adc sahf scas mov rex.WRB add add cmp in jg,pt pop pop mov fisttpl divl jmp push rorb rcrb add sahf mov (bad) rex.WRB lock retq sar mov js test retq es mov pushfq (bad) rex.W clc (bad) push retq popfq add adc xor lea (bad) jae fs popfq cwtl mov jrcxz (bad) outsb test out jge (bad) xchg jbe sbb and mov pop lods xchg movsb ud2 or cmp loope idivl or pop jl jo std fbstp outsl add jb jle (bad) mov movabs sub or mov sarb add rex.X cmp out (bad) (bad) pop pop addr32 (bad) xor fimull lret xchg movabs (bad) rex.W adc (bad) test sub fisub mov (bad) iret bswap cmp fwait lock cmp (bad) or rex.XB mov out repnz pop (bad) xchg rex.WRXB xchg test sub fcoml or incb repnz pop sahf and syscall (bad) test mov cmp fs (bad) (bad) (bad) rol jl push sub sub movabs in pop sbb cmp sahf movabs and popfq mov faddl mov fidivl stos js mov add es jmpq enterq mov or sbb out cwtl or or cmp movabs xor pop mov rolb jge out ds pushq (bad) (bad) jbe std sbb mov div cld rex.RB rex.WRX insl lahf and xchg mov xor push movabs or jnp xchg pop xchg pop xchg lret lods (bad) push sbbl rolb leaveq rex.WB rex.WX mov imul and (bad) (bad) rol (bad) fsts inc iret add sti (bad) imul outsl jne xor jl imulb out punpcklbw retq pop (bad) add rolb sarl scas (bad) cmpsb pushfq lods lahf movsl add loopne jbe stos mov (bad) push scas or stos loopne retq ja test jl cmpsl rex.WR gs (bad) (bad) movabs repnz rex.WR mov cld (bad) cmpsb and fstpl (bad) std (bad) mov out sbb cmc cmp cs fiaddl pop (bad) cmp jrcxz loopne std adc retq fstl out insb insl pushq sub rex.WXB je add popfq test leaveq jle mov nop xchg int3 jmpq mov mov pop rex.X pushq movabs insb callq pop mov jmpq cmpsl in and lock and loope fs outsb mov fisubl imul add xor rex.B retq loop pushfq (bad) adc rex.RX rex.WX (bad) test fs (bad) out mov lods pop pop (bad) xchg adc xchg cwtl adc std mov iret mov lods mov pop xchg push test in loop xchg es leaveq rex.RXB pop jrcxz mov mov rex.X je jg test js addb (bad) outsl (bad) decl jo lcall or pop (bad) loop (bad) fnop (bad) sti lock mov mov movslq mov sub or add enterq push and test push cmp adc adc pushfq mov and jbe enterq scas (bad) xchg xchg out mov jmpq (bad) mov hlt rcrb roll rex (bad) jge imul xchg adc hlt stc jl pop xor or out push sbb ficom mov adc rex.R xchg add adcl scas xor movabs cmp callq stos lret (bad) stos loopne ja mov mov insb cmp enterq rolb imul callq stos pop mov (bad) outsb adc retq mov test xchg outsb movsb repnz adcl fisubr (bad) mov sub shl in and lahf callq (bad) adc clc add cmp retq pushq loop sbb or (bad) lahf outsb lahf jae sbb clc (bad) pop sub retq loop (bad) mov jne (bad) mov fcomp xor and mov xor ds data16 add rex.RX testl xchg push in mov (bad) retq jno and pop cmp sub xchg sbb rex.RB mov jbe pushq xchg nop push pop (bad) (bad) rex.WRXB add lea xchg stos xchg jo cmp jle int insb cmp (bad) shl sti (bad) pop and cltd mov (bad) (bad) movabs pushq adc hlt iret add int (bad) movslq fnstsw mov cmpsb (bad) cmp pop and adc in int3 add fistpll nop push (bad) sbb in pop jb (bad) lret int3 mov data16 js es test scas xor icebp or pushq (bad) xchg push pop (bad) mov enterq hlt pop sbb (bad) out pop mov mov outsl out retq sbb jns (bad) stos stc (bad) rex.WRXB xchg (bad) pushq rex.RXB add clc (bad) out hlt mov cld (bad) cmp rex.XB scas jb and adc (bad) (bad) cmp int insb (bad) roll (bad) rex xor mov rex.RB xchg lret cmp es mov jle scas jmpq repnz jns pop rex.WB jl hlt sub int jne mov decb je (bad) cwtl sbb enterq jrcxz lret je xor faddp int3 incl and rex outsb cmpsb cmpsl mov xchg jmp (bad) sub repz movsb rolb movabs hlt addr32 lock xchg fstps cmp push pop insb out and ss pop insl stos (bad) movsl push sbb (bad) pop notb (bad) or pop cmp xor stos pop (bad) jrcxz test outsb (bad) jno,pn (bad) lods pop (bad) mov scas or ficom rex.WX loope and (bad) mov pop (bad) callq rex.WRX pop insb (bad) (bad) js in movslq pop and movslq fistp or fstpl lret mov loopne jnp lods push ficoml (bad) adc (bad) pushq fsubl rcll callq roll (bad) int movabs lret (bad) (bad) mov in sbb rex.WRB jge scas movabs outsb or adc rex.WX mov xchg imul rex.WRXB pushfq rex.X mov (bad) cmp rex.XB stos pop push (bad) rex.WRX insb lahf cwtl pop rex.WRXB lret idivb pop jo add popfq data16 add insl pushq mov loopne pop push int and out rclb movslq xor mov xchg jmpq outsb stc mov data16 mov push adc mov movabs mov (bad) sbb mov scas (bad) or mov outsb jae xchg clc rex.WXB (bad) xor cmp js xor (bad) stc subl fsubrs pop sub rex.WX movsl pushfq pop rcrl push imul movabs rex.WXB gs fs pop movslq and mov lods (bad) in (bad) xchg pop xor pop callq (bad) xchg xchg mov adc rex.RB stc rex.WRX fst mov or xchg jge and xlat cmpl xchg fistp and pop xchg mov lea shlb jle pop imul movabs (bad) push lea cmp rorb loop sbb loop pop mov outsb push rex.X mov push push (bad) jb ss ja mov loop adc fs pushq insl scas push sbb add cmp rex.WX rex.W (bad) mov fs rex.WRX sbb nop lret (bad) sarl rex.WX xchg mov sbb mov xor jno jb rex.RB stc sbb xchg sbb insb scas lret push (bad) push (bad) mov movabs (bad) xorl mov mov (bad) mov sahf adc push and enterq sub outsb out rex.R rex.RB rex.W (bad) imul sti jg push (bad) outsl loop add and add add pop rex.RX rex.RXB fs jns mov stos scas add movabs (bad) add std xchg push rex.RX (bad) jp lock pop sbb push sub pop pop iret (bad) adc hlt pop lea sub sti repnz mov stc movsl pop rcrl rex.RXB add rex.RXB jge movsb rex.B xchg roll (bad) lock mov and rex.WRXB pop iret (bad) rex.W in sub push (bad) xchg xchg (bad) jmp fdivrp gs xchg pop jg (bad) movslq jno push pop sub mov cmpsb rolb insb and sahf sbb rex.XB xor sbb rolb adc cmpl push pop sti jp and pop (bad) mov adc rex.RXB jle cmp jrcxz jb mov ss cmc jb add fsubrl clc xchg (bad) rex.WRB js scas callq cwtl loope in pop (bad) (bad) xchg sub pop callq adc fsubs rex.WRB fist jo enterq (bad) xchg pushq rex.RX data16 and pushq adc outsl push xlat or movabs in mov (bad) loop or (bad) xor or (bad) mov fs fldcw pop push rex.WR rex.RB rex.WRB fsubrs fs rex.WXB or jle gs (bad) lret and rex.WXB xchg sub retq xor jne add in lods fadds (bad) lahf pop adc testb xchg movb and xor and outsb or sbb xchg xor (bad) je xchg pop mov data16 loop xchg adc xchg frstor xacquire rex.RX sbb push push pop rex.B sbb adc pop add sub pop cmpl fscale jno and or cmpsb movl jrcxz pop cmp xor sub cs movsb (bad) xchg fnstsw rex.WRX (bad) flds shrb mov jp pop push leaveq pop rex.WX (bad) iret rex.RX pop mov fldcw add (bad) push lods insb and and rex.RX cmpsl imul (bad) movabs (bad) (bad) leaveq jbe data16 xorl sbb fs insb (bad) iret repnz rex.RXB adc (bad) (bad) insb xor (bad) (bad) xor (bad) int xchg movabs cmp mov outsl adc cmpsb outsb rol adc (bad) push fndisi(8087 mov xlat lret sbb sbbb mov xor (bad) stos cmp test (bad) (bad) lods push jne or rex.X mov cmp (bad) mov jo rex.RX lock andl adc push js enterq out xor int3 xor (bad) sar retq mov (bad) and test jge mov or lret and test and mov (bad) clc jmpq rex.RB pushq insb movb adc pop mov xor pop out fistpll xchg mov xlat pop jbe scas (bad) add mov jbe xor (bad) hlt ds jp pop (bad) (bad) sub sbb (bad) cmp in stc jl pop (bad) or (bad) cmp mov push push (bad) rex.WR gs mov rex pop int3 fs (bad) rorl mov or rolb in loop xchg ficoml outsb fld rex.WR sahf loopne fs jbe push xchg ss in stc xchg xchg (bad) in push push xchg adc pop rex (bad) push adc mov adc lea xchg push sti in or (bad) int idivb pushq jb lea (bad) cld xor xor (bad) (bad) push lods xchg add rex xchg (bad) (bad) loopne lods and xchg rex.WX mov (bad) mov retq movsb xor out push mov vorps imul rex.RXB (bad) xchg push (bad) std sub stos adc in (bad) jmp rex.WX sbb lods psrlw cmp movslq fnstcw push xlat push sub movabs js lea in iret stos add and (bad) rex.RB sbb xor rex.RX movsb push xor idivl or or xor addr32 jrcxz (bad) rex.WB rex.B rex.WB xchg cmp jne imul jbe sub loope sub lret retq pop (bad) cmp sbb test mov push (bad) mov gs (bad) mov mov jmpq cli cmpsb mov pop cli push in xor jne pop mov movabs out xor xchg sbb and push (bad) (bad) xchg lcall jbe cltd icebp or fisubl add pop ja jno sbb push adc xchg fadds in rex.WX (bad) or mov mov push and outsb xchg (bad) rex.R sbb xchg std loope sub movabs fs adc mov mov mov mov or mov and (bad) outsb out ja (bad) addr32 (bad) adc rex.RXB xchg fnstsw push cmpsb pop (bad) cmp lret rex cmp movabs pop pop xor and loope xchg stc xchg rex.WRX mov (bad) mov (bad) clc cwtl out movabs lock add imul stc cmp (bad) outsb pop fbstp test push fwait or adc imul test pop movabs mov mov gs stc sub test (bad) jg (bad) outsb scas sbb lret mov (bad) (bad) pushfq pop or (bad) push cmpsb (bad) rex.RXB mov rex.WRXB and cmpsl xchg or jl rorb add and sub mov stc movabs adc loopne scas test fldt (bad) (bad) clc add rex pushq adc sbb sbb xchg loop out stos push test pop (bad) test rex.RB jbe add mov addr32 jns decl sub je (bad) mov loopne rcrb test xchg cmp fidivr and cmp and outsl cmp mov push orb ja ficompl jns (bad) add add adc icebp fnsave (bad) xlat fxam rorb in mov loop (bad) fisubrl add jbe sub in in xchg push test mov cltd pushfq xchg je loope pop (bad) out jnp in pop retq (bad) (bad) cwtl and clc mov or cmp rex rex jmp push sub xlat iret and test (bad) jbe adc add jle mov rex.RB pop (bad) rex.WXB push rex.W pushfq add pop insl fisttp (bad) cmp adc in sahf pop xlat mov je mov (bad) mov mov add cmp stos cmpsb sub mov (bad) rex.WB pop (bad) or cmp data16 mov test cmp sbb fnsetpm(287 fldcw subb (bad) push (bad) jbe push xor pushq (bad) push in ds (bad) out or mov std xchg popfq pop jo xchg cmp pushq (bad) mov mov pushq (bad) mov or data16 int retq (bad) (bad) add rcrb stos jle mov loope pop ss (bad) push rex.WXB pop (bad) (bad) sbb movslq movsl xlat movslq shll or mov stc insb sub fmuls (bad) cmp sbb (bad) movabs jae movabs movabs lret (bad) insl jb scas out out movabs (bad) mov popfq outsb repz shlb movslq push rorl cmp sbb sub nop and adc test sbb (bad) lock jle pop sahf outsb (bad) push data16 lods xchg push cmpsl sbb pop mov pop addr32 rcl and pushfq jg fisttpl pop add movabs pop xchg xor mov movsb pop push (bad) (bad) std (bad) mov test pop outsl rex.RXB (bad) mov mov xorl or mov pop fwait mov ja jb retq rex.RB and repz pop rex.WRB mov push rex.WRX sbbl pop xchg pop xor mov (bad) xchg cmc mov or (bad) xor pop lock scas jne imulb repz sub adc loope insl (bad) mov mov loopne pop lret sub jg sbbl add push xchg int3 je movsb rex.XB (bad) and mov xchg mov or cli cmp scas test (bad) sbb lods pop xchg cmpsl (bad) adc push in outsl pop mov adc hlt xchg add (bad) (bad) push mov (bad) rex.RX loope out add (bad) imul rex.B rex.RB scas mov stos pop (bad) movabs adc (bad) push popfq mov rex.WB (bad) int pushfq (bad) (bad) rex.RXB orl rex.RXB mov test rex.WRB push or xor (bad) rex.WRXB or fsubs xor out callq (bad) rex.RXB cmp (bad) lods (bad) rex.WB pushq jae cmp imul rex.XB repnz iret adcb loop cltd (bad) imul fldenv pop xor (bad) (bad) enterq fbld std adc jno outsb loop,pt (bad) or pop fdiv (bad) pop notl xor (bad) movabs (bad) js loop sbb idivb and mov sub add repz jp mov stos cmpsb pushq sub pop frstor jge pop (bad) adc jnp sub pop and sbb pop int3 rex.RX cs rcll pop rolb pop or jl stc jp jns mov sub (bad) xchg in xchg mov nop adc add pop lahf je callq pop and jae mov fistpll rex.B rex.WRX cmp rolb mov test data16 rex.WRB mov xchg stos pushq int3 enterq gs pop test pop and test lahf pop xchg fcomp addr32 jmp xor rex.B loop jne pop cmp lss ss pop xchg fisttpll (bad) jbe ja jrcxz fisubl retq leaveq callq jmp and sub xlat (bad) adc or mov mov xlat iret add or enterq movsb rex.WB movslq (bad) cwtl test adc (bad) sub outsb insl movabs or clc repz xchg cmp callq cwtl or not movabs icebp jle out out (bad) sbb jmp insl push mov (bad) pushq (bad) fisttpl jo (bad) (bad) pop add cmp (bad) mov pop (bad) clc hlt mov push jl sub jb (bad) rex.WR rex.WR rex.XB pop (bad) jno xchg mov xchg pushfq hlt xor (bad) outsb stc cli sub jmp jle fcmovu mov out pushfq fcompl cmp (bad) hlt sub jmpq push cmc rex.XB (bad) (bad) jnp outsb xlat sbb imul mov pop xor loop (bad) mov mov (bad) (bad) gs push (bad) ds shll in xchg pop mov cmp (bad) loope (bad) iret rorb pop push retq inc cs jne movabs xchg rcll (bad) (bad) shr and and sub (bad) mov or in lods xlat sub rex.XB flds (bad) lret jne rex.XB cmpsw sahf ficomp pop (bad) (bad) or mov xchg incl movabs mov (bad) retq jl rex.WRXB rex.RX (bad) jns sbb fs fcomps (bad) pop sti jbe scas insb insl add xchg xchg sbb movabs cltd stc mov mov outsb pop rex.WX mov (bad) (bad) (bad) outsb cld mov iret ja jle sbb xchg rex.WX mov add repz mov pop pushfq xchg scas movslq fsubp data16 and push iret adc jg gs sub rex.WRX xlat jle or mov xchg fs (bad) test push xchg leaveq rex.WXB movabs cmp pop stc out jne sbb (bad) rex.WRB mov xchg sub imul and pop mov movabs pop popfq cmc jbe lods test (bad) lret rex data16 cltd push jnp cmp movsb xchg xchg pop rex.R test (bad) add int3 (bad) outsl or pop push int outsb lock scas xor rex.RXB rex.WRX push (bad) in sub lods sub (bad) test pop push int rex.WX sahf lahf push rex.B rex.RB sub or loope add rex.WB popfq (bad) or fisub (bad) sbb (bad) xor cmp cmpsb int3 cwtl jae (bad) jnp or out or jne jmpq or movslq or xor sub rex.WRB mov addl rex.RX (bad) and sbb (bad) (bad) (bad) cmp pop (bad) fcmovb in repnz callq xor movabs insl int sarl stos pop pop movabs fiadd ror movslq (bad) sbb retq shll and ds (bad) rcr cmpsb mov mov (bad) leaveq or mov movabs sub rex.RB fsubrs xor loop cmp imul stos and repnz shl loop mov pop lods in rex.B hlt mov sbb pop (bad) or xchg add std jl mov outsl and loope or std lret jae xor pop fimull mov movabs jno rex.WXB pop (bad) (bad) mov loop mov (bad) (bad) movabs mov mov mov cmp mov mov sbb lock jle sub cmpsb mov stos out xlat movl out mov rex.X mov and jo cmp fs in rcrb int (bad) fldt xchg pop vbroadcastf128 xchg mov mov or callq rex.WRX mov mov nop rex.WRB rex.WRXB outsb test pushq mov (bad) (bad) jo jle sarb sbb gs (bad) fnstsw movslq rex.RX leaveq (bad) stc lock jb movsl (bad) cmc (bad) jg pop sbb es mov fnop jo (bad) fcomps adc (bad) (bad) mov push rex.W rex.XB nop mov out xchg rex.WX jae (bad) xchg (bad) je test pop (bad) icebp loop mov sub mov out mov pop movabs sbb xchg in gs or (bad) js (bad) stos rex.R repnz jae push add or enterq movsl insl iret push and pop pop cmpsb jnp repnz cs pop movabs mov xchg (bad) flds pop (bad) (bad) fist and cmp jg jmpq pop xor or (bad) sbb (bad) jmpq callq rex.WRXB pop cmp pushq repnz xchg cltd or data16 sbb scas mov or add rex.XB rex.RB (bad) fisub movabs repz (bad) outsb xor jp add sub sti out adc jo sbb (bad) sbb lock jae out out jae pop jnp out mov in mov push (bad) push neg out add adc cld mov lahf adc movabs popfq cmpsl jp pop cld ja es (bad) xor rex.WRXB fmull cmp and retq sbb (bad) pop and xchg out int3 notb xlat (bad) mov ja jmp out ss rex.R adc rex.WR movabs pop mov xchg popfq insb mov (bad) push in mov jle popfq add cmp jle push (bad) mov hlt xor xchg (bad) rex.XB repnz pushq rex.W rex.WXB addr32 push sub leavew gs outsb (bad) add mov rex.WR std (bad) mov pop sub repnz adc adc sbb jmp mov test nop pop or adc int gs mov imul sbb insb jbe rex.WXB rcrl out mov lock rex.WB sbb rex.WRXB movabs rex.RB gs imul cmp and lods test adc loopne cmc rex.XB jns mov ja jl enterq test loope and adc (bad) mov cmpsl sub in jp push iret mov rclb test jbe pop push (bad) movslq pop out jle outsb and (bad) adc out sub (bad) jo or jns cmpsb imul insl rex.RB pop rex.XB enterq lods stos sub repnz movslq or (bad) and test and xlat pop movslq (bad) fmuls or rex.W jnp hlt out (bad) adc pop (bad) mov pop rex.WR rex.XB xchg adc xchg (bad) adc cmpsl (bad) pushq jmpq xor push jnp sub imul data16 rex.WRB callq cmpsb pop (bad) pop sbb mov (bad) jno jbe loope mov cld pop es (bad) mov xor sqrtpd shr lahf andl sub sbb mov (bad) or (bad) movslq or mov loop adc mov jrcxz sub rex.RX clc repz (bad) (bad) xchg sti stos (bad) xchg mov pop (bad) xchg rex.WRX pop sbb addb fcoms sub nop jle pop cs rex.XB pop mov rex.XB popfq jle xor mov data16 fwait sbb adc push pop mov fdivs (bad) lret push ud1 and in cmp add add (bad) jle add xchg ds pop (bad) mov (bad) jl sahf loopne movsl lret cli imull xchg (bad) push cmovs cwtl mov lahf adcl (bad) mov xor cmc sbb cmp movslq or xchg mov (bad) stos pop mul popfq (bad) out and adc rex.WXB iret mov xor jbe in out je or sbb pop notb (bad) xlat popfq jg push mov jle adc jb add data16 and (bad) cmpsb cs (bad) loop cmc stos pop lea jp imul (bad) fisubl jo out pop movslq movabs out jl insl fmuls divb fldl (bad) sti movabs (bad) es out orl flds cltd stc rex.WRB adc cmc repnz out sub xor push cli rolb movsb mov cmp rex.RX (bad) lods fbstp jge enterq scas rex.WXB in and movabs xor js and adc retq xchg pushfq mov jge js jmp and lret movb test or pop mov repz push addl jno xchg gs adc sub rex.WRXB rex.WXB rex.WRXB (bad) test (bad) and sub in jae (bad) shr decb (bad) mov insl imul adc ds test test xor sub sbb xor enterq rex pop and sbb (bad) (bad) (bad) lods (bad) (bad) (bad) jbe (bad) jne mov lods sbb and xorl movabs cmpsl (bad) fadds (bad) fimul int3 movl mov cmp in loope xchg adc push jnp (bad) jmpq mov rex.WRB rex.RX lret lahf gs cltd data16 (bad) cmpsb fs movslq (bad) and push (bad) cmp pop adc xchg movabs and mov mov outsl jno movsb and mov stos jbe sbb outsl lock sub (bad) cmp jl es xchg sbbl gs sub insb push rex.WRXB xchg std rex.WRX fs jp imulb in sarl mov insl mov test fisttpl (bad) add loop mov mov callq jrcxz ja cmc (bad) rex.WX rorl pop add std xchg rorl movabs fsubrl lods outsb stos (bad) (bad) jg shlb fs sbb (bad) or pop test (bad) fistl int pop jnp mov (bad) lods pop xlat jbe rex.WB rex.WRX jle sub pushq mov cmc scas imul pop clc jp mov jge mov icebp (bad) xor (bad) xchg rex.WRB rex.W sbbl (bad) add push sub adc xchg sahf lea xchg push out gs rex.B fs mov sahf cld rex.WRX xchg out outsl je mov xchg and lea jrcxz movabs cmp sbbl adc jae mov fs mov fidiv xchg (bad) sbb (bad) in mov add fmul or pop cmpsl sbb mov (bad) jle adc mov negb cmpsb (bad) retq pop mov jle rex.RX mov fisttpl enterq xchg (bad) leaveq rol lods sub (bad) xchg mov (bad) xchg retq loop (bad) mov mulb retq (bad) mov outsl cli loop sub or (bad) ds pop lods jns jp mov rex.WXB jnp pushq adcl cld cli xor mov fwait adc enterq retq jne sarl mov (bad) mov sbb (bad) jrcxz push repz pushfq or xlat mov xchg jbe cmp xor sub mov fcompl and and (bad) rex.WR rex.RX cmpsb jle (bad) sub enterq fidivr cmpsl sbb cli out xchg (bad) xchg (bad) ss pop insb rol lret rol pop retq mov lret sbb (bad) jmp add jbe cmp or int fld (bad) jp (bad) ffree (bad) and xor pop fcmovnu rex.WXB xor fisub (bad) xchg (bad) rex.WX mov pop movslq movabs leaveq rex.RX mov test xchg mov out (bad) and stos xchg mov fisubl rex.RXB (bad) push pop (bad) pop sub repnz and or adc rex.WRX sbb pop (bad) shrl mov imulb adc sbbl xchg (bad) fadd pushq lret fisttpl out jae cmp fisubl xor mov jo sbb sub mov sbb (bad) sbb mov cs (bad) pop mov jge cld (bad) cmp pushq mov cmp fisttpll and cmc scas stos repz mov jb jmp shrb cmp (bad) push lods (bad) sub insl shrl rex.RXB mov insl jmp jle add sbb in push lods jge fnstenv rclb test (bad) orb (bad) lock movsb loopne callq adc (bad) (bad) loop add lret repnz pop cmp xchg xlat test xor shl pushq int3 rex.WRX (bad) or rex.XB (bad) imul pushq or (bad) (bad) test sbb movsb add stos (bad) lahf clc (bad) xor (bad) xchg pushq fnstsw xchg sub rex (bad) mov xor cmc rex.WRX cmp pop (bad) add or mov orb mov mov push pop xor cmp imulb (bad) leaveq or loope pop stos enterq jbe mov insl in jg (bad) insb retq test mov jbe (bad) je leaveq movabs xor out (bad) rex.WX gs sbb fnstcw rolb pop lret or leaveq (bad) mov push sbb sub sbbb movabs xor lods jle jrcxz cld xchg (bad) (bad) sbb imul or pop xlat xor jo js movsb pop lret rex.WB push xchg pop mov rclb add xor fs xchg frstor cli mov je or sbb push rolb jo loop in sub pop xor and pop fisub rclb iret sbb pop rex.RXB rex pop mov jge jmp cmp rex sub popfq (bad) xor jb addl stc (bad) sub out or (bad) pop and rex.WR and lods sbb fs data16 cld (bad) jns xor (bad) pop outsb loopne mov (bad) xor sub ss cmp movabs (bad) sbb cwtl (bad) jl xchg xor xlat sbb movabs out cmpsl rex.RB cmp xor xlat jb sub mov fdivs pop rex out repz retq loopne sub sahf test (bad) or loope sahf pop movabs retq movslq pop pop test xor sbb adc xchg jmp cmp push or mov repnz (bad) mov sub sbb movsl (bad) mov pop loop push fs cmp roll mov rex.WXB add xor (bad) pop xchg or andl lret repz scas imul shrl imul xchg callq xchg and lahf jae mov in xlat jno push sbb pop cmp add lret retq mov sbbl rex.RXB fcomp imul fsubrp pop insl and xor retq (bad) sti fdivrs mov xchg int3 adc scas rcrl scas stos fnop (bad) lods test mov cmp (bad) movabs sub repz jbe rcrb mov xor mov rex.RX insb movabs loop or rex.RXB fiaddl outsl rex.WRB fdiv xor (bad) push jb (bad) sahf outsb out xchg rex.W clc (bad) cld scas cmpsb mov stc mov outsb cmp fs fdivs rex.WXB rex rex.WRB or imul mov (bad) stc sbb lods add movslq or sub cmpsb data16 push test adc jrcxz (bad) movabs and jnp stos movsl or movabs scas (bad) (bad) imul xchg mov cld (bad) sahf add adc and or (bad) (bad) pop movsl jnp mov in pop sub fnstsw sub xchg mov pop rex.B rex.RB fwait sbb loopne lods insl rex.WRXB adc (bad) movabs rex.R addr32 push lcall notl retq (bad) rex.WRX push movabs sarb and data16 jl cmpsl xchg fistl mov or mov outsb xchg adc loopne rex.RB (bad) scas add mov and (bad) xor add ds pop fsubp in nop rol or idivl iret jp or rex.RB cmpsb jge (bad) (bad) add cmpsb sub pop callw xor pop mov and data16 adc and retq in pop sbb retq icebp adc rex.WRB (bad) pop jb movslq data16 (bad) in rex.WXB (bad) outsb or push mov std pop ss jmp rclb pop mov repnz (bad) xchg (bad) push xchg sub sbb cmp (bad) test in jp nop mov xchg stos jno (bad) movabs imul push jrcxz (bad) mov or cmp je lods (bad) mov (bad) (bad) ficomp divl rex.WXB rex.W jbe fcmovnbe push shrl mov (bad) pop movabs jae xchg movabs (bad) pop fnop push add rex.RX adc rex.WB sbb incl ficom out push rex.XB stos and rorl cmp xor jo mov test mov (bad) jae (bad) mov xchg imul ficom push pop (bad) (bad) sub rolb pop fstpl or xor sarb xor pop adc xor in (bad) (bad) xor and jne push in mov test (bad) lods movslq xchg fsubrs test adc (bad) sub cmpsb (bad) fwait (bad) rex.WB pop (bad) movabs (bad) rex.WRX fs (bad) cltd xchg pop jnp decl and xor rex.R pop icebp sub and repz pop add jb pushq movabs cmc pop ds shrl (bad) adc cmp repnz pop mov (bad) gs cmp fwait sbb jbe jl cmc lahf jg scas xor xchg addl fistpl (bad) rex.RX mov callq or jle ja xchg negb mov retq (bad) idiv sub rcl add adc adc cld cmp mov pushq rex.W pop sbb cmp rex.WXB test push jle lret lret pushq sub test xlat push divl add mov or (bad) mov pop out cmp mov or jrcxz add out (bad) push add mov adc add mov mov (bad) pop pop repnz push data16 xchg rolb movslq xlat pop std add jae movsb adcl xchg pop xchg (bad) mov pop mov in xchg out and xchg pop rcl test jle mov js sub mov scas (bad) or ja (bad) fs sbb fdivr loop (bad) and test icebp int3 shll fwait xchg mov in mov mov xor add pop outsl jae negl xor mov (bad) sub lods or add push (bad) addr32 jnp (bad) pop fistpl xchg faddl sti (bad) movabs (bad) inc cmp (bad) push retq add (bad) mov pushfq xchg jge and jg xchg out or in (bad) sbb stos sbb mov mov out adc (bad) fdivs xlat in int adc loop mov rex.WXB (bad) stc xchg (bad) pushq movabs clc push vcvttps2dq mov xchg (bad) stos pushq pushq lea jne std outsb or and xor sub sbb loope (bad) xchg (bad) ss (bad) (bad) (bad) in sub insl (bad) stos roll lret cwtl (bad) rex.WXB shrl rex.WRXB (bad) rcrb retq rex.RXB (bad) pop xchg push mov mov test fistp pop rex.X lret (bad) jno outsl stos add stos mov (bad) in popfq rex.RX imul jge insl (bad) scas div lods or add movslq xor ds push pop fwait (bad) cmpsl xchg scas sub pop fmull add rex.RX rex.RB lret xchg test jbe sub pop (bad) adc fcompl push pop adc cmpsb mov hlt cmp in sbb add jno cmp mov rex.X push cmp (bad) (bad) lock mov jnp jg cmp add mov in (bad) (bad) mov (bad) jae rex.WXB shl jmpq stos hlt push (bad) imul xchg mov sbb (bad) movb loopne rex.RB (bad) adc pop sub pop adc rex.WRXB lret iret scas sahf test push mov pop rex.WRB pushfq (bad) stc xchg cmpsl int sar cld test stos mov leaveq sbb mov xchg and add add rcr (bad) mov cmp jp xchg mov xchg cmc xor rcpps lret movsl imul and or test clc sbb and fimul add pushq (bad) push clc add cld sbb cmp sbb jae in cmp (bad) jmpq data16 mov fdivp imul fdivr jge jne fwait xchg mov pop loopne rex.WX xchg cmp out (bad) mov and (bad) mov xor (bad) (bad) out or cmpsl adc in leaveq lahf je pop pop rex.WB (bad) out (bad) push jl jnp cmpsl sbb (bad) jge jne stos mov cld add stos push rex.WX scas mov jrcxz mov out sbb repz (bad) nop jnp pushfq (bad) rex.RB adc mov lahf jbe (bad) cli lods mov pushq jmpq xchg cmp cli repz (bad) fucom sbb cld ja movabs movabs jle (bad) (bad) xor cwtl jl jrcxz mov jg sub movsl xor rex.WRB movabs in push sbb dec pop pop sbb jle sub rex.RXB callq sbb mov int3 cmp pop in (bad) sbb pop lods in xchg add mov (bad) mov loop pop xchg int add (bad) iret stc pop pop loopne sub pop (bad) adc retq and data16 cmp pop rex.WX sbb jne pop je orl fmuls pop (bad) ds xor scas (bad) retq mov pop cmp rex.WRXB pop test fstl fwait jnp (bad) rex.WR cmp mov add loope mov sbbl jne mov rex.WB pop pop and (bad) stc (bad) (bad) push pop mov loope mov sbb pop or psrlq sub int3 pop scas in xchg pop rex.X rex.WRXB mov pop mov push cld pop rex.WX rex.RXB push mov cmpsl (bad) lret rex.WR loop movabs (bad) jbe sarb lcall addr32 rex.WRX and mov mov mov jmpq rex.WRB cmpsb sub (bad) cltd push push or (bad) or xlat or and data16 adc jle adc mov fiaddl fcomip out jle pop (bad) sub (bad) fidiv xor xor outsl movabs sub xor (bad) sub test lods (bad) ds pop mov cmpsl sbb xorl mov cmc (bad) or rex.X scas rex.RB jae jmpq mov stos or imul pop (bad) movabs (bad) cmp jne mov xchg fnop push loop (bad) rex.WXB cwtl jne lret and xchg adc fxch (bad) rex.WXB jrcxz insb or cmpsl xchg iret stos test rex.XB push popfq pop ds insb movsl shrb sub pop imul or repz push icebp mov (bad) xchg lret mov orb push lea cmc jp jl sub (bad) data16 sbb adc in or scas and cmp int sar jns je rex.WRB cmp rex.R (bad) cmp mov (bad) jns (bad) rex.WX lahf flds (bad) ja (bad) cmpsb ss rex.WRB pushfq retq lock insl (bad) cmp pop stos sbb push stos sti rex.WR rex.RX sbb cmp or xchg int3 int and outsl mov retq sbb rorb scas movsl addl sahf sbb sahf cmpsb shll (bad) retq jae cmpsb movslq sbb std lret xlat (bad) pop sub cmp jmpq rcrb add fnstcw cmp rex.X mov mov popfq rex.WXB icebp movabs rex.WRB pushw in or js and adc movabs cwtl mov or notb sub test push rex.XB push rolb xchg rcr lahf push loop rex.RXB (bad) fildl pop jle loop int sbb (bad) sti push pop sub xchg movabs rex.WX cmp add adc addb mov fs (bad) rex.W outsl rex.W (bad) mov jns test test (bad) retq (bad) push incl (bad) (bad) sbb (bad) imul xlat out movabs (bad) sbb fildl jle imul nop rex.X and rex.WRX mov or jmpq repnz or rcrl (bad) rex gs mov je jge sbb xchg ffree sti sbb add xor mov xchg jae rcll mov sub cmpb pop adc popfq sbb mov stos rex.WXB mov rex.RB test shrl stc jge mov imul pop callq rex.WB scas rex.WXB ds out mov cmp mov mov lret rex.WR push sbbb pop xchg xor sbb (bad) in or (bad) rex.RB add retq (bad) jb in std outsb or pop push jnp sbb jp cmpsb lock (bad) xlat (bad) loop xlat andb lahf push push jnp roll (bad) adc sbb data16 out xor mov sbb cmpsb sbb jb callq loope pop repz and mov cmp rex.WRX lods rex rex.WRB push adc jle je leaveq (bad) mov pop (bad) mov and (bad) or adc rex.RB and lea addr32 pop xor loopne popfq pop fxam pop fs jp test movabs mov mov mov stos cmpsb rex.RB cmp roll or fbld jnp (bad) fcmovne push pushfq negb rex.W rex.XB add mov push jns mov mov sbb (bad) je rex.WX rorb stos out in sub mov insl (bad) ficoml mov (bad) stos mov (bad) nop in pop xchg jmpq ja outsl jae data16 rex.WX rex.XB imul cmp mov mov outsb xor pop jle (bad) rex rex.XB js icebp cli ja ss (bad) sbb addr32 mov repz pop (bad) (bad) push mul cmpsl pop or int mov stos sub or and sub movabs lods and jb cmp (bad) add pop loopne jbe rex.WXB rex.W repnz and xchg rex.WRX rex.WX (bad) jmp push jmpq mov rorl push pop jrcxz cmp or out int mov in mov addl or mov cmp cmpsb (bad) loopne adcl push (bad) push mov cmp pop sbb (bad) and mov add or rex.XB mov cmc fld rex.RX and xor scas int lods movsl loope es rex.RXB sarb test cmp xchg push cmp lock (bad) sbb scas cmp cld jmp (bad) rclb sub pop (bad) sbb rex.WRXB xchg mov jle loopne mov push fstps jge push mov movsb sub neg jnp mov fsubrl callq mov rorl or xchg rex.RX and cs mov jne movsb rex.R xchg sbb (bad) or test movabs jle iret movabs adc or cmp sarb fisubrl es test (bad) rex.WRXB test ds int3 idivb faddl je lcall lret fnsave (bad) mov (bad) idivl sub (bad) adc (bad) rex.X mov rex.RX jrcxz sub sub cwtl xor adc xchg pop addr32 mov pushq or (bad) (bad) callq xor int or mov pop cmc lahf in or jmpq (bad) int cmp xrelease (bad) rex.WRX sub xorl jb movabs sub (bad) and cmpsb out cmp mov lahf sub jge xor cli icebp rex.R sub cmp movslq scas jg (bad) (bad) jns pushq mov jge (bad) rex.WRXB adc cmp rex.WXB sti mov xchg mov xor sbb rex.WRXB mov imul pushfq in movabs loop mov movsl jbe or enterq or (bad) loop adc or rex.XB sbb pop ss in lods fwait pop out pushq lea lret movsq je fdivr movabs callq cmpsb and pushq push pop (bad) (bad) rex.B movabs movabs cmc movabs (bad) cmp sbb (bad) shr gs out xchg retq pop in and rex.RB mov mov pushq push pop outsb or rcll or xor (bad) ffreep (bad) adc mov jb sub gs (bad) pop or out xchg xadd test iret or (bad) xchg or or rex.WXB jle (bad) rex.B rex outsb (bad) pop movabs loopne stc add xor ficom (bad) add (bad) add xor data16 cmp rex.WRX lret int (bad) pop out fstps pop jmp (bad) mov idiv add mov (bad) fsubrl enterq or in xor add mov and sbb movsl rex.WR leaveq imul mov (bad) (bad) push push jle mov pushq jns pop xor and pop fwait mov int3 cld mov in push cmpsl sub rex.WRX rex.WRXB std sbb sbb movsb iret pop (bad) cmpsb cli jmpq jns sbb xchg cmp ss xor xchg xchg rex.WB retq and callq (bad) mov (bad) fidivr add mov test (bad) imull pop jg clc nop mov (bad) pop sub (bad) or movabs or (bad) adc or adc add jo callq (bad) (bad) pop (bad) sbb (bad) lods pushq xlat push adc sbb rex.WXB pushq fimull cmpsl lods fs xchg mov je movabs rex.WRXB rex.RX xor sbb enterq rex.R (bad) pop mov jne xchg push jb mov movsl (bad) add or nop cmp pop ds mov add pop xor (bad) int or xor outsl data16 cs cwtl pushq rex ds jg,pn sub mov and (bad) iret test pop fmuls rex.WXB (bad) mov lods pop (bad) push (bad) pushq mov stos adc sahf xchg iret sub lock rex.WRX (bad) xchg pop mov mov jle movq test in mov callq scas or xor pop and xchg xchg rex.RXB cmp jno mov in pop mov vorps (bad) add add (bad) (bad) loopne pop lahf and popfq pop cwtl sbb jle (bad) lret jb cmp rcll imul mov (bad) (bad) movsl adc or rex.WRB rex.WRXB or (bad) mov sbb mov stos mov cmpsb lahf movabs lods fldenv fnstsw mov xor (bad) mov xor (bad) fstpt loopne ficomp rex.WRX mov pushq std xchg fsubs test push (bad) fcmovu enterq mov rolb cli movabs rex.WRB (bad) fildl add movslq jno (bad) jns (bad) mov xchg mov xor (bad) fistl rex.WRB movslq mov data16 outsl xor cmpsb xlat in scas adc lcall adc cmpsb ds jne add fwait movsl iret adc pop movabs add mov pop jbe sub pop sub movslq jle xor vhaddpd mov rex.WRX add pushq mov test sahf popfq fcmovne test fwait sbb retq (bad) (bad) mov xchg xor jne (bad) jge cli xchg (bad) (bad) and xchg xchg or xchg rcrb xor in pop adc int3 cmp sub js,pn pop mov pop cwtl add cmp sub cld jo movabs sbb xchg (bad) mov mov movabs test cmp xchg movsl int cs mov cmpsb stos jg xchg push in test sub movabs jg (bad) test movabs rex.RXB or jmpq rex.WXB iret rex.WXB jno mov (bad) pop or cmp or jmp js test push xor fild (bad) xchg callq repz callq (bad) std mov lea movabs retq mov xchg (bad) out mov (bad) fisttp sahf (bad) int test mov lea sbb cwtl pop mov add imul rex.WX clc add fildll retq (bad) cmp jo rclb (bad) (bad) sbb movabs scas mov hlt test (bad) rex.WRB nop out (bad) movabs rex.RXB (bad) lea xor jne xchg mov mov rex.X notb insb (bad) mov xchg loop leaveq xlat cmp lock (bad) xchg or mov in and fidiv jno sub cmp cmp insl (bad) mov (bad) mov mov imul insl push fcmovu rex.WRXB lret rex.W sbb stos (bad) shl xchg cmp (bad) sahf lock (bad) out cmpsl cmp cmp pop test jmp push fwait and movb xlat xor xchg std addr32 pop sahf stos (bad) movslq or movabs sbb sbb in lret push sbb jno sbb mov cvtdq2ps adc mov loope je mov adc (bad) mov (bad) outsb cmp jae adc stos rclb test pushq xor je (bad) adc movabs (bad) pop mull scas rex.WRX mov fstp push iretw stos pushq (bad) jl sbb rex.RX movslq jge xor rex.RB cmpl sbb push (bad) leaveq rex.B (bad) movabs add retq mov outsb (bad) sbb (bad) mov and cmc retq pop pop and and jge cmp jp sub movabs rex.WXB rex.XB and retq mov xchg rex.WB shrb xchg out and pop addl (bad) jbe push push nop (bad) (bad) movsl out stos (bad) rex cmpl mov mov (bad) rex xchg lret in and mov mov (bad) jne push mov fs rex.WRB fldenv (bad) rex.B insl and scas rex.RXB (bad) sub iret rcrb addr32 (bad) xchg in test rex.WX mov insb subb ja int rex.XB rex.WRXB enterq sbb push cmp add movabs lea idiv mov mov sbb (bad) repnz out mov (bad) pop and sbb rex.WRX add outsl movabs and fwait xchg (bad) fs scas pop mov pop push xchg xchg rorb and leaveq xlat push rcll rex.WRXB movabs roll in mov js and cwtl retq sar and mov fbld and in jmpq cli cmc out push (bad) rex.WXB (bad) xchg sbb gs add xlat jne (bad) ds add xchg (bad) icebp xchg lock (bad) int3 xchg loop sub (bad) sbb loop cli jbe (bad) je cmp (bad) pop and xchg sti sub pop cmp pop and int cmp movslq xchg jb xchg pop pop jnp pushq (bad) (bad) fbld rex.WRB rex.W adc mov jle and rcll sbb pop adc (bad) or imul xchg rorb xchg push sub rex.R pop (bad) push test out out xor xchg and xchg xor pop pushfq pop jle (bad) or jge sub jg pop stc sbb jrcxz pop and outsb or (bad) add rex.RB outsl cmc and jg sbb (bad) (bad) and data16 sub fild (bad) mov stc or notb clc sbb in out pop or adc (bad) cmp jge ror rex.WR (bad) add (bad) outsb repz data16 and sbb loopne movabs (bad) rex.WRXB (bad) xchg xchg nop sub pop jnp jmp jmpq xchg jb and cltd push cmp rex.WX ss mov (bad) (bad) int3 xor cmc mov (bad) cpuid push mov cmp incb mov mov insl sub xchg mov mov sbb jbe add and (bad) adc mov (bad) adc lret clc cmp sbb xchg mov jmp add adc pop pop pop rex.XB cmp (bad) fs mov rex.RB icebp callq sbb jae pop in xchg mov pop adc loope mov mov (bad) xchg cmp cld imul mov cmp (bad) scas pop (bad) mov (bad) enterq js and pop sarb pop mov pop movabs xor sub adc movabs or (bad) add push movsl rex.W jbe mov push mov and (bad) (bad) jbe lock loope int xchg mov loope mov adc sub (bad) (bad) cmpsb (bad) insb xor xor adc cmp mov fcompl stos stos xchg mov adc add push jne test rex.WR hlt pop pop cmpsl popfq mov mov rex.WRX cld (bad) mov mov imul mov pop mov adc rex.RB rol js test cli jmp (bad) cmpsb pushq rex.XB rex.RB cltd pop mov ds fnsave xchg gs loopne xlat rorb mov fisub rol pop notl (bad) pop cmp rex.WRX addb movabs mulb adc int3 outsb rex.WXB (bad) stc (bad) sbb (bad) pop (bad) lods insb add icebp cmc (bad) xlat rex.RX in jbe (bad) xor or jge movb push cmc popfq pop mov retq imul and xchg cwtl test ficomp pop push mov (bad) pop in (bad) cmp in jrcxz rex.WRX in push pop push test or or rex.WRB pop mov mov pop or mov xlat loop in sbb (bad) ds mov rex.W (bad) rcll pushq pop pop rex.X rex.B testl rclb sbb add outsb movsl push xchg js out (bad) imul es cmpsl (bad) jg outsb jno out repnz pop ds (bad) rex.RB rex.WRX es (bad) repz lods test popfq push loop div sub xchg data16 jae test mov (bad) xchg sbb xchg (bad) jo (bad) rcll or xchg stos callq out and stos nopl adc jnp fcmovnbe sbb cld icebp fisubr decl xchg mov push or mov push test sbb jae addr32 (bad) adc scas xor (bad) (bad) (bad) xchg jne pop jae (bad) (bad) fcmovb rex.R mov rex.B movabs pop rex.WRX add lods xlat std pop xor rex.XB mov pop imul scas mov and rclb cli movsb sub pop retq add (bad) loop mov jmp idivl repnz jl shlb imul (bad) cs xchg pushq mov (bad) sbb cmp out sub retq out and ds mov rex.WX rex.XB fs leaveq sti pop (bad) rex.RXB movl iret xchg (bad) xor addr32 mov add sbb out fldenv lret (bad) (bad) (bad) lea (bad) fs pop pushfq mov lss rex.R int callq lahf jrcxz stc sub clc nop adc movslq rex.RX (bad) (bad) (bad) (bad) xchg xchg iret rex.X rex pop movabs (bad) sbb cmp callq and push xchg ficompl mov loopne or pushq movsl loope jmpq (bad) shll pop test movsl jnp pcmpgtd push in ficoml cmp imul (bad) lahf movsl pop rex in xchg jg (bad) (bad) insb sub mov cmpsl sahf movabs (bad) je (bad) fnstcw pop rex.X imul adc loope (bad) cmp fcompl jge xchg adc pop (bad) int shl movsb jns ds and mov mov or xchg fdivl out and lea in in movabs add rex.WRB add xchg (bad) mov rex fs (bad) rex.RXB push jns ss callq add fs pop leaveq mov mov data16 scas or xchg je pop rex.RB cmp (bad) rex.WR (bad) or fwait (bad) fadd xchg fldl shr insb rex.WRB scas imul repz data16 lock mov (bad) jae push fldt rex.R out sbb mov test cmp add test callq repz pop jmp movq fimul or imulb pop mov cmovae je and hlt adc (bad) insl movabs xchg jbe (bad) (bad) push sbb xbeginq sbb mov fdivl fmuls mov cli ja pop (bad) mov rex.RXB mov sahf ss or movslq fcmovnb cs (bad) notl insl pushq push or push stos xor sbb (bad) jge xchg (bad) lods mov test cmpsl retq retq insb mov lods in or int3 sub jge and push out repnz jmp (bad) fldt pushq jno mov (bad) rex.WRB je mov retq movslq fcompl (bad) and hlt sub data16 (bad) jns iret cmpsb and and rex addr32 or pop and sbb and push mov mov in push pushq in and (bad) and mov sub (bad) popfq cltd push mov retq (bad) es push mov rex.RB fs cmp (bad) in repnz (bad) xchg movsl and xchg rex.WX mov decb fdivrs loopne mov out (bad) mov (bad) sahf (bad) out sub (bad) (bad) cmp jle cmp cmpsb sub xchg rcrb movabs scas pop cmp mov retq cmc test pop xor adc push jbe pop lods pop push rex.WRXB and clc pop mov xor (bad) fwait hlt outsl out jbe andl cmp stos push fmull mov outsl jne data16 and (bad) pop shrb lock xchg in pop jmp (bad) (bad) cmp shll test sub sub (bad) or mov xor and pop (bad) jle mov rclb sub scas xlat pop jle pop sub rex.WB rex.WXB (bad) data16 loopne ja cmp jle movabs and lret (bad) rex.WB or jmpq test (bad) in pop (bad) pop cmp rex.X jmpq rex.W xorl rex.B pop xchg mov (bad) rex.X push movl cmp cmp pop pop movsb push pushq movsb fsts fwait jae jns rex.XB repz mov xchg mov cwtl pop add pop and vdivpd mov (bad) pop rex.WXB movsl test mov ficomp cltd movabs cwtl push shll out (bad) in (bad) push pop rex.WRX xchg lahf movabs add xchg cmp pop and cmp xchg jae adc pop rex.WRXB test cwtl pop retq mov outsb lods imul jp negl jb movabs (bad) mov pop rolb cmp xchg (bad) psrld jmpq fnstenv imulb roll test movslq rorb cmp pop xor (bad) std (bad) or or idiv (bad) pushfq cmp cli cld loope adc (bad) adc or (bad) (bad) pop pushfq cmp int mov xor mov sbb mov lock fsubl mov loope mov ds sub adc cmp fcompl gs cmc xor xchg push rcll mov (bad) cwtl lahf pop or rex.WRXB enterq adc (bad) je divps xchg (bad) jmp fcompl (bad) (bad) mov pop iret mov rex.RX add mov sbb (bad) fldl mov pop sbb rolb (bad) idivb push adc fcomp je clc mull pop or fcomps rcrb xor add clc movabs or xchg rex jne mov (bad) rex.WRB mov stos (bad) lods stc sub imul jp stc jrcxz test push fcmovnbe rex.WRB adc cmpsb mov imulb (bad) lea xchg adc pop rex.XB rex.WRB rex.WRXB pop pop xor hlt pop lods out iret nop xchg ds fstpt test pop pop (bad) or xlat test xchg lahf (bad) outsb in push sub movabs xor movabs gs cmp shl movabs add test fwait mov or jo movabs jmp movslq nop in and ficomp jno add pushfq cltd movl callq push rex rex.RB out jg and (bad) rex.WRX (bad) rep add sbb or (bad) rex.WB xchg or cmp (bad) cmpsb sub clc pop mov (bad) fidiv (bad) rex.WX mov jle adc (bad) (bad) cmp sbb out movabs cmp stos (bad) pop shlb rex.RB mov pushfq pushq lret cwtl movsb pushq mov rex.W lods lods xchg jp jg imul out (bad) mov ja rclb stos loopne lods push movsb mov jl loope mov or js mov sbb rorl (bad) movsl sahf pop xor in cmp sub (bad) (bad) insl lahf movabs lock add in and xor and out test xor or (bad) xlat pop adc and jg xchg test popfq imul rcll mov (bad) sub (bad) fs xor add ja sub lcall cmp fwait lods jl mov jrcxz xor movabs xchg add scas (bad) pop push hlt push add or pop cmc mov (bad) out icebp mov (bad) push pop (bad) add jo,pn xor ds outsb and (bad) callq xchg gs adc cwtl fldenv lods sub outsb pushfq (bad) mov rex.XB in rorb or jmp mov movsb jae mov jbe adc orl stos mov (bad) mov push adc rex.WX xor xchg stos imul xchg scas xor and fcmovnu jle rex.W (bad) xor movslq adc outsb (bad) rex.RX andl lods cmpl xlat mov repnz or or or scas push mov cmp js mov (bad) cmpsb push (bad) (bad) shlb mov mov jae rex.WRXB mov cmp cltd push movabs push (bad) (bad) cmpsl repnz movsl lods out mov sbb xchg sub test insl xchg push (bad) movabs fnstsw add (bad) rolb gs retq mov lret loope rcrl push movl push add (bad) test cld push push jmpq (bad) mov rex xchg rex.WXB rex.R (bad) xchg rex.RXB mov out (bad) movabs pop out sahf or and in and in rex.WXB insb pop (bad) fdivrs adc int rex.WRX movabs jae rex.WXB sub imul pop loop mov rex.WXB mov sub pop pop mov adc or (bad) jg idiv test int3 rex.WX (bad) add rex.WXB cli rex jle roll mov pop mov xor xchg cmc sub sbb outsl pop jae (bad) mov retq mov frstor fisubl andl fcmovnb mov fs out sarb rex.B xchg jl gs movabs rex.XB xchg (bad) nop outsl pop cmp and cmp push adc lret cmpsb xlat mov pop sbb jp rex.WRB pop rex.B mov out (bad) scas cmpsb cmp cmc and add cmp imul jo pop and movabs (bad) pop mov (bad) outsb out and and out movslq repz popfq sahf sbb (bad) cmc out (bad) mov (bad) sbb movabs jmpq sbb fstp retq movslq (bad) scas mov (bad) jne mov jo mov mov sbb fnsave shrb pop sahf xchg scas mov mov pushfq jno mov callq adc sub push add rex.WX push fdivs shll xor xchg (bad) or add rex.RX add cmp mov xchg rex.RX (bad) push rex.WR (bad) mov rex.WXB loopne data16 decb jae rclb (bad) out (bad) rex.RB rcl rex.RX (bad) (bad) lret mov cli js lods pop and push rcrb (bad) rcrb rex js (bad) add loope jmp cmp mov adc popfq mov rex.WXB enterq pop xchg paddq repnz loop jp (bad) jle xchg rex.WRX rex.XB imul mov pop (bad) andb sbb repnz pop and mov lahf adcb and rclb xor sub rex.RX xchg jle cmc (bad) pop and or movsb movabs fist mov mov adc or pop and rex.RX jbe and push lahf movsb scas add rex.R ds push xchg loopne ja ss mov imul (bad) push sarb mov cwtl sbb jle out (bad) and xchg (bad) addl (bad) sar mov (bad) cmp fsts imul rex.RB xchg mov nop addl and and mov add movabs icebp jo push xor mov fstpt movabs rex.WXB xor xchg cmpsb xor jnp vcvtdq2pd clc (bad) out fwait push cmc jg xchg sbb mov fnstsw xchg test mov insl (bad) (bad) mov out loopne loop add (bad) jrcxz cmpsb mov (bad) movslq nop out cmp lret jnp pushq mov mov adc insb test xor push nop mov jl stos pushq push mov mov movsb jle rex jle stos int3 (bad) rex.WRXB (bad) xchg fisubr jb movabs xchg adc fs ss cmp movabs rex.WX xor clc lahf sub test xchg mov repnz rorl push cld rex.R rex.RB pop adc jb sbb mov xchg (bad) std stos sbb movsl lock cmc (bad) pop add jge stos (bad) movabs rol rex.WRB rorb mov cmp (bad) (bad) negl es mov out (bad) callq push cmpsb retq push mov rex.WRXB loopne (bad) scas (bad) jns pop rex.RB mov lods andl jb rex.X pop rex.RXB (bad) stos (bad) xchg xchg rex.WRX or add pop fstl rex.WRB jl sahf lahf xor in rex.WB mov add pop (bad) stos icebp pop repz pushq and shll retq (bad) jbe (bad) mov fwait mov cli pop sub sbb (bad) ds repz xchg hlt push jbe rex.WRXB cmp imul (bad) (bad) mov mov xchg or mov stos movabs loop loop sar cmp sbb test jb lods rex.WB movabs rex.WXB pop cmp test pop push (bad) cmpb cmpsb paddw xchg (bad) out sub xchg (bad) sub jo pushq sti sbb and fisubrl scas rex adc in fld rex.B repz (bad) xchg push loop jmp data16 retq push lods jno (bad) xchg adc fucom lret lods rex.WB js cmpsb lret cmp rex.RXB pushfq lods mov imul (bad) pop movabs stos sub jle scas mov lods imul xor outsl mov roll jns sub enterq scas (bad) clc imul jns lods imul push lods adc ds fsubrs rex.WX cli jge (bad) mov (bad) xor xor sbb and nop in (bad) pop (bad) cli je pop mov (bad) int3 jl cmp mov in add xor or imul sbb mov cmp xor mov movabs (bad) add retq xchg mov (bad) mov cmp cmp rex.R cmp cmc (bad) (bad) jmp (bad) sub xchg fwait cmp jg (bad) (bad) xor roll (bad) xchg and leaveq fbstp rex.RB cmp popfq int jg xchg rex.WRXB (bad) cmp xchg js adc mov sub rex.XB jmpq adc (bad) mov jo cltd pop iret (bad) mov movsb sbb pop rex.WRX xor push fs rex.WX ss jrcxz xchg lods (bad) pop pop rex.WX sub and cmp mov (bad) in rex.WR test or addl pop cwtl (bad) push pop (bad) rcrl (bad) lahf pop (bad) add cli (bad) rex.XB (bad) mov pop pushfq retq sbb lea in movabs pop adc jb xor mulb mov es pop fs rex.RX pop repnz scas movslq (bad) (bad) cwtl sbb rex.WRB cmp (bad) fldt mov imul loop mov (bad) mov clc xchg cs mov cmpsl mov (bad) dec rex.WR fmull (bad) rex.WX jae sub out (bad) test in (bad) movabs rex.WRXB sarb sahf (bad) out push pushq jp rex.W or pop fcmovu xchg sbb adc jrcxz rex.W fdivrl cmp (bad) callq sbb fildll es mov rex.WXB rex.WRB mov sbb cmc jp movabs rex.RXB rex.WR rex.WXB mov sub (bad) pop fsts (bad) in mov xchg movsb and (bad) xchg stc icebp movslq cwtl data16 mov sti pushq pop (bad) jrcxz push sbb pop and push (bad) rolb lcall xor in mov mov sbb iret (bad) (bad) sbb loop out or callq sbb and (bad) mov insb insb pop (bad) rolb loope movsl or cli cmp pushq movslq (bad) fs cmc jo repz xor jle xchg xor jae adc orl lock push mov in (bad) fwait ja (bad) mov cmp pop (bad) popfq adc fcos movabs in imul pop mov or mov pushfq jrcxz add mov sub mov out test cmp push rex.WRX insl rex.RXB adc or mov jnp xor stos mov xchg rex.R rex fadd repz xchg cmp (bad) (bad) mov clc (bad) jb cmp movsl (bad) imul movsb (bad) sbb jmpq sbb mov adc test mov jno cmc scas std insb jle xchg mov push (bad) in loop mov pushq mov jrcxz pop jmpq xchg jae (bad) (bad) rex.WRXB and icebp rex.WRB add mulb rex.X and rex.WR xchg (bad) xchg rex.WX jb pop xchg or or xor imul fistl push sub or pop cmp xor (bad) add out movabs rex.WRB or mov mov enterq leaveq mov mov mov (bad) movabs in out fild loope jg (bad) xchg loopne jge rex.WRXB in iret jbe clc jp sub xchg sarl (bad) rclb clc cli negb pop and and repnz or mov adc shrb loope leaveq or mov or rex xor mov movabs nop andl or xor (bad) nop in jge loopne push or (bad) rex.XB and (bad) sbb mov xchg push jnp (bad) jnp (bad) rex.WX push data16 (bad) mov sarb adc pop lea xorb std xchg out mov int3 (bad) ds (bad) (bad) (bad) repz (bad) fs add push movsl mov rex.WRX rex.WX callq fwait cmpsb stos xchg (bad) outsb or callq mov xlat lret (bad) lock lock cmc pop out mov jae xchg lea adc rcr (bad) mov fs mov pushq jrcxz loope (bad) js retq pop pop and testb mov rex.XB xchg (bad) fnstenv xorl or cmp pop adc mov rex.WXB pop (bad) sbb movslq xchg mov mov cmp std xchg (bad) or jbe mov xchg jo movabs jno in mov (bad) leaveq (bad) push mov rex.RXB or cmp orl movabs rex.WRXB mov (bad) xchg or push out mov rex.R rex.WRB mov mov int movabs loope adc xlat sub mov mov movabs outsl mov clc pop mov sub mov mov xchg retq mov (bad) rex.WRXB jb fnstsw jb scas scas mov scas adc roll (bad) rex.W (bad) int push sub (bad) ds or cmp rex.WRXB (bad) xchg cmc mov adc outsb div sahf cmp add rex.WRB add pop xchg movabs mov add fs lret movabs test xchg test jle in (bad) mov out loope pop cld adc movabs adc jmp (bad) (bad) jg cmp mov mov rex.X cmp cmp xchg push rex.W scas cmp pop sub cld insl nop (bad) xchg out jbe fisubl jne fs jno add adc loopne popfq xlat push push add cmp cs sub repnz insl in mov xor (bad) rex.WXB loopne xlat ftst xor jne ja cmp (bad) insb sbb pushfq (bad) pop rex.WB movslq incl (bad) out lret xchg or xor jno callq sbb (bad) lret movsb movabs (bad) rex.WRB rex.WRB mov sarl add jae in pop mov rex.WB rex.WR in cmp test out scas movabs (bad) in cld pop es pop push (bad) cmc shrl (bad) popfq scas (bad) (bad) add rex.WRXB mov or int sub scas enterq loopne cmpsl (bad) jmpq jp rex.RXB sbb pop (bad) nop sbb jnp or notb push sahf xchg push sbb lock (bad) add rex.WRX (bad) adcl add or mov (bad) cmp fdivs cmc rex.W rex.R bnd movabs rex.B jrcxz out (bad) jns gs sub movabs sar rex.RX mov (bad) mov cmp scas repz ss pop cmp sub (bad) push rcrb mov pop nop cmp out shrb pop rex.RX (bad) repnz xchg xchg xor (bad) fadds or (bad) adc data16 mov (bad) in cmp (bad) scas outsb movabs adc cltd rex.WRXB jae insl jns and pop rclb or ds (bad) stos loope (bad) (bad) cvtdq2ps push sarl scas xor test fild (bad) sahf movabs mov and fdivrs ficompl (bad) test push pop pop (bad) rex.RB adc rex.WB adc out or mov jle loopne jne jl fidivr scas movabs scas xchg (bad) pop (bad) or mov and adc in xchg ds or cmp rex.RB (bad) pushq mov rex.WRXB (bad) mov lcall in std fisubr jnp repz test (bad) sti and rolb movabs adc add mov cmpl outsb cmc lods pop loop rex.WRB gs (bad) movabs pop mov jne add js xor pop out setge xchg rex.RB test cld (bad) cmp ljmp mov mov mov mov addr32 pop jae add add push jg adc cmpsl js xchg pop in sub mov adc mov retq mov iret data16 lods (bad) (bad) cmpsl jbe fcmovu xchg (bad) jb scas movslq xor rex.WX cmc xor mov pop rex.XB shll and mov adc pop divl jae lret pop ss pop sbb or (bad) mov mul iret xchg pop data16 js sti sub xlat sbb rex.WB xor rex.X rex.RXB cs (bad) push callq add out insl push data16 nop jge mov out adc jmpq nop movsb enterq test pop sbb mov ja sub mov xchg lret (bad) out xchg cmpsb je or lods cld cld movabs icebp gs xlat mov fmull out mov xchg push xchg pop sbb in sti push cmpsl rex.WRB jle cmp mov push or jne out mov testb movsl enterq mov (bad) xor (bad) in cmpsl mov in fisubr cmpsb (bad) push adc fisubrl sbb and jge mov or mov stos mov movabs mov cltd (bad) mov mov (bad) rex.WB mov jbe sbb or out cmp stos push repz scas xchg movslq outsb mov repnz jb rex.RXB rex.WRB rex.WB jrcxz (bad) fwait xlat adc outsl cld sbb (bad) pop cs ss lret sub cwtl (bad) int3 jg mov jns (bad) mov lods addl lahf pop sbb mov and jl xor (bad) jrcxz jnp mov movabs loopne sbb (bad) cmpsb xchg adc and or jne cmp sbb xor (bad) mov (bad) es mov fcomps jp fstpl adc jg lcall (bad) cmpsb sub pop push int int and sar in insb in xchg sub pop cwtl pop pop xchg fistl cmp je fstpt out pushq addl xchg pinsrw (bad) pushq add movabs insl xlat retq pop xchg sbb test (bad) rclb rex.RB rex.WRX fwait pop (bad) fadds mov mov lret test jb cwtl cltd xchg mov mov jno pop (bad) fimul or mov orps int cld and mov mov mov or (bad) push xor roll retq fucomp mov xor rex.RX outsb adc sbb (bad) stos adc cmpsl (bad) sub insl jmp jno jmpq jae jp popfq sub pop movabs rex.RXB movabs cmc cmpl and andl cli mov cwtl mov adc es loopne outsl sahf sti sub pop (bad) rex.RX jmp fisubrl jl,pt or (bad) cmpsb or (bad) xchg (bad) (bad) xchg sub clc and fimul xor adc imul cmpsb mov cmp outsb lods jle loope push cltd fstpl enterq clc pop xor pushfq sbb mov pop (bad) (bad) or idivb fdivr fistpll mov and (bad) sbb pop imul or movabs sub rcl rex.WB test adc rex.WR rex.XB rex sub cmp pop jge and (bad) add mov fs (bad) xchg rex.WB (bad) lock in (bad) lret pop add cmpsb insl data16 data16 or xor (bad) and out jne loop gs pushq cmpsb xchg sub in pop xchg and data16 stos xchg jg lea (bad) mov jmpq sub (bad) sbb (bad) or jnp pop mov pop sbbl js rex.WB cmp icebp (bad) (bad) out (bad) int (bad) ficomp add jno ficoml mov (bad) pop rex.XB rex.W clc movabs rex.B sub cmp (bad) add or pop std outsb pop (bad) xor sbb xor (bad) (bad) lods (bad) (bad) pop (bad) je mov pushq jg (bad) push movabs mov fs (bad) pop cmp cld pop cmc repz push sbb (bad) repnz (bad) sbb data16 in mov mov pop js sub (bad) mov rcrl push sub repnz test xchg add xchg (bad) xor out cli cmc jb adc cmpsb jne pop jno pop movabs lock push rex.XB cmpsl sub xchg adc pop cmc push pushfq xchg (bad) rex.WX (bad) (bad) xchg pop (bad) add outsb cli mov jne pop fs mov out (bad) lods pushq movsl fsubrs rex.RX xchg sbb (bad) rolb (bad) ljmp (bad) sub xchg cmp (bad) xor rex.WX mov cwtl rex.WRX es repnz xchg test jnp and (bad) (bad) enterq cld movsl and or add pushq mov movsb (bad) (bad) or fadd rex.WRXB rex.WB add xchg (bad) mov stc add sbb js sbbb test or rex.WB int3 mov xchg mov hlt out imul sarl jle lods idivl fstps (bad) jnp sbb rex.R repnz js xor iret fs jns rex.WXB jb mov rex.X sub and out mov enterq cmp insb xchg jb rex.RXB jg push add rcrl int3 rex.WRB (bad) loop (bad) outsl mov (bad) pop mov jmp pushfq xchg repnz scas (bad) (bad) (bad) push sub (bad) (bad) loope jmpq scas pop rex.WXB add ds stos (bad) xchg rex.WR adcl (bad) xchg pop jrcxz pop (bad) rcrl (bad) in lret mov fsubrl outsb iret rex.B fldenv cltd pop js xchg fdivl mov pop mov sub pop pop movabs pop mov (bad) movabs sbb jo faddl or repnz pop cwtl mov (bad) mov fisttpll (bad) movabs movabs mull add rex.XB mov or rex.XB (bad) mov fs fiadd (bad) (bad) jl (bad) ja rex.WR cmpsl out data16 jno cli xchg cmpsb (bad) (bad) mov clc (bad) xor out push sub add rex (bad) (bad) cmpl pop in (bad) pushq scas sbb lea xchg test fs jb (bad) retq (bad) mov sub xor (bad) rex.WX jle cli loop movabs xchg adc add ja test out mov cltd jns clc pop adc scas mov lea (bad) (bad) ss add sub mov jmp sub out xor clc add fildll jle cmp mov mov (bad) mov xchg movsb insl xor jmpq (bad) idiv cmp jne test xlat and (bad) (bad) in out sbb (bad) insb lret and sbb cmpsb rex.RX outsl repz loop cld (bad) xor fildl and mov xlat sbb nop sub add test jge or movabs jns data16 mull (bad) data16 rorl pop repz hlt decl mov pop mov cltd mov xor insl jp sub xor adc movl callq push rex.RB decb (bad) mov (bad) mov jg ja mov sub mov pop (bad) adc outsb callq and lret push in mov add enterq inc jmpq movabs sub popfq rex.R rex.R rex.W cmp movabs int3 push (bad) (bad) mov jg fisttpll mov gs scas lock cmp fs or cmp outsb (bad) data16 cli (bad) shll add stos sub push test push xor fdivl gs rex.RX rcrb repnz lea repz rex.R pop hlt and jp rex.X mov and (bad) xor sbb (bad) sub cmp sbb (bad) xchg jmpq (bad) lods in mov mov imul xlat xchg rex.WB outsb or pop rex.RXB add stc push pop jg jo pop rex and cmp mov cmp and fsubl (bad) mov add xchg pmaddwd (bad) adc xor mov add sub out (bad) (bad) (bad) nop lret test mov xor sub (bad) rex.W pop and xchg cmp in popfq jmpq mov stc xlat jl lods scas out ror cli movabs rclb divb out pushq jp push push (bad) mov mov out sub jmpq ss or xlat pop add sbb cmpsl lret test xor (bad) js test movslq (bad) mov adc cmp xchg decb in (bad) xchg pop pop sbb sub rex.XB (bad) jne jrcxz (bad) rex.XB rex.RXB sub fcomps rex xor (bad) out (bad) push nop pop outsl add fisttpll stos pop or and rex.WB cmpsb lods addr32 sbb subl add and (bad) and or add jo cmp repz and jmp lock pushq or sub stos cmp jmpq stos icebp xchg jae sahf (bad) movsb sahf mov retq std (bad) mulb popfq rcl imul adc fisubr push jp push xchg lods mov or sar (bad) jl nop sbb cmp psubsw notb pop sub pop leaveq (bad) fnstcw adcl (bad) jg ds (bad) lahf sub insl negl jae js lods insb xlat sbb or (bad) pop sbb mov imul fldt rex sub in mov scas mov int lret test mov and (bad) punpckldq rex.W popfq (bad) mov mov in sbb xchg sbb mov rex.RB sub lret rex.RXB rex.RB pop rex.B and in (bad) ja (bad) lock jge mov mov sub out test (bad) mov xor mov rorw movabs (bad) fadds xor and and push (bad) (bad) mov cmp rex.WRX enterq outsl sbb rex.XB fdivs push rex.WB imul movabs sub mov pop mov lret (bad) add rex.RX icebp pop add (bad) rex.RB movslq out rex.WRB rex.WXB test jbe mov xchg (bad) addr32 fwait (bad) jb test sahf lahf pop rex.WX pop leaveq xchg and loop data16 jrcxz (bad) xchg xchg add movabs push rex.WB rex.WXB mov (bad) mov pop and jp cmpb or iret int3 xchg jle (bad) loop lahf mov jae xchg in jmpq and rex.WRX int mov scas cmpsb roll fs out in xchg (bad) fwait test jbe jp callq xor mov movabs pop mov (bad) sub rex.RXB add pop and fiaddl or xchg sub test xchg cmc xor scas (bad) es push shlb or nop movabs outsb add (bad) jp rex.WRX movabs (bad) data16 nop lcall mov (bad) pop scas sahf (bad) cmpsl (bad) adc movsl mov jmpq lea jl (bad) and and mov test (bad) sub pop (bad) rex.WX mov sahf cmp sub or mov and mov mov rex.WR (bad) jle sub mov rex.WRX fstpl popq orb movabs xor sub add mov outsb cmp pop xchg fucom pop test out repnz mov pop movabs movsb pop cltd xchg xchg mov pop popfw data16 or mov (bad) (bad) int and sub sub subl cmc pop mov adc xchg (bad) cli cmpsl insb sbb sbb adc pushq (bad) and rex.R cmp (bad) test pop push push rex.RB mov pushq xchg je pop loope mov or adc (bad) iret movsl (bad) or mov pop adc lahf adc jnp lock xor imul pop or and jno (bad) rex.WRX mov incl pop mov outsl je pop sbb (bad) ror pop jle fisubrl and pop rex.WRB adc sub pop mov callq mov iret testb in push pushq out sub (bad) divb out and pop (bad) jl je jle int3 retq add lea xchg (bad) test lods jp sub push mov add (bad) jae sub movsl (bad) xlat int3 (bad) jge movabs rex.WXB add fidivrl xchg (bad) hlt sbb xor mov (bad) sub push push shrb adc nop xchg rex.RX add fs imul jns ss mov cmpsl fistp (bad) (bad) lea or (bad) (bad) adc mov (bad) push movsb (bad) jmpq mov xor add fbld rex.WX add cmpsl jno enterq test mov sub cmp movslq rex.WRX pop decl xchg xor (bad) outsl and push sbb pop cmp jge or xor movsl (bad) sub cmp leaveq xchg retq incl mov mov insl imul cmp stos repz jl pop add xlat (bad) jle repnz je (bad) (bad) fiadd decl (bad) cmp add jrcxz pushfq adc shr loope mov or pushq adc mov gs sbb cmp outsl add jo ds mov cmp out jmpq leaveq mov jbe rex.X (bad) data16 sub mov std test lods (bad) mov movabs push rex mov (bad) xor rex.WRXB rex.WB pop rex.WX std stos rex.WRB fs movslq ja pop cmp sub mov (bad) adc jbe sbb notb je xchg (bad) fidiv movslq (bad) sbb lahf (bad) in test sti push clc (bad) jrcxz div mov jge and es mov jge imul sub addl mov rex.WXB pop pop rcrb sbb addb fsubs jb in (bad) xchg rex.RX xchg cwtl xchg pop leaveq (bad) enterq pushq jb negl xchg xchg add push fdivs or mov (bad) push shrl xorb pushq push mov (bad) and rorb jb cmp fs cltd mov xchg mov in in loopne rex.WRXB xchg test int3 xchg xchg cmp sahf repnz shrb cli (bad) rex.XB mov sbb sbbl mov rex add rex.WRB data16 push nop or fidiv sub push xchg xlat add cmpsl testb callq xlat stc data16 and mov shlb pop jp add mov addr32 sarl push cltd movsl lahf outsl scas or iret mov sbb sub (bad) rex.RX sub sub insl sub adc movsb roll (bad) icebp sbb push callq mov adc movabs mov (bad) (bad) push sarl push xchg xor imul adc and scas or lock sbb sbb in (bad) (bad) out lods xor pop sbb (bad) cmp sbb in add mov (bad) mov sbb xlat pop movabs lahf sub lahf movabs mov mov adc rex.WXB and sbb mulb (bad) rex cs scas xchg jns movabs hlt and mov rex.RXB rex.RX pop cmp test sub (bad) rcl cmc jb outsb rex.RX xchg adc mov out fs cmp sub js rex.WB jle (bad) int rex.W rex.RB lea (bad) rcll (bad) cltd and (bad) adc movabs movabs rex.W add fs lret rcl xor (bad) (bad) sub and sbb (bad) xor cmp xchg clc push insl rex.RB data16 jg out fcomps cli and mov hlt int data16 lret cmpsl (bad) lret sub xchg sarb sub mov sbb add and (bad) (bad) lahf fsubrs leaveq sub movabs (bad) repz (bad) mov rex.WRB outsb in or mov lods (bad) outsb movabs (bad) jmpq pop test and xor lahf sahf jle and (bad) gs (bad) bnd pop mov pop cmp mov or fnstcw mov xchg scas pushq (bad) outsl vpmovzxwd and and mov mov test rex.RX push repnz xchg jbe repz out adc mov int3 sbb jae movslq rcll mov imulb rcrl add (bad) movsl mov cmp xchg mov (bad) (bad) mov mov cmp push xchg mov std jbe rex.B loope sbb rex.WRB pop fwait iret jns mov mov in adc int3 pop rex.RB out (bad) jle rex.WRXB xchg iret iret rex.X (bad) stos (bad) and iret adc cmp stos pushq mov cmp sub sbb cwtl mov (bad) jmpq (bad) jp std lahf pop hlt cs sub rex.R data16 xor notl add (bad) sbb movsb xchg mov movsb notb popfq rex.X pop rex.W outsl jo (bad) mov mov fisub ja rex test xor (bad) pushq push or fwait rex.WRB stos pop in cmp mov movabs adc or (bad) sub mov add pop gs ja outsl rex.RXB and xchg rex.WR mov and outsl add sbb (bad) pushq or jrcxz lods test pushq (bad) sub xchg (bad) rex.WRB sbb cmpsb movabs ja pop lods rex.WXB test jnp mov icebp scas movsl gs sub fstl (bad) jo sbb cmp ficom lret addl pop mov rex.W jrcxz sub pop push add mov or rex.W sub std mov pushq mov mov pop rex.WX fxam jmp xchg test fistpll cmp add mov fs mov in and and gs rex.X mov mov jrcxz xchg fadds pushw pop pop pop (bad) jge enterq jge gs xchg sbb or push fstl pop adc push or sbb push and std pushq sbb (bad) adc imul (bad) xorl fiadd movslq jo (bad) movabs cmc test cmp mov fisttp pop sub iret fisttpl jge mov or jmpq fistpl pop std rex sub mov in in add and icebp push pushq fbstp jae xor std (bad) retq (bad) (bad) (bad) jp movabs push lahf xchg cs insb rorl imul adc (bad) out rex.XB hlt in jmpq add jo fidiv (bad) repz sbbb (bad) pop mov mov pop mov pushq scas callq cmpsl ss xor push cmp or jle push xor out test lahf xorb rex.R rex.R rex.WRB xor xchg fsubs mov lods sub push xor mov imul (bad) mov mov retq rex.RB fcomip imul (bad) cmp mov sbb fisttpll fcoms add cmp and and pop fwait (bad) sbb imul add mov mov divb mov rex.RB pop cmp and sahf xlat test jbe rex.RB pop pop sub rex.WX and adc mov or imul fdivr sbb push cli (bad) xchg mov (bad) movabs leaveq cmp and cmc pop fistpll jrcxz pop pop push shll pop cwtl lock imull (bad) xchg (bad) (bad) stos ficomp (bad) jbe rex pop xchg push pop (bad) ds loope in and out xor and rex.WRX iret mov cli (bad) jne xchg push mov xor add xchg and sub rex.RXB hlt push jns adc loopne fmul or movabs mov xchg (bad) rcl rex.XB test mov mov xchg and push retq outsl jle pushfq out (bad) out cmp rex.R xchg add pop (bad) xchg fstl push push mov fidivrl xor rex.WB mov cmp (bad) mov in jo xchg retq mov and pop xchg (bad) (bad) jb adc or fdivrp add mov add cmp test (bad) (bad) sbb (bad) mov retq pop mov cmpsl add add test (bad) and mov mov pushq adc or and sbb add imul test popq or add je pop fsubs pop clc push nop mov or (bad) movabs mov (bad) jae push sub (bad) pop fcomps (bad) xor adc (bad) jne pop cs add or std sbb jl sahf (bad) rex.WRB leaveq mov mov outsb jb psrlq add rex.X xchg lea mov push decb movsb rex.WRX xchg mov test andl mov xchg shlb rex.R clc fucomi push icebp data16 hlt (bad) or in insl cmpsb insl cltd iret rex.WX add (bad) (bad) (bad) mov sbb movabs push jrcxz fistpll rex.XB stos imul stos movslq adc (bad) ss cmp mov (bad) or mov mov rex.B int stos pushq movabs and jb ds mov jrcxz push (bad) rex.WB fcomps test movabs (bad) (bad) jle mov add or lret fldenv push cld rex.RXB loop rex.WX xchg rex.RB mov decb jl or rex.WX outsb pushfq mov loopne (bad) in xchg pop mov xor loopne (bad) jbe push (bad) jae test push (bad) push (bad) rex.RX xor outsb xacquire add mov jb sbb (bad) adc in rex.WR pop jnp and (bad) fdivrs lods fwait pop vpunpckhqdq rex.WR sbb js xlat test push pop jmp outsb rex.W rex.RB sub pushq rex.B pop add int3 fstpt or mov add mov retq in in xorl pop (bad) xor in sub sbb rclb callq cmp or (bad) (bad) movabs fwait pop (bad) or mov (bad) pop mov pop rex.WRXB jmp test iret xchg test mov movsb ds sbb jnp gs (bad) pop (bad) lret xchg sub rex.X rex.WB fstpl ror xchg cmc (bad) rclb cld imul rex.X xor lahf lret cli (bad) (bad) (bad) out lret mov (bad) mov andl rex add add mov (bad) mov data16 pop rex.RXB (bad) mov xor adcl rex.WR xchg adc cmp cmc test sbb data16 fldz jp sar and retq test mov jrcxz add loope scas test adc (bad) (bad) jrcxz pushfq cmp stc lods loop stos xor xor outsl jle jrcxz pop repz or mov (bad) out rex.WRX sahf (bad) mulb movabs or loopne pop (bad) xchg mov xor pop sub and mov cmp rex.WB (bad) pushq jrcxz out (bad) fs movsb outsl pop retq rex.W repz adc jle lret leaveq movabs xor cmp mov push rex.WRXB movslq clc ss xchg fcomi ficomp push xchg rorl movsl cli cmp int or fstpl nop pop rolb outsb repnz fxch pop (bad) mov insb ficom lock stos jmpq rex.RX rex.WXB (bad) pop sbb rex.WRXB fdivs pop test pop cs (bad) (bad) vpsrad je jnp push mov pop cmp lahf (bad) jbe in push rex.WXB or adc jmp fs and fldt addl jle mov (bad) mov xchg jrcxz pop xor sub jne jns mov outsl mov outsb (bad) adc imul pop xor xchg cltd pop pushfq test rex.RB rex.XB test shll add outsb pop push popfq fwait jg (bad) scas pop pop xlat xchg mov (bad) movabs jrcxz mov mov (bad) add (bad) fadd pop mov mov (bad) mov rex.WX pop mov in (bad) xchg nop (bad) imul je cmp out jrcxz jge jl (bad) data16 rex.R xchg popfq cmp rex.XB mov rcll (bad) jb idivb (bad) rex.W pushq pushq jp push (bad) jne outsb jae std imul jle sbb sbb xchg test cmp sub mov (bad) xchg rex.WR cmp add movabs fiadd sbb sub (bad) mov mov (bad) movabs xchg mov and lods fmull rorl es fsubrl mov sbb or push (bad) ds mov push rex.WRB fwait loope rex.WX flds jbe push sub and mov sbb rorl or sub mov syscall push mov out mov jg test and jg movsb xor rex.WRXB nop in movabs dec in (bad) cmp (bad) cs loope shll mulb cmp mov adc ds imul add faddp movabs (bad) push test xor pop cmpsl je and or scas (bad) jno pop int3 (bad) movabs rcrb (bad) pushq incb sbb xchg mov sbb mov mov rex.WB in or add je subb mov add movslq (bad) jne pop cmp movsl sub (bad) int3 rex.WXB pop test lret jle pop leaveq (bad) xchg adc lods loop mov mov lret fstpt in cmp pop test sbb xchg jg sub in pop imul xchg test (bad) rex.WXB data16 (bad) or rex.WRB (bad) movabs mov (bad) (bad) mov test jno (bad) movabs negb (bad) mov mov or mov lahf rcr lods imulb add fcomi jle insl (bad) mov xchg pop (bad) adc or push xchg pushfq sbb adc cmpsl add cli cmp movabs cmp jp mov or fcoml lods popfq cli icebp jl in rex.B sti (bad) jle adc fucomp (bad) cmp loopne gs cmp mov xor imul rex.R (bad) add cmp rex.WX es std mov pushq mov loope rex.WX sbbl fistp sub xor pushq test rex.B addb testl sub fwait mov jl sub cpuid jns lods (bad) (bad) cs pushfw sbb pop icebp sbb rex.W scas sbb sbb xchg xor ds sbb cltd xchg sti (bad) adc (bad) lahf sbb xchg jne mov sbb or (bad) ficom and xchg in sub sub rex.RXB es mov movsb xlat stos popfq icebp xchg xchg test mov out cmp iret ja ss ds (bad) iret in loope jnp mov movsl retq rcrl hlt pop jno pop xor std (bad) and (bad) pushq vandnps rex.RXB (bad) movabs pushfq xor xchg js pushq in imul or xchg adc rex.WR push sbb int3 rex.WX es cmp rex.RB pop mov sbb jmpq (bad) repnz adc mov (bad) movsl sub (bad) add cmc (bad) stc add std jae jno lea rex.R addr32 mov xchg jmpq add jge repz pushq sbbb xchg mov loop cmpsl pop callq push cmp jp or or loop pop jbe jp or mov movabs add icebp popfq stc (bad) pop xchg push pushfq xchg adc add cmp add (bad) rol jp jg xchg test (bad) lods movabs pop mov insl pop pop xor fadds rex.RB rex.XB rex.WRX mov scas cwtl pop pop rex add (bad) and lret (bad) sbb lea adc pop (bad) (bad) loop and mov int3 or rex.W je fs movsl and pop repnz mov (bad) (bad) and (bad) (bad) jmp loop (bad) jnp in mov fisttpl (bad) fidivl push xchg mov rex.WX rex.RB hlt pop mov cltd in (bad) mov xor (bad) (bad) in and cld xchg push sbb pop mov movslq sti cmp pushq (bad) jb or and jp (bad) pop (bad) adc (bad) addr32 pop sbb insl sbb mov jrcxz xchg rex.X (bad) mov in test cld xchg (bad) (bad) insb fildl rex.W mov rex.XB push xor negl out imul xchg and pop movsl xchg adc xor lods imul rex.X mov pop pop mov (bad) data16 cmp pop (bad) (bad) ror movsl pop (bad) jns push lock cmpsb cmc add (bad) or mov jne movslq mov mov movabs pop xorb xor or (bad) pop imul pop cltd mov pop stc rex.WRX add rex.X jbe outsb or and imul sahf and pop fcoml sti xchg mov je (bad) gs or rex.WXB movsl fidivr mov js mov sbb cwtl fstps adc sarl movabs rex.WR jp fs cmp imul xchg fimull mov mov lahf scas xchg stos (bad) jg xor mov gs movabs jbe jrcxz (bad) (bad) (bad) jp insl jmp sbb jg sti pop sub sbb rex.WX xchg je idivl rex.WX out cmp rex.WR (bad) (bad) sarb in movsb xor pop and imull jle adc or cmpsb out mov add rolb sbb rex.WB sub xor sbb lods sub rex.WRB scas sub rex.WXB and or add cmp retq xchg adc xor movsl scas sub pop rcrl fisttpl sbb leaveq cwtl rex.RXB rex.WRX sbb jle stc je movabs fstpl fdivs xor xor mov mov scas mov pushfq movabs rex.RB cmpb (bad) cmpsb rex.WRX xchg lea xor shll pushq cmc mov repz rex.W fstl out mov pop rex.RB test cs movabs push cmpsb loopne push or sub stos jb or leaveq jle (bad) (bad) loop xor jae pushq movabs int movabs lock xor push stos (bad) bnd xchg out pushfq jl outsb movsl sub loope jns (bad) addr32 lea mov repnz int or mov pop fdivrl jg std outsl fsubs jae (bad) rolb pushq rcrb repz pop pop rex.RB sub incl movsb rclb adc cli pop pop xor insb imul cmp callq stos out add or leaveq or rex.W pushq outsl sahf mov movabs stos mov pop or leaveq or (bad) or cli pop jrcxz (bad) pop sbb jg push rex.WXB mov out sub (bad) (bad) (bad) (bad) sbb outsl scas (bad) (bad) test (bad) ja cli (bad) push mov rex.WX and rolb (bad) xlat test or callq jge scas jb stos cltd pop (bad) gs pcmpgtd jne rex.WB mov (bad) jge mov retq sarl data16 lock movsb fdivl sbb fsubp sbb pop cmpb push sbb fdivrs or test imul cmp xchg div jmp pop (bad) xchg int3 or sti js cmpsb stc push (bad) sub rex.WRXB and nop pop (bad) jl out push xor push retq test (bad) fisttp pop (bad) add mov out lods sbbl mov xor add clc jmp xor mov in outsl (bad) and push shrb out jb (bad) jno mov scas in out rex.WR mov (bad) mov int3 loope pop test mov adc (bad) push rex.WXB rex.RX mov (bad) xor mov and ficompl lea rex.W (bad) out mov add or retq adc vpavgb vcmpps pop sub jno jb gs sub rex.WB loop (bad) xlat and shr (bad) retq push clc pushq imul add jno fwait pop xchg jno xor pop (bad) xchg sbb cmpsb shr shrb rex.RXB jge mov cmp push (bad) sub (bad) mov clc (bad) movabs (bad) repz xor andl subb lods loop movabs in push jb mov jnp mov (bad) and rclb leavew rolb mov or lretw and cmp (bad) sub rex.RB adc movsl jo xlat cmp loope sbb pop (bad) cmp (bad) jmp pushq scas out mov mov jo (bad) (bad) jrcxz idivb (bad) in repz mov sti outsl loope pop or rex.RB (bad) pushfq clc jns and (bad) jbe jmp movsl fwait xchg mov pop lods (bad) fs add cwtl jmpq mov pop repnz rex.WXB pushfq pop xchg mov and sub cltd pop xchg clc mov and mov leaveq insb test (bad) cs movabs pop je lret (bad) cmp pop mov rex.RXB pop data16 movabs sbb cmp iret mov shrb out mov addr32 push xor repz adc int3 push cmpsb sub rex.WXB jmpq push (bad) lret in rex.XB sahf pop test fidivl and xor out mov mull push pop lret xchg imul rex.WX movabs mov test adc cli xchg rex.R rex.WRB push sub loop incb mov cmp cmpsb pushfq lods or outsl sub or je loop sbb stos (bad) mov stc add rex.WXB xchg sub movsb lock rex.RB pushq gs pop (bad) dec nop (bad) rex.RX jle or retq sbb pop out sbb test mov sub cmpsl movabs (bad) mov andb out xor shlb add pop and pop (bad) push or rex fs jle xchg mov adc in add xor rex.X sbb push lret (bad) pushq movabs ds jo pushq cmp pop rex.WRXB xor xor popfq mov and insb (bad) sar jo or xchg test movsl pushfq push cmpsb ficom out rex.RXB movabs adc mov cmpsb cld iret outsb rex.WRX pop enterq icebp movslq rex.X movabs rol scas rex.WXB sub pop xor lret movb mov (bad) mov cld lret (bad) callq pop rex.RX imul bnd add wrmsr add and rex.WX pop in jbe (bad) hlt icebp and stos movabs je out sbbl sub fistp cwtl add rex.RB xchg add scas imulb test mov rex.X rex.RXB pop sub xchg (bad) adc in pushq out int rex.RX sub orl (bad) sbb adc (bad) cwtl movslq (bad) xlat rex.W mov movslq pop cmp out xlat stc callq rex.W js mov in pop jge gs data16 sbb sbb pop (bad) or mov int3 jb mov and sti (bad) pop je movsl mov (bad) (bad) (bad) (bad) out std jl callq (bad) mov or fcompl jnp data16 pop ud1 fcmovb (bad) cmp jae test addr32 repnz cmp es out pop mov cltd pop pop (bad) rex.WX (bad) incb sbb (bad) mov ss in (bad) sbb and push ja stos xchg test cwtl (bad) es jbe rex rex.R xchg xor hlt imul rex.W repz stc mov js push rex.WRB movabs out mov jb shr mov add jo or insl add cmpsb je mov test push imul sub jns ja fucomip clc idivl (bad) rex.R sub adcl mov jnp jb shlb iret cltd insb sahf movsb jns test adc (bad) and sub rex.RB xchg or and stos shr sbb outsb xchg repz rex.WRB xchg mov out outsl mov cmp sbb rex.RB insb outsb lret lods jae movslq ds jo rex.WX (bad) jae sahf sub movabs fisubrl nop jl sbb test add (bad) div cld movabs xor xchg (bad) jb push fistpl mov mov fs ja sahf repnz scas (bad) jle fnstsw rcll callq (bad) cmp pop lods jge (bad) (bad) push movabs popfq (bad) sahf (bad) sbb scas jle (bad) rex.RB addl loope rex.WRXB js (bad) cmp rex.WX callq jrcxz rex.XB test (bad) ror rex.WRX insb (bad) je (bad) rex mov (bad) xor nop (bad) pop std mov sbb ja loopne xchg xchg pop jge test cmp andl cmp in jmpq je (bad) rex.XB outsb lret rex.W test rex.WXB rex.X pop cmp add jg rex.RB pop cmpsl gs pop fldcw ficom push cmp xchg sbb rex.WX xor push iret sbb or mov stos addr32 xchg rolb mov pop (bad) sbb pop xor xchg jne movabs (bad) or mov mov sbb (bad) pop jno and (bad) xchg (bad) vcomiss xchg sbb outsb (bad) mov adcb fcomps scas addb rex.WRXB insb out movabs sub (bad) sbb sbb (bad) mov pop retq (bad) cs push adc mov std int (bad) mov data16 sbb (bad) pushq rex.RB rex xchg pop (bad) mov push test callq gs test sub (bad) mov pop or push sti add in xchg xchg (bad) scas and xor (bad) pop cld xor jg mov and shll loopne gs xor mov push retq push jle jge movabs pop (bad) or mov and pop fstpl push ja inc out jl xchg lea pushq notb mov cld and push (bad) test (bad) xor insl fild lahf mov fwait (bad) adc (bad) scas outsb xor sub (bad) or enterq test data16 lahf jle gs pop je repnz cmp pushq push leaveq int clc xor cs (bad) je (bad) pop gs mov sarl ja adc or andb pop testl movsl cmp loope xor pop push idivl sbb or sub je lahf xchg fisttpl test pushq ja jo insb test es push rex.WXB movabs add pop hlt (bad) and xor es pushfq push rex.WR rex.RB pop cmp in mov (bad) retq push fs mov rex.RX lea (bad) jp adc push testl cmp pop adc movabs fldl jo stos and movsb xlat jmp adc fisttpll lods pop add pushq or (bad) sbb pop je rex.X adc loop cmp xor rex.W xor jp xchg pushq pop push jne mov cmp pushq lods cmpsl (bad) rex.WXB (bad) movabs pop rex.WX in rex.WRB rex.WR (bad) sbb xor mov rex.WRB ds pop popfq jo callq sbb int3 in xchg xchg and sbb rcll mov pmulhuw out (bad) rex.WRXB pop xchg adc xchg (bad) sub callq sub test jno in movabs roll clc xchg cmpsb fsubrp pop (bad) repnz (bad) out (bad) stos rex.WR movabs sub (bad) pushq or mov scas (bad) mov (bad) cmp (bad) rex.R stos rex.W jmpq js mov stos cwtl xor (bad) (bad) mov sti rex.R rex.R pop ja adc pushq and (bad) stc (bad) cs repz mov movsl lock xlat movslq (bad) imul cmpsl sub loop mov xchg xor rex.RXB rclb mov sub pop int3 or cli std jnp pushq xor jl in fisubl adc rex.WRXB pop sahf pop fsubrs pop (bad) mov cmc data16 es addr32 iret fcmove push addr32 (bad) (bad) loope mov hlt fldenv movabs (bad) int3 enterq sub ficompl or cmp push out cmp jrcxz retq scas jle jge scas rex.WRX xlat jg test popfq mov sbb cmp fst and in adc jbe pop rex.X cs movabs js rex.RXB sbb test mov mov leaveq xchg (bad) (bad) sub rcrl int3 notb (bad) push insl movabs add (bad) rorb lods (bad) (bad) adc (bad) mov mov mov mov (bad) pushq movabs xchg retq xor xchg adc jg add in (bad) rex.RX sub (bad) sub (bad) rcrl test mov stos addr32 (bad) sbb or sub rex.RXB jl out cmp (bad) rex.WXB loopne rex.RXB sbb out (bad) rex.W data16 sub (bad) (bad) out jrcxz pop out in cltd (bad) or xchg movabs fcoms fmuls and add sbb jle (bad) push (bad) and xor pop loope adc pop (bad) in (bad) ja and cli mov jae test hlt gs push scas pop sbb push icebp cmpb gs addb (bad) (bad) sahf (bad) sub sahf cmpsb test xor (bad) data16 outsb push (bad) rex.RB addr32 ds mov push jne (bad) xchg rex.WRX adc jle push rex.R loopne rolb and mov fwait insb (bad) pop mov out (bad) sub shld sub clc outsb rex.X mov mov cmp sbb lea mov stos loop sub and add in outsb jl lods movslq xor (bad) (bad) cmpsl and (bad) rex.WXB hlt cli (bad) push pushq mov xchg pop loope (bad) mov lods cmp (bad) mov rcr pop cmp cmc pushq pop movsb mov fistl negb movsl or (bad) jmpq push mov mov jnp sti pop xchg popfq mov cmpsb (bad) or (bad) repnz stc sbb (bad) rex.WX (bad) pop lock push lret (bad) movsb mov (bad) rex.WXB (bad) shll (bad) cld mov gs (bad) in out sbb push or (bad) cmpsb and pop neg sub and pop adc or cmp jle jmp fiadd fist cld push xchg push xor jl rex.WRX cmp sarb sbb mov gs outsb pop (bad) (bad) stos sub cmpsb out test jle rex (bad) cmpsb mov rcrl xchg leaveq clc fmuls pop rex.RXB jo fcomps (bad) data16 test mov outsb fmuls sarl rex and cwtl sar xchg notb hlt mov in iret (bad) (bad) leaveq jl lods push in rex.WRX data16 je xor add data16 adc adc (bad) (bad) mov cs xchg rex callq in loop cmp add xchg rex.RXB mov rex.WR (bad) pop rex.WRB cs test insb gs data16 (bad) movabs mov and pop (bad) adc movabs mov rex.WR mov rex.WRB rex rcl lahf fmuls stc mov fisubr lret jnp ds xchg (bad) and rex.W fwait pop fisubrl es adc rex.RXB (bad) sbb stos (bad) xchg sbb mov movslq movsb movabs movabs cmp je sub push rorl mov sti rex.RB pop (bad) test repnz (bad) rex.WX rex.WRB mov lock movabs or (bad) (bad) ds mov pop jp mov jbe jne insl pop pushq jp sbb je sbb push enterq imul cmp mov orb push xchg pop (bad) idivl sub loope jne (bad) (bad) loopne je or je xor rex.XB rex.WRXB or movabs pop notb mov sub and rclb cld pop add pop mov or mov mov xor cmp mov sub (bad) cmc (bad) popfq sub adc test push xor (bad) fsubs loope mov imul jae loop pop (bad) lahf xchg rolb rex.XB test xchg xchg mov lods in sbb cmpsl data16 (bad) rcr mov loop sbb rex.WRX mov sbb jnp movsl (bad) cs mov xchg rex.R lock pop xor cmp add js test (bad) (bad) cltd push and push fiaddl shll (bad) pop mov rex.WXB cld jbe ja sub (bad) pop (bad) rex.R jo gs xchg push shr jl fbld jns and rex.WB pop pop xchg adc gs lock idivl rex.RB rex.WRB repz and rex.WR cmp or mov rex.WRB imul stos pop retq sub mov outsb (bad) stos pushfq (bad) insb iret (bad) test rex.B mov hlt mov mov rex.R xchg pop nop or sbb je adc (bad) mov jmpq (bad) adc xchg (bad) (bad) push test adc or jmpq jmp neg vandps movslq movslq (bad) sbb jrcxz mov xchg (bad) mov sbb sub movsl js je sub std cmp xchg cmc out add or pop mov (bad) rcr enterq pop mov lret pushq (bad) stos nop rex.XB rex.WR ficoml pop pop xchg out adc iret test sbb add movabs rex.WB sahf sti mov insl add jne (bad) add (bad) out mov pop jrcxz sbb clc jbe mov ds stc sbb leaveq lret (bad) add pop xchg cwtl adc pop mov ficompl (bad) xlat (bad) (bad) rex.WX mov loop fwait jp rclb (bad) (bad) jge and or retq imul pop rex.RB pushq add (bad) mov ja rcll xchg pop repz sub in cmovs (bad) (bad) jmpq or mov movslq (bad) sbb rex rex.WR jle ja rex.RB cmpsb (bad) pop push outsb pushq in outsl rex.WRX addr32 sbb mov xchg lock and or mov (bad) in (bad) xchg (bad) xchg push push jp loope and sar data16 push mov mov movsb (bad) jge jp sbb jl push mov sbb (bad) test jb and loop xchg repnz cli loope out or (bad) mov (bad) pop cltd jo movslq sbb retq lods pop imul add pushq (bad) and (bad) ss es rex.WB stc mov (bad) std test rex.WRXB (bad) or mov (bad) (bad) jnp retq movslq (bad) insb rex.WR add fnstcw pop or out sub pop (bad) lret and rex.WXB ds pop popfq xlat int3 retq rcrb cmpsb rex.RB sub add pop or rcrl jl (bad) jno or push xchg loop (bad) in je sub lahf mov pop fisub (bad) adc (bad) data16 and rorl jmpq (bad) loop jge mov test push jmpq mov add loopne jp movabs int or (bad) addr32 mov outsb sub retq rex.WXB stos mov fsubrp fldcw mov (bad) rex.WB cmp or (bad) loop (bad) push push je or or js cmp decl rex.W push lret sub mov xchg (bad) cmp ds cmpsl (bad) (bad) xchg lret out sbb rex.WRB icebp cmp cmpsl sub jo push (bad) and xor in lret fisttpl and sbb cmp jg jl mul jmp and add ror int3 notl (bad) and mov sub sub (bad) adc xchg pushfq icebp scas (bad) pop jmp cmp mov test jb (bad) movabs scas pushfq jrcxz push (bad) cmpsl (bad) cmpsb xor loop (bad) lock cmc icebp and paddd rex.X rex.XB (bad) push mov pop pop fs in data16 ds sbb stos jne rclb cmpsb push popfq (bad) xchg rex.XB movabs mov cmp in popfq (bad) insb ficoml (bad) movabs test std (bad) sub or adc and stos frstor cltd out fadd pushq rex.RB and (bad) gs data16 andl lret adc pop cltd xchg jo mov int3 movsb (bad) lahf mov (bad) xchg (bad) sbb and xchg mov mov insl rex.WRB pushq gs jne or je jno sbb fdivp jb test (bad) and or (bad) add pop mov sbb and adc and out js movslq adc std jle pop jnp xor (bad) mull data16 sub xchg mov outsl rex.WRB (bad) movabs sti push add out insl imul (bad) (bad) rex.RXB shrb gs in (bad) (bad) pop lret (bad) int3 movabs mov push jle retq xor repnz xchg mov int3 loopne loop xchg (bad) push sbb jnp retq jns xor shrb movsb jae rex.WB sbb test lret (bad) (bad) rcll pop testb sbb pushq push shll add rex cmp movsb outsl adc pop jno gs mov imul mov lock rex.RXB (bad) or sbb jo jmpq rex.XB pop imul add callq rex.RXB (bad) (bad) cs (bad) pop (bad) nop in sub outsb shrl jbe mov out sub (bad) mov or (bad) jrcxz or rex.WB (bad) push movslq mov mov jge sahf push adc push (bad) cmp jmpq cwtl jp out pop fs cmc fldenv cmpsb (bad) xchg fisub (bad) mov lods pop rex.RX cmpsb xor fstpt mov pop rex.RB rex.RX rcrb xor movsb adc pop outsb scas (bad) rex.WRXB mov adc sub xchg mov xchg cmc rex.WX loope out and divl mov push jl leaveq cmp cs lods xchg pop (bad) lock or (bad) pop nop mov ds mov (bad) pop leaveq int3 cmp lods addr32 (bad) jbe pop in loop lea and mov loopne sbb popfq idivb xor (bad) cmc pop retq test fisub jbe,pt fcoml movsl jl mov js ficomp in lgs fcomps outsl (bad) stc (bad) sbb rex.RXB push (bad) fbld push (bad) test adc and jbe push out movabs data16 pop fld or jae fistpll out in pushq in push movabs or fwait pushq and (bad) jae ds test lahf push pop repnz leaveq xor mov sbb ds rex.B jl adc test xor cmpsl add cmp movsl (bad) fdivrs sahf add push iret rex.R (bad) (bad) loope (bad) outsl hlt adc (bad) retq (bad) data16 cmp fs pop mov mov out jbe (bad) cmp and adc pop adc adc jno or mov sub add jge xor in (bad) add data16 or pop pop out rex.WX fs cmp cmp pushq (bad) roll jge icebp mov int3 (bad) movabs rex.WRB (bad) pop test je es mov retq movabs adc rex.WRB je roll mov jrcxz cli (bad) (bad) jnp jbe mov mov push in out pop fildll sbb push (bad) test mov xlat pop clc or jl jrcxz push cmpsb xchg mov adc adc movslq rex.X (bad) out and loop (bad) (bad) pop push stc mov and cli jrcxz data16 repnz mov mov jle popfw push je mov int (bad) jrcxz cwtl shl sub sub pushq adc imul test movabs add jno sub jle lret mov sbb data16 adc push sbb pushq mov loop (bad) mov cmpsb fildl mov out mov or (bad) lret hlt lahf fisttpll adc and jbe xchg jae and xchg insb and (bad) xor loopne lret xchg rex.RB rex rex.RB jne fs mov pop sub xchg (bad) js mov sbb div mov pop gs push fcmovu push mov xchg movabs cmp icebp test out rex.WRB cs adc movabs test rcrb movabs insl pop mov xor rex.R push (bad) add (bad) jmp mov pop leaveq je (bad) gs mov outsb jae xor scas outsb mov faddl jp pop outsb in pop pop rex.XB and pushq xchg add decl (bad) rex.RX sti stos rex.R adc icebp (bad) je rex.W dec rex.WRX rex.RX jo lods (bad) mov add cmc cmc stc sahf stos cltd stos scas ds mov (bad) sub es xor lea mov (bad) ja or (bad) jp ss cmp enterq rex.X fcmovbe int sbb cmpsl (bad) loop xor add sub mov lods or (bad) and xchg pushfw push pop cli std cs imul rex.WXB data16 (bad) loop and hlt xor xchg cli mov jb mov adc jrcxz xor pop cmc mov gs faddl movabs push (bad) push icebp (bad) iret shrl xor data16 sub lret sahf add lret jmpq sbb rex.WR rex.B (bad) xchg jle (bad) add (bad) adcb xor mov decb or outsb test rex.WXB rex.X fs jb xor cmpsb retq push mov cmpsb out outsl cmp mov insb in test jb (bad) and pop decb sub (bad) rex.R push mov (bad) sbb pop jne callq cmpsb (bad) (bad) add mov outsb pop or je (bad) fildll movsb or (bad) test pop cwtl outsb fimull rex.B pushq or pop pushq nop jl (bad) fwait pop int3 retq jg jb fucomp rex.WRXB pop repz mov xlat pop stos pushq cmp jbe cmp cld and fisub (bad) (bad) movabs lret xrelease repz jg mov loop lock pop (bad) test cmp mov vpaddd (bad) (bad) rex.R jne xor je rex.WRXB ficoml addr32 rex.WRXB xchg and shrb jo mov push (bad) mov xchg shl scas int fdiv repnz rex.WR mov sub lret rorb rex.WR (bad) (bad) add mov add rex.X cld (bad) mov (bad) pop lahf insl (bad) cmc roll xchg retq rex.RX movabs sbb rex.WR mov (bad) pushq rolb sbb pop jo movabs pop popfq (bad) nop xchg mov ds fnop add mov insl out sahf shll pop cs xchg rex.WB ss sub sub (bad) sti jns push xchg psubd push pop movabs (bad) jmp test xchg (bad) xor in (bad) ss cmp rcll outsb or (bad) rex.XB mov movlps or out jmpq push xchg adc test in pop xlat (bad) rex.WRB or out mov (bad) (bad) (bad) xchg (bad) jge out mov adc lea pop mov (bad) fmul rex.RX sti pop test nop adc sbb mov cmpsb pop retq imul (bad) (bad) or (bad) xchg mov rex.RB out adc jmp fwait push loopne and (bad) rex.RX mov clc cmp cmpsl iret pop xlat rcl lea loopne jae and (bad) rex.WX outsb (bad) rex.RXB stos (bad) shlw and jrcxz ficom rex.WXB (bad) sahf xor int (bad) pushq pop pop out iret repz rex.RXB rex.WR outsl jo cmc hlt int3 fisub xor pop push jae (bad) jns cmp loop and jne (bad) push mov mov and repz je pop (bad) pop ljmp rex.WB cmp jbe rex.R adc movsl rex xorb mov rex.W (bad) pop loop pop (bad) push rex.WRB mov lods xchg (bad) rex.WRB callq sbbl (bad) jmpq jle scas (bad) (bad) jno (bad) (bad) (bad) mov repz mov (bad) mov pop add std fs mov mov push cmpsl pushq jrcxz (bad) fs movabs xchg sahf xchg lret mov jb mov (bad) push int jo xchg stos (bad) xor mov fisttpl addr32 jbe pop scas pop pop xchg out outsb mov rex.RX rex.R callq sub cmp sbb bnd leaveq rex.WB sub adc xchg sbb rex.RB hlt lods mov lock xchg push xchg cmp mov retq rex.WRX loopne or pop push jle stos and cmp data16 rex.WRB jae cmpsb fcompl pop cmp sub mov (bad) clc xlat (bad) gs loope in ja or (bad) pop sub int3 cmpsb sahf repz (bad) xor leaveq rex.RB lock cld and sub xchg rex.WB rex.B cmpsq pushq cmp jmpq mov add or rex.B xchg rex.RB gs in xchg adc sub (bad) (bad) push and sub jp rex.XB pop leaveq (bad) (bad) lahf mull mov cmp cmp jge data16 retq cmpsb movabs jg push cmpsl mov pushq mov stos mov imul jge mov insl stos idivb loope in fcompl adc rex.RXB mov push mov out sbb lret negb sub nop rolb in pushq cmpsl gs mov rex.RX (bad) test xchg xchg mov rex.WRB pop rex mov jo std (bad) xchg or out pop pop xchg ficomp jne mov cs cmc icebp add pop out (bad) push xchg pop add mov (bad) in mov and mov outsl (bad) pop (bad) cmpl or xchg jge and (bad) or data16 jle or mov fcoms and jne (bad) cmp rex.RXB retq mov sarl movabs (bad) pop push and callq pushq cmc pop (bad) loop add xchg icebp in icebp js lods mov cmpsl ja rex.R ds sbb mov or or lods xchg shr ss cmc in orl (bad) in xchg out sbb shrb incb jne mov add pop jmpq sub cmp insl xchg push repnz rex.W jno (bad) mov adc shrb movsl xor shll data16 (bad) mov cmp callq (bad) movabs lock rex.X push cmpsb pop (bad) push rex.WXB push cmp jo cmp loope in sub fdivrs xchg xchg xchg js push lret movsb (bad) je in movabs mov and xor jmp sarl (bad) rcl rex.WX repz bnd sub fbld (bad) adc out std pushq add (bad) rcll jnp push pop cwtl (bad) (bad) movabs sub mov (bad) sub movslq std xor rex.RB lcall mulb pop test movabs in (bad) pop rex.WRXB push (bad) retq rex.WX lea or (bad) (bad) and push xchg cmovno jle rex.X (bad) fs (bad) stos push xlat mov sbb jb adc jbe push mov mov scas movabs jne sahf shrl xor xor jle movsb (bad) mov xlat rex.WRB je sub jnp movsb pushfq cmpsl subl rex.WX test rex.WRXB sub mov (bad) js cmc push rol mov mov pop popfq jg,pn in xchg std and sbb out add pop mov lock lret icebp or jne insl xlat mov sbb rolb mov test ja or mov test sbb movabs jrcxz movabs (bad) adcl scas (bad) movsb adc fwait (bad) (bad) xchg adcl or ljmp (bad) popfq out loope mov pop or (bad) rex.R adc psrlq shrb mov nop jrcxz sbb or cmp es jno iret (bad) mov jp pop or jl mov repz cmp retq cmc roll xor mov mov loop rex.WRB and in decl cltd pop lods loope scas test and cmpsb mov imul (bad) repnz mov out pop mov leaveq popfq xor and mov add or out mov rex.WB rex.WRB in test mov xchg (bad) movabs imul lock add jo rex.XB enterq rex.XB jrcxz jo loop xchg push push rex.WRX movslq iret adc rex.RXB rcll clc (bad) stos loopne push push pop add sub (bad) pop (bad) mov or cmp and sub pop fisubl clc xor (bad) cmp xchg loopne ficompl (bad) jp rex.RX mov movsb (bad) pop data16 iret (bad) fbstp imul cmp add pushfq pop lret mov lea js lods out loop movsb rex.WRX adc pop add retq repz (bad) movabs xor sbb in test add pop rex.RB sbb adc rcrb insb add fisub mov rex.RB subb and add pop mov lock clc ja nop callq out xor sahf xchg push enterq and xlat push (bad) mov xchg (bad) or ds cmpsb movslq and mov rex.WR mov ss add pop push mov test iret sub xor test lods cmpsb mov ja add (bad) out xor loop xchg nop cmp (bad) mov (bad) xchg pop adc jb or add mov (bad) and adc mov fstps sub mov push movsb in push lock scas sbb (bad) xchg xor (bad) (bad) (bad) vmovlps sahf add rex.WRB popfq rolb fimull rex.RXB fistp rex.WRX mov cmpsl mov add xor (bad) insl je in sub (bad) or (bad) loop fist mull mov fiadd js test fldl sub pop and fs gs (bad) jl ja loope test callq xorl sub sub mov clc lahf pop pop pop mov jmp or cmp (bad) (bad) (bad) mov mov (bad) xor xchg (bad) mov sbb sub mov fwait sub or adc callq in lret push out iret pop fildl or sahf clc iret clc retq shrb mov (bad) mov (bad) repnz cmp retq add adc cmp pop mov xchg rex.WRXB jnp rex.WRXB repz sub pop ja movslq jbe cmp (bad) (bad) sub or adc adc (bad) mov and mov fdivp iret mov push mov hlt sbb sbb mov mov or (bad) mov pop jle jne cs add (bad) pop callq and add pushfq in ds mov rex.WRX rcr rex.XB jae xchg movabs jrcxz xor xchg pop jne lock (bad) repnz rolb lods mov cltd xchg sahf jmpq sub cmpsb mov add pop rex.WRXB loopne data16 fidivr data16 fnstenv sub cmp mov and (bad) retq rex.WRX (bad) test jle sti outsl adc pop lahf pop rex.WRXB mov (bad) sbb int fwait add xor xchg rcrl xchg xor (bad) (bad) idivb (bad) push scas (bad) pop test imul mov rex.WR bnd (bad) in jp mov mov fcoml sbb xlat add js jb movabs xchg sahf xor or in stc loope sbb fadd movabs jbe in (bad) jne lret mov xchg sub sbb jl add sbb (bad) rex.X pop and mov lods sbb xchg sbb nop jne add movabs xor mov movsl (bad) mov add (bad) sub rex.RX pushq test sarb divb lock sti movabs jo (bad) sub bts cmp push sbb movsl movabs (bad) xchg add (bad) (bad) (bad) mov mov or outsb xchg rex.XB (bad) movabs xorl (bad) add jl xor in mov (bad) es sub insb cmp icebp mulb iret rex.WR xlat stc jrcxz xor xchg (bad) pop jne test rex.WRX retq xorl je xor pop outsb jae popfq (bad) sbb cmp imul imul rcl ficoml (bad) jno sbb int out loop and xorb (bad) push mov mov imul xchg sahf ds xlat pop (bad) (bad) add mov (bad) cmp mov test xor popfq stos repnz sbb rex.WRX retq js push cmpsl and imul add incl in cmp es sbb iret lea jl out cmp mov stos xchg xchg repnz pop es movabs retq movslq sbb stc stos movabs (bad) push sbb xor lret jl fucomi test cli mov mov sar jle cmp (bad) add in xchg shrb mov and fidivr sbb cmp (bad) (bad) rex.R jge rex.R jne add pop insb pop lods sahf xchg fcoms test stos xor sbb pop jl rorb jnp adc stos out (bad) push sbb cltd add push xor rex.B xchg rex.XB cld repz jo stc xor data16 (bad) fistpl imul and rex.RX mov or sbb jle loopne pop (bad) (bad) icebp xor and mov pop mov or or mov faddl add shlb (bad) xchg ss insb scas jmp mov xor sbbl mov xor sub scas mov fs jp mov (bad) insl push nop and cld xchg xor sbb (bad) xchg mov scas cmpsb mov jo mov callq mov jrcxz test mov mov cmp fs (bad) iret js,pt (bad) testb in repnz sbb lret rex.R pop cmpsl rex.WRB movsb cmpsb cmovle fsubp sbb and mov lods (bad) xchg rex.WXB test push (bad) lret sub xchg rolb insl (bad) add movabs retq sub lods cmpl rex.W add pushq adc ds jns (bad) hlt mov int callq movabs (bad) add outsb rex.WX fs xchg lahf mov pop rex.WRXB rex.RB (bad) mov lods pop cmpsb mov adc movsl sbb xchg js xor mov xchg in pop mov outsl pop rex.RB notl add pop imul fwait xor std pushfq (bad) callq add pop in xor (bad) xor ffree cmp negb push (bad) pop (bad) icebp rex cmp stos fwait (bad) xor pushfq pushq xor add pop movabs mov (bad) cmp xor test jg mov or and xor cmc (bad) sahf cs (bad) repnz (bad) sbb test mov mov push mov cld or out jmpq push pop adc jle pushq scas (bad) rex.WX lock (bad) jg sub and sbb shrl retq adc int3 xor xor loopne sahf (bad) pop mov mov rex.WXB imul sub outsb movabs adc rex.X pop push sub cmp jmpq pop (bad) std mov (bad) (bad) int3 enterq xchg movabs push pop mov (bad) push cwtl (bad) rex.RB xor xchg mov jrcxz test xchg (bad) xchg (bad) (bad) (bad) leaveq pop rex.RX repnz imul xor nop (bad) fdivp (bad) cmc out cmp mov and fsts movsb jl test xchg scas rex.WRX sahf sub adc xor (bad) mov xchg int rex.WRXB vdivsd rex.WRX movsl (bad) pop mov or incl xorl (bad) je ss (bad) xchg (bad) retq rex.RXB jae jge pop jne sbb pop add xor pop (bad) in sti mov movabs jns mov cmc out pushq hlt or sub add adc cmpsb and (bad) mov iret mov scas rex.WB lret cmp (bad) cld adc loop idivl pushq push retq cs xchg pop lret xlat jl (bad) pop cmp or xlat jno adc adc pop mov xlat lret movslq cmpsb jbe adc out std data16 (bad) cmc adc jrcxz and fiadd rex.RB stos xor push adc icebp sbb int3 (bad) add lahf hlt callq (bad) (bad) and pop xor mov (bad) (bad) enterq push callq pop nop or pop or ds adc mov (bad) mov jle pushq sbb (bad) (bad) imul fmull movabs (bad) fs insb pop xchg jl push xchg lret pop (bad) je (bad) xchg push mov cmp out movabs flds cmp mov stos or (bad) in (bad) sahf popfq pop leaveq in cli pop jbe add movabs jl xorl gs pop pop add loopne lock adc int or add and sti fsts pop stos push je mov mov rex.WRXB fwait or pop insb jbe (bad) adc rex.R pop (bad) movabs rex.X jmpq rex.RB rex.X jmp stos movabs rex.RXB pop sbb movslq hlt clc out mov addr32 pop out mov xchg (bad) loope ja cmp jmpq negb (bad) rex.XB (bad) sti xacquire lods cs pop pop rex.WR add nop scas (bad) xchg (bad) pop mov xor pop jb outsl lods retq cltd ds add je cmp sub movups (bad) fsts movsl pop push rex.X jmp fnstsw outsb sbb ds rex.W sbbb iret (bad) xlat insb rex.RXB shl add jb sub pop push (bad) cli and mov push jl jbe jno movabs (bad) (bad) (bad) (bad) xchg fs pop rex.RX sub loop scas repnz out (bad) mov (bad) ja xchg iret add or addr32 ds in (bad) (bad) pushq (bad) jns stc (bad) mov (bad) test cli adc rex.WRB add enterq rorl mov (bad) jne sub cmp outsb xchg cmp int xchg cmp sbb sti data16 (bad) sub jmp test pop add ja adc adc sub cmpsb cmpsl fnsave cmp cmp (bad) or mov shlb xchg and rex.X rex.WRX and pop rex.WRXB rex.RX scas or js pop and or bnd rex.RXB (bad) (bad) ss xchg cmpsl stc (bad) (bad) sbb jb fistpll and pop push xchg sbb jrcxz xchg mov cld repz (bad) ss stc js xchg es push add shlb pop rcrb stc mov (bad) test pop (bad) sar es (bad) jmpq add adcl jrcxz pop cwtl adc and or or sub adc mov popfq mov sbb rex.WB rex.WR rex.W jb jbe insb jle in mov (bad) pop (bad) test pop (bad) jbe icebp xor mov outsb in cmp lret in (bad) rep (bad) push test insl (bad) out mov add jge repz (bad) (bad) rex.WRX lods movabs js mov out movslq pop in (bad) pop popfq loope sbb cmpsb sbbb xor fnstsw push sbb add jp cmp pop and (bad) mov lret mov (bad) xchg adc rolb fidivrl cmpsb insl ja gs in (bad) pop pop inc jmp push adc testb jne jrcxz rex.WB xor mov (bad) push retq and insl xor cmp rex.WX movsb sbb mov (bad) test fsts jle cmp sahf xlat outsl scas sahf pop (bad) (bad) repnz pop lods rex push (bad) mov ja test cmp push jge sbb (bad) sbb pop jmpq (bad) fnstsw mov jno (bad) (bad) shl lods cmp rex.XB (bad) rex xchg pushq xchg test sahf (bad) (bad) xchg mov sarb mull jg mov cltd out add repnz (bad) rex.RX xor fcmovnu std std in (bad) enterq push xchg cmp xchg pushq or push jno (bad) rex.W xchg callq push lods xor mov xchg cmpsl xor sbb cmpsb (bad) mov icebp rex.WB (bad) outsb (bad) int3 rex.X rex.WRB rex.W rex.R insl adc mov jg mov data16 or leaveq jns mov rex.W rex.RX rcl or cld cld fnstsw (bad) sub rex.RX lret (bad) push adc cmc and cmp imul (bad) sbb setnp jle add imulb cmp pushq cmpsb (bad) (bad) cli (bad) mov pop fidivl and es rex.WRB rex.X xchg sahf mov mov (bad) jbe (bad) pushq lahf data16 mov pop lahf pop adc rex.WB rex.X sub pushfq pop callq hlt addb xchg cld or (bad) jle sbb jnp lock movabs sbb test movsl and fwait (bad) hlt (bad) push jge push mov pop (bad) adc jb push jle outsl (bad) movsb adc push ja xor jne jb sbb in or mov rex.XB mov cmp jnp jb mulb sub mov incl xlat (bad) rcll repnz data16 cmp divb rex.W movabs rex.RX addl mov rex.RX adc in hlt retq mov out pop es sahf and mov pushq fild push or pop sub add pop cmp cmpsb fs cwtl pop xchg xchg xchg mov int push sub syscall pop jl loopne nop xchg or out (bad) lahf (bad) fcompl pop movabs adc jmpq mov movabs movabs (bad) sub jmpq pop test jg imul push (bad) es add (bad) and adc xchg pop je cltd mov pop xchg (bad) add divl fmull (bad) movsl stc lock (bad) push loop gs pushq retq (bad) xor rex.XB iret or xchg sbb (bad) push push pop pop mov movabs cmp mov int mov xor (bad) xchg mov out loop rex.RXB (bad) mov mov pop sub or mov push mov loopne rex.RXB (bad) jo adc lret pop (bad) movslq pushq xchg pop mov (bad) mov rex.R (bad) rex.WRXB rolb repz rex.RXB pop sbb rex.WB fs or mov stos in rorl cli (bad) xor movabs pop pop jne pushq and jo callq xor movabs (bad) jbe loopne rex.WRXB mov mov repz lea fs scas cmpsb test pop retq int (bad) mov xor jle (bad) rex.WRX adc xchg mov jo pop xor rex.WX rex.WR (bad) fcmovu rex.RX mov in rex.WX rex.WB pop retq inc xor adc mov fninit mov pop movabs (bad) lock (bad) fisttpl insl jo rex.X out push mov xchg jno push jp lods pop out ficomp xor pop leaveq (bad) mov mov repnz (bad) (bad) movsb xchg mov out sub or (bad) rex.WX mov fcoml insb outsl scas rex.WRB int jl enterq rex.WXB (bad) stos rex.WX outsl loopne and jbe mov imul rorb pop sbb (bad) retq mov sbb hlt mov mov xchg xchg repz rex rex.XB in imul push data16 lahf push jae insl rex.X rex.WRB rex.XB fldcw rex.WRX cmp fnstenv push rex.X sub xor push sbb sub test xchg (bad) push repnz sbb icebp cmpsb and test sar icebp hlt mov add mov decl test (bad) push test xor fidivl mov clc mov cmpsb out sbb add jp loop fsub mov lret sub test rolb movabs rex.X mov mov in cmp (bad) cmc lret pop jne repz callq mov adc (bad) cmc jnp or (bad) data16 imul fisub fmull loope stos retq jg (bad) (bad) loop,pn mov jno add sahf or test movslq sub (bad) xor out mov sti xor (bad) (bad) pop imul retq fcoms add pop (bad) pop (bad) pushq cmpl rex.RXB (bad) mov jl pop rex.WRXB add data16 mov jae sub (bad) adc rex.WRB (bad) lods rex.WXB sub (bad) push push cltd mov cmp imul xchg mov ds out jo mov adc rex.X xor ja jge sti bnd (bad) (bad) sbb stos add (bad) jnp adc (bad) rex.R rex.XB lock add data16 jae insl pushq and (bad) adc (bad) or loop pop rex.WB jl pop (bad) cs mov callq pushq movsl pop rex.XB data16 cmpsl (bad) xor (bad) fisubrl and rorb jbe mov push mov xchg fistpl movabs jle outsl pop xor rex.RB pop xor mov cld out adcb jbe rex.WB sbb (bad) incb xchg jb mov (bad) (bad) imul (bad) fucomip rex.WB sub (bad) cmc xor add cmpsb rex.RX rex.WR out and fs rex rex.W (bad) (bad) movabs cmp jb loop xchg adc cmpsb add cmpsb fdivrl ficompl in cmpsb push pop enterq imull pop and rex.WRX sbb mov sub or cmp insl sub out rex.WRXB mov pop rex.WXB rex.X rex outsb sti xor jmp and xor cli mov outsl (bad) pop sti sbb (bad) xchg (bad) in add xor pop mov push jb xchg xor in xchg (bad) add add cmc (bad) fs mov pop push pop outsb jle mov rex.WRX (bad) (bad) mov push adc jbe mov (bad) lods (bad) xor data16 (bad) (bad) out add (bad) (bad) mov scas cli xor (bad) imulb push nop sahf adc jge cmpsb (bad) (bad) xorb loop movslq imul pushfq adc movabs (bad) scas fidiv rcrb mov callq or rclb add rex.WRB jae adc mov loop stos clc pop lret jmp mov int (bad) adc or scas movslq xor sahf push out push xor test in (bad) sahf idivb mov (bad) (bad) jbe out pop sub test add je sub jnp mov fiadd adcl jb shll fidiv js std repz int add clc mov mov xchg data16 loopne std sahf cmp rex.WRXB lock jle shrl rex.W retq mov rcrb sbb push rex es lret jle lret xor pop jge add mov xchg (bad) cmp xor std mov and (bad) add xor mov loop sub pushq jns sbb jb cmp sub out mov outsb jmpq rex.WRB xchg fildll mov mov push add movabs nop rex.WRXB sahf pop (bad) cmp pushq pop jge (bad) rex.XB pop sbb test xor pushq rex.X out ss fcoms jle rex.R xchg pop mov imul ja lods movslq movabs (bad) test adc (bad) sbb mov jbe mov hlt pop mov sbb and callq (bad) or nop test fstpl pop mov cmp sbb fsubs mov (bad) pop (bad) push push fs movabs jl rex jrcxz (bad) nop push pop pop data16 jp add pop and loope (bad) lret mov (bad) mov cmp fidiv insl lret rex.RXB sbb fstps test iret rex.RB rex.XB cmpsb sbb xlat (bad) outsb sbb mov data16 xchg sti (bad) sub jo int jge insl pushq (bad) and movslq outsl xor movabs xor rorb jl pop (bad) rcrl sti xor movabs (bad) cli cmpsb sub (bad) xor (bad) cmp (bad) fstps andl sti rex.RX gs outsl xor mov and sbb (bad) push pop mov out sub movabs icebp xchg (bad) (bad) or push mov (bad) and sbb sbb iret mov rex.WX xchg (bad) fcoms or out jp cld (bad) mov rcll (bad) mov hlt sub jae jb add sub rex.WRB pop negl out pop adc rex.WB jne (bad) (bad) leaveq mov pop rex.WR sub outsl xor push psrlq jle jns lods pushq xor pop sub pushfq xchg cli mov je pop hlt (bad) rex.RXB mov mov loop xchg vcvtsi2ssl jg gs je mov scas rex.X mov (bad) mov xor xor xor xchg or rex.B (bad) fs rex.WRXB push jmp sbb fidivr jle rolb (bad) std and movl lea mov jo add pushq hlt push rex.WX sub data16 xchg pop iret lea loope xor jge xchg xor (bad) hlt sub (bad) xchg retq cmp movslq test rex.WR lock xchg pushfq movabs sub retq sti pop add sbb nop mov (bad) (bad) movabs mov push rex.WRX shlb rex.WRB outsb hlt xchg mov or repnz mov (bad) xor (bad) add movabs jns add jrcxz mov pop pop lods in cmp movsb pop imul and push adc push popq sub mov jne rex.RX add xlat rex.WX enterq imul cmpl rex.WXB (bad) (bad) pop stc rex.WX scas lods test mov adc mov sti fdivs and xor out lock xchg gs mov cmpsl in (bad) pop (bad) lea fidiv rex.W jo pop jg pop (bad) lahf and and and jbe incb push mov (bad) push jbe (bad) xchg pop or loop mov mov (bad) sahf movabs pop loopne push and mov push jo loope fs shll cmp xor fldenv jbe hlt mov sbb js rex.X stos pop adc xchg pop cmp (bad) lock gs movabs (bad) leaveq rol loope pop fcompl (bad) rcrl bnd (bad) rex.WXB data16 sti sub sbb (bad) imul sub rolb in and sbb or rex.WRX addl adc or (bad) jmpq or shrb roll (bad) push test add cmpsb (bad) lret ja or (bad) (bad) pushq xor in stc mov (bad) nop callq sarb pop or pop pop pushq xor mov mov (bad) or add push cwtl (bad) adc pop rex.WRX xor pop std jae,pn sub pop pop sbb pushq and (bad) pop sbb (bad) add (bad) repz sub lods pop icebp and push movabs rex.WRX out je pop sbb rex.W rex.WR pop mov push cmp rex.XB rex.WRB (bad) (bad) add lock je (bad) (bad) xor and pushfq rex.WB rex xchg sbb jrcxz cmpsb rex.WXB pop fs popfq es sar pop sub push (bad) mov jrcxz rex.RB test xor lahf (bad) enterq jmp mov push movabs callq mov mov rex xchg repnz xchg in repnz out idivb rex.RB jle (bad) sbb movabs enterq mov ds mov in (bad) loopne movsb or or rex.RB and xchg rex.RB pop push jno lahf (bad) cmp (bad) mov jmp xchg xchg rclb jle (bad) xchg xchg sub scas sbb mov sbb repz (bad) (bad) in cmpsb test loope pop and mov mov lods fs (bad) pop and xchg xchg rex.WRXB cmp scas adc jbe xchg add jmpq stc lock (bad) rclb pop xor lods or stos (bad) pop vdivpd imul rcrb or int lea sub fs cmpsb pop addr32 movsl pop movabs add rex.WRB in adc cltd add and imull movsl jp pop mov mov or jrcxz (bad) loopne jrcxz lahf mov xor fisub add cmp or adc rex.RB cmp fucomp (bad) in add xor pop in (bad) or mov popfq in icebp pop in sbb fbld (bad) pop add (bad) stos jnp bnd cmpsl gs rex.W mov pushq (bad) fmul sti and pop jbe nop push jge pushfq out and and cmc lock test sub imul and pop push xchg xchg lods push or xor out (bad) fs popfq pop stos mov xchg jno pop xchg sub mov pop sub lcall xchg mov divb outsb stos pop test shlb adc cmp pop (bad) mov addr32 xchg fwait mov sbb pop repz xor adc subb lods lret cmp add and gs (bad) xchg jb rex.WRB fwait (bad) cmpsb (bad) retq data16 xchg push sub mov adc push mov lods insb in cmp fsubl mov push pop rex.W addb xlat add and adcl sub pushq and nop pop pop xchg push xchg mov and gs lret jrcxz jg mov mov (bad) pop (bad) mov enterq (bad) leaveq int pop push pop pop iret adc or sar xchg mov fiadd add xor push insb data16 cmpsb add mov (bad) xor pop (bad) (bad) and add jae fs test cmpsb rex.WX rex.RX jns in pop jrcxz and (bad) or lods cld pop fwait lea (bad) lret rex.RX cmc mov xchg pushq stos pop popfq mov retq cmpsb jg mov incl (bad) mov pop xchg adc push cld loopne jo push in imul (bad) outsb (bad) mov insb mov movabs (bad) (bad) add xchg enterq je pop movabs js sbb push xor cwtl retq decl (bad) loop scas addr32 cmp fwait xlat decb imul xchg (bad) fiadd mov jmpq xor retq xlat ss add outsb cmc push clc xor test repnz mov stc out cmp cmp add (bad) sub data16 rex.WRB rex.X test xchg pop push in lods cmpsb or cmpsl adc (bad) and mov and pushfq jge mov (bad) (bad) lret (bad) retq mov pushq movabs jmpq jge mov ja jle mov ss out mov outsb gs pushq mov rex.WRX (bad) loop rex.WX sub (bad) es lock cmc (bad) fisub push callq stc xchg xchg xchg pop pop rcl or adc push xor (bad) jl (bad) xor and push push pushfq rex.XB mov lock sbb sbb movabs push (bad) cmp adc lock xor rorl xchg rex.RB sbb lret stos in adc (bad) or (bad) jbe repz lahf and mov or int3 ss cmpsl pop or (bad) mov leaveq or imulb scas int je shll cmc rex pop sub sbb adc (bad) rex.XB stos insl (bad) adc ficom div xor cmp fcomps (bad) fcmovnu rex.WRX add pop (bad) jp sub xchg sbb xor loope addl repz or (bad) pop fldenv cmp xor lods sub adc imul icebp cmc (bad) pop ficomp xor repz cmpsb movsl cmc sbb xor xchg or jae fxch push xchg sbb sub push xchg cmp pop (bad) jmpq (bad) mov xchg test (bad) popfq add push (bad) (bad) pushq jrcxz cli (bad) paddd and rex.RB in movsb cmpsb cmp pop fsubrs loopne in pop xlat or add lret mov pushq sbb or xlat loopne rcr cmp mov mov mov iret (bad) cmp jle adc cmpsb stc xchg stos mov sbb loopne adc rex.WRB rex.RXB (bad) lods retq (bad) ds adc (bad) loop sbb xchg cmp push sbb (bad) (bad) (bad) pushfq rex.WRB adc mov mov insl jp fisub push (bad) (bad) in add jno (bad) add ss jno (bad) pushq (bad) sub and (bad) shll adc movabs (bad) clc cmp mov sbb mov stos rcll lahf hlt mov movabs fisubr rcrl rol pop and and rex.WRXB rex.WXB pop loopne movsb lods rex.X ss in stc cmp rex.WB scas (bad) leaveq (bad) (bad) loopne and stos mov std add int rex.WRXB stos cmp orb loop in imul lods lahf pushq or rex.B rex.RB lods (bad) ficompl (bad) (bad) xchg (bad) pop or lock mov mov rex.RXB movsl cltd pop out jne cmp lss leaveq notb scas movabs outsb (bad) and cmc pop sub rex.WRX rorb or hlt cmp and insb (bad) jns jbe in xchg xchg stc mov sbb rex.RXB (bad) mov xlat pop lret (bad) jo nop jne jg rex.WR or je rex.RX pop jbe es mov mov data16 fxch (bad) repnz (bad) push in lods sub jmpq sahf lock jmp enterq insl (bad) cli stos (bad) (bad) xchg sbb (bad) sbb sbb cmpsb rex.RXB jrcxz push or or add mov cmp out or jbe (bad) (bad) pop idivb imul or (bad) rcl pop mov sub mov (bad) test pop xchg test xchg cmp and repnz ja mov lret mov (bad) add stos movsb decb or sti (bad) xchg ja rcll (bad) add pop xlat sbb pop mov pushq out nop push mov loope imul pop mov cli sub fcompl or mov std (bad) (bad) gs pop pushfq retq fsubs mov (bad) loope frstor or pushq (bad) jne hlt rex.RB rex.WRX mov jae xchg jns pushq sbb pushq mov mov movabs adc xor (bad) rcll movabs xor out pop xchg xchg lock and retq xchg adc sarb jb shlb ss rex (bad) xor cmc hlt xchg mov or (bad) outsl imul sub sub fist cs (bad) sub stos jo add andb cmp callq rex.RB repnz rex.WRXB enterq (bad) pop (bad) push rex.WXB (bad) or int3 mov (bad) pushq imul pop mov cmp (bad) jp scas mov pop rex.X rex.WB fadds iret mov es rex.WRXB (bad) xchg (bad) adc stos (bad) push or adc repz sbb hlt shrb (bad) cmc flds cltd mov jb (bad) fild mov jo or test sub subw scas add and pop push rolb jg std (bad) pop sub fwait out repz (bad) (bad) sbb pop mov adc in std mov mov (bad) mov jle jmp xchg (bad) fs push pop (bad) push sub push movabs (bad) (bad) insb push mov xchg mov (bad) pushq sahf (bad) push cmpsb (bad) lock pop fisttpl rex.RB mov fild or (bad) lods scas pop test mov pop rex.WXB rolq hlt scas adc (bad) (bad) movsl (bad) sub pop fisubrl pop jo pop addr32 lret mov sbb clc (bad) movslq lahf pop xchg (bad) pushq (bad) (bad) cmc neg loop enterq mov stos sub movabs jmpq fsubs ror mov jbe rolb in rex.WR cmp popfq jbe mov cld imulb stos pop pushq (bad) cmp iret pop pop subb xchg cltd test addr32 pop xchg pop (bad) icebp fldt test (bad) (bad) mov out stos mov pop xlat rex.RB or addr32 out push ds notb fldt outsl fwait retq (bad) enterq add outsl mov (bad) sbb pop add (bad) mov jg xor cmpsb (bad) add add add xor enterq pop push jle (bad) rex.R cmp and pushfq xchg pop mov or cs movslq pop test rex.XB jge (bad) rex.WRX sbb mov and mov pop (bad) movabs (bad) (bad) mov fwait lock pop fstps fcoms (bad) mov (bad) pop (bad) fiaddl mov sub (bad) (bad) jb data16 sbb sar addr32 (bad) mov mov pop cmc push (bad) (bad) (bad) rex.WRXB (bad) cmp adc sarl push stos inc (bad) (bad) fidivl (bad) in insb mov push test add sbb cmpsb pushq iret rorl (bad) mov adc mov mov (bad) or (bad) lock xchg movabs cld and fdivr (bad) repnz and test pop rex.RB nop xor and cmc out jne jo jp rex.RB (bad) pop ficoml rex.RB (bad) rex.B es testl jmp inc pop push sbb pop lods out repz xlat mov (bad) and jrcxz mov test scas nop movsl mov js rcr and repnz jb jb jns cmc test data16 pushfq fdivl loop sbb sarl sbb cli (bad) ss xor pop jne rex.W (bad) hlt xorb xchg xchg pushfq mov div xor add (bad) movabs (bad) jle jo mov gs xor (bad) cmpsb fwait jp xchg pop in addr32 and fs mov mov (bad) mov callq xchg jg std repz (bad) fldenv (bad) sub jle movslq add add push pop rex.WRB sub pop push (bad) xchg cmc jne gs add sub adc (bad) push pop (bad) loopne sbb cltd xchg rex.WRX (bad) (bad) movabs int jge jmpq in pop pop movabs cmp cmp repnz and scas stc mov clc imul imul divb icebp imul pop rex.RX (bad) rex.WRX out adc fsub movabs (bad) insl jmp rex.WXB cmp mov push (bad) jo loop gs rex.RXB pop xchg rex.WB rex enterq rex.WX rex.B insb in movabs (bad) (bad) or pop add mov fs jmpq pop jle in cmpsl (bad) (bad) rolb jo insl out (bad) jbe rex.R rex.XB cmpsb sub and cmp out xlat lods xchg adc fs jmp push jg lahf mov test (bad) xchg lods icebp jbe pop add mov and sbb xor callq lea and cmp pop jp (bad) fmull adc (bad) adc xchg sub sti shlb xchg outsb lea rex.X movabs in jae cs ja ds pop or adc push mov jle xchg out std icebp pop push stos loop mov (bad) out cwtl outsl (bad) fnop lock jae jb adc mov (bad) cmp mov xor pop adc lea jrcxz sbb mov mov imul jge or (bad) sbb sub pushq mov (bad) int mov rclb imul je sti push movsb mov (bad) addr32 (bad) retq jrcxz loopne sub retq outsb movsl clc cmp pop xor pop callq and iret cwtl mov (bad) rex.W incl adc xor (bad) rex.B or addr32 jrcxz cmc movsl xchg jmp (bad) fist (bad) jrcxz rex.WXB (bad) xchg rex.WRB rex.RB imul out sarb push mov and fiadd std mov sbb stos test pop pop xchg ds adc jo in outsl rcll fistpl mov mov retq xchg cmpsl movslq movabs xchg stc jle jns xchg (bad) movabs mov mov (bad) in out add cmpsb movsl or movabs (bad) imul ja mov (bad) rex.RXB mov sub sbb data16 push outsb add xchg ds lods enterq callq scas repnz sub cwtd rex.WR jg jb movabs cli or or pop push out pushq xorb test imul jae je mov rex.W (bad) jle xor (bad) mov pushfq stos sbb loop (bad) movsl test rex and loopne (bad) push test mov stos (bad) (bad) andl test lock mov sub pop (bad) (bad) subb jmp xor mov rcrl add and (bad) and or rcr std xchg fisubrl in movabs (bad) jne pushfq (bad) sub sbbb retq je sub or leaveq and jne callq xor rex.RX hlt jb sub lahf addr32 cld data16 loop jno rex.X pop (bad) iret pop and xchg adc (bad) mov (bad) cmp xchg movslq pop rex.RB sub (bad) mov in mov pop lods add pop mov test test icebp xchg out out movabs loopne mov outsl and nop pop sbb xor in and out xchg push test (bad) rex.WR pop stc xor xchg add xchg cltd out in out sub (bad) xor pop and add (bad) add pop movabs jg negb xchg int3 and xchg pushfq (bad) idiv fidiv out mov rex.XB jnp out jne push addb lahf movslq add out xlat fadd test mov clc push adc add scas and mov (bad) pushfq and cmp push pop mov flds stos add out (bad) push xor mov vmovmskpd mov mov xor clc (bad) rex.WX sbb addr32 jb hlt jbe (bad) push sbb and xchg and jg sbb loopne xlat xchg push fild adc insb mov cmp xchg pushq xchg xchg mov icebp stc sbb mov fwait (bad) out jb std data16 cli mov (bad) (bad) fildll outsl outsb push shlb retq (bad) xor mov stos cmp xor movslq pushfq (bad) sub cld adc jo cmp xchg stos mov rex.XB add sbb iret xchg rex.X cmp jle jrcxz lahf mov jno xchg sub pop rex mov fidivr mov push xorb rex.R sbb loop pop pop xor sbb std pop loop sub imul je sub stos sub (bad) popq mov pop pop mov mov imul gs mov rex.RB jo (bad) out cs sbb rex.WR ds idivl in push cmp sbb xchg xor stos lock test (bad) rex.WRB xlat repnz jmpq sub mov test mov movsl icebp or sbb or faddl cmpsb insl sub xor rorb cmpsb sbb je (bad) cmp mov (bad) xor stos in callq scas lods push out push lcall rex.WR rex.RX mov out fsubrp rex.WRX negb shrl or loope xor retq callq (bad) pop fwait rex.RX es (bad) iret sysexit mov jl movslq movabs sarl mov data16 rex sbb (bad) add lret clc (bad) nop (bad) sbb in rex.WRB pop movabs stc cmp xchg data16 xor add jne scas pop (bad) mov sbb pop mov test and sbb pop push (bad) or add push add icebp mov push or jnp sbb sbb rex.WR sahf adc (bad) adc or jrcxz or mov xchg ficompl js (bad) add (bad) rex.WR or mov lcall (bad) xchg xchg xor sbb pop (bad) rex.WR xorl movabs (bad) xor (bad) jle adc cmp fs adc sub outsb jl test xlat rex.WRB mov cmp ja movabs mov cmpsl sub sbb (bad) mov pop andl xchg rex.XB push jne loop stos push push (bad) cmp stos out cmpl mov mov out (bad) mov in out ja fldenv (bad) mov in cmp in pop mov data16 sub mov sbb push rorb rex.RXB jrcxz adc (bad) (bad) mov fs (bad) xchg jmpq insb pop (bad) (bad) push fstps sahf pop repz (bad) rex.WXB or jmp add enterq icebp sub data16 scas (bad) and xchg pop pushq repnz rex.RXB adc sub pop rex.WXB sbb sub xchg xchg mov jl (bad) fnstsw sbb movabs (bad) mulb ja rcrb lahf and xor pop sarb cmc (bad) push jns rcrl pop mov pushfq jb int3 insb mov push (bad) shlb pop fcompl cltd sbb (bad) addl clc mov rex.RXB mov cmpsb xchg pop mov sahf jp (bad) stos sub rex.WRXB outsb mov movabs (bad) or test movabs cmp adc jmp (bad) xchg icebp push push rex.W (bad) or (bad) xor jo xchg or xchg jp fidiv or test add sbb psrlw sbb in fmulp std or (bad) minps xor rex.R pushq (bad) movabs push ss int (bad) jbe pop divl xor loopne xor add fsub mov xor pop xchg jl (bad) xor pop (bad) cmp jmp out mov repnz imul jbe,pn xchg push out xlat (bad) push and std sub push jb jrcxz (bad) lahf pushq rex.WRB and stos adc adc outsb vshufps and imul (bad) insl add and push retq jmp leaveq jb mov (bad) fidivr hlt push outsl xor insl out pushfq sbb nop add jae xor (bad) in jg sahf pop mov mov rex.WRB rex.R sbb sub test pop xchg rex.WRB movsl shrl pop jp movslq mov (bad) adc lods fwait (bad) adc movsb and jae jrcxz orl loop cmpb or (bad) xchg pushfq push sbbl pushq mov (bad) adc mov stc xchg mov pop outsb add pop and jo xor jo pop add or jo sbb fwait mov leaveq imul callq adc or xchg addl fisubr cmp rcrb (bad) in rex.WRXB (bad) sbb and (bad) leaveq (bad) retq xorl jl push popfq or adc jrcxz rex.RB loope lods cmpsl pushfq test mov movslq dec (bad) test (bad) (bad) (bad) icebp mov sub (bad) movabs (bad) es mov cli test xor and std rex.RB jl mov sbb or sbb and (bad) std stos cmp test or pop rex.B (bad) cmp imul repz xchg movabs cltd movl insl mov fisubr mov jle jbe adc sbb lea nop mov jmpq (bad) lahf add xchg int push mov mov movabs rclb vdivpd or push jrcxz jno mov movsb jmp sbb xchg insb cmpsb pop sbb or icebp xrelease rex.X (bad) data16 jb adc test test cmp pop ja fnstcw pop (bad) jno imul bswap outsb (bad) (bad) (bad) scas or rex.W imul repnz and adc iret push jbe rex.X pop xlat rex.WRB rex.WX lods (bad) movabs (bad) add pushq pop (bad) repnz lods callq mov rex.WRB and or outsl rex.WX push fistpl pop cmp pop int (bad) mov or jge mov lret cmc fisub movabs stos nop or ja sbb adc rex.WRB out (bad) (bad) mov out xor mov negl jl xchg outsb cmp test (bad) icebp loope,pn hlt movsl (bad) xchg (bad) addr32 xchg js cld pushfq andl fwait loope or pop fistp mov xor clc mov sahf lret jge (bad) fimull callq mov adc xor mov sub adc jo imulb xor jp rex.WRB js,pn or ja movsl (bad) (bad) sbb loope lock (bad) (bad) jb imul rex.WX lret data16 rex.RB fbld (bad) (bad) jns cmp jp mov loopne sbb addr32 test movsl test xor rex (bad) xchg xor pop loope adc and rex.XB rex.RX rex.R (bad) (bad) rex.RB push test (bad) rex.WR xchg cmpb (bad) gs fisttpll hlt push adcb sti pop mov jrcxz sbb xchg mov pop outsb rex.X ss sbb push pop pop (bad) cmp jo and cmp repz xchg (bad) loopne mov sahf pop cmp xchg mov (bad) movabs mov sub fwait movslq rex.X stos popfq mov jrcxz loop neg adc rex.RX clc stos icebp cmp lods push pop lret int3 rex.X lahf rex.WRXB (bad) jnp rex.WR andl cmp adc test (bad) cmpsb retq rex.WRB mov rex.WXB repz push (bad) cmp (bad) mov movabs fwait lret mov out adc jo lret pop mov (bad) jrcxz pop rex.WRX rex.B loopne mov rex clc sar mov lods (bad) fisubr test xchg rex.RB fwait mov rex.RX add add cs (bad) (bad) xor mov in or (bad) xchg xchg movabs sub xchg push cmp jb sub stos gs jp (bad) (bad) push sbb xchg mov movabs test cmpsb xchg pop lea push mov cmp push out push out pushq add xchg mov movabs mov pop jns mov out add (bad) mov and in push loope pop loop push es sahf lahf pop (bad) (bad) adc rex.RXB (bad) or pop jb insl es sbb iret push int pop fs andb in rex.W rex.X ds (bad) jbe push sub movslq mov mov pushq pop rex.RB (bad) cmpsl mov gs out pop or fmul movabs mov (bad) jbe pop (bad) incb cld fs in int3 inc xchg or pushq fistpl mov pushq (bad) retq rex.WXB lahf push int repz push (bad) pop fisubr roll and out jrcxz jbe cmp repnz movabs pop fcompl add mov fcomps pop and cmp lods data16 push adc and scas ds and shr lods retq cmp rex.WRXB (bad) (bad) movsb sahf mov retq fsubs pushq xor rex.B loope rex.WX jns mov and push scas push adc orb clc lods cmp decl std mov movabs imul or xchg pushq mov pop adc xchg jns sbb sahf int3 mov cmc pushq (bad) pushfq xlat cld loope mov mov cmp lods xchg push xlat pushq pop xchg (bad) jge imul mov xchg (bad) mov mov enterq sub xchg movabs xor enterq insl js rex and out jb loope insl mov xor hlt mov add xor ds rex.WX jo mov add cmp pop (bad) iret add and and or jo (bad) cmpsl jo push xchg or (bad) add push pushq (bad) (bad) xor sbb outsb fdivp je or std cld out pushq push jmpq fimul mov cmp lahf xor scas sbb loope cmp cmpsl in and xchg jne xorl in mov scas pop addr32 add (bad) fnsave in xor (bad) and (bad) sub push icebp push outsb jnp mov nop (bad) jge (bad) sub stos jne stos xor pop mov jge push xchg fstpl out (bad) mov (bad) rex.WB es in xchg rex.R cmp or jmp sahf adc lahf int3 sub rex.R rex.R sub sub mov mov adcb mull decl mov cltd ljmp movsb ficompl adc sahf adc sbb jle cli rex.RB frstor icebp sbb xchg loop xlat pushq adc lock push testb clc mov movsl (bad) popq out test (bad) pop push push subb (bad) xor lock cld movabs jae cmp rex.WRB mov jg fs int cmpsb (bad) pop fsts out scas (bad) mov (bad) rclb adc xor leaveq out jae and cli xchg clc movabs cmp (bad) jrcxz xchg movslq pushq rex.XB pushq cmp (bad) in and push pop rolb movsl mov cltd xchg push push clc pop add sub shll (bad) pushfq xchg jbe (bad) push sbb and pop test pushq (bad) add enterq and and test pop (bad) mov (bad) push pop adc (bad) sub pop fcomps scas push (bad) sbb pop cmpsb fwait cmp nop roll in mov rex.WX mov in mov sbb out insl sbb leaveq rol vdivsd cltd jnp in (bad) pop mov jns jle jae movslq outsl (bad) (bad) mov mov imul jns xchg pop jno retq fisub mov outsl data16 jmpq ja (bad) je sbb lods (bad) repnz jge shrb (bad) mov adc cmp cmp cltd xor mov movsb (bad) int3 or push jbe adc xor in movabs mov icebp repnz (bad) imul nop rex.XB jno jle movabs addb gs pushq jnp je pop stc pop js sub mov shl add xchg pop subl xchg sbb rex.RB fwait and ds ja js cs sub fld or jmpq (bad) (bad) or cmp fs jae mov pop (bad) (bad) rorl adc adc pop cmp mov add (bad) jmp sbb jmpq mov jae shr fcoms sbb cmc outsl lods xor sub or and pop pushq jge icebp callq popfq and (bad) pop rex.X sbb jl mov xchg test and xchg pop xor lret ds mov sbb in mov xchg rex.WRX sbb stos rex.WRXB mov adc retq fisubl and stc enterq out cmc pop es mov mov movsl vxorps movabs pop fcomps retq rclb rex.RX pop sub (bad) gs jb push rex.WX rex (bad) stc sti and (bad) out repnz rex.WRXB xchg cmpsb mov rclb jge pop out xchg lea js xor lahf jg retq fdivrl (bad) jbe cmp mov mov retq adc (bad) add idivb rex.XB movsl or in and lret xor pushfq rex.WRX roll out pop fidivrl mov xlat sub sarb cltd cmpsb (bad) jbe xchg je sbb lahf fimul fldenv (bad) pop adc cmp xlat add adc sub (bad) mov (bad) movsl (bad) (bad) leaveq push (bad) (bad) pop sbb cmc (bad) xchg xchg sbb jnp pop mov mov xor data16 movabs pop sbb enterq psrlw scas xchg (bad) jb mov loopne sbb lret movabs xor push (bad) rcrb xchg loope xchg repnz push pop xor mov cs ss cmp (bad) (bad) out pushq pop pop rex.WX cmpsb push lahf xor jno lods (bad) fsubrl (bad) mov callq xor imul out (bad) xchg outsl sqrtps rex.WB loope xor imul sbb sub pop pop cwtl pop iret push adc nop out out and pop (bad) retq roll mov cltd leaveq or mov rex.RB or pop movslq jns mov sub xor leaveq movabs mov mov ficom or shr jg data16 mov mov mov and (bad) rex.WRB data16 mov lahf fs loop add or (bad) jbe enterq shl scas lret push (bad) lock pop movabs rex.WX rex.WX rex.RB lahf rex.WB ds mov add in (bad) jbe mov (bad) pushfq gs callq and callq iret rex.XB pushq jp cmp and outsb or nop or (bad) jbe sub add pop mov (bad) mov lret pop xchg test or (bad) (bad) nop test jl mov xchg cmp insl rex.WXB rex.RB and rex.RB rex.RX (bad) mov nop xchg (bad) jmpq cmpsl or fsubrs push jge jns outsl retq (bad) mov (bad) sbb pop (bad) pop xchg push mov jb mov rex.WXB fwait (bad) cmp lret loop retq rex.RXB (bad) (bad) cmp mov (bad) enterq mov fildl sbb (bad) adc push rex.WRB fsubrs xchg rex.WX stos xchg (bad) mov clc mov int (bad) jne movsb (bad) movabs cmpsb push adc xor xchg (bad) add cmpsb pop (bad) (bad) (bad) cmp add mov in movslq pop pop and xor loopne cwtl xchg stc add (bad) fs iret punpcklbw (bad) xor mov enterq scas (bad) (bad) addl test (bad) movsl push sbb jmp rex.R pop adc cmp repnz push ficom mov ror movabs rex.WRB rex.R mov (bad) (bad) in test jno xor xchg mov test rex.XB mov scas and (bad) pushq mov retq (bad) ds adc fs rex.XB rex.WX out pop cmc and (bad) movabs sub xor je stos add imul mov xor mov data16 sbbb lret incb and and sbb jae lods pop rex.WRX mov mov (bad) std loopne jbe (bad) scas movabs adc (bad) add cmp or pop xchg cmpl retq cmp and jle movq gs lods lret pushq pop (bad) enterq adcl js pop lods rex.WRXB rex.B jge outsl movabs imul add pop out pop fwait push pop cltd fildl shr pushfq sbb pushq in pop cmp sbb xchg js xor movabs movabs (bad) and clc mov fild mov (bad) mov hlt or pop stos cmpsb test pushfq out sahf cwtl stos rex.RXB fwait lock cmpsl jl stc out pop mov data16 lret mov xchg jmp rex.XB xor pop (bad) stc cmp out jmpq xor stos loop xchg mov pushq sub fildll sahf fucom clc movabs outsl jne mov xchg jno pushq sbb loopne push rex.X xchg lret out pushq jb rclb and (bad) pop (bad) adc int pop add fisubrl cli fwait rex.RXB fcmovne mov (bad) jb sub (bad) (bad) lahf push cltd nop push scas fs (bad) lret hlt scas xor movabs es (bad) imul fcomps sbb adc in outsb cmc sub test subb mov jne loope out cld add es cld sahf (bad) ds or cmp popfq (bad) jo rex.X mov outsl cltd mov (bad) loope cwtl mov outsl outsl leaveq out test fist or fcoms jo outsb mov (bad) jb or movabs cmp rex.X push ds mov xlat (bad) add rex.WB rex.WR push mov popfq pop mov jle fwait or push sub (bad) loope adc push cmp mov jae cld pop xchg callq cmp rex.RXB (bad) negb popfq add cmp imull cmp rex.WR (bad) (bad) (bad) (bad) js mov inc in out nop (bad) pop rex.B lods adc callq (bad) lahf out or and mov add test outsb (bad) repz jae xchg cmpl movabs retq push movl or or and rex.WRX hlt mov stos (bad) out mov insb imul sbb xlat mov and cli movabs movabs pop out jb cmpsl fimul mov add rex.WRX mov es push xchg cli xlat loope (bad) cmpsl (bad) loop and retq roll (bad) xchg rex.WXB jbe pushfq or mov scas pop pop callq (bad) or pop jmpq rex.X xor pushq pop iret (bad) rex.RX sahf (bad) mov out or adc shrb (bad) popfq icebp mov sbb jle push (bad) push pushq (bad) (bad) mov rex.XB callq test pop (bad) std (bad) jmp (bad) (bad) (bad) adc pop rcrb (bad) push sti jbe jge std movabs (bad) iret xchg fwait mov mov pop and syscall jle lret retq jrcxz fstps int3 xchg fs mov sahf lock jns add rex.WB pop pop ficoml mov or clc cmp cmpsl pop pop (bad) xor sub test ds or add and sub sbb push xchg adc (bad) jmp pushfq movslq rex.WR lods pop sub sbb mov pop ss xor pushq jp outsb scas (bad) (bad) movabs or test (bad) loop lahf fstp stos cmpsb rex.W fs (bad) stos mov pop add cmc out mov cmp jns scas insb fistpl xchg lea stc movabs pop xchg rex.R sub jne fdivr push loopne push fldl xor data16 test pop xor jmp sbb rex.WR cmc (bad) pop in adc adc push stc xlat mov int mov pop std loop lret jbe (bad) and rex.WXB rex.W (bad) rex mov movabs jg in mov (bad) sarb callq loop hlt jle (bad) (bad) in xchg in jae jb (bad) sti (bad) (bad) nop adcb pop sahf push popq fwait rex.XB cmpsb out fildll fnsave rclb sub (bad) test rex.RB xchg cmp push (bad) (bad) in fildll or retq imul scas pushfq sub imulb rex.WXB pop mov hlt push gs outsl fs xchg (bad) xor or decb cmp pop and rex xchg add cmp pop out (bad) incl mov xor (bad) sti insl (bad) fs callq xor ror push (bad) pushq xchg fdivrp pushfq rex.RB lahf pop rex.B or mov xlat rex.WRX mov test loopne xchg rex.W fdivl outsb adc int add (bad) or and push push pop pop rex.WB adc cmp (bad) (bad) cltd and add pop rex vpsraw out out in data16 pop pop sti mov stc pop notb rex.WXB xlat (bad) (bad) add sub (bad) xor roll adc adc (bad) (bad) (bad) outsb pop fs mov stc out mov movabs movslq xchg (bad) jle jb or pop idiv (bad) in addr32 stos in rex.WRX ds sub (bad) in rex rex.RX mull rex.R pop (bad) (bad) movabs imulb xor rex.RB adc pushq movslq sbb sub or pop pop sbb rex.WXB cltd xchg mov mov (bad) sub test lea movsl outsb movabs jp adc js lods insl in xor jnp movabs rex.WRXB sbb fcom movsl jmpq imul (bad) (bad) ja add mov lahf mov sub out sahf (bad) xchg sahf int3 in jrcxz insl mov (bad) or loopne jrcxz xor je jge (bad) adc loopne test rcl push cmp jge test jmpq mov cs mov in mov mov xor sahf test cmpsb repz (bad) pop shll sub lea pop fcomp test retq cmp loop lret pop jmpq movabs rex.X mov (bad) loop pop xor (bad) in fnop iret rex.WXB xor jo xchg (bad) mov mov or cwtl fldt jnp jmpq (bad) movabs mov xchg cmp xchg orl mov pushq pop pop fildll (bad) insl (bad) fstpt idiv movabs cmp enterq movabs sarb mov mov pop fsubrs xor push xchg mov mov test movsb push rex.RXB xchg rolb callq out rorb adc lods add mov repz mulb movabs rsm fsubrs data16 cmpsb (bad) push imul xor sbb and (bad) rex.WXB fwait fs (bad) cmp jge pushfq (bad) pushq in mov outsl adc mov (bad) pop repz fbstp sbb or lock and sub adc adc push pop pop decb insl fisttpll int fmulp movabs test xchg shrb fcoml jge mov cmp movslq sub (bad) mov xchg lahf pop iret add fild mov (bad) shrb and cmp mov xchg xchg test adc out enterq mov mov mov mov stc ds gs jge and (bad) cmp (bad) ja mov jmpq lret shll test (bad) fildll push pushq movsl adc gs sbb or sub (bad) movsb rorb rex.WRX rex.WB xchg faddl fidiv cltd loop mov cmpsb shrl movsl psllq (bad) cmpsb pop rex.R test retq imul iret retq rex.RXB jo int3 pop (bad) mov jns (bad) divb clc fcmove rex.WRXB mov in sub test cmp rol (bad) (bad) (bad) pop mov (bad) mov insl std (bad) callq add cld es (bad) rex.W ds in rex.WXB ds jge (bad) cld sahf jnp int xor sbb mov or push lret pop stos callq ffreep loop rex.WXB icebp rex.W lret sbb add sub in repnz push xor rex.WRB rex.R gs ss pop pushq rex.WRB (bad) (bad) mov xchg mov (bad) popfq cmp or frstor stc adc (bad) sbb std hlt cmc or gs cmp rex.XB (bad) test (bad) and rex.WRX rolb and jl rex.W lret retq xlat std fstps movabs orb (bad) cmp (bad) enterq mov decb lret (bad) mov (bad) sbb (bad) (bad) (bad) (bad) cli insb pop add frstor adc test pop ja sahf stos (bad) pushq add stos mov (bad) mov jge rex.WX pop add adc sub (bad) rex.WRB rex.WXB (bad) rex.RX lret rorb iret xor xchg pop gs pop icebp mov (bad) in test add idivl xor mov in cli mov push (bad) mov int pop and data16 fstl (bad) jns mov xchg push add loopne (bad) cltd jne gs sarl rorb gs cmpsb pop or rcrb mov or (bad) pop jb xchg andl sbb stos callq (bad) cmpl movsl pop int cli imulb (bad) sbb fidiv jmpq and mov cmp (bad) xchg xchg clc jp pop enterq sbb adc cmpsb add imul lods movb mov (bad) or movabs cmc or pop pop add pop mov movsl loope stos sbb rolb (bad) jo icebp cmpsl mov adcl (bad) (bad) divb jb rclb xor iret std adcb and adc xchg (bad) pop mov popfq pop sbb jnp pop push mov lea jbe pop dec retq rex.R loopne mov sub stos (bad) and pop int3 mov divb xor add (bad) mov mov xor pop pop (bad) in xlat sbb movsb pop and xchg mov adc rex.WRB and (bad) push xchg stc rex.R ds test test (bad) lret rex.WB sbb (bad) adc jbe mov sbb rex.X mov fdivp xor and rclb xlat lret pop cmp outsl addr32 hlt jmp movabs push mov mov xor pop (bad) scas rolb or xor push xchg cmp icebp (bad) fimull mov mov loop adc cmp mov cmpsl xchg jge cmpsb jns int rex.WR sub cmpsb lods (bad) fdivrl push cld push (bad) jle jge sub (bad) adc mov mov sub imul mov rex.WXB sub adc cli adc movsl (bad) jae or xor ja mov jg mov mov cmp push rex.WRXB shr (bad) pushq sti xchg sub lock mov push rex.WR out gs (bad) (bad) cmp pop pop pop fucomi movabs mov xchg cmpsl fs (bad) sahf mov (bad) or adcl xor mov (bad) fs jne test jbe mov in js mov jrcxz int mov pushq ficomp xchg (bad) push mov sahf movabs push hlt (bad) pop roll xchg movsb addr32 (bad) pushfq jne pop ss fsts mov (bad) insb idivl jne pop iret stos test cltd or pop xchg (bad) cwtl xchg cmpsb jle and rex.RB fs rex.RX mov stos movabs imul sbb rex.WXB fldenv xchg push repnz xchg cmp sub (bad) test sti pop addr32 push sarl shrb pop je (bad) gs lods jo bnd retq jle movabs loopne xor sahf lret sub (bad) lret (bad) mov rex.W pop add (bad) cmp (bad) (bad) sbb (bad) rex.R lock add movsl rex.WRX rex.WR sbb scas pop jbe cli stc mov stos rex.WRXB pop jp cmp mov xchg retq insb rex.WRXB xchg vdivsd (bad) ss mov lret or (bad) pushq xchg in and fs fistl and adc lret jnp repz jae outsb cmpsb pop rex.RB fs (bad) xchg pop sahf add or xor (bad) movsl and (bad) subl (bad) or (bad) add scas gs pop in xor add outsb cmp mov cmp and cmp or (bad) sbb rex.WXB (bad) add (bad) sub xlat pushq lock sbb loope jrcxz pmaxsw rex.RXB add rex.WRX ficom lods cmp fs insb (bad) (bad) jrcxz or mov gs movabs pop (bad) jno cmp mov sub (bad) sbbl mov and ds lea fcmovbe xchg negb xchg sti callq out out jbe out or mov (bad) mov iret (bad) leaveq outsb mov mov ja pushq lea sbb rex.WXB xlat cmp ds cli sub xchg (bad) rex.WR rex.RXB lock pop fist mov lods sbb fucomip repz (bad) pop sahf mov sub out mov rex.XB lea rex.W mov (bad) lock (bad) sbb (bad) jno (bad) fwait lods push pop (bad) sbb rex.W loopne test mov jg mov mov fdiv mov sub cmp fnsave pop xchg mov in adc (bad) test sub cmpsb push xchg xor sbb xchg gs and xor mov push (bad) push mov mov add (bad) movabs jg (bad) xchg pop test repz pop stc insb out and rex.WRXB (bad) lret xlat push (bad) (bad) or rex rex.WX data16 mov lods loope pop jg fwait andl add es rex.RB (bad) pop xchg add jno ror add outsl (bad) leaveq pop and or fldenv push (bad) sbb iret jns lret jge repnz (bad) mov movb mov sub es (bad) push (bad) sub jg scas hlt mov or movabs rex.WRXB jle xor and jb pop imul push retq xchg sahf adc mull callq repnz jae (bad) int3 add sub push xchg xchg mov sbb retq (bad) mov stos movsl cmpsb and (bad) fistpll out (bad) lret mov movabs xor or sahf sbb retq mov pop mov push fild (bad) or jl out jrcxz iret mov sbb mov push (bad) loop mov mov in shrl or sbbl loopne je (bad) pop icebp xchg mov mov in test mov xor rorb je mov in pop imul and xchg mov xchg imul std pop clc cld xor rex.B rex.RXB (bad) (bad) (bad) pop adc (bad) movabs cmp pop cmp psrlq (bad) out je and clc cmpsb data16 push nop jbe mov fcomp pop add imul roll (bad) sub xchg rex.R fwait repnz pop adc pushq xlat adc lea jmpq or cli xor (bad) xlat mov push ja push sti rex rex.W stos rcrb sub jp lea push jns pop stos popfq rex.WR shl fsubs and sarl callq test in xor (bad) mov sahf jbe rex.WB mov (bad) data16 lods (bad) lret in (bad) (bad) hlt mov shll or int jl and rex.R or hlt or imul rex.WRB retq es loop jp (bad) xlat pop stos push repnz pushq (bad) rex.RX jp pushfq movabs insb gs mov stos push and imul (bad) hlt sbb rex.WX jnp mov movsb test cmc jno test imul mov xchg xchg shrb xchg xor rex.WX fisub jno test movslq mov mov js jmpq (bad) es sarb es lods rex.WB or fs mulb jmp pop movslq jb movsb loope imul cmc and lahf gs movsb xor vpsraw sub in push jnp xor (bad) rex.RB mov mov leaveq movabs mov and enterq outsl pop cmpsb (bad) fidivl sub and jg in and pushfq xor je or (bad) xchg push xchg xor movabs lahf jrcxz insb or rex.WX (bad) mov pop mov lock add fistl or in sub mov and fdivr push out movabs (bad) sub pop std push (bad) cmpsl xlat pop (bad) (bad) jg in push (bad) clc rex.WB xchg rcrb je rex.WRB lock fldt clc (bad) outsl loop movabs mov push jo pushfq sub xchg stos fidivr xchg xchg and xor neg add push mov (bad) (bad) rex.WR (bad) or movabs mov jle cmp adc mov or (bad) adc mov sbb push mov pop enterq sbb lock (bad) (bad) (bad) xchg mov ss cmpsb mov outsb mov cmpsb mov mov in lock (bad) xchg mov je in adc lret test mov jl clc or (bad) stos push data16 retq (bad) rex.WRX (bad) ds lods cmp rcr jp scas stc rclb cmp xor fldcw outsl xchg mov jno outsl mov (bad) mov sbb push jne sub (bad) scas movabs xchg add std xor mov scas sub fwait (bad) push mov xchg fmuls movsb insl je xchg (bad) ja pop out mov cltd sbb cld sti xor xchg and rex.WX rex.RXB in mov jg stc xor callq push and add out fcoms mov rex.RX jmpq jle xor (bad) lahf ja pop push cmp (bad) test lods pop movsl sub loopne in cwtl insl lret fstp rex.WB scas shll sub mov loope sbb imul and loop fcoms stos retq lods sbb rex.XB mov test jno sub test mov mov fcmovu in xchg retq imul test jne (bad) adc cmc addps out push xchg jae cmpsb pop sarl mov mov rex.RB scas rex.WX add lock movslq pop xor cmpsl icebp loopne rex.WRB xlat clc nop cmpsb fwait xchg mov movsb pop mov cmp add pop cltd pop mov (bad) push rolb push (bad) outsl fildll (bad) insb imul in push or mov (bad) jrcxz lock mov mov push nop (bad) (bad) mov movabs or or sub mov shlb pop lret sti mov rex.R pop pop jno cmp mov (bad) scas or rex.WRXB pop cli icebp hlt stos movabs and xchg lahf rex.WXB incl (bad) (bad) mov rex.WRB or pop mov add outsb (bad) testb gs shlb xchg pushq ss cmp xor mov nop adc pop (bad) loope (bad) rex.WRB test sub (bad) retq cmp insl cmp test out adc and pop rex.X lods addr32 (bad) xchg jbe pop and ss test mov sbb retq (bad) stos mov fdivp fdivr (bad) jge (bad) ficompl sbb jo sahf (bad) in cmpsb test jl ds (bad) cmpsb (bad) jmp or js rex.R mov cmc outsb cmpsb add rex.RB rex.W jg (bad) mov lahf cmp pop (bad) rex.RXB repnz out retq ja adc (bad) sbb fcomps rex.WR or add (bad) or xor or out jb mov (bad) (bad) out mov pop or (bad) add shlb (bad) xchg movabs add rex.RX rex.W mov sub xlat jrcxz out lods (bad) jo cli sahf pop outsb adc leaveq and rex.RX clc cmp pop es (bad) fnsave outsl movabs jnp retq sbb (bad) jle iretq push in (bad) mov mov (bad) addr32 imul int pop rex.XB push xor movslq data16 outsl xlat fstpl push retq (bad) (bad) stos (bad) rex.WRX mov loopne,pt jp adc fldl int3 enterq pop (bad) push repz fmull adc loopne in shr sahf fxtract stos rex.WX iret (bad) test cs cmpsb jb xchg callq rex.WRB cld (bad) rex.WRB (bad) mov ja (bad) (bad) and add sub js insl (bad) jae (bad) mov repz sahf push in cmpsb lea add movabs xor fimul out adcl rex.W rex.XB pop (bad) adcl xor and cs jl out mov cmp pop ds outsb loope rorl add push rex.WRX test in jno scas in (bad) movsl (bad) (bad) mov clc cld hlt rex.RX add pushq jns jl scas sahf fmulp (bad) or mov rex.WRXB in jmp fs and sub rex.WX lods insb mov mov and pop pop lahf int pushq rex.RB rex.RXB pop rex.WXB jmp insl imul (bad) cmp subl out and xchg push xchg cmp out pop gs jge test (bad) sub pop (bad) sub scas xlat in pop imul (bad) orl jge lret pop and push loope jbe sbb mov push loop (bad) sti std (bad) add lahf rclb lods sub or xor leaveq ljmp mov insl xlat pop test (bad) out div mov cmp rex.R pop push movabs sti sub cwtl (bad) imul movsl or sbb rex.W jb mov (bad) mov jae in (bad) fs (bad) or ss cmp (bad) (bad) fsubrl mov addr32 test lock (bad) (bad) in (bad) mov negb mov xlat fs movsb and or mov (bad) test es mov xor imul adc enterq or callq ficompl add pop cmpsb lods rex.XB in (bad) fistl (bad) (bad) and popfq xchg or mov rex.B icebp loop,pt in and cmp lahf xchg out pushq mov shlb scas push cmpl mov and cmp imul imull cmpsb sbb lret data16 (bad) adc loope pop mov xchg (bad) sub (bad) ds rex.RX mov lods rex.WRX (bad) icebp (bad) adc rex.WRB ja and sbb and push jb xchg xor add jnp rex.WX rex.WRX leaveq sub xchg imul (bad) pop rolb repnz lods mov xchg xchg loopne (bad) adc mov rex.WB retq rex.WR push jle (bad) lea std mov mov rcrl push sub push pop and notb int3 sahf xchg rex.RXB outsb (bad) movslq pop xchg rex.W add jbe pushq pop int xchg (bad) rex.B outsb (bad) pop add loopne adc enterq pop xor std pop cmp decl adc push rex.WX rex.RXB xor (bad) nop xchg mov pushq cmpsb rex.WXB mov pop lret jge loopne xchg psrlq test out loope or lods outsb pushfq pushq push rex.RXB push shlb out add movabs jmp fdivr xchg clc cmpsb push adc mov (bad) out mov cmp cmp movabs movsl sbb (bad) fiadd rex.WX and loopne movabs xor imul mov gs movabs in test stos rex.WRB in imul rex.WR add out fsts (bad) jbe addl mov add push add pop xchg rex.RXB fbld outsl in xor mov cltd pop out fisubr mov pop rex.WRB retq rex jmpq (bad) pop (bad) or (bad) (bad) cmp rex.WRB in (bad) fistl mov or mov movabs cmp push fisubrl lret jle (bad) push retq xchg sub lods xor mov rex.WXB cmp stos addr32 test (bad) imul in jp (bad) icebp callq sub jle mov ss rex.WRX rex.RXB rex.WB mov jp xchg lods (bad) sti scas add stos pop and add out stos loop xchg and (bad) jle lods out push sub pushq clc adc out mov cwtl jle add mov (bad) mov mov es jns cwtl insl (bad) sarb jno mov jnp (bad) cmpsl (bad) stos lret mov outsb (bad) sbbl addr32 mov pop movsl add jp xor rex.RX sbb mov mov push jp (bad) (bad) push pop mov addr32 rex.X rex.WRB push lock (bad) (bad) je mov rex.RX mov roll movabs and fcomip rex.B repnz mov lods adc (bad) clc insb sub in fisubr push outsb jrcxz rex.RXB fwait push (bad) (bad) (bad) or or sbb and and jrcxz insl or sahf movabs std pop mov (bad) rex.WX xchg adc xor add xchg fsubl (bad) xor mov (bad) repz sarb jp (bad) movslq jp (bad) jge push js push and cmp rex.RXB insb mov xor cmp cmp data16 push cmp mov pop pop mov rcll xchg nop or pop outsl sahf (bad) jmpq (bad) jbe mov sbb (bad) test scas sub int (bad) (bad) pop ss pop adc in (bad) cmpsl rex.RXB xchg and jbe out shll movabs outsb outsl pop push gs pushq (bad) adc movabs and js movabs mov and movabs or jnp push jne xchg and push jle jbe int (bad) ss pop in pop out (bad) (bad) loope movabs and add and (bad) push sub icebp jle data16 (bad) movabs pop repnz (bad) fs insl stos mov lock (bad) fdivr pop out xchg jbe adc sti fwait rex.RXB loop pop xchg sbb push rex.WB rex.RX pop push iret cmc repnz rcrl sbb pop pop shrl xchg pushfq std mov retq jb test (bad) callq addr32 rol cmp (bad) xor rex.RB xchg addb mov (bad) push (bad) jbe fs and sub stos sub add retq xchg rex.X mov insb pushq mov loope adc test (bad) jbe enterq xchg and mov mov test push pop loope pop cmp imul (bad) xor cmp adc add (bad) out in rex.WRB xchg ficompl xchg movabs out pop movabs mov jmpq outsb xchg xchg or push push mov (bad) pop jno add loope (bad) insl movb rex.WRX movsl adc rex.WRB xor (bad) rex.RXB rex.B sbb mov (bad) movsw insb cmc or sub repz test insb mov jrcxz sbb jmpq push in jae je jmp stos int mov sub retq stos jnp loope pop pop mov in (bad) pushq rex cmp pop xchg sbb push cli jmp scas mov and cmp loop xor iret sbb andl push ds adc cmc xchg cltd mov mov (bad) icebp xchg and outsl or repz movabs mov sub jrcxz movslq movabs fs mulb (bad) fidivr cmp mov jns (bad) stos mov pushq adc rex.RXB (bad) xchg xchg (bad) or pop callq sub rex.W cs shrl push push (bad) (bad) int3 test xor and jg pop mov xchg retq sub pop cmc movabs adc adc and adcb in pop push fisttpll rex.WX rex.RX rex.WRXB jno mov or xchg cmpsb sarb cmp jl adc and (bad) rex.WR pushfq adc lret pop (bad) popfq mov and cmp rex.WRXB rex.XB lea (bad) jmpq (bad) outsb gs and rex.W rex.B push pop in xorb mov rcll add pop fcmovnbe subl rex.RB sbb rex.WRX (bad) test out xor jg and popfq xor repz stos jbe rex.RX or cmp push jnp out rex.W rex.XB mov idivb out mov cwtl std rex.RXB mov fsts (bad) cld rex.WRB cmp insl out adc loope cmc cltd cli out cwtl mov je push add movabs jns scas rex.R xor (bad) fstpl (bad) shrl mull rol mov (bad) jrcxz or cmc rex.WRXB (bad) (bad) jg icebp int3 xchg scas in xor push mov adc mov (bad) jle sbb data16 (bad) add scas rex.XB rex.R (bad) jb (bad) movabs xlat outsb push push jo sbb idivb rex.XB lock in and jp adc callq mov pushfq rex.WRB pop cmc xor jrcxz xor mov mov pop jbe jns pmullw and (bad) mov mov (bad) sub sbb jae push adc retq pop mov xchg hlt mov mov xchg cmpsl rex.WXB xor jne sbb adcb sub cmp (bad) cmp pop sub movabs sbb ja jle adc nop fistp mov push adc rcrb cmpsb rex.X rex.WRB cmp (bad) fistpl jge xor add xchg and loop (bad) (bad) jle xor jno (bad) (bad) push mov (bad) cmp (bad) jrcxz sbb fnsave cmp mov out je xchg mov movabs pushq (bad) or mov and (bad) jb fsubl cwtl jle (bad) insb push movslq lea and clc pop or cmp push in movslq gs fistp shll test popfq (bad) (bad) mov mov push test addl jno or loope pop int3 rex.WB repnz (bad) hlt movb lods rcll in jmp pop xchg or in add cli std pop and repnz sbb xchg insb jp xor push pop or add jne movabs loope pop or (bad) rex.WRB xor mov jrcxz mov lock xorl test retq xchg pop iret cmc rex.X sahf repz xchg add mov xchg xor sub and addl pop movsb lock fimull jb leaveq loopne mov pop imul push (bad) (bad) mov rex.WRXB mov sub sbb es add out and mov adc (bad) fs jne pop xor (bad) out pop repz test out pop adc lret pop cltd mov or pop outsl ficompl mov xchg ss lea movsl (bad) movabs shr loopne sbb cmc mov pop andl mov out (bad) xchg hlt pop test fimul sahf out xorl (bad) pushq out incl pop popfq cmc fcomip movslq iret movabs rex.WRB shrl fisub (bad) jg or (bad) ficom sub (bad) (bad) xchg xchg xchg xchg xchg jb test push sbb in in mov jb (bad) loope movabs int3 in icebp pop sub outsl xor stos lods jge rex.RX mov (bad) out lods sub xor (bad) ds rex.WB repz mov fwait jg add iret (bad) int js sub rex.R jp xchg sbb (bad) xor pop data16 (bad) scas sbb out cmp xchg xchg cmpsb adc sub rex.WXB xchg mov es or (bad) in mov adc xor jo (bad) cwtl xlat and jmpq rex.WX repnz and or pop out mov scas movabs mov push jne and jge outsl pop jae in cmpl insb lods (bad) (bad) in (bad) iret (bad) jle (bad) out and jp jne or push pop addl data16 js (bad) rex.WX jle jge (bad) or (bad) rex.X ds ficom pop rex.RB fstpl and cmp rex.WRX mov rex.RXB rex.XB pop out lods out jrcxz int bnd popfq mov and or lea jmpq mov movsl movabs or movslq stos (bad) push pop (bad) pop imul jmp rex.WX mov (bad) cmp shlb xor cwtl sub xor xor rex.WB fwait xchg stos and ficom rex.RB mov es movabs jrcxz jmpq movslq loop (bad) rex.WB scas mov add (bad) rex.WX loopne sub pushfq in rex.RX cmc bnd cmp rex.RX (bad) (bad) decl xchg in ss (bad) xor fstpt insb mov mov jo roll add mov sbb movslq adcb adc mov or pop adc jne push rex.WRB (bad) xor sbb mov fstpt or iret jnp repnz repz sahf push jb add rex.WRX notb movabs sub pushq rex.B repz jno out repnz loope xchg rclb fistl ror sahf mov (bad) push std gs (bad) sbb cmpl adc (bad) repnz stc rex.WRX cmpsb std sub jno (bad) cmp nop jno sub jb icebp add rex.RXB mov loop adc mov xchg push sub add (bad) mov xor movabs and sti loope rex.WX mov rex.WR rex.WX pop cmpsb insb and mov jb jge mov roll rex.WXB fs and push (bad) jle mov pop sbb mov jo in add push je rorl xor sub cmp (bad) (bad) (bad) adc mov push sub jno rex.X (bad) (bad) mov rex.RX movsb rex.WRX sarb or retq sub add mov loopne jae push repz xchg std repz sahf (bad) js mov fmuls xor or (bad) repnz pop (bad) stos xor rex.WB scas jrcxz mov (bad) and add jbe pushq cmp test movl pushq or pop test outsl test int std mov sub xchg mov sbb jb ljmp cwtl (bad) (bad) xchg add xchg jrcxz jns sbb lret xchg xchg cmc outsb mov or push cmpsl fbld popfq rex.RX out add movslq movabs pop mov rex.WRX rex.WRB rex.WXB (bad) (bad) mov xchg leaveq test mov jae test jmpq (bad) outsl cmc pop cmpsb rcr mov jle rex.WR lock cwtl movsl and test xlat (bad) mov mov test (bad) pop (bad) xchg stos sub jle (bad) rex.WX cs and orl shll shlb sub lahf out cmp xchg mov mov mov xchg mov xchg leaveq int3 ss pop fcomps push data16 adc stos jb (bad) mov rex.RX sbb loop push and fwait (bad) mov sti and and sti (bad) in (bad) nop add mov mov mov out stos out xlat movabs mov rex.XB je jb adc mov xchg add out push push xchg mov jg icebp jno mov (bad) xor rex.WRB lock rex.RB push rex.B jae rcl sar xchg xor rex.B stc or adc sbb fucomp rex.WX fldl rex.WRXB repz outsb fisttp loopne push xorl mov add outsb or pushq cltd icebp hlt mov add stc rex.WB pop cli or rex.W push orl es gs add divl imul (bad) ds (bad) addr32 movsb adc or bnd (bad) test (bad) xchg ss pop pop lods (bad) xor cmpsl faddl xlat ds outsb (bad) jae fisub xchg pop (bad) test insb iret adc pop test scas xor jle imul std sbb jns pop (bad) popfq xchg rex.WRX sub xlat outsl (bad) cmp scas push jle xor (bad) pop pop jae (bad) rex.WXB stos add repz fimull jne (bad) (bad) push movabs rcl movabs in xchg rex.X (bad) rex.WXB test (bad) movabs xchg pushq or or mov rex.XB rex.R mov (bad) std or xor and mov pop rex.W rex.WR push pop rex.RXB stc jp test mov movl retq cmp mov movslq popfq mov icebp cmp movabs in pop and mov fdivp sub pop adc or sbb (bad) and or (bad) adc mov jne cli pop rex.WRXB cmpsb add or test fimul mov loope xchg stc push pop add cmpl (bad) mov (bad) f2xm1 je xlat cwtl jbe mov pop fcompl adc rex.WR out cli jge cmp and (bad) stos fisub pop rcrb add fs jo sub adc add cld movabs jge adc pushw in ficompl pop jg jno mov xor cmpsl cltd pushq sbb lcall or cmp adcb fcomps (bad) rex.WRB rex.XB pop mov (bad) jbe movabs pop (bad) xor pushfq xor and movabs addl push (bad) adc iret xchg rex.WR mov fdivrs pop cmpsl lods sub addr32 (bad) data16 or movslq divl iret add jo jle scas xchg out push or mull and cmp lods jbe xchg fisttpll mov or pop movabs pop loop rex.WR pop rol (bad) xor movsb fistpll ss jmpq xchg pop (bad) pushfq add out movslq sbb outsl or pop fdiv (bad) sub xchg loopne shll mov incb rcrl lahf mov mov insl retq (bad) jnp rex.XB xchg (bad) rex.RB mov (bad) mov pushq rex.WX xlat repz rex.RX or shll out pushq pop mulb sarb pop lahf push xor pop cli fcomps xor popfq pop mov rex.WRXB fwait push ficom in rex.WB rex clc out xor adc (bad) test pop jmp add mov jl fcomip imul and fnsave and jno repz in xchg test adc add mov add or mov cmpsb and rex.WRX xor je enterq test (bad) jno cmpsb icebp lret mov movabs sahf mov retq (bad) int xchg ds push jge stc xor sbb jne xor push je test movslq (bad) push jg fdiv mov pushq xorl (bad) pop rcrl cs (bad) (bad) sbb clc cmp mov movabs retq mov stos loop,pt loopne (bad) test movsb jno cmpb outsl xor add rex.WB repz pop in (bad) push jbe test cmpsl jbe pop xor bnd ja push jbe enterq outsb repz (bad) xchg mov cmc or in xchg (bad) mov push add add in pop or xor mov imul sahf xor pop rol adc je (bad) mov setb pop (bad) lret mov (bad) mov movsl or add out lahf (bad) (bad) xchg movslq add mov lahf mov rex.WRB gs retq (bad) adc (bad) sbb clc sbb sahf rex.R pushq movabs retq decl or mov cmp (bad) (bad) mov or popfq rclb movslq cltd add (bad) subb lahf or mov add fcoms jb adc lahf std (bad) add jg movabs std jns in imul (bad) leaveq jrcxz xlat (bad) rolb jno hlt mov xchg rex.R rex.WX fs in test cltd (bad) sbb sarb popfq xchg mov movabs pop sub cwtl outsb xor (bad) mov rex.WX rex.RB faddl out cmpsb sub mov cli pop cmp sbb enterq nop xchg pcmpgtd mov jo jbe fs rex.WX retw mov pop xlat and cmc cmp rex.X rex.RXB add int3 and sbb fcomp cwtl icebp mov mov mov iret sbb movabs pushq loopne push nop (bad) sti mov rex.XB (bad) fbld (bad) imul jo ss (bad) (bad) (bad) lret (bad) (bad) (bad) and jbe cli clc in and ss loop jrcxz pop adc lea xor pop cli fidivr (bad) cs cltd pop xchg xor add xlat xlat loopne pop xor fldenv gs xor enterq loop repz cmp xlat pop int jg mov mov mov rex.RX movabs pushfq loop push retq cli std mov rex.WRXB and test sahf popfq rex.WRB fild sbb (bad) xchg sarl jg (bad) or cmp (bad) (bad) (bad) cld mov rex.X (bad) rex.WRB rex.WRX sub xchg (bad) lahf pop fnop test and seto jp retq xor icebp jp and (bad) out cmpsl repz andw mov sbb outsb in stos pop rex.RXB add in xor add jp and or mov callq data16 jb mov xchg xor mov pop retq mov out (bad) sub and idivb and add movsl push insb mov (bad) push cmp test rex.WB sbb retq mov out jnp in rex.XB jl nop roll pop mov rorl and (bad) callq xlat rex.WRXB fucomip jge,pn pop jne (bad) test and add adc rex.WXB (bad) mov add (bad) (bad) sbbb add jo test mov cmc sbb sbb rex.WXB (bad) jae (bad) leaveq sub (bad) pop mov movsl stos xchg incl lret (bad) pushq push push push test rex.WXB mov out jge sbb rex.W rex.WRB cmp rex.X adc pop cwtl rcll lock xor pop rex.W jl pushq lods push cltd lea xor cs (bad) xchg rex.WRXB pop rex.X (bad) repnz fstpt xor pop adc cmc (bad) xacquire add cmp adc rol lret and xor xor (bad) xor add pop rex jbe imulb pop outsl or mov cmpsb ja movabs add movsl xchg rex.R retq pop mov int xchg (bad) sbb (bad) lahf rex.X pop lret jns stc mov (bad) xor mov sbb pop in xchg xlat (bad) mov cmpsb fldcw in pop push retq mov (bad) rex.RB rex.B stos pop pop enterq js movabs std (bad) icebp lods lock movabs pushq (bad) rex.WX outsl sbbl and or adc rorb pop pop mov pop test sahf mov xor add mov mov rex.WR fsubrl lock pushq leaveq movsl (bad) ud1 repz jle mov (bad) out in sbb mov (bad) add pop or lret (bad) cmp add rex.WB jg sbb push (bad) gs mov adc mulb push jno or push (bad) (bad) cmp cltd sub movabs (bad) adc add je rex.WRB mov retq mov negl stos mov jne fwait add jbe test int shlb hlt jne movslq adc cs (bad) xchg mulb pop adc sbb imul pop rex.XB cli or (bad) jmpq push jle lea rex.WRXB rex.XB and cmp lahf pop in out mov data16 fild pop addl push pop nop (bad) push ss sub xchg (bad) xor xor xchg rex.W callq pop push addl loopne outsb xor xlat mov (bad) jp adc rex.RXB mov sbb callq js out cmpsl (bad) or ror and movabs or gs scas orl cmp retq lock xor test rex.RB ds (bad) outsl test mov xor sti rex.B mov scas rex.WRB in fcoms movsb pushq movabs test sbb sbb cmpsl (bad) out je and rcrl cmp (bad) fucom rex.RB lret mov cmp insb xchg pop mov cltd (bad) fiadd (bad) movabs mov (bad) ficom mov clc (bad) vmulsd mov int3 (bad) sub xlat and outsb pop and rex.WX pcmpeqb jne or pushq sub in cmp insb push (bad) ds xor xor mov in push pop test outsl (bad) sbb movabs (bad) xor cwtl pop lods callq sbb (bad) rex.XB mov xchg rolb mull movabs or (bad) jle fnop sub cmpsb and test sub and pop fs sbb fimul adc sub (bad) mov jbe adc mov and push test rex.R outsb fwait push or pop sti mov mov rex.WX rex.WRB jp cwtl fisubl mov and bswap pop (bad) out ss push mov sahf iret jmp sbbl popfq loop rex.R scas iret mov (bad) (bad) xchg or and or jl sahf pop cs clc out rex.WXB int3 ss and sahf or mov and test jg ds imul mov fwait mov mov lahf mov push outsl test (bad) sub (bad) xchg sbb movabs (bad) (bad) push movabs sarl (bad) mov rex.B lock or mov xchg std outsb rex.B rex.RB fbstp movsb mov mov xchg decl push insb movsl mov xor insl ds in (bad) xchg mov sahf movabs add (bad) mov pop mov ss cld fs jne xor hlt xor imul out add xor rex.RX out (bad) rex.WR iret (bad) xchg fnstsw xchg (bad) sbb loope test cmpsb mov (bad) movabs in movabs (bad) lods mov out repz cltd jg stos (bad) cwtl push add and jg pop jg mov (bad) push sbbb add jb mov pop mov (bad) xor push pop leaveq sbb rex.WXB xor fmull push rex.WRXB and (bad) jb mov add (bad) mov lahf xchg cmpsb rep movabs (bad) in cmpsb sub lods loope pop push sub hlt mov pop sbb cli xchg sbb or (bad) add (bad) push xchg test cmp pop pushq cld xor and icebp data16 xchg jae scas cmp and mov in rex.WXB rex.WR cmc (bad) retq or movabs rex.WRB addr32 fstps movsb sbb lea sbb jo pop xor mov fs or adc shll rex.R retq (bad) and je scas popq repnz rorb sti jbe and pop (bad) (bad) and rorl sbb pop mull push retq xchg mov (bad) add mov outsb in stos es xchg sbb sub fcompl movsl (bad) sub gs notb cmp and add jp je in (bad) pop cmp in lea and (bad) rex.RX push and sbb (bad) outsb mov scas jg rex.XB cmp pop or sarb mov mov jl adc (bad) mov push cmpsl (bad) add jnp rex.WXB (bad) movsb fwait cwtl data16 push icebp cs mov movabs rex.WRXB (bad) adc insb movslq and insl cmp jno rex.RB and scas int3 (bad) jns insb pop (bad) hlt mov jne xchg and jl push mov sub push sbb jbe data16 (bad) and fbstp pop mov mov push loopne cmpsb adc push sub cmpsl sahf data16 repz movslq scas pop cmp popfq jge rex.WB pop add cmp mov mov rex.W rex rex.WRXB std pop xchg add ss sub fwait xchg (bad) cmp mov (bad) data16 pop pop test mov in or cs push test out test pop cltd clc cmp and add (bad) retq mov ficompl (bad) mov and xor cli (bad) pop out (bad) (bad) rex.RX cmp (bad) mov pop insb mov pop pop and adc (bad) push xor lods pop (bad) or add ss (bad) movabs add pop and fwait data16 int3 xchg movsb mov lock in rex.WR mov sub xor mov add xor push stos (bad) insb imul (bad) lahf cwtl movsl nop repz jae xchg (bad) sub add fmul (bad) mov (bad) or sbbl jle retq in jmpq adc add pushq adc adc scas mov and outsb icebp je (bad) cmp sub (bad) rex.W xchg out divl loop subb sub or roll sbb movsl (bad) jne insl fs fisttpl rex.WX sub scas cwtl insb data16 fsubrp xor movsb pop pop pop (bad) mov movabs movsl mov scas in pop sarl fisub cmp fbld (bad) sub data16 jne add es pop jbe loop push (bad) (bad) and xchg mov icebp outsl add xchg cmp mov xchg (bad) sbb cltd pop imul xor outsb movslq sbb hlt scas pop insl cmpsb fs xchg add mov mov rex.RXB pop cmp in sti addr32 loope rex.WX retq mov rex.R movabs mov push cld xor sub and rex.X loop xor hlt fucomip ficompl sub fstps (bad) push and pop pop add cmp in pushq jno (bad) mov fdivrl jle (bad) icebp repz jp pop and mov fimull idivb imull mov pushq xchg xchg lea mov or je lcall icebp sbb jbe and shlb testl mov fsub movabs push rex.WB out rex.X addb rex.XB (bad) mov push movabs xor add jno mov (bad) sbb (bad) (bad) mov movsb or sub xchg adc je addr32 decb cltd mov js xor jmpq jbe mov pop xchg cmp movabs mov mov cmpsl rex.RX (bad) sbb xor rclb mov mov (bad) mov xchg adc (bad) (bad) and (bad) pop push mov outsl cli (bad) rcrb (bad) pop (bad) lods (bad) insl adc sbb lahf push push (bad) pop mov lea pop xorl retq mov rcrb callq mov xor (bad) pop pop sub (bad) leaveq rex.WXB sbb psrad (bad) jg pushq lea repnz or fistl sbb xchg (bad) (bad) rex.WXB cmp add or xchg movsl (bad) xchg rex.B xor out shrl clc and cltd mov (bad) (bad) and movabs jo cmovae mov movsb push rex.W (bad) xor pushfq (bad) movsb pushq fsubs movabs rex.WX out fisubl rclb in loope cmc movslq add pop xor scas je (bad) add popfq sub push and mov movsb cld xlat fsubrs push (bad) adc xor add movabs (bad) scas mov add mov pop and out jae movsb adc outsl (bad) pop add rex.WRXB ss xchg sahf mov movsb (bad) and rex.WX in and nop shrl pop rex.RX (bad) (bad) fistpll lock lahf or retq cmp adc int adc pop test lahf add pop xor rex.B push mov sub in adc movabs out xchg and shrl jl pushq cwtl ffree adc (bad) sti mov (bad) in es (bad) sub cmpsl gs fistl movd cmp mov notl (bad) in jb scas push or fidivrl cli test (bad) mov xchg mov mov rex.WRXB and sbb adc fcoms pop jae sub (bad) pop mov (bad) pop lret or in pop rex.RB mov sbb clc std mov rex.RX cmpb cmp adc (bad) out popfq lret in jrcxz in fistl mov jle sub retq (bad) pop add lock jmp fst ds (bad) jle lods pushq int push rex.WRB cwtl pop xor insl fs movabs pop adc mov rex.R cs xchg xor (bad) push add add loopne xchg rolb sbb mov mov (bad) jno (bad) callq and imul (bad) sub in mov int3 (bad) (bad) sti (bad) or rex.RX lods cmp rex.WRX cmp pushq pop in pop xor out test pop rex.RX mov movabs fs movslq cmp xor ror rex.X xchg (bad) rex.XB cltd and loopne sbb (bad) (bad) cmp hlt pop in rcll (bad) mov rex.W xlat rex.RX pop (bad) repnz mov fs adc mov movabs and fwait mov and xor (bad) (bad) (bad) and jnp xor sub xlat jae jg or (bad) jbe xchg (bad) sub fs pop (bad) xor movsb fcoms sub rex.W sub out retq in sti mov (bad) add iret jle leaveq rex movsl push add cs and sub test out pop test adc cmpsb or jae mov jns (bad) sti hlt icebp fimul mov (bad) pop (bad) movabs movsb (bad) fldl (bad) push mov lahf mov (bad) movabs pop xchg repnz mov add or stc mov (bad) or ficompl ds pop adc pop mov pop je,pn cmpsb imul rclb rex cmp jae frstor (bad) fwait pop jne test cwtl pop sub scas shll pop rex.WRXB je (bad) repnz (bad) in (bad) cmp mov xor fcom and pop scas insb sbb fsubl jne add jle iret mov lods movabs insb rex.RX fs fs adc pop and andl roll (bad) retq gs sbb adc lock (bad) (bad) fistpll out pop jo (bad) pop rex.XB rcrb (bad) repnz (bad) or retq (bad) repz pop xorl push movabs xor or cmp lret leaveq cmpsb in cmp mov mov rex.WR and and pop push pop push rex.WXB pop pop cmp test callq sub repz and movslq cmp (bad) movabs mov jne jle rep or cwtd sbb cmpsl je out and jo fidivr sahf (bad) cld addr32 test movsb rcrl cmp scas jrcxz (bad) (bad) loopne lret cld mov fcmovbe push (bad) scas movsb hlt (bad) (bad) movsl or cmpl push ror jge movsb and rcrl pop sub sub (bad) icebp push sub jns (bad) jne lea mov jae sahf incb std cmpsb sub sub push push fwait in sbb sbb movslq std sahf sti (bad) mov pushfq (bad) adc rex.RXB popq rex (bad) rex.WXB ds cli pushq pop repz insl add xor cmpsl in fnstenv (bad) iret mov in clc mov and mov gs add add mov adc push clc push adc (bad) addb mov add test xchg loopne and vunpckhps rex.RXB ds jp or pop fimull add gs (bad) imul loope lahf pop jmpq rex.X cmc and mov pop jne gs and rex.WX (bad) rex.WB mov (bad) (bad) sbb mov push int and lods jp jne out mov rex.WRXB mov sbb retq pop (bad) rex.WXB fisubrl xchg lret pop and negl xor test lock jp movslq rcrb xchg fnstcw (bad) jge (bad) mov mov mov imul movsl or shrl and or test (bad) imul (bad) jp mov sbbl (bad) jns rex.WRX rex.RX and rex.B sbb (bad) scas jae xchg add jb mov mov xor cld scas sahf (bad) xor (bad) fildll mov divl sub pushq sbb mov movabs push fnstenv cmp je jno pminsw (bad) in xor cli jb mov push (bad) pop sub in sti pop es loop sbb and xchg pop pop fs lock callq sbb rex.RB jb sub mov pop fcomip rex.WRX out pop add in outsl pop jmpq gs lock adc imul (bad) mov mov jnp movabs (bad) jb lahf (bad) fs int3 ss loopne (bad) mov outsb sub push nop je movsb mov pop rorb (bad) jno fadd pop adc outsl xor xchg cli out stc ficoml mov rex.W mov push (bad) sbb (bad) pop (bad) jnp xlat lods jne movabs cmpsb cmovbe sti hlt mov pop xchg sbb sarl mov mov mov retq (bad) in xchg js je adc rex.WB push and retq pushq jo adc sub (bad) push movabs mov and push add nop rex.WX jo sar out pop (bad) xchg xchg jle (bad) push lret (bad) cwtl sbb mov ds pushq fstpl stos sub and pop sub in inc xchg or pop or cmp rex.WRXB movabs scas xrelease mov xchg and ljmp sbb movslq sub xor mov add push (bad) movsb rex.WRX sbb cmp test or rclb out adc retq add mov cmp fidiv push fist rex.RXB test add loop in sarl pop or mov xchg (bad) cmpsb xor sti push hlt ja (bad) (bad) xor loop xlat in mov cmp adc pushq lods mov rex.RXB sub mov movabs mov push (bad) xor stos repnz (bad) fiaddl sub fadds fxch xor test sahf cmp movb lods out insb jae (bad) (bad) push pop add xchg adc pushq rex.B outsl adc sbb outsb add je imul bnd test xor icebp jno (bad) add cltd (bad) hlt mov rcrl xchg sbb outsl cmp mov insl push (bad) jl (bad) fs adc lea pop (bad) mov rex.WRXB adc stos cwtl repnz mov rex.X adc negb pushfq lods stos and sub (bad) jb xchg pop lahf mov rcrb add rex.X rex.XB rex.WRXB repnz js rex.WX pushq fiaddl (bad) xor lea leaveq std mov jmp (bad) cltd pop (bad) adc mov add (bad) (bad) add rex pushq cmp rex.WRB jnp rex.WRXB sub je sbb mov mov and or repnz (bad) mov fcom mov rex.RB and jno insb rol addr32 xor mov rex.WX fistp add and (bad) adc repnz and and cmp add test out pushfq leaveq cmp cmp mov mov mov rep rex.WX scas out sbb outsl fs jmp xor lret mov imul jge movabs sub (bad) jno (bad) lock out insb insl push mov cwtl or cmpsb jmpq xor nop mov (bad) jp sub pop (bad) mov pop jo push mov sub rex.RX or mov adc push pop clc test push (bad) pop mov jbe pop mov or retq loope rex.RX (bad) (bad) (bad) jne add mov rex.WX pushq dec retq imul (bad) orl pop (bad) rol mov lcall sti es mov rex.WRXB xor mov rex.X rex.WX es jle mov pushfq xchg fisttpl rex.WRXB and movsl (bad) (bad) rex.WB pushfq shrb cmpsb add ds mov pop rex.WB rex.WRB jbe cmp lock jmp pop xchg xchg jle adc pop mov (bad) popfq (bad) (bad) or rex.RX mov add cmp xor data16 pop jmpw adc xrelease popfq (bad) pop movabs xchg (bad) outsl movslq popfq frstpm(287 movabs data16 neg xor iret fist (bad) mov stc and adc stos outsb popfq jge out ds pop xchg add xchg in sbb (bad) or (bad) fnsave xchg xchg (bad) pop mov and ficompl lods adc jae (bad) or xor jbe mov in pop add scas xor loopne rex.RX fdiv insb jnp or cmp jbe je push (bad) retq (bad) mov fisttp pop mov xchg je idivl xor jns cmp or (bad) pop mov lea (bad) movabs retq xlat push xchg jg (bad) js push retq fwait pop sbb add (bad) in sub in jne outsb and cmc movabs jae rex.WX repz data16 mov and and outsl addr32 sbb jne (bad) or pop and rex.XB jbe (bad) xor imul jne xor addr32 (bad) fwait xchg (bad) cmp mov callq sub sarl insb movabs mov sub (bad) retq cmp and out pushq adc mov (bad) pushfq adc or hlt push fdiv lods (bad) mov nop push adc iret sbb xor adc jno mov mov test xchg pop and (bad) (bad) mov add mov (bad) pop mov out movabs mov add pop (bad) push (bad) (bad) movb repnz iret mov (bad) hlt rex imul jnp rex.XB gs outsb (bad) int ja jo test cmp mov adc (bad) rex.WB movabs imul xchg rex.W rex.RB cs mov xchg (bad) mov sub movsb stc mov pop (bad) (bad) pop rex.XB ror pop rolb loope callq adc and popfq xor jnp xorl outsb out pushq mov sbb xor pop rex.WRX or jp pop xor movsl pop rclb mov sbb jrcxz pop mov (bad) insl cwtl sbb xchg mov sub adc callq es lods push pop (bad) rex.WXB rex.R pop jno sahf push adc (bad) hlt in mov sti xchg sarl mov outsl push push fucomp rex.WB cmpsb mov stc clc add lock movabs pop movslq (bad) push leaveq or fwait cltd sbb xlat sub loop xchg xchg (bad) (bad) sar pop push xchg pop (bad) jp (bad) mov push push (bad) popfq (bad) movabs sbb scas scas mov (bad) or pushq ja push pop mov test movabs ss ficompl rclb jmp cmpsb xchg out lods sub pushq and std mov cmp mov xlat data16 rex.W sahf and (bad) retq rex.WB repnz outsb xor movabs mov or test xlat pop movabs rex.WX sub fisub push (bad) (bad) movabs ffreep scas mov (bad) sub data16 sbb scas or xor cmp mov push (bad) (bad) mov repnz (bad) leaveq fcomps nop rex pop js cmpsl push add adc or and lea xchg repnz pop jmpq mov xchg movsl fistp rex.WX jmp imul iret (bad) rex.RB xor cmpsb and jns fwait pop xor jle (bad) cs rex.WRB outsb sub scas callq enterq or rex.WRXB cmpl cld jle out (bad) (bad) fnsave push pop (bad) incl scas cmp (bad) adc cld mov xchg test loopne sbb sub (bad) xchg mov movslq mov or sahf adc cmpsb (bad) mov pop rex.R rex.B addr32 lods out mov xor fildl cmpsb out cmp rcll fsubp or sti cmpsb rex.RX movsl fs (bad) jmp jl insb adc adc mov callq pop cmc cld (bad) fs xchg int sbb (bad) adc adc (bad) movabs rcrb movabs push mov rex.XB sahf lahf (bad) add rex.W (bad) in xor xor outsb jg xchg std jbe jg mov fimul nop push mov add xchg je (bad) cmp pop xchg rex.WX jge (bad) jae sub mov pushfq sbb xor rex.W pop imul enterq movslq movsl (bad) mov adc cmc pushq mov add out pop xchg xchg rex.WRXB outsb cmpsl popfq loop rex.R jle insb mov adc rex.WX psrld jl or rex.WXB (bad) and movsb (bad) fbld je out xchg int pop loop sbb (bad) adc (bad) add mov mov jb repnz (bad) sub movabs jle hlt movabs stos (bad) xchg subb push mov xchg xor xlat movabs sahf out faddp cli and xor sti int loope rex.WXB callq (bad) push (bad) pushq (bad) mov icebp (bad) stos adc enterq imul add sti (bad) lret lahf (bad) es sub rex.R sub data16 in int3 or (bad) rcll cmpsb (bad) pop stos sbb pop pop sbb test xchg insl data16 mov or add jne out out mov sub outsb test mov (bad) and mov cmp sarb loope or loop rcrl rex.R sub outsb repnz jrcxz (bad) lret mov (bad) xor pop push movsb adc xchg add pop sbb rex.RXB rex.B pop adc and push add pop adc (bad) sbb and leaveq or fmuls sub pushq ss fildll add test mov rex.WRB or xchg imulb callq cmp xchg lods int3 add xchg (bad) (bad) insl movabs rex.RX imul (bad) xor or push sub cmp cwtl mov (bad) repz jle mov rex.WRXB repnz adc movabs data16 callq or or cs repnz mov mov or add xor (bad) (bad) scas xor push movabs (bad) hlt sar imul (bad) xchg sbb sbb add (bad) mov and fistp (bad) (bad) jnp (bad) data16 pop pop rclb jmpq mov mov pop push push cmp (bad) pop pushfq js repz jmpq add pushfq or jle sub fisttpll popq out bswap sub out cmc repnz (bad) cmp pop movabs xchg jb rex.X addr32 (bad) xor (bad) pop movabs push rex (bad) lods jg rex.X (bad) xor cmp out movabs mov jb mov adc push and jrcxz fist adc loopne pop sbb add clc movsl push test (bad) rex.WXB fwait mov sub or (bad) test jle pushfq rex.WRB push idivb movabs jns idiv sub jle xchg (bad) mov cwtl stc sbb jne cmpsb and addq (bad) int3 adc pop and pop mov xor pushq xor sti divb xor sbb sbb (bad) cmpsl stos (bad) or jno pop pop rex.WRB pop mov out mov (bad) and popfq cmc outsb fsub and sub fwait out (bad) fiadd (bad) and fcoml jae mov repz cmpsb add push test jl pop jbe xor movsb lea cs adc cwtl mov adc jbe imul scas icebp mov pop sbb pop test insb push push mov cmp rex.X gs rolb sub adc stos cmp lret mov pop repnz je and rorb jp or retq pop (bad) mov and pop fcoml (bad) movl xlat pop push mov xchg ja mov outsb rep or add outsb fcomi movabs cmp (bad) jbe movsb pop and movabs repnz (bad) loop pushfq mov rex.RB pop nop push rex.RB mov push (bad) adc (bad) mov out movabs pop sahf popfq fnstenv outsb mov cmpsb rex.WB mov loope pop fmull mov mov mov icebp (bad) sbb sub jbe (bad) movabs in scas mov fistl fdivp mov rex.WRB out scas mov scas and mov (bad) icebp add repz push xchg or rex.RB rex.X rex.WRXB jmpq (bad) push xor (bad) xchg mov lods or adc lret outsl jg sub loop jbe xchg push leaveq mov jbe fstpl adc movabs cmp (bad) cmp fldcw pop rcll mov (bad) push lahf (bad) xchg testb mov rex.WR hlt xor (bad) (bad) xchg callq pop mov gs addb shlb sub pop movsb xor fcmovnbe movsb insb pop std sub jle scas fs adc (bad) outsl mov pop push (bad) add outsb ss (bad) int jl pop pop fwait (bad) (bad) loope adc xlat mov cmp (bad) clc ficompl mov push (bad) rex.R (bad) adc lock cli test outsb sti jl lods setno xor (bad) pushq pushq (bad) rex.WRB rex.WB rex.WRX push sub mov xchg cltd repnz outsb mov or out jae rcpps (bad) test push (bad) cmpsb jo lods push loop sub andl fiaddl scas loope pop add rclb jle xor rex.B (bad) test (bad) movsl rclb jrcxz mov lods ficom mov xchg xor or pop xor rclb loope xor mov outsl jg cltd jp ja (bad) pop (bad) incb rex.WR movl (bad) adc callq and std outsb sub gs cmp pop xchg sub adc (bad) nop (bad) rex.RB sbb rclb sbb (bad) enterq (bad) cwtl push (bad) pop ror rex.RB loop rex.WXB addr32 xor mov sub push pop std cmpsb xchg movsb rcll loopne adc cmpsl (bad) mov xchg shlb loop cmp mov loope movslq enterq incl (bad) repnz xchg lods and movslq rex.WX rex.WRX scas jge jno (bad) (bad) pop pop lods pop cli test cmp std lahf mov rcll (bad) (bad) cmp outsb pushfq (bad) mov movabs jnp mov pushq int fsubp rex loop scas mov sub stos jl sub negb jb lret test mov (bad) add jmp stos pushfq xor jmpq (bad) xchg repz rex.RB out add xchg rex.WRXB clc rex.WXB pop mov mov je pop fdivl gs clc mov mov mov sub pop (bad) (bad) push xor and pop (bad) mov or rcll add cmp imul pop xor sbb pop je pop rex.RXB cmp addb or jne pop rex.B (bad) and in rex.RXB repz scas rex.WRXB movslq pop jo js (bad) fnstenv pop sub push xor pop cmpsb addr32 insl (bad) add cmp mov mov outsb outsb mov jp push (bad) pop jno lods stos sub rcl hlt loope rex.RB pop push or pop sub jmp ds and xor pop adc pushq loopne (bad) and add push jle cli sub movabs (bad) push test rex.WB rex.RXB (bad) xchg cmp rex.W sbb adc clc (bad) cmp cmp add add (bad) lods (bad) jb sub loop jmpq rex.B pop (bad) xor int leaveq rex.RX div std out rex.WXB outsl sbb xchg (bad) xchg movabs es ds pop in fdivrl mov sub ja loop or and xlat pop (bad) xor cmpb div lret xchg adc fs insl je (bad) adcb std out jl and adc xor mov add jae xor mov xlat mov out (bad) gs loopne sub (bad) sub (bad) insb out jl mov stc push fisub sub movabs and mov movslq xor sbb mov scas or lods mov iret mov rex.R jp sub (bad) xchg (bad) repz jmp outsl movsb test fs in out mov movabs mov lahf (bad) cltd rcrl js pushq jg xor (bad) sahf loopne add mov xchg push (bad) push rex.WR mov sbb outsl cmp mov xchg (bad) push (bad) xchg push xchg iret (bad) adc cmp cmc jae jb mov xor rex.RB (bad) movabs (bad) or callq xchg mov rex.WRB rex.WXB rex.R xor mov outsl imul rex.WB sahf xor pop jne mov rex.RB mov mov cmp pop sbb jge fs jmpq ja pop rex.WXB rex.WRB rcrb (bad) pushfq sub jp int icebp fucomip popfq push (bad) mov (bad) push mov cmp mov (bad) (bad) pop decb in push adc mov push and (bad) out pushq add push and mov adc movslq jrcxz fs jrcxz mov mov enterq (bad) push xlat xchg (bad) int xor outsb repnz test adc (bad) nop xor jp je cmp sbb xor loop pop out (bad) cmp nop or (bad) lea jmpq or xor xor lods pop push addr32 (bad) movabs mov xchg in mov rcr leaveq (bad) sub lods je rex.XB rex.RB push rex.RB adc push sbb jge or (bad) mov retq cmp lock xor push movabs stos movsb mov mov in jg xor (bad) stos enterq shl add (bad) pop in jmpq (bad) xor jb movabs push (bad) mov (bad) mov pop movslq cli sub pop movsb fnstcw rex.WXB lock repnz cli icebp cs rex.RB adc in xchg mov (bad) rex.W or std add mov jbe stos pop es clc (bad) hlt cs fimull cmpsl lahf mov int3 xchg mov gs nop lea add cli and cmpsb xchg lods (bad) sbb (bad) add mov jmp adc push icebp xchg je cmc (bad) or fadd data16 movsl rex.WRXB (bad) push mov movabs nop jne data16 rex.WRX xchg adc (bad) jle (bad) xchg mov in xchg test loop rex.RX (bad) mov sahf mov (bad) cmpsb xchg (bad) rex.X cltd mov and sbb cli scas in mov mov movabs ljmp mov mov cli stc xchg pop fxtract ror (bad) (bad) mov sbb mov loopne (bad) nop push js add fbld xchg jo jno int mov scas (bad) es mov sbb and or (bad) mov xor rex.WRB rex.WX jle enterq (bad) push jbe jmp cmpsb jns pop rex.WX fwait pop fldl scas (bad) movabs pop sbb jg scas cmpsb jmpq sbb pop jle rex.WB jrcxz (bad) jbe rolb mov movabs cmp (bad) xchg lahf subl popfw add mov movslq jg iret xchg (bad) fild icebp adc fwait (bad) rex.RX (bad) push (bad) (bad) xorl xor mov (bad) (bad) in or nop mov mov (bad) cmp icebp fldl xchg std rex.WRXB repz push std xchg out xor nop cmp (bad) data16 lods mov movabs xor add (bad) mov int je cwtl (bad) jae and jae (bad) mov movsl sbb std mov es (bad) or mov cmp shll and pause jp push adc sub sub popfq push pushq insl mov pop add sbb jae mov sbb fs andl out enterq fdivr movabs fidivr cmc cmpsb (bad) xchg xchg (bad) movabs and insl pushq mov (bad) fstl rex.WR rex.WRB sub movabs rex.RB rorb retq sub rex.WRB mov fmull (bad) xor (bad) or rex.WR adc mov ja mov (bad) std nop movslq jo jrcxz outsl (bad) (bad) out fisttp rep iret xor (bad) and outsb xchg bnd ja mov jmpq mov (bad) (bad) (bad) je in (bad) pushq int3 movsb pop xchg shll rorl pop mov (bad) (bad) insb sub cmp (bad) retq incl (bad) rex.W fs xchg iret pop mov shlb pushq (bad) pop test and xor (bad) nop stos pop fwait movabs sarl gs sub (bad) js (bad) mov (bad) fsubs rex.WX out test es gs repz (bad) (bad) movslq rex.RB (bad) mov loop lret mov jp adc mov xchg (bad) loope out in cmpsb fsubl jnp movabs pop rex.RB cltd mov xchg in js adc (bad) pop pushfq cmp stos ficompl (bad) (bad) jmpq rex fmul (bad) rex.RX mov rex.RB (bad) out pop (bad) and adc cmpl fisttpl and cld cmp repz cmp in (bad) fstpl jne fiadd (bad) test pop adc and (bad) xor pushq push insl je jmpq add enterq (bad) rex.R xchg push or (bad) jae pop ficom shl ds sbb add adc adc fcoml xchg push out roll sbb jo sub jg mov adc jno (bad) add pop test adcb rex.W pop out pop movslq out neg (bad) (bad) repz pop cltd sub std jmp sub movabs sarb mov push xor (bad) jns adc lcall sbb cmpb or mov add pushfq sarl stos cmp in mov jbe (bad) add rorl movslq xorb adc pop add jle sarl in xor xor (bad) add sarl push xor (bad) adc adc rex.RXB add scas shlb jo loope imul add jae mov iret jne mov fldenv cli (bad) jne orl pop fs mov cmp adc xorl (bad) hlt jo out rcrl mov jo add callq mov je cmpsl fisubrl xchg out sub mov (bad) retq wbinvd cmp outsb (bad) loope pushfq and lock xor jle gs outsb and (bad) jrcxz jne mov push mov and rex.XB sub sbb fiaddl sbb adc rex.W rcll mov (bad) (bad) rex push es rex.RXB loopne insb rex.XB nop mov (bad) movabs outsl sbb jb out pop insb pop (bad) fidiv xor (bad) push movabs data16 cmp es rex.RB rex.WRXB rex.WXB in mov movabs and sub adc vmovlps movabs (bad) (bad) mov ds add jns pop and data16 pop (bad) push mov cmc lret (bad) mov cltd loopne sub movabs mov sbb mov outsl or add rex.XB rex.B fs mov pop rex.R pop pushfq push mov (bad) add in movabs cli rex.B rex.B and push rex.WRX add mov (bad) mov mov rex.WR rex.W repnz scas xchg fsin addl and (bad) stc cld es adc out leaveq (bad) lahf shll lret (bad) cmp mov mov subl insl sarl jne mov sub xor test imul cltd rex.B mov mov pop add out addb pop push mov (bad) xor (bad) (bad) mov and (bad) push mov sbb movabs xchg retq (bad) je jp xchg sbb rex.W mov jae sahf (bad) and in push lret and je jbe push (bad) rex.WRB xlat or nop rex.RXB xlat ss rex.RX adc scas push lock nop add (bad) sbb decl lret pop notl xchg pushfq (bad) lods rex.RXB mov pushq or movabs imul jge cs cld gs imul mov (bad) mov (bad) repnz rcll pop (bad) iret fstl rorl fucomi test lea test jns cmc (bad) rex.RXB push rex.WRB adc lret rex.WRXB mov adcl jns shrl pop mov pop popfq fadds or rcl rex.R sti pop std xchg iret rex.WR pop rorl test cmpsb retq imul push lods out jns pop repz movslq and loope ss (bad) shrl rolb jbe cmp (bad) adcl rex.RX mov (bad) jmpq int pop mov add (bad) negb cmp xchg out fcomps or mov cmp movabs (bad) sbb (bad) push int3 or fdivs retq imul (bad) (bad) mov (bad) insb jae mov adc mov scas lods ja std rex.W shll stc add pop jne mov movsb rex.W rcll jg pushfq (bad) stos jae xchg sub (bad) je rex.WXB mov mov movabs and sub (bad) (bad) rex.WRB (bad) add pop rex xchg test and mov mov imul jno out out fistl (bad) lahf pop sbb incl movabs test rex.WXB mov push or rex.WR rex.XB sub lret pop adc hlt jae (bad) sbb loop rex.WR cmpsb cmp jbe gs cmp data16 loop fwait push cwtl (bad) frstor out in cmpsl sub (bad) data16 push movsl push rex.W (bad) cmpsb cltd and movslq rcl mov ja jns (bad) pushfq pop (bad) mov jmpq (bad) rex.RB rex in stc out adc rex.WB mov lods (bad) mov jo outsb adc rex.WRB repz mov mov mov rex.WB mov (bad) mov xchg rex.RX sbb cmc movsl movsb sbb add stos fiadd jae rex.WRB (bad) (bad) rex.RX adc cmp cltd (bad) fwait (bad) cmp (bad) mov mov xlat cmc or or (bad) movslq mov ja (bad) mov and mov insl mov and push mov sarl xchg (bad) ds (bad) sbb loop xor pushq mov outsl pop addr32 lret jle rex.WRXB mov cmp jae mov rex.X cltd or jge cmp retq (bad) sub pop mov sahf sbb (bad) pop out (bad) xor rex.WX jb jo (bad) sub pop (bad) adc out hlt mov pop jmpq push sub push push mov jbe adc (bad) pop mov push xchg rex xchg mov push pop test adc stos mov (bad) and (bad) ja gs enterq jle pop pop pop retq out movslq mov mov add (bad) add jp (bad) pop data16 (bad) je xor add jmp jno retq in pop sbb pop (bad) pop xor fsubrs rex.RB rex.WX (bad) jno pop (bad) movsl cli data16 adc vmaxpd sbb mov imull pop movabs rex.XB pop (bad) imul mov rex.X push in push mov ja xchg (bad) clc rex.WX fist lods cmpsb or lods or out jmp push push xchg xorl pop adc mov retq mov addr32 cli add loopne mov mov out (bad) mov add xchg pop test (bad) (bad) or movsl xchg callq rex.WRB push mov (bad) je (bad) rex.WRB repz rex.WRXB movabs fild in (bad) movabs jo (bad) and cmp mov and or roll (bad) ss test adcl movabs rex.R cmp addr32 cmp xor jmp jp rex.WXB sub (bad) sarb xchg mov xor rex.RX cmp mov and (bad) xor int3 sbb pop and retq fsubl rex.RB rex.WB mov adc test rex.WRB jmpq xchg es cltd frstor outsb nop ja loop test or out movsb xchg or add loop adc mov (bad) adc (bad) rex.RX jp xor jno test test pop mov sahf repnz xor add nop pop (bad) jno (bad) enterq loope,pn in outsl or cmpb loopne jne xchg movslq rcll in jge stc (bad) pop jp fucomp int3 (bad) imul (bad) or movabs mov in pop jmp mov xchg sub or clc cmc sub or imul rex.WR cmpsb jb mov mov sub jg,pt scas rex.WRX nop rex.RB xchg pushq mov fimull push rcl sbb jl cmc push lcall rex.RB (bad) loop ficomp mov fdivrs jmpq add movsl pop (bad) loop rex.WRXB push fisub (bad) sbb xchg xchg lret xor jns sarb cwtl adc loopne adc adc sbb xchg and adc lods cmp outsl test hlt and insb bnd in mov rcrl push jrcxz shrl lret mov push cmp add in push mov pop mov imul andb je rex.WR (bad) decb (bad) rolb rex.WX rex.W sbb movabs adc and jne (bad) (bad) xor jbe movsb xor addl jne loope push cmp xchg insl pop sub sbb test (bad) and (bad) adc pop rcr (bad) ds cmpsb cwtl pop outsb mov rex.WR sub cmp jbe rex.RX cmc adc lret rex.X movslq (bad) sub pop mov add pop pushfq cltd push jp push enterq sub cmpsl movsl scas mov xor sub and add je out xor cs gs and pop mov xchg xchg add jbe je rex.W adc add jge pop movsb (bad) (bad) xor movabs rex.WRXB (bad) cmpsb out sbb int3 or test movabs lahf enterq test callq add (bad) rex.WRXB mov mov loope (bad) insb jbe jg jp popfq in xor retq outsb jno pushq cld rex.RX in lahf mov nop add pop test adc mov out and (bad) sbb and sahf loopne mov xchg movabs add movsb and loopne sub (bad) leaveq out pop jmpq rcll jbe or insb movslq (bad) fs repnz xchg ja push mov std mov cmc rex.W rex.R js nop pushfq mov pop sahf sti mov out xor lahf (bad) adc mov pop push and and jns (bad) lods adc or icebp jb movsl idivb data16 imul cli jg pop push adc pushq and lret mov es add jg leaveq cmpsb push jb sahf pop mov xchg rex.WRX add push imul lock jne (bad) fstpl imull rex.WRX andb ficoml sbb outsb (bad) (bad) xor rex.RX mov jp movabs gs retq xor faddl movslq add test sub outsb test pushfq sbb orl pop sahf and add rex.RB rex.WX sub cmpsl in jo pop jrcxz mov stos or sbbb sub jmp pop jo adc mov xchg rcr or lods (bad) lods push scas imul xchg cmpsl shlb mov xchg mov addb jle rex.XB movabs (bad) sarb (bad) xor cmp (bad) sub loopne cmp (bad) (bad) repz pop rex.WRB test callq jp (bad) nop xor mov pushq push xlat sub movabs mov out sub push cmp (bad) rcrb (bad) je jrcxz outsb push sarb imul xlat push rex.WX pop jle jmp fistp (bad) jmpq rex.W xchg mov (bad) adc sub and sub mov mov insb xor mov fstl (bad) rex.WRXB xchg idivb or (bad) popfq sbb and xchg add (bad) mov (bad) gs jrcxz cs fisub (bad) push addl pop mov xor rex jge (bad) rcl xor or rex.RB rcrb sbb sub movabs clc and pop scas adc cld jle mov or push test cmpsb ds retq out and lahf pop fs push sti mov mov movabs (bad) sahf jg pand (bad) rex.RB mov pop je add push pop sub mov cmp lahf push outsb jno mov shrl jne movabs (bad) lret (bad) jne pushq cmp rex.WX and (bad) ja sub (bad) and add out (bad) (bad) (bad) lret lret add pop iret movabs callq add orb cltd xor jb mov rex.WR pushq mov sub stos shlb neg (bad) pushq stos in hlt int3 fimull (bad) sbb adc retq add pop test pop decl or stos test cmp pushq and mov jne (bad) incb test ds (bad) stos mov mov push callq rex.B stc sub lods rex.WRX rex.WB fldenv pop test rex.WRX in and std cmp add jnp loope int3 mov cwtl test xor fist in or pop callq jbe sti cld jle or (bad) xor sub xor xlat imul xchg lret mov mov out imul rex.WB sbb cmc outsb cmp (bad) rex.WXB and rex.W rex pop rex rex.WRB lahf (bad) cwtl jbe (bad) (bad) out and in movabs or outsl xor sbb jg mov movsl (bad) rex.WRXB rex.WXB jge (bad) jns in cli pop pop xchg or pop xchg jb rex.WB mov jbe movslq sbb rex.WRB jrcxz (bad) push mov pop pop add out rex.RXB jb (bad) sbb je pop stos sub (bad) fistl movsb adc movsl ja cmp repz mov rex.RX je and jp movsl mov pop cmp pop adc jge (bad) fbstp push add (bad) (bad) (bad) pop pop push jmpq sub scas pop pop iret push mov movsl fmuls movslq (bad) fstl (bad) mov xchg xchg imul xchg mov (bad) outsb flds jb or push idivl out (bad) lods jrcxz cmp xor adc (bad) push lret rex.WB movabs imul or pop sbb and (bad) outsb or addr32 pop test (bad) or pop pushq push (bad) adc sub shrb lods or add xor mov jne data16 lea fiadd nop gs xor out jb adc rcr subb jp jrcxz repnz test in pop test (bad) rcrl cmp mov cmp nop rex.WR mov (bad) xor mov mov cmpsb (bad) loopne jns cmpsl out (bad) imul (bad) addr32 jmpq sub sbbl mov sbb add xor adc jnp rorl retq mov jb movl movsb rex.WXB jrcxz add and lock (bad) rex.WRX data16 push pop xor ja mov mov or (bad) fdivl sbb stos sbb or and jae jg js jp (bad) icebp sarb xchg pop inc add sub mov pop adc or imul outsb sub mov cmp add (bad) cwtl (bad) gs insl es jrcxz xchg (bad) adc (bad) rex.W xchg test movsb in jp movsb jae,pn (bad) fwait cltd fs (bad) rcrl rex.WRX rex.WRX rex.RX and cli cmp sub scas adc insb icebp jl pushfq cwtl mov movabs lret (bad) pop movsl pushfq (bad) sbb rex.WRB mov jge pop pushq data16 or and mov imul mov mov movsl test (bad) cmpsb xor sub cmp outsl lock mov jne (bad) rex.WRB or pop test xchg (bad) push ror xchg jmpq jne rex.WRXB fs xor in push pop in movslq scas xor sub fidivr rex.WX mov jmpq sub jg cltd movsb out ds cmp xlat retq mov ss mov cmp cmc fmuls fiadd in insb insl pop and mov cmp or cmp pop out cmp movsl std lea ja movabs mov movl mov and push (bad) mov jp lods mov push rex.W push test mov mov pop stos mov imull fcoms int (bad) mov fcomp negb add insl mov (bad) sbb loopne enterq imul adc jne rcrl push retq mov rcrl mov mov mov jge enterq sbb sub jg (bad) xchg cmc in mov or outsb stos pop xchg pop jae pop cmp loop fisubr mov (bad) sbb movsb cmp jmp fisttp pushq mov rex.RB stos retq lods cmc (bad) (bad) (bad) sbb and jne fs adc (bad) in xchg shr jns imul sub mov fist add sbb rex.WRX int add (bad) xor xor mov cmp mov shr icebp loop and pop mov xchg sbb xchg (bad) (bad) sub addl movabs data16 mov insl rex.RB gs movsl mov adc (bad) movsl (bad) sbb jl (bad) rcr sbb rcrb movabs cs (bad) cmc mov pop pop pushfq xchg cmp sub pop jne out jae out pop test out (bad) xchg (bad) rex.X xchg movslq (bad) pushq movabs jne pop and (bad) popfq mov (bad) cs jnp lret insl sti sbb mov in cmp iret cmovne add and sbb jno pushq push xchg jge mov (bad) or sti (bad) cmp loope rex.RX and xchg lea mov adc ds idiv leaveq pop xchg pop xlat out fcompl fistl int (bad) push imul repnz repz jp jo mov jnp movabs xor jmpq (bad) xor rex.RXB jrcxz,pn mov push loop (bad) movabs rcr outsb xchg mov loopne movsl fimul fimul adc sbb repz stos cmc movslq jge mov mov loope add push outsb lods sbb xchg jp xor (bad) comiss rex.W xor (bad) fnclex jb pushq rex lock cmpsb data16 enterq jno callq cld xor (bad) (bad) rex.WXB rex.XB pushq xor rex.WRB mov push jo xor mov loopne cmc xchg cwtl push ds sub ror mov cmp (bad) (bad) mov add (bad) (bad) (bad) stos (bad) mov hlt clc retq leaveq sti jmp int test ror out fcoml and mov cmp loope xchg cli cmp xor push (bad) scas clc jnp add pop in lods data16 cld cmp push jb and pop or push sbb add in pushq lret xor cmp add xchg nop (bad) push fnstsw xchg pushq lahf fs or cmp sub (bad) push (bad) fs or sti sub pop (bad) sbb rex.WR jb (bad) pop add mov (bad) pop scas (bad) in (bad) movsl pop push adc (bad) fstpl (bad) scas pushfq push ds pop test and mov push jne movabs test scas (bad) and notl (bad) (bad) xor push sbb je,pn in gs repnz (bad) (bad) (bad) or mov loopne data16 cmp and cwtl xlat fldl xor push (bad) orl (bad) jg pop std (bad) insl add adc push cmp jl sub (bad) pop sbb pop adcl rcrb bnd pushq xor rex.X int adc pop jno movb jbe lea add movabs insl cmpsl hlt sahf cmpsb jo rex.WRXB mov sub (bad) lret sti sub pop loop ss (bad) mov and pop sbb mov lret mov (bad) rex.WRX jg in cmpsb jmpq enterq sbb jp sbb xlat callq notb rex.WRXB rex.WX sbb outsb push clc cli sub nop or mov callq pop (bad) adc jp add test (bad) xchg xor roll (bad) mov sbb movabs mov cmp test (bad) loop cmc xchg xchg pop adc rex.WRXB int3 rex.R add rex.WRX movabs or es outsb cmp push rex.R mov ficompl (bad) xchg test cmp (bad) and cmpsl movabs adc shrb jns,pn mov outsb mov or or out push mov (bad) pushfq mov imul (bad) jge pop (bad) mov (bad) cmp sbb insl xchg pushq movabs roll mov sbbb mov pop (bad) xor loope xchg mov shrl out cmpsl insl je (bad) fs add jae mov sbb jbe cmp (bad) sti mov (bad) iret pop jle mov fisttpl sbb add movsl je xor fabs (bad) or xchg xchg (bad) xchg push xor fstps jmpq push repnz adc rex.RB pushq std (bad) add test movslq mov retq sbb rex.WB (bad) sub rex.RX mov imul movabs mov sbb stos xor lods out adc rex.R cmpsl push mov scas (bad) and in cmpb movslq rorb rex.X movslq xchg hlt stos pushfq cmc movsb mov rex.WRB out cmp test jrcxz out add lock imulb jmp jnp imul rex.WRX cli fs (bad) sarb xchg fmuls xlat rex.WRXB pop clc push ds icebp mov xor lahf (bad) sub mov cli xchg xchg (bad) sub fistp mov iret test (bad) lods enterq test or pushq je mov rorl sbb repnz pop addr32 (bad) rex.R (bad) loopne test rcrb je test notb js xchg icebp rclb imul mov mov and add xchg outsb mov pop gs rex.X fcompl data16 jae and cmp mov (bad) rex.WX rex.WRB jl rex.W pop mov cmpsb movsl pop movabs (bad) xchg jle sbb (bad) testb xlat mov (bad) loope cmp sbb (bad) xchg addb scas (bad) xor cmp lods sub jnp cmpsl pop ficompl rex.WX xor xchg sbb je and pop mov or fsubl jns jle (bad) (bad) pop lea imul movabs or add mov or mov in mov fistpl lret fisub mov xchg sar (bad) rex.WRB fs mov cs iret jno rex.WR (bad) mov imul pushq (bad) scas test (bad) xchg imul sbb xor fcoms sbb lea stos jge cmp jno pop mov in rol or push or negl movb or mov mov repnz ja jb (bad) enterq or (bad) (bad) mov (bad) sbb lods clc enterq retq mov fwait (bad) stos mov sbb lods leaveq lea (bad) movsb pop in out rex.RXB es (bad) jmpq and pop imul fnstcw rex.WXB movabs xor in out add (bad) adc es fcompl scas loope (bad) (bad) mov stc fwait in loope xchg adc movl push adc movabs scas movsb (bad) rex.WXB push rex.XB add cli cmpsb rex.WRXB pop (bad) pop sub sahf loopne pop int3 or add xlat (bad) mov sbb xchg push jg sub rex.WRXB rex.WRX rex.RXB rex.WR (bad) fxch roll js mov outsl (bad) jle pushq pop gs xchg lea rex.RX mov sub add or xchg mov mov xlat scas fadds (bad) jl shll insl (bad) movabs (bad) pop rex.WRXB (bad) test in xchg jbe roll mov out sub fstps fs xchg (bad) int xor sub or in (bad) push scas xor jae or ja xchg adc cltd fs (bad) rex.R jge lods and (bad) shrl fiadd repnz fistl jbe xchg mov and adc test and (bad) roll stos add jno (bad) lods mov xchg sub out retq loop adc (bad) cmp sub std cmc in or rex.RB (bad) repnz repnz mov cmp (bad) pop fmuls nop xchg js data16 rex.WRX rex.WRB sbb adc mov mov popfq add lahf rex.X lahf push push xchg mov jns pop jae int nop rex.WRXB rex.WRX add mov movabs (bad) add decl in divb (bad) xor movabs fs xchg xchg je adc adc sti rex.R sbb jle jge mov jg cld pushq in callq movabs scas xor jrcxz xchg shr pushq push data16 fcoms or repnz adc nop (bad) push pop and or cld mov mov rcrb jrcxz rex.RXB lods jrcxz push rex.XB imul out pop (bad) in xlat rex.WB out movsl mov xchg or (bad) mulb ja (bad) (bad) jg (bad) ficompl loop rcrb imul rex.WRB sahf push rex.WRB pop pop movslq (bad) (bad) sub cwtl rcll lret rex.X push cltd scas mov je movabs jp fsubrl movabs jb or mov sub rex.RB rex.RX mov movsb (bad) (bad) (bad) callq (bad) add movabs add repz (bad) mov xor rex.B rex.WR add sahf jp hlt jmpq (bad) xchg pop shrl (bad) out movabs stos fiaddl or loopne sbb icebp rex.W data16 push imul and jno (bad) movslq sbb mov lock ds mov add mov loopne out cld sub clc retq pop scas (bad) xlat (bad) out int3 mov sti xor mov mov pop adc loopne mov rex.WRXB or xor or js mov movabs iret rex.XB pop jl xorl clc cmpsb es mov or cmp xor rex.RX (bad) adc adc pop cmp stos movsb fwait cmp and xchg xlat pop xchg (bad) mov mov mov (bad) xor fistp shlb jbe addr32 jrcxz pop add mov sub out add fucom mov std and mov pop fs (bad) cmp cld repz (bad) mov flds (bad) (bad) sub callq int (bad) jrcxz pop push iret pop (bad) pop pop rex.WX (bad) pop or retq (bad) add rex.WX data16 sbb repz test rex.RXB xchg movsl stos add pop fs jo pop lea jns mov out and pop push adc cwtl pop lea ss (bad) gs sahf callq outsl int3 rex.RXB jg add jbe sub rex rex.WX movabs imul (bad) push cmp idivb (bad) xor (bad) jne cmc xor es add cmpsl add jae jrcxz jp mov ljmp lock stc mov mov mov mov idivl retq (bad) data16 or rex.RB lahf gs pop (bad) iret pushfq mov and (bad) cld stc sti (bad) fnstenv sub xchg mov js fidivr out out or (bad) lods push pushfq pop sbb fistp or mov sub sbb push mov (bad) cmpsb lods lods adc test mov je jb pushq (bad) pop sti adc adc sahf movslq test mov (bad) pop leaveq (bad) jb mov and (bad) jne add (bad) (bad) push adc or pop mov rex.WXB (bad) movabs xchg cmp (bad) lret sarb fmuls (bad) or nop in out sub loopne in pop (bad) pop (bad) retq cs addr32 ficomp xchg repnz movslq movslq out cmpl insl fcom pop addl imul xchg (bad) leaveq or sarl push sarl out xchg jg mov es push cs jns and pop out xor pop (bad) xchg add stc jnp popfq jp mov movabs hlt fsts rex sub ds outsb test addr32 adc rex.WRB stc jge,pt imul je (bad) rex.R rol movsl js fidivrl sbb divb add jnp cmc out test xorl cltd subl xchg or xor cmp popfq outsl icebp (bad) rex.W fldcw (bad) xchg rex.WRB addr32 popfq pushfq cli jae jmp callq js shrb idivl and push (bad) xor pop mov loop xor and scas xchg pop cmpsb es (bad) or mov xor pop rex.RX lods scas (bad) sahf xchg rcrl movabs xor fldenv out pop repz movsl mov outsb lahf (bad) sbb (bad) jns callq mov xchg push rex.WRXB (bad) rex.X rex.RB icebp pop jne decl jle jns mov pminub mov or or loope (bad) cli popfq (bad) idivb pop movsb repz mov fild imul movabs rex.WR rex.WXB mov pop cmp out in push in pop jp (bad) mov (bad) sub pop (bad) lea add and mov vpsrad mov gs adc rex lods sub fildl xchg movabs ja and movabs fcoml lea (bad) sahf fwait jg (bad) sarb xor jg (bad) sbb imul (bad) pop or cmpsb sahf scas (bad) mov xchg sbb fwait sbb xlat imul ljmp ror pop push jl rex.W mul sbb pushfq rex.WRB sbb in imul push xor mov push movabs out rex.WXB movabs pop rex.X sbb out adc (bad) (bad) rolb int push int3 cli jl add out iret mov or retq test scas (bad) lret (bad) cmp retq (bad) rex.XB rep jo pop pop xor (bad) or fidivr rex.WXB cmpsb data16 (bad) sbb sbb sbb loop sbb (bad) sbb test xchg (bad) adc cmpsl or (bad) push xor cmpsl xchg pop rex.WRB and and push stos and cwtl sub (bad) jle mov (bad) (bad) (bad) bnd shlb rex.WRX out pop or jnp pop push push jmpq ss add mov cld fist in xchg (bad) mov cli gs jae mov cmp (bad) (bad) fbld cmp retq push rex.WR mov ja push rex.X pop loop xchg pushfq (bad) sub sub ja ja sbb std rex xchg cmp rorl (bad) lea es outsb sbb mov repnz (bad) push pop mov movabs mov fbstp (bad) xlat xchg movabs scas (bad) nop hlt stos gs in xor rex.W pop (bad) sbb cmp movslq rex.X rex.RB or xchg imul mov movabs shrl (bad) scas pushq lret rex.RB xchg rex.WXB jb cmp cmpsl cs cmp sub fstpt pop sub movabs xor add (bad) shr test mov rex.WRXB icebp rex.RXB rex.R int3 (bad) (bad) movabs int3 scas pop push mov fsts cmp add jle (bad) pushq loop (bad) jg sbb imul or cmpsl movl mov push pop xor pop jne mov mov repnz rex.WRX jp hlt sub add imul stos sbb mov hlt (bad) lahf insb sahf fldt lods mov (bad) mov cld test negb (bad) test callq cmpsl (bad) mov jne xchg and jmpq int xchg fs jmp (bad) sti mov out add shrl (bad) (bad) mov std mov cli mov fistpll jb and rol and loope mulb and std je push rex.RB stc fistp mov scas rex.WXB (bad) pushfq adc in movabs imul pushq sbb rex.WRB in sub fstl popq add xchg jle cli stc sub xchg (bad) rex.W in pop pushq lret or (bad) sub (bad) adc sub vdivsd imul sub xchg rex.RXB pop (bad) (bad) push jnp cmpsb pushq push iret adc rex.XB jp test sar fldenv jmpq add fbstp jg stc in lret pushq mov pop (bad) mov and ja movabs push add xor hlt rex.RB cmp add (bad) fsubrs movslq test rex.WRX mov (bad) (bad) xorl (bad) addb cmp rcrl mov ja mov repz sub mov gs mov lods pop in (bad) nop sub xchg jbe cwtl xchg pop pop add adc mov stos rex.B mov callq add stos rex.WX scas jno sbb mov add data16 mov in (bad) movslq sub loop pop or cltd pop sub (bad) mov jmp pushq fs cwtl rex.RB cmpsb push or rex.WRXB jne jo jbe push rolb pushq jrcxz test fidiv sahf sahf and rex.WRB gs ja push lods cltd outsb push in hlt xor and (bad) adc mov movsb rcll mov lock push mov stos push out or (bad) (bad) jnp vpmovusdb (bad) rex.WRX adc and mov lahf loopne pop lods xchg mov loop pop sub callq test (bad) rex.WX sbb (bad) adc fcmovnbe iret (bad) mov leaveq int3 rex.RB js jg mov mov scas rex.B sub push clts enterq or xchg loopne lahf cltd out xor pop xchg jp es (bad) ficomp adc stc sub test pop xlat (bad) jle mov pop out repnz movsl test out jb xor rex.W xchg and jle cmp xor (bad) (bad) fincstp subl (bad) repnz es fsubs adc (bad) movsb lods cmpsb rex.RX rex.RB cld pop (bad) rex.WX movslq cmp stos mov je sub pop mov fcompl xchg stc jae pop movabs test in (bad) stc mov movl (bad) imull in sub xor (bad) (bad) (bad) push mov (bad) movsl fild stos and sti ja xchg retq rolb ds fisubl rex.WRB pop mov cmpsb pushq cli jns cmp sub jrcxz fimull js pop push rex.WXB stc test movsl xchg push ds insl fistpll mov xchg jl add clc cmp outsb sahf movslq mov outsb gs xchg cmp movabs mov cmpsl sub pop gs test jmpw jp test icebp (bad) add outsb xlat stos sbb push (bad) (bad) push outsl sub pop rorb or lock (bad) and rex.WRXB rex.XB xorl (bad) cmpsb pushq rex.WRX mov mov fwait test mov lret xor imulb sbb jo (bad) loopne and cmp (bad) (bad) fsubp xlat cmp fwait test movabs leaveq mov cmp (bad) repnz rex.WR movabs shrl jnp movabs (bad) xchg retq pop fdivs imul shr and out rex.X xor (bad) xchg push andb in mulb stos (bad) rex.WRXB fstl adc mov rex push out movslq jns pop (bad) pop (bad) (bad) rex.WXB or cmp (bad) (bad) adc iret and mov (bad) (bad) sbb sbb sahf and xchg sbb pop andb nop xchg mov add sti rex.WR mov (bad) mov mov out sub pop push jae push nop add xchg add cmp in xchg push fs data16 sub in cli in retq rex.RB rex.XB rex.WX cmpsb adc rex.W sbb rex.RX (bad) mov push nop clc sbb rex.WR jg,pn xchg sti test push (bad) sub shlb movabs pop iret roll fs (bad) repnz movslq sbb push fidivr xor cmp adc cs cmpsb mov fcomps xlat (bad) mov (bad) iret in rex.RX (bad) or mov mov (bad) (bad) (bad) xchg add cmpsb pop js movsl rex.WRXB cmp adc push jl jle rex.WRX outsb negl pop fdivrp sbb jne test hlt sbb insb rex mov push lret movsl std (bad) or repnz mov sub mov lea test fnsave fimul pop (bad) (bad) fwait xchg push enterq jg mov mov and int3 xchg fildl pop (bad) jnp callq pop rclb and subl (bad) and repz (bad) push (bad) push enterq add xor fbld (bad) popfq (bad) adc push jl in xchg sub add pushq rex.WX (bad) xlat (bad) stos es sbb xor push fwait mov add sub movabs (bad) sarl xchg xorl xchg rex.WRB sub jge xor and (bad) xchg mov loopne mov pop cmpsb imul pop mov cld (bad) gs (bad) (bad) cmp gs cmpsl sahf and pushq mov xor loopne jge jne sbb mov divb add movslq cli mov or retq sarl (bad) (bad) movabs xchg and lret leaveq test icebp jp iret xchg (bad) rex.RX pop mov mov pop mov add jge (bad) jbe insb shrl jmpq fsubs push mov xor imul mov (bad) (bad) fs sbb sub movsl cmp xlat syscall push or (bad) (bad) ja rex.R rex.RXB in fsubs push mov or mov rex.WB es rex.WRB (bad) push pop retq sti adcb sahf cmp rex.RB mov push (bad) cmc jle test mov retq fisttpl push or imul movsb test movabs (bad) and rex.WX jno sub lret (bad) out and rex.R (bad) (bad) and movsl xor add callq rex.WRB push push out and stos xchg loop push add leaveq in scas mov imul cmp add leaveq pop xchg int3 in or out in jns jae (bad) stc rex.RB data16 mov jae cmp (bad) jmp shrl orl stos hlt rex.RB sub push push xchg movabs push mov mov ja (bad) mov and out pushfq int3 rex.RX xlat fistpl movabs rex.WXB (bad) std xor pop push adc in imul (bad) pop rex.WRB rex.R xor test mov (bad) test movslq out mov push lods mov cli add pop imul rex.RXB add (bad) sub mov rex.RX icebp xchg sub lahf jnp,pt xchg mov movsl pushq pop (bad) hlt push rex.WXB pop mov (bad) pop fmuls (bad) out adc jno mov adc rolb (bad) movabs rex.X or (bad) mov (bad) sbb adc pop fs retq jg (bad) cmpsl fsubr addr32 pushq fstl loop rex.WRXB cli jne pop jge mov pop std ss movsl loope nop pop rex.WRB sub adc cmp pop imul icebp mov cld rep xor sub pop mov test add movsb retq sbb or cmp (bad) cmp jbe movabs pop rcrl (bad) mov loope cs ja (bad) pop pop cmp push stos (bad) (bad) ss roll movsb pop gs pop insl xchg rex.WRX iret loope xchg pop out callq mov (bad) cmp fbld push int3 (bad) imul (bad) (bad) iret rex.WB repz movslq adc (bad) and ss nop cmpl cltd pop pop add mov rep jmpq rclb push pushq or movabs xlat xchg cmp jg test (bad) xchg rex.XB sbb (bad) mov fistpl jo push gs adc xchg insl sarb jrcxz clc out (bad) rex.RB rex.WRXB mov mov ficoml mov and mov (bad) mov pop fcoms xor (bad) xchg sbb jns mov pop pop or cs retq (bad) push push fadd add fisub in rex.RB (bad) xor movsl or cmpsb imul pushq rex.B lock pop fs scas in pop mov xchg sbb ficompl (bad) mov sub push jno hlt (bad) sbb addr32 mov jg scas adc sub movabs mov mov cmp rex.B sub jns ss (bad) sbb test (bad) rex.RX paddq idiv mov lock rex.WB cwtl (bad) test pushq mov xchg enterq sbb cli fdivrp sub jb fbld push outsl xor mov pushq (bad) movabs xor (bad) pop xchg and pop sub test push (bad) rex.RB xchg xor xor enterq sti xchg rex.WX sub xchg rex.RX sahf movslq out cmc (bad) and je (bad) in fsubs jmpq or jne and mov or xor sub in sub mov out sbb mov mov xor jge jg mov (bad) cld (bad) jne adc rex.WR and fild movabs pop stos movabs (bad) xchg insl loop rex.WRB lahf mov jbe fcomi jge or fwait or and movabs clc (bad) or jmp jp xor (bad) insl xchg bnd mov push rex.WB (bad) jl add mov stos rcl in mov pop int (bad) xor out mov jbe in in (bad) cmp lret cs cmc (bad) data16 (bad) fimull mov cmp and jmp jbe rorl movslq gs xchg push popfq xlat hlt sub mov mov (bad) mov (bad) (bad) (bad) adc nop xor sbb ja and movabs repz pop push mov scas (bad) rex.R (bad) shlb xchg mov cmc roll mov adc (bad) or pop sub jns push rolb (bad) rex (bad) icebp test sub repnz movabs ds fdivp and es add mov push movabs insb sub pop movsl push sbb fwait pop xchg sbb loop (bad) outsl sbb rex.WX (bad) mov loop pop pop scas pop in sub out in pushq pop fldenv mov ja xchg insb (bad) sbb sbb (bad) ds jb sahf clts mov movabs popfq cld in and cmp incb xchg shl insb outsb pushfq pop popfq pop in (bad) cmp (bad) in pop push xchg pop addb cwtl rex.WXB mov (bad) xor je and enterq es pop rex.RXB ja (bad) rex.WRB or mov mov or in pop fimull out mov rex.WRB lods or (bad) fucomi sub int outsl xor (bad) rex.RB scas mov xchg idivl rex.WX outsb push adc and rex.WRX jne sahf cmpl (bad) xchg cld pushq push xor and fsubp sub jge sub data16 (bad) cmpsb add sahf jg test mov stos (bad) pop rex outsb insl push ficoml movsl (bad) mov xchg and mov adc sub mov (bad) lahf pop lods imul (bad) rex.RX adcb sub or mov outsl retq test repz xor push retq mov sub sbb out cmc fisubrl movabs sub (bad) rex.X mov mov jae stos rex.R xchg (bad) (bad) movabs sbb jmp rolb or mov movsl jb (bad) cli fcomp xchg cmc mov pmaxsw testb (bad) sbb addb and stos loopne movabs callq cmp mov je xchg xchg adc jp stc ja sub addr32 push or (bad) leaveq mov mov pushfq clc out cs (bad) pop mov test mov jnp pop mov mov outsl pop pushfq fs lods sbb cltd pop sbb jle pushq loop cmp mov fbld movslq loop xchg fistpl ss rclb (bad) movabs fsts retq cmpsl fidivl jmp mov rex.WRB jrcxz mov stc negb lods mov mov gs jp xchg xor iret and and callq fbstp or xor jae cmp jns imul pop push rex.WXB movabs jne xor scas rex.WRXB (bad) stos (bad) (bad) test outsl cmp lret xchg rex.R pushq rex.WRB cs and rex.RXB rex.WXB xor jrcxz movabs (bad) lods push pushfq out xchg adc sbb test (bad) lret jae pop mov mov sbb rex.WRXB ss fdivs xor push pop add jl adc (bad) int3 adc (bad) add mov mov jnp mov (bad) mov xchg (bad) rex.WXB rex.WRB fldenv mov or push xchg cmpsb jbe or out in and pushfq icebp and loop subb or mov test fadd lahf hlt movabs popfq (bad) popfq mov mov (bad) or cld rex.WRX lret rex.RXB rex.RB rex.RB je and pop insb push callq and in sti sub ss std rol and or or and (bad) adc and xlat out rex.B je lock (bad) hlt (bad) adc lods (bad) ja scas push jrcxz imul enterq or lret addr32 add test movabs lods (bad) rex.WB and scas nop jg cli fnstenv sub insl mov lahf push xor repnz sub and rex.WB xchg or pop (bad) cmp pop vpcmpeqb unpcklps pop (bad) cmc insb sbb lret rolb scas shrb pop sub rex.XB sbb sbb (bad) in (bad) cmp push mov push cmpsb cmpsl push add pop (bad) adc pop callq (bad) lods std div jmpq pop sub adc pop rex.XB (bad) jo sbb out or stc xchg pop ficompl (bad) add (bad) retq rol (bad) retq mov ror mov (bad) ficomp insl mov jae hlt (bad) adcb xorl movabs mov add mov push nop jae lock push cmp (bad) mov loop lods rex.WXB add rex rex.RB rex.RXB xchg test xorb in (bad) clc loopne xchg fdivrs mov pop rex.WX incb out rex.R sub lods push jo and and mov fs adc cmc xchg outsl cmpsb fs jbe pop mov sysexit mov jrcxz test out mov out sub in int3 pop movsb (bad) rcl rex.WX rol jp insb add add xchg pop pop push cwtl (bad) int or cmp mov push push add mov pushq pop rex.X rex.R mov (bad) cs gs cmpsb jbe imull (bad) or jrcxz and adc jmpq (bad) xor and mov (bad) rex.XB cmp or stc shrb test movsl xchg mov fs jle rex.R rex.R mov testb sbb pop (bad) (bad) shr nop adc (bad) sbb (bad) adc jmp test fwait je cli pop lret xor (bad) loope fistp mov xor lods (bad) mov jbe add outsl test cmpsl mov repnz mov (bad) add jne int3 or test (bad) (bad) stos push fiaddl rex.WXB ss (bad) push sbb (bad) push movsb adc rex.XB mov not xchg cmp ds fnstsw or sbb (bad) (bad) xchg enterq int rex.W insb (bad) test mov mov rex.WRXB lahf fs movsl mov js test cmp lock (bad) pop (bad) push sbb rorl je iret (bad) xchg jge mov popfq test movslq test rex.W sbb movabs add enterq (bad) stc ja rex.WRB cmp (bad) (bad) icebp jbe rol jb mov imul stos (bad) push fstpt outsl cli movsb (bad) addr32 xor out jb mov movabs adc leaveq rex.WRB scas mov (bad) rex.WR mov sub adc sub cwtl jrcxz fstl xchg or sub callq rex.R (bad) cld (bad) mov xchg sbb mov and ss (bad) rex.WRX callq iret mov push movabs adc pop cmc (bad) jbe sbb hlt ss or (bad) add rex insl in cmp mov (bad) xchg (bad) jo push (bad) and xchg stos pop rex.W adc mov xlat sub retq (bad) add (bad) push in negb lahf outsl (bad) fldenv add ja imul push iret mov and push pop cmp mov stos cmp jb (bad) sub (bad) insb rex.WB xor retq out movsl rol fsubl out mov xor sub stos enterq int add cs (bad) xchg sar xor jg rorl (bad) mov rex.WRX js outsl in mov (bad) ss mov in cmp mov cmpsl pop lock pushfq cmpsb rclb mov (bad) xor gs fistpll icebp cltd fiaddl push in sbb xchg in sbb lahf jne incb push pop xor loope je test jmpq rcrl (bad) cwtl xchg adc mov movabs xlat mov sub rex.RB or jl data16 (bad) xor adc rex.WRB fnsave rcll ja sbb sahf jno movabs pushq js push movsl test pop (bad) pop xchg sbb pop sub sbb add mov jb (bad) xchg cmpl pop bswap rex.WRXB or push pop push and cmp (bad) movabs (bad) out repnz (bad) rcrl sarl (bad) in outsb movabs insl pop lods (bad) jb fsubrp outsb data16 outsl movsb es cld and stos gs outsb (bad) (bad) pushq in movabs movabs out xchg or (bad) rex.WR xchg push (bad) in lret cmp orl pushq add xchg pop outsl cmp retq stos adc ja rex.WRXB test (bad) mov or roll rex.RB sub loop jbe fnsave (bad) fmull jle push jb xchg rex.WRX pop and xor pop sub pop adc (bad) jle jne xchg ss pushq pushq test cld and cli xchg fmuls (bad) jmpq xchg adc rex.X cmp outsb movabs mov loope,pn (bad) sbb movsl (bad) xor push (bad) (bad) (bad) and pop sbb or pop adc in xchg jbe pop nop retq (bad) cld jns sub neg (bad) (bad) movsb pop pop (bad) xor mov sub in mov imul ja test pop mov rex.WRXB fidivrl rex.R rex xchg cmpsl sub mov adc pushfq lahf jle jrcxz (bad) pop mov (bad) cs or lret mov outsb mov xchg sti mov fs mov jle sbb (bad) clc (bad) movsl imul (bad) je xor (bad) and movabs out xchg (bad) in rex.RB xchg sbb shrb (bad) (bad) or (bad) jle jg and or int3 jge xor loope movslq mov cmp jle xchg mov (bad) sti xlat jnp repz gs mov rex.RX mov out mov (bad) lock mov iret retq pushq pop pushq addr32 pop pushfq mov movabs test fistl (bad) pop rex.WXB and divl popfq pop mov push cmpsb pop movabs rex.WXB rex.RXB lret mov pop jns addr32 mov movsl data16 fcoms cwtl retq pop movabs rcll (bad) nop or cmp iret jg adc and movabs movabs (bad) (bad) outsl sahf jrcxz rolb add xlat jle (bad) andl pop popfq push rex.WRXB xchg mov jge rex.WXB out add loop (bad) sbb int rex.WX stos int3 lods pushq mov cmpsb add rex.RXB lea (bad) pop and xorb rex.W jne mov imul rex.WR mov cmp idivb and sbb fsubr cmpsb rex.W sub test fdivs (bad) test pushq cmpsl addps (bad) jb xor callq jmpq xchg callq (bad) seto stos (bad) in sub movabs jmp imul enterq rex.WRB or cmp xchg adcl (bad) fildll jle xchg fs cltd push pop int stc ss callq mov (bad) jb pushq adc or fldt imul pop jb push (bad) xchg cmpsb movsl (bad) jle adc test pavgb push (bad) xor cmpsb js lods jno mov test fildll push adc and callq pop cwtl jb shrl or popq sbb retq pop push scas xchg clc callq (bad) sahf out mov scas mov pop mov xchg adc sub (bad) (bad) (bad) outsb sbb sub rex.WB fsubrs (bad) (bad) and sub lock jne pop (bad) cli add jno loope movabs pop out (bad) sub fstp rex.W rex.RX ds push stos fisubrl pop or add cmpl mov sub pop pop and pushq movsb fisttp (bad) addr32 pop mov xor (bad) cld sbb (bad) rcrb rex.WB add and nop gs retq pop pop cwtl sbb add cmp hlt sbb pop fmul adc sti mov and rex.WRX pop js outsl hlt test jmpq outsb (bad) cmp sbb rol add scas cmpsb clc push rcrl and mov movabs fwait es data16 (bad) adc cld pop push xchg xor add test cmp or test gs js pop mov rex.RXB ja jle and pop jrcxz fs lods sub or push (bad) push movsl push sti out sbb mov mulb xchg jae sahf (bad) push xchg mov cmp jne jg mov retq cmpsb xchg cwtl xchg mov std sbb in jns rex.WRXB (bad) out rex.W movsl in (bad) movsl jmpq lret (bad) (bad) add push (bad) and pushq jp rex.RX callq sub (bad) scas xor (bad) cwtl sbb sbb sub (bad) rex.RX stos out push insl pop hlt (bad) push mov lahf movabs outsb stos mov insb cmp xlat rcll pop pop sarb outsb repnz pop sub and (bad) (bad) out xchg sbb and sbb mov scas mov nop pop fsub rolb pop xchg xchg (bad) adc xchg repnz xor movabs out xor movabs or jae jno cmpsb fwait pop xchg fs xor in (bad) pop xchg rclb mov data16 (bad) pop addr32 xor loopne (bad) adc (bad) sti push iret sub sub repz jrcxz sbb testb addr32 fistl je (bad) push xchg icebp jmp fistpll (bad) rclb pop xchg fstpt movslq sub and or sti (bad) mov in push mov rex.WRX pushq roll movabs loopne mov and xchg out jbe int and out push hlt xor retq or pop xchg sbb (bad) or rex.XB in xor fildll push cmp movabs sbb add mov xchg je mov mov xchg in (bad) sbb pop (bad) pop xor pop adc sub movabs jnp nop pop andl lods jg cmp popfq xchg push (bad) rex.RX cli in and pop rorl mov ss es (bad) nop lret data16 mov and jle push xchg fist popq jrcxz fistpl scas cmpsb cmpsl (bad) movsl mov (bad) push xor decb sub jle mov test (bad) rex.R fldl and push adc gs jge rex.B cmpsb cmp mov push adc sub test (bad) loop (bad) jrcxz hlt xchg lret sbb mov movabs (bad) (bad) or js cmp std pop sarb out mov xchg repz sbb xchg push (bad) xlat jo rex.R std jns andb add (bad) fildl cmp adc fildll cmp cli pop (bad) rex.RB pushq ja xchg mov sbb mov scas and in (bad) xchg lret scas jne fidivrl jo (bad) mov lock rex.WXB sahf (bad) mov (bad) jae pop (bad) pushq (bad) and pushq rcll rex.W (bad) add js lods mov fistp mov outsb and test cmp push rex.XB (bad) callq movb mov add jb jo sub cmp jne jle roll adc (bad) and ficomp enterq psllw fdivs xchg (bad) push es sbb addr32 rex.WB or adc ja out mov (bad) and xchg push popq gs sub rolb repnz sub loop sbb rex.RB pop cltd in xchg xchg orb shl rex.WRB ja (bad) (bad) movabs mov fwait mov adc fs movabs (bad) in rex.B xchg mov fbld iret out xchg mov test jmpq (bad) test add in data16 in outsl jb (bad) rex.RXB rex.W repnz clc (bad) inc fs pop jge jbe xor orl pushq or xorb jmpq cmp addb jl lahf outsb je add ds (bad) adc or cmp sbb loope (bad) push (bad) rex.WX (bad) (bad) cltd xchg out cmp (bad) in jno rex.WXB cmpsb out pop sub sbb test (bad) movabs (bad) pop push rex.WX mov out xchg sarl cmpsb jmpq adc and cmc mov xor mov jrcxz loopne notb pushq (bad) (bad) jae (bad) (bad) add pop pop out adcb adc (bad) loopne or (bad) pop loop sbb pop leavew mov (bad) xor mov (bad) fs cltd (bad) jae movabs push rex.X cmp std xor iret enterq rex fildl imul cld lret or or mov add rex.RB cli sub rex.X rex.R jbe rex.WXB xor out xchg test (bad) fldcw movsl test rex.WRB (bad) repz cli xor rex.WB lods (bad) pop mov push (bad) push sti rex.RX xor loope jbe fild push push int add lret (bad) (bad) sbb movabs cmc sub out xor add jp pop jns sti cs fbld pop push addl fstps (bad) adc int3 outsb push cmc xchg mov pop cmp (bad) and sahf movabs sub mov xor rex mov (bad) xchg (bad) mov adc outsb add iret loope sbb xchg adc in pop in pop push pop scas xor jbe xchg pop xchg (bad) nop fxch int adc movsb stc adc xchg xlat (bad) nop mov imul ss sbb or callq movabs or mov lods xlat movslq or loop movsq mov nop push (bad) adc (bad) jle sub pop jge pop sbb pushfq rex.WRXB jne repnz (bad) xor addr32 mov out lret es xchg mov sub or or (bad) movabs icebp je cmpsb jmp pop iret xchg mov xor jmpq rex.WRXB (bad) fisttpll cmpsb imul add cmp cmc rex.RX rex.WRB sub sbb fwait rex.RXB movabs rex.RX fs retq pop nop xchg cmpsb jnp outsl pop movslq adc or pop mul and cwtl ja (bad) xchg rex.WRX rex.W movsb mov loop jle stos int3 rex.WRXB (bad) (bad) sarb (bad) (bad) pop rex movsl loop mov xchg in sbb (bad) lret (bad) and and (bad) imul adc ficompl outsb in pop popfq jmpq cmp outsl rorl fsub or add xchg callq jle je imul cli add cs add pop enterq test (bad) pop rolb cmpsl (bad) xchg and addb data16 mov (bad) mov (bad) xchg add hlt fwait ss cmp (bad) fdivrp js (bad) sbb cwtl test xlat test jne xchg hlt xchg sbb or (bad) sahf pushq outsl xor (bad) jmpq mov rex.B mov mov gs movslq rex.RX add mov rex.RXB icebp jrcxz add (bad) int3 rex.R rex.B rclb push test test pop rex.WRX push (bad) gs xchg pushq xor and pop retq es test xchg jmpq fwait xlat jns push fnsave mov (bad) cmp lret xchg andl (bad) xchg adc ja (bad) sub (bad) mov push rex.WRB leaveq mov testb cld xchg out int3 (bad) in xchg push retq add (bad) cmp push adc mov divl cmp in (bad) push movabs out push rex.RB sbb lods mov xchg push (bad) and mov int3 loop int3 nop (bad) ljmp mov sahf mov movslq (bad) rcll movsb cltd leaveq (bad) xor mov pop sbb rex.RB fidivl or rex.R lahf cmp enterq push adcb or sbb xchg mov push sbb rcrl (bad) lahf xor jns or and add pop xchg add rex.X insl rex.WRB rex.WB rex.X or cmp ficompl mov repnz mov add jo stos test xlat rex.WRXB or xchg fs clc cmp jo rex.WR pop setb (bad) imulb mull add insl (bad) loop in in (bad) jne pop mov shrl (bad) and pop (bad) pop and mov cltd pop (bad) test and sub (bad) and mov (bad) push xchg jbe sarb cltd jrcxz (bad) (bad) test sub jle int3 xor enterq addr32 push pushq mov sub test xchg push rex.W cmpsl imul pop loopne pop (bad) cwtl fldl iret fs and adc (bad) movabs and sbb sbb mov in jno je loop data16 rex.WRB add rex.WRB (bad) fiadd es nop sbb and rex.WRXB adc (bad) jge (bad) add push cmpsb xchg push (bad) fldt (bad) addl xor rex.WXB lods decb imul jb fbstp sub popq cltd stc adc jo mov (bad) rex.WX stc sbb fs fsts fbld lahf xchg pop add cmpl imull mov retq cli cmp (bad) sahf insl retq xchg nop or and stos add movabs (bad) outsb mov lret neg rex.WRXB in (bad) in je out scas add (bad) hlt add in sub mov pushfq cmp or push jne jae rex.WR mov ds imul add rex.XB jbe fs loop and icebp retq leaveq in cmp cmp retq sti int3 sub (bad) movslq xchg mov sbb sub sub sub xchg ja,pn mov pop add xchg or xchg mulb jle orl icebp (bad) pushq and (bad) repnz fs pop jge rex.W rex.RB rex.WXB push test xor mov xorb rex.WX out movabs rex.WR movabs rex.W cli loopne rcrb mov sub and jmpq jmp int3 mov repz sbb push jmp test mov mov jno jae mov (bad) (bad) in icebp ds enterq sub jns (bad) xchg or jae jno adc adcl cmp xor mov fisub xlat sbb push or mov fcmove addr32 data16 xchg add sub adc jle rex.WR pushq movslq frstor cmpsl rex.W data16 push retq lret rex.WB retq sub (bad) sub mov fisttpl (bad) out repz addl stc push rex.RX or jb (bad) (bad) sub rex.W pop insl movslq mov (bad) pop std jmp mov in cmpsb fs pop push int ss cmp imul (bad) in mov jo sub in cmp push push mov mov int movabs jnp pushq (bad) lret test (bad) cli popfq gs lahf lods cltd xchg xchg mov ja add pop adc xchg rex.WX (bad) pop mov adc data16 pop fnsave and xchg sbb mov (bad) movabs jb xor (bad) cmp and xor sub ror je and insb pop (bad) movabs sub test adc rorl (bad) and mov clc push rex.WR popfq mov xor lea rex.RB in (bad) jmpq rex.RX pop lods jne data16 mov jo xchg xor movabs fnstenv xchg lret mov xlat jge (bad) leaveq sbb pop fwait sbb rex.X sub jo orl retq sarb rex cmpsb insb mov mov mov stos add and mov mov imul xor mov bswap jle add cmp cwtl lock pop loop jbe enterq jp cmpsb sub pop in sbb std sbb in jmpq pop rex.WRX in nop sbb cld imul data16 push add (bad) stc pushq pop mov data16 (bad) (bad) xchg movslq pop scas xchg or rex.XB rex.XB pop and push rex.W pop mov push rex.WX pop (bad) movsl push rclb rex.WRXB rex.RX rex.R jmpq push pop movb (bad) push test adc adc (bad) sbb sbb or mov (bad) in (bad) fcmovbe movabs ja sbb sbb push retq rolb rex.XB sub add lods rex.XB (bad) xchg pop fucomi or cmc rex.WX movslq jns mov sub mov lret xchg adc movabs sbb mov (bad) rex.RX je loopne xor pop push rex.WR mov push movabs std out mov test push pop jno gs js xor outsl imulb pop pop flds cmp mov and sbb imul rex.WRB ds std xchg cld (bad) jne xchg (bad) xchg jl mov cmpsb mov pop mov pop xor scas jb insb scas or movslq cli adc retq subb rex.WX enterq mov idivb insb xchg ja (bad) cmc (bad) xchg mulb sub stc in loopne push lods rex (bad) rex.WRB and test rex.XB cmp cmpsb icebp mov out jmp jge sbb sbb sbb pop rcr mov mov ja fldcw rex.WRXB loope add (bad) jp rex.XB xchg scas mov push insl and and imul lods add rex.WR pop fsubp std (bad) sbbb nop push and fs fdivs mov and adc add rex.WRXB sub jbe retq mov mov mov mov imul retq cli pop cmc es mov rex.WRX adc pop pop idivb movabs out add cmpl pop std jne (bad) retq or mov test mov cmc jae pop xor out xlat sbb xchg pop outsl addr32 (bad) mov xchg out sbb sbb repz movabs pop hlt xor outsb jrcxz (bad) rclb mov rex.WXB add pop outsl sbb (bad) movabs rex inc xor retq adc mov decb movabs cmpsb data16 sbb in lret sbb xchg rex.W jle add sbb cmp sbb push sub rex.RX push mov cmc xchg cmp jrcxz pop (bad) mov cwtl (bad) sbb and push jb xchg push or cmpsb (bad) popfq lods (bad) sbb or sub movslq xlat cwtl jmpq mov insl mov lods and lahf lods add (bad) fdivrs or (bad) mov push add (bad) je (bad) rex.WR cli push or sarb add (bad) lret sub push xchg (bad) mov int shlb push jl iret rex.WX rex.WRX jrcxz jle xchg mov movsb rex.WRB rex.XB and loop xchg add adc lea cmp xor in sar cmpsb pop cmc (bad) (bad) sbb mov cmp retq cmp lods jmpq jp clc popfq andb add (bad) out mov rex.RXB (bad) add icebp xchg jle sub iret and clc push fildll push rex.R (bad) rex.RB repnz mov je loope (bad) xchg (bad) xor adc enterq sub lret pop xchg xchg (bad) in in scas rex.WR cmp data16 retq (bad) stos fstl sbb (bad) movabs enterq frstor (bad) (bad) (bad) push push repz add (bad) fs (bad) sbb jp (bad) add ja movabs xchg cmp jl outsb push jp lock ss cli jb js push fbstp adc mov mov push iret insb (bad) mov test cmp adc sbbl push rex.WRB repz lret scas sub pop (bad) cmp xchg (bad) rex.WRXB add mov insl sub mov retq (bad) clc sub pushq xor stos or xor out rex.X fsubrl push adc adc out and xlat sub pop jg jno lahf push iret rex.X cli cmp frstpm(287 xor xchg (bad) loop (bad) mov pop pop fs cmp imul nop repnz fsts lret pop cld xor retq sbb rex.RX test movabs test movsb (bad) jle mov adc adc callq cmpb insl jmp movsl rex.WRXB (bad) rex.RXB repnz (bad) pop cwtl mov fwait pop fldl test loope rex.W lea in pop (bad) rorl cli pop mov sub (bad) icebp xchg and (bad) test (bad) (bad) jp xor pop (bad) (bad) sbb sub lret jae and jmpq pop or movabs pop push jrcxz adc (bad) lret pop sti cmp rex.XB mov add jl (bad) jmp movsl mov fadds (bad) cmp rex.WX rex.RX rex.RB data16 fldl rex.WXB pop jbe xor xchg movsb sub pop xlat div and push mov mov push mov cmpsb fs add incl data16 rex.WRXB pop in rex.RXB data16 mov movabs xor fwait jrcxz,pn cmc data16 imul or shlb rex.WXB (bad) shrl and mov in (bad) sub (bad) xchg jrcxz push mov rex.WRB out or jno pop and sbb cmp fsubl rex.WRX sub pop mov jle xchg add (bad) jb psraw popfq jl pop pushfq and fist cmp callq (bad) mov (bad) (bad) out rex.WX rex leaveq mov xor mov (bad) enterq push xchg hlt pop sub pop iret xchg cmpsb mov fisub pop fstpt (bad) xor cmpsb es or and rex.WRB movabs rcrb sub xchg (bad) js loop nop adc sbb xchg adc (bad) (bad) push data16 mov cmp jae rex.B iret pop (bad) (bad) xchg ficoml xchg mov mov adc adc movabs fs pushfq sub hlt xchg (bad) rex.WRB mov nop cmpl (bad) movslq popfq sbb (bad) sbb or (bad) (bad) repnz pop rex.X pop popfq (bad) push (bad) stos sbb push (bad) xchg fwait mov rex.XB pushq (bad) mov jo sbb test jmpq jmpq mov rex.WXB rex hlt (bad) pop add stos test xchg movabs mov gs movabs movabs test sub (bad) or gs cltd cmpsb xchg out adc mov fwait sbb pop (bad) (bad) sub adc in fist (bad) std mov mov sub and sbb pop xor and jbe (bad) push xor gs loope lods divb int3 mov sbb cmpsl in fidivr pop js lods sub movabs in or sahf mov add movsl and jae or cmp rex.XB lahf adc and sbb cli icebp xor push and and pop insl rex.RX gs pop pop push rex.WR rex.X adcb mov rex.RB rex.WRXB mov insl (bad) cmp pop and (bad) mov (bad) pop sbb int mov and pop adc (bad) or pop stos pop pop add data16 pop adc rol or lret mov in xchg rex.WX jg xor and shrb sub retq (bad) sbb leaveq data16 rex.RB rex.XB (bad) or mov (bad) (bad) rex.B movabs stos sbb jrcxz loop (bad) lret movabs movabs mov mov (bad) outsl jle sbb xchg (bad) mov xchg mov gs and rex.WRXB (bad) movsb rex.W (bad) stc xor pop mov iret rex.WRX cmpsl sahf movabs adc jo stos cmpsl pop sbb pop jge sub push jno sub out jne add jmp mov pop adc jge in loop pop mov cltd (bad) fwait (bad) xor (bad) pop fisubrl jbe jle adc insl in jg jrcxz outsb outsl cmp (bad) mov pop xchg pop mov stc sub in outsb pop (bad) rex.WR rex.WB outsl (bad) movabs test js add jbe xlat (bad) push sbb leaveq rex.WXB loopne adc (bad) outsl pop stos pop je cmpsl rex.WRB fild stc xchg mov sbb out out mov fwait or mov iret movabs and rex.WXB mov js mov or lods mov sub test (bad) rex.X lods outsl pop insb or leaveq adc rex.WRB (bad) cmp (bad) jae jb sti xor mov (bad) xlat movslq sbb (bad) (bad) xlat add (bad) out or int lret mov or out stos mov es in (bad) imul (bad) cmp sbb sbb retq fisttp add ds mov out jrcxz nop (bad) sub rex.WXB sbb out jge add mov push pop in fcoms data16 fwait jge movslq (bad) rex.X rcll sbb mov pushq rex mov xchg add xor mov loop (bad) stos rex.RX jg mov in rex.WXB pushq roll (bad) out fsubrl and or jp out fcoms sub flds (bad) cmp (bad) rex.RX mov imul mov in (bad) imul push mov (bad) jne (bad) (bad) adc xchg mov (bad) rex.RB int jmpq lock andl in pop ja jno lret cltd pop adc cli js rex.WRX add mov icebp frstor (bad) cmp (bad) rex.X or ds sub hlt jmp (bad) mov jl mov pop int int pop mov std (bad) fiadd lea movsl fstpt sub stos jle mov retq add mov gs mov fistpll mov rex.WX rex.W rcrl jbe mov sti sub add inc rex pop pop add pop cmp lods movsb loopne (bad) (bad) xchg xchg pop movsb rex.RB fisubl xor fiadd fwait jp xchg mov rex.WRB flds jmp cmp mov pushq rex.W stos ja and (bad) mov or lods out pop rex.WB fwait cmp fidivl sbb pushq sub mov (bad) mov loopne mov jge mov movslq adc test pop add rex.RXB (bad) cmp stos pop mov (bad) (bad) out push adc jrcxz cld test add xlat mov adc add sbb (bad) lock js pop loopne adc rex.XB mov movabs (bad) mov xchg retq mov in frstor adc jle (bad) add xor (bad) fistpl add jbe scas pop insb movsl and pop xor data16 jmpq shll adc xchg in mov (bad) (bad) add imul insl imul cmc sahf pop std pushfq jno lods fisttpll cmp callq data16 sub faddl je out (bad) jle icebp scas in and (bad) xchg (bad) add cs xchg rex.WRXB add jle,pt mov jb xor pop jbe pop rex.WRB insb jle loop xor out sub rex.RB (bad) fmuls (bad) xchg insl rex.WR repnz jnp fwait pop outsl repz jle outsb push mov pushfq (bad) cmp in jrcxz test lea sub add mov movabs ds mov rex.B or jb fnclex imul sub mov js lock adc or incb in repz outsb rex.RXB lods add rex.XB push test mov xchg add xchg (bad) (bad) out loop (bad) cmpsb sbb lret (bad) rex.WX (bad) (bad) cmpsl fildl (bad) pop test movabs xor adc sbb (bad) iret pop and (bad) rex.WRX rex.B rex.WXB fdivl sbb cmp callq (bad) and jmp push stc lret (bad) cmc pushq sbb or xor pop mov mov jno imul jge add or ds jbe es mov rex.RB pushq (bad) pop sbb (bad) movabs fdivr sub loop and pop mov (bad) mov or (bad) clc push (bad) or rex.WX repz not rcrb jb loop nop mov pop pop or adc ja sbb mov outsb popfq sbb addr32 (bad) rex.WR stos cmpsb insb xlat pop shl fidiv adc and std xchg in loope pop xor ud2 pushq push test and (bad) sub outsb cmp jb in add rex.XB (bad) (bad) out idivb sbb xlat iret cmc cmp movsb fwait sbb push jbe test (bad) lret retq movslq fidivr adc int3 int jp jrcxz in jno pop in outsb push rex.WB in and mov leaveq fld loope (bad) mov lahf icebp (bad) pop sub movaps mov rex.RB rep push (bad) adc jge add jbe movsb fs idiv sub test rex.WRX rcll outsb jae jrcxz jle mov and mov jbe (bad) fs jo push rcl jg lret add mov shlb rex.RX movabs iret out pushfq xor jmp push adc (bad) push hlt add hlt xchg imul jo mov ds rex.WX addr32 loopne lods or (bad) push or (bad) out cmp jnp mov (bad) (bad) adc leaveq push sub jo jle xchg imul ds adc mov xor xchg lods sub jne add js fisub push pop xor or enterq sub push push mov cmp mov out push add mov cmp adcl shl add push ja in fsubs rex.WR scas (bad) push lret (bad) mov pop (bad) rex.RX retq (bad) movabs sub xor pop adc mov or mov (bad) fsts rex.WXB rex.B mov test or sti (bad) xchg insb cmp xchg or outsb js adc out es lock adc push xor retq sub addl fwait mov retq adc cmpsb and outsl fimul add pop and and je rex.WB clc (bad) mov fisttp fstpl stc push jrcxz rex.WX and frstor mov icebp loop jns out rex.RB jge int3 pop cld rex.WRX pop rex.WR mov mov (bad) mov jne scas push jle jnp iret pop pop loope addr32 retq (bad) js in pop sbb jnp rex.X add sub pop jrcxz cmp lea fstpl or out mov imul pushfq pop fildl pop (bad) rex.R ds shrb xrelease xchg pop pop jb push (bad) in cwtl std (bad) xor rex.WRB in leaveq (bad) fwait rcl negb popfq retq (bad) rex.RXB adc orb mov mov or or mov cmp test pop retq sub clc out (bad) cmp rex.RXB mov pop fdivrl cltd or mov js (bad) mov cmpsb sti mov (bad) adc jne mov mov cld rex.WRB pop (bad) stos mov or adc add adc xchg push rex.XB fcompl and rex.X xor rex.X xchg (bad) lods out fldt je lret lea sahf rex.RX (bad) rex.B and sub fstps lods xor es push xor movabs loope mov xchg je adc movabs lea sbb data16 and jg in mov pop sbb cmpsb sbb (bad) xor sbb add sbb jne rolb sbb stos xor xchg repz int3 insl rcrl xorl adc rex.X test data16 jo cltd mov gs movabs add jg loop sub jle insb mov add stos rex.RXB sbb mov iret mov or adc int je jnp mov leaveq push jl lock cmpsl xor adc rex.RB loop,pt (bad) loop rex.WRXB push (bad) loop mov sbb testb and (bad) out mov jl out es adc pushq or test incb (bad) mov and fistpl cmpsb sub in notl mov rorb jp mov cmp pop (bad) xchg mov add pop (bad) pop pop mov mov fwait ds sbb cwtl and (bad) stc pop adc repnz ss insb sahf and rcrb pop nop pop rorl out in cmp jge cmc mov (bad) and (bad) roll (bad) nop pop xchg movslq pop mov stc cmp rex.XB (bad) mov jae and fsubrs ja jmp xchg insb mov (bad) (bad) (bad) or (bad) fwait (bad) cli xor jle (bad) adc retq test rclb hlt push rex.RB xchg rex.R jge xor out lret (bad) leaveq mov or repz andb mov mov xor mov pop fcmovne cmpsb (bad) add movsl xchg scas repz pop or test mov rex.RB (bad) in jb jrcxz pop (bad) testl outsl xchg (bad) adc sub rex.WRB movabs (bad) in in cmp (bad) adc test rex.RXB pop mov lods (bad) jne insl negb insl jmp psrad and shrb sti cld xor test movsl rex.RXB out push lock mov (bad) fimul fldl outsb cmp imul loopne pop xor lahf or jmpq add (bad) out and jrcxz rex.WRB rex.RXB rex.WX sub pop fwait (bad) mov callq in (bad) sub xchg outsl ljmp (bad) mov mov outsb lock rorq (bad) hlt mov add push outsb jmpq rex.X in sub fcoml imul xchg sahf pop (bad) mov sahf jg movslq pop rcll movabs mov (bad) sub (bad) insl test stc fidiv pop outsl or in jno mov xchg xlat cmp loope or ficompl stc pop lretq (bad) xor jmpq (bad) xor xor in je or test cwtl pop enterq mov rolb (bad) sbb rex.B fisubl lods imul incb xchg cmc cmpsb push cmp mov test imul movslq outsb scas cli or jae rclb rex.RB clc or lret cmp andb test add sub push callq andl mov xchg jnp enterq add jnp stos scas pop movsb loope add xchg out fidivr outsl lods sub imul fldl or rex.WXB (bad) xor xor (bad) fisub cmp or rex.WRX mov fidiv negb jae lods cmp retq leaveq retq retq jle push and pop outsb (bad) jle jae (bad) rex.WR addr32 mov (bad) cmc je add add (bad) pop cs pop jg in sahf test or add mov (bad) sub (bad) add (bad) rex.WRB rex.R jno mov push rex.WR jo scas cmpsb and push mov add xorl movabs int (bad) (bad) cltd gs divl and mov fstl cmpsb sub loopne rex.RB outsb cmp movabs add sti sbb imul test in pop movabs movabs jbe mov cmp imul add orl pop (bad) or mov cmp repz lret out (bad) push (bad) or pop stos sub jle (bad) cmp pop lods add add hlt repnz gs (bad) cmp sbb jne (bad) pop stos rcl loopne (bad) mov push test sbb and imul jrcxz repnz add roll (bad) movb scas jnp sbb pop test add jns hlt out mov movabs loop jbe sub sbb cmp cmp xchg push mov fist mov (bad) pushq xchg int add movsl jno mov out pop callq movabs push jle and add in mov int3 push in movabs fidivrl add jb mov sbb ljmp lea adc pop (bad) retq xor xchg je js xor pushq rex.RX fcmovnu pop (bad) rex.XB rex.WR pop rorb mov loop pop sub mov rcl stc ja rex.WXB or bnd movsb (bad) fwait pop hlt jmp sbb rex.W jle imulb data16 (bad) and or pop sub (bad) mov (bad) in (bad) cld (bad) fcompl sub mov xor sbb cmp test data16 movsb rex.WRX cmp mov ss rorl retq cmpsb pop xlat (bad) sbb pop in (bad) fildl mov pop pop (bad) (bad) test movsb rex.X in outsb test xor add add int3 jae (bad) and addr32 mov idiv mov movsb jne adc push and sub insl mov movabs rex.XB pushq or out lods rex.RB jae (bad) (bad) pop mov in out or cmpsb mov mov mov pop xorl or add cmpsb jg gs pushq and or mov mov stos andl repnz retq (bad) xor (bad) push rcr je lock hlt xchg rex.RX sub enterq (bad) (bad) xlat push xor xchg mov cmp out sbb incb xchg rex.R jb xor pop rolb addl repnz mov xchg loopne adc fxch adc xchg outsb rex.WRX mov push xchg ds push imul movabs movabs loop pop (bad) ja lea in mov mov mov nop lock mov loopne hlt fstpl jmpq and fsubs jrcxz nop movabs movb xchg push (bad) loope mov out adc jno movsb rex.WRB mov (bad) mov jbe (bad) xor clc rex.RX xchg int loop lret (bad) adc stos rex.B rcrl or mov push cmc rclb (bad) sbb (bad) (bad) add movabs sahf pop jmp sub pop notl repnz je and pushq push sahf pop shrb pop rorl incb clc cmp push (bad) mov (bad) mov mulb js adc pushq rex.WB cmpb mov (bad) lret rex.RXB jp or (bad) sahf sub cmp (bad) lcall pushq jae (bad) pop and or in pop rex.X rex.WRB test sub rex.WRX loope xchg or movslq std mov mov mov (bad) mov or mov pop cmpl mov out (bad) fidivrl movabs pop and loope push pop sub (bad) test fcmovbe (bad) jnp pushq (bad) xor insl movsl pop fisubl xchg rex.RB rex.X movabs adc rex.WRXB jrcxz mov callq out fstpl jne cmpsb rex.B sbb and sub rex.X gs push int3 jbe cld testb popfq pop fmuls and mov xchg addr32 xchg and loopne push adc ror mov and repz push pop (bad) mov pushq rex.WRX rex.WRXB fadd (bad) cmp mov in int3 adc xchg mov data16 xor xchg push int vpcmpuq and pop scas jno cmpsb xor jbe (bad) iret (bad) rex.WX or leaveq pop pop lret or rorl imulb sbb ja mov add pop divl and and add sbbl xor sbb xchg jbe cmp sahf (bad) (bad) insl fsubl sbb cvtdq2ps add (bad) (bad) (bad) int jl (bad) push cmp rex.R rex.WRX push rex.WX lock jle (bad) mov (bad) pop cld pop and adc popfw in push or rex.WR movabs (bad) nop rex.R rex.XB xor mov xchg in insb mov outsb repnz mov pushq sti rex.RXB rex.RB sub lock imul cmp movabs rcl cmpsb jbe fistpll jp or sbb cmp jl add adc push mov xchg repz cmpsb jl rex.WXB xchg rex.WRB pop (bad) adc test xchg or xchg cmc xchg mov adc stc sub xchg ss sub loop mov cmc (bad) (bad) out out xlat vpaddsb rex.W movabs (bad) imul out (bad) xchg callq pushfq cltd add (bad) rex lea fcoml or pop (bad) movsb (bad) push pop pop (bad) or adc addr32 (bad) pop ds adc xor xor jle test incl insb add jbe adc ss rex.RX imul pop adc cmp (bad) loop xchg pop in pushq push pop add rex.WXB lods (bad) sub xchg jg mov pop movsl cld mov cmp loop adc push shll mov and adc cld pop mov mov rex.RB (bad) callq (bad) add mov push jg lods cmp leaveq mov jge sbb je decl mov and (bad) lret callq movabs sub cmp (bad) (bad) mov shlb popfq (bad) shld pop int3 cmp movabs pop mov pushfq xchg push rex.XB pop add sub out jnp in outsb mov xor test jl (bad) test stos gs fdivrp stos rcll pop pushfq rex.WRB rex.WR adc cmp add jmp mov cmpl rex.WXB and fmull xchg popfq jae or jnp jae xlat rex.WRX adc movslq (bad) jne or rex.WRX data16 enterq (bad) insb pushq (bad) movabs scas rcll rol (bad) xchg addb cmp xlat push (bad) sar cmp movsb mov or mov rex.B jns std xor push idivl loopne lock sub jae and pop hlt je rex.RXB scas and (bad) sahf nop movsb retq add rolb (bad) js push push cmpsb sbb xchg mov rex.WRXB pop jno (bad) (bad) rex.XB fldl (bad) rex.RXB (bad) (bad) or xchg xchg add mov sub rex.R rex.WB data16 or (bad) loope repz mov cmp xchg xchg (bad) test (bad) in jmp rcll (bad) add loopne cmpsl sub (bad) jne push sbb (bad) push rclb iret adc or pop mov push clc not sub pop fsubl rex.WRX rex.WR jnp movsl loopne xchg rex.RXB (bad) jl out jl rex.W or mov movabs sub rex.RXB or (bad) xlat add subl outsb sub mov add push pop rex.WXB and jno (bad) loop or xor stos cmpsb insl rcrl xchg pop (bad) or std sub shrl xor sub in (bad) and imul rex.WRB enterq adc test test in pop (bad) stos movabs cmpsl sub cwtl xchg sbb push push int movabs ja push pop icebp pop (bad) (bad) (bad) (bad) sahf mov xchg cmp ffreep rex.X cmp pop pop test xor loopne pop in xchg rex.RB sub out jle addr32 jl cmp (bad) rex.WRB rcrl xchg iret adc test sarl decb in adc (bad) jae rex.X pop mov stc fisub (bad) repnz repz jns mov scas rex.WX xor cmpsb rex.WRXB xor add rex.W jne mov xchg (bad) (bad) fdivrl retq stos fidivl mov xchg cmp js jns sbb pop (bad) pop pushq adc int3 and xchg adc and jb repnz rex.RX rex.WXB mov (bad) ficompl gs (bad) mov push cmc cld and sub xor mov mov pop repz or lods jmp xor mov cli out jo sar mov or (bad) xor sbb rex.WXB mov cld xchg xchg pushq cmp pushfq insl adc xor pushq pop (bad) mov lea mov xor popfq rex.XB push cmp js rcrb jnp mov and movlps lahf pop rex.B push rcrl rex.X cmp add movslq lea out cmp clc rex.WX loope mov mov xchg xchg and (bad) push xchg movsb cwtd adc xchg adc fs fistp xchg loop (bad) xor and sub cmp loop (bad) lea in in pop xchg rex.WRX int3 cmp rex.RX pop pop fsts pop lods pushq ror mov out popfq clc sbb pop push xadd or xor jmp (bad) scas outsl pop movabs mov and sbb je,pt jne jae movsl mov jrcxz (bad) insb mov (bad) mov xchg xor ss rex.WXB xchg sub add push fdivr rex.WX insl int3 mov (bad) rcrb jae pop jmpq rex.WRB push adc mov jo xchg pop (bad) nop in test pop rex.XB (bad) fcmovb rex.W add xchg cltd fnstsw scas xor and xchg fisub (bad) loop mov sbb lret rex.WR mov rcrb xorl and cmp loope add and retq or fwait int lcall (bad) repnz (bad) movabs sbb int adc callq and (bad) movabs sbb in cmpsb stc lods (bad) test xlat test gs cltd leaveq mov mov sbb int3 xchg pop mov sub push test movsb rex.WR pop mov sbb (bad) loopne push int3 rex.WXB jmp test pushq movabs mov and sarb jns ja insl lahf movslq pop callq pushq movabs (bad) stc mov jbe cmpsl test cmp and sbb sbb fistp push out (bad) cli test (bad) rex.WXB movabs sub test xchg sbb adc (bad) jmpq imul loopne cmp movabs js sbb (bad) xor pushfq test (bad) and mov (bad) lods push fwait (bad) jg int xlat mov adc outsb jle shl sbb or push add sbb repnz mov mov mov (bad) shrl xchg sub movabs (bad) (bad) loope and je xchg mov outsb out imul retq push xlat stos (bad) push mov nop pop jno (bad) sbb xchg test movsl pop cmp pop mov int push sub es pop insl mov mov mov rex.R cmc (bad) movsl cmpsb xlat mov xchg movabs mov adc out mov ja (bad) mov sbb lods in pop nop test stos popfq xchg (bad) (bad) mov or sti (bad) xor (bad) fs add int negb push std insl and adc xor movabs movabs add xor test add rex.X or (bad) (bad) xchg rex.RB xor push cmp movslq imul rcrl xor movsb cmpsl movsl (bad) (bad) add jp jmpq add adc (bad) rorb test rex.RX mov mov add pop mov pop mov push jmpq (bad) xchg pushq loope outsl add or sub cmc repnz sub rex.RB cmp xchg (bad) cmp subl push xchg pop insl mov pushq (bad) cmp movsl sub jae cmpsb or js repnz ds mov loopne cmpl sbb movsb gs fisub sti shrb scas xchg roll add and fisubl pushq or jbe mov rex.X cli fsubs and (bad) (bad) (bad) mov (bad) xor jmpq (bad) cmp (bad) in ss rex.WR jnp xor fidiv rex.XB or mov rex.WRB rex.WR jno in sub sbb rex.WB jp (bad) sahf repnz mov pop xor lods in sbb cltd adc rex.WX (bad) clc pop mov or pop sub stos shlb jg cmpsb mov movslq xlat push sbb cmp stos pushfq xor sbb (bad) sub icebp xchg lods jae xor clc or (bad) push cmpsl adc lahf mov loopne pushq push test movsb gs movsl xchg pop sti jle imul xchg sub mov rex.XB sub cmp mov cmp or cmp test jne (bad) mov mov and or sbb scas fisub add (bad) movabs cmp repz mov sub cmp cli cld pop (bad) jnp (bad) sub cmp pushq je lock pop gs cmp rex.RX lret (bad) stc pushq (bad) jo addr32 sub mov rex.WX int (bad) nop rolb or mov (bad) vdivpd out cmc (bad) leaveq rex.X cmpl mov (bad) push and callq and sbbb sub pop mov push jnp mov cmp cmp cmc mov mov pop lods cli pop fstp sbb int3 (bad) push add xor mov mov (bad) pop pop mov pop adc stos je sub rex.X nop int rex.R adc rex sbb leaveq cmp sets stos jle (bad) push rolb (bad) adc mov mov lahf test pop movabs adc movabs (bad) repnz or mov (bad) outsl andl push mov divb pop movabs es add (bad) xchg fs sbb stos sbb ja fisubr mov (bad) es es idivl (bad) movsb mov fisttpl iret sar mov rolb movabs fcompl idivl (bad) fiadd mov push sub mov adc push mov add rex.WR movabs rex.WRXB add (bad) insb (bad) imul es xchg mov mov rex.R js (bad) xchg rex.WR mov movsb out rorl and data16 (bad) subb mov cltd data16 add gs scas sbb nop lret push and movabs cmp imul lods rex.WB adc in pushq lahf lret adc ja mov out repnz rex.B mov sub loope (bad) (bad) test (bad) or outsb xor imul sub in mov or mov cli mov in (bad) movabs fadd jbe mov gs pushq or jge popfq in mov out rex movsl cmp (bad) add mov cmpsb pop loope sbb movabs imul rorl mov fidivrl push movsl sub (bad) or push mov and test out and (bad) jnp xchg movabs movabs nop ja (bad) out jo fadds pushfq push jno xchg adc pop (bad) scas (bad) mov mov scas fs mov xchg pop (bad) imul cmp out push andb mov out fistpll push data16 stos mov xor fcmovnu or js (bad) sti add jae jbe fs stos mov (bad) mov (bad) push fwait outsl mov ds fucomp xchg (bad) sbb jns (bad) cmc (bad) and sub xor rcrl movsb mov movabs out lods in mov rex.WRB rex.X jp test mov (bad) lret jnp jae cli jae add repnz rorl mov push outsl fistpll (bad) test out sahf xchg pop add rex sub loop sub shlb int or in mov out sbb fs popq rcll xchg rex and (bad) lahf push or cmp cmp movabs and clc sbb stos addr32 cld (bad) (bad) sub fwait jo mov (bad) (bad) xchg cmp xor in fs xchg pop (bad) cwtl sbb stos pop xchg pop add cmc sub pop lret retq (bad) int insb pop adcl cmpsb fisttpl rex.WRB and cmp (bad) rex.WX pop jl je fs adc pushq movsb pop pop popfq jns (bad) (bad) mov (bad) pop adc loop and leaveq ds and xchg push xchg rex.R divb movabs mov xchg cmp roll (bad) and insb (bad) and pop rclb rorb adc lcall (bad) cmpsl insb xchg fiaddl mov mov movabs add (bad) push xchg test (bad) mov rex.RX in xor xchg (bad) mov (bad) repz addr32 data16 rex.WRXB ja jrcxz mov xor mov sub (bad) (bad) xor stos sbb jne (bad) gs (bad) insl mov mov callq mov sbb imul xor (bad) mov push fnsave test outsl mov test pop sub sbb jno es repnz pop (bad) loop xlat rex.WRB pop add xor sarl pop or jge pop rcll jmpq (bad) xchg xchg rex.RB pop cmp je loopne jl scas icebp sub (bad) rex.W divb loope (bad) sbb lods fst sbb rex.WX pop fs out movslq loopne (bad) nop push mov pop fisttp (bad) test pop jne loope pop xchg xchg (bad) incl roll mov stos rex.RX lods (bad) add callq mov out xor repz movabs add sub stc ds lahf movabs movabs xor in sahf icebp (bad) (bad) xchg xor movabs pop (bad) jae pushq fxam sbb rex.WRXB cmc push in pushq add icebp sub mov cmp jbe cwtl add (bad) fcmovbe cmpsb rex.WRX pop (bad) jno int xchg addr32 outsl icebp movabs insb pop imul cltd out pushq pop enterq loope pop (bad) pop (bad) jnp adcl data16 mov loopne sbb cmp fs jb (bad) and xchg rex.WRX and sbb mov outsl data16 faddp rex.WX or imul sub xchg lods int3 push pop repnz pop xchg pushfq add xor movsb add pop sarl jle xor fsubrs movsl scas movabs jne enterq adc xor (bad) jno sub pop test mov movslq cmp movsb rex.WXB jns (bad) rex.RX rex.WB rex.WRX mov (bad) mov (bad) or cmc (bad) pushq retq adc movabs movsl cwtl push pushfq packsswb loopne xchg cmpsl sahf pop adc movabs (bad) fsubrs std pop push rex.W rex.RXB cmpsb add rex (bad) and pop push cld cmp divb outsb in jmp (bad) and in push cmpsb mov rex.WR pushq (bad) pop loop xchg out (bad) (bad) cmpsb movsw jrcxz adc jl (bad) in jp cltd (bad) sbb stos pop or in out fwait lret (bad) pop retq mov data16 in (bad) jmp movabs (bad) mov (bad) shl xor in imul scas and (bad) jae pop mov mov xor cmpl and mov lahf cld idivl imul jns (bad) jg jmp pop retq cmp imul jb or or gs add sub (bad) lret cmpsb ja pop push data16 rex.WXB pop push or sti ss sub je in and fcmovnbe out (bad) stos imul (bad) (bad) out push sbb data16 (bad) lock pop xor jnp addr32 or (bad) ds rex.R mov outsl je repz xchg imul insb mov (bad) lods stos push adcb jmp mov retq outsl xchg (bad) push pushq mov (bad) jb (bad) std outsb jns sbb rex.WX cld retq xchg clc adc lret adc xchg lods cmp je iret rcr cwtl adc xchg (bad) (bad) enterq cmp jb xlat in sub or mov jrcxz cld (bad) adc lods (bad) mov rex.WX xor xchg movabs int sahf imul pushq (bad) data16 mov shr xlat push xor jbe fdivl icebp pop pop add sti orl ficompl adc push jmpq popfq fistl (bad) xchg or inc repnz rex.XB insl mov out movabs jno and pop imul loopne pop cwtl fwait add add js (bad) imul cs pop (bad) (bad) rex.W rex.WR movabs lock rex.RXB xchg mov imul icebp ror adc jnp xor loope pop pop rex.WRXB push xchg mov mov jns rex.WXB jrcxz and and mov cmpsb cmpsl jmpq outsl xor push xchg pop sbb mulb xchg mulb cmp mov mov test fimul xchg rex.WRX fstpl out push mov sub test (bad) out jge test (bad) rex.W stos leaveq add rex.WRXB cmpsb lock cmp rex.W iret fdivrs mov pop in (bad) mov xchg adc xchg (bad) pop pushq cmpsb mov lods out rclb pop rex.X test (bad) xor outsl sub add mov pushfq sub roll out cmpsl (bad) jne loopne in jle (bad) shrb jg out pop add test xchg (bad) push adc in rex.WRB pop (bad) repnz pop js (bad) push rex.W shl rex.X jbe out cltd pop (bad) xlat sysret mov sbb (bad) pop (bad) leaveq sub shlb jbe rex.W jle jne movl popfq (bad) add xor shll pop push adcl mov pop out stos mov in jae movslq mov movslq ficompl add ss jmpq insb jl lret outsl xchg or (bad) xor fstps rex.WB lea shl mov sub rex.R popq and adc (bad) in rex.W imul pop jbe mov movabs (bad) fcmovbe movsb add jae in rex.B rex.RX js lret pop jno add sahf in pop enterq mov rex.WXB pop (bad) (bad) cmpsb popfq addr32 imul (bad) pop rex.WB stos lea sarb add xor (bad) and adc (bad) mov pushq or rex.WX rex.R jns (bad) mov xchg in (bad) (bad) lret add icebp xchg and rcrb repnz add pop je (bad) pop pushq fcoml xchg shll rex.WRX (bad) rex.XB (bad) fs fdivrl rex.W rex.WB adc jg (bad) add sbb cmp mov xor int3 sbb xchg jbe outsb outsb adc decb lods rol movsb push fisubr ffreep retq (bad) rex.R jg mov mov add je pop fucomip pushq pop sahf (bad) ja insb fiadd adc push rex.X rex.R movabs lahf fcompl or (bad) sahf repnz adc cmp jmpw jbe (bad) add ja xchg roll (bad) xchg insb and sahf rex.R adc (bad) lret mov push stos mov js movsb pushq in add movabs mov sub add sahf add xor and (bad) sub rex.WRX (bad) jbe fiadd rex.R negl mov div movabs xchg repnz add je (bad) jmpq xchg mov cmpsl sub mov popfq in stos push mov (bad) (bad) fisttp fiadd rex lods cmp jbe movabs pop out iret movsl jbe mov add fisttpll movsb fdivrl repz cltd and outsb mov (bad) sbb fistp and out xchg imul push cmc retq (bad) and sub add jo (bad) jg sbb adc movsl cmp adc push fcmovb cli in imul incb pop adc add popfq pushq and pop rex.B mov mov xor lock mov (bad) in fisttpl sbb rex.X xorps pop repz hlt adc mov add pop cmpl rex.R repz rex.WRX cs movabs xorl pop stos scas mov data16 test and movabs rex.W pop loop jge addr32 mov xor pushq cs mov push stos fcmovbe adcb pop idivl or (bad) loope (bad) (bad) jne jbe lods leaveq mov nop in sbb and (bad) movl pop pop (bad) mov (bad) xchg add (bad) and sti (bad) (bad) iret negl sbb pop jb rex.WRXB hlt int xchg jnp mov cmp xchg pop add loop data16 xor shll lret adc movslq jl outsb mov sbb movabs mov test int add popfq jbe (bad) (bad) js pop insb and movabs sti sub and popfq push jne ss or pop adc jno pop rex.W jb sti pop outsl and xchg (bad) cli movslq popfq (bad) cmp sahf std scas (bad) (bad) sbb sub fldcw fwait sub (bad) add sbb push movslq (bad) lret push fs rex rex.RXB pop (bad) (bad) fs or (bad) jge out mov mov in rex.WX jo add cmp mov xor data16 iret rex.WRXB cs fs in rex.R push add rcll jl enterq or add movl loop outsb (bad) add iret leaveq jle pop fiaddl fnsave rex.WXB lahf pop imull push clc cmp mov (bad) sbb or test sarb (bad) (bad) jns rex.W rex.R pop mov mov (bad) loop (bad) mov rex.WRB rex.RB xchg fistl popfq mov (bad) sahf data16 sub andb sarb pop (bad) pushq rex.RXB rex.RB repz pop pop cmp rex fs outsb add data16 add (bad) mov rcrl pop xchg test rex.WX pop sub sbb imul adc outsb xchg (bad) int3 adc jb cmc sbb movabs cmp lret out (bad) rex.WRX ss sbb jmpq roll (bad) pop js sarb mov lods (bad) insl mov (bad) test imul cltd add outsb rex.RB and add pop callq and (bad) xor (bad) push rex.RB rclb xchg pop or (bad) cmpsb rex.WXB rex.WRX shrb sbb xchg (bad) jbe repz (bad) test loope (bad) in add mov sar (bad) scas cwtl sub hlt lock (bad) mov sbb xchg movabs (bad) fucomip sub jbe adc rex.WRXB outsl and rex.WR push in cmpsl adc fs adc rex.X rex.X jmpq rex.RX movslq mov mov xorb out (bad) xchg mov gs imul test cltd rorl jmp jno jrcxz pop sahf cmc int imulb xchg jle ficomp adc mov pop mov mov enterq pop (bad) (bad) movaps sub outsb jmp adcb int sub and pop in (bad) mov movl xor mov outsl jg push cmp jno push test andl movsb lret xchg mov or addr32 jg test jp sahf sbb add adc jle rorb movabs mov mov test data16 out mov in or mov and rex.RX jns js mov mov jle test orl (bad) loope cmpsb pop callq and adcb lret rex.WRB sbb (bad) or cmp adc adc mov (bad) (bad) imul xchg push (bad) fimul rex.RB cmp pop rex add mov rex.WR mov rex.WRXB rex.X insl mov xchg movabs (bad) data16 mov popfq mov rex.XB sti cmpsl rex.WRXB lods addr32 pop ficom mov or test cmp cmp pop (bad) loopne fs fldenv stc movabs xchg push (bad) pop pop jbe insb scas mov loopne (bad) movslq rex.RX mov js (bad) push callq jp mov jne rex.X (bad) jle xchg sbb lods pop pop outsb sbb pushq push in mov negl test pushfq cli (bad) pushq data16 and movsb rex.X es stc (bad) (bad) rex add cmovl sub hlt in test and jp movslq (bad) adc outsb retq (bad) jo (bad) in sti xchg in (bad) (bad) (bad) (bad) rex.WRXB movsb callq or adc fdivl mov lock or (bad) (bad) andb xor addr32 cltd out adc (bad) and sti (bad) jp outsl outsb addr32 lahf sub icebp mov sbb iret out scas (bad) test shll (bad) (bad) jno rex.R (bad) cmp (bad) popfq xchg sahf xchg rex.B xor pop (bad) rex.WRX pop mov loopne shlb xchg enterq movabs je fwait xchg jp test (bad) rex.W rex.RB push rex.WX rex.X rex.X add mov pop (bad) rex.R jnp out cmpsl mov rex.X mov xor rex.RXB (bad) xchg jge popfq (bad) mov xchg mov sarb pop jmpq je bt add clc cmp cmp jmpq test cmp jmpq in or and (bad) shlb loop pop (bad) push mov imul (bad) imul or jl (bad) mov sub test adcl jae sbb ss sarl lahf out frstor cwtl fcmovnbe add (bad) (bad) lcall gs cmp xchg mov out (bad) (bad) (bad) jae add repz or rex.WRB adc repnz rcrl or mov or sub lods popfq mov add rex.WRB xchg pop (bad) and (bad) mov (bad) cli add xlat cs ss xor stos (bad) cli jp mov jne vminpd lock scas rex.WRXB divb adc (bad) mov cmc pop (bad) and add sar and outsl pop lea (bad) xchg jb lea (bad) cmpsl xor notb or rcl pop leaveq lods add jbe,pn mov movabs mov test test mov push andb int3 cltd cld (bad) lcall rex.R insl clc cli (bad) lcall and (bad) rex.RX lock frstor icebp clc ja cs and mov (bad) rex.W (bad) mov (bad) xchg mov orl sbbl cmpsl mov rex.RXB (bad) stc (bad) xchg rex.W (bad) (bad) mov outsl loop xchg andl clc hlt movabs (bad) cmp je jrcxz push add jmp xor sbb mul (bad) rex.WRXB out ds je rcrb fmuls jle (bad) (bad) xchg stos rcrl test xor repz (bad) (bad) lret fstpt test bt test jmpq test cmp jmpq rcl and mov clc bt cmc cmc or jmpq cmc sub mov or add out jmpq ds je and sub js cmp xchg add es out repz (bad) cltd push add push popfq adc push clc sbb (bad) (bad) decl cmp jne fstpl mov rex.RX in out pushfq cld (bad) (bad) (bad) je (bad) mov cli (bad) lcall mov jns xchg cs fildl shl retq mulb (bad) sub ds xor outsl jo (bad) out (bad) cmp jle jmp mov cltd push xchg xchg pop mov repz add xor retq lahf jle rex.WRB sub mov sub sbb repz es mov pop movabs mov in jne lods sub sahf xor jmp sub adc xchg clc (bad) jmpq jo pop jmpq jmpq jmpq jmpq clc cmp jmpq jmpq jmpq mov sbb jmpq sbb scas sbb mov (bad) mov icebp xor sub loop add es outsl push jne mov imul fcmovb mull (bad) cmpsb xchg (bad) cltd rex.R rex.R popfq clc push ja fisubl mov gs (bad) jno and (bad) (bad) (bad) (bad) test iret andl sbb rex.RXB pop imul xor shrl cli xchg scas (bad) sahf pop movsl int rex.WRB fs xor (bad) rex.WRB in pop rex.WXB add adc push iret (bad) loopne sub sub out movslq add enterq rolb xchg and (bad) stc stc rol clc jmpq callq stc bt jmpq mov and and (bad) mov xlat ja pop sub (bad) addr32 pop xor xor movslq mov stos pushq (bad) (bad) (bad) fild cld (bad) lcall repnz and shrb lock mov xor (bad) xor (bad) movsl sbb in cmp and rex.RXB cmp loopne mov push xchg cli cltd rex.R pop loop (bad) mov pop (bad) fimull incl movabs pop fnop repnz es fadds rex.RXB repnz sbb mov pop cmp ds mov sub jge popfq rex.WXB repz cltd jno pop (bad) cmc (bad) (bad) (bad) xor int3 xchg or rex.X jmpq jmpq jmpq jne jmpq add rex.XB (bad) je rex.XB insl jo je (bad) insb imul jge add clc cmc test test sub clc cmp jmpq je (bad) icebp add mov bswap bts mov rol sub mov lea jmpq pushq jmpq pop jmpq sbb movsb (bad) rex.XB retq (bad) (bad) (bad) outsl pushq xor in out movb sbb fist jp cmp (bad) outsb popfq jge and sub rcrb (bad) rex.WRX out and lcall (bad) xor (bad) cmpsb (bad) xchg imul (bad) (bad) ljmp (bad) push sti (bad) lcall xchg pop mov imul (bad) lock addr32 sbb jae stc rex.WRXB in (bad) in add rcr pushq fisub add fstpl mov pop pop stos pop (bad) iret sbb insb hlt add sub xchg mov jp stos jb add mov adc andl sub sbb (bad) std xchg stos cli (bad) adc mov loope xchg retq (bad) jmpq rex.RXB insl adc mov xchg adc sub je insl pop jmp xchg cmp pop rex.WB rex.WRXB sbb sbb imul rex (bad) scas std mov test outsb mov ja std or (bad) (bad) (bad) data16 xor (bad) data16 movabs orl (bad) lcall rex.RXB lcall mov push mov (bad) mov mov repnz mov rex.B mov retq lret lahf rex.WX (bad) scas (bad) shrb mov push sti cmpsb rex.RX adc callq (bad) jmp mov rex.WRB int3 lods pop mov divb xchg pop test jns mov icebp adc test (bad) repnz (bad) rex.RB or and outsl mov imul mov movabs (bad) adc push in pop movsb int3 (bad) insb sbb xchg adc movabs pop and sarb adc (bad) lahf cli mov leaveq add out sbb fild (bad) lock push enterq (bad) lods xor cltd rex.WB enterq or rex.WRXB (bad) (bad) (bad) (bad) mov sub rex.X cwtl rolb push cmp and (bad) sub rcrl sti (bad) lcall xchg (bad) je,pn outsl pop lods sahf sub pop xor add test jne lods in movsb rex.WRXB loope movabs mov adc movabs scas (bad) retq fist xchg xchg es cwtl out mov stos andb xchg jo sub and cmovg and stc imul pop test sbb loop clc rol jmpq lea lea movsbw setno jmpq jmpq ja sub test jmpq or mov movabs retq xor push or sub (bad) pop outsb (bad) cmc rex.WRB scas pop popfq sub push movl xor shll rex.W ss sub sub pop js xchg (bad) (bad) (bad) (bad) (bad) (bad) push stos rolb xchg roll push in insl push movabs (bad) (bad) nop cmp sbb nop xchg mov (bad) xlat insb pop in (bad) lcall rex.XB pop pop insl rex.RB rex.WRX (bad) movl repz (bad) mov lods jp push (bad) (bad) xor (bad) push xchg jrcxz adc js xor fmull xchg pop clc cs rex.WRX jrcxz fldt add lret pop mov xchg rex.RB fs movabs rex.X or add retq push xchg cld add fcomps test test xor test repnz jmpq sub test cmc or jmpq stos jmpq jmpq je clc sub jmpq cmp jmpq mov movsl cmovs mov cmpsb and imul jns iret lret rorl fistpll (bad) rex.RX xlat retq movabs loopne rex.RXB rex.RXB out sbb rex lock jle (bad) (bad) sub sbb subl (bad) (bad) pushq and out rex.RXB add je cld (bad) lcall or mov mov jnp push cmpl (bad) mov mov (bad) mov loop pushq (bad) cmc mov lret sub push jmp cltd xor movabs imul xor fwait mov add ds xor rex.RX rcr ds rex.RB push lahf movsb je xor pushq lods rex.R adc test rex.X (bad) jmpq (bad) rorb mov setns movabs lea jmpq stc clc or jg je btr bt or and add neg ror sub cmp clc bsr adc shr adc mov and test add rcr bt (bad) repz add add dec sbb xor mov stc shr jmpq add jmpq jno push not mov lods jmpq ja rcl and bt add or add bt add shl xchg dec mov bt cmc bt mov clc clc ja stc push ror btr sbb mov cmc sub jmpq jae xor bsf mov sub movsbw mov rcr btr or add mov jmpq jmpq (bad) jl rex.XB rex.WX rex.WRX xorl cld xlat pop xchg or (bad) and mov pushfq cwtl movabs mov jno (bad) iret (bad) movsl push rex jg pop xchg fsubr jae movb pop xchg test adc pushq jl or (bad) (bad) jg rex.R jmp mov and (bad) out xchg push (bad) jrcxz loope rex.WRB (bad) (bad) movabs xchg push rex.WRB jp sub loop mov mov rex.WRXB push mov lock mov or outsl cmp (bad) std rex.RB rex.XB rex.WXB movsb (bad) xchg add pop outsl movsbl (bad) mov and rex.WB push (bad) pushq (bad) data16 movabs mov test orl rorb lahf cs xor test (bad) movsw add fimull (bad) push rex jg out xchg push outsl rex.WRXB in movabs sub xor lods mov nop mov repnz pop (bad) out sub sub xchg add clc rex.WRXB adc outsl out mov (bad) rex.XB cmp sub adc rex.WX rex.RX pop lret fidiv callq pop outsl out (bad) in (bad) (bad) std movsl cmp rex.X (bad) scas insb ss lods pop (bad) mov movabs fild sub mov lahf out cmp (bad) push add mov jle rex.WR loop js (bad) jnp pushq xchg cltd rex.WRXB jg (bad) jl (bad) jp rorl (bad) xlat retq rex.RB (bad) roll add movslq rex.WX cmp jp out (bad) iret xorl js mov loope (bad) js (bad) (bad) lcall mov jb cld (bad) (bad) mov pop jno rex.RX cltd mov scas lret movsb pop outsb repnz (bad) (bad) outsb adc cmp mov sbb sub or push mov test in pushfq hlt mov (bad) jg psadbw in rex.R fmull add nop push (bad) (bad) rex.WR xor add sbb rcll mov (bad) jmpq jmpq fs adc lock cltd rorl pop fucomip jbe or push lods pop movsb movslq shrl (bad) rex.WRX mov retq jae mov fistp rex.RB in sub lods rex.WX (bad) (bad) lcall jle test cmp mov or rorb and jp mov mov mov cli or push lea mov jae xchg and xchg lods callq lcall and jmp mov add (bad) xchg jb rcl push rex add jno (bad) sub cmp add mov jno loope addr32 (bad) cs hlt lods (bad) int3 adc enterq sub rex mov pushq rorl psubusw outsl ja push sbb (bad) enterq or test cmc push test bswap lea bswap jmpq sub jmpq je shrl and jle out (bad) rex.WRX (bad) insb fwait xor rex.X or test out test hlt xchg xor push and (bad) (bad) jne push xor adc pushfq out (bad) (bad) (bad) (bad) fbld add push add (bad) xchg push (bad) popfq cmp pop insl sub add rclb (bad) insb mov callq (bad) (bad) mov loopne (bad) lcall mov movsb jle,pt movsb andl jo (bad) pop mov pushq in jo xchg lods mov mov add or (bad) xchg fidiv and rex.R cld orl mov rorb push or mov (bad) sbbl xchg rex.WX loope (bad) mov (bad) (bad) adc mov jo in jbe cmp rex.WRB andl inc bt stc clc rol clc test bt cmc cmp movzbl movsbw setp lea setnp mov pop jmpq ja jmpq lea jmpq push setns setae mov lods jmpq jne cmp bt stc bt movb bt test jmpq test bt movzwl bsr jmpq cmpb jmpq je lea xchg xchg xchg lea lea mov lea movzwl bswap jge lea jmpq test jmpq add bt mov stc bt test jmpq jmpq jmpq mov jbe rex.WRXB push jbe mov mov roll iret (bad) (bad) ss pop std insl cs sbb fistpll mov lahf cs scas callq mov cld xlat mov adc and (bad) (bad) (bad) mov xor loope rex sti sbb rex.WRX outsl rex.RB pop pop loope callq pop loopne and xor decl (bad) callq jae test cli (bad) lcall cmc lahf (bad) lret rex nop cmp fiaddl movabs adc out rex.WXB (bad) rex.WRX xchg fisttpll rex.WXB xor sbb sbb push xchg paddusw rex.XB xor retq pop xchg xchg pushq cs movsb (bad) (bad) sbb pushq cmp add test lods loop rex.W lock imul fimul test xor rorb fiaddl mov stc jmpq outsb (bad) cld push and jns clc fldt ss movsb sbb sub (bad) cmpsl decl mov test jo jmp ss push jae out cmpsb gs push movl xor or es xor pushq rex.X ja (bad) hlt push (bad) (bad) lcall ficomp in (bad) cld (bad) (bad) lcall (bad) lcall or fiaddl lods cs callq or icebp jo (bad) (bad) mov (bad) and fsubrp and js push fisttpll jnp add ss je add or pop mov out ss outsb jbe in pop rex.R or (bad) jge lods adc (bad) out jbe out xor or mov mov (bad) cmp fisubr clc notb int cmp outsb mov (bad) in cmpsl xchg or adc test cmp push and rex.WRX movabs cmp xorps mov rex.WXB sub rorl retq xor add jp movsb insb leaveq lods in out (bad) mov (bad) mov rcrl (bad) push (bad) (bad) lcall rex.WX rex.X cld (bad) (bad) jg jb sti xor (bad) lcall fdivs push rex.RX nop rex.WRXB popfq push cmpsb je je movabs sbb ss mov mov (bad) (bad) movsb cmp fldl xor cltd js (bad) je add mov sub or data16 in hlt xchg imul mov (bad) sbb (bad) (bad) rex jle,pn mov (bad) out out imul push out rex.WR notb leaveq jmpq or pop (bad) mov add rorl nop rex mov jo (bad) scas sub (bad) (bad) mov push ss adc (bad) addr32 (bad) (bad) (bad) mov (bad) cld (bad) lcall callq lea movsb imul adc (bad) adc and movsl (bad) test test movsl (bad) (bad) rex.WRX mov and mov lret sti (bad) jns pop sbb movabs repz mov nop mov retq adc and stos jp mov and mov int3 pushfq movslq int3 sbb jp rex.W mov adc cmpsb out adc (bad) mov (bad) xchg insl add mov add js xchg shld btr sub btr sub mov shrd sar shrd mov xadd bsf jmpq add insl outsl jne gs gs outsb je jmpq cmp cmc pushq bt bt cmc cmp jmpq jne xor bsf data16 (bad) bswap mov jmpq callq jmpq cmp mov bswap lea movzbq lea not not pop jmpq jmpq jmpq jmpq cmc xchg cmp sub test test shl jmpq je clc jmpq jg pushq jmpq jae jmpq sbb mov (bad) mov mov lods push repz mov rex.B (bad) xchg enterq mov pmaxsw fstpl jo cltd xor sti fisubr cltd xor xlat idivb rex.RX (bad) rcl mov and loope xacquire sub rex.WRXB or callq cltd xchg fdivs or (bad) lcall movsb fs fsubrl (bad) outsl (bad) cmp push repnz ror pushq movabs push (bad) add in fs jno outsl (bad) add cmp fwait jmp adc popfq outsl sub (bad) jns shll je rex.WXB and jmpq fcoms cmp sahf sub mov clc movabs fldl insl pop jp mov mov (bad) mov xchg negl lock xor fisubl imul in sbb fwait jb rex.RX callq mov enterq movsl jge movabs or repz pop cmp jle movsl test add (bad) jo (bad) (bad) (bad) pushq adcb (bad) fsubl adc add jbe ja insl and shlb rex.WXB add fsubrl sub cwtl rdmsr (bad) xor jle mov jge rorl shrl loop out mov or and cwtl or movabs (bad) (bad) mov mov adc mov movabs xchg push and stos (bad) leaveq rex.WB jb mov mov (bad) imul mov xchg xor ljmp stos (bad) cmp xor xor repz popfq xor stos push lahf fild pop outsl cli rcl in psrad mov std in sbb rcr rol xchg (bad) outsb movabs xchg pop xor movsb rex.W movabs repnz (bad) (bad) lcall loope add outsl js negl pushq rex.WB xlat sbb andb adc mov add rcr sar fisubrl fldcw push ss cmp mov iret xlat xchg xcrypt-ctr cmpsl sahf rex.RX mov mull mov xor (bad) mov nop clc jnp xor mov ljmp decl xchg bt imul ja cmc clc cmp add jmpq and sbb (bad) out (bad) fistpl movabs stc jno xor (bad) (bad) (bad) lods rex.WRB (bad) xchg cmp mov cmc mov cwtl rex.WRX cld sub movslq sbb subl imul (bad) (bad) fild rex.W imul outsb rex.WRX rex.RB (bad) lcall faddl fwait cmp cmc mov hlt insb (bad) mov jo mov (bad) cmpsl cmpl ss xchg in and (bad) (bad) xchg xor mov int3 push rorl cmp (bad) leaveq test mulb cmp ds rex.WXB (bad) add (bad) std push rex.WRB fistl movabs or jmpq rex.XB repz rex.W rex.RXB rex.RXB rex.R xor cs insb add shr (bad) decl test add cmc clc bt jmpq sub mov rex.WXB repnz rex.R lret add mov mov (bad) fidivr (bad) mov xchg (bad) or mul mov lock (bad) insl sbb push (bad) cmpsl test xor fcoms jo (bad) xchg add jns (bad) lcall rex.WRX jrcxz movsb rorl (bad) (bad) (bad) xchg rex.WRX add sbb sub sbb push sbb fimul (bad) push in add add callq in (bad) (bad) lcall mov lcall mov scas jge cld fs cmp addl ja mov xor mov sbb mov xchg insl retq ficoml callq in sub mov jp jo jge or add movsl mov pop ja mov mov callq jmpq jmpq xor xchg mov rex.X (bad) scas pop (bad) std jge insb pop loop f2xm1 pop outsl (bad) xchg xor jnp pop lret jmpq movsl mov retq (bad) (bad) (bad) sbb sub mov (bad) (bad) (bad) (bad) jp xchg rol pop movsb (bad) and fs and or and pop sarl or (bad) js mov mov jbe jmp (bad) adc rex.WB pop cli and rex.R lock mov fdivs or jo (bad) (bad) jg mov (bad) lcall idivb andl mov (bad) fcmovu rcr add lahf (bad) sub mov mov pop pop add cmpl rex.RB sbb mov movabs fmull and mov pushfq sub rex.WX movabs rex.R (bad) sub (bad) js and mov movabs cmp jns (bad) ds std mov in sbb adc (bad) jle insb mov (bad) pop stos mov push mov nop outsl out (bad) and mov rex.WX or xchg ds (bad) (bad) fbld and sti (bad) lcall (bad) adc (bad) (bad) cmp and and outsb xor int3 adc sbbl pop sbb mov (bad) int3 pop movabs pushq xlat jrcxz cmp push xor xor enterq insl mov addr32 sub xchg rcll rex.WRXB int pop divl xor (bad) pushq rex.W imul addb (bad) xchg mov add add notl mov jge (bad) mov mov ss mov scas fstpt cs xor icebp sbb (bad) lods gs loope jl rorb (bad) mov rex.RB pop movsb (bad) mov fs outsb outsb testb jrcxz rex lock lock (bad) xchg pushq rex.RB mov adc lret pop std fisttpl mov fnstenv rex.XB jmpq (bad) int xchg cmp cli movsl int movslq insb add movslq (bad) (bad) lcall idiv (bad) lcall in pop out retq sarl (bad) (bad) jle in insb (bad) pop mov test pop sub nop outsl (bad) mov fbld xchg xchg xor or (bad) cmp rex.WX pop int cmp loope mov add push mov divb sbb je (bad) add fcomps popfq stos sbb sbb lock cmp pop and xchg (bad) jbe adc (bad) (bad) pushq add (bad) pushq xor (bad) data16 sbb or rex.XB rex.WB add imul rex.WRX out movsl test and adc or pushq or (bad) lcall movabs mov callq mov pop or and sbb sbb sub mov fiadd xor mov (bad) int3 je or addr32 std xchg push rcrl mov push (bad) popfq outsl (bad) or icebp xor or pop and mov mov repz mov sub cmpsb gs rex.RB ficompl (bad) pop cmp mov (bad) (bad) rex.WRX xchg mov xchg and jnp jp adc mov mov movsl insl pop lret (bad) rex.WRX in (bad) (bad) adc rex.XB (bad) leaveq and add jbe icebp movabs repnz addr32 mov rex.WB xchg retq xchg jno jg insb pop adc (bad) (bad) lcall iret std (bad) (bad) ljmp and (bad) or and push jg (bad) xchg out in test rex.WRXB cs js imul jg rex.RXB xor (bad) cmc xor movslq mov rcrl (bad) sub adc rex.X adc (bad) sbb push retq jrcxz leaveq jno mov (bad) outsl mov sub data16 push rclb xor imul add imul add cltd jmpq mov add (bad) lret adc iret mov (bad) es sbb pop mov rex.R rex.WRXB and (bad) rex.WRX rex.WRX add leaveq jae (bad) cmp callq mov (bad) (bad) (bad) jg or rex.RXB movabs (bad) jmpq cmpsl jg cwtl imull rex.WX xchg retq pop out clc insl std (bad) (bad) (bad) mov ja int3 sti (bad) lcall xlat sahf testb lock xchg cmpl add hlt xchg pop (bad) mov (bad) (bad) (bad) lods xor add and xor and cmp (bad) fisttpll mov (bad) (bad) mov or stos mov std sub iret scas out ds jge shlb shlb data16 rex.WR (bad) xlat iret pop (bad) frstor lret push xchg ss fsubrs adc imul mov mov (bad) repnz enterq lea jmpq ja jmpq mov movsbq movsbw jmpq jmpq rex.WR scas pop and (bad) jae xchg icebp in push retq mov movabs repnz jo icebp add xor ja fidivr (bad) mov (bad) xchg jns xchg or jg jle or (bad) cmc jne and sti jrcxz (bad) cltd cld (bad) (bad) jg rcrq clc cli (bad) lcall ud1 adc xchg imul add push addr32 and cmovg (bad) retq (bad) test jnp push notl xchg cwtl ja push mov mov xor and mov scas ss push xor push cwtl or jbe movabs add scas push jmp rcl (bad) jle sbb lock fdivl jle in fs and ds sub add (bad) popfq sbb gs lret sbb mov iret (bad) (bad) mov adc imul (bad) (bad) (bad) fnstsw movslq lcall rex.WR in pop orl clc adc test xor cs xor imul movabs pushq jl imul adc push retq jle cmp adc sbb or add (bad) xchg xor and (bad) rex.WR (bad) jns and mov jrcxz xchg add scas jge jnp rex out xchg cld sub adc and jmp xchg mov xlat (bad) pop jmpq jmpq sub mov bsf bt add neg btr rcl mov rcl sets clc mov test stc cmp repnz jmpq jne movzbw mov mov cmp stc bt clc add jg stc movzwl or shrd sar mov jmpq jb cmc cmpb jmpq jne adc mov jmpq callq bt mov stc shl jmpq jle imul and xchg xor and sbb (bad) sbb (bad) fidivl rex.XB add jmpq out sbb mov orl cmp repz and xchg add pop lahf mov mov mov (bad) movsl mov (bad) (bad) cmovb or mov cld (bad) (bad) mov pop sti (bad) lcall fist mov cmpsb rex.RB mov movabs xor lret cmp (bad) rex.WX jp sbbb pushq in (bad) xor push jae stos jl adc sub clc pushq lock sub movabs mov rex.WRXB pop pushfq push add insl (bad) fs sub xchg jl out enterq hlt mov roll mov (bad) mov jmpq stos sti push mov rex.XB add jbe rcll clc cwtl (bad) cmpsl and and sbb rep (bad) cmp (bad) (bad) and int mov mov (bad) lcall push add fnsave insb fwait rorl pushfq mov (bad) ja std (bad) lcall and lcall rex.W repnz callq movsl lods sbb rolb pop ds (bad) fistpll or outsl mov (bad) (bad) xchg pushq rex.WR scas fildll movntq ss jns lea andq sub clc xchg or mov (bad) mov mov xchg push mov push xchg push jmp movabs icebp ja popfq add xchg (bad) jbe and or loope or pop (bad) cmpsb not sbb retq mov push rex.RB hlt outsl xchg pop cmpsl out pop repnz add xor movsb es std (bad) (bad) (bad) jo jnp mov adc out hlt xor fildl gs (bad) (bad) fbld enterq lcall (bad) or (bad) xor (bad) jb cltd add (bad) callq sub (bad) or loope shl xchg or shlb mov (bad) xchg mov mov cmpsl cmc xor or rex.WB rex.X adc rex.W pop in mov (bad) mov fcmovnu adc rex push and rex.WX rex.X movabs ss mov jmpq rex.RB (bad) add ja jge cmc mov addr32 sbb out int cmp jmpq movslq pushq scas mov lods cmp cmp icebp rex.B mov xchg xchg sub sbb int or sub (bad) (bad) and mov mov cmp push fwait pop jb or pop jb cmc sub loopne (bad) (bad) (bad) sub mov xor cmc xor iret (bad) hlt fldt jns iret sbb push es outsl stos add mov (bad) sub (bad) ja clc imul clc stc add jmpq xor and outsb (bad) leaveq (bad) test (bad) mov mov insb fwait rex.XB int add lods sub add mov mov test out mov movslq pop pop or cmpl and nop jne and pop mov sti (bad) lcall sub loope rex.W sbb test retq rex.RXB or mov stos mov icebp mov sub push scas test jnp fldt cmp test (bad) movsl cmp jae mov rex.B rex.R jge pop pop std xor (bad) (bad) (bad) sbb adc (bad) fs push lret (bad) movsb (bad) rcrb addr32 insl jne fistpl loop sub mov and mov mov rex.WRX mov cltd xor (bad) mov jns xlat rex.RXB mov (bad) sahf stc movabs mov jl (bad) jp clc pmovmskb test mov decl xor push (bad) cld (bad) lcall sahf add pushq sarb (bad) stc adc int push (bad) mov pushq xor rex.WX rex.WXB jnp std mov (bad) mov addr32 sub mov fcmovu jns outsb mov and xchg push out jp mov push rex.WRX mov rex.W push and mov xor or adc test divl movsl cmp lret mov (bad) pushq sbb fdivrl ja jmpq jb cmc bt jmpq jne jmpq stc test jmpq jmpq mov jmpq jne bt dec sbb mov cmp cmc cmc add cmc movzwl adc shrd inc mov cmc stc bt stc add bt bt clc mov bt test cmc test jmpq jle (bad) xor mov movabs outsb pop in sbb sub adc (bad) test pop lret shrl pop (bad) rcrl insb adc jbe cs mov (bad) (bad) movsb ror in (bad) (bad) mov jno fbstp (bad) sub cmc sub lods mov and mov rex.B (bad) (bad) pushfq cmpsl or lcall sub outsl rex.WRX insl jmp jge (bad) add sahf mov xchg lods mov repnz and js movabs (bad) rex.W rex rcl test jmpq cmpsl ds movsl (bad) scas js clc cs push sbb xor addl imul (bad) sbb (bad) sub iret lea not bswap mov jmpq and shrb mov rol push jne push sbb fucomip (bad) (bad) (bad) ds and (bad) jmpq (bad) std mov gs test es in xchg rex.WXB pop (bad) lock jns outsl (bad) (bad) (bad) lcall mov add (bad) mov xchg add es mov movsb cld es popfq rex.X cmp and ss (bad) rolb (bad) (bad) enterq push cltd std (bad) lcall (bad) and idiv (bad) lcall fs jae rex.WB push (bad) push mov in lods imul (bad) xor out hlt mov (bad) jrcxz movabs gs jrcxz adc callq push cltd loope iret xlat paddusw (bad) xchg push rex.WR adc (bad) (bad) out int and movabs leaveq ror sar shr push cmp add jmpq shl jmpq stc bt cmpb jmpq jb mov (bad) in test repz adc (bad) rex.WRX in cld ds movabs movabs cs push cmpsl fisttpll adc jp adc movsl fs rex.X sub (bad) rex.WRXB lods mov test (bad) (bad) add mov lret callq popfq movabs shrl scas sub xchg add (bad) (bad) lcall xchg rex.X rex.R (bad) (bad) mov sbb mov (bad) lods jae (bad) lods (bad) sbb ds xor test (bad) test (bad) xchg cwtl and andl jnp (bad) xor loope fisubr cld cmp and fistl cltd or test adc add rex.WRXB rex.WXB mov mov rex.WRB mov clc ljmp (bad) js sarb imul (bad) retq sub mov test xchg iret (bad) (bad) rex.RXB push adc in push xor sbb imull sub xchg mov movabs (bad) pushq xchg ja sub mov scas jne loope cltd gs scas insb data16 (bad) cmp add jae push xchg pop mov in cmp (bad) sahf rex.WR stos addb (bad) in movsl cmp and rex.RXB std (bad) cmp rex.R (bad) xchg jns (bad) adc mov insb and and xor xor xchg fidivr or (bad) test mov in cmp pushfq adc mov outsb jne adc mov (bad) test fcomip adc (bad) jg test sti and rolb push and int3 rex.B cld (bad) lcall sbb icebp fimull (bad) lcall jge pushq push xor lods mov (bad) jo fiaddl mov push adc (bad) push add add sti mov out imulb (bad) fistpll push out int3 xchg add xchg cmpsb (bad) fsubr cmpsl fadds cltd leaveq mov cltd rex.WXB shlb fsts cmp cltd mov sar jp (bad) cli (bad) enterq adc rcl jo (bad) mov jne sti cmp cmpsl test cmp and mov xor jns mov test inc adc add lea not mov jmpq jmpq (bad) sub (bad) insl and pushfq sub (bad) xchg add imul adc add in sbb imul sti (bad) jno fdivrs mov shrb rcrb (bad) repnz (bad) es (bad) lcall (bad) sahf mov jnp push out scas in add or movslq std (bad) (bad) (bad) rex.XB lcall pop out rex.RXB out (bad) es pop pushq cmp andb (bad) xchg rex.RX addr32 (bad) mov sub ficoml (bad) mov rex.B and fldl movsl int insb and mov cmp adc clc xchg lret and jmpq imul icebp test mov (bad) (bad) xchg rex.WB rex.WB (bad) (bad) mov sub jmpq jne cmc clc cmc add cmp add jmpq mov jmpq bt add jmpq mov mov mov jmpq imul clc test bt jmpq jmpq bsf cmc btr bsf add shld (bad) mull mov stc cmc test shr cmc cmp jmpq callq jmpq jmpq je bt stc cmp jmpq jae jmpq sbb rex.B and in (bad) jp in rex.WR mov mov iret (bad) mov vpunpcklqdq sbb mov sbb (bad) (bad) rex.WRX decb fsubrl pop adc cmp ficoml mov and (bad) (bad) fist movslq mov movabs rex.WRX add adc cwtl cld (bad) (bad) pushq (bad) lcall leaveq out and mov xchg (bad) out ja mov (bad) gs pop imull (bad) std int3 stos rex.XB movabs callq es test fwait and mov mov test mov xchg push stos fsubrs add rex.WB (bad) sub xor (bad) fisubl in imul out sbb test add rcr stc mov cmp cmp add jmpq jmpq jmpq jne jmpq movb cmc bt clc test jmpq jns movabs sub and lock xchg add movsl in push jne rex.WR (bad) adc xlat mov nop add push xor outsl mov repz movabs negb add sub (bad) (bad) mov jo jle stos cld (bad) (bad) (bad) and scas outsl or (bad) lcall test pop (bad) mov (bad) rex.WB insb jns (bad) sbb lahf cmp rex.WR sub ja (bad) pop mov in movsl fidivl movslq xor (bad) (bad) addr32 push xchg or nop adc and je je rex.R sub nop mov enterq sub pop (bad) (bad) and jg shlb movsl (bad) add sub sar cmp neg mov test clc cmpb jmpq outsl (bad) or push xor mov cs lahf in sub movabs stos (bad) (bad) loopne out xchg in rex.W rex.WXB pop notb sbb (bad) xchg cmc sarl rex.B (bad) lcall xchg cld (bad) (bad) mov jl fidivrl (bad) movabs out jle ss in (bad) xchg out sti (bad) (bad) jg xor sbb (bad) in (bad) test fmuls mov or (bad) push mov shlb sub in je jno pop (bad) cmc mov push nop push (bad) jae (bad) enterq loopne xchg mov (bad) fnstsw xchg cmc sub hlt adc or stos and (bad) rex.WRXB jp xor mov jae push jns rex outsl (bad) jo outsb (bad) mov or pushfq mov push js push mov sub push hlt std (bad) lcall fwait sub jno rcrb push jg je (bad) (bad) mov sar (bad) lcall pop (bad) xor out mov add jb pop sub (bad) and test fwait ja hlt sub sub xchg xor cmc (bad) sub add movabs jmpq jmpq cmp xor or ja data16 and mov push out cmp and add mov mov enterq mov xchg push or idiv cmp cmc bt add stc jmpq testl rex.WRX insb addr32 incb xchg add jrcxz pop xor (bad) (bad) (bad) mov ja sbb sbb cld lods pop sbb (bad) fbstp retq (bad) (bad) sbb je or (bad) (bad) sub rex.RB jmpq (bad) sub test pop add rex.WB lahf or retq movabs (bad) (bad) mov (bad) (bad) lcall push sbb retq fsubl in (bad) or movabs repnz pushfq mov mov rex.WR es mov xchg sti jo mov inc rex.WR clc movabs pushq rex.X xlat (bad) sub mov rex.RB popfq fs cmp rex.X xor rex.RXB and xor add rex.WRX imul (bad) mov out sbb pop xchg cmp rex.RX gs or rex.WXB jp rcrl scas test adc movsl insl pop or data16 jmpq pop movabs mov xchg (bad) mov push repz rex.X jg xor mov adc add add xlat pop pop (bad) ljmp fiadd rex.RB and xchg int push leaveq (bad) mov mov lahf xlat adc incb (bad) xor divb adc lahf addr32 test rex.W sub out (bad) in rex.WXB xchg rex.WB jmpq (bad) (bad) cmpsl (bad) cmpsl fsubl jo (bad) lahf push xchg cmc or xchg mov add jg fidivr and cmp cwtl cmp imul push movabs callq sub fs iret rex.WRXB xchg and pop loope lods (bad) iret and ja cmp clc decl cmp (bad) (bad) mov out mov xor cmp jb xor stc addl mov pop (bad) movabs lcall pop add lcall xchg cs notl mov add rex.B (bad) (bad) sub jne mov adc pop sub add rex.W jnp lret sti xor cmp (bad) cmpsl rex.RX fstl loope repnz rex.B lret sbb or iret xlat (bad) pop lea fistpl callq add repnz xor xor cmp rex.RXB xlat (bad) int xchg adc mov xor mov test rorl movaps dec shld inc mov stc stc jmpq add mov pop sub or rex.WX rex.X mov fistpl fstps bnd rol mov xchg (bad) (bad) jmpq fdivrs adc in repnz (bad) (bad) mov movabs jns mov push sti fiaddl rorl cwtl ds or rex.WXB xor ss lock cmpsb push push sahf jge mov (bad) xor mov iret (bad) pop repz jb sahf gs mov (bad) (bad) movabs movabs or (bad) lcall xchg rex.WR rex.B xor adcl in leaveq outsl stos xorl xlat jle jrcxz movabs cmpsl jp push sti (bad) (bad) jg add fnsave rex.W mov test pop lock xlat (bad) jb xor jg xchg int cmp mov jle ds cmp imul add adc pop mov xlat (bad) pop cmp fcomps (bad) xchg jl in pop mov mov xchg rex.WR test pop out xlat rex.WXB leaveq jbe int3 insb cmp stos in idiv jns mov jmpq cmpsb notb and hlt fbld adc rolb mov jo (bad) outsl sahf jle loope rex.RXB and xor fdivs add pop sbb and (bad) in pop xlat (bad) insl cld (bad) (bad) mov push xchg (bad) outsl mov add pop enterq leaveq jne and xchg add cmp (bad) (bad) mov cmp repz push or sub rex.W movabs (bad) pop lea stos (bad) cli adc pop rex.RXB sbb cmp cmp pop divb sub rcrb imul jmpq xchg pushq xchg js mov lock scas pop mov movslq xor mov add test cwtl mov (bad) add adc xchg add xor sbb add rex.W test icebp (bad) ja sahf mov (bad) (bad) out cmovbe pushfq (bad) (bad) sbb sti (bad) lcall and mov push hlt rorl sar xchg or retq cli (bad) (bad) ffreep pop in retq sub push (bad) loop sub roll es and imulb loopne jns sub xor mov mov pop or clc js mov lret cwtl cmp jge cmp lahf (bad) mov (bad) xchg pop fcoml rcll rex.RXB lahf rex.WRB (bad) or xor sbb ficom jp movabs and pushq jmpq jmpq je shld (bad) icebp bsr lea sub shl mov bsr movzbl or mov sub setbe bsf clc shr bsf adc shrd mov bt stc test bt or jl je inc shl add ror xor rcr sub shl test ror shr mov adc mov data16 repz add cmc jmpq jmpq sbb mov mov rex.X gs mov adcl or (bad) fiadd sti cmc cmpsb or adc rex.WB jl (bad) (bad) fcomip jp xor jno mov pop lock hlt mov cld cld (bad) (bad) push push rex.WXB (bad) lcall sbb sbb addb sub pushfq lods outsb push loope or xchg fnstsw (bad) or adc add rex.WRXB std jge (bad) rex popfq int movabs xor pop sub adc jb (bad) (bad) rex.B push gs add xorl push adc push leaveq rex.B or fsubrs mov movsl test jle rol add mov int int repz data16 mov (bad) imul (bad) hlt jno or or loope xlat push xchg or in add bt xor jmpq jmpq rex.RXB rex.RX mov (bad) pushq repz jne mov xchg scas out jno (bad) fiadd vpacksswb lret jge rex.XB (bad) jge xchg jb movsw and cmpsl jmp (bad) (bad) (bad) ffreep cmp hlt (bad) mov movsb xor rex.WRXB mov leaveq add movabs push (bad) push (bad) mov je movsb jle in (bad) movabs (bad) (bad) add sti (bad) lcall sub sbb scas fmulp xor pop loope (bad) pop (bad) in outsb (bad) mov cmp ja divb rex.WX rex.WX or mov mov cmpl fmull and mov sbb leaveq mov jno xchg seta cmp push callq xchg lahf data16 and add callq je mov jmpq rex.WX iret cmp mov scas sub xor and sub rex.RXB lods rex.WRB (bad) mov pushq mov (bad) out mov (bad) fstl xchg mov (bad) cmp cmc in gs adc jg loop adc jns out (bad) (bad) mov cmp mov mov ja (bad) (bad) cmp rex.RX or clc sub cli rcll cld (bad) (bad) mov mov (bad) lcall cld retq sbb mov (bad) jbe pop and push scas rex.XB test xlat (bad) (bad) xchg pop rex.RX mov push mov rex.W rex.WRXB repz mov jne add rex.WXB rex.WR fsubl push push and data16 push xchg jp cmp cmc in cmp jle sbb and add cmpsl hlt rex.X (bad) jl mov pop fisubr (bad) xchg loope nop (bad) out pop outsl (bad) mov (bad) repz cmp xor retq (bad) mov (bad) (bad) data16 push or cltd or movabs cmp or rex.WX fist adc (bad) (bad) (bad) fldenv adc (bad) lcall test push jns adc rcll pushfq mov cmc cmp mov andl mov (bad) xor sub out cmp test adc jb rex.WXB cmp rex.W xchg fdivs mov es or sub pop add sub int3 pushfq rex.RX rex.WXB jo jne lods xor cmpsb or cmp pop or adc (bad) (bad) jmpq (bad) push cld data16 mov movl test (bad) xchg testl (bad) rex.WRB rex.W notl xchg rcl jg sbb fdivrs outsb lods rex.W mov jns iret mov sbb rex.WX (bad) (bad) (bad) decb or addb xor sti sub rex.B (bad) jle jb (bad) jbe std (bad) (bad) (bad) (bad) cmp (bad) lcall xchg cmc (bad) or scas rex.WR xor cmp add mov (bad) rex.WRXB int lods jnp mov ss rex.WR sub rex.R cmpsl repnz sbb xor rex.RB repnz sub movsl or cs hlt cs lahf rclb xor repz cmp imul (bad) fs (bad) mov adc adc jo and xchg hlt rex.R test mov sub in retq or xchg (bad) rex.WRX rex.WB cmp loop in rcrl fstps mov hlt pop (bad) (bad) (bad) (bad) andl pmaxsw mov jmp cld (bad) lcall jp test sti (bad) lcall xor movabs (bad) pop test lock xchg (bad) fst and loop je ja sahf sub pushq rex.WRB mov add mov loopne out (bad) fidivrl cmpl movabs lods rex.RB outsl mov jns pop testl repz idiv jmpq movabs jmpq retq sti hlt decl test add jmpq sub jmpq jmpq callq jmpq jmpq clc stc add cmp mov clc cmc test jmpq jmpq pop fnstsw movsb jg mov icebp (bad) cmpsb movb jo and pushq and js icebp in retq lret add jae add rorl callq adc mov lods rorl (bad) jrcxz jno (bad) (bad) lcall out int3 and rex.WX rex.WX (bad) gs cld (bad) (bad) pushq faddl loope (bad) lcall xchg rex push out rex.WXB xor fnstsw shrb xlat rex.WR in sarb andl in sbb mov add or cmpsb test jno mov add loope in jg rex.RXB out sbb ja out (bad) sbb jnp sbb sub imul adc and rolb adc xor pmaxsw pmaxsw in and test mov test repnz (bad) (bad) xchg je xor pushfq mov andb clc movabs js decb cmp (bad) (bad) (bad) leaveq icebp sbb std cmp imul scas sbb in (bad) or (bad) repz mov pushq (bad) xor cli mov sbbb sub sbbb add jne imul adc or pop cmpsb push xchg je rex.B (bad) in jge lret and test mov xor scas (bad) xchg lods or mov or andl jbe jl movsl rex.WRB jne (bad) jl fwait xor sub js (bad) mov sub mov and (bad) and rol jno (bad) jns jl and imul sbb (bad) lcall sub scas (bad) (bad) fsubl (bad) (bad) (bad) (bad) or jg sti (bad) lcall ds xor (bad) (bad) or rex.WX testl xor mov loopne mov test sub pop jl xchg sbb or sub outsb jbe faddl add repnz fs movslq and xchg jae and pop out imul out push movsb (bad) cli xor mov movzwl movsbq mov lea movsbw not movabs mov jmpq int3 add and jle iret (bad) scas sub hlt test xchg popfq (bad) rolb out sahf sub rex.X (bad) mov push int3 rex.RX pop lret stos and and or fdivrs adc push (bad) in sbb or fcomi (bad) shrb iret (bad) sbb lcall lahf cmpsb cltd mov (bad) (bad) inc retq jnp mov mov adc sbb cltd or in fisttpl cmp iret adc mov (bad) lret scas (bad) or adc (bad) pop insb hlt mov je push mov adc (bad) in add pop mov sarb stos repnz pop adc and jmpq test jmpq je rcr lea cmc stc push ror sbb or bsf mov cmp sub movsbw setno lea jmpq jmpq jmpq jmpq add rex.RXB gs outsl fs imul add jbe andl mov (bad) pop cmp and cmpsl data16 jmpq jnp mov (bad) out test mov (bad) rorl icebp rex.B rex.W pop lret sub rolb std and (bad) (bad) (bad) (bad) (bad) lret sbb or add movsl fstl mov mov cld (bad) lcall (bad) rorl (bad) lcall callq loopne xchg ja push (bad) add adc cmp (bad) push addr32 cli rex.WR loope push fldcw enterq cmpsb rex.W loope clc movsb xchg xor movabs rex.W sbb rex.XB andl push xchg xchg xor (bad) add hlt xor (bad) int fwait movslq (bad) sbb repnz and (bad) push iret sbb out xchg sbb (bad) (bad) jmpq cmc cmp jmpq sub mov hlt adc rorb mov loopne xchg pop jb or pushq mov sbb es outsb test (bad) xchg sbb sub jmpq (bad) pushq or or adc (bad) (bad) imul movslq (bad) cli (bad) lcall cmc mov mov lret mov in pop (bad) push (bad) loope add mov (bad) rex.WRXB (bad) scas (bad) xchg enterq lahf sbb test and rex.R (bad) imulb imul imul lret movabs sbb sbb ds test fidivr or mov lret gs scas xchg cmpsb (bad) jmpq idiv cmc cmp jmpq shr mov inc add inc add shrd mov test shr jmpq jbe outsb fadds and jb and push test pop cs shll movsl jne xor sub icebp (bad) test negl fldl (bad) xchg (bad) (bad) mov add js jo (bad) (bad) (bad) (bad) (bad) cmp movabs xor cmp (bad) sub scas jne bnd push jg jb (bad) (bad) mov and (bad) jmpq xchg rex.X cmpsb test mov (bad) sbb rex.X (bad) in movabs xchg outsb es adc (bad) xor (bad) add jg sub psubsw cmp cmpl (bad) stc add jmpq je stc cmc stc cmp jp je jmpq sub mov or lock rex.WRX rex.WB jo rex.WRXB jmp (bad) sub (bad) cmpsl (bad) and test stos push cwtl sub adc or sub add jrcxz sbb mov rex.WB fiaddl outsl push xlat std std (bad) (bad) fisttp mov hlt mov test xor gs (bad) (bad) fbld cli (bad) lcall mov pop and adc jnp out out (bad) mov xchg xchg adc rex jns mov mov (bad) or cltd or out jg (bad) sub cmp movabs rex.W (bad) sub mov jnp add enterq rcrl cltd rex.WRXB in sub nop loopne sbb xchg idiv xor adc sub cmc movsbw mov xor (bad) cmc neg mov bsf add xadd bsf movzbw ror shr js ror mov neg not add bswap mov mov jmpq jmpq mov cmc bt sub cmp cmc cmc clc repnz jmpq jmpq mov and jge hlt adc loope mov sub movslq addr32 rex fwait jmp cli pop (bad) sahf (bad) mov ss (bad) jle (bad) int cmp (bad) outsb (bad) (bad) (bad) (bad) and jp movabs xchg add lods insl add xor hlt mov test rex.RXB xchg rex.B mov sub movslq (bad) (bad) mov or lcall repz xor or mov (bad) callq (bad) in test stos rclb or nop sbb mov in insb mov adc (bad) int3 movsb fldcw sbb callq jne imul fstpl outsb movslq mov sub je not movsbq movsbw mov jmpq jmpq sub jmpq iret xchg xor insl pushq xchg cmp imul xor jmp push push (bad) imul and (bad) rex.R or stos fmuls (bad) pop xchg xor loop mov push jns cmp movabs mov movslq rex.WR sbb pushq loop or cmp (bad) (bad) mov pushq pop and hlt movabs repnz (bad) (bad) decl retq imul add (bad) scas callq test pop cmp scas mov pushq mov mov or pop (bad) enterq rex.W lock sar or ja mov movsb (bad) loopne sbb rex.WRX scas jl pushfq int3 (bad) rex.WR mov paddusw push (bad) cli adc (bad) jp orb out cmp (bad) cmc mov test cmp mov shr sub seto sar mov test mov seto push bsr ror mov stc shld btc push shr mov add movsbl push movzbq ror or rcr push shl push (bad) testb (bad) mov movsbl mov clc movsbl btr ror mov cmc or jne je test clc or jmpq je stc clc add test stc jo cmp jmpq jae clc cmp jmpq cmp jmpq jmpq jne ror (bad) icebp add adc not xor sub bt rcl mov cmp cmc clc sub cmc clc jmpq add add add add add push add add test fsubrs lock or and cmp (bad) stos pushq stos nop stos shrb stos loopne add sbb stos push stos add add pop add add test test test cmp pushq test mov test or cmp fsubrs lock clc stos add lods and lods lods rex.W add add add int3 add add movabs clc movabs and movsb rex rex.W push movsb pop movsb (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq add add add add movsl rex push movsl (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb test and push stos (bad) stos jo subb stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos test mov mov stos loopne callq stos add lods sub lods rex.W push lods js subb add add movsb test mov mov movsb shlb movsb lock clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb xor rex.W test test test test stos mov stos loopne add xor add test callq test adc sub stos rex.W push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs lock clc stos add lods and add add cmp pushq test mov add add add clc lods add or add add (bad) add movabs mov movabs clc movabs and push movabs add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add sbb xor scas push scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add add (bad) add add add movabs sub movabs pushq movabs movabs movabs callq movabs xor pop movabs andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos lock clc stos add lods and lods lods rex.W (bad) lods pushq add loopne add add lock add sbb add add sbb xor add add or sub add shlb movsl mov loopne rex movabs cmpsl shlb push test test test rorb add add add movabs or or add movabs add add cmpsl rex.RB rex.WRB add not setno rcl push rcr xor ror push ror or push add push neg mov and mov bt cmc stc mov rcl ror not xor setnp jmpq divb mov or lret add (bad) (bad) lods and adc cmpsb xor xor pop cmp cmpsl (bad) xor xor mov (bad) jg (bad) pop or out (bad) (bad) (bad) mov loop mov in movsb (bad) cld xor int rex.RB (bad) (bad) rex.WR adc insb faddl pop outsb or push push hlt fwait jp add in jb cmp mov push loope jmp xor mov movabs (bad) lcall (bad) sti (bad) lcall lahf jmp (bad) pop and negl mov pop stc jl xchg and xchg (bad) scas nop rex.WX (bad) xor in adc or out xchg lods rex.WR pushfq add stos or sub out test sahf retq mov hlt cs rex.WR lods ffree pop mov andq mov sbb mov (bad) sub mov rex rex.RXB (bad) fsubr (bad) enterq ss idiv jge sti gs and (bad) cmpsl notl jle sbb sbb pop xor lret movslq and (bad) sar clc maskmovq notl (bad) leaveq f2xm1 mov lea out lea or in xchg mov (bad) lcall push push (bad) (bad) (bad) (bad) mov (bad) xchg jg lea (bad) js rex.WRXB cs adc sti rex.WXB loopne out (bad) in mov mov loope (bad) (bad) jg mov movsl push rex.WRX test pop in mov xchg stos rex.XB movabs mov xor (bad) lea rex.W out notb test push sub sar mov bt clc jmpq jmpq jmpq (bad) (bad) push rcll jl retq or loope push adc push xor repz sub (bad) pop (bad) out frstor out xchg fwait sti xchg loop push shll (bad) es out pop cmp repz push adc rex.R (bad) (bad) lcall cltd cmp sub movsl (bad) jmpq jmpq or pushfq or rex.WRB jg callq stos jl xlat adc cld (bad) (bad) jg ss sbb (bad) lcall pushfq (bad) mov xchg (bad) jnp or shlb fistp jae pop stos jns in mov push jmp pop sub hlt cmp rex.WRX insb je mov and cmp adc fidivr sbb in pushq add cmp movsbw jnp lea lea jmpq ja jmpq stos imul xchg and push (bad) scas pop lea pop outsl mov rex rex.RX data16 add jp imul pop out lods pop in add or je sub movabs sbb idivl rex.WX rex.WB sarl rex (bad) mov data16 (bad) fnstcw (bad) sar fidivl gs mov xor mov and rex.WX mov movabs xor cwtl xor rex.W div movabs lock ss (bad) (bad) (bad) xchg mov int3 pop rex.R rex.R or pop loope xchg jns jle imul jmpq push popfq outsl movabs xchg and xchg (bad) mov push hlt adc mov in and cs xor mov (bad) sbb xor xor outsl in out insl rex.WR jns int3 mov movabs cmp (bad) push (bad) mov (bad) mov or or (bad) movsb or (bad) (bad) outsb ss (bad) mov ds mov xchg imul mov mov addr32 rex.RB and fucomi hlt cli movabs (bad) pslld (bad) jo xchg or scas idivb jrcxz rorl iret mov sub xor pushq add mov movabs rex.WX (bad) pushfq idivl rex.WRXB cmp push cmp outsl pop ficoml lahf jmp (bad) lret fsubp stc mov mov or add pop sub (bad) cmp test sbb imul subb iret jp push xor movq (bad) lods push (bad) stos mov rorl sbb scas pop xchg xor gs adc adc stc (bad) xchg icebp sbb outsl rex (bad) (bad) (bad) lcall std (bad) (bad) jg je (bad) outsl (bad) mov (bad) mov movslq (bad) scas cmp pop mulb adc retq pop jge (bad) jrcxz insb cmp lods cmp pop rex xchg pop scas (bad) (bad) xor imul (bad) repz fwait push test repnz out hlt sbb cmp jae test rclb mov rex.RX sub cmp jnp rex.RXB mov shrl pop cmp jg lea jmpq jae jmpq jmpq add push push push rex.RX gs gs outsl jb add int3 out hlt callq repz neg and add ror jmpq jmpq cwtl js jp and fstl imul jne sub mov mov fistp pushq mulb cmp xchg cmp movabs fisttpl (bad) (bad) (bad) (bad) (bad) jle mov iret ja fisubrl jmpq out movabs repnz or clc mov jo (bad) test push jmpq jrcxz std (bad) (bad) (bad) jnp in cld sti (bad) lcall or ja (bad) jno popfq outsb lret cmp pushq test cmp adc sarb or xor adc rorl jmpq in push out cwtl mov scas adc pushq cwtl ja cwtl and (bad) xchg mov (bad) rex.WRXB sub mov pop lea pop out test ficoml push adc (bad) (bad) int repz rol jmpq lea lea movzbw mov jmpq stc cmc stc test jmpq callq jmpq lea lea jmpq push mov setb mov lods jmpq jb retq je cmc cmp add cmp test cmc cmp jmpq jmpq je cmc stc cmc clc sub test jmpq jmpq callq jmpq je jmpq or jmpq jmpq (bad) add sbbl mov jp fldcw push or mov lea sub and jg movsl fs (bad) sub push repz mov (bad) (bad) lcall rex.WXB xor out notl (bad) (bad) jg adc (bad) lcall push sbb lret test (bad) cwtl or or xchg rex.WX jp rex.X or ss sub fs pop mov push ss adc jnp scas (bad) cmc insl in lahf int3 test pushq mov jne and cmp in movsb fsts shrl insb add sub pop lea sub lret jg (bad) (bad) sbb loop rex.X (bad) and fwait and (bad) xchg xor mov rex.WRX es (bad) lock iret (bad) outsb popfq insl pushq mov fucomip mov jns cld je sahf jge ss mov jae lods rorl rex.RB or (bad) lcall sub incl xchg jb add fsubs cld (bad) lcall mov (bad) lcall sbb out lods fnstsw mov mov jmp (bad) scas out or rex.RX and jp mov loopne (bad) cmc mov lret and rex.WRXB rex.RB int sti xor movabs pop adc (bad) sub pop mov xor jmpq rex.WB outsb movabs or rex.W callq cs nop rex.W push retq and and movsb repnz out pop (bad) jmpq jb jmpq inc stc stc stc rol jmpq cmp repnz jmpq je jmpq jmpq jmpq jmpq mov sbb notb add callq jmpq loopne sbb fs repz (bad) (bad) iret push xchg mov pop sub (bad) mov cmpsl cmp add (bad) lock mov out push jbe lods (bad) (bad) idivl mov xchg pop jo repz (bad) xchg (bad) cmp fdiv cli push mov sbb pushq rex.WX loop rex.X pushq xchg xor cmp movsb and cmpsl jmp mul retq push movabs in loope jne testb mov cmpsl push adc add sbb cmp rex.WRB sbbb jb lret out out cmp or mov adc adc push push pop lret (bad) pop rcl jbe jne jrcxz movslq xchg push imul (bad) cwtl rex.WB fs jno jbe lahf (bad) testl or mov out pop cmp fsts xchg shrb lret imul retq jb out (bad) rex.WRXB sahf cwtl outsb test cwtl ja in insl stos cmc xchg jo hlt lahf (bad) jl sub shll (bad) std adc xor adc andl lock xchg cmp (bad) lcall loopne or movsl cld (bad) lcall stos and in movsb leaveq cmp jrcxz rex.RB rex.WXB test data16 sub jl lret leaveq (bad) mov or jo rex.WRX jge rex.WR je (bad) jb adc rex.X gs fildl movabs movabs test adc mov xchg cli movsl xor cld xorl decb fdivl sub fdivs callq sti mov ja (bad) repz add rol add or stc rol xchg bsr inc mov sub shl mov test cmc jmpq sub sbb (bad) out (bad) adc out sbb xlat sbb jns or xchg enterq cmpl mov and (bad) mov negl movsb (bad) ljmp mov (bad) lcall (bad) (bad) insl rex.WR mov mov cwtl mov xchg rex.WXB or js mov add (bad) push (bad) mulb and rorl (bad) (bad) (bad) mov sti (bad) lcall jrcxz add lahf fwait mov mov sbb cmp jne movabs cmp fmuls out xchg retq jrcxz cmp callq push xchg (bad) enterq xchg add mov maxps adc mov popfq mov adc jne jmpq inc bt stc jmpq or sub not lea jmpq jmpq and rex.B and cwtl (bad) addr32 fstpt xchg out rex.RX lret pop (bad) push (bad) jo ss not es clc add addr32 rcll cmp rex.X mov pop jle,pt int rex.RX xchg or cmpsb push adc leaveq imul (bad) enterq xor nop outsl xlat iret (bad) (bad) sbb loop push (bad) outsl es and (bad) (bad) decl (bad) lcall xor or adc jae xor loope jmp or rorl pop out sbbb rex mov rex.RB rex.R mov and and mov out movsl orl and outsb jbe pop cld sbbl (bad) lahf movsb (bad) adc scas divb cmp fsts cmpsb (bad) (bad) (bad) rex.RXB std (bad) (bad) lea jmpq clc rex.W movabs pop cmp fwait retq pushfq sub rex.XB (bad) xchg in movslq clc cmp push jbe je (bad) out mov movabs std sbb (bad) (bad) lcall mov data16 testb (bad) jae pop std (bad) (bad) fistp mov mov test notl xor loop mov adc jo sbb mov xor rex.W (bad) xor cmp cmp xor mov cmpsl (bad) adc scas insl in (bad) mov fwait test jb and (bad) mov movslq cwtl jo xor insl mov cltd rex.WRXB cmp mov xchg cmp xlat jle jns (bad) in pushfq lret jae or ror mov sbb sbb mov add mov not mov mov jmpq pushq jmpq jmpq add rex.WR movslq rex.B insb outsl movslq pop retq jmpq add cmp bt cmc bt cmp jmpq ja jmpq je cmp clc clc stc cmp jmpq je jmpq lahf (bad) sub movabs lock faddl rex.WRXB mov push out lahf cmp mov pop xchg cld sbb jb cmp in push rol (bad) insb pushfq mov movabs (bad) iret (bad) scas jl (bad) mov (bad) (bad) (bad) jmpq stos jmpq mov shrb js (bad) cld (bad) (bad) jg cmpsb leaveq rex.X (bad) (bad) mov xchg xor int imul (bad) int3 pushfq adc rex.WRXB rex.X rex.XB sub sub out vmulpd insb xor (bad) rex.RX sti popfq cmp cmp rex.WX (bad) xchg xchg fmull jb pop rex.RXB rex.WRXB add adc rex rex.WRX fmull pop rex.WX (bad) (bad) rex.WRXB xchg sub stos cmp not not mov movsbw not mov mov retq test jmpq jp (bad) test gs callq sar mov cmpsl outsl pushq adc rex.WXB rex.WRX ss jge jmp stos sub jmp mov and movslq movabs mov (bad) (bad) (bad) cmpsl mov cmp iret lret pop imull retq lea pop and cld (bad) (bad) (bad) pop in retq (bad) lcall sbbl rex.WRXB pop mov sub sub loope test fbstp roll movabs jnp loope lahf enterq fcoml jno lods (bad) mov rolb test fidiv pop (bad) hlt cli jb mov (bad) sbb mov xchg pop in imul (bad) xchg push (bad) cmc test pop mov (bad) jg jo fwait pop jb lods vsubps mov mov xchg sbb mov and mov (bad) push rex.WRX imul lock mov xchg int3 sbb mov or (bad) (bad) lcall movslq cld pop rex.WRXB rex.WRX mov jl jno scas js pop fiaddl pop rcrl xchg xor push xchg jns mov std (bad) (bad) fistp or jno and jo rcll add movsb int3 sahf rex.WR jmpq cwtl rex.WRX pop lret and rcll scas jge rex.WXB rex.XB lods or rex.RXB cmpxchg sbb lahf mov rex.WR lock out pop mov mov (bad) sbb fwait pushq jo callq cld addl mov rex.R (bad) lahf push xchg push pushq movsl and mov mov out jmpq callq rex.WRB sub repnz sbb scas mov (bad) mov pop sti sub (bad) (bad) jmpq adc rex.WRXB adc fimull pop (bad) out or (bad) lcall ja mov (bad) lcall xchg sub sub mov push lret rex.RXB mov (bad) pop (bad) jg lahf lea movabs iret sub jrcxz xchg fsts rex.RXB (bad) jno clc mov ja push pop add jle ja (bad) xchg (bad) push je jo out add mov rex.XB out (bad) jp rcll pop and loope adc sub jp fsts add mov cmpsb popfq in rex.X push (bad) push int3 sbb rcrb rclb xchg cmpsb test rex.WR pushq callq (bad) ss pushfq rex.WX popfq je setle xchg mov movsbw jmpq jae stc clc sub jmpq jmpq jae test bsf mov bsf mov sar add mov bt movsbq mov test clc jmpq je jmpq xchg or and xor vandps mov roll lock xchg xor rex.WX xchg imul icebp andl outsb (bad) (bad) (bad) fnstsw sbb cmp (bad) (bad) mov out cld (bad) lcall rex.WRB (bad) lcall mov push adc je (bad) pop mov and imul (bad) iret (bad) int repz add rex.XB callq imul pop mov jle push or mov jle movabs fnstenv (bad) pop add mov movabs rex.WXB rex.WB ds sarb rcrb (bad) jmpq rex.WB rex.W rex.WR push rex.WB cs rex.WR rex.WR xchg xlat add stc test stc cmp or jmpq test stc movsbw mov inc stc bswap mov sub inc sub not jmpq jmpq jmpq jmpq mov (bad) lock add sar add not mov jmpq imul mov (bad) scas rex.RX mov adc clc jo xchg xor rol retq test rex.XB xchg shrl mov (bad) (bad) (bad) jg (bad) pop (bad) cld (bad) lcall mov lods (bad) repz int3 fildl icebp adc push rex.X imul (bad) cmpsl test pushq (bad) and loope push iret hlt sub jle sub xchg (bad) rex.WRXB mov xchg push lea cmp (bad) add (bad) cld cmpsl shll test rex.X rex rex.RXB rex.WRB rex mov sub movabs xor jrcxz jns add pushq cmp cmc jmpq je stos jmpq jmpq jmpq pop xor mov mov sbb sbb cmp mov jge test jmp cli adc push (bad) mov jno out xor mov mov fsubrl (bad) je sub mov pop outsl (bad) jg movabs icebp mov addr32 popfq sub xchg frstor (bad) movsl (bad) mov pushq (bad) mov lret mov movabs xchg movabs (bad) or pmaxsw rorl ss mov enterq mov push jb add and lock (bad) out (bad) sar cmp rex.WRXB jne lods jp (bad) rex.WRXB rex.WRB fwait adc rex.B (bad) rex.R rex.R xchg push mov rclb cmpsb test and fimull pop sub and movslq gs imul (bad) jae add enterq clc rol jmpq callq cmp add jmpq jne clc movb cmc bt cmc stc test jmpq scas fbstp and push mov mov stos sub mov retq movslq fnstsw fimull sarl movabs ss mov (bad) mov out repnz (bad) (bad) (bad) lcall imul push xor jbe ss xchg mov repz mov fiaddl sbb xchg int3 std faddl (bad) retq rex.B fucom jns cmp (bad) mov (bad) (bad) mov adc jl jle xchg pop sub push (bad) ss fist fidiv xor cmp mov (bad) out repnz (bad) (bad) jne rcl jae mov (bad) (bad) and push add rex.WRXB adc sub movabs lret xchg mov mov push pop pop jmpq (bad) xor stos and cmp pop jo fldt movabs jmpq es sub jno add (bad) std and xor callq rex.X pop mov cmp (bad) (bad) jg cmpsl (bad) in gs mov sahf sbb lea shll ja out (bad) pushq push rex.WRXB sti sub mov (bad) mov (bad) pop adc subb jne sahf (bad) jmpq repz xchg (bad) cli movsb fldenv sbb scas pop jmpq stos or stc scas ja std push (bad) pop movslq shrb js scas add rex.WB hlt xor in jne rex.XB and (bad) xlat adc cmp jae rex.B sbb fs (bad) movabs rex.RX idiv not bswap movsbw lea mov jmpq jmpq jmpq adc retq cmp jmpq pop loope gs xchg jnp outsb out sahf lcall rcrb pop movabs imulb sahf sahf es out (bad) sahf pop xchg pop (bad) gs es sahf (bad) shrb out cmpsb fild in movabs stos sahf push fisubl negl cmpsb test (bad) mov (bad) sti imul add out cs and (bad) out ss sahf (bad) imul (bad) lahf out mov insl sub out rex.WRX cmovb cmpsb (bad) nop sahf fstpl movabs (bad) es rex.WXB sahf or (bad) in retq sahf rcrl fsub insb add retq jrcxz xchg out (bad) scas callq rex.X and stos sahf test cmpsb jle sbbb (bad) gs (bad) cmpsl lahf (bad) pop out stc callq pop cmpsb movsl in movabs movsb (bad) cmpsb test in mov pushq sub out add insb int3 cmpsb movabs es out (bad) movabs fidivr (bad) out xchg setle stos jno out (bad) retq fs xchg out (bad) test (bad) rex.RXB mov movabs sahf ss rex.WRXB xchg out loop adc (bad) (bad) (bad) out (bad) js cmp and es add cmpsb and sahf mov int3 sahf sbbl cmpsb add loop cmp out movabs xor jle sahf loopne (bad) in (bad) sahf notl cmpsb jle movslq mov movsl mov in inc retq retq es xchg out enterq es pop shrb rex.X jle,pn ja jle lcall in loopne rex.X movabs sahf adc lret test xor cmpsb jg outsl sahf movabs cmpsb and mov fildl cmpsb in (bad) sahf mov mov sahf (bad) out cmpsb jrcxz (bad) outsl (bad) and or cmpsb rex.X fs stos out loopne out xor sub imul (bad) cmp and rex rex.WRXB rex.RB push loop pushq shl push pop fimul js (bad) (bad) sahf (bad) jae sahf xchg jns rex.XB es stos cmp sahf (bad) imul test repnz sub cmpsb movabs es pop scas mov and movabs es shrl jmp out loope rex.X in out jmpq out cmpsb movabs (bad) sahf mul icebp sahf (bad) sbbb sub cmpsb sahf (bad) negb and mov add movabs jo cmpsb retq (bad) out rcrl xchg lret and retq sahf jge xor sub retq push pushq cmpsb movabs fildll lcall (bad) sahf or movabs (bad) negb es movabs lods cmc (bad) jrcxz out mov out xchg rex.X cltd loop out cmpsb in and lret (bad) stos sub loope int cmpsb rex.B mov out movabs loop cmpsb rex.RB scas sahf xchg adc sub orl mov mov lods nop rex.B out retq pop pop out xchg rex.R loop sub (bad) cmpsl or sahf xchg rex.WXB mov add ss (bad) stos sub (bad) addb shll imull cmpsb add fs (bad) rolb loopne retq sahf (bad) or fadd cmpsb andl adc mov and jbe mov rex.B jb sahf mov loope rex.XB in stos out (bad) jg mov (bad) out sub out bnd fisub loopne pushq xorb (bad) mov xlat in out add sub xchg loop mov xchg cmpsb ds stos sahf sti xor sbb sahf mov cmpsb gs xchg adc (bad) (bad) in out sbb pop (bad) out and out cmp (bad) imul pushq sbb enterq (bad) rcrb (bad) movabs fwait cmp (bad) out movabs xchg imul sahf add (bad) retq je (bad) movsb xchg frstor stos (bad) lret mov out cmpsb in cmc xchg sahf hlt cmpsb movabs es ficomp fsubl xchg stc cmpsb rex.RB sahf loop movabs imul add cs jbe stos jno out sti test rex.WRXB test retq in cmpsb and mov sub sahf pandn (bad) (bad) stos sahf rex.RXB loopne and movslq xchg fs cmpsb movabs sahf sahf sub outsl insb mov sbb movsb pop sahf xchg sbb fnsave jb std loope sahf pop pushfq cmpsb (bad) rex.WB sub cmpsb loope es jb sub sti mov jmp jb (bad) pop jae sahf jns cmpsb add (bad) cmp sub cmpsb rex.XB es rex.WRB movabs jle sahf std cmpsb (bad) sbbb stc xchg mov retw sbb (bad) out pop sahf ror out in cmc rolb out fs (bad) fsub fptan retq mov in (bad) jno insb xchg int3 movabs sahf mov cmpsb mov stos cmpsb ds test out jl jg (bad) rcrb sahf out cmpsb and stos cmpsb rex.WRXB test negb es jo (bad) jg loopne xor ss movsl (bad) out out cmpsb add cmc jae mov jle sahf nop cmpsb movabs (bad) sahf fld cmpsb movabs mov rex.WX (bad) jrcxz std rex.B int3 mov cmp out test jrcxz jb jrcxz fwait cld cmp sub test pop out jg xchg (bad) out rex.R imul mov gs pushq sub sub insb sbb sub out and (bad) and cmp rcrb sahf mov adc sub stc cmpsl addb out test out movsl lods xorb out movslq fs lods jnp out (bad) rex.WB in cmpsl mov rex.X out cmpsb add in std mov add scas jrcxz rex.RB (bad) sahf idivl pop and add (bad) fs add and iret ffree sahf (bad) (bad) fisttp retq out cmc repz gs xchg add out or stos out adc loope adc and out sub out cmp loope out rex.WRB mov cmpsb (bad) sbb (bad) or jae sahf xchg mov rex.X stos sahf clc xor or (bad) mov in (bad) sahf (bad) pop jg add test (bad) fdivrp mov outsb faddp sub out jbe sahf int3 es rex.WRB sahf movabs out ja push (bad) pushq cmpsb fistp rcrb (bad) movabs adc cmpsb gs xchg out rex.WRB sahf and outsb or outsb pushq mov test (bad) rolb int3 jns sahf in jns out (bad) lcall rex.XB callq rex.WB cmpsb andl movabs stos sahf and cmpsb sbbl and ds jrcxz and rex.WRX sahf (bad) out lret pop lods jae sahf xchg xor or cmpsb and movsb addr32 test in out ja xchg out out (bad) stos fnstenv es xchg out (bad) repnz out out rcll and es mov loopne out or rex.X movslq (bad) iret repnz enterq (bad) movabs callq (bad) (bad) (bad) insb movslq (bad) xchg (bad) jmp (bad) (bad) out cmpsb movsl in (bad) sahf neg cmpsb add (bad) sahf pushq (bad) rex es (bad) (bad) repnz es out test fildll stos out (bad) (bad) movabs pushq out enterq (bad) jrcxz out mov decl mov mov nop xor mov add test movabs negl cmpsb test cmpsb add (bad) stos std testb cmpl rcll and or rcr rcrb sahf out rex.WB sbbb mov cmpsb ficomp (bad) sahf pop cmpsb insl (bad) movslq (bad) or repnz adc (bad) sahf jg sbb push pushq cmpsb rex.B out and rex out sub rex.X out retq sahf and sub sahf (bad) out movslq mov movabs es out pop test rex.RXB rex.WRXB lock out out (bad) xor imul sbbb rex.WRXB loopne or jae sahf xchg add sub jmp out xor es cmpsb in fistp es out repnz movslq retq pop jno and retq and iret add (bad) (bad) mov mull (bad) out mov loopne xchg retq rex.X fsubp iret cmpsb adc sahf xchg (bad) cmpsb (bad) (bad) stos sahf or cmpsb rcrb sahf jb ds (bad) sahf push cmpsb cmpl (bad) out roll add out cmpsb lahf (bad) sbbb negb es and rex.RXB sahf stos loop xor jrcxz jne outsl sahf test (bad) and jnp (bad) jmp (bad) icebp jg (bad) pushq pop out stc and sahf pop stos out add out cmpsb retq fimul (bad) movsl mov shl out sbb rorl sahf (bad) rex.WRXB movsl and mov imul rex.WRXB test retq repnz add rex.WRB movslq (bad) (bad) jl cmpsb jle in repz (bad) shlb add xchg sahf movabs movabs test adc lods loopne insb out fiaddl out (bad) xor (bad) es or test test out or and fs sahf jns movabs loop sahf iret int3 cmpsb retq sahf imul loope retq xor lods cmpsb rex.WRXB rex.RB add movabs sahf xchg shlb (bad) cmp mov rex.WRXB out jrcxz in pop sahf sahf mov jae movabs (bad) (bad) sahf (bad) cmpsb rex.WRXB add rex.XB stos sahf or cmpsb retq es out xchg (bad) negl lods mov out out fwait sub (bad) ffreep out mov pop pushq stos out mov movslq cmpsb rex.B sbbb shl test movabs pop mov out out mov mov movsb int3 out cmpsb movabs negb (bad) rcrb sahf (bad) mov addb sahf (bad) jmp addr32 add (bad) negb shrl mov sti mov cmc pushfq cmpsb add rolb movslq loopne out cmpsb push shlb and sahf jle (bad) fldenv rex.XB xchg mov ja (bad) (bad) out pop mov (bad) cmpsb and fs es (bad) out lods out jrcxz out jg je je jo (bad) (bad) loopne out mov xchg mov retq and in xchg mov in out (bad) adc sub sbb (bad) fdivrl in mov cld subb pop (bad) out cmpsb add stos sahf or cmpsb movsl (bad) sahf stos incb and (bad) sahf (bad) mov (bad) sahf mov and push pushq cmpsb pop fildll sub and roll sahf xor (bad) cmpsb (bad) clc movabs out pop cmp mov movabs (bad) ss movntq loopne pop loop imulb cltd rol fs cmpsb mov jne loopne out lea jp movslq cmp test rex.WRX xchg movabs mul sarb dec test jbe retq mov sub and data16 (bad) jbe rex.WRXB lock (bad) std outsb add mov (bad) mov and pop sub xor (bad) jno out push movabs repnz movsb out pop (bad) sahf (bad) (bad) movabs adcb jle loop (bad) out or sahf sub hlt mov rex.RX sahf mov testl add out mov (bad) adc (bad) out cmpsb movabs sahf sub or fnop jmpq push cmpsb retq sahf (bad) or (bad) cmpsb xor cmpsb sbb shl xchg scas sahf and sahf xchg (bad) movabs (bad) sahf xchg lods cmpsb and and mov pushq lret fisubr (bad) sahf (bad) test mov push cmpsb movabs shl push add sahf jge xor fisttp in add shlb fsubs xchg jno lahf es test add (bad) out sub (bad) pop cmpsb in movabs jle (bad) jle callq sbbl (bad) out out cs out rex.WRX movsb sub (bad) in test loope mov out fistp mov jbe jg fsubp rex.B cmpl out (bad) mov out (bad) adc stos sahf xchg sbbl cmpsb add sahf xchg sbb icebp fsubp hlt repz sahf cltd (bad) mov sahf callq (bad) out cmpsb rex es jg cmpb ficomp movsl shrl sub cmpsb and (bad) sahf cmpsl rcrb loopne data16 and (bad) sahf imul rex.B out mov adc xor xor movabs es mov out out cwtl adc pop cmp xchg fisubr xor (bad) (bad) sahf imul pop rex.B sahf cmpsl cmpsb movabs es fimul jrcxz cmp rex.RX in ja loopne add sahf sbb mov push (bad) cmpsb movabs out and out cmp clc test cltd int3 cmpsb rex negb (bad) nop sahf (bad) pop sahf movabs (bad) sahf xchg movsb cmpsb jle and (bad) (bad) shrb sahf cli imul in mov jno pop fsubrs jae cmpsb rex.R ja test movabs (bad) sahf xchg mov movabs pop sub jmp (bad) (bad) es mov pushq lret rex (bad) sahf fwait cmpsb add (bad) (bad) (bad) sahf insb leaveq xchg sub negb es insb cltd outsb and in out cli movabs mov (bad) es sbb out mov out sbb rex.X shll or adc out (bad) out cmpsb xchg add gs (bad) loope rex.RB fsubp (bad) test (bad) data16 int3 jmpq out icebp xchg movabs loopne jns cmpsb movabs movsb pop sahf xchg cmpsb (bad) sbbb movsb and out sub out sub (bad) movabs (bad) sahf and (bad) jae sahf xchg shll add iret rcrb adc pop ds adc out cmpsb (bad) out sahf out sbb retq sahf (bad) xor mov andb out jb (bad) loopne out jp loop cmp out cmpsb movabs sbb rex.B sub mov lods sub data16 (bad) xchg loop xlat (bad) sahf cmp cmpsb fs out movabs stos (bad) sub out mov xchg rex.X xor (bad) xchg rex.XB lss (bad) xchg out cmpsb xchg shrl jg mov sahf andl retq lea xchg fidiv cmpsb xchg subl jg and out mov repnz imul outsl loop xor rex.XB out mov repnz pushfq out cmpsb rex.XB es (bad) cli (bad) movabs add out out sbbb push pushq and sub out rex.XB (bad) repz xor jmp jg out mov cmp sub pop out cmpsl fildll jns icebp rex.X ss mov jne faddp test xor rex.RB out rex.WX (bad) push jns in out pop add and loop mov stos and jbe es imul jbe rex.WRXB lock (bad) out jnp add (bad) enterq (bad) out (bad) cmpsb rex fsub jne and test (bad) lock out out movabs cli loopne out cmc shlb mov fidivl out mov pop out retq (bad) es out lret loop movsb out xchg fistp sahf out (bad) ffreep out out sub (bad) xchg es testl es out cmp test pushq stos out rex.WXB retq cmp cmpsb rex.RB rex.R xor push sti cmpsb loopne imul add outsl sahf (bad) pushfq mov out lea xor and jno (bad) mov rex cmpsb movsl (bad) out cwtl mov out (bad) sti in out rex.WRXB enterq out test pop loop rex.WRXB (bad) out rex.X xor retq out movabs sub out sub jno outsb (bad) popq sahf and es add imulb sub pop outsl addr32 stos out loop incl sub (bad) rex.B cmpsb loopne movabs mov sub pop sahf out xlat xor add add cltd sub add sahf test idivl sahf push rex.WR movsl decl push rex.X sahf scas mov sti out out out jne loop movabs sub sti mov nop add xcrypt-cbc cmpsl xchg test cltd (bad) out mov nop (bad) out (bad) popfq and out rex.WRXB rex.W out cmc repnz outsb sahf std movsl andl sbbl add or mov sub and cmpsb (bad) shlb idiv out mull out adc rex.WRX sbbb movslq mov icebp out mov in jbe mov rex.RXB fnstsw jmp rcrl cmpsl (bad) (bad) rex.RB cmc (bad) sahf movabs movslq mov or out adc sbb and add (bad) (bad) sahf fsubs out loop (bad) (bad) sahf (bad) sub add cli mov xor andl cmc rolb out cmp out lock fs mov fs out pop negb out sahf (bad) sahf fisub inc out cmpsb (bad) movsb rex.B cmpsb test mov movslq rex.R int3 sahf (bad) (bad) out lods out sahf andl retq (bad) sahf movsb (bad) es cwtl rex.B xchg add out (bad) lcall cltd sahf popq fs out (bad) (bad) sahf (bad) and sahf movabs loope out cmc sahf movslq (bad) fsubs out (bad) xor fildll (bad) iret (bad) jg mov xor mov pop setle mull movslq cmp out adc movabs movsb movslq callq (bad) adc fdivp sahf pop sbbb rex.B add mov (bad) retq test mov es lods cmc (bad) jg lret pushq out jo (bad) es jp jmp (bad) xor lods sahf xchg fs out js mov cmpsl movabs jle sahf jg ja (bad) sahf rex.WB cmpsb (bad) out outsl or jg es cmpsb movslq es (bad) (bad) movabs out mov fildll or fs mov movabs in cmpsb fbld xor test push enterq jns out or sahf and lahf mul xor rex.RB adc jno (bad) and out sub xchg xor and jno out cmp out cmp and out mov lahf stos rex.X mov imul rex.B (bad) sar sahf mov fnstenv addb and outsb sahf testl out cmpsb shr and add stos rex.WX outsb sbb idivb jns in out xor andb retq fdiv mov sub test xchg jb sahf sbb rex and push test insb pushq mov (bad) (bad) fsub xchg or add sahf outsl xchg (bad) add add fnstcw in (bad) cltd (bad) adc out pop cmp movabs out cmpsb (bad) jae sahf scas pushq (bad) (bad) es out mov sahf rex.X (bad) out rolb sarb pushq jrcxz out repnz out cli mov out popq cmpl mov roll mov (bad) adc retq movabs and jae mull out lea in out sub add (bad) retq cmp rolb and adc cmpsb shlb out test retq out sub out push movabs movsl out test inc mov xorb push test insb test add (bad) test out cld shll out imul mov nop movabs and add out mov jnp (bad) jmpq or out sub retq out sbbl fsub cwtl add retq jb movabs jb sahf test jg shl je (bad) (bad) test (bad) xchg andl (bad) adc out repnz add pop lock gs movabs pop out cmpsl (bad) es cmp (bad) rex.X xor mov cmp es enterq jle cmc rex.RB (bad) jno out mov out mov movabs out mov nop rex.XB in (bad) loop sahf push roll (bad) mov nop (bad) out (bad) fildl es movsl cmc (bad) jrcxz mov nop (bad) out ja mov loope fsub fildl movabs pop adc out pop out rex.WRXB pop sub (bad) out xchg cmpsb andl es pop xor cmp jno ja loope out cmpsb and imul in int3 rex.XB es rex.WXB out mov push adc outsl loopne lea xchg pop xor sub fs (bad) adc out out insb lock sahf sahf es sahf xchg jb rex.XB es (bad) je pushq jmpq (bad) cmpsb and pushq loopne in xor jmpq movsb mov retq sahf xchg cmp jmpq andb xchg shrl mov (bad) movsb sahf in (bad) sahf rex.WB cmpsb and negb es movslq cmpsb movabs (bad) es out pushfq cmpsb (bad) push mov mov mov sahf xchg (bad) cmpsb test loope rex.XB ja fs out int3 sub cmp lret mov fsubp clc insl mov (bad) pop rex pushq xchg xor or sahf fsubl push cmpsb add sahf xchg jns movslq movabs sahf ja rex.B (bad) sahf out mull out sbb rol (bad) out cmpsb movabs in (bad) sahf (bad) enterq es out cld retq vsubss lock mul out lea and (bad) stos or (bad) pushfq cmpsb andb sub fbstp sahf test (bad) sahf callq negb in movslq out sbb retq and enterq rex.X add jg (bad) out cmpsb movabs (bad) negb es mov sahf (bad) xor adc sub cmpsb rex.X sahf xchg xchg cmpsb retq fs sub loopne out (bad) movabs pushq jge movabs es (bad) test and jns sbb sahf icebp xor mov sahf sub movabs movslq out popfq jle es jg movsl add sahf xchg pop out fadds scas mov fsubp repz out (bad) jo sahf loopne int movabs (bad) out (bad) sub out fstl repz mull test cmpsb and sahf push in retq movsb pop sahf mov cmpsb fistp movabs out jmpq mov pop sahf mov cmpsb movabs outsl sahf xor (bad) sahf es adcl cmp (bad) jle (bad) mov sahf fdivl cmpsb ficomp (bad) sahf (bad) (bad) es (bad) and mov mov jrcxz fs cmpsb test (bad) sub sahf es cmpsb (bad) (bad) es addr32 and sahf xor fisttp and sahf mov loop sahf fmul cmpsb rcrl sahf shr cmpsb rex es pushq ds adc (bad) sahf int3 cmpsb gs out mov pop sahf mov out push add fldcw out insb jle in jns out test xchg out cmpsb movabs in (bad) sahf mul cmpsb (bad) outsl es cmp mov sahf xor sahf retq sahf popfq cmpsb rex.B es sub mov (bad) sahf es sahf movsb jae sahf xchg (bad) and andb lahf mov sahf push scas lcall mov rex.RB test out int3 cmpsb and out mov xor jmpq mov cmpsl out mov pop movabs (bad) sahf fsubl movabs sahf (bad) (bad) stos sahf sbb cmpsb rex.XB es int mov pop (bad) sahf fsubrp (bad) sahf (bad) mov mov loopne es es (bad) jae sahf xchg scas cmpsb (bad) es stos movslq mov movabs pop outsl out rex.RB cmp test rcrb sahf imul cmpsb rex.XB and cmpsb retq movslq jle sahf rex.RX ss movabs sbb stos cmp sbb movsb pop sahf xchg popfq cmpsb (bad) es rex.B rex.RX rol xchg or ds lock movslq cmpsb movabs gs push movabs in (bad) sahf idivl cmpsb jrcxz es subb movabs sahf push (bad) ja sti es out cmpsb andb (bad) out and rex.X pop sahf xchg in lcall stos sahf cmc pop cmpsb (bad) es xchg (bad) jle in movd add (bad) sahf pop cmpsb loopne fist (bad) sahf rex.WX movabs es cmp sahf rex.RXB mov (bad) cwtl cmpsb mov out (bad) jg xorb jns mul xchg adc jg iret loopne sahf xlat es cmpsb and movabs (bad) out repnz (bad) sahf imull sahf mov stos sahf xor (bad) loopne out jmpq (bad) (bad) in add sahf jae,pt sahf jg xadd (bad) rcrb sahf div cmpsb test (bad) mov (bad) add loopne pushq (bad) movabs out or (bad) enterq and xchg mov sub add push and or cli andb out mov pushq (bad) mov sub movslq add xor out fistpl out adc jns out rex mull jp ja (bad) cmpsl out mov rex.W (bad) out xchg push sahf movsl fildll xor int jg in rex.WRXB movsb and fsub mov add movabs out psraw es sub out jns adc nop shl push mov out cltd mov and and rex.R negb shlb movsb test sahf (bad) rex.WR add gs data16 fsubl out icebp repz out out test add out (bad) cmpsb movabs (bad) fsub (bad) or add fsubrl sub or sub out std cmpsb xor adc mov cmpsb add retq fisub enterq imul and es (bad) xchg push sahf test movabs (bad) out (bad) in out out and add jb jmpq add sahf adc rex mov (bad) rex.RB es jg mov movslq (bad) out (bad) and sahf push outsl movabs addl retq movslq es out lret (bad) jrcxz rex.WRXB std test (bad) sbb andl rex.X mov out fcomi movabs movsb movsl test (bad) sti adc es fsubp pop lods jmp movslq nop (bad) out movabs mov mov mov mov mov mov mov mov mov mov mov movabs mov adc enterq xor mov mov xor add sahf (bad) mov mov xchg fsubp clc out mov mov cmpsb fild (bad) (bad) and pushq add retq (bad) xchg mov mov enterq iret xor sahf test (bad) (bad) loopne out cmpsl add loop mov (bad) and sub mov (bad) cmp fiadd retq add push sub out mov rex.WXB fimul (bad) cmpsb (bad) cltd sub fsub xor push (bad) rolb (bad) (bad) pop mov insl (bad) (bad) sub push cmpsb (bad) (bad) es std (bad) fnstsw fs mov movabs mov movabs (bad) faddp out cmpsb mov rol out cmpsb (bad) test retq fidivr mov rex.WRXB sbb mov rex mov test (bad) cmpsb add mov out repnz out mov out cmpsb movabs mov xchg (bad) shl xchg cmpsb (bad) retq out pushfq adc outsl jrcxz adc fisubr loope stos xchg mov andb mov pop out sub xchg outsl (bad) mov cmpsb rex.WRXB add (bad) negb (bad) rcrb loope mov movsb jrcxz jge xchg (bad) movsb or (bad) cmp rex.WXB mov scas sahf lret sahf movslq xchg or movabs (bad) sahf lods cmpsb jno es mov cmpsb mov mov sub cmp pop ja setb jmpq rex.R or and fsubrp or mov shrl mov jmpq sti fidivr jmpq repnz subl repnz test movsl xor cmp js (bad) (bad) callq xor int (bad) (bad) mov pushq rcrb imul xor ds imul cld (bad) (bad) (bad) mov (bad) mov sbb cmp xlat adc lret and test rex.X clc cs sbb int3 test add test (bad) or jl and mov pop xchg jne or je clc cmp cmc cmp sub test test cmc cmp jmpq jae stc jmpq pushq and fucomip data16 push jae adc sub pop in jnp orl sbb rex.WRX je repz retq (bad) ja jmp hlt rex.RX rex.RX rex.WRX retq enterq cmp mov (bad) jg loop nop and (bad) xchg add jae data16 movslq lods cmp addr32 jrcxz in cld fldt pushfq in or sbb cld (bad) lcall push int3 mov cli (bad) lcall (bad) (bad) fdivrl rol push sub es out lock lock pop out loop jge pop mov fmul js in rcl xchg pop loopne adc scas jl jno (bad) rex.RXB (bad) (bad) jbe fs (bad) mov (bad) push rex.WRX cmpsb (bad) in imul mov pop or sbbl or jmpq hlt push test jmpq jmpq jbe sbb rcl cmc bsf sub jge add btr rcr mov setl mov add jmpq pushq outsl (bad) and jo (bad) out mov (bad) xchg add mov scas sub adc (bad) pmulhw (bad) mov add pop lock cmc (bad) movsb movslq fsubrs test (bad) lcall movsb cld (bad) (bad) mov test cmpsb cld (bad) (bad) (bad) or (bad) insb (bad) mov pop sarl adc xchg xor jo or adc movsb in or pop (bad) cmpsl (bad) divl and pop xchg fadd je pop nop loopne xchg push (bad) adc (bad) lahf (bad) (bad) out mov mov (bad) mov adc test andl subb pushq jmpq outsl lahf insl xlat (bad) and notb int clc pxor mov movsb (bad) repz rex.WRX sbb rclb fstl mov movb mov test adc mov jb (bad) (bad) lcall scas pop pushq callq (bad) callq sub sub add rex.W (bad) movabs repz sbb or rex rex.WX mov jno fnsave rex.WRB (bad) (bad) adc xchg rex.WRXB mov fidivrl pop sarb loop repnz (bad) lcall cs (bad) lcall xor callq jns pop mov clc sbb sbb cld fistl loopne xchg outsb mov (bad) (bad) jbe rex.R outsb jbe ficomp shrl lods push xchg cmp rex.B (bad) and test movsl jge test cmp jmpq je jmpq cmp and push xor js out fmull sub pop xchg std sahf (bad) (bad) jno cmp (bad) ds cmc jge add pop ds add ja out out stc (bad) and (bad) retq adc imul (bad) mov fcomip push add push rex.XB sbb (bad) (bad) jg sti mov push cmp sub (bad) (bad) loope jrcxz rorl (bad) enterq xor movabs (bad) lcall or scas cld mov retq sub rex.WXB (bad) loop adc mov mov jl test jl cmp pushq pop xchg adc icebp icebp movabs jb mov insl sub cmp movabs adc add or xchg xlat and repz lods rex.RB or test movsw in je (bad) jne fs movl movabs lods and (bad) push cmp jnp rcl xchg pop cmpb xor ficoml (bad) jle lea jp outsl xorl (bad) ds (bad) (bad) pushfq in xor pop (bad) lea andl jo data16 (bad) (bad) (bad) (bad) jo rex.WB lcall (bad) pushq mov cmp out jg xchg (bad) imul fwait test pop lods xchg rex.WXB xchg pop sbb (bad) rex.WR rex.WB (bad) (bad) mov pause callq fcompl pushq lock or out sbb mov xchg out add xchg mov lods (bad) (bad) pop rex.X adc mov cwtl cmp in (bad) incl add add xchg stc jmpq mov jle fsubs mov rex.XB rex.WB mov mov test xchg cmp (bad) in lods pop mov and pop cwtl add pop sub jnp rcrb jge mov (bad) sbb roll lahf outsl (bad) lea lock std (bad) (bad) (bad) jl jae sti sub xchg ss push xchg (bad) scas push mov cld sub in jge fwait movsb mov callq lock (bad) rorl (bad) lcall xor (bad) (bad) rex.W (bad) lcall rex.RXB fildl xchg jbe cs jbe movslq cmpsb (bad) mov mov (bad) rex.WRX xchg pushq scas rorl adc scas push lea test mov sahf cs pushq rex.RXB pop cmp xor (bad) retq xor andl cmp cld push xchg retq push fisub andl loop mov pushfq rex.WRXB cmp rcl imul sub add ds add cmp jmpq jl mov jmpq jmpq mov cmpsl adc and pushq and mov push cmp movsb and (bad) fucomip mov xchg cmp rcrl (bad) cmc cmp jg cli mov leaveq sbb cs cld movabs (bad) rex.WRX cs mov or jge sbb (bad) lcall int adc (bad) loop (bad) mov sahf xchg out cmc add sbb scas stos sub jmp stos mov add js clc cs rex.RX sbb loop loopne mov or mov fs add rex.WX pushq lock jle cmp rclb or data16 jnp pop adc mov jmpq in jne int sti rex.WX (bad) mov (bad) out mov insl mov jae jmpq jne cmp test movb jmpq cmp cmp jmpq jmpq loope adc and (bad) xchg icebp sbb movq jge mov (bad) (bad) stos (bad) mov cwtl sti mov ja (bad) rex.WRX sahf pop sub sub leaveq wrmsr push (bad) lea imul lret in repz pop ljmp je stos sub jg pop cwtl shr sub (bad) (bad) jg rex.W (bad) mov (bad) lcall mov jle adc mov (bad) leaveq enterq xlat add and lahf (bad) movsl push loopne jg cmp loopne pop mov scas jl cli xor adc jle insl mov xchg lods in jg rclb xor mov jmp popfq iret (bad) xchg cmp adc jge (bad) fbld or pushfq in pushfq sbb adc (bad) rex.WRX jrcxz rex.WRX test gs repz (bad) stc adc (bad) xlat testb movsb (bad) mov sub mov fisubr fnstsw adc fildl sub (bad) jne in jge and xchg (bad) (bad) movsb stos add lcall pop add lock pop rex.B sub out cmp sbb ds and cld (bad) (bad) (bad) jnp iret stc mov (bad) lcall or (bad) outsb out jbe sub fwait rex.RX or (bad) and (bad) pop in mov test out mulb add lret (bad) push or push jmp cli adc (bad) or or xorl rex.X pushq leaveq sbb pop sbb (bad) pop movsb cmp adc jne rol mov btr sub sbb mov bt sub jmpq jmpq movzbw movsbq lea not not jmpq loopne mov fsubl mov (bad) and sub loopne (bad) cwtl rex.W or (bad) test mov scas pop adc jp xchg rex.WRXB ss adc jrcxz (bad) cmp adc (bad) lcall cmp loop mov xchg xor jle cmp (bad) scas popfq mov (bad) (bad) xchg pop movabs fimul mov movabs clc add es mov lock popq (bad) mov push xchg in sub test jmpq jmpq stos jmpq jmpq adc jmpq jmpq movsb fsubrl xchg frstor mov push jp sub loopne mov mov xor xchg sbb and jno (bad) mov xlat lahf cs cmp (bad) iret (bad) ds xor cmp mov cmpsb gs lret jmp scas pop (bad) mov rolb add (bad) hlt pop cmp or loope and and fnsave mov mov add and cmp (bad) mov mov add sub hlt ficompl cmp (bad) lcall (bad) (bad) mov (bad) (bad) (bad) stos push mov lock scas movsb jo mov fsubs pushq pop mov jns xchg jbe fsubrl mov jne sub xchg movslq sahf rex.WR xchg push mov shlb and sub lret rex.RX xor iret cltd xor fisub mov cmp mov ds and imul jb adc mov or ss and fildll sbb hlt lahf jmpq adc fcoms (bad) (bad) lcall rex.WRB cmc (bad) (bad) stc rex.W lock (bad) ss xchg cld (bad) lcall push xchg pushq (bad) (bad) (bad) in sbb cli (bad) jno and stos mov fstl cmpsl (bad) fxch mov sub sub or add jl es xor cltd add int adc or (bad) mov test jp cli (bad) jb lock (bad) shll xchg or test sahf rex.WRX retq imul sarl rex out jmpq cmp jmpq jmpq push cmp mov js ds or or mov add and mov sub or mov repz ss push fisttpll retq mov xchg repnz stc adc notb jg rol jne fdivl mov jbe rex.R movabs jb mov scas jge jmp movabs sbb fisub and sub pop cmpsl xchg gs jle enterq ror jbe rex.WXB or lret scas rex.RX sbb cmp mov rex.X popfq mov (bad) fisubrl add (bad) cs jb orl sbb out cs (bad) cmp mov adc movabs movabs add (bad) enterq or push mov pop (bad) (bad) in je callq insb movslq (bad) jg (bad) ja rcrb test mov sub jmp (bad) test movslq xchg pop mov mov (bad) retq test jbe or sub mov add mov (bad) (bad) lods cmc in xor (bad) sti jmp push rclb rex.RX (bad) (bad) adc xchg pop (bad) sbb jp cltq rex.WRX push cld xorl pop jmpq (bad) ficomp pop loopne mov pop outsb (bad) std movsl fs sti and mov (bad) mov adc mov shll (bad) and sbb mulb (bad) adcb xchg rorb (bad) (bad) fistp std (bad) (bad) mov ffreep ss out lahf popfq (bad) pushq callq movabs movabs sbb pushq imul (bad) lret loopne in xor and xchg jb mov push pushfq cld xor mov cmp (bad) in in hlt rex.RXB mov cld add callq mov sarb fisubl adc movslq out pop outsb (bad) std jne (bad) loope rolb (bad) stos adcb sub (bad) imul callq mov insl cmp loopne cmpsl clc mov mov test and stos subb (bad) jge (bad) sbb (bad) lcall xchg (bad) xchg (bad) adc (bad) jg sub (bad) cld (bad) (bad) mov sbb cmp (bad) sbb (bad) jge jmp mov rex.W negb fs lea sbb (bad) jne and rex.X pushq push (bad) or gs incl sub sbbl xor cwtl rex.WRX clc shrl repz stos (bad) leaveq or sbb test mov js pop push ss (bad) std fcompl (bad) loop sub lahf cli pop nop fdivr xchg lret (bad) cmp (bad) (bad) pop movb (bad) (bad) lock (bad) rcl (bad) and mov or lods jl sub leaveq (bad) (bad) rex.WRX sub add push mov int3 (bad) fs loopne mov sbb loopne decb add cmp shlb (bad) stc imul cmc add jmpq dec clc rol jmpq movzbl mov retq jmpq lea bt mov shrd neg mov btc bt bsf ror add cmp dec xchg shr add mov dec add not not jmpq (bad) pushfq jns jrcxz mov clc fldt scas (bad) lods push je mov stos cmp xlat sbb es jl (bad) push xor mov xor (bad) rex.WRX (bad) cmp cwtl ja (bad) rex.WRX (bad) (bad) (bad) lcall jo xor sub (bad) mov icebp rolb (bad) rex.WR insb mov (bad) jg sub (bad) idiv (bad) lcall test xchg pop std popfq or fnstsw pop imul cmpsl divl fucomp jl sub pushq xor (bad) add (bad) jge adc xor sbb fisttp cli fstps repnz gs add or (bad) imul (bad) fistpll cmpsl pop in rex.WX adc rorb repz pop sbb out pop in mov (bad) lods pop insb mov mov mov es push rex sbb (bad) callq (bad) xchg xor or fdivl imul (bad) sbb jge (bad) (bad) (bad) xor out mov cmp mov sub cltd (bad) adc adc push test xchg xchg xor lods xlat fbld rex.WRXB jo pop mov rex.XB mov cmp cld (bad) lcall rex.R xor repnz cmp push (bad) stos test sbb (bad) sbb fistpll rep lahf cmc (bad) lods imul pop lret fcomi mov lods add cli xchg scas (bad) std pop mov pop andb jl pushq add rex.X out (bad) mov rex.X (bad) addr32 rorb test movabs lea rol mov cmc stc test add cmp movzwl cmp cmc mov clc stc add bt mov bt jmpq jmpq hlt xchg sub cmpsl push rex.X (bad) (bad) divl (bad) sarl (bad) ja xchg xor rex.X mov rex.WX clc and movsw or rorb imul test adc (bad) (bad) (bad) jge (bad) adc std (bad) (bad) mov (bad) and rex.WXB cs callq rex.WB fs (bad) pushq outsb js sub mov rex.RB pop jne jbe or rex.WR mov (bad) addr32 mov movabs (bad) sbb (bad) mov int jmp mov mov cmp jmpq jg cmp out mov (bad) ds sti mov (bad) rex.WB mov rex.XB repz push rex.R rex.RXB and jrcxz xchg movsb adc gs fcmovnu fs sarl (bad) (bad) (bad) mov js iret scas (bad) mov add rex.WX lahf or mov (bad) jae pop sbb (bad) lcall cmc lahf cmpsl cmp sahf (bad) add xchg rex.WXB cmp (bad) lret (bad) fidivrl mov int movabs xchg int (bad) lock pop xchg (bad) add cltd imul jmpq cs xchg divb callq and imul xchg (bad) imul ds mov lret cmpsl and cmp push or add (bad) lahf sub add jmpq jmpq fidivrl (bad) mov and in xchg cmp sbb xchg cmp rex.R outsl (bad) scas movabs test (bad) lods pop insb xor stos out push repz rex.WRXB fisubl rex.WRX cwtl (bad) pop cmp (bad) (bad) lcall add xchg rex.RX add and cld (bad) (bad) (bad) je (bad) clc or (bad) lcall loopne sub xchg lahf mov mov cmp nop (bad) rex.WX fistl ja fstpt mov (bad) sbb repnz cld sbb mov xor xchg scas pop movabs add fs hlt sub lret fldt add and imul movslq sbb jns cmp or and (bad) mov callq cmp repnz xor (bad) test scas decb (bad) out push (bad) hlt adc or adc sbb (bad) (bad) (bad) jge xchg push (bad) cld (bad) lcall jmpq jo mov cmp mov (bad) in jle pop mov (bad) cmp retq jne xor and outsb mov jg scas fimul movl jp mov clc sub add or je adc and jge lock or adc push push fwait pushq callq fs jb pop (bad) out in cmc test repnz add (bad) ja adc outsl rex.XB (bad) je rex.WB jae (bad) outsb movslq jmpq jmpq nop push mov jmpq xor or xchg mov sbb (bad) rex.WRB lea movsl cmp rex.RB rex.WRB rex.W cmpsl test push mov movabs cmp outsl mov (bad) (bad) (bad) fldl push xor xor cmpsb (bad) out xor (bad) mov xchg sti (bad) lcall mov movabs jns rclb cmp cmp loopne iret rex.WRXB cmc mov mov sub mov push push loope or nop push mov mov rex.WXB repz movsl cmp mov add push or jge or lock xchg or xchg rcrb sbb adc rex.R rex.X jmpq xor loopne add xor mov retq jmpq jne clc jmpq cltd (bad) cs (bad) and in pushq mov xchg hlt mov test add lret rex.WXB rex.WRX ja add push rex.WXB cli rex.X cmpsb out rex.R imul adc push (bad) mov sbb sti pushq insb xlat callq lcall fsubrs (bad) cmp adc (bad) sub test (bad) out (bad) clc (bad) pushfq and mov add cmp movabs bnd cmpsb icebp cmpsb cmp (bad) mov idivl xor sbb es rcll lods jl int3 sbb (bad) xlat adc rex (bad) sub xor mov adc sar mov clc add clc stc test test jmpq stc xor jmpq jne xchg mov shrd or sub mov data16 (bad) or (bad) mov jmpq mov jmp mov in rex.R sbb loop pop xor cmp jnp (bad) xchg sub (bad) out std adc out (bad) or and cmp (bad) shll test (bad) pop addb out vdivss (bad) (bad) mov cmp push icebp jno xchg pop cmp movabs stos xor mov push add std in xchg rex.XB sub sbb enterq and cmp rex.RXB add mov adc (bad) cs (bad) xor movabs je,pt bswap mov not mov jmpq test sub bt jmpq jmpq xor scas sbb and lret rolb test cmp icebp in xor nop js movl mov outsb (bad) jns addr32 in push (bad) movsl adc mov lahf jle fucom jnp jrcxz cltd xchg cmp push (bad) sub (bad) jb sub cwtl movabs jmpq (bad) pop movabs (bad) rex.WRXB add rex.RXB mov (bad) (bad) fisttp sti (bad) lcall scas jne or xchg jnp stos adc xchg (bad) iret scas ss lret out in mov fdivrp (bad) lock rex.WB adc mov adc pushfq movabs loop imul jge push cmp xlat adc (bad) int3 jl (bad) (bad) rex push cs mov ss testb ja adc sub shld add bsr mov test rcl mov test clc repnz jmpq jmpq jne jmpq jmpq sub jmpq clc rol test jmpq and xchg in and cs (bad) mov xor out (bad) ds mov (bad) outsl sahf (bad) mov fwait imul adc in fsubrl rex.X cmp test int3 sub or adc std (bad) lcall loopne (bad) loop jno test popq (bad) ja jne (bad) lcall (bad) cli (bad) lcall data16 (bad) push rex.X out ja faddl pushfq (bad) jmpq pop (bad) mov rex.WRB lea movabs repz jge mov movabs add and and rex.RXB in imul ss insb mov mov fcmove (bad) iret rex.WRXB (bad) fist pop (bad) cltd sub mov lods popfq fnsave addb rcll push push rex.WB rex.WRXB rex.WRX cs insb add movslq (bad) out and or cltd rol add pop data16 jl cmp and sub sub js addr32 jo sub jle or rex.RXB rex.RB mov (bad) pop or hlt mov (bad) pushq mov stos mov mov (bad) (bad) jmp rex.WRX movabs push lret xchg xchg xchg (bad) cmc adc rex.WB push sub fldl out nop jne and lcall test sti (bad) lcall cmp mov (bad) push lods mov repz cli flds out fisub lcall (bad) (bad) add insl adc sarb fdivl sbb clc callq movslq and outsl mov xor pop push fs (bad) rex.WRX test add mov roll jmpq xchg lea movsbw setg mov movzbw mov not movzbw lea jmpq jmpq bnd mov and push jp rex.B iret rex.WRXB (bad) (bad) sub mov (bad) nop lock jbe std cmp out and push outsb and mov icebp (bad) rex.WR (bad) lcall rex.XB jg int js sub mov mov clc cld (bad) (bad) (bad) (bad) and pop push sti (bad) lcall (bad) test sbb pushq rex.WX mov jne jbe stos out cltd rex.B add fbld imul (bad) and sub ficomp and (bad) nop mov movups rolb (bad) (bad) iret xchg rex.B sub or (bad) cmpsb cmpb mov sbb add add pushfq push mov loope retq outsb scas js (bad) sbb pop (bad) push test (bad) (bad) (bad) (bad) xchg push lahf push xchg push xchg jnp movabs (bad) xor or jns retq jnp xor (bad) int3 cs sub mov jo xchg adc (bad) std sbb jbe pop test mov stos (bad) sub js xchg fsubl cmp push mov out (bad) (bad) push cmc std (bad) (bad) (bad) adc gs imul sbb out jne (bad) (bad) (bad) add (bad) cli (bad) lcall (bad) fnsave jmp retq imul (bad) out xor xchg cmp rex.X pop lock xor sub fmul (bad) lea jnp movabs jne (bad) cmc and sbb cmp rex.XB (bad) outsl ja out jne sub popq lahf paddusw push nop push divb adc rex.R rex.WX sub rex.RX jnp xchg rex.XB sub or push xchg and (bad) jmpq xchg (bad) movsbw lea pop seto jmpq push lock std std (bad) notl retq js fimul (bad) pop insl and pushfq mov (bad) jge xor int3 fucomip insl jge or (bad) sub xchg and (bad) push push retq add out and ja mov mov test rex.RX incl xchg (bad) rex.RX clc sub jbe enterq rolb adc movabs or jmp push fidivrl push xor jp push pushfq sub lret movsl xor outsl sahf jle add movabs shrb rex.RX (bad) (bad) incl (bad) (bad) retq movslq adc xlat xor (bad) jg jmpq (bad) lcall cltd xchg rex.WX mov (bad) pop and cmpsl mov (bad) (bad) in notl mov je gs mov mulb rex.RB (bad) ror (bad) (bad) test stos and in mov xchg iret je rex.X pop sbb ss adc sub or cwtl movsl int sbb (bad) pop mov pop icebp outsb (bad) (bad) outsl data16 sub (bad) pop (bad) repz xor or push (bad) mov movabs fucomp lods pop movabs std xchg mov xorb mov jae retq mov fdiv imul std std (bad) (bad) fbld int3 cmc out movslq shlb jmpq (bad) (bad) decl cli (bad) lcall int jb cli rorl dec loop sti imul push icebp add out addr32 popfq gs imul movsb (bad) sub xor test sbb jmpq adc xchg sarb (bad) movabs pushfq lock sbbb jg sub sub jp sbb push rex.XB and lods mov sub ljmp nop xchg (bad) fcom ds add adc js lea cmpsl jne jmpq jmpq movsb hlt xchg (bad) repz movslq xor and rex.RXB rex.XB mov retq sub adc data16 lret mov (bad) leaveq rex.WB cmp fcomi rex.X (bad) out (bad) data16 xchg retq cltd cld sbb jnp rex.X outsl mov movabs movabs cli cmp pop sbbb cs (bad) mov mov and (bad) movsw xor sub fnop pushq push fnstenv callq adc (bad) push xor rcrb jmpq (bad) movsl fs cmp xchg cmp sub sahf outsb xcrypt-cbc cmpsl xchg jbe cmpsl push (bad) mov loope cwtl push mov cmp xchg orb popfq movabs idivl add js (bad) scas jge sub add and (bad) in repz adc (bad) (bad) (bad) fsubl insl mov jb (bad) rex mov movabs sub and retq or mov (bad) xchg sbb xlat rcrl scas mov xchg in fstpt sub (bad) xor gs add xchg insb addr32 jbe fucomip sahf sub (bad) mov int3 rex.WR adc jmpq cmp (bad) (bad) jmpq movabs and (bad) div xchg jno mov sbb fnstcw (bad) outsb test xor insl and mov out rex.WR sub scas pop sahf mov push push mov xor (bad) mov rex.RXB (bad) adc xchg (bad) out pop (bad) fisttpll push movabs pop mov cmp cmp cmova rex.WB jg cmp test imul movabs jrcxz (bad) jp mulb mov or rol lods je xor movabs (bad) scas out scas sbb or or rex.WB rex.WR rorl movabs lret outsb (bad) (bad) (bad) fistpll cwtl mov retq lock mov mov mov rex.WRB (bad) lcall xor rex.RX rex.WB fiadd in add sub orb jl repnz mov insb pushfq rex.WX xor push movabs mov rex.RXB gs movslq adc pop imul mov or (bad) sbb adc (bad) (bad) mov mov add rex.RX and cmpsb out cmpsl push cli (bad) mov (bad) (bad) sub mov bt stc jmpq stc stc cmpb jmpq mov push mov ss xlat notb rex.R rex.WRXB mov jno fdivrs or sbb maxps rex.RXB xchg pop add mov xor ss and hlt sbb mov pop rex.WRX (bad) lcall push xchg sub movabs (bad) mov cs (bad) (bad) jg jl movb lcall (bad) int3 rolb idivb adc iretw insl or test test (bad) mov andb xchg add fcompl sbb (bad) ja (bad) cmp xor push mov fmuls and or adc rex.RXB mov xor or xor pop cmp (bad) adc add movsbq lea lea pop jmpq out (bad) xor clc and rex.W jle,pt jne sti adc sbb insl pop xchg (bad) jbe in callq int pop imul stos sub out movabs pushfq rex.WX add (bad) paddd (bad) (bad) stos (bad) jrcxz movabs (bad) fimull js push movsl cld (bad) lcall enterq add (bad) lcall push rex.XB rex.RX sub bnd test mov rex.WRB movsb leaveq gs cmp (bad) (bad) lea lret nop push fimul mov (bad) sbb (bad) (bad) out cs cld xor (bad) pushq mov movabs movabs mov std and fwait sar rex.WRXB in jb in and lods adc shrb fdivs adc cmp fimul out mov fnstcw mov shll add divl cwtl ss out add jrcxz xchg mov (bad) inc shl bts sbb mov xchg add setle cmp clc dec mov bt sbb bts sbb add btr adc cmc movl ror mov cmp jmpq je stc rcr push btc btc shld xchg mov neg sub movzbl jmpq jmpq jne seta dec mov movzbw xor clc not and bts mov cmp setle not neg add rcl (bad) lock test cmp cmc cmc test jmpq sub and mov mov cli rex.WX callq and movabs add (bad) adc out (bad) or leaveq (bad) outsl adc push or or paddd (bad) incl rex.WRXB mov in and (bad) mov popfq pop nop data16 (bad) shrb outsl loop popfq fwait cld (bad) (bad) (bad) imul rex.XB cli (bad) lcall nop cmp sti (bad) jno movslq sub mov jge (bad) sbb cld pop pop shll in jp nop add lods xor sub xor movsl addl cmc mov retq leaveq movsb (bad) xchg cltd (bad) out (bad) cmp clc push xor mov (bad) loopne jle rex.WR pop icebp outsb pop callq gs (bad) je clc cmp jmpq mov and retq cmp mov pop or rex.WB (bad) pop (bad) xchg xor jno (bad) sbb imul (bad) adc fcoml mov pop out jg enterq (bad) lcall jb adc popfq mov adc sahf andb lcall popfq xchg loopne cli (bad) lcall (bad) (bad) pushfq jnp rex.X addr32 jnp shrb (bad) xchg xlat jl movabs pop add (bad) (bad) jg and mov push sub rol out idivl cmpsl fbld movabs (bad) sub (bad) pop movsl pop movabs hlt int3 xchg (bad) jle (bad) loop sahf mov gs (bad) rex.WRX rex.B loopne mov shl shl add jmpq push setno sets sete lods jmpq pushq jmpq jo movabs cmp test (bad) rcll fcompl test repnz or xor ja jge rex.WRX rex.WB repz push (bad) (bad) testl in jmp or rex.WRXB jae sbb mov lcall fwait pop rex.WRB loopne (bad) lcall (bad) mov cli imull fnstcw xchg stos insl (bad) (bad) insl push idivl out lock cmp cmp (bad) notb retq sub leaveq (bad) movl mov faddp jbe adc cltd cmpsb data16 fistl xchg cmc xchg adc jnp mov (bad) sub cwtl and fadd add jmpq jne jmpq rol stc std cmp cmc not clc bt test popfw jmpq je jmpq callq jmpq jge lret and mov fucomip mov ja retq mov mov or pop jbe,pn mov cmpsb (bad) rex.XB mov (bad) (bad) and cmp sub jl sbb (bad) add mov adc repz (bad) (bad) (bad) movq mov xchg rex.WXB retq lods cmp rex.WRXB push cmp push xor (bad) fistpll mov (bad) outsl shrl sti (bad) or imul std (bad) (bad) mov jae (bad) lcall push sbb test adc cmp sbb (bad) stos (bad) pop (bad) jbe rex.WR and adc xchg iret ss push lods jp add cmp xor and mov cwtl movsl add lret rex.R mov xor pop in push mov adc and movabs (bad) jno add repz rex.XB cs rex.R loope clc fildl lret sub or movabs (bad) nop rex.WRXB stc cwtl rex.XB ds xor lahf sub movslq rex.RX in or fcoml jnp sahf mov fdivrs out and mov sub pop (bad) and pop add mov (bad) test fwait (bad) rex.WR in mov mov mov ds add (bad) leaveq mov movsb mov jle rex.RXB jle or or lahf rex.WRB (bad) out cmp pushq (bad) push in fs fxch rex.WB incl rex.WRB mov ficomp out mov pop (bad) jmpq mov movabs sub fnsave sbbl xchg sbb lahf cs hlt or mov (bad) xor jg sbb push (bad) cld (bad) lcall rex.WRX push jb adc mov xor hlt lods inc out mov movsb rex.WRXB rex.WRX or pop scas out cmp xor rex.XB stc pop mov retq icebp push cmp lock xchg lret xchg adc imul mov rex.WB rex.WRX (bad) scas out fiadd int3 (bad) adc jb and add push cmc adc sub sub mov and icebp ds xchg cli xor (bad) cmp mov adc orb push es mov mov orl idiv cmc neg cmp mov sbb and mov cmc shr or mov clc clc cmc clc xor cmp test repnz jmpq jne gs xor fs insb add and addb std or (bad) xchg rex.WX rex cmp adc decb mov ds js rex.RXB add rex.WRXB in mov jo callq rex.WRX (bad) (bad) (bad) mov add jbe xchg xor (bad) ja (bad) (bad) jmpq stc jns adc jrcxz jbe (bad) lcall (bad) sti (bad) lcall mov rex.WRX adc pop repz jae mov (bad) jbe jmpq enterq sbb cmp jns or adc int3 pop mov clc nop adc divb shll out cmp fxch or out jle cmpsb test movabs mov add mov pop outsl xlat idivb int adc dec mov pop (bad) loopne mov cmp lret mov (bad) imul scas jl or and jns (bad) fisubrl add (bad) rorb callq mov cmpsb rex.WRX clc incl (bad) shrb jmpq movabs add mov xor (bad) (bad) jmpq fsubrp mov (bad) lcall cmc (bad) and movsb mov cmp stc imul lret (bad) ja je rex.WXB fildl test jmpq cld cmc xchg push repnz and movabs jg es jae sub xchg lret (bad) mov cmpsl rex.WRXB rex.R (bad) mov (bad) movsl movb callq xlat pop mov jg pushq sub jle xchg (bad) fmull (bad) rex.RB movabs and fwait and mov insb and cltd rex.WRXB (bad) pop cmpsb (bad) (bad) mov stos xor xchg (bad) xchg mov mov rex.RX adc fsts xchg (bad) (bad) (bad) xchg out push (bad) xchg repnz jmpq pushq js pushq jmpq cmp stos adc and mov mov lret pop jb mov mov mov (bad) test rex.WRX and (bad) mov mov test xor (bad) (bad) lcall lret je jmp test xor sub (bad) (bad) mov movabs push (bad) rex.WXB jno pop pop test mov adc cmp cmpsb (bad) rex.RB cmpsb pop (bad) lea jl je adc popfq cltd (bad) xchg lret pop rol movsl stos xor adc push xchg (bad) in jb loop out scas (bad) je test and (bad) es loop pushq (bad) ss imulb addr32 jrcxz mov push idiv jmpq sub jge cmp stc bt pushq cmc test cmp cmp jmpq jmpq stos jmpq stos jmpq pop xchg mov add sub mov enterq loop or mov xor xchg (bad) jne in or mov sub (bad) (bad) xor movabs adc xor (bad) (bad) lcall loope (bad) cmovbe insb and mov sub cld (bad) (bad) callq outsb inc out cli (bad) lcall cmpsb sarl (bad) (bad) test cli test xchg (bad) scas sub fisubr (bad) cmpsb (bad) movabs and rex.WRB or pop cmp scas enterq add fidivrl mov in pushfq (bad) adc scas imul clc xlat xchg cmpsl (bad) icebp pop add (bad) jle hlt adc int3 rex.R cmp jg mov mov cs (bad) rex.WRX sahf rex.WR cmp (bad) (bad) enterq mov rex.RB lock adc gs add mov sbb rex.RX cmp (bad) scas outsb (bad) fdivl jno sbb mov ja xchg add mov rex.WXB add js ds add mov pushq test pop or incb icebp imul lcall and repnz mov (bad) pop rex sarb scas rex.WXB (bad) xor retq andl pop sbb pop mov je jrcxz rex.WB (bad) cmpsl (bad) rex.R cmp rclb (bad) jae lock (bad) xchg rex.W imul add mov or insl outsl out xor movabs hlt push mov movabs mov sub mov in int3 add jae jmpq pop leaveq xchg add (bad) cltd out (bad) mov (bad) insb (bad) pop sbb sub int imul cmp mov (bad) mov rex.WRX adcl and xor icebp xlat jg fsubrp and (bad) xor pushq (bad) enterq (bad) mov (bad) mov jnp stos lret xchg jp (bad) jp (bad) movabs repnz (bad) lcall adc mov int mov adc addr32 jbe (bad) stos jns add movabs xor andb cwtl mov rcl sbb pushfq cmp rol jle mov adc retq (bad) test push xchg outsl (bad) add sbb cwtl rex.WRX pop jrcxz shll mov sahf (bad) data16 xchg outsb mov (bad) fs pushfq sbb mov and (bad) xor and stos sub mov sbb loope lahf jle,pn movsb in sbb xor (bad) and mov xchg mov xchg cmp (bad) (bad) fucom (bad) (bad) lcall rex (bad) xlat (bad) std (bad) (bad) mov mov cmp cmp movabs xchg (bad) (bad) (bad) sbb psubw add (bad) int cmp loop jo (bad) imul mov adc fcoml rex es cmp mov fbld sub mov mov cltd adc callq jmpq cmc repnz jmpq out sub push or push rex.XB es mov stos (bad) f2xm1 movabs push mov mov sahf mov fnstsw (bad) shll push mov adc jne sti push jp xchg mov (bad) (bad) fisttp jns mov pop sbb fistpl sub nop nop sbb push push cli sub cmpsb andb (bad) jl (bad) (bad) jg in lret cli (bad) lcall adc (bad) movabs xchg (bad) cld fstpl mov loop rorb xchg rex.WR mov test (bad) (bad) outsb mov (bad) sbb add sub leaveq fldenv add mov jae mov (bad) (bad) mov loop (bad) movsl subl mov cmpsb pop jmpq cmp jl and rex.WXB (bad) and cmp add callq mov rex.X out rex.RX xor (bad) (bad) (bad) sbb jmpq rex.R or (bad) (bad) fildll rex.WX push jge leaveq and sub cwtl xchg clc and roll (bad) (bad) stos (bad) rex.WX out cmp movabs icebp in pushq (bad) jg clc leaveq decb (bad) lcall jo (bad) fwait sbb jrcxz push sarb movslq cli (bad) or pop popfq test cld adc (bad) mov movabs icebp pop add cmp mov int3 sbb js jbe int3 jno pop out (bad) imul mov rex.RB int (bad) jg sub mov mov rcr sub rorb movl movslq adc decl (bad) std push (bad) outsb pop mov or and (bad) or adc in or adc (bad) lcall add mov push incl jo mov popfq cmp ja fs adc pop xchg out push (bad) rex.WX nop fmuls (bad) fidivr sub cmp adc mov (bad) test cmp rex.WRXB scas sub scas ss push rex.WR hlt push addr32 cmc cmp jmpq jmpq jmpq addb pmaxsw push xor movabs adc pop (bad) (bad) fcomps (bad) and and adc rorl add push jbe in rex.WRB sbb jae jno movsb fs pushfq sub fnstcw mov hlt sahf insb (bad) lahf jbe sub (bad) add (bad) (bad) (bad) jg xchg idiv (bad) lcall mov xor pushq ficoml jae rex.WRX outsl (bad) (bad) (bad) in cmp mov and lret sbb movsl cwtl mov cmpsl (bad) repz movabs rex.X in rorl cltd adc rex.RXB rex.WRB fwait sub xchg push (bad) cmc pop rex.RB cmp fisubr cli sbb cmp (bad) test or (bad) jmpq jne xor cmp mov jae mov xor sub bts sub mov jmpq jmpq add cmc cmp cmp cmp cmp jmpq mov bt cmp clc cmp js ja movsbw bswap not lea pop not bswap pop movsbw pop jmpq xor and std lret retq or add (bad) out (bad) xchg xor (bad) xor (bad) mov pop insb int3 sti mov pushfq sub and jg test (bad) shrl (bad) callq repnz loopne (bad) (bad) jb rex.WB (bad) pop jrcxz sbb sbb mov jo lahf push callq push push (bad) add or in push movsl sub cmp rex.WRXB rex.R andl int (bad) (bad) xchg (bad) push jb retq (bad) cmp lea cmpsl ljmp cmp xchg pause add (bad) cmp sub sahf es movsb fs ffreep pushq retq xchg pop cwtl mov rex.X cmp addl cmp je and jnp mov xor gs es stos jp cmp (bad) imul jg jp rex mov cmp andb iret (bad) outsb popfq rex.WRB rex.W (bad) leaveq mov sbb mov mov push ud1 xchg (bad) (bad) (bad) (bad) (bad) rex lods rex.R (bad) lcall (bad) stc sbb sar lock mov mov sub add (bad) jno adc repz out sub int3 sub hlt rex.WX (bad) int rcll pop scas cmpsl xchg in jrcxz (bad) mov (bad) sti (bad) and mov lods (bad) fidivrl add fstps push mov (bad) int3 xchg test mov vminpd jg ffreep (bad) in lret movslq cmp rex.WX std sub sti and cmp ja jae bswap sbb xchg xor mov shr mov add movzbl shrd mov cmc jmpq rex.B rex.WB cmp je rex.X mov fstpl cmp (bad) pop xchg (bad) (bad) (bad) (bad) shlb (bad) (bad) rcll rex.W jge and fld add adc rex.W jle (bad) (bad) (bad) fisttp (bad) push xchg adc sbb mov (bad) rex.WXB cmp (bad) std or push rex.WRB (bad) (bad) fbld sti (bad) lcall rex.WX adc scas lea test or and fdivr jl mov jne or add jg jl lods in pop rex.WX rex.W adc (bad) data16 in rex.B (bad) sbb mov mov xor andq test (bad) (bad) xchg je cld loop in fstl rex.WB cmc pop add cmpsb jg loopne pop ds sub sar mov callq mov cltd xor imul xchg iret lret movabs (bad) jne cmp lret mov out cmp rex.WRX (bad) rcr (bad) (bad) lcall decb (bad) xor (bad) (bad) mov loope xor (bad) (bad) (bad) mov in mov mov stos push callq sahf rex.RXB cwtl shrb add addr32 shlb rex.WR in andl rex.WB (bad) jg and loopne cmp out adc andl sub sbb mov int3 outsl insb xor cs insb add (bad) sub (bad) decl mov retq (bad) jmpq add (bad) outsb (bad) decl (bad) adc (bad) jmpq movabs add stc cmp jmpq jmpq pushq jmpq je shr ror push mov mov bt movsbw movsbq shr sub movzbw lea jmpq jmpq jmpq jns jg adc mov fsubrp jge rex.WR mov mov fwait (bad) push pushfq cld xlat (bad) (bad) push movabs stos (bad) mov push adc cltd outsl lret mov pop or (bad) fildll sub xchg (bad) (bad) jg sub push ss sub jno rex.WB rex.RB in mov loop,pn (bad) lea lods mov stos mov sub test movabs pop addr32 std (bad) (bad) (bad) pop callq (bad) lcall nop fsubr (bad) rex.WRXB mov cmp mov jrcxz xchg mov icebp out (bad) rex pushfq rex.R (bad) mov mov movabs ss add rex.WRXB (bad) (bad) (bad) xchg jne sbb std insl and or mov mov loope nop (bad) pop pushq adc and std test fcoml retq (bad) scas lret in out cmpsb in pop xchg push bswap stc (bad) rex.WRXB mov (bad) rex.X mov (bad) or mov repz jo repz sbb rcl and rex.WRXB and cmp (bad) in fs adc lock push push mov stos or cmp data16 rex.W rex.WX rex outsb xchg loop fiaddl mov add or (bad) je (bad) (bad) cmc insl pushq rex.WRX sub (bad) mov clc mov rex.R (bad) sbb cld fildl adc (bad) lcall icebp adc mov leaveq jmpq retq (bad) (bad) fild cmp pushq (bad) jae shrb push test cmpsb ja fucomip lret pop test add scas mov movslq mov addl (bad) movabs adc rcll (bad) (bad) xor push mov sbb repnz scas div and test hlt mov add movabs and jne pushq cli xor rex.RB or (bad) and jne add pop cmc pop adc mov loope add push jp jmpq lahf cli xchg cmp (bad) jbe stc movabs add sub sub vpcmpgtb xor add sti mov (bad) (bad) mov mov rex.WXB (bad) leaveq loope (bad) outsb outsl out (bad) std (bad) lcall mov sti (bad) lcall (bad) outsb movabs rex.WR (bad) rex.W rex.WB rex.WR and mov (bad) xor cmp movslq stc out push mov jo lock xchg hlt repz lods mov ss or cli clc js retq sub sub rex.WRB mov (bad) pushq icebp rex.RX movabs idivl and mov mov sub (bad) xor repz sbb rex.B and sub mov xchg mov out (bad) (bad) cmc mov add pop add rex.XB add pop outsl xlat mov rex.WRB (bad) sub rex scas outsb (bad) pushq xlat jle je jrcxz xchg rex adc std (bad) (bad) mov rex.RXB clc xchg jbe (bad) mov add outsl cld (bad) (bad) fbld imul (bad) adc mov rex.B (bad) in xor mov sbb add fstpt rex.W pop nop pushq (bad) andl pop rex.W subl mov clc (bad) mov sbb in stc (bad) xor or xlat adc mov lods shlb cmpsl fs mov rex.W popfq (bad) or mov rex.RXB or (bad) rex.W sahf sub jmp and sub (bad) sbb cmp imul cmp (bad) cwtl (bad) mov mov or (bad) (bad) (bad) lcall cltd js pushq lahf sbb mov push retq int3 (bad) mov (bad) (bad) pushfq (bad) add xor xchg push mov scas jns xlat test lcall sbb (bad) cmp pop cmp outsb jge cmp mov outsb insl mov mov or fcmovu mov out jle sbb (bad) cmpsb test hlt push xchg cli (bad) xor jbe (bad) sahf (bad) sbb stos cmp cmp fs add mov in mov sti movabs xlat jmpq jmpq rep movsbw bswap jmpq clc cmp jmpq mov and fidivr mov fnstcw (bad) sub mov cmp adc icebp push (bad) (bad) sarb clc movabs push mov mov pop (bad) pushq add push push mov cmp mov (bad) jg (bad) mov mov cmpsl (bad) std (bad) (bad) jg rex.XB data16 xchg sti (bad) lcall (bad) mov (bad) fldcw gs (bad) cmc xchg or and retq sub js mov callq in cmp cmpsb out mov imul sahf rex.WR hlt test in add (bad) jno roll add jnp xor out int lahf popfq cmp add fcompl or pop rex.X cmc insl mov jae jne movzbw mov test cmp stc cmp jmpq jmpq xchg sti push mov ja outsb pop cmp (bad) (bad) rex.RX movabs adc lahf div movabs and rex.RB lock test or push clc fistl xchg ficoml imul xchg fisubl push or jns pop mov or (bad) (bad) (bad) jge rex.WXB addb xchg test (bad) in xchg (bad) fwait (bad) mov and movabs (bad) ds adc mov adc add rcll addr32 push (bad) fcomps cmp push (bad) and mov mov mov pop cmp (bad) cmp (bad) sub loope movabs (bad) rex.WRX (bad) (bad) xlat mov maxps mov jl xchg movabs sbb imul insb lods rex.R (bad) (bad) mov xchg rol xchg rex.X (bad) rex.WX leaveq pop (bad) lahf rex.WRB mov out sahf outsb mov fdivs (bad) movsl (bad) lahf movsl adc in std fsubl cmpsb rex.WRXB int rex.RXB push std xchg or jno add loope or mov jrcxz fwait movabs (bad) cmp outsl pop (bad) xchg mov mov push jbe adc xor and xor cmpsb test fcoms pop (bad) scas out pop lea scas pushq and cmp fldcw jmpq lahf (bad) xchg push mov rex.WXB mov lret rex.B mov rorl movsb add and js outsl sahf out movsl fs fbstp (bad) jl popfq jne (bad) mov (bad) mov rex.RX rex.RX movsl std sahf (bad) fcoml add mov add or cmp (bad) callq rex.R mov adc (bad) (bad) test fs (bad) repz (bad) sbb (bad) lcall cmc lods fstpt outsl fisubr jmpq (bad) or rex.WRXB imulb and rcll rex.WXB rex.WB fwait jp mov xchg mov mov idiv movabs movsl orl in mov subl leaveq (bad) scas jge and xor adc (bad) hlt or add outsl jno (bad) mov retq and idiv xadd cmc rol sub mov dec shl clc sub sar mov cmc sub cmp pushq test jmpq mov and scas pop test lret (bad) (bad) lods (bad) mov rex.WRX fcoml jrcxz sar xchg cmp adc (bad) mov rex.R fs movabs repnz adc (bad) (bad) pushq rex.RX int3 lods (bad) and lahf (bad) scas add (bad) lcall sbb (bad) lcall mov and sbbb xchg sbb mov ja push in xchg (bad) adc repz push jmpq xchg int data16 (bad) sbb xchg test iret xchg xor movabs sbb push fwait jp rex out jbe (bad) sub fildl int3 sbb push cwtl and push pause sarb (bad) cli (bad) (bad) pop popfq add lods fwait sbb mov push sub sub movsl insl (bad) push sbb mov movslq movabs fdivs pop cmp jg and imul or (bad) rex.RX retq pushq (bad) (bad) (bad) jg adc (bad) mov adc and pop cmc fs xor loopne movsb rex.WRXB (bad) mov fnstenv (bad) cld (bad) lcall xor sbbb movsl (bad) pop sti sbb xor (bad) (bad) scas rcll xor rex.WX repnz loopne int stos adc add (bad) ds adc cld in mov rex es cmp mov fs scas fisttp and movsb movslq retq loope rex.R rex.WRXB out (bad) rex.WRXB cmc mov jb (bad) sbb out (bad) adc loope jns (bad) jo shll fdivrs pop fdivrp (bad) (bad) (bad) mov (bad) (bad) mov ds in jmp mov pop jb std (bad) lcall push mov sarb rex.WRXB in fnstsw addl mov std stos sbb sbb cmp clc test (bad) fidivr (bad) (bad) fmull or ja in stos cmp paddusw loop (bad) callq sbb (bad) xchg mov movslq and xchg push mov cmp lahf in and cmp sub out adc imul es rex.W sbb jbe callq (bad) (bad) (bad) (bad) jnp mov hlt lods xor sbb mov (bad) insb jns pushq int3 mov (bad) mov cld (bad) lcall and (bad) lcall movabs mov cmp mov mov rex.WRXB push (bad) retq (bad) lret lret and (bad) rcl or addr32 cmp pop rex.WXB int3 in sbb xchg push pop rex.RX mov sub (bad) cmp pushq stc divl cmc sub add mov loop sbb (bad) cli popfq mov sub rex.WRXB adc jmpq xlat (bad) add sbb mov add rex (bad) mov fistp callq (bad) adc rex.WX sub jmpq mov lods jge sti movslq add sahf push (bad) (bad) (bad) mov add pmaxsw rcll js add push lea mov add lahf movabs jb pop iret sbb in ss test sub (bad) lcall rex.RXB stc push mov (bad) lcall (bad) cmp movabs cmc and mov mov pop (bad) insb rex.WXB incl mov out pushq pop or insl in cld scas push (bad) pushq test mov rex.X loope divl xor (bad) (bad) cmpsl jmpq lahf rex.WRB in sbb fs test (bad) (bad) int3 ja rcr not stc sub ror shld add btr sub mov sar mov bt repnz jmpq add push rex.W rex.RXB gs outsl insb fs (bad) je add sbb sbb mov pop sbb pop sub sub clc fildl or pop jo push scas sbb (bad) rex.WB (bad) (bad) sbb push js (bad) mov xchg (bad) scas (bad) cltd fisubl fild cmp test rex.WRXB outsb or pop (bad) je sub std (bad) (bad) fild imul mov sbb xchg push pop movsb mov pop cmp insl (bad) mov and (bad) sub mov rex.WX push andb outsb adc add in xchg xchg pushq movabs fsubrs adc (bad) rex.X movabs pushq movslq jnp ss add (bad) jmpq clc test stc cmp sub ja jne shld movzbl bts jmpq jmpq add bt cmp cmp stc mov jmpq movsb (bad) xor (bad) data16 movslq push pushq loope pop test (bad) and ds stos outsb sarb sahf cmpb xchg (bad) jg movabs cmpsb add (bad) enterq (bad) sub faddp (bad) out out enterq addr32 (bad) rcr rcrb add (bad) mov sahf mov out (bad) sub rol leaveq stos pop out loope ds retq lea add sahf jb pop cwtl jp (bad) movabs imul and fwait lea icebp movslq sub ds repnz movabs movabs sahf scas (bad) data16 add ja imul jae (bad) sub pop hlt xchg add jne enterq and sub (bad) mov pop movabs (bad) (bad) cmc push data16 (bad) loope fidivr mov (bad) fimul orl push ja shlb fidiv js pop cmp jno orl leaveq rcr loope pop icebp stc add adc and loope xchg pop pushq nop cwtl movabs loopne callq adc and sub nop xor scas jle test fldt movsb shll mov andl jb sub addr32 (bad) xchg pop sahf (bad) imul rex.RB (bad) push (bad) movabs ja push (bad) (bad) sahf mov fisttp pushq jae xchg cs lea (bad) loop movabs fs vpmulhw mov push gs sub or retq pop jmp pop and and add loop retq movabs movsb loopne xor (bad) (bad) ds cwtl mov movsb pop test icebp (bad) (bad) (bad) ds cwtl mov out push movabs faddp rcrb jrcxz movslq (bad) and (bad) rcrb adc in movabs fucomip lahf movsb pop test icebp sahf (bad) and ja (bad) and (bad) (bad) (bad) loope movabs movabs rcrb movabs sub cwtl loop and (bad) movsb add fidivr and (bad) in add pop mov clc insb (bad) imul (bad) ja sahf in (bad) scas (bad) fbstp in sahf nop movsb fsub add test sub data16 outsb sub orl fidiv divb (bad) in (bad) vandnpd (bad) xlat in rcr test icebp in (bad) (bad) stc (bad) add mov cltd add movabs pop ds (bad) icebp imul jp jns add jnp and jnp mov (bad) rex.XB fsts lret (bad) movabs test (bad) mov mov movsl ja mov mov retq jrcxz rcr test ror in mov xchg js fabs sub cltd movabs (bad) shr (bad) rcr xlat lcall mov cmpsb scas shrl xchg icebp mov rex.WRXB rex.WRX add jle or sbb (bad) ffreep rolb int movsb lock movabs lock movslq imul (bad) and and cmpsb loope and xchg sahf cwtl (bad) ja (bad) sahf test iret jno (bad) and movslq cwtl movabs icebp sahf (bad) and ja (bad) movsb movsb and vpunpcklwd movabs and and ds cwtl movabs (bad) sub movsl mov fist (bad) stos (bad) movabs (bad) sub (bad) (bad) outsl sahf sbbb in in (bad) sarl xor jo je jl (bad) fidivr out movslq and pushq rex.XB es jle pop lods ss pop imul cmp push je rcrb in or mov movabs xchg cs es pop sbb js xchg cmpsl fildl pop sub pushq ficoml (bad) data16 fcompl push and pop fsts pop cwtl xor movabs lret gs rex.B rex.WR cmp callq jge pop cmc cmpsl xlat (bad) pushq sbbb shl jge test add sbb or pop mov xchg (bad) jbe es nop (bad) movsl (bad) mov (bad) and pop fwait cli (bad) (bad) (bad) and int clc add mov mov in in pop pop add ds pop cltd mov and rex.WB pop rex.WR shrb lock test movabs scas scas sbb loope push and pop fmul xchg sbb out jp fs mov and sbb in in (bad) (bad) ja cwtl ss in xchg pop adc (bad) xchg mov jo lea push pop adc (bad) je pop (bad) imul sarb enterq add xchg lods pushfq repnz clc (bad) or xor pop push cltd xor (bad) mov lret rex.WRX pop data16 xchg jne rex.RB out imul clc push out cmp sbb xlat lret mov mov cmp (bad) lods (bad) jp mov movabs addl rex.WRXB mov ja sbb rex.RXB jns js fs (bad) data16 in (bad) jb sbb fs (bad) rex.R xchg jbe xchg (bad) mov pop adc or cmp (bad) not jmpq out (bad) test xor xchg (bad) push sbb and jae out jne repz pop lock subb fidivr (bad) (bad) fdivr roll mov andl rex.WB popfq movabs outsl jbe sarb fcmovu mov add rex pop pop (bad) hlt movsb jle xchg and cmp lock mov rcrl adc (bad) lods (bad) (bad) out idiv (bad) outsb movhps (bad) mov mov pushq mov pop ds (bad) rex.WR out ja scas add jp orl cs icebp test idivl jns (bad) out jle out icebp flds cmpsb or icebp (bad) push cltd jmp rex.WR test (bad) iret (bad) movsb xchg jmpq cmp rex.WRX movabs ficomp movsl ficom es and movabs jns rorl (bad) fbstp jmpq loop out rex.WRX (bad) fsubs mov leaveq pop callq rex.R (bad) sahf (bad) push sbb in iret stos xchg (bad) sub xlat (bad) mov cmpl scas sahf sbb add stc out lock rcrb stos loopne pushq pop icebp movslq fimul (bad) rcrb (bad) cwtl mov (bad) (bad) movsb loop clc pushq cwtl (bad) outsl in callq ja add fiadd (bad) movabs (bad) add (bad) stos or out (bad) movsb mov add jmpq movsb ds rcrb movabs movsl sub ds ds outsl and rex.B repnz movslq (bad) sarl sar and cmpsl mov rcrb icebp (bad) jbe lock cli pop (bad) jnp ja icebp icebp out (bad) test mov cwtl jno outsl (bad) andl test (bad) xor rcrb xor (bad) mov scas rcrb mov mov add ds stos fs and clc pushq setae (bad) pop movsb (bad) test ds cwtl xchg ja (bad) (bad) (bad) push movsb rex.WRX jns push rex.WRXB shll (bad) sarb rcl rex.W rex.RB cmc callq iret jp sub cwtl je imul cwtl pushq icebp es repnz ja (bad) (bad) movsb hlt sub cwtl repz cwtl stos ja (bad) cmc cmc or (bad) out loopne outsb data16 cwtl or (bad) mov mov xchg mov cwtl xchg (bad) mov rcrb rex.RXB xor cwtl leaveq ja (bad) xor (bad) xor negb jl pop ja (bad) mull rcrb jp js mov cmp (bad) adc cmp (bad) ds (bad) mov icebp mov mov adc push ja (bad) (bad) movsb (bad) sub cwtl (bad) ja (bad) (bad) movsb cwtl test pop rcrb pop icebp push (bad) push push ja (bad) xlat movsb push test icebp fisubl fdivrs push push pop pop out imul insl pop ja sub push cwtl in rex.RB fiaddl sub push cwtl sub sub ja sub push cwtl or or or lret push movsb int cwtl rex.WX rex.WR (bad) rex.WXB rex.RB rex.WRB push cwtl jge cli push (bad) cld rex.RB fiaddl push cwtl mov cmp fiaddl push cwtl pushfq cmc fwait push (bad) popfq sbb test ja sub push (bad) fildl fiaddl sub mov sbb retq cltd clc mov (bad) jle push jne sub orb stos rex.W (bad) andl and addr32 out outsb lock movabs fs (bad) (bad) mov (bad) (bad) pushq es out movabs jbe out (bad) (bad) scas ja fisubr (bad) (bad) fbld mov jl rex.R xor pop or or (bad) and pop add jno loop clc or mov pushq jo (bad) jg test jmpq rex.B addr32 mov cmpsl sub (bad) (bad) rcrb (bad) insl sarl mov (bad) lock (bad) jg enterq jge iret ds add rorl movabs and jg sub mov addr32 lahf (bad) xlat clc je rex.RX mov or pop (bad) mov mov lahf jg (bad) or and (bad) mov or rex rex.WX (bad) (bad) (bad) jo movabs fldl rex.WRXB and outsb jle jo loop subb add pushq fsubrs loopne jg rex.WX rorl shrb fnstsw cltd adc rex.WRX jg fiadd movabs mov lock (bad) fimul loop xor jo add xchg xchg mov cmp (bad) mov nop xchg xchg (bad) jg sti sbb callq cmpsl rex.WRXB xchg sahf jg sbb mov lahf jg mov jrcxz test fimul and xchg jno flds or push rex.X sub test cwtl out mov movabs sub gs (bad) rex.WXB cmpsb sahf jg mov sbb xchg cmpsb mov imul icebp (bad) lock (bad) rorb xchg rol lock jg scas lods mov jg ds clc or out (bad) pushq add cmpsb pop mov rclb adc sub jno mov mov test mov push rolb jo or movabs push add cmp sahf mov and (bad) (bad) loope mov sbb outsl jg rex.WRX or movslq rcll (bad) mov cmpsl adc mov (bad) jg loopne add jae jmp ds outsl rex.WRB rex mov or test stos fildll adc loopne or mov cmpl mov loop xor scas mov icebp lea jle and fistp addr32 or scas scas jmpq cld fwait add mov (bad) lahf or mov (bad) cli xorb (bad) mov jo and scas addb sbb push mov and cmpsl scas movabs fcmovnb faddp std (bad) repz repnz pop js pop jg jg neg lock fidiv iret sub jl and sub pop cltd callq (bad) mov fdivp popfq movslq incb jg rex.B mov rcrb and sar loopne (bad) out jns pop (bad) test out and mov ficomp (bad) out jp loope (bad) (bad) add jo pop xchg movabs mov orb xor andl rorb pushq adc xchg cmpsl (bad) sahf jg shrl and stc mov (bad) loopne test jg xchg mov jmpq add mov sahf test (bad) (bad) lock or sbb jg stc xchg or fildll test icebp fnstenv cs mov xor xorb rorl sahf icebp xchg sub mov rcr mov scas test (bad) jno adc mov sbb rex.RX (bad) add push idivb xor test push stc fldcw jl or std ja test loopne or movabs xchg stc add xchg xorb mov outsl xchg jle test rol cmpsl test imul xchg mov jle adc xchg (bad) repz loop imul movabs sar sarb (bad) loop mov and movabs and cwtl movabs icebp fisttpll fsubrp lahf pop lods adc and rex.WRXB mov lea pop sub mov movabs mov pop (bad) pop cli movabs rex.R movsl push pop rex.RB push sbb pop movabs mov and lock or movslq mov mov sub (bad) iret rex.WRB out pop cltd add and pop divl (bad) lahf push sbb movslq (bad) leaveq cmp scas push add (bad) pop fwait (bad) xchg mov retq (bad) (bad) sbbl out (bad) xor in sub jbe (bad) add fcomps (bad) fwait or scas pop pop jl fcmovu rex.RXB adc jbe pushq (bad) rex pop cld and test push sbb xchg (bad) imul (bad) retq mov pop loopne jle movsl outsb jb pop mov addr32 pop leaveq (bad) (bad) cwtl rex.WB rex.R jae cmc lret mov mov (bad) jbe jge (bad) int add test std push pop imulb pop mov cmp rex.WB cmpb pop rex.RX (bad) mov (bad) jae rcrl ficompl push or pop jrcxz push cmp lods jbe jg jne xchg movslq jle pop pushq test jg rex.WRXB cmc mov (bad) shl xchg or pop mov fs jmp cmp data16 (bad) test (bad) jns and mov and (bad) insb pop jno or rex.B pop rex pop shlb lock pop or loopne (bad) mov pop sahf lods mov rex pushq jne in pop rcrb and rex.WB pop adc lods pop mov mov mov pop (bad) fnstsw adc or rex.RXB cli push jmpq (bad) mov rcr test fistpll (bad) adc pop (bad) retq add mov cmp cmpsb rex.RB xchg push stos mov jns (bad) movabs sub pop cmp cld (bad) mov retq xchg insb loope jp xor in fs test pop xor xchg (bad) add (bad) xlat movsb movsl or adc (bad) push mov shlb jbe lods xor rex.WRXB jns sti icebp pushfq data16 sub rex.WR fistl pop push pop mov pop cli (bad) mov movb leaveq mov (bad) rex.B xchg xchg jno (bad) lret pop (bad) (bad) xor int adc jg outsb (bad) test (bad) out (bad) fst jmp pop push mov repz cmc pop pop add ss in pop scas push (bad) add ds pop loope (bad) pop test adc or jne push add test or movq sub pop cli movabs (bad) in xlat fcmovnb (bad) lahf pop sub retq stos fs pop push movabs push pushfq and mov push jp (bad) xor lahf adc jno cwtl rex.WRB pop sbb rcl je and jl (bad) cmp pop movabs outsb insl repnz rex.WRB repz pop test loop mov mov pop (bad) in movabs jmpq insb pop and xor in stos out sub loope jno fcmovbe mov adc jns jne jge sbb fnsave jmpq pop icebp decb callq pop cmp and ffree imul push hlt repz pop es rex.WRB sbb (bad) movsl movabs mov (bad) mov jno rex.WRXB mov pop and (bad) fisttp lret adc test movslq pop frstor loop (bad) xchg push movabs cmc rex.RX sti mov adc gs rex.WRXB sub sub (bad) cmp insl add mov (bad) (bad) cld push sbb (bad) je rex.WXB xor clc retq cmp push cmp fildl sti stos pushq (bad) (bad) fwait pop int test jns (bad) pop and mov lret mov cmp add popfq rex.XB callq popq jle (bad) ss rex.WXB repz (bad) push (bad) (bad) pushfq pop mov pop sbb sbb mov rex.WRB rex jne pop out (bad) cmp pop (bad) rex.WRB rex.RX adc jbe nop out movsb rex.WRXB in add sub nop and repz repnz or or jnp stos lods rex.RB xor cmp (bad) jle stos and pop fimul xor mov lock fdivs lahf cmp sbb punpcklwd xchg sahf pushq jg (bad) sbb mov xchg rex.WRXB mov pop pushq cmp (bad) repz rcl incl loop clc jp jbe sbb mov rex.RX (bad) cmp enterq pop jle xor pushq fs pop xchg pop (bad) pop fwait mov (bad) pop pushfq add rex.XB jmp push lret gs hlt imul sti fs in sub (bad) idivl add pop (bad) (bad) push ss (bad) or movslq pop stos out xor jbe (bad) (bad) mov add mov pop retq adc fnsave insl and jmpq in adc sbb sub pop (bad) (bad) xor rex.W stc fs or adc lods pop test (bad) (bad) leaveq or (bad) mov sub loop movsb mov xor rex (bad) ds jp pop mov xchg push xchg pop sbb rex pop rex.X rorl (bad) xchg (bad) pop add cltd (bad) (bad) mov stos insl (bad) cmp enterq gs cwtl pop xchg mov (bad) std stos iret outsb (bad) jbe jnp movsb (bad) rex.WR lock (bad) (bad) sbb sub pop add stc sub (bad) clc subl xor cmpsb mov sub or rex.B mov ja cli (bad) (bad) movabs push (bad) int3 cld or retq mov lods cmp divb xor pop jrcxz add rex.WRXB (bad) out (bad) rex.RXB lret shll (bad) rex.WR add loop pop (bad) sbb in lret jns xchg shll mov add or (bad) pushq xor adc jl mov pop (bad) addr32 (bad) xchg frstor pushq mov (bad) testb loope cwtl pop insl xchg js rex.WXB mov cmc xchg movslq lods cmpsb test pop sbb push ja int3 and (bad) cmpb (bad) and pop (bad) (bad) push mov pop lea cmpb imul rex.RX cld pop push movabs cmp xchg adcl out roll andb cmp out (bad) jnp mov pushq (bad) push cmp jno movslq rex.WRX cli jns sub faddl sub xchg or (bad) cmp or or pop data16 imull pop rex fs (bad) rex.WRXB mov rex.WX or jae cs (bad) outsb fsubs xchg movabs or add cli adc loope (bad) outsl mov rcrb stc pop mov loop (bad) or test rex.WX out (bad) and pop push (bad) sub es jae (bad) jb cmc cmp xchg (bad) jns add (bad) mov cmp mov mov (bad) pop xchg xor pop sub mov (bad) sbb je pop fiadd add xchg fs and sub leaveq or lea cmp outsl and movabs cmpsb jae pop addr32 rex.RB rex.R int leaveq (bad) push jmp fs cld stos lock je rex.RX pop pushq out lods lret pop rex.W (bad) callq pop rex.WX adc mov fs cmp mov lods jns mov imul and (bad) insb fisttpll rex.X (bad) pop (bad) mov in mov repz repz push sub pop shrb rex.WRX fistl in sbb (bad) fsubs pop rex.B (bad) jle stos mov lahf mov adc cmc pop sbb jle mov xchg test loopne cmp pop rex.WRXB rex.WRB rex (bad) clc add (bad) adc fild and pop jns jbe mov mov (bad) (bad) (bad) pop scas cmp rcl hlt xchg sbb mov add insb sub sbbl xchg mov (bad) rex.RXB pop mov pop xor loopne jb ds stc sbb (bad) (bad) movsb and pop cmp rol jp rex sbb (bad) cld or push gs lret (bad) (bad) movabs push add jp mov jae loop mov pop (bad) sub jle pop rex.WXB sbb xchg icebp xor jmpq popfq icebp pop loop pop imul fcmove lret sbb xchg pop scas jmp iret sbbl ds cmpb xlat rex.WXB sub sub adc jne cmp sbb (bad) jrcxz (bad) hlt jmpq ds in fmulp add loop push scas outsb sub in xor or xor clc es rorb pop jnp out rex.W (bad) fdivs jge incw adc add mov subl addr32 sahf xlat adc mov scas insl (bad) adcb (bad) addq jb mov fstl and and movsb or (bad) in pop mov stos xchg retq pop popfq out lods movl rex.RX push stos and rex.WXB es (bad) (bad) divb xor (bad) repnz pop xchg add mov rex.WX pop lret (bad) pop pushq pop cltd (bad) repnz callq pop cmpsb pushfq xor pop mov and data16 pop jne es ds pop adc imul data16 (bad) shrl lahf mov push push (bad) pushq cmp add pop (bad) sti sbb pop movabs mulb jp lods enterq in (bad) lock (bad) pop rex.R insl pop (bad) rex.WRX xor (bad) (bad) mulb (bad) cmp int3 xchg adc mov jg outsb and rex.WRB adc callq rex.RX xor push or push (bad) pop data16 movabs lcall testb pop lret add rex retq rex.RXB (bad) and pop adc cltd pop rex mov out lods mov mov jnp outsl (bad) decl pop mov loope movabs lock pop rex.RXB test (bad) callq push xlat pop insl addr32 sub (bad) test insb mov add leaveq sbb sub fs xchg xor push imul repnz xor pop xor pop add (bad) jmp mov pop (bad) scas fs xchg xor sub (bad) (bad) insb data16 jle jae and leaveq xchg pop and sub and pop in xor (bad) jl rex.RXB xchg rcrl (bad) add mov adc pop pop sub int pop pop or pushfq xchg sub mov outsb add rex.R adc je imul mov cmp movabs xor sbb (bad) mov jbe mov nop pop (bad) loopne xchg add or sbb out jae and push addr32 out in push pop (bad) pop movl mov movsb in (bad) out out (bad) rex.WR insl insb jae xlat (bad) mov rex movabs cmp mov mov and lret adc insb icebp cmc sub cli adc je test (bad) xchg gs (bad) int jp (bad) and (bad) pop lods js addr32 jno (bad) pop ss pop mov sbb xchg movabs (bad) (bad) and fcmovnu (bad) subb in loop test (bad) loope imul lods test adc pop and pop loopne sti rorl mov mov and push pushq cmpsb leaveq movabs and sub outsb push test or imul add xchg incb sar and (bad) cmp rex.WRB jg mov mov add pop in pop (bad) mov leaveq (bad) rex.WRXB rex.WX xchg cmp shrl (bad) out rex.WB pop lret mov test pop imul paddusw cmc pop loopne sbb outsb mov (bad) (bad) adc or jg loope insb sub imul test pop cmc outsb lcall pop (bad) jb fstl add repz (bad) (bad) (bad) out mov mov adc sti sbbl insb enterq movabs add pop mov (bad) pop ror (bad) fwait jnp lods and jo repnz cltd pushq (bad) add xchg (bad) rcrl outsb pop ja cmp cmp pushq and xchg rex.WRB cmpl movabs adc or (bad) lret pop lods push (bad) and (bad) pop icebp jmpq movabs test and cmp or sub add callq rex.RX outsb rex.XB js and roll jnp rex.WRXB test callq rcrb mov imul callq adc sti in pop rex.WR rex.X rex.RB rex.B rex.WRB gs lret add sub pop (bad) adc pop xchg rex.R loope test mov fidiv stos mov (bad) mov pop jbe ds cmp xchg enterq test rex.RXB data16 stos jmpq xchg or ja pop push adcl (bad) stc sti mov (bad) outsb (bad) sbb adc mov divb mov rex.RX mov (bad) (bad) mov rex.WB out cmc rex.R pop xor and shr pop (bad) xchg cmp fnstcw pushfq mov movslq jne sub xchg (bad) sbb adc fsubrs es adc pop int3 cmp push gs clc (bad) push xchg rex.WRB cmpsl imul lret (bad) and pop sbb (bad) andl or push outsb stos outsb mov lods mov add sub (bad) sbb (bad) jl jbe cmp and cmp cmpl rcrb mov push (bad) addr32 xor scas (bad) iret outsb (bad) rex (bad) xchg adc (bad) mov jrcxz mov imul test callq es cmpsb loopne cmp jrcxz add (bad) cmpsb psrlw jbe and fist callq imul lods (bad) push clc mov in callq imul movsb jbe orb enterq sub fdivp rolb cwtl fdivs scas pop (bad) mov jg xchg out mov movabs movabs jg mov nop test pop in mov cwtl xorb clc mov xlat js fcos imul repnz (bad) js rcr cmp test (bad) and repz (bad) out cmpsb lock mov in (bad) cmp jg or leaveq loope jle add sbb fist mov sub jno xchg rex.RB rex.WRB pop fldenv pop rex.XB (bad) sub mov pop jns,pn (bad) lahf or (bad) xchg pop jno stc xor add mov mov lods mov xchg pop retq cld int3 imul out adc push movabs xor movabs lock in mov imul rex.RX xchg hlt (bad) jno movabs in icebp fistpll mov sub movabs pop out stc push (bad) push mov sahf adc jns add jg jo (bad) lods jae rex.RXB loop movb loope imul jmpq data16 jnp rex.X xchg lret rex.W shrb movabs rex.WR pop sub xchg xor (bad) mov and (bad) (bad) mov cmp and pop or lcall mov insb pushq rex.XB out scas rex.WX scas lea mov pushq int3 sbb pop mov imul sub psubusw cld (bad) lcall out sub lcall or sub jno pop lret sbb xchg loop mov insb callq rex.B pushq (bad) xchg (bad) cmp (bad) (bad) mov sbb pop cld xor cmpsb jbe movslq adc rex.WRX sub rex.WR and hlt in rex.WR rex.WX vpaddw rex.WB sarb add mov (bad) push movsb not lea pop jmpq callq jmpq jmpq xchg mov mov test sbb notl mov jle test mov rex.WB outsl in out clc sbb mov adc push jle (bad) (bad) mov or es lea callq rex.WRB cld (bad) (bad) jg or out pop sti (bad) lcall movb xchg test rex.WRXB lods jo cmp addr32 (bad) outsl ja or rex.WXB lret add (bad) push stos loope out lock sub and and std xchg int3 xchg unpckhps (bad) (bad) ds (bad) int3 (bad) movsb cmp pushq add cmp test jo pop jmpq xchg jmpq callq test bt cmp jmpq add xchg shr ror jmpq stos jmpq jmpq jmpq jno fimul and rex.WRXB (bad) add jp outsl cmpsl data16 lods insl pushq and lret push mov leaveq mov (bad) jb and sub jmpq (bad) (bad) lcall sbbl movsb adcl frndint (bad) (bad) fistpll (bad) lcall retq mov enterq mov (bad) jae (bad) cmp rex.W ss (bad) cmpsb mov mov xchg ror lret xchg mov fidivr mov adc cmp iret sbb sbb (bad) outsl mov lahf rclb hlt lods xor pushq xchg and rcrl jno (bad) pop int3 sbb outsl out mov (bad) sahf push jmp jo (bad) insl (bad) add or (bad) (bad) pop jrcxz jmpq (bad) (bad) jmpq cmc clc bt jbe xor cmp add jmpq mov cmp fdivl jns jo int mov mov (bad) cmp xchg jbe sti mov cmp (bad) sbb cld popfq (bad) repnz sbb rex.WRX addr32 sarb imul rex.RB add enterq mov mov cltd cmpsb outsb adc sub push xchg out hlt in xor roll sahf outsl fildl mov rex.RX push rex (bad) (bad) rex.WRX mov out cltd out mov js test notb rex.X mov repz repz (bad) lcall iret int mov (bad) je jae mov sbb cli popfq js mov jge jrcxz nop mull imul pcmpeqw xorps (bad) jmpq mov rex gs movabs (bad) jne pop sbb (bad) (bad) jg (bad) repnz ja (bad) lcall sub sub stos mov fisttp stos push in (bad) jnp sbb lock (bad) in sub fisubrl (bad) mov frstor sub data16 in cli (bad) and pop xchg xor stc jno rex.RXB sub mov and jg (bad) jle xchg rex.RXB in insl mov (bad) pushq jmpq rex.RXB xchg mov test out mov int mov xchg push cmp lock cmpsb notb movsbl (bad) adc (bad) sub in jne and add rex.RX lods adc lcall rex.WRB jmpq es je mov (bad) (bad) jmpq (bad) imul (bad) lcall jo int mov or jl and jne out (bad) jns (bad) loop rcl (bad) or leaveq mulb sbb (bad) (bad) mov jrcxz (bad) int3 jno jmpq (bad) (bad) mov xor and out cmp and pushq adc sub cs rex.R jle fwait or and and movabs out scas ss movsl bt neg mov stc and bt stc add jmpq jae clc mov setle cmp neg setg mov dec bt mov jmpq cmc rol clc test cmp cmp jmpq sub jmpq add rex.RXB gs outsl fs imul add and scas sbb mov (bad) cmpsb (bad) std cmp test xchg add movsw sub sbb rex.RXB rex.XB pushq xlat (bad) imul test (bad) (bad) jg (bad) stos mov or mov or std (bad) (bad) jg mov cmpsb (bad) sti (bad) lcall xchg pop nop pop add mov and xor rex.WX mov xor mov (bad) scas sub mov (bad) sub mov (bad) (bad) and adc movabs add lods jp js int fistpl jmp rex.WX (bad) xchg fimull stos insb jb cmc je pop xchg xor mov movsl cmp (bad) pop (bad) pushq rex.RX imul fimul outsl rex.WRX mov jl xor (bad) pushq mov rex.WX (bad) leaveq jmpq rcrb out (bad) stos (bad) orl mov mov rcll (bad) push jbe add (bad) rex.RB xchg xor nop idivb (bad) sbb (bad) (bad) out sahf xor adc (bad) (bad) fistp (bad) iret or (bad) jg jae adc (bad) cmc mov rex.WRXB stos mov fistpll xchg rex.W rex.WR xchg f2xm1 add gs rex.XB cmpsb (bad) sahf out jmp pop stos pop nop loopne mov loopne (bad) mov loopne enterq pop movabs or (bad) mov hlt pop sbb (bad) fidiv sub rex.RXB scas xor enterq and imul (bad) gs data16 repz and add (bad) (bad) lea stc mov bt clc stc cmp cmpb jmpq mov and sbb adc sbb out ss rex.WB test adc xchg insl pushfq in sbb scas cmpsb cs push xchg mov loopne es movabs (bad) incl and xchg sbb cwtl jno jrcxz (bad) lcall sbb int rex.X (bad) lcall xchg sub setle sub imul jne (bad) mov cmc rex.WRB xlat (bad) fmull (bad) pop xor test (bad) in rex.RB mov (bad) pop or sarl lahf mov xchg andl jbe push rex.WXB rex (bad) pop stos mov or out push nop cmp stos jnp pushq js or loope mov movabs repz lods (bad) xchg (bad) mov fs rex.X test pushq movslq out pop sbb xor mov sbb shrb movabs (bad) lcall mov sub (bad) rex.RB mov (bad) cld (bad) lcall mov jnp or (bad) lcall rex ja ja jge movabs test hlt rcll outsl (bad) add fistl shl iret ja cmp push movabs (bad) mov xchg cli gs js fiadd movsl ror xchg (bad) sbb cmp enterq (bad) rcll adc mov (bad) and sub mov rex.WXB pop cmc (bad) mov (bad) push adc roll (bad) sbb clc jmpq movabs push rex.B mov ds push fldt stc mov ss insb mov xchg (bad) (bad) jbe and sti or jo rex.R mov pushq idivb sbb sub ffreep jp addr32 adc add jp adc mov rex.W (bad) gs jmp test or fnop (bad) rex.WRX pop lods std iret sbb or lea xor movsl rex.W out and cmp or in or (bad) ja out int nop mov (bad) int mov fistpll jg rorb nop xor frstor movabs (bad) in loop xor movabs sbb push mov rex.X rex.WRX cmc loopne sbb repnz cmp out int push fwait (bad) mov lea (bad) adc out outsb movb mov push add movabs lahf adc (bad) lcall (bad) fsubr and rex.WX mov lahf mov xor pop cli cld (bad) lcall add (bad) lcall in push (bad) sbb xchg (bad) or pop push rex.WB divl stos je mov repz jmpq iret push pushfq jl cmp cwtl fs mov roll sbb jrcxz sbb fs repz cmp add or (bad) cmp outsb and jrcxz (bad) (bad) mov sbb (bad) sub data16 rex.WXB mov push (bad) and push (bad) sub mov pop mov nop sarb jnp leaveq (bad) mov xchg mov out pop (bad) mov push mov (bad) lahf in jge in sbb xor sbb (bad) xor iret lahf cli add adc (bad) jae or or add imul mull (bad) sbb lcall rex.WRB jmpq (bad) mov jbe add sahf cli mov xor iret xlat popq lahf pop std (bad) (bad) (bad) out mov and imull rex.WX loop and sbb clc callq mov andb jne and rcrl rex.WRX incb pop xchg stc (bad) mov scas (bad) out movsb and and sub mov lods rex.R in push rex.WRXB imul lret (bad) push jne fs adc add and sbb sub and scas divb mov in cwtl sbb mov sbb jle or test iret mov pushfq jnp jmp fdivrs push pop in out (bad) mov shrl (bad) loope enterq callq xor int3 mov adc fidivrl jrcxz (bad) sbb sub ja std (bad) out movslq std mov cmpsb outsb mov addr32 (bad) lcall rex.RX (bad) and sti (bad) lcall (bad) fstl jp add rex.WR lret imul push loopne lret pop retq fldcw out pop out pop mov xor rex.WRXB sbb add std test loope xchg (bad) adc loope cmpsl (bad) ffreep (bad) (bad) mov lods sub jrcxz lret cmp (bad) clc adc mov mov or repnz movsb or adc rorb rex.WRB jmp lret (bad) hlt or xchg cli xchg or xor rex.WX sarb (bad) (bad) mov pop jrcxz ss or imul movsb callq add mov test scas pop test xchg movslq std mov pushfq (bad) (bad) jl fnop movabs (bad) (bad) fistp cli (bad) lcall shl cld fsubl cwtl xchg leaveq sub mov sbb xlat loope (bad) (bad) outsl xchg jae and ja adc xor xor cmpsb test mov xlat or push (bad) in rex.WR in and imul rex.XB insb sbb decl xchg (bad) clc xor not mov rol sub or sub lea lea jmpq jmpq je jmpq bt cmp cmp test test jmpq movsl (bad) xchg push and mov mov cmpsl ja cli adc sub (bad) sbb cmpsl xor jle mov mov mov fisubrl add pop mov movslq (bad) xor iret xchg fsubrs (bad) and (bad) (bad) (bad) push xor mov (bad) pop add int xor cmpsl out jmpq add sbb adc (bad) (bad) (bad) ja jmp jno (bad) lcall jle pop in lods add scas cmp push cmpsl fwait (bad) popfq cmp push jmp cmp jle sbb adc movabs xor movabs rex.RXB sbb icebp (bad) ja frstor (bad) repnz (bad) (bad) cmpsb fistl cmp fimul pop xchg mov and cmp add (bad) callq callq (bad) out bt jmpq clc movzwl rol mov cmc stc cmc clc add cmc mov jmpq jmpq and xchg in or (bad) jo (bad) notl decb (bad) ds insl add or xchg fisttpll jb adc mov rex.RXB rex.RB (bad) lcall adc rex.X cld (bad) (bad) mov popfq xchg adc mov pushfq fs repz xchg out fwait and xchg xor xor movabs (bad) insb push mov fimul lret sub rex.RX insb je jno es mov rex.WX xchg jno movabs sub test rex.R push and push je (bad) or pop xchg jg ds rex.XB lods fucomp mov jrcxz jbe loope loop lea cwtl outsb (bad) rex.B (bad) cltd adc or shlb movabs jne push add mov add mov cmp scas mov (bad) lea (bad) pop shll cltd mov scas fincstp mov in cmc pushfq (bad) add fst or jrcxz lods mov (bad) rex.WRX movabs stos jl movabs (bad) adc lcall push sbb mov (bad) (bad) push iret (bad) jrcxz sarb and fcomps mov (bad) test add mov ds fs (bad) (bad) (bad) and mov xsaves xor (bad) rex.X rex jmpq xchg (bad) (bad) sub rex.B push (bad) (bad) jmpq jmpq callq bt bts bsr add rol mov cmc bt cmpb jmpq mov (bad) lock rol mov rcl sar shl push xor bsr btc shrd mov sbb adc sub test push and push sete push ror bsr shld push btc sbb mov test test jmpq ja ror jmpq jmpq jae shl jmpq jmpq movabs movabs movsbw mov retq jne lea lea ror inc mov bts rol sub btr mov bt cmp jmpq pop adc movabs or sahf sub rex.XB rorq iret incb push cmp add pushq mov (bad) (bad) adc retq and (bad) (bad) testb xchg mov cwtl movsw sub movslq add jp add xchg rex.X in mov lock add lret mov sti (bad) lcall pop adcl (bad) (bad) push mov outsl out nop jmp sub and mov out movsb in pop rex.WB mov sahf gs rex.WXB mov (bad) (bad) lods xchg sti xor (bad) sub xor adcl mov (bad) jmpq add jmpq jne rol clc seto lea mov sub sub xor mov bt sub jmpq je jmpq movzwl bsr mov bt stc cmp clc add stc bt test cmp mov test bt test jmpq loopne movsl xorps mov cmpsb lods sub mov loopne adc in sbb cmp sbb add mov jge cli (bad) movabs enterq add mov pop outsb mov int pop xchg or push js xchg pop xchg sub insb (bad) sbb (bad) mov scas lea lock cmp mull rex.RXB xor (bad) mov adc or (bad) lcall lahf (bad) rex.WRXB adc pop (bad) cmp cmp pop lea jb jo fisttpll sub mov (bad) (bad) imulb or pop jle pop movabs jb adc (bad) jl pop (bad) sbb jg mov (bad) jo and and fnsave cwtl test rex.WX cmp push outsb jge (bad) mov out mov fistpl lods cmpsl ss xchg (bad) mov (bad) cmc xchg xor rex.XB jp mov adc (bad) loopne lahf rex.WRB jmp cmp loope popq negb insl or (bad) (bad) jg mov (bad) movabs xchg (bad) mov jb sub rorb test (bad) rex.W jg and loopne cli jmpq gs (bad) movabs (bad) mov shrb (bad) outsl scas cmp scas in mov jmp push cwtl rex sub cmc movabs in sti xchg and stc movsb cld cli movsl gs sti xor (bad) (bad) int3 insb je xor push ficoml addr32 in add retq outsl mov rex.XB jno add iret xchg add rex.RXB gs gs imul (bad) pop and repnz iret jg fidivr ja adc shrl insb movsb movslq mov rex.WR push jbe or add jmpq pop (bad) mov in je jb or (bad) (bad) (bad) mov shrl (bad) xor push rex.X rex.WRB cli (bad) rex.RB ds popfq std (bad) (bad) decl sti (bad) lcall (bad) cmp fidivrl mov pop mov gs jae fcmovnbe fnstsw fsubl jg (bad) fs cli rex.WB mov vpsrlq add cld xchg push lret shr sub retq xchg jge or hlt rex.B rex.WXB mov movslq adc sub rex.WXB jmp (bad) xchg cmpsb es xchg add clc rex.WRX sub pop fstp movsb cli imul mov rex.WR sub rolb xor leaveq leaveq add (bad) iret (bad) frstor and adc pop (bad) xchg cmc movsl movsb movslq mov in push (bad) int sub (bad) (bad) mov rex.X (bad) lcall xchg xchg (bad) out in mov retq xchg out jae loop and sub (bad) jno fwait jne and add push test xlat addr32 (bad) cs sbb adc out (bad) lods je pop xchg in cwtl clc xchg jbe lret pop movsb (bad) rex.WRXB push in mov mov (bad) movhps or outsb or test fcomps imul andl test fidivr in fs loope rex.WRXB sub push lret fcomps (bad) es pop in push xchg iret je bnd (bad) jmp cmp vscatterqpd and bt jmpq sub bt test test stc add jmpq add rex.RXB gs outsl fs gs outsb fs gs movsl mov (bad) jmpq add jmpq jmpq or jp and icebp sbb mov loop mov shll mov mov scas push xor mov sub cmp push js out (bad) (bad) stos sub xor test (bad) sbb test mov lcall stos mov scas iret lret lcall int cld (bad) (bad) (bad) (bad) pop gs (bad) lcall (bad) lahf neg rcll roll jl outsl (bad) scas xor addl xor (bad) mov or (bad) cmpsb cs (bad) (bad) imulb pushfq out retq fisttpll rex mov (bad) retq fcomi sbb xor lea and rex.WX stc (bad) pop cmpsb divb in pushfq sbb movabs mov (bad) or stos and add sbb fwait pop and cmp adc cmp mov (bad) std insl pushfq (bad) xchg sbb out (bad) insl fucomp movsb movslq cli rex.WX jno jns (bad) add mov mov sub push (bad) (bad) (bad) (bad) mov cmp and movsb adc xlat add cmp jmp push or rex.WR xchg pop sbb fldl movsl cmp cmp pop add andl std movabs cmp sti (bad) lcall retq (bad) sbb outsb xchg mov mov movabs cmp shr (bad) callq pop adc rex.WRXB out jl jb (bad) (bad) enterq add sub sbb mov cmc mov push fmul and mov rex.RXB mull (bad) stc stc cmc imul test test add jmpq inc bt jmpq and mov rex.WR sahf out in sbb jae sub adc movsb add sub (bad) iret (bad) (bad) loop add rorb (bad) movslq rex.WRXB adc rex.WR (bad) (bad) jns loope cld (bad) (bad) mov or (bad) (bad) (bad) movsl jno xor (bad) fisubr cld push jns jge (bad) (bad) lcall adc sbb mov adc shll in lods xor rex.B lock sbb mov fwait or icebp jns (bad) (bad) xchg push movabs cmpsl callq (bad) sbb ficoml pop and add fnstcw adc lret add xchg int adc (bad) (bad) (bad) mov mov add jg jle mov retq sub fidivr rex.RB (bad) (bad) lcall rex.WXB (bad) or roll gs leaveq jns (bad) rex.WRB rex.WR lret cmc rex.X push nop (bad) or (bad) xchg (bad) push popfq test or or rex.W xor (bad) jne mov push scas lods cltd stos cld (bad) (bad) jg or or (bad) lcall jns scas and imul and movsb cmpsl (bad) movabs pop retq sbb jae pushq jg pushfq xchg mov (bad) fisttp shr divb jnp push loop lock and test ss cmp add rex.RXB pushfq rex.WX rex.B (bad) std xchg (bad) callq push (bad) sbb xor idiv jne jmpq jmpq pushq jmpq rex.R rex.WRX push rex.WB cs insb add out idiv jmpq and pushq movabs movabs (bad) rex.WB (bad) notl mov movslq sbb sbb addr32 mov rcl add sbb (bad) lcall sbbl ds out (bad) enterq std (bad) lcall test nop (bad) movabs out in repz pushq xchg addr32 outsb cwtl (bad) sub cmc pop int3 stos sub sbb jo clc out (bad) rex.WRXB fidiv addr32 cwtl jae (bad) insb (bad) (bad) sbb (bad) rex.WX loope retq mov sub ds push mov cs imulb stos sub int3 lret rex.X xchg icebp (bad) fisttp enterq (bad) imul rex.XB iret xlat (bad) xchg and cmpsb sub cltd icebp movabs add mov xchg movsw and or outsl sahf (bad) cmc popfq mov mov movl lock and mov insb stos ss rex.X (bad) sbb fbstp shl std (bad) (bad) fild jnp cmp (bad) (bad) mov (bad) mov imul adc data16 (bad) jae (bad) in cmp fcmove (bad) xchg (bad) push pushfq xor in cld (bad) lcall or sbb rex.RX xchg (bad) sahf mov movabs or (bad) mov mov callq loope rex.B movl test push xchg mov rolb or sbb test xor jg je fcoms rorl jmpq popfq std xor fiaddl fsubr (bad) ds (bad) outsl pushq rex.W or (bad) hlt adc xchg cmp outsb mov outsb mov mov loop rorb movsl imul ja outsb orb fisttp stos or mov rex.WB add (bad) stos (bad) retq stos sub adc test sub cmp push cmpsl jl (bad) rex.XB test mov loopne xor ror movsl (bad) xorl cmpsl mov push (bad) rcl cmpsb in mov cltd rol cmpsb pop ror (bad) movsl mov (bad) or xchg (bad) or and sbb sbb rex.X or mov (bad) (bad) rex.WRX mov xlat xchg mov cmp (bad) and xchg (bad) jnp movabs xchg rex.WRB and add sub imul xchg sub iret testb divl movabs pop xchg rclb adc test test retq jae repz jg rorb (bad) mov movabs movabs mov repnz jp clc rex.W cwtl sarb mov or mov adc (bad) pop movabs mov jmpq lret adc (bad) fnsave pop (bad) or xor repnz loopne lret scas cmp sar addl movsl (bad) int movabs rorb mov gs cmp jo mov jrcxz pop mov xchg rex.WB fwait add push xchg push xor repnz (bad) xchg (bad) imulb (bad) (bad) (bad) jg outsb (bad) xchg (bad) mov (bad) fbld push xchg (bad) (bad) in lret jae push test (bad) stos mov out in mov andl mov mov and or nop pop xor or xor icebp sbb mov rex.RB (bad) mov add js sub stc bt jmpq je jmpq jmpq jmpq je shr push rcl movsbw rcr shr mov bswap btr jbe and sub mov lea jmpq jne movsbw test sub add sub stc rol mov clc dec add shr mov dec dec mov stc jmpq cmp jmpq stc jmpq jae cmp mov movsbw rol setp mov movzbw shrd test clc mov cmp clc xor clc cmc repnz jmpq jne btc sub sbb mov test shl stc clc add stc test rcl mov bt jmpq jmpq mov pop jmpq jmpq jmpq add add fist add add (bad) lea add add add or out xchg add add fstpl add push sbb or add (bad) add add add addb add add add ss sbb cli and add mov adc in adc jne adc (bad) sbb add add add adc fnstenv add ja sbb add add (bad) xchg sbb add add (bad) sbb add add or add add add add sbb xchg cmc idivb sub jmpq fldenv (bad) es imul mov mov jmp int3 rex.W mull mov loopne sbb mov pop and (bad) jl push adc in adc add subl pop adc (bad) (bad) xchg jo stos sbb mov retq out jl outsb push gs rex.W pop mov xor rolb cmp pop int cmp sub sahf outsb jg fadd push (bad) push cmp sub push or jb cli rex.W (bad) xor cmpsl add sbb xchg iret or push mov (bad) xlat rex.WXB xchg data16 mov adc sub vunpckhps sub pop xchg sub rex.WX xor or icebp (bad) gs outsl sub lret rex.X out or (bad) (bad) mov jo gs retq jbe decb (bad) mov or jg sub pop or jne (bad) xchg lahf leaveq push subb add sbb sub pop std sbb clc cltd in adc retq jg test (bad) insl cltd (bad) (bad) callq stc jmpq rex.X pop pushfq mov mov push jns (bad) stos mov nop cmpsl xchg gs ds adc (bad) adc insl mov movabs or loope movabs jl in jnp push ficomp mov movsl movsl movabs movslq (bad) (bad) icebp callq rex.WR sbb outsl sbb or and sahf cli sbb and leaveq int leaveq js pop rex.WRX fs and add loope pop rex.WX sub es xor rex.WR rex.R (bad) adc adc adc rcrb adc in decl retq mov mov icebp (bad) mov test cmc (bad) xor (bad) fcomps rex.B pop pop (bad) add jns nop scas movabs (bad) iret (bad) xor imul out pop nop xor (bad) push (bad) pop or faddp xchg (bad) retq cmp jg xchg pushq mov js cs rex.RX cmp nop rex.RX pop movabs retq jp or hlt mov jmpq int retq (bad) cld mov rex.W insb rex.W imul mov stos in (bad) movsl xchg (bad) nop insb shl cwtl outsl xor (bad) fnstsw or pop jae test rex.WR (bad) outsb repz sbb (bad) adc in (bad) rcr xchg and movabs fimul sbb out adc xor pushfq sti cli xchg loop sbb fwait rex.WR movabs jge xchg (bad) add sub jns or movabs movabs stc rex.WRXB mov mov jg add fsubr in lret mov adc data16 stc (bad) or add (bad) sti (bad) icebp rex lret (bad) xchg lods xlat movabs mov repnz int3 push mov xor rolb sub xor xchg sub pop push cmp pop xor int push iret xlat mov fnstcw fidivl repnz imul sarb (bad) jns sbb or fwait pushfq sbb (bad) pop (bad) and stos in or cmp fiadd retq pushq in negb or xchg (bad) adc mov jp test movabs shrd jp (bad) adc sbb cmp (bad) callq push lret pslld rcrb (bad) add (bad) and hlt mov (bad) mov (bad) cmp std push leaveq test sti int adc jno fcomps cmp jl,pn lods repz jb jg out add stos (bad) lret sub cli in icebp mov mov imul sbb movabs adc add xor cltd mov (bad) mov mov rex.WRB rex.RXB movslq xlat (bad) add and (bad) sub mov push rclb retq mov pop stc movslq sub sub (bad) pop enterq (bad) fcmovu sbb iret in sbb cmp sbb scas outsl ds mov and movabs mov (bad) sub rorl add sbb cmc fmull test xchg jmp mov rex.W gs (bad) (bad) and mov lea jb push jnp (bad) fsubrl pop retq cmp jle push movslq lock or insb adc push (bad) fnsave sub fnstsw xchg jns popq out mov std in (bad) jae lods jno xor in ficom rex.XB repz push out sub scas adc and pop cmp mov out movsl push clc add (bad) mov rex.WX enterq fisubrl rex.WRXB out xchg (bad) cmp rex.RXB xchg mov push pop (bad) fiadd (bad) (bad) mov rex.W sti test cwtl lods and add (bad) repnz xor sahf rex.XB rex.WXB in pop mov imul jnp sarb xor sbb sub nop lock jne xchg jno jo jns std cmpsl (bad) cld jle pop (bad) sub rex add insb xor (bad) or out iret mov fwait decl cmp rex rex.WRX adc cltd in es rex.X cs in (bad) clc lods movabs xchg sbb push rex.X stos (bad) mov push lock xchg in and mov repz mov pop ja (bad) jns leaveq mov mov jnp cmpsl rex.RXB fcomp mov mov nop pop repz js rex.X rex.R push orb cmpsb push rex.WRX out loope (bad) xchg lods add test popq mov movabs adc movabs fiaddl test xor pushfq mov xor cmp sub rex.B (bad) (bad) scas rex.WR cmp loope (bad) out rex.RX mov jg or sbb (bad) (bad) (bad) push jrcxz (bad) rex.WXB or mov mov test cmp mov rex.WRXB ss jnp push out fwait and rex.WXB stc rolb sahf fdivrs cmp or mov lret or cmc rex.RXB rex.WXB fmuls sbb mov movsb rcrl out (bad) adcl loop insl (bad) subl jl pop rex.RB sbb es (bad) (bad) mov pop xor in fisubrl jne and xlat mov xlat int in cli subb sar fidivl rex.RB lock (bad) mov rcll sub rex.WX icebp jno gs pop sbb or retq cmp and cmpsb cwtl add lea sub incb pop fistl xor sar mov nop sbb lea rex.WX adc rex.WRB out stos int imul loopne retq or (bad) movabs and lods lahf cmp movslq mov data16 testl stos outsb (bad) sarl xorl test jae iret lods adc mov (bad) rorb (bad) xchg sbbb push int3 test jmpq push insl loop cmp add sti loope xchg lods hlt fcompl push data16 addr32 ror sbb xorl pop and add jo out add cmp and xor shlb (bad) add (bad) outsb jge sub add rex.WRXB (bad) mov iret out int3 out cmpsb xorl sub pop (bad) push enterq mov ds out cmpsl pop push cmp push mov add mov cmpsb (bad) shlb js cli sahf xchg add mov jb mov pop sahf rex.WXB sbb xchg mov icebp movabs decb mov (bad) add add cmp rex.R add and sub xchg (bad) cmp jg insl xchg push mov and mov jb cmpsb xchg mov je or rex.WX sub xor jle add rex.RX (bad) (bad) mov mov out andb (bad) and out jns cmp pop push rex.WXB mov cmp jle gs rex.WRX addr32 adc pop sbb movsl lret (bad) push sti std movsb loopne push js jp movabs add imul retq rex.W cmp adc (bad) rex.RB rex.WRX cmp jne (bad) enterq and jno (bad) ficom incl mov push faddl mov and sbb (bad) xor and fldcw (bad) push (bad) pop data16 cltd test mov jo cmpsb mov (bad) sbb fwait shl in out je lods xchg rcr lret cltd (bad) insl or sub cld (bad) outsl callq rex.WB and and movabs sbb rol xchg adc and xor (bad) (bad) cld mov push sahf gs xchg xchg out push iret addl xchg xchg sub cltd xor ficoml pop mov retq fwait xor stc fwait sbb (bad) ja es clc mov jo add mov pop (bad) mov callq mov pushq bnd cli test fmull test (bad) insb jl rex.WXB mov jns cmp out int es sub add mov leaveq cmpsb rcrl fsub insl cltd movsl push fldcw movabs sub fs in ja (bad) rex.X movabs pop js rex.WX (bad) and xlat lods xor callq sub (bad) test fsubl pmaxsw je sub mov test jmp setle sub xchg pushfq adc or js stos pop movslq xor outsl idivb fcmovne addr32 shlb rex.WX rex.WRXB sahf add sbb nop (bad) jbe fnsave push out mov mov jge xor jns jmpq jg jmpq movabs xor rex.RXB or rep xlat and loope and cmp mov sub clc test cmpsb clc jge push pop in (bad) std xor neg (bad) (bad) xlat cmpsl or loop (bad) movabs shr cs adc xchg (bad) xor (bad) lods (bad) std ja hlt add rex.WXB cs fsub xor sbb add fcmovne fwait leaveq retq sub rex.WRX sub fwait push jne lods adc xchg cmc or xor fsts xlat sbb pop fstps lods cmp icebp divl fisubrl xchg (bad) icebp fsts enterq lret out jg jo rorl (bad) repz xor push cmp outsb in mov add iret jge (bad) (bad) pop jrcxz lock (bad) rex.RXB stc fiaddl jl fidivrl pop jg ja fadds add cmp (bad) popfq icebp push sbb sub ficomp imul pop push in xor adc mov or (bad) rex.WRXB (bad) repz push shll lret rex.RXB cwtl fdiv rex.WB ss (bad) add xchg out fdivp lods pop popfq rex.WRXB jae je gs mov test leaveq (bad) movabs rol pop out addr32 jne gs xchg sbb test jb or or mov ficomp xor jb (bad) (bad) jns incl pushq enterq cmpsb xchg cmc cmp rex adc punpckldq stos fiaddl js nop (bad) pop scas (bad) mov mov push adc rcrl and (bad) mov add lret xorl pop enterq lahf pushq and rex.RX or shrl adc movsb jg (bad) retq or outsb pop cmp rex.WRXB cmp clc in in xor testl je sti (bad) (bad) int fsub shll add add loope adc sar add sbb std jne je shlb rex.W data16 enterq cwtl pop xchg (bad) rex.RXB xchg fsts mov loop xchg xor ror int fsts rex pop outsb (bad) int3 mov rex (bad) (bad) jg jmpq outsl mov or sbb popfq sar (bad) (bad) fldcw ss sti (bad) lcall pushq add mov mov (bad) or fistl and outsb icebp jg mov (bad) iret adc push std mov sbb add sbb jge repz addb (bad) int iret ja mov jnp outsb imul stc jns pop in (bad) rex.RB sub rex.WRXB xor cmp jmp rcrb test (bad) mov rex.B rex.WR pushq pushq (bad) (bad) jmpq push sarb xchg mov sahf sub cmpsb (bad) (bad) out (bad) decb retq xor or fucomip (bad) (bad) je rex.XB js jrcxz xor mov mov cltd xor push jnp pop jp (bad) (bad) (bad) fcomip jno xchg stc sbb jrcxz jo cld (bad) lcall (bad) cwtl or sti (bad) lcall mov test (bad) out (bad) rex.B (bad) rex.X nop xchg pushfq jns push ss rex.RB pop xor and jmp shll or add cld xor jae xor scas xor mov or rex.R fcoml imul (bad) sub xor add (bad) add retq sub mov add test test adc mov xor or loop push movabs cmpsb (bad) mov in cmp (bad) (bad) ds rex push jmpq in mov sub (bad) mulb mov (bad) jbe icebp and (bad) (bad) lcall jle sarl out cmpsb test lods data16 adc mov fiadd sub out jg adc xor cmpsb (bad) rex.WRB ss cmpsl (bad) mov cld (bad) (bad) (bad) lret push xor (bad) lcall pop mov fdivs repz (bad) outsl divl rex.R mov es mov sarb rex.X repnz push lret rex.RX rex.WRX or sbb scas jge (bad) push cwtl pushq fcoml movslq pop add (bad) mov stc rex.WB iret bnd test cmp jmpq jl (bad) lret mov mov rex.RX movabs (bad) rex.WRXB mov xchg (bad) data16 adc xchg cmp movsl fsubl adc hlt shlb push or (bad) mov clc xchg jbe insb in pushq (bad) mov add (bad) (bad) (bad) or mov lcall je test (bad) out cmp add mov add fs push leaveq xchg adc add adc (bad) rorb add xlat or cmp (bad) mov imulb subl adc push xor and rex.RX (bad) out sbb (bad) cmpsb test loopne mov cs loope imul mov (bad) (bad) mov loope mov iret mov jmpq jmpq mov imul and mov mov mov test movabs fnstsw gs mov fadds movl add xchg sub mov (bad) (bad) lcall repz jne adc fimull lea (bad) pop test xchg (bad) jmpq rolb movsl sub and rex.WX xchg mov std (bad) (bad) (bad) (bad) add and (bad) (bad) sbb cmp xchg in mov (bad) (bad) mulb rex.RB fs ja fs jl sbb sbb (bad) mov xchg mov std (bad) pop jns mov jge xchg or mov cmp rex.WRXB pop mov ss cmp adc cmp jle jl (bad) repnz jmpq cmp cmp mov rex.RX mov iret sbb cs decl xchg retq mov movzbw bswap pop movzbl mov xchg bswap mov movzbq jmpq jno leaveq xor pop sub movslq rex.R sti mov scas out mov insb (bad) repz add rex lock sahf mov cmp lea (bad) and iret (bad) rex.RX and (bad) mov fbstp callq mov push out lods (bad) std (bad) (bad) fbstp push mov (bad) lcall add jo xlat (bad) ds sbb in mov (bad) add (bad) (bad) push addr32 cmpsb (bad) scas mov or notl je cs jns adc (bad) (bad) (bad) jne jmp mov pushq mov (bad) jg (bad) (bad) (bad) adc cltd adc (bad) (bad) scas ss rex.WRX data16 test (bad) movabs xor mov xor xchg repz int3 rex.R rex.WRXB imulb pushfq insb addr32 mov adc movabs roll (bad) (bad) add adc or and jmp jae push and (bad) (bad) (bad) nop rex.WR jg cmc pop sub mov cltd int sbb xchg (bad) cli (bad) lcall (bad) outsb mov rex.X mov add mov rcrl add (bad) loop cwtl cmp std sahf imul cs rex.R andb rex.RB gs rex.W (bad) (bad) xchg (bad) jle fs lret es (bad) adc jo std push (bad) adc xchg xchg vpackssdw or mov jp (bad) cmp (bad) cmp push xchg sti (bad) jns sub adc mov movsl or fidivr test mov mov xor jl cmpsl rex.WRXB rex.RB movb (bad) addr32 lods and retq add lahf jg fstl rex.XB decb je cmp sbb insb rex (bad) (bad) mov fwait xchg xchg je add (bad) cli ss cld (bad) lcall or (bad) lcall movsb (bad) lock (bad) mov mulb fcom mov movslq rex.R lea popfq fldl jae mov jno pushq (bad) mov xchg cld mov (bad) mov mov (bad) (bad) jb stc add mov imul vpsrlq rex.W mov add fimull xchg movslq loope and xchg rex.XB (bad) clc pop mov in or jmpq jo xchg decl rorl retq mov sbb rex.WRB (bad) loop (bad) test mov (bad) lods sbb jmpq xchg hlt push xor fisttpll rex.WRB rex.RXB xchg js (bad) mov in rex.WRXB popfq mov jl (bad) (bad) (bad) mov jae sbb add rex.WRB (bad) (bad) fildll adc (bad) lcall push sbb (bad) (bad) cmc (bad) je fistl add sub jg xor cmp pop (bad) in add mov emms mov movsl rex.WRB xor imul lods cmc xor stos mov pop sub shrb fnsave (bad) decb in or in lahf push jo mov retq clc xchg push or hlt sbb jge out in movsl in pop or jg mov pop pop ds mov xchg fimull cld and and (bad) not mov not jle setae stos setns mov jmpq test stc test jmpq sub stc jmpq callq btr sub jmpq je not bswap mov lea lea not mov xchg movzwl not lea lea mov lea not bswap movsbq lea mov jmpq sbb mov sbb retq adc jne mov cmp out cmp loop jne cld or cli cmp cmpsb xor sbb sub (bad) ja popfq fnstsw cli (bad) and and negl es andl rex rex.WRXB rex.WX cmp cmc jns push pop mov xor pop rcll adc rex.XB xchg pushq or or andb movslq pushq js cmc cld (bad) (bad) fildll or lcall lods pop scas pop sbb mov cmp xchg jmp pop rex.WRXB (bad) fildll (bad) popfq sbb imul movslq jmpq or mov sub (bad) jmpq xchg (bad) fisubr pop sbb outsb mov xor cmp mov movsl push cmc jb lock pop repz pop and movzbl not lea mov jmpq jmpq jae shl mov bsf cmp mov shl test mov cmp cmc jmpq jmpq clc mov test jmpq insl movsl (bad) push nop and sbb xchg xor sti adc jrcxz rex.X rex.X add cmp pandn (bad) mov mov sub xchg and xchg scas lods cmp leaveq fdivrp (bad) (bad) mov (bad) rex push xor js and (bad) insb xlat or sti (bad) lcall xchg sub pop test sbb (bad) adc pop out (bad) sub es out or jp (bad) mov adc jnp (bad) (bad) out or pushq mov outsl fbstp mov jmp rex.WX js scas (bad) cmpsl (bad) jmpq jg lods rex.WXB and and icebp icebp cmp insb or sub xchg push cmp rex.W cs and adc rex.WRX scas jl mov loop jl repnz pop sbb decl (bad) or add jmpq jmpq sbb mov add int (bad) add movslq test xlat mov int3 add movsbl int3 je ficompl callq (bad) mov (bad) sub mov (bad) (bad) (bad) decl rex.X sbb cld (bad) (bad) jg clc movsl push stos sti (bad) lcall lods pushq jl cmp frstor and sbb mov mov (bad) ss test addb xor rex.W sub imul xchg mov cmp mov movabs pop fstl loop test scas jl and jo ss cs (bad) adc loopne iret sbb lret mov cmovbe sti (bad) jne sar sar shr mov jmpq ja jmpq clc test or jmpq mov xor and loop mov movabs or (bad) mov pop sub insl xchg rex.X jl cltd add hlt pushfq sub and sub rolb xor clc addb rex.RX sbb (bad) (bad) (bad) lcall idiv (bad) (bad) (bad) gs imul rex.WRB rex.WRB mov jnp iret test sbb js idivb jbe andl (bad) in sbbb xchg rex.R rex.R lea (bad) add shl cmpsl push adc xor mov xor rex.WX add movsl insb cmp fnop (bad) and mov (bad) cld test idivl mov (bad) movsb cmp and pushq test (bad) push jmp leaveq jns out xchg sub (bad) push movabs loopne sbb cli (bad) mov rex.WRB jmpq jmpq ss (bad) mov rex.WR rex.RXB decb out (bad) xchg add xchg jp shll callq (bad) and and xor rex.WRX mov rex.W rex.RB rex.WXB fwait cmp scas (bad) mov (bad) lcall or scas jl iret (bad) es mov out xor pop incl mov (bad) lcall adc xor (bad) rex.RX jo pop jno sbb add movabs gs and xor insl in add test jne imul (bad) push jrcxz rex.WR sbb sbb xor divl test lods es callq add rex.WX rex.WRX and mov fimull mov loop clc sub out andl add cmpsb popfq in mov mov push (bad) out xor lock in repz movabs mov js fnsave (bad) push and pushfq lret pop cmp jl pop test push add scas rex.RX or cmp mov out rex.X (bad) add or out sub cld (bad) (bad) (bad) (bad) (bad) cmp fdivrl rex.WX rex.RX gs insb leaveq cs adc (bad) in rex.W adc jno jg (bad) loope rex.WRXB cs sub pop movabs (bad) insb mov mov (bad) xlat adc pop mov imulb mov sti sbb or testb rex.WR and xchg and decl rex.WRX callq or xchg repz xor in scas movb loopne iret (bad) mov sahf vunpcklps (bad) (bad) pop or cmp xchg xor sub orl rcll xchg (bad) scas pop xchg xor std xchg add or lods push je out (bad) movabs rex.W sbbb jmp (bad) (bad) (bad) fildll in or jp jmpq movabs lret fistpl mov pushq icebp loop or cli fldenv rex.WR jrcxz std ss add jns rex.B (bad) hlt insb je rex.R lret cmp sbb xchg and (bad) fiadd mov es (bad) (bad) add and jns push sti movabs rex.RXB adc test or lods sub rex.WRXB rex.WRB repnz lock ja mov and rex.W gs xchg adc stos ficoml rex.W push xchg sbb lret test (bad) (bad) jbe retq cmp jmpq ja jmpq add add add jmpq add sbb add add or add or add js sbb test sbb cwtl lret lock add push cmp add pop add loopne add mov add push add add add add add add add add add add lret (bad) sbb in sbb add sbb (bad) lret sbb sbb sbb cmp sbb rex.XB sbb rex.RXB gs outsl fs imul insb insb add jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add jb imul add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul movslq outsl js pop insb insb add or jo test retq cmp nop fidivrl or sbb add jbe add (bad) movabs cmpb and shl adc (bad) (bad) xor clc pop (bad) jl (bad) sub rorl fadds insl mov cs rex.WX fwait stos jmp mov in sub lahf (bad) repnz mov or cs xor loope mov (bad) mov jmp cmp adc movabs repz rex.RX stos (bad) (bad) cmpl sar mov jl mov stos and (bad) pop enterq lret mov loope add imulb sbb (bad) clc rex.RX out loopne jne pop rolb jl imul rex.X pushfq movabs icebp jg rex.RB movabs int mov push rex.XB int3 ja movslq sub popfq mov rcr sub mov fmulp mov xlat (bad) fnstsw adc jo xchg outsl adc add cli (bad) xor push andb sub xor insl xchg (bad) lret fbstp fmuls (bad) cwtl test push (bad) adc mov cwtl cld sub scas pop cmpsl pop xchg pop or loopne (bad) in int3 mov imul ficompl cmpsb sbb pop (bad) fisttpl mov pop lods (bad) stos (bad) fisubl movsb mov repz xchg movabs rex.XB sbb jne sub lock xor lret cmpsb (bad) (bad) nop in cmc (bad) fs mov and movabs (bad) (bad) xchg jo enterq shrl cmp pop add cmpl mov retq loop fs or cmp mov or in mov popfq lods rex.WX fidiv rcrl (bad) rex.RX int3 (bad) (bad) cmp push stos and xor (bad) in adc leaveq and movslq add (bad) movslq lods (bad) cmpsl adcl (bad) rcl lea addr32 xchg cmp jbe nop retq add imul push push jle xchg or ja add fildll mov rex.X xchg add movabs in cmp sbb push mov push cmp push mov adc lods pop leaveq add int3 orl rex.W clc xor lock (bad) xchg fwait mov lock in cmpsb and rex.B sub cmpl retq rex.WRB lret faddl je rex.WRX (bad) jae cmp cltd rex.RB imul pop loopne cmpsb (bad) jnp sbb (bad) sti pop sub ficomp out popfq movabs jg fisttp lea (bad) int3 sbb xor ror pushfq lods in imul (bad) mov insl sbb add jnp (bad) int int3 xor xor lret pop out (bad) mov cmovb rex.B cli out push incb xor imul (bad) (bad) add repnz jns sub idivb push mov fwait (bad) scas (bad) mov loope mov (bad) cs imul (bad) clc int xor in adcl std rclb es rex.R fs lret xchg cmp ds mov pop fwait movsb pushfq popfq addr32 xor sub jo (bad) xlat fisttpll callq loop mov (bad) jp (bad) (bad) movslq test lret (bad) jg (bad) xor xor fucom mov (bad) (bad) or lock fsubrs sub movabs (bad) enterq or jno enterq cltd jns rex.X scas js add pop add (bad) fxch (bad) mov imul (bad) mov rex.WB imul jbe xor rex and sbb xlat xor stc mov and (bad) imul jns (bad) adc jo adc sbb add sub (bad) test pop movabs push (bad) jmpq repnz in cmp incb rex.WB cmc lods jg mov pop sub (bad) mov xchg mov (bad) (bad) (bad) shlb out (bad) movabs xchg (bad) cli cmpsb cli mov (bad) (bad) ss jl (bad) mov movabs jrcxz retq rcll mov iret mov adc mov jge pop (bad) rex.R mov xchg psubsw adc mov rex.WRB (bad) vpaddusw xchg iret leaveq sub add popfq (bad) mov mov push movsb pop (bad) sub movabs out (bad) sbb cmp out sbb cli jno es (bad) pop mov xchg sarl in (bad) loope enterq (bad) sbb imul cmp (bad) icebp pop ja int3 rex.W (bad) rex.WX (bad) (bad) (bad) xor (bad) push sbb sbb rex.XB rex.WX pushq pop in movabs or sbbb jnp popfq (bad) out sbb adc sti ss xor mov out adc xor ja sbb repz rex.RX jb sub sbb jb sbb mov fcmove lods callq lods xlat and xchg pop shrl or retq js stos mov rex.RX test rex.B and jl rex.R and movsl imul movabs insb jp xchg and xchg mull pop iret fbstp mull pushq sub jnp rex.WRB out insl sub and and sub (bad) and (bad) icebp shrb pop adc rex.X jmp (bad) sub (bad) std xchg rex.WB sbb xor icebp repz movabs addr32 addb jle rex.B mov (bad) xor pop out imul mov mov xor fst xchg or mov test and mov xor outsb (bad) rex.XB (bad) shlb out xor in xor xor (bad) (bad) or jno,pt (bad) jp xchg movslq test scas movabs adc js add retq stos add movsl rex.RXB stos xor rex.RXB rex.R rex.WXB test adc fcomp jae mov movabs pushq add (bad) mov xchg add sub jno movabs (bad) fsubr or enterq mov (bad) sub (bad) shrl push and adc movslq (bad) cmp jnp es rex fiadd jmpq xchg (bad) lods adc retq lods (bad) test adc lock fmuls repz movsb and test xor jns (bad) stc and add mov jg jae outsl rex.WXB lea (bad) xchg push (bad) add callq adc jne push pop rex.X xchg xor pop lods adc in and loopne (bad) ds xchg frstor jmp mov nop xorb mov int3 jl jbe push movsl sbb (bad) and (bad) sub xlat fwait mov adc (bad) loop (bad) sbb test fistl mov out (bad) xor jbe insl push movabs out movsl and mov jne nop (bad) sub rex.RXB add mov jae pushq ja pop xlat loop add jnp fimull lret jae jge imul insb es out mov mov rex.X push fs jg icebp xchg xor pushq cmp outsl roll mov fcoml cmp out pop or rex.WR insb push rex.RB and faddl outsb sbb xor rex.WR jbe push sbb mov rex jg rex (bad) xchg inc cld add jmp jbe rex.WX movslq and test add je (bad) movsl mov rcrb popfq rex.XB pop stos hlt je rex.WX or scas fisubl mov (bad) movsb out jne lock (bad) (bad) or (bad) rcl cmpsl xchg or jge jp fbstp xchg retq jns fistpll iret sub jmpq jns out adc (bad) cmp mov mov outsb rex.RX or cli int3 xchg loope add (bad) enterq mov sub sub cmp fsubrl insl adc mov rex.XB stc jns repnz mov push faddl add (bad) (bad) loop scas pop adc decl cli stos adc jb mov rex.WRX cmc imulb adc int3 fisttpll mov hlt jge mov pop (bad) fldcw lahf xor xchg (bad) (bad) push (bad) insb sub movabs xchg xchg (bad) (bad) (bad) jl test stos and movabs (bad) lods add lahf xor jle in (bad) mov test mov ror (bad) xchg push mov or (bad) rex.WRXB imul jmp clc (bad) (bad) es es rex.RX ss hlt adcl (bad) cmpsl pop jae (bad) mov mov sbb in cmp retq (bad) push int add rex.RB es and rcrl cmp ja in (bad) pop jl (bad) (bad) clc and mov push rex.WB rex lret sbb mov addl stos cmc movsb jo (bad) fsubl and test repz cmp rex.WX xor rex.WRXB and rex.WRXB push hlt mov movd cmp ja xchg (bad) (bad) sub rex.RX icebp xorl (bad) xchg rex.WRX rex.WX (bad) (bad) outsl rex.WRXB jge pop jb pop and clc shrb jl or xchg rex.W (bad) mov xor and mov or jp xlat sbb ja (bad) mov (bad) scas adc or and or pop xchg and (bad) sub repz xor iret (bad) pop mov shrb mov outsb xor jns (bad) ja xchg in outsl movsl clc mov add xchg adc push outsb imul cs insb add add add add test cmp jmpq out push sti movabs sub pop jno push (bad) mull movsl rex.WRB rorb push mov sub mov pushfq in rex.X fidiv (bad) rex.WB cmpsb test int3 movb imull mov loope xor rex.RXB sti out pop (bad) xor (bad) (bad) (bad) and insb xchg xchg sti (bad) lcall cmp pop movabs mov pushfq jnp mov push test (bad) decl sahf movabs divl xlat outsb movabs movabs imul mov cmp (bad) retq adc cmp pop rex.RX gs stc in not xchg push cld sub (bad) idiv xchg pop icebp pop movsb and pop insl xchg add fistpll lock adc fs lret sub clc push or jp and lcall pop clc xlat (bad) stos retq mov jbe mov cmpsl xchg (bad) (bad) (bad) mov and fsubrs add push push xchg sti (bad) lcall cli xchg (bad) rorb mov out scas (bad) jno cmp mov xchg stos mov sbbb scas xchg sbb and adc mov xchg or rex.WR clc push scas (bad) (bad) mov lods rex.WRXB adc out jne cmc jle in pop mov push rorl addr32 jl or callq (bad) and jbe push (bad) pushfq rex.WR xchg in movabs push mov sub and mov (bad) push rex.WRXB and fiaddl xchg sub movsl and rex.WB rex.WRXB rex.WX repnz jae xchg sub in insl sub leaveq mov mov rex.X xchg stos mov loopne mov (bad) mov in sbb and sbb (bad) xchg add movabs cld in and sub fstpl gs jnp and adc pop mov fldcw decl xchg (bad) or adc outsl and (bad) pop mov je jmpq jmpq jae rol mov bt sbb add not mov jmpq jne sbb mov clc test or jmpq jbe fwait add lea int (bad) test mov adc cmp mov notb addr32 and mov (bad) ficomp rex.WRB gs pushfq jnp loop sbb xor (bad) mov rex.WB sbb (bad) out out rex.WRB rex.WRB (bad) sub jmpq rex.B mov (bad) (bad) (bad) movabs loop rex.WXB xchg cmp callq pop retq retq sbb test push (bad) xor add loopne cmp sub out (bad) mov (bad) addr32 (bad) ds xchg pop movsl stos xor mov sub retq push sub rex.W cwtl rex.WRX fsubrl jb andb rex.W incb movabs mov (bad) outsl xchg jmpq je insb (bad) cmpsl and jmpq mov (bad) mov imul pop adc cmpsb xor mov es (bad) rol cmpsl (bad) in retq sub add cmp (bad) lcall mov (bad) (bad) mov jnp rex.X (bad) rex.WRXB (bad) lcall jg xchg or mov sub out jbe outsl (bad) add xor add imul mov and push lods pop mov adc popfq int rex.WR cmp sbb and (bad) icebp rclb push xchg add sar (bad) decl test add add bt stc cmc cmp retq push push push rex.WB cs rex.WR rex.WR and pop imul xchg incl (bad) es movabs out sbb gs (bad) (bad) jo mov (bad) mov pop leaveq and (bad) test out rex.RX mov jg (bad) jbe (bad) push popfq mov (bad) stos loop icebp (bad) movabs stc (bad) sahf sub sub xchg push cmp adc rex.B (bad) (bad) inc jg mov sti (bad) lcall lret movslq (bad) je fistpl or ja rex scas cs sub jmp jbe pop sub gs mov lea xlat (bad) fstpl xchg scas out mov sti xor insl int mov push xchg stos loop shl out (bad) mov (bad) adc hlt mov push movslq addr32 add adc adc cmp rex.B pop incb movslq mov in repz std jne push (bad) iret lret test (bad) movabs rex.B and push callq and int xor (bad) (bad) lcall sub mov fs sub stos std rcr fnstsw cmc cmp pop repnz (bad) (bad) fbstp or add (bad) lcall (bad) adc fnop shlb fs cmc (bad) (bad) rex.RX adc xchg rex.WRXB sub sbb movsl int retq movabs fwait cmp jrcxz rex.WR jrcxz and adc or sub cmc in and cmp push movabs jnp jmp pop lock out (bad) out add retq (bad) icebp (bad) ja (bad) out or add jae jmpq ja rcl sub test rol sub not shrd add stc not rcr bt mov or setl rol mov cmp test cmp bt repnz jmpq mov and jmpq add sub pushfq sub rex.R xchg lret cmp test adc or mov fistl mov and loope pop insl cmp out rex.RX add xor cmpsl push and lcall fildll rex.WB (bad) and ja nop mov jb rex.RX jnp frstors (bad) mov push mov jb jmpq jl cld sub js cs mov callq pop sarq outsb jbe out jl (bad) pop icebp outsb insl fucomip js (bad) (bad) out jge bt cmc stc jmpq push mov (bad) stos and and cmp icebp test pop mov (bad) or loope js xchg xor xchg (bad) jmpq insb cmp iret rex xchg push test adc (bad) mov pop (bad) mov imul cmp cs (bad) (bad) jg cmpsb cltd movl mov rex.WRX subl lret or push int3 stc out (bad) sub insb cltd rex.WX cli sub pushq push sbb leaveq loope pop mov xor sub xlat movhps xor fdivrl jge jae add (bad) fsubl (bad) ljmp stos sbb je shll retq sti jmp loope movabs mov movabs subb ja in je scas pop out (bad) movabs (bad) xchg cli fstpl stos pop cmp sub fisubrl stos xor pop ds in cmp rex.WB rex.WRB hlt cmp int3 xchg fs jl (bad) (bad) lcall lret loopne test (bad) (bad) jg (bad) cmp (bad) rex.WXB jo pop fs fildl cmp rex.WRX mov jp (bad) (bad) (bad) movsb cmp and outsl mov jno mov xchg pop rcll xlat cs xchg scas jo (bad) jrcxz cltd (bad) push jle or cltd add loope push sti rex.XB movabs (bad) sub mov loopne outsb scas jl int3 pushfq lods sub mov adc ss neg shr mov rol add setl setl mov jmpq jmpq jmpq js (bad) mov fsubr pop movb xchg xor movabs callq out (bad) addr32 std fcompl addr32 int mov add sbb (bad) rex.WX cmp (bad) (bad) mov rex.WXB rex.B test (bad) mov push mov cld (bad) lcall fldcw (bad) cmp (bad) lcall xor movabs lea sarb mov (bad) jg sbb cmp jbe clc (bad) (bad) mov movsw and sahf ficom (bad) mov imul (bad) popfq mov sti std movsb adcl mov movsb adc xchg pop rcll ja in xchg outsb (bad) mov and (bad) (bad) xchg and xor mov clc movq cmc cmp mov mov hlt lods xor jg (bad) rex.WRB lods cmc xchg (bad) cmp (bad) (bad) mov (bad) fnsave xor rex.X (bad) mov (bad) lahf out sbb loop or lcall rex.WRXB int3 (bad) cli repnz (bad) (bad) mov rex.WRXB std xchg (bad) (bad) mov cmpsb es outsl sbb jno rex.RXB cmp mov (bad) rex.WRXB mov sbb and retq hlt callq fstpt jmpq pop (bad) xor mov cmp push cs lgs scas (bad) (bad) mov jns xchg (bad) rex.WRX fsubrs movsb pushq lret mov or out (bad) cmp jg (bad) or es rex.WX (bad) (bad) fbstp mov leaveq test imul sbb fsubrs retq movabs or or movabs addr32 js (bad) (bad) cs sub loop loopne (bad) (bad) ss pop mov clc add sarl sbb jns push cld jns add (bad) add stos xorb rex test (bad) (bad) push (bad) pop adc movabs out test jmpq xor jmpq (bad) xchg jbe lods sbb mov mov (bad) mov mov jne add (bad) mov fsts sub (bad) (bad) out sbb (bad) lods gs jrcxz retq and (bad) std sub js and (bad) lcall es cmp xchg sbb mov jle cld (bad) (bad) (bad) xchg mov (bad) add (bad) lcall and xchg jl (bad) (bad) callq mov sbb (bad) rex.WR and out mov pop (bad) jbe test (bad) sbb rex.WRB ss mov clc outsl mov adc jno lret jnp mov andl and xor sub pop pop cmp sbb rex lret nop push mov imul out jge sub jmp and cwtl rex.WRX out rex.WRX or mov rex.RX xchg sub xchg stos idiv jmpq jmpq mov and mov lahf cs mov in add faddl sub (bad) (bad) callq mov rex.WRXB cs ja ss leaveq rol adc repnz cltd cmp js rorl xchg add fistpll add (bad) (bad) lcall xorl std (bad) lcall rex.RX mov rex.XB in pop imul jp (bad) add mov pop sti addr32 outsl (bad) out xchg (bad) and rex.W callq push (bad) outsb cs unpckhps (bad) movabs rex.WB cwtl pushq out (bad) mov add faddl imul and xchg stos (bad) mov stos retq sub sbb icebp mov (bad) sub adc movabs scas jge push iret fs jo out (bad) sbb movabs sub add (bad) jmpq xlat cmove pushq mov xlat xchg pop rcrl cmpsl data16 sub ss jne cmpl add pop add (bad) push jbe cltd (bad) out movsb repnz scas cmp push rex.X and (bad) (bad) lcall mov roll push xor push (bad) cmpsb out (bad) (bad) fild rex.W rex.RX (bad) lcall pop and mov (bad) mov leaveq xor add cltd or jmp push rex.WXB cltd or data16 icebp fcoms imul cwtl rex.WX mov lret cmp retq xlat insb cmp fs sub mov mov lret and loope cmp (bad) push xchg rex.RB rex.WX cmc xchg adc stos xorl jmpq jmpq cmc jmpq stc jmpq add add add add sub add xor add enterq add add repnz sbb add add xchg (bad) stc cmc jmpq jmpq mov lea pop retq testb mov and add lods adc out (bad) mov fsubrl or rcll leaveq loope js movl and adc mov outsl es add sti iret (bad) push hlt xchg pushq rex.WR hlt jb xchg (bad) (bad) (bad) (bad) mov sti loop mov lcall cltd and cmp rex.WRX sub rex.WXB retq jns out (bad) in mov jae stos pop mov mov rcrl in jb vrcpss or fmuls jno callq (bad) mov (bad) cmp mov fdivl hlt test callq xor xor out mov es sub push sbb mov out repnz jl jb add idiv clc not or and mov sar mov bt mov cmp xor cmp repnz jmpq jmpq jmpq not lea mov retq jne cmp jmpq clc clc or jmpq jmpq mov jno mov mov rex.X adc fidiv repz lahf cs std xor shll mov repz rex.WRB sub mul sbb xchg mov std pop (bad) (bad) (bad) (bad) jg sahf cmpsl cmovbe mov or cmp mov std (bad) (bad) jg cmpsl ss (bad) lcall sub jb pop pushq retq (bad) je loope ds (bad) out sub cli loopne stc out es (bad) rex.XB addr32 (bad) out jo sbb loope cmp add retq or xchg rex.RB movslq jge (bad) mov int faddl in mov jns loopne pop (bad) (bad) (bad) lret test stos sbb pop lea scas push xchg add leaveq fnstenv mov mov movabs test (bad) rex.RB movabs (bad) insb movsb jmpq xor xchg cmp xchg xor add xor mov cmovg cld and imul (bad) mov jl rex.XB clc js sarl (bad) (bad) std xor sbbb sub push movsl callq rex.RXB push or adc nop cmp push cmp (bad) (bad) mov (bad) cli (bad) lcall fisttpl movabs in mov rex.WXB mov xchg or jrcxz (bad) push cwtl rex callq rex.X rex.X add (bad) data16 hlt xor jrcxz or xor cmp jne lods (bad) (bad) pop iret ds (bad) loope mov pop pop add (bad) (bad) sbb test mov cltd jns addr32 jmpq xchg or jp and mov mov mov push (bad) mov jge divb int3 sti jnp push jae rex.WR vorpd movslq cmc cmp (bad) rex.RB xchg jmp pop (bad) pinsrw lcall xchg xor (bad) pop (bad) cld (bad) lcall in insb and sarl mov sahf or (bad) data16 and xor jae in (bad) lcall shll lcall adc enterq insb and cmp repz push jne mov xchg jge (bad) (bad) mov adc adc lods cld cmpsl (bad) (bad) sub rex.WX (bad) retq lret es (bad) incl xlat mov imul (bad) (bad) mov add sbb pushq rex.WRXB lods mov rex.WB (bad) lcall xchg push adcb jb cmc test out pop sbb cltd or xchg js (bad) (bad) or movabs je (bad) ss (bad) (bad) loope pop add rclb cmc (bad) (bad) jg movabs xlat fistp jle fcomps in rex.WR adc mov pushfq and mov cmpsb pop mov rex.RX xor data16 rex.WX movsl and xchg jae (bad) mov (bad) (bad) (bad) int3 sub rex.X lret js mov xor push xchg rex.WRXB std rex.WXB rolb push fwait add (bad) rex.W bt jmpq je cmp jmpq jmpq mov setl stos mov jnp mov jmpq cmp jmpq setl lea lea setne mov xchg mov mov xchg bswap mov ja movsbw lea jmpq test rex.WX pop jno in and int rex.WXB (bad) shr (bad) fdivrl out iret jp xor or mov pop clc test decb rex.WRXB insl int sub sub add cmp loope cmpsl (bad) (bad) cmpsb gs loop adc rcrl (bad) sbb lahf adc sub (bad) lods push pop cmp adc fwait jl xor xchg jb sub mov rex.R xchg add stos xchg (bad) jno in xchg adc (bad) fincstp scas jnp cld cmp cltd mov sbb sti xor (bad) fild sti subl rcl (bad) (bad) pop in rex.WX rex lock int std jp cmpsb adc jge repz rex.WB pop (bad) mov pop mov rex jrcxz mov rol sbb rex.WXB rex.WRX ds jmp mov and out xchg repz jns push ja mov scas push in push stc andl jae movabs (bad) (bad) (bad) mov mov cld or lret out jg push add stc jae jns cmpb es adc jne prefetch iret rex.WRXB push stc sub fwait jp in rcrl (bad) (bad) jg and (bad) mov mov (bad) sbb sbb rex.WRB xchg pop sub jae loop mov push (bad) (bad) (bad) jb (bad) repnz xor gs sbb (bad) ljmp adc mov rex push xchg je rex.WX push out rex.WRX (bad) fdivrl jne push (bad) cmpsb cmpsb ds rex.XB callq (bad) (bad) mov rex (bad) jrcxz jmpq cli jge sub repz int add (bad) mov (bad) cmpsb fsubrp push je push lea sbb and test xor cmp push or mov vpaddsb sbb sbb (bad) mov (bad) scas sbb je cltd jne sahf (bad) rex.WRB adc sbbb (bad) (bad) mov jns movnti sbb (bad) pop mov enterq test mov sub sbb loope sub or int xor lods sub test (bad) and test sub cmpsb (bad) rcrb cmpsb pushq sub rex.RXB add add cmpsl imul sub cmpsl (bad) int (bad) roll mov cmpsl push cmp pop cmpsb callq jmp push mov sub mov xchg lret (bad) pop movsl fildl movsl cmp xchg int mov or (bad) mov fistpll lods mov or imul jle sub jp clc cmp push xor xor xor sub mov and xchg push test xor rex.XB or or fisttpl rex.WX sbb jo jno sub movsb cmp iret stc sbb rex.WRB jle rorb jl sti movabs xlat (bad) outsb movabs lret jnp mov int and jbe and cmc shll std movabs movabs movabs movabs ss and imul push add imul cltd rex.WXB push xchg cli imul hlt pushq mov push movabs in lahf or cmpsb (bad) rex.WX sbb shll lahf pop sub cmpsb mov sub jmp imul jrcxz (bad) push sahf jno jmp cmp (bad) jb and loop in adc mov outsl cmpsl out cltd pop mov nop loopne test sub rex.X mov int lods mov sahf mov jp outsb sbb insl and sbb rex.WX (bad) lcall xchg sbb ds stos pop lock cld (bad) (bad) fbld mov adc adc adc rex.WXB gs in sub (bad) ror movsb movsb rex.X pushq fisubr cld insb mov (bad) pushq rex.RB cmp sub (bad) (bad) je xor mov repnz repz (bad) fbstp rex.WR adc sbb mov iret lret cltd xor xor out (bad) rex.WRXB movsl fs retq leaveq icebp in xchg sarl adc (bad) mov rex.RX xchg sub jrcxz (bad) (bad) (bad) decl rex.WX retq hlt xchg sub mov (bad) jg rex.B pop sti (bad) lcall (bad) out testb scas jg rex.WRXB push or xlat add in imul (bad) rex mov mov (bad) ja or jl addr32 and add imul mov and mov dec jns callq movsl adc outsb xchg (bad) sub mov mov faddp (bad) sbb rex.WR push sbb cmp insl (bad) loop rex shrl jno mov add add jp adc cmc sub cmc stc cmp stc cmp jmpq jmpq sbb fidivrl out popfq sub ficompl jne in sbb loop icebp (bad) rex.WRXB out (bad) ds std jge scas sbb movslq in and movabs stos (bad) rex.W (bad) out stos popfq pop sbb (bad) lcall xlat addr32 mov ja ss add cld (bad) (bad) (bad) fisub (bad) idiv (bad) lcall rex.WX adc (bad) mov mov mov std jrcxz jle mov scas mov adc adc out jno lods fisubl (bad) outsl es cs (bad) or scas lods (bad) jnp mov (bad) add idiv fldt cmp adc rex.WB (bad) mov sub jmpq rex.WXB rex.XB test orb cli xor cld xlat jge (bad) out xchg and test enterq bswap bts mov ror mov bt mov clc jmpq pop adc test and or je adc stos fcomi and imul xorl (bad) movabs cmpsl in iret and xor xchg (bad) (bad) fucomip fcmovne xor insl loope (bad) (bad) lahf cli mov push mov cwtl rex.R fisttp addl (bad) (bad) (bad) rex.WB rex.WRXB (bad) lcall ud1 out lods jmp mov xchg rcll iret jg ficom rcll mov pop (bad) or xchg cmc (bad) pop rex.WXB mov mov pop movb sbb (bad) mov int jrcxz leaveq shl outsl (bad) cmc or fistp adc rorl cmp add rex.RX rex.WB iret sbb xchg (bad) incl rex.WR incl mov jl (bad) decl (bad) fdivs mov cmp cmpb jmpq fbstp and movsb insb retq lods pop test cmp loopne xchg xor add add (bad) data16 mov mov rex.W fwait cmp mov (bad) (bad) (bad) (bad) (bad) and lcall clc mov in xchg (bad) (bad) cs adc xchg (bad) rol movabs mov out pop jrcxz (bad) xchg fiadd stos pop imul or (bad) mov movsb pop xchg sbb rex.X cmpsb and mov rex.RX rex.WRX xor je and stc (bad) jg cmc mov cmp sub mov jmpq add mov retq jne mov mov jmpq cmp jmpq setl movzbl pop jmpq test jmpq pushfq cld xchg sti shlb fadds add (bad) in and push in sbb cmpl pop insl lea sti movslq rex.RXB rex.RXB rex.WB rex.WRB lahf mov rorl (bad) es retq cs sbb jne sti xor vpmaddwd rex.WB (bad) cmp test cmpsl sti (bad) lcall add cmp movsl cmp icebp jno pop xor (bad) (bad) (bad) fidivl rex.WRXB add movabs mov xor mov rex.W shrb xlat adc imul sbb movabs and xor pushq scas mov xor mov (bad) mov (bad) jl xor rex rex.W and (bad) mov cmpb jmpq jmpq pop roll (bad) cmpsb pop cmp (bad) mov xchg sbb mov mov and mov pushfq sbb add lahf sar imul incb xchg xor or int cli mov (bad) (bad) (bad) push push (bad) orl mov (bad) mov and int scas push xor or lods sbb jns add rolb popfq mov (bad) lcall movsl add rex.R pop ja sub rex.WRXB in lea paddusw add pop test cmp es lret enterq (bad) cmpsb shlb xor (bad) (bad) cmp cmc repnz jmpq je jmpq jmpq mov mov je callq jne jne not not movzbw not mov jmpq push lock std std lea icebp retq jg insb cmc rol pop sub mov (bad) jno xor sbb lods pop jge pop in pushq stos (bad) push pop iret add in and clc pushfq xchg testl (bad) (bad) je data16 xchg (bad) jbe (bad) in and or cmp xlat rex.RXB rex.B rex.R push xor cs insb add lea (bad) lcall adcb jp roll adc sbb (bad) cmp (bad) in mov pushfq (bad) adc ds sar cwtl (bad) lahf scas (bad) movabs pop test push imul (bad) (bad) jg fnsave or or lret (bad) (bad) rex.RX cmc insl (bad) and lret sbbl js,pn cmp mov sbb stc mov jno rex ljmp cs std add xchg jp sbb cmpsl cld (bad) (bad) jg add (bad) sti (bad) lcall sub retq ss scas and repnz xchg (bad) sbb rex.RX (bad) (bad) rex.WRX insl fimul retq enterq (bad) adc icebp rex.WB (bad) mov and (bad) mov in insl retq (bad) sbb xchg mov sub jle pop pop bt sub jmpq jne btc not mov mov neg sub sub neg inc mov test sub test pushq cmp bt stc bt cmp jmpq sub mov cmp mov add pop jbe,pt rex.WRB xchg (bad) mov (bad) (bad) mov fs pop mov add (bad) cmc pushfq rex.RXB rex.WB scas callq or movslq push insb push rex.RB sahf rcll in (bad) or (bad) mov sbbb sbb in mov pushq insb rex.RB rex.WXB fwait mov es push lea jne mov and cmp ljmp (bad) (bad) and xor (bad) stos sahf sbb stos (bad) movabs jbe jno iret sbb adc cltd retq popfq xchg rex.WXB cmpsb fs (bad) cltd (bad) xchg (bad) mov mov fildl pushq xor loope popfq adc cmp (bad) fs jbe enterq mov xchg out cmp add fbld (bad) sbb mov jle rex.WRXB pushq (bad) (bad) pushq jmp pop fiaddl pop adc (bad) imul mov cmp jnp mov xor mov fidivr (bad) mov and (bad) sbb push rex.RXB pop push (bad) lock (bad) shrb cld (bad) (bad) (bad) mov cli (bad) lcall loopne rcrl xor fisttpll roll test (bad) movslq ss fcoms jrcxz (bad) enterq std cmp mov xor hlt pop cmp ja imul (bad) and movslq int in rex.B xchg pop mov adc rex or rorb adc jp pushq stos cmp cmp (bad) cmp jno add cmc xchg inc and pop insb and jnp jb adc mov xchg dec rex.R xchg lret jae (bad) mov movsl std or and xor (bad) (bad) fidiv adc xchg cmp (bad) lret push (bad) (bad) (bad) (bad) (bad) (bad) (bad) scas (bad) (bad) jle sbb adc mov (bad) add stos sti (bad) (bad) mov (bad) or cli mov in xchg pop mov rex.WXB data16 mov sbb test adc lock (bad) xor push cmp jns rex.RXB cmp (bad) ss (bad) sbb mov lock adc cmp lods jnp shll rex.WRB callq (bad) jnp (bad) and out (bad) mov jg rex.RX adc pushq in mov movl cmp decl notb mov mov js (bad) pop push loopne loopne (bad) lcall lods jge or sub (bad) movsl fstp adc xor cmp std (bad) lcall (bad) or mov (bad) lcall mov cmp mov gs (bad) not mov rex.WXB sbb rex rex.WR jb and pop push (bad) xchg mov ja push jae mov fstpt (bad) addr32 stos xorl adc xor xchg data16 int3 jno fldcw push (bad) jae cmp (bad) mov sbb stos jmpq adc add icebp cmp jmpq sets not jmpq jmpq (bad) cmpsb mov enterq flds enterq fistpl jp cltd mov lods pop (bad) cmpsb jle jne rolb mov icebp jns fwait or (bad) jne in gs popfq push je xor repnz js or cmp pop cs mov cli sub addr32 xor sbb mov fxch icebp (bad) outsl adc insb int3 sbb push mov mov fisubrl xchg sti sbb (bad) fsubp adc flds xlat add test sbb shl cltd js in and jne pushfq add repz test ffree or (bad) adc jmp movabs xchg sbb mov jge sbb or jb xor rex.RXB adc mov outsl cmp sarl add pop pop rex.WR or mov mov ficompl sub outsb jns stc mov scas add pushq stc sub roll xorl xchg imul sti (bad) (bad) jg or (bad) pop cli (bad) lcall shrb push lods cmp sub lock pop rex.WRX sub add mov lcall mov cli (bad) (bad) xchg xor (bad) fist fwait pop xchg sub int3 push rex.WR jns out (bad) push rex.WR stos sub rcll ljmp xchg movd ss xchg je shll ja add sar add stc mov stc bt cmp bt test jmpq retq adc lret xchg and sarb push or loop jns add (bad) mov movsl or rex.RX cmc fs jge popfq iret sarl (bad) (bad) cmpsl push repz rex.W movl mov push sub (bad) (bad) (bad) (bad) (bad) mov mov outsb int3 mov lret fbld movabs leaveq xor popfq add sti cmp callq push xchg sbb xor mov jae sbb sbb (bad) scas jge pop xor (bad) orb xchg sbb (bad) sbb mull and pushq movsl cmc cmp xchg ja jne xor fwait icebp jno push ss jne add mov fsubrs rcr push sti fiaddl mov (bad) rex.RX (bad) (bad) fist (bad) leaveq cmp jp std cmp xchg scas lods sar cli (bad) lcall mov (bad) (bad) (bad) sahf xchg rex.WR xor (bad) (bad) fwait rex.WRX leaveq (bad) (bad) jno jo fucomip xchg pushq movabs push jmpq clc pop rolb movabs popfq jl out rex.RB (bad) in lahf movsb cld sub je jno (bad) rex.WRXB and cs (bad) (bad) in pop mov rex.W rex std (bad) sbb (bad) ss in (bad) mov lret sub pop leaveq lret and xor outsl (bad) insb fcomi xor rex.WB movsw (bad) stos jmp movabs cmp mov rex mov mov lret xchg (bad) cmc (bad) test mov loopne mov xchg out movslq cmp (bad) (bad) mov cmpsb cld (bad) lcall jb fadds jo xor (bad) add lods lahf cmpsl mov mov cmpsb lods int3 (bad) addr32 rex.XB (bad) out (bad) (bad) mov (bad) lods in cmc movsb hlt xor cli (bad) enterq movsb sbb retq jo fdivs (bad) out fs (bad) movabs adc ja pop rex.RB push push rex.RB xor cs insb add (bad) xchg incl rex.WR and imul rorb lret (bad) (bad) mov out rex.WRB rex.W mov and adc mov stos and (bad) pop sbb insl (bad) adc push insl adc (bad) push (bad) xchg ss mov fstl cmp (bad) (bad) mov loop mov add cmpsb cld (bad) (bad) (bad) (bad) mov adc js (bad) in rex.WX cwtl and jbe mov jmpq mov (bad) mov xchg rex.WR (bad) sbb pop mov int mov pushfq notl ja xchg sar pop jo pop (bad) movabs test pushq fmulp xchg imul xlat (bad) push lods hlt (bad) rex.W rex.R xchg lret xchg jno pushfq int3 (bad) push sti fiaddl pop sbb push mov (bad) repz (bad) stos push sbb jbe js (bad) iret lahf mov mov jae cld (bad) (bad) mov mov (bad) lcall xchg pop fs cmp (bad) insl cmc pop mov and mov mov movabs mov rex.WXB popfq xor adc loope out (bad) (bad) push xchg xor (bad) (bad) pop rex.RX jbe in rorl loope xor jmpq xchg imul sub xchg rex.R movsl rex.WRX and pushq rex.WRXB test idiv cmp cmc cmc cmp jmpq stos sbb movabs sbb (bad) insl sbb movb movsl or fs mov and sub mov xchg movslq rex.WX and scas fs int3 push (bad) (bad) (bad) jmpq push pushq data16 rex.XB lret mov fucom (bad) sub xchg rcll clc (bad) icebp xor (bad) lcall hlt rex.WRXB (bad) cli (bad) lcall sbb cmp subl (bad) mov cmpsb sbb xchg rex.XB cmc rex.RB (bad) pop loopne mov rex.RXB sbb (bad) xchg (bad) in test (bad) fsubl je (bad) rex movabs or push test cli in cltq rex.WX fwait es jmpq icebp push stc movslq and (bad) mov pop (bad) idivl lret loope fsubs (bad) (bad) sahf sub rex.WXB rex.B add es xchg imul xor or sbb (bad) out and (bad) (bad) test mov (bad) (bad) (bad) mov and sarb cmpsb outsb out cmpsb push add jmpq in iret rex.WB adc jrcxz (bad) shll jo mov fdivs sbb lock movsb loop,pt jl (bad) (bad) jg in (bad) js sti (bad) lcall imul push test (bad) (bad) test shlb clc rex.B scas (bad) and xor incl icebp rex.B rex.WRXB je (bad) cli xor pop mov fcmovne adc pushq (bad) (bad) in stos rex.X pop sbb lods fisttpll xorl mov sbb (bad) jmpq (bad) lea not jmpq bt push bsf mov bt clc clc sub jmpq ja sbb xor add sub setno movsbw add shld mov mov mov test cmp test cmp repnz jmpq and xchg shlb mov ja int jnp cld or leaveq add ja rex.RX scas pop (bad) xchg or adc loope movabs and movsb and (bad) adc (bad) (bad) (bad) (bad) mov jmpq jrcxz (bad) adc nop retq (bad) lcall and repnz (bad) lcall (bad) and mov jns (bad) pop pop mov scas insb rex.RX mov mov jne and mov mov xchg push int3 sbb cld rex.WR (bad) mov cmpsb mov cmovbe xor imulb rex.X (bad) repnz shrb cltd adc mov mov xor shrb push xchg cmc mov lahf paddusw fs fs outsb rex.WRB sub (bad) clc sub ror cmc (bad) lock add inc sar rcr movzbl mov setnp mov stc bt repnz jmpq je jmpq jmpq insb in imul rex.WRX and (bad) cltd xor (bad) out test test fidivr int and sar imul (bad) decb xlat negb xchg xchg (bad) lcall xchg (bad) jnp movsw in sbb rex.W (bad) std (bad) lcall gs (bad) lcall xchg insb sti (bad) (bad) movabs and incl lock rex.RXB in jrcxz shll lea scas out xchg (bad) xor cmp lea sub (bad) lock add test orl cmc adc (bad) rex.RX negb jrcxz jno xlat iret ja (bad) rex.R sub lret jae sub stc xor outsb add cmp jmpq jmpq callq stc stc or jmpq repnz jmpq rex.WRB mov ja mov rcrl push add xlat (bad) sub in rex.WB or (bad) (bad) push (bad) (bad) fnstcw rcrb fisubr and cs add icebp imul add (bad) (bad) lcall mov mov lcall js cld cmp xor sub stos rex.RX stos data16 sbb push push out (bad) cs mov std movsl andl add lods sarb scas out push je cmp cmp xlat outsl mov adc rex.WB imul sub ja xchg sub movsl pop (bad) movsl cwtl lret lods mov stos cmpl rolb (bad) rex.WRXB xchg push cmp rclb data16 or add adc (bad) (bad) lea jns (bad) lahf (bad) push xchg (bad) movabs enterq or cmp (bad) (bad) jmpq (bad) lret shll mov (bad) stos cli (bad) shrb shrl sarb or (bad) (bad) lock (bad) movabs (bad) mov mov imul cmp push (bad) cs (bad) lcall push fisttpll add xchg cli adc stc mov pop xchg push mov imul rex.RX lcall rex.RXB pop movabs (bad) sub jrcxz fimull (bad) cmpsl mov (bad) cmpsb mov outsl jb je jne imul mov sbb (bad) rex.WRX stc sub insb pushfq rcrb (bad) sbb adc loopne fisttp pop (bad) es lea test js fistpll mov movabs jl and gs sti mov rex.RB rex.WXB enterq fimul pop mov in test adc xchg je jmpq je cmp add clc cmp cmp jne jb jmpq jb clc bt cmp jmpq jne or cmp mov test cmp add clc movzwl and cmp mov bt bt cmc add jmpq lea lea jmpq jb stc clc cmp jmpq jne test stc xor test mov clc add neg setne mov test bt test jmpq jmpq jmpq jne jmpq callq jmpq add rex.RXB gs imul je jne sub shl rol jmpq mov not lods adc jmpq mov bswap mov bt bt ja cmp jmpq jne bsf adc neg mov sar not jmpq jmpq jmpq bt jmpq jmpq pushq jmpq mov and (bad) and insl pushfq xor mov stos (bad) orl js sti xchg cmp cmc lods pop mov sbb pushq sub scas movslq sub cmp (bad) (bad) lcall adc and jns mov cld (bad) (bad) lcall retq (bad) mov (bad) (bad) (bad) cmp (bad) notl and xchg jne out movsb jmp sbb movsl pop insb mov rcl (bad) int3 fcmovnb rol (bad) imul rex.XB xchg fild mov test mov adc mov cmova sub mov rex.WXB fmuls rex.WRX jnp mov xchg (bad) in outsl jae test bt clc sub jmpq xchg (bad) jp xlat and (bad) js ja test jrcxz xchg push mov test mov cltd icebp ja out (bad) cs mov xchg hlt (bad) out cwtl mov movabs jmp mov or mov push sub sbb xor cmp enterq test sub addr32 cmp xchg (bad) lret (bad) jns movb lret and stos rex.WX test (bad) xchg sub fsubrp pop push notb (bad) (bad) movabs and sbb mov or or lahf js out rex.B rex.RXB rex.WRB mov iret jmp xchg gs mov lahf (bad) lea pop (bad) int3 xor loope cwtl and sbb sub pushq rex.W (bad) out (bad) jbe adc (bad) cmp rex.RXB outsb retq jrcxz leaveq xchg icebp (bad) jae sub xor rex.RXB rex.WXB and rex.R jle leaveq (bad) or adcb loope pop out rex.B mov mov mov fist pop retq xchg cmp rex.WB sbb clc fstpt and nop (bad) movl add (bad) (bad) lcall jp or (bad) (bad) lcall cmp loope retq loopne adc repz in movabs scas jge int rcl sti cmpsl loope sbb push sub cwtl addl fs push push xlat divb (bad) and push and mov mov callq sbb jns (bad) in sti xor test (bad) out cmp hlt and test jmpq callq bswap xchg bswap mov not not bswap mov jp mov lea mov pop xchg mov lea mov mov lea mov retq je stc test cmp stc sub cmp clc cmp jmpq cmp jmpq rex.R rex.XB mov mov (bad) sti rex.WXB fidivrl fwait (bad) movabs jnp loop test and (bad) sub add sub (bad) sub rex.XB mov xchg enterq (bad) outsb out movsl jle pushq jge notb sbb jno xchg (bad) (bad) (bad) jns rex.W adcb sahf jl cltd lahf outsl jle mov add fbld sub and jmp (bad) (bad) (bad) (bad) push rex.RXB scas xor pop (bad) out mov cltd push xchg xor retq mov test or add mov lods pop imul pop mov pop xchg leaveq (bad) jg mov mov int cli pop rex.WX jge adc and push push cmp ss and icebp sub jle int scas in fisubl mov jns clc ss cmc xor mov jl movslq (bad) mov pop imul stc adc (bad) jg es jle,pn and xor andq (bad) xchg (bad) (bad) lcall mov xchg cmp idivb insb rex.WX rex.X int3 xchg mov pop ss leaveq xor movabs or add lcall outsl (bad) mov cld (bad) lcall scas push test or repnz insl rclb je and mov rex.RX push xchg sub mov scas rex.WR rex.X pop sub gs sbb rex.WX mov (bad) adc stc jmpq nop push out cs test mov loopne mov jbe xor and seto mov jmpq (bad) rex.WRX pushq and (bad) movsb sbb imul in retq leaveq and fucomip rex.RX (bad) rorl pop movsbl mov fcomi xchg mov (bad) pop idiv sbb rcrl mov (bad) (bad) (bad) (bad) (bad) mov (bad) leaveq leaveq add rex.WRB pushfq cmp adc mov sub mov (bad) sub (bad) (bad) (bad) (bad) fwait cli mov (bad) lcall and xor mov mov and mov or mov cli adc (bad) rex.RB out outsb insb jae pop xor (bad) (bad) movabs push sub mov mov cmp movabs in movsl pop mov cs rex.XB rex.WXB pop cld xchg jb xchg xor mov lods fsubl mov movabs mov mov add jbe,pn in sbb xor pushq and enterq lret cld mov rex.WRX in and stos cmc sub (bad) lcall (bad) std add out jp cmc stc adc test jne xchg lea sti (bad) lcall fsubrs cmp mov iret (bad) (bad) mov (bad) sub (bad) mov fisubrl loope rex.WRX sub xchg xor xchg out es imulb xor lret add cmpl (bad) push xchg (bad) stos pop rex.WX int push retq andb jae push xor rex.RXB ficomp xchg push frstor mov (bad) std add cmpsl fwait rex.WR jle sub jae movsl sub notb xchg sub outsb loop leaveq ja (bad) test (bad) test pop outsb movabs rex.WRB fwait or and xor js sti jmp add imul add (bad) (bad) lcall jnp (bad) movabs and mov and mov out scas (bad) in pushq loope enterq push jne rex.R xchg rex.WRB sub movsb adc cli (bad) lcall (bad) jg rex.WRB repnz adc test movslq sub int3 jbe cmp and retq (bad) insl (bad) cmp test retq mov mov sahf outsl push int movslq movabs (bad) test movabs xchg (bad) out rex.WB xchg je movabs add sub pop add enterq mov cmp and mov int and out sub rex.WB rcrb mov lock (bad) fwait adc pop jno (bad) (bad) (bad) (bad) rdpmc mov jge add mov outsl sbb pushfq adc mov mov fsubs addr32 je and pushq mov scas imul (bad) cmc push (bad) add xor (bad) lahf addr32 (bad) callq loope (bad) push pushfq cld in xchg js jp and mul add and rex.WRXB rex.RB loope or stos repnz jp nop cmp mov mov movabs pushfq movabs (bad) insb loop movsb stos jb add mov sbb out xchg sysexit loop jrcxz (bad) lcall mov mov lcall (bad) (bad) rex.W xchg sbb (bad) push sbb js xchg (bad) mov cmpsb adc fadds sar pop pop and fiadd jmp (bad) xchg sub outsb sbb fldt xor scas jge push subl shl (bad) xor mov mov shrl xchg (bad) out mov (bad) pushq lahf rex.WRB push shr (bad) push fidivrl (bad) out pop or pop jnp decl xchg sub callq sub movzbw movzbw add bswap sbb mov jmpq retq repz add shrl ja (bad) jl (bad) (bad) or scas notl outsb popfq std or mov addb mul rex.WB rcl in xchg je sub popfq or add imul (bad) mov retq jl fcomi or stc sbb add (bad) (bad) loopne out push adc adc mov hlt mov std (bad) (bad) mov int3 sti (bad) lcall (bad) lret insb jle jno cmpsb (bad) (bad) cmp imul retq loope add sahf out lock out movsl test ss add (bad) (bad) rex.W (bad) xor mov outsl (bad) cmc or or mov out (bad) sub cmp pop jrcxz jmpq mov in popfq sbb rex.WX pushq jmpq clc test jmpq push jmpq jae sub cmpsl (bad) fimull movabs retq leaveq pop jo notl xchg jl mov loop xor pop hlt mov jns lahf popfq sbb mov callq movl mov pop enterq or mov jp xchg movabs jl rex.WXB rex.WX (bad) lcall push lods push mov sub cld (bad) (bad) and jns out sub addl mov rex.WRX sub shll retq imul xchg out cmpsb test xchg rex.WR outsb cmp adc adc movsl xor movabs add fnstcw jmpq jmp shl jbe pop mov callq loop sub cmp scas (bad) and jp imul stos loop mov popfq sub fisttpll mov jo imull fwait xor rex.WX pop test movabs (bad) je hlt ss mov xchg jne test (bad) std (bad) lcall mov mov xchg sbb sbb (bad) (bad) rex.WRX cmp lods add rex mov sbbl jmpq nop or push (bad) loopne loop and movabs jb pop rex.B (bad) add cld (bad) (bad) fbld sti (bad) lcall xor and jno jmpq pop movsb movsb jl rex.WRXB push nop cmc (bad) rex.B rex.RXB (bad) fnstsw imul decb xchg rex.RX pop mov and sbb rex.WRX repz rex nop nop retq (bad) adc pushq jg jle add and scas (bad) and and mov sub add cmp (bad) jmpq sub btc add sub (bad) lock mov sar sbb stc mov cmc test cmc clc repnz jmpq jmpq cmp cmp jmpq loop sbb rolb adc sbb (bad) je mov rex.RX pushfq sbb add lret and cmp xchg push or jp (bad) xchg push or sbb and adc bswap sbb int mov mov rorl fistp (bad) rex.WRXB lock pop ds nop rex.WRXB cmpsl xchg rex.RX retq imul imul add insb movsb sarb rex.WB movabs iret xchg out xor and rex.WRX out and lahf rex (bad) (bad) decl push test rorb rex.WR adc or out (bad) (bad) push or out (bad) mov nop js push xchg (bad) (bad) es rex.X jp jl movabs jle and fisttp jo mov sub scas sbb (bad) callq shrl rex.X movabs std (bad) (bad) ljmp rex.WRX push sti cld insl cwtl jrcxz loop nop rex jmpq jb leaveq rex.B mov retq out ja out jrcxz rex.W lods pop cli gs sub cmp fistpll shr loopne repnz fidivrl xchg push mov outsl es push mov (bad) and ss pushfq adc sub movsl push test repz testl (bad) pop scas ss (bad) je xchg enterq inc adc jo (bad) lods (bad) (bad) rex.WRX (bad) (bad) mov data16 (bad) (bad) mov pop cmc movabs outsl iret mov and jge mov je xlat notb (bad) (bad) push rex.WRXB mov mov scas cmpsl lea xor add mov or xchg pop nop rex.W pop rex.RX jl repnz sarb in stos addl cmpsb cs and (bad) test clc pop add jns stc ss stc ja bt stc imul bt cmc add jmpq add rex.RB je jb movslq jae jmpq or jne and push ja (bad) fidivr decl push rex.B rex.WB data16 rex.R rex.WRXB (bad) in pop mov xchg (bad) (bad) enterq and rex.RX mov ja rex.WB pop icebp mov (bad) mov sti (bad) jns rcrb cld (bad) lcall stos rex.WR jrcxz (bad) lcall cld (bad) out or test mov stos adc xchg or pop xchg loope rorl cmp rex.WX leaveq scas (bad) sti jmpq movabs jne movslq icebp icebp xor fwait rex.XB jnp push push icebp (bad) out cmp and xor adc or rex.RX sub pushq mov in je bt cmp cmp jmpq callq jmpq data16 cs out mov (bad) jp mov sub mov mov cmpsb ss sub rex.RB rex.RX pop add loop fcomps sub lret mov or sbb and movsb mov (bad) cli fnsave and push (bad) and iret adc jne test fstpt mov mov push (bad) sar xor retq clc rex.W jns lret adc jae mov flds (bad) sbb insl repz jle test pop mov (bad) (bad) (bad) fcomip rex.WRXB lcall sbb cmp (bad) xchg movslq xchg adc test incl and jmpq je xlat pop lea movslq jmpq pop in (bad) xor sbb sti rex.WXB fildl icebp adc (bad) icebp notb cmp data16 cmp rex.WXB sarb sub callq jmpq cmp movsbw movzbw movzbw movsbw lea mov pop jmpq add rex.RXB gs outsl fs rex.WB outsw jb (bad) je outsl outsb add retq xchg repz jmpq jb test test clc cmpb jmpq jmpq jne movsbw mov lea mov jmpq cltd stc xchg add and or loope sub lret shlb jns adc movabs test cmpsb (bad) and adc and (bad) (bad) ds push fsubr cmp rex.WX rex.WRB xor fisttp cmp imul mov sub sub stos sbb fiaddl retq lret or (bad) lcall fisttpl (bad) jno pop xchg movabs (bad) (bad) leaveq sarl (bad) mov cwtl jo jg xchg rex.WRXB add es jl jb cli (bad) jb shlb stos push movabs rcll fisubr adc jo and mov add push jp int xor mov (bad) movb (bad) adc pop outsl fucomip jle rex.RX rorl flds (bad) adc rex.WRX push add jbe push lea pushq repz xor stos mov (bad) lcall or repnz rorb lret add rorl rex.WRXB movabs adc (bad) in pop decb push xor cli in and cmp xchg je outsb insb in loop pop nop callq movslq cmp int rex.WX rex.WX (bad) pushq sahf movabs (bad) rex.WX lock sbb mov stc jmpq jmpq xor movabs scas sbb xchg mov lods push adc push mov imul cmc insl add push repnz int adc add (bad) mov push xchg add (bad) (bad) (bad) stos repz jp xchg (bad) rex.WB cmp adc mov jns cli lahf (bad) pushfq and xor (bad) lods push stos add (bad) (bad) lcall cmpsb sub rex.XB (bad) lcall mov cmp jo jmpq rex.X xor rcl cmp add (bad) movabs jg jrcxz notb mov sub push cmpsl cwtl push (bad) xchg rex.R stos rex.XB rex.RXB xor jge jmp movabs jnp leaveq (bad) push rex.WRXB rex.WRB adc jmp cmp es pop mov rex.RXB (bad) pushfq rex.WRX movabs rol imul cmp jmpq outsl (bad) cmp jmp mov jne movabs (bad) (bad) pop cli movslq jmpq pop test and sbb or outsl (bad) (bad) jle jge add in callq add stos sub (bad) test imul insl xor and (bad) jmp mov sahf jo add or and sbb jns mov test mov cmp stos rex.RXB movsl in stos (bad) pop ljmp pop leaveq stos jae pop movabs pop jo icebp jo jne callq fcmovnu loope (bad) test pop jo jle pop pop test rcrb test test std in (bad) pop (bad) cmpsl (bad) (bad) (bad) (bad) adc pop (bad) cmpsb jne jg (bad) xchg (bad) fadds rex.WX in repz sub cmp jmp rex.X popfq rex.RXB pop repz or test or fmuls or out jae pop xor (bad) fldcw roll sub cmpsb test subl push psllq cmpsb fsts cmpsb clc rclb push rcrb movsl lret fdivs and movsl roll push in movsb push je pop lret movsb movabs push lock push (bad) movabs imul shrb (bad) in insl mov and (bad) mov frstor mov fbstp stos mov xor movabs gs jg cmc pop xchg callq mov cmp (bad) ficoml movabs push jbe in pop rex.RX sub fldenv insb movabs pop push sbb notl fisttpl push out and push retq rex.WX push sbb push rex.WB addl rex.B (bad) mov test iret sbb rex.XB rex.W or sarb test jmpq rcrl rex.RX rex.WXB rex.WRXB (bad) sahf scas fdivl stc imul mov movabs outsl js movabs out cmp out rex.WXB cli rex.XB (bad) lcall sub rex.RX out cmpsl cld (bad) (bad) fistp mov leaveq ds lods mov fs rex.WR gs outsb out std pop (bad) pop movsb cmp (bad) ss rex.RB pop xchg shll mov fistl xor rex.B (bad) int sub rex.WB outsb mov hlt push cmp cmp test (bad) incl sar movsbw mov not add inc rcl rcr mov cmp test jmpq (bad) or out and mov xor cld or jno or out (bad) mov mov loopne jbe adc es sbb (bad) data16 lret and or pushq mov or sub (bad) out (bad) (bad) pushq (bad) xchg je (bad) or xchg iret sahf orl pop in sbb cmp loope test jp sarl pop cmp or (bad) (bad) test cld (bad) (bad) (bad) vsubps mov (bad) lcall and ds xchg (bad) fnstsw popfq popfq test (bad) fwait subl sbb push rex.RX retq jae jrcxz imul movabs movntq push cwtl rex sarb sub (bad) iret xlat rex.WRXB (bad) testb stos (bad) rcrl mov rclb fisub pop rex.WXB (bad) out and mov jne or xor out xchg mov sbb (bad) out sbb rex.X mov flds rex.W mov jl jno lods jmp adc (bad) rex.W (bad) fiaddl mov rex.RB jmpq (bad) mov lods sub jae jmp jae orl loopne and mov orb jge xor (bad) (bad) xchg xor movabs and data16 insb mov sar setl inc add stc mov stc cmc cmp stc cmpb jo jne mov shl btr sub shrd bt ror mov mov sub neg stc add dec dec rcr mov stc stc bt test jmpq jmpq seto setbe lods cmc neg bt add clc bt rol jmpq jmpq test and xchg pop mov movabs mov sub add callq iret mov lods in (bad) retq out jno cmp xchg add xchg loop (bad) (bad) lcall cmpsl cld (bad) (bad) mov xlat add test or lret rex.X sbb xchg jle pop (bad) cmc test sub (bad) jnp sti and mov xchg fs rex add xchg (bad) ffreep imul cmpsl test imul rex.WRXB fcoml jp xchg subb jge (bad) or mov imul and pop (bad) mov (bad) repnz and lret and and cmp callq rex.WRB (bad) mov cwtl ja rex.WRX je (bad) out fsubrs fsubrs stos and sbb repz adc jb in (bad) (bad) (bad) (bad) mov (bad) lcall (bad) incb pop pop sbb popfq push jmpq (bad) xor fbstp jrcxz jno (bad) iret sbb out (bad) (bad) lret mov scas push test es xor push in mov (bad) std pop sub adc (bad) shrb retq out (bad) faddl or add cmpl jl cmp data16 jl cmp repz push xchg pop lea sbb cmp ja int3 (bad) cmp fldenv (bad) movsb (bad) stos cltd rclb ss fdivrs mov mov sub (bad) je push je imul add movsb (bad) repnz (bad) adc ds pop (bad) mov adc rex.WR cmp imul rex.RXB mov xchg rex.WR pop add pushq sub rex.R imul pop loopne (bad) mov or vmptrst imul cld (bad) (bad) jmpq sti (bad) lcall add or test rex.W rex.RXB movabs lahf outsl sahf faddp out pushfq add retq add (bad) fdivrl (bad) (bad) jg or ss in cmp sbb (bad) sbb (bad) mov repz sbb lret movslq adc rex.XB and sub sub or sbb movabs rex.RB popfq add rex.RXB addr32 xadd setg mov movzbl movsbw sub shl and rol mov clc sub jmpq xchg sti cwtl add and push je lret or (bad) in insl pushfq insb fwait and sub data16 sbb rex.WX (bad) mov stos (bad) xchg add std insl pushfq hlt fild rex.WR mov pushq pop cmp adc rcr std std (bad) (bad) fild sub ds or loopne jge (bad) lcall test lcall mov sub cmp rex.WRXB and pushq lahf fwait sbb mov loop rex.W (bad) push repz hlt rorl mull test (bad) cwtl pop idiv rex.RB popfq rex.RB rex.XB pushq mov lret (bad) push xchg jne xor xor mov scas rcll (bad) cs cmp xor movsb and in pop add rex.WRX push adc iret pop (bad) decl xbeginq push sar rol stc rol not not jnp mov not jmpq pushq jmpq je stc not cmc mov data16 repnz (bad) bswap btr rcl mov clc test jmpq jmpq jmpq jmpq jmpq jmpq test cs hlt and int (bad) xchg (bad) ss mov and sbb test negb lods or or fcoms outsb popfq rex.WRB xchg jae sub retq std (bad) (bad) ljmp sub jmpq push test xor sub jg cltd or scas (bad) leaveq xor xchg push lea rex.XB jne fcmovnb add sub and xchg push or callq cld (bad) lcall (bad) jae and negl je and xchg add rex.WX mov cmpsl rex.WX cld xchg test cld in imull pushq imul jnp shr cmp sub (bad) rex.R mov retq xchg ss adc je mov or lock rex.WRB (bad) imul add adc rex mov and out (bad) xchg imul (bad) xchg or xor push or add (bad) xlat negb add cli cltd (bad) iret (bad) (bad) int3 sub mov (bad) cltd (bad) (bad) lcall loopne retq leaveq (bad) pop not popfq sbb std (bad) (bad) mov ja (bad) lcall (bad) lods cmp lods mov cmp jmpq push rex.WB push add mov rex.RXB lea mov and mov mov xlat adc ja ss rex.RX hlt rex.WXB and (bad) out in subl (bad) fcoml rex.WRXB xor out sbb hlt (bad) cmp adc mov scas jmpq rorl cmp and mov stc mov adc mov cmp std sbb stos pushfq cld int js pop in jnp cmp or in movsl xor out decb outsl sahf rex.RX xchg jp xor ficomp lcall (bad) adc rex.X (bad) (bad) (bad) jb cmova test pop mov (bad) cmpsb push adc rcrb mov (bad) adc rex.RB add mov jnp and callq xchg rcrb adc sub adc (bad) out rex.R xchg jb shrl out fnstsw mov xor (bad) out ja and clc xchg xor adc stos push (bad) (bad) cmc (bad) and jp (bad) pushq in hlt pushfq rex.WX rex.X mov sbb shrl jmpq rex.RX fs sbb (bad) jg xor popfq cli push add and or pop cmc bt stc imul clc cmp bt add jmpq callq jmpq leaveq sbb fwait mull mov lret rex.R sarl movsl xor (bad) iret (bad) (bad) jns xchg rex.WRXB rex.WX (bad) rol add add sar mov sub rex.RXB mov jae (bad) (bad) (bad) fild lret cltd or movabs (bad) (bad) fisttp lea sti (bad) lcall fwait (bad) mov or (bad) imull sbb (bad) cmp insb test rex icebp sbb mov add test incb movabs mov cmp mov adc and sub andl adc sub leaveq mov (bad) xchg lret outsb sahf rex.W ljmp jle (bad) negb or loop imul icebp or (bad) mov mov iret lahf rex.WRB (bad) (bad) mov rex.RX rex.WR andl mov add mov movsbw movzbw pop retq sbb add and (bad) std popfq sub and idivb jmp jns rclb jo (bad) jg movb in xchg je pop jb js rex.RB (bad) in retq leaveq (bad) loopne pop adc (bad) (bad) jg sub rex.WXB imul pushfq mov pop std (bad) (bad) decl add lcall (bad) loopne mov enterq cmp xchg mov sbb jo mov or js xlat adc xlat jle loope adc pand retq (bad) test cwtl (bad) fsubrl mov fistpll js pop in test cs cmp add paddusw pop stos cli xor es (bad) cmpsb ds xchg or rex.WR sub xchg (bad) mov icebp mov or add divl andl rcl lea mov sar mov jmpq jb stc cmc cmp je jae neg sub mov inc mov movzbw mov stc cmc cmp cmc xor bt stc bt clc repnz jmpq cmc sub jmpq push jmpq cmc mov mov cmc bt jmpq push jmpq or shl setae cbtw mov bt cmc stc add stc cmc je rol test jmpq js mov jmpq sub bt clc cmp mov cmc stc test jmpq popq jmpq jmpq jmpq mov jmpq jmpq stc shrd jmpq mov jmpq jmpq jmpq push jmpq pushfq jmpq push jmpq push movsbw setle movsbw mov push not mov movsbw push movsbw not lea jp push jo push lea lea movzbl lea push xchg jmpq push jmpq jmpq jmpq mov jmpq jmpq jg sub jmpq dec jmpq jmpq inc bt cmp cmc bt add test cmc stc sub cmp sub jmpq jmpq add jmpq mov jmpq push jmpq add jmpq push jmpq jmpq mov jmpq jmpq test test bt cmp mov clc jmpq jbe mov mov setne mov jmpq jmpq jmpq popq jmpq test btr add movzbl and (bad) repnz add bsf shl inc sub stc stc sub mov bt ror data16 repnz (bad) test cltd retq bsf bsf sbb add btr shld (bad) repnz mov stc cmp jmpq jne add bswap xorb movzbq not pop jmpq jmpq push jmpq clc jmpq stc cmp jmpq setl bswap movsbw mov jmpq callq jmpq jmpq jmpq ror movzbw movsbw ror neg jmpq jmpq popq jmpq add jmpq jmpq ror movzww stc test test jmpq push jmpq mov js pushfq jmpq mov jmpq stc clc jmpq push jmpq je cmp cmp jmpq jne or mov test cmp stc and test cmp jmpq pushfq jmpq push jmpq pop movsbq movzbw pop movsbw pop retq pushfq jmpq jmpq jmpq jmpq push jmpq mov jmpq sub jmpq bt test sub cmc test jp shl jmpq test cmp stc bt pushq jmpq jmpq popq jmpq lea jmpq not movzbq movsbl mov jmpq jmpq ror mov jmpq jmpq je mov not mov jmpq jmpq js mov jmpq push jle push jmpq jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq je stc cmp jmpq cwtl jmpq jmpq clc sub clc and jmpq jmpq bt sub jmpq push jmpq xor js dec mov bt cmc add ja pushfq jmpq jmpq pushfq jmpq shld shr mov add mov jmpq test cwtl jmpq jmpq push jmpq cwtl bt cltq jmpq clc jmpq jmpq clc lea clc cmc clc cmp test jmpq push jmpq add adc bt mov jmpq push jmpq mov jmpq clc jmpq mov jmpq jmpq push jmpq jmpq push jmpq push jmpq push jmpq jmpq movzbq lea movsbw movzbw mov mov jns inc bt clc jmpq jne divl jmpq lea not lea push movsbq push mov movsbw push jmpq sub jmpq js jbe btr clc rcl lea test bt jmpq push jmpq jmpq jmpq cwtl cmc sub jmpq test sub clc add jmpq jmpq ja jmpq jmpq popq jmpq mov jmpq push jmpq jno mov jmpq popq jmpq jmpq movzbw lea mov mov lea adc movsbw cmc mov setno mov cmc sub bt shld jmpq push jmpq popq jmpq jmpq sar mov bt xor adc mov test sub jmpq mov jmpq push setae push not push not lea movzbl push setbe mov push bswap movsbw bswap push movzbw xchg push movsbl lea bswap push xchg bswap repz ror rcr pushq stc xchg movsbw movabs rol jmpq jmpq mov jmpq je clc test test test cmp jmpq push jmpq jmpq movzbw or mov movsbw shr not mov seta not mov stc test add clc cmc shrd jmpq jmpq push jmpq jmpq push jmpq rol mov jmpq mov jmpq jmpq pushfq jmpq jmpq sub clc ror clc clc bt xor cmc jmpq jmpq jmpq popq jmpq push jmpq lea not push jmpq jmpq bt test stc add cmp add jmpq mov jmpq inc cmp cmc cmp jmpq push jmpq jg mov jmpq rol clc add test stc test test add jmpq push jmpq jmpq jmpq push jmpq mov jmpq jmpq push jmpq mov setbe mov jmpq push jo push jmpq callq bswap not mov jmpq not push bswap movsbw jmpq jmpq jb push jmpq push jmpq push jno push jmpq mov jmpq jmpq add jmpq jmpq movsbq jmpq jmpq push jmpq add addb add movabs pop sbb add add xor add add sbb add add icebp xor addb add sbb addb add add addb add push push sbb add add add sbb add add (bad) push sbb add add (bad) push sbb add add fldcw sbb add add icebp xor addb add mov add add pop sbb add add test sbb add add movabs xor add add pop rex.B add add andl add add jae sbb add add sub addb add mov sbb add add enterq add add mov sbb add add sub addb add ficom addb add mov sbb add add xchg addb add jae sbb add add test sbb add add (bad) push sbb add add mov sbb add add xor add add jne sbb add add (bad) push sbb add add xor add add add add add cmp sbb add add imul add cs add add (bad) push sbb add add xchg addb add mov addb add movabs imul xor add add repz sbb add add cmp addb add (bad) push sbb add add xor add add rex.WRXB add add ficom addb add movabs pushq add fsubs addb add sbb sbb add add xor sbb add add sti pop sbb add add sbb sbb add add xor sbb add add andl add add xchg addb add sbb addb add (bad) fs add add es addb add xor add add shrb add add icebp xor addb add xor addb add insl pop sbb add add (bad) push sbb add add (bad) push sbb add add (bad) pop sbb add add iret xor add add jb sbb add add shrb add add (bad) push sbb add add test sbb add add jb sbb add add repz sbb add add in xor add add xor sbb add add mov sbb add add fsubs addb add jne sbb add add jb sbb add add movabs xor add add push rex.X add add imul add pushq add test sbb add add (bad) pop sbb add add xchg addb add movabs (bad) sbb add add mov sbb add add movabs xor add add sbb sbb add add xor addb add fsubs addb add fsubs addb add in xor add add mov sbb add add add addb add jb sbb add add fldl addb add xor add add sti pop sbb add add jg sbb add add fldl addb add or addb add jae sbb add add sti pop sbb add add jb sbb add add jb sbb add add pop cs add add jae sbb add add xor add add pushq add (bad) push sbb add add shrb add add pop rex.B add add or addb add cs sbb add add mov addb add sub addb add (bad) push sbb add add fldcw sbb add add (bad) pop sbb add add repz sbb add add in ss add add ficom addb add jae sbb add add fsubs addb add xchg addb add movabs cs add add (bad) gs add add mov sbb add add test sbb add add enterq add add in ss add add mov addb add andl add add in ss add add ljmp sbb add add (bad) pop sbb add add jne sbb add add mov add add xor add add sbb sbb add add icebp xor addb add es addb add (bad) push sbb add add (bad) fs add add sbb sbb add add add addb add (bad) push sbb add add (bad) push sbb add add mov sbb add add mov sbb add add pop cs add add (bad) push sbb add add mov sbb add add xor sbb add add cmp addb add insl pop sbb add add (bad) gs add add imul add sbb add add add sbb add add fldl addb add es addb add xor add add test sbb add add mov add add sbb add add push rex.XB add add andl add add sahf imul add add add add fs add add jae sbb add add sti pop sbb add add enterq add add xor add add ss add add repz sbb add add cmp addb add cmp sbb add add add addb add movabs push sbb add add shrb add add ja sbb add add sbb addb add (bad) push sbb add add add addb add mov sbb add add andl add add cs sbb add add (bad) fs add add ljmp sbb add add push rex.X add add test sbb add add mov add add sbb add add mov sbb add add fldl addb add add addb add push rex.XB add add in xor add add cmp addb add fsubs addb add pop cs add add adc sbb add add andl add add cld pop sbb add add imul add ss add add jl sbb add add sbb sbb add add add addb add in xor add add pop cs add add add addb add cs sbb add add cmp addb add insl pop sbb add add movabs rex.WB add add rex.WRB rex.WRB add add jne sbb add add iret xor add add pop rex.B add add cmp sbb add add xor add add (bad) push sbb add add in xor add add sti pop sbb add add jl sbb add add (bad) pop sbb add add xor add add add add (bad) sbb add add mov sbb add add insl pop sbb add add adc sbb add add (bad) gs add add jg sbb add add jl sbb add add push jmpq xchg mov inc inc shl adc xor cmp bts sets rcr neg dec bswap inc dec shrd not btc neg xor jmpq push jmpq jmpq jmpq rol jmpq je stc cmp clc jmpq jmpq lea bswap mov jmpq jmpq push jmpq mov jmpq push jmpq jmpq jmpq jmpq pushfq jmpq pushfq jmpq jmpq push jmpq jmpq sbb sub rcl inc and clc sbb add movzbw mov xor add bsr shld lea cmp mov bsf sbb movabs bt add neg movzbq shr mov btr inc xadd add movsbl shr btr mov adc setle neg sub mov inc bsf movsbw rcr add movsbw dec bt dec not jmpq popq jmpq ja movzbw mov jmpq push jmpq jmpq popq jmpq jmpq mov jmpq jmpq jmpq push movzbw push jmpq jmpq jmpq bts shl ror movzbl cmp cmc sar add add movsbw jmpq repz mov movsbw pushq ror mov bswap movabs bswap mov ror movzbw mov push xchg mov mov bts rol rol xadd cmp sub bt (bad) notl add bswap shl btc data16 cmc or in out rol jmpq popq jmpq ja jmpq push jmpq bt bt sub jmpq jmpq jmpq jmpq pushfq jmpq pushfq jmpq mov jmpq mov jmpq data16 lock xadd not mov bt ror bswap mov cmp jmpq jmpq popq jmpq push jmpq not neg mov jmpq inc jmpq jmpq jmpq push jmpq jmpq mov jmpq push lea jmpq jmpq push jmpq jmpq push jmpq jbe mov jmpq jmpq jmpq mov jmpq mov jmpq clc add jmpq jmpq bt mov cmc stc test sub cmc jmpq clc test jo shl jmpq mov jmpq jmpq jmpq pushfq jmpq movsbw setp movsbw setb mov jmpq ja ja je jmpq jmpq rep bts and and pop bsf bts bts pop jmpq inc jmpq push jmpq jmpq push jmpq jne and sbb test xorb lea mov pop jmpq shl jmpq push jmpq push jns push jmpq movsbw lea push bswap setns push not jmpq push jmpq mov jmpq push jmpq popq jmpq push jmpq jmpq movsbl push not repz btr pushq movsbw movsbq not rcr movabs bswap btc mov mov cmc push cmc mov setb sete rol cmc sub xadd bswap xadd mov shld ror add bsr sub bswap dec bt and btr mov inc rcr lea jmpq mov jmpq push jmpq push jmpq jmpq cpuid cmc sub jmpq jmpq add bt cmp add cmc rol jmpq stc add test stc cbtw jmpq jmpq bswap mov adc mov cmp shrd mov bt not bt cmp not jnp sub cmc stc je and jp mov js pushfq jmpq shr mov cmc cmc sub bt shl jmpq jmpq lea jmpq jmpq jne movzbw btc bsf xorb setno not jmpq pushfq jmpq clc seto neg mov clc add jbe mov jmpq mov jmpq jmpq mov jmpq mov jmpq clc cmp bt jmpq mov jmpq jmpq mov jle mov jmpq xchg repz rol rcr pushq ror jp btr movabs btr clc not mov not bts push movsbw sets btr mov btc movabs rol rex.W cmc sub out (bad) mov (bad) sbb shr bswap rol mov xadd bswap rcl shl sub not and xchg dec and mov shld lea data16 repz movabs xadd dec add setle shr not bt mov bsr dec setp add lea movsbw rcr mov sete sub movzbw inc movsbq rcl sbb btc add rcr not or ror not stc add shld sub lea inc bswap movsbw movzbq mov movsbw movsbw mov jg inc test test stc add jmpq push jmpq clc cmc stc add jmpq push jmpq push jmpq jmpq jmpq push jmpq push jmpq adc cmp sub mov neg rol mov test cmc stc test sub clc imul jmpq jmpq push jmpq jmpq push jmpq push jmpq je jmpq push jmpq mov jmpq push jmpq mov jmpq push jmpq push jmpq jmpq jmpq jmpq mov jmpq add jl mov jmpq push jmpq push jp push jmpq popq jmpq jmpq je test addl cmc clc bt stc sub cmc cmc bt sub test cmp test xchg stc cmc jmpq bswap not movsbw movzbw inc not bswap not sub add ror shl mov test cmc jmpq jmpq jmpq test cmp add std test popfq jmpq mov jmpq jmpq bswap test btc mov cmc test add jmpq push jmpq popq jmpq clc cmp jmpq mov jmpq movabs shr cmp add bsf mov rol sub shr neg add or rcr sub mov dec movsbw inc mov sub movsbq inc sbb add bsr ror setb setge not jmpq jmpq pushfq jmpq std cld jmpq jmpq push jmpq jmpq movsbw jg bswap push setge push bswap not xchg lea push movsbl push xchg not not push not lea push xchg mov push xchg push jmpq jmpq stc cmp jmpq push jmpq jmpq push jmpq jmpq rol stc jge neg jmpq cmc xor clc test xchg test stc stc sub jmpq mov jmpq popq jmpq jmpq pushfq jmpq jmpq jmpq pushfq jmpq popq jmpq push jmpq bt test add jmpq sub jmpq jmpq push jmpq jmpq jmpq clc bt clc shl jmpq jmpq jmpq push jmpq jmpq jmpq jmpq divl jmpq jmpq not mov movzbw mov test test cmp add jmpq push jmpq mov jmpq cmc stc cwtl bt cltq clc sub cmc clc sub jmpq xor clc bt stc cmp jmpq rol test dec shr sub shrd sets shld bswap btc mov movzbw inc data16 (bad) or sub data16 lock shr shr and xchg mov lea shrd ror or lea movzbw rcr movabs sbb add add test btr lea mov and bsf clc add rol add shld mov clc xor inc stc sub bswap mov inc xor add movsbw not not add sbb and sub mov lea inc movzbq movsbw bswap inc mov jmpq mov jmpq push jmpq push jb push jmpq mov jmpq jmpq xchg pop xchg movzbw not pop bswap pop not xchg lea pop jmpq jmpq push jmpq push jmpq bt clc add clc stc clc jmpq jmpq jmpq popq jmpq bt jmpq movzbw dec btr lea cmp test cmp jmpq mov jmpq cbtw shrd shrd shrd movzww stc add stc lea clc stc rol jmpq stc ror stc cmp neg bt cmc not cmc cmp stc test sub js cmc test cmc mov bt clc jmpq pushfq jmpq movsbq push not push movsbw movzbw jmpq jbe rep cmc pop rcl test neg movsbl pop jb cmc cmp popfq jmpq push jmpq jmpq je push jmpq jmpq jmpq jmpq push jmpq sub movzbw mov btr or ror shld mov jmpq mov jmpq jmpq mov jmpq setnp push not not push not xchg lea movzbw push setnp movsbq bswap not repz rol stc not xchg pushq stc movabs setne movzbw mov bts push bts rcr clc mov bswap bswap jmpq jmpq push jmpq lea jmpq push jmpq cmp jmpq movzbl jmpq clc clc sub stc bt shr jmpq mov jmpq push jmpq popq jmpq inc clc add clc test stc clc cwtl cmc stc stc bt cltq cmp sub cmc bt sub jmpq push jmpq push jmpq bt test cwtl clc test sub jmpq js push bswap mov mov mov cld cld jmpq mov jmpq push jmpq push jmpq jmpq setno mov jmpq push jmpq pushfq jmpq jmpq push jmpq bt shl shr mov (bad) repnz stc mov bt jg clc add jae mov jmpq not jmpq lea movsbq seto mov jmpq setg push xchg lea push lea xchg not push lea setge jmpq je jmpq pushfq jmpq push jmpq pop movsbw pop jmpq mov jmpq push movzbw push movzbw seto push bswap push mov movsbw jg push xchg movzbq lea repz ror movsbw pushq rcl lea rcr btc movabs bts bswap mov not rcl not bts push rcr clc mov rcl rcr setbe stc rol and xadd sub dec bswap inc mov bsf xchg sub bsr movzbw and shr bswap shrd xchg mov sub ror add setb lea rcr neg mov rcl movabs inc sar shl add bswap mov lea stc not add lea btc mov shl shr mov (bad) icebp sub inc movsbw inc neg cmc rcr add stc btc bsf not btc shld bt add add rcl sub inc jmpq inc mov clc stc cmc cmc add jmpq push jmpq add jmpq inc bt clc add jmpq jmpq stc cmc bt cmp jmpq cmc shld sub mov sub xor mov cmc cmc jmpq mov jmpq jle mov jmpq dec bt ror jmpq mov jmpq mov jmpq jmpq push jmpq movsbw mov jmpq push jmpq stc stc bt cmp jmpq jmpq push jmpq jmpq popq jmpq popq jmpq mov jmpq popq jmpq jmpq push jmpq push jmpq mov jmpq jmpq bt lea cmc stc stc clc test jmpq cmp test add jmpq push jmpq push jmpq popq jmpq pushfq jmpq jmpq btc xor rcl mov rcl cmp cmc sar mov jnp cmc stc cmp sub cmc test stc cmp shr jmpq add cmc bt rol jmpq pushfq jmpq pop bt bt bt bt popfq jmpq popq jmpq popq jmpq stc cmp cmp addl clc sub test clc cmc test xor stc bt xchg test cmp jmpq lea jmpq pop movzbq pop jmpq clc test clc sub bt stc add jmpq cmp add jmpq popq jmpq jmpq push jmpq popq jmpq mov jns pushfq jmpq jmpq push jmpq push jmpq push jmpq bswap not test mov shr sar rcr mov clc sub cmp test test jmpq bt clc stc bt rol bt stc stc add test test add cmp cmc stc cbtw cmp test cwtl stc sub jmpq push jmpq jmpq ja popq jmpq jmpq push jmpq jmpq jne clc mov stc and test cmp jmpq push jmpq cmc stc lea test test clc stc sub jmpq rcr btc bsf mov ror not pop or bsr movzbw pop cld not popfq jmpq jmpq popq jmpq popq jmpq seto movzbl mov (bad) hlt mov clc jae stc sub cmp add jl pushfq jmpq jmpq pushfq jmpq jmpq jmpq jmpq jmpq jmpq add jmpq mov jmpq jmpq popq jmpq je bswap not mov jmpq jmpq push jmpq jmpq jmpq mov jmpq bt neg cmc not cmc jmpq jmpq jmpq push jmpq jmpq jmpq jmpq pushfq jmpq clc stc add bt jmpq jmpq push jmpq jmpq push jmpq jmpq sub adc bts sar not sub sub pop cmc bt sub jmpq stc add jmpq sub jl mov jmpq push jmpq jmpq jmpq pushfq jns popq jmpq push jmpq xchg neg btr mov rcl bt or sar mov jmpq jmpq jmpq jmpq pushfq jmpq push jmpq jmpq jmpq jmpq push movsbw push jl lea push movsbw movsbl lea setne push bswap movzbq jmpq push jmpq push jmpq jmpq jmpq jmpq popq jmpq pop jmpq mov jmpq push jmpq jmpq push jmpq mov jmpq jmpq push jmpq jmpq jmpq js push jmpq push jmpq jmpq mov jmpq push jmpq ja movsbw xchg bsf mov btc lea shl sar sub movzbq btr sbb not lea rcl dec lea and sub test sub lea mov mov jmpq push jmpq mov jnp pushfq jmpq push jmpq jae push jmpq jmpq jmpq jmpq inc btc mov movzbw not and mov sar sub mov cmp add test test test shld jmpq jmpq pushfq jmpq push jmpq push jmpq test rcr adc add and (bad) icebp movzbw bts sub not movzbq dec mov jmpq mov jmpq rol and test sbb mov clc test jmpq jmpq mov jmpq push jmpq jmpq push movzbq not push jmpq rcr notq bsr dec bsr or mov clc sub cmc cmp bt test and jmpq jmpq je jmpq mov jmpq shr jge mov jmpq stc and jmpq inc test add stc cmp clc jmpq jmpq jmpq cmc add jmpq jmpq jmpq jmpq push jmpq jmpq jmpq bt neg jb inc jmpq push jmpq shld mov stc mov bt sub jmpq inc movzbl jmpq push jmpq mov jmpq jmpq jmpq mov jmpq clc test neg jmpq jmpq push jmpq jmpq js cpuid jmpq jmpq jmpq popq jmpq stc jmpq jmpq jae inc bt cmp cmc add jmpq je stc cmp je test addl cmp cmp cmc sub bt xor cmp clc cmp xchg test test cmp jmpq jmpq inc clc bt sub stc jmpq jmpq jmpq shr add inc setl notl sub mov jns cmc cmp cmp sub cmc clc stc and jmpq xadd add or cmc mov sbb xor mov jmpq clc cltq cmc test stc clc sub stc sub jmpq popq jmpq lea mov jmpq jns inc jmpq jmpq mov jmpq cmc cmp sub cmc bt bt ror clc stc jmpq mov jmpq not inc add rol add bt stc not rol add setp sub bswap inc movzbq dec movsbl inc mov jl inc stc bt bt jmpq clc bt jmpq push jmpq jmpq inc jmpq jmpq jmpq cmp clc add jmpq jmpq neg xadd mov bt adc sar mov stc clc test sub stc cmp test jmpq jp test clc add jo bt stc rol clc clc jmpq jmpq mov jmpq push jmpq inc cmp add jmpq jmpq mov jmpq stc stc cbtw bt jmpq jmpq mov jmpq inc cmc add jmpq mov jmpq jmpq push jmpq push jmpq mov jmpq jmpq cmc rol (bad) lock fmuls sti (bad) (bad) jmpq jmpq jmpq pushfq jmpq stc ror clc clc push (bad) testl jmpq push jmpq inc stc cbtw jmpq jmpq bt sub jmpq jmpq push jmpq sbb bsr rol rol movzbl cmc bsf clc movzbl xor inc cmp neg lea bswap mov movzbw dec sar bswap btc bt xor bswap xor or shrd mov stc jmpq jmpq push jmpq jmpq clc test sub jmpq push mov mov jmpq push jmpq popq jmpq add stc bt clc rol clc stc jmpq mov jmpq push jmpq not not bts mov lea jmpq pushfq jmpq jmpq jmpq jmpq sub jmpq mov jmpq mov jmpq inc clc clc test add cmc clc test cwtl bt sub jmpq jmpq jmpq mov jmpq push jmpq jg mov jmpq bts data16 lock mov btc mov cmc test add jmpq test and test clc cmp jmpq jmpq or rdtsc jmpq push jmpq jmpq bt add stc clc cmp cmp sub jmpq jmpq push jmpq push jmpq test neg jmpq jmpq je movsbw mov movsbq setle mov jmpq clc addl cmp cmc stc cmc push bt sub jmpq test mov rol add jmpq and not and sub movzbl test stc lea bt add cmc sub clc jmpq popq jmpq jmpq push jmpq jmpq jmpq inc test test add stc jmpq jl mov jmpq jmpq mov jmpq je ror stc xor cmp bt bt add bt mov bt sub jmpq jmpq push jmpq setno bswap pop movsbw movsbl lea pop lea pop movzbw movsbl jmpq popq jmpq mov jmpq jmpq jmpq pushfq jmpq jmpq push jmpq rcl stc bt mov clc adc jae rol mov cmp sub bt cmc jae shl jmpq bt add jmpq sub clc bt stc bt rol jmpq jmpq mov jmpq jmpq jmpq jmpq popq jmpq jmpq push jmpq cmp clc shl jmpq rol rol sub bts movsbw inc dec bswap btc add shld clc mov clc sub bsf xor xor (bad) icebp add in add lea mov sub rcl xor shrd lea movzbq neg cmc add movabs cmc adc xor stc add btc mov sbb shrd shld add bt inc sub stc mov inc sub movzbw inc rcl rcl add shr not rol add movzbw shl test sub seta movzbq mov mov jmpq stc test shr jmpq jmpq test add jmpq jmpq jmpq jmpq jmpq jmpq jmpq mov je pushfq jmpq test cmp jmpq jmpq popq jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq mov jmpq pushfq jmpq jno push jmpq pushfq jle popq jmpq jmpq push jmpq jmpq setns mov ror bts rcr xchg push bt btr bt mov mov jb bswap rol data16 hlt add out data16 cmc cmc sub not add cmp bswap btr stc jmpq push jmpq jmpq jmpq jmpq clc add cmc bt jmpq je jmpq jmpq push jmpq add bt jmpq push jmpq push jmpq jmpq push jmpq jmpq test jmpq push jmpq jmpq jns stc add jmpq test clc cwtl test bt cltq jmpq jmpq push jmpq jne bt jmpq jmpq mov jmpq bswap (bad) hlt stc mov cmc clc bt add jmpq pushfq jmpq bt cmc sub clc cmc clc stc sub jmpq jmpq shld movsbw mov cmp sub jmpq jmpq jmpq push jmpq jmpq cmp lea cmc add stc sub jmpq bt clc sub bt cmp cmpl jmpq push jmpq mov jmpq mov jmpq mov jmpq jmpq push jmpq jmpq movzbl movzbl movzbw mov bt neg stc bswap mov stc cmc cmc not test bt not cmp cmp and jmpq mov jmpq pushfq jmpq sub cmc test bt sub jmpq jmpq popq jmpq mov jmpq mov mov movzbw push xchg push setp bswap not not push jmpq jmpq cmp test stc and jg mov jmpq jmpq cmp sub jmpq mov jmpq jmpq mov jmpq mov jmpq lea push mov xchg not jmpq push jmpq movzbw push jmpq push jge push jmpq jmpq cld cld jmpq mov jmpq push jmpq mov xor mov stc mov clc cmc add jmpq setbe movsbw not pop not movsbw movsbl pop jmpq inc jmpq jmpq clc add jmpq jmpq jmpq push jmpq pushfq jmpq jmpq jmpq jmpq jnp push jmpq jmpq push jmpq jmpq jmpq jmpq popq jmpq inc stc jmpq jmpq push jmpq mov jmpq jmpq push seta xchg xchg push bswap not push sets lea push seta jmpq cmc cmp shl jmpq jmpq popq jmpq mov jo pushfq jmpq jmpq jbe push jmpq pushfq jmpq jmpq push jmpq bt rol btr sbb not movsbl sub bt bsf neg bswap bsr data16 cmc movzbq mov mov stc sub rcr xor shr and bswap bt shl mov xor bt dec bts lea movzbl stc movabs test adc add sbb mov stc bsf mov xor add bt bswap setnp mov stc sub lea movzbw bswap inc btc not add inc shl neg not (bad) cmc add (bad) roll setae cmc mov bsr sub movsbw bswap movzbq mov inc not mov mov jmpq jmpq jmpq movzbl bswap jmpq jmpq pushfq jmpq jmpq mov jmpq pushfq jmpq jmpq ja mov jmpq jmpq jp push jmpq std std cld popfq jmpq pushfq jbe popq jmpq jmpq bts rol rcr shl mov cmc test cmp jmpq mov jmpq push jmpq jmpq jmpq mov jmpq push jmpq mov jmpq jmpq jmpq jmpq pushfq jmpq sar clc xadd stc mov adc shl mov rcl mov clc stc sub jmpq popq jmpq jmpq lea pushfq movsbw lea push lea mov not movsbq not mov lea std std jmpq jmpq jmpq jne dec sub mov jmpq jmpq jmpq (bad) lock mov rol mov test sub cmp cmp cmc clc shr jmpq mov jmpq xchg movsbw push lea movsbw push lea push movsbw bswap push lea movzbl push bswap sets push mov xchg push mov mov not push xchg setne push xchg bswap not repz movzbw movzbw pushq cmc clc movabs sete mov ror push jmpq jmpq cmp cmc popfq jmpq push jmpq jmpq jmpq push setne push seto sete setge bswap push jmpq clc add bt add cmc cmc cmp cbtw jmpq jmpq jl push mov push jmpq jmpq jmpq jmpq rep btc bsr pop movsbl jmpq bt bt cmc ror test cmc cmp xor stc cmc cmc add stc mov clc clc sub jmpq push jmpq push jmpq push jmpq jmpq popq jmpq popq jmpq jbe jmpq jmpq push jmpq jmpq cmc bt neg jmpq jmpq sub bswap mov clc sub jmpq je lea movsbq setp mov mov jmpq push jo push jmpq shr mov bsr setnp mov stc jmpq es mov jmpq jmpq push jmpq cmp jmpq mov clc neg mov bt shrd add inc inc stc add btr ror btc rol cmc and rol movzbw add not bt bt add movzbw shr movzbl stc mov cmc movl clc stc or jmpq shl bts xor rol bsr bswap mov cmc add jmpq jbe mov jmpq jmpq stc mov shl setne add mov setno seta jmpq lea jmpq popq jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq cmp cmpl jmpq jmpq inc cmc stc cmp jmpq rol jmpq jae lea jmpq jmpq push jmpq jmpq mov jmpq test setge mov cmp cmc cmc cmc add jmpq mov jns lea jns mov jmpq jmpq jmpq jmpq jmpq pushfq jmpq push jmpq mov jmpq bt add jmpq stc add test stc jmpq inc bt jmpq pushfq jmpq jmpq jmpq push jmpq mov jmpq setp movsbq push not sete setae movzbl mov jmpq jmpq jmpq mov jmpq inc cmc add jmpq push jmpq jmpq push jmpq add jnp inc jmpq popq jmpq jmpq jmpq jmpq push jmpq push jmpq movzbq push bswap jmpq jmpq not bsf dec inc mov clc cmc stc sub jmpq and mov xadd sbb sub setnp xadd dec data16 (bad) or ror clc add mov xchg lea shrd movabs add add btr btr sub sub mov stc btr add add bsr inc bts mov not lea sub not inc xor add and not xor add bt sub lea setg movzbq bswap jmpq bswap movabs bswap mov mov lea lea bts movzbl push rcr xchg mov lea rol bt ror clc movsbw sub dec mov bsr bswap setns adc bt mov movzbw sub shrd bsf bt and rol and ror mov rol adc lea clc movzbl sar shr movabs and add btc sbb cmc movsbw mov rcr movzbl inc add mov mov lea adc neg movsbw sub dec jmpq push jmpq inc movsbl sar not neg lea movzbq sbb neg bsr lea sar add mov mov jmpq jmpq jmpq push jmpq jmpq pushfq jmpq movzbw btc rcr btc movzbl sub or bsr setae sub bswap bts rcl jmpq mov jmpq jmpq push lea sub bts adc bsr pop cmp cltq cmc bt stc cmp sub stc cmp stc bt mov bt bt sub jmpq rcl test movzbl and cmc movzbl add movsbw inc btr stc not not neg and movzbw shl btr add shld bsf neg stc add rcl xor cmc sar mov test cmp clc add jmpq jmpq jmpq sar dec mov shr mov clc bt add jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq popq jmpq jmpq pushfq jmpq inc clc stc cmp cmp add jmpq push jmpq jmpq jmpq ror add rol setge bswap stc sub jmpq mov jmpq mov jmpq bswap not movzbl mov jmpq jmpq jmpq add jmpq jmpq popq jmpq jmpq push jo push jmpq sub jmpq jmpq jmpq jmpq jmpq popq jmpq jmpq push jmpq jg lea not setne not jmpq jmpq push jmpq jmpq sub cmp add jmpq jmpq jmpq 