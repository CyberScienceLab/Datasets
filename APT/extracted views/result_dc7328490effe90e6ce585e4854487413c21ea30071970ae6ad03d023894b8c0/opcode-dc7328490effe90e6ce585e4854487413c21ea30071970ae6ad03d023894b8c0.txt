mov sub test push mov push push mov jne lea push push call lea push push call lea push call test mov jne lea lea push push push call add lea push push push push call mov test jne push call mov push push call test jne mov shr jne push lea push push call add lea push lea push push call add lea push push push push call push call pop pop pop add ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push push mov xor lea movb rep stos stos lea push push push call mov mov cmp je cmp jne cmp je mov xor mov mov lea movb rep stos mov movl stos mov mov sub lea mov mov mov mov mov mov rep call add mov pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push push mov push push push push push push push call mov cmp mov jne pop xor pop ret push push call push push mov mov push push push push call test mov je push push push call mov add push push push push push call mov pop mov pop ret nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov test je mov mov add test je mov test je mov mov add add test movl jbe mov mov add push push call add test je mov mov inc add add cmp mov jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop lea mov add pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov mov mov add mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop sub push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov mov mov test mov je mov test jbe push call mov add test je push push call add test je sub mov lea mov rep call mov test je cmpl jne push push call add test je push call mov mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop jmp jmp jmp mov test jne cmp jle decl mov cmp mov mov jne push call test pop mov jne xor jmp andl mov push push mov call incl pop pop jmp test jne mov test je mov push lea cmp jb mov test je call mov sub jmp push call andl pop pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret jmp sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop mov add sub adc sub adc add xchg sub adc sub adc sub add adc add inc sub adc sub adc add dec sub and push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea add add cli das add insl xor adc add xor adc add dec cmp adc cmp adc add xchg add in add sahf add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov repz add test inc add xlat inc add dec inc add jbe add pop inc add jbe add scas inc add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop jmp add inc imul add mov add aaa je push rol aad and cmp and and push adc jne repnz out fdivl or cmp add clc icebp pop cmp pop rorb mov xchg jp mov mov mov les (bad) icebp pop mov mov std inc out rolb mov dec mov add dec aam out ljmp sub jecxz int fiadd enter scas into into ret mov dec lods sub pop mov ds mov shrb push lret or mov (bad) (bad) (bad) pop lret dec dec test insb pop push fstpt fbstp inc stc dec xor xor dec enter adc negb popl mov out arpl int inc dec lret pop fisubr enter (bad) shr negb dec or dec enter (bad) fiadd enter aam xchg in out imul mov bound imulb scas movsl lcall ret xchg or sahf cwtl push mov mov or dec bound stc insl sbb test pop in push cmp js lds and jns mov int3 lods add out (bad) xor mov cmc clc in lods mov addl mov mov push iret mov sahf pop adc pop or stos leave fdivs lods jno popf jle adc jbe daa sub sbb rolb pop (bad) iret sub mov iret rcl xor movsb iret xchg push adc and jbe and into ret add mov and imul gs ss (bad) push lock ja enter in mov dec lock pop fstl adc or mov pop jg scas sub fdivs dec pusha xchg ss lret ret test ffree stos add fsubl sahf sbb cmc jns imul mov jnp pop outsb jl test insb stos inc scas fdivl movsl dec pop push xchg push lds add in adc sbb mov or imul int sbb into mov scas cli mov push dec fs fabs jle xchg test dec popf jge push in jge cmp push push and jle xchg push out ss xchg (bad) out adc (bad) jnp imulb push iret and lock movl sahf (bad) imul ja sbb inc (bad) fildl lods dec mov test xchg xchg inc cmpsb mov push in sbb test sti mov sti pop das xchg lret insl lahf pop inc in sub and and adc into add lret xor jl clc or fwait push (bad) mov aad iret cmp ror int3 mov or ficom jg ja,pn repnz lds mov mov xadd mov cmp adc cmpsl les mov je popa repnz inc fcmove mov mov negb sub (bad) lock dec xchg dec (bad) fisub jl jle fisttp mov or xlat jnp jl adc in mov sbb arpl popa testb insb pop mov pop or iret push xchg pop mov jne,pn add inc cmpsl jb inc rolb jae repnz pop fcmovnbe (bad) arpl cltd inc jge js sub pop insl mov xchg aam adc jle push outsb jge sbb ret scas mov mov add mov mov mov xchg add imul (bad) stos test clc or test ret dec aaa aas sbb pop dec lea aas inc movsl enter push sub mov les fldcw les jmp or cmp dec dec push stos sub fsubl rcrb fnop jge out shrb js xchg lock test push mov lahf cli sub jl xor adc (bad) jbe sub outsb ret pop stos add out pop aam xor cmc enter into push addr16 outsl mov or sti fild leave pop push jno (bad) enter pop das mov bound push inc adc outsl pop aas flds sub and mov int out add mov dec xchg jo jae (bad) jne and and cld (bad) cmc data16 dec sti jnp xchg dec mov mov test push push mov lods push dec (bad) dec ja fwait jl mov jbe negb add add dec fistpll popf mov jp pop inc push mov mov arpl aad add jmp sbb (bad) cmp sahf mull pop adc cmp mov and mov test pop enter (bad) hlt mov pop push popf ss and mov std and sub (bad) daa cld add mov loop xchg (bad) out js xchg sbb sbb js push pop jle sbb test popf pop mov mov pop clc lock mov adc mov bound fmuls inc mov dec lds or (bad) sbb fwait dec in (bad) dec sub pusha jle arpl (bad) in or dec scas mov mov or fcmove xor or ret icebp sub iret mov roll in pop mov test sbb jnp mov jp scas xchg insb jbe out bound into push dec adc repz and in hlt inc or xchg lods push mov lods std bound cld dec pop cs jg lret int mov mov or mov pushf jne mov test mov xor cmp test fwait test xchg lods xchg sahf int lods or jp jnp pop fcmovne and push jmp decb sub int3 pop test push sub lcall mov rcrb out test (bad) add lock mov mov (bad) push cwtl ss sbb or add mov hlt into sub std sbb xor movsb movsb dec or aad mov inc jno pop or pop iret test sbb repz (bad) push insb stc repz setle jnp add lock and push mov repz jbe xor pop mov in mov and test arpl arpl nop ret and arpl sbb dec iret mov (bad) cmc mov xor pushf testb lods daa push nop lahf sti test fimull xchg movsb xchg add xchg sbb xor stos int3 test dec daa out (bad) ja add icebp jl in mov dec mov add mov jl or xlat movsl xor and in pop std test or hlt mulb and jne cmpsl repnz idivl inc fiaddl inc (bad) repz int cmc lds repz lret and sti es jae mov xor xor js lahf dec adc ds imul out xchg ja popf xor xchg dec jle mov or mov cmp cmp (bad) mov pop fmuls js rcrl and and sarl xor sbb fsub mov inc jae (bad) test shrl mov sbb shlb push popf dec insl jl cmc incl xor (bad) mov add rcrb push aad je pusha dec out pop mov mov sahf ljmp cmp cld pop mov push lea lods push mov cmpsl cli xchg stos mov and pop outsb dec addr16 stos mov mov dec aad sarb aam mov aad adc adc iret jle jns popf sub adc and call lods add mov cmc (bad) cmpps fwait pop pop in or (bad) jno sbb xlat jnp test sub xor mov (bad) repnz sub push fisttpl movsl mov or cmpsb xor xlat test fcomps nop rcrl sahf sbbl (bad) jo add dec sbb cltd cmp stos cmpb lret xchg jo sbb xchg xchg hlt inc xchg fst outsb in aaa sti or adc jl bound cwtl sub add out push pop loope mov cmp dec adc push mov daa sbb xchg lock pop jb cld adc ja roll jbe xchg mov push addr16 mov adc xchg mov xor pop jl je adc jbe in insb scas lcall mov mov mov add push sbb add pop adc fs jno lock enter xchg test lods loop in dec push shl in xchg aaa jle cwtl pop out fcmovb adc cltd dec leave fnstsw jl lods jmp push push arpl mov fcmove jno push aam cwtl jmp into data16 pmulhuw stos cmc int jl sbb pop xchg sbb add sub or jb add dec fdivl out sub and into rolb mov neg sbb inc xor sbb adc out in and (bad) xor loopne jne xor aas jb in xchg int3 mov inc pop scas mov bound adc mov mov and pop stos insl and jmp pop stos sahf loope out mov (bad) mov xor js or jo sub movsl dec subl fimul pop mov je sub cltd push roll and (bad) scas imul sahf inc lds sbb paddusb mov sub fsubrl inc cld xor adcb mov push dec push jo mov adc andl and (bad) scas inc lahf fist aam fiaddl mov arpl (bad) pop enter iret (bad) enter sbb add jne lahf mov loop mov jge sub and sub push jne lds insl pusha cmp inc (bad) leave mov mov out inc sbbb sti (bad) dec insb in test ss mov in ret stos hlt pop or sbbb add jp inc or imul inc push int3 out insb out jnp mov scas into loope pop push fisubl cwtl outsl cmp loop xor jp adc or push shlb dec dec xlat daa cld icebp xchg js decb inc adc aam (bad) push lahf icebp (bad) ror jle sbb loop in sbb push or mov into xlat mov bound loope mov dec xchg or je rclb dec (bad) call arpl adc cld sbb add stos mov xchg and sbb outsb movsb sahf mov test push dec les (bad) jge sbb out (bad) loop inc push adc js pop jl push push sbb nop lret arpl sub xchg insb xchg sti xlat das jns adc divl or mov in stc inc xor js ficom mov adc test mov outsl cmp inc and pop movsl idivb test mov dec cmp mov pop xchg lahf cli push ja out ficom cmp shrb mov or push jp mov (bad) iret jnp pop or scas dec mov sub (bad) ss add out aaa push sahf pushf or add ja aaa les cmc jmp cld and xchg repnz xchg dec and add out cmp pop (bad) and ss or sub out ret test les add pop outsb mov mov mov mov mov mov inc ret cmpb inc mov je ds out out jl out or int3 or sbb aam pop or pop mov mov fs jle inc pop (bad) push mov xchg (bad) (bad) clc adc mov imul or (bad) (bad) clc adc push adc (bad) xor (bad) std push jbe out cwtl imul pop add mov mov icebp dec sbb pop rcll sbbl dec adc mov pop xchg sub mov cmp inc cmp mov adc jae fmul mov xchg (bad) in jnp lock add xchg add mov (bad) jecxz in mov lret pop cli jae mov xchg stos add out inc out div add in iret and (bad) imul nop sti shrl jge jbe xchg add mov out mov dec (bad) cmc mov mov push (bad) hlt jne pop fmuls lret das or popa in in out xchg inc dec dec enter push nop lds mov out pop mov adc shrb mov lahf mov sbb and or cmpsl mov (bad) popa mov cmp jne mov xlat adc cmp sbb mov inc xchg sbb inc sub xor scas in xchg test incl fdivs bound gs aad (bad) int mov mov pop xlat jecxz mov and xchg mov lret pop add jo inc lock lahf sbb les mov movsl fldcw aam pop xor sub in sar rcll inc out les xchg dec jb sahf ret in mov and lcall cmp mov popf sbb xor and nop add enter mov mov sub test or mov cmp jecxz icebp xchg das and add cli repz orl addr16 fnstsw sbb xchg cmpsl fwait jnp addl pop call dec jp sub out (bad) movsl adc cmpsl cmp fadd inc add jne pop and jo ds adc cwtl cltd mov mov pushl and (bad) js mov enter mov add xchg add xor test fbstp sbbb sbb pop sbb addr16 out and lock fiaddl add push lahf loop js (bad) loope outsb xchg sbb and inc xchg mov cmp jb dec inc push jno aas pop jae mov and (bad) mov hlt loop push repnz mov lds int pop int3 lods les xor mov inc fwait rclb movsb lret mov sub xlat xchg int3 lock ljmp dec mov sub sbb push jle lods punpckhdq (bad) int outsb ljmp push mov jbe jne repz mov mov jmp and xchg jp jne or xor pop lcall pop pop (bad) in adc imulb pop addr16 cmp jg rol sbb imul dec jg repnz fildl pusha gs cs arpl mov inc clc sub jb leave mov jns pop repnz cltd aas jmp inc sbb sub repnz mov mov (bad) repz enter or jl,pt mov int inc (bad) mov mov fisttpl ret adc dec jge xor mov andl add (bad) repnz sbb das jmp cmp cmpsl cltd mov rol cmp cmp add and rcr je and ret push call dec loop scas adc dec add cmp mov add and sbb out orb jo and ja enter popl rcrl rcll dec addr16 hlt mov mov mov hlt dec adc enter fdivl inc adc sbb idiv pop bound into sti sub mov andb pushf jo fdivl push sub loopne jle mov fdivrs push mov lds inc pop cmp out xlat stos out mov scas push mov shlb jmp mov int3 mov mov inc xor stos into scas cmp jmp cmp test pop xor mov pop cwtl (bad) pop je lds or jae mov (bad) fildll pop cli ds mov insb in bound pop sbb fs mov sub mov add add and sub dec loop (bad) aam cs dec add popa mov mov iret imul arpl and lods mov adc push test (bad) aam lds scas ja pop jb pop dec nop lea lock and sbb xor jo sub pushf jno arpl sbb xchg or xchg popf adc and mov stos rep push mov test xchg fwait loope push adcl pusha sahf jg mov sub clc lret data16 lods mov dec jp push xchg mov test push sahf lock loopne es les push out mov imul xor fistp cs or pop jp mov or dec jbe lods jle sub adc and mov xchg sub jecxz sub sarb (bad) icebp outsb flds pop divl xchg and mov sub sbb (bad) lret or inc push faddl stos mov fbstp das jp pop pusha and pop pop aam push (bad) xchg sarl test cmc enter sbb out lea and repz add sbb into xchg testb std int jl fisub push lods xor or mov inc pop iret xchg sbb in rcrl imul adc xor add mov push outsl inc adc loopne mov orb enter cmc int add icebp mov clc bnd or rcrl jno jbe pop add lcall insb int3 (bad) popa sarl jle dec xchg dec fwait mov pop inc out negl push out sub ret pop ret in mov jp xchg sub out jge or dec out or pop fcmovnu scas mov pushf cmp or dec (bad) outsl xchg xchg inc rclb inc xor mov nop or int or enter xor dec add jbe loop sbb cmp or dec dec mov jle inc (bad) notb test mov out sbb xor or int3 movsl lds (bad) repz jbe insl push jp jo or or test dec dec bound insl ret into mov (bad) pop pop lods push or inc fnstenv inc fdivrs (bad) pop (bad) jecxz jecxz jnp test jnp out (bad) xchg pop pop sbb sbb push cmp inc push test movsbl inc pop daa iret ret push dec adc fistl push or sahf push inc and lods fwait outsl cmp dec dec cmp mov sbb sbb lock aaa ror sub in andl pop test mov sub cwtl aaa aad push or mov dec test (bad) or movsb xor jp stos lds lret pop test sub jno je fidivl push popa add lret push insl shlb js sub or pop pop pop mov mov pusha (bad) lret lret imul test rcrl (bad) fchs ret or loope pop mov sbbb pop add mov lret add mov (bad) movsb cmpsb mov inc sbb sub (bad) pop sbb sbb fcompl sbbl push (bad) loop into pop xchg pop hlt push outsl aad lea pushf fst sbb bound outsb ror xlat xchg pop push into popl into mov mov jl fidivr std push mov test and push neg sahf into mov daa pop or jp mov popa cmpsl test xchg pop pop mov cwtl xchg das imulb dec sub test mov push (bad) or fcmovb jmp call sarl mov mov arpl daa jo outsb inc movsb mov adc mov (bad) leave scas pop pop dec xchg add sub lret cwtl adc popf ds jmp push jmp scas push and mov or push pop fldcw fldenv mov clc jg cwtl mov shll push pop (bad) xor inc dec dec jecxz enter hlt (bad) into dec mov (bad) mov jg push inc mov (bad) mov inc (bad) and cli or or (bad) cmp xchg outsl mov (bad) jmp insb les sub xchg sub in loopne sub negl das xchg out push push push cmc out jae insl enter push or clc pop ljmp daa das mov lret inc mov (bad) (bad) aas push lahf call push repz fstpt jle xchg push loope (bad) ds mov xchg popf daa push out fcmovnu jmp jae pop lds or lock push fstpt nop sbb mov test or adc lret sub fwait lret cmp adc mov aam pop (bad) repnz xor pop jmp imul dec inc sub rcrl fwait sub xchg loop add add (bad) sbb loopne dec xor sbb nop pusha int lock mov ret cmp and mov xchg das mov fcmovnu (bad) adc push or rorl lods xor cmpsb fbstp mov (bad) jmp arpl shll test sahf lea fisubrl mov popw mov lahf fwait dec in test loope jns xor xchg push ficoml adc inc sub mov and xchg repnz mull (bad) enter mov push fidivl xchg ret orl jno jmp ret aam jle push adc push daa movsl dec cmc adc (bad) movsl stos cld cmp (bad) lock (bad) bound cli mov dec stos push sbbl stc lret and push stc push stos movsl and mov inc mov and sub dec sahf inc dec cmp and clc stos sbbl fdivr cmp rcrb jne xlat pop sti push mov ds or sbb outsb xor inc and dec cwtl mov dec in repnz loop pusha es subb enter jae cs push xor cld outsb cmp das lods bound cmp mov mov lret jae mov lahf ret fisubl fucomi sbbl insb scas in imulb fucomp mov mov outsb ret movsl lock outsb test dec sub rorb sbb or in jmp (bad) or stos daa inc or aas sbb cwtl lcall sbb inc and add outsb cmp movsb (bad) push add jns cmp sub pop jl test cmp (bad) push mov flds inc mov sub rcll jne fildl xor jp mov into fsubp push fisubr sub arpl push and push nop (bad) rcl mov cli mov adc xchg call movsb pop outsl jnp xor fisubr cwtl adc test push xor mov test lds mov fnsave dec pop rorb add or aas pop push and fmull pop icebp test mov jp jae push sub dec ljmp stc fwait adc dec cmp push inc movsb cmp xchg sbb inc lret das repz sahf push int3 lock leave mov ds push ljmp ret fdivl push cmpsb ss daa and xchg notl (bad) rcr lret mov inc outsl jne das pop mov add mov push mov sub sub shl fstpl incl sub (bad) fistp fist inc sub int3 sub mov dec mov or inc lea js sahf fwait xchg or jbe jne or adc add test gs push std stos cld push xchg lock sub mov je out arpl and nop sbb repnz jnp jg sub mov dec jle insb std mov and arpl fidivr push cld jmp push dec push inc and lods (bad) and in (bad) (bad) cmpsb leave dec pop inc std mov pop push mov in dec fild nop js shrl repnz add call iret orl inc mov rcll add scas push sbb ret stos jg sub scas xchg int3 jnp xor mov xor jecxz adc sub sahf decb jne (bad) dec adc outsl nop push xlat fidivr push jo push or xchg cmp push mov icebp mov xlat mov fcoml push jmp push sti push mov mov mov sbb push push insb push inc (bad) loope and aaa mov lcall lods xor (bad) addl or jge push bnd pop jns or mov mov fsubs rcrb fistp imul repz xchg inc test pop loopne popf lds stos lea cld (bad) loopne xchg push sahf pop adc cwtl call pop cmp (bad) ja stos pop test mov ret in push add add mov test xlat cwtl xchg and in inc pop and add movsl add icebp ret pushf movb push das rolb fwait pushf xor push xchg sbb jnp in add out dec stos add sub ja lcall leave pop insb insl cltd inc mov push out out movsl mov xchg inc add imul shrl pop movsl sbb xchg pop xor (bad) cmpsl pop push es aad rcll lods add (bad) push into pop push lock fwait sahf lret mov loopne jp into orl mov push data16 push insl test (bad) mov je sarb aas jecxz movsb add sub sub jbe cmp fxam inc and (bad) negl push ss pop inc jnp adc scas cmp jle insb pushf imulb test insb fsubrl les in mov fdivrl stos mov mov adc call das es adcl xchg inc pop loopne loopne ljmp (bad) mov inc aam adc adc js lods (bad) push scas xchg inc aas jb in push adc dec and cli in jmp popa lods test lahf jp jmp daa lahf pop xchg cmp jns cmp cmpsb pushf xchg stos xor xor outsb push ljmp mov sahf xor sub lods in jmp inc sbb push inc loopne xchg js shrb or mov and in pusha and insb inc push xchg add stos test cwtl and sub pop push dec mov fistpl js lret jne pusha call mov dec dec cltd or inc into enter (bad) test in cwtl xlat push fs mov notb push lods iret pop push add jo inc sub loope fsubrp call outsl push jnp push inc jl (bad) xchg xchg sbb mov mov adc or pop xchg lods cs cmpl out iret neg mov call or push clc aad push push int3 movsl inc pop imul add in lods sarb inc cmp or test jge sub cli xor jle and sub mov push sub or xchg imull movsl in fbld adc dec icebp daa and mov ficomp enter imul les inc push xor lahf cmp adc loope in inc mov sbb (bad) popa xchg lds lret or push daa cltd out loope push mov mov movsl int insb xchg inc and xchg adc or movsl loopne dec icebp mov mov push cmc shrl xor sub fisttp add arpl sub push ja mov iret (bad) cmc inc jecxz dec and into mov inc loop and xor aad arpl stc mov sbb repnz adc dec add push test movsl sub test add push dec ss lahf (bad) loope pop aam pop cmc je sti adc jg and xchg pop and std nop test pop push xchg pop lods mov sbb jecxz mov mov pop inc cmp in ds popa pusha xchg add mov sub inc cmp or in fcoml adc jmp icebp sbb (bad) jb xchg notl sub mov push cmp mov ds cmpsl dec sub cmp repz xchg dec push jecxz jnp test jne push data16 fistpll popa int mov inc cmpsb std pop in data16 lahf stc out sbbb cmp jae ret sub push stos add pop adc sub leave cmp in xchg sbb scas jns adc popf icebp add iret dec mov jg cmp dec mov and sbb push fcomps jno lcall js (bad) jecxz hlt subb int3 jmp dec and ss int3 test xor lea adc lock sbb mov push xchg xchg mov or mov sub push jp js loop mov lods outsl aam push call fwait cmp data16 mov jp out rolb inc repz loop push mov aaa jnp xchg xchg jb add ss inc and cmp aas push in inc icebp psrld pop test mov fs (bad) cmp mov in cld cmpsb mov repz in push pop imul and fsubrp jecxz mov push inc jecxz insl ss lret fs jp pop lock int mov fildll cs fs push pop add scas xchg cmp push sbb sbb in rcr in mov arpl pusha or adc jle pop pop or (bad) int call mov pop pushl push dec mov and (bad) ja cmp loopne test and mov sub clc sub mov movsb insl jg,pn test das jg pop shrb cmpsb cmp push loopne xor pop push push inc bound jo and data16 mov cmp cltd orb mov fs jae cmp icebp (bad) jle ds push lods dec fmulp in ret (bad) addr16 ja push push into jnp push jno sub ret xchg scas ret out enter int3 ret pusha dec das mov inc enter mov or fldenv adc xor xchg fwait rcrb mov icebp sbb fs inc in imul pop fdivl and fdivrl push int ljmp ljmp xchg xchg inc xchg pop (bad) pop mov daa sar and jae mov inc icebp ret inc jno sub (bad) sbb icebp jle inc lods pop aad lahf sbb mov mov dec std mov xor mov jg (bad) fdivrl sbb lods xchg addr16 mov mov cwtl dec push (bad) inc mov pop (bad) js lock sahf inc pusha clc and scas stc adc leave pop mov dec jle and rclb or jbe and (bad) inc lods sahf add js fwait mov stos into or inc jecxz ret outsl in push ret decl aad push test mov aam push decl loope cmpsb cmp jp push sahf mov lahf movsb and into xor (bad) mov scas je rorl jle dec cld push push xor pop lret out inc ds insb sub mov aas mov mov icebp add and xor mov pop pop sub sub pop pop xchg pusha or pusha dec dec out outsl ss push mov pusha ljmp jnp mov mov mov shlb xlat xor or pop (bad) mov mov out insb ud2 dec test sarb sahf out sbb push aaa fdivp adc push out leave pop xor ficompl lods fs push loopne loopne (bad) xchg push xchg or sti fisttpl cmpsb (bad) jmp inc (bad) out out fisubr dec mov ret sub pop int3 je cs in and sub push mov lret aas jo in adc out jb add js cmpsb pop (bad) enter mov xchg shrb or mov les in (bad) sub mov dec mov push mov imul sub or or mov xchg repz mov mov jle pop insb pop addr16 std cmp ljmp repnz inc jns lock jmp jg daa mov mov addb adc enter sti push mov mov and ret jno sbb fmuls or add pop clc call inc push adc mov inc xchg pop mov pop sahf cmpsb out pop and sbb pop sub shlb pop fxch dec xchg or add fcmovnu (bad) mov cwtl add dec ja add mov leave push xchg cmp cmc sub fdivrl mov and aam add lds mov push test dec pop mov mov xor loope test ljmp std xor movsl aam mov fldcw imul mov push inc sbb scas mov pop add inc je out xchg push push xor mov (bad) loopne add into xor lods inc mov in leave cmp subl or mov push aas or subl sbb sub jg scas leave shrl pop in and jno mov xor je dec les loop dec jno sti stos cmp sti (bad) dec loopne mov ret push int pop inc or fnsave sarb cmp xor inc push xchg or dec xchg addr16 push enter ja jo pop xor lock sub mov fs jns pop insb mov jno add mov jae and fs (bad) xchg lods in stc or psllq pop jns jb mov gs inc mov es dec subl add xor loopne inc xchg fild lcall mov mov loope shrb sarl adc mov cmp in cli pop dec add std cmp jne leave adc jecxz adc xor dec push pop ss cmpsb pop lods adc bound pop or sahf sahf pop out js popa pop dec lea shlb lds push ljmp xor and ja inc fsubrs dec cs jmp sub mov sub jbe push rcrl scas sub mov mov push andb fstps or addr16 mov push pop adc bound dec in leave or push add pop add std dec out mov enter xchg cli push mov fisttp sbb lods sbb xchg push jno lret xchg rclb icebp outsb arpl or rorb lahf xchg jno sub or fldt ret mov or lds xchg stc outsb imul mov test or in ljmp aam lods incb lcall ret testl jle subl inc in cld cmp push jb dec mov jle or sbb fnsave push popf stos daa sub int3 das int3 into sbb lods pop loopne in nop lahf mov test jg cwtl sbb xor repz sti std fwait cs test mov jne xorb fdivrl daa and inc cs loop shrl jge jecxz fsts pop fiadd mulw imul mov push xlat jae xchg dec mov mov dec push enter mov xchg lret mov scas enter cmpsb in or dec cli mov imul scas fwait sti mov jb mov imul notl push call fwait mov rcr mov stos jge jns lahf xchg xchg mov rcl xchg (bad) (bad) icebp ss cmp cmp sub xor sahf fdivrl and fistl das dec outsb lret pop ret inc out rcll xchg sub sub fiadd push push mov subl dec les xor fs or mov loopne mov leave adc daa out xor mov cmp dec adc out mov jnp js or data16 stc cltd (bad) stc in rcrl int3 mov popf in jmp loop shlb xchg fmull pop mov mov test outsb dec sti add dec lods push cld aam ret lcall (bad) or dec scas leave outsl mov cwtl scas cmp cmp mov sbb fimull in inc orb nop jmp movsb test sbb mov mov add mov pop daa mov jecxz fwait pop jne fwait dec lds (bad) mov jecxz lds sub cmp iret push cmp gs fdivs les in jmp cmp sti sahf cmp (bad) mov std lahf cmp inc lahf ret jmp sub lock add imul pop loop dec jb les hlt sbb pop movsl pop push xchg cmp xchg (bad) or imul dec test jp mov (bad) lea imul xor push mov insb add pusha out adc test adcb fiadd mov stc pusha mov push pop lods push inc jmp mov aam cli jmp test rcr jne orb aad test into lods addr16 add xchg pop testl and test xchg pop sub out adc mov cmpsb mov subl sub adc sub xchg adc movsl movsl jb cmc adc mov out out push push mov mov cmpsl pop je add ds mov push mov pop stos mov cmp pushf xlat mov pusha (bad) (bad) cwtl pop xchg adc in outsl cld xor mov xor and sub fwait sahf sahf cli scas inc lds int3 mov or inc out scas or xor je ret dec loop cmc lahf add adc test cmp mov sub in push cmc xlat out enter pop jmp adc insb dec xor add pop fmuls rcrb mov shll (bad) or mov ja mov mov sub cmp push fwait inc add adc push shll or cld xchg jno nop xlat call pop mov in add inc test aas lret aaa sbb sub pop sbb std arpl jns or subl stc push test and ret mov add xchg stos leave imul mov test sub jnp push (bad) cs or xchg ret fnstenv ficompl ljmp aas push jg mov stos xor (bad) icebp xchg mov push repz push shll rcr scas ds jmp jmp jecxz icebp and lcall mov insb sub std adc ss (bad) into mov lcall xchg or sub mov sub scas push sub sub sbb dec cmpl fsubl or sub push and std adc lods insl sbb into add data16 jg xchg xor (bad) fbstp mov inc cmpl cmc test inc adc adc orl aad xchg repnz inc mov cmpsb shl fmuls clc stc or dec into fs sarb lret sub ret mov jb popa mov daa repz add or cmp adc push or jle insb mov xchg mov outsb mov lds mov cwtl jbe lock dec jo scas xor pop notb aaa push int3 sub cs cwtl nop mov clc jae aaa and sbb xchg or fdivrs cmpsb insl mov and cmpsl data16 xchg mov lock jecxz xchg into repnz sahf dec and lock lret mov into lcall cs cmp lcall mov out dec mov cld jge leave adc sbb sbb inc pushl out imul sarb test sbb imull cmp dec and push mov mov orb adc lahf cld std jle cmc mov sahf xor or cmpsb cltd sub movsl jns lods xchg inc pop mov fs orl mov test test and lods xchg jl das sbb mov inc jmp inc pop scas addl daa rorl mov push loopne dec sahf mov lock lcall shll (bad) bound lods test loope sar adc sub pop inc out inc ljmp inc stc mov adc and les mov dec fwait popa in int or pushf inc jge or fiaddl jge lods (bad) sub movsb add icebp cltd aam lock lods or aad lds outsl push push lods pop inc sub inc movb lahf xor jmp xlat mov mov wbinvd pop and (bad) lock mov xor mov inc rorb xchg roll jge stos dec jge inc xorb xor mov add bound cs daa mov test mov lahf (bad) (bad) hlt mov add mov and out inc sbb inc das xor outsb imull lret xchg daa loope idivb mov out dec daa jecxz out xchg xor pop dec cwtl xchg mov and es sub mov divb daa pop sub jp imul loope lods fnstenv inc ds in inc pop stc out mov test punpcklwd shrb es pop dec adc test xor sub add inc inc add call lea arpl loopne push int3 out decl movl aad rolb test mov icebp push lds clc jp push cld scas mov dec clc icebp lret sbb cmp xchg pop push lahf xchg dec jp pop (bad) sub (bad) shrb pop dec mov fcmovb ficom leave jmp jle aaa stos dec sbb cli jne stc or nop movsb mov mov sbb mov lds cmpsb (bad) sub jle mov mov pop xchg jmp xchg push dec fiaddl rorl icebp test add fwait cmp xchg mov sub icebp or lock (bad) mov lahf (bad) mov xor cmp cli inc je les (bad) push aad xlat popf adc sbb jp mov (bad) or in mov gs pop mov mov (bad) adc pop push es fucomip pop add push or faddl pop pop dec add movsl loop or mov (bad) fstl arpl (bad) jo push pop lret movsb ret push mov add fadd jo std js sub jl pop add outsl (bad) push push stos fs pop push or (bad) cmp mov jne jnp sbb add mov testl rol imul and pop (bad) (bad) testl inc es mov or mov int mov xchg (bad) jmpw lods dec xchg add insl stos (bad) mov add sbbb (bad) (bad) lock sbb or pmaddwd sbbb es and lahf jb repnz dec push aam dec aad stc xchg or push sarb int int inc (bad) ds xorl mov (bad) xchg pusha imul in repnz int jmp fs enter (bad) in out cmp xor jb adcl pop loope lds fsubp xor rclb scas mov test cmpsb xchg jge loop insb mov test (bad) jno outsb pusha std jl fadd in les movsbl imul or dec lock rol fldcw mov cltd pop aas xor js (bad) or sub std cmp dec cmp in cmpsl mov pop dec mov icebp (bad) mov lea testb leave jge test and mov xchg inc aad aad adc iret push mov cli lods mov ss push and pop pop jl movsb jbe out scas pop mov xchg test std xor in (bad) push jne xchg aaa mov sbb out pop cmp and movsl mov jmp pop dec mov mov pop xor mov cmp arpl and cmc mov add enter mov mov inc mov das mov mov popa sub inc daa inc fs stos mov push das mov cmp dec mov and (bad) out cmp jnp sbb icebp outsb push pop sbb mov inc add jl pop rorl pop data16 mov test faddp pop push and push (bad) xchg push imul repz fcmovne ds jb dec scas roll out xor aam add adc dec inc fildll push or out outsl adc mov xchg (bad) fucomp push ja jl pop adc cmp rcrb loopne icebp shrb or ss mov ja sbb mov push xor adc mov jge sbb sahf cli out lcall lea sbb cld cld sbb dec aad adc adc sbbl sar jl das pop pop shll adc adc imul fbstp lret cli add xor lcall orb or xchg icebp ficoml sub cmp insl or mov clc mov sbb add mov movb adc sub add jecxz insb xor bound pop pushf neg je mov cmp xchg push imul lcall fcomps xchg mov in sbb lea add mov sbb inc cwtl push decl push (bad) sbb loope xor out push int3 sbb clc stos (bad) loope lret mov inc mov jnp fwait movsl into lcall cs clc aaa pusha arpl pop fmull cmc cmp add mov sbb jno and mov dec daa mov add gs arpl test push dec xchg ljmp repz loop nop lahf lret fwait push add mov mov roll jb int3 add xchg clc cmp mov jae std std xchg pop or adc mov sbb or add mov pushf cmp cld jae je test scas pop adc dec inc fsubl xchg scas fcmovb into fcoms outsb (bad) cmp xlat jp,pn ficom int push xchg xchg sbb call xchg leave aad out adc repnz pop (bad) out fldcw dec dec fidivr adc repz (bad) jbe or (bad) cli mov sub or ret add sbb sbb sbb adc xor mov sbb xlat cs sti test xlat xchg xchg or add test (bad) adc cltd cmpsb imul push lret mov jmp or adc (bad) in andl pop ds mov ja xchg dec mov into ds fstpl loop mov xchg imul mov shrb rep shr lods jmp inc mov fnstenv out push loopne cmp roll inc lock ja push jle push stos addr16 (bad) xchg mov lods sete jmp mov pop es cltd icebp loope jns cmp sub scas cli mov (bad) pop sub cli push fstps test push (bad) ljmp pop (bad) clc jno xchg lods pushf xchg mov push lock sbb loopne sub repz loop xor jl ss pop jg push cli dec shrb pushf and mov stc add sub mov sahf add adc mov sub jne cmc (bad) pusha fdivs mov je sahf xchg pop ret inc mov xchg cwtl inc pop fs push enter lret jmp add mov jo roll loop outsb sub xor pop sub pop pop add (bad) cmp stos mov and mov fstl fiaddl ds pop pop push sub and mov fwait je (bad) (bad) push mov aam in push push dec add (bad) shrl imul (bad) roll bound fadd adc adc adc mov fisttpl mov mov fucomi dec dec out hlt push cs sbb arpl jge push add jns fs hlt lret push inc ja sbbb sub xchg call mov jp mov cmp jno xchg add rcrl dec mov xor pop fst dec sahf repz sbb xchg sbb add gs enter ss cmc (bad) xchg enter lock sub mov sbb or mov sbb int3 insb jne xorb jmp jge ret cmp aad mov test xchg scas sub push jae jns inc jge mov jmp push (bad) lea or movsl sub add sub sub aam or jg dec pop int3 mov (bad) (bad) mov loopne cs dec inc xchg dec out pop push rep fs dec pop push (bad) in sarb fsubrl fbstp pop cmp pop call push les cld fisttp jb sti stos add jecxz test repnz adc out stos sub out insl shr int jae or mov rorb inc inc pushf rorb loop push sbb push icebp dec fs jmp add incb iret (bad) and cmpb clc mov cltd arpl mov test daa xor call mov ljmp dec fisttpll std in stos ret inc test js adc int fimul (bad) stos push push mov mov hlt addb outsb mov sbb or out mov mov pop leave sub dec les scas jmp mov pop mov nop inc jl mov das fcompl jle clc fbld clc and aas or fs cld sti push inc jnp in push pop fcmove mov and mov sbb setge scas cmpsl aam outsl inc push mov testl enter dec aad lock mov jns jp std cld dec popf les lret add int3 outsl iret add lret adc push mov xor clc dec cmp sahf push test pop mov fsubrl cli xor int3 cmp mov mov jb inc ja inc (bad) xchg aas mov sbb cmp cmp test adc or sub mov dec and add mov dec out mov mov imul mov xor and ss dec (bad) scas in pop push icebp rep fimul xchg or xchg sbb divl pop (bad) mov out ror sbb fisttp jmp fadds cmp lret pop enter sbb pop fadds inc loop lea inc pop roll movsb inc (bad) rcl cmp pop xchg sbb (bad) xor loop sbb mov aam or es leave add incl sbb incl (bad) pop jecxz sahf mov pop out sbb mov dec inc das xor mov cmp xchg cwtl mov ljmp xchg aaa ficomp into rol mov push shll es out push aam aad das xchg jg (bad) outsb xrstor cmp lcall or stc dec adc insb pop lods mov (bad) test push shr outsl sbb insb xor mov ret fadd or mov sub movsb sbb sbb lock inc fisubrl push xchg popa sub jb jae mov cmp lahf adc mov (bad) or xlat ss rcll aad pushw repnz and sahf (bad) xor mov sbb rclb aam jmp push mov fstps pop lret push mov movsl add outsb mov repz imul addr16 jnp push pop mov nop imul enter aaa xchg ds leave out in lods hlt test in int jmp outsb hlt cmp or out fstps test gs mov inc xor cli sub xchg fwait pop int stc jmp jg rcll and arpl rcr bound jbe xchg rorl sbb in daa dec mov mov sbb rcll cmp or mov add jle dec lods and (bad) shr icebp bound les and lods je bound int in mov xchg jge jl jg fcompl fildll popa enter (bad) imul inc xchg stos mov mov dec sub adc sar jge mov inc jecxz inc jae fs test jb push sub push push mov lret push xor xor and xor cwtl insl pusha repnz mov push lcall mov cmp push sub mov cmp push jg push sahf dec loope (bad) imul inc add xchg dec gs mov daa add rol pop pop push add or push push jo push popf mov xchg in cmp jp dec push (bad) dec insb data16 leave cmp in inc rcrb stos (bad) fcmove xor push jecxz ljmp mov sub dec out jg and pop mov rorl lock pop (bad) movsl push push rcl fcom out xchg xor insb sbb adc idivb rol cs pop mov and mov dec loopne (bad) dec or mov int ret nop add mov sbb dec jmp into pop dec in les fiadd into cmpsl ds sbb (bad) outsb cli in (bad) lock add xor int add push ret cmpsl mov jns pop imul inc hlt call inc xchg or outsb xor jl fcomps shlb push test mov aad addr16 or lods mov xor xlat ds xchg push out cmp call add dec pop mov daa or mov dec adc mov sub pop int3 dec mov fxch sub (bad) (bad) and sbb cmp jbe pop mov mov sub and iret pushf pop xor ljmp sub and outsl outsb gs inc pop xor push dec cltd outsb xchg ljmp out fdivrs imul push xor sar test jnp mov in dec in gs out jl insl mov push clc push add (bad) in pop lcall pop mov cli iret dec (bad) movb mov mov scas imul aaa loopne idivl loopne outsb dec push mov test fnsave bound int sbb loop push cwtl mov in idivl cmp fwait sub mov sbb ftst mov or (bad) ds fbld mov or sarb enter jle inc sahf push add inc jp mov dec jmp inc add fsubrs add push cli ret xchg cli (bad) adc pop mov (bad) or mov es scas add mov xor arpl ss jl push inc fmul decb in decl dec xchg inc aaa jne xor mull mov iret dec mov or xor les push jge aam inc pop cltd mov mov mov arpl or js xor out ljmp (bad) pop mov into leave adc imul cmpsl cmpsb mov bound out lea les xor gs cli mov xchg push in sub gs out arpl pop outsl sbb pop daa mov inc (bad) aas jo xchg outsb mov and sub sahf ret test mov fsubl mov lcall mov imull lea enter inc inc (bad) (bad) test cltd mov jbe add scas pop push incl adc fstl jns test fidiv cmpsl dec lret jecxz in mov or pop loopne xchg decl lcall mov xchg mov cmpb jno arpl mov inc adc mov pop pop lods xchg mov adc ds daa xchg (bad) pop (bad) sub out testl mov cmp cld mov cmpsl in pop jbe (bad) std shr pusha aam les out cmp lret jbe mov or mov daa pop xor inc or xor cwtl sub enter or cmp and xchg fsubrl in aad sbb mov and adc mov ds fidivr scas xchg mov lea pop adc jg or add mov pop cmpsl jbe mov and movsl adc (bad) cwtl icebp (bad) shlb jb lea stos into rorb ror vcvtsd2si punpckhbw push outsb mov out cld dec push cmp repnz shrl mov test jne test add xor and or xchg mov (bad) mov jg mov jle (bad) mov or push sbb (bad) mov jg pop (bad) or push lods push sbb jbe mov add dec dec or or mov sub add push (bad) dec inc insl lret das call out (bad) shlb push rol fild mov adc mov cmp (bad) clc pop (bad) lret sbb xchg xchg lds mov mov sub xor xor jle inc aaa sub mov cmpb sbb jno sbb mov cmp aaa enter cmpsl dec adc mov insl sahf xor (bad) mov adc popa adc sub or adc adc int xlat and mov insl xchg pop sbb jns (bad) ss and in inc jge jmp mov pop pop cmp cmp cmp shlb push mov mov jg pusha int3 loop (bad) ljmp adc flds rcrb stc push mov (bad) ljmp (bad) xor cmp dec hlt push loopne loopne sub dec adc sub icebp xor xchg (bad) pop clc je loopne ret adc cmp inc clc mov sub add mov jne bnd stos jne dec add cli mov mov into cwtl pop fcoml or push repz (bad) stos push inc inc out mov jecxz push inc sub push addr16 jae push cmp inc cmpsl addr16 pop test imul or incl lock jae cltd cmovle push scas inc jg mov add pop push shl clc jns aad xchg imul loop sbb vzeroupper xchg sahf xchg or adc rolb out push mov adc cmp mull mov jns jge loope or sub clc daa idivl ds imul test mov mov pop in imul rcr mov mov mov mov aas aam push lea sahf sbbl cmpl bound mov sub in push shlb or int3 push lcall aam shl loop ret mov clc hlt jae inc sub es pop sar pop push fildll cmpsb sbb push lret int3 jge (bad) frstor or dec jne sbb testl xchg out (bad) into mov or jecxz ss fisubrl sti inc aaa pusha hlt lret jge mov or mov test or xor emms sub lods jae or out push mov out test and nop cltd inc ss insb mov rcl repz out sub push pop or jmp jecxz push mov push ret and sub sub f2xm1 (bad) je push pop jle rcl adc adc repz push ss (bad) push in out loop jg and xchg aad (bad) loopne pop mov addl jmp (bad) (bad) xchg dec mov repnz sysret (bad) or xor jae in movsb js sub mov xadd mov cmp ja mov adc sarl lods faddp mov add mov cmc ds mov std outsl incl and bound adc jle dec mov mov into in mov xor popf mov inc clc adc inc jnp push mov pop inc stc pop (bad) loope ret (bad) push and stc xchg sbb int3 adc fwait stos mov outsb cmp xlat adc sahf loope jnp jl lods dec shl jp clc sarl cld jnp (bad) insl push popf add pop daa jnp xchg loop pop jp push pop loope in jns pop dec outsb xchg add mov div mov jno std pop sub fwait mov cs int3 adc pop mov jecxz iret sub push iret addr16 pop and mov nop mov jp aam dec repnz insb les stc repz scas xchg mov popa sahf test pop insb mov sbb cmp std cs mov inc cltd iret adc ds add enter mov pushl dec dec lods add push dec push fcmove pusha insb insb and cmp add rcrb pop mov pop popf mov movsb mov xor pop fdivs (bad) lcall pop pop mov (bad) cmpsl movb in cmp push fadds aad idivl mov mov aas pop jle shrb rcr test xchg push lock dec add and sti and add mov push mov adc movsl pop sub mov fcomip (bad) xor pusha jne pop xor cld pop lods xchg sahf mov mov dec push pop cli or adc sarb inc addr16 pop lock mov les inc jecxz mov (bad) fidivrl mov icebp pop mov lret call fwait aaa fwait push xchg lahf dec push dec push aad mov fisubr lods ret mov mov lds sbb (bad) mov xchg (bad) in mov mov clc in adc inc sub mov pop cmp (bad) call pop jne adc inc cmp xchg pop fcmovnb lods inc fnstcw jbe pop sub imul inc ja cmc push mov push into daa fistp into adc int out rolb int3 sbbl sub add std lds test cld (bad) xlat xchg or mov pop jb cli lock adc jae lret leave dec sub jmp push jmp inc (bad) faddl inc rcrb mov push popf pop mulb push push into mov int dec (bad) lea cs jbe insl addb (bad) pop cmp and and pop arpl dec xorl push paddq sub or mov add jl xorl rol int aam or (bad) iret cmp ficomp add insl dec push sub fidivl and lahf lcall and js ja movsb push xchg sub mov fucomip cld cltd bound adc push mov mulb nop loop data16 mov mov or sti jbe sub cmp pushf dec stos lods add ret mov mov lcall and outsb jle ljmp iret sub call adc or addr16 notb sub ret sub stos fcoms shr push push mov xchg and lret (bad) daa mov ss sub fldt inc push mov aas cmc rclb clc fstl into push ds fstps jg lahf or sbb cmpsb jp leave mov mov mov notb nop insb enter mov mov jle jo lds inc sbb dec int cltd push outsl out mov and lret in jnp les xchg cmp cmp mov cmp sub popf sub inc add imul outsb inc ljmp mov add in daa mov repz xchg sbb and push jge cmp clc mov inc inc fadd push xchg add adc push in scas adc enter sub testl pop push jae inc repz scas mov popa (bad) push ljmp out fisub mov repnz pop (bad) aaa daa or inc push mov cmpsb or cmp test pop jp pop dec jno mov push xchg sub int3 jo xchg sub adc xchg stc in jecxz lret sub out ret adc and jnp out jno hlt imul notl mov in pop enter lret lds pop xchg mov mov add ja ja add sarb sbb add dec shl popf (bad) aaa or push xchg inc fnstcw mov test push movsb push push xlat sub jno icebp into fidiv fs lea mov insb scas sub ljmp daa imul inc jbe jmp adc push (bad) data16 mov dec jle dec data16 icebp xor inc sbb (bad) out mov cmp mov iret mov imul pop xchg xchg sub (bad) adc inc cltd mov xchg and jge je xchg jnp inc mov in xchg and push push cmpl scas clc lods gs mov pop je xor scas mov mov mov sarl imul lea jg dec add mov fldl2e aaa das dec test mov lds inc inc loope mov leave inc cmp dec jg in adc (bad) loope mov cmp stos int3 and rcll mov imul jle lret jns add cli aaa inc lret std dec gs fwait (bad) and mov or cmpl mov dec fcmovb pushf fbstp test cli std lods clc mov mov mov mov ds sbb mov jp xchg xchg xlat mov sub pushf add xor aam pushf jnp pop shr adc push pop stos sub push roll push lahf mov or add or sbb xchg jbe fdivrl dec cmp mov mov out fs add inc cmp push in aad fucomi popa push cmp jae mov pop fcompl inc aam inc add mov adc lret push lahf or rorb cli and leave fildll mov push aad inc sbb sbb or xchg lds mov lret cld or pusha sub jecxz hlt push xchg adc jl push outsb xchg mov or adc adc or aam xchg in dec dec cwtl add push inc mov jb pushf sub imul pop stos mov sarb sub lret test pushf enter das jbe jno xor bound test fist xchg inc loop addl das push sub clc lock mov shl sub cmpsl jo pushw push fcmovnbe cmp mov in dec push xor repz cwtl jo out call sbb lret nop and mov js cli sbb loop dec movsl fldcw test test mov add mov (bad) mov ja lahf cmpsl (bad) aaa pop cmp int3 cmpsl mov pop xor popa sub xor xor out mov stc mov jbe inc std sbb data16 xlat out push and push lret pop (bad) fistpll mov cmp lcall or cmp sarl es mov xor inc and je out fsubp push ds inc (bad) cmp xor cli outsb fnstcw je aam in push fnstsw fs das or stos sbb (bad) jb pop inc mov sub cmp outsb xchg js xlat stos shlb sbb aas xor dec ret je xor jno xor sub iret pop xchg cli fwait (bad) mov aas adc ljmp push (bad) dec mov add xor aam cli (bad) rclb test negl dec push scas roll add xlat (bad) mov mov add sbb xchg mov mov dec mov or pop ficompl push (bad) jo int popl leave add sbb adc inc ds adc dec or inc notl rcrl add insl (bad) jb sub adc xor fdivs adc xlat push lahf mov push (bad) and out mov call pop dec loope loopne sbb xchg sub pop das mov aam insb fcompl shll addr16 mov call jmp mov (bad) stc in cmp orl xor or pop push outsl rcll jbe arpl sti lock aaa or sub mov inc push push adc pusha lret adc and mov (bad) fsubr mov inc clc and xlat jb fdivr into sbb aas and dec sbb ja sub adc jbe add jns adc pop mov cmp mov cmp push xor insb pop fmull insb mov and cltd jae (bad) js and fdivs mov pop test jge ljmp dec cmpsb pop clc push pop lods inc into fucomi pop xchg xchg ljmp push loope lock lea insl jl outsl push sub addr16 stos and cld or rcrl push cmp xor lods xchg test xchg repnz scas mov orl loope ja push stos inc lea mov jg loope movsl jmp sub pop push sbb cmpsb test and mov sub fidivl scas nop cld cld sti movsb les xor inc mov dec js adc jb (bad) outsb and bound (bad) dec and ds fimul mov push stos lods xchg lods (bad) in out (bad) cld fstpl xlat cwtl add mov stos lods xchg cmp fimull inc (bad) testb sub cmp sahf sti ffreep sub push inc push insb les ds fiaddl sbb pop jns inc push aad jge mov or mov xlat in mov push sbb hlt (bad) mov das vpsrlw add inc les aad ds push mov fdivr rorl mov sbb push ss push inc jge dec rorb nop add xchg push cli mov mov call xorl jbe stos jnp inc inc or pop add daa adc les sbb or push clc mov enter pop rorl test push rcrb cmp stos dec outsl push pushf rcrl xchg pushf aam dec jo imul mov jl mov repnz jle in push arpl pop sub mov in jge mov aas out cwtl jge adc xchg jo xor aaa (bad) movsb into pop (bad) ficomp inc lret mov aam ret fadds jp jle sbbl add sbb xor mov inc aas mov mov inc cmp fnstsw pop sti inc (bad) cltd fidiv (bad) pop pop jp add push in lock xchg add loop mov mov or mov data16 leave sbbl aad lea xor pop dec loopne or dec dec xor lods add mov out jmp push xchg inc push rcl in jl adc mov adc out aas inc sub sub lret test fadds (bad) mov stc sbb rorl sub and or (bad) jmp jae adc sbb or out loop fmul out out push or jg push xor in xor mov (bad) hlt int xor cmp leave mov cmp in mov mov lret cmp mov sub test push add dec cmpl nop aas ljmp pop sarl sahf adc pop dec pop fsubp inc adc sub dec jb lcall xchg fcom leave push fsts loop enter ret pop out sbb mov pop out ds iret incl out push cwtl mov sbb ss inc ret (bad) cmc add enter outsb mov or (bad) je jbe sub or iret ret mov xor jg add (bad) jg and das in sarl jns jbe scas add dec das or or mov neg movsb push pop inc fwait aaa jg loope dec shlb (bad) repnz dec scas or mov mov mov inc mov in lock in add dec and movsl xchg mov pop (bad) fisttpl sub cmp (bad) push cmp cmp sub rolb mov das pusha fadd je pop inc push inc mov and (bad) add sub jbe xor or loop sti enter sub xor das push jb pop xchg xchg cmp and pop push (bad) adc outsb pop dec gs sbb cmp adc stc fwait jno push mov and pop adc stos cmp fsts mov and mov lahf lahf enter or ret loop and fldcw test xchg loope cmp push push icebp push or mov cmpl stc sub cmp cwtl aad pop xor jmp add enter cltd adc add mov jl fiaddl adc mov int stos aas mov and pop fbstp jae in mov aad xor xchg cld push lods out cld push lods jmp repnz rorb push push mov inc push fldt aas push stos fisubr (bad) xor (bad) repnz inc add sub dec xor dec mov repnz call sarb add jg cs repnz xchg cmp iret leave add ficompl mulb pop sbb dec popa pop xlat jns hlt test fidivrl ret mov in arpl adc xlat aaa rorb pop inc lea (bad) mov fbstp test cmp or dec adc xor imul push pop fnstsw add (bad) xor not imul arpl into ret add cmp mov std lcall lea inc lods mov insb jne or mov (bad) ret fmulp sub jl jp cmp adcl sbb into lock lret int3 dec sub mov cmpsl inc scas int3 repnz xor cmp and movlps mov push test dec aas das xor mov enter xchg imul and cwtl arpl dec lret and mov and sbb in cmp cmp pop popf (bad) mov pop loop mov mov mov xchg add into push out jle pop jp dec cmp (bad) lods jecxz inc pop push (bad) aas xor or ja mov jb or fisttp adc mov mov les dec jmp mov insb and dec adc in lds push sub dec fnstsw jb inc jmp cs push push pop pop mov jbe cli xor fimul dec cmp mov inc mov mov adc pop (bad) lret xchg jl add mov mov aam (bad) rorb repnz ja mov mov pextrw add cmp (bad) xchg aam out sbb pop dec cmp sub das push dec jg sub ds dec lahf jno repnz (bad) (bad) jb dec js and ds fidivrl std fcomps scas mov movl jle xchg cltd inc daa jo push sbb dec mov push push ljmp iret add add mov das test jnp sbb ror les sbb pusha dec sub xchg ljmp ds (bad) mov lret xchg cmp lcall movsb dec inc xor push mov lods inc int3 xor jecxz push sub or js cmpsl push hlt repz adc out sbb daa pop sub call repnz mov rclb loop inc xchg push iret xchg aas sti cli or (bad) adc xor aad xchg push fsubrl ret and shrl add inc js xchg rclb scas add pop inc rolb jne mov out xchg jmp sub adc jo fdivl push imul inc pop fdivp fcoml pop enter (bad) ss xchg cmp xor xor xchg jns and les (bad) mov lret lahf clc imul fidivr mov add cmp mov dec push clc mov dec sub push addl (bad) sbb rcrb push fimul dec outsl jmp sbb loope push sar sub enter fcoms fnop imul addr16 push mov sub int inc rcl (bad) xchg sbb pop dec xor jge rcrb adcl inc xchg pop (bad) sbb cmpsl or in push call fstps xchg push sahf mov pop fsubs int3 lods jb sub sbb std (bad) jp inc pusha test arpl dec scas lock mov push add call hlt xor imul insb rolb adc int push std test push xor and (bad) data16 dec cmc sub inc fiadd (bad) div mov xchg outsl dec mov test push or mov jo add arpl ret es popl movsb lret (bad) stos call jae aad jnp dec repnz add mov xchg add pop cmp cmp mov dec sub ret push cmp (bad) aas mov mov sbb loop jns jp sbb add scas inc mov cwtl (bad) loop adc pusha lcall js cmp cmp cltd fwait inc cld scas jg mov fdivrs or fwait mov notb arpl ret fldenv mov push push mov sbb ret ret mov xchg push imul jnp mov in (bad) into mov xchg sarl mov and xchg xchg add push icebp xchg push pop aas mov mov pop mov add add sbb cmp in es je out mov mov int cmp test stos mov ret xchg pop or enter jp push pop pop sbb pop scas incl stos pusha addl push lret int daa mov testl int3 (bad) mov push add icebp stos dec push pop xchg lods idivb lods arpl es cmp xor mov pop mov xlat and subl dec mov xor jae imul sbb xor add or cwtl and inc mov ja cmp add jne addl das dec nop mov push cld push out int3 fisttpll mov cmc pushf and je jg or lock pop inc pop pop gs pop jno xor jmp add mov inc out mov rcr add sysexit pop push (bad) in dec sti sarb push das mov mov decb in mov adcl pop ret and (bad) add out repz jbe jmp jns icebp xor jno xchg pop xchg dec and decl pushf mov popa movsl xchg cmp adc jge jl daa jne cmp ret adc imul movb dec loop sahf test add arpl sti mov xor or adc and loopne (bad) fst jge add hlt test sahf inc jo out push mov rcrl jmp imul and xchg mov jbe dec lret testl mov sub and push stc hlt dec out (bad) lods ja out outsl jb fwait cwtl shrb cmp cld ljmp rcll or xchg pusha adc add push mov in xor js cmp in sub es add or dec mov cltd call or adc mov mov dec incl mov test add (bad) pusha xchg pop or jbe xchg in xchg fldl stc jmp pushf mov scas inc mov jge (bad) adc cmp stos outsb xchg and sti (bad) jne sub adc lds bound imul mov mov xor push test adc dec scas cmpsb sahf data16 pop rclb sti xor rcll push iret xor movsb and inc sub stos call mov test addr16 repz ja pop mov and fadds jae,pt mov rol mov mov sti subb ror xchg and rcrb push or cwtl sub pusha leave outsb mov shrb sar cltd iret mov jne cmpsl xchg ret xchg ja push jbe push addb and push inc fistpll out cmp cld jl int mov adc aaa pop rcrl frstor shrb lahf or mov lahf iret cld xchg jo cli cmpsl ljmp cmpsl sahf rcrb loope testl js jne clc push jae adc fdivl adc lahf and mov adc jnp test out jecxz dec adc push mov xchg mov sub push mov mov mov mov add and push xor xor out add mov jb and mov jae sub imul mov mov add mov mov xor enter jnp lds push ffree jle je loop fsub fidivrl rcrb and movsb (bad) in push loope jmp lret aas in leave mov stos xor mov mov cmp mov jno rcrl pop and push dec rolb fwait cmp lea repz dec stos pop ljmp aam and xor das xlat maxps cmpsb pop push leave cli and call pop cmp and loope ds sub bnd clc and push jp or and rorb pop sub scas ds orl aaa stos add mov hlt add adc cli sub orl xchg repnz jmp sub stos inc int3 mov mov test in pop jno pop (bad) mov cmp loope movsl pushl cmpsb in sbb (bad) jb pop mov pop leave out jne mov adc mov pop call jnp aaa jl decb rolb mov in xchg mov mov ja test pop andl xchg inc sub movsw jbe ss dec imul push jo xchg stc xor divb mov cmp ret mov dec jne jecxz jg or pushf aam sti fcmove mov sub xor adc jp adc lret daa sbb imull jp cwtl cmp cwtl adc xchg jge std mov scas and js sti in pop xlat inc scas mov lret fwait les jb mov sub xor mov movsb fs hlt xchg je test (bad) icebp lcall test pushf mov cmp pop adc push mov cs je jg xchg (bad) pop jecxz jge data16 insl shrl (bad) jo lcall test sbb aaa mov jmp movsl stos test jg pop pop mov insl loop push das add add mov xchg pop mov lock loope (bad) in in jo add stos stos fwait pusha scas cmp cmp gs insl and stos xor aaa popa push fwait aas imul nop cmpl int3 int3 push sbbl fucomip mov sarb test adcl adcl int3 ja out add add outsb cmp jecxz daa out jb mov rol in test push add (bad) test cmp xor sbbl sub pop (bad) cld push mov mov lods rclb sub icebp es imul xor adc addr16 sub xchg inc sub stos es les lock (bad) push lods add and xchg clc test mov ljmp arpl inc dec adc jp lods sub aam aad pop cmpsl in iret sbb clc in in mov or repnz arpl jle adc adc ss inc xor lods (bad) mov mov cmovle rcll mov mov stc call test repz and ja pop sub sub xchg in or fwait pop mov movsb out icebp in fidivl pop add loope add mov cmp (bad) mov mov push orb cmp mov aad outsb or lret pop or test out shrb dec and lods cmp mov (bad) ds pop repnz cs ss leave lcall shrb stos xchg stos imul (bad) sbb jecxz xchg (bad) std roll rcrb les fadd (bad) push mov xor (bad) outsl (bad) fs mov add enter fidiv ss aaa pop loope fsubl (bad) push aam popa iret sbb pushf pusha mov and mov repnz ja icebp xor scas dec sub xor adc or iret adc rclb out xchg bound (bad) loope xchg aad and mov mov out mov popa mov jp and outsl inc in mov dec in incb push mov outsb cmpsb sbb hlt jns push aam and xchg test mov jl loop add xchg inc int mov pop neg jg cmp cmp inc imul inc push fistl int pop cmp std lods rclb mov dec or pop mov inc ja jo lret lea xchg imul adcl lea lock push mov cmp popa mulb pop adc xlat xor test lea vrsqrtss cld jbe mov lret lock push xchg shlb xchg js arpl mov mov sub mov movsb push pushf add int mov ret dec outsl xchg (bad) jg push (bad) sbb les push into push mov stos jb repnz cwtl dec add bnd jg bound movsb mov push xor repnz mov inc gs lods sub mov gs mov pop push repnz hlt mov mov pop pop mov xlat jmp movsb fdivr lods mov pop sbb and mov push idivb and adc lods xchg xchg repz mov insl addr16 stos dec push rcll je mov sbb sbb in (bad) and movsl (bad) xor cmpsl sti push daa sbb outsl and (bad) aam sub scas insl outsb imul jp loop stos sub or jecxz iret (bad) pop xchg outsl fcoml jmp cltd xlat and sub dec loope fwait inc loopne popa jae iret cld push xor or xchg out mov je repz pop pusha (bad) ja adcl mov xor pop and and es add push mov mov adc inc mov (bad) (bad) jnp repnz aam add dec mov les sub jecxz imul dec pop movsb inc mov xlat adc or lock mov int jnp (bad) xchg ds pop pushf push adc and pop mov (bad) mov clc fistpll jbe dec cmc cmpsb insl jns stc mov sub jmp or (bad) cmp pusha cmp mov data16 fldenv or arpl scas imul sub in push cmpsl lea sbb push sbb int3 jnp ss inc (bad) mov add stos add movsb xor ds or stc std sbb mov sub (bad) imul mov aad mov mov push sub addr16 mov pop (bad) cmc pop and jecxz dec pop bound dec push jbe das pop cwtl xor jle pop jno jmp fisttp cmp leave sub mov xchg mov aam push std sub xchg adc mov shlb jp cmp imul mov lds aam (bad) fstl popa into sub cmp pop mov loope jb jl data16 or sub adc cli scas sub addr16 jne repnz push call icebp pop leave mov imul pop lods mov aaa add mov jmp insl js cmpl mov mov jge (bad) call in adcl adc shrl ret loop aas rdpmc sahf mov leave imul frstor das jle iret pop cmp (bad) or xchg jle in fildll add ret sbb mov mov imul and setp mov mov pusha in xor pop adc cmpl pop mov (bad) in aad leave add enter loopne xchg lods xchg in lret test xor aam mov xor into cmp in dec mov dec insl xor mov push cmc inc jbe jb or cmc (bad) hlt cmp inc sarb fcoms rol mov icebp mov push fist je (bad) cwtl cmp jo test jl inc xchg fstpl cli xchg add leave cmp xor (bad) jle int (bad) sbb imul sbb dec jae sbb cltd and fdivl (bad) mov mov faddp or cmp cwtl cmp fistpll push repz sahf bound and int test (bad) mov adc xchg movsl dec dec sti orl into dec fiaddl jbe mov loop scas mov ret dec icebp mov xorb pop xchg scas in and mov (bad) mov and jne mov or or sbb sub pop add or inc inc fs or lret cmp mov (bad) out out rdtsc fildl fisttpl sbbl inc andl lods fstps and inc mov pop inc nop add xchg push sub in adc (bad) jno or add xchg sub push sub rclb mov sub and mov sub jbe cmp lods cmp mov imull cli (bad) jl adc mov scas pop data16 (bad) mov mov mov cli repz push fldenv repnz xlat std rorb mov jae jno jecxz pop inc fwait aad sub xchg ret sub adc sbb cmpsb and adc scas xor xchg icebp mov outsb mov or (bad) das call jge out jmp mov push in icebp mull lcall sbb adc cmp xor jg push jl dec push (bad) aas cli (bad) jmp aam es inc cli shr xchg sbb mov hlt lahf jle pop lods push xor sub xchg pop decb sub mov scas repnz push enter fdivrl dec les test pop push push mov cwtl lock std bound pop (bad) xor sub out out mov xchg xor popa es cs imulb lods incb sub cmp xchg jmp aas in jbe pop inc jmp push loopne inc inc fcomp jnp cmpsb push mov repnz dec dec cld fwait mov dec add cmp int3 xchg in mov push jle pop cmpl pop jg bound and in cmpsb or pop ret inc cmpsl out dec sbb adc movb leave adc xchg mov ss xor cmp jo dec ljmp movsb xlat aad xor push insb call pop dec push and int3 in pop mov pushf mov dec out mov cmp xor rorl pop jge sbb push adc lods out rcl mov repz sti mov mov sbb repnz mov mov adc xor js rorl xor loop fwait dec cmp insl (bad) xor push dec pop mov sbb mov divb cld (bad) mov push test jg test in test mov xlat push arpl inc bound xchg fbld pop mov dec sbb dec rcrb sub or pop add adcl mov adcl mov rcrl cmp mov xor jge lods push fnstenv inc lea push cmpsl xor add add orl ss icebp mov addr16 rcrb cmp out mov sbb jecxz nop nop fstl lods outsl push loope pop ja imul shrl cmp leave ret out inc cmpsl jp jno out cmpl negb mov aam xor das sahf out mov (bad) sbb jnp add shr add iret push (bad) jg test or ds xor adc pop adc scas rclb sarb lock aas jb in inc lods cmp in cmpsb jo jb push cwtl es inc fwait inc movsl mov (bad) fildl push in (bad) jecxz aad or leave and aas pop loopne mov cwtl cmp mov push sti es pop insb inc pop xor add test (bad) icebp or xchg aad outsb mov unpckhps mov pop popa jns xor sub js mov push push sbb cmp or push clc mov or mov mov adc (bad) xor in jnp in push test or es pop inc adc ljmp xor push lcall (bad) hlt shlb sbb push ret cmpsb lret mov lds ficompl mov pushf mov fmuls loopne jbe or mov lret inc adc sbb sbb fucom das je jp push fnsave jge stos xchg mov cmp sub or das ror lods xor (bad) push add mov (bad) data16 or dec add jge push fwait xchg js in mov les cwtl insb add imul (bad) add repnz in cmpsb incl call mov adc aad adc xchg mov lods push cs or repz (bad) (bad) fld mov scas mov adc jno mov sbb bound inc adc test dec mov fildl lods test pusha out pmuludq jp push sub push out std bound sub jmp add pop mov and outsl idivl movsb aaa rcrl fmuls xchg xchg pop dec adcl rclb sbb (bad) aaa cmpl popl out loop push cmpsb pushf inc fisttp fs push les in xor jecxz stos pop pop dec sub add loop mov leave insl aad mov daa adc sub or add ljmp or inc lock std fs add xchg pop dec push scas mov cs sbb mov mov pop and jns hlt add repnz mov jmp hlt sub adc dec out es hlt dec insl subl pop rcl xor insb es fstpl imul jne pop das push pop dec hlt mov xchg inc pop (bad) cmp push inc ret mov xor add fs ffreep in dec scas adc cmp fdivrl cmpsb in mov sub lcall pusha mov test and or mov iret or push xchg or test out xchg cmp sbb leave je repz (bad) lret int xchg mov pushl pop roll cmp mov fs xor test divb pop mov mov lods mul push adc test jl add xor dec test fdivs xchg cwtl (bad) fistl arpl mov pop pop sub inc push lret push int3 cmp cmpsb push into inc sbb sbb mov (bad) lea jno aaa mov add xchg inc (bad) mov rclb repnz push pop jb leave lds fwait dec push and push sub std lock out pop fisubr outsl (bad) or clc adc fdiv aaa mov (bad) in xor clc jo stos mov jb out loope jg and dec sarb push test arpl mov jge mov jl int3 leave adc lods fwait xor mov dec sbb and mov push inc mov (bad) ss xchg rcll sub lds xchg mov das push lds inc add sub and ret and push sbb or jge xlat js or pusha push inc sub push (bad) enter fcmovnu push cli jbe push lret xor add dec xchg and xchg jnp and out in jno or iret dec iret dec mov mov mov loopne,pn popa mov sar cld xchg (bad) mov stc fs jnp push sar xor movsl inc adcb gs xor cltd adc cmp mov xorb sub dec fdivrl fisubrl jmp icebp cmc dec inc mov lock (bad) fidiv sbb and adc jae cwtl add lret das xchg sub inc fmul add out stos es inc jmp add inc and adc add adc push in cmpsb insb mov or aaa fstp cmp aas push pop add mov add mov mov or xchg jns popf leave dec mov mov pop lret inc cmp nop clc mov fimul mov dec clc mov cmp popf and mov adc adc sub mov mov xor jae,pt (bad) icebp dec ret mov mov dec stos xchg fnstsw push loop les pop sub sahf popa pop sub adc fs (bad) adc or shll mov int test aas or push fstl mov (bad) mov inc cltd aad pop aam stos xchg nop mov (bad) pop addl addl jmp sub add fwait push mov push jmp fs cmc sbb cmp push mov mov pop test sbbl fidivrl or pusha dec aaa in gs mov xor adc enter jb push in pop ja divb sub lock push loopne ficom call lods in lds scas insl aad add xchg gs (bad) outsb iret mov add sahf imul xor stc cmpsl in imul jg xchg popa test fwait (bad) leave mov inc add add enter or sbbb btc inc mov xchg imul mov pop add adc mov mov mov les adc rcrb sub faddl out imul xchg xor loop mov and (bad) insb js ljmp loopne dec in push jae push mov loopne or pushf sub inc fbstp add cli mov dec jmp fdivrl inc inc out push xchg jmp iret (bad) je mov add int inc fidiv push and mov ret mov xchg movsl push mov fcompl jg sbb lahf es ret mov (bad) (bad) jp in add xchg (bad) mov mov jle mov (bad) sbb and imul int pop cmp sub sub int3 or insl aas ja fs test fstpt push (bad) pop loope ja popl push xchg dec fwait enter mov add dec push rcll daa (bad) push fnstenv out addr16 adc aaa insl xor jb or mov push pop shrb pop mov enter pop mov adc mov lods (bad) adc cmpsb xlat movsl mov mov or addr16 sub push sbb dec in in test out xorl adc (bad) ds loope adc mov xchg inc popa imul pop mov xchg ss cld sahf sbb in pop xchg push add fcoml adcl outsl push and pop mov cmpsl jmp fisttp mov prefetchw dec push inc dec cmp mov mov in sub lods xchg (bad) lcall push cwtl les sbbl xor and outsl imul mul loopne xchg (bad) xor fcmovnbe fwait clc (bad) into sti iret fsts cmp cmc fwait or setp mov push stc jecxz pop mov in test mov mov xor mov pop aam sub (bad) ja cld lock and rcrb cmp fcomip mov adc pop cmp dec add stos mov pushf sub adc pusha or repz push push inc mov lods leave cmp call or outsl xchg std test push or pop jg clc push ss jg sbb mov sub test out addr16 jle mov pmulhw (bad) xchg repnz icebp pushf je fs iret xor push cmpsl cmp es xchg xchg cmp test sbb add pop and mov mov sub push add lds dec insl adcl sbb mov pop orl repz adc xchg std ljmp test test or cmpsb or cmp imul cmc mov cmp test push sbb dec jo xchg (bad) (bad) mov mov (bad) int3 stos fidivl rcr jbe add out das cltd dec push cs (bad) loop add insl fnstcw addr16 adc popf jns sub call bound in and pop das (bad) jo,pn fstpt mov inc ds and jbe or mov pop adc (bad) or pop fcmovb rclb mov out xchg inc rolb sahf adc mov popa test pop push or test fsubr insl in lret negb stos out ret inc pop mov (bad) pop or adc mov xchg rorb or sbb mov push add cld cmc outsb jl xchg mov cmp repnz mov add jp sti ret pop inc call cld repnz pop cltd mov cmp xchg xchg call jne call xor pop xchg iret dec xor xchg clc cs ljmp mov pop ljmp push xchg cmpsl xchg out out sbb adc mov push and dec mov push dec mov sbb mov adc scas call xchg pop aam sub js push rcr ret cs aad sub mov push jp dec cmp fs out loop xlat push pop xchg inc hlt out cwtl imul mov mov mov jp add pop cs push or daa push inc dec test loopne push icebp (bad) dec mov and sarb mov movsl psubsb jmp repz cmp cmp lea or movsl xlat and sbb xchg push or test adc and stc cwtl pop loop sbb rcr inc jg (bad) insl and cmp mov push add jnp cmc mov mov shrl jmp push xor xor mov mov sbb frstor push or push mov mov movsb cmpsb jge adc and inc lods inc pushf lret fistp mov mov rolb push movb popa add pop cwtl or pop sub push jl sub xlat sub jp xlat (bad) gs xor insl push movsl cli xor xor icebp lock stc (bad) fyl2xp1 and (bad) mov xchg or sti fstl jno (bad) push jl dec imul push rcll aaa sti sbb sbb xor inc stos fmuls pcmpgtb xchg push pop sub out inc out repz push js mov xor fmull cmp not in and xor jecxz rorb jmp int mov xchg jg xchg fldenv jl mov (bad) sub add and ret and int3 fisub rclb pushf orl push addr16 dec jmp jl cmp or loopne jo movzbl shr mov sub cmpsl lret ret test lret (bad) data16 (bad) xchg adc cmp xor roll rcrb das lahf sbb sub adc outsl mov or mov popf jno dec sub pop icebp stc cld out mov jne mov enter pop rcll call mov notb mov imul (bad) push xchg push (bad) loopne aam push fdivl jl mov pop push fidivrl mov test cwtl mov out inc sub scas mov jp and iret mov sbb sub lret loopne test cmpb repnz inc cmpsb mov aam out pop push (bad) fcomip add (bad) (bad) jmp inc orb lock data16 enter inc sbb inc mov jns cmp or mov test jmp pop pop in jnp idivb mov int3 divb mov outsl idivb (bad) dec push call pop xchg mov mov cmp (bad) adc pop sub sbb imul out fs into add lock xchg loopne cmp aad (bad) mov subb in shrb xchg cmp incb js push mov mov push dec jnp cld ret jp icebp fs and pushf stos movsb sti sbbl iret repnz cmp push pop mov fwait mov xor rorb ret pushf sarb mov sub (bad) cmp imul cmp cmp loope test cwtl mov repnz loop and call insl (bad) pop ljmp push xchg dec mov (bad) mov bound jbe fwait cltd mov add cmp test imul dec fiaddl lds pop xchg sbb cmpsl cwtl lods pop and imul std inc jmp (bad) mov pop cmp adc or or xor cltd add sub daa jl pop movb jmp adc adc gs scas pop mov sti jle dec mov push cwtl xchg stos subb insl inc fistpl (bad) xlat jne adc lods push and mov cmp push jns cmp or and xchg sub aas sub insb mov jns iret sub jb les or inc clc dec adc dec push aaa popf xlat mov push imul and lcall mov add xchg jnp mov fcmovb repnz pop popf pop lods and in popl sarw jle loope push sub pop pop pusha (bad) lds std clc repnz sar jae callw jbe push rcr xchg inc in dec jge push (bad) dec popa iret adc mov les push fcompl pop stos stos loopne mov push sub notb call sub push pop in adc es or int movsl aam movsb push lods add sbb sbb test stos mov rcrl out xlat lcall mov inc sarb push mov cmp notl push iret push fsts stc or sub std (bad) gs mov push lahf jne sarl xor push mov cmp es inc repz fs loop das or inc es inc sbb cmp dec mov ds movsb ja mov pop xor rorl dec dec sbb popf inc outsb pop pop or sub or jbe dec sahf (bad) xchg mov mov add sub rcrl popa cld sbb cltd test aaa out adc mov sbb and xchg cmp aas cmpsl add xchg xchg xchg sbb jno fildl shr aaa out and lods scas repnz in cmp pop or push rorl int sub and aad into xor xorl xor sbb push (bad) int mov insb cmpsl and insl popa sub push mov nop add mov jmp aad add mov or and sub inc lret scas push xchg rclb xchg (bad) in mov xchg add jne mov xchg pop sbb jg jl mov cli inc push adc daa test lret rcll pop cmpsb adcb ljmp movsl sbb jns and adcb and or mov xchg xor lods jle pop outsb xor in mov sbb jne mov push push adc shrb mov jnp aad lock push inc inc or jg jl sub ret jmp outsl iret (bad) adc dec xchg sahf incb add ret sbb xor stc divl dec and xorl loopne test pop and xor (bad) out mov incl loopne cmpsb leave hlt fistpll jb mov dec out (bad) pushf dec xchg fdivr dec xor mov fsubl pop repz pop and mov push jns cwtl pop movsl push scas shlb loope loope push cmp fisttpll or xchg jb cmc jbe xchg pop push mov mov jmp shl or lods fisttpll (bad) lahf cmp test jno cmp inc inc jecxz iret outsb arpl fstpt jge xor dec pop cmp add (bad) push inc jg pop aad inc pop cwtl jae mov mov sub call fsubs outsb clc pop mov xor dec lcall test rcll pop and mov pop pusha enter mov cwtl jae cli movb insb mov jbe stc mov cmp cmp incl inc cwtl dec movsb pop les mov cmp ror xor insb lds call sub push push outsb mov dec test jle scas sbb test scas call lods sahf jecxz lret test mov (bad) int ds out cmpsl sbb adc rcll pop jl xchg dec add call pusha sbb mulb sub push jp or or and push cmp test cmp adcl test or lock ds mov jecxz push xor aas (bad) aaa popf (bad) mov std imul je loop rcrb (bad) icebp push adc enter in sbb dec in cld mov scas pop (bad) int jge add (bad) leave fs jge test pop sbb lds fmuls scas mov xor popa mov mov int3 sbb cmpsl addl adc jbe in add in inc les icebp sbb pop test inc xor push loop add adc add inc mov inc fsts cwtl adc fistl je (bad) outsl dec mov in lret and sbb jp ficompl lods sbb daa sbbb int lock (bad) (bad) movsl sub mov cmp dec add jl loope dec add rol mov sub mov lret or test rcll leave mov add adc rorb lods lds inc (bad) dec repnz repnz nop cmp inc orl xchg pop subl aad sub int hlt ljmp push out outsb cmp add call sbb add mov mov test stos movsl ret inc movsb (bad) call push (bad) loopne je lahf and aas in lods mov outsb xchg push stos mov mov dec sbbl add xchg lea push ljmp outsb mov data16 dec addb das in and xchg lahf ficom sub and mov pop lcall or ss push jo loopne (bad) ja xchg inc idivl mov or leave adc sub mov dec lods pusha fidivr (bad) lret dec aaa scas push add repnz add jge add mull jbe cmp mov scas imul cs js mov and insb movsb cmp push leave pop lods cmp aam mov xchg adc jmp or enter mov in insl mov mov xchg dec cmp bound ds mov movsb test pop or jp shr xchg jg fcomps or pop clc lds cmp mov lea shr test movsl popf jmp aas inc scas nop vpsubusb cmp cmc and push pop icebp xlat notb hlt jge adc pop dec xchg mov cmpsb js cmpsl ja fnstsw sub pxor push inc (bad) xchg pop add mov loop xchg sbb cli sbb pushf sti imull (bad) enter sti fnstsw (bad) xchg push and incl or jne push sbb xchg mov dec adc xlat je,pn insb xchg repz mov (bad) stos cmp inc mov ljmp jle mov mov mov movsb mov js push test jge jnp push add push mov dec mov xchg rorb popf fcmovne push dec fiadd ljmp inc mov cmp out adc push mov or add sbb aaa xlat push mov sbb sbb mov sbb in aas push mov inc fisttpl jge xchg fdivrs fcompl ret lock inc jnp dec mov imull outsb jmp or xlat enter xlat mov mov insl xlat jle lahf dec sub pop sbb setl (bad) pop fisubl gs inc or inc std ja dec (bad) jl mov add lods (bad) cmc imul mov (bad) push xchg mov mov addl dec dec inc aaa cmp clc lds jnp cmpsb subl dec clc mov cs sbb dec subb and cmp scas (bad) or js adc arpl pop outsl sub or (bad) dec cltd cltd call xor mov cld lods cmpsb aad cmp (bad) clc fchs ja push or jl cmp mov and inc sub and mov and movzwl jge push pop mov sbb (bad) jb adc xchg (bad) (bad) imul jp pop es (bad) cmp mov jnp sbb lods mov and ss (bad) enter test add (bad) repz lret sub jb dec pop mov pop push push rcr cmpsb icebp nop xor bound xchg jbe push fwait sahf and rcrl fwait into movsb cmpsb movsl rolb addr16 je sbb add cmc xchg add mov int sti mov pusha leave mov outsb mov addr16 icebp mov loop aam in leave push pushf xor repz xchg int iret dec hlt push sbb sbb mov (bad) dec xor mov jl or sub xchg mov (bad) gs aas imul lds jle sbb xor or gs xor lahf sbb push arpl dec (bad) mov xor cmp aad xor fidivr inc mov pop xor sahf jno out or jo xor in out adc lret push mov cmp mov arpl mov iret or add add push mov repz das push and nopl pop dec inc jae or or jnp jne ror pop dec inc adc (bad) insb xchg fbld es gs aad mov mov in and or mov gs and pop mov insl popf ret leave jbe jbe repnz aam ror adc add pop fdiv shr fisub test and adc push pop adc add inc jecxz lret cmpsb js mov mov pop (bad) inc int3 jns sub jge xchg jno and aas or inc lahf notb lock (bad) xor jnp push lret ret ljmp push adc jecxz imul pop mov imul push ret sti adc jmp (bad) cmc out push test xlat test or lcall or fsub sbb add cltd mov movsl mov mov add jge cmp fwait (bad) sub outsb xor xchg pop outsl inc mov ss ret or mov (bad) insl fxch dec xchg cmp cmp nop xor adc mov movsl gs jb insb cwtl ss cltd icebp fnsave insb cmp sub sub out inc sub repz pushf sbb out in dec and mov or push jbe rolb sub js mov mov jle pop xlat leave data16 mov in hlt dec mov insl adc or and cmp (bad) movsb or sub xor add inc push rcrl rolb jmp (bad) mov or test insl fadd xchg mov test xorl bnd xor out outsb mov int3 mov lcall dec inc repz sahf fs jne jle inc ds sbb aas (bad) mov lods and neg jns jno sbb rcrb into ds jae out cmc (bad) jle or jae test xchg bound mov sub push xchg in int push add push pop fist xchg push cmp test lods sahf or mov and sbb jecxz jae sar xorl fwait jecxz adc lods inc lock add ret leave loopne cmpsl pop int3 add hlt sbb or sahf cmpsb aam push pop push rcrb pop xor ljmp mov cmp or mov ds pop call test frstor jnp notl push cmp cwtl scas pop push sbb add jb cmp xor cmpl dec das mov pop jg into arpl daa jnp mov inc mov xchg test lock insl nop jl jb cmp lock mov adc mov push mov jg sub mov adc push stos push add jo cs out inc movb movsl pusha xor sbb mov adc sub sub loope mulb pop xchg lods pop add or shrl add dec inc popf movb mov cmp adc sbb (bad) pop test scas (bad) jnp cmc lahf scas jae dec cmp add shl or jbe mov mov mov xchg imull int mov shl scas push dec lock mov push push add jnp adc test es rclb cmpsb add mov fmull and push dec es cltd imul push shrl adc dec icebp xchg push test mov inc je sbb std (bad) mov jno adc out pop push mov shrl push add jmp jmp or dec add sahf jnp (bad) aaa lret dec dec mov insl pusha mov xchg jb,pt push mov dec jnp fwait mov or inc push rcrb xor sub (bad) push les fildl enter jle push scas inc repz and int3 mov or adc push or inc sub pop inc jle or pop sub lods (bad) (bad) iret sbb cli call cmp add pop cld aad iret movsl adc aaa aam ljmp leave (bad) or daa loop sarb rolb aam or xor rorl sbb mov sub cltd dec cmp mov cli xor repnz xchg pop (bad) imull call xor or mov jecxz or push mov dec fidivr jle dec enter push stos mov jle lcall mov loope xchg ja neg ss inc and pusha test cmp jecxz inc test sub sti mov adc pop insb repnz push and jns insl pop cmp (bad) pop mov pop mov pop and popf inc bound in adc lcall sub loope call jg in sbb leave testl jl xor ret sub pop (bad) lcallw adc scas push (bad) mov inc cmp fild imul xor mov mov fildl adc dec inc cmc rcrb je aad popf aam nop (bad) push dec arpl ror push in jne add loopne or jne push pop cmp mov jne jl outsl adc push cld subl sub inc pop jle data16 mov mov adc jno notb ljmp push repnz fs dec out idiv dec add cltd or cltd pop inc loopne xlat xor insl bound gs sbb movsbw and mov cmpsl mov jae pop bound pop nop jb or mov iret jo inc test es lea stos stos hlt xchg mov insb movsb jg (bad) xchg daa jecxz jae cwtl mov hlt push fs pop (bad) dec push fdivl test push test lds lret (bad) xor mov cwtl mov push mov push lods mov add test sub (bad) dec mov (bad) repz ret test stos mov icebp adc adc push outsl pop xlat das push inc enter das ficom mov outsl frstor roll (bad) pushf xchg push inc repz mov jne lods jge inc dec aad call lock cld cmc pop mov add mov sub dec fistp cmp mov stos or cmp jecxz lcall stos mov test popa int test cmpb les mov pop pushf stc pop ret pop pushf leave mov sbb lahf (bad) mov insb mov mov pop dec loopne aas sub stos mov cmp inc adc mov jbe jae fisttpll adc or pusha adc in jnp cwtl (bad) mov hlt cld and ret mov or mov sbb inc lea mov out lea push jno,pn enter addl push dec pop hlt mov dec mov in movsb jp addr16 cld stos inc cmp and add add icebp dec js dec fidivr movsl sub adc mov faddl fdiv push call lods push pop xchg dec pop int repz or mov adc sbb das jp jecxz dec jg lahf mov test xor aad add iret sub jg loopne xchg mov or test in jb das push leave test pop loopne inc inc popl jge ret and (bad) mov sub mov push call push sub popa popf jg dec lock aam out das ret sbb mov and ret mov cmp mov mov (bad) jbe data16 sbb sbb aas lret fcmovnbe bswap negb int lock cld fcmovnb stos mov jae aam int3 dec mov gs sti enter cmp js mov je dec xchg push pop add push mov arpl cmpsl push pop cli movsb jg xchg mov sub orl cmpl sbb mov stos dec or fdivs mov (bad) lea and dec test fwait mov imul mov in jns das lock pop add or lods inc mov mov aad insb in sbb or gs push jns subb xchg ret shl jnp pop (bad) xchg jl or mov cmpsb push negb mov jo adc xor iret repnz leave insl flds sbb ljmp push stc dec mov mov jnp mov xchg inc pop movsb dec cmpsl js sbb (bad) add out popa jne cmp mov jge cmpsb sbb loopne fiaddl cmp xchg rcr sbb cmp lods dec pop rorb pusha pop cmpsb pop push mov push clc cmp xor inc mov pop mov xlat loope adc lahf fimull mov mov push sbb ljmp fisubl loopne cmp sbb sub add aam xchg cltd es test fistl cmp inc mov mov stos std mov sbb jb notb jle,pn push jg (bad) xor inc sbb (bad) jge jp jmp adc add xchg cltd fstpl mov pop pushf mov ss jge or into push shr mov mov or js inc je add fldlg2 ja inc mov (bad) je cwtl jbe mov jle cwtl adc cmpl scas repnz mov repnz jb adc out adc jmp pop repz mov call jae lea psadbw jae sahf pusha mov jmp notb dec cltd (bad) xor pop inc test shl mov sbb sarl (bad) pop pop mov lcall lcall jp jo ja mov pop sbb mov sub (bad) jbe (bad) sbb loopne lods push ficomp js,pt aaa fs (bad) scas jns add or cmc push pop repnz fwait sti popa pop dec mov pop test pop dec daa lock mov shl mov pop fstps sbb stos push jle inc call xchg cltd push test in jg jle push inc and iret decb pushf ret (bad) (bad) push insl (bad) icebp ss inc push (bad) sbb xchg fildll push ja push rcl lods or inc push sub mov ds fild or mov aas jne sbb mov cmpsl cmc mov mov xchg xor push rcrb inc pop mov mov sarl rorl ss adc mov xor mov and fwait leave dec int cmpsl sti xor jle push movsl inc cmp imul dec mov arpl das sbbb enter pop push push clc ljmp dec push inc dec jmp outsb cmp xor mov sub sub push jecxz fdivrl in movsb ja imul push stc das test inc jnp add mov pop pop sub add test arpl int mov out das adc icebp shl and das cmp imul lret xlat mov pop xor jl add les pop sub cmp addr16 leave mov pop push push sub aaa and stc xor mov and enter mov jb cmp idiv xchg (bad) and mov mov pop and cmpsl mov mov xor shlb nop lods mov and jae lods cmpsb xchg aas or ror mov or and dec xchg enter sub push pop ja cmp push mov push popf (bad) fcmovnb fild mov mov xor adc xor sub std jno mov or in (bad) clc imul idivl push dec xor dec pop das push inc ficompl je iret daa hlt xor jno push xchg lds (bad) fcmovu bnd jne xor cmp sbb dec addr16 cmpsl jo push ljmp xchg add fwait mov dec add sub mov xchg stc bound adc pop sbb inc inc mov xor mov cwtl xlat sub cmp adc xchg js je push sub cmc test push sbb sahf add mov xchg movsb stc jecxz or rclb sub jne movsl jno pop cmpsl jo xchg bound insl aad daa das or gs xchg daa addb pushl or scas cmpsl cwtl mov ret sub lret imul jnp (bad) cmpsl pop cmp pop divb aam shrb inc neg pop adc sbb insl les in inc push mov mov in loopne cli lock sti dec int3 push out pop (bad) xlat scas mov fmull (bad) dec loopne pusha mov sub (bad) aas call rcrb mov add mov repnz scas mov push push ficomp test pop (bad) xchg iret adc mov int3 rorb out cltd ficompl cs pop cmpsl or call and lds shll test mov sub mov jl or loope sub outsl loopne (bad) (bad) mov cmc enter and push test repz lds sbb pop outsl sub inc sub lret jmp sti mov or pop rclb mov int3 push daa dec cmp and insl pushf sbb adc popf rorb pop mov pop (bad) xor add aam mov mov push test int lahf or (bad) jno pop hlt ljmp sarb jmp outsb aad jge lret lods push dec xor pusha leave movl (bad) out ficompl dec insb iret mov inc lret (bad) out ficompl dec inc ficomp mov adc xor mov dec ds (bad) ficoml daa cmpl das loope lret (bad) mov xor bound pusha sbb js mov daa loope jmp inc das sahf xorl mov dec das in jns and mov adc and dec sarl mov cmp andl ret mov adc xor sub adc mov mov pop pop sti imul mov cld xchg sub mov sbb test jg,pt cld mov aam sarl and shrl dec ss ret out xor or (bad) bound cmp sub icebp mov xor and mov xor fiadd bound rcrl push sbb mov sbbb aas out sbb mov fcmovne fwait dec rorl xor pop rolb ret xchg shl push cmc dec in add mov scas cmp pushf cmp push cmp xchg and (bad) pop (bad) (bad) mov pop ret mov mov mov jecxz scas inc ret imul pop cli sbb leave dec (bad) mov mov inc fistl stos dec and fimull lret mov mov sbb stos movsl dec cmpsl (bad) push stc loopne mov xchg mov inc sbb (bad) jns inc jns lods nop or out sub jmp enter mov xchg les mov mov aaa xchg mov jge int cltd mov mov cmpsb xor or rorb mov mov bound lds mov xchg leave and loop (bad) mov push push iret xor into ret hlt push sti push xlat addr16 dec mulb xchg sti scas aad cmpsl aas test jo or arpl mov xlat daa out push ss xchg mov (bad) jmp divl fstl jge lea (bad) dec roll dec mov inc sbb popf push sub shll push out xor movsl mov jle xchg adc (bad) push test or adc xor in dec pop rcr adc imul push addl cmpsb dec imul insl test pushf andl cmp xor imul xor inc dec and fdivs push fisub shrb sahf lcall add inc pop cmp add fldl and jne aam out adc pop xor pop mov (bad) les dec jnp cmpsl add or test decb mov sub test movsb loopne jmp ljmp out aaa fsubrs arpl imul popa bound adc aas sti imul sahf sti mov (bad) sti lret fcomi pushf xor push push fiadd xchg and stc pusha jns das mov mov mov loop test and mov push pushf xchg and js roll les xor push mov push je jp pop xchg inc and in outsl pop lock je cmc fistp adc mov loope pop aaa xchg lret jl js ret int3 dec dec test mov add ljmp jecxz sub xor sbb mov jns popf insb lea jno and jo test xor insb mov xchg jno into cmp adcb sub push mov cltd xchg sbb stos mov add imul fwait outsl (bad) jmp and mov adc lahf sbb cmp push int3 add jmp fucomip mov pop and inc dec adc dec mulb fistpl jl xor jb dec push repz das int3 mov sarl popf push rolb js cmp mov mov cmp adc loopne pop cmp xchg xor push bound sbb jmp pop mov xor in xor inc jno mov jns jns jno push out xor push ss cmp and mov imul gs fisttpl bound fcmovne andl xlat mov jno and and pop popf xor nop aas pop lcall jo dec ret mov mov test mov sub mov sti nop aas xchg pop stos cmp addr16 les (bad) test imul ljmp ss push cmp clc xor imul leave inc adc imul push ret jmp push movsb (bad) rcrl jp push inc push imul adc push cmpsl add ficom nop lock lock and loope bound jbe pop (bad) hlt mov aad das and jno daa das or xchg add pushf xchg adc add sbb in adc arpl out mov push adc jg dec dec pop push and sbb loopne,pt push das lret or es cmpsb add test adc jnp jl mov in ds repnz les lret popf sbb jno ret jp and xor ds (bad) icebp mov imul push jecxz dec jbe pop test jno push or stos pushf (bad) xor (bad) mov pop push shll arpl push clc cmc xor jp cs xchg stc lea sbb mov outsb aas dec mov or fsubl xchg lcall out mov jno pop mov jmp outsl xchg in dec (bad) cmp cmp cmp mov sbb lcall ret (bad) imul xchg int xor fldcw gs and inc sub popa loope imul xor out data16 popa rolb mov movsb push lret lret mov not in pop inc js les loope icebp add (bad) scas ljmp scas stos mov js xor (bad) xchg scas xor pusha mov mov into ja add int or lds mov addr16 sbb into stos xor cmp and jmp enter (bad) and loope sbb in adc into scas into adc and or movb (bad) movsl out lahf rorl fldt into jmp (bad) es (bad) imul ss das (bad) neg mov ror (bad) out les into aaa rol and cmpsl into (bad) imul (bad) into mov push repz shrl mov push fdivs loope sti hlt test or andl leave (bad) push xor es out sub mov jl xchg mov add sbb mov cltd divl sbb fidivl mov pushl adc iret scas loope push and xchg out xor cmp cmpsb cmp and inc (bad) push cmpsb or cld rol push stos xor and mov mov rclb cmc pop jl ret in idiv sbb shrb jns sbb dec xchg push popa fcmovne std add outsl mov insb (bad) gs js sbb imul mov xor sbb push lret adc push push das pop cmp cld (bad) int3 out mov out lahf (bad) pushf pushf imul push push inc (bad) daa fs xor dec adc sbb xor dec imul dec int3 mov jle test and stos ret aad sbb aaa out mov xor mov lret jno mov pop inc fistpll (bad) sub imul fs fdivl inc bound or xchg lcall cmp adc lcall fprem dec xchg fmulp out out hlt je pop mov sub or fadds push fdivrl icebp test mov rcrb xchg insl cmp enter dec (bad) push pop cmp imul imul push dec mov mov xchg dec push les fcmovu dec mov into inc test clc pop aam out push aam jmp add test arpl jne mov pop mov fldcw mov jge adc xor jne xor jg sbb in jl mov push sbb push in xchg mov pop sub (bad) mov dec inc int xchg and add lcall xchg push scas cli cmpsl push mov mov dec inc inc (bad) push in jne fsubrs mov pop jge and rorb in lret dec push (bad) mov pop rorl adc mov sahf mov jl out push fstpl ret into mov faddl iret mov dec aas or ret es sbb sbb js movsl pop and lahf push xchg imul fs sbb xchg bound mov pop rol xchg and out cmc mov cmpsl pop sbb push outsb roll jns push pop sub repz data16 push xchg dec lcall cmpsl out lcall dec outsb add jmp mov (bad) lret mov mov and outsl inc push lret mov shrb xor mov lock mov or pop pop sub shlb (bad) imul xchg and jae dec adc in push xchg ficom call jbe,pn xchg fistp enter repnz adc std cmp insb je xchg pop rclb mov add jbe out mov fcom mov movsl dec cmp test mov mov or stos pop fdivs aam pop xor ret mov adc sbb addl fmuls or (bad) jae sbb (bad) xchg fiadd fcmovbe mov mov ret hlt adc xchg jns loop aam jae inc push test pop nopl pop ret insl outsb pop sbbl pop and test inc pop cmpsl mov scas shlb jae or movsb sbb shrb test in sbb scas push scas push cmpsb cmp xchg rolb cmp outsl adc (bad) sti incb (bad) pop divb notb lock repnz cmp sbb add add push mov xchg and mov pop adc pop mov mov push pop out (bad) and mov sbb loope inc pop icebp sub mov inc iret jae cmp cmp adc lea loope test xchg outsl jnp mov mov cltd xchg (bad) bound mov lcall lea xchg leave fsubs lret aaa jae mov cmc xchg or mov enter lret pop aam aam pop mov pop jb (bad) pop jmp ja out inc pop mov pop mov ret mov test or in pop sarl cld add push xlat ret (bad) insl out cmp imul mul into icebp into xchg into push lret and mov flds ljmp jne js push mov jno aas pusha pop mov (bad) xor rcr jo pusha inc test cmpsb and and jnp int mov adc jle jle jo rorl mov cmpsl pop sub mov mov adc sbb cmc jae push subl mov repnz mov imul mov enter lds scas fdiv lea mov imul or cmp out sub (bad) int cmp stos outsb test mov fwait out mov pop push mov testl ljmp daa lret or sbb jp sub push cmp mov pop mov (bad) outsb incl incl incl jmp mov lock shlb mov xchg imull lods mov xor jp sahf xchg popf js lods mov pop loopne fisubl or (bad) aam (bad) jge aas movsl jge adc loope mov enter cmp inc mov mov xchg add (bad) out test sub roll dec test (bad) jbe mov in xchg inc lods aam sub outsl pop iret out dec or lods cmc xlat add dec cmp inc mov fadds fadds xchg ret mov shrl aam cmp popa std ljmp (bad) jge pop or jb movsb mov mov jae xor jle cli inc fsubrp incb lret mov repnz mov ret mov das mov xlat imul xchg faddl adc fstl mov adc add cmp mov dec cmp jmp sti cwtl bound jg cmp mov stos pop mov pop inc out test aaa mov mov ja fcoml stos jmp sub push (bad) mov daa (bad) cld ficomp out loope push mov incl dec xor mov lea stos sti or cmp cmp mov stc aam dec sub sub add shrb push jno fucomp das cltd stos cmpsb clc sbb pop push into insl loop jmp fcompl add (bad) aas frstor jecxz addb jg scas jo repz stc mov ds movsl fisub aaa push clc pop (bad) xor in pop inc mov jns imul add adc das cmp xor jge cmp pop push loop,pn add mov sahf (bad) and inc loop out out dec xor fsubrs adc jb push mov sti inc test sbb mov bswap shr popa out fimull das test std and xchg (bad) fstpl add mov push pop push lods mov xchg nop inc test insl (bad) nop sarb mov rcll les test rcrl jge pop jg cmp inc addr16 xor pop les inc es cmp and jb or push jge lcall inc roll push push push stos pop hlt lds mov cmp imul mov roll sub out out rorl clc call cld adc scas or cmp inc xor inc mov (bad) pop movsbl notb ret imul (bad) mov into mov movsl mov sbb jo jo pop (bad) cmp jp int3 iret dec rcrb lods xlat cmp and push mov mov mov lret dec shrb add in push push adc adc pop hlt orl jmp je outsb push push push decb js jb inc jle sahf inc lcall out cmpsb mov hlt push adc and pushf lret sbb pop mov out loopne mov (bad) (bad) jb idivb stos adc orl nop das jecxz out ret decl dec push (bad) xor xchg fsub roll movsl cmp add mov xchg push es mov mov jmp xchg add imul fistpll jbe xchg and js jnp xchg das push (bad) stos lret cmc cmp stos push aam lret js sub or sub mov fcomps push cli rcr test inc aas stos cmp das push daa imul (bad) mov test aam lock mov pushl das xor pop movsl jne fcmovu in push xchg test cmp pop mov push mov pop shrb and (bad) jae lahf xchg test sub stos adc shlb fdiv inc fisubl inc inc or jg mov fisubl lods push adc or je push iret cmpsb lahf pusha xchg subl sub movswl add dec cmpl pop sbb movsl ret jnp jnp aaa stc fldcw or scas xor loop fnsave ljmp push push xor mov add sti jmp mov pop xor popf aam xchg add cli jno jns add pop icebp loop bound jae adc aaa rcrb (bad) mov mov adc enter in adc push mov sti daa push adc adc and dec std xor inc sti or jb or arpl mov or gs push out mov ror scas inc push mov in xor push sub negl lods mov arpl iret push pushf ret jns mov das outsl lods cmp dec mov jae aas mov scas popa (bad) ret mov pop lock cmc xor and xor xchg mov push repz xchg push lods jb clc mov xchg mov dec sbb xor mov loope out int lret inc ljmp fild cmp dec cs xor add jge sbb jne insb add pushf xor lods rcrl rcrl test in sbb popa popa push icebp mov and sbb jns imul movb in stos (bad) dec fistpll add lahf aad stos (bad) dec fistpll add lahf aad scas into js,pn cmp push int3 cltd pushf (bad) (bad) lahf fadd pop daa ljmp dec sub rcl clc mov aam mov bound inc cs jge insl push pop std inc aad movsl jbe push adc inc push fstp (bad) or push pop inc sbb test lcall (bad) das das mov (bad) sub out lock fcmovu push and mov lret fucomip xlat out xchg cli push mov ret add flds or imul jae push mov inc sub bound out dec mov (bad) in adc and mov je les (bad) int3 pop test or lea dec and ds xchg aad mov sbb push in int3 cmpsb enter mov cmp jns insl fcomip lret test xchg out or sbb sub or lret pop lret addr16 lret inc push mov cli (bad) aas scas in xorl sahf iret out pop jns mov (bad) inc mov decb fwait in int movsb push lds adc fisttp inc push mov adcl loopne jl inc (bad) push mov loopne popf (bad) test sub stos push add inc lahf jmp icebp inc aaa cmpsb lahf repnz cmp dec add lds mov xchg push imul mov gs jg jp je addr16 xchg fist popa pop dec addr16 jecxz stc xchg mov jno pop xor sub hlt or jle mov and ret push mov sub push out push arpl jge inc lods sub xor fdivr je pop out pop cli inc das daa (bad) push out mov loop divb mov andl inc lds test out decb movsb cmp xchg popa cmp cmpsb (bad) fsubl pop sbbl sbb or inc scas jecxz adc push clc xchg insb aas cmp rcr sub cmp (bad) stos inc pop mov jae daa ret sbb in (bad) cmp and test imul jmp add (bad) js add cmp lahf jae (bad) mov rolb push mov mov mov mov push pop jecxz lcall stos movsl data16 mov out fistpll push int cltd lods in add push mov cli loop cmp pop add mov insl es test mov adc scas xchg add cmp pop les xchg jg jecxz movsb pop sub nop mov jl sbb sti loopne cmp scas push lock xor loopne sub cltd fcompl lret dec xchg fiaddl (bad) sub xor push pop mov jge call insb pop inc dec cmp xor in xchg mov jb scas popa push dec movsl loop pop (bad) shrb lret pop andb loope xor mov cmp adc pop or int pop in push sti or pop xchg sub inc mov sub xchg push aaa js scas dec ss sub cmp cmp jge data16 aam lds pop (bad) push mov stos cld dec popf outsl sub mov mov and test mov and movsl icebp ja (bad) and cmp and xchg push pop add (bad) mov testl mov mov xor or push adc pop pushl jns cmp arpl in fcompl mov dec and out or icebp xchg adc inc xchg insl mov mov cmpsb inc pop scas add pop data16 (bad) (bad) add dec out fbld mov das push jge cmp mov stos inc clc mov fwait sahf cltd (bad) jbe adc dec xor inc mov add jmp data16 (bad) jmp cwtl xorl mov jle mov sub sub mov cmp pusha popf cmp pop popa rolb sbb and cmp mov mov cmp cmc jg outsl cwtl (bad) int sbb pop sbb or (bad) xor inc iret leave ds aaa xor das jmp cmp cltd jge arpl addb rol jne data16 push incb out lea dec hlt pop cld or dec or out lea popa fsub or out or push iret das push jno popa ss and pop dec call aam mov xor cld pop mov push js insl jl dec daa ss mov pop adcl insl jg cmp lock mov xchg (bad) push mov and cmp inc cs sub dec insl clc (bad) ljmp cmpl adc pushf or pushf jge mov cwtl adc sub or fstpl loope inc xor (bad) in stos push jle (bad) jae xchg popf xor mov js in or xor add cmpsl stos les mov je sbb cltd movsb dec scas ljmp sbb loopne in dec out lock subb aaa stos push jmp sub pop mov and adc (bad) jmp jbe (bad) lret mov aas outsb push jns add cmp sub xor test pop jns or sbb lcall pop mov xchg mov loopne pusha mov fisubr daa xchg ljmp pop sti shrl lcall sahf dec outsb lcall add jl testb pop push dec pop sub mov mov insl add and scas mov call jae cmpsl fmuls adc adc sub das mov imull sahf shlb add xor jne (bad) aas sub cmp jp cmp sbb and push pop dec or popa add out and mov fstpt daa push mov mov dec loopne ja,pt jl mov mov rorl lea das jmp sbb mov js mov or aam sbb movsb popf xchg outsb stos loope fisubl xchg jo mov xchg mov ljmp cmp cmc loop cmp inc and fcomp dec in sbb add (bad) inc xchg icebp add jns pop (bad) push cltd pop shrl outsb pop inc cli mov adc xchg (bad) std jecxz jo xchg idivb je pushf es mov scas cmp fwait test push mov sbb leave mov in jb arpl mov mov lea cmpsl in insb cmpl das inc or (bad) push jae mov popf rolb sub movsb out (bad) xchg inc add and jmp (bad) mov pushl inc push cli cmpsl cmp mov sti xchg test adc push jg imul pop out or pop out push fistpll shrl inc inc or xor imul test sub pop push testl pop push stos push jecxz ret mov mov outsb xor xchg and adc jns xor insb adc test stos repnz pop sub in outsl addr16 sub inc adc mov ljmp jecxz dec outsl cmp adc sub ret pop inc jnp dec pop xchg and sahf and add out fs cmp mov add dec sahf ss inc add jl pop jp cltd cltd and imul pop and inc fwait sub hlt and (bad) ficomp scas stos shrb xor das jmp aaa das xchg js xor xchg push and cmp inc cmp mov xor mov jno aaa pop repz cmpb addr16 sub (bad) fisubl fwait inc sub outsl gs xor and stos inc (bad) sbb and arpl lahf xor mov ret jecxz mov push inc into cmpsl fs data16 mov add jmp subb jmp dec (bad) loope push aam or sub mov jo adc xor xor pop sahf push (bad) cmp push fistp sbb mov icebp test push lret pmaddwd movups pop movsb pop add jmp jl fs xor xor jno in push fisttpl pslld sub xchg inc int mov inc push sbb test sar sti pop mov out cmpsb cmc test vpminub int3 mov (bad) lods pop (bad) mov xor incl loopne pop or and or (bad) ficompl pop das data16 mov pop clc cli push dec insl adc mov inc dec xor inc cli mov (bad) mov imul ss aaa fisubl or push jbe leave mov xchg fstpt jecxz mov pop sub imulb sbb popf ror mov fldcw movsl mov mov xor daa cmp pop stos add sub xchg add lcall fcmovnu sti or aas test (bad) (bad) loopne std dec jecxz and lret loop jmp call add pop sub and cmp push pop cmp scas (bad) mov (bad) mov sahf movd xorl mov lcall jno mov xor push mov into fcompl icebp mov cmpsl and cs lea push push (bad) lock sarl or (bad) icebp or insl movsb pop push mov xor inc dec movsl in loopne xor loope fstps xchg sbb dec ds push xor inc xor push scas clc dec sub mov cmp add sub in xchg push cmp stc jmp jp mov xchg push test aam push sub (bad) mov or xor cld leave ss movsb and adc inc fdivs sti fsubr cmp dec xchg pop fmull out mov pop imul push bound adc mov jmp xchg push pop sub jp ss int3 or sub dec divl add call mov dec push push dec pop lock test sbbb jg negl and aas test push and fdivs cmp fstpt add sub inc cmp xchg sub xor pop data16 hlt leave push or sub xchg and fwait push gs imul xchg and xchg (bad) jne lock dec add and and and fs cld loope je imul data16 (bad) xor bound mov xor pop pop xchg imul das mov sar sub ljmp leave cmpsb or fs out imul and lahf (bad) lret sbb or jl out test mov and iret lods fsubl mov incl out push enter xchg rorb daa sti in lods mov lods sti aad mov mov adc (bad) inc xor imul insl jge mov sub add sahf push adc js mov mov or out lods dec mov jae inc lahf std imul movsb jmp cmp xchg sarl lods xchg sti pop inc lods jecxz dec adc and lcall adc xchg cmp lock sub lods data16 sub cmp push or dec cmp mov and sub xchg dec call lahf cli mov inc mov jle orl icebp add jne lret cmp cltd or push popl xchg pusha fcmovne jbe in fninit sub loope push lcall jbe jb scas push adc pop cmc arpl sarb and stos outsl ljmp imul cmc imul pop hlt loope jo ret pusha cmc incb push lock pop or jg (bad) cltd stos stos scas mov add (bad) (bad) gs pop pusha lods enter mov (bad) push (bad) xor lret mov std cmpsb push (bad) fidivrl jecxz mov push pop fs sbb mov pop jnp cmp and cmp jae daa pop insl je push (bad) push xchg (bad) sbb sbb xorl jecxz insb out scas inc add fildl jo inc (bad) lods hlt (bad) cmp mov inc mov loop sub mov nop cmp push and push js fistl mov push pop and ss jecxz add addr16 sub sti or lcall jl push cmp lock fwait jne insb shlb xchg fcomps les lret sbb pop inc fstps cmp in jo in inc adc mov loope sbb aaa jb in dec mov in lret mov and shlb in mov fisubrl or or mov xor fs cmp adc scas push lahf lds jl or jo popa push pop xchg sbb in lret cmp lds aam mov lds cmp push hlt es (bad) and add aas cmp fdivr or ret imul pop mov xor inc aaa mov sbb pop sub mov adc pushf or push mov sbb shlb xorl adc mov ljmp mov aad push pop jb xchg add pop sub inc sub dec out roll sbb xchg shrl loope insb rclb jl test pop ss adc jnp in loopne xchg cmp or lea daa jecxz pop push or fwait out xchg pop jne enter aad push inc scas xchg mov xchg jno xchg cltd fwait out dec jmp mov rep jp mov lds push jmp cmp mov fildll fisub xchg pop add ss jb xor adc and xchg push mov sub (bad) and sbb pop inc std fcmovne (bad) xchg push lret cmp popf dec sbb cmp loope mov mov jnp iret sbb push push (bad) mov pusha and loope cltd pusha add dec js lahf xor ljmp scas and jnp pop jg jmp add out pop lock cli mov xor jmp mov dec fwait dec dec or push dec sub mov lock xor mov jle and ljmp in pop sub stc jmp inc lcall jmp xchg into pusha pop pushf lea inc jne outsl push popa notb add popa add ljmp mov repnz out fnclex aaa xchg sahf stc sub mov jg stc xchg fcompl ret mov fsub inc inc mov mov outsb call dec mov out mov (bad) fbstp pop imul mov mov pop or inc inc mov lret mov xchg sahf mov pusha mov pop pop mov in cmp roll loope pop xor xor sti push fisttpll out out pop mov sbb mov add sbb inc xchg pop stos (bad) mov lret mov iret fs fnstsw dec dec or dec add push ljmp add mov les loop push dec aas insb push inc jp popa in add rolb sub enter sub xchg bound mov or (bad) push cmpsl mov (bad) arpl dec (bad) in jge push inc sarb xor inc aas cmp and jmp outsl dec xor notb adc call dec pusha sub and jmpw mov aad js mov sub push dec xchg push xor enter or shll scas mov jno scas fdivrl adc mov mov lods movsb in jecxz ficomp or jbe stc mov inc xor sub out (bad) je (bad) mov into mov inc iret cmp xchg xchg sub lret gs bound rorl pop mov in popa jmp leave cs popf mov mov insb cwtl push in sub cmpsl mov mov shr cld mov fxch push push cmpsb (bad) push lahf or dec ret lcall sub cmpsl rorb mov insb stos or mov mulb ret cmpsb scas shlb insb int out movsl pop cwtl sbb loop inc and cmpsb push insl sbb ficomp jo outsl sub in movsl (bad) and add or and out dec arpl lret es repz int3 cmp or pop mov or call push push sbb (bad) sub mov xor (bad) or or cwtl cmp or and mov xchg repnz je pop inc add ja test jge xor mov mov iret in xchg add sbb cmp cmp adc stos ljmp sahf or mov pmaxub cld lds sub sti xchg orl mov sbb mov dec xor insl mov dec sub push push stos and mov aad cld mov test fldenv lahf push fmul in not lods jle popf imul into incb mov adc stos xor popa dec cmp cmp xor stos adc adc ret adc jg sbb cmp adc das sahf xor cmp loope aad jmp nop push xorl inc xor pusha push cmpsl mov mov (bad) mov cmp adc insl push cmp cmp xor jns gs inc or fwait push inc mov fimul sti decb pusha or adc xor aad sub sbb jb jo nop aaa lods xlat xchg cli test lret mov es stc adc inc and cltd daa into push fadd fcmovnbe xchg sti mov outsl xchg sti mov (bad) into test inc scas dec xchg mov fbld dec mov cld cmp in dec movsb push enter daa sahf dec push xadd sub fisttp repz iret mov dec dec inc pop (bad) ds out imul fiadd into sub add insb push lret inc mov lret (bad) cmp xor pop pushf cmp (bad) push scas ds jg pushfw in divb sahf xorl fsubs push out fwait and cmp (bad) cld sub lds fisubl fucom gs push adc mov xor sub cmc adc mov push inc repnz dec outsl sub xchg or hlt arpl dec cmc iret mov jns push mov orl sub inc aad int das aaa xlat xchg pop fidiv pop xchg rolb xchg test in in mov (bad) sbb mull fistpl ror add and mov push in out rcr aam fwait mov push jbe push pop jae test hlt fsts les cltd mov (bad) xor pop in (bad) mov (bad) je and jmp push pop dec dec inc repnz push pop repnz popa mov push inc outsl dec mov (bad) mov es mov mov mov jbe and fsubs cmpsb sbb lods insl push pop scas and push cltd outsb cmp xor inc adc cli jbe mov jae pop or aam nop cmp (bad) inc pusha cwtl sub pushf cmpsl xor es lret ret pop pop mov clc mov xorb lods flds xchg (bad) cmp andb sbb lods adc jae pushf or cmp jmp and pop sub push cmc enter in es clc scas cwtl add push pop jbe cld lahf adc fdivp sub adcl sahf cli scas setne repnz jp pop in cli push mov leave jecxz mov les and fisttpl cmp push repnz ficomp adc add std add (bad) std jae test xchg jecxz push in pop sub lcall pop or out sbb test daa out mov shll push pusha mov cmp std (bad) lods fdivs sbb push xlat icebp inc fmuls dec std gs movsbl data16 into inc fdivp (bad) fld das punpckhwd das and jmp fwait cmp mov jne and subl pop shrl pusha mov jnp cmpsl jmp xchg or inc jmp lea or and xor xor xor sbb inc outsb dec adc loop and adc cld push mov and add ss mov ret mov iret jg xchg inc imul add adc jb xchg enter push movsl (bad) mov mov movsl int3 xchg int3 test adc cld lds movsl fnstsw outsl mov fisubr pop cld mov push out hlt and mov rcr leave jge ss (bad) (bad) xchg (bad) leave rorb rclb push jno or cmp test rcll int3 add sbb cmpsb inc mov sub lods les outsb jg push jecxz ja sub subb jmp dec and adc insl mov 