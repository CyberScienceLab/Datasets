pop mov lea jns add push xchg jno push dec rolb inc mov or sti xchg pop add and test les jnp mov (bad) popf outsb add cmp and lods xchg add jno cmp and jne xor pop sub dec dec ja push jne cmpsb mov aad or loop es mov or xchg and sbb leave test push jbe mov fisubrl stc lret cmpsl iret jb mov int mov test mov imul pop sbb pop xor imul adc repnz sub loopne mov into push out (bad) xor or push addr16 pop test cld fld jbe cmp lds mov mov xor inc bsf bt mov cmp and bt call lea movsbl lea pushf call pushf pusha pushf lea jb push shld rol mov add btc mov test clc shl push movb pushf pusha lea call adc mov stc bt bt cmpb call mov pushf ror bt mov clc test bt repnz push jmp bsr pushf bsf mov call jmp add fmuls add loopne add (bad) add icebp or or add or or xchg loop add loopne add (bad) add sbb add sbb or lods loop add loopne add (bad) add or sub add sub or outsl stc or xor add xor or mov loopne add (bad) add loopne add add call pusha push lea jb jmp mov pushl popl pushf push pusha push pushl ret lea jae mov lea call adc call stc add call not pushl call add pushf pushf call add inc ds movsl movsl popa xor inc dec inc fdivs mov mov icebp mov cmp (bad) fnstenv imul loop out and adc movsb pop cmp mov mov rcr jmp sbb je loope sbb add inc lods mov pop hlt jae xor rol push cmpsb ljmp mov add cmp (bad) repnz mov lock jmp mov adc xor pop sarl mov mov sub lret push (bad) push push icebp imul out mov notb push iret in push (bad) jmp cli popa xchg and (bad) call push lea call pusha pushf movb lea jb (bad) hlt shl movzbl lea shr mov movsbw btr call lea jb adc push movzbw shl mov shld shl bts setle mov cmc shr lea jae push adc pushf test cmc sub pushf bt jmp not pusha mov lahf push pushf bswap lea pusha lea call pusha pop movzbw mov mov push movl push xchg pusha lea jae not push movb call adc pushf movb jmp add add mov and rol call clc stc cmp call pushf jmp lea xchg rolb inc add jle dec je outsl adc xchg ret push and ret scas insb mov push mov jns lods jle data16 push repz clc xchg shl mov in mov mov pusha imul fwait sarb in test pop rcrl jnp je cmp ja xor pop push lcall or adc mov imul jnp pop fidivl roll mov popa cmp ret mov aam mov sub ret daa pop sahf adc (bad) xor rcrb popf xor mov rclb fcmovu pop cmpsl mov pop aaa in in loop xchg fsub in and sbb enter and mov or cld push sahf add xor mov jl sbb testl sub loopne mov inc xchg into std push int3 jns mov stc pusha xor add or js lods push xchg inc xchg jno fs mov push push adc jnp mov xor xor mov jmp (bad) je loopne fwait mov sbb mov push cmc xchg movsl push lods cmpsb push mov sbb stc pop cmp clc mov mov cmp clc nop (bad) out aas adc mov lea mov or xor dec pusha hlt pop cmpsb jge pop jp or jne adc dec cs mov stos fimul mov test lahf cmp cmp sarl xchg add add or jge ljmp movsb les dec ret pusha lds inc (bad) insl pop jmp push scas jne xchg push fnsave out and dec ret add imul cwtl jno mov add out out scas xor rcrb sahf sub aad cmp sub mov inc sahf jg cld ret sbb push cs lods call (bad) cmp adc or cltd and (bad) jns inc inc cmc ja dec inc mov sbbb repz cwtl cmp add shrb test fsubs cmp add bt mov clc call push pushf lea jbe btr sub pusha mov lea mov sub jmp cs adc roll inc aad mov pusha insb mov inc inc push mov adcb mov scas jno (bad) dec fwait andl xor cmpl dec fldenv pusha push ss fstpt pop lods stos insb adc sub insb rolb cmpb inc faddl lcall (bad) inc xchg dec add add jl and popa push pop xchg dec mov mov aam dec cmpsl (bad) adc inc mull fwait inc jno pop mov sti mov mov icebp xchg adc fidivr jno xor pushf pushf test jmp dec mov call fsubl rolb faddl inc adc in adc dec (bad) pxor xor sbb les loopne push rcr int add inc or push jp arpl sub loopne aaa add stc mov or fnstcw mov (bad) sti out pop hlt mov sub into sbb sub lds xor lahf sbb sub jmp dec sub mov idivl cmp icebp cmp js adc stc scas lods ja mov (bad) mov repz pop mov pop sahf xor test (bad) pop inc fwait ss sarb frstor mov int3 das mov in adc lret fstps shrl lahf icebp fisttpl fidivrl push inc loope xchg dec xor sbb push add test les jbe xor mov insb xchg jg test mov lock imul lock enter mov xor push mov mov ljmp dec les (bad) call into push xlat xchg (bad) fdivp int3 push mov add jg sbb xchg fsubl (bad) jg mov test (bad) leave cmpsl repz hlt push cmovnp inc daa int3 movsb sbb and cmc inc cli dec rorb fcoml in nop repnz adc sbb add or add pusha rep jmp push mov call sub push cmp jmp pusha shl pushl pushf pushf stc add call lea jb shl mov clc movsbw shld bswap mov bt cmc shl pusha mov movb jmp clc cmp pushf call push pusha call lea pushf movb mov call int add rcl (bad) into sub mov cs mov and in hlt xor into decb out pop push jecxz mov sbb ja adc inc cmc inc popa shl arpl ljmp add push pusha hlt scas pop cmpsl pushl and pop hlt cltd insl sahf mov or aas (bad) stc mov pop cmp (bad) out (bad) mov out push sbb push push or push mov lcall xor and sbb mov test andl xchg mov push xor or outsb mov movsb aaa sahf mov xchg cmpsb and aam cltd or int enter jae or shl neg push xor cmc jmp adc ficompl push inc add xchg test pusha mov cwtl bound sbb mov sahf mov movl cld lock adc je dec mov pushf push pop xlat sahf adc inc int3 dec adc sub pop ja adc pop push add sbb cli jae mov hlt adc (bad) push mov scas xor xchg hlt add jl negl test sub xor sbb das push mov jl fbld fs lret xor in les push xor fidivl mov xchg push test add add add sbb add add add add add add mov add add aad add add add add add add add add add add add mov push add call or add pop add loopne or add add fdivl and rcl repnz or (bad) push lds add add mov or test std add inc add movsb sub mov (bad) out adc loop push mov mov push xchg fisttpll xor loopne shll scas mov mov xchg (bad) sub push stos push mov das clc bound adc push outsb pop rcl inc aaa and push in pop inc jmp pop dec lahf nop (bad) mov or cli stc js adc out mov je inc ljmp mov mov movsb sbb and aam iret mov xchg iret aad sub add and test stos inc out mov das inc subl fdivl inc push rclb pop aaa (bad) inc nop adcl roll js mov mov push pushf je imul mov rol xchg outsb xor leave sub test cmpsb test shl pop mov xor mov outsb mov imul mov pop in jp ror aas adc push jp pusha cli ffree cmp sub jp sarb pop push sub mov call xlat test mov jns pop dec lret or jae fcompl enter dec and (bad) iret sub loope out leave push mov sbb inc gs (bad) adc fwait hlt push ljmp lcall or dec sub fisubr mov dec (bad) or mov lret jno xor xor jle icebp and xorl adc rorb mov js pushf or sbb dec psrad xchg mov mov jmp out insl ret jecxz gs out je ret cmp mov int3 dec jne dec lods and (bad) iret push int orb mov and out cmp or pop add mov jae pop (bad) jg and mov test jnp inc cli leave clc push insl mov stos and cli cmp and idiv inc jg and scas add aas adc bound sbb stc dec orl xor add cmpsl cmc cmc jge jns xlat cmp add scas and push jecxz in add dec aad cltd in mov jae pop jmp les leave in cmp pusha loop fmul addr16 std mov fdivrl icebp and push stc inc and sbb push scas insl ds jge in jns jmp lcall cli int mov inc clc pop pop pop aam cmp add or into xlat shll xor inc mov lret xchg shll inc sub das test mov rcr push mov or mov scas pop ljmp sub cmpsl ficompl int3 fwait in leave clc shrb call mov loope jge xor add push xchg dec mov add mov add in sbb mov cmc mov mov add sub xor stc pop push mov jo insb pop popa sub fisubr pop sbb inc addb inc sbb lret or test add je sbb fwait sbb in cmp mov ljmp push ss sbb fs lahf mov mov clc mov adc fwait stos popf fidivl divl mov cwtl scas sub mov inc inc xlat test or mov aam sub repz push mov xchg movsl fist (bad) pop daa jns jp inc or pop in cmpl in (bad) gs mov jle mov push xor leave jns lcall mov adc dec in inc push inc push hlt jmp fs mov inc mov sub lret loop mov pushf repz pop es mov popf lock mov mov add out adc jnp ret push stc enter cmp cmp es jg mov mov mov mov add sahf push into outsl lret mov push dec insb jb call sub xor js out sub or push xor push gs push lea test cld cmpsl adc add mov push rcrl les mov cmp or mov cmp mov nop popl inc dec cwtl inc or jp (bad) xor jmp mov jp shr xchg js xchg neg xchg sbb fs es mov and jp rcll (bad) (bad) xchg or bound jb into divl insl dec sub cli arpl pop adc or jnp push ds cmpsl lret shrl fimull hlt out (bad) lock and cmp jmp mov cmpsb mov lret inc cs sbb sbb mov pop ljmp sub rcrb fwait pop pop mov or lds clc and ret push xchg daa popf data16 lods pop daa fwait (bad) es outsl mov adc pop mov xchg movsb (bad) or sbb dec inc in add lahf adc pop xor jb rorl fldt subl sub fsub pop hlt inc jae mov xchg jecxz or sarb int fwait ret or ret (bad) aaa stos sub aas or adc inc push (bad) jo shl aad popa inc mov mov push sbb pusha aas test inc out nop fisubr push sbb jbe bound and lret push xchg cmp out jle outsl mov sbb pop sbb sbb mov arpl into sub mov ds mov adc fs iret sbb out cmp outsb call dec fwait add flds hlt (bad) lods nop scas cmp icebp das into pop xor push pop loop sub fadds test and xlat das ja xchg fcompl and subl jle and fwait dec ja adc fstps mov mov cli cwtl mov push xchg adcl flds data16 push ja arpl fldenv mov mov adc xchg adcl hlt dec mov test add scas (bad) cmc int mov lods sbb (bad) adc (bad) jnp fnsave mov xchg mov aaa mov test xor mov push sbb xchg into adc stc jle (bad) movsb mov aam stc adc mov sti cmpsb mov cmc (bad) shrb jnp jmp lret mov aad das push push jno cltd aas je (bad) sbb inc mov into and divb xchg and mov popfw (bad) push movsl gs stos das in xor enter pushf inc test repz sbb push jle add imul mov add and sbb adc or mov jb or xor cli xor nop add inc (bad) mov test call dec mov or sbb and or sbbb sbb aas and fistl sbb push movsl fisubr add jae adc ss rcll rcll push jns ljmp jbe mov xor mov push pop jge call shll sub push mov sbb aad lret or repnz (bad) xchg mov xchg add setle jmp sahf idivb ret cwtl pop pop pop pop out sbb or xchg pop mov mov xchg repnz xchg pop pop push arpl loopne xor (bad) incl imull das rcll ja adc mov pop sub addl test loopne add dec mov ss or imul out adc out mov inc xor jge xchg nop aas push sub sub jge pop rcrb push dec lea outsl xchg mov jne iret pop (bad) cmpsl xor test cmpsb xor dec icebp and jb daa in cwtl std lods dec jg (bad) jecxz bound sub xor aaa imul mov hlt inc jmp dec inc add lds (bad) push dec icebp cwtl mov mov movsl push sbbl xchg pop inc mov sub add jl enter in sub in cmp xchg xchg cmpb add inc mov cltd (bad) push inc jecxz ljmp pop int pop jg sbbl mov imul lock mov repnz into in push sub mov and int3 mov and outsb sbbl and add popf js or push hlt insb incl dec cmpsb lea scas fistp or sbbb fisubrl jge lds dec dec mov mov inc ds jo xor scas nop out pop (bad) xchg inc out mov mov dec sbb xchg inc jo cmp lock repnz (bad) jle add ret cld jle push cwtl repnz or ror sar mov mov push push add and bound push inc js leave rolb lods in lods jo mov mov (bad) mull bound cli out jo mov es and out jb stos mov insb scas cmp dec sub mov push (bad) inc daa repnz inc (bad) test adc lods std sub jmp in in pop cwtl cmp into pop cli out xor sbb xchg xor sub adc jns mov inc mov jbe dec bound scas push mov fstl jl js cmc sbb cmpsb push mov adc loop adc pop clc add pop dec or in xchg leave es mov lea cmp sbb and pop jo dec add repz out mov rorl imul ficom aad cld push jne mov push adc jecxz mov dec pop xor add push add clc ror inc cmpsl leave aad aas jb xor fadds std dec inc mov cmp jmp test add add mov (bad) bts mov (bad) cs adc stos pop loopne xchg adc inc jae repz sbb mov fsub int3 ds push push shll push loop cmpsl rorb pop shlb mov daa pop fidivr push scas mov in cmc sbb mov mov test loopne mov jp cmpsl lea fsubrl cmc les sbb pop push in daa xchg rclb aas lods push mov lahf or mov and and fadd fsub fisttpll fisubr ret dec adc pop into sbb or mov xor stc or js clc xchg jle ss sbb roll pop push out jecxz (bad) or cmpsl insb movsb inc sbb cmpsb push sub leave xor pusha int3 cmp imul xchg test push sub popa lods dec dec call dec ja jb iret fsin fimull sub daa test push test lahf push pop mov (bad) bound nop lods cmpsb sbb out (bad) adc adc lds pop hlt jg loope adc lea pop xor xchg or aaa add int and cmc dec xor scas ds mov out repz pop push xor mov cwtl (bad) jne scas cmc lea (bad) out mov pop or es test jne testb inc add mov fdiv pop sub lcall insb lock push mov inc test inc ret mov inc jnp xchg cmc clc scas dec or dec (bad) cld outsl and and loope fwait out inc pop mov in test inc or mov sub enter xor test nop popf or xor cmp xchg sub (bad) fisub popf mov jmp adc xchg imul sub imul xchg add pop mov cmp xchg sbb sub add mov lea movb movw jmp mov push inc movsb cmp cmpsl dec inc gs push inc mov push adc bound fs mov lods mov mov push nop (bad) xor mov jl imul jmp dec mov scas lods sti fsubrs test xchg or add popa push repz jnp into xor out sbb mov xor pop sub sbb test pop or mov xchg xor rcr mov sub mov in push jmp rolb add shld xor bsr lea cmc cmc adc btc push add push bt bswap shr clc mov pushf mov pusha stc clc jmp stos add jo push inc out movsl add insl or cmp adc mov or int3 xor rclb icebp adc push pop lock fsubrl loopne mov sbb mov jg and (bad) push ja shll push add cmp stos pusha ss in ss fs fs cmp or cmp scas mov cmp and adc (bad) mov sub xchg scas xor loopne mov bound xchg aad pop fnsave xchg dec into push push test mov pusha stc mov insb in into negl cmp jecxz in jno xor dec jns lcall push pop mov pop mov pop and shr int jns negb sbb mov pop inc xor inc mov cwtl in movsl xor cmpsb cs out lret sbb lcall (bad) das add dec and pop or xchg enter sub push inc je repz fninit pop outsl lahf jnp mov dec lcall test jns fstl sahf pop push out cmpsb out pop adc fistl ss pop fwait arpl imul add pop stc sub xchg and sub push loopne jb add sub pop les jl pop call push push test cmp cld add lret jb and jne popf xlat sahf push bound into jge push xor jne in mov lahf fnstsw pushl stc cmp lea pusha pushf push pushf lea ja clc pusha call les inc negl test rcl cmp pop mov inc sbbl mov or fstps dec mov dec and mov sbb pop shrb out adc rclb nop inc adc dec shrb stc push mov sbb pop adc mov ljmp sub mov stc xchg js fs in add fidivr lock lock in nop push xor aaa jmp adc subl frstor popa dec int aam lods sub fstpt lods fcomps adc cmc je jo sbb cmp ret xchg mov pusha pushl pushf stos call cbtw addl in dec mov mov and xchg lret nop shrl pushf jl pop mov loop into adc dec loop cmp pusha stos lock je hlt add js dec bound rclb sbb movsb das push cli daa jge aas repnz rol sbb pop in rol push aaa ljmp test push stos mov mov (bad) mov xchg call aas xchg and pushf pop jae sbb data16 rorl inc cmove test add push pusha xchg mov pop mov cwtl movzbw movzbw mov lahf setae movb setne lea jmp lea je pusha pushf pusha lea jmp sub not lea pushf lea call pusha add add sub dec and daa pop movsbw pusha mov pushl test clc cmp mov call pusha stos pushf movb pushf lea jmp mov call add clc cmc cmp jmp aaa shll sub xor cwtl cmpsb insb arpl and (bad) dec in sbb imul cli xor mov inc dec lds ja stc sub pop pusha leave or lret dec xchg test loopne into jb push imul sbb or and mov lret out in xor xchg adc add adc inc out push and or mov (bad) loop mov lods and mov arpl dec imul mov mov out pop lods movsbl mov arpl cmp mov (bad) ss mov xlat aad adcl cmp nop inc push jbe and xchg rcll pushf outsb int3 dec pop pusha les (bad) xchg outsb push lods pop lret pop (bad) (bad) lahf mov faddl or aam cmp lds pop push sbb int cld mov fstpl push fisubrl xor into dec jmp push mov addr16 mov xlat xor cmp repnz cmp fucomip pusha and aaa mov pop call stos mov cmpsb push fstl pop pop jno out pop jno pop mov sub mov xchg mov stos imul add in aaa fisubr mov inc jnp jge pop inc imul jle xor test sahf mov sbb aam cmp (bad) xlat and test push in loop jo inc test (bad) movsb aam sarb xchg jl data16 or adc lock jmp fwait xchg mov inc mov or fmull add repz pop mov mov sbb ja cltd cmpsl (bad) xor fnsave jle loopne sub ret mov dec cli inc inc mov jecxz push pushf mov push aam push (bad) nop scas out lret imul sub jno lock (bad) sub mov lret test std inc push ja nop pop add xchg imul push jae fcomip add adc xor out dec fistpll sbb mov jnp mov xchg test jl pop in ret stc lock cwtl jg cli into out cmp das pop xor xlat xchg icebp pusha mov mov push dec cmc jne std imul fnsave jne xchg adc add pop push into adc jle lret sub pop test dec rcll (bad) jnp insl xchg add jns leave cmp xor pop lcall jo sub mov mov lods repz sub test sbb sub and popf sub push push fnstcw daa cmp push lods ljmp cmp xchg mov inc dec jae sbb je dec mov inc mov pop or xchg push pop ds adc xor jo sbb test pusha mov cmp adc sahf js outsl cmc dec jbe dec ds add fnstsw loope out out mov and into in cmp popa inc pop push (bad) and push sub pop clc addl jnp je pop sbb cmpsl dec push popa or jle pop inc in iret fdivl mov jg and sarb or mov sub or jbe (bad) mov in sbb or add inc push in out pop lahf xchg cmpsl pop cmp in test xchg popf mov mov loop arpl lahf arpl cmp jle push in jmp jg or js enter sub mov jmp sahf push mov dec jmp or fisubl not dec mov push (bad) sub push aad or shll mov call insb sbb push lret adc push mov cmp mov (bad) insb mov das pusha loop mov aam cmp cltd mov pop jp push sub (bad) cmp fwait jo and cmp pop std data16 les outsl sbb (bad) and or mov (bad) shr in pop add pop inc pop push push mov xor xchg dec bound add push pop insl xor pop cltd out push cmp add call out nop mov cs stos test int3 inc jbe nop orl push cmp xchg iret into insl rclb or (bad) jne lahf sbb dec fdivs xchg cmp hlt add ficoml int ret or dec mov mov faddp dec mov js xchg mov pop inc out (bad) pusha and push lock lods or add mov and jmp push in addb jg push and xor mov ljmp lods jne jne adc jb lret or xorl arpl jmp les fidiv sahf in and mulb jp push xchg out jge out sub push mov inc sbb subb (bad) int scas dec movsl movsb iret push in mov xchg cmpsl pusha sbb imul andl js shr movsb inc rolb mov (bad) aad or (bad) lods insb mov push mov push fnstsw sub (bad) mov sbb mov push setb mov push pop cwtl lea movb jmp pusha pushf pushf mov jmp mov pop inc scas ljmp ja add (bad) fnsave movsl fwait mov dec dec pop and shrb setp jb fisub sbb xor cmp mov stos roll es insb imul xchg repz daa cwtl dec sub (bad) movsl pop push fsubl dec xor shlb push sub popf sub jg pop sub imul sbb pop mov mov test lock push mov cmpsl sar inc sub mov enter inc and call pushf call call lea jne lea movzbw pusha movb cwtl lea mov not mov setle call jmp lea jb shl lahf bsf cwtl cmp movsbw sbb setle movzbw movzbw lea lea lahf lea mov call movl pushf pusha jmp push xchg mov push xchg call lea call jmp cld mov inc push jne push and xor dec fidiv mov cmp pusha scas scas inc popa inc jge (bad) mov dec into femms lods (bad) mov jno cmp xor dec inc out cwtl out popf pop adc test movsl xor arpl (bad) decl fdivrs popa (bad) ror sub je movsb mov or xchg rol call xor sbb fcmovu jp movl xor les in pop repz imul rcl push cmp cmp and aam adc icebp pusha xchg push les dec mov cmpsb or jecxz (bad) decl and bt pusha pushf test pushl jmp jmp shld bt mov pushf pusha cmpb movb jmp call xor pop mov pop inc (bad) mov and nop push xor sti jnp cmp aam (bad) clc aaa cmp sysret ja pushf jmp sarl dec push pop or cmp jno loope lods sbb inc sti or rcpps push enter ret push or lods sub sbb ja lret (bad) arpl test lds loope and rcrl push sbb clc lcall repz mov pop adc sti cmp xor iret mov jo aam adc repz das mov cmp das jne jl adc lcall add call mov shl lea call pop ret add push push lea jmp dec mov sar rcl add push mov stc xor cmc cmp pushf repnz mov lea jne bt bsf mov call push push push call pushf pusha mov mov push push stos pushf pushf mov pushf lea jmp call push bt test movb pushf lea je clc add pushf cmp clc pushf cmp pusha movb lea jb jmp xchg pop xor sysret inc mov cmp aad gs pop ja cmpsb lcall ret jecxz out ficompl test xchg jne aaa inc mov dec jnp lret cmp xor popf fldt xchg mov inc inc xchg lods sti std pop rolb ror pop push cmc push cli push fldenv jae call movb cwtl movsbl push jmp mov movl pusha mov push pushl pushl ret icebp cmc cli jp pop inc in ja pop xlat out in xor cmp pop iret ja jns in sub and les nop jno aam jb xor mov adc jmp das pop cmp movsb adc int3 (bad) sbb mov les pop and in loop pop jae jnp loop cld cmp and adc sub xor push fldt mov xchg dec lea mov add shl pop mov jg cli ret orl push jl xchg cmpsl loopne fcompl fcomps mov and enter outsl sahf (bad) popl mov adc jnp or sar xor jmp mov lea jae stc pushf call movb lea ja ja setne rcr sub and add inc rcl rol jmp (bad) inc pop aaa fisttpl repz pop adc repz arpl jbe cmpsb pop cmp pop jmp add and or and dec (bad) push jle imul mov and es xorb jo sub xor xchg mov cld jae xchg in cmp mov adc dec mov outsl outsb popa (bad) shlb addr16 icebp cmpsb and sahf sub mov aad ja sbb fst inc aas mov fadds nop out cmp inc or lds or inc dec nop hlt sub cld add scas (bad) dec fwait xchg cmp popa mov pop shr xchg dec add pop push mov decb sub pop test icebp mov out (bad) lret jecxz shrl mov nop sub pusha mov outsl xor cmp aad movl xor es shrb and xchg mov inc inc jle popa movsl push fidiv cmp popa incl rclb mov push jl es mov push pop ds test repnz add pop loop call shl cmp push clc add push sub pushf push push lea jne (bad) repnz sub inc mov lea mov rcr cmc sub movsbl mov shrd (bad) icebp clc mov stc mov sbb test mov cmc push clc call push movb lea jb btc movzbl rol clc shr rol not jmp mov pushl push pushf stos pusha movb lea jmp bt sub bswap cmc test neg lea cmc sub cmc pushl popl jmp pushf jp push or inc mov push and scas sub fadd ljmp daa outsl pop lods popa rorl push icebp cmp scas jmp bound sbb adcl loopne,pt fwait push pop xor pop sahf sbb loopne dec jg add inc adc out jne int je mov call es xor jne sub pop xchg insl aad pop stc je stos mov data16 jae ss mov lcall adc cs sub fisubrl mov and push inc and adc inc sbb push iret addr16 jg cmp xor lret nop adc ja push fidiv cwtl out (bad) nop (bad) xor shrb test out sbb jb sub ja fisubl int fdivl in icebp loopne addr16 sti mov movsl das imull dec int3 and xorl pop mov data16 les mov jp sahf movb sub loopne push xor mov or add dec dec (bad) push adc sbbl (bad) aad cmc push mov (bad) (bad) pcmpeqw dec (bad) gs hlt adc jno dec inc add jecxz ljmp add lock xchg adc je into pop cwtl and cmpsl (bad) in leave ljmp jno cld or ljmp sub xchg jge dec sbb xchg fdivrs es in mov push mov inc ficom nop push and push icebp mov jbe mov cmc mov ljmp fwait xor ja xlat pusha out sbb mov js fnstenv xor xorb mov pop pop cs mov test imul xlat out lods adcl or fnstcw lods adc push or icebp out or dec test imul adc xor mov clc shr pusha call push lea movl jmp lea je clc jmp (bad) fidivr ljmp jg sbb xor mov mov into pop mov ds pop (bad) pop jecxz xor add out sbb xchg lret jae fldenv sub pop pop fdivrs mov iret adc mov mov adc mov bound cmpb outsb xchg (bad) mov sbb inc insl clc ds mov xor mov sub loope in add (bad) leave int3 cmp lcall xchg sbb inc lret jl xchg setb cltd push in jge mov xchg xor (bad) ljmp dec insl hlt push and adc push mov loope popfw je push mov outsl rol mov dec xor gs xor pop inc out mov dec out int3 cld dec aam cli jo test cmc std xchg ja jno sbb xchg cmpsb (bad) jmp add or ja push in or and push add stos push jo lret pop rorl loop pop and xchg xchg (bad) dec inc pop push mov or loop push popf sbb test adc jmp pop stos or aas data16 cmpsb es cltd nop les test inc mov aaa stos sti add aaa gs and add sbbl into rol pop not pop btc or shr mov sub cmp mov pusha call mov mov adc inc aas les movb vmovups fist push outsb cmpsl jmp insl push mov cs lahf mov and stos stc xor test sub cmc push inc cmp pushf ret and pop jns and addr16 (bad) cmc mov push inc inc and dec imul mov lahf stos cld push test clc add into sbb pop inc lea lock imull movsl and dec sbb xor mov out mov inc inc mov call pop push jbe sub xchg test shl stos clc push dec inc std or je adc push inc fcoml add jge sub (bad) xor ret cmp jge loopne xchg xor jnp xor clc mov rcl lock loop lods rolb jmp pop stos cld push mov xlat push or repnz adc inc js fild or fstpt dec imul sarb push sbb imul daa clc jp ds or repz add mov movsl jge cmp lcall leave sbb jo and adcl xor aas sub test and push inc mov add loopne in into or pop mov jns push les in push (bad) mov mov rorb lea sbb jge push adc (bad) int out and sub mov stos rcrl pop stos fidivl pushf push inc add inc push xor cld and mov xchg add xlat jne push (bad) dec sbb ret sti cltd cmp adc test mov pusha orb pop inc xor lret jns or stos or cs mov (bad) xchg pop (bad) push clc divb mov incl popf add push in mov sbb scas daa sub jne fsubr arpl xor (bad) xchg cmpsb rcrl xchg xor push ss push sbb out aam (bad) ret data16 test pop xchg xor jbe rcll pop inc mov xor mov jmp pop stos daa mov cmp mov pop mov cmp sbb or lahf dec xor mov add cmovge xor fcoml jle pusha addr16 jnp negl and fidivl cltd add and add ret add ja or repnz xchg jae xlat incb jmp push inc add rcr sbb inc (bad) (bad) xor loope shll lret int or lock or xor ds mov mov cmp push stc js in cwtl imulb gs aam dec sub pop dec (bad) or loopne daa fidiv or mov inc in and jecxz and test jge loope es and lret adc inc pop (bad) sub cld push je outsb push sbb fcompl mov mov nop jp pop ljmp sarb das inc lret pop stc jb xchg les jno loop imul pop mov add pop xor mov insl gs cmpsb (bad) das int3 sbb fdivl imul push xlat jne xor dec jmp pop sbb pop mov cwtl jg std out imul mov add int mov popf mov (bad) clc movsb mov cmp xor shld (bad) imul in aad add cs loop pop inc mov rcll cmp and cmpsl subl mov jno mov mov dec xchg loop jns jbe movl pop mov rcr dec ret xchg test and fild daa sti lods lahf pop pusha sub push jp and outsb bound add rclb insb into clc (bad) rolb js and inc movsl enter stc cmp outsl cmp pop stos sub sbb mov es in sub loope sbb mov xchg jo sub add ss cmp jmp js sti mov push idiv push dec inc mov inc inc sarl movb rorl and popa loope cli dec cwtl sbb jbe push xlat and addb out jmp ret pop mov cmp pop ret lods subl sub cs pushf inc mov inc cmp inc xchg jl addr16 ffreep cmc mov jbe,pn push cmp adc pop dec ja or fs adc xor and cmp (bad) jp xor clc adc adc pusha movb pushl call push jmp lea jb push cmc cmp call lea lea and clc sar mov rol ror mov adc not sar jmp jno xchg xchg mov mull pusha lea jb ror pushf sbb btc mov bt cmp pusha pushf sub call not mov not pushf pushf lods data16 testl add lea jp push bt jmp lea je not lahf cwtl lea call pusha call pusha or push jmp mov movb lea pushf jmp mov pusha lea jb shrd jmp xchg push lds pop inc lcall jge xor jge jne outsl mov mov adc (bad) pop (bad) cmpsb push imul icebp or fwait sarb push mov ret adc mov lcall dec addr16 fnstsw pushf add adc and ret in insl cmp cmpsb adc xor mov ror lods fs sbb pop adc push ss addb (bad) mov rolb cs sahf cmc cmp fsts jl shl inc loopne dec cltd add pushf mov mov ror movb test not call push pusha movl movw lea jmp movsbw ror sar setns mov bt cmpb call add inc gs gs popa addr16 add test mov pop cld jmp inc rcl or test sbb ror adc loope add add aad xchg mov xor sbb cld jecxz fcompl sub jecxz jg jmp out popf jge pop int3 inc (bad) and sbb inc scas push mov movsb test cmp or (bad) mov xchg jb (bad) mov nop dec gs jmp jbe divl ret jb inc mov leave sti dec mov jg clc pushf and repnz push xchg push cld aaa jne and jne pusha neg rol mov cmp cmp movb cmc add call add (bad) tzcnt rcl add sub sub shr bts rol mov pusha jmp movb pushf movb lea je stc sub call not call jmp mov not bswap lea mov call add inc gs outsl fs gs imul add mov imul dec fcompl in inc enter mov push pusha mulb sahf mov sub cmp aad xchg pop into out jns adc incb mov push xor xor pop or adc mov mov push jae fimull pop adc inc xchg fwait add xor push shr mov xor aad dec int mov mov lcall cs jge sub cmpsb or mov movsb mov cs (bad) xchg mov mov xor push outsl (bad) js fbstp insl das gs repz mov aaa mov pop mov clc mov xchg pushf in lret cmp push lea jb cmp daa stc mov mov stc clc xor stc not xadd mov btr adc add bswap xchg setno setb not pusha pop lea mov lea call pushf pushf adc push movb pushl lea jb pusha clc call call call adc pusha lea jb pushf stc xor pushl test test setns lea jae mov call movb mov pushf mov movb lea jmp add inc gs outsl fs gs imul add push sbb inc pcmpgtb add mov lret sub push mov cmp mov jbe xchg outsb scas sub repz int3 clc jg out mov ret mov pop ret sub lods (bad) lret imul dec faddl mov push (bad) xchg add add out or stc fnsave sbb mov lcall stos sbb adcb sbb mov in test xchg xlat push push push sub sub aam outsl lea movsb loopne mov adcb or mov in push pop icebp sub add and je cmp stc test bt sub jmp lea call jmp jmp jl push xlat and inc ret mov call mov dec sub mov add sbb addr16 std cmp call fs adc mov add push insb lock jnp sbb jnp inc mov add push sbb call js in lahf fdivrl ret popf dec lea imul fsts jp xchg xchg mov push or mov add outsb into test outsb idivb xchg jno xor lret dec mov imulb rcrb jnp movb lea call pushf stc add pusha jmp lea call pusha jmp lea ja jmp cmp movw push lea jmp call lahf mov inc ljmp shrb add dec rol das mov xlat daa pop gs or fcomps push push push mov sub insb mov shrl and (bad) jmp push movsl dec test mov push cmovg sub mov add adc jmp cwtl arpl add sub das lock in and sahf arpl scas mov or lock mov push xor sbb shrl pop adc pop add fs inc hlt push scas sbb jp adc cmp in pop (bad) nop sti pop pop pop mov fsubs sbb add test pushf call movb push jmp rcl not test pop not pop pusha (bad) idivl int out mov setg rcl movzbw not mov shld bsf not mov cmc bsr bsr add movzbl call cmc bt sub pusha cmp lea jae pusha pushf lea jae pushf pushf pushf lea jmp jb lret dec es inc fldl cmpsb repnz xor mov cmp adc mov out inc enter cld mov push in push adc xchg cld es jg test (bad) xor jae sbb or mov out lret add inc icebp mov mov dec leave jl lock mov clc in sbb loopne out sbb mov dec and xchg adc imul mov push mov fmull daa pop inc ret cmp and (bad) lcall and sub into mov fcompl adc (bad) iret fstps flds mov adc inc mov aaa lahf shr jmp lcall mov addr16 xchg jle and sar cs lret leave add imul fcompl fldl2t sub loopne jo lods sbb push mov mov cwtl pop mov jbe mov xor insl mov cli adc inc mov (bad) adc or (bad) or mov mov cmpl jmp lea mov pushf pushl lea call jmp test neg test cmp pushl lahf call sbb (bad) jg pop inc and dec vmwrite pushl (bad) cmc lods ljmp popa xchg popa dec inc rcrb mov pop and jl lock add xor push rcrb movb sbb and add mov sub pop inc jle insb sbb push fdivrs and mov (bad) push cmp fiadd aas cmpsb cmc or and cltd xor imul ficoml jae popf outsb sub loope sbb lcall scas dec adc ret ss les js pushf pop dec and in into inc fldenv cmp test and cmpsl popf popf and xchg pop cmp jb pop les jmp pop cwtl lea pusha push lea jl push jmp not or sub xchg jmp je dec lcall movsb jle sahf fsubrl call adc ret and or push pop aas dec movl outsb in inc xchg push xchg and cltd fldl in int3 xchg enter mov imul cwtl test repnz notb xor cmpsb jns inc lock push test adc insb test aam or fisubr ds nop loopne in (bad) stos out xor stc jnp and push and mov or iret jb or cmp cli cmp sub mov sbb and push pop aas xor push sbb sbb (bad) cld scas inc test aam jno push dec (bad) jmp push fildll push xor cmpsl add jl lret stc fs inc popa loopne jecxz mov add pop lret ret movsl pop jg add arpl stos push movb mov movw pushf pushf push lea jmp lea lea jne pusha not mov call call jle test pop inc btl mov mov sbbl scas mov lret in add pushf mov push mov sti push xlat push clc out mov or mov jb decl lcall inc xchg leave jno sti or pop out or add mov aad adc iret int push movsb jno dec push mov shll jmp cltd push xor add mov adc push sarl jns into out push mov cmp pusha mov clc push test popa loopne pop jne inc pop (bad) stc jbe sarl xchg stos cmp sub shrd xor setl pusha lea add btr shr mov shl mov bt cmp repnz jmp cmp pushf call jmp pushf stos call test stc call clc mov btr add test call xor sbb and inc ficoml jg movsl inc lds cmpl sub cmp flds xor test push xor mov and mov xchg fwait paddusb or fdivs (bad) pop fs sti add or pop js mov xchg sub (bad) xchg push cwtl repz xor cltd (bad) (bad) cmp out jg je rolb pusha popf mov rorb sbb xchg lcall icebp std insl shr sahf stos adc jmp lret (bad) mov popa movsb in je jge aad jecxz (bad) leave (bad) test inc xchg dec inc sbbl jecxz push loopne mov cmp pushf lea jae clc sub movsbw sets lahf lea lea call pushf test bt mov test pushl clc test pushf pushf jmp std sbb inc je fnstcw fnsave cmpsl scas in scas fbstp mov cmp push out push jl rcrl xchg aad cmp lock sbb les xchg out pop std daa cmpsb hlt push out aas fisttpl cmc dec incb jle mov xchg enter out out rcrl ljmp (bad) lcall popa and sarl jo (bad) sti push xor push iret inc test loopne in in fsubs into gs popa aam (bad) ja andl jo sbb mov fwait adc int3 sarb lret out cwtl push or aam or pop sarl sti push pushf scas idivb test lea dec bound inc fmul xor add mov xchg lea push xchg push xor shrl imul bound push add jle pop loop sarl mov inc imul imul and xchg mov xor and cltd call andl xchg ds in lret out or mov clc cli ficom imul fcmovb repnz arpl push xchg jg push movsl pop inc (bad) xchg lret pushf xchg loope push aas psrlq out shrl int xor push iret sbb adc cmp mov sub jmp shrb adc loop xchg popa adc std pop out loop pusha mov mov aam andb dec das movsl adc test jg mov fwait data16 ja (bad) sub cwtl mov fldcw in jno sub in jo jle repnz jb dec add ret ret push inc bnd pop inc sub push pusha insb jb movsb jp jb and push adc scas mov and pop bound (bad) mov lea mov jbe mov cld mov (bad) das (bad) rorb mov mov pop enter sbb xchg jl das push rol rcll push pop cmpsb sbb ss mov pop cmpsl pop cmp fwait std mov mov pop pop xor cmp addr16 jno rep addr16 (bad) push fcoml (bad) xchg loop jp aas (bad) ljmp cmc sbb mov fs rcr lahf adc push lock popa sbbl addl push adc mulb enter into cld fsubs jle sub mov mov ja cmp xchg dec stos sub xor mov scas lods inc stc mov dec or jg jns mov outsb fisttp arpl cwtl pushw ja adc dec sti rorl mov pop loope push add out mov in xchg loope scas loop insl lods enter int3 outsl cmc insb in test arpl imul sbb gs cmc inc xor dec test ss add repnz mov movsl inc mov adc or insb mov in loopne mov inc mov out sbb lods in dec aad repz std js dec aad aam inc mov and jo fbstp icebp dec cmp iret loope mov (bad) divl cli cmp add divb (bad) jbe out insb inc (bad) (bad) negl adc mov mov nop gs adc push xchg mov mov xor int3 xor mov leave mov cmpl lret sbb (bad) xor push mov loopne xchg mov dec or popa jl xchg jge sub pop inc je icebp popa test aas aaa dec fxch xor aaa addr16 (bad) std mov jb scas imul mov rorb fs xchg aam add jbe pop and xchg mov xor cmpsb out jge pop fbstp dec arpl push pmuludq dec ret lock mov jo (bad) jns pop and push sub push inc les scas in mov xor adc sbb enter inc fisttp xchg sarl jno push ret push cli inc fisubrl sub lds pop test pop imul movb mov dec pushf jmp ss xlat add pop inc pop cmpsb cli or or or lret cmp cs bound add mov and (bad) js add ss mov pop mov cmp push cld xor dec xor cmp je mov cs fstps test adc jg xchg sbb in add fist xchg test (bad) adc test dec sarb imulb comiss pop shr add sbb pop jne,pt pop xchg add push clc jnp sub (bad) dec out sahf mov and repnz scas sub lea cmp repnz daa mov jno repz int3 sbb pop inc inc dec inc fldl sbb sbb in xchg pop leave inc sbb dec sbb in loope xchg insb dec jbe lock into cmp mov adc scas jl shr pop pop mov les lods xor stos cmpl sbb mov orb pop jb mov (bad) out sbb push subl sahf xor aaa adc mov clc mov mov dec sbb cmp sarl sbb xlat cmp fs mov fisttpl xor inc and (bad) lea je pushf clc call pushf lea jne rcl sar bt and sub btc sbb lahf mov test (bad) lock rcr add (bad) lock mov cmp test call call lea jb xor aas lahf mov cmc bt call cmp sub mov pushf seto mov pushf pushf stos pusha pushf movb pushf lea jmp push (bad) mov pushl daa pop cmp lahf lret fbstp ja ljmp ljmp rcrb ret fisubl cs push test mov in lds fcoms scas push sbb cwtl adc shrb sub sahf sbb ljmp xor jb lock push fidiv push mov cmp push inc or (bad) mov dec repnz jl cwtl stos into inc mov jne dec ret loope scas (bad) insl xchg xor push mov daa enter test out or jmp pop push and xor inc test xor movl cmpsl leave leave (bad) in sub mov push adc imul daa clc pop aaa iret aaa pop mov push pop mov fs lock add sbb je mov sti pop rcll (bad) mov out or ret adc scas fcoms lods cmc or inc popa mov xor xlat inc inc imul xor mov mov push call test lcall sbb divb mov jb mov fiaddl stos sti push lcall cld cli setae inc sub sub lods xchg pop add jecxz xorb stos pop or leave push jo ljmp jbe adcl sbb popf iret bound movsl cmp sub int sbb or mov stos xchg jl jne cmpsb in dec pop xor jo add push jbe jns rclb sub sub lds xor out or jno loop sti in icebp inc sarl sbb or sub push cmp push out cmpl in cmp iret jbe sub fisub jle xchg in or dec lea jnp fistpll cwtl inc in mov ss inc aas push xchg xor test lcall subl pop sbb sbb cmp mov xorb ja and or test xor stc jnp std xchg das push xchg ret cmp ja inc cwtl dec mov mov les sub fwait andl mov cmp or sub add in inc les cmp xlat add pop inc pop fmull adc rolb popa mov in xor test fdivs int3 cmp sub mov (bad) out adc cmp xchg insl das push repnz or loop xor fstl sub clc mov dec jmp ret sbb std ss mov mulb fwait out sbb enter iret dec pop sahf aam cmp insb cmpsl pop sub roll mov sbbb push fs jne notl jle rcrl lcall push jmp sbb negb dec (bad) pop popa or fcomps jne pop call pushl push mov push mov pushf pushl ret cmp pushf mov clc bt cmp pusha call cmpb pusha push lea jne mov shl mov cmp add cmc stc movzwl neg mov clc add jns cmp mov cmc stc test push push push lea je test call movsbw not ror bswap not not bsr xor bswap mov xchg mov lea not push pushf lods clc cmp pusha not call xchg jmp ds xchg xor inc enter jnp sub or sub and shr push sbb xor jp ficomp ja,pn nop rcrl pop stc cmp lods xchg cmpsl data16 into sbb jle push and pushw sahf rolb es mov ja gs int3 pop into outsl xchg or sahf (bad) int3 xchg mov jge andl sub nop mov inc dec test loopne lds or jo mov incl in xor sub add pop push lods sub outsl xchg cwtl adc (bad) in inc cli pop jbe cmp das pop push mov leave not call xchg outsl inc (bad) xor inc lahf hlt and xchg hlt push jl jl xchg test bound mov scas inc imul pop out xor sbb inc cwtl add push xchg sub pop mov jl push push out mov or negl addr16 aas adc or lock or cmpsb inc mov sub dec scas pop sarl mov mov pusha aad and lcall gs push jp adc (bad) in or jbe std cmp repnz dec cld inc divl push jg mov jmp inc ljmp pop inc scas les movsb push pop mov js and adcb test push lret mov cmp dec fistpl add adcl test adc cld lods pop sub shl and mov (bad) clc cmpsl push adc push pop in shlb insl lods push fmull lea mov shll push stos repnz jb hlt mov and nop inc jmp push push cmp ljmp inc cld dec (bad) push lods pop stos incw fadd (bad) add pop ljmp pop jbe enter adc xor pushf stc bt lea sub push cmc stc test xchg test push cmc rol ror push lea adc mov add not shr mov stc add push jmp pushl popl mov cmp movb call aam adc inc lds push pop jmp mov add leave (bad) psubq mov adc pop mov pop repnz je xchg call arpl pop arpl jbe aam rcrb fimull mov addb adc inc fistl popf stos popa adcl sub push adc int3 or or push adc cmp cmp and xchg in fdivs (bad) or lahf in fs hlt cltd pop popa add jae leave xor cltd cmpsl test jbe out je cli sbb or jb movb mov stc (bad) mov inc lock pusha movb pushl lea jae bswap bts rol jmp pushf pusha stc cmp or movw jmp push mov push lea push movl call cmp dec mov shl shr mov and sub mov pusha jmp repz outsl cmp inc stc repnz clc push in into sub bound lret lds iret ud2 dec scas mov arpl inc aas cmp mov in and (bad) repnz xor mov dec jl and popa mov jns mov inc mov (bad) imul inc cmp adc inc pushf xor mov cmp ja into cmp cmp push stos and aad addr16 hlt dec xchg mov loope mov test mov xchg scas push or push sahf inc cmp (bad) jle in in cmp ret mov les add rol movsbw bswap setae mov (bad) lock mov bt repnz pushf pusha lea jne pushf pushf lahf movzbw movb setp bswap mov setl pusha pop movzbl lea call pushf lea jne add bts movsbw xor cmc mov stc seto rol add and sar neg mov pusha test pusha push pushl lea je pushf call pushf add pusha pushf push movb lea jmp (bad) out xor cmp fs mov les mov clc sahf jl inc push lret in add mov adc mov fdiv (bad) sbb dec mov js (bad) sbb xor in and xchg jno push repz mov pop and sbb fimul xchg mov sarb icebp push adc pushl in dec pusha lea jne cmc bsf jmp outsb test cwtl ds inc (bad) lods outsb cmp mov mov call loop xchg push out bound push cmp int3 sub push lods sbb icebp mov loopne xlat sub sbb dec int add add ja sarl adc aaa daa inc lret pop jmp mov jmp test mov fcoms sbb push mov scas ss xor (bad) cld pop popf sbb or pop pushf sbbl pop mov inc fsubr dec test popa push aad test scas iret mov mov dec scas or xchg js (bad) repnz sbb pop mov icebp outsl test outsb movsl jl lds ds inc add leave cltd pop pushl xor sarb push orl push jnp js loopne movsl pushf mov test ss testl insl movb stos repz sbb pop loopne mov arpl adc lods arpl adc mov mov sbb pop test fwait loope scas into dec inc mov (bad) xor xchg pop mov loopne out addr16 cltd add imul add stc fsubrs je outsb mov int3 dec (bad) xor mov mov (bad) jmp jle jle pop ja sub or mov xor and mov push fs push std jg pop jno or nop stos lea jmp push mov shr imul cmp jae mov mov sub shr add call clc pop ret push mov pushf pusha mov lea jmp movw pushl lea jae aas movzbw pop dec lea lahf ror pop movsbl aad pushf stc mov stc bts neg shld cmp pop bswap mov pushf lea jb and dec bt cmp lea lahf push jmp mov movb mov pushf lea call pusha lea jg pushf mov pushf pusha lea jmp lea call test add rcr cmp pop movzbw stc cmp sar pop cmc cmp pushf push sbb mov jmp mov popa mov icebp mov ficoml in fadds clc sbb pop mov xor hlt inc pop mov jae ja inc pop test sbb xlat adc sarl out jo inc mov mov in and cltd mov test ret sbb stos mov push mov bound pop (bad) xchg in leave sub add push inc daa dec orb std decl sbb xchg cmp dec fnstsw movsb cmp (bad) psraw js dec cmp cmpsl mov pop int aam loope insl cld mov sahf sti lea test fldl and cmpsb mov jnp lcall mov ror cmp or xchg add aam call add sbb cmp and mov sub pop push sbb jmp mov out test or pop shrb ret rol jne adc or mov xor sub xchg and daa lcall cwtl bound or jle inc ret movsl sbb stos mov lds mov (bad) ds sbb fwait sub or add imul or pop mov lock fwait xor sub pop jmp jns cmc jg push test add pusha sti sub ret mov cli cmp inc out cmpsl addr16 jmp and out xchg jae pop pop into cmp jle and push rorb rorl dec rolb inc in or inc and push mov add dec mov adc cmc mov clc fidivr enter adc xchg (bad) xchg stc (bad) pop (bad) hlt mov dec iret sub sbb inc test mov pop subb daa addr16 lods pop imul leave test xchg jmp add js in les mov xchg movsl mov and push mov (bad) icebp mov pusha jmp pusha pushf pushf lea ja bt sub rol movsbw add sete sub sub btr mov jmp dec call pusha push push lea jae push mov mov lea jmp mov pushl btc mov shl rcl btc sub pusha mov lea shrd shl ror push mov bt test inc sub adc cmc shr and lea mov mov shl mov cmp call pushf push pushl mov pushl stos movl pushf mov movl pusha pushf lea jmp dec shl inc pop inc gs add cwtl scas je insb mov cs mov push test jp dec push xchg pop sbb bound mov jae pop push jns xor or and movsl add or mov int mov pop sub sti outsl pushf lea pushl jmp mov lea jne pushf pushf pushf lea jb adc jmp mov not cmc shr jmp clc shl clc mov cmp cmc cmp mov call pusha movb lea jg jae xchg bsf inc or mov or push mov adc mov call lea jb cmc aaa cmp setge mov jmp pusha push movl jmp pusha movl pushf jmp sub lea jl repnz pusha pusha lea jne sar cmp mov shrd shr add sub stc inc bts test mov bt sub stc cmp cmc pushl test cmp push call not jmp inc push cld jl pop inc xchg push adc loopne lock push mov cmp push lret fs add sbb pop push add jne sahf xchg add test xor ret cmp jecxz cli (bad) jnp lret jecxz lret xchg inc into sbb rorb cmp pop movb or mov pop cmpsb ljmp adc push sbb pushl xchg enter adcb add mov xsaveopt movsl scas test (bad) jnp sarl add sbb lods inc pop inc repz mov rcrb (bad) test cmp add cmp cmpsb je push outsb mov mov inc dec inc mov in cmpsl jo push sbb fildl sbb cltd roll test outsl rorb sub and in cmp ja mov fisttpll aad dec jb lret pop pop imul and das (bad) es ficompl mov or pop sarb cmpsb or stos nop nop dec add xchg lds add out cmp jecxz cmp sbb (bad) ja sub lea push das hlt inc and aad mov xchg testl sbb fdivrs bt bt sub jmp test es add (bad) out test adc inc add (bad) dec push cld (bad) rcrl sub add call rolb sub add enter jle xor inc add add cs out add inc add clc jecxz add inc add add inc add inc add add mov add inc add add repnz xchg xchg out add inc add out cmpsl sub push cld rcr sbb aaa sub add xor push sub add add jne inc add (bad) mov neg mov add add mov sub add movl inc xor add push cmp lahf scas mov add xchg or in jb xor add mov add inc add add (bad) mov add lock pop mov inc add cld lret insb cmp pop fnsave xor add xor or xor sub add call mov add mov fildll push nop sub inc add ljmp imul add idiv xchg (bad) xchg sub add clc xchg std mov inc add fsubrl mov or cmp inc add mulb dec jb (bad) cmp inc add call fnstsw add adc inc add add dec dec inc movsb test xor add icebp cmc popa cmp fwait inc xor add pop pop mov xor add adc clc xor inc add (bad) pop sbb pop jge sub add sub jbe sub add dec add xor add stc je pop out adc inc add rorb pop mov popa sbb inc add mov or add call push push sub add out mov xor add push ret out sarb inc add iret mov pusha ljmp inc add (bad) lods lahf xor inc add add or nop lea sub add aam mov or cmp inc pop inc lret xor scas push ret mov pop push movsl jbe jp adc jle xor xchg mov arpl mov imul test es mov cmp outsl cltd shlw arpl mov fnstcw dec jno (bad) and into shr cmp push cli aaa mov (bad) xor xchg imul pop lret pusha imull pop xchg sub outsl shr aam call jnp out adc add jmp (bad) subl push sub push add cmc sub clc pushl popl bt cmc pushf cmp movb call pusha xchg pushl call mov jmp int out inc pop inc ficom or or div repz inc lret lret jmp fstpt dec ret fsts dec dec sbb xchg add rol push sahf mov leave or repz ret xchg lcall fwait clc ss das in cmpsl gs mov outsb jp in sub fsubrs out add mov data16 (bad) lods mov mov enter mov mov pop movsl pushw mov sbb mov xor mov lds pop mov dec sub je (bad) (bad) popa push popf movsl enter repz fnstenv inc cltd dec in ss jb and dec inc popl mov cltd (bad) out pushf fistp aam push (bad) cmc je inc test and jbe cmpl int3 pop mov mov push xchg xchg mov xchg out sub jg and xchg in cmp nop ret xor pop mov fwait cmpsb jnp jp enter xchg mov add in js sarb xor pop jle and fildl adc cmpsb jne cs stos xlat lds std push jb stc sub (bad) xor or sbb or pop adc fldt jl cltd pop rolb jg les shrl insl (bad) ss popa loopne int3 mov pop sbb inc fidiv (bad) divb xchg mov add repz and xor push mov xor mov mov jo jae and fstpt sbb inc pop mov into sbb xchg fildl push mov push cmc (bad) psubsb pop inc aaa pop mov ljmp dec xor adc xchg xchg das pop cltd and fs mov mul ds lret loope add jg and nop lea inc inc mov je subl inc lock mov out vpmulhw xor cs (bad) cmovge or xor mov jle xor insb es js out and sub jmp ror aad add and sbb push lock mov sti dec in lods test stc test push xor pusha jmp push or les inc rcrb popf add ja push daa jno int push stos mov leave sub shrl xchg jns addr16 fs into dec cmpsl mov or adc jno call arpl das xchg cmp dec lcall xor jns add inc hlt and adc push pushf mov (bad) pop push mov fbstp xor fldt ljmp imul out push add cmp lods or pop in mov imul mov aas pop lds xlat pushf push mov jmp xadd lea bsr aam ror rcl sub lahf bswap push bswap setl push lahf push movzbw movzbw pushf pushf mov cwtl pop lahf push bswap movzbw mov call call add mov call add pop ret jmp jmp mov pushf push pusha movb pushl ret xchg push movl jmp pushl pushf lea ja adc cmp or sub rcr sete add cmc sub mov jmp push movw pushf movl pushf jmp mov not bt shrd call bsf data16 repz jmp call push movb movl pusha pushf push mov lea jmp pusha call movzwl add pushf bts mov pusha call cmc cmp pusha add pushf lea jmp movl jmp cmp shl cmc add pushf jmp call je mov dec pop inc mov sbb xchg xor cmc icebp add inc ja addr16 shlb sub icebp sbb jmp arpl fsubl xor fcomps mov mov cs scas cld rorb xorl pop xor ret into std rorb jb xchg in dec arpl mov pop push lahf pop outsl int3 (bad) cmpsb lds mov mov push fnsave sti mov (bad) test push dec fisubrl jl out pop repnz ss xor pop dec xor mov iret sub cmpsl stc sahf (bad) dec data16 sbb outsb int3 jg data16 sahf xchg test xchg sub xor es outsl ljmp dec pushf aad cmpsl mov and push movw lea jb bt cmp cmc stc cmp jmp pushf jmp pushl call negb sub in movsl popa mov stc cltd out movsl aad jmp mov mov test nop or loopne out dec ret mov ja xor inc mov jg movl sti fdivrs fnstsw mov add jg les jmp dec (bad) shrb dec je pop out ret loope mov pop xor pop fstps pushf lret icebp cwtl repz dec mov enter (bad) scas ja lods sub mov push outsb pushf sub and xchg and xlat fidivr subb int3 jg daa jp pop jns add fwait stc inc movsl add ficomp pop inc dec (bad) icebp pop mov test es push dec fs dec push cmpsb pop int3 aas sub mov popf pusha adc cmpsl bound xor adc cmp push adc repz (bad) (bad) addr16 jne xchg sarb pop jmp add insl xchg scas lret je gs lea lea push lret jg add add mov pushf in or in push popf call adc lcall inc mov nop push dec shr lea sarl jg fnstenv movsb aaa jecxz jmp lea call cmp stc mov cmc clc cmp clc cmp push movw pushf lea jb xadd bsr stc mov sar data16 repnz ret add add jmp add jg add je or test mov shrd bsf mov test bt clc add call bswap lea pushf lea call cmc cmp pusha push call add dec outsl arpl inc insb insb outsl arpl lahf pop mov jecxz cwtl rcrb xchg mov shll sub push mov cli test push ficom sbb testb addl sti shlb push sub imul inc out repz aas stc pop mov (bad) aas xlat jl or rcrl push in jae (bad) push insb cltd loopne lods pop sub (bad) int3 movsb mov arpl rcrb mov pop stc and lock push test stos loop adc sbb inc inc sub and and mov mov sbb mov int3 movsb mov std rcrb hlt xchg inc enter push bound and mov inc insl fisttpll cmp dec or les insb xchg xchg xor push and int3 lcall cld lods pop in dec lods or pop adc push xlat insb push repz mov (bad) cmc lret mov fcmovb test lret fidiv and addr16 ficom (bad) jmp (bad) add push stc dec idivb clc aas repz mov pusha lea jb mov shld mov bt jmp jae lea sub mov lea call test fildl js mov into in es out hlt repnz test and lea pushf sarl pusha loopne nop fwait mov push pop out push inc dec xor push jae lock scas pusha test adc popf sbb and and xchg mov push and cmpsb lds dec sub loop aaa and dec stos std sahf shlb xchg (bad) out dec cmc mov iret out jl stc dec lds add js repz imulb push mov cmpsb sub pop ljmp out out inc mov sbb jne or sub cmp sbbl leave sub sti mov movsl stos mov push mov out aad sub inc (bad) push and sbb clc push add int3 inc lea mov add fsubs add push jo cmp in mov (bad) inc cli dec fmul mov sahf out sarb ret adc test mov shll pop xlat pop in xor or lock dec lret push inc inc inc fst movsb mov jne clc ljmp and jno sbb out xlat bnd mov in es fsubs pop cltd sarb cmc aaa lcall cli test pop mov ljmp fs je test bt push jmp rol sub pushf lea mov movw pushf movsbl mov movw movzbw mov not pushf call lea jb jmp call add dec jo outsb push inc dec popa outsb popa addr16 add xor pusha call test cmp push pop inc jnp adc jo inc mov cmp fs push in bound add or push jno fcoms push shrl cmp in fchs and sahf hlt adcl pop or push mov popf push mov mov xchg imul je enter push imulb rcrb sbb xchg test mov cltd mov in xor add pop clc or mov rcll dec stos cmp pop inc jmp sub cmpsb and mov scas fimull test es std test xor inc jbe push pop mov jns roll das adc dec mov mov pop inc aaa cmpsl push mov pop (bad) xor mov lods push add mov xor jnp fsubl in subb mov fiaddl or lods ds in cld push ret aas lcall inc pop loopne xchg mov (bad) aam cli scas push push cmp ljmp std hlt fimull pop and sub jno data16 dec push or insl mov push sub jae adc ljmp hlt sti push dec xor cmp mov out cltd testl jne hlt loopne and data16 mov lcall iret xchg mov xchg rol mov lret aas movsl add adc mov lods sbb data16 insl fwait out dec (bad) xchg mov push cmpsl lret out das jmp push movsl das mov xor pop cmpsl fidivrl inc scas xor sbb test aas jmp pop lret stos push push dec lea jne sbb dec shrd xor mov mov add rol and add neg mov push clc test jmp fldt adc movsb inc les test push pop push pusha add outsb hlt sbb adc fsubrl and dec adc mov movb mov jne lods repnz iret inc (bad) in jbe push mov movsl push jp insl or jns and cli mov notb inc loop push in push repnz mull int and and out test xor push and mov xor cld sbb outsb ss sbb xchg pop test mov (bad) (bad) cmp cltd je and roll cmc inc (bad) fstpl adc push pop inc pop sbb cmpl ss pop pop push bound scas ja inc (bad) aas sbb ja popf inc or scas add cmp (bad) and mov pop dec xchg ficom dec mov or pop xor pop inc jge mov nop sbb test lret cmp xchg rcll or loope jl add sbb sub in or mov test loopne add sub mov mov ds (bad) mov loop push sbb mov mov push pop inc push scas rcrl xor jle xchg sbb inc ret mov cmc stos fldt subl pop xor mov jae sub cmp and xchg mov in xor (bad) sarb das push pop lahf les (bad) mov in out icebp not int3 adc mov (bad) xor sbb or test test aad dec rclb sub dec mov xchg rol sub cmpsl lret jno mov jae call push xchg mov inc push jb in sub xor mov movsb aas (bad) pop hlt pop or sub lea not xor xor lea jmp not pushf mov push movb mov push pushl call in pop fcoml inc sub fadd push fdivs dec dec push stos sbb dec mov xor stc int rclb jl push sub pop add insb pop mov lret push xchg pushf in xchg lds aad jbe roll sub sahf sbb mov movsb adc inc test insl inc pop (bad) add test sub mov (bad) (bad) cld sub adc or pushf or cmc pop mov loope sti xchg subb lods and or dec call xor xchg aaa mov fisttpl add mov lea je cmp sub pusha clc call push call add dec outsl popa fs imul add pushf lea jb shrd pusha add dec mov neg sar not not pusha adc (bad) icebp add (bad) adc pushf add jmp das iret mov push outsl jnp das aaa pop mov (bad) cmpsl xlat aaa xchg jg jno mov cmpsb pop jmp jp push inc ja aas test xchg sbb iret aaa cld jno xlat sti (bad) arpl push inc es xor lahf popf xor sub push mov inc jo xor ret repnz push push ret in gs nop (bad) xchg cmp in popfw iret jp jge xor jge xchg enter cltd xor inc addr16 sbb ret push (bad) mov adc test pop inc lfs lret int pop xchg xor mov and lahf pop lret repz mov inc adc fistl fdivs mov cmp imul dec cwtl push pop and out or ror lods leave mov adc ss xchg xor aaa outsl xchg or out les push inc mov pop loop dec idivb and mov mov jo sbb outsl add mov jmp ljmp ret xor ja mov shll es data16 inc dec insl fisubrl dec es pop inc lods (bad) aaa mov das subl negl mov shl sbb jo fwait addr16 xlat and mov mov or jns cmc cmc add lea cmpsl pop wbinvd or xor popf divb pop pop adc stos jl bound cmp aad pop and in and mov das outsb std and fsubrs dec aam or and mov xchg pop repz mov ret test sbb jp negb scas xor (bad) xchg cwtl fwait xor les mov dec imul int3 in push pop rcll pop repz xchg pop mov enter mov inc test je shrb xchg push inc outsl mov dec pushf rcrl leave call mov test (bad) call daa or xchg jae sub jl adc js testb and and lea inc inc dec test cli jno dec loop add loope (bad) stc sarl push dec mov xchg mov xchg mov dec push pop out xor repnz pop push inc dec orb cmp out pusha sub dec fsubs int sar inc inc jg fnstenv sbb inc lret pop int3 cmp sbb out movsl jb push push cs cmpsb mov cld jl ja mov cwtl fisttp push or or in ss dec das cmp (bad) clc movsb into mov adc fcmovne mov fdivrp pop push scas mov (bad) icebp mov sub jle sbb push push loopne adc repz (bad) or pop in jnp jle xchg xchg push cld and fcoml jge jg jmp mov je jle jns pop pop (bad) dec sub cmp cmpb aam sbb pop mov test (bad) (bad) mov mov std jge fnstcw or inc and adc gs push xchg xlat lock (bad) mov int3 cmc cli cmp dec movsl int3 lods pop or stos add push and adc pusha mov sub insl clc cli adc sub xchg mov mov (bad) (bad) pop pop leave mov icebp pop push inc in mov (bad) or mov inc cmp xor ja mov or outsb pop sub js mov es rorl fsub adc lretw popa pop inc inc out or jge mov jg sub mov adc nop movsb xlat mov or loopne fidivl out xor xchg (bad) ds arpl repz call mov sti insb inc divl lahf xor repz pop test jge mov addr16 push cmpsl (bad) lods sub in add push dec mov push push inc mov out lcall movb xchg pop je push mov daa mov test lock jge mov dec inc mov mov aaa hlt repnz (bad) scas and gs xchg movsl out lret aad inc mov cwtl out movsl in xchg sub dec cmp clc or lock icebp add rcll inc popf scas cld fcompl sbb mul xchg cmp mov stos and popa out sbb repnz lahf pop push jnp mov sbb xchg sbbl cltd into loop mov xchg and dec push xor lds js dec pop pop fiadd sbb sub xchg call cmp setp mov aam cmp (bad) call pop cmp (bad) outsl or mov adc insb mov loope and cli adc rorl in dec or xchg add cmpsl in pop iret sub mov xor data16 cmpl addl adc fstl ret mov cld vmovntps in adc add push outsb lea sub push mov lcall scas or fadds ds xor fsubrs into (bad) lock add loop jo push pusha mov aas jecxz cmp push sbb or pop mov jo adc das jne imul insb (bad) pop pop adc cltd fstpt ffree les pop ret es jnp cmp sbb enter outsb stos mov sbb popf xor lds repnz lret inc jbe dec push rorb xchg add cli push jns (bad) sbb adc or in repnz pusha fnop loopne push jno inc out dec loopne push cmp icebp jae punpckhwd fsubrs pop (bad) xor sbb scas (bad) repnz call xlat cmp lahf cltd adc pop and jb sbb adc lcall std dec mov cld push xor mov xchg inc mov pop lea add push loop dec pop push lret and xor dec or negb (bad) sbb xchg sub es mov push test jne scas cmp imul mov jbe push mov cltd idiv out sbb scas mov push cmp fnstcw flds jns inc sbb fdivrp xchg (bad) icebp fsubr inc and mov loop ret mov cmp in sbb jno ja pop ret stos jo mov inc add repz lea insl mov push aas jb sbbb xchg (bad) jl mov inc imul xchg repz mov (bad) je pop cmp lcall dec adc lds add and jns cli cli lods jecxz xor js mov (bad) daa ret pushf cmp pop dec push mov xor xchg addr16 idivl inc mov sub xlat mov lret test xchg cmp or mov icebp sbb xchg jl add pop cmp jl pop data16 fnstcw (bad) fcmovnb mov leave mov and jmp mov std mov add rorl lds mov aaa or (bad) xor mov lock loopne fisttp jnp (bad) jo and add jbe and insb (bad) in fidivl mov adc loope daa ret ljmp xchg ss sbb xor mov daa (bad) nop lods data16 stc mov jmp sarb cmp sti and inc push pop adc sbb mov adc hlt les and cmp cmp movsb mov aad out adc push push sub inc aas call stos pop push lock out ret jle out sub and adc sub xor scas or lock out cmpsl icebp dec test (bad) out leave lahf loopne xor fdivrl xchg sbb (bad) (bad) repz loopne lahf mov xor push adc enter insl push ds enter arpl scas int3 loop jnp dec in mov mov mov pop hlt lahf inc jnp fmuls test sti jb fsubl mov sub mov mov fldt cwtl add ds out xchg dec fidivrl jge push push es mov (bad) jno fdivl (bad) leave mov and jge (bad) mov push fldt aas mov or lahf mov dec jo sub dec lods stc (bad) jl inc pop sti into stc popa adc idivb jno dec xchg testb push inc fidivl jle,pn mov dec (bad) cmp addr16 xor jl pusha xchg cmpsl mov lods nop ss xor sbb push lea or lahf (bad) mov adc js into inc sti sub add pop (bad) repnz test pop jnp jbe jle jae jecxz xchg stos dec mov mov push cmpsb sub cmp scas push cmp dec leave (bad) jo dec cmp xchg jge sub sbb aas shrb (bad) push cmp push rcrb inc add xor xchg lret enter xchg mov nop add dec jle lea and in mov and (bad) push nop dec data16 inc lea lock mov (bad) xchg pop je cld scas pop inc add icebp xchg fsubs cmp pop arpl jecxz leave cs test dec lea jo insl fimul mov sub insl in fs (bad) mov (bad) mov scas mov add lods cld add push lock test mov sahf jmp cltd push mov push jnp and mov xchg mov jle add mov mov subb and lock or scas sub fistp inc (bad) add mov mov fs lret fcmovb jle (bad) cmpsb mov inc inc sbb into xor call sbb out pop adc and dec int3 movsb sbb push inc jo clc sub dec pop into sbb cmpsb rcrl rcr (bad) or add adc testb push iret pop pushf sbb adc xchg cld xor mov (bad) jmp insl stc and cmp data16 sbb mov mov lcall gs xor in je adc pop xchg scas jle xchg dec ss (bad) outsl mov arpl fstl data16 bound mov nop pop pop stos mov dec js jg inc jb fsubrp es cmpsb push shrl fisttp lds sbb out lret scas int3 add in int (bad) repz ljmp inc test arpl xor sbb (bad) repnz aaa pop (bad) leave sti xchg mov popa jnp arpl sub std imul cli xchg sub pop mov fbstp jnp (bad) repz mov xor int inc popaw dec xchg push xor mov or mov rolb and test jmp sahf cmp ja das fnop test jae adc aas (bad) (bad) test mov adc sti pop mov loopne int3 jp pop shl inc insl add rcl in mov pop mov mov jg mov push lcall gs (bad) pusha jo dec out test jnp out leave cltd jecxz out arpl (bad) dec add inc or lea (bad) mov insl cmp jae jno xchg sahf dec jbe fs pusha (bad) pop mov jl jne sub scas ficoml and jge push sti jp movsb add push push js mov insb add movsl xrelease (bad) mov lock cmp jl xor movsb insb xor (bad) sbb jae jbe or inc or add or push scas mov mov rcrl sbb ficompl rcr xor imul (bad) pop cs int3 mov cmpsb or push mov aaa jo in sarl xor fimul lcall add xchg sbb fisttpll mov pop iret pop mov push dec sbb lods cmp jge sarb inc out cmp cmpsl cmp mov mov aad out push (bad) cli sarl (bad) movsl mov cmp add and dec (bad) loopne mov xor divb data16 xor out xchg mov std push out jge adc aam push push scas leave iret out mov std out (bad) jmp cmp ja,pt ja,pt xchg gs adc sahf fwait iret int jp xchg push icebp arpl cmp pop pop cmp into test pop inc pop xchg imul mov sub ja or jp sbb add and mov cmp fist popf ja movsb inc or mov mov mov sahf cmc or pop pop cmp mov add lret add lods rcll cmpsl xchg dec pop sbb sbb xor sahf sub outsl mov pop sbb pop outsl dec loopne adc fwait add call lods push aaa jle push inc jne out stos inc inc mov fimul mov in xorb lret fdivl mov xchg jg or icebp sbb divb rcrl xor nop lret dec adc jg mov fnstsw xor dec cmp xchg pop mov cmpsl ljmp ljmp out xchg lahf sbb psubw mov and add adc and jp pushf cld sbb and xchg in inc ud1 out mov sub xchg fdiv push sbb push pop cwtl xchg mov fbld mov scas sbb mov popf xchg in jno mov push rcrl add jecxz jns adc cmp xor add sub mov push adc int3 xchg das in mov js jb int mov je xchg icebp (bad) out pop mov xor xchg push jnp repnz addr16 imul ret aaa aas or push cli sub repz mov dec push xor test xorl not mov stc or loope cmpsb mov adc icebp pop js xor add inc loop je movsb xor loopne int add add adc insb fs mov xchg ret lods imul dec aam (bad) leave mov (bad) clc mov xchg xor adc divb push sbb xchg rolb mov sti ret movsl sub and movsb enter inc add add inc repnz fildl mov iret rorb push inc or (bad) inc test aaa fisubr mov cmp push popa test int push aam hlt add repnz fistpl sbb push jno push es imul jge (bad) fadds xor adc imul xchg test jg pop mov sti push xchg pop es ret dec call push cmp fwait inc mov push inc mov and push sbb movhps scas mov outsb jbe rorb outsb fmulp push iret loope mov jb sarb cltd out push mov push adc test push cmpsb or add pop adc adc int mov mov std cmc bound push (bad) test push mov sbb lahf and dec test leave pop test xchg pop jne mov int3 dec sbb adc fildl out fstps mov dec stos repnz in or imul test adc jp fisubr sbb arpl cltd pushf push nop ret jmp loope and xor mov test decb cltd push imul lock adc add add pop inc and mov lock sti pop add das push jo icebp fisttpll mov lea in leave mov mov and fisubl nop lret push jge xchg int3 js call adc jae pop cmp push sbb inc ds mov in test imul arpl rcll lods mov fist sbb pushf adc mov xchg insb pop xchg sbb mov aam mov pop outsb loope push pop mulb xlat test dec jge mov xchg sub imul cmp dec pop mov adc adc push adc (bad) xorl fbld inc push test mov imul fwait jb hlt sub jno (bad) xor (bad) cmp lods addr16 stos stos adc sbbl push rcl in cmp lds pop mov mov push inc fs iret push push rcrb mov jbe xchg mov test cwtl out pusha push data16 loope jb addr16 or jge mov pop sbb lcall sub shrb cmpl stos sbb imul xchg pop sahf mov ljmp std dec mov fadd test aaa sub fdivs (bad) lock jnp (bad) shll push loopne jg adc lods adc imul sbb dec call cwtl push fxch jmp lods sbb adc (bad) in (bad) stos dec mov adc (bad) punpckldq test daa cmpsl sbb int3 push cmp test and sub sbb pop scas shl and and clc (bad) aaa mov mov pop push insl jns jle inc loopne add push fcomip leave cs jecxz imul insb push dec pop cmp sarl mov repz and insl mov push cmp or xchg push cltd loop movsl dec xor insl ret adc jae xchg out push jns xorb dec inc clc jnp sub (bad) jne jp dec pop cmpsl hlt loope out xor in faddl cmpsl push xor lea bndldx pop jbe and mov or add cwtl xchg loop add leave mov mov dec in pop outsl (bad) add push or cmp dec cmpsb pusha or mov dec add in add pop xchg icebp cmp sbb cmp addb xchg inc outsl loope addl aad mov nop or repz mov dec xchg push ret inc dec push push in (bad) mov push test jae addr16 ret cmp arpl data16 adc push rorl add inc test and rolb xor movsl lods cli push jbe mov mov sti (bad) loope mov rcl push out xchg pop xchg fsts popfw mov fsub adc out pop push int inc or push cmpsl dec outsl mov data16 adc jno push mov into jp scas dec movsb leave fsubrp xchg dec jbe sub lret packuswb push dec lcall bound incl outsl bound icebp push mov cmpl scas mov icebp pusha xchg decl sbb mov xadd popa clc je mov xchg jae mov sbb fdivr mov cmpsl inc mov fistpll daa cwtl push js jne inc incl mov daa mov cmp mov xor std adc pop mov push pop sub cmp data16 arpl mov sahf mov (bad) (bad) add pusha loop cld cmp out adc int3 out inc shrb loope jnp pop fdivrl push in ret xchg dec es insb xchg loope jbe and mov or std rcll cmp rorb lods test inc in mov mov mov gs pop stos mov xor icebp shrb sbb pop mov and (bad) cld adc (bad) loopne dec sub enter jecxz sbb or mov int imul inc pusha pop adc roll (bad) jae sub sbb stc push ret sub fsubrs jo nop fwait jecxz sbb out out xchg jbe sub (bad) sbb xor fsts cli call push adc push xchg (bad) out dec xor mov dec pushf mov shrb inc jmp push (bad) and pop mov dec push or test lret add mov in xor insb clc cmp hlt push mov xor pusha or ds inc call mov in test test or test lods jmp push dec mov icebp push push xchg sbb repz jnp inc leave pop fimull lcall pop js mov pop xchg or daa xchg addr16 xor sahf mov fmuls jae ss std sub adc (bad) push inc add sub jb inc push xor bound aas jbe scas jbe xchg fcmove pop dec out add sbb movsl dec or mov iret dec add and xchg sub insb loop mov xchg mov cmpsl fisubr xchg movsb je addr16 jae sbbl xor and mov fdivrp imul mov push adc inc mov icebp ret shrl xchg cmp imul insb push adc insl fsubrl dec in fbld or data16 andb push dec cmpl inc mov push pop addr16 (bad) jae push (bad) (bad) mov movsl dec repz or imul js adc xchg cld (bad) cmpsl push xchg jmp push imul insl js scas jg pop cltd mov inc mov add fs inc call std pop mov adc mov mov scas repnz test fmull in jge (bad) rorb cmp and mov push enter enter ret push push fstpl stc (bad) pop pop fist fadds loopne inc mov jp or adcl dec sub mov lret pushf pop add mov pop adc sub push or add cmp in mov inc aad outsl rorb repz test cmp (bad) je ret push das aam cmp push pop jne pop mov pop dec ret rorb inc or mov popf (bad) push or hlt stc repz sahf and sti jg jl test dec out fmuls aaa mov scas jmp xlat adc adc and movb mov fildl divl (bad) pusha lret inc pop push push xchg and clc cmc inc jno mov outsb test xor arpl ljmp daa js cmp js mov cwtl inc nop (bad) jno lret fidivl jnp pop je test push sbb outsb sub adcb or ja in out adc add aas lods outsl popa out push rol xchg xchg hlt xor dec and loopne xor call or mov add mov stos (bad) pop or in lods outsb inc inc push mov mov sub dec sbb or inc mov test aad aad fdivs and cltd sub mov fs jmp es ljmp xor repz jns cmp (bad) outsb pop jl popl clc (bad) loopne stos fsubs iret std mov mov or jle int3 push inc pop ss dec xrelease or cmpsl sbb cmp test lcall (bad) ljmp cmp ret in test dec ss out cld xchg ret push push rcll cli cmpb les xchg cmp jl and pop jmp mov xor enter movsb rcrb pusha addr16 iret mov or adc scas arpl fisubr or ret cmp sub pop xor fdivs push mov outsb (bad) into popf mov jmp mov rcrb shlb pop cmp cmp stc jbe loop push push mov jg (bad) or test loope and cmp rorl popa es sbb out xchg sub movmskps fs adc cmpsb xchg orl repz je fs mov cs imul push cmp pop xor cmc jl cmpsb push sahf in clc push push (bad) adc mov jmp pop push push or jno out stos lods das lock fisubrl xchg adc sub cmovo and inc lods ficompl sbb test loopne xchg add ss stos cmp pop sbb pop push push add inc (bad) dec xchg cmp insl rclb cli es xchg mov loopne jle sub fwait pop repz fnsave cli cmc push push inc mov ja and fxam loop (bad) xchg imull add les lock aam ret and bound mov or push or popa les repnz push dec ja (bad) pushf push cmpsb fnstenv movsb jmp sub loop xchg dec add das and inc cmp cmpsb inc fcomp stos mov insb pop push or frstor cmp sub push mov int adc stc sti ss push cmpsb xchg sbbl enter shll push add mov sbb cs (bad) add das xor push mov out lahf out leave or (bad) test add loope popf subl repnz and mov call fwait jne mov xchg inc xchg fimul xor add (bad) insl xchg je pop shrl fmull adc lods (bad) xchg imul pop ljmp stc (bad) mul icebp rorb test jmp add mov sub and aam andl imul xor sbb shr pusha xchg arpl jno cli sbb popa inc lods jno leave outsl push xchg mov xlat stc je push insl and mov or aad enter ja test push inc mov pop add fistpll adc outsb sbb sarl lcall jbe outsl jne int out inc mov test or xor movsb sar sub je inc sahf ret sbb mov xchg arpl add int or push push pop cmp in lret (bad) outsl repnz mov mov mov mov jl aad (bad) xor stc notb push mov (bad) fisubl inc (bad) jno or jnp aas rolb mov out mov fcmovb pop divb addb into mov mov (bad) sbb cmp mov out fadds mov cmp jne stc lret jbe sub leave cltd inc dec pop fcomps es xchg ss xor mov int3 jp popf jle push xlat xor mov rolb gs push mov and (bad) notb out sub cmp fdivs stc cwtl mov repz imul loope xor dec rolb pop sub cmpsl shll aam jecxz dec inc repz aam (bad) dec stc add jp cwtl out pushf mov pop mov jmp xchg inc int3 insl or gs cmp cwtl adc jne dec icebp fwait adc push repz inc test (bad) inc pusha sbb rolb sbb repz rorb push decl movsl jbe fisubrl cmp cmp stc xchg push shlb repnz push dec call adc icebp (bad) fsubrl add lret jne (bad) inc inc jne adc push sarl fnstsw xor test shrl sbb push push ds aam xchg jno aas stos pop or out sbb mov mov testb lret inc mov insl sbbb xor adc cmp inc lret fbld fsubl movsl pop stos dec outsb adc je into xlat arpl dec cli and push cmp cld js,pt imul sub jne dec jecxz pop inc ss repz pop imul xchg jno mov repz shll sbb sub xchg shrl mov pop push xchg scas les loop mov mov sub pop inc cli sbb out dec std pop mov mov push out pop adc mov add nop jns inc dec ficoml sbb jb pop adc imul push imul in mov mov fucomip cs mov inc (bad) imulb repz clc cmp int3 in push loopne pop dec lcall adc arpl mov mov xchg or add jae in icebp inc call or fs xlat dec fdivrs inc add lods jle mov push push popf mov scas cmp mov sub aas scas cmp out arpl test stc ja stos sub loope pop bound push sbb (bad) mov enter mov movsb xor fdivr cmp add inc or push lcall pop mov bnd mov lret add cmp daa pop cmp in sbb xchg xchg lahf sub and xchg adc scas nop jns popl xchg add (bad) jge gs push mov mov xor push ss imul daa fld sub (bad) push and xor (bad) push fadds xor jg stos sub push dec in (bad) imul enter mov mov dec inc stos xchg clc pmaddwd push push daa into test test (bad) or (bad) mov jne loopne popf fsincos fs cmp push pop jl arpl pop jbe lret mov call daa lods gs pushf test or dec leave dec imul loopne sti push int sub popf gs push push mov lds sbb in loope (bad) jo jmp jmp or data16 shll mov aam push in clc outsb pusha aaa aad (bad) jecxz sub jp cltd aam aaa (bad) mov or rolb insl and jl daa aam inc cld push add jnp in sbb and es push mov lods das jmp and mov dec scas adc sbb outsb cltd add mov cmp lahf jg fimul lock fsubs pusha push sbbb out cmp ret (bad) adc out jmp push sub rcrb xlat xchg (bad) (bad) xor mov mov mov insl (bad) in test mov addr16 nop jp inc hlt stos sbb fs out pop cmpsl add loopne int test mov sbb lods mov daa pushf cli push xor leave fnstenv pop sbb xchg xchg loopne pop pop mov jle ljmp ficomp jae roll pop inc test push or lahf pop xchg xor andb fimull js int aam sbb fsub adcl lret nop jg in loope sti cmpsl fild into (bad) push cmp fdivrp jle mov pusha in xchg mov mov cs xchg stos mov mov xchg push test cmp mov sub (bad) divl decb inc pop lcall pop push adc getsec lods fs stos xor cwtl jecxz adc mov lret adc imul mov dec jmp pop pop mov sub mov sub arpl cmc sub cltd fcoms mov jmp (bad) fimull js sti and inc sti int3 dec test test fsubrl and call cmc inc pop jne adc out jg mov hlt rcl push stos mov lock aam cmpl or fistp sub mov or jg lret mov repz ret lods mov movsb dec lods jl push mov push cmp cltd subl and adc ret push xchg rcrl imul aaa ds (bad) gs mov negl adc sub mov xor (bad) dec and int sar (bad) sbb rcr inc ret in fcmovb adc push out cmp dec push je inc jecxz pop cmp fnstsw leave xchg dec xor rcrb call cmpsb mov pop repz jb ds xorb lahf jmp int3 push sbb sub fldcw outsb fdivr and aam cld mov pop cmc push in jnp jg (bad) xor sub adc push test mov inc gs lret fnstsw mov pop pop test cltd cmp call (bad) loope imul fs popf orl dec inc and xor pop xchg aad or inc inc and mov inc (bad) out or cwtl inc jns rol sbb inc out aaa das dec xor xor ret into sbb sbb jl test xchg lret stos int imul or scas pusha xor popf les dec out dec lea mov sub mov push lods sbb pop inc clc jl andl mov out hlt mov sarb sub pop inc and and dec test jae and sar shll (bad) ds repnz jle mov cli sbb in into xor out jb rol ficom and stos mov jge sub mov mov xchg fs cmp pop and ret jb jp js into push jb sbb jno in fldt push pop adc in mov (bad) std test pop pop enter (bad) pop lahf mov ss icebp fldt mov sub and dec jne cli (bad) mov xchg dec loope lret sub push mov divb out add lret test lods daa mov push mov pop ja push hlt in outsl or scas mov pop das push add popa or (bad) mov jnp sub imul inc lock pop sarb jmp enter leave add add sbb push cmp push test inc subl (bad) mov xchg pusha sub jae ja or mov or popa or sbb inc (bad) pop dec cli pushf add addr16 inc and xchg mov push mov jb sub adc jp cmpb or fs mov rclb push out cmp mov and call jo jmp into rolb adc or decl negb mov cmp in xchg push (bad) jo dec push xor mov stc push sub and pop out (bad) sub adc out sub loopne int adc clc sub and int3 minps lods pop mov (bad) fwait call or jnp push das push jecxz outsl xchg test add mov hlt test mov fwait pop cmpsl pop push dec inc mov arpl xchg jle ljmp sbb pusha in mov repz sti xor (bad) jle inc (bad) adc cmp mov dec sbb jo pop (bad) ljmp test or sub (bad) insl fnstsw dec in and sbbl sub iret sar jno lar or pop fwait xchg cmp lret jp jnp (bad) and scas std dec fcompl push mov sahf mov push aam dec mov cltd lret out scas xchg dec add (bad) stc sbb imul popa xchg mov daa cmp add jmp in movsl lods loopne push jno movsb clc sub sub aad or mov inc inc repz imull push inc xchg mov dec dec pop mov cmp sub mov lods icebp adc nop pushf sbb shr movl loopne and inc (bad) jno addr16 scas cmp cmpsb xchg xchg fisubr jbe sar mov ffreep sub jecxz inc clc mov add mov leave ss or test mov ss push mov mov jg sub insl xor mov push cmp mov or subl mov (bad) aad mov xor xlat inc mov adc push mov bound ficomp mov add jbe mov push into (bad) fildll jmp push or or xchg fdivs and and or sbb lahf xor roll or or sub jl mov jmp jmp fmull fucomip add jae pusha mov xchg lcall cmpsl xor (bad) inc pop inc (bad) gs fwait inc nop leave fisttpl idivl pusha or repz fisubr sbb (bad) arpl mov (bad) mov adc xchg and (bad) xchg mov jne adc push out jp bnd sub je daa add push ret add dec inc or sub xchg xchg jg fildl sbbl or loopne imul les rolb leave or in or scas push mov lods mov adc ret inc inc fsubrl lds xchg adc xor push movsb jb sbb pop cmp mov sub call inc dec pop dec insl add movsb adc test fidivrl (bad) pop cmc inc mov jecxz ljmp fldcw nop xor push inc nop pop push dec frstor inc fs pushf dec cmp push cs mov loope cmp in sbb ljmp in xchg je pcmpeqb sahf inc xor or xlat xor ret popa je bound or or daa adc out (bad) es imul pop into sbb jb imul sti push sbb fsubr sbb inc pop cmp and sub aad add mov inc push cmpsl xchg out ja adc jg dec cmp popa out gs sub lret repz inc xor adc lea sbb not pop nop pop pop push loope (bad) xchg (bad) (bad) mov add cmp ss stc (bad) insl pop push adc int3 push adc dec mov jmp scas cmp pushf pop or (bad) icebp lds sub pop mov ret aad repnz jp xchg adc fisttp test in roll pop inc inc pop push rcrl ds cld add fnstsw cmp mov mov cwtl popf inc add gs xchg loope mov cmp push push push and adc xchg ja pop adc mov inc mov push nop cmp daa inc dec lret mov ret add pop xchg inc cmpsb and sbb push aam mov rcrb hlt outsl jnp daa mov and mov xchg roll in (bad) hlt ljmp mov lea adc dec adc gs adc xchg popa cld movsl sbb inc dec mov repz add xor (bad) mov xchg or pusha mov jl and ds mov bswap into mov scas mov cltd jge mov cmc mov dec xchg adc sbb shl movsb movb mov insl int lea imul mov mov movsl push lahf push dec ret fdivp out popf lret xchg sbb icebp (bad) inc aas xor adc iret (bad) sub and lret push loope pop xchg push movsb add aas jae adc sbb fimull ljmp or dec mov mov rol ds mov cmp adc pop xlat mov sub movsb xchg lods adc lret (bad) xchg inc mov test and push cmpsl xchg repz cmp insl cmpsl lods mov outsb sbb pop pop or inc in xor inc lret hlt pusha cmp adcb mov mov or lret outsb mov push pushf mov aam xchg and xchg clc aad (bad) jo and out xor fwait das mov push test mov mov outsb (bad) jecxz stos cmp adc pop push fisubl fcoms push fcmovnbe nop cmpsl xchg inc insl adc xor dec (bad) xchg test in icebp clc jno xchg jl mov or inc adc mov push stos jg lahf mov add jmp adc mov daa ss call push inc add inc ja repz cmp xor imul pop sub out popa push iret mov dec pop shrl jo push mov jge scas xor add pop sbbb int3 insb iret pop repz pushf ret push bound and (bad) sub dec pop xchg (bad) jns stos ds out addr16 pushf rolb or xchg out mov or xchg xchg mov pop mov movsl out test or stos jbe adc and gs inc xchg or ret xor pop push pop in add and lods sbb (bad) jle cmp jge sti adc xor sbb and sbb adc pop aas icebp inc dec dec hlt sub (bad) sahf outsb mov jnp sbb add pop inc stc lock mov mov adc xlat sti jns orb shlb push sbb dec sahf mov mov xchg pop sub inc xchg (bad) cltd pushf mov or and push divb stos or jg addr16 stos (bad) push jns (bad) mov jnp lods jae fnop cli rcrl dec xor lock xchg dec mov and insb xchg sbb stos cli repz xchg fmull aas mov lods gs stc push std int (bad) xor jmp bswap jg retw xchg jbe call inc cwtl and push jg dec sub push jo adc arpl mov js dec pop stc and sub mov mov dec pop pop out cmovns jg mov mov iret divb jno (bad) jl cmp mov pop fs mov sarl and cmovl adc jmp xor jl xor push (bad) xchg fisttp pop mov scas lret lods (bad) stc cmpsl fstpl fdivs call cmpsl jbe jae sbb enter (bad) (bad) xor cltd cli in insl cmp jne cmp jle movsb lret mov pushf mov jne mov jbe sub push addr16 nop in add mov test inc xchg (bad) xlat inc mov dec fwait subb ds cwtl sub cmp fcmovnbe xchg inc or sbb or jae rolb adc sahf ss aaa test ffree xchg push inc push xor or out jl jle fsubrl repnz jp jb test std mov inc sti loope int3 xor lret in (bad) mov mov out pop daa cld mov sbb comiss xchg xor xor xchg dec dec dec js lret sbb loope pop fadds or dec aas pop xchg icebp notb ret lods xorl test out out push or stos inc sub icebp shlb adc icebp cmpsl daa cltd xchg call push jns add imul test mov jmp xor xchg mov mov lret hlt arpl and push aam daa stc push mov cmp jae pmaxsw out sub push std jmp ja jecxz aad add das (bad) aas xor insl stos mov push aam pop outsl xchg imul add sbb bound arpl add ficom push (bad) popf pushf je dec dec inc pop (bad) fwait xchg jecxz adc js aad jo jle dec gs jnp adcl fdivl pushf incl jb das push (bad) (bad) xor mov loop sub cwtl sti sub adc les arpl and jo xor push inc mov mov addl mov fdivrs xchg xchg xchg subl out sub sbb rclb dec clc movb mov (bad) mov jge addr16 sub mov lcall sbb mov mov dec das outsb pop mov pop and lea or inc aam ja lahf push mov and inc jle cmp repnz mov push ljmp push (bad) fistl xchg aam adc mov mov mov pop call pop xchg call dec out jge cmpsl repnz pop (bad) out shrb xchg inc shll jbe dec (bad) fidivr gs add push sbb mov fstpt dec ljmp lahf xor cld pop push push adc std hlt dec std sbb cs inc in adc cmpsl popa stc or jbe lods inc (bad) cmp adc cmp mov add jmp inc mov pop adc adc inc mov scas mov mov decb push jbe add push xchg mov jge pop pop ret xchg push push mov push sbb and adc push pop push adc sub pusha sarb js push xchg fwait xor push inc inc mov cmpsb sbbl jg or shll shlb iret repz out nop addr16 les sub mov xchg dec jne (bad) (bad) arpl fdivl mov into cmp les rclb cmp sti enter and sub inc in or jae push xchg inc dec add xor cmp (bad) imul mov int3 ret movsl dec stos sub xlat xchg xchg out test mov nop cmpsl (bad) sub inc push jae imull jge in cmc mov cmc mov int3 jmp mov sbb scas iret scas mov mov mov push cmc (bad) mov lods mov or cmpsl push les and (bad) leave xor cli pop sub cmp fdivp add or sahf mov jecxz lcall aam out dec out pop test ds dec pushf push pop shr cltd cmpsb push mov es aas mov repnz cld ficomp mov xor fsubrs dec pop pop mov pop rclb sbb fimul push inc sti cwtl test fldcw js fild lods add xor cmp lcall aad stos dec and push aam and gs adc or bnd pop dec (bad) cmp and inc ret ljmp pop or xlat movsl add add mov sbb int (bad) ja jns arpl mov jmp fldl2t sub imul and xor ficoml sub and adc outsb adcb jg sbb dec sbb mov sbb pop mov pop pop xlat aam pop in lret adc mov sub xlat mov inc push inc dec cmp scas xchg jno jl and pop jge pushw sbb mov unpckhps or xchg push inc xor je aam inc add jmp cmc insl jp add loop nop inc js mov dec popa jo jmp adc xor xor rcr (bad) add and stc mov sub ret adc pop std mov mov aas ds lahf adc cmp cs fidivl aam sbb sbb loop fdivrp or jno in (bad) insb mov (bad) (bad) jg jae push sarb stos in and fnstsw lock scas aam add pop pop xchg (bad) mov repnz pop mov pushf lods repz and dec ret mov aaa xor fsts into rorb gs dec xchg repz insl notl sbb pop xor icebp scas loop (bad) arpl xor and in outsl jb cmc add mov inc push cli and sub add out cmp aaa ret (bad) sti gs jecxz ja dec (bad) xchg aam lock out adc push xchg xchg lret shlb add (bad) cmp outsl mov mov cmp adc (bad) xchg (bad) xchg xchg inc jle xchg xor push cs mov mov fisubl or hlt sbb popa (bad) decl jo lcall nop and or push dec push outsb and scas gs jo adc sub (bad) inc inc in fnsave (bad) in adc and clc imul pusha leave mov fbstp repz pop ret pop and cli movsb add stos and dec sub xor pop les xchg aas cltd pop cmpl pop lcall jb loop inc jmp pop daa cmp movsb cmpsb in pop mov mov jg mov xor add inc in pop dec jl test scas insl in test out jne out or adc mov ja mov pop jne or lods push mov in daa xchg cwtl stos lahf adc or out dec sbb push mov je dec insb mov subl sub sub cmp lock sahf cli fsubrp or pop mov aam outsl movsl test gs test scas cltd mov inc sbb mov inc xchg jbe rcrl lea cmpsl mov push repnz out or movsb inc pop mov mov adc aam repz rorb dec dec inc mov rcl dec (bad) sub dec stc lds ret sarb (bad) fisttpl icebp pusha data16 lods mov or clc fcoms pop in sub mov (bad) int3 movsl push sub (bad) mov ret push xchg (bad) clc fptan sbb or dec xor lds aam cmp jg pop and sbb fldl scas sub xchg call (bad) lds scas pop fidivrl int3 js lods cmp dec in scas and xor add push js adc jle mov inc test mov fwait mov xor xor js out add mov call je push mov pop adc nop pop lret lret and sbb mov jae sahf jb mov sub notb jno out xor jne push xorl imul insb inc mov add pop fs add scas pop test xchg sbb add test sub adc pop jb mov andb dec fbld fstpt cmp mov pushf dec sub aad sub xchg sub into icebp loop sub jae sbb outsl mov fs imul ljmp daa call lea dec sarl mov cwtl mov (bad) jecxz lods push in scas xchg mov add cmpsb dec adc ficompl cs fnstsw or icebp sub in addl decl fidivrl test jnp loopne lcall cmp jno arpl call jp sbb mov in arpl ret sbb lock mov and lret inc les loop iret and lods push out xchg push xchg xchg inc fidiv ds xor in pop jnp fild xor int cmp popf sbb arpl jb pushf pop xchg rcll lea xchg ret (bad) dec inc and sub sub sbb mov sub loop and fs imul incb dec xchg dec sarb jp xor push and xchg les sub pop les aam pop dec cmp and pop mov ret sbb xor stos lods xchg jno pop and lock adc fldenv lock scas push lcall in mov lds xchg cmp fldz adc repz aad xor mov lock mov push pop jne clc adc and or in ja lret outsb mov dec out pop pop notl jnp mov jns test out cld in jno lds inc bound icebp cmpsl and test sbb sbb jmp out fsts adc or fistl push fsubrs stos xchg sbb pop popa mov test xor int push inc or jb repnz sbb or in into xlat adc jns scas dec leave cmpsl pop pop decl xorl iret es and nop ss aad ljmp lret int3 jg fnstcw mov xchg cmp ds outsl mov divl fwait nop push sahf mov inc sbb loopne aad test jb pop ja imul data16 cmpsb mov mov or scas ror dec pop hlt (bad) fisub cmp fnsave or jle mov push (bad) lea add aas jecxz sub sbb push xor xor jbe push mov aad sbb lahf jnp lea inc sti sub cmp mov fistpll arpl jns gs add mov lods pop insl fcmove cmp sub je add mov mov inc xchg adc mov inc (bad) int cld or lods add add lock sbbl cmp dec (bad) lods daa add sbb mov sub sti cmpsb cmp test sti cmp hlt sub out repnz stc repnz stc lods sbb enter ret pop push add mov mov push outsb sbb inc data16 insl aas push mov xlat jb adc loope cmpsb test cs in xchg jne aas xchg int3 lods sbb jecxz cmp lods dec out add and test xlat dec jne ss mov push ds out test fisttpll xor jne xchg mov fstl fisttp sbb hlt inc pop cmpsb sub in push into or push push pusha call or repnz pushf js out loop add xor mov jae ljmp leave inc repz into ds mov jl xor ljmp jns adc fidiv adc in cld and push add inc mov std mov mov outsl in xchg out scas lods mov pop cmpsl mov mov mov rcll xchg push cmc lahf mov pushf add cpuid sub adc xchg jmp pop test iret pop xchg cmpsb mov sub cmpsl aam mov xlat mov out out imul sub (bad) jle sub fs fisubr adc pushf adc aam pop repz add cmp jle inc scas jp push or rcll fsub add cmp fild into fisttp sbb (bad) out sbb add push ljmp lret adc fdivs sub and loopne sub inc ss aaa mov push repnz (bad) adc mov dec jp cmp sbb add mov icebp div scas adc cmp es adc or pop loopne jl aad loop jmp popa ja add (bad) rorl jo cmp hlt es sub add daa in mov rclb adcl adc sub loop out mov jnp dec add and adc inc je mov sbb lea cmp dec cmp xor loopne,pn inc jno movsb pop mov (bad) and sbb and jno cmp jae out into addl push sti outsl out bound test push xor mov jb (bad) jno aam adcb jmp push bound in xchg jns std outsl nop xchg clts sub mov cmp add fisubl cmpsb leave imul insb xchg dec lods sub xchg jle stos leave divl push repz jb push leave call rorl or pop mov mov popf jnp sub and pop and inc xchg xor fidivr pop push rol insl test push xchg adc fwait imul arpl lea sbbl jno push jno jl stc jne (bad) and pushf outsl js xchg pop mov push or leave fs in ficoml cli or dec fidivl or pop push lret jnp mov or cmp or mov push cmp mov jecxz movsl adc add jne push das lretw xchg jecxz cld cmpsb mov fisubl xor or scas push pop loopne mov mov arpl inc and aaa adc mov jmp inc in in sbb sub leave iret and add push test inc mov rol fnstcw (bad) cwtl lahf push pop insl and mov xchg pop jge pushf out in jmp add outsl lret xor cmp xchg pop test push mov mov mov mov inc out addb ljmp movsl sarl loope sahf imull cld push es push mov push dec icebp cmpsb loop and clc add xor insl sahf jge xchg dec clc jb pop scas aas and les inc loopne lret and test xchg inc mov or and iret test or mov jecxz lret mov mov mov arpl mov inc mov divb aam lods cmp mov jg cmpsl (bad) je cmpsb push loope fdivs jns fucomi mov pop xor in xchg jp dec dec mov xchg std mov test in loope jne lods mov and mov adc sbb ficom or rorb dec push pop cmpsl push mov ret lahf call lds add scas movsl (bad) xchg (bad) (bad) jbe gs call out aas pushf adc xchg gs (bad) stc iret loopne data16 jl dec pusha (bad) dec mov sbb mov xchg and jge add add cld jae mov into pop and pop add mov or xor push inc ret xor inc sahf les loopne push test out in inc pop sub int aam pushf mov mov cld rcr push lea dec andb shr add jmp adc leave data16 jmp mov inc xchg add pushf repz jae pop mov sbb adc hlt push (bad) mov ja shl cmp adc adc mov in outsb jnp pop mov lret fdivs adc pop lea or xor mov je outsl dec and movups movsl or mov adcl xchg mov mov mov mov jecxz,pt sub jbe add push scas (bad) rcr mov mov dec xor cld outsb ss cmp repnz and lds mov fiadd (bad) adc loop popf jne mov and test fdivs rorl cld xchg sbb xchg mov imul mov ljmp sub sub inc and dec std dec aad mov popf call dec fs icebp sub sarl push lock (bad) mov stc lret cld fstl mov lahf xchg xlat cld jns ja or jo mov fucomp dec push sarb inc ror divb loope sub divb int3 pop inc inc gs xchg pop jbe cli mov dec and mov (bad) popa xor xor push and pushf cmc movl mov mov push jp mov ja push pushf jl mov pop jg leave cmp inc mov test push dec cs fcompl jae sbb cmp (bad) jae in into lods inc stos (bad) ret rorb lods add jno xchg test or xchg in fcomps loopne loop into arpl lret (bad) scas jne mov mov jbe loope loop inc (bad) inc cmpl sarb xor movsb push in jmp jne stc loopne jnp data16 mov (bad) or das mov push adc adc sbb mov (bad) and mov mov subb (bad) mov (bad) pop sub xchg mov jecxz pop in movsb xchg adc pop pushf lahf movsl lret push iret adc and loop jg mov cmp bound ljmp ds out (bad) adc pusha sbb lret add in outsl (bad) out add jb stos push or pop idiv cwtl fldt cmp jle mov inc mov sbb mov mov call jge gs xor mov inc dec icebp loope and mov out xor aam pushf or imul or xchg (bad) jo ds mov add (bad) pop leave fstpl push and mov js jne cmpb loopne mov in sub mov add lods insl insb iret push cmp loope push mov shrl adc pop push xor outsl data16 in cmp mov bound dec jle xchg lahf leave loopne or into pop cli lahf shlb or aas xchg in add push je in (bad) daa xlat sbb adc outsb add add push aad and pop cmpsb or jb inc orl mov pop pop add pop inc xchg test js sbb pop out pop push mov iret xchg fprem1 mov add aas movsb pop adc mov imul push insb test push cmpsl mov test nop fs int outsl mov outsb js sub sub dec jno sub jb,pn pop pop ljmp (bad) adc mov mov jp jmp xor jbe lret mov mov and cmp (bad) lea jle popf sahf and shlb mov in cwtl dec mov repnz movsl mov dec xor (bad) jbe sbb push cltd inc pop int inc sbb jle in push mov inc mov dec lret addr16 cmp push jmp shlb sub or or je and sti cwtl cmp inc sub out dec std pusha cmc mov stos xlat jl xchg outsb sar pop cwtl mov xchg cld insb cmp rcl int3 loopne bound ficompl repnz mov outsl imul cmpsl sub mov rorl xlat pop cwtl dec int inc sub lock jno lock (bad) jle js,pt dec loope sbb nop (bad) or clc lcall jbe into pop adc xchg jge popa (bad) lahf dec fisubl jne iret mov dec jno mov mov jno jg out jbe js mov loop movsb hlt and and pop xchg repz xor add mov xor mov jl add push sub push inc pushf imul push (bad) adc mov das inc sub pop push inc mov (bad) push lock cmp es add jg inc pop loopne mov cmp in scas add fwait aaa adc cmpl lds popa cld mov add adc mov xlat and push pop xchg or out or xchg in push xchg shlb cli in addl cmpsb rcrl ret add fisubrl jbe mov daa loopne icebp scas mov inc jbe inc sub loope push lea into xadd ljmp imul cmpsb pop mov add mov je pop sbb inc sub into es in mov je cwtl call (bad) or xchg lock sbb pusha testb or movsl in cmp aad cmpsl in jo mov inc sub cli pop lahf xor cmp pop sbb xorl orl (bad) mov and pushl jb push mov jle push and arpl ljmp or and faddl add (bad) cli in xchg dec cmpsb jae xchg mov jno inc xchg (bad) mov mov xchg imul test lret fxtract xchg imul sbb lret sbb push sbb adc ja andl mov push in and clc sub push das out inc mov pop (bad) jge nop push int3 pushf sbb mov sbb cmp xchg jge loope xor push pop mov push mov pop test mov dec mov cltd (bad) jae xor sub or mov adc ljmp cli dec jbe pusha outsb int3 imul fs push or hlt sub nop bound fstpt jle test pop rolb mov jecxz sahf stos es push movsb fcompl es fstps repnz push into out fisub data16 iret or mov xchg mov jo in mov out mov add jecxz cmp mov addr16 mov loopne (bad) ljmp push js cmpsb inc adc es lahf notl sbb sub pop push dec or cmp out mov popa icebp mov mov test aam test pop jle pop mov or jne ret jne dec xor mov das push jl mov rcll pop mov adc xor jne cmp out push xor mov dec push cmp gs aas clc aas jmp jg js pushf cli out or aad jne sbb xor sbb jno dec and lock movsb loopne mov aaa mov push (bad) sub lds xor mov cs add jo xor adc jmp rcll js xchg lret leave cmc int3 pop inc xchg jno in in in jae orl roll sti sub aad mov sub jmp mov mov aam sub adc int (bad) ljmp jmp sbb (bad) mov in test cmp or pop adc adc fiaddl pusha sbb push or in push cwtl iret push incl pop jecxz insl xchg mov cmp xchg sbb (bad) or lock loopne jmp std and lret imul push scas adc out mov orl add (bad) std jmp push js movsl mov sbb in js fldt stos pop add or jo cltd mov lret insb inc ljmp out xor ret sti pop xchg sbb jnp (bad) dec cs out stos mov xchg inc adc sbb lahf adc iret push in mov mov xchg gs (bad) test push lods mov aas mov add lds dec pushf mov idiv push fmul inc movd imul out mov sbb sbb les sbb leave js mov pop mov lock cmpsl pop cmp xor pop mov mov rcll pop call mov dec sbb and fs sbb sub cmp pop cmp or push mov mov or pushf push jge or fwait repz cmc adc jge pop sahf fs ss pxor adc icebp daa movb cmp int3 ror fmul leave iret shrb lea add out add and push xor fist call inc inc loop inc cmc sbb cmp jge pop sbb bound xor test or pop jne jge inc sahf fstl xchg int mov loop mov repnz out cltd dec add push negl loope (bad) push lock out enter cli orb gs (bad) orps sub sahf sbb outsl test push sub add or mov pop fisttpll ljmp pop test es ret idivb cmp mov xchg pop and ret stos (bad) mov jb dec pop test add xchg and cwtl mov adc jne cmc dec ds push sbb roll ficompl js mov rcl pop flds fistp mov ds push out sahf (bad) hlt cmc and das out mov sub adc xchg push lods dec icebp bound push bound iret lcall mov xchg xchg and dec push ss mov imul je test cmc adc push lock in inc lea fs ja sub (bad) pop add mov aas and outsl aaa js push into mov and out xchg sbb push jg arpl in out in xchg outsl aaa xchg icebp pop lret xor xchg add mov out neg xchg (bad) pop jge sub sbb int3 sub js mov lods aas in or fwait lcall push and das fwait xorb cmp fdivp ret inc lahf mov je cmp and popf mov imul pop in fildl xchg andl les mov subl (bad) pop orl jno movsb (bad) adc mov (bad) xor mov out adc jae lret add jnp mov sub jnp jl jae (bad) repz test rcrl or push pusha adc cwtl and xor and xchg jecxz cmp mov iret or mov mov les sbb es and jae (bad) lds pop dec lret mov into xchg sub xchg std pusha lds mov or and mov or ret dec je cmpsl push cli inc xor popa (bad) out cmpl push std vcvttpd2dq popa enter dec fidiv leave xchg xchg ds repnz xor lds (bad) mov (bad) (bad) movsb int3 int inc adc cmpsl cmp ja (bad) xor shrb or stos insb (bad) in (bad) sbb mov adc pushl aam xor xor das xchg imul in mov pop or push add hlt addr16 lods push or nop adc pushf ficoml rclb fadds dec jmp leave stc negb lret lcall arpl out imulb xlat cmp mov xchg jg xchg pusha push adc data16 xorb outsb sub inc xchg mov sbbl test iret mov inc in insl pushf loopne inc inc cmpsl add (bad) push (bad) jl add aaa cmpsl mov dec mov adc xchg xor out nop mov ja (bad) ds mov sti and (bad) mov scas cltd call fs adc fs cmp test push (bad) aad push push add (bad) mov xchg dec test lea mov cmpsb cs in pop ja cmp sahf jo bound icebp movsb and mov mov jno inc sbb lahf sbb push les pusha fisttp lcall cmc pushw add xchg sbbb imull les xor leave stos mov loope dec cld arpl imul fwait loopne fist pop and je cmp xor (bad) inc insb and imul and xor cs stos fnsave (bad) adc jp sub sbb sarb sbb stc stos lea xchg (bad) mov ret dec pop xor or ss and in pop (bad) jp xor pop sahf cli int3 ss mov jg cmp mov subl mov mov push cmpsb into (bad) cmp mov int3 xchg push push dec sahf cltd int add daa pop mov sbb sub push jns js icebp jge xchg adc cmc xor lret adc sbb enter out cmpsb inc dec inc xchg in pop (bad) lods cli push imul or jns mov push imul je imulb cmc lods imul je lahf jne or push popf dec push call sub inc or cmp push jns add mov xchg xchg cltd clc cwtl cld or movsl dec in cmp lods cmp (bad) or push xor sbb lods sbb daa jb push xor xor adc jp mov sbb inc arpl (bad) sbb sahf push lods push popa lcall ljmp mov aad dec lods das (bad) mov aaa sbb out out (bad) les or imul imul lods inc or dec mov aam add in push into and jp cmpsb fistp subl loope inc pop jp mov xchg (bad) xor xchg (bad) xchg jge repz mov arpl into cmp neg repnz xchg out pop inc or fimull pusha pop iret pusha repz xchg cltd (bad) shl or mov data16 push fimul lcall (bad) icebp dec push inc push xchg pop adc aaa lret push imul loope adc mov cli sbb cmp rcll xchg jmp cmpsb clc pop jnp sbb cmp cld fisub test sbb xchg (bad) xor pop sahf jl das dec pop adc pop pop xor mov xor ds cltd mov es sub and dec aaa sbb xorl mov rep aam and or lods hlt mov jecxz inc mov mov cwtl pop subl pusha imul cmp iret and sahf loopne cmpl insl fsubrl sar ror scas add sti (bad) ljmp xchg cmp jbe insl pop lcall dec repnz js inc jo movsb lods dec add scas out xor jl dec popa cltd in popf and inc (bad) pop pop jnp out dec pop data16 fimull dec out add and cmp sub lahf jle jmp xchg lret mov inc fdivrl cmp and or xchg cwtl gs ljmp add adc inc pop pushf cwtl sahf call or inc and sub sarb aad notl mov sub imul rorl (bad) rcrb push ljmp and (bad) test mov push jnp inc inc push in mov hlt jnp iret fisubrl mov aad pop lods sub mov sbb jns pop shrb dec add mov addr16 or (bad) pop and ret mov sbb in (bad) (bad) jb (bad) movsl outsb dec inc rcr add (bad) aaa hlt pop xlat cmp sub movsl clc sbb xchg or out into jle scas mov pop mov mov adc rorb fadd clc stc sti repz and sahf xchg push mov cmp cmp jno push push mov jle nop andl inc sub adc mov jnp mov fnop jecxz xor push sti xor aaa jp inc daa xchg xchg repz int3 stc push loop rcrb data16 lret xchg and jnp dec add out das jbe lahf imull jmp je ficompl lea (bad) daa shl mov outsl push sbb jl (bad) xchg push ucomiss sub cmp pop pop cmpsl js ret popf inc push pop adc inc inc mov clc dec mov pop test adc cltd mov dec push test push (bad) sbb inc fnstcw pop (bad) cmpl inc mov dec xchg and repz and or shrl xor sahf adc and sub (bad) xor cmpsl pop mov pop mov push push fwait addr16 mov xchg sbb xchg int in sbb inc mov sub cmp sub push jp fistpl lcall insl fdivr pop iret sbb ror popa mov fwait pop jnp notl jae pop push adc mov js jbe fimull xchg sti jmp or pop popl sbbl cmp mov inc cmp jo push lahf scas sbb inc inc push cmp sti int fwait or (bad) hlt bound and stos out push lcall cmc inc jns push ret in push push mov ja sbb je lahf jmp (bad) pop push jmp sbb inc adc jmp mov lret xor jge jno aad mov test popl mov fimul pop mov loope and jne mov repnz ret xor xor mov mov mov fwait xchg pusha mul add xor add in lcall rcll btc inc mov in mov dec sbb stos nop out sub lods adc inc sarb stos fsubrs pop (bad) enter add jae fwait js out jmp add mov inc push jnp xor and jle cmp xchg das mov fmull or jne test loopne fstl in jl adcl jb dec mov int aaa dec pop ror push jmp stos out pushf ret xchg cmp rolb dec les (bad) inc aaa (bad) fbstp fisttp xor mov fisub rorb jmp jbe pop das js je add jb xchg ss xchg mov (bad) les test fbld sahf sub mov in xchg (bad) ds dec notb decl push aad xchg push dec mov jg (bad) xor jmp dec xorl repnz sub sub mov into inc xchg stos xchg popa sti adc pop loope cmp outsb cmp mov les sarb push lcall and adc shrl outsb mov aaa mov pop and mov aam scas test sub movsb sti jge out xlat sarl fs popf pop sub push mov lea mov jnp daa sbb ret scas pop mov pop (bad) iret cmpsb dec inc sub test in (bad) push inc jmp inc fwait mov leave xor adc sbb stos sbb cmp adc sbb (bad) out out cmpl fild movsl lods xor (bad) inc daa sub jae push (bad) icebp test mov xchg in sbb and dec out in (bad) inc push fildl cltd jb test lock mov mov leave movl adc sbb loopne xor sbb (bad) nop jne mov and push cmpsl dec inc add mov pop fs (bad) and enter and mov movsb sub mov pop loope adc imul mov pop ret aad or and pop lods out sub cmp jb ljmp sbb push push cs push inc inc test fwait pop fcoms andb xchg and outsl leave lcall popf push sbb ror movsb jb not jmp adcb fsubs addr16 shll dec push daa mov int3 jno and popa and jg mov pop (bad) mov stos fisttpl std cmpsb sbb sub xor (bad) imulb adc rcrb jmp enter arpl or sub sarb cmpsl out pop jo jmp mov cmpsl in push cmpsb hlt int imul lret lret mov xchg scas push call jno pop cmpb outsl sbb mov dec mov push inc and les popa or sub push gs mov aaa lock jle add dec test stc push pop repnz ficomp aas out sub dec mov pop test data16 mov jne mov lahf stc jb xor xor aam aas arpl out xor test stos mov add add pop andl adc insb mov mov add mov cltd (bad) mov ret jmp ds mov hlt add cwtl push xor out push push mov test ja jo cmp mov cltd dec push frstor or aad xor pop scas cmpsb lcall inc mov inc mov inc push and pop (bad) xchg sbb push pop outsl add jne xor call test inc mov cmc pop inc pop cli cmp in ficompl sahf js lds pushf push cmp xor mov xor dec frstor mov mov sbb (bad) pop imul (bad) fistl stc adc dec insl loopne cwtl clc and mov daa outsl and (bad) xchg add pop dec mov (bad) and cld fdivr sbb dec mov orb out jp jb xchg pop pop inc inc cmp loopne shrl cs adc jl mov xchg cmp xor int3 rorb dec jbe jmp cs mov mov js pusha push xor push inc mov pop (bad) mov ss sub mov icebp (bad) fisttpl rclb sbb inc mov cmp mov mov cs pop iret pop push enter jnp es sbb imul mov pop xchg jecxz add inc push inc sbb dec jge,pt ret test and xchg mov adc es fisttpl (bad) mov loopne mov xchg xor lods and shlb xchg or adc out loopne insl dec mov test push push idivl test lods mov lcall push and mov les sub orl xor mov popf and xchg repz outsl hlt int3 pop and enter inc mov dec dec or cli and and lgdtl pushf pop cld pop adc lret jge mov out decb scas test xor ret mov mov mov jne into frstor leave add add cmpsb xor add adc add loopne mov std dec fisubrl jo add push in cld lret xchg sub stos mov xor xor out das inc mov imul daa mov pop push pop sub sub xchg test in in fsubrs stos mov ds movsl fiaddl sub xchg jbe in xchg test sbb sbb test sahf aaa ret xor mov (bad) mov test je sbb fidivr gs jne out jne gs leave or es popf aad jae or cltd mov mov andl inc ja iret add jg mov insb fbld sbb mov mov loop and cli ja xchg adc mov mov pushf (bad) and addr16 dec out jne mov and mov pop (bad) div sar in or mov push dec cmp in push imul xchg mov pop test fwait mov notb fmull ret lahf xor (bad) addr16 loop pop mov sbb mov out mov (bad) jbe pop (bad) mov aas gs les jecxz cmp mov adc push jae and fs mov push jns push ljmp and push cmc fisubrl pop pop lds add in cmpl (bad) je mov int mov roll js in js dec jge icebp imul push push cli pop jo adc pop dec add or fdivrl fstl fdivl stos add ret mov roll push pop xchg xchg push mov mull je out repnz leave xor push inc jp mov mov shlb push add xlat addl sbb jge xchg push dec shrl dec jns dec jle xor (bad) in in or xchg and test cmp jno xor lea and dec inc je data16 mov add cmp pop outsl bound mov xchg in mov adc out inc (bad) mov std (bad) push icebp cmpsl jmp jnp pop (bad) adc cmpb icebp mov xor adc pop arpl jmp and movsb (bad) push sbb cld jl xor in std arpl test pop jp xchg add xchg xor mov addr16 mov mov pop or mov fistp sbb (bad) decb (bad) jl (bad) in icebp mov push mov cmp jne int sub sahf movsl sbb (bad) fs xor pop (bad) addr16 pop pop imul xchg jmp inc push cs push fstps jnp arpl lock scas jl inc sbb or and inc xor pop hlt fsubrl lds daa cmp mov jne lret popf movsl push fld jl out daa push add push push sahf and xchg xchg or or test push int sub mov mov add xor imul scas pop mov add add test and lcall mov scas sub jmp icebp jae adc jae (bad) jg aaa movsb out in lret sub or int3 stc dec or xorl xor push addps push out int outsb jae (bad) hlt mov icebp dec out xor sub lret sbb ror cmp sub jo insb push lock xchg mov sbb out and xchg jg mov mov pop and (bad) sbb jecxz push sahf mov loope push iret fistl xchg shrl into push js pop in xchg push out dec lea (bad) cmp or int hlt xchg xor lds add adc repz fwait sub or sub js lock loop mov (bad) dec test rorb mov orl ret sbb shrb test mov push testl pop pop sub inc (bad) jo inc cmp or js fs sbb fild mov es or lcall push xor test movsb mov xchg aaa test repnz sbb insl inc sub jge inc in popf call (bad) iret lods jne xchg dec push mov js dec sbb dec push test rclb sub inc xchg sti std adc dec (bad) sbb pop add dec and jb popa sahf push xor nop push mov enter dec sbb icebp (bad) mov push adc fistpl jo (bad) jmp outsl jnp and in inc jbe (bad) push mov and xchg xchg xor pop das pop xchg es dec jae scas pop addl pop xchg (bad) repnz cmpsb sub cmp (bad) mov fs div mov inc xor xor push iret lods test push les mov aas repz test iret lds sub pusha push lods add or aas add push xchg dec mov mov aas repz jmp (bad) sub fsubr inc lds mull (bad) sbb mov pusha jne mov popa add insb lds dec sti sub mov fdivl xchg mov andl (bad) clc mov sub test mov add mov mov xor mov jl lods adc and add pop (bad) cmp in or xchg test lret gs cmpsl sbb lret addr16 cmp clc mov mov inc mov xor adc (bad) xchg mov dec cltd adc add imul les in inc arpl ljmp mov in incb cltd lahf hlt loop movsb adc pop push xchg hlt mov xor pop test clc inc int popa pop nop dec xor jno or xor fsts sbb pusha jmp cmp pop sub ljmp or mov mov sub and and push out or inc xchg movsb inc ficomp lock sub mov iret pop leave das sub nop fwait xor and mov out jns repz pop rorl jg push test lock xchg bound pop and cwtl adc das decl jnp insl jecxz dec pop and jae xorb dec xchg push hlt pop rorl add adc pusha les outsl pop les mov add xchg push inc jl (bad) test xchg push repz adc insb cmp cmpl mov lea (bad) ja xor int insb lods lock popf ret mov bound fisttpll stos mov insl inc bnd push outsb xchg ret in inc push aam add mov adc dec fisubr pop (bad) adc xchg mov outsl imul add mov push jecxz fild sbb call dec pop add jp push cmp cmp arpl hlt cmp dec or aam mov mov sbb sub movsb iret sbb repnz cwtl xchg cmp (bad) (bad) call loopne popa test sti dec nop fcmovne test jg fistpl adc jo cwtl movsb lret jnp sbb push test dec test push jge jp ss stos lcall add push xchg sbb cmp xchg and loope xor lds icebp lock lahf pusha xchg lret nop ficompl addr16 call incl xor in aaa es inc cmp push mov sub xchg pop cs mov xchg pop pop nopl mov mov xchg enter je xor setns cmc aas or out stos adc sub cmp lods or push lret sbb loopne ret stos lds popf stos sahf cmp mov push cltd mov cmp cwtl xchg mov loopne aam and push mov ds outsb push sbb mov imul in xchg adc lahf int3 (bad) inc in arpl fsubrl cltd mov bound and xorl mov and dec outsb in mov fstl test std dec jo (bad) ficomp lret cmpsl xor aas cltd sub dec sarb dec jns imul (bad) arpl into push negl std or jecxz xchg xchg dec mov pop cmp cmp mov fs and pop sub loopne in push stos mov or mov xchg cmp add scas hlt dec sbb das pop stos jmp or inc mov adc imul mov mov adc jo ds adc imul rorl (bad) push and cmpl int insl push out xor into vmovntps push pop jb (bad) mov sbb cmp push pop fsubs in js jns xchg xlat mov cmc (bad) icebp sbb jo popf sbb repz xor mov (bad) les outsl or frstor jecxz ret and jmp in sbb js adc pop dec xchg or xor jg xchg adc xor jnp andb imulb mov ret push sub cs mov and or inc test push pop adc mov sti mov pop jns push lods add (bad) cmpsl dec dec xor movsl pop mov lods test scas cltd sub mov adc data16 mov adc adc cmp sarl lcall sbb into popf addl and (bad) into cmpsb mov mov cmpsl pop sub stc repnz fisttp outsl test and inc add adc mov ja in mov popa or ljmp out adc test sbb inc jle mov mov imul adc dec in inc daa mov sbb out imul in mov imul xchg lcall fidivl and movl popf mov dec sub call lds jge rcll repz test jno cmc stos xor ret sub push cmp xchg rolb rcl mov (bad) in xor or xor jl les lods add cmp rolb push int3 lods shrb jl (bad) ret push sbb (bad) out cmp jo push out pop shr xor adc jecxz xchg mov pop (bad) mov pop ret sub sti mov inc mov or mov mov test xor (bad) mov int sbb mov xor dec push push es fisubl enter stos dec ljmp in out adc lock sub aas and jae inc jae jmp in mov lret pop outsl xchg xchg inc push (bad) (bad) sbb sbb sbbl push push mov daa mov cli (bad) and stos pop or xor aam jmp imulb (bad) and add icebp cs fwait jb mov sub jp adc jo jl mov pop enter aaa mov xchg and (bad) cmp inc imul (bad) sub lods xor lret movsb jnp stos add mov pop pop (bad) pop roll test (bad) loop cmp aad mov xchg adc nop xchg lret imul cli mov add adc das in jnp lret jbe (bad) stc dec pop shl cmp xchg and push pop call mov push divl sbb xor or pop lcall addr16 pop dec jle mov add jno xchg sarl push jp loopne or pop ja popf adc cmp xor faddp inc js inc sub or test xchg addr16 subb cmp mov pop mov xchg movaps mov fcoms or push add rol ja and push insb fs cmp loopne mov mov sub mov repz xor mov mov out sub (bad) push stc pop enter mov inc popa mov pop (bad) pop sbb ret cltd arpl imul push pop popa mov xchg xchg mov ljmp inc cwtl adc cs (bad) rolb icebp sbb popa ds cwtl in rclb in call daa (bad) cmpsl pop lret jns or mov mov jecxz push push or mov ss fxch pcmpgtd adc repz sahf ljmp stc lahf dec mov cmp js inc dec cmpsl cs pop sarl xchg shrl loopne mov data16 sti xor (bad) stc lock mov mov cli repz or mov jbe lods aad in les xor loope push in inc sub popa gs fsubrs mov das cmp test mov add mov loope mov jns (bad) lret push xchg sub sbb ja (bad) mov dec pop and sbb call cmp cld (bad) ja int3 ja pushf sbb dec dec cmp std pop sbb repz add cmp shrb fdivrl jnp pop (bad) push jne ret movups cmp push inc pop and and mov sub fdivl nop (bad) mov rclb adc lcall inc rcll jmp ret mov aam aam mov ss mov sub cmp add sub adc nop sbb inc stc adc scas mov repz jmp jne insl sbb or push add lods cmp cmpsb sbb mull ret jne cs add cmp mov cmpsb clc test xchg scas adc xchg dec xor lods rolb jle call cmp out mov icebp faddp xchg adc movsl jecxz rclb and sbbl inc fwait sbb cmp flds mov ret out add xchg push in fsubrl pusha xchg mov sub notb pusha rep mov jnp or mov add cmpps decl ds scas bound (bad) negb push mov (bad) mov data16 shrw lds outsb xchg mov add pop mov cmp dec shr pushf iret pushf mov inc xchg mov jbe (bad) frstor push ja idiv jg jns cld sub inc xchg cwtl ret outsl cwtl fsubrp dec (bad) enter test and xor (bad) sti xor push call cmp rcrb push mov lods popa in jl (bad) jns and add jbe fsubrp inc fistp pop jnp stc jne scas jae lds out fdivl rorb cmpsl dec sub sti aad inc adcl sub mov cmpsl add fdivrl fdivrs or cmp jbe cmp in stos push or jle cmpsb rol adc mov icebp mov adc out inc mov push push xchg push jl lea pop aaa hlt push (bad) add fucompp rorl jmp jb repnz pusha sub lock int3 sub cmp sub fidivr rorb fidivl roll in outsb sub arpl push pop into fimull movl push sbb pop push or add (bad) cltd js jmp xor into cmp iret cmp push fucomi add xor push xor add rorb push shrb xchg hlt mov pusha fdivp sbb ret es adc adc sub pusha and dec sub ja push call cmovs sbb pop scas push lock (bad) add outsb add (bad) mov jp leave jae jl xor fxtract adc mov mull bound mov pop adc inc pop (bad) mov jns sahf mov mov adc dec je movsb in push inc mov out sbb pop in push (bad) sarl sub cli out jl aad and lret xchg (bad) addr16 mov mov mov or sbb lcall jge jae dec mov (bad) sti mov mov out jno pop dec cmp loope inc sub mov jecxz in ret mov push imul (bad) js aas add cmp pop jge (bad) (bad) out rorl cmp sbb xchg mov pop lea rcr outsl lds stc gs jecxz (bad) in jnp test or fwait shll push call stc movb mov mov pusha mov lret sbb jno lock orl xor pop (bad) and cmp cmp sbb lahf mov in mov mov add divl ficomp add (bad) mov mov sbb sub dec jnp or rol bound sub inc int3 cs cli outsb dec pop (bad) cli jns les ret sub (bad) test test add in mov xchg ret sub stos adc rorb loope lds (bad) out mov cli loop jp (bad) jbe jb inc lret inc sti xchg (bad) jo ds mov aaa (bad) sub mov stos xchg xor int3 sbb mov outsl inc mov push lea xor (bad) sti (bad) jb or pop (bad) pop stc in xchg xor inc addb movsb mov push rcl scas pop pop cltd dec push inc sbb xor inc lcall sti int3 mov enter stc adc outsb cli mov cmp add or xchg (bad) jb mov inc dec out inc jae cs leave push mov lds int adcl jne adc or mov cmp dec xchg push pushf mov loope push sbb mov bound add shlb notl insb gs pop or idiv scas push js in cli dec or daa sub das mov jnp scas fildll jbe add xchg mov fsubrs adcl or (bad) jmp inc (bad) mov sahf iret addr16 test fwait mov fnstenv pop xor sub mov scas adc (bad) in sub pop ss repnz lret std pop inc add cs mov pop arpl inc sub jb scas mov and inc lock fdivp idivl inc icebp xchg nop into int cmp bound out sub stos mov and xlat insb cmp out cwtl xor mov pop xchg sbb repz mov dec shlb outsb addr16 cmp mov jmp adc fdivr test (bad) out in clc imul push (bad) jl cs jle mov mov adc cwtl jno nop aas add xor push fmuls pop aaa lea mov mov rcl adc jecxz rorl cmp dec inc mov sti outsb nop nop mov xor mov mov clc fsts cmp pusha pop mov lcall mov pusha or mov jno pop jle inc (bad) stos pop lock out pusha push lcall jo scas lahf add daa pop jns arpl test decl cli cmp adcl movsl scas inc xchg icebp push or add sti pop inc push cwtl fisttpl jno add test shrb bound decl pushf jecxz mov in stos dec mov pop inc lret xchg cli addb rol and movsb push push rcl sahf ljmp int push cmp int bound mov mov movb inc aad cmp insl test xor ret jb bound fnstcw mov mov or mov inc jnp std ss loopne or push cmp jne dec xchg xor fistpl cli adc fadd pop iret sbb xchg xchg xchg pop mov or cmp sub push scas loop ja cmpsl add (bad) push leave into jnp add and les pop imul mov and sub mov arpl xchg cmp clc or (bad) adc push lcall jns or push pop pop add jae or jnp scas mov pop and xorl les jnp push sbb push push sahf jae xor incb xchg adc lret xchg jmp jl cmp mov cmp sub ljmp (bad) jbe sub cmp xchg jge adc bound test js jae insb lods pop push mov fsubrs sar das sbb scas jns fbld ret movsl jno stc cmp scas hlt xchg shll leave inc adc xchg int out and popa movsb mov movsb xor inc stos js lcall lcall cmpsb das loope shll inc add sub je or push lret push mov cmp fmuls mov or cmc push fcoml movsb xor cmp xor call jne cld dec mov rclb pop push cmp sti sbb push fisubl pop xchg jp xchg sub add dec push (bad) aaa add andl ss mov fdivrp (bad) push scas std pusha push out repz xchg jmp out inc les and add fucomip pushl jge cwtl icebp mov adc xchg mov bound sarl push nop adc popf add jns dec mov mov fadds inc pop and push stc enter mov lret jg xor ss mov call ret pop jl stc inc clc add (bad) lock and ret int3 jmp das in mov testl icebp (bad) cmpsl ror popf mov jne jb das lods repz lahf mov inc xor pop or xchg mov test add insb mov addr16 jmp xrelease jno pop xor ds mov faddp imul into xor push (bad) (bad) mov xlat pop push (bad) pop movsl jge push sti out ss dec sbb in mov mov into test (bad) lret dec or pop bnd push outsb cmc leave lods (bad) icebp and cmpl bound jb dec dec cmpsb jne andl xor mov cltd cmp mov mov jmp icebp push sbb rcrb dec cmp and pop fldt mov inc stos lods (bad) out mov inc adc adc nop mov dec add (bad) out or mov dec fnsave push adc pop push fmul xor lahf cmp mov or jle pusha (bad) jae mov adc imul push mov xchg sbb test push lahf push add and mov add (bad) mov aas int sahf inc dec or js js nop fs in pop shrb inc push xor shrl je pop and sub xchg xchg mov mov testb stos movsb aas dec sarl (bad) inc enter ffree adc aam repz cld ror sarb jns ds (bad) out push lret das pop loopne mov repnz pusha (bad) ja popa mov jb or dec loop cmp jmp fistp and aas jle aaa sub jp (bad) test pop mov mov sub push les mov pop lcall and jg loopne (bad) int jbe movsl ja push icebp cmp stos pop cld stos jbe ret jne dec test int xchg cmpsb fcomps out lcall add xor inc cld hlt xlat inc mov jns ret hlt scas pop pop test or lret in repz jmp lods push jl jg xor dec push push adc mov int mov ds stos sub scas mov cmp mov fcomp xorl push adc sub or test rcl pop adc cmp mov pop push aad cli and daa stc leave xchg stc aas jmp std daa pop cmpsl xchg es or fiaddl dec int3 xchg ja pop mov inc sarl jns sahf imul mov nop mov pop outsb push mov xchg inc xchg add and out adc mov aas cmp mov stos repz jp fs push xlat in dec fimull mov ss adc (bad) leave xchg xchg mov add out or test or divb mov push pop or movaps pop stos outsb xchg lods inc movsb xchg add push std movsb movsl add sbb push adc dec cmpsb or (bad) push push clc xor pop fucomip sbb and std jae adc push cld push push fcomps sub cmp les jns stos mov (bad) sbb (bad) mov in cld jecxz sub sub push mov das sbb setne mov sbb push or int (bad) sub jnp inc dec stc fcmovnu leave out xchg mov int xchg mov push fildl mov push mov sbb mov jno cs cli outsl mov or cli ds xchg rcll icebp js pop lahf outsb or jo xchg mov into fsub jno ja lahf fnstcw cmp xchg sbb cmp mov jp,pn jo or mov adc ss add adcb sti jmp jae adc xchg (bad) add sbb jae and adc jo int3 mov (bad) mov mov pop ljmp inc pop adc sub dec jnp int xchg enter and pusha push pusha popf pushf jbe (bad) outsb sbb pop clc lods push jne jno (bad) xor (bad) dec test movsb or dec jmp pop pop mov mov mov mov clc jecxz shrl mov lcall call nop mov cs insl imul mov lds cmp pusha repz movsb out jns jl nop pop cld in lcall (bad) bnd (bad) lret (bad) mov out (bad) xor sub dec (bad) xor mov fsubrs mov pop scas xchg jecxz cmp data16 sbb or or pushf jmp sti mov scas leave and iret add inc loop test fs xor stc and les pushf push inc cli sahf cmp mov frstor jbe sub xor jns (bad) js push and add lea cwtl dec daa enter xchg test iret out push mov xchg fisub xchg iret in call cmpsl add pushf jmp stos mov jno mov lds nop add rcrl xor cmpsl movb pop xchg cli push scas sbb outsl inc das sbb enter ss in xchg inc (bad) mov in into mov xor pop mov mov int3 jmp xchg lahf cltd popf xchg idivb out out clc cltd ja pop sahf (bad) lret cld in daa mov inc mov add mov mov dec repz add (bad) xor aad mov in cmp lods jle (bad) mov shl mov cmp mov lahf pushf inc sub push or fs add cmp rorl xor shll mov adc nop repnz sahf cmp cmp arpl outsb xor int3 in add repz dec xchg push mov push shrb test inc daa xchg loopne movsl lahf (bad) add (bad) scas fstl cmpsb iret cmc pop inc push les scas ja dec into xor outsb gs std es pushf sarb xor scas jg inc xchg cli sub movsl push fisub and inc addl jp or add cltd mov dec mov mov xchg mov sahf fcmovb sub pop imul insl aaa fs lock imul mov imul add inc rolb or dec pop repnz (bad) std pop sub ljmp inc (bad) fcompl push outsb inc gs scas jmp je rcrl and mov xchg inc imul mov out xor cmp inc inc mov mov sub dec sub pop cmc out jae cmpb xor (bad) (bad) das mov popf fnstenv loop pop xor sahf insb ss fwait mov arpl lcall in ret push or sbb add jne les jg mov jp jbe mov or sbb (bad) mov pop sarl lods mov inc stc and aas xlat bound pop repz mov dec mov popa out jmp popf lods aaa mov mov mov and cmp aam outsb lds cmp in xchg enter push scas adc out outsb not xchg int sub sti mov cmpsl fs adc and jg ss ret jge pop test mov xchg dec and repnz fstps mov das aas cmp test loope inc iret xchg mov lock in push rolb pop insb jae dec js push mov or jecxz xor mov lea leave push dec stc test xor popf std jno cmc gs cmovno movb movb inc mov xchg mov enter js orl pop xor push je test mov test dec shlb mov nop fldt cmp inc dec mov or or loop mov hlt pop stc outsl sahf and push movsb lahf cmpsl jg rolb mov into xchg inc push sub xchg outsb jnp adc mov push (bad) fcoms ret shrb outsl scas nop clc mov (bad) pusha out rep imul pushl pop add lods or (bad) mov loopne or or hlt bound or imul cmp push add repnz xchg daa ret push jmp mov adc sbb data16 cltd imul jo inc fsts mov jge dec push fcoml push movsl (bad) or sub mov (bad) decl xchg adc cli in adc sbb jnp pop ljmp and ds jg sbb test dec xor out lahf pop push pushw dec lock test cltd or rolb inc in jecxz mov inc xor aad fsubl mov xchg sbb or inc stos push (bad) xor push mov ret or subb sarl aas lret push lcall xor push sub mov test addr16 dec and xchg sub inc outsl pushf lret mov (bad) add adc jmp pop inc xor inc mov test pop inc addr16 and add push inc sbb icebp or dec cmp rcll test dec into jp movsb cmp inc mov sti aaa xor cmpsl xchg jmp mov outsl mov mov mov int xor push jecxz jge movsl or pop sti sub ja xchg or fwait mov cmp cmp pop jae mov push cmp push ja imul push pop int3 adc call xor or fucomip and mov or and cmp jne sbb test add xchg lahf adc mov loope aad and mov mov mov jmp dec cltd in cld js and imul push push push cltd xchg sub pop sub jmp imul or push push leave cmp pusha gs mov popa pop adcl int add aaa mov mov hlt jne movsb jg dec xor push add out sbb mov ds inc loopne mov xchg sub sbb pop lcall mov sub in fs movsl push dec out jns cwtl aas push adc bswap cs lret jbe nop mov movsb add cmpsb out xlat insb xchg out pop pop mov daa push push xchg (bad) insb pop jp scas jge cli push jns stc dec arpl out push ss dec xor movsl sbb xor sub movsl popa enter mov cld mov jb sahf sbb das icebp mov push sbb andl inc mov mov es adc int3 pop popf jl iret push mov test cmp dec loope cmp pop popa xchg dec inc mov adc ja dec xchg inc inc inc popf mov push xchg xchg cld (bad) push lret mov aaa inc (bad) mov lcall dec jne push lcall addr16 sbb outsl push xchg stc mov iret xchg (bad) mov test or mov stos and scas jg ret pop leave hlt mov cmp test sbb jnp fwait cmp lcallw xchg push mov push and xchg je push aas xor jae jmp ficompl add pop xlat in pop cmp idivb dec fdiv xchg cmp jge addr16 adc (bad) mov repz pop icebp pop movsb arpl ror (bad) ficom ret popa mov xor xchg sub daa cmp rcr into push push fnstsw (bad) mov mov adcb or and outsl push pop push fstpt push es push adc popl insl jne inc rcr xor mov and arpl xchg mov push add loopne mov je sbb js adc fs mov lret je sbb aam push bound jnp andb aas cmpsb stos gs (bad) xor iret in sub mov xchg push or int3 push adc adc xchg into push popa mov ja stos mov and mov int adc add lcall adc xchg sub js int3 pop xchg test push fwait test subl scas inc daa adc lock jmp push (bad) jmp scas sbb aas pop aam pop sbb daa pop xlat or cmp subl fwait jp add or pop sbb cmpsl int in jle add push ds dec loop scas xchg sbb in and sub inc push push outsl (bad) repz sbb fs repz repz pusha outsb and nop ja cmp mov out adc pop dec jbe jmp lret inc xchg leave sahf jb and int3 inc and mov mov mov test outsb fs cwtl mov out in lahf adc add sbb loop movd cmp vcvtss2sd sbb push push lods push xchg jo dec and xchg std out (bad) dec or (bad) cmp xor cmp aad clc shrl cmp jge or popf int3 jb mul mov mov pop insl enterw jmp xchg mov ds mov ret in and sahf stos retw xchg roll or jns jno pop ss mov inc inc dec cmp jnp cli cmp adc mov (bad) mov iret mov sub push das insb fwait insb scas jp adc xlat jne xor (bad) sbb leave pop xor je dec pop jp leave adc mov test dec lret popl das in lcall stos nop jns sbb out aas push inc mov std and ficompl cmp sbb ja adcl sbb add sbb cwtl mov mov movsb adc dec lahf sbb (bad) fs xor jp push mov add pop imul pushf xor lea imul xchg addr16 xchg sbb data16 inc sbb xchg pusha (bad) sub loop out sub fcomip in fs stc fwait clc roll mov mov clc mov inc out out fbld xchg ljmp int fdivrp test add xchg mov mov adc adc popa lock enter jecxz stos icebp sbb xor xor xor adc lret cmp inc dec or rcrl pop hlt ljmp loopne jb cs jmp adc jle jge flds aaa or aad (bad) fisttp loope mov mov jle,pt leave or subl mov lcall in movsl mov scas and ds add mov push pushf gs and mov insl push in or pop sahf rorl pop mov lock iret and jmp push mov adc xchg mov dec ret mov in push fwait scas mov aas add jecxz cmpsb sbb add mov test dec and xlat cld jl adc test jno arpl insl mov popf mov add pop aam out cld inc mov nop sti or sub dec rcrb or in adc out lds cmc adc and xchg jb adcl cmp xor sub enter (bad) jp lahf ja test cmc int (bad) sbb pop sbb mov sub addr16 push push jno push push push mulb jecxz outsl mov sbb js inc dec mov xor clc lods push das dec xor out insb or fs les mov jne ret pop xor add push rcl or outsb sbb (bad) test pop out add jbe pop test jecxz int3 scas dec clc or xchg mov mov adcb (bad) das xchg mov lcall (bad) sti aam add sbb lahf dec outsb mov nop jb pop adc jl shlb or sbb into push int3 jmp push jl cs xor es dec cmp jle cltd je cmp adc sbb ret inc call mov jbe es dec sub leave and mov stos icebp fisttp jbe fmull mov mov mov sbb push aas aam mov push loope lret in pop and ljmp push jp pop (bad) clc pushl cs ss inc movsl cmp mov mov pop sarl iret aaa ja (bad) adc dec mov mov pop outsl add adc and stos xor jmp test insb inc sti push jb std dec xor sbb or and pop out xchg adc cmp js jp into sub int ja jns lea sti and dec add and movsl cwtl (bad) dec movsb adc pop cltd scas test add ljmp leave add icebp jnp fwait rcrb cld xor das imul xor push (bad) ja stc xor mov lods mov notl and jle addb imul sub pop cli lret bnd xchg cmp fsubs xor and or mov add cmp movsb ljmp dec lock pop ret push or push jbe mov nop addb ss out mov sbb shrl pop xchg std aad cmp lcall mov or or adc mov push cmc xchg lods jae iret mov sbb xchg inc fiaddl dec adc mov inc in (bad) or and push lods mov or or aaa lret or xchg outsb shll pop pop jno jno push popa dec iret or add pushl dec xchg sbb mov cwtl pop pusha cmp nop sub call mov movsl or subb xchg mov add xchg pop xor jp pop ror sbb fcmovne jmp scas xor loop push jge pop (bad) mov shll pop dec xor or fdivp or pop adc or test cli pushf loop jo xchg mull into push jo (bad) jae jnp rorb mov cmpsl lcall adc add loope inc push sub addr16 sub ljmp inc jne pop xchg pop lds (bad) les ret jnp sbb daa loop test inc add (bad) aaa and loopne (bad) je pop mov sub stc sub adc pop and fisttp movsb pop jae test xor loop lcall jp dec jmp cltd jae adc leave and pusha push scas aad pop inc add push jbe mov inc mov fstl pop pop stos push repz cmp xor ja sahf inc je pop out (bad) mov cmp or mov mov hlt inc mov inc mov (bad) outsl cmp popa mov stos lret pop cmp jp push gs out out jecxz xor mov mov leave jno dec sbb xor mov sti repz jae loope xor cmp mov bound das enter test and cmc and fs in (bad) mov dec insb adc jp dec and mov mov mov add aad pop rorb outsl jle pop int3 push sub popf lods or (bad) loop fisubl fdivr sbb jae into in xchg outsb scas pop (bad) daa into pop clc push (bad) stos sub shrb ret sbb fisubrl adc orl mov mov js loopne jns and hlt stos ljmp into stos cltd jo mov fldenv inc mov (bad) and jnp insb mov or pop mov jmp push inc adc out ljmp pop sub adc xchg mov out or jg mov mov idivb adc mov cmp pop repz out daa push sub xchg ja add in xchg outsb (bad) icebp adc addr16 cmp jae ffree sub add jo xchg fistpll aas mov popa gs pushf adc popl dec cmpsl icebp push adc mov xchg jmp test push mov fs dec dec movsb or (bad) pop call jnp outsl mov jne xor sbb daa pop mov dec sbb xor xor fdivs pop jnp push jns or scas inc iret clc mov icebp hlt sbb int3 data16 xchg repz push or sub int3 lcall mov (bad) xchg or lock xor test inc fistl out out lock sbb mov cmc and andl and imul or mov xor out cld testl xor jp cmp xchg push pop and or rclb pop add jg xor aaa test push insb xor test add call sub nop stos dec or xlat std and mov pop mov mov inc movsb shrb clc les imul sar sbb cmp adcl xchg adc adc pop pop push pop scas fneni(8087 imul or lods or cmc xor (bad) jae mov std push arpl call push je mov pop out ljmp sbb pop inc cmpsl xor xor inc jnp dec je dec push ja aaa insl adc test jp,pt daa dec ret xor lock push and jmp daa add add enter fcmove sub movsl mov (bad) or loopne mov insb arpl cmp or arpl shrl jecxz rorl inc in push testl xor (bad) push sarl mov adc pop mov jp loop mov jne stos cmp lds dec mov push adc test add inc ljmp outsl jo int3 (bad) adc into pop movsb mov jg xor ljmp mov (bad) add mov fsubrs sub and mov jb sub roll sbbl test or dec outsb mov mov test and xchg pinsrw inc sbb pop addr16 pop dec bound cmp rclb sub sar test add aaa mov loop repnz dec xchg in not outsb cwtl out lock dec addr16 ss iret loope push mov fdiv test aad lods mov adc xchg leave pop dec mov push xor (bad) cmp (bad) xlat sahf cli sbb (bad) jb jge add (bad) sbb cmp adc dec in mov mov push add xor and push je or sahf icebp add mov dec arpl mov or mov inc rclb fdivl inc ret mov aaa dec add outsb inc scas idivb push decb jle mov (bad) imul jbe pop xlat xchg cwtl stos pop popa push mov push dec int3 (bad) mov in jns jmp fwait mov or push xchg (bad) xor jno push aas addb mov psllw sub xchg je ljmp test mov cmp mov xor out (bad) insb cmp movl or mov jno aaa xor mov cld pop push lahf push loop and xchg ret cltd mov jmp mov add jo out fadd mov fwait mov inc xorl iret inc mov rcrl (bad) aaa inc jbe int3 push cmp sub ja add xchg adc xchg and mov std stos cmp notl push das cmpsb add mov pop jg adc cmp test push js dec jge cwtl xlat mov hlt into mov outsl sbb daa pop mov push cmp lods dec out jbe bound and pusha iret inc adc xor push mov cmp cltd repnz rol sbb cmp je push leave popl dec sbb sub jp or or xchg inc movsl cmp insl mov das (bad) lret cs in inc inc and jl or and aas ret insl add mov and inc mov pop adc inc push jnp (bad) cmp jae je cmpsl int dec mov sti insb sbb add xor mov push jo sbb imul add das scas repz iret xchg in xor jp aas fstpt lret pushf mov jbe jmp ret or lret xchg inc out in nop mov mov daa xchg pop push ljmp lret sbb in mov data16 or pop sbb imul ret push cmc jmp lods lea ss mov xchg adc outsb sub repz sub lods insl arpl sahf or outsb (bad) mov xlat aam xchg sahf adc outsl setnp xlat pop and lock mov loopne lret scas dec inc (bad) dec aad lret sbbl cmpsb jle movsb dec sbb sahf icebp xchg inc iret into int add cld in pop sub xchg and out pop mov std aam aas or sbb arpl push or xchg adc outsl jae and add mov pop mov pop popa or jb sbb dec jne cwtl nop lods mov lret adc push mov lret or outsb aad mov roll sbb mov inc insl insb mov js js test test pop xor sbb sahf push mov lea pop popf fidivl dec mov dec xchg sbbl into pusha pop or pop dec push test shll call insb repnz pop (bad) xchg (bad) push loopne xor inc pop sub addr16 mov cmpl shrl insb push add push or test fucomip inc imul jg or test add push xchg je ret push (bad) out inc rcll pushf sub push inc adc ror push pop mov je cs enter mov icebp insl push jnp adc sub cwtl movsb js adcb cmp loop std shlb and mov lret repnz mov mov out cs jmp mov in cwtl add sub data16 or (bad) leave mov add fwait push jne mov lea xchg push (bad) packsswb not xlat movsb jb jno into rclb push insl roll insl xchg adc call int3 adc daa xor mov mov cmp inc sbb mov (bad) insb cmc popf mov pop imul inc or adc sub pushf jo push push lret inc mov xchg push push je pop push outsl pop sbb jmp js lds dec push mov hlt push push cmp cmp adc (bad) popa je into aad jb jecxz sarl imul fadd in adc dec addb rcl pop or lods xchg movsl mov mov addl cmp pushf out and pushf int3 stos cmp cwtl xor pop fnstsw loope dec les into push or mov hlt xor fwait (bad) jl repz cld push insl pop cld out bound outsl mov test in push sub push cmc dec mov (bad) cwtl (bad) dec or adc push jae cli mov sti mov push sahf cmpsl pushf pop leave jmp shrb pop cmp cmp sahf into into xor push push mov aas mov imul xorl loope and fwait dec xchg popa push inc mov xor mov sub mov popf jp in movb imul (bad) mov aam and (bad) out xchg dec mov inc xor or mov mov inc cmp (bad) jae (bad) stc jae imul in jnp incb imul adc dec mov dec xor sbb sti jbe clc cmp push loope push sbb and ds adc and orl dec je sbb (bad) dec outsb xchg cmp lret sub test xchg dec jp push mov out popf dec mov mov push addr16 sbb or and mov push cmc sti adc insl mov xchg sbb jbe iret dec (bad) imul lods sbb dec adc pusha pop mov (bad) iret jl popf mov sarb dec inc iret jns mov push (bad) push call add (bad) push xor pop sbb scas mov jge mov outsb repz insl or cmc imul mov and cmp adc mov pop xchg xchg aam jg aaa lea jp mov nop (bad) mov sub sbb insl clc sbb scas mov fmul jnp stos stc dec lea loop cmpsb mov call inc fidiv mov fstpl xor push in int3 and jo fdivrl inc mov adc inc inc mov fistp and div cs leave xor mov rclb fwait stc xchg jae jp push lock mov xchg adc xor cld add add jmp je sahf sarl xor and add push inc int loopne out inc into test testl es fidiv cmc jle out mov notl repnz cld pop and mov jmp cli lea (bad) or mulb add pop lcall imul and add mov clc jnp jb repnz mov mov jo push mov sbb inc mov xchg sar or jmp xor fsubl lret sti rorb insb cmp cmp scas loopne inc mov ljmp or add (bad) xlat inc adc enter (bad) pushl adc dec aam mov imul jge fsts mov pop into cltd cld loope insl dec cmp xor lret mov inc ret cmp dec xor (bad) dec adc cmp aaa sub frstor or lock mov adc repz xor sbb (bad) jg test popf push mov (bad) pop cmp out dec push test mov aas add cltd adc rorl (bad) push inc movsb adc mov mov test xchg and xor int xor sub cmp pop mov jne fcoms aaa dec std jnp in or data16 xor daa dec xchg mov stos lret inc fwait in and mov jo fs fidivrl imull sti adc jae pop pop std les cld and dec outsl sub inc pop mov pusha fnsave mov cli testb mov out cmp cmp cs cmpsl jae dec rcrb sbb stos test fisttp cmp lods and popa mov pop test js mov mov xchg loopne fbld pop mov rorl movsl mov xor ja ret jo es mov jae in insb data16 clc adc cmp popa add (bad) out inc xchg jg shlb jb lods mov fcoml aam dec cmpsl ret ss add dec jp inc xor push mov and pop and ret mov jmp sbb outsl cmp (bad) rcr scas (bad) (bad) jne pusha add hlt ficoml mov sbb fistpl lret outsl sub jmp jns dec call cld pop test add lret pop mov hlt mov adc mov dec sar pop aaa inc sub add sti call sub sub nop lds sub fwait mov inc je or mov scas out xor (bad) mov cmpsl jge cli mov ds push pushf inc push bound push or sub jns xchg mov mov (bad) jae or sahf push test mov xchg aaa scas jne jae call cmp mov jmp lret and loopne ds lea cmc mov inc int3 loop mov mov sbb pop movsb inc movsb sub sub xlat shrb mov push mov add mov pop dec and js icebp pop faddp aam dec sahf addr16 data16 (bad) sub xor pop inc lret jae xor xor loope pop ret je aam xor sbb add js mov inc scas std adc mov (bad) lret in hlt aaa sbb sarb call mov call jno (bad) mov mov lock les jmp mov inc gs inc out mov (bad) aaa icebp xchg shll lods xchg mov test mov jo mov or jnp pop scas sub push jle addb cmpsl nop leave repnz mov aaa stc test loope push add xor push or shl js xchg je add jmp xor int3 inc std pop cmp pushl js dec dec mov stos adc add xchg pop fs ja jg nop xchg jnp imul sbb lcall lods sbb jnp jbe xchg push test push push add add (bad) push js xlat jae int shll roll push xor or in repz push (bad) vpmullw xchg movsb loopne sbb into jnp hlt xor outsl fnstenv clc sbb xor mov xor inc pop gs movsb ficomp adc mov test pushf stos add fwait sub mov out fsts movsl xchg push loop jge jle xchg inc add add push aad test jge xor out incb nop fistl push cmp es (bad) notl roll add ret (bad) or not dec fcmovne pop sub inc inc ljmp and jmp jmp pop insl cmpsl mov clc xchg xor test ds movsl jnp sarl int fwait and sbb mov notl cs or cmc jno adc icebp std (bad) jmp fstpt loopne and dec shlb jns ss jbe dec movsb inc or aad add leave cltd dec xor cwtl inc pop lret jne push dec ret or and push mov jecxz test aas jnp test ss and push inc sti out add push addr16 jge test sbb call gs aas jae or inc ljmp daa sbb xchg nop xchg sbb mov and mov js loopne test sub lret push mov cmp shlb outsl mov (bad) js ret subl leave je sbb sbb push pop xor (bad) in mov mov movsb (bad) xor in jl sbbl test mov sti dec xchg or mov xor xor (bad) mov push mov cmp adc dec jmp xor shrb or imul leave xchg mov mov pop xor (bad) sub mov and movsb or pushf pop cmp and int mov mov jl xchg xchg loopne mov add repz movsb stos pop int sub ss mov inc push das loope jge mov xor inc loop cmpsb out es and jb cmp out fcompl stos or jecxz scas je es inc jge outsl jle mov jne in out xor ds adc mov push mov cmpsl mov (bad) mov in xchg mov pushf adc lods stos pop xor pop push sbb lret ss sbb ret int3 inc (bad) sub mov xchg adc pop push xchg xchg imull addr16 adc rcl pop test arpl fwait loopne stos xor inc int loopne jle xor movsl fistl pusha sbb mov aad jb (bad) and sbbb test out sbb inc daa sub cmpl xchg pop mov js pop jl ficompl into aaa or mov mov mov test mov dec mov repz cmp nop test pop mov (bad) lock push jecxz into inc add or les fildl icebp sub cwtl cmp push fcomps ljmp or pop sub xor mov movl sbb stos add xchg lods push add mov test dec sub xor jns mov mov cmpsb sub cmpsb mov into lret cs data16 sub mov xchg mov adc stos push inc xor pop mov ret mov mov std mov sub push jecxz mov xchg sub call xchg (bad) cmpsb fcoms push rcl inc add dec adc cli aad or sub jg in and mov insb push sub sbb mov pop mov lahf sti scas xor sahf mov loope leave inc psrlq mov sbb pop (bad) jbe cli sti (bad) mov fs inc movl iret xor int daa mov insl lcall test lods aas int iret sbb inc loopne sahf xor and pop mov xor adc jnp pop shlb lret int3 jp cmp sub adc and repz enter loopne fneni(8087 mov ficompl inc mov sahf iret loop pop jp std stos mov ficomp (bad) aad or in popa outsl push ja frstor lahf lret cmp xchg xchg inc sti int ret mov bound jnp xchg je inc and dec dec add dec pop and sub repnz bound and cli out lock mov aam es jmp push (bad) out sti in xchg pop mov popa fwait xchg lods out popa in mov jo fnstsw push jno mov mov ja inc push xchg pop ja lds jno outsb mov nop clc insl gs jae xchg in jecxz nop test scas icebp pop loopne xor push enter lea (bad) lcall insl js (bad) fwait scas int3 push in and pop fstl in mov adc lret inc outsb sbb push test scas xlat inc push lock jg push jecxz pop push cld push adcl cmp jno sub (bad) xor xor jae fisub sub popa mov xchg mov loopne in enter fistl cli and leave mov insb xchg push xlat or into sub push ds fdivrl aad inc xchg lock or repnz dec dec ficomp or jmp stc dec mov mov clc ret mov pop jnp ficom lods sub sbb ficompl enter lcall jecxz fs rcl in xor test (bad) push mov jle loop and mov jle clc aad test addl (bad) xlat das mov mov adc adc jge xlat pop das aad push jecxz or gs icebp jge inc dec iret dec inc cltd sbb sub cld test arpl shll pop push into xchg jge in test test (bad) daa sbb cmpsl jnp or add test ss les add stos mov lods pop call outsb cmp pusha or or push dec roll (bad) xchg or inc xor cmpsb jmp mov scas xor jne sbb sbb add arpl adc fs or aad push cmp dec es mov xchg dec cmpsl imul ljmp add jbe mov roll add dec in mov push out adc mov add dec xlat lods xchg push jb inc sub ret cli or cmpsb mov (bad) sub sti sub and push insb mov add xchg add popf pop ljmp lret test dec or aaa arpl and repnz rolb ret scas cmp jmp jae (bad) jnp bound mov lea push xchg das (bad) lock (bad) mov mov cmp jmp sub jg,pt adc add mov jp cltd mov jmp cmpsb xchg dec or pop scas inc sub mov push lods mov (bad) je insl inc lods imul lods xchg inc pop push loop xchg mov decl fimull test popa and (bad) cli jmp imul xchg mov repz push shrb pop stos loopne sub push sub mov mov popf int3 js cmp dec sarl and lds mov (bad) cmp jmp mov pop stos dec jno mov push or je ja cmp mov adc jo mov insb inc int bound imulb sub call push xchg mov daa sbb mov fsubs sub inc test testb add call std jb adc cmp mov test movsl scas movsl cld in push mov ret and imul sub cmp and (bad) daa fstps cmp dec sarb and jle cmpsb or idivl push sbb add dec cmp lcall es xchg ljmp adc loop sub mov loope xchg in mov jb cmpsl push (bad) mov cmpsb cli and inc mov gs xor jge lods and mov mov mov imul (bad) lahf loop rolb mov stc loop cmp mov test lock fwait cwtl fisub mov icebp xor add push pusha popf sbb sti sub test fdivrs fs push nop xor enter mov pop jmp or cmovne cwtl ss (bad) pop push push ljmpw pushf add jbe aaa inc pop test mov and pop rcr dec (bad) leave fdivr pusha dec pop orl push arpl rcll fist scas leave fnstsw ss (bad) scas sub cwtl into xchg push mov fwait out push dec xor (bad) mov jne dec sbb in sbb fs jp or push mov dec rcll mov out and mov add pop cmp xchg dec cs stos mov mov lock mov push jnp sti mov jno cmc add lret mov je in xchg jnp ljmp or fnstenv inc sbb cmp xor sahf dec cwtl in jmp shrl rcrl lahf lea pop dec aam pop dec xchg xor scas mov xor mov pusha lahf adc lods mov sbb sahf push fcoml xchg rcll or xor jbe icebp data16 xor cli movsb mov or scas nop or lds and in into stc push into dec movsl mov pop push pop sbb iret sbb pop inc iret dec push fwait es jecxz push adc fwait xchg cmpsl mov jo add mov and mov jno repz xor cmp lods bound cld push mov dec push xchg adc int3 repz fcompl and daa dec inc lret fmuls std dec mov lcall cmpsb adc jecxz or xchg mov and adc xchg mov cmp xchg in mov and test shl sti lahf add mov outsb push mov push outsl ljmp orl int3 xchg mov stc push cmp pushf ret add jge jg test aad mov in pop fldt daa fisubl adc pop and movsl xor and js and adc aam xor mov rcrb fxch lock jnp test mov jnp or out jmp pushf push dec into lea push push pop xchg adc mov cld mov into fsubrp cmp push add xor sub inc mov mov pop sar mov clc adc sbb aad or js je (bad) stc test cwtl outsl inc and push stc xor enter outsb sbb xor mov sbb sbb mov push xchg les imul in out cmpsb mov ss lahf int fnstsw mov adc xchg push pop ja out stos std inc adc cmp inc int and fadd xor (bad) outsb adc mov add cli sarl ljmp adc jae mov xor and fsts xor xor stos xchg sub fild lcall testb cmp xchg xchg loope push gs lock mov and add and push lret stc mov mov int3 mov outsb pop cltd sbb and js sbb mov pushf inc mov rorb pop dec mov nop cwtl jbe je and call add test out jp testl pop cld mov jg cmc jne dec sub mov cmp jg (bad) inc test push out cli mov (bad) or dec adcl lock xor cmpsl pushf or fnop xor loopne mov (bad) std stos jmp lods mov lret rcrb jecxz lods dec jecxz call ret aaa js or lret jecxz dec (bad) into movsb test sbb nop in xchg divl push inc xchg pushf adc pop mov pop mov adcl lds mov test mov test into lea xchg lret add fisub into dec rcll push sub aam stc js dec mov adc pop xor push out daa adc xchg cmp loope ds pop in in lds mov daa or fwait (bad) cs fdiv xchg push push divb xchg pusha jmp jno (bad) pop movswl jo jo push dec dec xor xchg gs cmp xchg mov iret dec mov and dec xor movsb stos dec fstps pusha add js je lods xchg or (bad) pop mov cs arpl pop mov xchg inc xchg jne int3 cwtl mov (bad) ficomp test mov pop lock subl inc pop negl cmpsl cmp repz dec mov gs lahf lods inc mov xor mov jmp shll add cmp xchg loop cmp sbb jae push fdivl int3 mul sub popa jnp push je pop add inc aad dec cmp into ss cld and nop stos push cmpsl fcmovnbe movsb pop cmpsl sbb inc ss lret pushf cmp jne sbb sub xor dec pop jbe mov mov and pushf jo daa daa lret jge mov fwait enter dec add repnz leave push pop (bad) xchg and or sbb pop (bad) std mov cli dec mov xchg aas inc jns je loope (bad) pop adc rorb loop jg adc nop je,pn mov sub das mov test or cmpsl sub test push pop xlat cld fbstp aad sbb add ljmp imul cwtl adc loope add fwait adc (bad) jb mov ret test pop add cs dec and xchg push sub cmp fcompl adc jno jae xor clc mov adc xchg pop jnp insl (bad) sbb mov (bad) js icebp enter imul or sar mov rcrb (bad) mov (bad) shll out jae push and les pop daa stc fdivrs jno lcall jl cmp xor int3 cltd xor rorl mov dec shrl ja ja out insb pop lods xlat insb add jne sub aam in bound xchg mov cmpb dec push mov fs xchg cmp lcall xor dec jg add mov lea cltd je aaa jne addr16 sbb push adc (bad) mov mov insb sahf jg outsl jo not jmp hlt and and jno dec sbb mov and loop add sbb (bad) js mov rolb adc sub ljmp add call stc jp mov mov xor hlt ljmp aam dec mov lods cmp ret jge mov and mov test int bound mov in and fcmovb sbb jbe dec jnp lea push lds mov dec cmc aas stos (bad) pop (bad) pop push inc fisubrl hlt out inc shr lea dec pop outsb cltd jb inc fmuls dec (bad) sbb dec xchg ret fwait out into rcr cwtl jns (bad) mov add push ret mov push add sarl ja jno roll out mov (bad) xor into cmp scas or dec mov daa bound cmp outsl popf inc test pop lock inc (bad) movsl cmp jbe repz nop (bad) insb jl add outsb push push xlat jp mov add les mov out ljmp pop cmpsb mov push xchg mov loopne mov mov adc lods and test xchg inc sbb and lahf cmp (bad) cmpsb jne mov mov mov imul nop xchg es lods dec test sub adc sub int3 inc fwait jns mov (bad) out ljmp add (bad) (bad) lret outsl aad cmp in ja or inc pop stos sub lds xchg iret clc stos cld xor mov repnz dec (bad) add jge mov (bad) push jbe in ss xchg adc sbb aaa dec scas add lret adc xor stc popa dec sbb scas dec loope in or xor dec gs loopne outsb js dec scas xchg pop and pop outsl (bad) lock xchg cmpsl jno (bad) cltd out xchg push out outsl les pusha aad stos sub sti sbb and cmpsl pop repz rolb pop xchg and sub sbb jl int mov (bad) loopne sub jg xchg fdivl cs jae dec cmpsb ja xchg lods and and dec inc mov lahf lock dec movsl mov inc add int3 add mov (bad) in lock call xor xor mov out mov mov xor stc mov adc arpl repnz cmp push jno mov aam sbb in pop mov push inc iret rcrl (bad) mov mov loopne scas xor adc mov inc fcoml xchg xor loope jge stc mov loope test out sub jo jp dec pop or in mov xchg pushf lock nop call test or xor mov popa sbb push dec cmp dec (bad) cmp jle test imul pushf xchg pusha (bad) (bad) jmp sub loope push fcomps jge jne push inc jg pop (bad) push sub aam outsl das punpckhdq mov xchg xchg sbb mov lods and cmpsl mov jle xchg push fdivrs cmp or hlt fiaddl test loop (bad) arpl ret scas stos insb add cmp rorl pop push pushf inc adc pop xlat jns inc sbb jae push loop cmp fwait mov lods bound inc xchg fistl and lods pusha repz cmpsb adc cmp cli rcll je sbb mov cmp int sub xchg xchg js and jnp pop dec js adc gs add mov ss inc popf jmp add addr16 lret das mov cmp std fsubp pop pop psubb sbb stos jae mov push cltd pop ret fidivrl sbb mulb popa cmp enter lret pop test cmp jae scas and subl inc nop lret stos push fdivl push ja in mov lock out jmp cld sub and enter enter dec loope aas out fdivrs mov sub stos arpl in out fs sub mov mov cwtl jb aam dec pop adc incl cmp lret dec lcall aaa lods lods test sub ljmp aam mov ret inc add ljmp xor and xchg loope xor mov cld arpl sub in inc stc fdivp dec or rcr jns inc and sub or cmp dec (bad) in lock out dec addl insl jo adc add mov gs mov ljmp adc fwait addl push push (bad) repnz and mov xor mov lret stc or pop add pop fnstsw hlt mov add aad mov pop sub jns jno cmp mov inc adc jp aas xchg xchg cmc mov adc xor xor cltd (bad) push sbb lret push clc pop loop push insb aad lret mov inc test sub (bad) or lcall add mov cld lret mov jbe pop (bad) pop xchg inc fcompl lods add xchg fnstenv cmp jge sub addr16 test dec rcrb mov pop into jnp in dec push sahf int3 cmp cli jo hlt inc sub lds test xchg pop jp xor cld lcall mov out clc pop mov dec jle or push add lock out ret mov xor test (bad) stos out (bad) fadds (bad) sbb inc lcall aaa mov aas sub xchg pop mov dec pop mov inc mov and push cmpsb mov (bad) dec stos lret mov or xchg sub inc xchg xlat icebp cmp (bad) jb das test fistp insl lods mov adc jmp push add test jno stos bound (bad) xor rcrb mov xlat scas es jae jno std repz fimul fsubl int mov and mov stos in cwtd cmpsl ret xchg dec sarb xchg sbb or loope push mov gs fistpl hlt mov cmp sahf aas push add or ja xchg or mov mov inc xchg insb and xchg xchg add lcall shll jo fs imul sbb jp and inc mov enter inc js jl sbb adc mov lcall jp scas (bad) sub repnz test push mov in mov adc sub xchg call lods xlat jl jg cmpsb pop jl jmp fsubrs sbb mov mov shlb shlb iret fiadd nop pop aas loopne or (bad) adc cmp or dec cmpsl movsb call push jo imul mov icebp repz sub push cmp fsts (bad) jo out add xchg lret je loope jae mov sub ds pop mov push aam pop pop add and jecxz imul mov pop fisub adc inc mov adc sbb mov flds inc cld ljmp cmpsl ret lds sti pop sub stos arpl call inc mov xchg (bad) rcrl loope iret addr16 xor pusha ss adc pop xchg fdivrl dec sbb jle sahf push movsb and fbstp repnz cmp arpl repz mov movb adc movsb cld mov rolb inc inc aad test loopne sahf cli out jmp (bad) pop sub jp stos mov sub cs int (bad) xor fs pop lea or cmp test pusha addl punpckhbw dec shl insb stc nop cmp push inc inc mov cmp mov sub jns repnz or iret jmp sub inc pop fwait dec cmp out in and cmp and lret movsl dec push dec dec adc xor cmpb adc jmp and xchg in mov pop sbb fs adc rcrb inc movsb jg jo ss fnsave movsb sahf push scas addb mov push xor movl fwait movsl jne rcll imul mov xor aam cmp and mov shrl mov outsl cli stos inc outsl pusha xchg sti inc mov mov adc add dec imul sahf mov (bad) mov push inc sub xchg cmc mov leave fidivl xor mov call ja (bad) cmc stos jl add mov daa cmpb jbe xchg (bad) dec in sbb (bad) or inc pop sub jp ljmp inc lods rcr stos cmp mov gs xchg adc push aam fsubrl sbb dec js push (bad) sub (bad) ret jne or (bad) jg ljmp ja icebp xor sub push dec dec jle mov lret sub adc jmp mov iret sar sub nop lahf lea and push push jge out cld (bad) clc lods hlt jne movsl iret (bad) mov add (bad) inc mov imul push mov loope (bad) jecxz rorb loope mov mov mov movsl jnp cltd push mov popf mov cld fs push xor flds (bad) xor shrb mov rcl mov push mov mov mov inc sti negl and mov or pop sahf pop mov data16 adc mov xchg inc aas btr or aaa fdivrs aam sti loopne lds mov jge test or ret pop or inc das (bad) lfs push fiaddl jno mov jmp (bad) repz cltd mov fisttp cmova dec jno adc mov fistp fistpll mov inc (bad) jb sbbb pop mov adc ret and push mov cmp jae repnz loopne (bad) cmp jg stc (bad) jns inc pop loope jl xchg mov loopne es stos jmp (bad) stc pop fwait in jecxz sub mov mov pop pop fisubr loopne je push cld dec mov xchg cmp add jo lods dec in mov mov (bad) popf push jge push mov rolb sbb xor cld and clc (bad) xor je inc pop idivb sbb int3 ds cmc add jmp and adc xchg jecxz xor dec mov add xlat divl pop lds fdivrl jl inc sub loopne cs sarl mov inc inc shll cs and push dec cmp jnp lret insl inc fistpll fstpl cmp fistpll sbb xor mov pop xor les jo and add sar dec in mov cmp hlt pop dec shrb xor mov xchg pop cli xchg mov add dec jnp in fcomi add pop outsb xchg lods jbe mov cld sbb jecxz mov xor add aad mov rcl cmc out adc cld cmp imull and jle push pop mov mov sbb add popa cmp dec cmp data16 cmp cmc jnp mov sbb sahf test adc sub adc xchg fisttpll push sub xor sbb add sar dec cmp mov in mov add mov loope lods adc jb in sbb pop sub insb and pop bound out scas xor adc cmp dec (bad) nop or xchg inc and dec (bad) cmp hlt ja rcl pop xchg sbb incb test sub and cld mov adc push fs outsb cltd add xchg xor out pop das js loope cwtl push mov push xor outsl fcoml pop add inc add xor adcl xorl sbb jecxz lcall gs sub sub pop rol dec int sub into mov xor sub icebp inc push rolb js pop out in rcrb and mov mov add jmp inc push dec sti sbb (bad) data16 leave mov (bad) repz sbb (bad) lock sub jp cwtl or pop (bad) int3 dec push push ds sub mov cli and xor ss mov mov mov pop rcll jmp pop mov mov neg iret jne mov shll dec in sub notl pop add add test cld push pop enter int3 cs stc das lahf mov xchg outsl lock out cld inc ja dec cmp lods (bad) clc fiadd movsl jmp test dec xor sub out jle jne mov xor les rolb dec fcmovnb lods dec dec and insb negl in add jno loop lretw les cmpl negb test jnp pop pop jle push sti fist out mov xor imull adc cltd pop ret (bad) hlt jl adc daa (bad) push fcmovu and cmpsb std add mov and loopne cmp fldenv (bad) dec adc add fldl icebp loop jbe push pop pushf pusha iret (bad) push sub cmp and loopne sbb inc es lods sbb notb jg nop inc mov add test push fistpl (bad) fidivrl fxtract dec pop adc pop cmp pop push call xor out mov sbb xchg or inc pop insl ljmp sbb cwtl int or addr16 push in and jne sbb (bad) sub iret cmpsb push jo cli mov hlt je xlat inc dec imul cli sbb mov cs arpl (bad) stos sub sub lds pop dec add aaa xor mov std mov mov orl (bad) dec dec lret aam mov jecxz jp sahf pop jnp imul sbb push mov cltd xor dec ret cmp pop sub cli mov jne jle xchg or and dec inc into (bad) jno (bad) sbb fisttpll rol scas dec xlat and mov sbb scas out dec daa inc jbe mov repnz xchg std sub or sarl mov daa stc in jns xor xchg repnz add dec adc test sbb mov fcom sarb xor (bad) repz add ret aas push inc ss (bad) rclb jne mov (bad) iret mov xor enter fs cmp push movsb lcall pop cltd xor or push sub dec scas or gs pop inc bound test and insl mov sub dec jp aam iret shlb cmp push xchg and das aad and xchg (bad) bound mov cmp test das inc dec dec dec sbb std out cltd in push jg jno or pusha loop punpcklwd cmp sbb push sub fwait xchg leave jp inc dec cmc cmp clc iret push aas (bad) mov pop pusha xchg lcall jbe xor pusha stos je dec mov push push jb cmp push pop push enter cmpsl fs xchg sub and lahf dec add and outsl inc cli jns sub push inc mov shl (bad) adc xchg and push jge mov adc xchg das fidivr xlat (bad) jbe lahf mov dec jle (bad) fcmovnbe jo sub into jno xchg xchg inc ret jns jg and popa stc push mov insb mov lret loopne mov sub jnp and push pop cli or call (bad) xor call stc xor hlt inc mov and pop sub cli mov cmp nop pop pop ret jbe sbb mov jle mov lods mov jg aaa ficom or pmuludq rorb cmp push sbb movsl mul js sbb mov rol test mov repnz hlt inc cli popf xchg push sar and fwait xor pop mov mov int (bad) ficomp jno int3 shll and pop or fcoml stos shr call mov scas mov lods mov mov jecxz inc nop jg pop and out mov mov pop mov sbb or fsubrs jg jns mov cmpsl mov insb jl push or xchg fldenv in sar cmp fisubrl cmp (bad) or aas adc fbstp or jo ret adc cltd notb in inc dec pop inc push lods xor ja or (bad) stos das xchg or or outsb add mov add jmp je pop mov jecxz loopne test and (bad) stos rcll rcll adc call call inc push cmp push mov fbld lcall xchg out movsb out xchg mov arpl xlat shrb mov inc cmp jb je dec sub jmp out pop cwtl outsl repnz and adc mov lret fimul pop add imul xor scas (bad) push ja andl in inc add mov xchg fdivl sub mov test fisttp cmpsl mov notb pop adc mov xchg sahf mov sub inc cmpl push into in addr16 cmpsb lods dec std loopne and dec cmp lret outsl and mov jg mov lds mov rcr sub scas dec mov sbb and mov sysret jle shrl push arpl cli dec iret adc loopne pop fidivrl imul ret scas cmp cltd or dec aaa andl les div insl gs lcall mov push sub sbb test jnp outsb fisttp or and divb lret addr16 jge in inc jns mov movsb jge sahf fsubrs mov sbb mov loop lods lret lock adc sbb fs (bad) or repz sahf rcl stos je ror or adc lret sbb movsb into aaa xchg mov jge jo cmp cmp add mov lock mov add stos jmp out aas sub mov call loope leave inc sbb mov push sbb inc fild rclb cli mov xor mov roll push out pop lea bound xor inc popf int3 aam (bad) imul inc sbb pushf lret insl mov sbb pop and pop (bad) jbe adc lret sarl and (bad) aas xchg frstor fwait pusha repnz or xchg daa shlb cmpsb pop (bad) dec inc data16 outsb push lret dec ret lret lods push test push sub inc ret add sub lock jecxz les shrb mov xchg inc ficoml or sub lods push and fbstp std jbe lahf sbb adc jnp dec push jp mov mov sbb dec test in clc mov pop push es sub xor mov ret fwait sub icebp push xchg or mov mov sub inc xchg jne dec out jle lcall add leave test stc pop add push jno dec out dec dec stc sub or popf pop mov clc inc scas stos push pop xchg fsubs clc push and push incl xor xchg cmp jbe and stos jp add sbb cltd loopne mov pusha pop lahf dec jnp fcmovnbe (bad) xor jb dec adc fs xor or sub xchg insl repnz rol push ss xchg sahf add leave enter dec out or mov mov lahf rorl mov jb mov imul pop sbb sbb jns xor dec jae jbe mov dec xor repnz or jb fcoml and jnp not sbb cld cmp inc jecxz inc inc sbb sti add pop dec push add fdivrl sarb in mov mov into mov pop mov adc and mov insb cmpsb jae xchg adc sbb push adc dec push aad stos xchg or sbb cmp test adc pop (bad) nopl inc mov mov mov dec lods aad pop (bad) loopne aad sbb aaa out sbb xor cs int3 mov ret das jle sub (bad) repz sti int rolb data16 pop out adc lock fisttpl addr16 loop dec leave test push or jb nop dec enter dec sbb fs fdecstp sti jl cmpsl je lahf in arpl xchg pop push int imul jecxz int3 stos pop mov std rcl sbb push pop pop out inc leave sub repz mov ja orl add mov mov lcall lea mov lret mov add shll jae fisttp leave xchg iret mov imul sub aaa mov adc out imul insb mov loop xchg cmp callw mov outsl push pop or mov clc add and in repz rcrl (bad) aam push sti cs jno fwait mov sub mov pop dec mov ja leave into fbstp dec into xchg jo stc shr (bad) and insb hlt mov fstpl repnz pop scas ret jg xchg dec fsubr cmp ja jcxz sub mov inc int addr16 inc sub pop js pop aaa sub fucomp jmp sub sahf fildll imul mov inc xchg fwait out stos inc fdiv cmp test and aaa sub pop test test mov pop inc mov jnp push xchg mov cli or cmp pop ljmp mov sub jae ror movsl add sub jp adcl cli ret push lock dec (bad) into add lahf pop aad fld test cmp lcall dec int repnz leave sub adc cld insb xor ret ja dec xorl mulb call cmp incb xor data16 decl hlt add inc add pop xor cmp jne inc js (bad) jae or gs outsb mov xchg push cmp mov xchg jne xor xchg ljmp sub dec stos sub test cmp sbb xor ss test and mov dec movsl leave fisubl mov pop sbb xchg sbb jmp push pop cli dec (bad) xor sbb in inc or sbb sbb cmc xchg push pop adc popa jne lcall mov pop and jmp add and fdiv inc or and mov dec (bad) stos out or xchg out dec movsb je inc dec std out imul push cmp xlat pusha sub insl or inc fcmovne movsb jp inc inc jo in sub mov cltd xchg push xchg and int out fwait adc enter mov mov out pop or icebp test inc push mov and mov push mov lret dec xor xor push add insb and pop icebp stc ret roll inc xchg push xchg movsb sahf rolb sub js fldenv push sub (bad) mov subb scas mov int mov cmp fs leave sbb in mov cli jp xchg pop jge call lock push stos push mov aam cld mov call outsl dec dec jg rorl cwtl and jp jb sbb push dec pop push cmpsl mov dec outsb das (bad) (bad) jle cmpsb cmp add inc adc outsb andl subl sub dec fs popa aaa push sbb pop lea call stos je sbb push in xor das cld (bad) pop popa (bad) out inc rorl and test scas lods fwait int add das cltd shlb dec mov mov mov arpl scas test icebp sbb lds cmp push jle mov xor inc insl pop sbb jae (bad) push mov sub or cmp sub lds rol jae and scas mov mov xor addr16 jl xor (bad) hlt aad or movsl pop ds repnz jmp mov mov add dec das or dec sub push sbbl mov packuswb pop test mov mov mov sub push cwtl daa adc stos sub push xchg jbe mov xlat lock xchg jae sahf test pop adcl jge cltd (bad) ds cs stc xchg mov lss xchg fisttp sub aam ficoml loopne sarl jbe and rclb sahf (bad) ja shr dec push mov xchg in sub and sbb xor loop (bad) je stos out cmp (bad) scas xor cmp shl lahf push loop stc and (bad) pop fdivrs push leave inc sub ja jl pop xor mov mov (bad) lock or int rcr xchg (bad) loopne mov xchg push js in jmp inc repz repnz xchg mov push cwtl push out add push cmc push je adc and adc sarl mov xchg mov add lret rolb jge push cmc xor cmp sbb jg imul fnstenv mov sub push jne cmp rcrl out ljmp fildl cmc add idivl xchg outsl pushf mov pop flds sbb out xor pusha repz dec mov repz dec mov push lret and jne cli (bad) js push mov and clc or (bad) rcl inc cmp xchg mov sbb pop jae sbb mov mov ds or pop rorb dec movsl adc inc sbb loopne xor cli sub (bad) pop xor repz jne xor call adc cli outsl xor fs sub adc push test xchg leave into cmc lods xchg shrb push push clc mov lods fisubl cwtl ljmp movsb pop fs adc std xor fisttpl int rorl addr16 mov mov das dec mov idivl push mov jle mov imul sub int jnp inc pop xchg mov data16 sar popf push adc cs sti mov add xor mov loopne (bad) rorb mov push add in je lcallw and jp rcrb lahf cmpl xchg add mov jns sbb sbb push int jbe in test mov in shl sbb mov jmp mov rcrl icebp dec mov inc outsl fist test jbe cmc clc cmpsl or jo cmpsl mov mov jg test jp jle cwtl movsb imul sub test or sahf (bad) cmp out jmp xchg and les fbstp mov xchg push test fmulp (bad) adc data16 test mov inc outsb data16 rol pop xchg xchg mov ret push sub in adc xchg mov (bad) xchg call inc adcl incl mov xor daa sub stos inc cmp (bad) ljmp (bad) ja in jne test adc cs mov xchg js leave (bad) pop imul js dec out xchg xor pop adc jecxz clc sbb stos xchg popa xor out and stos mov xor int3 or gs xchg inc mulb sbb std dec cmp inc mov xchg pop pop mov jae jmp sub sbb xchg ret ret add arpl mov int (bad) fwait mov inc pop dec aam and adc xchg repz arpl jns or sbb mov (bad) push sbb mov pop add push clc rorl push ret imul mov mov pop lret cmp sub adc xchg test cmpsb pushf loop inc nop lds inc fimul les add in mov xchg mov ljmp stos in mov (bad) or jns cmp orl cmpsb (bad) ficomp gs lods (bad) daa aaa sti inc shrl jp (bad) sub add xor leave iret mov and imul in push pop dec jnp inc out pop adc loop cmp nop lods mov or leave xor repz cltd popf pop aaa xlat or jae inc add jecxz sarb dec cmpsb test pop sbb xor xor (bad) mov mov cmp mov jae xor gs les mov pusha scas lahf fcompl in sahf mov dec sti inc pop inc mov (bad) adc aad and int mul add mov scas fsubrl test enter mov push mov dec add ljmp xor shlb out pop clc sbb fs mov enter in fs push in mov xor add cld inc shr test cmpsb inc jmp lds jno fs mov dec lods add roll fist incl ljmp xor xlat pop add push pop jb adc pop cltd and jne dec xchg mov movsb sbb mov mov dec std fcomip dec xlat mov sarb mov cmp jae cltd push pushf and (bad) (bad) xchg in ljmp mov ljmp adc xchg cmpsb fcoms cmc jns icebp daa pop cmp adc testl sub femms sub jp cmc fs fsub int es (bad) lcall lea in (bad) push xor jp stos insl stc jecxz cmpl aas push aam aad sub fwait scas sti cmp ja mov imul (bad) sub into mov sub scas rcrb mov ss mov xor movsl lods sbb adc mov xor pop lahf dec or pop rolb aas sbb test enter frstor or fucom pop adc xor push (bad) aam mov out sub sbb adc xchg jecxz cmp adc roll sbb (bad) les cmp fisttp add jo add push popa jmp jle in out je aas iret push sub and jb add fidivrl mov cmp inc imul insl sbb or gs adc pop jp add adc jecxz cld int mov inc xor xchg dec add rcll mov pop pop add xchg int scas sub sub stc inc xchg jno pop hlt cli jo jl,pn and fdivrs in push es add fdivp xor xchg or fs fist or lret out inc mov xchg cmp mov repz and (bad) sub bound dec repz test repnz pop pop orl outsl (bad) ss paddd (bad) xchg push lret push mov bound nop (bad) cmc repz sahf mov fsub jno and ds (bad) adc sbb jmp ljmp mov js scas shlb sub inc clc lock bound xchg mov push stc sub pop push testl adcl mov mov sahf sub andl insl (bad) pusha call out mov inc cmc jp mov adc or hlt in les arpl and and dec sub mov ss scas (bad) insb dec hlt pop or sub pushf dec pop lods nop add imulb (bad) sbb out lret movsb divps jb or and sbb ds pushf idiv cli call pop xchg pusha in clc inc adc (bad) inc inc out inc xor mov enter mov pop pop add pop into inc fwait mov movsl je adc push sbb mov lods loop and xor push gs pop scas adc mov inc fsubs lds rcrb ds (bad) push and decl fimull inc add scas ficom lods fstp jo test gs cltd sub jecxz sub das outsb sbb (bad) lds cmpsb mull sub out aam cmp mov mov ret leave int3 cmpsb push test cmp pusha sub inc adc (bad) loop in xor dec push mov or fcoml jo,pt in or xchg xor push jae insb mov mov fstpl mov (bad) jl adc (bad) mov push sbb sti aam data16 nop sbb cmp insb adc pop iret and pop jae in push (bad) jge outsb rol mov jb (bad) jno cmc fwait addr16 push lcall test sub in fisubr push fldcw mov fistl cmp aad (bad) lds loop push popa xchg ljmp orl mov inc pusha push cwtl aam xor inc (bad) cmpsb add dec push xchg subb mov cli sti pusha je adc rclb nop pusha lret loope xor lcall mov sbb sbb jnp mov pop xchg dec mov (bad) arpl jmp jp fldl cs ljmp frstor lret fs stos pop add jno andl cmp (bad) dec adc add xchg pop push (bad) ljmp insl adc pop cld popl dec pop divl mov cmp push ret and sub mov push pusha shrb flds xchg stos mov mull jg or and iret sub push mov jecxz imul popa mov dec xchg push (bad) hlt sbb add mov ficom out xchg fs aad neg dec rol cmp sti cmp test jle mov pop jne inc jne stc loopne lock insl lea leave pop fnstenv or push mov es (bad) js fwait push fiaddl mov loopne dec pop xor in je rcrb cmpsl lret pop fiadd or repnz mov aaa pop inc xor insl push push and push mov arpl mov jge fstps pusha sbb push negl sub inc xor imul jns sub ljmp add jnp test daa cltd mov movb jnp ficomp xor or sub insl nop jns in aas push lea nop xchg imull mov dec xor lret mov xchg push dec jg sub (bad) cmp xchg xor adc pop xchg sbb movsl mov or negl jge popf and and shlb mov pop inc add inc (bad) cmpsb repnz adc insl mov dec bound push ss mov jnp dec fmull jle cwtl daa in inc jne insb push or jmp fwait jbe fcomp aam or daa pop adc jle dec in iret lods inc sbbl adc dec and bound add add mov sbb andb ret pushf rol pop fwait psubw gs jmp adc imul push mov loop ds in jbe sarb repz aas sbb add out mov inc inc sbb data16 fsubr or faddl xor sbb enter adc fcmovne test adc sub sahf jo or adc add mov aas push mov lods adc xchg add dec cmpsb mov (bad) out data16 sbb sbb cltd dec jp jg mov mov rolb jne pop (bad) (bad) rcl and (bad) fiadd mov pop mov mov adc xor rcll jb cmp and dec xchg inc inc cmpsb (bad) icebp movsb and mov sub fsubrl repnz fucomi pop mov cmpsb sub aas xchg and iret lods shrb insl push adc loop adcl push adc scas in push push ljmp movsl cmpsb sti ret jb and cmp out frstor or stos stos lea popf aam mov insl push jo sti arpl out adc jg sbb std lods push mov mov jo mov ficompl rorl and mov imul imull dec xor jno lock ljmp leave sub push js,pn test fadds pop jp pushf cwtl scas call in outsl mov (bad) xor mov mov rorl movsl inc mov jbe dec mov push int outsl xor imul fs sub add xchg xor dec ret fwait mov outsl hlt (bad) in sbb arpl or sub jecxz xor out jp or (bad) rsqrtps cmpsl lods (bad) jecxz movsb test insb inc xchg push cmp jg cmp jl jmp fcmovu gs pop xor insb cwtl sbb mov out push mov or jmp stc jnp insb test add out xor or loope pop repz (bad) jle (bad) sub or hlt lea lds loope sub cmp decb inc test es and insl rorb jecxz scas fsubrl mov or imul sub dec fisubr mov (bad) imul cmp sub stos inc insl aas or pop lock ds ljmp push rol stos sbb xchg pop mov push and loope aam cmp aad in dec (bad) idivl repz cmp or iret or pop hlt lods lret xor (bad) les or cmp test pop jno push mov or xchg inc (bad) xor fcoms loope (bad) stc ss dec std jns add js cmc cmpsb insb pop or adc pop mov pop aad mov xchg pop cmpsl xor (bad) push and mov (bad) out popa lods mov fdivr xchg inc inc loope aas ljmp rol dec loope fwait xor (bad) test test aas push inc add jl std inc sahf outsb and cwtl out jle (bad) xchg pop sbb ja into mov fldt push inc mov xchg add sti cltd popf pop (bad) xchg sahf push sbb pop hlt mov fs add stos das rclb xchg mov lret cmpb fimull pop jb xchg or xor or pop push sub add add pop inc into mov rol aaa ss ds jno (bad) movsb or lcall jo pop add pop pop in out xchg lds leave lods mov sbb cltd cmp outsb divl mov adc mov gs push (bad) icebp mov and push addr16 aas sbb (bad) (bad) lods jbe loopne sub push inc adc (bad) addr16 cltd mov das jb lcall addl sbb faddp stc loop jge (bad) in pop pop imul leave shl mov aam lods or addr16 cmp les pusha imul ret ljmp lret pop push lret jbe inc in pop xor inc fildl in call mov iret mov mov mov lahf ja popa xchg xrelease push (bad) inc test xor shl outsl out sahf testl test cmpsl mov jo jb jge adc insl outsb fwait pop push lcall push xchg ja popa sbb int3 pushf xor pop cmp ds je les lcall hlt scas mov xchg pusha or jb jnp (bad) or repnz rcrb stos jo fsts rcrl mov lods lock xchg es cmp mov jne xor dec push push out fwait test (bad) cmp pop mov fisub insb inc hlt scas insl jb push addr16 jno mov sbb mov das push (bad) aad push clc jecxz outsb push rcrl sti mov cs stos aaa stc or ljmp push gs es dec push xor push push arpl and dec in xor stc mov cmp inc addr16 cmp call and push jne mov jmp fsubs loope cmpsb insl pop fcompl cmp xchg xchg and fldcw cmp mov cmp aas dec or call inc dec movsb aaa push mov bound lret out mov movnti xor mov mov outsb mov xor jecxz repz sub call in sahf imul in (bad) ljmp nop pop fs in pminsw enter in mov push (bad) in mov fucomp jp xor and es dec jg push adc outsl out out fsubs jno push and movsb pop push sbb hlt dec pop mov pop dec clc (bad) (bad) jne in mov push ret xor out and mov aam inc inc ret mov inc push cmp pop cs loopne push jg xor outsb xchg pushf or mov nop add cmc rcr and xor aam ret sarb add cmp nop subl jnp mov xor jbe pop adc add aam xor in lds aam ljmp insb int3 lahf rcrb inc and xchg pop sahf out inc call movsl into ror (bad) aad sub dec add mov imul data16 icebp fldcw adc fwait dec popa popl dec jmp jnp adc out xchg repz push jecxz insl ljmp scas cmp daa pop mov lods push addr16 inc xor pop add aam xor je pop or xor adc xchg jp and rorl add cli leave mov ljmp ja outsl lcall add sub or xlat (bad) push cld pop rcll adc popa inc cmpsl cld js cli stos data16 add test cmp xor sub jmp pushf xor adcl push js push inc jns jecxz,pn repz xchg mov fcmovnbe leave pop ss test and inc stc adc dec mov cwtl add or test xchg addr16 out cld xor sub jg outsl cmp mov add out dec sarb dec cwtl ljmp (bad) jg mov fwait cwtl (bad) cmp js mov stos mov inc fidivrl repnz add and shlb fcompl mov inc test push insb adc ss jge cli pop adc xchg push and rcrb push dec cwtl xchg (bad) lahf js push aas jns cmpsl dec and mov scas push ret fstpl sbb gs add pop dec fsub xchg loope cmpb mov xchg or subl movsb (bad) outsb or add data16 and sub adcb icebp mov mov xchg add std jae or daa cmpsl fisubrl rorl xor pop cmp mov pop jg lock mov fbld mov xchg jae cmc fmuls fcomip enter outsb dec jmp mov imul jns (bad) mov mov and aaa (bad) dec ss cmpsb je sub out sbb repnz xchg aam and inc ss icebp jmp and xchg mov add add addr16 loope mov mov outsb jg test inc cmp test sub scas dec xchg fiaddl sarl test stc xchg arpl je (bad) popf nop mov mov or add test xor dec sti insb mov inc cmp mov jmp cli dec add adc popf mov jnp mov add in sahf xor jg mov mov push roll pop addr16 test popa mov std dec inc ja jae pop insl arpl shr xchg jne pusha add fdivp cmp fistpl imul in jecxz repnz imul outsb sub (bad) mov xor mov ljmp inc fwait and dec (bad) inc sahf jmp icebp jmp jnp stc scas mov xchg sbb pop xchg imul gs mov add pushf push jnp in loop inc dec sbb add jae push pop push mov mov shrb fildl daa (bad) pop xchg mov jge (bad) sbb int3 enter cmpsb test loopne sbb mov fistpll imulb fstl dec or in out xor xchg inc test ret add pavgb mov fbstp mov lock cwtl call loopne and aad adc cmpsw lretw xorl shrb sbb push lahf mov cwtl lods mov jno fwait jecxz stc cmpsl or mov clc pop add test mov xchg sti mov cli push inc stc adc or sub lret jb pop in dec bound out fwait jle mov sub test icebp scas pop loop pop cwtl pushl jbe and pop scas fwait int3 stc clc clc lock or push movsb mov test adc aad mov mov push and or dec rorb sub xor pop rorw icebp xchg test stos test jge leave jb sub or daa sahf push pop and and stos jp cmp jmp jg pop jbe sbb (bad) mov (bad) cld in mov pushaw xchg or sahf insl xor lcall adc addb jp adc movsb ret push les or push sbb cmp in subb pop cmp (bad) cltd and movsb jno jecxz (bad) repz sbb sbb xor int3 or fsts loop mov fs or pop dec int xchg sub outsl xchg test ffree mov jg adc pop lahf enter test pushf push lods mov sub pop dec pop cmp std lcall adc mov sub dec mov gs push imul cmpsb jae,pn xlat and lods test (bad) lahf inc sub popa sbb popf hlt nop outsl mov bound xchg push lret pop test sbb data16 popa cmp push inc int sbb mov pop cmp push xor mov mov lahf lock add cld insb push fisubrl sub xchg into int3 inc addl push pop insl imul and les out push push out and xchg in lods mov jecxz fisubl adc adc lahf clc add xchg stc dec mov insl int3 and (bad) cmp mov sbb das jge push push cmp push dec pop leave in out icebp cmp pusha imul popa xchg jno xchg scas (bad) lahf jl dec std mov mov add pop xor outsb jle dec in add test sub xchg mov push iret mov or or sub adcl js mov inc inc pop (bad) cmp push stos into push divb ret scas mov cmpsb add xlat and xchg daa insl pop test xor xchg xchg insl scas lods loop and fwait mov ja and and or lea sahf cmpsb lods push mov sub mov push es adc mov aad cmp test mov cmpsl push aas mov lret pop leave push stos xchg push rcll push sub fmuls scas and pop push push pop and data16 lock into or mov push inc ret fildl inc arpl enter or mov jbe stc ds je add cli fmuls push test nop push mov ret out sbb jns,pt enter call jne jecxz nop inc rcl dec adc in or mov (bad) frstor es pusha clc mov push mov inc cmp dec push inc rolb sti hlt jge sbb sarb adc and pop jge inc mov mov in mov loope popa in cltd jle out add xchg sbb repz inc add loope in les push push negb clc mov dec mov push pop arpl and dec test daa pop push cmpsl cmp pop or movsl mov into jo cmc xchg or dec dec xorl test push dec xchg dec cwtl sub cmpsl mov ret fsubr lds subps add sti icebp xor jo cmpsb and cltd add or ds dec out pop lea fs popw in push or fldl xor ret stc pop (bad) jae cmp into sbb cmp push popa out and xchg pop dec fcoms scas mov push popl xor ret mov add out pop (bad) jb fstpl jmp sbb inc sbb push dec scas mov or inc mov (bad) adc sarb mov fnstenv xor idivl xor sbb mov repnz mov dec (bad) and out and in shrl je mov jnp movl fcoms aaa lea insb pusha test mov andl jnp jge cmp add xor sub imul pop loopne call frstor fdivrs cltd incb add jmp loop jp jns push push jae outsl sbb gs ja adc lret or jo loopne test push inc xor mov movsl cli inc jne ret mov loopne insb sbb mov dec (bad) jns fcmovnbe xor adc inc push enter lahf loop cmp pop shrb push xlat insb lret jno aas add (bad) mov xchg cmc cmpsl js lock add out jne and test rorb xchg lea pop and jp cmp fadd dec stc inc aam cs rclb jl lret in inc int cmpsl sti dec insl inc and fildl add addl adc bnd mov es push les (bad) ljmp jbe in arpl rorl ficompl loop call jno cmc pop fcompl and std fs ret (bad) cmc sbb sbb push mov jge mov cmovbe mov lods jl dec lods pop cmpl mov js int3 xchg cmc in mov mov sub jmp and or lods sbb push or cmpsl jo pop mov sti movsb jns aam xchg sahf adc lcall cld (bad) xchg add clc pop lods xchg aas lcall add addps sti sbb addr16 add cwtl dec inc pop jle jle and popf push das icebp and loop pop (bad) xor cmp xor xchg jns dec lods ficoml sahf out repnz sub cmp outsl sbb inc jge,pn dec mov inc mov cmovae push pop jmp push mov mov sub inc mov push push mov out dec (bad) iret add xor mov xchg rol aad add je imul cwtl pop test subl add (bad) push sub lret mov out or arpl out sbb divb in andl mov add mov lret xor daa mov es pop ja pop and ljmp int3 pushf or or xor sti xor inc sub lcall repz lea out xor sahf popf add or jmp pop addr16 leave bound aad adc (bad) iret (bad) fidivrl out or or fdivrp dec fldt scas nop mov popa mov (bad) in sbb adc jp pop jb xchg addl arpl dec scas jne das dec out dec test call ror add popa ss sbb mov je cmp add imul dec jb icebp int xchg adc dec aas test in cmp fucom fstl dec test (bad) aad cwtl mov mov data16 add into jo (bad) out dec sbb popf sahf dec sub inc mov lcall dec bound or fcom imul rclb fisttp inc addr16 (bad) out mov mov mov add push mov add fcoml mov jbe dec jnp push push mov pop push sarl jle subb out xor push cli push xchg mov scas jb scas jb mov (bad) idivb mov loop pop mov cld dec and and jo sbb sbb shl cwtl cmp jp xchg cmp test mov sbb dec inc mov sbb jmp jne imul js xor adc (bad) femms hlt in in sub add cld cltd adc push sbb jno or nop (bad) xor je xchg pop ficomp pop aas lds push jno stos cmpsb ljmp dec or push inc outsl inc cmp movsl cs mov add mov dec es rcll cmp bound inc add sbb das dec add pop adc std (bad) jne out xchg into rorb mov imul push sub test dec add loop dec push mov mov insl je cli and lods int sbb sahf addr16 int3 sub ret jae fisub mov push test add icebp inc and mov cltd mov aas or imul imul xchg inc mov sti xor cmpsl shll dec les adc dec das jp stc cs mov mov add fmuls mov pop pop adc cld jle ds or loop or mov aas pop pop es lods (bad) and clc or mov pop (bad) je inc jo cmpb (bad) or push or add loopne enter jmp ret inc pusha mov out pusha jno (bad) jae fmuls jnp pop fdivs mov and es sub dec leave pop jg stos adc mov cmpsb rcrb jl test cmp sbb cmc mov lret cvtps2pi mov jns pop test cmp push (bad) push imul add pop or inc jmp mov inc sbb fwait lock jae add aam or sub aaa inc (bad) sbb mov jge pop and mov mov bound adc pop or add xor (bad) dec test inc cld sub jp leave jbe add dec jns dec movsb xor das push mov mov xchg icebp rcr jmp icebp dec add add inc lds jne jne cmp lea lock dec (bad) (bad) push imul pop push sub mov pop mov sub push repnz pop (bad) fld push pop sti jmp pushf cmp gs jle or mov int3 (bad) fisubr lret push popa xchg cmp rol arpl mov push out daa mov repz call jo mov mov xchg mov cmp int3 lea xchg repz jmp test cmpsb inc nop ss cwtl mov jne mov xchg int jns bound das jne ficom push rcl shll mov xchg inc test xchg lcall inc cmc pushl call and push adc sub outsb xchg adc dec in sbb jg sub mov mov and and mov jmp ds out lret stos cmp or fstps lcall movsb je add (bad) mov out jecxz dec ds mov mov xchg lods clc dec scas cmp push loope and jb push sbb or pop lds mov xchg add pop jl push aas addb pop pop les pop scas ljmp sbb push pop sbb scas fnsave (bad) int repz sbb sbb push mov cmp repnz jo cmp adc pop jne incb xchg and pop cmp mov addr16 add mov (bad) jl (bad) dec xchg dec mov pusha add sarl dec jb loopne xor dec mov ret jb push cli or bound cli daa aam mov enter loope inc and lret xchg lret fwait inc pop mov clc sbb add pop test mov cmpb in inc int3 sub push loope lahf or or dec fucomp push mov cmp test (bad) cmp cmp fs jne sub popa or mov xchg pop bound js cmp add sub stc mov mov repnz and mov lds in push sub cmc bound (bad) aam flds test sahf pushf sub (bad) mov inc xchg sub hlt mov push xlat sbb xchg xchg cmp push (bad) into lret mov and or gs mov pop mov imul adc je stos and mov ljmp dec aam xor sub movsl pop adc cs inc ljmp imul rorl scas mov sti mov cmp int mov es xchg pop mov (bad) mov into mov push je xor test leave popf lock flds cmc xchg push fistpll into imul out mov jo push lods sub pushf (bad) rcrl dec cmp pop pop outsb daa inc and add int pop mov jp mov mov fadd popa popa fwait out ret (bad) dec pop imul sub (bad) cmp adc (bad) xor add mov or ss dec into test or dec bnd xor adc dec push push shrl add pop lea frndint clc rcrl push push cltd mov and mov hlt cmpsl (bad) (bad) iret mov arpl roll or jnp insl push push mov add stc mov repnz mov dec (bad) push cli sbb dec fidiv ret xor sbb push jns sub cmp sbb mov cmpsb movsb mov xchg jge sbb jbe inc icebp push fcomip lock and daa jecxz imul jb rcll cmp xorb or pop mov adc mov outsl lret jl (bad) jg mov sbb pop fisubrl mov xor and pop fs or push push xor cmp add xchg enter pushf out aaa cmpsb mov dec xchg xchg std sti push or adc jb and incl sti mov adc daa lock lds jno push dec nop lahf mov imul jecxz fs dec stc or lcall pop add mov pop imulb lahf and jg clc movsb mov xchg movsl mov fcoms ret sbb sti mov popa test or gs sub jns test add aam xchg addr16 mov mov xlat popf movsl ds stc cmpsb fsubs mov (bad) addr16 movsb movsb stc pushl jns loope fwait test scas cmovle and mov pop call xchg insl inc lret xor adc jle frstor loope and pop outsb cmp pop icebp xor (bad) bound daa mov xor pop or sub das shrl lods jmp jge leave lcall jecxz or outsb daa test adc push sub sub pusha add dec imul and adc fsubs xchg add inc ret out pop lock dec xor jge repz cld (bad) sub pop js jecxz (bad) lock jl xchg push xlat adc scas sub movsl outsb int3 daa dec push pop incl inc xchg cld mov inc icebp cmp test out inc xchg cmp fcmovnb or lret and and or lea or je mov test dec push ret pop cmp or jbe sub out xchg mov test popa mov xchg scas and pop lds xchg mov push jnp sti notb ds jl add xchg cmpsb cli gs repnz dec andl pop mov hlt jmp mov or enter out adc jp outsb stc mov jno insl pusha jp shr sbb mov jp xor divl inc cmp cmp movsl jb dec rcl arpl mov xor fstpl repnz push lret jae sarb mov adc xchg dec sbb leave (bad) (bad) sbb or cld or xor cmp jmp push xor pop enter xchg jmp pop push popf lods out sbb aam stc lods jns cmp jo inc push sub hlt sbb repnz pusha sbb mov adc xor add aaa das repz aaa push cs jo in (bad) mov fs loopne pop (bad) adc adc adc push enter cmpsl xchg shrb adc mov sbb adc mov inc mov inc test adc popa pop xchg push lods aad lahf mov xchg and cmp cmp mov out push jns enter pop dec mov (bad) fildll enter loopne movsl push mov inc sub adc push sub mov out enter xor inc incl insb testl test pop lcall (bad) inc jl and xchg mov xchg outsb enter aas icebp stos mov push mov xchg jb dec jne pusha jno iret mov pop push push fmuls jp lcall out (bad) jo iret int3 subl (bad) xchg push and dec mov push or sub lock sub push (bad) lea mov dec loopne cmp sbb pop mov in pop aaa cwtl xlat popa push xchg sti pop jno stos sbb stos scas xor sbb jecxz push xchg and cmpsl fwait lods cmp and clc push sbb jne mov pop mov pop pop pop mov subl clc xor outsl mov dec movsb dec cs cmp adc jo xchg pop jbe jbe dec pop int lods pop loop stos push dec or int adc push push mov (bad) xor cmpsb jae adc mov leave adc int dec mov outsb lcall cmp out cmp jno arpl (bad) frstor icebp xchg xchg push outsl xor mov xor pop sub cmp adc xor inc loop inc (bad) jae arpl cmp out fstpt mov mov or rcrl outsl mov sub mov (bad) sub xchg jno cwtl push and mov in pop jbe cwtl imul or mov ds inc (bad) and sub rcl xchg mov cmpsl ljmp inc push aaa sbb inc jg call sub adc jb or js fsub jmp add out cmp iret (bad) aas jge int mov je mov jbe pop int test inc xchg xor add je addr16 xor jns shll xchg xor and or inc iret popf sbb arpl data16 adc cld sbb insl arpl mov mov mov jmp push mov inc aad les or inc or mov sub cmp outsb lcall dec adc adc out add bound dec jmp mov fsubp (bad) jecxz add add pop insl inc sub in rolb clc or add pop cmp repnz push pop and sub and dec push add pop pop dec movsb jne in fstps mov sahf (bad) xor sub pop ljmp inc addr16 ret sub jecxz fisttp cmp mov mov mov out xor cmp cli aad xchg mov pop daa inc jo jmp sub jmp cld fsts in dec and cwtl sub cmpsl imul out or cmp (bad) movsl push dec test test out mov mov mov cli xor xor lcall out lret cli inc sub rcrl xor and popa xchg pop int3 xchg cmp mov mov sbb cmp xor cltd (bad) or test out lods inc imul (bad) mov and and divl lods xchg scas jp imul popa loopne fidivrl adc mov cmpsb (bad) sbb aad lcall adc (bad) fistpll out stc jmp fcomip inc adc adc sbb sti insb add std lds adc data16 data16 daa jae stc xchg loop pop mov jb mov jecxz divl sub rcl daa icebp pop sbb xchg and adc popf xchg xchg test jmp (bad) pop ss pop pop int mov jo mov inc inc dec cmpsb cmp fwait cmp (bad) (bad) outsl push jl inc sbb icebp lock inc dec pop xor cmpsb xchg and (bad) sub shrd iret pop mov mov or inc sbb xor dec (bad) fwait push ret jp aas mov std ds cmp data16 ss jg add push mov sbb in sub mov pop pop cmpsb pop cmp jmp lahf clc pop bound cwtl mov adc xchg add jae xorl mov pop (bad) mov push push and mov imul or sbb das ds stos mov repnz (bad) fildl mov push data16 (bad) or lret sub shrb fdivrl scas adc mov sub outsl fbld xchg dec jbe pop (bad) sahf pusha clc (bad) xchg cmp cltd movsl std test sbb stc xchg movsl aam repnz push jg push push jmp fmull lret adc or xchg sbb mov stc or je leave into dec ss (bad) adc xchg mov in lcall mov xchg push xchg loop out mov and pusha mov mov pop cmpsb xchg sbb (bad) rolb sub add movsb aad hlt test mov mov repz mov pop (bad) cwtl mov add adc add inc leave fsubs fidivr hlt cmc data16 mov pushf and mov fnsave cli jbe popa shrb lret lock mov mov clc dec inc xor sbbl insb jne push jmp push test adc xchg aam stos insl sbb stos cmp add cmp cmp inc lret sbb add out pop mov aas push xor aas push sbb jl sub fcompl sbb adc out fbld mov xchg stos pop test loopne xchg stos adc out add mov cmp cmp jl fiaddl xlat fwait sbb divl frstor hlt into nop (bad) cmpsb mov repnz bound mov cmp scas dec sub aam pop (bad) leave gs test lods rep xor sub jmp mov mov fldenv adc test (bad) mov or mov xchg cltd mov sub adc mov and addr16 add mov loope sahf cmp dec mov adc iret pop inc push das in mov jb jp xor jns icebp cli data16 dec loope or mov stos adc and jns jo mov push mov jg (bad) nop sbb adc sub push ja push mov mov sub lods push inc shrb mov je mov cmp dec repnz (bad) pop subb scas mov popa mov sbb imul add jb xor ficomp ds or push sbb sbb push bound jb in imul push outsl xchg insl and (bad) cld mov lea pop repz adc jl das repz mov roll clc test dec lock leave cmc xchg clc xlat sub clc push outsb dec xor movzbl dec aaa out mov lea in adc cmpsb mov (bad) std out pop xlat outsb out mov cmp cmpb mov and sti cmc sbb push lcall sbb das test xchg cmpb dec xchg into mov in push outsl push cli inc imul mov fmull aam dec in int lret out jl scas and rcll (bad) cld outsl push ret adc pop icebp leave ja xchg lcall and lret add aam cmp xchg add xor push into test jnp stc idivb mov mov stc mov shr dec jae gs es fidivl fisttp ret pop arpl (bad) sub repz stc sbb dec cmp jmp movsb loopne je xchg out lods push jmp and call pop mov mov sahf lret in loopne in (bad) adc outsb adc adc mov imul notb mov dec dec call jbe iret icebp pop cmp jo js adc mov jp push test (bad) aaa stos add std inc xor hlt and into psubq sub pop pop cltd push xchg xchg cmc pop mov sub xchg aad ss sbb movnti push insb gs inc bound call test out shll xchg shr sbb pop fwait cld fmuls pushf sbb pop push and in das test pop scas enter push and xchg jo pop popa push sbb cmc or in mov or data16 lock in mov mov adc adc mov test (bad) adc iret xchg add sbb clc push cld mov sbb xlat cmc or and hlt je lods lret push pop cmp mov mov arpl mov cmp arpl push out jb push sub jecxz pop mov dec insb popl cli cmpsb ret push pushf daa aaa lcall xor add ja int3 lds fidivl fbstp mov aam sub xchg mov xchg push lahf push inc jo cmp bnd lods and mov cmp add lret mov (bad) mov rcll jmp fisub aam faddl sub jecxz sub sahf mov push jmp aaa test pusha lahf mov sub adc adc and mov pop fs push and jb (bad) jae dec repnz test addr16 xor (bad) (bad) fldcw and push adc out bnd dec push rolb mov xor or push lods js mov push xlat sarl daa in xchg push dec mov aaa shl mov lahf xlat int3 aad mov mov mov in leave mov lret lods out xor sti outsb lods nop lcall call pop clc (bad) and inc adc adc iret and xchg outsl pop add fdiv mov imul mov std ret dec lods push rorl jbe out adc mov bound mov or xor popa cmp xor fistl mov push lods lret mov sub and push in add mov in enter pop push add jne cmp push bound jb shlb mov sbb or or xor pop xlat cmc aad imul fs xor jle add push jo lret xor mov mov iret ss in nop inc bound jmp and jge iret mov mov sahf (bad) pushf dec pop into (bad) adc ljmp (bad) sahf bound sbb inc mov mov sub lods jne mov mov inc dec fs lds or sahf xor (bad) addr16 inc dec mov ss and inc dec cs ret adc in dec and push push sbb xor jnp,pn mov vpshab mov jb xchg pop mov push add mov or xor mov mov dec inc mov cmp push enter mov xor push ss mov push dec iret arpl into sbb in xor pusha fbstp mov lods jg adc xor or xlat and mov adc inc out push mov (bad) (bad) xor jae fldenv jbe outsb imul pop push into cltd clc xchg xchg or xor test pop iret cld or test mov ret or dec scas pushf fadds push dec xor test mov jg pop inc add mov xor repnz cmp orl fstpt std cmc xor imul leave les mov incl jp pop xorl test inc iret mov sbb sbb aad adcl outsb cmpsb psubusw pop add xor fcoms or into mov jb cmpsl sub mov adc xchg addr16 rcrb xor mov and add inc mov push das push cmp dec mov shr rcrb ss je lret subl push and push mov pop imul es lods lds adc mov repnz sbb jno fdivl nop mov scas mov push je jge sahf dec (bad) sbb mov jne adc repnz scas inc inc push pop out dec adc loopne xchg mov je out fnstcw lahf fst in push cmovs mov or rolb lea je daa test pop iret jecxz mov fwait mov inc out cmp push and (bad) div push aam fwait (bad) out imul xchg imul and push push loopne rcll add sbb outsl adc inc mov (bad) outsb and xor das call dec (bad) mov lret imul or popa jl repz xchg dec shrb movsl movsl jmp push push dec pop pop cltd fnstcw loop clc loop xor out out pop pop stc xchg imul xchg adc mov jo das out pop sub pop pop out cmp int jo (bad) dec jle,pn and repz xor mov push mov in adc or cwtl add cmp sahf cld in mov push arpl xchg adc in or pop xor pop andl mov pop aas xor subl mov pop inc and sub push iret fistpl cmp les shll dec or fmul (bad) jno jbe out sti sbb call std popf and enter (bad) (bad) in repz faddl insb ljmp mov fildll pop inc jnp shlb xor adc data16 dec pop cmp adc adc enter cmpsl sub xchg dec adcl (bad) sbb xorl mov out sbb adc fs push sub jecxz cmpsb sub and loopne test cmpsb mov adc push push adc dec jns out xor bound sbb pop jnp or xchg push cmp cs ret add je xchg fidivr sbbl mov test sub adc dec pop cmp jns add cld dec std nop aas stos mov popl pop std mov xchg add and lock adc repz add lsl lret hlt cmp outsb fwait add add (bad) fstl out lcall inc (bad) es jl mov xchg add sub xor ljmp subb mov in outsb insl fidiv iret insl jge jle in imul cwtl sub sub cmp mov xchg cmpsl push adc xlat mov shlb imul cmp mov iret pop call and inc in shr mov movsb std and mov xchg mov add into jb hlt or ss cmp sti pop out dec xor sub lret push cmp jge stos dec jp in loop mov push les push mov repnz mov sbbl je movsl jno sub (bad) in inc push mov and aad inc in in jl mov mov insl enter pop js cmc lods mov cmpsb bound pop push lods dec ljmp lcall pop inc mov fcomi cmc fisttpll or ljmp nopl shll push dec sbb std and (bad) pop jl jge pop cmp mov lret dec sahf aad rcrl dec mov fs test loopne sub mov test rcll pop mov lods ficompl repz mov push repnz loope mov pushf mov scas imul sbb fistpll adc (bad) out test jg call enter (bad) jg out rclb sbb push outsw mov push ret call (bad) je cmp loopne cmpsl xchg por cmp in dec inc data16 adc push sub mov rep imul test enter inc inc adc mov cmc xchg and ljmp out cmp mov or lret xor icebp lret mov add sub (bad) incb test in (bad) shll or pushf cmp dec fidivrl mov push fdivr mov sarb xor fucom adc jg adc fistpl xchg paddq fwait jg push cmp xor arpl lret test loop adc dec test sbb sti scas data16 push inc inc pop test sub and jae xchg cmpsl addr16 divl and rorb pop lods fidivl popa jmp je or sbb aam dec mov lret sbb mov out pop stos repz insb fcom mov out xlat ficompl pop xchg test ret mov test push ret fistpll mov jecxz mov or add or dec push pop xchg repz push xor ja push and data16 das rcrb xor xor push icebp push push lods mov jne and and pop lret (bad) sahf in in jecxz stos cmp (bad) mov dec dec aam jle mov xchg (bad) stc je rolb pop add add mov xor sub clc jns dec pop lods outsl push sbb mov cmp pop inc mov out icebp add pop daa rcll pop and xchg xchg ljmp xchg xor or leave xchg in inc notb sbbl jg fsubp test rorb jo shl sub jp push and lods mov dec or out mov daa cmp push loope lock mov faddp inc cli jb inc addr16 jne lds aam aas insl pop xor inc jge cld xchg (bad) cmp shr mov push push inc add fcoms int add add pop call fmul sub testb mov (bad) adc fdiv jg adc add adc mov jp (bad) movsl xchg (bad) outsl in notb lahf add or jae cmp pop or mov cwtl sbb mov int3 enter (bad) arpl sub scas mov rcrb mov loope inc fsubr enter xor fcomip sbb cvtps2pd adcb bound push sbb mov or push pop pop in cs jne pop int3 (bad) mov aaa popf testl les (bad) jecxz mov inc or push (bad) daa or sarb mov lea leave xchg pop les mov scas xchg loop jg clc lods dec rcrl mov (bad) in je in fwait test or mov sub jnp push jecxz stos addr16 insl xor rcrb rcll cli (bad) in xor daa ret stos (bad) movsb (bad) or xchg or pop jg pusha pushf xchg sub mov pop mov out insl cmp inc inc sbb push out mov lea sti fnstcw leave shr jg xchg out add test insl sub mov popf les add xorb sub sub out add lea out enter cmc int3 push frstor popa xchg sti sub or push dec or jbe (bad) loopne les xchg jl mov out xor jbe or lds in fsubr aaa jecxz fsubrl scas icebp mov (bad) mov pop mov arpl shlb (bad) push pop lret cli sbb ret mov arpl es int3 mov dec mov push movsb out jle mov rcrl sub loop or cmp xorl and rcl add popf mov aam sub repz inc dec xor push push inc mov sub gs dec loop outsl cmpsl in pop xchg inc sub xor cs and jl adc into stos (bad) (bad) ret loop push mov cmp and jecxz inc mov mov insb daa cmp popa int3 inc loop lock dec mov adc push lock jge pop pop xor call dec popf or mov xchg push push push sbb inc and stc popa push je dec xchg sub pop ret pop dec jne in stos mov mov insb das ljmp bound jle push mov dec or (bad) out lret das pop dec mov jmp imul lmsw push ret lods push mov addb xor fwait inc (bad) mov cltd pop int pop loop push or pusha lret xor mov or scas jns lock sbb fidivrl mov mov dec lea lret movsb scas dec pop inc push push inc fsubrl fucomp adc pop ret outsb mov out pop imul mov pop dec mov lret add mov in sub cwtl mov (bad) jbe cmp lcall pop mov jecxz pop dec pop sub cmp inc push inc xor cmpsb or mov cwtl sbb (bad) xlat sbb cmp lret pop mov aaa (bad) int enter (bad) loopne inc lahf pop daa fisubr pop push xchg lea pop mov insb outsb (bad) ficomp xchg jns or outsb mov fldcw es add lods pop icebp cmc pop mov xchg test push cmpb repz push dec inc es mov mov fs pushf jns roll mov aaa cmpsl ret inc inc xchg mov push fstl std sub test (bad) dec jl shrb outsb fsubl adc movsb movsbl movsl pop aaa ret popf dec jne xchg mov jbe mov test mov movsb shrl cmpsl and xchg xchg push cmp cmp into jae loope jne or mov imul pusha jg inc pop xchg mov xchg aaa loope mov test adc loope ja fistp dec arpl test pop ljmp clc jp sbb jb negl cmp lock imul jb ljmp mov ficoml stos cmpb add and mov fldl mov dec add aam dec rolb dec xchg cmp pop lret repz pusha pop xchg adc mov icebp cmp push cmp (bad) mov push sub loopne inc adc bound js das bound sbb push sti push sub push xchg jg xor arpl add scas test pop sbb adcl adc mov scas mov loop sbb movsl clc jne sub jp jo int3 adc push inc out (bad) mov push ja dec stc call mov rolb test inc or sbb rcr enter mov lcall xor adc aam stos add sahf inc dec mov scas dec dec pop push or mov hlt loop testl (bad) push or pop dec fnsave mov and (bad) mov dec addl rcrl push xchg dec mov mov push push dec sub jecxz and dec lds int3 adc stc jge pop scas mov int enter mov in nop std (bad) mov ja mov fdivs (bad) jo push dec jle leave mov or jbe or inc mov jge xchg clc inc mov mov xchg in stc aas dec adc rclb xacquire and push sbb xchg add dec clc mov cwtl xlat out lds cmp lock in loope outsb add ss push insb lods js fwait xor loop cmp lock pop jge sbb aad push jo std popf xor fs fimull pop mov stc lret sarb mov xor loopne adc xchg movsb jmp pop pop test jmp mov adc xchg pop or lret insl sub dec clc imul mov pop aam and pop pop jo or or dec xlat (bad) shrb repz mov pushf sub in test xor or incl stos (bad) insl pusha adc mov fstp jmp fist outsl cmp add sbb popa sahf xchg inc adc andb jge (bad) outsl cmpsb mov outsl sub dec lret add push out nop lds push xor and fs ljmp or pop mov cld mov mov sarl and adc jo mov fmuls pop add jnp jge add ss (bad) mov repnz jmp aam test pop xor out cmp pop int3 (bad) cmpsb cmp pusha aas jp adc push adcb push (bad) mov push es dec xor loop push scas jno js sarb pop mov fwait pop out sbb loope (bad) mov lahf fist pop jnp stos adc xchg sub or repz jns pop int dec out insl js call add xor mov ja xchg xchg xchg nop lea or scas xchg adc jp cli roll pop lods fld1 jl inc jbe imul je cmp cmp outsb add or jmp aad daa add (bad) insb insl mov push mov jae test rorb les rcrl mov jg divl mov lea sti rorl sbb cmp add inc xor inc in or or xchg lods mov push mov stc insl adc mov test lods mov xchg inc xor in mov push inc mov seto pop mov sti mov lea mov dec xorl push sbb sub rol push mov inc cmp loopne jl shlb adc xchg or pop sbb cld xchg xchg cli xchg adc sti xchg outsb sbb shlb cs lea insl cmp popa sahf pushf iret cli lret gs adc ret and outsb and sar test push and xor imul test popa push inc nop aam daa mov lahf insb jmp (bad) or cmp loopne fidiv sbb adc jnp mov xor pop test mov mov fsts cmpsl add cmp cltd push out mov mov mov cmp dec push lods movaps les imul cmpsb out mov icebp ljmp fs mov sbb fadd or jp push leave rcrb outsl sbb jo popa push leave jl in daa aas das aam xor mov mov int mov dec inc jnp mov enter (bad) mov pop jg lods aam jl push stc test ret (bad) out call lods repz movsb xor push dec push add pop cmpsb iret (bad) icebp (bad) jne lahf inc cs repnz xor sbb pop mov loopne mov xor or mov in scas fsubrp cwtl addr16 pop lods mov xchg stc cld ret inc std fbstp cltd mov loopne fucomip and xor mov xchg loopne mulb fistp aad mov cmp jb mov or adc add xor mov leave xor mov lods mov push repz xor movsl loop sar (bad) repz adc xlat mov out (bad) fmulp and xchg push rorb stos call jno aas fldl test cld or mov jge in jae push xchg add popf popf push push (bad) adc mov cmp pushf data16 jmp mov in mov adc mov xchg jno xorl scas jge (bad) lret cli call fs lcall rcrb into sti add jmp ret jg adc xlat cmp mov mov aas jbe dec out stos insb test add test pop push fidivl push sbb int xor shrb pop movsb inc inc and inc imul (bad) or movsl sbb or rcll fcoms fstl cmp inc cwtl jns,pt ret xchg repz leave jg jle inc inc mov ret or jle in cs lret adc adc sub add and pop imul add or lods testb xor dec sti je add sub (bad) not dec sub and pop push aas in aaa push ja mov lds jo jo lods jnp sub adc fs push push push arpl or fdivl (bad) rol push add jg mov pminsw and xor dec in jmp rcrl mov mov push xchg dec subb ret daa mov sub aas fcoms cmc iret jno movsl cs and js and frstor jp push pop ficompl pop inc or fcomp pop pop clc dec jne jne popf mov mov test aad jnp add test or ja faddp xor mov xchg daa lea push in jg lret sar or and lret mov out cld jno aaa inc push xchg enter mov mov (bad) xchg fstpl popf adc dec in xchg sub cmp jae mov orl pop cmp push mov adc mov xchg popf mov sub mov (bad) jb aad arpl lcall mov mov clc mov adc mov insl lds cmpsb sub or pop pop sbb stc jbe mov cmpsl adc les inc es xchg lret into adc hlt call jg (bad) sub bound and mov loop inc add inc icebp repnz pop dec (bad) cmp ljmp jle clc iret roll adc fadd notb ret lcall je mov adc and lea test jo adc push sahf mov or sbb enter jno leave xor sub pop cmp adc cli sub adc scas cmp lcall sti sub lret xor jnp mov mov dec loopne ss (bad) repnz push popf xchg jle sub cmp lds push adc pop dec in push jmp adc mov and sub pushf jecxz sub push bound ds and movsl or jbe or pop or fcomps test decl cmp scas pop js push mov outsb add jo into sub frstor sub outsb push pop lea pop imul cmc fwait call stos out push pop inc xor xchg bound stos outsl lods xchg sbb stc adc popa and jne aas in nop jl dec aad (bad) (bad) in add (bad) jo std ds das or push es sbb and js cmp push push mov cmp test pop aad pop xchg mov mov testl xor lock jae sbb sbb add adc rclb mov dec cwtl mov xor sbb lods notb inc flds pushf in jne ja test lea mov push ret fmul dec jno mov pop test dec stc (bad) icebp scas std dec sub add dec (bad) sub and adc call test xchg xchg push jmp pushf jle inc imul clc and pusha dec push addl add push or (bad) inc aaa adc mov jle fwait push ret das dec iret (bad) int3 adc adc mull (bad) mov mov fwait xchg add push lcall mov (bad) dec cwtl call mov add cmp push xlat sbb or repnz jnp or push pop mov ffreep (bad) repnz cmpsb into ficomp sbbl and push mov inc jne pop data16 sub add lock insl shrl aad sbb (bad) mov stos jl in mov ss movsl data16 xlat sbb test es nop test (bad) cmp stos addr16 test scas cmp cltd fdivrs mov mov rolb outsb (bad) jno jle mov out mov enter idiv cmp xchg int3 fsubrs mov lahf clc (bad) dec iret mov sarb (bad) pop and shrb cltd jecxz int pushf mov xchg loop enter icebp stos sub push cmp dec aas adc popf adc (bad) popf sbb es lock fwait nop call mov rcll fnstcw leave mov sbb sbb call pop sub stc xchg xchg jne push push dec fdecstp dec test push adc mov jnp loopne xchg popa sbb or xlat adc sbb mov test cmc mov gs ret mov add push les pop sti pop scas pop popf push or sbbl and push jns das sti fst in xchg test cmp (bad) iret sub lock enter imul nop inc push cwtl bound pushf clc lret lret subl push ljmp arpl dec pop xchg dec lds ss push cld inc pop push cmp das cmc pusha xor pop xchg (bad) int3 mov arpl (bad) fidivrl xlat mov sbbb adc push pop sahf dec sub stc test mov test (bad) (bad) lea dec push sbb pop lods pusha lahf js and (bad) aaa popf mov ss cwtl (bad) mull sbb adc pop lahf mov les negl cmpsb adc scas mov int3 mov test data16 int js shrl in or xchg int3 hlt loope jns clc std loope mov and jae cld insb sub push mov daa xor lea lods adc adc adc mov (bad) pop adc dec clc cmp mov cld dec dec inc test imul sti dec sub xor sbb daa test xchg xchg lcall ja sbb pop inc js adc popf in lahf cmp in adcl mov jo repnz adc stos leave daa mov pop inc xor sub je int3 mov push shll xchg out int3 repz clc or cmpsl (bad) into pop inc ss and fs cmpsl adc push out (bad) dec jmp clc cmp inc xchg cld fnstcw sbb (bad) repnz lret xor cmp scas daa mov mov mov out xchg popf jge in popa hlt daa insb stc (bad) cltd or les add push mov in inc adc push sub fistpll pop out mov roll ficomp mov mov outsl pop xchg hlt mov sbb jbe lods sub adc mov std pusha pop lahf sbb ret and pop ljmp mov (bad) js inc add (bad) rcrb sbbl push dec out mov jge ret into or fcoml push inc push cwtl inc jno jno jne xor cmp xor mov xchg mov std mov lret popa out fwait add mov xchg (bad) sti mov call cwtl inc xor jge std mull or outsb sub daa cmpsl or xor mov inc push dec push in inc inc rorb cltd leave fwait out les jb jp ljmp shrb ss add int3 add push inc xchg stos roll fdivs pushf mov sub das mov imul xchg negl sbb jmp in jb dec (bad) sbb movd mov cmc bound addr16 fwait and add idivl arpl cmc nop loop inc arpl pop sub xchg iret lret push cmp cmpsl ja sarb mov std lcall pop adcb xchg ret xchg dec loop push es pop jae push stc jb (bad) jl inc pop cmpsb pextrw inc pop scas aam dec scas inc outsb xchg sub jne movsl std pop in ret cmpsb js adc outsb pop loop adc cmp lea outsb mov daa das mov in (bad) inc jno sub (bad) or inc push loopne xor mov xor std lret lret stos lret test cli enter jecxz cltd jg data16 lock (bad) pop mull pusha mov lock or push ret mov loope and testl push lock mov mov int mov mov mov fisttpll xor mov cmp cld in jb sarl xchg push pop mov aad stc xchg lock xchg mov adc and adc lahf clc inc addr16 das push stos dec jb xchg data16 xor lock xchg test mov cmp push cmp pop dec dec mov cwtl mov divb sub data16 out or dec jno enter pop adc fnclex push fildl jmp rclb leave jno jb xor xchg fiaddl shrb pop xchg mov adc loop push sbb inc xchg gs pop push sub sub dec and gs dec jmp mov pop mov or mov imul stc sub jne bound mov push pop inc mov ret mov and pop in dec adc dec push mov xor movsl dec pop addr16 iret jns push repz pop test inc insl fisubr andl enter mov out inc insl cmp mov push mov xor dec stos inc pop (bad) aaa mov stos test pop in inc xor push xchg pop jle aas (bad) cld cmc dec jns push pop cmp lock cld or or stos daa cmpsb sub adc xlat jmp mov fimul or fimul push fstpt aad je jmp xor and push call xchg loopne sbb push xorb sbb popa out cs dec sarb push popa daa dec cwtl jne xchg cmp dec jmp xchg lea lahf inc (bad) (bad) (bad) fcomps es call xchg movsb add sbb cmpsb sbb popf mov ret imul xlat lods and lea sbb sub pushf ljmp call fcoml iret ret vpcmpgtb pop jns data16 mov and jp sbb fs aaa adc push mov mov or xor pop push add out mov clc lds pop xlat divb enter xor pop sbb mov in out insl out xor rol pushf xchg push imul lcall (bad) mov dec scas bound mov add pop mov push add ds or push push inc sub cmp dec outsb leave in movl inc out lcall fwait lock sahf test or dec pop mov fimull ja sub jmp adc pop (bad) push jae gs and inc stos sbb pop out pushf ja clc and in lahf or and sbb adc add cmp jg pop or stos lods push shll jle cltd test xor pop cwtl xor mov or cmp push fmuls mov pop dec pusha lods xor dec sbb cmp cmpsl mov pop sbbl jmp icebp scas pop dec ljmp repnz mov add cmp inc lcall test clc call in mov stc fdivrs dec jae push into insb (bad) and lret and mov js or ja mov shr inc fwait pusha sub sub icebp pop insb test outsl mov repz imull std mov aam popf and aaa iret test mov sub add faddl ret rclb cmp add inc mov js mov arpl repz cmp imul arpl cmpsb xchg push repz dec fisubr ja (bad) jecxz fwait jl mov and push ja and nop lcall or fisttpl add mov sbb out pop lret pop fistpl xchg mov xor stc les adc loopne xchg xchg rclb lds shl and mov xchg add ja sub cli lret (bad) lods dec and pop cmc add push adc add mov jp (bad) lds jecxz into mov in cli (bad) dec pop mov mov xchg ja pop xor inc fstpl sub cmc lcall fcomps (bad) mov in cmp mov sbb push sbb (bad) cmc out addr16 dec shrl sbb insl rol or rorl in mov and cld outsb ret and decb jle fistpl mov mov lret pop or (bad) repz test inc inc (bad) (bad) xlat outsb mov outsb test sub cmp jg inc or dec pop sub dec inc dec repz add fs movsl xchg jnp in aad add lods lods leave arpl int rorl xor add mov add ja jmp (bad) or and cmp lock mov or mov pop out mov pop push mov shll push xor dec lock (bad) push cmp in xor or fadd fistl aaa jmp push (bad) cmpsl xchg inc test push push lcall test and pop sub das adc mov mov push jae mov push nop push pop dec out addr16 into pushf aam es add out inc mov jl push enter popa adc mov cmp lahf cld jns mov inc iret mov jno xchg sub std pop out adc out adc cmp iret mov sahf cmc cmp push cmp (bad) pushf pop imul loop sub jns loope push std mov push jge mov scas push and call aad pushl data16 mov xchg xchg int3 leave sbb dec idivb aam adc popa les dec sub xchg cli lcall sbbl (bad) jns mov mov or scas orl jne ja popf cmpsl or scas cmp out fisubl aaa mov mov sub enter in imul adc pusha (bad) fistl mov pop outsl pop out dec jne arpl cmpsl lods pop and mov (bad) mov popa xor in jnp lahf cmp (bad) or cmp dec aas and or out xor xchg mov xor test jle imul sub sub xor pop dec dec test add dec mov arpl lret fcom mov lods push push rclb add cltd mov or ljmp mov rorl cmp cmpsb into and dec mulb aad sarl mov lret aas das xor pusha nop push mov push iret adc mov arpl push push ficom cmp stc test ja fwait out xchg pop jle dec push lahf cmp mov push pop js mov cmp mov cmp inc dec scas rol push fwait bound sub icebp xor jnp dec mov shlb leave mov cmp add add or ja shrl push outsb mov jno push mov dec jne mov lret adc lcall insl pop rorb add jp (bad) out dec (bad) (bad) adc pop out and sub push fcompl stc xor fsts out bound jge pusha pushf pop sbb inc dec jl sbb mov imul icebp ljmp hlt mov ficomp loopne mov cmp mov push (bad) aaa test mov outsb dec daa dec iret je aam jg push mov rcrl dec sbb (bad) out in and xchg shll in sbbl inc clc push and cmp inc cld push pop inc mov int dec xchg push xorl inc cmc movsb pop mov push movsb push rep or in xchg or lods stos stos sbb xchg into sub sbb sub ret jbe pop mov loopne xchg lods insl cmc jo clc adc or outsl mov repz mov lcall bound dec add xchg add add repz je ret test mov rcr pop (bad) or insl push mov cld pop (bad) js in or popa add call pop cmp leave dec mulb jnp (bad) mov dec scas aam jae add dec (bad) push pop aas dec popf test jno xchg sub jg xchg (bad) jb inc repz mov sbb jle xlat inc xor andl jb (bad) or cmpsl dec leave push loop mov in and push sbb faddl mov sbb pop cs sub mov ja sub sub lcall mov xchg cld pop je (bad) into sub inc adc xor xchg pop sub loope sbbl pop xchg fwait mov or and rolb dec js sti xchg (bad) mov neg in mov jno dec pop or pushf add repnz mov test hlt mov sbb (bad) sti sbb push hlt pop cmp notb mov and (bad) add in (bad) lret xchg inc or or and dec or mov pop (bad) into jbe add pop sub xor push pop xchg xlat mov xor dec (bad) mov outsl rclb cmp js fwait (bad) insb and jle stos data16 mov icebp adc lods push mov cli adc rcl push mov push movsl popf mov jns push inc jge push out mov mov (bad) mov js dec jg clc add enter in cmp inc push push add loop call mov ficompl xor mov clc lods imul mov add inc (bad) fwait adc scas mov test lcall popa lahf scas push xchg (bad) mov fiadd setno cs inc add js jnp and jbe clc ja jle mov das mov push dec test xor aaa inc mov lahf mov in aad jle iret pop lock jg test mov ret cs lods jge int3 sub popa sub bound push (bad) aam xchg out xchg lret mov pop fnstcw es hlt sub sbb fcmovb jns jb bnd mov call loopne jl adcb out and in fwait jmp or adcb fwait in inc mov pop cmc cmp adc shlb jecxz jle pusha sarl outsb push fisttpl cmpsl jmp push jg lods sub movsl add imul ss loop fistl icebp xchg mov loopne xor divl aas fistl mov inc xor or jo pushf mov dec cmp in shll (bad) mov scas rcl enter or pop test (bad) pop aam jo xor add jns push insl addr16 xor sbb or pop jle xchg sbb mull cmp xchg scas xor out inc pop mov ror push std sub movsb popf fisub insb mov ret dec data16 and push out push (bad) xchg cmpsb jo loop fcom mov push ror pusha xchg jb in sarl rorl test cmp mov aam pop or in mov sub (bad) sub sbb xor shll jne mov pop adc or stos sbb mov movsl (bad) nop xchg xchg les enter dec (bad) mov addr16 int addb sbb mov xor inc dec ret fdivrs mov std js js rolb xor aad lock mov xor bound adc dec leave and (bad) push aas mov push idivb dec xchg cmp xchg cmp add ss mov (bad) jmp sub adc xchg ss cmp sbb mov xor arpl imul mov or lds ds sti mov mov mov dec mov mov adc mov pop test xabort imul pop stc lock sub push mov fistp jecxz std in mov mov std jle jecxz aad adc hlt dec push sbb adc icebp addr16 jb shl dec cmp cltd pop jge pop les lret dec sarl fnop push pop test and xlat imulb mov mov mov cmp xor dec bound mov je lods add mov xor pop pushf jns dec test pop mov cmp mov sbb xchg push lock cmpsb int in inc ss cmp or add jbe fnstenv jb fildll mov pop hlt fnstenv sub cmp (bad) fwait pop test push add pop lock cmp in inc pop adc pop xor (bad) icebp in adc (bad) stc movb data16 fisttp out add incb jb std imul negl test pushf loopne lret icebp stos sarl sub inc imul xchg xchg movl ret int3 dec adc je outsl pop and nop cld or push inc cli (bad) dec ficomp aad push leave pop dec pop xchg mov insl jbe shl pop jg cmpsl shr mov idiv inc jno xor and rcrb int sarl mov es push shl mov pop jp in xor ret cmc sbb adc insl fidivl xchg sbb add add cmp aam pop sbb sbb jmp or or xor fstpl rorb xlat pop mov test mov mov adc (bad) xor into insb and xchg dec insb xchg lock insl les lds mov loop sarl mov lcall xchg int outsl xchg adc call xor lret and adc push loope adc lock dec pop dec insb push mov int lahf addr16 imul inc lods mov inc mov jl pop pop and pop jns pushl (bad) and adc jns pop jecxz mov or sbb mov in fcomi test mov mov gs inc pushf scas push dec add fistpl sub repz addr16 ret and jle rcr adc mov xor cmpsl jns aam iret arpl lret cmp jmp push sub mov in nop jae ret dec call (bad) divb bswap insl xor pop xor jne aaa jne enter les sar pop mov aas (bad) jg in pushf outsl mov hlt jne ss ljmp cmpsl mov test gs pop mov pop (bad) (bad) jno mov out outsb mov sbb or mov in aam aas jg sbb xchg pushf (bad) mov mov or jmp mov pushf jl jle (bad) lret mov fsubrl mov lahf cmp add pushf fs sarb add in push mov icebp and or arpl pop aaa dec lret or (bad) incb test stc sbb xor adc mov inc (bad) mov (bad) jle cmp (bad) push ja repnz ret pushf lcall xchg pop mov push into push daa mov shlb add daa and je data16 add lret mov (bad) (bad) lret jns test jmp out mov xchg (bad) data16 xor pop dec pop fwait mov jae out dec popf mov scas jg or cwtl cli sub jo sub lock cwtl jo or push mov sub mov mov test mov scas xchg leave aas cmp cld movsl jp das subb lds (bad) pop mov les pop pop icebp pop int3 lea jle rol mov or in arpl or shr or scas jbe or lret sar mov es add in push jb push imul dec popf add fs imul mov outsb cmpsl in lea mov push mov mov andl (bad) ss movups xchg jbe call pop xchg sub pop dec cmc xor popa lods ja jge inc xlat nop cmp xor lcall inc sub jb imul movsb ficompl add cli (bad) push (bad) fwait mov sub out mov (bad) loopne sahf daa loopne jmp xchg mov test out lcall nop xor rorl leave test js loop push stos movl les daa mov je repz sbb iret (bad) jne out sbb incb fcomp mov push sbb jle arpl cmp (bad) cmc inc test inc (bad) insb mov dec ss mov push dec jp (bad) ljmp push cmp lea leave adc lcall icebp in mov scas loope and fld lcall push mov (bad) sbb int pop push push xor adc cmp std pop adc pop into shrb and and sub push sub imul mov adc sub hlt fstl cld lods xor xchg aad out int push ja mov mov xlat mov sbb mov cmp jp imul daa or xchg xchg or call leave mov dec outsb mov xchg cmpsb stc xor dec xchg mov (bad) xchg push push das dec aam mov cli adcb push xchg push les ret imul aam fwait sbb imulb ljmp sti (bad) jns pop adc mov (bad) aas xchg xchg mov mov lret (bad) out or push je mov jbe (bad) pop mov loope movsl and rcrb repnz gs icebp repz pop adc (bad) lea jmp movsb and or cmc xchg clc dec push leave xor shrb (bad) xchg xor and jge lods ret sub jmp flds aaa dec cmp push js fwait jae bound out sbb push mov fmul pusha outsl fimull hlt xlat jbe insl inc mov int adc clc jecxz sbb mov es (bad) jae (bad) xchg or and rorb mov push ucomiss pop push push test and jp movsl or sbb xor xor add sbb test dec in push jg pop js inc test frstor mov inc stos repnz xlat aam or lcall (bad) dec ss sbb out movl out mov inc xchg repz repz xor and cmc repz cli inc push imul pop in pusha outsl cli scas loope aaa cmpsb jne je adc push add or cltd in xchg sub loope cmpsb push sbb gs aam push or or or and sbb adc pop movsb add dec cmpsl insl ret (bad) cmpsb jmp cwtl xchg sub mov test out mov jns mov loop clc cmp ret ret jno lds dec and movd jmp jno fisttpll mov sbb xchg (bad) cli dec jle faddp iret and in in jl add dec xor jnp sbb call stc jle movsl mov and mov fsub cmp mov nop xor push jle clc xor enter iret in leave inc sbb mov lds or sbb xor add mov dec fsts cmpsl jae inc sbb icebp mov (bad) adc inc je lods xchg aaa mov mov xchg loop cmp iret xchg xchg dec fisttpll adcb ffreep fdivl pop loopne iret sub ss mov or dec jl testb dec mov cmc stc add jae cwtl push ds sbb (bad) pop stos clc loope in out hlt in add push mov jb sahf jg mov imul daa movsb or mov adc daa lea ret cli fnop (bad) mov xchg out aam lret jl xor or sbb pop and mov fs pop psrad xor call add aas in lods (bad) pop mov add movsb flds xor ficom mov mov sbb cs movsl mov aaa mov (bad) enter sbb sbb fildl pusha imul add adc jns sub adc mov repnz cmp lcall dec lret pop cmpsl sub jmp daa lret mov int3 and add or jns inc iret push cmpsl cmp (bad) add pop outsl jmp repz adc insl cmpsl mov cld push enter adc xchg adc and sbb xchg push aaa fwait adc xor jp adc setg sti (bad) icebp mov popa mov hlt and fisubrl add fild pop pop or (bad) loop mov ret jns jle jbe in dec pop leave outsb dec fcmovnbe es incl jl mov push aam jns xor fnstcw (bad) in stos in or add pop ds jae dec popa ds rorl adc dec pusha rcrb push inc sbb sub scas leave cmp (bad) std aad xor outsb insb es andb mov in xchg sub imul adc xchg jae mov mov push rcll pop fistp dec aaa inc mov xchg ds mov mov mov push sahf ret pop dec stos xor arpl mov inc rorl es sub mov mov loope fstps dec lret sbb outsl dec lret mov movaps cmp push sub pop cmpsb enter jb pop sub repnz test jl repz xchg aad in cli or test (bad) xchg mov cmp scas xor test push lret mov inc sub xchg outsb xor xchg mov and inc sbb adc mov pop lods adc das jae inc js fs pop je push add loopne jmp into pop and hlt push test mov cmpsb mov nop mov xchg or push mov and adc scas shlb jle shr xchg pushf adc int3 mov mov repz dec fcompl ja xchg incl fimul je push push mov ficomp dec and jge ja xchg xchg lods or or or cmp jo push in and cmpsb xchg sbb mov aam in xchg test sbb cwtl sbb jle decl cmp xchg dec jle inc cwtl add cmova hlt adc rclb hlt sub mov cltd pop imul dec push cmp jno cli test mov xchg arpl dec jmp mov dec dec and mov pusha mov jne push cli dec stos sbb test add in push jp int jnp and mov sub mov cmp ljmp cmp aas arpl jmp loopne lods ror icebp mov xchg pop clc jecxz ljmp xchg cmp xchg or mov pop test pop or ficom push push mov mov nop push cmp ret xchg lods and xchg scas xchg clc lock cmpsl dec int3 fcmovnb adc lds inc out out add loope icebp pop daa sbb inc jg jae adc dec add ret stc ja push imul adc jne jl xchg scas xchg fiaddl add mov mov push pop int stos lea pop into cmp nop jae sbbl into andb mov daa ds (bad) xor or divl arpl fbld in test pop sub pop sub xchg dec je jne push sbb xchg cld test add idivl dec xor push pop and aam call lahf mov or out xor or inc add aas mov int3 pop inc bound add pop mov ficoml in std movsb push jbe or insl add push jnp jp cmp iret lods mov test pop ret mov jno lahf icebp dec pop push mov repz push push jge mov or sub imul dec sbb dec bound or hlt (bad) fildl fst (bad) psubq out cmpsl cmp stos push ret sub dec or xchg ret lret ja cmp daa mov and sbb leave rol dec mov xor nop push jge lret lods dec or mov inc arpl fildl ljmp or inc jecxz icebp cmpsl push ret fistpl test shr ret jge aad imul dec lea xor pop cwtl inc mov arpl ljmp xchg in rcl lret std sbb js lret and imul nop dec mul sbb mull fwait mov or std cmp adc inc movsb enter push dec sub inc scas jge lret stc xlat fcomi xlat test leave pop adc mov xchg mov jbe adc mov rorl dec mov inc pop out data16 jno loopne pusha jmp ja mov iret xor push mov mov pusha mov stos mov mov dec sbb lret xor mov rorl mov dec imul mov sub movsl sbb jge test push lcall or mov mov ret sbb ret stos xchg adc inc cld outsb adc cmp lahf test cld sub insl and mov daa jae aaa popa icebp rorb mov jno adc sbb je insl sub inc inc xor (bad) push sbb pavgw in cmpsb cmpsb test xchg ja in data16 rcl lock popf imul jg mov xchg sub test pop into daa js mov lods lret cmc cmpsl jnp mov jmp mov or (bad) push dec or xchg out and outsb iret xchg mov cs pushf jmp add or xor sub ljmp stc add lret sbb das jae xchg rclb or fwait outsb out pushl sarb mov jg and push inc lcall jg dec mov and xchg sub mov out jno sub test mov xor daa negb scas push inc (bad) sub xor add pop fwait nop add imul iret fdivrs cld xor ja imul adc xchg imul mov insb test shlb not aas pop cwtl cmp or div mov insb fisubr push inc cwtl mov (bad) popf push dec mov xor mov rcrb xor xorl dec cs loop les add popf roll cmc xor sbb and xor (bad) and push jno mov incl jb push mov xchg test out aam inc stos inc shl push pop mov inc mov je cmp sti xchg in lret (bad) xchg inc inc popa pop movsb (bad) adc pop lahf mov pop test fs xor jle and or and mov out test dec arpl lahf xchg sbb jecxz test or inc call repz (bad) aam mov arpl pop push mov js js iret mov xor jl xchg xchg sub mov mov icebp jo add push pop icebp cmp sarb loope push cmc adc pop std xchg mov mov (bad) adc jno sbb xchg inc push push xchg push inc cmp pop fstpt arpl xchg pop or insb sahf aad jnp sub rol mov sbb les test gs jns and mov push pcmpgtd aam and push repnz jg rclb stc mov xor call push inc xor call jnp push xchg jl pop call mov pop int3 or ds pop xchg pop dec sarb notl mov mov xchg inc lcall push xchg stos out dec inc pop (bad) lock and push cmp movsl sub xor xor fcompl pop popf cmp mov inc push stos mov mov shrb adc xor ficom mov das mov jmp sahf int inc pop sub mov jmp (bad) ljmp cmp shr movsl and push mov xlat push lret pop sahf jg pop adc cltd aad or outsb pop jg pop pop lds dec aaa lods pop mov pop inc fsub icebp add pop sbb jo xchg jg ror pop push icebp test aaa lods jmp xchg push xchg ret sub jmp jl (bad) les je mov adc pop (bad) inc aaa mov mov or xor mov mov adc push mov push mov xor cltd loop addb icebp cs cmp cli push pop stos pushf lods dec stos cmpsb movsl xor sti inc cmp ja inc in or sbb lods jnp cmp cs stc push cs push cltd fisubl js lds mov fmuls repnz pop mov xchg adcl cmp aas out stc data16 mov fiaddl and jmp out sbb mov test sarl movsb dec lods mov adc mov lods (bad) xor fsubl jne jns mov je push xchg sbb hlt addr16 mov jmp push iret int push add outsb aaa shll dec lret and addr16 push insb lcall jns (bad) outsb repz mov in or adc dec mov stc dec daa push adc ljmp inc push je lods int jnp out or clc int3 add fs (bad) out and test movsb push push add (bad) cmpsb xchg mov enter test fmull hlt jle mov push rorb ljmp inc push enter sub adc adc (bad) pop dec fild arpl aaa fisttp jg in ret and out addr16 in xchg shll (bad) std lods xor aas test add adc xor fistpl insb (bad) or jmp cmp rclb add lret ds loope mov mov arpl es cli lods mov sbb mov ret sbb mov sbb push inc sub jle ds jnp in daa arpl out frstor jp int mov insl rorb dec adc sub push std mov xor inc pop cwtl xchg cmpsb orl sbb cltd ss lds cmp test nop push push add push sub out scas xchg aam push push xchg or addr16 mov xor cmp sahf mov pop sbb adc scas mov ljmp mov sbb cmp jg mov lret inc mov gs cwtl std mov cmp mov sub cwtl jbe jg adc jb cmp mov push inc mov xchg aas push sbb punpcklbw in in outsl in rorl int3 fnop fmul orl mov out das inc jg cwtl dec xchg pop xchg sub sub rolb inc lahf push scas ret or cld sub cmp adc and push cmp out inc mov sub mov lds pop push push enter xchg dec jmp aaa mov (bad) in clc mov push les xor rol fmul or ret negb xor push in pusha dec pop out or pop add outsl pop add adc gs fldenv lahf ljmp pop adc scas adc adc jp dec xor and xor pop sbb sub inc sbb xor stc mov (bad) mov push sahf in mov mov xor pop test push adc adc xchg mov (bad) mov test inc into lret cwtl inc sub pop jae out jecxz xchg stos push in repz cmp cli cli mov push inc (bad) cltd push lods ja das jno and jbe daa or nop mov xchg nop mov add mov fcomip sub mov pop negb mov mov popf fnstsw ret xor and mov push arpl les out lods in jns pop imul das mov lret (bad) cmp lds aad mov ret in push imul das je popa jl dec cmpsl ret or dec mov mov sbb aas orb (bad) icebp mov ds mov add adc jge push movsb mov fdivrl xor jo dec jg stos jmp (bad) mov sbb or cld popf stos loop dec sub test pop jo cmp adc inc dec rep jmp popa pop add ret lea dec hlt loopne hlt movsb pop fadds inc sbb jae pop adc jno (bad) xor jns movsb cmp xchg xchg dec and (bad) data16 mov mov pop mov mov sarb popf pop push enter mov adc xchg popf dec mov mov jmp or push sbb enter lret jmp jmp test lods (bad) or loope push add (bad) fildll inc lahf (bad) mov hlt pop std and add aad sub mov mov xor movsl jns mov sbb xor faddl movsl out out xchg and dec push out cmp jge sbb cmp addr16 aas dec pop mov ljmp pop int3 gs (bad) mov sub dec (bad) adc pmulhw xchg dec mov sub pop fist loopne cmp xorl pop fiaddl xor and js icebp and cmp xor lods mov gs mov pop adc leave mov cld fs add test xchg push adc mov les (bad) xchg push sbb jnp sub inc loop pop dec xor sbb movups bound lock sbb stos sar pop or into mov std mov push rorl addl inc mov jno pop mov arpl lret inc sahf pop or cmp xchg sbb clc mov inc popf fs imul movsb int dec test xchg mov jnp cld fidivl mov sbb dec pop stos imul push and and out mov fbstp push inc les push sbb fsubrs cmp push imul lods pop ds pop mov (bad) stc int3 decb (bad) imul xchg xchg xchg test pop push or imul or flds aam iret sbb jl pusha push icebp loope inc inc xchg mov sub fcomp adcb ret sub xchg insl xchg inc scas mov leave nop and inc loop std (bad) fcmovu (bad) pop cmp pop or (bad) gs dec popf inc out jmp out mov and push dec push sub mov out pusha pop ficoml mov cmp adc scas push repz adc addr16 push pop add gs adc fcoms loop mov xchg cmp (bad) cs pop ja inc cmpsl add or fisttp repnz xor push sti cmp in push es jbe inc xchg mov nop push pop mov inc arpl das lock mov lock sub adc jle sub in inc fcompl xor in negb push repz dec pop or fidiv test push xor inc push fcmovu enter mov mov sahf add inc pop or add sub test and adc rclb xchg ss jno scas pop dec inc sub (bad) aad popf loopne pushf sbb aas add push mov lods hlt or insl push loopne push add xchg dec ja mov lock es xor mov inc out fsubs ficompl mov clc mov xor xor in jmp mov shrb add lea icebp mov xchg sbb loop xchg pop in ffree dec insl or gs or addps mov movsb jo mov repz xor mov jl sti mov aam das fldt lock mov das (bad) lret mov imul call inc xchg dec call pop lds push arpl imul dec sbb stos sub mov pop adc jmp scas divl test jo xchg mov mov jmp adc dec adc test inc pusha and mov pop fsubs or test popa scas rclb lcall and adc shrl (bad) mulb lds cmp daa push stos rolb xor loop ljmp xchg lret cld jl (bad) jbe je jne scas adc test movsb and ss dec call adc pop mov cld cmp inc mov jmp sbb repnz sub scas sub (bad) mov and (bad) adc pop fnsave test add rcr dec repz stc xor adc aaa ffreep xchg (bad) mov das psubusb cmpsl out (bad) mov fprem1 add push cmp leave pop xchg jns enter (bad) pop clc mov xchg push fisttp scas lahf mov lahf arpl xchg loop test test sub inc inc cmpsl inc cmpsl ss int lcall mov jmp fsubs lock hlt cmpsl arpl adc pusha shll or add cmp adc fidivrl retw icebp std adc mov loope pop jb mov (bad) stc push in jp test and test imulb xor repnz outsl fadds mov fmulp xchg add pop mov jae mov lea stos jmp aad sub inc sbb dec and pop test loopne jns or lock mov lcall sub gs sbb jmp in sbb imul fwait push sbb out aas mov xor xlat ja push mov out roll adc andb dec hlt add mov add dec (bad) sahf push jle mov pop sub scas mov roll pop push add lods jno sbb cmpsl mov scas insb int3 sbb adc fldl add sbb xchg adc inc subb adc dec dec (bad) lea dec inc ret dec xchg ret dec xor sahf mov xor pop or adc loopne and test scas out xor dec adc adc dec je mov add cmpb and (bad) hlt (bad) mov inc mov jecxz aaa aad dec aaa xorl or and or add in push test incl out or pushf rcrb sub or or sbb sti pop lahf out test push pop mov lahf aaa pop cmp scas or mov lods push xor int xor jmp mov pop ficoml sub lea dec ljmp cld mov imul les mov cmpsl aas ret jge int fdivrs pop dec mov stos inc int push sub orl (bad) adc jnp (bad) pop stc nop add cmp popf dec mov inc fsubl jle ret js jne sbbl add push scas pop sub adc adc lret shr ficoml cmpsl push mov and sbb mov popa imul xchg xchg fimull fistl add inc inc xor push jle ljmp rcrl mov outsl fsubrp adc cmp and inc out adc xchg ss inc es mov nop pop in fucomip add outsb lods jge cltd adc rorl rolb mov je ss inc mov sub pop cmpsl stc fbld (bad) pushf jp mov (bad) lods lods cmpsl cmpl and mov jge dec (bad) pop cs stos cmpl and or push fwait push jno lods test iret and lret (bad) push fwait sub iret shrb fwait rolb rcl add fldl in loope mov stos adc jle test addr16 (bad) or lock int rorb lods mov in xchg sub (bad) hlt insl arpl dec mov and movsb mov and fisttp sbbl out pop fcmovnu fs ja adc jge in (bad) xor popa dec (bad) pusha nop xlat (bad) frstor int push mov add jb and dec and (bad) mov adc or xchg mov mov pop negl mov cs cld fsubr adc mov jne pop es stos sbb xchg inc sbb dec scas or dec jle push xor test mov xchg test test insl in (bad) pop push xor mov aad mov and dec push dec (bad) aaa mov enter scas cmovno xchg gs cmp leave in push incb mov stc out pop insl aam cmp push fisttpll fnstenv pop fwait hlt inc fsub push inc ljmp bound test (bad) out ret adc sbb mov insl adc sub test in xchg or jge fldenv ret sbb pop das insb ljmp stc in and mov rcrb mov sbb mov push adc loope fidivr jl ret cmpsb push pusha cwtl out dec into in pusha mov pop add pop out pop mov test (bad) je xor push insl or fmul (bad) push inc in mov call nop jge push lahf mov fmuls stos fisubl (bad) or in mov or fldl jmp xor repnz jg (bad) pop outsl pop enter rcrl push dec sub test push nop (bad) ss in mov jbe adc xchg ret mov fisttpll pop adc mov aam lret cs cmc push xchg cmpsb xor sub mov lret popa shlb (bad) out mov or sub inc sbb jbe aam pushf jmp cli xchg dec adc sub (bad) popf out add jnp imul push or jne imul jno push pop ja xlat jge xor sbb push jnp xchg in les pop ret cli adc cmpsb movb cli mov cmp int3 sbb test in call cmp loopne push xlat adc jge arpl mov in cmc and push je jb push insl add stos jb dec out sti dec fistpll mov pop (bad) or pop icebp mov je sbbb mov jge jo into add cmc rol adcb leave and lds sub adc dec mov ror add ja mov lods xor shll sbb adc push data16 subl test fidivr mov pusha jne clc xchg into movsl xchg in fistpl xchg icebp popf insb fisubrl inc imul sbb gs out inc xchg and xchg lret popf lcall inc scas dec dec mov enter or jp jne data16 inc cwtl data16 jnp mov dec outsl jno aas push test or push sarb (bad) and add xor call push mov mov sarb fstp mov lret (bad) lock fnstcw mov std ja popa movsb cmp (bad) mov mov insb mov outsl iret hlt arpl mov xchg (bad) repz inc addr16 (bad) repz es xor sarl cmp sarl push loope shlb or data16 orl sbb stos dec jae push mov and (bad) fistpll push clc lds (bad) push push inc mov push push mov shrl es orb jecxz out cwtl js fnsave and xlat and fcoml lahf add jl es aam (bad) cmp aaa xchg popf mov iret xchg lods fcoms ds test mov les andl mov push call mov adc pop loope add inc cs sti flds push pop std inc daa stc pop inc cli adc scas bound and cmp int3 incb jae and data16 cmp mov sarl cltd outsl xorl sbbl call jns push fidivr xor mov pop daa xor jl rcrb in popf mov xor ret xor xchg or inc (bad) jne sub sbb cmp sbb stc pushf adc cli jae (bad) fiadd dec jecxz inc shll jae outsl fdivrl or lcall xor inc (bad) shll rcr pop inc pop jl shll je movsb sbb mov mov adc jmp cwtl outsb add daa ja pmaddwd pop mov fdivp jecxz push mov out aam (bad) iret jbe (bad) aaa sbb pop in jl data16 or push sub push stos aad lret lock add fist mov mov adc dec or in mov fsts scas inc mov gs xchg mov inc and cmp cs xchg inc xchg sbb and mov and inc test pop popf xchg cmpsb lds push pop lods mov pusha pop push xor adc not mov es sbb dec rsm cld push leave mov adc push rcrb xor stc sub sbb mov rcll mov data16 ficompl fildl cli mov sub mov push xchg pop int3 fidivr imul fisubl add jae iret pop mov ret ret xchg or xlat jno mov xchg pop div scas test (bad) mov out mov jmp lret adc mov lods insb jae jns mov add push fistl jp jns ret out daa es inc (bad) test dec pop outsb mov xchg inc rep out jbe mov add push pushf idivb push sahf mov pop es test popa mov cmp cmp pop cmp iret test sub test add aad gs mov adc push dec cmp inc push xchg (bad) (bad) iret jbe,pt fidivl out pop bound daa jo mov (bad) or pop loopne out add dec mov aaa outsl pop pop push lock mov iret sub int jmp stc cld pop mov lret jne sarl mov pop sbb inc or fiadd out hlt pop fidiv adc sub adc sbb and pop pusha (bad) xchg mov xchg das mov aas xchg jecxz push xchg xchg push mov or scas sub or lcall repz push push xor xor addr16 add cmp dec addr16 out mov fsubrl movaps jmp sbb rcl mov cmp push push xor mov pushf inc lahf push lods jle mov loop roll (bad) fnsave mov pop jmp mov jg pusha dec inc out push dec aas and and mov mov lret xchg gs mov das hlt jecxz (bad) repnz outsb mov lock data16 (bad) cmc int3 icebp lock sbb inc inc push push jo jp adc aas or rcrb outsl lret call jge push add dec addr16 and mov add fbld push dec lahf xchg push mov mov mov ss mov xor pushf lahf rcr sub push cmpsb repnz inc xor mov push lret push sbb mov mov lods push adc int mov cwtl dec mov pop mov adc lret stos fwait lods adc inc dec loop out jle or in mov sub inc in inc (bad) jle (bad) mov sbb inc movsl cwtl push adc dec xor sahf leave adc pop insl and cmp inc les cltd push stos shlb jb cli inc movsb lods ss add imul dec loopne arpl lret push dec movsl out add stos jne rcrl movsbl jnp inc push jle arpl inc mov je mov lock adc repz xor loop fildl pusha fdiv fstps cmc mov mov lcall and sbb lcall mov push jmp push clc das adc sbb shll xchg mov je call mov cmp orb cmpsb out lods aaa jbe push out (bad) lret sbb add fwait mov xchg lret in mov push repz or jnp,pt aam je repnz lahf jmp lea outsb jp ss insb lods pop insb add xor insl push pop notb jae adc das js ficomp xchg and sub nop add push mov jbe es push cmp rcrb mov into add mov adc outsb cld lods stos daa add scas shlb insb test test mov out test add jge arpl dec xchg in inc cli sub lcall aaa pop aad jno in cli call std sbb aas (bad) lock pop mov xchg mov in and scas aaa pop add repz push stos push cmp add or pop add add or or addr16 jle pop push dec or and jnp (bad) mov pop cmp add push mov jno mov sub stc pop lahf fldl mov push stos mov out cwtl push test insl mov sahf incl scas movb or sub stos (bad) mov xchg inc loope inc mov inc dec lahf test mov in cmc add fsubrl int3 xor lret dec jbe and pop pop xor add sub imul mov hlt in sub xlat lret mov or jg and cwtl or mov lcall xchg lds flds addb loope add mov dec scas sub xchg lock mov mov loopne pop out rcr arpl pop lock jle jo mov sub or pop ret pop mov fmul in jmp daa fdivs lods mov xchg dec jb xor cmpsb loopne jecxz push sahf out imul sahf insb es lods enter mov push fstpl gs sti or mov or call ljmp cs and push push int xchg jno sub and add cwtl rorl dec test and cs pop lock lea jge sbb pop insl in push push popf divl inc scas in mov jg cwtl (bad) fstp or mov sbb dec dec or (bad) mov movsl fdivl ss pop add cmc sbb jge lods fcompp push jnp sbb gs and inc xchg leave jle imul cwtl xor dec ljmp add mov adc sbb add push fs (bad) cmpsl mov mov subl in in lds ljmp dec xor popa and inc cwtl adc mov les iret insl das popf jp and pop jl xor cmp jns push ds xchg dec (bad) int popl movsl push scas mov pop mov js sahf test dec lods mov dec jl mov leave addr16 popf xor test movsl xchg and add lods popf fisttpll loopne mov jmp nop jp push adc sti pusha add repz scas sub adc mov mov sbb or and mov xor bound and adc in mov mov aad (bad) adc xlat sbb enter xor fisubl rolb mov mov std inc ss dec call sbb sbb mov call fbstp sub pushf into (bad) sahf inc in add sub pushf mov cmc mov jae negb pop push pop scas in pop jnp mov fisttp jno mov lds pusha pop std sbb fdivrl adcb cmp shl and test mov aaa and aaa arpl aam inc (bad) movsb mov dec or push shrl xchg movsb pusha add outsb jae mov cwtl push or bound cmp xlat push or daa cwtl loop xchg repnz xchg add in xchg insl jl das and xchg jl out mov sub cmp sbb fsubrs sbb jmp add mov mov add jo sar cli shrl xor lods mov idivl fsubs mov ficomp jns mov mov xchg cmp std push mov pop lods jle daa mov hlt cmpsb adc push adc push push neg sub mov cmc fs cmpsl imul ds dec cli add lcall inc je test push pop dec mov push push (bad) (bad) mov out pop aad pop int3 xchg popa gs daa jo dec (bad) (bad) xchg push sbb stos xor pop (bad) int out push mov addr16 or jecxz sarl fwait dec ret push stos push movsb xor mov daa lods push push inc or pop xchg xor clc cwtl je mov push cmp (bad) call inc cli dec xor or popf push pop fcomi inc mov push adc mov cmp aam test mov jnp inc mov stos repz cli inc test and xchg mov push stc cwtl jmp lock sahf or mov mov daa or mov fcompl sub in add cmpsl jg inc jbe loopne push adc jnp sahf jmp lods lret in int3 es xchg stos jns mov testl ds pop jle loope xchg mov insb mov mov or jge dec imul mov jae aaa call cmpsl fs movsb xchg cmpsl cwtl js aad xor scas outsb pop and ficoml jb ss movsb leave mov out mov sbb or pop lret movsl out and push add notb jmp sbb mov (bad) lds pop std push mov lods jns xlat push (bad) pushf jecxz movzbl dec jo inc jmp mov sahf pop ffree or adc or (bad) out jp out inc pop dec into imul and push xor jmp jmp lods icebp and std mov stc cli pushf ficoml outsl jmp and cmpsb outsl outsb jle mov les inc cmpsb test add or xor cwtl (bad) adc xchg mov pop mov pop adc sti data16 and push aam fmul mov xor sbb daa inc jge xlat (bad) jno (bad) mov inc out pop sbb lret and pop push (bad) je inc vmwrite mov test repnz and sbb xor out sbb out xor adc jbe,pt (bad) hlt dec int call cmp jns rolb cmc jle inc push lret sub add adc jge lods (bad) nop aaa xor insl add decb (bad) out xor mov mov pop push movsb fimul loopne cmpsb ljmp call iret pop adc pop and ret add pop clc aam mov lcall lahf xlat mov jnp not mov icebp ror cmp or xor pushf dec in (bad) pop and (bad) arpl add popf mov cmp and jle sqrtps adc mov pop xchg push outsl xchg mov lods adc and stos and and xor jno and movsb inc mov (bad) sti aaa add dec xchg out adc ret cmpsl cmp sahf lahf in in ds pop repz pushf cs mov out pop and dec pushf lcall mov jae test shr fidivrl pop loope sbb pop cli xchg pop outsb int3 mov pop lea movsl outsl fidiv xchg movsb scas fdivrl aas adc inc mov (bad) imul bound fsubl sbb inc jp push mov negl adc push jno jmp push mov daa mov je movsb movsb pop arpl push pop sub sbb or mov jge jns xor sub adc mov addr16 in pop repz adc add rcrb popf mov cmp pop sti loope adc popa sti push mov lods (bad) fbstp std repnz test push mov fstpt call fadds mov nop ja sub sbb outsl inc jae sbb or mov xchg or mov lods add mov pop sub (bad) xlat jns ja int3 xchg sbb out (bad) lock jle lea pop cmp jge mov inc nop mov mov outsb pop lds add dec mov int3 pusha and sub dec dec xchg push aaa out mov (bad) xor sub mov aam imul je repz pop jmp test sub (bad) call inc out mov cmp cwtl idivl mov xchg aam dec lcall inc out call int3 jne pop xchg mov inc lock inc xchg pop jne stos (bad) rcll mov xchg and lods aam xor sub or movl mov push out jecxz test fcoml jmp sbb cmpsb in mov ja outsl mov sbb pop movb mov dec push push outsb cmp push mov xorl lcall mov shr arpl mov popf (bad) (bad) lock inc adc out iret pop xchg repnz pop loop inc jno inc lock ss popf cmp pop ret or fst jno fidivr pop pop push fs fbstp mov lods xchg pop cmpsl pop fsts mov or inc cmpsb in bound dec jns cld in mov in enter or fsubp mov inc fidivr std add mov ret outsb mov inc shll sbb pop inc xlat adc fisttpl jg jns dec fcomip dec iret cmp cmp cmp xor in (bad) mov adc adc lret into mov mov cmc xor stos sbb add dec push cli js in lcall mov adc xorb or add jg adc push push cmp xchg lahf ret push fbld add push inc fist imul imul add ja xchg loope cltd push das mov arpl cli dec and and xor scas push sbb adc loopne mov enter adc and mov jl subl hlt cmp rcrl jp into scas das fsubr outsb ret outsb mov out (bad) mov pop clc (bad) repz out mov ret inc push jecxz dec sbb inc (bad) jo jl push (bad) adc (bad) rcr (bad) ljmp (bad) fdivrs mov xchg insl cmp mov sub xlat loop popf add leave or sarb mov js std pop pop in ret cmp orl pop inc vprotb mov xor movsl repz adc mov adc call test in jns pop jmp xchg mov fs push dec fbstp mov repnz loop test out add fwait in test rorb lret fimull movsb jg pop pop cmpl lea fild adc mov jb pop fisubrl outsl data16 stos in test inc cltd test lods sub movsl sub hlt cwtl push cwtl pop and pop movsl fndisi(8087 ret pop movsb in mov lcall (bad) call cmc movb cmp adc lcall pop data16 dec sub xchg loope adc cmp test inc xchg mov push sbb or pop pop stos mov sub (bad) mov sub in sbb add adc iret mov leave cmp adc (bad) jmp cmpsl push pop insb jno out shll cmp mov jbe aaa fbld jne lock push je popf cs and mov push adc xor sub fdivrl sahf loope push push push ja ljmp aas xor jns jno pop cmp and movsb inc mov dec lahf sar iret imul mov add push sahf jns inc imul pop (bad) dec mov cmp inc adc push lods outsb je mov push loopne jnp xchg mov xchg hlt add mov daa sub in adc test dec fimull lcall inc sub mov mov not jbe push jae xchg dec je add pusha cmp pop ret sub scas add mov lea lock xor mov mov loope scas stos pop cs push popf test cltd xchg ja adc pop popa add test adc in stc inc or test bound icebp popf push scas daa dec mov jnp or leave mov xchg jle jmp inc imulb (bad) xor pop xchg push mov repz jne adc dec jecxz leave repz adc (bad) icebp sub push mov mov pusha jbe xchg pop rorb pop cli arpl leave fwait out sub or rorl (bad) jno mov adc aas adc pop test mov xor imul fcmovnu (bad) repz push mov daa dec jnp pop fadd and xor pop (bad) nop rclb adc jle push (bad) cmp das mov aas adc push and lods popf or pop cmpl sqrtps and fwait or clc lcall sub jle mov xchg js sub fist jl es jg daa (bad) push pusha xor xchg push sbb add sbb mov lret dec cmp xchg shl pop stos test xchg pop cmpsb stos fnstcw popa loope xor push cmp aaa jg repz out pop insl push cwtl xchg out addr16 ret push (bad) mov lcall shlb ja push pop push call out adc mov pop xchg push dec mov fstl dec std loopne rclw sub stc test loopne xchg js jae mov (bad) cmc ds inc sbb dec cltd call into lcall loopne pop gs sbb push inc inc or shufps inc lret jo jle cli daa popf repz jnp clc jae sub xor sub in outsl push dec xor fwait in mov or inc xchg outsb lods dec push mov leave loopne jb xchg pop xor sub jno insb cmp or aad mov icebp adc sub adc cwtl inc xor testb sbb push cmp xchg jle,pt fwait shrl push inc sti scas sar jne bnd pop popf testb imul jle sub jb push jbe fcmovu xor push fwait pop cmp sub push rcrb out push faddl popa notb aas pop inc cmp fadds lcall scas sbb out push or pop push push rorl xchg mov cmc jns dec (bad) in rcrb jmp sbb movl pop jge mov ficompl sub rcrb xor data16 xor xor divl cmpsb movsb jae and sbb je sub push insb add inc pop jnp pop push xor push or sub nop enter aas lcall lret pushf clc (bad) mov ret jb xchg clc scas gs mov sub in hlt jb push (bad) call das mov bound dec mov mov int3 pushf aam leave cmpsl push jne mov adc jno and adc or mov cld aas and sbb arpl cmp cmp bound mov gs in sbb imul jg bound dec aaa and das outsb xor sbb ja les (bad) jmp cwtl cmc and and lret add add dec addr16 test enter mov sbb xchg andl sub fimull jbe mov mov or popf nop in mov mov arpl cmc jne ss test (bad) int3 mov xchg adc arpl fbstp aas sti dec add mov mov fstps (bad) in rdmsr jmp dec mul (bad) or fucomip (bad) cmp push fwait (bad) loope and jb adc sub or (bad) mov fneni(8087 enter mov mov out fistl sbbl pop popf push inc mov pop pop popf mov int mov gs push iret dec mov repnz cmp aaa clc xchg imul cli in iret imul push es arpl mov ljmp mov adc mov stos jecxz cmpsb fisubr adc xchg xor cmp popl movb or add or cmpsb pop sub es data16 aad dec jecxz adc mov ss (bad) out mov cli stc loop pop cmp lods adcl or fwait movsb pop cltd call aam mov sub xchg out cmpsl xchg nop repnz inc (bad) xor loopne jns push seto mov cmpsb test pop add insb mov sbb dec adc loopne fmulp push andl fbstp sbb data16 aad inc loop test stc cmp push and pushf cmpsl adc mov dec xchg ret jl out aas cmp push mov push ret or ror xchg mov or jl push or cmp jl stos in dec cli sub mov (bad) hlt add jo dec adc pop loop jbe sahf fcoms je add ds mov push and add rorb pop mov mov add ss repnz in out jb xchg or add xorl push inc push mov pop mov mov mov push or call dec mov push jno and adcl pop popa out mov lret (bad) rcll mov xor pop xchg lahf jae adc mov xor xor mov ret idivl mov (bad) ss stos leave dec and out outsb gs xor pushf adc mov les pop jl xchg dec (bad) add call icebp stc cli js mov enter xchg pop in sub jnp lock jno add jecxz (bad) mov xor adc out gs cmp adc push fcompl jbe and jbe test (bad) inc cltd arpl popf sarb jle adc add push inc test sbb fwait imul rcrb rcll aaa iret inc xor std add jno sbb jne inc push ficompl or jns scas fimull sub pop in sbb and lret (bad) and imul push test pop fwait mov mov pop mov popa sbb (bad) test in mov xchg aam cmpsl jle push and push test xlat out mov jmp add mov and xor scas pushf jmp pushf mov sbb dec sbb inc gs add out mov (bad) adc hlt xchg add out leave xchg jecxz mov cmp mov leave xchg cmpsb aad repz pop jmp xor jno adc inc icebp icebp and jno out aaa add clc jg jle out adc (bad) push adc repz fistl loope xchg out pop dec inc push lods and leave mov sarl ss cli jp xor fidiv aam sbbl mov and lret rorb dec es push imul enter jne daa hlt aas (bad) jp lahf inc iret iret scas sub inc jecxz,pt or mov in outsl adc pop sbb and icebp popf in aas psrad leave xchg xor inc pop dec dec dec push aas dec add enter loope es push push mov jb cli jle inc (bad) in addr16 or lods gs outsb stos rol pop mov push sub pop sub pop push pop mov mov rclb shl sub xor mov cmp notl (bad) out fmull xchg pop sub std jecxz push mov or jb fwait rclb cltd into sub lret cli bound in sub sbb js cmpsl aad (bad) in or sbb je push push xchg aas xchg adc (bad) mov adc faddl jmp jecxz mov in cmc cmpsb daa mov xchg xor (bad) mov out clc (bad) xchg loope out inc (bad) (bad) test xor lods das fsts add lret push cmp cmp scas nop cmp and lret mov neg xor (bad) jecxz add out jne add outsl or cmpsb addr16 or ret mov int3 sti mov or out dec dec dec jbe je sub jmp decl sub xchg outsb or push xchg push int loope in (bad) xchg cld cwtl (bad) jmp (bad) lahf nop dec inc bound adc int (bad) cwtl packsswb sub stos pop mov roll in pop pushf sub gs dec xlat dec lock push dec push repnz dec add addb or xor pusha inc icebp sahf adc sarl ret std enter stos call int3 inc sub mov push xor fsubrp mov fcomps lret and push lea clc aam cltd push and jecxz pop arpl mov loope add push mov push shll fistp add scas mov (bad) sub rcrb pop inc sbb (bad) lock xchg adc jmp repz insb xchg pop jecxz stos inc mov (bad) or adc sub mov mov fcompp lcall imul pushf inc adc jp mov jmp sbb cltd neg inc and push xchg add movb dec (bad) aas push cwtl in pop xchg add mov cmp outsb and into mov push inc pop and add jmp sub loopne push or lods loopne pop icebp mov shll pop mov rclb or leave xchg mov (bad) (bad) shl ret mov mov out push (bad) jo repz jno mov movb xor gs lods jb inc arpl test inc mov or or (bad) adc out (bad) stos jns mov outsb ljmp fild jge loopne in jl inc xchg dec imull adc mov push sahf jl mov std mov push xchg lods adc js add sbbb fildll sub daa push xchg mov das lds xchg mov (bad) movsl es jg mov std stc movsl roll (bad) ljmp sub mov push pop xor or scas adc insl push addr16 mov rorl jb (bad) jp aam inc insb fwait dec fwait cmpsb mov mulb lds (bad) jmp test mov mov popa sub mov pop cmpsl (bad) xchg (bad) jbe xorl cli xor sti lds xor dec push punpckhdq add dec mov rcl pop aaa cmpsb mov dec icebp arpl cmc aad sbb xchg hlt shlb outsb lahf (bad) mov pop adc outsl stc pop movsb jo fwait cmpsl push (bad) int3 fbld xor xchg mov dec stos fdivl add lcall cli lcall lcall or push mov leave bsf arpl or jp,pn xor ss jae lock sarb into push andl sub or lret mov in les lods (bad) movsb cltd or mov jle mov (bad) int3 aas push data16 pop pop xlat cvtps2pd call push icebp in push shr xchg cmp (bad) lret mov mov rcl in popa mov clc jne iret pop jbe ret jne mov mov sub les dec cmp popf pushf inc and inc imul popa pop and int cmc cwtl sti pop sub xchg shrl popa test ret cmc jp enter sub repz xchg mov movsb scas fldl pop fdivrs xchg or xor cmc (bad) sbb sti fsubrs mov clc aad sub adc xchg scas rolb pop xchg fcmovu lods mov ror rorl enter ja pop cli sbb ss push push testb mov jmp mov ljmp loope cmp lret and inc mov int3 fidivl add adc out fbstp jnp (bad) leave fstpl push cmp pop inc mov cwtl or sub and sub insb stos stos movsb notb pop xor adc adc dec inc lods mov add daa pop sub cs inc and lea pop adc es cmp fsubl clc arpl popf sbb xchg stos or inc (bad) jge sarl mov (bad) gs jecxz rorl lahf push movsl xor loope or adc dec xchg popf ljmp loopne iret push std cmpsb sub cli pop push mov (bad) push sub add sbb push xchg inc xor test xchg push subb sub mov fucomp push rorb std rcl stos pushf pop test sbb sbb test xchg dec push and xor insb inc aaa push sbb jecxz dec mov dec dec sti xor test (bad) imul sbb subl adc xchg push sub imul or add aas (bad) (bad) jbe mov stos xchg out jmp cltd mov push idivb stos xchg pop sarl push sarb pop fdivr pop clts loop fwait sarl xor inc add movsl sub clc and push pop mov insl add dec imul test ret inc jbe inc test lret ss fs (bad) loope,pn mov add mov jge (bad) add sbb test icebp jne xchg clc push xchg bound dec (bad) mov pop je inc mov lcall xchg sub cmp lret sbb jle xor inc xlat out scas cmp movsb imul push cs repz push lods pop (bad) jnp addr16 dec sbb cmp test xor aas test push popa scas push int3 lahf sarb test idivb pushf mov jle dec jecxz adc add stos daa in loopne or add adc mov (bad) pop jp push (bad) jmp dec jmp in cmpsb cmp lods jae or mov fwait data16 cmp add sarb inc add sti stos mov and xchg inc cltd (bad) xor hlt xchg push out inc cwtl iret mov jae or ss jo mov or adc sbb jnp sbb jo xor ljmp test xchg xor and nop pop mov push dec in (bad) cmp xchg inc inc test jg cli dec pop lret lret popa fsubr mov fwait or xchg (bad) popf inc pop pop xor ret (bad) or add lea jge push leave mov loope das out pop xor insl arpl insl pop loope data16 pop push fmulp xchg xor push (bad) push (bad) mov dec fistp lea mov jb movsl int push inc (bad) pop xchg push lds mov (bad) adc lods mov movsl (bad) pop iret orl or mov mov fcmovnbe dec sub arpl icebp push inc lock xor mov (bad) mov adc adc sub (bad) mov mov cmpsb outsl sbb mov adc add push out dec or adcl clc sbbb sbb daa pop lods inc jge or dec mov dec rclb stc or int push dec cmpl hlt movsl (bad) mov int3 jl cmc adc xchg into in inc jae cmp ja aam mov mov cld sub mov orl js jns aaa xor xchg pop cs pop ror mov mov shr loope jmp cmp push cmp add adc imul pop sahf in lcall popa imul outsl jge and pop aam stc and jle cld cmp je nop fcomps or xor loope mov xlat ret popl and mov int3 insl mov outsb jecxz jns jbe dec pushf push sbb adc in ds pop adc int3 insl ss sub ss test test test and adc lea mov pop inc test lcall inc popa inc iret jae bnd aas or stos mov lret (bad) cli xchg subb jb sbb cs add and xchg test xor mov xchg push mov cmp dec cmp jne dec pop stc add push sub push lea xor neg int mov movsb int3 movsb rol lcall sbb xor dec sub scas roll dec sbb mov mov call out out inc test in or sbb notl ds cmp enter ljmp sarb fdivs aas outsb mov in push sti sub out add xor pop and dec jb push mov inc sbb (bad) outsb push xlat test mov ret sub notb (bad) mov xor jl,pt (bad) (bad) jge adc ljmp repnz rol mov and mov xchg xchg push fistl pmullw xor je test cmc mov leave mov test jns les cmpsl mov cltd mov jno lods cmpsl imul clc jg stos (bad) ljmp enter pop cmpsl out jb outsl push pop inc (bad) sahf ljmp inc jl hlt mov xor pusha pop xchg rclb jl scas lret sbb sub (bad) jo fs nop es cmp mov jns leave cmp sti jmp cld and xchg mov scas jae ficoml sbb mov cmp repz add jp ret (bad) lock sbb loopne test aas je dec or clc push leave jecxz hlt mov fldenv enter ret or lret dec xor add (bad) lock outsl push jle bound ss loope pop sub test mov xchg mov loop (bad) push cmp jno iret sub cmpsb fcmovnbe inc into (bad) out clc adc jl adc mov or popa add push adcl add pop cmp sahf dec push inc sub cltd out lods adc aaa mov popf int mov (bad) xchg cmp cltd aaa shrl push xor mov hlt lret in ja or mov into loopne notl mov (bad) jnp lods mov or imul aas add add aaa insb in insl out je cmpsl push xchg ret lcall jecxz mov pop dec pop pop fnsave jnp int3 cmp shlb adc push imul sbb iret push gs mov dec mov xchg mov xchg cmp xchg jl jecxz push push cmp mov jl (bad) iret pop push bound mov in and add mov cmp out data16 mov and arpl js mov insl pop xchg xor adc sarb (bad) xchg or je push xchg sbb adc push xor loope push test inc dec add xor repz jge jmp or add mov lahf inc loopne iret insb lret mov jno cli jbe aad in (bad) inc ffreep jle nop and movsl fsub xchg lret scas stos mov ja xchg lds adc jmp mov out xor cmp mov adc faddl or (bad) mov icebp pop push scas sti (bad) sub lods dec inc push fbld dec dec cltd inc nop cmp test mov (bad) mov mov adc inc shr adc outsb repnz pop cmp or or nop fwait inc in pop mov inc mov das stc add enter es fmuls and sub jae xor testl pop orb dec lds mov outsb clc test lret popa push (bad) mov pusha mov scas mov xchg pop mov sti std popa pop inc adc icebp mov pop cwtl aas int cltd or push xchg pop cmp add in sbb loopne or xlat (bad) data16 mov sbb adc cli xor or (bad) out cli mov pop add push push mov cmp (bad) push lret dec sub and mov push mov fcmove lret pop mov cmp push add adc adc shrl push stc xor cmp sbb add add scas add jno jmp data16 mov dec jnp inc jecxz sub or hlt mov jge xchg xorb popa dec sbb xor outsb fadds stos jg fbstp mov sar enter sbb das cli dec cltd (bad) pop (bad) xor mov sbb pop dec add jmp testl leave push lea jo mov mov cmp sbb and mov pop adc jne cmp insb mov out dec push je adcl rorl outsb inc xor cmc lret cwtl int movsb pop or cs mov (bad) lret dec adc enter fs lahf into nop mov repz lock out dec mov mov cwtl sbb xchg hlt sub test aam repz jmp push adc mov icebp mov std dec push mov aas sbb cmp cwtl fimull aam dec push aad inc fmull push arpl fmull mov scas movsl mov xchg in pop gs scas call inc lods push jne inc dec loope insb xlat sub aaa jl movb jno imul push cmp inc mov sub js shrl test in xchg push (bad) sbb sbb clc mov jmp mov (bad) loope push mov jnp add lock stc add mov xchg out push imul js loop jp inc ficompl jg icebp mov mov xchg mov fisub and (bad) bnd jnp xchg mov movsl jmp aam sbb out inc cld add cmp push pop or sbb inc icebp push pop pop and test sbb or inc pop push std add push pop repnz imul xor jl lods out aam lret ja repz xchg pop ret pop sti sbb or movsb mov adc mov scas and fsubrl adc or testl pop sub out test cs sti imul jno (bad) repz fwait pop adc xchg add aaa adc sub cmpsl pusha adc pop sub mov jp add mov and push stos in movb je mov dec cmp adc pop sbb lea loop pop cmp add nop jp and pop xor inc invd xchg or fidivr insl pop cmp movsb lret movsl xchg loopne cmp push dec pusha adc rcl ds add xchg sbb pop and push pop pop inc popa lret inc aas mov sbb push in repnz mov test (bad) lret or cltd add insb mov bound inc and mov jae inc pushl pop cmp dec shl mov sub in adc inc cmp pop sub add xchg mov loopne and pop mov aas and xor pop or loopne shr pop and dec or lock int3 rolb ret jp jge idivl cmpsb les lea scas cmp sbb cmp aam addl popf ret adc fwait das icebp sub cmp call je and pop or hlt mov cmpsb and gs fisubrl fidiv mov arpl rorw adc dec fwait unpckhps mov add dec jns cmc cmp lret cltd push aam int scas inc cmp js mov or jbe push in fnstcw cltd lcall enter push mov dec jnp push ret or mov mov outsl in cmpsb adc mov je dec out mov scas or sub cmp jb outsl cmpsb jmp adc and cmpsl jbe xchg lea pop movb outsb mov jmp stos insb stos stc inc cmpb bound in push adc sub lods sbb sti stc fistpll xchg inc mov adc mov mov mov (bad) push popf dec sub out dec fs leave pop sub cmpsb dec push inc cmpsl (bad) test xor xchg jg or or cmpl loope pushf mov into cwtl sub (bad) xor mov mov mov and pop sarb mov xchg and rcll sarl jb pop mov movb leave add jge je fildl push movsb jns mov adc int xchg in lds inc inc (bad) mov mov (bad) and aaa lea stc loope xor fsubl pop daa bound push cmp sub fisttpll inc push or divl stos jg fwait (bad) stc cltd cwtl imull cltd lahf aad add xchg mov incb lods cs sarl mov call mov mov jg push (bad) movsb jne rcrl sbb (bad) and pop push pop xchg push (bad) lret push dec gs ljmp ja outsb dec dec mov cs sbb stc fcomps arpl psadbw ret xchg push jecxz and setns dec inc fcompl rcl jbe sarb leave add cmpsb pminub mov mov mov cmpsl xchg jge add dec and jg test push push cltd xor sbb and and in das cmp fmull (bad) popa sub or xchg pushf out adc cmp sbb incb xor jge push in inc ss test sti sub add inc push push sti jle ds insb adc mov fldenv hlt lds adc sub xor movsb push cltd loop,pn cmc clc clc lock mov dec jb cwtl test aaa jle mov inc cmc push stos xor mov imul popf cmp sbb cld inc lea pusha cmc fwait clc dec xchg lods lcall sub jo push jb push imul fisubl jae cs xor push mov mov mov hlt jb push xchg xchg adc (bad) (bad) mov mov scas xchg pop sub fwait popf mov mov (bad) push stc dec jo mov push cmp mov inc xor or pop dec or sub mov mov mov lret xorl fstl jecxz inc (bad) es sbb sbb call adcl test sbb xchg cmp gs addr16 es add push sbb das dec insb (bad) mov and into lahf dec adc hlt mov or inc xchg rcrl jne jp pop mov sub dec adc pop aam or push aas cmp jbe mov into fidivl loopne cmp or jae inc inc call fcmovb jnp fildl aam jno fidivr lods xor mov xlat ljmp imul pop mov lret in xor push jae sbb jg movsl pop xchg loope sub mov jl add insl mov push inc fsubrl mov push dec xor lret jo adcl scas mov lds xor fstpl (bad) sub sub inc xor mov mov pop (bad) dec inc and push push sub jmp inc mov adc sub xor and inc (bad) jno scas je push sbb mov call repnz jnp mov fld sahf insl xchg aas cld mov lods movsl sub xor imul jae add repnz cli push rcll push jbe popa jl (bad) xor cmp sub adc mov push lret icebp lret adc and in call ds push jg lds mov mov jl pop repnz xor pop dec xchg dec dec mov and and insl outsb outsl mov (bad) sub icebp mov push adc cld adc mov aaa sub cmp js xor and xchg in adc inc mov pusha mov mov mov sbb cmp out sub push sti xor orl adc mov jle dec out dec cmovae ret sbb test jmp leave js sub or je adc lret pusha cmp xor stc adc mov test push xchg xor fdivrs les lret inc inc pop xchg or mov dec std push xchg pop das pop lods add scas sub add xor mov jecxz pop lret popa mov inc pop jp int3 xor and addr16 and cmp out subb sti or mov pop jg imul cltd mov mov jge and xchg xor fsubrl jmp or fwait nop/reserved and int3 cmc jl shll and in fstpt roll negb rcrb jg call adc loop (bad) mov xchg (bad) adc jnp stos sub pop inc inc fldt (bad) scas out repnz xchg loop clc out dec loope mov (bad) in xchg inc stos imul fmuls mov dec or xchg loope imul pop lcall pop sub jns sbb jo sub test iret pop lods (bad) fs mov xchg lods insb push (bad) fcoms mov adc or mov inc ficom dec imul scas xchg mov cmp into (bad) in rcll sar and sub rclb jmp inc add cmp aad pusha jne xchg mov cwtl xchg mov ljmp scas mov xchg inc (bad) clc sub mov adc pop hlt xchg insb imul fildll lahf fisub pop divb mov popa jg pusha adc jns aas jmp movl lods push nop jge xor les mov (bad) push adc sbb sti mov push movsl insl mov (bad) je inc pop inc dec imul push mov scas cld scas imul cmp dec mov dec inc xchg fistpl mov loope imul jmp lret addr16 add imulb out arpl ja js loope mov stos outsb or sbb call lods inc cs frstor cmc dec sub mov mov das rolb adc mov fwait inc xlat jge dec xlat imul push add bound jno mov enter fstp punpckhbw ja and jp pop jp sbb ret push ljmp pminsw dec (bad) and inc adc add adc push test stos ret inc inc lock cmp push xor loopne sub (bad) xor mov pop adc ret test xchg jbe sbb lcall popa push pop cmp out add les mov push cmp xor adc or cli pop inc push movsl in fist pop xchg popf push xchg cmp sub in out jne xchg int pop xor inc (bad) sarl pushf loopne cld mov (bad) xor repz enter mov fs pop push sub jecxz mov pop (bad) hlt gs leave push cmpsl in inc aad insl into dec repz test and ljmp lret cmp ljmp pop (bad) repz sbb pop mov lods dec sbb stc daa sbb ljmp aad (bad) test int3 shrb adc pop mov call test je push ret test lahf xchg jg mov fnstenv cmp aam test pop adc cs lods faddl movsl test fcmovne popf jge mov jmp fisttpll scas stc push jg xchg sub das xor ret out jns jle jmp push mov ja imul popf insb dec dec dec loopne nop jge mov cltd push sub insb and mov divb cmc mov xchg test cli mov push sbb fdivl sarb test push push adcl inc jnp iret jo fild lahf add enter sub pop cltd xchg push jae ljmp insb insb stos stos push dec fildl adc stos cmp std cld mov mov (bad) divl adc inc loop xlat (bad) sub inc andl je adc pinsrw jmp pop push xchg dec mov adc cmpsl jmp bound mov rol mov into and int3 inc cmc jmp clc fildll not stos sub add add lahf dec fwait add test lods dec or adc mov repz fiaddl cwtl push fisttp and mov or push popa jl adc push test stos cwtl ds (bad) sub (bad) addl mov in out pop loope pop mov adc inc sub dec nop adc in push and add mov jo (bad) (bad) fld xchg jno (bad) hlt mov mov bextr es mov and daa dec cs or rcrl xor inc push in jle mov xchg js sub out mov arpl or repz stos cmc in adc mov sarl lds rcll dec scas mov pop rcl pop xor lods xchg and cmp icebp adc lods pop xadd je push cltd mov sti lods cltd (bad) mov lock leave adc xchg std dec out clc sub (bad) testb arpl jge lcall loopne jp mov dec mov add pop shlb mov fwait mov ss sub push call andb push nop fisubrl inc in int3 mov cmpsl inc pop lcall adc xchg sub loopne movl pushf dec jae push pop xchg pushf jmp sub (bad) jl mov fiaddl sbbb and push ds push and jo or push mull sbb and mov jae hlt loope or imul lods pushf in (bad) fsubl dec pushf loop jbe cld arpl loopne (bad) iret sub insb jo js imul sbb pop sbb push jae sub xchg loopne ljmp outsl sbb mov clc outsb (bad) sub mov mov movsl pop mov cmpsb push imul adc xchg rorl cmp mov xchg icebp sub push sbb and inc addl ret cltd mov pop jecxz lods sub ror dec (bad) icebp sub inc jnp inc loopne out and rcll pop or into inc pop fsubrs pop mov jnp and (bad) loope and das bnd add popa sbb and jp ja push imul lahf mov jge arpl ret addr16 jne mov loope jmp test pmaxub ficoml repz nop mov pop xchg push jle xchg cltd pop les add xchg jnp gs sub pop jle mov mov jae fldt push and inc cmpsl out enter ljmp mov sbb jp loop ljmp xor or push jae ss je xchg ret mov lret aam inc jp fwait jnp data16 dec xchg fwait xchg xchg mov inc fstpt idivl int3 inc ds movsb addr16 xchg pushf ret (bad) jne mov int aam lret push fdivl jns add into cld pop shr shll push adc stc mov fcoms mov pusha or add mov push ret cmp sub sub cltd dec cmp cmpsb sbb daa inc cmp jne sub mov and dec jb leave pop and pop in lea xlat ss mov xor imul push push bnd xor and (bad) insl jmp sbb push iret int prefetch (bad) sbbb pop imul sbb pop ficoml ret xchg mov mov daa ficomp stos pop rcrl (bad) pop push mov ja jp add repz out in jge (bad) jle repz pop test pushf xlat cli mov sbb lds in fdivl cmpsb push adc (bad) mov cwtl mov sub add push fild push loop addr16 jb (bad) mov push xchg xchg out incl add fisttpll ss rolb xchg aaa dec push xchg (bad) fisubl aaa lahf call imul jnp cs or in cmp xor fmuls adc lock push leave mov hlt ret arpl push xor iret mov popf (bad) dec mov lods push xor adc add dec xor inc fmull aas dec repnz add and jle aad push out sbb jae xchg xchg lock sub addr16 pop cli pushf (bad) mov mov mov lret rorl pop jb es add mov pop jle paddusw sbb push sbb test ss xlat dec fcompl or loope jmp movsl (bad) aas and lret lahf ss and sub xor (bad) lahf aad (bad) xor sub int xchg inc jg (bad) add stos dec xchg mov fldt cmp mov sar (bad) mov xlat push jnp and (bad) ja xor and iret cmc mov pop add jg ljmp fwait arpl (bad) cmp inc jne jb (bad) sti (bad) icebp mov dec cmpl test icebp test outsl pop inc gs imul cmp jno cmp xchg mov xor ljmp ss push pop inc ja scas sub jb fldcw into mov test mov mov enter and clc mov mov imul in jle mov out jo cs cmp sub lods movsb lods loopne fstpl mov mov lret (bad) push int movsl cmc out push frstor push xchg (bad) aam cs mov push inc jae inc jbe push dec shl lret cli outsl imul call pop sahf add je imul pushf mov push xchg dec loopne sub bound in jnp,pt pop push push test lds jae (bad) rcrb bound lds test xchg cld out mov lods sub imul cmp test repnz add cwtl popl ja (bad) bound pusha add pop test mov and pop dec loopne imul fidiv add les mov push mov pop bound hlt sbb push loope fisubrl jbe add in (bad) imul outsl push popf cltd mov xor mov mov mov adc leave xchg insl lahf (bad) pop in loopne jmp insb or stos bound cmp loopne xchg push pop or and daa mov dec out or xor jne xchg test cmp inc mov ret xor mov push stos adc lea mov add test (bad) sti (bad) mov sub ret inc nop push and lods jno insl sbb mov pop sbb out ss test sbb push (bad) arpl and stc or sbb sbb add dec pop inc fsubrp xchg mov mov push addr16 out out mov ret xchg mov add inc insl pop pop ret mov inc jbe scas xchg mov sbb sub xchg adc inc aam (bad) scas outsl jle stc out cmp clc xor js or sbb push inc xchg mov inc push (bad) dec cltd aad jne cmpl pop add dec dec jecxz add pop lods sub sbb sbb int3 movsb dec fcoml jmp fs imul gs xchg push bound mov mov shrl popa out imul cmpsb mov push push cmpsl jb lcall lret cmp dec push out push mov je (bad) loop sbb out push mov rcr rcl cmc adc (bad) jle cmpsb shll pop mov mov mov pop add sbb pop popa push gs adc mov jnp sarb xchg mov (bad) insl imul les (bad) dec dec int3 cmp sbb xor jb inc add cwtl xor sub aaa aas dec inc orl push in or sarl (bad) popf ja bound aaa iret mov loop xor pop lock popa iret inc std mov gs ja mov mov xlat roll mov imul cmp stc pop rcll vmulpd adc ret push and scas pop ja lock cltd sub and or mov or sbb test inc test inc mov dec popa inc rclb mov enter stos test mov push sahf (bad) imul pop sub ljmp adc lahf shl inc cmpsb sbbl sbb ret sbb mov inc push push insb rorb pop inc push insb test loop jge cmp inc add mov push or xchg loop outsl sub xor sbb mov int3 cs xchg mov sahf addr16 adc cmpsw js mov movsb push gs (bad) js mov mov mov sbb scas mov cmp jp add divl dec and cmp and jmp xor mov inc mov bound mov sub enter int3 loop pcmpgtw addr16 mov xor js imul sub scas test enter xlat or inc movb jae rolb in inc mov ds nop sbb dec iret aam add push or or popa and or mov insb mov das inc (bad) mov mov mov jo and pushf sarl call cmpsb push push shrb (bad) pop iret scas mov fistl lods scas imull mov inc (bad) les or clc pop adc popf sub pop sbb or lret adc mull ret push shrl mulb in add pop sbb xchg xchg or pop in ret sbb stos loop call lret les aam jbe xchg sbb cmc xchg inc sbb lret mov fdivrl push inc pop sbb clc sarl popf sub pushf fdivrs loope cltd adc lahf aas in in adc ja mov cs push mov cmpl jecxz cwtl jg int3 sub pop jg enter adc and and popa cmp mov dec dec arpl dec lea cmp cwtl rol lea push mov loop add fucomi cmc repz push out cmp or sti addr16 mov pop ljmp dec (bad) dec lods mov out insl sti and jae call pop dec lea movsb stos (bad) rol icebp sub xor push dec hlt ljmp lds cmpsb fisubr insl addl jge mov ret and jae inc leave cli and cwtl xchg cmp sub ds mov sub add lret lock adc add in insl add scas cmc mov icebp jnp arpl hlt std divl or ret sub mov rclb es mov (bad) xor nop repz clc dec xchg rol in mov notl sub fsubl loope ret cmc xchg divb jo stos aad lods push ss sbb jbe mov xlat (bad) js addr16 inc fildll loopne mov fidiv std out xlat cld sub call idivb pop dec sti movsb insl fstps push fildl (bad) test rcll mov cld jne test fdivrs sub test mov ljmp push hlt test cmp jno out test adc cmp stc (bad) push in sub test lea ss ja cmc lcall mov xchg push xor addr16 xchg les data16 arpl pop les push in in test pop mov add lea outsb stos sub xchg xchg dec int pop lock and xchg xchg jno inc pusha inc mov stos xor jle mov daa cmpsl mov and mov and add fisubl mov mov cli and mov push jae sahf ret pop gs ret in lds test sbb daa xlat sub inc cmp int lds movsl ljmp gs test js cli push mov enter lds rcrb fadd xor les dec lds enter stc dec das cmc push (bad) mov pop iret pop push and xchg and xchg lea and out and and push jl sub mov jb pop jecxz ret outsl ret push jnp test inc ficoml sbb dec js imulb sbb xor jl shrl mov xor leave or stos jge jmp in lcall mov es xchg cmp xor or cli adc push insb movsl nop pop fimull fstl mov mov xchg arpl addr16 push adc aam das mov rolb movsb sbb mov xor inc xchg mov mov or pop jp adc aas mov rolb jecxz push test fs mov std outsb fwait push pusha ljmp jp loope mov addr16 lahf out xor je cltd (bad) clc sbb sub scas mov leave sub sahf or dec out pop pop fwait movsl or cli sahf bound pop push sbb sbb sbb push mov popa inc es sbb fild add xor sub cmp js xchg sysret jecxz pusha and push adc mov pop fisubrl daa sahf aad aad xchg add nop movsb mov test sahf repz lea dec fwait std adc jns mov into dec ja cmp xchg or cmp xchg jo pop loope (bad) das ds xchg imul and or (bad) push imul orl int3 cmp mov mov mov xorl push andl adc xchg rcrb test movsl pop add jne into dec pop mov jl jnp fs imul inc jmp xchg ret cmp pop leave fwait pop idiv daa cmc aaa pop mov (bad) mov subl ficom push outsb in lcall mov mov addr16 xchg jle cwtl push xchg fistl clc push xchg jp dec out cmpsb imul pusha push xchg sbbl shll roll cmc sti jecxz out sub or pushf jge ljmp or jmp jne mov dec push pop mov out jns aad lcall clc and lret aam mov cmp cli aam xchg xchg sbb clc xchg xor sbb pusha out movsb adc xorl or xchg lds jle nop mov cmpsl xor cmp (bad) or ret es xlat sahf or popa jbe push aam shl mov shrl loopne js jle jno jge addl sub pushf addr16 xchg or repz call and sbb je inc lret imul jno sbb mov cmp shrl loope ja sub loopne es clc xchg (bad) cs push xor push add lock xor xchg adc int and add inc lret mov out repz dec scas jns or pop mov mov int ja (bad) js das call lret test fisubl out das mov mov lea cmpsw popa repnz (bad) mov mov cmpsb push adc (bad) mov push sbb ret aaa call mov and out int3 dec mov push xchg out pushf jno sti mov dec rorb mov cltd push test outsl ds lods (bad) xor lds lods popf jnp sbb stc gs out arpl fiaddl iret mov insl or xchg jne bound lods ret sbb lret repz xchg mov sbb (bad) sarb xor pop mov aam sub sub lds ret shlb (bad) xor fisttpll loop insl pop rcrl imul mov cmp pop shlb enter cli cmp jmp cs iret lods or pusha cmp cmp jle je mov (bad) cs or sarb lret jae jne xor add xchg (bad) or dec dec les pop out data16 jae lahf mov mov sbb sbb in mov xor out (bad) mov inc insb jns (bad) leave (bad) xchg jns out adc adc ja xchg push jns mov jbe or int3 mov xchg out mov les out jo adc push and loop xchg xchg ds xor out test adc test cmpb mov repz popa sub (bad) data16 iret jl lock push mov dec mov fisttpll mov cmc xchg daa push enter cmp pop adc adc daa push stos cmp negl mov xchg jg cmp jae sbb out and scas je cwtl ret daa rolb scas pop or out jp dec jmp or fcomi jecxz sbbb std and dec sub or sub or aad stc add ds xchg inc cltd and fbstp pop mov sub dec idivl leave out sub sub pop xchg enter jp pop (bad) insb daa mov pushf pop mov call movsl in leave add jl push scas in xchg sbbl inc and daa sbb push inc nop sub inc (bad) repnz mov fxch es hlt inc pop dec sub insb xchg movsb xchg fwait pop push fimull mov flds mulb pop loopne js (bad) mov add add pop test jbe or and mov hlt pushf sarl (bad) addr16 sub lock shl int push and mov mov sbb (bad) push int3 in daa and (bad) lods push test test gs fwait hlt adc cld aad cmp mov pop cmp cmp outsb sub and aad jns xchg mov in dec mov cmovo push pop jmp sahf (bad) bound je test sahf (bad) adcl (bad) mov in dec pop xchg stos daa jns sub movsl or pop sbb in (bad) xor push mov ss xchg adc ljmp or ficom cltd xor push js add xchg add into mov jbe sahf push mov inc test int push push (bad) repnz cli dec push dec jo repz adc inc mov cmpsb (bad) jmp ss jl push cmp gs fcoml pop rcl aad (bad) fisubrl pushf (bad) xor in pop xchg fisubr add fcomps lret rcll dec pop imul jg push fnop xchg imull jbe out fwait jb sub cwtl push bound dec fmuls es ds sub cwtl push lahf popl cmp mov mov adc mov sub lods inc cmp loop mov add test daa mov lds push sbb test lret cmpsl jg mov xchg pop ss scas nop sbb sub mov adc cs mov cld arpl lods pop or pop outsb mov add add push and inc ja imul xchg xor xchg hlt mov js fldenv lret dec sbb pop mov or movb mov ret add popf icebp add ficom js push cmpsl je popa or pop loopne std fisubrl push add (bad) push cwtl dec cmp fildl add jae sahf add xor repnz cmp fs pop and sub in add fs push in mov mov ds outsl jbe jle repnz inc push dec iret ljmp pop add lcall adc fldenv (bad) cwtl xchg stos lret dec inc push and sti aaa rclb in add mov cs jl test xor push outsl cld jmp or fcmovb dec mov mov sbb cmpsl and inc ret push sbb mov push test jae gs in add stos sub test or mov sbb add mov adcb bound paddsw inc (bad) mov (bad) int3 lods out xchg mov mov pop dec outsb mov adc dec pop mov or pushf insb in push aaa pop adc xor (bad) int (bad) jo lahf mov rcll mov data16 push pop inc pop mov stc mov dec sbb (bad) cwtl stos dec xchg in cmp jb movsb fist mov push mov aas jge xchg test mov xchg cmp push scas sub dec push xchg cmp (bad) scas stc or rorl ljmp dec jge dec mov das outsb lcall inc leave mov xchg jbe das jmp je and add add and xor fiadd addl mov incl adc mov xor orl aam add cmc andl jne ss repnz xchg mov (bad) or and add add add sub pop mov inc insl sbb insl cwtl gs enter into mov adc mov xor insb xchg sub es push in dec (bad) sub xor pop test jns inc call mov and scas icebp or nop xchg or (bad) outsl pop cmpsl in xchg iret sub testl mov xchg xor fmull push jle pop add or mov dec das lcall pushf inc std add adc mov inc jnp in sub mov outsl out mov aaa jmp (bad) jnp or mov loopne js add fwait dec rcrl xor cmpb or lods fidiv jge fs jne out add xchg aaa adc arpl jo xchg insl sub mov sbb (bad) and call inc dec mov test mov add clc mov clc out les mov sbb inc in push jge adc dec push in into stos (bad) sub push cmpsl pop fidivrl fdiv mov xchg inc test add or aas mov cld sbb pop mov mov dec jbe sub sti pop sbb in stos (bad) xor int sbb (bad) xchg es push cmpsb popf mov jge imul das test sbb divb in repnz xchg adc aaa and imul loop mov or cwtl fist xor mov (bad) mov inc clc fbld inc mov test in lret enter hlt cmpsb inc pop ss cmp push adc test jp or ljmp (bad) jge mov pop jle aad pushf and (bad) roll nop pop push lds lock mov inc adc and ja cwtl add xchg cmpsb cltd or adc pop or push inc in (bad) xor inc pop sub push push lret inc xchg adc sbbl mov les pop fwait lahf push mov mov les in cmc fwait jg lcall daa lods cld imul imul pusha lcall std xchg mov (bad) jle inc mov mov add sbb ror mov pop or out std bnd adc mov nop stos xchg pop pop paddb cld dec loop (bad) nop sbb cmp js mov push mov loopnew mov jle mov lock inc add lods jl ljmp in lods pop lds orl enter (bad) jb rcll pusha int test mov mov xor into (bad) xor jl lds or sub wbinvd push add sub pusha dec test push fidivr pop lcall repz or sbb xchg mov adc adc and (bad) push mov (bad) in or inc stos loopne insl lcall pop mov and mov pop cmp push and pop or mov adc stos mov cmp (bad) dec xchg outsb iret add mov js icebp movsl push or xchg js outsb cmp xchg lea inc jg (bad) push sub add out mov data16 fsubrl add mov xor dec in leave jno push pop mov or adc or mov xor dec push adc push inc std push ljmp jb into clc mov adc test (bad) or sub dec xor inc subb stos sbb pop and into movb imul dec cld and xor mov shll shlb ret jle jne pop (bad) mov es aaa lret push mov into sbb push adc (bad) icebp ljmp in xlat sbb les mov cli into cmc pop pop ret cmp bound adc loope hlt mov mov pop xchg imul rolb pop stc in jle xchg ljmp iret jmp xor pop sbb test push cmp or jnp clc xor div test out push and out pop lea scas push lea pop into pop gs inc jbe sbb decb or jp mov lcall shlb push pop and jb fmull popf ds ss in pop mov shrb jae sbb sub mov dec (bad) stc lcall pop movsb out mov xchg pop test adc fdivs fdivrp incl dec (bad) cmp pusha ret (bad) mul mov ljmp js pop lds mov jns push xchg push je das cmpl pop ss shl fwait roll repnz push sbb (bad) loopne pop fwait enter inc lock out cmp arpl into xchg jecxz adc psadbw cmp lock mov movsb dec (bad) dec dec or lods dec insl sub pop xchg lods or push dec xor imul add cmpsb pop fnop int3 adc out fldpi ja pop cmpsb popf ret stc (bad) rep push mov repnz bound jg mov sti dec mov xchg movsb sbb aaa or dec xchg in mov push out lods inc stc cmp test ljmp iret or inc (bad) xchg adc or xor mov jmp push and call xchg add sbb lahf (bad) or pop in mov inc lcall inc and mov jmp rcrl mov adc leave js fwait xchg fisttpl inc dec jle lods inc (bad) add add stos lds clc or push ja (bad) mov (bad) cmp dec insl in sti lods jnp dec sbb pop test xor inc push ficoml mov js mov mov iretw or adc int push jl outsl pop xchg dec lock nop cltd stos (bad) adc imulb aam mov outsl repz cmpsb pop mov notl push iret add inc add out out or cmp dec imul push mov adc in push jno (bad) mov xchg dec cmpsb pop ret xchg loopne rcrl add and inc fwait lds jl push xor jp and push or fistl xor nop (bad) (bad) fsubrl call gs je call sub xlat lret fisttpl ret pop lods lods cmp shr es shr pop das push sbb jbe push out js and inc out push cmpsl cltd lret jge aam out pop ds fsubl inc in imul stos inc (bad) sub out dec add cmp mov or push stos dec getsec adc adc or jae xchg xchg rcr sbb inc sbb aas cmp mov outsl js push clc sbb dec imulb sbb dec inc inc push mov sub mov mov loopne mov iret add out or aas in fisubrl out pop sbb popa pop mov dec fisttpl in pop push nop test sub xor cmp rclb pop lret iret cwtl mov stc fsub mov ret push ret cs pop pusha jno add sbb test sub sbb ja cmp das mov xchg fistp pop sub imull dec outsb or sbb out dec push (bad) mov ror dec push fwait aas jnp pop es in xor adc cld fistp or popf push dec xchg repnz add neg or jae xchg xor fmuls jbe and adc lods mov mov xchg mov inc jle sub fwait adc and xchg cltd lods jl rorl (bad) lcall cmp leave imul jle push es insl mov dec jns ljmp pop or movsb lods mov mov fwait add arpl iret rorb inc jl push xor (bad) hlt cmp lods mov (bad) jg cs rclb (bad) loopne imul aaa sub sub xchg dec fistpl incl mov daa repz andl pop sub sub or and pop jle adc jae lret mov xchg or jbe push ret lahf (bad) mov push xlat lea imul lret and and loop call call shrb arpl in adc adc call in rorb movsb test mov pop push inc test js mov jmp or pop cltd adc fiadd dec iret push movsl mov iret jmp test imul ret (bad) loopne mov and mov popa xor jae scas push xor mov fidivrl movsb adc xor imul nop sbb or and ficompl lret jne push or mov sbb push push jl mov pop insl scas and test or ds insb pop fstpl rclb xchg cmpsl xchg sbb inc int scas push andl test xchg xchg out idiv in inc dec jno rorb ret jb,pt jbe je lods mov sub push cmp flds jbe je sub nop pop cmp cmp ficomp ret pushf das dec cwtl ja testb sarl stos pop sub pop cmpsl jl insb jae insb out lods je mov push (bad) pop js add push sub popf inc mov dec jnp and adc mov mov jp (bad) xchg cld sub mov push inc or jae adc ret and sbb sub push out xchg repz mov daa orl cltd pop xchg and push add out adc xchg pmuludq mov test sub sarl pop pop pop pusha add mov sbb mov pushf pop decb inc sarb inc jmp mov and inc add cwtl mov cltd mov iret clc and mov iret sti out out mov cld and dec jbe xchg mov pushf cltd (bad) ja push icebp scas out lea mov insl ss loop sub stos loopne cmp clc rorb mov jae dec out push jecxz mov imul arpl inc loope loopne mov dec and in sub or movsl addr16 jns clc bound or jg and and or push icebp mov int nop pop add movsb pop call les pop sub aaa push or jb add das (bad) adc pop lods add insl cmpsl lea jmp mov mov jg cmpsb mov mov cmc scas fildll cmpsb inc imul dec push scas xchg jo jno test psubusw mov lret or aaa mov mov fld mov xchg and inc rclb out iret in cwtl je cmp icebp mov jmp mov xor jae mov mov test nop leave popa popf lods aas or scas inc push adc ss push lret pop fwait mov dec add mov (bad) adc and (bad) xlat add iret bound jge mov mov xchg dec nop lea pushf push popa enter call ss (bad) aam popf sbb negl movsb insl test sar cmp mov mov shll dec mov adc cmp jbe mov test or js push jmp cmp outsl xor movb jns sbb out lcall xor sub jo sbb cld mov std inc outsb inc or (bad) mov pusha in push stos (bad) cli shrl loop daa push mov insb mov out inc jnp add mov or adc dec or out xchg sti fcoms jne mov inc lahf nop in jg sahf loope mov mov ficoml test cmp inc jecxz lds loopne xor and jno mov dec outsl cmp leave push xchg aad pop mov out sbb sbb push mov cwtl subps push mov and cmp das rcll in loop lds outsb push ret std lcall or negl pop mov mull jb and repnz pop or pusha push add aad push loopne shll mov xchg dec push jns xchg mov in lea jns push pop inc push in stos xchg adc fdivl out enter inc jg pop jnp in pop mov xchg jb mov out lods push mov idivl jnp jae adc pop arpl and and adc jle (bad) mov daa jns in fildl outsb imul cmp jne jae aaa outsb dec pop outsb sub imul jae adc (bad) lock pop mov push roll push pop xchg cwtl xor outsl sub adc or cltd (bad) sbb xchg cmpl add jae test shrb mov mov iret add sub test adc fsts rcll aad jns dec add je mov dec out out (bad) adc js xor call adc mov adc mov out in mov pop scas push jle sbb mov test std pusha lock xor cmp push cmp insl jbe and nop orb push movb insb add xlat ret ss leave xchg stos stc add cs dec cmpl int je divl jg cli ret mov popf call mov cmp lods mov movsl jl mov loop das inc sub das lds push fstps and mov or cmp ret mov (bad) out jns pop push popa adc add xchg dec movsl or push lret ficoml loopne sub push (bad) mov cmp add inc push sub scas xchg es repz jbe xchg lock push imul xchg cli inc addr16 sub push (bad) pop and arpl cltd test repnz add pop sub lock pop movsb mov test fidiv xchg aad test nop stos cmp leave xor out push fcompl inc mov movsl call or push pop das mov cmp mov inc sahf jmp incb popf sub (bad) out lret clc jae leave jne sbb xor movsb fwait xchg add fnstsw and jg cltd cmp mov cmp (bad) cmp adc out mov push cmc icebp insb pop pop pusha stos sbb divl xchg adc cli movsb push clc push pushl rorb loopne insl in pop push lods fdivs mov dec cmp aad fsubs xlat test jg (bad) shr out push xchg or cmp cltd cmpsb mov mov and mov jle loop xor jo and pop fidivl mov aaa scas aam ds and jns sahf test adc imul mov aas sbb jge mov int3 add lret lret jp rorl lea push shlb xor hlt adc scas push adc out leave out arpl ficoml lahf (bad) jl imul jb mov lods pop pop jl fsubrl movsb aad pop mov cmp fiadd xlat sbb mov sti push cmp sbb inc and test dec jb std shrb iret adc jb inc sbb into sbb mov sub pop jl pop lahf in addr16 and push pop data16 enter gs cli xor mov incb rcll clc pusha dec jle pop pusha ret inc pop jmp stos rcl lcall int push sbb lock mov inc scas xlat jnp rol add cwtl pop xchg push mov aaa adc dec out loop sub push cmp push push rcrb int rcrb loopne xchg sarb inc (bad) fmulp add inc nop push or inc and inc call scas imul in (bad) les push jge xor mov adc popa or test fimul mov cli cmp rcr inc adc cmp cmp popa out call jl push rorb mov push rol push cmp outsb lret loop (bad) cmovb (bad) fnop daa cmpb inc dec and (bad) push pushf add test inc fs cmp shll jmp (bad) dec outsb fildl lock decb out push out stos (bad) cmc insl mov lods sbb ljmp je jle mov les pop outsl sbb icebp scas nop inc push rep push sbb bnd push push cmp cmp gs pop dec inc movsb mov sbb add cltd pop (bad) fstps push (bad) dec stc frstor or ret xchg iret dec out mov aam lea mov xchg push rorl xor roll pop and mov repnz cmp add xchg or fisubl xchg jmp or das aaa pop jne adc cld (bad) adc icebp jl mov imul xor and icebp bound cmp aad mov gs mov lods mov jecxz push sub push xchg int3 cmpb add jo mov adc sti push xchg stc push pop jo add inc lahf insl dec inc pop ds fcoms xchg dec fsubrp mov inc dec dec and ja jnp sub in inc and xor lock add les std test movl jo jp fildl or cmp popf aad jb jbe mov mov subb mov push cmp fdivl or (bad) pop sub xchg outsb fistp dec jecxz pop pop cmp push push push sub and hlt jns cs pop pop push mov xchg xchg jbe incb mov js add xchg inc adc lods mov mov mov scas inc stos mov pop mov (bad) fcoms inc aad (bad) mov push mov rorb dec out inc pop pushf push xchg and push cmp inc sbb idivb lcall dec jg (bad) stos leave pop test mov dec or cmp dec pusha xchg inc icebp sub sub or dec loope fsubs mov ret daa add pop push mov mov into jge std dec or push adc jbe add mov cmp cmp mov or mov push xor icebp aas jmp lea xchg xlat inc mov sub mov adc mov and push add mov insb inc int3 cmp adc stos inc jne (bad) xor aam (bad) loopne call clc int3 nop jno pop adc adcb sub and test cmp xor (bad) call adc pushf aad mov fs jg cmpsl lcall icebp adc push (bad) jne jmp call ficomp out mov cs cld mov push sub mov fcmovnbe inc dec hlt jbe pusha adc fild jne jp mov fisubrl xor and pop cs inc dec hlt or ret pop lods icebp rol in lock jo ret test in cmp fldl jmp jns in int lret cmp add int3 scas pop mov sbb jne shrl xchg pop cwtl dec mov push push je (bad) push or inc push outsl push xchg inc xor loop in pop mov loop sbb mov adc clc jg lock jno push fisubr jne call sti popa fcoms xor push jge fldcw xchg movsl mov in popa (bad) fdivr jmp sub leave mov cmpsb inc add inc test pop rcll arpl test sub lea xor mov add xchg scas dec pop lcall nop data16 fs jnp je ret stos dec jns ret ljmp push aam add push sahf les (bad) fwait xor pop inc int3 test inc imul cltd mov xor mov adc or xor dec lret mov xor call mov mull ret dec nop es (bad) les vpperm sub mov adc orb jecxz lcall jno mov getsec xor jl int3 and xlat cmp jb or sbb sahf (bad) neg jle sub pop cli addr16 cli adc lea inc (bad) adc push adc xchg cmpsb (bad) (bad) mov pop inc lods cmp fidivrl adc inc sbb lahf sbbl movl testb mov inc roll dec cld sub xor pushf in jge daa repz (bad) in inc out xor jl int3 (bad) mov int3 addr16 adc dec nop cli insb js (bad) int stos sahf push mov decb inc loop xlat mov add push ja push je xchg lcall xchg inc (bad) xchg imul dec jnp and shll xor jmp inc loope in xchg pop enter repnz sbb mov and cltd adc stos shl es jge ljmp jns mov popa push sbb pop xchg enter popf icebp cmovo mov orb daa adc inc push dec imul fisubr decl int3 and add imul fucomp push push push mov push mov mov cmp aas adc jbe cs insl cmp pop adc ds insl push sub insb inc jmp xchg sbb jo inc xor inc dec stc pop sahf jmp enter (bad) scas and or pop (bad) mov sarl dec adc jne in (bad) jb sbb cltd lds outsb (bad) push mov aam xor aas jne lds xchg call sub xor arpl imul addr16 gs push push cs cs into addb rcl add xchg pop push in into cmp cwtl mov ficoml daa adc test cld cmpsb aaa pop pop aas mov stos (bad) repnz hlt in cltd cs or cmpsb pop into mov pop push and cmp std in cwtl push jmp add add inc aaa icebp cmc and jns lret inc xchg shr xchg jl sub (bad) jecxz ds repz pop mov add mov pop mov (bad) outsb test cmpsl and loope lcall and mov mov sbb rol adc call outsl pop je int3 dec sub ret xor popf stc and iret fstps pop jmp adcl fnstcw add pop xor sub or outsb (bad) lods loopne mov imul lock and stos insb xorl and pop cmp cmpsl or stos dec call arpl lds ss jle aas jbe jns sbb fcomps fwait xor xchg gs mov adcl outsb aaa push into sub jns stc cmc inc sub mov divl addr16 add hlt aas addl clc lahf and jae out push jns fiadd xchg push mov incl cltd xchg imul mov mov lret mov or subb mov fisub into (bad) pop dec loopne push mov popf jae jns adc pop and leave pop mov xchg fiadd ret or (bad) cmp mov addr16 iret jbe xchg stos add mov add roll aas mov add lds push or lods pop ljmp xchg push cmp jp ljmp jecxz xchg push int3 fiaddl insl aas clc xor je cltd sti xor addr16 das arpl stos xor cwtl dec idivb dec sbb mov jmp cwtl jns xlat push movsl rclb mov (bad) lea je add fadds faddp stc out xchg test test and mov cld cs sahf pop out jge imul mov pop int3 jle jb push mov cmpl push ja bound ljmp ret sbb pop int std stc clc and push fimul adc inc into jnp push mov xor sub fnstcw inc adc (bad) add adc mov push xchg test mov fidivrl insl inc cmp and sub jo stos je jp iret push xchg xchg dec popf imull adc aad mov xchg push inc pushf add lret or inc dec or push or pusha jmp or cwtl xchg lret add sub (bad) cltd sbb and push jb mov je add call or in cmp cmp rol cmc and mov jns pop setl cltd fs mov mov push push xchg mov sbb (bad) scas sbb mulb inc mov adc xorl sahf xchg jp aad (bad) or cltd loope lock movsl je scas xorl and fwait push sub nop add das pop add jge push les cld iret sub nop loopne aad mov es xchg mov mov das iret inc scas mov aaa pop mov cmc adc mov cmp jne lret repnz mov ror cmp jbe aaa cmc xchg jnp (bad) cmp mov outsb sub and sub cld dec clc test xchg into pop imul (bad) arpl jno das rcll mov sub add rcrb subl gs daa test repz sbb push xchg jnp clc je (bad) cli xchg dec ljmp sti mov jae int rcrb cli jecxz stos (bad) mov arpl jo xor add loope cmp cmpsb inc aas jle jno,pn (bad) xor int3 and jo mov or mov cmc out (bad) lock addr16 sub lock pop fisttp iret or inc jbe in push mov sbb arpl sub fisttp in mov fisttp cmp mov inc mov inc decb sbb outsl lea cmp push outsl out mov ret mov cmp imul (bad) adc lea jns cmp push cmp subb push jp mov rcrb xchg adc pusha mov or sbb popf mov mov inc icebp inc push mov (bad) jno mov cmp test (bad) xor jns mov or scas push and call or pop push lea xor fnstsw push xlat and arpl pop pop or jle xchg or pop xor lret imul pop adc xchg fwait (bad) xor fbld stos test outsb popf and add ss aas mov and jle push fistpl inc inc out mov push dec push popf sub aam or mov mov call xor mov xchg pop fdivrs fisttpl mov lret sub lcall in scas cmpsl lret push push jmp clc inc pop sub (bad) xchg cmc mov leave loop cs or dec fistpl push sti or in roll push stos dec loope mov iret pop (bad) enter fiaddl test insb mov inc divl pop pusha xchg dec imul cwtl jmp and clc loope (bad) sahf mov push hlt loopne jg mov push dec mov pushf sub pop rolb je and push push inc sub int xchg popf cmpsb in dec mov pop push scas push mov sub aam insb insl cmp fimul inc xor sbb fcoms lahf mov xchg inc add (bad) mov mov std dec mov decl mov (bad) stos repz cmp and std dec fadds (bad) cwtl or cld sub jb adc pop adc mov lods outsl mov mov das leave call or test adc jno pushf sti or ret (bad) sbb cmp jnp leave lods and and or mov mov loop ds movsb pop push cmp xor popa in lds rorb sti push sub out mov int adc jmp xchg and in scas aaa and pop add scas push fistl inc sub daa cmp or aad fcomps repz rorb dec icebp lret push mov and stos lea xchg mov sbb in rol dec loope test aad fs inc out pop dec mov std imul push fbstp inc inc fcomi insl pop (bad) jecxz movl ret imul xchg js mov dec xchg dec and inc rcll arpl mov fist jl adc pushl (bad) jbe pop aaa and int3 and push mov mov cmp sub add leave (bad) ja pop pop mov dec fcompl xlat (bad) lock inc pop and out sub daa pop (bad) loope bound outsl movsb cwtl rolb sub mov (bad) (bad) and ror mov je or movsl es or xor xchg cmc test push cwtl into sbb dec popa loop add sar dec pushf data16 push sub lret stos xor xchg cmpsl mov test xor cmp add xchg insb mov cmp clc push fnstcw adc loopne out mov mov call cmp ds push mov jns loop sub es sti pop dec in out lds mov xlat out jge xchg mov and ds sub (bad) inc dec outsl ret in mov xchg push frstor push fdivl dec push xchg loop or out in add xchg mov in cmp jmp inc (bad) into into jecxz adc js lock insl (bad) pusha cld out into add push fldenv mov jge iret insb test mov lret loop xchg xchg fwait inc (bad) jne iret xchg outsl xchg jl inc add stc in jno rclb (bad) jae sbb xchg cmp sub sub push jecxz stc cli sarl inc lock adc repz xor cs lods fnsave jmp icebp aad sahf mov adc je fldenv cs adc cs test sbb cmc sbb xchg stc xchg decl dec sahf pop imul or arpl jge and stos pop sti or cmp push jae sahf lahf dec xor hlt mov enter fmuls adc push mov jg ja out aam pop rorl sub lcall hlt push notb fwait cli cwtl xchg ret push jns add out jno adc or sub in iret fs push lea xor dec les mov sub sbb dec and cld test mov cmp nop js jo cltd mov mov sbb fcmovbe xchg jp and addr16 cmp dec cld jbe movhps jns push jae repnz jne mov cli nop pop loopne ret imul movsb or (bad) adc (bad) cmp jp mov dec std cmp insb push mov ffree add iret out mov scas outsb rcll add fwait into pop xlat out and in mov sbb xchg sbb ja ret lret je les cmp inc sub sbb jbe mov in fmull hlt leave insb (bad) loopne push dec dec test or outsl cs push imull sbb out adc inc data16 test mov rcll push jmp add inc pop popf inc sbb addl mov xchg jo mov jo or dec jno xor adc jle in push cmp adc (bad) cmp cmc pop jbe aas das mov ret ljmp movsb sub data16 xchg repnz fsts xlat or push insl loopne jne xor or aad and negl fmuls ret mov push inc xchg test cwtl leave jno pop mov sub out jp cltd and jle inc mov roll aad pop hlt flds mov xchg mov sahf jmp scas sub je mov dec out dec out outsb cmp add aam inc insb call jg mov imul mov sti in jnp imul (bad) mov mov push call ss add mov ss ss dec rcrb loope outsl ds mov jle dec adc mov mov pop mov jb jge mov pop lret mov jl ret sbb (bad) addr16 call jmp aaa inc rcr mov sbb pop mov test popa icebp mov pop xlat hlt test dec push fisttp pop mov cmpsb (bad) mov test (bad) in out jge add leave push cli mov cmp int3 rclb fidiv repnz add dec sti std mov add lods mov gs sub xchg packssdw jo inc movsb loope xchg sbb aaa iret mov jp popf cmc aas cld lds pop xchg add push add xchg or adc lret dec out bound pop pop and jne fidiv or or push roll out data16 test cmpsb push push jb pop cmpsl mov test or lds push jp in dec dec popf pop lfs popf inc movsb mov or or cli push movsl daa and cmp mov mov int ret push push and dec into add jl mov rep cmpsl dec popa ljmp inc jmp mov mov sub out dec cwtl add inc mov jb ficomp jns inc (bad) lock clc sbb and inc cmc in ret and push (bad) xor lahf mov ret out push push arpl fcmove pop sbb mov inc test mov int3 insb and dec fsubrl pop xchg xor mov push pop repnz imul xchg ja,pn xchg out pop fwait out cld inc lds sbb dec es int daa mov push lea push xchg or xor (bad) cmc mov sub lret and cmp scas pop shll aam in in cwtl pop and addr16 fcoms lcall inc cmp pop cli outsb xchg add mov sahf jnp inc sarl jnp and test push (bad) ds movsl add and flds dec or mov adc lds test push pusha or and or vmovaps sbb add adc sub or mov adc test xor stc adc arpl xor mov push pop jne pop in js sti je in jecxz int inc sub or and mov inc or jle int push shlb or cmc (bad) xchg xchg jg pop push je mov js in mov test lret xor xchg xchg lods out adc insb jne test fs mov arpl es loope ss xor jecxz lcall inc imul sub rcrl jecxz test push aaa test in pop je int3 add enter push push shl iret fadd xor push and mov mov fwait sbb xor mov mov das mov mov notl icebp lret addr16 push lods and adc enter jne pop mov jae sub mov mov cmp scas push push dec mov aas movsl mov test leave or nop mov fs or push popa xchg xor mov push jo loop pop jmp aam or mov mov pop fidivrl negl sub jmp lods jmp jb sbb push and out push jl in sbb pop lea add outsl in mov mov cmp lret mov jno movsl sub imul clc cmpl cld push rcl movsb mov shlb adc outsl enter xor lock add ds (bad) inc mov (bad) jb jae mov or ja jb imul sarl mov push xchg out shrl in inc and sbb call loope inc loope ret test xor dec mov imul cli clc dec xorb test inc xor jae fwait std inc andl jecxz in int mov sbb test pop popf jbe sahf bound loopne jb cmp inc and hlt sbb arpl (bad) fiadd pusha xor sbb cmpb ss (bad) aas pop aas rolb (bad) das loopne or pushf (bad) lea cmpsb pusha adc jo jp pop fistl cmp out mov ret xchg push adc lcall fcomi mov push push nop outsb push or ja mov out push mov sbb into mov adc imul fcmove roll push fildll mov mov add mov out ds dec cmpb mov sbb leave out push sti cs hlt fisubrl ja loopne push leave or loope cmp xchg clc in leave cmp xor (bad) call cmp bound sbbl jecxz adcl add imul push jae aaa cltd scas pop sub (bad) (bad) fadds out data16 lds inc mov (bad) mov mov enter imul inc mov adc push cld (bad) repz fcmove fstpt aam push mov jge in gs or cmpsl into addr16 push or add add repz (bad) adc jecxz movsl cwtl clc sub inc int ljmp shlb adc xlat inc mov lods adc inc daa arpl mov stc loope mov jmp in mov daa fdivrs jae pop outsl mov add daa sbb sbb pop mov pop stc in flds or lret mov push inc mov lahf stos jmp lret sbbl adc and cltd pop cltd popa add fnstsw xchg pop mov call and idivb in je pop fmul mov ficompl fwait cmp aas imul popa jnp bound cwtl pop mov daa lret pop xchg pop in testl add test sub xor inc sti xchg or mov adc add cmc push xor add adc xchg icebp into push sbb (bad) xor inc frstor loope lods leave iret push adc and pop mov lock fcmovnb (bad) cmp mov add mov andb popa dec jle pusha mulb jg movsb in and mov push mov mov sub adc sbb add xchg jmp push in mov movb cmc out in ds sbb or cmp add outsl add testl lret pop mov dec test fisubrl dec cmc icebp xchg stos test jnp ss sbb push das movsl xchg adc lds jecxz cltd mov sarb xorl sahf add inc pop jl mov add and push (bad) jae jg xchg sbb xor xchg adc push cmp aam loop cltd test lahf dec shll xor pop jns popf inc dec imul mov out push dec adc or xchg adc pop shrl popa or sbb pop dec mov jbe lret inc jg in adc dec in dec and mov cmc xchg lds outsl mov pop or stc insb nop andb cmpb or add jle mov dec pop or lahf dec or adc pop test xchg xchg add mov mov test adc add lds jp incb adc mov inc repz or outsb rorl xchg add je setne pop mov push push mov and std dec inc scas ss push fs cs jg mov mov xchg sbbl sbbl stos js push mov ds or sbb mov fldcw es insb xchg and into dec cli mov adc mov cmp movsb jae sub push pop mov andl cwtl jno add divb push bound in outsl mov lock mov pop or sbb adc and add enter call int enter js in sarl or or out daa mov mov imul ror cmp int outsl push sbb in add add push push lds lds (bad) gs (bad) popa inc mov scas jmp xor add int3 in aaa adc jnp outsb cmp scas xchg loope mov pop sbb out xor cmpsl jge js es scas shlb hlt (bad) pop in fcmovnbe jo std enter sbb adc xor dec js repz pop aas sub (bad) xchg icebp imul dec and insb pop mov add push das mov aas rclb je push in xchg sub mov inc gs popa fxch cmp and xlat inc mov jnp add test xchg push adc xchg push movsb jbe and sbbl popl pop xchg push cmpsb mov rolb cmp sbb push push insl or push sub imul cmpsb (bad) lock xor out mov mov xor jg inc (bad) int3 lahf nop jmp cmp enter jbe inc cmp pusha jne mov or ficomp mov notl fidivr std mov dec jp sbb sub xor lcall jnp rorl mov push jae out imul popa push ja addr16 adc loop outsl mov add mov sbb mov mov dec dec cwtl cmc mov push jl cmc or in and lods loop sub mov movsl sbb int cmp inc rcrb sub sbb xor test xchg xor inc (bad) adc ds dec xor mov mov rcr inc stos lret loop add push je xchg daa dec (bad) out jecxz rcrb lods xchg dec and xlat fdivr xchg imul mov mov jbe dec (bad) pushf push jecxz mov inc fimull mov sub xor xor scas rcrb sbb pop sarb test divl xor or dec dec push addr16 push mov and leave shrl sbb jge xchg std fistpl add dec cld out inc std adc je test ds mov add es fistpl lahf add cmp add adc jb test cmp in pop mov dec cmc xchg loope fbld cld jle jecxz sbb adc and xor test sub scas loop stc jne mov jmp inc sbb fs out xor (bad) aad imul mov les xor lea gs lret fistpll fs sub sub jae mov jmp jp sahf gs pop (bad) jle cmc arpl outsl add movsl out (bad) sbb push mov xor push jp xchg fidivrl xchg pusha (bad) lods xchg push adc jne jmp add or in das sarl dec gs das jbe cmp mov ja and add rorl adc cmp in int scas xchg int int3 mov sbb lret cmp mov jmp push js cmp lods xor mov mov repz das ljmp test inc sbb cmp hlt call inc and mov dec loope jle aaa aad mov adc mov or inc xchg imul shrb mov in pop repnz mov cmpsb cld jmp xchg mov jb mov cmp test adc pusha fisubrl outsb sbb pushf jb mov push mov pop mov inc sarb mov addr16 leave daa int3 sub or mov sbb push shlb mov jnp push xchg ja pop adc int call push (bad) aad outsl outsb in inc push inc jo pop cmp push push jge bnd aad je cmpsb scas inc jb push lret add mov and les fsubl repz arpl inc jnp sub and sub add in xchg add shl cltd push sbb pop add sbb inc mov or sbb dec sbb or pop and mov lret xor jp cs dec cmp jge scas out cltd mov sbb cld in jmp aaa pop dec adc cltd and imul out cwtl mov pushf mov lea pop aad pop or mov movsl cmp dec movsl testl pop xor icebp roll or pushf in jb sbb push rcrl cli loop add ja shr dec addr16 xor xor in ss inc aad les xor rolb cmp daa in xchg out mov sub pop sti popa and (bad) enter lods rol jmp dec (bad) and add aam jle inc or push sub adc ja mov loope push mov jmp sbb dec imulb cld in (bad) or cmp pushf (bad) sub adc das cmp mov push cld ret daa cs push lcall inc scas fnop jmp cltd aam addr16 cltd jnp pushf sbb shlb sbb sub sbb in ja mov jge xlat xchg push icebp inc lods add xchg push sub mov pop movsl bound repnz sub aam negl lea inc mov jo mov jns dec mov push cmp and hlt stc cld mov scas push aaa fcompl mov inc cmp stc sbb (bad) dec adc out lret hlt and out cmp insb cmp add push push or fcoml call inc pop (bad) adc jns sub pop dec push clc dec adc inc shrl imul inc lea ljmp sbb jp mov imul mov and push ret sbb imul lret mov push popl sbb xchg cwtl dec pop cld mov lods movsl push fstpt shrl sti sub daa enter xchg xchg jp rclb adc mov sub aaa dec adc insl dec sub (bad) call fldenv cwtl inc push mov push mov cmpsl xchg fst lods (bad) push dec lret mov mov inc orb lcall cwtl in shll movsl lds xchg mov pop out rorl (bad) fdivrs lcall mov lods or ficoml mov jbe mov cmpsl punpckldq xchg cs in sub arpl pushf loop add fimul call lock or (bad) divl pop lret dec xchg nop lcall je or xchg in sub hlt out inc mov xor cmp outsb aam cmc punpckldq sbb decb mov mov xorb ja,pn mov adc jge in movsb cmp xlat (bad) lods inc ja,pt mov or xor add push clc pop jle add idivb jge sub mov dec cmp mov and jns push (bad) movsb icebp jnp inc lds xchg jo test js jne,pn xchg lods xchg pop jl out sub mov sub stc mov and xor faddp (bad) ret jae (bad) bound (bad) dec bnd sarl add test into stos outsb xchg xrelease shlb or insl repz ja rcl push xorl mov or mov mov mov lods fisub cmp mov int3 mov push out jb es pop mov mov dec mov js cmp mov shl pop out fmulp add mov (bad) mov xchg sub sub addr16 lahf xchg or (bad) call pusha sbb addr16 dec hlt cmp xchg aam pop in jle lret and dec cmp in jle pop scas pop pandn daa sbb out insb imul lods pusha inc clc aaa in sbb jle or mov jne enter dec sahf hlt (bad) or loope push (bad) pusha cmpsb mov pop mov mov mov es push sbbb cmp call lcall or std scas pushf fisubr or adc inc imul decb test aaa mov push xor popa dec ret sbb push dec sbb pop out shll or xor inc xor mov cmp mov xchg inc dec movsb outsl stos jb fwait sub idiv xor dec dec cmc xchg sahf enter pop mov mov pop mov mov mov pop pushf pop mov mov and imul mov ds or bound (bad) jb and pop push rcrl adc lret jge dec ds mov sub mov cmp adc pop mov aas loope ds xchg add and lret inc xchg stc pop adc add add (bad) outsl mov js divl es sub add xor mov (bad) cmpsl sahf push pop orb in dec rcrb sub or aam insl movsl jg push movsl fstl mov or mov es cmpsl repnz sbb mov mov or subl (bad) adc ret push jmp repnz lea push (bad) mov jns into sbb jnp push mov pop outsb adc add das jo mov daa popf cmp cmp repz inc sub arpl or pop push adc aad push inc and fmull xor xchg fsts out xchg sbb (bad) mov add xor jnp gs mov data16 mov pop mov pop dec inc adc std adc orl daa ja sub out xor jne dec fidivl leave leave loope repz in icebp (bad) xor xor add push mov mov xlat je int3 (bad) movsb call mov mov mov mov push mov xor aas push rcrl fmul inc add int fbld push cltd push nop aaa fmuls out mov pop mov mov aaa cmp push pop out cmp ja lods jne sarl shrb xchg add mov (bad) js loope sub cwtl sbb es das jp or jge pop xchg mov adcb test mov in mov int mov mov sbb mov jns push jg (bad) les js mov daa out mov adc inc mov adc lods pusha xchg fildl mov xor push mov ret fwait xchg test (bad) jne push add jns jo add pop or mov cmp sbb add jg push icebp pop inc push lret cmc push mov arpl fwait push fidivl or faddl syscall iret and stos ret pusha cmp jg inc inc stc in xchg lret fucomip stos adc pushf push andb mov xorl enter xor pinsrw xor mov dec arpl call jns aas mov pop add xchg dec (bad) sub std in inc sahf scas cld adc ficom (bad) cld mov jae lods int jne push lret sub push out fsubr add movsb popf adc push mov mov (bad) jne dec nop mov clc and pop and adcb lcall (bad) xchg inc jno pop xor xor les jnp roll xlat sbb lret adc dec dec int3 mov scas fwait lret clc adc push inc pop roll leave decl rolb and mov outsl in sbb push or gs dec sbb cmp push fnstsw cmpsl push mov push and scas mov ret dec addr16 addb (bad) scas push dec mov cld mov test ja jle js call scas and popf sahf push xor (bad) cmpsb movsb and inc test imul cmp addl cmc xor cltd mov sbb push pop test sbb mov xor xor xor push movsb adc mov pushf stos sarb inc mov add dec test sti mov inc fstpt add (bad) icebp xor jbe add test or (bad) sbb or data16 std add mov xor mov and adc lods call popf (bad) cmpxchg loopne sub out mov imul dec fmul aaa fimul mov inc add push jo int imul dec int3 sbb out aas inc and pusha das push dec xor lcall mov cwtl pop sbb pop mov push aaa inc push mov sarl mov jg mov out (bad) aaa (bad) jae into dec mov imul rolb fsubrs in cmp das pop aas outsb inc outsl stos xchg mov aam mov push pusha inc jo test in (bad) fdiv fsubr mov jnp fs daa sti pop xchg ljmp repz stc add sub push lret loope insl outsl cli mov std (bad) sbb inc and call adc or fstps xchg jecxz out leave adc aas out mov cltd lcall cmc aad inc add and sub add mov mov adc mov mov in insl rorb adc sub push ljmp imul mov fwait ljmp pop insl adc lcall loop idivb mov adc orl add out in mov pop imul cmp sbb in and push sbb movsl push push lock dec movsb pushf mov clc (bad) and inc mov ljmp mov imul repnz add xor dec fldenv cmp mov rorb iret cmc inc arpl popf mov cmpsb lock stos std xchg mov movsb in (bad) fcoms (bad) push sarb xchg xlat cmp pop leave and les mov lock or xchg das rorl lods pop mov sbb jne mov dec jmp jp xor cmc lods je lds outsb adc xchg pop sti sub ja outsl mov out cmpsl pusha jns aad jbe fcmove dec js in outsb xchg mov rorl xchg loop (bad) cltd jne add sbb adc xchg lret movsb js pop sub sarl into fiaddl or popw pop mov sbb and adc or xlat push roll in daa sahf adc mov xor incb lahf or ret ds cmp dec stos repz insl ss dec test sbb mov push (bad) movsb in dec out pop rorl mov or daa test loopne inc and (bad) mov jl or arpl xor loopne xor dec fidivrl mov call jae pop xchg (bad) fs je dec (bad) push notb insb sahf stos fist fmull xorl mov loop (bad) cli aaa dec mov je test sbb int pop mov inc pop popa mov (bad) mov xchg fstpl mov mov je bnd lock in dec xchg cmc stos sub cs mov push fptan sub adc pop xor mov jmp sbb add and lock cmpsl and ja lret scas out push out daa pop cmp or pushf cmp xchg movsl loop mov pop mov push sbb or sub aaa xchg xchg loope cmp sub pop lret pop cmp stc mov xchg aam mov xor scas in or mov cmp and jge dec dec add int sub lahf mov push dec in add sub add xchg sub adc inc mov mov add dec jecxz rorb imul fiaddl arpl push int js fwait test pop xchg lods in xchg shlb and mov push or xor std ret (bad) movsb pop xlat dec test push nop sbb sub lds cmp jne xor cmpl in insl loopne lret adc jg mov dec (bad) dec jecxz sub mov sub mov fwait xchg shl hlt xor data16 popa dec mov daa inc cmpsl lret (bad) addr16 sbb into aad nop outsl pop mov out xlat rorb jo adc xchg add jecxz test dec push (bad) in movsl add fs ffree xchg adc (bad) jmp sub scas cmp lods lds dec xor enter fdivs pop addr16 mov mov xchg aas jne aam jp jmp pop dec in jno fldenv mov ret rorl and int sub mov adc xor mov (bad) iret xchg cmp nop arpl sub or xchg mov sbb push mov out outsl inc fisttp fisttpll rcr out lret (bad) fadds test and jecxz shr mov std dec xchg adc jne or incl outsw cld loop mov xchg data16 fisttp dec adc push das lods fistpll sbb xchg into push jo pop cmp mov inc fdivrs dec pop mov inc test ret out (bad) (bad) cli int sub jmp cmp mov add pop fbstp jne or stos add (bad) hlt call rolb scas test test shlb mov les adc fdivrp lret out jbe dec cltd addr16 (bad) lds pop xor xor cltd sub adc fnstsw xchg (bad) sbb push push aaa outsl nop sub xor and xchg xchg (bad) div add into cmp fcoms fldz inc jle add ret in imul pushf out inc movl xchg ret xchg jp sbb jbe jmp inc lcall or or adc lods cmp cli mov xor gs cmp push push cwtl rcl fbld dec lods out imul jne sub ftst int mov dec mov aas inc mov rorl dec lret gs adc mov scas jle xchg into jno imul hlt mov mov jle mov pop mov stc fsubrl sbb ljmp adc aam mov btr lahf xchg and ds sub mov nop sahf into cwtl or sbb movsb push mov es out mov sti in mov outsb popf and pop sub inc mov lahf mov mov fdivl mov imul inc lcall popa daa push neg xlat xchg sbb fdivrp out mov mov mov xchg int3 ffreep jp adc stc xchg mov insl pop outsl sub jbe sbb xchg inc push and sahf andl in lcall lods pop popa test sbb sti jmp mov inc pop mov fs es ret lcall add xchg push stos repnz sub mov sbb inc sbb lret (bad) pop add sbb int int3 fistl jmp int pop ret adc scas and out xlat flds add das leave dec xchg add pop mov (bad) push daa int3 call aas into lret iret jle mov mov jge js mov jne push cmc pop popa or fldl xorl call xor xchg dec xchg jecxz add or (bad) loop (bad) pop sbb (bad) lock sub or jmp mov popa cld fdivrl int3 loopne ret mov push lcall int push cmp mov cmp mov push add pop ja imul out test dec in out pusha rcl inc arpl cmp add pusha in shrl movsl pop nop fcmovnb push sbb lods inc cwtl fucom imul lahf push imul shr pop pop pop pop push dec dec dec shrl adc fwait nop mov inc and mov inc adc mov or fwait out mov and add xor lea or fdivrl in call aas dec les cli pushf fdivrs ds loopne call das pop call fs fsubr inc xchg cmp xorl aaa inc jecxz pop sti sbb shl scas (bad) iret fwait out xchg lea icebp nop mov inc xor or cmp gs ficoml adc sub cld jecxz lods inc (bad) setp pushf xor mov jecxz loope sub es ror das inc in sub jb xor mov xchg and xchg test aam and ret icebp mov push inc xor xchg scas cmp jne lods inc dec loopnew mov imull pop adc mov inc push out adc outsb popf inc or xchg jb repz push outsl jecxz pop dec out cmp jl add (bad) std cmp push rcl (bad) out and add xor aam and inc mov mov fndisi(8087 dec xor clc (bad) jmp mov pop dec addb nop inc add frstor in jne pop adc adcl sbb insl add fs fcoml xor pusha jno cltd aas xchg stc pop enter inc iret cli insb fstpl hlt movsb push lods cli sub mov (bad) and out push hlt popl ret jp vpminsw jbe data16 dec cmp lods jg jmp jb and mov cmp fcoml repz les mov hlt leave mov mov push fistl cmp mov xorb push xchg scas bound scas mov mov aas xor add mov stos dec dec inc inc mov stos jmp push sub rorb fsub pop add movsb mov mov xor nop clc sub rcrb xchg jg dec add mov addr16 mov mov pop sbb add movsl dec cli pushf cwtl inc and adc pop rcrl mov xchg xor mov cmpsl (bad) out jge and (bad) push dec int pop xchg xchg ficoml xchg and pusha imul es je and ret test (bad) pop into leave inc enter inc enter sub cmp pushf aaa scas pop mov negb and cmp mov dec lock mov les adc and inc stos and std cmpsb xchg cmp icebp loope mov fidivr mov les or dec imul mov push add call lret sub por test mov pop push cmp lock pop ret scas (bad) xchg ret daa push js into lea leave nop cs lods xor in push (bad) stos in (bad) push xchg dec divl or lea into mov popa xchg push repnz jmp fwait loop xchg orb push or sub out mov clc sub (bad) shrl pop push push test xor adc push (bad) in sub fdivr jl test lea scas hlt cmc cli rolb or jae addr16 leave shrb ret das add jo test mov scas ljmp xchg push (bad) out pop fisttp xchg and int3 mull jmp ss xor (bad) mov mov clc jg xor cmp mov popf xor cld jne aam sbb mov cltd stos sahf mov inc mov aas aam cmpsb scas mov jge (bad) into mov cmp mov push xchg mov or (bad) xor mov inc push test test push js es bound ljmp loopne es mov push mov jecxz jne mov dec fucom or or xchg (bad) flds jb imul aad test lcall dec mov jbe jno mov insb lret aad gs rcrb inc dec lret pop jp and mov push in push dec pop clc xchg testb mov jne das xor push ja out loope sub mov cli sbb adcl xchg adc push mov cltd mov ds mov cmp mov aas test pusha sbb fmuls xor pop and xor in mov sarl das dec addr16 das dec lods lock inc fmul pop sub mov out push adc popf dec jo and push in adc shrl notl jo scas nopl inc mov insl pop (bad) pop mov cs jg lret sub mov andb pop jns int3 nop incb push adc insl icebp dec lea sub jbe aam add mov dec lret (bad) pop sub pop addl imul call push jo xor or addr16 cmc push out sub insl insb (bad) (bad) popa stos insb add adc sahf movb ja int3 subb in add dec bnd cwtl pusha stc adc jbe enter xchg sbb (bad) in mov ds adc dec pop hlt jne dec cmc pop push iret shr daa and (bad) dec aaa insl cmp sub adc cs out jp inc ficomp icebp xchg sbb and mov movsl int3 clc or mov xchg and cmc mov adc test (bad) cmpsl iret inc outsl jbe (bad) pop call push loop inc icebp xor call lret jecxz das cmp push sbb (bad) dec fstpt pop sbb xchg jo dec out js in mov xchg pop decb mov mov hlt mov lea xor and pop movsl xor bnd jl fs mov inc aas das in push or in es add outsb mov fisub scas mov dec adc sbb jl shl test inc and aam aam lock mov neg xchg cmpsb cli pop (bad) inc test xchg adc lret xor shrl mov push imul and or jge adc aad jle or shrb pop scas (bad) std ret pop mov cmp push lods stos mov pop and xchg inc push push loopne fwait test pop sarl shrl mov lcall inc mov je add out hlt jae jae cmpsb sti cs jl loope cmpsl data16 dec out mov dec movsl xchg cmp fsubr adc dec ficomp fdivr test clc sub dec jo jge leave out icebp adc dec jo push cmp or in es pop adc push add and fcomip test jle xor adc mov inc clc out int3 test push mov xchg ret cwtl mov sub lcall pop sub dec repnz stos leave cmp arpl enter insb (bad) adc dec repnz inc repz out push test and in sti mov jnp in icebp cmpsl addr16 cmpsl test daa jp cmp cs loope add scas mov inc mov add into sbb and insl adc sub push mov sbb cmpsl jns inc adc mov adc add sti mov dec scas test mov ret call (bad) loope int cwtl mov mov mov jle jp pop data16 jp jb lcall sbb cmp push jmp xor jge cltd and repnz pushf xchg inc pushf jnp mov sarl sahf pop (bad) cmp pop jae scas mov dec cmp sub jb sub icebp push jb mov dec stos or push repz ret ret xor std pop loopne xchg mov icebp outsl push pop add subl pop adc mov mov leave mov out mov mov xchg fsts xchg and movsb dec and sbb bound mov out xor imul jns ret push mov gs test les mov or ljmp inc es pop out pop imul fisub roll cltd xchg xlat das ret jp pop mov xchg adc ret and add push mov lea sbb out or int mov pop jb pop rol mov push gs scas lock imul fcmovnbe aaa push in mov cmp mov xor popf pop mov je mov call lock out (bad) out sbb and test loope cmpsl cmp pop mov in ljmp lea mov (bad) loopne fisub out jae and aad and fwait xlat push jl jle mov adc es xchg and imul lcall sub jmp jecxz dec xchg pop xor leave inc in inc mov jb cli test cld (bad) enter cmp mov inc cmpl arpl inc shrb cmp push out (bad) call sbb xchg push adc cmp lods out jge and das cmc xorb dec sahf aas inc fildll add les arpl (bad) (bad) popf jns or repnz mov xchg (bad) mov out enter adc daa sub sbb cwtl sbb add mov cs dec inc pop fmuls aad iret (bad) mov or pop sub stos movb and daa cmp jl xlat inc lods clc pushf fcomps push loop jne cmp push sti test ret lea stos pop aas xchg sahf cltd mov dec jns out or sub (bad) (bad) sub imul jmp fidivr in in xor loop ljmp mull add jo std dec das fwait jmp mov lds push dec daa mov mov jmp cmpsl pop push call sub imul xchg lods lock or add add stos rol cmpsl or sbb (bad) lret es or (bad) mov pop sarl out xlat jae ret daa cltd rol movsl adc adc xchg mov lret fimull (bad) out or bound ret loop inc sub and dec lret test jge repz popa (bad) xchg sahf jns sbb cs insb pushf cld (bad) push inc es add or insl (bad) out ljmp ljmp cltd das es leave (bad) lret push arpl (bad) into test outsb push ljmp inc lds stos dec cwtl fisubrl pop xchg push test pushl fs xchg imul push jb mul mov pop (bad) xchg pop aam inc adc mov mov rcrl dec shrl lods (bad) lock jl in je and in pop in and or xor pop lcall adc pushf sbb (bad) jmp and mov dec mov cmp mov mov adc mov push or insl mov stos imul cs mov jae xchg stos (bad) mov test push adc (bad) cmp shrl inc pop ds insl ret mov outsl inc (bad) mov push mov lods sbb std mov or dec gs lret sti xchg cltd clc xchg mov outsb dec mov sbb enter dec inc lock xchg jp pop repnz jae lds pop sub out dec sti decb lea test adc dec mov push roll repnz movsb popa (bad) and popa inc xchg jne push cli arpl std mov test les shrb int (bad) mov (bad) imul stos mov mov xor adc push fisub fnstsw xchg xor sub pop inc (bad) mov in icebp xchg addr16 or enter pop in sbb (bad) popf sub xchg sar mov ret outsl and imul or and jl dec dec inc fildll mov sbb add xchg sub in push sub (bad) cltd lcall data16 (bad) mov sub cltd clc ret and push sub adc add in loopne inc mov push lret or shll ret scas ja bound fimul pop sub hlt mov pop sub divb je mov xchg jae mov fstpt fwait mov mov pop je mov sahf es dec cmp and test sub in dec (bad) lock xchg xor xor jmp sub ljmp arpl xchg mov out mov mov jge mov adc push pop adc aam out push mov movsb (bad) dec movsl out outsl ss sub add stos pop dec dec and stos add stos (bad) sub pop ficom (bad) xor rclb cmp pop or cli addr16 jnp lret test fdivr stos int ljmp mov pop sub stos dec mov xchg push jnp sub movsb pop mov mov add mov mov aas (bad) pop sahf adc or addr16 push pop mov adc inc cmp inc fs je or mov inc jecxz insl inc add sbb push cmp rsqrtps gs sti and aam pop sete push mov xor cmp mov repnz clc cli (bad) jecxz sub add or jnp jnp hlt pop jae adc into stos ret cmpxchg and mov push add push sarb out ja adc dec in xchg bound dec add xor daa mov or adc sbb push lahf test hlt mov pusha push or sbb mov (bad) jg inc nop mov push popf sbb sti (bad) jno in rorb dec mov adc fimull notl movsl addr16 sub mov or or (bad) push je push push pop movsl mov jb ljmp push lds fcompp lea aas dec mov mov ds mulb mov rol xchg (bad) insb lret mov int mov add pushf or push and std clc xchg sub jecxz mov fldt aam cmc test clc call stos xchg sub and jle repz stc daa mov fsub scas mov adc scas in pop (bad) mov cmc mov leave fimul rcr (bad) (bad) imul sti mov cmpsb cmp (bad) mov inc bound call jg and adc rorb add adc popf andl gs dec sbb aas mov lcall popa jg lods cltd arpl inc leave in jno cmp pop fwait lahf popf push aas xchg test (bad) mov sahf xchg or into out xchg xor lahf jae sub shl scas imul and es outsb iret inc sub fs idiv mov popa mov xchg sub mov es sub lea out xchg in and loop pop ss lds mov inc psrlq sbb push mov xchg mov fwait dec push pushf mov cmpsl ds jne xchg fstpl popa gs roll insl in inc lcall mov addr16 out out add xor fcomi jno mov pop addl leave mov iret scas xchg add xchg jae xchg (bad) mov das icebp popa jnp (bad) dec (bad) lods (bad) repz out cs sub push xchg mov adc addl call jle into lds lods (bad) test jno jge mov sti imul pop test jb lcall (bad) push lock mov (bad) pop inc fsubr inc adc outsl sti add xchg mov out pusha pop mov pop test das push push es mov andl jbe test add or mov mov imulb sub pop rorl xor mov sarb dec jnp pop frstor loop test jmp call fild adc pop mov or clc jbe popf cmp fbstp mov mov jle adc (bad) int xchg enter jl push dec cli lret lods push cwtl mov (bad) dec in mov sti sahf xchg jge data16 dec sbb mov jne scas adc int3 cmc pop das (bad) je dec dec inc inc popw (bad) icebp addr16 aas sahf xchg loop xchg enter orl mov or add dec dec jo jle loopne call sub adcl mov jg,pt leave ficoml xchg adc adc ss jae lods push shrl add cmpsl outsb and mov push mov sbb das xor xchg lds cmpl pop jbe out xchg jp divb pop mov mov nop movsb inc pop inc and push mov cwtl lret mov adc sub or cs in jo fadds sahf sub sbb ret movsb jle sub lds mov push mov cmpsb into gs das or mov andb imul scas mov mov lods mov sti outsb ror shll ret and shrb sub (bad) lea pop mov mov jp mov in pushf dec out push ja xor mov (bad) repz fldt add sbb fldcw jmp dec sub mov xchg and jp cmp xchg outsl cmp push cmpsl cli or inc addr16 loop add mov test pop dec (bad) lock lcall xchg pop cmp les enter dec sub mov lea ljmp lods cmp scas repz xor test cltd shrb pop jecxz out adc loopne xor out das fidivrl aas loope cld cmp pop cmp mov sub inc dec repnz addr16 and sub in xor mov and push xor mov mov cmpsb leave jne dec sub in cmc std popf pop add out dec jg mov les (bad) (bad) or fnstsw data16 mov pop in and aaa cmpsl inc jno xor or mov mov sti jg ja push mov push xchg cmpsb mov or or adc mov pshufw xchg jecxz jno into xchg es inc int3 jp cmp xchg push call or mov loop lock stos xchg cwtl cmp rorb push mov lock push sub cmp xor repz imul mov mov sbb std inc fildl lods js lret xor fisub stos fist loopne or ret cwtl mov iret push test xchg fyl2xp1 lahf pushf fidivr xchg (bad) dec repnz pop inc push pusha add je dec clc std fstpt addl dec inc aam int xchg aas pop adcl insl orl fild mov test std loope inc int or std add pop inc std mov imul jmp je pop into xor stos adc push jno pop xchg ljmp lods push push and rorb mov push popa movsl add jp jecxz addr16 call xchg scas xorl aad (bad) jl ja xlat mov mov jbe stos cltd in add adc add nop popf push inc in and add into add int xchg (bad) inc aad addr16 inc add xchg in ss inc xor mov xor pusha fist xchg xchg fwait idivb cmp xchg inc pop xchg imul dec adc jge mov add (bad) push pop pop js pop add xor sub fnsave rcrb sbb push push (bad) pop inc dec sbb and jnp inc daa arpl (bad) jo mov int add jg pop popa mov fistpl jne pop pop les and std icebp lea fsts stos cmc pop rorl (bad) fdivrl xchg mov repnz aam jnp and sub mov insl jns addb scas xchg mov lret inc ljmp or repnz or jle or fwait cmp pop and popf into call leave sbb (bad) hlt ret mov sbb sub std sbb imul test inc mov outsb pop dec xchg mov aaa jae fwait dec jo inc xor aaa adc imul xchg or jo cmpsl jg inc inc adc sahf mov pop xchg xchg shll sbb ds mov jg mov daa dec mov or push xchg addr16 cmp fisub movsl pushf and mov dec pop int jne mov lcall adc (bad) jg,pt jae cmp xchg or sti test (bad) mov inc or xor js pop mov daa int pushf icebp fsubr cmpsb add pop test test mov mov call and push fistpll jg adc popf cmc and mov mov int3 and adc mull repz dec push pusha mov bound vcvtsd2ss sub sub and sbb adc jno push jp fmull mov mov push repnz dec clc adc xor push jbe jb popa rcr pop in add sahf (bad) pop pop fistpll adc xchg (bad) jns leave or or pop mov shr std jmp sti add js out in pop mov lods (bad) or aam push int lcall and test or mov in sti adc call add add loope xchg jbe add push in popa push inc pop xor dec jno int3 jge xchg xchg inc push cwtl pop mov lcall sahf pop dec mov rolb push pop inc call pushf movsl cmovb fndisi(8087 (bad) adc pop lea mov pop xor pop push mov test add jmp loope pop (bad) mov pop aaa (bad) loopne and jns mov jmp push sub sub xchg sbbl xchg mov jo (bad) mov gs imull jne imul (bad) inc fwait jae xchg xor add (bad) xlat (bad) xor sbbb inc fbld gs ret cltd mov clc aam jnp das jp or sub or mov jg test or mov sti jbe jecxz adc inc inc push pushf push xlat loopne shrb shr pop out sub cmpsl jne sub pop (bad) push addr16 dec push (bad) ljmp js dec jnp rolb mov ret and add sub sbb xlat push out inc idivl test xchg mov inc xchg ljmp or popa fcmovnu cmp pusha mov cwtl push sub (bad) mov lods mov loope bound rcl popf insb xor push adc call jnp iret rorb lret (bad) jbe aam sub (bad) ljmp or xchg sarl adc mov int3 ffreep cmp push dec push jns (bad) cmp add adcb xchg (bad) push in push inc cli gs arpl jo sub xchg jno mov dec addl pop push inc loope mov xchg notl cld jg inc fnsave (bad) jno xchg in and mov mov mov inc cld insb or dec dec movsl xchg icebp jmp fwait sbb movsl push add add movsl ret push adc mov test cmpsb inc adc add inc popf scas push push enter fsubs sti xchg stc ret dec sub fcompl cmpsb bound dec adc test leave insl cmc enter out inc fwait push in sbb xchg shll lcall xchg js pop jge daa push jg xchg mov inc dec push (bad) mov (bad) hlt push inc insb out dec inc pop pop rcrb push ja xor sub dec xlat dec mov jb inc pop mov pop in xor dec fidivl xchg jle aaa cld fnstcw xchg jmp hlt mov sbb (bad) jecxz repnz jmp mov cmp xor jae inc (bad) adc sub pop dec popf push roll es jae inc and adc fdivl push jbe lock stc adc xchg sub jae out push push sbb in shll mov and xchg ljmp enter inc or mov imul pop outsb push jmp (bad) xlat jge mov mov jecxz sub push cld push xchg hlt pushf xor jo jmp mov mov xor fdivrl insb psrld and sar je fstpt jecxz mov inc pop mov mov mov add popl scas add jo loope lcall mov or xor aaa sbb ds sbb or lock cmp out push lret dec pop (bad) mov ret mov add or sub fidivrl push lea movsl rcrb es (bad) je jge sbb es cmp pop popf sub addr16 or sbb inc mov scas mov jle jo adc roll in je or (bad) sub in pop add nop out push push in scas bound repnz lahf mov aas repz (bad) (bad) dec dec xor dec sub mov xchg push pop imul in iret stc mov jne imul jl mov mov aam (bad) cmp icebp xchg into push mov cmp fmulp call (bad) xor (bad) fidivrl mov mov and mov dec push add sbb adc popf rorl and push cmpsl and into jecxz and mov cmc mov sbb jg pop dec jnp movb enter gs mov repz sub test cmp outsb pop mov ja dec lock lods jno in jl es jne stos adc add push add jp xlat arpl or pop mov sub dec cmpsl inc pusha xor movsb push adc push (bad) nop push mov aas xchg inc sub push loop mov mov decb sbb out adcb cmc int test stos add lret leave inc stc sbb movsl dec mov je fisttpll jno cmp push push push out inc (bad) fisub jecxz test pop fs (bad) mov in jmp lret cwtl scas stos loope mov rcrb mov and lret adc and adc add push push or jge (bad) sti loopne jg mov cmp test movsb pusha out push leave mov add pop sub mov xorl cld sub sbb push pop mov mov scas push sarb pop mov popf pop push js and inc xchg insl push ja mov ficompl lea or sub loop sub mov mov jle fimul into jle ds outsl sub or sub movsl dec leave adc xchg imulb fcomip cmp icebp push cmpsl (bad) lock test flds push jnp cmp mov adc das add mov out mov pusha mov xchg (bad) pop pop repz test data16 inc push mov sub out aas and cmp mov aas cwtl repz xor out fisttp (bad) and imul out xchg jecxz orl aad sbb jbe jecxz lock fnstcw mov and mov add cmp lds cltd hlt out pusha test sbb aad push in mov mov das in push clc mov mov inc lret sbb push add cwtl imul std inc jno jo mov enter pop out xchg cmp frstor idivb test mov and jns push into inc mov mov andl pop xlat pop movsb (bad) mov and aaa sti push and sub leave rorl mov cmp and les dec mov das pop xor cltd scas ret data16 jecxz sub mov cmp mov repnz cmpl mov call cmc repnz mov test hlt inc jno xor push (bad) jne xchg aam scas jge rcrl xor pop push jl sti iret test add add lock lret mov and xor lods cmpsb mov lea sub mov sti arpl fs mov jae (bad) cli ret ror ja enter cld pop adcb push int3 pop cli add outsl and mov leave sub in aam adc das push mov aad mov insl jo mov mov inc sti or (bad) jp pusha mov jle adc jle imul mov mov sbb out test aam xor add test mov outsl pop cmp sbb scas es cmpsl js mov xchg int3 add lea dec jns mov loopne pop xchg notl aaa pop cmp pop or andl int xchg lock sub (bad) adc pop out push jmp push jg lods push jge or fisubrl (bad) lods fdivp mov nop dec or pop and in lahf push popl scas mov mov lods pop sub pop call push scas inc or orl or aaa loop jb mov loope sbb (bad) fstpl subl xor sbb cmp mov inc push pop (bad) faddl push stos (bad) addr16 mov push jge adc inc mov add jle dec xchg xchg pop push cmpsb lret push out jl insb jmp lock nop jae cmpsl insl ja sbb push ret mov movsb mov pop pop sbb lods inc add dec ret mov xchg inc lret cmp test sub adc sbb gs (bad) repz (bad) sahf fadds movsb xor lods stc in enter push dec mov mov insb adc lret jo pop jl jge mov xor xor cmp xchg ja push popa aas scas add jmp arpl xchg cld test pop (bad) out imul sbb testl adc cli add sub stos xor das (bad) js out inc call fstp ja (bad) aaa int sbb inc popf and ficoml (bad) xor enter push mov stos aam out pop aas mov mov push sahf je xor pop mov loopne aam dec imul (bad) jge popa mov adc test ret pop cli pop (bad) sbb bound out inc movsb or push pop test gs cld cmp in sbb pop xchg aad std mov adc lea mov dec in mov icebp and mov fsubs lcall push push mov je nop adc pop push stos lods mov pop xor sahf xor out imul dec jnp test xchg cwtl mov loope adc or xlat out (bad) jg je pop push repz cmp add xlat pop mov jb xchg ficom lods cltd subb fs and sbbl and pop sub into (bad) ljmp movsl icebp js pop rol mov xor pop sub dec dec dec dec or mov dec jne push push scas fs jae or ds xchg stc pop and imul push sbb fdivp cld insl popf aad cmp xchg mov fimul adc mov mov aam movsl incb xchg mov insl pop shlb cmp inc ljmp mov in in jns sub push sti shlb xchg jb iret inc cmp fldenv cmp fiadd (bad) into pop jecxz imul dec enter loopne or insb je sub or inc sub add xor clc in mov xchg pushf mov repz scas in cmpsl inc inc fisttpll lret xchg sbb push stc jae clc sti jmp pop mov and pop dec andb inc scas inc jl lret sub adc push mov lret and (bad) fwait xchg outsb outsb and and jl repnz ja and (bad) dec mov dec push fiadd cmpsb and pushf es or fs jp cmpsb sbb mov fisubl out lods int (bad) jecxz call or mov jl sub mov call jl xlat repnz sbb in loopne push inc int3 sti sbb lock shrb xchg jno push pop int3 mov sub out sub jns movsb add idivl mov adc dec js lods dec mov add push clc xor outsl inc and jp mov roll popa or and repz ds addr16 lret (bad) lock dec in or xchg dec fistpll push push adc inc cld cwtl inc jnp stos in rclb ds test loop add pop cmpsb or and jo (bad) sarl mov xor ss inc notb pop push or fwait iret xor lds insb cmp cwtl mov pop daa aas adc fbld sbb lds sbb icebp mov mov out and in lock loop mov mov dec push adc xlat mov cld (bad) cmp (bad) or mulb int outsl sbb xchg aam jge push mov (bad) mov cmp pop movsb outsb fistp les push ljmp hlt inc cmp jge insl imul mov repz (bad) adc jp jbe cmpsb cltd sub ret pop mov dec push add cmp xchg adc xor ret rcrl fisttp fildll lods or scas mov outsb xchg test xchg imul cmp pop (bad) mov pop cwtl cmpsb push lahf mov sub pusha adc push pop inc add cmp loope push jo int sbb (bad) je and es es adc xchg gs mov mov sbb xchg (bad) fcomps (bad) push sub shrb movsl jecxz (bad) rcr xlat aas sahf jmp jnp mov stos loop xchg fcomps sbb or xor xchg dec je arpl daa aas xchg xlat (bad) pushf and out push push pushf or aam ss jmp stc (bad) mov fucomp pop and sbb mov lods sbb add or cltd push xchg in pop mov in scas clc es pop pop cmc push push hlt mov daa cmp jnp stos insl pop add nop sub popl push cmp mov mov xchg or dec jg mov mov mov inc push or jae lcall or jp icebp pop fstpt xor xor (bad) jmp loop or out sbb mov mov lea sub (bad) adc imul addr16 pop mov cld pop int3 outsb jo test std outsl push int3 or pop xor jmp popf mov aas repnz into inc into pusha prefetch or leave aas inc insb rol outsl cld cwtl sbb or hlt loopne dec push lods pop shll mov push (bad) lret push jle iret in jns inc arpl nop mov inc loopne das add (bad) mov adc daa shr xchg pop mov (bad) adc mull stc leave adc lea jg and xor daa ds dec jno mov fimull inc rcrb movsb cld and cs mov jge and loopne xor inc mov es adc dec (bad) mov sbb popa test ret gs cs mov adc sub int3 test js dec lods cs or jmp cmp jo xor jb fdivrl or (bad) xor stos xorb sti pop sub add lahf cwtl push clc test int3 stos lret jno add jp lcall pop sbb push mov inc and fcoms mov xsaveopt dec lods xchg out cmp xchg push (bad) mov and fildl dec mov push imul and and shrl push lods faddl mov repnz xor sbb pop xchg jns or out mov xchg test decb jg pushf les dec ja fdivl int pop out push lods dec inc cmp mov mov mov mov test loop xor dec jae aad xchg iret sbb sub jle jecxz push cmp (bad) mov mov fdivl popf dec add scas das imul push mov mov cmp mov sub sub incl pusha adc lcall cmp in mov jo mov inc jp stos mov add cld lods push add adc enter mov and push cmc or add iret jp add stos pop repz out and ja out cmp mov jmp insl fdiv xchg lods js sbb mov fsubr sbb mov push jl xor andb sub xchg ds mov fs stc jae push (bad) mov or (bad) mov add (bad) ss jae out cwtl xor push scas rolb sub push aad sbb std in fidivrl pop (bad) sarb test or test dec insl add sub jnp test lods and out cltd mov jg cmpsl xlat inc rolb movl (bad) es cmp mov xchg dec xor jnp mov jg push dec mov addl popa sbb cld cli xchg pop repnz aad and jb mov sub fmull mov in lods pop test inc jle bound notl scas fisub mov (bad) cmp push popa push xchg pop lea cli cs mov arpl and and pop inc adcb mov push mov and cmpsb jmp std aam dec dec sti hlt xchg mov fidivl push cltd jnp and out adc rcrb inc imul lret adc shrl inc mov jb rcrl das sub mov mov aad xchg or cmp pop or mov sarb idivb cmp out fistp adc pop bound inc popf jg in lahf int sbb fnstsw rcl fildll xor jge xchg push adc ja inc fnstcw cmp movl push (bad) idivl dec paddsb cmp popf in cli push jbe roll shlb mov mov sar cmp mov add dec ja sbb mov leave (bad) mov xchg mov sbb jno adc jnp iret jl stc pop cmpsl push fsubrl push xchg add (bad) jns fiadd add add into mov cltd aaa scas lock sub inc cmpsb xor and jbe xlat xor hlt inc repz test pop jne cs nopl scas pop sub xorl lods jmp xchg imul cld pop imul stos lcall push cwtl inc xor bound mov xchg clc and ds fptan fistl loopne imul int pop dec mov cmp call or pop aas pop data16 push xchg or sbb inc aas ret inc je xchg jp xchg movsl add ficomp test (bad) or fadds sahf sub sub in sub xchg or jg push orl mov arpl sub test or xchg dec xor adc pop iret sbb andl jb lds repnz jns scas movsl inc xor or ret (bad) ljmp punpckldq pop hlt pop adc rclb xchg push rclb xchg and cli mov aam pop or out push adc mov (bad) xchg lods (bad) hlt pushf mov clc clc or adc (bad) imul cmp sahf xchg adc dec (bad) ss pop cmpsb fst dec out fnstsw or daa push scas test mov lock sbb jmp mov push push mov int aas sub sub xchg out adc cld fxam add int3 mov cmp xchg int push lret mov gs jno sbbl mov push (bad) inc mov or hlt ja push mov adcl pop adc pushf sub jle js addr16 pop xor jmp pop popf cmp sub or push jae dec leave xor adc xchg xchg fmuls dec add ret cld mov inc push jl jg bound es push ja mov jne xor ficomp or shrb mov call dec lret call add fnstenv test lds mov and lods and push mov fstl sbb mov jmp idiv mov cmpsb fwait pop cmp mov addr16 dec add cmpl rcrb fcoml cltd daa cmp in ds sub arpl lcall cmpsl lock loop add imul scas push into clc test lds mov add sbb and mov rorb leave aad fs sbb ret dec inc adc xchg sub in and mov or adc (bad) sub pop hlt add jnp scas (bad) sbb or mov iret jge int3 xchg jno cmpsl fs mov clc in cs loopne scas in inc mov outsb jb popa cmp adc pop dec xor adc mov call jo lods cmpsb lods pop dec cmp ljmp inc mov ljmp sub scas clc pop or xor mov jo push ja icebp push push inc xchg and sbbb mov mov inc vmwrite ror aam jns ficoml adc inc lea mov add mov and or jae punpckldq mov (bad) pop inc imul rol mov jbe imul sbb sbb outsb ss ret mov icebp out cli xor (bad) dec and mov cmpsl inc int3 push dec or cltd (bad) cld mov mov mov push push dec inc and mov stc cld push test xchg mov cmp lahf lods inc inc ror adc out daa call faddp push cmp aad leave pop xor test cmp movsl (bad) call cmp push pop jno movss cld pop or mov xchg pop mov xchg faddl mov sbb outsb jmp push in and mov push pop or or add xchg in push shrb xor push push (bad) mov push insb (bad) push outsl jnp xor jne test cmc mov ljmp mov int cmc imul sub js or pop dec fsub jns sbb xchg out push orl aad xchg movsl xchg cmp in aam add fmuls dec not mov icebp cmc lret call cmp cmp pop outsb mov leave add and sbb test add out jo push inc pop jb (bad) xor ret jle and adc test inc and pop hlt pop or sbb std push lds and dec scas pop push jae (bad) xabort mov mov ficomp inc sub sti and (bad) in fidivl or pop jmp mov cli mov dec fwait out mov pop push fwait mov test adc ja xchg push out push aam push je mov divl lock daa (bad) sti and lock xor mov out cmp loope pop push test and int3 add or cmp mov in (bad) roll cmp (bad) imul jno mov jl dec (bad) inc sub or adc in je pop (bad) mov pop xchg inc int enter sub or sub inc and dec mov stos xchg adc mov int3 outsb inc jecxz jmp sbb icebp arpl xor rorl jecxz or push movsl and adc outsl mov cmp cli inc jmp loop or jns ja in sbb rcrl sbb mov and mov cmp or inc lret gs and outsl adc scas enter and lods sub mov cmpsb pushf lods xor jmp scas loopne mov icebp dec dec mov adc cmc adc ret sbb lods add cmp pop pop dec mov in dec not dec pop adc testb mov in push mov fwait xchg sub daa mov orl cmpsb jmp cltd rolb loope xchg push mov inc shr lret pushf fidivl mov call imul sbb adc sbb push jge jnp out scas aas add mov mov (bad) jo rorl movsl jne in add ret sub cmp (bad) pushf scas int3 js in into js cli mov push popf fwait in mov jmp sbb dec xchg dec or mov lcall sub sub movsl stos mov outsb lret cltd sub jae add (bad) loopne pop cmp insl mov xchg icebp out jle les mov ss xor add add mov (bad) add imul fstps pushf sub das inc std inc outsl sbb mov xchg dec cmpsb movsl lret xchg ds (bad) cli imul mov add sub out int3 and pop cmp jge and pop push sti fdivs xlat mov and push jno shll and hlt lock jae in data16 mov movsb out xchg sahf into push (bad) pop sub push cmpb mov ftst lret adc cmc aad pop sahf (bad) rcrl popf adc sbb and pop in xor rcl inc xchg mov jmp iret fucom into cld jmp and aam inc jecxz and jmp mov and lods sbb dec leave or (bad) jno stc sti push fildll lret pop dec inc adc je lret pop cmpl inc push mov test (bad) xor movsl cmp xorb ds inc adc in enter ffreep and sbb hlt or xchg xchg cmp fwait jmp dec cli sbb mov sub or jmp mov push adc mov add je in cmp add inc cmp inc out inc imul jecxz or js mov popa pop rcrl aaa jmp mull push test lods push mov mov subl test pushf stos adc insb sbb pop stos push lcall out sbb leave cmc movsb pop fisubr and sbb dec mov fstps pop js add cmpsb xorl sub iret and inc jmp xor push aad loopne daa repnz pop or and cltd add das push pop xlat fistl inc add and push xchg pop or dec cmp test inc xchg aam fist int3 popa hlt js mov mov sbb xchg fmuls cmp sub je dec (bad) rcll mov xchg sbb mov cmp lds xchg jbe jnp popf leave aas pop inc inc ret xchg and fild inc rcr outsl repnz sbb js ds mov cmp xor push idivb addb ds or xchg mov inc fnstenv shl lea mov lea in mov outsb mov mov mov push iret and sbb fistpll add (bad) icebp push pusha je bound cmpsl (bad) scas in mov fucomp pusha mov and test inc rorb jecxz add imul out mov pop lods and fistl test mov dec test outsl dec movsb les push int mov (bad) call add ffree inc add sub or add ret mov mov mov int3 mov and fisub mov jge das js (bad) in imul mov lock repnz ja dec pop out cltd js in (bad) push xchg push sub in scas aaa lds mov pop rorl sbb cld test imul adc sbb pop dec pop jp cmp and pushf in movsb jb pop negb ret shlb xchg shrb sbb add mov or cli add adc es push lret pop sub or cmp daa jp jne push aaa aam push fisttp in xchg push mov xor call sbb repnz jnp mov (bad) bound jge mov int3 sub popa push sarl lock and sbb call ret dec push data16 std jo scas repnz pusha dec pop dec mov dec mov jbe enter mov movsl cli lods push mov ss ljmp push mov xor mov nop jecxz fidivr (bad) iret (bad) ss movsl cwtl lods cmp into or push pusha mov std pop dec cmp in cltd xor test jge jnp or pop (bad) cmp lods lret xlat arpl in push sub sti movsb pop lahf adc sahf fmul aaa pop push mov pushf leave push adc sbb int inc out add sbb lea jmp out or in xchg popa sub and lret fsubr xor daa push mov add jl dec push test add out jmp mov daa adc xchg jmp cld loopne jg add xor sub (bad) lock sbb imul scas mov ret arpl out ret sbb pop and adc adc lea movsb (bad) push cmp gs jb out rorl sub xchg cmp in pop pusha jns sti ficom js sbb sub adc jp xlat test scas dec adcb sub pushf ret push dec add mov cltd jo faddp xlat fisubl xchg and add or aad sub push cmp fnstenv fsubr imul sarl (bad) or inc mov ja loopne ljmp data16 add adc popf push dec test leave aad je jns push push xor cld mov xchg xchg inc add pop (bad) lock push and and icebp mov icebp sbb push mov inc icebp cli cmp mov rcl mov outsl cmp bound xor loop sub jecxz mov cld ja jmp jecxz jne xor (bad) gs mov inc out imul rcrb es fmull sbb mov dec addb test mov mov mov mov scas add and int3 sub push in inc ja outsb add jae cmp mov test sub rorl push popf pop cltd test movsl xchg mov pop sarl pop xor daa adc push bnd push cmp mov push lds adc xor pop sbb and or sub repnz test mov push mov lods clc rcr sub push push pop test cmpsl imul jb mov lods and ja ret jg xchg pop roll xchg (bad) mov aaa cmp mov pushf jmp stos and addr16 loop fxam inc or loopne out mov rcl std xor jbe push cltd push (bad) lock in jmp ds loopne lret push add xchg mov fwait std shrb push lods sbb cmp push inc pop orl mov dec add mov aad and (bad) mov push sahf xchg jae push popf nop xor (bad) repnz xchg jnp add sub into divl es scas test mov jle out mov rorl cmpsl ja add clc test test insb mov xor out call movsb je xor ljmp mov sub roll mov add mov cmpsl xorl (bad) int outsl popf xchg mov test push xchg inc jmp sub cmpb mov pop nop sbb jle fcoml dec mov into adc adc arpl andl pop or xor push inc dec faddl or aas fistl push clc imul pop add sahf test mov mov (bad) ret dec sub lcall mov mov adc cld mov stos sbb mov sbb enter inc sbb mov mov shrl test ss mov dec jb adc inc mov popa cmc inc cmp gs fs xchg cli stc enter inc adc aad dec mov arpl jbe aas cmp mov or dec inc and adc fs mov adc ljmp sbb mov stc xor std dec xor inc dec rcll sti fstl pop fadd idivl xchg loopne nop (bad) outsb sub into xchg jecxz test mov xchg push inc lcall es cli jne fiaddl popl dec popa pop rcrb adc in cmp lds dec jae dec sub mov lahf fsubs insb into pop jmp jb lahf jne out push adc repnz jl cmp iret push test sub test xchg std push mov in pop out popf pusha adc ljmp or cmovp loopne icebp js js cmpsl sahf sbb pop fsubr dec sub sub int3 cmp lcall adc fs fdivr xor bound xlat or dec mov sbb mov neg xchg xor incl adc shrb lret pushf addr16 and enter mov adcl push movsb push cmp or inc pop pop sub pop or mov xchg inc push jg mov or dec or roll xchg mov cmp loope aam cmc sbb lods shlb in lahf (bad) mov js mov mov popf xchg stos jmp push jmp or pop mov mov add add sub sbb bound push dec addr16 xor jmp or gs mov and leave jmp push paddq sbb fadds push incl sbb pop fisttpl sti addr16 xor inc fcmove mov cltd adc cmp add sahf (bad) imul lret scas sbb mov xor xchg (bad) shll testl lds jmp shlb inc (bad) jns jne mov outsb adc insl cs fwait movb rorb outsl (bad) fidivrl inc das sbb stc cmp or test cs sbb out dec aaa sbb sbb adc lds fisttp sbb mov cmp push and test es lret jle fdivl xor cmp jne daa in sbb xor int iret ja add jo pushf jecxz test jae jp pop fstl and ja mov divl inc out jg xchg aad mov adc inc jle js xor movsb push mov cmp adc addl xor pop out xchg cs cltd pusha jp mov jns lods mov inc add dec sti sub and xchg negb add xorl sbb mov xchg fisubr inc mov pop stc mov xchg pop imul xchg les imul dec or cmp int3 adc jge (bad) mov or scas adc repnz cmpsl psrld or (bad) bound push push jne pop lcall stc imul scas push test (bad) cmp loopne sbb rcll lock mov mov mov dec add pushf sti cmp add and or (bad) lret mov stos popf fldz sub cmp ljmp test mov cli sub mov frstor lret fsub shll int incb xchg enter in mov dec xor cwtl or mov xor dec loopne (bad) pushf push jne mov (bad) int3 jae popf xchg xlat aaa js loopne xor sbb xchg loopne inc jo or xchg xchg add ret and jecxz mov leave mov cltd xor xor or out in mov gs lock in inc inc mov les adc xchg pop enter shlb mov mov test insb (bad) cmp test mov xor out mov push enter sub add mov adc jae mov inc cmp mov test fwait mov cmpsl jge icebp pop mov xor mov jne pop mov int3 das fsubrs iret stos call mov ret leave mov pop jg xor xchg popa ja outsb test push mov pop inc sbb sub inc inc mov push loope test sub in xor aas repz inc popa rcl shlb xlat sub sub sarb lods adc xchg lea popf testl sub cld sbb (bad) lret sbb sub test jg test jmp in or push adc pop pop dec insb pop clc je sub fdivr lahf add add je shrb sysenter or xrelease test out les jne mov inc jns ss adc les insl or xor in add mov mov loope jnp sub lock cwtl loopne cltd jo cli in (bad) stc sbb mov dec xchg mov push and xor aas pop outsl jecxz nop jns test pop dec fs popa (bad) mov jp sub std push popa loop in add add xor sbb pusha roll test (bad) mov dec xchg inc xor test push cli movsl xor jge cwtl and fadds mov rolb lcall mov dec insl inc mov pusha cmp stc sub rclb scas lock scas mov mov sbb fnstenv jg adc nop sbb xchg scas iret xor xchg jb nop test faddl bound add jg dec inc pop stos fwait sub cmp in test pop or cli mov jnp movsl xchg jne cmpsl push push inc (bad) mov jecxz scas pop (bad) cmc lods mov lcall jmp xor clc negl cmp ds cwtl es adc and push adc adc nop jmp imul and data16 sbb pop mov insl cs and pop mulb mov xchg mov add jg dec jnp popa inc dec pop jnp dec leave lea (bad) (bad) fistpl fbld (bad) hlt rorl and addr16 push pop jecxz sub lock call dec push mov pop add out ret aad bound dec jno dec or and and stos xchg dec (bad) imulb mov pop jae pop mov lcall jns data16 or push fistp sub negl pop mov jmp lret pop jp shll pop ljmp pop xchg (bad) in xchg push push push pop fisubrl rorb movsl mov loopne xchg loop ds movsb pop xor rorb xchg cmc or ret test cld (bad) mov lods jge lret call dec push fwait and pop fxch leave out push sub mov xor adc lret and in xrelease jbe fidivl jnp adc or pop push es aam adc sub pusha add and inc add or js xchg sub or pop jecxz aam into pop mov pop mov adc cmpsb (bad) call dec stc insb pop or cmp ds add dec add cmp dec ljmp outsl push fdivs icebp packsswb or enter pop add or mov push add loop (bad) mov mull jo pop outsb mov inc (bad) movsl lods ret pusha inc mov gs jns enter inc mov loopne xchg sub sub aas out fwait adc and pop imul push pop pop hlt fwait jae mov test out sub push js roll imul shr bound jmp enter out push mov pop movsb das mov loop andnps adc mov xor imul sub out test sub inc in (bad) or sbb cltd jno sbb inc test push push ror cmpl pushl shrb cmp inc (bad) jnp insl xchg pop xchg mov hlt outsl pop iret scas xchg and fwait mov xchg fnop add (bad) mov ljmp jge mov adc dec jnp mov xlat xchg xchg push cmc mov cmpsb test inc jl loope repnz or mov in sub das mov enter fcompl daa loope xchg fs jne sbbb lock fucomi shlb jb cli jmp leave roll mov popf adc leave inc jp jg and jp daa test cmp pushf xchg or test in lret outsb sbb mov cmp lahf mul xchg clc ja pop in stc jle adc pop lret scas fs popa or add aam jns jp jb cmp aad (bad) xor lret mov push in mov sub call mov pop pop iret push dec daa or subb pop popf xor loope cmc loopne mov fcoml ds or or mov jo sbb cmp mov dec mov movsl mov scas iret aam xchg xchg xchg loope repz adc xchg leave jge iret gs push stos add jne cld add rorb in lock jmp stos mov adc js jl jo lahf cli test mov out adc cmp dec pop pop decb jnp pop int3 mov (bad) cmp mov push mov and push js imul sbb pop int3 test pushf vorps sbb mov pusha jge addr16 fisttpll mov cmp mov mov ss pop add pusha lret inc mov (bad) orl adc dec push loope aas pop sbb pushl add movsl lea push in out sarb scas sbb push dec movb dec jge add jns lds cmp cmc push ret xchg lock inc insb leave imul sub cmp pop inc lcall fs in hlt shr stc lret clc sub fiaddl int pop lods popf lds test (bad) jns andl imul adc mov fwait out xchg and lock jo cltd rcrb outsl adc sbb cmp ljmp jns adc (bad) jbe inc jno jl iret test out gs pop mov add xchg push ljmp cmp ret in cmpsb mov xor out arpl push test dec jbe xchg mov inc cltd lods dec and das mov inc xor cmpsb push leave sub inc stos leave pop inc mov (bad) cmc fistpll mov add arpl fwait dec out sbb xchg lods pop or pop sahf fwait jno aam sub cmc mov mov out or inc in (bad) mov loope popf pop mov ja cmp lods sahf test imull pusha mov cli enter mov mov cmp (bad) js cmpsl sarb jl jbe cmpsw jl mov dec (bad) push cmp (bad) push sub add sub pushf jb mov push xchg (bad) mov stos lea loopne cmc mov cltd cmp jae addl pop mov es hlt ds lods jne cmc lea cmp (bad) ficompl push out mov and jbe fs push pop movsl ss sahf idivl dec fcmovnu xchg inc push pop pop fcmovne addl data16 xlat add and and loope push push jp es lahf repnz leave mov xlat or jle inc test jbe cld addr16 pop test push (bad) movb cmpsl sub and les test sbb cmp or cwtl shr stos and pop jo cltd inc xor or punpckhbw jne mov mov xor and (bad) or mul data16 mov insl xchg lret jle cwtl pop jl es loope,pt kmovw dec cmp jge cmp bound lds fistl and push es lock adc or fisttp sbb cmp and push mov jae sbb add aas outsl jg ss insb movsb or fsubrp mov add icebp arpl push movsb repnz adc and adc add xchg add jmp mov call shrb addr16 mov addr16 mov mov (bad) or mov outsl mov popa stos adc (bad) fildl std inc and adc mov jmp sub mov inc mov jg popf int xchg shrb lahf lods repz mov ffreep or cmp add fimul (bad) out idivl or ret jmp sbb fmull jno in pop xor pop aaa push sub inc out into fstps out push cltd in in push (bad) stos aas pusha pop push sub add sbb loop test fidivr jp outsl aas stos pop cmp mov pop aad lds movups fscale adc stc jmp cli or lock xchg xchg jnp add popa mov push xchg mov xchg cmpsb leave pop lods in sub rorl dec jge mov adc sbb xchg mov insl lods cld lret cmp adc in add mov jno leave cmp cmp hlt jmp sub ljmp bound or mov (bad) cmpsl lods and sahf sub inc sbb (bad) and call push xchg cltd sub pop jl pop mov mov jle jo popa push sbb xor pop mov sbb jnp sbb xchg xor xchg dec xchg lds adc lods mov dec dec add mov push out sar fisubl push cmp ficom mov in fistpll mul lret pop in fisttp out idivb jl xchg add mov mov lcall mov nop jmp das mov mov repnz insl sbbb test xchg lods (bad) pushf jno dec jge aam fisubl aas aam cmpsb and rcrb inc stos xorl or pop jge adc inc int3 outsl insl shrl inc mov xchg sub stos push push mov and cli xchg mov xlat ljmp clc cmp divl and cmp movb movsb (bad) jl ret lret sub ret notl std jne fdiv addr16 cmp stos add subb jle ja (bad) stos inc cwtl adc mov adc mov pushf adc rcll lods roll dec sbb jb ss iret jo arpl inc jne aas or lahf test xor test rcrb je cmc xor testb inc inc jecxz xor xor push aaa loope test enter push add fmuls xor out mulb dec jle daa cmpsl inc inc lock mov jecxz (bad) adc arpl repnz lods lods and (bad) clc xchg sub lods mov pop aaa jns push adc xchg pop pusha sarb xor sbb lcall push fnsave mov mov mov xor or jle and je ss cs sarl incl pop testl or or pop loope out loop stos lods out pop cltd outsl je fisubl mov mov xchg fprem in rorl ja adc clc mov and push js fcmovne push xorl stos into mov outsb or out pusha cli mov scas roll jmp jbe mov xlat scas popa xlat inc test mov mov (bad) mov ret push push add sub (bad) cltd imul inc xor test imul daa mov push cmp (bad) imul adc jl dec lahf hlt stc fild out adc mov lock (bad) ss clc adc fwait pop cmp (bad) stos add lahf add fmull adc ret test pop cltd or scas mov (bad) out sub pop mov mov cltd mov sbb rolb push inc jbe jg sub pop add fcmovnbe xchg pop insb and mov lea movsl ja adc add aam jo cwtl jecxz cld jecxz cmp rcr ljmp xchg jmp inc mov (bad) pusha movsb sar push (bad) ja jp pop push fist orb push int (bad) out (bad) stc (bad) js flds mov mov ljmp out sbb lods mov loope adc mov movl (bad) dec and stc jmp pop in into gs add mov push mov mov lahf mov leave dec sub mov sub das jae incb clc mov adc dec jne fmuls cs int test push pusha hlt lods jbe or mov subl popf or dec pop (bad) adc push insb (bad) fdivrl sub cmpsl ja pop xchg scas lds popa sbb cmp xchg aaa loopne jecxz stc pop mov hlt mov les std mov aas decl sahf xor push xchg bound insl xchg dec faddp (bad) xchg inc mov cmp sbb pushf clc fisttpl sbb frstor mov cmc mov orl lds inc lea mov xchg inc (bad) xchg jl lret or sub inc jecxz fs lahf mov xor sub xor mov mov jmp push mov dec call bound sti shll mov movsb xchg aaa inc inc xor push and fisub inc adc int3 aas mov out fisttpll jb stos cmpsb lea outsl add or ret push outsl jmp rclb lahf mov push scas test leave push ja cmpl inc andl inc arpl es sbb out aas pop mov jp push mov pop dec mov ss sub into push xor das xchg movb lds inc outsb jmp cltd and sbb jo test pop leave rorb or xchg xor xorl jo cmp jmp cmpsb mov mov jge jle xor push jecxz jecxz mov jae lods add shll add jecxz cmpsl and ds and rcr insb inc fwait ljmp inc divl fst push shll push jns sbb ret out xchg outsb int adc fcomip push out (bad) lock dec fnstsw mov xor aaa (bad) insl mov xor outsb and imull and lahf add jnp cld inc fsubrs pop sbb xchg cld mov cld cmp xchg add into scas idivb mov int push test stos or mov (bad) lahf add test inc (bad) je pop (bad) ss fs (bad) jl in into popa adc mov add repz sbb scas xchg cmpsb fdivr pushf (bad) in outsl ret gs xchg push mov in pop dec xchg bound iret out jmp enter inc and add loope jmp out out adc ficompl pop pop sub insb shr inc neg pop adc jmp cmc mov icebp and mov fadds dec add inc mov mov jmp lret into lods (bad) jl ds nop cli or mov je and insl xor or bound rcrb or pop je and push in mov mov out daa mov lds or cmp jnp addr16 movsl hlt (bad) stos cmp sbb fcoms orb sti adc xor xchg aam mov loope sbb push mov and and jns ja lods ljmp push jge shrb es mov and aad xor add lret pop enter push ret lock adc add (bad) aaa stos mov cmp mov inc and mov fistl pop xor cmp es popf sbb xchg push push sahf sbbl cmp pushf push mov lret es push mov mov clc fsubrs push pop mov sub xor or mov or mov lods adc mov adc bound test mov test hlt outsb pushf loope mov outsl adcl mov inc and lods mov push test cmp push pop cmpsb and sti mov dec mov pop and mov and inc pop bound imul mov (bad) jbe xor js lods mov leave ret sub (bad) jge adc push mov sub sbb sub test push xchg scas call sub popf lret mov and or mov push mov subl cmp sub (bad) scas pusha in xchg jns dec test sub cltd pop adc ret fadd pop adc pop mov fnstsw fistl dec inc mov mov in sbb xor xchg mov fstl or in inc and dec daa sub mov jecxz or test push or jge jle test push in pop mov push push add into lods adc jle xchg mov cmpsl arpl cmp pop jmp jno sub pop mov lahf inc mov fistpll divb cs loope xchg es jb pop xchg xlat aad ret cmpsb xor jmp out pop jge fmul imul (bad) inc test jo adc mov pusha cwtl das push jnp xlat mov out mov jge and rorb and add mov sarl pop cmp sub fcomip jbe clc data16 into lcall dec sub (bad) sub cmp (bad) jns (bad) maskmovq imull add xor negl not or (bad) pop cmp dec mov sub cmp mov mov mov mov jno pop insb test mov adc dec mov pop mov data16 cmp lock dec mov cld ficomp loop dec and pop xor addb scas push iret int3 dec in mov and or add xchg add mov cmp push push ja mov je and pop jbe cmpsb jne incl or fs jg sbb inc xchg jbe ljmp les jmp mov pop jo cmp insl or lret xchg pushf lcall lock ficomp sbb xchg mov sbb dec mov pushf cmp xor xor pop jns dec inc or (bad) iret adc imul cmp push test rorl xor aam loop xchg or sub das dec xor xchg jl dec and push xor adc out sarb in push ret enter mov push or mov out jns (bad) or in cmp mov imul cmpsb mov add in (bad) lcall daa pop xlat mov daa xchg pop lds lret addr16 inc xor add into mov daa jecxz ljmp xor inc int mov adc sahf pop es mov pop aaa xchg cmp adc iret mov add por mov xor das pop in and insl cs aam mov xchg repz adc or out mov jne push sbb dec jmp xchg xlat xor jle sub hlt loope ja xchg (bad) dec pop push in dec scas sbb xor mov sub nop mov lods out loope loopne inc xchg jmp inc inc or lcall lahf pop sub sub iret sbb dec (bad) test mov outsb mov iret cmp imul inc mov pop inc dec adc pop pop sbb pop enter sbb out adc or jl and and dec lea mov or mov js fimul sar shrb je aad push pop pop jp out je or sti mov or dec (bad) jecxz and sbb jl lods (bad) ja or bound pop mov (bad) aam inc add jns mov lahf inc in in adc xchg je or jmp outsl (bad) cli dec mov xchg cmp and jb (bad) popa pusha lods nop add and inc or adc xchg pop les push shlb xchg sbb pop adc fidiv mov mov pop xchg inc inc aam popf adc jb and dec push ret xor inc xor jmp jmp cli push call adc repz jmp leave in stc fbld sbb dec fidivl pop xchg push cmp adc cli int test jmp jb sub fistl jns out test xor cmp lahf loop (bad) enter int cmp pop jo cs aas and int lods mov (bad) cwtl inc sub je outsl cmp fimul clc and pop pop adc int3 lods jns fnsave push push popa test in mov popf xlat push (bad) or inc (bad) push pop mov dec pushf sti enter call dec push out xor cltd movsb sti (bad) clc dec and xorb dec push inc dec lock xchg fwait jl or add out jb lret outsl inc xchg sub fisub xchg mov insb arpl dec clc pop es insl pop (bad) loope int jno xchg aam dec mov adc xchg xor adc mov sar pusha pop aas mov rcrb (bad) lea je inc pop gs or out mov xchg inc out cmp mov cmp push sbb jp and inc call in sarb out adc pop dec and mov inc push xor dec std pop dec inc arpl fmuls (bad) mul pop inc sbb mov aaa jge aas cmp aaa movsb insl orl sub xchg cmp cmpsl leave add pop les pop mov adc or aas xchg hlt adc lods mov iret (bad) ljmp adc mov cmp pop push loop,pn push cmp mov mov jae outsl mov xchg and cwtl aas (bad) xchg pop scas jne (bad) (bad) xor cs cmp mov sub and shrl (bad) insl stos dec js xlat (bad) jle mov cmp and es cmp sbb iret xchg clc jmp iret lcall daa aas rcll hlt (bad) xor dec (bad) aad stc loopne sbb movsb sbb out mov test mov lds xchg bound adc stc testl out pop mov cmp cmp pusha loop pop fldt shr xor add mov mov add in xchg xor ret notb testb lea dec sub push cmpsl jns daa enter out (bad) std dec xor das movsb xchg (bad) and add or ret pop ret dec fwait rclb in (bad) into movsb cmpsb fmul stc cmpsb push addr16 idivb xchg pushf mov inc jbe sub mov lea push sbb add inc les xchg into and pop xor fs mov push cmp fwait lahf aam pusha int3 jbe mov mov xchg data16 push in xor jl clc iret stos je xchg aaa in mov lods xorps xor adc inc cmpsl mov sahf mov mull fdivrl enter dec bound into sbb pushf jg mov push xchg jne lods add inc loopne sub mov es fistp or mov (bad) xor push hlt out cmpsl jl aad movsb addr16 stc cmpsb and pop popa (bad) fwait cmp les sahf sub mov jle xor movsb lret sbb ret (bad) (bad) dec adc stc sbb xchg add jns xchg pop cmc mov in xchg jmp inc adcl sub push (bad) rcr push mov inc (bad) mov mov pop dec and lahf pop jo jmp ds lods and aad xor mov pop ret lods scas mov inc xchg psubd jg mov fs sbb scas mov add out out hlt cwtl pop pop mov (bad) pop pop negb sub mov sti and xor mov xchg movsb pop or cmp or pop test adc rcrb das in gs popf push mov push scas mov int outsl dec jo push sub push xor ret shrb lods movsl pop xor lret push sub jle adc mov mov sbb sub (bad) cmpsb sub push mov sbb add popf out insl mov movsl int3 aaa jl pop pop add sti xchg add and movsb pop push mov shr test lret cli jecxz (bad) jne sub inc repz xchg inc outsb cli xchg mov pop stos xlat ljmp ror mov leave movl fnop repz add jge inc test jo imulb iret aad (bad) xor xchg sub fs mov and repz jmp jle ja (bad) fist test mov lcall popa movsb iret mov pop cmc push or pop mov add in lock dec xchg push mov test add loop daa sbb mov add sub fisubrl jns sub (bad) sti inc sub les xor push out cltd sar jg cmpsl aas inc jne roll arpl mov add cmp xor int dec jno sbb push test in subl std sbb jbe in mov lahf inc dec (bad) add repz push add cmp sub sarl mov in adc js push scas push je lds imul stos repz das (bad) mov mov aam test fdivrl add sbb lds pop invd push hlt adc call cmp lock fildl or mov jb aam stos sub xchg scas or sub enter mov sub scas jne lods ljmp scas imul aad xor adc (bad) pop fmull mov jne pop test pushf fcmovnu xor and sbb ja push push pop sub andl add stos cmp scas lcall ret movsl leave and outsl jbe cmpsb xlat not cmpl mov loop (bad) (bad) mov push mov sbb jecxz mov push cmc add push divb jmp arpl aam out ds push lret and das xchg jp add les jge adcl insb loope or adc cmp (bad) and push hlt jge push pushf popa repz in pusha pop push ret sbb ss mov std push push int les jbe test xchg fs xchg mov in jbe aad xchg mov mov mov add fmuls movsb sbb es (bad) cld inc (bad) xor (bad) dec sub mov inc imul repz idivb test push push sub mov movsl outsl int3 ret mov jne rorl xchg and stos jmp lret cld fsubr push loop fs aas ja aaa push pop jnp (bad) call ja mov stc push outsb (bad) mov jo stos loopne,pt xchg push jnp les jne cmp int3 cltd or in cmp (bad) xor in inc inc adc push scas rcl fcmove ret sbb mov sti sbb es push sbb xchg mov sub push inc les sar rorl adcl adc mov jae and popa mov aas pop xlat jl jb xor sti dec xorl int sbb loope xor xor fsubl sub hlt pop jmp mov jmp jno test push jne repz outsl into jns add sub add and lcall sub push jbe roll and fs mov lret sub cmpsl add inc add idiv (bad) push and and pop adc cmpl (bad) jp push pop pop sub jg jno xor xor or dec adcl cmc xchg lock loope push and mov lcall pushf fs sbb pop push call adcb js cmp jbe (bad) (bad) jo arpl jp daa xchg adc sub cmp xchg mov add mov sub rcrb sub mov and or jnp pop adc mov mov test in outsb jge in fadds lret xor sbb fmuls outsb daa imul push sbb cltd lea shll imul fwait jmp fstpl xlat dec loopne jmp push scas into sbb cmp sahf (bad) cmovs faddl push sti dec jns leave xchg and (bad) arpl outsl inc es sbb adc inc fisubrl loopne mov imul and in xor inc outsl js mov pop outsb fwait dec (bad) movsb push pop jns out (bad) cmp push pop loope push jle mov repnz mov ret fiadd jle in adc into sbb ret fwait and mov mov jecxz push add fisubr sbb sub sbb clc cmovle ja push sub and jb sbb mov xchg mov push fwait shrb dec xlat mov addr16 push (bad) nop cli popa add fsts adc mov mov push loopne insb out adc (bad) or stos add mov test mov repz fildl sub lock in xor loop sar sub cmp (bad) cmp outsb adc mov cli inc fimull inc adc js,pt dec mov mov movsl sub mov popf arpl cmp aad cwtl subl insb mov ret roll push sahf dec sub (bad) cwtl mov test cwtl loop xchg hlt jns lock xchg or rcrb hlt pop cmp cltd bound xchg mov add or jne pusha jae jb add or inc mov push mov (bad) or push mov test jmp je nop dec or pop mov push push inc add adc loope mov jae mov xchg arpl xor mov pop insl adc inc and outsl mov stos xchg mov xorl or pop sub sub mov pop pop sbb cld mov lahf cltd out sub add cltd mov jge cwtl xor es fidivrl and ja addr16 mov dec (bad) dec leave or mov add out add leave pop mov cwtl repz fnstcw test test stc push adc test sub pusha shll xor je test les fidiv sbb push std xor test inc movsl (bad) push xor jns ret daa out pop dec and mov inc mov jge adc data16 (bad) dec jns ss ret push (bad) dec jo into pusha jno insb pop hlt inc mov in sti pop into pop fldt mov dec arpl mov cmp scas das pop movsl jnp adc shll or hlt outsl lcall xchg xchg fsub nop add pop je mov fcomi sbb push pusha repnz stos inc xor jno jmp cmp leave xor cld js jl lods push mov dec push dec (bad) mov daa jge mov dec test dec ret clc and test leave adc pop cs jo xchg popa addr16 inc dec cmp test mov adc imul jbe and imul ss (bad) out lret lods div or loopne add xchg jle fcompl icebp inc addr16 xorl fisubr insb push int3 xchg mov loopne push xchg imul xor push push jo mov mov adc xchg test call fsts cltd or xor push stc xchg mov mov mov xor mov fs andb jmp jp push (bad) pop fisttpl mov into mov mov andl ret or ljmp cmp dec icebp sub push pusha insl mov ds jb repnz icebp sbb cwtl rorl or imul je mov and lcall negl vmlaunch movsb int3 scas xor cmp sbb lods loop pop clc jge gs div adc fldcw leave push mov pop mov mov js fwait mov ljmp fcoml mull ds imul xchg sbb pop sub mov cmp jns jmp hlt mov push (bad) dec or and daa lcall and lock mov daa pusha xor flds add sub in pop movmskps fcoml int stc popf cmp int jmp xor (bad) adc mov jg in pop into cmp adc mov jg stc sub mov push bound lret inc pusha jno or movsl jecxz push jbe pop stc jmp xchg jnp in repz add mov xchg rclb add (bad) xor pop xchg mov xchg and jge lods in xor lods dec sub pop js and sbb mov or ljmp or lret inc cltd lret lock mov xchg insb loopne (bad) sahf push mov inc jb imul xchg jle jo (bad) push (bad) (bad) fwait xlat pop jecxz insb xor lret ds (bad) out cmp ret xor mov dec or dec cwtl clc mov fldenv imul repnz (bad) out push mov jmp xchg rol or inc fs das mov jge jae (bad) dec mov cltd ljmp fbld lock int adc rcll or out rolb lds sbb pop iret in xlat and imul es lahf pop inc fistpl addr16 insb jno iret (bad) sbb pop in mov scas and out mov mov sub cmc mov into sbb mov mov pop add adc imul mov popf cmp repnz loop test mov pushf mov pop das jo lret ljmp xchg repz mov sub xlat mov and sbb cwtl xor hlt ja mov sbbl ucomiss call add popl cld out repnz inc js add cmp and cmp sbb pop inc js insl test and pop scas cmpsl arpl std (bad) mov lret es andl cld jns mov mov nop cmp pop arpl mov ret call cmp or cmp mov cmpsb xor in sub sbb push lcall mov fisubr xlat jne pop mov xor dec popa cltd jae ds mov outsb mov inc sub sbb pop insl sahf int out mov sub (bad) xor shll push test shl rcrb xchg out pop hlt popa xor inc jg popa mov lcall (bad) push es bound pusha cli xchg hlt ficoml lret or cmpsl pop (bad) lea popf jg rorb in push sbb xor pop int3 cmp push es and add loope jle adc dec (bad) (bad) xor bnd sarl idivl jns mov pop leave lahf push adc (bad) imul out in fcmovu mov xor sub lret adc mov inc insb cs std icebp lods mov ljmp insb sub into ret divl mov movsl je push (bad) mov rorl or lods xchg sub orl inc (bad) fimul mov inc sbb lds enter outsl in out sbb cmp jnp faddp ss fwait inc idivb xchg xchg loopne fmuls aam sbb stos add inc ja fiadd lods lcall (bad) out jno xchg mov repz push pop dec sbb dec sahf sub lret outsb sub das xchg dec test pop sub (bad) pop mov inc in mov ds cmp dec jmp sbb jle xchg push push mov fisubr xor or xor add ss fldenv scas repnz xor out ret ficoml orl negl xchg add mov gs or (bad) fmulp add adc sub aam aas in sbb mov gs sbb cmp push scas xchg or inc jb (bad) jp dec sbb xor add mov pusha movb mov mov jecxz out inc ffree enter and sti test jmp orb aad fnstenv mov lret xchg add adc (bad) dec insb std outsl inc xchg dec sub push inc xlat (bad) ss push in fsubrs jle stc mov notb sbb sar pop dec mov and push inc ret jno sbb scas (bad) mov aam dec sub mov loopne xchg mov sub sbb cmc dec int3 fdivrs data16 pop fwait (bad) mov cmp ljmp xchg push pop xchg add adc jbe xor xor cwtl movl fisubrl sub out sbb jge (bad) outsb lods add dec xorl jg popf xchg lock adc xor jae addr16 mov pop mov sub jns fidivrl and pop fwait inc xchg mov out xchg call sti xchg in inc dec adc rolb lock push shr stos mov mov pushf std xor out cmpsb movsb xchg cmp dec lsl mov dec notl dec out jno jl xchg outsb add in or xor in aas repz mov and adc sbb inc loop leave pop ret mov fisttp ret inc loopne mov and adc add cwtl je outsl mov outsl lahf mov pop ljmp or dec out push mov setbe push mov push call push mov jb imul xchg add adc lds loopew adc (bad) pop mov mov (bad) mov (bad) mov cmp out mov fs shl in xor repnz push jno pop xchg in adc add cli push rorb cmp loop enter cwtl call lock roll pop daa fsubr mov cltd pop (bad) inc xchg imul xor dec push xchg mov mov mov arpl jns sarl adc sbb xchg sahf xchg in andl inc cmovo adc mov stos dec ret push daa mov xor pushf push mov lcall lcall push stc or loope adc rcr pop ret (bad) mov dec shrl mov std jo rorb hlt bound xchg cwtl mov xlat sub pop daa hlt add xchg mov int3 fwait cwtl lea lcall out cmp lock lahf movq sbb xor bt pop inc sbb adc cld fist rcll pusha sub or push dec into and outsb sbb xchg cmp sub lods lret and lock pop into ds xchg test arpl jo pop rorb adc sub xchg out pop sub (bad) jne sbb pop add sbb aas push mov popa int3 push add and add sarb lahf adc xor inc and leave pop mov push je (bad) cmc rcrb (bad) int3 and ja mov jp inc insl dec aam lcall subl xor pop (bad) and pushf stos scas cmp jno mov lcall mov fsub xor stos lret fiadd (bad) push jbe xchg or lret divb aas mov dec mov iret inc ds push pop and or (bad) xchg mov scas pushw in sub dec (bad) dec iret fsubl mov lcall test insl sub add fsub and popa out sbbl jne pop add daa xchg mov add cmpsl push pusha xor out (bad) int addb js (bad) in stos sub pop jno nop mov mov es sbb scas push push cmc test and es outsb jns rorb fstpl iret cmc cld adc adc out cmpsl jmp inc loopne rcrb jb mov cmp je rcll std out cltd jb sbb lret jne mov and jno stc jnp push push jmp sbb jne xlat fdivrs movsl aaa (bad) mov mov mov fisubrl cmc inc mov lods jg mov add in mov jbe je lcall xor jmp inc sbb out aad xchg add rclb push cmp mov (bad) xor nop int test jecxz and stos adc dec and fsubl mov clc cli ret jb ret gs (bad) stc sbb test add pop inc les (bad) hlt mov sbb dec decl outsl sbb push sub fstpl pop and stos lds dec sub mov jg mov xor repnz dec andb jle ret push sub lret aam ljmp out pop ds popa lret popa mov inc out sbb int3 lret (bad) out das lahf and mov jo repnz addr16 fdivrl leave dec push jmp ret in cmc fcoms or push and insb push jno inc loopne mov jns inc in in ljmp arpl arpl or push and add fs xchg push pop lds fnsave fwait xchg lcall call pop ljmp pop mov pop xor mov sbb inc adc mov (bad) sbb in fwait dec pop cmp imul clc inc push or (bad) lret mov into sbb mov fldenv aam sub pop sub and xlat push jnp in inc xlat lds jbe inc insl les inc lods pusha sub outsl xchg xchg idivb (bad) and push loop imul xchg add lret cmp and push xchg sub push mov (bad) fwait lcall clc movsb repz sbb outsb icebp std or insb mov lahf leave test or ljmp hlt push cmpb pop xor push hlt call cli out pop fisubl subl pop or mov test stos movb (bad) sub cli jo imul or data16 mov out jg imul or rolb int or adc repnz push gs andl ds movsl xchg or outsb fstpt and nop add rolb jp fistp push add rorb xlat (bad) cmpsl cld cwtl inc jmp rorb ja add pop aad adc mov pop cmpsl bound ljmp inc in (bad) sub push ljmp pop (bad) or lock inc rolb in (bad) cs scas cmp xchg (bad) cli syscall mov ljmp fmull inc nop add outsb mov xchg push shlb lretw mov out xchg adc and jo jp push test mov fidivrl insb repz fwait aas sub jne leave and push lds gs ja pop mov jmp adc in xor icebp jns lods cmc push sbb jp xor rcl sbb repz jle cld fidiv pop rcrl addr16 add push mov sub stc scas xor ret add add push push int3 mov mov jnp stos andb push or cmp stos mov int cmp pop push push xchg out ret mov sub push repz andl dec ret mov leave jge jmp mov ljmpw mov dec and sub rolb xchg in int scas sbb ss ret and notb mov nop pop pusha inc push and pop daa cld outsl jno mov lret mov pop adc cld cmpsb stos push inc icebp in xor push (bad) dec lea jle adc sub cmpsl pushf jg (bad) mov nop mov jns sbb je adc (bad) or add cmp cmp cmp insl xor out dec (bad) dec jb mov mov vsqrtps push aad popf mov inc pop leave (bad) out jmp xor xor inc lcall adc cmp sahf aaa fucom xor pop mov xlat shrb xor lods repz imul xor loopne in popf dec in sbb cmp sbb add sti gs mov lds js cwtl (bad) fisub xchg mov push add xchg lret out inc dec cmp push jge jne pop fsin xor lods xorb xor lret fidivrl mov scas fsts pop repnz in dec sbb ffreep jge daa mov push insl add inc lods je movsl nop pop (bad) push cmp mov add mov add (bad) mov or mov das or jno ret and jne imul cmpsb add jl outsb mov in add outsb out push xchg mov add sub test popa hlt adc jg pop movsb mov adc cld fmull icebp add pop sahf inc mov pop xor xchg ficoml das mov sub rcl aaa push add test or fidivl mov rcll insb fbld addl xor adc rorl mov out pop les xchg lods sahf decb mov add mov call push nop mov (bad) dec sti push xchg push fidiv xor lcall dec and sbb add cmc sahf cmp dec dec adc adcb sbb cmp cmp dec pop or sbb fisub outsl adc xor fcmovnu ljmp mov scas sti dec ret adc stos push scas adc stc test dec jmp cltd add cmpsl pop cltd (bad) sub pushf flds ds add scas int3 ficom sbb bound mov xor mov pop (bad) imul cmc pop outsb pop addl (bad) mov mov ljmp adc xchg mov daa leave mov dec adc fmulp pop sti inc insl cld add dec pop (bad) push les ror mov push xor sub or cmp mov xchg mov mov cmp rol out cmp movsl inc (bad) jbe testb sbb repz pop inc mov icebp push scas int3 and xchg dec dec cmpsb sbb pop scas xorl (bad) push or cmp pop (bad) mov xor ret xor aam or or jecxz gs cmp jno cmc aad loope jns scas insl adc ret and in cmp add mov adc stos adc cmp lock inc (bad) lahf dec mov adc daa jns adc (bad) in sub fwait je rcl (bad) mov cmp or xchg out out mov int3 aam add push xchg xchg sub int3 jge sub push addr16 xor and aaa jnp pop lods ret jmp jbe flds and leave lret fmul insb iret push aas ja out dec mov scas fwait sbb imul mov in out xchg aaa popf nop jge call add xchg sub mov xor mov inc pop jmp outsb pop lods add mov in stc mov imul jae mov les pop xchg or into sti mov rolb sub inc fisubr movsb daa and subl and xor jae jne in xor std jno jmp lcall jecxz ss mov inc sti jb adc lods mov mov and cmp adc mov jno cmc pop sarb push sub lock fdivrl sub xchg out scas push adc outsb clc mov dec lahf sub pop inc arpl popa js mov nop rcrl and ds pop or out mov dec das cmpsb pop test inc push xor and imul ja cmp sbb (bad) sbb jo push sub sub loope mov mov vpmacssdqh enter (bad) sbb into pusha xlat push fstps push dec pop pop outsb rcll mov mov push dec sub mov cs clc lods (bad) enter jno mov fstps pop sti dec mov les fwait jae and cmp sbb lock insb cltd imul xor jae sbb repnz jg fdivr (bad) mov xor cmpsb stc push pop mov dec std je pop decl sti (bad) sub fucomip inc insl imul lret stos xor inc aas and jb (bad) jns and pusha pop test (bad) outsl jmp rcrl aad fldl add mov push push (bad) (bad) mov or dec jecxz mov xchg mov stos mov stc lea jno sub sti sbb lea jmp dec fwait dec cltd lahf push fildll add pop js dec (bad) push aaa aaa clc (bad) cmp xlat icebp (bad) mov sub jmp lods ret scas cwtl das push or mov jae push insb dec dec data16 fidivrl pusha push repnz test into inc fwait (bad) clc inc mov xchg in bound xchg (bad) fwait enter in push popa subl add inc mov frstor push sarl push fs mov stc test arpl jge xchg or add test fdivr (bad) fldt mov inc fildll cltd in xor dec add jns dec push xor out in jns test mov jl mov pop lods pop add incb push xchg andb sahf into lret (bad) jb or jns pop outsb mov dec push xchg add xor nop cmc jbe repz mov pushf test mov int inc scas jno cmp inc sarb xchg mov stos mov aad das fwait xor leave aam das lahf add mov lret mov mov bound or fistpll mov icebp sbb das sbb jle mov mov in xor jnp scas push scas (bad) pop sbb cwtl ljmp fldt jge cmp gs cwtl (bad) xchg insb je (bad) insl rorl or je in jo xchg ror adc in dec scas gs leave cld rcrb push dec shrl mov jp ds jo pop sub enter inc mov popa xchg pushl mov push movsb lods jecxz or cmc movsb xchg sub push mov test (bad) movsl xlat addl jp ret add mov iret movb sub out popf and rorb mov push fistpll cmc xor (bad) adc sbb lds adc mov fidivr mov orb daa cmp adc add add xchg scas mov int3 (bad) in inc xchg sub pop out int3 call or clc mov rclb enter jge fwait jne incb pop adc xchg dec ds add jmp push outsl add pop lock inc jne cmc xchg (bad) nop iret icebp rcr mov adc scas data16 movsl nop and and or pop push movl mov mov pop pop or (bad) popa lcall inc dec dec jmp jle movsb xchg jecxz mov imul dec or out or ret loop push push (bad) aaa (bad) dec xchg lods push es sub (bad) pusha add and mov adc xor loop daa pusha or hlt popa adc sbbl mov mov xchg insl inc loope dec push dec adc out ret mov adc sub pop push pop add test sarb push xchg or xchg jmp mov xchg repz call lret repnz push xor mov inc stc dec outsb xor mov jge dec outsb jno lea ds xchg cmp or fidiv in iret sbb dec add (bad) xchg dec pop imul aaa daa loopne mov mov sub mov push (bad) or cltd xchg int3 mov pop ljmp mov aad inc lods repnz test shrl jmp jge add push les mov std sub sub enter mov mov shrl dec leave rep cmpsb push test xor mov loopne (bad) lret fisttp in jnp adc or fldt imul push sbbl pop xchg das sbb cld popa mov adc xlat loope push cmp xchg mov stos pop lods into nop (bad) dec leave cmpsb xor (bad) (bad) fdivr push xchg cmp aaa int orl xor out sub or mov sbb (bad) aad hlt cwtl jle imul mov cmp add sbb cmp out std call adc sarb and iret mov (bad) dec cmc mov dec stc or cmp mov repz (bad) fcmove (bad) xlat outsl xchg xchg addl and outsw mov repnz cwtl fnop inc add mov pop hlt movsl (bad) out sahf mov rorb mov sub clc cltd push jae mov xchg das or aaa jp xchg sti fs sub iret or roll rcr test shrd cmp out pop test jle ret rcrl sbb sub popf dec rclb push mov (bad) call (bad) fistpl inc xchg jmp in adc jmp inc jae int jno adc mov sub test daa mov aad icebp push nop fidivrl fs lock (bad) (bad) pop nop fs lods push xor dec sbb sbb push lods dec adcb add sbb nop in pusha mov rcr sbb shrl pusha sbb incb popa inc xchg aam hlt popf fist and push js (bad) mov and xorb sbb pop xor xor in cmpsb push xchg adc mov mov mov pop mov xor addr16 jl pushf inc ja shrb mov test and scas movsb clc int jne stos xchg sub cmp inc lods push add arpl mov or or call xor dec push (bad) (bad) mov pop outsl in test cmc data16 push adc aad std adc loop jns mov rcrb dec scas repnz popa enter imul jno jns (bad) dec or andl jns push cmp push xor sbb jp rclb lods mov loopne mov xchg fnsave mov mov scas cmpsb sub dec sti out sbb lret arpl cltd rcll inc xlat sbb mov das in frstor cli push sub add stos and dec push rorb and jmp jbe inc in mov scas shr push out xchg xchg dec pop cld (bad) pop xor xor test cwtl adc das out push sub inc clc (bad) hlt jle dec mov repnz push sbb stos pop xor xchg cli nop push mov popa push (bad) out xor ja jecxz stos mov add xor (bad) adc sahf mov jp loop jae mov inc mov scas push mov xor (bad) add mov pushf (bad) xor xchg scas pop push loopne flds in xlat adc ds rorb roll cld dec push fild xchg sub aam push cmc ffreep mov jno add push sbb jbe dec in or fcompl pop cmp sbbl fstpl mov xor stc je adc push cmp pop repnz lods scas mov push adc lds js movsl vpunpckhdq hlt mov xchg mov fisub sar sti aam stc add clc stos cmp lock xor xchg loope add addr16 xchg dec adc (bad) ljmp loopne out push jle xchg (bad) inc inc imul cmc xor rcrb cmp inc or aas fcoms dec movl test iret movsl (bad) pop jb adc and movsl jne test jae cmp call mov jns jg push movsb ss insl xchg je stc bound nop incb dec dec push xchg stos or shll lea hlt lock adc fs cmp pop cmp dec push and popa es or fwait stos in pushf xchg mov cmp lds and ljmp push scas into imul push cld popf sub mov mov sbb aas xchg inc movsb roll iret roll imul cmp leave mov ss je das sbbb aas insl push popa xlat or push pop pop or dec lea in fist xlat ret and mov out clc xchg sbb mov pop addr16 push loopne das inc fnop scas jbe adc movsb (bad) jge sub xor push jb mov fs add mov jns (bad) lahf fiaddl in fbstp test nop pop jno aam out fnstenv repz (bad) (bad) icebp xor mov sbb xchg mov out dec sub xchg add test inc movsl and xor jnp fildl lods les xor mov scas inc in sbb cmc xchg (bad) enter inc js insb xor pop les mov outsb movsl cltd mov js sti inc push ds pushf mov xchg loopne loopne mov mov pop cmp js pushl cmp fcompl sti adc push jbe shl mov movsb aad enter stos insl add ljmp sbb fidivr pop mov rcll ror je and sarl xor adc dec dec or dec and mov pop outsb jge test sub (bad) jnp pop outsl push jns call dec push or xchg fildl lret add sub (bad) fldl adc push mov mov int inc xchg sahf mov repz jno add cmp int aas push jl into add and push les sub push pop push dec push mov addb fst mov mov xchg cltd (bad) xor push xor ficomp xchg jl rorb nop popf mov mov scas stos lret mov mov cmp ficoml fild add (bad) loope sbb daa push pusha mov lea sbb dec dec sbb adc sbb arpl jle mov xchg xor xchg push pop das enter pop lea jo sub dec les fidiv mov mov jne xchg fimul repnz add test mov sub mov loop adc mov std inc xchg adc insb cwtl mov test out adc cwtl cld das cmp sub fld cmp xor lcall sub push adc (bad) cmp mov pop (bad) dec mov sbb ficompl lods and push mov pop clc je jmp cmp (bad) cld jl mov lock push push lahf inc push xchg jnp das sub lods (bad) push leave jmp mov mov out test fsubrl fldt (bad) cmp leave xchg ds add imul repz decb call cmpsl das ds xor jae or test jmp push nop jae mull cmc xor and mov and jmp call cmpb push ljmp rclb gs xor or mov mov in aad scas lahf mov ljmp loop adc mov inc das mov cmp and push iret mov xchg cmp aaa pop outsb or inc lret dec cmp sbb lock nop dec into mov and int sub xchg test loop orl inc rclb movsl andb imul (bad) cmp jno jno xor mov pop lcall hlt in ja sbb bound push pop add sub mov sarl cltd pop xchg push dec pop jne mov adc sti xchg pushf or test test xor in fs jp jo cmp dec mov xchg xchg ret shrb lret cmp mov or sub mov movb bnd int3 add or cmpb cld (bad) setbe lods push sbb jo les icebp jp and test pop lret sub sbb notb sbb in in mov and (bad) cwtl xor icebp xchg xchg js jle test movsb ret out jo cltd shrb outsl fwait xchg in add std dec stc stc int iret mov xchg xchg sbb sarb dec sbb repnz scas std imul (bad) ret ja cltd inc int3 in cmp int das stos out insl sbb push ds adc daa and and mov xor movsl rclb insl imul xchg jbe js rep aas in inc cmpsb (bad) outsl xchg cmc addl sub jne pusha stos mov or fistp push mov adc pop insl lret int nop negl push scas fbld sub xor mov hlt std cmp add shlb jmp mov mov ret pop aas inc or orl inc add xor xlat ficom push pop mov inc pop js (bad) cld or (bad) test add enter xlat fincstp push rcrl sub test xor adcl lret cmp popa test mov loop sbb xor in (bad) cmpsl pop xor mov mov popa sbb les mov pop push add fs cltd pop daa and cld stos push xor (bad) mov test out sar shrl mov movsl out add cli aaa push inc addl je mov loope mov cmpb or sbb or (bad) dec jbe enter pushf and and jmp add add inc in sub ljmp inc jg xchg push cld xor aam cmp push lods add and repz inc and pop mov and mov in rolb dec cli jno lock les push fwait or and mov popf add cmp push ss mov je mov mov mov lahf ljmp (bad) xor jle cmpsb mov rol add push insl in mov in rcl std lcall adc xlat jae stos add push insb ret xchg and dec scas push fnstenv clc mov cs sbb or xor fst iret inc and cltd fbld jae data16 mov xchg ja adc jnp ret mov adc pop popa ljmp or addr16 mov fs xor shrl add jge cmc cltd fsts mov inc cltd aad daa push xchg add outsl push in push out aam jns and ret ret fcompl xlat sub cmp mov or sar je or mov mov out inc jge roll cltd dec xchg mov fs sarl aad mov mov das jo addr16 jg or push insb lods lods sbb mov adc mov mov shlb (bad) dec and inc loopne aaa add les fs popa repnz call xchg shl jns movq testl push or dec jno push daa fisubr and pop arpl dec fdivrp adc xchg sahf jg pop mov out mov or stc sub push jne hlt jge inc ja hlt in and add pop fstl (bad) mov sbb jnp mov lods dec ds js mov sbb xchg xor movsl nop ficompl insb addl sbb mov repnz mov adc sub in arpl lds jne mov (bad) addr16 (bad) jg add clc or mov ss clc inc push (bad) mov or push adc movsl jo out movsb arpl push xor pop sbb cmp or jae or add adc int xchg data16 icebp test test mov adc dec push cli gs xchg cmpsb shll push mov stos popf rorl pop xchg negb dec std pop adc or (bad) inc sub dec cltd scas (bad) loopne push adc pop inc leave in outsl (bad) and bound xchg fs test fldcw push mov stos popf or xchg aam fisubl in mov jno pusha cmpxchg mov (bad) fwait dec push (bad) mov sbb cmc inc not add mov sub (bad) loopne out mov inc (bad) dec jg das loop push xchg clc push cli jb xor push xor xchg (bad) push pop sahf pusha lea fldenv mov std andl out loope push or add sub ja aas mov and fsubr add add js dec lods push fdivl lods and sahf jle shlb decb gs mov ret vpmovmskb popa jecxz dec jne jmp add enter and or xchg mov xchg pop rcrb xchg mov cmp sbb dec orl jb rclb and jmp cmp incl or dec lret pop or ficomp xor popf outsb nop aad mov out shrb and mov xchg push push push sbb pop lahf and in imul rcrl sbb daa lea sub sub out stos add jb repnz sub popf ret cs adc ret lea and lret pop pushf jo pusha adc or pop in fwait gs cmp sbb mov or cmp cld add mov adc adc jmp sub movsl dec inc push or mov and je jno jae jp mov loop inc int3 sub arpl xchg mov aam pushl mov cmp inc lds adc mov fucom cwtl iret add (bad) add pop scas jne loope fsubrp call xchg cltd pop out fbstp xchg xchg mulb data16 arpl lods fcmovnb cmp fsubs push xor ss insb xchg pop add cltd or (bad) fstpl ficom jle and out adc cld mov lret jnp mov fcoms inc out and dec lret jo loopne xchg ljmp xchg aaa aam into aam xor int mov push cmp cwtl jae or shrl aam lds std mov ss in cmpsb and (bad) test cmp mov cwtl mov inc jecxz pop xlat (bad) popl out jl shl add test dec sub lea jns xor dec xor hlt and jae dec push icebp in data16 mov xchg lock cmp mov imul jecxz push inc xor pop mov push stos mov out mov ficom ja or int3 adc repnz mov push mov jnp push pushf icebp mov call dec daa adc cmp pushf imul stos add sarl sub insl maskmovq test inc movsb data16 sub push lret mov (bad) bound movsb mov mov add gs movsb inc dec dec mov sub sub add dec sarl inc adc pop mov test lds sub pop xchg adc test mov (bad) data16 in in mov iret fisttpll mov int sti and (bad) push enter jecxz cmp mov cmp nop daa mov and les int3 xchg xchg mov into pop add and push lret dec xor loopne or das ja push adc xchg in mov pop mov loopne in icebp enter cwtl sbb push add xor mov push (bad) cmp lock adc ja dec cmp mov leave lea adcl sahf and pop sbb mov jp std andl rcr mov (bad) mov popa lock add cmpl jbe lods mov pop mov out xchg rorb cmp xchg jl push add sbb lcall pusha test jge xor xchg adc push and dec (bad) in iret pop sbb and jmp sub jno mov sbb pop pop push add outsl xor in xchg addr16 addl daa data16 (bad) (bad) cli push ret push adc add aaa fistpll mov test adc aaa lods xchg enter adc mov jb xlat not mov cmpsl icebp mov je out (bad) out add in cmp xor inc fwait sub jnp js aas mov adc xchg dec jge push (bad) insb xchg jo ret lods mov and rcrl js adc cmc mov sbb and xor jg lret test inc scas cmp mov lahf and daa pop cld adc xchg es lret sub incb sahf cmp popf cmp insl std popa jge das and bound ss adc std mov xchg ja fistp adc inc js jg (bad) inc sub pop pusha loope sbbl inc push pop dec repnz repnz sbb scas (bad) jno pop aad xlat loope (bad) call xor cwtl test inc scas mov xchg cld jecxz fstl loopne ret aaa test and popf loop mov (bad) or mov push cmc mov ja fwait daa lcall xchg or je ds lock rcrl xchg loopne jl scas inc fstps ret fstl lock jns enter pop stos jl inc and sub in push setns in xor add dec ret mov sbb xchg pop xchg sbb scas sbb clc insl cli testl idiv mov rorl dec mov add cmp jg outsb sbb and cmp (bad) mov (bad) enter stos jbe sub xchg in icebp test mov cmp dec xchg sbb sarl cwtl mov call jb push pop push aam iret loope fwait push jne push lahf insl rcr lds xor push testb aaa mov aam lcall call sahf pop (bad) orl rcll mov dec cmpsl (bad) mov mov fcompl mov xchg enter jge (bad) lret iret mov hlt cmpsl dec mov dec (bad) imul adc mov leave adc imul mov sbb mov gs add fwait xchg push pop rolb push inc lock hlt scas (bad) dec dec sub sub scas inc out out stos inc lcall jbe cmp xchg fwait jge jbe inc push adc lret cs lds or mov out inc das mov das sti cmpsl scas cmc mov jecxz xchg xchg inc mov loop push push pop in sub jo ficomp or in pop out enter mov xchg sub pop push flds sub inc sbbb lods and add push xor cmp xor push rcrb ficom and mov push mov pusha pop push mov add jb and xchg lock push rclb dec fidivrl test jae inc inc es arpl inc adc inc (bad) loopne pop xor mov iret sub test jb aas fisubl push repnz mov out scas sbb int (bad) mov shrl dec pop out out idivb xor les repnz jle in out sub movsl inc xchg push jmp xchg lds insb jecxz xchg sbb mov loop iret js cmc cmp inc cmc xchg in loope push in add push push cmp jmp jmp push int3 mov and inc jno jno dec adc mov cltd hlt arpl (bad) mov lods stos fs (bad) enter js stc sub jle (bad) xor pushf cmp cmp aam sbb (bad) scas xchg dec sub mov hlt arpl adc mov popa mov inc jmp mov push (bad) in inc aas ss mov and out mov rclb mov pusha sbb stc repz scas popa pop fidivr push jbe jb sarl push cmp (bad) mov pop sbb xchg sti cs sbb cmpsl sbb fildll in lock les jp pop mov and mov dec (bad) aas (bad) xor sub mov in pop bound loope stos sub (bad) enter cmp cmp (bad) xchg (bad) data16 loope mov push lea aam push xor dec les outsb inc push sti es adc adc enter ret xor (bad) adc or dec movsb inc mov jl je (bad) pop jmp push mov mov pop xor fimul mov xchg pop and lods mov xor sarb cwtl rcr dec js sbb push cwtl inc cmp loop mov nop xor lock dec shrl sti mov setne dec insl ds out xlat jne pushf fisttpll jns adc push inc push fnsave xor (bad) lock add fidivl cmp scas int3 adc xor and repz dec (bad) push sbb adc shrb jnp insb icebp std lret fsts xchg popa xchg pushf fnsave ljmp xchg fs sbb sbb or (bad) out (bad) sahf and in add shrl cwtl out mov xor mov les inc in lds sti popf nop aaa ja jnp xchg imul fdivrs movsb push jae jb inc int ret mov mov and lds inc enter mov imul xchg push mov xor aas xchg imul stos mov insb sub ljmp outsb sbb jno lods mov (bad) jle imul mov pop pop sbb xor int3 movsb jo inc jb sub xchg mov xchg insl mov mov test jmp or lock (bad) jo cmpsb cmpsl stos inc loopne push data16 call xor push push mov outsl xchg add shl aad dec cmp sub mov popa lcall leave xor data16 sbb ss ret adc xchg push push dec mov pop inc aad mov mov fistpl jo out jns xor popf loopne mov mov cmp (bad) lahf insl mov clc lret hlt int js fsubl push mov imul sahf cltd es dec aaa dec xor inc sub pop sbb test das pop dec scas jb jno loopne stc call mov inc mov push jns stos outsb pop xor cmp xor sbb or imul mov test cli xor clc pop adc arpl pushf xchg or mov sahf mov sahf ret dec std repnz dec jle cmp push aas ds ret push fs loopne shrl into mov and data16 test rcrb and stc imul add push jbe aaa movsb sbb add push cmp fs test sbb gs cmpsl inc (bad) xor and adc (bad) mov pop adc adc mov (bad) icebp and fstpt sbb cltd rol dec dec sbb xor mov popa outsb xor cwtl fbld (bad) jo sub fidivrl inc adc imul dec in pop push out sbb stos pop inc xlat ret leave imul repnz pop and inc adc mov mov push iret out or adc mov sub (bad) xor dec insb inc (bad) mov ss iret dec (bad) push in jmp std xchg mov pop lcall aas loope jp rcrl xchg scas cmp loopne fnstenv and fnstsw or mov dec pop sti xchg das mov lahf mov ss out xchg (bad) jns jae int3 cs cli push push and repnz dec xor lret (bad) ss mov add inc dec outsl pop lock cmpsl lret imul sub shlb mov push clc stc mov add jmp add jg test pop push ljmp pop movsl ret mov (bad) mov pusha push and bound test xor stc xlat inc call and jle xchg loop cwtl mov iret mov and repz xchg cmpsl das sub lret out mov adc dec xorb add adc stos push push or std xchg xor jne imul ficom in mov pop fisubl mov insb cld fidivr stos (bad) out jle and push stos push ljmp cmp shr jne mov and pop (bad) cmpsb imul lahf addl dec mov lods inc call es out cmp cmp pop mov mov jp push daa mov out jle stos test in add push or or nop cmpsb lret std mov hlt mov dec (bad) mov int3 mov test addr16 mov lods pusha xchg and mov js mov loope (bad) sbb fcmovne xchg pop ss dec jmp loopne xchg mov pop out mov adc or cmp mov jne popf popa repnz stc sub test xchg fcmovu mov mov xor cmp in clc push imul clc mov roll enter mov scas xor jns inc out push dec jbe mov aam mov inc clc mov ret outsl ret mov cmp int3 sbb mov in out mov int mov aad mov inc daa rolb gs cli inc mov xchg jae mov fistl arpl adc lcall (bad) lahf push out mov fsubl cli inc xchg aaa adc push nop mov fldenv fadds cmpsl mov jnp jl xor push adc xor xor orl sbb push sub lcall sub adc popf rcl adc add fsubp dec ljmp jecxz test jno bound xchg mov imul add sbb fs sbb mov aaa xor add sub arpl stos into sahf leave lock push pop jns in mov or xlat les lcall fcoml lret rclb fstps sbb jle jns adc jne jmp and or lcall out jb mov insl jb outsb test daa lahf jne stc and mov popa add clc xchg fwait lods mov lods daa aam out sbb lret (bad) xor popf int clc mov and pop dec mov pop mov icebp cmpsb xor aas idivl mov mov xor and and dec sarb in push popa sbb mov mov mov mov inc mov push out mov dec rcrb and into scas mov xchg lods mov jecxz rorl add xchg sti hlt mov fstps add outsl push (bad) or leave xchg mulps jae fadd rorl mov or fadd sub xchg jmp out mov imull jo xchg clc mov jo add cmp mov jo add or jp arpl jno insl aaa clc outsl or out les test fs or imul fstpl xchg fmull dec push pop aaa test pop mov add ds jo or lret pop jnp sahf daa lock jg mov mov jno add out pop cmp andl and pop jecxz dec ds adc add jmp call sub fidivr arpl (bad) je mov push cmpsb (bad) cli add mov sbb mov push jp scas push pop and push push dec xchg or jl xchg inc pushl jge cltd pusha pop movsl sub or sub repnz pop hlt mov mov js into fucom pushf xor push cmpsl addl cmp (bad) out add dec jle mov rcrb jnp xchg int3 lods mov gs jbe sub fs lea sub int3 pusha pop adc or inc adc in loop das push int or popa push pop adcl das mov add dec and jge pop fild shrb mov or jmp (bad) mov imul mov out mov test cmp cwtl pop cld add dec ja lods inc or or call ss sub push xchg jl aas negl add xchg (bad) bound xor xor imul mov repz mov pushf (bad) (bad) pushf adc cmp int pop pop cmp dec pop (bad) push or andb push scas sbb test jo,pt test push jl xor (bad) loop fidivr arpl pop adc loope jge (bad) mov ja (bad) mov mov xor mov sbb xchg adc stos or loope addl push inc mov xor in push push lds test jmp mov adc out dec mov movsb call cmpb inc xor jl jle xchg pop (bad) sub mov sbb aaa inc mov popa stos and dec mov lock xor xor jo movsb sub jg in pop jbe or jmp imul loopne cs in clc and add in xor pop lock sbb mov dec add pop mov aad sub jnp jae dec cmpsb in xchg mov cs (bad) cld xchg cmp xchg jg subl inc push sub mov mov jnp (bad) cmp pop adc rorl push xchg enter pop mov aam bnd pop sbb hlt ds lock and jns add xor xlat aam cmp fcmovbe xchg rclb mov jge fild sub and in push add gs cmp mov das lret push fadds jp xchg mov xorl and sub lds xor xor jecxz add test incb jmp and dec mov push aaa movsl fildl f2xm1 or xchg add pop aam or jne out popf xlat icebp int3 imul dec dec cltd mov cmc pop jno mov jns push add movsb pop roll sub dec cmpsl arpl incb or sub and sbb inc jg xorl mov loop ds stc mov lret test (bad) mov and stos adc out jo aaa adc cwtl jg xor flds outsl pop lret pop mov pop std mov es sbb lods cmpsl adc pusha push std jno test mov add push movsb pop cli repz lods or ja ss scas xchg mov dec adc mov outsl mov xchg fnstenv (bad) loope push push fwait sbb aaa jbe fwait (bad) or xchg movb popa or pop stos xchg and cmp fwait addl pop lds aas jb pop pop (bad) jmp in cs or sub hlt lahf and test jne sahf repnz and mov add mov notl jnp movsb vaddpd outsb and push test and jp cli ss jo test jo out mov loope sub shrl fidivl mov dec jp les xchg pop (bad) ja jge ret fildll jge pushf repnz push sub jp repnz out jmp or call pop aam xor mov fwait sbb xchg add es mov sub add stos (bad) test (bad) jg ja in xor js jns cltd fs cmc cli push lds mov mov ss or popa inc int cmp and out lahf vcvttpd2dqx jg stos test je into adc lods or and fistpll push icebp xchg out mov pushl inc cli jp xor (bad) insb xor stc iret cmp scas jmp jbe sub fisttpl repnz mov lock or or lds cltd cmpsl pushf std inc xchg sbb push cmp pop xor dec es cs sbb or movsl (bad) incl mov dec (bad) out jl lahf push es pop in sbb mov xor pop loop mov inc pop into es mov jns push push push inc in mov or outsb sbb inc mov les js jmp add push mov fistl addb sbb mov repz or out mov push lock or add push imul sbb sbb loop push int xor dec js sbb cmp pop jb sbb push aam (bad) addr16 pop insl (bad) sbb rclb mov cmc (bad) cmp dec xchg repz loope jne ja and and push dec adc das xor add fiadd sarb (bad) hlt stc hlt pop ret popa jge and and inc insb xlat ficoml xchg fmuls lock movsl mov mov jo in inc mov adc stc dec fldl2t or dec (bad) repz into jno ja div and pop cld test lock xor jbe xor insl cld mov pop mov sbb xchg jno les add push adc imul (bad) mov and xlat in out icebp int mov lret int3 inc arpl aad lret arpl pop movsb fcomps (bad) push or inc inc fwait bound xchg or imul out push xchg mov outsl pop push fs int3 push add push and or cmp cmp fsts adc jo das faddp ljmp mov subl or inc pushf pop and push (bad) sub adc mov push xchg icebp cmc pop xchg in aas pop mov out lret push inc out lock jle xchg insl test enter mov mov inc add lods push pop cmpsb js mov xchg push dec cli mov lods into mov add rcrl sub add je,pt fnop ss bsr and push fldt mov hlt aaa fstps inc mov int3 arpl call add (bad) out aam cmp sbb xchg jae mov aam and sar sub ret mov sahf jg sahf fcomp jmp in dec out push adc cmpsb (bad) xchg add das aas mov aas or imul in subl pop pushf or push add stos das or movsb push fstl gs mov rolb inc call add jecxz addr16 pop out cmc stc jo decl lods push inc mov stos rcrb jecxz,pn jle pusha push cmc movsb pop sub adc or push dec add out xchg popa and xchg outsb sub aas mov daa xor ljmp sbb imul sub outsl fcmovnb (bad) es cmpsl rep lock test inc stos mov xlat jno jno jge lahf ds std mov dec je sbb repnz cmc shl cmp pop cmpsb arpl inc mov sub jbe int3 mov incl pop (bad) jmp xchg scas mov mov xchg out inc fbstp push mov add and sarl (bad) out pop ficompl fildl push mov pushl jmp (bad) loope test inc iret pop movsl xchg rcll inc push std add jg cwtl fwait mov out add push mov sbb into imul test lods imul aam pop push popf cmp push data16 aad out in in xor adc pushf sahf aad es inc ret int3 xchg inc in dec or inc std out out push in sub or pusha mov xor fldl sbb les dec imul movsb ret mov mov xchg xchg mov push and jne jnp adc mov pop (bad) movsl pushf (bad) fwait lcall adc orl stos xor test cmp sbb jae fs mov pop ja mov repnz lahf mov mov stos add cmp insb icebp aad sbb xchg mov mov cmpsb and mov ljmp xlat (bad) (bad) sbb jp mov dec mov cli adc jne mov fsts xchg shlb sahf out sbb and std test mov mov rol and inc xor int3 stos mov or leave lcall push mov sbb icebp push jmp sarb and mov push cmp mov gs lods and adc js dec mov popa lock test pushf sbb and push call push pop mov adc outsb out mov dec icebp test mov or lea cmpsl inc mov adc cli mov mov pop jecxz pop (bad) mov imul fimull sbb mov decl adc mov iret aad adc pop pop adc popa loope fwait push sub daa mov lret popa pop sub test pop cmp cmp and mov lds cmp push pop cmc jns das stos xchg inc cmp mov (bad) leave sbb jecxz mov mov inc or or cli loop insl mov inc mov mov push aad push xchg jp in mov push sbb pop pop xor dec add xchg and ret js mov enter jmp jae fsts push (bad) adc dec repnz repz and mov inc pop fisttpl mov xchg sub xor mov or rcl insb sbb out xor xor xor xchg and xchg mov scas sub repnz cmp test dec sahf popa jg push (bad) jb dec out jge mov jge data16 sub dec dec adc mov (bad) popa mov movsb pop mov adc push or loopne repnz icebp dec pop lcall aad xor out imul push dec movsl cmpsl les iret inc sbb dec dec jnp ljmp cld inc enter fiadd mov adc in mov or or pop enter shr fdivrl cmp mov or lcall push xchg pop test scas js out push cs push in dec mov movsl loopne or xchg int3 jae pop jno loop (bad) push sub pusha or inc inc mov fldcw mov mov sbb cmc mov pop push test icebp imul sti dec mov sub out aas lds xchg icebp cmpsl (bad) push xchg out adc loopne mov fcoml sub out mov dec icebp pop arpl mov inc add lahf inc mov cld std pusha xchg mov xchg xchg cli stos in add hlt cmp int3 roll or shrb dec inc cld gs daa aam repz push leave dec cltd jb cmpsb or mov mov sub and mov movb test xor mov icebp paddusw daa popf ljmp movsl sub sbbl cmc cmp (bad) mov xor in push mov nop nop mov int3 insb mov movsl adc test and fbld inc (bad) ret je or movsl sbb fcmovb sub mov xchg cld cmp inc sahf dec push or add xchg repz ret push (bad) testl dec sub in dec sub jmp mov fsubrp push pop insb fwait mov xchg add mov push (bad) add bound loope in push fldt enter adc ds cmc pop or out pop mov je or popf xchg insb push mov sub pushf push (bad) add add push pusha push add push popa xchg mov jl lahf xchg (bad) adc push inc nop jl add pop inc repz out js or push cmc pusha xchg cmp inc sbb sbb lea out dec aas (bad) and jb sub lahf pop jno inc sbb and sbb test dec cmc test or cmpsl adc cmp mov jo lret icebp (bad) imul ljmp in shrl mov inc cmpl dec push gs gs inc popf mov ret lret js adc dec std add hlt mov sbb xchg aad add jp (bad) sub (bad) cmc push scas insl xchg add subl pop mov pop les adc pushl push cmc ljmp repnz popf stos lret push dec xchg insl into iret (bad) hlt sbb pop or repz (bad) pop push (bad) (bad) in mov je jle ffree pop pop xchg rcll das popa lea adc sbb add aam push fistp cmp adc mov push shrl mov sbb jae lret aad outsb mov cmp inc out ljmp ja push mov shll icebp js cli push aam mov pop jns (bad) sti pop jnp icebp xorl fimul cmp roll hlt xchg cmpsb lods and jmp fstpl mov sub lcall mov xor or test pop pop mov test iret test in inc je lahf xchg inc sub xor mov loope jbe xor insb jne add jns divb mov (bad) test mov movb ficom out test and inc cs insb (bad) fsubrl mov add mov data16 mov push stc jno push popa adc push mov sti cltd sbb testl push mov mov addr16 sahf cmp js sub mov jae mov xchg jl out pop sub cs add fwait test loop les sub mov pop mov xor sub gs jo (bad) orl fcomps adc ret test fdivl mov out mov dec (bad) xor stc into int cltd negb cmp cmpsb fisttpl dec lods loopne ret mov jge jmp add xor outsl xchg jl jge out cmc test addr16 mov (bad) adc sub xlat test jmp dec jb xchg xchg add enter pop mov push in inc push les dec (bad) sbbl in sysexit adc inc mov pop push out call mov xlat mov xchg push sbb aad adc push add mov ss nop roll pusha dec or fisttp xchg or inc ret inc mov js das cmp test (bad) lret or enter cld xor sub pushf stc inc icebp pop les int3 jns xor cmp add cmp adc xchg ret sub loop jno rcrl mov adc mov sub or (bad) lcall jmp sbb in or stos jae pop daa pusha sub mov adc push jp add fdivrs dec leave pop test outsl pop push fucomp out xchg lret xchg lahf incl mov mov ljmp pop (bad) jmp orb fnsave sbb mov inc sub call adc cmpsl imulb inc push mov mov pop dec or and popl mov aas sbb push iret mov sti push (bad) jmp loopne setno pop sub push inc jno pusha push gs jae rorb xor push sbb dec loopne aam fs outsb jnp mov ret cmpsl insl popf mov cmp aas into inc repz xchg or ret stc inc mov cmp mov mov aaa jno mov cmp (bad) icebp sub cmp xchg into sbb cld outsl cmp (bad) mov xchg (bad) data16 sbb call jbe imul fldt cltd shrl sbb insb mov loop out or jp scas popf mov push jae jns mov and rcll mov movb aaa push adc add mov cmp jmp jge jns jo inc push xchg mov dec in add push cmp int3 dec negl mov mov nop xor jmp lods jbe (bad) mov lret push sbb lcall dec dec xchg inc mov push (bad) test dec mov and (bad) sub adc sub ret cmpsb loopne inc fcoml mov pop adc and push push dec mov inc or sbb rol subl lcall das sbb jmp mov xchg mov mov enter mov imul imul clc sbb mov push dec cwtl jl pop loop ja push lods and js or (bad) pop push outsb jns scas in xchg (bad) ss sub jnp mov leavew in aam cmp in inc fdivrs dec scas jle aad mov ret pop inc cmp jl mov lahf aam cmp push loop and xchg cmpsl adc mov mov xlat mov mov iret add sbb cmp push imul adc cmc ja outsl cmp psubusb aam inc sub fucom inc mov or daa stos out mov data16 pop ss insl pop stos mov inc mov fdivl rolb insl lods sahf mov lcall push xchg pop cmp add inc jo in icebp lahf inc dec push push cmp fdivl add sarl dec data16 les or out in ss xchg leave fstpt lret pop insl scas lods pop outsl orl sub clc xor bswap lock loop ljmp dec lahf aad clc imul lcall ljmp into xor aad pushf and mov jg icebp jno loop pop mov push cmc pop xchg lcall shrb lds testb scas jl (bad) fadd aaa push adc sub shlb aad pushf fwait icebp push inc push fiaddl jno icebp or cltd push pop mov mov daa jns or jp hlt mov jbe sub jne adc mov pop sub (bad) fmuls insl jmp mov addr16 pop (bad) xlat mov cmp dec mov inc and test sbb outsb jle dec js jle and sub mov xor mov std and cwtl mov jb pop fimull outsb icebp and fiadd inc xlat and mov (bad) fnstenv hlt jp movsb in jmp sahf jbe inc jg jb xor faddl dec jno dec fimull lahf nop cmc cltd jg scas lds inc cmpsb (bad) push dec dec int3 sub sbb or popf xor mov int3 cmp sub clc push loope jae test mov xor or test jge into inc push push mov insb ret mov add popl jmp fistpl repnz loopne push pop fld scas fsubrs inc dec sbb int3 les push fistpl inc in or sub inc adc ret je lret fmull adc imul scas stos in cmc or xchg mov jmp mov sbb aam test or xchg (bad) xor xchg rcll pushf imul (bad) repnz and test repnz enter aam xor xor jnp push insb sbb cmp and inc cltd insl mov dec push test add mov dec loopne mov mov adc movsb mov xchg sub rep mov inc testl push or adc ret (bad) subb push loope and out mov add mov rolb xor js sbb sarl push scas jno negb sbb cmpsb xor bnd int3 test aaa outsb dec push fwait aam mov mov pop adc adc add mov mov mov ror jns mov std and push das into add pop xor jmp adc dec dec cltd or jnp scas scas push cmp cmp and dec and push js mov lahf or test divb dec fiadd mov je icebp test sbb int frstor out das add xor arpl and popf std fsts inc fisttp mov sbb pop push aad test xor mov mov cmp mov push jle addr16 mov cmpsl pop inc mov mov hlt push jmp test addr16 divl pop inc lret adcb sbb dec jb cmpsb (bad) pop daa sbb lret push (bad) cmp xchg dec mov jb push add sub jle lea mov movb push adc cmp mov fcomp (bad) cmp or scas nop xor in mov cmp jg dec mov mov repz mov pop test inc bound lret insb inc mov stos jo sbb fisubl inc adc mov movsb and or mov dec fisubl stos inc scas in in orb and pushf sbb (bad) sbb mov repz (bad) (bad) inc ret ds int3 jmp and in sub xor jecxz and dec ret jb outsl sti jae jecxz xor cmp adc (bad) fisub lods sbb test lods add mov popf cmpsb jnp add sbb pop mov mov ret and shrb and add leave add setne cmc dec pop aad dec inc out mov inc inc mov dec arpl rcll mov inc (bad) mov pop mov repnz cmp call fwait jmp ds pop xor push stc movsb popa and cmc cmpsb add (bad) aam xor std ss into out or xchg aas mov xor mov jg ljmp xor das jo jno fiadd call push mov cmp push jl nop push fstpl lcall and push jmp out movsl gs or dec outsb adcl dec movsb lret sub sub stos push jmp cs loope or dec hlt adc mov mov mov xchg or ss nop stc jo enter sbb adc mov cmp xor xchg pusha ds mov outsb mov lea sub xchg or imul dec sub movsl dec pop pop xor pop mov jmp icebp pop (bad) jge ss enter rcrl test loopne lds pushl call les jmp push scas xlat jbe aam in lahf fsubr lret jb lds das lcall push cli hlt pusha jo,pt sub stos lock fs ljmp and pop inc pop loopne inc leave xchg ret push dec adc lods or pushf mov add add dec fldenv adc ja dec fsin mov push xor mov leave ja mov (bad) cmc xchg sbb imul aaa adc add mov jno vmwrite fucomip xor or mov lea imul nop int3 pop ja add mov inc cli std jns sar (bad) lock (bad) sub cld fdivrl cmp dec push daa call cs aaa daa icebp fiadd cmp shrl sbb or les or (bad) cmpsb mov les pop push jbe xchg dec in dec adc mov incl adc insl mov scas es xchg (bad) loop add push push loope dec hlt xchg mov cmpsb fld and xor cmp inc (bad) sub mov out pop fldt jle pop daa daa cwtl lods in mov orb push icebp xor call adc sub sahf mov sti sbb popa clc xchg xchg out outsl sbb mov dec fidivr je xor out lock cmpsb ror rolb pop pusha (bad) repz add insb leave outsl jg das xchg mov repz dec jp shrl je je out jmp push fsub adc repnz sub jg imul repz lcall decb mov push or push subl cmp test outsl add pusha movsb jbe sbb adc xor lret (bad) mov int3 inc repnz mov push loopw icebp cmp movsl notb mov lock inc into es popa push lods cmp imul jl lret (bad) mov sarb test push xchg pop movsb jo xchg sti push inc dec shl add addr16 popa pop sarl mov jecxz or fucomip repnz daa mov mov sub mov push dec out or xor mov (bad) test cmp jno je cltd jg or jg sub cvtps2pi shrb jbe xchg je mov movsb mov outsl pushf pop daa int3 push jmp add movsb out mov lcall sarl or dec xchg repnz pop xchg adc (bad) aad gs sbb pop or push lcall push scas or lcall in test imul cmp sti mov hlt lods mov stc adc mov mov push sbb (bad) popa imul pop sti jl and clc mov fistpll por in arpl in pop fimul test dec mov inc (bad) idivl or lea inc lods and popf movl mov flds mov sub mov bound les lds inc jnp pop mov mov cmp jge jp adcl mov (bad) test dec icebp (bad) daa jp push mov mov sub ss lds adc cmpsb xchg lahf jecxz mov shrl mov (bad) xchg jae jb dec mov mov xor hlt or jae xchg mov cwtl notl aad aas iret lahf test pushf ds bound and stc adc inc and jp mov test popf add jnp inc fadds and xchg js push js (bad) add ja lds stc dec lcall xor ja push jbe add imul adc (bad) jg fstl into push psadbw fiadd push xchg mov and mov lcall push in inc push jbe jge test lods push pop iret cmc (bad) pop jg addl ret dec mov mov fucomp mov dec (bad) cld jo push mov cmp push add movsb jle mov sub lret mov mov das jnp cmp or loop xor sub mov (bad) cmp cmovae mov stc add push outsb cmp jl insl pop sub mov sub mov loope mov jecxz xor mov and ds or mov jmp (bad) mov fldt mov xlat stos lret sbb roll (bad) mov push call loop jno fbld imul lods clc negl int jmp in aam cltd gs adc stos dec js pop (bad) repz add sbb shrb lret sub mov inc mov add incl fmul sar mov mov mov add arpl inc sub mov jne in (bad) outsl test clc sub push fiadd mov ljmp test pop sub add xlat (bad) popf pop cmc ret insb pop and popa push aad push cwtl pop mov out imul jecxz push fmuls ljmp cmpsb pushf hlt xchg pusha sbb xchg dec scas mov test xor pop ror mov leave and push cmp repnz clc jmp adc pop add jl mov jl (bad) xor in xor stc je sub cli mov ja mov pop mov sub push pop shl cmp mov push add (bad) xor and (bad) push jbe movsl inc popf mov stos aad pop (bad) mov loope icebp cld ret jmp clc inc and xchg lds jl (bad) cmp shrl cli jecxz,pt push dec pop mov jne adc ljmp or lret mov icebp imul loopne mov out and mov std mov sub adc dec imul or jae push scas push pop lock pop mov addr16 jo fcompl in jo aam divb ljmp mov jp in jle (bad) pusha popa pop sub pop mov cmpsb mov jmp inc insl ficompl mov in xchg jno outsl pop sub insl pushf and push dec in lahf add mov dec stc mov cmp mov pop jno sub clc flds add mov test jge and test pop mov sub push mov insb add or mov mov push sub jp sub cmp test pusha lcall (bad) js mov mov cltd and in out mov and add lret push jp and shrb lahf cltd lret mov inc adc in mov mov pushf and mov (bad) into xor sbb dec in xchg xchg add (bad) lds es jo pop dec fwait jb xchg lds jecxz out mov stos in lds dec aaa daa push xor mov repnz bnd adc cli cli popa mov arpl mov or into outsb push test or xchg sbb or sub movsl mov adc push xor lock test cvtps2pd (bad) lock mov sti push pop in sub gs gs lahf add jae add inc imul std aad pop call mov cli xor test cltd sbb stc xorb mov and ljmp in dec stos xchg shlb test or mov or or adc xchg push insl fs fidivr adc sub popa push cmp out xchg stos sarb imul push enter daa in (bad) cs push lret and icebp jne rcr fistl and ss scas xchg mov sub push jno jmp sti jl adc pop dec push dec mov (bad) cmp cwtl test sub lea sub or xor and pop dec add mov mov xchg pop shlb push jo mov or jl mov xor test sbb mov mov pop scas bound pop mov movsb mov mov loop mov cli daa in dec mov push lods mov jmp xor lret mov dec sub ret aam out dec or gs movsl xor popf dec ds (bad) pop arpl pop into add loope pop cmp lret sub xor inc sub lds es jle comiss into push pop jmp (bad) push mov imul xlat sbb mov xchg add add xchg push xchg outsl mov xchg (bad) (bad) dec jo enter sahf sbbb cmp js int imulb sar popf adc jl cmc mov test xchg iret ret lahf sbb js dec cs pop sub xchg test adc insl call jecxz outsl sub dec push jge or mov sahf sarl xchg xchg inc stc insl mov mov ror push xor or mov adc out fsubrl mov xchg mov mov dec ss stc hlt je mov clc push add sub shrb sub test pop aaa xchg mov cmc hlt sub rclb (bad) xor adc push or push pop scas dec int out sbb mov add std nop inc xchg pop dec stos jns data16 dec pusha jae push cmp sub jo jp and lret and out mov mov fs fbld (bad) int jmp sub mov decl adc ficompl cmc ficomp aaa pushf in (bad) lret stos test cmp or into divw loop sahf xor pop fimul add add scas call and xchg push push fsubs movsl aas sti jg dec sarb jno jl lret jmp movsl mov cs into dec add jp fidivr ret scas xchg mov sub dec shrl push add inc cmp cmp adc mov xchg push nop pop jge popl paddw lea dec sbb ds mov stos (bad) mov jnp (bad) dec push stc push movsl jbe xchg jbe jmp scas add mov cmc mov daa cmp jbe dec cld sti rcrb shrl lods sub pop xchg not pop mov mov pushf les dec out sbb jge popf add jle cmp mov outsl shll cmp in popf jb shr aaa xchg xor lcall (bad) ljmp or cmp dec xor andl xchg sub sbb imul fwait pop add repz rcr jnp sub cli rep cmp push cmpsl jbe sbb lret push and popa jns sbb fstps pop lods xor aaa ret inc nop jg pop addr16 sub jae pop stc and inc cltd rclb aas xchg fadds xchg (bad) lods cwtl xchg lods xor ja cmp pop inc jb jl and or sar add call into int3 iret mov hlt dec addr16 adc cmp pop inc neg int dec loopne pop outsb loope bound mov mov pop ja out mov dec int lods fwait out inc inc fidiv out js call mov jnp jmp mov aas cmp jle mov popa (bad) or add jns movsl scas inc jge mov sbb pushf rorb jb aad xor jecxz shlb or and sbb xchg cmp cld fcomip bound mov mov (bad) mov ss push push popa in fwait in xor sar adc sbb cmp push scas (bad) iret test loopne jbe aad pop sub jno gs stc cmp call lods fs loope dec ljmp sub cmc inc lods xor jae les clc test push div pop jecxz pop mov lret lahf outsl fidiv ror cwtl or repz les gs or ja push dec push decb mov push mov cmpsl in add jge and lea dec inc jb lods mov and xor cs jmp movsb xlat sbb sbb and fwait std out popf sti push lret adc add daa inc sub sti mov jmp movsb popf mov mov (bad) fmull mov outsb enter shl fidivl sahf out dec mov ret mov stos sub pop aas in dec inc sti add das push icebp (bad) repnz neg jb sub jbe sub out dec cltd dec cmpsb and pop cmp cmpsb push xor lods loope push repnz repz push pop jo je out pop and cmp js push adc (bad) rcr data16 mov js xchg xchg inc je xchg sub jae out sti dec test fmuls cwtl dec push add xor jp xlat mov leave mov hlt mov mov fildl inc mov lret mov mov aas xchg lock std mov stos sbb cmp mov dec in jg lcall xchg dec mov mov and push imul add mov add dec iret cmpsl cmp xchg push fmul ret jnp pushf pop sbb out inc into in sbb xor bound das xchg push mov ss sbb push mov pop xchg pusha hlt mov or std fdivrs shlb lods fabs mov notl jns xchg or ret bound call vmulss xor mov cmp jg xchg (bad) sub mov idivl cmp and xor add jo aaa imul or jnp mov add lods divb fwait clc rclb xor stos inc cltd jge xchg fsub es push sub scas lea add push imul jle sbb jp cmp push add sub ret adc cmp into sbb mov pop repnz test jmp adc xchg aam sti incl and scas movsl jg (bad) inc fistl and xor xor inc pop xor int lcall je loope xchg mov in and ret sub dec or sbb fwait mov pop shrb pusha mov fdivrl cmp dec and lods outsl aam outsb mov stos adc xor xchg mov int push push cmpw enter fisttp adc jecxz sbb push leave in pop xor cld icebp fwait dec in push and js and fnstsw outsb test dec mov fisttpl add xchg adc je insb insb inc enter inc or mov jmp (bad) mov mov (bad) cmp jb andb rcrb push mov lods sub mov ljmp mov test inc jbe mov fdivs cwtl and or jne xchg addb mov pop xchg lcall pop xchg data16 fbstp inc xchg sbb lret mov repz adc cmpsl mov xor arpl jle jo call add lods mov cmpsb lea sub rcll add push cmp or sarb popa push push dec fisttpl pop dec xor lea or push (bad) mov mov int js aaa mov xchg lcall loopne fwait in jb hlt push into dec sahf pop (bad) sbb aas xor repnz xor mov nop xchg lcall sbb repz push xor sbb mov aas movsl int3 dec int3 add cmpsb ds mov fldt movsl jne stos mov subl cmp aam jl adc aam fnop cld (bad) outsb (bad) lcall jg pop push rolb fcomps xchg cld setge int3 lods jmp out add push adc pushaw or cmp repz or dec cmp (bad) (bad) inc sbb xor mov hlt (bad) int push mov ds mov (bad) test xchg loop or cmp dec sbb inc push notl cmp (bad) outsb cmp aad push lret enter ja or fnsave mov push outsl stos sti aaa xchg addl cmpsb or (bad) mov fcomps scas adc stc push inc and jo lea mov repnz inc les or mov push cmp jecxz not sub js stos cmp jo dec roll mov mov into cli aaa dec pusha cmp cmp stc ret into push cwtl sbb repz pop dec (bad) fistpl pop mov push adc and imul and ret inc mov pop shlb jle iret cs xorl add les jo xchg decb pushf bound mov lret push cmp leave sbb aad jmp out sbb imul (bad) push mov ret xchg sub xchg popf js add inc cmp xchg xchg xor das and xor add cmpsl cli mov and aam in movsb pop push fldt es push adc ss add fisubr pop in movsb xchg xor push ss sbb lahf cli push ds es rolb pop push mov add mov ficompl in loopne inc adc fadds sub jae cmp ret sbb push (bad) cld sub sbb push loope int3 out dec jecxz xchg mov ljmp push fbstp hlt cld jbe mov mov cmpsb scas arpl int3 xchg ret sti dec pop test xor push fs ss sbb ret jns icebp pushf mov (bad) sbb mov mov sub push and inc sbb mov aad mov jecxz leave sahf (bad) mov mov lret lods mov daa xchg inc lds jnp addl sub pop repz pop dec and aad push std out imul add sbb mov scas mov dec aad jno pop lds mov cmp jmp imul hlt mov lock sub pop inc out adc xchg adc inc insb movsl jnp clc cwtl and pusha and add icebp jae jo pushf or push pop popf sub xchg inc hlt dec and loopne fldenv ret dec dec scas mov xchg sbb adc sub ds mov orl push mov gs pop aaa and mov dec or mov sub adc andl mov lret push cmpsl inc and int3 psubb test pop sbb add jle mov sbb mov jns ret mov adc cmp jae mov in mov mov mov outsl in ret mov lea cmp test jmp movsb dec in fs dec jmp mov (bad) loopne cmp sbb push xchg (bad) and icebp ljmp jmp adc mov lods (bad) mov pop add cmp dec (bad) sub insl (bad) leave and iret cmp adc adc fwait sbb push ret jnp mov out jmp xchg dec xchg jmp xchg adc jmp inc xor data16 clc xchg xor out fdivs leave lods pop fxch cmp pop mov bound dec sub pop outsl fcomps pop xor sarl out rcll dec add xchg arpl push dec lret rorb daa sbb xchg lret fwait sarl push fcmovnu xchg adc add inc icebp icebp cmp jge xchg xchg lcall add mov cmpsb addr16 aaa jmp cs xchg repz pop xchg pop in xchg cltd mov int3 xor mov xchg pop sub mov adc es pop fsubrl repnz mov sub jl mov inc pusha cmp fs add inc add fcomps mov repnz jo xor inc mov cmp xor je ret sbb pop (bad) (bad) dec cmp scas int3 insl dec shrl xchg pop push and sahf pop xchg iret fdiv and sbbb mov or loopne pop push jmp sbb sbb push repz cmp dec imulb test cmp and dec mov cltd das adc xchg mov and xchg lcall push pop ret cmp fildl lret fsts fistp ja mov inc stos push mov jno dec adc push (bad) lods cmp ficom dec arpl adc clc imul arpl ret (bad) jmp sbb add push iret cmpsb stc pop idivl cmp adc gs jo ja fidivr bnd sub sbb push xor (bad) std lcall rclb xchg pop dec outsb loop int3 (bad) fnstsw sti int3 jb das inc push test pop xor jno mov xchg movsb outsl lret cmp pop mov fisttp mov mov xor test into push popf sbb cmpsb pop sbb das push nop out clc icebp pusha (bad) movsl xor push outsb dec cli out jle pop push mov (bad) push dec lcall testl push cmp sub pop mov leave push int dec or xchg adc cmc addr16 outsb mov stos dec mov inc icebp push int sub mov stc loop jo,pt xchg pop cmp mov and mov repnz hlt aam pop fbstp xchg sub in xor add out in lcall jb bound rcrb xor push ja movaps push mov insl and sub pop popa cli xor dec adc pop jnp mov stos movsl movsb mov ret aam lods pop sahf sbb popf mov repz sub xlat adc dec hlt cmp lea inc call test ret sbb xor xor loope fcompl lock adc out leave lret jg adc push jge and lock xchg add cmove cmpsl and dec in inc sbb aaa sub loop popa push xor jns bound push in mov lock insb adc dec (bad) jnp (bad) daa mov ljmp in push sbb in dec das addr16 ret insl inc xchg fistp int3 icebp xor in and xor call cmpsb xor scas lcall xlat pop hlt jbe arpl add int js inc cmp jnp mov mov xor and xchg dec (bad) mov mov sub inc (bad) mov push cmpsl std or cmpsb cmp lods rcr push mov jns adc jl stc jbe or mov xor and loopne sub xchg mov pop repnz and lods mov push inc cmp xor andl jne lds inc fild popf sbb cld adc lcall lret int sbb cmp cmp pop mov lret cli cmpsl jg sbb and mov enter push jne pushf sbb push mov inc outsl mov leave es mov inc xor pop jg movsb xor pop fiaddl xchg les jle cs mov fdivrp inc cwtl mov xchg pop in (bad) mov cmp js cmc mov xchg adc xorl fidivr dec push subl arpl dec xor xor add loop xchg cltd xor jl pop ret xor test hlt mov adc mov es call popa dec add jbe push mov or mov push pop mov mov jl xchg mov loope cmp movsl cltd xor push pop test mov mov imul in cmp push (bad) jae ljmp mov pop imul cmpsl lds xchg push jle cmp mov sbb enter inc mov (bad) sti mov mov pop fisttpl shlb inc mov fldt in ror lcall or pop xor push fwait sub hlt inc sarb das or push inc out inc push cwtl or test mov (bad) jne dec sbb jecxz faddl pop xchg movsl (bad) mov loope (bad) mov rorl xchg push lret dec and repz gs or xchg adc xor jecxz mov push sbb cwtl cmp iret xchg dec and pop rol fs test lret sub dec jmp jns es enter enter loope inc aas mov add rcr test jl dec fldl2t fcomps pop jmp push add insl jne mov int3 mov je fadd lock addl xor cmp mov xchg shll add stc sbb cmp push in xor das jge jp sbb in dec xchg mov shrl and mov inc cltd enter arpl stc xor dec mov mov loope sbb jle or jo xchg xchg lahf orl fcom loop insl jns,pn and sti mov shrb jno rcll lcall cmp fadds aam repz push adc dec mov xor ja add sbb pop push setno aas in cmpsl mov or mulb mov inc push pop rorl (bad) mov add xchg ja bnd sbb fucomip jge fidivr mov dec push cmpsb pop fild inc (bad) loopne iret (bad) pop sub pop mov inc push into inc or lods xchg dec mov or xchg mov gs inc and mov mov (bad) cmc sbb mov popf adc or arpl sbb sahf jge cmpsl xor rorl movl or pop sbb pop cmp popf scas mov sub dec imul in enter (bad) clc xchg cli jmp sub stc mov inc inc sub sarb aad and adc repz xchg or mov notb mov xchg outsl inc bound jno (bad) jg mov stos ljmp cmp adc sub test into mov iret inc test sti icebp test aaa movsl out fsubr inc push mov cltd out out sbb mov add push jns ss xor leave mov or inc xchg scas lret movsl jne jle lods andl mov or mov xor into xchg dec incb or pop in into mov cmpsl and fwait outsl gs movsb outsb or inc lods mov sbb adc cmpsb and icebp mov out lods xor mov xchg xchg nop ss clc xchg xor mov rcll lret xchg or ficompl cmp cmpl xor mov jmp xchg outsb sahf movsl sbb and mov cs test fwait test movb dec cmp and outsb pop shll ljmp sub outsb mov or mov jmp fistpll sbb and sbb pop jae scas add sub dec test sbb push int or mov ds insb mov pop leave jmp dec xlat aaa stos mov sbb pushf pop xor adc push cmpsb lret or xchg (bad) pop sub cmc cmp xchg mov mov (bad) out mov cmp sub jbe scas inc test mov sub xor inc sbb loop push and inc push out dec and ljmp mov sbb sbb ret or jp andb lahf lret fdivs push popf sub in inc repz (bad) cltd out jb mov int sahf ss lea cmp dec repnz sub aaa dec test insb stos jne stc push and dec lods jb mov jb rorl cwtl sahf shr in mov out lcall dec popf lods add ret mov xchg fsts lret scas jl mov or dec xor in rclb in mov movsb cmpsl cmp add rorl mov inc std sbb xor andb stos les mov mov sbb cmp ret call pop cld jecxz (bad) jle icebp mov fdivrp rcr std arpl mov icebp out mov dec aad xor mov popf or (bad) dec mov imul (bad) ja xor pop fcomi lret push scas or push jl shlb pop add icebp inc jmp test sbb stc inc and mov push int3 push stos test pop sbb mov cmp packuswb leave mov repz cmp pop jecxz mov xchg add fyl2x insl mov mov mov mov pop repnz lea repz test iret rol pop pop das xor cli test pop std sub push mulb jle mov cmpsl cmp aaa scas dec dec adc insb in cmpsl int3 lret push movsl (bad) adc xlat cmp dec push and fs adc shrb sbb jo xchg push xor jmp pop xor cmp mov jp,pt push nop adc cmp je add call push and and fs mov in bound (bad) icebp or pop ds jp pop rclb xlat xchg stos xchg or ret (bad) mov daa sub jge pop inc cmp nop into xchg jb test dec gs and xor aam and mov js sbb mov mov fcomps (bad) mov popa xor outsb js sub mov add sbb pushf jo inc insb bound adc lods mov pop dec imul xor cmp mov fdivrl push add dec cltd fwait in xlat inc aaa lret sub imul sbb dec cltd stos mov shll aaa or and jl into sti fdivrl hlt add push add xchg cmp jns dec and ret mov shrl cmp add (bad) sbb imul mov jl rorl sbb shlb (bad) pandn fstpl stc sub push out sbb cmc dec push dec add fwait out inc pop movsb rcl xchg js ljmp xchg and push outsb mov jp xor mov add xchg js insb (bad) and push xchg sub lcall shll mov scas cmp mov test leave in ja ret bound xchg and xor arpl sub clc dec or and sbb call scas loope leave lahf mov and std pop pop shlb insb xchg jle mov insl addl mov jo inc sbb jne pop mov inc xchg in or jb iret vpaddusb cwtl jl aaa dec outsb leave cmp and inc mov shrl dec movsb lods insl (bad) cltd cs push shrb dec rolb mov or cmp mov inc leave loopne js cmpsl pop pop stos mov ljmp push test clc and jns lret lret outsb out fwait jmp inc aad fcompl shlb movsb push mov adc xchg movl sub out dec adc pushf mov or cli data16 pop movsl push push jp pop push aas cmp dec sti bound test dec stos dec mov fstl ljmp pop (bad) jnp lods call inc cs mov stc aaa pop dec and sbb das pop and fldt daa jo pop into cmpsb aad or xchg lcall or test les cs out and out jno xor dec int out inc push pop cld fadds pop xlat lods test jae call scas adc aaa testl dec rclb jns cmpb fldl adc xor inc mov push mov test xor mov jmp sbbl push lods je test jecxz jb fnop les sbb or sbb lcall pushf or xor add cmp in nop test loop jecxz sbb pop jge mov das and cmp nop and hlt (bad) stc pop or jbe ljmp dec pop dec sbb xchg aad push notl movb push call mov scas ljmp je jbe pop mov lock xchg mov mov in cmpsl gs scas scas scas cmpsl lcall int3 (bad) jb fstps dec ss pop leave dec dec ret lret ds stos adc outsl cmpsb adc sub ss pop jmp nop inc or dec incl adcl push popa cwtl sbb xor movsl pop scas and mov fwait mov push mov shll lods int fdivrl repz cmp shlb xchg stos in lds loope jmp dec out sub lcall leave sbb rcrb enter in (bad) mov adc xchg inc loope lret adc push inc sub ds lcall pop (bad) jb mull roll dec push nop mov rcrb mov jl sbb test andl jmp xchg mov xchg cmp or das ror or mov or mov fcompl das push pop jecxz mov lret in mov pop stos loop ljmp imul pop xadd out jns mov xchg addr16 dec fwait xchg pop ja pop pop xchg add sub add push mov mov insb (bad) dec and mov mov adc push and jp sbb push into jle mov pop push (bad) mov xchg mov or and fcomps pop iret push repnz mov jnp std cwtl imull (bad) pop testb (bad) dec mov dec int3 sbb mov mov jno fidiv cmp sarl push lock push inc fimul inc dec mov test movb sbb pop cltd cmovno cs adcl cmp loop mov popl push inc (bad) push mov cmp bound jecxz insl add shll aas aaa sbb xlat and test sahf cltd sub bound lods mov sbb pop movsl mov xchg add leave pushf mov or or fimul js hlt arpl mov aad lcall inc pop outsb xchg int dec aam add iret and push or das pop jmp outsl mov and shl fcompl mov push hlt dec xor cld add add mov test lret push jle add leave pop loopne pop cmc mov mov xchg es add mov pop jle fs sbb or sbb xchg lcall icebp push std repnz pusha xlat aam push jbe fdivrp std (bad) dec loope mov orb pop push push push (bad) imull sbb fcoms js movsb xor ss leave inc test xor jae xor and mov sbb stos test and jnp pop pop gs mov add inc shrb nop cmp cmp gs xor ret mov idivl (bad) or sbb cld aas mov test inc popa sti sbb and lret imul push mov icebp cmp pushf push jae scas jecxz inc jns xchg daa jg pop sub stc mov and test ja and pop dec inc call push mov in or js lds loop ss and shll subb add flds aam dec stos dec subl add add int3 out cmp xor inc push popa (bad) test xor data16 stos repz push mov iret fstp pop loope (bad) sub (bad) lahf mov nop mov xor mov mov daa dec aas xchg jg cmp int test jne or jne mov rolb xchg mov ret in xchg test mov or xchg fimul adc repz jp es aas cmp xchg mov mov sub inc and cmp sbb jo push jecxz jle das loopne iret je jne jnp sbb xchg inc test mov leave lock dec jno dec fildl add lea ds lcall push test mov add lds cmp pop xchg cltd in pop cmp arpl mov or inc jge dec fxch scas xchg nop and les shll inc lahf (bad) mov mov sbb xor inc fcomps in cs ljmp push add or xor fcoml jecxz lret iret imul scas inc rcl fldl dec cmp sbb mov and xor icebp rcrl repz dec cs mull leavew pop enter jnp test pop pop inc xchg sub pop xor popf xchg aas fisttpl ret fwait jmp inc xchg ror sbb sbb out cld mov lahf xor adc push dec mov or cli push push cmpsb sub mov mov xor test (bad) sbb movsl mov mov dec rcr daa inc inc lds xor jge rorb jp and in cmc mov adc pop in cmp cmp sub adc mov mov (bad) push or lods push dec xchg cli mov push sub lods jle call in inc mov mov enter (bad) in dec jp xchg adc xlat add fldl cmpl push pop inc data16 mov inc out shrl lds (bad) adc in mov push daa stos jmp cmp popa jbe sti and iret mov adc ss sub push inc xchg jecxz sbb or pop xchg repnz (bad) imulb je test and clc test and aad push es mov cmp or outsb andb add nop xor adc fdecstp leave (bad) push lods jl out scas roll push mov das sub stc lea shrb imul or call jne lcall push fistpll push adc pop cmp gs scas aad test sbbl xor adc add test xchg lret out cmc inc xor and add or popf dec adc sbb xchg mov iret mov push rcrb out pop pop inc daa fs xchg leave pop shlb ret cltd lahf push push jns (bad) sub fcmovu fs stc or jns mov cmp mov sbb sbb xchg ja xchg lds mov jmp call inc dec mov mov xchg (bad) rclb insl push movsl arpl jge shl adc and push in stos mov and pusha insb es xchg into movsl add and lock xchg cmp enter inc sbb std test pop out push jp cmpsb pop das (bad) add pop mov cmp into out jl xchg mov push xchg pop (bad) mov and repnz std sbbb sbb rorl mov push out pop ljmp pop xchg (bad) sub loopne (bad) xchg sub scas sub sbb cmp inc dec movsl gs sbb fnstenv iret mov daa mov fbld cli xchg inc adc int3 dec or aas cltd imul lahf jecxz cmp and inc dec xor xor sbb rorl dec sub xchg xchg pop cmp out cmp lods pop fimul cmp call adc mov mov add (bad) (bad) loopne and test sbb (bad) repnz in cmc sahf jb ret cwtl out lahf repnz iret dec in cmp lods and test add pop sbb adc mov and in sbb dec rcpps mov add pop sti arpl inc ret pop jmp loopne,pt inc xchg not cli xor jb ret and jb je call ds add mov pop das (bad) push or or imul add cltd mov cmp jmp push (bad) imul hlt scas imul mov lea test jne popa rclb (bad) pop daa into cmp ja cmp cmp mov dec pusha hlt lcall adc test sub rolb or pop xchg cmp jnp pop pop inc inc (bad) or pop jl fwait and or add nop inc jae shrb jecxz mov push fdivr out roll loope (bad) divb addps inc push push aaa and sbb lods cmp and mov xor gs cld cld sbb xlat or inc ret daa sbb xlat pop pusha pop dec lods pop aas inc cli pop xor cli xchg in xor imul mov int3 lock outsb sbb adc aam push and daa xor mov stos add cmp cmpsb out js,pn mov int xor (bad) pop mov movsl and icebp fnop mov (bad) ja xchg scas push ja or and rol fneni(8087 mov outsl into or sub xchg cwtl sbb mov insl out jne shrl sub insb or fistp mov enter out xorb mov rcr mov stos push inc jmp (bad) xor or push imul test mov out mov clc movsb xorl das mov jmp repz enter lcall lods push and pop and push ror aam xchg xlat push out push push jg js ret frstor pushf stc lret aam pop or lcall xor std add dec xor dec xchg jb dec bound jne out mov push insl (bad) mov mov xor lock arpl or sbb xchg loope inc cmp outsb jmp pop dec pop xchg mov (bad) pusha inc les jnp inc std xlat push cmp pop stc sub adc out mov in jl add aam mov mov cmp sub mov arpl stc sbb dec sub cmp cltd sti add xchg inc cmp lret dec lcall push adc inc std addr16 mov dec (bad) lahf daa or movsb push push mov cld xchg iret lret cmp pusha mov es fs cwtl pop jp mov push rcll pop iret inc stc jbe push outsb in scas aad out and xor pop (bad) cmp aas adc mov lret sar pop pop mov sbb fisubl js call and outsb jmp mov mov addr16 movsb push mov adc sbb rcl cmp mov xchg aam push das in ret xor mov xor pop fs lock cld inc mov xor jnp push movsl jmp add or or jns jmp xchg xchg mov jle roll sbb inc (bad) jp ficompl test into add enter clc mov aaa inc inc outsl adc imul out pop sub ds sbb or jnp mov cmp enter popf jne fldcw push mov sbb gs add cmc into mov xor loop hlt push sub sub pusha stos ret lcall int outsb ss xor jecxz pop shlb jmp adc call in call xchg xor cli inc notb enter mov pushf push or mov cli inc dec pop stc inc mov pop cmp aas cmp add je (bad) div jno pop xor ljmp xchg inc push adc cli lret xchg aam cmpsb xchg ss lock mov jmp jmp daa js push or push scas dec icebp mov (bad) cs cmp pop call orl sub (bad) gs mov xor xor clc push scas fadds xor aad pop mov xchg fild nop lret (bad) jle loopne cs std sub fucomi arpl sub jns push pop mov lret cmp arpl ds neg sbb das call addr16 push fsubrp xor adc jae and pop insl divb adc mov pop repnz hlt pop in xor xchg bound mov mov xchg testb inc ds sbb mov orl sub stos aas push (bad) sbb jns and pop sbb popa popa leave jnp cltd lea mov lock push jbe (bad) clc inc in sub jge mov sub fstpl dec sub rorb mov orl movsl push out fadds cmp cli repnz imul ja add mov and inc pop mov test lods dec xchg and iret pop dec jnp dec test push cmp scas int push jg ss imul insw pop enter add jns repnz jae pop push mov mov outsl or inc fistpl jbe mov cmpsb mov mov (bad) or mov adc mov gs ss std sbb mov sbb lret jl test int mov (bad) mov test add add lcall adc mov imul pop cltd outsb loope adc push stc jmp add push mov ljmp les jnp dec sbb adc std inc mov jbe sub or into sbb test shr sbb sub xor sub movsl inc or and mov jle adc in fwait (bad) insb mov outsb xor int shlb in call ja xchg enter push addr16 rclb ss mov add inc test mov pop sahf xchg xor jg loopne loope mov mov mov jns and mov pushf in aas sbb push mov dec test and sbb (bad) jb jnp mov bound fs arpl dec jb sub outsb dec rcr sbb ljmp sarb xchg jmp mov (bad) aaa bound jnp sub int insb je insb scas push xchg mov (bad) cmp mov pusha xchg and mov rcr cmc push jne sbb (bad) xchg and xchg add xor mov lds xlat mov out movsb out or mov jl imul xchg test ljmp outsb ret push mov xchg dec popa jnp mov mov adc loope cmp sbbl mov sbb pop xor pop jne lcall aas gs dec mov in popa inc add cmc les dec mov sub repnz mov out pop imul rcll enter bound out leave lods inc nop cmp leave sbb lea sbb mov lods inc bnd repnz mov sbb sbb fs in (bad) pop mov (bad) clc dec rclb cmp fs ljmp das test fwait test dec cmpsl jbe lret xchg mov jnp mov dec mov and xor hlt aam cmp test nop imul sub andl in sbb xchg sbb inc mov lods push xchg lret pop xchg push dec (bad) lret push mov movsb imul pop jo cltd fld mov lret fsubrp sar xchg mov jmp imul and pop mov jg test mov xlat or in pop fwait xor out or jno mov movsb ror (bad) les pop rcrl das pop add push adc pop mov (bad) pop or inc xor cmc mov arpl push hlt pop pop or pop mov nop (bad) xchg aaa add sub xchg mov sbb or sbb addr16 inc and mov adc jnp cmp mov lret pop mov and icebp sti push or lcall jmp cmc (bad) sbb je das clc test mov sbb fmuls jmp aam outsl mov sarb sbb in lock add daa andb jle test sbb inc std (bad) pushf pop push and jbe pop cs fistl push xor mov add sahf (bad) loope push inc jl mov mov mov fnstsw into xchg rcrb sbb inc jno xchg imul lahf mov or mov jmp mov inc inc in inc addr16 pop push push add mov xchg push adc xor inc into push mov push pop lahf jg gs scas mov jle sbb (bad) xchg testb mov repnz pop loop sub out adc std pop dec pushl (bad) xor xchg add fmulp mov mov jecxz push add cli push scas (bad) xchg sti pop mov jb pop ljmp pushf shlb push rclb sub in ja ja test inc mov push test mov rcrl pusha dec mov mov xchg (bad) pop mov xchg pop enter std out dec pushf push clc push or sub inc sbb adcl popf lret and sub (bad) outsb sbb sbb mov rcrb push lds jl mov push sbb stos outsb int loope (bad) insl mov cwtl movsb negl xchg jo insb mov popa mov pop popa arpl inc repz out jl sub or mov mov mov jge add mov xor (bad) cli sub jbe xlat or lcall dec xlat cli out adc sbb enter and adc ja cmp adc lret (bad) outsb test cmp jmp push stos repnz les mov add fwait enter in push xlat mov sub jge or inc xor inc mov (bad) in cmp (bad) sbb xor sub test ljmp cmp int xor movsl out lret jne fstpl stos mov dec imul (bad) je cmpsl push call mov (bad) mov dec (bad) jb (bad) push lds fs call jp push dec cwtl sub sub and cwtl lock adc mov repz aam js cwtl push (bad) into jl inc xlat loope mov pop jns fs jle and es bound inc xor mov push fwait dec and cmp sub sub shlb sub pop and in sub mov shrb rcrl test loope inc push mov inc inc or push jno popa and pop call int3 inc adc mov lods lret cmp sti sub test fimull push dec lahf cmp (bad) mov test inc mov mov (bad) mov stc dec push popf adc jle inc aad inc lods dec cli lods adc xchg and int cmp test dec mov adc testb icebp cmp jmp cld stc nop hlt and jp sahf jge push jno jns daa fldcw pushf (bad) ja sub iret (bad) pop or shlb cmp imul dec lock pop xor lock add popa pop arpl pop pop push inc adc cmpsb inc adc out rcrl adc push mov cmp iret pop push jmp or push and pop inc pop negl aaa lea jae pushf test cmc push jae outsb call (bad) lods rcrl mov sbb les lcall pop ja jmp call popf pop daa dec push bound (bad) lret adc ds adc push (bad) repz pop mov mov movsb jnp sub jp call or adc adc adc pop xor mov dec cmc inc int cmp jmp xchg cs inc ror cmp ljmp xchg aad shrb (bad) scas pop cli dec push pop mov int3 xchg mov mov jno push and lret jle inc ficompl add (bad) in cmpsl (bad) rol rcll push shrl xorb cltd mov sub and mov pop int3 getsec in sbb imulb mov stos mov hlt js xchg addr16 mov stos fcmovu ret mov std aam cmpsb ljmp jmp jle pop mov cmc or fs testl adc aad jae repz xchg mov push mov rcrl jns sbb pop lods decl data16 inc dec fucom gs or push inc push mov mov add mov ret test mov ret icebp sbb sbb (bad) adc jnp add test fbstp push rolb mov incb or add xor incb mov sbb shlb adc cmc stc (bad) and pushf sub mov adc addr16 inc movsl and adc mov pop sbb push mov dec lret or jecxz stos pop lcall stos cld fwait jo enter shll or je das mov xor popl push xor std scas add sub lahf fisubl lock xor xor enter ficom add sbb adc lahf mov jp popa pop int3 xchg push push inc adc mov (bad) fisttpll add or and fcmovnbe sbb mov sub fsubl sti aas xor mov iret jle and lcall fildl rcl dec movsl ret je xchg (bad) and pop (bad) mov idivl jbe movsl movsl sub hlt jle dec xchg pop add test sub xor mov ds pop cs or lods imul insb (bad) les nop lods mov data16 lods mov loopne stc inc adc test dec push (bad) fcoml cwtl inc push dec mov dec pop mov mov push popf rcr vcmpss sub scas int inc cs mov in sbb stc scas ret iret mov sbb push pop add and paddsb and std in (bad) repz (bad) fwait cltd push (bad) loope or lods popa insb lods fsubrp clc jmp jecxz out push sub fistpll arpl faddl xchg jo (bad) sub (bad) cli lahf lods notb pop push xchg jg sub bound (bad) or add hlt jmp dec mov (bad) jl movsl push and pop xchg test int (bad) ja,pt jne xor xchg xchg cmc outsb adc leave cli lock dec and adc pop sbb jne fidivrl fdivl push hlt stos lock xchg jb hlt mov sub sbbb inc and push sub xor mov xchg stos loope addr16 adcl add cld push sbb inc (bad) jno test bound jg pop xchg push (bad) sub xchg pushf sub xchg gs into cmpl mov cmp sahf adc ja stc roll xor and stos cmp (bad) and xchg movsb (bad) lret je call lret enter (bad) sbb jmp out cmpsb mov aaa ljmp shrl fistl dec and hlt roll add inc imul das pop data16 mov and roll jae push iret in xor cli inc mov insb cmp jl fimul fldl xchg in dec test push lds sbb mov pop clc mov xchg pop mov adc sub (bad) cmpsl xchg adc sbb in adc (bad) jp mov mov insl xlat jl inc dec jne or call (bad) mov pop repz lods in xchg sbb pop or dec (bad) lock arpl repz jg shl lea xor xor pop pop inc js and out arpl adc aas jl cmpsl lods sub shrb push sub push mov push fstps inc fildll pop out dec rorl cbtw sbb and or xlat or mov mov cltd xor out xchg push das inc out (bad) jne inc pop aaa xchg aam mov ds (bad) mov xchg out mov xchg (bad) stc imul dec repnz daa icebp cmp jae (bad) or pop cmpsl outsl mov (bad) je jnp or je jno fcmovne pop add jg test test dec mov test sub sarb xor push push xchg rorb mov stc shll dec fwait dec pushf fs adc cmpsl ljmp (bad) push dec xor (bad) cld pop mov addr16 ljmp jmp adc push fsubrs push ljmp jecxz in hlt and mov insb inc sub out fs and mov lds inc scas (bad) hlt adc add js jl outsl dec int inc fnstenv mov push andl lret sbb sbb mov scas sbb and push (bad) in insb mov mov fsubrs or int nop jno cmp enter sbb cwtl xorl negl inc shlb pop push inc xor or and aaa stc jge test jbe xchg xor pop lods (bad) hlt inc xor push repz out int mov dec fldcw lods push lods or mov add xchg rolb call adc sbb xlat jmp (bad) or and aam sbb mov loop mov push xchg nop imul xchg mov int3 es ljmp mov mov add in mov push push push scas pushf js lods push mov inc mov xor popa mov mov popf test movsb push pop (bad) in push mov insl (bad) out mov popa push cmpl out lds arpl (bad) inc pop dec jmp jno xor outsb popa (bad) jmp xchg pop xor xlat cwtl or cmp mov xor stos mov mov add stos std loope dec jp lods add dec pop (bad) cmc inc and sub mov stos int3 lods sbb jne mov xor mov lret cltd (bad) jmp push pop sbb xchg pop mov push nop sub mov xor int3 les xchg mov sbb icebp mov rolb mov adc mov push inc and mov jp push adc aaa xor dec inc xchg (bad) jns aaa and sti or cmp mov mov in sysenter xchg ret sub xchg sub enter pop mov xchg and subl and inc fidivl or ficompl xlat mov outsl wbinvd repnz in in and loopne jp lods or outsl fcom lret cli data16 lret dec pop sbb scas push or call imul mov pop rcr push pop push dec jg sahf mov sbb in push loope push sbb ret pop fidivl icebp xor das repz psubb sub pop sti jnp aaa fsubr fdivl xchg or cmp rclb fist dec jge btr mov push push xor jo xor mov jae in inc xchg ja push mov jp mov lods fs je jmp adc or lock ja xlat negb fidivl inc (bad) call rorl push pushf insb mov cltd push fdivl inc and push cmpsl push enter mov pop icebp arpl ficompl jg sbb cmp lret dec push mov mov popa lock test mov lret aad add pop cld sbb cmc cmp jae add out ja loope push push mov dec sub sbb sub addl lret stc push sahf cmpsl ljmp jle cmp sbb in ja push loop loop push and lret lods jns divb ret fcomip mov adc ljmp adc in or inc rclb mov lock jno arpl xor dec icebp xchg loopne scas mov mov or jns dec (bad) push lret add xchg pop rcrb dec inc add xor xor int3 stos add pusha arpl sbb sbb inc mov sbb jmp in add jns mov fildll push fimul test enter pusha aas arpl jae sahf mov adc cs lea or sub popf sub cmp jle shlb (bad) fldl loope xorb sub jge pslld rcl je popf shlb xchg stc mov jle arpl in scas cmc mov or inc jp xchg (bad) lods stos loop arpl pop cli clc sub pop pusha repz ror adc xor xchg fmull clc mov mov mov mov test jmp add leave mov (bad) cwtl cmp mov pop ljmp imul dec dec ret icebp mov test mov add xchg sbb mov sbb in mov xor mov dec adc int3 mov (bad) fbstp stc mov imul push jns xor mov or aaa ficompl das (bad) mov push cmpsl popf mov nop cld cmp sbb cmp stos cs mov insb das xchg jno shrb jb scas and movsb sbb jg lds jb dec mov ljmp notb mov xchg mov std add insb leave push cmpsl mov push dec mov addr16 mov jns or movsl cli jp pop inc adc int3 iret adc adc cltd ja lret cmp pop xchg pop iret in or jecxz (bad) out add cmp stos xlat pop addr16 mov add flds sub xchg dec push push or fwait xor xlat or cmpsb hlt aaa enter add inc inc push sbb int add mov xchg xchg in (bad) lret xchg stc repnz int3 in sarl adc mov les mov icebp movsl pusha out addr16 lods (bad) and movsb mov data16 pop push push in test aas adc dec and adc test stos js add je outsl xor pusha pop and loop jge dec cmp and push pop mov adc add adc cmp mov and mov cltd inc fildll sub jmp sbb or arpl loopne xor cmc shrl mov sub jp push insb movhps inc jge lcall add mov dec dec pop mov mov jae cmc inc jae push cwtl or jge outsb jmp out insl iret mov (bad) mov inc or mov cmc sbb mov mov ret ds das cmp and push stos xchg push xchg fldcw sbb pusha adcl jecxz hlt jo xor fsubl enter mov xor push inc jo (bad) jno lahf mov (bad) hlt push jp icebp daa addr16 movsb movsb (bad) or mov mov movsb imul lock jo push cmp or push sar pop and (bad) xchg sahf in mov add xchg nop dec cmp mov pop gs push push inc aam mov test sbb jno xor mov mov mov mov daa orl in mov inc mov xchg push jle (bad) and in dec mov and lret jae inc mov jecxz sub mov mov lea add rorb out fldenv fildll adc cmp xchg icebp lea and push test adc sbb adc repz cmpsb mov dec dec adc add and inc scas sti into xor and js mov push and mov push std jnp aam out cmpsl sbb and cltd insl in gs mov push and mov cmp push mov dec imul lds fdivl cmpsl sbb pop popa in cwtl push sbb sbb sub push fwait js adc xlat and and pop lcall or cwtl in mov xor ss push push adc mov addr16 sub (bad) fisub rclb jge ljmp (bad) rolb inc test jb cli mov sarl sbbl inc inc mov mov dec enter and inc lahf sub lahf xchg sbbl mov fs mov dec stc lods daa outsl (bad) push into (bad) pop movsl loopne xchg lods int3 jp mov mov lods mov ret test sub aam je xchg fmul pusha jp cmpsl arpl xor fnstcw mov or ljmp fdivrl push (bad) mov pusha scas adc or mov loop loope pop push cmp inc fmuls std fildll lock and ja jmp js into in iret inc fnstsw fnstsw fwait inc inc mov fild adc adc or mov mov jge jecxz or sahf jle and outsl adc (bad) jo cmpsb out adc insl enter dec scas jl cmp inc scas dec sahf adc shr pop (bad) jl pop dec jecxz test (bad) mov int3 lods mov mov test (bad) out in jns mov mov movsb rcrl orl jno add mov sub arpl sbb lcall mov xor inc sarl jns sub cs pop jg jmp adc lods in mov js mov jmp pop call sbb and sub movsl mov fdivrs jmp int3 lahf fmull jno sbb jne addr16 negl std ss iret iret scas jp xchg xchg adc notl sbb sbb sbbl inc jle or loop push sub stos cld sub sbb jb cmp mov cmp xchg xor jne daa xchg shlb pop cmp imul mov pop (bad) les inc scas xor xchg fisttpl and sub add xchg mov roll movsbl loop mov jle (bad) leave aaa out push mov es icebp gs jl jno (bad) mov jno mov lds fsts packuswb outsb xchg mov mov xchg mov xor push aaa cmp pop test push push mov dec mov adc jmp lods and test loopne pop cmp pusha xor or pop std jbe scas cmp pop pop in xlat pop movsb jno lahf idivb push mov sub pop pop jns lods imul js cmp adc push xlat mov lods movsb push divb std dec out lret xchg pop or mov pop loopne push or daa inc push or (bad) sub mov jo pop sub sub add push test mov imul imul jne pop aad push je pandn adc jle add adc push dec test mov push js leave xchg test or leave dec cmp push sub mov rclb pop sub pop call outsw scas mov jne mov aas movsb push in (bad) repz js fwait in xchg jbe and add jecxz call xchg andl ret xchg jecxz fwait pop stos xchg jmp sub inc fstl sbb je fcmovnu (bad) pop cli dec addr16 fnop cmp dec jmp stos inc cmpsl les jecxz daa mov add inc shrb mov push push mov in test push xchg sub lea push push in cli fsubrs lods inc inc cmp mov adc sbb outsb jecxz fldenv cmc insl push push xor imul add les aas pop leave mov test and xchg jae xchg hlt cmpsb addr16 outsl xchg dec inc dec (bad) outsl xchg cmp mov test pop jecxz (bad) mov push mov (bad) mov neg mov sti or sbb mov testl ret pop cld add mov xor fild rcr jne xchg xor jp dec in lret popf sub cmovno stc dec sub xchg pop and or dec adc xor andl sub fsubrs cli subl mov test addl test push pop add (bad) sarb mov dec add jg add cmp sbb rcr in cld jae (bad) xor mov xor lock push xor bound sub outsb cwtl daa sub pushaw jae (bad) jmp fwait xchg push scas lret add es jne test adc dec sbb stc pop out sub loop ss int3 sbb cmp mov cmp lret inc xchg mov xor (bad) pop inc pushf cmpsb aas or cli testb sbb push (bad) fwait xor sbb mov xor mov cli jl jmp lods lea out mov ficomp xor inc pop dec mov fisubl add js adc lret xchg jno add icebp or fsts cmpsb jg jno and pop dec popf enter cli call cld push pop int3 sahf mov mov xchg outsl xchg sub push je lea jo mov insb sbb insl les lret push pop loopne,pn js sbb sub xchg mov jae mov arpl ficomp mov in or (bad) mov rcrl lea dec mov mov lret aam repnz cmp fisttpl hlt jae data16 sub jmp int3 xor rcrl xchg mov jnp jp out clc pop adc sub dec repz sti std cs hlt mov call pop or scas mov sub jle fwait (bad) fbstp mov mov sub xor xor ljmp dec fnsave xchg inc stc or inc jnp add test xchg (bad) push rcrl fdivs mov pop cmp mov popa mov inc and adc cld int jecxz sub (bad) and test xchg testb xchg adc sahf aam cmp out sbb mov jb stos sbb orb outsb adc sub aad cmp sbb fsubl sbb sbbb pusha mov inc int lods mov ja js lea insb pop loopne inc shll jne test ljmp mov fnstenv dec mov mov sbb jnp jg sti lds cmp rol shrl jmp test jp mov test sbb enter cltd aas cmp call dec nop and push cli cwtl nop inc cmp lahf ficomp cmp inc les loop add out es or stos pushl pop (bad) into rcrl xor (bad) repnz jbe cmp cmp ja (bad) push and loop xchg lret repz sub sbb pop jb mov pop sub push mov and push push push sub imul faddp add sbb adc out into incb and pushf int3 jmp push adc xchg movsb push or ss pop or sbb push in jecxz fidiv push inc mov fwait or push add fldt test insl out inc rcll mov xchg pop (bad) es xor pusha jmp pop arpl pop dec inc adc push sbb mov (bad) mov mov stc fistpll xorl xor xlat lods sub nop jns push pop mov mov mov sub (bad) lret inc lods lods aad inc mov clc mov loop and (bad) arpl push rol cmp add hlt xor or xor in rorl push pop repnz dec push aaa mov fcmove or lret jmp aas and outsl push sbb pop mov fs push (bad) sbb leave and sahf adc or icebp xchg add xchg mov bound cmp lds sbb add imul add mov pusha jg bound xor and cs xchg push mov xor xchg (bad) ljmp clc mov xor addr16 fcomps jl mov mov mov push fidiv loope sti cmp aad movsl xchg mov mov add xor and dec scas sbb xor hlt lret icebp add sub jp xchg mov sti movsl dec adc mov jmp fs inc adc pop push repz sub sti push loop sbb jle,pn pushf enter sahf pushf movsl lahf lea sub mov stos inc imul mov lds out and add cmp ret xchg xorl dec daa push stos push jle push xlat dec pop push loop sub icebp mov js xchg cwtl jnp mov (bad) adc xor insb outsl leave (bad) lret cmp pop pushf mov dec div stc mov sar ja add jl inc (bad) xlat clc bnd xchg push push xchg jno out and jo (bad) lods test movsb cmpsl jnp jno out lcall inc pop jmp int sbb jns aad into sbb sbb mov push mov sahf leave mov ja test jbe inc fild outsb js sbb or js xor das or xor or bound sbb lods push fdivl imull adc inc xchg ret push cs mov sub adc jmp or cmc mov push in inc ficom enter pop adc (bad) xchg pop pop xchg pop cmp lea or sub mov inc test jbe pandn pop cltd xor dec pop mov cmp int3 cmp mov fs in mov leave mov xlat mov ljmp xchg mov mov sbb and xchg leave mov mov add scas mov mov in (bad) (bad) and inc sbb in in cmp lret xor in mov mov fildll jae push test or adc cmp fiadd (bad) jne roll adc jae xor sti mov jmp ss bound outsl mov into add movsl lods adc bnd mov add in fnstenv jae inc (bad) cmp adc call das adc call rolb xor pop add xor (bad) popa pop test push and sub sub xor outsb mov inc lock (bad) push mul int3 and fldt cmp inc dec and (bad) fmuls jne pusha mov subl sub test pop jb shlb xchg sub pop cld add imul push cli das jne xchg mov fcompl fstps movsb push int3 mov xor mov lahf mov xor cmp decb mov ljmp pop adc mov and xchg test (bad) mov push lods ja outsl shll shrb lock jge cmpsb sub mov nop or lcall imul pop xchg lods cmp out int sbb movsb icebp outsl push and jae push cwtl (bad) sub insl add push decb hlt mov das push sbb cli and insl test and xchg push inc inc dec loope add xor push pop xchg and addr16 test loopne cmp out sub in loopne pop and jne test dec xchg push mov jb (bad) js ficoml sbbl sub in sub mov das rclb jno xchg cld test scas push shrb mov jp lret out pop jbe mov mov pop cmp pop xchg cmp bound inc xchg sub scas push push cmp push cmp call jl cs lret and push lahf imul incl or push repz or inc ret cmc daa inc lcall xlat daa pop sbb lds jg int or (bad) out in ss pop subl aad sub mov sub pop roll mov xchg (bad) push xchg sti fadd and mov icebp xchg jno,pn xor call jmp cmp loope fcmove add lods leave not sub push jp mov or pop sub jnp bound dec dec lret dec enter mov mov add push inc ret (bad) lret adc (bad) adc in lcall add dec (bad) jge mov notl test jle sbb xlat mov lret test fadds xlat test imull dec lods inc and add mul sub sbb mov xor xchg or mov loope ret mov int3 fsub data16 lea and cmc outsb mov push outsb adc roll call inc enter add dec cmp jno insl or sti dec mov sub rolb xchg pop jne mov sti (bad) lcall or fs or std sti jnp or jp shr xchg mov pop add hlt movsb fisttpll sub and inc mov cmp add negl dec push mov mull fbld in sbb jecxz mov sbb mov mov ds jnp xchg sub fincstp pusha loop xor jg mov or divl mov jmp jno dec pop mov mov es adc dec mov inc push stos inc pop inc dec pop daa int mov and out jle push pusha and add mov lods sbbl jno or push aas mov add jle push inc adc (bad) divb inc push inc imul and xchg pop mull into jno mov or xchg pop adc iret dec add add in xor lds push bswap mov or and or jecxz fdivs das xor mov jno xchg lea push sub ds cmpsb (bad) mov push inc call int das orl lret sub enter imul push mov clc mov shll psubsw jns cmc pop mov jo notb cmp (bad) mov insb das mov (bad) mov jmp aam or push jmp xchg mov (bad) jge mov cmp stos mov lods out ja adc mov sarl (bad) fnsave add and xor dec mov xchg mov or out mov mov pop xchg mov xchg sub leave mov mov std dec mov or sub cmp dec sub sbb inc jl ds add icebp push dec pop ljmp cpuid mov std mov and xor addr16 inc dec or dec sbb popl into ljmp imul adc xchg add rcr mov add adc sbb jle test mov out pop (bad) call in cltd push sbb lock xchg inc add cmp mov roll fdivs lods movsl pushf push mov jns mov fnstsw push add push lea adc dec xlat scas mov ret add push dec inc sub mov and push (bad) xlat or mov mov and (bad) pop jmp clc adc arpl dec in sbb (bad) pop inc cld lods xchg push mov addr16 and lahf insb push xchg jo movsl scas xor iret ds lahf xchg cmpsl fdivrl (bad) push pushf int3 add push lock xor jae in divl xor sub dec jne adc pushl mov ret mov mov ficom xchg dec frstor adc aas and pop inc push mov in rclb into movsl dec pop daa je rcrl push sub mov jmp pop adc in (bad) mov mov faddl jmp xchg aas ret inc addr16 or test xlat push and pushf sbbb sub in adc outsl sahf call pop out or jmp ja mov pop (bad) js pop mov das nop lea daa stos cmp cmp aaa sub inc pop inc ljmp dec push push jo aaa fwait bswap pop ljmp sub sbb out push rcll sub xchg fdivs test out jle outsb mov out ds push adc lret mov lods pop loopne int3 jg fldt or push inc push inc movsl shlb cvtdq2ps pop fs jmp inc mov test pop das in jp loope int3 imul sarb sbb xor mov cmpsb aad push mov es arpl adc ds test pop fwait mov xchg pop mov idiv iret (bad) jae ret or or sub cmp iret leave mov jnp dec insb jl ret xchg mov popf pop lahf jnp inc insb mov pusha lcall not sbb sub cwtl cli loop cltd xchg lahf jg add std pop sarl fs add sbb enter sbb repz rclb jnp sub loopne loopne int3 loope sub scas adc lcall lods ljmp lock aam sbb mov push sub inc loop push repz add out xor mov jge,pt out add lret jne repz cwtl subl adc or lods jmp dec pop js aad pop insb and into inc dec roll sub push loop out or rcr subl xlat (bad) stos aad das leave mov jg mov jae ret push xchg repz das xchg lcall rcr ret inc push add lret add or imul pushf addr16 xchg fcompl dec jne stos fwait sbb les in dec adc sbb jmp adc out sbb mov jns sbb mov in adc push ds push jmp sub (bad) dec sar mov fidivl out xchg mov xchg inc pop jge fldenv or add inc inc mov dec sbb push cwtl out and outsb and dec mov aas sbb inc hlt push jmp jno mov sub fidivrl or shll loope and or cltd pop mov outsl mov daa lock and fsubp rclw mov push inc adc adc add mov in xchg in (bad) jo mov sbb xchg mov or mov (bad) add lret inc cmp jne jb andl in xchg jns adc cmpsb loope sub pop cli daa mov pop fisttp mov push jg mov add (bad) ljmp cmpl lea rcl and shrl not jbe xor pushf test mov pop adc xor repnz test dec mov repz add xor loope sti out ja jnp hlt call ja lods cmpsl popf sbb xchg enter test add sti adc or pop out les inc jbe push mull and lea fucomi popa lds push cmpsl jecxz xchg cwtl popa (bad) dec and xchg data16 insl inc ret aaa push lcall adcl enter pop lds adcb push push sar push jecxz inc and sbb mov jmp fmull lock adc dec mov movsb xlat mov push aas outsl mov inc shrd movsb cld (bad) mov into mov fisubrl push lret (bad) mov sub cwtl mov (bad) nop adc xor jmp add leave xchg outsb sbb lcall dec lret xchg fsub data16 enter aaa out dec repz imul adc adc dec push push imul inc imul jbe and cmp dec in mov aam popa js push out inc enter rorl js rorb pop push xorb pop mov repz cmp sbb mov or push daa lahf les and dec nop sbb jp jecxz jbe pop in mov lret inc pop test pushf xor (bad) out cmc dec stos test aaa and push in negl jp sub repnz push jno push mov mov shrl mov fs mov testl sbb and sbb mov dec ret push aad mov mov hlt cwtl in lock addr16 jae jno adc lret or sbb movsb and (bad) repz mov rcr loope fstl paddw dec in mov sti add push test (bad) mov imul in or cmp leave arpl jae add pop out adc mov or lods sahf xor inc xor lds push jnp (bad) xchg jl xchg ss cmp popa sub fwait stos mov enter aas jae stos (bad) xor jae pop int cmc in inc in out lret xchg add jnp pop movsb push mov push int3 xchg in nop (bad) mov out xchg and leave rcrl aad push jp fidivr xchg outsl rcrb pop (bad) in xchg dec je jecxz sbbl faddl aaa xchg sahf loope (bad) pop xchg lds sbb add dec loop adc outsl and out cli notl push mov mov mov loop pop jl ss pop mov lret enter pop mov mov mov push scas sbb sbb aam push pop (bad) imul push bound mov jl std pop sbb jb loop test in enter mov or arpl push sbb push enter fs movsb jns rcll fs mov (bad) std pushf lds xchg (bad) repz jbe add (bad) mov pop insb dec push shr repz aas jb in adc (bad) xor cmpsb icebp jb pop jo pop sbb rorb pop sbb inc std popa int3 pusha out dec (bad) sahf das inc adcb popf mov dec mov cmp adc sahf scas popa dec sub sbb sbb int xchg aam or sbb xchg jmp mov stos in (bad) setae mov dec (bad) jo push pop fdivrs jbe fs pop inc or sub pop in xor add pushf dec pop in mov in int3 gs pop popf dec idivb inc (bad) (bad) arpl push sbb sahf mov fs push imul aam push push (bad) mov nop lret popa insl movsb stos mov mov mov sub ljmp or loopne lea jb inc push mov push mov icebp lods sub out sarl pop idiv xchg das test or sbb jb xchg popf push xchg pop push int3 int xor mov and imul ficoml rcrl inc xchg xlat flds mov push pop andb in pusha cld fnsave mov les aam rcrb (bad) cli clc mov lods mov je cltd fwait mov inc cmp add xchg sbb xor sub inc inc adc (bad) iret pop outsl lock fsubrp mov (bad) std mov fsubs loope (bad) mov jbe scas jbe cmpsb icebp xchg and (bad) xor xchg fimul mov rorl in (bad) ja dec cli push mov adc rsqrtps nop ret lods aas enter lock aas mov ret movsl ja (bad) loope sub in in sahf pop inc dec sbb mov and repnz adc inc sub sub dec dec in push cmpsl mov jno adcb sbb cmpsl in mov pop loopne enter push jl adc lods adc out dec sti xchg mov jmp add add stc aam sbb xchg icebp mov xor mov dec cmpsl pop add sarb lahf (bad) fwait mov pop shll sbb rcll xor cmpl dec test sub sbb popf sbb movsb add pop leave cmp mov sub adc adc aam sarb sahf in insl sbb lea es iret push inc pushf sarl rcr ss push dec clc or adc divb in dec push add push xchg lcall adc dec adc push add cmp and sub ljmp fnstsw mov xchg jb sub inc add jo aaa loope pusha arpl rolb imul imul insl push ret jae cmp iret addb mov (bad) sub fs adc dec sti addr16 jnp push sarl add das push adc cmpsl ja add and pop (bad) mov (bad) xchg cmp mov pop inc mov or insb mov lret mov movsb loop jbe ret dec cmpsl in add sahf dec (bad) mov xor cmp insb sub in xchg and stc adc mov rorl daa xlat gs iret inc orl insl (bad) mov mov pop cmp cmc sbb in xlat in leave inc add call adc pop add lcall sbb addr16 stos sbb out subb push dec inc jns or cmp cmp scas fwait jmp xlat ffreep sbb mov and mov lods mov out inc pushf pop inc jno (bad) iret xlat mov (bad) sbb (bad) leave insl jmp jnp cmpsl xor stos mov sub and aas mov (bad) mov lcall xchg xchg jmp add (bad) clc cmp inc shl jnp and inc in mov stos push fs add lds outsl je repnz adc insl lcall fnsave ljmp xchg lret inc rcrb les dec dec mov pop add popa popa fimul lahf dec fsubl xchg jp jecxz in out xor xchg jmp inc pop stos into push movsl (bad) stc pop cmp ss mov mov lock test jg xchg jmp mov stc xor mov mov insl adc stos ret jnp push adc jecxz popf icebp (bad) js jne xor dec sbb frstor cmc mov shl in repnz jnp and sub fcoms xor jnp xchg xor clc or xchg cwtl imul clc cmp and adc and outsl add pop outsb shlb jns ret scas xor lods std stos loope fcoml jae imulb push push xchg stos push icebp mov jno mov sub test (bad) scas add and in out js mov ljmp js ficompl arpl cs jno movsb sub leave xchg xchg inc outsl xchg fisubl and fsubl jne lcall out ret call push je pop rcll push sub aam test (bad) push aam fwait jne xchg mov imul push mov scas inc push dec cmp lock sub push mov mov xchg pop xor (bad) loope and pusha mov xchg sbb lock cmc dec push (bad) xchg jecxz fisttpl sub sbbl jl cltd pop dec lcall sub and pop sub inc lods cmp lea xorb mov push and cwtl ss int mov or aad fisubr inc (bad) fdivrp jp test loope inc ljmp sub mov sub dec shld push cld nop inc mov js mov lea shl push push mov push hlt and movsb call adc out and lock lds add paddusb test add and outsb (bad) outsb mov outsb xlat xchg push or negl pop jle mov (bad) pop add in jp inc ja jmp jo mov mov call pop mov loopne (bad) sub hlt testb jle xchg arpl inc mov mov stc jp pop sahf (bad) dec scas call ds decl into lret adc adc cs cmp test lds rcrl fbld stc cmp out test fnstcw aam dec imulb mov sbb iret sbbl std rorb and mov cmp pop adc clc xor popw pop jmp lds lret pushf es xor popf dec stc mov jae dec loope andl jo or cmpsl iret pop lcall dec xor aas sub insb cltd popf cld test mov jne inc xchg cli cmp pop rorb lahf sbb ret jecxz mov sti idivl ficom push add lret ds test push mulb movsl push sbb ljmp mov aam cmp pop mov lea sbb xchg stos mov adc insb sbb push push add mov lahf xor nop sub iret pop jmp (bad) movsb and lea rcll dec mov xor sbb gs mov loope jmp mov outsl outsl (bad) out ds push mov jb pop aam mov push xchg sub aam adc xlat in call xchg adc mull add icebp adc pop jb adc mov seta pop push jno aas push mov scas jge mov push sbb outsb insb divb (bad) out cmc popf jp pop dec xchg daa mov mov push mov mov xchg mov mov push sub loope repnz push lret dec dec inc cli gs mov (bad) push aaa xchg pop fnstsw push aad cwtl icebp rcr in push mov mov scas sbb adc jle aaa mov pop sti dec inc repz sbb repz popf sbb xchg jne push loopne stos add or lret enter repz dec imul hlt mov cmpsb jo outsl jmp ret jl jae or shr inc pop mov outsl pusha repz das or adc insb push inc pop jmp roll in ret ret lcall stos test or jecxz test mov pop xor add xor sub sarb xor xchg sub cmpsb (bad) hlt and leave adc int sbb int3 cltd repnz in jge cmp push std adc imul sbb jmp mov cwtl xor inc cmp imul ds mov subl stos dec inc xchg das cmpsb mov (bad) push mov or jbe pop repz sar or icebp popf orb into pop (bad) je dec mov cmpsl movsb mov cmpsb loopne ret inc mov fwait outsb or aas mov push xchg repnz fisub (bad) (bad) push lods and (bad) lock cld (bad) insb aaa xchg mov push imul lret push pop addr16 sub mov add ja or fldt hlt repnz cmp hlt fwait push mov stos push (bad) (bad) lock xchg cld jl out ljmp popa ret jge cmpsb fimull mov mov cltd add pusha scas (bad) adc xchg divb aas jae add test fnstcw pushf in dec jmp and ffreep dec jl adc add sahf add ljmp pusha pop in clc jne fildll mov cmp lcall inc pushf aaa and out push push mov imul xor nop loopne sub dec andb fistpll adc lods call and push mov fldcw xchg cmp dec lock notl (bad) call rol adc and lock pop ljmp jg out pop inc lds add inc stos mov fstps pop dec mov cld and and add in sti jmp or inc pop es push xchg jne dec stc xchg inc test nop rcrl negl cmp leave and loope loopne add xchg inc in push addr16 sub hlt or (bad) bound mov mov push call push lahf sbb lret xchg call mov xchg pop mov ret pop (bad) cmp mov aaa and popf push inc sub cmp clc insb lahf rorb imul or mov call sub or sbb jbe mov cmc xchg cli iret lods lret dec in mov add or outsb pop xchg or mov fdivs xor nop ficompl into mov mov and int3 (bad) cli pop mov dec fst daa orl mov mov jnp mov lret add jae lcall jno (bad) (bad) mov lods mov ficompl mov lret cmp jmp fiaddl lret xor (bad) les cltd pop fbstp dec dec pop out (bad) add xchg xor pop scas and fwait (bad) sbb push sub test (bad) out push rcrl mov (bad) (bad) into popf imulb test xchg ljmp jae mov mov fdivrl arpl nop pop mov addr16 xchg fidivr xor pop fbld nop aaa adc mov jge cmpsb xchg adc dec int3 mov xchg mov mov mov fs jle cwtl push sahf mov insb enter (bad) adc jl in (bad) add ret mov adc mov mov enter mov std mov aas push push xchg adc inc repz sti sbb das repnz lock pop cmpsb adc sarl jmp push imul gs xor test pop les mov movsb or movsb insb pop and pushf mov stos jb or dec inc push neg xchg and outsb mov mov mov jmp jmp test xchg lret (bad) repz push rcrb movsl test into mov dec push arpl ficom scas mov mov sbb std or and inc out repnz jge scas mov sbb or and sub sub cmp mov inc cmp lods lea idiv and das cmc cltd pop sahf push adc repz roll cmp mov sub scas fisub sub mov xchg mov add icebp jnp mov mov testl jg roll sbb dec lret bound jae int iret xorl pop sti cmc cmpsb adc mov ret fstps icebp push mov shr jmp jg dec xor (bad) leave jbe add push jno xchg push lds js iret addr16 fsts roll outsb adc dec (bad) out popf sub cmp cltd leave test fs or jae out rolb and adc sarl aam pop jmp repnz loope cmp sar sub pop jne popa pop jp mov ss cmpsl xor aas lods popa test popf pop push mov or push jae out mov push repnz mov xchg testb sub push test mov jmp fnstenv mov ja inc test pop mov push loop or inc imul ds pusha sbb inc lret cmpl lea push into xor ficomp outsl sub loopne pop test fwait nop or push adc mov mov inc js mov es sti cmp pop mov insl stos (bad) (bad) mov bound mov pop add push sub fadds mov dec sub cmpsb sub cmp incb stc sbb and xchg and adc scas xor mov mov rol sub jae inc mov popa (bad) enter add add sub adc mov add jne daa jo mov mov jg sbb loopne xor es jno xor lods outsl (bad) movsl fwait dec shl mov push adc lret imul notl mov cmpsl push mov (bad) xchg and xchg les rorb lods xchg push mov ja jb adc and mov into jno mov int3 mov out mov sbb cmp mov roll adc andl cmpsb repnz loope (bad) xchg mov and pop jp aas dec into jne lahf test stos pop aam arpl xchg out cs fs rorb clc jge into enter inc push cmovg mov out sbb enter stos cmp pop lcall push mov lods pusha mov mov cmp pop push int3 xor andb pop int adc sahf jne loopne insb outsl jbe add test bound mov jecxz sub outsl out push mov lcall jns dec (bad) add es add ss xchg mov push xchg pop mov (bad) pop clc (bad) fsubl int3 test sub inc out push pop xchg lcall cmpsb mov sbb mov jno push jge push jne pushf pop in cwtl mov adc sbb pop sahf or lock pop sub sarb add adc xchg push les in add ret inc inc sbb cmp mov or cltd sar aas les popa xor xchg mov data16 add ja mov jmp (bad) std or lock stos adc adcl jg div std mov shrl mov cmp in hlt cmp loopne cltd adc ret mov and outsl nop lret rcrl aas sub push pushf fchs or pop dec out je mov or scas xchg aam adc in and call aaa out pop out mov ljmp xor dec mov mov pop adc add outsl imul xchg and xchg mov pop jge or es mov (bad) loopne and dec or lahf cmp repnz ja cmp push xchg gs out jl je cld leave bound imulb xchg add rclb lea sub sbb ljmp push in cmpsb addr16 ficompl xchg dec adc pop push sahf stc movsb push sbb lahf inc movsl (bad) (bad) mulb pop mov ljmp cmpl frstor mov lret jle cmc and ja mov mov or inc sub xor aas and fsub (bad) dec pop lods dec inc push adc xchg push clc jge (bad) (bad) nop cmc je sub mov mov adc pop out inc ds xor and das ljmp arpl xchg sbb sub (bad) jae dec jno dec fstps ds push fsub enter push sbb lret add ljmp mov sahf cmp mov adc mov ljmp xor jns neg push subl and sub push rorb and out mov fs mov cmp sbb push aam push ss out andl fisubl fcomi jnp dec xchg sub inc mov arpl cmpsl imul inc dec lret out movsb lret mov mov or push xchg xor or outsb in push push in loopne sbb hlt and jno mov pop adc xchg jno,pn mov lret fsubrl icebp repz pop aam cld sub ljmp inc in add xlat dec xchg nop sub leave popa cli mov mov mov mov push (bad) popf push cmpsb aaa std inc inc js cmp cmp xor add fsubs data16 push cmp fprem divb jecxz and pop frstor cmpsl gs mov (bad) adc push imul dec cmpsb aas (bad) (bad) arpl popf lock xor neg add cld jnp ds or push jmp aaa lock jg mov jae repnz mov inc pop mov loop dec (bad) mov mov lret dec mov rcrl notb fistp cmpsl add lret xor movsb push sbb sub repnz xchg jae popf cltd or jge loop add jp das sbb ja sbb je mov (bad) rorb inc push mov call push repnz jle,pt aas int jne mov test pop jg mov fadds mov test push pop mov (bad) out push lcall ret xchg pushl adc or jp jo mov (bad) call in sub enter mov xchg sbb in cmp jle xchg push push mov loopne fs lods xor mulb dec loopne pop aas inc and je and ja (bad) mov mov loop out xor ss jg jecxz lods mov xlat adc adcb rcrl arpl idiv push ss test sahf add aas sbb fcomp and popl nop sbb insb dec inc xchg (bad) outsb add out repnz stos push mov and fwait adc inc and (bad) add add sbb insl fs movsb adc (bad) cld dec mov and jbe sub mov (bad) mov imul outsb jbe ret aam xorb cmp xchg sub add mov movsb loopne and andl or test sbb push mov xchg and push dec ja mov pop loop pop mov mov je xchg dec repz xchg cmp test cs push fdivrl outsl lods sub idivl jmp push mov popa fldl pop jecxz pop les ja iret xlat aam inc sbb jae sub dec mov cmp adc and xor xlat jns adc pop sbb js leave enter jp in push ljmp lock call fs loopne mov in adc ja mov xchg lea rolb (bad) ljmp cltd clc mov mov sub mov xor movsb dec cltd jg inc out push dec cmpsl out push addr16 add adc sarb mov pop pusha loop into mov xor repnz jmp fidivrl inc negb cmpsl mov ja call cmp dec jo dec push shl push or sahf push mov xchg insb pop xlat sbb push xchg je jg lods xor insl inc loope xor push cmc stc mov xchg lahf call mov movsl sbb xor sub sub dec add clc icebp sti in pop dec jae je inc (bad) fisttpll dec pushf aaa or mov xchg test movsb das push (bad) in cmp pop jbe jns ja movsb fist sub mov mov mov mov jle adc lea jmp call hlt test ret dec sub and imul ja pop (bad) stos aaa mov add js and in push mov nop pop jno sbb pop mov jns add ds fcoml inc mov xchg jecxz dec fdiv mov jge vpminub dec xor enter jle dec mov jecxz or stos test adc dec push ja dec enter push pop mov dec push test xchg adc adc or push xor or push dec mov sub sub or (bad) out pop push jnp inc xchg mov pop pusha push mov pop aad loopne dec mov lods mov dec arpl jl in (bad) pop leave sub jge cwtl rcrb xchg jno pop mov sub fnsave arpl fdivrp adc ss jnp ja inc fdiv add add mov std mov jo sbb (bad) xlat int3 pop sub mov dec repnz add jns addr16 adc inc xchg mov cmp (bad) insb push fisttpll push out jb pop jo mov adc mov int hlt or xchg xor rorl das sbb cmp adc jg popa icebp mov lods mov xchg mov sub dec and pop lods das pop cmp cmp mov call jae mov movsl iret outsl inc inc ja repnz repz cld nop gs inc inc (bad) mov int3 inc pop xor push outsb add mov fsubl (bad) lret ds and jo loop fs in stos int jno out icebp sbb enter and push ja jo,pn imul in mov cmp out imul popf mov xchg out or rclb sub les sbb int3 stc ficom iret sub scas (bad) jbe inc (bad) aad push jp xor push xor mov sbb call outsl mov jp inc fcmove cmpsl and (bad) (bad) ret push arpl call jg xor (bad) jg (bad) sub jns push jmp mov fnstenv in popf cmp jmp mov daa nop xchg adc sbb xor into sbb outsb lea in add movsl cmp clc mov mov xor ret (bad) xor add and pop movsb enter inc loopne mov outsl cmp lds dec cs or lds ficoml jae stos pop fiadd in ss int pop mov jecxz (bad) incl dec outsl jl pusha ljmp push lret adc mov push mov sarl mov dec pop ret in pop and loope inc movsl in clc jg orb insb rol mov cmp push pop dec sub ja adc loope and or jmp cld jne cmpsb push test inc mov decb popa and dec pop sub fcompl dec push repnz and pop daa dec loop imul lock adc xchg (bad) sbb inc sub scas mov (bad) xor sbb sub mov and es add pop nop cmc push cli pop cld push and mov add push and add rorb dec mov cmp cs ds cmpsb push inc mov test repz jle inc daa subb push aad xchg add cmp pop mov inc mov cmp add mov cld sti dec adc inc push mov insb (bad) fs leave push in mov loopne push into repnz cltd (bad) xchg push jne dec mov sub sub nop out test sub mov add (bad) aas idivb call test pop inc sahf fistl test push dec fs rolb pusha stc or cmc dec xchg stc lds push cmpsl ja mov and pop mov sbbl xchg jo fcompl sbb dec jge hlt outsl int3 xchg push xchg dec mov hlt push bound or mov mov mov jp dec stos mov cwtl insl popa bnd fs lcall add adc push sbb jl pop insb aaa push adc divl (bad) (bad) ja sti into lret movsb push add imul or mov mov lret aaa add xchg in pop dec mov ljmp jo mov jns adc cmp (bad) push je add xchg jecxz fidivr sub out xor mov push mov or ljmp add call adc in xchg icebp cmp jb das push stos cmpsl nop jae sub ret add or push adc dec lods fcoms lods and fucomp sti fcoms push adc sarb adc in subl ror mov dec push clc add xor (bad) mov and cmp jnp mov push (bad) mov lods leave add out int3 das mov xor jno xor sub mov imulb clc or cs jb push dec jecxz iret xlat xchg jecxz shr pop (bad) popa xorb xchg or mov mov and sub fdivs inc test add jp shll loopne push xlat je jl xchg dec hlt in mov pop loopne and rcr pop popa insb test jb adc bound xor idiv inc lds fwait (bad) mov xchg addr16 aas pop popa jg dec add sbb outsl inc (bad) jnp cmp ds mov leave inc sarb scas pop mov xchg out jle add cli mov mov push popf push jg into fcmovb mull mov shrb rcrl cld fnstsw xchg movsb mov mov jo ja (bad) fcmovnbe jb sub push js push stos mov xchg fidivr and sbb in hlt adc inc in (bad) pushf jne inc or adc mov inc loopne mov xchg test inc mov cld test mov pop jbe push repz pop pop cli inc mov fsubrs mov out mov aad in mov insl hlt jecxz pop in vmulss fidiv scas out stc jae roll and mov sub inc jmp mov jno mov sub xchg inc adc dec sub sbb jp test popf pop scas insl inc pop push xor push xor mov enter test popf andl inc pop orl mov pop mov cmpl mov push sbb dec jecxz rorb or movsb loope ret data16 pop addl call xchg xorb pop cmpsl mov ficompl sbb add push and jge enter cmc pop jnp fnstcw nop adc and daa xchg clc push push je mov int xchg pop roll jecxz test in inc xor fmul call cmpsl imul xchg and idiv xor pop adc bound inc aad test and stc dec (bad) lods shr sbb or (bad) xor hlt fstps mulb cmp aaa mov pushf mov adc dec ss std out jnp mov pop cmp arpl dec das xchg hlt pop adc adc push aad jbe or je or pop mov cmc push fiaddl push ficomp cwtl push xor xchg or jmp mov cmp mov imul add hlt push repz push (bad) (bad) neg mov aam fisubrl inc mov popf mov mov test push or stc jg movsl shrl aas faddl cmpb les call repz int mov adcl int push xor inc enter outsl ja sub inc adc mov pop test add or call mov adc rol sbb movsl jle mov dec roll pop adc sbb mov negl push or jmp ficom call out push pop sbb in ja xchg test adc mov lea in aad jge push fstpt sbb cli xchg dec lods xchg fisubr stc push mov dec or aam push lods jmp sbb adc xchg pusha xor xchg sub jo dec adc nop cmovno lea jns push xchg push push fcompl xor push mov insl adc cltd das add xor movb dec cmp lods aas push fidivrl inc lret pop sub ret rcll lods add xor push xchg cmp xchg ret mov mov mov mov jl lret loope adc (bad) in push packssdw sti jecxz pop jno mov inc xchg aad inc imull icebp cs pop sub xor xchg dec pop pop xor lcall lret lahf into mov ficom xor cltd cmp or ret popf jae dec in lds imul scas jb jmp push icebp jbe fcmovu outsb outsb xchg scas ret rolb movsl (bad) cwtl inc add xchg lock jp,pt or inc rcl add and or sub addr16 jmp (bad) cld pop out sahf shll cli push aam xchg cmp (bad) fdivs test repnz daa sub dec dec cwtl repnz mov icebp imul rorl xor push jns push cmc in sub imull fwait jmp jg nop mov pop ds fidivr lret adc inc cmpl mov popa fwait pop jg fiadd dec adc mov sub bound hlt inc insl data16 scas xchg mov cmc divl jp inc adcl xor rcrb cmp jnp push xlat jbe test jge insl add jp (bad) sbb jge ret cld inc and xlat and push call pop pop xor cmp leave xchg inc daa jb lahf add sbbl outsb mov push sbb ss mov xor xchg call test ss out xchg enter xor cltd mov aas xchg (bad) stc add add add mov adc xchg aaa scas loop inc mov xor sti inc inc std xchg insb loop ds lds mov stc sub gs lods or addb cs rorb cmpl js cli fwait mov movsl mov xchg stos loopne mov inc pop aam (bad) je pop xchg cmp cmp je add xor std sti sub cmpsl mov arpl fstl jae fstpl jns call int3 add subb push (bad) mov shlb cmp and cltd roll (bad) jp test jle (bad) push sti jge adcb mov pop cltd jno add test pop xor mov ds adc scas mov jg jns out jp push loopne push mov (bad) xor inc rolb les pop pop jle outsb cld jl xlat push jle push stos clc aaa inc or aam mov ja inc enter sbb sub ja lahf bound aad mov in mov add in dec lahf ret push jno push adc inc nop pop into mov push fild add fiaddl jns stc pop jl adc xchg xor (bad) push jmp jl cli or xor xchg dec in cld icebp adc cwtl bnd cmp mov push sbb and cmc cwtl mov xchg sti inc fnstsw scas sub push cli dec dec int3 ret sti cmpsb nop xchg sbb mov les fs pop cmpl or into mov adc jge subb pop mov push ljmp cmpsl insb es addr16 xchg mov adc jne and xlat lock sub into cwtl mov aad inc lret xor arpl lahf add imul mov in push (bad) hlt into mov ljmp jecxz dec cmovne or int3 cmp cmc or cmpsl bound push dec ret lahf cltd pop sti repnz push adc repnz pop jecxz dec mov mov mov scas lea in sti fdivs jle fwait sarl jo movsl push leave pop and mov icebp leave push hlt imul cmp dec test clc jne sbb andl rcrl lret inc std loope jp stc dec (bad) (bad) mov js push jmp outsb addr16 mov shlb mov jl repz popf push les push fbld push jge fwait pop sbb (bad) sub push dec pop jle sbb dec dec push aam sub cmp mov jge lahf arpl bound fidivr pop (bad) add cltd adc xchg adc (bad) hlt scas loope xor cli fbstp call cmpsb jl nop jno mov mov in leave pop mov xor imul xchg les lahf mov (bad) lock inc jno outsl cld lea fs cmc cmc lcall pop push adc cld sahf imul inc stos and adc sub push dec int3 (bad) mov xchg pop call inc (bad) mov add loopne sbb mov push mov ds jbe ds leave inc out rcrb sbb cwtl push mov jmp das pusha (bad) push sub pop cmpl lods jb xchg int3 push pop outsb mov xchg mov pop adc in cmp and mov addr16 scas addr16 (bad) mov or insl (bad) or inc add mov cwtl mov or or pop mov pop pop popl inc jecxz xlat stc stos inc cmp mov dec jne loope (bad) aaa jae fs and divb je bound cmp lahf xor mov sahf mov js xchg cs into mov ror jae inc lret bound pandn je test push (bad) std add dec fbstp pop sbb push add pop sub add mov into mov out add pop lcall inc loope or ljmp mov xor repnz negl inc xlat or dec jle (bad) std mov int jg mov pushf push mov xor push pusha ja mov imul (bad) mov push jnp sbb mov nop sbb nop sub jle lahf daa xlat jle jns mov test pop mov mov loopne push sub dec pop into scas cmpsb sahf nop in out pushf lahf movl cld (bad) nop add fxch dec push imul pop int fs xchg xor push sub inc stc ss popf and add (bad) stos shl fsubs mov mov inc pop out xchg fs mov rcrb mov bound rorb fldl push cmpsl mov pop into lahf loop push push push pop push push jge arpl push lcall mov push inc jge mov xchg push adc popa xor sbb and cmp fisubr pop outsl test out data16 pushf addr16 pop pop decl lock scas cwtl gs xchg adc jae jmp out or es mov test lahf mov push inc sarb xor pop mov jmp pop jle jne ret xchg bound call dec push (bad) in outsl push fisttp push icebp lock lock cmpsl test outsl outsl cmpsb outsl sub aas adcl inc xchg xor cmp das pop add aam cmpsl les jnp lret icebp mov xor xchg test call lea jne data16 sub pop test xchg imul mov test notl leave xchg out mov imul push cs inc mov mov dec sbb sbb stos js mov mov or movsb dec and dec gs sub aaa lret xlat mov icebp jb cli inc int3 test xor mov xor (bad) xor xor cmp addb test xor loopne or sbb inc fs dec mov sbb mov cs push pop (bad) mov mulb and mov insb out jae fsubl sub cmp adc adc in sub and and sub mov stos jecxz into into adc pusha fldcw (bad) lock mov pop and mov push jecxz pop cmpsb adc sub dec loope mov mov sbb sub and xchg jnp outsb mov xor pop jae push (bad) sbb aaa inc xchg ret sub mov jl mov pop mov inc clc mov in mov jnp dec and push cli and roll and jne xor and inc sub arpl aaa (bad) aaa lcall xchg sub sbb je out adc lds jl in push push xchg lds or sbb pop mov pusha inc (bad) push fiaddl (bad) inc lock int (bad) push inc jg mov aaa arpl movsb inc inc imul mov rcl shr scas cs cltd clc inc call pop xor xor pop sub cli pusha dec imul das and mov roll pusha stos mov ret jbe push outsl and stos jp enter imul push push pop jmp mov nop popf pop nop pop jo xchg imul mov test sub xlat ds negb nop adc cmc cmp or loopne int xchg (bad) push clc mov iret mov dec std ss jg sbb sub fildll add scas xchg test (bad) mov mov imul lcall add sahf push dec pusha (bad) test cmp repz mov push dec xchg (bad) ret and ja call into shrb (bad) popf sub imull cld aad inc fsubl iret (bad) in in pop shrb adc cmp ja mov sbb inc mov jbe push dec adc sar fwait (bad) lret stos fcoml int mov cmp scas stc adc lret pop push mov mov iret pmaxsw add and and test xor inc add jbe ficomp pop scas sets orl sub inc add pop in shll jle sti adc cld or les inc pop in mov cmp test ret ljmp pushl std mov pop stc gs sbb cmp fisubl xchg mov mov inc mov jp leave jns pop movsl aaa pop push or icebp shll xor dec mov mov arpl leave jno sub pusha dec ja sub sub push scas inc or popf popf pop test iret das out dec fldlg2 mov push mov loope insl in sbb iretw dec and and out xchg push lret adc cmc stos int3 je outsb pop jae mov in jo mov (bad) or bndstx add and leave cmp insb jne pop daa sbb stc out stos or and xor pop pop mov aam xchg xor pushf push testb sbbl icebp inc cwtl test mov js in out add mov mov sti dec sbb xor cltd in cld sub and mov rclb repz xchg push and jae jae sub icebp dec repnz xor xchg mov cwtl add inc sarl arpl dec movsl addl pop fbld xlat dec cmp sbb clc int3 (bad) jge loop in (bad) repz outsb lret sub pop (bad) xchg mov in loop cmpsl mov sub pusha sub data16 divps or jle bound xchg out ja cwtl out ds int insl inc sbb push popf mov or in mov inc insl lock sub jge test or or sub lea or jns fimull sub loop insl test adc rclb and mov jns cmp outsb and xchg lock outsl stos sbb inc push and (bad) iret fcmovb lret ss and jne out insl cld cmc ret pop inc repz out jecxz outsb xchg cmpsb jo adc insl es inc rolb lea ja push cmp cmp lods lahf std ja rcl aam dec xchg dec stc add jno jp cli imul push ss mov fadd mov sti mov movsl insb addr16 xchg jns xchg and iret pop movsl mov (bad) test adc sub and inc aas xchg gs mov jle jbe lock int fwait and fnsetpm(287 mov or dec sub jbe mov or lock rorl jno jb push sub mov dec jns test shlb dec pop movsl in pop push lret and push cmp sbb add jne jge dec aas les xchg arpl in popa push adc mulb sub repz jge push inc scas es pop lea loope ret repnz sub and repnz rcll out (bad) mov rcrl or sub mov cmp and adc push dec sbb dec stos ficom fistpl fcoms dec cmp pushf in mov out pop and leave fnstenv xchg out pop xchg mov divb and xor dec xchg repz sub icebp cmp xor into inc leave sub xchg adc mov icebp mov das ret std outsl mov adc add mov xor dec xor mov (bad) cmp push addl addr16 popa cmc sub lcall adc divb jmp pop cmp jbe jnp das das fnstenv scas jne mov xor aad cmp pop xchg dec in mov dec pusha dec inc dec mov adc test ds adc lea mov out inc sbb popf fnop jbe (bad) fnstenv scas push (bad) fdivrp dec mov leave std loope cmp nop dec dec sub dec icebp and add scas mov lret mov stos dec or jo popa sbb ja add dec mov dec add mov cmp cmp push ficompl dec mov cmp push mov test enter popa mov test jmp jnp rcrl and push jb (bad) pop jg icebp add out jo pop push jb stos clc push cmpsl xchg inc stos or jns cmp inc cmp adc cli insb ja fnop push cltd mov dec out clc iret pop shlb fimull pop jo jge inc sub dec ja pop mov xchg bound mov pop loopne rclb inc (bad) test jmp les sbb das rorl dec sbb faddl sub loop sbb stc sar xchg imul adc xor cmp inc dec daa jecxz imul nop push dec xchg scas push addr16 cmpsl and xchg loopne out cmpsl inc push lret mov xor lret add add pushf lahf jl rorb in mov sbbl test xor pop mov push dec insb repz cmp cmp jo pop mov (bad) mov test cmp dec adc gs (bad) sti and pop push mov xchg mov xchg (bad) stos xchg xor inc jmp repz push adc imul sub sub subl adc in rcll fstpt ds daa mov jp cmpsl (bad) xchg xor mov jle (bad) xor cmp and inc ja,pn shlb cwtl test pop xchg arpl std ret js xchg jl pop icebp jbe xor mov push pop or pop sub cmp push (bad) icebp mov bts std hlt rcrl mov cmp ss and pop loop lods xchg or fcompl jno loope lret shrb adcl add pop pop fnstsw jae mov mov jbe sub jmp jns insb movsl pop insb shrb jbe int test aad fdivl cmp shll shll mov push mov rcrl push xchg (bad) aaa stos mov cmp mov insb push mov inc mov mul sub shr lds decl mov je mov jnp popf or pop jbe push sub popf sbb cmp mov inc in mul (bad) stc sbb mov rorb pop int adc xor adc lds jge cld xchg cwtl jnp fcoms out mov cmp mov cltd mov inc subl adc and sbb (bad) (bad) jbe das mov mov pop mov mov mov cmp pop or test lcall push adc outsl cmpsb int3 scas mov fwait add mov out dec shll out adc xor push (bad) and rol dec dec outsb aaa add rol jae std lods mov pop das cmp stos ja and icebp retw test add push or testb pop push dec adc fistl (bad) xor push (bad) das rorb imul ss mov popa jns in call sahf lret idiv push fstps lea int3 inc jp dec pop pop aad or xchg fsubrs je mov stc mov test pop jne jne push adc xor inc mov xor stc push stos mov push ret imull jl add mov sbb xlat daa mov sub xchg (bad) in lret ficomp fcmove xlat insb xor rclb nop xor popa loopne nop dec mov push fimull js xor loop imul fwait repnz testl (bad) mov or push push sbb (bad) sbb xchg and push in push push sti jb outsl pop push ds scas rorb jnp aas sub (bad) fs dec mov cmc pop popa pop (bad) js fnsave bound es pop es mov nop sub shrl mov cmp and sbb insl scas in inc mov outsb mov scas jno inc imull dec xor out out adc mov xor dec xchg and ret and fldt fsubrl jno inc (bad) adc icebp and notl sbb xchg cmp sarb out loope cwtl (bad) xchg jae dec fimull jmp in or daa lcall fistpl es mov add jbe cmp ljmp or notl dec movsl push mov xchg mov fmuls mov jbe sbbl xor into js mov adc sub dec adcb icebp xchg mov test addb (bad) inc mov bound ds movsb inc or jmp arpl fisttp fisubrl in xchg inc aaa pop insl call outsl or inc mov mov in aad sbb sbb mov insl sbb lods dec sbb je movsl jge imul test and and popa gs xchg mov movsl pop jl or bnd fwait mov sbb add int aad inc int3 ret lods xor loope inc mov cmp jmp or pop adc adc adcb jae mov mov loope mov jo pusha cmp shr sbb jne mov andb or push (bad) mov rclb jb rcrb test mov (bad) rolb shrb pop roll aad mov jg cmp outsl aad mov lahf cwtl (bad) dec jnp aaa stos mov cmp hlt stos cltd ret cmp out sub stos pop stc cmp push inc inc sub (bad) js sahf out insb jecxz mov (bad) cmc aas fnstsw mov pop cli cmc xchg cmpsb pop or xchg cmp jae sub xchg sbb cmp fcompl xchg ljmp add mov jo push mov imull push push leave call dec fnstsw pusha std cmc xlat js dec sub adc (bad) rcl jg or mov repnz xlat cld adcb push inc hlt packssdw jp bndstx sub (bad) lock scas sbb test dec out mov xchg sbb xchg stc dec adc mov test add lea push aas cmp adc mov fwait std in arpl push cmp jbe sub out xchg cltd push loopne inc or sahf in add xor lea inc dec add pop jne out jg push jg adc mov or xchg dec cld out fistp orl out jne inc scas dec mov inc cmp (bad) enter negb adc or cs std xor and data16 xor pop (bad) xchg xor in out add or cmc sti mov cmp push sub divb adc push inc sub das and aam xlat or add lock dec test popa (bad) cmpsb and sub xchg je pop js push in cmpsb jo xor dec fst xchg and xchg je push add in xchg add add push mov or mov and jmp xor (bad) aam call mov subl add jmp int3 adc dec xorb mov addl call mov xchg pop add in xlat ja jmp rclb fdivrs jo rolb push cmp (bad) shll bound mov push inc cmp sti ret sbb push in ja mov cmpsl xor stos inc sub sbb rorl xor rcrl push (bad) in int3 sbb pop dec aam adc xchg dec mov jl jle mov sub push ja in je aad pop faddl stos adcl mov imul dec aaa or xchg xor mov xchg xor hlt mov add sub dec mulb mov lods cltd lds adc pusha fsubp fcoms (bad) mov fnstsw inc xchg dec ja sub and sbb (bad) pusha jb mov and test or mov push dec push or dec std add add leave cmpsb add sti add xchg adc pop jmp sti mov (bad) bound dec mov std push mov out ljmp xor ret std dec cmp mov xor cmp scas pusha lds (bad) lret xchg rorl mov jne push jnp clc xlat cmp mov cli gs mov test adc sbb and out xchg mov dec mov jp or out jbe dec leave lcall mov add (bad) test out pop adc aad sub dec imul push leave push sub pop mov fs (bad) mov jo mov pop or mov sub mov cmpsb je sub cmc test sahf imul leave xchg (bad) notb mov add inc sub scas fptan (bad) mov or jl ret jmp push push lds mov jbe xor inc loopne ja cmp push std popf addr16 insl negb cmc mull scas mov mov pusha dec arpl pop rcl mov shlb into xor mov inc mov add in and push mov xchg adc mov jbe or jne push lods aam ficoml inc inc std cmp mov xor lds out cmp addr16 xlat cmp inc mov lock mov and (bad) popf or pop xor adc hlt pop sub adc mov cmp sti aas inc xchg call xchg rol dec sti loope pop pop popfw scas sbb data16 adc mov in dec test or in repz xchg cli mov push xchg or sub xor sbb sub pop scas ret lret cmc sahf or sub stos xchg scas inc fisub sbb dec mov add jle stos jl sbb aam lods arpl push mov jns (bad) mov shlb aaa or jo (bad) lock jp mov test idivb (bad) lret daa in inc mov mov cld jmp sahf faddl pop cmp shrb lret mov mov leave inc cmp cmp sahf mov adc push mull test pop or rclb mov mov mov mov jne in je ljmp pop sbb in pop rep and mov mov (bad) push in fs stos lcall jns pop ror inc mov dec popa cmp pop pop push (bad) ss sarl test jecxz inc jle cld add cmpsl add or lcall movl imul add add mov sbb mov addl loop mov pop jo or test test subl fcompl sub ljmp inc pop or inc int fistpll push call stos cmp gs lds fild jb mov mov or lret pop dec mov add test mov inc mov push test jl pop sub add mov subl loopne jp push and or cwtl je inc sbb fistpl popa add data16 sub jnp dec xor jne xchg sub test cld fbstp sahf mov aas call jno mov jo es mov inc mov cmc movsb stos iret and stos sub xchg or mov push sub js mov fcomip int3 adc repz jnp,pt rcrb jbe leave adc push xchg xchg pop add es push pop and mov shrb shr push enter dec pop push push stc mov pushf je fcoml push cmc ret (bad) inc repz icebp mov cld int mov icebp xchg jo sbb push loopne push xchg pop shr sti inc lret je enter or lods in cmp mov mov fstps daa aas dec fs int3 (bad) arpl and adc (bad) xlat nop jg pop xor in shl pop cmp xchg lds arpl jp sbbb stos adc ret cmpsb push lods or icebp dec mov stos sahf xor push pop mov or inc movsb sbb mov xchg mov mov (bad) pop and xor out cmpsl fldenv imul cwtl dec pop add popl dec inc sbb (bad) scas cmp mov shll mov scas ja xchg sbb cmpsb inc cwtl lods xor mov mov (bad) mov cmpsl out arpl sbb clc das cmp mov aaa push sbb (bad) imul scas sarl std mov scas mov sub cltd dec fistl fcmovb xchg jp mov lea int push (bad) (bad) out shrb dec in leavew lock inc inc push mov js mov repnz jmp gs mov dec call xor int stc adc lea jp lods test addr16 (bad) mov out mov fwait pusha jno xchg call jb inc cli ljmp adc in inc push loope aad frstor ja dec inc aam cmpsl fst ret les jne cmovno dec cmp shr mov mov incb test or pusha (bad) mov inc sar (bad) sub sub mov (bad) jmp push (bad) or push repz xchg mov insl data16 or sub pop pop and cld stos in push sbb jp (bad) popa push mov ja jecxz mov cmp rclb je lds pop mov cmp mov fldt mov push call ret outsb fxch iret inc (bad) fld1 pop aaa sahf fucomp rol enter cltd rclb sub ds add out (bad) sub loope push mov loop cmpsb fdivrp cmp iret sub pop insb mov xor sub or push cmpb xor mov (bad) dec add pusha xor scas jns jnp xchg pop nop mov add (bad) xor in and orl (bad) jno xor mov cmp adc mov subb xor sub pop sbb fildll push sarl cmp or push sub mov nop rcrb bound xor cltd lock dec clc ret push xchg xor jbe pop sub adc ret mov push das pushl insl bound mov add adc sbb movb mov sbb enter or push sti testb int push int fwait pop jae imul push jne cwtl jno inc daa adc arpl xchg pushf cmp xor jg mov imul adc repnz lahf mov push sub adc mov pop and jecxz and pushf xor scas mov sub outsb (bad) and daa cmpsl lret xchg pmaxub xor jnp adc stc cli xchg xchg ds cli aaa lret inc pushf xchg mov test xchg fwait mov pop xor call popa ret leave stc adc mov adc sbbb hlt mov orl mov adc movsl into cld xor leave or dec mov and push in cli inc and hlt testb mov cmpsb sub div cmp cmp mov and scas in (bad) (bad) repz inc outsl jge adc mov je cltd stc mov inc push adc (bad) mov aad dec enter shrl les add scas mov mov movsl dec cmpsb clc xor lret ds pop pop testl fwait xchg dec test stc push cmp push lods and test and or sbb (bad) jns cmp in or jle mov call adc lds xchg or enter inc and xor jg xor scas sub xchg out aas dec mov dec sub mov cld mov out int mov cmp repnz jge xor jbe sub jmp in (bad) jns (bad) adc dec lds outsb cltd sbb ds xchg xor adc jnp (bad) push push push les js jb out add sub mov cwtl divb enter sahf pop imul lret movsb aaa dec inc lock repz pop or adc lods sar rclb ret popf movsb test repz add (bad) mov sub (bad) cmpxchg lahf jmp push pushf mov notb into mov add adc jbe adc xchg sub daa fildll in out data16 add aaa in shll adc xchg xor push and cwtl jmp push (bad) inc je jns leave outsl inc jno mov out push jge dec lahf push aam sub inc add mov pop movsl in aas fs stc inc call loope stos xor inc lret aad imul repz push inc nop test cwtl scas sbb enter aam test rolb push push and inc aas and and mov clc mov into add dec dec ljmp out inc aam pop or pop or mov sbbb xor add (bad) cmc mov fimul jge fcoml mov pushf sub gs push pop lahf popf and cli decw or mov in cmp mov mov mov mov adc adc mov out aam mov push pusha lods popf aas adc (bad) jae and inc push sub sbbl cmp sub fidivrl nop sbb outsl aam (bad) fistpll push mov jns and nop xchg in or les mov push cmp (bad) lret cmp fwait insl jns cmp cld push or dec lock sbb jmp subl add push push or dec add mov aam push pop mov adc mulb push aas mov xchg subb xchg dec xor icebp mov inc cmp push lods pop mov insb jl sub addl (bad) xor add repz movsl push nop sub inc stos pusha pop mov and jl cli popl and xchg loop or mov dec inc mov mov cld mov loop xor call movsl outsl adc mov adc sahf xchg adc xor movzbl cmp mov movsl ret cmpsb push push add jmp push sub jmp inc pop sub pop pop fnstcw dec (bad) movsb push dec into sbb out jmp lods pop jne aas mov sbb push push in lcall xchg pop cmpsb and mov das icebp inc subb daa sub and (bad) mov int (bad) ds iret repnz flds mov jne scas and test pop les in cs mov mov mov fs movsb and add adc xlat in xor (bad) adc out jl push or add sub mov outsl xchg lret and push fwait jge xor pop sbb sbb mov out test xor lret shll js sbb sbb jp push out repz sub and sbb mov jbe test and xchg jl fs sub xchg sarl sub cmpsl xchg lock mov gs lock test inc loop (bad) dec pop jno xor push stos adc mov lock push push mov cmp inc mov scas vfmsubadd213ps pop push repz lcall add and jno movsl test call fcmovne or dec jg sets mov ds mov xchg decl lds test xchg pop mov aas xor int3 mov push (bad) pop jmp nop jl repz pop call std out fsubs (bad) outsl cmp cmc or outsb mov or xchg in js mov imul xor mov mov sub xor stc jecxz pop jbe push lods mov in jnp and dec pushl pop pop dec xor inc incl loopne stc mov pop xchg jecxz cwtl cmpsb push add int3 inc mov imul mov inc dec xor or stos sbb dec jo sub loopne stos add movsl enter push sub push daa fimull xor pop jnp ja or xchg xchg jne mov gs lcall mov in out add push add mov mov jne add inc aaa repnz out xor xor dec push cli mov ret lods out (bad) lret jp cmp pushf outsl je ret adc lea fldcw rcl mov in jbe inc mov dec adcl xchg sbbb scas mov push and test ret mov pop dec jnp mov add movsb aad les xor in dec std fwait dec and mov or stos jno pop jne mov xor lds cli call cs cmpsb adc jge pop lret dec jmp rcrl push dec scas pop mov adc test pop push popa (bad) (bad) lret inc sbb jo adc mov mov lret xor fdivp lea iret adcl iret pop mov fcomi js mov sub mov loopne stc decl fmulp push add mov (bad) pop pop or insb or or rcrl inc inc (bad) adc ja mov les xlat sub jae xor mov mov xchg adc mov mov xchg xchg stos mov sbb scas cmp rcll lea ljmp lods lahf fimull dec outsb (bad) pushf les or popa push leave pop sub sbb aas popa jno jge inc xor dec add (bad) jmp jb jl and mov jnp pop mov lahf stos sub sbb adc inc xchg fcompl mov fsubl cmp push dec dec and xor std dec adc and lret ja jno bound xchg nop shlb enter jae movsb std cwtl xchg hlt fnop pop jnp xchg arpl dec aas cmp mov outsl dec js jge xlat lock jg push arpl lcall sti jo jb jns data16 push xchg dec (bad) inc negb lahf jno or or mov lock push orb test dec add sub fadds fbld jle das popf pop clc fcomip sbbb cmc leave cltd cmpsb inc xlat out jnp cmp cmp mov xlat sub jmp shr inc pop rcl or les pop cmp dec pushf xchg cmp lea scas movsb and repz ja (bad) bound ds in test jae mov mov mov fsubrl push mov dec out xchg xchg inc push aad sti jne stos or add cmp pop push mov xchg jg mov inc xor ds cmc mov aaa int3 mov lahf popf sub xor or movsb xor (bad) outsl sbb pop sub fdivl ss (bad) lds xchg push dec or test fwait sbb lods inc ljmp cmp xor mov jg fidivl decb sbb add sbb jecxz bound lods out push mov sub outsl mov or pop mov in into xor mov ret bnd ja cmpsb mov out add cmp xor pop das cmp mov out jns int add loop cs sbb insl mov or testb sbb cmc hlt mov sbb add pop sbb mov fidiv movsb add cmp lods test cmp dec mov push das fistl out sbb mov adc pop cmp int3 jle nop je imulb mov xchg cmp cmp adc mov dec fs dec jg fidiv ficomp out cmc fsts push xchg adc pusha inc mov push mov out repz and orl mov cmpsl popf (bad) and mov repnz test and sar test sarb test (bad) jno insl mov rcrb mov fildl mov add jl negb and data16 sbb addl fnstenv (bad) mov mov add cld lea pop sub (bad) sbb lea xor xchg jp js outsb fdivrl jecxz stos adc fildll stc pop and (bad) cli icebp fidivr dec push xchg adc mov jbe mov sti sbb repnz jb xchg add stc mov and in stos dec fnstcw or shll es inc gs int3 test into (bad) iret fild jns mulb cmp mov test sub mov in sbb bound push ret or sti pop adc mov decb cmp rcl stc sub sub xchg in ss adcl aas and lahf test push into cmpsl lcall pop pop clc (bad) sub jl (bad) outsl push sub int3 test (bad) fidiv and bnd aas fldt or add rcrl sub aam jae (bad) pslld push add fsubr xor xchg jo (bad) lods ja mov jmp (bad) repnz xor jmp mov dec out or ss jne cltd or mov addr16 test icebp pop mov int pop fadd fstp lds mov dec outsb mov repnz xor clc sub or jae outsl sbb inc in sbb add rolb xchg pusha inc xchg in iret adc adc sub xchg jbe jmp insl (bad) mov mov imul mov push movsb arpl cmpsl out scas adc adc push cltd imul jmp dec xlat adc adc aas fs pop rcrb cltd mov stc dec dec push outsb pop mov pop mov aas mov mov sbb dec arpl ret add cli mov dec sub mov mov (bad) or pop pusha leave sarb frstor mov sub inc ret sub out cmp sub and push in dec sub mov inc adcl pop addr16 movsl popa cmp pop push dec out loop jbe jne js jmp xchg arpl or lret out stos adc xchg mov xor add add test popa nop inc aam iret cld (bad) repz outsb sub scas add xchg lahf xor hlt push lds push sbb iret inc add cmp mov cmp mov pop pop into jg (bad) jo xchg test imul or ss cwtl pop adc arpl jo (bad) negb sub push stc (bad) mov fstpt push ret inc fs mov push push add fistl (bad) cmpsl jmp out and mov fisttpl or and pop sub cld cmp in into jmp out into pusha (bad) mov push rol popa push xlat out sub enter out add fistp (bad) adc xlat cmp or stos add inc cld (bad) or mov mov (bad) fdivrs pop mov mov (bad) mov jnp dec xor jns je cmp frstor mov inc adc add add xchg pop mov scas ret aad stos cltd scas lea fimul mov aaa xor icebp sahf mov xchg lcall and xchg dec sub jl mov and frstor loope and xor shlb icebp push scas and sbb mov (bad) xor mov mov mov js mov ljmp movsb (bad) cmpsl je cltd popa pushf adc push mov sbb (bad) sahf out push mov sub pop or icebp addr16 mov or adc fisub es aad (bad) insb jmp sub push push (bad) fcoml mov subb xor scas cmpl mov jb loopne adc pop (bad) ret sub repz ds push call pusha inc mov daa leave mov ret out loop mov bound or rorb xchg fsubs lret rclb jmp out popf int3 repz mov add fimull sbbl les push jae icebp mov or adc repnz icebp fistpll dec cld jns push scas inc cmp ret jno loope fcompl cwtl and push jp jne bound and cltd xor sahf jo js push pop insl roll add loopne imul shrb lea push push jno negl inc out xorb test push adc jecxz pop pop lahf adc repz sarb xchg fcompl arpl dec imul add sbb in divb test xchg dec leave insb aad lods pop cmp push adc stos push (bad) popa pusha pop in loope jno mov cli sub imul jg pop jbe shll clc or sbb inc push cmp mov gs inc loop jbe decb mov (bad) fldcw andl sub sti mov sbb push adc aad arpl cmp stos fs in (bad) jl test and cs sub push mov dec data16 sbb jg int3 test stc insb or cmp pop fnstsw js popa jae leave jae and fdivrl iret popf out dec mov les xbegin sub jg stos xor mov sub cli cmp daa and lods sbb outsl aam lcall mov stos xor sahf push push mov aaa or cmpsl cmp gs pop xor les imul in jbe cmc inc daa mov cld les das jne push cmp or hlt (bad) mov cwtl xchg in in jle sbb xchg fnstenv mov sub adc sbb fimul xor fldt lock push in jns jg (bad) xor push imul je (bad) sub cmp andl ficoml js lods out jge iret out jg sahf inc repnz (bad) rol jp mov cld or sub add sbb sbb xchg mov jp push in outsl rclb jl dec push (bad) out dec xor (bad) jecxz push mov movsl cmp iret repz dec (bad) mov add movsb lds fcmovne adc clc lea daa dec addr16 sbb test inc xor jb jp dec mov (bad) sub jge loop and cwtl adcb and cwtl std fldpi sub data16 adc popa dec sbb push push aaa lret add daa sbb clc push mov sub mov or pop std inc dec push cmp sbbl pop mov ret fwait arpl mov pop and push popf cmp out adc adc xchg mov sbb (bad) mov test insb mov shrb push into adc lea stos mov sarl ror cmp and adc test cli push xor rcrb and int3 xor sub rcll mov and sub or clc rclb xchg cmp sbb shll lods ret mov mov mov imul push and inc cmp popl dec in mov stos or rol jo mov dec and add fidivrl xchg hlt je ss adc mov (bad) mov mov test dec mov mov sarl pop push lock add test icebp pop (bad) cmp add (bad) stos loopne lret jnp movsb or adc in xlat adcb mov repz push lds and mov xor dec roll divb dec pop fsubrs pop xor pusha out dec or xchg or or es lods push (bad) jno test mov or jno arpl imul icebp mov fadds popf fwait out popf xor dec in (bad) int3 sti mov mov out shrl xchg and loope out fidivr push imul outsl sahf (bad) inc pop imul cli (bad) fldt xor and inc lahf pop mov clc lds ja inc fiaddl insb ss dec andl sub jge (bad) imul cmp or dec pop fnstsw jmp loopne fsubrl xchg inc faddl lahf jl lds repnz push mov fist nop inc sbb pop repz and mov jl inc xor mov xchg aam inc xor dec add enter mov lret xor adc arpl xchg cmp cld lcall leave push mov pop loop xor fs imul cmp arpl or push pop xchg pop lret cmp es cltd test mov fisubl sbbl jnp in mov loop push sbb psubsw mov mov sbb movsb push in and inc into lock insl popa push int3 pop sarb in ss into mov test pop jne or movsb jb loopne pop cmp mov xchg and les ret add pop scas sbb cmp sub jmp add sub jno sbb bound test xchg js mov xchg ss or in loope repz or out sbb cmp sbb cmp mov pop pop mov notb mov mov adc ja jle and cmpsl xor add out pop or fisttpl sbb adc xchg add pop and in xor or fbld pusha sbb or lret xlat jge xor cmp push xor jecxz xor (bad) jle rclb push push adc clc notl into jnp,pn loope push out sub mov mov lds subl mov inc mov imul inc aas jo pop mov dec push aaa xor in cwtl xor mov push dec add mov add xor loop mov sbb inc rorl sti jmp addr16 or pop and cmp cmp imul mov push inc mov pop jge add pop lcall mov int outsb inc or mov repnz out test leave test insb aas pop xchg and insl loop mov iret loop jp add push dec cmp inc imul cmp mov mov sahf je inc je popf roll cs orb adc fsubrs cs clc mov ja scas mov pop push push or movsb sbb subb ds add mov cltd ljmp xor pop or subb (bad) xor aaa sub rcr imul movsl xchg lods mov incl dec int sbb flds cmp lds xor adc sbb fdivl jmp (bad) cld dec mov push sbb (bad) or pushf jne (bad) cmp add das popf and fiaddl test mov dec adc dec mov jl push dec mov inc mov mov mov dec icebp out adc stc mov sub addr16 and and sbb dec rcrb fs and test in mov inc pop (bad) pop adc in xchg xchg addr16 enter cltd or mov push popf (bad) xor cmc mov inc stc pusha pop sbb add outsb add es dec lret or mov lds ret jl lock (bad) repnz loop jno mov popl push inc inc sub std mov mov inc jns lcall inc sub fs repz adc ret outsb aas cli push pop insb fbstp cwtl outsl mov cmpsb xchg cltd or jns scas fcmovb push sbb sub loope sbb dec pop mov push jae aad dec xor fimull (bad) cs or cltd mov pushw mov or (bad) sti fwait enter add adc cmc fdivrp mov aam dec insl push ficompl mov shr out loop mov test adc push test outsb pusha (bad) mov enter pushl stos jecxz push test push ficoml rcrb jge jmp pop in call call aas imul fiadd push (bad) std icebp xchg jb sub mov loopne fdivrl sbb stc push (bad) mov add mov mov lods adc testb popa loop insl pushf xorl movsb xor ljmp fbstp and test out push xchg cmovnp mov dec dec scas jecxz sbb repnz pop sti repz and mov neg aad jb add dec and std stc test je sahf or cmpsl ficompl imul loop mov test inc pop incl mov adc pop hlt loopne dec cltd sub pop xchg das xchg fs sbb push div fidivr xchg int cltd mov popf mov test fwait arpl jnp movsb loope mov push add push into push sub inc aam addl adc repnz xlat lods pop mov or nop in enter push pop dec adc cltd xor jl xor or sahf xor xchg dec mov dec gs jle mov sbbl data16 and fs sub nop (bad) cmc icebp xchg add popa jbe shll ret dec dec cmp adc mov ljmp jge cmpsb test mov (bad) or pop mov out in mov mov xchg push cltd xor jl pushf push popf sti pop push dec cld sti mov push lcall xchg in inc or movsb jnp insl mov push rol test pop fwait (bad) mov idivl arpl sahf sbb xchg test lds mov imul addr16 fild mov inc mull clc shll adc sbb mov pop aaa in aam pop push mov and mov add dec cmpb sti jbe inc cs lock xor ret iret lods les lods nop and ret mov movsl movsb fdivrs sub fdiv sbb (bad) cmpsl jge mov daa ss into dec xchg adc inc repnz adc pop cmp push sbb cmp mov jb inc es mov or daa xchg mov inc (bad) into std pop imul adc sub hlt dec frstor and rclb sbb dec mov jo push loop je gs mov dec fwait loop pop xchg dec fmul repnz ja inc ja jge pop pop aaa call das hlt xor sti fsqrt adc ss mov mov lods pushl (bad) sbb cmc mov mov movsl push push sub fucomi lret hlt mov (bad) cmpsl dec adc aam fwait ja cmpsl push inc mov fldl in lds adc test or mov jge enter cmpsl test mov pop aas idiv fdivl mov or jl daa xchg mov ret inc pop mov lret bound push dec dec and insl insb in lret add inc divb xchg and sbb jns lods cmp mov cmp push mov decb jle xor xor and outsb lock or xor (bad) xchg jo sahf testl (bad) mov jnp mov rcll lahf dec and enter je push out les std push popl sub rolb cwtl adc lahf push hlt popf movsl sbb inc push and jl pop daa fdivrl aad pushf push xor jne ficomp cmc pop or aam shrb jo mov dec xchg dec iret mov aaa repz imulb mov loopne mov xchg aad sti sbb jae repz ljmp test cltd cld (bad) xchg jl adc sbb mov jecxz cs jle (bad) mov mov and hlt add test iret (bad) dec fs or sbb xchg xlat loopne push decl and imul inc into cmp (bad) dec popa out fidivr (bad) cmpsb push rcll scas add inc fist xchg pop clc xchg fnstenv in mov mov outsl jecxz js dec out popf insb xor ficompl (bad) pop inc rol repz fistpl jp lods movsb sbb mov int3 push das mov cmp ficompl push mov xor es or dec push xchg add and scas test xor inc pop cmc add in out xchg or dec dec and das or mov jmp decl sbb insb inc pop data16 xchg or sbb inc xchg adc fisttpll jno xor js scas inc push push sub and jnp cmp sub push out sbb inc cmc mov (bad) xor (bad) stos xchg mov inc cld test sub (bad) ja adc ljmp mov cmpl push (bad) imulb outsl fs fadds dec sub imul dec add add cld xchg fcmovnb pop add sub ds and das lcall or jecxz push fdiv rcrl imull mov xchg mov push add jecxz adc xchg cli insl popa out lret inc scas mov cmp lods sub pop push xchg js mov and dec or jecxz jge adc mov dec int negb out lods in pop push imul jl or dec in pushf mov int3 xor rcr repnz cltd decb out lret sahf mov xor pop add adc jae or rcrl lock lock inc out push mov xchg inc push dec out xor ja mov pop mov sahf les jl test pushf jle addr16 jns xor xlat push ss popf dec int3 or cmp fimul std inc add add xor inc fcoml xlat cmc popf (bad) jmp sub dec rcl into push arpl add mov cmpl std jbe adc cmp je rorb jl aaa jp push or inc jg ret out adc and push push hlt test dec mov aam test popa stos (bad) mov sbb enter (bad) cmp aas and (bad) gs js sarb push push jmp xchg out iret dec push iret mov push decl jae jmp fnstenv enter insl fldcw pop sub add adc mov imul sti cmpsb pop jne dec add (bad) or sbb cltd adc sub mov sub repnz push mov push test jecxz pop addr16 lea sbb mov loop dec test insl loope loopne mov dec cmp in pop push popa cli repz clc jmp jnp adc int rcrb loop mov xchg lods incl mov insl jmp lret lds adc (bad) out insl cltd jo xchg mov xor stos xor jmp test xor in outsl pop mov pop mov pop jns xchg adc push mov rcl cltd or pop imul jmp jb fxtract and js movsl (bad) ret outsl xor sub sbb xor cmp aaa scas (bad) mov xchg daa mov jno push lahf enter push mov (bad) jbe dec push (bad) or lret (bad) les push push pop popa andb add and loopne mov popf test dec sub xchg lea inc and fwait int3 add std pushf mov (bad) jp mov xlat arpl je mov stos bound xchg out mov sub jg fs mov and push jae xchg mov sbb lret test pop sbb loope pop push push pop sti jno outsl icebp mov icebp scas jle jo jno push je jne aad mov dec push outsl mov int3 cs ljmp dec add (bad) in mov arpl dec cmpsl pop (bad) lahf push jmp push pop int les sub add add jne out jmp rcrb cmp mov pop and jno or sub push pop scas daa xchg es sub push xchg mov aad sub sti xor cmpl adc push cs lea in jmp ja cwtl mov daa sahf adc test jecxz sbb (bad) and lcall iret jg stc mov mov sbb (bad) mov cmpsb xchg imul ret dec inc pop xchg inc sub xchg ret and sti mov add frstor dec movsb lock jb cmp jmp out lock mov imul aas scas lds inc cmpsb add lock outsb fistp xor or jo fs sbb xor mov (bad) movsl push jnp,pt mov push cmp into lahf ficoml and gs mov (bad) rorb jb insb fxch pusha xchg test and dec call and imul repz cmpsl mov imul outsl jg enter test clc mov push xlat and lret in cmp add cltd mov repnz cmp add inc popf addr16 inc cmp pusha iret sbb in jno push test outsl xchg repnz aaa adc xchg pop add xchg cmp pop pop loop sub jae ja xchg mov cmc jl std adc cmpsl test outsb lcall sub adc lret adc xorl push sbb (bad) lock mov stos sar add test dec pop sbb shlb xlat pop push aaa cltd push and xchg aam push out fisttpll gs jae decl adc push addr16 mov shrl push inc or mov sbb jno jl nop es jb jae inc and je adc ret fwait jno fisubrl and pop into push sub das icebp imul jmp dec push leave add sbb mov dec pop (bad) jb int3 xchg xchg and cmp mov popf outsb sbb push mov mov dec mov lahf cld outsl add cmc outsb lahf loop std lods imul lea xor and shrb add inc or sbb sbb add insb in xchg pop add enter scas insl cmpl aam adc aas and push push inc lret mov pop jnp loopne adc or aad movb xor push jb xchg icebp inc push loopne mov dec lods movsb ja js xchg notl mov jo mov inc cwtl mov sbb std ja adc dec dec sbb inc inc cmp mov cmp mov cs push lock xchg jnp sub sbb xor cld (bad) in test shl mov fdivrl repnz inc jnp aaa cwtl sub xchg push pop push add jbe in icebp xor movsl gs (bad) mov or add mov sbb lahf or xor (bad) rolb lret pop cmpsb addb and dec decl adc aas popf mov mov fwait cmp or mov test push notl jge rolb jae scas adc sub imul cmpsb mov imul pop out std dec out jle cli or ss mov xchg jl xchg or sahf adc push sbb aam cwtl xchg pop (bad) jno out iret inc ljmp ljmp jns xor and arpl lret mov hlt mov stos xchg adc mov (bad) (bad) push mov mov es rcr push sub mov dec mov jmp inc mov shr push enter orl mov pushf nop movsb rorb addb arpl inc cld xor xchg xchg pop imul imul or call xor pop push or js pusha stos dec fistpll divl xor roll and es and mov int3 movsl and push shlb mov dec inc es mov jl lods (bad) cltd cs push (bad) (bad) xchg dec xchg push mov add cmpb sub and mov test jg push stc into dec fadd (bad) lahf (bad) lahf sub pop push rcrb add push xor or pushf ja mov cmp jnp jecxz,pt push xchg xor jl push je inc sbb cmc fs fdivl cwtl rcll inc in jbe int3 daa pop xchg ja adc testl test mov mov xor fnstcw aam pop data16 lcall leave pop and adc or pop mov ds mov shll mov movsl cmp adc std xor stos stos dec (bad) lods sub mov (bad) mov mov cmp mov iret stc out outsl sbb mov and lods sub jnp cmp cld jns add and test jne jb imul (bad) mov and fadds scas lcall cmp mov hlt rcl add pop adc stos (bad) pop cmp pop lahf mov push in jne ljmp xor jp mov outsb lods jecxz dec ltr pop pop stos dec es mov dec jecxz xor js gs mov pop push in push inc adc inc lret nop popf dec movsb lret cmp sbb xchg sbb fist lret push nop movsb sbb mov nop test std (bad) cmc cmp fwait inc lods or hlt dec sbb cmp cmp ret scas pop frstor loop int adc int pop bound push xlat iret xor mov test sub aad lock xor jno push stos cwtl int cmpsl fldl aaa (bad) cmp pop mov and sbb pusha sbb and (bad) fnstenv sub mov dec ficom (bad) or (bad) pop or cld out push ja cmp push hlt mov pop xchg jno call clc (bad) aam xor outsb test out dec mov (bad) cmp shlb in js jno adc nop sbb cwtl aas mov stc and insl add lret jno call pushf pusha hlt test mov outsb insl mov in and (bad) mov fninit jns stos mov xchg (bad) or (bad) cli push mov pop out add jae jb xchg gs call aam daa ss cmpsb stos int fistp stos push sub movntps xchg ds fnsave add xlat ljmp sbb dec test inc mov mov adc mov dec push dec mov and test mov and mov pop lock iret or xor sub lahf aad lods cwtl repnz mov inc xchg xchg daa cwtl mov fdivl dec or pushf lcall inc inc sbb adc sub movsb out ljmp mov xor (bad) xchg pop push mov mov pop cmp outsl int sbb xchg cltd popa in add movl std shll ja adc dec movsl push jns adc sbb jne int3 fcomi push idivb push xchg adc js sbb inc sbb test mov push adc dec sub mov mov nop pop imul jnp mov aaa pop in mov adc fiadd (bad) xor cmpsb in dec inc jnp xor ss popa fs xchg mov out mov (bad) jg jb cmp ds jbe (bad) mov scas sub push jl inc dec adc pop jl adc ja or and bnd add xchg les sub mov arpl (bad) lahf adc insb mov jge fisubr bound fdivrl ja insl pushf repz (bad) cli jns jno push push ds pop cli movb fadds xchg add jmp scas ljmp push lret adcl mov in iret gs (bad) psrad fadd mov hlt fidiv jmp push out pop in sub imul adcl lret movsb sar mov add mov pop pop add jg rorb add sbb std jg or mov mov mov (bad) cmp stos xchg xchg add add sti mov mov fsts cmc imul lods lret push cmp lsl inc jbe imul das add jns into jmp jbe (bad) xchg xchg movsl fwait jo aas pop das dec fwait and mov sbb out add cmp loope cmp and mov std outsb mov cmp jl mov push roll sbb sbb ret mov mov inc loopne,pn icebp pop subl lcall idivb cwtl lods or (bad) in into cmovp repnz mov and lds sub fwait xchg xchg les in lock pop jae xchg js in push pop insb cmp lahf out jb xor pop fisttpll mov push xchg (bad) (bad) xchg xor xchg fbld add scas mov es test (bad) pop dec lcall inc or cmpsb loope cmp inc xor sbb and les loop and ror fist mov xchg adc lds cmp call loopne test fidivrl scas cmpsl rorb data16 das pushf int je adc insb jns mov fs jmp push into imul xor push jmp xor push pop mov xchg lock jle jg xor jnp xor jp mov inc jae mov mov sbb loop fs pop mov aas jbe jg cli not add xor aam pop dec into test shlb stos in mull pop push int cld dec adc lret cmp pop pop cmpsl push mov mov adc cmpsb push dec push sbbb repz aam gs ficoml test movsl sub xor xchg fimull or xchg xchg xchg (bad) rclb xchg test dec out xchg mov mov stos cmc mov jle xchg mov sbb xchg out jg push gs mov out push mov test sbb inc scas (bad) das paddd jne jmp add aam inc pop stos divb lods pop cmp pop mov data16 addl dec and sub mov mov xlat mov (bad) (bad) leave roll mov jge jmp stos adc xor mov jmp fstps sti cli ss dec (bad) cmp inc sub mov dec sub fstp in add test or fldenv loop mov mov sbb and out sbb mov cwtl or inc pushf sub cmpsb push mov push outsl xchg outsb or frstor stc ds repz sub mov sti outsl push inc inc test negb or mov inc incb pop mov or push sub push inc sub push jo mov jne cmp pop pushf in cmp mov or pop inc push gs mov shlb bound and mov sbb inc xchg dec sub pop adc test add popf pop repnz clc and shll iret imul mov (bad) xchg in pop (bad) (bad) (bad) mov add es or xchg sbb enter ror cmpsl ud2 sahf mov popf hlt push mov (bad) pop dec mov sbb adc in or dec xchg jecxz (bad) mov adc mov mov add inc and (bad) cli mov xchg std pop sbb (bad) into les xor inc fimull xor pop xor lods fwait adc mov addr16 imul cs out pushf or xchg fadd adc adc inc sub xchg pop insb fisubl imul pop sbb aad mov popa in roll sbb (bad) sahf test adc and xor pop dec std mov adc imul rorl xchg sahf test fimul add cld jmp mov mov mov out lds mov dec mov inc je cmp sub jae mov pusha fldcw and dec inc scas outsl push or out xchg xor or inc hlt rep push adc and cmp (bad) or popa and call mov ljmp xor fcoms sbbl (bad) aas int3 lret aad icebp dec iret dec push je fnstsw push cmp insl dec lcall ss and mov jno sub out pop repz ss gs je sbb mov inc mov pop fs movsb nop pop mov call push jne dec inc mov loope inc shll or inc cltd (bad) imul fnop movsl das loop sarb mov stos mov (bad) cli (bad) xor sub mov addr16 stc sub sbb pop dec cltd jge mov mov sbb ss je xor repz sbb scas ror bnd fnop adc in scas movsb mov xchg jno nop jb cmp mov in xlat loop push mov dec or outsb cs inc mov and in addr16 cli push sbb mov mov or pop int jp cmpsl and dec daa insb inc (bad) pop sbb xor pusha inc sub (bad) sti pusha jo xchg out sub mov pop rcrl jbe sbb out fisub insb sbb mov dec mov cmp dec stos push pop mov jl inc out int daa add repnz push cltd lret movsb xchg leave incb out arpl jg mov or sub adc inc jp sarb add or cmp leave sbb add js xlat in add arpl ja pop cmpsb jo out sarl push push addr16 jno sub arpl dec (bad) push iret ss cmp sub jae jl mov or xchg repnz ljmp ret sub fwait rcrl mov (bad) sbb ffreep stos js xchg stos jmp pop pop hlt incb inc xchg je mov dec sub jg pop ljmp ret in inc scas and push jnp (bad) je ret mov jnp lret cmpsb jb jae mov push cmp fwait adc inc jge test xor aaa xchg sub jns add push dec lea mov mov xor sahf out push push inc aas sbb cld push sahf push les xchg scas and enter fs xchg lret mov arpl (bad) das or aad mov or xchg sahf push sub pop in xchg push pop xchg adc cmc or push jb cmp push daa pmaxsw push mov lock add fbstp inc leave ret bound and adc sub iret insb cmp les add (bad) xchg nop mov lahf pushf jp dec inc lahf dec mov test loopne inc neg add roll adc jae fdivl js ja jnp stc mov sbb inc out aad xchg jp pop jge inc xor test lock out les adc movsl and jmp (bad) ret cmp ljmp mov je jbe sbb insb xchg pop popf (bad) mov int3 nop sub gs test mov mov mov jge sbb inc jl call dec cmpsl popl mov cmpsb daa inc loope pop push mov xor xor xchg cs into jge pop jl and cmpsb mov xor push jne sbb sbb incl dec adc in iret sbb js aas jl fwait add int pop lock mov cmp dec and pop rcrl ret sub push jp adc jle in dec push ficom popa (bad) sub mov ss fidivr xor mov push clc in aaa sub cwtl push cmp lcall dec enter popa in cmp fmuls mov test sbbl ret pextrw push jle jne adc xor mov std xchg out mov hlt jmp data16 movsl int3 scas mov lea cmp dec test cmp mov into cltd cmpl inc fyl2xp1 or bound nop in sahf je test jae nop sub nop mov push cmc sbb and rolb hlt sbb test cmp in test call std repz push ds xchg mov sbb notl int sti mov cltd in dec sub (bad) cmpsl sub mov (bad) aaa inc pop mov rdpmc dec lea rcr cmc (bad) movsl cmovp xor push push arpl cmp fldcw and xchg mov xor rol pop mov vpalignr push cli fsubs xlat divl rcrl lock imul pop add inc ror loop mov lds stos jae xor test cmp dec in fadds jp mov add (bad) cli mov leave pushf and in pop or jnp add test cmp and push popl lret jbe jo test inc mov cmp sub insb fnstcw cmpsl jmp and add test scas push (bad) sbbl push push mov cs in jl jae or ret jns movsl mov arpl mov mov jnp pop stos cmp xchg aas aaa es mov ss sub inc add jle out jp pop cmp fildl push into cmp xchg push pop xor cltd sub ret sub bound push insb dec jne adc jb pop mov jmp daa hlt sub mov sub inc jno adcl iret stc push xor xorb sub imul iret adc dec push pop mov jmp jge movsb jg popa sahf shrb daa cmpsb (bad) jecxz add mov ljmp inc jl push jl mov out jmp cmp ja cmp loope jecxz jle pop lret inc cwtl lahf (bad) dec mov rcr clc daa jbe and pop hlt xor cmp rorb in outsl (bad) in add lcall insb mov and push dec push and jmp mov sub call sbb lock xor push (bad) pushf int3 (bad) cmpsl mov xlat xchg lock pop or inc mov rcrl pop cmpsb rcrb mov xchg jb inc xor pop fucomp and xchg nop cwtl sbb mov std lods int3 jle fiaddl and mov cltd mov push sbb stc loop add nop add push movsl push aam inc xchg repnz xchg xchg ja mov sbb push repnz popa push push pusha sbbl stc ljmp or subl imulb and dec out xlat aaa and cmp cmp cwtl pop add into iret lret jb fcoms mov push fcmovnbe hlt push stos adc lret pop call cltd push es out int jle mov pop mov test rcrl js add or (bad) fiaddl dec sbb add (bad) in je pop and inc inc sti (bad) cmpsl icebp inc and sub lret pop (bad) add in or inc decb mov jl out jmp cwtl jle insb hlt in andl jg pop adc decb pusha test mov inc stos pop lcall cltd mov mov fnstenv dec pop xchg jne enter mov mov (bad) int movsb js leave pop mov (bad) in rcr leave or movsl and xor push sbb sbb push mov push sub lcall dec sarb or cld push testl das scas jl nop fistpl (bad) (bad) mov stc call jae cld pop int3 adc insl out or (bad) mov sub or push mov scas xchg jbe fsubl rolb inc push stos mov dec sub push shlb lahf sub das dec cmpsb and mov fwait ljmp (bad) int stc cmp es jge inc mov movsl jmp dec rolb jmp repz pop xchg rclb ds cwtl rcll sbb jnp bound lahf mov outsb hlt cmp mov and int3 std mov cmp (bad) imul stos jns mov jge (bad) lret xchg and add fmulp sub dec mov adc cld adc adc mov idivb les (bad) adc stos push sti lea jge ficom imul adc ret pop jns cmpsl (bad) or sbb push fadds dec mov fnop inc dec ds stos ficompl pop cmp add or cld pop cmpsl scas adc dec adc mov xchg xchg cmc rcrb jmp incl call push in sarl add orl dec mov xchg push je add pop scas xor ds and cmp es push fwait xchg test cs mov mov test int or sub imul mov and stos inc sbb aad sub cmpsl lods dec out cmc dec adc mov push shl cmpsb loope sbb clc xor dec cltd or repz mov sub jae jle mov aas fistpl pop fwait inc outsl push (bad) and cmpsl fistpll iret gs insl movb test or roll sbb sub push cwtl jne movsb std mov fwait xlat loope cmp mov mov cmc or push jmp xchg gs mov adc cmp cltd stc push mov stos mov (bad) lret push push cmp mov inc scas cmc fmulp (bad) jns lahf call inc sarl sahf fidivrl mov pop pop lds movsb lods es push jge testb and out inc jnp sar mov les mov int inc outsb mov and sbbb lods (bad) sub cmp xor out sbb lret cld mov shl sti cmp popa clc mov fs add addr16 clc xchg popa inc add sub jo jb cmpsl icebp (bad) push jb jae sar scas jg push cmp jecxz fxch cmp or push int gs insl loop push jge lcall xor loope ret sub movsb js mov (bad) or and xchg jg fsubp dec jo data16 cmp or jnp aam sub cwtl lods mov cli insl test fsubs iret or jge test cmp add daa xchg test lods pop jae mov mov repnz ds shrb fsubrs lock loop fisttpl jecxz jae xlat or dec mov mov xchg jmp jbe inc xor mov arpl push into dec cmpsb jp ljmp sti test lea cmp (bad) mov push mov cmp mov mov ds dec daa icebp push sub inc int3 lods in movsl mov mov imul (bad) mov (bad) push cmp insb pop out shll xor xor sahf mov cmp xor jp insl cmp mov iret cmpsl pop add stc (bad) bound (bad) out negl xor aaa adc mov jmp jg xchg imul push push pop testl xchg (bad) jb xor (bad) cmp add rolb jp cld dec jno mov add xor mov xchg or and mov mov push mov mov pop mov aas movsl (bad) mov cmpsl lret or push repnz dec sub push icebp pop jecxz xchg lods sbbl push cmp push fdivl test call jno pusha dec cmpsb mov in sbb orl ret outsl ljmp adc ret clc xor adc fsub xchg xor scas std adc cmp sahf mov mov out ficoml sahf js or nop dec (bad) pop incl push lcall jle dec cld outsb and sub cmpb jne jl xor mov dec insl xor sahf int3 mov xor jp (bad) add ljmp pop out lret dec xchg xor nop push cltd add leave adc xlat fdivs or repnz inc popf mov ja adcb ffree je cmp xor inc pop mov xor stc sbb jl inc xorl inc pusha cmc sti int3 dec sti push push inc mov test test pusha jno out leave push lret xor jecxz pop je and adc data16 mov pop loope mov jecxz and (bad) nop mov test stos jno lret js ja sbbl call loopne sbb cs das insl std mov fnop cmpsb and cmp xchg cmpsl ds mov cmc cli jne pusha adc xor xor push xor sahf mov cmp out lds js fbld push dec movsb lds mull xchg xor dec dec jb jp movsb insl sub mov pop aas (bad) pop repnz mov loope ret and push into int and dec (bad) mov mov insb adc pop mov sub iret dec cmpsb jns (bad) loope negb pop das dec enter loop ss mov movsl (bad) mov push sub lds mov and xchg jmp ja mov pop sbb test loope mov das xchg pop int3 add out in push xor repz test clc shll jo inc xchg negl adc jl stos mov rorl sub mov (bad) divb repz sub xchg es xor lret sub ret inc mov stc jno sub mov add adcl jbe stos int test out dec mov daa aaa pop lock loope nop std das enter adc jle loop in movsb js rcrb (bad) mov xor add addl mov push out sub int push or fisubrl mov cmp insb jae pushf aad cmc mov in lods cmp movsb mov push hlt xchg jb cld arpl sbb fildll cmp mov test lret jp cmp xchg cmp or jmp and inc mov push lret and cld push mov sub loopne cmp (bad) jmp dec ds data16 sbb das and les std or pushf sbb iret xor push leave inc mov test cmp sub je push (bad) adc out adc loop sbbb cmp aam xchg das es push push test cs push or test inc adc mov xor sarb jmp mov imul add adc push pop jp test cmp dec (bad) xor out mov hlt lods push pushw dec test rcl std std jno fidivl sbb sub mov inc mov pusha jbe (bad) cmpsl push ss lret sahf and or inc mov sub aad xlat inc fdivr repnz sbb jnp imul mov pop push fwait jmp out mov xor xchg daa xchg or cmpsb popa or mov push leave lret nop and cmp fcomp insb or push fs shr adc adc or test iret xchg mov dec rcr xor cmpsb add popl test (bad) imul push jg cs jno repnz mov imul or push pushf mov xchg outsb mov aam sub or out xchg or insb push shll mov inc xchg sbb aad push stc push sarl or cld popa jle imul les loop lods or aas lcall sti sub mov (bad) push mov sbb into dec cmp push mov dec fidivl inc ret stos or jae repz daa xor pop cld jle inc xchg popa push icebp add dec fwait gs je aad js or push inc sbb sub lahf lret mov sti outsl es notl push fnstsw dec lret or xchg arpl adc lods (bad) cmc cmp mov cs push jb cmp pop dec xchg jg iret xchg mov mov (bad) add jb popf cltd jb add mov adc jg (bad) mov cmp ret mov test (bad) mov fisubl dec loope jmp push push insb sub xchg xchg and jl lds sbb add int3 jmp mov mov ss out stc sub cwtl pushl aas dec mov sbb out lea mov (bad) lods and insb dec fidivl inc jle sub packsswb xchg into mov cs nop xchg lea and in (bad) push ficom xchg cmpsl dec leave adc sub int3 adc xchg popa sbb jb stos inc enter in sub (bad) mov aad mov imul inc outsl cmp and cmpsb rcll out repz movsl int mov inc inc cmp fildll sub adc adcl test jns or (bad) pop inc sbb sbb les sub lds inc xor js jmp popf shl sbb adc ror je sub repz xchg sbb dec lcall adc aas push jecxz (bad) repz add std call (bad) mov repz mov fild daa sbb test and and jmp cmp xchg push add push rcl jp cli leave cmc cmc gs mov inc cmpsb jne xor lret insl jae xor lahf mov jp xchg xchg xchg popa ljmp mov pop push and and pop cmp fidiv aad pop jecxz xchg pop test jo fiaddl jnp cmp push and pusha pushf je jnp mov push push adc (bad) jmp lahf mov in ret or cmp cmp lds sbbl jecxz (bad) mov fwait jns bound jno ja fldpi push or js jns jno jo cs xor std in (bad) sbbl fsubs in push mov lods cmp jecxz sahf pop or test (bad) faddl adc pop inc out mov adc aaa popa in mov jae popa and mov xchg xchg lods fistl jp xchg jne scas cmpsl mov rolb data16 sub dec test cwtl roll adc sarb xor dec (bad) fnstcw cld lea mov xchg pop pop loope in fwait cmpsb pushf iret push mov test push repnz int3 cs hlt je out and jbe jecxz mov js mov xchg adc pop call mov jne pop and out pop inc push pop rcr pushf insb ret popf fs jne sub mov ljmp pop add and mov shr jae imul stos scas stos imulb inc add sub test xchg sti mov jns cmp mov pop cld mov lea add jge xchg (bad) jae daa cmp inc outsb push mov or popa xorps bound jbe in sarl rorb stc enter cmpsb cltd xor popf lds out sub ret mov in pop gs movsb inc test aam sbb pushf pop and in cmp cmp lret sub sbb mov or xor xchg (bad) test jmp out outsb test fldenv xchg sahf xchg mov add inc jno sub add stos jnp push add pop call sbb aam sub cmpl (bad) mov mov bound dec ja add jge ss and mov sbb rcrb cmpsb xor and push inc cmc fsubrs pop push rolb xor xchg jne adc orl mov push pop pop jns jmp adcl pop mov call and int (bad) mov jmp ljmp lods or into sbb xchg cmpsb sub cmp sub jecxz fsubrl adc pop jno (bad) scas xchg repnz or (bad) ds aaa leave mov call movsb movsl xchg mov std icebp int3 pop (bad) pop aad jle ja cmp jne pop (bad) call and mov dec dec mov out outsb push int3 cmpsb movsb in sahf adc push scas mov lods loop lods sbb shl mov mov pushf jb aas neg adc lods sbb fsubrs cld insl mov scas mov shr je (bad) cs leave mov gs pop pop adc sar mov push mov lds push int3 xlat mov repz pushf inc out pop out aam cmc inc or pop or or mov inc gs fwait movsl jnp (bad) mov pop test xor adc cmp and inc in pusha adc and outsb aam negb cmp lret cmp pop mov clc (bad) push test adc stc mov xchg cltd mov cltd aas lods adc gs jae lea adc popa (bad) mov cmp mov out mov ljmp shrb push mov xchg sub sub mov out mov test mov in pop in cmc (bad) ja decl push fs jmp pop js imul pop inc (bad) pop pop jg iret mov dec push jae vcvtdq2pd (bad) mov jmp add arpl bound xchg cmp sub mov cld add idivb data16 arpl clc push sub adc pop mov fsubrl popa dec xchg sbb push (bad) jmp loop jne pop adc cmp call lock jg inc or sbb imul jnp test push cmp mov and and mov sbb bound mov xchg mov sub mov cmc or mov orps lods dec pop or push repz mov xchg xorb int stc rclb out fwait nop lcall lret fcompl arpl aad cmp sarl mov mov fs fsub and lret add ds nop es fmulp inc mov push push pop mov xor mov mov pop dec mov xchg sarl arpl cmc stc aad insb dec out cmpsl (bad) jmp test push lret lods dec or sub add loopne les push addl std fisubrl test lods (bad) sbb fdivrs sarl gs pop enter add push sbb add sbb divl jns xor adc fsubs out mov movsb xchg arpl mov mov mov pop adc test lds fsubl cld mov pusha cmp sbb dec mov mov cwtl mov xchg in stc lcall (bad) jmp pop outsl je jecxz repnz adc jle cs jns or adc dec imul sub dec ss lret or sub inc mov xchg add loope test pop and cs xor jg popa mov adc sbb arpl gs jb addr16 sti and pop stos dec out pop and adc inc cmp in xchg call (bad) lock jmp (bad) loopne cmp (bad) cmp sub push test pop jge lret push mov jnp cmpsb pop mov add dec add add loope scas icebp inc inc imul loopne movsl ret pop out mov jns sbb in sti outsl ss sub jb,pn lcall jg and mov (bad) out std inc mov fdivl push fwait inc push sahf mov or adc mov scas mov rcrb push and dec mov push mov in xor inc out add in pushf lock xchg cmp cmp (bad) mov pusha and (bad) arpl mov sti flds enter dec xchg mov mov in sbb mov sahf andl sbb or gs (bad) mov jo add xor int test adc outsb cmpsl pop cmp scas dec push ljmp pushf xchg sbb jnp jge dec pop test cmp and jmp xchg sbb sub sub xchg scas repnz mov ret ret loop out rcll dec add jl sub imul sbb rorb or fbld sub mov (bad) sbb cmp push push sub hlt aaa mov jecxz div mov ljmp jb jl xchg jmp mov ret inc fwait jbe or ret mov cmp cmp mov add insl loop or ret adc lret inc xchg daa xchg sti call add add out fwait mov cmpsb test cld jb in jae dec pop dec test rorb jbe arpl dec mov or js int3 in push push iret jae mov ljmp nop xor cld cltd xor iret sub shll (bad) pop (bad) ja inc loop stos test cltd push or int3 pop loopne cmp pushf and mov ret iret adc mov cmp (bad) lods cmp js mov inc sbb (bad) mov jb aad add sbb dec xor jbe jne mov clc lds cmp pop pop jp popa xchg and (bad) es scas inc ret int outsl mov addr16 insl jnp jno cmpl fptan xchg xchg push stc and jno sahf mov mov jg cli adc add orb dec jge lods xor call mov dec les je add pop xchg (bad) cwtl les and lods xorb inc insl scas (bad) out dec xchg ljmp cmc out fwait mov lret cs push mov lock dec mov lods fmuls mov daa adc stos aaa inc daa dec (bad) scas imul dec aam cmpsl jp dec jmp call imul lock fs pop adc push jp rcrl and inc xchg add add call stc inc cs xchg mov mov sahf outsb push dec (bad) or xchg and xchg mov or rol adcl mov push cmpsb mov jo neg sbb outsb je sarl xchg jg xchg mov pop shll out push movsl fwait lods pop xchg js (bad) (bad) or add inc rol jl lahf add lahf std je jge push pushf int3 lea add cmpsl adc dec in or lods push jle mov into cld push xchg (bad) in pop scas sub test mov das sbb imul adc lahf stos jecxz arpl stos ds sarb and push pop outsb in add or cs into add aam sbbl stos or nop (bad) xor jae jno daa pop ds outsl push fdivs add dec push sub test mov inc and (bad) rcll xlat mov sbb push mulb popa jns cmpsl dec mov (bad) daa pop jecxz div add lret mov push jbe rorl cmp (bad) test jmp cld sbb hlt xchg lcall jg enter insl aaa mov jb inc addb and sub jecxz test push or arpl sarl les insl inc (bad) addr16 in lods cmpsb and popf pop inc je mov les xor (bad) loop add push int pop push and dec dec fnsave aam rcrb dec xor add cmp mov aaa xor pop push test test jp call jb imul jbe mov and mov notb addr16 adc icebp movsl or roll dec mov mov in adc jle jmp iret das out or rol fidivr repz mov add xchg jle pop out je jno inc xchg das sub inc decb fidiv cmp lock mov sti aas lods pop inc cmpsl pop stc mov lahf scas push xchg scas (bad) repz dec inc call clc ret push xchg ss lods stos cmp pop insl in daa push inc or insl sub and and pop mov sub sub and test popf xchg flds (bad) lds aas faddl lret imul mov stos xchg cmp push inc adc or sahf addr16 out int sbb loopne lock (bad) mov nop loopne adc adc adc mov fs int sahf cmp scas dec (bad) ds rclb imul movb lcall inc ret mov sbbl out pop in mov mov pop adc push jae sub push and call xchg call (bad) jns push int js push aam loopne sbb adc in outsb push rol xchg mov adc inc sub inc jmp inc mov (bad) jnp push leave stc cs or outsl popa xor mov push dec and mov stos cwtl jp daa fisub push mov les cmp dec pop jno test lret jecxz jmp add xor (bad) mov test test or test das jb mov or lcall (bad) dec jmp or mov xorl mov repnz dec mov mov xchg (bad) idivb push sbbb shr mov fcmovnb xor add ss pop xchg push popa inc push inc push mov fstpl jb inc test jle ficoml jecxz sub aam jl ret xlat mov jg pop xchg push icebp jo test xor fsubrs sub inc bound repnz nop cli jg fwait mov int3 and and imul or jno push fmuls out pop push push ja jbe cmpsb xchg pop jo (bad) fnsave xchg jns inc lcall pop fiadd cld push sbb dec in push scas pop push mov cs adc push push push (bad) xchg push jmp sub xchg mov inc push (bad) jmp dec add (bad) lock ret push hlt jns jecxz mov jns js (bad) ss sbb jo cmp fsubl add cld sub inc (bad) fistpll test mov rcl es pop pushf test mov test push fmuls adc xchg xchg repz xchg testl out inc mov pop sahf xchg data16 sub and mov and outsb gs mull decl in fs cmovbe pop cwtl add cld stos sub call push sbb push aas jmp loopne mov mov mov iret inc push outsb push mov pop pop icebp rclb mov rcr sub enter or ja ja fs inc adc lret loopne mov sbb xor loopne pop sbb fidivr cmp sub lret out mov pop cmc add ja out or (bad) jno or pop sarb repnz lea xchg push pop mul stos inc pushf cltd pop xor insl push xor dec jae jnp pop xor insl xchg xchg jle lret xchg dec inc pop push loop sbb push dec and mov lds addb lahf mov add jb push xchg je (bad) and lods mov xor xor rol mov sarb scas mov popa jo lods loop fs cmpsb fisttpl jecxz mov lcall nop pop cltd xchg movsl xor xchg xchg (bad) fstpt or xchg inc jb push jnp mov aas pop (bad) dec enter stos and and je sbb xchg scas or and (bad) dec pop xor jp jg roll stos ficompl lret je ljmp inc or pop movb fnsave mov inc sub mov out jg xchg and jbe andl mov pop sti mov in sbb pop sub dec test imull rorb int3 popa mov fcmovb fcmovnu in push sbb push stos test repz ficom ror (bad) mov adc call push and mov add adc cmp (bad) mov scas push cmp or push lcall jns fnstsw cli jl je cmp dec jbe cmpsb mov pop sub bound mov mov ret fbstp setg addr16 sub push or ret dec test aaa adc loopne insb leave pop vaddpd cmp adc xor ss ret addb push jecxz inc fwait andl cmpsl jne mov and or shrb add jns jbe mov adc dec jmp xor dec sbb mov xor addr16 sub daa mov out dec mov add cmp aam sub outsb test cli xlat rcrb cmpsb (bad) push int enter lret out lret xchg xor (bad) and (bad) (bad) and adc mov test dec pop ret mov cmp pop into push adc pop xor dec mov xchg pop sub jo push and aas dec pop mov xor push or in cld std popf inc dec pop sbb outsl lock jbe mov cmp dec insl and and or icebp sbb push push sbb fnstsw sub pusha movsb push xchg adc inc fisttpll imul fsubl sbb adc mov stos mov or scas add sbb hlt cmpl lcall (bad) mov adc jnp scas loopne test mov push cmp ds stc pushf (bad) fsubrs jo (bad) in xor push dec cwtl inc fdivr clc cmpsb mov enter mov sub xor leave call cmp pop daa pushf outsb imul out nop cmpsb sbb pop ret mov push lret sub xlat stc pop lret push lret jbe xor and push lcall dec jne xchg cli lods mov (bad) and adc adc negl mov lahf pop (bad) stos jne aaa mov lcall scas dec xchg jns jmp (bad) (bad) lock call arpl mov cmp cwtl lret xor out add (bad) ret lret inc dec lret push fdivrp pushf cmp or mov adc pop rorb and pusha ljmp (bad) mov rclb (bad) add popa shll add je adc dec cmp sti jne cld dec (bad) mov cwtl mov addr16 xchg repnz mov ret dec add daa pop adc cmpsb jno jne stc lretw jge outsl mull inc mov test (bad) ja lret int3 sub or fdivs or dec aas rolb xor mov arpl sahf add jns (bad) jo sarb fstl outsl cmp push (bad) mov repnz out push jg add movsl pop mov sbb mov mov push pop stos (bad) push imul jo int xchg xchg inc stos ret cwtl jno mov sub xor popa pop adc (bad) shl mov movsl pop (bad) shrb iret mov int3 sub (bad) lret jb sbb (bad) lret fldcw notl daa jnp inc js fild lahf std xchg xchg (bad) sbb pop sbb mov orb stos lea incb xchg mov lahf xchg repz mov sbb cli mov cwtl push mov mov mov (bad) loop rcl mov inc sar dec rorb rolb jge clc ja ss xor dec faddl or lcall test (bad) mov lods insl push push sbb dec pop rorb mov adc mov inc int3 fild call adc push push movsl lret push (bad) adc dec pop jg pop or xchg mov (bad) jge movsb cmpsl cmp and fwait test fs push les jmp cmp dec (bad) outsb movsb cmp mov test jmp ret and test sbb push outsl inc negl fstpl stos das cmp xchg les and jne push mov dec jmp daa test or push mov or jo push push sub ds sbb mov ror popa sbb movsb fimull pop ljmp sub (bad) dec lret in xor mov cmpsb (bad) mov sub inc mov mov cmp aam mov sub inc mov movsl cmc xchg pop addr16 dec dec sub clc add test or xchg mov sbb int mov adc push movq (bad) aaa jmp sub repnz xchg mov pop in and test cltd sbb mov scas pushf mov jp inc and rcrl or xchg xor scas nop nop subb push or and xchg (bad) sbb lods cmp cmp jl in (bad) lock push sub sub xor ja hlt stc fucom sub sbb fdivr mov push in call mov add cmp jmp lock incb xlat push cmpsl inc jge dec je cmpsl in pop xchg xchg divb pop popf push dec sub jg cmc mov mov sub fnop xlat cwtl mov (bad) cmpsl pop mov sti mov adc jg cmp jle lahf inc sahf daa fnop sub xor and test adc cld std inc or fcompl sub push aad popf push aaa aaa shlb pop in mov push mov inc push cmpsb call adc neg or jmp xchg leave dec gs pop fimul fcmovnbe std xlat dec imul or cld sahf dec xor js outsl imul scas xor data16 adc pop push pop lock in (bad) out test or in cmp lods lds dec and fbld jmp add mov xchg push cmp cmp lret loop pop fidivr loope (bad) cltd jnp out lods scas adc push movlps inc mov xor xor cld movsl pop inc sbb pop push aad jns pop push les jns jae and clc or sarl stos pop loop dec std dec dec popa xchg mov cwtl push imul xchg pusha add test or sbb pushf int3 mov pushf xor dec (bad) jbe jmp call push sbb aaa inc adc mov sarl das mov jge fisttpl and lcall imul jo and imul (bad) loop icebp (bad) repnz xor lahf leave jo insb subl fdivrs xchg sub mov cmp mov sub jnp aas fcoml fadd cmp inc rorb (bad) mov int cs fildl aas lahf mov cmpsl jb fcomi inc push int3 rcr push sti jmp xchg mov (bad) jb ret or sbb scas dec and pusha outsl push imul xor ret xchg push daa inc (bad) imul cmc pop repnz jmp roll add inc jecxz mov xchg cwtl mov insl push cmp std xor das inc mov les jno movsl enter frndint repnz push mov in mov outsl pop pop out xchg inc xor jmp mov addr16 xchg or (bad) lret bnd (bad) pop imul mov mov in pop stos and mov nop add cmp dec out sbb in cmp xchg mov cmc cmpsl inc (bad) mov push repz jne mov dec popa inc mov mov into insl lahf scas cmp ja mov mov add and jmp mov sahf (bad) xor cmp cmp mov or daa cmp jo and or das ja stos cld in mov enter jmp sub adc push leave sub xor ljmp lret add xor push (bad) xor imul pusha cmp push data16 hlt clc stos cmp cwtl out test jae mov fwait dec mov sbb push dec leave lods out out jne leave mov jne push loop out jbe shll add jns sub lds xor std hlt lods lods pusha fnstenv scas (bad) cld cmp push adc ljmp xlat mov (bad) call inc repz stos jb and adc inc stc out dec push mov ds mov js push push fisubrl push and pop sbb jb lods mov mov xchg mov sub push std repz shll add mov pop decb cmp mov orl pop xchg ljmp jle inc jecxz xor mov jmp xchg std ja xchg inc xchg jno cmp cmpsb dec xor xchg mov xlat pop push test dec iret and (bad) push fs les fxch push icebp ja insb add push les (bad) jns jl loop imul ss bound mov sub es push ret pop mov mov jecxz cmpsb fstl fadds pop add add sub lock sbb pop mov movsb xchg sub mov mov imul inc mov sub push aas in jl test pop dec and mov push inc pop add sub push idivl sbb mov mov dec xchg sbb jle mov icebp (bad) ds aaa xchg fcoms cmpb les jbe (bad) or lods and fwait or xchg loop mov mov cltd add push les (bad) cmc pop mov (bad) test mov lods adc adc xchg nop push test mov mov xor add sbb pop pop pushf cmp dec jge jmp dec fsubr pop mov mov aad (bad) gs lds xchg xor pop stc add push dec adc add repz out mov xchg xlat add sub stos adc push (bad) repnz pop clc cmpl inc mov or aad enter jne cmp mov ljmp sbb pop inc cmp and imul pop fs pushf out ds int out (bad) push mov mov xchg adc inc (bad) adc push clc push pop mov dec call (bad) push stc mov add rorb orl or call mov mov sub mov (bad) mov jmp dec xchg lds mov xchg fdiv aaa into xor mov inc in mov stos popf fstps test loope mov lahf aas sarb jle xor rcrb mov cs push out roll (bad) arpl test (bad) push and repz jecxz or ret outsl mov arpl mov inc (bad) pushf mov mov inc jnp fistl or sub popf jle out dec xchg add adc inc or jmp sub pop or jns pop sbb fs push mov add (bad) pop aas repz jne mov push push mov cmpsl movsl mov imul leave sub mov out xor xchg scas and fiaddl mov fnop and insl imul shrl xor lock hlt sub mov jl data16 inc (bad) xor mov arpl pop dec dec imul lods sbb int3 popf xor cs aam push xor imul xor sbb dec xor mov xor xor iret and dec dec jecxz ficom imul mov push mov fcomps jne cmp (bad) int3 loope mov mov adc mov int3 (bad) mov insl sub cmp mov test cmp dec pop push push jg jge in pushf imul clc hlt in test pop jp sbb xchg fdivs rolb xor sbb shrl push add imul inc lret pop jle cmp cmp cltd adc add clc pop pusha pop outsb jl mov pop dec push dec test cmpsb pop lods adc mov ds sub push and xor push sarb es cmp pop mov push stc movsl incl mov pop lds inc mov cs leave sbb lods fwait jo inc push xor out dec dec xchg mov pusha push dec sbb sub (bad) insb mov imul sbb shrb aaa outsl cmp lds rcrl mov call daa pop jne xchg jge rcll ret fs xchg cmp or cmp xchg insb jmp inc adc jp clc xor (bad) dec mov mov in sysret inc mov je mull test flds inc cmpsl pusha int and cmpsl ret iret stc lock lods sbb pop adcl add repz xor mov inc ss cmp adc mov sub add js lods test and adc movsb push jle mov pop stos inc fisubr cmpsb (bad) push xchg int3 mov xchg and and movsb lahf in and sbb jb shrb faddp xchg out rcl xchg rcr addb or sar dec loopne sub ss imul movb pop pop mov mov jl iret ror push pop cwtl mov dec add xor es push (bad) mov cmp pop (bad) divl cmp adc cmpb sbb in fld sbb popf jno lods das fucomp add mov cmp push lds inc dec sti pop in sub (bad) aaa jg pop lods xlat outsb testb pop sbb jmp in pushf sbb les push pop xchg cmp out insl cmp mov xchg rol cmpsl push repnz popf (bad) ds add test pushf in pop jg daa fwait mov popf shrb (bad) bnd enter pop clc mov shrb jle and xchg rorb adc pop cmpsb add aaa jp or ljmp mov xlat mov inc sub leave mov xchg lods mov sbb dec int iret pop sbb xchg mov push pop das dec and insl fsubrl jne aam inc sub xlat cmp fwait sub call mov pop xchg pop jg dec gs add pop loop cltd pop xchg insl dec and jne imul adc xor push push xchg and out push aaa lcall push push push add fwait xchg xchg subl mov adc int3 jle sbb lods mov mov das (bad) xchg icebp cmc repz ds jnp or les adcl cmp test add hlt add es push aad add mov es xlat leave mov adc movsl aam adc (bad) sub xor pop push push jbe xchg lods jmp movsb js lret jmp sub push mov and sbb es push xor cwtl lea jo es cltd aam cmpl xchg push push pop fdivl stc insl push imull daa imul adc lcall push dec pop push lods gs clc or inc sub (bad) and test add push push cmp mov sahf fidivl and cmp dec enter xorl popf push in insb leave nop cmp jl cmp cmp mov cmp mov enter cmp dec addr16 ss mov jne dec push pop push xchg cwtl fwait or das mov sbb in test adc xlat inc mov mov mov fnstenv cli cmp sub lcall lea xchg repnz movsb (bad) push push (bad) pop dec dec adc in jo mov jmp inc lea mov jmp inc addb out lea sbb cmpsb dec imul mov jmp push fwait mov ljmp loope cli rcrb sbb addr16 mov cmpsb add push mov xor adc jae pop movsb mov jl jmp insb pop adc js test enter test cmp mov fisub push int3 adc xor mov stc negb ret or scas rcrl inc xor int mov xlat inc cwtl std adc pop popf orb mov add scas pusha ret dec and aaa insb loope gs popf std and lret xor cli xchg stos mov mov push imul pop adc dec xchg sbb rcll gs popa jecxz aam in rcrb xchg push jecxz dec stc sub fldenv cmpsl xor in push int3 mov insb jno lea mov jns xchg es dec mov lahf pop adc sub mov jg inc mov lods cwtl push (bad) mov std movsl sub rcrl (bad) ret (bad) int3 sub fs sub or mov mov adc jnp mov insl sbb mov cmp test mov xor shr pop lahf sub and repnz popa rcrl insb inc cli call outsb in out mov sti sub repz jo mov mov or or jge pushf mov pop adc pop xchg daa cmp and mov jp fldl sti cmp dec xlat stos sub mov mov test stos pop or or dec mov fwait bound pop in push das cmc dec pusha sbb aam mov dec aas push int adc jb pop push aas or pop jmp xor or and aad adc jl cmp popa int3 gs mov je lods dec sti loop cmpsl (bad) outsb pop data16 jnp or clc jle adc lea ficompl notl rorl mov pop sbb pop adc xor aaa jle pushf lods dec bound (bad) into icebp imulb adc dec add and fldl2t mov jbe cmp enter mov and cli xor mov les dec lcall inc dec imul rol adc andl xchg sub pushf cmp push xor pop xor sbb cltd xchg cli sbb mov fnsave int orb sub popa sub adc adc dec mov imul std xchg stos int3 rolb push pop mov xchg push popa int js push mov into cmpsb xlat or and loope sahf jl es xchg xchg jno incl in lods addr16 mov xchg push pop repz ja inc or aad adc (bad) repz ret addb lods nop dec jmp inc inc enter jl insb dec scas mov jns mov lock bound mov dec jno out rol imul and sub push sahf add nopl mov aad mov out fdivl sub push addl rolb add repnz div push out stos fwait pop mov pop lahf (bad) test pop (bad) mov sub xchg jnp imul mov xlat ljmp sbb lahf push imul push sbb sub fdivl ja xchg daa dec mov mov jge sahf mov sbb jo rorb jle sahf cmpsb sub xor xchg cmpsb xor xchg or inc into fnstcw jnp sub adc cli in dec inc mov pop (bad) add loopne dec push pop arpl popa in and lock sti inc sbb insb sub (bad) mov jb xor fwait clc pop clc and cmp ds inc movsb sbb imull adc xor dec je sub aaa dec iret outsb in frstor sarl adc bt pop cld push aas stc dec call and cmpsb pop dec mov bound mov inc mov pushf cmp xchg fucom lea push jo lcall jmp mov pusha fldt mov cmp mov and xchg xlat add push test mov loop repnz and cmp movsl iret pushf and mov adc mov sbb push or inc add test inc lahf inc cmp es (bad) sbb adc cmp or movsb ret outsb xchg or scas jo cwtl inc ja fs jmp inc push into stc outsb icebp out iret mov xor bsr out mov pop insl pop enter mov daa das stos mov mov pop (bad) mov mov insb mov push fwait cmpsl outsb mov cmpsl mov cmp test enter xchg movsb scas xor inc adc gs push insl or xor fs fwait push push cmp jge mov sbb pop mov add enter mov not lods lods fidivr pop pop outsb cwtl loopne cli sbb sub cmc jg aaa inc sub lock xor xor push mov jg push mov cmc xchg ljmp jo and les push adc stos adc mov lret aam movsl adc (bad) mov mov hlt mov cmp add and nop jno and (bad) jecxz mov in cmp daa repz mov rol neg and xchg fmull sbb jg add movsb int push xor mov push std js and aam in mov pop add hlt add adc clc xchg jae jmp fnstsw adc (bad) stos jle mov int3 cmpsb xor rcll push pushf mov mov ljmp aam cli test xchg pop mov scas adc and sbb sub xor int sub mov or mov cmp lds xchg cmp sbb mov inc lods adc pusha sbb pop (bad) int3 dec sbb sti xchg inc push push rolb fildll pop (bad) mov in int cmp cmp push xchg jne mov xchg add movsb and mov das cmp jne pop ja mov push shl xchg mov shrb sub loope mov xlat inc outsl and mov in push sbb add dec stos cld lds mov out cmp sub jmp dec lods sbb jb push in jecxz xor lods hlt mov repz inc jbe rclb fldt mov je sub ss lods jae rcrl dec lret cmp loopne xor jb jbe cmp xchg mov xlat jo rcr ficom fisubl loopne jns sbb imul lods jnp push in addr16 or add cli pop push fs mov imul (bad) mov add popf negb push mov inc nop push push sbb mov inc ret push iret mov push fcomps (bad) cmpsb aad stos and fildll sub push lods mov popa cmpl push cmp xor dec xor outsl icebp lret outsb jl rcll loopne negl push and mov jno push stc loop push push dec iret int3 ds xor aas xchg call or or xor mov xlat cs shlb sbb mov data16 pop add pop ljmp aaa test (bad) push jne stc aad incl xchg lods testb stos in sti dec fild stos stc aam lea jge or sub repz mov mov mov imul sti inc fsubl ljmp repz mov movsb js fisubrl xor mov sti mov pop and arpl mov loope xor test ret pop jne pop daa pop mov cmpsb cwtl jp je pop and stc sti mov and sbb call je and xchg jecxz dec fildll (bad) xor jmp push xchg xor clc nop jmp (bad) in mov ja and push adc (bad) pushf pop jmp mov xor outsb daa test les ficoml push in aaa push std jns inc sbb mov ret sub pop adc bound fist xchg es mov pop inc adc pop pop push and pusha push mov int test loopne (bad) lods pop loop ret daa aaa ss jae std aas fstps nop or or pusha fisub out push cmp pop mov pop in inc jne and pop adc (bad) mov call test jmp mov nop fimul jle xchg cmp stc jnp push xor xchg xor hlt jb adc fisubrl sbb mov cmp repz pop cs (bad) xor pushf orl jnp pop lahf or leave scas andl icebp sbb cmpsb xchg loope jo sub xchg sub cmp fmull test testb push push jg jge cmp sbb add pop xor pmulhw js cltd jns lds dec mov mov neg fnstcw add out mov xchg xlat fs jns insb loopne or insb pop sbb lahf je jne or pushf cmpsl iret xchg or imul sub sub xrelease push (bad) xchg mov or lds push xchg adc xor lret mov dec daa inc cmp jg and mov scas icebp sub sbb xor cmpsb out xchg mov add mov push add and or icebp mov pop sbb orl icebp fmul (bad) lods (bad) mov test movsl rorb and loopne mov jnp pop inc hlt cmp call mov xlat mov leave mov bound xchg sahf int add loope or add or imul sub mov imul negb popl sbb incb xchg sbb cmp cmpsl sbb and inc mov ljmp aaa in xor push jge push xor (bad) adc mov dec (bad) fwait (bad) int jne xchg data16 sub inc push pop and repnz xchg and outsl ror lret jnp aad fdivl and mov adc xchg fidivl dec pop fbld mov pop pop sub cmp mov xchg inc xchg mov mov ja lea mov cltd mov call sbb mov fisubrl adc test imul push jb jg jne inc mov adc es bound jbe mov lds (bad) subb popf jo ljmp xor dec adc popa sub in dec mov test dec inc sbb mov mov iret jg orl add and ret (bad) scas xor cmp out pop fs in push jb or mov sbb (bad) jl jp sarb mov mov jmp push and mov dec xor adc dec push xchg data16 jno cmp push ljmp shl aam mov ljmp xlat sub mov aam pop fdiv dec int3 xor lcall and jno out hlt ret xchg rolb insb push cmc mov inc int3 std aas jge mov xchg jmp add dec inc daa push dec and cld mov call jg push aam sub sbb testl je aam sar insl insb rclb fadd push out mov xchg mov (bad) leave xchg sti test cld stc jge inc jg and aam (bad) mov aad stos popf int3 dec add in sahf dec jbe lret (bad) in sub push push lahf int3 push add lcall test pop xchg sti push or mov nop (bad) lcall sub push dec in loopne int3 mov (bad) call int3 lods (bad) orl inc cwtl push adc loopne pop inc cmpsb push test mov mov out mov pop je mov data16 pop shlb stc rorb sub cmp cltd daa jmp psrlw out nop push xchg das out sti xchg stos mov les rcrl ret add add mov adc add jbe scas orl lea sbb sbb lcallw mov mov mov scas xor fcomp push jae ljmp jl ds push xchg outsb sbb pop pop or push add xchg sahf gs jmp jmp mov outsl pop pop fninit imul aas xchg sbb inc pop in (bad) add or icebp mov repz fs cmc inc ss dec dec (bad) loop (bad) movsl repz adc test lds push out arpl mov out jae addr16 cmp add pop insl mov js xchg bound mov mov mov jmp cmp jl mov sbb cmp imull cld or dec in pop or or aas out jp mov cli sbb test ret fidivl fst adc ja cmpl pop (bad) sub inc cmp pop loop mov and push push movsl fsubl mov sub out mov cld (bad) sbb sbb sub add sub cmpl (bad) popa xor ljmp fcompl lahf aas cli mov shlb (bad) mov dec push (bad) int sub or stos dec das mov jmp jno push mov and fildl xchg in test lahf (bad) pop dec aaa pop test adc lds mov mov mov push jae lods and add mov push cmpb inc push push std jecxz mov pop inc ret pusha xlat mov and clc ret clc push insb divb cmpb cmpsb mov adc and jae and div (bad) in stc repnz les adc xlat negl mov in inc adc out push data16 aad cmp sbb leave push pop inc push jl mov aad mov sbb push js fwait ret pop imul bound (bad) xchg lods push adc pop add popa sbb lods punpcklbw cli fsubs sbb pop mov pop aaa in leave mov add sub lret mov pop push ret inc jns in xor std xchg das in in cmp iret adc push int3 imull mov jns into ret aam out fldl cmpsl and jb icebp mov pop aam and pusha rcr jmp jno push mov mov lret mov dec insb cmp loop cmpsb sbb push psrad sbb (bad) dec iret cmc test imulb jae outsl sub decl loop leave js and movsl mov aad inc mov cmpsb push (bad) jae mov bound out imul hlt js out std dec out mov inc addr16 mov push xchg (bad) fbstp iret sti pop (bad) ljmp fst mov test movsl mov mov les stos mov pop xor cmp xchg lret loopne orl or out mov xchg fist mov xchg rcll mov sbb xchg (bad) out xchg insl and xchg jb loopne clc lret int3 outsb fsubr sbb and fcmovbe lret add xor (bad) xchg int3 (bad) jl movsb sub lock cmp adc xor dec scas enter mov pop ds (bad) repnz fs dec pop stos idiv pop pop mov rol mov pop gs scas lds pop mov mov shl aas and ljmp lcall cmpsb pop mov mov add add push lcall mov into dec mov call ss jae add rcll xor aam in sbb sub mov pushf pop push loopne push ret (bad) mov in ret (bad) fidivl lock push jmp mov das sub xchg xchg insl jns es jg push inc pop or adc test es testl lock jl shl fwait xor cli out mov lahf or cmp add pop jmp sub jge sub lahf es dec pop test mov push sub inc inc lret insl in nop aas sarl (bad) ret mov je inc push pop xchg and dec xchg into fsubp jae imull lcall sub loopne es fsubs sub mov jmp xlat imul xor into mov sbb ret icebp out imul sbb rolb jne das les out pop and add ficomp and repnz push scas cmp mov (bad) stc or mov jns,pn inc xor push jecxz aam push test (bad) gs push icebp xor loopne repnz (bad) mov sub clc sbb inc xlat xor cwtl jle adc mov cmp push sbb repnz das outsb (bad) cmp rcrl jb mov push xchg fs js add sub mov mulb popf std dec jne shll in stc xchg movsb mov hlt jg out xchg cld mov push sub adc test xor cli jecxz add aas sbb mov out fsubrl insb (bad) aaa adc test cmpl jne pop and movb push mov cmp je push sbb xchg or insb lods lock (bad) into jmp adc cmp sbb inc inc loopne idiv dec and and add mov imul lods sbb mov in inc xchg cmc test lahf cmp mov sub adc dec aas push and and fisubrl in iret push mov jns jle mov popf iret mov dec pusha and mov sub pusha ja xchg mov bound faddp cmpsb bnd xchg push and ror cmp dec jns jp mov lret sub push sub lods or or std or aaa rolb jae sahf out add leave push rorb stc call dec sbbl jb ret dec sbb addr16 je fprem1 sbb xor mov fs mov or repnz test pusha jo lgs xor inc (bad) idiv pop pop push imul (bad) in or or inc insb pop xor add inc or dec pushf lods pop cmc xor movsb pusha out xchg cmp repnz cmp push inc (bad) mov loop mov push lret cmp xor xchg push cmp inc lea ljmp push arpl std mov (bad) leave nop js repz and xchg inc fdivrs pusha mov cmp ljmp sti insl scas push add adc push add and xor xchg cmp imul xchg cmp or js and adc mov xchg int jb loopne xchg or add fbstp shrd aas loop nop mov jae mov lods mov pop and jg mov fadd push sub mov cmovnp addr16 popf xchg push pop sbb dec xadd add stc rcll imul xchg aad imul (bad) and cmp jge std and leave rcll dec loopne js push std xlat (bad) xlat outsb jo sub rcrb fdivrp sbb lea int add add inc dec je dec mov adc andl sub ja or mov popf adc dec pop insl mov sbb pop push mov or cmpsl lods pushf test add enter sub fisub xor pop inc jl lea clc pushf push dec sub in les sahf rcrl push dec push inc das and imul cmpsb int3 scas (bad) ljmp push (bad) aas std repz lds and mov pop and dec outsl rclb test das aad (bad) lret data16 (bad) aaa mov sub ficompl out cltd pop (bad) aad mov jl mov push dec pop loope (bad) mov (bad) jnp mov xlat xchg adc jne fldcw shrl add jno daa lds dec push pop loope dec inc fs gs cmp sub dec push mov or fadds mov mov shlb popa adc test jb mov sahf xlat stc subl push nop adc push push jecxz sub (bad) xchg sti ror imull bound jnp (bad) jle outsl dec sbb sub pop test jno or xor xchg xchg fnstsw jns test fimull add int3 enter nop mov movsl adc mov and cld in aam (bad) mov jne jbe outsl push cmp clc call xor mov push cwtl ret and ret adc or dec (bad) push xor test push pop sub lcall (bad) adc xchg (bad) mov outsb dec std popa lods sbb dec and jle stos adc and pop lods fisub orb sbb in mov and fstl mov cmp ret scas pop repnz adc inc outsl and add or adc in mov ret inc push mov or cli inc mov cli or pop pushf mov mov subb icebp fisttp inc mov mov stos rclb scas (bad) lds movsl (bad) jg or sub push lea ja mov clc xchg and and fstpl mov or (bad) jns int3 or out (bad) jbe out stc mov out insb call push mov insb inc add test and daa mov xchg gs shl adc xchg lds xor lods jo xor lret jmp scas leave mov (bad) jo dec mov jnp add inc decl push pop mov dec fsubrl dec mov pop xchg icebp nop movsl push mov mov jb cmp xor dec sub push jp mov imul cmp mov add jg pop (bad) clc pop pop (bad) inc add scas sub adc bound and (bad) xor adc adc loope xor shl fcmovne fdivl cld pop and (bad) popf lods jns loopne fcmovb inc imul imul (bad) sbb pop rorl (bad) dec (bad) lret lahf jns cwtl jbe ja rolb cmp mov mov cmp scas xchg jnp scas and dec mov dec ds popf push adc mov jg sub jp jns mov pusha mov rep xor add cli stos scas mov (bad) mov stos repz jb jbe pop cmp push popa std inc mov aas push les test adc ret xor xchg cltd inc popf lods repz xchg and push arpl fnsave icebp push push movsb push in xchg daa jle aaa ja cwtl mov mov and addr16 divl movsl cwtl push call or gs insl inc adc mov xchg push xchg adc in mov aam out jg fs inc lcall arpl int3 aas call iret push pop adc adc inc dec movb (bad) mov rclb in dec sub xor cmpsl cmp out gs rcrb stc ja testl ds cli adcl jge push xchg fnstcw push (bad) jb push push test cltd push xor or mov mov jo iret aad mov pop sahf lods pop (bad) mov insw test (bad) xor nop mov addr16 mov addr16 test fcmovne daa jp out mov (bad) stc jno sbb fisubr sub sub push lods dec ja pusha and inc xor jns sub lret es fcom push cmp pop jp adc repz int shll (bad) inc (bad) fnstcw sub aas jne mov jp (bad) sbb dec cmp xchg call cmpsb cmp movlhps and xlat into mov xor imull ja mov mov stc loope jbe push jb out test jecxz inc in jnp add mov out enter or test sbb fs aam bound and adc (bad) pop cltd xor and mov test imul shrl (bad) lock add mov mov xchg jmp leave xlat xor mov mov xchg dec or add rcrl lds sbb sub lea pusha xchg aas dec adc rclb sub cld movsb dec inc sbb jae xor inc aaa test jmp lret jo sbb (bad) mov xchg test fwait dec pop and out in adc aaa (bad) std test aaa jo mov (bad) cmc add xchg xchg loopne jno pop pusha fcoms or lods and fcoml mov test mov out pop loop mov call mov jp in lahf and in xchg loop xchg cltd and xchg inc inc jbe mov dec mov and cmp or sbb cmp add xor leave and cmp push aaa std test (bad) jle pop pop mov cmc pop bound dec xor inc inc push jl xor (bad) int inc jmp inc scas xor xlat enter mov push mov js xchg out out mov sar popa sub ljmp and lock fs pop jo jnp js mov xor aam (bad) mov xchg cmp sbb aam or xor adc dec scas lods outsl or jle shr lcall push dec scas sbb mov sbb mov push roll (bad) int3 fcos in enter xchg cmp sub in xchg imul add cmp add rcll xchg call cmp mov sub arpl sbb mov repnz mov mov cltd or sub inc fcompl loop (bad) cltd sbb or into fucomp or add jecxz xlat xchg and aam jbe sbb cli lds add inc or (bad) pop out mov aad cwtl adc sbb test cmp (bad) incb xchg pop clc fs push mov movhps jmp xor loop xchg loop sbb sbb or adc cmp ret sbb popa xchg cmc jmp cmpsl bound fcoms cwtl jbe sbb xor das in ljmp mov cld adc add pushf jae xchg sbb jo arpl jp and cs fadds in sbb inc nop stos cmpsb and jmp and mov push std xchg ss xor mov insb sub jecxz xchg pop cld test int (bad) idiv lea test aad insb adc (bad) (bad) push jge sbb pop leave bound icebp int xchg cmp daa lret rcrb mov xchg mov ret clc xchg adc loop repnz sbb mov (bad) push movsl test (bad) lods aad sub adc pop push xor popa pop xchg jae sbb xchg call call repnz mov cltd pop xchg ret or jg xchg xchg ret aad cmp addb addl sti shl sub icebp dec icebp pop clc (bad) imull loope mov xchg cmp pop cmc cmp mov jmp cli and std inc fiaddl scas leave in xlat ret mov popa pop jns mov pop adc enter imulb fs mov or std mov mov cmp xor sub aas sbb cmp mov fucom imul in dec add mov stc cs add outsb fld (bad) push clc pause ja and scas (bad) rcpps addb leave or push mov or outsl loope or mov mov lahf xchg jns pop sub mov aad ret (bad) aam xlat movsb aas scas inc add stc push xor pop mov pop sbb fcompl stc mov (bad) call cmc push repz push (bad) mov sub aaa mov subl test sarb (bad) lahf inc fnstenv subl popl mov and les push mov jg mov push mov mov mov outsl pop inc fadds int jecxz or inc jae lock xchg movsb repz lods or pusha sub out dec mov mov subb mov jp xchg popa xor stos mov adc mov mov in lods ss fwait push mov add pop lret testl push pop sti mov arpl addr16 enter or cmp jo add fldl out or cmp dec mov push scas repz std daa outsb enter pusha inc push cmp xchg aaa jns insb inc or fildll std mov inc into push mov sbb jne clc add and dec pop mov movsl cmp sbb mov jecxz jae xor pushf mov das mov push ljmp adc sbb fdivrs or sub mov inc add pop fwait lea aaa xchg ret jp sub enter (bad) mov loop add pop stos xor mov rolb adc push inc (bad) movsl addr16 (bad) ss test adc mov loop push sti out or repz (bad) cltd sbb dec test insl push hlt lcall pusha and insl addr16 (bad) mov cmp and dec imul and std in fistpl mov adc stos subb adc imul clc lods push jo aaa sti pop jae adc pop insl adc mov sub scas inc test push in jae cmp shrb imul out repnz mov jae xchg mov jb jecxz sbb in dec imul ret jns dec pop test push das xor sub insb loope (bad) push jb loope push jns sbb pop inc lret mov inc in movsb adc adc sti pop inc call mov dec xor push sbb jg xlat sbb add (bad) repnz hlt rcrb jno (bad) sub jno cli insl shl (bad) incl cmp add addb daa xor mov fadd or and (bad) outsl fist stos xchg std (bad) jecxz and adc xlat mov dec cmp push inc notb movsl fidivr add (bad) pop sbbl mov adc (bad) repnz pop cmp ret pop ret mov out data16 cld ret mov dec or and mov test mov lock jae sbb pusha ds jp cwtl hlt mov and outsb sti cs jecxz fisub jnp mov dec jbe cmpsb adc xchg mov sbb pop out xchg push icebp xor sub adc into icebp mov push pop xor push and fcmovbe ja jecxz mov (bad) in popa out cmp cmp ljmp cmp cli mov inc test fiaddl xor mov lea std sbb ds xchg add fnstsw jg mov scas adc and into daa pop inc jl adc in aam jae jmp ret fisttpl lret mov push cmp movsl add lods fwait cmpsb sub mov lret push stc decl insl sub ja adc lds pusha fdivrl sbb mov add (bad) sbb xorl rclb jnp std mov (bad) and arpl pushf xchg xchg push or fiadd cmpsb sub mov jl repnz mull sub inc mov jne jns (bad) paddusb fsubrs adc addr16 int jl frstor xor pusha pushf push mov sub test les or int3 and lcall mov adc les and mov push xchg inc mov pusha rorb inc mov notl and (bad) cmp mov xchg add mov loop daa (bad) mov loopne call mov (bad) pushf ret mov (bad) test jg cmc gs inc mul or xchg outsb mov or insl dec call jns sti pop data16 jo movsb lea dec push add xor mov mov cmp pop cmc xchg push ret sbb test sub fdivrp adc nop inc sti push sub stos mov fwait mov jp fldt sub adc and mov cmc mov pusha mov mov jp xchg jmp add push sahf xor loop mov pop xchg push ja dec mov in pop and shlb insb test lret dec or xchg adc add xlat mov fcompl sbb adc sbb movsb test enter subl insl aaa push out adc or push mov jecxz (bad) or push scas dec mov ret rorl (bad) or jge (bad) dec jl push or lods fwait inc and xchg xor xor out adc loopne inc mov loopne cld leave dec and mov cmp jmp cmpsb aad (bad) lock or push push cmp daa sbb or adc xlat nop xchg add stos or cmp fbld xlat sbb test loopne mov outsl or jbe pop (bad) and outsl test push popf int fistl inc loop cltd or push mov dec aas iret sbb (bad) cmpsl js mov jge dec sub das mov dec cmp mul fsub jecxz (bad) cltd sub ljmp dec call and jnp aaa pop xor sahf in cltd ss adc mov cld cmpl pusha adc or mov (bad) jo pop jg mov push lock (bad) cwtl push movsl rclb sub push xor and pop ljmp add lret cmc (bad) out jno jne dec cmp pushl pop xchg add jae (bad) outsb xchg push adc cs cmp add cmc push cli cmpsb jmp outsb pop push lock adc and xor xlat adc mov mov pop pusha jmp mov sbb aad idivb dec jae inc imul int pop stc sbb divb and mov or jecxz jmp add sbb jb sbb repz or fildl cli fistp push and mov push int xor jo iret jns notl insl xor mov and hlt scas dec adc jp mov add jl xchg sbb cmp stos shll adc and mov adc (bad) sbb aad jecxz pop and out aam bound clc mov mov add bound jp aam mov shr push sub das movsb xchg out lret cltd inc (bad) lret movsb fiadd push xchg xchg mov add fwait jae dec inc imul stos push or sbbl mov mov inc sbb cmp mov scas mov mov or or (bad) lea imulb push cmp sub mov inc inc sbb fwait push stos jno cmp pop xchg lock sahf pushf mov ds jge pop and sub cwtl sub mov aas add sub xor or pop push leave adc cmp scas dec xor pushf push and mov add push adc repnz repz or xor fnstsw repnz aad mov aaa pushf loopne pop scas cmpsl movsb push or test jecxz cmp mov mov fucomp dec mov cmp ljmp cmp add int3 adc mov test imul jecxz jp loope jle sbb rcll sub cmpsb ret jbe adc pushf pushl mov sbb ss scas dec cmp jle nop push add jp mov adc outsb mov and test cmpsl call push mov jge jmp inc es mov outsb cwtl fstl scas or aam lcall jne sub xlat inc push fxch fimull xchg jns gs ret add and lods repz pop sbbl sbb adc adc (bad) mov hlt xchg mov push popl in in adcl vmread pop lret (bad) divb adc stos mov lret nop mov cmp push addr16 jp add clc popf lds das andl sar test lret xlat arpl lcall jg,pn js std lods sbb xchg xchg pop dec (bad) lcall inc sbb aad mov fcmovu std dec mov lahf xchg in or repz jnp aad fwait add ljmp sub push adc out xchg push inc aas cmp sub out inc lea scas imul pop or pop push sbb insb cmp into mov cmp movsl imul ja push sahf (bad) pop jl (bad) int fsqrt or push lea adc cmpsb rcrb sub push adc insl dec movsb js inc push loopne adc scas xorl lods test xor sarb mov push dec push cli (bad) cmp cltd adc fwait sbb fldenv repz jo or shr sbb gs or rcrb sbb loop aaa aad mov fisubrl push rcrb insl rcl popf inc mov popf bound cmp jmp loop sub andl inc stc inc xor (bad) aaa mov pop insb outsb cmp insb aaa push jae jae pop and cmp xor int lods (bad) push cltd mov pushf test adcl cwtl imul jmp or push dec push cmp and sub push sbb mov mov sbb add mov mov sbb dec pop mov dec push int3 outsl stos push mov pusha jle fwait jbe mov push xor fs mov lods jg imul dec daa inc cmpsb add adc cmp mov (bad) hlt xchg mov mov lods mov into in fstpt pop add loope push pop sbb inc cwtl daa movsl lds inc fisttpll pop sbb or pop add bnd jae arpl sahf leave pop push int xchg sti push movsl aas jmp jbe aas test hlt or lahf push std jb (bad) and gs add (bad) lret mov xchg mov ret mov add cli push mov adc add or and rcrb popf push and aad mov call orl mov dec add inc test dec (bad) ss inc scas mov fwait inc ret lcall popa sbb fdivrl adc sti sub pop cmp mov push ret inc lahf add push mov rclb call icebp push xor adcl sub gs pusha int pop pop inc adc jmp imul cmp test xchg and out out xchg std int loope sbb xor mov das hlt hlt push add dec mov mov das nop loope fs sub adc imul in sub xor cmovb jge xchg push (bad) aad iret int3 adc cmp (bad) jne nop dec push das xor inc (bad) mov dec or pushf inc sarl repnz cmp sbb push negl test pushf lcall js ret stc cmc insl jle (bad) aam out lahf push sbb loope lods and xchg or inc or outsl push push pop mov cmp dec mov insl pusha movsl add bound sub dec fs push jns push xchg mov mov sarl int3 sbb push and cmc mov shlb sbb xlat cmp push push fimull fsubr mov into lock push mov mov xchg adc hlt clc lahf pop repnz andl (bad) mov test dec adc stos inc mov inc adcl rcrl cmpl push negl sbb pop out repz cmp inc mov jns cli cmp test push jecxz cwtl cli inc aas ftst rcl xchg ds mov int3 pop dec bound jecxz daa xlat popa pop jl mov sbb insl push rolb outsb ljmp adc aad aas dec jp jge push int popf sbbb pop pusha daa xlat inc dec jb mov out cli inc add stos in push jp popa jmp loope pop push xchg js mov loopne out je nop js ret push inc jecxz sbb or push mov fyl2x mov mov shlb jns stc jo (bad) dec loope push xor sti pop sub add mov shrb add pop dec jne xchg mov cmp mov lock mov adc mov xchg mov aam sbb in daa lods ss in xor pop or sbb testl jg mov jns inc sub pop std mov inc aaa or xchg (bad) aad dec lods cmc dec jbe rcll popf int3 adc xchg sahf inc shrl fistpll xor fiaddl rol daa outsl dec aad (bad) xacquire (bad) mov dec dec mov (bad) testb insb aam aad loopne jbe aam aaa subb add pop fsubl mov leave dec jecxz xchg mov lods ljmp outsl call lret popf xchg inc (bad) imul and xor pop out fcmovne loopne lret jmp addr16 fadds or cmc lret mov and and adc sbb lret lods inc xor pop std scas jmp lods mov hlt out loopne in dec sbb idiv insb fimull mov mov cwtl mov and popf sbbb inc dec fisubl pop test or in outsb jmp clc lds xor ret sub jns inc js insb decl insb cvtdq2ps add cli and fisttp (bad) add popf dec and icebp sbb jmp stc aaa inc sub add pusha lret enter sarb ds enter outsl jl hlt cmp push in push lcall ficoml add adc add shl faddp hlt int fstpt bound ret mov mov sub les sub cmp sub sahf movsb mov lret pop out test out popa mov call int3 (bad) mov bound xchg fs sbb nop mov sub (bad) fimull shlb add cmp sahf mov bound insb inc mov xor mov cwtl addr16 (bad) and jno sbb adc fmul (bad) icebp cs xchg shrl push and adc dec insl jns xchg cmp adc sti push pop mov add adc aam idivl dec xlat pop jae loop out pushf repnz pop ret sub mov lds cmp xor lret sahf push popa xor imul out or inc popa int add pushl ja push call sbb mov adc cmp mov iret lret mov mov imul dec and ja sbb (bad) mov pop mov in inc imul and data16 sti ljmp dec or sbb pop and fistl push std lahf sbb inc and jno (bad) or lds cmpsl (bad) add or mov or dec dec pusha mov lea jle into mov jge push and idivl add mov push data16 stc les repz sub sbbl out fs jg add cmp mov or aaa loop jg mov push xlat fcoms mov mov jbe loope push je stos stos add mov push daa push stos adc ss add repnz add cs movsb and sbb xor lret scas or (bad) mov inc arpl mov xchg pop movsl rcrb xor aas or cmp mov dec pusha test aaa sti add into in sbb inc xor out loopne inc and adc jns add lock mov fs int3 mov enter cmp pop testl pop shl insb adc loop add sbb in push mov jns jae sbb push out pop xor ret data16 insl mov loop ret dec jl repnz and mov iret arpl call addr16 fcompl (bad) mov jno push frstor rorl dec flds mov push (bad) out stos (bad) incb fimul mov add bound xor popf fwait gs sbb loop std adc jge arpl je icebp dec xchg push lret xchg adc addr16 mov inc ret lds out ja sub aam inc cmp cmpsb aaa pop icebp jge je pop (bad) push in jecxz dec ds and pop dec ret mov xor jp push in test (bad) int3 jno push pop sbb gs rep movsb mov ss popf mov pop cmpsb fwait sbb push movsb adc call out jb jp js enter cmc push add cmpsb or mov jb mov aad jnp push or sbb pop fnsave andb testb fbld dec jno or loop loopne pop mov mov adc and sarb mov loope (bad) fcmove scas cmp test push ficoml push (bad) jo int mov cwtl (bad) lcall scas sbb xlat push test ficomp cmp mov mov sbb cli in adc push sub dec cmpsl cmpsb push bound insl int3 jmp mov sarl movsl inc negb sub loopw,pn jecxz inc push inc xchg mov outsb mov inc jbe xor test nop xchg les ljmp cmp push rcrb inc lods mov daa inc and jnp stc decb sahf xor and dec xor mov and sub push call mov sbb sbb negb mov adc scas mov push ljmp pop jo cli inc cmp fstpl shll je lahf cld fsin jmp repz out bound lods cmp ss push mov ret das repz sbb cmpsb jno xor mov cli in int repnz sarb fnstsw add sbb icebp pop icebp cmp jnp addr16 or push inc scas jno cmpsl dec sub dec dec mov cmp cmpsl xor in xor addr16 jo and cmpsl scas or inc ret frstor push cmp add xchg ds lods push popf jae stos bound enter dec xchg fidivr movsb (bad) hlt js mov sbb rclb or jmp lcall out (bad) dec add sahf int3 sahf mov add arpl loope xor int3 mov pop sub inc adc mov int3 fstl xor inc das push icebp fildl pushf ret cld dec inc and dec xor je hlt jg icebp sarb xchg inc cld mov pusha rcrl jl xorl in and call jnp mov fadd cltd sbb push test imul mov sbb clc in mov cmp dec mov ret jnp ja pushf mov pop push inc (bad) int mov sbb decl pop push (bad) ja lock xor fucom mov adc in addr16 arpl and lods mov push test mov xor and jg inc and add mov mov (bad) ror in subl in jecxz fldl xchg cmp mov sbb cmp rclb mov outsb cmpl cltd inc (bad) push addl (bad) mov cld out push sbb adc or (bad) loop inc and mov scas ja mov out in jmp (bad) dec mov lret je xor dec outsb cmp mov lret in rcrl sub mov mov stc int or addl (bad) lahf ss mov cmp scas popf jae (bad) adc dec ret leave inc mov out cmp pop jmp out (bad) addr16 out pop lods cmp mov lret pop and aad test cmp inc mov aad insl inc inc sub stos (bad) ja pop das scas inc (bad) rorl cmpsl cmp rcr (bad) call adc cmp fwait call outsl (bad) out add push mov cmpsb pop dec mov lahf fs mov (bad) xlat mov insl dec cltd fidivr jl aaa aaa inc cmp enter adc ret and data16 dec and ret mov iret xchg jg pavgw mov or push enter addr16 sbb mov mov pop arpl loope pop mov out xchg cltd push repnz fsubl sub imul pop lcall mov enter push aas frstor add ss mov push lahf dec xchg mov mov mov mov je jg pushl jl shlb stos cmp and jne idiv outsl icebp out jne js stos sub imulb (bad) mov jnp insl repnz idivl into repnz pop insb scas mov sub roll es clc lods inc jge add (bad) in sbb mov arpl dec cmp and sub adc mov sbb ret inc (bad) cmp and ror (bad) add imul push fbld (bad) arpl pop xor mov stos mov xchg mov shll lds adc (bad) xor add mov cli mov lahf fildll pop cmp popa in jl sub test call lret xor popf bound sahf and jle jmp mov mov push push fstpl mov fistp (bad) out add cmp mov mov pop mov cmp pusha and pop fcomps xor jg lret sbb sub mov and stc aam call (bad) std in inc lcall add adcl test or lods in adc movzwl jns js test jno add jp add or (bad) repnz das dec aaa pop jge mov int popl inc out sbb into dec or sahf subl and (bad) mov clc jmp cmp mov test popf out cs cmp add pop jmp aaa jbe inc xor jnp xchg mulb lods jae mov dec idivl cs inc lret test (bad) adc ja xchg push test test jge xchg aas out lea pop dec mov ret pop aas (bad) lahf shr cmp imul gs out adc pop lods iret gs pop std and addl (bad) xchg pop cmpsl mov out inc push xchg sbb sub aaa fld cmp dec jae lods test or mov mov enter es jns inc pop shr xchg mov cmp out outsb test loop add add mov (bad) sbb outsl outsb jmp cmpsb loope jle in out scas and mov out orb lods test xor lds mov xchg cld arpl cs (bad) xchg xchg dec aam mov jo std cmp dec stos sbb ficomp pop mov imul inc push les loop inc out test xlat fisttpl ss sarb test fdivl dec (bad) mov test cmp adc xchg and mov ds in movsb dec imul jns fs sub xor jge jns inc in mov (bad) test xor sti fdivl xchg jae or lcall cli sahf jbe adc xor mov fisttpl pop fimull adc cmp sahf jbe and and push pop cmp sar ljmp jbe push leave clc jne (bad) loopne jne pusha jns stos (bad) stc repnz mov imul lock and inc mov pop mov fbstp clc js xchg cs orb roll int push jb das xchg mov jmp pusha mov inc test xlat jp or fnstcw push not or adc add mov outsw xchg inc xchg or mov push movsb xorl or jno cmovs pop jp mov xor cltd push cmp jge cwtl jecxz and popf mov popf test inc call into and jecxz mov xchg pusha pusha mov das sbb test mov jbe test sbb (bad) test addr16 pop dec (bad) pop push call sti daa sub jb nop xor pushf sbb outsb xchg pop inc inc imul test pop and xchg push sub jae adc imul add sub lahf jg test jge sahf inc repz add jecxz (bad) lods or testb xchg cmp mov idiv push imul adc mov lret fs sbb aaa flds xchg roll out hlt out sahf repnz sbb mov xchg xchg js ret add jno pop data16 xor adc pushl fstps adc iret pop mov sub gs cmp or xor pusha fldt push dec xor jl out (bad) and adc or aaa stc fnop jg or add fcom call cmp mov sbb mov dec imul lods jno aas sbb scas or imul or push push mov (bad) pop cmc movsl jbe loopne lret adc xchg fldenv xchg inc adc arpl jno test sub lods icebp pop sub jp repnz xchg adc inc sub dec out mov mov mov je js inc jp daa xor fwait out push (bad) in das das imul cld ss and cmp jle mov cmp push lret stos xor pop dec mov idivl cld std (bad) adc loope push imul (bad) xor add sub fldln2 mov pop and cmp enter cmp loope rclb adc sub sar loop or pop mov inc lods inc popf mov neg xchg xchg inc push sub loope push dec movsb mov std repz loopne inc sbb adc enter xlat cmpsb jmp (bad) mov nop or add dec jl xchg stos mov idivl sub outsb rol nop adc pop int leave fucomip iret pop data16 shrl sbb mov pop scas sub jbe cli inc xlat jle sub xorb dec fsubr cs jecxz xor and jno push decb lods xchg shr xor dec push sbb loop les jge or mov adc inc scas mov sbb dec test arpl add cmpsl lods jl ds jae imul mov lret add xchg inc js movsb int lods adc out dec jecxz and xchg in stc loop sahf in adc dec adc ret mov jae or and jp cld and and mov or cmp mov add dec jg les and fistpll je cmp and sub es in pop jle sbbb icebp push insl (bad) (bad) push sbb insb and or js mov test mov mov mov ret stc jbe xor push push cli xchg push push mov add les mov pop icebp inc fsts cmp std call pop mov scas xchg aaa push dec sbb xchg ljmp mov stos and jmp xchg lds cmp pop inc dec icebp jl fwait std cli cmc mov push aaa test stos sbb pusha in jns (bad) jbe inc in jmp mov (bad) lahf out add sbb xchg jno sub adc bound xchg ror or jl aad jmp ret fs or jge xchg (bad) fbld lret rep mov (bad) repnz aam mov std mov push jmp xchg or adc inc test dec pop notb sbbl adc inc dec jo ret scas mov jo aad loope pop (bad) or test movsb icebp or sti xchg inc sub pop mov lahf push int3 mov inc mov fwait sub sbb add pop jg (bad) aam and vmovntps lds jns lods clc popa adc aas xchg fucom or adc pop mov xchg lods lahf fs sti and push cmpsl xor (bad) jg push xchg out and push push cmp mov scas sbb and insl cmp flds ret daa pusha cmp push mov add inc pop (bad) lcall es xorl pop fist popf pop pop and movsl aam aam fstpt out popa bound movsl mov lds lret (bad) cmp mov push (bad) adc gs inc lods movsb fwait ret hlt inc inc (bad) leave push mov out (bad) pop ja xchg jl cmp mov stc pop imul or push pop dec (bad) xchg aam sti pop push xlat (bad) ljmp sub je stos ficom jbe in adcl daa fldt in dec jae jecxz fs push je mov lea jecxz aam jg nop es pop sub or dec push clc jecxz mov popa jp icebp xor shll andb mov mov nop int3 mov xor cld mov and jl mov cs push jle adc sbb pop push cld idiv mov fisttpl push mov scas jecxz clts xor popf lea mov push popa pop cmpsl push cmp xorl ja leave clc push inc dec xchg push jmp insb dec inc int das fbstp repz push sahf mov xchg rolb cs inc out jp push or add add push or ljmp sti aad lret insb xchg add loopne ds jecxz js and lret xlat pushf push mov cmp jp loopne push or add pop and daa push push mov push pop push adc mov push adc mov test mov xor test sbb adc shll lahf cltd lret adc push ja or add and int push sub repnz fnstsw sarl xchg inc push cltd loop popa cltd cmp mov out xor pusha fisttp cmp cld mov cmp push push mov hlt add or (bad) rcll std mov (bad) int pushf adc mov rcll rcrb cmp rcr pop jmp mov lods sub mov rcrb jne,pn cmp push test or pop pop gs cmp cld pop adc nopl imul rclb mov repz je in xor dec popa inc inc xlat ljmp popa xor push popf xrelease or mov fldenv ljmp jno push sub push sub insb (bad) lret (bad) cmp in testb push jl adc mov xchg lods leave mov dec gs push jae mov inc lret cld in jge mov jb adc rol cmc sbb push xor cs jns int mov into or scas sti inc jnp loope xchg xor popa cmp sbb pop and cli inc push lods and je sar mov adc (bad) mov adc xchg jge movsl bound or mov cmc add cmp or jge imul push ret fcoms lcall cld addr16 aam sbb add stos push gs pop lea adc dec ds xchg test dec jg clc inc jl,pn jge iret fbld hlt popf (bad) nop xor push sbb gs sbb mov sbb jnp test push xchg call xorl jb jo mov or psrlq arpl xor fldenv pop test loop cmpsl and mov mov clc gs popa insl in pushf inc out mov popf dec test imul xor mov mul je arpl add insb movsl incb push frstor mov lret nop push lcall push addr16 fcmovnu js loopne or in jl pop dec mov push rorl cmp mov divl jo aas sbb jae ds mov mov cmp fdivrl xchg pop mov adc jne jne loope mov call adc push push stos jbe add or pop cmp aam adc cmpsb xor inc cmp mov das nop mov mov mov movsl rol adc mov add mov sub cmp (bad) cli in mov movsb into fnstcw mov xchg pop leave xchg mov aas sbbb xchg insl jns pop data16 lret imul daa arpl inc push scas inc in mov rclb call add das push push mov and add mov test sarb dec pop aad adc mull loope mov (bad) jne and enter fsts xchg lods mov mov and mov add lock iret test stos int3 fldt jecxz mov pusha mov adc add mov iret jno fisub (bad) ds xchg pushf clc push or pop push push pop xchg data16 push or mov ds in je daa inc insb xchg jge sbb sub or sbb mov mov into (bad) icebp lret (bad) or movsl test pop es xchg and aad mov sbb dec jb and sub je inc (bad) pushf or js pop mov pop gs addr16 mov or fsubrs imul xchg push adc lcall js sub push test cmp in jl mov jnp push imull or xor and sbb sbb scas xchg jae mov shr outsb nop xchg (bad) fstpl sbb push cmpsl adc jl adc pushf mov fimul rol and cmp outsl jns js or mov ljmp dec mov jns mov jge jl stos xor jl sbb adc orb fcmovu in mov or xor jb test (bad) xor cs jae jnp sbb inc cs sbb movsl scas pop clc add lcall pusha jecxz fidivrl cmp lahf mov dec cltd in jne rcrl scas in inc (bad) jmp adc mov jmp sub cmc divb rcrb insl outsl mov push adc outsb fdivrl mov insb sbb repz rorl jo push fimull xor push xchg mov iret mov adc cmp pop movsb adc cmp leave out lds icebp rcll push test push or scas cld lds loopne xor and ret (bad) push and xor and pop enter inc popa mov (bad) divb fsubrs in outsb int3 xchg and lods pop (bad) pop mov mov lret (bad) divl test and xchg pop out sbb mov mov or jl ljmp hlt inc dec mov lds in mov shrl rorb push xor add fwait test fs mov fnop arpl loop fsub xchg inc mov fcoml dec (bad) leave jge fucom hlt jnp in addr16 mov aas (bad) in in adc inc add sahf dec cmpsb push (bad) mov dec test jp jp lcall pop dec enter lods xchg paddq or push and pop loopne fldl and mov sbb xchg sbb enter shrb pop add add xchg cmp stos add dec push fucomi and push xchg adc mov incl lret adc scas pop (bad) lret sbbl (bad) pop jecxz inc xchg fs dec cmp and mov cmpl scas sbb in push xor push std pop lds fdivrl add xchg mov jp xlat or cmp adc sti push inc mov pop mov mov jl jmp out ret nop lea cmp stos xchg mov in pop or push xorl cmp adc push cmp sarl ja dec lock and fisubrl xchg mov pop cmc cmp add sbb jg popa rorl (bad) sub jne es push jns add mov loop (bad) scas push mov mov mov jae push in fs leave mov enter cmp scas xchg cmp mov sti xlat add imul pushf sub test stc adc scas mov mov jae fwait adc lret and mov sub dec inc mov mov xor xor inc dec jne leave arpl mov punpckhdq mov sbb cwtl scas inc hlt test incb sahf aas ror xorl xchg mov push xor push jg and pop or bound sbb mov rcl out rolb js lock sbb repz in push mov insl in add and stos jecxz jno jne sahf lcall stos adc mov push pop pop imul addr16 push cmp fwait lock xor ret in fmull nop sub jmp mov pop pop out sbb (bad) cmc or out sub push sbb (bad) leave mov push xor call imul inc pop test addr16 xor mov xlat jge pop mov dec (bad) or dec in add push cwtl punpcklwd leave repnz pushf popf xchg cmpsl (bad) push lea shr arpl aaa xchg dec std loope cs out push xchg fstp pop push pusha ljmp xchg lret cs call insb fs movsl adc push insl ret cmp jns adc pushf jbe rcll lock push sub pop mov xchg imul sub out js pop imul mov ret outsl push sbb sbb mov lcall cmp test aas int jmp jnp je call idiv adc mov movsl add xlat adc jl mov mov pop in pushf inc mov scas mov cltd push xor je mov jb ljmp sbb (bad) cmc mov ret pop addl mov test adc xor mov addb scas (bad) outsl rcl mov cltd incb mov rcrl mov or sbb sbb jmp push daa cmpsb std test outsb cmp pop sahf jae sbb imul cli add sahf cmp (bad) (bad) ficom mov sub roll fidivrl jb mov inc sahf inc dec jle or lahf jne mov push push mov inc inc lock xchg (bad) mov sahf jg sub (bad) aas lahf sarl dec mov scas cs mov add push add ret fwait push fist sbb push outsb fistpll jecxz test shll aas add and xchg adc cmc sti cmp dec ss cli dec pushf repnz adc cwtl es out lods jno dec ret xchg jo je repz cmp cwtl jg sbb leave mov fsubrp and lock fisub inc outsb push pushf fisubr fmuls cmc int xor jle ficoml stc or fs test push (bad) xor jecxz int jns jecxz xor xchg inc (bad) jl sbb lods cltd dec jmp inc or dec cmc fnop test push sub outsb jle and inc imulb adc sbb dec lock sbb push daa fs mov enter inc test test popf rorb (bad) xor test aam movsl (bad) jbe mov aad imul add dec adcb aas mov int3 inc (bad) incl and xor dec sub adc sar ret jae xchg in jp cmp push insb rclb gs sub cmpsl test lds cwtl inc in cmp pop popa (bad) cmpl xchg rcr xor or xchg inc cmp jle cmp pop fwait mov cmp (bad) adc mov inc icebp lock sahf xchg cmpsb addl dec sub fcompl loop out je xchg rcrb xchg loope pusha es nop mov mov ljmp gs or sub and fimul xchg ror and mov xor loop sbb mov add cmp mov xchg xor push and or nop mov jb cli loope ljmp pop xchg dec fdivl js mov push mov cmp dec stos xor std pop iret in push bound cmp fs xchg xchg push pop xor add and adc dec into rcrb arpl cmc or ret add push sti dec mov clc out lret dec sbb lret dec insl into sbb xchg arpl fsubl mov jbe mov mov into cli jne out mov fild into stos scas mov (bad) mov mov push xchg jns push into cmpsl mov stc cli cmpb pop mov dec lret mov sti inc leave jl in stos xor mov lods enter loopne push aaa jmp mov pop clc mov inc fsubr and rcrb sbb pop mov push mov dec ljmp fisttpl inc or mov push int les and mov sub ds into rcrl aam sub adc popa es jo insl push jb cmpsl outsl push inc addr16 inc mov aad push leave mov adc cmp push insb adc adc mov and in in pop (bad) inc jns fcoms inc and test mov ds js aad xorl in mov loop pushf icebp dec hlt pop inc icebp push (bad) icebp jmp jnp xor pop in mov pop sbb mov call pushf gs aaa stos inc aad mov sub (bad) jno pushf mov sub adc push mov push (bad) mov xor xchg and inc test mov cltd out pop xor push xor add mov sbb and sub daa jns sti sbb out cmp xchg push imul (bad) in addr16 aam mov sub push dec in outsb mov sub loope loop add dec call mov ljmp sub (bad) outsl jp in enter xor mov and xor push jbe stos inc es aad out jno and jae repz mov std in or sbb push and test sbb mov push xchg movsb mov mov sbb push divb mov sub cmpsb xlat mov dec dec lcall jb (bad) mov mov (bad) jne pusha adc out sub cmp dec cmp (bad) cmpsb test xor inc sub outsb mov mov xchg icebp or push lds js mov mov push and das pusha push cmp mov lret mov mov paddb jnp mov xchg push push adc dec pop leave sti (bad) pop adc pop iret in sbb repz test add push xchg rcrl cli outsl push lods pop mov imul inc mov rolb mov or mov push ret sub jp aaa inc push or and xchg or xchg pushf imull pop popa xchg mov dec pop or bound ljmp xor or pop mov lret mov (bad) mov mov dec (bad) mov movsb inc push orl pop in cwtl ja imul lret cmp int clc xchg (bad) and fcoml and mov ja push dec ret stos rorb cmc mov stos iret xor mov xchg mov dec pop or mov jl lret fcompl sti sahf sti xchg leave mov sbb stos pop loopne push gs inc test out ja inc loope mov xchg ficoml push xchg (bad) mov loop inc xchg inc ret roll pop xchg fisttpl out jne add icebp or je pusha call (bad) das imul into xlat repz cs add sbb pusha mov jmp mov pop std es inc push dec cmp pop out mov add sub xlat sub in or lods cmpsb fidivl sarb pop jmp inc fwait mov cli or cld stos cs xlat xor pop hlt push in adc mov js loop push xchg mov out (bad) out stos adc ds lahf mov mov scas sbb (bad) jp cmp inc out stos adc imul adc imull test xor es inc sub xchg sub sbb xchg adc stc pop mov mov jmp sub cmp notb mov clc in outsl pop int3 arpl pop push loope fidivrl ja add mov add stos stc shrb leave jbe popa (bad) rorb xor sarl push into fnstsw stos outsb jp pop les incb fwait dec dec sarb test inc (bad) iret arpl push (bad) repnz flds mov mov outsb dec xor sub push daa mov test shlb sbb mov sub lock xor lcall or aaa sub dec cmp xchg lds xor sbb push xlat ret addr16 sbb sti aad inc bnd add arpl lret mov jmp repz mov and inc nop dec clc add mov dec sub les fldt add mov adc inc mulw mov adc add mov add addr16 cltd fwait lock pop mov mov inc lahf sub aaa and xchg push xchg rol lret les push dec pusha add cmpsl dec sbb xlat rcll std cmp fsts dec daa adc mov add xlat sub enter test jns push xchg out popa movsl stc (bad) lds mov out popa add inc (bad) insb (bad) dec mov lahf inc lds lahf mov mov adc fistl in cs jo pop inc hlt and mov dec or outsb popa scas daa lea iret cmpsb dec cmp sti ja aad jmp in test or fdivl mov les aaa fidivl in daa mov (bad) or xchg in push data16 data16 or (bad) sub adc and lcall xor scas and pop jle jbe mov mov insb dec inc mov xchg sub add in idivl or mov xchg jne (bad) sub cmp mov ss arpl sar out aam jle xchg imul aas fisub loope in in add xlat sub lret push mov shr jmp lcall pop push sub add cld xor ret mov out sbb mov lcall pop xchg or out cmp add cmp and jae adc iret leave std enter push (bad) add sbb jp (bad) sbb daa dec mov dec fiaddl loop ret and add xchg push dec gs jo clc loope stc sbb dec movsb lcall and add add iret popa out mov mov xor cltd mov inc das in xorl inc popa adc pushf lds (bad) call jge sbb sbb outsb xor dec cltd and jg push jl and xor outsb sub cltd pop enter or out mov sti gs out dec int3 jne sbb jmp lods sub push popa push cmc sahf inc test dec mov shrb stc insb dec inc lods add mov jbe imul test sbbb in xlat divl divl adc sub push xchg push mov xchg ja sub out push xor shrb rcrl inc jbe ret testl jo outsl (bad) push adc shl in or ret inc push push sbb imul sub push movsb jns push add data16 aaa mov lds orl mov inc push jnp dec (bad) and lea fidivr lahf out mov jg pop push pop les mov ljmp gs xlat je nop jg sti movsl lret mov cmpsb or dec and popf mov mov mov cs sbb cwtl pop insb mov or push movsb dec cwtl cltd data16 es cwtl movsl mov daa arpl daa lods (bad) repz sbb sbb mov rcrl dec ds sbb mov add xchg jge (bad) xor je out sub or orb cmpsb outsl xchg fisubl mov xor mov cmp sbb cmpsl lods (bad) sub in setae jns push push inc movb stc jo test mov mov push fs fcompl jne imul push mov push loopne pop sbb in subl lods push sub pop or pop adc xor push int3 adc or add or jl add negb mov jbe cld lret and std mov pop xor sti jae cmp fucom jne lods inc add pop pushf and mov dec push (bad) repnz adc int push sub aaa ds fsub xor insb jbe adc jbe fsubl rolb xchg xchg lcall inc test xor daa imul xorl push in or mov orl ljmp hlt dec mov (bad) ljmp xor push sahf cltd es cltd mov or inc mov movsb xchg jp stos outsl gs cmp es test pop mov jnp out clc pushf pop ret pop aaa xchg daa rcrl pop mov inc sbb lret push jmp movsb jns hlt mov scas push xchg mov sbb add xchg imul mov fmull xchg and int pushf push pushf pop mov mov out mov xchg scas jo hlt jnp mov fbld mov add fbstp jle int mov jge sub les jae cmp insb xchg mov shlb insb sbb rolb mov inc lds lahf mov cwtl sbb xchg push adc pop imul leave xor out call jns inc jl cs and xor iret das lods int3 cmpsb sub fs hlt xchg int3 jl cmp out or daa xchg int3 inc adc cltd lret (bad) fiadd mov dec (bad) fsubrl stc pextrw xor aam cmp mov aaa ret pop mov push dec cmpsb push (bad) sbb insb orl jp cli imul push pop cmp mov fsubp (bad) call mov rorb cmp dec lds mov mov sbb popf push xchg (bad) xor mov mov fs imul adc xchg cmpsl xchg mov outsb mov dec adc aaa cwtl insl dec and push aas jg loopne jp xchg xchg ss out inc jge jle sbbb adc repnz add xchg dec stc in insb and stos lret rcr push lea fistl mov jl xchg pop dec pop int3 mov xchg cld loopne xor cld daa lds lret add dec or adc rorl cli ja cwtl xchg rol pushf negl daa fwait mov mov stos popf adcl push inc inc sbb (bad) iret add xchg insb xor cld mov mov sahf lcall (bad) jge (bad) mov xchg adc lret iret xlat sub je lock ret orl mov arpl jge cwtl inc mov (bad) xor mov dec sbb dec pusha sbb cmpl cmp push xchg test push cltd (bad) xchg stos push stos in sub mov sbb imull jno dec scas cld push sbb sub repz stos dec and cli stos rolb dec lahf add mov out sub inc adc lea repnz inc or cwtl or sub cmp cltd popf fdivr sahf xchg xchg pop jmp clc add and pusha rorl je addb mov xchg mov inc xchg iret int3 repnz int xor add daa and lahf mov jl xchg inc aas xchg push test (bad) adc or cmc dec out mov or inc bound pop gs mov rorl int out pop iret pop mov lods pushl fnstcw sub out jo lahf div jl rclb push adc mov or scas xchg push mov or das insb cs mov lret and mov xchg aad fidivl fdivrs in mov xchg cmp cli jne jo daa (bad) loop push loop imul (bad) test iret ret jae mov xor dec jp mov rcl lea mov popa loopne,pn cmp mov sub popa es pop push jmp les mov (bad) iret inc (bad) xor setnp fimul fildl dec xor nop xchg mov jmp dec lock fsubrs add jno pop insl lods sbbb jbe,pt jnp mov sbb dec jecxz pop dec xor xor sarl decl cmc jo sub push cs fstl cli push enter outsb (bad) jo or dec scas and loop pusha loopne outsl xchg nop pop pop das sahf cmp popl jno cltd adc pop dec jae adc sarb fwait pop cs in xor xor adc test psrld lret cmp pushf add cwtl xchg sub pop lret push loopne les inc sbb ficoml and andb pop mov inc clc or sub push in or jbe or insb xor sub imul jp leave bnd outsb xor cmp sbb popa cltd scas orl ja jne inc push cli je adc sbb jge fistpl popf ss das outsl and fldcw imul lock adc inc or aas scas in mov repz ljmp and insl cmp mov fisttpl pop sbb insl and adc mov mov xchg cmp adc and lret xor lret out data16 pop out add stos hlt and ds jl cwtl ficomp dec (bad) out out mov in lahf bound nop jge movsb xor add outsb sub inc mov shlb push add mov cmp (bad) xor aaa jle and cmc cmpsl mov fadd dec cmp lds std mov pop in sub xchg mov jmp xor pop sahf inc xchg jbe mov cmp push dec xchg pushf sbb ds mov adc out inc cmpsl repz mov push jl jg mov push cmp xor sahf vsubpd pop mov xor mov icebp jmp loope add aaa mov cmp insl cltd (bad) fildl xchg push fsubs xor pop es mov push les ret movsb cwtl aas int3 insb sti das mov divb sahf mov mov ljmp mov cwtl fcompl repnz aam sbb sub xchg idivb addr16 push xchg pop insl push mov adc fimul jo lds sbb ds inc mov cld or mov jb xchg cmpw add outsl cmpsl jmp pop sti cltd ss mov shrl jl inc pop add das jg mov lcall loope (bad) bound push cld jae test xchg mov sbb inc xchg dec fsubrs fisttpl jns xor loop cmp in mov mov dec gs ja clc inc or aam in adc sarl xorb clc (bad) out stos xchg push mov addr16 pusha aad xchg inc cmp out incl mov outsb fsubrs jmp pop jle outsl cmpsl ret dec (bad) icebp ja lahf iret insb jl mov (bad) outsl xor ret cli jne (bad) out dec jl inc into jb pop fdivrl cmp negb ret dec xchg push daa push and and and jp pop ret mov xchg xchg aad insb mov inc jns or mov add fiaddl dec push pop or add call in das xor xor xor in cmp sbb aas push insl arpl not lret xchg ret sti into sti aam push jbe push lret call inc das aaa mov xlat (bad) sub stc mov repnz pop negl das xorl sbbl gs repnz jle and imul jns xchg or (bad) data16 lcallw cltd mov rorl dec dec mov push addr16 notl sahf cmp sahf (bad) and or jae or jge push out in inc cmp out sti arpl lahf xor in popf xchg mov pop rorl jb pop lret fbstp xchg adc pop ret inc mov or test adc lret dec push jno xchg data16 mov sub ret addl adc (bad) mov push sbb sub mov in addr16 movsb cmp add pop mov std in pop shr repz cmp adc outsb scas int3 fcoml imul sarl mov pusha xchg int3 inc movsl flds imul fwait icebp mov inc rcl sub leave clc (bad) xchg inc and ret leave ret mov outsl in daa dec push pop and mov dec leave xchg add jbe adc imul ret xor sub xor test cmp imul inc push aam cltd int (bad) mov inc lcall cmpsb push xchg sti or or in jmp fsubrl idivw addl push add inc adc jbe xchg pop dec cmp cwtl scas out xchg jle dec (bad) add mov cmpsl bound mov mov mov mov mov mov sbb mov mov inc in in imul sahf (bad) mov push sub mov subl mov adc nop sub addl mov mov mov jne cltd mov int jae aad xlat jne push std mov aam xchg fsubr gs xor ljmp or pushf pop add mov pop test jle loopne imul aas mov incb in adc rorb inc fistpll sbb subl lea push mov mov inc js mov rcr fsubs call and mov bound dec ja stos mov xchg outsb cs popf mov frstor push mov movsl daa pop fs ja rolb imul in cs mov in jae pop movsl test pop mov xchg mov into push orw add into pop int pop icebp jle insl aas pop mov sub xchg pop aas mov in popf stc movsb dec repz inc jecxz cmp cmp outsb jle popl ja mov je int sub pop notl aaa cmp sbb aaa pop mov stc mov push ds inc popf out add and (bad) in jl sbb dec ja xlat bound int scas xchg int (bad) cmp pop pop mov pop sbb push add scas (bad) jne inc add mov or call or arpl ret pop jecxz (bad) sbb out jb xchg xchg pop stos xor mov mov decb bound add iret mov jns xor out adc (bad) jle mov movsb (bad) or mov inc push pop call rcrl adc dec fimul dec sbb in mov ljmp pop (bad) and adc shrl and lcall es pop jmp xor xor dec daa out mov xor inc adc popa pop aas jno mov in lahf pop adc (bad) mov mov fisubl (bad) mov in push das jne cmp aad (bad) sbb xchg mov dec int cmc mov cmp and nop cmc out and xor xor jnp xchg jmp push mov int pop push or pop xorl push cmp mov xor aad das xchg jg push push mov xchg imulb aas and js mov fidiv push mov push ljmp cmpb mov cltd aam sti fwait bound lds adc jle push sub mov mov shrl or mov out mov sbb fisubl loop movsl fadd das or xchg push lods aaa pop or sub scas test js jge and pop test mov popa push and enter mov fimul fidivl adc out push aaa (bad) loop int jnp lods mov dec (bad) sti pusha add ret lret test outsl push fcoml xlat push in pop sar pop lahf mov xlat adc mov dec das sbb mov sbb cmp in iret jl cmc in test lcall sub xor mov add mov int3 jg pop stos sbb pushf sub test lods push test mov lds arpl out dec in in push jg insb cmp push push movsl lret (bad) jmp or inc cld fwait sub push push jle popf and sti sub jnp cmp and ljmp outsl sub daa (bad) cli inc cmp cmc test adc out and xor xor iret dec push pushf ret push xor mov fldcw mov mov lret outsb pop and push mov imul stos out xchg jl cmpsl sub mov loope icebp dec ds jecxz lahf mov lods push push rorb lcall jg test shrl adc or fdivl aam inc divb pop mov xchg dec lds jecxz pop (bad) iret pop data16 jle mov pop add adc push enter addr16 cmpsl sahf xor jne inc jb jno cwtl movsl and sbb sbb cltd ret mov mov lea ss jmp mov sub mov xchg mov add sub cmp js dec jbe fiaddl jecxz or pop fisubr inc pushf ds insb jb lret mov imul in stos lods movsl adc push mov push movsb add stos mov dec xchg arpl push add sarl ror inc insb mov cmp mov cmp xor push adcl ficom enter in lahf adc mov inc fdivrp lea out push test (bad) and fildll xchg mov mov pop push xor imul lcall loope jne mov sbb push dec push and jp imul and enter repz (bad) lret xlat pop pop pop mov cmc inc push call fwait pop cmp cmp pop inc dec icebp inc cmp xchg jge push jle or lret sarb dec (bad) pop fnstcw or fs inc repz mov inc test fisttpl xchg xor fs sbb divl pop out xchg int jmp int3 popa std and loope jle jl ja jne and out adc ror mov jnp lea fwait stos hlt sub jnp data16 lea popf jbe ja mov mov push xchg fs or (bad) mov sahf in rolb out inc sbb sbb mov xor inc push or punpckhdq lods or mov push aaa out clc subl mov fsubs icebp ret es adc sub or das or inc test ds jecxz mov fucomip pop add (bad) mov jne adcl enter pop mov (bad) mov stos cwtl (bad) repnz out inc in inc decb inc int3 xor dec xor loopne dec jo les out pop fwait lret pop inc inc inc push repz pop push sbb and (bad) cmpsl push mov ss xchg mov mov ret sub cwtl int3 call data16 push xor and out adc jle repnz xor cmpsb flds call sbb mov inc imul cmpsl cmp cmpsl mov (bad) push push jmp das (bad) bound data16 cmp fwait fwait jle mov xchg cs xlat jecxz cmp mov push cmp sub divl cli sub xchg add pop or push pop sarl push push rorb pusha sbb and inc or mov mov pop xchg push insl pop xor (bad) (bad) mov cltd nop fwait xchg sbb push dec fildll xor dec insl fldl roll fstl mov dec out scas aam xchg push adc cli push dec dec ret ret cltd push dec mov out cmp imul mov xor cmpsl mov in (bad) xchg mov mov lret aam test test rcll jbe sub mov mov dec dec (bad) icebp cli sti push pop sbb repnz mov jbe dec pop inc cltd lahf out scas (bad) movsl in cmp pop sub sbb je pcmpeqw test sbb imul or scas mov movsb imul scas dec mov jnp sbb arpl test push les ret push and mov (bad) insb fsubrs lock push xchg cwtl add xchg daa jmp dec mov mov dec ret inc loop das sub xor out pushf xor dec gs and mov ss outsb inc jno cmp es ja dec jl aam pop into pop mov cmp mov jl inc or mov lods mov cs (bad) push inc sub movsb xor mov mov dec (bad) mov jmp neg pop sti out mov iret outsl pop mov inc lock out mov inc outsb pop jbe jo pushf fs dec push (bad) imul xchg movsl es push aad rorl push push test add mov and mov cli sti je jne jmp ds loop mov aad fwait add or adc mov test (bad) pusha sbb and out mov inc repz (bad) pop pop iret push xor jge mov pop mov loope mov mov imull mov stos xor pop arpl pusha dec or mov mov gs (bad) fidivr mov lret jmp ljmp mov lea js out aad mov adc or xchg and jg outsb stc pop push test orl outsl imul out test adcb xchg mov mov xor sarl push rclb hlt mov add inc cmpsl test loop or xor shll dec in js scas iret inc js or jae and popf push (bad) mov imul movsb or fstl sub xor mov xlat jo push mov mov inc mov and add jbe cmpsl lods (bad) mov dec dec mov xor inc inc sub push push mov mov sbb popl sub adc ret fs cmp int3 xchg xchg sbb pusha adc mov xchg pop lods stc testb fdiv in xlat and inc jle lods (bad) shl sbb pusha mov (bad) test pop repz mov imul data16 xor push iret xchg (bad) lret iret xchg test arpl jge add xchg xor inc mull sbb pop outsb lods cli adc fcoml cmpsl or repz pushf aam adc mov mov sahf xor sti loop imul cmpsl jb int3 repnz jbe mov sub shll lock sub or gs in sbb js mov stos cmp jge addr16 rorb and imul mov stos popf lcall popa push push mov mov push jp (bad) mov scas adcb je push jp lock icebp out and loop push jo cmp sarl pop adc std dec add (bad) out insb dec sub dec dec (bad) icebp add test or dec cmp mov ret sbb push mov sbb repz sarl mov mov lahf mov jg int inc dec ret jl test iret lret push js (bad) sahf (bad) fwait jg adc jo repz sbb aam arpl fwait jmp inc lret test push add xchg pop cltd aas out dec cld enter add stos test call repnz jbe xchg mov in js cmpb cld hlt jmp aas sub fwait aas adc push or rep aas dec outsl fs bound inc and jne adc sbb scas or pushf je dec sub fs jle sbb ret cmp leave xchg push iret cwtl xchg inc ret push (bad) insl add mov jne mov mov dec cwtl std shll pop ret pcmpgtb aad dec stc pop test jb lock aas in mov je mov xlat adc lock push jge adc out jp idivb dec jecxz sbb sub (bad) mov dec (bad) les mov xchg push movb mov aad jae std cmp je cmpsb (bad) fldt jbe mov outsb jo xchg xorl fidivr imul and loope mov xor push mov test ss xor sub sub loope inc movsb add push lahf mov pop mov lds xor xor mov jg mov jnp add or mov xchg loop out fldl je fldl sbb lret outsb sbb js pop stos jns mov lock xor adc aas and aaa sahf insl dec aam cmpb (bad) jns,pn push inc add sub hlt (bad) outsl popf adc inc fcmovnb or add or cli jl xchg push sub jecxz popf fildl jmp fstl pop dec outsb (bad) push and mov push xchg add cltd ds xchg xor insl mov aas (bad) cwtl or cmp fcomps sbb mov loope cs xchg cmpsl sub or jmp int3 xor loope scas ljmp cmpl outsl jb push repz xor and test and jo lret push or and inc mov cmp int pusha add ror jne loop fistp loop je cmc es pop sti pop nop adc sub sbb fs add dec lods xor pop sub sub xor leave or call les dec insb lods push mov xchg testl js ror in faddl or xor jl aad sbb dec out cmp iret jne and test jb sub xor xchg mov (bad) xor das pop lock aam cmp data16 xchg int3 dec test mov xlat adcl out add movsb push sub dec xchg jb out mov cmp out sub or lret push sub fdivrl mov push adc and xchg sbb mov sbb sti es leave in sbb inc and inc daa mov movsb push cmc dec xchg jg xor inc lea xchg and push fldl sbb adc lea sbb xor out lods xor adc das or inc (bad) or add sbb sbb test lcall and bound mov sbb xlat push xor xor shrl rcrl dec push sbb pushf cmp js (bad) aam mov bound clc idivl clc mov nop pusha leave adc adc sub xchg inc mov xlat rcll jmp sub fs addr16 xor add jb cli iret iret outsl push mov in in aad test jp lods addr16 lret pop mov mov ss xor jl jle loopne push pop mov sub in inc ret hlt inc push jl xchg jmp clc sbb xor flds push aaa fisttp loope mov mov andb add fdivl les sbb pop mov sub fwait xchg jle call rorl ja adc pushf push test mov rolb lret mov std push cmp and cs js data16 inc imul popa pusha pop (bad) pushf sub call jae push mov add cs loopne dec xchg enter xor push out ds pop inc inc rorb jmp jl push sub add adc pop call add es sarl das mov and stos jo pop xor add mov mov (bad) push pop sbb test fidivl sub int cmp mov pop mov mov roll xchg popf lahf pop (bad) lret mov fstl inc push repz sbb mov cmp scas inc test fisub mov cmp inc push pop mov fnstsw insl (bad) mov fs xchg enter cmc loop mov insl movsb jmp dec dec in mov imul enter xchg rclb pop mov and int3 jne jecxz push dec mov push scas mov dec push push (bad) cmc stos push pusha add mov mov jae nop/reserved jmp mov insb sbb sub cmp jp lcall cmp xor aam mov shll mov pop jmp mov or int inc cmc lahf jno pushf dec xchg icebp xlat aaa adc stc sbb aaa out mov cld imul in mov sahf ja jl xor inc repz ret push push jb lods cmp imul xorb int cmp pop insb jmp and push xchg pusha das jb and mov scas iret mov test loope xor push adc sti notb dec out and addr16 fdivs sbb cmp mov test pop stc jnp inc loope test and cli cmp xchg xchg inc sbb xor cmc pusha fwait or pop (bad) cmpl (bad) imull jg leave mov mov pop or (bad) jg (bad) roll int3 lret pop sub push jo es mov adc in jbe pusha fcmovb jb mov xchg rolb in adc lcall iret lahf rorb (bad) jne rolb sub or loopne dec rcr jb sbb mov shrb test cld inc add ret cs jne loop fistpll (bad) (bad) pop data16 out stos push leave dec jae enter (bad) dec (bad) push cltd test xchg cmc aad fwait mov cmp mov rep push jb lea fimull lcall bound fmulp add je push aas cmp pusha push cli dec sub xor mov pusha mov ret xor insb add ljmp movsb nop sub mov test leave xchg aas movsl and dec add out or test mov push jbe in and mov int3 cmpsl inc and cmp pushf push cmpsl sub test out add das fwait cmp in mov scas faddl mov or lcall jl push cmc jmp fldcw push push pop inc inc test push sbb cmpsb iret in xor xor mov lcall mov mov cs fsubrs pop (bad) icebp dec insb dec and mov in incb cmc pop (bad) mov mov or sub add test add imul dec mov enter add inc leave xor fmuls fstps xor adc out ljmp push jle cmc sub mov repz loop repnz adc rcll inc cwtl std sbb adc addr16 into inc jecxz fnstenv outsl iret push cmp pop and loope jge mov inc std sbb pushf cmpsb enter adc push jo cltd ret sbb add popl addr16 or lcall test adc inc cs xor add and lcall pop sti ja push mov push jmp jecxz pop cwtl xchg clc xor mov repz pop inc movsl push les ljmp and cmp aam fnstenv and int3 add mov jmp fwait out shlb popf inc ja add inc jle pop das mov or cmp into sti mov insb inc pop imul sar adc mov sbb daa scas or mov push sbb lods jmp mov jno xor outsb jl stos mov and leave (bad) fstp inc pop fsubrs insb lcall and insl imul cmpsb cmp mov adc jae jmp in std pop mov push mov and cmp xchg repz push push fucom add sahf add xchg sub adc cmpsb popf jecxz cmpl mov adc pop stos orps sbb (bad) mov rolb sub (bad) or pop iret imul or (bad) test outsb mov lods (bad) fmull es mov sub insb scas stos sbb cmp adcb lods mov push repnz out (bad) mov sbb sub nop or jns out push xor dec add imul or fsub aaa lods dec (bad) rcrb or jnp mov adc dec push sbb add stos pop loope sbb inc into or je push ror gs bound nop stos (bad) lock jl pop mov push ret (bad) sbb hlt stos dec mov test cmp mov fwait sub mov mov cmp (bad) jbe icebp xor fcompl dec cmp jl shl subl xlat cld push mov iret jnp push mov jne popf push push outsl repnz fist sti int cwtl mov syscall and dec sbb sub imul or add sti pop cmpsl mov test cmpb pop pop cmp pusha scas lret mov loop (bad) xchg into mov xchg test test push or movsb in vcvtdq2pd push mov in dec push in aad xchg push push fidivr xchg imul pop mov je cmc lods movsl lock jp sub lahf adc mov push mov stos scas jae rorb lret cmc pushf jle mov mov push ficom add jmp push mov fsubl mov adc push lret pop data16 mov cmp cmp lcall and and dec and shrb into fs insl pop mov jp xchg xchg js in mov outsb adc inc aas inc adc adc stos jg loop or mov push inc fwait aam je xchg stc leave das xor aam fadd push push or lds push sarl push sbb adc sete in into xsave or out jg jecxz mov out cld inc adc inc sbb bnd insl scas fucomi or lahf lock gs jp xchg mov repz fisubr add scas insb pop ret inc rorb in and adc inc dec rol jae rcl sahf rorl scas popa sub mov int or in or mov sbb stos fstl pop nop out xchg (bad) ljmp dec std loope mov xchg insb aad xor mov hlt pop inc icebp jno fs in xlat lods pop popf lret xchg call xor mov jno push add xchg mov jae repz push cltd cwtl cmp out pop sbb mov mov pop add frstpm(287 decl ljmp (bad) mov xor or add cld xor movsb pop jbe movsl sub stos les cmp sub scas xor fmull stc mov and pop pushf push outsb mov add dec rcr ja addr16 notb jl ljmp pop dec xchg pop lods fidivr lds cmp (bad) leave dec xor cmc pop sbb add (bad) or inc (bad) insb mov int3 fsubr jae nop std xchg jle lock (bad) sub pushf ljmp out and sbb lods inc int (bad) dec push jo lock adc fisub xchg add lcall xchg call dec in movsl hlt xor loope jne push mov inc sbb cmpsl pop aad fstp clc xor mov shll adc std icebp sbb mov call sub or sbb mov inc mov inc iret cwtl ds xor add mov ret add mov push sub stos adc test inc daa movsb adc mov xlat cmpsb push jge (bad) cmpsl jb mov mov out jo popa mov pop je inc jno aas out cmp push push pop mov mov sub in mov and stc xchg mov add in xor sub push mov inc pop test loopne ljmp xlat rcrb test xchg (bad) lock push adc out or data16 mov (bad) hlt and jbe pop push xchg insl mov pop inc daa ret ja test pop pop leave and loop mov dec jmp mov cli or ret rcll dec ss (bad) (bad) cltd scas (bad) insl dec fwait out pop or or mov cli sahf push fcomi repz and (bad) mov xlat sub shrb xchg push inc decl or daa cmp out subps scas jae adc lret push lock daa lea fidivr pop jp add adc jnp dec shrb mov lods lods xor loop mov jl adc ret jo or negl aad jns cld pmulhuw test iret popa shll cmp mov jge add out push push mov pop ds push (bad) fs fstl scas pop or test int cmpsl inc cmp fiadd negb adc cmp mov pop jl jne bound fwait fwait inc jl pop or call es in jb mov loope jmp lahf insl (bad) ja xor cmp inc daa mov pop mov mov mov aaa pmaddwd fwait ja xlat push mov cmp sti inc fcomip and xchg xchg ja (bad) fdivrs lahf mov cmpsb shr in or ret out pop ficompl jae xchg pop cmpsb rclb mov mov (bad) repnz nop stos cmpsl dec repz mov ljmp pop push jg je push jbe jmp mov fwait sti push jb pop sbb mov inc mov mov inc leave cld mov push jmp add cs mov mov out jmp xchg push sub jmp push jg cmp loopne push popl daa popa aaa push fistpll dec sub dec aam gs mov ficoml (bad) ss fstps xchg cwtl xchg mov enter jb xor or jne mov sahf xor fidivrl mov pushf fmuls cmc les test shrl or mov push mov loop cmc mov les decl dec ds aad in jmp add cmp lcall (bad) sub enter stos inc xchg adc xlat nop jnp cs rcl inc push add dec cmp fldcw (bad) mov gs int xor inc xchg ja mov pop pop sahf lahf fsub shll push shrl nop sti movsl mov or inc gs xrelease xchg mov je clc loope movsb cmpl push imul jp jo mov inc out or mov xchg mov scas xor bnd dec jb xor push testb xchg out mov (bad) aam xlat mov fidivrl aad or sbb push inc popf pop loope add mov andl sbb cld call and les mov lods (bad) xchg push cmp lahf inc pop push xchg push push ffree hlt and pop (bad) ret inc jle xchg pop sbb mov sbb and icebp scas mov dec mov fmull call cli xor frstor repz or jp add (bad) sahf sarl in xchg daa inc add ljmp fprem1 and inc js pop (bad) fbstp dec cld mov dec sti cmpsb outsl and aaa rcll jl jno cmp and aas adc push sbb rcll and iret xor xchg ja mov jno or lcall test (bad) push fbld push (bad) faddl dec and dec cmpsb mov int mov xor lret pop shrl fidiv (bad) sti loopne fidiv leave jbe mov inc int3 jmp ficoml hlt push mov push lods pop sbb dec test int3 inc dec std and add jge (bad) adc adc ss add int3 ss push es jge or dec ja cwtl or addl je in cwtl push add mov sub or shl push add cs sbb pushf addr16 adc scas cmp call and xorb (bad) scas pop sbb cwtl or cmc lds mov imul jb push xor xlat shrl test jle in xlat jne jb xchg lock mov xchg xor adc pop add popa sahf push lock jmp test adc sbb lahf in or ss add fs or lods (bad) mov mov (bad) push gs cld mov sbb clc in inc enter cmp add cmpsb (bad) inc outsb leave aaa insb jp add mov in notl mov jno dec addb mov cltd or lods sahf test adc dec daa jne pusha lret sbb add sahf adc dec mov pushf ljmp jl test cltd in enter ret pop sbb cli mov pop test arpl add popa cmpsl cmp punpckhdq xchg insl outsb adc bound jbe cmp jnp dec mov xchg in (bad) adc sbb fs mov mov mov js dec movsl cs stos into pop inc sbb adc inc cmp and cli insl js xor push push enter icebp adc jp aas push test (bad) js jae lret inc sar dec cld xor lret pop add jne sub mov add ficoml rorb jbe nop (bad) in inc adc hlt fnstsw inc arpl xor outsb lret push in daa xor (bad) hlt (bad) rclb loopne dec into push xchg adc sub mov push xchg add call rcrb in incb int3 icebp jl mov popa inc sarb cmp mov cmp nop jae pop jnp mov (bad) or js in cmc push decl jl xor xor pop out lods icebp jbe sub pop sbbl jae fwait sti jb arpl mov jmp gs popf clc movsl xchg das cmpsb addr16 adc cwtl comiss les cld scas ret out pop add push and xor jle push inc add outsl sti cmc fsubrs xchg jb push std inc sbb sub mov test cwtl (bad) push mov outsl call add sbb push (bad) jb xchg xchg imul dec out sub sbb jnp cld mov outsb inc xor mov lods sbb (bad) cmpsl jp mov xchg int3 jb icebp cmc pop outsb pop inc jnp jae jecxz sti dec test mov xor mov mov je loope sub stos sbb stc ljmp (bad) int3 hlt jl inc movsl inc stos sub js aaa mov jae or add xlat sub repnz jae push or adc dec ds les (bad) pop test pop cmpsl push mov movsb (bad) mov incl adc add mov das or (bad) or idiv dec xor jae mov xchg (bad) xor pop pushf icebp mov loope addr16 lret loopne jbe cmp jo insb out repnz or adc sbb xchg sbb sbb shrb or dec daa jl imul sbb js ss in lret neg in mov push mov push pop jno (bad) leave test (bad) push loopne iret mov pop icebp pop loop (bad) ss xlat push mov push cmp js int3 jmp into fcmovu dec xor arpl test xchg in sub call dec cld pop scas cmp or mov mov inc inc mov inc roll repz or cmp xor cmp int3 mov popa jbe loope xchg add xor (bad) (bad) jns xlat dec scas pop inc or cmp ficom sbb add jne fxch imul mov pusha adc lock rclb test fsubrl cmp inc mov push loopne les loope jl pop mov add cwtl pop push into inc les cmpsb inc cmp mov (bad) dec push adc xor test xchg add jl mov ja mov call movsl mov mov ss xor cmp sub repz dec mov sbb test add mov xchg cmp cmp push jmp jl (bad) mov test xor call inc rolb jl mov mov (bad) xor sub dec imul fcomp stos inc rcl out outsb push jle xchg clc cld movsb xor mov lret fdivs (bad) pusha sub jl cmp loopne add sub pop mov mov jecxz into aad pop jge int mov push decl push test cmpsl mov imul rorl lods xchg bound test repnz adc aas pop xchg and sub aad jns adc xchg pop adc fadds xor jg scas xchg cld add popa (bad) sti leave gs fstpt leave lods sbb aam fldl fidivr add pop inc jg into rorl nop mov push inc mov and mov sbb fs add cld loope mov add and rorb aas dec or adc ret sub mov or or movsb inc adc call jbe push cmp dec pop popf movsb stc sub push jp outsb loopne push lods cmp adc inc push mov sbb stos cmpsb cmpsb sbb addr16 stc dec loope add aas ss bound xor pop jle rcrb lahf insb sbb shrl pop mov out inc mov inc jne sbb test int3 ljmp xor lds ljmp jae inc push mov mov push push je movd cmp insl (bad) lret dec xchg push lcall add inc jb aas repnz adc loope outsl dec add lret cltd aaa icebp jne add or repnz fwait sahf inc cld mov (bad) cmc sbb sbb mov xor ret adc (bad) xor in mov dec push outsl rorb fs pushf out lahf sbb bound cmpsl movsb push test (bad) cli lds fdivp pop cmp adc mov stos lahf aam mov sti insl (bad) pop aam adc addr16 shrl pop stos push lret test (bad) pop and in lock fnop and xor loope lds mov jle push insl (bad) std xrelease loop fiadd dec add hlt leave mov add mov mov or mov out addr16 and ds inc cwtl div pop icebp xor icebp sbb mov jecxz inc cmp mov push shl jl pop lds daa xchg inc mov call stos push jle in mov mov arpl fstpt and and mov inc push pop jnp repz pop rclb cmpl fwait aam fstl sub add jge ljmp (bad) loop mov std push aam and push sub andl sahf xor (bad) xor or fisubr js iret adc sub ja call (bad) and push push daa sahf stc inc call bound repnz adc jmp adc jo xchg mov cli mov pop rolb lsl ret sbb in leave (bad) test push mov (bad) pop inc lret sbb mov or cld mov adc or sub adc cwtl inc mov and jecxz fidivrl and (bad) shl fisttpl dec (bad) pop inc je mov arpl fistpl std aaa lret sbb pop push push hlt and popa pop pop xchg cmpsl mov xchg test dec (bad) push inc stos lods pushf ljmp cmpsl and mov les (bad) mov push inc mov sbb mov pop sub mov repnz mov ljmp xchg bound adc pop cltd repz loopne jg bound add mov lods loop icebp pusha or mov cmpsb xchg int3 and in scas adc loopne adc mov mov mov iret aas bound scas mov lods mov fwait adc push mov push fwait dec or iret pop cmc iret inc inc pop rolb hlt insl mov mov stc mov call dec leavew data16 ds in ds pusha lahf push jae mov loopne lcall jge dec sbb xor pusha insb or loop lret xchg rorb out pop addr16 (bad) loopne jbe ljmp outsl idivb je mov xor push cmp cwtl out gs push icebp dec je mov int into jns jno aaa add std jp call xchg xor add pop jg sarb mov jecxz aad shlb or arpl rcll cwtl repz inc inc dec mov hlt mov sub (bad) cmp add pusha lea pop bswap xchg xor ljmp xor repnz clc lcall fdivp out into iret mov movsl cmp pop mov fsubl lret inc xchg fwait div sbb mov sbb mov mov pop pop jnp and xchg out cli loope in lods cmpsl or (bad) data16 push sbb into (bad) repz cld mov push inc int iret test jmp sbb push nop popa test pop (bad) scas push xor aas in sbb clc sbb sbb xchg inc cmp aaa inc out js fstl out dec leave addr16 fstl cs cmp (bad) xchg dec lcall in mov xor out andl pop mov fstl jle adcl out pop jno loope icebp mov push jge xchg pop push fs xchg inc cmpsl (bad) mov dec adc pop (bad) lret movsl out pavgb add cmc and mov movq push ret repz mov mov scas icebp adc dec cli push adc lcall xchg or es lret sub xchg scas xor dec push pop add rcrb jmp push pop imul dec inc pop neg fadd mov xlat cmp or jmp subb lods call fimul mov sub fcos push mov push imul push das or loope sub dec and (bad) adc lods (bad) xor jmp inc sbb test mov lods dec cs mov sbb shll lret cmc jns pop jae mov mov or insl cmp jmp movsb inc flds (bad) or aas je pop loope inc cmp xlat and icebp and pushf (bad) push stos gs xchg mov inc mov stc pop and fneni(8087 aaa or add aaa xchg sahf push jmp andl dec sbb cmpsl idivb sub adc test popf push xchg repz fwait add cmp cmpsb frstor (bad) lods and fstpt mov mov mov pop call inc je xor pop outsl dec lret or je stos (bad) sbb inc cmp pushf jle js mov adc push daa push in inc sahf mov mov mov fimull dec stc enter adc in jmp int inc mull inc in rcll sbb mov movsl repz leave (bad) jae xchg push sbb sbb and loope jl test stos sahf push and popf adc mov sahf and fucomi scas or or mov push cmp xchg js stos cltd jmp cli cmp push sbb adc xchg mov cld add insb dec rcrb pop rolb mov or sub movsb daa pop mov (bad) xor dec push pop aas add test push sub out ret lock mov mov int3 mov push movsb pop mov jbe sub lahf pop call xchg movsl dec mov ss jecxz ret mov cmp std mov cmp dec xchg adc pop fwait inc mov hlt push es (bad) inc idiv xor pop jp cmp mov xchg in dec inc mov insb loop fistpll imul sub sub pusha jns in je lret pop (bad) mov sub aas dec or mov popa nop add jg (bad) in lahf inc (bad) ficom jno shlb xchg jns repz sbb sub xchg or lods or clc cmpsl sbb mov lock test cmp pushf mov sahf movl (bad) jle jne enter add push jg aad movsb lcall xchg adc xchg jle inc add lahf mov xchg push (bad) test xor imulb dec push cmp fwait sarb mov out hlt mov out xor jae in subb sarb hlt xor popa mov dec outsb bound xchg insb das test dec mov je sub test mov fnsave inc sub insb iret or push mov sub mov cld pop push nop out mov jno cld (bad) out addr16 push sahf in sbb out orb xor sbb (bad) in mov popa (bad) hlt les pusha or adc fildl pop (bad) (bad) and cmp (bad) dec lds xchg adc clc jmp cmp div sbb or lods sarb and stos or mov fcomps (bad) fistpll push cmp js lea mov mov (bad) das test int3 xor jo push add dec adc cli mov loopne mov out addr16 and ret lods insb dec mov mov push test ss call (bad) mov out jle imull xchg out enter mov jb fbstp and fs leave stos mov bnd out pop mov jge (bad) inc xchg jns cld and mov cs mov scas push add cmp dec movsb inc daa and mov push ds sbbb push sbb imul or push sbb jle mov adc cs jmp iret xchg ljmp addr16 xchg adc push out out (bad) out pop mov or push in std mov mov cwtl cmp jmp cmp lods out repnz in out pop cmp idivb sbb lock push xor cmpsl fs jae cmp scas pop popa add arpl imul stos popa add xor mov stos or addr16 roll ds aas ror icebp xor (bad) inc cmp dec (bad) xchg (bad) pop fistl sarb pminsw pop add (bad) loop adc cmp mov outsb jge mov inc cmp push xchg cli pop push mov or dec dec pusha mov cmp mov push xchg mov mov test shlb aad jae iret jl in pushf test mov or cwtl iret mov iret xchg (bad) mov mov daa xlat test mov jns push adc pop imul scas push dec add insb mov and in cmpb fisttpl xor cmc mov movsb call dec ss iret mov jge sarb push bound add jge inc icebp mov ror nop jnp and add test pushf add adc add pop xchg mov shll pop popf adc inc fnstcw push data16 jle and sbbl sbb push arpl into in sub fisttpl sti imul push testl and add or orb dec inc push adc inc xor movsl mov cmp stc stos daa (bad) js mov jnp push (bad) pop mov std cmp push jne daa popf cmp in mov add aam lret jnp (bad) (bad) or xlat sbb cs lea adc inc aam inc jae out or xchg mov cmp jo xchg mov pop scas add pop jae jmp dec fs dec jbe ja push jecxz das push aam movsb mov mov mov out (bad) scas into daa inc add ja js or and fisttpl mov pop sti pusha jge inc pop pusha inc orb mov xchg dec push cmp push inc mov movsl rcrl in adc movsl insb test or dec and aad (bad) fbld (bad) jb fldcw insb xor fxch aad and push js negb mov inc mov pusha popl jbe sbb fist test in lock imul in push int3 inc ss sbb xchg mov ss out pop fsubr mov std cmpsb repnz pop jno scas fstl (bad) cwtl xor fldenv mov dec (bad) cmpl (bad) mov push mov sub clc in ret outsb jle out inc and sahf call mov jmp imul and sbb rclb lea mov test cwtl lea int push jnp xlat daa bound cmpsb clc xchg jg lea adcb sbb sub jecxz inc lock xor mov je ja adc into xchg xchg add das pop lods mov xchg dec sbb push xchg sbb das aam cwtl shll iret (bad) sub jle rcrb fnstcw adc movsb xor test adc jbe imul (bad) (bad) (bad) enter (bad) test sbb mov in roll add cmpsb movsb (bad) lock lds jbe jp fisttp dec cmpsb cli aad push pop ffreep sbb incl loop leave call pop xchg jg leave mov add add fisttp cmp loop xorl add and (bad) add inc vpsadbw and in mov inc dec enter mov mov add lds stc pushf aas stos cwtl cmp pop pop pusha cli test clc jno ret mov fdiv js jl test mov or mov xchg movsl cmp repnz sbb mov push movsb jg in stos lcall repnz xlat scas xchg lds jmp lock xlat or dec mov fsubrp loop dec pop orb and pop out out adc (bad) in sbb outsl mov into inc sub pop cmp nop leave jns int3 scas arpl pop mov sbb out (bad) push cli dec push xchg jne lds outsb sub sub nop lods adc inc inc sarb cmp loopne ret out loope dec xchg ds ja xchg push les outsl pusha mov jno ja and inc push mov adcb push mov pop shrb int gs stos clc enter sub iret lea stos dec scas and inc dec ds inc adc or sub jbe pop pusha sti jp jge xchg cmpxchg cmp xorl sti int cmp xor pop push out sbb mov jns fsqrt mov jp jecxz sub (bad) out lahf loop xor mov mov cmp into repz cmp cmc in (bad) cmp repz push mov and in jl sub push in sub mov bnd das pop mov adc pop andb jne cltd mov jmp mov sbb mov cli jg fadds add jp xor push pop inc (bad) pusha sub push test repz daa (bad) imul decb lcall jmp inc or aad add mov push xor xchg push data16 push fdivrp adc andl jo xor adc addr16 repnz fimull pop test in in test (bad) mov icebp int lods popf add and fwait mov push add fmuls and in cmp out sbb xchg icebp push xchg out roll je mov fidivr pop jp cwtl mov mov pop adc or sbb xchg or dec lds cmp ret inc xor push sbb push sub test les push dec jmp shlb xlat in cmpsb decl popf xorb pop les mov xchg std pop sub test jo sub test xchg mov push test mov and adc mov popa mov (bad) jmp xor mov cmpsl outsl cmp cmp cld (bad) pop imul xlat mov jb dec or rolb mov mov jmp (bad) jmp pop icebp jle push cmp lahf cld dec mov jmp test lock mov ja aam out fs stos or xchg dec pop adc or roll pushf add cld jns xchg adc inc scas xchg jno dec sahf imul mov loop ret ret lret fsubrs inc mov mov data16 out inc je adc mov pop mov lret pop (bad) mov addr16 push sbb test addr16 cmc mov fstl cs jle xchg divb push (bad) jo sbb xchg cmpsl in das push adc pop outsb outsb dec loop jne adc das mov arpl outsb scas (bad) sbb push mov ss and orps incb or subb fmuls pop daa fildl push xchg mov inc lcall lock sub (bad) movsb movsb push cmpsb jbe pop push mov sbb and scas pushf mov dec stos outsl fcmovne shlb sub jmp ss out in lret lret mov mov clc mov sti lcall xchg test iret cmpsb call (bad) jno dec mov movsb cmp mov jno push fstpl fnstenv fsubl das cmp pop in or sub aas mov sbb ret test mov sbb ficoml insl sub or jne fbstp add mov fdivrp nop dec push jns out mov and sbb add xorb rclb push fwait pop jnp fwait repnz sahf pushf sbb out xchg fcmovnbe out add jbe pop daa jb push dec pop loop push mov (bad) into pop dec dec lahf call lahf mov ds test mov jb xchg leave mov or push enter and clc fidivl cmpsl pop push iret push ret test ljmp (bad) fsubs jge jo in mov cmp mov leave repnz push mov daa rclb mov lcall gs jb mov scas in xor mov (bad) loopne adc or dec hlt inc inc div lcall fcmovnu cli inc and imul (bad) mov dec mov push adc into dec stos test sub inc or xchg dec ljmp cmp sub cltd lret lret lcall rol cli icebp call (bad) dec pop xchg sbb lds lods pop dec (bad) and cs pop jns lret (bad) arpl jmp jle or outsl inc stos dec popa loop pop jle mov (bad) dec jbe neg mov in lahf repz movsl mov out cmovae cs in shlb movsb test adc jecxz sbb or mov add lods mov pop pop mov mov cmc sub xchg mov cmp (bad) daa call push push icebp mov in xor in es mov roll add lcall enter push add push (bad) xchg push pop gs pop test xchg std fcomps cmp cmp or fcomps imul push xchg xor pop cmp (bad) jo and mov sti jmp add mov mov xchg pop cmpsl in dec cmc popa (bad) out and fs or fisttp push out mov repz or xchg enter push xchg fcmovb xchg dec ret int addr16 popf test lock and push sub test cwtl test dec icebp (bad) decl pop outsb (bad) jae cmpsb or ret cli or mov fbstp sbb dec rcr fisubrl dec aas mov xchg mov roll mov mov xor mov pop adc mov xchg xchg inc pop into pop push dec repnz sbb pop adcl mov push fs (bad) and nop push in lods bound or pop add insb out stos adc mov ja push inc adc mov loope shl mov mov test sbb or inc jmp loop ja mulps xchg popf xlat cwtl sub push cmp and mov xor xchg push aad pop lock xor and clc mov daa sbb aad fnstenv into and mov lock pushf and idivl and and push (bad) aad pop mov movsl and pop cmp repz int3 push adc mov dec mov push sahf je sub aas adc mov pushl mov push shl pop inc mov out cmpsl fbld push fldl fistpl fcmove lea (bad) mov sahf je gs xchg adc jmp sarb in imul sbb mov xlat jns data16 jae and pop out lea into shl xor movaps aaa mov leave (bad) clc adc cmc sbb dec cwtl xchg fcmovb and sbb cwtl xor xbegin test xor xchg mov sbb xchg (bad) int dec subb or in cmp jns and cmp or es xchg push and cmc test cmp aad rcrl daa (bad) cmp jb adc dec sub (bad) pop lret pop or pop jno (bad) sbb dec xchg imul cmc hlt dec pop mov std pushf adc enter mov ljmp inc jl movsl mov scas cmp movsl (bad) lods pusha adc xor nop les push test dec in fldl push xor enter stos mov inc sbb int testb push inc (bad) dec dec movsl push lods push mov (bad) push mov inc cmpsl lret sbb fisttp loope mov push jbe loop loop roll lret loope cwtl mov mov pop mov push sahf mull sub mov repnz mov icebp mov imul icebp lret mov sbb (bad) in aad cld jne xor mov je fldenv cltd push xlat ret decb popf jmp cwtl mov add add cld push in or fbld int pop adc push mov insl nop jl jmp push xchg ret xchg imul pushf cmp into add cmp sbb iret pop (bad) fldt xor ret cli xor negb sub fcompl xchg in jmp mov mov and pop add inc mov out mov scas popf movsl mov mov xor mov cmp into mov and sub in repnz jo add mov xor lret fbstp or test rorb sbb and mov ret iret pop (bad) adc insl pop lcall push jmp cmp sbb xor sbb fwait dec cmp sub jne shrb mov mov lcall (bad) call mov lods pop cld loope or iret mov inc jl adc push push dec fidiv push mov mov mov lods loope cmp (bad) stc cmp jb test adc cmp in jo xchg mov das inc xor shlb mov icebp mov dec pop inc ss insb jle pop jno lea cltd adc sti xchg mov (bad) into dec xchg pusha insb sub or xchg pusha jmp and and jge sbb add loop xor jecxz cmp ret ret xor jae or xor mov mov pop mov dec mov lret xchg call inc mov int mov hlt jnp sbb adc movsl jnp dec jnp pop dec pop loope cmp mov stos push push mov cltd gs mov adc cmp push sahf dec mov and mov clc and push xor mov cmpl push aam in jno jg mov shrl xor pop push dec scas aam lahf addr16 test rcl pusha dec outsb outsl enter mov inc (bad) insl jecxz inc addr16 and int3 cs mov dec xchg mov out mov aad (bad) std mov addr16 push jmp xchg test or cwtl imul and jne fsubs arpl add idivl cmpl in push hlt test popf call int dec push fiadd cld dec jecxz (bad) clc xchg sbb or fnstcw cmp dec mov scas mov and insb int scas int xchg dec add fnstsw out daa jb insb arpl add jb jp push jne push adc lcall fistl insl repz jp and ret sbb jl das mov minps test jge xchg and sub sbb adc ret pusha loop mov add mov rcrl jl stos mov das mov jae jecxz leave inc xchg pop add pushf add dec in sub or (bad) jle jbe icebp mov inc aas jl adc mov stos inc dec pop rorl fs (bad) jle cld mov das add icebp jmp ss test sub lret pop inc and fsubr xchg mov pop mov (bad) and push out jge sbb mov sbb bnd ret ds stos das and or ficomp mov loopne test int3 fs add test cli sbb inc xchg push shr mov and and sub xchg cmp sahf push xchg mov dec pop inc lods shr fdivp dec fiadd cs lds xchg jg mov sub cld or test mov aam sub push mov mov pushl lcall mov enter addr16 test in leave mov int3 (bad) sbb test test cmpsl mov jge dec adc mov push dec jns enter outsb fdivp cmp pushf fucom mov int and pop sarb or addr16 jne and scas or ja (bad) iret in repz sarb pushf das sub notl cld mov inc pop idivb adc add pop pop ss mov inc adc lea sbb cmp mov mov scas cmc sub ljmp dec mov add les (bad) mov or or mov adc and pop jns test and mov fsubrl icebp jle pop sbb out mov cmp mov or rcll loope jbe push dec xlat pop xchg (bad) stos push int3 fmul pop lret dec push fist push adc in (bad) push (bad) adc nop nop pusha scas cmp fs neg sub in mov stc lods ja ljmp test movsl lcall add data16 jb xchg (bad) lahf mov xor push lret sub sub wrmsr leave rorb pop pop repnz (bad) loop rcrb lret fsts repz cltd push mov sbb aaa test and inc shl mov jns out adc and es inc aad adc mov mov outsb es stc das adc fidiv mov lahf mov pop xor test or aaa sbb push xchg mov xchg push imul sahf and and sbb cmp xchg cmpsb push cmp loope sub push mov adcl mov mov stos mov nop inc xchg mov lcall pop pop and popf mov and movsb sub (bad) shlb test scas xor lods icebp mov ds mov leave xor inc clc mov sub js out (bad) pusha nop dec pop fistpl pop in (bad) rcll stc rcll mov xlat lock bound inc mov roll shrl (bad) mov cld (bad) or je push mov jae mov test and push jecxz and stc add imul inc and and fistpll scas xlat mov dec (bad) repz inc jns sarb add jmp fcmovnbe xor test in dec mov xor sahf cmpsb stos (bad) push mulb shlb addb roll mov inc jmp jno dec add inc imull es (bad) cmp and jmp test mov and int and add das std jmp fwait outsl inc outsb popa stc or out pop push out xchg dec addb mov dec and pushf test sub sbb dec daa or push xchg xor sti cmp lret (bad) int cmp xor xlat out jl push adc xor fldenv xor or icebp aam lea adc lock cmp jo sub mov cmp and mov nop test xor jo mov pop fstps pop jge push dec scas ja mov adc clc and jae aad pusha shll arpl add sub xlat dec insl lret sbb insl pop mov stc or push rcl test and imul (bad) icebp mov lret mov mov out or and sahf jno js rol cmp cmpl jecxz sti lret inc aam inc inc (bad) jne inc cltd pop mov test adc mov call mov or cli imul int3 (bad) jecxz add inc ret cli rol (bad) adc stos dec addb test outsl jbe push fnstenv shr add mov in pop inc jg rcll sbb lods cmpsl dec cmp mov lock mov jecxz push sarb mov xor jl pop into (bad) ja daa push fstpt insb cmp int3 mov int sbb mov push cmpsb mov xchg and mov test pushf pop sbb sub cli adc sahf xor (bad) fs stos sub add mov mov loopne push push div cmpsb insl daa mov inc adc nop fcomip adc loope mov test ss adc scas je int std push cltd dec inc shll cmp (bad) call adc (bad) or cli pop into xor test out mov xor mov test inc push push out sub pop jle sbb lahf iret dec jmp outsl cld divl enter mov xchg js mov dec popf jmp mov in xor jne imul orl inc scas idiv pop jb mov clc cmp sub (bad) mov (bad) call jnp iret out cmpsl dec sub mov icebp bound pushf aas clc (bad) lret aad aad repz lret in inc insb sbb dec dec mov (bad) (bad) or adc xlat xor cmp mov jl sti pop fisttp andb outsb fs (bad) in loope xor out mov cld push mov xorl scas ja out add cwtl adc add jbe sub push xchg loopne ljmp es cmc in push add mov (bad) dec out jns cli or lea adc cmpsb add inc sbb or sbb in adc hlt sbb test add push mov sbbl push sub out call mov (bad) sbb popa fmuls or ja adc mov mov push sbb mov mov std xchg cld and adc xchg lret fistpl (bad) mov adc mov cli pop xor nop int imul mov push and repnz cmpsb push xor push inc push lods scas sbb dec mov rorl in repz data16 adc push movsl push fnstcw and ret lea and and pop cs inc popa rol mov adc call xchg jno cmpsl cld xor xor jl fs hlt jnp nop and mov pop mov sbb aam push lods mov scas xor rol outsb das cli pop sub aas pop jbe xchg xchg hlt call aad into xchg jne test pop pop cmpsb mov add mov dec jl inc aas inc add inc jo pop shrl fldt xchg push dec rcrl rorl jmp call sub cmpsl cmp jbe pop pop xchg and push or jle or je addr16 stos push and sti cmp rcl pushf mov ja nop xor ss int3 inc lock jecxz (bad) int3 insl cmpb xchg call push or iret lock adc add xchg xchg mov sbb sbb aam dec and hlt gs inc jp outsl jne imulb test rcr insb test mov shr cmp rolb js dec adc xor inc (bad) ljmp dec jns scas adc sbb mov mov xchg xchg out pop fstps js fcoml pop je cld xor cmc sub jmp stos mov stos dec push test lahf loop inc ja,pn sub mov les loopne xor mov int into loope push xor scas je xchg out mov fidivr add gs pop sub lret movsl enter jnp into bound pop arpl icebp call cltd fidiv out pusha pop ds ja enter jns jb outsl add xor pop out aad mov add leave gs imul cmp mov adc dec hlt rcrb les daa aaa jecxz call pop xchg lock or adc cld mov fcmovnbe mov mov inc jge out cmc pop add mov mov cmp cmpb mov dec inc addr16 dec inc sbb sub lcall scas sub loopne pop inc je mov mov cmp mov dec xor bnd pop outsl (bad) xor sub pusha jecxz and mov xchg mov mov jbe sbb mov mov js or xchg int sbb roll pop adcl pop clc pop nop sti fdivrl mov xor xor cmp (bad) sub add pop test ds (bad) jmp les or stos gs cmp sti inc add adc scas add jb fcmovb inc ljmp pop xchg mov jae scas push loopne cmc andl inc mov jne xchg ja or inc movsb enter cmc xor movsl sbb or mov or inc pop xchg sbb mov sub pop xor cli mov lds leave shlb mov sarl pop mov arpl test pop push (bad) aad sbb cmp jmp dec lea add sub xchg push dec ret sbb nop imul sti dec std out gs add xchg or sbb and fiadd fnstsw ret ret sbb and dec or jo cmp scas das push adc bound mov sbb sbb out aaa adc test repnz je lea xchg jmp mov xchg cmp cmp pop inc mov gs lock jne stos pusha add or jns add push lea mov arpl js sbb loopne xor ficom fwait sbb adc inc sbb popf pop mov xchg flds jl aaa mov dec pop inc xchg push pop inc repnz fwait push sbb sub fnstenv mov sbb mov dec call jmp flds xor jb test mov mov sbb (bad) repz int3 push add popf call xor sbb jo sub cltd nop adc push fstl sub cmp rcrb pop clc aaa xchg push xchg cmc (bad) test mov jmp es in xchg xchg cmc pop mov mov push in adc and cmp fstl inc sbb test mov jle js cmpsl cwtl call sub inc xchg out out rorl or mov or lret inc aad mov sbb repz or mov cmp pop cltd mov jno pop pop gs int3 repnz jg sbb (bad) clc and les push add add sub sbb ss jae mov lods jge (bad) in les int mov fwait dec leave jl pop pop ret cmpsl inc call cmpl ret push mov or add add popa aas cmpsb gs sub fisttpll imul inc add in mov lret lods mov xchg je xorb sub dec (bad) lea fadds jne div push ror sbb iret int adc jmp or ret out jg lock push inc mov xor movsb cmpxchg scas call insb mov loopne leave (bad) leave xlat cmp pushl in insl mov shl movsl push add add lods push hlt inc aam repz jecxz ja add fbld (bad) addr16 push aas dec int stc sbb and dec stc in cmp xor add shlb jne dec test loop aad hlt dec and nop pop mov xchg jae lret pop add xor inc (bad) mov sbbb lahf inc cmc mov jge xchg out pop stos mov (bad) mov pop cwtl mov push sub mov jns int3 movsb fucomp mov pop aad pop les adc das es adc push push roll repz ds mov movsb test xor push add pop dec lods jp fstps fmull fbstp xchg loop popf ljmp add xchg decl ljmp dec mov mov das (bad) divb std and pop cmovo outsb cli pop test xchg and push pop loop cmp les dec dec outsl sbb or mov movsb (bad) repnz in push add push pushf enter and aaa fwait out sbb push data16 mov sbb sub mov pop (bad) lret sub jg sarl insb add mov int3 (bad) dec dec cltd test out and mov fcmovbe pop iret push addl das icebp aaa fbld or mov (bad) push ret inc inc in jne cmp mov sahf lahf icebp in inc stos notb or dec mov ja and cmp mov enter movsl dec outsb out daa fsubs lds sub mov mov outsl mov xor sbb mov adc mov add iret lds dec insl cld bound adc mov outsl dec sub mov push mov pop rclb sbb test pop call sub lret into arpl bswap mov push lds ficoml mov and out bound aas pop in (bad) sbb je mov test cwtl cs sub in rcll (bad) les test dec jge lahf xchg jl sub pop push aad stos push or push rolb lcall push sub repz xor pop mov (bad) mov lret mov sub dec jl or jo mov jmp comiss les leave loope int mov fwait rcll scas push sahf pop add shrl pushf xor and ja (bad) sti dec popf fimul add out popf pop cmp jns pusha cs clc movl lahf mov ret jne notl shr jmp lret inc or aas mov sbb push lods nop test (bad) scas in int3 mov mov and xor push xchg loope (bad) mov lds stos nop push jmp add mov stc movsl sub dec jecxz lds mov cmp xchg out sub jae cmp hlt (bad) jp (bad) pushf sbb out sbb pusha cs sarb mov inc leave lret aas bound lcall iret cmp sbb loopne and roll push push fdivrl test mov inc mov sub add (bad) dec push sbb fcoml sbb inc mov sub daa or (bad) lods xchg jo dec in and into cmp mov shl jo dec or (bad) lret push dec dec sub (bad) lock pop pop dec iret loop cmp jecxz lahf push add mov xchg iret ja je xchg sub test call adc jp loopne movsl xchg sbb in push xor call lds cltd test push (bad) or jbe fbld mov ret jo mov push (bad) mov and sbb les leave addr16 inc daa or xor and movsl outsb sbb xchg aas inc cmovb mov or ja jb mov xor stos inc push fs adcl dec arpl fcomps lods lods push out fstpt fldl push mov mov cs add xor hlt mov (bad) lret rcrb outsb adc add pop (bad) or sbb mov hlt in mov dec insl outsb push cld push mov ds hlt pushf ja sbb add jns sub fwait push dec pushf lods inc or cld or std pop add pop test pop out scas cwtl mov xor mov int mov lret out adc imull ljmp mov xchg bound push mov jl mov call out mov in cmpsl ss inc movsb sti test jae mov psrlq xor xchg adc sbb pop jmp inc js cmp ret dec sti push sbb aam pop aad mov insb pshufw imul inc dec inc mov or movsl test lcall psraw push pop pop adc jmp sub xlat and sub in fdivs mov mov xor fucomi mov jecxz int3 loope ds jae inc shrl lods jo (bad) (bad) dec test cmp insl cmpsb cmp pushf mov cmp cmp scas jle aam addl adc aam mov fnstcw cmp inc cmp js cwtd xor icebp sbb cmpsl ror lock jns mov pusha in xchg ljmp aam out pop xchg lret xor out add ljmp mov add mov stc inc outsl push (bad) movsb xor sub imul les xchg sub xor and fistpll jb pop mov mov arpl push dec icebp decb int3 sarl jle (bad) stos push push pop adc (bad) lea outsb mov pop imul cmp stos aam inc adc shrb add iret or jnp loope bnd mov push fnop aad lods jg sahf shlb mov iret add pop xchg pop dec sarl xchg mov pop fsubs call lret dec mov add sbb xor xchg dec flds ret and es scas mov mov incb sbb js iret in xchg cmp add xchg das icebp std test scas hlt xlat mov outsb in cmp insb push or aam pop add ds sbb inc or lods mov es push jg mov cli add imul xlat jbe push jge cli fidivrl pop out jmp cmpsl sarb es inc ljmp mov loopne pop decb dec aas lea push or insl (bad) sbb push xor shl addr16 loopne out cmpsb scas (bad) pop sbb gs xchg arpl fcomps mov aas clc mov add push cwtl or mov pop dec pop fstpl push clc inc xor push test rclb bound insl fisttpll cltd loope dec or lret cmp lahf push mov ret lea xchg and dec call sbb lds and leave aas or callw popa scas ficoml sbb mov mov xlat pop cltd movsb xor pop mov or gs add push int sub dec stos jbe arpl xor cmp (bad) sub rolb cmpsb pop repz or test ds scas fsubrs dec push sti mov aas shrb push sub lock popa icebp or lds cmpsb lret pushf xchg mov stos pop jno aad inc pop sbb bound cmpsl mov in ljmp popw sub call mov in sub sub pushf clc sbb jns cli fnstenv or pushl bound lds mov data16 jno pop push jns ficompl lret cmc loopne scas sub jg jb sbb xor adc bound popa cwtl mov mov xor (bad) inc int shr and es jb lock in dec xchg adc or fsubs lock test inc push add cltd pop pushf adc mov fwait in js divl cli adc pop push xchg subl cmc roll xor jp xor scas mov pusha (bad) dec pop xchg inc dec mov inc jne push mov and xchg add loopne and push add mov sahf mov lock cwtl dec imul cli lods jbe and das inc loope pop test cmp loop push das add orl aam adcl push push mov loope xchg and call cmp inc mov adc sub inc (bad) xchg loopne mov int test xchg xchg test int3 cltd bnd jmp push cmp pop loopne sub (bad) adc sahf mov call sub push outsl push shr sub adc mov sub lods dec lds xchg push and sbbl xor xchg leave cwtl dec je or out stos repz imul mov cld mov fildll mov out out xchg std loop xchg push repz mov adc xchg xchg data16 xchg jne,pn scas (bad) xor outsb fdivl inc cmpsl inc mov push out (bad) mov (bad) hlt decb cmpsl push dec adc and ret adc cltd fsubrp stc ret loope sub mov test jl pusha sbb (bad) fcomi mov pop mov mov in push mov jne pop cmpl sbb dec insb mov fistpl fstp or cmp dec movsl mov push adc xor addr16 idivl pop sbb outsb mov mov xchg pop jns mov loope cmp mov xchg (bad) mov jl lds or xchg and jp cmp loopne push jnp cmpxchg addr16 xor sar or mov and mov jp gs fstl adc addr16 dec adc jo push sub push gs in lods jge inc add add cltd inc and add pop leave cmp lds sbb aas test sti ret push dec add rorb outsb fs mov mov pop adc jge rclb mov outsl jmp dec jae icebp pushf icebp push mov ret mov mov call jnp jbe insl aad jne sbb decl popa jns fwait jo jecxz,pt (bad) fiaddl sub pusha jg mov mov dec (bad) popa lock jns mov xchg dec jns lds or lret pop subl nop stos and mov mov lcall inc je adc jnp xrelease iret pop (bad) pop lds and test jae sub adc out divl adc data16 add je mov inc dec and mov pop test xchg jb cmp cmpsb and xor pop pop or push addb shlb dec shrl call pushf rol sbb (bad) into arpl shll stos mov mov lds popl dec sub repz or (bad) gs movsl je sahf into adcl imul outsl push and add or adc and or and mov or xor (bad) adc std pop push mov addr16 mov scas data16 mov aas and sbb xchg push cld pushf scas pop fcomi or mov mov mov inc orl inc pop cs lock xchg or arpl frstor push add test nop mov testl je lods popa call int3 xchg outsl aam push outsl bound dec cmp rcl xor mov leave ja mov push loope inc push arpl push or arpl (bad) icebp enter mov or inc shlb (bad) ficomp lret cmp and fwait adc setge inc inc cltd jecxz push (bad) repz pop push das push sub mov push stos fiadd mov ljmp in fidivrl mov push or dec and xor test lcall das fsubrl iret xchg inc jp push mov fwait clc xor xor cmc and call aad popa mov lods fcoms mov orb scas (bad) iret pop idiv sti loope vmovupd cmp imul aad sbb push push scas sub gs pop inc imul cmp push xchg mov rcr mov add or or xor ljmp cmpsl cld and test subb mov cltd stos aam mov xchg in pop popa clc test fneni(8087 inc dec inc xor mov sbb imul cli loope cmp sti loope rcrl insb pop pop lds (bad) out adc xor punpckhbw pop jno push (bad) jno push hlt xchg pop mov int mov aaa in dec mov jnp rorb cmp push sahf jb insl inc add popf push pop mov cmp pop cmp xorl sub mov push adc push das jo fcoml lcall cmp std lret aad push xchg mov mov mov xchg cld or dec (bad) sbb sahf cmp cmp xor mov aaa inc cmp push cmpl jmp push mov adc sti push jno lret test xchg (bad) imul inc xchg dec sub jp (bad) into aaa test sub mov dec sbb movsl dec fistp inc sub insb or scas push sti push push push push test sahf test rclb and ret fs movsl cmpsb mov cmp cs jle cmpsl daa cmpsl sbb and ret cmpsb (bad) loope push push cltd outsb pmulhw (bad) lret popf (bad) cmp mov cmp push add xor in or lods pop adc mov divb ss cmp out dec pop or jb iret lret icebp std hlt pusha adc mov incl notl (bad) xor movsb dec es xchg loopne movhlps jle aam cltd dec mov pop push dec or mov scas ret pop mov fisub xor xchg jl adc pop out mov pop leave shll push jo jne,pn hlt mov sub rcll imulb vmread and dec and (bad) mov mov scas rorl push je dec movsl int and fdivrl cmpsl insb mull ja jl cmpl push cmp xor and test insl push icebp and dec popf add (bad) sti add adc pop stc inc and push lahf or mov ret aas push hlt rolb insl ja inc and fnop add addb imul add addr16 (bad) mulb inc pop sbb dec leave mov and icebp adc les movl rcl lock mov xchg cmpsb push inc xchg sub andl outsb in push cmp iret adc mov or stos cmp in sub test jg add sbb push sahf xchg in inc andl and js inc insl cmc div push and (bad) scas je mov mov mov outsl sub jo cli lods int test push aam test push xor xor cmp mov inc ret popf dec stos jne pop sahf loop or lea icebp pop rcrl adc jo (bad) xor pop lds push lea pop push pop push or popa imul jno call and movsb or lret out jp push movsl cmpsb inc push cmpsb dec lods and fdivl cmp pop mov lds inc lds jo push xchg add add dec cs push das icebp pop push cmpsb adc jnp decl push mov mov rcll cmp adc jno mov out cmp clc mov mov xchg pusha xor sub fwait xor mov jle adc add cmpsl dec scas in mov gs roll mov (bad) dec (bad) ss xor rorl scas test arpl and ja (bad) movsb mov (bad) lods into xor lock std rcrb push lea inc sub lods (bad) loope test cmp (bad) inc imul xor sub stos jb (bad) std movsb push sbb xchg cmp enter sub mov jmp int inc rolb mov pusha pushf adc testl mov (bad) xor sub pop jmp xor in sub cltd or roll mov dec fldt call or sub (bad) mul adc xor push lods lods sub cmc (bad) imul jge xchg xor pop lahf pop push test mov pushf and in vpsraw push ljmp and ja out and negl fldcw sahf (bad) jmp pop imul jecxz sbb loope jbe rcl sub xchg add out sarb sub in adc insb mov xchg xchg lret cmp fstl loop dec (bad) repnz pop data16 mov and dec pop lahf mov es mov push (bad) outsb cmp test rorb pop ds clc inc insb push cmp int3 mov and clc push sub ja test ss or xor dec mov dec mov mov xchg pop int mov mov je insl shl mov and cli sbb xchg ror jno sub sbb jecxz xchg scas jge cmpsb xchg hlt cmpsl clc int jo push inc adc xor mov cwtl and rclb add cmp add push in xchg stos lods in test fidiv je cltd (bad) dec push jo push jecxz or mov adc int push fstps in int3 or push gs call push mov fst lea test inc aad aas mov cmpsl and cwtl sub mov add in roll pushf push mov and xlat mov call pop jge add push mov add mov ja adc pop adc fcomi fcoml jle ret jecxz andl add inc outsb sbb aaa mov lret adc xchg lds pop cmp cli movsb sbb call lods loope cmp mov call xchg call loopne sub popf cs adc arpl rcll push mov sub mov (bad) sbb jbe lods pushw xchg sub sarb adc dec pushf out sub into stc push in xchg or outsb jmp das cmp pop xor push jg bound aam jl lret nop sbb ja (bad) mov stos sbb movsb shrl movsb stos rcr je push ljmp add xchg mov pop lods aas xor mov jmp inc (bad) imulb mov int (bad) pop pop rol fldl jae xchg dec pop out stos dec ret mov movsl shll rcrb or notl data16 outsl (bad) push jmp sbbl call ljmp push mov movsl fimull sbb jp in xchg decl imul pop jae stos daa fbstp cmp test js xchg loop mov fwait xchg fdivr push cmp dec int inc js sub sub or loop cmp ss std xorl mov push sbb jle ja fcomip xchg dec adc mov push mov movsl sbb mov lds scas cmpsb dec enter pop dec cwtl mov inc dec dec cmp rclb out jmp xor movsb add movsl arpl xchg cmpl push repnz xor fldt cmp mov mov mov repnz mov xrelease jns cli sti ret dec ret js jb push jle (bad) (bad) mov push cmpsl and push lds enter cmp outsb dec push push adc mov jmp sbb cwtl pop bound mov push shrb dec lcall outsb jae (bad) enter push sub cmp mov loope lahf js add mov test repz popa int int3 mov jae jno adc jmp adc mov xchg push cmp rorb cmp push cli addr16 xchg push out sarl push cli call iret std cmc repz sub das out jg cmp (bad) aaa sub fnstenv ret adc cmp mov mov jo faddp sub nop dec (bad) (bad) (bad) pusha out dec cmc xchg (bad) shlb mov (bad) cs pop sbb adc (bad) fistpll jno in mov adc (bad) cs (bad) jg push scas outsl jnp pop iret lcall lods dec mov or adc xchg jle xchg xor daa scas das mov arpl ja xchg imul test or jl fnstenv add pushl sbb sub xor inc xchg arpl xchg fnstcw (bad) push decb xchg leave push jg cmpsb out testb ret mov pop std and or in xchg mov jo icebp dec jg or xor jl cs xor pop mov mov fwait sbb push jns (bad) in jg movsb int cmpsl popa cmp pop pop or inc jl xor sbb and mov mov jne js add cld nop fistp lods psrad insb push ljmp jbe xchg sbb hlt xor add (bad) jne test jo ficompl jecxz test xchg mov lea xor jmp imul movsb aam imul movb sub jecxz dec test xchg mov bound sub lock leave xchg in cmc xchg mov ja lcall dec add adc es lock icebp xchg (bad) int pop jle jno lds adc pop push lahf mov scas jecxz lea add or xlat pop clc xchg and add add adc and or cmp inc xor ret jp fdivl (bad) into mov xchg jmp jmp pop cs sbb pop sti arpl push fldenv cs stos ds inc imul imul jmp inc lods mov pop sahf jo,pt ss dec sbb sub xchg mov cli jmp fist pop scas inc int3 add sub rclb (bad) fcomps xor lahf outsb xchg xchg mov lret lock movsl mov add les daa mov mov inc pop add nop outsl pushf rorl shr mov call xor and ljmp xchg out adc cmp mov sub lahf cltd lcall jl mov repnz lds cmp inc jg lcall (bad) dec jno sbb loop (bad) xchg sub pop mov adc jp xchg sub test push cmpb and jae and pop pop mov das (bad) (bad) test fidivr idivl lods lret test incl push fiaddl scas or jmp inc xor mov jns rolb cli xchg add pop jno xchg lods inc push pop and sub cmp dec xor jbe rorb mov daa popa int out mov pop int3 mov jo ffree iret push bound sbb xchg movsl jle lods rol cmpsl scas call push sbb out jmp or sbb jns sbb xchg loope dec mov popf mov daa movsb push cmp repnz cmp or adc sbb pop mov add fcoml push xor es stos and sbb in pop jg push fs dec xor pop push and das add or sub adc sbbb xchg push (bad) mov adc imul xlat cwtl clc sbb (bad) push lcall inc mov jl add test jmp mov mov mov adc xor test leave jnp inc mov adc push fs mov inc xchg push mov mov movsl xchg or (bad) repz jmp outsl pushf test push add out cmp inc mov insl loope cmc sub dec ror lahf out imull push in jo xchg mov pop jge push movsb xchg lcall (bad) add sub mov js pop mov and es sub fisttpl rol mov sahf cmovne out and imul mov sub test js loope xchg roll outsb sbb mov add int3 sahf add stos xchg pop popf push in sahf add popf sar cmp adc clc mov mov movsl sbb enter insb (bad) lahf iret mov mov push cmpsl in nop rcl arpl pop and loope xor out jb xchg repnz mov aas mov js lods inc gs daa aam xchg daa (bad) clc pop rcl jae cs mov call push mov add push shlb rorb imull dec stos (bad) aaa mov fmull xor in and push stos inc add inc sub cmp mov hlt add mov and inc lods lea inc push in inc dec imul xchg out (bad) or and adc das and adc or cmp jnp test fsubp mov inc pop lret mov jae or ret icebp fs je mov jno call jne sub jns pop cmpsl push fcomps jne pop es nop pop movsl jo sub sbb enter ret pop sbb (bad) dec das mov lret jge mov xor jp sbb cwtl dec test (bad) leave stos leave dec arpl sahf xchg xor xorl mov mov sub mov cs in push pop in mov sbb xor push jno add (bad) hlt xchg jecxz add fstpt lods call mov adc and xlat and jle jmp push dec sar xor loop cmp jle adc icebp imul adc call sbb adc into xchg inc dec pop frstor int3 fs mov xor and jb adc cs jp adc loope jb mov ja push add mov or in packssdw add cmp into add call cmp and jge sub dec std loope fist pop fstps out sbb and jnp popf lret ret mov cmpsb cmc pop arpl sub imul mov mov daa jg in es fcmovnbe (bad) jae daa fildl lods adc or and shlb cwtl jmp push mov xchg cmpl daa addr16 xchg lock scas pop inc fwait xchg jbe or or out repz xor dec push or push sub lds std ss pop mov test data16 mov cmpsl into push out movsb dec lods sbb test dec adc jl inc insl jmp add mov and add outsb loopne cmp mov cmc inc gs and cltd mov push push loop (bad) sbb cmp push or xchg ja mov xor popa push pop gs and iret pop xor shr mov and cmp adc push dec or mov ljmp and lock scas aad mov repnz daa mov cmp mov iret mov test mov mov cmp xor xchg adc pslld adc (bad) leave (bad) push jne or test inc div jbe rcpps mov imul or xchg and dec cs xchg sbb and addb arpl stc popf icebp dec cmp cli push out sub dec jbe xor pop dec test (bad) mull sub lods cltd add inc xor faddl lcall out mov ss or mov pop ja mov stc jp xor cmpsl sub cltd add inc and mov sbb subb (bad) dec push adc jecxz jb and cld mov int3 outsb cmp sti call movsb inc rorb jnp pop sub jmp arpl mov lahf mov cli cmpxchg fbld mov int inc in test pop pop cld test cld ljmp fisub dec cld popa dec jg sahf bnd pop jecxz ds push hlt push pusha dec xchg and jnp pop cmp push (bad) mov sbb and test mov mov data16 mov mov cmc xchg xor pop add xor sbb sbb mov mov add sub jns mov push arpl and fsubrs dec xor sub fnstsw int or xchg mov sahf movsl mov aam mov ror dec out mov fadds add dec jmp pop push (bad) scas aaa or pop mov jno fstps ffreep pop add push sahf push adc inc mov divb je add mov popa repnz inc pop outsb ret push xor pusha outsb mov mov test stos adc add mull mov stos xchg enter fimul mov push mov das incb cmp mov aaa addr16 and inc jno mov mov jge jno jbe sub popa aas sub jmp sar push xchg mov fadds cs sbb pop stos test mov addr16 ljmp and stos or cwtl jp dec mov add dec mov jl inc fcoms in xchg gs ds or jge lret repnz sub in cmc sarb cmp mov cmp jno popa push push aam push btc cmp push jl enter and add inc inc xorl xchg (bad) bound out test push (bad) jo xor inc xor repnz bound inc adc jge mov int3 fidivrl xchg int3 hlt sbb icebp bound sbb test adc es pop xor and inc pop loopne enter in sarb fidiv gs push out icebp jecxz decb out jbe cmp inc mov (bad) xchg mov outsl push fsubs dec dec mov popf sub loopne orl xlat mov cmp int3 jbe inc test mov sbb sub sbb (bad) sub lret in lods je insl (bad) sbb ds adc jne dec cld pop lret sahf xchg adc sub les push pop lods frstor ss sub add (bad) popa pop pop and imul mov divb dec ret (bad) mov popa je int das gs jg pop and pop ja scas xchg out sbb lods mov sbb lahf fs stos jge inc lcall cmpsb cld sub pop or cmp adc scas test test sbb jo int movsl push lods (bad) (bad) pop push shlb xchg lods mov and adc adc ret hlt movsl xchg xchg das push cmp test lock cmp xchg lea cmp out (bad) cmp pop xchg dec mov jne adc inc xchg jns out inc scas lds in adc pop jl test inc ret mov mov xor pop sub bound cmp dec clc js repnz mov push cltd inc lods or inc imul leave mov sub or fbld push jae cmp (bad) lods pushf sub xchg pop pop dec (bad) mov jge mov cmc andl jb pop cmpsb sub incl xor mov push cmpsb and stos adc push inc pop push dec aad xor enter arpl sub dec je dec clc mov popa add jno sub cmpsb repnz cmp test mov mov xor fs in push fmull outsl ljmp fldenv mov (bad) inc mov (bad) lock dec (bad) call aad sbb add lahf or fcompl jns push shlb clc test lods inc inc push pushf jge jno pusha in jmp aas mov in or jbe js mov and orb pop push pop cli cmp jns mov mov pusha cmc cli dec les jns fdivrs mov push inc mov fmulp add pop setno popa sbb mov es and push mov mov mov jae mov mov add rcrb pop incl std pop mov lret or mov and out mov dec lds pushf (bad) cwtl mov mov jne ftst aas popf incb jg jl mov sub jb dec daa mov (bad) mov push rcr or xchg stc outsl or and pop lret jl xor dec and dec mov test sub mov (bad) dec and jg divl push sub dec nop xor add mov mov xchg sub fidivl idiv ret aas aaa fdivrs (bad) and and ss jl add scas sub pop or dec repnz pop or jb push mov ja mov cmc cwtl push (bad) mov mov mov scas mov icebp xlat mov shll test adc cmpsl repnz push (bad) bound xchg add dec xchg inc push loope push cmp ja mov pop es add aad std arpl shll push popf and insb jbe cmp adc sbb mul je in sub les repz lret inc in ljmp iret dec push xor aam jmp (bad) (bad) es sub dec dec and push push adc sub or cmp in cmpsb flds movb jmp ds in aaa scas dec enter sahf push pop dec push dec jo fisttpll icebp loopne jmp push add push imul cld out push out (bad) ss adc test inc cmc xchg mov imul inc jg jmp push into mov jg lret xchg xchg sbb imul fsub lock mov add xor aam push add aaa cmp mov in jnp mov aam mov cmp xchg lret mov stos dec int and jae cmp xchg ljmp aaa pop popf push sahf jl push mov and cmovo pushf add mov mov push xor mov ret into push mov fldenv sub cmc pop fwait mov fildll ret mov inc pop div xor in test adcb mov sub cmp or inc mov clc cmp aaa inc jge jns mov test jnp stc outsb aas test pop addr16 adc mov mov daa inc jl fcmovne aaa hlt mov sub popa pop mov pop add aam inc mov inc add or cmpsb pusha loope lea movsb sbb jge ret and jns push push lret aad inc imul sbb imul mov outsl xchg xchg and lret inc xchg gs mov outsb xor sbb jo stos push xchg pop test lods mov pop shlb les loop inc jecxz jl jb out fisttpl cmpsl jns xchg (bad) mov popa mov lcall jecxz push incb das pop add sarb sbb mov add and insl repnz sahf xchg xor leave pop lret lret adc mov xor mov rcrb rolb and sbb pusha aaa inc std imul pusha stc (bad) jns jmp mov inc and jmp incl add push into cmp stc xchg mov call cmp test aas jno iret enter sti sub cmc fnstsw sbb mov inc sbb mov fildll emms out mov arpl mov sbb cmp loop and sbb roll mov lahf lahf jae sbb dec aam scas mov adc add adc dec shrl pushf outsb dec jno faddl dec push adc mov enter fstpl adc mov js,pn std insl sahf xor test or mov ss popf aas pop cltd cli in sub sub test jbe scas scas dec faddl in out adc cmpsl add call jbe out insb in lods mov push cmp nop fdivrs dec bt xchg xor pop or popa inc pop sub fcomip mov cmp fnop or (bad) ja inc call xchg inc dec pop pop neg inc mov lcall mov pop out test dec mov mov (bad) mov rorb jo sbb sti jecxz jl cmp xchg and popf pop lods sub sbb shr lods outsl mov sti pop push lock insl cmp enter pop arpl lods inc xchg mov aaa sarl mov or cmp push dec lea or mov scas sarl daa jg push xchg push sbb (bad) and push inc (bad) mov mov ss xchg xor xchg imul cmc jmp xor jns into gs dec or adc lods iret decl and jl hlt cmpl mov sti jmp aam mov adc jge xchg std jns xchg xchg ljmp push sahf ret jbe jecxz sub pxor jns sbb dec mov stos insl and imul fistpl dec shr adc add sti mov popa mov cmpsb stc sub sub add mov jmp (bad) pop mov sti sub dec ret or mov aam clc out mov ficom jnp cwtl inc sub push cmp sbb nop pop sbb sbb leave mov cmp jno sarl adc (bad) fldcw inc loopne das jno imul cli xchg incb cli ficom inc lret cli dec icebp test adc stc push fidivr dec or hlt xchg gs sub in mov ret inc bound pop xchg lret es mov cmp push mov lock imul incl call mov inc test dec das or outsl inc cmc mov outsl add das xor dec sub mov outsl (bad) dec xchg jecxz ljmp sub cmpsb mov adc (bad) cmp mov outsl push movsb cmc loop push push gs cwtl push inc movl inc arpl jp ljmp mov jge rcr sbb xchg lods or pop call out xchg fmuls in movsl sub cmpsb aas std aad xor xchg mov (bad) int3 lods mov lret das aaa inc cmc mov inc and ret out scas pop movsb (bad) dec sbb out dec inc cmp mov incb fstpt lods mulb sbb mov inc mov hlt dec pop add push sbb sbb sbb flds aad xor scas mov lahf fist fnstenv inc data16 add inc test fldenv mov jne aas jge pop (bad) aaa and subl push int3 jmp jne vdivsd and cmp aaa lea mov out dec mov push mov push inc aad cltd cltd scas jmp clc dec jno xchg sub jbe dec fstps arpl dec sub mov or and stos repz cmc pop lods inc idivl clc popf outsl push mov push mov add (bad) jb push jg mov mov stos mov scas sub sub fisubr jbe pop and mov loop call cwtl push lods push cmp lret dec xchg xchg stos push and inc mov (bad) popf pop call insl jmp cmp mov push sub leave sub test scas popa mov adc fwait imul icebp xchg mov fdivr pop dec mov and xchg stos mov pop out shlb pop and lea adc mov test inc in loop shl fdivrs cli stos ja mov incb mov in mov mov and lods sub dec daa cltd daa mov into or jbe or (bad) shrl xor roll lret scas xor lea jge int push lds fs sbb outsb mov pushf jnp pop aaa sbb imul dec or mov jbe push aam jg ja ficomp repz xor in add push in jb mov sti std jmp mov flds movl stc inc (bad) sub inc sbb rcrl stos xchg push jg mov xor xor movsl cli cltd pop lods into mov data16 addr16 insb sbb lods add mov or out (bad) rclb fadd repnz mov es repz fdivrl out jbe pop pop outsl add or push or mov mov ljmp dec pop xor sub pusha inc add pop js jnp and add and sbb pop stos xchg fisttpl and fs push inc jg loope shl scas adc insb leave xchg aaa or lds js sub les out js mov ds or leave ret adc dec cmp mov mov into (bad) ss xor aad bound cmp insb es jg adc sub out inc or cmp adc mov xchg add jl cwtl mov push (bad) data16 jle aam les xchg inc or jp dec stc push add movsb aam jg mov jo pushf xor (bad) outsb das mov lret mov pop push xor sbb add repz ja daa push (bad) sub call movl (bad) xor iret mov cmpsl pop movsl insb pop fadds fsts popf addr16 imul jns pop add loopne outsl cmc movsb stos mov mov fimul iret xchg popf popa mov cmpsl jp mov cld and sbb adc test jge sbb add inc dec insl jbe into push xlat stos jp xlat aas mov loopne call and mov (bad) xor aad cmpsb or shlb jns out mov (bad) lahf mov xor and (bad) mov enter fwait xchg or or push xchg in int (bad) pop xchg inc loope faddl jge in push add and js adc push sbb inc lock mov shl fstps lock push cmp sub cmpl mov jno test cmp scas (bad) repz dec (bad) dec rcl jns popf push clc add mov adc leave je into cmp inc mulb insl push and mov push or mov leave in icebp call fs mov and push mov lcall imul add lds mov dec and fistl lods mov sub mov xor mov fidivl test test mov into mull leave add dec sub mov mov aad cmp insl lods mov mov cli gs mov test and lret adc xchg xchg jge enter mov jno mov loop icebp xchg cmp jge cmp (bad) and ss sub mov push pop icebp int3 sub aas ret cwtl pop decb pop daa data16 in not cld stos pop mov ret and cmp push mov or pop add out pusha movsl push or in addl gs pop mov mov testl cli (bad) repnz mov dec cld test in add rcrb xor loop,pt adc inc jnp push das push mov lea and fsubrl xchg inc jg ss ss cli lds xchg xor mov repnz cld mov inc aam std push sbb imul rcl xor mov lahf mov (bad) lods and negl (bad) movb dec scas sub or (bad) push jecxz lds mov mov add xchg scas es mov dec out push push rorl cmp add inc (bad) rorb mov mov js sub (bad) dec int3 add call icebp outsl cmp icebp aam movb popa iret sub sub sbb out cmp sbb push mov xor inc mov scas sbb (bad) gs xchg jb adc sbb inc cmp jne mov ljmp ja push mov jmp mov xchg aas pop mov inc cld jno and dec and or and cmp gs inc out add add sbb bound imul push hlt sbb xchg push in mov gs mov sti test adc dec insl pushf mov cmc popa cmp out mov mov out sub inc inc das jmp push divl mov into lahf lret stos lret fsubrs (bad) sbb in pop mov psllw ja add push popf inc mov (bad) and inc inc in xor movsl stos scas test out pop lahf aas (bad) out push lcall les push push and and clc sti lret mov mov insl inc cmp mov sahf movsl mov cmc bound shrl push xor inc and std push (bad) cmp inc stos push jmp dec fstps into (bad) test pop stos xchg sbb out dec sub rcrb dec or xor es ret test mov push xchg jns lret mov mov inc shlb inc call (bad) push mov aam in jge pop repnz aam dec lret jae mov aam and cmp test xor imul xchg rorl or xchg push or stc int roll in mov ss and cmp test test sub fiadd pop adc and lret adc and mov xor (bad) adc cltd je aam loopne xchg add sub adc pop sbb out clts inc ljmp stos cld mov sarb in push fwait test outsb inc adc adc shufps and or dec xor rol dec lods jle pop test hlt inc pop cmp push sbb push imul adc das out dec jo inc push lret enter (bad) sub in jns pop cmp scas stos jno (bad) aam rorl inc cwtl adc daa outsl mov lods jle inc push loope mov (bad) mov les push popf mov mov sub and or data16 mov sbb stos lea sarl push jno lds mov icebp mov sub jle xchg daa adc dec fsubr sbb sbb xchg push mov out xchg push stos sbb sub daa movsb std pop dec mov sub adc xchg mov mov lahf insb ret mov push out xlat sbb sbb pop fmul scas mov (bad) pop mov outsb lcall pusha push shrb pop jle jl lods fwait adc or lea xor sbbb ret mov mov cwtl add test mov fwait pop clc push push inc std and mov push shrb insl lds cmp cwtl in adc pop dec or adc xlat stc cmp mov ja movsl mov std clc jae jae push sub cmp insb ret arpl cmpsl (bad) hlt jmp mov nop inc jge icebp xchg rdmsr inc xor mov test jle cmc xchg rolb aad dec call outsb pop dec in leave cmp cmpsb sub orl mov push in sarl sahf popa ss jno test repnz and cmp sbb xchg mov es add add mov sub xchg imull or mov enter xor mov pop dec test dec gs mov add xor call das and xchg fistp notb inc mov push fcmovnu adc je mov push pusha push pop dec xchg mov addr16 out jge push rcr and rcl sti and subl inc pop mov add sbb jmp (bad) fld add mov mov in xchg aas adc mov lahf test ret push lea jbe jns xchg movsb cli (bad) sbb pushf imul push ljmp imul lea or popf sbb pop sbb lcall and repnz mov outsb (bad) incb xchg outsl cmp bound xchg sti mov add sbb sarb or ret int3 dec fisub lret mov inc dec jge or shrb jmp xor mov lock in inc out mov lea mov pop lods push pop adc adc cmp pop xchg xchg sbb fwait pop add pop (bad) in mov mov rol das (bad) leave jg cs fcomps and pop nop push xchg xor lret sbb cmpsb sub fsubs in mov test mov popf les xchg jnp das adcl xor fldcw les scas test add dec (bad) fsubr (bad) lods push ds lds jb jnp (bad) pop pop inc sbb jne ret repnz add dec mov inc mov adc push addr16 adc popf pop push test ljmp mov daa cmpl fildl pop push or (bad) clc scas sub ss aaa sarb aaa cmp out pop xor dec push daa inc pushf mov mov jae and pop xchg xchg jns out addr16 es mov mov cmp (bad) popa pop xchg in mov dec cmpsl inc pusha enter ror cmpsb pop xor jae xor inc fbstp mov sub push xchg pop pop sub scas and jle jge repz xchg int or and add mov adc pop mov incb jne sub clc jg jo and pop ljmp aad or pop dec sbb fistpll xchg mov nop inc cmp and pop in leave and sahf jg push mov lcall ljmp fs add (bad) js nop xchg or stos js jmp cmpsb leave sbb cmp incb les push push ljmp ficompl lcall leave cmc ret je (bad) adc mov sub ficom xor shlb dec inc lcall aas pop lea daa jg out loop mov push enter sub fwait (bad) adc jp mull insb test es leave and movsl xor sub sub mov (bad) mov inc xlat das xlat sbb ret adcl insl mov adc jno out inc cmp fstp out dec test mov shl dec pop adc and addl outsb mov dec test lret mov inc jo add pop ja push imul xchg xchg cmp or ljmp std cmpsb inc cmc ljmp pop cltd adc push outsl or scas lock pop jae xchg xchg lds jl adc mov repnz xchg test lods loope xchg scas dec test fsubrs setl ja jo dec mov pop pushf jecxz xchg lahf icebp ret push cmp lcall cmc int and xchg rolb std jno mov cmc pop pop adc shll inc aaa xor fdivr inc push das setne inc jne imul out sbb pop sahf (bad) xchg cmp sbb jns imul adc int pop xchg and pop push inc movb xor sub and test adc pop pop daa inc jnp outsl fldenv pusha movb push push incb jle adc add loopne into mov mov push xlat jnp loopne xchg push xchg insl (bad) sub and mov loop pop jnp cwtl cmpsl aas xor test add or xchg inc pop into lcall xor repz test lret sbb les push lods shll dec in add xor pop test sub pop leave and (bad) hlt lret pop add pop (bad) or push inc out mov dec (bad) mov lods dec rolb adc mov adc lcall lock ljmp adc cmp lods (bad) xor jne mov (bad) clc mov jno int3 jge jbe stos mov xchg fdivs test jae repnz and cmp cwtl daa jne xchg gs mov dec xchg js cmp jle mov xchg or pop add cli add xlat movl inc out mov movsb or (bad) enter test jp dec ss mov or push or sub loope dec dec in sti push std (bad) out add flds adc mov xchg mov fmul pop adc xchg iret xchg jae (bad) fwait rcll aaa push fxch fwait xchg sbb jns sti add sub dec sbb lods push loope sar adc sti push sahf cmp loope xlat pop cld in sub or push iret repnz cmp and rcrb lcall pushf adc add pushf add mov inc lock nop divb es js fs xor hlt jae fwait xchg cld js bound test popf jl js sahf cld divb xchg cmp movsl xchg leave jmp sahf pop aas ss (bad) int aad les adc cld ja add cli jo sub js and mov loope sbb xor jo dec mov push repz addr16 add or xor stos cmp sub lret jp (bad) scas xor dec xlat icebp sbb mov mov sub mov (bad) insb inc pop mov jp push roll scas inc call jns pusha or mov pop loop sbb fildl push inc pop dec cli or adc insb add xor loop mov mov out arpl fsts jns inc dec (bad) dec mov adc push daa nop notb fucom mov cli sti stc pop xchg or addr16 pop xchg es and sub lds or jmp movsb out sbb dec cmp fbstp daa jbe fstl push addr16 jp xchg inc js xchg cli and pop jae xchg push xor aaa inc push pop leave inc rolb loopne xor jg movsl adc out mov test sub pop cmpsb add push fdivl movsb imul adc dec adc inc pop sti ret adc outsl jge mov popa mov aaa incl addr16 aas (bad) jmp das fincstp push test js data16 inc cmp rcr sub out cmp sbb pop jge sbb or imul jmp lret out mov sarl push mov or inc out mov cmp push inc cmc jne std roll and (bad) fisubr mov test movsl inc stos sub insl xlat aas dec movsl test stc jno ds or data16 push call (bad) lods shl pop mov cmp outsl ret outsl pop in jae xchg pushl popa dec pop jmp dec rclb insb push inc (bad) pop add hlt pusha push in repnz (bad) (bad) js push sbb repz nop xor loop test lds adc inc jecxz dec (bad) adc pop outsb sbb mov cmp add push int3 aam or (bad) test jns pop icebp int push push fcomp xchg push sar lock ret mov int3 cmp or stos dec int3 mov xchg dec sti cs sbb loope lds mov loope sub and add inc (bad) dec push mov sbb out sub sbb mov xchg dec push lea mov and jae add popl inc push nop xchg xchg cmp mov inc sahf inc xor js dec stos xchg cld sbb ret xchg adc add add mov (bad) (bad) mov movsl push in adc stos lock jg xlat push enter mov jbe jnp fidivr dec out jg mov (bad) jecxz stos addr16 mov imul ret mov loopne xchg sub rcrb pop xchg in sarl adc push push divl pop (bad) scas cmp outsb cmp out cld jo adc push jnp mov and je push dec arpl inc dec jno lahf cmp pop aad jbe mov cld mov inc push jno lret mov jg out repnz int imul pushl push adc cltd lret mov cmpsl enter sbb fnstsw cmp mov ret fcmovnu dec jp lret andl std inc pop mov int3 arpl (bad) mov push jmp and adc fld add mov dec and xchg push inc jmp aad test stos xor xlat outsl mov (bad) lea in pusha mov fimull dec hlt addl sbb divb and adc sub inc jns out decb xor bound push stos jl arpl ret jae and cld sti (bad) mov push lahf pop and cs fs xchg fcoms sti in mov mov cwtl mov int (bad) jb loope test push stos out mov orl leave lahf outsb add push loope js push jp out repnz pusha and stc orl int dec cmpsb das fs xchg mov loope xchg int xor std into in repnz in mov sbb xchg nop fidiv jne pop cmp jo dec xchg sbb jns pusha dec imul pop into dec dec and lret lret jnp iret out xchg mov in xchg mov (bad) mov (bad) and sti popf sbb pop iret or negl inc push fs xchg mov gs cmpsb cs movd addr16 (bad) std sub loop cmp pushf adc data16 push cld ss test test fmuls xlat int cmpsl xchg pop es aad addr16 inc add pushf pop sub sbb lret loopne arpl cwtl leave outsl enter xor sbb inc jne loopne js cmpsb inc ds dec gs out gs add cmp xchg movsl mov test (bad) xor xor xchg inc call mov shlb cmp inc jne mov sbb pop outsb xchg mov cld xor adc std ret jmp fiaddl lahf xor mov leave dec (bad) ljmp clc sahf loopne add push out xchg push enter lcall in ss sub mov sub cli repnz ss inc icebp cli and add jecxz nop or cltd pusha in lcall call jns stos sbbb inc push push push js cltd xor stc out sbb jbe pop jnp push jle leave test ss negl sbb push or in in mov repz sbb movsl mov lcall repnz popf jge or inc in (bad) mov pop ss scas lret mov lods dec gs cwtl adc cmp orl fwait inc sbb fadd mov pusha mov movsb xchg cmp jo or repz push pop daa cld (bad) aas mov sbb or mov mov pop ret jbe cmpsl or enter lods aam dec jno pop mov or xchg jecxz cmp lods xchg fs jmp cmp pop add jl xor fcompl out fsubrs sub push pushf push test scas mov mov sub and inc push cltd adc and in xchg xchg outsl add push aad jecxz and mov int sbb pop sbb mov push loope aam or xorb mov js sbb adc and and pop (bad) ds mov mov dec sbb jne mov loope cmp fmuls jge sub dec inc jb (bad) and (bad) aad inc ss mov lods mov loopne fdiv push cmp rcr sub fsts repnz ljmp (bad) dec out stc (bad) sbb lret mov mov and jnp fcoms (bad) insb stos (bad) in mov repz (bad) sarb fstpt xor mov jl dec js xor rcll ret pop mov mov add js addr16 inc gs dec js push inc add ret jge and jecxz add push xchg cmp xor aam int3 or xchg js dec in sti adc repnz rorl cld mov mov mov loope loop dec jbe sbb out aam cmpsb imul (bad) push int lret loopne loop jg xlat popf mulb or jg stos test jle call sub enter pop ror xchg lret fldcw lds add pop mov in icebp mov imul in cld aaa xor jns addr16 loopne cmp fsubrl jbe sbb gs sub icebp iret jge mov or loope leave push mov sbb jae mov lock sahf insl into shlb fiadd or je les jnp cwtl (bad) stos sbb lods je mov adc cmp xchg xor pop or cs andl adc pop or gs ret xlat xchg mov shr es repz mov cmp xchg (bad) fdivl imul sub xchg stc adc or aad push and out arpl dec jl rcrl or mov sub sbb and rcrb stos aam stos jecxz incb sbb cli fisttpl loope iret repz jbe bound out stc iret fwait test insb (bad) dec sbb add loopne notb mov scas dec push (bad) lods aam dec dec orps mov inc enter negb daa add inc (bad) scas push dec sbb (bad) xchg addl lds jg cmpb mov enter cmp push xor and jbe imul xchg inc (bad) xlat sub cli and les rolb lcall mov fnstenv add and daa jae sub dec das outsb fs shrb xchg push inc or mov push stos inc mov roll mov xor cli rcl out xchg popa jp jle ja jo add mov xor jne adc fwait in jne (bad) push notl mov jns,pt out add mov xchg test ret pop lods leave inc cs dec mov mov cs inc lea addr16 fist sub ret loop insl push push xor imul sub add sub orl jns xor arpl pusha sbb mov xor ret js scas ret jmp mov add inc dec inc pop sbb fadd bound xor mov xchg add mov (bad) or inc into cmpsb mov sub (bad) mov gs dec push pop mov and sub outsl das mov push inc out adcb inc mov out (bad) mov xchg jle and sub jl fadds into sub dec mov mov dec adc dec enter push mov sahf mov push sbb cmp mov or jae cmp aaa add sti clc dec aaa sahf push push imul or inc (bad) mov dec mov jge add pop inc cli jae divl sarb loope test into mov shr test pop out pop fsubr out cmc push pop sbb jne scas shll push mov insl jl pop iret push lock push dec pop add (bad) adc jns insb sarb push mov scas sahf sub lock (bad) cmp and pavgb jo or clc adc imul xchg mov cwtl and xor push pusha popl (bad) loope fwait sahf insb jmp aam cwtl mov mov mov pusha ret lret xor xorl outsb sub push cli jmp out pop jg and aam ret ret jle inc and add jecxz ljmp cmp (bad) dec xor inc in jmp sub push push mov and xchg sbb sbb movsl push nop int mov mov lds xchg cmp inc xor sub dec jg sub adc cmp lret or add dec cmp mov xchg mov mov xor scas add add push sarb in insl fbld mov xor adc (bad) xchg or int3 (bad) push cmp xchg nop sbb jnp ljmp mov lods mov popf test ret fldl jo cmp xchg push push test inc adc cmp mov sub mov (bad) nop jge dec popa (bad) push ja (bad) cs ljmp dec add mov push addr16 test fwait insl fisubr ja jl repz dec nop mov adc push aaa leave cmpsb aaa xor repnz cld gs loope lret ja std xchg inc xchg popa pusha lods mov mov mov or push je cmpsb cmp pop pop repz repnz adc mov mov (bad) mov fs and and jbe sbb loopne xor xchg int xchg (bad) repz cmp inc ds pop cmp js sbbl es xchg push cwtl cmp es push das push or cs dec xchg ja lret movsb mov inc inc push enter out cmc push mov js dec insl push mov mov mov dec push ror mov scas call cmc in jo mov js repnz lcall daa mov je rorb and xlat subl mov clc stc dec daa jae fmull add push aad jo and cli pop fiaddl sbbb rol xchg push jne jbe push (bad) dec (bad) xchg dec jno scas enter int ljmp jae (bad) xor xchg cld repnz fbld test loope mov hlt pop add and mov mov push sub or or inc sbb fs ret pop mov test les or xor ss push mov sbb inc or dec jmp ja aad or dec add xchg nop push loopne subl (bad) lock (bad) jne push into cmp js repnz jo push aas sub mov sbb xchg jbe mov loope mov nop arpl pop sub inc xor (bad) in dec fsubr aam jg mov dec sub fstp mov push mul (bad) movsl dec mov bound ss dec rcrl inc pop aas std dec imul pop sub paddb pop adc sub cwtl sbb popa xchg or push stc repz push mul cmp mov mov sub (bad) aad (bad) mov pop add jmp adc xlat push ficompl dec inc mov and cwtl sbb mov adc and jle mov out aam loopne shll mov jmp sub push push push and pop adc mov sub cmpsl insb sub hlt nop mov mov shll scas jno or nop adc mulb jnp je pop push mov inc (bad) push sub sub mov add repz fisttpll (bad) mov and mov and stos jmp jo sbbb mov cwtl and pop movsl in std je dec add inc jnp jle cs mov (bad) mov fadds out dec and mov scas inc imul and test fsubrp or scas hlt int3 mov outsl fiadd xchg mov mov push cmp sbb sbb rol pop sub outsb push pop es xchg int3 rcll int mov cmc (bad) sub stc or dec dec fwait pushf mov cmp xchg cvtdq2ps jp dec mov fidivrl adcb ss insb lea jmp mov xchg dec sub pop mov dec bound (bad) sbb mov lahf aaa mov xor bound movaps outsl pop jo add pop mov das cmp pop or push (bad) push out inc push popf in sbb jns ss pop call dec mov leave xchg jg pop push inc dec sbb jecxz inc pop mov sti dec jmp cwtl es shrb rorl loop lcall sub xchg iret push mov and ljmp sbb lds pusha xchg xor mov push xchg xor xchg pop add in xlat pop mov inc stc into xlat aas add into cltd sbb es jno test gs test mov push pusha iret inc add or push das jbe pop push sbb int dec jle fild ror pop sbb sub inc jp fsubl mov and scas loope adc inc and les fstpt data16 scas sub adc in addb leave aam mov cwtl cmp cmp int3 sub mov lret fs xor jns pop loopne cld hlt testb sti inc xchg insb adc push lret cmp cltd sbb lcall cmp add xchg sub adc out cmp xor call mov jne adc pop adc add dec mov adcl sbb pop jge mov std mov push pop adc dec in sub es adc adc rorl mov or sbb fimull jns fsubl xchg hlt dec xchg push lret or (bad) imul cmpsb and icebp adc mov test mov add sub ja sarl and sub icebp stc jg inc or popf adc loope push (bad) shrl sbb adc andl adc sahf js fsts jns add jb cmp je roll aad insl insb fsincos fs fxch in lret cmp fnstsw pop or jle jecxz mov in scas dec pop jbe stc imul sub fdivl jne repnz movl adc sbb (bad) xor push mov lods mov pop cwtl cmpsb aas mov icebp inc insb mov push xchg xor out pop arpl gs jecxz lods in movsb sub jg sbb ljmp jl ficomp mov inc (bad) jle dec xchg add and pop cmp movsb daa outsb inc outsb bound pop orl jg push pop inc es lcall push prefetchw push jnp inc add xchg movb das pop mov loop cmp mov xor enter pop (bad) lock xor cmp imul dec js xchg jno dec aam inc lcall (bad) jne sbbl das push xlat or movsb mov in mov jo lock mov jg push sub sbb ljmp xor jo cltd aad pop cmp pop (bad) pop sub mov xchg jae inc mov out fs (bad) mov lahf in push lods aam jl mov pop jle sbb cmp pop scas xchg fdivs aas push sahf aad pop sub dec cmp xchg mov add mov fisubrl or andl data16 jnp scas jmp cmp jge xor call and lcall jmp push fildl sbb ds xor pop pusha ljmp (bad) xchg movsl fistl and jno sbb add mov add pop imul out or push orl or addr16 test sub fdivs push das pushf lret bound pop or subl sub stos (bad) and and test das jmp push jl jne add mov dec mov outsl sub fwait bound inc xchg cld aad sub add les cmc lods fnstsw pop sub mov sarl xor pop jp add xor pop nop adc mov js mov xor inc into jno pop in xlat or popf bound fidivrl jge xchg js jmp mov adc mov push sahf dec (bad) call inc push fisttpll or dec mov lret cmp jae or test mov sub jle int3 cmp fwait scas adc adc movsb sub popa add out movsl out mull inc (bad) mov adc aas mov pop pusha push les test sti movb mov clc js or mov jl idivl pop in (bad) aam inc lods adc mov push fs cld sbbl jne out es cmp popf loopne inc inc test sbb ret dec pop ljmp das mov int3 jo inc pop test xchg cmp pop insb adc hlt mov js lea xor test mov shrb mov push aaa mov and cmp xchg fdivrl xchg mov loop sbb daa and lahf scas enter aas les (bad) sti push in notl test enter push fcoms and lods xchg (bad) mov sub mov pop movsl adc adc cmp xchg push leave les in int3 icebp push sarl jae fsubs push cmc mov lods pop mov xchg (bad) rcr sbb jg push mov pop pop (bad) repz ss daa adc xchg repz into mov aaa pushf add je rcrl mov bound mov xchg jp (bad) jge dec mov iret scas jp xchg fstpl inc xchg or mov fwait jecxz adc cs ficompl mov dec cli mov push push xchg dec add push pop mov jl cmp adc out (bad) dec repnz xchg xchg pop aas dec ret adc in rorb cmpsw ljmp ret lock mov xchg add enter xchg ficom (bad) and ret jo lret push sbb xchg aas push or arpl xchg insb popf push cld pop mov mov fldt push xor fwait jecxz pop mov sbb mov jp fs jmp stc ret pop jns xchg pop (bad) sbb push in ret fimul lret (bad) loope and hlt cmp xchg call cmp (bad) xchg push sti sarl (bad) jo xchg fbstp pop lret mov push imul sub push adcb mov jae enter icebp loopne data16 jmp cmp arpl cmc cmp stos push lcall dec mov lahf push repz ss ret lret adc outsb call sub push lods push cmpsl aam cwtl push cmp nop push iret sub dec sub mov shlb out pop shlb fisubrl negb sbb pop dec xchg out pop iret xor dec jle push sbb fcoml jle (bad) xor enter js push inc mov lret push loop push xchg mov leave ja mov fdivr or pop pop mov addr16 ret pop xchg sahf inc (bad) adc sbb jne sub out adc div mov xor (bad) sbb (bad) push mov outsb dec int sbb pop xchg int3 fptan xor scas mov inc mov int mov jns les cmp xchg dec fild xchg scas add rcrl dec push cltd std repnz imul dec in mull and pop mov inc scas fwait in negl int ror cmp or out or jns pop mov dec leave faddl xor ds inc pop jmp mov pop pop mov lahf mov inc inc outsl int3 imul jb cmp push inc lahf mov and out jnp loope push arpl out sbb out dec sub (bad) push dec pushf jo push xlat decb inc out (bad) push mov das dec out push jmp sbb fist xor lods cmc (bad) sub mov push ljmp je out pop cmc jae mov pop mov jno dec jne popa nop or pop adc cmp xchg fisttpl pop inc mov ficoml push jle out mov dec jp mov jl cmp outsl sahf push push cmp mov je inc mov sbb inc mov popa mov sub inc xchg mov scas jae or cmp add mov mov (bad) xor cmc mov sbb mov mov loopne xor push fimull jno or les adc adc mov mov xchg mov jle subl pop je (bad) sahf icebp jne dec xor cmp mov or lret mov (bad) lock mov dec shl push jbe or cs lcall in iret jmp sbb cli cs push enter int3 gs (bad) xchg xor push add sarl mov fisub sub aam or add push mov repz jne xchg mov mov les and inc ljmp xadd mov lea scas test out loope pop add lods aas fst idivl loopne imul cmp mov adc cmp out cmpsb std add pop dec add adc jecxz and sbb xor mov pop scas or rolb push mov inc jb out xchg imul inc aaa jbe mov inc mov lcall test rcl xor popa pop mov scas mov (bad) pop mov dec pop mov leavew xchg subb add lock add dec mov (bad) jbe test rclb xchg adc test jne mov xor jne stc xor or mov xchg pop stos pop movsb lock push push std inc sub and (bad) icebp call xor jae jns vmovss inc sti lea adc (bad) insb (bad) sbb cmpsl aaa inc or or sahf jg lea push out pop mov scas clc lahf ja pop mov fs test clc push dec pop jmp pop movb adc xorl lcall out xchg adc jp movsb mov mov push xchg and jns negb adc addr16 sub xchg test lods pop sub loop pop push xchg imul in js xlat cmpsl test orb fsts or mov out cmp jno faddp mov pcmpgtd mov xor cltd out mov mov jae iret loopne hlt addr16 repnz loopne xchg loop les lods fnstcw sbb dec stos andl sub rorl inc fistp out jnp jne push cmp push stc or inc dec int3 push lcall sbb dec jle faddl dec and mov je xchg inc loop test push dec sbb in jnp add sub lock sbb bound roll rcrl sub call int3 inc je (bad) push dec inc call mov xchg scas gs dec insb imul jbe mov pop mov sub mov jmp push inc sbbl rcr fistp inc jnp nop pop mov loopne jae lcall (bad) lcall popf cli aam cwtl inc int lea sub xchg rol push xor and movsl les xor dec push stos jl fild push fisubl cmpl jnp cmp push sub jne pop dec fs or rorl push les xchg lods mov pop jg add loop repnz repnz xchg aas xlat push xchg push or mov ja mov mov imul bound pushf and cwtl test cmp aam bound xchg out stos (bad) and ds jmp repnz sbb mov out (bad) into dec loop push loopne dec mov jne adc leave mov call xchg out idiv lds xchg pop lretw mov (bad) mov clc jo (bad) cwtl ret pop sbbb mov mov jnp dec fadd pop pop mov dec push pop push sub xchg test dec push jmp test pop pop les fcmovu dec sar sbb cmp out mov push js gs out mov sub sbb pop xchg mov je adc adc pop sbb push pushf loopne sub xchg je inc push pop fs jp and dec dec mov push mov ds lret cltd ds fcomps cltd lods push inc mov pop xchg pusha jge rol mov outsb out or or and mov sub add je sub negb sbb pop rcr aad sbb mov xchg push rcr roll ja inc scas push orl test mov lods mov in loopne (bad) mov dec leave lret xchg out cs (bad) pop loope push scas inc out scas das and in push sub jbe fdivr mov push lods push mov sub movsl jmp jbe xor rcrl sbb jo add jbe jns lahf dec add out test std push repz jns add push cmp push xor fldenv pop imul lds adc ret mov or stos (bad) jo movsl sub popa xchg or js out pushf pop mov mov xor jp loopne mov (bad) add cltd mov dec insb sub scas mov aaa adc push sbb fs stos or pop cltd xchg pop jb add divl push push add push (bad) mov pop lret or mov mov xlat jnp and sub loopne (bad) jle xor (bad) pop adc adc push mov jle mov sub sahf sarb mov into iret mov sbb adc cmc push cmp (bad) out mov pop aaa (bad) repnz push add nop pop adc inc push rclb xor jecxz rclb xchg or add bound ss dec mov sbb bound fimull loopne imull adc mov leave stos fildl xor jnp or es sbb cli cwtl repz inc cmp mov sub jo test dec out inc sbb lea sbb sbb mov fist roll ror push mov push adc dec faddp dec dec mov cmc loopne mov daa add insl pop inc push mov fwait cmp pushf xor ror cmp pusha cli xlat and dec cld or lods jmp or mov push aam adc sbb mov or mov inc push push int3 fwait mov leave jbe jno pop enter jmp inc xor add mov test in out and mov dec cmp mov lcall jle mov adc push repnz mov mov es fcoml fstpt es jge sub sti jecxz mov ret add sbb mov mov scas arpl adc lods iret psadbw xor (bad) xor sahf je pop scas adc (bad) imul ror dec cmc or es xor (bad) jnp xor lret insl pop push iret (bad) sub cmp mov xor add mov adc loop loope cmp call jmp pusha (bad) stos push popf fstpl aam lret lds lods push pop sbb inc in jge mov nop mov in sbb (bad) adc mov gs cmp xor and mov adc adc adc lahf mov or pusha fwait mov inc mov lock shrl (bad) fwait scas stos dec stc in leave pop test (bad) mov repnz daa push mov sahf mov stos xchg push push mov lods xorb jle js in inc (bad) dec pop rolb mov arpl iret leave ja lods adc aam shrl aam add out sub cli xchg inc (bad) adc into xchg aam lea mov icebp mov aam call dec add (bad) mov insl arpl add shrl int and dec mov jns stc xchg adc scas add js ljmp fbld mov or mov cltd imul loop xchg fisttpll lret jo or clc imul dec test add lea cmp jne sub cmc and or mov shrb pop mov int3 lret je addr16 cltd inc sub (bad) mov dec popa hlt lcall lahf or xor jb inc ret ljmp js cmc add pushf fnstenv mov dec xchg xcrypt-ecb cmpsl dec pushf xchg mov (bad) stos dec gs add pop adc push jmp sub popf sbb jo in and jbe cs hlt lea fucom lea setb inc push cmp in fndisi(8087 in sbb cmp outsb rolb and leave dec xor jecxz push mov fadds xchg mov movsl ret push (bad) mov dec xchg neg out sbb cwtl sbb inc mov mov je sub stc popl mov xchg xchg mov push mov push gs or or flds sbb dec stos rolb ret mov inc in sub jmp clc pop outsl das inc cmpb sbb test and or xchg aaa test xchg adc lods addps add es aad mov sub inc incb dec jo pop jno pop scas sbb sbb and mov shll or mov rol stc add mov cmp cmpsl int3 dec mov psadbw or xor jp xchg popf jbe xchg xor inc push idivb or inc stos mov xchg lock out js das hlt repz aad ss aaa iret and lods inc adc icebp push (bad) into out cmp mov shrb mov fdivp jmp inc cmpsl adc insl out lods aad mov mov (bad) int test mov clc cmp jmp adc cmpsl push inc mov in push xor lahf js and mov mov push hlt outsb mov mov xor cmp sub imul and xor lret mov movsl leave and mov roll daa jle mov rorb and rorl push ret sub push xor mov shl in xchg cmpsb ds dec pop xchg sarl adc lahf rolb mov icebp push cld xorl add cltd ss adc cmp and pop das pop int bound out pop push pop add add and fwait sahf mov scas fwait scas call xchg cld idivl adc xchg push mov adc sub and cmpsl add xchg fidivrl jbe movntps or (bad) rcr loop jne add stc or test leave (bad) cmpsl das mov pop jmp jbe ret out sbb adc mov or mov inc shrb inc ss cmc daa add adc mov and (bad) pop loope mov mov sbb cmc shld mov aad sub ja inc push mov push pushf inc pop pusha les dec mov push lock cmp push push add push mov mov inc and mov popf aaa adc mov pushf xor sbb pop dec (bad) or mov add dec stos cld sahf int aaa mov mov mov xor (bad) mov push cld pop fbstp cmpsl out cld sbb sub stos push sub mov stos iret inc sub stos lret shrb out mov sub pop orl lds popf in lea inc pusha or pop mov rcrl push mov mov mov ret xor loope mov ret fiadd mov xor pop es daa add jae xchg pop imul dec or jo pop mov pop push imul mov mov sub xchg (bad) pop pop fidiv cmp inc aas sahf mov adc ret imul test outsl xchg xchg nop xor mov add jns mov fldcw adc lods mov mov sbb mov in adc inc les mov cmpsb popf jae insb and fstpl mov sbb popa push push ds fidivrl int3 out lahf or pop jp mov pop gs mov call rcrb fistpll stos neg pop jb xchg lret jns jae or ret or cwtl push mov imul ss sbb loop call imul cs in out jo movsb icebp lret scas lcall jae rcrl cmc push or and push sub or imul mov push adcl icebp jno mov das or adc test xchg push push mov dec add cltd insb inc ds sbb push xor shll ss lods (bad) jmp sbb movsb (bad) movsb scas adc xor movsl xor aas mov repnz outsl add bound mov xchg xor lret add fstpt lock xor mov scas out jnp add inc mov push ja sbb ljmp (bad) xor push ret dec cmpsl mov sahf cmpsb outsl imul cs lfs out orl dec rep rcrl sub (bad) leave sarl adc pop pop in jnp xchg test rorb rorb adc xlat sub pop fstps lds int3 out jmp mov loope jp push hlt jmp fnsave daa sub xorl fisubr xor xchg xchg pop inc aad mov (bad) pusha (bad) mov (bad) cld adc and xchg inc rcr mov aam fcoml fs sbb pop loopne int xchg dec or and cmp stos subb cli adc lods (bad) (bad) fs add mov xchg mov pop adc adc cmpsb ret cld test or or mov mov jle repnz inc and jae test rcr push sub insb mov icebp adc jge jmp int (bad) in aad scas push daa lahf stos sub xor js enter lret pop out cs or mov jge (bad) mov or ret push mov sbb lahf outsb mov iret cmpsl lea outsb pusha test add and mov sbb imul dec cwtl or inc dec je pop (bad) ja mov decl jmp push out lret cmpb push sub mov add test push arpl daa mov jo lds sbb or push lcall lock and repnz push xchg jb jmp adc in sub mov stos rcl ret mov mov addr16 sub push ficoml ficoml mov lcall mov js lret pop shll adc mov aas mov mov mov sub mov push mov nopl jg jecxz dec icebp inc test fdivrs sub mov push call imul cmpl (bad) add pushf leave mov aam dec std cmpsb cmp push into fcmovnb inc sub stc (bad) loop inc push jge jmp inc dec jnp ds jbe in xor fisub test loop in sbb adc push add int jb cmpsl into push dec cltd test and xchg push in xchg adc mov cmpsl inc lods fsubp add sbb jecxz inc mov ja je dec cmp loopne mov int xor sbb lcall leave push daa xor ret push std bound lds shll int jae rcl cmpsl mov adc cli lods test xchg mov cmpsb pushf add xlat in mov sarb push and aam jp mov popf adc (bad) lock jp push mov xor or xchg mov scas push push add outsb or fistl push dec sub inc add mov in pop sahf in shrw imul fiadd test xchg push push scas mov call mov out in lret dec push add sarl pop mov sub xchg aaa das dec aad stos jle cmp push sub shrb sbb and xor (bad) push xor out mov (bad) push divb push pop lds (bad) xor jmp xchg js adc andb mov loop pushf sub xchg addl adc mov jb loope mov rcrl into mov xor sbb pop ret out movsl inc or lcall dec cmp outsl iret idivl cmp mov pop loopne cmp dec stos sub scas lock lahf sbb out js aas and inc mov mov (bad) sub pop xlat sarl loop mov fs sti xor jb push imul ror jns xchg int mov scas jns fwait xchg repnz orb shrl cmpsb cmp arpl pushf (bad) cld or repnz mov into cmp xchg repnz mov push cmc cs and (bad) stos sub js fucomip add mov push adc add rclb ficompl adc mov add and je idivb dec outsl rcll (bad) roll ja jmp inc leave aaa mov aaa jb jae dec call out push and nop add aas add out out push ror add (bad) push sbb (bad) mov dec loop outsb sub pop aas stos lahf xchg shr out movsl fisttpl xchg popa ret iret mov inc mov xchg lret adc push movsl test int3 mov inc jbe pop loope lret lods mov pushw and mov xchg repz icebp cli pop adc jne es jnp rol les sbb adc push in in outsl call mov out repnz mov cld jg in int3 dec testb mov mov jb mov hlt fs cltd cmp or jle nop or std xchg fwait mov cmp jnp ds iret xor lahf mov jg adcl andb out mov mov sub call xor sub pop mov push mov in fsts sahf hlt xchg test faddl pop popf jae and aas cmp jecxz pop jecxz xchg sub in pop sub push cld loop fdivl pop cs into pushf (bad) pop jne mov pop out and and inc push xor in fs jl adc fwait hlt stos movsl or push cs cmp (bad) jl out mov push or sbb adc jl and push xor adc sbb out lock jg jne cmpsl nop cmp iret mov mul xchg or sub scas or sub or or fmuls std sysexit pushf aas gs xchg hlt pusha mov add fisttpll cmp sub xchg sub es xchg sub xchg mov pop or add sub or lods lock fisub cmp movsl cmpsl (bad) lds je stos add jb dec negl in data16 and (bad) (bad) call roll mov xchg movb cmp insb (bad) sub pop aad dec mov mov inc push add sub inc icebp data16 or pop adc cmp mov jl xor icebp mov jnp xor lods fwait in mov int mov jbe test xor jb pop push arpl xor dec enter sub sbb xchg jnp nop hlt mov xchg ss adc iret orl pushf add fisubr dec int lods lahf fwait adcl fdivrl movsl out mov push or cmpsb push inc pop lea mov jg dec cmp mov jno lahf jae mov sub inc pushf call jp addr16 in call cltd xor icebp daa mov into push out scas in add cmpsl cmc mov jle shrb jne fwait and mov xchg aad jecxz mov pop sbb jne imul mov xlat loop mov cmpsl ds cltd lods pop pop push inc pop stos int3 mov and push inc jbe or (bad) or and or outsb aaa dec cmpsb dec xchg mov cmp push fisttp lds push jecxz test (bad) sbb xor cmp gs dec jg mov mov loopne bound adc pop push or adc dec xchg sub mov or jb je mov sub cmc sti fcomp fisubr jl xlat xor lds lods fidiv sub add gs jnp es fisttpl cmp je (bad) push mov or (bad) cmpsb mov out jmp or clc int3 scas push push daa xchg jb cmpsb lret in xchg dec inc push ljmp mov fcomps push mov data16 push mov fldenv lea cmp repz ss test in and cmpsl mov xchg or dec inc fwait xchg and or daa std push mov addr16 cltd (bad) repnz mov pop sub and push mov add or xchg loop xor js (bad) mov dec (bad) (bad) lahf fildll subl pop outsb sub rolb mov into xchg mov mov std mov popa cli mov outsl inc outsb hlt popa add jle leave pop cmpsb inc xlat push lods (bad) lock ljmp cmp xor sub cmc mov mov inc cmpsb movsl xchg movsl xchg push push or jns shlb fdivs adc ret or and mov push pusha cmp push fnsave add push sbb loop pop test mov and jns cs cltd aam mov mov sub into int3 out iret jae add push mov sub (bad) jge pusha mov push testb in aad jne mov ret das into aas cmp arpl pusha jg xchg xchg jnp faddl mov in scas adc and scas int cmp mov inc mov mov push movsl xchg jno fwait sarb xchg (bad) dec sub pop ficom leave mov jnp movb and sbb lcall sarl mov hlt inc inc or ret jmp pop ljmp scas leave or inc ret cmp dec xchg loope loopne mov adc jmp xchg (bad) cs mov or daa popf push sub lock in loope imul lcall imulb int mov push (bad) cmpsb in sub push loop xchg es jmp fs pop jo jbe dec pushl pop pop xchg test lea adc mov add popa shrl sub fildll (bad) sahf cmpsl clc out pop insw hlt or adc inc lds cld inc jo jb inc mov pop cmpsl in enter insl xchg xchg and inc sub dec dec pusha int3 or ret jg mov push and (bad) out (bad) cmc adc xor push adc add ret lds jno out pop lcall addr16 les pop pop pop mov jmp mov fcoml scas xchg mov fisttp cmp and adc repnz jns movsb jns xchg (bad) imul aam xor cmp xchg cmp in mov imul mov xchg pop cs mov push mov sbb add dec lret outsb pop xchg jnp scas mov test lods push push pop out (bad) mov insl mov cmpsl (bad) jle jp rcrb jbe jns pop idiv repnz hlt mov arpl cmp sub inc fcom cmp pop jo xor mov dec test inc dec mov (bad) loope orl xor mov mov cmp push pushf orl pop jmp fsubrs mov mov push lcall test movsb push mov adc mov pop dec dec fwait and jmp push dec and xchg xchg fwait xor icebp sub and mov add aad aaa leave es pop lahf push push dec lods sub sbb inc int test fisttpl mov popf mov or daa les or rcrl xor inc lret in push jnp (bad) mov data16 fmull mov pop and mov out test inc sar pop and xor pop or mov mov add xchg xchg ja ja scas cmpl (bad) cmp into scas jle int3 xor cmp add lods into std mov repnz mov jg out roll arpl (bad) mov mov mov (bad) test adc inc cwtl arpl test jnp add imul sti imul adcb sub jne insl add orl jg jne and and mov or push mov repz pop lahf adcl lcall inc push xor push test inc or (bad) dec add ret cmp push mov sti mov xlat jge sbb dec push and pavgb jp insb nop lods pop cmpsb sbbl rclb das xchg pop mull pop cmc lret push or ds jno das cmp aam sahf sbb jne insb call cwtl mov sub movaps inc (bad) or stos add add push xchg push mov adcb das push mov popf (bad) cs pop cmp iret push scas pop (bad) shrb adc pop inc dec and test xor push fs or lock xchg js cmpb call or cwtl fwait sahf lcall xchg insb xor mov js jl in clc inc push mov mov test int push xchg inc push test pop daa or call push aas lahf lahf clc test test pop cwtl out into mov or xchg push pusha in push das pop dec mov push (bad) repnz frstor jl out rcrb sub cmp int in es mov lcall push out mov push xor sbb test int3 xchg pop mov rclb lcall jmp push add mov insb dec shrl adc mov cmpl leave push mov pop (bad) cld mov dec mov fstl dec lds dec ret fdivs out stos cmp stc stc dec in aam inc mov popf ds xchg aaa add ss movsb sbb xchg movsl sub mov cli sub movsb or mov jp and data16 (bad) pop testl jecxz ja or es idivl xor or fsubr jecxz pop xor push cmp cmp or cmpl mov aaa xchg inc lahf dec stos std imulb jns and mov jnp scas lds cmc in jmp testl sbb (bad) xchg popa in xchg es ja push gs dec mov pop sub aam addl dec icebp repz mov fcomps outsb dec jo cmp mov jle out mov jmp adc stc push or loopne pop (bad) dec das cld lret (bad) cmp (bad) stc imul cmp adc insb test mov cmp inc negb xor xchg mov jge (bad) shll lret (bad) mov imul lods lret repnz dec repz adc mov lds add repz dec in sub cmc fnstenv lds (bad) jmp js add xchg les mov daa fstl (bad) in sub mov cwtl sub inc xchg adc or je hlt pop ficoml sub loope pushf mov loope adc jl dec nop pop fist add pop paddq pop ret (bad) test int or jge int (bad) out xchg daa scas xchg aam lods hlt inc mov rcll mov mov repnz fstpt or sbb scas xchg inc xchg and pusha and ds sub inc sub js sub lret lds lahf iret jmp fwait inc das push loop ds pushf repnz push xorb dec popf sbb xor leave add stos pop cmp pop movsb test sub mov (bad) sarb dec inc dec and cmpsb mov js outsl clc push movsb in (bad) aam jle fdivrl ret push sub cmp fnsave sbb mov aam in je fcomip lods sbb nop add push (bad) cmp pop mov cmpl push cltd jle pushf mov (bad) cs insb sub ja leave or pop adc mov sub sbb pushl je fimull sub add aam je es pushf pop pop fstps cvttps2pi or adcl jns adc mov inc mov lret or (bad) jno xchg pusha dec inc sbb (bad) icebp inc (bad) out bound mov push das in cmp (bad) fcoml (bad) adc test adc adc (bad) roll imul and int3 ljmp repnz pop pop cld sbb xchg dec shll inc or xchg in add outsb add ret addr16 loope into cs dec mov mov xchg push out push mov add inc test jg push lret clc mov dec fisubr pop andb test enter pop mov in and push in out mov jbe repz (bad) fdivr or sbb and jle loope cmp pop in adc dec push add mov test adc arpl aaa push jb inc ljmp sub cld mov hlt jl push pushf out inc stos (bad) sarb sbb movsl sub movsb dec adc loope xor push inc sub (bad) subl dec fldenv adc imulb mov lret jmp arpl pop shlb incb in cwtl mov out xchg mov popf mov xchg (bad) imull ds enter cmpsl sbb inc sarl cmpsl pop pop dec mov pop out popa shrb mov lock sub mov inc pop sarl mov xchg and movsb inc (bad) cmpl imul sbbl xchg inc movb inc test pop rclb leave arpl in dec hlt cld inc lcall movsl sbb out add loope negl pop jno xor jae mov xor xchg daa inc jg repz pop jne sub push iret mov dec stos lret (bad) ja rcll orl into shll xor aam inc dec test jno int lcall stos (bad) cmc push mov xchg cmp adc (bad) lret sub xor add xchg add xchg je lret movsl xor test jne imul mov mov pop sbb insb btc lahf or push addr16 test (bad) out imulb or hlt cwtl sbb in xchg lea pop xchg lcall adc push push lret or out dec dec repz pop ljmp lret ds adc lods sti mov xor inc fwait ja (bad) and lret addr16 in cmp scas aas lds adc mov sbb cmc xchg push push xlat pop sub insl dec add repz (bad) (bad) movsb negb mov (bad) js popl add repz jge sbb xchg adc inc lahf push shrl dec jae sti or pop mov (bad) andl pop mov pop je sub jl mov mov nop add pop lret sahf cld or push sbb int3 addr16 mov and enter sti pop mov inc ret fcom jbe scas outsl ljmp mov xor dec test int adc fstps pop lods sbb not scas push adc dec stc sarl dec lret mov sbb in jne jb inc lret mov adc mov lahf out add ss (bad) (bad) jg hlt sbb jnp int shrl dec cmpl dec lahf mov jo mov cmp lahf or sub adc int dec fwait (bad) loop fs fld stos dec lret cltd mov je (bad) mov in sub leave (bad) xchg inc js cltd pop repz in gs jl fmull lods sbb sbb (bad) mov mov (bad) test cltd push push lahf adc cmp outsl test xchg popa push mov jno xor int3 loop fsubs jns fildll dec adc mov imul les f2xm1 jl push nop mov push dec in imul lods lret in mov xor dec mov movsw pop inc in insl test xor inc fnsave fimull mov mov cmp cmp xchg std mov pop imul adc fs jmp inc cmp out inc scas in mov pop ficom pop outsl repz and cmp jo ljmp rclb outsl adc sbb mov das pop jp or insl loopne movb es ret ja iret in mov mov push adc repz jmp lahf test adc cmp pushf sub mov aam aam xlat sbb push and mov mov pop xchg gs dec sub aas sbb mov int3 sub mov pop mov (bad) add mov xlat sub fbld sub sbb inc popf bsf jnp lret fildll fdivs hlt mov ss pushf inc mov pop sbb pop notb mov sbb mov adc pop sub mov jo add (bad) aaa cmp sub mov xor push mov mov (bad) push xchg or xor cmp (bad) fist mov jbe dec stos mov icebp pop rcl adc pushf hlt or add cltd push xor dec gs pop or std dec stc fcoml popf jbe cmp ficomp imul adc (bad) test mov jns mov out (bad) std (bad) fistl push mov cmpl (bad) push mov adcb loope mov dec insb outsl mov ja adc adc cld add sub in jbe dec cmpsb pop aas fsubs lea mov lret out xchg inc inc xor insb cmp mov add sbb cs shr inc or mov cwtl gs nop push addr16 (bad) in sbb popf stos cmp loopne jb mov fnsave sti inc mov pop loope add lea adc inc icebp scas inc bts fstl out xchg sub repz repnz aad cld inc sbb es adc xchg push cltd fldcw cltd jno dec aam xchg sub iret inc xor mov pop je (bad) jno (bad) cmp lea mov inc adc mov lcall test test cmp lods add add das mov daa inc dec push adc pusha adc adc (bad) addr16 pushl cmp addr16 push add cmc jl sahf sbb mov js stc inc xchg adc xor cmp mov cmp lea sbb (bad) stos mov sti add aas (bad) dec (bad) clc jne and mov nop mov or scas movsl mov xor mov and mov in pop dec div rclb jl mov aad mov adc vunpckhpd lret dec movlps outsb arpl pusha push sbb sub out mov cmpsb in lret sar mov je ret mov out inc out lcall vcvttss2si inc push cld cwtl mov dec pop stos les call pop nop ja dec pop inc and xchg mov pop aaa pop std pusha stos mov and inc and scas popf jns xchg pmaxsw push cs push out mov test mov push mov dec stos roll xchg cmpsl xchg pop xor (bad) fisttpl adc push mov shlb and mov aaa cmp lret imulb outsb pop xor jecxz mov pop (bad) out test xlat outsl xor jle mov and inc sub xor ljmp in in xchg icebp repnz (bad) int3 or dec add outsb dec pop mov insb sub gs into int ret movsl stos mov cmpsl repz push lock mov pop data16 aad push sub movsl cli cmp dec xchg fsts aad or xchg jmp push push es imul out in cltd mov movsl jmp es jbe xor imul xchg xchg cmp push inc add inc mov cmp or jbe out push scas out dec pop sub and pop rcr mov mov cli add aad (bad) and dec stos mov pop pop ds sbb mov dec outsl imul popf jmp push push ret es imul xchg sub stos add stc jae sbb icebp and mov inc xchg adc aas popf hlt xor mov add push call and (bad) mov or repnz mov imul insb mov int xor mov jl icebp fstp push fnstcw popa push loopne leave jge jb mov cvtdq2ps mov jns or dec in mov pop mov mov test push scas lret pusha sub xchg cmp repnz cmp xor or in jge cs xor ss sbb mov xchg xor pop jmp lea push negl sbb cmp xchg sti mov mov cs ret std in add jge (bad) (bad) hlt into mov ljmp in mov dec inc sub stc dec mov lds imul cmp test fisub movl mov sbb push rcrb or cmp pop adc sub test (bad) int3 test fwait aad dec and pop push ret cmp add or mov call (bad) cld roll (bad) mov and or mov insb mov bound out push push mov orl xchg mov xchg push in sbb insl call jnp mov lret jecxz cwtl sahf test nop addr16 jp mov push push insb jp in sub push pop fcmovnb into movsb sub push mov ficomp and pop dec movsb fldenv push sub in inc sbb call xchg lret hlt lds ds fnsave sbb js dec cmpsb repnz dec dec (bad) scas mov adc and out push mov pop cmp or (bad) jg jecxz mov pushf mov xchg xchg btr xor pusha dec jmp ja leave jecxz adc icebp sub push sub imul xchg add pop pop cld loop mov mov jg test (bad) or sbb push lret test insl in inc dec dec hlt push push mov sarl daa (bad) and adc test mov mov mov push loop scas cmc test mov push popf or aaa out adc in mov xor xor sbb sub mov roll xor mov std in jnp jno xchg xchg pop dec add faddl push sub mov ret cmp loope xchg fidivrl xor shr aam mull pop out mov adc pushf or mov (bad) jmp mov pop mov jmp add cli enter sub cmp aaa fsubl adc cmpsl (bad) lock gs aad mov fisttp hlt cmp fldl repz jl push xchg and aas add or mov gs sahf pop cs loop pushf mov pop in fdivrs add sbb sti xchg add fcom inc sbb leave mov (bad) jecxz cmp xchg pop out (bad) jae push add aad in in inc push jno fmull add (bad) scas pusha je adc daa mov in mov or idivl sub push sbb adc aam push daa pop inc dec out sbb insb (bad) int3 jb in mov (bad) fld mov cltd adc sbb inc lods lods cmp mov dec inc imul and loop ja jno lcall sbb ror pop ja mov sbb mov imul popa xchg pop push les or jmp add inc jl lods jnp or es xor xchg cmpsb daa test fldl aam mov or cmp jl inc xchg mov aaa inc and imul icebp mov imul fwait insl xor add loopne cmp dec rcrl test mov xchg fldenv inc cmc stc mov mov cmp jmp iret pop cltd sbb xchg leave xor das imul push popf nop ja adc adc mov xchg xchg push and test pop jl stos mov mov sbb lock and mov lods mov test push adcb push fimull les adc sub xchg jecxz mov jle fimull testb shlb in into cmp adcl mov ss push push fcompl or jns mov (bad) jmp mov loop cltd ret xor loopne push hlt imul shl in aaa fld jo out in adc jle inc pop cmp cmp push movsb movsl fstl sbb pop cmp mov jge mov outsb out rcrl arpl inc jle gs dec add xchg leave inc add and mul dec scas jae lret mov dec inc dec xor pop mov xchg add (bad) int3 push xchg pushf shll loopne data16 cmp popf pop sti cld cwtl jbe leave mov pop pushf imul lcall add in mov repz mov inc divb dec ss add das adc mov push inc into add and addr16 jge das mov xor enter nop push jl mov xor aam popa imulb push addb dec sarl mov jb mov and cmp jo jle adc adc mov mov cmp orb xchg in inc jo dec sahf or je fwait test dec sub xchg and inc sbb dec sbb fistpl jo mov (bad) lret fdiv aad int into gs and cwtl add cmp std or loop outsl outsl inc cmp dec add mov inc sbb mov sbb (bad) jl mov (bad) jb push loop repz xor cmpsb sub pop and in jae imul sub shr addr16 sub les mov sbb lcall cmpsl nop enter sarb mov jge xchg js jg and inc pop sub pop loope sbb jne xor cli jbe cmp mov ss lods pushf call jnp sbb pop pop outsb sbb and xor sub push call and xor and cmpsb hlt and xchg push fdiv adc mov sub add adcl in jecxz lcall fsubr cwtl gs add cmpsb movsb dec (bad) jb (bad) aam sbb dec mov fcoms mov leave sbb jle popa stos je push mov adc daa pop sti push push pop or ljmp cld jg ja mov mov sti fsub adc cmp cmp lea rcrb aaa and or sub (bad) mov lods sbb dec outsb lea fcoml nop int and fisubr mov or popf mov or mov loop sbb imul xchg dec inc xor jge sub sarb mov pop int mov xchg mov aam repnz push and inc and push bound fcomp jne es fmul sbbl repnz sti cli mov inc jecxz sub sub jno pop out flds popf jge pop adc je lret loope (bad) mov nop pop cmp fiaddl arpl cmp inc sbb fstps bound repnz enter ret insb push mov add xor push fcmovbe adc push repnz mov gs mov mov pop jp xor xchg sbb out adc mov push out and int mov sub mov sub jnp popa inc or negl cmpsl subb adc adc je scas in mov enter insl mov aaa sar lods je dec popf jmp or xchg jle test or jmp pop mov mov in jno pop leave sbbl std mov cmpsb sub xor pop cmpsb mul mov mov inc xchg sbb fdivrp ds adc jb std sar ret xchg mov es adc dec jg mov inc ret lahf or push aam ret out sbb xor add push out loopne sti scas push in push mov sbb repz (bad) jmp pop fwait stos mov enter aaa shlb out dec pop sub dec mov fisttpl push repz mov testb pop add dec xorl xchg mov imul sub fsubrs repz gs sub pushf lods daa push insl idivb cmp mov xor out movsl sub pushf pop or adc subl pop push sub adc shr xor push arpl inc icebp add mov sahf (bad) call adc sub push push xchg pop push sub sbb imul inc sbb test cltd and hlt ffreep ljmp movq and in sbb leave xchg (bad) mov fs xor test mov notl add jns adc ret sbb xor mov xchg jp xchg fidiv cwtl mov xchg xchg hlt lds cs push and mov adc cmp rcrl xlat shrl adc enter mov and sbb mov push insb pop cs pop (bad) mov (bad) mov cmp (bad) enter rol and mov jae xor mov pop incl pop sbb sbb xor push push cltd pop push mov mov dec push popf add adc fdivrs rorl mov lahf adc jo cmp (bad) idivb ret in mov mov sbb or xlat lea cs call inc xor pop mov xchg (bad) ss mov aaa cmp imul test cmp out xor lea and mov aas dec sti mov fnsave addr16 mov pop xchg je call mov or or mov call imul inc ds push test adc movsl (bad) int mov test shl or in pop xchg or ja jae fs jb test test fwait mov mov inc sarb mov pop mov mov jnp or jne xlat test lods arpl sbb add insb outsb xchg and push mov add inc and sbb cli cmpsb mov adc push pop mov and pop popf cwtl pop out lahf in push ret xor jne sub xchg imul mov jecxz cmp inc cwtl mov (bad) hlt xor stos (bad) push mov test cmpsl pop xchg lods addr16 sub mov nop aaa xor pop mulb imul int3 xchg fscale add fildl and aam es and (bad) aaa popf lea push (bad) push hlt lcall rorl popf imul adc sbb aam push mov push aaa ss fnstenv xchg jp sub cmpl lock cmpsb cmp lods icebp fisub (bad) pushf cmc jmp out pop inc mov fwait jmp popf jle mov rorb outsb rcr jecxz mov ljmp sbb adc jl sti jno iret leave jmp pushf push mov movsl cmp jle mov aas push (bad) ss jg jle jecxz sbb scas das shrb sbb push pop adc jmp dec cld xchg enter mov outsl addr16 incb mov cmp repz nop in dec or inc cmp dec dec push int test pop in adc mov adc cmp pop mov cmc xor std jge test and push dec push sbb out and mov notb int or mov nop daa ja rol fistl xlat sub and aaa jns enter inc nop jg ds movb jae popf xor sub sbb xchg mov add (bad) out and and push mov push call (bad) movsb icebp fbstp arpl sub push je add fistpll jg aas dec inc mov into push and mov xchg stos pop aas jns inc mov xchg mov (bad) cwtl arpl mov cmpsl popa mov mov mov inc aad xchg lods and jbe repz push mov jbe aad iret sub mov push and roll mov (bad) ja test dec or mov cli js xor jecxz mov in xchg std fbstp (bad) psubb cmc mov jno add mov aas fnsave jns lods data16 stos jnp jmp push insl test xor std mov fsubl mov rcll pop adc xchg (bad) pop sub mov push jl mov mov movsl dec xchg loopne pop lods ja cmpsl (bad) push lret or ss cld pop sub sahf xchg xchg cmp and loopne enter add xor insl mov mov pop stos fistl xor sbb xor in imul jne arpl add rorl std xchg cmp adc cwtl stc data16 int es mov pusha out stos mov loope mov stos repz lret mov mov pop imul push sub xchg test mov movsl shr cmp mov bound mov pop mov inc sbb test pop outsl cmp lret or mov loopne movb (bad) adc or pop (bad) or dec aas inc xor xchg jge sub in dec cli pop call mov mov sti jecxz pop out cltd cmp jne or rcll xor sub cli (bad) sti jae mov div mov and sub dec xor push es aaa inc xor sahf (bad) sbb sar jecxz adc mov (bad) repz cmc dec (bad) cli push int3 out jle adc andb inc adc or fcoml out inc shl inc dec (bad) mov aas pusha insb out adc (bad) popa xor cmpb inc out insb call pop mov test add push sbb xchg in mov scas or and movsl push iret jp test test loopne jl (bad) xor lea loop lahf push sarb sub sbb aad and pop int3 fist aaa xchg ds xchg pop enter test mov push pop subl add push jmp adc leave pop loope push ret push jne clc sbb xor dec push push leavew push dec movsl lods loope outsb mov add dec call cmp sbb dec push mov dec xchg pop cmpsl pop gs fistpll lahf fcompl mov divl jmp mov rcrl mov mov (bad) loop outsb jno ljmp xor shl jae dec xchg stc je mov push (bad) dec push pop sbb jge fsts les fdivs pop xchg sti lds push scas jp pop (bad) icebp mov jno movsl mov mov mov push jl lods scas adc mov add dec push and sbb inc dec mull pusha dec sbb mov aas ret xlat addb loopne xchg jp dec mov mov stos xor fnstsw pop popl and fwait xor push mov gs push or dec bound ljmp dec jno xor inc (bad) lret popa data16 mov xor aam aam jecxz lcall icebp sub fisubl (bad) mov push lret mov and hlt pop call mov into pop lahf insb dec dec lock mov cmp lods push lods js bound or dec push dec pop mov mov push jae pop push scas and sahf push stc sbb dec mov adc sarl les test xchg stos ljmp mov jecxz iret outsb icebp lods push cltd sarb jl sbb lret (bad) ds push addb pop jo dec in adc repz repnz cmpsb mov push stos sub rclb cmp in mov das mov test mov stc imul outsb ds hlt std jmp cmp sub sbb sub sahf into pop cmpsl addr16 and insb jb (bad) aad mov dec pop and imul and enter add sbb fnop rcpps dec fnstcw inc cmpsb xor sub and ljmp stc lds cmp and es pop dec jns movl inc sub cmpb mov cmp imul lcall stos mov ret cs or push cli in je std int push cli in dec mov dec jge dec xor divl outsb (bad) jo xchg cmp fisubr xchg out pop aam fdivrl pop push adc shr aas and not lret shlb inc mov jg ljmp or mov sub mov hlt mov cmp dec dec jnp pop sbb mov cmp xchg aas mov mov dec lcall pop or test and push jnp xor mov mov sbb mov andb jmp in mov test inc out test iret mov cmc rcrb mov mov and fdivs xor aad adc into rep adc xchg cmp lods (bad) mov push or in ret jge mov cmp xor push and mov stos push neg in cs jmp sbb dec sbb gs xchg aaa push push daa cmpsl inc out inc dec add imul fnstenv xchg mov pusha sub jae pop jb dec adc inc aas cli cltd jbe pusha jmp aam int3 cmc or (bad) in cmc xchg push push inc pop sub into jg or xor pop inc je pop arpl adc mov dec xlat jb sbb dec enter dec sbb ja aaa cmpl ret pop inc and inc divb push push pop ja dec jle push push bnd jle ror cmc int cmp aad int ss mov rclb xchg and sti cmp adc rol int mov pop xchg mov xchg lahf repz lret add mov pop aaa ficomp mov dec push mov add mov movsb adc xor repnz mov fs lds or ljmp rdpmc rcr add sbb (bad) and xchg adc sbb mov xchg add mov jecxz jae mov sub shlb (bad) pop cmc inc cmp andb fisubrl imul lods mov lods (bad) icebp dec in xchg (bad) pop inc (bad) lock cltd imul ret cli inc int3 popf fs xor or inc leave cmc mov icebp (bad) inc js (bad) js in cmp call xchg cmp xor lret push fwait push imul mov pop lahf mov popl mov rclb divl js jo cltd (bad) cmp mov add cmp sti iret loope adc dec gs jge (bad) xor push add sub cvtps2pd cmpsb pop mov jl adc cli add sahf add adc aas out push cld cmpsb and scas mov add neg adc loopne xchg hlt sti aam jmp xor mov js psubq xor nop ss fcoml cmp test mov cld xchg cmp and push cwtl cmp icebp cmpsb jnp outsb lea clc xor xlat jmp pop jge test movsl mov outsl and cmp daa clc push mov or push stos adc lea lret pop shrb dec nop int negb inc jecxz fidiv pop fild fidivrl aas mov stos cmpsl mov adc dec test mov xchg sub mov jecxz pushf pusha je add pop les ljmp (bad) fildll dec int3 mov push ds mov xchg mov fdivs je inc lock or or pop insl in ja out mov pop fidiv mov pop popf rclb mov ja jl inc add test addr16 mov (bad) xor and add mov cmc or sub loopne aam mov mov sub outsl dec mov pop jo dec fwait xchg imul or and fwait aad inc fldenv int and jae xchg lahf lea cmpsl mov inc setbe cmp or pop aas scas (bad) je sbb test in mov icebp (bad) jg loope mov mov inc loop mov pop jo mov mov sub lods and in mov sahf lcall lock repnz aas outsb cmp or es scas lods aam lret sub cmpsl dec or pusha pushf mov cli and sub add xchg outsl imulb lea pusha mov mov xchg mov es stc daa out dec add pxor push lds icebp fidivrl xor cmp enter cwtl pop popa dec mov movsl inc outsb push aas or mov jge aad (bad) cmc jg adc push aaa xlat lahf stos imul xchg mov jp imul scas add bound mov fistp jge dec test cltd repnz pop test mov cli fwait in sub fdivrl ja jmp inc hlt inc adc inc dec ds pop cmp leave pop out dec push add pushf mov push push shll insl mov dec leave push mov cld lcall notl push push scas (bad) pop dec in mov inc movsl (bad) out cmp cmp sub push xchg cmc leave pushf sbb cltd stos mov jo add cltd loope out outsl in repz stos jg in xchg mov fstpt xchg aas dec lds iret push dec mov hlt add imul jg push call cmp test outsb addl lods add jl add or jmp test sbb pop frstor ljmp ljmp enter neg push adc mov jno mov xor fidivr pop aas je aam dec xchg in and jns daa leave mov hlt mov lods sub hlt test jo adc lea mov sbb int3 ret rdtsc outsb (bad) cmc adc xchg adc stc es jae (bad) in aad std pop fiaddl stos in xchg add sahf mov sub inc mov subl js cmpsb cmp cmp jne aam scas cmp jo pusha sbb ljmp dec push and aas in (bad) das dec inc inc cmp lods jbe test push xor aaa jp aam outsb leave ret sub xchg icebp or cmp jle cltd adc iret gs inc push scas dec pop sub inc jbe stc xor inc fisttpl aam fsubrl (bad) mov jle xchg ss jge jmp int cld sub xor dec mov hlt inc jle push rolb push push mov dec pop xchg fcoms (bad) pushf jbe dec add mov and pop pop or das xchg mov push sub cs divl lock out insl xchg and mov and flds ljmp jb dec and sahf xchg outsl fstl imul xchg dec and jge pop sbb sub negb aad jg push lret adc lret or ret xchg mov pop sarb (bad) mov rclb jl push gs adc imul out mov std dec (bad) sub inc dec mov cmp fcomps push jb pushf jg mov loop cmp lock add xor xchg outsl (bad) out mov (bad) xor rclb fdivl fcomp xor sub xchg sbb xor sbb repz movsb mov pop rcll xor pushf mov repnz icebp push or (bad) ss arpl jb div push in das mov inc cltd cmp aas cmp inc pop inc jg jmp and cwtl insb pop mov inc out cmc cs xchg push out aaa inc jnp repz enter cli push inc fild fbld faddl mov lcall jne ja pop xlat sub pop cmpsb lret jmp add cmp cmpsb scas xchg int jnp lock sbb std cmp jae pop rorb and daa fistpll sahf cld push jmp outsb pop pop dec sarl xchg or push adc mov push jne jbe pop mov jnp lods out xchg mov ret jl or cmc xchg test adc add test push sub jno out push mov gs mov push xchg inc (bad) adc jae xchg add dec adc jecxz xchg in pusha icebp popa jmp xchg mov pop int sbb sbb addr16 sbb les mov fdivrl bound mov lcall les ja pushf sbb insb jb jecxz sbb cmp pusha enter stc fs (bad) loope decb mov push fadds stc fldcw sbb inc lcall adc insb movsl jns movsb xchg mov sub xchg (bad) cmp mov add inc cli mov jg dec addr16 push mov movsb (bad) pop mov scas mov mov insb sub sbb dec shlb jp repnz mov out xor fucomi std sbb or inc bound das push sti call loope fstl sub mov arpl mov or pop test or mov lods mov mov aas je aaa jg sub lods into mov insb jae dec and testb dec and inc cltd cwtl inc dec insb xchg int3 divb addr16 fild xchg adc fdivl ss pop xor mov aad test jo (bad) outsb int3 sub movsl dec aaa inc cwtl aam mov outsb mov repz mov addr16 dec xor mov cli test or inc xor movsb jb hlt mov (bad) ss inc out lock xchg (bad) mov xchg add lret jecxz dec inc push out imul aam in sbb jne in mov lcall (bad) enter cmp aam jl push sbb cmc fstps cmp fldcw mov imul jle add outsl xchg pop outsb imul fnstcw add xchg push pop lret addb dec ret cmpl push or stos and cld das jmp push imul addr16 fwait xchg cmp xor mov lea test lcall in push pop mov lock idivb push sub add mov cmpsl inc fbld xchg adc in jbe fs xor sub testb lods cmc jne sbb arpl adcb int stos cmpsl into or mov push aad xor aad loopne iret fwait jecxz xlat stos repnz fsubl adc jns stc push jle arpl ss or rolb push pop loop hlt push add pop mov jg aad mov pop adc mov cmp and xchg sub add inc les iret stc test mov loop push lahf dec lea loopne lcall stos sahf xchg sub inc popa scas lea adc add push adc fnstenv adcl cld loop shlb jno in pop outsl mov sub pop or jl jno imul cmp daa pop xor jb inc xor add cmpsl add jle push aam cmpsb in (bad) rcr outsb sbb sbb xchg lret sub aam outsb xor xor sub inc cmp add stos dec add inc xchg frstor xchg add loop (bad) mov jbe sahf or ljmp dec out out push mov sub lods jae test pop rcrb push add mov (bad) cld mov mov xor rclb lods (bad) push inc rolb cmp inc mov cwtl addr16 out data16 xorl inc mov jmp xor and ret cmp adc sub jno push mov bound inc cli mov or lahf jnp cmc or xchg inc out pusha cmc les nop jne mov (bad) mov outsl shll mov jns lcall xchg sahf insb ds mov in sti jne in mov cmpsl pusha rcll in pusha sub push les fisttpll jg sub and fadd icebp and jno stc ret cmp fwait pop (bad) in cmp adc pop movsb xor push mov jne mov (bad) fistl push loopne mov not pushf mov bswap movsbw lea push movl pusha lea call jmp movl jmp mov lea call cmp push push jmp mov clc sub pushf mov pusha mov lea jbe stos pushf lea jmp xchg add inc rorl nop fsubl push jno cmc cwtl jp bound test in fimul adc inc or dec hlt sbb inc push adc js inc push xchg les js and add sub (bad) out subl bound mov pop shr inc push dec cmp xor lret faddp push mov pop mov push les test jmp push or xorb inc (bad) incl push jne,pt in mov cmc test mov btr shl neg mov pushf neg not jmp bt sub jmp inc int3 dec pushf loope inc mov sub push roll xchg xor jns lods jb fsubl (bad) out (bad) jle sbb cmp and dec mov cmpl mull test int test ret xor enter push and jle add xchg testl mov sub dec ficompl cld sar pop outsb or lods aaa (bad) int3 out pop inc or pop mov jne mov mov scas (bad) popa sti inc mov arpl and dec mov rolb jecxz aas pop aad mov pop xchg loope inc enter inc inc data16 out mov ljmp fnstsw stc add pop insl pop les mov xchg divb rcrl pop es in movsb iret inc daa popa ret (bad) cmpsb stc (bad) stos inc dec push sub mov cmp push mov cmp fwait mov (bad) mov pop xor icebp pop pop sub push xchg pop xchg fidivl cmp faddl les imul or push aam dec pushf mov ds mov pop adc nop push jae push adc dec or test addr16 mov (bad) imul test xor cmp call (bad) sub adc or dec and enter xorl aaa push punpckldq push test cltd loop xor sbb add jecxz pop lds test popa shrl dec push test add fwait pop pop fist mov test pushf jp pop mov push mov cli xor cmp add sub xor mov pop jle aas lret out enter inc lods insl lret (bad) shrb push cld cli nop cltd xchg (bad) sahf (bad) insl (bad) xchg add pop notl sub mov jecxz inc nop imul je jbe xor fstpt dec jle fwait jg stos in (bad) pop loope pop aaa int3 (bad) shrb rclb push (bad) jg jmp in cmp push or mov mov inc sub je sti push cmp test xchg test dec pop pop aam add (bad) notl jns xchg mov (bad) dec mov mov dec lcall leave sub xchg dec inc pop adc test iret scas (bad) jns cltd scas xchg cltd sbb je dec popa test je cmpsl jecxz add lods (bad) mov mov cmp jp (bad) xchg pop push inc add pushf mov or arpl js arpl cmpsb (bad) popa xor sub int3 and aam ret or xchg testl sbb aaa dec fadds clc jbe enter cmp loop inc int3 xchg (bad) xchg stos ljmp xor fsub sarb mov bound scas into jge in outsl fidivl jo push outsb std outsb xchg fistpll pop (bad) pop push sub mov or popf aam fs jo fmuls addr16 cmpsl xlat aas outsl stos cmp insl mov icebp and pop dec mov dec js cmp pop sbb sbb ss decb jp loope and insb pop sbb cltd xchg adc addl shrb in ret stc push dec xchg hlt (bad) jl out xor and mov mov mov pop mov cmp popf arpl xor mull pop dec sub out mov jb xor cs fisubrl mov xlat dec adc xor lret repz ljmp out mov mov rorb and pushf lea jmp lret xor sub or jae or mov or xchg mov adc xchg mov out jge arpl mov imul jge cmp sbb out jg mov test and lock mov js jno xor sbb cli outsb sbb pushf lods pop cmp jp or sti mov mov dec xor add or jns and movsb jne out or sbb (bad) fild push iret dec pop push icebp add sbb adc (bad) repnz or jge out xor cli loope icebp cmp repnz repz adc pop jmp push test sbb (bad) cli lcall sub pop and divb and jle movsb pop mov sub aam mov and jae jae mov sbb xor dec into in fs in scas test sub add ja dec fcomps hlt js jl stc jae sbb pop jmp push clc sub call pushf lea call jmp push jle inc out or scas and and mov lret decb xchg mov ljmp test add pop jle call rclb sysenter xchg pop das lods cmp push or (bad) int3 mov pop dec movsl out (bad) repnz add test mov lods sbb push sbb je push stc add push pop scas cmpsl lret dec pop add (bad) or inc loope insb fisttpl xor cmpsl mov or fiaddl jge jle (bad) rcpps inc sbb fwait cmp pop ret and popf std xor mov inc je in add fsubrl adc aaa in inc inc cmp enter sbb push cmpsl fisttp repz push mov adc outsl mov sub jl (bad) mov (bad) out fldenv cmp pop cwtl sub jmp js and pop ret mov dec xor (bad) insl mov xchg add daa pop lret sub xor dec test pop xor jo and pusha cwtl mov cld and xchg or loopne and popf xchg and mov daa jmp lea pushl pushf pushf lea jmp mov shr setno add mov test test stc test and test add pushf pusha call (bad) sbb popf call jne jmp or rcrl lret aas mov popl scas insl xor mov test in in out outsl pop cltd xchg mov loopne mov cmpsb fisubrl std pusha aas pop mov in sbb hlt lds ret inc fcompl jno scas xchg std pop repz push fiaddl lods adc fmull adc int sbb out add outsl xor mov adc jne or lret inc mov lock pushl shlb les push push cmc shrb dec fildl cmp mov mov rclb je or cmp aas dec inc jne dec in stos push cmp jns and inc fs outsl mov imul cmp js sbb and xor xchg inc loopne inc and in fistpll stos jne inc mov sahf in xchg out pop xchg mov jne jne dec xchg divl cs adc imul add clc and leave fld cld lret and inc push cli xorl dec pop testl dec imul shll (bad) shll push nop mov pop xor cltd shrl lods leave data16 mov xchg popa push dec rcrl jnp xor dec repnz aam pushf push sbb inc cmp es out inc in sbb jno push (bad) sbb shl iret add ret inc add addr16 or bound loopne jg adc not mov in pushf aaa push movsl mov and push ds pop nop andl inc push out or or and sub dec fwait pop xchg xor adc sub dec cmpsl mov xchg cld in push (bad) aad icebp bound inc cwtl cmp nop fs mov adc xchg jno jnp ret cmpsb mov lods xor frstor xlat pop or and mov or add adcb cmpsl mov jle and frstor jg jbe (bad) mov stc lcall sub (bad) mov inc clc or fcompl push rorb adc pop pop jp xlat adc fstpl popa and dec lock jp leave test mov subl push inc xor sti or or movsl in (bad) push cli inc push cmp add xchg cmp fiaddl (bad) cld popa sti dec test and sbb repnz mov push adcl add xlat fs cmc shl push sbb fsubl pop dec in pop pop mov arpl pop or pop inc popf cwtl mov xor fs aam xchg push adc mov inc stc cwtl xor cmp jnp in mov testl scas (bad) push cmc insl adc dec clc pop sub mov pop xchg mov movsb (bad) fsubr xchg and fwait pavgw mov jae pop jae xchg lea or mov std pop repz lods and lret mov stos (bad) inc cmp inc in cltd (bad) adc jne and in gs cmpl jo add jnp bound push jae popf test fcompl aas add into adc clc xor jbe add rolb push sub xor bound stos xchg test sahf push imul inc test push fwait (bad) push stc mov std mov jnp stc and dec (bad) mov imul fdivs jnp cmp jmp aam mov test pop stos js or mov inc fsubs or mov sarb jns dec and or inc call xchg and xchg popf mov call hlt hlt into jbe movsb pop mov xchg fwait nop push cwtl insb jo xchg mov out sub dec inc fwait loope cld ret scas jns (bad) xor addl insl cmp lcall data16 scas (bad) jp jge decb sbb xchg add (bad) and add and psubsb add mov inc hlt and (bad) pop dec and rcr adc js sbb mov xchg mov push cmpl into arpl jae addr16 jbe mov jb sbb stc xor inc (bad) cmpsl jp add and pop enter addr16 fcompl pop es sub xor or jb pop push add rolb repz and test mov xchg out cmpsb and test fsts jno mov pop jb add and inc in jnp cmc and std (bad) jae out mov gs lret dec push aad add xor push push jne mov push jp jmp pop loop or xlat mov xchg fs movsl out inc adc pop cmp xchg jmp daa lahf and popf cmc push pop ret rcrb jno popa test (bad) push aas test cltd (bad) jp hlt mov xchg test xchg das fmull icebp fldcw loopne add jge jb enter pop mov lret xlat xchg fdivs push imul dec addr16 inc or inc mov movsl xor xchg push aad xor sbb call outsl push test xor add xchg sbb xchg cmp cmc push mov mov sarb inc or mov and sub dec (bad) ds cmp xchg pop add inc inc xor jne call neg mov rcrl les les das sub or xchg sbb dec int cmp pop lock mov push lods xlat add mov push movsl les mov jp adc pusha lds add push push sahf mov mov mov pop jecxz push pop push (bad) xchg mov pop fdivrp jle xchg xor pop jle fucom jp push inc clc aad adc pop sahf cmp push stos out cmp xchg cmc aaa dec cli in pop js and pop lea inc stos jmp mov mov or inc adc adc push js mov icebp icebp pop sbbl mov gs inc into test inc jne jg xor in movsl nop fistpll fwait loope inc test jo cli add and mov outsl divb pop iret test fmul mov pusha dec lahf iret xchg ret (bad) mov in outsb lret inc mov scas loop fsin ret insb jge jl shrl sbb out out rorb lret dec adc stos std add (bad) gs add push loopne cmp in es leave leave pop test xchg mov and xor lods and cld sbb and push imul call (bad) dec xchg sub sub sahf sbb lret pusha jae xor lret mov mov flds sub fdivrl dec add mov fdivs and xor cs (bad) xchg inc lds (bad) lret stos call lret cmp movsb mov mov lods and push or pop aas jnp add push mov ja (bad) (bad) adc dec fbstp xchg mov movsb (bad) and test movsb in jg add xchg cmp push rorl in dec push or int3 adc jg ror mov and negl sbb and fcom mov mov inc jmp inc js mov loopne loopne pop xorb repz mov and lods pop jl xlat test mov mov cmp mov add dec jo loopne mov bound add cli outsb and out sbb test adc (bad) gs push lret ret pop inc jl xchg jmp mov sbb std jbe shr push fldt add insl push adc js fisttp or repnz sahf mov imul ror push jno mov nop or pop and aam test rcrl nop and cmp mov pop icebp pop or ss pop sti jb loope jecxz iret inc and push sub negb out ja xchg xchg nop (bad) mov pop in in inc push mul imul ret adc sub cli adc pop in sub pop in push sbb add (bad) stos or js cwtl mov in sub inc cmc loopne out xor loop xchg popa mov aam pushf push xchg mov insb jmp (bad) and sbb dec add pop cmp xor leave cld inc scas pop lcall lea xchg aad jp (bad) sbb fiaddl inc pushf nop or sub popf nop jno rcll mov out jle add (bad) repnz (bad) (bad) scas xorl cltd add cmp lds adc cld xor loope sbb in xchg cs fwait jp incl out scas shll inc xchg fwait in jg sub arpl mov sbb jae or dec (bad) mov xchg dec xor inc bound out mov lret (bad) or xorb mov mov xor in jb push in or (bad) pop jne xor (bad) sar push sub mov mov scas sbb jle xor sub sub add push loop or enter cld sbb les push repnz movsb or insl (bad) out or movsb test cli sbb push loope outsl jne ds push jns (bad) sbb adc scas add cltd iret sbb fscale xlat adc aas rolb jg cltd repnz data16 push fnstenv aam clc aas sbbl in mov nop into mov rol inc push incl push push das or sarl imul add xor (bad) sub mov or pop jl dec mov adc call pusha mov add sub xlat ficom stos in adc pop xor xor xor jl mov lahf insl divl out xchg test cs mov daa adc gs iret lea pop in sub push adc adc (bad) je pop pop mulb cmpsb loop scas outsl mov dec inc adc pop dec int3 mov (bad) cmp pushf mov (bad) and into inc pop test clc dec stos lds push mov stc push (bad) int3 push scas shll call leave nop adc sub push fisubl scas mov sbb ja bnd jb xchg fistl xchg cli mov test std adc mov stc mov sub and sub xor stc mov aam fildl test mov clc mov inc cmp push cmp js mov outsb xchg adc push cmp xor add lods cmp aam mov mov pop cmp mov lds scas stc int add cli aam js push jl fimul dec call cld repnz insb fwait (bad) bswap sub jo add popf imul (bad) or rolb lods imul scas adc imul mov rorb dec mov insb insb jmp xor loop in dec pop xor test ljmp add je mov inc ljmp scas inc pop test cs dec lock inc mov fidiv mov psrld movsl xchg push aad inc out insb mov mov mov ja dec (bad) add jmp xchg or mov jecxz jle (bad) out cmpsb jl cmp nop sbb push js int push pop out shrb ljmp jae jbe push adc xchg out movsl sbb fistp inc (bad) jmp mov jnp jecxz xor pop jae inc sbb add jae test and mov inc test mov pusha bound and cmc pop (bad) in ret mov int sarb or scas lea push mov mov repz adc jo cltd pop push aaa pop (bad) es rorl pop sbb adc add fidiv xor mov dec insb pop scas je jg and mov mov and mov jecxz orb negl movsl dec push push cmpsl sbb inc and mov (bad) addr16 test call push out ljmp scas cmp jp cmc adc call data16 daa fiaddl inc or (bad) pop pusha push loop nop stc dec je mov xlat and movsl dec inc cmp bound jmp or jmp pop repz dec mov loop je jo outsb dec pusha aas enter arpl or mov loope add mov std cltd dec dec test add mov xor repnz fmuls mov fcompl pop leave push mov std mov ficompl xchg fimul push xchg (bad) je lcall cmp mov adc xchg adc add cld imul aam jo roll loopne js cmp lret xor mov (bad) int3 sub ret cmp in ret loopne or push (bad) mov je jne bound insl mov shlb fistpl fistpl ss orl pushf xchg test rorl cltd add pand jno xor jecxz jl test out daa jbe sub jno fisttpl hlt sub scas cmpsl sbb push inc jo insl cmp lods sbb es or out aad mov in data16 out fwait jo ja cltd cltd imul movsb dec (bad) jns jo fcmove jne push out ja insl int3 (bad) and (bad) jl out lds pshufw jae (bad) out xlat pusha mov fdivp fsubrl lret mov jl cmpsb mov into and incl cmp ss mov jle and sbb loopne gs or dec or rol sbb adc outsl mov pop in lahf push cmp sub xchg data16 lods (bad) rclb das xlat imul xchg jno add incl rcr push or cmp push sbb push jae aaa and insl adc into das nop adc add mov xchg (bad) push sub pop push ret sub iret mov xor adc mov dec sub jmp xchg (bad) test inc push aas or cmpsb push (bad) cltd insb jecxz movsb jle sub mov fwait outsl nop push pop jge dec pop ret add sbb loop scas dec xchg xchg enter (bad) clc test stos aaa dec lret xlat push jmp rcll add aam nop das pop sub lods adc movl movsl ficoml mov push jne mov cmc or adcl hlt or mov std sti pop out nop push push mov gs sti inc or sub mov (bad) call mov mov inc sarl xor jecxz les pop xor sub adc shrl ficompl jle xchg xchg out jp les jno sbb push dec stos mov pop subl (bad) popf cmpsl mov enter xor mov dec mov xor cmp loopne mov mov popf aas fiaddl insl and inc dec fisubr insl loope cmp pop push lock cwtl ret icebp jo stos mov daa (bad) xchg mov test (bad) push outsb dec test add fsubrp adc and lea mov add ret pop rol adc inc cmc mov in xchg sbb std sbb es mov inc imul mov sarb mov mov mov movsb mov xchg in mov push psubd loope insl ss cwtl and mov mov out or jno jnp mov xchg repz (bad) fiadd fmul fdiv fnstenv movsb mov push les imul cmpsb cmp adc jno js xlat rcll dec mov mov outsl mov add xchg cmp xor popf rcrb sar jo outsl cmpsb test mov aaa or je nop cmpsb add icebp pop movsb stos cltd daa mov pusha fs stos fstl push xor mov fwait bound xchg flds xchg fild dec jmp lds jg dec lret sbb mov mov jmp stc arpl inc sbb pmaxub aad mov cwtl cmp cmp jp (bad) jbe fist aas xchg mov mov js mov push and addl pop dec fsubrl jns test and arpl aas adc rorl outsl xor mov ret sub add test cmpsb inc xor mov addr16 (bad) fcmovu pop xchg popf mov loop push inc fildl pop aam add aad adc outsb jecxz sarl fbld imull test bound or xchg idiv andl xor dec adc sbb pop sub (bad) popf dec imul aaa sub cltd push xlat xchg in cmp xchg pushf mov loop ficoml adc jecxz scas in lods adc or sub in jg int dec out lret es jle cmp mov jnp lcall adc sub and bound dec cltd (bad) push cmp add sub fnstenv inc cltd icebp mov dec loopne es stc jo nop aas aad cmpsb push mov orl or push pop cs les push cltd mov (bad) cltd leave into and pushf mov cmpsb cmpb push adc push rcr mov ficoml jmp clc clc fisubl pop aad cltd push mov mov test xchg mov jle sar clc jb outsl jp mov inc or (bad) punpckhdq popf push sub fcmovnbe cld pushf pop dec or (bad) icebp fs lret idiv outsl inc stc std (bad) and mov shll xchg scas int or add and mov lock addr16 loopne inc mov xchg cmp sbb cmp adc mov sub push pop sahf mov push jl sub mov sub sbb pop sbb jmp adcb nop mov mov dec jae fcomps je pop xlat xor es das lods (bad) icebp fimull call xchg fsubrp dec mov mov cwtl xlat push adc stc jo push cmp outsb jle add inc mov sub sub call sub push out mov pop and xor jmp out out sub notl and rorl add xchg or add std xchg mov andb push mov pushf add push hlt mov (bad) gs aam rcrb push add lcall (bad) sub fcoml or fidiv push jp adc sbb mov pop out fnsave out movsl xacquire lahf pusha (bad) mov sbb add mov adc mov sub cmp push inc sbb mov sbb cmp in adc daa fisttp mov push (bad) shlb movsb loop into cld add xchg push adc and out xchg ds es inc ret fs leave movsb (bad) aam sub leave in xlat xlat xchg xor mov std inc jp dec insl lret shrl rcl setl in push jo xchg xor mov mov int aaa rolb subl lods add into xor mov mov adc pop and dec mov lahf and ja jecxz das jge stc (bad) fcomps xor test adc into je xor xchg rcr (bad) pop jae xor push inc addl movsl repz sbb or push sub (bad) leave fsts lret mov mov xchg and mov mov lahf lret mov test mov sub in and lods sti std jge mov mov outsb enter loope cs int3 mov jo aad jmp cmp (bad) push push cmc in xchg mov inc lock push cwtl sbb movsb pop sub mov mov mov push dec push sbb lods cs push push add nop pushf adc push cmp movsb adc loop pop inc loopne push int out pop into mov xchg fs dec je mov lret cmc xchg aaa pop jbe shrl pop mov mov mov fldl js pop shl adc (bad) stos test cmc mov fimull and adc lcall push aaa mov movsb (bad) je dec mov (bad) in popa dec popa inc mov shl (bad) and lds add pop cmpsl iret jp cld cmp push stos iret push mov outsl jp pop mov jecxz scas into fsts stos dec sub cli push xlat push sub imul xor mov mov (bad) je inc popf les lods movsl add jg mov mov js sbb pop js lods test and sub and mov movl sarl xor cwtl push cmpsb cmp in leave mov xor cmp xlat test mov in lcall data16 xchg jb fwait cmp movsb notb xchg (bad) int3 push jle outsb pop and lcall jb (bad) xor push or dec add mov test cwtl ss rclb lock daa mov test dec ror jl and (bad) sub adc sub icebp popf pop outsl push scas sti push shll push fcoms cmp pushf sub mov or in cmc sti xchg imul (bad) (bad) xor add fwait push dec push dec lret jge sahf adc cmp jbe andnps movsl cli in fbstp jbe dec pop mov mov sbb in adc rcrb rclb pushf pop rorb fistp (bad) nop adc stos call aam in loopne repnz mov cs push cmp lock int lcall sub sub sbb cltd je dec dec mov xor ret push es shr adc into shl into cmp xor cmp xchg bnd call cmpsl nop dec addl out jp cltd adc scas loop sub mov adc and repnz and xchg cmp enter aam mov push jecxz notl adc ffreep xor sub jnp aas nop dec adc mov add xchg dec xor dec out inc fistpl sbb sub jecxz adc and mov mov shl sahf cmp and shrb pop mov arpl mov subb xlat jo fnstcw lods je inc stc lcall cmp and test push dec push aas in sbb jecxz or pop in js and mov int inc xor jnp lock pop dec sbb int dec and cmp (bad) jle or sbb mov jno ss pop gs pushf push gs push and mov lahf pop xor push insl test dec lret sbb movsb xor ss mov and mov je cltd popa (bad) ret push and lds into and stc mov xchg js sub int (bad) icebp mov xchg push push bswap xor xchg fstpl pop dec mov jle sbb sbb loopne (bad) in sbb push test incb ljmp daa std pop cmc inc rcr cmpb arpl fimull sbb loope inc mov inc adc xchg and push xchg adc xlat and rorb notl aam pop repz mov aad out rorb sub dec in or jne or das dec loope (bad) xchg dec mov inc dec movsb call (bad) mov stos int mov mov cmc fucom ds hlt and into push insb pop call lds movsl aad push ja (bad) lret push (bad) hlt bound adc sub xchg mov lods xchg sub daa mov pop int3 sahf into (bad) fsts or pop movsl hlt add fmul sub cmp pop and bound shll int pop sbb int push mov aam call and xchg dec mov pop lret inc je addr16 fwait mov int outsb imul inc lds and cwtl repnz hlt dec (bad) or jo and fs push push xchg pop pop mov mov insl fimul push sub push iret xchg add sub mov fistpl fdiv fcomps out popf scas out (bad) movsl lret and push dec pop idivl mov mov movsl das stos xor add stos (bad) in mov ja jae ja je repz sbb mov xchg mov inc add pop scas adc and push (bad) inc cmpsl sub movsl (bad) (bad) das push cltd (bad) lds xor dec rcrb lea (bad) aas dec sub mov push lea push and jmp sub push sub mov or xchg xchg cmp mov mov aas ret test int mov dec stc sub nop fcom add (bad) fs aaa ds arpl fs iret mov sub push mov or cmp adc and cmp loope inc sahf push loope (bad) xor dec mov mov mov daa xlat jle pop mov nop or pop out movb pop push orl dec and mov fstpl dec pop cmc mov mov in mov xor add incb in mov out cmp mov sub ds int3 inc push lret test aad (bad) cmc mov pop push cmp fldt lock loop roll push sti pushf test and mov inc shlb stc xchg (bad) das fldl2t test jp fistp dec pop scas or loopne fbld pop mov rorb sbb (bad) pop mov cwtl movups xchg push add adc popa addr16 test mov ds mov or jbe adc call (bad) out es adc push cld mov pop jl loope mov movsl jbe sbb lcall pusha or cld xor push lcall loop sbb mov ret pop ret push scas sub lret jae fnstsw xor ror sar add xor sarl (bad) aad cltd mov in pusha add push pusha add les ss fisubl adc daa inc sbb scas daa lods ljmp push dec xchg out sbb xchg icebp mov dec adc ja push mov push in cmp cmp xor pushf (bad) mov fadd mov sahf dec push adc inc jle adc inc mov pusha cmp (bad) push aas sub subb adc je outsb lahf movsb das jo add cwtl xchg dec sbb and scas jo inc push dec xor mov jno push addr16 lock rcll enter movsb ljmp jmp idivl xchg test cmp push and dec jb sti adc outsl pop and shl sub jbe (bad) (bad) dec inc cmp gs sbb sbb xchg lods or mov jp divb jne frstor xchg ret sbb aaa icebp scas fdivrs dec adc (bad) push fsubp jl je testl cmp xchg (bad) scas (bad) int3 dec mov loop dec or pushf sub dec xchg mov pop fnop test jo sbbl fwait shrl xor leave popf pop fisttpll in popf inc dec jne in pop jmp pop pushf fiaddl dec xor pusha dec jg sub aad add xor rcrl fcomps fisub mov lret mov jnp enter pop mov inc out xchg addr16 mov ja push fcoml sbb mov sub cmp or pop push sub mov daa stc sub pop sbb and lock fs xlat loope mov insb outsb cmpsb cmp fadds iret sbb pop add cltd inc (bad) jbe jge mov in dec push fsubrs xchg adc xchg mov fldenv enter push sub pop int3 (bad) lahf inc fs fildl push sub jns cmc jno fcoml fisttpll cltd adc das add jge in insb pop ret mov stos int3 inc xchg and sbb or adc test xor pushf dec and pushf movsb in leave mov mov mov movsb pop jg sbb or mov loopne add lods mov out sub adc (bad) repnz adc int3 jnp out pop adc jmp mov dec push xor scas sub fadds pop pop inc add xchg je pop out fwait cld pop pop cwtl shrd lret js pop jmp insb jg repz cmp adc push icebp iret adc adc je cwtl adc cmp mov daa or and push mov test mov int3 pop mov lcall push sbb mov cmp inc test cmp mov out mov (bad) pushf orb movl mov pop or ret mov sbb jns fisubr inc lcall cld lock cltd push sub sahf sbb dec cltd mov das or inc mov pop push test out xchg jne cwtl (bad) dec ret mov xlat jns pop mov pop mov mov lds dec xchg imul inc lret lahf aaa aaa mov in lcall aas (bad) leave pop fcoms push sbb push inc jns les mov cmpsl inc inc jns out in rolb xchg mov sti ds xchg push iret mov aaa ljmp in mov mov popf sbb fbld jnp aad xchg insb nop enter sub xlat cmp push cltd pop movsb xchg jge fmuls arpl sub inc lret mov xor push (bad) jl mov mov push inc jbe (bad) (bad) sub xor cmp aaa int3 adc sub push sub dec lds or pop clc std mul jmp inc xor inc jae mov rclb adc pop xor jns insl aad bound cmp out nop jg cmpsb add fcompl leave cmpsb sahf mov cmp dec mov shrb loopne xor xchg jg cwtl lea xchg jnp loop (bad) adc clc idiv in decb int mov movl jmp sbb insl mov paddsb repz adcl push xlat loop cld inc inc rorb mov out sbb test gs (bad) orl mov cli scas loopne sub and xor stos mov daa mov das sub fcoms jmp dec (bad) mov jmp pmaddwd jo std inc sub push dec pop mov testb movsb (bad) adc adc test (bad) shl jmp inc xlat mov je js ss ljmp mov sbb lret ret dec sbb inc test dec pusha std repz pop push aaa inc fcoms xchg jge jl sub in lea mov (bad) (bad) fmul push and mov push in sub xorl movsl cmc xchg mov inc in scas inc lahf or cld insb in cmpsl mov imul ret jp sub jnp sub cmc sbbl push dec or les in xchg fimul dec ss clc iret sub sahf enter mov psubb std call ret (bad) std pop jmp mov mov in adc jge lods pushf mov jp out xor (bad) and mov ljmp or outsl mov or insb pop xchg mov out pushf popa cs daa mov stos popf lods xchg stc lcall jae data16 cli dec mov mov mov cmp inc dec adc repz ficoml dec jb les push test (bad) push lcall inc stos nop inc lret int3 out sub ds or cld jmp xchg dec mov xchg inc or adc mov out pushf jno cs inc loopne (bad) psubd jnp decl iret sbb or cmpsb (bad) neg dec cmpsb aam add lock jecxz add sub push mov loop out pop mov lcall xchg cmp ljmp xchg stos push addr16 ret sahf (bad) repnz jne nop mov pop test add sbb mov stc lods (bad) xor inc sub jno xlat push cmpsl iret push push leave xor fldl sbb jb inc roll rorl loopne lods xor jne mov (bad) push test dec mov ret lret mov pop insb movsb int push stos (bad) or adc iret stos mov push loop push stc aam shll call dec ret scas lahf pop pop inc xlat aad insl aas fbld xchg shrl add adc (bad) sahf cmp xchg call roll push fmuls lock int3 (bad) cld jmp rorl test outsl bound mov test pop sub and mov mov sub xor xor fwait mov mov pusha rcll sub cltd xchg dec pop mov (bad) pop adc mov fcom lds out in and fsubl inc out jle xchg cmp movsb mov mov push popa xchg cmp std sub rol repz fs flds adc mov pop cmp mov sub addr16 or stos (bad) push push leave popa cld sub inc (bad) int mov fdivrs (bad) mov inc sbbl cmc nop jne pusha in jp adc pop sbb inc mov jno dec enter xchg push test (bad) out mov inc cli test dec popa push jl jo xchg data16 pop xchg mov mov popa in add decb sbb (bad) mov stc inc sarl push test in xchg outsl xor leave idivl scas push rcrl aad cmp (bad) mov sbb mov cld outsb jbe lods inc scas jno and jb pop mov fistl lock (bad) ret loop cli mov mov icebp and sti test dec or or xor ds test enter (bad) loope sbb dec fistpl fstl adc sub hlt cmp sbb pop scas mov es mov sub pusha sub stc lock popa pop sbb push (bad) xchg mov push jnp popf sbb ja insb data16 adc add pop jo insl pop add inc nop pop xchg or notl test ret outsb sub outsb call pop out cmp sahf rcrb jne sbb xorl movsl imul inc mov loope fs outsb arpl inc xchg and xor enter sbb mov repz mov mov push popf imul or scas inc xor test imul int3 sbb jmp inc jne xchg dec (bad) int3 data16 mov rclb jmp lcall xor insl add push jmp ror xor sub ror and cmpsl flds bound cmpsl ret je scas cmpsb push mov jle sub lock in xlat sbb imulb xchg add mov jns bound pop lcall nop jnp int3 push xchg sbb xor sbb (bad) or addr16 gs dec or or std movsb pop add fs arpl aas test cmp mov repnz push ficompl push sbb scas add jb xchg adc mov std xor xchg std jmp mov in dec cld mov popf scas sub jae lock and stos mov cmp mov out mov scas inc sbb add rol mov lea dec es cmp xor clc push jecxz in dec and mov idivb jge jl das and sub adc add mov mov insb outsl icebp mov pusha adcb lret es gs or insl add mov stos mov clc cmp xchg sub mov stc jmp mov sbb mov push cltd sbb jb dec xor mov fisttpl hlt adc outsb test pop and push outsl mov fistpl arpl or mov ror or icebp xor in xlat fild int sub jg jl pop rclb pusha testl addl outsl xor cmp mov pop lods les mov test xchg xchg and (bad) pop ret or lahf xor xchg iret push xchg inc popa fistl popl cs cmpsl cmp jae dec loop adc cmpl mov mov lods test sbb add push hlt mov je mov test leave sbb push mov roll add inc dec aad jo add cmp pop xor push pushf ficom pusha les ja sub imul std sbbl sbb aaa stc add aam je fdivp aaa insb xor pop outsb xor adc imul push test popf mov push movsl jg stos test int add aaa jbe add ljmp fcmovb fs lcall mov jbe pushf test scas mov push cltd dec and xchg mov cmpsl outsb inc movsl or or mov in jmp xchg test or or jge leave jo clc cmp aad mov shrb test jae cwtl jo cmp out arpl rcrl push jg cmp push jo,pn pop push xor shrb or leave and xor (bad) mov push es mov lahf and mov cmp xor dec lea mov push pop out or mov popa and repz pop into jno ljmp movsb jbe or jbe dec add mov scas fisubrl cltd cwtl insl daa dec mov (bad) gs arpl test cmc inc or repz sub jns lods dec imul jg pop dec adc lcall dec int test and in adc int3 cli and jmp (bad) and data16 push jno push jmp pop sbb or out xor xor in dec and or sub pop push sbb dec push pushf jle jns fcompl (bad) sahf negb xor (bad) jecxz pushf fs inc xchg fsubr jmp pop mov xchg in aaa cwtl imul div cli dec loopne inc lods mov sti jb mov sbb scas push outsb sub lcall and sub or lret and sbb outsl pushl rclb pop dec testb or scas test push in add mov xor jecxz push fs add cli test add inc test mov cmp in sub leave test sbb mov pop inc lret and std and es pop test repnz sbbl mov pop clc lods dec mov mov mov lods or pop cmp inc pop dec and mov cld arpl in sbb pushf push jne pop sub cwtl ret jno push cltd cmpsb ret mov xor insl repz cwtl xor fcmove jne mov pop mov inc loop popa roll xchg inc pushf ret pusha push into dec pop (bad) pop ror cwtl ss scas stc jae and cltd pop pop push pop ret cmp mov xchg xchg imul pop and cld ds jb dec iret jnp out mov add fbld xchg xchg jle sti sub repnz outsl sbb push (bad) sub (bad) pop inc adc pop dec imul push xchg (bad) mov and mov and divl mov cmpsb lret mov push (bad) aad int3 mov out jb mov mov jmp cmp test mov mov cli rcl pusha pop test aam adc lock jb inc pop dec jne pop add pusha out add push in daa rclb (bad) jp mov pop or ja cmp (bad) ret push mov push lock fwait or pusha jns ret dec push or insl mov adc cmpb das sub test icebp int out (bad) push jg inc xchg jno xchg pop js cmp and (bad) mov test jle xchg scas test stos aas inc adc fisttp cmpsl dec idivb cs testl (bad) cmp (bad) xor adc and pushf repz inc or mov lahf fmuls sub jp dec xchg xchg push mov mov sub shr mov imul push xchg xchg dec fidiv dec jecxz mov ds dec sbb popa xor dec sub out in scas popa jae out adc pause jno mov pushf (bad) adc jnp adc xlat xchg sti inc cmc movsl push test rorl ds cltd pop jp dec mov leave mov fcmovbe icebp or xor pop test mov lods xor lods inc or fwait (bad) loope test imul jg fbld lcall mov js inc xchg js mov adc inc cmp sbb ficomp pop ret lcall fisub add sbb testb mov (bad) pop push outsl sti mov outsb icebp cmp inc bound fwait ds mov lods jp cs mov roll cld in pop lods mov fstpt popf (bad) call push cs cltd sbb dec and popa cmp cli ljmp pop cmc pop sub push loope je jae pop fldenv insb jbe fidivl mov xorb mov jb out addl (bad) xchg popf or pop rcr xor xchg data16 cmp xchg add jns movsl into jae out sub std mov push aas (bad) stos and loopne in nop clc pushl gs cmpsb mov push and out sahf sbb mov std test (bad) sub js addr16 (bad) leave cmpb push stos xchg sbb pop mov mov sbb jge cwtl fs pop aad fs data16 popf jge and and sub xchg repnz popf cs or in nop xor push (bad) jge ds mull mov shlb xlat sahf in lds fcmovnu xchg push fist mov sub mov and add lds inc sbb iret test jae cltd loopne push fidiv cmpsl sbb lret ljmp mov inc mov mov xchg jge mov mov xor repnz mov shl pop les mov (bad) clc enter jecxz shl pop adc call les mov mov and jg inc call imul push mov pop push dec rcll mov sbb cmpl aaa out xor movd dec bound xchg xchg pop jbe add jp add stos adc and enter shrb mov sbb xchg inc inc jnp ljmp push cmp mov mov dec lods xchg sub mov xchg imull or popf mov cmc sarb push xor inc std (bad) or mov push idiv jle and or mov imul push push and fcomp add cmpsl adc mov andb cmp dec pop pop stc cmpsl xlat push (bad) mov lock call repz mov (bad) mov sub cmp (bad) out ljmpw jmp add and push pop xchg pushf push aam inc jne dec (bad) outsl pop out lock push add fcmovnu in inc adc lret enter jb repnz pop fisttpl jns mov pop stos das stc outsl cld mov adc pushf scas cmp xchg or sahf sub push mov xor inc aam hlt jbe lods add mov es sbb fs sbb dec flds and int3 les push xchg adc cmc test jmp xlat (bad) clc test push (bad) lods add ret into notb inc add xor js lcall add movsl cmpsl dec ljmp or or xor mov out fdivs mov xchg leave out sahf pop loope pushf iret inc in cmp xchg shrb mov and push repnz popa dec sbb mov xchg andl and cs outsl mov mov jnp cmc push sbb mov in movsb jne adc xchg push push xchg shr cmpsb xor je sub dec gs jecxz sub fisubrl or push int3 fldenv cmp loop cmp into mov vpmacsdd test sahf and xchg or lock mov aaa outsl sbb cltd add add iret xor adc lods out pop push mov fildll stc mov add jnp stos mov push jnp mov popa js jmp mov push enter (bad) mov xor inc shlb test lret dec dec dec mov into mov mov push je movsl enter xor inc and insl out push jb sbb cld and movsl iret sub pop pop jno test clc push mov mov rcrb mov repnz inc (bad) sbb push and das jecxz hlt sub add sbb lret inc les lahf pop lret in adc cmp addr16 pop ret insb and aaa fstps imul push adc add pop test jno push pushf sub jns cmc xlat ret push dec (bad) cmc jb pop in dec xor xor mov in addr16 sbb inc mov and out sar aad dec mov rcr push fstpt push push iret std push out xor and jecxz inc ficompl lahf xchg jns pop sub cmp pop sbb (bad) mov mov or cmp mov adc mov adc shrl xchg sbb jo pop in mov jmp imul dec fmulp (bad) ja sbb ret lcall mov repnz mov leave jo lods xor mov sub (bad) ss divb in movsl add mov mov ror scas cmpsb dec clc fstpt xchg and loope xchg mov xor mov loopne js xchg or adc loop pop push roll adc xchg adc jecxz mov push xchg cwtl imul xlat add inc pop inc fisubr sbb cmp ret cmp mov add pop int3 adc sub inc repz adc jmp (bad) adc pop inc add mov xrelease in insb daa mov add dec sub test movsl stos aad lock dec daa inc into sub pop push jb xchg mov mov lret sub mov jg repz fist (bad) das insb add push add jae jecxz jae jmp cmp frstor ret mov xchg test sub ret push negl add jecxz or mov add and pop cs imulb and or lret cmpsb leave xor or lahf inc mov dec iret cmpsl add cmp movsl aam lock pushf xchg pop pop xchg push scas das sbb stc nop cmpsl jmp cwtl pop aam ja fcmovb jl or cmp and pop lahf mov pop sub cmp arpl (bad) jno sbb sbb xor jnp mov jmp rcrb mov mov mov sub popf sbb pop mov roll xlat sub sahf mov rolb test (bad) in clc sbb lret mov and popf aaa xchg bswap outsb ficom and pop mov imul fsubp push (bad) in in push xorb jbe adc rol sub push jns cmp xor sbb cmp (bad) dec jbe sub push (bad) and dec fucomp sbb fisubrl jno push jl cmc addr16 mov cwtl imul adc mov xchg imul repz or in pop push fldt pop aas ror test int3 insl out loop mov inc xor (bad) and pop mov cmpsl mov enter js das jno add adc ret popf fwait push sub sbb dec or repz sub aaa jbe bsr aad mov mov jbe fs imul inc lock dec pop out push jl pop jl fwait xor (bad) jl cld fwait push lds int cs push adc inc dec in jo xor and pusha mov fstl jo dec cmp stos test mov icebp inc dec stos push add xorl sbb fidivr in in xor mov fwait pop adc push (bad) mov or jnp lods test ret cld psllw lds push mov xor rcl fnstcw leave adc data16 jmp cmpsb and ret or push test jbe xchg mov in mov js mov sub xchg sbb cmp mov and adc les in fwait lcall adc xchg das enter loopne cli sub mov je insl sbb push sub ja ljmp push fnstcw cmp cwtl add mov std lahf (bad) imulb push cmpsl js fstpt jne fistl mov xchg pop add scas aas ret adcl mov js ds rcl imul data16 mov fldenv (bad) loope inc push out cmpsl inc or or movsl mov jecxz push test push test sub pop xchg xchg sbb pop ja ds rcrl xchg inc add xor or repz add fs insb push into dec mov xchg mov push aaa pop adc pop mov jae push or icebp mov (bad) jno mov bound mov rclb inc (bad) mov pop rcr xchg cwtl inc dec outsb cmp cltd (bad) mov mov (bad) arpl mov nop or jnp mov dec pop add lret mov adc enter xchg jp mov ficoml pop insl or inc inc or rcll repz aaa xor pop (bad) lds adc add leave lds jnp sbb jecxz icebp in pop (bad) sbb add dec out pop pop adc add lret jl dec clc rcl roll sbb sbb mov sub push shrb inc lds rclb and lea popf xchg jne lds (bad) mov xor mov push inc sbb shlb or cmp fldl je aam fdivl xor fmuls pop mov sub adc adc pop ds pop pop xchg cmpsb jl sbbb sub xor xorl cmp adc movsb inc outsl icebp rcrl out int loop cli loopne mov sti sub and add stos mov or aad daa outsb out cmc pop jecxz aas xchg in js pop loopne sbb je leave xchg lds pop mull and inc imul hlt (bad) mov cmc mov xlat shrl cmc xor pop add pop pop push adc mov imul es xchg popf jmp add push adc lods mov or cmpsb cmpsb xchg bt (bad) adc push xchg jmp je lahf adc dec sub movsl gs jbe in sub daa xchg movsb add (bad) jb pop pop push fsubrl mov outsl imul sbb mov mov aad in call addr16 xor dec lret dec sub or and sbb inc push lahf inc mov jne dec xchg adc adc pop popf fwait adc lock sbb sarb fimull push dec lock xor es sbb jns loop cmp cmp jbe fstpl stos mov loop mov call jns,pn jo inc mov inc icebp jne ret mov insb daa mov sbb testb mov fst out out dec mov out lock in (bad) sbbl fs mov xchg dec addr16 and mov cmp ror mov jmp ret enter push add dec mov xor sbb cmp push iret stc push jp shrl fwait in lods mov fimul imul je dec imul test pushf jbe std jo je push sbb negb dec adc lret test loop mov movsl mov dec mov dec xor jmp jle fs rep jbe pop leave aaa (bad) lea lods outsb les cmpsl stos mov in inc icebp inc je lods mov xchg out pop clc mov int3 jp jae into push sbb pop loope jmp fsubrs sub dec int3 inc jl xchg cmpsl push push test mov mov ret or xchg add fstps rcrl pop aaa mov mov sahf sti xchg sub or inc mov notb jne insb jo mov cld dec cmp xchg sbbl iret rcl mov nop push xor rcrl cmc sub insb jge add faddl enter pushf xor mov sbbl dec mov repz mov aam jg sub iret cmpsb fisttp sbb idivl mov mov xchg loope cmpsl aaa push inc xor add je les xchg mov push xchg je js jnp enter test xchg push mov inc movsb jl push (bad) lret std lea mov sub sbb add in sub fnop out inc sub push mov push xchg mov cmp sub ret adc ja (bad) nop mov int3 inc push push and mov mov (bad) mov test icebp cli jl fsubs std stos into adc adc xlat jns cpuid mov push in dec mov cmpsb imul jmp in in sbb sbb pop mov andb sarl jne (bad) mov insl push ret sbb mov xor jae pusha pop call mov ds sub movsl rorb repnz repnz (bad) out adc or xor jl cmp std push fucomip out scas xchg clc cmc inc push sub and add idivb lahf subl sub mov (bad) stos pusha mov lock out push fadd insb loopne xchg sbb inc pop in cltd js push nop mov (bad) pop lret jo loopne test lea (bad) pop popa leave and xlat imul jl mov add push (bad) test or xchg xchg jae bound shlb data16 ja cmp cmp sbb adc mov mov mov imul or and xor dec sub outsl mov inc daa enter push (bad) push sahf icebp mov insl xchg in out xchg pushf in js addl stos inc push out mov cmpsb lcall or aad mov lds test adc (bad) pop stc shll (bad) mov clc pop adc add icebp xchg movb out inc mov xlat mov mov dec xchg xor pop lods jno out fbld test aas int3 pop ds int sub mov jge jno repnz dec mov jns push outsb ret or add sbb mov lds loop push mov pop pop jno fs push inc jo pop (bad) imul dec mov ss (bad) in gs outsb xchg imul (bad) sbb xchg xor daa stos or dec add dec out and pushf addr16 mov lea out mov rolb and adc xlat adc or aam push std xor mov push pop lds push mov mov adc insl pop lods pop mov cmpsl push outsl pop inc (bad) pop lods ret lahf ja adc mov xchg je add push bound xor jo pop cmc lea addr16 jecxz ja mov leave adc das aas pop jnp pop jmp inc in pusha pusha push cmc pop insb and mov xchg loope outsb xchg mov add xor cmp (bad) add (bad) jge xor add jecxz js cmp pop mov loopne cmp cltd xchg cwtl mov out fadds hlt sbb xor cwtl into fdivrl adc hlt sbb mov lret add or outsb fwait adc mov orl adc cltd fwait push imul lods pop push xor xlat cmp pop mov int3 sahf mov sub test sti adc push bound call mov call les jo mov nop movsb pop bound hlt incl add sahf cmpsl xor dec idivl loop loop cmp in js xchg push or into repnz mov jnp and xchg mov mov es sbb jo lcall std xchg pop push sub leave movsl (bad) jb jae ret cmp stc mov mov jo adc js pushf repnz inc out mov add jae xor adc push rorb rcl push xor mov andl and stos mov aaa add rclb divl lods das add (bad) dec inc inc xchg inc roll jo mov inc leave sbb pop cmpsl inc frstor jnp fldl into insb lods fwait sti mov divb gs pop xor es (bad) mov stos dec mov cmpsb push jp jle pop xor cli les out jae inc xor sub adc addl test outsl pop mov cs push xor cwtl push jmp sub mov andb inc divl jmp (bad) dec das mov xchg daa out mov fimull push pop pop sbb scas stos sti adc ljmp cli movsb lock pop mov lock aad or stos adc sbb insb xchg lds inc aaa popa mov and ss adc mov cmp stc mov sub push lds cmpsl mov dec jecxz jl in or xchg sbb fcmovne pop cmp (bad) mov sub mov pop xchg mov inc repnz cmp popf pop mov out pushf sarb aas scas std scas or or xchg shll insb jp add outsl xchg cs pop mov addl clc cli movsl or stos pop or fnstcw ss cs (bad) sbb sub push pop mov lret xor cmp pop xchg fwait gs fwait jnp lret add ds xor mov mov jo cmp (bad) mov and mov push cmp insb es pushf add bnd lret xor jg add jo call (bad) ss out (bad) loopne push sub loop dec jbe lea mov lock loopne mov lock cmp sub int3 or (bad) in sbb pop stos add lods add adc push pop pop xor out mov push and lret in (bad) mov xor popf sub xchg test std test or imul test imul stos and (bad) xor push jns fdivrs or enter pusha jbe ficomp mov test mov push jno (bad) popf xchg dec loop icebp inc mov xor ret int3 sub add push ds and xor pushf rcrl les mov dec lods in push rorb jle cmp mov lods mov jmp cmpsb mov adc insl loop add pop push lock enter cli push insb jns lock push jb sub ss mov mov cmppd lods xlat fiadd scas mov sbb cmp sbb in insb xchg jno adc mov push shrb cmp mov jns pop xchg addr16 hlt push mov xchg and cmp jp mov neg xor popf mov std jne sub sub xor pop fptan cmpsb xchg ja cmp adc mov sub psrad cs repnz lods incl loop lret xlat xchg lcall jge push xchg int or push fwait jmp xchg cmp push lea ja in and or mov sbb popl (bad) notl mov stos add aas sub pushf daa adc inc incl or iret sbb sub pop sbb sahf fs std mov or iret sbb jae xor mov lods fs xor pop cli xor xchg fwait sbb sbb insl (bad) lock push (bad) call test lret std pop stos mov push hlt adc jae adc pop (bad) lcall mov cmp mov sub sub clc aaa or pop push ret push je pop cmc sbb aad dec dec xor mov in and subl pop adc mov jmp rcr mov cltd imul hlt mov lods mov cli (bad) rcl imul adc out jl pop and fs fistpll lret adc ret add add repnz faddl out sbb push pusha test inc add arpl (bad) je lods mov mov inc push int3 test xor outsl add imul mov jle lea fstl loopne mov sbb xchg mov jae and mov popa or in negl xchg sub xchg sub loop fbstp dec repz pop sbb data16 loope and jb dec xchg add xchg cld jp out (bad) dec mov cld jg mov out and xor out clc aaa inc pand adc push fwait inc (bad) leave cmp arpl pop mov ljmp push add add jae adc sbb xchg mov jo dec addb out or out ficoml pushf mov outsb or pop and dec imul jmp lea or dec dec xchg add pushf add lods lods das xchg fs (bad) testb lcall mov inc repnz push jecxz gs push pop pop jnp mov aaa fnsave xchg adc movhlps xchg cmovno pop lret insb push inc std outsb jnp jnp lret xchg shr pop ret mov in pop dec xchg clc push xchg sbb dec shrl shl (bad) mov xor cmp cmp or jle cmp mov jge lods fistl fwait test repz xor fnstenv xchg mov aad out adc lcall or cltd adc inc add add and add sub or js out add sbb scas ja cld cmpsl fwait xchg shrl leave push pop or mov jns ret (bad) jge lret xchg cmc pop sub loope push popa popa mov mov dec dec dec mov xchg pop in add cmc xchg pop out fstpl inc jno jae sub inc xor sub fimull idiv sub mov nop sub sub test lods mov push push test ja fs daa lahf jmp (bad) xor sbb dec lcall cmpsl es push jnp cmp mov stos scas lret cmpsl test add sub xchg pop mov dec addr16 imul cmpl mov loope ret xchg icebp call xchg jnp xchg in daa sub loope enter bound jne sahf dec cmc sub and rcl enter sub adcl pop pop mov les mov cmp scas sbb mov inc icebp cmp in ljmp lret ljmp dec add sub cli pop push or nop mov pushf inc mov sahf loop gs ss push mov stos pop loop arpl fcmovnb push lret xchg ljmp into fwait cmc add into jg outsl mov mov insl inc daa pop insb and movl mov jl pop stos decl cmpsl and sub scas movsl sahf lret hlt (bad) add int3 aas ret insl add orl pop fsubr xchg lret push add pushl sub pop push push dec (bad) xor (bad) repz jg movsl adc aaa (bad) mov add adc insb aad enter stc cmpsb inc sub push dec cmpsb pop sub pop sar movsl and repnz clc inc xor pop sub push (bad) push inc sbb push pop mov mov xchg lret je push pop add jno (bad) clc jbe out mov bound rcrl pop inc push ss bound shll stos test js cmp cltd (bad) std rcl jnp ds add sub xlat or cli dec bound jb repz mov push cli sbb add (bad) ljmp mov xchg jbe jbe ret adc test xor (bad) fsubrs sbb adc add adc roll xor fdivp push jge cmp sti add push in lods mov (bad) sbb rep xor pop mov lea dec fmul fmul inc mov xchg cmp mov push mov ret lret lcall enter sbbl (bad) and aam movsl pop cmp stos lcall jg mov dec mov xchg rcrl arpl push and mov pop sub pop sub xchg xor push adc (bad) out dec xlat sahf jge pop mov out imulb mov xor add nop ret xchg mov fisttp sbb leave pop test xchg mov sbb sub add mov lods mov (bad) mov stc jne es popa or push ret sti lahf lea or in push les aam inc lret xchg sub or jae movsb sahf xchg inc mov pop lret adc xor in pop mov pop lret hlt jo ds ret (bad) out push inc mov popa in add mov add imul jge in mov (bad) shl push fisubr in sbb add icebp jg (bad) js or ror add mov mov mov lods ljmp cmp adc or xor loop xchg aas outsb push push loop stos nop sbb jecxz js push lds inc dec mov scas xor xor lcall jnp repnz push jge adc push mov stc test xor push aas sarb add mov outsb pop or adc and mov inc jl in iret fs ret adc fmuls mov ret mov (bad) cltd add (bad) ja (bad) divb xor jl in mov add andl out pop icebp xor mov dec fist add int3 inc (bad) sarl push sarb add scas jle (bad) repnz xor mov sti pop sbbl pop addr16 shlb adc sub mov mov test movsl mov push dec pop int and das sbb jl push xor popf fcoml xchg mov adc or lret sbb (bad) push xor aam orl out std lcall out lods dec enter lods and outsb ret sub cmpl hlt adc sub dec inc add dec (bad) xor inc adc in insb fs and outsl or sub mov add enter and or lret pop stos push in cmp testl adc mov daa sub repnz inc (bad) arpl (bad) popa mov jmp jg xchg mov lret (bad) out mov (bad) ja or sbbl dec sub loope call lock aaa dec xor fcmovu mov insb cmp dec subb push or dec dec sbb and mov adc aam fs or sbb push and jmp sti lret fld out inc std inc and or adc pop mov repz mov jbe pop insb (bad) sbb adc int3 ret repz fldcw mov mov mov pop sti pop xor mov jg call push sbb push add jae and test loope in bound dec and hlt pop push jmp cwtl sub adc ficoml out push and pop or (bad) push shll shlb pop sub stos add insl dec push rcrb (bad) in fbld mov ja cmc lahf sub rorb jbe mov push and daa das jl push lds xchg dec mov stos out fistp jbe lods sub or ret pop into adc stos sub icebp xor xchg or sub daa jnp roll or clc jp xor mov and dec or adc mov pusha pop mov jbe jle test add lcall dec mov xchg (bad) fistl out xor dec sahf xlat and adc addl insl pop popf pop je lock in std aas outsb lock (bad) mov dec xchg enter adc xchg rclb xchg sbb ret loopne push hlt dec push (bad) addr16 lods (bad) cmp xchg adc jge xchg push addr16 or jg mov jp adc xor es jb aam mov and in (bad) arpl sub dec mov out sbb jmp and les fist xchg mov adc mov mov cmc pop inc pop xchg inc stos (bad) ja push cli dec test out loop lret loope pusha jle pop outsl xchg call add test jbe xchg push push pop inc gs scas mov mov leave mov add or push sub and scas rolb lds (bad) cvttps2pi loop jns psubb imul and push insb lds xchg pop sti mov fnstsw call ds fdiv aas outsl adc pop pop fdiv sbb or ss dec xor add add xor daa (bad) adc stos dec das jecxz jae jns test cli jnp add mov dec mov xor (bad) out int mov mov cmp xor das aad dec push aas loopne cmp mov sti and outsb mov lods (bad) jbe lcall pop mov jne icebp pop or pop pop out sbb lds adc mov pop insl and adc cmp icebp dec and fiadd or fdiv stc or aad adc adc mov cmp test and sbb push fdivs push sti cmp movsb adc pop in movsb dec pop xchg fld1 xor fmull repnz adc pop jns sbb lods les jnp xor cmp mov inc loop xchg loopne outsl push addr16 shlb enter push adc pop test ss imul xor (bad) outsb mov loope adc jg data16 je dec mov mov std sbb jnp jne popa jae cs mov cs and icebp mov inc cltd imul cli cld sub mov lcall es sub lret dec cmp push jle cmp cmc repnz sub insl jno mov cmp xchg mov aaa cmp or cmp cwtl (bad) mov mov bound xchg sub pop mov stc test mov mov pop (bad) xor gs jb xor aaa cmp inc sbb mov repnz fwait (bad) sub dec pushf jecxz scas int fldenv pop adc push sbb shrl xor out ds in inc repnz (bad) inc not ss mov push push mov sti stos ret lock movsb mov int3 aam inc shl (bad) adc push xchg mov jge or pusha dec inc cld out mov dec cmp cmp pop enter and clc mov repz in pop jl or xchg fcmovnu aas lock cmp bound jne imul arpl and rcr adcl or ret leave cmp ljmp adc dec loopne popf addr16 push sub std add dec ds or add cmp mov add fisttpll movsb mov repz ljmp int3 pop cmpsl js push repnz push daa (bad) mov gs xchg (bad) lea std sar lahf xchg lahf dec jp sbb lahf in pusha loopne movsb jmp push fistpl out mov out adc mov mov mov xor in jae inc push mov stos insl jo mov adc (bad) mov mov cmp inc arpl insl mov (bad) mov ja inc dec and pop sbb inc mov jmp pop or scas loopne out pop inc xor arpl push mov outsb sub pop loope adcb xchg fisub cmc cmpsl xchg add mov je sub xchg mov ljmp mov les jp movsb (bad) nop shll jle test popf sbb push mov (bad) pop fsubrs test lret int3 sbb inc adc jns lock mov lret gs imul mov add pop cmpsb insl aad add shl lods addr16 nop xor cld mov repz fnstenv dec push pop lock and inc seta mov mov (bad) rcll adc inc fcomps jno inc outsb mov xor sti inc push clc dec hlt mov test out mov hlt rcll mov fucomi dec popf sbb mov mov inc ret outsb and mov dec push in fdivrl jp mov sub jp adc sbb jmp and mov push and aad add or int3 in lret in mov cld pop fdivs (bad) out icebp xchg or (bad) in pop mov push lods xchg outsl jb aaa dec scas dec add out lock push sbb or dec stos cmp mov stos iret call cwtl ja (bad) js scas jmp mov test pushf sub lea ret xor sahf unpckhps es or loopne cmp test dec xor jmp cmpsl test cmpsl push (bad) popf xchg (bad) arpl xchg inc push enter cmp fwait ljmp fwait (bad) fstl push dec (bad) mov adc iret std jl icebp add xchg add call fninit pop lds adc add mov movsb xor aam fisttpl stc xchg jae or test iret pop pop cmpsl pop orl add lahf inc or sbb pop fs loop repnz insb inc out sti mov je shrb push jns stos loope rolb int3 sti or push xchg inc fnstenv mov pop in xlat pop adc xor push push push jge out sbb dec dec jle clc push stc std adc into jno sahf xchg notl test lods sub xchg jg xor mov dec mov dec mov enter inc data16 mov je inc hlt jmp rol out aam lods mov stc jbe mov xlat test imul hlt in or pop jmp jb adc xlat cmpsl mov rorb push pop outsl pushf cmp pop jp fcmovu jo,pt sbb or int3 or fsubp out aaa push ficoml and push xchg es push stos scas movl stc roll into test and stos cli inc mov pop jge push imull loopne lcall shl jp and das sbb fistpll pushf inc dec push push negb ret jno cmpsb push add loopne fnop test mov push jne lret loop jge pop sahf mov cmp dec and add mov test imul pushf jb ret (bad) push xchg dec sbb int std in hlt xchg aaa and aam push push push fstpl ljmp nop xchg pushaw xchg sub dec test xor (bad) cmp jb imul aas sub bound dec (bad) or stos ret cmovns xchg pop jecxz or imul aad mov dec (bad) pop dec fnop sbb fiaddl (bad) jecxz jae mov mov mulb rcr xor dec xchg sbb rclb jmp pusha cmc fdivrs cmpsb call dec xor xchg jns jg sub mov stos dec xor call or (bad) loop hlt jae addr16 mov imul and mov cmp insl cmpsb js xchg imulb xchg insl or sub or icebp rcll add add push push mov movb (bad) mov dec shr push mov and clc cltd stc outsb das gs ljmp lahf push jl arpl fsubs lods adc sub pop hlt adc jg mov ss lret or mov shr js push adc cmp cmp or and sbb or mov sbbb sti lods call pop arpl cld and sub rclb fimul cmp pop nop in out lahf (bad) xchg addb xchg rcll dec das inc lret ret imul ret xchg and adc mov jno fwait int push popa cs bound xchg cltd mov bound cld (bad) aas fcmovu mov jo sub pop jl add cmp and (bad) add popf dec lods push cmc xchg test hlt clc (bad) jle rcll push mov adc mov adc clc add (bad) in mov std int3 inc xor inc cltd pop pop in jae xor inc popaw or dec mov push add dec or jle popf xchg cmp cli jl mov lods scas xor inc xchg mov (bad) jo xchg stos mov xchg lock cltd sub xchg shrb bound and xchg lahf cmpl fbstp mov fdivl sbb outsb dec out cmpsb mov fisttpl jl inc ss pop xchg fcomip mov pushf ljmp xchg inc cld cmp movl jl add push sub jo mov pusha inc xchg mov pop nop outsb int popa in loopne mov sbb cld xchg cmpb ret jbe xchg pop cmpsl and sub cmpsb xor mov xchg in pop insb xlat cmp mov cltd dec rorl out adc dec cli nop mov adc lock repz mov sbb push sub adc nop ror sbb xchg (bad) lock int3 cltd iret mov inc dec aad notb mov jnp or pop add or cmp push mov add (bad) lret cmpsl and pop pop cwtl test insb mov mov mov mov and mov daa test dec dec add sub add lcall or cmp pop sub mov cltd mov push in sbb cwtl bnd es mov test fldcw push pop ret sub in pop mov push mov sbb pushf scas stos pop xor repz jle gs mov js jbe jb mov sub cmp icebp cmpsb dec jo xlat or pop mul (bad) xlat pop movsl pushf cmc lds jbe std out cmp mov and aas mov in ss push dec add subb test (bad) lods sub jb lcall fidivr xlat out cmp add lods movaps jns in mov icebp ds cmc mov pop and xchg int fwait cs (bad) jle (bad) ljmp push or push dec pop iret outsl jmp nop leave fndisi(8087 nop or inc outsl or pop xchg sarl cmpsl iret xlat movsb rorb adc outsl jae roll sub push jle rol mov dec int cwtl out mov lcall call mull pushf pop mov repz out enter cmp push push pop and ljmp popa mov dec jnp hlt out push xchg push xor xchg rcrl dec inc loopne stc mov dec add mov push idivl adc fmuls pushf or pop orl (bad) fidiv pop scas mov addl test fstpt fcomps sbb int3 mov mov dec call stos pop popa inc out mov (bad) gs fwait enter inc push les aaa (bad) fisttp sahf (bad) jb lahf jnp cmpsb dec or roll cs aad stos mov rorl and mov adc sub mov sub pop jne jno xor push pop cld outsl sarl and pop sub daa sub xchg inc dec mov out fmull lds js ss fsubrs stc sbb mov cmpsb jmp iret fiaddl ss std lea (bad) dec mov dec nop sbb fmull dec xchg xlat or jg (bad) jbe and inc or dec adc js dec fdivrl lret mov jecxz and sub mov std mov jp (bad) xor arpl pop data16 imul sbb fsub adc inc test dec add fstps into push insb mov bound sbb jno jbe shld push lods sub mov xchg faddl cmp jle and mov insl loopne adc call add jmp (bad) ror inc push pop mov xchg es pusha and popa gs jmp pop call clc ljmp xchg pop mov outsb cs aam push jne jle in xchg mov pop inc and push jge mov movsb fsubrs jp loope movsb xor sahf lret push int in cmpsl sub xor mov (bad) std inc push jp or jbe xor push negl stos je imul cltd cmp push mov adc js out pop push ja jp dec xchg out xor gs orb or xchg sbb cld pusha ss cmp mov sub cmp sub xor imul add mov shlb mov adc adc (bad) std mov mov mov loope cmc or or vdivpd std stc jbe push lock or fdecstp mov cltd aaa jge shr cmp call pop cmp mov mov aaa sub dec jo sbb jae inc mov mov fs sti push mov ljmp cmp sub xchg (bad) in popa enter stos not xchg mov mov iret push mov mov ja sahf minps repnz sub mov push scas cmc (bad) xor repnz xchg addr16 cmp sub jo fiadd jmp mov testl repz push or jmp dec jno fsubrs mov pop pop pop sbb jne xlat jge inc ds fisttp stos mov pop mov push sahf cmp pop popf leave pop sub fstpl in into cmp lock dec loopne dec fwait sbb mov ret jo,pn mulb inc call jbe pushf fbstp xchg inc push inc lods xchg loopne sti cmp adc enter xor popa outsb sahf pop xchg dec (bad) inc xor repz daa (bad) mov xchg sbb mov cmpsl jg mov jns aam cwtl jg pop pop cmpb das mov cmpsl push (bad) in test gs jb mov xchg jnp add out out add push mov fucomp outsb push ljmp out push into mov fwait inc sbb jg add adc push jb jo jno in dec insl fs test inc mov rol cld dec (bad) lea int3 xor xor ss mov int (bad) cld in jnp loop lods push push fist imul test mov ret loopne sti jp mov movsl and mov lock jbe pop inc and pop dec test das cli es cltd dec movsb test dec aas cmc aaa or stos subl xor or lea jge out rolb out loopne jns dec outsl stos and adc mov dec out or cs fimul push hlt popa pop lods cmp enter push sbb les (bad) push push push jae xchg inc xchg loope jnp xor mov xchg int xor jno add loopne cmp mov push shrb outsb xchg in into (bad) cmc sub mov (bad) popl aam daa ss add ret nop jecxz xchg lods cmpsb push mov and punpckhbw into into (bad) jmp mov ds inc (bad) cmc enter dec jns mov cmpsl stc (bad) jbe cmpsb mov popf test sub adc sub mov xchg scas pop lcall mov xchg mov or callw (bad) repz out fldcw inc mov pop jmp or or xchg aaa jnp test pop xor adc push cmpsb mov fsubr adc stos inc lcall mov (bad) in push adc xchg scas es mov (bad) sub xchg hlt push mov pop (bad) hlt icebp sub mov push flds fwait xor pop xor or pop lret aad or jecxz stc or push (bad) lret enter jns xchg in or xlat sub rolb sbb jo mov or adc push push mov inc cmp repnz pushf mov mov push dec (bad) insb mov adc sti xchg jo add fmuls std jae in hlt loope insl stos scas fcmovbe or icebp ja push clc movsb fdivr inc adc aaa jns sub mov (bad) cmp or in addr16 mov les roll or jmp leave mov add les or or ljmp icebp push jns imul in xchg sbb pop inc dec push xor xchg mov mov mov sbb int adc inc pop cmp mov (bad) (bad) xchg add mov xchg fcmovbe lret dec fs sar in xor ja and jns popf xchg ja nop and in mov outsl lock mov inc or dec loop push pop inc mov lods mov sbb aad ret mov push pop imul pop push or lahf mov and fadds sub lock popf (bad) sbb aad scas cmp bound mov dec iret (bad) hlt jnp,pn mov jge,pn mov xchg add je xor dec imul call inc mov cmp mov cmp push xchg rolb xchg ret xchg lds movsl mov push popa bound test xchg jge in leave add scas lods add pop adc sbb lahf call (bad) out adc leave loope daa ret cmpsl and test (bad) pop sbb lret inc (bad) sarb loope stos xor ret rcrl call fsubrl int jg fist xor (bad) push mov push cmp xor cmp xchg mov stos loopne movsb adc inc insl push fcmovnu push xchg icebp orl and cmp sub outsb xor xchg imull xchg out rclb cltd in sub and xchg pop repz std xchg hlt jp cs jge cmp push inc mov and cld lods out cwtl cltd mov mov xchg inc push xor addr16 int3 mov push out and mov add lcall xchg jecxz aas imul mov out cs adc nop movsl or lret or cmpsb inc dec insl stos or jg movsl push and sbb sbb mov inc js loop das dec sub in scas fldz mov xchg icebp gs jl cli (bad) xor or fistpl dec xor cltd sbb ja insl pop stos or push pop in mov fadds inc cwtl dec cmpsl mov rclb lret clc xor jo pop mov outsb test jnp hlt sub std jmp sahf clc inc mov xor hlt nop andb cmp inc sti addl push mov mov sub testl mulb cli (bad) (bad) bound jecxz in mov dec jl jle and xchg lods pusha cmpsl mov ret aaa adc pop jnp jns mov fwait xchg out mov shrb sbb je push xchg test mov cmp (bad) xor into cwtl (bad) mov xchg cltd dec loop mov fs jae std mov imul jp dec cmp push sbb idivb (bad) xor adc cmp in insl jbe mov cmc lea dec jo or and pushf inc je faddp imul stc loopne push jl popf jne push repz push cmpsb int fnstenv dec fildll push imul mov js xchg in mov xchg test gs xchg ljmp xor in inc repnz aad fwait xchg shl xlat int mov js or xchg out push jnp roll cmp ds cmpsl lahf cs mov and and and adc into dec mov adc pop jge jmp aas xchg xor into jo mov inc iret dec push outsl mov cmp in mov iret mov popf push (bad) hlt xor cmp sahf idiv mull pop aas fs iret cs adc (bad) mov arpl pop mov pop stc xchg sub add scas cmp fbstp rcll jno push mov out cmpb cltd and aam lea movl gs push or sbb mul hlt mulb imul int3 dec test pusha mov pop ret add shlb pop mov (bad) mov and fildll jno add (bad) aas xchg add (bad) mov mov loop sbb jecxz jg sbb sbb mov inc (bad) out aad cmp mov inc leave mov dec mov je sbb cmpsl insb aaa mov ficompl push xor jecxz mov or and push pop pop xlat push in pop fsubr notl loop mov xchg dec daa cwtl sbb mov cmp pushf adc stos iret cli pop imul xchg mov sub imul insl inc jae pop movsb jmp and sbb inc and sub sbb rclb (bad) int in ret dec fwait push sbb cmp lock mov pop test adc or jo test cmp (bad) jg loop sub jnp notb pmaddwd jecxz push cmc push cmp jae xchg (bad) std clc mov xor fnstsw lods or add outsb sbb inc aaa jge adc loopne cli outsb adc (bad) push imul (bad) xchg push dec xchg fxch orl jp jp scas adc xor xchg inc mov and lea test cmp mov push cmpsl (bad) pop pop push push push xchg jae bound mov (bad) jge das leave jp sti mov lds out mov xchg (bad) into pop je xlat aas addr16 jp cmp test adc pop int3 ffreep jecxz xchg mov jmp mov xor sti lods push mov jne inc nop decb add movsl push inc pop sub sti dec test cli sahf aam mov sbb test xor addl and cli mov jecxz icebp loop bound cmp mov out xorl jge add add cmp sbb inc xchg jb insb lods cmpsl xor add push insl fcoml xor (bad) gs lds sbb ja (bad) pop jb pop fidiv (bad) push push bound xchg sbb mov fadds test dec inc outsl icebp jl mov sub mov sbb mov inc pop lds add test sti or xchg popa arpl icebp bound inc cmovle hlt add add xchg arpl push mov adc xor dec or scas enter or (bad) enter mov adc mov repnz mov setae pushf jp out rcll clc addr16 dec push pop lahf cld mov pushf scas cli inc int3 inc sbb sbb sub or jb shlb popf ljmp cmpsl das ljmp rcrb aad sbb sub or mov pop (bad) cmp lea pop lret aaa test fimull cmpsl dec mov stos pop push xlat leave xor xor movsl push pop inc and (bad) negb movsl iret xor out xor cmpsb adc push movsb lret outsb add xchg lock or incb push mov mov es mov push dec ret stc out scas cmpsb mov cmp and xor mov push lret jb dec int (bad) add sub mov jl jge mov adc addb pop (bad) cld xor add mov push dec jae xchg sbb dec dec push int3 push mov les cmc dec push xor cmp inc ja xchg mov es pusha pop inc (bad) mov imul mov scas xor jl cmp add imul sbb adc enter not scas inc sti das imul pop test xchg (bad) and test dec les arpl xchg icebp add icebp inc out mov mov cwtl out aaa dec (bad) xor cmp ja lret sti lods mov mov sbb ljmp pop call mov aam add test jge out (bad) std xor sbb mov jae fs jb in xchg nop shr xchg je sbb repnz mov in cmpsb sub repz loopne das sub (bad) ficompl fidivr (bad) outsl cmp scas and sbb orl nop sbb push push mov push xchg push pushf sub pop xchg ret xlat imul repz mov lock fistp push cmp xor mov (bad) xor stc (bad) pop mov testl (bad) fisttpll (bad) aam mov pop stos into jge leave sarl ss mov sub mov pop pop bnd mov add sub stos stc sahf jge xor ffreep mov jecxz inc lahf repz addr16 (bad) shl dec int3 in lds and lds push sbb sarb aam in rcrb jns jg mov outsb mov test hlt in int mov hlt cwtl (bad) movsb jno (bad) xor and jle and pop icebp pusha jl cmp sbb sub mov cmpsb xor (bad) and xor fadds push idivl scas cmp repz in add cltd aaa fwait xor ret inc sub lock int3 push sbb and lods and rorb (bad) xor mov lahf jno (bad) bound jno ljmp sub sub pop cltd xor inc scas scas clc mov (bad) mov rorb (bad) int pop mov aam cltd mov (bad) xchg pusha cmp pop cld jb fwait scas jle mov iret sub cmp xor nop icebp add xchg adc stos movsb cld and ds icebp inc xchg stos mov push mov and fsubrs popa lods xlat jnp xchg mov xor ss mov mov xor fmull mov mov cld aam (bad) lret adc jnp dec ss flds xchg sub xor (bad) cmp imul and jmp imul xchg out jl jp cmp lods pop loope insl mov imul xchg aad movsl cmpsl xchg lret mov test imul add int3 dec inc push fstps in ja dec mov dec push xor (bad) cmp mov aas jle hlt and clc nop mov mov (bad) lea stc xchg in push out arpl mov xchg adc and test fisubrl sti sub mov xlat pushf inc add int3 scas (bad) pop and enter sub insl xor sub fucom pop daa popf add incb testb cwtl mov bound xchg mov (bad) or xchg push cmpsb dec adcl in sub stc sbb into add push imul dec lock pop jl gs out inc mov decb das inc scas imull mov push mov sub xchg sub imul loopne fcomip mov outsb movsl repz lea (bad) mov lret (bad) adc inc mov stc imul mov inc push push jge lock dec sub mov rcr fsubrl fucomp movsl xchg mov lret push push inc lds and lock or push mov pop or fabs cs and cmpps ss aaa sub inc test cmpsl imul and sub inc mov pop or js and mov ja leave mov pusha pop xchg in lea stos test daa push pop push mov fmull std fs sub mov jmp addr16 mov roll inc ljmp leave icebp ds xor loope aam mov pop mov push cltd insl out ror push cmp inc cmpsb xor sbb pop (bad) call addr16 movsl jno sbb inc and dec out mov pop sbb add lds xor sahf dec pushf or cmp into add xlat aas or aad outsb mov mov cli pushf movl dec ljmp (bad) push pusha jns fldcw push inc add jle pop cmp js popa push push or (bad) xchg (bad) fcmovu mov mov nopl push iret add bound xchg in jge mov cmp std enter outsb jecxz fnstsw xchg mov xchg cwtl cmp sub push push and aaa cmp push add xor lret pop cmp xchg cs rcll cs xchg aam test popa ds inc lahf dec cs jnp cmpsl loope xor dec fwait insb stos adc mov fs xor lret mov xchg xor mov pop fldt jns imul les inc ss fistpll push pop lds cmp call (bad) jecxz add xor fcompl fidivr add pop data16 aas cltd popf int3 mov orb (bad) xor (bad) movsb jmp add outsb lret das push or sbb adc mov hlt pop mov jnp inc jnp jle xchg (bad) icebp or pop and jnp std mov or cmp (bad) in and adc shrl aaa cli mov push popa or dec lret ljmp sbb xchg mov push mulb jl cmp inc sbb xor dec movsb mov mov lds icebp mov sahf lret (bad) ret test jno and mov pop push cmc repnz iret cmpsb push jg dec inc adc in sub mov mov sbb add jae loop leave insb (bad) xor stos jno sbb mov sbb test mov xor test mov cwtl cmove mov sbb xchg pop in dec pop jmp popa es lds and outsb test sbb idivl pop in mov arpl xchg xorl mov xchg pop mov out dec rol cs pop xchg (bad) int sbb outsl pop push rol jnp sahf iret lods pop int3 xchg rcll pop leave dec inc jo dec jp dec sti xchg shll mov pop cmp adc pop (bad) fldcw clc aad adc data16 and pop sub dec sbb xchg imul in push adc dec xor (bad) mulb or fiaddl mov push push add jecxz xor lods and cmp sub lea sub cmpsb inc add push sub xchg lcall xchg pop xchg js cmp sub ljmp das mov sub lahf jmp pushl hlt lock mov cmp mov or ljmp xchg les push (bad) push jo int3 dec fwait mov adc mov (bad) mov arpl shrb in sbb pop cmp mov movsb pop (bad) jbe leave scas pop inc inc wbinvd jmp sub (bad) push push repnz ja sbb xchg dec or fmuls not cltd xchg mov jb fistpl xlat ror fdiv push repnz pop in cld sub ret mov aas jno xchg mov aad mov hlt jg push stc insb clc pushf mov jmp loopne mov mov dec ja sbb fsts cmp notl pushf mov push sub lahf cmpsb int jbe cli jle pop xchg dec xor fcomps fimull adc pop fldl xchg aas mov dec pop lcall pop mov adc cwtl xor jge add aaa shlb add xchg jno outsl ds mov in push outsl jbe pushf jne lods cld andl pop movsb add xor bound enter jl pop jecxz fs cmc fwait aam in sti iret jmp push or clc adc data16 pusha lcall (bad) cltd cmp push jg int3 mov sti push fcomip adc movsl sub andps pop push lret and cs and add stos aas out notl add (bad) loopne loope adc push sbb pop inc rcrb cmpsb add mov lds jg xchg push cwtl (bad) fmuls mov mov loop push imul sbb jp xor bound (bad) push pextrw sbb hlt pop add pop stc push arpl push in pop jge stos inc inc inc cmp add cltd pop aad out and popf mov repz jl add (bad) in dec ficom cmp sti das insb mov stc mov stc push jg xchg shrb (bad) in push cmpsb dec shl aam jb sahf jns in movl ret mov pusha cmp sub lods xor pop push cmp or js jl lcall mov pop lock xchg jns fs mulb cmp loope dec mov mov inc xchg mov dec inc aas add add loope pop outsl arpl cmp int scas imul fwait jle shrb int3 cs or insl negl xor sub mov js test dec (bad) ljmp daa mov jo stos int mov ret pop mov xlat xor ja mov loop jle sahf stc pop cmp arpl push (bad) mov pop (bad) ja and xlat cwtl push loopne fs xor or test (bad) int3 sbb mov mov movnti mov bound cmp jg xor ret loop cld psubw jl fxch es jmp push aam (bad) (bad) lock xchg mov xor mov ds and lret in sar ret xor mov ss mov jle out pop hlt cmc xchg sbb xor daa stos ds xchg inc or out stos dec repnz jo jmp lock sbb mov pushl inc shll cmc in inc fcoms jp (bad) insb jns pop push insb aad dec inc push or push jns sti push seto loope das (bad) hlt cmpl mov sbb sbb in jb sbb xchg rcrb push dec movsb add pushf mov mov movsl mov fsubl ljmp outsb (bad) adc out cwtl cltd and (bad) in pop xchg loopne daa es push enter cmp or (bad) jne jbe sti mov jnp icebp cmp cmp pop nop stos mov jbe jmp data16 movsb sbbb lret cmc sub pop mov stc neg adc dec lcall sub outsl (bad) sbb cmp int or repz sub sub inc lock mov cwtl lock clc sbb pusha mov clc (bad) addr16 roll js inc sbb out sbb inc adc cmp pcmpeqd add (bad) ljmp mov dec (bad) into rcll call xchg mov in fisubl andb and push (bad) sub out and mov inc inc push test cmp sub cltd cli (bad) je add popa call add push push movsb jle ds (bad) hlt outsl sub dec xor jle add mov push jnp pushf sbb dec push pop or aam inc sub in out dec out adc in xchg fmulp in fildll push ret out jb ret and test xor xchg dec xor cltd sbb notb or loop ret sbb add mov sahf lcall outsb aas nop push mov xchg mov test fdivl xor fcmovnbe cs cmc mov (bad) pop aaa mov fwait sub jo call popa cmp jg adc xor or jp mov jp sub outsl aaa lock xchg cmp xor lcall push xor add inc aam in mov insl gs loopne aam das les pushf dec jb subl mov call mov adc stc xchg aam loop,pt test cmp pushf cmpsl xchg lds out sbb lcall (bad) add push (bad) push push fistl cmp jb xor out mov xchg repz adc fstpl rcrb xor push jmp dec stc mov ss cmp sbb fisub pop mov xchg fdivrs cs pop dec aas push iret in movsl push inc dec ficoml lret sarb mov push mov popf jle cmpsl ret and (bad) out shl scas in sub xchg js (bad) jp push jae push mov in cwtl or mov pop jae addr16 pop jl in sbb int push scas fildl sub daa popa enter scas fcomps cwtl dec push pop jae in jo (bad) bound add aas cli sub push shrb add (bad) jecxz jge in or or jb or pushf mov lret sub adc icebp out sub in pop popa mov push inc dec xor (bad) sub das pusha movsl jnp les jbe sbb push stos sbb mov mov xor pop loope xchg cli lods cmpb cmp cwtl add xchg jmp out or gs js stc data16 outsl repz fcoml insl (bad) inc jb add mov loop das ljmp fwait (bad) outsl xchg (bad) cmp inc xchg push aam xlat xor push dec (bad) or pop jns ds push inc mov adc icebp xchg sbb pop adc mov int testb fs (bad) lods inc out mov lock push std jmp pop shll (bad) imul insb mov sbb imul stos pop iret and mov out imul scas mov sbb xor sbb cmp jmp addl xlat fbld outsl mov ret fwait jmp jb fs xor jecxz lea fisubl lock cmp sub or outsl (bad) mov pop xor add xchg and es cmp xor push fwait ret dec imul pop and clc xor xor gs push sub arpl xchg iret mov mov xlat push mov lods add fsubrp sub add adc psrad sbb push mov mov cmp xor sbb sahf sub fadds outsb cli mov loope mov push sbb popa jns lods das and add mov jg mov (bad) fldl2t xor rolb mov clc idivb lcall mov push pop jle icebp fnsave lods sbb dec adc push aam stc movsb outsb push stos dec xor mov and das xchg insb sbb pusha ss or jp fsub add fwait adc scas pop mov imul ss enter iret or lret (bad) test mov mov sbb cwtl stc jmp push sub popf jbe (bad) imulb mov out mov mov lds mov cmp sbb jp xor pop mov sbb xchg fwait and repnz xchg notb jmp cltd push cmp sarl js xor dec sub lods sahf hlt push imul iret mov cs xchg xor (bad) or inc cmp out pop or repnz dec inc xchg fwait mov and cld jle or jp arpl lods lret mov fistp cmp arpl push stc push xchg mov mov cltd mov adc pop loopne mov sarl dec rcr sbb jae adc jp xchg xchg mov (bad) test popa xchg out ret xchg shrb divl jne mov test fdivp dec in mov mov decb repz jecxz xchg imul push dec mov dec scas cmpsl dec jno jmpw mov and in (bad) mov sbb ss mov js sbb mov xor mov xor cmpsw leave scas xor adc mov fdivrp inc pop push mov mov scas cmp popa int adc rcrb fidivl or jp outsl ror ds jge dec scas rcl jb lcall sub popf xchg popa cmpsl enter cmp or movsl cwtl mov lock call daa and ret jb inc pop mov add mov sti outsb out out stos call pop dec cli mov loopne sbb fbstp jns mov push xor in pop std sarl cltd cltd int3 mov daa adc cmpsl jecxz push xor inc fs int3 imul es loope jmp inc shrl mov add ja daa pop les pop clc scas sbb sub sub out xchg popa add sti cltd out rcrl add (bad) xor les iret mov push xlat dec pop dec cwtl adc icebp shlb adc add xchg daa sarb sbb in ja int sbb cmpsl mov xchg pcmpgtb add pop mov mov jae mov pop inc and int xor push movsb jnp imul mov sarb movsl cld xchg xchg ffreep xor mov push lahf aad push ud1 mov shl movl jae rcrl sub mov shlb ja jg dec push xchg cmp add rolb pop add jo add push orb mov xchg roll add add pop mov inc aaa sub shrb xchg ret mov leave lret add popf mov jmp lahf iret into mov dec int and lret inc pop ret push cmp push sar pusha push or lahf inc pop mov fistp xchg push mov jo mov aad xchg or pop push psllw out gs fisttpll xchg or sarl lret ret shlb sub in inc (bad) mulb leave push mov pushf call in or cmpsb push pop cmp mov cmpsl or inc lock xchg dec xchg js imul les hlt cli jge sub in les lret cmp scas jbe test cmp fcomps and (bad) jb lods sbb in std gs lods popf xchg pop mov fisubr outsb loope adc movsl jnp dec lods cld fsub test repnz jp push adcl push fcom addr16 pusha and mov jnp or jo xlat incl ds adc sbb mov rcl aam sahf lret dec cmp je shlb lcall addr16 out xchg fsubrp push push push pushl cld or stos loopne scas adc cmpsl xchg xor jns aad stos mov inc cmp push fs fdivrl inc cltd xchg inc adc fdivrp (bad) mov incb inc and sahf bound add pop jbe adc mov add mov xchg mov jecxz dec sbb mov je and hlt mov inc pop (bad) mov jmp mov subl mov sub sbb (bad) sub in inc into frstor in push mov std fiadd dec mov or pop dec imul and mov jl lods or push fild outsl xor push std popf and scas push inc xchg test mov pop sub ret sbb arpl sub ret gs pop addr16 gs popa mov mov icebp xchg cmp cwtl rcl fild xchg (bad) js and stc (bad) cmp inc inc in dec rolb sbbl sbb mov loopne xor (bad) push je in mov hlt mov mov in addr16 sbb fldenv loopne lret add dec loopne fidivr mov leave mov scas jnp adc icebp jp jae lock lcall out push add lahf je push mov and dec adc and je enter cwtl inc xor sbb mov fwait ss (bad) mov (bad) (bad) sub xor pop mov test out fcomps jmp int3 cli sbb xchg fisttpl andl push mov jp adc ja add mov ret or lret fwait sar pop push pushf rclb pop (bad) (bad) imul pop push dec add sahf add loope (bad) lds push sub out jnp jmp adc add sub lds fs jmp lods mov mov fprem1 and adc jmp sub rcr popf insl mov fmuls es jb rorb dec stos xor mov lret sub insl leave push cmc xlat orb loopne,pt lret sub mov cmp jecxz rolb sub jp pop test scas (bad) mov std pop add mov sbbl aam (bad) ja push jno pop ret insl mov dec mulb rcr std cmp test add mov xor data16 push dec not mov push dec sub mov xchg pop sub sbb fwait insb mov testl xchg (bad) inc xor imul jg sarl in pop mov std mov sarb adc xor insb pop fisub inc cs enter mov sub and cli and sub xchg pushf in jg xor dec lret repz iret mov (bad) call psrld push data16 pop or imul insb xchg into ret jl test in xor cmpsl jle and pop icebp inc pop sub xchg in sub movsb loopne je ljmp mov push jmp jo (bad) movsb cwtl cmc add into jl pop ljmp jecxz jmp push (bad) xor xor cs inc inc add scas jno inc dec jb xchg add pop mov rorb xchg fimul mov push or ljmp sub xchg arpl xor hlt inc test test dec push jle add ret xlat bound bound xchg xchg inc dec fcmovnbe insb imul or inc in stos push loopne cs mov mov push jle adc sbb arpl pop icebp dec lods inc loop repnz add jp inc push jmp mov jae lahf rol inc cwtl adc and ds jno dec pusha jecxz lcall sbb mov push add jecxz pop idivb lret xlat jmp dec cmp xor adc jb xchg jb mov adc sub inc fcoms mov (bad) lcall push cmpsb push mov xchg jl popa fxam stos pop pop decl and arpl push nop scas mov idivl xchg iret sub aaa jl mov pop aad xor test call mov ljmp xchg test mov iret ja inc dec decb and adc cmp fadds inc clc push lret adc mov cli fstps aas sub sbb xchg mov adc stos xlat clc push jmp dec xor push stos das adc aam leave dec jle add in lret daa push push scas fwait jge xchg rolb jp rolb sarb xor push scas jo mov xchg add mov insb ficomp inc fs aam mov mov and sbb addr16 fldcw jb or pop or jnp mov imul mov clc sub dec add inc pusha jbe ds mov xor int3 gs and ret fnstcw dec dec pop and jge xchg (bad) push mov addr16 loope xchg lret adc push jne jle xchg pop fsubs mov dec es fcmovnbe shrl sub jno mov fadds add lea push ret adc adc loope dec adc jne mov mov sub fdivrl xor sbb dec fadd fnsave mov ljmp addr16 (bad) sub in push cmpsb push jle test sbb jno rcrb sbb inc dec bound push bound (bad) adc in lret ljmp jnp add sbb push mov enter inc jp mulb sahf lds pop and out sbb inc mov test (bad) pop cmpsl xchg (bad) movsb jne movsl cmp xor push insl outsl loopne psubsb or and dec adc dec scas lods sub cmpsb ret jns xor insl mov mov int dec sub cmpsl aaa and jns adc lcall dec push cmp or xchg xlat cmc (bad) (bad) or mov test jmp pop cmp scas (bad) mov mov xor stos movsb dec in outsb cmp mov stos sub out cmp mov sbb add pop add les pop fildll mov jge mov je inc push ljmp or pop gs pop daa xchg mov repnz int aas xor push mov xor push dec lock jecxz nop mov push arpl dec adc mov cmpsb lods jg inc test je jns jb add addr16 sti add dec arpl pushf stos (bad) divb or dec or jne pop in insb push (bad) sbb lods (bad) mov insb jmp mov cmc mov sbb fwait pop das (bad) aam int3 jmp (bad) sbb mov arpl aaa ss test lahf (bad) out imul cmp jmp mov divl push (bad) rol bound push or mov mov pop and xchg sarb es scas pop jecxz (bad) roll stos pop jnp push pop das (bad) cmp add sahf stos jns mov sahf fwait std loop call cmpsb xorl fstps push jecxz loopne pop inc cmp dec push outsl pushf mov mov cwtl jae movsl mov notb aas out jo cmp loope mov les cmp data16 and push adc push stc push push push or and in jle mov jnp into (bad) mov mov iret sahf mov jbe cmpsl movsb mov iret xchg pop into mov mov push add jo sti cli sar lcall incb stos cmpb lock sbb jo aaa and iret pop add sbb xchg add mov pop mov push enter je lds shl cmp mov cmpsb roll mov xlat dec push or sarb inc and pusha push push add xchg adc mov jbe out xchg jle fsubs clc inc xchg push inc xor adc rol and push mov int xor jecxz leave das xor push sbb cmp mov jmp push sub mull ror (bad) jns xchg mov mov xchg xchg push jb cmp das sub fwait std inc add and dec fsub dec pop mov adc xchg xor and arpl outsb and push (bad) aad shrb mov call pop add push cmp adc cmp xchg adc sbb pop pop jns mov push sbb pushf fs out jp aad sub out sahf loopne push dec aas or ret sub cmpsb in movsl mov stos movsl and inc in inc or add cwtl mov pop jle push xchg lret insl and test out push sub into pop sbb lds push enter push push cmp mov xchg add cmpsl icebp and into pop imul jmp cmp mov and jp and popa mov and pop push fidivl imul jb (bad) in ss enter lods nop aad push or adc jg mov xlat cltd shl and fldt outsb xchg adc jne dec gs int dec aam stos add and aas inc cli fidiv aaa or cmp fisubl fisubl cltd fsubs or sti cmp rorb insb fldenv mov jns inc xchg adc mov sbb sti sbb es ficompl addr16 add negb push je imul popf aaa repnz nop in nop jmp je xchg sbb mov or push adc xchg lods jmp jp push push in clc aad (bad) sub stos adc mov sub hlt les cmp insl mov (bad) mov loopne jo push daa inc (bad) cmp cmpsb loope or jnp mov xlat xor push cmp adc xchg scas jo popa sub inc sbb sti and pushw jecxz pusha inc cmp jge sbb xchg mov stos dec lds or jl call xchg xor jle int ds cmpsb movsb push dec in out and test cmpsb and dec or (bad) scas and std inc outsl mov ljmp sbb xchg sbb mov ret sbb (bad) or inc xor jp push mov js jmp xbegin xchg mov cmp mov (bad) outsb jae repnz movsl movsb push jmp stos mov addl dec and pop cmp mov cmp add stc stc sbb or xchg push outsb jg pop fadd or jae (bad) mov push push lahf sbb adc adc insb pusha pmaxsw cmp add mov scas movsl aad and gs outsl enter dec scas xchg dec cltd push insl xchg enter inc cs pop push loope or inc scas outsb jno (bad) xor dec jae lret mov or aas adc pop (bad) mov in cmp in sahf mov push adc and dec xor pop jle mov lret push mov ret test addr16 fdivl ret inc pop push int3 mov or push and jne mov pop scas xchg xor aas lods (bad) stc xchg fild add int3 cwtl lds (bad) mov ret cmp and and shrl addl fstpt dec push pushf rcll push xchg ss add push mov hlt adc mov stos cmp dec mov loop outsl mov dec cltd cmp fimul sub adc stc cmc mov pop xlat inc lret test stos add jle (bad) mov xchg xchg push lea xchg mov mov js (bad) push hlt push jmp test ds dec mov in daa int3 inc and in loopne icebp ljmp sub aas aam mov sub xchg ljmp incb nop inc jae mov push roll icebp aaa cmp call je or sub mov call fisttpl mov addr16 mov sub rorl ljmp jb xchg sbb out xlat repz add imul and adc jbe out jo ret gs daa inc cld fwait mov or dec cltd popf and addr16 fisubr push fdivp js and repz jge into lods fildll jmp jge sbb xor pop sub divl pop inc mov dec in cmpsb add and push sahf cmp mov push jp lods or jle jno cltd lahf enter fs xchg xchg dec lcall jbe jmp hlt movsb push push or les lahf out add ja jmp loopne dec sub into jns cmc adc dec or pusha mov fwait add push mov xchg gs adc inc jno mov imul fisubr fnstsw fwait or mov pop leave cmp push and inc mov dec add mov jne imul or mov scas xor aas in inc xchg mov movsb and add (bad) xchg bound (bad) lret mov shrb gs je inc test cmp in jae int leave mov lods aad repnz ljmp dec sbb jae jnp fimull mov loop hlt mov inc mov jne dec rcrl divb dec jno into les mov jb lea enter dec fwait aas jae scas pop addr16 pop cs das lret aad mov cmp (bad) bound sbbl mov repz mov pushf adc sbb sbb into cs shrl loopw and mov out mov bound in adcl mov shll loop lock and mov insb arpl xchg outsb push or mov mov and addr16 stc (bad) mov pop add in out xor xor scas (bad) mov out sarb nop or push sbb jl pushf cmc enter lret insl mov pusha stc lahf xor pop mov pop xor int3 dec in jle scas push test imul int3 adc sti cs xor dec dec cs jb sub mov xchg jo cmc out rcrb xor sbbl and test popa xor mov and jno and dec mov les inc mov xchg cmpsl jb mov mov pop sbb jne or sub inc test popf push mov add jp iret inc mov and mov jmp push shll pop mov xor cltd jg stos xor push push mov xlat inc adcl (bad) dec push cwtl or mov lock lcall jns testb xchg jecxz jg (bad) or popf inc xlat push cmp aam stos mov mov or pop enter nop clc xlat mov test mov xor add lret or mov cmp into jp push or les push popf and inc inc pop aam data16 push pop enter ds pop inc idivl mov cwtl inc push insb ficoml push ja pop push pop pop outsl scas movb (bad) in lea add jg xchg add popa adc int (bad) test repnz cmpsb repnz in add inc (bad) cli add insb xor sub cmp mov sahf mov push lret stos jno cmpsb ret jno scas pop mov lret cmp inc push in pop pop add lret mov sti jnp adc inc sti jbe repnz pop fbstp in mov sbb dec cmp lea mov pop sbb aas adc push rorb cmp ss pop test mov mov dec data16 leave sti dec dec adc sbb mov dec inc lock test inc mov aad mov movsl xor inc test (bad) fld cltd repz pop sbb xor (bad) mov shrb cwtl mov sub movsl mov jge scas (bad) icebp or dec aas xchg cmc in mov xchg fadds jo movsl cs stc pop out add int3 xorb xchg jge daa lods inc and mov adc icebp bnd inc stos (bad) push push inc in mov mov and fisub aad jo ja andl ret mov dec movsl adc cmp push add or dec roll stc push insb insl dec or push mov inc push or sub mov loop js into ljmp dec ret cmp mov cltd fcoms and add lock fnstsw jae (bad) xor pop fisub loope jmp sub add cmp les daa dec or movsb and add scas jb jecxz or xchg arpl pop mov pop jmp mov adc inc dec mov dec lock xchg les and in mov gs je jmp rolb pop xchg outsl shll pop test (bad) test sbb cmp jnp test or jp test fcompl movsb outsb mov pushw cwtl aam scas sub xchg or sbb mov xor add xchg xchg inc movsb lret test mov xlat cmp sub je test into pop cltd cmpsl mov out and xor and fcomps adc mov jmp dec pushf loopne lahf add push add push loope insb outsb jp jp add rolb fisub sbb loop lret sub push shr fldt (bad) scas (bad) xchg scas (bad) icebp aas lcall (bad) push sarb jecxz pop sbb inc or int3 shrb inc adc iret outsb divb xchg sub or cld jae pusha sbb clc clc mov fnstcw adc jmp dec mov or aad in ss test or loopne xchg xchg pop sub je pop (bad) iret pop mov pop dec (bad) sarl jo das rorb (bad) mov jnp push sbb negb (bad) out xorb (bad) les imull icebp fisub add and int3 or push je cmp or leavew movsl fstpt pop jno enter or roll fldz cmp mov movsb mov or std add jnp and loope popf xchg sbb push lret mov in inc fnstenv fcoml push (bad) (bad) aad cmp pop or jae idiv pop pop aaa loopne icebp ds mov add lahf cmpsb adc inc shrb push rorb pop inc sahf xor mov cmp xchg mov sbb adc xchg outsl pop ljmp push arpl das fs (bad) rorb addr16 cmc pop fidivl xchg loop orl ljmp add cld add xorl repnz and mov aaa and jo roll inc mov out ljmp mov ss in test adc xor xor inc xchg fistl movsb sbb inc push inc push jle or mov lahf pop jnp pop js jb and and into inc insb stc repz mov fwait loopne jl pop std call fwait jl mov ja (bad) pop push daa fwait test xchg out movsl pop int fdivl outsb call stos or dec mov ret mov mov lcall sub imul mov push lret jbe inc mov ret sbbb sub push fcoms xchg stos mov cmp stos pop jmp call or aam sbbb bnd adc or std xchg mov cld aam (bad) int3 push xor push js rorb sbb test sub insb pop incl mov test nop repnz dec inc mov test rorl pop push jns pushf mov cld std rol mov xchg pop cmp out je inc fcomps imul xor fucomi push jle leave mov push pop rorb inc aad or push pop mov or je inc (bad) mov addr16 mov mov out xlat loope outsb fldt inc jb arpl add sbb and push and adc mov in mov jne jmp and ret jmp jne sbb jne jns leave dec sbb add xor and sbb out inc mov jmp dec (bad) in mov mov mulb jb cmp sbb push mov cmc pusha push xchg addr16 mov xor bound lods push or cmp mov jmp sti stc and sbb or push in jns je inc orl insb xor mov xchg cld pop mov inc fs dec lds inc scas cwtl bound iret outsb inc lret push pop into and jmp xchg push or pop or or xchg jno (bad) (bad) dec mov test (bad) ljmp sub cld lds xchg pop fsubrl loop sub pop pop pop sub and mov add cmp jle sti push dec gs clc push pop sub jae mov (bad) xor ljmp push jg cmpsb jecxz jl mov mov in les xchg inc adc sbb mov adcb rorb mov cmp bound ret mov bound pop (bad) jne sbb add stc ror in xchg sbb sti cmp call cmp hlt adc into mov dec adc or or mov mov pop sbb scas push mov xchg loop movsb frstor insl xchg xor outsb dec or test nop ret leave pop cmpb adc sub mov shlb outsl loop in popf fnstenv jno out push or push icebp xchg sbb daa or fisub jb xchg addl sbb ret lret adc lea cmpsl xor lahf adc push cmpsb and xchg pop pop int3 inc dec addr16 ss pop dec ret sahf andl or addr16 cmp push cmpsb cmp cli fist xor or cli hlt push test jo and ds test rclb les int iret out mov push (bad) (bad) hlt out loopne mov loop nop (bad) mov and mov movsl int3 cmp sub cmp movsb cwtl push mov hlt mov push movsl mov cmp out jno (bad) mov in pusha es jno jnp clc aam out jno sarb pusha push (bad) sub jp (bad) loopne dec (bad) int3 xor xchg xchg shll out adc push lret repz ljmp mov pushf repnz pop mov mov out popa js push pop push clc sub (bad) loopne imul push mov add xor or es fwait pop adc leave adc jp pop add and movsb mov imul cld add pop cwtl dec clc movsb ficoml fstl mov (bad) divb or dec push (bad) xor out and dec repnz jecxz mov lcall jecxz sub mov movd loopne imul sbb push pop dec les jecxz repz cmp pop imul mov sbb (bad) icebp jb xor loop mov int loopne iret incl out js adc push (bad) xorl lahf push imul mov jae pushf adc mov repnz xchg jo in aad push das ret loope pop (bad) aad das mov ret mov ja pop mov inc push nop (bad) orl and or enter test lds push jl mov adc scas adc mov sbb out imul (bad) sub addr16 mov ret in repnz pop push jl inc int add add mov cmp fwait ljmp push dec mov cld mov push int3 jnp adc push push lahf nop mov hlt nop mov or xor loope bound (bad) idivl mov jbe pop cmc mov lret icebp sub jmp ret ret pop xchg out cmp int3 add (bad) divb adc mov xlat push insb pop and push stos cmpsl not adc das les pop repz jg fidiv mov imul bound jmp rcl (bad) rep pusha dec arpl in sub icebp rorl mov lods xchg rcll imul sbb sti pop andl xchg (bad) xor jg int3 enter dec das icebp dec jne inc or lcall data16 sahf mov repz mulb outsb ret pop or (bad) push pop pop mov lret out in adc jmp mov inc out pop inc gs jo les data16 xchg sar xor leave subb pop fsubrp outsb aas test inc rcl repnz test dec and xor arpl sub (bad) push xchg and loopne add sub xchg pop fcomp add xor das ud1 mov sarb xor cmpsb leave int cmp xchg sbb mov call jb or adc sub rcrl nop loop jns sbb sub lock push fistp mov jae mov inc scas out xchg push push cmpsl divb jge lahf pop xchg enter nop and and ficomp dec xchg push in std mov or push and insb or push mulb sbb pushf cmpsb jmp jno mov adc or dec jle int dec ret pop pop push sbbl ljmp movsl and xchg cli popf jecxz js test lret aas cli adc in pusha pop ss (bad) sbb xchg jns out sub mov inc jmp jnp (bad) cmp icebp lret lea rorb xlat dec xor mov push pop fstp scas pop xchg mov sbb add push ret add lea adc stc clc pop lret pop sbb inc push push ljmp aas mov and js addr16 shll cli add push es sub test (bad) ror mov ss xchg mov (bad) lret cmp leave lock add push xor push cmp sarb les jmp jle jge pop rorl xor cmp jmp fist pop xchg test or pop push add in loope cmpsb pop cmpsl test jo and push movsb adcl test sbb imul int adc pushf (bad) mov xchg and fidiv and dec mov loope jae call pop fbld icebp dec jp inc icebp sub lds push mov into jbe pop sahf cmp push dec idiv out inc gs (bad) out cmp sub inc into pop (bad) lock xchg test adc je jb or xchg jge lret xor fimull ljmp lods adc xchg push xlat repnz mov mov pop push cmpsl out mov xchg pop push testb ljmp pop cmp push xchg cwtl mov iret loop (bad) pop loope xor addr16 cs xor aas or push xor xor cld xchg and pop dec movsl and stos xchg lahf out pop mov dec pop out sti div jno es stos jl loop (bad) cmc ljmp int mov ss insl (bad) repnz fimull pop sbb mov int3 or mov mov add in inc push repnz jb sub lds pop fldt in pop sahf xchg pusha sbb sbb daa mov loopne jbe,pn lds sub xchg pop ss or je xchg xchg and push sub and xchg nop daa repz iret (bad) (bad) aas sar mov sarb lahf push or aaa out mov jae and mov incb popf inc mov shrb sub inc sbb hlt imul push nop cmp xlat dec xchg push stos out ret lea mov jmp outsl js stos xchg ja aas test in jmp inc cltd cs test mov outsl loopne xor faddl repnz enter sub pop mov xor or (bad) cmpsl movsl or cmpsl arpl jnp imul inc jle pop push pop movsb adc jmp mov les pop aam cmc xchg mov ficom les and into cmp (bad) jmp jg or push aas xor add lret out cmp lea aas or push pop sub mov aaa jns jns inc jae nop addr16 icebp pop shrb sti sbb add mov test std hlt jns or push popa dec stos repz xchg cmp aam and xchg cmp jbe fdivp inc stc mull add insb or mov (bad) sbbb int rorl jle or pop insb lods push sbb psubb mov cmp lods and cmpsb dec rorl out stos dec or mov repz into test idivb pop inc sub hlt stc das push (bad) icebp lods inc test sar into mov or add mov or (bad) cmp and mov lock and add ds xchg cmc enter jo adc outsb and mov int adc sti cmc or stc (bad) rcr (bad) lret and mov (bad) inc out xchg cmpsb xor mov fcompl or je stos addr16 dec mov das xor test jne int3 pop jnp jge (bad) add sub xor (bad) ja jmp je jne sbb pop pop sub pop call cmpl std and sbbl jo pop xor gs push cmovns aam stos ffree loopne inc aas pop lea xchg out or addr16 insl into inc pop inc fcmovbe mov jmp in idivl mov ret repz sub jp into add pop jb pop mov cli cs ja dec fldt pop dec pop rolb mov dec xor push fxch bound adc repz adcb inc orl arpl sti ljmp and test lods incl cwtl fbld into or push xor jp adc push add rclb in mov jne insb pop popf cmp push not jge mov (bad) ja dec jo ret test fmul pop push rcrb movsb cld mov xor mov inc cmp enter inc cmp xchg mov ret push and movsb xor mov pop sub sub (bad) fisttp add sbb repz push test divb scas cltd movsl outsl inc adc or mov xchg mov mov xchg jne insb lds les or mov mov sub int3 addb mov jle cld iret push jmp cmp jl xchg in lret cmpsb loop mov popa in subl int sub pop xchg daa mov pusha enter xor iret les mov pop out pop fsubl ss inc leave jo push or cmpsl mov push aad nop mul mov in test dec xchg jle cmp dec cmp lds mov test or fwait mov enter jge iret jge mov add or dec mov (bad) push pusha aam lock jno mov jp repnz fcmovnb mov lret dec lret mov xchg mov fisub (bad) (bad) int cs xor lea ja dec lds fimull outsl mov fnop push movntq adc mov mov dec add (bad) xchg jns xchg adc insl mov scas jne cld add push popf jp pop test cmpsb scas in mov repnz scas xlat and xchg pop fidivrl push cmc mov sub dec inc or rcll into sub push jl push inc std push ror adc (bad) mov aam mov mov and jl dec (bad) std lret push jl or fstpt cld mov xor inc fincstp lock enter jns dec aam xlat bound into (bad) jnp pop arpl sub daa xlat (bad) xchg (bad) cmpsl hlt xchg (bad) dec ljmp mov mov inc jae loope insl xlat add cs push sbb ret test data16 (bad) mov xchg pop rcrb mov ja sub or and cmpsb sbb arpl daa inc mov sbb pop jno repnz mov cmp mov mov (bad) enter daa push xchg or out int fwait iret (bad) jae icebp xor pop xchg adc pop jl jns sub dec pusha lcall test mov insl push loop test and aaa rorb out adc inc sub lods xchg (bad) pusha dec stos and pop xchg imul ficomp mov cmc aam orl insb and and in nop inc test nop mov fstps shl lret cmp cli xorb rcll mov sub int mov pop add xchg jecxz push cli fcompl push mov pop lods iret aaa mov hlt adc sbb pop adc mov xchg pushf lret gs push xchg add pop loopne fcomps and xchg or orb clc jae mov shl mov mov xchg inc loope inc cmpsb mov jge inc pop pusha cmp leave insb out jecxz push mov xor inc push inc mov les subb out push sbb ss (bad) cmp ret cli mov repz int3 movsb enter and and (bad) fiaddl in push scas fs sti push pop cmp (bad) shlb add hlt fidiv mov les mov pusha or push push (bad) aaa xchg add out std out cmc cmpsb lret push mov mov cwtl movsl insl mov sub jno mov jecxz pop mov mov xorb (bad) push inc and xor ja xlat nop loopne (bad) in xchg push int3 jle add mov xchg xchg pop pop cli (bad) test xlat cli inc cltd (bad) cmp sbb fisttpl and dec or jbe xchg in push push add cs xchg aas cmpsl jmp push jnp mov push gs cld sbb jecxz push push xchg mov daa mov out lea lcall jl dec and jb pop movsl jo popa mov (bad) pop lcall (bad) lds pop jb cmp xlat mov pop jmp or inc push in in cwtl icebp negb xchg adc test push cmp fnop and bound sbb out mov stos arpl aam jae xchg push bound scas test imul insb scas cltd lahf das out and adc push cli divb aad decb push rcr xchg push adc adc pushw imul insb cmpsb pop stos jmp sahf fs mov test add (bad) rol pop dec lcall inc pop push lock mov in jmp add (bad) dec mov cmc jle pusha push ja mov add ss push jg pop push jbe lock mov mov div inc outsb adc cmpsl scas lods jg fwait (bad) pop sub sub sti mov (bad) mov inc pop xlat shlb mov cli xchg (bad) in add dec lds sbb (bad) mov cld shlb dec or pop push in and aaa and sub pop jge sub xchg rorl xchg xchg lahf cmp pop insb or or push lret rcrb adc shrb dec aad mov loope mov sub cs lds pop adcb fmuls and negl add sub repnz push xlat out mov movsb nop xor shrb sbb adc fneni(8087 adc mov and insb (bad) sar inc sub xchg mov fldt fs or pop fst leave xor (bad) jbe (bad) hlt push push sbb sub inc mov add movsl or mov es aas shlb sbb lcall or ffreep jbe loop es out (bad) cld cmc repnz pop imul loope mov fstl xor mov inc data16 fxch jae or sahf and repz out sub iret fimull les sbb mov fs xor (bad) gs pop mov outsl roll xchg xchg cld lret cltd cs cmp fsub cmp fist outsl sbb sub mov inc mov mov push mov shrb ss pop fs pushf (bad) daa xchg rol orb xchg pushf dec lods frstor mov in adc jbe int xor and cltd mov adc int3 pop aam fisttpl xchg and in dec lret sbb mov pop pop lret arpl pop lock add push iret (bad) lcall push andl mov mov pop daa xor movsl sbb bound cli insl insb dec (bad) out dec arpl jne cmp enter pand mov imul push pop cli xchg add enter (bad) jp sbb jo cmp and inc xchg sbb or jno insl xchg pop aaa xchg xchg or xor xor xor mov (bad) mov das and sbbb or push inc idivb xchg jb psllq into inc jecxz cmp mov xchg xor mov iret int mov (bad) mov xchg xor or movaps je (bad) fisubr jo cmp add repz inc scas in pop dec punpckhwd ffreep inc add test or shrl aaa add adc into add aas fsts and sbb pop loop adc divl push rolb cwtl adc or pop mov adc or rcrl sub fucom jge bound dec stos repnz ficompl mov xor push or cmp aas insl jno push xor aad mov cld push (bad) test mov (bad) jmp fnstenv scas bound fdiv mov sub adc shlb xchg xchg lock inc cs sbb jne (bad) mov jg xor push outsb jl roll fisubrl loop rcrl cmp dec mov push test push xchg xor in into and fiaddl incb cmpsb adc xchg data16 dec iret or xchg out lret push orl pop test cmp imul jns ret mov out popl in out push mov fsubrl lods (bad) fs mov int3 in cli fcmovnb and xorb jno aad addl mov push repz cs stos std xchg (bad) jb inc mov pop js mov in lds cmpsb (bad) fiaddl pop aam cmp pop in (bad) fidivrl mov fwait cmp xchg jne aaa or push push inc loop es mov (bad) iret int3 push and cmpsl jns mov ljmp push aad stc mov (bad) icebp decl xor or push gs mov les scas pop or rcr cmp cmp scas sbb jns and out cmpsl push jecxz pop popf xor xor or iret rorl mov (bad) nop sub xchg cwtl and dec out lea test cmp xlat insb lods pusha or mov pslld mov pusha jecxz inc push jno mov mov inc into cmp push sbb aas sbb adc out add ja out pop push adc repnz xchg pop bound pusha jne mov adc shrl pop loop pop fstps sbb pusha rol sub or pop adcl sub loope in sub cwtl (bad) dec mov and outsl add mov mov mov in mov and leave push mov popf ljmp lds cmpsl cmpsl addr16 shlb pushf jo loop icebp dec cli scas or insl xchg lods xor fcmovu aad jg out mov push xor mov insb jne je mov loop mov cli mov jo (bad) mov add sahf push xchg ret adc fstp bound inc dec dec dec xchg and pop jno inc add in dec mov arpl pop mov mov incl hlt xlat movsl notl iret push inc fiadd mov cmpsb add sahf xor clc pusha bound add adc add imul out xchg add mov xor mov data16 ljmp mov (bad) cwtl pushf push push imul lea cmp loope mov sub adc std insb and pusha cli xor inc sub (bad) lock jae mov inc test test adc aaa jge imul cmp in (bad) rcl call push pushf in mov std ja pop add lcall adc out imul lods cltd jo and cmpsb leave pop lcall xor push sbb ficom jl outsl push sbb inc in jmp mov xchg or cwtl lahf sti cmpsb movsb pop cmp arpl aam cmp sar push sbb imul mov sbbl add mov push adc mov jb les ljmp cmpsl dec dec lret mov sbb adc mov push mov jge cltd sbb add popa adc idivl test jae pop mov add lock xchg hlt sub js cli in cmpsl dec fsubl cli inc or pop (bad) repz jnp inc (bad) test xchg clc mov push push inc jecxz mov adcl out lods push shll ss pop test lret clc loopne pop jl fisubl pop mov xchg dec jge scas lock lcall fwait jno ret cmp (bad) cli and add cmp xor adc inc mov adc loope pop jae idivb jo outsb sub cwtl mov inc movsl out xor pop cs outsb sub test jo xchg fnstenv lahf mov iret ljmp jle ds mov jle sahf sbb pop leave insl outsb or push out les bound jle sti pop push add (bad) xchg pop xchg adc sub jb xchg cmp mov nop outsb js cmpsl xchg sti sbb jecxz add cs or inc out (bad) (bad) push cmp jl (bad) std or int3 push in imul dec xchg mov stos std cmp jg mov jecxz (bad) in out sub shl out pop ss (bad) jle into (bad) mov mov pop fcompl stos ss mov sub jp pop je jecxz jmp jbe sti mov push mov je fmull hlt or xchg dec arpl sbb aad jg mov ficompl mov (bad) pop adc sahf inc adc lods jne cmpsb popa dec das add je es xchg lock popa adc andl inc divb arpl xchg das jle dec xchg inc sbb push into push and int (bad) jl mov nop inc mov scas cmc adc jp jne ds sbb addr16 xchg xchg xchg call pop cmp fbstp (bad) mov mov cld les jbe jae outsl push stos dec mov lea jge outsb dec jb adc pop jge repz sahf xor mov xor daa add icebp lcall out mov (bad) stc fsubl and push mov add cltd cs mov or stc popa in adc imul jmp mov mov inc (bad) mov leave lods or outsl xlat mov jnp (bad) mov and adc int3 pop pop push mov dec adc ds jnp mov aam sub movsb cld imulb or daa (bad) mov mov xchg mov pop push dec sub ds cmp fstps fidivl (bad) and or mov dec cld mov insl adc (bad) push xchg xor xor cmpsl dec sub inc jbe or iret add sub pusha jmp (bad) frstor sahf cmc sahf cld sub dec imul rcrb int push lcall mov je lahf (bad) jle int3 adc sbb fsubrl loope sub fidiv xchg sbb test test or daa lret inc popf imul push popl out push mov xchg subl push jo mov test mov jb mov xchg mov imul insl mov pop mov adc lods push mov adc inc or loop aad dec (bad) lret sub in jbe xor sbb ror pusha fstpt repnz jmp mov js jae push push mov in mov fst or xchg dec dec fcomps dec loop outsl arpl fisttpll inc push jb scas push push sbb pop test or xlat (bad) addr16 dec imull mov jbe inc cmpsl or and pop sub rcr mov cmp xchg in adc mov popf push pushf pop and out mov mov rol pop xchg enter lahf add sbb int or fidivr mov jo push sbb sbb and es mov test je dec fs mov inc xchg icebp and ret mov dec adc pop mov cli imul pop add xchg or mov movsl cmp lcall add adc movsb dec push insb xchg pop push push adc xchg sbb sar push pushf push or jl inc imul sbb mov xor pop mov arpl push stc sbb jle jle (bad) mov jne shrb inc je xchg lock ret mov add lods movb jmp mov adc cmp outsl xor data16 mov cwtl loop adc lds rcrl insb push (bad) cmovg imul sbb sahf and icebp into cli shll jge leave in shll dec or addr16 fisub mov cmp jae xor fistl jns pop pop int3 mov cmp xor addr16 in call pop sub imul ljmp loop dec roll mov sbb in sub (bad) clc cmpsl fwait mov ja mov and outsl jmp jae adc daa imul int jnp xchg pop jo rcrb ror imul ret cmc rorb insb mov push mov stos add int3 dec dec outsb hlt data16 mov movsl mov adc out lret xor push sbb dec add sbb roll clc xchg repz test cmp inc out push insb pop lret jle xchg sub pop pop pop mov (bad) mulb and dec je xchg mov mov dec movsl sub imul or shlb xlat fcomi sti scas mov (bad) int3 jne mov adc (bad) adc es pop cmp into ret iret popa pop (bad) mov addr16 push scas (bad) sub xchg jg pop in aaa inc jle loop adc mov and dec pop or fcmovnb mov dec jo outsl adc jl adc out lcall xchg hlt jmp lret out (bad) xchg pop xchg leave aas int flds jbe out inc test aaa sbb push mov stos jecxz adc repz call nop bsf pop xor mov fldenv aad rorb jg cmpsl inc fwait aam mov add jmp sub iret dec cmpsb iret push pop iret sahf or call loop push jmp out jo nop inc dec pop mov arpl ficompl push leave mov pop icebp fsub pusha and cmp xchg mov or cmp add pop stc dec rorb into push std xor xchg movsb pop pop xchg dec dec (bad) jp dec fimul mov or push xor xchg (bad) in call cmp cmc adc dec fcoms shl adc sub nop test (bad) stos dec cmc jmp aaa lods lods adc push imul or jae fwait jge jb mov je sbb adc sub incl sub les dec hlt mov in xor loope or ds into mov sbb in std mov call and push pop ljmp xchg dec nop pop xor and ljmp jno add pop adc rcrb insb sbb out sub addr16 mov fstl fbld and outsb mov cs rcll push adc notl add dec pop es cmc ss dec (bad) mov sub jg rol subl ror adc dec notb push ret je fstps add enter dec and push sub imul sarl lds adc bound add lahf jecxz es mov pop and mov cmpsl mov add rolb cmp arpl cld jbe lods push pop fstpl scas jg pop jo sti cmpsl test cmp cs rorb (bad) push (bad) rcrb sbb dec push sahf push clc push decl sbb adc lret icebp push cmp inc insl iret fmuls (bad) mov and and inc aad xchg sub cli xor repnz mov fldcw sub pop mov cli (bad) xor cmp fstps cmp js subb and ror sub subl mov dec loopne jno push loop dec fs sarb (bad) lock out dec clc mov dec xor cmpsl aam mov push jnp popa jmp jno stos push xchg scas push cwtl mov add pop sbb (bad) xor jecxz sbb lret adc cmp lahf cmpb pop cmp sub adc mov test outsl (bad) int3 inc int3 cmp xchg dec push add ja sbb cli pop das add jmp ss jmp stos sbb test outsl test ljmp adc inc and (bad) cmp (bad) mov out scas dec cltd js cltd (bad) cli push inc sbb sbb scas sti into mov and into pushf and js ja sbb imull lods dec push insl xchg repnz and lret lock sahf flds leave stos push fxam fmuls or arpl rcl sub sbb jle inc and stos cmc mov loop (bad) sarb xchg inc fisttpll adc (bad) jne repnz inc and loope push xor fisubr mov pushf mov fild out add jne inc sbb rcrb mov mov jae push adc ja cmp dec in hlt push push jmp (bad) ss or dec scas push ljmp mov dec cltd jmp push and push (bad) outsl cld sbb pslld adc and lock clc daa es sub mov gs adc dec lds lods (bad) mov adc test clc mov cli pop pushf xchg push dec stos fbld jge icebp cmp scas jnp or ss int sub sbb push ds ljmp hlt push xchg adc out aas fwait repz leave pop jo adc call jae sbb cwtl cld adc dec mov push shlb cwtl xor xor jg add cmp add iret loope mov dec repnz cwtl xchg inc and mov (bad) rcrl sub popf mov inc inc fwait rolb ret or pop push inc xchg (bad) cmp lretw cltd popa pop push push fnstenv add cmp fs fwait lods out jae pop mov lahf fsubrl xchg aad mov pop or push inc mov loopne stc mov jne jl imul pop leave repz xchg mov pop daa in xor mov pusha jmp mov repz outsl pusha mov pop stos xchg sahf jnp pop aad ja push add aaa or push popf xchg jge lds mulb ljmp sbb mov fwait or mov js outsb pop xchg orl push add stos fbld loop orl scas jmp fcmovnbe popa sbb outsb xchg addr16 imul pushf hlt xor push negb push cmpsb xchg mov imul ret xchg sub cltd mov mov sbb addr16 out lret fldl mov ret xchg and or pop daa nop das push adc pop mov movsl stos and fst aaa aad pop sub or imul dec pop negb adc int3 (bad) lret mov hlt lods cld jp ret cli rorb call (bad) mov inc mov push jne outsl mov movsb popf mov stos icebp mov fnstcw or mov pop jo mov insb je shl dec ds (bad) leave jmp insb mov das test movsb sti cmp add pushf xor sahf inc pop inc inc push mov mov xchg ficompl mov xlat pop mov push add sbb iret out out dec loop mov and adc cltd incl push testl in ret xlat mov lods lods loope mov ds push lret fistl xchg mov sbb jecxz push sub sbb mov fadds xchg jne fsubrl dec sti ret lods xor js cli or fdivrl (bad) movsl xorl icebp pop mov xor cwtl popa and test sbb test sub ss or aam push mov daa aad mov sbb or jl pop das in mov sbb adc (bad) sti cli xor std adc aas aam rclb fs shr mov xchg adc cmp sub mov int3 (bad) cmp and fs call (bad) dec jle cmpsl inc test dec test js pop mov adc jo fwait cli in push cmp xor dec xchg push xchg int3 adc adc jbe jp and inc cmovnp add mov adc sub scas jmp xor std sti aam mov rorl push fcmovnbe dec pushf sbb bound adcb inc jg out add stc repz mov mov aas loopne mov pop mov sbb repz pop sti clc xchg dec mov xchg xchg sti ljmp xchg jb (bad) sub adc cmp stos cltd push inc mov (bad) xor nop mov dec fadd jg lahf (bad) imul dec jns test and inc adc push adcl cmp inc xor aaa nop push cmp out clc push mov clc mov add out xor jae mov decb aas or lods loope call jns pushf lock add jne fldl insl jmp cmp clc les stos stos pop lods add cmp xor jg dec and mov sub push (bad) sbb jle leave adcb fisubr jg mov dec sub out sbb data16 and fadds xor (bad) test out xor aam popf mov add jbe ret sub enter scas fidiv sahf cmp aas cmp mov mov (bad) jns mov sbb dec popf pop cld jmp xor pusha dec mov xor mov push movsl out sub inc out imul sbb mov leave out aaa into std fstp cmp cmp or xor or jnp (bad) mov popf mov loop xchg call inc cmp and xchg scas repnz and pop xor out cmp hlt cmp aam imul push lret cmpsl test xchg enter nop popf cmp jl stos movsb insb push pusha dec mov adc jmp jmp mov fcoml mov gs lret and fisttpll les mov xchg sbb data16 jp jae js roll cmp jnp or mov xchg shlb jns ret sahf bound adc lods or lock loop sbb xlat adc mov push push pusha cltd sbb xor cmpsl inc rcrl mov fildl ja pop mov jae mov cltd test pop jb je jbe dec loope popf mov aas push mov hlt pop push pop mov sbb xchg popa jb xchg dec loopne cld or push arpl jnp (bad) xor rolb pop pop mov fmuls insl js pushf jl pop xor js adc or mov (bad) int sub in mov icebp call cmpsl fs das sub mov dec leave xchg mov sbb adc sub in add int stos test icebp fimul scas cmp ret push push std inc push in fidivrl fadds test jns mov scas fbstp (bad) in loop mov sbb fcmovu adc and mov add mov lcall xor fsqrt jne (bad) ds ja lahf movb scas xchg mov sbb ret aad (bad) cwtl test adc je or adc push (bad) push xor insb inc fs xchg xlat nop xor xchg mov push stc imulb adc adc scas dec test or jnp push xchg sbb sub inc add sarl and out (bad) mov xor mov clc imul ret push aaa pop mov push fistpl stc pop fldcw data16 sbb adc addr16 std nop cmp insb pop mov pop pop es inc enter sub enter and xchg pop xor sbbb mov aaa test (bad) popf das inc dec jp enter loop sub sti adc iret mov mov (bad) rcrb ss sub scas pushf xor (bad) jg nop ret push les pop hlt sbb cmpsb in mov loopne (bad) mov xchg inc icebp inc mov add jne fdivs test nop dec test and repnz stc xchg into dec pop (bad) aam cs sbb cmp pop jbe pop push lea mov cmp stos lret cmpsl sub out insb add je popa xor jge les xchg mov (bad) subb lret pop sbb xchg orb (bad) (bad) cltd push int cwtl jb leave loop (bad) repnz pop sub je imul mov fadd std popf jns inc inc out fxch pop cmpsl out fstpl movsl adc mov jmp stos cwtl push enter hlt test (bad) push aas dec bound mov sub rcrl int3 mov adc lret popf test out xor xchg add push inc imulb (bad) mov stos adc cmp mov ja in dec inc and cmp stc (bad) in mov fidiv push bound xor inc sub adc (bad) mov leave inc jno pusha aam or aam mov cli pop lea push daa xor inc sub movsl jae jmp cmpsl les or or push pop arpl stos cltd and jns dec inc push cmp icebp pop dec pop jle cmp xor sub jbe test clc inc int pop out xchg test jmp cltd push loope mov std iret loope adc inc xor jne mov sub and jnp mov adc ja rcrb ja jl mov daa dec inc pop nop mov adc push out add push mov inc jp int3 jb xor outsl push push stc (bad) icebp sbb xlat (bad) mov rcrl jne pushf xchg das pop add or pop pop cmp (bad) mov sbb inc insl sbb cmp jge mov push orb xor jb jae,pn jecxz mov xor and jl jl mov cltd pop mov sub js fimul nop sbb insl loopne ljmp enter mov ds pop dec or cltd mov dec mov adc ds popa test pop fmull fs mov out insl out addr16 fistp mov and mov xor int add mov mov enter arpl std pop push xor dec movsb mov clc (bad) clc inc add cmpsb mov imul xorb lahf cmp in scas mov sub push xor sbb sub shlb mov out cmp adc mov mov sbb or dec mov pop fcoml mov cmpsl jmp push cld imul lret out and sbbb imul mov jp push test jl sbb or pop pop popf sahf mov lret jns mov xchg rolb loopne leave cmpsb cmp xor add arpl scas adc add (bad) dec or mov rcl mov lcall cmpsl jo clc sbb out dec inc inc cmp pushf add or stos mov jl fild cmp inc out pop pop push mov and inc (bad) pushf into iret mov nop mov movsb sub les (bad) mov pop out pushf push dec inc cmp mov push fwait jge or negl cmp push dec lret sub faddl inc mov pop je test mov or fwait mov aas mov (bad) jp mov std std pop jle fst movsb add dec loope adcl xor adc mov test and push inc jmp js ja pop ds test dec xchg jecxz push adc mov fadd push xchg jge loop jg or cmp sub dec mov push sub popf test in mov dec jnp push popa aas loope ret adc pusha xchg xchg sbb pop shrl fs (bad) (bad) jo dec imul mov cwtl mov insl inc lret or xchg adc dec dec adc ss (bad) xchg push pop push pop mov movsb shrb xchg (bad) in jecxz mov mov mov dec (bad) mov shlb pop mov mov test pusha dec push clc cmpsb inc sub pusha into xchg xchg clc inc out leave xchg jb push push test hlt aam mov test insb in push in jle mov (bad) jge rorb repnz out pop xor scas cmp mov or sahf mov and cltd xchg xor test adc or repz mov lret (bad) lock hlt lock in xor mov xor cmp push mov mov push movsl xchg (bad) or mov push test xchg (bad) sub cmp call add or jge push and repz xor js into stc loope inc adc inc inc cmp adc test add (bad) push sbb call mov std cltd gs push pop negb pop popf into in out mov cmpsb sbb xchg mov sub cli sub mov movsb imul test test xchg repnz pop pop cmpsb mov push cmp cmp jb inc ljmp (bad) cmc cmp xor xchg (bad) or (bad) jbe (bad) data16 or pop lds js push nop pop and stc lods adc je (bad) in ret sets jge push or jns add fwait sbb sub (bad) stc jg movsl inc cmc jbe stc inc push jno sub popa andb shrb adc mov popf loope push daa adc inc inc adc xor jbe int3 jecxz sub push xor and rcrb jecxz sub mov dec sbb out add scas mov pop or fs adc pop xlat or mov or mov xlat das imul mov ret andnps jp xlat imul push daa mov mov or fildll dec xor arpl fnsave and lret gs mov jb hlt cmp jle mov insb rcrl adc pop xor popf movsb inc mov push repnz lods addr16 xchg fs push mov test inc (bad) jge lcall scas pusha fildll cwtl jae fbstp into sbb dec xlat (bad) cmp fldenv mov hlt mov and jmp sub pop rcll jg cmc outsl stos bound and scas xchg jb imul pop cwtl mov je ret scas and push jp out add lahf push push not dec imul xchg mov sub aas sahf pop icebp cmc aaa rcrb add das (bad) repz xchg icebp adc rol insb loope popa xor mov subl mov jp,pt (bad) rclb or dec xor das sbb dec cld cmp lods je sti les pop lea pop shll insb insl or rorl clc cmpsl negb int3 test push test enter dec fninit (bad) lar mov jns xchg jge dec gs dec push fdivr gs inc ja jmp stos inc mov stos and xchg lahf pop xchg (bad) cli test xchg outsb mov std or xchg inc sub sub and fdivl sbb mov call cmp das lret imul pop inc and jmp fucomp movsb fnsave jmp mov test lret (bad) (bad) out mov or fdiv add sub gs sti xchg (bad) outsl fisubrl mov in mov inc arpl push xor jle mov stc cmc add fnstcw clc out push bound push lcall fstpt push mov add cmp lcallw iret movsb dec add inc sbb test leave sti xor gs jae push icebp pop cmpsl nop popa adc pop mov sbb sahf mov cltd add adc ss pop out (bad) minps cmp sub ficompl or sbbl cmp jl jnp sub ret add inc es out dec cwtl adcl sarb mov add mov out imul and shrl mov push cmp mov sbb jb dec jl push mov add jp mov xchg out sub sub lods das mov mov repz jge ja hlt xchg icebp fdivrl enter ret pop cmpsb clc lcall test pop imul repnz cmc nop fdivl push pushf pop inc pushf push dec and out (bad) test pop mov jmp jb mov shlb mov movsb (bad) or jnp test arpl pop loope cmp out out psubusw outsb mov inc out std pop in dec pushw es xchg and (bad) in int in jecxz inc jbe lds pop ljmp inc es sbb fdivs or xor sarb ret jmp movsl jle sbb insb sti cmpsb js pop lock xchg jge and adc in jnp cmp enter in adc insb mov fwait cmp mulb rclb push push mov dec in pop (bad) lret insl rolb inc cmp mov lcall sti data16 std jns insl shrb jecxz xor popa sti ret cmp jno cmp sub jbe andl fisttpll or and mov add bound ficompl xlat cmp xor dec push push insb ljmp xchg jmp in inc push ror pop mov xor lret adcb fisub or test adc iret add push movl xchg mov dec adc xor repz movsb mov ds lods test jae or and mov mov mov cwtl out xor insb aam jl mov pop es into dec mov inc enter dec pop push mov sub jae jp adc nop add adc test xchg mov mov push lahf sti test hlt jmp rorl jge fs mov popf out jmp aaa push mov out js push jns push push popa (bad) pop jge push rcll shr pop je cli pop dec stos push loop xchg lcall in into ljmp (bad) add push in addr16 jne or mov subl test dec and mov scas mov test mov popf and cmp rcrl jl leave jp iret sbb rorl mov cld jb sti push and dec clc mov lods aam and test loopne mov adc test pop stos jl mov or cs jae add pop xor cmp lods (bad) dec mov jecxz hlt int3 mov sbb inc pop ds dec roll mov icebp (bad) rorb jmp cmc mov xchg mov pop sub mov sarb pop or repnz xlat std movsb ja addr16 into fidivr adc xchg or jne stos sbb adc inc and mov imul scas mov pop cs xchg (bad) mov push or pushf cmp mov nop sub mov adc pop cmp xor mov repz mov and icebp mov pop gs xor lods sub or in popa rsqrtps push in es push add movsb mov cmp pusha inc (bad) stos jno jnp mov (bad) inc xor sbb adc xchg pop dec jbe and scas adc jno pop rcr push pushl fisubr aam adc fisub aas ffree std add pop push dec mov ret mov or or movsb adc scas insl je fistl mov adc jnp repz inc sub mov add in and push add frstor mov (bad) iret repz daa fimull bound fcom jecxz mov data16 pop test fadd cmp xchg addl and push lret xor (bad) jnp xor mov (bad) jmp dec pop xchg sub and fdivrs enter sbb inc sbb repz in lods test xchg mov lea (bad) aas out ror insl test mov inc arpl jno lret insb jno lret fwait rorb xchg sub mov imul pusha mov ret xor fucom inc (bad) mov jge inc jae ret bound push clc push lds jns mul inc jnp adcl outsl nop (bad) mov sti xchg sbb lock push clc std or in dec fidivl pop pusha cltd cmp add or ret fsubs fnstcw add mov mov mov arpl aaa aad jmp pop xchg mov add jmp add sbb push sub mov push lret nop out jg iret lret jb rcll pop sbb jg rep or adc mov push pmulhuw repnz inc xchg dec sub stc idivl mov scas dec and fisubl jnp xor xchg push les jbe push sub ret aas pushl shlb xor inc xchg mov xor clc jecxz mov in addr16 mov xchg push fldenv inc dec (bad) outsb jo les push jmp decl pop cmp loopne add (bad) sub pop add sub sbb mov (bad) xor outsl or test push or andb push (bad) stos lock xor mov sub jbe jns (bad) pusha cltd cwtl lret int cmp cmpsl lret leave jl scas xchg pop shl in and pop (bad) lea push push mov fisub pop cs adc lret mov mov lret or jl movsl or scas add jns xorl lock push hlt stos xor sbb cmp dec call aas call sub mov test pop shll or loop sbb shr jae jp dec jge nop lods mov loopne sub adc add sub add aas (bad) mov lret xlat test add les sbb adc sub outsb int3 push sub lods adc cmp and push xchg xlat jmp sahf adc add sbb int das test jecxz cmpsl push in test std dec inc js aas aas sbb inc jg xor hlt or popf sti lcall dec jmp test into aad mov cmp dec mov push mov xlat sbb pop jnp std int mov std fxch inc test jns pop fs gs ss mov rolb add call push cs xchg sar sbb xor inc push fsts cmp jae mov add clc lcall aam cmp add lret jl jnp xchg ljmp pop cmc nop iret aad push repz sbb pop icebp les aam popa xor out std pminsw pop inc xchg jmp jbe adc pop dec (bad) pop ret test imul mov data16 sub daa jp or call pop callw add or push dec push outsl sbb pop push les mov jl cmpsb mov jno mov sub and int3 pushf out rcrl into orb test loope test sbb push cmp mov test inc bnd mov mov mov or cmp loopne pop int3 ja aad jne cmpl (bad) sub jmp lahf fs push cmpsl xchg test jge jmp sub fbstp lahf mov mov pop movsb sarl dec call or (bad) pop sub pop pop xchg and in xlat ljmp dec jle mov mov test insl icebp mov loopne cmp test or ss stos mov es dec leave adc cmpsb (bad) aaa cmp xlat jp sub mov xrelease (bad) or movsb or fistl das das dec addl repnz xchg lahf or (bad) int sbb or mov sub imul test push push mov mov mov ljmp in jle icebp or popf and add cmpl sbb mov sti mov pop push lods push lret mov mov push test fimul adc lret scas call xchg or jns sub sbb inc cmp cli cli sbb stc test test movsb pop lret pop push sti fwait lea sbb xchg jne aam mov je test inc fcompp mov push mov push lds stos cld jmp xor enter mov push fstpt out loope loope mov sub ljmp nop dec xchg (bad) std xchg sub mov aas (bad) (bad) cli inc pop sbb and mulb andnps inc jmp out cmpsb sub mov xlat test cmpsb pop mov pusha and psraw push xchg xchg andl or jge sub es xchg loop icebp sbb icebp frstor jmp mov pop mov cltd add cmp fsubl pop ficomp or repnz leave jmp stos jbe pop jae cld jo adc mov dec add inc pop xor pusha mov jae pop jnp cld sbb in cs adc xchg and mov jnp pusha mov push daa or clc cmp jg lahf push sub push aam jmp fucomp lcall das ja pop cli mov cli cld pop inc loope in cld cmp pop into mov int3 sbb testl lahf insl add (bad) mov sete mov push or imul jge inc or stos lods mov lea fucomp jns dec loop jmp scas data16 jp pushf mov lods inc mov jmp xchg mov out or ret aad cmc mov jl mov decb xchg push repz add mov jg aas or rcll insl mov pop cltd mov imul call pop mov dec sar push cld loop or insb int3 cmp mov pop sub mov pop sub mov and outsl dec in sub and sbb repz push adc nop inc xchg sub dec jl daa mov adc or mov test add aad rorl outsb and mov sbb stc xchg int3 mov xor jge push xor pop lret mov xor jg inc push outsb out push ret mov dec pop fisub mov push adc out rorl mov jmp cmc cmpsb sbb jb es or bound sub testb xor incl cld pop in jae (bad) (bad) (bad) jne ret lock addr16 push in adc daa push dec mov cmp xchg lret enter sbb repz mov shl fs pop stos push (bad) jl,pn movl xchg mov in push pop inc dec scas movsl dec (bad) cmpsb ss mov push and jl jb xchg mov test scas lcall lahf lret iret sbb push sbb adc div movl fcoms outsb xchg stos das and cmpsl mov jl sub int push out mov inc cmp pop sbb push push xchg dec dec and stc add data16 rcrl (bad) inc cwtl add clc sbb divl pop int3 jbe js test jecxz xor pop mov sub aaa pusha jne xor xor cli lods mov out jbe int3 xchg pusha jmp cmc dec data16 rcrb nop sub inc stos ljmp inc fiaddl cmc jg fnstsw scas pop in into add stc mov mov mov lcall js cmp ret incb xor icebp xchg adc shlb dec jne sbb push push xor mov lods inc fwait repz pop popa stos add ds out push cmpsb and adc cmp movsl xchg pop std pop enter loopew outsl into xchg clc cmp mulb push xchg jg out adc lret popf mov aad cmp sub dec and ja arpl mov push cmp stos xchg arpl xchg aam (bad) aam ror dec xor mov push frstor sti inc loop test inc mov or sbb mov lcall and sub pop cmpb mov aas mov notb mov add add push icebp in mov pushf fcmovb (bad) add mov fistl shl inc xor rcr pop insl mov stc mov pop daa jmp pop cwtl (bad) jne add (bad) mov pusha cmp cmp xchg ret add add jns pushf lahf fistl out pop jne dec insl loop jno pop xor jl out shl and insb js rcr (bad) imull psllq xchg arpl push orl out imul rcrb xchg in ret int3 adc dec mov addr16 lods ds fwait orb stc mov test jle scas in add add shll push je enter and mov sbb xchg ret sub xor in push and fisubr sbbl cmpsb jle push in and pop xchg adc popa xor lcall test clc into xor bound roll lods inc sarl pop dec insb mov mov leave cmpsl sbb xor cli jae xchg mov inc push xchg push imul mov scas mov stos imul mov sahf and icebp push pop out lea shlb xchg push push and out (bad) xor push pop scas xchg je cmp sbb ret xchg pop test xchg xor mov (bad) movsl adc mov in add fimul movsl stos test sahf mov shll mov xchg mov movsl dec xor fdivl pusha cmc rorb pop mov popl cmp add loope inc mov add pop lret push or inc xchg test adc (bad) fstpt cltd jae cmp and ret or inc xchg mov (bad) inc push mov sub pop fwait enter imul in arpl nop xchg xlat and sub fistp mov lret insb subb xchg adc sarl loop fadds inc test test mov ret das add sbb aaa push jp aaa push ljmp and xor (bad) in pop test push fst pop push mov xrelease add adc pop add cmp mov andl xor rclb std jecxz add mov test or xor pusha js insl popa addr16 insb insb add push mov or sbb mov out mov outsl popa incl jae inc push scas aas push cwtl push getsec out xchg out pop mov popa jns in xchg pop leave popa stc addl cmpsb dec xchg mov lahf negl jle ret (bad) out notb sbb (bad) jo adcl adc lcall xlat nop js ljmp mov pop pop notb (bad) jl negl and lods sub leave xorps sti sub aaa mov xchg in sub push push adc mov mov inc xlat xchg inc lret adc cli adc or adc rolb jbe ljmp notl dec or imul flds xchg and enter fs push add rorl arpl arpl ffree mov pushf or mov (bad) loopne xor push adc and cmpsl out pop push test inc lahf inc inc outsb rcrl mov push xor popa cmpsb std dec inc add add cmp sti mov loopne inc loop dec jne mov mov push jbe cli cmpsb pop mov adc adc or inc xlat daa scas jnp dec push clc es mov out xchg insl aad popf pop insl jne inc jle cmpsb sub pop in sbb dec xchg std and sub and and bound adc (bad) repz dec mov inc movsb sarb (bad) ficoml rcl push fs repz mov mov sbb adc subl out or test pop mov cmp pop das jecxz in add pop out mov push mul mov sub xlat xchg or mov repnz loope popa (bad) popf or dec dec cltd sbb push pop mov dec add sub test popl mov loopne inc xor mov pop sti fldt mov or inc les adc push xchg hlt cmp pushf add mov (bad) mov mov and inc gs jp jmp xchg jae jmp push repz mov and lds (bad) add and mov push push adc sub psadbw (bad) sbb test mov pop or or gs mov imul cs adc iret inc push stos imul (bad) mov pop call pusha lea je lea lea pushf lea call lea call pushf pushf mov pusha xchg push push lea jle jae movzbw lahf movzbw xchg pushf lea pusha movzbw mov setnp push mov lea bswap call pushf push lea ja jb xor pusha ror add jp cmp dec movzbw call cmc sub pushl pushf mov lea lea jmp add mov (bad) sub pop and dec lea ret xorl leave sub push (bad) in loopne hlt arpl sub cli push dec es in sbb out adc or inc inc push sub imul adcl pop dec lea jp cmp or dec xchg outsl mov push aas xlat mov push sub test fdivs sbb aam bound rolb outsl ret das push lds mov sub outsl ljmp lcall mov xchg cmp movl pop cmc call jmp pop mov sbb or rcll or daa inc push inc jnp (bad) dec fwait jae inc incl xor sbb scas imul add aam aaa cmp xchg adc test and roll or int mov ss jbe imul cmp adc pop es fadds push scas push (bad) ss movb sarb js stc mov ss loopne mov ror test jp imul stos js outsl outsb jo loope sub push lock std std test xchg fs mov ret jae aaa ljmp xchg pushf mov pop fidivl xor and sbb add dec push and aam pop int3 add in sub movl mov xor es in xchg push mulb out add dec add pusha enter rorl xlat add in or sbb jecxz sbb in scas mov cmp mov push (bad) repz and out xchg adcb movsb aas mov jle add adc rorl push mov jl aaa addr16 mov jae mov leave nop pop pop insl movsb mov cli and push aad and lds rclb ss jg pop mov decb leave stos sub mov (bad) out dec mov jmp (bad) in lods mov and sub add add jmp in or orl (bad) mov inc mov stc or mov imul movsb xchg sahf mov sbb mov cmpsb mov jmp lcall jmp jno jecxz sub lret dec in ja ret std xorl mov and daa xchg cmp push mov insb xchg into cmp lret shl pop fdivs lods lods dec subl mov mov lock push rolb mov dec mov jp adc xor lea pusha lea call pushf cmc mov push bt call mov pushf xchg mov setae push mov movb pushl jmp pushf lea jne pushf neg mov pop shr clc call jmp call pusha movsbw rep jmp push push lea jne setge lahf movb setg movsbw ja push mov jmp mov pushf cmp pushf jmp mov add (bad) xor mov cmpsl push xlat adc aam xchg jns inc das test jp testb cli xor jne fnstcw repz xchg ljmp and sub cwtl pop jo cs jb rcrl ljmp lret out cmpsl mov jg (bad) lahf test push dec mov jg fsubrl test rolb mov pop (bad) pop mov pop mov cltd mov std cmp mov addr16 dec mov and and sahf loope clc sub xorl fwait push loop jno or sub out and shll lods in xor in popf je pop sub jno and adc popa lahf roll sbb lods xor push (bad) or mulb and jb cs mov movsb inc cmpsb mov imul in pop int3 cmpsl jnp (bad) or cld add dec rcll dec movsl cltd sub (bad) icebp ljmp addr16 xchg jb cwtl cmp cmpsl es aaa push int cwtl xchg shll dec pop push jno fisubr jle lea ret iret sub mov popa xchg lods outsl mov inc xchg or cltd mov jecxz mov ret ss sub add push stos mov push les pop call xchg (bad) je mov mov rclb mov mov and mov xchg ret je in xor repnz push or inc or pop aam repz mov xor dec scas push fildll xchg or push sub mov rorb cwtl enter sbb (bad) call sub push in jp into or clc push hlt xchg bound fsubrs repnz test int3 mov xchg lret and pop fwait rclb shrb mov int3 test push movsb dec xchg xchg or or sub xchg sub mov popf xchg and mov rorl arpl mov jae inc shl (bad) push in repnz movb data16 inc jp loope pop and jl scas in test add es pop leave call loop and sbb pusha xor xor js xchg aas and iret push cltd mov movsl loope and push adc test jae mov aaa std (bad) xchg pop mov mov inc int inc outsl jle xlat mov dec and jne dec mov inc sub lcall dec pop repz sbb pop rclb push mov push das rcrb fidivl call inc jl jmp jp dec nop push enter scas je inc test mov cmp adc imul movsl lret rolb cmpsb scas in cmp push push dec sbb xchg jl jge (bad) stc (bad) test jne inc or ret cmp cmpsl sbb mov cltd imul inc add xchg in ljmp cmp push jmp push daa mov in inc jle and or lahf jo and pushfw xchg ljmp mov xorb test xor (bad) ret push inc movsl lret (bad) or mov push mov stos std xchg aam fistl pop mov jg push aas loopne add mov cmp in enter cltd insl arpl add lret sbb ror xor mov pop push daa into xor int3 pop mov data16 repnz sbb int js sub mov cmpl xchg jnp push push cmp add rolb mov add lds loop jne dec ret jle pop jmp inc and and test (bad) pop aaa movl pusha movl jmp sub cmpsb es inc lret lcall aaa jg (bad) stc test mov or xchg dec xchg and push insb stos loop cmp stc add rolb enter mov mov adc fs scas stos scas lcall and lahf insb or add mov sub mov mov or push and push fadd test add or push fwait xchg call xchg xchg cmpsl iret lret rclb lahf add add clc inc mov fs mov test jo add mov aas (bad) cmp push mov iret in movsl pusha pushf lea jb jb stc cmp cmp inc mov lea sbb movzbw lea lea mov push call lea je ror dec setge push add movsbw inc adc sub inc bswap lea shr and bsf ror pusha mov stc inc jmp std sbb div or dec mov pop xlat out dec xlat (bad) icebp popa mov or push ret pushf fnop sbb aas inc adc adc insl outsl add push (bad) jne and xchg fisttpl mov mov jmp xor dec sub inc inc subl sarb push push ror gs dec ficom pop lret sbb std inc sbb jne fs inc in pop loop mov stos sbbb adc sbb shrb insb jp stos (bad) xor popa fmull add outsb gs or mov mov je or push and jne pusha jmp cwtl call add pminub or jbe jb rclb xor push lret mov xchg xchg lods sub xor push roll xor mov mov ret or (bad) xor cmp frstor jbe lret repz aaa je push bound xor add jbe pop xchg sbb mov push in and jb clc outsb mov iret jb clc xor popf nop inc add mov call dec xchg mov inc lret insl aas out mov cmp jp repnz pop stos fs inc dec enter scas mov and sub xor out mov out shufps adc pop cmp mov sti jmp add sbb cld pop cmp imul xorl and inc pop mov jnp lahf jp jmp aam xor cld xchg imul fstps add insb pop push lods sbb imull xchg scas lcall push sub mov lret iret add lret cmp call in jae jno fbld and xchg jle jle push adc nop mov addr16 ja add xchg shll outsl insb aaa clc mov xchg loope dec lret mov cltd mov inc push (bad) mov bound sub test mov xchg or arpl data16 int jmp pop out and icebp push and cs add mov loopne push cmpsl fistpl xchg mov cmp inc dec (bad) jmp adcl adc push icebp push ficom outsb loop outsb icebp add push or es in js lret cmp or inc mov lcall jne lea ja push jmp jmp mov xor lds (bad) jno scas in fadds lock testb stos inc mov into sarb enter xchg sti loop cwtl push (bad) je pusha lods out dec adc call ljmp (bad) arpl sbb test sbb ret pop loope dec dec inc push mov adc negb push (bad) inc test push inc daa dec and jp aas scas std pop pop sbb test xor test dec shl cmp add mov inc cmp mov out int (bad) fcmovnbe pop lods cld mov out cmp pop loopne mov xor ffree fisub cmpsb mov in (bad) sbb in mov rol in dec pushf xchg fwait xor and je bsr add bt pusha sub ror sub bt shr btr sub call fnsave inc push aas fistpll mov dec into add and sub push sbb jae lods sbb jbe sarb push xchg insb add and aam lcall cmp fbstp data16 fsubp jg test in lahf jmp icebp dec add cs in xchg scas dec lods (bad) sub xor in outsl ret jb add mov ljmp jne jae lock and sbb inc sbb iret mov add xchg mov push push cmpsl iret stos mov xchg jo jno xchg in hlt add sub pop int3 xchg mov add sbb pop in mov mov add fndisi(8087 mov stc mov call lret pop jg icebp or pop jno subb jecxz push and out xchg idiv or adc rcrb xchg cli cld xchg pop push sub mov xor outsb pushf xchg xchg mov add scas and imul and push jp (bad) adc push or mov pushf movb push lea jmp cmpb jne shll shll push lods not sub ror not mov pop ret push mov inc cltd add inc (bad) dec jp mov pusha mov data16 xchg (bad) xchg sub add jle push ret repz jle inc scas (bad) add shlb mov (bad) in add mov out outsl mov jmp xchg mov pop dec das mov mov cmpl das movsl cmp jle push cltd lock mov or dec fisub fidivl jae cmpsl icebp iret shll cmc movsb jns enter sub loope cltd xchg test shll ds test push xchg test dec (bad) fmulp inc aam dec lcall aam xlat vmovupd into push test or xor xor (bad) repnz fimull (bad) mov imul jle sarl rcrb lods test fcmovbe push pop dec inc cmp (bad) leave and jno gs jmp cmp push push xlat push or mov iret scas fisub imul fcmovb xchg cwtl out push in out pop push dec push out or aas ss jnp cli hlt pop pop loop cli imul addr16 ret or aad rep dec ss jae test mov das outsb std xor cmpsb rorl in jo adc or mov sub in daa out scas stc or cmpsb sbb cbtw jg test das scas rcrl or sub push cmpsb ret or pop jl repnz ret (bad) jb sbb dec xchg push and jb pop pop lahf aas jp inc pop xchg pop mov cs lea call lret ss xor jge jp flds jno jmp pop insl add lods lods iret outsl fsubs (bad) dec (bad) cmp mov pop jge add jecxz movsb add cmc js push mov sbb mov push in dec xchg fdivrs inc mov inc and sub sub (bad) push in (bad) decl divl fdivp rol (bad) leave mov xadd cmp mov dec add sete xchg movzbw setl setb pushf push lea pushf jmp pusha adc jmp mov in cmp or jge sbb out sbb idiv xchg jecxz xchg mov push and mov out mov gs cltd data16 (bad) pop rorb mov ret add jno inc out addr16 pop jecxz xor in test push pop dec mov xor add mov jmp jne mov inc mov jo dec push popf test and outsb sahf sahf and fadds pop inc cltd aas push (bad) loop jp decl in mov icebp cmp repnz push leave adc int3 outsl cmp mov lret inc lea ja push lea call jmp jno add std or aam lock lret push (bad) ss mov mov xor orb out and pop xchg jmp cltd in ja jb scas fisubrl xchg push add or lcall pop mov jmp jge xchg mov add dec xchg pop (bad) dec movsb leave xor outsl fldl dec adc mov inc (bad) adc push sti cmp add pop push xchg and add push fildll ds imul push icebp nop and jb test add into out mov sub pop ss shrb inc xchg sbb mov and pop fdivrl rcll sub decl adcl add add sbb decl (bad) mov stc (bad) mov shl lea call add pop ret push mov push sbb pushf pushl jmp push lea jne cmp cmc stc bswap mov rol pusha sub not lea cmp call push movl pusha movb pushf movb lea jmp lea jae add btr pop sbb movzbw pop sub mov mov shld cmp pushf mov pusha jmp lea call btc add xadd aam pop sbb btc shrd pop pushf stc cmp pushf call pushf cmc test mov mov call lea ja clc imul test bt bt add pusha pushl lea jmp sub aaa decl mov add cmpsl lea and xchg cmc pop out clc add roll ljmp sbb cmp lcall es popa cld mov scas adc sti stos mov inc imul sbb and out push inc stos mov pop aas push stos idivl xor das mov inc ja lods insb mov sti jl (bad) lods vmovdqa shll pop das push popf fnsave mov mov mov mov mov cmpsb int jns pop mov aas insl add push sbb nop xchg out ja mov mov mov jge or adc lret inc pop (bad) test jecxz mov pop dec imul hlt push cmp insb cwtl mov jmp ja dec inc ret dec cmp jno jmp inc lods pop int3 xchg jle mull push imul cmp insl popa es xchg sbb (bad) push cwtl cmpsb add jae arpl push dec mov movsl (bad) insl cmpsb les jl inc push add pop pushf int cmp out arpl in cli mov dec sbb nop aaa fisubrl xchg jecxz popf insb call push mov clc xchg sub imul outsb int push push cmp mov call add fistp or daa adc gs (bad) sti fwait (bad) jns enter repnz cli cmp push lods mov sbb stos shrl cltd xor cmp int loope cmp adc adc inc movsl pop inc ret add sti aaa and jp in mov dec and pop mov adc cs sbb lcall (bad) dec jge lds sti dec dec cmpb push dec jmp adc inc add test xchg pop out gs mov mov cmpsl cmc dec mov notl test loopne aaa pushf seta movb pusha lea call ret (bad) cli or fcmovb call stc cmp cmp leave (bad) pop adc mov xchg mov inc add mul xchg adc and repz mov jns xlat pop idivb sarl sbb push mov lcall xchg jle lret inc fsubrs adc xchg push sbb cmp xor loopne lock ret xor ret push test stc push test ficompl ljmp mov (bad) and pop icebp inc inc aad cwtl xor lcall sti pusha bnd fstpt lahf fidivl cli cmp fs mov jle sbb insl (bad) jle cli pusha xlat lret ficom jno testb out cmp jne imul cwtl pop sarb outsb pushl dec mov inc pop subb add call inc pmaxub ja cmp xor inc inc inc dec mov aas outsb sahf negl (bad) jae (bad) gs (bad) test lahf sahf cmc sbb dec in setae dec inc insb xchg mov push loopne daa daa outsb enter ds dec cld or adc fldcw inc mov push test sbb aas (bad) lret jo mov lret das cmp xchg jbe pop mov and js dec mov imul dec jg fstpl xchg sub scas jbe xchg jmp leave pusha cmp cs jp jmp push mov and or push lods jne jecxz add shrl repz dec pop scas xor scas cltd pop pop lret jl aas dec scas xor inc mov fdivs std add lea or mov xor mov mov or jge pusha movsb mov push mov aas cmp fdivrs mov andps repnz aad pop cmpsl ret pop lods cmp jne push movsb jns dec leave jbe aad mov or adc loop sarb shrb outsl pushf les pop mov adc sub les dec repnz xchg sbb xchg push xlat sub push lret and mov in sbb lret jbe adc add mov stos adc inc mov push movsb aas fld adc adc outsl mov add pop repnz iret std aaa jle mov sub mov xor popa mov pop rolb pushf mov cli mov je sbb push push inc mov pushf pop sub mov and jnp sub sub (bad) shll and mov and lahf xor into inc ror jo roll add dec inc xchg mov sub mov icebp popa data16 fiadd or push lods div in sti inc inc aam add push mov icebp add add pop pop loope xor mov fdivrs pop adc jecxz and lahf cs jp cmc daa cmpsb jae jno add inc gs outsl insb fs popa je inc add bswap pushf pop mov pushl jmp sbb std sub rcl lahf adc fldl xor test and dec test sub jl and mov xor add push pusha cs push lods or ret push aam insb push ret add inc lods and loop dec dec add pop mov lret outsl nop out push lahf bound and outsl add dec cmp addr16 sub mov out insl xor fidivl cmp mov je (bad) xlat (bad) push movsl movsbl shll inc mov fs pop jecxz loop call fs cmp mov push pushl ret push lea jb lea mov cmc mov test push stc shr pusha adc test cmc bt stc sub stc shl pushf call or inc cltd xchg mov enter push cmpsb sbb mov mov lock mov bound shlb jns pop mov adc movsl in pushf cld lret sbb aaa ret push js (bad) cmp push xchg shlb cmp rcll inc inc lahf outsl decb mov lcall push push sub lret cmp pop sarb xor test ret jae xchg xlat mov stos clc inc sbb ds xor add lods push lods ud1 xchg push icebp add jg sub mov sub mov call pop push inc (bad) push adc dec jbe sbb aam xchg xchg or aaa inc cmp cmp sbb add and and or pop fwait jecxz lds pop stos or cs mov rorl mov mov int stos fmul dec iret push mov inc jo je push stos fs pop push pop clc test fidivl inc lods aam pop mov adc aam pop test mov dec cmp adc sub es cmp outsl push sahf dec dec stos sub push call cmc push and adc movsb add inc xor addr16 mov insl mov add inc mov (bad) mov jno scas and test xchg ss lea mov dec shrb and or jmp mov in addl hlt inc xor test xlat lods jo inc stos cmp nop es xchg xchg sti and pop imul ss aam popf xchg test jb xlat mov out xchg mov or sub sub add in movsb adcl (bad) mov dec jo in cmpsl jo stos push (bad) bound movsl ja clc add (bad) xchg adc (bad) xor jns jg jmp inc add and (bad) movsl push xor jne push cmpsb aas sbb push jae adc fildl pop mov jmp movsl lds clc notb arpl out and dec stc xlat lret add fdivs push cmpsl std fistpl imul aam lea jmp inc fnop jno adc mov mov lcall fwait jae int outsb adc inc (bad) sahf testb ret ficom sub jo (bad) cltd popl or mov (bad) (bad) lea jne pusha movb setae jmp mov push inc mov and inc fnstsw test lock in push loopne je lds lret inc inc sub mov outsl dec lea jns xchg imul dec and push fnstsw sub and mov jle hlt pop fdivs pushf push or jge ret stos and sub xchg out and mov shl mov ror stos mov xor push xchg jno dec cmp imul pop in xchg add into xor xchg mov dec mov adc xor jg cmp dec int push inc flds pop es mov jl cmp out pushf fldt mull xlat or jge sbb push (bad) arpl pop xor sbb xor stos mov ss sbb dec mov mov pop lcall or push in stos and push int add xchg js cmp jb dec or les out jp sbb add jno xchg mov adc iret or movsl sahf cmc stc rcrl fmulp int and fldcw cld std imul (bad) xlat enter aaa sahf xchg push sbb fstl jle and lret cmpsl jmp cmpsb cmp push xor scas movsl jb push lcall es add jne fwait dec mov les mov xor jecxz les jl xchg lcall shrb or adc lea sub cs push cmpsl shrb cmp mov (bad) dec mov fdiv mov ss (bad) xor stc or xchg sahf aam mov adc jg pop dec xchg arpl or jbe mov sub out or repz mov (bad) stos push xchg mov xor aas xlat nop scas sbb mov mov pusha dec mov pop jbe (bad) call bound push fdivs ret sbb in icebp pushf jbe cmc sbb or sub in or cmp js rclb int and jge mov (bad) sub testl test xlat adc xchg mov lock out push adc sarl inc in cmp imul lds (bad) ja inc fisubr xor xchg ds les add push add xor inc (bad) test pushf sub clc pushf bt cmp pushl popl clc cmp pushf pushl lea ja sub sbb neg call pushl lea jae stc bswap mov inc mov pusha mov cmc test pusha mov sub jmp cwtl bswap sbb lahf lea mov lea lea pop bswap not setge mov pushf pushf pusha jmp push pushf jmp stc stc push mov lea pop popa xchg mov maskmovq mull out fcmovne loope icebp in aad adc or push icebp js fisttp (bad) std cmp add adc lds and mov pop and sub mov add adc push in js out ss sub add jnp jge sub jb pusha sbb pop out xchg call lret jo (bad) mov in xlat fs mov inc jo sub sbb cmp adc sbb mov je push add xchg cmp mov movsl mov punpckldq inc dec sahf adc add addr16 dec add inc and mov pushl pushl ret pusha sbb stc lea cmp xchg shld xchg call das xor decl push inc jmp pop ds aam mov (bad) dec push data16 das dec or mov (bad) sbb icebp push sti jmp aas mov test cld (bad) jecxz push cmpsl out jle in fisubrl cmp mov fsubl inc pop pop movl cmp movsb pop scas inc pushf cmp push mov (bad) out jl sbb rorl jmp mov sti inc setb sub add pusha bts mov clc neg mov pushf push pushf cmp repnz pushl jmp imul sbb pushf shl cmc lea bts lea shrd bsr mov clc xchg cmc btc mov jmp mov mov push bt pusha and pushf pushf add push mov pushf lea jmp call push jmp call shlb je femms inc jbe adc push outsb mov push ret add bound das imul roll jmp sub imul dec enter push xchg popf xchg rcrb push into xchg pushf nop aad in mov cmc jge jmp jge aam imul fidivl xchg aas xor adc sub lahf jl outsb jp loop add mov lcall in and addr16 jne out push push push lods jge pop xchg mov int out pop cmp int push jmp pop mulb dec les cmpsl aad cld dec mov adc pusha dec dec movsl or repnz xor adc test out je (bad) jge push mov (bad) call add gs jp push push pusha pushf lea jmp mov lea pusha pushl call add dec outsl arpl inc jb add add shr and (bad) call clc sub jge fldcw xorl inc or push mov jo push les mov aaa pop (bad) adc inc in mov xchg or add xchg jl xchg jg cmp or in lea mov scas jg daa aad shrl dec sub inc icebp lods xor imul add and push cmp ja sbb (bad) adc push jmp push push in lahf (bad) imulb mov in add or mov push insl in push insl xorb rcrl pop testl xchg cmp add jne or mov mov mov xor pusha pushl ret add inc js je jb arpl jae test mov push inc push test sub cmp test into sub in stos ror (bad) ss or mov call mov mov add cltd jno or adc mov out mov in mov mov mov dec xchg addr16 add dec (bad) stos push into jge fs fist sbb loope cmpsl imul dec sbb movsl jbe loopne fs inc fildll xchg movsl movsb add loop leave mov mov push lods push inc mov inc mov inc insl add push pop ffree xor xchg test push xor (bad) out mov int3 cmp and pushf adc pusha bt sub movb shl pushl jmp mov inc push int3 dec xlat xchg jmp add pop mov arpl push jnp daa pop insl (bad) mov loop imul jge (bad) xor or in pop jno cmc cmp xchg cld or jns push adc mov rcr adc dec enter mov dec xor pop movsb scas or sub push pop xor cmpsl iret xchg insl fucomp addl sbb mov xchg sbb jo push jle cmp mov inc push pop rcll (bad) je lock lea ds loope or in pushf loopne mov xchg and and cmp daa movsl push (bad) jmp jl lea jne cmc bsr rol mov pushf cmc cmp pushf pushf lea ja mov pop jmp push subl subb jbe fidivl push jp repnz sub fsubs call rclb clc loope mov sub lds pop mov jecxz (bad) mov aaa pop jno incl jg arpl adc int3 push cwtl mov jb cmp movsl jecxz mov and andl test add pop push add enter fs pop in subl inc stos shlb push pop cld cli test arpl sahf (bad) loop (bad) cmpsl xor int3 lea divl addl sub rolb mov sub test test test outsl cmpsl out inc adc bt pushf shl pushf call pusha lea jb movzbl add adc btc cmp not pusha bswap lea sbb pop pop not lea mov mov pushf pushf call imul pushf test add movb pushf lea jmp mov cmp pushf jmp jne gs xor fs insb add mov cmp cmpb pusha pushf lea jne pushf push lea jmp push mov push pushl pushf lea jmp pushf lea je clc add pushf push cmp pushl pusha lea jb pushf push bt cmc cmp pusha push push lea jae setno jmp cmpsb inc cltd dec adc flds or psllq fcmovnbe repz subb sahf mov pop jno jge loopne sbb and imul cmp and sbb addr16 pop dec movsb enter xor xchg out testb imull (bad) cwtl cmp (bad) jl lods add das call dec push add mov pop clts fcmovne push mov sub mov mov test lds repz addr16 scas add mov mov fist lahf fstp cli add dec imul sbb data16 or cwtl xchg xchg inc aaa mov sub mov addr16 addl cmp data16 jg out aaa out stc lret jnp in movzbl fnstsw jb leave enter pop push push inc dec aad dec fcmovnb std in out cmp jecxz pop popf lods push push adc jg mov lret xor jp outsb flds pop mov xor (bad) lea fiadd pop out dec xor adc jl jae (bad) push sbb inc int3 adcl sub lock aaa (bad) mov aas xchg sub mov test pop lea mov js adc mov dec imul mov stos sbb push shrl jmp cmc lods jmp xchg push push aam pushl mov lea call jmp int inc aad push inc mov or xchg gs loop pop inc notb mov (bad) int dec les xor out loope mov mov jmp ret lahf dec sbb js mov and out rcl add fwait xchg mov fwait cmp cmp mov xor adc in cld sbb clc inc cmpsb sub sub and jg jmp xor ljmp out xchg aad jb stos stc or jae jle pmaxub dec ret jp gs pop cmp xor rclb cltd cmp mov push inc in xchg (bad) bnd enter dec add adc jle (bad) aaa dec and push aas ret push fstl mov loop sbb pushf add scas ljmp cmp sbb arpl add xchg mov fistl and push sarb iret dec stos push dec int3 adc inc pop (bad) xor mov lahf (bad) jg mov sahf stos mov mov jl out mov loopne adc int3 ja mov gs inc stc mov inc movsb aad (bad) jl push pusha dec sbb mov fs inc and mov push es (bad) jge leave and jl (bad) (bad) push inc mov cmpsb mov mov jbe jl mov jl push orl clc add pop xchg outsb es cmp ss inc jne movb sbb mov mov into inc ret imul shr aam push out xchg cmpsb xchg out or push inc mov jns aam xor lahf (bad) std xlat popf (bad) loop push mov in scas in dec push cmp cmc addb or (bad) jnp dec push push cmpl (bad) popf xlat xchg and jp adc and mov lods fstpt cmp pusha push ljmp stos jl jbe ljmp sub testb sbb jecxz xchg jl movsl dec gs pop jge add pop (bad) icebp dec nop pop dec daa out (bad) (bad) sbb fcomip xchg test pop inc es hlt lahf or jo adc popf mov and mov add ficom and and fwait push cmc cmp jle movsl sub mov lahf mov outsb xchg jle fild imul mov pop insl les iret in mov and stos (bad) daa cmpsl lods and aas inc xchg pop (bad) lods xlat (bad) ficompl mov jge cmp or lahf jle movsl cmpsb pop xor mov lea jo push pushl lods pushf cmc pusha clc xor jmp pusha mov btc btc add inc lea clc mov neg add movzbl movl btr btc shr mov add pusha mov cmp jmp movl pusha mov pushl pushf push push pushl ret stc sub (bad) adc inc cltd repnz sub pushf xchg fisub inc mov xor out inc scas stos clc cs ret jb jmp aas xor stos push testl stos mov mov cmp adc adcl jne mov or adc mov xorb mov jle mov push pop mov add xchg xor jno or push dec jecxz jg xor ljmp inc lds pop sbb stos add adc sub out xlat out into sarl pop je sub roll push push inc and scas (bad) inc ret in mov or xchg or pop test data16 pop dec dec mul and xor test xorl adc or rcll inc pop mov fdivrp xchg cmp sbb std aaa lods pop add loope loope mov ja mov sub push test add sub (bad) xlat and jmp inc sub xchg fadd call sub fiadd push lods xchg and ljmp inc cmp mov push pop repz clc inc dec stos imul inc stos jae mov pusha outsb ss je cli inc sarb and cmpsb pop inc pop mov nop lret cmp insb cld hlt sbb imul add or lcall dec pop inc imul cltd scas jb xchg es xor cmp fldl inc sub repnz rcl (bad) data16 repnz loopne (bad) addr16 or loopne inc out sub inc cld in popf jmp jmp xor int3 adc divb xor cmp jo jp call ret adc pop adc add cld or loope sarb jo (bad) fwait and xor lea ror aam pop xor inc popf cmp inc gs imul outsl outsb dec outsb outsw push imul (bad) mov pushl pusha pushf lea jmp bswap call push push mov pop lea cwtl lahf mov lea xchg bswap pop mov mov call pushf jmp test cmp pushf lea je pushf cmp push jmp shrl inc les jno xchg test fildl lret lahf jnp sub adc pop push adc mov pop cmpsb into sub loop in jno pop data16 inc mov sbb sbb push jmp pop xlat push insb add and add push (bad) cmp mov add sahf dec dec mov (bad) or test push mov mov les test mov (bad) push bnd sti and mov lcall cmpsl and sahf sub push hlt faddl ja sbbb push adc and shl in test inc mov cmp rorl test test push xor leave jecxz mov aaa dec xlat pop out jg jnp in add jg lods ret test mov (bad) out lcall jmp test jle add sbb repnz daa and les pop decb xlat dec mov pop pushf pop xor dec mov fwait notb and sbb cmp sub mov adc mov pop insb out push add mov notl inc in ficom sbb jge std fs mov mov ja cmp ret jo orl icebp int cli push movsbl mov sub jb cmp jmp sub movl repnz movl movl movb lea jne shl rcr test mov pushf sub shrd mov lea lea clc push mov push sub call jmp dec inc sbb sbb inc sub scas jl mov push rcr mov add cli cld push cmp xchg std push add nop arpl inc push sub pop push lcall cmp out cmpsb inc pusha (bad) jp dec mov mov cmp sbb push mov pop dec idivl popa or and fnstcw jbe fcomi std cs and adc dec push pop (bad) in cmp add addr16 out cmp pop clc mov or in mov xchg pop pop sbb xchg scas jbe pop dec mov sbb sbb ret cmp mov lcall inc (bad) jno push dec inc dec dec xor cs insb add pop mov and jmp dec mov inc jae incb add cs repnz into in stos lret lods int3 dec aam cld xor and scas js mov or rcl mov out inc pop dec shrl rcll cmc inc fildl sub cld pop xchg loopne aas ret fwait sub lock rcl cmp xchg sub (bad) sahf dec in mov in es sub lods call push stc sub sahf inc mov rorb mov fnstsw push jl sub mov mov inc dec mov cmp mov jne pusha sti pop add pushf js movb jecxz lcall aad mov imul bswap lea call sbb ss push inc imull push push faddl push inc test xchg lods adc dec insl testl mov hlt cld add cmp jo (bad) out mov cmpsl out movsb cmp (bad) (bad) ss nop outsb cmp dec push lods ljmp icebp stos pop jb gs insl mov out fs push lea push cmp int pop gs lds mov push xchg add and push xchg imul (bad) cmpl fidivrl fimull rcr xor jnp (bad) repnz push cmp dec sbb xchg push mov mov fcomps jge inc mov adc cmp cmpsb into (bad) out pop mov lock in sbb xchg and adc and out xchg add fs test mov and and jae je lea bswap lea jmp call call add add pop add add xor xor adc mov jmp xor xor xor xor push ss cmp cmp cmp sbb cmp xor ss cmp cmp cmp into cmp cmp repnz add add pop add add xor popa xor stos xor mov sbb xor daa ss ss cmp cmp cmp cmp cmp (bad) cmp cmp cmp cmp int imul ds aas xlat aas add add adc add mov xor xor xor xor xor xor outsb xor js (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor sub aas xor push xor addr16 jnp xorb xor test mov mov mov xor js stc ss aaa jle xchg aaa or push cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sbb cmp cmp idivb add add add add xor xor xor mov xor xor xor xor xor xor bound das ss ss ss ss ss bound imul jle xchg mov xchg mov ss (bad) ss ss in cli ss aaa das aaa ds fdivl in divl add pop cmp cmp cmp cmp cmp cmp cmp push cmp xor dec cmp cmp cmp inc cmp cmp cmp cmp cmp cmp cmp insl cmp cmp cmp cmp cmp cmp cmp aam add daa ds movsb ds add popa aas add add add xor xor xor xor ss cmp and cmp lea cltd cmp add mov aas loopne out out aas sti aas add add add add add xor xor xor xor xor xor push movsl xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub das xor xor xor xor pop xor jl xorl xchg xor xor jmp pop xor xor xor xor dec xor jno js xchg les stc xor je (bad) ss cmpsb cmp cmp cmp cmp mov xchg cmp cmp cmp adc cmp mov cmp cmp cmp daa cmp cmp cmp cmp cmp inc mov xchg ds out ds ds jle add add fs xor xor xor xchg xor xor aad ljmp xor cmp (bad) aaa (bad) aaa or and xor cmp ja (bad) cmp cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp scas ds aas inc aas push aas mov loopne add add add mov xor xor aaa mov cmp cmp cmp nop add in add add xor xor lret xor sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb lea mov mov xor inc ss ss ss ss ss ss ss cmpsb lods ss mov mov aaa data16 outsl aaa mov (bad) aaa stc aaa add inc cmp pop cmp jne xor cmp pop cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp dec ds ds jno,pt jbe xchg mov ret or (bad) dec aas dec aas push aas pop aas popa aas data16 aad fidivr in add add add insb xor mov xchg xor dec xor jge xchg xor xor xor xor xor xor xor push xor xor xor xor xor pop xor xor xor jl repnz dec aaa je (bad) aaa bound test xchg cmp cmp cmp cmp cmp cmp cmp cmp test mov add add lahf xor xor xor ss aaa insl aaa in pushl or aaa cmp pop cmp cmp cmpl adc dec cmp mov cmp (bad) cmp cmp cmp cmp cmp cmp add add inc add add xor xor xor outsb xor xor xor xor xor xor xor inc xor ss ss imul push cmp mov add add add and add add pop add add xor xor xor xor mov xor cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp enter sarb add lock int3 add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp or add add js mov mov nop ss ss mov int3 fdivl loopne hlt ss or or adc sub cmp inc aaa je jl test mov nop aaa movsb aaa lods aaa (bad) aaa loopne add and inc cmp cmp cmp cmp cmp cmp cmp cmp jo jl cwtl cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp add sbb add add sbb inc xor xor xor xor xor cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp sbb cmp cmp cmp cmp cmp ds ds ds ds ds je,pt cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call add add add add (bad) adc add add add mov aaa push cmp add add add mov outsb xor test (bad) aaa fidiv movsl cmp cmp hlt cmp cmp adc cmp mov ja,pt add nop add inc add add xor cwtl xor xor xor xor push aaa inc aaa xchg aaa add and leave cmp imul sub dec cmp je add add add repnz xor xor xor xor out ss mov cmp cmp cmp cmp cmp inc ds outsl aas add add add adc xor xor fdivs fnsave test cmp pusha cmp cmp cmp cmp cmpl ds add add add dec add add xor xor xor xor xor xor jle ja scas xor xor stc xor out adc dec aaa xchg aaa repz push cmp fnstcw or push cmp cmp push jg,pt add add add cmp add push xor xor xor xor xor xor dec cmp cmp mov add cmp cmp cmp test sti ds aas add add inc add add xor xor xor xor xor xor xor xorl cmp cmp cmp cmp cmp cmp (bad) cmp scas aas add add push add add or sub dec xor xor xor xor xor xor (bad) lods aaa xor jg add cmp cmp cmp cmp ds mov aas insl aas test mov jmp add add dec add add add mov xor xor xor xor xor xor and ljmp cmp cmp jecxz scas cmp cmp cmp cmp dec aas arpl add add dec add add xor xor xor (bad) xor xor xor xor xor xor xor divl jl inc cmp inc cmp cmp cmp cmp xor sarl stc aas add add add inc add add xor cltd xor xor xor xor xor xor xor mov ss ss aaa call cmp cmp cmp cmp ds jp sarb add add add inc add add (bad) xor dec xor xor xor xor xor ss inc aaa leave aaa jecxz jge test (bad) cmp cmp mov cmp cmp cmp idivb push aas add add add add mov addb adc add mov aas add add add cmp fnsave cmp mov xor add xor xor xor xchg mov out ss cmp cmp pop cmp cmp cmp cmp cmp cmp enter ja add add adc xor imul (bad) xor xor mov sub nop cmp cmp cmp cmp cld cmp cmp outsl ds ds aas nop aas scas aas add add add pop xor xor xor nop xor xor fdivs fwait xor xor xor xchg add jp xchg aaa in (bad) cmp cmp cmp cmc cmp cmp cmp cmp cmp idivb sub jbe sahf aas sti aas add add adc add lcall xor add pushf xchg xchg rcr call mov or jecxz push fdivl sti enter push add mov push lods popf das jmp js into aam movsb ss jb cmp enter and imul mov jl dec jb daa jae arpl mov in xchg mov or popa sub xor (bad) mov xchg stos pop shrb cld cmp roll jl adc pop ficom cld loope fild dec xchg test fstpl lock ds out lock or call push cld mov push frstor sbb push jnp add in or scas int3 cmpsl jmp xor popf pusha push jno in push push fwait js pop dec sub (bad) dec outsb pusha jecxz test dec push adc int3 mov aas lods mov incl outsb and adc add adc sbb repnz mov leave hlt adc mov jno mov push xchg push inc sub push faddp pop push inc push int3 inc (bad) pop push push jp inc push les aaa mov pop aas cli dec xchg adc mov pop popa mov fadd xchg jb cltd sahf sub fwait mov inc sbb test in fdivrl sbbl mov lods scas ja cmp pop loop aad shlb mov aaa push int3 sbb mov insb icebp pop push xor adc pop shrl jmp mov lock jb cmpsl mov fsubrl sti stos in or jae jecxz stc mov mov or (bad) int3 jmp sbb (bad) mov mov inc jecxz nop pop jp inc in or ja adc mov out fistp lahf lock mov (bad) insl jns mov pop (bad) mov call int lret dec and sub (bad) pushf or aas mov loope lcall inc pop (bad) gs dec movsb mov call and scas imul nop push dec cmp cmovge jbe aaa jg xchg pmulhuw pop jecxz movsb imul out (bad) push mov shrl jecxz push subl lods jo xchg mov rcl sbb jle mov cmp push sbb enter ds sub sahf in mov ss pusha and mov roll (bad) (bad) sbb pusha sti inc push (bad) sahf cmp mov mov mov adc jo call mov mov xor movsb jmp fiaddl aad jle push sub inc mov in shrb jb dec mov sbb jo int3 pop cwtl outsb into mov into inc test dec mov sub inc in stc jbe pop and xor jbe mov out test pop xor mov je jecxz int3 cmp fsubrs dec mov sub fsts add xlat in jbe xchg pusha hlt mov pop dec leave je outsl mov idivl in or in lods xchg ss roll mov cmp or iret lds enter test mov pop loope mov into adc dec xchg stc stc fwait xor jbe cmp xor inc lcall popa movsl std adc xor pop popa test repz pop sub mov push nop jp push ror ja push push decl push mov mov mov sbb test test mov aaa lret rcrl jo test ret cli jne cmp rolb je (bad) out jne hlt push push popa aad sahf popa xorb xor std add lds sti or adc push daa xlat sahf push ss mov push add fsubrl insl fmull scas ss jne std adc imul std pop repnz aad repnz (bad) (bad) and mov sbb enter inc in jmp pop and xor and lods dec pop inc (bad) jge andnps xor or out push xchg and lods pop jmp sbb ficom cld add xchg add push mov outsl push (bad) lret xchg (bad) loopne ds xor lods lret push cld mov adc in jp jge fidiv aaa scas cmp dec jne adc dec cmp mov sub jb mov scas mov xor movsb stc dec dec add pop add inc xchg call test rorl push push test call sbb daa cmp xor xor (bad) xchg push adc sbb add dec pop test inc adc push cmp in lods cld push xchg (bad) leave rorb dec lds mov push mov push bound push movsb push cmp adc jns ja cli and mov (bad) ljmp add adc repnz push scas loop jns dec std push pop insb mov adc xor scas aam loop push mov mov movsl dec inc jb,pn cmp outsl pop inc fwait ss adcl xchg cmpsb out stos push aaa pop cwtl adc or into jge mov cmp scas dec push popa rorb fwait dec mov lds dec and test pushf lea call pushf jmp fdivrp mov fs ja (bad) cmp rorl xchg adc push (bad) cmp cmp inc lahf and and push cltd xor and mov push jle adc (bad) fldenv imul or stos adcl imul xor (bad) dec lods inc sub sub popa adcl cmp push es and pusha xchg jle notb xorb push call (bad) mov cltd leave cmpsb or into jb mov pop out jno adc and push and and fpatan popf fisttpl sti add cmpsb out pop cwtl rolb push inc push sbb dec (bad) fcomip push popf shrl lcall add fstpt pop mov xchg xor cmp adc sbb mov rcll sti lods sub mov add in sub push arpl clc addb pop dec nop and (bad) out ljmp and mov fucomp dec lret xchg jo imul xlat scas or and jnp lods xor adc out andl imul sar xchg inc fwait push stos mov test test mov shlb leave sbb inc push jecxz jp xor jp add xor xor inc into ret imul inc movsb pop mov sbb test cmp mov gs push push jmp decl gs mov sbb dec std sub iret out cltd add sbb pop test pop xchg inc mov cmp les (bad) loop pop mov add iret mov mov pop push mov nop push ds cmpsb pop and mov mov nop or push jle arpl (bad) pop (bad) inc adc push inc cld pop add daa dec test push cmp push int cmc cmc aad push jl mov insl loopne fstpt movsb push cmp pusha cmp mov dec cwtl push mov out mov stc pop out cmp jmp mov dec jmp leave jle jno pop pop xor cmp in jle mov and jb bswap mov jmp xor push jmp mov lea jb shr clc adc cmp not cwtl bswap mov push push lea jb btc (bad) lock clc sub not setp mov call (bad) jmp fstl push mov mov loop loop xchg xchg ds fnstenv pop cmp inc sbb sub sub dec loop add idiv sti inc fnop cmp sub pop xor dec add lahf push ja pop aad idivb decb sub push iret outsl sub out jl jecxz outsl push xchg dec ror mov push dec nop clc in rorb ljmp jne cli pop popf into movsl jge enter push and scas aad scas adc loop (bad) push xchg xchg stc add ljmp in hlt mov scas popf pop out push enter mov test dec sub mov cmp iret add fabs fcmovnb aad scas fmuls push mov jb cmp mov std push outsl add adc adc int3 inc popa lock sti nop mov push cmpsl negl repz inc lods (bad) sub cltd addl fnsave dec fist jg dec scas sbb aad push outsl add sub xchg sbb mov loopne ljmp in and jge mov push data16 cld sti inc into mov or fcmovb nop mov dec and sub add addr16 sbb ret loop les imul test pop call into jle pop xor (bad) pop sahf mov pop gs sub sarb adc arpl cld push sbb fildll adc xor inc xchg push loope push pop adc xchg push fnstenv mov push mov fisub cmp add pop mov daa shlb stc adc fisttpll scas pop dec inc cwtl push inc pushf daa mov cwtl xchg cmp xor xor out cs repnz call jmp mov or sub inc icebp mov (bad) lock out and inc xchg popl lods push push sub mov movsl sbb sub push (bad) imul cltd pop push cmp aad mov mov clc push test (bad) daa xchg sub sbb cmp mov or test pushf adc mov xchg fsub mov add mov lods and addr16 leave stos mov mov cwtl sub jnp arpl push mov frstor cmc sarb or sbb loop or xor mov js (bad) dec (bad) jp pop mov out adc daa ret push scas scas push push out (bad) movl xchg (bad) fistpl xchg imul lea je mov bound and lods sub (bad) imul mov jle ret (bad) or xlat repz ror xor jns js enter insb cwtl cs dec xchg sti es dec sub out push stc mov push push pop jne mov lock mov out (bad) in mov xchg sub inc sarb add dec movsb mov jo je popa mov jnp mov sbb pusha sbb inc insl insb xchg rcll loope (bad) jo cwtl into test (bad) xor sbb loop (bad) push imul inc mov mov nop xor fsubl mov add push sbb jo (bad) mov add lods sub sbb call insl sub test ret loopne std arpl mov fisttp xchg scas mov pop fsubl (bad) pop inc inc cmpl mov stos (bad) cmpsb mov push icebp movsl add gs lahf mov lret mov mov stos lods gs sahf cs cwtl imul inc in lods sub xor jae mov out scas cmp mov loopne inc (bad) lock xor or push aad pop jmp je pushf insl pop cld mov push dec sub (bad) dec cld ficom loope inc sub jmp dec xchg mov aaa movsl push inc fcompl add xor mov mov jo pop sbb test aaa jmp jo sub outsb sub add and shl jae stos inc pop enter cmp lods pop je test aam rorb aaa ds xor jae in lret xchg sahf dec aam (bad) adc and lea pop mov or clc test mov sbb call test add adcb dec cmp xor xlat cli ss and xchg rcll (bad) icebp lea pmuludq mov pop fstl mov adc xchg jno jns or jnp int pusha fwait loope or jne jne dec sbb loop mov es xlat inc inc jp (bad) cmp fwait xchg fsubrp gs fstpt mov cmpsl out pusha test pop lock push dec lahf sub jg dec nop or insb xor jp test pushf fistl jne daa xlat cmp mov sar mov mov loop push sbb in xor xchg push outsl test imul ret les scas out xlat or js push jmp mov sarl adc test add call dec mov xor push jbe std (bad) shll sbb dec inc in cmp stos mov push lea aad mov or pushf sbb mov or mov inc pop pop mov mov mov mov paddsw or or mov pop outsb sti sbb in loopne fidivrl xchg xchg xchg and ret testb push add pop push popf mov pushf mov xor add dec lcall out scas adc imull test scas or imulb test sbb push test mov icebp ljmp cwtl push mov inc jns je sbb inc test imul lods push dec adc mov jp out out inc cmpsl mov icebp int3 push or inc or sbb enter sub fsubrl inc inc xorps fs lea aad js cmpsl xor faddl and ss es xor insb dec lcall jnp cmp push xor cmp (bad) mov mov into inc fidivr imul inc enter iret add mov ret fsubrl push aaa push or sbb jl mov in xchg jnp mov fcoml int dec movsb xchg jg cli stc jmp test outsb je je dec outsb lahf cmp jo cmovbe jmp sbb stc mov mov cmp fsts imul loopne cli in sub repz cwtl mov mov pmullw in dec push lods dec mov push ret pushf mov push incl mov mov mov rcll data16 pop movsb inc dec push cmp xlat int3 push mov dec xchg testb sbb xor and mov sub outsl adc pop jp mov cmp in adc sub mov jb in mov and add push inc int push cwtl rclb xor jmp cwtl or sub (bad) push adc jecxz inc dec mov sbb clc sbb fnstenv xchg pop stos jne jmp rclb sbb aas add and cld inc js xor add lret cmpl fst dec xchg lods subl or lret jge test jo lcall jmp pop cmp fisubl pop fistl aas in sub ret adc adc (bad) inc or xchg gs sub push sarl xchg mov xchg and jmp aam js pop mov mov daa nop test movsb testb jecxz test jae mov and xchg push jnp jnp mov dec or movsb pop jge push pusha cmp shrb fwait cwtl mov xor pop push cmp pop add sahf cltd ret xlat dec aam aam pop adc inc mov imul sahf (bad) shll and test test dec and iret jg xor out adc clc repz jb out push sbb add mov je jns jp subl pop sub stos icebp sarb popa xor lock inc pushf adc adc inc cld xchg aaa outsb aam xchg mov ret icebp push add ljmp icebp dec hlt and push inc jle movsb mov and jb mov xchg lods out add scas cltd mov imul inc sbb fiadd adc inc ret add gs add cmp hlt repz gs fisub addr16 (bad) xor icebp mov xor or inc icebp popf mov mov lahf cmp jnp mov js jns ret sbb fsubl out mov jecxz jnp icebp repnz ja dec fmul sbb xchg push adc push xchg pop pop pushf lahf sbb scas (bad) fbstp mov enter cmpsb lock ret clc pop ja (bad) in dec dec out mov sub arpl (bad) sub adc mov jg mov imul push in imul and das fstps data16 enter (bad) arpl adc pop jbe (bad) ja je stos push fnstcw xlat xchg dec push mov loop out into (bad) shr aam and sbb shlb outsl push mov mov out pop jns dec repnz sub data16 popf arpl dec pop sbbb sti sarb daa popf scas mov sbb adc jnp and loop adc les pop mov sbb pop mov dec in (bad) sub loopne js add notl sbb xchg lods sbb pop dec rcrb lret insl cmpsb dec pusha jle inc sbb cmpsl scas mov push ss les sahf movsb fs sub push mov je mov mov add ficom mov rcl (bad) out mov fadds stc mov inc fnstenv dec pop (bad) out and push js ja loopne imul mov test outsb jb imul jge ret mov in cld popf bound div push jp dec sub inc jmp sbb dec mov lods add (bad) jbe nop decl in push sahf fistpl addr16 push ret rol movsl cmc ss jbe pop dec fwait sub sub pop xchg lahf inc insl or adc pop jbe in fidivrl ja mov sub ret hlt inc pop (bad) cmp repz and enter stc call loope xchg clc inc or iret lret pop (bad) scas mov lret push jbe jl jmp aad lods (bad) fdivp jp inc cs cli imul push lcall leave test jle and ret cmpsl pop scas incl fs jecxz inc adc mov in xor pushf add test sbb fwait mov mov stc gs int popf jp xchg sti ds scas mov (bad) mov pop sarb xchg cmp movsb int sbb shl pusha dec dec sbb insb inc mov cmp daa mov sahf adc repnz mov (bad) push sbb pop test xchg lret ja imul lods pop pushf adc bound and pushf or xchg adc jp add and jp scas xor pop repz jne xchg xchg sub orl mov lret xlat dec outsb add push lods adc pop sub daa pop cmp loope xor insl pop sbb in or movsb or cs movsl push rcl xor enter jge lods cmpsb das cmp push jge or add pushl add mov mov mov (bad) mov movb insb repnz ss dec fwait repnz sub jg or or sahf add xchg sbb sub mov xchg out adc shrw mov xor sub pop stc cs out pop int3 ficompl hlt out push xchg or mov scas cmp fdivs fsts xor dec sbb rcr les pop cmpsl cwtl fistl xchg push sahf aad xor jno jge gs sub in adc cmp loopne sarb sti jecxz jno sub push adc fsubl int3 in ret inc outsl rcrl push adc sbb dec fadd jo lea sarl int jl sub aas push mov cmp out movb xor mov inc pop bound mov das inc inc (bad) popa adc adc jge leave xchg jne pop push mov lds xchg pushf jae dec imulb or xor (bad) pusha jns and pop xchg cmp jle incb xchg dec out sbbl add xchg lea jne push (bad) call inc es mov (bad) push xchg lea mov inc ss test outsb push ss mov pop push movsl ljmp and push test inc dec stos idivb fs div sbb pop stos dec inc jg (bad) aam or dec (bad) mulb rol leave jmp ds cmp int3 mov add ret add sub ret rcrl out sbb jbe ss jo mov test sub out fcomps push (bad) jg insb sahf pushf (bad) mov push inc ss (bad) mov pop sbb enter ret and adc mov pop adcl inc je lock jbe fnstsw cmp sbb fwait stc insb (bad) inc pop call notb fsubp pop cmp or pop scas mov and decb ja dec pop mov pushf mov fistp out popa outsb bound test mov (bad) or testl or into jae add ret jge xor enter out xchg test mov lods ret repz insb test mov cmp lret out jle and xorl pop jle lahf pop lods (bad) cmovae lock insb xchg add movsl stc lds fsubrl dec outsb lahf clc jge icebp pop pop (bad) cmp xor inc xor loopne jne insb pop lods sub cmp sbb lods test lods in xor xchg adc dec ja sbb adc mov (bad) inc pop rolb (bad) inc stc xor and test inc inc nop jg enter pushf fisubr push mull popf dec inc pop (bad) mov cltd js test and push and adcl aas cltd out outsl imul xor loop sti leave push pusha popa mov xor das push add sub cltd inc xor mov pop or rorb lahf mov jl jl mov mov cmp jmp mov cmpsl push test lea (bad) stos cmp push mov adc push lcall out and dec push and idivl ficoml mov sub inc (bad) in mov mov loop outsb xchg cmp push nop and outsb cmp ds push adc int movsb push shlb jmp push into ss pop leave or mov lcall out sbb les fs push mov stc cli dec out or mov mov jae jnp test dec xchg lcall aam in and nop test xchg dec lods adc inc (bad) jle jle pop fcoms inc stos outsb dec stos xor loopne xchg (bad) mov test pop xor pop in gs fadd or das jnp xchg pop sbb sub (bad) add jb mov pop testb sarl push dec sarl xchg inc and cmc sub and lea sub push imul mov cltd insb and mov insl and add xor das mov jnp out bswap mov (bad) out fcompl ret cltd pop mov imul mov pslld lahf dec test mov dec pop inc pushf aad std mov jmp loop out adc (bad) push rcl add adc push fwait out push bound dec rolb popa mov iret inc pop mov xchg or (bad) adc add push or jle add adc xchg loop sub out fadds imul scas mov fadds mov sbb dec (bad) inc cwtl ss (bad) mov jmp fs (bad) (bad) sti loope pusha shrl mov adc mov push dec add and adc aad aad std xchg push sub cmp jae imul insb sbb int3 xchg sub dec mov lret pop xchg sbb fstps test mov movsb fisttpl mov adc lods aaa (bad) dec (bad) notb dec xor (bad) pop jnp arpl (bad) stos or aas push mov loop mov out push xchg xor inc dec xor lret mov sbb dec dec stos shrl mov pop lock jmp push lcall mov jmp mov add add push les add fdivrl cmp push outsl sub dec cs (bad) sub adc add push dec stos sbb sbb fnstsw hlt out mov iret push mov iret test shrb in push or fwait notl adc inc xor adc mov pop xor mov mov push push leave int3 test inc sahf sub scas adc add lock sub aad inc pop adc jle sub leave hlt mulb mov dec dec adc jno adc xchg cs dec (bad) jae mov fistpll inc xor cld pusha divb mov pop fwait gs xchg sbb pop sbb (bad) dec xor dec mov cwtl inc hlt fidivl dec mov sub fdivp outsl mov lret dec xchg inc je lret mov cwtl push jne and push movb mov fsts mov int pop dec lea dec or out inc pop je and adc (bad) push enter loopne enter pop (bad) mov iret jmp jns (bad) cmp xchg decb roll mov pop pop sbb in mov out outsb mov imul outsb push xor inc ljmp and pop push imul jmp leave push inc leave inc sbb cmp add pop scas push iret jbe xor sahf iret jg ds loop xchg jae mov xlat ss insb xchg outsl rorb loopne mov jle and cmp fwait in scas and int push (bad) or sub aas push mov mov inc aaa es scas mov jmp pop inc add xchg les rorb test inc icebp fadd mov ss adc mov and (bad) jmp mov xchg sbb pop push or inc int3 insl loopne mov cwtl out int3 call mov mov sahf loopne jmp adc mov mov sbb notl pop mov aas dec xchg mul cmc xchg jl loop sbb cmp xchg stos lds pop or les cmp shrl movsb or jp rol dec sub (bad) icebp add inc adc mov test add jae movsb lods sub push fwait and and jno push xor inc cmpsb push ror jbe imul cltd flds pop dec clc mov shlb mov jne xchg test xchg xor cmp xlat pop addr16 push pop xchg enter or rorl ja jl shrl imul in icebp fmul add and mov in or or test or (bad) les leave sub inc and xchg cmp popa cmpsl repnz sahf push insb dec enter mov (bad) pop push gs xchg mov mov je adc push lcall mov sbb (bad) xor in je ficoml insl push cmp xchg clc cmpsb adc in xchg fidivr aad out push and push stos jno lods and sbb or mov cmp movsl das int3 in cs inc pusha lea fmull std in and or and notl lods mov push fnstcw push or shlb aad pop movsb dec es stos jg sti jg out (bad) loop out push xchg add cld fs mov mov lret or hlt sbb xchg (bad) xor inc shr test cmpsl mov test or imul push fnstcw test mov or xchg mov xor ret cwtl movsl test add dec int3 fiadd and ret js aas in neg inc mov xchg lret mov cmc jp xchg aaa repnz add ljmp mov pop push addr16 stos xchg sub lcall pop xchg fdivl dec adc mov xor cmp and imul push out mov jo ret int3 sub cld cltd stos inc lcall icebp pop mov inc add jne outsl lds push adc cmp adc cmc mov cmp ret or popf stos incl cmp call or popf mov jecxz xor jmp andl repz mov push and push enter push movsb push stos dec mov pop lcall xor sub clc nop jno or cmp icebp pop pop push xchg jl inc aaa or aad and stos bound mov add sub test pop sub (bad) jl push pop adc add icebp hlt cltd mov and pushl xchg dec stc int movsl inc xor cli push push repz pop imul pop sub mov inc es lea pop data16 inc mov icebp jmp inc and push cmc fadd inc cltd cmp and or xchg add roll inc pop xor xor std into addr16 les (bad) xor xchg loopne sarb mov dec ret add mov sarl sub push sub mov out repnz test mov mov and cld sub dec ss dec inc mov insb aad jb in lahf out push mov jbe,pn jb mov loop xchg xchg inc add jnp enter lahf xchg fdivrl xchg or mov jae jae sbb rorb or loope sbb imulb push rolb mov fnsave jae ss insl (bad) pop loopne test jno jne pop jp sbb pop add pop and jmp daa add call js in cmpsb pop ret or out fwait mov inc (bad) in pusha sahf in test fs dec les mov mov or in add dec movsl and (bad) push iret push fdivs dec pop cmc pop ret jle aas ja fldt call rolb cld dec out subl neg and inc ret fistp xchg subl mov cmc mov (bad) bound cmp pop (bad) push pop loope xchg popl dec dec pop sarl popf cmpsl std push mov jne loop lea fisubr jb xchg jmp fs jne lea lea shr cwtl sub aas mov jns inc pusha stc add or or mov cmc push pushf test call mov mov mov pusha push lea jmp mov bt pusha add cmp test pushf jmp lea call clc test bt pushf mov pushf clc call jmp movl pushf pushf movl push lea jmp jmp add push gs outsb push gs js gs imul gs inc dec or mov push push cmp arpl adc xor sbb and cltd pop push push pop sti daa dec roll out scas iret inc test push xlat adc fistpll movsl rcll stos push dec pop xchg imul jb and mov jae and dec scas outsb mov push xchg mov sti leave shr stos xchg outsl sti leave pop adc testl loope jb and ss cmp push lahf and incb add adc leave cmp pop cmp pop iret lods cmp push call shrb pusha leave fcoms pop out test fsubr (bad) (bad) imul mul cs mov lock aam mov and daa jbe cmp pop cmp out xor in pop push or addb cmc das scas cmpsl data16 loope or insb stos push pop test inc push dec int3 negb addr16 sub xchg inc stos sahf ljmp sbbl mov pop pop cld inc sub dec rorb xchg or inc das rorb xlat or mov pop pop loop sbbl sub pop lea repnz push push fwait adc mov mov imul xchg mov fmul insl mov or bound (bad) or and cmc cmp out push mov inc fwait roll push ret push push inc pushf daa cmp mov das adc loop loopne test incb scas cmp push imul pop add (bad) mov jle jmp cld add dec push or pop aad jmp and iret sbb sahf and mov sti in fwait xchg mov fcomps mov rcll dec lods out or fwait lret arpl jo jg mov jns andl je aaa in push push inc mov mov cltd fbstp fild insl xor sti adc adc iret rcr cmp inc imul cmp mov push icebp jb fstl sbb lret jns insl push sbb mov push xchg pop stos stos or out and push xor dec test pop into xchg mov pushf out inc stos mov xchg add rcll push out cmpl jae shll test inc lock popf cmp sub or mov adc and cmp daa xchg xor aas mulb shlb inc inc enter fldcw ss xor mov in out push push inc icebp cli (bad) fildl jmp xchg jmp pop sub inc jge in cmc xorl ljmp xchg push cmp cwtl data16 ljmp cmpsl and xlat or cmp inc cld cmpsb inc mov addb (bad) jmp (bad) xlat ret jns insl data16 popa negb ja add aas mov lret loopne or push mov test pop ljmp daa sbb inc ss (bad) ficomp sub ret ljmp das lea or lea je clc pushf push cmp movb lea je call mov movb mov pushf pushl ret pushf call rcl scas das pop push inc mov mov pushfw add aad xlat add xlat out inc adc sti (bad) cmp pop dec std inc int jge out enter xchg add je xchg test subb mov add jo scas dec jne sbb jge xchg mov aam push dec out lods mov and push andl mov mov xorl lods aam lcall push aaa xlat cmp cwtl loopne push adc daa jle sbb jae xchg int jne imul loopne pop pop push inc mov pop test fdivl inc jo cmc and push shl (bad) mov sarl pushl or add (bad) scas push mov icebp adc ja lret adc add adc fnstsw (bad) into test stos fwait lock mov xor mov xor xor sub ss mov fisubl aam ret mov push loope cld cmp mov cmp xchg divb inc ljmp cmp sub push (bad) ljmp ds xor jae fs je push pusha lea jmp push lock std std xchg jo sub sub sub pushf mov pop xorb lret shrb cltd in sub bound aam pop leave add out sub test cmc jge and out xchg or aam xchg fist in xchg push push stos les mov mov enter flds pop jg pop push inc mov push movsb mov imulb lods add ret sbb xor push lret loopne and xchg adc clc or in cmpsl adc pop lods aam popl in lods push movsl clc inc jge imul xor push into insb mov jo fmulp mov sbb mov adc leave xor mov les mov mov cltd or in xor dec pop aad jns mov push das int3 insb out shlb ljmp push in mov stc inc pop jo xor outsb inc push mov dec sti cltd imul adc ss or add and ds fistp push push stc push out jge fs call call movl lea jb test call cwtl seta cwtl lea call (bad) insb push mov inc sahf pop cmp or mov das insl lods jge cmp xor inc fsub sub cmp push je out mov dec (bad) jle insl adc insl push adc cmp push mov loopne xchg dec scas and clc inc cmp xchg inc dec mov mov ss sbb sub arpl sbb (bad) adc lods aam or pop psrlq dec int imul xchg xchg aad xor xor in gs fdivs idivb lock sti jno jge (bad) ljmp fidivrl not mov pushl pusha pushl ret sub push cmp push lea jmp push push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret push push lea jne pushf pushl jmp sbbl push inc shlb adc pop mov lock cmpsb ljmp leave jno mov ja cmc (bad) dec outsl inc dec mov inc inc jo dec sbb pop les rcl adcb add in out das dec push (bad) loop outsl fnsave add or mov lret lret sbb hlt cwtl or es mov (bad) jno enter push shrl cmp dec pushf lods lods enter pusha rorb sub push adc push cmp lods dec sbbl jae rcrb int3 inc fisubr adc jp adc aaa popf adc hlt mov cmp jle sub lret push mov pop scas xchg loopne loopne clc sbb jne jno add ss aas (bad) mov incl imul popf int das lret and test cmp push icebp add pusha add fiaddl push mov stos loope aas shrl pop mov lock xchg cmc jb pop repnz stos leave cmp and push sub shll mov push jg mov nop fdivs sub iret or aad cmp das cmpsb out jno repnz stc cmp (bad) xor pop lea idivl sbb mov jo cmp pop push inc xor aaa mov mov jmp or fnsave shrl fistpl sbb in xchg leave movsb dec pushf ret scas push popa clc pop cmpsb dec mov sbb and push mov imul jnp into push lock into push ror pop sbb gs sub mov inc ret xlat mov call inc out dec out int sbb hlt test fldenv lret cmpsb xor mov call out push icebp inc out add xchg (bad) popf xlat jbe sbb mov xlat cmp xchg or xchg dec arpl adc add fucomp pop test add (bad) lods xchg (bad) stc cmp call push inc push push dec dec dec cs insb add mov bt cmc jmp je adc pop push inc push leave pop dec in cli rclb adc aam lcall sti (bad) inc mov fdivrp add and xor popf notb pop in fmuls mov pop xchg jns pop shlb pop leave test aad test push test fs mov test loopne sub xor leave loope or sti sti mov inc inc mov fcomps xor jge dec pop in xchg cmp inc test ret push in dec mov and pop scas fldenv stos ljmp mov sub jg add push cmp gs push inc out adc sbb test push cltd test jno xchg cmpsl pop and dec push cmp sbb popa cmp mov scas ja jp push dec pop mov add sub cwtl outsb sub jo and lcall or (bad) jb divb outsl (bad) xor mov repnz inc dec hlt or push jae das add mov (bad) cmp cmpsl aad leave shlb ret xchg scas in push js and inc and loope int dec add jne test bt or call xor shrl add mov sub jb mov add call sub jne ret not mov jmp and (bad) push gs inc mov imul add cltd ret push cld and cmp stos imul out (bad) frstor in test imul xchg push push lods shlb pop xchg jo add push jg fucomp leave sub sarl cwtl pop inc into dec addb sti xchg je sti inc int3 (bad) sti or mov pop pop fist sub cld dec mov ds shlb mov sbb pushf lea movb pushf push lea jmp call mov daa adc (bad) fnstcw (bad) mov fnop faddl jae or mov lahf pop sbb pop es std jmp jmp sbb fcmovbe test enter test out cmpsl subl imul aaa sub pop push xor mov xor and (bad) xor mov push mov int insl add xchg xor hlt stos xor js pop lock jo fcoms ja std aaa roll sub pop xor xchg xchg mov inc cmpsl or push or stos ja inc sbb fcoms inc inc test arpl aaa fs test or dec dec hlt hlt enter adc adc out cmpsl sub pop ss add dec jne and (bad) xor adcl xchg push arpl outsb dec scas cmpsb aad xor pop rclb ljmp pusha ds push sbb xchg rclb mov out or fwait stc lret jbe mov dec out cld (bad) sbb mov jbe jg (bad) int3 (bad) mov xchg cs or into lcall dec sbb cmp and mov add sub mov jne subb pop cmc sub xchg mov dec adc adc shlb icebp mov mov psrld xchg xchg ret jge pop in mov jns fcmovnu gs pusha sub test xor int3 bnd pop or incb (bad) sbb ds idivl sbbl stos jge rol je jecxz mov fsubl and iret xchg pop ffree dec pop adc aad dec imul ja int3 dec shlb (bad) (bad) mov (bad) icebp xor inc mov ljmp fnstsw push inc imulb jmp es xor sarl es arpl daa mov out and call jnp mov lret in movsl pop mov jmp xor jge aas clc mov jo cmp mov aad mul inc test (bad) push mov mov arpl xor pop outsb sub pop in aad es pop xchg sbb mov or mov adc addr16 cwtl jns call lret cmp sub cmpsl das and or inc rolb inc dec push insb inc xchg aam and mov rorb js sub pop jge inc lret pushf test xchg outsl call lcall mov negl sub test das jecxz mov hlt mov icebp iret es mov (bad) cld loope push add sbb mov cmp mov pop jecxz aam insb xchg pop cmpsl push cltd inc mov mov fcmovu jle or ja sbb xchg out ja push test sub or sahf ret cmp sbb loope inc mov xchg jmp ficompl cmp (bad) popa movsb dec pop xchg sub mov dec jo scas inc adc sarl fnstcw repz popf pushf mov loopne loope mov dec inc cld push (bad) adc adc inc cmp cmp hlt outsl sbb sbb bound bound lds xor mov out stos cli xchg add stos lods mov xchg jg pop inc lret sbb xchg cwtl or inc dec aaa push push dec inc mov xor sub fs and dec popa ja mov cmp add enter in cmp push push sbb cs add xchg ds pushf cmp xchg push and xchg mov mov out jb enter test js loope xchg in jecxz cmp inc mov outsb dec lds rsm lods in and loop or cmp xchg cmpsl and cs add ret push xchg loope mov popa add lcall jle cmp xchg xchg xchg loopne push jp out cmpsl push sti movsl adc cwtl or movsl int3 repnz mov daa insb xchg or jle and jns rcrl mov mov inc inc and xor pusha sbb aad pop mov pop pop outsb sahf dec insb insl fs jmp mov inc add (bad) sub adc mov out idiv movsl dec divb out lahf push mov cmp ds adc dec aam shr imul sbbb adc in mov and nop enter xchg push xor insl sbb arpl jnp xchg out cli push push push mov flds push push sbb insb mov pop cmc bound cmovge jmp loop and sti cwtl out inc sbb push cmpsl push mov es add xchg aaa pop push mov xor rorb mov movsb add nop and jb push xor mov inc adc xlat or cmp jge mov fwait test xor xor mov iret jns ds pop adc inc sub adc jge push (bad) pushf iret test hlt lahf mov push sbb push gs dec push adc sub push mov fdivrl enter lods lret call cmp popf fsts xchg ss push pop pop lret add and sbb sti aaa mov jo jl mov jecxz enter dec xor dec call adc cmpsl jg jnp pop aas mov cmpsb test rol pop jecxz pop mov dec xchg mov dec ja adc js sbb and push sbb cmp test adc pop adc inc lret (bad) jg test fistpl dec dec lea and pop into mov sbbl mov mov pop sarb xor mov cmp xchg in xchg cmp aam fsubrs sub adc sahf fwait mov mov pop popl clts repz insb test xor add xchg mov push iret out sbb dec insl add mov xor mov cld ud1 or movsb and inc jnp adc jo daa fisubl jp cmp popa push sub arpl cmpsb mov xchg dec cmp js mov mov or (bad) stos fnstenv cmc jmp into xchg sub sbb adc jle cmpsl ja pop cmc xchg add lahf mov xor shrb sahf jns in mov imul pop adc xchg xchg push in mov push cvtpi2ps pop lds add clc cli xor mov or sets into push adcl add jns mov and rcrb or clc lods mov dec jno add xor in jo inc aam lahf es dec push cmp inc pushl inc lret dec popl pop dec sub leave push cld andl and or rclb adc stos add push ss mov in inc pop xchg fist clc xchg cmp out ret jp mov push into mov aam jbe lahf push cltd pop sbb push mov sub mov dec xchg xchg mov push arpl xchg push add push loop mov add cwtl lods cmpsb out addr16 jmp cmp cmp rcrl mov adc repz sbb bound or jge sbbl push int3 loope ret pusha sbb mov pop mov ret je push sarl push fcmovnbe mov xchg imul xor sbb inc xor jmp iret mov sahf fcmovne sub cmp or mov inc lea push sbb rclb and xor lds cwtl mov push mov add xchg ret mov fcoml (bad) stos pop icebp mov mov enter xlat pop icebp divb mov or dec stos mov shlb add dec and jo dec mov (bad) int push jb ficompl pop adcl imul stos je loop or push outsb in mov mov adc push add out pop (bad) (bad) xchg fidivrl ja into cmp std mov (bad) not cmpsl pop push rcrb fldcw pop dec ss jnp daa popa sti jecxz cmp push mov dec add sti lcall jg pusha rorb xor movsb jl lods push push mov dec jns into cmc pop (bad) jmp je add xor inc add jno adcl lret decb pop ja loop call jmp lahf pop sub pop inc dec cmp or test inc ds out (bad) repz cld data16 ret cmp push imul mov sbb loopne pusha mov inc mov decl jbe mov (bad) pusha lahf in mov or xlat cltd and sub andb insb sub repz fstl cs sub inc jge mov stos jae inc out inc insl orl outsb push sbb cmp bound test lret jmp xor loope or ljmp hlt test push push leave cmp and jg std repz inc int3 adc lret jp and cmpl sbb jne nop jnp sbb jnp mov les or xchg (bad) ja jmp mov or adc jmp popa fs dec in imull push jmp sahf test push xor xchg lea jo and mov jecxz aad cld (bad) fldl pop mov sahf popa fimull cwtl arpl (bad) push dec push daa ret pop pop outsl sbb xchg mov fidivr pushf mov fidivl leave add or and dec mull aas lods jge incb push je mov int3 cmpsb jl mov inc (bad) fcoms adc enter repz push mov jae cs mov out adc add adc xor or mov push clc cmp inc add xchg pop lods cmp sub subb loope cmp pop pop sub test inc push mov cli pushf sub es das mov icebp sub xchg dec and imul test out movsb ljmp aam jb push mov dec nop jae xor std je mov xchg inc dec xorl sahf lret mov inc add sub jb aam in pop dec jmp xor (bad) mov pop xor lea aaa mov and adc mov add mov rclb sub daa add leave fildl in mov inc mov gs or sub xlat adc les fdivl rcrb lea cmc add cmp mov dec mov fidivl mov ret stos jns imul push or imul xlat xchg pop pushl outsb nop icebp mov aam adc mov inc incl sbb fstps push push pop mov ljmp stc xor sub add add cld mov fnstenv and adc cmp cli sti int3 int3 mov sub (bad) sub sub cmpsb lcall out and pop jnp loope gs ror inc xor mov pop mov xchg mov (bad) mov pusha cs mov rolb jno sub mull cwtl adc (bad) cmp adc iret loope (bad) mov adc and clc dec mov mov and sub aas mov pop iret das push (bad) lret mov pop dec mov jmp lret es add pop xor gs sahf adc or jg pop (bad) scas fsubrp popf mov push dec sbb (bad) fisubl iret dec mov adc clc (bad) sub les or xor in push shll dec pusha inc push aaa jecxz in or bound lods (bad) fadd pop dec or and repnz dec imul mov mov std rolb cmpb aaa rolb out xchg fwait (bad) push adc in movsb (bad) (bad) pop stos jne test popa xor mov icebp inc dec aas int3 mov or xchg out in push mov jle ja lret dec pop cmp (bad) xchg jge out sbb adc xor cltd add cmp shrl andl in aaa lds or movsb mov push insl das add mov cli mov (bad) std xor (bad) mov jge sub xchg inc inc push pop das sub jmp cmp hlt and lods or call add ret dec xor push sbb out sub div stos mov xchg hlt cs cmp (bad) enter mov mov sti jmp sbb sbb leave int3 js adc mull cmc dec cmp das jo stos jne (bad) sbb lret push fimul cmovb imul (bad) cmpsl (bad) std inc push xchg push fnstenv add xor cmp stos sub lods lods push and push js cltd lock shll adc mov out push das inc mov xchg mov icebp nop jnp (bad) mov fwait dec mov xchg or imulb out shlb push outsb push jl jl insl adc jae cmp sub sub iret or popa sbb out jnp push inc subb adc lret ud1 adc inc aas pop jbe mov rolb fimul inc fwait pop or xlat gs into std sbbl aam jmp inc in out jo ret inc xchg sub or in pop jb icebp push jle (bad) fs xchg cmp xchg out pop int3 loope pop or dec push stc inc cld aad fs xchg pop dec lock jbe pop add leave mov je loope inc add xchg mov pop cmpsb fs and mov jno icebp and stos cmp sahf and rol xor (bad) scas ficomp inc es and out or inc pop jno subl mov (bad) fs imul sahf push lcall and jmp push jbe pop or xchg mov and push int3 or adc in addl (bad) xor neg mov inc push test pop push mov insb lea fcmovbe push mov xchg pop jp jl int push adc xchg mov das sbb jg ljmp add iret adc xor jecxz add push fistpll and add cmp mov or bound mov cmp adc clc push in and gs push adc ror sub ror int3 pusha xchg nop lret mov aam test mov stos loopne push (bad) xor mov xchg mov mov pop mov neg stos cmp test repz pop push jecxz sbb and sub scas xor in pop add ret lea test pop mov scas cltd or add aaa fldcw lret rcl ret gs daa pop xorb xor or mov lods sub lods lods jo inc (bad) ja ret dec andb aas mov inc pop (bad) loop xchg mov int xchg inc push lock jo xchg inc or push shr xchg jb add xor mov paddq or xor movsb xchg pushf rcll push out fnstcw les xorl in pop cmpsb mov jbe das or pop mov pushf insb or or popf pop mov add push aam lret adc jnp or in add lcall mov mov dec xchg mov popa das pop movsb and sbb and call cmp mov or add jb cmp add sbb mov jg ss xor xor movsl cmp add mov cmp and jp lods cs insl into push sbb loop in xor or add pop fbstp shr jns (bad) (bad) lea and xchg mov icebp cmpsb sub loop bound cli lahf mov mov ljmp or std fistpl inc jne mov mov jno mov jg cmpsb (bad) and sahf sti (bad) xor and add popf xchg and lea fucomip shlb add pop push shrl mov lods xchg imul mov mov in pop (bad) xor lds ja mov jno ja insb leave ficoml or (bad) push clc fcoml adc mov fwait das push iret adc rep insl sbb lods enter nop scas jmp bound jl popf or xchg mov scas gs or das lahf lret mov (bad) js jmp stc lock orl mov jg push ja mov insb sub mull out cmp adc xchg push cmp (bad) hlt or std lock xor xchg or mov cld add aaa in pop dec inc jb mov cmp imul cmc decl divl out sbb xor les lds jp mov pop mov xlat fcmovne xchg addr16 inc sbb daa sub psrlw mov and xchg lds jge out or xchg jecxz in lods add loopne lds lods mov mov dec pop fiadd movsb jbe cmp or outsb and shr adc adc mov jg lcall xor sbb (bad) xchg test (bad) lea shrb push sub les xchg test inc scas push xchg std (bad) mov aaa daa jl and and sub sbb sbb add mov cltd mov sub mov sbb dec pop jmp pusha rep fsubrl mov hlt sarl push jp adc jecxz sub scas pop mov outsb je into pop fmulp xor adc scas hlt cmp dec (bad) cmp cwtl fs arpl pusha sub inc sub movsl push shrb call mov into ret mov mov into inc cmp andl pop sbb outsb sti clc dec adc mov sub inc push mov dec dec or pop cmc out jns cwtl jo jp sahf ljmp ljmp or adc pop mov cmp push or stc lds test mov jl mov int3 cmp test mov inc mov in cmpb test cmc push jg inc std push in xor and pusha pop int iret mov loopne mov or shrb sbb add in mov popf or mov fcompp and inc iret mov add popa jmp push mov sbb dec ja out fbld add sub and aam or adc xor clc cld cltd cltd cmpsl lods sub jl jge adc mov jns shrl xchg inc loope lret mov fisttpl xchg xlat fcoms cmp xlat dec pop push dec push out test adc jo mov hlt hlt insb lods call sahf dec cmp mov inc mov fs push lea adc daa and mov fisubl sahf and sbbl inc mov sbbl mov sbb xor rcrb push lea pop mov xlat setb inc xchg xchg jae mov dec mov push bound daa add mov or (bad) and sbb mov pop pop cmp pop repz scas mov cmp test enter sbb sar mov xor jne cmpsb stos rcr int3 jge mov les arpl xor popa adc add ja imul pop adc divl out mov xchg lock (bad) in out fidivl dec mov dec push xchg mov jp dec adc mov scas jne int3 pop cmp (bad) mov es mov insl cs xlat sub jo jns lock push and js rclb or jl sub xchg sahf mov (bad) into push push xchg lahf mov mov hlt xchg nop incb testb movsl cmp into mov sahf inc fsubs inc in pop outsb out cmp not pop rol idivl or aam and dec mov jl and xchg cs lcall lods dec test mov xchg cmp sahf push mov jg sub movsl jle das xor sbb cmc mov cld lret jno mov fwait cmp mov dec push int lahf fwait jno lahf and cmp das rorl bound jnp in hlt and adc out push cmpsl or aas push js sti sub enter jne sub inc test jb arpl add daa add loopne nop clc xor push pop scas sbbl mov adc inc and testl mov sbbl dec xchg sbb xchg stos mov inc (bad) sahf fsubs inc fidiv or ja or sbb cmp jo push xlat mov dec push out test outsl pop xchg hlt cs jno mov fsubs mov popf xchg (bad) imulb cli outsl adc mov insl and mov (bad) push dec inc shr fidivr add lea jbe repz xchg cmp inc cmp leave cmp dec jo mov insl std repz or cmp clc xchg inc adc push cmp (bad) lds dec jle or (bad) dec shrb js enter daa movsl nop or inc or fdiv push dec mov jecxz icebp shll jmp push cmpsl mov add sub xor rcr int push call and and add das (bad) or inc add (bad) aas push cmp cmpsb push dec dec mov (bad) nop (bad) add cltd cmpsb ror scas out aas scas dec cltd arpl adc in je in jo dec das stos sub rcll add insl mov sub outsl adc nop adc icebp cli stos or scas sub adc jg jmp xor loope xchg idiv sbb and xchg es jecxz and pop jl enter dec scas mov ret lret ss lods pop sbb call dec ret fildll cwtl gs sti lods out pop push (bad) in mov mov repnz bound pop ss insl pop hlt arpl into subl enter xchg roll (bad) cmp lret jge and add or or insl or lds adc out cmp push movb xchg cmp push mov mulb daa mov (bad) (bad) mov jo push xlat mov pop cmp inc loopne mov add leave arpl or mov inc or (bad) mov fldcw sbb pop (bad) cmp ss mov (bad) fistpl stos sbb inc cltd out mov mov or mov push push hlt mov mov stos rclb jp mov jbe inc mov add mov popa loop xchg inc pop test mov stos (bad) jns xchg jg cli repz aam out jno jecxz sub in mov out fnstcw mov mov rol (bad) xchg dec and pop stos gs out dec dec pop pushf fwait and mov dec pop pop add pop mov cmc push cmp lods mov push fcomps xacquire cli (bad) cmp dec mov insb mov movsb and ljmp ret jns cmp pop movsb jo push xchg mov cmp mov (bad) data16 pushf mov outsb xor lods (bad) mov sub jmp lock mov repnz xchg in es pusha jle dec repz lock xchg addl cld add fstps mov fildll sbb mov lcall push xor and add xchg clc loope push xor enter xor mov sbb mov cld clts test sub out jne xchg adc xor adc call (bad) add jne adc xlat insb sbb adc jno insl (bad) clc mov xor inc push inc mov sub xor leave mul mov mov rcll mov jno fwait pop and jp lahf js rcrb fidivr mov inc test add mov pop push loope xchg or mov xor stos in sti sbb pop and dec or les xor fsubl aas dec sub clc jge movsb cmc popa clc out sbb inc into mov cmp loope out fldt hlt cmpsb xchg mov call sar stos and cwtl movsb xchg xchg insl outsb test (bad) cmp (bad) in xor pop mov and cs outsb mov sbb cs cmp pop scas mov in and test clc mov jb int3 push fcmovb dec ror lea sbb and cmp lcall push pushf add mov lds push daa adcl ja ret in mov hlt xchg cmpsb dec dec cmp inc dec push fsubr jle mov pop lock rcr fs or pop repz sub test gs pop jle push dec insl dec and ret inc cld mov jae sub push adc inc das mov or aad sti lds daa sub fisubrl out mov das dec loop mov xchg push pop lret imul xor (bad) lock mov lods xchg cmpsl test mov movsb mov aas and mov sbb pop jp push in roll fimull sub add cmp test lret pop or js (bad) xor add ja sub dec and mov xlat cmp movsb negb jo dec test cmp pop mov (bad) stc roll std push cltd fdivrl mov shr add iret call adcl xchg xchg decl sbb add fdiv out test adc in sub lret lea ljmp loop dec add (bad) arpl (bad) or mov test mov fdivrs jno or cli xchg sti and pop and inc mov lock je mov inc into cmp sub inc outsb lods xchg scas sti fildll movsb pop xor lea pop jle push inc add lock test xchg mov movsb mov in cltd clc sub inc aad stc push fwait insb cmpsl adc mov sbb es ret sub and shlb jb pop dec roll les out cmp jae jl aam jl xor add cld imul jle test fnsave mov pop movsb jns jle dec iret stc or cmp xor pushf sarl daa jns mov pusha or mov fdivs sub hlt push sub jmp pop mov pop cmpsl xchg movsl (bad) insb inc (bad) rolb mov cmp jbe out (bad) ljmp jle xor scas (bad) cltd add je (bad) mov xchg ret mov daa adc aad mov adc inc imul fistp out lret shll (bad) pusha push mov pop push repz add (bad) mov jbe clc call and add cmp enter mov test ds popa outsb adc testl leave test cmp ret movsl and out push xchg pop xchg mov or sbb cli in test and push dec jns addr16 jns lods jl cmpb sbb push mov out loopne mov mov push fldt cmpsl andl pop mov jecxz cwtl aam jb mov gs roll xor out (bad) (bad) sub lods or shll cmc idiv mov inc outsl jle loope adc add fsts pop je inc mov cwtl sbb xchg movsl cwtl inc jl daa loop cld pushf mov add (bad) mov insb repz or js pop in jae into popf sti inc mov cmp ds jae stos ret mov into (bad) inc mov dec je movsb lods mov jecxz rcr mov adc sbbb imul stos (bad) sbb mov test jmp and (bad) std lcall adc or in iret mov iret sarb pop aas mov pop out imull lret in add mov hlt cwtl push sti dec and dec (bad) mov cs mov jecxz testb ret sub in sub insb idivb stos notl sub sub sbb push dec lock fcoml xchg sub rorl ljmp xor xchg in or outsl fwait cmp and and cmpsl std xor in sbb fwait jecxz loope das and xchg rcrl xor pop outsl cwtl cmpb pusha fbld popa push shr add sbb into sub mov test jae xor pop pushf jmp pop ret out push pop mov jae cli cmpl ficompl mov cmp (bad) mov shlb pop (bad) xor mov inc sub pusha push leave mov mov mov sub mov dec test adc (bad) iret sub andl push push adc ret out jle ja ret mov mov in add cmp push ds xchg nop xor push inc icebp mov (bad) mov dec fnstenv push pushl mov xchg and dec lahf (bad) ja dec cmp lret mov (bad) cmp jns jbe or (bad) mov jbe,pt xchg xchg and enter xor lods scas lret cmp mov (bad) jb jae js bound bound or mov stc (bad) pop nop addr16 jp dec mov cmp add push jo cs aas loopne lcall adc xchg pop shlb lahf sbb push into (bad) (bad) sbb jmp add pop inc lods push cmp push in pop (bad) int3 stos sahf nop repz and and xchg xchg mov popf orb xor cmp out pop pushf in mov ss test pop (bad) ja inc aaa fdivrs lods sub iret ret jge hlt xchg push in decb mov cmp lahf ds int stc lods inc int3 jb jo jg aaa dec push sbb lret lock ret movsb mov adc test loope ja enter les add sub icebp or adc jae mov push jmp xor loop lcall dec xchg dec push les push jbe adc mov jbe lds mov dec pop sti pop sub sub popa mov bound repz pop fdivrs (bad) std scas xor jp js icebp rcr andl into mov cmc scas cmp out lods fcomps sub push je pop xchg and call push add and jg adc adc cwtl dec sub mov adc lea leave pop ret add or out adc dec dec popf mov sbb xchg jge lcall cmp sti add xor ljmp push (bad) cmc jns daa xchg or mov lods int xor fprem1 (bad) adc lahf push test aaa xor and popf xor movsb push xlat and mov js ljmp or cmp ja rolb les jl ficomp pop cmp jecxz in and xchg add dec inc mov cltd add js inc adc hlt fs jge out mov sarl xchg sub xchg inc movsb mov adc xor xchg lea lret mov add rorl pop mov pop loopne inc push sti pop sub pop pop and mov test xchg cmpsl cs imul cwtl adc sbb add ja pop sbb hlt and pop xchg in test ja roll out add sarl inc aad inc inc jecxz insl mov mov ss lock imul mov jnp mov adc inc fwait mov jbe test push (bad) or lfs cmp clc mov dec xor sar popf stc insb (bad) jmp mov insb sub cs es push aad inc mov rcll fbstp sbb aas pop jmp jle mov dec hlt test les add f2xm1 in push out sbb mov pop mov insb pop or imulb push inc hlt andl mov adc lcall int imul mov arpl mov jns jge enter push aaa xchg in and mov dec mov sbb jmp mov lret jns sarb push dec pop push and ljmp int3 xchg jmp adc push bound data16 ds sbb sarb push popa ficomp mov stos pop test mov mov mov fidivr stc jns cmpl shlb pop adc (bad) mov imul inc push sub mov (bad) cwtl or bound mov push push ds lods in adcl mov xchg ja push adc scas rcl popf inc or mov icebp daa stos push enter loopne mov sbb mov dec fcomi push push lret xor stos in cltd imul addr16 dec inc outsb add fsubrl xor icebp aam int3 (bad) jge push ss pop call fmull mov and or mov int dec clc sub stc sub adc (bad) ja adc addr16 rorb add pop push clc or sbb inc arpl (bad) pop rcll lret mov pop or movsb add rep sbbl mov fdivrl xchg jecxz dec div push cmp or scas xor ljmp sarl cmp jmp out cmpb jno sub cmp incb lods mov mov fsubs add jle inc scas pop arpl jl lods xchg xor ss stc xor jl insl add repnz cmp adc mov pop cwtl in push test repnz int3 icebp test (bad) cmp sbb addr16 mov mov aaa test loope dec je add sub jle je pop pop lds mov pop jg lcall imul fcompl lods adc mov call dec pop mov ret xor mov out mov test dec jecxz mov insl ds or sub fs jle pop repz adc sub aas lock cld loop inc lret test outsl int pop xchg nop cli imul push cmpsb shl fnstenv imul push jo stc mov cwtl mov xor clc push jp rcrl (bad) in xchg movsb scas sti mov lahf mov push mov pop xor and imul mov jmp sub inc repnz jl cs (bad) stos jl mov imull js jae outsl iret outsb clc inc dec aas adc bound sbb jnp sahf test (bad) mov xchg out add xchg das ds xchg jp mov xchg mov mov pop lcall jge (bad) lds fnstenv push dec gs sbb cli fnop lcall mov cld sub arpl add in push push fs xor out in pushf xor loope mov test push or movsl and pusha sub cwtl ror xchg jp (bad) cs arpl movsl sbb iret test std lret es push cmp adc icebp mov outsb jl lret loope lahf pusha sti dec or jl pop xchg xorl dec and loopne (bad) pop loopne bound pop jne push popfw lcall sarb adc jg cmp insb nop lahf cmp add fadd cmp popa adc js dec mov cmp test pop jns adcl out xlat outsb mov iret inc in ljmp (bad) sahf fist cmp dec sbb (bad) xor mov xor fcomps (bad) idivb ljmp mov pop inc add lcall fistl fsubl xchg mov lcall dec xlat cmp or cmc enter xchg cli push lahf pop xor cmp jecxz cmpsb jle and cmp scas inc jnp jl mov push push (bad) clc insb push shr clc mov inc fwait add pop outsl sar dec mov jp sub sub cltd int3 add pop add lea pop push add mov ret cmp ljmp push cmp test push or xchg sub xor sub psrlw and iret shll jo es fsubrl shrl push imul out out mov imul add add xor sub jmp lea movsl push mov inc or cli mov jbe outsb mov inc add fs repz push sbb push mov jbe mov mov cmp leave xchg inc sub mov and ja sbb xchg xlat jge cmpsl mov xchg push pop incb jmp gs decb loop or mov (bad) mov inc fdiv mov inc mov pslld in ss mov insl (bad) pop (bad) and jmp push ror repnz in imul cmpsb cmp add xor loope mov outsb cwtl out push add outsl rorl inc add adc movsb call das loop ja loope outsb push movsb pop (bad) xchg mov in xchg jp (bad) inc xchg push mov (bad) out cli mov mov push or sbb cmp push aad jb out orb test repz jbe lea xchg and and xor sbb repnz dec pop divb push add lcall mov jle inc xor cmp cltd divl xor xchg cwtl stos js inc test push (bad) mov xor jo jmp idiv sbb pop pop adc daa sub push xchg pusha cmp inc adc out stc frstor int hlt scas sub sub mov mov push jbe sbbl add inc out or dec in out cmp popa gs and or inc push or inc (bad) mov in add sub inc test dec jg int xor and dec cmp sub mov (bad) in out ret dec mov stc das jmp sti sub dec sbb xchg sub pop dec dec or daa enter xchg shl sti out dec xor add bound sbb adc jp push xor mov mov pop mov iret scas xor sbb jle push add xor faddl mov push or pop and xchg lea popa gs fcmovnb (bad) fsubrs sbb ret pop xchg icebp push (bad) sub sarb inc ret loopne addr16 jecxz pop push jbe xchg sbb mov add cmpsl cmp push and sbb (bad) sti ret aas pop ret push cwtl shrb js push cmp clc add mov pop out add pop movsl mov insl pop xor lds test add test add cwtl and or sbb mov add xor xchg pop lods cmpsl xor in jge rep inc repnz (bad) arpl push addb adc leave sbb sbb inc xor xor mov je stc cmp jl or jmp dec cmp mov add fs movsl imul add pop bound mov dec mov dec push das push push lock cmp mov unpckhps or cli xchg add insb push mov dec pop bound xchg shrb xchg xchg inc cmp inc jae add sbb xchg cmp push das jno mov cltd mov popa (bad) jb push pusha mov movsl pushf add and call dec test and fnstenv sbb push shrl loop pop pop mov jno je scas insb mov pop inc dec enter pop gs mov jbe dec mov push mov dec sahf xchg std mov xor add imul fistpll jmp mov add pusha jecxz daa mov xchg outsl dec imul sub dec (bad) (bad) daa pop push icebp movsb cltd or mov xchg sub pop mov pop bound jbe call les pop pop or xchg loop cmp scas jno enter testb push into inc xor ja cmp lods lahf xchg pop fcompl xchg ja xchg in scas push movl (bad) (bad) pop loop or xchg out ret nop out push mov icebp (bad) ja adc daa mov push or into cmpsl and (bad) pop jl in fnsave add sbb push outsb inc scas aaa mov ljmp (bad) (bad) xor flds pop or rcrb mov and fisubrl bound mov cmp pop fwait mov fldt repz mov popf out stos mov leave leave pop imul inc (bad) xor cmp mov sbb jns sbbl fisubl sub sahf xchg fiaddl xor ficom nop testb lea testl push pop les stc rol mov addl mov pop cmp out adc cmp xchg mov sub xor jg xchg imulb in and push pop and imull incb mov sbb mov es jg ja es push cmp cwtl (bad) lock js into inc lock jle nop lret scas xor adc mov in leave enter call pop add or insl ds xchg out (bad) js mov mov or fsubr mov nop add cltd pop (bad) data16 jge popa icebp aam stos cmc (bad) push je mov jne lret aad pop ret mov popf cmpsb add icebp pop lcall aaa sti jle xchg cld fist and and inc ret ret mov dec xorl mov test mov in in sbb insb ljmp jb mov imul xchg xchg mov insb or jp jbe jno inc inc ljmp (bad) mull adc (bad) sbb out jo clc lret mov ljmp xchg dec or mov inc inc jb imul pop inc out cmpsl loop xchg dec push jg das pushf mov imul mov jle out add arpl shll rorb fstpt fildll roll insb movb pop mov push mov (bad) mov sub str mov ljmp das shlb repz neg sub ror xchg cmpsb jb bound lret flds popa icebp cmp xchg dec push push pop sti lret mov mov cwtl dec jl and jecxz xchg pop mov scas pop pusha and sbb jo fdiv xor xchg cs cmc cs mov dec gs fs push add lahf cmp cmp imul push push adc fnstsw movsl imul (bad) jmp cld lahf pushf pop pop xchg push enter sbb mov jnp mov imul mov and lahf arpl pushf pop stos test inc insb cmp rcll mul or xchg and loop cmp jbe js mov repz jb (bad) jo fs data16 mov mov dec lea inc fwait inc es shrl (bad) xchg fs or mov ret inc es and mov repz pop dec (bad) pushf add enter xchg fidiv (bad) mov loop in mov mov sbb mov lods mov mov lods ficompl mov fmuls cmp push out int3 mov cli push lret mov sbbl pop push rorb sbb push in addr16 or add fcoml movsb nop cmpsb sbb mov cld lcall mov and mov imul adc icebp mov out or adc push into (bad) in mov mov dec and out cld shrb scas adc push ja and insl call dec fildll sub jne mov aad (bad) pushf sub jno (bad) sub mov aam mov cwtl add and sub gs add mov mov mov fbld mov fisubr adc jl mov lahf mov mov lret pusha lahf and jns mov jnp pop loopne,pn in mov (bad) int3 xchg fild enter inc (bad) mov pop mov int psrlq imul cmp pushf inc or inc pop xchg sbb mov movsb push or push pusha ret insl cmpl jne,pn and xor add cld insl fldcw pop stos shrb iret and ljmp sub jl and out addr16 push pop lods enter mov pushf insl (bad) fimull loop repnz int (bad) pop aad adc or xchg sub addr16 sbb dec popa mov mov and aas pop loopne fistp scas or fsubl and les pop adc push cmp divl fwait xchg in lods arpl jmp lods lods pop fldenv pop and (bad) jecxz pop cmpsl cs add jns xchg jo sbb ds loopne pop adc into loop and push or and test enter push inc mov mov ret cmp cmp fnstenv stos jo dec sub sahf lret fadds fsubrl out xor sbb call jnp in aas lock dec rolb xchg inc jp,pn popa cmp mov pop nop mul outsl shrl aam lds sbb pop pop or mov dec inc xchg adc stc ss pop idivl adc push lock jbe sub subb jecxz (bad) cmp pop pusha (bad) adc div loope (bad) and or inc lds xchg dec loop pop push loopne push pop es loop es xchg loopne adc add push mov (bad) fcmovnbe dec frndint pop mov sub mov cmp mov repz or lcall mov sub les pop aam jmp aad jae mov out mov sub and mov aaa in mov or outsb scas dec es cmp mov adc outsb jp out inc (bad) fcmove sbb or (bad) (bad) xor nop or loope xchg dec lods sub fdivrl push xchg je movb mov ror push cli and fisttp push adc loope jge pop les cmpsl dec insb jmp xchg mov jecxz das cmpsl mov popf lcall xchg xchg incl arpl jle testl nop aam loop mov dec lahf movsb movsb pushf rclb adc (bad) push sbb loopne sahf and notb xor addr16 std sub int3 addr16 out dec adc fiaddl lods push inc add sbb or sub loop xchg out mov loopne sbb das jl mov cmc push mov repz movsb push push inc ror jp out ret cmpsl sub dec push sub imul fwait js add inc mov cmp repz cmp cwtl pop enter hlt xor decl pcmpgtb (bad) cmp sub lods hlt adc inc or inc cli (bad) bound pop push jnp mov in jb or fnstsw jnp popf cmp je leave (bad) mov sub rorb lods push fwait lea repz jge jmp sti jae,pt lock out (bad) arpl cs cmpsb imul xor cmp push jns or loop dec inc in into icebp pop outsb lret bound addr16 decb pop sub sub add js mov (bad) jnp (bad) jne call sbb imul inc fnstsw mov xchg mov lods cmpsb xchg mov jnp imul rcll sub imul jmp clc (bad) pop arpl mov jno jb sbb popl mov cld addb in adc aam xchg (bad) push fisttp push cmpsl outsl rolb mov shrl gs mov mov xorl (bad) fsub daa add sub push xor hlt aas and repz jg std sub inc testl or adc aas jns push cmpsl cld scas push push push int3 cmpsl push sbb roll and or sub das lods dec xlat js aaa xchg sbb cmp sub mov les sti leave iret loope hlt roll xchg and or jl dec mov ljmp push xor repz rorl add mov jne push mov xlat mov lahf push mov aaa aad adc mov mov (bad) and imul inc sarb popf cmc inc (bad) and sub dec jl push out sti test jp and mov mov scas lcall addr16 add arpl dec sbb push daa sbb (bad) mov or ret shrb pop test jo sahf sub out bound add pop or lcall mov push data16 fsubrs xchg mov cwtl insl sub imul inc bound sbb mov xchg xchg and mov loopne test out int3 add and dec outsl mov push mov fidivr aam fiaddl lods ja lods xchg mov scas sbb adc sub lahf (bad) xchg repnz cmp cmp int3 test jle cltd andl lcall aas and xchg ret xlat xchg jne push push inc out sbb loope fistpll (bad) mov (bad) sahf out jo imul cli mov jno lcall repnz shrb inc adc cld pop iret sahf pop push cmp andb sub add xchg ljmp les add pop or dec pop pop scas aam ret aaa pusha sbb ss ja mov pop repnz jmp repnz dec mov sbb std and mov outsb mov pushf imul in sub pop sub cltd sbb jl (bad) cmp shlb or bound int3 cmp mov mov push fsubl scas push push or stos lret xchg pop fcomps sbb push push dec push adc mov stc (bad) in inc stc adc and mov call loopne fwait xor loop xor cmp rorl cmpsl pop fild lcall xchg in test cs call mov lods push rcl mov dec mov enter pusha ds push loop xchg mov xchg out push or or das mov out mov dec jns xlat mov (bad) (bad) loopne lds sbb and sbb sbb fadds jle shll outsb int3 leave adc xor xchg push insb push (bad) pop inc loope sbb ds add js pop adcl (bad) stos stos xchg and clc ret (bad) cmp or sbb adc xor xchg sbb xor pop xchg add aas xor dec cmp xor fnstenv and in mov pop outsl mov dec mov mov mov movsl in cmp mov mov (bad) pop test shlb shrb pop push jmp push inc jae fsub or push inc or adc sub cwtl fwait push pop (bad) jno cmpb adc pop cmp jne popa cmp sbb xor out jecxz std mov arpl int push xlat jae mov cltd sub pushl out and cmc pop int3 jle sub ret nop ret jp mov dec xchg dec cmp inc push fcmovnbe add push mov scas sti (bad) jae jle les mov push add aas and jp addr16 xchg popa ret jo movl jg xor repz pop cmc mov int mov fwait in xlat popf leave pusha jae add idivl xor fcmove xchg fsubr ficom int lahf cltd and mov or push pop xchg ror mov leave fwait gs stc (bad) pop sti clc orl loopne (bad) shll dec test dec out cmp mov and cltd fcmovnbe and or jne pop push fs aaa push lret mov fs push punpcklbw lods pop dec jne sahf data16 dec lock or fcoms add gs mov aaa icebp xlat push pop push rcrl pusha pop cmpsb sar mov je sub outsb cld hlt ljmp xor add (bad) cmp into push xchg cs mov mov mov add pop mov sar stos xchg cmc pusha fwait inc cmp add mov test cli xorb push adc arpl jnp je adc cli cmp cld fs xchg test lret movsl inc push out in jmp push bound enter inc std or cld repz push sub icebp pop hlt js or pop and mov mov sbb dec fs es mov mov push test and hlt fldt je punpcklwd dec pushf adc push test (bad) push out sbb pop lods repnz mov cld xchg jl in in adc inc pop test fs lret mov pop inc rorb popf (bad) add lods mov mov push lods lods stc stos mov push jno xchg mov popf push out sbb add insl (bad) jns add ljmp pop stos inc adc xor icebp test xor lock dec xlat les push mov loopne ret leave xchg call loope and inc aaa lods pop aas mov insl test loope and (bad) leave clc mov xchg xchg lret mov pop cltd insl push jl ds cmp mov mov adc decb nop jge mov dec mov jg cpuid out push jge lcall and xchg fistpll push (bad) outsl rorl push pop int3 lea sbb sub mov sahf es fisub das cmpsl std (bad) ret mov push mov push xor xor jb cmp xchg call pop ret adc movsl or mov ss jb dec (bad) and push ret ja or jns std scas dec xchg (bad) fmuls add xchg sbb hlt mov pop (bad) daa push dec outsb push lret dec pop push fwait jmp inc xchg pusha aaa mov jl or xor or pop xor mov cmp fidiv cmc sbb lods das fcmovnbe mov mov xor loop shlb lar add mov adc fdivrs xor and xchg xor dec insl stos sub cltd mov lahf in jns adc jmp add ja rorb into dec jecxz inc fidivl mov jno mov xchg scas cmc or or or aaa js jo out ret push test sub inc jmp iret push or cld or loopne xor je adcl lods outsb cmp (bad) cld push aas mov cs inc pop aaa jle mov imul loopne add and xchg cmp nop sub mov hlt les mov popf push sbb mov push or mov jbe nop cmp mov mov inc leave mov mov jmp repnz int push mov xor into out int3 push cltd add add cmpsb fisttp mov dec inc ret aad int3 lods jo adc fidiv jne push mov pop mov sbbb icebp out (bad) fadds lea rorl js xor sbb gs add aam cld (bad) hlt rolb mov cmp pop dec or pop loop add jb out sbb test mov cmp (bad) pushf imul mov bound xor and les adc or cmp movsl or insl jg pop mov arpl pop (bad) jmp lods sbb lock lods insb or aad idiv enter pusha arpl add dec dec sbb in fadds jg xchg pop pop jle mov imul addb sbb jle or out lcall push mov dec adc sbb dec and push push sub add cwtl push call clc test aad rorb sub cmp test (bad) pop ds ljmp repnz cmp lods or inc loop popf lea cmp nop les add adc test push arpl sbb add sbb inc xchg pushf leave xchg sub push push bound repz fmulp cmp cwtl out (bad) cmpsb cmp (bad) mov es xchg xlat dec iret push or adc ds jecxz mov pmaddwd xchg jge mov adc test cmp sub xchg mov cs outsb or jecxz popf sbb addl add jbe add call mov push es push jae cmp sbb mov push int xor or ret mov sbb in add push mov adc ss xor pusha ds mov and and rcr fwait lods add or or jl push add movsb nop push and cmp push inc pop lahf call lahf or mov sub mov dec or out and in mov mov (bad) mov lock push mov xor rcrl xchg int pop inc dec sbb sti adc ret ds out je stos cmp daa in cmp mov lea jp (bad) or push mov fstpl loopne lcall mov orl (bad) stc sbbb sbb lds test fistpll rcr and lods fsubr adc jg push data16 (bad) jo jg icebp cltd mulb in outsl pop orl out xchg dec mov (bad) aaa in mov bound add cmp lret add mov adc add test mov xchg cs mov iret cmp pop jmp fiaddl mov hlt ret cmp and loope cmc cmp fcompl gs fistpl push cmp stos xchg insb aaa sbbl adc mov frstor and mov push push shll sub xchg testb mov mov pop jne add testb fs push dec dec hlt push and fisttpll xor cmc push out adc test mov jecxz das or sbb imul daa mov pushf inc or add cmpsb push fnsave cmp xor pushf sbb scas mov xlat or xchg clc cmc nop push and jb mov stos jecxz push push sbb push (bad) mov jg addr16 in xchg sbb test clc or movsl add les not jmp orl ret arpl xchg xchg pop cmpsl xor jo pop mov mov mov andl lahf cmp out sub push adc testb pop xor pop or xchg pusha gs addr16 in flds mov mov jnp inc popf data16 std in mov mov xchg mov (bad) outsl fmulp adc loop pop loopne push pushf xchg divl mov push call push data16 jo mov jle pop mov pop mov iret popf sub sub inc mov popw movsb mov adc push ret lods or add pop add data16 jle fwait jp pop in out push test jmp into mov mov (bad) and stos or ja mov int lds and scas dec (bad) in push popf jno push jns sub loopne add les push lock fyl2xp1 add icebp sbb mov cmp xor cmp es fcoml inc gs call int inc stos repnz pop sub pop loop pop cmp add stos shr pop or push pop cmp mov mul and lds stc rolb daa in in jnp xor je ja dec mov mov xor (bad) hlt mov push movsb mov daa cmp aam and lea adc pusha lods movsl popf cmp pop adc cmc xchg or xor ljmp clc (bad) pusha sbb mov (bad) push or xor lock daa sar mov insl pusha cmp lahf jbe push and test sahf orb daa popa scas (bad) int3 fdivrp mov and cmp mov rcrl mov cmp fistpll pop mov in (bad) js mov jg dec cmpsl pop push jmp test xor hlt scas inc cmp jmp add sub jl int3 sarb dec jp xchg add test das inc fiaddl sub imul and xor iret lods or fcoml pop pop inc mov dec popa test xchg add stos inc mov vphsubbw sti mov (bad) mov dec jmp pop dec push mov push scas mov pop pop cmp add ret mov inc jb xor and icebp xorb sbb mov add fsts pop xchg mov sbb cltd mov loopne loop test std (bad) out sarb mov dec mov jge mov push jae cmp push out xor fist or (bad) xlat xchg pop faddl inc mov and testl scas sahf shlb rclb pop call jecxz notl aaa aas mov pop jl and cmpsl jg lds lea loop hlt shrb push loopne fwait and fimull dec lret fdivs test jmp icebp lret jp imul sub xlat or hlt and outsb mov fidivrl adc adc mov or leave xor pop jp out mov rolb lret lea inc mov sar mov xchg test inc in cmp sub mov add mov popf push add lds jmp push inc insb hlt in xchg jge test or push ss shl (bad) sar inc lret add mov fcmovu push out test mov push arpl cmp repnz cmp mov cld into outsl jno pop mov int es imul fstpl jno sub sub dec (bad) jl dec (bad) pop (bad) leave or lret (bad) out icebp jbe ja adc test cmp fwait loop mov or sub insl mov mov cmpsb test enter adc popf push dec mov out shrb out outsl pop mov call inc push lock adc cmp xchg cmp dec stc jg int3 (bad) mov data16 fildl pop (bad) (bad) xchg sbb jo movsl fwait push aad jae pusha mov pop imul das mov in lods xchg test cmp push mov push mov dec cld cmp dec jae ret test repz push and pop jecxz jmp jmp push xor or xchg leave (bad) push cmpsb fidivrl in jle in add jge repnz sub xchg bound arpl arpl push pop xchg pushf enter out bound jge bound aas lahf loop xchg xor lahf pop jmp loop mov imul mov inc cmp xchg aam lret iret mov inc xchg cld lods lcall clc and mov pop pop jnp fildll and leave in (bad) std ret mov push out outsb mov adc dec (bad) shrb addr16 cmp add sub enter test das xchg shl mov mov lods push and adc mov loopne lods xor fcompl lret push push fldcw repnz mov mov add jns dec mov dec cmp lock or cmp outsl sub les (bad) jmp andl outsl fidivl and mov xchg jge push sbb mov pcmpgtw jb mov movsl js xor jecxz adc sub loope adcl es inc rcll shlb jae push jno fistl xor repz pop sbb sub xchg mov or data16 popf insl mov movsl xchg xchg mov dec push cmc mov mov xor mov mov rcl in enter call outsl jg pop into push lds fdivl and lds pop (bad) xor mov in push xchg xchg jp mov cmp shlb enter cmpsl add fwait add insl cs daa xchg repz lcall stos cli les mov scas addr16 ret xor ljmp xlat inc dec movsl sarb in sub (bad) dec push inc or lock rcr sub enter (bad) mov inc xchg jne into je xchg sahf leave (bad) mov jle fisub fmull and fcoms pop adc inc (bad) pop mov data16 mov adc push lods movsb (bad) aaa xor sub adc pop lods iret xor mov test rcrl sbb sarb or das fcom add mov push cmp icebp ljmp xor (bad) or inc adc rcrl mov gs bound stos mov daa sub or or imul pop push xchg inc cwtl add (bad) mov jo xlat push jl xor fmuls xor cmp or mov (bad) xor xchg inc cmp call push dec add es dec lahf out pop movsb in fild test jecxz clc dec mov xchg fcomps aad mov (bad) mov movsb test lock scas cmc mov repz xor addr16 lds add out cld push lret xor jg or pcmpgtw cmp ret push andb imul and dec pop popa lea repz and or add dec cmp or test fadd dec cltd jno mov je aad cmpsl push popa cmp jb lea fwait imul inc mov int inc nop negb mov and ja dec fistl mov xchg out mov stos mov aad mov testb xor or rclb xchg call daa outsl sbb cmc in cmp mov aad xchg mov mov fst lret cmc xlat cs add sub adc aad pusha aas adc cld xor push leave lss in je rcrl pop mov add aaa or jmp sub jae cmpsl je cmp in or add cmp fs jge push xchg aam xchg jne test pushf dec mov adc dec fadd cld push cmc bound repz test dec aad jecxz push lock rcrb sub lds sti xchg or rcll pop lcall aas mov pusha add jmp lret inc aaa cmc enter push push and nop (bad) xlat cltd jns add pop add cmp movsb inc es adc pop mov jae sbb data16 xchg cmp push or pop ljmp and xor (bad) jnp push clc xor sarb pop mov cmovns fdiv push push dec mov aaa (bad) iret stc push (bad) push push and lret stc ficoml push dec sbb adc push push xor sub fisub insl divl inc popf inc mov cmp cmpb in (bad) xchg (bad) loopne (bad) in (bad) lock popa adc rorb xlat clc dec xor xor std jecxz xchg mov das inc icebp rep cli data16 push ret fnstcw addr16 fnop cld mov and sub hlt sbbl jb mov lea mov xchg mov sub xchg mov incb out stos adc popa mov push in fdivrl sub stos scas push pop add mov lea (bad) movsl cmp inc sub cwtl or incl xor adc inc fldlg2 adc xchg mov sahf sub jo xchg fist dec mov orl aas (bad) jno and out sbb int3 lcall aad repnz cmp jl jge pusha inc sub add and dec pop pusha mov inc mov addr16 xchg mov add mov ret int in mov ds scas jle scas push xchg int3 fstpl mov push cmp xlat sti mov sbb xor mov mov adcb fisttpl inc lods mov sub xchg and decl jns imul cwtl arpl fidiv out mov pop aad mov arpl fidivrl jnp sub gs push adc bound pop into inc pop outsb push std sbb ret sbb push push xchg push cli jecxz xchg pop adc push fildll pop test mov mov mov inc pop movsb mov js cwtl pop xlat sahf sti lahf inc lock repnz sub daa sub mov push mul xchg mov daa pop cld adc dec mov mov cmpsl js js cs push ljmp mov in enter mov ds inc adc pop iret (bad) mov xor int insl jg and icebp js inc pop dec sub movsb sub movsl lret call xchg cmp or cmp adc inc mov push inc add jl mov in lds jno (bad) mov lahf leave stos (bad) rcrl fidiv (bad) adc (bad) mov inc lock dec cmc es mov fldt adc repz mov fdivrp fwait aaa cmpl mov das and jo pop leave push movsb xchg int3 xchg mov mov xor jp insb pop and pop (bad) mov aam das fidivr nop pop (bad) ja cmpsb jnp les scas cld mov aam loop movlps imul jle movsb dec ret imul pop inc xchg repnz sub jl xor mov sbb adc mov cli mov pop lods imul sbb mov cmp mov imull push mov adc jbe jnp adc xchg add cmp sbb push add inc sbb inc enter xor shr imul insl pop mov cs adc mov pop push pop pushf ret sti out push xchg push mov pop or cmpsl add pop push lods (bad) test lret jg test mov push inc add repz push push mov aaa out mull shrl mov mov pusha or jg pop call push sub aaa xchg loopne lock xor nop sahf dec lcall mov jbe xchg rorl xor aam mov sbb inc jge cwtl mov sbb lods test por cmp test mov aam cmpsl imul inc enter inc cld xchg sbb (bad) (bad) out scas inc pop cmp mov sub jge rcrl and cld cmovs mov xor std pop and push xchg mov fstps outsb xor ss (bad) shll inc jle rolb pop sbb add xchg push push movsb aaa js rolb stos aas rolb dec mov cli sub xor out or xchg and dec fnstsw jp xor fstpl pop lret sbb outsb xchg push rcr daa mov pop sbb cmpsb lods mov enter push dec pusha or cmp imul adc (bad) jbe (bad) cmc dec mov cmpsb pop orb inc push xor les dec add mov data16 xchg ljmp bnd mov cltd mov fdivrl mov sub gs adc push adc add pop bound lea add (bad) (bad) mov jae xchg into mov add test imulb sahf mov rcr adc pop or (bad) push subl lock dec (bad) in ror stos dec into mov cld lea xor push xchg std cmp ss in jl lret or ja jnp xchg jmp insb dec adcb mov (bad) ja and int add jns cmp push pop sahf stc sahf xlat jge cwtl inc (bad) xor fcmovu jl push (bad) dec sahf pop repz movl out pop je addl popf cmp xor or xchg loop mov bound das fnop popa cmp dec add inc adc adc xor fsts xor das in imul or sub lcall nop out mov jmp (bad) testl stos inc sarb mov mov jns push loopne xchg sub xchg mov pop xchg mov in jmp mov sub outsl cmp pushf shll adc in stc push ss push dec pop and (bad) out leave xor fmul in repnz cltd sub sbb adc gs (bad) or mov (bad) inc insb movsb xlat cwtl sbb cs sbb or les stos sbb or add mov pop push pop xchg mov cmpsb in (bad) push sbb and sbb dec sbb fildll pop pusha mov fldt mov incl es cli shll pop test dec loop int popf je mov push sub or dec aam insl movsb cmpsb loope sub lock mov lcall ljmp mov jo roll mov rcrb enter shlb mov (bad) sti sub into stos cmpsl mov xchg adc xchg nop popf push imul popa arpl ret es inc push jle (bad) jo add mov addr16 lret push out sbb pop cli jg sti rcll jbe ret fstpt lods shr out dec jecxz push bound mov hlt aas sub in arpl mov push ds frstor das (bad) mov loopne inc dec adc xchg mov aas pusha cs or mov xor js sbbl rcll or mov xchg sub stos out jg pop fldl arpl iret cld sub loop inc outsb inc mov (bad) jecxz push arpl (bad) and cmp mov and jmp push ljmp dec rorb dec jle sbb in mov ret mov dec fist jb push mov popa or cs (bad) faddl dec test pop or aas sub fwait cmp inc stos aas stos dec pop add cmpsb and push ljmp jmp (bad) mov mov adc add xchg popa sbb jns push scas jae movsl dec fisubr sahf sahf std test addb and mov rcll adc mov incb int jl lods xchg jnp dec jl lods nop mov push (bad) sti jns aad inc fild fildll std jnp pop nop movsb ret cmp push sbb sahf movsb adc and pop ja cmpsl int3 pop xor movsb dec outsl mov outsb inc subb repnz cmpl imul (bad) add pop inc xor mov or pop je mov movsb or lea shl add mov pusha fisubr xor jecxz cmpsl leave test mov and aam mov (bad) mov mov jno push subl push (bad) fs sbb loop mov imul cs (bad) mov lea imul sbb pusha bswap cmp ljmp cmpsl je out jmp adc lods mov cltd repz sbb dec cmpsb xor stc sbb inc aad hlt test ja mov leave push push into mov test sub (bad) dec push (bad) je or mov movsb stos clc jno sbb pop pop lret xchg (bad) jb cmpsl outsb push adc stos add sub adc fadds and pop and sbb mov jb mov xor dec mov out test dec mov stos fyl2xp1 mov fmull xchg mov (bad) int3 into sbb mov add or nop push jmp adc pop sub adc nop inc xchg lcall popa (bad) xchg cmp mov cltd cli inc dec in dec push and lahf add mov cld and rclb gs out pop lcall add xorl imul push jge outsl test push mov (bad) xor push adc outsb or add lahf xchg repz xchg sbb iret imul popf push insl adc fidivrl pop xor imul pop mov fnop ds sub xchg xlat push gs sbb std in clc dec mov xchg movsl xor ret mov xchg mov daa sbb pop lods aaa rcrb (bad) lret out mov pop scas pop jb cmp dec mov sub (bad) fisttpl arpl mov inc pop adc fldt (bad) dec pop in add jne hlt data16 sub mov mov cmpsb jecxz pop (bad) mov outsb arpl xchg imulb test lods cmpsl roll popa les sbb mov lahf sbb sub das mov stos xchg mov andl das sbb fcomp ds ljmp add sbb into pusha scas xor call push push and jne cmpl sbb adc push xchg add adc (bad) xchg add sbb lahf fisub lock xchg cmp inc mov push dec hlt pop jge pusha mov fldenv pop outsb out mov sbb and addr16 add leave ret inc add fisubl aaa pusha sbb lods data16 lods lock xor into mov sub cmpsl add inc shrl gs scas pusha mov pop pushf push push fidivrl push (bad) push stos inc iret enter cmp and pop lret icebp add adc mov inc pop lods sub xchg jns lock jge in in pop mov fcmovnbe jbe dec pusha aam ficom cmp cmp inc mov mov xchg xchg sarl icebp (bad) divb cwtl (bad) sbb daa push dec pop jb (bad) clc dec mov imul cltd push mov add insl mov (bad) pop into (bad) inc popa inc adc inc mov das xchg inc mov xor divl sti add cs sub and sysenter pop mov sub pushf and lcall lock and (bad) and pop cmpsb push fdivrs xchg inc cmpsl pop and testb jne and mov adc fsubs xchg outsl clc ret pop aam lds adc cmp imul sbb test push (bad) mov test and pop test stc xchg cld or call rcrl xchg mov mov mov (bad) lods mull (bad) shr or (bad) loope inc mov stc pop fiadd mov loopne lods gs jle stos cwtl xchg sub andb add cmpsb lods push pop dec std mov dec jl cwtl sahf dec sarl sar loop mov cmpsl cmpsb xchg out ret js shrl pop adc xchg daa pop mov dec dec outsb and cwtl xor imul jp push imul dec lret push lock or pop lahf sub jno dec jo adc mov sahf push lods xor jbe cltd outsb clc lret mov push imul bound js dec into adc push mov out push push mov rcrb cmp push jp sub or or (bad) data16 inc push pop in and call scas add loopne mov sub push xchg pop pop mov or cmp mov or outsl fidivl and sti mov mov mov shrb rclb ljmp pop mov add adc xchg sbb pop or addr16 push mov mov xchg sahf cmpsl lret (bad) ljmp loope xchg flds lret jb sub cmc pop mov mov jge lods lock pop pop jo test mov rcr and inc cmp xchg jbe pop jb fcmovnb dec ss sti les jmp mov fmuls nop stos mov js pusha sbb adc je jo add fist insb mov fstps mov mov pop xlat fs pop int3 test pop or mov loopne (bad) (bad) sub xchg inc test jmp (bad) cmpsb and icebp in xor aaa ss (bad) mov rorb pop and test add in push mov cmpl ret imul xchg mov je (bad) ss xchg orl (bad) mov clc xor cmpsb xorl stos fst dec loope fldenv push sahf enter sbb mov es cmp pop mov push cmp cltd divb fidivrl out cmp mov push inc mov xor push dec jge popa xchg mov cmp repz repz push sbb popa les out ja or mov jo dec xlat xchg jns sub xchg adc mov sub cmp mov or lds imul stos insb or mov mov orb test jge stc pop and scas jae outsl lahf add mov fwait aas cmp lcall mov jl mov lret int xchg mov leave dec inc xchg js (bad) leave insb sbb adc std cmpb call xor movsb adc and mov ljmp cmp adc pop in pusha insl push adc inc mov addr16 popf mov push xchg jle mov adc lock scas push in inc xlat jnp popa mov cmp fs sub pop aaa jmp pop std sub mov arpl jg pop jp mov push pop je (bad) leave jp movd cld fbld or cmp stos and xchg js insl fstps cli mov or jae push mov fcmovbe das inc push movsl outsb xlat (bad) or jmp popf add addb xchg add add and or dec jo mov enterw push xchg int3 push mov mov aad scas ficom mov inc ficomp stos or mov pop pop sub pop clc repnz push fidivl cs mov sub leave inc jge (bad) mov dec adc cmp fbld sbb stos or mov subb ja sti xor sbb mov add adc and gs xor and repnz push inc pushf fstl pop cli loope sbb lret jo fiadd push mov xchg push mov cmp dec cli push dec push cmp or test daa mov push in and jl or xor (bad) push mov lods add enter ljmp test inc cmpsl insb repnz adc add xadd jo mov rorl (bad) (bad) cltd (bad) int3 sub mov adc jbe sbb insl push sub jne mov pop cmp mov mov repz fs mov rorb mov mov add push ret push adc pop out sub dec decl (bad) push xchg pop xor stos or lea leave je incl adc lds iret cmp mov aas xchg repnz inc and jnp cs mov or push xor push outsl sub cltd fsts sub roll fmuls addr16 adc into aad xor enter ljmp dec out cmp inc arpl outsl (bad) lods sbb stc call mov (bad) xchg mov lock and mov xor cmc push jno push ljmp cli fistp mov sbb sub add in push dec mov lods lods es pop out insl int3 out out sbb iret cli repz mov cmp and mov mov fdiv mov aad inc sti sub jmp xlat aas push call mov les outsl adc fwait lock dec rolb inc psrld add les sbb lods xor dec xchg popa mov jg stos repnz push pop mov xorl inc ja lods dec (bad) ret sbb mov jge mov sub lock hlt or add push test out push mov popf xor lcall into pop mov ljmp ret jb mov lahf nop imul les fdivrs push push orl add and (bad) mov push xchg push fnop xchg call insl adc scas inc push mov mov push sub or lods sahf cmp into iret cmp add cmc mov push xchg push mov push ficomp sub stos out loope mov gs iret adc (bad) insl clc dec test dec and sub jmp dec aad xchg xchg cmp nop add pop sarl xor mov push es xchg fs (bad) cmpsl cmc pop mov adc push or push mov or push rcrb outsb push mov inc pushf adc rcll je mov fmuls (bad) pop xchg inc dec sbbb loop xlat dec push pushf and sahf inc icebp cs push dec vmovaps or push mov cmp dec hlt ss sti dec cld scas inc jl rol sbb jae aas add inc xor inc pop or in adc divl dec mov xor pop pop xlat xor or outsb sahf mov dec mov add adc mov aas add repz fstpt adc inc stos rorl pop mov mov cmc cmp call lea je bt stc cmp pusha pushf call pushl push mov call pusha xchg push aas jmp fnstenv xchg cltd popa sub mov adc push mov cmp sub ret push add lret inc mov pop sub pop cmp lock dec (bad) in imul jge dec clc push jge loop loopne mov sub pushf add les pop lods xor movsl pop or das jne jge xchg dec push popa lock testb mov scas push movsl inc mov add sub imulb fdivrs inc das lret mov jo xor pop cmpsl xor fldcw push int3 push pop icebp inc (bad) adc movsl aam inc mov adc push mov xor xchg mov rcrl cmp cmp imulb adcl sub add sub cmp add mov repnz push xor ret dec xchg inc xchg push adc ret mov fdivs repnz movsb aaa xchg scas daa lcall in mov pop cmp js testl inc push cwtl and sbbl arpl mov lock or push int js jnp sub in xor pop push stos and mov mov icebp add aam scas sbb enter cmpsb (bad) pop int3 dec insl clc fidivl loop loopne jp fs movl pusha jmp adc push lea jae daa adc cwtl dec pop aam bt pop btr mov stc cmc push cmp pop lahf lea mov jmp movzbw mov cwtl mov movzbw lea call gs inc sub lods adc lds mov fstpl mov movsb pop jl movb xor stos push aad in cmc xchg ret pop rclb push loop push repnz decl (bad) or adc mov push lods jbe fld mov jg adcl pop addr16 add aaa mov push jl add bound pusha mov int inc subl cmp in jg loopne fdivs xchg mov pop mov aad stos adc xchg stos sbb insb (bad) ja dec (bad) out movsl sub and out push loope mov bt pushf clc neg jmp shl pushl cmc test mov clc cmp movb lea jae test bt cmc bt sub pushf mov lea call jmp out xchg pop (bad) xlat push inc bound dec mov aas inc fsubs loop mov dec mov or mov test sbb pop in push test dec jb out data16 sbb hlt and xor and jle aam (bad) pop out enter dec movsb dec lret stos fidivl xchg nop cs daa leave call rol es rcrl iret jb push inc xchg or jge dec ret fidivrl stos push js pop cmp mov stos js mov lret lock div jno dec aam xchg stc adc cmp ret mov cs je and dec test sub js or je pusha bt jmp stc mov cmp cmp test pushf lea je clc add call out lea rorb inc adc and xor or jbe fisubr mov stos js pop faddl test inc jbe push cmpsl scas and jmp xor data16 mov bound push cld xchg mov daa push mov std push movsl lods dec jmp push sub pop mov cli inc mov sub stc mov cli mov out adc inc or rorl and (bad) (bad) pop jmp test and sbb fwait je ss bound (bad) dec insb shll ljmp dec test lock movsb mov inc cld or dec or or pop and pushf lea jmp jmp lahf jnp push rorb inc or jno pop pop out mov or fldt mov xchg sti jmp roll jmp fistpl fs sarl mov sbb movsl in xor in sub roll adc subl in and pop int3 xchg add outsl lods push sbb insb push jbe imul mov xor xor sarl push xlat into pop sub xchg or movsb aaa enter add sbb xchg xchg fsubs add shrb adc das xchg xchg push pushf lea je push lea jmp call pusha stos push push pushf pushl lea jmp mov test clc cmc call add dec popa imul jb inc imul jns popa je inc js jae jae jo icebp lods adc push mov cwtl (bad) repnz jl fstpt icebp lods adc ja int3 or pop icebp enter (bad) stc cmpb push movb push mov lea jne push pushf pusha lea jmp pusha dec clc movb rol clc neg bt movb push mov cmp lea bswap lahf sets lea setb lea mov pushf lea ja pushf lea jb cmc call mov pushl movb push mov stos pushl pushf mov mov push movb push mov lea jmp xchg addr16 rcl push inc (bad) je mov (bad) aas inc rcll sbb mov inc loope xor outsb xchg stc cmc or aad (bad) push xor adc pop lods imul add lea aaa push es adc sbb dec push push add popa test inc aad test sub stc sti jne ret add push popa je inc imul jae add das cli rorl inc movsl into cmp data16 das cmp inc jge pop fldt andl mov ja ffree sbb mov sub cmp adc outsl sti and sti loope mov fidivrl stos push xor cmp call ss test jno dec lcall push into push test sarl enter or leave sub or dec stos imul addl jmp xlat lds (bad) faddp lret imul xor pop xchg dec jae xor sbb and add adc faddl xor mov fmull inc push cmp out add jno std std popf popa das clc ds push add outsb je clc sbb jl and xor lea push sahf sbb loope outsb sbb int imul xor aam cli add cmpsl push and les ds and jo jle sub xchg cmp ret or pop sub and push pop test mov cltd sbb stc cmp xchg xchg stos or xchg jo or call mov xor and insl ds and inc cmc out push in inc sbb js mov sub test and jle cmp pop lahf push or add add or add add add add add add mov add add aad add add add add add add add add add add add mov push add call or add pop add loopne or add add jmp jmp lea jb cmp test cmpb pushf pushf jmp not lea pop push pusha pusha pushl ret push movl jmp lea ja clc imul call mov lea jae pushf pushf jmp mov push inc push test pop test or add (bad) jae lret je xor arpl xchg decb sub jae inc add sub push adc push inc lock mov jmp lods (bad) cs addb lods insl mov pop imul jbe dec jl jo push cmc push cmp add movsl movsl dec xlat mov rorb repnz aas adc jb pop (bad) and out movsb hlt inc xor es lods adc out lods daa mov xor jb ficoml mov repz cmc lock xor les frstor rorb xor inc out and xchg imul sub lds xor fimul push sbb mov cs shrb mov cmp outsb gs push loop jne pop pop enter fbld iret pop sarl add jg push inc and fisub mov inc test mov (bad) sub outsl fldt imul adc std inc xchg push hlt adc in iret imul fldt int fwait sbb sbb out out addl pop add or inc gs xor xor jmp in arpl inc jae lcall loopne repz sbb dec mov and das popa mov cmc push cmc js mov fimul fisttp inc push out cmc xor or push xchg pusha sahf aas mov mov lcall cmp loopne data16 cs push shrl scas movsl jne jg pop add pop mov cmp jne aad mov sub into jl shrl dec cmp iret in rorb push dec xor lret ss cmp mov sbb cmp adcl push test lock sbb call jg mov leave int3 test bound inc rolb jbe push inc repz push int3 push xchg add leave cmpsl je fmuls inc aaa cmp mov push mov jb inc pop dec test enter dec and xor and xchg scas add sbb cmpsb and mov adc inc lods imul xor shl xor test cli bound mov nop into jge adc enter je sub mov jb cltd popa pop hlt movb lds lds loop sbb adc (bad) and pop sub push outsb or outsb insl mov les sbb out jne add jnp stos and push xchg mov adc pop rcr cli lret or jp mov sub mov shr sub call stc pop ret sub jecxz (bad) inc mov inc mov iret cmc jne jno push scas pop shl movsl sub fwait insl (bad) pop jl iret xchg xor cwtl lods cltd push or (bad) jns,pt mov mov fwait in add fiaddl jnp sub sub dec test out scas pusha loopne mov cmp add and dec ret dec cld push sahf cli or xchg popf cltd pop and pushf fsubl les movsl int data16 push orb sbb lods fadds mov pusha andb adc sbb pusha push pusha mov lea jae mov push pushf pushf xchg jmp popa sbb pop loopne sub ljmp ja dec inc pop test popl inc xchg xlat pop xor popf popf mov xchg push xor xor sbb add xchg cli sub pop sub mov ficoml lcall cmp pop sbb inc test mov mov shr jbe mov aas pop test mov inc in fnsave insl es xchg (bad) into add jns or std dec insl inc scas outsl add xor xchg stos lret and and adc adc cltd sti push xlat or push push into push movsl dec push cmp lods cmp and outsl jbe lds orl repz inc in addr16 das adcb jge loop cwtl cs scas pop inc xor push dec imul inc subl dec outsl movsl and pop imul or push mov aas xor pop insl loop mov bts mov sbb into ret pop xor stos xlat and jge imul cltd pusha sti icebp jne push xchg xchg cli loopne xchg or (bad) xor out pop and popf inc std (bad) dec xchg daa jnp aaa pop mov jae int xor iret das scas push movsb repz adc aas xor xor pushf adc insb in jg push cmp sub xor stc pushf cmpb call jmp mov lea mov pushf movb pusha cmp pushl mov lea jbe jmp lea ja push stc imul bt add push pusha pushf lea jmp mov push inc rorl scas out mov into sub push add (bad) xor push vcvttps2dq rcrb icebp xchg imul cmpsb cmc xchg inc xor scas fiaddl add mov fmuls xor adc xchg rol xchg push cld (bad) adc xchg fistpll or bound fs sub push nop cmc cmpsb xchg pop addr16 lcall inc dec pop inc int3 mov sub clc adc rorb insl shufps dec (bad) fnsave pop test mov pop (bad) xchg xor sbb mov sub cld push mov je fisttpl int3 out cmp mov cmp mov jmp es outsb sbb mov mov sahf mov xor jbe ss pop sub lahf cmp leave stos and push fsubrl call mov dec jle and lret dec pop and adc fsubrs aas scas mov loop int3 xchg mov pop aam and xchg mov in stc addl sbb mov lods enter enter xchg test dec jo out jno popf inc dec xchg aad in or stc pop pop movsl imul ja push sub mov (bad) mov test out std lcall add push mov jmp fisubrl or push inc push cmp add push stos enter pop pop mov inc mov cld push xchg push cmp sub addr16 cmp int jbe cmp push cmc inc xor xor dec and sti xor dec lahf (bad) mulb fnsave scas cmc cmp push daa dec int3 pop jo xchg (bad) mov mov pop mov jg lds inc clc je push fmull out imul jo xchg popa lcall jo xchg sbb xor fisttpl lods flds jg pop pop fmull mov pop sub jmp mov dec sub mov fldenv movl pushl call inc inc push inc push dec xor cs insb add add jmp sarl push aas ret push (bad) outsl and xor adc add inc push (bad) inc in adc push adc bound stos push inc sahf xor pop sub push xor stos push add (bad) pop jb xorl jg sbb jne sti adc mov int dec rorl sbb fdivs mov lahf mov in in outsb mov arpl out pop lds sub (bad) adc xchg rclb pusha loopne jne icebp xor and add dec sub pusha clc cmp jmp bswap shr dec or test mov bsf or inc add jmp jbe cmp out inc cli arpl aas scas arpl inc jg outsl or test pop pop mov and aad mov inc pop sub add adc dec ficoml movsl lret stos std inc sub call test test in fdivs or mov into lods hlt out cld aaa aad call daa out insl mov jns loop jb fmuls test shrb inc add cmp and cs loop cmpsb cwtl add ffreep test dec in jo pop in push fistpll cmp push cs and cmp stc push cltd stc adc (bad) jb sbb movl mov mov mov pushl mov movw pushl ret lea jne cmp setg xor lea shl jmp lea je push pushf bsr add shrd clc mov mov add jmp stos outsl cld sub push inc jbe in jns cmp stos (bad) int3 mov xchg sahf lods or out mov pop mov pushl mov inc gs out or sti push cmpl fcoms popa imul or iret dec dec insl or int outsb out (bad) push push mov cmp out test mov push mov popa in sub cmp dec adc mov push sub mov jo and jp jbe arpl daa push into imul es aam cmp clc call adc fwait inc loope inc xlat dec stos mov cld and cwtl gs add int xorl dec or pop leave dec sbb (bad) mov add cmp cmp popfw imul push mov nop pop inc mov jmp or or pusha mov jne ss shll aaa out fmuls mov and ds xchg stos jnp test jl mov jnp (bad) es out andb shll aam cmpsb test ss enter mov and dec fsubs mov jns test inc push insl xlat xchg in mov inc or nop xchg rorl je fdivs lock clc shr outsb dec out repz add test hlt push insb cli adc hlt mov inc scas pop stos mov pop fstl (bad) fistpll pop mov insb stc xchg push rcrb and out mov lahf dec pop je cmp ret dec dec int les int pop pop addr16 sub (bad) je xor mov and mov popf jne xchg fisubrl xchg jle push int3 addr16 pop mov icebp lret mov xor add mov xor loop inc cmpl dec mov xchg test enter push pop jp jp push xchg pop or dec lock (bad) or push mov (bad) or pop push call ds ja pop push into sub arpl loopne mov imull hlt xor insl pop ja jne push adc inc stos push push ljmp repnz stos push mov into xor int3 xor mul stos dec xchg push pop and mov (bad) and jbe fwait push mov rolb push std inc sub xlat mov mov scas rcll dec inc push dec inc dec xor cs insb add cmp pushf push push lea jb btc xchg shr xadd mov bts shld bsr mov jmp or mov neg setbe shld cmp sub shld sar push movzbw rol bt push aad btr (bad) hlt pop push aas lea pushf mov adc test bsf sar mov test push push pushf test pusha push lea je lea dec mov xor (bad) testb (bad) shr cmp call movb movb pushl popl push pushf movb pushl ret push push mov push mov pushf lea jmp xor push inc xchg push cwtl jle inc mov pxor mov ret dec xchg push jbe stc pop or cmp mov or (bad) cs out sbb xchg dec cmp mov dec loope js xchg dec lcall mov jne ss mov and sbb sub push sbb stos cmp or lea ja pushf imul cmc cmp add pushf lea jmp xor cmc or mov sar cmc pushf sar add shl adc mov pushl jmp loopne ret push in push inc dec and loopne,pn mov mov cmpsl ja insb jb dec sarb sub jbe mov cwtl push dec inc pusha js call add data16 cmp sbb lods add sti sub sub shrb shll lods dec pop add daa (bad) push fldenv test aaa mov sbb cmp pusha inc cmp adc scas fmuls xorl mov imul out int lds push fwait pusha sbb ret pop scas pop mov push inc pop test movsb (bad) xchg fcompl mov pusha inc outsb mov add cmp mov inc cmp adc jp aaa mov ja jb ljmp jge mov test hlt rcrl std and or movsl xchg jmp xchg ret inc mulb cmp int3 sbb (bad) hlt cmp repz jns mov cmp and jne cmp es sub and push into inc lods mov sti out out mov pop pcmpeqw leave (bad) aaa std jno std cmp lcall fistpl push movsb or rorb push mov cld cmp push leave adc add mov xor push in dec repnz je mov xor into add mov jb dec or das movsl jge aad in sbb add int3 aas fisub or and jae xor xchg xorl xor insb push cmp jnp enter pushf jns ljmp cmc pop adc pop outsl stos xchg cmp shrb or pop and lahf loope mov push in andb push inc xchg sub adc pop shlb push lcall cmpsb imul shll sub jecxz lods cld popa fimul test call shl inc adc mov call push cmp icebp pop sub dec test test mov jle clc incl jo loope push inc mov es rorb jp ja xchg pop int adc das jecxz enter sub jl fdivrl jecxz adc pop mov or fstl call sbb stos cmp neg rorb xchg mov hlt mov lahf push and jg pushf loop pop ficoml loope adc or loopne (bad) out dec stos imul jb mov jle dec dec sbb lret or ja aas ss push inc jle or pop lock adc mov mov mov data16 dec out inc add inc gs outsl fs gs popa outsb fs gs add scas push call jmp shl call cmp jmp cmc sub test stc mov cmp cmp jmp mov dec xchg jmp push mov dec fmuls pushf push sub pop into (bad) rol insb and inc shr sbb (bad) lret loop jg or repz nop add cs sbb ret inc cmc mov stos pop aas pop push dec vcvtss2si push inc sti sbb jmp mov and sbb inc mov jae out lahf lea repz scas jne movsb aam jb or jg push add mov push push addr16 cmp movsb sub mov push nop clc clc outsl jle xchg add jbe jecxz mov insb mov jns and jno mov insl xchg xor adc push inc pop dec aam adc (bad) lods rcr stos or lcall cmp pop mov push sbb cli in push pushf xor pop (bad) mov lahf test imul outsl loopne mov or and mov test sahf sub popa sub (bad) rcrl lcall push test std inc icebp dec cmpsl mov test (bad) push mov fwait lret out mov lods push adc mov xchg dec pop jp dec pop fidivr and je rclb aad xor pop sbb and push xchg and stos inc (bad) jbe mov bswap sub push movzbw mov adc adc btc push cmc add push dec inc push mov add setb xor push not (bad) icebp mov cmp mov movsbw mov call push stos push mov pushl lea jmp sbb seta pushl lea mov lahf mov lea jge not jmp cmp movsbw mov sar sub (bad) idivb mov pushf bt sub jmp lea jo lea pusha pusha lea call call or sti jnp push inc xchg sbb pop mov pop inc imul jle fs pusha (bad) pusha or mov mov mov or push movsb pop mov (bad) in in or ljmp lea mov or pop inc mov outsl mov and cmp daa mov pop fbstp mov dec je (bad) and sbb push pop movsl or mov mov dec rolb cld sbb dec mov es (bad) mov hlt scas ret dec mov es dec dec std xor push pushf jmp lea push rcrw xor cmp aad push loopne jl pop mov inc pop mov les jmp adc sbb sub dec test das xor outsb push test out (bad) and add roll icebp sbb inc aad and sub lret sbb fnstcw (bad) call pop data16 popf jbe or test cmp push mov shr mov xor (bad) pop mov sub and cmp sbbb adc inc cmp in inc pop lahf loope cwtl mov jge lret or adc aad mov fdivr pop push mov add cltd and dec lds scas in sbb xlat add insb aam cmp pusha out push dec (bad) pop pusha stos or cwtl enter mov (bad) call stc test pushl popl test cmp pushf push jmp lret leave pop (bad) cmc push inc bound shrl mov push push hlt movsb adc xchg jle dec xchg shll xlat scas mov fisub dec sub std in fisubl cmp inc int3 (bad) ljmp outsb cwtl test es jmp push loope inc movsl push mov aad fstps (bad) dec mov jmp sbb push dec jp lock push hlt mov jns insl inc inc add jo mov sub or inc pushf xchg jns fnstsw sub sub adc ja (bad) xor scas xor gs and push push inc push xor cs insb add push inc test ss in push fadd stc cld lea add aam push aad adc xor iret pop lods pop sarl popa popf jne addr16 adc daa ret xchg int incl and cltd xchg dec jle fsubp lods int3 fmuls adc lcall adc data16 ret ret sub es es div lahf ja cmp enter mov sbbl xchg mov add in scas jg ja mov push ret das (bad) (bad) push (bad) es cli add push iret (bad) xlat mov xchg clc push mov fiaddl push clc jae and adc pop push mov enter lret dec test and mov pop mov add jle ss mov (bad) mov enter dec jp les xchg bound push pop ljmp in cmpsb pop mov ret fidivl push lods xor lar jmp (bad) jno inc xlat mov (bad) push inc test cmp roll jne adc mov inc inc test std xor push into cmp out dec fistpll inc mov cmpsb pop stos push divl popf (bad) ljmp jmp movups (bad) sub sbb sbb out cmp push push (bad) je and mov adc cmc xchg pusha sbb and rclb jno popa sbb xor mov mov cltd das cmp into popa jmp sub lahf ja xlat (bad) mov leave enter (bad) call jmp push jmp movb movl pushf movw mov pushl movl push movb pushf push lea jmp movzwl add bsf data16 mull jp clc clc add test jmp pushf movb mov pushf call loop scas das lock inc jo or mov das ja xchg mov sub inc das out das add rcrl orl lock (bad) xchg inc or es push adc push (bad) jnp bound mov mov sub out xor rcrl xchg mov cs and insl add lcall sbb imul sbb dec xchg and out cs push cmp call jge pop inc aam ret es xor add dec or jmp lea jge mov pushf lea jmp xor mov movb repnz call cmp call jmp jmp and push lods aas repz (bad) icebp push inc sbb adc loopne mov lahf cmpsl fnstsw sbb adc lods ss data16 fstl into mov mov jns add test sbb fsubrs int3 js mov push jecxz fidivl adc aam push leave sub hlt out (bad) cmp mov mov cmpsb rolb aad push and pop mov add (bad) pop cmpsl in push in jbe pop ljmp adc out sbb fstpl push in rclb pop fdivrs and push and xor (bad) cmc dec xchg lea jb adc cmp call lahf push inc (bad) sub xchg scas jg arpl push cmp jno cmc dec addr16 mov dec mov sub (bad) inc pop mov lods pop dec pushf adc out aaa inc dec cmp fwait test mov lret sti xchg cmp and hlt and test push sbb test popf xchg sbb sbb pop ds aaa scas test ret test adc call aaa jecxz pop aaa inc ret or movsl sbb fcompl sbb outsl testb aam cmove pop push daa mov fs ja xor sub rcl sbb xor clc add stc sub add rcl mov xor mov cmc push pushl test repnz call mov mov pusha lea jb xchg pusha jmp pop cwtl clc cmp bswap pusha inc sbb not not movsbw lea push setge mov push mov not jmp shr mov pusha cmc test cmpb call movzbl mov clc add shrd rol or add movzbw mov movb shr cmc test cmp call cmpb pushf jmp or je push inc sub in pop mov into dec sbb xor sbb mov sub clc cmp arpl jno inc jno (bad) aad mov test xor jno ret adcl test and icebp or cli sub cwtl scas add call (bad) outsl inc inc xchg push dec or fs dec pop shrb pop mov add popa mov sub shrb mov mov push and div push cmp loope push jecxz jg clc cld jp leave (bad) leave les jnp pushf movsl (bad) push xor or sub iret adc inc test mov test and cmp hlt divl sbb daa out subb inc bound es push add inc lret pop mov lock push cmp pushw test sbb cmpsl mov dec ficompl (bad) in insb cwtl and xor sbb je cli xor pop mov adc push xchg cmp ja mov mov or lock inc pop and add les lods jne pop test mov cli out sub mov rdmsr les rclb cmpsl jg data16 call and pop jecxz (bad) (bad) dec pop mov and push jae out jp inc mov movsb pop adc pop sbb pop aad stos add test imul mov imul inc pushf xor jmp push dec dec push inc push dec cs insb add add jno pop popa sbbl inc scas pusha (bad) inc outsb mov idiv lock in cs (bad) push dec inc cmp fsubrl pop rcl mov xor add dec mov or jae (bad) aaa push imul js inc add rorl push faddl sub push test fisttp xor pop subl lods inc loopne inc mov sbb dec nop sarb cli xchg shlb orb (bad) xchg dec mov xchg jae xchg lret in push shlb loop pushl clc or dec jecxz lods sbb enter push xor (bad) insl add push repnz shr (bad) decl xchg and push rol rolb clc add sti lea dec jmp sbb and decb inc pusha lahf xchg repz out ja repz jne pop xchg (bad) mov xor (bad) lea or fist aam xor hlt ror xlat sub repz and mov fdivr dec fiaddl fwait mov push adc or or sbb inc xchg or cmp bound adc test adc xlat cmp jb imul xor and cmpsl ss and out insl jo adc out lods aam adc jno sahf xchg xor test mov xchg jle insl xor mov push pusha mov jmp push lea jne setno setge jmp mov pusha pushl pushf pushl ret mov pushf movl push call pushl mov movb lea call jmp pushl pusha jmp mov movb lea je movzbl movzbw lea push lea call pusha adc call pusha lea call pusha movw mov adc mov pushf jmp push sbb mov mov pop adcl jnp popa fldcw fwait and push sub mov sbb push xor xor xchg test ss mov mov icebp jno rol dec in outsl cwtl and (bad) dec call addr16 push pop cmp adc pop xor dec ja or pop leave in out or dec daa fldt movl pop dec push into and pop lret lret jns std (bad) arpl add inc lahf add adcl push inc dec and pop shrl add in (bad) jns call in sbb sub push or aas sub and jne sbb cmp mov movsb pop js sbb pop or ljmp xor insl jae and cmc (bad) xor dec call enter sub popa mov sbb in inc arpl adc sbb imul fsubs std xchg sbb inc mov je sti adc adc inc test call lea call inc rcl cmp mov bt cmp test cmc repnz push call xor pop mov push inc xlat mov dec cs add mov sub jbe je test scas cmp mov sub (bad) lds stc cmp movsb into cmpsb test dec mov dec mov adc cmpsb sbb fnsave xchg push mov inc mov xor and xchg dec pop (bad) xchg cmp ret les rcrb mov mov mov stc js lock mov mov sbb daa or jns jmp scas pusha pusha pushf mov call pusha movb lea jne bswap mov cwtl not movb movsbw movsbw movsbl jmp push mov inc scas sbb mov dec ss fucomp mov cmpsl push and xchg and mov std loope inc movsl and pop mov popa xchg and sub divb mov rorb sahf sahf and sbb subl loope sarb fidivr mov inc fcoms insl in push sarl inc rcrb inc lock dec in jnp test insb xchg insl dec cli xchg arpl lds movsl pop lods pop fnstcw fwait sub push pop test dec dec cmp jecxz mov sub dec mov mov push jle xor test (bad) xchg out inc bound mov rorl mov inc add cmp push pusha mov jmp push mov inc jo mov xlat inc movsb jns pop rolb into insl mov and es mov pandn adc mov out mov stos dec cmpsb out inc push xor sbb lret dec add adc add pop or cmp xchg clc sbb lret inc loope sub inc mov dec fsub subl sbb mov (bad) xor mov sub aam push in daa ss lahf aaa out das mov lods shrl subl out out lret add test fstps jge test pop mov aad cmp pop inc and xchg pop insl jle mov adc mov jmp hlt aas mov pop pop insl test push jge aas sub pop or mov mov xor xchg xchg push lret and mov mov nop les idivl add cmp and cmp and outsb add dec add dec cmp ret mov add inc in dec mov and inc mov and sbb int sbb subl pop int cli xchg ja mov divl sti test fmulp add aad lret mov sub lods imul mov mov fbld das add cld in mov and sbb cmp in ja mov aad enter nop jb (bad) mov jne (bad) push loope mov xchg fwait stos fnstenv cmp cli fmuls push mov in inc lret das pop lret mov rolb jnp xchg stc xor xor xchg ds cwtl push push mov mov mov shl lea call adc sub jne mov sub pop pop ret repnz push pushl lea jne ror jmp mov push lea ja call cmc jmp jmp mov lea jmp shl clc cmp add not pushl pop cwtl lea call mov lret cmovb jge sbb xchg jp mov lret mov lods lds repz int outsb inc popa fcom lahf push (bad) and (bad) repnz inc movsb and lcall mov pushf call sarl enter hlt xchg leave xlat fidivr dec imul jb dec sub pop repnz or and out in sbb push mov std add xchg push mov (bad) cmp int3 rep push enter (bad) fcoml push mov jnp fistpll pop and adc xchg or cmpl pop out in ja test mov and jmp test in xor in xchg pushl lea movw lea jmp cmpsb jl add cmovb data16 add les jno add push adc bound fiadd dec xor jns mov cmp cmc add jne sbb sub add ret xor inc dec jecxz mov in dec leave mov dec std push mov mov mov add cltd or (bad) aam arpl jns xchg outsl jg mov push iret in hlt push jmp (bad) or cmovb push push lret mov repz outsb mov cmp jge lret bound pop mov lret jno (bad) jmp arpl movsl int jae and cmc or push xchg xor ret and pop xchg and cmc or or sbbl mov xchg out dec mov mov aas mov cmp pop ljmp jnp add push das lahf test lds adc dec mov mov jne rclb dec pop xor insl std sub lds pop xchg push and push lods aaa push inc mov jmp pop mulb movsl pop mov ret jmp push cltd or sub or shll in bswap pop mov call lea mov pushf pushl movw mov jmp push inc mull add inc mov mov sub addr16 push aad aad dec (bad) aaa mov aad jmp ja jmp rol lods push lds stos (bad) adc jmp push cmp push pushf mov stos push cmp (bad) fsts add divb addl aam xor (bad) xchg sbb cmp dec and push outsl leave pusha into jl add (bad) and gs jns stc pusha jl push xlat and cmc aas jmp and fucomi pop outsb add lahf testl lock mov outsl mov xchg xor fnop aaa mov and out pop fdivrs pop scas adc insl fmull int3 xor push scas dec lcall xchg into pop xchg mov xor jl add in int3 inc xchg sub cmp pusha or push jmp and flds fist addl clc cs out cld or lods sub scas ret ja lods sbb fucomi push xor and adc shrl pop cmp or std sahf pop insl push cmp xor je lea xchg and adc in sub jno or pop enter mov push lds pop pop xor call cmpsl in jo aaa dec or cvtps2pi sub loope jecxz dec adc das add xor add je aad scas xchg inc add inc push jne roll sbb mov sbb jge stc dec fnsave dec inc daa jno pop fisub lcall test push pop cmp add and inc test fbld push sarb movsl daa add stc sub push cmp inc ds ficomp mov lahf inc xor test adc mov push pop rclb cltd push and pop loop mov das pop imul movsl xor xor lea jne mov dec out iret (bad) mov xor push lea call shrd rol cmp stc add cmc pop adc lahf aam lea pop cmc cmp jo sbb push lea push pushf lea jmp insb stos das cmc add inc stos push inc jg ja gs cmp jb push ficompl push out sbb push inc je xchg fsubrp mov fistpl push pop std add data16 sub stos push sarb je or mov and pop jae aas or push test notl sbb xor ja jne repz scas cmp loopne adc clc aaa (bad) and insl inc inc out add mov js mov in jmp movsl sbb dec push gs test add int inc loop clc add add or add jmp add clc ljmp cmovb push sub inc or (bad) sub cmpsb or (bad) les or and and loop cs cmp xchg nop push and xor xor popf sub int3 xlat jp aas sbb das (bad) pop pop cmpsb into subl movsl into xor lea adc xchg or add out cmp pop push mov inc xchg aaa lea mov jecxz movsb lret inc mov push test (bad) (bad) push lock fs call jmp stc mov pusha call inc setno neg pushf pusha ror call bt clc test xchg cmp mov call bsf bts rol mov jmp call shld aam call movw movw mov call pushf popl jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call mov pushf jmp push pushf pushf push mov pushl ret cmp bt sub push push jmp xchg cld pop mov pushf cld lea call jmp jmp cmp sub call push push pusha pusha call push rol mov cmp cmc mov pushl call mov pushl mov mov pushf mov pushf lea jmp pushf pushf popl pushf jmp call movsbw bswap mov lea mov js pusha lea jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp mov mov pushf mov pusha mov pushf pushf jmp daa mov dec mov pusha jmp mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call add pusha movb pushf lea jmp call mov movw pushf lea jmp pusha pusha lea movl jmp push xchg lea mov mov jmp bsr inc mov test add pusha pushf pusha lea jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp sub jmp mov pushf jmp push call jmp or mov push pusha lea je call call adc push jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret mov push mov pushf lea jmp shrd inc mov jmp bt xor push jmp jmp jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp pusha sub jmp ror mov movsbw pushf mov movb pushf mov movb pushf call jmp pusha pushf pusha pushf popl call push lea jp pushf pushf pushf pusha jmp shld mov movzbl mov bt stc pushf call push mov jmp pusha mov call pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp pushf pushl pusha mov jmp call push push movb movb mov pushl mov push jmp mov pushl mov push pushf mov push pusha lea jmp pusha mov movb mov mov pushf lea jmp mov push push mov movb lea jmp bts shr pusha mov cmc bt sub mov test clc call call mov pusha jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp pushl popl pushf pusha push pushf lea jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp pusha pusha pushl popl push movw movw lea jmp movw jmp btc mov call mov stc call call push push mov push pushf lea jmp or movl stc xor lea jae pushf inc call movw mov pushl mov pushl lea jmp pushf lea jnp push pusha pushl push pushl ret bt shl sub mov add shr add mov cmc call call call call mov jmp push pusha mov pushl mov pusha mov jmp jmp call pushl popl pushf pushf lea jmp mov jmp xchg jmp cmp neg neg add sets xor rcr add rol dec add jmp add clc clc pusha shrd pushl mov call mov call mov movb push pushl pusha lea jmp movb call movb mov pusha pushl mov pushf call cmc movb rol push call add pushf mov mov pushl lea jmp jmp mov call mov pushf pushf push lea jmp mov push pushl mov pusha mov push jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call call push pushf mov pusha pushf mov jmp pushf popl pushf pushl popl pushl lea jmp inc pushf clc bt add jmp mov call pushf pushl call mov call bsr neg adc notl dec mov cmc call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call pushf mov call mov bt or movb lea je stc push pusha pusha xor pushf jmp sar add xor bswap rol movzbw mov call divl push mov push mov push jmp mov push mov lea jmp jmp movb mov pusha push lea jmp lea jns pushf mov call clc pushf clc add jmp cmp sub call mov not mov pusha mov jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp add cmp cmc std pushl popf push lea jmp jne push mov pushf lea jnp pusha movb mov mov jmp pusha mov jmp pushf pushf inc pusha decl movw pushf pushl jmp mov call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp mov call movw mov pushf pushf pushf popl jmp call mov pushl lea jmp bswap mov neg adc sbb mov pusha shr dec call pushf pushf mov pushf lea jmp lea jne stc push stc sub pushf call call lea pushf movb pushl push mov pushl mov lea jmp mov pushf jmp jmp push pushl mov pushl pushl pusha pushl ret cmc cmp shr jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp shl pusha mov push mov mov call jmp mov mov ror (bad) repnz call add add call jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov pusha call mov push pushl ret call push mov pusha mov push jmp cmp sub call pushf mov movb pushl pushf lea jmp pushf neg cmc call mov call pusha push movl call add pusha pushf mov movl call movl jmp cmc cmp add call push push inc jmp jmp mov push push jmp push push push pusha mov movb pusha lea jmp mov pushf jmp mov push call movl jmp mov movb push lea jmp pusha mov call pushl mov pushf mov mov jmp push mov call mov inc clc pushf neg call pushf popl jmp mov pushf mov mov jmp call movb pusha jmp xor neg movzbl cmc call pushf mov pusha pusha mov lea jmp ror aad xadd ror mov adc bts jmp movb jmp stc cmp mov sub jmp pusha push pushf mov mov push call call mov pushf pushl pusha pushl lea jmp jmp jmp pushl popl mov pushf pushf lea jmp mov jmp pushf popl pusha mov pushl popl push push push pushf lea jmp call pushf jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov pushl pushl jmp mov pushf lea jmp movb mov jmp mov call call mov call mov pushf lea jmp mov movb push push pushf lea jmp push mov pushf push push mov call movzbw mov cmc (bad) icebp add loope dec add mov or lds lea jno mov pushf lea jmp push push movb pushf mov lea ja pushf mov pushf push jmp inc neg mov cmp clc add push pushf pusha jmp pushf movb mov movb pushl lea jmp pushl popl push pusha push movw lea jmp call lea jbe mov pushf lea jmp pushf mov push lea jmp xchg jmp mov inc fidivl fdivp mov xchg in mov pushf fdivs mov repz imul call fnstenv inc fidivl add mov xchg loopne (bad) cld xlat mov lcall push out lcall mov cmp mov xor mov pop jmp lcall mov cld xlat mov push loope pushl mov pushf fdivs or mov cld xlat mov imul incl call (bad) mov pushf fdivs xchg in mov cmp mov mov mov cmp mov aad mov out fidiv nop lock cmc jmp jmp fidivl push cmc mov cmp mov cmpsl fbstp xchg loopne incl repnz (bad) mov cmp mov clc fbstp pushf fdivs and mov mov mov push (bad) mov fdivp mov push loope (bad) fst mov cmpsl fbstp pop loopne call mov clc fbstp push loope incl call lock and mov jl mov jb mov push jmp pushl lock push jmp jmp call mov cmp mov mov mov mov mov or aad jmp (bad) mov lcall jmp out (bad) fsubp mov inc repz jl mov pushf fdivs pushf fdivs dec (bad) mov fdivp mov clc fbstp pop loopne incl mov mov mov xchg in mov cmc jmp (bad) cld xlat mov mov mov fsubp mov (bad) mov dec (bad) mov push cmc mov dec (bad) mov pop (bad) mov pushf fnstenv fsubp mov mov mov or mov inc repz stos lock push jmp pushl repz pushf fdivs push (bad) mov xchg jmp mov pop (bad) mov in mov fs mov mov mov mov hlt mov xchg in mov cmp mov pushf fdivs shr mov pop (bad) mov dec (bad) mov pop (bad) mov imul ljmp (bad) mov pop (bad) push (bad) mov cld xlat mov (bad) mov pushf fnstenv aad mov mul mov mov (bad) mov push jmp pushl loop lcall call mov push cmc mov (bad) mov xor mov inc fidivl imul (bad) cmp mov xchg in mov inc repz or fidivl cmp mov out fidiv (bad) mov clc fbstp pushf fnstenv pop (bad) mov jb mov clc fbstp add mov cmpsl fbstp jl mov pop jmp call mov lcall call lock or mov or mov xchg loopne (bad) fst mov inc fidivl inc fidivl pop loopne ljmp out decl in mov mov mov fs mov mul mov fs mov mul mov cld xlat mov cmp mov pushf fnstenv add mov stos lock fsubp mov pop loopne incl mov dec (bad) mov pushf fdivs push loope incl decl (bad) mov mov mov pushf fdivs xor mov or in mov and mov scas repnz aad mov mov mov xchg in mov imul pushl mov mov push and mov pusha mov push mov mov pushf mov call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp pushf jmp movw movb movl pusha jmp pushf push pushl jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp pusha mov pushl jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp pushf mov pushl pushf popl pusha jmp pushf stc sub call mov pushf lea jmp btc btr cltd mov btc pop inc jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp pushf pusha mov movl push movw lea jmp call jmp pushf lea jmp push jmp ror movb jmp pusha mov call call pusha mov call push pushl popl movb pushf movl push lea jmp inc clc shr mov sbb call call mov push movb push lea jmp push call mov pushf mov lea jmp jmp pushf mov jmp pushl popl movw lea jmp jmp mov cld call lea jge push mov mov jmp clc test btr rdtsc call push movsbw pop lea push jmp cmp sub pushl cmp push cmc sub call add movw pushf pushf pushf popl pushf movw call call mov push push lea jmp and lea jno push movb pushf mov call sub stc sub jo push mov shr pusha call call pushf xchg jmp dec btc or mov push add mov clc add jmp jmp call mov pusha jmp pushf pusha mov mov pushf pushf lea jmp mov pushf pusha pushf pushf popl movb jmp call jmp pushl push movw pushl popl mov movb lea jmp pushf popl call call jmp mov call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call push mov push mov lea jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp call inc push push mov pushf lea jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov jmp clc lea jno add pusha jmp lea jo push pushf mov jmp movb jmp mov mov push pushl movb lea jmp mov mov push pushf lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp mov pushf lea jmp push mov mov mov pushf mov pushf mov call movl pushl popl pusha pushf push lea jmp stc call sub cmc add jmp cmp mov cmp add stc clc stc movl mov movb sub call lea jne push push mov pushl push pushf lea jmp call pushl popl push pushf lea jmp lea jne or jmp test stc bt sub call push mov pushf pushl mov pushf pushf movb lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp bt xor mov push bt cmp bt sub jmp bt bswap lea jae stc xor bt pushf sub jmp pushl popl push pushl lea jmp jmp pushf popl push jmp jmp btr daa mov sub shr rcl mov call bswap add lea push pusha cmp jmp push movb call call pusha mov mov call push pushf pusha jmp btr dec shl bt mov stc test add call push pushf popl pusha mov mov pushl popl push lea jmp call mov pushl call call test pushf cmc jmp inc dec movsbw lea xor movzbl stc bt pusha call stc bt sub jmp jmp stc sub cmp jmp mov call movsbw mov pusha pushf mov jmp pushf mov mov mov pusha mov call rol movzbl push add pusha pushl inc call jmp call movl mov call pushf pushl popl pusha pushf push lea jmp call mov call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call mov pusha mov jmp jmp push mov pushf mov call mov pusha push lea jmp cmc jl daa not notl aas mov push stc test sub jmp clc pushf ror push mov lea mov call call pusha pushl mov jmp pusha clc mov bt clc clc push add movb call bt add mov push pushl movl mov push pushf mov lea jmp call movw pusha pushl popl push movw lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf push pushl popl pushf mov movb lea jmp rcl rol or mov bt pusha add mov pushf sub cmc pusha call push mov pushf pushl mov mov pusha pushf mov mov push jmp mov mov pusha pushf pushl ret bswap call or call mov pusha movb mov pushf pushf mov call bt ror bt clc cmp sub cmp test cmc mov bt sub jmp shrd not mov stc bt stc add pushf mov jmp movl mov jp pushf mov pusha jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call cmc pushl popl test call mov mov pushf mov pushl push pushl lea jmp pushf jmp jmp pusha mov push mov lea jmp pushf mov pusha lea jmp not clc bt not test pusha cmp and pushf movl jmp lea jne call cmc cmc add call call ror clc clc call mov push call push jmp add push push pushf call jmp test movzbl call mov pushf lea jmp movw pusha mov pushl movw movb lea jmp test xor test sub movb mov pushl movb lea jmp pusha xchg call pusha mov pusha mov pushl mov pushf mov movw push lea jmp pusha aam add mov pusha call call jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp mov push push movb lea jmp jmp push mov pushf call cmc xor stc stc mov bt test stc add pusha jmp xor cmp xor call cmp stc add pusha jmp jmp sub call push pushf mov pushf pushl ret call pushl add pushf lea jo push pushf mov mov lea jmp cwtl mov pushf mov mov pusha pusha mov push push lea jmp mov push movb lea jmp mov jmp mov pushf lea jns push jmp mov pushf pushf mov pushf pushf mov lea jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp ror add pusha mov mov call bt xor movl jmp mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp pushf pushf mov pushf push push lea jmp pushl lea jge push mov call mov pusha push push pushf mov call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp pushf pusha movw mov push mov jmp pushf mov jmp pushf call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp clc add push pushf clc neg call mov pusha pushf movw pushf lea jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp pushf lea jo popl pushf pusha movw lea jmp pushf jmp jmp neg shrd movzbl shrd sub jmp dec stc rcr ror btr lea jmp shld mov jmp pushf popl call movzbl lahf lahf mov call call pushf jmp pushf jmp shl bt shr pushf pushf bt call pushf mov pusha jmp add call mov jmp movb call pushf mov jmp jmp mov mov movb pushf jmp cmp shr pushf movb mov push pushf popl call not pusha cmp not push cmc sub jmp pushf pushl popl movl pushf movw pushl lea jmp pushl popl pushf push lea jmp add add add and fs dec add add add imul and add mov 