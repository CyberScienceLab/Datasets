call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call adc inc add packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb jl mov adc mov adc adc sarb rcl or adc jb repnz inc pop daa push or or mov inc jmp jnp ret mov mov push mov (bad) or add adc (bad) jne push cmovo (bad) pop lods cmp mov into mov or xor and push sub lock adc (bad) call clc or push outsb call jle cmpb je jnp push jb cmp adc outsb dec or sti or cmp les mov (bad) mov je sub and sbb or outsb cmp jmp xor ret ret (bad) out jae scas push mov lcall inc ss jnp sbb sarb je push push call adc or sub inc and je cmp jae inc es jmp adc pop xor pop adc insl pushl cmp jbe or add sti (bad) pop negl adc fcomps sar mov sti mov (bad) cmp ja xchg and in pop enter rolb or add jo mov inc cmp ffreep or movw sti mov (bad) mov xor or mov mov ss das sbb in or mov mov lea mov divl (bad) jge test add jae jae testb sbb push insl ret fldl xor mov fiaddl jl inc push cmp jbe decl test cmp push sahf or xchg cli or sub idivb adc mov add add mov sub nop adc cmpl dec mov loop insb fildll rorl adc sub arpl pushl mov push pop add pop and xor push sub or jg mov jmp mov add lret jl jae fistpl inc rorl fisttpl xchg aad cmp sub push fadds enter nop test shrb int cmp rol outsb aaa mov cmpl xor adc scas mov xor mov dec es mov xor push jbe in jecxz cli or test pop pop repnz push out ficom pop mov lods jo out pop xchg mov sub fisttpll insb (bad) in inc push add leave adc push or mov test push mov adcl lret xchg fcoml push hlt mov insl jmp movb sbb popa neg (bad) nop into mov fmuls out jle sbb fisttpl sbb lea mov lock (bad) xor movsl (bad) js aaa mov sbb adc fidivl adc cmp mov (bad) (bad) idivb shufps adc (bad) out mov inc out push push jbe jmp cmp fmull pusha popa mov xchg loop adc les test pushf popf sbb or outsb add pop ficompl pop or jae test mov ja jbe arpl add xor subl (bad) outsb xlat jne cld inc cmp cmp pop fstl clc pop sub push mov sbbl inc in jne jecxz lea push adc add add add incl and sub push fidivrl fnsave fimul fisttpl cmpsl and (bad) jecxz adc dec jle lea rclb cmp adc sarl cmp pop gs outsb mov inc add inc jl leave inc dec out push js xchg notl outsb xchg adc lret cmp mov cmpl aaa mov mov lret jno add xorl mov mov jmp (bad) (bad) push mov push outsb xor sub ja mov fcomps fsubrs mov out out cmp mov add leave adc mov or push mov jbe jbe sub mov (bad) xor add xchg bound fnstcw adc or push movb mov cmpsl aas test or inc mov jns movsl dec mov repnz iret je movsb and and and jns dec je mov lret bound je mov inc adc xchg je test inc cmpsb or pop mov fwait (bad) push cmp add cli mov and repnz jne (bad) mov or movsb mov add stos ja inc jmp add sbb push movl into cli lods fisubr fnsave std xlat fiadd push clc add sbb inc or jae mov pop lods push fbstp add call les pusha inc mov cmp xor mov mov ss ret outsb (bad) adc les jb adc stos in jge test cld lar mov jge idivb jae cmp je popa inc inc cmp jl lret stos sub xor push cmc pop fistl add adc jae lods add mov fucomp in in sub push push cwtl push xor mov movsb je sub lea push popf int popa in pop fisubl push xlat sarl movb xchg jg mov push cmc xor ja mov loopne and nop das cld pop clc mov add rorl or ja inc sbb mov cmp lea fisttpll cmp notb movsb pop decl cmpb sti or xor add push push add inc std mull sub mov test fist outsl mov pop (bad) mov (bad) or mov lea lea cmp cld jg mov jns adc lea push sub in pop dec add pop pop add adc dec mov push push pop push outsl imul adc outsb xchg bound inc and out inc mov mov hlt pushw pop adcl xor xchg sbb sbb push enter lea xor sbb lods arpl sbb add sbb adc or cwtl xchg addb data16 mov fs popf (bad) or jo icebp mov add push push cmp out mov pop cmp or sub add cmp sbbl mov (bad) pusha andl sti inc ja push adc pop dec enter inc pop popf push inc push lcall daa decl adc xchg inc mov shlb xchg push adc (bad) in or pop mov repz jno and (bad) out cmp cmp adc inc pop mov inc lea adc xchg add mov rclb rclb aaa cli lea pop andl add jge ret lea sbb cmp jl ds test mov cli int3 or dec push data16 clc aad or int3 imul mov mov jg in cld ds push inc lea pop mov (bad) pop ss push and and sbb add outsb pop fnsave aaa jp jne repnz xlat rorb inc pop mov jmp (bad) cmp sbb lret jne add jge xchg addr16 shrl pushl adc pop fiadd adc cs add xor mov call and inc orl or add fmull push cmp mov insl insb add sbb insl je dec xor in add out xchg in xor or sbb jo dec jmp divb sbb or inc adc jb mov ret ja andl inc xor inc pop sbb adc pop (bad) pop push js adcb dec fcmovnbe adc (bad) fstpl mov pop pop jmp cmovo jge rclb sub add jae inc icebp dec push in fistpll push mov mov add push andl fwait add sbb inc jecxz xchg fwait jae insl add mov or ss add loopne std mov jmp xor mov je push daa pop ss jmp jo push cld adc push rcrl add loopne mov inc pop push mov lcall enter out shll push xorl mov or sbb lahf cmp jmp mov jnp mov push adc mov inc xor mov and nop loopne xor push clc and mov repz fstpl mov jmp jmp sbb sbb subl inc lea insb arpl inc dec inc or (bad) mov inc adc cmc jae mov dec cmp mov pop push mov pop and push in add push mov and xchg mov orl cwtl fmull aas mov push or mov xor or adc pop or outsl jae iret rcrl xor inc cmpl lock das sete inc sbb fcmovb dec xor mov cli mov cmpsl push pop data16 adc decb hlt sbb aad mov insb repnz pop mov adc incb mov push repz fs push jle and push mov adc neg xor iret jmp movsb cld adc in ja cmp add sbb insb sti add int mov jl mov cmp push test jo sti jp xchg inc cld lods push or cmpsb stc add inc lock xchg js es or mov sbb cmp push aas jbe push mov adc mov pop push mov pop push push xorb lods imul push push repz lock sbb sbb push push cmp lcall cld adc int rorl aam data16 mov movsl icebp or xchg sarl fcoms jbe aaa scas adc or adc ds or mov out mov roll push or mov adc jmp cmp mov and adc das (bad) push inc das push out sbb push imul mov sbb mov mov cmp ja cmp daa or sub inc dec xor jmp es jge mov cmp xor out jns jbe mov add pop pop movl mov sub fmuls xchg mov ds dec movb add (bad) fwait movsb and push je add jbe adc lahf loopne or xchg add test sti pop xchg cltd loop mov push sarl pushl jbe mov arpl push call lds lds lock (bad) daa call mov test shrb push sbb sti mov hlt pop push adc push sub dec bound dec jbe imul adc fdivs and jnp lret mov xor loopne jae aaa jmp push add ds sbb dec loope ret sahf std jmp inc jnp add and add jne inc push and jle push cmc in nop mov lock loopne je or xlat push xchg add add stos jbe push roll rcll jl imul or inc push bound mov fistpll push jmp push aaa xchg js insb sbb cld cmp outsb leave mov lea pusha push test fdivrs stc jp inc inc inc sub je ss cltd (bad) jae push popa in add shrl xchg call sbb orl and xlat jbe or addl sbb pop add ret ss sbb inc push rcrl push rorb mov icebp xchg cwtl add js xor xor jp mov (bad) push (bad) xor imul or rep cmp outsl ret clc rol adcl and xor pop pop jae stos pop ret data16 pop mov outsl sbb push pop pop adc inc dec adc jle jmp pop mov fadds and test mov inc jmp or jnp or push push insb jmp es daa mov sahf push jl ds (bad) mulb cli push lods ds fidiv pop loope inc (bad) xlat pop pop xor int3 in adc sbb call les ja enter or mov dec mov push (bad) roll or insl shr push rcrb into call push sub test inc es adc lea inc popa scas rorl lock ss sbb fcmovb pop sbb ret sbb push mov push cmp or decl mov in cmc add adc sub (bad) pop (bad) jbe dec icebp inc mov jo int bswap add fs add cmp pop pop je and and aaa pop test sub jle lock orb pop movzbl inc jmp pop inc imul into adc inc cmp test ja unpckhps inc or addl xor mov mov in mov inc lea mov add andl outsl xchg add add cmp sbb jmp rcll inc push fnstenv cwtl je inc add cmp incl add dec loopne add push daa pop mov jecxz push cmp adc pop cmp sbb and (bad) arpl add cmpsb dec shll push lea out test mov xchg cmp je cmp je add jne inc ja not rol or inc clc adc xlat mov jle adc and (bad) dec cs jmp inc jecxz mov mov push fdivr add xchg js ret add call ret xor add inc add cmp fstp inc xorl add ret dec push test stc sbb outsb jg loop ss mov add jg js mov ret push lahf push (bad) mov iret and test jne dec cmp jl or pop pop stos push mov jo inc dec mov (bad) out (bad) push (bad) mov mov cmc mov cmp jne cmp jne cmp jb cmp jbe cmp stc out dec pop sahf jbe cmp (bad) jbe cmp clc jbe (bad) mov push cwtl xchg adc lods fisubl into insl mov dec sbb cmpsl push push test adc cmpsl out mov sbb dec int3 fiaddl pop and arpl stos out sub and adc pop inc orb bound hlt and (bad) jbe push pop sarl jne push divb pop test add ja adc push hlt sbb fldl mov jge dec int dec cmp jne add jne inc fucom push ja loopne cmp enter insl fwait loopne pop xor add imul push pop lea (bad) or add pop fwait ljmp test adcb cs adcb push push sbb dec adc in add adc and std mov adc add add in out jge pop js in inc adc adc sub in or sbb rorb push push xor jo orb ficoml push arpl sub setno lods adc mov mov adc je les lret out or mov shll sbb aam mulb lods in pop or cmp sbb adc mov ss lds mov mov scas and push sub nop cmp xor sbb fidivr xor imul aaa sbb insb mov loope mov bound and mov push or mov (bad) jmp ret jl mov sbb adc (bad) push cld (bad) cmp mov sbb xor fsubrs (bad) or xor xor cvtpi2ps jmp insl lahf sub jp mov dec insl mov in (bad) jge sub xchg xchg adc popf fstps pop mov (bad) sbb xor xchg outsb ljmp (bad) leave jle incb (bad) cmp cmp push cltd pop idiv mov add lcall push es lea test fsubl and mov push sub jge pop adc cmp jl mov shr sbb mov rorl xor sub imul and mov add leave adc mov jnp add mov inc dec js add mov jg or nop adc or js xchg xchg and mov lcall stos inc dec ds xchg xchg add test clc adc pop mov sbb sbb and xchg cmc mov sbb adc fadds add popf jmp insl push sub cwtl das mov mov mov sbb movsl aas add mov (bad) mov sub in mov or and (bad) sbb loop add sahf dec popa rcr push pushl call pop xchg mov in aam xchg dec xor xor cmp xlat pusha cs push pop lahf mov push cli mov or push cwtl lods rcrl test xchg add inc add cmp scas or pop and pusha mov cwtl add dec add leave cmp fld add lret mov sub sbb sbb sbb arpl mov ret stos in push pop out push rol and dec push cltd call jbe gs (bad) pop aam cmp fs cmp leave shrb add out imul int add sub sti and (bad) fisubrl lea enter push mov xchg push xlat jge mov fimull cmpb or add fnstcw inc add mov mov shr mov ljmp inc ljmp mov xor imul jle add test test mov or fmull xlat pop cld sbbb mov popf add adc push or test insb jne jmp adc or (bad) push adcl sbb fsubl add mov je dec je add dec ljmp mov inc cltd jmp or (bad) scas adc imul ss or push push push fs mov clc scas test inc add aaa push push outsl mov cmp push daa or push pop adc inc pop cmp sbb in adc test sbb inc sti neg sbb and lret and sub mov push mov sti pop fildl fildl aaa repz jne add roll push jl mov pushf adc push add pushf out jp mov negb inc sub push fwait sub ss sub sbb stc jne push and cltd les xadd mov push dec add mov insb sbb mov push je (bad) jle shll inc sub mov inc (bad) inc pushl xor jne and xchg pop push adc pop cmc push lret ret and jle test aam adc mov ja jmp movsl clc dec les mov jb or or test mov clc std je cmp jb push cmp inc mov ds leave pusha in and push sarb or sub xor mov mov lds inc fcoml push mov adc sub add adc pop pop xchg adc jl js push pop adcb mov pop add adc dec push je mov hlt fs movsb in insl xor les jle loopne lea push dec cmp loopne cmp mov dec add arpl pop xchg bound xchg mov scas sub mov or adc or stc mov jne xor sbb insl stc add dec adc ljmp adc inc jl and das mov mov and out shrl bound call xchg pusha add ret and inc push mov inc test aad cmc push mov inc in fs add sbb adc push sbb mov cmp fidivl inc negl cmp or mov ja rorb movb add fsubrl orl shlb jmp push and push adc test and dec cmp lods cmp push sbb fmul setnp dec fisubr dec loopne stos inc add mov sub incl fwait lds lret jb inc or sbb or call ja mov test adc jbe sub sbb sub cmpsl adc iret int3 sbb xor and incl adc nop pop adc loop punpckhbw mov fcmove or repz adc (bad) fcomps mov xor leave push js int sbbl rorb sbb adc fnsave (bad) adc mov add lods mov scas push (bad) out dec adc mov or sbb lret inc out push push pusha in in push repnz mov gs fsubp lods push or sbb lret mov in inc fildl xor (bad) in sarl ret fldl mov std movb add roll test sub adcl test cld jbe fwait add push add push push mov (bad) mov cmp cli add push aad out jae icebp fiadd mov push aas sbb cmp pop push or fidivl or pop jmp mov cs sub or (bad) in mov mov jb and mov pop mov loope addb adc mov orb push push sub dec cmp fstpt lahf shrb inc lock mov ud2 pop mov or popaw divb pop push mov or or sub cli pop ja jge and jmp or and and popa or and and es loop mov pop imul pop test loope cmp xchg cld sub ja adc mov jbe aaa rorb lods in or pop rorb pop cmp add lea rcll and add insl mulb inc shll pop rolb mov rcl aam aad adc les fsubrl arpl addb push sbb sarb fiadd add cmp or add test push add or push push leave sub mov push add sbb ret pop ja adc jge dec mov shl sbb ds orl inc pop mov mov adc xor pop xchg inc inc rcl mov mov add cld cmp inc sahf mov inc movsl les or test arpl cmp xchg mov adc (bad) mov fiadd jbe mov fldt jbe cmp and jne popf sbb fisttpll es mov movsb ret mov pushf or mull into push push data16 cmp xor push mov aas add aam (bad) mov mov adc push ja push ds shll xchg and lea mov mov pop bound popa movl in adc in les (bad) les sahf popf ret inc enter or pop sub and addl fildl pop jno mov mov lods add and lcall cmc (bad) icebp or sub add xor dec mov andb push or aaa popf aas push lock xor std sbb movb and inc pop pop push push sbb pop imul out pushl aam lcall cmp sbb fsubl adc add int3 adc push mov gs inc pop loopne and fmull dec and fist outsl rorl cmp push inc mov adc cmpsb test push push (bad) and lsl popa sar inc shl xlat or out mov add enter push mov sbb pop jo push jne add jmp sbb mov nop cwtl pop inc and test push lcall mov add pop test sbb or je test cmp adc ret inc push push pop cmp dec dec sahf push addr16 daa add adc aad fcomps push mov inc adc push mov add outsb jae adc fsubr pop sub cmp je cmp je sbb daa pop push push mov push sarb push ss repnz xor jle adc and pop test leave lock push aaa cli add outsb adc adc call add inc mov sub ret push inc clc rcr adc fistpll sbbl jbe cmp and push rcll mulb push sbb jge pop jo jne mov inc add xchg cs sub mov std outsl shrl or dec or inc push nop cli lods stos gs pop dec push adc or or xor fwait push mov mov adc cs cmpsb sbb sbb jo xor jmp adc push push or test xor repnz ret lea dec and mov (bad) cs fwait les mov push stos dec xor or sbb (bad) xor pop fldl xlat inc popf stc inc imul aas fstps cltd mov fadds mov jbe icebp (bad) push sbbb ret (bad) iret rorb and xor popa in (bad) jne add add cmp ja sub sub aaa cli pop sub adc xchg and sbb icebp sbb cltd sub mov clc push pop mov std fisttpl add rolb shl mov or popa mov hlt call push clc insl mov je jecxz outsb jl clc lea adc inc jg inc add jbe dec or push repz jne push adc mov and jmp cmp mov stos js clc mov pop mov cmp push sub add cmp jl cmp (bad) call mov scas mov cmpsb mov aas test jg xchg mov jnp jmp xchg jne jg cmp mov jg addl lock inc cltd bound jnp mov push rcl and add stos mov int3 or mov jne mov push push add push and adc or add inc mov movsl add out in (bad) clc pop ja movzbl and mov (bad) cmp xor or stos mov push jmp adc lcall xchg rorb fadds add add or add lar add add mov adc add sub add mov push push sub lcall aad incl (bad) aaa or adc push fmull push mov (bad) mov enter cmp mov jl mov and leave add in icebp adcb adc loop mov push out ljmp push pushf ss dec call fisttpll cmp cmp sub cmp stc or push adc mov sbb or jmp cmp inc (bad) lcall fstl insl sbb push loopne rolb call aam lcall mov icebp mov jo fwait lea inc push out sti rep and enter push insl int3 lret push in lea jbe sar sub inc push inc push adc call sbbb bound fmuls or add push mov aas jl dec push lods subl add fxch cld inc repz mov pop movb inc xchg mov adc std fstpt ss pusha mov std shlb jle sbb fldcw aas loope cmp adc mov jne push call adc js rclb or sarb out pop mov repz ret pop out or pop or inc sub or xor jge inc aad ljmp outsl out sub jae cmp pop jne xchg fs jecxz and sti and or arpl lret cmpb sub movb jae stos jnp mov push test js mov les or mov iret mov into (bad) push add pusha je cmc or xlat (bad) xor mull cmc sbb add dec fdivs out sub jmp mov pop cmp pop xorl dec mov mov mov push xor sub and xor orl or ret mov mov and mov insl icebp push test jp mov push (bad) es mov mov mov and xchg stos pop xor mov ret aam or and sbb je (bad) rclb insb movsl fildl push add das pop sbb mov sub cmp fcmovnu lea push mov sbb add dec xchg insb and lahf cmp or jbe lods cmp ret sub jecxz lock lret cmpsb inc (bad) (bad) outsl jge ja jb cmp jae xchg or fwait cmp sbb xchg (bad) mulb mov xor ret in push iret jb sbb add adc adc and aaa or cmpsb cmp jbe add je pop pop inc pop lea and lods push xchg sub out mov add add mov sbb dec cmp repnz andl or cmp cld incb dec jmp mov rcrl or xor lds movsb (bad) add pop push mov jmp add jbe lahf push jne xor sub sub or or je push leave jne (bad) dec mov cltd xchg xlat cmpb insb icebp xchg mov nop mov lea sbb pop jmp lods cmp jmp push sbb ds mov mov mov or dec je daa in push insl mov mov adc inc pushf je inc and call dec movlps dec lods orb mov xchg sbb in sbb mov adc cmp rcll jmp loopne push push push xchg xchg hlt dec js sbb jb xchg push mov daa push insl hlt mov mov out add fidiv xor (bad) jnp add pop adc ss push fwait xlat xchg jmp mov pusha dec movsb and xor shrb push scas adc push add inc push loope pop mov negb out mov aad int3 ret stc stc cmp xor sbb sbb and pop jnp adcl sub pop subl sbb cmp stos xchg inc insb test call add inc outsb or sbb rorb jo push push cmpsl call clc imul out inc cmp lock jne jo sbb (bad) aaa hlt push mov jge jge jbe push stos mov inc in call test dec mov inc jno lods in insb push and fstpt dec push (bad) mov push paddw and hlt cmp test xchg jb pop or mov faddl pop (bad) pop ret sbb add push lock pop in or (bad) mov cmp aam in push imul mov xlat or fcoml idiv push jmp jae cmpsl push outsl pop and movsb mov mov mov jl sbb lea fcoms xor inc xorb pop ret mov adc add jae xor and jbe mov cld pop push push cmpsl stc stos ret mov xor lods sti xor inc lds nop test mov jno movsb call xlat inc stos stos mulb or dec loop cmp inc ss pop push push push mov pop cmp icebp ss and or mov adc xchg adc jg push and xchg mov fcoms cmp es divl sbb pop pop pop jae (bad) arpl jmp jno and hlt outsb push mov stos add pop xor jp mov inc daa rcrl ds cwtl fisubr or gs arpl sbb pop test xchg inc cmpsb (bad) (bad) pop push add adc jo outsl xor sbb pop add add in ds insl int sahf fs mov (bad) (bad) fild (bad) stos push cwtl dec ret inc or add sub adc (bad) fidiv push imul push repnz cmp je movsl add inc fiadd pusha jecxz sub pop cmpsl cmpsl or push push pop push xchg stos aam out in add stos into xor cmp stc or scas ret cmp pusha loopne shll inc sub push cmpl cmpsb push scas mov or or mov push mov mov push pcmpgtb loopne lock mov add sbb xchg add xchg lods (bad) (bad) xchg sti mov and or xlat fwait add and cmp pop jmp xchg add (bad) mov repnz xchg aam cmp scas mov mov sti ret mov ds inc cmp xchg push sti and mov pushf sbb mov test sbb (bad) ret cs push xor or call ljmp in mov ss dec jle adc push out add mov mov add mov mov or scas and or insb push inc xchg je mov mov adc fistp or std push add pop jmp rcll add call sub adc sub push push rorb es inc je push ss popf mov sti pop xchg and cltd push pop idiv lret xor add add mov sbb xor loopne adc call testb pushl out jp or test (bad) adc push pop adc sub mov je jb mov adc mov and inc inc push insb lcall dec push je and out dec fs xchg std mov push lock inc adc lea mov ljmp and and cmp mov imul or sub push test shrb sbb in mov inc dec inc push push pop mov clc sbb jno inc and fildll push jmp inc mov cmp je cmp inc push jnp ja iret jmp and mov push jecxz jo sub roll movb inc (bad) pop insb mov pop insb adc fbld sbb add or dec pop popa popa clc ja and loopne or pop adc adc ret clc push push push mov pop mov lea sbb fisttpl push add push or clc add sti je addb cmp pushf add pop jbe nop add dec sbb push lcall add add inc mov outsl xchg jne mov pop pop or push lea pop (bad) push in dec adc or scas mov fnop dec inc push mov mov add aad jg add inc add sbb add sub cmpsb push addr16 mov push adc testb mov mov pop jmp sub inc movsw sti xor aad inc add movb or arpl rcrl inc add xchg xchg popa pop xor adc and (bad) jne add add jle lock repz inc cmp dec pop jne dec sbb lret or push adc test mov sbb push inc dec hlt dec xor add xor pop push sbb push inc jne sub mov test jnp add aaa push insb inc fcoms push mov push add nop push add pop sbb sbb and cmp arpl pop fbld sub mov cmp and je pop xchg stos lret dec jbe test add sub ret mov pop sub mov std add sbb pop movb add xchg inc jb or daa loopne jg lea mov sub add dec rol aad jb adc cmpsb (bad) xchg inc push fdivrs jne cmp shrb mov add in jnp push xchg testb (bad) fwait mov add add aam or popa loopne jne pop and mov das xor dec xor jnp add inc test aas adc ja adc push lds data16 adc add je cmp leave and adc inc jo sbb mov gs rcl cs cmc add loopne xor mov push btr xor inc es les add nop pop lods add xchg lock add xlat nop lods cmp mov and cs lea add xchg and mov cvtps2pd sub sbb stos sub scas adc inc lock adc fldpi add je hlt jo es ret adc loopne sbb (bad) out ss and je push and jge xor (bad) xor sbb jne push (bad) fcoms popa popf shll je lock pop dec jmp mov push sub or inc mov scas imul and and sbb les sub xor push or jne sbb sbb or mov sub insl cmp or add push mov mov icebp push sarb inc dec jns dec cmp xlat add sub je ret pop call or xchg mov push xchg adc sbb les nop leave loopne cmp jmp inc in xor mov lret dec fadd dec es cmp mov outsb inc and push push lods inc (bad) sbb xchg push push mov push fdivs pop fnsave stos out mov jmp mov je inc add pop insb adc adc adc inc xor or mov xchg jne mov lret and pop fwait test bound jno and add xchg rolb sub add test sbb loop addr16 rcrb or stos lods sbb movsb sti fidivl dec mov ret adc sbb and and lods and mov add in pop lods loop test dec add pop aas lods mov sbb fcomps push lods lret insl dec aaa flds jne push cs or adc inc mov lds add xor push sub dec cmp push or mov pop inc cmp dec je adc jns lock orl cs dec dec inc clc insl adcl add mov xor je push sub test cmp add ret dec (bad) dec ss lods add add adc inc xor pop jae sbb or rolb mov sub add adc ror mov aaa mov iret shlb adc ss push or adc ds scas mov cmpl pop cmp fcompl dec add push js testb fwait pop push ds insl or inc xor push outsb or lds je push jno stos jg std push pop adc pop pop cmp cmp sub push pop fcoml jnp dec push xchg dec jle hlt (bad) jne adc and popa mov fwait clc and pop mov and cwtl je int mov aam cwtl pop jbe jmp test sub dec pop mov dec jg sub adcb fwait data16 xor sbb enter fnstsw inc (bad) cmp cmp cmc lock in mov ret test das rcll push jg add lret sub rcrl movsl dec dec das inc and andl jae test (bad) call sbb push xor inc or push pop mov rolb pop popa add or pop pop mov nop add lods std mov pop ljmp sbb push add or ds push cmp ljmp sub mov loopne (bad) lea cmp inc xor into xchg pop mov jnp pop in mov xchg test test and cmpsb sbb je sub test movsl int stos jmp add add jl or mov jbe daa faddl sub lret cmc out mov cmp fldenv and test sbb mov jne das push sahf inc sbb mov xchg movsl pop je dec push jns dec sbb es sbb bswap add fisubl dec pop es push pop sbb movsb and aaa mov dec cmp lds xor push cli test mov sahf fsubl sbb and cltd xchg and cli push cmp adc cs nop and adc xchg xchg movups and xchg daa cltd sbb jne inc mov inc and js fstpt inc add leave xchg rorb adc pop cmp lret jnp jle rolb cmp or out pop lock and mov add adcb inc cmp add and pusha movsb pop sub mov sbb sar jmp mov cmp pop sbb push fs push add cld sbb orl pop add punpcklbw inc or (bad) mov mov add xorb (bad) pop (bad) jp push rcl xchg test std lret sub mov pop mov sbb mov xchg add cmp push add inc mov inc addr16 lds (bad) xorps in ret ljmp inc pop lods push popa or cmp movsb movsb icebp cmp or xor sub and rcrb inc daa dec fwait mov inc adc mov adc ja aad addb add popa mov and js inc aas push cmpsl mov lcall cmp xor enter push test cmp push cmp xchg sbb test and add inc or into cmp mov stos in sahf sub outsb cmp add (bad) mov sti cmp or call or and jo js cmp push dec add sti push mov cmp jb push das aas nop fldt rcrb pop add add xchg pushf insb mov or icebp jp sbb xor adc (bad) adc push or fnsave rolb lock movsb lea xor xchg cld mov pop rorl test jne movsb ljmp adc xchg push pop or call shrb cmp sti inc sbb dec mov sbb push adc mov mov mov or scas fwait aad or pop inc add cltd mov push jnp jl add mov mov dec add dec dec adc push add pop decl jg inc pop push inc adc sbb (bad) lea dec adc (bad) add sub daa sbb or mov imul out and cmovae dec add cmp add (bad) or xchg push cmp nop mov and rorb sub sti rorb inc cmp sub movsb cmp shr pop ficomp pop adc push pop jns add ljmp jmp sub push mov sbb or repnz popl adc push jnp or call sub and adc adc pop xchg insb fimull xor or icebp and movzbl sub mov test and mov sbb adc mov pop or sbb sbb adc shl jp dec pop jp mov outsb rclb adc lods mov add cmp int add add je cmp pop xor sbb adc cmp scas pushf dec and inc pushf mov jle mov les aad ds in and inc sub (bad) push xchg in ds movl mov jmp xor cmp xchg pushl add lahf out xchg insl xor mov xorl sti enter outsb add pop pop shlb adc jne push sarl lock shll or out cmp mov (bad) mov or loope adc aas das jo push loopne pop je mov lcall push pop jp fdivrs jmp inc inc jp fistl jo inc lldt adc cmpsb aam icebp or push add push push fisubrl dec divl je test mov repnz cmp mov mov fidiv lcall pushl into cmp jle push lds mov pop mov adc fnop aad cwtl test int3 or outsb (bad) jno hlt adc push cmp push adc mov mov adc int mov pop mov das inc push mov add mov pop mov cmpsl pop mov add pop fwait push lcall mov mov aad jle aas cmp pop add fisttpll sbbl adc repnz adc lock inc incb test movsb out push pop mov in xchg notb data16 jmp (bad) dec mov pop nop mov mov stos or xor fadds add push sub xchg in push and out jge sbb lds or or dec add add call mov jge lock cmp fwait inc push or push mov mov push sbb mov ss lock adc mov adc or ss ljmp (bad) movsl (bad) mov add add test iret cmp adc and ret test rol (bad) loope inc addr16 mov xchg mov mov popa inc jecxz mov inc fildl cli cmpsb bound cmp xor sbb inc and add push sti push xchg add jo fsts cmovbe cmp xor pop mov imul mov pop cltd idiv push imul cmp jg mov shrl into inc or (bad) outsl and fisubr xor add fwait ljmp test push inc les xchg adc out cmp push out and fs adc jo fsubrl ss push xor or (bad) call rorb add in add lret push and cmc and orb cmp test or sbb push and daa ret or sub jbe lret push mov ja icebp and push push add dec je lock mov jl mov mov shr movsb ljmp movsl cmp loop test dec fwait je lock mov mov gs ss fmuls mov jg push sbb fmuls push sbb cmp faddl add jmp or push inc xor mov js mov sub mov push pop andb pop or or add adc pop mov faddl add pop cmp jne loope add pop cmp pop lock add jne jne ss cld stc jne adc fwait jae xor sbb and push xor out mov adc adc subb or fwait add jne pop ja pop pop pop push jl call divl or sub sub lock or add sbb jp cwtl loope mov lods test or jnp jae out xchg lea adc lea popa mov inc les aad (bad) inc fucomip mov and (bad) jmp lea sbb push (bad) mov test les or sbb pushf add xor add loopne mov pusha push sub mov push push dec sbbb jne cs pop sub imull mov cwtl aad sbb mov bound sub pop ret push aad push lods cmp xor inc pop xchg mov xor dec or xchg jmp outsl cmp mov imul loopne mov xor loopne inc xor pop jnp mov or dec sbb and in xchg cli mov jb call js push pop imul jae fistpl and push jne cwtl inc add or jno sub dec add imul pop pop push xor rorb hlt aaa jo je sub push (bad) xor jbe mov adc push dec mov gs cld adc inc idivb nop lds add rolb and imul js ljmp add jo or mov (bad) mov sub push mov clc mov lock push add bound inc movb lods push adc jbe repz or adc or fcoms or rorb dec mov sbb push nop leave xchg insb (bad) leave add add pop adc sbb sbb xor add adc push add sbb and adc push or and psrlw push adc xor arpl mov add cwtl lea nop mov mov subb rolb sub fwait incl and aas inc inc dec shrl sub mov ficomp add add ret mov stos mov and mov push jae add and incb mov lea lahf fwait xor pop inc add push add fs cld sbb psubw push sbb sbb and push add inc je jle or push push push inc mov mov aaa popa push xchg sbb mov cmp inc xlat test add lahf loopne bound push roll add (bad) pop add add add pushf lret hlt and mov xchg inc add test lods dec rolb pusha or insl cmp add mov sbb and jge cmpsb imul push mov push into inc les dec inc mov and jl pop addr16 cwtl loopne rolb pop arpl loopne lret js mov mov daa sbb push push push pushf ljmp je pop js out adc cmp xor pop daa adc push daa test test add test mov rcll push lahf push and pop inc scas (bad) aas jbe lea negl clc or mov icebp popa sub incl dec arpl add jb test pop add dec inc pushf and cmp sbb pusha mov cmp add push test and sub clc sbb mov inc fcomi push pop xorl xchg add icebp js jg dec inc inc roll and cwtl pop xor push popa xchg add lock dec and add sbb cwtl std sarb add aaa adc pop jne orb cmp sbb xor jbe push pop and mov push inc daa out adc mov call popf jo hlt out (bad) and test cmp add inc in xor inc push add call mov jle cmp popa push and cmp push mov adc push es sub pop xor sub xor xchg push add or and popa or and and sub mov adc addr16 adc adc insb ja adc adc sub test mov arpl push xchg xor push dec pusha mov add cs or lock xor cmp mov or push in pop inc jg adc adc pop outsl mov or add xor adc dec add mov or adc neg shrl imul out decl (bad) pop cmp add mov jns or adc adc adc cs out add push decl rorl jo inc xorl or and dec mov pop rcrl inc push mov lahf cmp jmp ss ja push aas jo notl pushf loopne pop push fistl add mov out push ds mov test cmp jno mov insb pusha out lret dec adc xchg sbb cmp fnstsw cmp push pop or mov xor andb testl shll cs adc fs and pushf adc pop pusha aad jne sbb pop mov pop mov add aam cmp dec xchg xchg push aaa inc mov mov std pop inc mov divb sub pop jne cmovo mov movb ret sbb cmp loopne cmp je dec and and dec or cmp test push ss mov cmp mov mov ret push nop cmp adc jnp addr16 mov dec sbb (bad) adc adc sub add jno sbbb jne (bad) add lock enter pop mov (bad) adc dec pop xor xchg rcll cmpsl sbb add mov add arpl popf add or mov pushf inc push pop (bad) flds out into xor push cmc cmp add (bad) sub sub (bad) mov or push inc jo sub dec push cld dec mov xchg loop sbb jb fildll outsb adc pop sbb push push mov fidiv inc mov mov push inc aad xchg imul inc xchg add es lds pop inc and (bad) mov cmp push icebp nop dec mov in or dec cmc add dec call je pop mov push add fnstcw inc cmp lcall fimull or pop (bad) fstp xor movsbw loope mov negl cmp test push sarb dec int3 sub sub mov sub lods hlt sub test jbe in insl outsl fcomip xor add (bad) (bad) mov and loopne fistpl adc pop in sbb push negl fcoml rclb hlt jo xor mov adc lock jo lock add test loopne das add fmuls xor jmpw (bad) divb inc cmp cmpl je add or scas ljmp insl dec add adc mov mov dec pushl add xchg dec in mov outsl and mov gs aam sub je inc cmp ja or ret jbe add push inc push inc cmp in test cmp xor arpl in js inc ja mov inc pop in cmp jb mov mov mov push aad ss xor push dec pusha sbb xor sbb test lahf in inc push adc fcoms in (bad) mov shlb pop subb xlat sbb push cwtl and mov adc jl sub fstl cmp and lahf mov movsl add and sbb mov and dec add loope test adc call fstp (bad) mov nop movsl add mov mov (bad) and xchg ret mov and pop movsb xchg jo nop leave or bound (bad) test add into fsubl xor mov pop jne pusha push cmp mov inc mov push ja sub add jp or stos test lods movl fs (bad) leave insl out popf push add sub (bad) je xchg mov loope negb arpl mov add sbb inc mov insb leave mov das sbb popa cmpsb mov mov cmp cmp (bad) lock lea push mov fwait add nop cmp mov push mov cmp jno jecxz xor push mov xlat inc sbbl mov adc pop loopne das inc inc xchg in fmul cmp mov pusha cmp inc add inc scas fsubs enter imul stos mov and push (bad) mov std das dec ljmp push call or cld pusha imul shr cmp jne jbe fistl je xor xchg rcl cmp jb push std in jmp add xor inc ficompl jbe push pusha add pop clc jo pop inc aad call clc popa push or and xor mov dec fmul es js sub adc cmp fs popa and inc out lea pop inc gs and pop jp test lock loopne scas and loope adc (bad) jb sub pop sbb bound std cmp into repz ret add inc and and xor push push sbb enter bound sbb inc xor push inc inc cs inc inc add mov in jle or xchg pushl cltd xorl xor mov sub inc or sti dec push or sbb cmp inc or push mov and sub push mov adc (bad) jo and ror push xchg and mov inc add sbb dec xor cwtl rcrb sbb mov test cld pop pop dec push and sbb test and fdivr rcr sub jle jo dec rcr pushl jne inc in in faddl add add clc push mov (bad) sti xor aaa add popa pusha shlb jae cmp dec call test and inc push pop inc cmpsb add inc xchg lock add enter jb adc loop adc push aas mov sbb mov notl sbbl adc shr cmp fdivrs mov lea mov sbb jo mov outsb xor int arpl fdivrs fs inc mulb or xchg adc inc stos ss rorl fsubr divl ret in mov push xor xor cmp rep mov sub clc sbb inc fs push je xor clc jl add push or sbb push dec xor inc cmp add or es sub inc add loope pop sub mov lahf sub cltd add xchg add add cltd xchg mov (bad) inc outsl adc add add adc or pop mov adc pop cmpsl sbb dec mov mov adc (bad) sbb sub (bad) out mov push or cld dec mov xor xor movsl push jne ds add rorb push (bad) loopne push jp mov les arpl jnp adc xchg jl es cmp out pop jle sub add incl cmp divl loopne jae repz dec fs das and xchg mov xchg add add test popa inc sar inc inc inc stos mov add daa ret rcrb adc sarl dec nop inc dec je mov adc inc aaa and jl and idivl jb inc shr fwait dec and add cmp sbb push lock sbb loop jl out icebp dec loop test jbe adc out pop jl hlt cmc rorl adc or sbb mov push leave clc adc jne movsl ret insl adc negl jl insl aam sbb and shlb jne adc mov mov (bad) xchg cmp mov ds and jge sbb push jmp (bad) daa clc pusha std dec je jmp sub out lock call jg icebp cmp add xor (bad) xchg cmp sarb and xor jns push fwait lock mov out cmp sbb lea lods cmp lcall xor fildl pop jns adc test dec jmp mov sub mov adc add mov cmp (bad) outsl xor cmp inc add inc pusha pop cwtl mov mov dec in cltd inc or push jmp mov gs lret xor add lds les enter sbb (bad) enter sbb out shl scas scas pushl sbb pop ds xchg xor lea inc aas adc cwtl jo add xor loope (bad) sbb (bad) cld xchg imul pop sub dec mov or pop andl andb mov cld aaa and jmp cmp leave adc les lds inc xor sub sub pusha jp sub mov fdiv jo add testb pop add cmp dec cs add sub sub sbb or jae add sbb inc (bad) mov (bad) js push dec inc dec je jno cmp jl jmp stos mov outsb inc push out xlat add add rorb jb add orl pop adc inc mov mov mov sbb mov add push add push push testl (bad) fstp mov outsb cmp imul sub sub jl jmp or mulb shr or rcrb sub or mov xor cli and push sub jbe adc insl and test push lods ljmp xlat sbb stos cmp inc and push or cmp fwait push sub and push jle (bad) fildl das sbb cwtl ja call add daa jl pop (bad) or out sbb loop test adc insb push repz aaa cwtl mov mov ljmp add or mov and push dec push adc stos pop popa mov and and sbb outsb les mov add adc push fdivrs fcomps frstor push loopne sahf and lods cmp inc mov rorl and push movsb pop sub pop data16 rolb adc push dec inc pop mov jge inc add call in pop dec rcll sbbl std out or leave push nop mov add sbb mov adc pop mov arpl cmp arpl sbb cmpl inc mov pusha and test loopne or fldenv dec push sahf inc inc mov push xor int3 push or mov sti mov jmp mov leave jo pushf cmp pop lods cmp sub add push or imul add add out clc jge call inc dec jns and and data16 cmp push push lret es outsb pop inc sbb mov xor rolb insb xor test fcomp pop shll adc ss pop test jg mov loopne,pt scas sub clc jne xchg and dec push add outsl (bad) pminsw xor sub push loope inc rolb xor mov sub add or arpl pop adc and mov cmc xlat iret sub ljmp pusha sbb cmpsb cmp add lea leave incb add xchg cltd push pop sarb lods pusha push repnz rcll mov sbb leave int3 lea sub (bad) das pop mov mov stos in mov outsb (bad) ja leave inc enter js push sub or ret enter lods ret adc hlt out nop repnz in dec inc add mov adc push (bad) mov and mov aad and xchg div add add pushf fs add add push or out lcall push inc push push adc or stos xor ds push mov outsb push or add sbb or push (bad) xchg int3 add add add add add int3 push jo add and pop ss adc and fldcw aam push pop inc enter std push push pop inc mov jnp (bad) push dec mov cmp add mov push ss sti hlt mov stos adc je add mov cmp or add dec pusha je mov add and das add push js add ret jg out push sbbl outsl add and adc adc adc insb ret adc shlb stos lea (bad) aaa fiaddl ja cmp je icebp cmp add cmp add push je xchg popf int cmc jmp in xor xchg sub (bad) (bad) aaa stos sbb mov cltd push movb ljmp dec lcall add inc mov push cmp add loopne and mov add jne cld adc lock dec mov xchg sti repnz pushf cmp (bad) and add sbb pusha bound fldenv je pop je nop cmp mov dec enter adc (bad) je push cmp aas push sbb mov add or inc inc or push std or cltd mov adc xor mov or mov jle sbb inc push mov addr16 sub mov nop pop aam hlt pop fdivs cs mov xor push adc pop mov (bad) jmp cmpl jne push jmp push add insl adc jg ljmp adc pop xlat push or or ja ret (bad) xchg jl or jno xor xor and test pop add xchg lcall pop inc lds sbb or push xchg lock std (bad) push mov mov and jmp mov sub sbb arpl or cmp fldenv js rclb push sub jmp mov push fisttp fwait shll push inc push in fldz push jmp cmp fsts nop add test rorb cwtl pushl push inc or pop adc push mov jmp push xor aad mov outsl xor or out pop les (bad) or sub (bad) adc out mov mov cs fnstsw enter fdivrl or lock enter cmp call push mov adc das adc inc push imul fsubs in push and jecxz xchg fcoms out adc sub dec sub popf popf dec popf test test or test rorl push (bad) adc add shr out or mov mov mov and push clc adc sub stc inc test mov cld add adc pop bound mov pop aam inc mov sarl sbb loopne addr16 mov push or mov and or scas xchg adc je mov (bad) pop in add iret pop nop clc or leave cmp lahf in jnp notl push push push fdivl es fiaddl ja data16 mov test jl enter push xor loopne test pop jmp int and add (bad) xor scas push int and add sub cmp or outsl push mov stos pop and sbb ja jo iret je fisubrl (bad) push adc adc ret mov test mov mov dec insb out mov ret sbb cwtl cmp notb mov nop add fwait mov lahf rclb sbb cmp adc add in add pop cmp push push ss lods test add cwtl stos in lods dec adc fistl scas dec lods dec lods push and insb fdivs and nop add or cmp je mov cmp (bad) je lods push adc push push (bad) pushl push neg sbb push and mov inc sbb adc push pop xchg loope jl xchg in ret nop add je inc add and aam dec fbstp jg out xlat adc leave lods mov push call fldenv or push mov ret sub cmp popa jmp mov or lock popf out cmp adc bswap dec stos (bad) frstor loope mov js jle aaa or and test sub jle loope pop mov push stos (bad) and stc fiaddl cmp out inc aaa xor push adc mov jge mov fld inc test xchg test sbb negb stc movq mov dec adc jle ljmp neg sbb push not and push mov in into inc dec push cmp jne cltd scas jge pop outsb pop outsl (bad) insl xor inc push push sbb adc push mov pop or mov cmp xor adcl lock cld xchg mov mov and or push cmp mov dec mov mov cltd pop stc or dec sbb cmp mov adc jne dec or mov mov mov mov xor cmovb push mov push movl aaa sbb outsl sbb mov push adc (bad) fcmovnb jmp jbe and test dec movl mov out jle mov or lods push inc jnp pop sbb pop mov mov mov inc pushf mov incl loopne add div test je movl leave rol fstpl push mov mov add sub sbb popl mov or mov inc and (bad) std jne mov push adc ficoml cmp xchg and dec inc add push insl mov mov push cmp fcom mov or or or or jecxz arpl xlat js out in loope fadd loope pop or fstpt xor cmp dec inc mov cmp (bad) adc dec aaa loop add mov mov fadds in or in (bad) pop insb xor xor ss test inc add and in xchg xchg mov sbb pop ret mov lcall xchg fstl movl or push dec inc xor cmp dec adc cmp add xor xchg push shlb mov lods sbb and sub insl dec xor jle push adc ret pop pop or nop and bound (bad) pop sub and ljmp add or sbb addr16 imul inc jle xor cmpsb (bad) push mov divl pop mov add pop std add mov shrb insl push addb mov sbb ds push stos test xchg pop or fisttp arpl pop or push xor fcomi or js cltd cmp lret add xor sbb cmp mov adcb repnz int inc push push inc or pusha adc scas dec out insl je cmp movsb cmp pushf mov div xlat xor cwtl jl add jg outsb sbb jne cmp jl (bad) outsb sub add xchg jne popl push fmull mov jl xchg push mov dec imul cltd and icebp push call inc or negb fadds mov shl mov jp mov sbb push std dec add sbb pusha popa push dec call sub out fcomps adc or xor stos fisttp test mul shr stc dec dec sub push in fldt inc xor sub push push cmovle mov cmp push push dec xlat in mov xchg fwait push das or xor or cmp cmpsl pop lcall push cmp fistpll cmp inc sbb dec add mov mov das jle adc fiaddl mov or mov inc leave sbb xchg pop popa cli incb mov jmp push je mov cs cmp je sbb pop bound call cs sub pop dec adc insl das insb pusha push lock or or mov aas and sub add xor xchg and jl jl dec push (bad) cld adc mov (bad) xor jbe jecxz fstpt add fbstp or cwtl mov insb cmp add add jmp add inc outsl pop sbb subb in mov dec sbb or test dec cmp lret aaa ret mov inc sbb sti jl xchg push leave shrb (bad) and jl or fisubr and jbe mov mov andl enter cmpsl jle jecxz flds mov iret push ljmp es sub mov and xchg and push ffreep inc lock or mov push push push int3 pop pop xchg inc lods xorl inc pushl push test adc adc mov mov rorb dec or pop addl cltd pop mov sbb push adc cwtl sub mov mov inc call add fiadd add jnp mov popl push addl cmp jne fmul fdivrl add cwtl mov sub mov es fisttpll (bad) push movsl jle dec add stc rorl ljmp lret rep push push rclb test pop adc cmpb push das add shr pop or and adc addl imul or adc cmp nop lock popl je add (bad) mov cmpl test push xchg stos mov push mov lods xorl mov insb sub inc ja ret das push pop dec in (bad) mov dec xor loop push outsb sbb mov lret inc js add sahf push rep push mov add mov jno repnz pop pop pop mov fistpll adc mov sub pop sbb (bad) rolb jno aam mov push out mov adc cmp jge js ljmp je add fisttpl je inc mov idivb xor inc cmp mov adc inc inc cmp mov repz ds or push xor insl std sbb rcrl dec pop and pop ret pop adc popa push pop fildl and dec inc roll xor cmp add mov adc fisttpl xor xor test pop les adc mov les adc js xor lock push jl (bad) nop mov add fdivs add dec je and mov jo pop pop scas (bad) cli inc in jno pop out sar ret xor jo xchg mov lods mov push ja (bad) sti adc mov or dec cli push add adc insb int pop add aad push push cli pop mov and adc jb sub mov out insb jl sbb fsubrp sub lods stos lds fs and fwait jecxz push aam sar adc cmc fisttpl shrl push js jb inc rcrl out lret push push lea test test shrb out loopne rcrb ret pusha push push xchg push addr16 ljmp lcall pop xchg fcoml pop and cmp rolb jnp (bad) push ljmp adc cmovle pop mov std mov mov push pop out and jmp and mov cli or xchg clc push enter jnp int lods cmp das pop enter push fist sub sub mov mov lds adc or sub adc cmp jb adc jl dec jne call mov cmc pop push jo rorl xor push (bad) inc sbb dec stc add and mov jmp (bad) mov incb jb push xchg xchg xlat cmp mov jg sub mov dec add rcll (bad) mov fisttpl out inc movl pop movsl sub pusha cmp jne push sub mov lret adc sti pop mov push push (bad) leave push insb int xor or sbb push fsubrs lret mov out or nop push (bad) push (bad) dec psrlw cmp xor call or sbb loop mov fisttpl inc and jbe pop mov xor pop sarb or and inc pop jae jmp pop jo inc dec cmp ret push xor sbb or sub test lock aaa cmp mov sbb mov mov lock dec enter pushl mov dec inc sub sub mov push inc push and jmp xor sub gs mov xchg cmpb add push out cmp mov neg mov sbb jmp adc roll in mov xchg xor mov pop stos fstpt mov mov mov cld test rorb pop cmp sar ret inc sbb inc sub or cmp or inc dec inc pop int3 mov dec inc (bad) jo inc cli mov mov dec jne fnop xor sbb enter mov arpl mov mov push mov adc outsb test mov add test inc sub loope dec (bad) iret nop aad add icebp push pusha pop js and std mov test sub inc ja jnp cmp jno mov sti jmp and sbb dec add int lcall mov in call jno xor jbe mov fisubrl sub cmc loopne or jne loopne jne test loopne jecxz or sub daa pop pop loope dec adc insb mov (bad) inc outsl ja inc jb loopne loopne cmp ret push xchg jp cltd lea loop mov (bad) add jg dec inc mov decl mov dec mov push nop xchg jecxz cmp cmp jb rcll ljmp sbb add lcall jge mov inc sub or mov (bad) lea inc add inc or mov adc add or adc jne cmp nop ret or xor in inc push pop push or in jb add jecxz jg sub fcmovnb cmp jle cmp (bad) jbe ljmp or fdivs sbb push mov aas inc insb mov add lock mov test ds dec mov subl lds cmpsb call push mov mov sub movsl mov test xchg test sahf aad movsl sbb dec add std pop or xor mov fs movsl ret adc push out lret inc pop jno je je jl mov mov ljmp and add lods inc jp adc arpl push mov add jo test jp adc xchg fcmovnu lahf (bad) insb mov mov std lcall push xchg clc dec stc sbb push clc sahf sbb push or adc fistpl (bad) mov fimull mov adc jo mov cwtl xor cwtl mov bound sbb in push jne nopl pusha or fisttpl std jo mov imul imul pop push or push inc mov push mov push loopne cmpl sub xchg (bad) nop dec sub adc pusha inc sub ds jne adc push inc dec mov push pusha pop xchg mov lea dec sbb fs (bad) insb mov pop je inc xor or mov add shr in mov or push in xchg inc int cmp mov lea jge sahf push std ljmp and sbb mov daa rcrl fwait sub lahf mov xor mov mov dec inc daa or pop mov mov ds fimull push jle icebp sti add push sbb fiaddl or sbb jae push dec lock je and aas aam (bad) ljmp inc mov push push and xor aad jnp ficom sub pop push push sbb loop sahf cmp jmp inc mov nop xor sub inc push lret push push push sub movsb and addr16 sub push les xor test test inc sub jmp faddp and jp add cmpsb cmp fidiv mov pop cmp mov xor xor push loope ja sbb inc jae mov cmpsb xorb pop fisubr in cmp mov subb test push (bad) xlat push pop and popa adc sub pop cmp mov out dec xchg testl loop lds out or inc xor cmp add mov subl add pop or xchg arpl add cmp jg inc int pop shr shr sub aas lret mov sbb fsubrs sub push xchg in mov cmc in pop mov out mov cmp mov push or add inc out sub mov or pop push outsb push inc aaa in ficompl add ljmp and in or je dec mov dec repz out mov jb mov mov not mov adc jecxz xor add in negl dec in int3 dec sub pshufw add jb jmp div sub ljmp adc roll jne xorl inc sbb movsl ret xchg push jg pop add xchg xor das add add jne or jae pop fwait mov sbb fdivl sub cli dec lret push mov jne push lock (bad) imul repnz mov push sbb insb mov mov loope in mov sarl popf jb push xor pop mov push mov dec sbb dec shlb push push mov dec xchg inc push add pop xor sbb xchg xor pop cs push jae pop xor mov ds fsubrs xchg and sbb push shlb test xchg pop mov cmc lock stc loopne cmp clc jbe xchg je push sbb jge cld or add (bad) mov hlt push pop out ljmp movl mov inc test or or outsb push cmp cmp dec cmpsl push imul sub dec sahf mov mov and popa fcoms or mov imul jle add addr16 pop mov jmp ficom xchg jb xor cmp and xor mov or and and cs push movl xorb adc cmc pop fadds add push push popa shrb loope aam inc enter cmp jns lea jae divb mov in or sub incb sub test clc xor adc inc stos mov scas push rcl inc inc mov clc sub or sub inc ret (bad) fstpt mov cmp insl ret adc dec bnd loopne cmc js pop shlb or popa mov rol or jae sahf adc pop mov cmp lret or jne mov add push adc lret (bad) js loop pop in and push mov jl sbb xchg cmp fsubrs adc ret mov push mov mov mov inc dec (bad) cld ja sbb loope adc mov loopne outsb add add and sbb push inc lea or clc sbb cmpsl add add and fstl inc or addr16 cmp sbb pop and das or xchg jp mov mov or or add dec add pushf push and je lret mov xor sub mov dec lock dec pop push mov pop jno out cs add sub shll dec je push das push adc xchg cmp fisttpll and inc xor jp fnop adc sbb sub push xor mov mov pop jae iret mov mov ljmp pop mov mov mov push int outsl add xor faddl fsubs es iret inc push push cmp mov mov leave outsl sbb bnd dec sbb push cmp xchg sub ljmp dec leave xor adc mov shrb (bad) inc mov push add xor cmp jge mov xor inc sbb dec inc inc dec dec or xor dec dec and cmp rcrl adc dec push push enter pusha movb in and ja dec fsubp outsl (bad) or mov push push push fwait add cmpl xor inc or loop enter arpl mov push mov rcr popa rcll iret pusha frstor and dec push dec ror aam scas std movsb sbb cmc push push pop pop xor inc cmp shlb xlat push inc clc fldt imul stos fs ds push loope dec movl mov scas sbb sbb mov (bad) jl xchg cmp pop pop ljmp adc mov shll dec or in inc in add mov push movsb daa pop mov xchg dec push addr16 fistpl inc mov xchg cmp lock jecxz or int3 pusha dec xor jge cwtl and pushf xor cmp (bad) je mov fistp cs mov inc and out push push data16 inc sbb pop push or push inc pop or ds sbb sub mov mov inc dec push mov or mov push (bad) lea int3 sbb int xchg lret in pop into mov xor sarl fsubs inc stos mov add mov pop je sbb mov push ds adc mov jl pop xor xor add or in aas xchg adc rolb jb lods pop ret imul pop cmc push push cmp out sbb mov jl jg call neg shl aam mov cld aaa or cmp in add repnz cmp nop inc cmc div in inc push clc stc cli nop inc push cmp cld std push fstpt in incl dec fs push loope xchg fildl insl adc dec jne dec mov mov div cmp div lods (bad) movsl cli xchg or js mov pop or das je inc add add mulb xchg mov pop adc push add xor or lea fdivrl adc or mov sbbb mov insb scas fcmovnu nop sbb (bad) add jge pop sarl xor daa roll outsl adc stos nop pop iret push mov or addl rolb (bad) push mov adc cmp adc inc fs mov add mov stos dec lcall ret jmp sahf bnd inc sbb or or shl push push mov or mov or mov inc mov mov dec in lods rcr adc inc outsl or adc (bad) outsb cld sub pop shr push xrelease pop pop popf nop arpl push popa mov lods pusha ret sbb mov testb pushf rclb xchg mov sbb push adc or mov add je (bad) movsb mov add in jne xchg mov insl in pop adc push and add pop mov subl or mov test clc leave xor fcom out mov jnp fnstsw or mov xchg cmp and jl mov insl mov call jbe in and lret in inc test iret xchg mov clc mov cmp jge ss adc sbb xchg stos pop sbb clc pop pop xchg loopne xadd adc fild push inc push cmpb cmpsl int add cmp mov sarl cmpsl lods mov (bad) cld pop cmp push andl lods mov or faddl cmpsb add loopne aam cmp ja jmp lea rorl ja and dec sahf je ret push push cmc imul jmp sti loop fsubl out and lea jle and and loop xchg push ret repz aas xchg enter cmp xor popa and xor ret inc cld subb inc aas pop int3 add lods insl mov (bad) shl cmp orb cmp push lret negb ds lret push ret (bad) sahf adcb ret in lea add (bad) test xchg pop inc push jge pop lea sti inc jecxz push stos sbb mov pushl mov jmp test cmp sbb cmp loopne ret incl add fidiv mov sbb adc test mov jle xlat cmpw xor mov mov mov add test xor jmp add inc add inc mov cwtl fucomp sarl add cmp add orb jmp inc push push dec or mov pop or add add push add pop jl mov (bad) faddp inc fldt mov imul call sti cmp jl push sbb adc sahf add adc jae sub mov jnp (bad) mov mov adc inc xchg adc mov out mov ret mov (bad) or mov or clc pop mov adc sbb adc out out mov push cmp jb mov mov es cmp rolb mov dec scas add enter add imulb and insb ret data16 add sub lods div insb insb das dec cmpsl mov and out (bad) jbe loope aam cwtl add stos (bad) push or jl sbb add mov insl sub mov mov mov mov insl adc add (bad) lock cmp jb jne mov (bad) ja lcall sub mov cmp das jne sub jbe scas pop push mov mov jns test mov (bad) jne push add inc into seto gs pop sbb loop leave cltd lcall pop jl pusha adc push adc (bad) sub les shll inc sbb push inc add (bad) cld into fimull push pop mov (bad) push mov test jg add mov lock sub inc xchg xor sub xchg cmp cli add jle dec lds push test ja jl pop cmp jg xchg and inc mov jl stc sub add mov mov addl imul add add scas jb cmpsl insl inc lea pop add adc daa stos pusha arpl add add add stos enter mov xchg mov jl sbb bound pop jne xchg mov push jmp (bad) mulb insl or adc bound inc jg outsb std adc dec or lods pop popf push inc add xor inc test dec cld dec or jle or jg (bad) loope std sbb push cmp fsubr sub or (bad) fbstp testl push scas imul iret mov mov test nop jge pusha je jne or inc pop insl in and inc loope out adc sub push mov pop loop or add shr (bad) dec arpl jne popa mov and fidivr rorl leave je pop push dec or jbe dec fwait and sub cmpsb pop mov jle mov jne pop pop movsl pop (bad) lea pop and into sbb cmpsb and cs sbbl sub dec mov fstl insl jo mov jbe jne dec mov jge jg inc adc rcll aam (bad) cmp pop push mov pushw add daa loop lds cs idivl mov xchg fcoms push es push in pop and inc push (bad) lea jl dec fild push jmp pop (bad) je cmp sub add sbb push add jmp pop xorl or out pop or lret push mov cmp clts cld mov or add sbb outsl ds pop test push lea test push xchg mov rolb sub mov or jle lea cmp icebp xchg cmp sbb mov xchg pop pop adc pop or mov inc subb movsb adc mov nop add mov xchg mov hlt add adc fidivrl xor pop das inc xchg add insb mov mov mov inc pusha xor sbb and jp je xchg stos mov mov daa popf xor (bad) nop fcmove aad popf fs mov adc enter adcl xchg push add nop dec jmp rcl mov add mov push inc cmp gs sub jmp inc dec add loopne pop cmp ja jge cmp pusha lock (bad) xchg test test mov mov push jle xchg ljmp pop insb or js (bad) js pop movsl pop sbb adc or pop adc lods orl enter push xchg mov (bad) mov out add sbb gs jp pushf pop add in and roll out stos shlb mov popf or mov int3 sbb sbb popf addl pop rolb negb inc cs repnz mov (bad) (bad) pop push cmc add in cli or test ret mov add and or or xor or ds neg pop xchg sub adcb jp and fucomi rorl add jecxz rclb push je sbb out aaa and aad xchg mov rol nop loope cmp faddl push sbb jae cmp daa ja xchg les mov insb rolb dec or mov mov cmp mov dec fcom test mov popa sub je inc xchg mov nop push xor or dec ret nop xor cs lret cmp sub or xor ret inc xchg add and adc lcall testb popf push sbb (bad) aad mov int jno xchg lret inc popf add cwtl ficom popf push mov loopne inc aam xor mov mov test lret pop test fwait stos or mov mov jmp jo lods sub cli test xor cmp (bad) mov mov jg lret or cmpb mov cmp mov cmp and push fadds lock xchg dec cmp sbb jmp mov shr push nop push xchg push xchg popf add and lahf push push popf (bad) fisubl inc gs mov fsubs imul mov and int pop hlt mov (bad) repnz mov loopne jbe and xchg push lock dec xchg lret ja lds dec loopne add mov mov inc mov out add in adc add sbb adc sbb mov or inc (bad) mov jmp adc cmp add dec jne push sbb jge sbbb out pop aam pop pop jge mov mov movb rorl add ffreep cmp pop setbe mov into push insb sub pop add aam cld mov add (bad) shr shl dec in lock pop add push rolb pop xchg (bad) push xorl xor leave push fbld fisttpl or inc add inc mov mov je clc cmp fisub push fisttp or dec aaa mov sarl sbb mov adc enter sub test cli mov in sbb and (bad) adc aad push sub xchg aad rcll mov inc neg fimul shlb adc not push inc mov xor ret push outsl push mov dec int3 pop lea jnp test sbb aaa xor add pop ret (bad) add push push dec push push and aad stos shll mov push fdivrl mov data16 push mov sbbl in jmp (bad) push sbb (bad) dec add dec adc sub ss mov mov dec sbb jle loopne add pop or push mov pushf subb or dec and sub jo push inc (bad) mov mov jns test add xchg add popa push xor inc fildll movb out mov pushf inc cmp push loope sub jle test mov mov push sbb inc sub cmp out jb dec sbb or mov or fmuls sahf or in sub jl dec mov mov out inc test loopne or push test jae mov cmp adc or sub lds out repnz (bad) lock xor push mov and push addb adc fisubr fdivrs dec pushf adc dec push mov arpl pop lods test je fldl ss loope movsb hlt dec add xorl inc jne cmp ficomp or pop lea dec shlb test fldl pop pop lahf repz add and idivb jmp je pop enter add aaa (bad) mov and inc or inc mov mov sub push and or (bad) mov mov in mov aam sub jae loope insl adc pop iret jmp sbb dec or in mov cltd incl mov lcall pop push ret inc sub sbb insl hlt sbb inc shrl cmp dec lahf or arpl addb adc cmp add lcall mov cmp pop sbb adc out aaa cmpsb add sti (bad) adc sbb mov mov adc ja (bad) fistpll pop jne pop ficompl xor fist add push mov in and add int3 in popa lahf cmp mov ljmp (bad) ffreep or push inc mov addl push mov pop mov add inc or jecxz ret inc dec int3 inc push aam cmp dec fcmovne insl addl push dec push add fdivrs das push mov dec mov mov mov push cmp cmp inc cmp mov lret jnp mov xor int mov mov add lahf pop dec push mov call add mov sub enter dec scas mov (bad) pushl int pop and clc add stc stos push popf mov idiv xchg pop add sub xor incb jg mov push (bad) (bad) lock push cmp decb add adc ljmp and or sub mov jp ret mov mov push dec adc push mov pushf xor (bad) std in push sub inc sub sbb mov lret pop dec mov inc xor iret cmpl cmpsb fstpt pop or or push push sub or aad dec scas ljmp lcall add pusha imul add cmpsl cmp (bad) mov mov jp nop pop add ljmp add mov jne cmp mov jge test cmp sub add fwait test push cmp mov add add popa sbb lods add jbe and dec out push push jmp ljmp jne dec sub xchg jne cmp (bad) (bad) mov and sub out decl pop mov js push ret add scas adc mov in or pop or dec add push roll fdiv jne sbb sub mov je xor add dec in sbb test pop divl fstpl ret insl ret das pop iret mov je adc pop lods mov cmp mov mov mov sbb jle inc cmp jb mov or mov cli std loopne xchg mov scas jae mov mov sbb cmp (bad) cltd add imul je in push add jmp inc or add je pushf add and sub scas mov inc sbb push jno add pop mov add inc add push popa push cltd mov aad aad mov push sub mov nop sub insb inc out sub dec jne mov (bad) jle test mov lds mov jg pop sub adc mov (bad) pop xor (bad) ss xor out xor fsub std hlt push add mov mov pop fadd mov je sbb je mov popa mov xchg dec push and mov sbb rol sti mov mov add sarl mov cmp jecxz je jmp cmpsb pop add adc lods mov sbb rorl mov xchg fldl (bad) rol push mov push shr jne sbb popl aaa push icebp jae dec sbb and add xor ja mov and shl mov or push shll inc xor and push inc xor popa enter pop lods jnp fcmove mov cmp and push mov sub (bad) pop loope add and inc mov outsl cmp clc shr pop jne cmp shll push adc mov inc in or lea movb loope and dec sub sub ret jl or jne std inc adc jno push rorb sbb ja or mov pop add mov sub adc sbb jecxz clc sbb js dec scas dec add mov (bad) in jb ja inc adc sub inc sub push pop adc sub mov push call push dec add inc add cmpsb sbb (bad) out xor mov push pop xlat inc (bad) add dec push dec add adcl lahf add cmp (bad) sbb sub (bad) add dec or inc xchg push fcoms jo fisttpll push push dec jne fildll popf cmp sub push hlt pop mov hlt dec sub inc sbb stc nop arpl hlt push mov sti jne inc ss mov movsl sub push cwtl adc and pop push leave pop add sub push test das sub scas jnp ret pop or jne mov push (bad) decl je clc mov or movl ret mov or imul fsubs in inc test in pop add sbb adc aaa pop sbb dec stos in je cmpl int test adc mov inc cmp dec cmp in rcrl int (bad) dec dec mov lret cs pop add pop dec sub std cmpsl mov in add xor pop test imul je sub pushf pop popa and jmp pop mov push inc xor (bad) rorl data16 lret mov mov popa adc xor push xor xor pop mov jg dec mov push inc jge and (bad) cs dec jno dec jns push inc sbb (bad) js cmc or (bad) dec shr or push mov (bad) mov xor pusha mov push and sbb dec fistp das out (bad) inc push mov loope insb test subl pop pusha sbb lea je in mov cli (bad) dec add ljmp jne add clc roll dec jnp popf jle cmp add cmp pusha lea movl mov mov xchg movsl sub and movsl and enter sub test xor iret das scas cmpsl sbb aad mov cmp jg fimull xchg ljmp ss push lcall jnp lock jns jae mov sub jmp cmc push (bad) (bad) (bad) jnp cli mov out cmp jbe sub mov mov inc inc dec jne mov addr16 cmovns push push lods adc (bad) mov adc dec cs sbb and mov push inc pop pop loopne pop jb andl jb sub mov stos mov stos and loopne ljmp sub adc inc push or inc or cli loopne je pop mov lods mov fdivs or pop mov adc dec lea jmp sub fwait pop mov mov rorl jnp and and push push jb das add fadd add sub out ss mov cmc stc push fcomp inc pop inc mov sub push inc push and add add dec jae xchg push mov icebp movsl jns jbe cmp (bad) movsb xchg cmp std jb cmpl imul out (bad) pop pop xchg jge out push imull adc pusha cmp or push or mov (bad) mov or loopne enter add or mov out mov enter sbb rorl mov inc add mov or (bad) pop int3 mov sub and gs add fldl mov push mov js push rcrl mov (bad) in cmpsb imul imul ss push lea sarl mov hlt mov inc push (bad) or or mov xchg sub cmp mov and std jecxz ja push adc ds imul enter sub nop push adc js mov test out mov mov dec and ss test arpl cs fldcw mov push movsb pop hlt imul add ret sub cmpsb and fldcw cld (bad) xor mov sbb sbb adc xor adc or add popa and fwait and or fwait scas pop add push fwait mov sbb inc add cs ret mov lret add adc imul push insl push pop gs cwtl sbb jb and test mov adc aaa mov mov divb xor mov out out pushf jne dec je rep pop or ljmp out ret leave push pushl sub pop and sbb adc test std fildll fimul jle lea sub dec mov outsl cmp jmp push add jb push mov sub pop dec push fwait push inc loop sti fistpll cwtl adc pop mov (bad) push mov sbb aaa adc xchg push fisubrl push fsubl dec and popf add inc das jne push push or pop pop lcall or sar jecxz js sub rcll call (bad) push add in (bad) arpl fs dec add ret sub ret lret add cli daa (bad) cmp pop dec ret adc sub es popa push xor rcrb movl push ds mov sahf inc lahf xor repnz or std je pushl push sbb jb lds cs addr16 or push test inc pop cmpsb loopne sub push dec inc or outsl inc psrlq and clc inc push inc sbb jae pop or push scas addl jns add cwtl inc fstpl jno rclb mov add dec add add mov das xor xchg ljmp daa es insb outsl test dec insb mov add enter push cmp adc out dec je jo pop daa cmp ficompl cmp mov pop or push testb jne adcl bound jmp or sbb test inc mov xchg insl mov repnz push mov cmpl jle call add inc mov subl inc insb loope in int3 xor mov iret cmpb jno iret outsb mov mov adc mov mov push dec insb imul or xchg xor xchg jae mov add imul ljmp std movb mov sbb daa sub push popf and nop jnp add (bad) mov push clc push mov aam mov jo das aas not sub pop mov clc jmp add in pop pop gs or cmpsb dec popa sbb inc add inc call pop mov sbb (bad) and (bad) pop dec push scas pusha add pop pop jne mov adc sbb xchg pop pop sbb xlat cmp clc fistpll jb test adc aaa fsubs inc jnp push (bad) xor push dec inc cmp inc ret mov xor test adc in mov push rclb and xchg sub xor pop pushf dec ret sbb push lea andl sbbl faddl in hlt inc (bad) xlat xor add pop push fbstp and xor or push jo shlb ret je pop push std inc or jno rorl push push ds in imul das daa pusha or (bad) or mov mov ja in movl dec push int dec dec dec cwtl dec mov aad or push cmp or cli xor xor xor sbb insl les cmp pop lahf call and push repz add sbb dec add adc daa add mov int and sub adc mov cmp mov dec flds daa adc add jae xorl push pop pop (bad) jb or xchg or dec cmp or or pop or enter (bad) loop or inc dec pusha fisttpll or mov add and es push ja jg push adc pop adc xorl and daa adc and adc lods sbb and sub sub sub or sub dec cltd inc mov adc cmp push push sbb (bad) xor es sbb sub dec or jmp call xor sbb sbb cmp add dec lcall sbb dec shrl jge sbb (bad) xor push inc pop loop test add add sub and add inc mov mov cmp xchg cmp jmp sub iret xchg pcmpeqd in jno repnz mov sub push rol lea (bad) jne repnz aad in in xorb and outsl add (bad) call jne call pop push or adc jmp and sub nop ljmp jae out in in mov dec mov movsb cmp ret or out mov sbb dec nop out add icebp and add dec es and std repz std jne mov hlt hlt push ja orl xorl push pop jae pop div (bad) cmp and clc clc push clc dec xorl or cli pushf ret iret sti sti mov repnz cld je cld sub jmp (bad) or cmpsb imul nop adc ret inc test sub shrb scas lahf roll inc mov push push popa fnstenv jne pop rcrl test jecxz lea sti in mov (bad) in xchg and add mov add enter outsb mov add in dec enter pop or nop gs jmp in (bad) enter add mov and repz out out out dec push pop daa adc add sub xchg xchg or stc repz dec pusha dec sar push enter stc stc gs dec mov adc imul xchg push pop daa clc add stc or xchg clc (bad) fsubs sub lret sti push sti dec sub daa adc popa dec scas addl mov stos sbb inc adc xchg stos add jle cmp (bad) mov loop test jecxz adc cmp imull (bad) mov and out popf dec pusha xchg dec (bad) out dec dec popa sub mull idivl mov mov imul das mov mov cmp (bad) dec scas sub and sub (bad) mov out out dec enter inc mulb push pop xchg sub sub out xchg nop (bad) mov cmc add repnz xchg and xchg dec enter jae mov (bad) or adc imul dec and sub and xor sbb andl (bad) adc cli cli push or lds xchg hlt or and mov hlt mov and mov lods data16 (bad) xchg xor hlt incb pop jae or (bad) cmc inc adc fdivrs add xor xor mov loope loope repz repz pusha or mov lds adc in dec or jns repz inc push xchg out xchg mov bnd inc jns repnz gs inc jo and pop inc mov or sub jns cmp repnz das mov sbb icebp mov icebp icebp cmp push dec adc inc dec enter icebp push icebp popl cmc push lods pop pusha xor icebp jp dec enter and sbb xchg ret mov lret repz lock stc jns gs add jp lock xchg mov (bad) or lock adc pop cmp dec test sbb xor jbe stos cmc jne sub add and ret push mov fldl dec in pop inc pop push add add es add cmc vpcmpgtb mov push jo sbb mov ss inc jne test addr16 push sbb orb sahf inc push fist jne adc pop inc pop dec sub aaa mov pop cs fildl and jbe xchg sub push lcall or insb dec inc dec mov push jns push sbb jl fs mov lcall mov lret in and (bad) fxsave cmpsb sbb sbb sbb imul (bad) inc push mov ja add scas add pushf out add movl rolb repz mov sbb sub jne call hlt and pop add push aaa ljmp shrl fildl pop jne mov push push inc imull sbb pop cmpl je jbe leave mov or xchg (bad) lock test ret push push add ljmp add xorl add mov mov lahf adc enter push mov mov pop ret mov inc inc or mov inc xor adc mov stos sbb shrb lock mov jle and sub loopne (bad) xor adc sub test push fadds xor add or cmp dec test mov inc pop push sbb mov pushfw add dec cmp popf mov pop dec dec test (bad) sbb imul cwtl mov xchg mov pop dec adc and dec pop and jbe inc call jne fisubrl mov mov or or and push adc mov xor cld lock les or cs mov mov push aam cli inc mov js mov sbb adc and out (bad) (bad) jo (bad) sti jmp xlat (bad) cmp jbe push pop out add or jne test sbb add pop aam frstor xchg xor inc and or adc pop icebp mov add icebp int xchg (bad) loopne imul add lock ja push aas cmp push push add inc shlb lock sbb inc and push outsb shll push loope jne cmp scas mov fcoms lods mov xchg mov push push ffreep or or mov adc push fsub ficompl push pop mov pop push cmp dec ds test mov daa push xchg fmuls inc sub insb pop sbb cld mov shlb and or xchg pop mov inc xlat cmp jne inc (bad) lock mov std test sbb push je outsb pop js or mov in jg and fldpi or (bad) push daa int3 push jle and test push xchg mov int3 jne cmp das add pop jmp fldln2 incb movq add add and mov jg add jg jg mov in outsb outsl inc add push jbe jle sbb aaa fwait pop adc jg jg jo mov sti notl mov mov push xchg add fdivs rcrl pop dec lds mov sbb lret (bad) sub jnp adc xor cli sbb push mov or jne outsb into test inc insl pop jg pop loopne mov adc icebp push push push sbb (bad) ficoml sti push mov in dec adc scas mov shrl roll mov add sub fbstp lock movsb sub push pop or arpl jnp in (bad) cmp add (bad) into adc and sti mov push jno dec popa jmp ss (bad) stc pushf mov andl out xchg imul or (bad) testb or es add jns loope lea inc sahf out loope jge push inc inc inc sbb rorb jmp or push xorl test and push hlt adc into add push push xor inc repz fsubrl add dec outsl add mov cmp push in rep scas jnp jg cs add lock mov push clc lock or xor rclb add and jge adc or push fnstsw xor cmp inc les stos (bad) jmp pop lods mov outsl loopne mov cmp inc adc jl sbb push push add in adc sbb inc mov cmp jb out adc mov add js mov stos push cmp mov push add pop push sbb add lcall cmp jmp push pop inc (bad) lock and daa add outsb adc mov inc pusha mov inc mov or scas add sbb aam mov mov sbb test jne adc fucom or and mov adc imul orl mov push inc lods or mov or dec nop sub enter mov mov into (bad) fisttpl jne sbb mov in cvtdq2ps jbe xor inc push dec pop push ja add push or or mov orl std sti mov pushl push cmp les cmpsb loop sbb push rclb ljmp cli cmp adc js icebp xor test data16 add sub push jl add and dec add ja add or (bad) jmp bound scas gs loopne iret (bad) cmc pop scas push ret inc and test fs xor inc sbb pop cmp xchg adc dec jle mov xchg out je nop mov punpcklwd sub push stos bound das sub icebp pop mov lods cmp cmp pop cmp movsb adc mov pop or mov mov inc push sbb stos jne or mov adc daa sub cmpsb push je test xor dec push push into jo mov xor adc and or in insl push popf xor cmp roll push inc mov ffreep add or add cmpsb dec test mov add scas or pop sub pop sub mov mov add mov int3 insb adc xchg xchg jge add add or cld jo cmpsl je les add sbb addr16 push test sub mov jne cmp push or rcl ljmp add (bad) add scas addr16 fdivl daa inc and add and incl adc mov inc pusha dec mov aam ja pop add pop (bad) jl push mov push and adc pop push cmpsb xchg adc movsl push movsl mov gs sub movsl pop movsl xchg aam enter mov inc loopne mov mov mov xor andb xor xor ret mov dec pop inc ret push and outsb lcall dec adc cmp sub pop jbe mov mov inc and lret jmp mov movb jb outsb shrb (bad) xchg pop rol pop add add mov into cmp aas add clc adc push pop jbe scas loop sub inc leave (bad) or add lret mov adc inc and pop cs lods adc or adc sti adc add mov jo jmp sub xor push push lds les adc mov insb and pop testb divl sbb xor push movsl mov js jnp sbb add imul or sbb sbb mov addb or pop add orb lahf mov fs cmp or sbb nop (bad) mov test cmp je push int3 fsubrs ret mov push stc sete mov add sub iret push sub add or jl or or pop pusha adc add mov add push add mov push aad arpl pop add jnp jno addr16 add stc inc sub imull cmp adc dec add adc push pop sbb add or add lea sub push loopne mov es xor push or dec jg ljmp scas mov daa test test push xor aas mov push mov (bad) outsl arpl xor clc decb popf (bad) (bad) jp adc cmp iret xor mov (bad) jbe fs or inc shrb movsl or pop add push jno dec stos ret mov (bad) push cld je lea sbb stos aam xchg mov gs and daa xor adc mov inc lock jne iret je xchg pusha push pop xchg imul jmp cmpl cmpsb aaa mov sub fdivr inc push and add add pop pop add sub inc scas and push in mov push push aad enter xchg pop rcll push fildll inc cmp dec or jmp or sbb mov push lret mov sub outsl push or fisttp cmp ja inc das pop mov push push push ret jp inc push xor add jmp mov test adc cmp and repz adc or or mov out ret nop iret mov pop in xchg cmp sbb sbb call dec (bad) cmc loopne xchg sahf adc sbb or std jne out jp and push mov jo and out pop lds push jmp push mov push xchg xlat inc mov sbb xor cld jae gs jae ret adc add pop xchg (bad) lret mov rolb inc roll pop ret and cmpsl das and xor pop pop jns adc add dec aas fstpt dec adc add lock mov push mov mov add pushl or test jg je mov cmp test inc test fisttpll test lea gs rcrl or std mov sub jo jbe mov or out push into add adc adc pop push jge mov mov adc mov jg or add jle stos add mov sub mov mov inc pusha add mov decl inc dec adc push lea fs add add xchg jae mov js,pn ret jbe mov mov dec ljmp test lcall loopne hlt push mov movb pop add mov add cmp ja out inc cld pop add out mov fsubs fcomps cwtl add fsts inc push jo and mov pop adc (bad) push push xor and add cmpb movswl or mov arpl ljmp adc adc loopne outsl adc je and aas insb fmuls test faddp orb jmp xchg (bad) mov enter mov lea mov cmp ja dec push pop roll addr16 push and and mov negl fsubr lea xor pop xor inc inc jp dec lock clc lahf mov add je cmpl adcb jl inc andb mov pop and js lea push (bad) push stos enter and inc push bound fs mov or mov push aad add sbb fndisi(8087 add add pop or jbe test cmp adc inc (bad) int3 jmp or sti mov sbb les jno push fs push and add sub pop jae sub test inc out add fnsave cmpsb mov push out inc out mov out sbb push (bad) xor and std shll (bad) jmp mov addl cltd pusha sbb sub mov add rolb shrb jnp jae jbe inc lods jge push iret dec adc push test jne insl sbb add mov sub inc imul in jmp fsubrl jmp mov sub sbb xor mov ficomp inc cmp ljmp inc inc cmpb (bad) mov and scas scas add jb ljmp movl push testl lea inc inc pop sbb add jge clc inc inc inc dec push mov and lahf xor faddp add negb divl and (bad) cmp mov fdivr or inc dec jne mov push push lret inc subl push shll push xlat (bad) pop cmp push jg arpl pop outsb pop pop cld notb clc xor cld movsb dec loopne cli pop test adc (bad) mov inc test sahf aam mov ret inc sub inc push jl add add and jecxz add mov sti rep pusha jbe or es jg xor pop and push add jbe adc push dec add push mov mov add mov pop inc xor jo mov int3 arpl pop mov movsb aam (bad) orl jae jg mov push inc jmp sbb dec xlat cmp (bad) sbb mov add sbb aaa out mov mov mov push sti adc mov mov jmp shll sti xor push mov adc push frstor sahf push adc push push outsl test inc movsl inc jl add imull enter aas pop jg lcall addr16 idivb sub or call mov xchg dec (bad) mov or (bad) pushf je mov or les pop insb mov nop sub or inc aam mov js fistpl les dec sar addr16 arpl (bad) push pop cmpl pop jle jbe cmc adc add adc inc insl dec jne ja inc mov push push mov pop bnd repnz or mov pop jb rorb mov mov or push icebp in add or movnti andl loope rcrl (bad) ficoml test das inc xor mov or adc pop xorb xor imul jo mov push sarb je je repnz pop lds sbb xor ds sub dec es bound mov ds jo inc adc (bad) aad mov xchg and cmp jmp xlat adc or add sub lds xor pop mov pusha mov cmp mov push mov push push adc push sub repnz jmp movsl or ljmp enter jle shrb stos inc popa dec cmp sub sub das lcall push or jge lock sub insl ja aam push jge stos cld ret pop mov aad popa inc push push add fldl stos sbb ds and inc inc dec pop mov pop pop stos lret arpl push mov lds mov inc add imul loopne mov div pop jb lea mov ja test insl pusha imul push insl loope (bad) es ret or and mov jne push insl in push and cmp push cmp or jno add loope mov lea fidivl push inc add mov sbb inc or je dec sbb test or sahf or push push jecxz mov mov inc mov icebp cmp push hlt adc test pop push push mov insb jmp shlb lea out and ret mov push aad jne add push insb mov aam sub xor add mov or add mov inc or mov adc xchg pusha jo lods test lock (bad) in adc pop and aaa stc and or clc mov in adc xchg hlt je or subb jle outsl sbb inc test cmp orl cld mov or loope movl scas mov push jmp (bad) rorb jno pusha and or xlat adc mov lock scas add cmp sub add mov mov fist shrl push shlb mov mov sbb popa mov daa (bad) (bad) fistpl sub push pop push int3 int int3 and int3 push or push xchg mov mov push push push mov pop lea pushl in incl loopne int aad cmp jb lea pop mov inc stos adc jns and pushf lock push insb ret add cmp (bad) or adc pop rolb scas push nop ret sahf adc add popf mov xchg mov inc and or hlt scas dec call push test sbb pmaxsw aas pop jmp mov clc mov movb cwtl ret mov or cwtl adc mov push push adcb xor loope (bad) rclb cmpl nop add jno sbb movsl lods jbe and sbb loope or scas aaa add je mov sub or xor adc fisubr or push rorb jbe sbb cmp data16 inc fldt push sti or mov jmp pop dec int3 pop adc sub ret mov (bad) fidivr popa or sub outsl inc (bad) cmp jne adc mov cmc call sbb mov push add cs ret scas add inc pop shrb push sbb out jge addr16 fcoml add pop inc int adc mov stos mov insb popl pop (bad) jl pop (bad) cmpsl test fiadd xor sub jecxz sbb insl mov je nop sub insb test mov lods js js xchg pop mov push dec js sti into fistpll and cmp je cmp and les es cltd test pop inc mov subl xchg mov adc ss and (bad) cmpsb mov inc cmp jb add xorl jbe mov test pop mov xor adc test jo jno aad add mov or add push sti pusha leave rolb sbb mov xlat push push xor adc push outsl add push or add rclb push sarb add add bsf outsl lahf add mov jge mov or out cmp (bad) stos mov inc inc jno loopne sub push das push add dec fcoms mov xchg inc incl stc jne push stos push pushl outsb pop and and push mov loopne jmp xor sub xor add pop andnps (bad) inc and mov iret dec cwtl push pushl mov push or adc add jo mov movsb cmp pop jne push mov or je sbb xor jp rclb dec cmp add lret cmp fsubrs or or and add jle in push xchg test sbb test stc add sbb inc jno addl xchg pusha or call adc fiadd es pusha idivb or xor daa sub test mov stos (bad) (bad) incl xlat jge imul mov andl lahf and sbb nop cmp jl add add js fs (bad) push or add iret mov dec cmp jae ds in pop (bad) cmp cmp push xchg sysret mov jbe (bad) mov loop pop jae in rcll (bad) lahf clc mov sbb push cmp enter cmp mov mov cmp ja in cmpsb outsb add and and mov push jle sbb (bad) push add test (bad) jbe cmp shrl pop inc xor daa rcll gs inc xchg mov mov scas jmp jno test jmp cli push add add adc ljmp add jne cmp push jmp xor fmuls aaa xchg and das adc add ja sub je push push push cmpsb add (bad) inc loopne adc cmc cmp jne decl lea add (bad) popa jae mov and and (bad) fldl (bad) (bad) dec adc decb push and mov movl inc push notb xor xchg loopne lods mov mov dec mov mov sub push mov mov dec ret push inc dec adc jae adc jl sub dec mov pop fcmovnu les lea cmp je add jno or movb js sub add mov pop mov push cmp push xchg repz jmp sbb add orb mov sti jbe shrb inc inc and vsubsd es cmp xor sbb ror cld (bad) neg es shr xor dec jl pop inc rcr fadds lret std je mov push stos je,pn cmp pop inc mov or mov fdivrl add dec add sbb dec mov cmp dec mov add push push adc leave sub mov out add js clc xchg cmp push mov mov sbb pop loope add adc push jge mov ret sbb les fldl2e inc les out std fadds fidivl sub pop fistpl mov mov pop fcoms inc dec mov push test js jmp orb add add cmp mov jne sti fiadd add sub sbb lds jae pop jp and (bad) shlb imul add push stc push clc fwait pop insl mov (bad) push sar inc push mov push cmpsl cmp adc pop in outsl push (bad) push sub sbb or sbb test sahf xlat push pop adc add inc sub ret jmp xchg push mov push aad sbbb cmpsb (bad) and pop jo jge ss jge inc insb jne add (bad) dec mov js imul popf jnp scas jo mov jb push and adc lahf push loop inc or mov js ret mov jae adc add sbb mov and sbb mov jmp sbb lea das jmp das or push mov or push and add add (bad) push push cmp xor mov or int3 mov adc into pop clc inc aad fcmovbe pop or lea loopne cmp adc inc mov mov jnp adc lea add imul pop add mulb lea jbe testb cmp xchg adc pop xor sar pusha (bad) aas jl adc rcrb push mov insl pop adc add je mov test xchg test sbbb fisttpl or sbb jge sbb clc add out and xor xchg cmp (bad) or inc daa pand icebp stos and lahf mov out pop bound jp subl sti xchg sub stos jl into repz xor adc jbe leave push andb (bad) dec mov push roll and insl faddp add cmc push push mov adcl das inc imul ds jne,pt inc jmp movb clc xor aaa xchg pop daa movl add incl lock mov adc call scas mov sub mov inc bnd push mov jb mov inc lods add mov pop sti push sub sbb ja ret test jge jb scas (bad) je mov inc sbb call push leave cmp mov jb lcall repz push je sbb and aam andps and inc jge or inc mov out in jmp shlb jbe jmp fnop sbb jecxz stc dec jl mov adc sub adc lret mov test jle adc lock (bad) cmc pop cld pusha pop pop pop mov cmp pushf cmp sub pop cmc cwtl or add xor add jle pop push cs jl into push lock test inc cmp js in adc adc (bad) sarb or pop mov cmp in jge fsubrl pop fisttpl sub xor push pop cli pop out adc add add lds mov xor xchg inc add cmp cwtl in pushf movsl sbb ret inc outsl add (bad) jmp (bad) add mov add push push push push sub dec dec cmp sub push push jne push push hlt push adc dec adc push jmp test fwait jge jp mov es (bad) fdivrs and sub inc or push add inc into ss add mov sahf mov cmp or rsqrtps add or mov popf popf mov ja stos data16 sbb add xchg pusha xchg push ja fsub add mov or sbb outsb or add lcall inc mov test pop call jb rclb inc or inc addl (bad) sub (bad) cld sar call imul popa pop lcall stos push adcb int sub push hlt ja push std mov test pop or je cli add cmp add pop and cmp inc mov ljmp inc jo jae mov add shll pop mov mov and jmp lea sbb mov pop cli sub push cmpsb pop add jle imul mov cli add xchg fldl adc xor popl mov sar xchg sub dec pop cmp cltd fiadd into cmp cmp inc adc rclb je xorl subl mov out jg je dec add clc xchg xor loopne mov fnstenv inc sbb dec dec or aad sub or jno jmp or or xor insl jae push pop icebp rorl add sub adc mov fidiv inc inc mov jae cmpb test xor je sbb pop inc cmpsl or jmp pusha xchg and je mov or inc dec rclb or push lret add mov loopne (bad) insb rcr fist inc aam mov ficompl rol loope add push mov fadds pop or push std cwtl or mov add iret out xchg decb or cmpb inc adc jp test xchg jne push or sub or in and mov pusha xchg xor clc jno adc adc stos push add dec sbb les cmp sub insl or aas cmp mov cld mov dec push ljmp lock jno fdivs and xchg mov inc adc mov fwait jg mov idivb push and dec adc stos xchg mov shrb test clc sarb adc jbe push in jmp sbb sbb jmp incl mov push cs lea or fnop mov popa add xor jge loopne inc mov test std clc or outsl cltd pop mov inc pop rorb jne push push xchg fsubrs sub push dec stc push or adc add sub ja pop test aad mov or orl sub pop out or lock aad out push add sub or addr16 jne mov push add dec mov call sub or xchg push mov inc mov testb mov push js pusha add in or push (bad) or lods xchg paddsb push sub mov push xlat sub pop shr sbb lods nop mov cld xor insl inc les icebp movsb mov adc xor jle shll fstps jge int3 and stc add sub test jbe dec pop pop pop sahf shll gs inc adc xor xabort add nop es cmc xor pop add pushf nop fbstp dec mov add jns xorb sub add xchg dec xchg or pop mov incl adc inc xor add mov mov insl mov mov add int dec dec or cmp jne inc pop adc in imul sbb inc iret mov imul sbb dec cmp xlat mov cmp ss xlat jbe xor or add mov pop mov mov cmp adc pop sbb lea inc (bad) sub push outsl js and pop xor test pushf loop imul testb or or sbb sbb dec dec incb out dec outsl push and insb ja push dec pop or ja ja push fadds add add rorb cwtl icebp mov mov jae jnp dec add mov push cwtl xchg mov push inc clc cmp bswap mov mov sahf adc setns nop dec sbb dec inc mov pop pop les inc sbb scas fisubr cli xor xor (bad) xlat add loope lcall pushf and jge jbe jp into mov orl or push mov mov ftst test cmp adc (bad) cmc push fldt fcoms cmp pop mov flds or fnstenv jmp xchg mov mov lock dec ss xor sbb lock test mov sti and adc sti push adc mov leave dec in add test mov add ljmp fmull mov dec (bad) iret jne movsb jno ret dec pop cmp add out xchg pop mov jmp imul sti push pusha and jne pop push push pop mov leave push je inc xor push dec mov sub icebp adc jle insl loope jo std dec decl jno cmp pop cmp jge iret es mov icebp cmp sarl mov decb jne (bad) int3 hlt int mull or sub mov sub scas and jne sub fwait or mov adc mov bound int3 in xor xor daa cmp or and shrl or popa js out or mov push xor jmp and sahf or stos mov scas inc out or movb imul add inc add xor inc ret mov fimul sbb sbb sub dec cmp add add add cli pushf xchg mov add sub fsts pop std sub movsb jle xor lea xchg dec pop jl js pop lock dec je mov xchg push cld in cmp add gs test cmp add lock or nop push ds shrb push pop xor sub or cmp push sub xor add or (bad) jb adc mov jns add ljmp xchg clc push cld adc mov mov add ja icebp mov (bad) (bad) xor pop subb call add loopne (bad) popa inc pop aaa pop or cmp sub xchg in add testl xlat or loopne sti fsubrs rclb xchg mov and (bad) mov push pushf pop mov test jg adc lods popf pushf pop sub je push popf shrl xchg push in jb jmp inc (bad) adc clc pop testl push add jmp push in sti pusha or mov fild std test shl sti mov sbbl pop fstpl mov or orb adc sub or lods sbb rolb xchg movsb cmp jl dec mov stos (bad) push testl shrb cld dec add and mov or dec cmp pop add cmp daa testl dec or push push fisub and sbb jbe dec adc pop sub dec sbb jge push push push imul jne xor mov (bad) ja xchg pushf add pushf sub add mov pop inc jne insb loopne dec or cmp insb and push in lret addb xor je push add push in add inc sub enter aam test inc fcmovbe adc aaa jbe mov xor push mov sub xor (bad) (bad) or icebp cmpl add (bad) (bad) inc rolb (bad) add js or (bad) (bad) xor dec and sub (bad) or inc adc push cwtl or jbe mov cmp jb or call jb ret sub (bad) jb adc insb and int3 add push mov push push test inc aam xor js cmp mov pusha sub popf add push fsubrs xchg sbb add pop mov pop imul add mov and fs and and ret pop push mov stc ss push jo xchg add or mov ret sbb or cltd pop or jmp and mov mov cmpsb test aam xchg jl xchg std in ljmp or jo inc sub mov mov (bad) stos dec roll or sar addr16 sub adc arpl sahf mov add pusha pushl mov lret ss lock test outsl mov je add je dec je cmp dec push mov mov out out sti jmp mov push mov or icebp mov lcall rorb sbb bts sub adc in xlat or pop and fcompl sti add sbb pop sbbb mov pop fild jbe rol inc fs adc inc (bad) add adc or adc fdivl sub pop push hlt push sub jmp loop jl jmp push and inc pop push fs mov jmp sub (bad) cmc xchg add insb mov enter insl and fs punpcklwd or js mov xor (bad) and push mov adc pop push cli push mov into push je popa add mov pop push or leave gs pop and push add or add (bad) push sarb pop mov mov jmp fisttpll and cmp inc mov fmull in xor add jmp jmp pop adc jne repz push mov push push popf test mov push push push push jo jnp sub inc int xor (bad) inc push in mov xorl adc lods pop std test jnp jbe lea fdivs push push push or lds fisubrl pop lcall mov or jmp fs out mull in inc add adc add pop je mov dec xor and jne sbb adc pop scas add inc or and mov les dec adc gs pushl add sub pop and push pushf aad ljmp rclb call pop jnp ljmp add sbb ret es pop push aad add sub mov add insb pusha (bad) popa cmp lds mov push jge cmp or dec sbb ret popf push cld add push sub xor sub or xor mov add add add inc icebp inc mov popf sbb roll adc push xor or stos add push push and call sub add push in arpl inc adc mov imul push vmaxss sub mulb int3 insl sbb leave pushl mov adc addr16 xchg bound pop adc cld bound lods pop repz mov xchg mov nop xchg fstl pop repz jae les xchg mov push and and adc movl les inc inc or in xor pushl pop or in fs inc adc ss nop inc push sbb pop and inc push sbb xor sbb cmp push sbb or inc pop dec sbb dec push push fs inc push pop pop pusha nop inc push sbb inc push sbb js adc (bad) mov xor mov xchg cwtl pushf inc xchg pop jb movsb test or and sub push xor cmp fcoms shl mov lret mov and mov aam aas jle add fldcw adc rclb nop in sbb sbb pop cs and mov aam xchg stos loopne mov movsl cmp mov inc dec jne je mov mov push fs test adc test mov mov dec add outsl in pop pop add lock bts pop test and sub lret xor outsb mov sbb mov mov pop push in lea adc push outsb inc insb mov pop adc in xchg test or cs mov jmp push cmp sti outsl movsl (bad) or cmpl jne mov mov inc inc (bad) jne push cmpsb push adc or mov adc cmp out (bad) loop in mov jne insl adc push lcall push dec insb sbb add jbe mov clc or lea sub (bad) stc lea cwtl mov add mov add cmp push jnp pop andb xchg xor or or cmpsb dec mov adc inc lods rorb push rolb inc cmpsl mov jno lds das loopne aam mov andb and shll pop mov xchg popf add push arpl sbb lahf dec adc inc or sub repz outsl icebp pop inc fwait jle cmp sbb lret cmp add es pop fdivrl std or clc adc ret out insl mov push es movl dec ss inc jo je in push sub or jg int3 sar adc push and and sbb fistl fiaddl out adc inc add aaa sub cmp mov and mov pop mov push cmpsl dec rolb add sub test ds andl inc sarb xchg xor in adc dec push lsl sbb or (bad) jae adc pop in mov lock push loope sti lds cli or or inc and lret gs sbb jne stos push pop push and rcrb lods adc dec adc or pop imul ljmp push lock leave ja inc mov fsubrs add pop aas or mov (bad) lods pusha fisubrl pop cmp add imul pop xor test mov inc inc es mov adc mulps jge add or fwait data16 mov mov or pop adc push dec add and fmuls jns or les dec or shlb xchg push mov je lret add outsb loopne add xchg add xchg xor jg data16 sahf lock or pop push and or (bad) jp dec cmp jp sub mov hlt fs add adc dec adc mov xor inc movl pop add mov scas jle stc add sbb dec xor push mov lods mov pop outsb or (bad) push gs hlt push push test jne cmp adc and or jg xchg add push push mov jo into and scas pop gs cmp out jnp ret cwtl cmpsl in add fs in loopne fcoml adc loopne push or add sbb shrb insl xlat ret inc push hlt cwtl pop add clc cmpb mov loopne cmp add sbb insl mov call or add fcomps (bad) mov lret sbb cmp or push out push pop cmpl mov je aam cmp rcll test mov pop and inc add xor add push dec cld addl in outsb add adc scas mov dec (bad) pop sbb mov push adc sbb cwtl add rorl stos loopne dec mov lods sub mov inc inc outsl (bad) jbe dec mov push enter dec jl dec pop mull loopne mov or dec mov dec mov mov cmpl fnop mov bound cmp jne fisubl sarb mov icebp push sbb inc jl or aaa pop pop pop dec add test cwtl sti je add xorl movsl test flds mov sub or pop xchg lods insb imul add cld test das add popa push push or scas mov xor jge or outsl mov pop bnd mull or loop lret lods or inc and and jne (bad) fcmovnbe ljmp div das and sti out in mul sub ja jb cmp jbe dec sub sbb push or (bad) fadds add addr16 out adc pop into lcall adc xor and loopne pop mov jb or add pop inc jp or in insb pop les ljmp add or xchg push (bad) sbb adc clc inc mov mov test dec sbb cmp jnp add and ret mov mov rclb adc jle inc pop inc pop and sub mov and dec mov lea mov (bad) ja and add movl inc add add adc addr16 sbb test adc mov or (bad) aaa mov mov and je mov cmp lea adc or jnp sub jne cs sti sub add inc bound xlat stc call sub mov add sub jnp jg movsl incb mov lret sub cmp push ja sbb mov sbb leave cmp mov sbb mov jbe push add pop sub out sbb and xchg test adc pop push adc scas pop mov (bad) (bad) mov jne test mov je sbb ja loop fsubl ret jbe popf jp add and daa jl hlt sub mov and negb (bad) int and xlat mov sub nop adc add popa mov in jmp and fstps sub bound cmp gs push pop lcall pop arpl push adc fldt jns mov mov mov rcl test insb je mov idiv test into cmp jb cmp ja add cmp or lds (bad) cmp xor cli (bad) sti mov mov movb cld rcrl xor aas push sbb (bad) jmp pop repz add push push push mov adc jo outsl iret test lcall fadds (bad) mov sti ret shl push or aam push (bad) divl lret rcll insb cmc stc xor lock xor sbb or lret and jnp add roll mov test jl jne out inc cld (bad) mov add ss out shl cmp sbb dec mov adc xchg sub cmp std cld jmp pushf mov mov xor nop xchg xchg push mov sbb out mov adc nop or jmp sbb shr inc adcb sbbb adc push std cmpsb pop or add shl mov sub push push inc sahf sbb add or sbb fildll arpl pusha addl test pop add mov inc jno ret dec mov fcmovnb mov sub fnop orl das cmp cmp sbb add add push cld xchg in test (bad) xchg sbb sahf clc pop inc clc sbb je dec or mov or jbe orl add ja adc cmp cmp ljmp adc mov test jp lods fdivs push adc pop sbb lcall inc out test (bad) in jne push xor mov mov hlt orl xor jle push inc adc add xchg mov push lret scas addb aam aam test sahf xor push aam dec lcall (bad) xor mov mov add pop sahf adc in mov add jnp arpl ja je sbb inc and (bad) pop sub inc jmp jmp cmc inc (bad) push push adc adc ds jne or imul hlt sbb jne jae jns push adc mov add sub roll add das arpl and xor inc mov gs jmp or add mov sbb pop movsl xchg dec cmp jge cmp jle and decl addr16 fcoms jge pop inc (bad) mov adc mov cmp add jbe nop adcb inc pop mov or bound sub push push scas clc sub inc add mov (bad) pop ret sbb lds xor push xor xor and cmp notb or pop mov js jae sbb icebp pop jmp pop pushf add mov out adc push hlt fiaddl push or cmpsl inc fimull add sbb push incl fldl mov outsl sub mov or sbb and scas lea push daa or push xchg pop mov pop add jge rep cmpsb or pop fiaddl das (bad) jo fcomi add sbb mov mov rolb lock mov push popa xchg incb xor xor mov negb (bad) call test mov adc into inc and inc or mov add test outsl (bad) mov pop arpl lea push push lea pop dec mov pop pop pop mov dec js push sahf mov push sbb or push fnsave push push std dec in sbb mov addl mov cmpsb (bad) xor jmp mov mov or call or xchg sarl jb sbb test add out add into pusha push add xchg or and leave push mov lea orb push sbb inc push je mov push sbb rorl jae testb add psadbw lods repnz fisubl ja add add test add and or push pop loop jnp dec inc arpl cmp shrl andl xchg mov adc or in in (bad) or fadds jge pop call jg mov push adc jnp and mov jne xor or jne fisttpll cmp jecxz pop cs or mov stos and or add (bad) mov pop push jecxz xorb add pop dec shr sbb cld add or xchg jg int3 sub jnp imul or jnp ret add cmp mov fistl pop and insb imul and adc inc add add ret and and xchg (bad) fwait sbb mov mov or pop into mov mov out adc cs adc xchg (bad) pusha add in or das mov lods add push int push sub inc adc idivb es inc (bad) aas add lea push push or clc test sbb jo jle sub mov test mov add pop inc and ret or mov fbstp mov icebp cmpsl or cmp jl decb (bad) fidivr scas pop adc (bad) mov adc jl push xor mov push jl mov dec lds fldenv mov lods fcompl inc int3 add or call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call adc inc add packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret cmpl fstpt jle mov pop rcrb jl mov adc mov adc adc sarb rcl or adc jb repnz inc pop daa push or or mov inc jmp jnp ret mov mov push mov (bad) or add adc (bad) jne push cmovo (bad) pop lods cmp mov into mov or xor and push sub lock adc (bad) call clc or push outsb call jle cmpb je jnp push jb cmp adc outsb dec or sti or cmp les mov (bad) mov je sub and sbb or outsb cmp jmp xor ret ret (bad) out jae scas push mov lcall inc ss jnp sbb sarb je push push call adc or sub inc and je cmp jae inc es jmp adc pop xor pop adc insl pushl cmp jbe or add sti (bad) pop negl adc fcomps sar mov sti mov (bad) cmp ja xchg and in pop enter rolb or add jo mov inc cmp ffreep or movw sti mov (bad) mov xor or mov mov ss das sbb in or mov mov lea mov divl (bad) jge test add jae jae testb sbb push insl ret fldl xor mov fiaddl jl inc push cmp jbe decl test cmp push sahf or xchg cli or sub idivb adc mov add add mov sub nop adc cmpl dec mov loop insb fildll rorl adc sub arpl pushl mov push pop add pop and xor push sub or jg mov jmp mov add lret jl jae fistpl inc rorl fisttpl xchg aad cmp sub push fadds enter nop test shrb int cmp rol outsb aaa mov cmpl xor adc scas mov xor mov dec es mov xor push jbe in jecxz cli or test pop pop repnz push out ficom pop mov lods jo out pop xchg mov sub fisttpll insb (bad) in inc push add leave adc push or mov test push mov adcl lret xchg fcoml push hlt mov insl jmp movb sbb popa neg (bad) nop into mov fmuls out jle sbb fisttpl sbb lea mov lock (bad) xor movsl (bad) js aaa mov sbb adc fidivl adc cmp mov (bad) (bad) idivb shufps adc (bad) out mov inc out push push jbe jmp cmp fmull pusha popa mov xchg loop adc les test pushf popf sbb or outsb add pop ficompl pop or jae test mov ja jbe arpl add xor subl (bad) outsb xlat jne cld inc cmp cmp pop fstl clc pop sub push mov sbbl inc in jne jecxz lea push adc add add add incl and sub push fidivrl fnsave fimul fisttpl cmpsl and (bad) jecxz adc dec jle lea rclb cmp adc sarl cmp pop gs outsb mov inc add inc jl leave inc dec out push js xchg notl outsb xchg adc lret cmp mov cmpl aaa mov mov lret jno add xorl mov mov jmp (bad) (bad) push mov push outsb xor sub ja mov fcomps fsubrs mov out out cmp mov add leave adc mov or push mov jbe jbe sub mov (bad) xor add xchg bound fnstcw adc or push movb mov cmpsl aas test or inc mov jns movsl dec mov repnz iret je movsb and and and jns dec je mov lret bound je mov inc adc xchg je test inc cmpsb or pop mov fwait (bad) push cmp add cli mov and repnz jne (bad) mov or movsb mov add stos ja inc jmp add sbb push movl into cli lods fisubr fnsave std xlat fiadd push clc add sbb inc or jae mov pop lods push fbstp add call les pusha inc mov cmp xor mov mov ss ret outsb (bad) adc les jb adc stos in jge test cld lar mov jge idivb jae cmp je popa inc inc cmp jl lret stos sub xor push cmc pop fistl add adc jae lods add mov fucomp in in sub push push cwtl push xor mov movsb je sub lea push popf int popa in pop fisubl push xlat sarl movb xchg jg mov push cmc xor ja mov loopne and nop das cld pop clc mov add rorl or ja inc sbb mov cmp lea fisttpll cmp notb movsb pop decl cmpb sti or xor add push push add inc std mull sub mov test fist outsl mov pop (bad) mov (bad) or mov lea lea cmp cld jg mov jns adc lea push sub in pop dec add pop pop add adc dec mov push push pop push outsl imul adc outsb xchg bound inc and out inc mov mov hlt pushw pop adcl xor xchg sbb sbb push enter lea xor sbb lods arpl sbb add sbb adc or cwtl xchg addb data16 mov fs popf (bad) or jo icebp mov add push push cmp out mov pop cmp or sub add cmp sbbl mov (bad) pusha andl sti inc ja push adc pop dec enter inc pop popf push inc push lcall daa decl adc xchg inc mov shlb xchg push adc (bad) in or pop mov repz jno and (bad) out cmp cmp adc inc pop mov inc lea adc xchg add mov rclb rclb aaa cli lea pop andl add jge ret lea sbb cmp jl ds test mov cli int3 or dec push data16 clc aad or int3 imul mov mov jg in cld ds push inc lea pop mov (bad) pop ss push and and sbb add outsb pop fnsave aaa jp jne repnz xlat rorb inc pop mov jmp (bad) cmp sbb lret jne add jge xchg addr16 shrl pushl adc pop fiadd adc cs add xor mov call and inc orl or add fmull push cmp mov insl insb add sbb insl je dec xor in add out xchg in xor or sbb jo dec jmp divb sbb or inc adc jb mov ret ja andl inc xor inc pop sbb adc pop (bad) pop push js adcb dec fcmovnbe adc (bad) fstpl mov pop pop jmp cmovo jge rclb sub add jae inc icebp dec push in fistpll push mov mov add push andl fwait add sbb inc jecxz xchg fwait jae insl add mov or ss add loopne std mov jmp xor mov je push daa pop ss jmp jo push cld adc push rcrl add loopne mov inc pop push mov lcall enter out shll push xorl mov or sbb lahf cmp jmp mov jnp mov push adc mov inc xor mov and nop loopne xor push clc and mov repz fstpl mov jmp jmp sbb sbb subl inc lea insb arpl inc dec inc or (bad) mov inc adc cmc jae mov dec cmp mov pop push mov pop and push in add push mov and xchg mov orl cwtl fmull aas mov push or mov xor or adc pop or outsl jae iret rcrl xor inc cmpl lock das sete inc sbb fcmovb dec xor mov cli mov cmpsl push pop data16 adc decb hlt sbb aad mov insb repnz pop mov adc incb mov push repz fs push jle and push mov adc neg xor iret jmp movsb cld adc in ja cmp add sbb insb sti add int mov jl mov cmp push test jo sti jp xchg inc cld lods push or cmpsb stc add inc lock xchg js es or mov sbb cmp push aas jbe push mov adc mov pop push mov pop push push xorb lods imul push push repz lock sbb sbb push push cmp lcall cld adc int rorl aam data16 mov movsl icebp or xchg sarl fcoms jbe aaa scas adc or adc ds or mov out mov roll push or mov adc jmp cmp mov and adc das (bad) push inc das push out sbb push imul mov sbb mov mov cmp ja cmp daa or sub inc dec xor jmp es jge mov cmp xor out jns jbe mov add pop pop movl mov sub fmuls xchg mov ds dec movb add (bad) fwait movsb and push je add jbe adc lahf loopne or xchg add test sti pop xchg cltd loop mov push sarl pushl jbe mov arpl push call lds lds lock (bad) daa call mov test shrb push sbb sti mov hlt pop push adc push sub dec bound dec jbe imul adc fdivs and jnp lret mov xor loopne jae aaa jmp push add ds sbb dec loope ret sahf std jmp inc jnp add and add jne inc push and jle push cmc in nop mov lock loopne je or xlat push xchg add add stos jbe push roll rcll jl imul or inc push bound mov fistpll push jmp push aaa xchg js insb sbb cld cmp outsb leave mov lea pusha push test fdivrs stc jp inc inc inc sub je ss cltd (bad) jae push popa in add shrl xchg call sbb orl and xlat jbe or addl sbb pop add ret ss sbb inc push rcrl push rorb mov icebp xchg cwtl add js xor xor jp mov (bad) push (bad) xor imul or rep cmp outsl ret clc rol adcl and xor pop pop jae stos pop ret data16 pop mov outsl sbb push pop pop adc inc dec adc jle jmp pop mov fadds and test mov inc jmp or jnp or push push insb jmp es daa mov sahf push jl ds (bad) mulb cli push lods ds fidiv pop loope inc (bad) xlat pop pop xor int3 in adc sbb call les ja enter or mov dec mov push (bad) roll or insl shr push rcrb into call push sub test inc es adc lea inc popa scas rorl lock ss sbb fcmovb pop sbb ret sbb push mov push cmp or decl mov in cmc add adc sub (bad) pop (bad) jbe dec icebp inc mov jo int bswap add fs add cmp pop pop je and and aaa pop test sub jle lock orb pop movzbl inc jmp pop inc imul into adc inc cmp test ja unpckhps inc or addl xor mov mov in mov inc lea mov add andl outsl xchg add add cmp sbb jmp rcll inc push fnstenv cwtl je inc add cmp incl add dec loopne add push daa pop mov jecxz push cmp adc pop cmp sbb and (bad) arpl add cmpsb dec shll push lea out test mov xchg cmp je cmp je add jne inc ja not rol or inc clc adc xlat mov jle adc and (bad) dec cs jmp inc jecxz mov mov push fdivr add xchg js ret add call ret xor add inc add cmp fstp inc xorl add ret dec push test stc sbb outsb jg loop ss mov add jg js mov ret push lahf push (bad) mov iret and test jne dec cmp jl or pop pop stos push mov jo inc dec mov (bad) out (bad) push (bad) mov mov cmc mov cmp jne cmp jne cmp jb cmp jbe cmp stc out dec pop sahf jbe cmp (bad) jbe cmp clc jbe (bad) mov push cwtl xchg adc lods fisubl into insl mov dec sbb cmpsl push push test adc cmpsl out mov sbb dec int3 fiaddl pop and arpl stos out sub and adc pop inc orb bound hlt and (bad) jbe push pop sarl jne push divb pop test add ja adc push hlt sbb fldl mov jge dec int dec cmp jne add jne inc fucom push ja loopne cmp enter insl fwait loopne pop xor add imul push pop lea (bad) or add pop fwait ljmp test adcb cs adcb push push sbb dec adc in add adc and std mov adc add add in out jge pop js in inc adc adc sub in or sbb rorb push push xor jo orb ficoml push arpl sub setno lods adc mov mov adc je les lret out or mov shll sbb aam mulb lods in pop or cmp sbb adc mov ss lds mov mov scas and push sub nop cmp xor sbb fidivr xor imul aaa sbb insb mov loope mov bound and mov push or mov (bad) jmp ret jl mov sbb adc (bad) push cld (bad) cmp mov sbb xor fsubrs (bad) or xor xor cvtpi2ps jmp insl lahf sub jp mov dec insl mov in (bad) jge sub xchg xchg adc popf fstps pop mov (bad) sbb xor xchg outsb ljmp (bad) leave jle incb (bad) cmp cmp push cltd pop idiv mov add lcall push es lea test fsubl and mov push sub jge pop adc cmp jl mov shr sbb mov rorl xor sub imul and mov add leave adc mov jnp add mov inc dec js add mov jg or nop adc or js xchg xchg and mov lcall stos inc dec ds xchg xchg add test clc adc pop mov sbb sbb and xchg cmc mov sbb adc fadds add popf jmp insl push sub cwtl das mov mov mov sbb movsl aas add mov (bad) mov sub in mov or and (bad) sbb loop add sahf dec popa rcr push pushl call pop xchg mov in aam xchg dec xor xor cmp xlat pusha cs push pop lahf mov push cli mov or push cwtl lods rcrl test xchg add inc add cmp scas or pop and pusha mov cwtl add dec add leave cmp fld add lret mov sub sbb sbb sbb arpl mov ret stos in push pop out push rol and dec push cltd call jbe gs (bad) pop aam cmp fs cmp leave shrb add out imul int add sub sti and (bad) fisubrl lea enter push mov xchg push xlat jge mov fimull cmpb or add fnstcw inc add mov mov shr mov ljmp inc ljmp mov xor imul jle add test test mov or fmull xlat pop cld sbbb mov popf add adc push or test insb jne jmp adc or (bad) push adcl sbb fsubl add mov je dec je add dec ljmp mov inc cltd jmp or (bad) scas adc imul ss or push push push fs mov clc scas test inc add aaa push push outsl mov cmp push daa or push pop adc inc pop cmp sbb in adc test sbb inc sti neg sbb and lret and sub mov push mov sti pop fildl fildl aaa repz jne add roll push jl mov pushf adc push add pushf out jp mov negb inc sub push fwait sub ss sub sbb stc jne push and cltd les xadd mov push dec add mov insb sbb mov push je (bad) jle shll inc sub mov inc (bad) inc pushl xor jne and xchg pop push adc pop cmc push lret ret and jle test aam adc mov ja jmp movsl clc dec les mov jb or or test mov clc std je cmp jb push cmp inc mov ds leave pusha in and push sarb or sub xor mov mov lds inc fcoml push mov adc sub add adc pop pop xchg adc jl js push pop adcb mov pop add adc dec push je mov hlt fs movsb in insl xor les jle loopne lea push dec cmp loopne cmp mov dec add arpl pop xchg bound xchg mov scas sub mov or adc or stc mov jne xor sbb insl stc add dec adc ljmp adc inc jl and das mov mov and out shrl bound call xchg pusha add ret and inc push mov inc test aad cmc push mov inc in fs add sbb adc push sbb mov cmp fidivl inc negl cmp or mov ja rorb movb add fsubrl orl shlb jmp push and push adc test and dec cmp lods cmp push sbb fmul setnp dec fisubr dec loopne stos inc add mov sub incl fwait lds lret jb inc or sbb or call ja mov test adc jbe sub sbb sub cmpsl adc iret int3 sbb xor and incl adc nop pop adc loop punpckhbw mov fcmove or repz adc (bad) fcomps mov xor leave push js int sbbl rorb sbb adc fnsave (bad) adc mov add lods mov scas push (bad) out dec adc mov or sbb lret inc out push push pusha in in push repnz mov gs fsubp lods push or sbb lret mov in inc fildl xor (bad) in sarl ret fldl mov std movb add roll test sub adcl test cld jbe fwait add push add push push mov (bad) mov cmp cli add push aad out jae icebp fiadd mov push aas sbb cmp pop push or fidivl or pop jmp mov cs sub or (bad) in mov mov jb and mov pop mov loope addb adc mov orb push push sub dec cmp fstpt lahf shrb inc lock mov ud2 pop mov or popaw divb pop push mov or or sub cli pop ja jge and jmp or and and popa or and and es loop mov pop imul pop test loope cmp xchg cld sub ja adc mov jbe aaa rorb lods in or pop rorb pop cmp add lea rcll and add insl mulb inc shll pop rolb mov rcl aam aad adc les fsubrl arpl addb push sbb sarb fiadd add cmp or add test push add or push push leave sub mov push add sbb ret pop ja adc jge dec mov shl sbb ds orl inc pop mov mov adc xor pop xchg inc inc rcl mov mov add cld cmp inc sahf mov inc movsl les or test arpl cmp xchg mov adc (bad) mov fiadd jbe mov fldt jbe cmp and jne popf sbb fisttpll es mov movsb ret mov pushf or mull into push push data16 cmp xor push mov aas add aam (bad) mov mov adc push ja push ds shll xchg and lea mov mov pop bound popa movl in adc in les (bad) les sahf popf ret inc enter or pop sub and addl fildl pop jno mov mov lods add and lcall cmc (bad) icebp or sub add xor dec mov andb push or aaa popf aas push lock xor std sbb movb and inc pop pop push push sbb pop imul out pushl aam lcall cmp sbb fsubl adc add int3 adc push mov gs inc pop loopne and fmull dec and fist outsl rorl cmp push inc mov adc cmpsb test push push (bad) and lsl popa sar inc shl xlat or out mov add enter push mov sbb pop jo push jne add jmp sbb mov nop cwtl pop inc and test push lcall mov add pop test sbb or je test cmp adc ret inc push push pop cmp dec dec sahf push addr16 daa add adc aad fcomps push mov inc adc push mov add outsb jae adc fsubr pop sub cmp je cmp je sbb daa pop push push mov push sarb push ss repnz xor jle adc and pop test leave lock push aaa cli add outsb adc adc call add inc mov sub ret push inc clc rcr adc fistpll sbbl jbe cmp and push rcll mulb push sbb jge pop jo jne mov inc add xchg cs sub mov std outsl shrl or dec or inc push nop cli lods stos gs pop dec push adc or or xor fwait push mov mov adc cs cmpsb sbb sbb jo xor jmp adc push push or test xor repnz ret lea dec and mov (bad) cs fwait les mov push stos dec xor or sbb (bad) xor pop fldl xlat inc popf stc inc imul aas fstps cltd mov fadds mov jbe icebp (bad) push sbbb ret (bad) iret rorb and xor popa in (bad) jne add add cmp ja sub sub aaa cli pop sub adc xchg and sbb icebp sbb cltd sub mov clc push pop mov std fisttpl add rolb shl mov or popa mov hlt call push clc insl mov je jecxz outsb jl clc lea adc inc jg inc add jbe dec or push repz jne push adc mov and jmp cmp mov stos js clc mov pop mov cmp push sub add cmp jl cmp (bad) call mov scas mov cmpsb mov aas test jg xchg mov jnp jmp xchg jne jg cmp mov jg addl lock inc cltd bound jnp mov push rcl and add stos mov int3 or mov jne mov push push add push and adc or add inc mov movsl add out in (bad) clc pop ja movzbl and mov (bad) cmp xor or stos mov push jmp adc lcall xchg rorb fadds add add or add lar add add mov adc add sub add mov push push sub lcall aad incl (bad) aaa or adc push fmull push mov (bad) mov enter cmp mov jl mov and leave add in icebp adcb adc loop mov push out ljmp push pushf ss dec call fisttpll cmp cmp sub cmp stc or push adc mov sbb or jmp cmp inc (bad) lcall fstl insl sbb push loopne rolb call aam lcall mov icebp mov jo fwait lea inc push out sti rep and enter push insl int3 lret push in lea jbe sar sub inc push inc push adc call sbbb bound fmuls or add push mov aas jl dec push lods subl add fxch cld inc repz mov pop movb inc xchg mov adc std fstpt ss pusha mov std shlb jle sbb fldcw aas loope cmp adc mov jne push call adc js rclb or sarb out pop mov repz ret pop out or pop or inc sub or xor jge inc aad ljmp outsl out sub jae cmp pop jne xchg fs jecxz and sti and or arpl lret cmpb sub movb jae stos jnp mov push test js mov les or mov iret mov into (bad) push add pusha je cmc or xlat (bad) xor mull cmc sbb add dec fdivs out sub jmp mov pop cmp pop xorl dec mov mov mov push xor sub and xor orl or ret mov mov and mov insl icebp push test jp mov push (bad) es mov mov mov and xchg stos pop xor mov ret aam or and sbb je (bad) rclb insb movsl fildl push add das pop sbb mov sub cmp fcmovnu lea push mov sbb add dec xchg insb and lahf cmp or jbe lods cmp ret sub jecxz lock lret cmpsb inc (bad) (bad) outsl jge ja jb cmp jae xchg or fwait cmp sbb xchg (bad) mulb mov xor ret in push iret jb sbb add adc adc and aaa or cmpsb cmp jbe add je pop pop inc pop lea and lods push xchg sub out mov add add mov sbb dec cmp repnz andl or cmp cld incb dec jmp mov rcrl or xor lds movsb (bad) add pop push mov jmp add jbe lahf push jne xor sub sub or or je push leave jne (bad) dec mov cltd xchg xlat cmpb insb icebp xchg mov nop mov lea sbb pop jmp lods cmp jmp push sbb ds mov mov mov or dec je daa in push insl mov mov adc inc pushf je inc and call dec movlps dec lods orb mov xchg sbb in sbb mov adc cmp rcll jmp loopne push push push xchg xchg hlt dec js sbb jb xchg push mov daa push insl hlt mov mov out add fidiv xor (bad) jnp add pop adc ss push fwait xlat xchg jmp mov pusha dec movsb and xor shrb push scas adc push add inc push loope pop mov negb out mov aad int3 ret stc stc cmp xor sbb sbb and pop jnp adcl sub pop subl sbb cmp stos xchg inc insb test call add inc outsb or sbb rorb jo push push cmpsl call clc imul out inc cmp lock jne jo sbb (bad) aaa hlt push mov jge jge jbe push stos mov inc in call test dec mov inc jno lods in insb push and fstpt dec push (bad) mov push paddw and hlt cmp test xchg jb pop or mov faddl pop (bad) pop ret sbb add push lock pop in or (bad) mov cmp aam in push imul mov xlat or fcoml idiv push jmp jae cmpsl push outsl pop and movsb mov mov mov jl sbb lea fcoms xor inc xorb pop ret mov adc add jae xor and jbe mov cld pop push push cmpsl stc stos ret mov xor lods sti xor inc lds nop test mov jno movsb call xlat inc stos stos mulb or dec loop cmp inc ss pop push push push mov pop cmp icebp ss and or mov adc xchg adc jg push and xchg mov fcoms cmp es divl sbb pop pop pop jae (bad) arpl jmp jno and hlt outsb push mov stos add pop xor jp mov inc daa rcrl ds cwtl fisubr or gs arpl sbb pop test xchg inc cmpsb (bad) (bad) pop push add adc jo outsl xor sbb pop add add in ds insl int sahf fs mov (bad) (bad) fild (bad) stos push cwtl dec ret inc or add sub adc (bad) fidiv push imul push repnz cmp je movsl add inc fiadd pusha jecxz sub pop cmpsl cmpsl or push push pop push xchg stos aam out in add stos into xor cmp stc or scas ret cmp pusha loopne shll inc sub push cmpl cmpsb push scas mov or or mov push mov mov push pcmpgtb loopne lock mov add sbb xchg add xchg lods (bad) (bad) xchg sti mov and or xlat fwait add and cmp pop jmp xchg add (bad) mov repnz xchg aam cmp scas mov mov sti ret mov ds inc cmp xchg push sti and mov pushf sbb mov test sbb (bad) ret cs push xor or call ljmp in mov ss dec jle adc push out add mov mov add mov mov or scas and or insb push inc xchg je mov mov adc fistp or std push add pop jmp rcll add call sub adc sub push push rorb es inc je push ss popf mov sti pop xchg and cltd push pop idiv lret xor add add mov sbb xor loopne adc call testb pushl out jp or test (bad) adc push pop adc sub mov je jb mov adc mov and inc inc push insb lcall dec push je and out dec fs xchg std mov push lock inc adc lea mov ljmp and and cmp mov imul or sub push test shrb sbb in mov inc dec inc push push pop mov clc sbb jno inc and fildll push jmp inc mov cmp je cmp inc push jnp ja iret jmp and mov push jecxz jo sub roll movb inc (bad) pop insb mov pop insb adc fbld sbb add or dec pop popa popa clc ja and loopne or pop adc adc ret clc push push push mov pop mov lea sbb fisttpl push add push or clc add sti je addb cmp pushf add pop jbe nop add dec sbb push lcall add add inc mov outsl xchg jne mov pop pop or push lea pop (bad) push in dec adc or scas mov fnop dec inc push mov mov add aad jg add inc add sbb add sub cmpsb push addr16 mov push adc testb mov mov pop jmp sub inc movsw sti xor aad inc add movb or arpl rcrl inc add xchg xchg popa pop xor adc and (bad) jne add add jle lock repz inc cmp dec pop jne dec sbb lret or push adc test mov sbb push inc dec hlt dec xor add xor pop push sbb push inc jne sub mov test jnp add aaa push insb inc fcoms push mov push add nop push add pop sbb sbb and cmp arpl pop fbld sub mov cmp and je pop xchg stos lret dec jbe test add sub ret mov pop sub mov std add sbb pop movb add xchg inc jb or daa loopne jg lea mov sub add dec rol aad jb adc cmpsb (bad) xchg inc push fdivrs jne cmp shrb mov add in jnp push xchg testb (bad) fwait mov add add aam or popa loopne jne pop and mov das xor dec xor jnp add inc test aas adc ja adc push lds data16 adc add je cmp leave and adc inc jo sbb mov gs rcl cs cmc add loopne xor mov push btr xor inc es les add nop pop lods add xchg lock add xlat nop lods cmp mov and cs lea add xchg and mov cvtps2pd sub sbb stos sub scas adc inc lock adc fldpi add je hlt jo es ret adc loopne sbb (bad) out ss and je push and jge xor (bad) xor sbb jne push (bad) fcoms popa popf shll je lock pop dec jmp mov push sub or inc mov scas imul and and sbb les sub xor push or jne sbb sbb or mov sub insl cmp or add push mov mov icebp push sarb inc dec jns dec cmp xlat add sub je ret pop call or xchg mov push xchg adc sbb les nop leave loopne cmp jmp inc in xor mov lret dec fadd dec es cmp mov outsb inc and push push lods inc (bad) sbb xchg push push mov push fdivs pop fnsave stos out mov jmp mov je inc add pop insb adc adc adc inc xor or mov xchg jne mov lret and pop fwait test bound jno and add xchg rolb sub add test sbb loop addr16 rcrb or stos lods sbb movsb sti fidivl dec mov ret adc sbb and and lods and mov add in pop lods loop test dec add pop aas lods mov sbb fcomps push lods lret insl dec aaa flds jne push cs or adc inc mov lds add xor push sub dec cmp push or mov pop inc cmp dec je adc jns lock orl cs dec dec inc clc insl adcl add mov xor je push sub test cmp add ret dec (bad) dec ss lods add add adc inc xor pop jae sbb or rolb mov sub add adc ror mov aaa mov iret shlb adc ss push or adc ds scas mov cmpl pop cmp fcompl dec add push js testb fwait pop push ds insl or inc xor push outsb or lds je push jno stos jg std push pop adc pop pop cmp cmp sub push pop fcoml jnp dec push xchg dec jle hlt (bad) jne adc and popa mov fwait clc and pop mov and cwtl je int mov aam cwtl pop jbe jmp test sub dec pop mov dec jg sub adcb fwait data16 xor sbb enter fnstsw inc (bad) cmp cmp cmc lock in mov ret test das rcll push jg add lret sub rcrl movsl dec dec das inc and andl jae test (bad) call sbb push xor inc or push pop mov rolb pop popa add or pop pop mov nop add lods std mov pop ljmp sbb push add or ds push cmp ljmp sub mov loopne (bad) lea cmp inc xor into xchg pop mov jnp pop in mov xchg test test and cmpsb sbb je sub test movsl int stos jmp add add jl or mov jbe daa faddl sub lret cmc out mov cmp fldenv and test sbb mov jne das push sahf inc sbb mov xchg movsl pop je dec push jns dec sbb es sbb bswap add fisubl dec pop es push pop sbb movsb and aaa mov dec cmp lds xor push cli test mov sahf fsubl sbb and cltd xchg and cli push cmp adc cs nop and adc xchg xchg movups and xchg daa cltd sbb jne inc mov inc and js fstpt inc add leave xchg rorb adc pop cmp lret jnp jle rolb cmp or out pop lock and mov add adcb inc cmp add and pusha movsb pop sub mov sbb sar jmp mov cmp pop sbb push fs push add cld sbb orl pop add punpcklbw inc or (bad) mov mov add xorb (bad) pop (bad) jp push rcl xchg test std lret sub mov pop mov sbb mov xchg add cmp push add inc mov inc addr16 lds (bad) xorps in ret ljmp inc pop lods push popa or cmp movsb movsb icebp cmp or xor sub and rcrb inc daa dec fwait mov inc adc mov adc ja aad addb add popa mov and js inc aas push cmpsl mov lcall cmp xor enter push test cmp push cmp xchg sbb test and add inc or into cmp mov stos in sahf sub outsb cmp add (bad) mov sti cmp or call or and jo js cmp push dec add sti push mov cmp jb push das aas nop fldt rcrb pop add add xchg pushf insb mov or icebp jp sbb xor adc (bad) adc push or fnsave rolb lock movsb lea xor xchg cld mov pop rorl test jne movsb ljmp adc xchg push pop or call shrb cmp sti inc sbb dec mov sbb push adc mov mov mov or scas fwait aad or pop inc add cltd mov push jnp jl add mov mov dec add dec dec adc push add pop decl jg inc pop push inc adc sbb (bad) lea dec adc (bad) add sub daa sbb or mov imul out and cmovae dec add cmp add (bad) or xchg push cmp nop mov and rorb sub sti rorb inc cmp sub movsb cmp shr pop ficomp pop adc push pop jns add ljmp jmp sub push mov sbb or repnz popl adc push jnp or call sub and adc adc pop xchg insb fimull xor or icebp and movzbl sub mov test and mov sbb adc mov pop or sbb sbb adc shl jp dec pop jp mov outsb rclb adc lods mov add cmp int add add je cmp pop xor sbb adc cmp scas pushf dec and inc pushf mov jle mov les aad ds in and inc sub (bad) push xchg in ds movl mov jmp xor cmp xchg pushl add lahf out xchg insl xor mov xorl sti enter outsb add pop pop shlb adc jne push sarl lock shll or out cmp mov (bad) mov or loope adc aas das jo push loopne pop je mov lcall push pop jp fdivrs jmp inc inc jp fistl jo inc lldt adc cmpsb aam icebp or push add push push fisubrl dec divl je test mov repnz cmp mov mov fidiv lcall pushl into cmp jle push lds mov pop mov adc fnop aad cwtl test int3 or outsb (bad) jno hlt adc push cmp push adc mov mov adc int mov pop mov das inc push mov add mov pop mov cmpsl pop mov add pop fwait push lcall mov mov aad jle aas cmp pop add fisttpll sbbl adc repnz adc lock inc incb test movsb out push pop mov in xchg notb data16 jmp (bad) dec mov pop nop mov mov stos or xor fadds add push sub xchg in push and out jge sbb lds or or dec add add call mov jge lock cmp fwait inc push or push mov mov push sbb mov ss lock adc mov adc or ss ljmp (bad) movsl (bad) mov add add test iret cmp adc and ret test rol (bad) loope inc addr16 mov xchg mov mov popa inc jecxz mov inc fildl cli cmpsb bound cmp xor sbb inc and add push sti push xchg add jo fsts cmovbe cmp xor pop mov imul mov pop cltd idiv push imul cmp jg mov shrl into inc or (bad) outsl and fisubr xor add fwait ljmp test push inc les xchg adc out cmp push out and fs adc jo fsubrl ss push xor or (bad) call rorb add in add lret push and cmc and orb cmp test or sbb push and daa ret or sub jbe lret push mov ja icebp and push push add dec je lock mov jl mov mov shr movsb ljmp movsl cmp loop test dec fwait je lock mov mov gs ss fmuls mov jg push sbb fmuls push sbb cmp faddl add jmp or push inc xor mov js mov sub mov push pop andb pop or or add adc pop mov faddl add pop cmp jne loope add pop cmp pop lock add jne jne ss cld stc jne adc fwait jae xor sbb and push xor out mov adc adc subb or fwait add jne pop ja pop pop pop push jl call divl or sub sub lock or add sbb jp cwtl loope mov lods test or jnp jae out xchg lea adc lea popa mov inc les aad (bad) inc fucomip mov and (bad) jmp lea sbb push (bad) mov test les or sbb pushf add xor add loopne mov pusha push sub mov push push dec sbbb jne cs pop sub imull mov cwtl aad sbb mov bound sub pop ret push aad push lods cmp xor inc pop xchg mov xor dec or xchg jmp outsl cmp mov imul loopne mov xor loopne inc xor pop jnp mov or dec sbb and in xchg cli mov jb call js push pop imul jae fistpl and push jne cwtl inc add or jno sub dec add imul pop pop push xor rorb hlt aaa jo je sub push (bad) xor jbe mov adc push dec mov gs cld adc inc idivb nop lds add rolb and imul js ljmp add jo or mov (bad) mov sub push mov clc mov lock push add bound inc movb lods push adc jbe repz or adc or fcoms or rorb dec mov sbb push nop leave xchg insb (bad) leave add add pop adc sbb sbb xor add adc push add sbb and adc push or and psrlw push adc xor arpl mov add cwtl lea nop mov mov subb rolb sub fwait incl and aas inc inc dec shrl sub mov ficomp add add ret mov stos mov and mov push jae add and incb mov lea lahf fwait xor pop inc add push add fs cld sbb psubw push sbb sbb and push add inc je jle or push push push inc mov mov aaa popa push xchg sbb mov cmp inc xlat test add lahf loopne bound push roll add (bad) pop add add add pushf lret hlt and mov xchg inc add test lods dec rolb pusha or insl cmp add mov sbb and jge cmpsb imul push mov push into inc les dec inc mov and jl pop addr16 cwtl loopne rolb pop arpl loopne lret js mov mov daa sbb push push push pushf ljmp je pop js out adc cmp xor pop daa adc push daa test test add test mov rcll push lahf push and pop inc scas (bad) aas jbe lea negl clc or mov icebp popa sub incl dec arpl add jb test pop add dec inc pushf and cmp sbb pusha mov cmp add push test and sub clc sbb mov inc fcomi push pop xorl xchg add icebp js jg dec inc inc roll and cwtl pop xor push popa xchg add lock dec and add sbb cwtl std sarb add aaa adc pop jne orb cmp sbb xor jbe push pop and mov push inc daa out adc mov call popf jo hlt out (bad) and test cmp add inc in xor inc push add call mov jle cmp popa push and cmp push mov adc push es sub pop xor sub xor xchg push add or and popa or and and sub mov adc addr16 adc adc insb ja adc adc sub test mov arpl push xchg xor push dec pusha mov add cs or lock xor cmp mov or push in pop inc jg adc adc pop outsl mov or add xor adc dec add mov or adc neg shrl imul out decl (bad) pop cmp add mov jns or adc adc adc cs out add push decl rorl jo inc xorl or and dec mov pop rcrl inc push mov lahf cmp jmp ss ja push aas jo notl pushf loopne pop push fistl add mov out push ds mov test cmp jno mov insb pusha out lret dec adc xchg sbb cmp fnstsw cmp push pop or mov xor andb testl shll cs adc fs and pushf adc pop pusha aad jne sbb pop mov pop mov add aam cmp dec xchg xchg push aaa inc mov mov std pop inc mov divb sub pop jne cmovo mov movb ret sbb cmp loopne cmp je dec and and dec or cmp test push ss mov cmp mov mov ret push nop cmp adc jnp addr16 mov dec sbb (bad) adc adc sub add jno sbbb jne (bad) add lock enter pop mov (bad) adc dec pop xor xchg rcll cmpsl sbb add mov add arpl popf add or mov pushf inc push pop (bad) flds out into xor push cmc cmp add (bad) sub sub (bad) mov or push inc jo sub dec push cld dec mov xchg loop sbb jb fildll outsb adc pop sbb push push mov fidiv inc mov mov push inc aad xchg imul inc xchg add es lds pop inc and (bad) mov cmp push icebp nop dec mov in or dec cmc add dec call je pop mov push add fnstcw inc cmp lcall fimull or pop (bad) fstp xor movsbw loope mov negl cmp test push sarb dec int3 sub sub mov sub lods hlt sub test jbe in insl outsl fcomip xor add (bad) (bad) mov and loopne fistpl adc pop in sbb push negl fcoml rclb hlt jo xor mov adc lock jo lock add test loopne das add fmuls xor jmpw (bad) divb inc cmp cmpl je add or scas ljmp insl dec add adc mov mov dec pushl add xchg dec in mov outsl and mov gs aam sub je inc cmp ja or ret jbe add push inc push inc cmp in test cmp xor arpl in js inc ja mov inc pop in cmp jb mov mov mov push aad ss xor push dec pusha sbb xor sbb test lahf in inc push adc fcoms in (bad) mov shlb pop subb xlat sbb push cwtl and mov adc jl sub fstl cmp and lahf mov movsl add and sbb mov and dec add loope test adc call fstp (bad) mov nop movsl add mov mov (bad) and xchg ret mov and pop movsb xchg jo nop leave or bound (bad) test add into fsubl xor mov pop jne pusha push cmp mov inc mov push ja sub add jp or stos test lods movl fs (bad) leave insl out popf push add sub (bad) je xchg mov loope negb arpl mov add sbb inc mov insb leave mov das sbb popa cmpsb mov mov cmp cmp (bad) lock lea push mov fwait add nop cmp mov push mov cmp jno jecxz xor push mov xlat inc sbbl mov adc pop loopne das inc inc xchg in fmul cmp mov pusha cmp inc add inc scas fsubs enter imul stos mov and push (bad) mov std das dec ljmp push call or cld pusha imul shr cmp jne jbe fistl je xor xchg rcl cmp jb push std in jmp add xor inc ficompl jbe push pusha add pop clc jo pop inc aad call clc popa push or and xor mov dec fmul es js sub adc cmp fs popa and inc out lea pop inc gs and pop jp test lock loopne scas and loope adc (bad) jb sub pop sbb bound std cmp into repz ret add inc and and xor push push sbb enter bound sbb inc xor push inc inc cs inc inc add mov in jle or xchg pushl cltd xorl xor mov sub inc or sti dec push or sbb cmp inc or push mov and sub push mov adc (bad) jo and ror push xchg and mov inc add sbb dec xor cwtl rcrb sbb mov test cld pop pop dec push and sbb test and fdivr rcr sub jle jo dec rcr pushl jne inc in in faddl add add clc push mov (bad) sti xor aaa add popa pusha shlb jae cmp dec call test and inc push pop inc cmpsb add inc xchg lock add enter jb adc loop adc push aas mov sbb mov notl sbbl adc shr cmp fdivrs mov lea mov sbb jo mov outsb xor int arpl fdivrs fs inc mulb or xchg adc inc stos ss rorl fsubr divl ret in mov push xor xor cmp rep mov sub clc sbb inc fs push je xor clc jl add push or sbb push dec xor inc cmp add or es sub inc add loope pop sub mov lahf sub cltd add xchg add add cltd xchg mov (bad) inc outsl adc add add adc or pop mov adc pop cmpsl sbb dec mov mov adc (bad) sbb sub (bad) out mov push or cld dec mov xor xor movsl push jne ds add rorb push (bad) loopne push jp mov les arpl jnp adc xchg jl es cmp out pop jle sub add incl cmp divl loopne jae repz dec fs das and xchg mov xchg add add test popa inc sar inc inc inc stos mov add daa ret rcrb adc sarl dec nop inc dec je mov adc inc aaa and jl and idivl jb inc shr fwait dec and add cmp sbb push lock sbb loop jl out icebp dec loop test jbe adc out pop jl hlt cmc rorl adc or sbb mov push leave clc adc jne movsl ret insl adc negl jl insl aam sbb and shlb jne adc mov mov (bad) xchg cmp mov ds and jge sbb push jmp (bad) daa clc pusha std dec je jmp sub out lock call jg icebp cmp add xor (bad) xchg cmp sarb and xor jns push fwait lock mov out cmp sbb lea lods cmp lcall xor fildl pop jns adc test dec jmp mov sub mov adc add mov cmp (bad) outsl xor cmp inc add inc pusha pop cwtl mov mov dec in cltd inc or push jmp mov gs lret xor add lds les enter sbb (bad) enter sbb out shl scas scas pushl sbb pop ds xchg xor lea inc aas adc cwtl jo add xor loope (bad) sbb (bad) cld xchg imul pop sub dec mov or pop andl andb mov cld aaa and jmp cmp leave adc les lds inc xor sub sub pusha jp sub mov fdiv jo add testb pop add cmp dec cs add sub sub sbb or jae add sbb inc (bad) mov (bad) js push dec inc dec je jno cmp jl jmp stos mov outsb inc push out xlat add add rorb jb add orl pop adc inc mov mov mov sbb mov add push add push push testl (bad) fstp mov outsb cmp imul sub sub jl jmp or mulb shr or rcrb sub or mov xor cli and push sub jbe adc insl and test push lods ljmp xlat sbb stos cmp inc and push or cmp fwait push sub and push jle (bad) fildl das sbb cwtl ja call add daa jl pop (bad) or out sbb loop test adc insb push repz aaa cwtl mov mov ljmp add or mov and push dec push adc stos pop popa mov and and sbb outsb les mov add adc push fdivrs fcomps frstor push loopne sahf and lods cmp inc mov rorl and push movsb pop sub pop data16 rolb adc push dec inc pop mov jge inc add call in pop dec rcll sbbl std out or leave push nop mov add sbb mov adc pop mov arpl cmp arpl sbb cmpl inc mov pusha and test loopne or fldenv dec push sahf inc inc mov push xor int3 push or mov sti mov jmp mov leave jo pushf cmp pop lods cmp sub add push or imul add add out clc jge call inc dec jns and and data16 cmp push push lret es outsb pop inc sbb mov xor rolb insb xor test fcomp pop shll adc ss pop test jg mov loopne,pt scas sub clc jne xchg and dec push add outsl (bad) pminsw xor sub push loope inc rolb xor mov sub add or arpl pop adc and mov cmc xlat iret sub ljmp pusha sbb cmpsb cmp add lea leave incb add xchg cltd push pop sarb lods pusha push repnz rcll mov sbb leave int3 lea sub (bad) das pop mov mov stos in mov outsb (bad) ja leave inc enter js push sub or ret enter lods ret adc hlt out nop repnz in dec inc add mov adc push (bad) mov and mov aad and xchg div add add pushf fs add add push or out lcall push inc push push adc or stos xor ds push mov outsb push or add sbb or push (bad) xchg int3 add add add add add int3 push jo add and pop ss adc and fldcw aam push pop inc enter std push push pop inc mov jnp (bad) push dec mov cmp add mov push ss sti hlt mov stos adc je add mov cmp or add dec pusha je mov add and das add push js add ret jg out push sbbl outsl add and adc adc adc insb ret adc shlb stos lea (bad) aaa fiaddl ja cmp je icebp cmp add cmp add push je xchg popf int cmc jmp in xor xchg sub (bad) (bad) aaa stos sbb mov cltd push movb ljmp dec lcall add inc mov push cmp add loopne and mov add jne cld adc lock dec mov xchg sti repnz pushf cmp (bad) and add sbb pusha bound fldenv je pop je nop cmp mov dec enter adc (bad) je push cmp aas push sbb mov add or inc inc or push std or cltd mov adc xor mov or mov jle sbb inc push mov addr16 sub mov nop pop aam hlt pop fdivs cs mov xor push adc pop mov (bad) jmp cmpl jne push jmp push add insl adc jg ljmp adc pop xlat push or or ja ret (bad) xchg jl or jno xor xor and test pop add xchg lcall pop inc lds sbb or push xchg lock std (bad) push mov mov and jmp mov sub sbb arpl or cmp fldenv js rclb push sub jmp mov push fisttp fwait shll push inc push in fldz push jmp cmp fsts nop add test rorb cwtl pushl push inc or pop adc push mov jmp push xor aad mov outsl xor or out pop les (bad) or sub (bad) adc out mov mov cs fnstsw enter fdivrl or lock enter cmp call push mov adc das adc inc push imul fsubs in push and jecxz xchg fcoms out adc sub dec sub popf popf dec popf test test or test rorl push (bad) adc add shr out or mov mov mov and push clc adc sub stc inc test mov cld add adc pop bound mov pop aam inc mov sarl sbb loopne addr16 mov push or mov and or scas xchg adc je mov (bad) pop in add iret pop nop clc or leave cmp lahf in jnp notl push push push fdivl es fiaddl ja data16 mov test jl enter push xor loopne test pop jmp int and add (bad) xor scas push int and add sub cmp or outsl push mov stos pop and sbb ja jo iret je fisubrl (bad) push adc adc ret mov test mov mov dec insb out mov ret sbb cwtl cmp notb mov nop add fwait mov lahf rclb sbb cmp adc add in add pop cmp push push ss lods test add cwtl stos in lods dec adc fistl scas dec lods dec lods push and insb fdivs and nop add or cmp je mov cmp (bad) je lods push adc push push (bad) pushl push neg sbb push and mov inc sbb adc push pop xchg loope jl xchg in ret nop add je inc add and aam dec fbstp jg out xlat adc leave lods mov push call fldenv or push mov ret sub cmp popa jmp mov or lock popf out cmp adc bswap dec stos (bad) frstor loope mov js jle aaa or and test sub jle loope pop mov push stos (bad) and stc fiaddl cmp out inc aaa xor push adc mov jge mov fld inc test xchg test sbb negb stc movq mov dec adc jle ljmp neg sbb push not and push mov in into inc dec push cmp jne cltd scas jge pop outsb pop outsl (bad) insl xor inc push push sbb adc push mov pop or mov cmp xor adcl lock cld xchg mov mov and or push cmp mov dec mov mov cltd pop stc or dec sbb cmp mov adc jne dec or mov mov mov mov xor cmovb push mov push movl aaa sbb outsl sbb mov push adc (bad) fcmovnb jmp jbe and test dec movl mov out jle mov or lods push inc jnp pop sbb pop mov mov mov inc pushf mov incl loopne add div test je movl leave rol fstpl push mov mov add sub sbb popl mov or mov inc and (bad) std jne mov push adc ficoml cmp xchg and dec inc add push insl mov mov push cmp fcom mov or or or or jecxz arpl xlat js out in loope fadd loope pop or fstpt xor cmp dec inc mov cmp (bad) adc dec aaa loop add mov mov fadds in or in (bad) pop insb xor xor ss test inc add and in xchg xchg mov sbb pop ret mov lcall xchg fstl movl or push dec inc xor cmp dec adc cmp add xor xchg push shlb mov lods sbb and sub insl dec xor jle push adc ret pop pop or nop and bound (bad) pop sub and ljmp add or sbb addr16 imul inc jle xor cmpsb (bad) push mov divl pop mov add pop std add mov shrb insl push addb mov sbb ds push stos test xchg pop or fisttp arpl pop or push xor fcomi or js cltd cmp lret add xor sbb cmp mov adcb repnz int inc push push inc or pusha adc scas dec out insl je cmp movsb cmp pushf mov div xlat xor cwtl jl add jg outsb sbb jne cmp jl (bad) outsb sub add xchg jne popl push fmull mov jl xchg push mov dec imul cltd and icebp push call inc or negb fadds mov shl mov jp mov sbb push std dec add sbb pusha popa push dec call sub out fcomps adc or xor stos fisttp test mul shr stc dec dec sub push in fldt inc xor sub push push cmovle mov cmp push push dec xlat in mov xchg fwait push das or xor or cmp cmpsl pop lcall push cmp fistpll cmp inc sbb dec add mov mov das jle adc fiaddl mov or mov inc leave sbb xchg pop popa cli incb mov jmp push je mov cs cmp je sbb pop bound call cs sub pop dec adc insl das insb pusha push lock or or mov aas and sub add xor xchg and jl jl dec push (bad) cld adc mov (bad) xor jbe jecxz fstpt add fbstp or cwtl mov insb cmp add add jmp add inc outsl pop sbb subb in mov dec sbb or test dec cmp lret aaa ret mov inc sbb sti jl xchg push leave shrb (bad) and jl or fisubr and jbe mov mov andl enter cmpsl jle jecxz flds mov iret push ljmp es sub mov and xchg and push ffreep inc lock or mov push push push int3 pop pop xchg inc lods xorl inc pushl push test adc adc mov mov rorb dec or pop addl cltd pop mov sbb push adc cwtl sub mov mov inc call add fiadd add jnp mov popl push addl cmp jne fmul fdivrl add cwtl mov sub mov es fisttpll (bad) push movsl jle dec add stc rorl ljmp lret rep push push rclb test pop adc cmpb push das add shr pop or and adc addl imul or adc cmp nop lock popl je add (bad) mov cmpl test push xchg stos mov push mov lods xorl mov insb sub inc ja ret das push pop dec in (bad) mov dec xor loop push outsb sbb mov lret inc js add sahf push rep push mov add mov jno repnz pop pop pop mov fistpll adc mov sub pop sbb (bad) rolb jno aam mov push out mov adc cmp jge js ljmp je add fisttpl je inc mov idivb xor inc cmp mov adc inc inc cmp mov repz ds or push xor insl std sbb rcrl dec pop and pop ret pop adc popa push pop fildl and dec inc roll xor cmp add mov adc fisttpl xor xor test pop les adc mov les adc js xor lock push jl (bad) nop mov add fdivs add dec je and mov jo pop pop scas (bad) cli inc in jno pop out sar ret xor jo xchg mov lods mov push ja (bad) sti adc mov or dec cli push add adc insb int pop add aad push push cli pop mov and adc jb sub mov out insb jl sbb fsubrp sub lods stos lds fs and fwait jecxz push aam sar adc cmc fisttpl shrl push js jb inc rcrl out lret push push lea test test shrb out loopne rcrb ret pusha push push xchg push addr16 ljmp lcall pop xchg fcoml pop and cmp rolb jnp (bad) push ljmp adc cmovle pop mov std mov mov push pop out and jmp and mov cli or xchg clc push enter jnp int lods cmp das pop enter push fist sub sub mov mov lds adc or sub adc cmp jb adc jl dec jne call mov cmc pop push jo rorl xor push (bad) inc sbb dec stc add and mov jmp (bad) mov incb jb push xchg xchg xlat cmp mov jg sub mov dec add rcll (bad) mov fisttpl out inc movl pop movsl sub pusha cmp jne push sub mov lret adc sti pop mov push push (bad) leave push insb int xor or sbb push fsubrs lret mov out or nop push (bad) push (bad) dec psrlw cmp xor call or sbb loop mov fisttpl inc and jbe pop mov xor pop sarb or and inc pop jae jmp pop jo inc dec cmp ret push xor sbb or sub test lock aaa cmp mov sbb mov mov lock dec enter pushl mov dec inc sub sub mov push inc push and jmp xor sub gs mov xchg cmpb add push out cmp mov neg mov sbb jmp adc roll in mov xchg xor mov pop stos fstpt mov mov mov cld test rorb pop cmp sar ret inc sbb inc sub or cmp or inc dec inc pop int3 mov dec inc (bad) jo inc cli mov mov dec jne fnop xor sbb enter mov arpl mov mov push mov adc outsb test mov add test inc sub loope dec (bad) iret nop aad add icebp push pusha pop js and std mov test sub inc ja jnp cmp jno mov sti jmp and sbb dec add int lcall mov in call jno xor jbe mov fisubrl sub cmc loopne or jne loopne jne test loopne jecxz or sub daa pop pop loope dec adc insb mov (bad) inc outsl ja inc jb loopne loopne cmp ret push xchg jp cltd lea loop mov (bad) add jg dec inc mov decl mov dec mov push nop xchg jecxz cmp cmp jb rcll ljmp sbb add lcall jge mov inc sub or mov (bad) lea inc add inc or mov adc add or adc jne cmp nop ret or xor in inc push pop push or in jb add jecxz jg sub fcmovnb cmp jle cmp (bad) jbe ljmp or fdivs sbb push mov aas inc insb mov add lock mov test ds dec mov subl lds cmpsb call push mov mov sub movsl mov test xchg test sahf aad movsl sbb dec add std pop or xor mov fs movsl ret adc push out lret inc pop jno je je jl mov mov ljmp and add lods inc jp adc arpl push mov add jo test jp adc xchg fcmovnu lahf (bad) insb mov mov std lcall push xchg clc dec stc sbb push clc sahf sbb push or adc fistpl (bad) mov fimull mov adc jo mov cwtl xor cwtl mov bound sbb in push jne nopl pusha or fisttpl std jo mov imul imul pop push or push inc mov push mov push loopne cmpl sub xchg (bad) nop dec sub adc pusha inc sub ds jne adc push inc dec mov push pusha pop xchg mov lea dec sbb fs (bad) insb mov pop je inc xor or mov add shr in mov or push in xchg inc int cmp mov lea jge sahf push std ljmp and sbb mov daa rcrl fwait sub lahf mov xor mov mov dec inc daa or pop mov mov ds fimull push jle icebp sti add push sbb fiaddl or sbb jae push dec lock je and aas aam (bad) ljmp inc mov push push and xor aad jnp ficom sub pop push push sbb loop sahf cmp jmp inc mov nop xor sub inc push lret push push push sub movsb and addr16 sub push les xor test test inc sub jmp faddp and jp add cmpsb cmp fidiv mov pop cmp mov xor xor push loope ja sbb inc jae mov cmpsb xorb pop fisubr in cmp mov subb test push (bad) xlat push pop and popa adc sub pop cmp mov out dec xchg testl loop lds out or inc xor cmp add mov subl add pop or xchg arpl add cmp jg inc int pop shr shr sub aas lret mov sbb fsubrs sub push xchg in mov cmc in pop mov out mov cmp mov push or add inc out sub mov or pop push outsb push inc aaa in ficompl add ljmp and in or je dec mov dec repz out mov jb mov mov not mov adc jecxz xor add in negl dec in int3 dec sub pshufw add jb jmp div sub ljmp adc roll jne xorl inc sbb movsl ret xchg push jg pop add xchg xor das add add jne or jae pop fwait mov sbb fdivl sub cli dec lret push mov jne push lock (bad) imul repnz mov push sbb insb mov mov loope in mov sarl popf jb push xor pop mov push mov dec sbb dec shlb push push mov dec xchg inc push add pop xor sbb xchg xor pop cs push jae pop xor mov ds fsubrs xchg and sbb push shlb test xchg pop mov cmc lock stc loopne cmp clc jbe xchg je push sbb jge cld or add (bad) mov hlt push pop out ljmp movl mov inc test or or outsb push cmp cmp dec cmpsl push imul sub dec sahf mov mov and popa fcoms or mov imul jle add addr16 pop mov jmp ficom xchg jb xor cmp and xor mov or and and cs push movl xorb adc cmc pop fadds add push push popa shrb loope aam inc enter cmp jns lea jae divb mov in or sub incb sub test clc xor adc inc stos mov scas push rcl inc inc mov clc sub or sub inc ret (bad) fstpt mov cmp insl ret adc dec bnd loopne cmc js pop shlb or popa mov rol or jae sahf adc pop mov cmp lret or jne mov add push adc lret (bad) js loop pop in and push mov jl sbb xchg cmp fsubrs adc ret mov push mov mov mov inc dec (bad) cld ja sbb loope adc mov loopne outsb add add and sbb push inc lea or clc sbb cmpsl add add and fstl inc or addr16 cmp sbb pop and das or xchg jp mov mov or or add dec add pushf push and je lret mov xor sub mov dec lock dec pop push mov pop jno out cs add sub shll dec je push das push adc xchg cmp fisttpll and inc xor jp fnop adc sbb sub push xor mov mov pop jae iret mov mov ljmp pop mov mov mov push int outsl add xor faddl fsubs es iret inc push push cmp mov mov leave outsl sbb bnd dec sbb push cmp xchg sub ljmp dec leave xor adc mov shrb (bad) inc mov push add xor cmp jge mov xor inc sbb dec inc inc dec dec or xor dec dec and cmp rcrl adc dec push push enter pusha movb in and ja dec fsubp outsl (bad) or mov push push push fwait add cmpl xor inc or loop enter arpl mov push mov rcr popa rcll iret pusha frstor and dec push dec ror aam scas std movsb sbb cmc push push pop pop xor inc cmp shlb xlat push inc clc fldt imul stos fs ds push loope dec movl mov scas sbb sbb mov (bad) jl xchg cmp pop pop ljmp adc mov shll dec or in inc in add mov push movsb daa pop mov xchg dec push addr16 fistpl inc mov xchg cmp lock jecxz or int3 pusha dec xor jge cwtl and pushf xor cmp (bad) je mov fistp cs mov inc and out push push data16 inc sbb pop push or push inc pop or ds sbb sub mov mov inc dec push mov or mov push (bad) lea int3 sbb int xchg lret in pop into mov xor sarl fsubs inc stos mov add mov pop je sbb mov push ds adc mov jl pop xor xor add or in aas xchg adc rolb jb lods pop ret imul pop cmc push push cmp out sbb mov jl jg call neg shl aam mov cld aaa or cmp in add repnz cmp nop inc cmc div in inc push clc stc cli nop inc push cmp cld std push fstpt in incl dec fs push loope xchg fildl insl adc dec jne dec mov mov div cmp div lods (bad) movsl cli xchg or js mov pop or das je inc add add mulb xchg mov pop adc push add xor or lea fdivrl adc or mov sbbb mov insb scas fcmovnu nop sbb (bad) add jge pop sarl xor daa roll outsl adc stos nop pop iret push mov or addl rolb (bad) push mov adc cmp adc inc fs mov add mov stos dec lcall ret jmp sahf bnd inc sbb or or shl push push mov or mov or mov inc mov mov dec in lods rcr adc inc outsl or adc (bad) outsb cld sub pop shr push xrelease pop pop popf nop arpl push popa mov lods pusha ret sbb mov testb pushf rclb xchg mov sbb push adc or mov add je (bad) movsb mov add in jne xchg mov insl in pop adc push and add pop mov subl or mov test clc leave xor fcom out mov jnp fnstsw or mov xchg cmp and jl mov insl mov call jbe in and lret in inc test iret xchg mov clc mov cmp jge ss adc sbb xchg stos pop sbb clc pop pop xchg loopne xadd adc fild push inc push cmpb cmpsl int add cmp mov sarl cmpsl lods mov (bad) cld pop cmp push andl lods mov or faddl cmpsb add loopne aam cmp ja jmp lea rorl ja and dec sahf je ret push push cmc imul jmp sti loop fsubl out and lea jle and and loop xchg push ret repz aas xchg enter cmp xor popa and xor ret inc cld subb inc aas pop int3 add lods insl mov (bad) shl cmp orb cmp push lret negb ds lret push ret (bad) sahf adcb ret in lea add (bad) test xchg pop inc push jge pop lea sti inc jecxz push stos sbb mov pushl mov jmp test cmp sbb cmp loopne ret incl add fidiv mov sbb adc test mov jle xlat cmpw xor mov mov mov add test xor jmp add inc add inc mov cwtl fucomp sarl add cmp add orb jmp inc push push dec or mov pop or add add push add pop jl mov (bad) faddp inc fldt mov imul call sti cmp jl push sbb adc sahf add adc jae sub mov jnp (bad) mov mov adc inc xchg adc mov out mov ret mov (bad) or mov or clc pop mov adc sbb adc out out mov push cmp jb mov mov es cmp rolb mov dec scas add enter add imulb and insb ret data16 add sub lods div insb insb das dec cmpsl mov and out (bad) jbe loope aam cwtl add stos (bad) push or jl sbb add mov insl sub mov mov mov mov insl adc add (bad) lock cmp jb jne mov (bad) ja lcall sub mov cmp das jne sub jbe scas pop push mov mov jns test mov (bad) jne push add inc into seto gs pop sbb loop leave cltd lcall pop jl pusha adc push adc (bad) sub les shll inc sbb push inc add (bad) cld into fimull push pop mov (bad) push mov test jg add mov lock sub inc xchg xor sub xchg cmp cli add jle dec lds push test ja jl pop cmp jg xchg and inc mov jl stc sub add mov mov addl imul add add scas jb cmpsl insl inc lea pop add adc daa stos pusha arpl add add add stos enter mov xchg mov jl sbb bound pop jne xchg mov push jmp (bad) mulb insl or adc bound inc jg outsb std adc dec or lods pop popf push inc add xor inc test dec cld dec or jle or jg (bad) loope std sbb push cmp fsubr sub or (bad) fbstp testl push scas imul iret mov mov test nop jge pusha je jne or inc pop insl in and inc loope out adc sub push mov pop loop or add shr (bad) dec arpl jne popa mov and fidivr rorl leave je pop push dec or jbe dec fwait and sub cmpsb pop mov jle mov jne pop pop movsl pop (bad) lea pop and into sbb cmpsb and cs sbbl sub dec mov fstl insl jo mov jbe jne dec mov jge jg inc adc rcll aam (bad) cmp pop push mov pushw add daa loop lds cs idivl mov xchg fcoms push es push in pop and inc push (bad) lea jl dec fild push jmp pop (bad) je cmp sub add sbb push add jmp pop xorl or out pop or lret push mov cmp clts cld mov or add sbb outsl ds pop test push lea test push xchg mov rolb sub mov or jle lea cmp icebp xchg cmp sbb mov xchg pop pop adc pop or mov inc subb movsb adc mov nop add mov xchg mov hlt add adc fidivrl xor pop das inc xchg add insb mov mov mov inc pusha xor sbb and jp je xchg stos mov mov daa popf xor (bad) nop fcmove aad popf fs mov adc enter adcl xchg push add nop dec jmp rcl mov add mov push inc cmp gs sub jmp inc dec add loopne pop cmp ja jge cmp pusha lock (bad) xchg test test mov mov push jle xchg ljmp pop insb or js (bad) js pop movsl pop sbb adc or pop adc lods orl enter push xchg mov (bad) mov out add sbb gs jp pushf pop add in and roll out stos shlb mov popf or mov int3 sbb sbb popf addl pop rolb negb inc cs repnz mov (bad) (bad) pop push cmc add in cli or test ret mov add and or or xor or ds neg pop xchg sub adcb jp and fucomi rorl add jecxz rclb push je sbb out aaa and aad xchg mov rol nop loope cmp faddl push sbb jae cmp daa ja xchg les mov insb rolb dec or mov mov cmp mov dec fcom test mov popa sub je inc xchg mov nop push xor or dec ret nop xor cs lret cmp sub or xor ret inc xchg add and adc lcall testb popf push sbb (bad) aad mov int jno xchg lret inc popf add cwtl ficom popf push mov loopne inc aam xor mov mov test lret pop test fwait stos or mov mov jmp jo lods sub cli test xor cmp (bad) mov mov jg lret or cmpb mov cmp mov cmp and push fadds lock xchg dec cmp sbb jmp mov shr push nop push xchg push xchg popf add and lahf push push popf (bad) fisubl inc gs mov fsubs imul mov and int pop hlt mov (bad) repnz mov loopne jbe and xchg push lock dec xchg lret ja lds dec loopne add mov mov inc mov out add in adc add sbb adc sbb mov or inc (bad) mov jmp adc cmp add dec jne push sbb jge sbbb out pop aam pop pop jge mov mov movb rorl add ffreep cmp pop setbe mov into push insb sub pop add aam cld mov add (bad) shr shl dec in lock pop add push rolb pop xchg (bad) push xorl xor leave push fbld fisttpl or inc add inc mov mov je clc cmp fisub push fisttp or dec aaa mov sarl sbb mov adc enter sub test cli mov in sbb and (bad) adc aad push sub xchg aad rcll mov inc neg fimul shlb adc not push inc mov xor ret push outsl push mov dec int3 pop lea jnp test sbb aaa xor add pop ret (bad) add push push dec push push and aad stos shll mov push fdivrl mov data16 push mov sbbl in jmp (bad) push sbb (bad) dec add dec adc sub ss mov mov dec sbb jle loopne add pop or push mov pushf subb or dec and sub jo push inc (bad) mov mov jns test add xchg add popa push xor inc fildll movb out mov pushf inc cmp push loope sub jle test mov mov push sbb inc sub cmp out jb dec sbb or mov or fmuls sahf or in sub jl dec mov mov out inc test loopne or push test jae mov cmp adc or sub lds out repnz (bad) lock xor push mov and push addb adc fisubr fdivrs dec pushf adc dec push mov arpl pop lods test je fldl ss loope movsb hlt dec add xorl inc jne cmp ficomp or pop lea dec shlb test fldl pop pop lahf repz add and idivb jmp je pop enter add aaa (bad) mov and inc or inc mov mov sub push and or (bad) mov mov in mov aam sub jae loope insl adc pop iret jmp sbb dec or in mov cltd incl mov lcall pop push ret inc sub sbb insl hlt sbb inc shrl cmp dec lahf or arpl addb adc cmp add lcall mov cmp pop sbb adc out aaa cmpsb add sti (bad) adc sbb mov mov adc ja (bad) fistpll pop jne pop ficompl xor fist add push mov in and add int3 in popa lahf cmp mov ljmp (bad) ffreep or push inc mov addl push mov pop mov add inc or jecxz ret inc dec int3 inc push aam cmp dec fcmovne insl addl push dec push add fdivrs das push mov dec mov mov mov push cmp cmp inc cmp mov lret jnp mov xor int mov mov add lahf pop dec push mov call add mov sub enter dec scas mov (bad) pushl int pop and clc add stc stos push popf mov idiv xchg pop add sub xor incb jg mov push (bad) (bad) lock push cmp decb add adc ljmp and or sub mov jp ret mov mov push dec adc push mov pushf xor (bad) std in push sub inc sub sbb mov lret pop dec mov inc xor iret cmpl cmpsb fstpt pop or or push push sub or aad dec scas ljmp lcall add pusha imul add cmpsl cmp (bad) mov mov jp nop pop add ljmp add mov jne cmp mov jge test cmp sub add fwait test push cmp mov add add popa sbb lods add jbe and dec out push push jmp ljmp jne dec sub xchg jne cmp (bad) (bad) mov and sub out decl pop mov js push ret add scas adc mov in or pop or dec add push roll fdiv jne sbb sub mov je xor add dec in sbb test pop divl fstpl ret insl ret das pop iret mov je adc pop lods mov cmp mov mov mov sbb jle inc cmp jb mov or mov cli std loopne xchg mov scas jae mov mov sbb cmp (bad) cltd add imul je in push add jmp inc or add je pushf add and sub scas mov inc sbb push jno add pop mov add inc add push popa push cltd mov aad aad mov push sub mov nop sub insb inc out sub dec jne mov (bad) jle test mov lds mov jg pop sub adc mov (bad) pop xor (bad) ss xor out xor fsub std hlt push add mov mov pop fadd mov je sbb je mov popa mov xchg dec push and mov sbb rol sti mov mov add sarl mov cmp jecxz je jmp cmpsb pop add adc lods mov sbb rorl mov xchg fldl (bad) rol push mov push shr jne sbb popl aaa push icebp jae dec sbb and add xor ja mov and shl mov or push shll inc xor and push inc xor popa enter pop lods jnp fcmove mov cmp and push mov sub (bad) pop loope add and inc mov outsl cmp clc shr pop jne cmp shll push adc mov inc in or lea movb loope and dec sub sub ret jl or jne std inc adc jno push rorb sbb ja or mov pop add mov sub adc sbb jecxz clc sbb js dec scas dec add mov (bad) in jb ja inc adc sub inc sub push pop adc sub mov push call push dec add inc add cmpsb sbb (bad) out xor mov push pop xlat inc (bad) add dec push dec add adcl lahf add cmp (bad) sbb sub (bad) add dec or inc xchg push fcoms jo fisttpll push push dec jne fildll popf cmp sub push hlt pop mov hlt dec sub inc sbb stc nop arpl hlt push mov sti jne inc ss mov movsl sub push cwtl adc and pop push leave pop add sub push test das sub scas jnp ret pop or jne mov push (bad) decl je clc mov or movl ret mov or imul fsubs in inc test in pop add sbb adc aaa pop sbb dec stos in je cmpl int test adc mov inc cmp dec cmp in rcrl int (bad) dec dec mov lret cs pop add pop dec sub std cmpsl mov in add xor pop test imul je sub pushf pop popa and jmp pop mov push inc xor (bad) rorl data16 lret mov mov popa adc xor push xor xor pop mov jg dec mov push inc jge and (bad) cs dec jno dec jns push inc sbb (bad) js cmc or (bad) dec shr or push mov (bad) mov xor pusha mov push and sbb dec fistp das out (bad) inc push mov loope insb test subl pop pusha sbb lea je in mov cli (bad) dec add ljmp jne add clc roll dec jnp popf jle cmp add cmp pusha lea movl mov mov xchg movsl sub and movsl and enter sub test xor iret das scas cmpsl sbb aad mov cmp jg fimull xchg ljmp ss push lcall jnp lock jns jae mov sub jmp cmc push (bad) (bad) (bad) jnp cli mov out cmp jbe sub mov mov inc inc dec jne mov addr16 cmovns push push lods adc (bad) mov adc dec cs sbb and mov push inc pop pop loopne pop jb andl jb sub mov stos mov stos and loopne ljmp sub adc inc push or inc or cli loopne je pop mov lods mov fdivs or pop mov adc dec lea jmp sub fwait pop mov mov rorl jnp and and push push jb das add fadd add sub out ss mov cmc stc push fcomp inc pop inc mov sub push inc push and add add dec jae xchg push mov icebp movsl jns jbe cmp (bad) movsb xchg cmp std jb cmpl imul out (bad) pop pop xchg jge out push imull adc pusha cmp or push or mov (bad) mov or loopne enter add or mov out mov enter sbb rorl mov inc add mov or (bad) pop int3 mov sub and gs add fldl mov push mov js push rcrl mov (bad) in cmpsb imul imul ss push lea sarl mov hlt mov inc push (bad) or or mov xchg sub cmp mov and std jecxz ja push adc ds imul enter sub nop push adc js mov test out mov mov dec and ss test arpl cs fldcw mov push movsb pop hlt imul add ret sub cmpsb and fldcw cld (bad) xor mov sbb sbb adc xor adc or add popa and fwait and or fwait scas pop add push fwait mov sbb inc add cs ret mov lret add adc imul push insl push pop gs cwtl sbb jb and test mov adc aaa mov mov divb xor mov out out pushf jne dec je rep pop or ljmp out ret leave push pushl sub pop and sbb adc test std fildll fimul jle lea sub dec mov outsl cmp jmp push add jb push mov sub pop dec push fwait push inc loop sti fistpll cwtl adc pop mov (bad) push mov sbb aaa adc xchg push fisubrl push fsubl dec and popf add inc das jne push push or pop pop lcall or sar jecxz js sub rcll call (bad) push add in (bad) arpl fs dec add ret sub ret lret add cli daa (bad) cmp pop dec ret adc sub es popa push xor rcrb movl push ds mov sahf inc lahf xor repnz or std je pushl push sbb jb lds cs addr16 or push test inc pop cmpsb loopne sub push dec inc or outsl inc psrlq and clc inc push inc sbb jae pop or push scas addl jns add cwtl inc fstpl jno rclb mov add dec add add mov das xor xchg ljmp daa es insb outsl test dec insb mov add enter push cmp adc out dec je jo pop daa cmp ficompl cmp mov pop or push testb jne adcl bound jmp or sbb test inc mov xchg insl mov repnz push mov cmpl jle call add inc mov subl inc insb loope in int3 xor mov iret cmpb jno iret outsb mov mov adc mov mov push dec insb imul or xchg xor xchg jae mov add imul ljmp std movb mov sbb daa sub push popf and nop jnp add (bad) mov push clc push mov aam mov jo das aas not sub pop mov clc jmp add in pop pop gs or cmpsb dec popa sbb inc add inc call pop mov sbb (bad) and (bad) pop dec push scas pusha add pop pop jne mov adc sbb xchg pop pop sbb xlat cmp clc fistpll jb test adc aaa fsubs inc jnp push (bad) xor push dec inc cmp inc ret mov xor test adc in mov push rclb and xchg sub xor pop pushf dec ret sbb push lea andl sbbl faddl in hlt inc (bad) xlat xor add pop push fbstp and xor or push jo shlb ret je pop push std inc or jno rorl push push ds in imul das daa pusha or (bad) or mov mov ja in movl dec push int dec dec dec cwtl dec mov aad or push cmp or cli xor xor xor sbb insl les cmp pop lahf call and push repz add sbb dec add adc daa add mov int and sub adc mov cmp mov dec flds daa adc add jae xorl push pop pop (bad) jb or xchg or dec cmp or or pop or enter (bad) loop or inc dec pusha fisttpll or mov add and es push ja jg push adc pop adc xorl and daa adc and adc lods sbb and sub sub sub or sub dec cltd inc mov adc cmp push push sbb (bad) xor es sbb sub dec or jmp call xor sbb sbb cmp add dec lcall sbb dec shrl jge sbb (bad) xor push inc pop loop test add add sub and add inc mov mov cmp xchg cmp jmp sub iret xchg pcmpeqd in jno repnz mov sub push rol lea (bad) jne repnz aad in in xorb and outsl add (bad) call jne call pop push or adc jmp and sub nop ljmp jae out in in mov dec mov movsb cmp ret or out mov sbb dec nop out add icebp and add dec es and std repz std jne mov hlt hlt push ja orl xorl push pop jae pop div (bad) cmp and clc clc push clc dec xorl or cli pushf ret iret sti sti mov repnz cld je cld sub jmp (bad) or cmpsb imul nop adc ret inc test sub shrb scas lahf roll inc mov push push popa fnstenv jne pop rcrl test jecxz lea sti in mov (bad) in xchg and add mov add enter outsb mov add in dec enter pop or nop gs jmp in (bad) enter add mov and repz out out out dec push pop daa adc add sub xchg xchg or stc repz dec pusha dec sar push enter stc stc gs dec mov adc imul xchg push pop daa clc add stc or xchg clc (bad) fsubs sub lret sti push sti dec sub daa adc popa dec scas addl mov stos sbb inc adc xchg stos add jle cmp (bad) mov loop test jecxz adc cmp imull (bad) mov and out popf dec pusha xchg dec (bad) out dec dec popa sub mull idivl mov mov imul das mov mov cmp (bad) dec scas sub and sub (bad) mov out out dec enter inc mulb push pop xchg sub sub out xchg nop (bad) mov cmc add repnz xchg and xchg dec enter jae mov (bad) or adc imul dec and sub and xor sbb andl (bad) adc cli cli push or lds xchg hlt or and mov hlt mov and mov lods data16 (bad) xchg xor hlt incb pop jae or (bad) cmc inc adc fdivrs add xor xor mov loope loope repz repz pusha or mov lds adc in dec or jns repz inc push xchg out xchg mov bnd inc jns repnz gs inc jo and pop inc mov or sub jns cmp repnz das mov sbb icebp mov icebp icebp cmp push dec adc inc dec enter icebp push icebp popl cmc push lods pop pusha xor icebp jp dec enter and sbb xchg ret mov lret repz lock stc jns gs add jp lock xchg mov (bad) or lock adc pop cmp dec test sbb xor jbe stos cmc jne sub add and ret push mov fldl dec in pop inc pop push add add es add cmc vpcmpgtb mov push jo sbb mov ss inc jne test addr16 push sbb orb sahf inc push fist jne adc pop inc pop dec sub aaa mov pop cs fildl and jbe xchg sub push lcall or insb dec inc dec mov push jns push sbb jl fs mov lcall mov lret in and (bad) fxsave cmpsb sbb sbb sbb imul (bad) inc push mov ja add scas add pushf out add movl rolb repz mov sbb sub jne call hlt and pop add push aaa ljmp shrl fildl pop jne mov push push inc imull sbb pop cmpl je jbe leave mov or xchg (bad) lock test ret push push add ljmp add xorl add mov mov lahf adc enter push mov mov pop ret mov inc inc or mov inc xor adc mov stos sbb shrb lock mov jle and sub loopne (bad) xor adc sub test push fadds xor add or cmp dec test mov inc pop push sbb mov pushfw add dec cmp popf mov pop dec dec test (bad) sbb imul cwtl mov xchg mov pop dec adc and dec pop and jbe inc call jne fisubrl mov mov or or and push adc mov xor cld lock les or cs mov mov push aam cli inc mov js mov sbb adc and out (bad) (bad) jo (bad) sti jmp xlat (bad) cmp jbe push pop out add or jne test sbb add pop aam frstor xchg xor inc and or adc pop icebp mov add icebp int xchg (bad) loopne imul add lock ja push aas cmp push push add inc shlb lock sbb inc and push outsb shll push loope jne cmp scas mov fcoms lods mov xchg mov push push ffreep or or mov adc push fsub ficompl push pop mov pop push cmp dec ds test mov daa push xchg fmuls inc sub insb pop sbb cld mov shlb and or xchg pop mov inc xlat cmp jne inc (bad) lock mov std test sbb push je outsb pop js or mov in jg and fldpi or (bad) push daa int3 push jle and test push xchg mov int3 jne cmp das add pop jmp fldln2 incb movq add add and mov jg add jg jg mov in outsb outsl inc add push jbe jle sbb aaa fwait pop adc jg jg jo mov sti notl mov mov push xchg add fdivs rcrl pop dec lds mov sbb lret (bad) sub jnp adc xor cli sbb push mov or jne outsb into test inc insl pop jg pop loopne mov adc icebp push push push sbb (bad) ficoml sti push mov in dec adc scas mov shrl roll mov add sub fbstp lock movsb sub push pop or arpl jnp in (bad) cmp add (bad) into adc and sti mov push jno dec popa jmp ss (bad) stc pushf mov andl out xchg imul or (bad) testb or es add jns loope lea inc sahf out loope jge push inc inc inc sbb rorb jmp or push xorl test and push hlt adc into add push push xor inc repz fsubrl add dec outsl add mov cmp push in rep scas jnp jg cs add lock mov push clc lock or xor rclb add and jge adc or push fnstsw xor cmp inc les stos (bad) jmp pop lods mov outsl loopne mov cmp inc adc jl sbb push push add in adc sbb inc mov cmp jb out adc mov add js mov stos push cmp mov push add pop push sbb add lcall cmp jmp push pop inc (bad) lock and daa add outsb adc mov inc pusha mov inc mov or scas add sbb aam mov mov sbb test jne adc fucom or and mov adc imul orl mov push inc lods or mov or dec nop sub enter mov mov into (bad) fisttpl jne sbb mov in cvtdq2ps jbe xor inc push dec pop push ja add push or or mov orl std sti mov pushl push cmp les cmpsb loop sbb push rclb ljmp cli cmp adc js icebp xor test data16 add sub push jl add and dec add ja add or (bad) jmp bound scas gs loopne iret (bad) cmc pop scas push ret inc and test fs xor inc sbb pop cmp xchg adc dec jle mov xchg out je nop mov punpcklwd sub push stos bound das sub icebp pop mov lods cmp cmp pop cmp movsb adc mov pop or mov mov inc push sbb stos jne or mov adc daa sub cmpsb push je test xor dec push push into jo mov xor adc and or in insl push popf xor cmp roll push inc mov ffreep add or add cmpsb dec test mov add scas or pop sub pop sub mov mov add mov int3 insb adc xchg xchg jge add add or cld jo cmpsl je les add sbb addr16 push test sub mov jne cmp push or rcl ljmp add (bad) add scas addr16 fdivl daa inc and add and incl adc mov inc pusha dec mov aam ja pop add pop (bad) jl push mov push and adc pop push cmpsb xchg adc movsl push movsl mov gs sub movsl pop movsl xchg aam enter mov inc loopne mov mov mov xor andb xor xor ret mov dec pop inc ret push and outsb lcall dec adc cmp sub pop jbe mov mov inc and lret jmp mov movb jb outsb shrb (bad) xchg pop rol pop add add mov into cmp aas add clc adc push pop jbe scas loop sub inc leave (bad) or add lret mov adc inc and pop cs lods adc or adc sti adc add mov jo jmp sub xor push push lds les adc mov insb and pop testb divl sbb xor push movsl mov js jnp sbb add imul or sbb sbb mov addb or pop add orb lahf mov fs cmp or sbb nop (bad) mov test cmp je push int3 fsubrs ret mov push stc sete mov add sub iret push sub add or jl or or pop pusha adc add mov add push add mov push aad arpl pop add jnp jno addr16 add stc inc sub imull cmp adc dec add adc push pop sbb add or add lea sub push loopne mov es xor push or dec jg ljmp scas mov daa test test push xor aas mov push mov (bad) outsl arpl xor clc decb popf (bad) (bad) jp adc cmp iret xor mov (bad) jbe fs or inc shrb movsl or pop add push jno dec stos ret mov (bad) push cld je lea sbb stos aam xchg mov gs and daa xor adc mov inc lock jne iret je xchg pusha push pop xchg imul jmp cmpl cmpsb aaa mov sub fdivr inc push and add add pop pop add sub inc scas and push in mov push push aad enter xchg pop rcll push fildll inc cmp dec or jmp or sbb mov push lret mov sub outsl push or fisttp cmp ja inc das pop mov push push push ret jp inc push xor add jmp mov test adc cmp and repz adc or or mov out ret nop iret mov pop in xchg cmp sbb sbb call dec (bad) cmc loopne xchg sahf adc sbb or std jne out jp and push mov jo and out pop lds push jmp push mov push xchg xlat inc mov sbb xor cld jae gs jae ret adc add pop xchg (bad) lret mov rolb inc roll pop ret and cmpsl das and xor pop pop jns adc add dec aas fstpt dec adc add lock mov push mov mov add pushl or test jg je mov cmp test inc test fisttpll test lea gs rcrl or std mov sub jo jbe mov or out push into add adc adc pop push jge mov mov adc mov jg or add jle stos add mov sub mov mov inc pusha add mov decl inc dec adc push lea fs add add xchg jae mov js,pn ret jbe mov mov dec ljmp test lcall loopne hlt push mov movb pop add mov add cmp ja out inc cld pop add out mov fsubs fcomps cwtl add fsts inc push jo and mov pop adc (bad) push push xor and add cmpb movswl or mov arpl ljmp adc adc loopne outsl adc je and aas insb fmuls test faddp orb jmp xchg (bad) mov enter mov lea mov cmp ja dec push pop roll addr16 push and and mov negl fsubr lea xor pop xor inc inc jp dec lock clc lahf mov add je cmpl adcb jl inc andb mov pop and js lea push (bad) push stos enter and inc push bound fs mov or mov push aad add sbb fndisi(8087 add add pop or jbe test cmp adc inc (bad) int3 jmp or sti mov sbb les jno push fs push and add sub pop jae sub test inc out add fnsave cmpsb mov push out inc out mov out sbb push (bad) xor and std shll (bad) jmp mov addl cltd pusha sbb sub mov add rolb shrb jnp jae jbe inc lods jge push iret dec adc push test jne insl sbb add mov sub inc imul in jmp fsubrl jmp mov sub sbb xor mov ficomp inc cmp ljmp inc inc cmpb (bad) mov and scas scas add jb ljmp movl push testl lea inc inc pop sbb add jge clc inc inc inc dec push mov and lahf xor faddp add negb divl and (bad) cmp mov fdivr or inc dec jne mov push push lret inc subl push shll push xlat (bad) pop cmp push jg arpl pop outsb pop pop cld notb clc xor cld movsb dec loopne cli pop test adc (bad) mov inc test sahf aam mov ret inc sub inc push jl add add and jecxz add mov sti rep pusha jbe or es jg xor pop and push add jbe adc push dec add push mov mov add mov pop inc xor jo mov int3 arpl pop mov movsb aam (bad) orl jae jg mov push inc jmp sbb dec xlat cmp (bad) sbb mov add sbb aaa out mov mov mov push sti adc mov mov jmp shll sti xor push mov adc push frstor sahf push adc push push outsl test inc movsl inc jl add imull enter aas pop jg lcall addr16 idivb sub or call mov xchg dec (bad) mov or (bad) pushf je mov or les pop insb mov nop sub or inc aam mov js fistpl les dec sar addr16 arpl (bad) push pop cmpl pop jle jbe cmc adc add adc inc insl dec jne ja inc mov push push mov pop bnd repnz or mov pop jb rorb mov mov or push icebp in add or movnti andl loope rcrl (bad) ficoml test das inc xor mov or adc pop xorb xor imul jo mov push sarb je je repnz pop lds sbb xor ds sub dec es bound mov ds jo inc adc (bad) aad mov xchg and cmp jmp xlat adc or add sub lds xor pop mov pusha mov cmp mov push mov push push adc push sub repnz jmp movsl or ljmp enter jle shrb stos inc popa dec cmp sub sub das lcall push or jge lock sub insl ja aam push jge stos cld ret pop mov aad popa inc push push add fldl stos sbb ds and inc inc dec pop mov pop pop stos lret arpl push mov lds mov inc add imul loopne mov div pop jb lea mov ja test insl pusha imul push insl loope (bad) es ret or and mov jne push insl in push and cmp push cmp or jno add loope mov lea fidivl push inc add mov sbb inc or je dec sbb test or sahf or push push jecxz mov mov inc mov icebp cmp push hlt adc test pop push push mov insb jmp shlb lea out and ret mov push aad jne add push insb mov aam sub xor add mov or add mov inc or mov adc xchg pusha jo lods test lock (bad) in adc pop and aaa stc and or clc mov in adc xchg hlt je or subb jle outsl sbb inc test cmp orl cld mov or loope movl scas mov push jmp (bad) rorb jno pusha and or xlat adc mov lock scas add cmp sub add mov mov fist shrl push shlb mov mov sbb popa mov daa (bad) (bad) fistpl sub push pop push int3 int int3 and int3 push or push xchg mov mov push push push mov pop lea pushl in incl loopne int aad cmp jb lea pop mov inc stos adc jns and pushf lock push insb ret add cmp (bad) or adc pop rolb scas push nop ret sahf adc add popf mov xchg mov inc and or hlt scas dec call push test sbb pmaxsw aas pop jmp mov clc mov movb cwtl ret mov or cwtl adc mov push push adcb xor loope (bad) rclb cmpl nop add jno sbb movsl lods jbe and sbb loope or scas aaa add je mov sub or xor adc fisubr or push rorb jbe sbb cmp data16 inc fldt push sti or mov jmp pop dec int3 pop adc sub ret mov (bad) fidivr popa or sub outsl inc (bad) cmp jne adc mov cmc call sbb mov push add cs ret scas add inc pop shrb push sbb out jge addr16 fcoml add pop inc int adc mov stos mov insb popl pop (bad) jl pop (bad) cmpsl test fiadd xor sub jecxz sbb insl mov je nop sub insb test mov lods js js xchg pop mov push dec js sti into fistpll and cmp je cmp and les es cltd test pop inc mov subl xchg mov adc ss and (bad) cmpsb mov inc cmp jb add xorl jbe mov test pop mov xor adc test jo jno aad add mov or add push sti pusha leave rolb sbb mov xlat push push xor adc push outsl add push or add rclb push sarb add add bsf outsl lahf add mov jge mov or out cmp (bad) stos mov inc inc jno loopne sub push das push add dec fcoms mov xchg inc incl stc jne push stos push pushl outsb pop and and push mov loopne jmp xor sub xor add pop andnps (bad) inc and mov iret dec cwtl push pushl mov push or adc add jo mov movsb cmp pop jne push mov or je sbb xor jp rclb dec cmp add lret cmp fsubrs or or and add jle in push xchg test sbb test stc add sbb inc jno addl xchg pusha or call adc fiadd es pusha idivb or xor daa sub test mov stos (bad) (bad) incl xlat jge imul mov andl lahf and sbb nop cmp jl add add js fs (bad) push or add iret mov dec cmp jae ds in pop (bad) cmp cmp push xchg sysret mov jbe (bad) mov loop pop jae in rcll (bad) lahf clc mov sbb push cmp enter cmp mov mov cmp ja in cmpsb outsb add and and mov push jle sbb (bad) push add test (bad) jbe cmp shrl pop inc xor daa rcll gs inc xchg mov mov scas jmp jno test jmp cli push add add adc ljmp add jne cmp push jmp xor fmuls aaa xchg and das adc add ja sub je push push push cmpsb add (bad) inc loopne adc cmc cmp jne decl lea add (bad) popa jae mov and and (bad) fldl (bad) (bad) dec adc decb push and mov movl inc push notb xor xchg loopne lods mov mov dec mov mov sub push mov mov dec ret push inc dec adc jae adc jl sub dec mov pop fcmovnu les lea cmp je add jno or movb js sub add mov pop mov push cmp push xchg repz jmp sbb add orb mov sti jbe shrb inc inc and vsubsd es cmp xor sbb ror cld (bad) neg es shr xor dec jl pop inc rcr fadds lret std je mov push stos je,pn cmp pop inc mov or mov fdivrl add dec add sbb dec mov cmp dec mov add push push adc leave sub mov out add js clc xchg cmp push mov mov sbb pop loope add adc push jge mov ret sbb les fldl2e inc les out std fadds fidivl sub pop fistpl mov mov pop fcoms inc dec mov push test js jmp orb add add cmp mov jne sti fiadd add sub sbb lds jae pop jp and (bad) shlb imul add push stc push clc fwait pop insl mov (bad) push sar inc push mov push cmpsl cmp adc pop in outsl push (bad) push sub sbb or sbb test sahf xlat push pop adc add inc sub ret jmp xchg push mov push aad sbbb cmpsb (bad) and pop jo jge ss jge inc insb jne add (bad) dec mov js imul popf jnp scas jo mov jb push and adc lahf push loop inc or mov js ret mov jae adc add sbb mov and sbb mov jmp sbb lea das jmp das or push mov or push and add add (bad) push push cmp xor mov or int3 mov adc into pop clc inc aad fcmovbe pop or lea loopne cmp adc inc mov mov jnp adc lea add imul pop add mulb lea jbe testb cmp xchg adc pop xor sar pusha (bad) aas jl adc rcrb push mov insl pop adc add je mov test xchg test sbbb fisttpl or sbb jge sbb clc add out and xor xchg cmp (bad) or inc daa pand icebp stos and lahf mov out pop bound jp subl sti xchg sub stos jl into repz xor adc jbe leave push andb (bad) dec mov push roll and insl faddp add cmc push push mov adcl das inc imul ds jne,pt inc jmp movb clc xor aaa xchg pop daa movl add incl lock mov adc call scas mov sub mov inc bnd push mov jb mov inc lods add mov pop sti push sub sbb ja ret test jge jb scas (bad) je mov inc sbb call push leave cmp mov jb lcall repz push je sbb and aam andps and inc jge or inc mov out in jmp shlb jbe jmp fnop sbb jecxz stc dec jl mov adc sub adc lret mov test jle adc lock (bad) cmc pop cld pusha pop pop pop mov cmp pushf cmp sub pop cmc cwtl or add xor add jle pop push cs jl into push lock test inc cmp js in adc adc (bad) sarb or pop mov cmp in jge fsubrl pop fisttpl sub xor push pop cli pop out adc add add lds mov xor xchg inc add cmp cwtl in pushf movsl sbb ret inc outsl add (bad) jmp (bad) add mov add push push push push sub dec dec cmp sub push push jne push push hlt push adc dec adc push jmp test fwait jge jp mov es (bad) fdivrs and sub inc or push add inc into ss add mov sahf mov cmp or rsqrtps add or mov popf popf mov ja stos data16 sbb add xchg pusha xchg push ja fsub add mov or sbb outsb or add lcall inc mov test pop call jb rclb inc or inc addl (bad) sub (bad) cld sar call imul popa pop lcall stos push adcb int sub push hlt ja push std mov test pop or je cli add cmp add pop and cmp inc mov ljmp inc jo jae mov add shll pop mov mov and jmp lea sbb mov pop cli sub push cmpsb pop add jle imul mov cli add xchg fldl adc xor popl mov sar xchg sub dec pop cmp cltd fiadd into cmp cmp inc adc rclb je xorl subl mov out jg je dec add clc xchg xor loopne mov fnstenv inc sbb dec dec or aad sub or jno jmp or or xor insl jae push pop icebp rorl add sub adc mov fidiv inc inc mov jae cmpb test xor je sbb pop inc cmpsl or jmp pusha xchg and je mov or inc dec rclb or push lret add mov loopne (bad) insb rcr fist inc aam mov ficompl rol loope add push mov fadds pop or push std cwtl or mov add iret out xchg decb or cmpb inc adc jp test xchg jne push or sub or in and mov pusha xchg xor clc jno adc adc stos push add dec sbb les cmp sub insl or aas cmp mov cld mov dec push ljmp lock jno fdivs and xchg mov inc adc mov fwait jg mov idivb push and dec adc stos xchg mov shrb test clc sarb adc jbe push in jmp sbb sbb jmp incl mov push cs lea or fnop mov popa add xor jge loopne inc mov test std clc or outsl cltd pop mov inc pop rorb jne push push xchg fsubrs sub push dec stc push or adc add sub ja pop test aad mov or orl sub pop out or lock aad out push add sub or addr16 jne mov push add dec mov call sub or xchg push mov inc mov testb mov push js pusha add in or push (bad) or lods xchg paddsb push sub mov push xlat sub pop shr sbb lods nop mov cld xor insl inc les icebp movsb mov adc xor jle shll fstps jge int3 and stc add sub test jbe dec pop pop pop sahf shll gs inc adc xor xabort add nop es cmc xor pop add pushf nop fbstp dec mov add jns xorb sub add xchg dec xchg or pop mov incl adc inc xor add mov mov insl mov mov add int dec dec or cmp jne inc pop adc in imul sbb inc iret mov imul sbb dec cmp xlat mov cmp ss xlat jbe xor or add mov pop mov mov cmp adc pop sbb lea inc (bad) sub push outsl js and pop xor test pushf loop imul testb or or sbb sbb dec dec incb out dec outsl push and insb ja push dec pop or ja ja push fadds add add rorb cwtl icebp mov mov jae jnp dec add mov push cwtl xchg mov push inc clc cmp bswap mov mov sahf adc setns nop dec sbb dec inc mov pop pop les inc sbb scas fisubr cli xor xor (bad) xlat add loope lcall pushf and jge jbe jp into mov orl or push mov mov ftst test cmp adc (bad) cmc push fldt fcoms cmp pop mov flds or fnstenv jmp xchg mov mov lock dec ss xor sbb lock test mov sti and adc sti push adc mov leave dec in add test mov add ljmp fmull mov dec (bad) iret jne movsb jno ret dec pop cmp add out xchg pop mov jmp imul sti push pusha and jne pop push push pop mov leave push je inc xor push dec mov sub icebp adc jle insl loope jo std dec decl jno cmp pop cmp jge iret es mov icebp cmp sarl mov decb jne (bad) int3 hlt int mull or sub mov sub scas and jne sub fwait or mov adc mov bound int3 in xor xor daa cmp or and shrl or popa js out or mov push xor jmp and sahf or stos mov scas inc out or movb imul add inc add xor inc ret mov fimul sbb sbb sub dec cmp add add add cli pushf xchg mov add sub fsts pop std sub movsb jle xor lea xchg dec pop jl js pop lock dec je mov xchg push cld in cmp add gs test cmp add lock or nop push ds shrb push pop xor sub or cmp push sub xor add or (bad) jb adc mov jns add ljmp xchg clc push cld adc mov mov add ja icebp mov (bad) (bad) xor pop subb call add loopne (bad) popa inc pop aaa pop or cmp sub xchg in add testl xlat or loopne sti fsubrs rclb xchg mov and (bad) mov push pushf pop mov test jg adc lods popf pushf pop sub je push popf shrl xchg push in jb jmp inc (bad) adc clc pop testl push add jmp push in sti pusha or mov fild std test shl sti mov sbbl pop fstpl mov or orb adc sub or lods sbb rolb xchg movsb cmp jl dec mov stos (bad) push testl shrb cld dec add and mov or dec cmp pop add cmp daa testl dec or push push fisub and sbb jbe dec adc pop sub dec sbb jge push push push imul jne xor mov (bad) ja xchg pushf add pushf sub add mov pop inc jne insb loopne dec or cmp insb and push in lret addb xor je push add push in add inc sub enter aam test inc fcmovbe adc aaa jbe mov xor push mov sub xor (bad) (bad) or icebp cmpl add (bad) (bad) inc rolb (bad) add js or (bad) (bad) xor dec and sub (bad) or inc adc push cwtl or jbe mov cmp jb or call jb ret sub (bad) jb adc insb and int3 add push mov push push test inc aam xor js cmp mov pusha sub popf add push fsubrs xchg sbb add pop mov pop imul add mov and fs and and ret pop push mov stc ss push jo xchg add or mov ret sbb or cltd pop or jmp and mov mov cmpsb test aam xchg jl xchg std in ljmp or jo inc sub mov mov (bad) stos dec roll or sar addr16 sub adc arpl sahf mov add pusha pushl mov lret ss lock test outsl mov je add je dec je cmp dec push mov mov out out sti jmp mov push mov or icebp mov lcall rorb sbb bts sub adc in xlat or pop and fcompl sti add sbb pop sbbb mov pop fild jbe rol inc fs adc inc (bad) add adc or adc fdivl sub pop push hlt push sub jmp loop jl jmp push and inc pop push fs mov jmp sub (bad) cmc xchg add insb mov enter insl and fs punpcklwd or js mov xor (bad) and push mov adc pop push cli push mov into push je popa add mov pop push or leave gs pop and push add or add (bad) push sarb pop mov mov jmp fisttpll and cmp inc mov fmull in xor add jmp jmp pop adc jne repz push mov push push popf test mov push push push push jo jnp sub inc int xor (bad) inc push in mov xorl adc lods pop std test jnp jbe lea fdivs push push push or lds fisubrl pop lcall mov or jmp fs out mull in inc add adc add pop je mov dec xor and jne sbb adc pop scas add inc or and mov les dec adc gs pushl add sub pop and push pushf aad ljmp rclb call pop jnp ljmp add sbb ret es pop push aad add sub mov add insb pusha (bad) popa cmp lds mov push jge cmp or dec sbb ret popf push cld add push sub xor sub or xor mov add add add inc icebp inc mov popf sbb roll adc push xor or stos add push push and call sub add push in arpl inc adc mov imul push vmaxss sub mulb int3 insl sbb leave pushl mov adc addr16 xchg bound pop adc cld bound lods pop repz mov xchg mov nop xchg fstl pop repz jae les xchg mov push and and adc movl les inc inc or in xor pushl pop or in fs inc adc ss nop inc push sbb pop and inc push sbb xor sbb cmp push sbb or inc pop dec sbb dec push push fs inc push pop pop pusha nop inc push sbb inc push sbb js adc (bad) mov xor mov xchg cwtl pushf inc xchg pop jb movsb test or and sub push xor cmp fcoms shl mov lret mov and mov aam aas jle add fldcw adc rclb nop in sbb sbb pop cs and mov aam xchg stos loopne mov movsl cmp mov inc dec jne je mov mov push fs test adc test mov mov dec add outsl in pop pop add lock bts pop test and sub lret xor outsb mov sbb mov mov pop push in lea adc push outsb inc insb mov pop adc in xchg test or cs mov jmp push cmp sti outsl movsl (bad) or cmpl jne mov mov inc inc (bad) jne push cmpsb push adc or mov adc cmp out (bad) loop in mov jne insl adc push lcall push dec insb sbb add jbe mov clc or lea sub (bad) stc lea cwtl mov add mov add cmp push jnp pop andb xchg xor or or cmpsb dec mov adc inc lods rorb push rolb inc cmpsl mov jno lds das loopne aam mov andb and shll pop mov xchg popf add push arpl sbb lahf dec adc inc or sub repz outsl icebp pop inc fwait jle cmp sbb lret cmp add es pop fdivrl std or clc adc ret out insl mov push es movl dec ss inc jo je in push sub or jg int3 sar adc push and and sbb fistl fiaddl out adc inc add aaa sub cmp mov and mov pop mov push cmpsl dec rolb add sub test ds andl inc sarb xchg xor in adc dec push lsl sbb or (bad) jae adc pop in mov lock push loope sti lds cli or or inc and lret gs sbb jne stos push pop push and rcrb lods adc dec adc or pop imul ljmp push lock leave ja inc mov fsubrs add pop aas or mov (bad) lods pusha fisubrl pop cmp add imul pop xor test mov inc inc es mov adc mulps jge add or fwait data16 mov mov or pop adc push dec add and fmuls jns or les dec or shlb xchg push mov je lret add outsb loopne add xchg add xchg xor jg data16 sahf lock or pop push and or (bad) jp dec cmp jp sub mov hlt fs add adc dec adc mov xor inc movl pop add mov scas jle stc add sbb dec xor push mov lods mov pop outsb or (bad) push gs hlt push push test jne cmp adc and or jg xchg add push push mov jo into and scas pop gs cmp out jnp ret cwtl cmpsl in add fs in loopne fcoml adc loopne push or add sbb shrb insl xlat ret inc push hlt cwtl pop add clc cmpb mov loopne cmp add sbb insl mov call or add fcomps (bad) mov lret sbb cmp or push out push pop cmpl mov je aam cmp rcll test mov pop and inc add xor add push dec cld addl in outsb add adc scas mov dec (bad) pop sbb mov push adc sbb cwtl add rorl stos loopne dec mov lods sub mov inc inc outsl (bad) jbe dec mov push enter dec jl dec pop mull loopne mov or dec mov dec mov mov cmpl fnop mov bound cmp jne fisubl sarb mov icebp push sbb inc jl or aaa pop pop pop dec add test cwtl sti je add xorl movsl test flds mov sub or pop xchg lods insb imul add cld test das add popa push push or scas mov xor jge or outsl mov pop bnd mull or loop lret lods or inc and and jne (bad) fcmovnbe ljmp div das and sti out in mul sub ja jb cmp jbe dec sub sbb push or (bad) fadds add addr16 out adc pop into lcall adc xor and loopne pop mov jb or add pop inc jp or in insb pop les ljmp add or xchg push (bad) sbb adc clc inc mov mov test dec sbb cmp jnp add and ret mov mov rclb adc jle inc pop inc pop and sub mov and dec mov lea mov (bad) ja and add movl inc add add adc addr16 sbb test adc mov or (bad) aaa mov mov and je mov cmp lea adc or jnp sub jne cs sti sub add inc bound xlat stc call sub mov add sub jnp jg movsl incb mov lret sub cmp push ja sbb mov sbb leave cmp mov sbb mov jbe push add pop sub out sbb and xchg test adc pop push adc scas pop mov (bad) (bad) mov jne test mov je sbb ja loop fsubl ret jbe popf jp add and daa jl hlt sub mov and negb (bad) int and xlat mov sub nop adc add popa mov in jmp and fstps sub bound cmp gs push pop lcall pop arpl push adc fldt jns mov mov mov rcl test insb je mov idiv test into cmp jb cmp ja add cmp or lds (bad) cmp xor cli (bad) sti mov mov movb cld rcrl xor aas push sbb (bad) jmp pop repz add push push push mov adc jo outsl iret test lcall fadds (bad) mov sti ret shl push or aam push (bad) divl lret rcll insb cmc stc xor lock xor sbb or lret and jnp add roll mov test jl jne out inc cld (bad) mov add ss out shl cmp sbb dec mov adc xchg sub cmp std cld jmp pushf mov mov xor nop xchg xchg push mov sbb out mov adc nop or jmp sbb shr inc adcb sbbb adc push std cmpsb pop or add shl mov sub push push inc sahf sbb add or sbb fildll arpl pusha addl test pop add mov inc jno ret dec mov fcmovnb mov sub fnop orl das cmp cmp sbb add add push cld xchg in test (bad) xchg sbb sahf clc pop inc clc sbb je dec or mov or jbe orl add ja adc cmp cmp ljmp adc mov test jp lods fdivs push adc pop sbb lcall inc out test (bad) in jne push xor mov mov hlt orl xor jle push inc adc add xchg mov push lret scas addb aam aam test sahf xor push aam dec lcall (bad) xor mov mov add pop sahf adc in mov add jnp arpl ja je sbb inc and (bad) pop sub inc jmp jmp cmc inc (bad) push push adc adc ds jne or imul hlt sbb jne jae jns push adc mov add sub roll add das arpl and xor inc mov gs jmp or add mov sbb pop movsl xchg dec cmp jge cmp jle and decl addr16 fcoms jge pop inc (bad) mov adc mov cmp add jbe nop adcb inc pop mov or bound sub push push scas clc sub inc add mov (bad) pop ret sbb lds xor push xor xor and cmp notb or pop mov js jae sbb icebp pop jmp pop pushf add mov out adc push hlt fiaddl push or cmpsl inc fimull add sbb push incl fldl mov outsl sub mov or sbb and scas lea push daa or push xchg pop mov pop add jge rep cmpsb or pop fiaddl das (bad) jo fcomi add sbb mov mov rolb lock mov push popa xchg incb xor xor mov negb (bad) call test mov adc into inc and inc or mov add test outsl (bad) mov pop arpl lea push push lea pop dec mov pop pop pop mov dec js push sahf mov push sbb or push fnsave push push std dec in sbb mov addl mov cmpsb (bad) xor jmp mov mov or call or xchg sarl jb sbb test add out add into pusha push add xchg or and leave push mov lea orb push sbb inc push je mov push sbb rorl jae testb add psadbw lods repnz fisubl ja add add test add and or push pop loop jnp dec inc arpl cmp shrl andl xchg mov adc or in in (bad) or fadds jge pop call jg mov push adc jnp and mov jne xor or jne fisttpll cmp jecxz pop cs or mov stos and or add (bad) mov pop push jecxz xorb add pop dec shr sbb cld add or xchg jg int3 sub jnp imul or jnp ret add cmp mov fistl pop and insb imul and adc inc add add ret and and xchg (bad) fwait sbb mov mov or pop into mov mov out adc cs adc xchg (bad) pusha add in or das mov lods add push int push sub inc adc idivb es inc (bad) aas add lea push push or clc test sbb jo jle sub mov test mov add pop inc and ret or mov fbstp mov icebp cmpsl or cmp jl decb (bad) fidivr scas pop adc (bad) mov adc jl push xor mov push jl mov dec lds fldenv mov lods fcompl inc int3 add or scas js jnp push fdivs and fsubs or dec pop jecxz jo testl nop adc mov cmp push test inc je fsub jb outsl mov out mov push (bad) sub add or cmp cld dec dec pop pop adc cmp jae mov push add jle enter negb mov rol push push insb cmp adc add adc mov xchg add or test jmp adc out mov cld jl pop fcmovnbe (bad) icebp fs cmpl jb rcrb push mov jne push pop sbb sbb push adc jmp mov subb push dec adc add out mov lods cmp or (bad) call sub mov add xchg or mov mov in xchg test fimull pushl (bad) in add mov adc adc jl sub jbe adc stc sub push inc test das mov sbb cmp fbstp add add push movsl adc push push sti add add out jl push jmp add pop jmp cmp sbb je inc and sbb cmp sub sbb mov xchg sub pop fild dec and push and adc rcrb (bad) (bad) je (bad) or add push pop adc aas or jp push ds addl das icebp aaa dec je dec jne push inc or ja jbe andl sbb xchg test mov adc push mov add call add es sub aaa mov push popa rcrb insl add scas dec or inc pop add andl aad push cmp pop (bad) mov add add cmpb lea cmp je cs add sbb mov xchg sub mov mov lds loop cmp pop xchg and inc mov inc test lds (bad) jae push cmp jl iret jg sbb cli adc sarb cmpb sub inc pop cltd test hlt cwtl mov cmp or push sub loopne push push cmp push inc nop test fimul mov inc add xlat popf scas add push inc lea test cmp or lea idivl orb jmp je std or mov dec add int push shrb dec or push add push inc push jne bound cmp (bad) jae sub in pop pop mov insl imul sub or sahf inc add or jge or andb mov pop xchg pop jle inc dec daa pop and outsb nop push stos loopne rolb ret or inc inc xchg jecxz push pop rcrl out push xor (bad) pop addr16 adc mov or loopne cmpl mov or pop ljmp xchg xor push cmp ss cmp cmp fsub jae push adc jg aas cmp jg adc xor call jle lret into pop sub scas adc jle jbe pop inc push mov das inc mov ret add push sub outsb and or inc jl jle sub mov hlt orl push gs push mov sbb mov or ja mov inc enter je push hlt mov in inc les add jmp cmp xor inc sbb dec mov add popf dec lea and test mov mov nop (bad) and cmp test rcll inc sbbl insb out add mov test movsb sar push aam push add pop gs mov xor shlb xor dec into pop or loope dec or clc mov xlat je cmp pop jl mov and cmp testb mov add sbb testb jmp add subl scas sbb jmp and jge xor push jb push je mov xor je test jb cmp jbe in push inc pop lods adc (bad) je out mov push lock call in jmp mov and imul sbb xchg sub add push ljmp jo push add add es rorb mov pop adc jmp push mov scas mov adc push xor xchg fs push sbb lea dec cltd push push push mov sbb ss jne (bad) mov daa cli (bad) loopne or or testl sub outsl sbb jb push push sub std xor and jg adc or iret and cmp pop push or mov push rorl pop nop mov pop sbb inc call mov das push or test divl inc sbb or cmp jb cmp or xlat or xchg add popa and xor mov cmp nop mov lea jl pop repz das add and add lods push punpckhdq imul jb adc push out orb lock mov hlt cmp in sub adc push popf outsb leave sub orl mov dec push cmp icebp lock or and test push adc cmp xchg push add xchg mov js add add sti sub pushf lea ret (bad) push mov sub addb jns sbb or fisttpl outsb adc or mov stos push add xchg mov mov adc lds mov sbb lds rol sbb (bad) jle adc cmp in add iret lods mov push shlb and sub and fwait mov loop dec sbb pop pop outsb adc push les mov imul fdivl pop jl (bad) xor sub mov pushw invd pop jge test fcomi iret popa jmp dec in push nop inc xor or nop xor test mov jne jbe and add inc sbb mov jl jo inc xorl mov pop sub cmp out and or cmp clc std xchg add les fidivrl insb fistp mov xor pop inc cmpsb arpl mov xor sub jne cmpl outsb and lret mov adc stos sub adc add adc mov sub test mov ret add (bad) sbb sub jo or loop jo jns (bad) mov and push cmp mov push mov dec and mov mulb and mov stc adc aam sub or fdivl inc and shrb les imul popa pop mov add lock or sbb mov jne adc and pop mov int mov or or js push mov ficom mov inc or fdivs pop loopne sbbl inc or test insb mov xor sbb xchg inc je mov std frstor ds int3 (bad) fxch fdivr cmp loop mov pop jb gs in mov fsubs cwtl mov cmp mov fildll pushf adc pusha xchg cmp hlt adc push popa or jge call sub popa test test and jae les push or dec in ret fcomps gs mov sub inc lds mov add or push sbb sbb push xchg add inc cmp add adc lcall add out dec popf ds push inc add push add out xor cmp push iret or ror shlb mov sub and pop pop cmp js adc pop cmp cmp fildll cmp jns fstl cmp fucomip xchg or cwtl mov clc push arpl inc cmp js mov movsb jge inc push and cmp fisttpll add xor cmp test mov fild cmp rcrl xchg jbe jge daa and adc add sar les out frstor nop push and pop cmp movsl mov adc add lods jbe lods push aas das cmp or dec push xchg pop pop test add push push add testl lcall cmp lds cmpsl mov insb and mov dec mov aaa subb ret int inc jg test test (bad) dec repnz cmp or add fsubrs ja jo mov cmp or add add stos test or and stos or mov cld jle xor jo stos ja inc rolb out dec mov loope push sub adc sbb mov mov out pop or add xor iret xchg popf inc clc xchg cmp jge (bad) or add or pop xlat cmp enter lods lock in ljmp jbe jnp aas cwtl clc cmp add enter xor hlt mov iret pushf cmp ss cmp mov test xchg mov mov lods cmp cmp inc (bad) mov and iret repz xchg cmp sbbl add subl and test dec jb movsl sub mov push aam sbb xchg js daa pop rolb or mov (bad) mov (bad) nop pop mov cmpsl sbb dec mov mov mov lret das or add and push inc push mov scas inc shlb int imul dec (bad) xor imul shl jmp cmpsb daa pop cmpsb imul sub std adc cltd gs xor fcoml test pop outsb mov add ud2 xor add dec fisubr dec nop mov inc dec aaa cmp mov add (bad) pushl xchg sub rcll mov dec mov (bad) out leave ljmp sbb fisttpll add add sarb popa push or sti out (bad) shrl ds leave loop and lfs flds sbb fsubl sbb scas cmp jg inc ret and insb popa je idiv mulb xor add inc outsl jo jb addr16 xor paddsb pushl and popa outsb sub and imul (bad) js out inc add or mov or in imul and jne mov adc jnp adcb fistp dec add or scas add cmp or adc add or pop or (bad) xor rorl add (bad) xor add or add lahf add add add and leave add and inc push add nop inc push sbb or inc push sbb or add insl out ljmp pop or or or imul add lods insb dec (bad) xor in sbb pop fdivrl dec (bad) xor jl add inc ret bound xor loop xchg push (bad) xor repnz dec lret push (bad) xor ljmp dec (bad) xor jp push xchg dec roll cmpsb cmpsb imul push xchg lcall mov imulb cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul movsl gs xchg lcall mov cmc imul imul imul mov adc adc fsubrl cmpsb jmp rcl cmpsb imul imul cmpsb imul sub stos stos imul jmp sbb fwait pop pop fcmovnu cmpsb imul imul cmpsb imul daa daa cmpsl cmpsl addr16 pop pop xchg imul imul imul cmpsb imul das das scas scas outsl lcall pop pop lahf imul imul imul dec (bad) xor adc jo xor rorl dec sub dec (bad) xor pop cmp inc and dec (bad) xor adc xor (bad) xor xlat add add and arpl or push ffree lds add xor or add or xor (bad) xor push push push add xor adc sbb adc lcall push jno imul negl les add or xor or or push xor and or adc adc adc xor sbb push xor push leave sbb xchg inc test std pop icebp ffree push popa or sbb adc adc xchg push sbb fs sbb cmp jg add mov mov add mov or jnp adc sbb stos jmp xor adc xchg xor push pusha jo test aaa or push imul fsubs pop xor dec sarb nop or outsb sub popa jb and insb gs punpcklbw je stos or mov sbb cmpsb imul imul adc mov ret jo push test or jmp add xor out imul or add imul imul sub shrl (bad) lcall add imul outsb and arpl je outsl outsb pusha jnp je dec adcl cs imul arpl gs outsl dec dec jb das in idiv dec inc push dec inc dec xor cs dec dec mov gs inc insb nop mov sti jae jb gs push gs popa insb jne inc std aaa push pop inc insb insb outsl push and inc js je jb scas in mov insl jae cmp xchg aad (bad) test lods stos gs stos stos movsb bsf push inc or sbb and and (bad) (bad) (bad) jmp daa sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc mov inc dec dec dec dec dec dec dec dec cmp fild pop pop pop pop pop pusha popa bound pop jle push adc push insb insl or jb je jbe js je or jp jl jle add imul loopne sub push rcr mov adc jmp dec inc push xor testb dec inc adc ret push fidivl xor std (bad) popa jo insb imul jae insl popa mov je insl mov je and insl fsubrs adc push xor push rcl bound jns daa sub pop sub je jns or inc sbb and push sub popa arpl daa pop jae mov sbb insl and insl fs xchg push push insl and lahf frstor in xor dec jmp into insl fmull data16 bound notb fcompl sbb pusha fs dec push fisubrl and jbe and mov jp or fs pusha in out frstor and addr16 outsl cmp and sub jnp imul lods ret outsl data16 (bad) pop push insb insb popa outsb xchg sub mov imul insb jb sahf sub push popa arpl popa xchg outsb popf in pop mov outsl jb inc cmp insb stos dec ljmp divl pop fcomp (bad) add add push inc pop dec gs jbe and adc das xor ret gs popa imul (bad) out sbb dec lahf pusha ror shrl pop xor cli pop imul into insb gs orl daa aaa jecxz imul aaa ss jbe subl jbe sbb jne mov mov daa xor pop sub int mov fsub pop rol sbb test outsb jmp jbe shrb inc and mov sbb arpl jbe push popa mov insl subl or repnz and pop nop fidiv sub enter push dec jge je push jnp out out sbb inc mov add ja bnd xor pop xor xchg inc xlat gs in mov jae dec data16 inc cmp je lea xchg mov scas xchg inc faddp add mov (bad) mov push imul ret cmovl daa or add cmp addr16 and shlb jne add xor rcr mulb cmp dec xor xchg adc jb jg mov testb fs jo inc outsl cmp xchg or fdivs add test dec flds add add leave add xchg and adc or adc addl pusha pop (bad) add and cmp and lret mov cltd push inc pusha add add test add sbb mov incl push insb pusha out or and add mov push adc adc lods (bad) (bad) (bad) incl test mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall lcall mov test stos stos lods lods scas scas mov mov mov mov mov mov mov ret (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) (bad) (bad) (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std nop dec xchg aad call lock pop lods adc push adc pop sub nop pop push lahf add jg dec cmp push int subb lods sti mov add or das scas add dec sub adc add daa sbb sti add jbe dec lea push push call inc push bound dec ja fsub imul mov inc out imul lea mov dec sbb mov pop push push dec fidivr jnp inc aaa jns aas cmp and pop mov or shlb push pushf jl cmp in push jne dec sub fidivr add daa push subb fwait nop mov dec bound roll mov jle or and cmc sarl and mov mov push (bad) and jb jns pop mov daa adc xor nop mov jns gs pusha push sbb andb mov fs addr16 jbe inc dec jo fmuls or imul fsubs mov lret sub jns mov mov xchg shrb pusha fsubr push dec inc and ds adc sbb xchg and orb and fs stos adc push dec clc in xchg sbb dec add sub mov or add inc imul pusha ss push ret push jg jae testl xchg ja pop (bad) ud2 dec xchg mov dec and outsb mov push dec jnp dec add jns xchg shrb add fs sbb (bad) outsl xlat test gs popa and sbb dec clc imul and add mov mov xor arpl dec xchg rcll add popa mov or fadds jg (bad) fwait mov mov das dec sub mov pop fbld fsubs inc sbb bound das or adc pop in mov xchg mov add cmp add add or add es jle mov add xor ds cmp sbb dec xlat pop and sub es lods jmp sub sub add fiadd aas cmp scas and ds lret pop push das daa pop pop shl push imulb outsb or sti je jo bound pop fptan sub fisubrl xchg xchg jo mov ds nop cli loopne ja sub js lcall pop dec imul je mov ficomp roll add or sub shl sbb mov add fcmovb inc dec pop cld xlat aaa imul cmpsb imul imul cmpsb imul xchg nop mov test imul imul dec sarl andb je shll cld aad add mov dec (bad) xor and call dec roll cwtl jo sub xor inc loopne mov mov xor hlt inc gs push outsl mov lock outsb pop push cmpsl jb pop xchg test dec lods jae push insb call arpl push imul jo cmovbe rorl outsl js push inc push mov jg cwtl jo xchg xchg sahf test adc movsl lods mov bound mov test pop sbb jo xor inc inc fmull pop cs push pop add or scas add test cmp (bad) incl lret test add add push fisttp mov aas add or out fimul push pop test dec add push jge add dec mov sbb arpl push shrl jp add aad imul mov adc add push add in cmc mov pop test scas jbe insb adc jle inc mov mov sbb cwtl insl fnsave rolb insb add jne sub sbb frstor or jb cwtl add mov mov sub das or pop push cmp cmp cmp mov jae xchg in mov lea int add cmp add test dec cmp (bad) (bad) jne punpcklwd fistpl add ja shrl and arpl outsl add adc mov outsl daa jae mov adc sbb xor jne inc fsubrs outsl add jo outsl pop aaa and dec jae (bad) ss gs add arpl out aaa bound insl sbb insl xor xlat xor ret inc or sahf fistpl in or out or jne inc inc xor inc and sub fadds xor ja add je lds push aas fcoms ffree sub scas aad or outsb add cli outsb sub inc xchg push add pop (bad) dec or push and mov test dec adc dec mov out pop pop mov xor adc (bad) mov sbb add lea lret ja jecxz int fldcw add or jne addr16 xchg add mov dec ss add aaa or inc pop ja inc shrl xor ss add mov fcmovnu push add das pop or jnp (bad) xchg jae js jb sbb dec push jle xchg xchg cmp adc add je sub sarl xchg and jg fiadd daa loope mov ja pop data16 or mov sub cwtl sbb pop test inc ret test and pop jae out inc cmp dec dec and (bad) dec sbb ss and je add aas aaa imul add inc sub xlat mov cwtl mov dec add dec cmove dec (bad) jbe fadds pop fwait jne imul fmuls rcrl mov or dec out and jmp inc int fildl inc add or scas mov dec fwait pop dec out inc (bad) mov sub cltd scas imul inc popa push or jb mov and sbb mov outsl pop inc pop icebp ja test mull ret je (bad) mov pop insl shll shl mov (bad) rolb xor mov xor test push inc jae outsl sbb or sbb sub jmp dec popa sti dec add and or inc sbb jo xor sbb out mov in jae push pop outsl inc les jae imul add inc lea or and add inc cmp out cs arpl mov xlat arpl mov pop test xchg test inc ss pop jae daa dec fldcw insb adc xor mov sub add lds push fldcw cmp ss cmc adc call pop fisttpll hlt inc bound and jns lret and add jb push jecxz adc jg movsb add or popa outsb push jge es cmp or mulb insb add dec adc scas test jae mov test pusha inc xor sub jns xchg popf jo fs das adc addr16 addr16 pop pop addr16 jne add add dec ja jbe lods pop sub enter push jne popa in or mov inc push je dec jnp and stos out inc sbb sbb (bad) mov gs popa (bad) dec rorl add fcmovnu gs inc and push movsl addr16 add (bad) bound adc addr16 das addr16 add cmp push gs fsubrs popf add fistp jbe gs xchg sub lret stos jns sbb and insb xlat popa sub (bad) (bad) jmp xor cmp cmp aaa sub sub sub xor (bad) aaa data16 outsl cmp inc inc xor and inc inc inc daa aaa cli mov mov and aaa xor xor inc xor clc mov jb fs outsb or insl push sub loop sub lea sub push (bad) mov or add cmpb stc push adc pop iret pop push push push xor jae mov adc testl aaa lret push push xor (bad) ds inc add cmp loop push dec sub add mov roll outsb arpl add aaa pusha int inc mov jno pop add pop push mov lahf addr16 pop test and inc inc xchg jno nop pop inc add or pop dec xlat gs or dec in add dec cmp add adc sub add fbld sub dec jle adc add lret data16 push ss pusha adc add dec xrelease jmp sub mov or jb pop pop jae (bad) ljmp dec dec fmuls adc xor push (bad) dec pop or out and cmc xor pop pop pop xchg sub and (bad) aas mov xor sbb and dec xor (bad) (bad) (bad) cmp inc xchg cmp aam mov inc mov adc repnz jecxz popa add daa push pop mov pop sti sarl inc cmp outsl lds ljmp xor outsl xor adc fcompl cmp sub mov add gs fadds jl jmp (bad) jne sub test push and mov and popa add aad mov and imul bound adc or cli xor jmp mov lea sbb xchg inc ret dec and sub xchg dec (bad) mov inc test ja daa inc dec cltd dec add adcl sbbb mov pop mull xchg push es je mov lea pop add in sub pop popa and aas arpl inc ret jnp cmp inc sbb sbb imul sub sub add popa aas xor xor call inc pop inc adc add int3 jp das jne mov leave out scas push and gs arpl add jae jb push insb fwait aaa sub sbb xchg inc sbb call jno daa jns dec cmp mov (bad) fadds and inc cmp lret jns sbb cmp in js arpl dec inc out push insl addb mov or pop mov insl pop cmp mov sub add jg and mov mov cs add add mov rorl fdivs inc (bad) or jmp mov or or pxor out xor bound push cwtl sbb mov xor or inc pop jo mov sub dec cld adc and pop (bad) enter or push fmuls add mov xchg push push add add adc dec mov pop push int or das data16 sub mov add mov insb imul jnp,pn cmpsl or insl push test and add aam leave and add outsb lret out xor mov lds outsl push jmp dec xor jne xchg add pop fistl xchg pusha sti xor wrmsr nop inc scas cli add test sbb jb push push push inc push fistp idiv sub scas inc xchg and cmp aam jg push dec inc push pop inc outsl or jp fcoms outsl push imul test add or cli inc adc fbstp adc vmread push lock adc imul fsubs push es inc subb adc mov jge mov daa add jne xor pusha outsl popa mov iret fwait cmpb xor sbb mov jg ja mov jg sete xor mov mov pop sysret in inc jle adc sbbb das mov iret insl sbb xchg das inc inc (bad) insb and xor inc pop and fmuls cmp or xchg sub cmp inc (bad) and inc mov jb int3 loope aas adc das xor push pop fadds pushf push pop enter call jnp fisttpll mov mov lahf pusha pop and (bad) or sbb pop jmp adc cmp jno and or aas xor dec pop or je je movsb nopl negl dec ja xchg sbb add ljmp add insl adc das mov mov add aas lahf sbb andps dec cmc jl add (bad) sbb repnz and sub mov dec sbb or xor inc int3 rolb mov add sbb mov add or push aas clc pop popa out push adc push fmulp add ljmp cli xor or fs test es sbb add cmp mul or and inc push popa xor sbb adc push dec cld inc inc or push mov jb xchg xchg or inc movb and fsubrs in cmp jnp cmpsl insb cmp xor inc js mov cmp add mov frstor add faddl and pusha adcl add inc push sbb gs ja jo sbb mov push cwtl sub mov or fcoms (bad) rcr and and fldenv mov in mov sbb sub nop sub dec push in push rorl mull (bad) (bad) idivb push push adc sbbl lcall mov add cmpb flds pop xchg popl jne or inc dec lods adc add inc rol notb sub cmp inc add xchg rolb lahf mov sti outsl add xchg mov xchg inc jnp (bad) or lcall loop mov inc sti pop jbe mov xor cltd push mov jge and popf sbb sahf inc add stos dec inc push push push and xchg mov pop outsb gs fs mov iret xor arpl mov insl or pop and xchg sbb jbe add (bad) xor mulb jae mov pop add stos adc cwtl insb divl je outsl fs and bound insb outsb sbb es aaa or pushl outsb jns xchg xchg in outsl xor pop jns bound jae push xchg jb bound das jae shrl xchg sbb (bad) ja and and jo pusha add pop lods imul popa scas xor jbe mov push bound data16 jne push roll push pusha adc in gs adc adc (bad) cmp loope outsb leave das sub outsb movaps add sub test push add dec mov push hlt jae add add mov in sub out cmpb adc adc das push divl pop sbb pusha inc add pop mov push fsubs roll jae pop pop pop jo lods jmp xor inc rolb pop or mov push sbb and mov pop rolb inc or loopne push pop pop jne pusha addl pop nop push push pop cmp fsubs pop js cmp rolb fsubs push pop adc push pusha orl pusha orl add pusha pop aaa fcoms push push pop jecxz orl pop xor enter pusha jg pop fs and mov sbbl maxps inc pop call fcomps pop cwtl xchg roll lods push pop jl cmp roll test lahf pop pop insb pop push sbb pop mov sbb dec pop clc jg pop fs push push pop adc mov and jb xor roll insb (bad) decl pop bound push sbb pop movsb lar (bad) sbb inc pop in pop pop insb mov push pop pop sbb xchg pushl pop jp cmp roll insb aam adc push xchg insb mov pop mov lahf mov dec pop hlt jg sbb pusha adcl pop push push (bad) mov insb mov pushl pop jbe ss insb mov push int3 decl pop popw sbb push sbb pop lods pandn or pop in jg or pop pop push pop pushf or arpl jle ds pop fdivr sbb outsb pop fsubs or push pop dec orl pushl orl or jno xor ret ss popa pop and mov sgdtl addl loop pop pop sbb shlb xchg (bad) jns fcoms sar imul sub mov pop xchg push sbb mov dec pop repnz icebp push sbb adc fadds aas lret ss gs and mov pop test inc roll pop pop mov imul sbb (bad) insl pop popa roll sub and fmuls jmp inc ljmp roll decl and cmpsb insb mov (bad) maxps insb dec sbb lcall sbb push sbb pop cmp xchg pop sbb pop mov lahf mov pusha addl pop idiv push fcoms shlb pop pushl ss ss aas into jmp mov orl xchg push sbb xchg inc pop out jmp pop pop sahf ljmp roll lcall insb mov outsl pop das pop mov add pop and inc push xor inc leave xchg (bad) mov push xor push test or flds inc leave mov or movsl in inc leave push xchg aad xor push xor lods in xor inc leave push mov inc ret mov jecxz (bad) xor push xor xchg or inc jmp inc leave push xor mov and xor inc xlat mov xor iret or inc leave scas out lahf leave push xor inc (bad) jg lahf push pop mov add fild cmp sub mov ret in inc aas fistp pop mov lcall push pop bsf arpl ffreep punpcklbw add xchg push insb mov daa popa aas add dec push cmp add xor or inc pop mov xor sbb xchg jae mov xchg or bound add bound daa dec lds inc add push inc and lds xor jns adc or cs je fbstp sub add push push adc jecxz or outsl push pop (bad) xor incl add and lsl addl add in xchg xor ret push push cld cs inc push jne in push jno inc inc adc add insb test mov dec popa sub and add sub pop sub incl add add or cwtl mov mov jge or and cmpsb fild sbb stc leave mov cld inc jle test into push and cmp mov mov inc pop fsubrs outsb mov iret mov mov sti pop mov jle or push ficompl pop add lret fisubrl xor rcr fsubp nop xor in xor mov and mov test inc pop mov rorb stos mov add mov divb lahf ds mov inc das and or pop jmp jg pop mov jnp jecxz daa data16 sbb mov push ret arpl ret or (bad) nop roll or or or or sbb cmp notl and fcoms adc push sbb pop and nop inc inc push xor insb mov push push pop push pop pop jnp dec add pop jo pusha orl das orl pop (bad) pop xorl xchg add push sbb pop (bad) movsb outsl cmpsl sbb pop mov into pop xlat xor push pop sbb xchg outsb in das and and enter pop sbb iret jge nop pop mov movl je push pushf pop adc dec rorl sbb in movb sarl jl push pop adc cmpsb push xor rol inc adc or cwtl pop and scas jnp pop js ret inc repz jp fstpl je cld enter mov pusha je or or dec or add add nop xchg xchg xchg or and js sub mov inc rolb and pop sub pop das nop test jmp jnp mov addl sub mov insl adc in loopne fdivs enter xor shrl (bad) xor test xor (bad) xor push xor inc cmp xor push (bad) je sub adc jmp add roll add and int3 rorb jae lret out andl xchg xchg inc add andl cs or push out daa ljmp lock jbe test push push push lahf push inc aas test inc mov inc inc imul add dec nop mov or or jne das mov aam fwait scas imul fdivs add add stos pop add lahf ja je test xacquire das add mov fisubrl add popf add cmp loopne mov cwtl ss (bad) xor fs and cmc (bad) jg cmp in push pop insb push push sbb fidivl mov (bad) (bad) (bad) incl mov mov mov push xchg mov and fstp push out (bad) (bad) (bad) lcall les adc orl and and pop sbb and incl (bad) les lods jno adc fadd loopne cmp inc jl popa pop idiv (bad) lahf out jl (bad) (bad) (bad) (bad) (bad) jae mov cmp inc add sub test (bad) fwait scas add lret mov pop sub cmp insl mov ds out push test mov in adc xchg (bad) mov (bad) (bad) pushl lds insb lea out je js cmpsl decl jp (bad) (bad) (bad) incl pushl scas sbb cli (bad) lods insb into dec lahf and mov int (bad) (bad) (bad) jmp sub fcoml cmpsl dec (bad) int3 bound sbb outsb into (bad) (bad) (bad) jmp sbb insb stos xchg sti inc data16 icebp xor xchg or and ret push xchg xor incl (bad) (bad) stc call scas inc mov pop icebp sub or call (bad) in (bad) mulb lds xor inc jns adc (bad) (bad) (bad) pop out push xchg push cld push fiadd lcall and mov sar (bad) inc andl jg and std into inc in and push xchg xchg pop adc dec movsb xor insb dec dec or mov cmpsl ror sub rorl mov or jbe mov lcall in lods xor and mov or (bad) (bad) ljmp mov jne loop leave jns popa aad (bad) cmp push jecxz scas xchg pop out pop mov (bad) (bad) ljmp inc (bad) nop sbb push mov insb pop mov rcr loop (bad) fstpt sbbl pop jne rorl mov mov (bad) ljmp pop or jo cmpsb mov call sub push pop (bad) dec adc sub and loope xor aam sub or xchg les aam cwtl imul (bad) mov dec hlt jne js loope cmp add notb push inc (bad) (bad) push jge inc dec popf add and dec lods lods (bad) push lret cmpsl jg test mov push mov mov out xchg adc cmpsl stos cmp ret lods cmp pop imul pop mov in push lods outsb test pop fisttpll ds call (bad) ljmp imul push sbb gs js sar idiv fldl negl mov and adc stc dec sbb sbb push sub das cld pushl inc ja fmuls hlt in pop cmp (bad) mov xchg ja,pt (bad) (bad) lcall unpcklps xor sbb repnz xchg jp pop mov outsl add gs (bad) lcall scas mov pop loopne add push cmp jmp (bad) (bad) call cltd mov sub or or (bad) jp pop push sbb in mov inc cmc dec sbb xchg sarl insl and cmp nop sbb pop add mov xchg mulb mov mov cmp jmp jbe and (bad) (bad) (bad) fsubl xor or xchg nop adc and jp and (bad) (bad) ljmp xchg inc adc pop int3 pop (bad) shrl lds push repz jmp cli dec incl lcall ret (bad) mov inc adc jecxz pushl (bad) pushl fidiv in fsubrs dec loope dec arpl push and (bad) (bad) (bad) jmp pop out cwtl mov inc xchg adc pop jbe cmp mov test (bad) jmp cwtl and mov (bad) jb inc mov loop aaa aaa mov jge pop out lahf (bad) (bad) (bad) pushl out push mov jnp xchg jl cmp and sub or dec hlt mov (bad) (bad) (bad) pushl out mov sub dec jb xchg dec and mov xor outsl into push das cld (bad) (bad) std daa in loope xchg adc xchg mov adc popf cs (bad) (bad) incl imul fadd std cmc or push int adc push fiadd mov (bad) (bad) (bad) (bad) fldcw jl adc jae nop out jl adc (bad) xor fidivrl jge movsb cli in (bad) (bad) call sahf sbb mov pushf adc aas arpl mov dec add test icebp (bad) (bad) push inc les aaa arpl jge xor cmp jae inc (bad) dec (bad) int3 jmp (bad) (bad) (bad) mov sti movsb sti mov mov mull shrl jno (bad) (bad) (bad) pushl sti cmp cmp pop loopne jo mov sub sub pop lock (bad) (bad) jg pop xchg lret xchg repz aaa icebp in mov aas sbb dec cs or out push jg mov jne jg outsl jecxz (bad) cmc cmpsb in (bad) mov outsl lods xor (bad) fisubl pop pop scas pop dec pop cltd movsl mov mov fcoml enter fs sbb (bad) jmp pop jne xor fidivl ret ljmp aaa cld incl ljmp sbb loopne fistpll idivl (bad) pushl mov push or sub ret xor mov (bad) cs (bad) lcall cmp jge pop inc sbb cmpsl mov xchg popa xor stos (bad) (bad) (bad) decl xchg (bad) out fwait (bad) jne xor jne arpl jno pop jecxz (bad) (bad) (bad) call fldenv jl cmpsl sbb inc std jmp adc in test in insb xor push jne insl (bad) mov mov xchg int in sti add push push xchg dec sbb das mov ljmp hlt lea add arpl sbb out popf in jo (bad) jl push push call les jge dec dec in mov sub lods lcall (bad) js loopne lock dec lods movsl cli sti arpl xor and repnz pop aaa fmuls or call cmc stos ret (bad) (bad) (bad) (bad) mov jb dec cmpsb nop stos jle scas icebp sub push cmp push out mov loopne (bad) mov cwtl xor cmpsl jmp gs pop push imul iret hlt push add sbb decl divl into mov aas imul das or or (bad) (bad) (bad) lcall or push jmp cltd out jno ds xchg frstor leave sub cmp lds sub loop adc push pop mov movsl pop fildl pop sarl das stos lods inc stos jno outsl jmp add int scas dec (bad) dec xorl test pushl out mov cmp leave pop add mov clc sbb mov (bad) (bad) (bad) lcall sub sub mov mov ficom lds xor (bad) (bad) incl pop lret mov pop and in pop addr16 jp mov outsl fld dec adc cli sub (bad) ja and loope lcall or popf test (bad) (bad) pushl fild inc sub push das out pop jno mov int3 xchg sub pop or sub push sahf mov sbb mov lcall call test in in push das icebp (bad) (bad) jg cmp xor gs enter test sbb sbb mov incl mov cmpsb pop and pop out pop (bad) incl mov jbe lret xor xchg (bad) mov push scas (bad) (bad) ljmp mov cmp sbb sbb fwait and push cmc sub (bad) cli dec aam in sahf or (bad) repnz and xor cltd cmp push adc dec mov push std bound les inc negb ljmp lock test mov (bad) dec (bad) mov push ds (bad) jmp vmread je popf cmp lcall lods xor jp in stos subb pop ret dec clc push add fistpll andl jmp out (bad) cmp in clc int inc mov inc push jo (bad) call push sub mov inc xchg add mov arpl mov sub gs xchg (bad) (bad) (bad) fcomps mov int mov (bad) arpl js xchg push xchg ficompl fisubrl (bad) (bad) mov mov fwait xchg cmp inc mov aam pop mov and (bad) (bad) (bad) js std sbb sbb sub push xor sub dec out call mov (bad) (bad) (bad) (bad) jmp les cmpsl push popa xor mov stos movsw mov xchg popa adc mov popf pop push inc ficoml in jecxz sbbb sub xchg push mov (bad) mov jnp add jno dec sub std mov sahf stos icebp add lods (bad) decl aaa fiadd lock mov xchg sahf imul mov cld (bad) xchg leave ret outsl fidivrl addr16 ds jge mov das out std scas or dec or (bad) mov movsb sbb inc cli dec stos ja jne fcompl insl out decl pmaxsw dec pop icebp xchg outsb mov inc addr16 cmp in and (bad) (bad) (bad) call dec fisub out xchg imul xchg xor add mov mov jecxz dec xchg clc (bad) incl scas mov fisubrl mov jg repz pop jb sub addl jb das jne dec (bad) fwait xor (bad) jg adc lret mov stos push repz orb xchg xor hlt push lods fimull ljmp add dec (bad) repz out xor (bad) (bad) ljmp mull lahf dec cli xor sbb mov adc sub sbb lea stos hlt jns inc es aam mov adc jmp fsubrp inc (bad) (bad) (bad) call addr16 (bad) jecxz and dec pop mov ljmp xor ret xchg aas pop pop subl (bad) hlt jnp sbb inc mov adc (bad) pushl xlat mov lret push sbb sbb in inc xchg mov mov repnz scas dec in (bad) pop icebp add loope (bad) ljmp (bad) and pop adc adc mov iret ja flds cld ja pop (bad) xor mov (bad) mov cmpsb fsubrs vpunpcklwd in push mov push (bad) (bad) (bad) lcall test mov add in je arpl xor jno mov lcall sti lods mov in or inc sbb xchg test out jecxz lcall (bad) mov dec xchg shlb inc jb sbb inc psrlw movl std (bad) decl xor arpl inc aaa dec mov bound mov or rol adc (bad) push jmp xchg imul insl add (bad) (bad) pushl jge sbb cmp push bound mov enter insb int and dec lods jle mov sub ljmp decl mov dec mov push stos rorl test insl rcll push (bad) (bad) call push into hlt fcomi out jno iret push mov dec out pop loop idivw dec and fdivr ljmp cmp in out (bad) (bad) jg into iret sub sub dec int3 dec lods test dec xchg jns repnz push mov andl incl mov dec pop in test push mov (bad) decl inc adc sbb xor mov shrb call aas gs shrl or mov jg cmp cmp insl sub sub (bad) inc pusha in mov sub inc inc leave mov (bad) inc xor mov jmp int add mov cmpsl fnstenv mov cli mov int3 in dec dec add test rorl decl aam pushf clc mov mov adc jo sbb jbe mov sbb lea pop loop adc outsl je shrb and jp xchg sub int inc push mov test dec push lret pop jno aaa inc dec std pushl clc jno or fldt (bad) push dec sbb mov (bad) mov dec add xor in pop (bad) (bad) pushl nop ja test pop leave push xchg popf jno outsb lahf and adcl ss cli mov and scas (bad) ja (bad) (bad) decl clc flds inc dec xchg push inc xchg int3 inc dec xor jg dec std and pushl adc das inc dec cltd jmp mov ret ljmp pop inc imul adc xchg sbb jl lea mov mov mov inc mov (bad) jmp (bad) adc jbe notl pop fsubrl pop add mov xlat outsb pop (bad) (bad) (bad) fildl popf or mov mov sahf insb xchg cli dec (bad) (bad) cmp mov xchg inc sub pop fidivl sar repnz jns jecxz mov mov and icebp (bad) (bad) loope lock pushl jecxz jl gs bound (bad) sub leave sub int3 mov test in mov ds push xor jp pop addr16 or (bad) (bad) cmp (bad) and cmc push cs push push add mov dec idiv pop div push (bad) decl in test dec loop shll mov cwtl add dec inc sbb rolb pop and (bad) pop into (bad) (bad) (bad) call ja pop imulb adc and xchg pop pop mov jo inc inc jle dec xor outsl jmp bound jae outsb divps or or insb aaa (bad) jg push mov sub jns and add and dec fistpll (bad) (bad) jmp aas pop fwait push fisttpl dec or ja (bad) mov fcompl pop (bad) mov jne ljmp std jmp movsl sbb jne test leave cs lds pop cmp jno sub xor sbb addl cmpsb fs lock adc (bad) (bad) jg mov inc aam (bad) (bad) popf in out stc into cmp std repz and add (bad) (bad) pushl mov add mov sub lahf aaa mov (bad) jno sbb push or cmp sbb enter lds data16 (bad) (bad) mov xchg in stc lret mov adc fs mov insb aam in xor hlt jmp aad rcl repnz dec mov jl inc std or imul ljmp push and fs bound (bad) (bad) (bad) call in push add (bad) bound mov leave int3 subl cmp push clc rolb mov or push bound outsl xlat fidivl gs pop fcmovb lahf xchg in mov scas in and (bad) (bad) (bad) jnp jns,pt sti mov sub repz xor cmpsl loope in icebp cltd inc std (bad) call mov sbb push roll or (bad) jg das mov inc mov sub inc lret test ss pushf fwait jle (bad) (bad) jg pop mov insl and sahf cld lods cmp fistp pop pop js test jbe sub mov mov sub out dec hlt fiadd and xchg ljmp clc jae jecxz cli or lcall (bad) lcall jno or lcall push lods or sub leave cmpsb ljmp pop cmp mov cltd aaa rcrb ja push mov iret or lahf mov (bad) jmp (bad) push xor mov fiadd push loop pop xor lahf push mov and mov inc test cmpsb int3 dec repnz es xor mov imul fs sbb jmp aas clc xor in push rol push xor arpl push stos (bad) (bad) jg clc xchg sub outsl mov adc adc push cld pop adc ljmp push lds push dec add mov cmc inc dec jmp xor das jne (bad) cmpl (bad) mov popa gs add jg leave clc mov pop incl loope movsl rcrb (bad) outsl or jmp xchg jge loop ja sbb cli push cmpsb add cltd push sub mov call cld fsts mov xchg pop es pushl mov ret push out pushf enter (bad) aam call adc jae movsl int3 imulb push repnz sarl (bad) pop fbstp fdivr (bad) lcall jb push mov repnz jle lea add inc je and lret jmp mov jbe mov sbb xor into (bad) lcall std daa js test and daa dec dec fimul and xchg jmp ljmp sub int3 aad push cmp cltd fwait dec leave cmp xchg decb (bad) ja pop cli (bad) (bad) sti mov xchg fwait std dec fildl pusha fcmovnb xchg stc imul stos dec sar (bad) pushl (bad) rcll std scas cmpsb imul ret ss insl (bad) lods xor dec pop or mov inc in and sarb loopne das push or jmp adc push icebp inc stos shrb inc adc inc aaa inc pop (bad) call dec (bad) fiadd push test leave or push dec or adc push (bad) (bad) jg jmp push loope sbb push sbb sub xchg (bad) (bad) (bad) cmp rcll cmp imulb inc cli enter mov (bad) fildll in sbb jns (bad) mov inc xlat cmpl loop mov xor pop xchg jmp clc mov mov mull (bad) (bad) (bad) call jns cmp aaa in xor jmp pop jl dec dec mov sbb xchg pop jo fwait pop mov sub addr16 shlb xchg dec pop sbb (bad) (bad) (bad) jg repz mov les sub mov dec mov mov and in hlt xchg (bad) decl mov or movsb mov leave dec xchg cs jnp movsb lock popa lock dec sbb sbb ret (bad) (bad) ljmp nop mov (bad) out mov or sbb (bad) leave (bad) push mov jbe daa cmp je jl ljmp sbb aas push dec std imul push std leave xchg mov repnz les mov jecxz in out div scas mov imulb mov pop pop adc jbe jecxz (bad) mov ljmp and hlt adc jp cmpsl imul push pop push mov mov (bad) jg adc dec shrl dec jl xor rorl cmpsb incl lcall es test mov (bad) jne imul xlat movsb fimul pop loopne sub jg push mov cmp xor (bad) decl cmc jg sbb jl push inc fsqrt inc in stc mov popf nop cmp das mov lcall in mov (bad) (bad) jmp repnz and dec loopne mov sbb ret orl xchg jle mov xchg outsb push loope sub lds (bad) mov sub mov fxam rorl fidivr lock lock repz xchg fistpll (bad) incl jp push push pop mov jle fstps adc mov sub xor dec sbb mov cmp push push push lcall cld dec fwait notl (bad) pushf arpl pushf push inc je xchg je jo loope call fdivrs adc inc popl mov clc xor (bad) ljmp push sub gs out jae or sub (bad) fstl and std (bad) ljmp mov test mov cmp pop ja mov add scas cmpsb jp mov xchg loop mov les pop mov xor ret scas pop (bad) (bad) pop cmp (bad) (bad) incl je inc cmp cmp xor sahf (bad) mov mov push imul stc ret mov xchg cmc push push sahf jl outsb or or cmc and jne (bad) mov mov imul cs jl mov dec push int3 mov xchg (bad) sbb out mov rorl (bad) and lcall movsl add movsb movnti call pop mov mov and jg mov std add or xchg dec mov sbb sub idivb pop adc mov stc sahf and scas fstpt sbb xor xchg in pop add call inc jle mov pop cwtd stos (bad) xor cld (bad) jmp pop out dec mov pop pusha jge xor sbb pop mov jno add xchg jp in jmp in daa ss or mov sbb (bad) (bad) lcall stos in push imul dec (bad) out or adc add (bad) ret fimul lcall (bad) in leave mov push into subl xchg dec leave movsb lret and xchg gs test pushl xchg adc sahf mov and pop orb ljmp add sbb ficom jb stos cmp (bad) (bad) decl sbb xchg pushf jle push xlat shrl dec (bad) (bad) jg faddp sti jmp gs (bad) (bad) (bad) mov xorb mov aad add out in popf movsb push mov dec xchg cmpsl mov mov inc ret mov cmpsl inc cmp clc adc xchg addb or fild push and mov nop popa in inc std pop std mov lock cli imul (bad) (bad) lcall imul jb cwtl mov sahf cs je sar dec jg cmpb jae pusha adc std hlt or adc das lock rcrb ljmp arpl (bad) (bad) ljmp sub (bad) push js sbb or in add ror nop and (bad) decl push into mov in xor xor (bad) mul cmp mov mov pop jecxz cmc pop lret mov xchg or xor xchg inc and scas enter je push pop rorl fisubrl (bad) incl int3 push and xchg push or pop mov push cmp insb pop push push (bad) (bad) (bad) pushl mov mov test out push icebp mov pop arpl clc (bad) call leave push mov pop cmp xchg lcall rolb dec lret (bad) lcall lahf sbb push fsubs in add test aad cmp jg (bad) (bad) cmp jbe push jns cmc test or insb and lret (bad) jecxz dec pushl xor add lcall daa lds (bad) ljmp fist out and cmp cmp xor decl test or test test fsubrs pop es rorl sbb ficom sub lahf or push ret or loope jo test xchg mov inc mov lahf adc les bound rorl decl (bad) ja outsl call (bad) imull mov adc pop and (bad) loope aaa rclb mov lods cmp fs daa jo xchg add je fcmovb jmp add xor push adc scas adc add loopne push fwait scas push out add shl sub fwait scas jmp inc call adc in add cmpsb je mov das xor andl push (bad) (bad) (bad) incl cmp sbb jbe mov mov add aas pop loope push mov std mov mov mov mov mov fwait (bad) call mov (bad) and or test (bad) fucomip decl and jbe mov mov mov in xchg push iret sti mov add xor cmp (bad) (bad) jmp inc repz pop and and push xchg movsb sub negl push (bad) jnp mulb mov mov mov cmp jp jge pushf mov out pop (bad) (bad) decl mov jno aas lock cli sbb ret jmp ljmp (bad) (bad) jmp push hlt int3 adc or insb pop xchg jne dec sti aas cmc outsl rcll xchg ss sub loope mov mov (bad) (bad) cmp or mov jmp jmp lret and mov ljmp jge popf ja imul xchg movsb je and loop sub ja mov lock in dec mov adc jo out xlat dec or hlt mov aas xchg and dec cli (bad) incb lret loope mov jb cmp cmp (bad) (bad) jmp xchg and fimull cmpsb fucomip mov sub adc add fadd sar std jmp inc enter pop xchg jle in xchg lahf pop jle push call iret clc jmp sub (bad) ljmp inc outsb stos int3 dec lock adc inc inc lea lcall rcrb test in jp repnz cmp and sub and add inc push jne (bad) pop pop and jns sarb es xchg mov xchg movsb sahf outsl leave xchg lods push cmp mov xchg mov dec sub jp pop cli hlt (bad) fistl scas leave pop push enter push xchg sub ljmp mov lods into cmc nop ljmp popa pop fiadd lock pop (bad) decl xor (bad) lea nop cmp and or cwtl and mov test cmp shl rcl xor (bad) ljmp mov fcoms stos stos (bad) xchg cmpsl jle nop dec and arpl or (bad) adc clc in pop (bad) dec push (bad) add or test incl mov adc scas sbb jg fsubrl lcall or cmp and ja mov ret mov pop cmp cltd pop ret aas notb sub xchg and xor push lock stos popf (bad) (bad) (bad) (bad) jge pop cmp int cwtl dec les daa inc xor jne cld icebp mov out les int3 (bad) (bad) (bad) jmp int3 mov xor int3 mov pop cwtl std mov (bad) decl jecxz rcll jae sarb bound sbb or out adc (bad) inc hlt ds lods jecxz xor add inc add sub incl pushl lahf into push xchg xchg in nop imul xor in fucomip decl les les dec pop std lcall jle mov pop push in pop cmpsb lcall jb sti xlat add lock or ljmp clc in push sbb das pop inc mov iret xor das push cmp push push xchg (bad) fisttpl inc jno ret mov jo repnz aad jmp mov es jge dec xor add push das icebp decl mov jecxz out jl fidivr ret mov outsl decl mov jb and cwtl stos mov out nop stc scas add add push sbb aas addr16 (bad) push pop in xchg cli (bad) (bad) jg dec add out or add test imul daa decb stos sbb adc sbb jecxz pusha pop adc mov cltd mov sahf xor jl test in fcoms rolb incl mov daa dec push cmp fisttpll cmp loop mov cltd xchg lret (bad) mov inc mov fistpl jbe inc or (bad) (bad) jle dec std adc jne cmp adc imul inc scas mov mov enter stc inc mov mov lock bound pushf loopne stc sbb inc push je push mov (bad) (bad) mov jle js sub mov and sbb test stc xor jp ret roll xchg into add divb cltd mov or (bad) (bad) (bad) call jo adc and push adc movsl (bad) inc mov sbb sub inc in and dec mull mov jmp js adc pop adc mov (bad) icebp in jne sar dec aaa sti fimul cmpsb sarl insb push gs sbb les pop incb and jbe lcall das sbb in std mov mov jmp dec push sti xor inc mov hlt pushl cld mov cmpsb mov sub pop dec sbb (bad) lcall pop push rolb xor or and xchg (bad) mov dec lock (bad) jmp fst mov adc jnp lret and int3 orb loop push adc (bad) ljmp insl cmp and xor es sbb test mov outsl popa mov mov in mov sti js mov (bad) jae lret cmp movsb std andb add insl (bad) cwtl sub pusha mov bound fstpt in (bad) in (bad) (bad) cmp push cmp jne flds nop pop fisttpl push jmp fucomip (bad) jmp dec mov or in aas or jg push jg or sbb sub je cwtl int3 sbb test inc and jg dec add push mov loopne ret test pop mov call movsb inc scas cli inc scas insb aaa mov outsl std mov adc and std mov cld test inc popa imul incl xchg dec popf jb notl pop out jbe aas dec jle pushf idivl (bad) decl loope cltd mov xor sar in inc push ljmp nop ret push mov mov hlt (bad) movsb enter sub rolb dec fmull cmc jne (bad) jg repnz adc cmpsl scas xchg and pop movsl add je xchg cmp test cmpsb mov add xchg xor fisubrl (bad) (bad) (bad) inc mov or mov in xchg dec frstor mov fnstenv xchg adc mov pop cltd push (bad) ret cwtl jae sub xchg fs jge fucomip lods xchg xchg xchg in jge ja je int3 pop inc push jg (bad) fucomip add icebp aad sbb (bad) cli call mov inc or fcmovb cltd ja mov ljmp clc call int3 (bad) fmuls inc int xor in cs xchg inc or test fidivl or push pop (bad) (bad) (bad) incl jecxz testl insl push xchg xor es outsb mov add xchg icebp push je popl call cli and add movsb xor dec push mov jbe popf popa mov (bad) das lock jno cmpl or (bad) ljmp std out lods mov in cli mov sub mov decl mov stos int das or lock (bad) inc jg lods lea push push ljmp in mov nop pop insb ret cld aam rclb pushf jge insl xor sbb (bad) pushl fisub mov add testl mov aas outsl icebp pushl je movsb xchg push lret punpckldq push add (bad) or and data16 dec push arpl aad adc in xor (bad) lret (bad) call rep (bad) sbb fbstp stos ljmp mov push out push shlb cmp mov cmp aad lcall jb cli sub sub dec (bad) push (bad) (bad) (bad) ljmp xor sub fnstcw cli sub jmp sub pop and lcall incl mov cmp out hlt lahf int3 aad xor test ljmp mov dec sbb inc (bad) ljmp mov stos pop cmc xor push sub iret ret adc sbb xchg (bad) (bad) lcall push sub flds add mov decl sti cli sub xchg sub cmp jns (bad) (bad) lcall test mov dec mov xchg das mov fisttpll and sub (bad) (bad) mov rorb dec push mov test ljmp and scas and cmp (bad) (bad) (bad) (bad) (bad) jb pop aaa push dec add lret xchg and lods std call idiv loope pop scas lcall hlt push pop movsl cmp dec xchg cmp jg in lahf aad (bad) (bad) jg insl enter in inc adc out inc mov (bad) bound sbb pusha call cltd pop out outsb or pop in pusha sbb sub push mov pop mov mov cmp mov add cmp (bad) ljmp jo imul inc fildl ds add mov or insb sbb (bad) add mov std xor adc lock insb es mov push lahf mov (bad) (bad) decl aad stos das jnp repz leave imul sbb scas mov jnp sub aas (bad) lret repnz (bad) incb mov (bad) mov xor jno jp jae sub test xchg (bad) std (bad) (bad) (bad) decl fidivl mov iret outsl add hlt add (bad) leave jno (bad) ljmp push iret stc rclb sbb sbb xchg push or negl (bad) (bad) incl add in pushf das adc test xor jne pop inc or (bad) push jmp hlt ss dec out popf fcom js (bad) jb test mov xlat adc clc mov aam mov fidivr in inc pop clc leave mov fldenv and into retw ds (bad) (bad) push push stc in arpl mov jl divl push dec push sbb out inc inc (bad) incl cmp cli add sahf xchg dec inc or and cmpsl and rcll hlt cmpsl mov fidivl rcr dec decl lahf (bad) jmp leave push mov xchg pop push xchg jecxz int push inc sbb (bad) push mov (bad) (bad) push push push or pusha jmp add adc cld lds push flds pop dec inc (bad) orl mov sub cld andl std mov add aas push mov ja lcall rolb xor jb lods push dec or push enter dec fmul rcr cs (bad) mov out mov js cmp jg das cmc incl sbb fwait mov pop sarb jl inc sbb ret fs aam popl jnp inc addb cmpsl pop cld jg (bad) mov inc js,pn push shrb subl incl mov and and push popa cmp lds or pop test sbb clc pop push lea jp,pt stc sbb lcall js and ret loop clc cmp dec (bad) (bad) (bad) (bad) fild ret hlt mov fadds jb arpl out ret mov xor jg outsl std xor jnp adc in mov pusha outsb pusha pushf (bad) jg incl ficoml (bad) in mov enter xchg sti (bad) mov js js sbb lods aaa mov fidivr pop dec (bad) (bad) (bad) (bad) jg and sub (bad) mov dec rorb sbb imul mov fwait int shl pop fs jbe mov dec lea xor std (bad) (bad) jmp jo repz push clc roll add test aas push ret clc call xchg jg or dec jae leave out mov (bad) decl xor lret mov call push les and push aam das cld (bad) pushl bound and addr16 aad fdivrs jp (bad) lcall decl xchg or xchg sti sub cmp ret and outsb cmc pushl add jo pop stos add mov (bad) sub andb (bad) cli out ljmp push push push inc in (bad) xlat add and and and das push cmp xchg clc (bad) decl pop int3 inc push out fnstcw inc pusha jbe add mov popa sub inc ljmp dec dec cmpl (bad) mov (bad) jg outsl jmp ljmp mov out mov ret call enter imul jb cmp push push loop (bad) jmp and or pop mov lea and (bad) jg fistpll fcmovb andb fs (bad) fnstsw lcall cmpsl stos inc xor mov decl lock or icebp int inc inc jp cmc frstor xchg adc sar (bad) call cmp aad mov aad push in fs out sahf adc mov aad adc add push or lcall jg lcall pop jne sahf pusha gs fisubl xor pushf jns sahf cli sbb mov nop insb repnz dec add xor (bad) (bad) (bad) cmp lcall insl iret sbb cwtl sbb or lods add jne (bad) pushl mov adc xor or xchg fsubrs pop iret leave push (bad) ljmp mov or adc test jno jbe push jbe adc (bad) jg fdivrs jecxz ds jo and or xchg (bad) (bad) (bad) jg cmp sbb loop and adc xchg orb sub add das cld ljmp xchg out ret ss (bad) (bad) ljmp dec cwtl add mov pop mov aaa xlat inc mov inc or and (bad) lcall fs std push iret add mov out push jne (bad) out rclb lret jmp clc lcall and jecxz dec repnz in clc (bad) call fwait lcall inc mov iret mov jno (bad) jmp or (bad) pop or jbe or (bad) (bad) (bad) pushl lret xor and popa push (bad) mov pushf outsb insl add imul es ljmp xor inc push add lcall clc int3 mov xor aam sahf incl (bad) (bad) (bad) call sbb aad add aam arpl stos ret push (bad) (bad) sbb cmp mov ljmp push cld push imulb and pushl in ret mov aaa out lret insb in push inc mov mov mov xor repz ret pushl es add fisubr leave or (bad) (bad) (bad) lcall negl push test nop (bad) lahf dec stc out loop add mov push nop lret test jmp std les add sbb sarb lret pop subw decl lods and daa movsl push leave add (bad) roll jb call clc test (bad) xor loope push dec sti addr16 sti (bad) daa jnp push and adc push xor test xor (bad) (bad) (bad) (bad) jl cmp into call in out and gs dec jne pusha push divb (bad) (bad) (bad) push pop mov (bad) lock aad test mov aad out fnstenv mov inc ljmp push sbb xchg gs loopne pushf sbb dec js pop (bad) (bad) jg fs in mov sbb out dec inc (bad) lcall ss mov icebp arpl call push dec lret lods aam (bad) (bad) (bad) jmp fsts mov jmp call cmpsb rorb in xchg (bad) daa mov in (bad) in and sub jp imul daa dec inc fwait (bad) repnz mov add cmp in mov mov sbb cmp push ja arpl popa cld pushl cli test fstps cmp xchg iret test add inc daa adc xchg cwtl inc ljmp insb (bad) and xchg jg int mov (bad) push decb xor push repz (bad) (bad) call rcr cmp dec xchg lea jo ret add incl mov mov add das outsl xor leave rclb push mov lahf push movsl xchg mov or push xchg mov mov adc (bad) mov push add (bad) jae mov aad sbb xchg and sarl clc pop push dec int3 adc dec cmp xchg sub decl das (bad) ss add ror xor (bad) lcall (bad) ljmp into dec (bad) insl pop dec rcll push lcall daa mov or xchg (bad) mov in nop pop test mov (bad) (bad) decl dec mov xchg nop adc inc shr xor outsl negb fcomps mov aaa ja (bad) push js int nop jg int3 pop mov mov mov push push pop or daa test mov (bad) (bad) jmp mov xchg loopne inc sarb push mov jg sub xor mull (bad) push or fcomps out pop pop push add (bad) fbld sub movsl adc out in lret out sub incl pop pop aaa cmp pop fcmovb (bad) adc movsl xchg jl sbb loopne leave push stos mov sbbl cmp push adc push pcmpgtw adc sbb rorl inc jmp shrb in mov (bad) pop (bad) (bad) fmull std (bad) decl addr16 cmp xchg jge in inc in xor mov add lea add cli scas lahf stos cmpsb mov aam pop lahf fcmovu mov call jb enter push pop push mov (bad) (bad) (bad) mov pop (bad) ret pop pop fmul sbb test fiadd jns (bad) mov mov das fcom mov add push dec cmpsl xchg (bad) (bad) jg mov pop loope inc inc xor sub lret (bad) (bad) ljmp icebp xchg push push insb aad cmpsl jno jge jp or divl pop jo sar pushl mov mov mov push pop push dec jle scas (bad) pop ljmp cs rep pop pop push mov push icebp (bad) (bad) (bad) ljmp popf insl pusha xchg out push xorb or in ljmp mov sub lds aam (bad) (bad) push dec int jp mov mov push arpl add mov int3 xor sub outsb jecxz jne inc or push dec xlat fnstcw cmp xor pop aas ljmp std jmp mov fdivs adc jae sbb xor cmp (bad) (bad) (bad) (bad) jmp xlat clc gs xlat adc xchg imul and (bad) jg loope in mov imul cltd lea xchg cmp (bad) (bad) mov (bad) je lods jle repz jmp and and mov rorb xchg mov roll inc clc ljmp xor lock cmpsl mov push or icebp leave movsl mov lret lret jg pushl add scas and scas ds loopne mov push inc add test push in ret mov repnz out dec sbb (bad) (bad) decl jne sbb mov cmp call push mov nop mov cmpsb mov xor or lods stc arpl inc ret fwait pop push inc gs (bad) (bad) incl add mov cmpsl lds mov (bad) add (bad) (bad) incl mov push mov repz imul test shld imul adc out push in insb inc pop and sti add adc and test mov sbb mov jp pop test loop nop add call out (bad) movsl out fwait shl jae push mov stos (bad) (bad) incl pop dec jge fstp test add pop mov scas mov (bad) jg mov dec mov jbe fwait aam pop mov mov xchg cli or mov das pop fs outsb (bad) lcall push push out jmp iret (bad) dec inc ja push xchg andb (bad) (bad) (bad) inc outsb out cmp sub jns faddl lahf xor mov out push fwait daa sub pushl int (bad) mov mov dec xor int cmp cs push (bad) lcall push cmp or jp mov jno jl mov (bad) (bad) jmp push xchg cld pushl sub das push cmp pop in out add jg jle dec es test outsb add (bad) (bad) pmaxub jle cs cmovne xor mov (bad) decl std xchg or sbb fcmove jo sbb xchg or jno fdivs add jg (bad) cmp (bad) imul dec jbe fcomps push xor push ret xchg mov int3 mov mov mov loop sub sarl fsubl pop xchg (bad) movsl inc nop aam inc (bad) (bad) (bad) ljmp cmp xchg lcall out (bad) xor int3 idivl insl dec call loopne (bad) (bad) mov or lods pushf ficom pop lods jl jge popa in ljmp mov cmp pop sub dec push add pop add aaa aam jg out jle ljmp add ret fwait mov sub (bad) (bad) lcall push push fcomps test lret out cmpb jns (bad) fistpll cmp pop test pop push push cmp loopne mov mov (bad) cwtl (bad) lods xchg inc add xor mov or out (bad) mov inc scas pop jno jb lods insb test pop mov ljmp push scas mov imul (bad) out add or not lret ss pop incl dec lods xchg cltd jecxz pop stc add out lahf cmp fidivl dec or in test pop lret lds xchg pop mov add scas xchg dec xor into sub ljmp dec data16 notb into testl je mov inc sbb (bad) lcall inc jo jno (bad) sbb (bad) into dec push in mul push out lcall jp flds xchg jp dec popa lcall or cmpb xor push divps cs jg (bad) jle mov dec push sub gs adc ss pop sbb xchg clc mov and testl test mov popf test (bad) cld es push jb jo xor mov mov popl in adc hlt (bad) pushl mov arpl pop rcrl leave data16 sbb aad outsl push and mov pop mov out xchg test or setle mov pop call or mov fisttpll adc push (bad) push (bad) cmp mov push lret mov pushw (bad) adc xchg inc xchg and (bad) call mov mov sahf cmp repnz gs incl jns xchg sbb icebp pusha packssdw fcomi dec loope incl (bad) call mov pop jnp jp fcompl ret cs sbb popf push dec mov inc imul mov das cmc push fistpl repz arpl xchg xor decl cld incl or cmp push and int3 dec sub inc lea push ret sbb (bad) sbb xchg pop or adc (bad) sbb rcl ljmp ljmp and add pushf sub sub jae lcall inc (bad) (bad) cmp js into jae pop cmp test lock mov add or or sub inc das (bad) and jbe fcmovnb cld daa xor mov aam xchg and stos jg push dec xor inc xor inc push inc xor in lea enter cmp mov aaa xchg test lea push imul into (bad) (bad) (bad) fistpll (bad) in imul or adc popa scas sub gs mov arpl xchg pop (bad) (bad) (bad) call add popa cmc mov (bad) dec xor repnz xor repz fnop xchg insb leave jae outsb les jb mov (bad) mov push lea fucomi ljmp sbb (bad) or out decl (bad) loope test and adc push xchg cmc call jle fsubs cmpsl outsl loopne cmp mov (bad) (bad) jg jnp inc xor adc mov adc inc pop pop bound xchg (bad) (bad) (bad) lcall scas mov push pop popa out dec pshufw sbb mov (bad) (bad) fidiv loop jg (bad) jg or loope (bad) repz fmuls mov outsl icebp push outsl cmp imull lods jmp clc xchg test icebp add inc and mov adc in test (bad) (bad) jg fucomip and mov sub sarl popf pop add dec jns rcrl fnstsw popa cmc out fisttp ret fisttp rcll xchg cmc mov ljmp aad (bad) (bad) (bad) lcall cltd cmp insb jne mov jne insb xor push xchg ffreep mov leave cli jbe mov jecxz jo jg dec dec fadds xor or (bad) (bad) jg out arpl jns mulb mov jge add data16 (bad) (bad) (bad) mov dec jae cwtl push stos sahf sub or xchg or adc push push (bad) cltd popf cmpsl (bad) (bad) (bad) jmp pop cwtl sbb cmp shll pop pop push fmull or aam and das icebp call out imull in xchg push scas inc popa mov pop xor repnz insl lock sub fsubr movsb mov insb (bad) (bad) jg add sub sub xor rolb xchg ja daa xchg adc loop mov mov mov ljmp pop int3 aas sbb call (bad) lcall cld iret push into pop insl xchg push in das insb repz xchg int stos inc cmp jno cmp imul jp (bad) test mov xor or and mov sub pop (bad) call push inc mov inc sbb hlt mov ljmp (bad) (bad) xor into cmp cmp pop popf repz shr (bad) lods movsb mov insl rcrl sbb cmp pushf lea pop add mov inc and or jo jae pop push adcl jmp adc scas pop rorb sti cmp and cmp je sub (bad) mov ja jns mov dec insb (bad) jge xor add mov adc sbb das std call inc lods leave sub inc add lret xor or (bad) incl sub (bad) add adc jnp repnz mov (bad) (bad) (bad) in mov pop sbb (bad) jae imul (bad) jbe mov (bad) (bad) (bad) mov mov jno icebp (bad) and sbb cmp xchg movntps jo jnp and std imul push lcall aaa (bad) fnstcw insl xor dec dec int aas add fcomp jns sub jge (bad) (bad) decl in cmp jbe stc fistpl dec cs sub dec mov sahf (bad) (bad) jg mov jns cmp sbb xor jmp fdivp dec pop jg and int3 std hlt push mov inc ja inc xchg insl push (bad) (bad) (bad) call nop inc push lretw fsubs test neg push xchg mov cmp stos ret inc jge (bad) (bad) add sbb addl sbb and cmc push test or iret ds mov rorl loop adc mov ljmp icebp jno and jp (bad) pushl jp dec in pop and xlat (bad) repz push fisub mov dec je icebp (bad) ljmp jp aaa mov fistl dec add mov pop cld jg push xchg xchg call mov adc stos jmp mov pop imul and (bad) (bad) jmp je or sub orl stos mov outsb xor mov mov xlat shlb add and into mov fisubrl sbb lods (bad) mov pop lret jg outsb push cmpsl (bad) icebp cmp or bound cmc aas pusha jbe sbb add cmpsl rcl push fist push loope lea (bad) jg call rcl xchg xchg popf (bad) fist cmpsb adc (bad) jmp in (bad) (bad) decl in clc lahf sbb adc dec icebp test adc js popa popw decl adcl leave cmpsb or mov sbb sbb (bad) fbld push push xchg inc jo mov xchg loop icebp popf mov mov (bad) inc jecxz xchg lds dec pop in adc enter push jecxz push mov ljmp jo out add (bad) (bad) (bad) decl roll out pop adc sar jnp pop sub repnz push sub jnp mov repnz (bad) mov inc cs jns mov loopne or mov lock jg decl pop scas (bad) ficom (bad) (bad) xlat xchg lret (bad) xor push in mov decl lcall clc jbe lods out outsl sbb xchg stos dec and add lea pop (bad) push shlb fbld dec std (bad) (bad) decl lods and das inc (bad) and add sbb (bad) notl in xchg mov (bad) fild test fmull cmp repnz mov jb inc scas fisttp adc inc subl push (bad) in mov mov push nop mov nop pop dec cmpsb push cmp cmp call incb div inc dec pop dec outsb or cmp out adc repz mov in mov pop in dec sbb lds outsb jl sub out mov pop addl or xor je cmpsb xlat pop std sbb lea pop sub fbstp nop dec mov mov lcall sti (bad) cltd jle lods (bad) loop shrl (bad) insb mov ljmp mov pusha cmp adc inc inc or fadds mov pop clc jg popf jg ret jnp xchg repz loop xchg cltd and data16 lcall pushf cmp daa clc lock jb xchg push dec (bad) lret nop lret pop lock in in jg add mov data16 sahf lods enter adc cmpsb lahf add jae (bad) jae sub fnstcw jle sub cmc push mov pusha xchg je roll jmp inc outsl jle mov ror push fwait cmp iret icebp dec or lods rcrl jno (bad) pushl cmp mov mov mov fsubp or push mov (bad) (bad) jg lods in xor pop dec jle xchg (bad) jecxz testl in test clc jecxz,pn pop fwait xchg dec jno dec mov xlat push (bad) jg mov sub rorb incl cmc incl repz or mov dec jnp jg (bad) (bad) cmp mov sbb aam sub test pop movsb dec lret das lock xor pushl pop (bad) popf out dec mov fwait xor and clc aas lock fldpi ret push xchg mov (bad) (bad) lcall stc test mov mov cmp push popf mov cmp (bad) call adc in out and enter jno out pusha std xchg subl cmp (bad) decl es mov rorl add sti push cmp stos xchg (bad) fdivr outsl mov sar std shrl icebp rorb fwait scas mov jg addr16 lret cmp mov dec fwait (bad) jmp pushf pop call std mov fdivrl sbb pop mov (bad) (bad) decl cmp inc dec mov push into cmc cltd jl pop mov andl popf into push (bad) (bad) ljmp jl cmp jecxz pop push xchg into test mov jge cmp stos mov rorb jmp dec jo mov jge cmp xor push das hlt (bad) jmp sub fwait xor jne lods jne mov push data16 cmp divl clc cli mov lret std imul (bad) (bad) (bad) std sub and inc dec inc scas test push nop pop lea jp and das lock pop inc loopne push pextrw gs mov (bad) (bad) (bad) ljmp sbb pop add mov sbb xor scas repz insl das lock jmp out adc icebp add dec sub inc aad jo (bad) xchg clc cmpsb mov jo add and xchg or lock dec out (bad) decb jge pop cmovne (bad) (bad) decl roll inc lock dec cmc sbb sub push jnp adc clc and fsubrl mov cmp jecxz fcmove (bad) pushl imull push cmp dec (bad) mov icebp cmc (bad) (bad) pushl mov xchg pop xchg jmp sbb adc iret pop (bad) (bad) (bad) mov add push mov out jecxz xchg in mov or push rorb sub lods mov push sub loope test sbb cwtl int sbb mov (bad) (bad) fldcw arpl fdivrs push rcll xchg stos shrb popa pusha mov (bad) call jne int3 jb int3 call imul pusha push (bad) decl pop movsb add test mov ss (bad) call lcall shrl pop lds jbe pop xchg (bad) lret in adc inc (bad) ljmp dec (bad) cmp cmp or sbb and (bad) mov or mov (bad) (bad) pushl cld popf pop mov mov hlt fimul xchg jne push add (bad) fucomip xor xchg (bad) jo aas es push push sub fistp jge push enter mov and rcr sbb insl mov out mov inc pushf xor insl push jg cwtl xchg (bad) (bad) (bad) (bad) stc pop js fsubl cmovae and movsb adc inc cli xchg xchg add mov mov in jns ljmp repnz sbb dec jecxz add xor add popf pusha sbb mov mov decl adc and and (bad) (bad) jmp push sub pop pusha iret mov bound or sti jmp push push cmc push mov and fxch sbb xchg xor stos dec dec push lcall mov (bad) call and cmc daa movsl shlb add sub aaa mov adc adc rolb pop mull push repnz fnstcw mov jg outsl mov (bad) mov fwait mov popa shrb fmull fcomi ja jle mov xor adc in mov ljmp icebp mov fwait jne push xorb or mov std (bad) (bad) jmp mov mov cwtl sahf loope cmp out mov stos cmc jge xor sbb (bad) xor or outsl aam pop (bad) aad push arpl mov sbb lret sar dec jge mov xchg jge test lods (bad) in (bad) in ljmp loopne test aas inc fidivr dec cmpsl loope aad loopne (bad) call jle xchg test xchg js add sbb aas (bad) (bad) (bad) mov pop adc cmp or cwtl push mov aas mov in pusha (bad) js iret jg adc das lock fiaddl adc adc sub into popf ja sub cwtl (bad) (bad) (bad) jmp ret aas xor fbstp lock lods adc (bad) jmp das popa cwtl pop cmp test data16 (bad) jg mov lcall std call push and mov int3 call dec mov iret sbbl adc das fadds cwtl xor push je jno clts push (bad) (bad) pushl orb jecxz fdivs icebp out das xchg lds aaa push adc into cwtl (bad) (bad) (bad) decl clc pop mov mov shrb xor ljmp std aaa inc test test adc popf in pop mov (bad) (bad) ljmp ss cmpsl pop lcall fsubl push xlat loopne adc scas insb dec sub or and (bad) ljmp test sub ficoml in ret lret daa pmovmskb adc dec hlt (bad) (bad) mov dec mov pop and mov ret jo scas (bad) ljmp dec cmp das jo pop (bad) test dec out jmp iret add mov (bad) (bad) (bad) ljmp rolb mov dec fdivrl fstpl fcompl pop ret sub mov imul jp add clc or or cmp (bad) (bad) incl outsl into mov mov cwtl sbb test dec mov jmp pop lds add stos pushf mov stos mov das es das ja inc hlt inc pop inc leave jne pushl jbe data16 mov aam or inc cmp dec inc lods enter pop lcall xchg cmpsb jle (bad) dec imul call test enter mov mov and scas xchg jle xchg call (bad) pushl add inc jnp mov jp pop popf mov arpl (bad) popa lds test inc pop add or mov sbb cmpsl test aaa fstp and call fcomps xchg inc and push in rcll add std or pop cld ffreep lds stc pop jl mov push mov outsb (bad) mov (bad) stos gs bound push leave jecxz sbb (bad) (bad) ljmp scas xchg int3 (bad) addl js inc push sbb shll and iret cs ljmp outsl jb test jae push add sub decl jmp inc (bad) lcall xchg dec jle xchg cmp pusha and enter mov aas scas jl (bad) decl stc lea dec in (bad) xchg pop cmpsb and movl (bad) lcall mov push imul sbb push adc mov add push data16 dec jmp lcall (bad) (bad) lock je push pop sahf jbe mov sti (bad) decl (bad) decl lcall adc nop ret and incl inc push ljmp mov jbe dec xchg movsb dec (bad) (bad) (bad) dec sbb lods mulb adc sbb or sub xor mov jecxz fcomps rclb push or popa jnp aad inc jne inc jne (bad) (bad) jmp push std xor enter movsl mov out loope jo mov cltd jmp jg sar push jbe jo adc incl imul lcall mul aam sbb dec je sti and cmp rorl jne adc (bad) mov outsb mov test pop pop mov push aaa (bad) xchg movsb push pop mov std rclb mov repnz push cmp cmp enter jo inc inc dec imul fucomip (bad) dec out xchg mov mov cmp dec bound aas inc shr jg xlat lds outsl gs enter xchg push cwtl outsb outsl push mov aaa js mov pop stc push add push mov mov mov icebp neg loop cmc dec or sbb pop mov cmpsb fisttpl push pop (bad) (bad) call ss jb jmp mov add xchg bound mov test push gs leave aaa lcall cmp (bad) repz xchg jge fs sub push mov xor add xor mov (bad) (bad) dec sarb je,pt mov mov jnp add mov ss addr16 cli ret cld adc scas push in push mov sbb mov jbe inc sub int3 fldcw push (bad) incl sti dec repz out repz xchg vmaxps xchg pop push (bad) (bad) fbld nop inc xchg sbb imul mov test jae mov cmp add dec popf (bad) (bad) (bad) mov inc cmp and in push mov sbb mov std call rcl test jge les jp lret (bad) add popf or adc push dec add lcall ret ss ffree dec adc inc arpl mov ljmp fcoml out sub push and sti dec and ret test mov mov jmp (bad) gs jge,pt xor loop mov inc sbb sub inc xchg pop scas jp mov ja repz add loope jae and into sub pusha rol pop test xlat jecxz sbb xchg rol inc bnd (bad) (bad) fld movsl push mov jmp and add lods xor pop jg (bad) jg xchg enter fimul add lods xor push (bad) cmp or ljmp hlt mov cmp gs push incb ljmp jmp xor sub (bad) incl or fwait jo xchg sqrtps pusha lock mov mov dec ret sti or sbb xor cmp ja jecxz insl lods test test pop scas js add cmp (bad) (bad) (bad) mov mov fs push dec mov lret xor mov jno and pop inc ljmp cmc (bad) fisubr pop arpl add or xor inc mov (bad) mov out call call insb fisubrl mov xchg dec (bad) (bad) (bad) jmp sub mov jmp inc jb les pop push ret pop loop (bad) sbb pop stos aam ljmp fsubs aaa mov jne (bad) (bad) (bad) ljmp in (bad) xor push xor or xlat paddsb sbb ficom sar (bad) (bad) in mov aad xor sbb push sbb mov stos mov and (bad) (bad) (bad) (bad) mov insl sahf or pop sub jbe xchg lret mov (bad) (bad) (bad) dec xor arpl (bad) add cmp fistl pop xor popa mov aas (bad) out insb sub outsl std and das lret cltd mov int3 push mov (bad) (bad) (bad) fidiv fstpt sbb cld dec sahf neg out ss fcompl adc test push or jmp xor ss gs (bad) (bad) (bad) dec mov cmp jmp dec xchg das dec inc shrb sbb std or sub sub push scas sub cld lret shl jmp fld (bad) ljmp or xor or dec hlt sub loopne push pusha stos xchg mov lods insl (bad) and popa dec jmp ljmp ljmp repnz mov lret scas jno cmpsb pop aam mov inc pop mov (bad) shl inc (bad) mov (bad) jg push fisttpl movsl cld inc add jp push adc lahf fwait xchg mov jle cmc mov xchg jnp dec loope (bad) jmp add add sbb notl cld adc sbb (bad) stc fsubr out cli add sbb inc dec or and mov enter lcall jno jge loop xor shrl js rolb mov pop (bad) pushl cli mov hlt ds ja addr16 adc clc (bad) div aaa (bad) (bad) decl std fisttpl and aaa sub fadds mov loopne sub xchg (bad) xchg fwait inc dec sahf les (bad) add add push push lcall cmpsb pushf cmp adc jp jo rolb cmp dec pushf jg mov or in or mov lods jge xchg test mov adc jo rcrb or decl call aas adc js push add rorb fistp repz shlb ljmp cmc cmp cmpsb xlat test sbb testl (bad) jg sbb arpl mov fild adcl sub (bad) (bad) (bad) jmp xor (bad) hlt mov les pop in lods dec loop pop sarb adc and aad mov sbb imul and outsl mov ret lock das sar incl cmpsb stc jb dec pushf pop cmp jae in call nop cmp sti jbe dec (bad) incl and mov pop jp ja adc push fidivrl ss decl (bad) pop mov (bad) outsl in in mov inc jns and lcall (bad) mov (bad) roll fiadd xor or sbb (bad) jmp jne inc push fisttpll fistl push enter mov dec or aaa mov (bad) lcall scas lea stos incb dec subl push mov pop int3 rol sub adc sub add or loope adc xchg (bad) dec cld cwtl roll push fstl jp dec push mov jae mov scas roll mov (bad) (bad) pushl mov dec sub js jecxz in push pop outsl movsl mov aaa cli inc push inc xchg jno test incl mov inc fmuls stos rolb rcrb daa mov cwtl in pop ljmp sub test pop and mov fsubrl sub cmp sahf outsb outsb sar clc jnp (bad) in lods jmp sub cmp push test mov mov dec cs loope pop jb cmpsl cmp les jge cli pop ljmp mov lret outsb js mov aam jg call out fwait cmp mov xchg fcomps (bad) call sarb (bad) inc (bad) pop sti (bad) sti (bad) das out repnz inc ret (bad) (bad) fildll jp into fild cwtl out std sub (bad) pop imul call push loop out mov add adc or mov (bad) jg pushl xor lods mov mov fildll insb mov (bad) push ljmp (bad) mov out dec in or cld fwait js loope mov jno inc xor popa xor outsb fwait stos nop jmp cwtl adc in insb ds sub add pop cmp (bad) (bad) push mov fidivr pop pop lods xlat imul mov clc adc (bad) lcall enter cmp cmp add (bad) xchg aaa mov (bad) jp push cli sahf cmc icebp inc out fldpi arpl pop lds xchg or mov (bad) jmp mov inc gs inc cmpsb arpl scas add sbb jmp (bad) fwait inc fbstp mov add and dec mov pop mov (bad) decl rorb or push xor dec jno (bad) shlb push jg (bad) jg jae outsb cmp out xchg jmp mov jbe fldcw lock mov xchg shrb cltd jbe push cmp jbe lret dec pop push push stos mov outsb inc lods xchg adc mov (bad) jg cmp scas imul je adc mov js ljmp push jecxz xor add addr16 (bad) (bad) jmp out mov jecxz or inc and xor ror push pop xchg (bad) push testb sar call dec imul data16 into daa (bad) mov pop adc and (bad) (bad) (bad) lcall hlt andl push test jle add jns daa rclb (bad) (bad) cmp xchg adc mov add jle adc cmp adc pushf mov pop cld test daa (bad) rcrl xchg inc outsl les into push test jecxz dec std mulb insl lahf out cld adc jo stos in cwtl into cmp decl movsb jae jecxz inc xor add jbe jecxz sub decl adc mov cld dec fisttp add mov xor incl insl sbb icebp scas (bad) mov jno xchg es jg out sar or stos fistp scas push sbb jbe test jns hlt jno xchg idiv (bad) pushl imul dec fsubr pusha mov repnz loop sub and jge (bad) push ljmp cmp cmp stos mov cli mov xor dec cmp jmp pop pop push pop aad mov add jl (bad) (bad) jmp insl adc mov add or mov insb inc clc or push dec adc addl pop mov sub dec dec fdivr (bad) jmp jbe stos push xchg out pop lcall repz mov pop (bad) ljmp adc mov cli jmp pop cmp cwtl insl jp in pmaddwd (bad) (bad) clc into mov cmp inc mov xchg fdivrl stos pop fucomip out (bad) (bad) ljmp imul addb pop sbb push mov lods pop dec daa movsb ja fs (bad) pushl stos bound push lret xchg add xchg ret cltd dec mov int adc (bad) incl sub lcall lret jnp ds ret repz mov or (bad) fildll xor mov outsl push or cli jle mov add dec (bad) xlat mov popa cmpsb sti or fdivrs mov push daa or mov fisubl xchg push sub mov lock fisttpll xchg fsubrp dec mov push addr16 (bad) decl daa repnz fldenv or mov mov lock dec enter sti in loope call jl add xorl jmp xorl negl mov fdivr je movsl (bad) outsl jg sti mov inc fcmove imul mov decl (bad) mov sbb sti mov inc inc sub mov ja (bad) (bad) (bad) jmp adc sbb stos mov and test rclb rolb lods (bad) ljmp mov cs das (bad) js add (bad) jg xchg cmpsl add xchg mov incb pop push jne adc pop loopne jmp xor sets cmp test outsl insb lock or mov cs call (bad) push adc mov xlat fwait jl jecxz xor push lcall lea stos call xchg fldcw (bad) dec incl add (bad) jecxz fcomp int add and mov mov jp or fmuls iret cs fidivrl (bad) (bad) pushl lods sub push icebp jb add out movsb mov add sbb (bad) (bad) decl (bad) or das adc daa mov lret insb jbe dec pop ljmp xchg push (bad) incl shll dec iret jns sbb mov (bad) call in dec add (bad) fdivs pop cld push mov dec fcomps pop sti in fucomip fstpt or ljmp adc (bad) mov push jg aaa hlt lods in fcoml jne je stos outsb outsb call xchg mov mov mov or fstp pushf mov pushf ret push loop or xchg jmp (bad) insl cmpsb test outsl adc movsl fcomps pop pop (bad) (bad) (bad) repz fmul or or cld daa ja push addr16 ja push imul mov (bad) (bad) (bad) fidiv (bad) fdiv or imull (bad) sbb (bad) repnz (bad) (bad) (bad) cmp mov enter push cmp in loopne xor (bad) lock je loop pop dec cli (bad) decl clc xor std dec push rcrb (bad) cmp lret add jg cmp out popf movsl call dec mov movsl adc call scas mov (bad) mov push hlt and in je jnp,pt imul lcall mov test ret ja test mov xchg std sub (bad) (bad) lret fist clc pushf jmp ret (bad) (bad) (bad) jmp daa fptan inc xchg icebp jns stos jecxz,pn sbb fs pop (bad) cmp mov inc push or and xchg hlt (bad) pushl clc sbb sbb (bad) push xor or adc (bad) call xor adc xor lahf mov jle cmp in (bad) (bad) lcall adc rcl shl out pop fiaddl inc cmp sub pop in sbb adc data16 mov adc test flds xchg cmpsl mov (bad) mov pop js jg inc jl inc sbb repz (bad) (bad) ljmp js add jle or hlt out ror xlat fsubr lock test push xchg movsl (bad) movsl decb in and ja mov mov jmp lods cld out (bad) out fisttpl (bad) out icebp icebp pop xor jno in pop inc (bad) (bad) ljmp jle xor addr16 jae (bad) push shrb or mov add xor iret pop xchg mov decl mov pop mov dec jo push sbb xchg bound mov nop jb cmp (bad) ss pusha arpl or mov shll jno aad das push or scas xchg pop sub test out lock mov (bad) inc or jns sbbl push mov dec lcall inc and pop je push cmc sbb cmp (bad) (bad) in aam cmp or ja fsub jnp pop decl pop xchg adc sub aaa mov pop dec xchg and bnd std sahf data16 dec (bad) (bad) ljmp add push jecxz pop lods xchg ret xchg mov pop clc add cmp enter mov sbb cli mov mov push inc or cmpsb mov cmp xchg push fs mov (bad) (bad) push mov frstor sub clc pop xchg mov adc out (bad) lcall jg (bad) lcall (bad) lret fmuls mov xlat mov xlat outsb nop push repnz iret (bad) xchg loopne fucomip jmp fildll out inc outsl mov xchg add das std pop and inc add push mov jo test jecxz push xchg fsub mov mov (bad) push arpl out scas or cmp arpl xchg bswap pop xchg push lret mov test inc dec loop shrb jae outsb (bad) fsts jge xchg enter (bad) incl sbb pop xchg test int push jl cmpsb dec sbb into call (bad) call popa xchg or das das fmul mov pop imull mov jae jne add (bad) (bad) dec xor add jns mov hlt addr16 fsubrs xor cmc rcll cmpsb or aam push mov mov cmc (bad) call inc imul insb mov push roll pushf add adcl inc (bad) lcall or push cmp cmp push xchg mov dec xor sbb imul shr jp cwtl cmp and cmpsl out decl xor push int3 jecxz (bad) in fst sub mov call stc pushl movsb mov out icebp in cwtl dec mov out scas lds in in jno decl jmp mov es repnz sti fwait adc ljmp pop cltd (bad) (bad) (bad) dec psubusw lock lcall adc cmpsb cs xlat inc (bad) or sar clc jbe lods fwait pop lods adc rorl into ds or push test rol aam je (bad) (bad) lock mov sub (bad) in scas push stc aaa cld lcall incl ja jo nop es mov rclb xchg inc mov push inc mulb lret cltd cmp in mov (bad) mov (bad) (bad) (bad) decl cmpl jecxz pop cli test repnz iret and sahf aas movl jmp das add jle xchg xor je jge sti jne into add adc test dec mov and out mov mov (bad) (bad) ljmp sbb and mov xchg js inc and sbb pop inc jns scas cmc incb bound mov dec mov pop (bad) (bad) jg push inc mov mov mov adc aam arpl dec call std (bad) jp xor out ja movsb test sarl xor pop push mov gs or mov xchg jbe mov or stos pop add pop sbb or push (bad) (bad) (bad) (bad) pushl mov adc ficom addr16 lock ja cmp mov js inc (bad) call pop mov loop inc ja pop lods imul je (bad) lcall scas (bad) jo ret lret push xlat aad call pushf fs and dec cld lcall imul outsb cmp ficoml inc in mov icebp decl lock jmp xor lahf cwtl mov add jg sbb jnp pushf or (bad) (bad) (bad) call jb (bad) movb inc xchg xchg sub push or aam scas testl and sub je add xchg int xor inc pop xchg mov icebp das icebp sarb push jle mov into dec mov cld ret push push dec test (bad) call and nop je enter loopne pop sub jmp dec or pop push outsl (bad) incl popl and jmp push lret lea and (bad) (bad) (bad) (bad) jmp cli (bad) xor adc sbb (bad) xor les (bad) mov nop pop pop cmpsl fstl in in mov insb test mov mov pop inc hlt jg and push jge push ds (bad) jmp inc mov add mov push mov mov mov adcl faddl aad xchg (bad) (bad) mov xchg cld push rcll rclb mov xchg pop mov or and mov adc fwait shlb (bad) fcompl hlt popa out fimul nop test out xchg call jmp popl sbb sub hlt mov int3 lcall std pushl popa sahf push int3 test jnp dec repnz lds clc (bad) (bad) ljmp lods inc das (bad) mov mov aad int3 jno cli icebp sahf (bad) lock mov (bad) (bad) lcall or js mov pusha stos mov sub dec test sbb mov decl cmp fmulp cmp inc sub or lret mov (bad) jmp dec jmp fsub fstl sbb mov mov cmp mov call (bad) ds mov notb mov call mov cmpsb mov pop cli (bad) mov outsl (bad) xor xor es xchg sti push push in or (bad) (bad) incl inc gs (bad) repz (bad) cmc rorb sarl cltd cmpsb inc mov (bad) inc and push ja cld stc lods dec outsb xor stos ss xor rol xchg (bad) (bad) lcall jmp or pusha mov pop cmc mov cmp daa hlt dec int data16 (bad) (bad) push bound cwtl mov xchg lret ljmp mov jge mov outsl mov addr16 add out mov in push icebp mov lods xchg (bad) mov xor mov xor jb pusha add mov (bad) (bad) call addr16 leave loop test mov jns (bad) (bad) (bad) (bad) fistpl outsl jno mov outsl hlt push or sbb (bad) (bad) notl daa movsl iret jmp (bad) (bad) (bad) call repz movsb push inc cmovl mov stos out ljmp in mov jg incl jl aas aas in pop cmpb loopne jg and jg mov adc xchg stos mov lret inc push (bad) jmp push sub xchg mov orl aam mov jo push icebp sbb dec xchg dec sti (bad) push cld mov decl cli cmpsl aad push sub pop int jmp movsl hlt xchg pop test (bad) (bad) mov adcb in push mov dec add inc cmc jp decl or pusha lock adc movsb sbb ds pop icebp in (bad) push push mov sub dec dec (bad) shrb fild (bad) (bad) (bad) mov jns,pn mov insb sbb xchg js cmp xchg adc pop mov xchg mov das sti mov ret insb pop jg (bad) pop cmp leave (bad) (bad) inc pop sbb insl pusha mov cmc mov inc inc stos mov leave mov stos pop int loopne mov fistpll outsl mov xor mov (bad) push loopne fisubr scas mov mov dec push (bad) gs push outsb jle inc mov cli decb xchg jg add mov loope and add xchg (bad) jo movsl xchg rol sub or decl stos out add aaa mov loopne sbb mov jne repnz adc xor inc jg loope sbb rcrb (bad) (bad) (bad) pushl mov (bad) or pop lock jmp xchg cmc adc std jne cmc (bad) (bad) (bad) dec add mov jge (bad) pop dec clc jo imul (bad) fcmovu jmp ljmp lcall (bad) cli xchg adc xor out daa loope mov hlt mov mov adc dec xchg pop mov cs jecxz and cmp (bad) mov inc js fwait mov aas cmp jmp ret mov adc xor mov add repnz mov push das push cli decl gs xchg xor and gs scas (bad) (bad) jg test jmp inc jle (bad) cmp lcall inc lcall lods ss fwait jmp cmpsl lea cmp (bad) (bad) call adc mov arpl adc jno lds dec mov sub (bad) icebp stos (bad) mov outsl mov jb sub int push jge push cmp push (bad) sti mov rol inc and push pusha xor jne pop (bad) inc call pop addl jmp mov xlat sbb movsl cmp fdivrs das cmc (bad) pop repz insl mov jp jg repz neg stc jecxz call decl adc push repz (bad) mov cmp lods loopne mov int3 cmpsb es es lods xor es lcall cld xchg jbe mov adc cld mov pop enter movsl dec test (bad) mov repnz in mov pop (bad) ljmp cmp incl mov out xchg xchg shrl in (bad) cld mov sub in out dec std (bad) (bad) add xor cmp mov les test sbb dec mov cwtl fdivrl mov and push pop cmc (bad) jg out sbb loope cmpsb fdivl push push ss stos cs ljmp add sub inc pop adc mov (bad) sub je mov popl fadds sbb sub adc (bad) ljmp mov mov inc mov stos ret sbb inc inc sbb scas dec (bad) (bad) (bad) (bad) jmp dec or ret fs xor mov imul cmp pop cmp lret repnz imul dec test mov mov cld sub xlat add mov xor push scas push xor mov sbb jmp mov sbb xchg leave push xchg (bad) (bad) (bad) lcall jbe icebp cmp das mov fildll push adc fprem push sbb cmp lgs pop mov fwait gs xchg inc xor iret (bad) jg (bad) in icebp lret notl jbe imul jno fbld mov (bad) fdivr lret sub addb mov pop dec ss adc pop ret jmp sbb aam jp cld popa push lods (bad) addr16 or add adc sub cmp push inc or cmpsb inc divl xchg cmpsl and adc (bad) out es cmp push movsb jmp pop pop mov push lahf mov cmp xchg jne sbb (bad) (bad) (bad) call lret inc sar sub jp jle mov out mov jbe cmp dec dec mov lcall andl repnz dec adc popf enter lods fisub or das lock inc adc outsb shr cltd pop popf xor clc mov pop call das jge aad mov sub (bad) (bad) (bad) jge jne and stc push jns sbb xor jmp pop or les and lock decl sub sub mov movsb imull gs push out cmp ljmp mov fsubl sbb sar jle xchg (bad) (bad) inc mov sub adc and adc dec and (bad) jae js add (bad) ljmp shll lds insl or mov mov movsb mov (bad) mov xlat call push mov lock out push mov mov push mov dec enter xchg mov add adc or (bad) decl test test outsl daa mov imul push (bad) mov decl std aad pop cmc add pop addl sub push (bad) lcall movsb icebp or insl rorb cs out mov lcall cs outsl jb pop xlat inc adc xchg int3 pusha (bad) jg adc nop pop enter cmc pop subl mov (bad) jg sub js aam push fsubl add inc pop jp add adc pusha imul dec sbb dec idiv outsl adc fmul les lret inc adc lock shrb sti (bad) mov sub (bad) jno add call fildll addr16 loop dec (bad) and les jle mov (bad) push pop fisttp jae or and (bad) (bad) pushl pop loopne clc nop jle xor add jnp stc int loopne (bad) (bad) in jmp fild jo adc inc dec rorb add hlt mov shrl jecxz adc jmp and sub sti (bad) fmulp xor pop xchg mov add or mov add pop mov xlat mov cs std aad adc mov iret std jns pusha mov sub (bad) cli push xchg dec xchg mov test (bad) lcall xor jns in jecxz or test loop sub jg sub cmp test aaa pop ljmp mov mov push pmuludq call test cmp test cs jg call outsl lock or mov ror outsl mov xchg pop sub lock dec sub adc rorl rclb push test out push outsl push pop and push outsb mov decl cmc into mov fisubl mov sub pop ljmp xchg mov cmpl (bad) repz adcb and xor les xor mov (bad) dec push jp loopne xchg into lret loopne add adc insb cltd popf dec rcr xchg add push pusha cltd cmp xlat adc adc dec sbb (bad) call mov push lea sti imul (bad) in and dec std (bad) int3 jns into fwait add and push std in call xor sarb aas mov shrl (bad) call add int3 popa test xor mov loop xchg and inc in mov inc mov test test mov jmp push lcall outsl add and arpl or jecxz or push and inc mov sti lcall sahf jecxz sub and mov sbb rcr ret clc (bad) jg js adc iret push cmp mov insl movsb jbe stos mov shlb cmp stc lods rolb dec mov insl push insl (bad) aaa fcmovbe jae mov (bad) lret sub cmp and (bad) in jmp sbb and in add jl icebp lods xlat cmp cmp jmp add and cwtl in pop ss pop push cmp jge adc test aas ficoml movsl mov (bad) adc mov pop or scas loope (bad) (bad) jmp inc mov call sub les inc mov movb sarb push outsb das or ljmp inc mov inc pop hlt in popa movhlps mov jae ret ds and inc and push xchg push jno mov mov fucomip testb push fsts ja add ret jecxz (bad) (bad) fnop push fsubs xadd inc mov inc int mov decl pop in in and push adc or mov adcl and stos js adc in xor inc mov mov sub mov bound repnz jp or loopne pop add repnz jecxz repnz pop add xchg sbb ljmp std sqrtps ljmp dec add push lods xchg sub cmc out popa mov xchg (bad) in push xchg pop dec add js pop (bad) call push test jnp ret movsl mov into push shl add jnp (bad) loop push pop cmp jnp xchg xchg imul inc push mov dec cld jg mov dec jmp adc (bad) jg (bad) cmp inc cmp mov xor dec sbb push jno jnp pop mov push jae sub sub jg push xchg jb sbb pop inc push pop cli pop adc mov or (bad) and push mov or xor (bad) aaa in xor (bad) nop stos pop fmuls jae fnop push (bad) jg (bad) shlb mov push push hlt add cmp push push mov fcoms call (bad) (bad) (bad) mov pushf cmp outsl jle sub mov or or (bad) (bad) call fcmovu test sahf or cmp sti stos arpl incl fbld ss sub jle inc xor out neg push pop (bad) (bad) (bad) in (bad) pop cltd push jnp mov mov xor in inc jmp test pop fdivr (bad) lods dec dec adc mov test adc pop and insl mov (bad) jmp mov mov js mov push stc daa repz test push add mov jbe clc cli mov clc std pop mov fcomps xchg mov sar xchg mov xor test sub push push mov (bad) jmp xor mov les mov ret jno sub test (bad) (bad) incl pushf mov mov xchg mov (bad) push adc push lods nop xchg pop (bad) (bad) (bad) pushl cs out xchg xor cmp push adc dec push sbb imul call jmp mov push add cmp clc (bad) jmp aad inc or jp xchg lea mov (bad) call fisttpll cmp aaa adc movsl dec fisubr push popf movsb (bad) (bad) ljmp (bad) loopne out out jmp mov xchg xchg xor ret pop jge (bad) decl or mov mov xchg adcl pop (bad) iret stos dec ljmp (bad) (bad) (bad) lcall shrl in fnstsw idiv mov std jmp cmpsb (bad) (bad) jg pop (bad) out and out push xor push hlt fdiv jle pop mov and cwtl mov jb cld sbb (bad) pushf add into nop inc arpl pushf adc dec (bad) inc add ss movsb out xor sbb in inc lea mov (bad) (bad) (bad) ljmp xchg pop imul out ljmp xorl pop cmp jecxz sbb (bad) (bad) (bad) jmp and fwait repz mov ds daa outsl shr cld push (bad) cmpsl ljmp inc arpl xor bound (bad) (bad) ljmp jb jmp out stc push sub xchg xchg rorl dec repnz (bad) mul std dec add imul add xchg daa inc inc lcall jbe push cmp test inc xchg or call mov decl data16 out xchg push dec rcrb jbe pop dec (bad) std (bad) call insl leave (bad) addr16 clc les (bad) (bad) call leave rorl lods xor lods mov xchg xor dec enter sub (bad) (bad) decl jae inc in jecxz sub jnp pop cmpsl int3 int sbb cld aaa and imul movsb (bad) mov push or clc sbb ljmp scas out pop jl shrb or (bad) decl sub enter push adc dec insl sub or (bad) mov jmp cmpl cmp inc sti xchg lock pop sub jo (bad) (bad) fistpll adc push cmp fldenv (bad) call (bad) xor out xor sbb xchg lds mov loop mov push and add std pushl sbb aad mov lods sbb cmp fmuls mov outsl xchg mov inc rorb xor mov xchg cli mov fstpt popf jmp or cltd push pmaddwd movsl (bad) (bad) pushl out fwait clc in (bad) jp sub pushf in je in jp push cltd insb (bad) (bad) (bad) inc pop stc loopne,pt mov gs div repnz test mov ret (bad) clc std lcall popf jo sub daa pop sub fisttp idivl jmp test add mov pop sti sub imul xor ret into mov jg lcall sbb pop jb fcmovnbe outsb aaa mov aaa xchg (bad) call outsl pusha cmp mov lcall mov jbe outsb add xchg test leave sbb mov jg call inc pop sub xlat sub jmp test decl push mov std cmp outsb fcompl es sbb insb and lods xchg scas cli xchg cld sti push sbb pop push sub dec inc icebp (bad) push or stc nop int cmp (bad) mov mov ret sub les (bad) lds dec pop (bad) (bad) ljmp inc mov sub mov repnz cmc stos jb shr mov push (bad) pushl dec sbb sub ret bound xor pushl mov mov je movsb mov mov pop loop dec lahf sbb sbb xchg fcompl pushf aaa cli push (bad) mov xor ret insb fmuls xchg cli (bad) pushl (bad) and push movsl mov jno and mov popa lds pushf inc std test push and lods in push in loop dec iret shrb jae das adc dec cmc or popf pop mov mov cmp mov mov xlat out pop neg aas ds ljmp xchg xor add adc (bad) (bad) (bad) call adc adc push es cltd dec addb (bad) shrl bswap add sbb (bad) (bad) (bad) cmp mov push pop mov in hlt dec outsl sub and pop or (bad) incl sub mov xor cmp mov pop les outsl cmc jge mov mov fidivrl mov add push xchg adc loopne cld call cmp dec mov xchg stos andl lock lods or push mov gs jmp std ljmp xor rclb enter inc sbb (bad) (bad) jg mov imul loop sahf fimul mov inc out sbb cmpsl sub icebp decl mov fwait push pop sarl xchg push mov outsl hlt and cld sub push mov jg jno mov outsb (bad) iret das and icebp imul mov incl dec mov (bad) mov insl jb subb mov (bad) mov jns into adc inc pop xchg rcrb imul sub mov xchg (bad) shll test mov mov inc pop xchg and push dec xchg mov xchg (bad) (bad) (bad) call fsubrl divb insb adc lods jge xchg xlat outsb fs lock lods pop push mov call cmp insb xor mov subl push js adc add cwtl push ret cmc aas testl inc rorl or loop cmp pusha jmp data16 mov lret cli popa mov out or ret xchg adc xchg jo (bad) pushl jle add insl std mov jae mov rclb xchg jmp sub adc mov jge sbb int ror sbb mov std pop loopne imul out outsl xchg mov adc add pushl ja or stc push fbstp loope rcrb cmp sub sbb add loop mov pop ljmp sti cmp movb stos aam (bad) (bad) clc dec gs jbe xchg loopne ret mov mov cmpsb jnp and mov idivb ret pop dec mov xchg bound xchg xchg dec push jg (bad) dec or stos push jmp dec adc leave bndldx cli jns repz and (bad) (bad) jg mov ds push rcrl mov xchg pop push xor pop mov test enter test add rol stos sub mov aaa (bad) loop cvtpi2ps imul xchg std incl arpl stos push jnp jns int not ljmpw ffreep mov (bad) (bad) (bad) incl and notl das pusha (bad) and jae pusha xchg lods popa xchg rclb cli scas and lods (bad) pushl decl cmp and (bad) dec add or (bad) ljmp xchg fcmovnbe stos in int stos mov out mov jg dec inc mov sbb mulb aas pusha (bad) (bad) (bad) jmp int cli mov lods rolb pop push pop dec pop sahf or add mov arpl dec (bad) shr idiv push adc or sbb inc ss (bad) fldcw dec xor pop mov mov mov in and rol loope fimul jne loop xchg dec push ss incl mov mov lcall (bad) (bad) call and pop mov sub cmpsl add push mov mov fprem cmp cmp popf nop cld mov lods popf push negl jmp ficompl jg scas arpl inc mov or leave scas hlt (bad) pushl vmovups movsl pop inc push mov add int push stc jge jmp clc xchg sbb popa mov (bad) ljmp loop test hlt repnz push or frstor pop mov (bad) sti movsl jbe loopne mov xchg inc lock pushl dec push pop cmpsb cltd push mov mov clc test shlb sahf out jg mov insb lcall cld dec mov loope sub out xor jmp std out inc push sar (bad) ljmp out mov out mov xchg pop sbb adc (bad) divl and adc test inc sti aas lock fucomip adc or mov div or mov jg sbb or jns mov inc xor in (bad) jecxz jp lahf imulb inc push mov repz jmp jo ss xor cmp call pop cld into das cmc mov mov imul pop and add jnp scas jle dec out dec insl push movhps jns add cmp push jecxz mov mov and js mov test inc xor std js ljmp mov rorb ds push iret (bad) (bad) (bad) mov jbe movsb xchg arpl outsl (bad) loope arpl inc int3 pop mov xor pop clc in ror (bad) popf loopne mov fistp pop loopne imul push imul jg jg jp (bad) (bad) fist or mov je sti jl cs into pop (bad) lahf or clc add sti mov xchg shlb xor adc (bad) (bad) mov adc nop jle aas dec push push mov push mov inc rorb or movsb jp cmc or outsl adc inc mov xchg fcmove lret push out loop (bad) pushl movsb xchg sub fistpl fldt loopne pop out adc ret outsl lcall aas andl sub pop and xchg repnz (bad) (bad) (bad) dec in repz mov adc mov test adc mov and mov (bad) (bad) fistpll insl jle (bad) leave popa fnsave iret inc pop sbb loope call in jmp mov push aas outsl imulb stos mov jno test add outsl (bad) ljmp mov xchg lret push cmpsb jae mov adc lods pop adc imulb (bad) jmp ret sub pop clc fldenv pop or sub call pop sbb inc outsl cmp inc (bad) xor (bad) jg ljmp ja lahf mov shrl adc jo push flds pop aaa cli (bad) dec pop shr addr16 fwait ljmp imul (bad) movsl pop sub xor mov mov inc (bad) pushl imul clc jae fimull es scas fistpll mov xchg popw lea std nop inc inc xlat jg ficoml (bad) call int3 xlat jle mov shll call cmp fs xor incl test jle shl mov push (bad) shrl (bad) mov xchg mov lods clc fcoml adc lcall adc scas sbbl fidivrl mov push (bad) (bad) (bad) call aaa imul or mov testb xor sub push dec je add popa in cs lea lock jmp lcall adc enter sbb jno jecxz (bad) decl ds or sub xchg cmc xchg mov std or or lods cs push (bad) cmp xchg pop data16 es (bad) clc (bad) (bad) (bad) jmp xor mulb pop mov cmp or aaa hlt xchg jae xor jno pop push sti mov gs (bad) mov sarb leave (bad) arpl aad pop (bad) jno fnstsw (bad) (bad) jmp pop insb jno out imul or (bad) js jmp xor mov dec cs (bad) (bad) (bad) jmp jb cmp inc movsb test cmp adc pop push sbb call sub xchg insb xchg mov lret loope clc or gs (bad) ljmp or das loopne clc je in mov cmovs inc add call mov mov pusha and imul loope (bad) lcall jg movsb (bad) ljmp cs push pusha flds mov stos mov rorl int3 inc jg idivb cmp xor xor movsb jl jno in cmp jmp (bad) dec loopne lret orb daa ffreep sbb sbb add stos out jns testl mov or loope and test jbe int insb (bad) fwait mov lahf lock outsl std mov jmp or or mov rcrb in mov hlt add xor loop mov fisubr outsl std test jge rclb dec mov or xor pop sbb lods cmpsl and (bad) (bad) call or (bad) mov addr16 jnp (bad) jecxz pop std enter imul add clc (bad) (bad) pop mov jb jp jns cmpsb clc lods (bad) or fimull mov test fdiv std jl xchg pop mov (bad) (bad) jg mov adc test test (bad) outsb sub stos pop and push test cmpl in mov xor sub (bad) (bad) ljmp adc rcll mov imul mov adc push movl inc (bad) decl aam inc bound xlat ljmp dec cmp adc ret (bad) lcall scas movsb ret (bad) mov scas dec cli enter scas gs or pop fsub xchg call clc inc mov repnz ss cmc add adc or mov cmpsb sahf (bad) (bad) mov sub dec call lods adc jbe and dec (bad) popf enter fcom sub (bad) mov out pop addl in xlat ficoml mov mov in mov fcomip (bad) dec in (bad) cmp xchg dec mov in in (bad) jmp and cmp cltd adc push mov loope aam and (bad) (bad) decl jne xor pop xor dec addr16 and lcall dec push xor lock std aam mov (bad) jo mov inc ljmp dec stos shrb xchg imul mov xchg push popa fmulp popa sbb jae adc sti (bad) mov cltd xlat ret mov out test push dec xor or popf dec or cld mov jno lock aad mov arpl inc loope adc adc das push (bad) shr jo pop push (bad) jecxz test pushf scas mov mov mov mov inc rcr dec mov adc xchg mov cmp mov pop mov mov dec mov negb push mov pop jmp jl mov sahf push or jle je add jg pop xor loopne push lea incl cmp loope mov ja push sub aam push sbb mov mov cmpl cli or ja and (bad) decl jae (bad) lods jecxz xchg ss mov call cmc out pop (bad) mov lcall (bad) (bad) decl jg push or lock cmp or in inc adc add scas sub mov pop mov mulb imul mov ret inc pop outsb dec cmp dec sub gs iret cld (bad) mov jecxz and fist ja (bad) jmp rorb jg ljmp inc outsl in xlat jge sbb pop mov in lcall xor pushf jo int3 cmp data16 jle and push lcall pop lods std mov pop popf icebp or (bad) dec (bad) (bad) shrb sar (bad) (bad) (bad) (bad) shrb clc fisub scas test bound mov dec (bad) xor ljmp jb cli adc clc enter mov dec (bad) mov xlat leave (bad) or jnp mov inc (bad) daa inc cmp insb test lret les (bad) mov hlt mov cmpsb jb lea jbe sub jb push out ror dec pop (bad) (bad) (bad) lcall sbb push (bad) mov jl sbb outsl jns aas (bad) xchg adc push add pop jmp idiv (bad) (bad) mov fimul xchg add sub jp sti add dec add jge cwtl pop (bad) (bad) (bad) (bad) jmp push lods inc cmc or mov repnz xor push push mov popa mov icebp pop push adc ljmp in (bad) mov clc or daa cmp and sbb bound (bad) (bad) xchg push mov leave lcall (bad) push mov cs pop loop nop or cmp inc (bad) movsl mov dec add lods sbb stos add (bad) (bad) mov push mov cli int3 (bad) in lds or pop ljmp mov jl inc int dec lock xor xchg ss mov xchg cli lret mov testl mov pop test fnstcw pop fisttpl and movsb add adc (bad) dec (bad) ljmp (bad) dec push push (bad) testb mov xchg adc sbb xor ljmp and outsl imul aas aaa jmp and push jns std mov outsb pop int3 cmp div aad push (bad) fisub insb aad (bad) (bad) mov movsl adc fldt mov xchg aas pop inc fidivl dec leave push mov adc out cs lahf fidiv lods push pop dec outsl icebp (bad) pushl rcr fistpll in loopne add mov mov add pop mov test fstpl sub outsb pop sub enter stos das cmc (bad) jg push mov (bad) ss lcall dec es mov sub xlat cmpsl pop mov cltd cld push std inc enter rol adc fildll (bad) sarl mov outsb movsl pop js jmp lret mov or pop or push leave pushl xchg mov lods movsl test push sub push push inc inc movsl jmp adcl inc xchg das xchg loop inc xor add (bad) ljmp jl fild stc adc inc mov daa in sub or pop (bad) jmp jns mov clc (bad) test cwtl mov iret add xchg xlat push sarb inc mov cwtl lcall int and in clc lcall sub sub lret adcl add (bad) (bad) ljmp push adc inc rcrl bswap arpl repnz neg mov sbb add mov and xor lods xchg test je (bad) es je (bad) (bad) incl mov movsl dec lods xor ja incl xchg cs addb outsl xorl imul jmp aas repz stos and stc ss xor (bad) (bad) (bad) (bad) jl sub inc jo dec jmp fiadd cmpsl cmp and pushl sbb lea (bad) push lods sub cwtl mov add dec mov xor call cld push add or mov adc clc in lock inc dec lock (bad) call fstps xorb adc repz lret or mov outsl cmc ljmp aad ss cmpsb test sbb sbb ret (bad) (bad) push bound fiadd fsubl faddl in out xchg dec jl test das sbbl incl int in add sub sub mov jl or (bad) mov sub sarl cmpsb mov out stos std adc fcompl mov and pop fcomi repz ror adc (bad) (bad) (bad) mov sbb cli cmp pop sbb movsl int3 mov fwait or test out (bad) (bad) lcall fisttpl loopne iret pop push aad das ret xlat jnp jae mov jl (bad) (bad) lcall sbbl push mov fcomps ret jl push mov mov (bad) clc fsubs adc pop dec or dec mov (bad) leave xor add lret push sub sti repnz cwtl add mov pop test add mov fnsave mov pop add mov fwait jg jae xchg ljmp push std test add repz inc cld pushf add sti dec xchg sub pusha pop mov fstpl cmp mov adc (bad) lcall in fwait push pop and sub call les fwait pop notl outsb mov adc fnstsw pop pop cli fsts mov pop dec loop ljmp (bad) (bad) dec leave ficompl xor adc pop int push in push ret jl dec mov (bad) pushl sbb add fisttpl push (bad) mov js idivl and data16 cld mov mov pop icebp lods xchg inc mov push in (bad) (bad) call inc sar and (bad) and mull dec lods mov mov fcompl je sbb dec mov pop jg ljmp inc dec in in xlat popf or mov (bad) lahf (bad) (bad) decl inc xchg pop mov dec and icebp cltd jle add call sub (bad) incl in fwait out dec vmread inc insw lcall jb (bad) jg mov dec (bad) sub add add nop cvtps2pi loop (bad) js jb insb or add test dec (bad) (bad) xor mov pop clc outsl (bad) decl fldl rorl ficom sub inc jp jns shlb and fiaddl (bad) incl nop pushf hlt sub enter inc pop test (bad) (bad) js fs jg pop mov aaa out mov dec popl ljmp loopne dec cltd dec repnz sahf scas fdivrs outsl or pop add stos lock pop cld (bad) fistpll and cmp inc sub sub (bad) incl mov add xor and lcall sti or (bad) jnp fmuls sahf or movsl jne mov outsl aad rolb pushf cs shr inc push (bad) (bad) decl mov xchg out imul out test aad push fisttpl inc jmp (bad) (bad) mov jg lcall mov cmp popa push xor pop nop int out ljmp cld incl aas push fs (bad) mov pop sbb or jnp test mov lcallw jmp or cmp notl int jnp mov jb sbb decl push mov out fnop dec add xor push pop lods (bad) (bad) jg gs aam cld xor fwait adcb mov mov movsl test (bad) pushl sbb or shrl stos popf xchg (bad) hlt cmp (bad) call mov lret std or ss mov dec or cld (bad) incl jmp xchg pop xor xorb mov jg call adc push iret pop sub dec push cmp sbb stc mov (bad) enter ljmp test push push jmp push dec std dec mov insb jnp sbb ljmp cmpxchg jmp xchg xorl ljmp (bad) xchg push adc sub xor sbb push das jl out insl xchg xlat add dec cmpsb jmp jl pusha ljmp incl hlt push push xor pop inc inc push push aaa lods imul (bad) (bad) inc movsb (bad) imulb daa inc push das ffreep jne std in xchg out sahf pop pop inc jae fnsave lods (bad) outsl icebp or fidivl xor jle insb pop mov (bad) mov xchg sbb pop lcall std jmp (bad) jnp or mov clc loope fwait xchg out loope sub sub adc test mov leave xor fwait int3 mov (bad) pushl mov test push mov out fwait inc mov leave clc (bad) (bad) (bad) lcall sti aad inc call push bound loopne in lds push mov jmp add cmp stos aad mov xor push test (bad) incl inc xor shll adc add mov sbbl pushl cmp mov push imul inc lea clc inc insl pop shrb insl inc (bad) pop aam lret jmp jg movsl mov adc das jno or mov std sbb or mov cmpl xor (bad) (bad) outsb out outsb mov ja lods cmp push out jns adc ss in stos add fucomip ljmp push sub aad dec test jle fcompl inc cmpsl or mov jg movsl (bad) in shr outsl xor fisubr push add add jmp out mov fmull repz mov idiv lcall shr aas out sub jo cmp ljmp cltd addr16 push cmp dec sbb inc sub sar jno sbb imul sti add jmp imul (bad) jg outsb sbb aaa pop sub or push fs adc adc aaa xor xchg sbbl repz dec add outsb add mov in stos leave dec adc (bad) mov jmp xor outsl push cmpsb pop imul loopne (bad) mulb mov sbb jne les pop sbb (bad) outsl int3 sti xchg add (bad) mov std xor add icebp jle mov lret xor (bad) (bad) mov jnp lods (bad) sub das (bad) pop orb sub aad or cmc jecxz or mov mov aad loopne xor jg mov repnz mov loope sub aaa or lcall popf or repz fimull and pop jg pop dec pop test div push adc mov jg incl jge mov mov (bad) push cmp adc pushl (bad) lret xor push pusha (bad) pop inc fldt adc (bad) decl lds cmp xor adc stos data16 xor fucomip decl pop loop test and pop out xchg jnp mov icebp sbb call inc adcl jp mov outsl std das lock aaa push jl mov xchg xor adc push push cmp ljmp lock mov out sub jbe sub scas (bad) (bad) jg (bad) call push push ss mov rcl dec add xchg inc jnp lcall mov lret cmp ret fiadd jge mov stos enter pop (bad) jg (bad) (bad) stc sbb outsb rcll fcomps packsswb and (bad) call jb jecxz jb pop push jecxz pop in lret mov fucomi iret outsb jmp sbbl idiv pop clc fmulp ss out xchg pop fldcw test pop subb add (bad) (bad) pushl imul jp loope lret cs test mov incb jg xor popa push ret mov pop mov sbb mov add mov fs cmpsb rcl mov mov or push popl or pusha and (bad) (bad) jg add fcompl pop pop in and mov jle add dec or test add loop inc outsb rcrb popa ret cli inc pop jne js push les mov lcall imul leave test pop out xchg sbb sbb add cmc (bad) (bad) (bad) call xor pmullw or inc push pop sbb outsl loope push xor popa inc daa mov dec adc mov stc sbb insb jmp jecxz and xor fldcw lods call pop scas adc mov cwtl mov insb les lcall fldt pop arpl add and adc add call (bad) scas int3 (bad) jno inc ds into hlt lret (bad) push call xor mov mov loope scas sub jmp (bad) (bad) mov mov clc iret imul mov inc imul mov jmp jle (bad) mov repz cld sbb scas lods rol xlat in idiv ljmp scas sub in test imul or mov test inc jge inc push (bad) call push ss sbb adc je push ljmp (bad) jnp push or mov dec xor lock cld mov mov ljmp (bad) dec insb aaa pop bound mul sub adc cwtl dec inc sbb push sbb in cmc in sti scas add outsl sar dec jge cmp std cmpsl (bad) jne push flds push sbb aaa loop (bad) fstpl xchg daa mov push in (bad) decl mov mov dec in lea pop call mov decl mov (bad) stc jmp dec pop xchg cmp jp rcll (bad) decl (bad) fstl push pop mov pop arpl or cmp xor push (bad) call and dec sub add xor ljmp (bad) sti clc imul xchg and pop (bad) dec ficoml decl lods push inc jb xor inc sub sbb lcall lods sbb and mov std and sti jl das adc mov (bad) ljmp arpl lods cmp dec imulb stos adc aas jl mov call push push dec pusha insb pusha mov mov mov mov pop add adc sbb das adc pop lods and loopne jbe push jno in lcall fidivrl fidiv mov in jg adc jmp sbb lcall ss inc repz mov ljmp pop mov push scas test jns push stos push pop popf pop add pop cld outsl hlt addr16 inc fisubl or pop gs push je cmpsl decl std push xor sub cmpsl cmp (bad) mov fsts ss pop xor call cmp push (bad) mov sbbb mov lds mov (bad) dec (bad) (bad) (bad) (bad) sti push stc dec clc jle cmp push add (bad) push cwtl mov mov sbb ror outsl (bad) decl cli push gs (bad) mov push aas std jg enter aaa clc (bad) incl call dec jle sub pop cmpl fcos add lock idivl inc rclb int3 lret in inc jg rol push lods or (bad) pusha or and and leave (bad) (bad) ljmp cmpsb popa std insb ret xchg mov sbb mov (bad) (bad) jmp (bad) imul inc icebp pop popf mov lret js es jp sti pop std lcall aas nop fstpt cmpsl aas jmp fisttpl sub insl push add mov jae sbb (bad) std jg dec insl int pop aaa dec enter aas adc mov cltd icebp (bad) (bad) jg jns jmp mov ljmp dec xchg movsb jge stos xchg pop lods jle fwait mov mov inc push pop jp call (bad) call jp stos pop in out (bad) cmp mov int dec sarb push test pop int js mov in iret and xchg sarl (bad) pushl sbb iret lods lock fwait adc in mov fcos (bad) jg pop jmp fnstsw mov jns fiadd add imul jns (bad) negb and adc lock call enter or es (bad) and xor add xlat out push mov push mov outsl pop xor cltd cmp and test xor dec jnp sub (bad) incl ds jl (bad) ret es add push push jnp cmp outsb push inc insl es adc cmp lahf imul mov lret xchg fisubl mov ss add call test int adc add (bad) in add (bad) (bad) ljmp bound inc test xchg in adcl leave lahf mov add pushl pop in jmp inc mov inc jecxz scas out ret (bad) dec (bad) (bad) in dec mov pop das mov sti or (bad) jo push outsb push ljmp cld ljmp mov (bad) daa mov test mov push mov orb mov daa lcall add flds fcompl jge cmpsl inc inc adc mov mov inc dec int fsubrl pop not push in pop and jl mov lods cwtl (bad) (bad) ljmp push call xchg jne lea mov ljmp push adc cltd fldcw dec inc jnp out sub mov lods enter fnstsw ljmp fistpll cmc movsb push dec pop add push pop test mov xchg inc cwtl shr cld push (bad) (bad) pushl scas mov mov jns lret int push cmc jl push ror loopne out iret (bad) dec pop (bad) mov jp leave add pushf movsb into repnz jns loop push arpl cs dec clc pop inc ljmp lcall mov sbb imul test rolb or push dec or mov push iret bound das mov call adc xchg outsb inc hlt or das std into in sbb (bad) iret rcrb jo pop scas sbb push mov (bad) in clc pop mov out gs jl aaa pop clc lcall rcll das rcl das dec mov sbb outsl cmc movsl incb jp adc xchg xor (bad) (bad) (bad) sti xchg sub je aaa and push stos daa push xor scas mov mov loop push push push (bad) (bad) (bad) decl xchg inc adc xor outsl rol xchg sbb adc shlb (bad) fcoms (bad) aaa fdivl lahf cli dec dec arpl pop in sbb mov jbe push xchg lcall (bad) jmp popf mov pop adc pop dec pop lods mov (bad) mov js data16 adc pop mov mov call scas bound std mov pusha mov test lret pop mov ljmp or (bad) cmp out mov xor mov lcall out push xor repz sti jg adc (bad) lcall pop mulb aas sarb sbb xlat rcrl adc lret test lds and aaa ljmp cld aam and bound repz mov sbb inc inc jnp sbb imulb out out out add mov js push xlat and cmp aam mov dec xchg push mov shrl mov dec cwtl pop (bad) pop (bad) jnp stos cli sti mov jecxz (bad) pushl mov mov ljmp mov imul xor sbb jg xor push xchg lcall adc loope sbb pop sbb mov pop ja xchg out push rorb nop push cmpsl dec mov stos pushl sbbb sub or repz test ret jl push in xor (bad) (bad) call and int movsb xchg sbb add push mov adcl jnp (bad) (bad) jmp cmp clc scas mov lret ja xchg pop repz dec cmp incl push dec aaa jb inc mov idivl rcl push imul mov outsl scas cmp test dec pushf fbld insb sub or (bad) (bad) lcall insl adc adc in (bad) (bad) out xchg pop addr16 hlt insb adc sub out and xchg jg,pn (bad) decl mov (bad) mov js fisttp inc xchg mov dec imul pushf fwait pop jecxz cmp insl ljmp (bad) (bad) (bad) decl add shr aas fiaddl ds push push push and sbb ret pop cmc lret (bad) lcall ficomp mov mov lods add js,pt test cmpsl push movsl (bad) (bad) sbb in sbb push mov int in adc mov (bad) (bad) (bad) (bad) mov push pop insl lods jl mov adcb lea add in aaa loope (bad) jmp in push add fs sbb cmc bound sbb sub ficompl (bad) call and icebp iret adc jo inc xchg push add mov js inc xor lea loop stos sahf in ja adc out xor pop push inc clc (bad) (bad) call mov and push ja adc frstor mov cmp jb cld add mov mov xor mov arpl mov outsl jae sbb imul in clc pop rolb dec sub imull fimull stos lret incl xor xor (bad) dec es and (bad) ljmp insb sahf inc cmp sub push int3 lods test push cmp pop cld fucomip (bad) add aam or inc mov mov in dec pop jns mov test sti rclb clc mov stos hlt mov dec push adc call or js or imul loop je mov icebp bound (bad) fistpll push or mov std call ss push (bad) lcall (bad) adc jg andl cli orl jno sub mov adc dec loope (bad) fistpll (bad) inc cs hlt out push (bad) mov push insb leave stos and mov pop or movsl mov fs rorb sbb dec (bad) xor in insl adc xchg ljmp cs mov pop clc pop dec xchg lds (bad) (bad) mov (bad) push int3 push dec nop push adc jg sbb mov cltd sti ljmp cmc push pop inc hlt push cld in mov jmp jb in (bad) jg int cmp scas sahf and cmp fiadd jle cmp das adc hlt sub lret xchg scas in dec sbb xor (bad) in (bad) or fidivrl lret jo scas mov (bad) cmp outsl icebp mov ret push (bad) cli cli add lea lods or lock (bad) (bad) mov push cmc fldt fs push sahf dec pop cmp add inc insl das or ljmp loope or cmp popa add scas xlat negb dec (bad) paddq jae ljmp pop mov mov (bad) jmp xor sahf sahf and sbb and imul icebp push inc test jg fnstsw jmp ret cmp rclb std sar incl call cwtl icebp cwtl mov or outsb fnsave aad (bad) (bad) (bad) jmp lea push dec xor pop jo mov data16 loope pop lcall (bad) (bad) (bad) push pusha arpl cmp outsb sti add add jo jg (bad) cld push std (bad) jg jno cs stos cmp and mov xchg jns xchg mov icebp (bad) mov outsl jle ds xor pop sahf stc xor push sete lods (bad) pop scas jg pop enter and shrl (bad) jg hlt stos js bound dec fildll dec jno cmovne fneni(8087 addr16 mov (bad) (bad) (bad) jns xchg bound cmpsb js loopne add lock or mov incb (bad) jg call test pop bound shll insb test sub (bad) (bad) jle mov fimul outsl inc (bad) xor inc lcall fildll inc daa add pushl mov (bad) (bad) lcall mov lods push cmp pop mov (bad) (bad) fisttpl mov repz int mov in push jbe and fs add (bad) decl dec pop in jne mov loopne xor out mov push jno pop jecxz mov (bad) push or cmp iret push js or std (bad) outsl lock add add js loopne sbb cmpsl (bad) (bad) (bad) jmp rorl lahf out add inc mov data16 rorl repnz mov mulb loopne pop and pushf mov mov (bad) (bad) adc sbb ljmp pop aaa ja cs mov mov pop arpl (bad) pushl fldcw clc xor in fldt mul pop jecxz mov or nop pop sti pushf js fimul outsl cld ljmp mov xor mov movsl cs sbb push leave pop add fisttp xchg or loop inc aad fidiv or cmp pop and (bad) and add sub bound por jmp xchg test xor out xor adc lcall test int3 in pusha (bad) jb xor xor jnp sarl pmaxub imul (bad) (bad) decl loopne push cmpsb (bad) mov push mov and mov iret aam (bad) pop clc dec or lods jg sti in in xor bound sbb incl test cmpl and (bad) (bad) ljmp lods js dec xchg pop sbb test dec mov inc xor pop jg lods or nop mov push cmpsl xor and cld call mov push scas loopne in (bad) (bad) pushl sub les cmpsb test jmp mov int3 pop sub sbb decl inc jns and sbb aam inc jl test sub sub mov (bad) jmp add mov mov pop mov pusha xchg (bad) mov shrd arpl (bad) mov add (bad) dec iret push test ret dec aam push xrelease cmp movsl loop pop jae mov pop scas movsb mov and (bad) (bad) incl mov or test popa cmpsl and cmp mov push mov into testb inc hlt pop cmp xor adc int dec shrl (bad) div add mov sbb (bad) (bad) (bad) jmp jecxz ret mov out aaa jne movsl sub cmp push in sbb pop push jl subl jnp pop mov insl outsl push (bad) inc xor (bad) jg imul movsb fs fstpl pop (bad) mov daa pop cmpsl icebp sub std pop cli adc push notb cmp je imul mov or std lcall aaa sbb sti enter sbb add push sbb lret mov (bad) (bad) fild bound jno,pn fild (bad) rolb enter shrl fnop out (bad) jl or jle sub lahf (bad) dec bound (bad) push outsl inc mov bound sub adc inc popa sbb jb jg (bad) pushl enter jecxz dec in (bad) movsb add cltd xlat call jg loopne scas (bad) jecxz add inc outsb inc xor jge jle jg push out dec mov es add inc sub ds push pop incb (bad) lcall xchg jl fdivrl fcomi lock int enter xchg int3 xor push loopne (bad) decl inc push push dec rcrl fs sti sub sub aad sbb dec mov (bad) (bad) (bad) mov xor inc pusha je insb bound andl out xchg jmp mov lcall push in add and mov inc mov jl and inc jecxz fbstp (bad) (bad) ljmp xor aas mov sbb adc mov xchg aaa dec imul push js gs adc jp adc notl addb push cmp add jl sub cmp mov std rolb iret clc ja or sbb cmp jecxz mov incl or push sarb (bad) dec mov mov jbe test decl jl mov inc in insb adc inc jg (bad) call test push and mov pop inc mov lock jnp loope (bad) call push popf (bad) jno arpl fldl sbb xchg ror cmp jbe loop dec jmp mov dec push aas mov jbe cmp jle dec xchg (bad) (bad) (bad) dec cmc pop adc dec movsb (bad) cld subb mov or sub das (bad) (bad) pushl adc mov mov cmpsb (bad) jmp mov cmp cs or mov (bad) cwtl add sbb shll les sarb pusha (bad) (bad) pushl pop loopne sub loopne aaa out test lods fwait push (bad) and mov push (bad) mov adc rol and mov aas (bad) mov imul and dec sub push or cmp (bad) gs lcall aam lcall mov mov in insb cmp or and icebp pop fdivrs std (bad) jg sub loop in add lahf out icebp cmp loope pop ret repz sahf (bad) (bad) ljmp cmp adc test xor push mov or das mov ljmp dec push repnz lods daa stos cmpsl fbstp mov mov xchg mov (bad) (bad) (bad) incl sub adc int3 jle out imul and ds orb leave mov pop sbb pop decl or stos mov js xlat imul test incl daa xor lret dec dec xor lea fucomip decl out stos in xor ret push lahf pushl movsb mov jle xchg repnz xchg sub add dec mov icebp (bad) mov loope pop cmp loopne sbb adc movsl xor out es cli (bad) push lea movsb es mov inc add ds adc dec add xor push outsl or lret (bad) pushl int inc bound mov stos sti loope adc pop adc das jnp iret adc sbb idiv movsl (bad) pushl popa loop fcomps nop jmp imul lcall arpl sub enter outsb leave not sbb scas pusha mov push sbb jp std jg repz sub enter lret movsb (bad) (bad) lcall lock notl mov ret repz ja dec sbb mov (bad) (bad) call clc arpl mov es adc inc inc ljmp mov test jbe ret push popa stc subl fstl insl std sahf jns insl mov push clc ljmp mov mov mov lock (bad) loopne mov decl pushf leave (bad) or jo mov xchg jo adc repnz cld (bad) jg test jecxz cltd mov loop (bad) mov (bad) mov fcomi daa (bad) jmp pop push pop stos std jnp push or mov jp sub inc (bad) sbb outsl pop jb push mov loopne test cld cmp push (bad) ljmp lea adc xchg pop test mov stos lea cmp (bad) call push push aad adc and cmp loopne pop xchg bound lods xor decl test roll ss sbb push add fs xor xor push push inc xchg mov (bad) pop inc fist jl push gs lock (bad) ljmp (bad) stos add lret mov lods xor cli shr sub fcmovnb inc dec mov in xchg add pop or (bad) mov (bad) xchg je jb lret stos iret and jne pop pusha pusha enter jg decl mov push insl bound mov jl cs lret inc jg ljmp push gs mov adc je loope mov xchg pop repz mov mov fnstsw (bad) incl stos mov sbb movsb dec test or mov inc je push clc (bad) call stc lret aad adc pop push outsb inc sub jmp mov ljmp sub pop fisubrl mov jno (bad) lcall ffreep or pcmpgtd imul jo jge roll sbb call negl pop imul out in push out fnstsw and fild ret (bad) and jmp (bad) (bad) mov xor (bad) jo sbb jl pop pop test out lods aas xor inc pop sub mov xchg mov clc (bad) js popf icebp sarl std push in dec gs push xchg mov sbb js mov (bad) (bad) incl insb insl (bad) and ficoml cmc inc or aaa mov (bad) jmp fildl (bad) lret mov cmp es sbb pop (bad) ljmp stc xchg cmc cltd jge push lods js rcrl std rcr mov add fsubrl xchg xchg push in mov inc (bad) ljmp shrl outsl and (bad) fisubr or dec lret sub pop pop cmpsb iret cmpsb and pop xor aad cld outsb pushf sub and mov jl add jg (bad) add int3 xlat push inc in pop ror xchg fstpt loop (bad) (bad) (bad) fisubl or push inc dec jb int fcompl or and xlat insb push cmp add cmp js fimul fcoml lods dec mov add or mov mov (bad) jbe repnz movsb test cmc sbb notb mov out pop or outsb (bad) sub call lret pusha imul pop pop add mov pushl sub cmp mov mov cli ja cmpb adc test xchg xchg dec mov (bad) mov out jl leave mov mov out push jb push (bad) (bad) jmp inc aas movsl dec imul or addr16 rcrb jg (bad) (bad) mov (bad) popf lods repz and inc clc idivl cwtl adc (bad) jg incl xor xor cmp fsubs fidivl mov and push pusha dec sub loop int jo movsb inc xor mov scas (bad) ljmp mov (bad) jae push stos scas insl xchg adc push push (bad) mov (bad) jmp or stos pushf sbb xchg cli mov push cltd es (bad) (bad) jg stos stos push or jb in push xchg rcl fist dec push mov sub je dec stos fadds or mov pop push clc ljmp aam xchg fisubrl loope push lcall call fist xchg pop inc (bad) insb xchg dec test xchg push cld (bad) jg sbb pop adc mov dec (bad) add stos bound scas dec mov jns xchg xchg jne (bad) (bad) (bad) lcall dec mov (bad) fsubl outsb movb sbb stos xor sub ljmp cmc (bad) call lret mov cmpsb xor bound mov inc (bad) (bad) call dec in lods sub inc pop sar (bad) decl test xchg and (bad) fwait mov xchg pop ret ret (bad) jmp clc (bad) mov mov jp cmp push sbb movb (bad) (bad) pushl mov fwait outsl or fsubl xchg inc nop and push pop je inc or insb insb (bad) mov cmp or iret sub jne or das push (bad) jg push lcall insl jmp (bad) mov bound popf jb pop push cmp aaa fidiv sbb addl outsl rclb stos xor shrb fnsave negl (bad) (bad) incl stc xor pop shrl cmp pop mov test mov pop loopne lcall push jb add (bad) add loopne addr16 (bad) jg dec fs aaa out lds mov pop fildl push (bad) xor sub mov inc in or fbld repnz lods loop (bad) mov (bad) insb sub adc dec dec andb sbbb lcall jmp fiadd mov mov inc push mov (bad) (bad) (bad) mov sarb ds pop (bad) xchg dec (bad) loop jo fsubrl rol incb (bad) call xchg ljmp sbb or or inc and jle test iret mov jae (bad) mov mov jg add jns adc out mov add jp cmc jg loopne add or push shlb scas ljmp outsl sti test jns jecxz pop and push mov push dec std push add jg lods add (bad) jmp jmp shrl in mov and sarb pop movsb inc fnop mov (bad) decl jmp jge jae outsb push push test jge pop imul je mov jp jle sbb (bad) jmp push das inc or xchg les sahf xor (bad) call fcoms (bad) or out cmc test inc inc jbe aas jnp (bad) fstpt pop mov cli jnp lret (bad) out xchg push divl aaa call lea bsf jmp jp icebp fwait pop lock (bad) push iret mov pop into fwait add mov scas mov push es rol lods (bad) ljmp push dec cld shrl mov movsb dec mov dec (bad) (bad) (bad) lcall or jbe xor jno cmp lods fist out mov sub (bad) (bad) call sti jecxz push sub lock fwait neg test push clc loop jg mov repz adc xor daa inc push sub cmp pop (bad) (bad) decl iret arpl sub enter and into push or (bad) jae bound les and outsl jns pop stos xchg clc cs cmpl out push xchg in mov xor sub inc (bad) push mov sbb sub out adc subl adc rcll push cld (bad) inc call sub je dec sub (bad) and jnp push iret ret inc incl xlat xchg sbb sbb fild (bad) cmpsl (bad) rcll mov ret pop mov (bad) (bad) repnz dec and aad addr16 dec xor nop xor (bad) mov or fs push sbb mov je insl sub fnstsw (bad) decl xchg out and or inc js cs sar jg (bad) clc out sub pop cmp sub fistpll sub sbb mov adc jmp ret outsb push mov fdivp pop xchg popf jnp mov jb cld and pop jns xchg (bad) shll fcompl psraw ljmp aas rcr jns popa pop cmp add iret mov orl adc jbe jl clc (bad) (bad) clc xchg mov mov enter sub sbb call lcall add (bad) ds cmp mov lret movsl jge aas sub jmp pop dec cld (bad) incl xchg jp push call fildl add fisttpll bound popf push repnz mov call das movsl (bad) jg mov cmp insb add ja (bad) (bad) (bad) pushl dec outsb push xchg and roll mov xchg cmp jmp cmp roll or sbb (bad) ljmp add push repnz frstor jae ja in inc mov outsl inc jg mov pop popa mov (bad) (bad) jg lods stos ficoml out push mov sbb mov repnz ljmp mov outsb dec fldl stc test rorl into fisubl imul add mov dec mov pushf fcompl xor stos test aam push out cmc xchg mov jg das cmp push adc lods inc shr sub sub inc and sub jmp sti data16 or pushf les call lahf lahf insl imulb pop std in insb jae or (bad) pushl out sub (bad) xchg aam push enter dec push scas aas pop call sbb sbb sub int3 aas negl mov mov js js (bad) sub mull test mov mov xor outsl adc inc incl call or push xor or or inc ret out loopne outsb popf push outsl lock jg shrl lods or cld jno std cld mov cltd xor lcall push adc lret add ds dec ja std xchg xor out inc xchg adc das jle (bad) jmp mov sbb imul lcall (bad) fistpll xchg or add loope lahf push cmp pushl sub lea xor mov dec movsb sub or sar cwtl add int and push dec xchg scas push into add push mov (bad) in push dec lods insb cwtl pop sub cmpl ret shrl cld (bad) jmp xchg mov add (bad) jbe dec sub sbb movsl and adc insb (bad) incl mov aaa and mov jmp cli pop sub in outsl add add daa sub outsb adc pushl mov mov (bad) (bad) dec testl sub shrb int in cmp xchg cmp sbb fldcw test (bad) (bad) std ss adc pop sub pop dec das or push push ja std sbb mov lock (bad) js sub sbb sub inc mov jb pop inc mov rcrb (bad) ljmp jle rol adc xorl int xor test arpl (bad) (bad) jmp inc icebp mov mov ja push stos mov cmpsl or jno xchg nop (bad) (bad) (bad) inc cmp dec movsl dec sub lcall stc xor lea inc jno inc addr16 mov loop test pop push mov pop push ret fbld incl fstps adc outsl insb dec out (bad) (bad) (bad) (bad) ljmp nop fdiv add or push xchg or std sub adc jl push (bad) (bad) (bad) cmp mov inc or popa inc js cld sub iret gs mov pushl stc adc out sbb sbbl hlt inc sbb pusha je ja push fdivr in xor cs rcrb pop test outsb test mov ljmp cmp sti mul pop into or inc cmp test cmp push adc mov push fiadd jmp loop popf xlat xchg incl call and cmp push dec push mov out xor iret loop js mov sub push xchg lret sbb or popa xchg xor sbb cmp (bad) decl aad in xor iret or es mov mov rol aam clc xchg push stos imul xlat or (bad) xor (bad) (bad) pushl xor andl xchg (bad) cmpsb add sbb fidivr stc clc decl xchg mov xlat xchg sbb jg outsl xchg data16 and push cs xchg cli inc ss gs push xchg lods mov pop dec (bad) (bad) (bad) dec and mov mov gs sbb (bad) outsb xor (bad) ljmp (bad) (bad) sub or sbb psllw jb test xchg (bad) faddl test int xor and aaa mov outsl push push imul push pop out out mov test imul mov cmp or in (bad) push (bad) faddl popf mov gs push add movsb test mov outsl hlt (bad) pushl cmp cwtl push lret out push and std (bad) decl add mov stos and dec movsb push (bad) repnz inc cmc (bad) (bad) das mov outsb jbe sub dec (bad) subl (bad) data16 ja rorb fwait mov mov gs pop clc pushl ss ret ljmp add jae (bad) call sbb push int3 incb push loop inc insl push movsl pop mov jecxz ja mov popf mov sub jno (bad) mov daa mov lgs mov xchg dec dec and fdivs out and mov (bad) pusha inc jl jg je lods push xchg loopne sub xchg cmpsb loopne mov out xor nop aas pop rol pop and pop lods push in ret aad dec mov (bad) jg xor lea sub xchg mov pop xchg test call dec mov mov xlat aad les jbe ret inc mov cwtl pusha mov jg (bad) (bad) jmp push int lock aad inc or and (bad) ljmp jno dec mov arpl xor mov add insl adc cmpsb or (bad) pushl mov lea shrl jl imul mov mov mov pop and je mov adc call mov outsl mov lret nop sub mov dec push insb int3 fildll loopne dec enter ljmp iret es fdivr movsl (bad) pushl (bad) mov sbb mov xchg in test and xchg in dec shr fucomip (bad) out push leave xchg out aad lret mov (bad) (bad) fbstp cmp loopne das jne pop cmp imul lahf push and sbb (bad) sub pop (bad) (bad) call cmc mov bnd add inc inc (bad) mov jl jne int3 and adc loopne (bad) (bad) (bad) (bad) in pop pop dec ljmp jnp xlat and rcr inc pop mov pop mov lcall adc sbb lcall std (bad) (bad) mov inc xor (bad) daa vmovshdup push xchg fucomip test (bad) (bad) call or xlat fwait (bad) fbld adc jg out xor decl stos pusha fdivrp outsw cmp divb jp xchg pop clc aaa and sub sub and ljmp cmc rcll cmpsb pusha leave fwait clc sbb mov mov (bad) lcall stc sub dec pop fs sub inc mov lea ss sti mov decl call or inc (bad) and out negl xlat das jns (bad) lock and mov mov (bad) (bad) decl xor (bad) (bad) movsl outsl pop lock xchg (bad) (bad) jnp call pushl pop mov fwait jno sub cld jae divl sub jg fild in jae cltd cmp in cmpsl loope ficomp (bad) (bad) call dec test pop sub fcomi push addr16 fwait xchg in (bad) (bad) lcall mov jge imul xor pop push push nop outsl pop pushf xchg mov and lret jle (bad) (bad) pushl pushf out nop sub mov lret sub fmull daa push pusha les or mov int mov arpl jecxz (bad) mov loop push jg popa (bad) fisttpll xlat movl fwait outsl insl (bad) (bad) (bad) (bad) incl jne jne pop push mov movsb out add movsl stc mov hlt mov enter rorb push cli (bad) decl testl jno pop movsl ljmp pop mov (bad) aam in out sbb xbegin lock pop (bad) xchg fdivrp xor repz in and xchg scas adc fiadd xchg add clc (bad) incl sbb sub inc lcall xor pop shll jne mov mov mov cmpsl ljmp add xchg push movsb mov orl (bad) clc mov push loope dec arpl mov jno push (bad) (bad) lcall into in shlb pushf shll mov mov xor in fcom (bad) mov and or aas aas out cli cmc xchg aam xor rclb (bad) (bad) (bad) call setae xor inc mov pop fidivrl inc fcoms dec sahf pop mov outsl std adc mov inc stos mov mov insl int sub mov jo or incl mov enter fs jae pop (bad) push std sbb outsl sbb pop ret sub stos mov mov (bad) mov rolb sbb popa xor mov and das inc lock (bad) mov push fdivrl ljmp push pop fidiv xchg mov adc or (bad) decl xchg pop jae mov cmc dec clc dec lahf inc jno (bad) dec pop cld (bad) decl fdivp jb addl push adc sahf mov xchg (bad) (bad) decl aas sar cmp mov and inc mov lock (bad) ljmp cld or hlt inc insl aam mov dec and or jmp push data16 jl xor xor inc mov mov int3 lea js es call (bad) ljmp dec fwait sbb push rcrl jb sub icebp addb mov loop popf mov pushf pop out scas and mov and adc mov xchg fsts inc push rolb int3 stc sub pop imul mov sbb (bad) (bad) decl push mov cmpsl push xor scas les adc fcmovnbe aas sub pop stos xchg dec cltd test mov dec fcomip add jns aas mov repz (bad) fnstsw jmp dec mov or lret test and mov cwtl (bad) (bad) (bad) (bad) cmp movsl test sti (bad) aaa dec sub dec movb sub or add (bad) fstpl rolb lock xor out jp and xchg mov jbe xchg out ret push icebp pop clc ljmp dec fwait adc xor or inc jb cmp adc cli cmp sub cmp push inc ret imul push fimull movsb adc (bad) (bad) jg mov ja and loop jno mov cmp mov aas xlat sub xchg std (bad) (bad) (bad) jns lods mov add inc adc lahf push sbb mov in inc insb (bad) (bad) (bad) mov popl fs xor xor je xor iret push adc jbe cld movsl (bad) (bad) (bad) in jns (bad) add xor and jae sub popa sbb xor rcll incl xor out mov sarl and cmpl es ret jno lret cmpsb bound (bad) (bad) push sti and (bad) dec xchg and and daa jl lds push cmp lea andb jmp lea push dec mov mov add sbb jle ss (bad) ficompl sub ds sbb push adc xchg push cwtl test pop dec aaa sbb int3 lret roll ret and mov cmc jg or or push inc sahf into das mov incl cmp xor lods pop repnz fwait sbb fdivrp jg mov sbb insb cmpsl int3 jg push sbb jne aas push data16 ljmp cmc in call aaa mov pushf out outsl aas rcrl mov pushf push pop push into icebp mov ja inc jnp fistpll je jmp (bad) aaa aam pop mov (bad) dec sbb jmp mov jnp mov cmp xchg mov bnd push xchg dec lods (bad) repz xor ret (bad) (bad) (bad) (bad) fcompl insl ljmp gs add and jg pop mov (bad) scas iret xchg cwtl inc stos jecxz sub and (bad) call test lods ss jnp xor fmuls lods movb mov add call push dec xor or ret lret cmc jae stc ds inc nop data16 mov dec inc sub daa jmp jle mov mov push daa adc pop pop push push pop xchg clc (bad) (bad) call push imul xchg orb dec arpl mov adc mov (bad) in pushl jl rcl mov insb jb es aas pop or push outsb inc jl test xchg fwait and pop test jmp push jl jae sbb xchg mov lcall sbb fiaddl mov or fprem1 mov movsl inc cs mov jo mov xlat and push leave mov movsl pop dec negb push sub loope scas gs mov mov lcall mov sti fldenv mov pop mov (bad) mov mov sahf jns sti ja pop insb xchg shll sub inc mov incl push xchg sarb jne mov sarb xchg xor stos mov mov cmp aas aaa (bad) pushl aaa cmp sarl mov dec dec fildl (bad) pushl (bad) push popf push fldl je das std jo cmp and add mov in jg (bad) (bad) jl mov out or sub lret loope int dec icebp jae pop cli (bad) mov or lret orl xor (bad) (bad) incl dec repnz gs xor jmp sahf ja push mov sahf push ljmp mov cmp and push lods cs pusha stc stc roll cld aaa push cli cld cwtl push dec mov aas aas xlat pop in xchg cmp call add mov pop pop mov mov (bad) incl adc addr16 je xor cmp ss mov (bad) jg inc xchg andl or sar dec inc cmc das add push lret ja mov movntq dec std mov leave pop fisttpl or mov inc test lods (bad) (bad) (bad) faddl pop cltd loope into roll and or repnz mov out mov jg sbb ficomp and cmp jle mov cmpsb mov pushl push cs xchg aad hlt ljmp sar (bad) (bad) jmp and jg dec xor and sub shr mov sti imul jnp aad push pop (bad) (bad) (bad) mov jge fidivl sbb fidivr (bad) push xor mov (bad) mov xchg daa push arpl cld push jp ljmp sub jg lods sbb mov aas cmpsb mov std (bad) (bad) ljmp les ja aam xchg mov js inc and sbb outsl incl lcall imul es fnsetpm(287 (bad) push out (bad) in in movsl jmp pop mov out jns add mov cmp mov pop cld push dec push lret sti ljmp dec jno mov loope shlb push insl cmp adc pop add xchg push (bad) jg (bad) cmp (bad) in sub cwtl xchg pop lods int3 test in aaa inc jns cmp insl and push sub into fwait and dec lods push cwtl inc sar xor pop (bad) sbb stos movsb adc or push sbb loop or imul push lods dec dec scas mov enter mov push lock xchg das in adc jae ret jl rclb outsl hlt (bad) xor cmpsb pop adc notl jae adc outsb sbb (bad) (bad) ljmp jb push mov pop stc popa xchg mov xor out jg decl mov fisubrl cwtl mov push mov adc pop arpl xchg (bad) mov dec cmp in fisubrl call lock push inc call test and in pop idiv int bnd fwait mul daa add (bad) mov insl (bad) and push xor or push aas xchg add mov jmp push dec ss xchg pop cmpsl jno cmp xor outsl pop mov mov sub icebp xchg jmp sahf sbb push (bad) cli adc out inc mov insb push sub xchg add popa outsl loope (bad) (bad) lcall mov lahf or daa mov je loopne mov mov cmp negl add mov test dec adc mov int pop push jno cs jg (bad) (bad) stc out sahf les hlt jmp sbb loope daa neg push movsl shl xor add (bad) ds pop out sbb iret mov ja ret loopne jbe jno addl mov (bad) mov lods icebp in mov or jmp scas sub (bad) decl fisttp add mov repz inc test test or cli (bad) (bad) call or mov call (bad) fstpt push mov mov or dec push call push pushf scas push xchg jae adc fdiv (bad) (bad) jmp inc outsl aaa inc rolb dec repnz pop rcl inc inc and cld into das std in mov loopne cwtl stc leave or sti mov xor outsl lock push sub mov test jno cmp dec add mov adc rclb xchg inc or mov ret fistpll xor sarb (bad) (bad) (bad) (bad) jnp lahf (bad) inc scas add sarl or push scas outsb imul fmull push mov lock in sub push inc imul push jb (bad) jg (bad) cmp mov jge not sub sbb insb sub (bad) (bad) (bad) fiaddl (bad) es lahf push les sahf inc mov icebp shr and loopne push in fisttp (bad) ljmp mov int3 faddp sbb insb movsl add mov mov scas fsubr inc mov mov pop adc xchg sbb push mov and jge call les jb fs or cmpsb inc test sbbb (bad) jg ljmp sbb jl or fiadd (bad) (bad) incl inc bnd pop inc pop clc add cmc cmp call ss lret push mov mov mov mov ss sub mov dec and aaa pop push adc xor lret jmp lcall clc (bad) call stc outsl nop mov fisttp bnd incl stc iret xchg dec cld cmpsl leave jg mov decl jecxz (bad) in jp imul push (bad) stc sbb jg jl jecxz and stc in scas pop insl mov in jg stc xor jle stc fstpt (bad) ljmp sbb or out and pop stc mov in (bad) lcall gs jl lcall pop and enter jns sahf jo clc mov fwait cld push (bad) (bad) nop aas inc ds push es inc add dec in enter xchg or cld ljmp repz aas lea xchg cmp iret and dec enter (bad) fisttpl in decb dec decb leave mov outsl xchg sub imul loope jnp stc mov shrl cld test std addr16 lahf dec incb pop fild mov repnz icebp push and outsl xor jl xchg pop dec (bad) sub lock cmp repnz xchg jg repnz stos clc and divl es mov jecxz push mov cs and in (bad) jg jnp out (bad) outsl add nop lea loopne aad adc loopne clc out mov sub mov sar call add jg out push xlat xor sahf in jl sub push xchg cld das std (bad) jne outsb out pop mov adc je pop cmp push jmp push cld cli mov popf ss xlat jbe sbb add pop adc ret sti cmp cld (bad) out out (bad) std std add lods cmp and add jbe fildl scas mov fcoml push jo rcll jo loopne mov rorl jecxz (bad) (bad) (bad) (bad) pushl test lret sarl sarb gs jp aas outsl fbld jnp sbb data16 sar mov sbb cmp inc dec cmp mov ja mov (bad) jg movsl add pop adc out sub or outsb (bad) (bad) (bad) call or cmp lods add pop add sarb or push cmp add cmp sbb (bad) cmpl pop add jg rcrb (bad) lahf sbb sbb xor pushl cmpsl shrb sbb mov outsb sbb and jge neg jle inc adc out cmp pshufw fmul sub (bad) push add add aas js mov test fimul or aas add (bad) mov pop shlb lahf and ret lock adc pop fdivrl jo subb (bad) lcall cmp dec mov fwait or movsb xchg jae xorl (bad) lcall mov add pop pop pusha pop inc pop lret jmp icebp jmp pop mov pop (bad) jg jmp incl pop fdivp jo push inc sar lea lods xchg xor lods sbb sub js or jle (bad) dec outsb cld xchg (bad) (bad) (bad) decl sub sub sahf adc lret inc mov adc cmpsl xchg cmpsl dec (bad) (bad) (bad) jmp imul mov popa mov push cmp cltd sub add mov fisubrl inc and xchg and loope cltd add aaa mov movsl call add sub pop ljmp cld (bad) (bad) (bad) mov fdivl addr16 and lock mov pushf sahf fldpi mov xlat int (bad) (bad) jmp jb jnp and pop loop pop mov aam mov xchg mov (bad) (bad) (bad) in mov mov jecxz in test lret sub movsl ja or (bad) mov jecxz insl in push in xchg jg sub nop outsl (bad) (bad) pushl hlt sbb mov cmc cmovns or ret idivb mov fdivs inc insl inc lock (bad) (bad) fnop call jmp adc lret gs cs jne mov (bad) inc ret in push xchg mov add std sarb fiaddl mov sti jmp adc xlat dec adc frstor clc icebp and dec and ljmp pop jl fidiv (bad) (bad) lcall ret test sbb into (bad) fstp push inc mov cmp dec fnstsw (bad) jmp xor add rcl and or add jp mov decl (bad) int dec or (bad) div ds add fsubrp jle inc (bad) jmp into mov jae ret fisubr mov in inc jecxz sbb mov or (bad) (bad) jmp int3 fldt ror xchg aam adc (bad) das fwait ret xchg jl cld jb sbb pushl inc imul int sub fwait jg incl xor out xor push adc vmaxpd lcall out fs sbb arpl sbb pop sti mov sub movsl dec movsl xor push mov fnsave adc (bad) call popf and xchg or sbb adc ja movsl xor test das mov mov lcall mov mov ljmp hlt lcall into rcrl loope les vpcmpgtb sbbb (bad) (bad) call jmp popf test xchg mov fs adcl sarb or inc adc js mov push or or sbb pushl cmp (bad) cmpsb enter push xchg inc sbb lcall ret rcr xlat sar mov jecxz fidivrl push ljmp mov stos push push outsl push je rorl test (bad) (bad) (bad) incl cmc push add ss dec jp icebp adc sub ds insb aam fcos xor rcrb xchg stos pusha ds inc stos push movsl paddd xchg out mov mov call lods das hlt jmp mov or in push adcl (bad) (bad) call ror inc shlb cmovs shl push mov add fimull jne pop (bad) (bad) (bad) pushl dec inc xchg idivb (bad) sub mov push (bad) dec sub dec scas gs push fldcw and push push xor xorl inc scas pop stos in mov xchg pop (bad) (bad) (bad) (bad) mov sub aaa int3 cmp and or sub add or sbb (bad) mov push pop inc iret fs push xor mov js sub sar (bad) (bad) lcall and ficoml cmpsb push sbb call es sbb cmpsl adc mov pop loop inc (bad) push lods fs mov shrl push or jle (bad) mov sbb shlb sub (bad) mov cmp popf ud2 repnz ds aaa pop out mov ljmp jle leave cmp jle sub lods cld (bad) cltd mov addl call int3 divl pop adc (bad) lret inc sub push movsl roll inc sub stos fisubl out insl idiv (bad) (bad) pushl outsl cmp cmpsb cwtl dec imul imul mov cmp add adc pop scas pop loopne loopne jns int mov dec xchg mov (bad) call pop addr16 inc leave fdiv push push lods ss popf pushf dec gs dec in sbb int call push (bad) or fwait leave pop fcoms mov fwait hlt (bad) (bad) mov mov pop (bad) cld imul lret cwtl je std out cmc (bad) ljmp in gs push (bad) (bad) shrl sub inc mov loop jp out std mov xchg popa scas and rcll lcall pop (bad) jns in mov and xor les (bad) jg insb jp sub jo fist (bad) jl call js lock adc fisubrl hlt subl (bad) decl cli insl dec out push sbb leave (bad) pop mov push (bad) (bad) (bad) inc jp ds and fisttp sub fxch push pushf jns jg rcr ds mov call sarl (bad) fbld push or mov jmp mov mov inc pop vpsubq (bad) jmp fs mov fwait mulb xchg mov je sub rcrb outsl cld (bad) jg mov fistpl lods pop shrb mov test or (bad) fmuls push push sahf push mov jl sbb (bad) (bad) (bad) (bad) fidiv sub je add or imul add das insl dec cmc (bad) (bad) in shrl pop mov or adcl pop ja divb clc das fucomp (bad) dec mov out add cmp movsl test roll mov addb fcompl xor paddusb sub movsl inc add cmovge and pop dec stos add sbb (bad) jmp mov or fdiv imul mov jns decl bound and and pop (bad) mov ds (bad) or jmp sub call push jmp sub repnz inc xor dec fs loope ds jl out (bad) push mov loope and dec push xchg es jo clc (bad) jmp mov stc add inc test and lahf adc (bad) jmp mov mov dec stos push cmpsb mov rcl addb sbb mov ljmp decl dec push addr16 dec cmp repnz push add fwait cs cmpsl cli test lcall insl or mov mov sbb cli pop imul jmp pop (bad) (bad) insl test sub lock xor (bad) insb jo inc push sbb fs xchg cmp mov outsl stos pop push lods mov stos pop sti dec (bad) cwtl aam mov sub mov and test outsb in xchg test xchg fdivr or (bad) dec sub cmp sub pop and cmp aaa je icebp mov cltd push sub lcall fildl mov cmpsb daa jmp clc lahf lcall mov (bad) pushl es addr16 lds push mov push or mov push and sbb jmp outsl inc test outsl push pop mov sbb jno jg lcall fcomps cli jb addl mov rolb or pop clc adc push xor pushf xchg clc aaa lea push movsb sahf cmp std (bad) lcall mov xor sub and xchg inc dec push adc decl sbb push adc lea (bad) loop adc xor sub mov scas aad or lds and div cmc cmp (bad) (bad) (bad) mov fs stc push pop test jo and inc jmp (bad) (bad) jg (bad) imulb jge stos cmpl ja in push lret and cld js ss stc add pusha decb test (bad) incl (bad) jle or wrmsr or ret mov shrl ljmp lock stc mov push and lods add scas arpl testl sub add imul mov sarb (bad) ljmp xchg orl aaa pop pusha xor pop mov (bad) (bad) (bad) jmp xchg mov pop loopne movsb add sti jns fs add xchg xor daa xchg rclb and (bad) (bad) (bad) (bad) fistl in xor adc lds cmp add popf add and fisub (bad) lcall sbb es int3 xor or in test push sub pop loopne es inc sub jae pop enter jge addr16 xor xchg dec std jg sahf loop or data16 mov cmp jmp imul xchg xacquire (bad) mov push clc shrl or mov je (bad) jg outsl jae sbb jle repz inc xchg sti idiv (bad) (bad) incl test movsb and xor inc or pushf mov test push sub clc lods les jo push cmp cmp decl movsl cmpsb lret xchg push sbb mov push lock mov xchg or inc and leave mov test or xor mov (bad) (bad) (bad) (bad) in xchg and or or inc cmpsl xchg pop arpl sbb mov (bad) incl outsb dec xchg dec add mov (bad) pushl or mov adc gs sbb fistp (bad) (bad) (bad) (bad) lcall or test inc mov mov in icebp in xchg fs dec jnp in decl shrb outsb out jmp repz stc sub inc dec es push loopne (bad) (bad) ljmp in sti hlt cmpsl inc mov in iret repz fmulp jnp call mov cmp xchg cli imul xlat negl xchg idiv stc or mov clc das std (bad) jg (bad) cli out in inc (bad) jnp es and mov (bad) sub mov pushf dec inc ret dec (bad) decl movsl mov xor pop test ljmp sub push inc mov inc in dec hlt hlt sub (bad) cmp xor push inc sub call clc push fistpl fcom mov insb out in repz mov sub decl lods sub iret stos sub test sbb (bad) inc cmp inc cmp addr16 loope pop outsb aad mov sub adcl inc push and xlat dec repz push push decl mov xor pushf daa dec cmp in or jbe imul ret test loop mov (bad) (bad) (bad) call test add and cmp mov cmp std mov pop xchg scas clc cld inc (bad) jmp cltd (bad) push adc dec mov xorb imul sbbl push pop jecxz orb mov push pop (bad) (bad) ljmp sub or dec cmp mov fidivl push or pop ds mov adc loop (bad) repnz cld and push push pop adc outsl inc repnz test scas mov outsb les mov stos adc adc das cmc mov clc sbb mov movsb int3 mov xor and (bad) (bad) jg shrl and les repnz and adc push or inc clc cmp ljmp ret jg and xor jg in and in scas cmp icebp stos and xor (bad) (bad) (bad) mov xchg cmp or inc js ret fimul and ljmp pushl push cld adc leave or inc js ret dec clc (bad) jg call out lock mov stos xor (bad) (bad) call adc pop loope push std call in lret test (bad) incl jge in ret pop cmc xchg loope or inc in inc clc push mov (bad) clc mov push loope pop inc mov mov mov clc (bad) pushf jne sarb ss ds ret lock sbb ljmp in aas push ret inc clc and mov insl test scas xchg and push or xor and aas inc pop mov (bad) mov add cld and xchg and repnz fisttp les (bad) (bad) adc jle movsb mov cmp mov adc adc inc pop jae push jnp and mov scas sub outsl aam cli loopne inc cld sub test decb not test ljmp (bad) and mov and dec mov and pop jmp (bad) fistl jmp sbb aas inc jl (bad) xlat and mov pushl repnz repnz xor pop inc in cli add mov les xlat in and add jecxz mov imul sub pop cli (bad) fcmovne adcl mov push inc stc dec mov inc aas ret add or and icebp push lock dec mov (bad) mov mov (bad) (bad) aaa jl,pn sti or arpl fldenv mov jmp pop icebp aad jmp ds je gs scas les sbb pop hlt test pop cld (bad) decl push aas cmpsl pop pop cmp stc lods lret (bad) push xlat adc cs xlat std mov (bad) (bad) ljmp xor xor xchg push sbb and pop pop icebp cld inc repnz sti clc mov cmc pop fstpl cmp incl jle (bad) call jecxz adc or stos push sti sbb nop jmp jno les inc mov sbb daa daa out jnp inc (bad) scas or cmp in test sti ljmp imul xchg decb sbbb loop cmpsl jg cmp xchg clc sti inc inc and insl sub rcll cmc sub cmpsb jns das hlt dec jle les cli sbb adc test mov push adc sti push pusha cmp movsl jg pushl ret jl loop inc inc les dec orl mov adc ljmp mov lds lds jle or outsl xor mov aam ret incb ljmp sub xor jmp adc out mov lret fidivr loop inc js xchg fisttp mov js (bad) xchg js mov xor jge jg lock ret fiadd lahf xchg loop or addr16 cmpsl decl (bad) mov adc inc fcomps xchg jb jg clc bound (bad) dec or push (bad) jmp imul ja push xchg testl sub loope cmpsb cs daa jnp nop cld cmp or insl lods mov out mov xchg sar aaa (bad) sub dec dec and aaa les xchg das (bad) in (bad) out (bad) mov and jge mov ljmp fcmovnu cmp xchg xlat test aaa inc ja pop cli fistp ficoml iret dec insb out sub sbb (bad) jg lcall out aad inc in test xchg mov leave rcll rclb mov xlat jne test dec decl out sbb sub sbb push xchg pop cli (bad) in mov aam cs les jg mov ret lds out sub or push dec pop (bad) incl (bad) enter mov (bad) pop rolb repnz jl jmp mov mov mov hlt xchg inc cwtl inc cmc lock movsl int ds jg (bad) push fcmovnu mov sti and cmp repnz decl imul das adc lock jge adc rclb push clc lods xchg push test pop je (bad) jg ffreep (bad) movsb fidivr (bad) div or inc in in (bad) or movsl idivb sbb jmp notl jecxz jmp fucomip add out ljmp dec (bad) (bad) jg dec cld call xchg jmp add loope int push mov cmp subl cmp rdpmc loop cld jne std sarb mov xchg mov iret xlat loop sbb fild in mov pop xchg stos xor jbe lods inc jmp and jp push and and jmp jg clc jg mov mov add scas mov decl das add (bad) jge mov jle (bad) sti pop cli jg cmp aad push jmp push xchg add pop fdivs sbbl loop inc js ret jbe mov outsl and mov mov jecxz pop mov ds call jb aad cs cmp test lahf jae popf or lods (bad) jg outsl cmp and fistpl imul hlt pop mov (bad) (bad) (bad) jmp mov lret push add aaa jmp lret test dec stos sbb std pop xchg loopne outsl push movsl fisttp fwait out out outsb jno mov fildll scas sbb dec adc cld je mov scas jecxz (bad) ljmp mov lahf xlat fistpl lods add (bad) dec mov sub jo inc (bad) inc gs and cmp push dec xchg sahf jno lcall fisttpll aas cmpsb sti out sub repz pop decl (bad) (bad) mov add xlat insl (bad) loope and pusha out fdivr (bad) (bad) call mov mov pop cmp aas fldenv add stc adc cmp adc ljmp clc jo pop jae movsl xchg test push mov cld mov cli mov push ret mov cmp pop add push aam in or dec sti cmp lcall incl or pop pop scas mov jne adc push push mov sbb and in add adc pop das inc fwait or adc das lock jbe,pn inc roll lea jmp xchg incb push mov or icebp mov sub loopne lods int iret mov lcall ret push (bad) (bad) jg mov (bad) jg inc push jge test mov and push cmc fldt mov call neg outsb (bad) (bad) cmc inc lahf inc call arpl popf test mov (bad) inc outsl dec push imul lods push jle or cmp mov push pushl inc (bad) push push (bad) lds jae fnstenv aaa xor adc (bad) (bad) (bad) cmp pop inc adc dec aad sbb push mov xchg mov jae fadd (bad) (bad) lcall mov lock int xchg xchg aad jmp push mov push test (bad) (bad) (bad) call mov pop push pop cmp jno mov in int aaa into dec scas gs and sbb (bad) (bad) mov in movsb dec and xchg cli inc mov testl mov mov lods cmpsl sub (bad) and rcrl rcl inc scas decl insl (bad) xor jp mov lods test sub xor (bad) lcall es mov push push jnp scas or dec mov sbb hlt (bad) (bad) fstpt fdivrl clc push mov movl (bad) (bad) mov arpl movsb push lods inc adc inc mov sub (bad) (bad) (bad) decl add outsl sbb rcrb mov cmp call (bad) (bad) std xchg jb cltd xchg or lret push sbb xchg iret sbb shlb (bad) dec cmp subl mov insb das pop xor jb or lcallw aam or xchg lcall push arpl lcall lcall adc mulb mov inc mov (bad) sbb xor ljmpw (bad) dec jae (bad) out in arpl fldt outsl std xchg pop xchg ret push cmpsl cwtl hlt push push test fdivl jae out test push jnp (bad) (bad) cmp dec xchg adc inc mov jp mov out inc call cmp or jg pop add mov inc push sbb mov (bad) (bad) jmp adc in pop stos mov jbe mov push and inc (bad) (bad) (bad) call mov sbb cltd push ss lahf mov out inc mov cltd jmp push and in xor mov lods xchg mov fcmovb movsb leave jbe push movsl pop call (bad) mov mov mov and outsb fwait cmp (bad) jg (bad) mov adc loopne nop push mov adc inc jbe gs imul icebp lds push pushf gs push jae mov push inc and mov adc push xchg push jo cmp ficom enter les arpl cwtl pop pop in sahf inc and (bad) (bad) jmp imul sub xchg int3 push test mov fucom mov (bad) (bad) or adc mov sarl fsubrl insb jbe xorl adc fwait (bad) ljmp sti xchg sbb outsl sub xchg and gs dec push xlat cmp jl (bad) mov jns cmp xor fcoms lea xor (bad) (bad) (bad) dec adc mov inc mov inc imul cmpsb adc mov imul enter (bad) decl fidivl mov es push pop sub mov (bad) decl notl cmp push mov or mov pop out clc (bad) jmp daa es mov or and mov jns and mov pop ljmp ja (bad) jne ss add push loopne cmp (bad) (bad) incb insl sbb test or push cmp stos sbb adc sbb lcall hlt xchg (bad) cld mov movaps push ja int3 pop pop stc call (bad) call mov push test ret ljmp movb rol mov jecxz jne gs stc gs sub fwait aad loope loope xor push (bad) call pusha adc ds es cltd scas dec or sub rclb flds sub mov rcrl dec pop cli (bad) lcall dec cmp negl nop cmpsl leave lea xchg push adc or pop inc jmp inc or (bad) pushf cs sub sbb or imul xchg xchg lock hlt mov mov (bad) mov sbb xchg mov cwtl mov in icebp test popf std std (bad) (bad) incl testb mov pop or dec or bound xor (bad) (bad) call mov and mov jp sub or mov inc (bad) lcall mov aas (bad) lahf jecxz icebp push push (bad) push inc xor push lock (bad) (bad) cmp mov aam shlb stos dec push adc pop std sub sub aad pop bound mov dec inc mov lea movl mov cmp test inc sbb (bad) (bad) incl fwait nop imul cmp fwait jb mov iret pop imul (bad) mov mov jecxz popf jbe fisubrl int3 dec pop insl leave fsin call or outsl rclb fwait mov scas (bad) (bad) (bad) jg dec bound add pop add inc cmc insb sub nop adc inc inc push call jmp xor dec nop mov add iret and je icebp (bad) call rcrb sbb sub dec cmp test jg (bad) pushl loop stos loop aas imul decl lahf cmpl lock jle out push mov cld das aas idivb inc inc and dec mov cltd push or pop fnstsw (bad) (bad) decl jne xor stc jns (bad) jbe xchg lods rcrb repz xchg (bad) icebp jg mov insb or sub (bad) (bad) jg mov mov neg cltd pusha negl ljmp mov mov cli outsl xchg sub pop aad popf aaa xor call jge jbe test enter (bad) (bad) jg int adc lods es mov jmp mov adc inc lret inc adc idiv (bad) jp push push ja mov xchg insl xor jge lcall les (bad) (bad) in sub mov cmp in rcrb dec pop insb inc jl xchg or xchg ret dec adc jmp nop push dec jo fs js call lcall xchg mov ja test mov cmp xor jg decl dec xlat jbe sbb lcall daa jbe jmp mov and adc je hlt outsl fiadd (bad) mov dec je cmpsl pop (bad) fcomi (bad) std xchg pop jnp jbe xchg les incl jp sbb and jae xchg cmp int3 pop jmp (bad) outsb sbb (bad) sbb adc cmp cmp popf dec dec pop push dec (bad) lcall std dec scas xchg jle je push mov lds cmpsb (bad) cmp push (bad) (bad) (bad) pushl mov scas and mov xor jmp pop pop mov lcall cld mov flds iret ljmp pop mov dec mov pop cs js fucomip dec fs sub mov push inc ss decl mov fimull cmp in call xchg ficomp pushl (bad) repz and popa (bad) out outsl outsl mov dec adc push jp jle call xchg and pop pop push pop push stos (bad) test cmp pushf mov movsl (bad) aaa clc sub leave lds inc repz mov push dec lahf mov push shll cli or lods pop jnp or inc sbb dec fwait pop cld push adc pop (bad) repz das cmp popf mov test sti jne dec mulb mov (bad) bound fdivs mov decl in loop aad loop subl mov cmp push repz (bad) je mov lcall (bad) pushl popf sahf pop call adc (bad) cs mov cwtl sbb outsl (bad) (bad) (bad) jle push in mov or mov ror xchg push roll fistpll jge (bad) push imul dec movsl xchg push jl arpl or repz (bad) mov inc sbb mov call cwtl push pop lods pop mov out fldl2e jg ret cmpsb (bad) ret mov (bad) mov (bad) fbld jbe (bad) scas jb xor lret rcl cmp push in jg call je jae out imul call fcmovnu test jo icebp std xor cmp mov (bad) jg pop jmp fsubr (bad) mov pop mov fwait xor push mov movsb mov push jne shufps repnz int3 std ret aaa dec mov cmp mov aad cmp fwait daa in lret test (bad) pushl cmc jle cmpsb into mov cmc bound mov test (bad) (bad) (bad) ljmp adcb js cmp (bad) repz push push in int popf pop mov inc fsubrs xchg pop lret or div mov jb scas xor sub cltd xchg mov inc adc outsb push sub int mov cmc inc sub jg (bad) (bad) cmp pushf mov movsl ficom out pop fcmovu fldenv cs mov push jge mov mov sub pop ja mov mov imul push (bad) incl xor mov out jb inc xchg ljmp mov aad (bad) xor mov imul (bad) (bad) (bad) fisttp icebp imul lea sbb fsub les mov xor call scas xchg and outsb xor (bad) loopne ret xchg lret (bad) imulb sar mov cmpsb dec pop dec cmpsb movsb sub xor cwtl xchg das std decl cmp sub ret pop shrb jnp outsl icebp icebp lahf xor cmp fdivl inc incl imul insl push outsb fildll hlt cli mov dec fucom out test jmp loop dec mov adc xchg dec (bad) (bad) pop mov lods jmp jno cmp enter roll lahf push pop push sbb fnstsw (bad) pushl cmpsb push mov in lea es mov pop mov lds das cmp xor jo pop fcmovbe (bad) and add jmp cltd pop cmpsl pop cmp stos push jl in fdiv push sar ljmp lods add adc pop (bad) lret pop js mov push movsb lahf cmp dec bnd xchg test rol das mov xor sahf int3 sbb incl jg sarb cmp pop push dec fdivl repnz xor xlat jne pop loopne or fistp push repnz in aam jecxz loopne,pt inc loope (bad) in pop stc stos ret sub ror jg in xor jmp (bad) mov and mov iret add jmp mov (bad) mov shll jne aaa cmp imul hlt xchg mov fdivrs jp stos sbb hlt cmp mov (bad) sbb lcall (bad) ljmp mov (bad) imul mov mov jnp mov mov add (bad) cmp ds iret adc js outsb fstp sub mov imul fild mov and in icebp xchg cli lcall (bad) test cli sub test outsl (bad) (bad) mov mov out push mov mov scas jnp icebp (bad) (bad) (bad) (bad) jmp jle stc lods stc outsl arpl push sbb xchg stc mov cli jb xchg out jae (bad) call rcrl (bad) jne out aaa mov push jp (bad) incl mov mov or push ljmp sbb mov jge leave aam mov xlat ds push jl (bad) (bad) (bad) decl push jge lds jp xchg jnp imul cli push push loopne (bad) (bad) (bad) jmp jns sbb inc push aam mov mov scas int mov jnp aaa je ja mov cmpsb pop in cmp ror test pop clc les sub icebp push jae loopne fnstsw mov mov test push out dec fsubr mov (bad) lcall (bad) outsb jns adc fs push outsl inc sbb in jns mov jne cmc das lock sbb sti shrl pop shlb mov sub ja push pop sbb fisttp ljmp (bad) pop or jns aas push test mov ljmp add mov cmp lahf jge mov cmpsl stos cmp (bad) lcall cld jp (bad) andl (bad) insl mov mov jno xor mov (bad) lcall stos fstl out stos jbe loop xor mul nop mov and (bad) incl clc cld pop push das xchg push clc jge xor (bad) lcall gs jbe imulb sbb jmp dec (bad) clc xor xchg dec into push hlt push dec (bad) xor (bad) (bad) mov mov adc jg sar rcrb leave popf rcl jo jae sbb (bad) jmp scas pushf (bad) stos pop dec push int jmp jecxz subl les sahf dec (bad) xor jp rolb xchg hlt in repnz (bad) out cmp loop ljmp push imul sar hlt xchg cmp das xor fcomi das out test js stos out or (bad) jg (bad) stc sub push cmp jmp jl fcomp mov dec cs jle fs call call (bad) jge lds xchg scas push inc das (bad) dec cs sub dec in mov imul dec ja mov imul (bad) lods sbb pushl sub scas movsl inc (bad) or cmp sar ljmp hlt pushf scas out scas movsl shrl xor pop int3 sub call ljmp sbb lods loope sub fnstsw adc jbe (bad) pushl fistl je fstpt push stc (bad) xor jg pushl mov cmpsb imul fistl cli jle imull (bad) (bad) pop loopne lahf push mov ror cmp movsl sbb push mov jmp call out and jns or mov (bad) jnp sbb pop hlt fsts pop jecxz push cmp aaa sbb xchg jle adc inc inc inc jp dec or (bad) (bad) mov ret xor lcall jbe dec cli sub (bad) (bad) (bad) sti gs lret aam push insl jb jmp repz jp leave add aam ja (bad) (bad) lcall cmc xlat xchg ja push lret iret jmp cmp loope out (bad) (bad) call cmpsb pop andl les mulb iret push jle mov stos scas in mov addr16 push les cs (bad) mov mov jmp push arpl decw xchg mov bnd pushf ret mov push out inc xor movsb jnp jg call lea imul or inc lods lds (bad) (bad) (bad) (bad) aas mov imul arpl dec sub int mov ficom imul dec push pop xor (bad) (bad) (bad) incl pushf push addr16 lea pushf aaa lods int3 sahf pop subl sub xchg xchg in jbe lock std push fdivrs cmp not jle std sti (bad) (bad) (bad) dec lock cmp outsl je clc loopne (bad) daa adc es sub pop scas int enter mov pop cli inc cwtl xchg enter sbb pushf jne add lcall lret fxch jecxz (bad) rcrb cld (bad) in push cmp jle test add pop pop inc lea fdivrp cltd mov mov in lods xor js jb sti (bad) in add (bad) (bad) incl sub cmc cli xchg sub pushf jle icebp cmpl push int jecxz ljmp sub jmp (bad) ds mov mov jg mov sbb pop ss insl cmp sar test xlat push sub scas sbb jg mov std pushf cld mov jl aaa scas xchg (bad) (bad) (bad) mov inc lahf out push test in cltd jg mov jne fisttpll mov (bad) cmp movsb lcallw ljmp jnp fnstcw pop (bad) (bad) (bad) (bad) sti jp scas mov frstor sub ljmp cli dec lcall cmp cwtl imul jns jne loopne sub inc (bad) (bad) in out sub dec cmp test out lods (bad) mov jae adc or mov sbb outsl xchg in pop jns (bad) mov (bad) mov and ret dec (bad) mov scas jle icebp loope push (bad) lcall out lods push ljmp xchg jne cmpsl hlt pop inc aad popa iret (bad) (bad) lcall aad pop cwtl shll leave sbb mov cmp repnz mov (bad) (bad) (bad) ljmp std fcmovne dec addr16 mov xlat jmp imul pop dec and ficomp and jg push sub (bad) push cltd shr cs or inc pop clc mov push push and loopne mov outsl in iret sbb mov sub dec mov jns ret and pop mov mov icebp imul js sub movsl (bad) loop shll mov xlat scas lds (bad) aas adc je movsl in scas dec push imul mov imul aaa jne jmp aaa sbb sbb loop jle xchg xchg adc imul mov out push decl mov jae sti and popf call inc xchg cmp mov push lret int3 pop lods jae pop push scas jl (bad) hlt das je mov por arpl mov das xor xor push sbb clc in in stos pop hlt mov (bad) sahf or cs jle movsl cs cmp dec imul or cmp enter dec pop repnz dec mov sbb dec jge (bad) or fadd or (bad) (bad) (bad) (bad) cld repz add mov rorl inc lds push movsb xchg nop cs inc (bad) jg iret roll cld stc mov jae (bad) add mov sbb decl ror aaa mov mov mov adc adc dec repnz mov mov adc add dec fimul pop adc (bad) pusha mov popf push add adc dec add add push add inc (bad) pop and jge inc adc mov sub test mov lods les adc (bad) jg mov pop pop pop pop and dec add adc int3 clc rorl leave cmpsb xor (bad) (bad) ljmp dec lcall or inc mov dec push sub mov or (bad) xor mov inc jg outsl cmc into std cmp jae cmp data16 mov (bad) (bad) incl jge adc cmp test adc lahf decl in int3 repz decl (bad) ds jl dec ja inc ret mov arpl outsl add mov lret gs (bad) mov bnd push push xchg icebp dec repnz push add out scas mov mov arpl jp or mov rcr dec jle cli (bad) int3 decb cmc add xchg ja pop cld push lock cli mov adcb cmpb adc (bad) ljmp lret test (bad) popa dec and loopne add mov cwtl push lods dec push jmp pop xor fadds jg mov fidivl push test (bad) jg (bad) cld push cld pusha fcomps add xchg das fcmovb cmpl pop inc test call out ror xor data16 or add sbb ss fimull test negl es sbb cmc xchg (bad) xor xchg outsl fs sti or fildll (bad) decl mov div jg das pop out adc xlat cmp mov incl adc addr16 shrb (bad) mov xor sub ret clc lahf add ja,pt (bad) fisttp (bad) fcmovnu cmp pop std call cmp sar (bad) jg mov ja lea (bad) fnstsw loop xchg dec leave jbe leave out xchg insb popf dec testb mov fwait mov jmp inc fs mov inc and lods or testb loopne enter popa popf add stos scas nop loope jmp enter mov in outsb hlt fistl clc lcall sbb dec mov enter and jb sub push hlt fbld xlat jle fs sub idiv mov dec imul jecxz or fisub (bad) (bad) (bad) (bad) lcall ret dec xchg call fsin push xchg pushf std les test imul pop lcall (bad) cmp xchg cmp cvtpi2ps xchg repz stos jb sbb xor mov xchg cmp cmp sub sbb mov and pop movsl aas daa (bad) pop (bad) (bad) mov insl out push add push rcll cli in cmpsl jge lret outsl icebp (bad) (bad) mov lods insb (bad) lret fstps pop insl push loope shll (bad) (bad) (bad) fdivr cmpl (bad) cli mov xchg dec out jbe addr16 xchg decl std (bad) mov inc dec mov push mov mov pop call mov mov mov std xchg add idiv pop in aam insl xchg mov insb xorl xchg mov mov jg incl inc popa loop in notb pop lahf (bad) and fsubs imul jl arpl (bad) (bad) lcall sbb mov ror fs jmp dec insb push (bad) sub inc gs mov addr16 pop clc jmp insb cmp aas add and xchg add adc outsl ret ds fs rclb aam jge repz (bad) incl ljmp inc adc sbb cmc or dec outsl lods jecxz inc jno (bad) xor (bad) (bad) call add test xchg in push fsincos and or sub cmp jmp mov push stos ret jge cmp sbb imul (bad) ljmp fsubl imul push xchg daa inc imul xchg xor sub (bad) pushf in cmc push inc push mov add sbb icebp lcall xchg ficoml adc bound je stos push (bad) lcall std xchg mov add inc test xor dec cld and (bad) (bad) incl push jmp inc inc stos cmp das (bad) popf inc cs outsb mov lds sahf loop aam jge hlt inc fcmovnu mov add jg cmp and pop and (bad) (bad) incl test adc insb aam xor cmp xchg pop xchg push mov cli mov bound xor add pop push xlat inc pop popa in sbb push xchg stc sbb (bad) jb rcrb jae fcompl cwtl mov aam sbb mov (bad) mov repz xchg xchg xorl mov (bad) jg xchg xlat (bad) jmp xchg cwtl push mov xor add or xchg repnz dec push lock (bad) ljmp pop mov push cmp lock jecxz push dec hlt dec mov data16 fcmovbe (bad) (bad) (bad) mov dec sub inc jg test jns cmp addr16 jae aam jecxz ljmp repz int3 enter stc add aas mov fisttp std push adc inc loop adc and mov add dec push icebp dec std sbb jnp aaa pushf push mov lock (bad) (bad) mov mov mov push xchg and or (bad) (bad) incl push fwait mov aaa mov and lea fistpl xchg (bad) rol (bad) (bad) fucomip scas jmp xchg xor rorb push push imul div fbld call test or test pop call hlt mov or push repnz inc dec ret inc push (bad) (bad) decl mov sub and sbb inc int sub ss sbb inc decl inc adc push xchg adc jle cltd shll sub (bad) (bad) jmp adc or cmpl insb sbb jnp push pop ret xchg add outsb test (bad) call (bad) fs (bad) repz mov cmp js out push popf out lahf sub stc mov dec inc jno into mov or pop fwait dec cmp cltd or lret outsl cmc (bad) jmp stc andl add adc pop aas imul inc cmpsb (bad) or call (bad) incl ss pop mov lahf into pop mov push pop mull icebp pop clc pop lods jp cmc lds lock sbb jge add (bad) mov xor leave adc rclb sub cltd incl sbb sbb fadds icebp or inc daa sub (bad) jnp inc mov lds imul and aaa mov (bad) (bad) call ljmp aas push (bad) mov lds mov js push scas sbb (bad) (bad) jg dec jae imul xorl les push pusha push pop stc add cwtl (bad) (bad) (bad) pushl (bad) jmp sub imul mov cli shld jbe ds out jp adc (bad) movlps bound into jp pop and call mov pop or repnz (bad) mov scas clc mov xor dec outsl (bad) leave enter xchg xor push out xchg dec popf mov mov pop mov gs dec addl mov (bad) ljmp dec or xor fst shlb or shr sarl test mov (bad) ljmp std dec mov inc add and das enter xchg lods jge das mov aam outsl hlt jmp ret pop push dec jp leave imul cmc icebp mov jg lea insb or daa jp xor inc pop fildll mov (bad) jl mov out hlt fucomip decl push jge inc or jbe dec xor sti adc mov sbb sbb and lcall leave repnz (bad) incl xor (bad) mov cmp cli push cmpsb or out adc fcompl icebp mov (bad) pop xchg rolb push push mov jg or xchg cmpsb xor inc dec (bad) dec aam mov aaa push (bad) or sub (bad) cld mov dec ds xchg (bad) (bad) jne das push cmp clc lcall add xchg mov mov fwait (bad) fucomip pushl mov dec add jl aam inc sub daa push mov popa cmp scas xor sub ja push mov dec add pop cmp xchg mov out and cwtl mov or jb xor xchg mov inc cs test adc out jg (bad) dec int negb imul pop mov ds sbb pop in (bad) lcall lock fcomps jo in sub mov pop jno stos dec popa mov mov (bad) (bad) (bad) (bad) in mov cmpsl pop ret adc and ds dec and mov loope (bad) call repz add mov xor aaa rcrb xchg sar bound xor mov or sub mov loopne mov les lods popa adc dec sbb (bad) fbld out adc andl cmc sub or and add lds std call sbb sub cli mov pop cli (bad) mov rorl cmpsl lcall cltd xchg and (bad) jmp mov and movsl sub stos or mov add or outsl pop inc cmp sub or mov mov aaa fs jl (bad) (bad) pushl sbb lahf sub iret push sub rcll shlb fwait push mov (bad) lcall iret clc mov jecxz jb mov xchg jbe rorb jecxz cmpsb adc lahf (bad) jg (bad) jl movsl or push mov mov jge scas into xchg mov call pop (bad) das lock fimull mov cmc out into inc pusha lret (bad) (bad) call cltd jecxz and mov dec mov (bad) xor int mov mov adc sahf bound je xchg add in outsl sbb jp and cmp jl outsl cmp adc ja jb clc (bad) jg cwtl push xchg scas mov jmp inc or dec lods cmc (bad) jg dec inc push mov je xor fimull jmp (bad) decl pop or leave aad jo dec roll cld roll xor sub aas scas inc mov (bad) fnop pushl insb cmpsb cmpsl push (bad) (bad) lods into or pusha stos test stos cmc (bad) ljmp mov push push fnstsw xlat pop inc add cmc nop iret movsl push test test xchg cmp (bad) (bad) (bad) clc inc scas cmpsl popa stc inc jl imul (bad) mov jno push inc jne dec push mov loopne dec sub mov and cwtl and dec jae leave cmpsl pop adc iret popa mov push pop cld jmp pop ficomp xor cmovno add cmpl (bad) sbb dec sub or scas stos pop sub (bad) (bad) ljmp subl push push or sub dec and pop cs dec inc mov hlt xchg pop adc scas push mov xor fucom outsl sub pushf adc out inc and lcall pop cmpsb rclb inc jecxz push jecxz (bad) sbb sti popa sbb (bad) ljmp ja pushf xor jnp shll xchg sub pop inc xor decl adc mov mov add je std (bad) call jmp icebp popf push sti std ret shlb mov cmp call xor mov mov orl sbb aam mov (bad) lcall push pushf mov sbb aaa xchg add jo or sbb aas paddb ljmp and or idivb and add fisttpll or test popf mov cmp aam (bad) jmp or adc lret inc inc sahf inc ret bound mov je push pop or sub xchg icebp push decl call push jge push mov cli xchg xor test popa xchg push ret jecxz dec xor jnp push jae roll repz mov cmp rorl xor push lock and push aas or jne aam (bad) ljmp inc in fcmovne pop lds test xor lods dec insb out stos ss push jo push fidiv dec sub add mov rcll outsl stos leave sub dec sahf mov xchg xchg mov and (bad) decl std jl jl and cmc adc adc jecxz push test cmpsl ret adc (bad) jmp add mov (bad) push jb lret mov push add (bad) decl push jb lret aad test jl and sbb loopne jb (bad) (bad) incl enter call mov es adc jg or cmp xchg xlat mov or into aas (bad) jb sbb and fs or loop mov sbb test push mov icebp fsubl adc or clc dec push jns cwtl fwait sub fisubl sar pop (bad) push xchg test lret addb mov jl push dec inc push (bad) (bad) ljmp scas or (bad) jle lds push xor fidivrl jecxz arpl (bad) mov mov push mov fcomp (bad) or fs (bad) decl ljmp push dec fwait and in sbb clc or dec inc push test stos (bad) (bad) (bad) dec mov pop xor aam push rclb bound aam cmp scas push mov cmc sti sub leave pop aas aas adc lahf subb addl inc (bad) xchg adc lcall (bad) jns inc mov (bad) (bad) call gs aam orl sbb sbb cmp in xor pushf leave xor cltd push adc je push fbld mov sub repz popf mov dec (bad) (bad) (bad) incl outsb stc sahf cmpsl and test jnp stos mov adc popa in sub and dec push cmpsl loope sub cld adc shlb pop cmp cwtl dec cld in (bad) ficomp movsl push insb push or xlat and mov mov (bad) lcall add cmp add das dec cmp mov loope (bad) (bad) (bad) (bad) call sub nop lock fild (bad) es pop test bound (bad) (bad) cmp mov notl jo aas dec push pop adc add xor rcll call ljmp imul cwtl sub cwtl adc mov dec or out push jg scas cmc and pop push scas mov mov fucomip (bad) (bad) fsubrs jp inc push push inc sahf jle jmp sarb imul (bad) (bad) jns pop jle popl or push add ret inc je (bad) ljmp push add ss xlat lret repz nop xorb jb jns adc cs test pop pop xor cmp in lret call shlb pop and fnop xchg shr xor push lods (bad) (bad) fsubrs popa scas lea xor mov lock jns inc xchg js jp pushf mov jnp lods push mov add mov test scas adc out xchg pop dec pop sbbb ret in (bad) in jg push sbb mov mov jmp xor orb faddl enter xor cmpsl ja in fbld (bad) ljmp jb (bad) lret iret imul ljmp imul cli push incl in cli int3 mov lods les pushl pop mov jle stos mov push add (bad) (bad) (bad) call mov lods xor adc cs (bad) xor cld xchg sarb cs mov jmp xor dec xor (bad) add or or (bad) call cli mov sub popf rcl cmpl repnz xchg jb mov loop jnp xor jno mov dec dec insl mov (bad) pushl inc rcr test inc mov lcall sub sbb inc add stos pusha outsl icebp (bad) push outsb nop rorb pop outsb pop jb test inc lods stos sahf inc inc je loopne call hlt mov mov insl test shlb inc push (bad) notb clc jmp das shl xchg ret mov push mov adc and mov outsl mov inc mov pop lfs popa (bad) (bad) (bad) pushl sub es add (bad) cld cmpsb adc pop xchg (bad) (bad) ljmp push nop pushf push jmp pushf cwtl (bad) arpl cli or push movsl (bad) out xor mov cmc call mov jge aam lahf aam xchg arpl xchg jno sbb ljmp xor inc dec add xor xor out je mov daa enter dec das xchg pushl cmpsb sbb jns cmp es sub add into sbbl push (bad) jg decl jge add sub lods xchg xchg ret sub cmp (bad) mov test dec cmpsb inc ret stos cmp out jb mov (bad) incl xchg push lock dec lock addb adc sub dec push ljmp jge fdivp mov jmp aaa aad outsb push std std fsub mov jnp inc sti (bad) (bad) decl movsb xchg inc dec xor and lds les clc lret (bad) jg inc add fsubrs pop lds xchg ficoml sbb sub call mov hlt xor mov (bad) inc decl xchg or psrld lods (bad) cltd pop sbb stos sub (bad) incl bound mov xchg lcall (bad) (bad) decl int sbb jmp sbb jo (bad) (bad) pushl dec cld inc pop xchg add fbld jp es popf nop sbbl icebp pushl cli jne loop push cmpsb push cmpl cmp mov (bad) (bad) ljmp mov stos inc insl lcall je lea or popf outsl mov add pop pusha jb xchg xchg mov int3 (bad) cmp sub fs jge das cmpsb cmp icebp stos mov xor enter mov out adc mov sub cmpsl (bad) (bad) mov sbb mov add sti arpl and outsl and (bad) incl cmp into xchg dec outsl sub movsb lret pop jmp pop dec xchg push pop ret fnsave xor mov (bad) (bad) incl scas insl ret cmpsl (bad) or pop insb (bad) dec loope test clc cld jecxz js (bad) (bad) (bad) (bad) mov jns test stos jge jp xor (bad) div std mov xchg jo xchg (bad) (bad) push fcmovu push ficoml adc dec aaa out repz fdivp dec js orl cltd xchg mov lcall or cmc add jb jb adc adc das hlt das push xor dec adc incl jp les xchg cmp lods (bad) (bad) (bad) jmp push push push jl push iret jmp push les inc pop lret push sub (bad) or jg push aam push sub jmp clc fwait js aam xchg dec imul in fstpt (bad) les dec add out fdivrp (bad) (bad) lcall jns in repz sub pusha fist mov lahf mov jmp sar sub mov push dec out movsl in fldenv (bad) (bad) (bad) ljmp mov movb push lock movl fnstcw jg push stos xor sarl mov jle inc scas push adc loopne fmuls icebp rcrl jbe cmc dec jle jg (bad) push aaa mov movsb adc xlat sarl nop mov imul data16 imul jg jmp nop stos cli fs mov out pop shrb stos mov (bad) (bad) (bad) inc in jp imul cltd jle push or or xchg mov int3 stc dec jecxz jae test (bad) (bad) (bad) ljmp outsb xor insb mov shrl (bad) enter ret xor xchg leave adc ret or (bad) jg inc pop inc cltd rorl mov pusha push scas xor shl (bad) (bad) (bad) incl xchg insb fldl repnz inc mov ret mov aas rorl cmp mov lret in pop hlt mov jp dec (bad) pop jp int and cmp movl andl ds mov sbb out cmp loop cmp (bad) lcall sahf fwait out lea pop aam ljmp adc (bad) jg (bad) clc (bad) sarb leave decw sti adc testl cli pushl xor pop jb popw data16 lahf icebp sub xor cli ljmp mov jecxz xchg jns ret das sti or int3 sbbb pop je nop sub in and jae jg (bad) call xor add adc sbb les mov iret inc imul (bad) decl dec jp mov and fldl xor ret and rorb mov or das adc ret (bad) jmp pop dec lcall pop or and test sub jle lret pop loopne jmp loopne mov loopne sub insl mov xor cld (bad) (bad) jg dec pop es cmp adc mov jmp popa xchg xchg lahf aaa jg lea mov jno jle add sti fucomp (bad) lcall push push xchg push ja cmpsb pop inc push xchg int jg ficompl subl or lds dec mov test ja sbb arpl (bad) (bad) inc scas xlat sub or insb cltd mov das repz lods jge adc lea adc (bad) ljmp ja sbb arpl out adcl ljmp inc test (bad) in mov into lds xchg and jecxz pop cmp inc enter add sub push es fucomip ljmp and repnz jae mov popf stc add push jp xor (bad) (bad) (bad) (bad) (bad) ds addr16 xor in xlat mov cmp fimul fs cltd (bad) ljmp clc dec fadds pop (bad) insb inc dec xchg mov mov xor pop mov lcall mov ja clc push xor push or pop or dec adc js fisub push add jge pushf pop sar pop add ret rcl daa push mov imul dec mov (bad) in xchg shlb jle xor mov addr16 inc outsb push out mov jno sbb jb jns stc inc stos hlt xor aad jnp sub scas dec xor xchg lods lea mov adc push pushl (bad) pop aad movsl cmp call ljmp lcall push push outsb xor jecxz mov inc movsl adc inc mov cld decl or lcall dec dec dec push mov mov xor xor aaa (bad) das leave and dec std adc mov out cmp les (bad) (bad) (bad) jmp pop cs (bad) xchg push mov cltd (bad) ds lahf (bad) daa loopne or dec sbb imul decl rcll aas xor sub push mov add lock fcomi jg mov xor in mov test jno scas inc jae xlat mov pop cli fisubl inc ret jge stos test addr16 xchg (bad) lcall and jae push dec mov push cmpsb inc cmpsl pop or jns inc adc std jae mov inc mov mov jg jae push push aad (bad) lcall xchg sub ja jmp lods mov push sar and or ljmp pop repnz inc jns insb outsl repz or aaa add and (bad) (bad) (bad) jmp cwtl ljmp or mov jnp push insb insl dec leave pop jle iret jge decl loope pusha lods mov xor daa sahf push js out lahf iret stos xlat aas mov push pop or sbb out add (bad) (bad) pushl testb cmp aas cmpsl push push ret adc scas scas dec fisttpll jmp aaa cmp jge push jb and fdivrp incl fidivl sti pop xchg rcrb pop and cmc repz (bad) (bad) (bad) call sub push cmpsl cmp push movsb fcoml add lods add (bad) call clc push adc int push push jmp iret inc mov adc add data16 in mov (bad) decl bound inc mov inc push dec adc fimul outsl cld and cmp xor push jbe ja (bad) (bad) decl cltd in ds sbb inc jp sbb xlat sbb mov imul xchg jbe (bad) ljmp cld xchg sub ljmp mov add xchg shl outsb cld sub pop adc ss xchg out cli (bad) (bad) jnp inc xor popl pop jge dec xor mov inc mov int xlat andb outsl aad outsl test or enter or call dec cmp lret ret orl sbb (bad) (bad) ljmp sbb jg jg push sti mov cmp les push (bad) (bad) incl sbb cmp cmpsl cmp je dec (bad) (bad) mov jnp call (bad) in push in (bad) jbe lds cld ja fcmovnbe (bad) cmp dec xchg (bad) jecxz (bad) (bad) jmp pusha jge fidivrl push mov test or and (bad) mov shlb leave mov or outsl mov pushl or gs daa jae cmp adc movsb push stos xchg jo movsl insb pop (bad) cmc popa mov push cmpsl dec xchg mov std jg cld jl iret or inc stos das inc or mov outsb nop push fs (bad) (bad) jg mov int3 mov and mov stos loopne cmp rcrb insl subl loop jmp repz mov ljmp popa adc ret sbb int3 addr16 xchg push lret imul add jo add scas ror push cmp mov addr16 xor add call out clc (bad) (bad) decl cmp je push cmp push pop push fstl cmpsl test not pop inc (bad) inc hlt (bad) (bad) lcall pop flds movsl out icebp loope and or cwtl cmp cmp cld jg stos mov cmpsl in sub imul (bad) lcall inc pop xor mov mov jb dec test (bad) ljmp add add fcmovb xchg out or aaa cli (bad) jp lock fnstcw cmpl inc stos push sbb leave shr mov lcall sbb mov xlat clc inc mov jmp mulb pop loopne sahf jecxz mov sti jae dec rorl or mulb (bad) (bad) mov mov cli cld rorb clc or vpackssdw ljmp mov adc out lret jge mov (bad) push mov inc (bad) jge test xchg nop xor (bad) shlb (bad) inc and dec outsl test pop jle dec lret pop (bad) jmp std pop dec faddl push dec into jmp sub mov clc (bad) pushl push mov seto and les cmp mov cli popf push mov cld sbb repz jle ljmp scas push lds xor addr16 test sti add andb xor push incl insl xchg test roll pusha sbb mov fmull lcall negb jp xchg imul xlat shl das xchg idiv test mov insl scas xor loope jmp dec jmp sub das lock push inc pop ret add mov dec cmp (bad) mov sti rcr iret imul std cmp outsb dec adc xor ja push std lcall cld or sbb push sbbl lods xlat mov bound xchg push (bad) lcall xlat push push add (bad) jg pslld xor movsb and jle outsb insl stos cmpsl mov jle pushl in popf dec mov mov shll dec cli xchg out cmp or ret (bad) and and xlat jo xchg clc push mov cmp jg xlat (bad) (bad) jmp pop cli fyl2x and ds into pop mov mov cmp incl incl cmp pop add cmp or rsm decl add loop cmp ja xchg cmp cmpsb fsts xor pop loopne mov das adcb dec pop mov pop in adc jmp ficom mov (bad) cli push and adc repnz pop mov add testb ja jl repnz cmp imul sbb mov (bad) call jg lret imul pushf add int3 xchg (bad) aaa sbbb cld (bad) (bad) pushl cmp lock test hlt js int3 int xor incl add loop push imul xchg inc pop lahf mov jle sbb test js xchg into mov loopne pop push loope sub (bad) (bad) (bad) jmp mov out pop inc xchg lcall ss inc scas or lods xor (bad) (bad) mov jbe aad xchg or mov jns stos jg bound mov popa test cmp mov dec popa aaa xor and fmuls insb and std repnz andl push mov arpl cld das hlt sahf push pop insb pop pop pop push push mov ret inc mov xchg push lock push adc mov mov loopne sub daa jp (bad) call sub (bad) lcall insb out daa and (bad) icebp (bad) fisttp dec test aaa pshufw mov add das jle je mov mov arpl inc mov (bad) nop mov mov xor jmp xor jge loopne ja (bad) (bad) pushl cwtl and rcrl add outsl xchg lahf inc push inc pushf mov cmp lcall popf addr16 cmp xchg push lock sub or push fcmovnb inc hlt push fisttp cs std aaa cli (bad) sti dec int3 shrl call stos dec frstor decl ljmp fsubl fdivrs and dec test jg (bad) fnstenv mov cmpsb imul mov fucomip outsl test pop mov mov loope iret sti repz sbb (bad) imul pop call add sub cs sbb insb rolb dec cmpsl pop cli adc inc pop lcall sbb and push dec std decl adc shr rclb mov dec cwtl aaa mov (bad) fstps sub repnz mov sub xor sahf ficomp (bad) mov and hlt mov mov outsb arpl mov arpl xor xlat xchg xchg addr16 cmp or push fcmovne pusha fcoml xor das push out cltd std (bad) (bad) jg or mov pop popf ret testl lret jnp jp adc cmc fidiv mov ret lret or xlat ret lods ss scas shrb aad add push push imul (bad) scas stc hlt push pop ja mov mov push pushf icebp (bad) fucomip pop fnstsw push cmp stos add add das aas mov pusha mov dec jns (bad) sbb rcrb mov call test mov fnstenv stos repz imul jns and (bad) adc xor fmuls and jmp mov jbe lods or and out sar (bad) (bad) add (bad) rorl sbb lods shr or inc inc daa jbe data16 jp fisub xchg clc (bad) mov enter xchg add (bad) (bad) mov mov ret (bad) scas movsl fwait pop popf mov fs fstps add iret fstpl adc (bad) lea sbb jo dec (bad) (bad) (bad) (bad) jl adc in or dec dec movl in imul (bad) mov movsl (bad) (bad) ljmp jle jge fcoml dec test mov lret test pop push push add jns gs cli (bad) incl mov mov push aaa adc jno mov jno dec ret daa daa xor mov pop pop inc clc (bad) (bad) (bad) sti scas push nop xor data16 repz push xchg clc or mov add (bad) (bad) lcall sub repz inc insl test jmp push neg inc mov pop lock and sbb jg cmp cmp and icebp adc and (bad) mov notb roll testb cmp mov (bad) inc jmp sbb loopne cmpb stos adc ljmp pushl stos cld mov lcall pusha mov imul xor mov outsl insb inc jle les pop mov jbe pop pop out lret outsb (bad) mov lret out xchg cli ljmp sub mov mov jmp clc jo push movsl adc sub mov mov (bad) decl hlt (bad) lret rcl ret pop (bad) mov adc cmp dec outsl dec (bad) jmp incl push mov sahf das mov sub cmpsb ss sahf enter fistpll and and mov ja jecxz hlt xchg (bad) jmp ret fdivrp xchg pop decl push jg sbb or inc mov cmc mov jo mov cld mov (bad) arpl test je inc dec adc leave add push nop cs out js cmc inc (bad) fidiv fdivrs mov loop adc fidiv adc ljmp xor sub stos jecxz jb xchg push mov ljmp mov (bad) xor cmp dec inc out push dec push out outsl std idivb mov mov jp pop jo shlb jae sbb lret mov loop (bad) incl lea xchg cld adc out (bad) xchg pop pop mov pushl cli pop mov fsub sub mov pop pop fstpl leave outsl (bad) stos sub loopne std sub jge xchg and insl sbb call adc or sub jb frstor jb shll mov hlt test nop cmp (bad) dec push mov sbb pop fs mov or add xorl scas push call cltd cltd rclb xor xchg inc add mov mov add adc incl in aaa nop jge and inc std pop and mov push cmp cmc cmpsl xchg adc iret and dec aam adc (bad) dec sub push jg cltd incl and ror jne es test jmp lcall inc mov pop dec ret xchg lahf mov add lcall in mov dec mov cmp cli outsl (bad) jmp cmc ja add out mov in xor mov leave punpckhwd pop jb and mov (bad) rolb nop outsl call jnp xor xor xlat adc xor sub dec test (bad) lcall (bad) mov or adc push mov rorb aas inc (bad) ret xor xchg lret mov mov sahf push outsl push add in stos cmpsl (bad) decl lcall lret pop mov sbb push mov xchg (bad) lcall stos sub ret push pushf xor push push int3 (bad) push mov mov aaa (bad) decl es push insb or push pop xchg icebp loopne xchg pop fmull (bad) mov inc sub xchg das and lahf sarb push sti lcall std dec (bad) jae pop pop ds ds push pop mov shr scas ljmp cs lahf dec scas pop sub xchg adc out pop mov (bad) lcall dec add jg (bad) movsl insl mov rcrb ds aad popa popf icebp dec ss hlt lea cld jg rolb mov jmp sti fprem cwtl in (bad) (bad) incl in jmp jp adc xor cmp xor adc insb push (bad) jmp movsb outsl jae or in dec pop xchg lods fwait call dec shl or lcall fwait add xchg mov mov mov (bad) call in repnz or xchg lds gs sbb push loop shll jmp push int3 cli fs sbb stos mov imul call push shrb inc sti jno adc sub pop add lahf insl pop xor ljmp lock sbb (bad) lds lods rcrl (bad) mov xorl sahf mov rcrl (bad) (bad) (bad) (bad) cld fsubrl iret pop das jo jmp cmp (bad) in insl mov jbe mov mov (bad) fsubl cld orl xchg xchg xor pusha cmp mov std xlat push pop add cmp aas paddw nop (bad) inc push das aad ret add cmc xchg into mov (bad) adc fsubrs push sbb cmp inc test (bad) (bad) movl adc push sbb icebp xor ljmp add faddl jo ror divl dec rcl (bad) (bad) lods add or clc jge (bad) (bad) (bad) (bad) sti (bad) idivl das scas pop cmc pop cli lods xor dec mov xor insl fiaddl incl xchg fisubr sub rcll add mov inc xchg pop sbb je (bad) ljmp aas mov xchg test idivb xchg out jb incb (bad) in cmp jno negb dec rcrb adc push outsl add dec cli je xchg adc mov push xchg jp push ljmp or aad cmc pop mov or adc mov push inc fildll call aaa out xlat push cwtl incl lock add femms pop cmp fwait mov fdivr incl inc add aas adc mov stc push lock cli rolb mov movl shr mov sbb xor xor je (bad) roll (bad) cltd icebp insb outsl hlt (bad) lcall sahf xor addl test ret and xchg jne (bad) (bad) ljmp sub std cmp mov insb fs call das testb xor clc decl xor movsl stos jle sub (bad) divl dec outsl jo aaa inc repnz pop or inc fistpll or xchg push (bad) xor mov or fisttp stos loope pop shrb sub (bad) lcall int sbb mov daa or out inc mov jno jmp ret mov add in mov (bad) lcall lea pop out mov xor in jmp jecxz inc stc fucom inc (bad) mov adc pop js dec add mov jbe mov lea ja cs mov jae mov lock fcomps or (bad) das pop lret cmp pop ret or stos push das cwtl sub stos sahf hlt jns inc fcomp xchg xchg xlat inc (bad) in (bad) jg (bad) adc stc loop mov or loop data16 mov (bad) fildll cmc sahf inc jbe xor ja mov mov decl pop push lcall mov push mov dec jecxz (bad) pushl lods adc pop aas ficom and mov test jge jns (bad) (bad) (bad) (bad) cli adc popf lods cmc dec dec mov mov mov out sti xchg jns aaa push ljmp dec or stos mov sub xchg movsl mov repnz (bad) (bad) pushl push (bad) cmpsb xor add icebp pusha stos stos fwait adc jmp jle (bad) (bad) pushl pusha mov inc jae sub hlt or lock loopne or mov mov add test sbb mov jg jp lea mov subl mov enter lret cld pushl sbb rcrb mov leave hlt dec popa push pop (bad) pop xchg int3 or cmp mov rcl lods in cmp mov mov jae jbe aas xor xor and cmp dec lods decl int3 jb int pop lods ret (bad) cwtl inc cmc lcall push inc stos sbb xor test jno fisttpl les jl (bad) ljmp cltd jns sub xor (bad) cmp jae (bad) (bad) jg push stc jge outsl out into sub inc je sbb push xchg or cmp push imul decb ret vsubpd std (bad) hlt mov push shl xor and mov ljmp (bad) in adc ja cmp mov dec add test lods decl xchg fimull mov loope pushf (bad) lret sbb jmp push mov adc sbb cmpsb xchg out add mov enter out loopw dec xchg push dec cmp push dec in loop push mov xchg fs and rorb stos jl jge (bad) incl insl inc aad mov jno add lock xchg push pop pop (bad) (bad) aaa lock and inc jp rclb mov xor jo test les (bad) sti arpl fistpll imul or (bad) lcall loope lds lahf and jne adc mov call lcall push jae (bad) mov fsubrs bound lret test jg dec cld pop sub xchg imull cwtl repz dec pop int3 mov decl jo cli ljmp (bad) hlt aaa (bad) xor push aad dec adc ljmp mov mov dec cmp (bad) (bad) jmp inc aad push inc (bad) pusha jp push in xchg (bad) (bad) (bad) ljmp movsl pop cld mov dec stc repnz outsb (bad) jne icebp ds and adc stc push pop cli jmp sub mov inc repz fdivr pop sub or dec (bad) xor pop jmp dec dec push cmc or jae aad addr16 dec sbb shl stos jmp jo ret jnp jmp rcrl pop stos xchg ja (bad) jbe xor cmp mov pop in dec cltd or das sub xchg (bad) (bad) lcall arpl adc dec sub addr16 jb imul pop dec imul (bad) (bad) (bad) jmp aam xchg dec cmp sub lret stos stos push mov jnp in jge fnstsw jmp repnz sbb cmp sub in jae cmp (bad) jg data16 and inc mov mov lods mov jge or mov clc mov loope movsb mull movsb arpl test pop mov popa movsb sbb push jmp inc (bad) fmuls dec arpl ret add sub xor nop add mov cwtl push cli jno jns mov push mov gs xchg fdivs mov gs fisttp es loopne push jl sbb in dec dec jl adc xchg cmpsl int test (bad) call mov jb arpl mov repz and (bad) ds mov daa scas cltd lret and and xchg push jmp mov incl sub cmp sub dec getsec sbb mov fsubr pop push cmp lret adc (bad) jmp mov mov sub dec (bad) repnz pushf cmpsb mov (bad) call in add sub fs dec jmp sub inc dec jns mov inc lods lods ret add jg (bad) jl cwtl smsw inc popa lods icebp faddp xor mov les decl and inc and lods nop mov sbb jecxz and dec sar (bad) (bad) dec test call inc xchg dec xor loop test xchg ja dec fwait bound ficom test lret dec push add push insb loop mov faddl iret testl inc cltd repnz stos sbb sub shrb push shrb mov popa dec pop mov (bad) (bad) (bad) mov lock js inc mov or inc xchg sub push pop sub mov ljmp out jne imul xchg in mov icebp dec push loope add mov inc adc xchg adc sarl pop into push inc pop mov leave lret sub sub cld mov push inc (bad) dec int add dec add cmpsl add lods sbb inc loopne fs stos sub call mov cmp inc dec ljmp outsl lock adc push jns lods rcrl xchg sbb mov call mov mov pop pop sub rcrb pop inc shrb push movsb ja push pop jnp mov lock out sub add test (bad) call push dec sahf in push mov mov int sub mov jp (bad) mov add jbe cmpsl test jp repnz pop addr16 call sub lock std insl (bad) out out ret jae sbb stc adc (bad) lcall pusha dec iret icebp test sub call je call pxor ljmp inc (bad) div popf in roll js imul add pushl mov (bad) cs insb xchg xlat loopne loope std pop cli lcall (bad) enter jp xor fwait pusha ret push mov (bad) mov inc dec and cmc (bad) lret dec imul repnz and or jo xor call cli push and aas inc mov fnsave mov insl (bad) in fidiv mov (bad) jl mov mov cmp jle xchg mov scas pop incb xchg pop or fisubrl call rol call fisttp fwait imul je pop pusha and insb imul decl mov and cli xchg pop fmuls loope pop scas or idiv inc ret pop incl xchg jl popl lods jg or xchg mov adc sub shrb (bad) lcall push ret push and les int3 (bad) dec fsubl sub inc loope das lock imul jo jnp incl cmpsl mov std dec fsubrl jg pop cli sbb adc in dec cmp cld (bad) jmp test xchg aam cltd les popf in sar (bad) (bad) decl mov jbe shlb pop xchg loope mov not mov mov je xlat add adc push pushl stos aas ret (bad) or pushf (bad) fwait jecxz jp decl fcomip or xchg push pop cmp int push (bad) incl add pop mov xor push xlat std (bad) xchg clc ljmp pop pop je pop test mov in jg incl push out and mov inc jecxz push push pop popf ds add pop clc push pop lds repnz (bad) aad pop dec jecxz jp stos daa (bad) lods outsl lock ljmp dec push insl inc jmp mov jecxz mov nop adc (bad) lcall sub popf adc lret adc es in mov xor mov aaa movsl (bad) (bad) jmp pushf outsl cmovp leave clc sbb (bad) push mov enter (bad) (bad) ljmp out jp pop int3 xchg pop jl imul (bad) xor sahf scas xor or lcall pop or push sbb stc or inc jno push mov lahf cmp mov jmp sbb popa cmc push (bad) jmp mov into mov fstpt imul dec lahf (bad) cmp pop mov adc xchg pop push stc sahf das rcrb (bad) (bad) (bad) ljmp cld adc pop je aam outsl adc popa lea xor inc mov add or jp jne (bad) fcoml inc lock icebp mov (bad) fstpl (bad) ljmp jns push jbe loopne pusha lret cmp jmp mov fwait dec hlt das mov inc ja add (bad) (bad) (bad) mov lret push (bad) loop cmp stos rclb jae mov (bad) (bad) mov push push test pushf aaa idivb dec andl mov pop repz mov leave dec das xchg xchg je aaa push lods pop repz loop test jae out ret mov aam popf jmp out xchg cwtl ss xchg sub xor mov arpl jb movsb sarb inc ja mov dec dec scas out xlat fisub and dec ljmp loope pop ss pop mov dec cld (bad) std adc mov add (bad) (bad) jg insl (bad) jp out loop clc pop add jae jge sbb aad mov and (bad) (bad) pushl mov cmp push fst out push stos pop push push push jle jecxz adc faddl fldenv (bad) (bad) ss xor movsb adc sbb xlat out fcomps rcll jg fist movsl inc or cmp nop cltd sar (bad) (bad) call loop cmp rclb xchg push shrl clc xchg inc push cmc cmp cmc jg test (bad) pop and addr16 jmp jmp mov ds (bad) (bad) fist pop adc orl and mov mov jl sub lcall or sahf xor sbb xchg mov (bad) add mov (bad) lock push mov int3 mov fdivrp outsl pop cli ret repnz fbld pop and add cmpl ljmp in sarl jecxz mov testl hlt inc adc cmpsb pop decl insb xor idivl decl (bad) jmp addr16 dec outsb lock in push insl das mov mov nop sbb outsl icebp (bad) add les insb shr dec jae push cmc in pop (bad) pushl enter icebp lea jno dec pop js outsl into cwtl jp dec std out xchg into lock jge mov enter das push mov adc ljmp cmp mov xchg out pop clc shr loope sub sub insb xchg cmp adc (bad) (bad) (bad) sti in fs xchg test sub push jo add es mov adc xchg sbb (bad) (bad) ljmp pop addr16 call push rclb push sbb in sbb inc xor push xchg cli inc cmp aas mov cmpsb adc arpl clc (bad) outsb jp pop inc in (bad) arpl (bad) (bad) mov (bad) cld xor rcrl test pop and jmp or mov push faddl jmp sbb jg xchg mov pushf sbb mov fild (bad) pop std jle push pop inc repnz push jmp (bad) (bad) pop push sub sbb outsl pop jl,pt push popa lahf mul ret pop jns jnp cli pushl jne fcmovu jl xor xor sbb fdivr jecxz call sbb dec or mov cmp jnp or pop cld xchg jg icebp xchg sarb ds pop or in sbb sub push dec pop push in test hlt incl ret xchg dec dec cwtl test in pushl xor mov stos (bad) leave divb js xor xchg mov incl aaa mov leave dec push mov pop push movsb insb sub loope pop std mov push dec (bad) lea or imul out test fcmovnbe test mov rcl inc cwtl sbb aas ljmp jg enter pop pusha pushl push add out out fisttp call (bad) inc or dec int3 nop inc inc lret rcll inc (bad) (bad) jmp mov jmp ret fimul adc pop push adc sub pushl inc jle inc cmc int and sub push popf cmp (bad) (bad) jg pop (bad) xchg into mov cmp (bad) xor mov xor (bad) cmpsl push jmp (bad) fmuls pop mov mov pop push xchg inc fcomps (bad) mov jecxz jb jl pushf sbb fwait mov ficom jo push mov xor dec push mov cmpsb or (bad) jp gs pop popa adc sti inc dec lods mov jmp mov hlt (bad) (bad) dec (bad) pop negl xor fwait dec sub add out cli lods cmc pop (bad) incl mov adc roll mov xlat jecxz cmp pop int3 loop das cmc das js jmp mov jo and adc (bad) (bad) mov inc sub xor test ficompl push enter imul cmp ja sub sub and sbb popa xchg leave jbe cmp das das (bad) (bad) (bad) jg lret jnp adc daa (bad) rclb mov and adc enter cld (bad) stc mov cmp test pop les ljmp call (bad) xor pop xchg movsl lock pop jns movsl stos ret pop loopne mov and fcmovb (bad) pushl imul dec int3 jno ljmp lods mov stos decl imul subl lcall outsl pop cli ljmp sub lret mov loope popa push and movsb stos std sub ljmp jmp pop add ret dec cmp lcall test mov subl mov xor mov (bad) decl addr16 insb cmpsl nop ljmp loopne test jg ja ljmp hlt cmpsb int scas dec fldl hlt lret aas cmpsb xor dec (bad) (bad) (bad) decl hlt pop xor movsb mov dec subl xchg jb mov cmpsl pop (bad) jg pushl aad into lds push jb lock and aad mov cld (bad) (bad) mov loopne orb xchg movsl xchg or jnp xchg inc pop cmc (bad) (bad) ljmp dec shrb sub sbb addl adc jle or stc mov add sar (bad) ljmp xor fs shll mov adc insb aas cs (bad) cmp pop fwait mov popa loopne aad push adcl es std mov mov imul mov fmull push and push mov lret push rolb mov fcoms out or decb or or cmp data16 daa push (bad) ljmp lock hlt cmc nop push mov push js flds (bad) popf adc test das cmpsl outsl xchg (bad) ja js gs shrb sti gs or cmp out push sbb enter sti aaa cmpsl jmp fnop mov pop jmp mov pop or inc cld fs jecxz (bad) (bad) jg mov push ror loop lock movsb imulb mov push std leave jmp (bad) (bad) (bad) (bad) jge hlt shld mov clc cmp fdivr mov jnp lods mov out nop add incl cmpsb fcmovnu sbb inc or lahf push cwtl or ljmp (bad) (bad) (bad) mov stos add xlat std push jnp repnz je loope push add cmp lcall pop jno or lret cmp ficomp sub cmp xsaveopt cld cmp std add das push add jns adc dec aaa (bad) (bad) add pop pop icebp scas orb mov push fsubrl pusha cmp notl sahf mov cmp cwtl and sahf push fisttpl jb loope fisttpl out out push mov (bad) incb ret stos loopne pop ja sub (bad) (bad) mov mov inc movsl xchg or pop loopne pop fstpl jae and jmp emms repnz bound hlt in add stc aad shrl cmc jne loopne lcall or jns sub sti and cmpsl clc adc icebp call std test test mov mov (bad) (bad) decl mov in sbb fdivl ret (bad) jbe in lahf push ss jmp pop sahf fdivs (bad) es (bad) jnp jecxz pushl jo mov pop pop push mov mov pushl or add cmp clc call ss lret (bad) int3 push ljmp mov mov insl shrl add stc cwtl cmpsb stos or packssdw leave imul pop std dec sbb fbstp mov mov ret iret (bad) mov imul sbb inc stc add (bad) (bad) mov (bad) or mov xchg imul dec out sar std stos test xor xor (bad) jmp xor add add sub pop xor add (bad) aad mov mov xchg inc icebp jl dec cmpl inc out imul jg js xor test inc ror js js push call not xchg add push inc std mov mov add push sahf sti int enter pushl pop mov mov faddl jmp lret add loopne or inc push outsl rorb (bad) jbe inc pusha mov inc mov clc enter xchg sbb push das add mov ljmp jle test push mov or cmpsl adc test xchg and (bad) jg js sar cwtl push fistl mov push ja outsb add in push jmp ret insl out fnstenv sbbl ss mov cmp adc jne xor insb inc (bad) call decl mov jo loop jne add das jl decl or pop fcoml aas inc (bad) lods jl mov ret std (bad) (bad) pushl cmp gs sbb mov cmp mov push imul add add mov push mov andl fistpl cmp (bad) (bad) mov or fild jb mov sbb cmp movsl mov sbb (bad) (bad) inc lcall push mov std inc daa pop pop and push cmp xor add mov ds sahf mov lahf add dec stos repz inc dec enter decb lea aam mov (bad) sti or or clc dec test jno mov mov mov cmpsb add xchg push jmp pop mov test and cli cli adc (bad) (bad) mov cmp jno hlt mov dec mov cmp je sahf xchg mov (bad) and aas xlat lahf lock add std (bad) (bad) call and ljmp adc hlt jle fldt jle enter in mov cld ret sar lcall js or add sub in aas add pushl clc mov shlb punpckhbw arpl and adc mov js std out push outsb insl insb int decb pop push pop mov loop fstpl (bad) sub jae (bad) lcall inc iret dec scas adc or pop xor js in pop (bad) (bad) (bad) decl js (bad) or jb loop ror outsb daa rcl or out iret icebp sbb cmp pushf cmp (bad) rclb (bad) cld es outsl push cld iret clc jmp jmp call xor xor and xchg out inc stc jmp pushf xchg push (bad) incl insl xchg lods push repnz (bad) lahf (bad) (bad) and xor mov or xchg mov clc icebp dec add mov loopne add incl jle out push jo cmpl or pop pop in (bad) jmp pop fsubrl insl add mov lcall int3 or cmpsl dec dec loopne (bad) jae lret pop push or (bad) mov jmp loopne sub lret loopne subl sbb push fmull mov rcrl add pop jo jno jmp pop sarl lret lahf pop jl test add push fsubr inc hlt insb push cmp adc (bad) lcall xor xor (bad) pop cmp dec out xlat dec mov scas mov ljmp xor gs loop fwait out int cs pop mov aam (bad) (bad) pushl cli rorb scas pop jmp popf in lret jnp fidivl clc lcall add mov mov shr out loop cmp xchg xchg mov call mov sub ficomp stos jbe (bad) (bad) ljmp mov pop lock into fcomps data16 mov pushl xor lds jp gs adc sub adc push jno std imul iret xor (bad) mov cwtl ja lret pop call int3 data16 xchg xor add (bad) fisttp dec sub mov test cld xchg pop loopne iret std sub mov jae clc mov add call jle (bad) ret pop xor cld mov sbb outsl fcmovb aas repz xchg push loope incl add xchg call jl mov (bad) jmp xor std or mov add lret add xor rorb push stos sub cld pop repnz jg fistp mov clc aas jmp decb incl add fnop iret les mov insb je pushl sub std cmp xlat scas std mov clc rorl ds mov lahf (bad) in loope loop (bad) in sti or incb jnp xlat dec cld out dec ds mov addr16 jge mov pop cmp lock xchg push mov lcall int inc mov fistpll jge dec sahf cli sar pop mov clc (bad) (bad) (bad) call jmp das insl lahf jl pop sti pop aas incl cld fistl ja std sti mov fildll jo jg pop stc cmovg add (bad) pop clc (bad) (bad) jmp jmp sub lcall mov dec add cld sbb int fndisi(8087 addr16 aad sti dec test xorl mov dec dec mov (bad) (bad) pop cli jg and addr16 pushf dec pop sub cs repnz rorl movsl outsl add mov pop test rorl mov (bad) (bad) call js loop jp shrl mov xchg shll mov cmc arpl (bad) incl outsb cmp and pushf add mov imul pop loopne push cmp gs pop fs or sub add ljmp hlt jecxz lret int out (bad) cmpsl faddl push push jmp xchg mov xor cmp rclb pop das pop xor ljmp lock push in xor inc inc aam add cs outsl (bad) jg ljmp sub pop inc cmp les int mov ror mov mov movsl lds mov cmp push sarl mov mov xor ljmp fidivrl imull cmc outsl push rcrl es jle mov data16 mov decl xor push vmovddup and aam ja lret xor (bad) (bad) (bad) jg fsubp sub or adc lcall mov or out test dec xchg std ljmp push int3 pop pop test push pop dec call jne pop and pushl mov mov lahf mov (bad) jno imul xchg (bad) incl mov data16 leave mov sbb dec and aaa outsb sub pop push pop pop push push push iret cmc out inc flds (bad) call and mov cwtl loope int sub jge or iret (bad) jle loopne xchg pop outsb ja sub or push adcl lcall jge push pop outsl aad xchg fidivr pop xor xor (bad) jmp sbbb xorl out mov cmp call test sub ds faddl lret int bound std pop mov pop or jp movsl fadd std movsl (bad) (bad) ljmp mov into adc push add stos fwait adcb jns loop std mov fwait ljmp mov cmp adc or aad clc mov add (bad) sub sub or xor fbld add or jo sub inc sub test mov hlt mov inc enter and lcall (bad) xor xor push and mov cld or mov mov lds adc shrl (bad) (bad) ljmp popa out adc adcb add mov lods (bad) jne add pop clc lcall stos aaa xchg andl fsubrp sub lds shlb jp add push push jp pop or popf fs push loop fcomp scas outsl sbb popl inc sub fildll imul push popa lcall jecxz (bad) jmp shr mov lcall inc pusha orl (bad) call or jp push ret jle lock (bad) cmc cmp mov and jmp push ficom cmp insb nop ret xor lea test inc add mov push mov clc inc (bad) inc dec mov mov xor pop cmpsb mov cmc xchg or dec cli popa jg jle or je cs jg (bad) mov stc hlt stos pop sbb dec mov jp pop std fwait daa or (bad) aas ss je mov pop scas std idiv add sbb fcompl outsb sbb sarl pushl out bound fbld inc xchg ljmp jno (bad) mov dec jl pause insl repz cmp or cld jecxz repnz jl stc mov xchg or loopne dec cli es mov xchg rep and (bad) cld xchg outsl jne sbb (bad) (bad) xor clc fcomi inc ret cwtl idivb cmp (bad) (bad) (bad) xchg cmp mov mov dec out xchg rorb movsl (bad) incl popa mov call sub push (bad) (bad) call cmp sub adc and cwtl stc or pop xchg or decl xchg std ljmp lret aaa outsl xchg mov mov decl xor sub jge pushf xor or insl hlt adc cli (bad) jmp or push cmp inc cli sub cmp (bad) xor minps sbb sbb mov rolb outsb int xchg fs pxor ret int3 popa push pop in lret into (bad) cwtl mov fwait mov lcall loope fstpl (bad) cmc outsb cmpsl fisubr xor out movsl inc loop loopne outsl jnp add lock ss (bad) jmp (bad) icebp jmp cmp jge jp jg movsl xchg or pop or jbe pop dec push fcomps adc mov outsl sbb les pop adc (bad) jg lcall pop and adc pop add push add (bad) jle jae (bad) dec movsl inc jl stos pop lods xor in mov push rcr mov decl push daa (bad) idivb out popa pop mov push and pop pop xchg ljmp lods cs in mov cmp xor cmp push dec add (bad) lcall adc dec addr16 leave popa pop stos int mov mov mov (bad) (bad) (bad) cmp (bad) add test or mov sbb add ljmp push (bad) (bad) out pusha and hlt adcl dec dec data16 mov call icebp incl repz sub add mov cmpsb movsl jg mov pop sbb (bad) (bad) (bad) incl xchg pop rol xchg nop int3 iret sub pop sbb (bad) sarb mov jne pop cltd mov pusha pop imul pop pusha incb outsl icebp inc xor std xchg je shrb lea lret mov pop ret imul xchg pop addr16 jbe popa imul sbb or (bad) (bad) (bad) jg inc repz movsb jb jbe cmpsb xor rorb std dec jns lds sar call inc decl xor lret out adc mov and repnz adc (bad) incl sub or mov xor (bad) lods xchg jmp in jge outsl (bad) (bad) ljmp inc dec sbb pop mov lret jle mov pushl cmpsl ret push dec inc jg push cmp rcll stos xor jg outsl hlt arpl ds out gs out mov (bad) (bad) (bad) lcall cmpsl popf adc aas sbbl push repz (bad) fildll inc leave into (bad) xor call mov test sub xchg jg das stos mov decb (bad) lret ss push lret ljmp jg rcll decl xor mov clc ja mov stos cltd mov in xchg jmp mov pop xchg call cli (bad) call inc mov xchg fsqrt jno jns mov sub jecxz push out pop (bad) in jg cld pop pop dec out mov lcall xor (bad) (bad) movsl ljmp (bad) mov jecxz sub psraw sbb (bad) lock mov push (bad) ja (bad) aad push dec xchg outsl jecxz (bad) (bad) pushl loopne popa dec repz push lret sbb xchg aaa inc sub movsb movsl lea mov jecxz lds loop js push ja (bad) mov stos dec int jmp aad cs aaa rcll push aas mov lods (bad) inc (bad) xlat jo shl stos xor pop mov cmc loopne decl lahf cld mov or jle movsl pop (bad) lock mov (bad) dec incl (bad) or (bad) mov shld jg add pushl (bad) pushl cmpsb cmc sbbl jecxz cmpsb pop sub or jg pmulhw dec nop stc ds xor jmp xlat sub jnp mov mov sbb cmpsl sarl fldt jecxz pop out or loopne mov std fildll mov clc pop lea push xchg lahf (bad) lcall push pusha mov loop cld int3 adc or push cmc cld cmc adcb mov sarl xchg gs or call or ficoml mov (bad) rcr js scas dec jnp test outsl lock outsl cli pop pop mov sarl xchg ret aam loopne outsl lahf mov push adc fdivl add jne push movl shr (bad) xor push notb jg xchg pop pop call cltd std (bad) (bad) decl jl int das arpl outsl mov cmp in add jno fimull into sahf es (bad) (bad) mov (bad) fwait pop jle rcll ja aad push mov push out call cld pop loopne sti sar arpl stos lahf cmc or nop push sbb cltd aaa jp or int3 inc add fistpll ljmp lds lea push ror jmp jg mov or (bad) lods ljmp jg mov (bad) (bad) (bad) cmp push scas hlt mov lock test lahf jo ret and push dec cmp or test data16 jnp sahf and fnstsw imul mov push mov bound imul (bad) lcall jmp int3 icebp and mov outsl cmc decl and cmp jno loop and adc (bad) (bad) fildll out sahf pop aas notl jb mov xchg and rcrb pushl repz insl push arpl inc pop arpl jg (bad) ljmp jmp lods pop pop (bad) cmp in sub pop pop enter push call (bad) cld mov adc inc cvttps2pi ljmp je xchg inc sub cltd add xchg mov loope ret mov and sub mov (bad) fdecstp fldz fsts jg adc or (bad) in xchg mov int3 (bad) fs in test test fnstcw out jae int3 pop push pop mulb mov ljmp dec jnp loop inc adc sub push cld lcall ds mov mov ret add std decl rorl xchg push adc jecxz or fist cmpsb sbb ljmp mov fstpl dec (bad) inc lea add jae fbstp imul pop icebp mov pop jl mov (bad) jg mov in mov adc xchg add pushf sub mov mov dec xchg xor aaa lret pop in pop pop lret fldcw adc (bad) call aad dec xor aam jne mov loop inc cmp mov rcll popf mov cmc (bad) ljmp shl jp fisub mov (bad) movnti push hlt xchg popa das push jle add loope or (bad) jns (bad) (bad) call movsl mov push ret xchg pusha aas pushf test es incl stos (bad) sbb (bad) decb pop adc call clc fldenv (bad) (bad) call mov add adc mov in inc mov sbb das lock pop inc jg es mov xor (bad) incl xchg out adc es add jle xchg loopne js (bad) sbb div and hlt rcll xchg lods and cmp (bad) (bad) (bad) (bad) cli xor inc daa sarl jle ret sub push fstpl pop aas xchg roll lret ds xlat jp adc jbe sub cmp sahf (bad) (bad) decl mov les aam push andl lock push sub aam inc inc mov and mov (bad) lcall cmc ja jnp pop xchg xor or rolb xor (bad) (bad) (bad) (bad) dec testb std add mov sarl ljmp inc adc pop loopne cli mov out or cmp clc fistpl (bad) ljmp arpl stos inc push push add loope js fimul subl movsb cmp (bad) fucomip jmp jmp or pop xchg sbb sbb mov inc (bad) (bad) ljmp or pop dec adc bound in movsl test lods (bad) test cmc xchg pop scas lret mov pop push stos (bad) push sbb mull int3 xchg mov push ret push icebp out ror or std sbb pop into rcll cld mov push (bad) decl push iret lds (bad) mov (bad) mov (bad) aam jne push cmp lret shlb hlt mov hlt incl push lods mov push sbb (bad) sub inc jge flds or mul test loope stc push outsl lock movsl lock xchg cwtl (bad) div (bad) (bad) jg mov testb jecxz xchg adc mov clc (bad) (bad) lcall sbb pop movsl por pop inc movsb sti ret cld insb jg aas lret aas loop repnz clc and std (bad) fbld or xlat push jo xchg (bad) ss adc and jg decl int3 in sub pop cmp pop sbb or movsl (bad) pop cli xchg sbb or fnsave xor (bad) (bad) lcall outsb movsb fistpl push sub lods mov jle lods je pop rorl push add (bad) jmp mov lcall xchg sub push adc ljmp sub push fcmovnbe jne,pt std cmpsb lcall (bad) (bad) (bad) (bad) jnp jmp and and sub cmp je imul test pop loopne and in push fldt lea pop jl sub decl test mov xchg inc mov push jmp (bad) cmpsl mov jno mov jecxz js and pop sbb cmp inc ret dec sub cld push (bad) pushl faddl imul sbb ss dec aas jmp mov xchg mov lods nop int push insb (bad) jg mov movsb rep mov test movl mov fs mov cmp fmull and adc popf stos add fisttpll sarl xchg les pop sub jne pop mov adc push (bad) xchg jns mov adc jnp pop add dec and jmp jae int3 xchg add (bad) incl addr16 pop lods xchg mov pop mov shr arpl (bad) in ret pop jge xlat dec (bad) scas aad mov mov outsb aam or inc mov xchg or inc adc ja dec inc push and xor daa mov dec dec dec pusha xor sub xchg jo mov aam adc mov (bad) (bad) jmp shr push sub aad cltd or fsubs xor in pop xor test mov mov idivl (bad) scas (bad) sqrtps cmp clc jg fucomip scas inc add add add pushl mov push xchg xor xor cs jg pushl das push outsl insl insb popa das jo jne gs js outsb je imul jo jo add add inc dec fild call dec push push aaa and push push and xor or or adc push sbb jns arpl imul sbb push inc sub sub (bad) fnsave dec outsl jp insb xchg xor pop xor cmp push add (bad) imul or adc insl jnp jbe jbe and sub inc lods cmpb lret mov inc cmpsl xor xor mov jne push xor push or and inc (bad) das xor inc arpl sub mov std insl jp push jne sub cmp pop xor push xchg je sbbb sub mov push mov pop adc adc cs iret outsl int insb imul adc sub ja lahf mov imul jae push dec arpl ljmp sub or aaa fs aaa inc push lods popf mov push call ja or mov sub leave mov fs lock mov cmp pop repnz je sbb test imul xchg daa add pop add mov mov add mov and and fbstp jae push and and das jns push mov push lret dec dec push sub fistl jae xor imul inc jae jae ds sbb gs cmp popf xor pop pop sub xor lds inc imul xor cmp mov imul jae push scas imul sub je mov push aaa adc and cwtl lods (bad) int3 test cmp add and sbb adc mov and popl jb adc int add jo stos mov fildll mov adc xchg push inc lea psadbw popa pop arpl insl inc iret es subl xchg daa jns insb pop push jbe and mov xchg lods cmp scas ja adc add (bad) or insl fistpl push andl and fnstenv jno mov pop outsl add aam scas sbb xchg out mov adc jbe outsb cmp adc popf mov add fiaddl scas scas scas push jle mov or push xchg dec mov push inc std add push push inc push push popa inc inc push xchg xor (bad) (bad) xchg xor ja push out mov les (bad) hlt push xor xchg std (bad) (bad) jmp mov push movsb mov aad mov rclb mov sub decl mov sbb dec jno repz test ficompl jmp fnstsw push mov hlt movl imul in leave mov pop add insb push mov psubd or fistpl (bad) (bad) (bad) ljmp in pusha aad jno mov inc aam dec std test movsl cli test xor (bad) pushl fildl mov xor fild or shrl cmp ljmp adcb push popa sarb and push cltd xchg mov pop loopne (bad) mov or or and or dec push cli stos sbb mov inc fdivl jno add aad mov (bad) decl xorl mov movsl in lahf xor mov js stc add mov (bad) lcall cwtl push loope or insl or in out push imul insb mov das cld sbb xor dec lahf repnz xchg push insb jnp add incl (bad) fnstenv adc mov sub sbb (bad) decl ficoml gs aam pop popa mov into sub ljmp sti (bad) mov aam movsl fisttp xchg fsubs roll (bad) (bad) ljmp imul mov sarb add in add pop dec or ljmp adc cmp movl mov (bad) ljmp std and test or mov popa into push stc ficomp leave fldcw and pushl pop cmp mov cmp lods insb mov in mov mov (bad) (bad) (bad) incl lcall ljmp fildl push fdivl or test fs ds incl pop push or push in decl xchg daa scas (bad) mov pop jge xchg (bad) jg (bad) call mov add inc push imul xorb sbb (bad) (bad) (bad) incl imul aam loopne rorl int3 dec ffree fistpll (bad) (bad) decl aad mov call xchg shll push repnz cli xchg cli jmp shll mov aas dec ss or (bad) (bad) pushl rorb ss jp inc ret out pusha fist addr16 mov jns imul (bad) dec sbb outsl and xchg ja int3 add mov das es (bad) jg dec cmp mov pop mov add mov cmpsl call ret sarb (bad) pushl sbb ret es pushf mov add decl pushf aas ss jmp addr16 jb push add adc mov (bad) (bad) (bad) (bad) cmp mov fwait mov xchg or out fdivrl fisttpl aam roll clc mov decl sbb int mov ja outsl ja mov (bad) jg sbb pop jge push dec cmp pop or adc sahf gs scas (bad) clc sar (bad) (bad) inc imul push js or push addl mov cmp cmpsl idivl pusha rorb imul scas fdivr (bad) (bad) lcall fldenv fild cmp aaa push scas mov fidivr mov jmp repnz (bad) inc mov push cmpsb mov sarb sub push mov add mov sbb xchg sub aaa mov or sbb push and fild sub or sub mov sbb inc les xor inc or stos and sub mov loop jnp inc (bad) fcoms add mov xchg push push and stos stos fs sbb xor dec inc push push push and xchg stos fs push push push xor push inc push xchg jo aad inc sub add mov sahf push or outsl inc aad lcall test xor push sarb iret inc js push outsl insb jne gs outsb ja rolb add js jo outsb inc lods jge dec mov inc insb insb or ljmp (bad) or dec popa popa fdivs xor mov in jbe daa imul pop adc inc adc inc push out test cli push jp jnp cltd adc imul test lret mov fmulp (bad) std outsb fs gs in inc imul add mov or cwtl mov inc jne xor cmpsb push push jne gs ret push or (bad) mov popf or inc inc bound sub fs pop push outsl pop fwait mov inc jns pusha mov inc in mov mov sbb push imul dec inc dec inc push or imul sbb cwtl loope add dec imul popf cmp add or loopne pushf popa jb daa sti inc outsb pop mull ds je mov mov stos scas adc dec sbb jb xor ret push jbe insl mov inc pop sbb xchg bound cs sarb cltd dec fs push pushf and mov test dec popa jbe push push or stos or dec outsl jne outsl adc ret aad sub mov sub iret xor sub sub pop inc out mov lcall aad popa leave pop ret rorb pop ss sti cltd lods push loopne (bad) or dec or gs movsb rorl stos mov shll mov je push outsb ja and movsl or or pop xor push adc jb pop mov sbb jne push add lock lods and push gs insb or repnz sbb sbb in gs pop popa push test movd inc outsl std rolb push push outsb sbb outsl in imul sahf daa adc cmpxchg add mov fstp add mov push jp dec pop popa dec cmpsl rorl and pop push insl jmp sub insl sahf imul shlb je inc repnz shrl xor inc adc (bad) mov outsb add xor jae insb gs xchg xchg adc mov dec inc push dec inc fs pcmpeqw imul pop jne add mov dec xchg jo mov dec pusha addl popa or ret sbb in xor mov lds scas negb push orb bound arpl adc xor push mov jl sbb and jae push jne or fidivrl add sbb les pop jno jns and subb cmpl or das inc nop pop das and mov loope inc dec inc dec lods xor sub (bad) push sbb add adc (bad) in xor cwtl test jo add gs imul outsb je imul dec sub sub es aaa or jb cs mov or or xchg inc inc jnp popa jle (bad) mov jo test xchg push shrb mov adc arpl push xor push adc push aaa push cmp or fdivl ret adc adc xor imul sbb jp lods add push mov fsts mov xchg adc inc and push mov push push push popa xchg gs jb roll addr16 (bad) adc and or mov lods loopne and ljmp cmove push push rcrl adc repnz pusha das sbb jno imul push adc (bad) shr dec or loop addr16 ret nop xor or mov adc mov and jne push aas daa fs arpl gs imul inc push push push sbb (bad) dec sarb cmp push xor pop scas push dec aas or jbe gs fwait nop mov sub jnp ljmp fsubrl inc outsb mov divl or and sahf pop inc ljmp and push ds pusha xor or push xor xor dec or pop (bad) add leave mov jo lock push add cmc or adc sub fiaddl lahf jo into push cmp jae arpl data16 xchg push pushf pop jbe test dec insb gs out pop inc aad xor ds mov adc and adc fistl and fwait dec pop jmp rorl ret sub (bad) push movsb imul testb mov sbb xchg subb inc mov cmpsb in xchg ljmp adc fldl mov pop ja scas jnp addl push dec xchg subl cld arpl jb fldl mov xor pop popa sbb les push push bound pop dec mov adc roll jo je or data16 push sbb insl ds push adc xchg rcrb imul data16 cld imul aaa or popa addr16 mov fsubrs jb jge inc popa ja sbb pop jae sub test flds push mov mov les lds rclb xchg xlat jecxz cmpsb loope pop adc pop jmp fdivl sar add jo xchg gs xchg push or adc gs adc jl xor push dec xchg xor (bad) jae jnp sbb push (bad) fldl push loopne and (bad) xlat jne dec (bad) mov call or or adc inc ja shrb fisttp mov inc or mov add pop adc or add mov sysret sbb cmp mov inc pop add mov (bad) add dec or sub jmp jbe cltd xlat mov std or inc mov call ret mov add or mov sti add and addb shrl pop rorb add jmp sub or mov or add or add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 