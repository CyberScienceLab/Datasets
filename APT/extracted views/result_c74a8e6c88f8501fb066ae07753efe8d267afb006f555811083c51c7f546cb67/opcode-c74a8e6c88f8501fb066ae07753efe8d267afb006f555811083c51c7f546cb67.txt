outsl (bad) out incl add test pop push push xor push push push add (bad) fbstp push call mov cmp mov je addr16 push pusha fdivrs lea movb jmp add stos stos pop xor lods and push stos mov or jb ljmp mov repnz not dec cmp mov mov adc sbb and xchg dec mov sti mov push dec push push lea push mov outsl fwait mov sarb and jbe mov incl push add adc add adc mov in aaa adc jo xor sub pop adc add adc or mov (bad) mov popa adc mov cmp pop add out mov push push add mov jge push push push adc add or cs fistp pop sub jne neg mov sbb mov mov add cmpw pop imul sbb fist cmpl out push jo bound push push pop clc and (bad) je or mov mov push jo xchg xor push sub fdivrp scas adc lea cmp jne mov mov ja jl push sbb divl mov lods (bad) fnsave sub jne pop push adc faddl pop pop and div pop pop add or sbb cmp push fldt nop add in mov mov je lea mov test or je dec mov mov testb or (bad) and add or pop inc push iret or cmp mov out jmp mov sarb lret inc dec sbb sbb fidivl push adc rcl mov or vcmpsd int (bad) aas fwait aam mov cmp ja cmp jae sbb (bad) fcoms or mov push mov shr rep mov aaa and rep js mov pop movb dec imul push xchg xor sbb and adc jnp std data16 roll dec add xor add loope push push push nop adc jnp push inc fcmovne je mov lret je cmp aaa sbb push cmp mov dec pop mov lcall or xor test frstor jne cs cmp cmp je mov insl movsl adc scas or pop sbb inc add fmuls frstor xchg je iret jae popa xor sbb push mov pop mov and or cmp jae sbb jno sub inc or sbb mov sub lock loope sar lahf adc cmpl popa sti out mov or fdivs mov adc mov jmp sub sar add (bad) mov mov fist gs mov mov push js sahf mov lock mov aaa rcr das or adc jne fwait mov mov jbe cmp cli sub and sub sub jne push insl cld dec pop rol loop lea outsl or and lahf push cmp push push pop dec lret mov (bad) and sub movsb adc fldl mov test mov push fldt jne aam lock adc mov or and or or in repnz pop pop push pop mov sbb (bad) sub sar rorl add mov xor es mov adc repnz mov ficoml sub lds cmp sbb and mov (bad) pusha popf push sub fidivl jae les pop sub roll idivl cmc pop lods repz and or in fisttpl pop mov mov or addb into mov jbe out out cmp lods je push push insb ret sahf lds sti sbb fidiv jo sub fmuls enter out pop jmp je mov xlat lock mov sub pop sbb pop enter pop adcl call aam mov cmp jae out inc or jecxz outsl fsubrs fidivr lret jae fnstcw out sar (bad) roll movsl inc test add jnp imul sub or sbb ret cmp sub clc test jbe cli sub add push cwtl cmp in ret repnz jne sub das int movsl idiv fsubl push test decb int3 dec or dec inc dec es fnstcw cmp int3 adc push lcall icebp mov jbe imul insb mov xlat cs js (bad) jae inc mov inc ss inc dec xor aas fdivs popf aad adc jnp jb adc sbb inc out jbe ret shrl cmp and push mov pop jne imul insb nop cltd mov adc cmp orl rol loopne sbb inc inc pop daa jnp push mov (bad) fcomps in inc push mov sbb mov movb sub mov lock call mov sbb cld sub mov mov cmp and sbb mov fwait mov dec mov inc or jbe jge das or jbe mov enter outsl rcr lds sub jnp scas jne or cmp mov xor sub push dec fildl dec cltd jae push xor insb cmp pop call adc cmpsb negb adc sbb cmp pop mov mov and rol mulb in icebp ret (bad) and cwtl xchg sub test inc mov add push cmp cmp push test xchg lock rclb mov in outsb dec sbb in je in and arpl xor ljmp push pop and hlt (bad) (bad) sbb jge dec or decl jne cmp gs mov (bad) jbe (bad) fwait jle mov movb mov xchg xchg push pop ficom or mov jmp test das adc movsl push (bad) fbstp cmp jne je (bad) imul mov dec push pop mov cmpsb mov pop mov mov mov idivl inc sbb cmpsb dec lret adc das or (bad) (bad) or je stos test lods je xchg rclb icebp and jbe sub cmp xchg test lods test pushf pop push jbe sarl xor movl add or adc pop sbb das mov push in xor imulb add call cli inc lea push int3 xor push xlat sahf add mov lcall iret ljmp (bad) push lock and inc lods (bad) xor inc inc mov (bad) fdivr push add push outsb movw mov insb adc imul subps xor lea fistl push push xor fucom fiadd les dec enter outsb mov ljmp stos xchg xchg jge push or inc les stc imul adc xchg push lret cmpsb je or int mov rorl push sbb pop jmp inc mov or in pusha aaa mov popl movsb mov xor out sbb jae mov adc lret mov mov int3 (bad) mov (bad) or mov gs fsts pop jecxz pop mov mov lahf fiaddl inc or pop jl inc pop xchg add xchg or cmpsb je push rcrl mov mov sbb jo lret push pop cmpsl fmull and add loopne push mov fdivs xor add adc push fistpl fisttpl push mov loop add jo jno daa mov sbb sub js mov fisubl adc dec shr ljmp push imul outsb test xchg push (bad) mov sbb pusha adc or cmp cmp add push fidivrl mov mov sub (bad) (bad) neg sbb sbb add loope (bad) aad dec xchg jo rcr pop mov ret jmp pop xchg or adc jne adc add jne pop or add mov cmp add add imul int rclb fisttpll and fucomi xor sbb and pop js xor adc mov adc jnp mov cmp adc repz daa mov lods add push push shlb mov fldt imul addps sub jne push roll push mov ret sbb aaa jle pop ficom inc mov push jmp and inc pop pushf (bad) sti lods mov pop push push and mov fsubl sbb push mov cmp inc sub jg adc cmp int3 (bad) and test loop or sub data16 mov lcall sub mov sub sub jo sbb mov sub mov loope mov or or ret cmpsb xor leave pop addb ds push adc sub cmp (bad) mov xchg sbb pop lahf sub xor xor jae jo xchg (bad) sbb (bad) out fidivl jne push jmp push inc mov jbe addl cmp jmp adc lods punpcklwd ret mov cmp mov push push add js xchg add shl das jo and cwtl dec push out insb insl arpl push inc push sbb push mov sbb into push bound sbb adc xchg fs sbb sbb fisubl push push mov into push dec cmp xor inc push iret jno fisttpl add sbb push in mov or push mov push or das pop (bad) into inc in addb sub dec mov push movsl mov pop (bad) notb je pop pusha add cmpsl and push (bad) cmp lret addl mov (bad) and cmp insl jcxz fbstp cmp movsb xchg cmp sub or adc lds popa nop xchg add out jo shlb sbb adc dec push mov inc insb push test mov gs ss adc and and clc jmp push jo jne adc test xor ret add sub jno cld add je mov inc into and xchg mov push mov out fstpl adc jl mov jle push xor sub scas cmp add push sarb jb sbb mov and repnz js jle pop sbbl je mov (bad) lock mov xor jg push into scas and dec sbb sub push test xchg les sbb mov jne dec int3 push mov sub outsb or add inc or mov pop (bad) cld jmp sbb mov mov adc dec sub and test inc or dec push call es enter cmp pop add mov fcoml jmp add sbb loope in xchg fcmovb adc sbb push add sbb and and sub inc int popf push loope mov pop push dec lea cmp dec cmp sub or repz xor loop xlat xor in test adc or push popa push js rorb cmp (bad) mov fstpt or mov jg in or or jl jmp add movsb pusha xchg or in dec push lret ss adc add rcrl dec std icebp jmp lea and loopne push and adc test dec sbb or mov gs pop sbb and cmp push or push xchg cmp movsl push addr16 int addr16 dec xor out roll mov dec mov push fcom shlb fwait sub add dec je (bad) divb aad aad imul rolb popa into bound dec jle ss jmp cmpsl mov pop test ret inc not je push cmp and jecxz mov mov dec mov stos xor and xchg mov in psadbw mov loope push adc add daa or or jmp leave inc es fidiv cmp lret inc or lds int xor and add out mov push push push mov aaa push jp lret mov mov xchg sbb jne in xor or inc dec push xor dec popa ss daa cwtl push popa fmull xchg addl aas mov dec xor inc cmp jl jg xor push push inc add mov mov jne repnz mov mov es dec add test ret or sbb mov cmp mov lods mov stos pop dec faddl lcall cmp adc mov rcll in cmp (bad) js stos sub mov rorb ss scas or mov mov int (bad) push shr mov sub sti fcomps fildl or shr mov cmp mov ds dec and sbb adc test js lock dec adc (bad) mov push fisttp jge (bad) jle cmp jne sbb ss add xchg ljmp cmp lcall sbb pop pop mov fidivr and mov push and push test or add (bad) insl iret push shrl pop mov mov dec sub push and movl jmp push sbb scas mov dec inc sub das cmp mov repnz push inc jle in lods cmp xor dec in ss js (bad) xor sbb test jp adc jecxz or in or pop cmp sub pop test mov sub fiadd test data16 and arpl push mov arpl inc leave or or mov xor jb jp mov pushf cmpsl and jnp ret inc or movsb sbb lods popa mov movsb inc xchg lahf repz mov lea inc repnz fcmovne leave lea inc je add rcll test inc scas lret stos inc ds outsb test cmp je aas dec dec dec das test jmp aaa fmul iret loopne frstor inc jne push mov xlat lea pop mov add inc mov inc sbb (bad) lcall (bad) fnop pop cwtl mov pop ret pop mov cmp fimul push cmp cwtl insb push xor (bad) jecxz cmp scas and sub mov mov rcr adc sbb sub je aaa push lea repnz test insl jmp inc xor push mov cmp fistl xchg mov lea mov xchg jl add xlat je sub aaa jns xor jmp cmpsb dec in mov orl mov bound or sub cmp and sub cmpb jae or out fmuls mov aam mov or jge xlat lcall inc dec xor addl jo inc pusha out jae sub pop imul xlat jmp (bad) into mov fnsave rolb pusha clc ret cmp imul mov pop mov (bad) ret dec xor push idivl insl iret inc ja sahf mov or aas push mov xlat mov jb push or jle dec add add dec cmpsb xchg pop dec mov ljmp adc fiadd jmp test sub dec sub add imul lods cmp (bad) stc ss or jmp push cltd jae or push sbb add adc or or (bad) add add insb add daa aam imul cwtl scas daa or ja push add insb iret lods and sub jnp jg and cmp and push pop lock pop inc or xchg (bad) dec or or sbb cmp loope pushf add or jo jl sbb mov push push lds add adc adc dec mov mov inc add xor adc mov test daa mull sbb leave and push (bad) bound test jge pop ror push cmc lock inc cs outsb jl mov pop daa ficom mov push cmpsb ja adc mov cmpsb orl fstl jb push mov sbb add jge jp jg dec jg lea aam or popf sbb inc and popf fimull mov pop (bad) dec inc or mov ret loopne sub dec mov mov jge mov pop shr sbb mov pop pop push lock add or adc in sub xor mov lds imul mov xchg clc arpl dec mov xor add lahf sub cmp lret mov push aad pusha xchg test inc pop dec aaa and xor push (bad) mov or or jge mov push sbb insb fadds or mov or insb dec int jbe cmp inc or roll dec popa test popa test add push popf imul or dec pop inc push (bad) push rol nop nop pop sub and jno dec jns ss mov es mov ja mov adcl jo push push in ret into push scas adc xor das pop add ljmp pop add mov add lea pop or jns adc or pop or arpl or jnp push jns dec and push ficomp or cmp push ficomp cwtl adc dec inc scas mov or sub or notl out add pop je or xadd push das cltd mov dec pop add jo sysret mov subb xor sbb cmp fidivr out jne cmp or inc push test jbe arpl xor inc mov loope inc leave inc shll addb dec popa add or adc cmp sub and test stc hlt cmp sbb push adc pop shrb rolb imulb lods or pop iret push add nop call movsl cltd cmp mov jb js jmp jg js xor repz pop je sbb sbb and inc popa jae mov fsubl add inc mov sbb std jno dec adc (bad) cwtl outsl rorb js add mov add addr16 into ss data16 pop adc dec shrb pop sub add cld scas xor fisubr cmp lea cld (bad) les ret (bad) div and cmp inc xchg je or dec iret and mov clc dec loopne jmp xor orl add fsubp lods push jo dec je cmp mov mov mov pop jl add jg dec and mov sub jmp ret loope popl in fs fidiv lock jne fcoml cmp jno lcall fmull mov or adc or imul int3 int3 push inc xor pop inc xor testl mov mov hlt (bad) mov (bad) (bad) inc clc adc inc cld lea and mov sub or mov inc ja pushl push lea test pop pop inc or xor and push or loope xor ss fsubp mov add push or or sbb xor jmp mov mov imul aas pop push sub push mov push sbb add push and mov scas fidivr pop loop loopne mov lret ds xchg add repz arpl insl pop sti scas out cld jmp pop leave rcrl xchg or das inc inc jge cmp or aas add insb jb mov bound std inc fwait sbb pop cmp (bad) lds jae add lcall das mov inc adc adc cmp and in insl push adc add repnz lock roll sbb rcr inc cmp fisubl jbe xor pop push inc pop jge imul in test mov xorl cmpl outsb js add loope sbb scas sub out add pop shrl lock hlt clc cld cs ret ficomp insl clc popf fcomp sbb outsb dec and add mov aam or jmp mov roll pop dec int3 jge push xchg jo pop mov mov sbb fmul int3 data16 out mov fnstsw sub scas mov pop sti add dec add in adc adc outsl ret add int jge js push adc or sub mov and arpl dec je cmpsb loop sbb or push jnp mov pop dec (bad) xor imul mov mov outsb movsl loop dec adc add jl jle push or dec movsl xor jge mov cmpsb adc mov jmp pop jae cmp ja jbe inc out into xor repnz inc ja inc fildll ret int3 mov dec adc lds mov (bad) xor sbb js test (bad) sbb cmp jb inc jmp (bad) insl fadd mov jb loopne add pop test lcall nop pop mov cmpsb jmp jl mov mov mov mov add add pop mov int3 xor sub lret add cmpsb nop and pop bnd inc aas mov push or lcall hlt in pop in xor cmpsb fmull inc (bad) in call in in lock hlt mov (bad) xor clc cld in or sub or lock xor pusha adc mov insl nop popf or adc and pop mov insb mov lea or jg outsb jnp and std jecxz ja inc (bad) leave and mov out lea (bad) stc jmp xchg iret sub inc sub fmuls clc add insb scas and dec pop xchg mov pop and in adc sub daa and sub add dec (bad) jne je jl test pushf movsb mov xchg sbb imul imul movsb imul (bad) jne fadds call insb or mov xchg adcl rclb mov mov sti mov mov dec inc adc push in push repnz add cmp mov rol dec daa lahf mov xor push jg sub stc add mov lds enter outsl add outsl lock mov add lcall ret push mov jmp pop inc stos arpl (bad) adc or dec hlt add mov mov je mov pop push jle je mov or adc push or (bad) cmc rcrl adc jne lea fstp push decb je mov mov xor shrb incl jmp das xor ret je pop dec bound lods add or lea popa cmp paddsw (bad) mov (bad) mov and mov pop jge cmp or jle ss push into (bad) lock mov add and bound (bad) in adc clc mov faddp dec add inc (bad) push mov loopne push or or inc fldl push in cld push push leave xorl stos add lea inc outsl lods mov add loopne call rorl rclb sbb out inc adc xor mov in push add push xchg sarb insb in lock sbb lahf push and sub mov push pop (bad) jbe adc out xor pop shl movsl mov sub cmp jg lods and sbb dec add mov push std retw or call push seta adc in pusha ljmp push pop cli pop xor and mov or dec test mov dec dec mov adc dec dec fildl fstl push sub jbe mov xchg pop adc mov push add sbb dec push aad pop jb nop inc lods leave mov jo lds cmpsl pop mov push ret pop mov xchg jnp cwtl in inc mov movsb js dec int3 cs popf add xchg dec push cmp idivb fs out sub jae ret pop inc mov or loope push push es jb or pop pop ljmp mov mov loope fildll add loope add or and call add and sbb pop jecxz adc insl mov imul cld or pop icebp mov mov mov add mov pop sub sbb (bad) rclb inc mov fidivrl pushf testb (bad) mov inc das adc mov pushf push push jle outsb adc and fsubl xchg cwtl cwtl mov cmpsl cmpsb gs insl outsl sub imul lock out dec das and and mov pop sbb sbb je jge dec inc push add push xchg inc pop cmp icebp ret (bad) addr16 adc jp icebp push call cmp (bad) into xchg push pop in push xor sbb add mov popf jnp fcoms je fwait dec mov or mov pop push push cmp faddl lods ret xchg lods gs jb cmp mov int3 jae dec sarb leave sbb and je push loopne lcall cmpl fldcw fsts imul in adc lcall addl insl pusha sub js jbe jo imul and jg xchg push xlat sub push push fs in fidivrl pop sbb loopne mov ds xor addb mov in (bad) jl dec pop inc popa mov jl mov lock jne mov std bound jle jne or push mov insb lea pop xchg in fnstenv pop inc jo push adc pop add jns pop in push jns stc push stc add or fisttpl shll add lahf fimull enter mov sti dec cld out sbb xor jg imul cmp (bad) mov cmp add jnp jg inc lea add xchg call lea adc jle xchg pop pop xor ds mov scas clc jg cmp pop adc or addl sarl data16 jmp pusha in jp xor mov dec (bad) imul sub ret pop decl cmp sub mov push dec or mov pop adc dec inc lock div cmp inc push imul push or repnz mov and sub lock jae cmp lea cmp movl ss fsts insl jnp cmpb es lock mov mov push outsb jmp adcb (bad) adc test insl aaa cltd stos dec dec cmpb into mov dec aad adc je inc ds push or aam inc in testb mul fildl inc das push jnp pop or pop or mov inc (bad) cmp jbe mov push jge cmp add je inc jle cmp clc fistl inc cmc inc lock or add je scas sbb lock fidivrl cmp adc in jbe push push ss pop jmp test repnz or je xor fisubl pusha inc sbb jge add dec dec clc cmp inc push out push sub insb in mov add pop sub les mov push push in in rolb push mov pushl sbb orb out test jbe lock or adc and pop pop inc jl mov insb or jo movsl inc fimull push addr16 dec push jnp xchg (bad) icebp jne push les inc loopne dec inc xchg mov xor insb inc in aam test push lea sti iret xchg stos xchg mov lods or pushf js and xlat and cmpl cmpl mov mov add out je dec mov jg popf fdivr sub adc mov jb adc leave (bad) jae ret push cmp fildl (bad) or or push pusha jecxz pop jb adc testb inc cmp jbe pop pop es (bad) call jb cmp xchg pusha loope mov mov cmp jmp nop into mov aas sub dec jae ret xchg cmp add mov js mov add sti into or pop and pop lret sbb add cmp mov jle xor in fistp je (bad) fadds cmp add out fidivl jl adc loopne and das and sbb jecxz jmp push xchg cmp mov push sub sbb ret mov addr16 sub xchg test push je cmp retw inc sbb pop jle fldl mov inc push pop sarb rorl xor sub jecxz jne ret aam jne (bad) aas insl (bad) mov int fstpl loop out cs stc notb jne stos and sbb pop aam hlt (bad) dec add sbb je aas cmp dec xchg addr16 aad dec sub ljmp pop lret pminub push xor mov inc push push mov enter insb es push mov scas enter mov jl xchg inc popa or sarb and jp rorl xor inc fnstcw and inc push cmp push lret bnd inc sub cwtl cmp in mov pop adc xchg in cmp adc xor outsl xchg pushf pusha inc mov adc rcll shr pop push adc xchg les inc ljmp loopne and inc or xor xor jp fdivrp pop mov inc sarb push es xchg mov sbbl jb lcall inc clc stos pop aaa jno dec mov lea out cli adc or jle int3 das ja enter fdivrl shr popf pop mov jne enter das (bad) xchg pop pop jne jl and fs xor mov in and xchg or cmp fisub nop fsts inc push or push mov adc cmp xchg sbb cmp mov cmp nop and lret cld inc (bad) adc push lea lock mov (bad) dec out push insl mov in pop push dec arpl push pop jmp pop pop ret orl or inc cmp mov enter (bad) and add push jo stos sbb sub fbstp fcom adc dec inc push mov cmp insb xor cmp mov inc adc or cmc add fdivrs (bad) movsb outsl mov adc ja push mov sbb or fsubr cmp sub leave test insb add popw pop mov push push outsb or sbb jl dec (bad) (bad) push call or xchg push inc jae into sub and dec adc repz xchg dec mov fdivs add fs push push push aam pop loopne xor pop mov leave pop adc fstpl rolb ja sbb inc cmp push inc sub ja,pt ret inc adc adc enter dec cmpsb sbbl jle fildl jae mov shr mov js xchg cltd dec lods test aad loopne mov movzbl push adc and sub and sbb test mov cmp inc xor push inc aam jo addl push je cwtl mov adc jmp dec (bad) or push adc pop dec dec or leave and xor test sbb sbb sbb cmp icebp or push loopne loopne es repz rclb inc shll mov stc fbld push movzbl shl dec jo ret xchg fcoms cs test loope shll lcall lea and fs push sbb fadds inc lcall test or fnstenv rcrb jne or push (bad) jecxz push push mov mov pop xor or call incl xor add and outsl stos cmpl scas and inc xorb pop pop enter cmp je push insb shrb out cmp je mov imul jae mov aaa push std cld insb loope mov fdivr push push or enter inc xor fiadd mov push cmpl adc xor jne push movsb cmp pop and inc aaa mov cmpl adc iret inc stos jl fdivrl jmp sbb es pop pushl mov xor insb mov pusha call call in test cmp and lea pop call xor jp clc mov sbb ror push and adc mov out (bad) pop aam jle adc dec fistpl icebp js movsl adc sbb mov add inc ja pop fisubl add inc and mov (bad) ss jae loope lods call sub and push cmp fnsetpm(287 push stos push movd sahf jp pop cltd rolb cld adc les mov adc or mov (bad) scas data16 push hlt lock bound clc insl stos das adc mov inc or insl inc ds mov jg mov xor inc (bad) mov gs jle pop mov fmull mov mov fbstp fs fwait cmp je (bad) mov add cwtl loope imul sub xchg aad stos mov in mov test jb xchg outsb frstor mov cmp pop push das pop mov dec push or addr16 push add lea cwtl aad add std sbb mov inc jmp mov or pop sub testb pop je andb mov mov push mov or push and or xorl fbld popf xchg pop adc aad mov pop add data16 loopne lcall cmovle and mov mov sbb and or test adc insl cmp adc repz jge mov push fldl inc pop idivw or push je jbe sub out mov test decl inc loopne insb ficoml adcl jmp sbb or cltd adc cld (bad) stc add lea shlb push fildll out xchg add lods push pop loope pop add cmp addr16 mov mov jmp cli push mov (bad) or addb push ret jmp jb das jmp or add leave sub xor sbb mov or mov inc test pop in add fsts dec sbb add add cwtl jmp jl cs jnp adc in mov mov and add jg movsbl mov inc jo jmp je xchg dec add les push or jb adc adc sub xchg addl cmp mov clc dec sub push jns hlt cmp je dec pop dec dec je pop xchg or or xchg mov mov addb sti sub adc out int3 xchg pop iret insl jge outsb int3 mov push daa mov mov add orb pop aas push int3 popf in clc pop sarb int3 sub dec mov add je insb je ja jmp mov or hlt lods xor cmpb loopne inc xchg ds enter and add rcrb ret mulb jo fadds pushf enter xor add sbb jle fcoml push clc addr16 aas mov xchg add (bad) in repz scas loope sti pop call jo inc mov or push add mov xor (bad) cli mov lea sbb and or inc hlt dec sbb or addr16 adc xor lock out loope jnp inc jmp and add adc loopne or dec (bad) int in lret clc push int pop (bad) mov js js xor decb jnp xchg xchg push lock pinsrw sub pop (bad) outsb fisttp xchg je dec jge add out fldenv jg iret pop mov lock add push mov mov outsb aas mov sub cwtl int mov push divb or push in hlt or test rol adc (bad) mov push clc jle mov mul jbe or pop add push stc jnp int je dec hlt jmp ss add (bad) dec rcrb clc xchg sbb dec mov pushl inc push cld aas enter jno and pop and pop pop sbb or adc out add inc insb insb jle pop jns sub ret sub add popf push test ret test das aaa and out loop jecxz daa cmp rcl inc adc (bad) ss add icebp es stc pop jecxz,pn cmp test mov inc pop xchg icebp ljmp adc or jmp inc and cmp push cld push pop pop mov mov data16 in pusha xor shlb add jne cmpsl sbb jno or out xchg je cmp pop jmp cmp jge (bad) sbb (bad) rcrb orl shr and jmp add rcrb je loop sbb fdivl jae js rorb loopne fisubl xchg pop hlt in or pop mov gs jge pop jbe xor push sbb xor or sahf mov mov clc (bad) jg sbb lock loop (bad) cltd dec lock push repz sbb mov ret xor xchg sti cmp add hlt jae push sbb sub outsl push sbb xchg add stos sbb lcall shufps sbb adc lods enter add in es mov sub jmp je mov add fcomp xchg sub add sbb push outsb rolb pop adc sbb mov ljmp sub or add (bad) testb add (bad) cmp mov lea testl sbb lods inc adc xor fnstenv pop pop mov dec fcmovnu push add dec hlt sbb mov mov mov gs xor pop push lcall xor fldcw test bound aaa scas imul mov lcall inc aaa (bad) mov (bad) fdivs fimul stos loopne and pop sbbl ljmp call jecxz add lods aad add or sub jg and out mov cmp es xor int mov push inc sbb ss ret dec loop roll jb rolb or arpl lea sbb hlt pop jbe enter or and inc and cmp jb stc and sbb push mov and fldt cs add pop cmp xor jb pop lret sub imulb shlb sub mov or cmp lock inc imul add inc sub dec mov shrl cmc addb mov les inc cmp rorl cmpsb fildl je,pt jns dec dec adc push inc cltd insb nop pushf nop cmp cltd test adc loopne sbbb rclb xchg or leave pop cld dec loopne daa cmp insb jns call mov push movsl sub sub cmpsb (bad) xchg or jbe ds cli mov mov outsb test (bad) sbb or mov inc loop or jmp xchg ficoml add mov or jae cld fildl or (bad) jg lret sarl lea shl mov add fs and clc lahf xchg cmp cmp jl aas add jle cmp stc cmp out pop sbbl jno inc jle test cmp cmp out lea clc test stc push cmp pop push ljmp pop pop push call push push lcall pop sub fstl cld int3 data16 mov sub cmp imul pop mov lcall dec cmc out adc cmp or push cmp add sbb clc dec lods mov cmp jne dec inc pop cld ret push sarl jmp inc and jbe inc xlat mov inc or ja xor add jmp cld push lock ss std xor xchg clc push aad add lock lea and lea mov cli adcl xor shl scas adc mov daa mov pop inc ds and mov mov cmp das push cs outsl das push jmp add aaa jne pop cld mov mov js das add add dec lock sub js xor rorb aaa (bad) cmp cmp add push push lahf dec (bad) xor pop fisub push mov call xlat xchg daa and push push xor cmp mov push push mov int3 pop lds mov mov insb inc (bad) cld aaa (bad) mov incl ficompl inc cmp sub (bad) je push (bad) add lahf sti aaa push je add push inc inc or jmp or add sbb jmp push add fildl (bad) sbbl mov and or jne pop sbb mov incw scas mov loopne inc sub push mov enter sti pop mov incl (bad) sarb and inc jmp xchg sub outsb inc ret fcoml mov add (bad) jecxz jmp loopne or sbb sete ss fcmovnb mov dec out inc mov push pop inc lea jne andb sub mov mov mov je sub loop pop int or sbb inc add scas inc je lret push cwtl loope or movl and cmp dec mov mov (bad) shll shlb pop in dec jnp ret xor inc and inc repnz jbe outsl andl cmp jae mov or jne push repnz mov dec add insl inc add pop mov fs push rclb dec xchg or lds pushf stc mov daa pop out add add fiaddl aas ret jmp dec dec movsl test je pusha repz inc cmp dec fstpt movl movsl scas dec or add inc add cmp inc gs cmc faddl dec push adc sub pop push pop cs and mov sub lock orb data16 cs add and pop jmp sub inc sub mov imul jns cmp in or fadds pop lcall lahf lock jl cmp fs imul gs push cmp xorl aas jbe mov pusha or sti push dec inc mov shlb and xchg jp xchg mov mov rclb sub xor adc add cmp (bad) ljmp test cltd ffreep xchg mov in mov mov mov lcall idivl or test (bad) cmp decl ss das lock enter jmp ret dec popf (bad) cmc insl xor push cmpsl adc loop jle adc ds orb push or adcl add mov ret mov mov jnp jmp ljmp adc cmp inc lock mov dec sbb inc sbb pop push and imul push adc (bad) sti leave out pop xchg jle and cmpl fwait mov or or fcmovb lret in fs adc mov ja sbb xchg call lea cmp mov (bad) jmp or jg sub mov inc cmp jne inc push ds cmp int3 jns fcompl fs clc push fsubrs add push ds inc sbb cli xor xor add push or mov or xor arpl pop in mov jmp repnz insl fsub rorb jp sbb out inc xor imul jge push pop mov add jno dec add rcrb and roll xor inc mov xchg je jae fiadd inc fnstenv repnz mov push xchg sbb sub hlt or inc mov daa and sbb cmpsl and rorl call shlb xchg mov adc cmp mov jle out cmp insb aaa jmp jo adc pop push xlat push cli jne icebp xor or or lods pop pop movb jbe sti pop adc mov mov inc aam jbe sbb cmp mov clc or push cs testl push jb lods push fcomps out (bad) cmp push or sbb fdivr sbb lods jge jae push adc and daa push pop sbb adc inc insb adcl xor outsb inc pop cmpsb adc push popf mov mov push fisttpll aad cmp add andl loope push xor mov mov push xor add into rcrl push andb pop mov or push jbe bound and pop cmpsb adc dec inc add add inc fildl inc cld les mov sub out cmpsb iret imul gs movb fsubr out push dec jge test jl out mov lea mov hlt mov imul test pop or jle push sbbb cli aas jbe aas pop xchg mov dec mov mov xchg mov shr lea not and (bad) sub andl and lea and pushf mov les and pop add pop icebp push pop mov pop push adc add mov pop add adc (bad) mov or pop sarl sti stos jne jmp xchg hlt mov sub adc sti add mov cmp aas mov or roll cmp or aad adc cmp je arpl in jno inc cmp mov (bad) and fbstp dec add dec loopne fwait (bad) lds sbb mov push lret imul lret mov add cmpsb cmp hlt or jo push pop roll imul xchg pop xor cs popa pop sbb or add push mov je cs (bad) jae xor inc push pop jne mov insl inc lods or jmp and rclb push (bad) mov test cmp cld cmc lcall push push sub mov sub shl ljmp andb negb sub pop negb insb pop or push cmp sbbl insb and decb or and inc cmpsl or adc push loop js imul in adc adc inc add or add mov loopne enter add adc lea push clc jle stc sbb mov das cmp xchg pop dec insl or push and out jnp cmp jnp or adc xor lea sub shrl aad dec pop and and push or shll jge in das push outsb or out push add shr push xchg sub inc mov loopne out jae cmp sub decb iret sbb jl fistpl jb pop jne mov cmp es add pop and cmp mov mov aas adc jmp es cwtl mov or ds (bad) cmpl adc insl or outsb xor pop adc inc test mov pop sbb and sbb (bad) adc push cli (bad) push cld sub fxch push (bad) mov mov mov jo push mov sbb inc or clc (bad) add jne mov sub and or je mov stos push mov rcrl pop dec dec push into pop pop std push (bad) fs pop jl shl inc and and or push icebp lcall cmp jle pop pop cli mov dec and mov bound test add fwait imul repz add pop mov decb jne jns mov jmp dec adc xchg jo sub test sub mov cwtl sub mov add jp pop mov pop sarb mov or mov cli test and in jne push and dec movsl fwait gs decb jge rcll add into shr or or pusha mov (bad) jmp sub in fcmovnb and jnp mov lods push mov or prefetchnta cld lock in loop lock and adc cld clc in push rcrb jne,pt cmp in jne dec cmp pusha outsl adc call or fstp or xor outsl xor (bad) or push mov hlt shrl cmp or xor xor andl sub push ror push sbb rorl add rcrl test lds pop lods bound sub mov push add fcmovnb (bad) sbb mov inc ret aaa imul lods pop clc xor (bad) lods mov push sti test out inc ds mov mov addb dec cmpsb inc inc shll outsl sub pop (bad) mov lea orl in pmuludq cwtl ja xor cld lock push adc out push sub xchg fsubp adc lret jne sarb clc imul mov inc outsb cmc jo fs inc inc mov mov add fwait rorb push outsl aam inc mov add cltd ljmp and mov cld mov (bad) jnp lea sub lds ljmp (bad) dec cld dec cmp adc orl xchg rcrb dec or fldenv js xchg popl sbb aas adc push dec pop pop mov xor lret pop dec cmp push clc jo mov add and pop and nop into shr push dec or or rcr sub into add pushf mov jns sbb add inc xor (bad) cli pop push fcmovnu es sbb ror aas or dec dec pop dec int sub pop pop pop pop call xor mov pop and iret out (bad) or mov and dec test xor popf and xchg inc mov mov inc jno adc (bad) pusha jb insl jb jge es sub dec ss xor adc adc jbe push sarl mov mov imul and inc cmp jle or dec inc dec and jbe int3 push and ja ja jno mov (bad) (bad) mov mov push add pop adcl sub repnz push psrad into pmulhw jns or sbb addl mov cmc push mov cltd or mov and sbb mov cmpsl out lods or sub (bad) ja sub push test inc lods data16 test daa add inc dec popa aad scas mov sub push jno (bad) cmc cmp lods sbb pop jmp cwtl out inc pop or mov or xchg mov pop fcmovnbe inc dec dec ljmp ljmp mov std adc popf ret rorl mov mov std jmp mov jmp push cmpl cmp jae orb pop add pop movl jmp insl mov mov (bad) adc mov stos je sub pop and cmpsb call data16 xor xor mov or push mov loope test push pop nop or xor push xchg pop ljmp mov pusha jl lock push aas mov inc sbb push test incl (bad) mov cwtl mov je rolb and mov sub jge and test pop loop sub jns dec ret das fidivr lea pop out inc push cli jbe (bad) (bad) pop xor jae in arpl cmp subl mov cmc (bad) inc jbe add jb push inc mov (bad) pop sbb push mov sub fcoml repnz dec sub push enterw (bad) loopne lock push sub pop lret lock mov or fldt dec test stc or enter movzbl add dec inc addr16 and cmp push or gs push jge and jo push pop fwait in push aaa ss push mov lahf add imul ja (bad) sub sub jp jbe add cmp (bad) ja push out jae mov int lret jl cmp loop mov es es mov stos jne push add mov daa je aaa jb add shll test and inc jae mov jae xor sub mov cmpl xor fnstenv inc cmp mov ss or pop mov inc sbb pop push (bad) (bad) inc mov or aas insl mov jmp sbb xchg in sbb sub sub (bad) out pop mov pop add jle add jge mov divb rolb push or push push mov mov jl and push pop cmpsb mov dec pop jle mov orb fs or cld mov adc or jp xchg push jle inc (bad) fnsave cmp jae cmp sbb loope lea and roll adc sub sub gs (bad) arpl mov fisubr (bad) je push mov push sbb jne sbb imul push and sub mov xorl jns repz data16 sub sbb push cld add mov mulb add sub or aam push mov inc jno mov add cmpb iret xchg mov jae sbb jmp cmpb push loope rolb aas push jae cmp out mov or push mov cltd fnsave push lahf repz mov mov jle mov fstpt xor lahf mov pop and (bad) sub push cwtl test xor jns mov inc push scas mov int testb jmp aaa push ret add jp push mov xor push js and and cmp push inc or js nop jecxz aas rcrb call sbb call out pusha mov pusha jae adc add lea rclb jmp push sub hlt or sub jne mov xor ja jmp ret outsb and sub jle xor push gs sub cmp pop inc inc stos arpl subb add jne lods adc jno or adc add inc mov push adc xorl loop adc mov cmp add int3 push adc or adc fs popa cmpsb fidivrl mul sbb and add pop inc add cmp iret push (bad) cmc notb lahf xor mov fidiv or lods loop in in sbb jne adc and and (bad) scas sbb lcall sub cmpsl inc ret or addr16 outsl loope add jmp add pop xor lret push cld (bad) rorl mov lods push sbb loopne mov inc cmp popa push hlt andnps (bad) xor xchg inc push xchg inc (bad) mov pushf rorb loopne add or mov mov mov push pushf add test mov adc or lock mov fdivrl (bad) nop xchg push lea lea cmp push enter mov in push lea cmp lsl adc and xor (bad) out test pusha (bad) pop pusha add push (bad) daa and add push mov gs or mov pop and mov sbbl mov dec je sbb jne sub add adc das fstpt gs stc je cmp fwait movsb pop add insb sbb lods imul mov std adc sbb scas mov rcll adc test xchg fidiv sub cltd push fstps pop add lods mov (bad) cmp sbb into fimull push add mov xor xchg pop mov jne mov aas push sub jg addl dec add add jmp imulb call movhps pop xchg mov pop mov inc sbb mov loop ret add inc push jne pop xor sub mov ror cmp lea cld sub xor add fsubs into adc leave mov pop adc push pop ret or mov dec xor cld ljmp mov push std jecxz mov jg scas flds lret mov push repz mov ja cmp ja decb shrl pop add sbb sahf mov or lea add lock test push adc pop and cmp or mov jb sbb jns jmp add jmp notb add or sbb mov and out nop xor mov repz add loope xor xor fcomps adc cmp data16 xor or mov mov movsb jecxz lods push ret inc lods ret jae stos add rcl mov push movsl dec inc mov loopne adc std cmc xor sub rep cmp and cmp jb push jl (bad) cwtl cmp sbb or lea push fsts jne mov mov push mov add sbb in ja call loope negl inc jno inc mov mov and xor imul sbb mov sbb pop push into ret je nop lea popa inc push shrl nop jne push int3 adc into xor xor mov or pop sbb imul mov in ss inc mov outsl pop nop orb inc mov inc mov jmp add lret (bad) xchg out add sbb xchg outsb in dec (bad) pop imul fsts cmp inc lods lds jnp cwtl pop jne sub sub test sbb repnz pop adc dec (bad) fdivl pop inc sahf into and test pop pop andb mov add nop pop cmpl adc pop push scas jge lock lret push inc aas ja dec cmp xchg movb lea orb sbb add lea pop hlt push (bad) int lods test cmpb pop lock add aas push add notl mov sub decl (bad) stc or movb inc mov add sub lret or addb hlt xchg ficomp push jno xor or dec inc fadds icebp fstpt or fs inc adc (bad) (bad) xlat nop mov add push sub push xor (bad) lea push into pop push movsb push es pop (bad) stos add mov cmp loopne xchg and push mov cwtl xor sbb jl addb push fucomi shlb lods pop aad cld stc jne or orl movl xor or inc adc add cmp push mov pop cmp xchg scas ss sbb sub mov adcl sub or pop jb aas mov (bad) jge mov jg fstpt cmc pop mov and push mov fcomps push sbb pop inc insl shrb xchg pop aam in mov shlb cmp insl jl sbb loopne gs test out (bad) xor cltd add outsl mov adc jg imul inc add inc testl cmpb mov dec in (bad) aaa mov pop cmp sbb cmpsb jno push (bad) fsubs leave jl in pusha adc andl and push mov add pop xchg mov movsl mov pushf cmp push int dec aaa push xlat push mov xchg imul (bad) or pop add sub adc adcb or jne data16 jmp add mov xchg push in pop inc mov xor sbb in push test sub lret sub pop das mov xchg (bad) ficompl or mov shlb (bad) fmuls mov dec pop or shrl or pop jmp jmp rcr or jne imul test outsl dec lock inc push in out push fisttpll cmp ja pop cmp jbe dec dec xchg popf sub jb outsl sbb outsb push outsb pop scas je (bad) add outsb sbb outsb xor adc add imul or mov sub or (bad) mov jl fdivrs mov test mov mov cmc and lret inc out and mov roll push aam sub sub sbb outsb add adc mov dec mov je sub lea inc cmp mov push stos movb pop jbe (bad) and inc andl (bad) dec jbe test dec mov in stos mov jmp jge insl xchg (bad) out cmpsl mov mov adc mov cmp ja sbb pop out pop push dec mov xor shrb test mov orb mov out movsl mov mov inc inc add cmc inc inc cmpb aam test pop mov lock add mov (bad) adc lea shld inc mull mov pusha idivb add mov adcl adc pop mov stos add push mov shl sti ucomiss mov push cmp pop pop mov (bad) (bad) mov test cmp repnz call std mov jne inc (bad) xchg inc nopl movsb mov call shll mov int add push and rcrb clc ficomp mov fwait orb and adc push cmp cld mov mov add repnz outsl bound push push lea dec pop push (bad) pop (bad) je sub sub test das lds repnz inc inc mov cld rcrb jp loope push cli mov xor mov fldenv std sbb and and dec add push or jb adc je add mov in popa cmp sbb add sbb jb adc aaa xor add (bad) popa (bad) in inc jb add mov enter mov dec pop sbb ja and and loopne dec mov inc cmpsb adc test arpl xor add cwtl add rcll ficom push rorl ja leave dec aad lds mov jle cmp xchg lldt adc adc add pop (bad) scas mov rolb insl fucomi add or xchg jae adc mov jecxz orb jg jl adc lds aam pop adc xor or cmp adc pop dec lret mov add sub pop add sarl pop add add or add mov cmp or or add outsb xor (bad) dec jmp inc enter sub sub (bad) test push jne dec mov rcl dec xor or sbb adc adc lods adc mov out sahf fwait (bad) test sbb sbb (bad) jecxz and flds mov ljmp dec test lds mov add movsl and rolb jnp ja mov insb arpl daa sti testb and insl clc push adc push add out daa xor in pop add mov push sbb pop nop orl xor cmp add push test push les loop in call dec sti cmp push nop adc pop mov mov push mov rcrb outsl add mov ficom cmp inc or loope clc lea mov fisttp loopne test scas inc mov scas add or push je push jle lahf adc xchg sbb add inc jns out or les lods call loopne popf in test rcrl jmp sub and push jmp xor add and (bad) push hlt dec pusha stc sub stos insl mov adc cld mov aaa sbb and clc add add je add jecxz push outsb push adc je dec (bad) jbe dec or and pop add cli scas test pop mov jge mov dec test jo add sahf inc outsl mov cmp jl or jnp or lcall sbb and adc iret shll jnp push cmpsl and mov fildl shlb add cwtl adc incb lea jne jne cmp bound movsl mov je sub cmp mov cli sbb leave and rorl push insl je and lods (bad) cmp adc add insb fisubl jmp adc xchg movl mov daa pop sbb ss jne mov cmp je imul push adc bound mov jmp and cmp mov sub jmp out mov mov mov mov xchg es mov je jg (bad) fistpl push cmp ja add cmp or (bad) int sbb jne xor dec fwait mov in in call nop add in sbb out or (bad) pop mov in je or pop ja lock in aad mov int3 add add push pop orb dec mov cmp adc dec xor pop cmp pop pop add aaa sbb add lahf ret mov add jp mov jns hlt jmp add jmp negb dec (bad) hlt inc pop or push push lock push cmp push and call push add hlt add insb insb xorl push je xor sbb cmp shl or fidivr test rolb push adc sbb lea in rcr push cwtl and push test cmp stos add push (bad) mov ficom jns idivl rclb fs inc loop or xchg mov fwait std inc cmp jl sub mov and sbb adc xor (bad) mov lds and jno pop jl adc scas ret pop xchg cmp pop fcoms outsb ljmp mov sbb pop pop adc cs mov lcall push je cmp cwtl test jnp lcall cmp and cs jmp sub push lock or xor jbe xorb loope out mov xchg sbbl xor push fmuls outsl adc adc (bad) xor in add xchg rcl jbe rcrl jecxz arpl sub stc das xchg lock lock ficoml and mov jne or (bad) outsb arpl dec inc cmp mov cmp sarl add add push fcomps aaa mov push inc (bad) (bad) or es rorl inc das cmp xor inc adc dec xor ja addb inc popa ds and je cmpsb or mov push outsb xor sub out add in dec pop dec and sbbb sub cmp rcl or mov pop inc push nop mov shll cmpsl xchg mov sbb enter sahf mov ret push add lods or add imul inc lods jo mov jge or scas data16 pop mov mov mov cs roll cmp xor fwait (bad) xor and nop loop mov jge and or adc dec pop pop sbb fs push and lret mov lock ret mov pop xor dec pop fdecstp mov pop ud2 test enter cmpsl jl test cmp or jg xorb lods add incb push push mov sub inc mov flds sbb scas or add xlat jo movsl (bad) hlt push add add jbe mov push loop push int clc lcall or das cmp stos das mov mov or scas fsubrs jbe (bad) test adc or adcw mov test scas adc sbb sahf fsubr xor mov loopne mov enter push push sbb inc (bad) dec add dec (bad) mov dec pfsub adc push mov lret xor or enter sbb negl call pop or cmp lock xor xchg dec popf out dec fs sbb jbe mov adc sysret lods dec loopne and movl adc cld in inc adc ja push xor in xchg in in adc mov push and mov lock xchg mov mov jnp mov into and (bad) and enter mov cmp mov push into push pop mov xlat in pop adc mov add push popa mov loope mov daa test lret or fwait pop mov add and enter cmp adc enter and cs out mov jb mov push pop sti mov cmp orb (bad) adc dec or mov add or mov pop mov adc int3 pop push mov in jne (bad) push push orl sbb inc test popf jne xor add mov cmp adc mov shrb mov add jle fldlg2 sub ret inc adc add sti int3 jmp insl mov adc icebp sub and pushl rcl push jb xlat pop dec or push mov or inc add mov xchg cmp sbbb sub aad ja inc adc dec into pop push dec mov das dec adcl add pushl add daa test arpl in scas push imul into in inc movsb and sbb out mov mov push or cmp aam into add test mov mov loopne movsl pusha or pop lock adc xchg loope sarl mov jge jns js cmp sbbb or adc and sub insl push cltd pop pushf pop rolb mov pop fsubs fwait (bad) rclb nop pop fcomps lret cmp lret pop adc insl mov mov add cmp int pusha or lcall (bad) add iret add cmpsb imul dec (bad) xor inc push fs lcall xor insb lcall ret imul sub fs xor js dec (bad) xor xchg mov dec rcl loop cli or cmpsb imul imul mov hlt das adc add imul imul dec (bad) xor dec pop fadds (bad) xor in push add xlat (bad) jne add negb add aas enter add add xor inc add add push jae adc xchg lret (bad) mov dec leave ret fdivl and pop enter daa cmovg sahf in pop jl daa lret push sub jns mov aaa xor pop xor popa scas add int3 mov mov notb (bad) pop rcrl xchg cmp jg pop bswap pop inc push mov sbb push push std mov sub outsl add push add add (bad) (bad) sti mov add cmp sub push pop pop or aaa xor push push pop push repz jne and add pusha push mov or adc jne iret add add add jne insb add subl jne jb fldcw scas pop imul pop pop inc dec dec inc inc dec pop dec inc inc push pop push inc dec inc inc push inc inc add dec decl add push push inc push push jg outsb je insl gs data16 gs outsl jb dec or adc pop repnz add dec inc stos dec dec inc mov pop (bad) adc push xor cmp sub jge notb imul jp push in out aaa daa aaa outsb outsl je add addr16 and popa arpl data16 outsl ja cmp nop lret outsb push outsl outsb aaa ss fistpll xchg fs jbe jb insl mov xor or mov in sub pop sub fldcw insl pop das pop push fsub pop outsb out or xor imull gs xor add jae sub test mov inc and gs inc repnz and mov lods je mov arpl rcll xor mov imul and add or popa insl and ss xchg dec adc scas shrl sub sub inc clc test addr16 jae (bad) shrw (bad) outsl add bound adc dec sub pusha cmp push imul outsb shufps mov jb daa or push inc push and push aam push mov cmp add mov ss sub insb ja ds jl sahf push xor dec popa ds into fimul ja jbe push mov xorps pop (bad) jae popa addr16 outsl js xor mov jae xor cs jae mov das add dec xchg jnp pop and jns xor fs push ljmp xor dec add lret bound mov dec outsl jbe dec push jo cmp or je fcompl pop outsb gs iret imul arpl gs jne jnp inc cmovp or push mov dec inc inc aaa jns movsl inc jnp aas cmp and sbb or jae imul or jne (bad) sbb dec add push jne jnp mov das daa and into cmp fiadd or sbb es cmp jnp scas (bad) mov jae movsl lods mov shr loope enter mov add pop pop js cwtl lcall pop mov or in out idivl adc push jb xor push cmp jbe stos jae lahf loopne into lods add mov sbb sbb jnp sbb mov orl movsl js and popa pop mov add add std fadd push pop roll rolb or adc sbb xor dec xor sub adc loopne js or pop xchg nop inc mov nop jge les mov adc flds xor je notb lret dec ss fdivl (bad) pusha movntps std inc notb push add xchg mov pop mov push push scas daa add and scas mov orb push inc xchg sub sub mov outsb ret fisttpl daa scas xchg jge jbe pop sbb stos pop sar or rorl or add mov sbb lret ror scas rorl daa clc loopne xor sbb imul lret pop and xor inc inc int3 hlt scas and push add nop sbb and mov cs inc sbb enter and inc xchg mov rorb cmpsl in rclb roll pop add add push inc push dec cs dec dec add and repnz repnz add aad les mov (bad) jne cs gs add dec gs gs ficom adc add loopne add aas pop movsl inc inc add xchg fistp sub pop adc loope (bad) xor roll mov dec (bad) xor insb pusha push inc cmp lcall loopne in lcall mov mov jne imul jb jae lcall arpl adc jg outsl addr16 and or jbe gs dec cmc xchg sub add push push call aad jns outsl outsl imul jae pop idivb arpl jne je or sbb jae outsl jb cmp pop lods sbb cld (bad) jns or lahf fwait int cmp js xor sub or mov and popa ret mov and gs or jmp fistl or ja gs cmc inc stos inc fcomps pop inc jne jb inc insl pop pop push push jae pop outsb fwait mov int dec add divb out xor push xor xor pop mov add dec add pop pop and add (bad) fild daa out dec cld xor je nop xchg mov scas mov (bad) ljmp lods stos stos mov push mov push fwait push push dec aas in aas fdivs insb inc jae cmpsb add pop roll mov inc (bad) ja in dec pop test pop (bad) xor sbb imul hlt sub lock cmp pop repnz aas sahf xchg stos nop mov (bad) je fstl jge dec insl xor or fnsave repz add or dec repnz clc and dec pop push dec in int dec or sub pop mov push mov enter mov mov mov dec add add push xchg push push mov pop insb stos dec nop out inc test mov lods lods mov and rcrl adc mov daa or xchg mov adc pop mov mov loopne pop adc inc xchg mov xchg lahf jnp in or leave in mov mov mov mov mov inc repnz cmp mov or (bad) (bad) in pop or insb mov int3 insb int3 adc outsb mov mov dec dec call inc jnp mov inc push insb inc mov insb inc sti in scas jne push pop sub mov arpl mov ja jno add ja jl leave mov leave cmp xor test in stos in jecxz adc in adc mov xchg dec (bad) mov outsb jmp mov js enter sub insl pop inc xchg dec cmp call jnp ret les pop mov jmp rorl pop ds mov push mov cvtdq2ps test std mov fdivl (bad) cmp and push out sbb add dec fst test js sub mov jmp pop fnsave xor into (bad) xchg jne inc sub lret cmp xor jae or mov mov ja sahf push push sahf push dec dec xlat into pop xchg out pop inc mov stc or push int3 ret pop add fwait sub fwait push flds pop or jns mov cmp enter shr or imul mov sti jae xor push test mov mov lret nop subb xlat out sbb push ss mov das adc mov cmpsl inc mov gs (bad) cmp mov xchg imul pop inc push in xchg mov xchg mov scas loope jecxz mov cwtl push jl ret insl xchg rdtsc sahf cwtl dec adc jg pop test lret cmc pop xchg ds push and mov mov outsl inc or idiv cmp mov lret sub popf cmp sbb mov mov dec adc ror orb add and dec sbb jae int push ja dec xchg push out fadds int dec cltd insl cmp xchg lcall mov jbe mov add nop and aaa fstpt jecxz xchg test dec (bad) push ror movb aaa adc dec pop rcrb ja push in push push or popa aas out xchg push fcomp lret mov inc add add sub fcmove xor popf int xor mov jl imul (bad) mov js aas push lcall sub push xchg jbe pop fnstenv cmpsb mov dec pop xor jmp push pop shr push mov daa pusha loopne fs mov jbe push mov bound pop push push scas shlb inc lahf and adc dec push jb pop lea mov movsb adc addl dec test dec arpl es cwtl push sbb in xchg dec xchg dec push test cmp lcall sti xchg jns aas xor imul dec pop mov or mov mov mov or cmp xchg dec gs jo pop insb xor push dec pop push mov loope dec je inc nop enter in test test pushf adc hlt adc mov add jmp adc das insl idivl adc gs js arpl jg xchg leave mov pop aam cmc mov lret add imull dec adc in je popa adc lcall insb xchg mov cltd xor mov pusha jmp dec xor xchg mov pop dec dec mov outsb in andb xor add adc (bad) imul mov invlpg xor fistp mov cmp mov xor popa mov xchg cmp and pop pop xlat aam enter add cltd pushf stos add ja popa jo decl xor push insl add je xchg xor (bad) xor lret push dec mov cmp outsb xchg rcrl pushf je pop xor xor dec add push pop pop jnp out pop repnz sub inc insl adc pop jae andb mov test in dec lahf mov xchg push (bad) xchg xchg mov mov xchg stos aaa jp dec fwait xchg mov sti mov (bad) mov lods push mov cwtl mov pop mov xchg mov ficom test fisttpll dec xchg mov fsubs (bad) mov xchg jne insb fstpt adc push test lret pop jle jnp mov or mov add adc (bad) (bad) mov scas pop pushf nop fwait lods je scas mov lods xchg xchg lret push sti fisttp xorl loopne pop jbe or dec mov xor fnsave sahf pushf adc fsts addr16 mov shrl (bad) adc dec addr16 xchg mov addr16 mov pop sbb outsb (bad) dec shrl and shrb lock call add lcall mov lock je add jbe mov fwait nop mov jnp outsb out mov xchg mov add mov mov lods adc or sbb int das mov add pusha jge dec lcall mov jp sahf js js (bad) (bad) jmp jge jge jge jge jnp jnp jnp jnp jnp jnp jnp jnp jl jl (bad) (bad) (bad) call jl jl jl jl jno jno jno jno jb jb jb jb jb jb (bad) (bad) jmp jb jb jb jb jb jb jb jb jb jb jg jg icebp push inc dec pop nop jg sub lds outsl xchg int or or xor push pop mov int mov and arpl adc and jg (bad) mov push and fs mov sbb repz ja fdivs add jl repnz pushf xchg js clc aaa fistpll sbb fildl xor stos jns popa out out aaa push imul addl inc lods call or pop (bad) or jbe pop in fiadd pop add mov int sbb sub pop push add push push push sub dec movsb cs in or nop jmp inc mov jb,pn adc push ss repnz jnp,pn mov xor call sub cmp mov in mov mov push jne push push mov mov push jl jnp adc les sarl pop push pushf dec or add mov int3 rorl or add call test lret xchg leave (bad) fisttpll mov push les cmp push mov sub push mov add imul push call divl push dec sbb jecxz pop int pop jne push addr16 cmp ret push call lods add ffree pop push cs outsb mov and cmp mov mov imul and sub xor adc dec dec push mov mov mov dec sti call pop push inc xor and shrl daa popa sub inc mov in ss or add dec scas fldln2 sbb or arpl adc or jne adc push sbb sbb jmp aas xor je xor adc aaa push sub cmp cmpsl fnstcw ds add shrb inc push inc pop inc and in sub lret shrb in cs and push cmp push mov inc mov mov or xor mov jle push push call mov push mov pop sub rcr je and call pop and push call fcomps in jle mov push pop gs mov das and add mov aas fldt and pop jno push sahf out adc add sbb add inc mov insb das mov xor sbb test push push call push mov push cmp inc scas inc inc inc xchg test in dec xchg sti xor inc cmp fsub add mov mov insb in sbb int3 int3 push inc or insb addr16 push push inc xor jno sub jae jnp int3 pop inc push daa or add pushf (bad) insl (bad) and ljmp test addl adc sub mov mov inc lds cli xor stos pop ret inc push lock jo or test mov insb inc push push fcmovu sbb add dec aad push push outsb shrb sub dec jg jnp test dec or xchg mov sti aad rclb or mov and sub xor aaa mov mov adc sub mov jge pop dec adc icebp push cmp pop or hlt push push out cs xchg (bad) pop je mov add mov pop push add cwtl dec cmp sub xor mov sbb js adc (bad) push adc arpl inc rcll adc push xchg lea fisttpl xchg cmp test (bad) add cmp adc enter inc mov dec or enter add je cmpb push dec dec test ja xlat insb push sub inc lea push cltd sub (bad) ja pop pop xchg dec push ror scas jl cmp xor jno and push and sti imul or mov jmp pop jae xor or jbe mov or cmpb stos jb adc pop xchg pop out inc sar call or sub mov outsb subl das pop in div stc mov add dec insl incb out dec loopne jne iret in cmpsl clc jmp mov dec fdivl pop sub rorb mov mov pop inc cmp and push add pusha pop sub inc movb and js inc inc inc inc addb nop xchg cwtl pushf imul mov lcall adc (bad) and bound cmpsb imul cmpsb imul shll xor fistp mov or pop jae xchg loope push add mov fldcw mov cmpsb sbb js mov sbb cmp add pop push adc push gs outsb fs inc or push add inc add xchg fs push add push inc fisubrl movsl ljmp or cmp loopne sub (bad) xchg add mov cmp clc fisub sbb in mov outsl jae dec popa insb push mov xor sbb popa inc mov mov sub leave popa outsb or insl and cld out outsb dec inc push dec inc dec fstp mov (bad) lret pop push (bad) jb sahf add mov cmp imul push mov cmp xor imul cs mov adc fs jo out fadds pop movsl outsb jbe outsb insl sub packuswb popa adc addr16 mov xor scas insl out rcrb jae jae addr16 sub push (bad) imul lock push outsl insl fwait movq cmp or xor je mov adc insb data16 fnstenv pop jmp sbb and dec in mov arpl jne and sbb add sub outsb xchg bound add add test sbb add cmp add lret pusha ljmp add xchg inc stos insl loop cmc insl jo push and push (bad) (bad) movsl sbb xchg ja,pn mov int3 hlt js jae inc pcmpgtw imul mov xor push add and mov out pop movsb imul jb clc sub push push je je test ss mov mov inc dec push repz sub mov es ss dec pop xchg dec xchg mov test add push pusha sub xchg cmp xchg cmp xor dec add dec enter adc add adc orb push xchg mov lods loop fldl pop cs jae jmp push add add add add lcall push sbb sbb and cmp femms repnz add pop and and inc pusha orl push pop orl jnp pop insl and je and jb or xorb enter test shrl sahf mov subl lahf into pop call or pop add (bad) or nop inc lea mov fs push (bad) nop xchg inc push fs xchg xchg add push popa add push (bad) (bad) je aaa lret in inc mov (bad) xor or cmp or fnstenvs call imul je mov les (bad) xor mov movsb jp cld add pop incl stos add test xchg lock icebp mov lods inc push mov adc loop aaa sub cmp pop add test push adc dec add jnp pop add inc add sub or movsb addr16 or pusha (bad) jns outsb cmpsb fild mov movsl sbbl in adc icebp shll pop sbb sbb inc mov inc inc (bad) out push mov iret mov in call jge jle (bad) push add pop pop fisubrl xor jg rcr fsubp stc cmp jle xor loop xchg fadd xlat add xor (bad) xor enter xlat xor (bad) mov pushf nop mov dec (bad) xor jl je insb push fs pop pop push (bad) xor rcll inc cmp xor aaa dec sub add adc lcall loopne push gs mov xor cmp in sbb jg sub arpl hlt lock scas push push cs popl push inc shr xchg lods xchg (bad) xlat sbb enter cmp dec (bad) xor pop js mov repz xor add (bad) xor ja add xchg mov pop ss (bad) repnz das dec inc cmp enter push cmc daa in and inc inc pop insb outsl imul addb in test aaa dec addr16 and incl je outsl pop jb outsb mov add pop outsw sbb add sub push lock enter outsl fs fldt cwtl aam push add shll mov pop int pop mov add inc add gs int mov push inc in pop push xchg jbe mov inc je jb jne jae xor sub adc xor xchg daa dec and lea dec das js push (bad) mov fild fcmovnu xchg mov push jg popa imul mov bound pop in push lock and ljmp push or xchg and mov ret mov jo sbb sub dec aad sub ss gs js push fwait inc inc insb jne push push neg mov aaa push je xor dec inc dec inc push or pop pop jb push les test stc je push outsb ja fs fiaddl push adc dec outsb (bad) mov out dec push dec aas push insb jae push popa mov dec xor lock push std push adc jne mov inc dec das rorl mov (bad) and jo ret les lcall and je pusha test adc mov adc or push (bad) or push mov xchg fwait rclb inc adc dec push jbe push imul out push outsl out inc jns jb add sbb adc xchg fwait mov or movl movsb sbb enter leavew addb push push arpl inc sbb push push pusha pop or adc movsb jne jo (bad) in icebp mov popa sub sarl inc jnp mov jns mov lcall mulb mov push jecxz jae cmp cmp push or sub (bad) push mov pop jp xchg cmp cmp push repnz cmp fdivs dec fildll gs sbb pop imul inc rclb lret dec in push add adc insb movsl rcrl pop push push inc push inc xchg adc insl movsl xor add test mov xor cmc mov mov mov and add aam add int pushf dec inc add addb mov xchg aaa adc inc ss lea je and xchg ja add push pop and add incl add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add mov add add jo add jo add jo add jo add jo add add add jo add add add add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add xor xor fs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs insb outsl jae dec gs add test add add add xor sub add add (bad) pop test add xor xor or xchg (bad) or xor or push add (bad) aaa add add pop xor xor or push add (bad) aaa add wrmsr and and cmp cmp cmp dec add jae outsl add add add add add xor xor or xchg (bad) or add fisub push xchg inc adc jle dec adc adc add (bad) add in adc sub cmp jnp int3 mov or xchg (bad) or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor or xchg (bad) or add orl leave pop pop sahf repnz fild fninit push scas push inc popl fsts iret out add and add js sahf xchg mov jge lods test daa int3 hlt dec (bad) jne sarb out dec inc lock or cwtl psubb movsb leave xchg mov and push movsl test cmp and xor jbe in cpuid jno dec gs add xor dec xchg or add addl add adc cmpsb sti cld or test das jl (bad) lock insb sub push int3 jae movsb rclb (bad) es jbe push adcl and imul sbb pop fcompl cltd in mov mov xor push icebp into clc call bound mov pushf leave cmp dec test fs jp (bad) add add add add cmp scas sahf hlt nop out mov pop aad or dec xchg or add push xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul xor pop or xor xor pop pop or xor xor xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor add add sub jb push imul and popa insl jo outsb and jb imul outsb gs sub sbbl (bad) or add orl les mov pop das dec xchg imul xor bound push xor ret sbb les divb fstps scas mov jbe icebp test imul dec dec sub pop in sub (bad) stos pop fxch inc repz stos (bad) mov xchg push (bad) out loopew ret sahf pusha cmp loop push mov jnp sub add (bad) xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor add adc add add xor xor push add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das je jae arpl arpl xor push add and or or or push add xor push add sgdtl incl add push (bad) xor push add adc xor xor xor add push push push inc xor or xchg (bad) or add (bad) add add dec enter in and ficomp mov add adcl sub pop pop popa mov add xchg xchg mov sbb jmp mov ss cwtl dec in mov inc sbb lea cli aad add xor mov daa (bad) repnz dec add dec cmpl push loopne loopne xchg movsb xchg sahf pop or loop mov pusha loope lods sub (bad) movsl dec fs sbb lods cmp aad and lcall inc or mov sbb mov jmp iret leave add mov ds jb mov sahf sub mov cmp dec xchg add stc pop push hlt sbb sti cmc lods xchg mov push andb sub add jmp js roll pop mov xor add add adc sbb inc neg insl dec or push or xchg (bad) or add orl push adc pop inc xor push add adc gs gs and jo xor adc add pop adc inc jne bound jbe insb insb xor xor or push push push xor push add adc push and jb imul outsl outsb xor xor add push push push and gs popa insl jo outsb and xor pop or xor xor xor xor or xor xor xor xor or or add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul xor push or xchg (bad) or add (bad) add add (bad) add add lret int3 int scas or lods xchg mov icebp ffreep movswl mov mov test mov mov imul sahf movswl in js ja jle cmp xchg scas or xchg lret sub mov pop pop sbb lahf cli das imul mull add jg push jecxz pusha in inc sbb mov mov xchg add and xor push sub xchg adc das stos out ret sub mov xchg sbbl jne cmp xchg adc push rorl (bad) inc dec fnstsw jl ds rcrl js lahf xor icebp out sbb les pop mov cmc out jl jge bound (bad) cmc dec or shlb push test int mov out mov fldenv adc mov sarl mov fdivs xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push add adc add add xor add incl add xor add pop add xor xor mov xor je cmp das arpl jbe,pn jb jae outsb arpl das push push push imul jo outsb addr16 inc arpl xor push add and push or push add xor push add sgdtl incl add add xor add adc xor xor push add adc push inc xor xor sub xor dec xchg or add addl sbb mov sub (bad) sbb int mov fisttp sub adc add or add mov leave xchg dec lcall aaa and xor mov call push xchg dec and test mov inc repz out fstps mov popf mov loope (bad) mov iret or lock (bad) sub cmp sbb daa idivl dec xor add mov add jle leave pop or arpl cltd add fcmove out xor dec xchg or add xorl push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp xor pop or xor xor xor xor pop pop or xor xor cmpsl xor xor push add push adc dec push xor xor add or add insb xor xor push add pop adc inc popa outsb outsb popa insl xor xor push add or dec inc pop dec dec and jb outsl jb je outsl outsb xor xor add or xor je insb and and popa jae and and jb jae data16 push outsl data16 popa jb and insb imul jbe xor xor push add add dec inc pop dec dec and jb outsl jb je outsl outsb xor or xchg (bad) or add orl mov push out jae inc jg mov dec js into fsub mov leave adc pop lgs idivl dec pop xlat insl mov (bad) pusha fs ss cli pop (bad) cmp std pusha sbb and cs add das (bad) push outsl dec add mov out pop mov dec xor pop dec das outsl int ja (bad) push or xor push enter mov jb cli add int3 mov add add add (bad) add or add adc xor xor push add sgdtl incl add pop xorb push add pop add xor xor mov xor je cmp das arpl xor sub insb jbe,pn jb jae outsb arpl das inc push inc xor sub insb xor push sbb cmp cmp or dec add pop add sub sub or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add and push or push add xor or push add add xor and or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push or push add xchg push das das arpl xor sub popa jbe,pn jb jae outsb arpl das inc push inc xor sub jb pop push add and xor adcb imul xchg pop or mov push or dec add add add add xor push or push add (bad) aaa add sbb xor add add add xor dec xchg or add (bad) add add pop arpl test mov xchg in pop repnz popf dec and push inc push outsb push movl jge dec cmp hlt loope sahf xchg dec pop add mov (bad) mov or cmp dec xchg fcoml dec mov xchg popl jae je in movb lahf daa push (bad) iret jge xor sbb cmp lcall mov sub sbb std jp mov adc adcb lods (bad) xor inc jmp sub cs cmpsb xchg pushf sbb dec add jbe xchg mov icebp out cli and jge mov popa inc (bad) (bad) mov aas sub jecxz push dec je out enter and inc mov scas and jnp (bad) out add pop popa (bad) imul (bad) add xor add add adc es cs pop movaps xor dec xchg or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp xor push or xchg (bad) or add (bad) add add (bad) add add addr16 dec outsl push pop jl leave pop xchg jno mov mov and dec sti shlb mov cmp pop or cld adc pop mov and jnp hlt add into mov daa dec push in andl adc adc xor sub inc mov mov dec mov push nop loope negb data16 mov jns stos xor sahf xlat stos adc test xor adc push mov loopne sbb add mov pop mov adc xor dec cmpsl into leave pop and outsb jl mov xchg mov mov sub and in pusha js jnp cmp or or inc and add add add (bad) add xor push add adc add add xor add incl add xor add and xor gs or dec add pop add push xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push or push add xor sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add sgdtl incl add add xor or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul sbb adc or push add push or push add xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor arpl xor push add adc xor movsb push xor sbb sbb add add adc popa jae xor xor xor sub xor push add add xchg shrb es mov sub mov push or xchg (bad) or add addl mov test (bad) xor nop cmp inc mull in jae add add pushf mov jmp lret jb push mov adc subl in push push aaa xor movsl sub sbb mov cli addr16 gs jp cmp adc js jbe xrelease punpcklbw mov popf (bad) mov (bad) sbb and dec movsl cmp fiadd push pop rdtsc (bad) add add add or or or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor push add add daa push gs push imul jae and and fs outsb imul cmp add jle leave pop or arpl cltd add fcmove out xor or xchg (bad) or mov push or xchg (bad) or or or push add (bad) aaa add add sbb or push add (bad) aaa add or push xor or push add (bad) aaa add adc sub add add adc inc dec jae,pt shl (bad) mov fbstp push add (bad) aaa add or sub mov inc add add sbb jo das das ja ja outsb gs outsb arpl imul push or xchg (bad) or add adcb pop addr16 mov push call jge mov mov outsl mov rcll push je lods mov fild movsl aad mov jo xor xchg lods data16 pop mov inc jbe lods popf aam into sub test loopne mov xchg xor and pop push cltd mov jbe jge push dec xor xchg sti ss or push leave add inc mov (bad) add or xchg (bad) or (bad) add add add xor push xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor push add add and jb push imul and popa insl jo outsb and jb imul add cmp scas sahf hlt nop out mov pop aad or add sbb sbb or xchg (bad) or or or xchg (bad) or sbb or xchg (bad) or movhps xor xor cmp xor and or xchg (bad) or push add jo mulb mov mov mov mov or dec xchg or add addb and or and xchg idivl push test mov fwait adc mov adc mov loope xchg aaa pop movsl inc (bad) scas adc dec aad movsb pusha fs xchg adc ror ror sti pop das mov pop xchg repz es jmp xchg xchg fwait or std sub push add mov in mov mov cld hlt mov outsl (bad) out incl add test pop push push xor push push push add (bad) fbstp push call mov cmp mov je addr16 push pusha fdivrs lea movb jmp add stos stos pop xor lods and push stos mov or jb ljmp mov repnz not dec cmp mov mov adc sbb and xchg dec mov sti mov push dec push push lea push mov outsl fwait mov sarb and jbe mov incl push add adc add adc mov in aaa adc jo xor sub pop adc add adc or mov (bad) mov popa adc mov cmp pop add out mov push push add mov jge push push push adc add or cs fistp pop sub jne neg mov sbb mov mov add cmpw pop imul sbb fist cmpl out push jo bound push push pop clc and (bad) je or mov mov push jo xchg xor push sub fdivrp scas adc lea cmp jne mov mov ja jl push sbb divl mov lods (bad) fnsave sub jne pop push adc faddl pop pop and div pop pop add or sbb cmp push fldt nop add in mov mov je lea mov test or je dec mov mov testb or (bad) and add or pop inc push iret or cmp mov out jmp mov sarb lret inc dec sbb sbb fidivl push adc rcl mov or vcmpsd int (bad) aas fwait aam mov cmp ja cmp jae sbb (bad) fcoms or mov push mov shr rep mov aaa and rep js mov pop movb dec imul push xchg xor sbb and adc jnp std data16 roll dec add xor add loope push push push nop adc jnp push inc fcmovne je mov lret je cmp aaa sbb push cmp mov dec pop mov lcall or xor test frstor jne cs cmp cmp je mov insl movsl adc scas or pop sbb inc add fmuls frstor xchg je iret jae popa xor sbb push mov pop mov and or cmp jae sbb jno sub inc or sbb mov sub lock loope sar lahf adc cmpl popa sti out mov or fdivs mov adc mov jmp sub sar add (bad) mov mov fist gs mov mov push js sahf mov lock mov aaa rcr das or adc jne fwait mov mov jbe cmp cli sub and sub sub jne push insl cld dec pop rol loop lea outsl or and lahf push cmp push push pop dec lret mov (bad) and sub movsb adc fldl mov test mov push fldt jne aam lock adc mov or and or or in repnz pop pop push pop mov sbb (bad) sub sar rorl add mov xor es mov adc repnz mov ficoml sub lds cmp sbb and mov (bad) pusha popf push sub fidivl jae les pop sub roll idivl cmc pop lods repz and or in fisttpl pop mov mov or addb into mov jbe out out cmp lods je push push insb ret sahf lds sti sbb fidiv jo sub fmuls enter out pop jmp je mov xlat lock mov sub pop sbb pop enter pop adcl call aam mov cmp jae out inc or jecxz outsl fsubrs fidivr lret jae fnstcw out sar (bad) roll movsl inc test add jnp imul sub or sbb ret cmp sub clc test jbe cli sub add push cwtl cmp in ret repnz jne sub das int movsl idiv fsubl push test decb int3 dec or dec inc dec es fnstcw cmp int3 adc push lcall icebp mov jbe imul insb mov xlat cs js (bad) jae inc mov inc ss inc dec xor aas fdivs popf aad adc jnp jb adc sbb inc out jbe ret shrl cmp and push mov pop jne imul insb nop cltd mov adc cmp orl rol loopne sbb inc inc pop daa jnp push mov (bad) fcomps in inc push mov sbb mov movb sub mov lock call mov sbb cld sub mov mov cmp and sbb mov fwait mov dec mov inc or jbe jge das or jbe mov enter outsl rcr lds sub jnp scas jne or cmp mov xor sub push dec fildl dec cltd jae push xor insb cmp pop call adc cmpsb negb adc sbb cmp pop mov mov and rol mulb in icebp ret (bad) and cwtl xchg sub test inc mov add push cmp cmp push test xchg lock rclb mov in outsb dec sbb in je in and arpl xor ljmp push pop and hlt (bad) (bad) sbb jge dec or decl jne cmp gs mov (bad) jbe (bad) fwait jle mov movb mov xchg xchg push pop ficom or mov jmp test das adc movsl push (bad) fbstp cmp jne je (bad) imul mov dec push pop mov cmpsb mov pop mov mov mov idivl inc sbb cmpsb dec lret adc das or (bad) (bad) or je stos test lods je xchg rclb icebp and jbe sub cmp xchg test lods test pushf pop push jbe sarl xor movl add or adc pop sbb das mov push in xor imulb add call cli inc lea push int3 xor push xlat sahf add mov lcall iret ljmp (bad) push lock and inc lods (bad) xor inc inc mov (bad) fdivr push add push outsb movw mov insb adc imul subps xor lea fistl push push xor fucom fiadd les dec enter outsb mov ljmp stos xchg xchg jge push or inc les stc imul adc xchg push lret cmpsb je or int mov rorl push sbb pop jmp inc mov or in pusha aaa mov popl movsb mov xor out sbb jae mov adc lret mov mov int3 (bad) mov (bad) or mov gs fsts pop jecxz pop mov mov lahf fiaddl inc or pop jl inc pop xchg add xchg or cmpsb je push rcrl mov mov sbb jo lret push pop cmpsl fmull and add loopne push mov fdivs xor add adc push fistpl fisttpl push mov loop add jo jno daa mov sbb sub js mov fisubl adc dec shr ljmp push imul outsb test xchg push (bad) mov sbb pusha adc or cmp cmp add push fidivrl mov mov sub (bad) (bad) neg sbb sbb add loope (bad) aad dec xchg jo rcr pop mov ret jmp pop xchg or adc jne adc add jne pop or add mov cmp add add imul int rclb fisttpll and fucomi xor sbb and pop js xor adc mov adc jnp mov cmp adc repz daa mov lods add push push shlb mov fldt imul addps sub jne push roll push mov ret sbb aaa jle pop ficom inc mov push jmp and inc pop pushf (bad) sti lods mov pop push push and mov fsubl sbb push mov cmp inc sub jg adc cmp int3 (bad) and test loop or sub data16 mov lcall sub mov sub sub jo sbb mov sub mov loope mov or or ret cmpsb xor leave pop addb ds push adc sub cmp (bad) mov xchg sbb pop lahf sub xor xor jae jo xchg (bad) sbb (bad) out fidivl jne push jmp push inc mov jbe addl cmp jmp adc lods punpcklwd ret mov cmp mov push push add js xchg add shl das jo and cwtl dec push out insb insl arpl push inc push sbb push mov sbb into push bound sbb adc xchg fs sbb sbb fisubl push push mov into push dec cmp xor inc push iret jno fisttpl add sbb push in mov or push mov push or das pop (bad) into inc in addb sub dec mov push movsl mov pop (bad) notb je pop pusha add cmpsl and push (bad) cmp lret addl mov (bad) and cmp insl jcxz fbstp cmp movsb xchg cmp sub or adc lds popa nop xchg add out jo shlb sbb adc dec push mov inc insb push test mov gs ss adc and and clc jmp push jo jne adc test xor ret add sub jno cld add je mov inc into and xchg mov push mov out fstpl adc jl mov jle push xor sub scas cmp add push sarb jb sbb mov and repnz js jle pop sbbl je mov (bad) lock mov xor jg push into scas and dec sbb sub push test xchg les sbb mov jne dec int3 push mov sub outsb or add inc or mov pop (bad) cld jmp sbb mov mov adc dec sub and test inc or dec push call es enter cmp pop add mov fcoml jmp add sbb loope in xchg fcmovb adc sbb push add sbb and and sub inc int popf push loope mov pop push dec lea cmp dec cmp sub or repz xor loop xlat xor in test adc or push popa push js rorb cmp (bad) mov fstpt or mov jg in or or jl jmp add movsb pusha xchg or in dec push lret ss adc add rcrl dec std icebp jmp lea and loopne push and adc test dec sbb or mov gs pop sbb and cmp push or push xchg cmp movsl push addr16 int addr16 dec xor out roll mov dec mov push fcom shlb fwait sub add dec je (bad) divb aad aad imul rolb popa into bound dec jle ss jmp cmpsl mov pop test ret inc not je push cmp and jecxz mov mov dec mov stos xor and xchg mov in psadbw mov loope push adc add daa or or jmp leave inc es fidiv cmp lret inc or lds int xor and add out mov push push push mov aaa push jp lret mov mov xchg sbb jne in xor or inc dec push xor dec popa ss daa cwtl push popa fmull xchg addl aas mov dec xor inc cmp jl jg xor push push inc add mov mov jne repnz mov mov es dec add test ret or sbb mov cmp mov lods mov stos pop dec faddl lcall cmp adc mov rcll in cmp (bad) js stos sub mov rorb ss scas or mov mov int (bad) push shr mov sub sti fcomps fildl or shr mov cmp mov ds dec and sbb adc test js lock dec adc (bad) mov push fisttp jge (bad) jle cmp jne sbb ss add xchg ljmp cmp lcall sbb pop pop mov fidivr and mov push and push test or add (bad) insl iret push shrl pop mov mov dec sub push and movl jmp push sbb scas mov dec inc sub das cmp mov repnz push inc jle in lods cmp xor dec in ss js (bad) xor sbb test jp adc jecxz or in or pop cmp sub pop test mov sub fiadd test data16 and arpl push mov arpl inc leave or or mov xor jb jp mov pushf cmpsl and jnp ret inc or movsb sbb lods popa mov movsb inc xchg lahf repz mov lea inc repnz fcmovne leave lea inc je add rcll test inc scas lret stos inc ds outsb test cmp je aas dec dec dec das test jmp aaa fmul iret loopne frstor inc jne push mov xlat lea pop mov add inc mov inc sbb (bad) lcall (bad) fnop pop cwtl mov pop ret pop mov cmp fimul push cmp cwtl insb push xor (bad) jecxz cmp scas and sub mov mov rcr adc sbb sub je aaa push lea repnz test insl jmp inc xor push mov cmp fistl xchg mov lea mov xchg jl add xlat je sub aaa jns xor jmp cmpsb dec in mov orl mov bound or sub cmp and sub cmpb jae or out fmuls mov aam mov or jge xlat lcall inc dec xor addl jo inc pusha out jae sub pop imul xlat jmp (bad) into mov fnsave rolb pusha clc ret cmp imul mov pop mov (bad) ret dec xor push idivl insl iret inc ja sahf mov or aas push mov xlat mov jb push or jle dec add add dec cmpsb xchg pop dec mov ljmp adc fiadd jmp test sub dec sub add imul lods cmp (bad) stc ss or jmp push cltd jae or push sbb add adc or or (bad) add add insb add daa aam imul cwtl scas daa or ja push add insb iret lods and sub jnp jg and cmp and push pop lock pop inc or xchg (bad) dec or or sbb cmp loope pushf add or jo jl sbb mov push push lds add adc adc dec mov mov inc add xor adc mov test daa mull sbb leave and push (bad) bound test jge pop ror push cmc lock inc cs outsb jl mov pop daa ficom mov push cmpsb ja adc mov cmpsb orl fstl jb push mov sbb add jge jp jg dec jg lea aam or popf sbb inc and popf fimull mov pop (bad) dec inc or mov ret loopne sub dec mov mov jge mov pop shr sbb mov pop pop push lock add or adc in sub xor mov lds imul mov xchg clc arpl dec mov xor add lahf sub cmp lret mov push aad pusha xchg test inc pop dec aaa and xor push (bad) mov or or jge mov push sbb insb fadds or mov or insb dec int jbe cmp inc or roll dec popa test popa test add push popf imul or dec pop inc push (bad) push rol nop nop pop sub and jno dec jns ss mov es mov ja mov adcl jo push push in ret into push scas adc xor das pop add ljmp pop add mov add lea pop or jns adc or pop or arpl or jnp push jns dec and push ficomp or cmp push ficomp cwtl adc dec inc scas mov or sub or notl out add pop je or xadd push das cltd mov dec pop add jo sysret mov subb xor sbb cmp fidivr out jne cmp or inc push test jbe arpl xor inc mov loope inc leave inc shll addb dec popa add or adc cmp sub and test stc hlt cmp sbb push adc pop shrb rolb imulb lods or pop iret push add nop call movsl cltd cmp mov jb js jmp jg js xor repz pop je sbb sbb and inc popa jae mov fsubl add inc mov sbb std jno dec adc (bad) cwtl outsl rorb js add mov add addr16 into ss data16 pop adc dec shrb pop sub add cld scas xor fisubr cmp lea cld (bad) les ret (bad) div and cmp inc xchg je or dec iret and mov clc dec loopne jmp xor orl add fsubp lods push jo dec je cmp mov mov mov pop jl add jg dec and mov sub jmp ret loope popl in fs fidiv lock jne fcoml cmp jno lcall fmull mov or adc or imul int3 int3 push inc xor pop inc xor testl mov mov hlt (bad) mov (bad) (bad) inc clc adc inc cld lea and mov sub or mov inc ja pushl push lea test pop pop inc or xor and push or loope xor ss fsubp mov add push or or sbb xor jmp mov mov imul aas pop push sub push mov push sbb add push and mov scas fidivr pop loop loopne mov lret ds xchg add repz arpl insl pop sti scas out cld jmp pop leave rcrl xchg or das inc inc jge cmp or aas add insb jb mov bound std inc fwait sbb pop cmp (bad) lds jae add lcall das mov inc adc adc cmp and in insl push adc add repnz lock roll sbb rcr inc cmp fisubl jbe xor pop push inc pop jge imul in test mov xorl cmpl outsb js add loope sbb scas sub out add pop shrl lock hlt clc cld cs ret ficomp insl clc popf fcomp sbb outsb dec and add mov aam or jmp mov roll pop dec int3 jge push xchg jo pop mov mov sbb fmul int3 data16 out mov fnstsw sub scas mov pop sti add dec add in adc adc outsl ret add int jge js push adc or sub mov and arpl dec je cmpsb loop sbb or push jnp mov pop dec (bad) xor imul mov mov outsb movsl loop dec adc add jl jle push or dec movsl xor jge mov cmpsb adc mov jmp pop jae cmp ja jbe inc out into xor repnz inc ja inc fildll ret int3 mov dec adc lds mov (bad) xor sbb js test (bad) sbb cmp jb inc jmp (bad) insl fadd mov jb loopne add pop test lcall nop pop mov cmpsb jmp jl mov mov mov mov add add pop mov int3 xor sub lret add cmpsb nop and pop bnd inc aas mov push or lcall hlt in pop in xor cmpsb fmull inc (bad) in call in in lock hlt mov (bad) xor clc cld in or sub or lock xor pusha adc mov insl nop popf or adc and pop mov insb mov lea or jg outsb jnp and std jecxz ja inc (bad) leave and mov out lea (bad) stc jmp xchg iret sub inc sub fmuls clc add insb scas and dec pop xchg mov pop and in adc sub daa and sub add dec (bad) jne je jl test pushf movsb mov xchg sbb imul imul movsb imul (bad) jne fadds call insb or mov xchg adcl rclb mov mov sti mov mov dec inc adc push in push repnz add cmp mov rol dec daa lahf mov xor push jg sub stc add mov lds enter outsl add outsl lock mov add lcall ret push mov jmp pop inc stos arpl (bad) adc or dec hlt add mov mov je mov pop push jle je mov or adc push or (bad) cmc rcrl adc jne lea fstp push decb je mov mov xor shrb incl jmp das xor ret je pop dec bound lods add or lea popa cmp paddsw (bad) mov (bad) mov and mov pop jge cmp or jle ss push into (bad) lock mov add and bound (bad) in adc clc mov faddp dec add inc (bad) push mov loopne push or or inc fldl push in cld push push leave xorl stos add lea inc outsl lods mov add loopne call rorl rclb sbb out inc adc xor mov in push add push xchg sarb insb in lock sbb lahf push and sub mov push pop (bad) jbe adc out xor pop shl movsl mov sub cmp jg lods and sbb dec add mov push std retw or call push seta adc in pusha ljmp push pop cli pop xor and mov or dec test mov dec dec mov adc dec dec fildl fstl push sub jbe mov xchg pop adc mov push add sbb dec push aad pop jb nop inc lods leave mov jo lds cmpsl pop mov push ret pop mov xchg jnp cwtl in inc mov movsb js dec int3 cs popf add xchg dec push cmp idivb fs out sub jae ret pop inc mov or loope push push es jb or pop pop ljmp mov mov loope fildll add loope add or and call add and sbb pop jecxz adc insl mov imul cld or pop icebp mov mov mov add mov pop sub sbb (bad) rclb inc mov fidivrl pushf testb (bad) mov inc das adc mov pushf push push jle outsb adc and fsubl xchg cwtl cwtl mov cmpsl cmpsb gs insl outsl sub imul lock out dec das and and mov pop sbb sbb je jge dec inc push add push xchg inc pop cmp icebp ret (bad) addr16 adc jp icebp push call cmp (bad) into xchg push pop in push xor sbb add mov popf jnp fcoms je fwait dec mov or mov pop push push cmp faddl lods ret xchg lods gs jb cmp mov int3 jae dec sarb leave sbb and je push loopne lcall cmpl fldcw fsts imul in adc lcall addl insl pusha sub js jbe jo imul and jg xchg push xlat sub push push fs in fidivrl pop sbb loopne mov ds xor addb mov in (bad) jl dec pop inc popa mov jl mov lock jne mov std bound jle jne or push mov insb lea pop xchg in fnstenv pop inc jo push adc pop add jns pop in push jns stc push stc add or fisttpl shll add lahf fimull enter mov sti dec cld out sbb xor jg imul cmp (bad) mov cmp add jnp jg inc lea add xchg call lea adc jle xchg pop pop xor ds mov scas clc jg cmp pop adc or addl sarl data16 jmp pusha in jp xor mov dec (bad) imul sub ret pop decl cmp sub mov push dec or mov pop adc dec inc lock div cmp inc push imul push or repnz mov and sub lock jae cmp lea cmp movl ss fsts insl jnp cmpb es lock mov mov push outsb jmp adcb (bad) adc test insl aaa cltd stos dec dec cmpb into mov dec aad adc je inc ds push or aam inc in testb mul fildl inc das push jnp pop or pop or mov inc (bad) cmp jbe mov push jge cmp add je inc jle cmp clc fistl inc cmc inc lock or add je scas sbb lock fidivrl cmp adc in jbe push push ss pop jmp test repnz or je xor fisubl pusha inc sbb jge add dec dec clc cmp inc push out push sub insb in mov add pop sub les mov push push in in rolb push mov pushl sbb orb out test jbe lock or adc and pop pop inc jl mov insb or jo movsl inc fimull push addr16 dec push jnp xchg (bad) icebp jne push les inc loopne dec inc xchg mov xor insb inc in aam test push lea sti iret xchg stos xchg mov lods or pushf js and xlat and cmpl cmpl mov mov add out je dec mov jg popf fdivr sub adc mov jb adc leave (bad) jae ret push cmp fildl (bad) or or push pusha jecxz pop jb adc testb inc cmp jbe pop pop es (bad) call jb cmp xchg pusha loope mov mov cmp jmp nop into mov aas sub dec jae ret xchg cmp add mov js mov add sti into or pop and pop lret sbb add cmp mov jle xor in fistp je (bad) fadds cmp add out fidivl jl adc loopne and das and sbb jecxz jmp push xchg cmp mov push sub sbb ret mov addr16 sub xchg test push je cmp retw inc sbb pop jle fldl mov inc push pop sarb rorl xor sub jecxz jne ret aam jne (bad) aas insl (bad) mov int fstpl loop out cs stc notb jne stos and sbb pop aam hlt (bad) dec add sbb je aas cmp dec xchg addr16 aad dec sub ljmp pop lret pminub push xor mov inc push push mov enter insb es push mov scas enter mov jl xchg inc popa or sarb and jp rorl xor inc fnstcw and inc push cmp push lret bnd inc sub cwtl cmp in mov pop adc xchg in cmp adc xor outsl xchg pushf pusha inc mov adc rcll shr pop push adc xchg les inc ljmp loopne and inc or xor xor jp fdivrp pop mov inc sarb push es xchg mov sbbl jb lcall inc clc stos pop aaa jno dec mov lea out cli adc or jle int3 das ja enter fdivrl shr popf pop mov jne enter das (bad) xchg pop pop jne jl and fs xor mov in and xchg or cmp fisub nop fsts inc push or push mov adc cmp xchg sbb cmp mov cmp nop and lret cld inc (bad) adc push lea lock mov (bad) dec out push insl mov in pop push dec arpl push pop jmp pop pop ret orl or inc cmp mov enter (bad) and add push jo stos sbb sub fbstp fcom adc dec inc push mov cmp insb xor cmp mov inc adc or cmc add fdivrs (bad) movsb outsl mov adc ja push mov sbb or fsubr cmp sub leave test insb add popw pop mov push push outsb or sbb jl dec (bad) (bad) push call or xchg push inc jae into sub and dec adc repz xchg dec mov fdivs add fs push push push aam pop loopne xor pop mov leave pop adc fstpl rolb ja sbb inc cmp push inc sub ja,pt ret inc adc adc enter dec cmpsb sbbl jle fildl jae mov shr mov js xchg cltd dec lods test aad loopne mov movzbl push adc and sub and sbb test mov cmp inc xor push inc aam jo addl push je cwtl mov adc jmp dec (bad) or push adc pop dec dec or leave and xor test sbb sbb sbb cmp icebp or push loopne loopne es repz rclb inc shll mov stc fbld push movzbl shl dec jo ret xchg fcoms cs test loope shll lcall lea and fs push sbb fadds inc lcall test or fnstenv rcrb jne or push (bad) jecxz push push mov mov pop xor or call incl xor add and outsl stos cmpl scas and inc xorb pop pop enter cmp je push insb shrb out cmp je mov imul jae mov aaa push std cld insb loope mov fdivr push push or enter inc xor fiadd mov push cmpl adc xor jne push movsb cmp pop and inc aaa mov cmpl adc iret inc stos jl fdivrl jmp sbb es pop pushl mov xor insb mov pusha call call in test cmp and lea pop call xor jp clc mov sbb ror push and adc mov out (bad) pop aam jle adc dec fistpl icebp js movsl adc sbb mov add inc ja pop fisubl add inc and mov (bad) ss jae loope lods call sub and push cmp fnsetpm(287 push stos push movd sahf jp pop cltd rolb cld adc les mov adc or mov (bad) scas data16 push hlt lock bound clc insl stos das adc mov inc or insl inc ds mov jg mov xor inc (bad) mov gs jle pop mov fmull mov mov fbstp fs fwait cmp je (bad) mov add cwtl loope imul sub xchg aad stos mov in mov test jb xchg outsb frstor mov cmp pop push das pop mov dec push or addr16 push add lea cwtl aad add std sbb mov inc jmp mov or pop sub testb pop je andb mov mov push mov or push and or xorl fbld popf xchg pop adc aad mov pop add data16 loopne lcall cmovle and mov mov sbb and or test adc insl cmp adc repz jge mov push fldl inc pop idivw or push je jbe sub out mov test decl inc loopne insb ficoml adcl jmp sbb or cltd adc cld (bad) stc add lea shlb push fildll out xchg add lods push pop loope pop add cmp addr16 mov mov jmp cli push mov (bad) or addb push ret jmp jb das jmp or add leave sub xor sbb mov or mov inc test pop in add fsts dec sbb add add cwtl jmp jl cs jnp adc in mov mov and add jg movsbl mov inc jo jmp je xchg dec add les push or jb adc adc sub xchg addl cmp mov clc dec sub push jns hlt cmp je dec pop dec dec je pop xchg or or xchg mov mov addb sti sub adc out int3 xchg pop iret insl jge outsb int3 mov push daa mov mov add orb pop aas push int3 popf in clc pop sarb int3 sub dec mov add je insb je ja jmp mov or hlt lods xor cmpb loopne inc xchg ds enter and add rcrb ret mulb jo fadds pushf enter xor add sbb jle fcoml push clc addr16 aas mov xchg add (bad) in repz scas loope sti pop call jo inc mov or push add mov xor (bad) cli mov lea sbb and or inc hlt dec sbb or addr16 adc xor lock out loope jnp inc jmp and add adc loopne or dec (bad) int in lret clc push int pop (bad) mov js js xor decb jnp xchg xchg push lock pinsrw sub pop (bad) outsb fisttp xchg je dec jge add out fldenv jg iret pop mov lock add push mov mov outsb aas mov sub cwtl int mov push divb or push in hlt or test rol adc (bad) mov push clc jle mov mul jbe or pop add push stc jnp int je dec hlt jmp ss add (bad) dec rcrb clc xchg sbb dec mov pushl inc push cld aas enter jno and pop and pop pop sbb or adc out add inc insb insb jle pop jns sub ret sub add popf push test ret test das aaa and out loop jecxz daa cmp rcl inc adc (bad) ss add icebp es stc pop jecxz,pn cmp test mov inc pop xchg icebp ljmp adc or jmp inc and cmp push cld push pop pop mov mov data16 in pusha xor shlb add jne cmpsl sbb jno or out xchg je cmp pop jmp cmp jge (bad) sbb (bad) rcrb orl shr and jmp add rcrb je loop sbb fdivl jae js rorb loopne fisubl xchg pop hlt in or pop mov gs jge pop jbe xor push sbb xor or sahf mov mov clc (bad) jg sbb lock loop (bad) cltd dec lock push repz sbb mov ret xor xchg sti cmp add hlt jae push sbb sub outsl push sbb xchg add stos sbb lcall shufps sbb adc lods enter add in es mov sub jmp je mov add fcomp xchg sub add sbb push outsb rolb pop adc sbb mov ljmp sub or add (bad) testb add (bad) cmp mov lea testl sbb lods inc adc xor fnstenv pop pop mov dec fcmovnu push add dec hlt sbb mov mov mov gs xor pop push lcall xor fldcw test bound aaa scas imul mov lcall inc aaa (bad) mov (bad) fdivs fimul stos loopne and pop sbbl ljmp call jecxz add lods aad add or sub jg and out mov cmp es xor int mov push inc sbb ss ret dec loop roll jb rolb or arpl lea sbb hlt pop jbe enter or and inc and cmp jb stc and sbb push mov and fldt cs add pop cmp xor jb pop lret sub imulb shlb sub mov or cmp lock inc imul add inc sub dec mov shrl cmc addb mov les inc cmp rorl cmpsb fildl je,pt jns dec dec adc push inc cltd insb nop pushf nop cmp cltd test adc loopne sbbb rclb xchg or leave pop cld dec loopne daa cmp insb jns call mov push movsl sub sub cmpsb (bad) xchg or jbe ds cli mov mov outsb test (bad) sbb or mov inc loop or jmp xchg ficoml add mov or jae cld fildl or (bad) jg lret sarl lea shl mov add fs and clc lahf xchg cmp cmp jl aas add jle cmp stc cmp out pop sbbl jno inc jle test cmp cmp out lea clc test stc push cmp pop push ljmp pop pop push call push push lcall pop sub fstl cld int3 data16 mov sub cmp imul pop mov lcall dec cmc out adc cmp or push cmp add sbb clc dec lods mov cmp jne dec inc pop cld ret push sarl jmp inc and jbe inc xlat mov inc or ja xor add jmp cld push lock ss std xor xchg clc push aad add lock lea and lea mov cli adcl xor shl scas adc mov daa mov pop inc ds and mov mov cmp das push cs outsl das push jmp add aaa jne pop cld mov mov js das add add dec lock sub js xor rorb aaa (bad) cmp cmp add push push lahf dec (bad) xor pop fisub push mov call xlat xchg daa and push push xor cmp mov push push mov int3 pop lds mov mov insb inc (bad) cld aaa (bad) mov incl ficompl inc cmp sub (bad) je push (bad) add lahf sti aaa push je add push inc inc or jmp or add sbb jmp push add fildl (bad) sbbl mov and or jne pop sbb mov incw scas mov loopne inc sub push mov enter sti pop mov incl (bad) sarb and inc jmp xchg sub outsb inc ret fcoml mov add (bad) jecxz jmp loopne or sbb sete ss fcmovnb mov dec out inc mov push pop inc lea jne andb sub mov mov mov je sub loop pop int or sbb inc add scas inc je lret push cwtl loope or movl and cmp dec mov mov (bad) shll shlb pop in dec jnp ret xor inc and inc repnz jbe outsl andl cmp jae mov or jne push repnz mov dec add insl inc add pop mov fs push rclb dec xchg or lds pushf stc mov daa pop out add add fiaddl aas ret jmp dec dec movsl test je pusha repz inc cmp dec fstpt movl movsl scas dec or add inc add cmp inc gs cmc faddl dec push adc sub pop push pop cs and mov sub lock orb data16 cs add and pop jmp sub inc sub mov imul jns cmp in or fadds pop lcall lahf lock jl cmp fs imul gs push cmp xorl aas jbe mov pusha or sti push dec inc mov shlb and xchg jp xchg mov mov rclb sub xor adc add cmp (bad) ljmp test cltd ffreep xchg mov in mov mov mov lcall idivl or test (bad) cmp decl ss das lock enter jmp ret dec popf (bad) cmc insl xor push cmpsl adc loop jle adc ds orb push or adcl add mov ret mov mov jnp jmp ljmp adc cmp inc lock mov dec sbb inc sbb pop push and imul push adc (bad) sti leave out pop xchg jle and cmpl fwait mov or or fcmovb lret in fs adc mov ja sbb xchg call lea cmp mov (bad) jmp or jg sub mov inc cmp jne inc push ds cmp int3 jns fcompl fs clc push fsubrs add push ds inc sbb cli xor xor add push or mov or xor arpl pop in mov jmp repnz insl fsub rorb jp sbb out inc xor imul jge push pop mov add jno dec add rcrb and roll xor inc mov xchg je jae fiadd inc fnstenv repnz mov push xchg sbb sub hlt or inc mov daa and sbb cmpsl and rorl call shlb xchg mov adc cmp mov jle out cmp insb aaa jmp jo adc pop push xlat push cli jne icebp xor or or lods pop pop movb jbe sti pop adc mov mov inc aam jbe sbb cmp mov clc or push cs testl push jb lods push fcomps out (bad) cmp push or sbb fdivr sbb lods jge jae push adc and daa push pop sbb adc inc insb adcl xor outsb inc pop cmpsb adc push popf mov mov push fisttpll aad cmp add andl loope push xor mov mov push xor add into rcrl push andb pop mov or push jbe bound and pop cmpsb adc dec inc add add inc fildl inc cld les mov sub out cmpsb iret imul gs movb fsubr out push dec jge test jl out mov lea mov hlt mov imul test pop or jle push sbbb cli aas jbe aas pop xchg mov dec mov mov xchg mov shr lea not and (bad) sub andl and lea and pushf mov les and pop add pop icebp push pop mov pop push adc add mov pop add adc (bad) mov or pop sarl sti stos jne jmp xchg hlt mov sub adc sti add mov cmp aas mov or roll cmp or aad adc cmp je arpl in jno inc cmp mov (bad) and fbstp dec add dec loopne fwait (bad) lds sbb mov push lret imul lret mov add cmpsb cmp hlt or jo push pop roll imul xchg pop xor cs popa pop sbb or add push mov je cs (bad) jae xor inc push pop jne mov insl inc lods or jmp and rclb push (bad) mov test cmp cld cmc lcall push push sub mov sub shl ljmp andb negb sub pop negb insb pop or push cmp sbbl insb and decb or and inc cmpsl or adc push loop js imul in adc adc inc add or add mov loopne enter add adc lea push clc jle stc sbb mov das cmp xchg pop dec insl or push and out jnp cmp jnp or adc xor lea sub shrl aad dec pop and and push or shll jge in das push outsb or out push add shr push xchg sub inc mov loopne out jae cmp sub decb iret sbb jl fistpl jb pop jne mov cmp es add pop and cmp mov mov aas adc jmp es cwtl mov or ds (bad) cmpl adc insl or outsb xor pop adc inc test mov pop sbb and sbb (bad) adc push cli (bad) push cld sub fxch push (bad) mov mov mov jo push mov sbb inc or clc (bad) add jne mov sub and or je mov stos push mov rcrl pop dec dec push into pop pop std push (bad) fs pop jl shl inc and and or push icebp lcall cmp jle pop pop cli mov dec and mov bound test add fwait imul repz add pop mov decb jne jns mov jmp dec adc xchg jo sub test sub mov cwtl sub mov add jp pop mov pop sarb mov or mov cli test and in jne push and dec movsl fwait gs decb jge rcll add into shr or or pusha mov (bad) jmp sub in fcmovnb and jnp mov lods push mov or prefetchnta cld lock in loop lock and adc cld clc in push rcrb jne,pt cmp in jne dec cmp pusha outsl adc call or fstp or xor outsl xor (bad) or push mov hlt shrl cmp or xor xor andl sub push ror push sbb rorl add rcrl test lds pop lods bound sub mov push add fcmovnb (bad) sbb mov inc ret aaa imul lods pop clc xor (bad) lods mov push sti test out inc ds mov mov addb dec cmpsb inc inc shll outsl sub pop (bad) mov lea orl in pmuludq cwtl ja xor cld lock push adc out push sub xchg fsubp adc lret jne sarb clc imul mov inc outsb cmc jo fs inc inc mov mov add fwait rorb push outsl aam inc mov add cltd ljmp and mov cld mov (bad) jnp lea sub lds ljmp (bad) dec cld dec cmp adc orl xchg rcrb dec or fldenv js xchg popl sbb aas adc push dec pop pop mov xor lret pop dec cmp push clc jo mov add and pop and nop into shr push dec or or rcr sub into add pushf mov jns sbb add inc xor (bad) cli pop push fcmovnu es sbb ror aas or dec dec pop dec int sub pop pop pop pop call xor mov pop and iret out (bad) or mov and dec test xor popf and xchg inc mov mov inc jno adc (bad) pusha jb insl jb jge es sub dec ss xor adc adc jbe push sarl mov mov imul and inc cmp jle or dec inc dec and jbe int3 push and ja ja jno mov (bad) (bad) mov mov push add pop adcl sub repnz push psrad into pmulhw jns or sbb addl mov cmc push mov cltd or mov and sbb mov cmpsl out lods or sub (bad) ja sub push test inc lods data16 test daa add inc dec popa aad scas mov sub push jno (bad) cmc cmp lods sbb pop jmp cwtl out inc pop or mov or xchg mov pop fcmovnbe inc dec dec ljmp ljmp mov std adc popf ret rorl mov mov std jmp mov jmp push cmpl cmp jae orb pop add pop movl jmp insl mov mov (bad) adc mov stos je sub pop and cmpsb call data16 xor xor mov or push mov loope test push pop nop or xor push xchg pop ljmp mov pusha jl lock push aas mov inc sbb push test incl (bad) mov cwtl mov je rolb and mov sub jge and test pop loop sub jns dec ret das fidivr lea pop out inc push cli jbe (bad) (bad) pop xor jae in arpl cmp subl mov cmc (bad) inc jbe add jb push inc mov (bad) pop sbb push mov sub fcoml repnz dec sub push enterw (bad) loopne lock push sub pop lret lock mov or fldt dec test stc or enter movzbl add dec inc addr16 and cmp push or gs push jge and jo push pop fwait in push aaa ss push mov lahf add imul ja (bad) sub sub jp jbe add cmp (bad) ja push out jae mov int lret jl cmp loop mov es es mov stos jne push add mov daa je aaa jb add shll test and inc jae mov jae xor sub mov cmpl xor fnstenv inc cmp mov ss or pop mov inc sbb pop push (bad) (bad) inc mov or aas insl mov jmp sbb xchg in sbb sub sub (bad) out pop mov pop add jle add jge mov divb rolb push or push push mov mov jl and push pop cmpsb mov dec pop jle mov orb fs or cld mov adc or jp xchg push jle inc (bad) fnsave cmp jae cmp sbb loope lea and roll adc sub sub gs (bad) arpl mov fisubr (bad) je push mov push sbb jne sbb imul push and sub mov xorl jns repz data16 sub sbb push cld add mov mulb add sub or aam push mov inc jno mov add cmpb iret xchg mov jae sbb jmp cmpb push loope rolb aas push jae cmp out mov or push mov cltd fnsave push lahf repz mov mov jle mov fstpt xor lahf mov pop and (bad) sub push cwtl test xor jns mov inc push scas mov int testb jmp aaa push ret add jp push mov xor push js and and cmp push inc or js nop jecxz aas rcrb call sbb call out pusha mov pusha jae adc add lea rclb jmp push sub hlt or sub jne mov xor ja jmp ret outsb and sub jle xor push gs sub cmp pop inc inc stos arpl subb add jne lods adc jno or adc add inc mov push adc xorl loop adc mov cmp add int3 push adc or adc fs popa cmpsb fidivrl mul sbb and add pop inc add cmp iret push (bad) cmc notb lahf xor mov fidiv or lods loop in in sbb jne adc and and (bad) scas sbb lcall sub cmpsl inc ret or addr16 outsl loope add jmp add pop xor lret push cld (bad) rorl mov lods push sbb loopne mov inc cmp popa push hlt andnps (bad) xor xchg inc push xchg inc (bad) mov pushf rorb loopne add or mov mov mov push pushf add test mov adc or lock mov fdivrl (bad) nop xchg push lea lea cmp push enter mov in push lea cmp lsl adc and xor (bad) out test pusha (bad) pop pusha add push (bad) daa and add push mov gs or mov pop and mov sbbl mov dec je sbb jne sub add adc das fstpt gs stc je cmp fwait movsb pop add insb sbb lods imul mov std adc sbb scas mov rcll adc test xchg fidiv sub cltd push fstps pop add lods mov (bad) cmp sbb into fimull push add mov xor xchg pop mov jne mov aas push sub jg addl dec add add jmp imulb call movhps pop xchg mov pop mov inc sbb mov loop ret add inc push jne pop xor sub mov ror cmp lea cld sub xor add fsubs into adc leave mov pop adc push pop ret or mov dec xor cld ljmp mov push std jecxz mov jg scas flds lret mov push repz mov ja cmp ja decb shrl pop add sbb sahf mov or lea add lock test push adc pop and cmp or mov jb sbb jns jmp add jmp notb add or sbb mov and out nop xor mov repz add loope xor xor fcomps adc cmp data16 xor or mov mov movsb jecxz lods push ret inc lods ret jae stos add rcl mov push movsl dec inc mov loopne adc std cmc xor sub rep cmp and cmp jb push jl (bad) cwtl cmp sbb or lea push fsts jne mov mov push mov add sbb in ja call loope negl inc jno inc mov mov and xor imul sbb mov sbb pop push into ret je nop lea popa inc push shrl nop jne push int3 adc into xor xor mov or pop sbb imul mov in ss inc mov outsl pop nop orb inc mov inc mov jmp add lret (bad) xchg out add sbb xchg outsb in dec (bad) pop imul fsts cmp inc lods lds jnp cwtl pop jne sub sub test sbb repnz pop adc dec (bad) fdivl pop inc sahf into and test pop pop andb mov add nop pop cmpl adc pop push scas jge lock lret push inc aas ja dec cmp xchg movb lea orb sbb add lea pop hlt push (bad) int lods test cmpb pop lock add aas push add notl mov sub decl (bad) stc or movb inc mov add sub lret or addb hlt xchg ficomp push jno xor or dec inc fadds icebp fstpt or fs inc adc (bad) (bad) xlat nop mov add push sub push xor (bad) lea push into pop push movsb push es pop (bad) stos add mov cmp loopne xchg and push mov cwtl xor sbb jl addb push fucomi shlb lods pop aad cld stc jne or orl movl xor or inc adc add cmp push mov pop cmp xchg scas ss sbb sub mov adcl sub or pop jb aas mov (bad) jge mov jg fstpt cmc pop mov and push mov fcomps push sbb pop inc insl shrb xchg pop aam in mov shlb cmp insl jl sbb loopne gs test out (bad) xor cltd add outsl mov adc jg imul inc add inc testl cmpb mov dec in (bad) aaa mov pop cmp sbb cmpsb jno push (bad) fsubs leave jl in pusha adc andl and push mov add pop xchg mov movsl mov pushf cmp push int dec aaa push xlat push mov xchg imul (bad) or pop add sub adc adcb or jne data16 jmp add mov xchg push in pop inc mov xor sbb in push test sub lret sub pop das mov xchg (bad) ficompl or mov shlb (bad) fmuls mov dec pop or shrl or pop jmp jmp rcr or jne imul test outsl dec lock inc push in out push fisttpll cmp ja pop cmp jbe dec dec xchg popf sub jb outsl sbb outsb push outsb pop scas je (bad) add outsb sbb outsb xor adc add imul or mov sub or (bad) mov jl fdivrs mov test mov mov cmc and lret inc out and mov roll push aam sub sub sbb outsb add adc mov dec mov je sub lea inc cmp mov push stos movb pop jbe (bad) and inc andl (bad) dec jbe test dec mov in stos mov jmp jge insl xchg (bad) out cmpsl mov mov adc mov cmp ja sbb pop out pop push dec mov xor shrb test mov orb mov out movsl mov mov inc inc add cmc inc inc cmpb aam test pop mov lock add mov (bad) adc lea shld inc mull mov pusha idivb add mov adcl adc pop mov stos add push mov shl sti ucomiss mov push cmp pop pop mov (bad) (bad) mov test cmp repnz call std mov jne inc (bad) xchg inc nopl movsb mov call shll mov int add push and rcrb clc ficomp mov fwait orb and adc push cmp cld mov mov add repnz outsl bound push push lea dec pop push (bad) pop (bad) je sub sub test das lds repnz inc inc mov cld rcrb jp loope push cli mov xor mov fldenv std sbb and and dec add push or jb adc je add mov in popa cmp sbb add sbb jb adc aaa xor add (bad) popa (bad) in inc jb add mov enter mov dec pop sbb ja and and loopne dec mov inc cmpsb adc test arpl xor add cwtl add rcll ficom push rorl ja leave dec aad lds mov jle cmp xchg lldt adc adc add pop (bad) scas mov rolb insl fucomi add or xchg jae adc mov jecxz orb jg jl adc lds aam pop adc xor or cmp adc pop dec lret mov add sub pop add sarl pop add add or add mov cmp or or add outsb xor (bad) dec jmp inc enter sub sub (bad) test push jne dec mov rcl dec xor or sbb adc adc lods adc mov out sahf fwait (bad) test sbb sbb (bad) jecxz and flds mov ljmp dec test lds mov add movsl and rolb jnp ja mov insb arpl daa sti testb and insl clc push adc push add out daa xor in pop add mov push sbb pop nop orl xor cmp add push test push les loop in call dec sti cmp push nop adc pop mov mov push mov rcrb outsl add mov ficom cmp inc or loope clc lea mov fisttp loopne test scas inc mov scas add or push je push jle lahf adc xchg sbb add inc jns out or les lods call loopne popf in test rcrl jmp sub and push jmp xor add and (bad) push hlt dec pusha stc sub stos insl mov adc cld mov aaa sbb and clc add add je add jecxz push outsb push adc je dec (bad) jbe dec or and pop add cli scas test pop mov jge mov dec test jo add sahf inc outsl mov cmp jl or jnp or lcall sbb and adc iret shll jnp push cmpsl and mov fildl shlb add cwtl adc incb lea jne jne cmp bound movsl mov je sub cmp mov cli sbb leave and rorl push insl je and lods (bad) cmp adc add insb fisubl jmp adc xchg movl mov daa pop sbb ss jne mov cmp je imul push adc bound mov jmp and cmp mov sub jmp out mov mov mov mov xchg es mov je jg (bad) fistpl push cmp ja add cmp or (bad) int sbb jne xor dec fwait mov in in call nop add in sbb out or (bad) pop mov in je or pop ja lock in aad mov int3 add add push pop orb dec mov cmp adc dec xor pop cmp pop pop add aaa sbb add lahf ret mov add jp mov jns hlt jmp add jmp negb dec (bad) hlt inc pop or push push lock push cmp push and call push add hlt add insb insb xorl push je xor sbb cmp shl or fidivr test rolb push adc sbb lea in rcr push cwtl and push test cmp stos add push (bad) mov ficom jns idivl rclb fs inc loop or xchg mov fwait std inc cmp jl sub mov and sbb adc xor (bad) mov lds and jno pop jl adc scas ret pop xchg cmp pop fcoms outsb ljmp mov sbb pop pop adc cs mov lcall push je cmp cwtl test jnp lcall cmp and cs jmp sub push lock or xor jbe xorb loope out mov xchg sbbl xor push fmuls outsl adc adc (bad) xor in add xchg rcl jbe rcrl jecxz arpl sub stc das xchg lock lock ficoml and mov jne or (bad) outsb arpl dec inc cmp mov cmp sarl add add push fcomps aaa mov push inc (bad) (bad) or es rorl inc das cmp xor inc adc dec xor ja addb inc popa ds and je cmpsb or mov push outsb xor sub out add in dec pop dec and sbbb sub cmp rcl or mov pop inc push nop mov shll cmpsl xchg mov sbb enter sahf mov ret push add lods or add imul inc lods jo mov jge or scas data16 pop mov mov mov cs roll cmp xor fwait (bad) xor and nop loop mov jge and or adc dec pop pop sbb fs push and lret mov lock ret mov pop xor dec pop fdecstp mov pop ud2 test enter cmpsl jl test cmp or jg xorb lods add incb push push mov sub inc mov flds sbb scas or add xlat jo movsl (bad) hlt push add add jbe mov push loop push int clc lcall or das cmp stos das mov mov or scas fsubrs jbe (bad) test adc or adcw mov test scas adc sbb sahf fsubr xor mov loopne mov enter push push sbb inc (bad) dec add dec (bad) mov dec pfsub adc push mov lret xor or enter sbb negl call pop or cmp lock xor xchg dec popf out dec fs sbb jbe mov adc sysret lods dec loopne and movl adc cld in inc adc ja push xor in xchg in in adc mov push and mov lock xchg mov mov jnp mov into and (bad) and enter mov cmp mov push into push pop mov xlat in pop adc mov add push popa mov loope mov daa test lret or fwait pop mov add and enter cmp adc enter and cs out mov jb mov push pop sti mov cmp orb (bad) adc dec or mov add or mov pop mov adc int3 pop push mov in jne (bad) push push orl sbb inc test popf jne xor add mov cmp adc mov shrb mov add jle fldlg2 sub ret inc adc add sti int3 jmp insl mov adc icebp sub and pushl rcl push jb xlat pop dec or push mov or inc add mov xchg cmp sbbb sub aad ja inc adc dec into pop push dec mov das dec adcl add pushl add daa test arpl in scas push imul into in inc movsb and sbb out mov mov push or cmp aam into add test mov mov loopne movsl pusha or pop lock adc xchg loope sarl mov jge jns js cmp sbbb or adc and sub insl push cltd pop pushf pop rolb mov pop fsubs fwait (bad) rclb nop pop fcomps lret cmp lret pop adc insl mov mov add cmp int pusha or lcall (bad) add iret add cmpsb imul dec (bad) xor inc push fs lcall xor insb lcall ret imul sub fs xor js dec (bad) xor xchg mov dec rcl loop cli or cmpsb imul imul mov hlt das adc add imul imul dec (bad) xor dec pop fadds (bad) xor in push add xlat (bad) jne add negb add aas enter add add xor inc add add push jae adc xchg lret (bad) mov dec leave ret fdivl and pop enter daa cmovg sahf in pop jl daa lret push sub jns mov aaa xor pop xor popa scas add int3 mov mov notb (bad) pop rcrl xchg cmp jg pop bswap pop inc push mov sbb push push std mov sub outsl add push add add (bad) (bad) sti mov add cmp sub push pop pop or aaa xor push push pop push repz jne and add pusha push mov or adc jne iret add add add jne insb add subl jne jb fldcw scas pop imul pop pop inc dec dec inc inc dec pop dec inc inc push pop push inc dec inc inc push inc inc add dec decl add push push inc push push jg outsb je insl gs data16 gs outsl jb dec or adc pop repnz add dec inc stos dec dec inc mov pop (bad) adc push xor cmp sub jge notb imul jp push in out aaa daa aaa outsb outsl je add addr16 and popa arpl data16 outsl ja cmp nop lret outsb push outsl outsb aaa ss fistpll xchg fs jbe jb insl mov xor or mov in sub pop sub fldcw insl pop das pop push fsub pop outsb out or xor imull gs xor add jae sub test mov inc and gs inc repnz and mov lods je mov arpl rcll xor mov imul and add or popa insl and ss xchg dec adc scas shrl sub sub inc clc test addr16 jae (bad) shrw (bad) outsl add bound adc dec sub pusha cmp push imul outsb shufps mov jb daa or push inc push and push aam push mov cmp add mov ss sub insb ja ds jl sahf push xor dec popa ds into fimul ja jbe push mov xorps pop (bad) jae popa addr16 outsl js xor mov jae xor cs jae mov das add dec xchg jnp pop and jns xor fs push ljmp xor dec add lret bound mov dec outsl jbe dec push jo cmp or je fcompl pop outsb gs iret imul arpl gs jne jnp inc cmovp or push mov dec inc inc aaa jns movsl inc jnp aas cmp and sbb or jae imul or jne (bad) sbb dec add push jne jnp mov das daa and into cmp fiadd or sbb es cmp jnp scas (bad) mov jae movsl lods mov shr loope enter mov add pop pop js cwtl lcall pop mov or in out idivl adc push jb xor push cmp jbe stos jae lahf loopne into lods add mov sbb sbb jnp sbb mov orl movsl js and popa pop mov add add std fadd push pop roll rolb or adc sbb xor dec xor sub adc loopne js or pop xchg nop inc mov nop jge les mov adc flds xor je notb lret dec ss fdivl (bad) pusha movntps std inc notb push add xchg mov pop mov push push scas daa add and scas mov orb push inc xchg sub sub mov outsb ret fisttpl daa scas xchg jge jbe pop sbb stos pop sar or rorl or add mov sbb lret ror scas rorl daa clc loopne xor sbb imul lret pop and xor inc inc int3 hlt scas and push add nop sbb and mov cs inc sbb enter and inc xchg mov rorb cmpsl in rclb roll pop add add push inc push dec cs dec dec add and repnz repnz add aad les mov (bad) jne cs gs add dec gs gs ficom adc add loopne add aas pop movsl inc inc add xchg fistp sub pop adc loope (bad) xor roll mov dec (bad) xor insb pusha push inc cmp lcall loopne in lcall mov mov jne imul jb jae lcall arpl adc jg outsl addr16 and or jbe gs dec cmc xchg sub add push push call aad jns outsl outsl imul jae pop idivb arpl jne je or sbb jae outsl jb cmp pop lods sbb cld (bad) jns or lahf fwait int cmp js xor sub or mov and popa ret mov and gs or jmp fistl or ja gs cmc inc stos inc fcomps pop inc jne jb inc insl pop pop push push jae pop outsb fwait mov int dec add divb out xor push xor xor pop mov add dec add pop pop and add (bad) fild daa out dec cld xor je nop xchg mov scas mov (bad) ljmp lods stos stos mov push mov push fwait push push dec aas in aas fdivs insb inc jae cmpsb add pop roll mov inc (bad) ja in dec pop test pop (bad) xor sbb imul hlt sub lock cmp pop repnz aas sahf xchg stos nop mov (bad) je fstl jge dec insl xor or fnsave repz add or dec repnz clc and dec pop push dec in int dec or sub pop mov push mov enter mov mov mov dec add add push xchg push push mov pop insb stos dec nop out inc test mov lods lods mov and rcrl adc mov daa or xchg mov adc pop mov mov loopne pop adc inc xchg mov xchg lahf jnp in or leave in mov mov mov mov mov inc repnz cmp mov or (bad) (bad) in pop or insb mov int3 insb int3 adc outsb mov mov dec dec call inc jnp mov inc push insb inc mov insb inc sti in scas jne push pop sub mov arpl mov ja jno add ja jl leave mov leave cmp xor test in stos in jecxz adc in adc mov xchg dec (bad) mov outsb jmp mov js enter sub insl pop inc xchg dec cmp call jnp ret les pop mov jmp rorl pop ds mov push mov cvtdq2ps test std mov fdivl (bad) cmp and push out sbb add dec fst test js sub mov jmp pop fnsave xor into (bad) xchg jne inc sub lret cmp xor jae or mov mov ja sahf push push sahf push dec dec xlat into pop xchg out pop inc mov stc or push int3 ret pop add fwait sub fwait push flds pop or jns mov cmp enter shr or imul mov sti jae xor push test mov mov lret nop subb xlat out sbb push ss mov das adc mov cmpsl inc mov gs (bad) cmp mov xchg imul pop inc push in xchg mov xchg mov scas loope jecxz mov cwtl push jl ret insl xchg rdtsc sahf cwtl dec adc jg pop test lret cmc pop xchg ds push and mov mov outsl inc or idiv cmp mov lret sub popf cmp sbb mov mov dec adc ror orb add and dec sbb jae int push ja dec xchg push out fadds int dec cltd insl cmp xchg lcall mov jbe mov add nop and aaa fstpt jecxz xchg test dec (bad) push ror movb aaa adc dec pop rcrb ja push in push push or popa aas out xchg push fcomp lret mov inc add add sub fcmove xor popf int xor mov jl imul (bad) mov js aas push lcall sub push xchg jbe pop fnstenv cmpsb mov dec pop xor jmp push pop shr push mov daa pusha loopne fs mov jbe push mov bound pop push push scas shlb inc lahf and adc dec push jb pop lea mov movsb adc addl dec test dec arpl es cwtl push sbb in xchg dec xchg dec push test cmp lcall sti xchg jns aas xor imul dec pop mov or mov mov mov or cmp xchg dec gs jo pop insb xor push dec pop push mov loope dec je inc nop enter in test test pushf adc hlt adc mov add jmp adc das insl idivl adc gs js arpl jg xchg leave mov pop aam cmc mov lret add imull dec adc in je popa adc lcall insb xchg mov cltd xor mov pusha jmp dec xor xchg mov pop dec dec mov outsb in andb xor add adc (bad) imul mov invlpg xor fistp mov cmp mov xor popa mov xchg cmp and pop pop xlat aam enter add cltd pushf stos add ja popa jo decl xor push insl add je xchg xor (bad) xor lret push dec mov cmp outsb xchg rcrl pushf je pop xor xor dec add push pop pop jnp out pop repnz sub inc insl adc pop jae andb mov test in dec lahf mov xchg push (bad) xchg xchg mov mov xchg stos aaa jp dec fwait xchg mov sti mov (bad) mov lods push mov cwtl mov pop mov xchg mov ficom test fisttpll dec xchg mov fsubs (bad) mov xchg jne insb fstpt adc push test lret pop jle jnp mov or mov add adc (bad) (bad) mov scas pop pushf nop fwait lods je scas mov lods xchg xchg lret push sti fisttp xorl loopne pop jbe or dec mov xor fnsave sahf pushf adc fsts addr16 mov shrl (bad) adc dec addr16 xchg mov addr16 mov pop sbb outsb (bad) dec shrl and shrb lock call add lcall mov lock je add jbe mov fwait nop mov jnp outsb out mov xchg mov add mov mov lods adc or sbb int das mov add pusha jge dec lcall mov jp sahf js js (bad) (bad) jmp jge jge jge jge jnp jnp jnp jnp jnp jnp jnp jnp jl jl (bad) (bad) (bad) call jl jl jl jl jno jno jno jno jb jb jb jb jb jb (bad) (bad) jmp jb jb jb jb jb jb jb jb jb jb jg jg icebp push inc dec pop nop jg sub lds outsl xchg int or or xor push pop mov int mov and arpl adc and jg (bad) mov push and fs mov sbb repz ja fdivs add jl repnz pushf xchg js clc aaa fistpll sbb fildl xor stos jns popa out out aaa push imul addl inc lods call or pop (bad) or jbe pop in fiadd pop add mov int sbb sub pop push add push push push sub dec movsb cs in or nop jmp inc mov jb,pn adc push ss repnz jnp,pn mov xor call sub cmp mov in mov mov push jne push push mov mov push jl jnp adc les sarl pop push pushf dec or add mov int3 rorl or add call test lret xchg leave (bad) fisttpll mov push les cmp push mov sub push mov add imul push call divl push dec sbb jecxz pop int pop jne push addr16 cmp ret push call lods add ffree pop push cs outsb mov and cmp mov mov imul and sub xor adc dec dec push mov mov mov dec sti call pop push inc xor and shrl daa popa sub inc mov in ss or add dec scas fldln2 sbb or arpl adc or jne adc push sbb sbb jmp aas xor je xor adc aaa push sub cmp cmpsl fnstcw ds add shrb inc push inc pop inc and in sub lret shrb in cs and push cmp push mov inc mov mov or xor mov jle push push call mov push mov pop sub rcr je and call pop and push call fcomps in jle mov push pop gs mov das and add mov aas fldt and pop jno push sahf out adc add sbb add inc mov insb das mov xor sbb test push push call push mov push cmp inc scas inc inc inc xchg test in dec xchg sti xor inc cmp fsub add mov mov insb in sbb int3 int3 push inc or insb addr16 push push inc xor jno sub jae jnp int3 pop inc push daa or add pushf (bad) insl (bad) and ljmp test addl adc sub mov mov inc lds cli xor stos pop ret inc push lock jo or test mov insb inc push push fcmovu sbb add dec aad push push outsb shrb sub dec jg jnp test dec or xchg mov sti aad rclb or mov and sub xor aaa mov mov adc sub mov jge pop dec adc icebp push cmp pop or hlt push push out cs xchg (bad) pop je mov add mov pop push add cwtl dec cmp sub xor mov sbb js adc (bad) push adc arpl inc rcll adc push xchg lea fisttpl xchg cmp test (bad) add cmp adc enter inc mov dec or enter add je cmpb push dec dec test ja xlat insb push sub inc lea push cltd sub (bad) ja pop pop xchg dec push ror scas jl cmp xor jno and push and sti imul or mov jmp pop jae xor or jbe mov or cmpb stos jb adc pop xchg pop out inc sar call or sub mov outsb subl das pop in div stc mov add dec insl incb out dec loopne jne iret in cmpsl clc jmp mov dec fdivl pop sub rorb mov mov pop inc cmp and push add pusha pop sub inc movb and js inc inc inc inc addb nop xchg cwtl pushf imul mov lcall adc (bad) and bound cmpsb imul cmpsb imul shll xor fistp mov or pop jae xchg loope push add mov fldcw mov cmpsb sbb js mov sbb cmp add pop push adc push gs outsb fs inc or push add inc add xchg fs push add push inc fisubrl movsl ljmp or cmp loopne sub (bad) xchg add mov cmp clc fisub sbb in mov outsl jae dec popa insb push mov xor sbb popa inc mov mov sub leave popa outsb or insl and cld out outsb dec inc push dec inc dec fstp mov (bad) lret pop push (bad) jb sahf add mov cmp imul push mov cmp xor imul cs mov adc fs jo out fadds pop movsl outsb jbe outsb insl sub packuswb popa adc addr16 mov xor scas insl out rcrb jae jae addr16 sub push (bad) imul lock push outsl insl fwait movq cmp or xor je mov adc insb data16 fnstenv pop jmp sbb and dec in mov arpl jne and sbb add sub outsb xchg bound add add test sbb add cmp add lret pusha ljmp add xchg inc stos insl loop cmc insl jo push and push (bad) (bad) movsl sbb xchg ja,pn mov int3 hlt js jae inc pcmpgtw imul mov xor push add and mov out pop movsb imul jb clc sub push push je je test ss mov mov inc dec push repz sub mov es ss dec pop xchg dec xchg mov test add push pusha sub xchg cmp xchg cmp xor dec add dec enter adc add adc orb push xchg mov lods loop fldl pop cs jae jmp push add add add add lcall push sbb sbb and cmp femms repnz add pop and and inc pusha orl push pop orl jnp pop insl and je and jb or xorb enter test shrl sahf mov subl lahf into pop call or pop add (bad) or nop inc lea mov fs push (bad) nop xchg inc push fs xchg xchg add push popa add push (bad) (bad) je aaa lret in inc mov (bad) xor or cmp or fnstenvs call imul je mov les (bad) xor mov movsb jp cld add pop incl stos add test xchg lock icebp mov lods inc push mov adc loop aaa sub cmp pop add test push adc dec add jnp pop add inc add sub or movsb addr16 or pusha (bad) jns outsb cmpsb fild mov movsl sbbl in adc icebp shll pop sbb sbb inc mov inc inc (bad) out push mov iret mov in call jge jle (bad) push add pop pop fisubrl xor jg rcr fsubp stc cmp jle xor loop xchg fadd xlat add xor (bad) xor enter xlat xor (bad) mov pushf nop mov dec (bad) xor jl je insb push fs pop pop push (bad) xor rcll inc cmp xor aaa dec sub add adc lcall loopne push gs mov xor cmp in sbb jg sub arpl hlt lock scas push push cs popl push inc shr xchg lods xchg (bad) xlat sbb enter cmp dec (bad) xor pop js mov repz xor add (bad) xor ja add xchg mov pop ss (bad) repnz das dec inc cmp enter push cmc daa in and inc inc pop insb outsl imul addb in test aaa dec addr16 and incl je outsl pop jb outsb mov add pop outsw sbb add sub push lock enter outsl fs fldt cwtl aam push add shll mov pop int pop mov add inc add gs int mov push inc in pop push xchg jbe mov inc je jb jne jae xor sub adc xor xchg daa dec and lea dec das js push (bad) mov fild fcmovnu xchg mov push jg popa imul mov bound pop in push lock and ljmp push or xchg and mov ret mov jo sbb sub dec aad sub ss gs js push fwait inc inc insb jne push push neg mov aaa push je xor dec inc dec inc push or pop pop jb push les test stc je push outsb ja fs fiaddl push adc dec outsb (bad) mov out dec push dec aas push insb jae push popa mov dec xor lock push std push adc jne mov inc dec das rorl mov (bad) and jo ret les lcall and je pusha test adc mov adc or push (bad) or push mov xchg fwait rclb inc adc dec push jbe push imul out push outsl out inc jns jb add sbb adc xchg fwait mov or movl movsb sbb enter leavew addb push push arpl inc sbb push push pusha pop or adc movsb jne jo (bad) in icebp mov popa sub sarl inc jnp mov jns mov lcall mulb mov push jecxz jae cmp cmp push or sub (bad) push mov pop jp xchg cmp cmp push repnz cmp fdivs dec fildll gs sbb pop imul inc rclb lret dec in push add adc insb movsl rcrl pop push push inc push inc xchg adc insl movsl xor add test mov xor cmc mov mov mov and add aam add int pushf dec inc add addb mov xchg aaa adc inc ss lea je and xchg ja add push pop and add incl add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 