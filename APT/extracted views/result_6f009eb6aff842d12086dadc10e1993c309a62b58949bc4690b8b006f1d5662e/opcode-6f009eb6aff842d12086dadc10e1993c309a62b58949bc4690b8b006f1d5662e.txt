mov sub test push mov push push mov jne lea push push call lea push push call lea push call test mov jne lea lea push push push call add lea push push push push call mov test jne push call mov push push call test jne mov shr jne push lea push push call add lea push lea push push call add lea push push push push call push call pop pop pop add ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push push mov xor lea movb rep stos stos lea push push push call mov mov cmp je cmp jne cmp je mov xor mov mov lea movb rep stos mov movl stos mov mov sub lea mov mov mov mov mov mov rep call add mov pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push push mov push push push push push push push call mov cmp mov jne pop xor pop ret push push call push push mov mov push push push push call test mov je push push push call mov add push push push push push call mov pop mov pop ret nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov test je mov mov add test je mov test je mov mov add add test movl jbe mov mov add push push call add test je mov mov inc add add cmp mov jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop lea mov add pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov mov mov add mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop sub push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov mov mov test mov je mov test jbe push call mov add test je push push call add test je sub mov lea mov rep call mov test je cmpl jne push push call add test je push call mov mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop jmp jmp jmp mov test jne cmp jle decl mov cmp mov mov jne push call test pop mov jne xor jmp andl mov push push mov call incl pop pop jmp test jne mov test je mov push lea cmp jb mov test je call mov sub jmp push call andl pop pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret jmp sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop mov add sub adc sub adc add xchg sub adc sub adc sub add adc add inc sub adc sub adc add dec sub and push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea add add cli das add insl xor adc add xor adc add dec cmp adc cmp adc add xchg add in add sahf add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov repz add test inc add xlat inc add dec inc add jbe add pop inc add jbe add scas inc add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop jmp add inc imul add mov add xor outsl imul and cmp daa pop and cld jb mov (bad) mov stc lods mov xlat add sti repnz cmp pop rorl addr16 jmp add aaa sub mov test mov adc insl cmpsl (bad) sti scas jo pop fstl je sti in xlat test imul xlat dec pop aam mov cmp dec roll int sbb and sarb or and popf inc sub or rcrl sbb aad fwait inc imul imul xchg loopne clc (bad) (bad) fdivrs cmc mov dec sub movsb sub movsb xlat into mov and fstpt ds rorl push sbb sub lock fisttpl fadd dec std or inc lret (bad) ror cmc shrl or inc lret (bad) ror cmc shrl sub cltd lea add mov subb imul lret movsl out xchg mov rolb mov mov mov mov mov dec push adc repz (bad) mov test shr pop popf mov sub fstpt dec dec cmc mov fmul dec sub and fild jge push mov dec mov fs lods push or add and jns (bad) jbe in fisttp push add ss push (bad) pop pop fisub daa inc negl in sub (bad) clc sti data16 imul push push push in mov cmp inc inc or mov fistl out lcall mov ljmp cmpsl fwait into dec inc fcoms mov cwtl xlat inc mov cmp int pop stc icebp jmp repz xchg dec lods sbb daa pushf mov dec fildll sbb sbb orl lret inc dec fistpll add mov ljmp ret mov fwait bound jb and shrb push xchg dec adc dec js fisttpll sbb or enter subl stos dec dec cltd jnp sub fbld pop adc loop (bad) lods lock popf mov jno xor xor jbe lods sbb insb iret (bad) jno rorw es fdivl in in loope out cmp stos and cld push dec sbb xor out mov les pushf out push aas mov fbld test ret loopne dec icebp aad xchg mov int3 fnstcw cli mov clc jecxz icebp fldl mov push leave mov outsb push test mov out loop push dec pop xchg lcall sbb fldcw pop sbb in pusha mov mov mov push and daa inc pop ret sub sub out out iret jge inc jo psubusw dec dec add jle cmc ret mov cmpsl inc sub testb orb mov sub insl aam std or dec insl inc test mov mov sub test pusha pop mov cmp fwait ror xor mov fs in dec aaa daa vmulss inc fxch fisttp sub sbb mov cmc pop lcall xchg out jle jmp xchg sti adc xor daa sbb (bad) mov mov push subl outsl or xchg xlat nop jns inc xor adc push jmp jmp flds jb adc add fisub (bad) cmc iret fdivrl mov xlat or or mov insl mov lock sub pusha in mov mov in mov into add jp sub test fsubrp rcrl dec enter aas or repz and dec imul sbb in add lods dec push lahf loopne mov int3 push cli mov movsl aas out jno outsl leave cmp leave mov stc and xchg clc test (bad) mov pop in or hlt gs cmc lock scas lods jp mov lret in mov repnz inc (bad) fnstcw mov inc incl movsb xchg hlt xchg out fdivrs call in jle cmpsl pushf aam push aam outsb in xor enter outsl mov dec cmp cs pop fiaddl repnz add out pop xchg out js mov or es addl in mov insb packuswb stos mov adcl ja add out inc loope (bad) mov mov cs adc das xchg je packuswb pop jge icebp or dec lcall fs lods ja fist adc imull std pop insb sub pop test sbb (bad) xor cmp mov pusha jbe int3 daa ja int3 mov lsl xchg mov jp (bad) dec ret dec inc jnp mov addr16 into mov stos mov or dec or jno xchg fsub or fisubrl stc cld stos popa xor jge lods or inc jmp sbb fcomps leave mov rcll (bad) xchg and jecxz cmp xchg mov movsl imul push fsubs subb xchg popf cltd pushf mov popa out mov fstps sub cmp out lret jmp int3 xchg pop mov insb mov push fadds push and jl xchg shrl decl (bad) stc mov pop mov pop push adc mov stos and dec repnz cmova jle (bad) dec aaa cmpsb push das lds sar xchg in add test dec iret xor into mov pop out je mov outsl in jmp out jne push mov out (bad) jecxz mov mov pop xchg xchg sbb mov add jo mov mov inc sub popf ret push jbe hlt shlb sbb adcl xchg lock out scas xchg inc xor icebp jge and jno aam mov popa cmc dec push popa icebp je xor jns push and cmc add lret aas shll cmpl sub sbb fwait add (bad) xor dec mov adc jbe fildll cmp out push lods cmpsl sbb sub adc xchg sub (bad) add cmp and jecxz enter test mov imul movsb or mov popf jmp jmp pop int push xor jg or adc add sbb push jecxz nop lods pop jb aaa jno movl pusha add mov push push xor push jle pop pmaxsw add adc imul pop ficomp sbb xchg inc mov sbb jnp xchg jle mov inc mov mov jge (bad) mov pop mov dec inc push sbb jl mov into stos cmpsl ds fnsave xchg sti mov push or dec or mov movsl (bad) test xor mov fnsave test push mov sbb imul ds aaa mov jle add sub jmp inc and cmc push imul push jle mov movsb mov jbe xor sub xor ja fs and lret lret ds cmpsb cmp subb popa add xor cs les not or push sbb jae mov lds lcall pushf sub popa sub jnp push lock sbb (bad) ret call repz dec stos jno dec mov ret popa insb mov jl loope add nop push fbstp jmp sahf out xor lods push popf jmp xor (bad) xor xchg fist cltd mov jp mov sti dec jl pop repnz leave xchg popf mov xor out leave pushf std and mov arpl cwtl dec dec mov (bad) je ja mov test adc or gs push mov adc ljmp pop jl xchg cmpsl push in mov popf insl aas les cmp movsl mov or es push mov cwtl test stos xchg sbb cmp xchg mov outsb cmp (bad) out cmpsb sbb dec sub out adc pop pop mov imul sbb push or mov dec pop imul les fnstenv ljmp loope sbb popa movsb cmpl call (bad) sub or aad pop jg xor enter (bad) shll mov mov in loope fistp xor sbb das insb lea push icebp int dec rcr fisttpl add inc mov add xchg xchg psrlw mov mov (bad) inc rcll push (bad) int3 add sbbl dec xorb mov fild add mov divb lock push push fidiv lahf imul (bad) nop popf jmp lret and dec and out cmpsb rclb int mov aaa mov jmp repz inc sahf insl scas popf xchg mov ljmp jo aaa inc push mov sar insb jae jnp leave sbb mov shl mov and pop mov xor dec mov mov iret mov leave hlt lds add std and es je fsub leave jl xchg scas xor pop push push jne xchg fwait or push cltd dec add xchg lret into leave pop inc inc aas jo cmp pop iret sbb push cmp push nop es inc jle or jnp test lods (bad) sub aad push mov jmp pusha xchg aaa into mov loope fsubl push cmc pop pushl and andb jnp aam or mull xchg inc lds lcall mov jns into pushf inc (bad) pushl insl push inc lret jge or mov mov sbb xchg std dec cmc (bad) (bad) mov xchg pushf xor int xlat out push mov push fldcw adc cmp iret cmp aam mov fisttpll or loop aam les xorl mov push movsl aad push pop out cmp test lds adc or fidivr mov pop cmc mov or call sub subl insb inc and and or and outsl xor es jnp sub fcos mov pop pop push and loopne mov mov and xchg lret pop leave test mov frstor inc lock mov or (bad) test xchg in je and mov mov call mov sub lock mov push mov sbb and pop or add jmp xchg das in imul mov aaa pop fwait mov jnp pop loopne mov mov sub push pop inc sbb pop repnz push pop sub stos mov mov push adc je push mov sub (bad) pop (bad) fwait adc xchg inc imul leave dec in jmp sub or adcl pop ret pop rclb mov push (bad) adc mov dec push or jg,pn cs test or imul fildll (bad) (bad) xchg push std inc adc call (bad) movsb ret mov in fs dec in arpl les inc lods jg outsb fisubr in or xchg int in lcall xor lea add or aas push mov (bad) mov cmp mov fs inc stos imul add xchg pusha addr16 lret in inc or inc dec pop fisub aaa ficompl imul imul dec jnp sbb cmp (bad) sbb pop add mov lret cmpsb scas lret dec pushf inc stos and pop inc or xor inc xchg (bad) (bad) mov (bad) xor sti (bad) or loope lods mov into dec arpl xor sub xor inc popf xchg adc sbb fnsave lahf icebp dec aad mov fdivl pop jmp adc (bad) (bad) loope imul out (bad) mov popa fstpt sub jno stc dec mov xchg int3 cld test sar iret xor mov loope in loop lcall add xchg pop iret fisttp sub in fadd mov xchg cmc and fcompp pop (bad) dec cld lea addr16 push outsb jge mov aad sbb aam jmp les pop cmpsl xchg jp in dec insl je lea dec push lcall addr16 in inc popl jae (bad) shll arpl mov test ds adc out cmpsb int jle stos mov mov inc lods lret pusha stc mov jge adc sbb xchg je (bad) adc lods es or push mov cmp add mov cmpsl aad pop loopne jne mov (bad) je and mov movl sbb dec jmp mov sub repnz stc in or pop cltd xchg xor xchg add test repnz xchg int jns cmp xchg xchg neg mov test sub sbb clc scas stos aaa pop xchg adc leave test in mov fbstp pop addr16 rorl testb das mov ja adc icebp mov loop jge orl jo dec sbb mov aas mov xor fs test mov scas add pop je lods das xchg pop pusha out mov sub inc mov ret lods dec xchg adc aam sbb add cmc mov xchg sbb xchg call push jl aaa mov dec cmpsb outsl ja sub push outsb repz xor and mov or sbb xor sbb cmp inc and adc mov or out jae dec sbb in pop pushl jle cmc adc orb cmpl int jo jns (bad) das inc int3 daa push jg mov push insl mov fs jmp jmp mov int3 cwtl mov outsb outsb mov das and push fnstsw mov pop inc mov sub and lret or jb aas cwtl mov adc mov adc mov push cmc push xchg iret repz or mov out dec mov das push mov push jge scas xor add into jbe in mov mov jne push adc add mov mov jmp jp aad xchg ljmp jae mov jbe or xor cltd out cmp mov fucomp jb xor pop fs sbb cmp jl rol sahf push push mov ds test shrl arpl (bad) sub mov inc sti sub adcl lcall and jo inc mov mov (bad) lock lret std inc sbb fcoml cmp fimul std mov mov pop mov adc aam adc dec jle xor mov (bad) and adc xor mov cmp insl inc sub mov pop (bad) cmp test adc je cmp add ffreep out ja and rcll ret mov adc dec or cmp and cwtl sbb in orl jae and sub lret dec mov mov xor push jae gs fs arpl push (bad) dec adc lret cmp push scas sbb hlt clc add adc clc sub mov andl lahf jae fbstp adc jecxz jge loopne jle test jl or push (bad) movsb shlb sub jno aam in aam in mov mov data16 (bad) ljmp iret mov mov inc xor aam int cmp ljmp stos ljmp jne pop mov mov pop fwait les das movb in test outsb std fsubrl stc cmp imul aam xlat mov subl sub mov add push (bad) idivb and sub dec loope (bad) sub pop jmp lea mov repnz repz mov adc xchg loope xlat out (bad) and mov dec push repz and pusha pop aaa jno fisubrl daa pop lahf jb popa cli push pop sbb xor jo cmp push int test aad divb jb cwtl loop push adcb arpl sub sbb xorb enter jns push xchg mov xchg push lods repz jecxz xor orb shl lret sub arpl js sti fwait xor fstpl sub je add sub pop lret inc cmovs scas jge sub adc and mov xchg sub call cmp repnz fiaddl pop hlt jbe xchg and mov push cmp sahf lret inc push fild xchg test int js fdivl jns pop arpl mov sbb inc push les fcom lret or pop dec hlt test mov or and add sbb cmp clc lahf cmc inc xchg push dec outsb jg frstor push scas xor mov daa mov inc pop int3 add mov outsb cmc inc gs adc mov or pop sbb jecxz mov orl pop lret push (bad) into stos push push in pusha push repnz sti xchg (bad) mov cmpsl lods and jb jne push xor (bad) pushl idivl imul and fnstsw push movsl cld popf jns lods pop xchg lds jae daa in mov push and scas and into lea data16 in syscall stc inc fstpl jns ljmp int insl or in jge data16 in mov inc negb aad dec cld push in ret out mov paddsw lcall not gs mov xchg lods mov pop mov xlat push jmp mov leave or jno mov jbe sbb popf stos xchg mov mov mov stos into (bad) les lds popa mov sbb push test (bad) shrl dec pop out inc mov xchg push cmpsb pop fldenv imulb loope mov dec lret mov inc ljmp vmovq les lods cmp inc jge (bad) sub xorb shlb xor or pop lcall inc jge cs flds idivb mov (bad) repz pop stos shrb mov sub fwait xor xchg push push mov (bad) test ljmp das mov xor xlat push add jo xlat into pop negl and scas pop dec xchg push cld adc or fmull mov cmp inc rolb cmp ljmp pop js (bad) imul and or nop push pop xlat js inc repz dec add and sub push hlt leave dec jle mov and dec pop cmp jae xor cmp add int3 js add int3 push hlt pusha in in push fwait inc nop stc ljmp cmc mov outsl clc test dec add or jb xchg pop cmovl cmp pushf ret sti insb out pop xchg repnz rolb fisttpll rcll inc int3 push pop inc in cmp inc lea dec cld jbe add add arpl ljmp int aaa dec scas rclb aas adc dec or fs mov pushf push insb mov (bad) jmp aad outsl aam inc sbb inc mov mov popf aam push (bad) xor ret sbb and pop sti pusha pop daa ja (bad) adc aaa movsb and xchg jnp in mov rcrl out loop andb fwait stc xchg xchg ja pop xchg push or iret pop scas inc pop cmp dec into push cld (bad) out lea (bad) out (bad) addr16 and sub addl mov mov mov leave push cmpsl imul iret jns in sub in lret or cmpsb pusha pop mov or jmp and lret test mov adcl (bad) cld jno push xchg mov leave sahf push out sbb cmp (bad) mov repz (bad) push addr16 imul mov roll cmp mov test mov les push push inc pusha lds cwtl enter fisttpl leave fnstsw pushf jmp mov and fdivrl jge xchg test loope cmp mov xchg sahf and in fcomp out in lock jo pop (bad) push data16 movsl inc insl mov push xor push (bad) imul sub popf xchg ds leave cmc (bad) sub cwtl leave jmp cmp enter lods push das mov xlat lcall icebp cs mov pop xor pop ljmp les sub inc push lret and cwtl pushf mov mov push mov icebp stos sbb adc mov add and outsb pop jmp dec xor sbb xchg arpl popf repz mov sarb xchg daa push lea xchg sub push cmp lds popf or cmp test icebp (bad) decb add scas xor mov sarl cmp ret mov popf addb push daa fldl2e cwtl mov gs xchg pushf cwtl dec out stos dec loop jp xor xchg imul mov sub mov and test rcll and (bad) out in mov add sbb xor js rcll jmp nop les xchg jo xlat add test and dec notb test mov mov jge xor popa adc test ljmp cli enter lods adc test daa in mov inc mov (bad) out cs dec sbb push dec sti test mov cmp fsubrl rcrl mov cmp test mov imul mov dec out fs xor and lcall bound jge stc fisubl js fcoml fwait jle mov fbstp lcall mov push lock insl ret jg iret adc pop arpl sub std push (bad) fstps mov loope ja add push popf inc pusha rorb popf imulb lret cmpps push push pop pop and or (bad) out adc movsb push push (bad) cmp cmpl leave lods sub pop mov out lock ret and rolb mov cwtl popf leave sahf idiv mov inc dec sub int mov inc cmp adc dec loop lods movsl adc loopne (bad) mov jge popf sbb int push xorl sbb ret aad inc imul xchg test popa push cmpl lock add das outsl lods mov je sbb out pop jbe sbb jnp fld or cld cmp xlat les inc mov pop les or add and jae mull lock js jp es stos test xor mov jecxz stos cmp dec xor dec (bad) fidivrl clc loopne je sbb incb cs ret call stc das xchg lock icebp mov out cmp xor mov (bad) xor sbb cmp xor mov push inc in jge das movsl es cmpl faddl xor cmpl les mov or in flds sub sahf add addr16 sbb daa jnp out adc mov adc jecxz sub sarb clc push cwtl ljmp adc lods inc jmp pop push adc dec push sarl pushf xchg push jp xor sbb fcompl mov xlat sbb data16 lea out fdivrp (bad) in loopne loopne mov jae in int or enter jno,pt cmpsl pop sbb or in movsl icebp enter jae lea iret (bad) pop cmpsb iret ljmp sti cmpsl add mov ret or xlat pop scas int3 dec daa or sub xor jge (bad) fwait xchg push or push add fdivl inc (bad) fs mov std std lods or mov ljmp aas sbb pop stc insl jg push push test pop call adc add gs pop out pushf mov xor cmpl leave pop xor add jne dec sub sub addb push xchg mov inc inc addl xchg test loope sahf icebp push dec out in xchg pop mov sub outsb cmpl mov flds mov jnp sbb cmp cwtl jl sub std mov dec clc xlat mov je and das sbb sub adc and js jno jg lret or cmp pop push js or mov repz push sub sarb sub push test gs js scas fwait inc push popf lret mov in push push xchg cmpsl sbb add pop fistp xchg push dec mov in (bad) ja push lcall in mov mov xchg jo lods cmp mov mov fmuls scas aam mov outsb jecxz xor mov sub mov leave sbb mov cld fmull out mov lds movb mov mov addl xor arpl (bad) mov xchg fnsave je push les out lahf lcall push jb icebp fnstsw ret sbb (bad) lret push cmp sahf or xor sub pushf into inc rcrb cmp mov nop mov lret jno xchg xchg cmp xchg adc mov test cmp jne mov in jno fistp lret xchg (bad) cmp mov mov imul xor fwait and subl scas mov dec in aad lods sub dec mov sbb arpl adc in mov (bad) decb cmpsb inc dec out jp (bad) cli loop dec outsl or xor xchg push cmpsb bound sub inc dec and jle insb mov das dec xchg lret fcoml rorb cltd pushf mov cmp cmpsb out add mov push mov test stos setnp out mov in dec cmpl dec repz loopne adc and bndstx loope int fwait (bad) dec (bad) xchg add jno pop jne enter inc jl mov cmc clc pop mov inc add (bad) mov in insl ret mov enter fs sub xchg dec scas or adc mov cmc sarb enter dec aas sbb stc or push dec adc (bad) fsub fsts out scas cmc inc out push lods xchg cmp push loop push mov pusha lea enter xchg fmuls (bad) sbb adc insl xor data16 (bad) fcompl (bad) fcomp inc xor (bad) iret dec cmp aas into mov or sti add mov mov rcll lds push leave sbb addr16 test sbb lods je lcall shlb icebp sub movsb loope mov fidiv push pop inc sti (bad) mov pop pop arpl test fucomi cwtl imul pop jg jne loopne inc mov mov in (bad) or rcrl out sbb and add and rol popf xchg mov dec stos fcoms add int aad movsl rorl xor xchg repz inc add jg outsl movsl jle adc inc aam hlt pop mov add in insb enter js cld neg outsl lods test stc sbb mov scas dec add cmp (bad) or mov inc inc push xchg hlt out hlt dec sub pop in imull push pextrw dec pop cld cld les mov arpl in fistl call adc fiadd xchg stc insl xchg mov xorl mulb xchg dec or inc xor mov jg je loopne xor dec call das mov aam popf cmpl cmpsl jns shl xchg cli mov dec fwait mov iret push jmp add dec add imul pushf cmc stos sbb pop inc push jmp ret and mov ss pop inc popf ljmp add shll ljmp ret cpuid jecxz fistpl mov and scas movb cs into inc mov sub loopne outsb mov mov xor dec dec xchg xor push sbb std fldl dec push in sub mov sub pop dec daa call xor movsb push mov pop push jbe sub jne push test repz mov jo test lds pop or out sub xor insl rcll test das popf mov mov xchg aad adc ds jns mov inc pop add cltd xchg (bad) es gs cltd int pop in pop pop jne push mov and mov inc xor into cld out dec jmp push orb cld mov popa adc in addl mov adc cmpsl pop mov xlat mov pop lret and lods ljmp jne dec cmpl mov mov enter addr16 push xchg push mov inc mov lock push repnz loopne mov clc roll sbb in sbbl repz call inc inc leave jbe xchg fadd pop mov sbb push gs push push gs pusha jae mov jle xchg pop sbb inc arpl dec inc fadds jbe push add in adc lret imul push mov mov xor mov sub or adc divb (bad) mov push scas js sbb cmpsb dec pop and inc pop sub or loope int frstor inc add mov in pusha mov sbb scas lds frstor dec mov lock push int3 gs clc sbb mov pop scas and stos add (bad) mov add arpl adc sbb test mov das int mov pop pop mov jns add lahf jmp jnp xor iret or inc pop sbb dec pop je dec push mov repnz or lods insl leave xor mov pushw sbb dec ret add mov cmp sub xlat adc pop sbb xor enter lods movsl or xchg (bad) jo jnp cmpsl mov lds inc pop gs push movsl popa rol out xor xor outsb scas mov sbb nop mov mov shr mov or lock in push push lods ja popf dec shrb insl dec (bad) pop int cmpb mov sahf mov xlat mov mov pop test pop mov call jle ss mov in jge mov or sarb frstor rcrb sub orl lods iret enter sub ljmp xor xor add lret mov mov repnz mov cmp or cmp mov arpl (bad) push and lcall add pop scas adc xchg or nop push mov push sbbl fldenv lcall mov pop and scas adcl xorl sub ret (bad) mov sti push in push cmpsb cmc scas jl (bad) add (bad) cs scas fstl fstps add push cmp pushf dec xchg leave imul push dec in call jmp jl dec (bad) pop fcmovnb int lea std or int3 (bad) jle jnp xorl les mov fnstenv js mov push pop aam push mov lahf icebp push dec in push loopne sub add pop dec jge mov sub adc dec jo mov dec (bad) cmp lcall insl fnstsw lcall pop test jns clc dec sub adc xchg loop or sub mov jae add je jmp mov (bad) sub test pop cmpsb push cli mov out movsb pushf enter mov or rolb mov or inc lahf jle pop xchg xor ss cmp mov add dec inc cmp xchg xlat mov or jl movb stc sbb daa ror cmc or fwait dec aad in test cmp outsl lea mov push roll test lcall mov add fwait sbb or sub fidiv jae test cmp mov into mov roll mov and jns and jnp push mov cs iret xor cmpsb xor pushf pop jl ljmp xchg inc dec dec movsb adc lcall js je in outsw enter bswap rcr mov cs and lret jnp dec dec pop in mov stc pop fbstp loopne mov push push (bad) lock loope leave pop movsb sub cltd xchg dec dec pop push mov mov repz in inc mov ljmp outsl hlt clc fnsave add (bad) cmp lahf mov mov test icebp mov push int jge inc (bad) repz addl mov test mov cmpsb and shlb movsl push sub xchg cwtl xor pop lods push addr16 mov push ljmp loope lods hlt setb data16 imul dec fcomps (bad) out mov in fs adc fs xchg stos sbb jbe movsl imul dec and (bad) mov and mov pop sub pop pop rorl test push lcall ss push jle cmp or lea mov out repnz out popf mov pop sbb jb fidivl inc ret inc fcomi jne gs pop or mov mov hlt out es xor mov and jns inc xor inc dec fcmovne xor ret adc push xor add xchg addl cmpsb dec nop int xchg sbb mov cwtl orb imull loopne jns push sub frstor (bad) xchg push cltd loop xchg popa inc push or scas outsb add addl inc icebp or cmp test orl and rcrb stos lock fs cmp pushf dec add sahf aaa (bad) sbb mov into (bad) inc fcomp push arpl int3 call sbb fidiv mov jge pop mov outsb test nop jne mov iret pop xchg test incl (bad) ss jnp leave inc or mov mov or mov mov arpl cmpsb lret fnstenv int3 jne out loop das push sti push push or enter addl xor (bad) lods cli push sbb (bad) hlt js orl pop jmp add notl movsl (bad) jmp iret cmpsl dec popa push insl push xlat mov nop ds lds imul push ss arpl lar cmc or and lds into pop adc lock daa mov pop ds pop mov test lcall (bad) scas dec pop dec pop cltd pop jge xlat icebp xchg test insb sub popa xorl dec aad mov mov xor sahf lcall mov xchg adc inc hlt das lods adc pop sub (bad) mov xchg mov push pushf sub idivb inc loop repnz loop add pop pop rcll xor xchg (bad) dec int3 out jecxz sub xor nop pop add or or jge subb sub mov ljmp ret (bad) sbb (bad) lret sbb pop bound test lcall mov xchg pop ret daa stos fcompl push xchg jg mov push loopne das lret pop shrl xchg sbb mov mov mov adc fwait add fisttp mov jecxz fild lods minps inc fnstcw xor mov inc pop mov sbb mov jle pusha pop sbb inc lods int3 aad test mov xor dec cmpsb flds push mov lods (bad) sti rorb or (bad) xlat mov mov pop (bad) lret imul cmp sbb add add push pop xchg jo jo outsl pop js idivb xchg lods jne std jg ffree xchg fnsave std jp sub loop or jno dec stos push push rcrb mov mov jns mov imul popa sub shlb add scas mov cmc push and mov xchg mov fnstcw iret xor adc lds fs movsl fldenv mov movsb mov inc notl outsl jno lahf dec xor (bad) or mov shrl fidivrl loope cmp shlb test shll rcll ds mov test stos push inc jo in seta mov cli nop push cld outsl mov pop mov imul push ljmp cmp dec dec lock xor dec mov faddl push movsb fnstcw rolb or sbb sbb push (bad) mul test jae or mov jo mov test mov xchg daa inc mov cmp imul jno ror cli sbb inc jns arpl lret mov lods inc cld pop lea fdivrl fsubs out loop imul popf call aad ja jge lret sub stc loopne lcall inc or inc cltd ret push addr16 add test add add xchg add sbb or stos xor ret xchg outsb cltd hlt push jl frstor mov mov push cmpsb clc mov cli nop (bad) test pop cmp mov cmp (bad) repnz pop jns cmpxchg outsb fstpt frstor ret out mov rorb cmpb and clc sub mov jmp xchg dec pop outsl icebp movsl dec mov in adcl test xchg xchg test pop negl xor lret outsb fiadd jp leave mov xor push mov ret jmp xor sti test enter out sub inc push lret stos jmp test mov scas mov fstpt jns mov test xchg jnp dec push lods sbb jbe cmpsl js jae lret mov test lahf js dec scas jns pop push pop cmp jbe mov xchg adc push xor int arpl sbb push rclb mov xchg iret jl dec sbb xchg rorl enter inc testb popa data16 aam xchg dec ljmp mov dec xor mov cs xor mov repz sub mov int3 mov das pop movsl jns fistp adc xchg repz sub loop insb int aad xchg stc cmp mov inc cmp dec sub mov xlat (bad) xchg in repnz xchg stc das add fwait cmp outsl or push sub xchg call lcall push pop add xchg cmp sbb sbb jo push addr16 (bad) cwtl adc inc (bad) mov adc mov int3 arpl data16 mov pusha lock ret lea in or dec (bad) adc mov mov mov pushf in dec push subb mov jge adc xor jo dec (bad) mov cmpsb pop repz loope or add mov add (bad) sbb pushf mov sbb dec clc jno jecxz data16 sbb je lret fcomp aam (bad) stos cli mov and lods add push jmp sub sbb mov mov div (bad) dec mov or and pop call scas outsb jge enter jp andl xor ret popa aad push ljmp pop sbb mov loop xchg jne out push jp jae push and and or pop mov push inc xchg popa cli test push data16 (bad) jne jge std cmp xlat out and inc and lds imul mov popf mov jae es popf (bad) and leave arpl sbb push ljmp adc (bad) mov loope inc xchg mov fnstenv std in mov push cmp inc repz lods and lret inc div inc cmp lock and mov icebp hlt fbstp lret sbbb push sub pop aas popa imul jmp xchg xchg out ret cli leave mov ret (bad) jl and dec inc sub ss sub push fisubl xor icebp jb test mov mov mull mov adc sbb push fsts repnz pop loop inc ret mov and addr16 cld jae or sbb adc push out cs or pop jmp je mov sbb push (bad) mov jnp cmpsl xchg inc cltd pop (bad) std mov stos xchg mov and mov je repnz sub aas pop mov xchg mov out leave das cwtl sbb xchg inc scas out lahf push (bad) or cmp jns js push or iret inc mov fdivrs push adc fdiv aaa adc inc orl leave lea test xchg rcll popf insb pop in cmp gs lret jl push push sti push mov add iret dec jae nop mov (bad) xor movsl lahf into pusha mov int3 sub jns jl mov in sbb or mov clc int sbb sub jo adcb jo mov test fistl and outsb shr xchg and xchg or in popa cwtl int aam data16 (bad) fiadd lock sub adc push mov dec aaa pop cmp sub stos fiaddl cmp add mov jle out scas les push xor daa push in mov sbb pushf jns lcall iret jns xchg (bad) leave inc stos mov sbb cmp jno jmp cmpsb pushf stos jmp stos fild andl out xchg test jnp ret scas sub scas sahf mov sub push pop lcall and mov mov js (bad) or push mov mov jmp pop pusha in cmc mov andl jl and arpl inc pop xlat ret ljmp mov push lock xor pop sbb out cmp dec lret sbb (bad) test mov movl nop (bad) out and int3 or push (bad) enter jge fs inc xchg (bad) xor jp or dec mov cltd xchg inc cmpsl je fwait cld add pop leave mov lret pusha sbb aad sub pop mov scas push push idivb mov adc daa xchg xor movsl adc sub fucom mov pop scas (bad) leave cli fmulp int3 sahf jno pop add mov push inc mov xlat xchg xor xor pop sub icebp inc add dec iret int push (bad) cmc mov cmc xor sub cmp test jns inc test or lds pop cmc leave pop popa inc aam (bad) popl jno jl add jmp cmp and adc (bad) rcll and lods ds xor adc inc mov add cmp cmpsb ss dec js scas sbb mov ret dec mov dec pop adc mov inc xchg daa and sub cld in inc inc pop xchg mov ljmp xchg jp pusha and xchg mov xor jp jb ja popaw xor add (bad) mov dec bound fnsave inc push sbb cwtl out clc sub cmpsb dec sub mov (bad) loopne das jns dec dec sub push add mov out xor lret int3 dec jae es and push adc xchg dec add movsl stc mov push cmpsl cli or mov or decb cmp sub add cltd das mov cli rcr jbe sub (bad) shrl iret lds faddl or mov xchg mov inc (bad) sbb ret push xchg cmp inc fdivl adc xor out ds (bad) cmp mov dec fwait gs fs push (bad) dec sub loope jle mov ds or mov inc fimull in add dec cmpsl fistpll jg push fldt loop push adc sub arpl lea scas cmpsl and movsl mov cld fs ret add adc sbb cmp and movsl insb jmp sbb loopne or in loope mov mov mov imul (bad) mov sbb cltd mov in and dec inc jl sbb sub les sbbl pop sbb pop pop add popa fistpl roll repnz (bad) rol push movsb fidivr in loope dec mov movlhps out inc add push cmp xchg repnz sub pop fldl xchg sub fiadd jo imul xchg pop aad mov xor sub pop dec js cwtl cmpsb int out icebp and test sub push in fisttp idivb in add pop add jb es (bad) ja clc std iret and into xor sbb xor mov stos (bad) out subb cmpsl jmp xchg xor jmp mov pushf leave xchg sub mov cmpsl or pop out mov ret arpl iret push loopne fsub nop sti cmp mov pusha ljmp insl adc mov push (bad) jbe pop pop sbb or adc (bad) mov fdiv aam mov jle push mov mov js pop mov call les cmp (bad) loope or nop out pop (bad) imul lods inc aam push jmp jnp loope vmovaps (bad) js pop pop iret sub fstpl sbb jle mov pop and add jno jmp cmp sbb push add imul arpl ss inc stos rorl rol push xchg sahf sub dec (bad) or sub dec scas mov mov ljmp or leave xchg negl nop pop imul pop int jno rorb iret cmpsb jno dec jnp adc push stos aaa imul imul pop inc movsb loopne sahf adcl cmp adc sbb fldl (bad) mov dec js push clc in lock and scas sub mov mov sahf aam roll ret add roll mov pop cmp hlt stos fildl push push xor icebp dec xchg push fstps (bad) stos jmp adc lret daa test dec mov ret mov cwtl sub mov mov (bad) sub test cmpsl add jecxz bound into fild add pop sti mov stos push cmpsb xor pop jmp call and jne call das arpl scas adc push jnp in out repnz mov xlat les faddl mov loope rol leave cmpsl scas jle popa arpl jp cmc hlt fnstcw add inc lods bound inc xchg in push jo jge sbb pop mov jns push imul mov mov sub adc push pop int mov jbe imul stos jbe sbb das pop cmpsl ret xchg loop mov fldt pusha push mov jge ret adc fildl pop pop clc adc mov scas or lds jae repz divb stos (bad) and mov ret mov xchg aaa int3 loop in (bad) or sbb mov mov adcl add jmp ja push aam cmp data16 xchg fiaddl cmp lahf lds out fs xor test mov mov sub cmpsb push pop pop sub jp int3 mov outsl movsl mov sub sbbl inc mov sarb movsl loop sbb adc js negl push mull adc dec dec add (bad) dec lods (bad) dec or addr16 orl jne xor xchg je mov mov fstpt fwait push lods rorl xchg outsl out push ss mov sbb xor inc jae pop in mov inc sbb inc xchg icebp xchg aad ljmp popa pop aam test ja or cltd xchg movsl dec call dec rcrl jne lods lods imul mov arpl js sbb mov in std xchg inc sti ret inc insl jnp andl jg sub inc push adc inc mov dec rcll mov mov loope pushf testb push popa lret (bad) dec inc je aam cmc lds xchg cmp sub jecxz lds sub push xchg dec stos mov in cmc sbbb int xchg aad pushf mov mov add push repnz xchg outsl mov pop cmp insb push ss fcomip or in (bad) sbb mov movsl int3 push insb test mov repz xchg imul or hlt fsub and push jge sbb es dec pop jmp inc loope jnp in mov sub scas mov lea minps or lea negb loope jmp loop jo inc pop push gs adc push inc clc cmp inc jg mov sbb and std and jmp add aam jmp sahf mov jg in mov fwait dec (bad) lods and pop fisubr (bad) repz pop mov repz sub pop dec js das lods add dec cld pop in stos lret pop daa fcmovnb loope jecxz roll push xor (bad) dec int3 inc lods lea (bad) iret enter xor fdivp cmpsb (bad) xor dec pusha mov mov scas sbb and pop (bad) int3 mov xor xor inc test adc lods cli arpl jmp adc jns sarl mov insl (bad) test mov sub js fmull hlt pop icebp lea and cmc gs push mov mov mov cmp test mov cwtl in dec sub faddl pop push inc and jo mov ds inc adc repz into mov sbb outsb icebp inc xor inc fcompl arpl (bad) sbb adc pop sti xor inc ret lahf sarl mov ljmp dec sbb pop les lea and iret lea loope in dec popf das icebp inc fist or stos jp jp les mov jae push or jmp ret and sbb push icebp ret mov sbb int shrb dec sbb and repnz xchg dec mov cmp scas mov cwtl (bad) (bad) lret dec rcl icebp shrl push dec mov sub test pop stos sub lock fcomi fisubr sub pop mov xchg xchg repnz inc pop scas or test or push je ja mov add divb (bad) test mov inc and cli pop dec jb test jge xlat hlt push les popa pop je pop sub sub mov loop call jg test fildl inc cmp lds push addl or mov xchg daa ljmp in loopne mov mov das jge lcall js gs or jge dec push dec (bad) mov push xor or lods pop rclb inc rcll pop cmpsb lea sarb adc scas lret cs stc fildl iret daa daa ja rcll add cmp sbb sub outsw popf cmpsl lret sub sti fisubr add js insl and push sti aam outsb and imul pop stos xchg cld mov inc push and cmp jg fstp push ja (bad) outsl test int mov sub out push lods mov je stos xchg sbb jns fmulp mov (bad) (bad) cmpsb xchg ljmp xchg add cmp or adc push call pusha sub or cmp scas sub or lods clc popfw lcall fs adc ljmp pop je inc outsl mov cmp cmp subl pop xchg wbinvd push cmpsb (bad) lret fsubrl ljmp je ds out repnz insb enter and push adc lods push sub pop das ja pop sub push sbb push mov dec dec dec (bad) dec mov add cmpsl sub sti adc jbe dec js inc inc lock call and out int cld and cmp (bad) sub int xchg lret lret out pop daa movsb mov push xchg xchg mov sbb xchg fidivl rolb lods (bad) jnp std dec into cltd dec into mov and ss push idiv aas popf ret fiaddl mov sub dec scas fisubr inc pushf inc das ret das ret pop cmp decb mov and inc push xlat std dec cltd int push dec lds std sbb jns (bad) mov push icebp jle add xor push out jns cld mov fs and and sbb push lds pop mov fisttp inc mov dec inc loope jg dec sbb (bad) mulb mov mov fmulp or cmpsl imul sarl sti xor pop loopne cmpl and lods ds xchg mov sub nop add in dec rcll cmp jb xchg ljmp (bad) movsl or jns out or pop ret sbb clc add mov clc mov push mov jns cmc jg movsl in in pop data16 mov sub (bad) int3 notl pop int testl int3 mov xchg add ret repz lods push sahf enter dec add lret andb fmul and ja xchg dec sub test add bnd lea hlt rorb std sbb aad ja jns insl jmp and xchg lods pop sti add and add mov in stc sbb ljmp test mov jge add fldcw icebp aam add adc add out std out inc loopne dec mov sub (bad) jp pusha in data16 loopne (bad) movsb test outsb cli dec inc sub xor int3 mov (bad) enter in sub mov out or fnsaves push inc mov push mov mov std imul add inc mov test mov pop jb fcomip mov inc mov int xor sbb dec or stos inc sbb push aad sti sbb dec sbb inc sbb pop (bad) adc idivb inc mov mov lret sbb out (bad) (bad) push lods movsb movsl mov popa inc pop in xchg lahf nop jmp lods jae sti inc stc mov push push out sub cmp sbb pop and jg pushf sbb cmp pop test insl mov and sub popf iret ret add sbb addr16 mov jecxz mov cltd push iret inc xchg add pmuludq add ljmp stos xor cmp gs stos mov cld pop into arpl or lcall mov in xor inc (bad) cmp out mov or pop jecxz mov cld or mov sub inc add cmpl jb popa test mov orl add pop scas xchg mov pop into cmp aad fdivs pop lods in hlt push push cmp add dec sub (bad) mov movsb out pop jne (bad) sahf ret lea jo and jno leave inc stos jne mov or ret ss push (bad) leave dec ds sar shlb jae sub lret cwtl or jp cmp and xchg fildll out (bad) aaa push xchg or add or cmp and sub lods nop mov mov pop adc jl (bad) jp and pop movsb jne jbe es test cmpsb adc pop popa mov aaa dec imul in movswl fistp inc pop das cmp and xchg lods imul movsb movb fadd insb sub add mov xor dec cmc mov scas xchg push (bad) ljmp push in jge jecxz or mov iret cmp les lds ret xor lea pop inc rcr or movsl cmc pop idivl fadd xor jmp cmp dec cmp add out aam lcall push cmc std mov cmp (bad) icebp xor pop mov sub push sarb incb fldenv mov jb leave xlat pusha movsl dec jns jecxz cmp out (bad) and jp add jbe sub xor adc into xor sbb stc and sbb dec mov sti push xor call daa push subb xor mov into ds sub popa cmp xor and mov jno jo jle dec mov data16 push lret inc out adc enter pop lea stc test mov pop jb mov lahf push sbb cltd sarl adc sbb in es and fs icebp push lock push and scas lods sbb mov test mov jp jecxz pusha jecxz loope leave mov and mov addr16 (bad) and xchg test push and bound dec jno xor fnstsw jns adc xchg (bad) jo xor aam add add mov hlt das inc lret jae mov pop stos ffree dec or dec sbb inc mov neg gs out popa aam inc ret mov (bad) in add xor cmp xor cmpsl mov mov (bad) dec and sahf fwait outsb pop xchg (bad) test mov pop push inc push mov inc add (bad) mov jae faddl lods xor push (bad) push repnz rcll mov and pop insl xchg and push jbe (bad) scas jne popa push movsb lret add adc push or je lcall sub insb jle loop (bad) imul insl cmp mov (bad) iret or jnp test js jmp test jbe jbe mov xchg repnz gs js push mov adc fstpl adc dec loopne movsl fcompl xchg add mov or into inc loopne fsubrl dec fiaddl pop (bad) ds shr mov add mov mov inc or mov sub sbb jmp mov mov add sbb or and pop cld psllw sbb lea aam cmpsb mov mov adc and jb ret scas jge in clc sti cltd jbe test out pop and push insl aad loopne mov stc ds rol insl cmpsl mov hlt lods pop sub push mov stc cmp jnp mov outsb xorl cmp inc inc pop ss jmp test rcrb push sub push dec test test dec mov mov aad icebp mov ret mov push cmpl jl pop add repz mov addb call dec mov icebp data16 int3 cmp cmc sysexit xor dec jo out cmpsl jnp das fwait mov or hlt mov mov scas je mov adc push rorl or mov pop adc mov (bad) insb cld add cmpsb mov or imul jge dec mov mov int push mov adc sahf mov inc sti adc js imul aam leave xchg das jl inc cli pop (bad) rol repnz cli xchg sbb iret push adc xchg cwtl test loop aas cmp dec pop adc jg scas dec rol jns sti ret inc mov xchg clc mov outsb adc imul xchg loope pop jns sbb adc insl nop add add loope push pop mov jo (bad) pop sub stc sbb aas push mov cmp data16 sub push int3 add adc cmc push add xchg push xchg mov jns xlat sub icebp aam (bad) sbb lock lods xchg (bad) (bad) mov xchg pop outsl mov push cmp stc das cmp (bad) sub jle (bad) lcall sbb loop adc cld xor scas pop daa push dec push fxch arpl and ds imul fwait mov pusha dec pop mov pop sahf mov cmpsl mov (bad) mov (bad) cltd das ja mov pop pop mov les cli inc out cmp push fildl (bad) es mov mov mov cmp jge ret or ret fldt imul add and ja and call dec xor test jo cmpsb add data16 aas fdiv ret int3 inc leave add test xor lcall and inc push pop stc push test push mov mov mov inc fs add into xor (bad) incl test js (bad) mov repnz mov enter (bad) adc xchg pushf dec push dec push (bad) into mov (bad) das movsb pop lods scas roll cmp mov aad nop lock sbb xor out mov mov sti out adc jecxz cmp mov pop cmp test jmp mov push and lret sub test pop fadd scas inc lret mov jl mov mov imulb dec mov int fcompl pop pop into lret in roll xlat iret sbbb sub psllw movb rclb mov (bad) aam packuswb lods stc repz mov sub or jp ljmp xchg aad push (bad) fcmovbe jno fs mov hlt sbb lods adc ljmp (bad) les in decl (bad) pop dec pop pusha cmp (bad) jp mov movb adc mov in adc shrb mov (bad) push cmp aam sub mov lret dec stc ds iret inc fbld pusha in push cs in mov mov lret push cmc sub jae inc popf cli outsl gs mov fadds mov scas pop sbb jge jmp and mov mov push bound and leave adc lods sbb xchg popf mov sub push aam dec sub jb fstpl cmpsl lods mov xor inc fdivr aad push cmp aas pop jne dec cmp mov lahf mov sub ret xchg adc rcrb xchg aaa std lods jne mov xlat adc add push aad fwait in aas xchg arpl lds inc cmp cmp sbb testl or lock stos icebp jnp sub mov imul repz mov sub push or pop mov shll insl mov jmp syscall ss dec fwait lods divb cwtl rol into inc enter xchg mov imul ljmp fs jo pusha cwtl iret bound out js (bad) xor mov cmp sub sahf das mov push or sub ret jmp xor lock add out and repz cmp fwait xchg sbb ret daa ja das rcl scas jle cmp sti mov dec push out or fdivrp aaa and lret loop imulb sti mov outsl hlt add cmpsb popf or sbb lods mov (bad) fimull push jmp repz in frstor mov icebp popa outsb xor les ljmp or loop,pt sbb jns inc dec jb mov ljmp jae xchg cs lds cli out loopne leave sub inc (bad) cld (bad) leave in shl adc and js in jb imull cmpl jle cmpsl popf in add fsubs leave adcl sbb mov (bad) pop pop mulps add adc cmp daa les mov dec shl pop (bad) xor sub fidivrl clc dec js mov xchg cmpsl rcll (bad) sub addr16 mov mov outsl lods sub jmp (bad) push adc mov stos xchg or inc cmp mov mov jne adc xchg mov mov inc pop and les cmp lods inc hlt in ret scas sbb popa or mov jg imul adc nop imul pop cmp daa das aam mov mov jne cld adc jp test cmc repnz push jecxz or sti push jmp mov out lahf mov push pop sbb clc rorb cmp cld fist bound dec jmp or push in out push es cltd dec cmpl and outsb fs push data16 sub (bad) ss notb mov jg ret xchg cli and int3 outsb xchg inc push cmp inc pop lea fnstenv out fisubr or ja xor imul in jnp mov (bad) pop hlt fsubrp and jno sub push popf mov rolb outsb aaa lahf push imul mov sbb (bad) add xlat mov add (bad) pushl sahf pop mov inc sbb mov push in in gs jg mov sub scas and cltd adc mov adc cmp sbbb cmpsl lret fistp xor lret mov dec fcompl (bad) int xchg aas cld jo mov pop fistp inc xlat pop inc add (bad) pop das sub push pushf or ret or sbb push insl push mov xor js sbb push add in pop mov mov inc jle push push add loope inc mov mov inc xor loope mov mov xlat loop es mov cwtl jno aad pop sti xor test repz push rcrl test movsb mov rclb fsubp inc fsubl repz movsb ror inc cli mov adc inc push movsl add fcomip fs test jecxz mov mov jb subl mov cmp imul jns sbb out outsl (bad) mov ret mov aad pop sti insl or nop pop mov test repnz addr16 fisubrl mov dec mov shl pusha jb mov mov ret mov add inc mov sub fild mov adc negb pop dec xor pop add stos ucomiss add test and scas push call dec leave outsb sub (bad) mov adc inc jl aam xchg cmp push adc lds and push mov xor ficompl hlt adcl dec add jmp rcrb mov ja mov mov movsb inc mov popf in and mov pop pusha out std pop movsb mov rclb ret lods dec xchg adc mov fs and or sahf jnp cmpsb pop cs mov fdivl sbb flds out outsb jae addr16 add ds mov repnz or and std shlb adc ja in mov pop cltd and mov je leave icebp clc pop loopne push xrelease xor insb sbb push lock out sarl mov sub fs lahf lods addr16 setle sbb std jb into mov or aaa adc lahf xchg insl fstps dec out inc cmp push push dec inc pop outsb dec hlt adc or outsb les sub adc xor cmc adc adc cwtl pop mov (bad) iret push mov and in mov out jg in dec loop jecxz push xchg fnstsw adc enter (bad) insl xor test shlb jno inc addl add leave jb and jae std push rorb cmp inc enter push pop mov mov sbb aaa or inc loope pop cld adc bound test std adc and adc mov shr je stc insb int int3 in or add add pop das push inc outsl mov jmp mov jp or mov and cmp and dec pop pop and add in addr16 int3 jmp rorl and stos cmp adc push (bad) mov (bad) or adc (bad) (bad) std aad add enter test jmp mov push loop repz mov dec jno insb push sub adc test test aad dec mov pop es movsb jo in xchg mov test incb fwait js lock sub mov out sbb cmc jo pop pop mov xchg stos nop push inc in and push lea cmp test sub push mov mov out insb xlat pop push mov das je dec dec aaa imul jecxz testl xor js scas out xlat add aad push mov push int3 push psubq rorb loop scas rcrl out adc cmp xchg push xchg movsb in repnz adc xor inc insl std mov mov add js sub jbe leave or push jno cwtl js int add push mov jns and mov mov ljmp and cs ret push mov mov in xchg inc push dec inc (bad) outsl lea push cmpsl insl push aad pusha push idivb xor add add mov dec mov jmp out xchg ja pop fistpll stc sub (bad) clc ss imul icebp repnz jno insb stos ret (bad) out push es sar lds xchg aad (bad) push mov mov fs dec neg in push xchg dec jl push sub cwtl (bad) unpckhps mov jne clc cmpsl or jns fcmovnbe mov aaa lcall push cltd loope mov xor jae xlat out sahf lods mov mov or xor dec daa mov (bad) bound mov and in mov sub ja jbe icebp dec mov lods add sahf fdivrl sti push mov loopne mulb adc fidiv arpl or mov enter and lock pushf mov mov adc jne pop cltd and rcrl (bad) xchg or mov gs lret rcll add insb xchg mov ja lods pop mov or out das sub jl sub jp mov mov pop push push jg movsb subl push xchg shrl inc jnp sub push mov push clc dec shlb sbbl or cmpb xor jbe dec jge xlat or cltd daa mov mov push mov dec add mov mov push aas in add add sarl push mov or cmpsb popf arpl pushf insb nop add std jae or push mov jmp enter in in mov mov aas out repz cltd xchg xchg fistp loop aam or mov xchg pop dec or or ret popf dec mov rcrb sbb mov jmp push das inc addb push push dec pop inc inc imull scas (bad) sarb psubd inc dec cs in pop fdivl inc imul sarb fadds into cmp popf push lds (bad) jp subl test add jmp fnsave (bad) jl push and mov xchg mov jbe cmp inc out jnp inc ret movsb fnsave test out inc pop mov xchg pop lock and sbbb xchg cmp (bad) fcoml inc pop std or sub push xchg (bad) jno ja add loope cli cwtl aad loopne push dec stos nop inc cld aam jb rcll cmp fcmovbe mov dec mov or dec sarb push xchg js sar ficompl mov bound fadds mov inc jle jle addr16 mov jnp mov lods push iret daa imul ret loope aam mov inc cmp push mov sahf daa sahf and jle inc mov add xchg je cmp dec leave jl popa and mov sub bound movsl mov mov dec add shl lret and rcll push fxsave pop lcall mov jnp sti xor push adc sarl jns and icebp add jecxz iret loope js add or mov xlat cmp push scas or ljmp movsb clc adc dec cmpsb adc sbb lods cmc lock pop mov sbb loopne mov cmpl leave sub out xor adc push jge sbb jbe in fmul dec gs aas pushf adc movsb sbb mov rcl mov mov inc out push mov loopne mov scas or push dec jl xor mov (bad) (bad) loopne cli xchg imul je push in pop (bad) push roll cmp in pop or mov addl xor mov arpl movsl jecxz jb jnp int repnz push and cmp mov rcll mov xor cmp loopne xchg jecxz or inc add lret int3 push rorb pop and jl movsl ret dec int push dec push sub and cmpsl sub cmp in out std (bad) add ss mov sahf int daa adc mov pop or in mov dec jne dec (bad) jae add inc mov sbb mov mov mov fucom sub cmp inc loop adc test dec test js addl dec ret movsb (bad) js loopne lret and pop and push lods add shrl pop or int out pop xchg jno pop push (bad) push mov mov push push jns (bad) or cld xchg fs push jns adc (bad) in cmp xchg std pusha ljmp mov loopne aad sbb lret test sbb jnp fdivrl mov inc sarl fistpll mov sbb push leave iret pop dec adc xchg xor and pusha out cvtpi2ps jo sub mov enter je push fildll ficomp daa fnstcw and or push push jns ror sbb movsb sbb jo jb in in mov data16 and xchg in dec cwtl outsl cli in scas jecxz xlat inc xchg xor jp push (bad) gs test cmp push add xchg mov clc mov dec ds mov lret (bad) ljmp mov dec mov push sub adc scas bound jge add mov insb inc xor shll iret stc (bad) dec mov (bad) jae addr16 lahf cmp lods imul xchg ror mull mov (bad) cwtl dec (bad) les scas push les js cmc mov xchg call mov cmpl gs lds inc repnz inc iret sub loopne push sub push inc mov jnp movsb push std mov je adc bound hlt add jne push clc mov xchg mov das pop icebp jg adc and nop movsb out imul cltd mov fnsave push sub jmp outsl repnz mov sbb adc clc cmp mov imul aaa or je jbe mov in test ljmp pop mov fbstp dec xchg inc or hlt in mov call icebp ds movsl xor ja and fadds in sub lcall test fcomps int ret pop shrb rorl lcall je mov push je (bad) movsl ret movsl xchg xor xchg and cmp mov pop mov (bad) sub pop lds repnz jae sbb (bad) fildll push cld pop aam jg mov (bad) (bad) lret mov mov push rorb in fisub cmp or shrb cmp inc push ss and xchg dec xor js mov es sub pop push xchg inc aad mov mov push dec mov mov mov lret in mov adcl movb adc fwait into das inc bound stos lret sub inc add loop add dec bound sti and rep xchg in sub iret xchg daa sarb stc sahf or cltd jae bound repz pop inc test adc pusha stos adc cmp mov mov leave inc fcomip add call shlb mov pop rcrl mov call in fbld adc mov cmpsb pop js dec icebp cmpl pop gs mov adc fwait aas repnz dec pop aas jl fstpt dec sub rclb insl lods adc cmp lret jae outsl push pop cmp push lds jp lods dec mov xor pusha fldenv adc add jnp cmp cmp lcall (bad) scas insl aaa sbb ljmp cmc adc add int3 xchg fisubl mov hlt popf xor xchg pop (bad) ret mov sbb sarl push push dec icebp sbb js mov out inc int mov xchg sarb mov shrb test xchg add or cmp mov rorb and lock sbb xor out and (bad) xlat mov into dec cmp and mov or lret fidivr aam fstpl pusha imul add das leave adc leave pop pop into or (bad) ds add in ret out iret cmp or pop add jmp sarl jno stc jl fstpt inc test js cmc mov loope rorl pusha xchg dec mov push sub jae add fwait pop mov out icebp rorl adc pop loopne mov (bad) sbb rcl mov sub out cmp add sbb std pushf cmp out mov pop pop les outsb inc push in mov jo rcll rcr out nop hlt xchg popl pop adc pop ljmp adc mov es jns inc lods jnp mov mov mov rorl push in mov scas fnsave mov stos (bad) repnz mov pushf adc pop pusha push adc jmp test mov lss cld pushl pop jo mov and xor add rorl mov ret lret adcl cmp pusha sub push jle sbb cmp stos (bad) ljmp aaa and jge dec inc ljmp inc iret dec pop frstor inc mov push (bad) xor jmp jo add jbe jl test test adc mov (bad) push adc loopne adc push add andl stos cli sub xlat (bad) pop sub scas push pop movsl push dec pop and sub idivl jns je sub sbb cmp cmp mov push mov bound xor sbb pop in aaa jbe sub js mov and pop fwait xor xor pop std mov dec cld inc jl jne jmp push dec or mov ljmp out xchg fiadd test data16 or mov stos into in jbe xor jle and push adcl pop mov mov mov pop ror sbb xchg hlt test roll pop cmpsb imul xor and adc push jge fnstsw cli in mov (bad) hlt jbe neg sub jecxz sub push cmp jge xor adc adc inc pop arpl push mov pop cld sub and push stos mov dec scas inc adc mov mov mov pop dec xchg outsl insl push (bad) hlt xor add test cltd (bad) aam xorb and sub sbb mov out ljmpw ficom pop loope sbb jle aas mov bound mov and (bad) fildll xlat jle pushf ds daa in add ret addr16 jmp ret cli inc call test loopne push sbb mov inc pop mov sbb jle mov xchg stc incl push jo in in cmp je insl push xchg sbb jno pop test jle (bad) lock xchg enter inc fwait sub cmc lret andl leave fidiv inc pop call repnz jnp push decb in add and xchg adc xchg mov sub xchg cmpsl imul inc jp test insl stos shrb fist es or sbb xchg dec or jmp jg outsl sbb jbe dec cmp xchg (bad) (bad) iret aad (bad) fisubr jbe outsb cmp in pop es mov popa ljmp or dec xlat push stc mov (bad) adc loop mul mov inc jbe andl and push aam rcrb orb fidivr fs push fs xor lret push sbb push dec push add jbe imul xchg push popa jbe ljmp dec leave mov into inc mov movsl dec push daa jne sbb lcall das loop mov jge or ljmp mov mov insl cmp lea cmp dec inc rorb pusha sub mov sahf push js mov cmp mov mov adc sub hlt inc xchg mov push dec dec inc mov xor push fcomp ret int3 lock add push sbb popf repz xor push bound pop inc sbb xchg enter lcall xchg pusha das add popa lret push fwait mov pushf mov mov jb jno pop inc sub das inc pop or test je lock je adc dec jns add pop jecxz test movsl inc pop xor bound test inc pop push jp lret scas pushf and sub push sarl pop push ss arpl cmp push push mov out mov int iret pop lea push flds leave into stos addl js cmp adc lcall les pop xchg or int3 mov cmc xor js ficoml out xlat jbe aam mov mov daa scas arpl (bad) jecxz cld bound sub andl pusha sub es sti and sbb scas rcll sub ja cmp jo sbb cmp fwait mov (bad) mov cmp es add jl jb sub cli and icebp std shlb or repz pop cwtl push js inc mov mov jbe push scas inc inc insl push clc cmp mov sbb lahf fisubrl clc ds jl sbb pop add test cmc mov (bad) clc mov aad lods jge jle cmpsl pop push push jns jp in aas hlt add inc adc mov sbb bound sbb mov lea pusha inc lds lea adc arpl daa push cmpb mov xor xchg dec xor fcoms sub or leave cld aam push push cmpsb add mov nop data16 int3 or dec jge lea push xchg pop cmp push mov rcll ds lods roll jno xchg and jmp movsl fnstcw xchg outsb lahf fwait iret pusha xorl dec lock lcall xchg jp dec jno cmp ret xor fistp loope adc fistp or push mov (bad) dec cmc jl pop dec gs (bad) lods outsb mov sub clc mov mov loopne loope fsubl mov out push fwait clc (bad) jae rclb xor sarl (bad) mov inc jne icebp push insb ljmp or sbb dec pop popf scas int mov lret or ljmp repz call dec xchg fdivs inc push push cmp (bad) sbb ja fmul aaa push cmp mov xchg lahf (bad) (bad) rolb rcll push (bad) jl ffreep std push mov xor aad std addr16 mov add fnsave xor jo gs xlat push (bad) int3 sbb lahf arpl ss ret lcall repnz xor pop enter ficom push fmulp je rcll jno cwtl std loop nop (bad) xchg and jmp mov bound jns and insb inc out mov dec out icebp or in lods movsl cli iret popf icebp das lock inc xlat or add mov xchg xchg andb jg loope add xchg inc into movsl mov pop hlt fidivrl sarb inc push in scas cli mov push imul cli imul adc lahf dec pmullw cmp std jb enter rcrl imul add mov sarb in (bad) std mov or sbb insb push aam or dec stos cmpsl mov aad imul mov hlt leave push stos repz arpl lea icebp mov sub xor cmpsl push lahf add loope xchg into (bad) mov rorb std pop out mov add push (bad) shrl fwait dec add icebp rcrl mov jl (bad) mov inc les pop mov or ja pop mull mov pushf pop mov aam cmpsl (bad) scas mov sbb shrb sarb (bad) cmc mov (bad) in fisttpl push pop push ds scas xchg pushf lock lea fs test ja mov sbb push sbb fimull daa dec cmpsb (bad) cmpl clc insb pop sbb iret ss ret jle jge mov xor jg popa loopne dec cltd cs lea adc push mov xor aad popf outsl (bad) and sbb outsl or pop adc pop inc fsubl jmp mov pop sub lcall push hlt lret (bad) xor mov xor (bad) mov dec pop stos or or ja dec or mov cltd (bad) clc dec and shrl call mov (bad) and jmp lret push cmpsl inc mov aam into or repz mov into or mov (bad) mov push or cmc push push push inc (bad) inc mov iret xchg adc mov sbb scas fidiv dec or jg iret push mov cli or cmp cli out std push xchg xor adc jns jmp sbb cmpsb fcoml movsb mov pop daa mov or dec insb lahf stos push ljmp fcomip mov and adc xor push sarl aas xchg std pop dec push adc lea mov push inc cmp xchg fs add sbb add fs cmovns negb dec dec or loopne dec add mov dec push jne sub fwait aaa jb popa pop jb call fs loopne cmp lret sbb mov xlat outsb push (bad) cs stos sub cmc shll movsl xor push jae hlt je lret mov (bad) fs mov (bad) int or stos inc clc das (bad) xchg jge (bad) outsl movsl popa pop inc or mov repz adc sbb pop movsl cmp pop orl int3 daa call (bad) xchg outsb or sub shrb xor cmp adc mov lea inc fidivrl and pop cmp lea stos insb lods subl stc cli push not movsl mov lahf pusha aad dec test ds es ljmp or mov pop clc into sti or lods stos das loop add pop ljmp (bad) stos push mov addl dec jo mov mov push test jge daa xchg or movl xor sbb enter push and sub cltd test das push and dec xchg scas xchg out lret xchg xor xlat sbb dec mov dec mov dec outsb aaa bound jne jno or test xor (bad) cmc cmp fistp shl cmp adc inc repnz adc adc cmp push jae stos xlat jg inc xchg ficomp stc movsl pop scas lret cmp mov jge rcl pop inc push mov mov pop bound sbb jg and das jno popf mov mov ffree movaps adc je,pt mov popa pop inc and sarl sti fstl orb int flds stc jne and shl jae mov rorb scas mov xchg fiaddl jnp pop xchg lods out and lret std mov and jbe mov or push sahf bnd sbb das sub enter repz add xor mov vpsubusw pop or faddl fmuls ret jp mov push jge mov les cld addr16 std or in sbb push lgs xchg hlt ret cmp push (bad) adc cltd movsb jo lcall pop inc jno adcl int3 push stos movsl pop cmp sub je mov push scas mov pusha and xadd jb mov sub jne cmp scas cmp mov ljmp or stc (bad) out mov mov lods adc inc sub push mov mov stc lock push call loope scas aam ret dec imul daa push adc mov fwait (bad) in sub ljmp sarl mov jne dec jmp ja or popf jb imul xor dec fstl jp nop jae sbb test xor mov gs jno scas xor mov fincstp cmp ret ficoml xchg fisttpl pop pop add cmc ror pop add pop push mov push shlb (bad) mov jae outsl stos in aas adc test (bad) enter arpl fistl (bad) dec cmc and mov pop fidivr xchg add sub push pop xchg mov xchg push sub pop iret flds es push shl xor movsl jmp or pop (bad) test (bad) mov push inc jmp and push jmp inc inc fcmovnu js movsl push mov dec dec dec lcall iret dec add xor loop cmp xchg out mov pop cmpb pop jl popa pop std xchg movsl or rolb dec sbb pop xor inc dec mov lods xchg mov xor dec adc dec jmp push adc aam xor inc add pop nop add imul daa sbb adc int3 dec jo lahf mov dec in mov ds aad ret dec sbb stc rorb pop jle sbb lods push adc in sub rcl mov lock clc mov xchg cmp hlt stc das rorb pop pop cmp jnp rorb sub xor dec outsb aad fisubr dec pop mov push test test je (bad) fstp mov imul and sbb fsubp imul pusha movsl adc js rcr gs pop dec movsb dec mov push dec push clc mov cmc gs rcrl sub or pop add (bad) push jmp adc adcb mov repnz xchg sarb cmpsl mov ss push push jle scas push fidivl inc mov push sbb std adc add add (bad) dec test inc dec xor xor jb mov pop and leave inc xor aam data16 loopne xchg xchg ficom scas insb push loop pop je push mov mov lret inc movsb pop out shl cmpsl (bad) cmp je pop mov adc sarb dec xor push aad adc fldt negl xchg mov pusha enter mov and inc mov jecxz jge test jb lods mov std ret ret xor out lds popf or dec fdiv xchg push fwait (bad) movsl out mov jo xchg and or or dec adc imul sub cmp mov movsl (bad) cmp test out xchg push lahf sbb lods mov or loopne fmulp sub jbe aas mov popa dec in popf in out jns js and inc push popf std out jbe popa movsb je adc aaa mov dec cmpsb sahf and sbb push sbb xorl mov pusha les sti mov or jl lcall sarl shlb call test xlat push jno sub in sub adc lret adc aam mov movsl mov je aam mov mov in hlt jle int3 fs in out bound mov xchg lahf iret or add adc jg and nop xor test std repz cmp ljmp cmpsl test xor mov jne insb aaa (bad) mul iret push and xchg lea ret sub cwtl xchg fs fmull call insl aas pop sarl and xor inc jle movb inc fisttpl insb sbbl and jnp (bad) xor mov adc mov mov or push cmp notl mov (bad) idivl aam cmp adc ds je iret imul ds icebp in cs dec loope dec mov and (bad) sbb lea cmp xor cmpsl addl das loope mov jnp mov mov mov or lret mov (bad) push icebp imul insl lods sbb push jns cmovp fwait jo popa test pop ret xchg in int lahf shlb testb fistl or das inc and mov cwtl test lahf ror ds lea add popa push cmp xor mov xchg cld lods jp adc out pop (bad) outsb popf jge mov xchg add fisttp pop div push mov add repz and pop sub dec jle inc lret sbb lahf xor xor clc mov mov repz orb xchg jge dec mov idivl or sbb insl sbb jo or add stc sahf push (bad) jo ljmp xchg aas sub clc lea cmp clc out sbb xlat inc push roll jge jl hlt adc mov rcrl and adc std jns xchg sub js stos jl,pn xor pop add and lcall mulb fucomi sbb sbb daa cld inc lds arpl daa repnz stos ret adc xchg shlb inc mov mov cmpsl xchg push add add xchg add (bad) xor test xor sub jmp popl mulb jbe rorb or fs popf xchg inc or and mov imul xchg mov inc push call test into das fldcw sub test cmp aad test (bad) mov push pop cmp add push in xor insb clc sbb dec push xor pop sub xchg insb xchg sbb aas (bad) data16 xchg cld sub inc lcall cmpsb jle shrb nop and outsb adc jae ficom cltd (bad) cld ds jbe ret and inc cwtd xchg jne fisubrl xor and fwait orl xor cmp nop inc loop xor push sbb popa mov push mov pop ljmp call inc fdivs enter pop jmp dec mov insl add sbb or popf jecxz push fstpt call jg pusha adc add in mov mov cmc (bad) icebp les sub sub jno fcmove mov and mov mov mov ficoml aam lcall push mov outsl mov sbb mov jmp ja (bad) xchg fs mov enter les pop mov mov (bad) pop mov insb and push int3 xchg test jo fwait add xchg sub sub inc (bad) pop (bad) push test push xchg adc ljmp dec and inc and adc add adc out movsl outsl mov push (bad) in inc fdivl fidivrl ljmp add mov add mov mov or jp sahf lret cmp movsb cmc mov sbb inc aas mov rcr dec das les imul add (bad) adc addr16 push ss jno mov push mov fwait lret sti sub jae dec sbb xchg fmul push ljmp sub adc addr16 sbb bound or loop in mov mov and ficom mov arpl mov (bad) sbb test xchg mov dec inc addr16 addb (bad) add dec jg cld arpl push lcall cwtl imul pop adc psadbw jno aam cmp imul idivb (bad) sub adcb es aas outsb test xchg in sbb scas adc inc sub jle jmp enter insb cmp pop sbb rcrl and jmp je fidivl lds fmulp sub dec sbb jge inc cltd and lret xchg push dec out lret sub sub in (bad) xor pop jns push mov sbb push addr16 dec out add and dec jge push popa cmp mov mov adc (bad) int addr16 mov test stc pusha sub jl imul jecxz adc shrb and mov xor arpl (bad) xlat into pop sbb add xor pop xlat cmpl call sahf push mov popl fdivs out clc dec leave fcmovu push lods lock cmp fimul ljmp xlat je pop pop lret or aas dec or movsl imul ret out test dec pop add mov insl lods cmp mov jge sub cmp inc cmp imul mov movsl sbb xchg pop push insl xchg imulb ja sbb add lahf lahf shrb add leave es js push (bad) icebp pushf shrl scas cmp pop mov clc inc andl mov mov push fsubr sbb ljmp push popf xchg lea sbb arpl lods xor pop imul xchg into inc sarb addr16 sub inc imul stos sub inc nop xchg jge adc stos sarb and mov int3 pop test cld hlt cmpsl stos (bad) movsl test pushf les lret and jo sub fsubrl and sbb jl xor jo or sub shrd cmp sub scas cmp leave ljmp sub js lcall (bad) mov push (bad) mov push or mov xor js pusha mov xchg aam and mov bound je lret js call in int sbb cmc out aam mov xchg sbb rorb jg cmp push mov test adc pop xor lods mov je leave out mov xor mov (bad) lret sbb pop cmp fwait add nop dec pop mov mov mov adc and icebp add dec and or ja inc xchg adc aam sbb adc pusha rcll aam jge stos xor out (bad) mov cld mov inc sbb lret shrl and dec popf jae aaa add (bad) add cmpsl and cmp push or mov mov int lret lcall sub cli adc pop push inc test xor (bad) mov xchg mov aam in mov ret inc pop lods adc xchg fdiv cltd cmp sub dec cmp (bad) nop sub jo pop pushf push or mov push sub adc pop jp mov loope mov jge flds imull sbb daa outsl pop cmp sub mov inc (bad) cmp fwait or mov mov imul add mov pop aaa das jl or inc fnop pop add or dec sub test jo or icebp lock pop stc stos cld xor loopne mov repz cld push arpl inc fadd out mov mov sbb es sub pop les je add and mov sub pop xlat dec pop mov push out test mov in xchg push xorb mov jmp hlt sbb fdivp adc fiaddl in ret inc inc aas aas dec int3 push (bad) ljmp out mov scas xor and scas push jnp sub mov or push and sbb sub into push lods mov xchg add addr16 dec add out ljmp pop inc add aam xchg and test lahf mov add test cmp (bad) das jmp nop and lret pop lret aad add dec das ja push xchg mov ret xchg inc adc mov rolb xor (bad) dec into pop insb in push pop jle lret sbb push adc dec mov clc inc push xchg data16 data16 xlat pusha out push test push repnz add roll cmp or jns mov addr16 xchg or into add icebp mov push lods or aad sub and xchg mov ret and fistl sarl xchg hlt enter leave dec int3 out push xlat dec mov aaa mov cmp push jmp mov xchg mov aad mov xchg fistpll cmc mov xchg sar sahf inc xchg sbb rorl jmp sti in adc push jno add push das mov ja fbld pop (bad) repnz negb test or aam push mov imul pop or sub push push fsubrp pop repz vmulps (bad) mull mov add rorb mov scas jnp loope and mov sub cmp insl mov pop sbb lahf and add (bad) sub push pop repz inc push mov jge push jne in in (bad) pop or add mov jp int ss xor hlt mov jmp sub mov movsb subl pop xlat jge imul jle push mov adc ds mov push sbb in pop (bad) mov mov pop pop lock jmp (bad) cmp inc (bad) xchg jg xor pop add cmp adc lods pusha nop rclb sti mov bound pop fwait enter sub leave dec into adc inc lods test loope idivb das jp cmp data16 jno imul pop sub jge mov pop fisubrl jbe cltd push lods mov or xchg call pop pop (bad) rcrl sbb inc imul cmp and mov test push jns mov mov inc and andl jp pop mov pop inc push test inc or pop push add cmp cmp sbb out lds jle cmp mov jp repz jne jecxz es pop push xchg push stos xor xchg jno (bad) fldt stos mov and inc adc mov inc cmp xor icebp outsb jbe pop (bad) jno movsb (bad) int3 rcll fsts popl xchg (bad) repz dec inc or mov repz or lods lea xchg sub push (bad) lea jecxz fstl repnz add ret in inc mov icebp jns jg push add pusha insb pop mov lret push mov iret jg (bad) jmp adc add dec mov sub or stos mov or (bad) pop das xchg cld jbe cmp in cmp mov fst (bad) jns adc pop into inc or sbb mov ret and jmp inc ret cs push js sbb pop dec (bad) xchg cld dec mov add repz rolb xor outsl out or ja movsl je pop lods in js and pop into and lds int movsl sub (bad) xor lahf lds mov mov popf xchg (bad) out lret push sbb and (bad) js lock (bad) mov movsl push std pusha mov adc mov out mov mov push mov or dec push in lret mov mov lret and pop ret jmp xor xchg scas insb pop jno xchg and push lods lods jne xor daa adc lcall lret loope inc sub fs pop and stos pop pusha fisttpl jecxz into popf jmp cmp rol (bad) mov test test lods mov xchg idiv xor add xor push sbb cltd fsubl or sbb mov mov mov jnp pop fnsave gs mov mov (bad) fcoms enter outsl and mov aaa sub lods aad push cmp gs cmc jl (bad) mov test dec or adc sub sbb adc pop xchg xor movsb cltd and loop add or test add cli neg mov mov shl xchg sub and xchg lahf aad movsl mov fs mov repz pop lret adc mov pop jecxz xor dec mov jg fsubrp cmp cltd xchg xchg das fdivs pushf stos inc in lea mov mov ss test mov aad (bad) dec ss movsb push cmpsb popf xchg in daa or stos cs scas add call or pop sbbl mov xchg xchg icebp (bad) dec dec pop lret dec lock mov mov stos in jl or jno jbe ljmp ss xor clc cmp sbb rcrl insl sub pop rcrl adc mov pusha rcl cltd pop mov add sub lods lcall xchg lret (bad) popa arpl sub dec and pushf inc repz mov adcb aaa inc adc sbb xor jbe xor cli lea mov fcoms mov (bad) sub jp pop mov outsb mov into adc outsb pop push imul loop fstps aaa rorl mov roll stos outsb jno and outsl inc inc dec cs inc pop test or stos in sub (bad) mov lock adc aas inc nop sbb (bad) mov or (bad) mov push pop aaa aaa xor add mov test mov scas xor mov cmpsb (bad) int3 pop lret jecxz jnp and mov cmpsl in (bad) in cmp jne std inc mov xor movswl lcall xchg lds cmp and (bad) mov pop mov mov fidivl fimull test mov sub mov leave cmp insl mov sbb lea lods xor insb (bad) adc mov fwait aaa popf mov cmp popf dec jp repz mov aaa dec or lds add push std xchg add mov sub aam and es jo fistl adc aam aas int mov (bad) or cwtl es jbe test pop xor adc jno (bad) mov add lds xchg add push mov and div rolb sub pop pop inc ret mov popf imul xchg jecxz lods or in cmp scas adc jno mov dec mov (bad) aaa cmp gs fidiv stos stc lahf pop stc cs bound insb or ja out sub jne dec loope test cmp data16 push xchg enter lret adc or call sub lods jo sbb scas pop xor aas (bad) jbe mov stc movlps mov sbb shll js pop and push mov (bad) mov sbb dec sub data16 jnp mov pop movsb fwait stc shl cmpsb push (bad) add push mov inc loopne mov add add cmp test enter inc (bad) (bad) sti and mov dec inc rcll or lock popa jne mov out divl (bad) rcll cmp jge jg in or mov fs arpl outsl loope out aad xlat mov pushf sub arpl add mov fldenv add jo cmp xorl pushf mov div test rcl push pop mov cmpsb (bad) adc mov adc lcall push jle (bad) repnz mov cwtl aad add aaa mov cli cltd imul mov xchg icebp lcall xchg xchg int3 jne adc xchg pop les test hlt (bad) movsb outsb fsub je or pop or fadd add stos sub dec fcmovnu or pushf std (bad) mov fdivrs push insb xchg negl clc mull popa push fwait popa jne sbb inc pusha or push (bad) decl or push fadd push loope and mov sbb sbb inc insl mov aam cmp xchg xchg adc test ret arpl insl aaa aad cmp xor in add loope and in pop lret js inc test nop push les loope push div in inc push or xchg adc ljmp mov dec popf loopne inc mov pop inc or mov clc push jp push test (bad) mov lcall loope cmp xchg cmp mov roll cmpsl mov mov mov cmp mov inc out mov add cmpsl or or cltd (bad) loope mov jmp addr16 pop jne xorl mov or fsubrl int3 (bad) cld push jns jne xchg loop cmp pop rcrb pop push mov iret insl inc movsl or dec cmp xchg inc lods mov push jo cmp mov in jb sbb cs call jle or sub inc in xor andl icebp dec pushf and push pop pushf loopne pop nop int imul cwtl dec pop xchg adc pop mov jnp or xchg lock lahf push imul push lods push scas pop or xchg adc sbb lock fdivrl mov push lret ret lcall scas outsb xchg push in std sbb push adc lret mov lcall jle outsb sahf clc (bad) xchg mov les repnz divb repnz sbb xchg adc push mov jnp xchg sbb mov adc or repz add cmpb jnp loop xchg (bad) test test jmp xchg sbb movsl adcl sub (bad) dec lods je cmp cmp push push test add addr16 in shlb lock lcall hlt pusha fs inc push daa jns arpl sarl jno ja daa ficomp sub mov xchg ljmp add in cwtl lcall fistpl push mov cmp in out movsb push pop cltd outsl mov in jle int mov sbb cmp jnp cmp mov pop sub icebp xchg add jnp das cs fstpt sub idivl cld mov xor sub mov jle dec outsb ret xor sbb aad and sub sub (bad) in bound jns dec jbe jge repnz test js movsl add scas adc push jp pop shr dec cmpsl jmp lods jne mov jns inc push sub stos mov xor pusha xor sbb pop mov sbb mov adc ret ja cmp or scas push aad aas inc in add repz push sub pop jbe rcll sarl scas into cmp arpl pop and or cmc repz lods test mov lds add pop add pusha scas call ss push (bad) cs pop (bad) std pop push jl xchg cld mov jnp scas xchg cmp xchg mov cmpsb andl add mov (bad) and loop adc push syscall call jno mov aam fidivr test cwtl mov dec out shll out push jecxz push leave jg add mov hlt data16 mov mov inc ja mov out xchg call popa (bad) fldt sbb loope xchg dec push cmp (bad) ret mov push aam enter xor mov jp push fdivr mov sbb mov jno sbb subl or push sbb test arpl or imul add mov pop enter out sub mov or mov aas in mov cmpl mov cmp xor sub sbb jle outsb aam jecxz adc daa inc sub mov mov fsub mov mov jp ret addr16 in pop outsl mov movsb pmaxsw and jne in xor das fwait cmpsb lods push or scas mov daa in xor rclb push and sub jno dec pop mov sbb dec push repz add repnz xor mov mov jne push cwtl popf and pop rcrl xorb ja pop loopne notb mov into in mov arpl mov insl mov fs idivb loope out out lret xor lock test inc imull movsb in sbb sbb out shll xor mov jnp mov cs or leave js je test test repnz adc je xchg shrb lea sbb xor xchg jbe sbb outsl push jecxz and xchg xor pushf out pop inc ja jle,pt add (bad) in sub test mov mov pop push and (bad) push add ss mov or push jl sbb call or clc call icebp (bad) stos inc mov inc out mov arpl xchg push dec jne mov or (bad) scas lahf enter (bad) and int3 leave mov in cmpsl shll stos loope mov add mov adc movsl imul in inc lret push sbb fisubrl fmul dec loop mov std in dec ja gs aas mov or adc and mov sahf ja push movsl (bad) xchg out fidiv gs lods pop pusha mov ret ret xor (bad) xor scas popf sub push mov call decb inc dec and and xchg mov stc mov repz nop adc pop pop nop hlt sub mov adc test cltd icebp dec es sbb int sbb nop arpl jl jg imul mov or movsb add mov and mov sbb or sub sub lret push icebp rorb mov pop sti fsubrl into rclb fnop sub scas mov mov and (bad) mov mov cmp and cli cmp pop call popf insl clc mov or aaa loop inc mov shl cmovbe mov stc ficom loopne lahf fbld xor shrb xor push inc dec in and cmpsb pop dec sti cmp inc jbe fs pop mov dec imul adc iret (bad) gs sub xchg nop ret push xor sub clc xor nop mov in fcomps jnp,pn or clc popa int test scas or jmp adc push mov lahf inc scas test push cmc inc sbb cmpsl pusha lret dec pop mov sub arpl sub push jecxz sub mov aas aad xchg rorl dec jns dec push inc cmpsb cmpsl cmp imul rcll jns adc loopne xchg test repnz stos (bad) iret mov aam imul fsts push (bad) mov jmp lret imul pop mov cmp cmp fldt repz push pop add mov jge xor pop push stos add add enter out fsts dec ficompl jno int3 xor dec imul rclb push mov sbb fidivl sarb repz xor adc pop js sbb (bad) aaa mov in movsl mov jge out ss int jb daa inc out aas (bad) jge pop dec pop add mov lods xor popf xor adc int3 enter jge sub test mov mov cltd sbb adc or or pop push test push sub and cmp outsl mov pop push rcl in clc pushf les cmp test sbb add loopne and ficomp jne aas pusha (bad) push sbb and je pop mov les rep push adc xor pop pop int3 outsb mov cmpsb jmp pop les xchg push push xchg ret icebp push std and xchg hlt sub jecxz push in lods push dec repz mov sbb (bad) jbe cmp rorb push shll pop mov (bad) dec inc lods inc and dec and nop std scas je mov sti shrb push rcrb nop push xchg mov xor int3 sbb sub (bad) into xchg mov jb push insl repnz mov and mov fsubrs pushf mov cmp ljmp mov dec dec mov outsb arpl xchg cmp mov call mov or inc push ret pop pop rcll cmpsl aad xor push mov (bad) xor mov cltd push mov sub pop inc push lods inc clc int3 daa cld iret mov push loop sub mov jmp adc jge push lret sub dec pushf scas mov dec sbb stc lret adc and lcall (bad) push int3 cmpsb adc cltd (bad) sub jmp in int loopne lret or and mov roll fstl mov xor (bad) negl hlt sbb push test arpl sub lock pop mov xor out sbb orl es (bad) (bad) inc xchg mov mov or mov dec fnstsw mov jae lret int3 inc bound add or sub push (bad) pop cmp aam mov jns adc pop jbe nop pop pop mov adc xchg xor adc mov push inc cmpsl and movsl shrl push jg push ret mov mov aaa push jnp les push jmp mov or movsl jnp xchg sahf sbb fs dec cli jecxz adc dec cmp mov lret fwait shrl jne (bad) dec cmpsb test xor jno adc push nop pop jle pushf jne pop unpcklps or insb pop das into sbb sbb cs test lods push lcall push repnz mov xchg rcrb cltd (bad) mov inc rcr xor mov out mov in stc cmpsl loope xor adc out xor (bad) push loope mov pop mov (bad) dec xchg xchg and inc mov jo or jl xlat mov pop scas js jg faddl mov scas insl xchg jno sub cmpsl cmp pop loop and ficom sahf mov mov cmp testl and inc fcmove notl mov pop mov es (bad) sahf hlt (bad) push adc mov pusha sub call and insl scas jo cmc dec mov xchg loopne ja lcall pop cs aad mov scas and sbb xchg jno test fidiv (bad) adc rorl imul lods aas jbe pop push push enter into push or xchg add insl xchg sbb xlat out or sub pop cmpsb out mov adc or orl rolb mov das pop sbb cmp jle sbb push push jmp cld sub cmp cmp sbb ret and imul je jne jp (bad) cmc mov in and pop and aam out arpl scas sahf js mov mov cmp aam pop push sbb outsl push jno sub jle add loope cs dec (bad) into or fiadd mov repz push sbb adc outsl lods mov dec js pop push mov sbb ds jns pop mov rcll movsb sti in mov dec sub pusha loop jne sub push (bad) jle (bad) hlt mov sbb nop cld pusha mov scas pop push fiaddl fadd data16 cld clc cld push push or add pop mov fdivp lcall mov push imul jb mov ljmp insb push jno inc (bad) ficomp orb and (bad) xchg ret daa mov mov mov dec fsubl movsb data16 cld ret mov fdivr test bswap pop inc dec test sub jecxz pop outsl or sub out decb rorb shll inc pop or bound xor ret jo mov mov out cmc out xchg and adc cmpsb bnd jns imul mov mov or adc nop cmpsb dec jge daa cli pusha fisttpll jg popa jbe lret nop aaa push inc mov or rol sub rep cltd xchg es (bad) int3 mov sarl mov (bad) rorl mov jae ss movsl stc push mov lds mov insb pop aam cmp dec push in outsb adc outsb push mov mov clc xor jb sbb xchg dec sti (bad) test std incl mov xchg cli out in push imul cmpsb lea stos sbb cmp rorl repnz (bad) hlt mov xchg fdivrs add push pop (bad) fwait gs cld or inc addr16 and pop sbb les mov cmp fiadd and or out (bad) mov or pmulhuw mov fcmovu rcl jae pop (bad) and aam xchg ja xchg and jns or (bad) xor scas cmp pop mov lods inc pop jmp pop push lds loope jne push lock stc mov outsb ficomp outsb pop push in and outsb adc in sub pusha call dec pop mov or push jmp mov xor mov add fcomp add fstpt jge movsl push xchg inc bound ffreep xlat or dec inc clc add (bad) fsts mov add fnop gs cld push mov adc imul addr16 mov dec jmp push add xchg jle push in and (bad) pop mov aas inc dec adc push (bad) dec jmp cmpsl push push ja pop mov aas mov movsl loopne mov cli cmp scas jmp mov push xlat or cmp mov adc dec cli (bad) jmp daa pop pop sbb lods jae dec inc or lret scas and mov aas xor push sbb aam jg into jecxz aas pop jne inc mov sub mov jp xor xlat loope movsl fimul cmp xor rcr cmp (bad) (bad) daa (bad) out outsl mov xor std daa loope pop and scas pop inc mov je add xchg pop sub cmp xchg xchg lret sub lret (bad) lcall dec dec imul in aam pop jo shrb jle rolb cli sar mov sbb (bad) sub pop (bad) cmp test sbb mov out hlt cmpsb xchg jno cltd mov mov sbb jns mov push shll or cltd daa mov scas xchg adc inc fisttp loop adc stos sub popa ds ficom mov cli jecxz inc inc (bad) (bad) stos hlt hlt movsl xchg xor (bad) cld into pop mov jle cwtl add repnz ds sub xchg notl xor and or sbb sbb orb mov mov rclb jae enter adc lea subl lods andl loop out lcall mov add jge xor mov sbb (bad) notb out cmp cmp out inc pop iret inc xchg sub push xchg subl pop pop cli xor cmp pop push xor dec xchg jecxz clc mov ret or pop jle addr16 rclb cmp bound stos shlb pop cs jno xor xchg (bad) mov rcl ret push dec dec xchg push jmp mov mov arpl mov sub setno clc dec hlt pop lret das adc sbb push sti jmp ret push inc dec cld mov ljmp sub das jnp loopne fistpll out cmpsl je call or sti cmp js (bad) stos js ret or adc mov sub xchg in loop dec mov jns or adc pop fdivrs dec (bad) out ffreep leave jle aam xor jg add (bad) (bad) xor cmp fs adc push sub xor dec adc xor das and lret jb cmpsb mov jno cmp cmc std xchg lds cmc mov mov pop and movsb mov mov xor ret fs xchg scas mov scas movsl xchg cmp dec cmp mov or lret mov cmp cli push pop je ds cmp imul fadd fildl push mov xor pop mov mov gs sub (bad) jb mov or out inc sti push jge or rclb sub inc (bad) jno int3 and aaa xor daa or iret inc lock fxch icebp ljmp xor sub xchg addr16 sbb dec fs mov cld push cwtl mov dec pop aam sahf test xchg cli loopne jbe xchg call adc pop sbb inc inc mov xor mov fwait aam mov pop lods adc aaa xchg jnp ja adc adc out iret popf add mov test cmpsl cli loopne push data16 in ret push pop aas inc ret jge inc out jbe data16 pop fs test inc mov insl outsb (bad) pushf and or ss outsl data16 test and xor cmpsl pop xchg cld jbe or lods movsb xchg mov roll sub int3 push sub cmp movsb outsl aas push pop cmc jno xlat push shrl inc hlt fistp lret outsb (bad) aas in out inc push (bad) xchg jmp push mov add push jecxz stc repz clc dec movl lods mov fisttp les arpl cmp and outsb pop ret sbb daa sahf hlt (bad) pushf pop mov icebp lods lods mov inc push fstpl stos dec int3 outsb push pop les mov leave ret dec std sti roll mov movsb sahf (bad) mov jle add sbb dec js mov mov sbb test les das loope pushf cmp xchg push sbb sbbl pop into jle push repz shrl pinsrw sub iret mov jge pop out cs and sahf les xor and cmpsb loop scas imul lods arpl and mov pop and and sar mov push shrl in das shll sbb pop jmp dec aas inc dec sbb decl popa pop fbld push lds std and stc jmp (bad) xchg cmp pop mov enter lea fstps leave enter lea enter mov sbb and add inc push mov mov mov loopne xchg pop mov insl xor mov mov mov and and xor sbb ret push adc jp adc stc mov rorl xor dec xor loop xchg and ret push loopne jns jnp ljmp es andl push mov push push jae add mov xor cmp cmp xor mov jp xor push mov mov pop push in pop arpl inc ret cmp addr16 or xor push icebp jb js and rcrl popa mov and arpl jmp movsl cmpsl add cmp icebp mov add mov xor xor jb jb mov repnz negb cmp insb iret jb test jne jns push push mov push mov xor les (bad) outsl xchg push cmp adc hlt frstor xor or sub push jne,pn icebp jge lahf out lods ljmp testb jmp arpl sbb pop xor (bad) fstpl push push mov fistp pop adc lds jmp mov cmpsl sub popf pop int3 push sbb xor cmc rorb int cld stos pop mov xchg loopne lret mov jge pop inc push mov jp or lds cli pop shl insb inc mov push mov pop ret repz mov stos jne sub or xor je xor sbb and imull sub inc mov mov mov add ja lcall mov mov push mov or dec mov inc int push (bad) push fldt call mov push sub pop insb push iret mov inc mov mov mov mov pop loopne (bad) rcr call xlat xchg imul xor cmpsl stos mov pushf fwait aaa movsb cmp jecxz imul repnz enter (bad) outsl add inc mov xchg cmpsb push add (bad) aaa add or pop fwait imul xchg pop hlt movsb in jmp sub lock push outsb stc cmp and cmp cmpsl xchg add inc repz repnz rcr dec xlat mov loop pop jb insl and sahf cltd mov add jge lea mov sub pop jg out cmpsl loop mov fwait ss jns push and lret or fbstp mov test add jp imul sahf lahf push dec jmp sbb xor fimul int3 inc jg popa repnz jecxz imul in cwtl fs loopne mul adc inc mov call arpl hlt mov inc aaa add fiadd mov sub outsl cmpsl push pop cmpl push pop add pop (bad) jo xor xchg (bad) pop mov popa sub popf cmpsb out add imul xor and jmp arpl imul mov dec stos std sahf cmp ss ss pop imul popa sub mov shrl add cmp cmp xor inc flds mov mov cmp aaa mov adc mov or lods fyl2x into stc jbe push push (bad) (bad) push leave test loop sub es xlat push scas xor ds movsb or ss sbb xor xlat out cmp std dec push mov addr16 cmc or jns jno push out loop (bad) ja mov stc xor out adc bnd enter adc addr16 adc popa arpl xlat test mov fistl mov adc ret subl cmp movsl gs push out mov push jb pop pop sub loop or push addb inc repnz sarl jb movsl arpl inc hlt aaa xor out mov adc push outsl ss leave sbb pop xchg ss push mov xchg or sub cmp adc jae sub mov dec (bad) push mov mov mov out lahf and add xchg cmp loop (bad) lcall xchg pop das jp out ret sub fimul xchg jg xchg lret and aas mov cs mov cmp cmp imul cmpsb loop popa ds lret js or (bad) cmp mov dec push stos xchg inc mov pop push insl sub sub cmp testb lret push push fwait sahf cmp lock lods pop mov sub push push xchg push mov or sbb rorb and push jmp jb fptan cmp xchg cs (bad) xlat xchg dec clc sbb hlt out mov orb lods mov cwtl mov pop pop pushf popf xor gs xchg jbe std dec xorl lock pop sub mov jp and cld pop ljmp nop ljmp test mov mov out sahf imul iret inc (bad) fucomp sbb jb lcall sub mov mov addr16 bound movsl repz scas jp sbb aaa fnstcw and aaa inc stc popf sub mov cmpsl xor mov xor icebp push mov push sub popf stos pop mov and pop iret popa adc cmpsl pop stos ja aad push xchg cmp add jae pop jecxz es push sub lods imul rcrl ss pop fnstcw sub xchg mov out inc push inc pushl cld orb daa jp or xchg arpl xchg scas push adc xchg leave insb mov andl imul mov mov ds mov or xchg sahf inc shl push out inc cmpsl fisttpll out or pop or ljmp testb cmpsb jo adc or pop inc xchg mov fstpl sbb rcrb adc mov jbe pop outsl outsl lock xlat scas inc icebp popa ror (bad) mov add pop xor inc outsl cmp (bad) test int lods add and jbe ja and nop xor shr int mov or push in mov shr in popf fisttpll mov leave imul xchg leave cld lea int in dec sub (bad) popf in mov int cmpsb sbb lods rcr iret int vandnpd std test inc sub cmc into mov ror cld (bad) (bad) pop fnsave lds in mov imul mov inc cmpsl xorl push jno sbb inc mov nop in sbb iret dec cwtl sub aas jae mov std push daa cltd (bad) int das pop jno mov push pop aaa in pop mov push leave cmpsb jge xor fsts add mov shlb aam cmp pop cmpsb (bad) mov jbe push and lods sub jo or lahf fwait cmp aad stc daa mov dec shrl aam jl and inc add loop (bad) lods gs push cmc jg,pn fsubs push leave enter insb mov outsl popa loop (bad) cmp push dec daa call add sub arpl inc shrl mov insb loop in and mov dec es outsl lods imul sar push cmpsl cli jl std push cwtl fwait cltd xor mov sbb push movb sub inc add mov adc scas sbb pop vcvtsd2si sbb insl cs cwtl aaa test sbb xor cmp pushf mov (bad) icebp and lret or inc mov xchg add inc dec repz aaa pop stc and xchg xchg xor lock cltd jno jl pop mov ret push xchg repz xchg fildl inc in xchg push push mov enter (bad) xchg leave add cli adc mov add (bad) in fnstcw repnz lcall add xchg (bad) cmp fistp pop sahf (bad) sahf into frndint push mov loopne and add (bad) and dec mov cmpsl dec loope jecxz cmp inc dec leave leave dec int int jge fild movsl fisub movsl fistpl mov xchg cmpl je les sbb je or mov inc sub cmp jmp pop sub fsubp inc inc loopne sub sbb adc stos pop jnp jae jae in fldenv and lods pop sbb sbb mov daa jg xchg push add lock jnp inc sbb mov and push out sti stos push (bad) popf inc mov xchg jecxz pop sbb cmp and mov clc cwtl fcmovb xchg push sbb je int3 orl int jae jo mov inc sub mov mov push sti xor adc add adc xchg faddl push mov popa mov jo or push jmp pop inc mov je jne mov adc shl inc das lds (bad) mov les cltd dec jno jle jo jo cwtl mov xor xchg xchg and add (bad) inc lahf hlt xchg scas jns jns jge movsb mov std orl inc dec adc push sbb aad int3 pop dec sub in std and xchg sbb loopne arpl jb xor iret mov sbb and mov push sub loopne xor cmp cmpsb shrl adc loopne sbb adc pop pop pushf push mov roll or or sub xor pop xor lods xor test pop mov jmp daa jno and ljmp call pop push add popf rcrb jns xlat es aas (bad) aas rorb mov xor push xlat xor stos inc scas mov jmp dec mov inc pop inc sub out les cmpb shlb sub push mov xchg sbb adc mov mov push ret inc lret and inc dec lcall enter add xor clc jo (bad) js sbb nop imul lods jecxz lret ja jecxz ficoml and lock sahf pop insb mov sarb dec lret sub dec dec sahf enter inc insb enter add cli sub pop push stc xor mov rcl mov ljmp leave mov bound daa jbe xor (bad) push xor xor jle sbb sbb sbb and jle jle sbb das xchg xor mov pop inc les int3 xor pusha mov jno or inc push cmp cmp sbb shrb jnp sahf or outsl jg jg xchg subb mov mov and or sub xchg fs add and push cmc and lcall sbb mov lret cpuid cmova pop push pcmpgtw mov inc fwait inc mov int cmc scas cmc outsl repz fisub rcrl xor sbb xchg rorb add mov and jae pop lea test movsl add pop or lcall fucom fucom aad mov std lret mov mov xchg or sub and xor cmp inc and xor sub inc icebp adc jae push jnp pop or (bad) lods mov in jo mov es jnp xor xchg fs fsts in and xchg pusha push xor xor mov (bad) call pop sub scas jl sbb stos popf jnp xchg jb in out pop mov bound mov or add fwait push dec fldl pop stos fcoml ljmp ret in popf push jge (bad) or push mov adc pop stc outsl std sbb popa add xor adc test push xor push cli insb mov add mov lret push rcll or adc mov push mov jne inc (bad) xor add loopne mov and cmp cmc repnz sti cs cmc jo fwait cmp inc add sbb cmp cli sahf bound fwait mov repz into mov fdivrl lret inc fsts mov idivb lret lods jb adc (bad) xor fwait (bad) mov enter arpl sbb sbb or sub and fdivl lods test stos cmp lock lock adc xor jg inc push push dec cmp nop mov adc jne lock mov lods aam imul push les int int cld scas icebp repnz mov cmp cmp jp sub stc inc and jge inc sub adc stc lret cmc lret popa daa dec test add cmp daa xor add lret testb pop mov lods xor hlt adc inc fwait inc stos inc stos (bad) xor add adc call lods cmp sarb test repnz je (bad) stos dec stos inc mov dec stos or dec (bad) movsb pop xchg mov pop jle hlt adc ret cmp push push inc test popf scas cs inc into and adc mov (bad) aam dec xor in fwait test push jmp jecxz (bad) in mov mov mov pop dec sub add mov loope or add dec sub insb lds (bad) out pop dec mov mov mov add push cmp push daa cs jle push cmp out test adc mov dec or inc lahf mov mov pop xor mov sbb (bad) sbb fnop push stos xor jmp (bad) or fisubrl jecxz mov (bad) pop or ljmp or loope (bad) push lcall ret bound mov push aad leave stos dec or and lock outsb imul cmpsb and or in sub push sub jo test test adc add sub inc incb push and hlt jo push in (bad) sbb sbb and mov arpl adc jecxz shlb and adc jle pop in pop loope pop adc or test lret sbb insb jns fcmovne sub cmp jbe fidivrl lods xor lock lcall mov cmc xchg adc push jo cmpsb sbb rol rcrb mov or dec or fcompl mov sahf mov ret lret andl push adc dec sub test stos ss sbb push add fldl lock inc pop add lret cli push lods cmpsb jne mov jge popf mov inc cltd imul data16 int test jae roll pop jecxz inc pop inc cmpl jno out arpl shlb xor mov mov inc stc push and fld mov push sub and mov mov jo xchg fidiv out mov sbb adc mov sbb xchg js pop adc pop aam lods rorl (bad) mov push inc mov sbb rorb test nopl (bad) cli and out getsec (bad) lret dec cmp push sbb rorb icebp jecxz aas adc mov xchg add ret fisttp and or pop mov lock adc and pusha jbe daa xchg jnp sarb stos inc es dec add (bad) xor sbb sbb xchg dec sub pop mov or cmp ljmp clc add in stos hlt jo mov pop mov pop pop test sahf push inc test jg ja insl loopne stos xchg popa pushf ds dec mov inc xorb divl xor popa xchg ds xchg out mov mov mov and js pop dec push cld mov ficomp inc pop push or mov ret stc ljmp lods mov scas aam test add xchg icebp ret lret jb push ret jbe scas mov jno sub loope mov out pop addl sub orl dec scas jne jmp sub (bad) lods dec mov lret fnstsw xchg jb cmp mov cmp xchg hlt insl or push jns clc inc push aas sbb push (bad) rcrb out push rolb imul add jp cs and push bound popa mov cli (bad) mov cmpsl add (bad) mov and inc into or or sbb mov lcall adc dec jp sbb add jb scas pop add pop test xor test adc fwait shrb xchg les sub (bad) je push pop cmp rcrl leave mov pusha fwait mov mov xchg stos fldcw xchg (bad) xchg adc mov inc int3 inc sub or cld jmp xchg repnz test jmp sub mov inc push xorb int loope fstpt xchg pop (bad) pushf cmpsb loope inc insl js jg xchg pop (bad) pushf cmpsb loope inc insl js jg xchg pop int mov leave sub data16 movsb dec inc std sbb into jecxz dec cs insl scas cmp loop stos (bad) aaa repz (bad) xlat jge loope cmpsb lcall ljmp mov and fisubr bound or jae incb jl cli sbb jge cmpsb dec int3 test inc int3 xchg lahf inc add mov jmp sub jne sub sub jmp adc inc jae mov cmpsb or ja mov lds push sbb int3 jp push xor (bad) (bad) ret repnz aad ret rorb gs cld test cmp popf insl xchg sub and mov rcll push cmp aas aaa pushl xchg push add fisubr aad lcall loop rcll mov rcr std sbb (bad) ucomiss andl inc xor jge xor pop adc (bad) jbe cmpsb mov dec or into ljmp mov jl cwtl cld jg lahf mov (bad) xchg xor adc adc xor icebp and daa fnop xchg jecxz mull mov adc xlat mov jecxz mov xor pop sbb pop or fist mov pop sub setge and rol fnsave adc (bad) enter xchg jns pusha ja xchg push push fs movsb mov fcompl jmp pop pop push mov stc add subl ljmp jmp aas or xchg adc leave (bad) xor pop mov xchg in push iret sub repnz or mov jl loope (bad) pop inc adc mov mov hlt icebp dec data16 inc push mov xchg jmp jmp ss lds addr16 adc int dec jl mov clc popa jg lret push xchg push lods shrl movsl repnz push in dec mov andl mov push sbb xchg loope mov fistpl mov jl push repz imul daa inc cmp mov fcmovbe or xchg push inc push movsb imul pop movsb mov out push movsl cmpsl mov es or in adc (bad) aaa mov inc fildll xor mov sub or xchg dec gs push iret pop je jge out movsb (bad) cmpsb jmp jb (bad) movsl sahf (bad) stos sbb push in ficom repnz imull cmpsl xchg push pusha popf jne cmp mov xchg repnz pop add mov pop sbb adc inc in aas adc lods jmp out test in je sbb mov add mov ljmp jge mov pushf xor pop sbb adc fiadd enter pop call fildll je push cmp cmp cmpsl test push jmp mov inc lods push jo jg fstpl sub in push mov (bad) ss (bad) mov adc (bad) adc pop out popa dec in sbb scas into add or ds hlt jecxz dec pop jns jle pop shlb xchg enter sub sub sarb (bad) or cltd fildll pop fwait cmpsb popf jne xor jns daa and loop xchg jne insl in xchg xor jmp hlt push xchg mov ss or xor in jg xchg xor loop testl jmp cmp dec js jb (bad) mov (bad) or mov and push stc gs pop jno dec xor es mov or xor into aaa or sub sub mov ds pop stos inc lea sub sub mov dec mov inc mov inc rolb xlat dec (bad) mov or xor loopne sbb jg (bad) dec or and in or fld jg,pt test xchg lods mov add lret dec bound xchg sbb mov iret pusha adc pop mov jbe mov xchg pushf clc cmp xchg sbb sub sub mov mov sub push mov dec es data16 xor xor call or dec fistpl sbb outsl popf jae fucomi jle push in std add addr16 rclb xchg add daa fcomps sbb mov test iret add xchg dec in add xor pop mov ds xor ficomp pop add cmp pop pop xchg test jae arpl and cmp dec repnz scas or mov add cmc arpl mov mov std scas fldt ss addr16 out xchg fwait sub popf popf xlat mov (bad) fnop cltd or incl sti pop movsl aas adc movsb sub xchg jle xor push outsb or sub pop mov popf decb repnz mov jns and mov clc and or stos and jnp (bad) sti add fisub mov push cmp mov xor adc js enter xor nop fidivrl mov ljmp cmp sahf cwtl mov xchg pushf pop lcall loop xor in or cmp cmpsb cmp push dec mov lret jne aad push loopne jmp out iret pop xchg aam call icebp add sbb adc mov ret jl movntq xor and push xorb call mov fistl xchg loop cmpsb mov test orb xor dec add push out jg push xchg jo stos fcoms push push mov out bound push pop jnp and dec lds cmpl scas lods mov adc div cmpsb or mov dec mov faddl jb mov ds mov pop or fwait jno test pop fwait aad cli (bad) lcall pop jb mov ss repnz int insl sbb mov mov outsl in jb add lahf das lds int mov pop inc dec addb jb jmp mov mov dec adc add pop aas rcrb mov jl jl data16 mov data16 mov lock push (bad) dec adc movsl push pusha adc gs imul lcall repnz lahf jbe mov ljmp push inc mov faddl popa outsb sbbl inc cmp add frstor fistl ficompl insl out lods push dec push cmp sbb je add mov sub fldcw mov dec in int mov popa jg cmp xor mov arpl xchg imul cli scas fsubrl sub out je in dec pop jmp xchg adc dec stos ja xor dec (bad) outsl mov fisttp popf xor push andb xchg repz ficompl imul xor dec ret sub jne or gs (bad) cwtl shrb sbbl call outsl arpl imul (bad) ds xor and and cld sub push imul mov push mov xor ret adc or das test jmp jnp aas jecxz xor inc imul mov loopne add sarb repnz cmpsl cli bswap ret mov test jo out adc bound cltd sub adc stc ss or sahf out add mov push mov sub popa and ljmp mov aad (bad) movsb sub push mov dec push cmp enter add bound lahf movsl in xor add cmp cmp push imul xchg in cmp test add add dec and outsb (bad) and xchg sub leave fnstcw ds jl test sbb pusha lahf arpl and mov xchg jg shlb ret loop test jnp push push insb aam sbb adc xchg mov sbb (bad) clc in xor and insb adc cs rcrl jp (bad) mov xor xor sbb mov mov cmc in xor out xor mov mov mov mov test clc mov cmp sbb lods xchg mov xchg lret mov or adc mov and outsl xchg divl inc push lret xchg pop xor je dec mov or inc aam xchg ljmp test mov js dec repz in lahf lea stos xchg inc jp (bad) mov pop pop or das fs xor lahf mov push prefetch enter sti pop push jne addr16 dec je pop and mov inc movsl movsb fsts aaa or (bad) test icebp in fcompl mov jnp jecxz lods pop cwtl or pop outsb mov xor xor cmp aaa test mov add cmp adc adc sub mov cmp out je xchg rcrl pop lcall mov aas rorl sbb std push leave dec mov mov cmp (bad) dec xchg loopne adc sbb push cmp xor sbb in mov ja mov lods xchg sub push cmp lahf sbb aaa xchg in (bad) loope pusha fdiv inc jb ss sbb cmp and cmp (bad) loope sub (bad) xchg int3 jmp jno lahf sub es sub adc decl push daa inc mov push arpl je add sub fcompl out cmp pop repnz fucomip sbb mov jmp loop dec in mov sub into imul push xchg outsb push int3 sub xchg push push int3 icebp pop mov pop hlt fisubl scas jae adc cmpsb lcall pop mov and fild mov int3 xchg cmp ds ljmp mov outsl fidivrl scas bound mov jb lcall xor xor mov push and lcall jg xor push fidivrl mov ljmp xor lcall xchg mov movsl jmp rep fnsave movsl (bad) jmp fsubrp test repnz and in fdiv inc addl jg and stos fistpll and mov sbb (bad) in jbe cmp mov inc aad sub push mov jae mov enter fcomps cmp imul gs push mov xor addr16 mov adc fwait test xor movsb rolb stos imul stos cmp pushf pop push jmp addr16 cmp jbe push push repz cld sbb data16 dec es out sub mov adc push test les cltd push mov lods xchg mov mov neg sbb push lret aas add dec aaa push pop addl and (bad) in xchg mov int (bad) mov sti test in es sbb pushf xchg pop jecxz out dec xor test mov jmp (bad) mov and mov push idivb je xchg adc cmp mov cmp lods xor jne lods pop dec push push dec mov (bad) and xchg lock (bad) mov (bad) xchg stos sub outsl scas mov jge fmull dec lret and test inc rol mov cli andl dec imul jmp ds enter inc cmpl pop and scas lods mov add add bound loop,pn addr16 loope xor dec jg ljmp jae bound int3 pop mov das fnsave nop stos insb scas fiaddl mov push test xor push mov pop lea sbb lea xchg xor xor pop clc negb mov cmp xor rcrl aaa inc stc iret cld mov pop mov inc out cmp stos arpl pushf add data16 fbld pop loop call call add dec jle push lds sahf data16 test dec mov mov inc aas push aam xor xchg pushf jno inc (bad) mov in pop lret cmpl (bad) mov std rcll (bad) and (bad) push enter les lcall xor or loope sub inc shrb std cmpsl cld enter mov in cmp add and pop pop mov jmp sbb popa in lahf pop frstor push aas xor subl scas sbb and jle sub cmpl push xchg addr16 cmp in fbld lahf adc ficoml out mov test cmp inc repz stos or fidivrl popf adc jb and push add pop adcl and insl fdivrl push adc mov xor or in loop inc popa insb hlt sti or mov leave (bad) cmp lahf and bswap sahf mov das mov rol rcr iret xchg aad js rcrb mov cmp dec pop sbb aaa and jp stc loop jl cmp cmp es or adc or in pop xor outsl hlt mov aad (bad) mov mov fcmovbe mov push arpl fild rorb xor fcmovnb mov cs push mov mov (bad) cmp ljmp push mov into jmp jae mov movsl dec xchg xor fucomp pushf neg into repnz outsb imul popa mov or test xchg lret push movl in xor mov cmc xlat in push ucomiss add inc lret sbb inc adc inc lret repz dec mov loop (bad) sarb andl inc lock inc popf sbb cmp clc inc jg sbb pushf loopne mov adc mov pop mov mov mov or cmovge xchg push movsl mov and lahf mov add test (bad) dec (bad) or popa pop push inc cmpsl xchg in xor in mov in loope cltd (bad) jb xchg loope mov add mov imul lds add mov mov (bad) jno adc or add test adc mov fildll mov call insl and fwait pop ss push repz xor mov push cltd popf aas jmp push inc cmp mov and lahf gs jle xchg je sbb mov les lock fcomps push (bad) ret imul test mov sub add add and xchg ja pop (bad) mov add cmp jbe fistp mov adc xchg or push push cmp xchg mov cmp cmpsl (bad) mov mov xor jg cltd mov push xchg and cmp jmp sbb mov cmp sti stos iret das mov dec (bad) lahf and push cltd xchg xor (bad) mov insb jmp lahf stos das sti sti mov mov mov insb lret repnz sub jbe or and cs inc or or and push and outsb add cmp adcb test stos aam sub inc cli mov (bad) xchg stos rclb mov aad loopne mov daa sub cmp jnp loopne or jge jne enter stc dec jno xor jns lods xor mov fdivrs pop mov sahf mov fs imul xor and adc jecxz into loop and mov pushf xor jge into rcr fdivrp arpl sub xchg mov lahf (bad) or mov fisubr in add jae mov add lock jp push roll inc daa pop xchg adc xchg in adc jl jns add xchg or fcomps push lahf lds popf pop mov outsb pusha xchg out or mov xchg daa mov mov nop push out pop jmp ret inc mov pushf push (bad) fldcw add or cmp enter or addr16 jnp scas test inc inc xor xchg mov mov rclb and insb aas fs out test xor jbe imul jno xchg lcall rcll mov (bad) mov sti into outsb sbb icebp clc jb ds xor mov mov mov xor out xor sub movsb inc push add nop mov sti dec xor sub incl int sbb js jo call xorb icebp popf out pop ljmp pop jns and iret or mov inc cmp push faddl fbld sbb jb dec push sub rcl popa mov lods bnd cmp fcompl (bad) ss or jecxz in adc cld xchg aas sub roll cwtl and (bad) jmp add repnz ja sbb lea cmp hlt stos sahf test and mov rorl ret push (bad) jmp mov stos fnstenv dec and push pop imul loopne rclb sti inc ljmp aad out fisttpl cltd adc ficom sbb movsb xor dec hlt sub (bad) faddp add push mov add mov cs push ss sub adc xor cmp idivl sub js (bad) jae bound ficoml rcrb movsl xor push lds (bad) and inc loope int jnp insl clc dec mov or sbb add in pusha xor mov std int in pop in mov jge scas ret mov in (bad) pop aad or ror in inc inc dec ror pushw jns adc mov lds (bad) popf (bad) negb cwtl stc shl (bad) mov in and push popa push lahf pop pop (bad) and mov movsl xlat pop lea pop mov jns mov inc leave in mov xor inc mov out push js popl shll jns mov icebp jns fidiv push inc repz add pop push inc jl cmp insl xchg add (bad) mov dec pop cs cmpsb movsl pop icebp cmpl pop outsb cs and push inc cmp dec lahf dec inc xchg (bad) imul xor xchg cwtl jmp mov pop jbe movsb jmp add psllq sti bound stos lret inc dec push test adc sbb mov lea jg test mov push bound xchg adcb push jmp test lea pop out sbb (bad) jmp iret clc fs adc lret mov jp shlb nop add cs repnz inc cmpb sbb add or imul cmp adc pop push adc fwait push sub cmp dec jl mov mov dec leave (bad) cmp movsl (bad) xchg hlt ret adc add push in (bad) aas jbe sub xchg das pop ja and dec and bound or dec sub dec mov mov push aam ss xlat mov lcall gs inc cmpsl in mov arpl mov cwtl movntps mov cmp push sbb hlt mov xchg out fwait mov (bad) dec xchg mov cmpsb imul jne xor lcall outsb fprem1 and aas nop xchg data16 or movsl pusha movsl mov lcall cmpsl cs jle mov inc lock sbb in mov insl iret xchg mov and fwait js xchg sub cmp dec lret sbb cli test jg xchg xchg pop (bad) rolb push mulb icebp or add push je sub mov sbb mov dec cld arpl out pop out cs (bad) mov pop pop cmp xchg frstor aad (bad) push int3 or lods xchg (bad) std aaa and stc and add inc popf mov adc or lcall mov add lcall and cmpsb out (bad) adc and add lock sub push pop aaa push cwtl scas jno sti outsb hlt je adc cli pop jmp fdivs or loopne,pt pop add js (bad) sbb stos push mov ret add inc jle sbb outsb push daa add cmpsb push movsb fdivrs ja loope loope jmp sub xchg pop (bad) stos or or movsl mov xchg dec (bad) dec jg push aas fwait fwait in sub icebp fnsave fnstenv (bad) repnz push (bad) push (bad) dec dec cmp or sub test inc sbb lcall dec stos in jp mov daa lahf shr and sub add or stos fldl 