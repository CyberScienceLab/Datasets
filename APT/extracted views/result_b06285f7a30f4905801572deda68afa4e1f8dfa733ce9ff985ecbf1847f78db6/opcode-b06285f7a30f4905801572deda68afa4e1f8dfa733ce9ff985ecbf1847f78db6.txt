(bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea fs add adc (bad) incl lea push call inc mov add mov mov add inc add gs push (bad) jge out pop mov int3 rep cmp mov mov add push and adc jne add in and mov fs cmp push inc es push add add add xor jo jg cltd inc andl test mov mov sbb sarl add or or push push sub add mov and or rclb add mov lret xor gs clc add fnsave in cmp pop movsb cmp or xor push mov dec mov imul shr push xor push push lret or outsl fldt cltd add cmp dec je add sbb pop push and cld cld cld cld push sbb adc or mov inc (bad) int3 arpl bound das mov test (bad) (bad) call cld iret sarl dec movzwl push add add xchg int3 icebp cmp cld mov or and or mov xchg push xor fwait loope pop mov push push mov unpcklps pushf insl add jl,pt pushf jbe out sub inc inc and push das subl pop and push insb fwait push leave je dec je inc dec push mov jo cmp push cmp and mov adc leave or add test fs push push daa fs add or outsl pop ret sub adc add clc fldcw sbb xor push rolb test cld fnsave das lahf fnsave mov sub lret lahf adc sub cmpsb clc outsb or xor push pushl push sbb or xor sbb pop lcall inc dec xor pop insb xor sub dec sub pop nop pop pop cmpsl and pop sbb pop das push or pop push xchg or adc mov sub push push push adc xchg xchg or push mov xor (bad) and mov clc mov leave inc (bad) call fstp dec mov push push mov xchg sub adc push mull mov fcom in push xchg mov pop pop pop add leave les xchg fcmovne and push jnp cli or outsl jne popf mov xchg add jae sbb fs cmp or push imul imul pop test jmp xor jge xlat xor push fs mov mov jmp enter clc sub std insl inc sbb (bad) cmp sub mov jbe movsbl inc inc shrl (bad) mov loopne lea loopne xor push inc cmp jb pushf xor jbe sub int jb mov mov cmp neg ficom fisttpll or xor xor xor test decl lret add pop rolb pushl xlat add imul xlat mov shr inc inc cmp data16 or adc jb pop adc mov pop loopne shr mov out (bad) out or add push mov mov cmc loopne add dec es lock outsb xchg test mov push sbb push and mov inc jmp add mov push or push mov mov mov xchg hlt or iret jp inc push call (bad) jmp dec mov mov in jb jge mov pop mov and cmp or push mov or inc push (bad) jge xor je es push and xchg out fcoml cmc pop sti out lods int aam imul out jo xor sbb push jecxz insl cmp sahf sbb sub clc (bad) cmp jne push clc fstps push (bad) int cmp insl pop sbb sub clc ror std data16 or loope arpl into arpl xchg and fistpl cwtl std (bad) sub add jne (bad) loopne in xchg nop daa xchg clc mov push pusha add mov xor mov mov loope dec cs scas lret (bad) ret xor push dec adc or in scas jecxz mov icebp mov jns mov mov pop andl add add lea (bad) dec in sbb stc adc mov mov mov cmp imul add add or jne push push jne or jne imul push or jne bound add rol add cs pop inc adc xor (bad) je sbb neg insl lods mov jbe cmp jno (bad) jne (bad) xor rorl push loopne or xor rorl or or sti outsb mov dec xchg (bad) jne mov fsubrs cmc xor mov push movb adc fadd push push mov and and pushl repnz les ja loope inc add inc add or test xchg hlt pop cmp cmp jne xchg ret fs cmp jge jp add jmp push xor lahf rorl xor je fs inc adc push add fcmovbe add jl dec push jmp push push inc sbb pop ljmp cmp addl idiv add popf decb fadds jle lea push stc sti adc pop xchg lea cmp mov jns imul cmpsl movsl cli push shlb ss jbe mov dec dec pop push cmp jnp es or in mov andl mov dec dec jo add add adc pop mov jae jns std jo inc pop test (bad) or mov js in out ja push (bad) push push sub ret xchg loop push cmp cmpl test cli push sub dec push add lock pop bound jmp daa add sar pop or add dec ret inc lock scas mov mov movl leave and dec pushl test xchg lret orl insl and xor sub pop xor cltd sub pusha sbb xor cmpsl jnp push add push push fbld movsb adcl sbb xor cmp sbb mov cmp mov aaa adc sub and dec mov add cld dec into or xchg pop js mov decl add pop (bad) sbb gs jnp mov stc xor pop and push push imul pop andl mov adc mov xor xchg (bad) (bad) cmpb cltd arpl sub jo mov xchg and ljmp lahf mov call dec push lock jbe cmp push push mov jmp je mov cmp repnz cld fildl push jae jecxz and push mov out dec xchg push shlb add sub cmp dec hlt inc pop sbb mov push lea (bad) mov push xchg clc push pop pushf enter push adc jge mov and enter pop dec int3 jne dec sbb lret clc cmp fisubr xor mov or jo pop cld adc adc sub pushf mov in icebp mov insb popa push or mov sub inc movsb mov (bad) enter cmp pop clc jne imul popa nop out ss in push out jbe sbb nop movsl add pop fsubl sbb shlb and cmp test test mov mov outsb outsl lock mov fwait adc jo push adc xorl mov or and inc cmp cs outsb mov cmp sbb mov mov dec jne or sub pushl xor out mov adc jne pop popl shr adc or je pop add or and sub cs in mov or mov pop or bswap jb lret call sub pop mov or (bad) mov loope aaa lds call fmull dec sbb fmul mov fcmovne adc mov rorl clc mov xchg cmpsb lock stos push jb pop or mov and dec mov mov les or loope mov in push add adc loopne adc je push hlt out addr16 adc ss and or arpl js leave pop je or nop dec ss insb mov and and dec mov or loopne bound mov push adc mov jae xchg push or jl gs xor mov out iret cmpl fistl aam sub push mov in push pop mov lods repnz hlt inc jae dec sbbb pop mov cmp scas ja and pop or call xor xor aas outsb adc fcompl out test lods sbb adc daa rorb add rcrb test mov cmp dec insb loopne lds xor jge ja lea push cld rorl mov clc je sti adc (bad) sub inc jae repz mov jae cmp sbb mov repz jns int or xor fildl andl cmpsb and and daa aas mov (bad) pop sub pop fcoms repnz repz mov add cmp loope pop mov mov dec lock add and mov push and push xchg enter and fwait in adc sub push sub sub outsb lret sub sub pop xchg (bad) mov and in xor pop jbe mov sub pop cmp mov mov cmp cmp pop aas or inc and mov inc or dec mov pop mov dec dec cwtl dec dec and fnstenv push push push aam imul push jnp pop pop imul int pop pop dec movsl fstps popa scas bound mov mov int3 lret (bad) xor out data16 lret in mov push adc insl rep insl sbb clc inc mov je jo ret xchg fdivrl fs jl icebp fcmovne adc xor inc (bad) scas adc cltd sub cmp je (bad) cs adc push or or xchg xchg mov out mov int3 mov insl adc orl jne pushf sbb mov sbb xor cmp call sub inc pushl sbb add jbe and mov mov mov sbb xor scas and adc mov push scas and dec push pop mov add int data16 rcl bswap sub and mov test insl pop int3 in sbb dec into jb add jo enter push daa sar and ret call push daa ret pop dec xor (bad) mov aas cmp cmp pop sbb mov movsb adc jmp std (bad) repz xchg xor and sub pop imul push mov or in sbb push flds (bad) rcll insb int3 loopne mov (bad) roll fidivr add cs pop mov ret sbb cmp fldenv clc push jb inc xor jnp sbb jge lock pop jbe xor dec push push mov push xor lea push mov call push push mov jo lock mov mov fcompl jmp nop sub mov js pop mov or mov hlt rcrl repz test jbe,pn ja mov pusha mov int (bad) and push hlt push (bad) lock inc mov out cmpsb iret test (bad) and jne cltd inc aaa int3 add sub test mov push in jo jo out call insl and bound ds mov les cvtps2pd pop mov inc movsl xor lock inc es rcrb cs mov (bad) js incl mov imulb and cld fbld mov dec adc dec adc jae arpl sti lahf adc std leave adc push or das and cmp es mov inc add sub sahf pushf call inc or mov cmp xor dec in or div mov push pop repz pop ret push add in or inc stos push mov push push test les and std jbe adc adc stos mov sbb xchg test mov shr cmpb jne orb inc jne xchg fldcw pop add or and mov mov pop jg xchg in pop hlt add rcrl sbb jmp jge dec in push sub loope inc push int push movsb sbb push jbe mov xor lea iret fs or xchg outsl cs or add cmp jl sub imul inc xchg pop jmp (bad) xchg aam jo or inc dec dec sbb pop in popa xor push xchg daa fidivl xor outsb dec push cmp inc push sub insb mov pop jge je aaa imul js mov jnp pop decl jmp cmp or decl add xchg sbb dec add rcrb loopne jne mov push std insl (bad) dec mov adc push insb and inc jnp sbb add addr16 jmp sub inc (bad) push pop imul in pusha pop push push gs arpl mov enter mov imul push pop int3 test ds dec shrl add and cmpsb mov xor pop and add popa test cld imul insl jle dec adc or aas pop mov pop lcall pop insb xchg or insb in pop xor nop movsl sahf adc or xor push movsl mov jg or rclb push leave xor jge jmp addl push clc outsl push mov push fs cmp sub add and mov push hlt push inc sbb sti mov ret inc xchg mov cmp popl mov mov pop je push add xchg cmpsl or lods cs lret and outsl scas outsl jb xchg mov loopne inc xor dec dec sbb pop leave enter or xchg out sbb hlt add lahf or xchg cli cli lret dec enter in mov (bad) rcrl enter mov test js jl and cmpsb dec (bad) mov ret loop mov cmp adc cltd enter js,pn sub cmpb hlt push fmull inc push into mov and fildl jp push movsl cmp xor inc pop sub pop ret sbb test and xor inc adc pusha push sbb test cmpsl cwtl xchg shrl push cmp mov push lods cmc roll addr16 movsl pop stos mov adc xor in pop outsl cld inc jo (bad) and xor movsl cmc add add pop push lock inc or xlat add mov push cwtl mov fcoms jne lods xchg sbb mov mov fdivrs xchg (bad) sub fs mov orps jne lea xor pop adc bound ss cs jge addr16 pop lret push push or ficom mov push push push (bad) dec adc or (bad) xlat add push jge clc orl and dec pusha dec and imulb inc jmp or in push mov pop pop pop dec test lock fsts adc pop test xor jo test dec xlat fstl xchg idivb decb mov xor jmp dec out cmp pop sbb push int push dec ret rolb testl aam xchg leave and jb rolb xchg push leave fistpl (bad) movl add add mov push add lods sbb cmp pop cmp add xor (bad) insl xchg out push sbb lds push pop insl or sbb loopne fmuls imul sub xor movsb mov insb dec cltd enter ljmp pop mov insb sbb out pop mov and inc add shr les add rcll pop sub cld mov mov loop aam movsl movsl data16 cli sbb pop (bad) int dec fisub lods and jbe adc js (bad) dec addr16 mov pop shr js lea sub outsl push leave pop mov cmp punpckhbw push mov movsb adc out adc push idivb mull inc cltd push pushf clc dec inc notl sub cmp les xlat inc sub je sbb test sbb scas mov mov cmp mov stos push mov xchg enter js jbe gs cli mov jnp fist sub mov dec mov xor dec aaa pop in mov sahf sbb mov pop jge aaa sbb xchg add pop adc addr16 call sbb addr16 mov xchg xchg idivb mov mulb in ret inc push xchg sahf mov push stc mov mov mov fwait jmp imul idivl add and mov pop sahf sbb pop lock imul or cld data16 push daa and ss clc std sub (bad) loopne,pn add ret xchg mov push fistpll subl jmp xor mov mov add ret add and or or test movb test push pop std fldl add jle pushf daa or xor mov mov jmp mov add pushf jo push in in sub pop jmp int3 jle rcr push jne loopnew (bad) ss dec (bad) movl outsb mov pop bound mov lret push btr add sub inc mov xor dec inc and fdivr mov jae mov lea jmp lahf adc sub jno mov mov fisttp push leave stos enter ret loopne mov cld push (bad) mov adc jge out jge dec cmp mov ss aas das femms xor mov test pop and fldl or add or outsb mov xchg rorb or mov ret push add test test aaa dec or dec add xchg dec jbe cmc hlt inc andl push or push enter jg loope inc add pusha inc or pushl mov xor or enter push ficom mov sbb xor or xor mov xchg outsb data16 pop mov sbb cwtl (bad) lcall pop adc or loopne xchg ljmp sbb push shl fbstp addl ds das mov popa rorl mov xlat test cmp jne or data16 sbb notl dec mov mov dec or jne cld sbb adc aas adc fldlg2 and pop js and pusha mov and pop xchg pop sub test or loope and adc cmc sbb lock push icebp adc mov jle mov cmp fstpt imul jne dec test jg add lcall imul sarb movb dec jo push pop or stc clc movsl clc xchg in adc xchg or aam (bad) dec sahf (bad) flds pop adc push cmp sti jne jmp and lock mov cmp nop (bad) push xchg push or (bad) fisubrl repnz dec cmp cmp idiv or adc mov dec push mov mov int and add gs pop loopne or cmp sub push idiv sti or mov adc mov and add mulb arpl lds push pop push pop xor iret or cmpb and push cld mov fildl push fild sub sub inc adc push insl push in (bad) das xor pop es jb and lcall push and push or (bad) push scas pop icebp test mov push cmpl inc sahf ds mov std xchg cmp and std mov pop push lock movsl movsb push rcrl or fstl hlt cld cmp dec push in in jmp cmp stc mov pop in cli loope inc js cli xlat (bad) xor loop sbb sbb xor call or sub and mov ljmp mov adc outsb fnstcw or adc jo sbb shrb xchg enter mov push shrb mov push dec aas sbb out inc repz into sub outsb mov or xchg fldcw inc or leave add clc pop into into into dec lahf and push and mov nop js add (bad) xor sbbb pop jno mov cmp push nop cmpsl xchg push or inc push aam sbb lods cs adc out js sbb or scas adc (bad) xor repnz add inc movb mov scas mov push sub sub or sub pusha sbb jo sbb sbb iret and in or jmp or insb in mov xchg pop push rcr mov test movsb stc test dec (bad) or test adc jns loopne je mov inc inc clc jl adc cmc rorb pop das mov jo and add cwtl adc lods or mov sbb sub loopne mov push xor test loopne adc jg dec clc jne cmp pop pop out sbb dec mov add mov fs push or test gs sub mov or inc adc pushl addl push dec out cmp cmp scas add xor in sbb adc inc in cmp inc xor cmp push clc mov test add pop enter inc add sbb clc sbb (bad) in or cmp adc jb xchg adc (bad) scas sar pop sub pushf push xchg out xorl push push and xor fmuls (bad) mov inc aas (bad) inc xor add fldenv pop mov rorl mov test adc fdivrl rcll loope or enter or mov or aam mov xor jns fisubr je arpl push repnz les push (bad) je lods int3 in insl fnstenv enter sub pop nop sub insb in pop mov cmpl jl inc or xor pop mov push add outsb add in (bad) or ret movsl fdivrl in cmp les inc sub data16 xchg sbb dec daa je mov xchg int push mov push popf dec int3 movsl inc call mov pop cmpsb loopne insl inc mov xor dec dec and jmp inc movsbl testb or aad push inc mov pop idiv push push shr or or fucomi jg sub (bad) sub neg push and jmp ret or xchg jo fld popf nop mov add mov cmpl mov hlt sub or cmpsl sbb pop xor in jge dec pop leave adc push nop sbb inc mov jmp data16 jb jno pusha pop mov fcmovnb pusha and dec ret bound cli jp loope outsl ss (bad) add mov cmpl adc ljmp and jmp lret aas stc lock push fdivp shrb repz pop sbb jg inc xor sti enter in sti push adc or jnp dec pop fcoml and sub pminsw sbb mov xor adc clc mov pop mov js xchg or mov pusha dec xchg in (bad) fistp sti (bad) sti mov pop in loopne push test xor push dec cwtl xor ljmp xchg push xchg fs push add adc mov decb cld cmp or push pop jmp (bad) xchg pop mov add ds push test adc int3 cs cmc decb add jns push push imul inc or or jo cmp pop push or push lock test (bad) fidivrl incb incl jb jo mov ret add and and cwtl inc xchg addr16 incb fildll mov push add jmp pop cmpb jge sbb in hlt fucomp push in ret push inc fs cmp in bound jnp imul xchg lcall dec add loopne mov pushf dec sbb leave lock adc call inc pop xor out push jne lea and mov mov mov xchg mov and je,pn dec xor push xor inc xlat daa mov repz add jb test ja mov (bad) sub and jg sbb and stos pop lods push pop test pop add mov push sbb outsb adc push xor jnp or (bad) ds cwtl pop pop mov data16 and mov repnz mov add push inc jg mov mov adc sbb mov (bad) xchg cmp push add es pop mov ljmp or pop xchg jae lret aas mov adc jae ret jge decl mov push pop inc cmp decl sarb mov push push sub std and call sub inc sbb psubq idivb add (bad) cmp cmova cli xor sbb add mov and xchg push imul and mov xchg insl dec add mov inc mov inc test pop fidivl add or or jle inc outsb dec or mov aam orl xchg stos mov dec push jl ljmp mov push clc push xor inc lcall icebp addr16 mov or (bad) std push cmp jb and mov mov xor cmp stc pop (bad) aaa and shl add mov xor ljmp arpl cmp outsl add js shr shl add ds pop loopne pop jb mov cmc clc negb and add push incb fneni(8087 dec hlt push pop mov mov pop adc aad ss out inc aam sub cwtl test in push jp pop add push scas inc or hlt std adc mov movsl in lret ss frstor cmpb or inc adc cwtl adc and rolb (bad) or out dec or inc jne cltd andl addr16 cmp cmp aam (bad) inc add mov mov cmp cmpsl mov iret or cmp mov sbb cltd cmp rcll (bad) pop push add mov les pop mov mov fcomps je pop leave paddq push sbb xlat cmp dec sbb sub inc xor inc pop push add mov add and lea test js lret shlb mov (bad) adc mov and mov push mov idiv and pop mull jge out orb hlt dec clc mov jne inc push add jl and xchg fistpl sbb xchg add pop outsb push mov into push lea in pop jmp mov popa sub out xor subb jecxz test mov fnstcw idivb pop in jbe add cmpl insl jmp mov (bad) loopne pop jg ljmp sub dec and pop adc fbld mov or hlt (bad) cmp or mov push mov sub testb or or mov fldcw or pop nop jbe push sbb sbb add sbb adc cmpsb push shll xor scas pop out rolb shll testb add pop cmp ds out sbb push clc (bad) mov jne dec je clc xor push stos test cli pop ss cmp pop mov jl pop popa rorl test out push stc shrb inc jne (bad) cli mov insl jmp add dec std sbb dec mov mov pushf mov push jge stc add neg mov test lods and mov nop add adc add add jl popf dec sahf pop movsb pop inc cmp fcmovnu insb ss mov sub out mov add outsl sbb jl pop out sqrtps push inc add jae add enter dec mov mov mov dec jg call or inc lock cltd xor call or sbb adc rorl pusha mov mov mov push add cli gs xor push clc push ljmp das and dec call pop sub mov xchg jns jne inc add add fnstcw fisttpll dec or push push movsb add in or inc or mov add pushf cmp cmpl dec outsl imul or and int jmp pop fcmovnu xlat inc add daa stos or dec clc inc or xchg rorb inc jae xor or push push push iret mov in dec test dec mov inc pop insb decl rolb fwait ret lahf sbb enter dec aas add xchg lea jge pop push fprem fidivrl inc push stos adc mov or add inc jne mov mov lret inc dec sti jnp fcmovbe call mov test push sbb (bad) and aaa rcrb adc xor sbb inc adc fcmovbe (bad) out insl mov xchg push inc loope adc xor sbb not mov pop xor int3 sub clc out xlat inc fwait insb mov loopne sbb mov addr16 enter aaa xor fcmovnu nop pusha pop jmp jne enter jmp and jmp aas fisttpl mov jns add sub jmp mov mov jmp or push jle dec jo or std imul dec cli jae mov xor push je mov mov pop mov inc or or cmp arpl (bad) je std xor cmp faddl push cmpsl cld insl and pop scas adc add push push and leave call insb test xor push jge mov das mov pop and or jle insb mov or jne mov les push mov stos arpl mov call cmp fs jne cmpsb imul dec inc push and test enter push cmpsl in mov or push rcrb pop jmp push xlat xor jle adc or movl add or mov inc insb sub add and idivb imul int3 add ja daa imul or or movsl push adc pop sub inc imul pop and or xchg mov out test rclb mov pop push aas pop shrl xlat xor mov adc movsl jg xor mov pop cmp add sub push push or jle fdivrl or inc jmp leave inc adc imul push adc and fdivrl dec jno,pn or mov add adc in scas lea add mov ljmp cmp push xor and jle mov mov stos mov xor jl jmp mov and pop cmp lock adc clc cmp ret imul nop (bad) neg or push stc call sbb and xchg adc mov ret xchg mov lahf xor sarb and icebp lods pop mov out xor push xor mov pop mov iret pop cld or cmp or inc adc pop cs test add (bad) push mov imul sbb pop jg fs lods pop push jle imul cltd sub clc push mov roll icebp mov in add lea fsubrl pop push das pop jae and popf loopne adc and mov pop mov mov mov in push jo bound ret jl dec jg jmp mov mov add push pop mov sub in addl loope es mov loope push sbb sti add pop test rorl sub cmp frstor mov notl mov pmaxub aas jbe cmp and je push pushf fsubrs dec mov mov sbb ret fisttpl mov or pop or pop xchg jmp inc push stos inc or pop cs mov test push pushl test push outsl and mov add jae clc lea sub mov cmp inc inc inc sbb icebp pop sub mov in clc cmp shrl mov rcrl pop dec imul out lea mov fistpll jl mov imul push xor ljmp add rclb dec sub adc xor lock icebp insl push mov and dec inc or inc test js inc ja cmp inc mov pop adc inc mov (bad) xchg int aaa jne pop into lea (bad) jbe lock cmp mov testb pop mov push sbb cld push stc dec decl push jae mov push lea or test inc mov cli push popa sub shlb add fsub pop je xlat ja add pop loopne in fadds dec inc fisttpl in cltd xchg pushl push inc std sub loopne add mov cmp jne pop mov fwait in inc in jb (bad) cs cmp and adc cmp imul add or dec loopne in mov fistpll push or lock inc or leave mov fidivl or pop inc xchg es dec jbe mov divb sbb inc cmp add inc push fbstp mov sub mov lea push (bad) sub cwtl mov or insl mov sub cmpsb loopne ja jmp cli xlat pop mov (bad) cmp jne xlat inc push add jle and cmp mov scas sbbl pop stos jbe fwait loop inc (bad) jg mov (bad) ljmp push inc dec loopne adc mov jmp adc rcrl scas out js add orl mov jb in pusha rcrl lods jmp leave jbe clc add mov (bad) jae mov xor push or pusha ret insl pop lret (bad) in xchg xchg inc adc push sbb xor pop mov adc decl dec mov dec inc and into movb dec in in add loope pop clc xor mov aaa lods adc add mov lods adcl pop push js add and sub push dec outsl (bad) in (bad) dec in invd add cmpsb or adc jne std in cmp jl add or mov in mov mov mov add sbbb hlt and int in in loopne out leave pop mov pop out inc push jns adc push push dec rorl mov xor inc dec pop xchg xchg or xor mov xchg ja or inc jno push lods xchg faddl inc jne mov ror or add ja aas push cli bound push lea lea aaa push jnp or push jbe cmp (bad) outsb cltd sub cmp fistl mov and fistpl js lret or jge rolb jmp cmpsl mov inc mov push mov mov adc sbb xor lock es push lret lods jl push arpl add (bad) sbb ljmp adc add jns jae xchg mov pop jecxz mov xchg clc cltd mull xchg cmpsl orb pop sbb int dec aad or mov mov mov push mov push bound shr out ret pop add or mov jge int3 rcl int adc addl or pop mov lahf std adc roll lret call xor or inc cli mov sub xchg mov adc or push les inc dec jp ret jle cmpb nop inc cmp bound sub xor popa (bad) push nop mov cmp and sbb vrsqrtps push pop push mov or lods movl add push orl je sti daa jmp or insl fs mov icebp push cltd pop push lea lods mov mov scas enter cltd sbb std mov mov sbb (bad) fildll mov xchg test inc mov jl jp cmp push pop xchg movsl sbb popf inc adc and fldt jmp fs pop jecxz nop enter add jne mov jg cmp push push lcall enter or aad fnstenv pop cmp add push roll xor hlt gs push lret pop add ficoml push push mov mov adc ret adc loopne jge push lea inc (bad) sbb or les rorl mov pop popf mov mov or push dec sbb rorb sbb pop jb cld cmp push pop sbb es leave lcall in push and (bad) dec and sbb leave call sub pop fwait inc rcr mov rcrb dec int pop (bad) sub sbb stos pop shrl test jno cwtl arpl or push mov xlat dec adc mov stos dec js jge and pop jo pop or pusha xor decb and cmp jl push jg inc shrl push inc insl mov jg fsubrl insl adc clc (bad) jg idivb pusha sub fsubrs cmovp fstl fs loop add push cmpsb imul movsb addr16 ss fs lret xor pop inc cmc xor or push mov mov stos insl and cmp adc pop imul lods push xchg lock pop and jo or mov push mov add jg pop push xchg inc std and pusha into add mov aaa mov repz mov push push sub add (bad) or sbb add or decl adc fidivr add stos push fldl aam push cmpsl lret int3 mov mov les pop es push inc loopne rcl xchg hlt push (bad) mov mov push mov roll (bad) xor pusha or cwtl add mov push mov push mov and test dec js mov in pusha jne dec sub dec or or div push push sbb adc gs mov push dec inc jo jb adc dec (bad) dec aam add into cmp jne adc repnz stos cmp std int3 add out fldt push out add or out outsb cmp aaa idivl rorl xor addr16 push dec sbb sahf push or ss sbb sub mov js mov inc or add xchg mov mov push push inc cmp jbe add push lea mov ds lock xor pusha aaa ss pop cld push push cli cmp push jmp ds je into cmp add adc push lods push movsl in and sub mov jg or testb loopne lods (bad) adc fldt outsl incl mov add sbb jo add push push js mov or inc push loopne,pt call cltd mov into push sti ss shl or adc and cwtl sub aam in sar adc (bad) mov mov and add mov pop ret push add pop and iret push xlat into add pop lods cmp (bad) rcll pop (bad) push imul pusha cli add scas fstpt dec adc add lods jnp sbb pop pop shl or shl mov xchg icebp add add inc jle aad push adc cmp rol loope bound xchg ja loopne bound popa addr16 shrd or xchg fadd pop adc aad repnz je sbb mov and adc mov mov ja test sbb mov pop (bad) icebp mov stc pop loop cmp sbb inc cwtl mov xchg cmp call ror mov pop sbb jg loop mov ficoml push jne mov sbb mov sbb roll sbb enter cmp pop sarb mov push xor (bad) imul sub rolb push negb lret sbb fs imul lret rolb and xchg sub inc mov pushl mov push imul jno cmp out cmp xchg or mov sbb add or sbb xor cmp jmp mov and adc dec jb (bad) sbb sbb push (bad) jae ret pop push dec jge or shlb popf add or sar jp jp fcompl add adcl pop popa and or leave ret pop sub or sub mov mov (bad) fisttp or adc push inc lds jnp push inc sti fcomip aad inc or sbb xchg (bad) stc pop jge sarb pop push sti push mov pop push jo sti clc or imulb sbb (bad) jle je aaa lds fistpll (bad) or xor mov call arpl outsl cmp aad dec mov inc iret jnp adc push pop sar inc adc fnstenv mov adc mov mov js rolb pop adc pop or sbb stc insb das inc push cmp lds (bad) jne cmp mov fwait int inc mov ja fcoms ljmp insl add jne sub aad loope js and (bad) pop jmp testb rolb sub (bad) out add inc or test enter or dec shlb or jg push dec aam popa push les (bad) jbe push sbb push xchg lods and inc cmpsb xor jge jle pusha mov call popf mov pop bound mov push les push insl inc popa faddl fiaddl adc out pminub movsl dec push pop push inc imul sub push adc mov out (bad) push adc dec push dec and add xor clc fldt add rcrb or xorl add ljmp push sbb fld test pop mov out adc and mov pop adc sbb pop inc mov outsb mov sub movsb pop push mov mov std push jmp adc sub ja orl inc in inc and rorb mov mov rorb mov flds push ss aas cmp jl push out or lock push push popf mull xchg or add and push mov lds add stos mov lcall pop or adc out movsb adc add pop adc and js pop dec je daa pop shrb jle outsb mov fldln2 or aaa pop add push xchg pop cmpb loopne adc xchg pop rcrb push out int3 push pop pusha mov xchg fcmovne pusha mov mov shrb sbb ja ret in sbb and dec sbb xorb and dec pop outsb jg mov adc mov hlt push ljmp lock lock push push cmp fidivl push mov mov push jmp xchg clc sar cltd stos jg lods aad jge cmp mov outsl fnstenv mov pop jp push dec add cmp popa out push or push shll das pop jb incl sarl push pop (bad) sti push dec push cmp inc (bad) mov lods cmpsl lds leave push rclb xchg jb push nop adc lahf testb adc aam outsb sbb inc dec adc push rclb jo outsb push push push or imul addr16 out sbb js mov or pop jne xor dec (bad) mov pop cmp ss adc dec jne pop mov jl arpl or cmp (bad) sbb stos fldpi and pop mov daa rclb xor push xchg mov lcall sub (bad) mov mov sahf adc or cmp sub mov sub push sbb stc cs jl mov cmp sub mov mov decl xchg pop aam pop or jb sub int3 push lea sub test sub pushl pop xchg xchg jmp int3 int3 push fninit fnstsw mov mov adc aas adc adc cmp pop pop clc aas jne inc fldcw add or sbb sub test pop pop pop jae mov push aam test movsb mov stos shll jge push mov add adc or push insl mov cmp jb jb xor add stc add sbb fisub cmp jbe dec push jecxz stos mov test sti pushl add and xor je or push (bad) out scas add add dec add (bad) mov andl and lods cmp jbe jecxz stos inc ja call jns xor mov std pop jecxz mov lods incl mov test sbb lods mov in out jbe cmp cmc dec mov stos mov sub mov and hlt xlat mov or sbb push xchg add dec cmp je repz pop sub fidiv adc mov add sbb gs lea mov jae cmpl sbb xor and aam scas adc add push cltd ss sbbb loope or push jl mov inc adcl push adc or jle push mov and in push (bad) decl jne or movl add push lods jns push inc sub mov mov imul push test mov mov stos mov ljmp mov push stos je inc sub sbb je and sub lods jne cmp pop fdivs adc jb adc inc adc out or adc jle je leave jno push test adc aaa stos xor cmp jae sbb fnstenv sub testl or adc xor mov outsb imul sysexit sub pop sbb je (bad) pop cmp dec repnz fstpl imul and jl and sub sbb xor pop mov or insb lcall dec xor sub mov adc xchg sub stc jbe lea dec push insb sti fwait mov push sbb cmpl push push add sbb mov or sbb or lock sbb ffreep jmp adcl (bad) clc mov inc out mov adc push das push push pop adc fsts pop inc mov or or mov jo mov add or jp fldcw or scas xchg or (bad) mov dec sbb adc cmpsl mov jb or (bad) lock pop push pop mov jle jns cmp push push and rolb cld sbb push orl and lahf aam mov cmpsl adc and jge sub ss je mov (bad) pop in sbb insl jl inc adc cmp mov mov mov insl mov or ss xor stos mov jmp cmp popf push (bad) shrl jne sbb jae aaa push pop loop in inc add inc test sbb fs jne and push mov jge data16 fsub sti fcomps xor or (bad) mov dec jmp push jne cltd sub adc inc in ret adc push cmp mov inc stos in adc test je mov mov inc or lea popa jg je push sub add je adc pop inc jle inc jle lock jg cmp and call je dec jne push and mov or jne lret xchg lret pop inc mov sub xchg sub aam pop xchg bound jmp inc out pop call push iret push jno pop jmp (bad) insb insb outsl jbe je add add dec push outsb sti outsl in add mov dec xchg invd jge (bad) (bad) push push push xor pop jne psubsb inc leave push jl mov jne gs sbb pop insl cwtl xor leave mov fidivl mov push dec cld sub in and in inc inc sbb adc mov int3 test cmpsb mov dec jne test jbe mov adc adc push mov jmp shrd mov fidivrl repz and or sbb cmp (bad) xor jl stc jle push aad outsl sub adc jo jno push out adc repnz and insl test aas mov sbb shrb fisubrl cmpsl jns or andb inc push sbb push (bad) cmp push sbb xor xor or movsl and rcr in test inc and push sbb add dec lea push mov outsb clc and je add dec push add mov (bad) pop ja ja dec mov insl xlat dec popf adc and push cmp je push jae pop jmp rol lret inc fildl push fldl insl clc inc in fmull mov mov xchg fcmovbe pop bound cmp enter test in call cli std jns aas in add inc in mov push dec fmul and jne iret out (bad) addr16 fldenv jne xchg jb pop shlb outsl inc cltd in fwait lods xchg push add and shll fidivl sbb fildl adc or lea insl out test aam pushf jno mov ret in fcmovnu leave jne sti fld ficom xor gs dec out sub mov sub insl pop in enter sbb sub inc adc arpl dec jge sub jl mov mov decl scas jnp pop xor js and je sbb sub enter add ffree in and inc jb aaa jmp shr mov adc ja or imul add push inc (bad) mov int mov push mov fcmovne in or sbb adc je add add mov jne andl mov add push shll test cltd push fwait jl (bad) fsub push rolb inc push cmp sub pop xchg adc xchg fild or pusha sub cwtl fildl xor pop mov popl pop jne inc fisubr loopne adc push push mov cmp loopne ficomp inc fstpl inc loope int loopne lods into fisttpll dec lret incl pop inc iret outsl fstl insl fsubl (bad) je in je mov add or cmc push sbb insb push cmp push mov sub adc inc adc inc adc lret rcrl or ss push ret xor les outsl sbb insl cmp je cmp je lea or lcall pop dec fistl daa and stc inc mov pop mov xchg push adc inc and sbb mov adc adc or add rolb or outsb ds mov push insl jnp xor sub minss dec cwtl clc inc adc pop je aam cmc jle xchg jmp cmp mov jae adc ret cmp jb sub xchg mov pop fildll xchg dec test sbb sub sbb cld add mov (bad) fwait mov mov mulb jl or push out jle clc movb outsl rorb sbb or popa and pop in fdivl nop arpl fstp pop cmp sub pop or adc or mov sbb fcomps inc mov adc pop push movsb and enter jb push sbb ja adc push or jo jmp test pop inc (bad) fstl jmp or jb jne mov rorb movsl pop mov mov or push jmp inc sti mov sbb push lea cmp mov or int3 insb xor je pop xor sub lods test aas cmp (bad) ror pop test ss xchg pop jmp mov adc jmp test push (bad) mov out int3 sti cs mov cltd xor sub ret or dec fmul fistl clc or cli fyl2x repz adc dec adc add pop mov or mov (bad) data16 (bad) aam or mov sbb inc mov test mov mov loopne mov xchg jo add add add sar push lock push out sbb int3 push in inc es jne jbe or or cmp (bad) or mov sbb cs (bad) and cmc mov push inc add sbb jbe jge adc or sbb cmp outsl in jg lea add or mov or fwait adc lret sti add rcr jg in cmp push ja int (bad) pop pusha add push shr and add hlt push sbb insl imul jle add mov sarb and adc (bad) cmp jbe stc (bad) pop lods loopne loope jmp movsl xor or mov loope xor dec inc out jmp (bad) fwait pop push and int3 sub cld out sub add inc aam ret or ljmp push loop outsl pop dec fldl2e mov (bad) lods mov lock rcr fstp test mov or adc add repz push xor lea mov mov dec pop sub sbb popa and mov stc cmp inc ffree add adc sbb inc pop inc pop inc imul mov mov popf xor jae sub cltd dec das sbb aam mov cld adc (bad) sub jo push dec and adc xor and mov mov dec and dec subl loope jg sbb and roll push xchg insl add int3 stos push imul dec movb dec rcl ror lret cwtl ss mov mov push inc loop push sub fwait xor mov insl or imul cmp in xor lds bound inc addr16 scas inc sub sbb ljmp jl add movb pop stos in stc int3 movsb orl push rolb jge add mov cmp pop jbe jo movb adc xchg mov rolb pop lcall and or mov adc or ret decl lods lds cmp fsubr push std cmp jne push add ja inc arpl je sub insl adc fwait lods and sbb xchg test sbb lock push sbb movsb cmp add sbb mov pop sbb aam orl aaa pop call mov cmp mov jb pop cmp jne mov enter sub es repnz jg sbb inc mov jnp sub add push push push add gs pop movsb push dec mov scas test js cmpb add xor sbb mov lahf bound jb jae je push sub cmc popf mov test popa mov cmp inc sbb movl loope xor inc add scas pop stc gs mov jne and sub xor adc mov (bad) mov sbb push test xor push xchg push mov xchg (bad) adc push push push inc les in and (bad) fsubrp hlt fwait negl mov or lret mov xor sbb and adc or jg das iret mov pop fisttp jb pop movb dec enter test je testl push out pop scas sub ret or (bad) in adc sbbb pop call call pop inc and rolb cli push lds mov jbe xchg mov fldl add movsb add push mov sbb pop adc test clc or cli push sbb sub mov jb in ret pcmpeqw xor push adc adc mov mov or pop insb pop sbb loopne icebp cmp ja jge (bad) pushl scas sbb (bad) je lea sub mov mov dec mov scas arpl movsl arpl mov mov mov mov dec shr les jg ret shl add mov and stos push insl (bad) mov jp test add push adc jae pop dec or je xchg shrb hlt adc dec dec cld call xchg andb in hlt cltd and push mov add sub xchg popf sbb outsl outsl sbb add cmp cli cli je sub push jbe mov lea shr inc mov adc test out add in pop jmp mov mov mov inc xchg test inc dec sbbb sub adc mov jne cmp rcll jb add add movsb mov inc sbb or xlat inc data16 addl out mov push push push or into cs rcrl add sbb jge dec (bad) adc push cmovbe sbb cmp insl movl lds adc mov mov xor sahf add (bad) dec adc fsub faddl lahf outsl dec xchg fcmovnbe scas icebp sub xor (bad) push adc pop mov (bad) push jae scas ja (bad) repnz adc push jmp lcall push je cmpsl push adc jnp jne inc add pop sbb xor mov dec movb push in (bad) mov adc (bad) jg sub flds cmp sbb clc stos or inc cmp xchg pop mov add sub int3 (bad) dec mov and jne or aas or inc mov push sub push add in cmp mov lock shlb mov push mov jne sbb or or push loopne clc (bad) sub (bad) mov aam adc add xchg and pushf or jnp insl cwtl data16 jecxz inc inc data16 cld jae pop std or xchg lea jae enter add popa add dec bound mov mov js mov inc jno hlt pop idiv (bad) orl mov decl sub mov pop jge cmp and ret push lds xor xchg int3 adc pushf or imul (bad) mov or jne jmp fidivrl inc mov cmp je sub xor sub movsl lret and (bad) ret add fsubrs lahf clc dec (bad) lock int3 inc push mov inc lcall negb movsb sbb push mov js test fbld adc mov cmp (bad) testb pop push inc cmpb loope sbb pop mov lretw idivb rorl or out xor (bad) lcall movsl or and pop pop jno or mov cmpsl (bad) push add mov loop or ljmp add mov sbb pop jae pop je loopne push mov mov inc inc dec lock push add and imul (bad) and insl xchg lret cmp add stc inc xchg clc and xor push arpl xchg mov cmp fsubrs ljmp mov inc nop or mov inc pop jne push cmp sub pop pop fisubl nop je mov cmp addl inc xchg ljmp mov lods jns mov add cmp ja and hlt add fwait lea push sub mov (bad) pop sub sub cvtpi2ps push sete inc mov insl xorl xor or insl (bad) jno mov fdivs cmp pop imul cs or xchg test mov outsb aaa mov les jmp (bad) lea popf cmp jbe jne mov jmp testb mov add bound add jae inc mov test loope fmulp sar in inc mov and xor adc dec cltd enter es xor stos mov insb pop xor mov pop bound or outsl cmp loopne add mov sbb push unpcklps mov adc xchg pop pop mov dec cmpb dec not sahf push or mull ret or and sarl (bad) jbe sarb push test pop inc es cmp sbb add ja add mov pop ret fimull sbbl jo rcrb add or ljmp jl mov jecxz fisubl sbb pop jmp sti lea cmp je add mov push pop jne inc push sbb cmp cmp jbe cmp jne inc shll test mov adc cmp jae in in scas mov rcrl add fdivp ret jmp push bound repnz das shlb xchg rol sub loope mov fwait sbb mov pop push jne cmp repnz or add mov push push bound and add jns jmp xchg add setg push adc xor or lods mov push or xchg mov or or add pop cld pushl or repz nop cmp xchg xchg or mov stos xchg bound orl and and punpckhwd clc xchg in pop mov and xor and sbb bound add and out pop add and outsb and dec pop mov inc in mov and and jg rol dec inc fbld add push stc and into push in sub jns pop adc mov psllw cmp rcr nop stos jae test inc out xchg xchg inc or xchg mov adc and mov (bad) sti sti out adc movzwl mov jns in sub dec mov in inc inc mov or push pop enter outsb (bad) cmc jmp xchg sub sbb pop ljmp (bad) fsub iret lret inc inc push mov in flds jne fwait call sub cbtw adc fcoms cmp inc dec dec loope imul sbb neg sbb not jg and sbb jge cmp je jns outsl dec sub dec inc shll je xor fwait inc fistpl inc je or pop out mov inc lea or cmp (bad) mov inc or orl adc xor cwtl xchg sbb add fbld cmp cmp push inc das jne rcll fcmovnbe pop (bad) rcl imul xor inc adc cmp cld push jo mov cmp jmp xchg cmp add add sti push cs and adc aas std out je rcrb cmp lods subl or incb lret sbb sbb inc inc add loopne add add add add mov push cmp xor (bad) andl dec inc cmp pop add jb out jecxz mov mov sub push cmp dec or bound daa or push mov mov jbe outsl or loop or jmp leave data16 shlb push xor int3 jmp mov test jg aad je sbb lea mov pop popaw sbb lcall bound xlat cmpl or rcrb sahf adc mov xchg add push mov cmp or mov clc fstpl mov xor mov sub mov add push roll or popa (bad) dec push in mov xor sub push in loopne out adc pop in xchg in sub divl cmp push cmp ss pop or mov and daa mov mov add inc ror inc add bound adc test les dec mov sbb or add inc push ljmp movsl movsw sub lret inc xchg xchg xchg test pop in loopne addb leave pusha add push xchg into add and (bad) into push pop add sub (bad) jle divb fs and das add enter push dec enter dec inc inc cmp enter xor sub enter and sbb enter sbb xchg xchg xchg out mov fs insb xchg ja mov mov repz jl mov mov mov mov ds iret mov cwtl mov mov out stc mov mov mov xchg mov add mov rorb fsub mov lock add add ja xchg movsb mov xor test lods jns sbb xchg xor sbb sbb and sbb sbb sbb adc sbb sbb or add xor xor add in xor je fs fs fmuls mov pop (bad) mov lcall jle and adc pop push adc ret push lods pop ljmp pop dec add imul pop inc pop pop lahf aas incl pop pop push inc dec push inc push inc dec dec push (bad) dec push push jns je insl push outsl outsl je and mov push pop and pop push inc dec dec push popf int and outsl and inc dec int cld stc pop push dec dec dec inc dec dec dec xor push push rsqrtps jle gs das add cmp push sar dec push dec push inc pop push mov inc inc dec inc ucomiss sti inc dec pop inc inc sbb sub stc xchg push dec dec sbb inc dec push dec push dec int3 sahf sbb push dec rcpps push dec xorl dec push jb fs je xchg inc inc (bad) dec out push inc push gs imul pop nop add jb outsb je inc dec inc jne insb (bad) into pop sti fs jne bound sbb popa loope sarb dec popa insl gs outsl fistpll inc push push inc rcrl arpl jae data16 push imul and jae dec push pop jno push inc mov push mov pop inc sar inc dec dec sub inc daa inc loopne mov sbb dec inc dec jo jmp ja push lcall jbe pop inc out insb push and imul outsl jne sbbb imul inc (bad) std inc inc dec push pop inc inc push inc inc fadd mov mov insl ret jb sub (bad) add cs outsb imul sub decl or (bad) aas ja dec push push xor xor xor xor and xor xor xchg lret cmp xor xor add mov je or and arpl ds mov fistpl adc js insb outsl adc push push inc ficompl jae outsl (bad) sbb gs je jo jbe adc ds pop push push push imul popa jns addr16 outsb and pop fistl jae (bad) add arpl data16 lcall (bad) push push popa jae mov cmp mov ss add or popa fs pop push mov sub lock adc xor push pop inc mov je jo push scas push xorl adc dec xlat push insl in sbb inc push xor xor push outsb lret cmc xchg addb test out inc pop mov inc pop or mov fs inc (bad) jge xor push push inc inc sbb mov jbe push inc jae and push push dec or aam arpl inc sub or and cmpsl jae aaa or mov jno lods ret push fisub insb pop push cmpl push push dec xchg je cmp loope mov dec jg sub jo arpl or add and test ret in test push gs (bad) repz idivb popa je je jo ja imulb mov add pop cltd adc add imul jae,pt xlat or mov add sbb cltd in sub das lea imul test push push inc outsb pop (bad) shrb and add movsb sub and fs sti test xor je cmp rcrl sub dec inc xor mov push adc push inc pop jae xor (bad) mov sub fsubrs jno js sub icebp or xchg fwait popa popa inc jmp inc repz or dec out ficompl inc test cmp pop add push (bad) push jnp pop fildl or popa mov (bad) ja (bad) push jne addr16 pop insl popa push pop popf rorb addr16 push leave sub jne mov pop out outsl xor fbstp je push pop pop xor popa cmp pop ds packuswb sbb pusha adc insl lcall pop imul or or nop lods je (bad) push dec arpl xsavec jae pop and test or jae jl pop pop pop inc inc dec dec dec dec dec fisttpll push push or push jno outsl lods arpl jl imul jno pop loopne jle jne ja jns xor xor ss cmp sub inc jnp aaa (bad) xor imulb add dec jbe pop mov pop ja pop xor jns aaa out sarb je inc cmp add xor xor xor sbb pusha pop cmp insl mov sub or lds jo dec das mov adcl imul das xor outsb mov icebp int3 (bad) dec shll dec adc sub pop and sub mul pop or sbbl pop inc jae sti fistpl jecxz imul or add and pcmpgtb jbe xor mov xor shrb and sub push add pop pusha xor insl adc inc outsl ret mov xchg and add sbb add gs adc movsl push jae add jne mov imul sub pop outsl pop insl or insb inc loop jae arpl or or or ja jb add add jmp sub sub jae or push sbb mov mov adc inc sub fisubrl dec iret mov insb cmpsl cmpsl pushf insl mov ret xchg add and shlb lret out add fsubl call and ret dec xor push mov or jp jb and xor sbb mov and addr16 adc sub outsl dec mov xor inc (bad) arpl in (bad) (bad) dec clc call in loopne loop in call in jmp and int push idiv in icebp in imul call sti cmc push out jmp in out and aam jge sti repnz and jmp cmova adc or ja sub inc (bad) outsb pop lcall pop aam sbb push and xor jne push jmp lods mov inc push pop inc dec mov or dec insl jae imul jns das add sbb ja push arpl dec outsl jbe inc or mov and je add pop xor rcll out popf cmpsb in (bad) xor adc int je frstor and xlat mov arpl push adc es mov lods pop cs inc xor inc leave je sti pop xor or inc popl clc mov xor dec daa push mov pop sub loop (bad) adc jae xor inc ja js or pop jmp push das jae (bad) lcall out repz xor (bad) add (bad) or cvtps2pi daa hlt or nop pop and or nop stos cmpsl jbe cs repnz mov cmp shrd xchg and pop xor leave test nop or outsl mov or pop fstpt pop nop or nop scas sbb in nop or push cmovae das mov inc ss or das xor adc mov inc ss or and ss gs mov (bad) push pop ret das inc ss or stos aas insb test mov iret das in nop lea psadbw repz or pop repnz mov sbb imul and mov sarb repnz mov mov and outsl bound movsb cmpsl adc aaa leave pop or test cmc enter fsts nop or push jmp dec pop jb fdivl cld fs xor fimul ss xchg xor incb fs xor loop outsl mov xor pop mov nop repz into cs or lock xchg icebp fs xchg jecxz xchg (bad) iret in jg pop jbe sbb mov ss push clc nop or test fsts or push in imull jb div divb fs xor inc dec adc push adc ljmp nop/reserved xor ss pop push cs push inc jb pop inc pop mov and rorb xor pop cvtdq2ps pop fsubs mov mov dec xchg inc sbb cltd mov insb (bad) das or (bad) and or psubusb lds pop lahf dec leave nop or das jnp in push adc dec popf fisubl jbe and and xor sub mov xchg or xor and xchg and das push repnz jb and xchg and cmp xchg and xchg imul sbb and sbb xchg and xchg and lahf orl or nop or das leave nop or jg or jl cmp icebp leave nop or cmp or nop or push cmc nop or nop sub in push fldz pop xor jb xchg hlt notb jp out testb inc dec xchg in cmp xchg inc repnz inc ss iret pop paddsb and and or nop pop mov outsl dec nop or nop lea cwtl in push leave rclb negb mov insb dec xchg sbb sbb insb dec sbb insb dec xchg scas ret das or xchg cmc and mov sbb jg xchg and lods mov and outsl xor das and lods inc xor dec fistpll das pop (bad) pop ss jb mov push inc daa jg inc jb jo pop sbb popa popl das xor jb repnz das inc xor scas pusha xchg xchg and xchg lea push incl jne leave nop or jbe js leave nop or jns nop or nop das add les push iret stos into incb inc insl in nop or lmsw aas outsl jg movsl loopne cmp add cmpl leave nop cld faddl add mov leave nop add loope das mov push leave nop pop mov insb clc aas pop cmc mov loopne mov xchg mov (bad) pushl pusha daa pop and rclb mov add dec flds sbb xchg daa scas pop sbb subps xor mov iret (bad) push decl neg xchg pop testl outsb mov dec push or pop jo inc inc in aas xchg fs nop adc inc ss lcall inc pop outsl and and sar (bad) pushl push fsubs mov add push outsb adc add (bad) mov movl clc or scas adc lahf cs ss ss push scas mov inc orl dec aaa fs ss push sbb lahf es sbb and mov das add sbb or nop inc ss pop aas adc dec andb or (bad) fsts repz nop pop inc or pop outsb repnz je cltd dec aas mov pop repnz push and pop hlt cmp inc xor das xor jb clc cmp mov pop or and cmp mov and pop cmp xchg sub xchg and xor insb xor sbb adc xchg insl ss inc test repz xor fsts sub in (bad) mov and xchg int lahf inc ss daa cmp ss dec nop pop pop enter clc push add in fcomi lea inc fist nop or outsl adc in or adc out xchg sbb adc nop inc jb pop out clc xchg cmovs push repz and push adc das inc cs xor dec sbb (bad) nop or das fs cs repz xchg jbe ja xchg or adc xchg and jne jge sbb adc xchg in lahf hlt das stc enter lahf dec movd xchg loopne or bound xchg and mov mov mov setb sbb (bad) and nop push dec jb adc loop sahf popf inc ss fisttp cmp nop xor aas les inc inc out call ret mov insb and jne dec (bad) cli (bad) xor in dec pop scas test rcrl enter rcrl setns bound enter adc ret inc dec mov xchg mov xchg fs xchg fs (bad) lea fs cmovae or cmc es push js inc dec pop dec xchg data16 das sub pop lret nop dec enter jl fs rolb subb push fistp mov sbb repnz stos and xchg and xchg and xchg or sbb jno jo xchg add jb pop in hlt mov xchg or inc jg and xchg mov inc sbb inc inc pinsrw shrb ljmp sti adc or cmpps jle add rolb popa push or scas int adc ds leave loop mov setb and outsl outsb jg aas popa stc push mov xor test add aas fs nop std mov mov mov pop cmp lcall (bad) (bad) ja (bad) cmp imul xchg or hlt out test mov sbb clc loop jb push aas popl (bad) sti loope outsb (bad) cmpsl xor addl mov sub dec stos fs adc jns ja daa push push ud1 repnz pop inc add (bad) aas fs (bad) jb mov pop aad jbe xor add inc xchg pop das das shrl dec mov hlt addr16 cmova std adc jg cs imul lret shr movhps adc and stc mov mov mov cs insb jle mov addr16 or fadds sbbl dec and scas imul inc popa arpl fs pop sti or popa insb mov cmp xor stos mov inc dec inc push push dec test cmovge in dec jne insb fnstcw stos fcmovb and dec popa outsb popa and orl stos or jo sbb push lods popf dec gs (bad) push jne adc push shrd pop mov lods pop jecxz adc mov cmpsl pop add sbb lret add mov pop push or pop je popa adc and add fs (bad) add and and add test xchg pushf nop adc rolb add add dec xchg add imul mov and add mov and adc sub fidiv or aas sbb cmp adc outsb sbb push add sarb cmpsb mov inc jne aam sub sub fs insb jo inc (bad) call ljmp dec arpl pop imul sub dec push inc dec pushw bound (bad) (bad) (bad) jp jb inc xor imul cmp xor push inc dec inc hlt mov insb imul ja jns (bad) (bad) mov xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push (bad) lcall add bound push pop push push arpl (bad) mov inc mov imul outsb rorl fnsave ss lret pop icebp xor mov imul int jno fucom imul icebp popa bound mov dec push cmp mov xor insb fdivrs cmp push inc pop popa ret xchg push aas mov pushf push mov sub mov clc adc adc test jg add add add jb jo inc and adc inc pusha sti cmp lcall popa jb or in dec inc or arpl inc push gs jo xor gs xchg subb outsb adc jo outsb sbb (bad) push add or gs jo insb push arpl cmp or (bad) cmp or gs out pop push push push pop or gs sbb jb cmovge cmp popa jo imul notl jmp das inc mov push imul push outsb insl xor imul jae ret inc js je lods std or push hlt fs imul shrb adc imul sub dec enter fisubr ret in outsb ret push jb mov (bad) int test push jne jo cmp fstpl scas or push inc leave inc or arpl inc outsb jbe dec fsubrs popa cmp jns and je jbe adc lock je fcomps and sub xor in push adc sbb jae pop and insb popa mov imul pop jecxz in dec cld je inc jns push outsl pop out xchg mov mov leave testl fs xor mov ss jae cmp pop and sarl jo in dec or sbb in or mov arpl sti dec outsb outsw push sbb imul dec sub lock or push lds push adc xchg push xor sbb add or push insl pop pop (bad) sub inc test push stos pop cli sbb xchg jne fimull aaa (bad) cmpsl add jo fbstp outsb push gs push or or iret int3 dec gs lahf sbb add cli (bad) adc push push or dec jbe adc cmp sub dec ret dec dec cmp mov dec pop mov test ret ss out pop push imul mov push loope adc inc arpl aaa arpl js adc sbb ds mov inc jae,pn shrb dec pop push stc lods cmp add pop xchg dec add imul xor mov jo bound or push jne dec xor push aaa sub cmpsb sbb jo lar push jmp (bad) mov xchg sub inc or mov xchg push dec clc xor adc lods lcall scas not mov xor mov mov arpl lds fisttpl jns sbb (bad) fstpt xchg jns pop inc jne andnps or dec gs outsl mov jle sbb push les pop stos xchg cmp rcll add inc shll decl add lds loopne cmp sbb add repnz jge cmp add mov cmp add pop add data16 inc int add sub add mov push add fsubl add dec cmpsl call js cmpsb xor sbb or jp sti inc add scas mov cmp sub je lock and add mov add adc add add jmp add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add fdivl add dec xor add xor add add add add xor add xor add add adc add jge add sbb add mov add and add xchg xor add xor add xor add xor add xor add xor add xor add xor add xor add add add xor add add add add add add xor add add add inc xor add add add add addb add push xor add add add add add add je add add add or add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add pop push push xor cs insb add dec dec push inc push dec cs dec dec add xor cs insb add inc inc push push xor cs insb add inc push dec cs dec dec add inc dec dec xor cs insb add inc push xor cs insb add xor xor fs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs jo outsb dec gs add add jns je outsb jo outsl je arpl je add inc gs gs outsl jb push popa jb insl jae add gs outsb imul add add jne push jb arpl jae jae add push dec inc gs outsl insb fs popa je inc add ja jo imul (bad) jg push mov inc xor movzbl mov mov pop ret mov mov mov push lea sub push push push (bad) incl push call lea fs add adc (bad) incl lea push call inc mov add mov mov add inc add gs push (bad) jge out pop mov int3 rep cmp mov mov add push and adc jne add in and mov fs cmp push inc es push add add add xor jo jg cltd inc andl test mov mov sbb sarl add or or push push sub add mov and or rclb add mov lret xor gs clc add fnsave in cmp pop movsb cmp or xor push mov dec mov imul shr push xor push push lret or outsl fldt cltd add cmp dec je add sbb pop push and cld cld cld cld push sbb adc or mov inc (bad) int3 arpl bound das mov test (bad) (bad) call cld iret sarl dec movzwl push add add xchg int3 icebp cmp cld mov or and or mov xchg push xor fwait loope pop mov push push mov unpcklps pushf insl add jl,pt pushf jbe out sub inc inc and push das subl pop and push insb fwait push leave je dec je inc dec push mov jo cmp push cmp and mov adc leave or add test fs push push daa fs add or outsl pop ret sub adc add clc fldcw sbb xor push rolb test cld fnsave das lahf fnsave mov sub lret lahf adc sub cmpsb clc outsb or xor push pushl push sbb or xor sbb pop lcall inc dec xor pop insb xor sub dec sub pop nop pop pop cmpsl and pop sbb pop das push or pop push xchg or adc mov sub push push push adc xchg xchg or push mov xor (bad) and mov clc mov leave inc (bad) call fstp dec mov push push mov xchg sub adc push mull mov fcom in push xchg mov pop pop pop add leave les xchg fcmovne and push jnp cli or outsl jne popf mov xchg add jae sbb fs cmp or push imul imul pop test jmp xor jge xlat xor push fs mov mov jmp enter clc sub std insl inc sbb (bad) cmp sub mov jbe movsbl inc inc shrl (bad) mov loopne lea loopne xor push inc cmp jb pushf xor jbe sub int jb mov mov cmp neg ficom fisttpll or xor xor xor test decl lret add pop rolb pushl xlat add imul xlat mov shr inc inc cmp data16 or adc jb pop adc mov pop loopne shr mov out (bad) out or add push mov mov cmc loopne add dec es lock outsb xchg test mov push sbb push and mov inc jmp add mov push or push mov mov mov xchg hlt or iret jp inc push call (bad) jmp dec mov mov in jb jge mov pop mov and cmp or push mov or inc push (bad) jge xor je es push and xchg out fcoml cmc pop sti out lods int aam imul out jo xor sbb push jecxz insl cmp sahf sbb sub clc (bad) cmp jne push clc fstps push (bad) int cmp insl pop sbb sub clc ror std data16 or loope arpl into arpl xchg and fistpl cwtl std (bad) sub add jne (bad) loopne in xchg nop daa xchg clc mov push pusha add mov xor mov mov loope dec cs scas lret (bad) ret xor push dec adc or in scas jecxz mov icebp mov jns mov mov pop andl add add lea (bad) dec in sbb stc adc mov mov mov cmp imul add add or jne push push jne or jne imul push or jne bound add rol add cs pop inc adc xor (bad) je sbb neg insl lods mov jbe cmp jno (bad) jne (bad) xor rorl push loopne or xor rorl or or sti outsb mov dec xchg (bad) jne mov fsubrs cmc xor mov push movb adc fadd push push mov and and pushl repnz les ja loope inc add inc add or test xchg hlt pop cmp cmp jne xchg ret fs cmp jge jp add jmp push xor lahf rorl xor je fs inc adc push add fcmovbe add jl dec push jmp push push inc sbb pop ljmp cmp addl idiv add popf decb fadds jle lea push stc sti adc pop xchg lea cmp mov jns imul cmpsl movsl cli push shlb ss jbe mov dec dec pop push cmp jnp es or in mov andl mov dec dec jo add add adc pop mov jae jns std jo inc pop test (bad) or mov js in out ja push (bad) push push sub ret xchg loop push cmp cmpl test cli push sub dec push add lock pop bound jmp daa add sar pop or add dec ret inc lock scas mov mov movl leave and dec pushl test xchg lret orl insl and xor sub pop xor cltd sub pusha sbb xor cmpsl jnp push add push push fbld movsb adcl sbb xor cmp sbb mov cmp mov aaa adc sub and dec mov add cld dec into or xchg pop js mov decl add pop (bad) sbb gs jnp mov stc xor pop and push push imul pop andl mov adc mov xor xchg (bad) (bad) cmpb cltd arpl sub jo mov xchg and ljmp lahf mov call dec push lock jbe cmp push push mov jmp je mov cmp repnz cld fildl push jae jecxz and push mov out dec xchg push shlb add sub cmp dec hlt inc pop sbb mov push lea (bad) mov push xchg clc push pop pushf enter push adc jge mov and enter pop dec int3 jne dec sbb lret clc cmp fisubr xor mov or jo pop cld adc adc sub pushf mov in icebp mov insb popa push or mov sub inc movsb mov (bad) enter cmp pop clc jne imul popa nop out ss in push out jbe sbb nop movsl add pop fsubl sbb shlb and cmp test test mov mov outsb outsl lock mov fwait adc jo push adc xorl mov or and inc cmp cs outsb mov cmp sbb mov mov dec jne or sub pushl xor out mov adc jne pop popl shr adc or je pop add or and sub cs in mov or mov pop or bswap jb lret call sub pop mov or (bad) mov loope aaa lds call fmull dec sbb fmul mov fcmovne adc mov rorl clc mov xchg cmpsb lock stos push jb pop or mov and dec mov mov les or loope mov in push add adc loopne adc je push hlt out addr16 adc ss and or arpl js leave pop je or nop dec ss insb mov and and dec mov or loopne bound mov push adc mov jae xchg push or jl gs xor mov out iret cmpl fistl aam sub push mov in push pop mov lods repnz hlt inc jae dec sbbb pop mov cmp scas ja and pop or call xor xor aas outsb adc fcompl out test lods sbb adc daa rorb add rcrb test mov cmp dec insb loopne lds xor jge ja lea push cld rorl mov clc je sti adc (bad) sub inc jae repz mov jae cmp sbb mov repz jns int or xor fildl andl cmpsb and and daa aas mov (bad) pop sub pop fcoms repnz repz mov add cmp loope pop mov mov dec lock add and mov push and push xchg enter and fwait in adc sub push sub sub outsb lret sub sub pop xchg (bad) mov and in xor pop jbe mov sub pop cmp mov mov cmp cmp pop aas or inc and mov inc or dec mov pop mov dec dec cwtl dec dec and fnstenv push push push aam imul push jnp pop pop imul int pop pop dec movsl fstps popa scas bound mov mov int3 lret (bad) xor out data16 lret in mov push adc insl rep insl sbb clc inc mov je jo ret xchg fdivrl fs jl icebp fcmovne adc xor inc (bad) scas adc cltd sub cmp je (bad) cs adc push or or xchg xchg mov out mov int3 mov insl adc orl jne pushf sbb mov sbb xor cmp call sub inc pushl sbb add jbe and mov mov mov sbb xor scas and adc mov push scas and dec push pop mov add int data16 rcl bswap sub and mov test insl pop int3 in sbb dec into jb add jo enter push daa sar and ret call push daa ret pop dec xor (bad) mov aas cmp cmp pop sbb mov movsb adc jmp std (bad) repz xchg xor and sub pop imul push mov or in sbb push flds (bad) rcll insb int3 loopne mov (bad) roll fidivr add cs pop mov ret sbb cmp fldenv clc push jb inc xor jnp sbb jge lock pop jbe xor dec push push mov push xor lea push mov call push push mov jo lock mov mov fcompl jmp nop sub mov js pop mov or mov hlt rcrl repz test jbe,pn ja mov pusha mov int (bad) and push hlt push (bad) lock inc mov out cmpsb iret test (bad) and jne cltd inc aaa int3 add sub test mov push in jo jo out call insl and bound ds mov les cvtps2pd pop mov inc movsl xor lock inc es rcrb cs mov (bad) js incl mov imulb and cld fbld mov dec adc dec adc jae arpl sti lahf adc std leave adc push or das and cmp es mov inc add sub sahf pushf call inc or mov cmp xor dec in or div mov push pop repz pop ret push add in or inc stos push mov push push test les and std jbe adc adc stos mov sbb xchg test mov shr cmpb jne orb inc jne xchg fldcw pop add or and mov mov pop jg xchg in pop hlt add rcrl sbb jmp jge dec in push sub loope inc push int push movsb sbb push jbe mov xor lea iret fs or xchg outsl cs or add cmp jl sub imul inc xchg pop jmp (bad) xchg aam jo or inc dec dec sbb pop in popa xor push xchg daa fidivl xor outsb dec push cmp inc push sub insb mov pop jge je aaa imul js mov jnp pop decl jmp cmp or decl add xchg sbb dec add rcrb loopne jne mov push std insl (bad) dec mov adc push insb and inc jnp sbb add addr16 jmp sub inc (bad) push pop imul in pusha pop push push gs arpl mov enter mov imul push pop int3 test ds dec shrl add and cmpsb mov xor pop and add popa test cld imul insl jle dec adc or aas pop mov pop lcall pop insb xchg or insb in pop xor nop movsl sahf adc or xor push movsl mov jg or rclb push leave xor jge jmp addl push clc outsl push mov push fs cmp sub add and mov push hlt push inc sbb sti mov ret inc xchg mov cmp popl mov mov pop je push add xchg cmpsl or lods cs lret and outsl scas outsl jb xchg mov loopne inc xor dec dec sbb pop leave enter or xchg out sbb hlt add lahf or xchg cli cli lret dec enter in mov (bad) rcrl enter mov test js jl and cmpsb dec (bad) mov ret loop mov cmp adc cltd enter js,pn sub cmpb hlt push fmull inc push into mov and fildl jp push movsl cmp xor inc pop sub pop ret sbb test and xor inc adc pusha push sbb test cmpsl cwtl xchg shrl push cmp mov push lods cmc roll addr16 movsl pop stos mov adc xor in pop outsl cld inc jo (bad) and xor movsl cmc add add pop push lock inc or xlat add mov push cwtl mov fcoms jne lods xchg sbb mov mov fdivrs xchg (bad) sub fs mov orps jne lea xor pop adc bound ss cs jge addr16 pop lret push push or ficom mov push push push (bad) dec adc or (bad) xlat add push jge clc orl and dec pusha dec and imulb inc jmp or in push mov pop pop pop dec test lock fsts adc pop test xor jo test dec xlat fstl xchg idivb decb mov xor jmp dec out cmp pop sbb push int push dec ret rolb testl aam xchg leave and jb rolb xchg push leave fistpl (bad) movl add add mov push add lods sbb cmp pop cmp add xor (bad) insl xchg out push sbb lds push pop insl or sbb loopne fmuls imul sub xor movsb mov insb dec cltd enter ljmp pop mov insb sbb out pop mov and inc add shr les add rcll pop sub cld mov mov loop aam movsl movsl data16 cli sbb pop (bad) int dec fisub lods and jbe adc js (bad) dec addr16 mov pop shr js lea sub outsl push leave pop mov cmp punpckhbw push mov movsb adc out adc push idivb mull inc cltd push pushf clc dec inc notl sub cmp les xlat inc sub je sbb test sbb scas mov mov cmp mov stos push mov xchg enter js jbe gs cli mov jnp fist sub mov dec mov xor dec aaa pop in mov sahf sbb mov pop jge aaa sbb xchg add pop adc addr16 call sbb addr16 mov xchg xchg idivb mov mulb in ret inc push xchg sahf mov push stc mov mov mov fwait jmp imul idivl add and mov pop sahf sbb pop lock imul or cld data16 push daa and ss clc std sub (bad) loopne,pn add ret xchg mov push fistpll subl jmp xor mov mov add ret add and or or test movb test push pop std fldl add jle pushf daa or xor mov mov jmp mov add pushf jo push in in sub pop jmp int3 jle rcr push jne loopnew (bad) ss dec (bad) movl outsb mov pop bound mov lret push btr add sub inc mov xor dec inc and fdivr mov jae mov lea jmp lahf adc sub jno mov mov fisttp push leave stos enter ret loopne mov cld push (bad) mov adc jge out jge dec cmp mov ss aas das femms xor mov test pop and fldl or add or outsb mov xchg rorb or mov ret push add test test aaa dec or dec add xchg dec jbe cmc hlt inc andl push or push enter jg loope inc add pusha inc or pushl mov xor or enter push ficom mov sbb xor or xor mov xchg outsb data16 pop mov sbb cwtl (bad) lcall pop adc or loopne xchg ljmp sbb push shl fbstp addl ds das mov popa rorl mov xlat test cmp jne or data16 sbb notl dec mov mov dec or jne cld sbb adc aas adc fldlg2 and pop js and pusha mov and pop xchg pop sub test or loope and adc cmc sbb lock push icebp adc mov jle mov cmp fstpt imul jne dec test jg add lcall imul sarb movb dec jo push pop or stc clc movsl clc xchg in adc xchg or aam (bad) dec sahf (bad) flds pop adc push cmp sti jne jmp and lock mov cmp nop (bad) push xchg push or (bad) fisubrl repnz dec cmp cmp idiv or adc mov dec push mov mov int and add gs pop loopne or cmp sub push idiv sti or mov adc mov and add mulb arpl lds push pop push pop xor iret or cmpb and push cld mov fildl push fild sub sub inc adc push insl push in (bad) das xor pop es jb and lcall push and push or (bad) push scas pop icebp test mov push cmpl inc sahf ds mov std xchg cmp and std mov pop push lock movsl movsb push rcrl or fstl hlt cld cmp dec push in in jmp cmp stc mov pop in cli loope inc js cli xlat (bad) xor loop sbb sbb xor call or sub and mov ljmp mov adc outsb fnstcw or adc jo sbb shrb xchg enter mov push shrb mov push dec aas sbb out inc repz into sub outsb mov or xchg fldcw inc or leave add clc pop into into into dec lahf and push and mov nop js add (bad) xor sbbb pop jno mov cmp push nop cmpsl xchg push or inc push aam sbb lods cs adc out js sbb or scas adc (bad) xor repnz add inc movb mov scas mov push sub sub or sub pusha sbb jo sbb sbb iret and in or jmp or insb in mov xchg pop push rcr mov test movsb stc test dec (bad) or test adc jns loopne je mov inc inc clc jl adc cmc rorb pop das mov jo and add cwtl adc lods or mov sbb sub loopne mov push xor test loopne adc jg dec clc jne cmp pop pop out sbb dec mov add mov fs push or test gs sub mov or inc adc pushl addl push dec out cmp cmp scas add xor in sbb adc inc in cmp inc xor cmp push clc mov test add pop enter inc add sbb clc sbb (bad) in or cmp adc jb xchg adc (bad) scas sar pop sub pushf push xchg out xorl push push and xor fmuls (bad) mov inc aas (bad) inc xor add fldenv pop mov rorl mov test adc fdivrl rcll loope or enter or mov or aam mov xor jns fisubr je arpl push repnz les push (bad) je lods int3 in insl fnstenv enter sub pop nop sub insb in pop mov cmpl jl inc or xor pop mov push add outsb add in (bad) or ret movsl fdivrl in cmp les inc sub data16 xchg sbb dec daa je mov xchg int push mov push popf dec int3 movsl inc call mov pop cmpsb loopne insl inc mov xor dec dec and jmp inc movsbl testb or aad push inc mov pop idiv push push shr or or fucomi jg sub (bad) sub neg push and jmp ret or xchg jo fld popf nop mov add mov cmpl mov hlt sub or cmpsl sbb pop xor in jge dec pop leave adc push nop sbb inc mov jmp data16 jb jno pusha pop mov fcmovnb pusha and dec ret bound cli jp loope outsl ss (bad) add mov cmpl adc ljmp and jmp lret aas stc lock push fdivp shrb repz pop sbb jg inc xor sti enter in sti push adc or jnp dec pop fcoml and sub pminsw sbb mov xor adc clc mov pop mov js xchg or mov pusha dec xchg in (bad) fistp sti (bad) sti mov pop in loopne push test xor push dec cwtl xor ljmp xchg push xchg fs push add adc mov decb cld cmp or push pop jmp (bad) xchg pop mov add ds push test adc int3 cs cmc decb add jns push push imul inc or or jo cmp pop push or push lock test (bad) fidivrl incb incl jb jo mov ret add and and cwtl inc xchg addr16 incb fildll mov push add jmp pop cmpb jge sbb in hlt fucomp push in ret push inc fs cmp in bound jnp imul xchg lcall dec add loopne mov pushf dec sbb leave lock adc call inc pop xor out push jne lea and mov mov mov xchg mov and je,pn dec xor push xor inc xlat daa mov repz add jb test ja mov (bad) sub and jg sbb and stos pop lods push pop test pop add mov push sbb outsb adc push xor jnp or (bad) ds cwtl pop pop mov data16 and mov repnz mov add push inc jg mov mov adc sbb mov (bad) xchg cmp push add es pop mov ljmp or pop xchg jae lret aas mov adc jae ret jge decl mov push pop inc cmp decl sarb mov push push sub std and call sub inc sbb psubq idivb add (bad) cmp cmova cli xor sbb add mov and xchg push imul and mov xchg insl dec add mov inc mov inc test pop fidivl add or or jle inc outsb dec or mov aam orl xchg stos mov dec push jl ljmp mov push clc push xor inc lcall icebp addr16 mov or (bad) std push cmp jb and mov mov xor cmp stc pop (bad) aaa and shl add mov xor ljmp arpl cmp outsl add js shr shl add ds pop loopne pop jb mov cmc clc negb and add push incb fneni(8087 dec hlt push pop mov mov pop adc aad ss out inc aam sub cwtl test in push jp pop add push scas inc or hlt std adc mov movsl in lret ss frstor cmpb or inc adc cwtl adc and rolb (bad) or out dec or inc jne cltd andl addr16 cmp cmp aam (bad) inc add mov mov cmp cmpsl mov iret or cmp mov sbb cltd cmp rcll (bad) pop push add mov les pop mov mov fcomps je pop leave paddq push sbb xlat cmp dec sbb sub inc xor inc pop push add mov add and lea test js lret shlb mov (bad) adc mov and mov push mov idiv and pop mull jge out orb hlt dec clc mov jne inc push add jl and xchg fistpl sbb xchg add pop outsb push mov into push lea in pop jmp mov popa sub out xor subb jecxz test mov fnstcw idivb pop in jbe add cmpl insl jmp mov (bad) loopne pop jg ljmp sub dec and pop adc fbld mov or hlt (bad) cmp or mov push mov sub testb or or mov fldcw or pop nop jbe push sbb sbb add sbb adc cmpsb push shll xor scas pop out rolb shll testb add pop cmp ds out sbb push clc (bad) mov jne dec je clc xor push stos test cli pop ss cmp pop mov jl pop popa rorl test out push stc shrb inc jne (bad) cli mov insl jmp add dec std sbb dec mov mov pushf mov push jge stc add neg mov test lods and mov nop add adc add add jl popf dec sahf pop movsb pop inc cmp fcmovnu insb ss mov sub out mov add outsl sbb jl pop out sqrtps push inc add jae add enter dec mov mov mov dec jg call or inc lock cltd xor call or sbb adc rorl pusha mov mov mov push add cli gs xor push clc push ljmp das and dec call pop sub mov xchg jns jne inc add add fnstcw fisttpll dec or push push movsb add in or inc or mov add pushf cmp cmpl dec outsl imul or and int jmp pop fcmovnu xlat inc add daa stos or dec clc inc or xchg rorb inc jae xor or push push push iret mov in dec test dec mov inc pop insb decl rolb fwait ret lahf sbb enter dec aas add xchg lea jge pop push fprem fidivrl inc push stos adc mov or add inc jne mov mov lret inc dec sti jnp fcmovbe call mov test push sbb (bad) and aaa rcrb adc xor sbb inc adc fcmovbe (bad) out insl mov xchg push inc loope adc xor sbb not mov pop xor int3 sub clc out xlat inc fwait insb mov loopne sbb mov addr16 enter aaa xor fcmovnu nop pusha pop jmp jne enter jmp and jmp aas fisttpl mov jns add sub jmp mov mov jmp or push jle dec jo or std imul dec cli jae mov xor push je mov mov pop mov inc or or cmp arpl (bad) je std xor cmp faddl push cmpsl cld insl and pop scas adc add push push and leave call insb test xor push jge mov das mov pop and or jle insb mov or jne mov les push mov stos arpl mov call cmp fs jne cmpsb imul dec inc push and test enter push cmpsl in mov or push rcrb pop jmp push xlat xor jle adc or movl add or mov inc insb sub add and idivb imul int3 add ja daa imul or or movsl push adc pop sub inc imul pop and or xchg mov out test rclb mov pop push aas pop shrl xlat xor mov adc movsl jg xor mov pop cmp add sub push push or jle fdivrl or inc jmp leave inc adc imul push adc and fdivrl dec jno,pn or mov add adc in scas lea add mov ljmp cmp push xor and jle mov mov stos mov xor jl jmp mov and pop cmp lock adc clc cmp ret imul nop (bad) neg or push stc call sbb and xchg adc mov ret xchg mov lahf xor sarb and icebp lods pop mov out xor push xor mov pop mov iret pop cld or cmp or inc adc pop cs test add (bad) push mov imul sbb pop jg fs lods pop push jle imul cltd sub clc push mov roll icebp mov in add lea fsubrl pop push das pop jae and popf loopne adc and mov pop mov mov mov in push jo bound ret jl dec jg jmp mov mov add push pop mov sub in addl loope es mov loope push sbb sti add pop test rorl sub cmp frstor mov notl mov pmaxub aas jbe cmp and je push pushf fsubrs dec mov mov sbb ret fisttpl mov or pop or pop xchg jmp inc push stos inc or pop cs mov test push pushl test push outsl and mov add jae clc lea sub mov cmp inc inc inc sbb icebp pop sub mov in clc cmp shrl mov rcrl pop dec imul out lea mov fistpll jl mov imul push xor ljmp add rclb dec sub adc xor lock icebp insl push mov and dec inc or inc test js inc ja cmp inc mov pop adc inc mov (bad) xchg int aaa jne pop into lea (bad) jbe lock cmp mov testb pop mov push sbb cld push stc dec decl push jae mov push lea or test inc mov cli push popa sub shlb add fsub pop je xlat ja add pop loopne in fadds dec inc fisttpl in cltd xchg pushl push inc std sub loopne add mov cmp jne pop mov fwait in inc in jb (bad) cs cmp and adc cmp imul add or dec loopne in mov fistpll push or lock inc or leave mov fidivl or pop inc xchg es dec jbe mov divb sbb inc cmp add inc push fbstp mov sub mov lea push (bad) sub cwtl mov or insl mov sub cmpsb loopne ja jmp cli xlat pop mov (bad) cmp jne xlat inc push add jle and cmp mov scas sbbl pop stos jbe fwait loop inc (bad) jg mov (bad) ljmp push inc dec loopne adc mov jmp adc rcrl scas out js add orl mov jb in pusha rcrl lods jmp leave jbe clc add mov (bad) jae mov xor push or pusha ret insl pop lret (bad) in xchg xchg inc adc push sbb xor pop mov adc decl dec mov dec inc and into movb dec in in add loope pop clc xor mov aaa lods adc add mov lods adcl pop push js add and sub push dec outsl (bad) in (bad) dec in invd add cmpsb or adc jne std in cmp jl add or mov in mov mov mov add sbbb hlt and int in in loopne out leave pop mov pop out inc push jns adc push push dec rorl mov xor inc dec pop xchg xchg or xor mov xchg ja or inc jno push lods xchg faddl inc jne mov ror or add ja aas push cli bound push lea lea aaa push jnp or push jbe cmp (bad) outsb cltd sub cmp fistl mov and fistpl js lret or jge rolb jmp cmpsl mov inc mov push mov mov adc sbb xor lock es push lret lods jl push arpl add (bad) sbb ljmp adc add jns jae xchg mov pop jecxz mov xchg clc cltd mull xchg cmpsl orb pop sbb int dec aad or mov mov mov push mov push bound shr out ret pop add or mov jge int3 rcl int adc addl or pop mov lahf std adc roll lret call xor or inc cli mov sub xchg mov adc or push les inc dec jp ret jle cmpb nop inc cmp bound sub xor popa (bad) push nop mov cmp and sbb vrsqrtps push pop push mov or lods movl add push orl je sti daa jmp or insl fs mov icebp push cltd pop push lea lods mov mov scas enter cltd sbb std mov mov sbb (bad) fildll mov xchg test inc mov jl jp cmp push pop xchg movsl sbb popf inc adc and fldt jmp fs pop jecxz nop enter add jne mov jg cmp push push lcall enter or aad fnstenv pop cmp add push roll xor hlt gs push lret pop add ficoml push push mov mov adc ret adc loopne jge push lea inc (bad) sbb or les rorl mov pop popf mov mov or push dec sbb rorb sbb pop jb cld cmp push pop sbb es leave lcall in push and (bad) dec and sbb leave call sub pop fwait inc rcr mov rcrb dec int pop (bad) sub sbb stos pop shrl test jno cwtl arpl or push mov xlat dec adc mov stos dec js jge and pop jo pop or pusha xor decb and cmp jl push jg inc shrl push inc insl mov jg fsubrl insl adc clc (bad) jg idivb pusha sub fsubrs cmovp fstl fs loop add push cmpsb imul movsb addr16 ss fs lret xor pop inc cmc xor or push mov mov stos insl and cmp adc pop imul lods push xchg lock pop and jo or mov push mov add jg pop push xchg inc std and pusha into add mov aaa mov repz mov push push sub add (bad) or sbb add or decl adc fidivr add stos push fldl aam push cmpsl lret int3 mov mov les pop es push inc loopne rcl xchg hlt push (bad) mov mov push mov roll (bad) xor pusha or cwtl add mov push mov push mov and test dec js mov in pusha jne dec sub dec or or div push push sbb adc gs mov push dec inc jo jb adc dec (bad) dec aam add into cmp jne adc repnz stos cmp std int3 add out fldt push out add or out outsb cmp aaa idivl rorl xor addr16 push dec sbb sahf push or ss sbb sub mov js mov inc or add xchg mov mov push push inc cmp jbe add push lea mov ds lock xor pusha aaa ss pop cld push push cli cmp push jmp ds je into cmp add adc push lods push movsl in and sub mov jg or testb loopne lods (bad) adc fldt outsl incl mov add sbb jo add push push js mov or inc push loopne,pt call cltd mov into push sti ss shl or adc and cwtl sub aam in sar adc (bad) mov mov and add mov pop ret push add pop and iret push xlat into add pop lods cmp (bad) rcll pop (bad) push imul pusha cli add scas fstpt dec adc add lods jnp sbb pop pop shl or shl mov xchg icebp add add inc jle aad push adc cmp rol loope bound xchg ja loopne bound popa addr16 shrd or xchg fadd pop adc aad repnz je sbb mov and adc mov mov ja test sbb mov pop (bad) icebp mov stc pop loop cmp sbb inc cwtl mov xchg cmp call ror mov pop sbb jg loop mov ficoml push jne mov sbb mov sbb roll sbb enter cmp pop sarb mov push xor (bad) imul sub rolb push negb lret sbb fs imul lret rolb and xchg sub inc mov pushl mov push imul jno cmp out cmp xchg or mov sbb add or sbb xor cmp jmp mov and adc dec jb (bad) sbb sbb push (bad) jae ret pop push dec jge or shlb popf add or sar jp jp fcompl add adcl pop popa and or leave ret pop sub or sub mov mov (bad) fisttp or adc push inc lds jnp push inc sti fcomip aad inc or sbb xchg (bad) stc pop jge sarb pop push sti push mov pop push jo sti clc or imulb sbb (bad) jle je aaa lds fistpll (bad) or xor mov call arpl outsl cmp aad dec mov inc iret jnp adc push pop sar inc adc fnstenv mov adc mov mov js rolb pop adc pop or sbb stc insb das inc push cmp lds (bad) jne cmp mov fwait int inc mov ja fcoms ljmp insl add jne sub aad loope js and (bad) pop jmp testb rolb sub (bad) out add inc or test enter or dec shlb or jg push dec aam popa push les (bad) jbe push sbb push xchg lods and inc cmpsb xor jge jle pusha mov call popf mov pop bound mov push les push insl inc popa faddl fiaddl adc out pminub movsl dec push pop push inc imul sub push adc mov out (bad) push adc dec push dec and add xor clc fldt add rcrb or xorl add ljmp push sbb fld test pop mov out adc and mov pop adc sbb pop inc mov outsb mov sub movsb pop push mov mov std push jmp adc sub ja orl inc in inc and rorb mov mov rorb mov flds push ss aas cmp jl push out or lock push push popf mull xchg or add and push mov lds add stos mov lcall pop or adc out movsb adc add pop adc and js pop dec je daa pop shrb jle outsb mov fldln2 or aaa pop add push xchg pop cmpb loopne adc xchg pop rcrb push out int3 push pop pusha mov xchg fcmovne pusha mov mov shrb sbb ja ret in sbb and dec sbb xorb and dec pop outsb jg mov adc mov hlt push ljmp lock lock push push cmp fidivl push mov mov push jmp xchg clc sar cltd stos jg lods aad jge cmp mov outsl fnstenv mov pop jp push dec add cmp popa out push or push shll das pop jb incl sarl push pop (bad) sti push dec push cmp inc (bad) mov lods cmpsl lds leave push rclb xchg jb push nop adc lahf testb adc aam outsb sbb inc dec adc push rclb jo outsb push push push or imul addr16 out sbb js mov or pop jne xor dec (bad) mov pop cmp ss adc dec jne pop mov jl arpl or cmp (bad) sbb stos fldpi and pop mov daa rclb xor push xchg mov lcall sub (bad) mov mov sahf adc or cmp sub mov sub push sbb stc cs jl mov cmp sub mov mov decl xchg pop aam pop or jb sub int3 push lea sub test sub pushl pop xchg xchg jmp int3 int3 push fninit fnstsw mov mov adc aas adc adc cmp pop pop clc aas jne inc fldcw add or sbb sub test pop pop pop jae mov push aam test movsb mov stos shll jge push mov add adc or push insl mov cmp jb jb xor add stc add sbb fisub cmp jbe dec push jecxz stos mov test sti pushl add and xor je or push (bad) out scas add add dec add (bad) mov andl and lods cmp jbe jecxz stos inc ja call jns xor mov std pop jecxz mov lods incl mov test sbb lods mov in out jbe cmp cmc dec mov stos mov sub mov and hlt xlat mov or sbb push xchg add dec cmp je repz pop sub fidiv adc mov add sbb gs lea mov jae cmpl sbb xor and aam scas adc add push cltd ss sbbb loope or push jl mov inc adcl push adc or jle push mov and in push (bad) decl jne or movl add push lods jns push inc sub mov mov imul push test mov mov stos mov ljmp mov push stos je inc sub sbb je and sub lods jne cmp pop fdivs adc jb adc inc adc out or adc jle je leave jno push test adc aaa stos xor cmp jae sbb fnstenv sub testl or adc xor mov outsb imul sysexit sub pop sbb je (bad) pop cmp dec repnz fstpl imul and jl and sub sbb xor pop mov or insb lcall dec xor sub mov adc xchg sub stc jbe lea dec push insb sti fwait mov push sbb cmpl push push add sbb mov or sbb or lock sbb ffreep jmp adcl (bad) clc mov inc out mov adc push das push push pop adc fsts pop inc mov or or mov jo mov add or jp fldcw or scas xchg or (bad) mov dec sbb adc cmpsl mov jb or (bad) lock pop push pop mov jle jns cmp push push and rolb cld sbb push orl and lahf aam mov cmpsl adc and jge sub ss je mov (bad) pop in sbb insl jl inc adc cmp mov mov mov insl mov or ss xor stos mov jmp cmp popf push (bad) shrl jne sbb jae aaa push pop loop in inc add inc test sbb fs jne and push mov jge data16 fsub sti fcomps xor or (bad) mov dec jmp push jne cltd sub adc inc in ret adc push cmp mov inc stos in adc test je mov mov inc or lea popa jg je push sub add je adc pop inc jle inc jle lock jg cmp and call je dec jne push and mov or jne lret xchg lret pop inc mov sub xchg sub aam pop xchg bound jmp inc out pop call push iret push jno pop jmp (bad) insb insb outsl jbe je add add dec push outsb sti outsl in add mov dec xchg invd jge (bad) (bad) push push push xor pop jne psubsb inc leave push jl mov jne gs sbb pop insl cwtl xor leave mov fidivl mov push dec cld sub in and in inc inc sbb adc mov int3 test cmpsb mov dec jne test jbe mov adc adc push mov jmp shrd mov fidivrl repz and or sbb cmp (bad) xor jl stc jle push aad outsl sub adc jo jno push out adc repnz and insl test aas mov sbb shrb fisubrl cmpsl jns or andb inc push sbb push (bad) cmp push sbb xor xor or movsl and rcr in test inc and push sbb add dec lea push mov outsb clc and je add dec push add mov (bad) pop ja ja dec mov insl xlat dec popf adc and push cmp je push jae pop jmp rol lret inc fildl push fldl insl clc inc in fmull mov mov xchg fcmovbe pop bound cmp enter test in call cli std jns aas in add inc in mov push dec fmul and jne iret out (bad) addr16 fldenv jne xchg jb pop shlb outsl inc cltd in fwait lods xchg push add and shll fidivl sbb fildl adc or lea insl out test aam pushf jno mov ret in fcmovnu leave jne sti fld ficom xor gs dec out sub mov sub insl pop in enter sbb sub inc adc arpl dec jge sub jl mov mov decl scas jnp pop xor js and je sbb sub enter add ffree in and inc jb aaa jmp shr mov adc ja or imul add push inc (bad) mov int mov push mov fcmovne in or sbb adc je add add mov jne andl mov add push shll test cltd push fwait jl (bad) fsub push rolb inc push cmp sub pop xchg adc xchg fild or pusha sub cwtl fildl xor pop mov popl pop jne inc fisubr loopne adc push push mov cmp loopne ficomp inc fstpl inc loope int loopne lods into fisttpll dec lret incl pop inc iret outsl fstl insl fsubl (bad) je in je mov add or cmc push sbb insb push cmp push mov sub adc inc adc inc adc lret rcrl or ss push ret xor les outsl sbb insl cmp je cmp je lea or lcall pop dec fistl daa and stc inc mov pop mov xchg push adc inc and sbb mov adc adc or add rolb or outsb ds mov push insl jnp xor sub minss dec cwtl clc inc adc pop je aam cmc jle xchg jmp cmp mov jae adc ret cmp jb sub xchg mov pop fildll xchg dec test sbb sub sbb cld add mov (bad) fwait mov mov mulb jl or push out jle clc movb outsl rorb sbb or popa and pop in fdivl nop arpl fstp pop cmp sub pop or adc or mov sbb fcomps inc mov adc pop push movsb and enter jb push sbb ja adc push or jo jmp test pop inc (bad) fstl jmp or jb jne mov rorb movsl pop mov mov or push jmp inc sti mov sbb push lea cmp mov or int3 insb xor je pop xor sub lods test aas cmp (bad) ror pop test ss xchg pop jmp mov adc jmp test push (bad) mov out int3 sti cs mov cltd xor sub ret or dec fmul fistl clc or cli fyl2x repz adc dec adc add pop mov or mov (bad) data16 (bad) aam or mov sbb inc mov test mov mov loopne mov xchg jo add add add sar push lock push out sbb int3 push in inc es jne jbe or or cmp (bad) or mov sbb cs (bad) and cmc mov push inc add sbb jbe jge adc or sbb cmp outsl in jg lea add or mov or fwait adc lret sti add rcr jg in cmp push ja int (bad) pop pusha add push shr and add hlt push sbb insl imul jle add mov sarb and adc (bad) cmp jbe stc (bad) pop lods loopne loope jmp movsl xor or mov loope xor dec inc out jmp (bad) fwait pop push and int3 sub cld out sub add inc aam ret or ljmp push loop outsl pop dec fldl2e mov (bad) lods mov lock rcr fstp test mov or adc add repz push xor lea mov mov dec pop sub sbb popa and mov stc cmp inc ffree add adc sbb inc pop inc pop inc imul mov mov popf xor jae sub cltd dec das sbb aam mov cld adc (bad) sub jo push dec and adc xor and mov mov dec and dec subl loope jg sbb and roll push xchg insl add int3 stos push imul dec movb dec rcl ror lret cwtl ss mov mov push inc loop push sub fwait xor mov insl or imul cmp in xor lds bound inc addr16 scas inc sub sbb ljmp jl add movb pop stos in stc int3 movsb orl push rolb jge add mov cmp pop jbe jo movb adc xchg mov rolb pop lcall and or mov adc or ret decl lods lds cmp fsubr push std cmp jne push add ja inc arpl je sub insl adc fwait lods and sbb xchg test sbb lock push sbb movsb cmp add sbb mov pop sbb aam orl aaa pop call mov cmp mov jb pop cmp jne mov enter sub es repnz jg sbb inc mov jnp sub add push push push add gs pop movsb push dec mov scas test js cmpb add xor sbb mov lahf bound jb jae je push sub cmc popf mov test popa mov cmp inc sbb movl loope xor inc add scas pop stc gs mov jne and sub xor adc mov (bad) mov sbb push test xor push xchg push mov xchg (bad) adc push push push inc les in and (bad) fsubrp hlt fwait negl mov or lret mov xor sbb and adc or jg das iret mov pop fisttp jb pop movb dec enter test je testl push out pop scas sub ret or (bad) in adc sbbb pop call call pop inc and rolb cli push lds mov jbe xchg mov fldl add movsb add push mov sbb pop adc test clc or cli push sbb sub mov jb in ret pcmpeqw xor push adc adc mov mov or pop insb pop sbb loopne icebp cmp ja jge (bad) pushl scas sbb (bad) je lea sub mov mov dec mov scas arpl movsl arpl mov mov mov mov dec shr les jg ret shl add mov and stos push insl (bad) mov jp test add push adc jae pop dec or je xchg shrb hlt adc dec dec cld call xchg andb in hlt cltd and push mov add sub xchg popf sbb outsl outsl sbb add cmp cli cli je sub push jbe mov lea shr inc mov adc test out add in pop jmp mov mov mov inc xchg test inc dec sbbb sub adc mov jne cmp rcll jb add add movsb mov inc sbb or xlat inc data16 addl out mov push push push or into cs rcrl add sbb jge dec (bad) adc push cmovbe sbb cmp insl movl lds adc mov mov xor sahf add (bad) dec adc fsub faddl lahf outsl dec xchg fcmovnbe scas icebp sub xor (bad) push adc pop mov (bad) push jae scas ja (bad) repnz adc push jmp lcall push je cmpsl push adc jnp jne inc add pop sbb xor mov dec movb push in (bad) mov adc (bad) jg sub flds cmp sbb clc stos or inc cmp xchg pop mov add sub int3 (bad) dec mov and jne or aas or inc mov push sub push add in cmp mov lock shlb mov push mov jne sbb or or push loopne clc (bad) sub (bad) mov aam adc add xchg and pushf or jnp insl cwtl data16 jecxz inc inc data16 cld jae pop std or xchg lea jae enter add popa add dec bound mov mov js mov inc jno hlt pop idiv (bad) orl mov decl sub mov pop jge cmp and ret push lds xor xchg int3 adc pushf or imul (bad) mov or jne jmp fidivrl inc mov cmp je sub xor sub movsl lret and (bad) ret add fsubrs lahf clc dec (bad) lock int3 inc push mov inc lcall negb movsb sbb push mov js test fbld adc mov cmp (bad) testb pop push inc cmpb loope sbb pop mov lretw idivb rorl or out xor (bad) lcall movsl or and pop pop jno or mov cmpsl (bad) push add mov loop or ljmp add mov sbb pop jae pop je loopne push mov mov inc inc dec lock push add and imul (bad) and insl xchg lret cmp add stc inc xchg clc and xor push arpl xchg mov cmp fsubrs ljmp mov inc nop or mov inc pop jne push cmp sub pop pop fisubl nop je mov cmp addl inc xchg ljmp mov lods jns mov add cmp ja and hlt add fwait lea push sub mov (bad) pop sub sub cvtpi2ps push sete inc mov insl xorl xor or insl (bad) jno mov fdivs cmp pop imul cs or xchg test mov outsb aaa mov les jmp (bad) lea popf cmp jbe jne mov jmp testb mov add bound add jae inc mov test loope fmulp sar in inc mov and xor adc dec cltd enter es xor stos mov insb pop xor mov pop bound or outsl cmp loopne add mov sbb push unpcklps mov adc xchg pop pop mov dec cmpb dec not sahf push or mull ret or and sarl (bad) jbe sarb push test pop inc es cmp sbb add ja add mov pop ret fimull sbbl jo rcrb add or ljmp jl mov jecxz fisubl sbb pop jmp sti lea cmp je add mov push pop jne inc push sbb cmp cmp jbe cmp jne inc shll test mov adc cmp jae in in scas mov rcrl add fdivp ret jmp push bound repnz das shlb xchg rol sub loope mov fwait sbb mov pop push jne cmp repnz or add mov push push bound and add jns jmp xchg add setg push adc xor or lods mov push or xchg mov or or add pop cld pushl or repz nop cmp xchg xchg or mov stos xchg bound orl and and punpckhwd clc xchg in pop mov and xor and sbb bound add and out pop add and outsb and dec pop mov inc in mov and and jg rol dec inc fbld add push stc and into push in sub jns pop adc mov psllw cmp rcr nop stos jae test inc out xchg xchg inc or xchg mov adc and mov (bad) sti sti out adc movzwl mov jns in sub dec mov in inc inc mov or push pop enter outsb (bad) cmc jmp xchg sub sbb pop ljmp (bad) fsub iret lret inc inc push mov in flds jne fwait call sub cbtw adc fcoms cmp inc dec dec loope imul sbb neg sbb not jg and sbb jge cmp je jns outsl dec sub dec inc shll je xor fwait inc fistpl inc je or pop out mov inc lea or cmp (bad) mov inc or orl adc xor cwtl xchg sbb add fbld cmp cmp push inc das jne rcll fcmovnbe pop (bad) rcl imul xor inc adc cmp cld push jo mov cmp jmp xchg cmp add add sti push cs and adc aas std out je rcrb cmp lods subl or incb lret sbb sbb inc inc add loopne add add add add mov push cmp xor (bad) andl dec inc cmp pop add jb out jecxz mov mov sub push cmp dec or bound daa or push mov mov jbe outsl or loop or jmp leave data16 shlb push xor int3 jmp mov test jg aad je sbb lea mov pop popaw sbb lcall bound xlat cmpl or rcrb sahf adc mov xchg add push mov cmp or mov clc fstpl mov xor mov sub mov add push roll or popa (bad) dec push in mov xor sub push in loopne out adc pop in xchg in sub divl cmp push cmp ss pop or mov and daa mov mov add inc ror inc add bound adc test les dec mov sbb or add inc push ljmp movsl movsw sub lret inc xchg xchg xchg test pop in loopne addb leave pusha add push xchg into add and (bad) into push pop add sub (bad) jle divb fs and das add enter push dec enter dec inc inc cmp enter xor sub enter and sbb enter sbb xchg xchg xchg out mov fs insb xchg ja mov mov repz jl mov mov mov mov ds iret mov cwtl mov mov out stc mov mov mov xchg mov add mov rorb fsub mov lock add add ja xchg movsb mov xor test lods jns sbb xchg xor sbb sbb and sbb sbb sbb adc sbb sbb or add xor xor add in xor je fs fs fmuls mov pop (bad) mov lcall jle and adc pop push adc ret push lods pop ljmp pop dec add imul pop inc pop pop lahf aas incl pop pop push inc dec push inc push inc dec dec push (bad) dec push push jns je insl push outsl outsl je and mov push pop and pop push inc dec dec push popf int and outsl and inc dec int cld stc pop push dec dec dec inc dec dec dec xor push push rsqrtps jle gs das add cmp push sar dec push dec push inc pop push mov inc inc dec inc ucomiss sti inc dec pop inc inc sbb sub stc xchg push dec dec sbb inc dec push dec push dec int3 sahf sbb push dec rcpps push dec xorl dec push jb fs je xchg inc inc (bad) dec out push inc push gs imul pop nop add jb outsb je inc dec inc jne insb (bad) into pop sti fs jne bound sbb popa loope sarb dec popa insl gs outsl fistpll inc push push inc rcrl arpl jae data16 push imul and jae dec push pop jno push inc mov push mov pop inc sar inc dec dec sub inc daa inc loopne mov sbb dec inc dec jo jmp ja push lcall jbe pop inc out insb push and imul outsl jne sbbb imul inc (bad) std inc inc dec push pop inc inc push inc inc fadd mov mov insl ret jb sub (bad) add cs outsb imul sub decl or (bad) aas ja dec push push xor xor xor xor and xor xor xchg lret cmp xor xor add mov je or and arpl ds mov fistpl adc js insb outsl adc push push inc ficompl jae outsl (bad) sbb gs je jo jbe adc ds pop push push push imul popa jns addr16 outsb and pop fistl jae (bad) add arpl data16 lcall (bad) push push popa jae mov cmp mov ss add or popa fs pop push mov sub lock adc xor push pop inc mov je jo push scas push xorl adc dec xlat push insl in sbb inc push xor xor push outsb lret cmc xchg addb test out inc pop mov inc pop or mov fs inc (bad) jge xor push push inc inc sbb mov jbe push inc jae and push push dec or aam arpl inc sub or and cmpsl jae aaa or mov jno lods ret push fisub insb pop push cmpl push push dec xchg je cmp loope mov dec jg sub jo arpl or add and test ret in test push gs (bad) repz idivb popa je je jo ja imulb mov add pop cltd adc add imul jae,pt xlat or mov add sbb cltd in sub das lea imul test push push inc outsb pop (bad) shrb and add movsb sub and fs sti test xor je cmp rcrl sub dec inc xor mov push adc push inc pop jae xor (bad) mov sub fsubrs jno js sub icebp or xchg fwait popa popa inc jmp inc repz or dec out ficompl inc test cmp pop add push (bad) push jnp pop fildl or popa mov (bad) ja (bad) push jne addr16 pop insl popa push pop popf rorb addr16 push leave sub jne mov pop out outsl xor fbstp je push pop pop xor popa cmp pop ds packuswb sbb pusha adc insl lcall pop imul or or nop lods je (bad) push dec arpl xsavec jae pop and test or jae jl pop pop pop inc inc dec dec dec dec dec fisttpll push push or push jno outsl lods arpl jl imul jno pop loopne jle jne ja jns xor xor ss cmp sub inc jnp aaa (bad) xor imulb add dec jbe pop mov pop ja pop xor jns aaa out sarb je inc cmp add xor xor xor sbb pusha pop cmp insl mov sub or lds jo dec das mov adcl imul das xor outsb mov icebp int3 (bad) dec shll dec adc sub pop and sub mul pop or sbbl pop inc jae sti fistpl jecxz imul or add and pcmpgtb jbe xor mov xor shrb and sub push add pop pusha xor insl adc inc outsl ret mov xchg and add sbb add gs adc movsl push jae add jne mov imul sub pop outsl pop insl or insb inc loop jae arpl or or or ja jb add add jmp sub sub jae or push sbb mov mov adc inc sub fisubrl dec iret mov insb cmpsl cmpsl pushf insl mov ret xchg add and shlb lret out add fsubl call and ret dec xor push mov or jp jb and xor sbb mov and addr16 adc sub outsl dec mov xor inc (bad) arpl in (bad) (bad) dec clc call in loopne loop in call in jmp and int push idiv in icebp in imul call sti cmc push out jmp in out and aam jge sti repnz and jmp cmova adc or ja sub inc (bad) outsb pop lcall pop aam sbb push and xor jne push jmp lods mov inc push pop inc dec mov or dec insl jae imul jns das add sbb ja push arpl dec outsl jbe inc or mov and je add pop xor rcll out popf cmpsb in (bad) xor adc int je frstor and xlat mov arpl push adc es mov lods pop cs inc xor inc leave je sti pop xor or inc popl clc mov xor dec daa push mov pop sub loop (bad) adc jae xor inc ja js or pop jmp push das jae (bad) lcall out repz xor (bad) add (bad) or cvtps2pi daa hlt or nop pop and or nop stos cmpsl jbe cs repnz mov cmp shrd xchg and pop xor leave test nop or outsl mov or pop fstpt pop nop or nop scas sbb in nop or push cmovae das mov inc ss or das xor adc mov inc ss or and ss gs mov (bad) push pop ret das inc ss or stos aas insb test mov iret das in nop lea psadbw repz or pop repnz mov sbb imul and mov sarb repnz mov mov and outsl bound movsb cmpsl adc aaa leave pop or test cmc enter fsts nop or push jmp dec pop jb fdivl cld fs xor fimul ss xchg xor incb fs xor loop outsl mov xor pop mov nop repz into cs or lock xchg icebp fs xchg jecxz xchg (bad) iret in jg pop jbe sbb mov ss push clc nop or test fsts or push in imull jb div divb fs xor inc dec adc push adc ljmp nop/reserved xor ss pop push cs push inc jb pop inc pop mov and rorb xor pop cvtdq2ps pop fsubs mov mov dec xchg inc sbb cltd mov insb (bad) das or (bad) and or psubusb lds pop lahf dec leave nop or das jnp in push adc dec popf fisubl jbe and and xor sub mov xchg or xor and xchg and das push repnz jb and xchg and cmp xchg and xchg imul sbb and sbb xchg and xchg and lahf orl or nop or das leave nop or jg or jl cmp icebp leave nop or cmp or nop or push cmc nop or nop sub in push fldz pop xor jb xchg hlt notb jp out testb inc dec xchg in cmp xchg inc repnz inc ss iret pop paddsb and and or nop pop mov outsl dec nop or nop lea cwtl in push leave rclb negb mov insb dec xchg sbb sbb insb dec sbb insb dec xchg scas ret das or xchg cmc and mov sbb jg xchg and lods mov and outsl xor das and lods inc xor dec fistpll das pop (bad) pop ss jb mov push inc daa jg inc jb jo pop sbb popa popl das xor jb repnz das inc xor scas pusha xchg xchg and xchg lea push incl jne leave nop or jbe js leave nop or jns nop or nop das add les push iret stos into incb inc insl in nop or lmsw aas outsl jg movsl loopne cmp add cmpl leave nop cld faddl add mov leave nop add loope das mov push leave nop pop mov insb clc aas pop cmc mov loopne mov xchg mov (bad) pushl pusha daa pop and rclb mov add dec flds sbb xchg daa scas pop sbb subps xor mov iret (bad) push decl neg xchg pop testl outsb mov dec push or pop jo inc inc in aas xchg fs nop adc inc ss lcall inc pop outsl and and sar (bad) pushl push fsubs mov add push outsb adc add (bad) mov movl clc or scas adc lahf cs ss ss push scas mov inc orl dec aaa fs ss push sbb lahf es sbb and mov das add sbb or nop inc ss pop aas adc dec andb or (bad) fsts repz nop pop inc or pop outsb repnz je cltd dec aas mov pop repnz push and pop hlt cmp inc xor das xor jb clc cmp mov pop or and cmp mov and pop cmp xchg sub xchg and xor insb xor sbb adc xchg insl ss inc test repz xor fsts sub in (bad) mov and xchg int lahf inc ss daa cmp ss dec nop pop pop enter clc push add in fcomi lea inc fist nop or outsl adc in or adc out xchg sbb adc nop inc jb pop out clc xchg cmovs push repz and push adc das inc cs xor dec sbb (bad) nop or das fs cs repz xchg jbe ja xchg or adc xchg and jne jge sbb adc xchg in lahf hlt das stc enter lahf dec movd xchg loopne or bound xchg and mov mov mov setb sbb (bad) and nop push dec jb adc loop sahf popf inc ss fisttp cmp nop xor aas les inc inc out call ret mov insb and jne dec (bad) cli (bad) xor in dec pop scas test rcrl enter rcrl setns bound enter adc ret inc dec mov xchg mov xchg fs xchg fs (bad) lea fs cmovae or cmc es push js inc dec pop dec xchg data16 das sub pop lret nop dec enter jl fs rolb subb push fistp mov sbb repnz stos and xchg and xchg and xchg or sbb jno jo xchg add jb pop in hlt mov xchg or inc jg and xchg mov inc sbb inc inc pinsrw shrb ljmp sti adc or cmpps jle add rolb popa push or scas int adc ds leave loop mov setb and outsl outsb jg aas popa stc push mov xor test add aas fs nop std mov mov mov pop cmp lcall (bad) (bad) ja (bad) cmp imul xchg or hlt out test mov sbb clc loop jb push aas popl (bad) sti loope outsb (bad) cmpsl xor addl mov sub dec stos fs adc jns ja daa push push ud1 repnz pop inc add (bad) aas fs (bad) jb mov pop aad jbe xor add inc xchg pop das das shrl dec mov hlt addr16 cmova std adc jg cs imul lret shr movhps adc and stc mov mov mov cs insb jle mov addr16 or fadds sbbl dec and scas imul inc popa arpl fs pop sti or popa insb mov cmp xor stos mov inc dec inc push push dec test cmovge in dec jne insb fnstcw stos fcmovb and dec popa outsb popa and orl stos or jo sbb push lods popf dec gs (bad) push jne adc push shrd pop mov lods pop jecxz adc mov cmpsl pop add sbb lret add mov pop push or pop je popa adc and add fs (bad) add and and add test xchg pushf nop adc rolb add add dec xchg add imul mov and add mov and adc sub fidiv or aas sbb cmp adc outsb sbb push add sarb cmpsb mov inc jne aam sub sub fs insb jo inc (bad) call ljmp dec arpl pop imul sub dec push inc dec pushw bound (bad) (bad) (bad) jp jb inc xor imul cmp xor push inc dec inc hlt mov insb imul ja jns (bad) (bad) mov xor xor inc inc aaa cmp dec dec dec dec inc inc dec inc push push push (bad) lcall add bound push pop push push arpl (bad) mov inc mov imul outsb rorl fnsave ss lret pop icebp xor mov imul int jno fucom imul icebp popa bound mov dec push cmp mov xor insb fdivrs cmp push inc pop popa ret xchg push aas mov pushf push mov sub mov clc adc adc test jg add add add jb jo inc and adc inc pusha sti cmp lcall popa jb or in dec inc or arpl inc push gs jo xor gs xchg subb outsb adc jo outsb sbb (bad) push add or gs jo insb push arpl cmp or (bad) cmp or gs out pop push push push pop or gs sbb jb cmovge cmp popa jo imul notl jmp das inc mov push imul push outsb insl xor imul jae ret inc js je lods std or push hlt fs imul shrb adc imul sub dec enter fisubr ret in outsb ret push jb mov (bad) int test push jne jo cmp fstpl scas or push inc leave inc or arpl inc outsb jbe dec fsubrs popa cmp jns and je jbe adc lock je fcomps and sub xor in push adc sbb jae pop and insb popa mov imul pop jecxz in dec cld je inc jns push outsl pop out xchg mov mov leave testl fs xor mov ss jae cmp pop and sarl jo in dec or sbb in or mov arpl sti dec outsb outsw push sbb imul dec sub lock or push lds push adc xchg push xor sbb add or push insl pop pop (bad) sub inc test push stos pop cli sbb xchg jne fimull aaa (bad) cmpsl add jo fbstp outsb push gs push or or iret int3 dec gs lahf sbb add cli (bad) adc push push or dec jbe adc cmp sub dec ret dec dec cmp mov dec pop mov test ret ss out pop push imul mov push loope adc inc arpl aaa arpl js adc sbb ds mov inc jae,pn shrb dec pop push stc lods cmp add pop xchg dec add imul xor mov jo bound or push jne dec xor push aaa sub cmpsb sbb jo lar push jmp (bad) mov xchg sub inc or mov xchg push dec clc xor adc lods lcall scas not mov xor mov mov arpl lds fisttpl jns sbb (bad) fstpt xchg jns pop inc jne andnps or dec gs outsl mov jle sbb push les pop stos xchg cmp rcll add inc shll decl add lds loopne cmp sbb add repnz jge cmp add mov cmp add pop add data16 inc int add sub add mov push add fsubl add dec cmpsl call js cmpsb xor sbb or jp sti inc add scas mov cmp sub je lock and add mov add adc add add jmp add inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 