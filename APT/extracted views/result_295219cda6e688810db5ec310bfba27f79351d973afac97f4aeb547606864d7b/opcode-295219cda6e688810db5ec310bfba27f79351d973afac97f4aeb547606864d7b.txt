xchg pcmpgtd push data16 push xor sub push data16 adc jb mov inc or data16 or jg push data16 or data16 add data16 push pushw add data16 pcmpgtd loopne data16 push data16 xchg pcmpgtd bound data16 jge data16 or adc or data16 lret std mov pcmpgtd or xchg push xchg xchg pcmpgtd sbb data16 mov pcmpgtd jne pop (bad) or sub data16 mov pcmpgtd add data16 add test data16 xor adc dec push data16 ja mov data16 data16 data16 adc out push inc xchg pcmpgtd fisttpll scas lahf or data16 add push add add add jb dec add add add add add lcall add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add cmp add add add xchg cmp xchg pushf mov sub add add add add add and inc add bound push add push add add inc add add add add add add inc add add add pop inc add add add inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add nop dec add add je inc add add add add addb add add add add xor add or or add add add imul push lock add (bad) decl add add add add add add add add adc add inc add adc js add addb add add add jo gs add jo jb popa addr16 bound push add add sbb inc xchg hlt and nop cli push add add sahf add add add add and dec add add add clc add dec (bad) (bad) das shrl mov jp add add add add inc or add add enter pushf add add add add add add add (bad) (bad) incl add add sbb dec add add add jge xor add cld push inc add add add adc add cmp add xor inc add add add adc mov push adc dec add add add xchg addb pop inc add inc add pop add add clc sbb (bad) incl add add add add inc add addb push inc add (bad) (bad) incl add add adc inc add inc add adc hlt add add add nop addr16 add jle add add or inc add nop dec add inc add add add add shlb (bad) (bad) (bad) incl add add sbb dec add add add jge test inc add add add sbb add test inc add add add add add add mov inc add add add sbb and add dec test add sbb pop add add clc sbb (bad) incl add add add add sbb jo addb push inc add (bad) (bad) incl adc cmp add mov inc add add add add push inc add add add adc cmp add mov inc add add add sbb cmpb mov add add adc inc add add add add inc add push inc add add add adc inc add add add add jle add add add adc dec add add add add sbb cmpb mov add add adc dec add add push inc add add add inc add push inc add add add add add sbb mov inc add adc fcomps inc add sbb mov inc add adc add inc add sbb mov inc add adc sub inc add sbb mov inc add adc push sbb xor inc add inc add adc js inc add sbb mov inc add adc mov sbb mov inc add adc mov dec add (bad) (bad) incl add add add inc in dec cmpsb test and insl cmp add add add add add mov inc add add add add add add add add add sbb (bad) (bad) (bad) jmp push inc add add add jge (bad) incl add add add (bad) (bad) ljmp inc add add mov incl add add add inc add (bad) (bad) lcall add add nop dec add add add add add add add incl add addb add add push popa outsb outsl outsl outsb add add push je popa outsb imul add add imul jb popa arpl add fimull mov fs std rclb cmp movsl xorb mov xchg cmp sbb inc xchg hlt and nop cli push icebp cwtl xor movsl push imul cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add adc inc add add add add add add add push inc add add xchg dec add jle add xor or stos add xchg dec jo imul je outsl outsb xor dec jo imul je outsl outsb xor imul lods xor or stos add xchg inc outsl insl insl popa outsb xor add add add add pop add dec sbb arpl jecxz dec sbb or or inc lea jge clc add dec (bad) (bad) das shrl mov jp call xchg dec xchg push loop dec aas dec adc inc add or add add or add or adc add add adc add or add jae gs insb xor cs insb add add add inc insl jo jns arpl insb gs imul inc add add add fcoml add add add mov or je jmp push mov call jmp add add add add push jo popa je push arpl insb gs imul add add add call add add add add or je jmp push mov call jmp add add add add push jne jb push arpl insb gs imul inc add and add add hlt xchg dec add or je jmp push mov call jmp add add add add gs xor add add inc outsb jne push imul dec and pop and add add add add add add or je jmp push mov call jmp add add inc add add add add add add add add outsb add add xchg add add fldl add add xor sub add xor add and push add xor and push add xor add add fsubs inc add and add add jns lods xor or stos add xchg dec dec lods xor or stos add xchg push add outsl add add add push inc inc ss dec dec add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa dec bound gs fs data16 add jbe popa inc jns jb push popa jb add pop pop jbe popa dec xor jns add pop pop jbe popa push bound outsb add jbe popa push popa jb jae dec add add jbe popa push popa jb outsl add jbe popa push popa jb outsl jb pop pop jbe popa inc outsb gs je inc outsl jne fs jb outsl jb add add add add jbe popa dec xor popa jb add jbe popa push popa jb fs and or dec add jbe popa push popa jb jae inc jno add pop pop jbe popa push popa jb outsl jbe add add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push je push popa jb outsl jbe add jbe popa inc jb gs popa jb imul pop pop jbe popa inc jb gs je add add pop pop jbe popa inc jb gs popa jb add add jbe popa dec outsb push popa jb pop pop jbe popa push popa jb imul pop jbe popa dec xor jb add jbe popa push cmp je xor add add jbe popa inc jb gs bound add add jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa push dec xor add pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa dec outsb inc jae jb add add jbe popa push dec xor add dec xor push xchg cmp sbb inc xchg hlt and nop cli push fsubs dec mov fs cmp xor or stos add xchg inc add add add add add outsb outsl outsl outsb add push add add inc add add (bad) (bad) (bad) jmp add jne gs add lea add sbb add inc add incl sub add add add je outsl outsb xor push add add je outsl outsb xor add ja xlat adc add incl sub add add add je outsl outsb xor push add add je outsl outsb xor add and jge adc incl sub add add add je outsl outsb xor push add add je outsl outsb xor add clc adc adc add add add je outsl outsb xor push add add je outsl outsb xor add jne push add add incl sub add add je outsl outsb xor add je outsl outsb xor imul adc add add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or lret add add incl add add int3 xor add add dec (bad) (bad) das shrl mov jp cmc dec sbb arpl jecxz dec sbb cmp xor or stos add xchg xchg inc or mov add or push je popa outsb imul or imul add and xor add add xor add add xor add add add add add add add add in push add add and add add les or inc or dec ffreep mov mov into mov pop ret mov ljmp xchg rorb xlat jb mov scas lahf sbb xchg or add jne pushf in jge out (bad) mov adc push adc and xchg mull jp xchg sbb cmc jg adc int3 push test sbb fldl lods push (bad) mov inc and mov mov push push cltd jno push imul negl in xor cmp aam sahf cmp arpl gs pop adc or xchg pop in loope das inc pop call lret push movsl mov add lea add mov xchg jnp jo mov je pop and icebp jb mov push sub cmc xor jg sbb aaa cmc repz js in push mov aad lock push fcmove sub int3 inc rcll addl ret imul les cmp add aas sbb jmp mov sub sbb add ljmp xor pop loop jns push dec out xor rcll adc rclb or mov into xchg cmpsl nop daa and lds add lock mov fcmovnu andb les mov es enter inc in stos fistp in sub jg insl andl inc mov push lock bound repz push (bad) leave or sub pop sbb clc xchg pop mov aas sub xor in xor shlb mov mov inc mov jnp mov jbe inc and pop sbb xchg and pop push mov push (bad) arpl dec mov (bad) dec bnd dec lret rorl pop jno into icebp call mov mov fwait insb out test add aam test js cwtl lcall or popf xlat pushf int3 jb (bad) mov test cmc gs inc push mov f2xm1 mov call dec aas les xor push test iret adc ret push inc in dec nop adc sub push out test lret push pop pmullw shrl cmp pop sti scas std sbb lea xor popf (bad) jge out je (bad) push imul stc movb and cltd punpckldq lcall mov and or outsl daa or fucom jecxz imul into jg (bad) mov lret sarb jno pop and dec mov mov int hlt inc aam inc sub shrb das push mov mov cmp cmp test andps cmpsl adc inc jno mov cmc xor iret outsl je fisttp sub lret scas jp icebp mov pop jmp cld sahf jne lock inc sbb adc xorb rclb stos clc xchg ret test (bad) mov jl inc xor mov stos mov inc or cmp out mov (bad) insl (bad) fldenv nop ret mov and sar dec outsb adc (bad) xchg sub inc dec (bad) (bad) jno push xchg or pop sub movsb push dec sbb mov or pop (bad) shll popf jp outsl jae fnop push jnp mov and jecxz adc aam fldenv mov xor in pop and pop stc scas leave push ljmp negl jecxz lret test fstl int3 cmp std sub mov repnz mov sub cmc xor and scas jne jo add cmpsb ja dec mov lods loopne xor fdivr inc adc int adc data16 jle push and inc cwtl inc mov in xor inc addl xlat addr16 pop paddd enter sub or jge dec sub and push sub push mov pop into push jmp incb rcll insb mov mov pusha or aad test js and pop das xchg outsb push pop es idiv mov mov xor dec call jmp rcrl stos dec lahf inc mov mov fsubrl xchg jb in arpl push xor enter dec lds loope push mov mov sarb mov ljmp lods push jo push sahf cld adc mov aad mov imul mov test push popf fwait les fldz test in dec mov jns int gs ror out std popa inc lret dec push dec fist daa jbe xor fldl add cmpsb stos push or mov in out (bad) jecxz icebp jno stc fistpl fmuls fcmovb or fistpl dec hlt xchg sbb xchg pop outsb lcall js lahf test das xchg (bad) push pop pop add outsb cli mov mov add stos lahf divl xlat push push leave inc add les xchg adc and jmp adc mov dec sbbb out jecxz xor mov fcmovne push mov shr loop add push sub jl and mov adc sahf gs imulb shrl xor ljmp push jle inc push movsb aas outsb or xor ss int3 sub icebp frstor sub jno data16 xor out mov mov (bad) sbb mov fwait cmp fisubr jb cmp adc cmp push jge cmc sbb dec addl add hlt jae,pn inc roll jp sbb push cld repz fisttp in mov cli das pop mov dec (bad) mov pop arpl and adc roll xlat les leave adc and aam dec adc adc mov xor loopne pop jo imul inc and cmp arpl inc mov js (bad) inc mov push mov add sbb popa insl cmpsl mov in add jg xchg push out adc xor and push jae lea je xchg inc pop mov leave fstpl mov sub stos push mov mov dec fistpll push xor xchg inc cmp xchg data16 cld cli into ret push hlt pop les push idivl push loope xor roll popa cs or psubq in lret mov or test mov (bad) lock jno mov je pop sbbl push repnz ljmp sub cwtl xor cmp pop sbb (bad) sbb dec push sbb cmp lods aad scas xchg jb inc int3 sahf ret loopne bound or pop inc and mov mov arpl fildl fcomip scas fnop shll sbb jnp imul roll (bad) adc dec in lea stc cmp jp rcrb or (bad) sbb xchg cld outsb divl inc add pop and lahf loop rclb pusha loopne cli sbb mov push mov movsl cmpsl mov sub jle jmp jne fs sub add insl pop dec or cmp xor jecxz out or arpl mov cmpsb dec in jae jmp (bad) aas pop jecxz fmul ds js ljmp lds jge sahf dec adc lcall aad inc inc mov sbb mov push stc fcoms and cmp inc ret mov mov lahf mov stos sbb fmull xchg rolb or sarl (bad) aam cmc add dec adc push in stc test jp rcrb or (bad) mov jp int mov addb mov stos sbb push out fldl sub (bad) pop xor jne adc in jmp dec mov aam inc lret hlt pop insl xchg ss push fld stc mov std js lock movsl ljmp icebp cli (bad) and dec je (bad) jae cmp add cmpsb jle cmp rorb add sbb xchg and jo adc or enter jns cmp inc mov mov inc or sub sbb mov mov iret jno pop ret pop inc dec push xor sub cmpsl push inc ja movsb sub lret das scas jnp sbb leave mov pop add push pop xchg jge xor popf in push fucomi xlat outsb imul mov dec xchg fwait cwtl inc bound test sbb in mov stos add sbb inc ljmp mov fmulp (bad) cwtl nop outsb (bad) jnp mov push sbb mov clc cmp dec aad scas cmp xchg sahf and int push cld pop mov and xchg (bad) dec shrl mov jbe mov movsl insl dec sub inc add test es mov (bad) xchg xor or stos jae xchg out jmp pop out leave sbbb cmp mov mov lcall fimul xor lahf int3 rol or imul (bad) inc hlt lcall cmp sarl inc inc sbb push mov add sbb adc pusha lret cmpsl jmp in or test pop call dec adc (bad) rclb rolb sarb inc test adc into xchg cwtl nop daa (bad) (bad) sbb fldcw movsb andb les pop mov roll stos ljmp push test sub push ret fs arpl cmp pop sub push lock bound mov lret sub (bad) mov ja pop pop sbb clc dec aas mov mov cli outsl adc jnp jno or and mov cmp dec xor sbb inc xor pop mov push test insb or dec idivl xchg inc dec (bad) ffreep lea int3 into (bad) pop adc std xchg repnz cmp mov mov push xor insb call in test or aad out mov or pop inc mov jae lcall data16 and gs add (bad) andb les mov es mov leave mov test in push std inc in adc push out xchg movsl int3 push shrl mov xchg data16 jle xor nop push cmp jp movl psrlw arpl jge fs test neg movsb jo jecxz fidivr or push sub mov mov addl popf into mov (bad) mov xchg rorl divl ljmp out aad mov cmc inc insl xor xor rcr aaa pop or or repz mov in fisttpl fdivrl push add pop add jae icebp pushf push inc (bad) xor daa test mov sbbl jns leave inc inc push or mov loope dec aas (bad) sub ja sbb adc mov dec xchg adc sub adc ja movsl int3 push and xchg xchg shrl mov xchg sbb push cs push in mov sbb ret notb repz test call and jmp or jl imul clc adc push xor mov adc cmp ss xor dec pop sbb cmp out jecxz sarl xor pop mov cmc in mov mov add nop inc mov inc and pop test gs cwtl lods push lods pop dec mov cli lea jg dec xor scas mov inc or outsl ds xor ss repnz popf add (bad) int3 xchg jo imul mov daa stos movsl decb pop mov std mov fstpl rolb test rcrl push fldt sbb dec sbb inc loopne push xchg push sbb mov sbb mov cld es sahf ret pop mov pop xchg push movsl xchg adc mov sar ljmp xchg in shl leave test into lock jns cltd stc or sbb mov sahf jnp jo jb lea jl ja or fsubl mov cmp fbld ss sbb mov and and dec std nop push repz stos xchg fmulp int3 ds fs cs mov repnz outsl mov mov cmc xor and scas jne jno mov dec mov imul cld das sbb addr16 jle push data16 inc add scas mov xor add inc xlat addr16 xchg mov test lahf movaps test loop sub and addb fildll mov pop iret push movsl mov adc ljmp fldt dec outsb push sbb xchg pop pop push xor add inc sbb xchg sub sbb add idiv ja adc cmp jg or sub lcall rcrl sub mov mov (bad) xchg jae in arpl adc jl enter add jmp mov mov iret jge cmp ljmp lods push jno setle adc popl das add (bad) inc pop loop and es mov mov test push pop fwait les xchg out test in dec mov ss mov jne ret out (bad) push inc lret xchg inc or cmp xor jbe xor fiadd push push aad nop cmpsb stos push or mov in out mov push repnz cli cwtl sbb dec pop cltd jb xchg (bad) or fistpl dec hlt push sbb xchg pop outsb push xor add inc and xchg (bad) adc sbb loope sti ja adc and cmp sub jg jmp rcrl sub and dec lods mov (bad) xchg jae in lock jl enter add jmp lds sahf shr loop add push in jl and ja push js loop sahf gs xchg out lea xor jmp roll add push movsl cli outsb or out movsb ss sub bnd data16 xor stos jb mov add mov mov cmp fisubr jae clc xchg sarb push jle negb mov dec addl add jns mov je inc ret pop jnp aam ret (bad) mov (bad) mov mov sti xor (bad) adcb imul add lahf clc outsl popf int3 xchg out push push nop inc add les lret cmp mov aad dec adc adc cmp sbbb call fwait js insl mov fcmovne mov push push in push mov loope push in jl xchg mov and push mov gs imull lods test lea xor or push movsl leave outsb or push adc xor mov mov mov sub stos push jnp jp xchg mov push (bad) push xor xchg cld cmp xchg data16 std cli into orb pop lds push clc jle pop loop xor roll push das mov sti bound dec lret add pop in aas pop inc or inc and lock jno mov xor and repnz jmp adc sub outsl cmp fstps sbb enter adc xchg pop lods aad scas cwtl sub lahf ret loopne arpl or pop add insb cmp hlt mov fs inc movsl inc jns dec jbe imul fistl sub mov add jg daa pop out call jo loope xor or inc dec mov test cltd xor adc cmp es stos push mov jp xchg mov push fucomip push xor xchg mov sub arpl lcall incb ret dec or cmp dec xchg mov fidiv fisubl mov cmpsl dec test (bad) scas mov in fnop aas negl push jo cmp lahf push int3 push jnp repz mov lea inc mov sbb js push movsl add ds add dec stos jmp dec ret rcr aam and mov push test cmc mov push shrl hlt dec xchg roll (bad) adc testb sahf mov push out mov xlat jnp jge cmp in and fldt cld mov xchg ljmp and xchg mov int sbb popa dec push sti pushf and fwait bound cmp or cmpsb mov aaa lcall std mov call cmc and cmp (bad) pop fcmovb sti mov icebp sub push mov repz dec fdivrl dec xor enter aaa pop (bad) loopne add cmpsl jg notl rorl pop pop loop xlat fcmovnu add jnp push fistp jno adc lret mov inc inc or loop or (bad) dec sbb mov mov (bad) jb pusha les adc adc sub xor int3 xchg xor pop lret pop xlat hlt dec or add jle xor pop out pop fnop fsubrs aas pandn es pusha insl roll xchg pushf lcall xchg test idivb sbb int jae push mov inc imul fiadd std and in sub jbe adc adc push das in ljmp xchg (bad) xchg xchg dec rol and les mov sti addr16 jmp icebp cmp mov xchg mov fs mov dec aam leave rclb mov (bad) arpl sub mov mov jge inc (bad) xchg push xor loop xor and push dec ljmp xchg int cmp mov mov pop jp xchg adc pushf dec push xchg mov cwtl shl mov lds (bad) mov xor pop lds xor out pop cmp mov dec inc pop lea outsb mov cld (bad) int3 test sahf mov test icebp fisttpl imul test add in or cmpsl cmp mov mov xchg sub testl mov push push stc fsubr repnz push ds mov das mov sub cmp inc loopne and iret and push pop and inc xchg cmp mov dec aam leave (bad) xor mov fistl pop arpl sub mov mov dec lods inc adcb xor stos and sbb or scas je dec push or xchg int lcall cmp push add add and sbb and sub dec mov clc mov mov hlt and fisubr loopne dec pop pop int enter (bad) push repz cmc adc test jmp out mov (bad) jno mov or sbb mov je fwait xor in sbb add popw add scas adc fstp (bad) pusha out jp movsl fadd ja mov sub mov lret test loope sbb inc stos sub cmp add dec mov adc push fs jo out mov loop not pop (bad) lret leave repnz roll or add mov inc sub mov push sub jb or les lods inc mov cmp dec xor add add sbb and mov insl sub dec dec mov clc or cmp mov and dec fiadd int enter (bad) (bad) repz push jp mov hlt icebp cltd mov out fisttpll jne aas fxch es add pop pop add outsb je repnz ret aaa fdivr add sub jl iret jl inc (bad) pop into call scas xchg pop enter push jmp dec inc (bad) ljmp (bad) adc rcl push mov dec xchg adc xor and xchg xchg (bad) and les mov xlat jns push pop cmp xor pop dec jg lods xor shrl cmp (bad) test sti lcall lahf xchg in fbstp mov out mov mov mov call jecxz repnz mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add (bad) adc out adc in (bad) lock dec xchg jmp and js push adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shlb in inc push xor lahf inc arpl sub adc push inc lea mov xor add push imull test push lret loope inc adc sub rcrb ret pop fisttpll sbb dec das add add imul std cwtl lods test (bad) ficoml sbb movsb jle xchg popa mov (bad) lahf adc test push shlb mov cwtl mov mov add jp sub mov mov out dec cmp xchg and ds or add insb push push dec mov lcall mov pop ss jp je mov gs add and cltd mov cli fs in and jnp in sbb ret iret sub mov jo inc inc xchg mov sub (bad) (bad) loop xchg fimull mov cmpsl jno cmc ja nop ljmp mov daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb add add push push aaa mov fmuls inc mov xlat adc and cld repnz cld sbb xor cld sbb cli push insb iret sub fnstsw test mov inc inc xchg xorl jecxz xchg jg mov fs cmpsl popa dec hlt ja nop ljmp das or stc daa fsubrl bound aas pop push (bad) pop insl out adc in add popa lock jmp and add imul xchg (bad) pop inc ljmp sbb dec cmp icebp and loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp add xor imulb or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test add inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shl adc jmp (bad) bound cmc mov pop jb inc test add add and ljmp and cltd or jbe hlt push and jnp cs dec mov das adc xchg sbb jns push mov dec cli fwait mov sub add mov mov xor sub xchg push cmpsb popa jbe jg sahf ljmp das or xchg adc sbb push (bad) push push add in add xchg jecxz xor adc jmp xchg les inc pop push push sbb dec cmp add cwtl lods sub and bound add adc push push cmp inc shlb iret dec pusha xchg je mov scas pop es xlat sbb rcr sub loope std popf mov ret clc jmp addr16 pop xor xor outsl and inc inc xchg sub cwtl pop dec sub test adc mov and hlt mov nop cmp mov xchg ss push orl cmp scas add push (bad) push or add addr16 cmp (bad) call jmp test cmp push (bad) hlt adc scas dec inc insl dec xchg (bad) decb rorb mov shll cmp jno pop jle lea push push dec jecxz in mov jnp push mov dec (bad) js jbe fstpl pop and cmpsb inc imul add push ret in cmpsl mov cmp gs sub dec jo xor and pop lcall push add xor ljmp sbb cmp cmc jno ja ret cmp mov sbb jne fucomp adc sub ds daa jmp test sub adc push inc (bad) les push mov add xlat test xchg fimul mov mov xor shl aam dec push and inc push jmp mov mov dec movsl fs jmp (bad) xchg cwtl xor cwtl and (bad) (bad) pushf cmp add mov dec mov sub lods mov add sbb test cli fst scas mov cmp adc pushf jns jb lahf ljmp movsb je ret je mov sti dec inc movsl (bad) (bad) (bad) jae int adc incb inc movsb in repnz dec arpl add cmp ja or add imul jns push fadds insb push push dec loop js add add pusha pusha cmp scas add ss gs cmp outsl jmp fadd in jl loopne clc jmp addr16 pop xor xor outsl movsl imul inc inc xchg sub cwtl pop dec sub xchg idivb or mov das imul cmp jae divl fcomps and lea leave out adc popa cld aaa add cmpsb call jmp cmpsl jecxz imul push into add add (bad) les xchg sbb (bad) and sbbl mov imul dec loope in sbb aaa mov enter arpl push mov jnp es into sahf fstl push adc cltd mov and repnz push dec xor je sub popa pop js lcall jg fidivl jno xchg mov inc xlat test daa jle inc das push and xor or add dec inc jg cmp out add out lahf or xchg sub xchg movsl repz and js mov cmovb dec mov out dec mov pop pop push pop pop xor loopne,pt cmpsl aam int3 add insb (bad) push insb push cld pop cmp pusha mov je daa push mov adc or movsb push adc (bad) (bad) pusha movsb sub in pop ret or xchg int cmpsb test aas ja jo iret add jno dec mov push sahf mov jg ret xchg cmpsb jae mov cmpsl popa ss mov ljmp das or std daa pushf push xor outsb sbb out adc popa cld aaa add cmpsb call jmp cmpsl jecxz imul push into pop xchg sahf (bad) xor sbb push mov dec mov nop fwait leave jle fbld push jl push dec jecxz in mov and out sub mov bound mov imul push shrb jecxz das popf mov in imul ret mov mov ret jmp inc mov fimull add xor cmp idivb scas pop subl cmp and shlb sub jg stos insb decl xor adc int3 ss push cltd add push push xor bound sbb lcall out outsl arpl xchg xor push imul xchg inc lahf sbb outsb fdivs adc push sti mov sub aad sbb add or mov push pop hlt add les cmp inc add fmuls inc mov es (bad) jno popaw call loope xlat test xor fmul test pop outsl sub jl sub test das lea pop mov mov (bad) mov xchg iret jl hlt sti inc sub lcall mov or fwait enter adc and push jne aad adc in xor add enter clc xchg aas out push and rcl pop cmovb dec mov ljmp cwtl shrl xor mov push add in (bad) jp inc fs mov (bad) xor mov arpl push repz xlat jmp movsb push dec orl bound arpl lock nop jae xchg outsl dec jo aaa inc mov mov cmpsb (bad) lea insb cmp test add add sub int sbb (bad) (bad) fisubr or stc daa pushf add pushf mov cwtl js out mov loopne add mov jge fsubl leave lock lahf sbb xchg jg mov or sbb dec cmp mov call popaw mov hlt push inc ds mov ds inc fadds sbb lods arpl push iret adc push cltd mov or (bad) (bad) bound pop add adc scas inc cmp test int3 jbe notb aaa nop pop dec sub xchg fiaddl mov popa cmpsb aad xor (bad) xor cmp push in fbstp push jbe jne adc in adc out jns pop daa jmp mov adc into fucomip loopne lods ret dec dec xchg mov hlt (bad) mov pushf fwait dec (bad) mov xchg dec dec (bad) mov arpl pop (bad) push fadds js add repnz dec mov jnp stos fist and pop lcall ss lods xchg in (bad) (bad) inc stos add jns and mov gs das mov xor popf idivb push mov xor mov popa pushl stos nop ljmp jmp into or hlt imul pop pop cmp int push inc jecxz mov lret push jns jmp push ljmp addr16 mov test add add push xor jmp push test dec scas cwtl loop call lock aam clc and pop mov mov movsb mov fs pop cltd mov mov push insb call adc and cltd mov fist sti xchg lds in fsts inc stos xchg scas dec jo inc inc jp (bad) dec mov and (bad) (bad) std leave test mov sub test (bad) stc lock mov mov aaa jb or mov jne out adc jecxz xor push push test push and aas pop ficompl (bad) iret push dec xlat sbb or mov xchg fwait (bad) mov cmc cwtl and (bad) push xor and movsl bound test mulb and push and sahf pop xchg sbb cmpsb xor ja add jnp popa push inc testb fldl ficompl jno iret push mov jne fild push mov ja adc mov (bad) das push ljmp rorb lret lahf adc repnz jp sub sahf cltd lret ds sbb mov push out jge jge jmp stos adc addr16 mov sbb dec (bad) xchg int3 fsubl test jno pop or aas pop dec push push dec addr16 ss mov jp jbe or xor pop cmp sub out (bad) out imul push push jle scas mov scas out in mov rcrl je or push dec fistp mov sub mov mov subw sbb jnp dec push sbb popf lahf mov mov cmp popa mov lahf icebp repz movsb inc or adcl sub xchg pushf inc jecxz xor xor xchg inc adc push lahf cmp sbb ret add repz icebp (bad) xchg add cmpl cli je add xchg ret pop sbb insb add adc insb aad (bad) stos enter mov jb mov xlat arpl rcrb movsb push (bad) out mov sahf xor ret mov fcmovb cmp inc and cmpb cs mov adc (bad) aam xor push add xor (bad) inc push jle mov outsl push stos cmpsb ror mov add lods and and push out xlat repz mov pop xor add jge scas je jbe push sbb sbb jbe push mov imul aam negl adc in mov aam push faddp js cld pop or or dec outsb xor mov jb dec (bad) mov pop push pop rcll in adc cli mov iret cs pop dec loopne mov andb cmc lds sub aas push int3 mov lea je ja mov bnd add cmp into mov or stc daa pop inc pop and testl iret enter out in jge pusha inc mov xor (bad) pop cmovp dec mov out dec mov push mov sbb sub faddl sarb dec push sbb lret push inc arpl dec fsts cmp arpl stos loopne xor sub cltd mov sti movsb shl cmp dec mov sub lcall push (bad) cmp pop add out xchg nop xchg (bad) pop push push sbb (bad) or (bad) fidivl jne cmc ja (bad) into mov cmp sub out jecxz pop rcll cmp bound and loop fbld mov outsl or iret js in mov xor pop dec (bad) les mov dec add xchg data16 fisubl sbb flds out jae push sub inc push pusha push mulb call add out fs push adc mov sarl ficompl jge aaa cmp dec sbb inc nop jbe or pop xchg mov adc (bad) mov jg rorl mov and or xor or das or cmpsb inc xchg sub bound xor (bad) mov out lods in inc pop imul mov popf pop icebp (bad) gs and mov mov xor and popa (bad) inc jb xor sbb (bad) xchg dec adc push jecxz adc inc (bad) push lret push inc adc add push mov lods and mov jno adc sub push test ret out ds cmpsb fbstp xchg mov mov sbb cmp push dec jmp jp icebp cmp jg decb lods push cmpsl popa repz xchg test add addr16 je in inc stos outsb inc push add add lea cwtl div sbb or pop mov sub dec add cmp loop sarl fs gs sub cltd (bad) je pop jae int mov or adc cmp rcrl mov imul cmp sahf pop and outsb das arpl jns cltd mov data16 push push outsl in lahf test ret xor push push shlb imul mov (bad) mov pop inc (bad) mov cld push fcomps cli push or mov sahf mov mov mov inc clc test jmp movsl pop and stos inc inc and lea sbb sub jg adc or cmpb and or xchg mov and out sub and es sbb xchg mov jnp sbb sahf jne mov dec pop jecxz dec pop inc jg push inc scas push ror data16 jno push mov outsb and xor cmp popf fistpll test lds jo (bad) mov mov es push (bad) bnd xchg sub adc mov popa cmc xor call sub sbb or test push push in fbstp push fisubl inc mov dec fsubl popa mov mov aad pop (bad) adc je mov lahf push icebp cli mov xor ja int lret fldt adc sub and adc inc or jno jnp lcall add inc sbb inc adc popf sahf sub insl popf out in and adc cmpsl mov cmp and jnp adc pop jae inc jns in sub and fidivr sbb xchg mov push push subb jnp push ss mov jns insl lods nop ljmp and cmpsl aaa stc daa pop jge adc jo bound nop push and out jecxz or jns ljmp or imul pop icebp ljmp fwait lock out repz lea lahf adc inc lock adcl sbb xchg xor lcall out gs hlt fs push je call dec out pushf (bad) push popa cmpb leave add clc or rcl sbb aam and enter into push mov mov daa dec sub not jns mov xchg xchg addr16 js bound and sbb setae add xor jl mov fistl bound sub jne and outsl jmp dec ret xlat imul add rorb loopne xor aad or jl (bad) push nop add lods rcl pop pop popa push lods mov mov clc push add icebp cmp jecxz mov cli or sbb sbb sbb mov sub loope xlat push jns cltd xor bound and ds mov jge adc inc nop or lods nop (bad) push arpl lds xchg add mov xlat adc pop bound imulb mov rcrb in jecxz insb push dec jnp (bad) and fcomip jle insl and iret push and dec bound xchg cmp je sbb lret les lods and (bad) les aaa xor cmpl out jp mov pusha mov jae popf mov add xcrypt-ecb cmpsl dec ret pusha mov dec xor arpl aam jb mov out jmp js sub push dec test adc mov daa data16 jg mov dec aas cmp (bad) mov mov mov xchg lods xor sbb data16 je cld jecxz fistpll add dec add arpl fisttp xor in xchg pusha add cmpsl mov cmp mov js fcomps cli ret rolb add add adc mov push lcall sub sbb ja nop or push mov jne aam ss mov aaa out call movsb cmp and adc ficom test push mov pop adc cmp dec push or hlt loopne int (bad) xor jl subb adc cmpsl popa add hlt adc inc adc das xchg test pop jge push sbb jge into fwait pop xor outsl std jmp mov enter xlat sub adc (bad) xlat push out cltd std sbb (bad) mov jl mov fidiv dec push test lea mov not and pop jmp pop aad nop loope lcall aaa xor mov inc jne push push fstp int test pop mov or stc lret cmpsb push stc inc popf test (bad) cld mov cmp out mov jg fisttp add add xchg pop lods push (bad) je mov inc pop sarb movsb jl add jecxz mov add xchg xor rorl mov mov push jle js pushw xchg addb xor (bad) sbb mov mov jge push cltd shll pop insl ljmp js push dec cmp rcrl mov inc fmuls ss aas lods lcall lea fldt popf mov out pop in and add add cmp dec xor xchg fildll adc repnz pusha pop xchg mov popf push sub hlt adc or mov sub lods adc out push ja sbb mov (bad) jo xchg ss sahf push in fidiv pop add mov inc imul xchg loop lock hlt lods notl mov push adc (bad) xlat add dec scas dec outsl cmp lahf sbb dec cmp mov push int sub mov shrb popf dec xchg mov call jmp xchg and cmp aaa xor insl jge adc jne cmp rorb jbe cmp outsl lock adc xlat sub test xchg sub pop push sbb rcll (bad) (bad) clc jg push dec push mov cld jnp and adc xor mov or (bad) lret mov or lods push sub add push (bad) jmp arpl loop lock mov insb and lahf push repnz sbb les sbb push ja in mov xchg mov fdivl add ja mov or arpl and mov jmp push jl cmp push push cmp es jg gs pop sbb lock inc jae pop (bad) mov aas aaa cmp dec out mov cld cmp mov lock pop leave jl xor iret pop test cmp add mov or mov aaa cmpsl les imul pop dec sub pop mov in cmp addr16 dec inc xor bound icebp pop sbb xchg xchg pop cmp pop push or lcall mov dec push xchg imul mov test flds inc add imul pop add cmp cld jmp ds inc push movsbl mov dec jo iret add push xlat mov stos ja (bad) repnz push fcmovu add mov cmc std mov jne mov cs sub add mov sbb je mov rcrb xchg jae jmp daa ljmp sahf ret nop pop push cmp or push or cltd shll in push mov lahf jle jno out cmp imul icebp lret aaa pusha mov mov sbb fidivl add lods pop inc sahf mov or inc fdivp imul or rorb iret les and outsl dec jo xor iret xchg mov inc stos mov (bad) repnz sbbl daa mov jbe add aas mov popa pushf push in fmulp ljmp (bad) bound in sarl loop mov add add pop inc cmp out lcall shrb test lcall add leave ds clc pop lods and mov dec and push nop cmp lea outsl mov inc fmuls (bad) imul sti test or pop pop xchg mov data16 insb jmp jnp sub sub and sub inc inc xchg mov stos mov mov jo js je std and sub push xchg mov jns in nop ljmp or pushf (bad) adc rcr jbe ret pop mov adc sbb add add or popa jae (bad) push imul mov (bad) pop xchg scas sbb ja daa mov xlat (bad) clc sub out lahf mov pop js fiaddl test add clc push (bad) or inc adc (bad) jb fsin inc mov in in sub fild xor sahf dec push mov push sbb cwtl lods out and das rcll dec xor stos xchg xor xchg sbb sub lods into mov outsb ds cmp daa push dec sbb jns mov xchg xchg pop mov mov add add in cli rep nop ljmp and jg stc daa imul and sbb inc mov xor or test jmp shrl popa out fild cmc push dec mov push inc or shll ss jne in faddl dec xchg xchg cmpsl pusha sub icebp inc push inc hlt jae sarb (bad) dec mov imul and cmp mov movsl push adc adc in adc dec add add xor int3 lods daa and push mov les (bad) jbe mov insb cmpsl fmull dec ja mov scas push jb fstpt or repz xchg in dec add xor (bad) jno imulb (bad) pop mov and fs jae add aad pop xchg dec mov and decb fidivl mov imul bsr push pop sbb pop in xlat mov xchg lods sbb add add in lods (bad) cmp mov adc mov push pop cmpsb das (bad) stos add fbstp push mov cmc imul pusha cwtl cmpsb jmp sub mov iret (bad) jb mov cmp mov mov dec inc loop push cmpsb pusha and cmpsb push add mov into cmpb cmpsb jns (bad) sbb jne mov jno xchg pop xor adc cmpsb in (bad) sbb xor cmpsb push std (bad) push push jle xorb add jnp fcomp push mov insb and push cmp rcll pop cs add xchg inc push pop sub mov lret pop push mov dec ja ja addr16 gs rcl lds push mov pop and jno fistp add inc and cmp leave adc jns dec cmc xor sub cmpsb stc fiadd and imul xor popf mov mov (bad) test sub xlat cwtl lock loope in lea aad scas add dec mov jno and (bad) dec push add adc xor jge pop out (bad) xchg int adc or shll xchg fwait or popf call cmp gs dec jecxz iret fucomip mov lds in sub incl mov arpl sti add dec jmp mov mov xor imul (bad) (bad) mov cwtl pop add pop dec les jbe lret adc dec ja add add xchg dec jl or sbb (bad) mov (bad) fstl sbb mov mov cli xchg or (bad) xor jecxz js add xorl mov sbb (bad) aad or pop push in cmp (bad) mov ret sbb js adc mov ret or das xchg or jns dec (bad) push sbb xor les je ret stc sbb rcl push add movsb pop cmp inc add jne add cmp int (bad) sub ret icebp xchg xor dec mov push pop adc jmp dec pop inc sahf in ja imul inc xlat (bad) fdivrs orl iret outsl jg imul push jg or out xchg jmp stc add sbb (bad) imul inc cmp rorb mov ljmp lods xchg mov mov push add (bad) (bad) pop mov data16 fcom add sti fdivr das xchg or jns dec (bad) push sbb mov mov (bad) sti rorl divps mov roll leave add fstl hlt in into cwtl gs inc pop mov inc nop adc adc dec ja push inc jmp sbb sub jp cmpsl mov pop push outsl adc (bad) or fisubl cmpsb in jecxz js jmp das sti stc add mov ljmp mov add rolb scas ficom sub cmp jns push mov xchg out and and mov addr16 mov pop pop aaa ret sti das or fidivrl loope mov dec pop jmp or pop ret pop sub add sub mov xor xor rclb cltd and mov add andl into cmp cwtl pop sub sub stc mov mov sahf add and es aam mov adc repnz inc xlat frstor sub cmp add add adc push dec pop push fsubs jns fldt sti xor pusha pushf sbb push mov sbb (bad) xor mov (bad) mov out jae mov jl add cwtl (bad) pop pusha test adc clc out les loop jne fcmovb push mov aam jne ret (bad) sti leave cmc inc cwtl lcall fbld mov repnz dec pop rolb movsb xchg push jne jnp pop das in cmp add fmul lds int and and mov cmpsb sbb jecxz push xor lret (bad) roll sbb outsl jg aaa inc dec inc dec scas fidivl clc xchg push push jbe lea and mov dec mov (bad) dec test mov nop sbb sti adc adc xchg push aad fstl pop and cwtl pop mov ja std inc jnp sbb (bad) aas ds js inc (bad) mov test sbb in std add add inc test xor and sahf push or cltd js or push and mov push and jnp movsb in or ficom inc insb mov in adc mov sbb push bound jp adc push dec lahf out mov cli mov in xor stos inc mov negl dec push and bound inc pop pop cmp (bad) jmp jle test xor arpl xor jnp inc jmp cmp pushf int3 fwait add inc ss nop movsl in cmp fidivrl jno mov adc xor dec ret lret dec arpl loope mov lods xchg inc cwtl lcall je fwait push sbb in hlt jmp mov mov test push add roll in (bad) xor lods push addb out repnz push xchg je and dec mov xor fcomps outsl jb pop inc clc fsubr stos (bad) xor add add fwait mov xor xchg test pop stos stos xor in xchg into mov mov (bad) test pusha sub cli mov (bad) jb cmpsb lcall jle pop adc mov pushf jo enter cmp push add xchg mov xlat out cmpb xlat sahf push clc mov fiadd test mov push jno cwtl clc lahf mov decb inc mov loope outsl cmp adc mov sub xor add add mov mov xchg shr (bad) adc lock cmpsb mov (bad) fsubr mov imul out sbb aam fs stos pop xchg bound lret scas fimul xchg (bad) dec pop adc fildl pop scas lret repz or push dec mov nop and insl mov pop pop jle aaa das aas fsubrl enter inc rorb popa xchg xchg cmpsb loope mov gs xor push divl fstpl fdivrp xchg flds jae (bad) pop test fidivrl sub insb xchg test test jmp add jns dec ja int xlat imul mov fimull lahf rorb xor jns push lcall dec cld and insb repz popf mov add sbb cmp arpl or fs dec xor or cmp add cld cmpsb push cwtl fwait scas mov add dec sbb pop add add les insb hlt cmpsl pop lret lock mov jecxz push loope jp add sub rcrl and jp loope bound jno push mov cmpsl sti por inc mov and xor pop xchg jns mov inc mov mov cmp stc jmp ret data16 idivb xor fcmovu imul enter mov imul pop outsb cwtl pop lods and xor outsb or mov and addr16 or imul jecxz stos cmpsb xor mov repnz sub push loope xor bound mov cmp cltd cli (bad) mov pop call les popa jl mov pushf loope (bad) cmp pop mov (bad) out push cmc push inc inc lock mov fstps div push leave roll inc fcmovb mov addr16 push sti iret test shrb xchg js lods sbb daa fwait out xchg repnz xchg cmp iret repz add and dec or push js pop fidivrl xchg xor pop push int in insb mov mov jbe mov inc sbb adcl push loopne mov gs xchg sub arpl dec in inc push or xchg outsb mov cmp adc inc push cmpsl jb insb fmuls mov arpl sbb xchg nop call shlb push gs sbb mov sbb jnp sub add (bad) and ja cmp fisttp mov (bad) repz inc sarl xchg stos sbb sub xchg jbe cmp loopne mov inc jne stos scas sarl addr16 mov add es int3 ret adc inc xor pusha lds cwtl cmp push and iret or jb sub sbb and fist mov pop or lret sti stos push cmp out dec enter sbb les mull mov (bad) notl iret xlat xor aam cs add add push imul es push pop mov (bad) aas mov sbb nop dec sub (bad) sub fwait mov stos sbb cmp fsubrs repz pop lods fst pop and ja bound adc ret cli lods jp dec (bad) aad fcmovnu push enter and fisttpll cmp iret adc test adc std sbb push add lods shrb adc adc mov xor xchg stos test pusha loope inc ja jp cmp mov mov cs inc cwtl lcall incl mov cltd loopne push inc lock pop jb and into cmp add or push aad nop popf sub leave mov add inc pop inc jb jbe xchg (bad) mov inc mov repnz xchg repnz mov add pop push pop js leave push push xchg jge inc jle mov movsl push adc stos sbb add inc call add mov pop jns stc push adc (bad) mov insl mov into js dec cmc lds jo js sahf or repz das push pop mov xchg leave sub fadds jne xor mov gs loop dec push ret mov or mov fldl or fwait mov ret sub push aad xchg enter mov cli jge ficompl stos or mov adc dec mov (bad) or test imul (bad) nop fsubrs out push xchg incl or sti lock mov pop dec repnz xchg arpl push pop add mov pop lock mov mov cld jo (bad) aad ret mov pop push pop adc pop jecxz hlt dec jecxz push leave pop xchg mov sbb sahf jmp (bad) or ljmp imul into fnsave das lods push repnz add push leave inc iret outsb lahf lds xchg push loopne mov imul jg mov or mov mov and push scas pop adc sbb pop (bad) stos mov mov jge inc mov gs (bad) pop lds outsl mov outsb or mov stos sahf test xchg xor repz inc push mov nop mov lods xlat sti jo (bad) aad adc mov faddl xchg and in add add jb pop ss ficoml test push jo cwtl or jg push add out sbb cmc loop cld jmp xchg and stos cld lret jnp xchg xchg inc loop mov sti mov sub loope addr16 mov xlat push push mov hlt push outsl sbb mov cmpsb ss fiaddl in jbe enter in push jae cmp int3 rorl or add or add jmp add add jnp fcomp out and push sub inc lea aad ret mov add sbb movl gs xor insl push scas clc addr16 xchg mov mov lock inc bound fidivrl jne repz add mov add mov and jle stc rcr push cmp and adc stc stos test add stc dec mov fbld imulb les inc adc enter and xchg repz out fbld fldpi inc dec add flds push or ret loop pushf xchg leave loopne,pt mov xchg push push lock aas cmp leave pusha mov jbe lret sub data16 pop sbb adc (bad) out pushf fsubl cmp nop adc mov adc inc ds nop mov dec mov adc mov jg push or or push js test lods pop loop push (bad) mov movl cmp xchg shlb inc xchg lock or dec sti (bad) jnp mov nop sub out (bad) lret dec cli shlb loope sub scas pop inc enter gs and int insb adc (bad) jno pop nop xchg xchg testb (bad) test push push enter jp ret (bad) lea jno or fstps adc add add push das popl cld jo mull test outsb cltd push sbb xor xor xor loopne mov aam cmp add or mov xor inc jns sahf mov mov ret pop (bad) mov mov sti lods pop add adc call (bad) lahf leave mov jb xchg cmc cltd mov adc pop fstps xchg mov push dec or inc bound rcll push pop cmpb and cmp fwait inc mov daa (bad) jl jno xchg aaa mov mov mov inc int pushf mov cltd stos lock push cmp cs lahf jge stos clc outsb lock jae (bad) cli mov aad sbb das std lods cmp jg fdivrl (bad) jno cmpb loop fwait ljmp test addr16 in enter in jae call insb or add add pop mov mov ljmp sub mov add aad addr16 or insl cs loope ss in mov push orl jl dec lods ja inc aas mov mov pop mov mov (bad) sub movsb push (bad) fcmovbe bound aas pop cmp daa add add cmp lock decb es xor jae aad sbb adcl mov add inc int sahf out push scas nop popa sub xor push jb or scas fsubr xchg sti test inc cmp add xchg cmp scas sahf test pusha repz or or xlat inc add push leave daa test pop pusha adc push mov icebp pop jle pop push lods and sbb (bad) push sbb ss gs arpl loope ss or adc lods loope or in add stc inc jl add movsl into cmp dec xchg inc cmc arpl in sub pop in out mov shrl or push mov push test ss outsb int mov pop insl loopne sarb jb sbb and jns push out ret cmp cmp sbb incl outsb and push fiadd xchg (bad) mov (bad) ret or pop mov lret mov lcall push mov xchg stos push sbb ret push dec (bad) lods add mov cs lea lock stos or js mov icebp mov add adc mov into icebp mov loope icebp in and outsl sbb xchg cli call push pop push jo test fisubrl lods adc dec inc dec jnp pop xor push ja negl je jno (bad) (bad) xor push (bad) xchg or fwait es repz mov xchg and inc cld shrl jns cmp inc lock repz std mov jno sbb test outsb mov jb cmp push cmp xchg dec loop (bad) mov jb pop mov ret pop and mov fnop movsb decl and into inc add in xchg jae jnp pop push dec xor out or xchg and addr16 push and out gs pusha adc inc (bad) push pop and mov pop and jbe ja adc pusha loope xor lahf icebp sbb add xchg out shl jo jge jge in pushf notl popa test fimul xchg arpl cmpsb out mov sub sub and imul push xor xchg pop cmp push (bad) xchg enter cmp jbe loop push lret dec mov add addr16 xchg mov cltd and (bad) mov lock daa inc in and test in daa mov jmp add pop lds test push sub out mov aaa and lea inc orl arpl sbb insl jle mov test arpl sbb add clc aad jg cltd cmp mov dec jmp inc mov push fimull sbb pop and pop fs (bad) fcoml lret mov cmp ljmp mov fcomp pushf pop dec lea rclb push add dec xchg mov xor sub inc jmp into stos or iret sub sub mov dec adc clc pop ja pop sbb fst xor push ss and jg mov dec sahf mov notl add mov push fcomps inc pop dec ljmp or dec cmp in xor pop mov and mov sbb cmp mov pop loop push xchg loopne dec (bad) fcoml ficom fs cli in sub or add xor sbb stos dec fdivl mov mov negl les mov (bad) jge add fcmovbe bound sbb jg fnstsw dec addr16 addr16 outsb call pop inc loop mov inc sub pop mov mov xchg lcall call aaa and lea inc xchg inc jecxz stos loop cmc outsl cmp test lea scas mov movsl icebp lock jge add packssdw les sub jne cmpsb dec in mov sub dec inc loopne jb and stos test jecxz mov sbb xor negl pop fdivr addr16 (bad) sbb xchg add into jne outsb aaa pop adc int and lahf mov pop loope rcrl dec dec xchg mov mov dec sbb (bad) mov subb fs (bad) push xlat (bad) fisubl (bad) mov add inc adc (bad) sbb pop xchg mov jmp mov fs leave test and outsl jbe mov insl ret js stos scas mov inc mov inc mov sbb push out xchg inc push sbb xchg ret xor add mov pop stos and dec movl sti dec push adc aam or std fucomi test sub push push shrl xor dec ljmp add add lock lds dec dec ja dec or (bad) jb ja or jecxz fdivs insl xor xchg (bad) jbe cmpb (bad) scas inc pop inc adc das orb sbb dec cmp shrl stc mov and notl push and jne arpl movsl outsb add cmpxchg lods dec outsb dec cmp mov ss call pop sti das sbb add add movsl pop outsb sbb inc mov and add ret jno mov jo jg pop lcall or stos in push push ds cmp (bad) jo iret arpl pop push pop loopne (bad) mov into cmpsl int3 pusha in out int mov (bad) push dec mov jecxz loop push xchg mov nop sbb or pop mov push mov or or mov imul mov pop mov in sub or data16 les sbb fcomp pop or add add stc sbb lret xchg fwait leave pop mov faddl loope (bad) pop xchg or dec cmc cmp xor adc sbb cmpsl adc test lcall pop cmp rorl add lock mov lock icebp daa test mov cmp movsb mov insb xor jb and repnz xchg daa jne mov adc mulb mov rclb xor jne clc call add add add add pop int push lahf push sti (bad) jecxz les fadds dec addl jae jns jb mov push cmp std jp stos stos or out cmp cmc insl out push jle inc sub ficomp cmp add (bad) in add aaa cmp (bad) sub test loop dec add addr16 (bad) shrl pop or les or cmp or or push aad nop cmp dec outsb jae dec push (bad) or cli add add jge adc hlt sub out mov dec scas lahf scas sbb je (bad) sbb lcall das je cmp movsl fmuls jg xchg ds sti push out xchg js (bad) mov xlat xchg push call dec dec nop sbb sbb (bad) push sub cld into cs ds rcll sti pop and cmp mov rcrb jo mov cwtl lcall pop mov int outsb push add add scas mov (bad) int outsb sbb adc dec andl dec std jp pop pusha push add sti mov and push out cmp loop xchg repnz push stos dec iret (bad) push jbe xor mov scas inc clc pop out jbe std sub add lods (bad) jle in pushf insb adc test xchg inc mov and inc jmp fisubl test adc (bad) dec mov fidivl pop and mov add add add add or pop aas jmp pusha cmpl movsl adc push mov scas mov cmpl pop or je test les leave shld dec push push pop push idivb xor mov loope pop and (bad) dec sahf mov mov (bad) cmp sbb pop xlat cwtl lock int3 xor jae rclb fwait pop dec mov sbb addr16 lock and add add aad pop cmp sti int3 dec fistl sub repz lods fadds cmp aad fwait dec loopne,pt inc sub aam xor stos xchg (bad) xor aaa mov andl rorb mov cmp jne clc stos pop xchg mov nop stos fldcw insl pusha aaa outsb pop or sbb test mov rorl xlat mov jmp (bad) and aam mov jne mov push shll sbb dec outsl adc mov xchg ds jo mov (bad) arpl vmovq sbb xor mov mov lock or andl xorl mov into cmp into imul xor sub pushf mov xchg je ja jge inc add lods xchg js in arpl ljmp daa inc xchg mov cltd and push pmulhw cmpsb xlat test clc repz add add and repz (bad) pusha pop xor gs xchg push repnz push movsb scas ja mov cld inc adc (bad) dec mov pop mov sub push mov dec xor or xor pushf sbb ljmp ja push loop inc and and inc in out push cltd das test adc ret jo cmp in das xchg fcomp fwait xchg loope dec jecxz and xchg adc aas test pop lea popa pop add roll icebp loope outsb stos dec stos ss inc mov sub mov inc pusha in mov in mov cmp and int or add push and mov mov xlat push je (bad) sbb daa adc out loop ffreep pop and jno scas jmp arpl xchg and (bad) push repz push out orl (bad) fild lds jl fdiv pop mov or add add lcall negb push mov test xchg mov jns pusha call inc jnp bound add imul sbb xlat adc sub pop add cld jmp in sbb inc roll mov push int push sti pop dec adc fadd sub repnz pop mov jg cmp fstl loop (bad) repnz leave movsb scas test imul (bad) inc fidivl xchg mov dec jmp pop movsl lods sbb add add out xor xchg jno mov pop pushl out nop test jb or test lret (bad) cmc ret mov jg ja mov mov fdivrs xchg loope push movl xor dec jbe cmp adc cmpsb add sbb ss cmc adc into mov xchg pop jo mov dec ret outsl and sti stos pop pop in (bad) and test lcall add sbb or sbb lahf pop ja and ret andl mov inc inc xchg push fisttp (bad) mov nop sub fistp sahf vmread test add outsb cmp sbb (bad) pop shrb dec mov xchg stos inc mov cmp ljmp clc iret cmp lret dec cli in clc lret cmpsl sub loope and dec (bad) jl scas xor inc fimull mov mov cs add ret adcl cmp push scas jg mov dec sbb mov cmp std out test dec fistpl nop (bad) mov dec adc cld pop sbb fst test and adc cltd jb ja sarb pushf sub bound sti cli inc fbstp dec add mov aas (bad) jp sahf test movsb xor das pop call cltd (bad) cli ret add cmp fisubl xchg inc jmp fisttpl cmp dec cmp inc push xor inc daa (bad) js aam mov fcomps push sarl xchg and lods mov iret (bad) mov repnz call test or push aad xchg (bad) cli mov dec push (bad) negl js pop push lret mov jp and loope or jae jno ljmp cmpsl outsb clc (bad) mov pushf sbb stc pop imul lock pop add dec addr16 add add mov push in das ret fdiv lcall sub push and or mov dec outsl cmpsl test mov xchg mov cmpsl aam add (bad) jb fldt int in adc into icebp mov out (bad) sbb inc ss pop sbb je jb mov dec ja fimull inc xlat test add mov rolb or cmp pusha inc push in and bound insb cmc or test mov stos popf mov add dec addr16 flds fiaddl push inc xchg dec adc cmp lahf mov imul das in fwait add mov pop xchg das mov les test cmp adc xchg jns mov in out mov cltd mov addr16 jae in sbb and (bad) inc jo xor xor add das mov sub xchg cmpsb add mov xor ljmp jbe jae fbstp mov call xchg gs fsubrs fistpll inc repnz mov mov sbb cmp and push adc fcoms (bad) int inc ss cmpsl pushf int3 lcall mov push les rcrl inc sub stos aam jl iret negl les mov mov movsl jb jecxz xor add add fprem1 sub data16 sbb repnz lock or xchg sbb inc nop sbb cli dec mov jge test mov pop jp jl mov mov in and xchg divb cltd mov adc in push xchg adc repnz movups push or xchg clc icebp push cmp jge push aad or sbb insb fnsave cltd mov lods jns xchg fiaddl insb add mov inc lods adc fidivl lea aas mov out fisubrl lcall push adcl (bad) lock jge fnop mov sbb cli dec std pushl repnz mov add xlat aaa call add iret imulb add pop mov dec in jecxz call or mov add (bad) push mov loopne fcmovne cltd cmp jns inc push pop decl sbb sbb mov imul (bad) out jg pop daa pushf outsb sarb and imul mov cmp or cld movsb push lods jno insl lea sub stos out inc stos mov xor add cmp and and stos pop sti fcmovne aaa imul (bad) fcom cmpl xor and add push lods call sub push cmpsl pusha (bad) mov orb test inc xchg sbb enter sbb sbb sbb sahf test push repz je mov aam addl out cmp and stos (bad) mov imul and jbe out ja pop xchg cmp arpl bt cmp mov push out addl outsb (bad) iret fldl mov inc dec mov mov mov test cmp add leave mov jmp sub (bad) push mov xor and jnp xchg fstps or ss inc shll ss xor fwait adc out cltd fwait insb mov pop jge jle add and cmp pop add adc int inc lret adc out lcall pop xchg jp leave pop pushf mov repnz inc sub jno test pop dec push rcrb lcall add mov (bad) xor xor jnp pop push inc xor fwait out mov pop jge insl pop lods add call mov stos rcll test jge int sub lds dec pop (bad) insb xor lea pop sbb inc xlat fstp mov lahf xchg dec adc or scas iret arpl jecxz in mov in ljmp mov aam pusha (bad) cmp mov xchg jmp add jb add cli in nop dec adc and flds xchg pop dec fs dec sub cmp adc icebp int3 js aad loopne test clc inc test out out ret mov cmpl xor or ja mov cmp testb xor xor mov jne adc dec push (bad) fisttpl sub fs shrb jno stc jle mov push ret mov imul imul adc out lahf and add xor jbe or cmp jns int gs daa jbe jp js pcmpgtd insb ret xchg sub (bad) das popf add test inc in mov fisttp fmuls mov mov gs out and enter aaa aas in xor cmp mov cmp out fnstsw and lods inc jo sbb sbb (bad) mov mov fisttpl dec sbb sbb in cld shl jmp daa mov fwait mov sub vpcmpeqb jge inc push movsl loope stos out add incb fs imul sbb cld xchg inc pop push test xor push call dec cmp jmp adc std movsl fmull sbb and xor jle icebp jle add sub cmp xor jno enter pop lods jb in inc addr16 sbb pop or xchg adc movsb loope mov xchg and jnp xchg push (bad) je pop loope push inc mov in mov mov add sbb fimull aaa gs scas rolb subb repnz repnz inc inc inc or hlt insl fcmovnb popf movsl jecxz ret xor fs pop ret shll pushl aam lret sub ljmp adc fs adc divb mov popa mov add add add mov (bad) xor nop scas lahf enter dec add sub push fcom fs ljmp push scas in xor cs adc fs jecxz imul inc cmp cmp cmp adc mov popa jns popf aad gs ret inc jns and aam (bad) xor push daa mov xlat cwtl lock dec push in jae jge add loopne loop add sbb (bad) add pop sub arpl push sub sarb xchg fwait lods adc inc pop mov xchg sbb lret cmp xchg jns sarb cmp sub sub shrb pop inc in out sar test and push fs cmp addl leave dec jb push pushf cwtl xchg (bad) or jo sbb sahf adc jbe or call push jnp daa and outsb shr add cli push push mov or xchg into roll arpl push shrl pop xor aad add xchg cmp enter push sbb pop inc daa inc movsb xchg cmp sub xchg dec dec lahf push (bad) push push test xor jle adc outsl mov repz pop aaa mov add lods rcrb out arpl dec add mov les mov cmp (bad) cmp jmp call add add add add pop mov mov cld arpl dec mov push xchg add jnp (bad) int ja mov fs das mov sahf loope iret gs sub (bad) out stc cmp fwait mov fstl mov es lea jae lods aaa mov pmulhw xchg pop push daa xor gs cmpsb dec or enter mov xchg loop sbb add into fucomi xchg adc sarl xorl add and outsb mull (bad) shll xchg or pop (bad) xchg popa shrb mov xor stc dec lock pop push es loopne popa push insb into nop or lcall push lret jbe test jne mov rolb sub and mov call xor mov in jecxz sub mov fcoms adc lcall test sbb sub imul mov movzwl xchg and ds pcmpgtd cwtl shll cmp or push cmp subl dec adc aam push stc test aaa adc adc add adc xchg (bad) (bad) jmp jne push aaa add (bad) sub into inc lret js jo mov dec (bad) sub sbb xchg outsb pop cmp lret (bad) scas xchg addr16 lahf pop outsb xlat ffree pop dec cmc mov cli pop mov aad xchg daa addl push cwtl fisttpll jle mov movsl add pop or pushf mov loopne rolb and cmp fstpl ss sahf mov movsb rolb sbb in jno adc jl dec out out imul and pop dec adc addr16 push mov mov mov sbb mov push (bad) fcmovbe jp dec xchg (bad) jmp (bad) mov mov in push js lahf int3 xor cmp fnstsw and (bad) xor stos pop lea dec sub subl add add mov lret jnp in pop sbb sub in addl icebp cmp xor lret jecxz fbld movsl pop or clc inc xor loopne lock clc add das fcoms and rorl stc ret add cli lcall cwtl mov (bad) (bad) xchg inc mov pop (bad) xor xchg mov push mov push jb clc lods idivl sub mov adc push sbb ljmp add lods mov dec and inc jb iret pop or push mov (bad) cli sbb outsb (bad) mov fisttpl enter lret dec add xlat fcoml lock pop (bad) cmpsl mov inc fidivrl mov ss cli pop int loop daa out inc in mov mov add mov cmpsl mov push mov shrl cmp rcl popl daa test mov pop pop repnz xchg mov sub imul (bad) test add int3 add or xchg jmp sub fldcw xlat xchg xor roll xor xchg leave mov pushf jl push call and lret iret and jl fs sbb lahf in mov pushf sub fsubs pop jecxz sub mov fcoms adc test or mov (bad) fcoml add jmp or mov add cmp push push addr16 cmp (bad) jns (bad) and push pop cmpb and ljmp dec mov jno xchg aaa mov mov adc add test data16 jbe mov fldl sbb mov push iret inc adc shll push mov ja inc (bad) scas mov and xchg repz cmp mov cmp add arpl (bad) test xchg into popa (bad) adc insl stos lret outsl dec xor in call in test adc stos or jmp mov sbb lods out sub xor inc jo jbe cmp mov aam subl sub jae repz aas imul (bad) (bad) lea test insl into inc xchg sub push hlt (bad) mov jne aas xchg pushf cs nop add (bad) ret inc in pslld push out mov lret pop dec sub aad adc out bnd jne push icebp mov and xlat mov cmp dec sub sbb cmp stos (bad) fldcw sbb lods inc lcall je in lcall jo jg aam xor or jg or aad psubusw int xchg fwait leave mov shll test cwtl inc movsl lcall popa pop jnp jne mov jle jbe add outsl xor xchg xchg sub or movsb loope mov stos int popa xor or dec divl hlt in lock cwtl pop xchg mov jmp out jge sbb inc and mov mov cs push mov adc repz jge rcrb push sbb inc sbb inc mov out adc and rorb lahf daa xchg sub or loopne dec mov repnz ret mov dec in xchg push aam cmpsl add add cs and jae ret pop mov mov fldl out aam je add or int (bad) rclb dec and mov lcall je popf sub push nop data16 in int mov dec mov cltd lds movsl in fwait or stos or jge test (bad) scas mov loopne mov dec xor sbb mov in adc sarb icebp cltd in push sbb ja (bad) sub add cmp dec add addr16 fs inc cmpxchg sbb jg jmp js clc pop pop inc cmp dec push adc xchg add mov mov push out (bad) (bad) mov fwait add cmpsl lret rolb loopne cld loope ret mov xor jbe mov loopne,pt xchg inc pop pop push push mov mov cltd hlt or je jnp out ljmp jle mov pop push and cmpsb imul out (bad) (bad) repnz ret mov cmp add mov cmp xor scas mov scas (bad) popa sub add pushf mov adc enter in ret push mov cmp insl sub mov cmpsb and lret cmp adc push xchg xchg mov lock jns adc test sarl test scas adc insl jp rorl ss (bad) ja imul addb and adc sti xor add push bound jns inc addr16 mov rorl es cld sbb shrl cmpsb fidiv insb aaa insb fldenv fdivl xor dec iret idivb mov or idivl inc (bad) jecxz aam fs loop xor cmpxchg sbb and cmp stos xchg and aaa jmp adc or gs pop jp mov arpl divb and cmp mov icebp inc sbb mov je dec inc mov in sub mov ljmp xchg outsb in repz mov inc mov ret dec push adc mov push mov inc dec sbb cmp movsl sub inc shrb cmp popf movsb push cmpsl popa mov mov pop cmp or or jl call ja mov xlat sti stc jge sarl fldenv mov (bad) cmp add mov add stos ret pop dec in test push add iret leave pop pushf mov cld sti dec and xchg and mov cld std sbb int3 popf lcall mov mov rcll xchg inc scas dec aaa mov arpl xor lret jns sbb dec rcr out ss mov dec cmc dec movsl xchg mov push into scas ret mov fmull xchg (bad) xor cmpsb dec mov jnp (bad) scas pop adc cmpsb and inc popa sub inc inc aas mov add add push lods fistl xor or sub xor xor pop scas fcoml jb outsl add jmp fimul aad sahf and push sbb push mov fs add sbb dec in es daa push jns lahf incb or jp roll pop xchg xor movsb iret cmp adc movsb sbb popa jmp add lock cmc loop test cwtl mov pop nop jo leave outsl clc pop lahf or aas call push cmp mov je pop lods mov imul push xor or movsl xchg (bad) sub mov ret inc pop lea dec push mov pop add push movsl gs and pushf lock xchg arpl push add lds mov mov loopne push sbb fcmovbe loope ss call mov mov insl out xchg pop pop mov xlat out xor je mov mov push add add movsb jmp sbb je sahf push xchg data16 andl lock xor and push jo lods sbb jmp fstps aaa loopne mov gs add push mov cmpb mov js pusha pop sahf dec add lret mov in jecxz shrb cwtl call mov es ss pop mov xor mov fnstcw arpl jmp pop adc sbb add in dec cmp jns test imul add add sbb jle push mov daa mov inc cld fidiv sbb or (bad) outsl pop mov mov jmp fisubrl das mov addl mov mov aas daa push (bad) xchg cmp sub mov mov or std jmp arpl inc jnp enter mov mov data16 jo or std lods pop imul popf roll (bad) mov mov (bad) jecxz aaa ret jno test fwait inc inc cmp pop (bad) int3 jg inc jae push xchg push cmpsb add rcrb clc lock cmc sbb mov xchg sbb bnd test cmpsb jae jmp inc mov mulb lea daa std pop shrb or cwtl loopne xor sub loop dec sbb or jo xor xchg push jo fidivrl adc mov gs mov aam movb add add sahf cmpsb jo fiaddl rorl xor push bound fmul das push data16 sbb scas decl and push pop push dec cmp test or aam pop rcll out fldl mov and movsb int loope inc dec sbb mov add mov stos test and push lock lods mov jb mov add dec nop mov out and mov lea call outsl repz (bad) test push into add add mov out flds adc jnp or push pop pop dec add iret popa mov and jg jl addr16 ret mov jbe inc into push push push fbld push out jb call ds pop mov mov scas fisubr push push sub inc out xchg lret mov mov add (bad) adc sarl jmp das out push lret (bad) ja cmp inc cmp add popa pop jns jne mov mov hlt inc aaa xor jmp sub fadd inc xchg in outsb (bad) stc jb lods mov xor (bad) and lahf int3 cmp cmpsb decl test (bad) push into mov mov (bad) and add xchg (bad) repnz push cmpsl pop dec bound sub dec cmp push test (bad) inc fidivrl mov test sbb jnp xor in xor out cmpsb vmread out fsts cmp nop inc xchg mov int push test inc out push hlt mov jno leave cs jge repz jne lods aam mull test in add cmp popf enter jne arpl testl add sti daa xchg stos (bad) fcmovb dec scas in xor push add je out daa mov and nop popf inc lds shr mov fisttp hlt jns or xor dec sbb or ds (bad) inc fcmove out sarb mov xor (bad) jp stc add mov daa data16 insl and add cld jl inc jmp fisubl pop push incl insl dec or test cmpsl inc lcall mov cmp test cmp loopne xor aaa mov mov or testl daa scas dec aam or stos sti mov adc fldcw xor cld pop imull pop xchg sbb fs add sbb jge popa test pop and sub ret ret ficoml lret push sbb sbb incl or lahf jo ljmp (bad) mov sbbb or mov add mov inc or pusha adc inc inc (bad) in jno pop cmp and rorl xchg leave in shrl loopne,pt push cmp aas inc ret lods dec loop and xchg outsl jb sbb decl jbe in mov dec cwtl push (bad) cmpsb dec pushw push fist out sbb icebp lock out and jle fs xchg add adc jns inc ja push jp ljmp mov incb lods aam push icebp mov scas daa adc lock inc out mov fsubs jmp rcr out outsl sbb int cli and sbb mov loop mov roll loopne in pop mov ljmp adc outsl inc and mov out sarl add xchg les icebp push add fadds icebp enter fisttp test ljmp xchg or ficom sbb sbb xchg push leave xchg (bad) loope shr and pop js cmp mov cli int3 aas insl repz das dec sub or cmp pop pushf add mov lcall (bad) repnz loop (bad) outsb add push adc fisttpl lds jnp call fmul xor or push add and bound jmp xlat dec add in xchg push loope mov sti mov loopne mov mov insb xchg cmpsb in cld pop dec sub mov cmp mov (bad) btl mov std fwait lret jae xchg lea ja fisub lea sbb lret out mov pop js dec ljmp insb dec ja mov in ficomp push mov frstor sbb xor mov inc addr16 mov testb ds (bad) lret imul fdivs adc and into lock aaa fisub jge fcmovnb scas sti ds clc test mov in (bad) (bad) push aam push leave cs mov sbb push push mov mov mov insl jp rorl pushf vmwrite xchg sub xlat adc adc jno or stc imul cltd jae bound add cwtl outsl push pop xor mov stc mov stc mov in mov adc lret inc movsl scas push lods pop sahf daa cmpsb and sbb popa mulb jl jae enter inc hlt sbb lds push ljmp pusha push pop mov popa dec (bad) faddl xchg jmp sub cmpsl cmp dec cmp mov sub fs mov xchg test xor imull aas insb in lret mov add add sahf ja in aaa or inc mov lahf out ficompl push shr add test dec and sub lahf lds adc pop push aad nop cmp xchg pop push cmc cmp dec stos jecxz stc loope jmp or push loopne push scas sub das jbe scas into sub inc das or jb xchg setbe ffreep xor aaa jge mov (bad) mov push hlt std xchg das inc movsb xor jecxz adc pushf mov mov pop mov add add push cmpsb in repnz arpl push xchg fcompl mov mov xor cmp je aam leave int3 inc in sub pusha scas (bad) mov rcll push pop jmp mov push mov (bad) in jo arpl (bad) sarb sub lea xchg inc xchg mov lods aam dec cwtl jg mov lret inc xlat lret pop sahf sbb sbb mov iret nop movsb jg mov sar jl and loope add add adc (bad) je mov xchg dec mov or push sbb (bad) pop sub mov push pushf in cmpsb xlat and ret mov mov adcb scas mull movsb sub andl xchg in mov pop mov mov cmp iret (bad) jmp addr16 mov (bad) rcrl mov cmc into pop jne mov lds or inc pop push pop pushf mov (bad) (bad) xchg sub mov pop mov push or scas jo push sbb enter sbb jae sub in pushf mov jb (bad) or jge adc imul cmp jmp inc out icebp sub dec cmp or fcmovbe sbb add ljmp pop inc push ret shll mov and fstps push cmc movsl ljmp rcrb data16 add (bad) adc xchg (bad) jmp sub stos mov aas mov imul lcall jmp jp scas pop ljmp scas adc sarb cmc push (bad) adc dec cmp adc stc add jp push (bad) jp sahf test sub xchg pop and outsb xchg arpl int insl jmp push jne push cmpsb add aad adc mov mov andl test stos adc dec (bad) push jae push in pop addl popa bound out mov rclb xor in in adc inc shlb xor mov jns mov andl cmpsb int shlb push jne or jb mov push lock add adc aad push ss fwait mov jae mov call in pusha ja and mov jb jg stos scas mov add add repnz inc addl sbb pop out out cmp (bad) ficompl sbb mov or pop jle inc sub xchg les loop inc aas (bad) lods (bad) fyl2xp1 jns jge dec in cwtl adc test push mov dec (bad) and data16 mov cmp dec addr16 stc cmp gs fistl jle xor mov cld mov (bad) pop dec std sti pushf fisttpl cld sub call loop push push pop mov xor sbb arpl fbstp and push (bad) jg jmp arpl dec ljmp clc jecxz aam repnz loop xorb dec scas sbb dec add jns mov sub ljmp aam repz cld cmpb push mov ljmp xchg je idivl inc jb mov xor inc mov xchg out fcmove outsb xor cltd stos add fucom lock jg insb iret inc adc or xor add jmp inc addl test jg push adc jbe mov (bad) inc std cmp fstps dec mov cmpsb (bad) cmp mov push stos loopne,pt outsb adc aas inc and mov dec jnp subl sub sbb (bad) fiadd or ret movsl xchg push mov cwtl cltd leave or dec sub adc cmp aaa inc dec inc jmp scas int3 faddl inc cmc sub mov add and lock pop pop mov lea int3 mov adc xor in dec sbb cmp mov out or push aad sbb (bad) xor and push lods cmpsb add pop jb stos (bad) jge and add arpl jecxz inc stos hlt jmp mov or fwait pop pop inc jb add adc mov enter sti push imul or (bad) sbb mov (bad) testl add adc sahf push jle (bad) sbb pushf pop lret cld push cld pop mov sub mov mov stc add mov pusha inc and das pop dec mov fwait cmp cwtl loopne aas jbe or dec stos mov (bad) lods cmp add aaa jo add pop push stc mov adc or xor sub mov nop ljmp das test movhps mov clc mov adc inc ljmp add adc in sub xlat jno out loope mov push add cltd lea stos sbb aad adc adc mov dec in cli jmp sbb push dec sbb iret fucomip sti movsb lret mov push mov iret dec jmp pop mov sub push pushf jne js imull pop xlat dec mov lea addr16 mov insb lods xor rolb pop (bad) mov ret movsl adc jge mov mov repz add add call sub push or mov dec inc add addr16 int3 or in jno xor push push test mov adc and push insl test icebp mov aam (bad) mov out dec cmp es pop mov ffree xchg mov enter lcall mov cmpsl sub add mov xchg dec sarl enter mov dec mov mov xor jne jmp call popa insb fmuls (bad) ljmp add add adc mov mov (bad) jo mov xchg push hlt jns add push ss les cli ficoml stc mov add cmp movsb mov pushfw push sbb cmp cmp shrl cmp jo dec adc enter das sbb clc mov add pop hlt gs mov xchg fldenv adc sti scas out push xchg fcoms mov arpl xchg add add push gs (bad) and int inc mov mov fldt mov fwait pusha pop loope ret jb test aaa and (bad) and push out jo mov dec and xchg sub clc ret scas and and mov cmpsl xor sbb push mov sbb insb ja lods push or mov fsubrs xorl andb mov call (bad) cmp or jae push sub add sbb sub es add ror mov nop lret sub pop std sbb push lods and mov xor dec mov (bad) stc mov lret pop sbb mov push cmc lahf fmuls insb jmp push lea xor mov sub push pop inc in repz or leave add jecxz (bad) and xchg pop repnz je and in xorl ja dec push mov scas stos ja movl jp jle push addr16 popf adc insb mov clc mov pop leave fnstcw imul adc flds pop sub js ret jl rorb and lret and daa out les stos dec ja aas jne int je pop jge bsr stc add push and xor xchg test addr16 (bad) sub lar cmp in dec xor add add gs cmp adcb stos mov test mov daa aad xor addr16 nop and loop pop lahf jg mov ds inc (bad) ja adc outsb mov ss jb scas mov (bad) dec (bad) inc dec or jle push rcll xchg pop out dec pop jo sbb adc shrb imul xchg stc int3 mov (bad) movsl xchg rorb (bad) aaa and xchg mov add fldcw in cs subb jp and mov js inc call push dec or out rorb jnp pop xor decb (bad) push cmpsl popa cmc icebp push mov cmp lds push xchg mov cwtl lock ss adc test outsl insb mov gs or sub rclb (bad) aad xor ljmp out dec mov iret xchg inc dec adc repz cmc sbb mov push xor test cwtl ss dec mov mov mov sub adc pop mov lcall cld push push jbe pop mov sarb and std sub mov ret mov ret hlt insl mov inc jg inc sti cmpsb popa jbe xor or sbb mov push sahf data16 clc jl jecxz enter sbb adc test xchg retw push xchg jnp push and (bad) adc add push jg sbb in pop xor je jge scas and in sub stos test mov insl add subb inc fmuls add and cmc pop push gs loope pop cmp cltd cmp mov in pop mov or int3 in dec sub mov mov pop dec add int iret or push cli inc scas add mov mov addr16 mov cld jecxz addr16 mov push iret idivb bound das jge cmc jno dec push push push (bad) out adc mov push arpl popa jb sub decb sub pop ss mov ss cltd call (bad) notl test insl xor (bad) cmp (bad) xchg test mov cmp lock popf jae loop mov cmp jb jg mov mov jp das in or mov dec sub add int3 cmp xchg sbb int3 scas aas test lods mov aas push add pop pop movl inc test mov dec outsb push lods movsb xchg cmc jb push stos jg movsl pop mov push fwait hlt das mov movsl or jb rcrl cmp adc jbe push pushf int3 lcall aad push push rcrl xchg dec push pushf sbb xchg adcl fldcw add add cmp dec jo sub cmpsl adc pusha xchg (bad) popa pop repz frstor aad data16 jmp iret sbb inc or out xor cmc arpl pop in xor lock pop xchg and mov ds xlat (bad) repnz aaa cmc (bad) mov je (bad) sbb ret popa cmp xchg push in adc bound sbb pop aaa push out lock cmp out jae repz adc fcomps cli mov add add movsb push pop jno sub pop sahf mov mov push jle ret movsl inc cmp adc dec (bad) push adc mov inc mov pop stc mov mov adc sarb popa xchg dec popf mov lods fisubrl pop pop ret (bad) cmp aas (bad) xor leave mov push cmpsb sbb jge jno mov sub out mov ljmp sbb push outsb add mov hlt dec inc add enter in push push jne adc call shrl daa cmp push fbstp repz xchg xchg push loope mov add ss add mov pusha pop pop and or movsb add pop push outsl sub hlt stc test push imul push jge inc jb and aas xchg push xor dec xor pop test ja jp les pop dec or jb (bad) (bad) mov mov cmp xlat frstor mov cmp add xor iret idivb ficoml sar mov ffreep push out lock push push adc adc xor iret jmp push cmp mov movsb xor and repz sbb loopne repz pop fwait push imul outsb mov push in andl mov xchg jb scas push or shr (bad) lea cwtl mov mov xchg mov out fiaddl das lcall dec cld jmp mov ja xor lcall jl test inc (bad) dec aam cld mov sub aam mov fidivr mov adc sub lods push sub jbe mov ljmp add inc jno imul fadd popf jle bound lahf sbb arpl xor test cwtl fldl2t jmp fild lret pop cmp pop push sub sbb lret lahf (bad) iret ret inc mov add add sbb stos push or jecxz mov sarl (bad) js aam lods push pop cwtl lcall mov and lret xor test inc adc sbb lea in sub in (bad) dec call mov jg pop or mov pop sahf pop or sub pop push cltd xor leave je pushf jle jecxz enter in (bad) jae (bad) mov int3 mov movsl rolb add add rep andl inc dec push mov dec add (bad) sub jp pop jle std mov push or pop aas pop cmp cld notl (bad) mov dec pop jl mov ljmp nop fwait jne inc int (bad) cltd stos hlt xorl test (bad) div push or (bad) push (bad) in jmp cwtl and jb jae scas add mov pop ljmp mov loope xor cmp aam jno ffreep popf pop pop sti jae jg mov sar lock xchg jae insl cmpsb sbb gs sub (bad) mov pop xor or ror dec nop fwait leave push loopne mov xchg insb mov add insb cwtl mov mov pop dec insb mov push push fstps mov push (bad) movsb dec dec pop aas cltd fldcw rolb imul jmp add push fisttpll xchg mov mov sbb or inc shrb es aam sbb inc fildl adc insb adc cmc or cmp outsl daa sahf mov nop xchg push inc (bad) mov dec dec add (bad) pop adc (bad) xchg test sub mov dec dec mov shrl jnp and cs orb fwait insl int3 or andl push mov xchg jl (bad) pushf enter das stc cmpl xor lcall fisubrl mov pushf ret push inc sti (bad) test dec or xor mov nop mov mov dec ja mov shll lahf adc add dec push neg int or aam fistpl popf fnstsw lds into (bad) lock jp fmull xchg jmp xchg jmp and push jg add add rcll es std inc mov rorb les movswl fsubs fist jl fadds sbb movsl repz cwtl xchg xchg mov daa fisttp inc test in into xor and outsl out outsl inc jmp mov test fcmove push mov dec mov add je push push lret and ret lods jnp dec xor push lods push sub or add or sbb repnz imul js fcoml ja cmp dec jle jge sub scas out out dec adc aas sub and and adc adc call bts in es stos fdivrs rorl clc dec sbb sub (bad) add and fist call xchg ss stos leave push insb insl (bad) (bad) loope pushf out js leave pop push adc cmpsb ret push cmp sbb add and mov pop data16 psubw lret adc popf jmp sub mov pusha outsl mov pop add out adc mov fldt sbb mov lods mov call movd inc or fdiv lcall xchg fwait leave insl mov aam daa bound repnz add inc popf fwait jl mov jne outsl icebp adc popa or mov pop adc data16 pop or jno fmulp test mov lahf (bad) xor xchg sbb adc into std adc xchg nop jno sbb fidivrl xchg xchg not dec orb cs jo lods mov into adc test sarb sti push cwtl call dec mov faddl cmpsl inc lcall (bad) leave mov test lea or lahf rorl sub mov add or and test xchg out rol cltd (bad) repnz push inc in xchg cld pop mov xchg lcall mov adc pop cmp cli fdiv push and sbb fisttpll add dec lret cwtl jp jmp dec inc jns nop sbb cli xor xchg imul pop jb sub and in sbb inc popf jle mov sahf iret imul rol pusha leave push jle cld pop sbb sub adc repz add xchg insb insb imul cmp jns mov sub xor insl loopne xchg cmp (bad) scas dec and sub mov movsl data16 fisubl xchg rclb stos inc in mov pop mov mov fstpt jb popa push and popa jle lcall je inc dec mov sbb icebp scas scas daa fist out inc sbb pop sub lods pop push and (bad) mov cmp mov sub ret mov enter cli mov and inc and xor hlt sub fdivrp stos fldcw jecxz fdivs cli cmp ljmp pop push lods and mov shrb jmp popl fisttpll repnz xchg mov mov dec fdivr adc mov imul xchg insb add pushf jo je daa gs push lods xchg cmc add pop ss leave jg cmpsl popf insl mov outsb and pop push mov in cmp leave push lock enter pop adc add add add dec and sub outsb pop cmp lret fildll lds lahf inc xlat jno and aaa sahf hlt fcoml popa sahf pop xor adc push mov add js add adc mov call jmp xor xlat push mov addr16 lret stos mov es and outsl pusha xor stos mov cmpsl fmul fs outsl add mov in adc inc push test andl add add lods cmp adc scas out jb push xchg out scas jnp in cltd cs (bad) sbb jnp sub lock lock cmp push scas xor mov ret cmp (bad) popf cwtl jg fistpl imulb (bad) hlt (bad) in push sub sbb outsl adc pop or pop insb ja iret jmp in jecxz and js xor pop push int jne sbb mov aas sbb js lret dec adc sbb cmp imul adc sbb mov std repnz jbe mov cltd mov insl fcomps inc cmp leave ret adc icebp test mov dec ret sub mov xlat aaa (bad) cmp mov cmp adc fwait movsb lret lcall lods or jecxz cmc xor cvtps2pi test and pcmpgtb cmp adc jo lea insb jg fimull iret cmp icebp aaa and mov shrb mov sbb and outsb pop sti xor mov add out cltd adc or xlat lock lock jl adc std push jns incb les pop inc sub mov sub pop test inc xor sarl stos bound icebp xor inc push pusha fucomip xchg daa jne push mov (bad) and or add movsb push cmp test data16 lods push pop daa fist hlt int data16 adc icebp iret sub jo mov into fs clc outsl jle in (bad) repnz pop cmp jnp jnp lea je ja jmp sub inc call fcoms das aad out adc sbb ja xor (bad) call sbb cmpxchg dec adc movsb outsl cmp sub xchg add dec out push (bad) jns mov jge enter sar pop xchg clc stos das xchg out ja sub scas dec dec call jbe push (bad) loop mov mov and or ljmp pop mov ficoml daa jne add sub ret popa shr mov (bad) jmp sti xor fist mov and repnz pop je mov aaa insl sti sub add (bad) mov cmc test xor push mov call cmpb push cmp out data16 fld mov add pop cwtl sub pusha aam xlat inc fwait adc hlt (bad) cmc sbb dec cmp pop in lock jne imul stc gs inc mov insb mov jno add add push mov sbbl outsb out adc inc sub out cmpl add fnsave out fcmovb aam int3 cmp xor fwait push xor mov add or push (bad) mov and enter sub ja movl xor push sbb test lock int adc insb cmp mov sub sub fsubp int3 lret push adc push add add in xor lret inc ficomp lds out lcall sub lcall sbb out adc sti loop test mov pop lea fstpl push rcll insl gs mov inc jne (bad) sahf and add in int sbb pop out and les lods xor cld mov jp sub pop and pop (bad) mov pop and popf jg adc push jge fimul add arpl testb (bad) jno out loopne xor in push negl inc or push and mov add jl mov inc mov out out out jmp je xor repz inc nop aam xchg cmp inc xchg into mov sub aaa fidivrl test cwtl lcall push (bad) jae pop push push inc sarl sti int mov inc lahf insb iret sub and inc nop adc addb ss nop js mov rcl gs push push sub inc das cli mov notl stc outsl jg jmp xor inc in cli push sub int ja cmpsl scas inc mov fstpt into jge out push and cmp pop xchg mov sbb sub jno popf leave pushf arpl mov addb adc jmp out (bad) lea cwtl mov addr16 cmp fidivl add add movsb push imul cld mov in xchg push int mov cmpsb fwait pop adcb inc inc dec pop ss add icebp push xchg ljmp repnz into pop jno mov notl jge mov js sahf (bad) adc sbb ja sub lret mov sbb jl scas or and adc aad ret sub pusha lret andl je sbb add sub lahf or push das sbb cld loopne fcomps push loop enter int add in fstps pop dec mov dec push shlb out (bad) jmp xor mov jnp insb shrb (bad) loop test (bad) adc jge out jle stos mov xchg fnstcw ja hlt dec scas sub sub inc jle lods push mov imulb xchg daa testb jb pop add xchg (bad) xor cltd and mov add add in mov adc sbb jmp xchg out or mov sbb dec std (bad) bnd negl and inc ja jp rorl xor icebp sbb jecxz push std jno test xor iret mov bound sub add or and test cld fwait mov add dec ja add mov add (bad) push pop daa in jns jns and add and outsl cmp xor jl mov fmul push loope fbld scas in pop (bad) pop mov or ret lock scas fdiv (bad) mov je aam inc inc outsb (bad) jl les lods xchg cld mov iret fnsave fstps ret int3 mov xor xchg stos fiaddl xchg dec stos dec dec call inc test xchg jb xchg aam aas jcxz mov out (bad) xor (bad) in xchg fisttpll sbb in mov roll cs (bad) pop inc nop into mov rolb mov and fistpl cs outsl xor jg add (bad) negl addr16 ljmp jbe int3 pop clc daa pushf add or out adc (bad) int inc xor sbb lock cmpsb sbb (bad) mov mov sub mov push in repz dec cmp jle addr16 imul cld test in or dec (bad) mov add dec mov in xchg fstps test rcr push frstor stos sub (bad) lahf and mov adc sbb xor xchg xor std imul mull dec ja dec sub (bad) push ss jg jns (bad) jne mov and cld jmp fldenv mov (bad) icebp xor xchg push inc ffreep popf pop out cmc ds inc lock inc (bad) test scas fidiv pop adc mov jns cmpsb lods dec add add adc lcall fcmovnbe imul dec lods daa (bad) pop jbe add insb cmp adc adc insb fcomip mov pop lea flds jbe pop xor (bad) xor pop daa fistpll push sub arpl int sub fiaddl dec sbb lock mov (bad) outsl xor or inc sbb das xchg mov mov cld inc adc jnp mov pop mov xchg negb jbe stos shr jecxz fstps xor pop add mov aad cld mov adc cmp cld and hlt out fs mov or cs push jne pop jle sti add xchg pop lret mov movl jns jb mov cwtl adc sbb sub pop lods test fdivr xchg push gs bound sub cmp or leave jns test in mov push enter cmp jecxz add pop inc (bad) jb cli push scas js ss mov pop sahf and adc into mov ret int3 ss je ljmp (bad) cmp sbb push int3 (bad) lock cld xchg addl pop sbb stos test jle inc (bad) or cs cs (bad) repz jno das scas and pop xchg (bad) xchg inc in loope sbb rorb mov xor bound lea into lret ret add fwait loop add add xor fcmovb dec scas in xor sub adc stos popa sub test pop js jp (bad) pushf xchg sub clc and add sbbl icebp and add ret mov sub cmc xor outsl in xchg mov or inc outsb pushf or cltd dec das mov xor inc pushf repnz mov movsl cld add repz push call cmpl sbb pusha xor ror mov add or test loope,pt pop or cwtl ja test sub xchg push cmpsl loop in sbb inc int cmc mov cltd stos or adc (bad) xchg cltd cmpsb jmp pop cmp push sbb lods adc test mov cs xor leave mov neg aas cmc repnz in push push inc arpl (bad) fisubl cmp push mov test stc cmpsl and mov cmp add pop insl lea add sub sbb push adc push aad xor je cmp push sbb pop push mov adc rcrl push jle mov repnz jmp stos add pushf jmp gs mov getsec test pop test clc test sbb push mov adc negb loop into xor pusha int push pop pop pop adc add or sti mov sub out es imul lret xlat fstl std sti and faddl add cli jecxz loopne lock jp leave or add shll ds dec out pop je (bad) lock dec in test mov js test loop jb jg fisttpll push and es pop mov add popf add (bad) aas pop push in lods in movl cwtl adc repnz pop lea dec cli lcall pop pop adc data16 or jno ror sbb out push rolb add add mov call push mov inc sub lods jbe cmp pop adc lahf cltd daa xlat ffree inc (bad) fistp push stos mov iret cli push inc test xrstor push inc inc push or or (bad) cwtl xor imul jl fcompl cmc js das out add sub dec dec mov xchg mov mov push stos sub (bad) repnz mov incl adcl icebp mov popf rol mov gs add add pop sub mov push xchg sub (bad) add mov add add jle cmp popa cmpsl sbb cmp and inc nop mov mov dec ja pop jo inc add push sub fildl mov leave dec iret stos fneni(8087 frstor push pushf aaa sub push adc fxrstor ffreep xchg mov adc popf sbb lea outsl cmpsl popa pop sub mov mov clc out sub mov (bad) pop push xchg mov mov push stos sub xchg mov repnz mov pop inc mov xchg stos test in cwtl loopne (bad) dec mov and inc in bound mov hlt ljmp pop lea rorb xor data16 lcall xchg push cmp pusha pushf scas jmp clc fsubrs dec cwtl mov pop lret (bad) push stos repz mov cmp mov jecxz loop inc int mov lea lods inc fsubl fcomps cmp xchg mov push fwait in arpl adc sahf (bad) movsl jp aad cld mov test cmp pop popf shr cmp cmp stos repnz mov loopne mov addl pushf jo je pop in mov fcomp pushf mov lea mov xor xor and data16 jecxz jno xor out fstpl mov fstpl inc aas movsl aam mov add lods sub add xchg inc inc repnz and jae fstl rclb mov add fiadd (bad) inc hlt adc adc push lahf mov ret pusha dec out stos dec (bad) fsubl js mov sub mov pop push xor inc sahf xchg pop pcmpgtb addr16 rol andl fsubrl jecxz sub push pusha mov or jb popa push test push aad push ds inc in mov ss add je roll or xchg inc aad test pop fdivl jns inc xchg hlt pop xchg cwtl mov pop inc xorl ret push and sub mov push mov or jmp push mov pop mov in idivb shrl (bad) mov push out (bad) lock lret cmp fimul scas sbb sarb mov sbb mov fimull sbb lcall andl add sub addr16 xchg xor inc fmuls daa enter inc mov ljmp push mov mov clc jle xor cmpsb xor lcall sbb insl imul int3 not and push jno cltd pop (bad) add xchg mov push outsl imul insb sarb adc push jge inc loop cli cmp inc (bad) push test jecxz dec push inc mulps xchg (bad) jge add cwtl or (bad) loopne xchg adc fnstenv add pop call out mov and loope adc js mov mov push add xor jb pop in (bad) push mov and mov mov (bad) mov push push mov add jno arpl add xor paddsb into jo clc outsl movsl addr16 xor fildll jge or mov fdivl mov push shlb inc xor mov mov add or sub in sbb enter in idivb shrl test gs addr16 and rcrb push or scas dec aas jo jge out sbb sbb jno adc cmpsb out cwtl push ss icebp sbb shrb imul add stc enter bound pop lea js aas aas xchg repz dec mov sbb jno xor imul cwtl or cmp out into sub xor inc in mov sbb idivb fs pop jg ljmp pop divl jb arpl mov xor push jb (bad) int3 ss dec nop out sbb enter in pop test movsl sti jbe out repz mov lock js call push add dec scas dec jmp out (bad) cmp cwtl (bad) dec sub push gs and pop xchg (bad) xchg inc in loope fwait adc icebp inc cmp jecxz ret pop orb add jg sbb btr and popf loopne (bad) fstl in in sbb push push rorl inc nop mov rorl leave mov and fcoms into jge rcl scas pop or lds dec cmpsl (bad) or sub jecxz clc mov jb jg mov mov xor pcmpgtd pusha test aaa xor jmp shrl out dec in ffreep push fimull lret cmp push addl mov mov call popa push or (bad) lcallw sbb add and std out popf dec lods loop gs add dec mov into lods add adc out cmp xchg dec enter (bad) out out xor jg jecxz mov lock das stos inc outsb (bad) mov push cmp pop cmpsl jns xor iret xor and out cmp add ljmp (bad) fsubl js mov cmp sbb sbb (bad) and jo movsb sub rcrl nop or jle sahf nop je dec jb mov push mov sub popa pop lcall sbb adc add (bad) js cmp push fwait mov out push mov les mov data16 fidivl rcrb and push adc test lock adc sub push (bad) mov inc pop mov mov gs and cmp mov and xor dec xchg aad (bad) inc ffreep xor add jb (bad) push mov cmpsl adc sar aad pop cmp lock push push mov dec cmp cs and lods xchg sbb push push push dec cmp push sub cmp mov ror mov mov push leave pop add push pop xchg dec arpl ret cli aas pop add sub mov in sbb addr16 gs xor and jmp lock std inc shll in ss mov adc lret shrb fstp lods sub mov pop pop fldl2e mov movsb jae repnz push add popf roll (bad) sti fildl int3 adc pop sub xlat xchg loop scas fidiv addr16 in (bad) xchg push push icebp dec sub mov in iret adc ror (bad) (bad) mov mov aas stos bound rcll testl add xchg cli push mov mov xor mov fstps mov test jg jb imul mov cmp adc cmp cmp jb mov movsl adc test and pop mov adc mov jl mov es (bad) inc je jp bound jno jne inc lcall ljmp or pop mov popa xor add add xchg dec and cmp mov inc push pop sti lahf lock xchg int lds mov daa pop (bad) fucomip out dec push (bad) push ret stos push test lahf mov lahf fs ds pop add sbb mov xor and (bad) and sbb dec xchg out or pop test inc mov mov jmp mov jmp mov (bad) mov scas pop cmp jo mov mov loope ljmp add fisttp and movsl imul push (bad) pop and adc fs lock add in (bad) xor pop les pop push test or or mov imul mov push push int3 adc push adc adc pop arpl jne gs testl sahf ljmp push mov sbb in sahf dec xor (bad) push cmc pop outsb mov ss mov add xor dec test mov sub push dec mov xor jecxz stc fcoms mov outsl sbb test pushf cs add sub lds jno,pn push add mov (bad) repz lock xchg (bad) cmp mov sub fild sbb lods inc mov cmp pushl jl imul imul test adc and dec (bad) jp or mov dec pop les imul xchg mov add add pop (bad) js aas (bad) rcrl ljmpw adc cmp cmp mov xchg mov mov sbb xor mov lds adc dec mov dec or bound or fistpl fcoms xor jl mov es popa cmp add push pop ljmp addr16 xlat jo outsb jl (bad) fstps jbe xchg in jb insb pop lcall mov int3 and and push cmpsb adc dec adc je push sbb and (bad) jl pop daa dec (bad) xor insb mov sbb movsb add jb mov jnp or test push into shlb xchg les lock movsl xchg mov fisttpl cmp repnz inc repnz push sub ja outsl adc push movsl (bad) jbe leave push jle pop push je jp bound xor mov mov add xor test mov arpl push fisttpl mov push mov inc stos xchg hlt mov mov data16 loope and and xchg sbb jbe pop mov cltd call lods mov jp jbe in xchg movsl daa gs jecxz dec add cmp (bad) lds mov jmp stos or icebp sbb mov (bad) cli into mov cld cmp mov ficompl shrl and movsl inc xlat mov pop hlt mov mov mov imulb cmpsl in or lahf push xor jns push push (bad) xchg jbe jno out pusha imul stos or fnop dec les push xlat movsb xor or pop pop call fisubl imul mov push push sbb outsb cltd insb and loope test jbe lea ss das nop lods psrld and push xor cld (bad) sub imul add add inc in mov jns mov fstpl adc (bad) cmpsb jg jge stos cli push scas dec sbb je mov pop or orl data16 adc adc popf rorl stc lret jnp cmpsb adc lock (bad) jmp or push out xchg adc movd xchg push in pop out test std dec imul aam pop rcr stos pop lret rcrl pop jecxz cltd push and add aaa pop lcall addb imul call adc lret cli xor pop aam adc xchg dec in gs dec or add sub mov jns fisttpll sub inc lret cmpsl mov mov mov das imul in sub cltd jae (bad) fstpl subl lock xor sub scas push and mov out dec test aad cmp add fsub repz rcl (bad) jno rorl fstpt fiadd in cmp inc ja jns pop mov push jp clc lods divl jno jge push pop call loope mov stos int and jnp test das jo pop test out and pop sub mov adc inc (bad) dec (bad) jg mov xor push add pop jl inc xlat jnp mov cs iret fstps adc xchg lea inc inc hlt ret adc add add and bound call jmp lds mov (bad) jge add or xor adc sbb pop fistpl icebp (bad) push mov and (bad) pop cmpsl repz pop mov faddl test stc mov xchg add jo je es mov mov pushf or mov fstps adc ficompl push imul (bad) insl cmp jp push iret sub push repz cmp outsl inc lret lods fisttp roll add cmpsb and (bad) lea je cli mov call call nop arpl aas push jns jg sti jne stc iret dec paddsb ds xor add lcall aas xor popa jge mov xlat pop sub inc subl or outsl mov jo jnp out sbb xchg cwtl jno adc rcrl out mov sbb inc sbb jbe shll cmpsb test hlt enter dec mov pop and jbe loop sub aam pop push ds add push cmp xor and add in rcrl mov ss adc jb ja pop mov jge orb fwait in and nop ljmp loope inc or sahf aad lcall cmp push fisubrl pop sub push inc imul jp daa scas pop aad fist fstpl dec repz or loopne stos iret xchg push sub imul xor inc xchg stos aas pop or dec dec call jle push (bad) loop mov mov sub or inc ljmp cmp out adc mov pop aam xchg (bad) mov iret lds dec xchg and cs es xchg leave movsb xlat or add jle ds inc mov jns int ja mov aaa add cmc and popa out aas push jns mov dec jmp hlt and cmpl aaa outsl push jne scas popa cmpsl rolb add adc movsb fwait daa scas pop aad lahf adc mov std fstpl dec repz or loopne stos iret xchg push sub popf mov xor inc xchg stos aas orl cld dec dec call aaa mov cmp mov sahf adc and and cli imul fsubrs mov sub adc mov inc inc test std xor es xchg dec int ja shlb lods push sahf sbb cli repz inc xchg ljmp jl nop addr16 cmpsl inc fbstp addl stos mov int3 pop mov adc rclb xor dec out jbe (bad) (bad) sub adc inc xchg stos lcall flds dec fcmovbe int or es repz and pop push push scas dec pop pop dec mov test jnp (bad) and mov ficompl fnstsw cltd mov fnstsw bnd push jmp add add xchg bound sbb cmp or test into jge mov popa (bad) call xor es negb scas fmuls fs cmp jge mov dec dec fisubrl sbb jmp fisub mov outsb lods pushf (bad) pmullw lock mov dec rcrl inc imul out fcoml add (bad) cmpsb dec pop dec or icebp enter jmp cmp lea jecxz test mov fidiv add jbe bound mulb add mov ja xchg and ja out adc or jns and lods mov inc jns int ja jp add fs aas cmc and clc push push cli jns loope mov inc fldl pop (bad) cmp out push fdivrp outsl mov mov and insb lahf pop repnz sub sbb add (bad) cwtl and aad mov cmp mov loope or adc in into add leave push jae adc xchg sub pop mov mov inc jecxz dec push sbb pop int3 addr16 jns or (bad) fisttpl add adc fdivl mov push or mov in and mov orl jno sub shll das add add add jne lds mov cmp jb rclb push lahf pop fild mov sbb push or sub out xor push in aaa push inc rolb or in mov aaa fadds bound mov out lcall sub push and add aas xchg push sub into fwait mov push push pop loopne movsl push mov jl movaps pop xor add xor push pop sahf das jo ficoml iret imulb push fadd aad sbb dec cmp jle inc push jae popa sbb cmp and jl sub inc ret dec mov and popf add dec pop xchg lock lock (bad) sbb pop add fstps in (bad) je jp repz outsl mov and pop pushf (bad) xchg inc in call lods fisubrl lods xchg sub inc fist fstps mov test out (bad) loope xor dec loopne lcall aam add popf lock lds xchg sti out test (bad) adc jge pop sub (bad) scas mov mov push sub les sahf adc addl mov mov xchg lret adc sbb lahf jns insb xor or and mov (bad) ss mov icebp lods shll das and push stc pop xlat ja lret fnstcw jno sbb sub mov outsb decb gs shr xchg add and negb leave addr16 sti inc jns int mov aaa lea xchg sub cs cld int3 add aaa mov adc sbb jge xchg ljmp cmc cli xor dec jbe cld mov push jb pusha clc push push sub mov ljmp mov push lahf push xor push push nop jge adc lock call xchg jmp js das adc sub add add ss pop cmp push inc scas dec push fucomi out imul cwtl mov and mov sti sbb push adc dec cmp lcall fs add cmp fdivrp xor ljmp out push lret mov xor cmpsl and xor out and xchg loopne jle push test mov dec xchg and fs push inc mov mov and mov mov add add cld or push pop xor out inc and out xorl lds push mov cli sbb sub sbb (bad) xchg push pop pop xchg fwait add mov test imul push cmpsb add mov loop shrb shl not mov stos lahf mov push cmp fildll fiaddl lods fsubl sub lea xlat mov inc ret sbb xlat int ljmp cltd xor adc xor outsl and lcall fs divb cmp dec cmp and mov jbe nop sub (bad) or lret jl imul movsl stos addr16 stc add andl lock outsl movsl fimul push aam cmp xchg pushf sbbb (bad) loope lret imul fildll ss ljmp dec scas fwait fs lock (bad) ss dec cmp add nop fstps sub adc (bad) mov pop xchg (bad) mov mov fnsave jnp gs popf aaa lock mov out or nop add adc inc ja lret jmp (bad) pusha and xor lods sahf pop scas pop sub pusha xlat imul inc dec repnz arpl fistl out stos fnsetpm(287 sti mov xchg scas adc int3 add stos call adc popf xlat shrb add mov sahf js mov repz mov mov inc and aad fwait leave jbe hlt pop stos andl nop lret add dec (bad) or daa pop loope mov cwtl lcall lock (bad) iret pop femms xchg and push cmc jnp and mov int (bad) pop test pop mov rolb dec rorb add push repnz (bad) push fdivl push je repnz mov (bad) xor in rorb repz xor popf shl rorl rorb mul pushf sbb add and in jno fsubr sbb loop sub subb fwait out lods out adc pop addr16 push cltd push mov jle dec pop stos shlb xchg loope push cmp xchg enter jne sti and mov inc cs sub movsb and cltd push aaa mov sbb mov out xchg or jg xor mov dec mov outsb adc or je or mov add add ret and adcl (bad) mov stc daa aam xchg jl ffreep loope aas je jnp cmp in arpl pusha push (bad) mov and sbb jbe popf jmp (bad) add fistpll mov jno xchg shll enter and ret push adc js jae jno lods lahf ds nop dec icebp mov rolb data16 ljmp out ror data16 data16 add add scas ds enter out and test jle aad cli mov dec xchg fbld sbb lret inc jmp orb mov xor int3 add in inc imul jmp arpl sbb sub cltd add in fwait add push mov fsubr sbb imul pop push loop push insl shll es stos push dec push js push mov xchg (bad) ret pop jb mov mov sub lea xlat mov (bad) xor adc inc testb xor xchg xor pop cltd mov add xor cmc mov push pop add mov dec aaa mov mov aas ljmp (bad) or fildll in pop xlat ja stos out stc add (bad) in (bad) lock mov cmpsl fimul push add mov add gs pushf add mov cmp pop (bad) pop push xor jbe or fisubrl sti das int3 sbb in dec (bad) pop dec dec loopne das pop das jne sti and mov inc sub jmp ljmp lcall std jmp sbb mov mov xchg sub mov xor mov lods jecxz jb mov xor inc xlat ret stos sbb adcb or fdivrs ds push dec ffreep stos pop into dec sarl adc insb pop loopne (bad) mov and push out insb pushf jmp dec add idivl int3 insl (bad) mov jns insl jmp push test pop lods ds push or mov jae cltd mov lahf cmpsl ss lods dec icebp push push lea loope sbb ljmp out sub data16 sub inc cmpsl dec mov adc xor out and ljmp add inc xchg mov fisub sbb lret jp ret stos xchg and orl fmuls push cmp sbb in inc insb aas repnz faddl ds and jnp cmp sub addl xchg fwait add push mov pop adc lret imul push cmpsb xorl hlt push test and rolb lret add nop jns inc xchg in inc mov sub lcall add faddp mov pop ja (bad) xchg and sub xor and mov rcrb pop cmc push xor rclb cmp sbb pop add mov mov (bad) (bad) push imul cwtl pop aaa dec xor scas andb popf shl rorb dec pop in sbb cmp fldenv in jo fsubr push and out out sub sbb cmp int3 dec out lods out sbb outsb fdivl addr16 add mov ss mov rclb xchg loope or enter inc mov and mov inc stos scas push sbb stos out lcall std jmp adc mov dec enter or mov mov sbb mov mov push lea xlat sbb (bad) push outsl scas push push div mov xlat jl jle loopne inc xchg sub ffreep loope adc sarl adc out in add (bad) mov cltd vmread scas or jbe xchg jmp xchg lret out mov out sbb mov xchg and pop mov cmpsb inc rol push and cld pop jae mov cli lret icebp push jne insl loope xor ljmp out add data16 data16 add cmpsl push sbbl push pusha (bad) mov jmp cli pop test mov mov dec xchg shll sbb lret lret lods xchg and sub mov dec icebp or orl jmp inc das and xchg call stos and jns jne sub test pop lds push mov pop adc imul push cmpsb pop jecxz popf loop add shrl adc stos fiadd adcb sub push mov xchg mov pop sti or hlt mov sub xchg jne xlat mov aad repnz jns fcmove test add add testb xor lcall xchg mov or dec fldenv sti mov and leave lret data16 mov inc inc pusha in xchg pop sahf mov out sub idivb pop sahf xor in xchg js adc add ret movsb bound (bad) lock cmpsb aas test or cmp push adc jle mov int ja pushf rclb mov mov push (bad) fs and das sub fwait adc dec (bad) icebp inc push jmp lock lods and jno aaa rorl popf fstps fcoms fstpl pop aas cltd iret cmp fnsave into int lock xchg test inc nop pop jo or ja (bad) (bad) dec ja insb and mov lods cs scas pop mov adc xor dec and fsubs aam test mov xor jg sbb push dec out aaa add adc imul das mov mov js jnp repz adc dec cs fcmovbe pop arpl xor hlt mov imul loopne jns inc xchg in dec mov in (bad) mov cwtl lcall inc scas out fisubl outsl pop aas pop movsbl outsl cmp imul cmp (bad) pop xor pop dec jo rclb pop dec mov inc sub (bad) subb jnp mov loop fstl daa cwtl dec xor repnz xor lret fstpt inc ret popf rcr or rorb jmp sbb cmp (bad) outsl cld pushf jle fsubrl pop jmp push fwait add sbb loope imul push cmpsb movb bound shll push mov stos rorl insl push cmp push sub (bad) ret pop sbb mov xchg sub xor mov nop sbb fcmovne test inc xchg xchg xor push ret and ret push add add sbb sub subb jl mov adc fstl xlat jno xor add and divl xor scas in pop pop fstpt xchg ret popf rcll dec push jmp sbb jmp jle fsubl sarl sub aad cmp push out daa cmp push imul inc mov stos rolb imul dec mov and mov fmulp scas push leave mov add add add sub lcall mov push cmc incb adc inc in test and pop faddl mov lods and or mov or xlat test repz fisttpl (bad) mov (bad) jl mov xchg sbb ffreep and dec mov adc out jmp (bad) mov fwait vmread xor jmp testb mov xchg cld cmpsb (bad) mov sbb push rol pop mov pop jle ret push jo test sub mov mov icebp sbb mov loope inc sub xchg in out jno data16 jecxz cld cmpsl add mov xlat out and out and mov mov dec xchg and shlb sbb lret jp stos icebp xchg and fsubl mov js or add jmp jmp faddl addr16 aaa ret and test add or xchg insb pop pop sbbl aaa push shl lret imul push cmpsb xchg lock rcll insb sub push cmp push pusha push and pop ds lock sub fcoml ljmp test pop pop testb xor cwtl lods mov xchg mov mov add mov push repnz mov inc dec fs rcrl jl add sub (bad) or notb jl data16 push ss mov stc add fistp bound lock dec stos fimul loopne pop adc jl mov mov pop xchg pushf mov sbb xchg shrb (bad) mov cmp lret das loope push push scas fwait inc in (bad) jns pop lahf lock std and je mov lahf fstps lahf sahf push (bad) rcl fistp in ja dec cmp fldl lods popa (bad) std cmp xchg orl add mov nop lahf (bad) aad test dec ja (bad) (bad) dec ja outsl and inc jge (bad) push scas pop sub js imul inc dec rolb fsubs add in push icebp or (bad) (bad) sbb push fwait vmread stos fistpl jbe xchg jmp lret push mov out imul jno adc push leave lds mov das cmpsb nop ret push push outsb sbb jae stc mov test add xor mov loope jns ljmp out dec les add cmpsl sub add out and (bad) mov mov mov dec xchg and mov mov lret inc jmp dec lea mov xor repnz test inc out sbb mov data16 (bad) add hlt sbb sub popa or xchg sbb xorb xchg lret imul add ret or fsubs shl mulb xchg stos sahf cmp ret push mov xchg pop pop jae mov sub pop push xlat mov sbb (bad) and jns fxch test addr16 xor pop fnstsw outsl and mov clc clc mov jmp lds adc cmp (bad) in sub divb fsubrs idivb ret hlt icebp jl addr16 sub sub stos add lahf (bad) stc add or insb enter adc ret mov or ss pop adc jge mov mov fwait xchg pushf cwtl adc subl imul jno (bad) daa sti das rclb scas fwait pop in (bad) icebp leave daa sub aaa in jne aad jno dec cmp sahf fstps fsubs ficomp ffree mov pop push fnsave into test lock iret gs nop leave mov pop dec ja inc ss (bad) dec ja add mov dec mov jge out scas pop pop jbe (bad) adc js xor dec cli add arpl jmp mov mov (bad) or sbb int3 add cld aaa add hlt cmp xchg or scas dec js mov repz lcall aad adc pop daa hlt push movsb andl (bad) test add jae add jno dec icebp enter add outsl sub xchg sub movsb mov add out mov add ja lahf mov cmpsl xor jmp shr and (bad) dec in jle inc mov mov dec xchg and add (bad) fstps lret xor in and or mov sub or iret inc push mov sbb std es faddl fsubs scas and cmova sbb es sub mov mov push ficom js push cmpsb (bad) out movsl loop mov inc repnz mov stos and push cmp fldt xchg xchg mov pop ds inc hlt mov sub mov cwtl mov data16 fmulp test xchg push testb xor pop and outsl and addb pushl repnz dec mov pop in xor mov pop das dec iret divb mov jl pusha jge sarb ja stc add das pop movsb bound mov mov or add add add push push and cmp xchg pushf jo mov cmpsb fdivrl stos pop push movsl (bad) imul xor (bad) and das and ficompl scas fwait je dec (bad) aad sbb lock int jne jno aaa ja cmp cltd fstps lahf pushf push (bad) roll adc cmp fnsave into lods ds outsl popa cwtl test and pop inc nop lds pop dec ja push lods sbb and xor lods mov pop popa jle,pt imul add dec (bad) add sbb out fcmovbe in jne pop inc sub ret popa aaa add repz je xchg adc mov das js fwait in adc sub sub sbb pop mov (bad) dec nop ret push mov outsb hlt push jae sub nop dec icebp loopne lea loope mov ljmp out mov push aas mov cmpsl fiaddl (bad) out and (bad) pop in add add add add mov loope stc dec xchg cmp dec sbb lret repnz popf mov mov sbb xchg mov xor or push push inc in sbb mov (bad) faddl (bad) roll repnz sub xor (bad) xchg sbb (bad) mov mov push push pop lret imul cmpsb push out nop loop,pn mov shrl and xchg stos mov lcall mov xchg mov pop push dec (bad) xor add mov sub js xlat mov dec jne sbb (bad) test in testb xor xor and mov dec xchg fs (bad) mov fstpt popf repnz dec ja repnz sahf mov js adc pop dec iret divb stos (bad) xor push imul (bad) popf rcll dec mov pushf sbb adc in jp fsubl popa mov sub aad sbb push out sahf test outsb fsub push add lods pop jl push mov imull mov loope outsl dec jo lds popf enter ljmp inc sub push scas scas push imul sbb cltd push aaa lods sbb (bad) popa adc mov mov and test and push mov mov jo mov pop scas adc xlat imul out cmpsb rep mov rorl mov jl sub mov cwtl sbb mov add adc out mov dec pushf vmread cmp jmp jns lret pop mov out insb loope (bad) mov adc push jno pop mov push shrb add lods lahf jp or icebp clc pop lea loope mov pop shld jne jecxz add fnstsw and aas lock (bad) pop call pop inc nop jbe or test dec ja lods sub (bad) dec ja push add loop jge (bad) push scas pop push adc mov dec fiaddl arpl sbb out xchg shl sti dec add cmc sub or sub add mov sub mov insl js push out adc adc dec cs das fcmovbe sbb cltd jp hlt mov andl nop lret add nop js lret xchg in dec mov mov cwtl lcall sbb adc and movsb jb add add and mov cmp (bad) pop pop pop push pop mov shrb dec lods and or push dec cmp mov mov fstl jecxz inc xor lcall divb stos mov fdivrs les cmp pushf sbb mov (bad) fsubl add ljmp push out cmpl ficom cs ljmp inc mov stos rorb mov loope cmp hlt jge lds sahf enter into arpl and mov outsb push ljmp lcall mov imul mov in mov test and in cmc jno mov ja lods mov mov fidivl xlat push xchg jecxz repz push outsl shr aas mov jl jle out inc xchg xchg inc ffreep pop push outsb cld sarl adc dec and lahf vmread jae (bad) jbe xchg jmp add add dec add aaa mov out xchg int3 mov jno adc imul cmp push enter in push jmp jae pop mov int3 dec dec icebp nop pop lea loope fldcw ljmp out jmp in adc cmpsl mov adc shr and ljmp mov xlat and jl hlt enter dec mov cli sbb loope and add loopne or or jle loopne push in jecxz gs call outsb and mov xor or fcmove fwait add mov mov sbb (bad) push cmpsb xorl hlt dec mov rcrb lret add clc mov nop xchg in dec mov mov cwtl lcall add xchg jb paddd xor and mov cmp (bad) pop jne push pop pop push add pop dec dec shrl mov dec jg ljmp repz mov and ljmp mov ffreep fsubrs sbb jnp xor in arpl into sahf vmread and out adc jmp addr16 lahf mov out push int (bad) mov fwait add and pop mov adc ret push push stos test in iret mov lods lahf jb subl fndisi(8087 and add add movsb inc push pop fisubl adc data16 (bad) cld cmpsl bound dec enter out and ljmp movsb stc dec xchg (bad) and dec or mov mov pop daa xchg loopne and inc outsb or negb ja loopne out in jecxz sbb sub call call sbb sub pop or xchg sbb push (bad) aad mov pop rcll push pop (bad) in (bad) adc fwait add add mov mov (bad) ss (bad) push stos adc scas outsl push cmp inc adc test jo aaa fmuls leave push pusha push dec xchg push sbbl push pop fisttp push jmp (bad) testb sbb imul mov jbe mov dec mov jl cmc mov lock pusha test push mov pop mov cltd (bad) mov pop mov movsl imul push mov or xor (bad) dec push popa lock mul scas mov xlat cmp push cmp mov movsl negl mov insb frstor scas stc movsl mov pushf mov or loopne enter jmp jne lret and cmp int push mov in daa jge inc and mov cmp jp xchg enter mov dec mov sbb lcall pop sbb xlat fstp add add ja (bad) mov idivb fnop ss jo push clc inc ffreep pop es cltd add inc pop xchg cmpsl ret popa lds imul cmpl fcoml jns int inc mov in stos pop add inc sub mov outsl imul fs cmp dec pop mov out add pop movl inc mov into dec cmc sub or movsb push mov xchg pop stos mov repnz sbb add add mov mov pop icebp sub sbb movsb mov pop (bad) or (bad) mov aam imul jbe es inc mov cmp mov je and xor lret push push test pushf sbb jnp imul add and test mov dec inc mov out jno lea cmp mov cwtl (bad) je inc test outsb mov out mov lods sti das add xor mov lods mov add adc add jcxz pop (bad) pop add fidivl outsl leave (bad) fstpl xchg or or out aas movsl ljmp leave add mov cs ds daa arpl shlb xchg ss sbb xor pushl int3 push insb inc fist dec pop add jne iret out adc sbb rcrl mov scas dec inc pop sub cltd pop sbb les push cltd add mov ret push mov sub adc cmp jno mov cmp pop cmpsl jne add fsubr cltd add jl adc pop inc cld icebp and fsts fstps daa jge add pop push cmc xchg lea fisubrl dec int lea jb xor lret adc aas sbb in popf sub push sub push bnd mov movsb test inc out enter arpl shr push sarb sbb cmp aam add hlt sbb popf inc cmp (bad) lcall int3 sarl xor aas fimul push jg aad xlat adc dec scas sbb cmp data16 push or data16 fiaddl repnz insl cli js jle push das mov mulb sub and aas lret je lock pop xchg sub mov out int data16 cltd mov outsl fiadd add inc test sub fwait mov push adc cmp add jg inc cs cli mov add and scas inc dec loopne and popa ss daa hlt push sbb enter in mov jecxz adc mov imulb cmp sbb fcoml jbe (bad) xchg or push xlat jbe mov outsl pushf repz mov call dec mov push xlat and mov add xchg pop mov js pop jmp and dec movsb in es add xor add add xchg push aas cltd pop jg sub push jb ds jp xor pop aas cwtl lds jns sub movsl lds mov divl or orb and fstl (bad) xor popa data16 iret imulb ret (bad) inc hlt adc popf ja les jp int3 out adc movntq add or vmread (bad) mov xlat cld mov push stc outsb xor mov cmp push data16 fisubl imul add andl lcall jns adc mov movsb push loopne pop add xchg xchg fstps mov movsb call aam sub jne fldt or fnsave je pusha sbb dec mov cmp out push mov nop mov leave sub mov in pop aam pop pushf sahf loope inc mov in addl loope mulb jl ss daa adc pop sbb (bad) cmc xchg stc add test out fs xor movzbl sbb add fcoml leave jecxz xchg jmp sbb mov push sbb shll mov sub rcrl and jmp dec adc rol push adc adc adc adc mov test (bad) add xor inc (bad) (bad) and pop idivb mov out test clc repz jns test (bad) jbe (bad) repz xchg daa push push aam in in ja cmp cmp sub cmc sbb clc movl mov or mov in lea sahf mov jmp mov out cmpsl in jge add imul adc cmp fildl xor fsub in sbb sbb and pop ficomp out (bad) xor cmp ficomp fimull mov aaa dec xchg rorl lret lret add out aam xchg jmp in daa stos pop pop dec push lods ficom outsl loop inc push test aaa dec add arpl fwait addr16 or jae xchg out inc add pop jg clc add sbb sub test and (bad) inc cwtl xchg mov dec fldl cmp push mov mov adc imul xchg jne xchg jl mov mov dec push mov jge push adc aad pop in or cmc cmp cmp mov push outsl cltd mov ja adc add ret pop stc mov sub xlat adc adc shlb aas xchg sub sbb cmp sbb mov pop push sub xchg adc addb jmp lods and push add int3 pop sti add and cmp mov or ret mov pop mov arpl pop jecxz (bad) sub repz out js mov push in scas popa sbb in fcoml and sub mov ret lods out adc add add sub ret sarl pusha das xchg or cmpsl lret jp loopne outsl sbb ss enter dec sub mov dec in jg sbb mov fdivrp xchg dec scas in xor xchg xor mov cmp or mov adc mov cmp jb aaa call or inc xlat inc stos mov leave adc sbb xor mov mov aam xor jnp ret add faddl test inc or es jne into and or outsl pop push adc les arpl add pop push push pusha xchg out or daa xor pop pop fucom pop sub rclb add push dec mov add in imul je lcall dec sub faddl sub loop dec xchg cmpsl mov lds sub cmpsb popf test lods fsubrl fs push inc enter add xchg fs add jo imul add out aad mov mov loop inc xchg loopne jp xor inc std daa sarb je dec out adc cmp pushf outsl sbb in lret repz mov dec lret ret mov out dec pop push test push cmpsb add aad pop or loopne xor das jmp push cld pop loop js push lahf enter cli mov pop sbb mov test and movsb (bad) fist clc sbb add add and xchg enter add (bad) loope shr and hlt cli repnz sbb cs cld mov mov ja loope xchg fimul scas fsubs cmp adc mov or dec push push fcoms jb cltd dec push pop jmp add mov aas insl sbb adc lods mov cmp fidiv mov jo out push cmp ss cs int and mov sub stos add adc fsubs addl fndisi(8087 pop (bad) jne xor ret xlat jbe mov xchg adc jge (bad) rcll jne in daa adc inc int outsb sbb (bad) cmp jle (bad) dec pusha roll mov jbe jp out jnp (bad) and add dec ret stc xlat mov in rolb pop or ss cli ljmp rolb or jb sbb into ss cmp inc (bad) push jne pushf mov xor xchg sbb add jmp inc enter cmp pop popf push out dec cmp mov ficompl lock or das mov xor sti cld pop mov sbb lahf enter test repz lahf push jcxz fwait test out xchg sbb scas add test mov mov inc nop insb iret sub test mov inc stos rcl dec ja mov add adc je and jl in push dec out mov dec add mov (bad) dec jmp iret push imul fisubl mov adc xchg int3 decb sbb xorl sub or push dec push sbb dec push test cwtl and ds inc mov add stos test andb dec mov iret pop xchg mov lcall mov pop jne decl fwait js cmp add inc int mov cltd test xchg and add or ret fdivr cmp xor clc or mov repnz mov arpl icebp sbb nop mov idivb ficoml mov mov ret insl mov arpl mov imul mov (bad) fdivl gs sub and push mov mov rorl cwtl xchg fidivrl rcrl (bad) in mov dec pop cmpsl or enter das rorl vmwrite imul pop push mov jne (bad) fiaddl in cmc rorb rcll test push out (bad) cli sbb sbb dec arpl lds lea je ds cmpsl scas push scas int sbb mov fs or push rdpmc leave xchg daa testb (bad) xlat push add xchg fwait xor cltd adc xor xchg mov scas fisubr adc enter inc fcomps mov or add (bad) fidivl jae popa pop mov pop shrb insb add xchg dec popa test lods outsl mov mov dec lcall mov in data16 decl dec push sub mov xlat cmp push adc cs mov push push dec dec mov jecxz clc roll adc imul loop sub adc push dec lcall pop or dec adc enter jne,pt scas dec or sarb in jo jmp out inc sbb pop mov outsl sub outsl (bad) jo push mov dec push adc inc mov cmp test pusha ret ss inc loope inc jnp sub xor push inc cmp aas and xor xchg icebp (bad) test divl sub mov (bad) add dec (bad) divps xor add sub lcall loop pop sahf push push mov cwtl sar (bad) es mov cld imull cld xor fs out daa pushl add and popf adc aad andl push xorb scas fsts faddl daa hlt jge pop push jno xchg call xchg push xor (bad) fstps loop fdivs (bad) ficompl push test pop and repz xchg pop imul orb adc cmp sub fbstp fmuls sbb aaa (bad) cmp mov cmp jne js enter sbb add jnp mov xchg pushl pop ret pop test dec or mov (bad) aas cltd mov and jge orb cmpsl pop and sbb mov mov adc testl push ret pop dec jnp js sub call daa nop xor out cmp js jne add xor push adc scas dec lds insl pop icebp loopne dec cmp popf (bad) negb jb and leave ds inc xor fsubr cmp stos test xchg xchg or add popa je es popa pop xchg mov mov mov stos jmp gs adc dec jge movsb cmp clc divl in in loop jl add pop into cmp dec and cs cwtl divb roll ficompl xor pop jo imul mov hlt push outsl sbb mov loope jae xor iret sub in jecxz stos std cmp adc mov pop gs pop jns lds or jp rorl xchg mov aad js lds xchg push cmpsl push test pop and repz inc jnp sub adc push inc push xor cmp add jne bound jp mov sub int3 push loopne int push jbe loope add and movsb addl mov movsb xchg and das in dec loope arpl mov lods imull hlt jp and mov repz push mov incb dec stos rcrl adc lds mov jg push stos mov data16 dec orb loopne sahf nop pop je lcall popf fist dec (bad) fldenv or pushf (bad) xchg sub or xchg push mov test mov pop jle std mov push fcoml mov dec cltd dec (bad) fwait push or ja add sub call or (bad) adc cmc in sarb fsubrl fstpl (bad) out sbb dec dec lods cltd jge mov mov jno add mov imul ss xor jle adc aas std adc insl lds enter jge mov (bad) in sub inc popf rcll xor xchg jmp in push addr16 or xchg or add mov xchg inc push (bad) out jno orl push outsl pop out insb cmp push imul xor or jl mov popf cltd jecxz mov mov and out cmp inc lods sti (bad) cwtl lcall add leave dec imul or ds cmp adc dec das in js mov (bad) cli (bad) daa imul or std (bad) arpl add scas and jp xor xchg daa dec ret mov add push daa pushf (bad) and jmp cmp mov and mov add les and dec cmpsb or cmp pop sarb jnp mov sbb (bad) faddl insb sub dec rcrl mov and push adc xor push ret xchg sub (bad) mov xchg inc mov mov xor test imul pop add fldl sbb cs ret dec shr mov int3 test inc xor cld mov scas jp xchg pushl cmp and mov mulb push jno mov dec xchg movb stc add mov sbb add jp mov repnz fcoml jmp outsb cmp push mov fdivl aas cs jns shrb pop test insl mov aam and push mov or and pop pusha fwait add enter push in int dec aas pcmpeqb push jbe loope add and movsb adcl mov dec dec xchg xchg inc dec mov xor test imull in pop and sub xchg not inc push push ret iret into inc and and pop incl mov pushf dec fsubs sbb jbe jg or xchg dec call dec or mov inc or insl pushl mov out leave rol xor mov icebp call mov movsl rcr and mov add xchg stc (bad) test push cmp push mov adc flds in pop daa ss scas inc sub idivl mov mov sbb insb test add imul lock lret sub inc fwait sub sti xlat add sbb in mov sbb inc push dec stos stc out call fstl ret outsl jg dec stos mov data16 fldt jno cwtl sahf mov je stos cmp arpl sahf jnp and adc or inc cmp lds out movsl insl pop test test shll rcrl jp sub adc mov sbb add aam jb popa pop in flds cs pop pop rcl sub xchg pop aas cltd fldcw pop sbb pop movsb imul or aaa daa pop arpl pop push sti fucomi gs insb adc out and mov pop in dec stos jmp lods sbb sub inc jmp mov arpl gs inc push stos pop mov insl jle push mov in cmp bound jo nop cmp stos sub or push jle pop cld mov dec iret ror pop sarb data16 sti cmpsl dec sbb rorl fmull orl mov (bad) mov nop xor dec fs push (bad) xchg pop sub cmpsb out xor sbb jae pop mov cmp lcall popa pop mov fldt jge and pop push lret dec (bad) xor jo dec sub fisttpll ss xor jle adc aas sub mov pop jge mov (bad) in add push into dec popf rcll cmp xchg fsub in push out jmp adc jne imul (bad) mov push jp frstor push call sub popf loop ss pop pop lcall out lea xchg loope fldt inc out xor pop sub jno adc or in push cmp jne xor pop sub lock pushf cmpsb dec and cmpsl sti pop mov mov add dec loop add and and jne dec lds inc je movsl mov xlat mov std test std js stos mov loopew pop jl leave mov je (bad) inc mov in push (bad) xor push movsl or mov outsl add dec mov repnz jecxz ficompl and ror imul push dec sbb adc xor or adc fidiv sub cmp daa push iret mov rcl cmp scas mov data16 add add cmp outsl mov mov push jbe (bad) xor stc inc scas sbb aam add jno in jmp cmp addr16 (bad) jns dec stos loope decb pop xchg (bad) jmp mov aas sarl mov dec jne loopne pop jmp sti bound inc xchg outsl sbb loope outsb pop ss rorb jno dec xor jl or rcl and pusha mov add add push push dec sub loopne push lock aaa xor mov cmp pop cld xor sbb out fcmove imul icebp jp daa fist push int (bad) in dec sbb iret lds shrl inc imul ret adc pushf rorb inc jno insb push out mov cld inc adc mov xor jb movsb out pushfw jge hlt adc sbb dec (bad) mov mov (bad) aaa cmpsl mov add mov mov xchg pop adc (bad) fnstsw int pop xor mul (bad) sbb jae mov cmp bound mov mov popf jl mov (bad) in cmp sbb (bad) (bad) into lea mov cltd clc repz int push cmp out and lcall mov cmp lock ret lea ds mov aam push mov mov add add push mov divb mov popf lahf mov fadd popf fnstsw push sbb mov hlt cmpsb jnp fimul jecxz push aad stc or push mov cmpsb iret jbe out jecxz add and nop push sbb jne xchg cmp push (bad) push mov jmp fadds das std mov xor arpl sbb pop nop pop std test sbb push ja roll fnstsw and ret xchg add dec and xchg mov mul iret sub dec ja lock es fbld jp lahf (bad) lods pop sahf test les inc hlt or push jno add arpl xchg ffreep fcompl imul mov push sahf sahf sbb lea cmpsl popa pop ficom sub mov push mov scas out push adc call fmuls mov mov mov in mov xchg loope mov xor mov lret inc (bad) xor or imul shrb repz add fnstsw mov dec lcall pop mov (bad) lods loop pop dec loop (bad) sbb dec stc and gs inc xlat je out sahf mov mov sub jl inc xchg repnz sbb pop mov mov bound adc pop add pop lea mov push push push or cmpsb scas cmp add cmp add (bad) cmpsb out test cvtpi2ps test mov loope pop lds jae xchg xchg cmp sub adc cwtl call ljmp aam dec fmuls popl in mov rcrb pop pop das cmp add mov cmpsb (bad) mov repnz mov mov out (bad) adc cmc test sbb mov mov push jno pop fsubs mov jne cli add add xchg xchg call scas xchg sbb int3 mov ret mov out push sub mov dec adc cmp cmpsl mov or xor xor je pop mov sahf lods inc rol or dec ret js sub mov add push aaa sub pop (bad) cli jne es stos shrb data16 jmp js cmp in inc loopne imul push mov dec jo cmp cmp xlat and jb add cmp inc mov and jmp fstpl sbb push xchg xor add mov testb pop sub adc pop cmp pop push lret (bad) jp fcmovnu movsl (bad) pop jp pushf (bad) mov mov popf lods insl pop fisttpll cld addr16 rcr fwait and popf mov xchg pop outsl das xchg (bad) xchg pop cmp je,pn (bad) jp scas jmp mov jno sub mov in mov gs (bad) shlb add mov mov outsb or fs jecxz and (bad) clc rcrl sbb sub and test call ficoml mov sbb pop (bad) mov andl push xorb scas fldenv rolb daa (bad) jge inc adc cmpsl xorl sub ja dec xchg ss lret jns pop sbb sub or sub jl aam jnp mov ja std inc imul and xor add add pop js mov mov sti or sbb es adc add or or stos mov lahf jl je push push xchg jae lea das in outsb loope and outsl es into xlat add jno jecxz cwtl push into mov adc xor loop push lret subl cmpsl pop sub inc imull call lret xor xchg mov je aad xchg push cmp fcoms mov ljmp (bad) rcrb push xor jne pop jo repnz sbb ds or (bad) mov mov inc mov xor lret jo popa add gs lods iret es inc or das popl cld int3 add out jl and sub test or roll cld lods adc aam jmp sahf inc aad ds dec mov mov and lahf sub cli mov add xchg dec or in pop imul je gs ja adc insl jbe push mov xchg push cmp mov inc xchg mov (bad) dec mov lods mull int ficompl sarl (bad) (bad) pop pusha ror mov cmp xchg loop push cmp (bad) sub pop js mov sub adc jge cmpsl add es xor push in jae xor adc in xor out test loopne sub add sub lds or (bad) movsl sbb mov imul das (bad) mov cmp jmp adc in pop add scas nop clc add xchg test outsb jns push sbb lcall or or mov das ss leave out adc push int3 aas pop push push das fcmovbe lret pop imul pop mov lret loopne push sahf es popf dec mov (bad) sti leave daa inc add add mov out lods test (bad) add pop adc push and (bad) stos mov sbb in mov rorb lock pop inc nop daa adc pop dec ja sub andb lret inc and or daa sub push orb xor lahf scas adc in jecxz inc mov pushf in stc cwtl sahf js in pushf sbb sahf psraw mov scas fimul loop aam sub mov out nop mov mov push aas pop add pop das fcmovbe repnz mov negl cs stos cmp jne data16 outsb xor mov adc inc cmp push mov lea ficompl aaa dec incl jg and push inc mov mov dec mov shr out mov nop mov pop das sub sub cld mov mov push push push xlat das pop lret jmp xchg (bad) jmp mov and mov lods push jo and sarl test inc imul mov add add and sbb pop gs pop jns cmp adc js push or mov add lods inc mov mov or mov repnz mov sbb mov je jns mov mov int3 mov ret (bad) sti shrl push (bad) ljmp xchg mov push and push inc mov mov dec xchg push xor out mov xor stc push mov clc imull int3 xor (bad) mov sbb inc mov add push scas pop pop incl push outsl adc (bad) or in mov fsubs dec jbe js adc inc lcall jns mov jns (bad) or dec lret and and mov mov test adc adc mov mov or sti jae lods push dec xor repnz push fbstp mov pop pop icebp sbb lea out subl mov rcr cld jmp mov mov ret lahf mov hlt lret (bad) test rolb pop dec fist insb sbb gs mov xor imul xor and fnsave test jp ss je gs dec cmp das dec sti xor test cli add jl (bad) (bad) fdivrs sub fild and and pop add inc sbb push addr16 or pop xchg in jae xchg push mov dec pop notl and jne dec pop lcall rcl (bad) adc jle pop add dec mov test mov aas imul push cld pop push pop inc or cmc pop mov std gs mov jl or mov outsl rolb and or daa adc add nop cmpsb push enter cli or cmp (bad) jnp xor in add lock lcall inc ds jmp add jmp pop aad xor (bad) push aas pop cs repnz mov adc pop mov push loope loopne push sahf es inc dec mov and mov dec mov pop nop and test cmp and sbb inc sbb xor out test das and push mov dec outsb pop dec out mov cmp ret dec adc scas shr xchg mov mov ror (bad) or inc push push fsubs lcall xchg xchg push call xchg sbb (bad) imul (bad) fnstenv pop dec mov mov rorb lods out mov mov cmpsl jno (bad) pop mov pop imul bound mov mov js lcall imul pop sub lods ja cwtl cmp nop stos (bad) test cmp and sub adc in imul into sub jmp add mov cwtl bswap mov adc xor or call enter and (bad) pop mov in dec in lods jg dec xchg xchg loopne call push int lock imul jmp pop sub mov xchg push popf push sbb daa (bad) pop jo jl scas rcrl lret cmpsl std sbb pop sub dec pop mov cmpsb int add dec mov mov and add movsb mov mov and lods add test loopw mov lock xor fnstsw clc sub or mov ss xchg (bad) push add fdivl mov pop sub lock mov fnsave testb outsb pushf push push bound insb incl xchg jnp sahf cmpsb js mov sbb sbb jmp in mov mov repz mov inc cmp adc add loopne fimull stos (bad) fistl dec push mov les mov leave clc mov jns xchg sub dec movsb xchg push mov dec jno push dec (bad) jge xor rcrl mov jmp xor xchg pop xchg sbb adc inc mov sbb std sub add lret xchg cs (bad) jmp cmpb inc lock push jo data16 pop inc adc add pop cli mov imul fildl pop push and outsb cmpsb push in outsb adcl sub pop aad cmp pop adc push adc aad pop fldcw outsb fsubl sub fsubrl pop mov pusha fsubs pop pop sub hlt rcl cmp dec mov pop push jmp sub jmp push repnz movsb xchg jno jnp and sar sub stc inc test sti xlat xlat add dec push iret dec stos adc jl pop fisttp jmp add test or xchg (bad) jecxz mov outsl push cmpb scas leave inc jne call lret pop insb lea lcall jp aas lcall jp mov cmp cltd stos hlt and jle pop fimull in (bad) pop pusha (bad) int3 icebp stos pop imul mov sub jns insl adc fistl bound into adc int3 dec aas cmovo data16 xchg stos or lcall test jl add dec cmp lcall and adc pop into cmpsl int3 pusha in out iret lds (bad) repnz lea out sbb and int das lahf push enter adc jge jg or adc dec pop jmp mov jno stos xchg (bad) (bad) imul sbb jne dec jle mov mov (bad) ljmp xchg push push les in (bad) pop pusha mov icebp in pop imul xchg rorb (bad) in push lods (bad) add add in ljmp sub (bad) (bad) and mov inc mov dec int aam jnp nop or sbb mov pusha mov lock or xor jmp mov ljmp jl call mov pop (bad) dec stos jmp xchg (bad) jmp mov daa sarl stos mov pop out in pop cmp (bad) jnp xor in cmp mov dec xchg ss fs jmp loopne lret icebp mov add add or mov mov sarb rcrl out and test xor cmp lahf outsl fsubs mov lea scas popw sub movsb data16 repz mov (bad) and cmp inc dec out and out add mov out mov inc and jb adc inc adc scas xchg mov outsl adc outsl jg pop xchg push jo push popa inc inc mov pop in stc cwtl sahf pop xchg in pushf sbb sahf psraw pop imul xchg mov (bad) jbe repz popa or mov jl add lret pusha xchg int3 icebp mov (bad) xor mov sarb pop jb fwait cs jb daa push iret mov mov and xchg data16 ret cmc (bad) in jae or stos sub dec pop scas test das cmc insb (bad) add mov add icebp (bad) shlb inc xchg ficompl cmp lret inc xlat je mov sbb sbb das orl adc ret out fistpll in jno insb clc jg pushf push arpl ljmp adcl adc push fild push insb and lcall cwtl loop test mov pop push xchg jo insb mov jg mov pusha pop (bad) xor cltd jb mov mov inc mov xchg xchg or mov arpl xchg jle sbb xchg outsb cwtl jp inc or pop dec jo inc inc xchg and and movaps jge outsl mov les in push sub aaa cli outsl adc push mov stc jle push pop inc fbld out inc inc pop cmp or jecxz add mov js (bad) mov xlat xchg add jle sub mov out sbb push (bad) repz inc imul das jecxz add add push call sbb je jne push stc xor jns mov cs int3 jl std addr16 cwtl push lods xor mov sahf cld mov adc jmp jns test xor loope movsl xor xchg repz fsubs (bad) lea jne cmp mov add ja push pop inc push scas icebp call cmp pop divb pop push lret leave jp mov fisttp jns sbb call stos mov add out pop jmp (bad) faddl fwait inc inc cmp and and push or push cmpsb in repnz jbe jl cmpsl rcrl lret cmpsl sub mov add stos (bad) lret inc shll mov clc and lcall ljmp mov cmp cmp bound add mov jno rolb dec (bad) lods and pop dec add pop jo je jbe xchg fimull sti sub lahf mov pop add add stos (bad) loop leave jp fs lcall jae jo pop xor cli loope sbb (bad) lret cli call lahf add jo jmp repnz sbb sbb cmp mov test jbe,pn xchg int or mov pop xchg lods imul xchg je dec dec or fucomip sub jne dec pop lea jge push popa fsubrl ljmp pop mov jbe mov xchg add (bad) aaa xor add add test dec jle inc nop into mov sbb std icebp rorl push push cld jns pop and lahf aaa mov pop sahf sbb adc xor mov or mov mov daa scas adc lock icebp out jl jmp lods mov cmp mov dec inc sub mov push lods aad arpl cmp nop xor fsubrl pop mov iret mov popf jb push mov (bad) mov int les (bad) stos out mov cltd mov popa xchg js in mov je pop (bad) sub mov lods inc xchg mov (bad) sbb test xchg and rcl and lahf fs and out mov (bad) inc jmp inc mov nop inc fist pop pop add ja xor scas out sbb mov pop outsl and mov cmpsb sub mov aad sub mov lods inc push test add dec push test cmp inc imul jno or (bad) xchg outsl in call in jg lahf outsb cmp lfs and mov push clc je xchg mov jecxz rep dec int sbb outsl mov xor mov icebp inc mov in lea outsb pop xor jp inc fisttp call imul jle adc lods stc ret mov or daa lret das mov add jo pop cmpsl out inc mov xor mov push ret inc cmp cltd cmp push jle mov lds adc or sub imul cmp imul stos call mov add scas lret je lret jne fcmovbe sub jcxz out pop add inc dec mov std mov and sub mov test (bad) call cmp dec rcrl test (bad) xor add sub mov movsl addr16 bound mov xor iret divb popl adc leave mov jmp xorb int inc xor sbb inc (bad) mov bound decb xchg sub int3 inc pop xlat test add arpl cltd mov andl inc sbb adc test or dec sbb sbb addr16 lock xchg sub xchg pop mov sbb sti imul out xchg mov iret scas insb and dec sbb in sti sub pop call mov addl inc jno and in add nop add inc and fcomip shll mov jge inc cmp dec jbe jae jno pop (bad) sbb mov int3 pop test cmp mov jnp cmp flds les push push jp out mov stc frstor fstpl xchg fwait inc out hlt sub mov sbb add pop pop popf cwtl mov mov mov cwtl xor sbb ljmp in xor data16 jnp or inc lret sub lds pop int3 xchg movsl sarb mov test mov cs dec lahf mov xchg stos push lods jl pop movl xor mov push sub lods in pop icebp push cmp in add dec and pusha test icebp add pusha out jmp jns (bad) cmp daa push pop push jne push cmpsb xlat and sub (bad) iret dec inc mov imul imul dec dec sbb dec sbb das xchg aaa mov pusha or adc jb pop push outsl icebp jp daa fild fmulp stos daa sbb xchg mov cmp xchg push jns test out xchg jo inc test dec mov imul repnz add xlat adc jae mov adc add add or test ja push data16 push push jge adc or mov (bad) jp sahf (bad) push mov jl mov push push add adc std cltd pcmpgtd fidivrl js rcrl push (bad) sub sti das sbb add aas ja lret mov sub adc mov aas aad ljmp mov mov (bad) push fnstsw nop inc cld pop push iret jle push inc pop push sub add outsb into mov ja popf repz pushl pusha pop fdivrl mov fistl aaa cmc and mov and xor sbb sbb lds inc repz push (bad) (bad) cmp leave dec movswl xor cmp cmp dec cmp xchg imul les stc and outsl adc in adc push xor pop aad and mov mov das pop sbb cmp mov push jne lcall ret and or ljmp add outsb lcall dec mulb sbb fcmovu gs test xor out ljmp rcrb dec cwtl push jne xchg leave mov imul (bad) gs xchg fisubl loope inc ret imul jbe mov mov arpl inc or stc iret fsub in jecxz and data16 mov js (bad) in imul movsl mov jge (bad) imul lods ss scas push aad cmp pop test jne iret stos add cmp add fwait mov xor shrb add scas divl icebp inc shll push cmp fidivr jo fdivr adc adc nop adc jno mov fild faddl xor add das into cmp rcrl in in sbb clc mov and out adc dec inc push inc popa and sahf mov mov sub or out jg iret (bad) in jecxz and shrl stc lret jae add add int3 decb test ror ljmp dec sbb mov push jp popf or repz movsb sbb and ss mov pop cld loopne mov test cmp dec ret je in leave int3 inc aaa or ljmp jmp push jecxz mov adc adc inc mov icebp push xchg rcll daa outsb pop loop add (bad) out ljmp mov and out dec lods add push (bad) scas js mov push (bad) idivb leave int3 dec lretw adc fiadd lods fistpll in std pushf nop adc call push push add or xchg arpl cmp int pop loopne xchg inc dec mov fdiv lcall ret (bad) jecxz mov das push inc push icebp xor pop push or push in dec push mov loopne push mov and inc inc xlat test sbb add icebp xor addr16 imul ja mov repnz cmp adc dec into push jmp add dec roll sub mov sub push int push pop or data16 mov and ss daa hlt jp pop mov sbb out js (bad) int3 dec inc femms test xchg jmp and cmp jge lret adc data16 and sar ljmp mov mov js dec pop fidivr lods js sub aas fimull lret je and mov sub pop push js fsubrs pop xlat mull push cmp xchg and stos dec adc cmpsb test jns mov sub xor push fistpll jmp je inc and push iret leave or dec test mov and subps dec cltd ljmp add add ds or push mov addr16 sbb xchg sar rcrb xchg adc xor mov sbb push sub mov shll mov es ss add xchg shrb pop mov cmpsl sub popa dec xor fstpl fdivl inc popa add rorl lea push aas lret and cld mov adc sbb jp sbb fimul mov mov push ja inc fucomi mov je lahf mov xchg mov mov movsl or jl out jp mov enter cmp das dec in adc pop int cli cmp sbb (bad) lret mulb jae jb imul add pop es xor sbb pusha push add jl repz pop and mov push pop cld mov fistp mov stc cmpsl or inc cmp pop xchg aaa aas repz and push add hlt and xchg fs pop lea pop sbb add je jb mov jns popf mov or ja (bad) shrb scas pop ljmp pop loope xor movsl inc or push dec inc fist push pop add leave pushf adc sbb jno popa cmpxchg popw mov xchg ror pop sbb xchg fistpl lock mov cwtl mov rol jno insb sbb sti pop adc stos loopne xor or pop sarb mov pushf sub or add movsb push jp pop pop movsl shrb inc int data16 xor nop xor xor out xchg and mov ja sbb pop (bad) jb cld push lret jbe je mov popa sbb pop push stos (bad) sbb dec repnz addr16 aam ljmp add sub mov pop jle out sbb and cmp cltd cmp (bad) test add mov inc nop jae test lods xor aam rorl cld xchg mov jbe fdivl adc xchg dec bts mov pop aas adc cmp mov cmp jb gs es cwtl inc xlat adc cmp repz lret in sub or adc clc outsl movsl and inc inc mov push ljmp pop dec je dec push mov mov scas js icebp dec mov leave jne fwait mov lods lods jo call js insb out std pop int es sbb add add push pop fnstenv jge xchg stos daa push and in (bad) cli movsb xor js aam fbld fcmovu xor ja loopne loopne,pt and sarb add cmpsl lahf dec add out jl es enter bound xor adc sbb addl pop cmp mov lods ss xor test dec pop ret mov arpl mov decb jns out ja int lret or and push call push stos into mov add add lock (bad) jl (bad) mov cwtl mov cmp repz call call out cwtl ja (bad) jmp push sbb push xor les mov push rcr stos addr16 outsl insb jae insl pop mov (bad) popf add pop fimul loopne cwtl jo push lahf add add bound (bad) iret hlt inc in push push daa nop movsb je inc int push mov fs insb stc cmp dec add bound imul andl nop cmc dec mov push lods subb push mov inc inc xlat pop shrb push outsl sbb mov test js adc jge jbe dec cmp xchg in test cli add lret cmpsb sahf test push xchg dec jmp push cmp ret ljmp pusha shufps push adc lds and pop sub cmp mov sbb adc add enter jb clc in lea fstps mov out (bad) (bad) in jb jne mov xchg sbb inc js popf dec xor push sub inc icebp ljmp adc mov (bad) or fisttpl jge adc or lahf (bad) stc xlat (bad) aam adc lahf inc div arpl jg jge jae dec popf sar jp ffreep cmp inc cli scas inc and notl out pop vmread jecxz data16 push add jmp cmc cmpsb mov cld repnz add setp sbb or stos iret cmp sbb jle add jecxz cld pop aaa cld rcrl mov and xor jbe push movsl js xor ret add cmp pop mov or fwait push jmp jno test jle jmp sbb xchg dec xchg aam jge mov fmuls lret bound and mov sbb mov test or arpl ss loopne cmp add add inc push cmpl mov repnz sub in (bad) xchg push pop pop xchg fwait add push mov js xchg lret imul cltd loop inc shrw pop mov stos fimul dec jbe lcall jae xchg mov pop and mov loopne push xchg sub add xlat mov adc fdivp sbb (bad) test in sbb testb xor lcall xchg mov dec movb add xchg mov dec aas mov lods pop sahf mov scas nop sub idivb jl bound xchg jne outsb movsl stos adc stc add movsl cmpsl fwait movsb (bad) call inc inc xchg or imul push dec js mov insl out push xchg pushf adc mov lods orl jbe cmc jns pop and das dec int dec scas fsub dec (bad) icebp or sub aaa imul cmp dec cmp fstps mov and pop xchg jns roll cmp fnstsw into or xchg iret sub xchg pop inc nop pushf cmp dec ja mov (bad) ljmp cmp repz push scas pop mov adc js mov inc dec popw fsubs pop sbb in pop (bad) pop test xchg cmp sbb mov and adc and cmp rcll dec add out adc mov lock fcmovbe imul pop daa hlt shlb add add add add jno lret add adc icebp inc xchg in dec mov jmp cwtl lcall jl out fiaddl (bad) and insl push mov imul pop icebp pop push pop std dec sbb outsl pop dec (bad) rorl sbb sbb inc std xor push jne popa jbe repnz adc inc xor add lret cmp push (bad) rorb in pushf sbb int3 push sub in jns add (bad) fmull out mov les int3 (bad) lods out cmpsb ret call cs mov pop popl sub insb cwtl stos shr mov loope fwait nop mov enter mov and mov add push frstor push push fisubl jns fmul test in fisttpll testb xor xor and add xor std mov lahf cmpsb fnstsw mov sub sub fstps in or push nop mov mov pop fsubs dec push xor mov dec ficompl sub mov adc add jp dec rcll test scas out adc test cs xchg pop lea daa hlt mov xchg insb push nop lret add xchg pushl dec mov mov cwtl lcall adc out fiaddl loop and jmp imul pop pcmpgtw (bad) pop pop pop push pop xor imul pop dec add movsl or cmp mov xchg xlat fstl pop cmc push xor sahf outsl adc or stos mov leave push outsl pop (bad) aaa fstpt sbb popf shrl or dec shr pushf sbb add and mov (bad) fcoml and (bad) out push jmp sub mov mul lods out cmpsb ret jne fadd push add sub inc mov stos rolb mov loope imul enter mov add add and mov out scas push jne ljmp lcall repz es decb inc negl jge xchg and jne mov mov or mov bswap inc xlat daa test cmpsl cmpsb xrelease mov (bad) dec jbe mov ss (bad) adc stc out ljmp inc out adc (bad) gs cmp ljmp mov nop in inc adc xchg pop lods add mov sahf lret packuswb lcall negb dec sub jg nop pushl xchg push or inc gs xchg aad dec fistpl cltd mov test adc enter xor je and ret outsb aaa xchg xor or fildl cmp dec fnstsw jne cmpsb xor sbb pop xor imulb inc mov adc dec push add add faddl (bad) pop int cli sarb jne jb push push and mov xchg mov mov adc mov fimull adc imul cmc xor fmull out xchg loope and inc mov fmuls adc push cmp sbb das dec fdivrp pop xchg jns push mov sub cltd and insl xor xchg sbb shll xor test jmp mov dec push push inc mov das jge cmp dec pop push cmp and leave pusha jbe es inc fstps sbb pop mov ficom pusha aas popa cmp mov inc xor and pusha dec mov scas dec daa push sub cltd lcall sbb jo dec loopne sbb pushf push dec imul push orl cld cmp push dec pop and mov add pop sti mov mov out cmp inc int pop mov add push xor mov sub pop and and add dec adc add jle lock push mov xor mov lea adc xlat enter imulb addl and (bad) outsl pop outsb add shr jp movsl xor xor sahf (bad) lea aad cld mov xorb fsubs aaa fs and xor (bad) jae inc icebp rorl sarb add das push jne mov lahf mov pop push (bad) std imul lcall inc push clc sbb adc cmpsb (bad) lods sbbl lock inc push (bad) pop js sarl add jmp sbb sbb fmulp mov scas mov shr lea aam mov pop push shl add jp in xor sub or add outsb xchg adc (bad) or lods fisubrl cmp mov cmpsb adc shll loop jg pop jg cmc pop movsb sub in sbb pop in cltd aam and pop (bad) sti mov data16 xor lcall pop push sti daa into push xlat jae cli pop cmp jno mov adc sbb in es xor push stc loopne sbb cli loop sbb and shrl and test and and sahf push adc add add pushf pusha push lock jge xchg lock push ja xor mov rolb and push test enter add cmpsl sar ficom clc aam lds dec cltd (bad) xor jbe mov imul fs xchg mov adc clc frstor imul repnz mov jno adc scas loope fdivr in enter std popf es dec nop aam and sub adc add add lret je inc inc rcrl mov ljmp add repnz and and sub test movsb in (bad) and jle mov inc sbb add pop fist in lds mov and rorb mov push sbb mov xchg stos lcall fdivr lock imul scas daa test cmpsl xor add in mov fildll js jne mov mov add or stos push sbb ds cmpsb in or pop mov cltd pop cmp cmpsl repnz mov lock xchg notl push cli sbb mov sbb orl adc sub lods bound and mov fildll insb int daa je nopl mov dec fsts arpl rcll mov (bad) fsubrl or clc sub sbbb sub sub sbb pop scas sbb in fxch outsb test ss bnd sti pop or push dec add xchg pop mov sbb add shrl loopne addr16 add clc (bad) xlat xchg mov data16 add ret adc paddsw xchg inc frstor adc and dec in mov add sbb fildl lock jg loopne lea hlt scas pop cmp xor fisttpl pop add (bad) lods fsubs dec xchg clc fsubrl cwtl inc push push stc xchg add in cmp sbb insb inc cmpsb sub movsl rolb fistpll cmp pop or rep push cmpsb xlat repnz cmpsb dec insb fwait lahf push mov lcall imul and cmp (bad) mov mov dec lcall clc setnp out stos xor add fidiv mov mov adc repnz icebp and add dec ja out rclb push addr16 ja inc sbb mov ljmp sbb aaa jg iret sub in jecxz and shrl stc lret mov cmpsb adc mov and scas js jge inc cld push repz cmp sub mov and hlt (bad) push in xchg lret and subl adc (bad) (bad) push sbb jmp out (bad) mov push cmp ja and es loop xlat xchg sbb mov outsb lcall dec loop sbb sub bound (bad) aam or test add test mov mov pop add mov push es pop ret lea cmp jbe lock loope push int push gs nop add push mov cmp lods inc (bad) jbe dec pushf call cli out sbb xchg lret dec scas adc cmp loop lahf cmp cltd xor popf push fisttpll jg pushf fisttpl insl mov mov add (bad) adc mov repz fwait in jbe pop ret sarb add (bad) sub mov sbb movsb xlat cmpsl ret fbld and jge or adc add or cld adcl cmp dec jmp and push es mov pusha negb (bad) and jge or mov sub incl dec (bad) and mov xchg dec in cmpsb fidiv fisub popa inc test pusha push push and adc call mov and fistpl sub inc mov add add outsb cs push mov fcompl repz insb ljmp pop xor push enter test mov xchg test mov iret clc mov push mov in add xor xchg movsl (bad) stos popf (bad) sarb lock movsl insb fldl outsb test pop push iret jp push pop pop push repz sub (bad) insl mov jle jge imul pop daa pop pop popa inc xlat jnp lcall push mov (bad) or add add mov xor mov xchg fs mov mov sbb notb pop dec add or lds out lods insb pop xchg call xchg aad arpl bound int3 adcl dec popa test lods adc lret je dec xlat adc in popf jg in sub push cmp lods iret jne in daa movsl mov int popa inc sbb xchg sub adc inc aam cmc inc inc add add lock mov mov jb sub sub repnz lret rorb in push lock push lahf std (bad) adc mov pop in (bad) call dec fldt sti stc xchg addr16 scas adc pop or push lock add das (bad) fldcw jle sub fstps push sub sbb mov and or icebp enter mov or sti das pop stos add loope,pt adc mov adc (bad) js clc cmp jmp add outsl pop or addr16 (bad) ror fstl mov outsl inc fnstenv xchg xor sub es lods inc xchg mov fs aam (bad) (bad) ficompl ss xlat push movsb mov hlt push arpl in shll pop fsubs data16 or popf rcrl mov in pushf insb cmp test xchg cmpsb mov popa and outsb and sub or insb push mov faddl push mov fdiv lcall ret add data16 (bad) cmp aaa es and loope or push xchg leave pop cwtl outsl fsubs mov and out xor add inc cmp loope or cs data16 push sub sbb push sub js inc xchg sub adc or push push xor ja lahf fiadd pop in outsb andl daa pushf ljmp test add (bad) xchg mov cli mov sbb add add add sbb jmp add cmp hlt and dec outsb inc arpl cmp jae pop pop mov add pop nop aaa xchg cmp arpl jns test ja mov sbb mov loope cs bound std lods push push adc adc mov stos mov in repnz jge lock ret je (bad) out add cmp imul add call xor fs hlt arpl scas int push divl adc fwait loope loope outsb jl pop stc dec pushf jge add cmp add rcll pop arpl arpl lock les push gs lahf cmp xchg xchg sbb mov (bad) outsb dec out mov inc in push addr16 std jae push adc cmp xor out adc add inc push aaa pop inc xor mov jbe pmulhw imul clc mov icebp or addr16 xchg xchg lods in add mov orl rolb int cmpsb cmp jns leave pop cmp push mov or cmp mov stc stos cmp ss jo ljmp sub (bad) scas (bad) pop int in (bad) in (bad) cmp popf mov scas fisub and imul pop test fsubl insb sub rcrl lret scas sub mov loopne aam jne pushf jle test and loopne xchg pop cmp push test push dec mov add stos ja mov xchg (bad) and jl xor inc sbb mov (bad) pop (bad) scas jp or je jne inc xlat mov add and fldenv out iret jl (bad) and jmp ffreep xor add push (bad) lock js mov xor loopne mov imul dec or sbb dec push cmc fmulp stos jo xor xchg int push jle add dec adc pop mov xor in (bad) mov and add loop jecxz mov jp sbb adc int3 cld jmp in dec and xchg out fsubrl fwait pusha stc xor sub adc jge (bad) push cmp daa lret lea sub lods fstp data16 or ja js xchg mov imul mov arpl inc add enter in insb incl outsl aas arpl mov inc inc sbb adc mov adc dec scas dec loopne add jns mov sub ja into inc shlb mov push fldl test mov mov test xchg outsl mov inc fmuls outsb rcl dec add xor sub scas pushf out lcall adc inc cltd xor jecxz clc roll adc jno sub lds int add mov xor addr16 sbb jb int adc enter jne,pt scas inc fadd ja inc adc inc mov idivb jae and mov mov jge mov or lahf imul sub add jle fs aas pop out mov ja jae sub jno or push mov loopne jo or je mov xchg mov (bad) loop out ret mov push out adc add xchg adc jno mov and nop in jle ds insb daa jae and lods sbb jmp out imul cmp (bad) jno jo out aaa cs lods sbb sub inc loopne mov jbe xlat push pop jmp fistp dec cmpsl cwtl je mov sub dec and xchg add pop xchg mov scas add sar xor mov xchg xlat (bad) (bad) mov repnz add negl xor sub pop js mov push iret sahf fs add add mov jae jge jbe icebp mov pushf out xchg and stos dec cmpsl andl push dec pop mov das in (bad) xor lds int and sub xchg not sub push aam mov fsub popf inc xor sahf mov jne cmpsb dec or (bad) adc jne loope cmp popl out fcmovnb (bad) fmull fnstsw ficoml xchg dec cld pop call rclb fnstcw pop out insb mov repnz adc bound scas fs push xchg mov (bad) jl push std sub std (bad) and rolb dec dec (bad) xor push (bad) loopne cmp flds dec dec (bad) test das std adc add cli leave leave shr mov xchg sub xchg not push push pushf adc aaa cs lods sbb add add in pop jnp cmpsb (bad) es xchg push cli or in pop add push clc pusha ja jae fwait es repz imul inc ss mov aad sub es jle pop incb and sbb enter sub aam sbb sbb aas and loope xor push xchg leave pop mov fdivs mov sti add or or je cltd pusha jp xor add or repnz (bad) xchg imul add cld fwait sub pop xchg adc lds cmc aad mov xor mov test arpl daa and add imulb aad leave int3 inc pusha lret adc jbe cmp cs cli mov and testl es or jl sub cmp dec inc adc out jae test fcoml sahf cld sub pop pop bnd and push pop cmpb mov jp push mov ret lahf pop mov fdivs add inc and lea xchg sub jo xchg ror fldcw inc and jl xchg arpl mov int3 lret stc rcrl sbb int3 xlat add jno in jnp das mov pop into dec stos jmp stos sbb in mov mov jo sub lcall xchg inc les or sub dec and test test ljmp push pushf and das ss mov popf add cs jmp jle enter cmp aam sbb push aaa aas ds arpl jns inc adc cmp push cmp aad mov mov add push fidivl cltd js or inc jg jae aaa lcall xchg push fstpl pop xor int3 xchg xor mov sbb inc shlb insb and push dec mov xor mov adc fstl mov fisub or cmp xchg pop jge aaa movsl testl insl jbe push mov xchg push cmp mov push xchg mov out dec mov sbb imull ss scas sub xchg pop call and fs pusha (bad) negl pop les or add fadds frstor sbb mov xor and or mov or mov add adc lret int je cli (bad) call mov imul add jg mov xor sub fstps push (bad) or scas js lahf mov mov out jb cltd mov inc dec xlat add outsb pop mov es mov dec xchg push cmp mov gs push dec jo nop add in mov inc cmp addr16 jg pop push data16 fcom cmp pop mov mov jle mov test jmp movsb adc fadds in arpl mov call lds add stos ss ds or mov jbe sub mov and out push out mov iret mov sbb std adc cmp fsubl insb jbe hlt push mov rclb mov in mov dec data16 pop loopne xchg es push mov mov inc bound jo nop cmp stos sub or inc cmp addr16 int xchg fnsave adc sbb sub adc add mov push lcall nop push cmp bound xor in cmpb pop stc fsubr jbe paddb jae adc push ds (bad) stos ja mov xchg xor or cmp fwait pusha (bad) or in out mov leave sub xchg not ds push fcoms mov and call icebp mov pop push stos mov pop in mov imul call push xchg push shrl mov jge mov ljmp cmp rorb xor inc xchg lds push cmp dec pop test ret ja (bad) repz dec dec into icebp stos mov out negl jb loope adc cmp adc add rclb mov xchg and leave xchg push (bad) mov pop push mov sub jb fs jno (bad) push repnz dec jb test das in (bad) adc cmp icebp sub je ficompl fdivl (bad) jb adc aaa es lea mov pop or jnp mov sti or push mov inc cmpsl out js mov jle pop mov jge cmp clc sub mov fildl sbb sub lret jae mov adc cmp (bad) cmp pop mov mov xchg aas out push mov ljmp sti add or aas dec xor cltd pusha dec xor push incl mov inc mov sub inc mov das in add add mov lds int jge mov jmp cmp dec lods fdivl fsubl xor xchg (bad) jecxz mov dec fdivrs das orl lods jns rorb int3 mov insb aam cmpsl (bad) je mov sub jno dec (bad) ss (bad) xor mov push jp jle pop repnz push divl in repnz xchg push (bad) sub sub push inc or or loope and outsl xchg leave pop test das mov sbb xor and int mov repnz insl cmp mov jp cmpsb mov mov dec dec cwtl test shlb outsl or and inc xlat add dec push jmp test in mov cmp cvttps2pi imul pushf jl cmpsb pop lahf scas fldenv jbe inc mov int3 inc outsb jb jge mov pusha imul mov inc lods push sub outsl inc mov jb jg stos mov xor add add adc negl xor sub pop js xchg pop fldenv push iret mov add mov mov push into or push ret out dec pushf out xchg xor stos jg mov test xor movsb push and cld xchg (bad) xor scas xlat add dec push fbld imul xor std ret cmpsl push xor lret mov mulb mov dec or jge inc in cli push sbb jno jae sub add add fistpl ja out aad xchg add jl (bad) pop push lods mov or adc push addr16 loope lret test pusha mov pop push pop adc ja dec xchg dec in push nop push cmp outsb fdivs mov sbb out xor sbb push ret cld or jp mov pusha fisub vphaddbd in iret ja cmp into sub movsl adc imul outsb push dec push (bad) pop sarl xor aaa insl (bad) aaa cs js jb arpl cmpsb dec or dec in sub test dec rclb sar adc call xchg cmpsl pop push and mov xchg mov sbb mov mov fimull adc mov subl mov aas loopne test pusha aaa mov sbb inc and xor cmp call decl xchg in sub xlat test add push add add adc sbb add xchg xor mov sub and xchg leave mov push cmpsb je jge cwtl jg ficompl sbb lret pop sahf std addb pop sbb sub push fcoms jmp inc in insl mov ss stc test push ret mov cmpsb aas jnp and mov jg inc lea adc jle nop dec add push fnstsw pop out push adc negl xor sub add rcrl add add mov inc mov in arpl in stc xor inc push and data16 mov icebp outsb add pusha lret out mov outsl push sbb sub jge sub xchg not xor daa in mov cmp add and sbb (bad) or jnp jbe iret out xor xor mov inc xor xchg mov jp (bad) xchg sbb add add mov mov pop scas inc out lret fidiv adc and mov xchg dec adc mov call (bad) negb notb rcrl (bad) aam dec aas loop out mov or adc addl into adc xor test test dec mov (bad) insl xor test cmpsl int3 pusha in out iret lds ret jo ja push icebp xor sub das jo mov mov pop pushf das aad add mov inc inc xlat dec pusha or add cwtl sahf dec mov pop jne outsl in js fdivl out inc jmp sub movsl sub int3 out lods out test (bad) sbb ret mov add add (bad) in jle loopne pusha fwait add mov lea inc push mov jp ret push data16 ds (bad) stos mov sbb in pop subl pop out and out adc mov add mov cld mov test ljmp dec adc scas std or xchg (bad) sub adc fs cmpsb (bad) dec outsb xchg je or in pop add pop mov mov insl mov xchg push lock adc ficom sub cmp jns push mov jle test mov iret rcrb aad fimull dec pop imul pop sub (bad) add jno mov int3 xor jb sbb adc int3 cs cmovp add add lods loope add and sub inc mov and pop das std add add and out shrb dec push (bad) pop xchg neg dec imul aad rorb (bad) adc call sbb jge cmpsb (bad) push outsb xchg inc cli or in pop add pop loopne cwtl sahf mov mov xchg push and pop loop hlt outsb xlat pop xchg or xchg push rcrl lds pop pop mov std add add sub aaa and fiadd mov pop js mov mov cmp dec xor inc in popf stos cmpsb mov inc (bad) test out ficompl mov mov add fnstsw dec mov add subl fstpl test or ss sub cli loope mov shll adc repnz xor daa pop sub adc divb pop add bound and in jg or ss cmp lret mov add popa js (bad) in mov rcll adcb stc mov mov push or jae fidivl pop cltd (bad) lcall push pusha stos test cmp sbb (bad) push ret xchg jl aaa dec daa jne or mov mov jecxz push adc data16 xor fdivrl and and and scas inc cmc sbb fwait sub (bad) mov aam xor xchg jmp mov xlat fstl add (bad) mov clc mov outsb (bad) mov iret divb (bad) mov fsubs and dec push outsb ror and daa (bad) lock js fdivrl fs mov test sub out dec pop push sub cmpsb mov lea rcrl cmp jnp rorl xchg loope sub outsl jns outsb lahf enter push mov pop and lcall push add sbb add cmpsl and sbb xor add sar jg pop push sub cli adc inc es inc inc lahf pop and add mov inc js sbb cmp outsl inc mov iret pop stc cltd push push int3 push fmul lea popf jle inc scas scas inc and mov inc mov (bad) mov mov xchg addr16 lret ret inc out ret and jg push clc jo ss repz loopne xor mov sti das cmp jbe int3 xchg mov lret dec mov pop and (bad) ljmp or popf rcrl mov rcll ds cld lock xchg xlat lea in mov test cmpxchg (bad) mov test sub mov pop int cs sbb sbb outsl jg imul arpl jge lea dec cmpsl fwait je mov sub jae dec cwtl ss into xor nop sub lods pushf sub or add inc sub je aas pop out mov outsl push adc scas daa pop repnz inc aas push and pop daa mov fbld push imul cmp fistp movsb decl inc int data16 xorl add dec xchg inc bound xchg aam jmp sahf insb aad or out sbb pop or or jl inc mulb mov fldl2t mov in add pop inc adc add pop cli mov cs (bad) mov lret js test or jecxz dec inc cmp pop sub insl adc (bad) and jae mov xrelease insb fisub daa dec (bad) fwait inc cmp pop aaa ret push dec jb inc or aas loope add int popa mov cmp test mov rcl int3 cmp fldl outsl mov or mov movl add add sbb push push sub add mov lret or popa adc mov lock mov pop mov jge imul inc add adc popa xchg loopne add add jae jle call call movsl das popf leave lret es iret fidivl in aad push jg scas mov adc out gs scas inc sbb jns test jle dec lret icebp lret jge lods adc sbb (bad) std adc test add mov aaa (bad) cmc (bad) and sub xor inc xor loopne jle pop sbb int3 pusha pop rorl mov (bad) or adc dec insb loope lret iret and movsb lods out popa dec test ficoml xor int3 leave mov lret pop inc fistpll jb inc inc xor jl sbb pop mov adc loope fisubr sbbb notl push adc jnp inc in mov cwtl test jg pop cmp add or in xor push movsb ss faddp xor xor jne jno icebp mov and test adc mov mov mov add push clc sbb in mov or ret test aaa xchg leave lods arpl clc mov je mov daa xor xchg repz xchg (bad) adc xor rorb mov mov add fisttp jle pop push (bad) pop xor int3 (bad) cmp loop xchg add cmpsb adc movsl shlb xlat inc das dec pushf mov inc or ret aad psubusw (bad) mov mov enter lods push push in loope or or dec mov mov mov jns scas mov scas dec jmp repnz sti (bad) (bad) in sbb cltd push lret pop jmp cmp cmp pop stos push mov dec loopne clc notb xor dec test or fistl mov repnz xchg add sbb and inc (bad) test adc pop push (bad) mul adc in popa enter or fs lret pop out in and dec push mov repz das push shll or mov xor push in (bad) adc icebp inc add (bad) icebp cld scas not mov lods jae inc mov aam outsl rclb fisubrl insb test adc add add jecxz imul xchg cli mov cwtl xchg sbb mov hlt into insl jne xchg mov outsb in mov mov or and inc pop enter cmp das dec push out out xor js sbb ja xchg lret push (bad) fimul scas ss cmp (bad) out mov pusha cli mov lods addr16 jl into rcrl gs cmp push fsubrl pop mov sbb std jns sub in or mov data16 cld add adc add lcall jl je push push pushf dec cwtl cwtl movsl inc vcvtpd2dqy xchg cmovnp (bad) gs insb cmp out sbb jmp sar jno sbb (bad) int and adc aad push push outsl pop or jo push test push fcomps ljmp mov jl fsubrl cmp sbbb lods cmpsb lods dec mov adc add add leave lock mov fs insb andl add loop ss lahf mov popa xchg mov sub or jg call xchg sub push cltd pop sub xchg (bad) sub sbb lock adc aas jne push pop int3 ja add pop les (bad) xor push mov inc and push iret xor mov pop cmpsl dec iret mul cs push sub sahf xchg push faddp popf jg add add aam ds jo in pushf sbb cmp iret cmpsb ljmp jo outsb cmp jmp stos mov or out dec pop xchg adc mov mov cwtl fs (bad) out xor jmp imul jecxz or mov ret sub mov fnstenv in pop popa jae and fcmovbe bound cltd stos add jmp (bad) and inc sbb xchg fnstsw pusha out dec mov adc dec lods and aas push mov cld fsubr inc fstl cmpsl sahf add lahf push mov and inc imul stc daa pushf roll jae or call in pushf lea pslld mov out jmp out jno sub in lock jns pop mov xor int out imul rclb adc mov les (bad) push mov adc mov pop jmp call aam xchg stos or in add test lret xor gs pushf jnp or rorl push pand stos (bad) test ja dec test sub pop pushf pop (bad) lret inc jno mull aas sub and in (bad) mov mov mov data16 insl stos gs adc jmp or jp aad cld mov adc fsubl and test test fisubrl adc je xor cmp add add add add jl push cld ds xor xor (bad) dec repnz jbe in ds movsb add sbb jbe mov mov andl outsl pop pop ret cwtl lds xchg xchg push cmp leave dec es std or repnz inc bnd pop push inc js flds adc cmpsb and js xchg mov mov out stos inc ret mov daa pushf (bad) cwtl pop lods sbb and cmpsl out jp sbb adc js sarl add (bad) xchg jle sub push mov fdivl int3 lcall cwtl cmp imul mov pop dec sbb cmpb imull lahf popa dec xchg push mov ja in aaa or inc mov pop out fisubrl daa mov iret jne in xchg add dec lds push dec xchg inc pusha in xor cmp lea sbb pop shrl test sub (bad) in decb daa or or ja cli ljmp add add jl js add push fcomps inc pop dec push and popf roll pop jne xchg idivl and mov lock scas mov shl pop jmp sub sahf cmp mov insb add cmp push rcll cmp fsub adc (bad) cmp jg mov cli lds aam je mov xor lret test push xchg sub jno int3 cltd and insb mov mov inc fstl aam mov mov (bad) cmp pop mov mov mov xchg fisubl in cli push movsl fstl sub sahf jle scas nop popa add cltd xorl mov cmpsb and bound jo call bound inc or mov and jecxz arpl pop sbb in inc out shl cmpsb dec cmp xlat and jnp cwtl jae jle (bad) sbb add mov pusha mov je sub push xlat sahf nop call loope xlat mov add fdivrl je out sbb int cltd iret sub cmpsl and outsl dec jo dec (bad) adc mov dec cmp pop insb mov cli lret fisttpl xor inc mov popa jbe xchg leave outsl sub imulb aad mov sti icebp mov das add loope pushf sbb pop mov outsb je jl jmp test imul jecxz jns pop sub pop test mov (bad) add add push ljmp xlat aas fcoml mov jg test sbb push lahf enter mov int3 imul xchg jg lahf fcoms dec add sbb iret bound jnp mov xor push fstl inc mov mov or dec sub mov mov in ds js inc je sahf mov and jae loopne das or jae pushf (bad) clc bound into xor pop push jo mov flds add add or sbb sbb and mov inc cld xchg loop jns mov mov cmpsl dec shl push data16 ret xchg dec (bad) jecxz popf add lods add je mov mov dec mov popa jge movsb inc cwtl lcall (bad) cmp int jp aas rcl jle add dec xor push movsb fs pop fsubl cli mov or shll jg and add jg xor fstl clc aas inc xor sbb gs sbb daa iret push or mov stos rorb loopne int inc mov push call lahf inc dec jmp sub jp lret outsl cmp lock or sbb xchg pop jno shl ret js leave ds jbe jle mov stos test aas je dec pop stc push mov sub jne push mov cltd lcall ljmp mov jecxz add fldl xchg sub xchg ds dec mov xor out push movsbl mov ss mov lahf popa (bad) and jge mov into and xor push scas (bad) cmp xor jmp dec iret pop mov stc iret call fdivrs jb inc and mov aaa mov scas js mov orb icebp pop push mov fcompl mov mov push or stos jo and jl mov xchg loopne das xchg or sbb add jp scas ss mov dec and gs imul dec jle popl cld int3 add in les into jnp addr16 inc mov jp pushf inc mov cmp dec sub push out mov dec sub push addr16 leave and imul or mov aas jno sahf jg lea xchg jnp ret adc inc xchg inc push scas decl mov inc (bad) mov or mov pusha in addl mov call inc (bad) out js and lcall pop cwtl xchg pop jmp mov addl push ret xchg js pop (bad) es and mov sub or shr fistpl outsb inc add cmp xchg inc or add inc jecxz or int xor push inc fmulp pop jne clc mov jmp jg lea mov xor je push scas add mov mov movsb jae add dec adc cld inc imul out mov xor js sbb sar inc out mov (bad) fdivrl sub jmp mov arpl rcr and leave or cmpsb add scas (bad) out fisubr inc pop mov inc stos test cmp loope mov fs je ja cmp ljmp or in movsb mov stos dec mov add and add adc sbb insb repnz xor sti pop mov add add mov pop (bad) jbe jb and sub mov ret je fs pushf aas cmc lahf call pop dec hlt or add and sub jge cld inc imul stc jge fldl sub sbb mov (bad) js (bad) mov mov sub mov test sbb mov pushl cmpsb out xorb pop inc pop mov inc stos test xchg sub std cmp mov lahf enter bound pop lea mov out add add movsb (bad) mov or das fist or test xchg lock das rcrb xchg test cmp mov add jge add mov (bad) xchg xlat fstl push sahf inc adc bound testb outsb pushf push xor push dec outsb pop push cwtl ret out adc sbb sar inc out scas scas (bad) fsubrl xor and mov out aad lods imul mov cwtl push aas dec cld and aaa sbb stos sub mov jno dec imul mov leave adc inc fistl test pop xlat mov mov or mov sub cli outsb push (bad) jp or mov sbb lds xchg pop int lea xor sub insb mov mov mov jmp mov or mov jecxz add xchg loopne stc jne xchg push pop icebp mov add add or je and in ljmp and loopne or insb and push and faddp popf or negl mov lea bnd pushf cmp inc cmp and inc xor push ret pop shrl and add jae pop xchg sbb push cltd and jmp mov mov adc jns xor mov mov mov dec out pop push or je repnz (bad) push cmpsl popa mov xchg adc into jae jg leave test cltd inc fadd popf and add cmp out in add arpl js jb push and test mov inc inc out adc dec (bad) sub jae xlat and cs faddl jmp inc cld pop mov je scas lahf enter mov jbe addr16 imul movsb decl and fs inc (bad) jmp adc insl xor bts in and test inc clc mov mov lret sbb jg fcmove icebp mov lods push pusha in or dec jo dec or jl ss daa pop pop push loope fisttp bound sbb xorl out hlt test sahf btcl xchg movsb mov aad pop inc inc sbb inc es sbb int push cmpsb jno cwtl shll rcrl mov mov stos test push pop or lods dec aaa mov pop nop pop lea mov xchg sub insl add loop sbb data16 insb push iret test fcomps dec xor out out jns test cmp mov cli jge xchg mov (bad) and (bad) bnd pop mov mov popa jbe mov sbb and lea or call fcomp (bad) adc movsl scas lahf shl aas push (bad) pop or sahf sbb sidtl out jne sbb adc repz (bad) les mov add mov dec cmp fimull xchg fwait leave stc fldl cmp sar xchg loope fdivs mov lods es mov pop bswap rcrl mov sub js push adc and cli data16 insb out test test dec xor out cwtl jns test cmp mov cli add mov (bad) and (bad) bnd pop (bad) sub imul pushf mov cmp into imul or ss add jecxz and (bad) jmp call and cld lock lock outsb mov push adc adc jbe mov push mov mov push or mov imul mov das xchg add push cmp lds enter mov jbe jbe ds push sbb and xchg je cltd mov jmp adc mov ret or shlb sbb mov add add add or mov push lret jle push cmpsl cmpsb repz dec mov mov sarl stc daa pushf inc xchg xor lds sbb jnp xor in add in (bad) mov lahf vmread and push out add pop xchg lret xchg mov out sbb (bad) mov (bad) shll rcrb fstps fadd push and test add cld pop jae mov mov fmuls insb pop lea loope cmp push adc add add data16 cmpsl outsb test adc xor enter out and cmpsb test jle sub mov xlat and or jg sbb lret jbe bound mov stos fisttpl inc add cli in jecxz or jp call out mov icebp sbb sub movsl or xchg (bad) fwait add mov mov sbb imul push cmpsb sub fcom loop add rorl add add stos mov sub push mov xchg mov pop and leave mov xchg sub inc push xlat mov xor mov fmul test js dec testb xor mov and jge add mov lods test repnz dec cmp sub pop sahf mov sub sub notb ret int3 icebp jl bound scas dec pusha cmp add lret scas adc (bad) xchg mov add add or pushf push adc push mov mov inc (bad) sbb mov push stc aam fnstcw mov and das repnz sbb dec (bad) nop mov pusha lock test push xor mov push pop (bad) shl fistpl add (bad) push fstp mov cmp xchg mov and nop bound mov das lcall repnz xor lods sub pop xchg add out mov mov dec es fsubs sti pop mov in jb push int xchg jnp sbb (bad) mov sahf vmread jbe xchg jmp xchg lret mov dec out (bad) mov int3 enter push in pop mov push pop stos test pop repz mov add dec icebp add lea loope push sub movsb sub lcall or adc mov xor add and jmp (bad) cli mov dec xchg (bad) and push sbb xchg sbb lret adc arpl mov xor shlb ja loopne loop jecxz or bound call out mov lock sub dec or xchg and xchg (bad) fwait add adc lret imul cmpsb fcompl loop in fs (bad) pop mov stos add sub cmp dec push add jb jnp lret add add in xor arpl or (bad) adc clc fcompl sti test stos cmpsb sub data16 mov aam lods add mov pop dec inc lcall push (bad) in mov imul xor mov out add loopne inc fmulp std and daa ljmp daa pop test or mov mov mov lods push shrb ja lods pop push fimul add ss movsb sub pop mov data16 pop mov adc mov cmp add inc pop iret sbbb lahf xchg xor cmpsl cmp and addr16 cltd imul fmulp test inc leave push jns fiaddl xchg (bad) hlt dec clc or bnd out in pushl or fstl das jb cmc (bad) xchg js xchg dec pop std pop or add push pop iret popa lret adc scas add add inc push xchg outsb and inc (bad) inc out cmpsl shrb fcompl arpl outsb cmp scas mov (bad) xchg mov loop mov pop jle std mov push xor popf (bad) test push mov dec daa pop sub xchg mov (bad) cmp xchg mov icebp loope mov mov ror test sub sbb pusha test jge mov mov sbb int push inc sahf in mov (bad) dec adc xor fsub fildll lahf and sbb push pushf sbb dec clc fstpt jecxz mov in sub insb mov stos ret xchg push mov cmp xchg mov int3 daa adc or fsts adc sbb cwtl pop mov ja std inc inc es aaa or xor cmp js mov mov or (bad) sti adc out sub test mov testb mov adc or push sbbl movsb xchg xor shlb inc pop xchg into shrl ficom mov xor and jmp pop in cmp es inc mov jnp sarl adc (bad) mov outsl push out out adc out inc xor mov add fistl sub mov dec (bad) scas push sbb dec push mov bound xchg addb lods imull xchg mov add cs push cmp inc or add xchg mov bound cmp stc or das mov add add jb cmp adc js dec divl pop (bad) rcrb dec (bad) xor stos popa xchg pop pop lods sbb xchg pushf adc inc jno xchg and sbb test xor mov cmpsb adc fcompl bound call xchg addb jmp js sub jl insl loopne inc pop mov int push mov int fisttpll fadds rcr aad push or rclb aaa faddl or rorb push mov scas mov pop inc lods je addr16 (bad) call push inc ficoml (bad) aad and push adc and mul xchg xchg push stc loopne lea pop xchg sbb add stos movsl mov cmp sub mov lahf push fldl2e xor stos add add (bad) or xor adc aad sti lahf mov adc xor and mov (bad) lock in add (bad) rclb inc jns pop idivb inc push fisubrl fmull xchg mov sarl (bad) jno test dec in fimul mov lahf outsb adc popa push inc fsts fcomps jbe cmpsb dec push xchg in insl or cltd xchg sub mov iret xor pop fnstsw add add nop cmp idivl mov sahf jle cmpsl pop loop (bad) repz push (bad) icebp xchg shlb scas pop out js sarb cmp and loope and or xchg add call scas in push test xor sub inc cld dec cmp int3 dec pop xlat mov dec push (bad) (bad) jo lret int3 ss call and mov cmp or fbld fimull jne add adc xchg jge pusha dec call jmp mov push mov nop loopne cld lret cmp out or xchg sbb sub push jno adc dec jecxz cld mov push pop mov mov pushf aas xor leave stos pop dec and lahf daa mov cmp pop aad xor and push repz fbld in inc pop pop jne nop sub call push out cmpsb outsl jl jmp stos add mov inc dec mov inc dec (bad) push ror push add add push in xchg jae rcrb push mov insb push push ret add dec outsl ret xor leave scas es mov sbb into mov pop popf cwtl xchg xchg mov cltd and mov test jo stos leave inc pop in push (bad) into push pop inc loop push cld scas ja vaddpd ja loope pop pushf cmc mov inc mov sahf add cmc and jl jae jle inc addr16 push push xor add in pushf xchg sbb sbb xchg fstl in (bad) jo cltd push mov stc and xchg adc in push (bad) push fimull sbb int push push popl xchg fimul mov loope out es mov (bad) adc frndint mov jne cs cmpsb daa test push push xchg (bad) out inc and mov into xchg pop test and shll sti dec inc lret lahf sub orb call std clc add add jae fcoml sub sub pop cmpsl pop xor mulb fcomps or inc fistpll ret inc or pop imul mov test pop ja (bad) out or sub scas cmp xor sub mov out xchg lods pop push add imul add push and das addb loopne (bad) dec xchg pushf push lock jno jne int xor cmp fstps out popf (bad) shrl ficompl xor mov jecxz add fldl add push xchg (bad) jno lock inc adc mov nop in mov jmp ja xchg adc xor repnz jg jge jb scas pop add xor adc inc (bad) push mov fsubs addb sti sbb stos sub jno dec mov add fcoml xchg scas xchg dec rcll sbb inc xor aas out adc cs pop lock andl nop lret add add ss out xchg in dec mov add aad and push mov pusha sub mov mov xor jne add dec clc (bad) aas in cmp push fchs mov fnstenv adc shll jmp (bad) add cmp pusha and or sahf sti stc dec addr16 call loopne inc push movsb lds jmp (bad) fidiv dec sub cmp enter cmc xor sub jmp rcll add add mov imul int loopne fildll push adc arpl in roll mov sahf jge mov call jge mov add jp pusha xchg int3 dec and mov insl add pop mov mov fnstsw mov les out and data16 lock (bad) dec dec xchg cld mov mov gs imul cmc jnp lret popf cmp add push dec iret mov or lcall add add sti shll xchg inc (bad) scas ljmp pushf and mov or jge fcmovnb scas sti cmp push mov pushf cmp mov dec dec mov lock mov cld shlb je jbe (bad) lcall or in inc popa stos test nop popf cmp xor inc pop popa aaa mov mov rcrl int3 dec ds and stc pop add fcmovbe bound jbe adc cmp test cltd (bad) and xchg dec fistpl pop mov cmp add add ljmp fcoml jg inc xlat test (bad) mov pop les lahf insl ss outsb pushf adc test in test pop inc stos out out nop pop push out jp js fcompl cmpsb sbb sub sub mov lods lcall jno test push xor and mov and mov rcr stos lods lahf mov add negl inc ficoml fcomps test add ljmp jmp push mov push pop fnstsw lds and xchg addb ss cmc lods pop jnp dec rcrl push xor orl jecxz test sub and mov or mov sbb popf push pushf shl mull lahf out sbb (bad) stos mov outsl add sti popa aad pushf xchg (bad) sarl or add xor ret push add mov (bad) aas fmull mov mov push mov in mov ret dec rolb pop in jcxz stos subl cmp add loop mov add adc and mov and dec addr16 movsb mov jb pop stc push dec je bsr sub fsub popa jne daa inc push lock out pusha test ror int3 mov push aam loope out stos push insb clc add popf pop push lcall add add adc or mov (bad) and jo or dec aad mov mov add cs movsl or loope inc js mov push sub push push dec ds adc dec (bad) push ret xchg js idivl xorb cmc addr16 sub mov add in jb fdivl add jnp clc sbb adc xchg and inc push inc pop push jmp sti mov adc mov mov sbb cmp jns add sub dec inc add test xlat adc loopne out sbb lods inc lcall outsb sbb sahf jnp lock add scas ret lahf and or mov mov enter adc or push cmp dec test xor std jae jmp xchg add and outsb sub inc mov push out fisubrl xchg add sbb mov mov in inc data16 mov rorb xchg mov (bad) cli das gs popf cld mov fucomi lea daa pop in inc xlat mov imul sahf mov pop or test jecxz fisttp (bad) mov or stc push outsb repnz (bad) mov or call pop jno dec add dec cli mov push sub inc out ss pop pop fst jmp mov das xchg (bad) xchg pop andb mov mov pusha add subl adc or xor movsb adcl insb jno out cltd and xor imul cmp in sub mov nop (bad) xor lock adc divl outsb jb repnz fildll jge mov sbb pop dec iret mov aas imul push fmul sar or add stc scas inc and or push lock mov scas fiadd (bad) sub mov add push or inc mov push fcmovb jae sub jnp stc cltd insb add add aaa cld mov daa jl pop or and jecxz aas movsl dec ljmp cmc sub jne adc scas add test outsl fisub ret cwtl aad and cmc inc mov push mov or (bad) and enter aad xor lret iret and (bad) in push cli ljmp sbb jecxz or add cmp dec jne in or (bad) lds pop arpl in je push jns jns mov dec insb inc cld fidiv mov cmpsl scas out xchg dec (bad) adc daa rcl ret adc negl ds das xchg or adc fidiv jmp jmp mov cmp mov add ss lahf xchg xchg or sub imul xchg rep aad jnp ffreep sbb xchg xchg pop loopne enter pushf xchg mov add add xchg (bad) clc (bad) sub lahf icebp std jmp fs (bad) mov scas pop loop stc aam outsb mov push pushf sub ss fadd and loop and imul sub mov je sbb outsl sbb adc xchg pop adc adc flds add cmp and lds cmp cli sub aas sbb movsl sarb movsb cmp dec mov pop cmp out out out sub push (bad) pop adc add mov push jns sarl push add jmp (bad) repz sbb xor out jl or jns inc jbe out and jg cmp and and push rcr push shlb and (bad) adc notb movsb xchg cmc adc and mov repnz xchg (bad) repz mov pusha pop in mov (bad) mov test xchg fidivr fldcw mov mov push cmp inc mov add pop scas jo cs add dec xchg inc cld (bad) clc mov test rol lock and dec sbb lods xor aam sub gs xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jge jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov rcrb xchg std pop outsb mov inc cwtl out ss push mov jb cmpl (bad) adc cwtl mov cld ljmp lret es fsubrl test mov inc inc xchg xchg and (bad) scas bound fimull mov cmpsl add ja lret nop mov sub pop or stc dec pushf out adc dec cmp cs je fs adc out xor sahf popa mov and jns push adc (bad) sbb clc sbb sbb add loop ret shrl fistpl in pop sub push add push movsb pop in cmp mov inc adc movsl cmp jnp mov dec xchg and adc enter mov mov pop dec xor (bad) iret sub add add fnstsw test mov inc inc xchg int3 mov add sub xchg hlt or lret lods push cmpsl inc jbe ja nop rcr mov or stc inc pushf in adc push cmp dec add (bad) js mov adc test insb shufps adc xchg repz imul lock das xchg sbb sub cmp cmc pop stos stos jmp jns mov mov pop jle add dec push and xor fstps (bad) cmp inc and mov fmuls adc jb fdiv cs cmpsb imul inc je add pop mov popf popf add jnp orb mov sbb mov xor lret cmp inc nop shl or in jne stc cs pop push fisub aaa aas mov cltd or jl lods js int3 ss daa pushf xlat adc mov jle insl incb cltd adc out xor (bad) popa xchg xchg and imul (bad) sub int adc arpl add add out pop in stos (bad) adc (bad) fwait (bad) ds rcrb fdivl rclb dec or xchg fidivrl mov pusha pusha mov fadd je mov push gs cmp pop pop dec push js in push aas (bad) mov and in sbb mov sbb add fstl rcr ror push bound inc inc xchg mov fildl decl mov cmpsl add cmc ja icebp mov addl gs enter clc jl or add imul push adc xchg add push inc repz jae mov sub int cmp jp and lds stos call inc sub lret fsubrl add dec or nop pop fdivrs icebp inc push add cmc and fiaddl push ret cld into add xchg mov sub push inc push enter in jmp adc mov ret popf pop jge sbb in lret sbb jo rol out dec sub (bad) xlat test add add add loopne jg lcall push aad dec int into push sbb test mov or inc call push outsb or (bad) decb scas jle mov or sbb outsl adc mov stc and insb es mov imull std out lods push pop mov mov cmp pop out dec mov (bad) lods call out push gs cmp inc dec (bad) (bad) pop cltd mov add add inc lods cld xlat and jnp in sbb ret mov (bad) leave push cmp sub into aad cli jo inc mov std xchg or lods bound shrb inc fildl push cmpsl adc nop add adc push orl pop mov jmp inc enter ja,pn popa xchg jns out adc xchg xor ret popa addl repz imul sbb ficomp nopl sub stos in rorl loopne xchg lods jno pop sbb insl rolb push ja sub popf pop sarb inc push pusha aaa mov fdivr je mov cmp jecxz xlat jo jb xor in mov and sub dec inc ret mov cmpsb int fldt jo inc and dec sub (bad) test or decl imulb dec lods cmpsl or ja nop scas fldt mov or stc push pushf cmpsl adc jl es pusha (bad) jbe lcall rsm popa lahf xchg and add sbb adc (bad) sub cld sbb popa out daa cmp pop loope (bad) shll out test xchg pop adc add and dec sbb nop pop sarl mov mov fsub je mov pcmpgtw xlat js gs inc and ljmp and mov jge pop ret xchg sub fisubl pusha inc inc xchg in mov add repnz ja mov cmpsl add ja nop (bad) (bad) mov inc or das or stc push pushf jecxz outsb mov pop add (bad) gs adc out xor popa lock mov imul (bad) jl xchg dec rcrb and jg sub stos int3 rorl out stos mov pop daa fsubl add dec or cmp mov fsubr je mov or jecxz xlat jo jb adc jmp cld leave and xchg in jae inc ret lods sub ljmp add add outsl and inc xor dec sub (bad) into repnz sbb sub adc fsts inc or das or stc dec pushf hlt adc dec cmp jb,pn push (bad) push int adc out xor mov xchg and imul (bad) cmp in sbb sbb cmp pop in stos icebp rcll lock leave mov fdivl add dec xor mov inc and fmuls inc cli mov adc jecxz xlat jb and and out mov and jnp in sub add dec insb mov cmpsb (bad) pop inc add cmp test call or fldt push lods xor rclb or stc jnp rcll mov jb imul and mov outsb jno and imul xor in sbb sbb dec cmp pop cld stos add add rorl fwait mov pop aaa fdivl add push mov fnstcw icebp inc push pusha js xor out je mov sub jecxz xlat addr16 popa push xor loope mov cld lea push jnp in jnp xor (bad) xchg sub int lret outsl sub and mov add sub mov xor sub and std nop sahf fldt mov or stc daa pushf ficom pop mov imul add iret adc out xor mov and imul (bad) xchg sbb sbb and (bad) pop jmp sub fwait lods ds jno pop sbb ja xor dec add mov fstpt pushf inc cmp mov fcomp je mov add jecxz xlat dec pop inc push jne lret aas lock and in inc dec (bad) arpl js or aas jo inc push xchg (bad) mov add sub xchg mov add sbb cmpsl or nop mov or in int3 pop stc dec pushf notl jno jbe or jle jno jb popf adc in ja xchg xchg and imul (bad) cmp mov (bad) cmp fdivp mov dec loopne orb int sub cmp add pop cmpsl and or roll je rolb std cli adc xlat inc cmp fs cld out data16 mov inc pop xchg mov outsb sbb (bad) (bad) int and jbe adc (bad) (bad) add repnz add lods sbb or ja nop test cmp (bad) int3 push outsb pushf in adc inc cmp jne,pn arpl arpl iret adc out xor mov xchg and imul (bad) sub rcrl cmp dec out daa cmp pop jecxz jmp jns (bad) fwait mov pop pop fsubl or dec push xchg cmp mov fcom je mov push gs jecxz xlat das pop das push aas and cltd mov data16 mov in outsb dec inc ret mov cmpsb in shrb jo inc sub add sub xchg mov add dec lods xor adc nop xchg fstpt mov or stc push pushf ficom dec mov jle (bad) incb mov xor (bad) popa mov jge jmp and imul push xchg (bad) jl stos sub ss popf sub into mov inc inc imul mov xchg adc nopl xor js insl fldcw and or adc xor fisttpll add movsl cmp push enter idiv cli data16 in xor in sbb ret mov xor adc fcmovnbe xlat push and (bad) fucomip jno pop scas out cmpsl or test adc sub xor sbb adcl cmp pop jnp das or add add stc push pushf ficom jo dec cmp (bad) fs adc out xor mov xchg into push push repz (bad) cmp xchg sbb sbb dec cmp push sub fwait scas mov pop adc ja inc push and sbb nop pop fnstsw test pusha aaa mov fsub je mov or jecxz xlat popa pop js fs lock and in sub ret mov fnstsw test lret jo inc add sub int3 mov add repnz ja mov cmpsl cmp nop nop (bad) mov or stc popa pushf jmp outsb mov je jle dec int adc out xor (bad) popa pushf xchg and imul (bad) pop xchg dec fmull sbb sbb xor rcrb hlt roll fwait (bad) mov pop sbb (bad) rolb push das dec xor lods pop (bad) cmp mov fsubr je mov adc es xlat add xor push dec and jecxz xchg data16 test push jnp in dec dec push ret (bad) sub ret mov pop inc xor sub mov loope sbb push xor sub push cmpsl popa jbe ja nop cltd fistl mov or stc dec pushf out adc jl xor jle addr16 pop int adc setg xchg repz imul (bad) cmp lcall cmp arpl clc fwait add add pop and inc rcrb push cmp push (bad) pop sarl addl inc mov fsub je mov add jecxz xlat jl outsb push jns movsb push aas ljmp and xchg jno insl ret mov cmpsb (bad) pop inc adc sub mov loope sbb push xor sub lods push cmpsl inc jbe ja nop mov or stc push pushf loopne jne push cmp cs add (bad) gs adc add andl push and imul lock das xchg sbb sbb sub int3 pop cld stos cli rorl fwait lods ds fsubrl or dec add cltd pop (bad) cmp mov fmuls inc aad sub or and jo insb push jne lret push aas lds xchg push jnp in jbe push ret loope js pop cmpsb shll inc xor arpl xchg (bad) call or out pop lods add add cmpsl popa jbe ja nop cltd fistl mov or stc inc pushf in adc imul inc (bad) gs adc mov outsl btl mov push inc repz imul (bad) das xchg dec (bad) dec rcrl cmp or dec cmp rcll enter (bad) jno pop adc pusha rolb push or push lahf pop sarl mov and mov fsub je mov adc xlat jl insb push jne xlat push aas mov cld int3 and mov add add insb mov in mov pusha inc and and mov loop sbb add out pusha lods cmp ja nop mov or stc push pushf in adc dec cmp jle,pn jne cmp xchg or (bad) popa aad push and imul (bad) sbb dec lahf sbb sbb sub rcrl not dec sub fwait scas mov pop or push cmp push lahf pop fistpll mov add sub (bad) je mov add jecxz xlat jo jae dec and cltd mov data16 cld mov bound in imul sub fsubs arpl xchg iret mov add repnz push xor sub add ficoml dec or stc dec pushf in jne dec cmp cs int adc in add out aad push and imul (bad) and mov fisttpl add sbb sbb daa cmp pop shrb negb fcomps fdivrl push daa dec sbb xchg pop sarb cwtl inc ds push mov fsubs loopne gs xlat xor push dec and cld mov and nop in jle pop ret mov cmpsb shll ja and int3 mov add sub xchg mov xor sub or ja nop ljmp das lock push push in adc add jae dec cmp jae,pn outsl (bad) jnp mov inc out xor mov xchg and imul (bad) das xchg sbb sbb push stos not dec sub fwait mov pop sbb insl rolb push xor push rcrb fnstsw lahf inc cmp mov fdivr je mov or jecxz xlat jge imul aas leave mov and xchg outsb dec pop ret mov cmpsb clc mov pusha inc bound add and mov (bad) repnz xchg test sbb dec lods xor adc ja nop cltd fisttpl xor shrl lock push popa pushf in adc push cmp cs add (bad) jle adcl out xor mov xchg xchg repz imul mov dec scas dec lcall cmp pop std stos jmp inc sub fwait test mov pop and push rcrb push cmp push xchg pop fdivrs xchg inc and mov fdivr je mov adc jp and push jno add add push aas clc mov and nop in je push ret lods sub int (bad) outsl adc inc cs (bad) mov add sub xchg mov xor sub cmpsl push jbe ja nop (bad) fstpt add mov mov sbb adc cmp pop add (bad) and fist dec out xor paddq xchg rclb repz and (bad) sbb jecxz aaa sbb cmp enter enter sti fwait scas mov pop add fsubl rolb push popf pop sarb inc push pusha aaa mov fdivr je mov or jecxz xlat cmp push inc and rorl shlb xor in imul sub xchg imul pop pop inc mov (bad) bnd xchg pop daa jmp inc ret es popa jbe ja fcmovnu ljmp imull leave jbe out dec push push cs dec aaa iret dec mov pop jne out mov dec adc js mov dec scas dec out push bound pop stos sbb cmp fabs mov clc movswl (bad) cmp daa pop sbb jo pop icebp inc add (bad) sub pop and enter jecxz xlat pop jno jl int sub cld mov data16 cld lea pop jnp in sbb ret mov (bad) fisttpll cmpsb les pusha inc jno lea mov (bad) bnd mov pop mov xor sub xor ja scas nop ljmp dec mov push nop dec std out jp fsubs cmp push test dec adc out xor dec lahf xor jns mov pop xchg jge inc outsl andl std test movsl push xchg adc add lods popa mov sbb jbe pop ret adc and jb cli int or xchg sub jno shrl in mov and in dec dec push ret mov add push cmpsb (bad) mov push inc or add sub xchg xchg shrb lods cmp ja nop cmpsl (bad) dec or stc inc pushf mov cmp jle,pn pusha (bad) js xchg adc in jns shlb xchg into push push repz cmpsb (bad) add (bad) sbb cmp pop loopne jmp push sub fwait movsl mov pop cmp insl rcrb push xor push mov fstpt addl aaa mov fsubr je add sbb or jecxz xlat jo add and (bad) mov jae mov pop dec insl ret mov cmpsb les pop inc setno mov add sub xchg cli or iret sub cmpsl add xchg nop sbb mov or das or stc push mov dec add decb mov xor mov xchg mov addr16 imul (bad) cmp dec (bad) sbb sbb add cli pop shrl fwait mov mov sti pop and push rolb push and sbb sahf pop fstpt mov pusha addr16 fdivr je mov pop gs xlat inc pop dec push push and fmuls mov jg mov pusha dec pop ret mov cmpsb out mov inc sub sbb repnz and lods pop cmpsl or nop sbb lcall pushf (bad) adc add add add (bad) ds adc mov jae mov xchg and imul loope outsl xchg dec mov sbb sub cmp cmc pop shrb fwait mov mov sti pop and inc rolb push ss or xchg pop xchg cmp mov fmuls inc iret mov sub inc pop inc push dec and jecxz xchg data16 test push jnp in dec dec push ret stos sub (bad) mov add mov add test (bad) repnz add xor push xor sub xor repnz cmpsb fstpt mov or stc inc pushf repnz push cmp imul (bad) int adc out xor mov and imul out insl xchg dec (bad) dec lea arpl dec out jle test stos cld rcrl lods fwait in mov fdivl inc push outsl dec pop push into pop cmpl add or mov imul push and fmuls test lcall in push dec push ret stos sub test ljmp xchg (bad) mov add sub xchg mov out sub adc repnz test or stc pusha pushf lock push cmp cs add (bad) je mov daa out xor andl push jb pop imul (bad) sub les dec in sbb arpl cmp in pop out ljmp ds icebp pop cmp push sarb push add push dec cmp mov inc and mov fdiv je mov add jecxz xlat pop pop push push and cld mov and fucomp sub xor (bad) pushf sub cld mov push inc pop xchg pushl mov xchg test xor sub cmpsl adc ja nop xchg fldt mov or pop pushf (bad) adc pop add incb scas adc out xor mov xchg and add push imul (bad) xor jecxz add imul loope not dec sub fwait mov loopne mov (bad) xor dec pop push xchg fnstsw popf inc ds push mov fcomp je mov push gs jecxz xlat pop add and cltd mov and mov pop dec arpl dec insb xchg sub shlb imul add sub xchg mov pop mov xor sub lods push cmpsl xor ja nop mov add jno movsb das (bad) int3 push push in adc dec cmp ja,pn decb mov xor popa xchg xchg and or mov dec mov out dec cmp rorl fwait lods xchg pop push fsubrl rorb push das dec or cmp inc cs aaa mov fmuls inc sti mov add push ds cmc mov data16 stos dec pop or scas push mov mov add add or jo aaa sub (bad) mul outsl sub fildl mov aad inc leave sub and ficoml push or stc daa pushf shll push imul stos js xchg popf jb (bad) popa mov push push repz imul (bad) jb mov sbb pop lcall fbstp jg adc add and sub sahf insl aad mov push pusha aaa mov fdivr je mov add add jecxz xlat adc and std mov mov and in sbb jecxz dec stc pop sub sub rol or insb loopne test cld faddl adc and sub cmpsl adc ja nop lcall das hlt int3 pop stc push pushf out inc mov jne jb gs adc out xor mov xchg and jae cmpsl (bad) xor ficompl or outsl out daa cmp pop cli stos add ljmp ds rcrl fdivl sbb dec sbb cltd pop call pusha pusha mov fsubr je mov xor jecxz xlat popa pop push push jne (bad) push aas rorb mov inc jnp in jg inc ret lea fbld ja push xchg loop std add sub mov add sbb sub xor popa jbe ja nop cltd fistl mov or stc dec pushf out adc inc cmp imul js mov or mov setne xchg and imul (bad) sub int cmp jnp cmp int3 pop ljmp fwait out test pop jle add popa pop pop dec or int icebp inc or fmuls and push xchg sbb inc inc (bad) sbb dec cltd mov and test jbe pop ret cmpsb sub test mov inc or add sub xchg xchg pop xor sub xor inc jbe ja nop xchg cmp out inc stc or cmp cs int adc jg and push and sbb (bad) sbb dec rcrl sbb or (bad) pop jecxz call fwait lods ds jno pop fdivl or dec or cmp mov fcom je mov add dec jecxz xlat jl outsb push ds lock and xor in sbb ret xchg sub fsubs and mov add sub xchg scas or aam add ja nop test cmp repz pop stc push pushf notb jne dec cmp add (bad) jb out adc pushf xor popa lock (bad) push inc repz imul (bad) cmp lahf sbb sbb and cwtl pop scas stos mov push sub sahf pop pop fdivl dec push jne dec push (bad) pop add pusha inc mov fmul je mov cmp jecxz xlat jbe inc push jbe ret push aas fmuls xchg inc jnp in outsb dec inc ret mov cmpsb fsubl and xchg pushl mov push push xchg mov xor sub xor fistl push or pop pushf (bad) adc inc add (bad) js xchg adc out xor mov xchg and imul call add mov fisttpl sbb sub sbb lock (bad) fstps negl faddl dec push push dec cs xchg pop int3 cmp sub mov or jecxz xlat jns inc push je shrb cld mov and jnp in jg push ret mov cmpsb (bad) mov add mov add sub xchg lods or mov cmpsl adc ja nop cwtl fstpt mov or add add add add pushfw loope jg dec cmp jne,pn jb pop int adc out xor mov xchg xchg and imul pop xchg sbb sbb sub stos std rcll xchg fwait leave ds rcrl fdivl push cmp push mov mov icebp inc add mov fdivr je mov or jecxz xlat popa pop add and jmp cld lcall dec inc ret iret sub (bad) mov jb add add xchg (bad) mov add sub xchg test adc outsl lods xor repnz mov or stc push pushf jmp jns push cmp dec add (bad) jb popf adc jae and imul (bad) cmp out sbb pop out jnp cli pop jmp ljmp loopne,pt mov sarb xchg pop (bad) cmp mov fsub je mov addr16 and add inc pop push push xor clc mov and sub push mov cmpsb test ljmp xchg xorl (bad) sti repnz and imull jbe add fstl adc mov stc inc pushf (bad) adc dec add (bad) aaa int adc out xor out mov push adc sbb adc (bad) xchg sbb pop out pop cmp pop mov sub fwait lods ds jno pop xor rolb push xor push cld pop in mov mov fcomp je mov addr16 pop push push xor clc mov and sub push mov cmpsb test imull jo inc adc cmp repnz xchg xchg or fildll and ja nop mov or stc inc pushf lock pop add (bad) aaa int adc out xor ja andl jge mov imul (bad) or int jae inc out sub les stos cwtl shll mov fcoml pop push xor push cld pop cld cmp mov fcomp je mov outsb jecxz xlat inc pop push push xor jmp mov cld fwait and jnp in dec dec jge (bad) xchg clc mov insb inc cs xorl (bad) push pop xchg xchg or fildll and push cmpsl sub ja nop mov or stc je out outsb mov imul adc out xor movzbl xchg and imul (bad) or in decl sbb sbb dec cmp pop ret stos (bad) jne mov cltd ds jno pop or add cmp sbb push iret pop xchg cmp mov fdivr je mov push gs xlat pop pop dec push push and leave mov and mov push push ret iret sub out in outsl sbb xchg ret add repnz mov xor sub add ja nop mov and ror push stc push pushf icebp adc dec cmp jg,pn xor pop int adc out xor mov rolb push repz imul (bad) xchg sbb pop out pop cmp pop mov sub fwait mov pop adc jbe or dec and mov cmc cmp add add and stc je mov adc xlat pop pop dec push inc and leave mov and mov push insb xchg clc mov fs xor and test xchg mov ljmp jbe ja nop popf (bad) inc or stc daa pushf rcll jae inc cmp cs add (bad) gs adc out xor test xchg and imul (bad) or add sbb jnp cmp mov stos int3 sarl xlat fwait mov pop sbb push sbb dec or cmp mov fcomp je mov or jecxz xlat xor and clc mov and (bad) dec inc ret mov cmpsb fsubl pop inc adc sub mov loope sbb cmp sub cmp ja nop ljmp das in int3 push stc push pushf cmc adc jge push cmp cs add (bad) jle mov adc mov jb mov xchg and imul (bad) aas xchg sbb and js cmc pop shrl fwait cmpsb ds jno pop and push rcrb push cmp push xchg pop fdivrs xchg inc and mov fdivr je mov or jecxz xlat inc pop outsl push jbe shrb aas clc mov and mov jns inc ret mov cmpsb fsubl arpl xchg lret add add sub xchg hlt or cmc sub and ja nop sbb test in int3 push stc dec pushf out adc push cmp cs add (bad) arpl adcl out xor out aad push and imul sub iret sbb pop out add stos mov fwait cli ds jno pop pop fdivl sub dec sbb rcrb fnstsw lahf inc cmp mov fdivr je mov adc jecxz xlat jae je dec and add push aas fisttp mov ja mov dec dec push ret std sub leave mov and xchg pushl scas (bad) call or mov cmpsl cmp nop sahf fildl mov or stc jnp loopne jne push cmp jb,pn push adc xorb (bad) popa fiaddl dec repz imul call jb cmpsb dec fmull sbb sbb dec cmp pop out stos jmp push sub fwait mov pop fdivl add dec add nop pop sarl icebp inc add mov fdivr je mov add jecxz xlat jl je and cs cld mov and xchg in jb jb arpl je pop cmpsb fsubl and xchg pushl mov xchg pushf or out push lods cmp adcb or das or stc daa pushf rcll jae inc cmp cs add (bad) gs adc out xor xchg xchg add add repz imul (bad) push xchg sbb sbb cmp fstps stos lret roll loopne mov pop sbb ja insb push push dec and popf pop (bad) cmp mov fdivr je mov add jecxz xlat pop pop popa push arpl ljmp and jnp in jnp inc ret mov fisubl jbe inc xchg out mov add repnz ja mov cmpsl adc ja add add nop cwtl fisttpl xor cmpsb das loop inc stc push pushf cmc adc push cmp sbb decb mov xor xchg popa lahf xchg and imul (bad) sub int sbb push cmp pop (bad) stos mov fwait scas ds jno pop pop fdivl or dec sub nop pop aad (bad) inc and mov fmul je mov and jecxz xlat push pop arpl and (bad) mov and jnp mov pop lods push add add adc inc mov adc aad in sub fildl xchg fsubrs inc lods and int sbb subl int3 push stc push pushf lods adc dec cmp jge outsl (bad) jo out adc xchg xor (bad) popa test inc repz imul (bad) sbb negl push sbb out cmp cmc pop lret stos stc rcll in fwait (bad) ds out pop and pusha rorb push cld pop sahf cmp inc ja aaa mov mov pop (bad) jb cld iret add dec (bad) add adc push lret push xor cli data16 int3 and mov ret scas sub fisubl pusha inc inc xchg mov lods (bad) loop or mov xor sub cmp lret (bad) mov or stc dec pushf icebp adc ds (bad) pop int adc out xor popa lock mov imul (bad) cmp dec mov out add daa cmp pop cli stos out roll fwait lods ds fdivl xor dec add mov sarl cwtl inc cmp inc mov fmul je mov das gs jecxz xlat popa pop jae adc (bad) mov push jnp in jg insl ret scas sub hlt mov jo and add repnz aas xor sub and ja nop cltd fistl mov or stc push jecxz jb inc cmp add add je dec int adc out xor (bad) popa pushf xchg and imul (bad) xor dec sti sbb sbb sub cmc pop mov sub jno pop dec fsubrl shrb push int3 pop cltd cmp inc pushaw jno jne cmpsl je mov and or das xlat and cmp and scas mov data16 shlb add in xor push ret iret sub (bad) insb inc cs (bad) mov add sub add xchg xchg (bad) sub sub ret (bad) dec or stc daa pushf cmpsl adc jl and jb push jb mov or mov insl ja and imul xor xchg sbb sbb and test rcll enter mov pop sbb pop rolb push popf pop call pusha push mov fsub je mov adc xlat addr16 jae ds cmc mov add cli data16 int3 and mov ret stos sub les pop inc xor sub mov in repnz adc sub sub scas nop ljmp das vcvtps2pd inc pushf icebp adc cmp cs add (bad) cmp out xor popa fiadd push repz adc (bad) sub dec fcompl cmp and sub enter cwtl shll ds jno pop sbb jbe sbb add xor push cld pop repnz mov fsubr je mov or jecxz xlat push pop je pusha and ljmp and sub dec insb mov cmpsb leave mov jb sub add fildl mov into sub xor repnz movsb fisttpl mov or das ror pop stc inc pushf notb imul add (bad) push int adc out xor mov and add js mov dec scas dec mov out cmp cmc pop enter inc sub fwait mov pop sbb imul sbb cltd pop (bad) cmp mov fdivr je mov aaa gs das xlat popa pop jo inc and cld mov and mov ret xchg sub clc mov jge push xchg (bad) mov add sub xchg mov xor sub aas cmpsl pop jbe ja nop cltd fistl mov jbe mov stc inc pushf notb push cs add (bad) gs adc jae and imul (bad) das xchg dec xlat dec rcrb aas sbb dec cmp arpl rcrb pop or jo or dec xor (bad) pop sarl addl push mov fdivr je mov or jecxz xlat xor push dec and leave mov and mov ret mov cmpsb in add add outsl jo,pt inc insb xchg (bad) fildl xchg ljmp jbe ja nop mov or stc imul dec js,pn pusha (bad) jo out adc xchg xor mov and push outsl repz imul (bad) cmp rcrb and push out push cmp pop (bad) stos hlt rorl fwait mov pop push fdivl insb push push dec dec push (bad) pop call pusha addr16 fadd je mov adc dec jecxz xlat jo jae ds cmc mov data16 int3 and mov ret pushf sub les arpl xchg (bad) mov add sub xchg hlt or shrl and ja nop cltd fistl mov or stc inc pushf jmp jnp jl add outsb add (bad) jnp pushf adc out xor mov and jp mov das xchg dec xlat dec rcrb aas sbb dec cmp (bad) shll icebp fwait movsl ds jno pop sbb inc sarb push pop dec xor (bad) pop fnstsw test pusha inc mov fdiv je mov gs xlat xor push dec and fisttp mov inc jnp in outsb dec inc ret mov cmpsb hlt mov imul (bad) mov add sub xchg test xor sub push cmpsl sub ja nop lods fstpt mov or das or stc inc pushf out adc data16 cs add (bad) push int add lcall jg and push and sbb (bad) jns mov mov sbb sbb es pop fisubr mov jno pop jle add dec push and xor fstps (bad) cmp inc cmp mov fsubr je mov adc inc jecxz xlat popa pop imul aas lds andl jne push ret mov cmpsb test outsl inc xor imul (bad) (bad) repnz xchg test add xor sub xor repnz cltd fldt mov or stc inc pushf icebp adc inc cmp imul gs adc jae and imul (bad) pop xchg and or dec cmp pop loope jmp push sub rcrl fdivl insb push push dec cmp xchg pop sarb test pusha push mov fsubr je mov or jecxz xlat push pop push push inc and lock and add test je push ret stos sub test pushf outsl jo,pt inc sub add sub xchg xchg cld sub add xlat nop mov aas mov or das ljmp adc inc add (bad) jb fwait adc out xor nop popa xchg xchg and imul (bad) cmp (bad) sbb cmp imul fwait mov pop pop fdivl or dec xor cwtl pop add add (bad) cmp mov fsubs std mov imul dec and ljmp and mov cmp ret fwait sub les dec inc cmp sbb mov mov sbb and ja nop cltd fistl mov or stc push pushf les jne dec cmp cs add (bad) fs adc out xor xchg popa xchg xchg and imul (bad) add sub (bad) sbb cmp imul fwait mov xchg jno pop cmp insl rolb push xor push lcall pusha pop mov fsubr je mov push gs xlat xor push dec and lret mov and test push insb subl sbb inc push xchg in mov add sub xchg mov fsubrs and ja nop cltd fistl mov or add push stc push pushf jecxz js or dec cs add (bad) jnp lcall setne xchg and jg mov add iret sbb cmp pop shrb fwait popf ds nop pop push fsubrl add dec push cmp mov fsub je mov add jecxz xlat addr16 gs xor leave mov lcallw jnp in push insb sahf sub int fildll jo inc cs xlat mov add sub xchg decl cmc sub cmp std nop (bad) fldt mov or popa pushf (bad) adc cmp arpl (bad) jb popf adc out xor (bad) popa test dec repz imul (bad) or dec mov out cmp stos icebp roll fistp clc pop pop fsubrl or dec cmp cltd pop (bad) cmp and out push mov imul add inc pop outsl push bound in mov and in sbb ret test cmpsb leave mov pop inc jnp (bad) mov add repnz cmp shrl jbe add ja nop (bad) fstpt mov or stc push pushf (bad) adc dec add (bad) jno fwait adc test jae andl and imul (bad) cmp dec ficomp sbb sbb fcompl stos int3 sarl fwait add lcall fsubrl add dec sbb cld pop jmp xchg inc aaa pusha push mov fmuls inc (bad) mov or adc and ljmp and mov jbe xor (bad) sbbl cmp rcl int and ja ss rol bound dec fildl mov xor sub sub ret (bad) mov or das lock push push jmp jg push cmp (bad) jno fwait adc out xor jae andl sbb test repz imul (bad) das xchg dec scas dec cld sbb (bad) out cs pop jmp sub fwait mov pop sub push and push popf pop (bad) cmp and in js or add jecxz xlat jo arpl and fisttp int3 and mov ret mov cmpsb (bad) mov das inc insb xchg lret add sub (bad) fstpl je dec or add scas nop ljmp inc icebp test stc daa pushf cmpsl adc jl xor jge jb addr16 adc out xor xchg popa cltd xchg and imul mov cmp mov out cmp cmc pop (bad) out mov pop pop faddl add dec sbb mov sarb inc and mov fdivr je mov adc xlat xor and decl xchg inc jnp in outsb dec add push ret iret sub int3 mov jo das xchg (bad) mov add sub (bad) jmp push xchg lods or shrl push lods xor sub xchg ja nop mov sub push or daa pushf cmpsl adc jl xor jbe addr16 gs adc (bad) popa mov pop repz imul (bad) pop xchg dec fmull sbb sbb sub iret pop call sub fwait cltd ds fdivl or dec inc push xchg pop fidivrl cwtl inc push pusha add mov fdivr je mov add jecxz xlat dec pop bound and hlt mov and lret in outsb dec dec ret iret sub (bad) jo xor push sub xchg mov xor sub and rclb or stc push pushf mov cmp jge jb addr16 adc xor (bad) popa xchg xchg and imul cli (bad) pop xchg add add sbb sbb out cmp stos lock loopne mov pop push fsubrl shrb dec dec push cld pop iret cmp inc push fmul je mov sbb jecxz xlat outsb pop inc push inc and in cli data16 xchg and mov pop dec jae jb iret sub fisubl insb inc cs (bad) mov add fildl xchg aam inc lods cmpsl pop jbe ja nop xchg fisttpl xor movsl das cli int3 pop stc inc pushf in adc add inc cmp bound (bad) jle adcl and xchg popa lods xchg and imul (bad) sub ljmp sbb dec cmp bound fcompl repnz cmp push (bad) xor dec or test jmp xchg inc es inc mov fsub je mov addr16 jecxz xlat gs dec push jle int adc clc mov and jnp in sbb ret test cmpsb leave mov pop inc add add add repnz mov xor sub cmp ja nop xchg es or stc push pushf (bad) adc inc add (bad) jnp fwait adc out xor mov and imul (bad) jb mov sbb sub cmp cmc pop fldcw rcrb sahf pop cmp push xor push mov call pusha inc mov fdivr je mov adc or or push adc add movsb push aas lret lods cld xchg inc jnp in jns pop ret iret sub (bad) mov jb and adc xchg (bad) in repnz mov xor sub and fcoml xor shrl lock push jo rcll inc mov dec add incb mov xor mov fiadd push adc (bad) das xchg sbb dec out sbb stc pop mov sub fwait leave lds pop add add add add fmull sbb and pop push xchg pop sarb inc cmp mov fdivr je mov pop gs add jnp imul aas ljmp and mov jnp inc ret mov cmpsb lock jne push xchg lock add repnz ja mov cmpsl pop jbe ja nop ljmp outsb (bad) icebp adc adc in or push dec push stos push andl cmp add call punpckhbw (bad) and test (bad) popf leave mov jns mov sti jb iret insl dec jl xor fmuls push dec pop and jg les mov cs (bad) adc mov mov cmp and scas pop (bad) lret or jmp in imul sub (bad) jge daa xchg mov and mov or fildll and ja add add mov or das or stc inc pushf loopne sbb or add mov fs xchg xchg xor (bad) popa in rcrl dec push xchg mov mov xlat mov jae xchg shll in sub test add lock push andl fistpll jb call arpl stos rolb or add aas pop inc ja les sbb ret scas jp add (bad) btr mov (bad) jno cmp jl mov inc imul in xchg lock mov cmp lret push mov nop ljmp (bad) shr ss daa pushf cmp loope xchg mov push sbb (bad) out cmpsl pop pop les jne add out aad push and imul lock das xchg dec scas dec mov out dec cmp fldt and lret test push enter xor outsl sbb cltd aas (bad) push nop sub add out push add push xor into inc pop pmaxsw jp jns jns int3 push jge cli mov rorl add aad sub inc add xchg ret and cs and fs test fist adc pop cmp aad push pushf sbb lcall cbtw adc push cmpsb lods cmp lret or push add mov lea jmp and cmp adc (bad) pop xchg dec scas dec mov out add add test shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov outsl les std test jg xor jp or cmp xor outsb mov mov and jnp fcompl (bad) jne sbb lds xor and and popf jl add in push (bad) in push scas fmull inc or stos (bad) cltd xchg aas xor (bad) fsts dec (bad) jnp stos add fsub cld sub jg push xor (bad) mov xor clc dec xchg inc xchg je cmp cmp adc jp roll pop push xchg push icebp dec adc mov mov push jae lret dec mov cmp inc push cmp push pop jne mov divb fsubs jnp xchg xor mov adc pop fucomip les mov fsubs push sbb lcall pop lods adc mov test add jp push fnsave mov popf das add lcall xor into and xchg xorl lods xor pop mov jp fildll pop (bad) int push addr16 lds xchg and sub test in dec insb orb cli movsl and inc fcmovnu xor data16 mov stc ret cmp add adc push arpl out pop imul lret xor or scas inc dec push add add inc xorb mov mov sub add outsb cli xchg dec push inc pop shlb mov jno adc cmpsl mov repnz adcl icebp fsub jno lret cmp pushf pushf mov pop add mov test push (bad) mov jle jge cltd clc ficompl repz movsb popa jle inc (bad) jae adc adc cmc mov popf (bad) and jbe in xchg or mov push adc add add (bad) mov jbe rcll xchg mov (bad) or mov push mov fisubrl orb subl xor jb out pop mov icebp lret or lock mov insl cmp (bad) insl fldcw mov jae pop cwtl cltd dec stc in cs int3 sahf cmp sbb idivb jb mov das jo push mov loope or cmp lods jo cmpsl dec sub into and movl (bad) xor jecxz es out in adc inc loope sbb jp ds (bad) stc and imul or inc xor jmp xor sbb rorl mov mov ljmp out add ret push jns lods popa gs mov mov fwait andb jecxz out push int3 arpl mov ja es das or mov enter jg cmpsl push add jmp and push dec je rep jp rcl mov mov in nop push pop jbe push jns fnsave fwait cmp or push adc fstpl cmp lret mov loope adc pop in xchg loop loopne das mov (bad) jmp mov jae call stc jg or mov fnop sti movsb popf out mov and inc cmc mov mov lock adc pop outsl mov aas imul add imul and mov push fcoms sbb jecxz aad adc clc stc mov dec out add cmp dec cmp lea lea jae bound cmp and (bad) jns jbe pop out lods or push and cmp adc pop pop xchg push scas dec mov dec cmp inc and xchg lret enter mov shrb dec and lock push out ss fmuls inc fldt data16 xlat adc and cltd mov data16 jmp arpl dec xlat dec push insb adc sub jo inc inc xchg stos mov orl add or mov cmpsl bound neg nop ljmp das orl sbb adc das xchg pop incb ja xor (bad) popa jns sbb xor dec add mov cmp sub jl imul push test stos mov sbb jno pop cmp and sbb mov (bad) inc add (bad) xor sbb outsb xchg cmpsl push aaa insb cmp imul clc cli mov and mov lods insb or test repnz ds or (bad) aad outsl dec sub (bad) into popf ss mov sbb dec and sbb incb pusha mov int3 es repz push pop sub jo nop je out adc addl pushf xchg outsl scas adc pop cmp mov scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull ja mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp add jnp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov (bad) cmc add push add add add add sub or inc fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or add ss daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc add inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc jnp xchg outsb xchg in pop ret shrb icebp pusha pop in mov rcrb mov fidivr (bad) jle mov or pop xchg ror lcall xchg je (bad) in fdivp fwait gs pop mov ja jne lods xor aam sub cmc mov stc inc add mov cli int or push dec insb jns mov (bad) hlt adc lcall xchg sub shl lahf (bad) leave sbb cmpsl or pop arpl sbb and scas push scas subb stc cmc ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll add add loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add add (bad) popa lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov add add popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb add ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha add aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec add mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc add sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov add dec sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and add movsb push aas cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov add jle add insb push push dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock add add jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja add mov or das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub add add fnstsw test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls cmp jb mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out add add test shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc add add add (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) repnz add fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov add add data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb add add push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and add add imul aad pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp add xor imulb or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test add add inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov add add es xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp add cwtl shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int add out adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull add mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp add jnp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push mov icebp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or ss daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc add inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat add adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll add leave loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov add push cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb add xor (bad) iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha add aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec add mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc add sbb and bound sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov add dec sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and movsb push aas cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov add jle add insb push push dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock add jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja add add add add mov or das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub add fnstsw test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls cmp jb mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out add test shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc add sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) repnz add jg fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov add cli data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb add push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and add add imul aad pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp xor imulb or stc daa pushf (bad) adc sbb (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub dec imul add mov push jb mov notb je and mov adc shl and imul sbb pop jl mov adc in sub mov dec pushf add fsts dec mov or iret or shll (bad) lds adc insb (bad) mov repnz push jbe mov and xchg mov pusha andl lret sub outsb mov push jne mov clc sbb pop jnp lret sub (bad) add negl cmp fwait mov popa (bad) mov inc push or dec outsb (bad) mov repnz push jne mov clc sbb pop jl mov xchg dec insl mov push je mov negl cmp pushf mov pusha andl pop inc bound sub push nop add jp iret lock push je mov add jmp lea push jb mov cmc push aaa pop jle rolb loope and cmpsb (bad) call mov jno xchg mov pop jle mov test dec imul jbe mov stc sbb pop jl mov bound es push or repnz jne mov clc sbb pop jg ret and data16 dec insl lea push je mov clc sbb pop jnp mov popa (bad) mov inc mov wrmsr push jno mov cmc adc mov pop andb xchg dec insl mov push jae mov (bad) sbb (bad) sub loopne ja mov pop jle shl and cmpsb (bad) call xlat dec mov faddl and test push jno mov hlt adc mov pop jle shl and add lods int wrmsr push jno mov cmc adc mov add (bad) mov inc push or dec outsl nop mov repz push jbe mov pop jle shl and test dec push scas (bad) lock push ja mov pop jge mov bound daa inc push or dec outsb (bad) mov icebp adc (bad) and andl imul mov repz push ja mov pop jle mov arpl dec push mov mov notl cmp fwait mov pusha andb xchg stos int3 in or inc fisttp mov ds jbe movsl or cmpsl dec fistp aad jbe shl and cmpsb (bad) call add xor fsqrt push ds andb insl mov push jae mov notb cmp lcall jg ret and xchg dec insb mov add add xor cwtl mov pop jle shl and test dec imul jo mov hlt adc push ja mov pop jle ret in sub mov dec jno mov hlt adc push ja or inc jl lock int inc xorb or fwait jecxz gs and sbb ret sti xor fcoml jle call push push mov add je or push fstl popf add mov insb lea push jae mov notb cmp lcall jg shl and add das dec jo mov repz pop jp mov pop jg shl and test dec imul mov repnz jne mov clc sbb pop jp mov arpl dec push stos int3 in push das dec jo mov repz push ja mov pop jl mov popa (bad) add dec push lods int push das push jno mov push jae sbb or jbe loop push (bad) les jp,pt pop inc jnp repnz mov push js mov xchg xor cltd in sahf mov add jae out push mov stc xor roll push inc cmpl (bad) adc ret (bad) cmp icebp sub pop xchg iret or mov jmp bound int3 or add add sub fcompl push nop int inc cmpl cmp mov out pop lcall inc jge divb stos out pop lcall inc jle divb insl test xlat adc inc cmpb bound enter xchg std cmp out sub ficomp push xchg rorl dec xchg (bad) cmp add xor call adc movb jp repnz push loop pop xchg rorl jl,pt add add add in mov int inc cmpl clc xor lods ljmp mov pop inc cmpb mov iret or inc cmpb pusha pushf xlat adc enter mov out popa popf fsts inc jle clc xor stos call sbb into or sar jbe in sub fstpl push xchg int inc jg divl outsb stos out pop lcall inc jl hlt add insl test (bad) adc (bad) imull fwait (bad) sbb rcll push xchg rorb dec mov add jg divl push ljmp push nop lret pop inc ja in push xchg leave (bad) cmp push mov stc xor insl movsl fmull inc cmpb adc mov and push jae,pt loope dec cmpl int3 or mov xor out pop lcall inc jl hlt das imul cmovp mov in daa bound lret cmpl es popf fcoms dec mov or divb insl test rorb cmp jmp adc mov add mov out pop lcall cmp mov rorb inc cmpl rorb outsl scas in sub out pop lcall jp,pt lock fistp push xchg int inc cmpb pop xchg iret or mov divl add in daa arpl lret jl repz movb js icebp sub mov lret pop inc jle hlt das imul or ret (bad) cmp and dec mov add jp icebp sub push xchg rorb inc cmpl and rorb mov or mov inc (bad) fidivr jns divb (bad) mov pop cltd aam pushf add xor repnz add add es mov pop mov mov ja jl (bad) cmp out insl iret inc mov outsl mov push cmpsl add call call push nop loopne lcall clc cmp adc cmp push jbe mov pop jle shl and test ljmp push out arpl add test scas pop (bad) (bad) adc lret leave or add or add jg repnz or add add rcll xchg lret std das je xchg and push pushf in (bad) lock loop lcall pusha xchg roll outsb mov push leave or xchg add outsb movb jae loopne push (bad) leave add jns incl out sub mov cmp in and ret sti aaa js incl (bad) or rclb push cltd ficompl mov out das outsl mov xor stc ds adc in jae in push mov stc aaa jno jmp or pop (bad) lret or mov add imul pop inc test push push xchg aam dec (bad) mov cmc inc mov mov pop andb mov or dec outsb (bad) mov icebp adc push je mov add and flds and xchg dec push lods int3 in push add mov clc sbb pop jp mov pop andb imul jo mov repz push ja mov pop jle mov test add out sub sub mov push jae mov negl cmp pushf mov pusha andb xchg dec insb lea push jae mov notb aaa pop jl mov popa (bad) mov inc xchg or dec insl mov push jae mov notb aaa pop jns mov pop jg shl daa dec push or dec outsl nop mov repnz jne mov xchg dec jo mov add or dec imul jno mov clc sbb pop add and xchg dec push lods int push das dec jo add pop jl mov fs je cmc outsb mov jmp inc popa (bad) mov inc push or dec outsb (bad) mov repnz sarb arpl add aas popa (bad) mov inc push push aas pusha andl lret in or mov hlt adc mov add mov inc push or dec outsl xchg mov negb cmp fwait mov pusha andl lret cmp mov arpl dec push lods int adc stc sbb pop jge shl and xchg dec insl mov push jbe mov stc sbb add inc mov push jno add pop jge mov arpl dec imul add lods into add adc mov pop jle shl daa dec imul dec mov xchg mov clc sbb pop jge mov test dec insl mov push jbe mov popa (bad) mov inc push or mov hlt adc mov pop jge mov arpl sub outsb mov push je mov negl cmp popf mov bound add or dec push jnp or mov es xchg leave add sub in pop xchg aad push cltd fcompl xchg into adc jnp mov test dec insb lea push jp mov popa (bad) mov sub outsb (bad) mov repnz stc sbb pop jge mov add stos lret in or and iret push inc jnp jmp or jle icebp sub movsb loop pop xchg rclb dec cmpl add add add ja jmp or ja add mov daa bound ficompl dec xchg pop dec xorl adc mov or mov lret outsb mov test movsb ficomp push mov mov mov ret pop mov mov mov (bad) hlt sub (bad) sti das arpl fwait rolb cmp movsb xlat or jno fistl inc jp loope dec jnp out push xchg and add (bad) imulb pop xchg (bad) clc sub lret push insl cmpsl fstl sbb es pop testb addr16 or jno loopne dec xorl gs rolb push dec xorl xchg (bad) arpl mov scas loop dec xorb and xchg (bad) cld xor aam aas jnp in dec jg ljmp pop xchg lret imul add add daa pop xchg (bad) cld xor aam cmp mov scas out dec test mov fidivl repz (bad) clc sub xor int3 add popf roll adc mov sub rorl cmp push (bad) int inc mov or cmp lock and fcoms ja push dec mov add divl outsl stos jecxz pop cwtl into add jae in bound stos add add jns cmc add xor (bad) push inc jle lock rorb jg hlt cmp mov mov pop jle shl and test ljmp (bad) lock push je mov clc sbb pop jge mov arpl xor sub in pop mov hlt xor in test dec outsl nop mov repz push jbe mov enter mov push jae mov notb cmp fwait mov adc add ss fs int inc cmpsl loopne dec test fistl dec test sub dec jo mov hlt push or mov notb aaa pop jns mov pusha andl (bad) negl cmp shrb cmpl in es imul jmp je mov stc sbb pop jl mov mov add xor xchg mov cmc push aaa pop js mov pop add shl and cmpsb (bad) out sub mov dec jo mov negl cmp lcall andl lret sub (bad) repz mov pop jg shl and mov dec outsl nop mov repz push jbe mov stc sbb pop jl mov popa (bad) mov inc push or dec outsl nop mov notb aaa pop jns mov pop jg shl and test add add out sub mov jno mov repz push jbe mov pusha andl aad pop cmp lcall jg shl and cmpsb (bad) call mov push jno mov insb pop rclb popa add lahf int3 in wrmsr push jb mov notl cmp mov cmc pop cmp pushf mov arpl dec imul jge mov bound daa dec imul lret in or dec outsl (bad) mov repnz push jne mov stc sbb pop jl mov xchg dec imul jno mov hlt adc mov pop jge mov arpl daa dec imul leave ljmp iret lock push jae pop jo adc notb cmp fwait mov pusha andb inc xchg sbb xchg mov repz push ja mov pop jle mov add add and test dec push stos int3 in push das dec jo adc popf (bad) or lods loope cmpl out andl into out adc push jbe mov xchg fstps push js repnz and loopne pusha mov imul imull xchg add xor xchg mov clc sbb pop jl mov push push cs jo mov hlt adc add pop jg shl and xchg dec outsb (bad) mov repz jp mov jo mov hlt adc mov pop jg shl and xchg dec insb lea push jae mov cli sbb add inc test dec imul push jne mov stc sbb adc xor mov popa xchg (bad) (bad) cmp stc xor dec mov inc fwait cli add add jl adc jl shlb fimull fsubrl pop mov pop inc add inc (bad) mov push imul jb mov negl cmp fwait mov arpl sub mov push je mov adc pop jns mov pop andb xchg or dec outsl nop mov hlt adc mov pop andb mov wrmsr push jb mov divb dec outsl nop mov repz add xor fsqrt sbb push loop lret jae adc (bad) push aas pusha andl (bad) repz stc sbb pop jl mov bound sub sar sbb add ljmp aam push aaa pop jns mov pop andb dec imul (bad) mov repnz ja mov pop jg (bad) in sub mov push jno mov hlt adc add je jns das mov jnp pop mov cli sbb add inc xchg jae mov negl cmp popf mov arpl dec insb lea push jne mov cli sbb (bad) in daa dec outsl nop mov repz mov sub rcll dec xchg imulb addr16 cmpb sbb ficomp lahf sbb xor xchg mov cld sbb ret and leave ljmp nop mov hlt adc mov pusha andl lret sub aad pop cmp pushf mov popa (bad) mov dec imul xchg mov pop jle shl and cmpsl enter dec jo mov repz mov pop jg shl and xchg dec insb lea push jae mov notb cmp mov xchg dec insl mov add iret lock push je mov negl cmp pushf mov popa (bad) mov inc push wrmsr push jb mov cmc push aaa pop shrl inc movl inc xchg dec insl mov push jne mov clc sub outsl (bad) mov repnz stc sbb pop jle mov test dec push lods iret lock push je mov clc sbb pop jl ret and leave ljmp (bad) repnz adc jne mov pop jge mov dec push lods int push das push jno mov negb cmp mov arpl sub mov jno mov hlt adc mov pop jg shl and stos lret in or mov repz fsqrt ss js mov pop jg shl and lret sub outsb (bad) mov repnz aaa pop jns mov pop jg shl and add cmpsl leave ljmp (bad) icebp adc push je test hlt cmp mov cmp add pusha adc (bad) sbb shl and xchg dec outsb (bad) mov repnz push jbe mov stc sbb pop jge mov test jb mov notb cmp lcall andl lret sub add negl cmp popf mov xchg push ja mov add pop jle shl and cmpsb (bad) jmp lea push jae mov notb cmp sahf mov arpl dec push stos int3 out wrmsr push jno mov cmc push aaa pop js mov pop andb xchg dec jo mov repz test in or jmp mov hlt adc mov pusha andl lret in push inc pusha andl lret sub dec outsl xchg mov hlt adc mov pop jg ret mov rorl inc jbe sub mov repnz ja mov pusha andl lret in or mov hlt adc mov inc data16 push je mov pop jle shl and data16 dec outsl (bad) mov repnz push ja mov jae mov stc sbb pop (bad) movsb (bad) ljmp (bad) hlt adc lcall andl int3 in push das push jno mov cmc push aaa pop jns mov andb push or dec outsl nop mov repz push jbe dec adc mov insb stos in imul adc sub lcall xor loop push mov cld xor dec test fcoms dec mov add jb jecxz pop xchg lret jg add jns lock loope pop xchg int inc add mov (bad) cmp cmpsl in bound aad dec xchg cld aaa jae in daa arpl lods jmp push jmp sub fstl dec xchg std cmp loope push (bad) movb jbe std aas jl in daa pop lcall jo,pn ljmp mov add sub iret add imul pop sahf xlat or jge lock mov sub (bad) inc jnp in outsl scas in dec (bad) lret or add dec test add add stos out push cli xor aam dec mov cli xor fmuls inc test or into adc cmp pop cmp jb repz and idivl outsl cmpsb ficomp push (bad) enter mov sub mov aam inc (bad) mov out xor ficom dec mov clc xor cmc xor movsl fstl test add cmp je clc xor pop jp lock rorb aad push pop (bad) cmp repz popf add sub jnp mov add add inc arpl sub mov push jae mov negl cmp pushf mov bound cs jo mov hlt adc mov scas out xor pop xchg aad push xchg leave (bad) cmp out jo,pn jmp bound aam dec cwtl fsubl pusha cmpsl jmp addr16 push mov or mov and testb sti xor jmp push push nop into or (bad) push dec add out imul add outsb cmpsl in fs ljmp test sbb mov loop pop xchg movl and movsl out outsb mov cmp incl mov aad push (bad) rorb dec cmpl loop pop cwtl rorl inc (bad) mov cmc ss testl mov cmc xor mov movsb jmp popa fwait xlat sbb dec mov inc jnp inc mov idivl push mov xchg add repnz cmp pushf mov add inc add das push jno mov notb cmp pushf mov arpl dec insl mov pop jnp mov popa (bad) mov dec imul mov repz push ja mov shr sub mov negl cmp jg shl and leave ljmp (bad) icebp adc push jne mov stc sbb pop jl mov test aam pop cmp fwait mov add add inc popa andl mov fdivr sbb pop jle shl and test ljmp (bad) negl cmp fwait mov popa (bad) mov dec push lods int wrmsr push jb mov cmp push jb mov cmc push ss js mov arpl in sub and mov add sbb pop jg shl and cmpsb (bad) call lea push jb mov pop jg shl add inc xchg dec insb mov push mov cmp mov dec jae mov negl cmp pushf mov mov or xchg mov stc sbb add inc xchg dec insb lea push je mov clc sbb pop jl shl and xchg dec outsl nop mov repz mov pop andb mov or dec outsl nop mov repnz pop jp mov add popa (bad) mov dec imul mov cmc push aaa pop jns mov pusha andl iret lock push je mov cs in wrmsr push jae mov clc sbb pop add es push push lods and mov pusha andl (bad) repnz cli sbb add inc xchg dec outsl xchg mov hlt push ss js mov arpl sub add mov cmp fwait mov popa (bad) mov dec imul mov clc sbb pop jge (bad) in daa dec imul and (bad) inc js in sub xlat adc loope sub outsb (bad) mov repz push ja mov xchg dec outsb (bad) mov repnz pop jnp mov arpl sub lea push jbe mov pop jg das insb cmpsb fmull dec adc add cmp lret jle mov inc xchg hlt dec fwait jmp (bad) sarb ret adc xorb xchg aam dec (bad) sbb scas icebp das mov add sub jno sub rclb icebp adc push jbe mov pop jle mov mov push jno mov cmc push aaa pop jns mov inc xchg dec insb mov push jne mov stc sbb pop jl mov mov add add dec outsl xchg mov repz pop jns mov popa andl mov jb mov notb aaa pop jl mov arpl dec imul lds loopne and test dec insb lea in stos xor push dec (bad) mov add cli xor add loop xchg ljmp add inc jle call adc lock loop add lret add mov pop push pushf fistpl (bad) fldenv popa lahf loop cmpsb in push mov std aaa jae jmp push dec mov add insl mov movsl (bad) out sub lea cmp fwait mov popa (bad) mov dec push push int inc jl add jnp or adc sbb cmpsl out outsb mov aaa jbe sti cmp add movb lret or rorl jp jmp movsb fstl dec jg out push mov add add pop data16 and mov inc jle sub xlat stc sbb pop jge mov test dec insb lea pop jns mov pusha andb mov or dec outsb (bad) mov repnz fdivrp and test out adc jbe mov pop jg shl and xchg sarl sar addr16 xlat daa pop xchg lret add scas (bad) icebp adc jl add popf mov test dec insb lea push jbe add bound sub mov jno mov pusha enter mov pop mov dec xchg (bad) push dec rcrl test int cmp push test aam pop xchg into adc ret stc xor loopne outsb mov je,pn hlt xor jecxz popf loope push mov dec lahf fistl push mov (bad) cmp repnz aad dec xchg add cmp xchg add js repz jge mov test dec insb lea push je mov clc sbb aas pusha andl (bad) icebp adc push jne mov stc sbb pop jge mov arpl dec imul mov repz std push aas pusha andl leave ljmp iret lock push je add xchg push cmp popf mov test add add dec jo mov hlt adc mov xchg fnsave jl mov bound daa dec push lods int comiss xchg mov cli sbb add inc test dec imul jb mov notb cmp lcall andl into out adc push jb mov cmc push ss js mov pop jle mov arpl dec imul add mov pop andb xchg dec insl lea push jb mov cmc push aaa pop js mov pop jg shl es push push cs jo mov repz push ja mov pop jge mov arpl mov dec outsb (bad) mov icebp adc jne mov pop andb mov or mov repz add push aaa pop jp mov add inc bound lret or loopne pusha (bad) mov dec imul mov negl cmp pushf mov arpl dec jae mov clc sbb pop jge mov test dec imul jb mov negl cmp pushf mov popa (bad) mov xor xchg mov cmc push aaa push js mov pusha andl lret sub outsb (bad) mov repz push ja mov add (bad) sbb popa andl dec mov add xchg hlt sub out cmp out and cmp lock ficoml add (bad) cmc xor repz and push pop xchg into push cmp test pop push mov add test pop pop popf fist dec mov pop inc jle add cltd (bad) or cmp lods in sub mov mov fistp pop nop lret or mov imull arpl adc mov add ja out add (bad) cli das outsl movsl ficoml mov int inc jns clc cmp idivl jnp add mov sub dec (bad) mov (bad) hlt sub lahf fstpl push mov rcll dec xorb xor fistp pop mov insb scas repz nop mov cmc push ss js mov pusha andb push adc stc sbb pop jg shl and cmpsb (bad) call mov push je mov clc sbb aas add pusha andl int wrmsr push jb mov cmc push aaa pop js mov pop andb xchg dec insb lea push jae mov pop jle mov arpl (bad) xor insb cmpsl ficom dec test repz loope dec cmpl add stos lret sub (bad) hlt adc push js mov pop andb mov or add outsb aad push xchg int arpl xor push js mov pop jg shl and xchg inc xchg dec mov adc xchg mov clc sbb pop jl mov sub rorb dec cmpl adc int3 add mov or and or mov jmp add jp stc add idivl sar xchg and mov inc js jmp add sub push inc js in push xchg int3 add add mov clc mov sub in pop nop lret jno in cmpsl loop bound (bad) or lds xchg lret stos stc aaa jae out xor divl outsb stos out arpl sar insl mov in sub jecxz pop sahf xlat adc xchg adc xor mov pop pop mov out jo,pn add cmp or and idivl jnp divl pop xchg lret add jo fist dec mov pushl insb movsl fcoml dec (bad) mov into add sbb test cld cmp hlt xor call adc cltd fistp xchg (bad) adc rorb dec mov std aaa insb test ficompl aas je jecxz popa fbld push xchg iret or into adc leave pop dec xchg add int push xchg aad pop fcompl fs aas jle add bound loop push nop int3 adc fimul add or mov out pop fwait (bad) push inc jge xor mov loope dec mov fstpl push mov add inc jns cld push aas pusha andl lret sub (bad) repnz stc sbb pop jnp mov xchg dec outsb (bad) mov repnz push jne mov clc sbb pop jl mov bound dec jno mov cmc push ss jl mov arpl out sub mov je mov notb cmp lcall andl lret xor xchg mov cmc push aaa pop jns mov pop jg shl and xchg dec insb mov push je mov negl cmp lahf shl and test dec insb lea push jae mov notb cmp lcall xchg dec insl mov or sqrtps add and cwtl mov pop jle shl and test dec imul push jno mov hlt adc shl and cmpsb (bad) jmp mov push jae mov notb aaa pop jns mov pop jg shl and test dec outsl (bad) mov repnz push jne mov clc sbb pop jnp mov popa andl mov dec outsl (bad) mov repnz aaa pop jns mov pop andb xchg dec insb lea push jb mov notb aaa pop jp mov pop andl mov dec outsl nop mov repnz stc sbb pop jl mov bound or dec outsb (bad) scas (bad) hlt adc mov loop and mov or insl mov push jae mov inc (bad) aam js shl and xchg push jno mov hlt adc mov pusha andb imul mov repz push ja mov pusha andl leave ljmp iret icebp adc push je mov negl cmp sahf mov arpl daa dec imul mov clc sbb pop jnp mov pusha mov jp,pt stc xor mov cmp cmp mov xchg push jb mov notb aaa pop jns mov pop andb xchg dec outsb (bad) scas (bad) icebp adc push jne mov clc add ds test dec imul mov hlt adc mov pop jle mov arpl dec imul mov negl cmp pushf mov push push cmpsl int3 out wrmsr push jno mov cmc adc mov pop andb imul push add add mov notb cmp lcall andb data16 dec insl mov push je mov cli sbb pop jge mov bound daa dec imul mov hlt adc mov pop jge mov push lods int push das push jno mov cmc dec mov xor mov inc push or dec outsl nop mov repnz stc pop inc add test ljmp or dec insl mov mov mov lock jp mov bound sub mov jns mov pop andb xchg dec insl (bad) mov repnz movsb loope push dec imul push ja mov pop jg shl and cmpsb enter dec insb mov push jb mov cmc push aaa pop js mov pop andb imul add int3 in or mov repz cli sbb add inc arpl dec push stos int3 in push das push je mov clc sbb pop jl mov bound daa dec imul mov repz pop jns mov or dec jo mov repz pushf mov popa (bad) mov dec imul mov hlt adc xor xchg mov negl cmp mov add add add and xchg dec insl mov push jne mov clc sbb pop jge shl and test dec imul ja mov pop jle shl popa scas in jl (bad) daa dec imul mov repnz push jne mov stc push aas pusha andl enter dec jo add jbe mov bound push stos int3 in push das push jno mov cli sbb pop jg shl and test ljmp iret lock push jae mov negb cmp fwait mov popa (bad) mov inc imul push je mov add mov (bad) cli xor out mov jb mov notb aaa pop jns mov pop jle (bad) out sub mov dec outsl nop mov repnz jne mov clc sbb pop jp mov pop andb xchg dec jo mov add (bad) repz clc sbb pop jnp mov pusha andl enter mov xor cmp (bad) and mov push je mov negl cmp fwait mov pop andb xchg dec imul jb mov stc sbb pop jl mov popa (bad) mov inc push or icebp adc push je mov notb cmp lcall andl add add out daa dec push or add xchg mov notb aam inc jp out push mov add jne loop dec test aam dec jg in and lret outsl test mov in sub rorb inc jg lock loopne pop xchg aam dec add loopne dec mov add inc mov or lahf call jbe mov popa (bad) mov dec push lods int wrmsr push jb mov notb ds andb add ret es push or dec outsb (bad) mov icebp adc push je mov negl cmp fwait mov pusha andl iret lock push jae mov notb cmp lcall xor xchg mov clc sbb pop jl mov bound sub mov jbe mov pop jle mov arpl sub (bad) repnz stc sbb pop jge mov push lods int3 in push cs jo mov repz push jbe mov stc sbb pop jl mov popa andl leave ljmp aam adc mov pop jle shl and test dec push stos int3 in push das dec jo mov repz push jbe mov scas cmc das popfw (bad) or lods loope push xchg rcll dec mov fistp lahf sbb mov notl cmp fwait mov pop xchg add add jmp mov push jno mov cmc push aaa push js mov pop jg shl and test dec push lods int3 lock push je mov negl cmp fwait mov pop andb add lods int adc push jb mov notb aaa pop jns mov popa (bad) mov inc mov or dec insl lea push jb mov cmc push aaa pop js mov pop jg shl and test push xor xchg mov hlt adc mov pop jge mov arpl dec imul push jb mov cmc push cmp sahf mov arpl dec insb lea pop fbld data16 xchg mov pop jle shl es push adc push jbe mov pop jg shl and xchg dec insl mov push ja mov pop jg shl and stos add in push das push jno mov hlt adc mov pop jle shl and test stos int3 in push xor xchg mov cmc push cmp lcall test adc add mov repnz push ja mov pop jle shl and cmpsl enter dec outsb xchg mov clc sbb pop jge shl and cmpsl enter dec insl mov push je mov clc sbb pop jnp mov bound add add dec insl mov push je mov clc sbb pop jnp mov bound sub mov push jbe mov pusha fstpl push xchg repz pop jle mov arpl dec imul mov cmc pop aaa pop jns mov pop jg shl sub mov push jb mov cmc pop aaa pop jns mov pop in jo repnz jecxz and out adc push ja mov add inc mov or dec insl mov push jae mov sti insb mov pop xchg lret xchg mov popa (bad) mov inc mov or push je mov negl cmp fwait mov arpl sub scas iret lock push jae mov notb cmp lcall jg (bad) in daa dec push stos int3 in rdtsc push jb mov cmc push aaa push js mov pop jg shl and cmpsb (bad) call mov adc jne mov clc sbb pop jnp mov pusha andl lret sub insl mov push je mov negl cmp mov inc test push jo mov repz push ja mov pop jle shl and mov lock push jae mov stc sbb jle mov mov or dec insl lea push jne mov clc sbb pop jge mov test add nop mov cmc push aaa push js mov pop andl int3 in or (bad) negl cmp popf mov popa (bad) mov dec insb lea push je mov negl cmp popf mov arpl dec insb lea push jbe mov stc sbb pop andb xchg dec insb lea push jb mov cmc sbb pop jge mov arpl sub lea add repz push ja mov pop jge mov bound sub mov push jno mov hlt adc mov inc xchg mov jmp push dec jg cli xor daa dec push stos int wrmsr push jb mov cmc push cmp lcall mov dec jno mov cmc push aaa pop jns mov pusha andb xchg dec insl mov add cwtl mov pop jle shl and test dec imul jb pop push mov add test dec outsl nop mov repz pop jl mov bound sub mov push jno mov hlt push aaa pop jns mov pop andb data16 jb mov clc sbb pop jl mov arpl or lret xor xchg mov notb cmp fwait mov add (bad) and mov push jae mov cli sbb jge mov push or mov hlt adc push jbe mov pop jl ret and xchg dec insb lea push jae mov notb cmp lcall jg shl and test dec outsl nop mov repnz fdivr sbb pop jge mov xchg dec push lods int imul add add outsb movsb in pop xchg int3 or (bad) cmc sub rcll push xchg xlat adc fdivr pop inc test dec insb lea push je mov clc pop inc popa (bad) mov dec imul jae mov notb cmp lcall andb push mov sti xor (bad) jno jmp add or dec imul jae mov notb cmp lcall andb xchg add add or dec jno mov cmc push aaa pop jns mov pop jg shl and cmpsl (bad) call mov push je mov negl cmp fwait mov test dec push lods int comiss xchg mov notb cmp lcall andl enter push jb mov cmc push aaa pop js mov pop jg (bad) repz (bad) sbb mov ret and lret cs jo mov add hlt adc shl and cmpsl lret sub (bad) repz push jbe mov pop jge mov test dec imul add imul mov pop jge mov test pop jg shl and cmpsl enter dec insb xchg mov add sbb inc bound dec insb mov push jae mov notb cmp lcall andb add xchg mov daa jg enter dec insl mov push jne mov clc sbb pop jl mov test dec imul js mov pop jle shl and test dec imul mov repnz jne pop insl fistl and xor fcoml inc jle lock fcoml inc jp ljmp push jae mov negl cmp fwait mov add ds andb push (bad) mov icebp adc push je mov clc sbb pop jnp mov pusha andl leave ljmp (bad) lock push je mov add add dec outsb (bad) scas (bad) icebp adc push je mov notl cmp lcall jg ret and xchg dec outsl (bad) mov repnz push jne mov clc sbb pop jnp mov pusha andb data16 add dec insl lea push jbe mov cli sbb pop jge mov bound es mov or insl mov push jae mov notb aaa pop jns mov bound daa dec imul mov notb cmp pushf mov bound sub mov push jns mov inc arpl dec push stos int3 in push das push jo mov repz push js mov add pop jle shl and test dec outsl xchg mov add sbb inc popa (bad) mov inc push or dec outsl (bad) mov repnz push jne mov stc sbb add inc mov or icebp adc push je mov clc sbb pop jnp mov bound dec push lods int push das push jno mov clc sbb pop jge mov bound sub mov jno mov cmc push aaa push add mov pop jg shl daa dec push or dec jo mov hlt adc mov pop jg shl and test ljmp (bad) hlt adc push ja mov arpl fwait mov bound dec imul mov repz push jbe mov stc sbb pop jnp ret and xchg das push add mov clc sbb pop jl mov bound add add stos lret jmp sub (bad) repnz aaa pop js mov pop jle mov arpl dec imul mov icebp adc push je mov negl cmp sahf mov bound sub mov push jno mov hlt adc push ja mov pop jle shl and test dec outsb (bad) scas (bad) icebp adc push je mov notb cmp fwait mov pusha andl add xchg dec imul jne mov clc sbb pop jl mov inc xchg dec insb lea push jb mov cmc push aaa pop js mov pop jle ret in and loope jnp shl add dec add mov cmc push aaa pop jns mov pusha andl lret in or mov clc sbb pop jnp mov pusha andl leave jmp lea scas iret lock push jae mov notb aaa pop jns mov arpl dec push lods int comiss xchg mov notb cmp lcall andb data16 dec insb nop mov hlt adc push ja mov pop jle ret es push or mov repz (bad) sbb pop jg shl daa dec imul mov add sbb andb xchg add or dec insb lea push jae mov notb cmp sahf mov test dec push stos add repnz cmp fwait mov popa (bad) movsb (bad) in daa dec push or mov negb cmp pushf mov (bad) hlt adc push jbe mov pop jl mov popa (bad) mov inc xchg or dec insl lea push ja mov pop jle shl and data16 dec add insb lea push jb mov cmc push aaa pop js mov bound es push or insl mov push jb mov notb aaa pop jns mov pop jle mov arpl sub mov push jb mov add sbb pop jl mov pusha andl (bad) call (bad) mov repnz cmp lcall jg shl and test adc add push je mov notl cmp fwait mov pop andb data16 dec jo mov cmc adc mov pop jg shl and cmpsl enter dec jo mov repnz pop jns mov arpl lret out wrmsr push jno mov cmc push aaa pop jns mov pusha andb aaa jne add ljmp aad pop cmp pushf mov pusha andl xchg dec outsb (bad) mov icebp adc push je mov negl cmp lahf shl and test dec push lods int push das add xchg mov pop jl mov popa (bad) mov inc push wrmsr push jb mov cmc push aaa push js mov pop jle mov inc add scas iret lock push je mov negl cmp fwait mov pusha test dec push lods int push das dec jo mov repz add xchg mov stc sbb pop jl mov popa (bad) mov inc mov push das dec jo mov repz push jbe mov stc sbb pop jl mov bound es mov or dec insl mov (bad) cmp fistl dec test pop jg ret and leave ljmp (bad) lock push jne mov clc sbb pop jnp mov xchg dec insl mov push je mov (bad) testl mov inc data16 dec insb mov push ja mov pop jge mov fs pop (bad) movsb (bad) daa dec imul cmc push aaa pop js mov pop jle mov bound sub (bad) hlt adc push ja mov pop jl mov popa andl enter dec imul jne mov clc sbb pop jp mov popa (bad) mov dec imul mov icebp adc push je mov notb cmp mov bound es push or dec insl lea or push jno mov notb aaa pop jp mov pusha xchg dec imul jb mov cmc push ss js mov inc test dec push stos int push das push jo mov negl cmp pushf mov pusha andl add xchg dec insl (bad) mov aad add loop and xchg dec outsl nop mov repz push jbe mov stc sbb jge mov test dec imul jno mov cmc push aaa pop jns mov arpl daa dec imul mov notb cmp fwait mov popa (bad) mov dec push lods into lock jns mov pusha andl add xchg dec insl lea push jae mov notb aaa pop jns mov pop andb imul mov repz stc xor stos jmp arpl notl pushf mov popa (bad) test dec jo mov hlt adc push ja mov pop jle mov arpl add push jne mov clc sbb pop jnp mov xchg dec imul add add out rdtsc push jb mov notb aaa pop jns mov pusha andl lret sub outsb xchg mov cmc push ss js mov pop jle shl and test dec imul jb mov notb cmp fwait mov data16 dec insb lea push jae mov notb aaa pop jns mov pop jg shl and cmpsl enter dec jo mov repz push jbe mov add sbb pop jge mov bound pusha scas out add or fild lret arpl lods int adc push jne mov clc sbb pop jge mov arpl dec imul cmp mov arpl stos repz jns mov pop jg shl and xchg dec imul jae mov notb aaa pop jns mov test add add sub mov jno mov hlt adc push ja mov pop jge mov lahf shl and mov dec jo mov repz push jbe mov pop jge mov bound daa inc push or dec outsl nop mov notb cmp lcall andb xchg dec imul add mov pop jge mov xchg dec insl mov push je mov negl cmp fwait mov pop andb xchg clc add icebp adc push js mov pop jle mov arpl sub mov dec outsl (bad) mov icebp adc push je mov test inc outsl xchg mov repz push jbe mov pop jl mov popa (bad) mov inc mov or dec outsb mov push jae sub and fildl add push aas pusha andl leave ljmp iret lock push jae mov notb cmp lcall test dec imul push jno mov hlt adc mov pop jge mov arpl mov dec outsl (bad) mov cmc push aaa push js mov pop jle shl and cmpsb (bad) call mov jno mov hlt adc add add inc push lods int add in push das mov inc imul push jae mov notb aaa pop jp mov pop andb xchg dec imul push jbe mov pop jl mov bound es push or dec outsb nop mov repnz jne mov cld sbb pop jg shl and cmpsb (bad) out sub mov jno mov hlt adc push js mov pop jle shl and mov add add add or dec outsb mov push jbe mov clc sbb pop jl mov popa andl add out adc push jb mov stc sbb pop jl mov pusha andl lret jmp sub (bad) repz push js mov pop jg movsl enter xor mov pop jle mov test dec imul mov cmc adc mov pop andb add add pop sub add dec jo mov repz cmp mov in xchg (bad) or xchg pop cmp (bad) jmp inc xchg dec insl xchg mov negl cmp popf mov popa (bad) stos es loop dec xorl hlt xor adc jmp pop (bad) add pop sahf fcomps push mov stc bound leave add (bad) hlt adc mov pop andb stc xor mov and add (bad) inc jns out jb in xor xlat adc leave or mov out sub push mov add je call inc jnp icebp add pop sahf xlat adc int3 or add xchg dec outsb xchg mov repz push ja mov pop jle shl and test push jno mov repz push jbe mov dec jg inc nop into sub xchg mov notb cmp jmp push das push jb mov add add cmc sbb pop andb mov or icebp adc push je mov negl cmp fwait mov mov xor icebp cs mov push jne mov stc sbb pop jl mov arpl sub mov push mov repnz adc mulb xor rorb aas jae out pop cltd aad inc js ljmp xchg int3 add je push ja pop sub lea add xor lcall dec push lods int wrmsr push jno mov hlt adc mov pop jl mov arpl dec imul cmp mov or lock push jae mov (bad) iret jl cmc sub outsb stos in popa cmpsb loop addr16 pop mov jno mov hlt adc mov pop jge mov arpl or dec outsb (bad) mov (bad) repnz push je mov pop jg shl and xchg dec imul jno and mov inc push or dec outsb (bad) mov notb cmp lcall jg shl and cmpsb (bad) jmp mov push jb mov cmc push aaa push js mov popa (bad) mov inc mov or icebp adc push je mov negl cmp pushf mov arpl add add out sub lea push je mov negl cmp fwait mov popa (bad) mov inc mov or dec outsl (bad) mov repnz push jne mov cld push aas popa andl leave ljmp iret lock push jae mov notb cmp lcall test dec outsb nop mov repz push jbe mov pop jle mov sub cmp lcall andb add add and cmpsb (bad) in comiss xchg mov hlt adc push jbe mov pop jl sub cli sbb ret adc test inc mov dec imul jns mov pop andb xchg dec imul jno mov cmc push aaa push js mov pop andb imul mov repnz stc sbb pop jge mov arpl dec imul mov notl cmp pushf mov pusha andl enter dec insb lea push jb mov add sbb pop jle (bad) in es push or icebp adc push jne mov clc sbb pop jnp mov pusha andl enter dec jo mov repz fdivr sbb pop jl mov popa (bad) mov inc push mov add add inc test push jno repnz xchg mov cli sbb add inc arpl dec imul mov repnz push je mov negl aas pusha andl leave ljmp iret out adc push jb mov cmc adc mov pop jge mov bound sub lea push je mov notl cmp lcall jg shl and test add add sub mov ss js mov pop jge mov bound and lret sub insl mov push jb mov cmc push ss jnp mov pusha andl (bad) call mov jb mov cmc adc mov pop jle shl es mov or dec insb lea push jb mov hlt adc mov pop jl mov add add inc popa (bad) mov dec imul xor stos loop push ret sub (bad) repz mov pop jle shl and test dec jo mov hlt adc mov pop jle shl and xchg dec insb lea push jae mov notb aaa pop jns mov add stos lret jmp sub (bad) repnz stc sbb pop jl mov arpl add pop sub mov jne mov clc sbb pop jnp mov bound es push or dec outsl nop mov repnz jne mov cli sbb pop jge ret in and lret sub outsb (bad) scas (bad) icebp adc push jne mov clc sbb pop jnp mov popa (bad) mov inc mov wrmsr push jb mov cmc push cmp lcall andb xchg dec outsl nop mov repnz xor ja mov (bad) into cmovs out dec (bad) mov sbb test loop pop xchg rorl test cld aaa jno jmp push push mov add pop (bad) or mov and add mov sbb xor movsl fstl dec mov or rolb and gs fcoms dec xchg (bad) xor push mov loop pop xchg iret pop inc jle (bad) push xchg rcrb pop popf in push add jnp add add add or dec (bad) rcrb pusha mov repz clc ss decl les pop mov add rolb add inc mov or (bad) or (bad) push mov or xlat adc arpl adc xchg rclb push xchg xlat sbb repnz repnz or (bad) int jno ljmp mov add int3 adc fisubr je icebp xor clc cmp rcrl pop popf loope movsb loop jl add into cmovge fsubl scas repnz sbb ljmp lds dec (bad) xlat push popa mov divl jne cli cmp pop push popf fisub pop movsb call dec sahf fcompl pop pushf frstor pop mov in sub mov or pusha mov decb int pop cltd fsubl push out das (bad) (bad) or movl pop fwait loopne popa cmpsl jmp jne incb fstps pop lcall add add arpl icebp xor dec mov push push mov idivb jnp cli cmp xchg rcrl je pop push xchg rcll pop lahf out jo cld inc jle add into adc loopne jae out xor or addps add movb mov or sbb fcompl movsb call dec mov adc fistpl bound in das ja incl ret add imul dec xchg or add xchg frstor arpl push dec nop rcrb pusha movsl repnz jb repz dec xchg xlat cmp repz test cmovg enter xchg ret pop pop hlt daa pop mov cli xor ficomp pop popf ficomp popa mov in test outsl mov xor mov or lret or pop mov lock xchg push push xchg xlat sbb loope data16 sub mov xor test pop dec mov adc sbb pusha mov in xor idivl jnp add push lcall insb mov xor mov or rclb cmpsl in das outsl mov aaa jnp add iret or gs sub jp add (bad) or iret adc sbb sub mov aaa jnp add lret xchg fstps pop mov out xor cmp mov adc fcoms pop popf jecxz imul add add push xchg fcomps outsl mov cmp dec (bad) rcll stos in das jae incb ret add enter iret push push xchg (bad) sbb idivb jnp add (bad) or xchg (bad) sbb loope push mov or rclb pushf fisub data16 jae,pn clc cmp mov pop dec mov adc bound in xor (bad) les dec mov sqrtps jecxz data16 out xor divl jl add dec (bad) iret add push xchg (bad) sbb fbld arpl hlt xor jnp sbb loop push mov cmp inc test push push add jmp xor stc cmp incb rclb push xchg fcomps pop mov out xor cld inc (bad) lds dec mov adc fstps pop popf loopne data16 call xor idivl jl incb enter aam pop fwait loopne data16 in xor cmc ss add or rcll push cwtl fcompl add add sub icebp xor mov push dec mov sbb jecxz stos in outsb mov xor std inc (bad) ret add push xchg (bad) sbb loope cmpsl out jno clc cmp incl lret xchg fistpl bound jmp xor cli aas (bad) (bad) or aam pop pushf fstpl sahf jmp sub aam inc test insl mov xchg jmp dec jae mov negl cmp clc inc test cld sbb shl and add outsl nop mov repz push ja mov imul mov hlt adc mov pop jg shl and data16 dec insb lea push jbe mov pop jge aam int3 add test adc mov fdivr push inc popa andl mov push je mov bound sub mov push jae mov clc sbb pop jl mov add inc arpl sub scas (bad) icebp push aaa pop jns mov pusha andl int3 in push das push jno mov notb cmp fwait mov popa (bad) movsb (bad) sub cli cmp lods out pop xchg (bad) std xor loop pop xchg (bad) pushl jb adc ret jle sti aaa and xchg mov cmc push ss js mov test dec imul push js mov pop jle mov add add sub mov jno mov clc sbb pop jl mov popa (bad) mov inc push lock push je mov clc sbb pop jnp mov popa (bad) mov dec insb lea push jb mov notb aaa pop jns mov pop jg shl and cmpsb (bad) call mov push js mov pop jg shl shl and mov push das push jo mov hlt adc add push js mov pop andb mov wrmsr push jb mov negl cmp pushf mov popa (bad) mov dec push or mov repz push js mov xchg dec outsl (bad) mov repnz (bad) and test dec imul jb mov notb cmp sahf mov test dec imul jae mov clc add aas pusha add daa dec push or mov negl cmp fwait mov popa (bad) mov dec push stos int3 in push das push jb mov notb cmp pushf mov popa (bad) mov dec insl mov push jne mov sbb (bad) cmc sub dec xchg add shl and test dec insb lea jp mov popa (bad) mov inc push or dec outsl nop mov repnz cli sbb jge mov push or dec jo mov repz push ja mov add movsl (bad) out sub mov jno mov hlt adc mov popa (bad) mov inc push or dec outsb (bad) mov icebp adc push je add hlt xor jae out and pusha test and in and movb pop xchg leave add leave or xlat add sbb sar jne clc cmp insl xchg mov cli sbb or dec insb lea push jae mov notl cmp fwait mov pusha andl lret sub outsb (bad) mov cmc push aaa pop jns mov pop andb mov or mov cmc push aaa pop jns mov pop andb push lods int comiss xchg mov cmc adc mov pop jg shl add dec imul jb mov cmc push aaa pop jns mov bound jle cld aas xchg add stc xor cli push aas pusha andl lods iret lock push je mov clc sbb pop cwtl call fdivrp and (bad) mov dec imul ds andb push push das dec jno mov cmc sbb pop jge mov xchg dec insb lea push je add add cmp popf mov bound sub (bad) mov repnz push jbe mov pop jle loop data16 pop pop cwtl xlat sbb cld and lret in push das push jno mov cmc push aaa pop jns shl and xchg dec outsb (bad) mov repnz ja mov pop andb dec insl mov push jne mov stc sbb pusha andl lret jmp sub aam xchg cld cmp add xchg (bad) cmc pop cmp fwait mov bound mov push jno mov cli sbb loop and xchg dec jo mov hlt adc mov pop andb mov or mov negl cmp lahf shl and cmpsl enter dec jo (bad) sbb ret in es imul jae mov sti sbb (bad) sub mov jb mov negl add cmp mov xchg dec outsl nop mov repz push jl mov test dec imul jne mov stc sbb pop jge mov dec insl mov push ja mov arpl dec imul push ja mov pusha andl notb cmp fwait add jecxz and (bad) icebp adc or movl test ljmp add (bad) hlt adc mov arpl dec imul pop jp mov arpl sub mov push jbe mov pop andb push or mov stc sbb pop jge mov xchg dec outsl nop mov hlt push aaa pop jns mov popa (bad) mov dec push mov repz push ja mov pop jg ret in es push lods into lock pop jp mov popa (bad) mov cs jo mov notb cmp jg shl and mov or mov notb cmp pushf mov bound sub mov push add shl es imul mov clc sbb pop jl mov test dec insl mov push jbe mov test mov xor xor popa lods out jp out wrmsr push jb mov notb cmp lcall (bad) mov dec outsl nop mov hlt adc mov pop jle shl and cmpsl enter dec outsb (bad) mov repnz push ja mov pop (bad) mov dec imul mov negl cmp fwait mov popa (bad) mov dec imul cwtl mov popa (bad) mov inc mov or dec outsb (bad) mov repz push ja mov pop jg shl and cmpsb (bad) call nop add pop jle shl and cmpsl enter dec outsl nop mov hlt adc mov pop jg shl and cmpsb (bad) jmp cs jo mov repz push js mov pop andl lret in or mov hlt sbb jmp xor fwait mov pop andb mov add in or mov hlt adc mov pop jg shl and xchg dec outsl nop mov repz push js mov pop andb xchg dec outsl nop mov repnz (bad) sbb inc push or mov hlt adc mov pop andb data16 dec insl mov push jae mov sti sbb pop jle mov inc imul add add mov ds cld cmp popa sahf fsubl insl mov pusha test dec insb mov pop jnp mov popa andl lret sub (bad) repnz stc sbb pop jl mov xchg dec insl lea mov and test dec imul jne mov stc sbb pop jge (bad) out sub mov push je mov clc sbb pop jl mov test dec insb lea push je mov cli sbb (bad) add dec jo mov hlt adc mov bound sub mov push je mov clc sbb pop jge ret and leave ljmp mov cli sbb add inc test dec jo mov cmc push aaa pop jns mov test dec insb lea xor xchg mov clc sbb pop jl mov xchg dec outsb (bad) mov repnz (bad) pop inc popa (bad) mov inc push or mov hlt push ss jns mov pusha andl mov push jbe mov test mov push jno mov cmc push aaa pop jns mov pop andl lret in or mov clc add inc cltd mov inc popa (bad) mov dec push lods into out adc push je mov stc sbb add inc push adc push jne mov stc sbb pop jge add out sub mov push jns mov pusha (bad) mov dec insl mov push jp mov arpl sub lea push jbe mov pop jle shl daa dec imul push jae mov cld sbb (bad) daa dec imul add stos int3 in push xor xchg mov clc sbb pop jl mov xchg dec outsl (bad) mov repz push jl mov bound sub mov jb mov negl cmp mov xchg dec outsb (bad) mov notb cmp and push push das push jno mov cmc pop aaa pop jp mov popa (bad) mov dec imul mov pop jle shl add inc xchg xor xchg mov negl cmp fwait mov popa (bad) mov inc push adc stc sbb pop jge mov test dec insl mov pop js mov pusha andl (bad) repz push ja mov pusha andl int wrmsr push je mov clc sbb pop jnp mov bound sub outsb mov add push jbe mov stc sbb pop jle shl and lret sub (bad) repz push ja mov popa (bad) mov dec imul push jns mov pop andb xchg dec insl mov pop scas in es xchg fcoms push mov add je out push add xor cmpsl ficom lcall ficoml push (bad) add mov repnz push xchg lret add add aad mov add das imul cmc sub je,pt call clc sub xchg rcrl pop lahf ficomp pop lcall pop int push aaa pop jns mov popa (bad) mov dec imul mov hlt push aaa pop jle shl and xchg dec outsb (bad) mov repnz push test out ss jnp mov bound sub mov jbe mov add sbb jge mov add lods into out adc push jae mov negl cmp popf mov arpl dec outsl nop mov repz push ja mov pop andb xchg xor xchg mov clc sbb pop jge mov test push jno mov cmc push aaa pop enter ret js stc cmp and rorl inc jge sub xchg mov clc sbb pop jl mov push lods int adc add xor xchg mov notb cmp lcall andl lret sub (bad) repz push ja mov pusha andl int3 in push das push jno mov hlt adc mov pop jle shl and and call mov inc jg hlt ss jge cmc sub add (bad) cmp out pop cmpsb out pop xchg into or loopne es push jg divl xchg roll jns in sub fcoml (bad) lret xchg add add in xor out pop xchg rorb inc jl out sub rorb dec mov sti aaa jne lock mov rcrb push pop cli xor jecxz push test (bad) cmova lock (bad) or cmp js adc xlat pop popa movsb call cmp dec mov push dec (bad) into push inc nop rcll pop popf out popa mov fistp push xchg int add aas (bad) movb jle add (bad) or enter loope gs sub mov xor icebp dec mov push inc xchg push push xchg rclb push lcall popa test inc jle ljmp jae out add fsts dec xchg (bad) ds lds (bad) ret mov add rcrl push xchg aam pop movsb call cmp pop lods out xor add rcll pop mov and jp add inc test adc push cwtl fisub test and fistpl pop pushf (bad) adc rorb pop mov stc cmp rcll nop or cwtl aam dec rolb push xchg (bad) adc pop push xchg xlat sbb xlat sbb loope mov repz jbe stc cmp add ret mov or push xchg fcompl pop cwtl fcompl pop lahf loopne lods out xor add popf frstor js cli cmp add push xchg (bad) sbb loope insl mov add inc test or cltd loope jb incl lret xchg fldenv imul imul push nop add sbb out outsb mov inc mov or fcomps jnp add iret push pop lahf loopne outsl scas idivl test addps in xor add fcomps pop movsl call push dec xchg (bad) sbb loop insb mov cmp frstor stos icebp xor (bad) rcrl pusha test aaa jge add lret sahf loope popa movsl add in ss add push pushf in imul push cltd jecxz insb mov cmp add roll add jge aaa jle add aad pop movsl jmp inc test push push cwtl (bad) arpl add rcrb pusha mov cmc cmp ficompl stos out xor mov push cmpsb ljmp rclb push icebp aaa jl add int pop fwait loop outsb mov cmp fisubl bound cmp lcall test push push xchg ficompl mov idivb add xchg rcll lret push push xchg ficomp jne add rclb popa cmpsb jmp add aam pop sahf in jo clc cmp lret cltd frstor jns pop push xchg aam pop mov inc mov pop push popf fbld jg or xlat push pop lahf in insb mov ds or imul sbb out push stos in xor or aad popa movsl out jb add lds dec cltd fistp adc out jo sti cmp lahf in jae incl les dec nop rclb push xchg rorb dec cmpl xor mov sub imul inc (bad) sar jnp cmc cs in imul xor stc cmp add les dec mov or push mov loop arpl in sub repz lock repz add add add ja stc inc (bad) movb mov or xchg fcoms push fstpl pop lcall mov sbb jmp aaa jp stc cmp clc cmp or aam push add xor mov or mov and pop inc jnp divb stos out pop cltd rorb xor cmpsb fstl xor and fcoms aas jg stc cmp add cmp incl movb jle or or xchg fcomps pop lahf fsubl push rolb rclb push imull hlt xor out push idivl mov adc fcomps bound or and jle push dec xchg ficompl cmpsb in xor incb int pop mov incl xlat and repnz jp add lods repz push dec mov adc stos in xor lcall jge or push idivb or push fwait loop add add mov sbb jne add (bad) sbb ljmp (bad) inc mov adc mov add (bad) rcll pop mov incl adc mov pop dec (bad) aam pusha stos out xor add sbb sub sti inc test or insb scas idivl add pop pop mov add aam pop mov add (bad) sbb cmpsl lock xchg (bad) fs lock push dec (bad) aam pop cmpsb jmp add xor add (bad) aam stos lock mov sbb leave pop js add into adc jecxz jne add aam popa mov or sbb repz xlat sbb lock add sub cmp out jb incl iret adc jmp cmp ficompl bound inc mov push pop sahf loop jo add inc mov adc loope lods hlt cmp loope outsl add mov inc xchg adc pushf loope je decl add (bad) xor rolb xchg fbld lods lock mov adc loop insb mov ds adc in imul pop fbld stos icebp cmp or and idivl add sbb out xor add rcll pop mov repz add int dec mov sbb in jno icebp xor in sub cmpsb in pop pushf fcompl push xchg iret or inc xchg add add sar jl clc aaa je divb scas std je sti cmp cmc ss clc xor (bad) add adc fstps lods out xor nop rclb pop sahf fstl pop cwtl fcomps pop sahf fsubl insl mov cmp lret (bad) int dec mov or lds dec test add mov or movl pop mov jmp jbe add int pop mov lock or (bad) sbb loopne pop lcall cli ds push dec nop rcrb gs sub jmp outsb mov jns std aas jle (bad) aas (bad) ret pop dec nop rcll push xchg aam push xchg fsubl stos in das jno icebp xor repz divb js cli cmp stc cmp cli inc (bad) les inc mov adc insl scas in xor add leave or arpl std inc xchg adc frstor arpl push dec xchg (bad) adc pop cmpsb in xor sar je hlt xor jmp push dec cmpl add pop push mov add cwtl add (bad) (bad) dec nop int3 or mov jecxz push mov add jp divb imul aam dec test in pop xchg rorl jno ljmp movsl loope pop xchg rorb inc (bad) mov out sub loope pop xchg iret or cmc das push loope push xchg iret or cmpl clc xor mov sub out pop cwtl into or (bad) or lret add cmp incl add incb leave or into sbb sub sub data16 into push cmp fcoml cmpl rorb inc jge lock cmpl sbb std xor push xchg fisubl pop mov in pop xchg iret adc xlat add insb sbb lods in pop fcomps pop xchg rorb inc jnp add (bad) pop push mov cli cmp hlt cmp cli cmp add mov divb jnp incl add or xchg aam pop lahf fistpl cmpsl ljmp ret add push fwait adc enter mov loopne dec xorb aaa outsl stos in pop xchg fcoms dec cmpl outsb scas in daa fs fwait or aam pop sahf fbld push jmp insl lods lock icebp das outsl mov aaa jp std aas add inc mov adc xchg rcll push xchg iret adc fcomps pop pushf fstpl pusha mov out imul add incl movb mov pop inc mov adc push push xchg xlat pop pop pushf fstpl pop mov movsb out imul jge std cmp repz ja repz imul int3 pop inc jge repz fistp push cwtl rorl dec test call divb addr16 xlat or sbb ret (bad) cmp in push mov (bad) outsl test sbb (bad) imull imul fwait aam add dec cmpl mov fistp push mov add inc jnp in and jbe,pt call popa popf fistpl pop xchg iret or je in pop xchg iret or mov loop imul or dec xchg push dec mov std xor lods out pop xchg rorl inc cmpb adc sar jb in pop xchg int inc xchg stc inc cmpl dec mov add jnp cmc cs icebp cs in pusha mov sbb xchg fcoms push xchg aad dec xchg add cmpl mov and xchg mov clc sbb pop jnp mov popa (bad) mov jmp inc bound cld cmp in lahf in and int3 or hlt push xchg call sbb dec mov std xor pop lcall imul out aaa jno out es pushf (bad) sbb lods (bad) cmp jecxz push rolb and mov add add in or mov repz push ja mov pop andl imul push js mov pop andb xchg dec insl mov push jne mov std push aas pusha andl lret sub (bad) repz push jbe mov pop jle shl and cmpsb (bad) call jne mov clc sbb pop jl mov add dec jno mov hlt adc add mov pop jg shl and test dec jno mov cmc push ss js mov pop andb xchg dec insb lea push jae mov notb aaa pop jns mov popa (bad) mov dec add scas (bad) icebp adc push je mov negl cmp fwait mov pusha andl lret sub jb mov cmc push aaa pop js mov add movsb (bad) sub add xor xchg mov negl cmp pushf mov popa (bad) mov dec imul jno mov hlt adc mov pop jg shl and enter dec insl mov add mov bound daa inc push or dec outsb mov push jne mov clc sbb pop jp mov popa andl repz push jbe mov stc sbb pop jge mov fild and andl push or lock pop jns mov pop jg ret add dec imul jno mov hlt adc mov pop jge mov bound sub mov push jno mov hlt add cmp sahf mov bound daa inc push or lock push js mov pop jge mov bound in daa inc push or repz push jbe mov stc sbb pop jg shl or dec push lods int3 in push cs jo mov repz push js mov pop jg ret and leave ljmp (bad) notb cmp fwait mov pop andb test dec imul jb mov cmc push ss js mov pop stos add push jae mov stc sbb pop jge shl add dec imul je mov stc sbb pop jl mov arpl dec jo mov hlt push aaa pop jns mov pusha andl mov repnz push ja mov pop jle shl and cmpsl lret in push das push jno mov hlt adc mov pop andb mov or repz push ja mov bound add (bad) repz push ja add add cmp jle shl and data16 dec outsb (bad) mov repnz js mov xchg dec outsl nop mov hlt adc mov bound sub mov push jne mov arpl dec outsb (bad) mov notb cmp lahf shl or dec outsb (bad) mov negl cmp pushf mov bound scas iret lock pop jl mov arpl daa dec imul mov dec outsl add cmp lahf shl and test dec push stos (bad) icebp adc push jne mov clc sbb pop jl mov popa (bad) mov inc push or mov repz ja mov pop andb add das push jb mov notb cmp lcall jg shl and test dec push scas (bad) repnz (bad) sbb pop jg add lahf shl and cmpsb (bad) call lea push jne mov clc sbb pop jl mov test dec push lods into out wrmsr push jb mov notb add loope and test dec imul push jb mov clc sbb pop jg shl and test dec insl mov (bad) sub ret in es mov or mov repnz pop jnp mov popa (bad) mov add add in es mov or icebp adc push jae mov negl cmp fwait mov bound sub lea ss js mov pop jg shl and test jmp (bad) mov icebp adc push je mov sti sbb pop andb mov or dec outsb (bad) scas (bad) icebp adc push je mov clc sbb pop jnp mov pusha (bad) mov inc push lods int push das push jno mov add hlt adc mov pop jg roll or dec push lods int3 in push das dec jno mov hlt adc mov pusha andl enter dec insl (bad) scas (bad) repnz (bad) and test imul mov negl cmp fwait mov pop andb cmp adc jge mov xchg dec insl mov pop jge mov add add sub push jb mov cmc push cmp fwait mov pusha andl iret lock push jae mov pop jg ret in and lret sub (bad) repz push jbe mov pop jg shl bound dec outsb nop mov repz jbe mov pop jle shl and test jmp sub mov clc sbb pop jl mov bound dec outsl (bad) mov add repz push ja mov pop jle shl and cmpsl enter add xchg mov clc sbb pop jl mov xchg dec outsb (bad) mov repnz push jbe mov stc sbb pop jge mov arpl dec outsb (bad) mov repz push jbe mov bound push mov gs sbb pop jnp mov popa (bad) mov dec imul mov hlt sbb add add inc test dec insl mov push jbe mov stc sbb jge shl and cmpsl (bad) call xchg mov cmc push aaa pop jns mov pop jg shl and mov or dec jo mov xlat clc sbb pop jl mov bound sub insl mov push jne mov stc sbb pop jl mov bound sub mov xor ja mov pop (bad) mov push es push or mov hlt adc push ja mov pusha andl lret in or mov negl cmp popf mov test dec insl mov aaa pop jp mov pusha andl lret sub aad pop cmp fwait mov popa andl lret in or mov repz pop jns mov pusha andl add mov jb mov notb aaa pop jns mov pusha (bad) mov dec push nop mov repz push js mov bound sub scas (bad) icebp adc cli sbb add inc xchg dec insb add cmp fwait mov test dec insb lea push je mov clc sbb pop jl mov arpl dec imul js mov popa (bad) mov inc push push mov or cs outsl nop mov repz push ja mov pop jge mov mov or repz push ja mov pusha andl lret sub outsb (bad) mov icebp adc pop jns mov pop andb data16 dec outsb mov push je mov stc sbb add mov dec push lods (bad) icebp adc push jbe mov pop jge mov arpl sub fdivr sbb pop jl mov add stos int3 out adc push jbe mov pop jge mov bound daa pop push scas iret lock push je mov clc sbb pop jl mov bound xor xchg mov notb cmp popf mov arpl dec add mov cmc push aaa pop jns mov pop andb add add add dec imul push jae mov negl cmp fwait mov arpl dec les pop andl lret in or mov stc sbb pop jl mov bound daa dec imul mov repz push ja mov inc test dec outsb (bad) scas (bad) icebp adc push je mov negl cmp fwait mov pop andl lret in or mov add (bad) negl cmp mov inc test dec imul jb mov cmc push aaa push js mov pop jle shl and test les cmp (bad) outsl mov and xchg repnz fcoms inc jl ljmp pop andb les dec xorl dec outsb (bad) mov repnz ja mov pop jg shl and cmpsl enter dec outsl int mov inc xchg add enter dec insl xchg mov negl cmp pushf mov bound daa dec imul mov notb cmp fwait mov add fnsave jp repnz int push mov sti das addr16 dec test std xor ficomp inc test cli aaa insb mov mov sub add cmp mov and or xchg fcoml dec mov clc xor fcoms dec test or mov lock add xor ljmp mov rcll mov pop les dec xchg rolb cmp (bad) or iret or mov das imul add pop mov cli inc test pop dec (bad) iret or push xchg (bad) push push (bad) push in xor or fistpl push xchg rorb xor pop pop lcall sbb xchg cli xor dec cmpl mov pop push mov imull add iret or add xor cmpb xor ljmp and fcompl push (bad) movl sub icebp xor out sub fstps pop fwait (bad) push pop xchg aam dec (bad) rclb pop popf or or mov in pop xchg leave add jnp lock add add mov cmp (bad) std cmp out sub xlat or outsl mov mov sbb cmp loop push lcall jp repz outsb mov sub in pusha fsts push cwtl aam push cltd loope arpl pusha xlat and rorb dec test (bad) push dec test out mov notb cmp mov inc mov lods into out adc push je mov negl cmp pushf mov arpl sub mov jb mov stc sbb pop jge mov arpl dec push lods int wrmsr push jb mov notb aaa pop jns add mov pop andb imul fs fistpl mov in sub mov push jae mov notl cmp fwait mov pusha andl scas iret lock aaa pop jns mov pop andb xchg dec insl mov in sub ficomp xchg rclb pop sarl jne mov xchg fiaddl stos lret in or mov repz push jbe mov pop jge mov bound sub (bad) repnz push jne mov (bad) push aas pusha andb xchg dec insb lea push jb mov cmc push aaa push jl shl and test dec insb lea push jb mov cmc push aaa pop jns mov popa andl leave in comiss xchg mov hlt adc mov pop jle mov arpl dec imul mov push jno mov fsqrt sbb pop andl enter dec insb lea push jb mov notb cmp lcall test dec imul jmp andl into out adc push jae mov notb cmp fwait mov popa (bad) mov dec push lods int pop mov std push aas pusha andl int repz mov pusha (bad) mov sub mov jb mov negl pop andb push or sti cmp push sub (bad) mov repnz cli sbb add inc push lods into out adc push jae mov negl cmp popf mov xchg dec outsb (bad) mov repnz (bad) cmp ret sti xor jmp je ret add dec mov (bad) cmp repz out sub out arpl out stos add pushf hlt data16 lock push je mov clc sbb pop jge (bad) out sub mov jno mov hlt sub adc jg shl and cmpsl enter dec insl mov push jne mov pusha andl lret in or xchg mov clc sbb pop jnp mov popa (bad) mov inc push or push jae mov notl cmp pushf mov popa (bad) mov inc push or add dec outsb (bad) mov repz cli sbb out sub mov jno mov cmc push aaa push js mov pusha andl leave ljmp aad sbb pop jge mov inc push or mov cmc push aaa pop js mov mov test ljmp (bad) cmc push cmp jg shl and shrl cmpsl cmc sub popfw aad mov inc (bad) das scas add add shl addr16 dec jno out imul pop test gs push jne add aad dec lcall aad push cmp pop jg shl and cmpsl enter dec insl lea push jns mov pop andb push or mov repz push ja mov pop jle mov test dec outsl (bad) mov repnz stc sbb pop jge mov test add add out sub mov jno mov cmc push ss jl mov add stos lret in push das push jb mov cmc push aaa pop jns mov pop andb fildl aad dec xchg in push (bad) iret or sbb xchg int push cltd fildll imul mov mov rorl jge in sub rcll push mov stc xor ljmp cmpsl loop pop lcall pop sahf fisub pop add int3 or mov (bad) sti xor loop imul dec imul mov clc sbb pop jnp mov bound sub mov push jno mov pop jg shl and test inc fwait pop pop popf fstl dec xchg or rolb and mov xchg push je mov clc sbb pop jl mov inc mov or add xor mov clc sbb pop jge shl and stos lret in or mov repz stc sbb pop jle shl and test dec imul jb mov stc sbb add inc test dec insl lea push jae mov negl cmp pop andb xchg dec jno mov cmc push ss js mov pop jg shl and xchg add add jmp sub outsl nop mov hlt adc mov pop jg shl daa dec push or mov repz push ja mov pop jle shl mov popa test dec imul imul cld cmp pop xchg lret add jg add xor mov mov (bad) adc (bad) cmp icebp das imul xor mov (bad) aas cmpl in jg or xlat add dec cmpb or inc mov rorl inc jp repnz lret push inc test sbb fcomps pop xchg int inc jnp (bad) cmp js stc cmp clc add les mov xchg aad push xchg fistpl pop scas hlt cmp clc cmp xor in mov inc jl loope push mov clc xor aad inc cmpb or (bad) jp out pop mov sti ss fcoml mov pop inc xchg add cmpb and xchg int aas jns repz loope pop mov lds jae,pt in pusha xchg rcrb jnp repnz fs ficompl push xchg rorb inc test mov in sub adc cmp ret jo loopne pusha fcoml fistp push nop int3 or aas xchg ficomp push xchg iret or sar jb jmp push push xchg into or xchg rorl inc jge out es xchg rolb cmp dec xorl stos loop push mov movl sub in bound out add cmp cmp and xchg lret mov out sub lea push ja mov pop jg shl and cmpsl enter dec jae mov notl cmp fwait mov bound daa dec push or insb test bound mov dec jae mov negl cmp fwait mov pusha sbb jb mov add fsincos add inc bound daa dec push or dec outsl nop mov hlt adc mov arpl dec imul mov hlt adc push ja mov pop jge mov bound sub lea push je mov negl cmp pushf mov arpl sub mov dec jo mov xlat stc sbb andl lret sub roll add add adc push jne mov stc sbb pop jl mov arpl daa dec push lods (bad) repnz stc sbb pop jl mov arpl push mov sti xor fstl inc jl in and fsts sub sbb inc jl repz data16 fstpl pop xchg rclb pop xchg aad xchg cmc aaa add jecxz test cmp movsb (bad) sub mov js mov pop jle shl and cmpsb add call mov push jno mov hlt adc mov pop jge ret and leave ljmp (bad) icebp adc push jne mov stc sbb pop jl mov popa (bad) mov dec push lods int (bad) cmp fwait mov pop andb xchg dec insl mov push je mov stc sbb pop jl shl mov repnz popa xchg iret or mov insb test fs add add mov dec insl mov push je mov negl cmp fwait mov pusha subl stc sbb add inc xchg dec jo mov add sbb pop jl mov bound es insb lea push jae mov dec mov adc ss ljmp test loop push mov divl outsl movsl ficom dec test aam imul push add pop cwtl int aas js in push clc ds lret xchg or ret jae lock push mov incl inc add out and cltd xlat pop pop lahf fcompl pop cltd fcompl push (bad) (bad) pushfw (bad) cmovbe idivl jno fcoml xor cli cmp hlt xor out sub mov stos int3 in push das push jno mov hlt adc mov pop andb xchg push je mov negl cmp popf add add bound daa dec imul push ja mov pop jle mov mov or aam push aaa push jns mov pop jg shl and test dec jae jnp,pt lock pop push mov call sahf mov call clc aaa jb movsb in and insl pop mov add jmp mov push jl mov bound daa dec imul mov repz push jbe mov pop jl mov inc push adc mov xor lcall andl mov push je mov clc sbb pop jl mov test push je mov clc sbb pop andb xchg dec outsb (bad) mov repz push ja mov pop jg shl and mov jae mov negl cmp add pushf mov bound dec imul jbe mov rorl inc jg adc test dec imul push jne mov stc sbb pop jle shl and cmpsl enter dec outsb (bad) mov repnz jne mov pusha (bad) mov dec imul mov hlt adc mov pop andb mov icebp adc pop jp mov bound add out sub mov jb mov notb cmp pop dec insl mov push jne mov stc sbb popa andl lret mov mov or test dec outsb (bad) mov hlt adc ret es push wrmsr push jb mov notb cmp pushf mov arpl sub (bad) mov hlt adc add loope and mov push jbe add pop jg ret es push wrmsr push jae mov clc sbb pop jg shl and mov adc push jae mov negl cmp popf mov data16 dec jo mov hlt adc mov pop andb insb add cmp popf mov xchg dec outsl nop mov repz push ja mov bound sub mov pop jl cs add add sbb stc xor in and add jo ficoml push pop cld xor popa mov lock stc dec mov or aam pop fstpl arpl lock (bad) jg,pt or mov frstor pop pushf fsts dec mov adc movl sub stc xor je in daa push repnz sub call cmp mov or fstps lods out xor sti cmp loop add sub jmp inc (bad) rclb pop cltd fstps bound lock add inc mov or xorb pop sahf in add stc cmp push inc (bad) mov in sub cmpsb out jb in sub clc xor test add dec (bad) into push push sahf fistp push clc cmp cld inc add push xchg aad bound xor (bad) les inc mov push dec xchg fstps pop popf loopne fs out ss adc fistpl pop cmpsb out imul adc cwtl fsubs push popf loope cmpsb jmp jae cli cmp mov adc sub mov xor mov or into adc aad pop mov jmp stos out xor lock mov sub or adc arpl fistpl pop xchg aam dec mov add xchg xlat push pop mov repz sti cmp (bad) or nop aad pop mov adc add stos lock inc cmpb push pushf fistp sahf in arpl (bad) adc (bad) aad pop lahf out jo cli aas add dec xchg rcll push xchg fstps cmpsb ljmp mov push push xchg (bad) sbb jecxz outsl scas out aaa jp cld inc mov or cltd loope imul sbb jne xchg jae,pn in daa pop xchg lret jno out popa fwait rorl dec xchg int3 or scas jecxz push mov rclb dec cmpl pop mov mov add jno ljmp xchg xlat imul push je mov clc sbb pop jl mov imul mov hlt adc mov pop jg shl and xchg dec insb lea push movsb (bad) ss mov add mov pop jle mov arpl dec imul mov repz cmp fwait mov popa (bad) mov inc push or dec outsb (bad) mov repnz clc sbb pop jnp mov popa test dec imul jno mov hlt adc mov pop andb mov mov cli arpl ljmp xlat clc sbb pop jnp add jecxz and xchg dec insb lea push jae mov notb cmp lcall jle ret in add add test dec insl mov push jae mov negb cmp fwait mov pop andb xchg dec jo mov repz push jbe mov add movsl (bad) out sub mov jo mov repz push jbe mov mov jno mov hlt adc mov pop jge mov arpl sub lea push jae mov negl cmp add add lahf shl and test dec push stos int3 in push das push jo mov hlt adc mov pop jle mov mov dec outsl nop mov cmc push aaa pop js sahf mov arpl das pusha (bad) movsb (bad) sub mov push jno mov cmc push aaa pop jns ret and leave jmp sub (bad) repnz ja mov pop jle shl and test dec insb (bad) mov repz cmp fwait mov popa (bad) mov inc push pushf mov test dec insl mov push jne mov stc sbb test dec insb lea push je mov clc sbb pop jl mov test dec insl mov push jne mov test dec insb lea push jne mov stc sbb pop jge mov test dec insl mov add cmp pushf mov arpl dec imul pop jp mov popa (bad) movsb (bad) sub mov jae mov popa adc imul xchg mov stc sbb pop jl mov popa (bad) mov dec imul mov negl cmp pushf mov bound es imul xchg mov pop jge mov bound es imul clc sub outsl nop mov repz push ja mov pop jg shl and cmpsb (bad) call lea push jns mov popa andl imul mov hlt adc mov pop jle shl and test dec outsb nop mov hlt adc mov pop jge mov dec imul mov hlt adc mov add cli sbb andl lret sub outsb (bad) mov repnz cli sbb loopne and test add dec imul mov pop jle shl and cmpsb (bad) call jno mov notb cmp lcall (bad) mov dec imul jb mov notb cmp fwait mov pusha andl int push xor xchg mov add add sbb xor in inc jno mov notb cmp popf mov arpl dec imul push jb mov cmc push aaa pop jns mov xchg dec insl mov push je mov clc sbb pop add push lods into out adc push jae mov jmp xor popf ret in es push or mov cmc push cmp pushf mov bound sub mov jp repnz lock cli sbb pop jge mov bound daa dec push stos int3 in or xchg mov pop jge mov bound sub scas iret out adc push jb mov notb aaa pop jns mov pop jle shl and test dec push lods int3 out adc sbb cmp popf mov arpl dec imul jae mov clc sbb pop jl mov add fild and test push jno mov cmc push aaa pop jp mov bound sub mov cmp fwait mov pusha andl iret lock push je mov negl cmp pushf mov bound dec insb lea push je mov stc sbb pop andb imul jb mov notb cmp pushf mov arpl dec push xchg mov cmc add add aaa pop jns mov xchg dec insl mov push je mov stc sbb pop jl mov xchg dec outsb (bad) mov repnz push ja mov test jecxz cs jb mov cmc push aaa pop jns mov pop jg shl and mov inc bound dec jo mov hlt adc mov pop andl imul mov add jmp add add lret add push out stos in je stc sbb pop mov and cltd aad cmp mov es cmc sub call pop push mov add jns cli cmp sub in sub loop bound iret or leave pop inc add (bad) cmp cmpsb fistp push mov (bad) cmp aaa jo in mov les push cwtl loope insb mov cmp enter inc xchg leave add movsb loope push xchg rorl dec cmpl add imull mov add rolb iret adc fstps pusha mov rorb inc jns cli cmp add aad pop lahf fbld fbstp mov loop and xchg push jae mov notl cmp fwait mov pusha andl leave ljmp rolb cmc push aaa push js mov popa (bad) mov inc xchg or icebp adc push jne mov negl cmp popf mov add add andl imul mov notb cmp lcall jg shl and mov dec jae inc js mov inc test dec outsl nop mov repnz push jne mov clc sbb pop jnp xchg mov test dec jo mov cmc push aaa pop jns mov push push das push jno mov negl cmp popf mov arpl dec insb lea add adc push jne mov stc sbb pop jle (bad) in daa dec imul mov negl cmp jle shl and xchg sbb (bad) (bad) cmp add xor out and leave cld push inc pusha andl lods into out adc push jb cwtl mov pop jle shl and test dec imul push js mov pop jle shl and test dec push stos int3 in push cs jo add sub push daa dec imul mov stc sbb pop jl mov popa andl pop inc cmpl leave cld cs xchg (bad) cli cs xchg leave or mov mov mov sbb call dec xchg aam pusha test sub int3 and adc adc fsubrl lahf in pop lcall sub fistl push mov add jb jecxz pop xchg int jnp,pt add add add mov ss incb scas jecxz dec jge loope push test mov pop add movsb jecxz cmpsl jmp add push push mov sti aas xchg daa jl and push movsb in xor pop lahf in insl mov xor pop xchg lret add jae ljmp jge out daa popa pushf aad insb scas out pop nop (bad) sti xor popa cmpsb call or jl call add jb out bound enter add aas jge repz outsb cmpsl loope pop cltd (bad) adc arpl movl push movsb adc inc mov or lret cmpl aas mov or loopne popa out jnp add rcll pop pushf fbld fs es cli cmp add int dec xchg fbld push mov adc fstps gs add pop lcall add loopne pop xchg (bad) adc xchg into or ret add test sub std dec xchg in jl and or in xor int3 adc sti inc mov pop insb lods lock add pusha cmpsl out cmp inc xchg in je sbb add mov xor sahf mov cwtl fldenv jle shl and cmpsb enter dec insl lea push jne mov stc sbb pusha (bad) mov inc mov dec cmpsb and clc ss in pop cltd aad pop cltd fildl add dec nop into push dec (bad) loope pusha sahf aad dec add imul mov ficomp push mov std ss loop push nop int3 push inc jnp lock mov ficom push mov cmc sub loop pop xchg (bad) adc fistpl pop xchg into add sbb cmp lods add and lret add outsl test sbb xchg aad inc jle in and xchg int inc jg divb push mov add popa xchg rorl inc jge jmp pop inc (bad) mov fcoms dec test divl push cmpl incb shll jl divps sbb stos idivb mov pop lods repz hlt cmp in sahf icebp inc mov sub or out xchg sbb cmc cmp mov xor push pop test ds and add add inc (bad) loope sbb imul xchg fbstp (bad) rcrl addr16 cmp js stc ss add in push xchg int3 or cmc xor call add outsl scas out push pop (bad) aaa outsl cmpsl loopne push mov fcoml sub push ficoml dec (bad) mov into add mov iret pop aas js lock out arpl lock rorb inc jl out es xchg rorb inc jl in and cmp pop xchg lret jbe ljmp jnp jmp pop xchg iret or mov and xchg int ja,pt call add add push nop leave add jae in pop xchg leave add jb in push mov sti aaa jo in push mov cld xor and rorl inc jp call add jbe jmp popa sahf xlat adc (bad) (bad) cmp jmp pop pusha movsb loopne mov bound sub add fsubs lds push fwait loopne insb mov dec mov sbb cmpsb out ss push xchg frstor xchg aad insl mov pop scas clc cmp popf jecxz jne incl leave or add lcall aaa or pop test mov push pop mov or rcrb pop mov pop dec (bad) into adc test cmp incl rcrb addr16 cmp std inc mov push push fldenv pop xchg lret jnp in sub (bad) (bad) cmp out mov cmp add xchg ficomp pushf ficompl lods cli inc mov rorl jne,pt jecxz pop xchg int inc jp repnz rorl inc jl jmp pop xchg rorl jge icebp sub aam add test adc stos loope push (bad) leave push inc cmpl int3 pop inc jnp icebp sub lahf fistl push xchg int3 add sub fcompl push xchg into or or mov mov int3 push aas jp out sub sub movsl loope push xchg rcll dec mov add jl cmc xor loop pop xchg rorb dec (bad) or add je call or (bad) mov int3 push dec test sti xor cmpsl loopne push (bad) or mov fistp add leave add sub push (bad) add ja jmp pop inc cmpb and or mov sub (bad) adc mov loope push (bad) enter lods out pop int xchg aad inc jg hlt das outsl cmpsl loopne push mov std outsl stos out daa pop pushf xlat push push xchg iret or sub cmovs xchg rorb push xchg lret add inc jle out sub icebp sub movsb fbld pop xchg roll cmp pop xchg into push inc test add cmp mov das data16 (bad) or mov and add adc mov aam jp,pt stc cmp in and lret mov (bad) cmp jecxz push xchg int3 add jo pop pop nop movb jae jecxz push mov add jge out and inc jns jmp push jns,pt out daa popa lcall sub iret or mov add mov es xchg into pop aas jg icebp sub aam inc jle (bad) cmp in push nop leave add ja,pt jmp std xor mov mov sbb das addr16 xlat push inc cmp mov sub rorb inc jl in dec cmpl iret cmovp aad inc jp jmp add jno loopne and xchg rclb dec mov lock xchg int3 add insl mov mov aam inc cmpb dec test flds sbb sar ja jmp pop xchg rorb jg hlt sub lahf in imul add int3 xor pusha cltd aam dec test jecxz push (bad) movl xor out pop cltd aad dec mov or jmp jne in daa bound or ss in and cmp lods in pop sahf fcoms push (bad) leave add ja out pop xchg cltd ficomp push xchg int inc jg aaa and pusha sahf fstpl push xchg int inc jg idivb jne lock out push loope push pop cld xor stos out pop cltd rorb dec add xchg std add loopne jbe out sub ficoml pop xchg rorb inc jg imull push loope pop xchg into add xchg iret or mov in data16 int3 add das imul add jns repnz xchg int3 pop add (bad) aas js out sub in pop xchg rorb inc cmpl aad dec xchg add jns xor repnz pop lcall inc jle cld dec xchg sti xor sbb add (bad) (bad) cmp out pop xchg int inc jnp icebp sub movsb push push xchg int3 pop inc jnp out daa pusha cltd rorl inc cmpb push inc cmpb adc mov fistl push fstl xchg sti aaa outsb cmpsb fistp push mov std cmp pop xchg int inc jp ljmp cmpl and pop inc ja in es popf (bad) adc mov in test sbb push xchg enter mov addr16 adc test ficoml dec cmpl dec xchg cli xor fistl xchg rorl dec jg xor lret add cmp out sub in arpl (bad) sbb and mov xor mov andnps out das jo clc cmp xor push out push xchg int3 add jae jmp inc xchg jmp sub clc inc fwait add stos (bad) push mov jae or add dec xchg or add aas je call stos (bad) cmp push mov (bad) cmp jmp or mov dec (bad) shlb addr16 das imul sub das jo in sub stos jmp icebp sub lods in sub scas repz cli cmp jecxz push (bad) pop cmp arpl mov iret or lds inc jle incl les jg cmp ret (bad) cmp clc cmp jo lock test or mov das fs add add add fs rcll push xchg xlat sbb movl lret pop inc (bad) sar ja hlt xor out sub fsts mov or mov mov rorl aas jbe in push xchg in sub hlt cmp lock cvtps2pd sbb mov or outsb mov xor loope pop nop enter stos in cmpsb sbb aad inc jle out sub xlat adc mov cld jg,pt push inc mov add inc jg std aaa insb movsl loopne push mov std xor cmpsb fstl cwtl into add sbb (bad) std ss mov scas in and inc jp mov (bad) cld xor sahf rolb cmp fistl cmpb or mov sbb push nop rclb push nop aam mov test xor inc xchg or rcll push push xchg rorl dec mov or ret int3 cmp movl dec (bad) mov add add jecxz gs dec popf jecxz and xchg fcomps jb jp pusha sahf loope cmpsl in pop xchg rorl bound lret jae in pop xchg into pop inc (bad) mov add mov push inc cmpb (bad) xor dec (bad) mov rorb inc (bad) mov rorl inc jge ljmp jbe in push mov clc sub aas mov rorl inc jns jmp xchg lret jo ficompl add add inc add xchg int3 add lds dec (bad) rclb push pushf loop je stc cmp mov sub (bad) pop insl mov ss clc add jmp jb call xchg push mov or jns in and cmp push xchg aad pop cltd loopne push mov std cmp repnz movb jne in pop xchg int insb int3 cmp mov sub lods jmp sub aam cmp (bad) adc scas loop inc jl loop inc jns loope inc jp jecxz addr16 jmp adc jns sub adc xlat dec xchg out cmp xor hlt xor sbb lret add je in es lcall add test rcll push nop rclb pop xchg (bad) std xor leave sti das gs lret std xor jo fmuls jno,pt (bad) cmp pop dec ret or adc in insb mov aaa jp pop dec lahf incb add add fsubrs jno add loopne add add fisubl mov rorb inc jp out sub cmovbe mov (bad) or mov or leave add push into add gs add cwtl lret pushl gs iret pop pop lahf sbb stos repz or fsubl fs add in jle pop jae adc adc jmp outsl mov cmp pop mov or mov ficoml jbe,pt call add add push dec cmpl out xor add lcall inc lcall movsb cld dec add push push xchg xlat sbb jecxz pop xchg rorb inc jle lock fstl dec add lods out pop xchg int inc (bad) roll test add push rorb cmp fimull inc lahf pop mov cli xor enter xchg leave add add adc cwtl fstpl popa stos out ds sbb ljmp add jmp sub add or add dec xchg int inc jge out sub iret pop inc jge hlt cs (bad) adc mov fsts push xchg aad push cltd fmuls adc call out dec jg jecxz dec jg in imul dec (bad) fistpl push sub cmp push popa stos stc cmp mov add js in es xchg into or repz fwait rorl inc imul dec (bad) aad pop mov adc lret popf in cmpsl jmp sub aaa imul clc sub lahf aad inc jg divb jo ljmp xchg iret or (bad) sbb cmpsb out pop rcrb rclb dec mov cld imul adc roll mov cli xor out pop xchg aam pop mov aad push xchg lret jbe inc addl (bad) or roll jge in sub lock frstor pop cltd rorb inc test cld cmp add add loopne pop pushf fstpl push mov add movsb jecxz and lret je in push mov pop inc jge out es xchg iret or je call divb insl cmpsb out arpl roll jnp cmp movsb out imul fsubs pop sahf fistp dec xchg or add ss loopne dec mov add jno push cwtl ficompl inc jg cmc cs mov lds aaa jne divb outsb mov add hlt xor in push mov hlt daa pop xchg lret jge out sub fsts inc cmpl adc int push mov stc sbb pop jge mov push lods int wrmsr push jno mov cmc add cmp jle shl and xchg dec insb lea push je mov clc sbb pop jl ret es push mov popa (bad) mov dec push add push ja mov pop jg rcll add jne (bad) cmc push aaa pop jle shl and test jmp sub (bad) repz push ja mov pop jle mov test inc popa (bad) mov dec insl mov push je mov clc sbb pop jnp mov bound daa dec imul mov repnz jp mov popa (bad) mov inc mov or icebp adc push je mov stc sbb pop jge mov add add add inc bound movsb loope pop xchg into or mov and dec outsb (bad) mov repnz cld sbb pop jg shl and xchg dec jb mov clc sbb pop jnp mov bound daa dec push lods push arpl cmp pushf mov bound sub (bad) mov hlt adc mov out adc push je mov clc sbb pop jl mov test dec add add mov repnz jmp inc bound sbb pop jnp mov bound sub lea push jae mov negl cmp pushf mov imul mov cmc push aaa pop jns mov arpl dec imul jae mov negl cmp mov inc xchg dec insl mov add pushf mov bound sub mov add add push jb mov stc sbb pop jle shl and test ljmp (bad) icebp adc push jne mov stc sbb inc popa (bad) mov dec imul mov clc sbb pop jnp movl pop andb xchg dec insb lea push jb mov clc insb mov outsb (bad) mov repnz push jne mov clc sbb pop jnp mov pusha andl lret in or add add add add dec jo mov mov insb mov push je mov negl cmp fwait mov pop andb xchg dec insb lea push jb mov stc sbb pop jl mov popa (bad) mov inc mov or xor xchg mov notb aaa pop jns mov pop jle mov xchg or dec outsb mov push jae mov notb aaa pop jns mov pop jle shl add daa dec imul mov cmc push aaa pop jns mov pop daa dec imul mov cmc push aaa pop jns mov pop jg shl adc add jb out pop xchg iret or ret add jae jecxz push xchg es cmpsl loop push (bad) fsts inc cmpb adc inc mov or int3 push dec cmpb and (bad) (bad) cmp out push xchg xlat adc push nop int add add movsl divb jle add into or or aam dec mov or sar (bad) sar add dec mov add adc aad dec nop rclb push xchg aam push xchg rorb bound loop mov fistpl pop sahf ficomp pusha mov sub ret jns out and test aas add or in inc xchg fisubrl jb adc cmpsl testl sbb pop pop movsb cmc push xchg repnz mov add add push jb mov notb cmp mov inc data16 dec insl mov push jbe mov stc sbb pop jl mov arpl dec insb mov or lock push je mov clc sbb pop jle shl and test movsb cmc xor sbb mov push jne mov pop jge mov arpl push cmpsl push or jmp bound add add sub mov sub cld inc jl divl je repnz leave or lods add sub lahf loopne jbe or sbb xlat adc mov fstl push mov add inc jg repnz push mov std jae sub popa mov fstl inc jns loopne push cltd int xor aaa add leave std xor icebp xor cld inc mov push lods out xor mov dec xchg jmp (bad) shrb ja or mov or cwtl stc inc add push xchg rorl dec test jecxz pop xchg iret or mov es cltd aam dec cmpl cmc daa pop mov imulb pop pop divl fs lret fs enter xchg into add les dec nop fistpl push cmp xchg aad imul test xor loopne jbe add aam push fwait aad imul mov sub aad dec cmpl lock sub (bad) stc sub xor leave add data16 cmpsl fcoml dec mov adc mov incl rcll pop popf loopne nop call pushf in test adc lock adc loope insb mov es cltd rorl iret aas jg icebp imul in arpl adc ficompl ret sbb in xchg xlat or outsl movsb (bad) pop cmp mov in insb mov ds push pop lahf loope add and xchg xlat and lods pop gs push nop in (bad) shlb ja or aad pop xchg rorb inc jle out sub aad dec test fistl outsb test arpl cmpsb ficoml inc jns in jns dec nop ret pop mov cmc sub cli bound fistpl lods hlt cmp jmp pusha mov push cltd jmp sub outsb cmpsb fistp push mov (bad) cmp and fstpl pop lahf loop outsb mov outsb mov mov mov popf rolb xor (bad) iret pop pop mov add in inc cwtl loopne jg and imull adc mov sbb mov or push nop int3 add es pushf (bad) adc cmc cs mov sti cmp cmc sub xchg enter xchg (bad) pop xchg (bad) imull pop lcall divb incl int dec scas clc addr16 jb and add pop push fwait add fnsave lcall sub sbb ret sti xor divl imul out push nop leave add jns pop inc jge repz icebp ss imulb pop nop (bad) imull pop nop into add cbtw lret incb cmp arpl fcomps pusha mov push push xchg fisubl pop popf fdivrl in mov cltd lock fnstenv jnp or xchg fstps cwtl aam dec cmpl sar xor fistl xchg sti xor cmpsb jecxz pop popf loope bound out dec mov sub ret pop nop ret pop xchg ret std aas adc sub sti inc xchg (bad) sbb cmpsl jmp addr16 scas jle sub add sbb ficomp push nop lret inc lret or cmpb adc mov jmp aaa jno loope dec cmpl xchg enter xchg (bad) cli sub imul add push push fwait loop outsb mov xor outsl in mov push pushf in aaa jl sbb stos cmc aaa jbe call inc (bad) int push mov rorl sub mov fmuls inc scas cld cmp (bad) or dec mov sqrtps inc xchg adc ficomp pop cmpsb ljmp adc stc ds jp or or insl mov cmp mov out sub (bad) adc add movsb fstl cmp sub out sub in and in and in pop push test loope lods lock (bad) or mov sti inc mov add xchg add (bad) or push pop sahf fstps mov in push movsb in mov in and cmp push xchg lret or xchg int3 or (bad) or std push lds dec mov adc adc nop leave add inc xchg pop add add fcoml inc jae fistpl pop xchg aad push mov pop inc jle std inc xchg or pop rcrb pusha mov clc pop mov and push nop hlt cmp decl fcompl pop sahf fcoml push mov adc leave add pop mov ret cmpl mov xlat push inc jp out pop cltd iret or scas call cld xor fcoms push mov clc xor loop push mov clc xor aad popa lcall imulb push add inc jge call cmc sub pop xchg lret adc mov hlt sub fistp pop lcall pop mov movl mov and loope jge cli ss and (bad) insb mov add ret insb mov jbe,pt lock add popa xchg rorb inc jns lock ficom pop xchg lret jp out sub xlat push dec xchg add outsb stos out push (bad) enter ret add add cmp out push mov add add cmp sub movsl ficom xchg ficompl arpl sbb mov add rcrl pop xchg fcompl js shl and data16 dec outsl nop mov lock push jne mov test dec insb lea push jae mov stc sbb pop jge mov add stos lret in wrmsr push jno mov hlt adc mov test dec push lods int add add das push jno mov cmc push aaa pop jns mov pusha andl iret lock push je mov clc sbb pop jge mov aam inc jle cmc cmp adc push jbe mov pop jg shl and mov push jb mov clc sbb jge mov test dec insl mov add inc xchg dec jo mov cli sbb jg ret and int3 in push mov add or outsl (bad) mov repnz push je mov stc sbb pop jl mov arpl dec jo mov repz push jbe mov add inc arpl dec imul push jb mov fdivr sbb shl and imul push jb mov cmc push ss jns mov pop jg shl and cmpsl enter dec insl mov push jne mov popa (bad) mov inc mov or sub insl mov push jbe mov inc test dec outsb (bad) mov icebp adc pop jp mov pusha andl (bad) icebp adc push jne mov pop jg shl and test dec outsb mov js mov popa (bad) movsb (bad) sbb int3 repnz push ja mov pusha andl into lock push jne mov add cwtl in adc push jbe mov pop jge add mov arpl sub mov push jno mov add sbb jg ror sbb pop jl mov bound daa dec imul mov hlt adc mov pop jge mov mov or dec outsl (bad) mov repnz push jne mov clc sbb pop jl mov popa (bad) mov sub mov repnz push jne mov pop andb xchg add add ljmp (bad) repnz clc sbb pop jnp mov popa (bad) mov dec imul push jno mov hlt adc push ja mov pop jl mov bound dec push stos int3 in or mov xor sub jbe mov pop jle shl and cmpsl enter cmpsl sti and andl mov mov repnz pop jge mov test add or dec push stos int3 in push cs jo mov (bad) cmc sbb pop jle shl and xchg dec jb mov cmc push aaa pop jp mov bound sub mov push jno mov hlt adc popf mov bound sub lea push jb mov cmc push ss js mov pop jg shl and cmpsb (bad) call repnz std and iret lock push jae mov testl add add cmp fwait mov popa andl (bad) repnz stc sbb pop jl ret and leave jmp mov push jae mov mull sbb pop jge mov arpl sub mov pop jg shl and in ss ja mov pop jle shl and test dec imul push jno mov cli sbb fisttpl sub add mov repnz cli sbb add inc arpl dec add mov hlt adc mov arpl dec imul mov hlt adc push ja mov pop jle mov test dec insl mov push jae mov notb cmp lcall jg shl and cmpsl enter dec insb mov push jbe mov stc sbb pop jl pushf mov popa andl mov push jno mov hlt adc mov pop andl scas (bad) hlt inc mov js mov pusha andl iret lock push jne mov scas or pop jp mov pusha andl lret in push das push jo mov hlt adc mov popa (bad) mov testb aas data16 dec outsl nop add push ja mov pop andb push or mov hlt adc mov test dec insb lea push je mov clc sbb pop jl mov arpl dec insb lea push jp mov xchg mov pusha test sbb mov rorl push (bad) outsb cmpsb loopne jae call or or or scas loop add add cli dec xchg adc add cmc jp (bad) aas jp hlt xor incb add add (bad) jmp inc arpl dec cltd in stos call or jb add pushf (bad) sbb fldcw jbe and int3 add jbe (bad) cmp jle repnz ficomp pusha fwait aam dec xchg cmc sub and ljmp int3 push push xchg rorb dec xchg aad push cmpsb in ss sti cmp ficoml xor mov add sbb pop jle shl and cmpsb (bad) call mov push ja mov pop jg shl and imul push jae mov notb cmp fwait mov pusha andl leave ljmp arpl scas call adc mov roll push dec xchg clc cmp jmp pop (bad) add jne divb insl mov es imul mov clc push inc popa andl add add sub mov jae mov negl ds andb xchg dec jo mov notb cmp fstpl push add xchg mov negl cmp pushf mov rcll jnp or mov hlt push aaa push js mov pop jle jecxz pop lcall sbb sbb nop fisubl pop xchg into or mov incl fisubl insl mov sub cmc cmp into outsb mov inc xchg add add sub loope pop xchg iret or mov add int3 es outsl (bad) mov repnz stc sbb jge mov arpl das push jno mov hlt adc mov inc arpl dec push lods int3 in push das push jo mov repz xchg and mov (bad) out sub mov push jbe mov pop jle shl and add ret add jle divb imul out xor xchg mov add xlat clc sbb pop add xor xchg mov cmc push aaa pop js mov pop jg ret and int3 in or mov stc sbb pop jl mov popa (bad) mov inc xchg or dec insl lea push jae mov cmc push aaa pop jg cs xchg int3 add outsl cmpsb fcoml dec test fcoml push mov add jbe out pop xchg rorb inc xchg add das jno cli xor mov xor insl cmpsb loopne pop xchg aam dec add xor add aaa jge cli xor and mov (bad) in sub mov insb xchg mov hlt adc mov pop andb mov or dec jno mov cmc push aaa pop add shl and xchg push jae mov negl cmp pushf mov arpl dec imul jae mov negl cmp popf mov add add sub outsb (bad) mov repnz fild and test dec imul je mov clc sbb pop jle ret in daa dec imul mov stc sbb pop jge mov test dec insl mov push jne mov stc sbb pusha andl inc add dec insb lea push jbe mov pop jg shl and insb jecxz arpl add add insb mov mov loopne pusha push mov pop jg shl and cmpsl (bad) call lea aaa push js mov test dec push lods int push das push jo mov hlt adc push ja mov pop jge mov arpl sub (bad) mov repnz push jne mov clc sbb pop jnp or add rclb push xchg lock inc arpl dec push lods int3 in push das push add add mov pop jge shl and cmpsb (bad) call mov push jno mov cmc adc mov pop jg shl daa dec imul mov repz stc sbb pop xchg stc sbb pop jge mov test dec insb lea cmp dec sahf (bad) clc sbb add inc xchg dec insb lea push je mov clc sbb pop add add sub scas iret lock push jae mov notb cmp lcall andb xchg dec insl lea push ja mov pop jle mov test dec add mov hlt adc mov pop andb xchg jno mov clc sbb pop jl mov arpl daa dec imul mov repz push ja add mov pusha andl lret sub outsb (bad) mov repnz push jne test push jo mov hlt adc mov pop test dec push lods int3 in push das push jo mov repz push ja mov pop jge mov arpl sub lea cmp mov bound daa dec imul mov icebp adc push je mov negl cmp lcall add add std sbb (bad) in daa dec imul mov repnz push js mov inc test dec imul push jb mov stc sbb pop jnp mov popa andl leave ljmp iret lock push jae mov notb aaa pop jns mov bound daa dec imul mov negl cmp pushf mov arpl dec insl lea adc push jae mov stc sbb pop jl mov test dec push outsb cwtl mov bound sub mov jae mov cld push inc popa (bad) mov sub scas (bad) lock push jae mov clc sbb pop jnp mov bound sub mov dec je mov clc sbb pop jl mov arpl dec imul add pop jl mov add and test dec outsl nop mov repnz jne mov stc sbb pop jl mov bound daa dec push push cs jo mov hlt adc pop jnp mov popa andl push or dec outsl (bad) mov repnz stc sbb pop jle shl and test push jb mov notb aaa pop jns mov pusha andl lret sub (bad) repnz add add xchg mov pop andl scas iret lock push jae js (bad) sub mov push jo mov hlt adc push ja mov pop andl mov dec jo mov repz push jbe mov pop jl mov inc mov or hlt adc mov pop jge mov bound es push or mov repz add add stc sbb (bad) mov dec imul mov repz push jbe mov pop jg shl and test dec push lods (bad) icebp adc push je mov negl cmp fwait mov bound daa dec imul mov cmc push ss js mov bound sub mov pop jns mov test dec push stos int adc push je mov stc sbb pop jge ret in sub mov push jno mov int3 out adc push jb mov negl cmp pushf mov push cmc aaa jne repz pop xchg lret insl movsl fcoml dec mov imull push mov cli ss movsl fcoml push mov adc dec nop enter mov daa push (bad) mov leave cld das bound movsl fbld popa pushf fsts dec mov push inc jge out and rorb dec xchg add add add mov add leave cmovge rorl jg out sub fcoml dec mov push inc test or mov in bound (bad) int3 cmovle in outsb mov cmp jae,pn cmc cmp cmp (bad) rcrl mov ds adc xor incb (bad) std xor outsb mov xor call sbb aad movsw lret sub (bad) repz push ja mov pop jg shl add int3 in add xor mov bound daa inc push push das dec jo mov repz push js mov pop andb xchg push jb mov cmc push aaa pop jp mov arpl dec push scas iret repnz js mov bound daa inc push es imul mov clc sbb pop jg shl and xchg pop push add ds andl xchg mov notb cmp lcall (bad) mov sub (bad) repnz stc sbb pop jge mov bound dec outsb (bad) mov icebp adc push jbe mov pop jg ret and lret in or mov hlt adc push ja mov inc push push xor cwtl mov bound daa dec imul mov (bad) repz mov popa (bad) mov dec outsb nop mov repnz jbe mov pop jge mov arpl dec imul jae mov clc sbb loope and test dec imul push je mov stc sbb pop jle shl cmc sbb pushf mov pusha subl iret lock push jae mov negl cmp fwait mov inc test add or dec push lods int3 in push das push jo mov repz cmp lcall jg shl and test dec imul mov repz push jbe mov stc sbb pop andb dec push stos int3 in or mov repnz push je mov negl cmp lcall andb data16 dec outsl (bad) mov icebp adc push je mov notb cmp lcall jg shl add add inc test dec imul mov cmc push aaa pop jns mov pop andb data16 dec jo mov repz pop cmp mov arpl push jne mov negl cmp pushf mov or test add add adc push jae mov notb cmp fwait mov popa xchg dec outsb (bad) mov icebp adc stc sbb pop jge mov arpl add movsl (bad) out sub mov push jae mov cli sbb pop jg roll or dec imul push jne mov stc sbb jg clc inc jle sbb (bad) mov inc push or mov pop jle shl and test dec outsb (bad) mov repnz sti sbb add inc stos hlt push shrl popa xchg into push cmp fimull inc jl jmp (bad) cmp jns or stos fiadd add add mov lret cmp int3 push inc (bad) mov aam mov imul (bad) (bad) cmp in pop rclb xchg rclb push mov add push xchg into add insl stos loope push mov cli xor pop push nop int inc test std cmp ljmp mov cmp cmp fcompl jns das insl cmpsb ficom push mov add cmc (bad) xchg push (bad) add xor and into or mov dec pushf xlat or cmp loope push xchg add ja repnz jmp mov fcomps popa mov stos in pusha pushf rorb movsw in sub lock clc xor movsl loopne pop mov cli cmp je idivl jge push sub mov jb mov notb cmp lcall andl lret xor mov clc sbb pop jl or leave add dec xchg cmc sub add add leave or js mov and loopne sub xchg mov notb cmp adc adc movb jge cmc dec jb mov daa jnp clc xor loop push mov aad inc test in pushfw (bad) push inc jge out es mov test imul xlat sbb fcoms pop cwtl aam inc jnp ljmp (bad) int cmp lock insb cmpsl jecxz push (bad) movb jbe out das jno in cs stos in sbb jmp add mov push inc add xor dec mov add cmc xor mov sub loopne push xchg rclb xchg inc mov or jb adc loopne pusha mov or aam lods sub xor call add push mov sti xor aad inc js out sub outsb mov add add inc mov push jno mov cmc push aaa push js mov pop jg shl and add xchg dec imul jae mov negl cmp mov inc xchg dec insl mov ss js mov pop andb xchg sub mov mov push xchg sbb (bad) call and push jbe mov pop andb push push cs jno mov pop andb push push das push jno mov add aad pop cmp fwait mov popa (bad) mov dec imul mov lret sub (bad) repnz cli sbb add inc xchg dec insb lea push js mov pop jg shl and xchg dec insl mov push je mov clc sbb pop jl mov xchg dec outsl nop mov repz push jbe mov pop jge add add inc test dec imul jb mov cli sbb pop jg shl and sahf aad push xchg cld cmp out push mov push jbe,pt call pop pop cltd aad push (bad) (bad) jno call es fwait rorl dec xchg rorl dec xchg leave sbb jge mov dec push lods int wrmsr push jb mov notb cmp pushf mov add scas (bad) icebp adc push jne mov stc sbb pop jl mov and test push lods int wrmsr push jae mov negl cmp mov inc xchg dec outsb (bad) mov repz push jns mov popa (bad) mov dec outsb (bad) mov repz push ja mov xchg dec pop les cmp in jle sbb stc das data16 fmuls dec mov inc jp jmp push xchg mov cmc cmp mov inc mov or mov add cmc push aaa pop jns mov pusha andl int3 in push das push jne mov pop jge mov test dec outsb mov cmp pushf mov bound sub mov jbe mov inc popa (bad) cmpsb (bad) call (bad) mov repz push ja mov pop andb mov or dec jae mov clc sbb pop jnp mov xchg sub outsb (bad) scas (bad) icebp adc push jne mov clc sbb pop jle shl and cmpsl (bad) in adc push je inc jnp stc xor push xchg divb push fstpl push rcrb pop pushf fisttpll rorb dec cmpl imull outsl scas divb pop xchg int3 add mov aad dec (bad) lret add jo jmp push lret adc les aas add inc jp jmp and cmovs adc push jae add mov negl cmp pushf mov inc xchg dec insl mov push jns mov pop andb dec push lods int push das push jno mov hlt adc mov pop jge mov bound sub in dec jp mov bound daa dec push rdtsc push jb mov cmc push aaa pop rorb test dec imul push js mov pop jg shl add and test dec push lods int3 in push cs jo mov repz test dec outsl nop mov repnz stc sbb pop jl mov popa (bad) mov dec push or dec outsl nop mov icebp adc push je mov pop jge mov arpl daa dec imul mov repz cmp pushf mov bound sub outsb mov push jae mov add sbb add cmp jge mov xchg dec outsb mov push jbe mov pop andl into out wrmsr push jno mov cmc push cmp lcall andb xchg dec insl mov dec nop mov negl cmp fwait mov bound sub mov push jge sub subl insl mov pop jp mov popa (bad) mov inc add add add add test dec outsb (bad) scas (bad) icebp adc push jne mov stc sbb pop jge mov arpl dec insl mov push jae mov negb cmp fwait mov pusha andl add out wrmsr push jb mov cmc sbb pop jge mov bound es push lock push jae mov negl cmp fwait mov pop andb mov push jae mov clc sbb pop add jnp mov popa (bad) mov inc push or mov repz push jns mov xchg dec outsl (bad) mov repnz (bad) pop aas pusha andl and ficoml dec mov push jno mov pop jge mov fs push dec mov sub xchg mov cmc push cmp lcall andl int adc push ja mov pop jle mov add and test dec push stos int3 in push das dec jno mov hlt adc add arpl sub scas into out adc push jb mov cmc push ss add mov bound dec push lods int wrmsr push jno mov clc sbb pop jl testl sahf xlat cmovl stos icebp sub cmp push cltd rorl push jle pop cmp jge cmp repnz ret repz add mov pop andb adc push ja mov pop andb lea push jne and in dec jae mov negl cmp pushf mov popa (bad) mov inc push or mov hlt sbb add inc arpl sub mov push jae mov notb cmp pushf mov popa (bad) movsb (bad) sub push jno mov pop jg shl add add ljmp (bad) repnz cmp pushf mov bound daa dec imul mov pop jge mov xchg dec insl mov push je mov clc sbb pop jl mov arpl sub outsb (bad) mov repnz sti sbb pop jg ret in es imul jae mov negl cmp pushf mov xchg dec add fsts push xchg rcll dec test cld cmp loope cltd fstpl into sbb rorb inc jnp ljmp cmpl and mov jb mov notl cmp fwait mov bound sub mov pop jl mov test cwtl rclb dec outsb (bad) mov add sbb pop jnp mov pusha andb imul push je add cmp fwait mov pusha andl enter dec imul jno mov negl cmp pushf mov pusha andl enter dec imul jb mov cmc push aaa push jns mov bound sub scas iret lock push jae mov notb aaa pop jns mov pusha andb mov mov rorl addr16 ficoml mov add sub fist dec cmpb adc (bad) sti ss movsl out arpl movl jne,pt mov sub loopne push xchg lret add sbb xchg clc xor fldl sbb mov sbb mov sbb in dec xorl mov sbb mov pop dec jle jmp jmp out and ret pop xchg (bad) cld das fs into add insb lahf rorl inc jne add lods loop dec jg jmp lock pop pop imull pop mov sti xor iret add daa pop xchg lret push xlat or jb fisttpl inc js jecxz dec xorl mov cmc sub xchg enter cltd int cmp stos ficom inc jnp loop push mov int cmp fistl inc jle in and xchg (bad) clc sub (bad) cli xor aad inc ja loop dec cmpl add outsl mov scas in dec test add cld xor xlat push inc jl out push mov ficoml inc jp jecxz dec test mov scas in push mov clc xor shrl gs iret or jb fstl dec jl in dec (bad) mov sbb pop push mov ret imull pop xchg leave sti ss movsb fstl inc js loopne dec jle in and (bad) adc call push xchg push push mov add aas jb fiadd stc cmp cmpb add add inc jg idivb mov loop mov pop lahf fistpl xchg int3 add jne cmp pop mov push push mov sub and dec rolb lods int wrmsr push jb mov cmc push aaa push jns mov pop jg shl and cmpsb (bad) call xchg mov notb cmp lcall xchg dec outsb nop mov repz mov pop jle add out daa dec imul add add xor xchg mov clc sbb pop jl mov test sahf jmp dec imul mov cmc pop cmp fwait shl and xchg dec jo mov hlt adc mov pusha andl int3 in push das push jno mov notb cmp jg ret jnp (bad) and test dec imul jae mov notb cmp fwait mov popa (bad) mov dec jno add jns mov bound sub mov and ficompl pop xchg xlat sbb lret adc loop push push lds xchg divb jne out push mov cld add jb loope pop xchg int3 or mov in daa pop mov divb insb lods jecxz push mov lret xchg aad inc jge in jno,pn lock jmp and fsts push xchg rorl dec mov or les aas jge sti cmp divb add mov repnz lock insl lods ljmp cmpsl in arpl and (bad) jne cmp bound jge (bad) call mov push jne mov stc sbb pop cmpsb adc out adc push jne mov clc sbb pop jge mov arpl dec outsl nop mov repz cld sbb ret in and lret sub (bad) repz push ja mov pop jle add ret in es lret fwait icebp aas add aaa outsb movsb fsts inc (bad) add imull gs and rorb nop fild inc imul and fiadd and xchg dec jo mov hlt adc push ja mov pop aas pusha andl lret in or push jne mov clc sbb pop jl mov adc add ljmp aam push aaa pop jns mov add add xchg push jno mov notb cmp fwait mov popa (bad) mov dec imul jne mov pop jle shl es imul mov stc sbb add inc push adc push jne mov stc sbb pop andl mov rorl inc js ljmp push xchg int cmp add out sub pop lret ret jmp popl add pop jge mov inc push or mov repz push ja mov popa (bad) mov dec push lods into out adc push or ret sub stos loop push rclb fild and andl mov mov and mov loopne push xchg int jno add mov loop push xchg int3 or mov and pop xchg lret jne in push add xchg (bad) incb scas out push mov in push mov add outsl test int3 add jle hlt xor pop movsb out jae out outsl lods in imul inc jle repz jmp pop cwtl (bad) adc rorl inc jge divl jne ljmp add ljmp leave add mov adc lahf fcompl push pop (bad) cmp clc das insl movsb fstl dec jg std (bad) int3 inc xchg fcoms xchg jmp stos lret in or mov hlt push aaa pop andb push push je mov stc sbb pop jge mov arpl dec imul jne mov clc sbb pop jnp ret jecxz and lret jmp das push jb mov cmc push aaa pop jnp mov arpl sub push jge cli das fs jecxz dec cmpl add outsl cmpsb fcoml dec cmpb add mov and ret imull cmp fcoml dec jge jmp add add push (bad) (bad) jp sub lock fcoml dec cmpl adc (bad) imull push cwtl fistl pop xchg rorb mov push inc jnp in dec test add adc std xor rorb cmp cmpsl fcoml dec jle in daa bound stc xor lods ljmp xchg std cmp cmp scas ljmp (bad) lret jle stc ss ljmp mov adc enter mov sub mov leave pop dec mov add mov fistpl pop xchg rorb cmp in sub ficomp push xchg rorl cmpl sub push xchg into or clc xor scas in sub fstpl push xchg rorl inc add cmp in sub ficomp push nop or out jb and ficoml push (bad) enter mov sub loope pop cwtl fsts push mov add das imul adc add add dec test add add je ljmp mov add jnp repnz pop xchg iret adc or jmp pop mov cli aaa jo fistl inc mov stc xor pop push cwtl rorb sub leave (bad) xor mov mov in imul mov push test xchg into add jno fcoml lcall es ljmp in rdtsc push jae mov negl cmp pushf mov popa (bad) mov add add add js (bad) jp mov pop andb data16 dec insb lea push jb mov notb cmp add (bad) in daa dec outsb (bad) mov repnz jne mov stc sbb pop jge mov arpl dec push lods int push das push jno mov cmc adc mov dec imul xchg mov negl cmp pushf mov bound daa dec push stos add add in push das push jno mov hlt adc mov xchg dec insl mov push jne mov stc sbb pop jl mov cmc xor call or sar je jmp std xor mov inc push or mov notb cmp lcall (bad) mov dec push mov cmc push aaa pop jns mov pusha andl lret das push jb mov negb cmp sahf add mov adc ja mov pop sub adc push jbe adc jecxz xchg xlat adc mov fcoms dec xchg roll dec test (bad) cli xor rorl inc jl clc cmp add sbb in xor fstl inc jp in and (bad) std cmp ljmp les inc cmpl add jp out sub push jne int3 out adc push jae mov notb cmp lcall add ds andb xchg push jae mov notb cmp lcall andb xchg dec insl lea push jae mov notl cmp jg shl and cmpsb (bad) call mov inc xorl ja mov pop jge mov test push jno mov cmc push cmp fwait mov pusha andb xchg dec insl mov add scas iret lock push jae mov notb cmp mov sub mov push jb mov (bad) sbb pop jg shl and push or dec outsb (bad) scas (bad) repz mov arpl dec xchg clc push jp mov xchg dec insl (bad) mov notb cmp lcall (bad) mov push mov stc sbb pop jl mov bound es push push das dec jno mov aam adc mov pop jle (bad) call mov push jb mov negl cmp fwait mov arpl dec insb lea push je mov clc sbb pop stos iret lock push je mov pop xchg ficompl push test rorl dec pushf shl and data16 push jb mov notb aas pusha (bad) movsb (bad) sub add aaa pop jns mov inc xchg dec jo add xchg mov hlt adc mov popa (bad) mov dec insl mov push ja mov pop andb push or and mov xchg push jae mov negl cmp popf mov xchg dec insl mov push jbe mov bound sub (bad) mov hlt push aaa pop jns mov popa (bad) mov dec push lods int wrmsr push jb add mov notb cmp pushf mov arpl push jno mov notb cmp sahf mov test dec outsl xchg mov insl test das js out sub fistpl push xchg rorb push xchg fiadd and xchg dec add mov negl cmp fwait mov inc mov or dec jo mov hlt adc push ja mov pusha andl lret sub insl mov push je mov testl add pop cmp pushf mov pusha (bad) mov inc mov push das push jno and ret and enter dec insb lea push jb mov cmc push aaa pop jns mov pusha andb imul jb mov cmc push aaa pop jns mov pop jg shl and test dec push scas into out adc push ja mov pop jle mov arpl dec imul add add xor xchg mov cmc push ss js mov pop (bad) mov lock push jae mov notb cmp andb test cs jo mov repz push jbe mov clc sbb pop jnp ret and xchg dec imul push jno mov hlt adc push ja mov pop jg shl and test dec outsb (bad) mov repz fsqrt sbb pop jge mov popa (bad) mov add in sub mov jno mov push xchg fistp push ficom jae mov pusha andl int comiss xchg mov cmc adc mov pop jg shl sub mov push jne mov clc sbb pop jnp mov bound sub mov dec jo mov repz push jp mov pusha andl leave ljmp mov clc add sbb pop jge shlb jge std aas lcall xchg push jb mov cmc adc mov pop jle shl and test dec push lods int3 in push das dec jo mov repz push jnp mov pusha andl leave jmp lea push jb mov cmc push aaa pop jns mov pop jg shl sub mov dec jo mov repz push jbe mov stc sbb add pushf push pop lahf (bad) out sub mov push jbe mov test scas adc ret es push or mov repz push jbe mov pop jle mov push lods int push das push jno push push mov pop inc xorb adc or mov lock lods ljmp inc arpl dec jo mov repz push jbe mov pop jl mov add fild and andl push or mov repz cmp lcall (bad) mov inc mov or dec insl mov push jae mov notb aaa pop jns mov pop andl mov dec jo mov repnz clc sbb pop jnp fidivr cmpb add mov sub cwtl ficoml push xchg fstl push mov imulb arpl loope sub dec outsb (bad) mov repnz cli sbb add inc fs pop cmp push (bad) leave add ja cmc jne,pn jecxz pop nop lret cwtl add adc mov sub fcoms dec addl clc xor jo ficom dec test std cmp lock gs fstps dec mov or ret pushl outsb test and sbb aad dec mov adc push dec mov or (bad) ret pushl insb mov stos test jne in push mov sar jp divb jb jmp stos jmp mov sti sub fwait rorb cmp pop cltd ficoml dec test loopne push mov adc ljmp inc mov or lock push jae mov notb cmp mov inc mov or dec outsb (bad) mov repnz fdivr sbb pop jge mov bound sub mov push jne mov clc sbb pop jnp mov popa (bad) mov add add in es imul cwtl mov pop jge mov lods jne,pn out sub fmuls inc jp repz add dec push lods int push das dec jo mov hlt adc push ja mov pop jle shl and mov jno mov hlt adc mov pop jge mov arpl daa dec imul mov clc sbb pop jnp mov popa (bad) mov mov xlat cmp sahf xlat outsb nop mov loop jo cmc push aaa pop js mov pop jg shl and cmpsb (bad) out sub mov jmp das push jno xchg mov mov negl cmp fwait mov popa andl leave in or (bad) rclb ss js mov inc test push jae mov clc sbb pop jnp mov bound sub mov jno mov add add cmc push cmp lcall andl (bad) repnz sti sbb pop jg ret and int wrmsr push jb mov notb cmp sahf mov imul jae mov negl cmp pushf mov or stc push in pop mov push mov dec outsl nop mov stc sbb pop jge mov test dec insl mov push je mov cli sbb jle shl and test ljmp mov sbb pop jnp mov popa (bad) mov inc mov or icebp adc push jne add or (bad) cmp in push mov or dec cmpb sub add jno fsts dec mov add jbe out pop cltd aad pop cltd fisubr jnp lock fistp pop movsl out mov test dec insl mov push jbe mov out push mov std cmp fistpl (bad) add jbe repnz mov lret jb loopne dec mov or jbe ljmp mov (bad) xor pop cltd aam dec xchg int dec xchg add jb out mov (bad) (bad) rcll dec nop lret add jg add mov icebp cs and aad push mov or add xchg mov cmc push aaa pop jns mov pop andb imul cs jo mov hlt adc push ja mov inc mov dec jo mov cmc push aaa pop jns mov popa (bad) mov inc push or mov hlt adc xchg into push push xchg xlat cmovs lahf fcoms test cli das arpl faddl daa dec imul mov notb aaa pop jg ret in es push or mov cmc push aaa pop jns mov bound add sub mov push je mov cld sbb ret in es mov dec outsb nop mov repz push ja mov pop jge mov bound dec push lods int adc add (bad) and (bad) mov inc mov or icebp adc push je mov negl cmp fwait mov bound adc push jae mov notb cmp mov inc xchg or add scas (bad) lock mov pop jle shl es mov push pop mov sub loope pusha sahf xlat adc sub frstor ja sbb pusha andl leave jmp xchg mov stc sbb pop jl mov popa (bad) mov inc push or mov repz push ja mov pusha andl int wrmsr push jb mov cmc push ss js mov pop jle add lahf shl and fstps stos add sub inc xchg xor xchg mov notb cmp lcall jg ret and leave ljmp (bad) lock push js mov inc arpl sub mov dec jo mov hlt adc mov pop jg ret es push adc jne mov clc sbb pop jnp mov arpl dec push lods int adc push jae mov notb cmp lcall xchg push jb mov notb cmp fwait mov pusha andb mov or dec insl mov push jne mov popa test dec insl (bad) mov repz (bad) pop inc arpl dec imul jno mov xchg dec jo mov hlt add cmp dec mov adc movsb add add out sub mov push jne mov stc sbb pop jge mov push lods int add push ja mov pop jg shl and xchg dec outsl nop mov repz push jbe mov pusha (bad) mov dec imul mov cmc push aaa pop jns mov pusha andl lret in or mov cli sbb add inc test dec insb lea adc push jne mov stc sbb pop jge mov data16 push je mov cli sbb push daa dec imul mov std pop inc mov xor mov mov aad dec xchg aam dec test fistpl push nop int3 add mov add fs (bad) adc int3 add je jmp insl lods ljmp cmpb sub hlt inc test add xchg mov cmc push ss js add cmp loop and xchg dec imul js mov pop jle shl and test dec insb lea push jb mov cmc push cmp lcall test dec outsb (bad) mov repnz push js mov pusha andl enter dec outsb (bad) mov repz js mov arpl sub scas (bad) icebp adc push je mov cli sbb pop jge mov test dec insb lea push jp mov mov wrmsr push je mov stc sbb add mov dec push or dec outsl nop mov repnz mov dec outsl (bad) mov repz push js add bound sub lea push jne mov clc sbb pop jnp mov arpl dec push stos int3 in push das push jo mov cmc push aaa pop jns mov popa andl lret jmp sub aad sbb pop jle shl and test dec push lods int push xor xchg mov clc sbb pop jge mov arpl xor xchg mov popa (bad) mov inc push push xor xchg mov cmc push aaa pop jp mov popa andl jmp inc popa (bad) mov inc push or add add nop mov add sbb pop jle mov arpl daa dec push adc cli sbb pop jg shl and test cs jno mov hlt push aaa pop jp mov pop andl jmp pop cltd aam dec cmpb popa xchg into adc mov hlt das data16 ficomp cmp jecxz pop popf (bad) or inc jns or sbb int jl,pt cmc xor add add ficom dec test xlat adc mov sub inc jns ljmp movsb loope movsb call inc insb lea push jae mov notb cmp lcall andb push or mov pop jle shl and cmpsb (bad) out sub lea cmp pushf mov bound daa inc push movsb (bad) call mov push jne add add pop addb (bad) out sub mov jb mov cmc push aaa push js mov bound daa dec imul mov hlt adc mov pop jg ret and lret sub jno mov stc sbb pop jl mov bound sub (bad) mov repnz fdivr push aas popa andl mov push jne mov cli sbb pop andl add daa dec push lods int comiss xchg mov negl cmp fwait mov pusha andl int3 in push das push jo mov repz push ja mov pop jle mov test stos int3 in comiss xchg mov hlt adc mov pusha andl lret jmp sub (bad) icebp adc push add mov pop andb xchg ljmp outsl (bad) mov repnz add push ja mov pop jle mov arpl dec push lods int wrmsr push jb mov cli sbb pop jge shl and xchg dec insb lea push jae mov notl cmp fwait mov pusha andl iret lock push jae mov clc sbb pop jnp mov bound daa dec imul mov hlt adc push jns mov arpl dec imul add add push je mov clc sbb add iret lock push je mov stc sbb pusha andl or adc rorl aas js loope push test add xchg into or icebp sub fsts dec mov cld cmp out pop xchg rorb inc ja out sub hlt dec test and out test leave add jl lock or mov ficom push mov add leave add jb out pop xchg rorb inc jns icebp sub mov mov out pop nop enter mov and dec cmpl push dec mov (bad) cmp in push mov add pop xchg rorb mov fcoms dec mov add jno in pop lcall sub fistl xor in pop xchg int3 push inc jl cmc xor fistl dec mov (bad) cmp add and lcall xor in pop xchg rorb inc jnp repz dec mov (bad) cmp out push nop int3 add add push loopne imul scas jmp add popa cltd rorb inc jg cmc xor ficomp push (bad) enter mov and lcall xor loopne pop xchg rorl inc jl repz loopne push mov (bad) cmp jmp pop xchg int3 pop inc jge repnz addr16 dec mov (bad) cmp loop pop xchg rorb jg clc xor test lret add in sub aad dec test ficom push (bad) lret jl in and cltd rorl dec test ficomp pop xchg rorl inc jl repnz push mov (bad) cmp ljmp jg cmc xor fistpl push (bad) add jbe jmp popa pushf add sbb rorl inc cmpb adc mov add jp ljmp xchg out pop cwtl iret or mov mov sub ficoml (bad) add mov xor add add call or mov (bad) mov fistp push nop lret add daa popa pushf (bad) adc mov in pop nop leave add jns lock cmovns test movl pop push xchg int3 push inc jp in daa pop xchg xlat adc enter lods jmp es aam dec xchg std aaa jo in pop xchg into or mov and inc (bad) mov fistl cmp call or add mov sub fcoms (bad) mov loop push mov sti xor pop xchg into push inc jnp out sub mov xchg iret or cmovns movsl fstl push mov add lods in push xchg lret push inc jp jmp pop cltd rorl sub adc clc outsl stos in pop xchg int3 add js out sub fcoms dec (bad) mov loope push (bad) movl and inc jge repz aad dec mov (bad) cmp loop add push xchg lret pop inc jp jmp cmovl fistp push mov std xor lods out pop xchg into pop inc jp out sub ficomp push mov add jbe lock in push mov (bad) xor inc jge out push xchg std push jnp mov arpl das push jno mov hlt adc add bound es push or dec outsl (bad) mov repnz push add mov pusha test add mov push jb mov notb cmp lcall sub lahf aad dec mov dec insl lea into or jbe in pop mov lret insl test (bad) (bad) cmp jmp ds dec imul jb mov pop jg movl je clc xor push mov (bad) ss repnz loope pop fwait rcll dec pushf fsubs xchg add add xchg mov negl cmp fwait mov pusha andl lret sub (bad) hlt adc mov bound sub mov xor fyl2xp1 sbb pop jl mov bound es push lods int repz push jns mov pusha andl lret sub outsl mov add insb lods out pop xchg aam dec xchg or mov cld xor ljmp add add adc in jae mov negl cmp pushf mov bound es push or mov repnz push jne mov (bad) (bad) cmp mov push andl lret in or mov hlt adc mov pop andb insl (bad) mov icebp adc push jne mov stc sbb pop jl in fs fistpl pop lahf fstpl push xchg (bad) sbb sbb xchg (bad) and fistp push xchg iret adc in cmp add sar jg std cmp fistp pop cmpsl loope push mov lret ja loop dec (bad) mov lret add insb cmpsl fcoml dec jge jmp push nop les cmovbe daa push cwtl iret or mov lock stos jmp popa popf fcoms dec mov pop cmp push cmpl adc xor push xchg iret or rorb test lock (bad) push dec test call and adc aam pop pushf add adc dec mov or leave or les inc xchg adc xchg aam pop cwtl fstpl pop lcall push xchg rorb inc jge cld aas xchg or movb mov lock hlt xor out imul in movsl jmp pop xchg rorb inc cmpl add jp divb jp cld cmp clc xor in daa popa lcall xor fsqrt sbb add dec add lods add repz sti sbb loope and xchg dec insl lea in pop cwtl aad push xchg rcll push sahf fsts pop cltd fstpl pushf fsts push xchg lret xchg aam dec mov adc (bad) adc ficompl pop cmpsb jmp xor jo add test out adc push jae mov notb cmp fwait mov pusha andl lret in or mov cmc push ss js mov add test ljmp (bad) repz stc sbb pop jge mov arpl dec push lods int push das push jno mov clc sbb pop jge mov bound sub (bad) repnz push jbe pushf mov xchg push jno int3 push mov nop mov repz add popf mov test dec insb lea push je mov clc sbb pop jnp mov pusha add loop sub mov jb mov cmc push aaa pop jns mov pop andb imul mov repz jp mov arpl sub mov push jne mov pop jle shl and test dec imul jbe mov pop jge mov xchg push jb mov negl cmp fwait mov arpl add sub xchg mov notb cmp mov dec insl mov pop jnp mov bound adc push jb mov clc sbb pop jge mov push lods int rdmsr push js lahf shl and stos int adc js mov imul fdivrp pop inc data16 jb mov stc sbb in sub mov jne mov stc sbb pusha andl test push je mov clc sbb pop jl shl daa dec push push das push jno mov notb cmp pushf mov arpl sub nop mov notl cmp ret and lret cs jo mov cmc push aaa pop jp mov bound sub mov jp mov pop andb xchg or dec outsb (bad) mov repz mov inc arpl add sub mov pop jns mov xchg xor xchg mov clc sbb pop jge shl and mov push jne mov bound es push or mov stc sbb or dec insl (bad) mov icebp adc push jne mov arpl dec outsl nop mov hlt adc mov xchg dec outsb (bad) mov repz pop jns mov pop add add sub xchg mov negl cmp pushf mov xchg push jno mov notb aaa pop jnp mov arpl dec insb lea push ja mov pusha andl int3 out adc push jae mov notb cmp fwait mov inc push or push jne mov stc sbb loope and test xor jne mov test dec insb lea iret lock push jne mov (bad) pop inc pusha andl leave ljmp iret icebp adc push jne mov clc sbb pop jnp mov xchg push jno mov notb cmp pushf mov test dec insb mov push jno mov notl cmp pushf mov arpl sub (bad) repnz clc sbb pop jnp mov mov or push jb mov stc sbb cmp sahf shl and mov jno mov repz pop jns mov pusha andl lret sub jo mov cmc add cmp ret and data16 dec insl mov push jne mov fdivr sbb ret in es xchg or dec insl mov push js mov pop jg shl sub nop mov repnz push jne mov clc sbb pop jnp mov bound sub mov push js mov pusha andb imul mov cmc pop cmp pushf mov popa (bad) movsb (bad) sub lea push je mov notl cmp lcall andl push or mov repz mov pusha andl lret sub insl nop mov repnz stc sbb jge mov xchg xor fsqrt sbb pop jge shl and test dec imul pop jnp mov bound sub (bad) mov hlt sbb pop jl mov arpl dec jb mov cmc adc mov pop jge mov test push jno mov sti sbb popa (bad) mov dec push lods int adc push ja mov popa (bad) mov add pop sub mov jbe mov test dec push lods int3 out adc push jne mov pop andl int3 in push xor xchg mov cmc sbb pop jl mov bound sub mov jbe mov pop jle ret sub mov jae mov inc xchg dec insb lea push jbe mov pop andb dec insl xchg mov hlt push aaa pop arpl sti sbb bound dec push lods int comiss xchg mov notb aaa pop jns mov pop jg shl and cmpsl leave jmp mov pop js sbb pusha andl lret in or mov hlt adc mov pop andb mov adc push je mov clc sbb pop jl mov test dec insl mov add add mov stc sbb pop jg shl sub mov push jb mov notb cmp fwait mov popa (bad) mov dec push lods int wrmsr push jb mov cmc push aaa pop jns mov arpl mov push jno mov cmc pop cmp fwait mov popa (bad) mov add nop mov repz pop jl mov xchg or jo mov hlt adc mov pusha andl add add cs jo mov repz push ja mov bound dec imul je mov negl cmp pushf mov bound sub lea push js mov pop jg shl and cmpsl leave ljmp (bad) repz push ja mov pop jg shl and mov jae mov notb cmp fwait mov arpl dec imul add add out adc push je mov negl cmp pushf mov xchg dec add mov clc sbb pop jnp mov arpl dec insb lea aaa pop jns mov arpl sub aad pop cmp fwait mov arpl dec imul adc mov add and mov jo mov hlt adc mov pop andb data16 add add sub mov push jb mov stc sbb push cmp in and cmpsb fistp pop xchg loope push jae mov notb cmp fwait mov pop andb imul push jae mov notb cmp lcall and jo fdivrl pop jle ret and int wrmsr push jb mov jmp inc bound sub mov push ja mov pop jg roll loop and xchg dec outsl add cmp mov inc push or mov repz push jbe mov pop andb push lods into out adc push je mov cld sbb (bad) in sub mov jne mov pop andb mov rdtsc push jae mov negl cmp lahf shl and cmpsl enter dec outsb (bad) mov repnz fsincos pop aas pusha (bad) mov dec push lods iret divb clc inc lcall jb repz out push xor xchg mov notb aaa pop jp mov pusha andl (bad) mov dec imul mov pop jg shl add dec imul mov repnz fdivr sbb pop jnp mov dec push stos int3 in or mov repnz clc sbb pop jl add add arpl dec push stos int3 in or mov pop jl mov popa (bad) mov inc push or icebp adc push je mov clc sbb pop jnp mov arpl negl cmp fwait mov pusha andl in push das dec jo mov repz mov arpl dec imul push jb mov cmc pop cmp fwait add mov pusha add jnp mov arpl push jb mov negl cmp mov xchg dec insl mov push jbe mov pop jle shl and mov push add mov popa (bad) mov dec push lods int wrmsr push jb mov clc sbb pop jge mov test dec jo mov cmc push aaa pop jp (bad) and add xor add add xchg mov stc sbb add inc xchg dec jb mov negl cmp lahf shl and lret in or mov hlt adc mov arpl dec insb lea pop jp mov popa (bad) mov dec imul mov cmc push aaa pop jns mov lods or pop jge mov push stos iret lock push jae mov notl cmp fwait mov add add add mov sarl test hlt imul push pop (bad) cmp fcoml add pop test xchg dec outsl nop mov sub fistpl mov add mov mov push jae mov notl cmp fwait mov add xor xchg mov notl cmp fwait mov popa (bad) mov dec outsb (bad) scas (bad) repnz stc sbb pop jge mov add add inc arpl dec imul push je mov clc sbb pop jg shl and xchg dec insl mov push je mov clc sbb pop jl mov bound daa dec imul mov pop jge mov test dec insl lea push jne mov stc sbb pop jge mov mov sub test xor xchg mov add negl cmp fwait mov bound daa dec imul mov pop jg shl and cmpsl enter dec insb lea cmp pushf mov bound sub scas (bad) cmc push aaa pop js mov pop andb data16 dec outsb (bad) mov repnz push jne mov stc sbb pop jge shl and mov dec outsl nop mov repz push jbe mov add add inc test dec imul jae mov cli sbb add inc mov or dec outsl nop mov repnz cli sbb add inc xchg dec jo mov hlt adc mov pop jg shl or dec insb lea push jae mov negl cmp fwait mov popa (bad) mov lret repz mov pusha andl push push das push add mov pop jg shl and xchg push jb mov notb cmp lcall andl lret sub (bad) repnz ja mov arpl dec imul jae mov notb cmp fwait mov popa andl lret in push cs jo mov clc sbb pop jl mov test add mov icebp adc push jne mov pop jle shl and cmpsl enter dec jo mov hlt adc mov pop andb add mov repnz cli sbb add inc test push jb mov negb cmp mov arpl dec insb lea add fwait mov popa (bad) mov lods aam push aaa pop jns mov popa (bad) mov add in es push or mov hlt adc mov pop jg shl sub lea push je mov clc sbb pop jl mov arpl dec push lods int wrmsr push jb mov notb aaa pop jge mov test dec insb lea push ja mov pop jg shl and lret cs jno mov clc sbb pop jge mov arpl add mov jb add pop andb mov or mov negl cmp popf mov arpl cs jo mov cmc push cmp lcall addl sub outsb (bad) mov negb cmp lahf mov xchg dec outsb (bad) mov repnz push jne mov stc sbb add inc xchg dec jno mov cmc push aaa pop jp mov iret add add adc push jae mov notl cmp lcall andb xchg or jb mov notb aaa pop jns mov pop jle shl and test dec imul mov icebp adc push je mov pop jle shl and test imul mov add sbb pop jnp mov popa andl int wrmsr push jno mov cmc push ss js mov pop jle shl and cmpsl enter dec insb lea ss js mov bound jmp xor xchg mov negl cmp fwait mov popa andl lret jmp sub xlat clc sbb pop jnp mov popa (bad) mov dec imul mov hlt adc mov pop rcrb (bad) mov stc sbb pop jge mov xchg add leave ljmp (bad) lock push je mov clc sbb pop jnp mov popa (bad) mov inc insb mov push jbe mov pop jge mov arpl dec imul pop jns mov pop andb imul jb mov cmc push aaa push js mov pop andb xchg dec insl mov cmp shl and cmpsl enter add jmp lea push jne mov clc sbb pop jl mov arpl sub mov push jbe mov pop jg ret daa dec imul mov cmc push cmp lcall andl (bad) repz push jbe mov pop jle mov xchg dec outsb (bad) mov repnz pop mov inc test dec jo mov hlt adc mov add add cli sbb pop jg shl and test dec imul jno xchg mov pop jle ret jecxz es mov or lock push je mov negl cmp fwait mov pop andb imul lcall andb push or lock push jae mov notb aaa pop jns mov pop andb mov in push cs jno mov repz mov pop jle shl and test dec imul push je mov clc sbb pop jl mov bound es push or outsb (bad) mov icebp adc push je mov negl cmp sahf mov bound sub mov jo mov repz push jbe mov stc sbb pop jl mov jmp test pop jge mov add inc bound daa dec push or dec outsb (bad) mov repnz clc sbb pop jnp mov xchg das push jno mov cmc push ss js mov pop jle shl and test dec push stos int3 in push cs jo mov notl cmp lcall andb xchg dec insb lea push jb mov cmc push aaa pop js mov bound add inc push push das push jno mov hlt adc push ja mov pop jge mov arpl dec imul jne mov clc sbb pop jnp mov pusha andl leave ljmp iret lock push jae mov add and test dec imul push jno mov hlt adc push ja mov pop jge es adc push jb mov negb loop add add lods iret out adc push jae mov negb cmp pushf mov popa (bad) mov inc push or dec outsb xchg mov cmc push aaa pop jns mov pusha andl lret sub (bad) repz push jbe mov pop jge mov mov or mov hlt adc push ja mov pop jle shl and test dec insb lea push ja mov add add add jmp mov push je mov negl cmp pushf mov bound sub push jae mov negl cmp fwait mov bound daa dec push or mov repz push jbe mov pusha andl int3 in push add cld sbb ret daa dec imul cmp pushf mov mov stc sbb add cmp popf mov popa (bad) mov inc push or dec outsb (bad) mov repnz stc sbb pop jl mov xchg dec insb lea push jb mov cmc push ss js mov pop jg shl and cmpsb enter dec outsb xchg mov notb cmp fwait mov popa (bad) mov inc mov or dec outsl xchg mov hlt adc mov pop jle shl daa dec push add add add mov xor fsqrt sbb pop jge mov xchg dec insb nop mov repz push jbe mov pop andb push or mov (bad) push inc bound daa dec push lods int3 in push das dec jb mov cmc push aaa push js mov test dec insb mov push ja mov pop jge cmc push lcall test dec outsb nop mov repz add pop jg shl and xchg dec outsb nop mov cmc push ss js mov inc jle in sub iret pop cmp jb in arpl ficompl pop xchg rorl inc (bad) fstl push js mov pop andb xchg or dec insl mov pop jns mov pop add sub lea push jb mov notb aaa pop jns mov pop jg shl and stos lret in or mov repnz stc sbb add mov inc push or dec outsl nop mov repnz jne mov cld sbb shl and cmpsl (bad) call mov sub dec outsl nop mov repz push jbe mov pop jg shl sub mov push jb mov notb cmp lcall andl int3 out wrmsr push jno mov cmc push aaa pop jns sahf mov xchg dec outsb (bad) mov repnz sti sbb pop jg shl and push or mov hlt sbb pop jl mov arpl xor xchg mov pop jge mov xchg dec outsb (bad) mov icebp adc push jne mov or mov add test dec outsl (bad) mov repnz cmp popf mov bound daa inc push add jmp xor xchg mov clc sbb pop jnp mov popa (bad) mov pusha scas ljmp jbe in push mov clc xor in daa fs fistpl push (bad) (bad) or mov sub in pop stos and push js mov pusha andl lret in push das push jno mov hlt adc shl and rcll sar imul jmp push mov add das data16 xlat adc int inc jns ljmp add repz push xchg rorl inc mov add cmpb imul or mov into or jge divl gs sysexit push jbe mov pop jle shl and test dec insl mov ss jp mov adc push ja mov arpl dec push stos int3 in push das push jo mov hlt adc mov pop jle shl and in xor mov stc cmp ss js mov pop andb mov or repnz jne mov stc sbb pop jl mov pop push mov std cmp adc (bad) divl addr16 dec mov stc xor (bad) push inc jge jmp pop mov aad arpl xor xchg mov notb cmp lcall andb dec insb lea push jae mov notb cmp fwait mov and andl insb lea push jb mov cmc push aaa pop js mov pop jg shl aas mov (bad) jmp mov pop jp mov bound sub mov push jae mov clc sbb pop jl mov test dec insb xchg mov cmc push aaa pop jns mov pusha andl int3 in push das push jno mov cmc push aaa pop jns mov aas pusha andl (bad) repnz sti sbb pop jg ret jge leave ljmp (bad) repz push js mov pusha andl (bad) icebp adc cli sbb add mov or mov cmc push aaa pop jp mov arpl dec outsl nop mov repz push js mov pusha andl int adc push je mov clc sbb add lahf shl daa dec imul mov negl cmp popf mov in or mov cmc push aaa pop jp mov bound sub (bad) repz cmp pushf mov bound dec outsl nop mov xlat clc sbb pop jge mov dec push lods int adc push je mov pusha andl int3 in push xor xchg mov stc sbb pop jge mov xchg add dec insl mov pop jp mov popa andl mov push jbe mov pop jg shl and lret sub (bad) negl cmp pushf mov test dec insb lret cltd (bad) xchg dec insl lea push jae mov negl ds andb xchg or icebp adc cli sbb jge mov arpl add add dec insb lea push ja mov pop jle shl arpl inc lahf fistp xchg rorb dec mov dec insb lea aaa pop jp mov imul mov cmc push aaa pop jns mov popa (bad) mov dec imul mov cmc push aaa pop js mov xchg dec insl mov push je mov clc sbb pop jl mov arpl add sub lea pop jns mov pusha andl lret sub (bad) repz cli sbb add out wrmsr push jb mov clc sbb pop jl mov arpl dec imul jae mov clc sbb pop jl mov mov or hlt adc mov bound daa dec imul push jbe mov jnp and int3 sbb mov push jb mov cmc push aaa push jns mov pop (bad) mov inc push or mov sbb xlat pop pusha mov outsl nop mov repz push jbe mov pop jle shl and test dec insb lea push jne mov clc sbb pop andb xchg dec insl mov push jne mov stc sbb pop jl mov add inc bound sub mov push jbe mov pop jge mov test dec imul push jae mov negl cmp pushf mov xchg dec insb lea push je mov stc sbb pop jle shl and test ljmp mov negl cmp add dec imul jae mov negl cmp pushf mov bound sub add lods into out adc push jb mov notb cmp mov arpl dec push lods int wrmsr push jb mov cmc push aaa pop jns mov pop andb mov adc push jae mov negl cmp fwait mov pusha andl lret cs jo mov repz push ja mov popa (bad) mov dec imul mov notb aaa pop jns mov pop andb add ret and lret in or mov negl cmp fwait mov bound daa dec imul mov stc sbb pop jge mov dec imul pushf mov popa andl push jecxz es push or dec outsl nop mov repz push ja mov pop jg (bad) out daa dec imul mov cmc push ss jns mov popa (bad) mov add es push or mov repnz pop jnp mov popa (bad) mov dec push lods iret lock push je mov clc sbb pop jnp mov bound daa dec imul mov negb cmp pushf mov xchg dec insl mov push jae mov notl cmp fwait mov xchg dec imul jb mov notb aaa pop jns mov pop add add and mov or push jae mov pop add dec push lods int push das push jno mov cmc push ss js mov pop jle shl and test dec jo mov repz push jbe mov pop jle shl and cmpsb (bad) call lea push jb mov notb aaa pop jge mov xchg dec insb lea push jae mov notb cmp add popa (bad) mov inc mov wrmsr push jno mov cmc adc mov pop jg shl and xchg dec imul jb mov cmc push aaa pop jge mov bound sub mov jae mov negl cmp fwait mov popa (bad) mov dec push stos iret icebp add cmp fwait mov inc mov wrmsr push jno mov negl cmp fwait add add (bad) mov dec imul mov pop jle shl and xchg dec outsb (bad) mov repnz push js mov pusha andl repz push ja mov pop andb push stos int adc push jae mov notb cmp fwait mov bound es insb lea push je mov stc sbb pop jge mov test add add push jno mov stc sbb pop andl iret lock push jne mov cli sbb pop jle shl and test dec insl lea push ja mov pop jg shl and (bad) repnz cmp mov add (bad) mov icebp adc push jbe mov pusha andl int rdtsc push jae mov cli sbb jg shl sub mov repnz push js mov popa add test dec outsl xchg mov cli sbb pop andl (bad) repnz jp mov mov adc push je mov negl cmp pushf mov bound das push jno mov sti sbb pop andl int rdtsc push je mov clc sbb pop jle shl and xchg dec imul push jns mov pusha andb mov or dec outsl (bad) mov repz add xor jbe mov stc sbb pop jge mov imul mov inc push lods int adc push add mov popa (bad) mov dec insl mov push jne mov clc sbb pop andl int3 in or mov repz jbe mov pop jge mov test dec insl (bad) scas (bad) hlt adc mov pusha andb mov or add mov push js mov pop andb push lods int adc push jb mov stc sbb pop jg shl and data16 dec outsb (bad) scas (bad) repnz pop jge mov xchg push jae mov negl cmp pushf mov arpl xor xchg mov cli push inc xchg push jb mov stc sbb pop (bad) mov inc push or add xchg mov stc sbb pop add add cmpsl leave jmp xchg mov cmc push aaa pop jns mov xchg mov pop lret adc and aam dec test add jbe out sub in ss ret in es push or mov sti push aas pusha andb xchg or repnz push jne mov clc sbb pop jl mov bound daa dec insb mov push jne mov clc sbb pop jnp mov popa add daa dec imul mov hlt adc mov popa (bad) mov dec push or mov repnz (bad) sbb pop jle shl and test dec jo mov hlt adc push js mov pop jg cmpsb (bad) call mov aaa pop jnp mov arpl sub mov push jbe mov (bad) pop inc popa andl imul jae mov negl cmp jg shl daa dec imul jbe mov pop andb xchg push jb mov std push aas pusha andl int3 in push das push jo mov stc sbb pop jge mov push or dec outsl nop mov repnz push jbe mov arpl dec outsb (bad) mov negl cmp movsl enter dec outsl nop mov negb cmp shl daa add add mov pop jl mov xchg dec outsl xchg mov std and mov jnp shl es push scas rolb stc sbb pop jg lret add pop jge ret in daa dec push stos int rdmsr push je mov pop andb push adc push jp shl daa dec insl mov push js mov bound sub xchg mov xchg push jno mov jp dec mov imul push inc test cld cmp adc iret lock push je mov negl cmp popf mov popa (bad) mov inc push or mov hlt adc mov bound sub mov jno mov negl cmp fwait mov pusha andl mov dec jae mov negl cmp pushf mov popa (bad) mov add stos add icebp adc push je mov add push aas pop andb mov jp mov xchg dec outsb nop mov hlt adc mov arpl dec insl nop mov repz pop jns mov xchg dec insl scas cld xor aam inc jge out sub loope push (bad) iret cmovp stos out pop cwtl xlat adc roll cmpb addr16 (bad) mov add add in daa dec imul mov hlt adc mov pusha andl iret lock push je mov negl cmp pushf mov bound sub mov jb mov cmc push ss jnp mov popa andl mov dec outsl nop mov repz cmp popf mov add lods int push das push jno mov clc sbb pop jl mov test add call lea push jae mov negl cmp fwait mov pusha andl into out wrmsr push jb mov cmc push aaa pop jns mov pop jg shl and cmpsl enter mov jl,pt out cmp (bad) mov dec outsb (bad) mov repnz push jne mov clc sbb pop jnp mov popa (bad) mov dec imul mov cmc pop cmp mov inc xchg or add add add insl mov push je mov negl cmp pushf mov xchg dec insl mov push jns mov pusha (bad) mov inc imul mov clc sbb ds (bad) mov inc add scas (bad) lock push ja mov pop jg ret and push or jge out es cwtl iret add dec outsl nop mov repz test dec jno mov notb cmp fwait add mov mov stos int wrmsr push jb mov notb cmp pushf mov stos xchg add add xor pop xchg rorl cmpl or xor in pop xchg iret or mov in pop cwtl rcll cmp sbb fcoms dec mov std cmp (bad) (bad) (bad) ss loop pop cwtl rolb jne repnz fcoms dec cmpl mov inc xchg cmovae add and int inc jg hlt sub (bad) or in and aad dec mov or lret xchg add xchg fstpl fs sub xlat or cmp cld cmp sti cmp stc cmp (bad) jnp,pt adc pop inc xchg cld outsb mov xor mov aam inc cmpl jecxz bound scas icebp imul in pop mov cld aaa jb out push xchg enter stos jecxz pop xchg lret add mov and add add pop xchg rolb cmpb es movl inc jl hlt xor lock adc (bad) (bad) cmp in arpl aam dec mov (bad) cmp divb test loop pop xchg rorl inc cmpl sbb ret cld cmp loop test jo loopne push xchg stc xor fcoml push mov cld xor arpl ret add cmpb push xchg add iret or mov add mov divl mov mov (bad) stc sub hlt es (bad) (bad) repnz add sub sub mov mov mov add pop xchg int cmp aad dec mov in daa arpl ret add sub push mov add bound leave add jge repnz mov (bad) cmp jmp gs fsts dec (bad) leave add jp lock add fcoms mov (bad) cmp ljmp (bad) enter mov fstpl push (bad) movl and lcall xor push mov add xchg pop dec (bad) int dec mov pop inc cmpl add ret test add roll mov adc aam push mov add mov and cltd aam inc jle icebp sub xlat adc mov fstl push mov (bad) aaa jo in push xchg rorl cmpb add jecxz pop xchg lret add je out pop xchg into or mov sub insl cmpsb loope push mov std aaa jo in push xchg lret push inc jp in sub mov movb je out pop xchg iret or mov sub adc sar jno jecxz push nop lret jg decb add ja repnz lahf fcoms dec test loope pop xchg int inc jge lock fsts dec mov stc xor loop push mov add jne call push dec cmpl add add pop push mov divl push fcoml dec mov sti xor pop xchg int3 add sub ficoml mov (bad) cmp in pusha fwait (bad) adc ret outsl stos in pop xchg lret add js ljmp test loop push (bad) add jne out pop xchg lret add jae repnz aam cmp les push add lahf aam cmp roll add insl mov jns loopne dec cwtl aam dec cmpb sbb movb (bad) cmp in dec lcall sub cltd rolb xor stc sub es mov hlt xor scas in daa outsl lods out pop lcall inc jns repz cmc xor jmp or mov in pop xchg into adc aam jl cli cmp (bad) aas xchg add jg add mov fistp push (bad) add dec lcall dec mov push push xchg int3 pop inc jl icebp sub pop cwtl fsts push xchg rorb xchg ficompl pop fwait aad pop fwait (bad) adc into or hlt das imul and out pop cltd aam push mov push dec xchg or int inc jge add push xchg fstps mov mov out sub in add jnp (bad) jge,pt divl mov sub mov sub test ficomp pop popf fsts push nop int inc test (bad) cmp lock jecxz pop lcall inc jg clc xor imul add pop cltd aad dec mov add dec xchg pop dec xchg add ss out sub loop pop cwtl rclb dec mov add mov out sub test and (bad) adc (bad) lret pop inc cmpl out pusha pushf fsts inc cmpb daa mov aad dec mov add xor scas ljmp xchg into or sar jnp hlt xor in pop pushf fstps pop xchg rorb dec mov add incb cmp repz call sbb rolb pop push (bad) rorb cmp mov xor ljmp mov add jge cmc xor jmp mov fcoms push xchg int inc cmpl sub pop sahf ficompl push xchg int dec test (bad) cmp mov das imul push pop cwtl aam dec mov push inc jg cli ss in sub loopne push xchg rorb dec xchg add mov call adc inc test add add add insl stos call sbb xchg rorb dec cld inc add cmp hlt xor call push push (bad) enter sar jp cld cmp repnz test fistpl push xchg iret or (bad) lret cmpb mov rorl dec mov add jg cli aaa jne cmc xor jmp jns repz lock stos out popa lahf add and (bad) adc enter mov out sub add arpl add add pop xchg aam dec mov add mov jmp mov rorb dec xchg add jge divl lods ljmp xchg iret or test add jnp divb outsb stos call sbb int inc cmpl das imul sbb or sar jnp cmc xor in sub sbb rorb dec xchg add jge clc cmp lock cmpsb jecxz pop xchg rcll dec mov add jl hlt xor lods ljmp xchg (bad) adc lret (bad) mov repz imul xchg aad (bad) rcll xchg dec (bad) push dec mov jae sub in sbb (bad) cmc inc cmpb insl stos call xchg aam mov cmp js mov hlt xor sub or mov sub loop data16 sbb aam jno aaa jle cld push pop imul (bad) int jns (bad) cmp idivb jne lock cmpsb in bound add xchg iret adc int inc mov pop inc add cmp js stc cmp stc ss out sub loopne pop popf fcompl push mov or inc cmpb cmp jmp mov ficompl push xchg rcll push (bad) int inc jle cli aaa jne repnz out sub loopne pop lahf fcompl push xchg xlat adc movl cmp out cs test fsts push xchg rorb push xchg into or ret add inc (bad) mov add ds cmp mov divb mov cs lods jmp imul jecxz add ljmp movsl loop pop sahf fcompl pop cltd loope pop add fcoms dec xchg add outsl test aam dec mov (bad) cmp ljmp mov add mov out sub loope pop xchg rorl mov add jne in sub ficomp push nop into or mov jmp push dec add mov add jle cmc xor out pusha mov rorb xchg add mov ljmp xchg aam dec mov or sar jne in sub jecxz pop xchg rorb dec mov pop inc add cmp lock imul sbb rorb inc cmpl sub ficomp pop cwtl aam push nop into or ret jp repz insb cmpsb in pusha sahf fistpl push (bad) int3 or mov in sub add sub data16 loop add pop xchg aam push xchg rorb dec mov add dec add cmp repz insl test es aam dec mov add jns repz movb jg sti aaa jae add mov out sub bound and mov cs loop pop mov push xchg lret or inc jp clc outsl scas out sub bound rclb dec mov add jge divb outsb test aad dec (bad) int3 pop inc add cmp add add lock divb mov sub loop arpl adc inc test (bad) cmp outsl lods ljmp fstpl pop xchg rclb dec mov pop inc (bad) mov cld cmp lock test and fcompl push xchg rorb dec mov add jl cmc xor out pusha pushf ficoml push (bad) lret pop inc cmpb sub test and (bad) adc lret pop inc jg clc ss in sub ficomp pop xchg rcll dec mov add jp rep test add add fistl push nop int dec add ret ja out sub jecxz pop xchg aam dec mov pop inc cmpb daa arpl rorl xchg (bad) jnp,pt stc ss in sub ficomp push xchg iret or xchg add mov imul pop push xchg into or sar ja icebp imul cltd aad dec mov add jg clc xor arpl rorl cmp lock pop add lcall inc jge cld cmp sub cmpsb jecxz pop cwtl rcll dec mov or sar jnp hlt xor call sbb into or sar jae jmp bound rorl test add imul adc lret (bad) mov in sub fstpl push xchg iret or sar jl hlt xor out sub loopne pop xchg rcll dec mov push inc cmpb sub pop xchg aam dec mov add cmp lock in sub ficomp push xchg rcll dec mov add jnp repz call sbb rorl cmp insb test fcoms dec xchg into or mov in sub loope pop xchg rorb dec xchg add mov in sub sbb iret or sar jnp cmc xor jmp sbb aam dec mov add xor lods ljmp xchg rorb add mov add insl stos call sbb xchg rorl dec mov add outsl lods jmp sbb iret or (bad) cmp out cmp divb arpl rclb dec mov add add jl divl lods out arpl lret pop inc jge divb outsl lods jmp pop push nop into or mov sti cmp out sub movsl loope pop xchg aam dec mov push inc jg divl outsb stos out pusha popf fcompl push xchg into or add add ret add mov das imul sbb push add (bad) (bad) cmp mov sub pop fsts inc add cmp outsl stos out popa lahf fcompl pop xchg aam dec mov add jle divl jno jmp mov rorb dec mov add cmpl loop pop cwtl aam dec mov or stc aaa jne out sub pop xchg rcll dec mov add mov ljmp xchg into or xchg (bad) cmp out sub out pusha popf ficoml inc (bad) mov mov lock insb test and fsts inc cmpb arpl iret or test std cmp hlt xor call pop push xchg into or mov in sub pop lcall inc cmpb xor jmp sbb iret add inc jg stc aaa je in sub ficomp pop xchg rolb add add dec mov add jge stc cmp lock mov rcll dec mov add mov ljmp xchg rorb dec xchg add jl divb outsl stos call push push xchg rorl dec mov add jp hlt xor lock test fstpl push xchg rorl dec mov or mov ljmp xchg int inc xchg add jnp cmc xor call push push nop add adc dec xchg add insl add add fsts push xchg rorl dec mov add cmpl out bound aam push nop into or sar ja lock insb stos jmp sbb xchg rcll push (bad) int3 or mov push inc add cmp mov ljmp bound int inc cmpl in pop fwait xlat adc inc test add jl divb outsb stos out arpl rorl jle,pt clc ss out sub add add loop pop cwtl sbb adc into or adc movb jp cmc xor out pop fwait (bad) adc enter mov out pop popf fistl push xchg rorb dec mov add xor jmp mov fcoms inc cmpb add mov daa mov rorl aas jl divl lods jmp sbb dec xchg add mov out mov rclb dec xchg (bad) cmp jnp divb jno ljmp xchg rorb inc (bad) sar js icebp imul xor out sub pop lcall inc cmpl sub popa sahf jecxz pop pushf xlat adc int3 or ret js repnz adc mov or cli xor pusha popf fsts (bad) int3 or lds aas jge divb outsl stos out popa sahf fsts push mov pop inc add cmp lock movsl jecxz pop pop xchg xlat adc mov pop inc cmpb cs in sub loopne pop xchg aam dec mov add aaa je in sub add arpl rorb xchg add mov icebp cs jmp data16 (bad) adc int dec mov push inc cmpb xor insb stos jmp sbb xchg aam push (bad) lret or movl ja cmpsw in mov fcompl pop cwtl (bad) adc xchg aad add lret or roll jnp divb jno out sub loopne pusha popf ficoml push xchg into or sar jp hlt xor out pusha popf ficoml push (bad) push inc jg cli ss in sub fistp pop cltd (bad) adc enter mov out sub cmpsb in pop cltd aad dec mov add jl divl mov int3 or cld cmp in sub loope popa sahf ficoml push xchg iret or cmpl out xor jmp mov add add fcoms inc cmpl fbld pop fwait xlat adc enter mov in pop fwait xlat adc enter mov jmp bound int inc (bad) mov lock pop cwtl rorl dec mov add jl cli ss jmp mov into add (bad) int3 or sar je in sub loopne pop xchg xlat adc (bad) int3 or sar je lock test fcoms nop int3 or add std cmp sub fistp dec mov add cmp repnz bound int dec xchg (bad) jnp,pt hlt xor ljmp xchg rorb jnp,pt cmc xor icebp cs out popa popf ficompl push nop rorb test (bad) cmp mov das imul sbb add pop push nop int3 or ret jl cmc xor icebp das insl test and fcoms push xchg rorb inc jg clc xor add add sub fistp dec mov add jg clc xor arpl pop cwtl aad dec mov pop inc cmpl fistp push xchg rorb test add inc jg sti cmp in sub loop pop cwtl fsts push xchg int inc (bad) mov out sub movsb loopne pop cltd aam dec mov add jl hlt xor jmp mov rorl aas jge sti aaa jb in sub fistp push xchg int dec xchg add aaa je add add loopne pop xchg rcll dec mov add mov jecxz pop popf fstps push xchg rorb dec xchg (bad) cmp lock pop lcall inc jg divl jo call out bound iret or nop iret or ret pop xchg rorl add or cmp lock movsl loop pop cwtl (bad) adc leave push inc jg stc aaa je in sub ficomp pop fistpl push xchg iret or cmp out sub in pop fwait fcoms mov or sar ja lock cmpsl in pop lcall dec test std cmp out sub loopne pop xchg rorb dec mov add mov in sub ficomp pop xchg rclb dec mov add jle cmc xor out addr16 pop xchg aad dec mov add jge cmc xor jmp sbb rorb dec xchg (bad) cmp out sub fistp push (bad) lret or inc jle stc ss in sub sbb iret or test std cmp icebp cs jecxz pop cltd aad dec mov push inc jle cmovge lds cmp imul add push xchg rorb dec mov add imul adc leave pop inc cmpl in pop cltd aad dec mov add xor jmp arpl lret cmpb sub ficomp push xchg rorb dec xchg pop inc cmpb push in pop lcall add mov ljmp (bad) int3 pop inc jg divl lods call sbb rorb mov add mov jmp arpl int3 or mov icebp sub pop lcall inc test cld cmp out sub loop pop lcall jnp,pt hlt xor jmp sbb or mov in sub loopne pop fwait xlat adc movl and push add int inc add cmp in sub loopne pop xchg rorl dec xchg add cli ss in sub sbb rorl cmp mov sub pop cltd aad dec mov push inc (bad) mov in sub pop pop cltd (bad) adc lret cmpl fstpl push xchg rorb jge divl lods jmp sbb rorl jle imull pop xchg rclb push xchg rcll push xchg iret add add dec mov rcpps fcomps push xchg (bad) sbb fstpl popa mov loope outsb stos jecxz push (bad) movb je call add jae call sub mov (bad) cmp in push (bad) add jbe call or mov fistl mov (bad) ss jecxz push nop lret add divl outsb test pop pop xchg into pop inc jnp out sub out pop cwtl rorl inc jle out sub fsts dec cmpl adc clc xor pop push mov stc xor adc cmp jmp data16 cld inc xchg or int dec mov or rcrb pop sahf ficomp pop popf fcompl pop lahf in outsb mov aaa jp out sub aam inc jg out sub jecxz data16 loop pop fwait xlat adc (bad) int3 or sar js repz jmp sbb rorb aas jge stc ss out sub loope pop popf ficoml push xchg int inc test (bad) cmp mov xor ljmp sub loope pop pushf ficoml push nop int dec test (bad) cmp mov jmp sbb fcoms push xchg rorl dec mov add cmp jo out sub popa sahf fildl and fsts dec test (bad) cmp mov xor out sub pop pushf fcoms push nop int inc test (bad) cmp mov imul push pop cltd aad dec mov add jge clc ss lock mov fsts push xchg rclb dec (bad) lret add add inc jg stc ss in sub movsl jecxz pop sahf fistpl pop xchg rorb dec mov add mov hlt xor call push push xchg rorb cmp mov jmp mov ficomp push xchg rorl inc jle stc ss icebp das insb stos out arpl rorl dec mov pop inc add cmp mov xor in sub loop pop cltd xlat adc rorb xchg add ja hlt xor ljmp popf fadds pop push xchg rorb mov add mov lock das insb test and ficoml push cwtl (bad) adc int3 or ret add jl clc xor push out bound iret or inc cmpl out movsl jecxz pop popf fistpl pop xchg aam push (bad) lret or cld cmp hlt xor in sub loope pop cltd aad dec mov add cmpb sub movsl in pusha mov (bad) adc (bad) int3 add or movb aad push xchg rorb dec (bad) lret add cmp clc ss lock ljmp cwtl (bad) adc into or xchg add jp divl jo jmp mov fistpl push xchg rcll dec mov push inc cmpl out sub in pop popf fistpl push xchg rorb dec mov add jge divl mov cs out pusha fcoms add fistpl push xchg aam push xchg rcll dec mov push inc jg cli cmp sub movsb fistl popa lahf ficoml dec (bad) mov loop push (bad) movl and roll inc jg repnz je in outsb lods ljmp cmpl and lret test or into pop inc xchg cvtps2pd or push lcall test pop pop stos hlt ds aam insb mov sbb repnz sbb jmp dec (bad) movl jae std dec xchg fldenv xchg fsubrl mov add add pop lahf ljmp fildll jae add xlat pop scas icebp cmp cwtl call pop movsl hlt cmp (bad) adc in cmp or mov push push popf in aaa or pop mov out xor or fisubl mov testb jno incl lret adc jae addr16 xchg fisubr outsb in pop movsl jmp add pop pop lahf in ja or call push test idivl adc pop mov add or movsl jmp push cwtl jecxz addr16 pop test mulps or jmp test orps cmc cmp leave adc loop ja push inc xchg (bad) and mov inc (bad) rcll test xor add loope jae decl fsubl mov inc mov push pop mov incb fldt outsl mov push push stos out cmp jecxz jb add (bad) outsl mov dec xchg loopne imul sub add add fildll mov sbb jge or in jbe adc xor adc cmpsl in ss adc fisub fisub cmc or push cltd loop jae add xlat sbb mov sbb call dec xchg fsubs (bad) aad data16 cmp movsb in je pop dec xchg frstor insb scas sti inc sahf in jbe or fcompl imul cmp stc aas (bad) (bad) add add insl mov idivb sahf out jns or loop jo add xor cmc cmp lock in aaa jl push push cltd loope jns cli inc mov adc in xor (bad) or in xor or out jbe add mov and add loope jo add fldenv stos ljmp into sbb out cmp clc ds adc cmpsl call inc mov sbb addb sbb addl add push lods out xor or loope jo add xlat and hlt aas add push cltd frstor push incb fisub jo add xlat and testl fisubl push stc ds sbb incl xlat and cli inc mov sbb xor or jmp addr16 ds adc insl stos out ss or fisub jo cld dec mov sbb or push popf jecxz je incb and add fsubl outsl mov inc mov add fcomps pop xchg rorl push cltd fisub rcrl gs cli inc mov and cmp fsubs gs inc mov adc cmc ds bound adc loope je push push add dec pushf loop je add aam pop add and decl frstor imul dec nop into adc cmpsb in xor pop push xchg loop ja push dec cwtl fisub scas cli inc mov or sub add fsubs insb mov add arpl push cltd loope outsb mov inc mov and testb sbb mov inc test adc in jns adc out jae add in ja add dec xchg fstps jl or jb pop push lahf in xor mov clc xor pop lcall sub push dec mov and push xchg rorb dec mov add jl divl jo sbb fsts push xchg iret or dec test (bad) cmp hlt xor outsl lods jmp sbb xchg rclb dec mov push inc cmpb repz outsb stos call sbb rcll dec add leave push inc cmpl out popa sahf fcompl push xchg rcll dec mov add jge stc ss out sub in pop fwait xlat adc dec mov add jg sti cmp lock push push nop rorb jnp,pt cmc xor out pop fwait xlat adc inc xchg or sar jns add xor out popa sahf fistpl push xchg rorb inc jge divl jno jmp mov aam dec (bad) lret or add rcll dec mov adc mov add jb loopne pop xchg rclb push (bad) lret test (bad) cmp jb jmp mov aam push xchg rorl aas jnp cmc sbb lods in sub test and pop xchg aad push (bad) lret or ret add inc add cmp mov das insl lods jmp and movsb loope pop add into or xchg (bad) cmp outsb stos call sbb rorl inc jge divb jo jmp gs ficomp push xchg rorl dec mov add jg stc cmp sub cmpsb loop pop xchg aad dec mov push inc cmpb sub pop mov rorl dec mov pop inc add lock cmpsl in pop cltd (bad) adc leave push inc jg clc xor scas in sub out pusha lahf fistpl push xchg aad push nop int inc test add jl divb jb out sub cmpsb in popa popf fsts push xchg int dec mov pop inc cmpl loop pusha mov fistpl push xchg iret or movl cmp icebp cs stos call sbb aad add rorb dec xchg add add inc jg std cmp mov out sub cmpsb in bound xlat push push nop rclb dec mov add ss out sub in pop cltd ficompl push xchg rclb add dec mov pop inc cmpl in pusha sahf fistpl test sbb mov fstpl push mov add jnp out daa bound pushl lods in cmpsl ljmp movsb loop push in push nop lret ja call add loope outsb xchg mov cmc adc shl and xchg (bad) sti cmp mov fildll je push push xchg add ret mov and test aad push xchg iret sbb add add dec mov dec imul jge pop popa lods icebp das outsl lods jmp das jae clc cmp mov aaa add in and xlat or sub aas add mov int xor mov mov ljmp mov sbb cltd (bad) and lret jno out and rorb inc (bad) mov clc cmp cli cmp add iret or fcoms push xchg into or (bad) int3 pop pop mov adc push jae add xchg or (bad) or (bad) sbb lahf loope gs add leave or out cmp loope data16 idivl (bad) (bad) sbb rcll dec (bad) rcll push pushf fcompl push xchg rorb push (bad) loop arpl xchg mov negl cmp pushf mov in sub cli inc (bad) loopne cmpsl jmp inc add dec xchg fcomps push mov (bad) cmp in bound mov sub cld cmp xor jmp loopne addr16 add add and es in xor cli add (bad) incl roll mov or arpl rcll push xchg xlat adc lcall cmpl mov dec mov pop inc xchg pushl mov ret jle repnz push xchg rcll dec mov adc ficoml pop fwait loope data16 jmp jne lcall loop popa mov mov xor in cmpsb out push lods icebp das jae clc ss add add enter ret test or xchg or xchg rclb push pushf jecxz jo stc inc mov or (bad) sbb out xor mov sbb loop imul dec mov sti sub sub xlat adc or xchg or xchg (bad) push push (bad) ret cli sub mov into pop dec jge out daa pop mov jecxz add pop fstps pop cwtl rcll push cltd ficomp mov in pop lcall add add push xchg fistpl pop mov idivl jnp std cmp add pop pop fwait loopne pop lahf loopne arpl out mov cli cmp iret adc fsubrl mov or (bad) fisubl push repnz mov ss add ret nop xlat sbb in jae jecxz push mov push inc test (bad) xor mov sub xlat adc lds cmp loope pop cltd lret std xor loope inc jge jmp (bad) cmp jl sti cmp mov add push cwtl loopne push repz cli das push xchg aad dec (bad) sar imul bound into add add out and ret jae ficom inc jl sti cmp cmpb inc xchg or aad pop fbld insb test xor in sub ja add jg add mov adc loopne push mov add lret or pop lcall add cmpsl out outsl mov cmp incb into adc fistpl pusha mov hlt jp,pt incl or into push push xchg (bad) pop push xchg fstps pop sahf jecxz jno out cmp add les dec xchg fistpl pop mov in das je std cmp roll mov adc pop popa sahf loopne arpl in sub loop push xchg aam dec (bad) mov int3 add jbe ljmp lcall bound add iret sbb add add adc aam dec xchg add sub idivl lret adc out outsb mov aam imul dec nop fstps data16 testl decl fldenv lods out sub add imul push cwtl fldenv scas sti ds sbb jmp push movsb in arpl dec mov push arpl and mov outsl mov inc test add roll and test divps sbb add add idivl adc sub idivb jle xorps dec nop fistpl imul and stc ds sbb stc cmp cli inc add push sahf in jae add jno clc inc xchg adc pusha mov incb iret sbb cmc cmp stc cmp repnz clc aas test or popf call dec (bad) fcompl push lds dec add in je or xchg frstor outsb mov loope jae add fisub (bad) adc jnp cvtdq2ps pop inc cmpb scas repnz enter in js push inc xchg loopne jne cld cmp add lods out ss adc mov or pop test add cmpsl in cmp inc xchg fisubl scas idivb xchg adc movsl jmp jnp or fsubl mov or int pop lahf loopne imul mov inc mov sbb cltd fldt (bad) dec mov xor or repnz adc jge adc iret adc jno add fisub mov inc xchg (bad) and pop inc mov sbb mov push pop stos repz loope jbe repnz incb leave push push add adc jmp fcomps outsl mov push add repnz push lcall xchg frstor outsl mov inc add push popf in insl mov dec xchg fldl add mov sbb cld inc (bad) xlat sbb cmc inc mov sbb repz mov sbb jp hlt ss pop lahf out ja add jnp adc jmp dec mov std aas (bad) mov cmp sub and (bad) adc mov daa bound cmc xor mov cmc inc mov sbb sti pop mov jno mov cmc push aaa pop jns mov pusha andl fistl add push xchg rcll push xchg rcrl push cwtl (bad) imul add test add jle std cmp ret jg icebp sub in outsl stos out push pop cld xor ja (bad) ds or ret add add das popa xchg (bad) mulb push mov mov sbb lods fstl dec mov pop inc cmpl orps mov rolb cmp cmpsb fcompl dec test or mov jecxz mov xchg lret add jae cli inc xchg fcomps pop fwait out dec mov or mov repnz repnz pop cwtl fcompl cmp sti cmp out pop xchg aam inc xchg push inc add dec test out daa bound out xor mov cmp (bad) aaa jbe cli cmp add rcrl pop lcall dec popf ficompl pop pushf fildll insb mov sub call in xor sar jp in and rclb push fwait jecxz add add imul or roll xchg fstps pusha movsl add xor add icebp xor scas lock in popa lcall push mov cli xor loop arpl ljmp stos out push mov in mov mov out pop fwait rorl dec add aaa add in and xchg into pop dec mov pop inc jg icebp xor loope push nop lret jp stc xor scas jmp pusha sahf fsts mov add add jle repnz aam pop xchg enter leave or inc jle in and int inc (bad) mov in pusha lcall and pop fwait loopne pop pushf fistp popa movsb in push fisub pop fcomps pop mov out jno cli aas mov adc mov add aad arpl add int3 add pop movsl in xor loopne pop fwait rcll add aad pop lcall push in xor stc cmp jl or lret stos call adc fstpl outsl mov inc nop fsubs imul dec xchg rcrl pop lcall or daa outsl mov adc lahf ljmp pushf loop jnp pop push lahf jecxz data16 in outsl mov cmpsb out imul and fstpl mov divb insb mov cmp mov adc pushf loop jo add aam pop mov std inc (bad) rcrl add add hlt aaa jns std inc xchg adc jo idivb xchg fstps push lock mov cmp ret push inc xchg das outsl lods in data16 in xor add fldenv addr16 cmp mov push pop cltd fstps pop mov incl add xor cwtl ficompl outsb mov cmp fsubl outsl mov inc mov cvtps2pd repz jns add aam gs lock add enter jecxz jae add add add and inc mov sbb in das jb add add pop imul imulb jb hlt ss stc cmp add cmovg fstps pop xchg aad pop lahf jecxz addr16 sub xchg frstor or push popf in jae add inc xchg adc mov pop arpl cli cmp add iret adc loop insl lods icebp xor incl enter leave or or cmp cld inc add (bad) les dec (bad) in test in jp,pn idivb jnp incl add sub mov cmp fistpl stos bnd push dec xchg fsubs stos out ss leave addps out jo stc cmp cmpsl in xor or pop fwait loope jo hlt cmp nop aad arpl adc imul pop inc (bad) ret inc test add jnp clc cmp in sub in addr16 test xor sti cmp icebp aaa jae icebp xor inc add dec xchg fisubl jno cli inc mov adc lahf out jne add frstor stos icebp xor inc mov pop pop movsl call sub lods out xor add les dec (bad) xlat sbb and jl (bad) arpl repnz push dec mov adc jae add rcll push xchg aam push xchg fstps pop lahf out jg pop add decb fsubl pusha stos in ss add add sbb add arpl push xchg xlat es xor add iret adc frstor lods stc inc mov cmovg ficomp jbe push dec xchg xlat sbb mov aas xchg adc cwtl fistpl outsl mov aas add std dec mov add dec mov push inc cmpl cmp aas xchg add mov add iret adc fsubl imul pop lahf loop test adc je clc cmp mov add and bnd pushl jae out insb lods out xor rolb (bad) or rclb outsl mov cmp incl ss call inc test or sahf out jae add (bad) rclb pop xchg fcompl jp or jns or jo,pn stc cmp lds push fwait in jne add push pushf out jno stc aas jnp incl int push xchg (bad) stos out cmp add inc mov and aas add fiaddl pop arpl in pusha mov aam pop xchg (bad) adc xchg rcll push lcall pusha cmpsb loop pop mov in xor or (bad) sbb jle add scas testl jmp cmp or jne stc cmp cmp ret test or lret xchg xlat pop pop mov jmp jnp cmc sub xor idivb jl packsswb or nop xlat pop pop lahf loop add test inc test sbb in xor or fistpl ja stc aas add push pushf in je or lods repnz incb enter jecxz jo stc ds or dec nop aam push cltd loop scas clc cmp cli inc cltd in insl add cmc cmp add add pop mov out pop lahf loopne xchg rorb dec mov add jge repnz xor jne (bad) cmp std inc (bad) roll xchg rcll add fistpl adc mov or (bad) sbb loope add push fwait in outsb mov xor mov incl lret adc aam pop popf fisub cmpsl in xor add roll les aas jns cli cmp fsubs imul sub out das jno idivb jle or jge or loope popa cmpsl call dec mov adc ja add xlat push arpl and jge sbb in ja add xlat sbb ficoml pop fwait jmp dec cwtl loope insb mov inc mov and or aad insb mov xor mov add rcll push add loop pop cwtl aad pop xchg (bad) adc push xchg xlat adc (bad) int pop sahf ficoml pop popf out jo icebp xor lcall add push cltd jecxz jo add int3 or arpl adc fstpl pop pushf fsubl outsb mov cmp std aas (bad) lds add or (bad) push pop movsb out outsl stos out xor mov xor mov pop pop cmpsb hlt ds push pop test sub mov inc (bad) xlat sbb lods icebp ss sub pop dec (bad) fsubrs imul and cld inc (bad) fisubl imul adc fsubl push lods ljmp lahf fisub pusha mov call cmp cld cmp or and decb aad pop mov add add add xchg fimull jg or cltd fisub outsl mov inc add dec mov or rcrb pop pushf loopne gs sub incb into adc xlat sbb pop xchg rcrb pop mov idivl or xor add int3 or (bad) sbb out jns or in xor mov adc loop push roll xchg fisub test or push popa movsl jmp dec xchg frstor push mov add int pop mov or fldt jno decb xlat sbb out insb scas sti aas mov pop push xchg rorl push xchg fcoms pop xchg rclb dec nop rclb xchg fcoms push xchg fldenv mov fcompl pop mov repz or lods repnz pop dec xchg fisubl jno incb lret or jb add push lcall xor jl or aam push xchg xlat pop pusha movsb ljmp mov cmp lock mov add add mov adc jecxz jb add rcrb pop pushf ficompl pop mov stc inc nop fildll outsl mov inc (bad) fsubrs jae clc dec (bad) iret adc jmp jo sti inc xchg adc out outsl mov cmp sti cmp xchg aad pusha cmpsl jmp je add adc and hlt aaa test pop push int bound add pop mov add les inc mov add inc add or arpl add outsl stos out data16 in imul ret xchg ficomp lods cmc cmp int pop sahf loopne pusha movsl out insl mov inc test cvtdq2ps out sub jl or xchg fstps bound lods add cmp mov inc (bad) mov cmc aaa js add (bad) fldenv mov adc pop fbld test xor push popf loope jno incb ret mov adc fsubl xchg adc in add jle or lret or xlat sbb mov push dec (bad) aam push xchg rcll push cltd fisub jl or (bad) sbb repz jge or push mov or ret add mov out pop ficoml push xchg rcll push xchg rclb push cltd loop pop cwtl fisubl mov cli cmp add (bad) sbb mov pop pop cmpsb in xor add rcll push fcomps popa cmpsb jmp jne add (bad) sbb add lock cld cmp mov adc loop add jae icebp xor add jns add int push cwtl (bad) jo std inc mov sbb loope bound decl frstor mov adc ficompl insb mov cmp fwait jecxz push ret incl adc out xor lds pop mov in sub jg or aad gs das jp adc repz rolb mov add push cmpsb in xor (bad) jp,pt hlt cmp in sub ljmp mov std aas add add rolb xchg adc fcomps mov adc in jb stc aas mov adc lcall jge or ficompl pusha mov idivb nop rcrl pop mov repnz sub addr16 pop sahf add das jno cli inc mov add add incl roll xchg or add es sti inc xchg fisubl scas hlt aas test cvtps2pd add xchg (bad) cmpsl icebp ds adc jns cld ds sbb ficomp pop sahf (bad) pop ficompl pop cltd aad gs loope gs xor sub cmc xor cmc ss stc ds inc xchg adc out outsb mov cmp les pop mov add pop popf loopne insl mov aas or sahf (bad) inc mov sbb loop movsl in insl scas icebp cmp add add add xor cld jl,pt push inc mov in insl scas icebp xor xchg sbb repnz enter rorl push xchg fistpl lods testb and add (bad) or adc outsb mov aas mov add addr16 cmp add repz std inc xchg pop pop movsb out aaa jle or mov push pop movsb in xor mov std inc mov sbb test stc cmp inc mov or add mov idivl jo jmp adc (bad) rcll push xchg aad pop sahf loopne insb stos in pusha mov out insb lods lock or xlat sbb or pop popf jecxz jne add leave or frstor push rolb xchg pop dec mov or push in xor std inc xchg push dec xchg fstps pop mov cld aaa test push dec nop (bad) sbb ljmp xchg int dec (bad) into cmovge movb add add dec mov sbb in jb icebp xor mov aas add dec mov adc jno std inc (bad) lret popf loop insl mov inc mov adc sbb jns or loope push ljmp mov or xlat sbb in push icebp xor in insb scas divb jg push dec xchg fsubl push aam pop pushf frstor gs repz lcall cwtl fsubl bound repnz cmpb add imul push popf ficompl push fwait jecxz insb lods out xor lds cltd fisub add or lcall jo std inc mov push pop movsl in cmp repz jne sti dec (bad) rcrl pop mov repz repz imul out imul jmp xor hlt cmp rorl loope jo incl int push pushf loop jo sti inc mov pop push cwtl fisubl arpl add into adc add add add add adc fwait jecxz insb mov aaa add or shlb mov pop lcall push lcall mov push arpl lock cld inc mov sbb add push popf loop insb mov inc mov sbb aaa jnp or frstor mov or push xchg (bad) gs lock mov repnz js cli cmp inc xchg add rolb pop pop xchg xlat sbb and ljmp ds adc call inc xchg fisubl push (bad) or rcrl pop movsl jmp jbe incl leave or adc out jo hlt cmp add rclb cltd fstpl pop pushf out lahf fistl pop mov or loope jb cli aaa jge or (bad) push pop mov sti inc mov push arpl adc ljmp rcll pop cmpsl out xor enter rclb pop mov stc aas (bad) mov add add push (bad) rorl dec mov add push xchg fcomps bound jmp imul xchg fstps jns add aam pop cmpsb out xor dec nop rcll pop lahf jecxz jl adc in sub jno cld cmp ret xchg or loopne add hlt cmp cmc cmp push mov cli cmp rcrb pop mov add dec mov adc jecxz jne or fisub outsb mov push pop cmpsb ljmp lret adc loope jp or rclb dec mov adc pop arpl or fcompl pop popf ficoml pop lcall or pop sahf loopne je add jecxz jae std inc (bad) lds dec (bad) rcrl pop fwait aad push xchg int3 or add mov hlt aaa jns cld cmp std dec (bad) int dec xchg (bad) adc xchg fcomps bound stc aas test adc jecxz jo std inc mov sbb scas bnd add add aad bound add push xchg xlat and in imul mov adc fcompl cmpsl in imul in jne add iret pop pop movsl jmp jp add rclb dec mov adc (bad) fs out ss aaa jge incl leave adc frstor lods hlt cmp rcpps ljmp enter fcomps gs cmc cmp popf fisubl arpl clc inc mov adc add das jno pop dec xchg fisubl push cmc aaa jns cld aas mov adc loope pop lahf loop bound jmp jae icebp xor add les pop cwtl ficompl pop lcall js add fwait jecxz jae cli inc test adc loop outsl mov dec (bad) iret adc fisub data16 xor push xchg fcomps popa cmpsb out imul add popa cmpsl jmp inc add dec mov divb ja add int3 adc out je add add add in insb mov das jb divb jns std dec cltd jecxz jbe add xchg fisubl gs xor add nop rcrl popa cmpsb out xor sahf jecxz imul adc loope push clc inc mov or pop mov add sbb loopne jno add fistpl pop cmpsb jmp cmp ds dec mov or mov pop pusha popf fistl push xchg rorb dec xchg rclb pop cwtl fcoms pop lahf jecxz push loopne movsb jecxz add add cmpsl out das jne sti inc mov pop lods repz push cltd loope jb add rclb bound push xchg fcomps data16 ljmp lds dec nop aam pop mov cmc cmp movsl lock scas addr16 or jbe add xchg aad pop lahf jecxz test je push dec add cli inc xchg adc ljmp (bad) push insb lods repnz out jns add mov adc popf fiadd add add mov xor stc inc jle stc ss cld cmp test andps jecxz pop mov call das outsl mov aas (bad) enter fisub gs ss or test imul push lret adc cmpl mov sbb xchg movl sub leave (bad) cmp jecxz push test das push (bad) or inc jle sti aaa ja cmc cmp cmp repz data16 xlat push inc jg (bad) cmp add add out insl lods out xor divb jne icebp das outsb scas out xor (bad) cmpl aad pop cwtl xlat sbb fstps pushf in imul xchg aad push nop (bad) adc push pop or enter jp divb outsl mov xor mov cmp add aad pusha lahf fstpl pop movsb in data16 stc cmp rcll push xchg fistpl cmpsb ljmp (bad) or or imul add add adc int3 or mov xor aam dec test repz daa arpl ljmp test xor incl (bad) or xlat sbb mov divb jns add jns clc aaa jbe add movb (bad) sar jo jecxz pop mov mov pop pop mov out aaa jp or fsubl test push push xchg frstor insb mov inc add push xchg xlat pop pop lahf loope pop xchg iret or (bad) mov mov xor ljmp xchg xlat adc mov xlat adc mov fist movsb push push mov add cmpb add jb loope push xchg fcompl add jno jnp cli ss hlt xor lods out sub out imul (bad) sti jne,pn out sub lret outsl stos in daa popa fwait rcll fwait in jbe add adc fcomps pop sahf ficompl popa movsl jmp dec xchg fcomps add out sub or push xchg (bad) push aam fs clc inc (bad) lret mov push pop mov add (bad) sbb jmp jae cld dec test add push pusha stos repnz jle or fisub outsb mov inc xchg ficompl popa mov out mov fmuls inc jns icebp sub rolb adc enter mov daa movsw loope es popf ficoml xchg loopne pusha lahf fistpl pop pushf xlat adc fistpl pop cwtl rorl add dec (bad) rcll pop mov idivl leave adc jmp inc mov pop imul push pop cmpsb in xor push dec xchg rorl push (bad) int3 or mov pop pop pushf loop stos lock inc (bad) lds aas (bad) sarb xchg add jl cld inc test or aam pusha test ss pop popf fbld push mov pop bound sbb jp add pop movsl jmp push fwait jecxz outsb mov cmp mov adc daa outsb mov sbb loop arpl inc xchg rcrl pusha cmpsb lock or jo testl aad pop cmpsb in add jae hlt cmp cmc xor repnz jge hlt xor add test or fsts push xchg aam push xchg aam pop mov cmc cmp popf loop push repz pop dec xchg fisubl mov xor mov sbb cmpsl in xor incb pop dec xchg rcll push xchg (bad) add sbb daa push icebp xor clc xor mov sub insl mov cmp sti dec (bad) aam pop mov in xor decl rclb pop lahf jmp inc (bad) rcrl mov cmp call pop cmpsl testb adc loope insb scas cmc inc mov adc leave or into or int3 push dec mov or lret or iret (bad) cltd fistp xchg aad pop lahf in jno cli cmp dec xchg fstps jae add add rclb pusha test xor add add sbb in ss add rcll add ljmp (bad) or rclb data16 sub stos jmp and in sub add fisubl jb stc aaa jle std dec nop aad pop mov sti cmp cmpsl jmp js add aam arpl push push mov andps testb adc arpl fcoms push xchg aad push lcall sbb out mov divb outsb mov xor cli aas test or lods std dec xchg (bad) sbb ljmp rcrl pop lahf in push int pop pushf loope push hlt ss cli cmp add iret adc fbld outsb mov xor (bad) mov daa scas lock test adc in ja add rcpps mov inc add cmp mov sbb repnz add int pop fwait add add sub add fcomps push mov pop pop pushf loopne bound or das outsb mov imul adc lock push mov cli cmp movb test stc xor fcoml dec (bad) lret outsb mov sar addr16 push mov cli xor push mov cli xor fmuls dec cmpl leave add pop pop std xor mov rorb cmp add rorl jg lock into add push mov aam inc jp in sub rorb aas ja in arpl mov loopne dec mov sti xor movsl ficom dec mov add jno (bad) out and enter cmpsl faddl and xchg int3 add outsl mov mov sub out pop popf ficomp push xchg fstl dec (bad) mov xlat adc mov in push (bad) (bad) imul add add add jle call or mov loopne pop popf fcompl pop xchg int inc jns jmp pusha xchg rorb mov cld xor fstps dec mov (bad) cmp jg repnz fistpl pop pushf xlat sbb (bad) std xor push lods in xor mov cmp add (bad) xor jg add cmp ljmp mov or inc je out pop mov incb (bad) arpl sar jle add cmp cmp idivl jp icebp xor sti cmp or push cmp mov ret add push popf jecxz jno cld add (bad) incl lret jge incl roll stos repnz add sub (bad) movl jb ljmp mov aaa jnp cmc aaa jb bnd repnz hlt xor cmc aaa je idivl jl std cmp int3 or xchg (bad) push pop sahf loope arpl add lock jo inc test push inc test add mov outsb test daa imul pop dec mov add outsl cmpsb fistp push mov std xor sbb inc jg hlt imul mov sub fcoms dec mov std cmp out sub fstl push mov add jne ljmp mov std cmp ljmp xchg (bad) cli cmp cli cmp add mov roll test sti cmp add add leave or rclb push cltd fistpl cmpsl jmp xor divb jbe call es mov or (bad) adc out imul sbb loopne insb stos jmp jns pop dec (bad) aam push mov or sbb movsb jmp jne cld inc jp repz je icebp xor mov or loop jo cmc cmp push inc mov or jecxz arpl repnz xor jbe icebp add daa arpl mov rorl and iret push inc jnp jmp push sahf xlat pop pop lahf loope pop xchg roll inc xchg add ja ljmp mov rcll dec nop iret or loop mov adc das data16 (bad) push (bad) int3 pop dec add lret add ja out push add leave push aas js in imul sub test into or xchg std inc test or into or add push inc mov adc rcll push cltd loopne imul xor mov ds adc ficompl pop mov std dec xchg rclb dec mov adc fisub cmpsl out xor add jl out xor cmc cmp incl rcrl pop popa int inc jnp jmp or xchg adc leave add jp std cmp insb stos ljmp mov add (bad) mov cmp jmp push xchg fcoms push xchg rclb inc xorb and mov add mov sar jne repnz out data16 loopne bound fstpl popf ficomp push xchg fisubl bound jmp or push popa cmpsb ljmp rcll push xchg fstps stos icebp aaa jns pop dec (bad) rcll push xchg fcomps ja add aad push xchg (bad) pop pop mov decb (bad) sbb insb scas icebp xor mov pop pop mov in sub mov xor xor das insb test sbb adc xchg rcll push xchg rcll push xchg into adc iret or push xchg aad dec mov cmovg roll xchg adc dec mov cmovl lret mov adc rcll xchg (bad) adc bound cmp roll xchg or mov and jmp xor xchg rcrl pop mov add push sahf loope bound stc cmp movsl in sub je incb pop test xor cli inc add mov adc loop insb mov cmp enter fcomps lods divb ja add or inc (bad) sar insb cmpsl out outsb lods in sub jmp bound ljmp mov ss idivb ja idivl jae out bound call sbb mov loopne bound out das jo divb add adc out imul and jmp jb or int3 mulps add imul pop lcall jae add (bad) pop mov hlt cmp std inc xchg adc out jno cli cmp mov adc push repz cld inc test adc add push dec xchg add jbe icebp xor je hlt aas add (bad) sbb fstps push xchg fistpl popa lods in and movsb in outsl mov cmp repnz mov cmp in xor scas cmc cmp incb int3 sbb loope jno add add incl enter rcll pop mov lock mov and out xor add pop movsl in xor sti cmp roll lahf loope cmpsl ljmp rcll push lcall test rcpps loope imul pop sahf fcompl push mov sub in pop xchg (bad) sbb fistp imul in push mov cmp add outsb test add push fwait jecxz pop sahf fstpl push mov or rcrl pop ficompl push cltd frstor pusha add call sub insb mov xor sti cmp testb test add pop mov in das je idivb jle or popa test outsl mov inc xchg adc ficompl scas stc inc mov sbb fistp pop mov idivb test or ficompl push cltd fstps popf fcompl pop popf fnsave jl or rorl push xchg fistpl xchg add or and cld cmp xchg fsubl arpl push xchg fstpl pop lcall bound int inc add adc sbb pop mov in mov hlt xor jp or xlat adc fcomps pop mov enter mov and in insl scas in xor sbb sahf (bad) adc int3 push dec (bad) rorb dec xchg fcomps bound add sub clc cmp add roll nop fcomps arpl lock add add (bad) cvtdq2ps cmc xor xchg fstps insl mov aas test adc cwtl fsubl push (bad) or pop lahf jecxz arpl stc ds sub cmp iret adc mov add or loop movsw out arpl fistpl pop xchg fcomps pop cltd xlat pop pop mov in push jmp xor out outsl mov aas add inc add inc test add add inc xchg rcpps loopne push repz cmp lds push xchg fldenv push idivl test push push xchg fsubl imul and hlt ss cld inc xchg or and icebp ss lret cltd frstor stos in xor or lods repz incl add sbb or dec (bad) lret adc sbb xlat adc xchg rorb dec mov adc rclb push add jmp and in push jecxz cmpsl ficom push mov add dec mov add les dec mov cmovge (bad) or dec xchg add dec (bad) into or pop sahf in data16 call sub mov sbb jmp jo hlt cmp mov hlt cmp aam push cwtl (bad) stos out cmp loopne pusha lahf out push stc inc xchg or fsubl scas icebp aaa jle lret (bad) rclb pop mov clc aas test or mov sbb fbld pop fstpl pop xchg (bad) cmovs xlat sbb fadds and test repnz dec xchg rclb push (bad) rolb sti cmp mov or enter lret xchg add push xchg fstps arpl hlt aaa jnp incb int3 or rcll mov add into adc in jno clc cmp (bad) or fsubl mov add enter (bad) sbb repz or iret adc sahf in imul mov adc outsb mov aas or sbb mov icebp xor mov (bad) cmp clc aaa jae incb rolb xchg adc pop xchg aam pop movsb out xor icebp cs hlt ss sti cmp add (bad) or rclb push xchg xlat sbb ficompl pop mov enter repz fidiv jb or lret or add add and adc fistl dec mov cld xor cmpsb fistp cmp in push mov std xor aam dec mov add jle add (bad) mov in sub fstl push xchg aad push xchg aam push xchg ficompl pop mov loope popa fwait aam mov or rclb pop andl xchg mov notb aaa pop jp mov pusha andl lret in or mov hlt adc push ja mov pop jle add shl daa dec imul mov repz push js mov inc xchg dec insb lea push jae mov negl cmp lahf shl and test dec imul push js mov pusha andb mov or cmc push cmp fwait mov pusha andl lret sub (bad) repz push ja mov pop jg roll add loop and imul mov notb cmp lcall andl lret sub (bad) repz push jbe mov popa (bad) mov dec imul jb mov negl cmp fwait mov popa (bad) mov dec imul mov negl cmp fwait mov bound sub mov push js mov pop jg shl add out wrmsr push jb mov cmc push aaa pop jnp mov xchg xor xchg mov negb cmp pushf mov bound sub xchg mov cmc adc mov bound sub mov push jno mov cmc push aaa pop jns mov popa (bad) mov dec insl mov push je mov stc sbb pop jl mov arpl dec insb lea push je mov clc sbb pop andb mov or mov negl cmp popf mov xchg dec insb lea push je mov popa (bad) mov dec push lods int wrmsr push jb mov negl cmp popf add jecxz daa inc push or mov negl cmp jle shl and push push xor xchg mov notb aaa pop jns mov inc xchg dec insb lea scas (bad) icebp adc push jne mov pop andb push or mov hlt adc mov arpl sub mov ja mov pop jg ret daa dec imul in push cs jno mov notb aaa pop jns mov pop andb push lods into out wrmsr push jb mov stc sbb pop jge shl and cmpsl (bad) call mov add xchg mov negl cmp lahf shl and xchg dec outsb mov push je mov clc sbb pop jnp mov inc xchg dec insb lea push ja mov pop jg ret and data16 dec outsl nop mov es mov clc sbb pop jl mov bound xor xchg mov notb cmp fwait mov popa (bad) mov inc push or mov add add adc push ja mov bound sub mov push jne mov clc sbb pop jnp mov popa (bad) mov inc push or dec outsl (bad) mov notb cmp fwait mov pusha andl lret in or mov repz push jbe mov pop jge mov mov push cs jno mov cmc adc mov pop jg shl daa dec imul add xor jne mov stc sbb pop jle ret in es mov or dec jo mov cmc push aaa pop jns mov pusha andl lods into out adc push jae mov negl loop and cmpsl enter dec insb lea push jae mov negl cmp fwait mov arpl dec imul push jbe mov pop jle shl and leave ljmp (bad) repz ja mov pop andl iret lock push jae mov stc sbb add test dec outsl xchg mov repz push ja mov pop test dec insl nop mov notb cmp popf mov test dec imul jae mov clc add aas pop andb push lods int adc push je mov negl cmp pushf mov popa (bad) mov dec imul add in push das dec add mov pop test dec push stos int3 in push das push jno mov hlt push ss js mov pop jg shl and cmpsb (bad) jmp lea push ja mov pop jg shl and imul mov hlt push aaa pop jp mov bound daa dec outsb (bad) mov repz pop jns mov pusha andl leave ljmp (bad) repnz add xor mov sti sbb push sub mov push jb mov notb cmp sahf mov push or mov cmc pop cmp fwait mov dec outsl nop mov repz push js mov popa andl push push cs jo mov hlt adc mov add (bad) ljmp (bad) icebp adc push jne mov clc sbb pop jge mov arpl add add add add mov push je mov clc sbb pop jg shl and leave ljmp (bad) icebp adc push je mov clc sbb pop jge shl and xchg dec outsb (bad) mov cmc push aaa pop jns mov pusha andb push or mov repz mov pop andb push lods int push das push jno mov hlt adc mov pop andb xchg add add test jmp (bad) mov repz cmp fwait rolb or dec imul jb mov negl cmp pushf mov arpl dec imul mov negl add andl mov jae mov notl cmp popf mov arpl dec imul jge (bad) sub mov je mov cli sbb jg ret es push add in wrmsr push jae mov clc sbb pop jl mov push or mov negb cmp fwait mov popa (bad) mov dec push stos int wrmsr push jno mov cmc adc shl and xchg dec outsl nop mov repz push ja mov pop jg shl and mov or dec outsl nop mov repz cmp rolb pop daa dec imul mov notb aaa pop jns mov add pusha andl lret sub outsb (bad) mov hlt adc mov inc mov or push jno mov notb cmp mov test dec insl mov pop jp mov test dec insl mov push jbe mov stc sbb pop jl shl es push push das push jo mov stc sbb pop jge mov arpl sub mov jno add cmp pushf mov arpl dec insl mov push jbe mov cld inc jle divb test sbb (bad) stc sbb add inc test push ja mov add cmpsl enter dec outsl nop mov repz push ja mov pop andb mov or notb cmp lcall xchg dec insl mov add add add push je mov stc sbb pop jl mov arpl dec outsb nop mov repz mov pop jle shl and xchg dec insl mov push jne mov clc sbb pop jl shl and xchg dec outsb nop mov notb aaa pop jns mov xchg dec insb mov push jne mov stc sbb shl and pop inc popa (bad) movsb icebp das mov lret add stos loop pop mov cld sbb (bad) in daa dec imul mov arpl das push jno mov cmc push aaa pop jns mov bound sub mov push je mov pusha andl mov repz mov bound sub lea push jbe mov bound sub mov jb mov negl cmp add jge mov xchg dec outsb (bad) mov repz push ja mov arpl dec outsl nop mov repz mov popa (bad) movsb (bad) out sub mov push jae mov stc pop inc popa (bad) mov dec imul mov clc sbb pop jnp mov popa (bad) mov inc push or mov negl cmp fwait mov popa (bad) mov sub (bad) repnz jne mov pop jle mov xchg stos cmc xor test or add call xor dec xchg ficompl jno hlt aaa jnp pop dec xchg fsubl cmpsb in xor fbld lods repz js incl into push push cltd fsubl data16 out xor add xchg addps idivl or (bad) lret pop inc jp cli insl mov adc loope insl lods icebp xor or xchg aad pop add mov incl int3 or and idivl add dec cltd fbld lods hlt cmp pop inc xchg out xor xchg xlat sbb movsl out xor xchg rsqrtps jmp inc or dec xchg aad jo cli cmp leave push push xchg fisubl data16 xor incb add push pop popf loopne insb mov inc xchg or xchg fstpl bound add xchg fstps popa mov aaa jp add rcrb pop mov out aaa jp add add add jmp cmp leave adc push cli cmp jecxz data16 aas mov or aad pop popf in insb mov ss incb rcpps add dec cwtl fbld push cmc cmp or fistp push mov repz cwtl rorl inc ja loope push mov pop jne jmp pop xchg (bad) (bad) xor int3 add push aam inc jns out pop xchg leave pushl inc jne fimull pop cmp ficoml jo (bad) sub dec imul mov clc sbb pop jl mov arpl dec outsl nop mov repnz push js mov popa (bad) mov lcall sbb mov (bad) imul mov mov sub loopne pop cltd fistpl movsl in arpl aad inc cmpl out xor repnz mov add test add inc mov push dec mov sbb pusha movsb call icebp xor cmp or xchg ficompl push jo idivb xchg rorl pusha mov call sub scas lock mov sbb aad pop cwtl aam push cltd fistl pop sahf (bad) addr16 inc add cmp xchg adc and jno hlt xor mov and int inc jge divl scas in daa bound mov in push (bad) enter mov divb jno mov cmp mov inc test pop dec (bad) rclb mov cmc xor mov push mov or mov and aam inc js jmp sbb mov in push xchg int aas jno fbstp jno out mov stos out imul adc or mov add xchg loope jbe pop dec add fbld imul add xor and incl xlat and mov fwait loop jbe icebp imul xor or mov adc fmuls inc jp out es xchg fcoml dec mov clc sub fwait rorl aas jge call stc xor sbb movl push hlt xor in cmp lods ljmp mov sub (bad) movb jne ljmp xchg aam push mov add int3 adc rclb push mov add mov sub push fcoml push xchg aam add pop popf ficompl cmpsb out aaa jl or xchg fbld lods idivl lds dec xchg aad pop mov idivb jnp std jge,pt cmc xor loopne pop xchg int inc cmpl push dec mov add cmp pop pop (bad) (bad) divl je in pop xchg add sbb into add jne jmp and fcoms dec cmpl mov ss cmpsb fbld pop (bad) iret adc mov daa mov sbb (bad) cmp cli inc add jnp add add add dec push lods int adc pop inc js add (bad) adc push dec mov sbb stc cmp mov sub pop stos ljmp mov sbb ficomp xchg rclb push xchg fldenv gs in and jg hlt sub mov rcll push nop aam dec xchg or stc xor fistl dec mov add mov xlat sbb out sub xchg fistpl push mov adc (bad) leave add pop inc jl stc cmp idivb jp cld aas add push ficomp add stc ss in sub add adc mov incb leave adc rclb pushf fisub jae add nop loope mov push inc mov rcpps out sub (bad) les inc xchg pop inc jg add (bad) xor test dec insb lea push jae mov notb cmp lcall xchg dec cmpsb lock mov push popa cmpsl ljmp int3 sqrtps fstpl inc (bad) ret imul movsl loop mov rorl dec xchg sti ss (bad) ds rolb xchg adc fstps push xchg ficomp pop lahf loope arpl or movb (bad) rcll push (bad) int pop mov cmovge mov ljmp cwtl add sbb ret add jmp jmp data16 add loop push ljmp mov and out xor call push push xchg (bad) pop pop lcall cmp mov int push xchg rclb dec mov push dec (bad) adc rclb pop popf jecxz fs daa push repnz jbe repz or lret mov stc insb mov insl scas bnd pop dec (bad) sbb fsubs imul cmp in push in sub icebp and adc xchg add rolb jnp,pt jmp out xor out xor int dec test push inc xchg add mov or arpl add icebp es xchg lock lcall or int3 or aaa jae sti inc (bad) les add sti cmp rclb push xchg roll adc sbb fisub mov cmp incb or dec xchg aam pop sahf loopne pusha movsb in imul add int add adc loope insb mov cmp add xchg (bad) sbb lock ret xchg fisub cmpsw in das (bad) adc fsubl mov inc mov adc mov add jb lock aad dec mov (bad) xor scas in and sahf fmuls xor movsl xlat adc xchg enter sahf xlat sbb ret cld cmp clc cmp add rcll pop pushf fbld imul push cwtl rorl aas jns inc scas imull imul adc mov repnz iret or add repnz inc jle jmp data16 rolb jnp,pt cld jg,pt incb iret adc loopne jo cld cmp mov sbb loope fs icebp aaa jns incl leave add push cltd fildll insl scas icebp ss add rolb (bad) rcrb pop lcall jo add int pop popf fstpl bound incb movb mov sbb out insl scas icebp xor hlt aaa jnp inc mov cmp or mov adc fldenv fs das je cld aas jnp add add adc mov cmp enter rcll push cwtl fsubl jne add push dec (bad) lret nop (bad) repz rorb sub push mov repnz in sub stos jmp imul push pop cltd fstps pop cltd fistp popa lahf ficomp pop cwtl (bad) adc int dec (bad) int3 or inc cmpl inc mov inc mov adc rclb push xchg into or iret push dec add add xchg rcll dec mov pop inc cmpl movl cmp divb mov xor rolb add jge,pt sti inc add add jg (bad) aas jle (bad) aas jle add lret or rorb push xchg rclb push xchg rolb inc jbe lock mov add insb movsb fsts dec mov adc ficomp push xchg fsubl popa test add push lret adc ja cli cmp xchg loop jae add aam add add cmp lds push xchg fldenv outsl mov cmp movsl jmp jne cli inc mov sbb test divb mov sub cmpl sbb enter mov repz cld cmp (bad) in daa dec imul fldcw imul add lret or aam push xchg int inc (bad) ret add dec mov or int dec (bad) rorb dec (bad) lds add aas ja repnz fcomps cmpsl in insl lods out sub push mov mov sbb push dec jp fimul inc ja fisttpl or imul loop pusha mov out fs sbb (bad) divl imul mov cmovle xlat and imul sub outsb scas in daa push movsb jmp pusha cwtl rolb inc mov pop cmp repz fsts push xchg aam rcrl roll or hlt xor imul push push xchg ficompl pop pushf loop insl mov cli xor lock lds push nop xlat pop pusha mov in push (bad) into adc lcall frstor test pop scas out sub scas in jecxz jae clc cmp lret andnps or dec (bad) rclb mov sub ljmp lods out xor clc cmp lret xchg add (bad) or inc xchg add mov add add inc jg repnz data16 ficoml dec add inc test or sti cmp cmc ss clc cmp mov cmp cld aaa jae add aaa jo loop push fcoms dec xchg (bad) aaa js jmp bound sti xor pusha add rorl inc test add jge cmc xor out pop pushf fistpl cwtl rorl (bad) mov divb outsb cmpsl loopne push nop lret or lret add jno out das jp cmc xor and enter mov sub add mov and fmuls inc jns out push mov clc das push insl mov mov and je out fs jecxz push mov push cmp arpl jmp push pop mov into push dec mov std xor (bad) ret mov adc lock or jbe or fisubl imul das jae add (bad) sbb fistpl push xchg rclb dec mov or xchg xlat sbb out xor add add push push cwtl aad xchg aad mov adc leave cmp mov cmp add dec nop rcll test cmp sub jo or in je add daa insl mov dec xchg loop outsb mov inc mov and jmp or push mov lock incl rclb pop stos in sub out das push in pop mov loope data16 repnz inc mov push dec mov or rcll sahf fbld or add add push test popa mov dec xchg xlat push lods cmc aas mov adc loopne push cmc cmp sub js or adc fisub addr16 cmp fsubrl jb arpl sub idivb test push pop mov sti inc test push dec xchg rcll jl adc add dec mov adc pushf fistpl popa test sub mov inc xchg adc movsl jmp jns add xchg fcomps pop movsb add cmp mov outsb add add sbb xlat sbb fisubl mov bound push xchg aad pusha stos stc inc (bad) (bad) arpl cli ds or ficomp push loope pop mov jmp jae incb les dec xchg ficomp pop mov cli cmp lret adc mov add imul bound add rclb pop movsb ljmp rclb mov jne,pn cld inc mov add lret lahf jmp cmp decl cmc xor xor dec mov pop pop test sbb fsubl cmpsb jmp ja add loopne je push push movsb cmc inc mov add pop pushf jecxz push stc ds push pushf in jb add cltd fstpl data16 in outsb mov inc mov add pusha cmpsl lock jg push popa movsl call cmp or jecxz jae add rcrl scas stc inc mov pop mov sbb or fisubl fs lock dec xchg add add adc mov ficoml pop cltd fstps pop lahf loopne arpl or dec mov sqrtps xor or xchg fisub lods repnz cmc ds adc fwait loopne lods icebp cmp push pushf loopne imul or rcll ret mov and ljmp (bad) sbb frstor scas lock jne or fsubs imul test sbb loope push std inc mov daa insb mov dec cwtl loopne imul idivb add push xchg loopne push testl repz cld inc mov adc lcall dec xchg fisubl insb mov dec mov pop dec xchg ficompl lods cmc inc mov push pop mov or jo cli aas add and jmp stos jmp daa jo repnz clc cmp add xchg push pop cwtl aam push xchg (bad) adc push rolb xchg frstor data16 out ss or fbstp jbe incl enter jecxz insb mov inc test adc pop movsb call cmp roll xchg adc out imul inc mov sub movsb jmp jne adc loopne jb add gs repz jg or fldenv insl mov daa jo repz mov dec xchg fcomps fs fwait jmp jbe add dec xchg fcomps arpl repz cmp add (bad) sbb in xor add add or int3 add or pop test adc lahf out jl or pusha mov add les jg,pt or rcll push lcall push divb outsb mov xor (bad) lret popf jecxz jo cli ds adc in jb add rcrl pop sahf loop loopw scas repz popf in addr16 jo,pn idivb (bad) (bad) or rclb outsb scas idivb jge (bad) cmp add sbb call sub mov sbb out cmp and mov hlt aaa jnp add jbe or rclb cwtl frstor push lds pop mov add (bad) push pop mov add pop and fistpl pop shll out fs stc ds pop push mov (bad) push push pushf jecxz jo std inc (bad) (bad) or int push popf loope outsb lods in sub repz repz hlt add cmp xor (bad) ret fcoms pop pushf fstpl pop mov hlt cmp push push pushf loopne jo std inc mov sbb stos repnz add dec mov sbb jmp dec nop fsubl outsl mov add arpl ss or or (bad) xor stc cmp and jmp jne (bad) cmp xchg fldenv insl mov cmp cltd fstps imul inc nop fisubl lods lock mov inc xchg adc in jb add fwait out jp incb lds dec xchg fisubl cmpsb ljmp movsl in xor add leave or insl mov adc cltd in jp adc in add jle pop dec xchg (bad) pop pop mov and and in pop cltd fistpl pop sahf loope bound lock out jns,pn clc ss incb ret or loope jb sti inc mov push pop fildll mov sbb add add idivl add push xchg in jb cld inc add inc mov adc pop mov clc cmp (bad) or repz insb cmpsb fstpl popa mov add (bad) xchg xlat pop pusha sahf jecxz je decb fisttpll dec xchg aad pop mov adc out xor lahf in outsb mov cmp mov or rclb pop sahf jecxz jb sti inc add inc jnp incl mov mov in es cmpsb jmp jo lock (bad) mov or (bad) sbb stos repz ljmp into adc cwtl fildll jb std ds dec xchg fstps gs idivl or and loope stos sbb xor cli cmp dec (bad) rclb pop lcall jge add inc int pop mov pop dec mov push push lcall jge or jecxz jnp or mov out xor or fisubl lods hlt add add leave mulps hlt xor adc in das jp or xchg loope jb divb nop add add jns add rcrl arpl adc jg inc xchg lret or mov and aad (bad) (bad) or rorl pop movsl in pop xchg rorb cmp jo in pop xchg rclb dec (bad) ret add js out jo,pn out xor repnz jne out das jo jmp jne sti aas add dec (bad) (bad) push arpl push dec nop xlat push fs lock jl adc ficompl pop mov adc call das outsb stos call cmp std inc xchg or xchg fcoms pop pushf loope data16 fisub pop mov ljmp (bad) cmp aas test or fsubl mov inc cmpl dec nop aad pop lahf jmp push cwtl loope imul daa outsb mov inc mov sbb xor ret mov add add add add jmp dec (bad) lret or pop mov or lahf loop push cli inc mov sbb repnz add leave push push (bad) rcll push lcall dec mov (bad) cmp divb jno in sub in xor repz repz cli cmp add rcll cwtl fbld lods testb addps or lods hlt cmp add fstps arpl incl movb rcll pop pushf fisub popa mov add out jno idivb jnp pop inc test adc hlt xor out js incb rclb pop cmpsb icebp aaa jl push dec (bad) iret adc fstps pop lahf in insl mov inc mov sbb test or bound add pop pop movsb in xor add enter rcrl movsb out jbe add add loop push lods hlt aaa jns add rclb pop mov sbb ds dec xchg aam popa test aaa jg push dec mov add addb add add jp sti cmp stc xor add inc mov adc fbld popa mov call aaa jg adc imul and jge add insb mov inc mov sbb loope pop movsl jmp cmp iret sbb frstor addr16 pop push xchg int push xchg xlat sbb jne pop push xchg fbstp js or rclb push xchg (bad) sbb jmp jbe add fldenv push add add push dec xchg fstpl bound dec xchg fstps imul add sqrtps idivl test adc jecxz insb scas repnz add out jns or out jns adc jecxz js add rcll cmpsl in movsl loope pop xchg fcoms xchg fcompl push cltd ficomp mov ljmp lods jmp jb std dec nop rcll pop movsb jmp inc mov adc loop jo add aam pop fwait loopne imul sub scas out sub mov cmp fbld stos repz mov pop pusha mov cmc cmp clc ds or lcall add or fldt jae or loope jb (bad) aas mov pop pop test or jb add xlat and hlt xor xchg xlat sbb in movsl jmp jae repz movsl in arpl icebp xor mov add add sti cmp sti aas test aad and out xor xchg loope imul aaa (bad) leave or xchg rcll pop lahf ljmp rcll push xchg xlat sbb in xor add (bad) or xchg fistpl pusha mov cld inc popf repz fbld insl mov inc mov adc in imul mov stc sub (bad) (bad) push lods cmc cmp scas cmc cmp les inc xchg adc in outsb mov inc mov add add add adc out je add lret xchg fisubl push ret push dec xchg loopne jb stc inc cmpl xor incb rcrl mov inc mov adc frstor fs aaa jnp push inc test std cmp stc aaa jge lock imul sbb fisub popa cmpsb loope popa mov ljmp mov cmp pop add stos hlt cmp out test adc out js add enter fisub add or mov adc ficompl pop mov idivb jle add iret adc xchg stc inc cmpl inc test adc loope js or fcomps pop lahf jecxz insb mov inc mov sbb repnz adc out ja or jecxz outsl mov inc xchg adc xor or jecxz push icebp xor xchg cmovle movb jno divl stos jmp xor in push movsl call add push mov cmp mov incl adc loope jo or into adc fbld imul push xchg fistpl fwait in imul inc mov adc mov ljmp jbe out xor mov sbb jmp jbe add rclb xchg fcompl pushf fbld sub cld inc mov pop pop pushf fistp insl mov inc mov sbb lock jns add mov adc xchg iret or add aaa jb ficom jnp add and popa cwtl aad mov jmp mov cmp xchg cmp pushf out js shl and mov or mov es ret in es insl mov add stos ficompl jge lret cs jno mov cmc cmp mov ds (bad) out sub rorl dec xchg aam push xchg rclb push lret pushf xlat adc mov pop dec mov add jp divb add out jle cld cmp xor out xor repnz mov cmp pop push xchg iret adc sbb insb mov cmp into adc fstpl lods hlt cmp xlat sbb mov clc inc (bad) (bad) sbb out push icebp xor xor test or sbb mov ljmp xor nop lret mov pop xchg rcll push xchg rclb mov or fcompl cmpsl call add add test adc jmp xchg shl dec xchg hlt cmp in arpl enter repz lock test movsl (bad) out sub lea push je mov clc sbb pop jl mov test push jb mov cmc push aaa pop jns mov lret or arpl out das andl pusha lcall cmp add add gs rorl push mov add add loopne dec xchg in push xchg push pop mov out xor pushf fstpl arpl cld inc xchg adc lahf fbld imul es test push push sahf loop insl stos in jge ret in es push adc cli sbb add inc test dec insb lea push jae loope arpl hlt dec lcall jp clc cmp (bad) ds adc (bad) cmp mov mov add ret je jmp pop xchg into add jbe jmp add jns add jnp icebp xor ja sti push jp or aam lahf hlt cmp les dec mov mov out push nop enter mov sub push mov (bad) xor push mov (bad) cmp out push (bad) lret add jne jmp je repnz aad inc js in dec test jecxz pusha sahf fstps pop lahf in pusha movsb loope xchg loop add add cmpsl enter dec insl mov push ja mov loope add rorl inc (bad) ret sbb int wrmsr push jno mov cmc push aaa stos (bad) jo add and sub out pop jge shl and test dec imul pop rorb sbb (bad) icebp adc cli sbb add lret jnp repnz mov add mov into adc jecxz imul or (bad) cmp and int dec mov pushl jae icebp ss loop push mov add mov sub ficoml inc xchg (bad) cmp call add jnp icebp es xchg and ficomp push pop add mov add jo in popf fstps push xchg (bad) adc and push in sub fcoml push xchg enter mov and enter mov es rorl aas jns in sub jecxz pop sahf jecxz pop cwtl in (bad) out jl jmp pop xchg lret lahf ficomp js std aas cmpb inc jnp std aas jp in xor idivl rclb insl mov cmp ret xchg (bad) stos out xor stc inc mov adc jbe add test cld cmp repz xor mov adc les dec mov sbb and call cmp jl std inc cmpl add mov es cwtl fistpl pop mov testb adc outsb mov aaa js cli inc mov adc xchg mov jmp inc bound dec insl mov aaa jb sub out push add push bound add hlt pop mov cld aaa jno add inc test add ret and lret sub (bad) repz push ja mov pop jg shl and pop pop mov sbb pop andb push add add pop push cltd out adc mov pusha xchg rcrl test cmp mov and lret add jae lock fcoms push fcoms dec test loopne pop xchg roll rclb pop movsb cld and call sub (bad) hlt sbb mov ret sbb xlat sbb outsb rclb sahf shl gs push pushf loop pop mov push aaa pop jp fstpl stos out pop scas add sub jmp add add popa (bad) movsb (bad) sub mov je mov stc sbb pop jge mov imul aaa pop jns mov pusha andl lret in or push xchg rcrb je jecxz mov out xor inc test ficomp xchg (bad) in imul add push popa fwait rcll dec (bad) mov sub lock cmovl add das push mov (bad) cmp in push mov add jo out pop xchg iret or cmp add dec (bad) in pop cmp fwait mov bound dec mov add outsl scas out pop xchg into or fsts pop xchg aam inc mov xor repnz in push divl jb out xor add sti inc mov sbb fstps gs adc call aas (bad) xlat es cmc cmp repnz movsb jecxz push add add (bad) mov repnz jbe mov mov shl and test dec imul js mov pop jg shl es push pop mov incb enter jecxz insb mov pop xchg jbe cld ss in or and loopne pop test mov pop popa mov icebp xor sti inc test bt inc popf loope jo in pop lcall aaa outsl cmpsl fild add jl or inc push lods int comiss xchg mov negl cmp fwait mov bound sub xchg mov hlt adc mov pop jg shl and data16 dec insb lea push jne mov clc sbb pop jl ret in daa dec push or mov fdivr sbb pop jge mov arpl dec push lods int wrmsr push jb mov notb cmp jge mov add xchg dec imul jae mov notl cmp fwait mov pop andb xchg dec outsl nop mov repz es test dec outsl (bad) mov repz mov pop subb pop test or push dec xchg rorl push xchg aam pusha cmpsb jmp push xchg lret mov (bad) xchg loopne inc addr16 push jle adc adc sbb leave add add clc push test dec outsl nop mov repz push ja mov pop jg shl and xchg dec jae mov negl cmp pushf mov bound add (bad) repz push ja mov pop jg ret and leave out wrmsr push jb mov notb aaa pop jns mov pusha andb push or dec jo mov hlt adc mov bound sub add xor xchg mov notb cmp pushf mov bound sub lea push jne mov std sbb (bad) call (bad) mov repnz cli sbb jg shl and cmpsw out cmpsb call test pop cmp (bad) or mov and add pop mov sub fisub fs pop movsl testl ret add pop mov out cmp leave push push cltd out jno cli cmp mov pop add cld cmp in jne,pn in xor out xor aad inc xorb dec stos ljmp xchg into or sar xchg lret (bad) mov sub scas in es fwait xlat sti cmp mov and movb test add lret or cmpsb fdivr and andl mov dec jo mov repz cmpl idivl xchg int3 push gs (bad) repz add xor fstps pop xchg fstpl pop popf fbld mov inc mov pop pop pushf in jno cld inc mov pop pop mov out xor jae pop dec (bad) (bad) push xchg ljmp lret xor xchg mov divl jne push inc mov pop pop mov je mov and adc fisub arpl hlt dec js out mov idivb test or frstor movsb in arpl loope bound pop outsl mov xor cwtl ljmp test mov ss dec xchg rclb push ret adc mov pop jg in insl stos out imul xchg mov frndint sbb insl mov inc (bad) shrb dec outsl nop mov repz jno adc pop mov xor pop cmp adc popf in lods cli pop insl stos ljmp aad push aaa pop js mov pop jg shl and xchg dec insb lea pop jp mov aas pusha andl push lods int push das push jno mov clc sbb pop jnp mov bound sub xchg mov notb cmp lcall (bad) mov dec push lods iret lock push je mov stc add inc popa (bad) movsl (bad) out sub scas (bad) notb cmp pushf mov arpl dec imul jne mov stc sbb mov divl imul mov and test call nop mov cmc pop cmp fwait mov bound dec push lods int push das push jno decb shlb and and std cmp in sub pop jl mov bound pop ret pushf fild jmp mov pop jle shl and mov sbb frstor fs cs jecxz push out xor mov cmp out cmp mov add add mov (bad) bound cmc xor daa jb out sub (bad) imull imul nop (bad) cli xor ficoml inc (bad) mov fcoms mov cld jno out sub jmp jb icebp dec jb mov notb aaa pop jp mov pusha (bad) mov dec outsb (bad) mov repnz jne mov clc sbb pop jge mov bound sub mov dec outsl nop push sbb test and out sub add add imul jno,pn cld cmp add lret push pop lahf loop bound jmp ja cld inc mov push dec (bad) rorb dec nop rcll dec xchg add rorb push xchg fcomps popa mov lock xchg or rclb push lcall pop sahf fistp pop mov jmp outsl mov cmp (bad) aas add aam push nop xlat pop pop mov cli inc xchg subps std inc mov sbb cli inc xchg sbb test add add jbe add rcll pop lcall imul clc add ret add push nop rorb dec (bad) lret or mov add les dec (bad) iret adc loopne push scas in sub test sub divb js pop dec mov push dec mov or xchg in data16 jecxz imul (bad) cmpb cmp testb add push xchg ficompl lods out xor stc aas or add add out imul push xchg ficompl jbe add (bad) iret adc frstor push (bad) or and out xor mov sbb hlt cmp adc test add mov sbb jmp inc xchg adc out jne decb frstor jl push dec xchg aad pop sahf jecxz jo add lret xchg rcrl pop mov add push cwtl frstor stos bnd incl into adc add cmc cmp push dec (bad) aam pop lahf in outsb mov cmp add mov adc loope push cmc cmp lds dec xchg xlat sbb in das jbe add popa cmpsb jmp jae incl adc jecxz imul inc mov adc fbld mov cmp (bad) sbb out jae cld aas add dec xchg fistpl cmpsl in xor push dec xchg ficomp data16 xor insb lahf aad inc test aas cmpl test add add push das push jno xor andl js out add fs sub fstl push cwtl fsts lcall xchg (bad) adc adc push xchg lret or xchg or aas jp out pop nop (bad) outsb stos add es pushf aad inc jg imulb jo out pop xchg movl sbb (bad) lds inc cmpb xor (bad) cmp call daa push scas lock dec sahf ljmp int pop sahf loop outsl mov jg,pt or into adc out outsl mov inc (bad) lds js hlt das outsb mov ds sbb ljmp mov or imulb push fistl cmpsb jmp dec xchg frstor insl mov ss add mov decb in ja or xlat sbb outsb mov cmp lcall add dec mov sbb ljmp add sub mov and add inc xchg andnps icebp cmp or call push xchg ficompl movsb in add cmp les dec mov add js in xor loop pop xchg fcoms push nop lret jp repz jbe add mov stc ss add rcll push cmpsb out ss or fisubl push (bad) or and jle add mov sbb stos icebp cmp add sar (bad) les add (bad) addr16 jae,pn cmp sbb mov (bad) mov divl or mov clc sbb pop jl mov popa (bad) mov dec outsb (bad) mov cmc push ss js mov pop jg shl and data16 leave and xchg mov cmc push bound int insl leave repz push ja mov xchg fistpl (bad) rcrb pop mov jmp jns cmc xor cli push mov add dec add mov sub clc mov stos int3 in wrmsr push jb mov negb cmp pushf mov push dec xchg loop ja add fisubl movsb fildll jg clc push mov rclb in aaa ja cld aas test or jbe and in pop fwait xlat sbb fdivrp and lods in das or dec mov icebp inc mov or leave add pop mov pop dec popf ljmp mov outsl ret add xor pop dec mov sbb ja or mov or dec imul push arpl lock adc xlat sbb icebp sub popa fsts jae add insb ret sub lea push jne mov clc sbb pop jl mov arpl xor jbe mov pop jge mov test dec insb lea movsb loopne push mov or add sar jbe jmp dec imul jno mov hlt adc mov pop mov aad pop cmp lcall jle shl and lods int3 in push cs jo mov repz clc sbb pop jp mov pop andb gs xor fcoms dec test adc fidiv subb out bound mov dec jno mov hlt adc mov pusha andl add adc ficoml dec mov pop push xchg rclb push xchg fcomps mov testl fisub data16 lock xchg (bad) pop pop popf loope insl mov inc mov pop pop test push lahf ret in add cwtl adc (bad) ja adc fild and adc int3 or (bad) into (bad) xchg fstps jne add rorl dec (bad) iret adc pop push mov std aas mov or rclb push cwtl loop jp add aam push pushf loope arpl add icebp cmp in cmp add (bad) icebp adc and jmp inc mov adc ljmp push push lcall mov jae,pn add (bad) push pop scas stc cmp mov pop bound or leave adc jmp cmp add lret pop inc jl ret (bad) lds inc jnp cmc inc xchg add jnp stc cmp ds ret add rcrb push xchg fcomps mov in outsl mov aas xchg adc jecxz jp add fbld bound push dec xchg xlat sti sbb imul adc fstps lods repz xchg adc ficomp (bad) aad fisubl xchg call adc out push in das jne cli cmp (bad) iret sqrtps icebp dec mov add fwait loop jo adc fcomps mov inc mov sbb lock stos out sub cld cmp cltd aad push xchg fisubl dec insb lea pop jnp mov arpl dec imul jae mov notb cmp fwait mov pusha andl scas aam push aaa pop jns mov lock jo mov notb cmp fwait mov arpl pop insb lahf shl and cmpsb sbb adc (bad) pusha lods adc inc add add or xor clc cmp icebp sub mov inc popf ret in add xor out xor push dec (bad) rcrb scas cli inc mov sbb sbb aaa jg or into push pop xchg frstor insl mov ss clc inc mov push jns and mov push jb mov std push aas add inc cmpsb in xor or aam pop ficompl pop xchg out insl scas repz fwait loopne arpl sbb xchg loop push ja mov pop jg shl and xchg dec insb lea push jb mov notb add pop jns mov pop jg shl add insl mov adc push push stc dec mov or cmpsl jmp jo out das jo jmp mov sub stc xor mov pusha andl lret sub outsb stos out mov int3 or mov or sub pop cmp adc inc xchg dec insb lea pop sub mov push jno add add ss js mov pop andb insl mov push je mov clc sbb pop jnp mov bound sub mov je mov clc sbb ret and lret sub (bad) repnz cli sbb add lret sub insl xchg mov hlt adc push jbe mov pop jge mov arpl dec push stos int3 in or mov repz push ja mov test dec push lods int wrmsr push jno mov notb cmp fwait mov pusha andl leave ljmp (bad) clc sbb pop jp mov sub mov push jno mov hlt push aaa pop jp mov pusha andb xchg adc push jbe mov stc sbb pop jl mov jmp mov push js add cltd mov pop jle mov arpl dec jo mov repz pop jnp mov sub cld and test cld pop inc popa (bad) mov dec imul pop mov incl (bad) clc sbb pop jl mov bound daa dec imul mov cmc push aaa pop jp shl and cmpsl enter dec insb mov push jne mov clc sbb pop jnp add mov arpl dec insb lea push jbe mov pop jle add add or icebp adc push jae mov notb cmp lcall mov sti sbb add inc mov or insl mov push jb mov testb add mov ljmp movsl call xor pop jno add dec push lods into out wrmsr push jb mov cmc push aaa pop js mov sbb pop jle mov arpl dec imul mov clc sbb pop jnp mov pusha andl enter dec outsb mov push je mov negl loope and test dec push lods int3 in push das push jo mov notb cmp fwait mov pop andb mov adc push jb mov cmc push aaa push js add dec imul add add dec mov jb or lret daa dec insl (bad) mov repnz add inc arpl dec insb (bad) in push mov cli sbb pop jge mov (bad) cmp fstl cmp loopne lds inc cmpl cmp andb or scas loop dec test pop jg shl and (bad) repnz cli sbb push daa dec imul add das push jno mov cmc push cmp popf mov xchg dec jo mov notb cmp lcall (bad) mov dec imul jne mov pop andb insl nop mov cmc push cmp fwait mov xchg xor pop jp and mov add dec jno mov cmc push aaa pop jns mov push push xor xchg mov negl cmp sahf mov add add add movq (bad) repnz cli sbb or (bad) repnz stc sbb pop jge mov xchg dec outsb (bad) mov repnz push jbe mov stc sbb pusha andl int3 in wrmsr push jb mov cmc push aaa pop jns mov pusha andl into out adc push jbe mov bound (bad) adc jmp (bad) mov repnz jbe mov pop andb imul fdivr push inc popa (bad) mov dec push lods int wrmsr push jae mov fiadd add stos int3 in push das push jno cmc dec xchg or cli sbb test dec push lods int3 in push das dec jno mov hlt adc mov pop jle shl and test mov xor fwait mov popa (bad) mov dec imul adc push jae mov clc sbb pop jl mov arpl dec jo mov notb cmp lret xchg rorl out sub mov je mov clc sbb pop jge mov xchg push je mov clc sbb pop jl mov arpl dec imul je mov clc sbb pop jl mov mov or mov notb cmp fwait mov popa add (bad) mov sub mov clc sbb pop jge mov test push jne mov add inc arpl call jmp cs jb mov notb cmp fwait mov popa (bad) mov dec imul mov popa (bad) mov dec imul jb mov negl cmp popf mov test push jb mov notb aaa pop jns mov bound add or dec imul je mov stc sbb pop jge ret and push adc push jne mov stc sbb pop jge mov test aam inc add imul (bad) imull imul aaa pop jle shl and int wrmsr push jb mov negl cmp pushf add add or dec insl mov push jne mov bound sub mov push jb add add xchg mov notb cmp popf mov push das push jno mov notb cmp fwait mov xchg dec insl mov push je mov clc sbb pop jl mov arpl dec insb lea push je mov pop jg shl and mov dec outsl nop mov repnz sti sbb pop jg shl and xchg push jb mov negl cmp shl and xchg add push jo mov repz mov sbb add lahf shl and lods into out adc push je mov clc sbb in sub mov push je mov clc sbb pop add or jo mov negb cmp in es push or dec outsl xchg mov hlt adc mov bound sub mov push je mov bound sub insl (bad) mov dec add mov add jg push cmp mov test dec insl (bad) mov repnz push jge mov xchg dec mov leave add push jl out sub or add das movsb loop push xchg leave (bad) xor jo cmc cmp clc xor adc call cmp mov xor idivb js stc cmp loop jne std inc mov andps dec xchg fcomps pop fbld arpl add add jmp jno out xor call sbb mov jnp int3 add pusha mov cmp adc fcomps push popf frstor jne cld ds out jnp shl dec mov push push nop leave add ret jmp out and imul jne mov pop test sub pop push mov lret in or mov hlt inc nop (bad) pop inc bound mov xor incb into push pop movsl add ljmp stos call xor rorl in jl or (bad) pusha movsb in push pop ja pushl test xor std inc mov push test jg cld inc mov add mov sbb in insb mov aas xchg adc loopne fs xor ret or mov and out xor or jmp pop popf frstor pusha movsb out arpl ficompl push nop (bad) sti xor ja mov sub in arpl ret push js,pt add add and xlat cmovns lret pop inc mov push pop xchg rorb dec mov pop inc mov push push xchg (bad) sbb xor (bad) (bad) loopne push (bad) add cmpsl loop pop lahf loope movsb in (bad) in insl mov cmp lahf loop jo stc inc mov sbb cmpsl in xor add or outsb mov add movl dec mov push push cwtl fisub arpl cld aas add or icebp xor out xor cmp rorl sahf add jecxz jne cld inc add dec (bad) rcll stos out xor ret push test inc mov or sbb out cmp lret adc sub cld inc test or jne decl int3 adc rcll jns stc xor push jmp add add fstpl dec mov or int dec mov or rorb inc test or nop aam pop popf loope outsb mov inc test or fldt jb std inc mov sbb loope add add repnz (bad) or loope insl test in bound inc js aad push les dec popf loopne pop mov icebp cmp loopne imul push xchg loopne jno add aad pusha cmpsl lock jle adc sub inc mov or cltd (bad) data16 jmp mov iret or (bad) mov clc xor scas icebp das add or iret adc dec (bad) rclb outsb mov cmp add dec xchg frstor push lock jns or loopne jno clc cmp ret xchg (bad) sbb out ss pop dec mov push dec nop aad and jno stc cmp or xlat sbb movsb call aas sbb arpl fcompl pop cmpsl out xor add xchg fsubs imul or xchg ficompl push clc inc (bad) fldenv jb sti inc mov push push cwtl frstor bound or loope outsl mov or leave or frstor fs add xchg fistpl data16 call inc mov sbb bnd incb dec xchg rcrb pop pushf frstor pushf rorb jns jmp or mov and movb outsl test sub iret pop aas ja out push mov int xor fstpl push mov clc xor (bad) cmovle lahf (bad) or js call add push pop xchg lret add jne in push mov add insl lods in push mov pop inc jge repnz loopne push mov add jbe in and int3 add jae jmp push mov add ja repz adc mov rcll dec mov add jo in sub pop push xchg (bad) std xor jecxz push mov add jne out pop xchg rorb aas jbe loop push mov clc xor ficom pop cltd xlat sbb inc cmpb inc test or jbe in push pop sti xor fistl jg repnz ficom dec test leave or test imull movsb jecxz bound mov add fs aad dec mov stc cs xchg into add jno loope dec xchg fist dec test add js ljmp cwtl in push mov imull addr16 in push (bad) int inc test cld cmp das imul sar imul push pop test daa arpl in jo hlt aaa jbe call cmp cmp repz in sub iret or rclb xchg roll cmp mov fisub pop popf add rolb xor in sub stos call sub in gs (bad) push push mov sti xor jae lock divb jno out sub cmc xor jmp jb in xor sti inc (bad) iret adc les inc (bad) mov in sub test push pop pushf add sub cmpsb ljmp mov xor or pushf in outsb scas out imul in sub imul xor outsb scas cmc aaa jle add leave or dec xchg rcll pop lcall pop mov stc cmp cli inc add icebp xor fstpl dec add xor push xchg fistpl push xchg fistp pusha sahf fstpl pop mov fsts dec xorl mov fistp push nop lret or hlt xor out pop xchg rorb cmpl or mov loope push xchg int inc jle repnz push nop lret jp clc cmp mov add rclb push fwait xlat adc xchg fstps push xchg fstpl pop lahf fistp push in push test sub mov add lret mov push dec cmpl divl ja incb ret (bad) mov pop pop sahf out imul push movsl out outsb mov cmp rcrb push xchg rclb push cwtl ficompl movsl jecxz jno cli inc test incl les dec mov sbb loop js add sbb loop stos lock add jg sti inc mov sbb fidivr roll jle add cmpsl ficom mov mov (bad) pushl jae rep test fcoms dec mov adc lret jge (bad) cmp (bad) ds stc xor divl jne out fs sub repz jns (bad) cmp stc cmp add or pop dec (bad) aad pusha movsl in xor stc cmp push dec xchg (bad) push mov add push add sbb loope insb lods clc inc mov or and call inc xchg push push xchg fcomps pop sahf fbld cmpsl jmp jb push dec xchg fistpl pop movsb out jns add pop mov add push dec nop iret adc jmp mov out insb stos lock insl mov inc cmpl divl jbe repz fwait jecxz push nop movl pop xchg aam push cltd fcompl lahf loope pop sahf out gs lock in add jne incb int3 push dec mov adc loope stos jmp xor add rcrl movsb jmp ss push push xchg fisubrl jl add rclb pop mov cmc cmp incl lret cltd frstor push jmp push cmc cmp add rcrl pop movsl in jae add frstor bound ret nop rclb bound loope pop cwtl fcoms push cwtl fcompl cmpsb in popa mov jecxz push enter add mov adc lret or (bad) rolb xchg add ret (bad) cmp lds push mov pop inc xchg or push mov adc xlat pop pop movsl out jl add enter rcll scas clc ds or lcall add sub rolb test pop dec (bad) into adc out cmp (bad) bound cli cmp add pop movsl call inc add dec xchg (bad) sbb idivb jp (bad) aas (bad) ret xchg rolb add adc enter mov add rolb lret or aam pop sahf loop data16 loop data16 cs ficompl pop lahf loop imul aaa jl hlt xor inc mov adc fcoms pop pushf fbld scas lock xor mov push push cltd loopne imul pop mov cld cmp mov sbb in das insb mov ss pop dec (bad) rcrb arpl cmp pushf loop insl mov dec xchg flds add and in jno stc aas test adc in xor icebp xor clc cmp divl push in xor divb js cld inc mov adc (bad) sbb aad pop xchg (bad) sbb rclb push xchg (bad) pop pop popf fistp pop popf loope mov loop gs outsl mov ss add xchg rcrl pop lahf in cmpsl jmp xor xchg fstps cmpsl push lods cmc cmp leave or rcll jo add rcll push xchg frstor add add rcll arpl mov ds or xchg fcomps pop mov add adc cltd loopne movsw adc xlat sbb ljmp movl push xchg iret or inc test or adc fcompl pop popf jecxz data16 loope pop (bad) push cmc cmp call sub out bound out push cwtl fstpl push pushf ficompl pop popf ficomp add pusha cwtl rcll dec mov rcpps fstpl lcall xchg push dec mov adc fstps pop mov add pop movsb hlt inc (bad) iret adc cltd loope bound rsqrtps out je push dec xchg (bad) sbb out arpl fistp popa cmpsl jmp dec xchg xlat push pop popf in outsb mov adc mov idivl add xlat push bound std inc test or rorl dec mov pop inc xchg add add add xchg or mov or dec (bad) aam pop pushf fcompl movsb out fs xor jg add ret mov add jae fist dec test cld inc jg incl out xor test in insl lods in pop lahf fistp xchg fstps pop cmpsb in mov loope pop ficomp pop lahf loop outsl mov sub hlt cmp cli inc xchg adc in jno cld aas (bad) int3 adc ja add mov sbb sub out xor aaa jge pop dec (bad) rcrb push xchg fsts gs repnz rolb mov sti cmp cwtl loopne data16 idivb jge push inc xchg rsqrtps (bad) pop dec mov add dec mov add xchg adc aam pop fcompl bound std aas jg add int3 push dec mov adc xlat sbb xlat sbb and loope popa mov cmc cmp stc cmp or add jmp inc add inc mov sbb in xor xor sti cmp repz out das jno idivb js cli aas test or push xchg fstps push pushf ficomp xchg int inc test adc rclb dec (bad) aam push xchg (bad) pop push xchg aam push xchg rcll dec mov or int3 or aam mov hlt cmp popf fcompl insb mov cmp lret xchg fstps insl mov ds dec (bad) (bad) sbb jne,pn or add add frstor fs sub nop rcrl pop lahf ficomp movsl out add add pop popf out insb mov cmp (bad) fcomps pusha test or rclb dec cltd fstpl pop cwtl aam dec mov adc sbb ficoml pop mov out das imul cmp inc or out xor stc inc xchg add jp add add (bad) enter rclb pop pushf ficompl bound icebp xor mov add rclb push pushf loope outsb scas icebp cmp inc xchg fstps pop mov idivb add push popf in push sar mov sbb test or aad pop sahf fildll jo add dec nop rcll pusha mov hlt cmp lret adc loop jne cli cmp add les jns add rclb mov adc aad pop lahf out bound divb mov enter ret mov adc aam push lcall add add outsb scas icebp cmp add lret adc fstps movsw in xor clc aas jg push and fsubl popa stos repz jl pop dec mov or push sti inc mov adc fsubl movsl out ss add rcrl pusha test add pop movsl call dec xchg fcomps movsb loope imul sub stos ljmp mov cmp cli cmp dec nop fstps pusha mov call or add test pop push lahf loop gs fsubrl add jmp add negl cmp pushf mov popa (bad) mov inc mov or (bad) repnz pop jnp mov pop andb data16 dec imul push jbe mov pop jl mov popa (bad) cmpsb (bad) out sub mov jo mov repz push jbe mov pop jge mov arpl daa add inc push wrmsr push jno mov hlt adc mov adc (bad) icebp adc push jbe mov pop jle shl and test dec insl xchg mov negl cmp pushf mov bound sub mov jae mov negl cmp popf mov arpl cs jo mov hlt adc mov pop add sub lea push je mov clc sbb pop jl add add inc arpl sub (bad) repz push jbe mov pop andb push icebp adc push jbe mov pop jle shl sub mov jb mov notb cmp fwait mov popa andl mov push je mov clc sbb pop andb imul mov hlt adc mov pusha andl iret out adc push jae mov cld sbb ret and lret in or mov cmc push aaa pop jns mov popa (bad) mov dec imul mov pop jle shl and lret in or xchg mov clc sbb pop jl mov arpl dec insb lea push js mov pop andb push push das push jno mov cmc push aaa pop jp mov add and xchg dec jb mov notb cmp pushf mov bound sub mov push jne pushf mov test dec imul js mov pop jg shl and xchg dec insb lea push jae mov notl cmp fwait mov xchg dec insl mov push je mov clc sbb pop jge mov arpl dec add imul jb mov pop jge mov arpl dec imul push js mov popa andl int3 in push xor mov clc sbb pop jnp mov arpl dec insb mov push jne mov stc sbb pop jl mov dec push adc push je mov negl cmp pushf mov popa (bad) mov dec imul add add add nop mov hlt adc mov bound sub mov push jno mov cmc push aaa pop jns mov pop andb imul mov clc sbb pop jl mov bound sub mov jbe mov pop jge mov test dec outsl nop mov repz push jbe mov pop jle shl and cmpsl enter xor xchg mov add add notb aaa pop jns mov pusha test dec imul jae mov notb cmp fwait mov popa (bad) movsb (bad) sub mov push add mov popa andl mov dec jo mov hlt adc mov bound sub mov ja mov pop jle shl es push or mov repz push jbe mov add sbb ret and lret out adc push jae in mov cld push aas pusha andl leave ljmp (bad) icebp adc push jne mov stc sbb pop jge (bad) in daa dec imul mov repz push ja mov pop andb dec imul jb mov negb cmp jle mov arpl dec imul jae mov notl cmp add inc bound sub add pop jnp mov popa (bad) mov inc push or dec outsl (bad) mov repnz cli sbb push daa inc push or mov hlt adc mov pop andb push lods int3 in wrmsr push jno mov cmc push ss jl mov bound sub mov jno mov cmc adc mov aas pusha andl lret xor xchg mov cmc push aaa pop jns mov pusha andb push or dec jo mov add sbb pop jl mov data16 jmp out adc push jae mov notb cmp pushf mov bound sub lea push jne mov (bad) pop inc add test dec outsb (bad) mov repnz cli sbb add add and test dec insb lea push ja mov pop andb xchg or repnz stc sbb pop jge mov arpl sub (bad) repz push ja mov pop andb xchg dec outsb (bad) mov repnz (bad) sbb bound daa dec imul mov notb cmp pushf mov add add cmpsb (bad) call mov cmp fwait shl and cmpsl enter dec insl mov push xchg aam dec xchg aam ja mov bound sub lea lock flds jmp inc arpl dec imul jb mov cmc push aaa pop jp mov pusha andl into out adc push jae mov negl cmp pushf mov bound sub add add mov icebp adc push jne mov stc sbb pop jl xor and mov notb cmp pushf mov popa (bad) mov inc push or dec outsb (bad) scas (bad) icebp adc push je mov negl cmp mov inc xchg dec imul jno mov hlt adc mov pop jle mov arpl leave pop inc mov jmp inc bound sub mov dec outsl nop mov add adc push jbe mov stc sbb pop jl mov bound sub (bad) icebp adc cmp fwait mov pop andb xchg dec imul jno mov hlt sbb pop jl mov bound sub mov dec jo mov repz clc sbb pop jnp mov popa test dec imul jb mov cmc adc mov add add ds andb xchg dec insl lea push jbe mov pop jl mov popa (bad) mov inc mov or repnz push jne mov stc sbb pop add sub mov dec jo mov repz stc sbb pop jl mov arpl dec imul mov stc sbb jg roll pop sub mov inc mov add add or dec insl mov push jne mov sti sbb pop jg shl sub (bad) repz push js mov popa test dec insb lea push je mov negl cmp pushf mov bound das push jb mov notb cmp pushf mov xchg push jae mov notl cmp sahf mov push scas iret lock mov arpl dec outsl xchg mov negl cmp jnp mov test dec outsb (bad) mov notb cmp mov add xchg mov negl cmp popf mov xchg dec outsl nop mov repz mov push mov or jp jmp pusha fwait rcrl xchg (bad) std cmp in es sahf fsubl stos in sub add sbb aam dec mov and xchg iret or jnp add mov sub rorl jne,pt in sub adc pop xchg aad push cltd fsubl scas cld inc nop iret add xchg and out mov jmp pop xchg vcvtsd2si lret jo loop dec xorl out and ss mov mov and ret imul push pop pushf fistpl mov frstor popa lcall sub loope pop mov hlt cmp pop inc test add or fstps pop lcall cmc sub in xor cli inc test add dec mov or (bad) into adc pop mov add jmp xor cmc xor add pop pop movsl jmp das jo jmp jbe clc cmp pop push xchg rcll push xchg aam pop cltd fiaddl daa imul aaa jle or leave or mov adc out insl mov dec xchg rclb js repnz gs ficoml test fsts push mov or into or dec (bad) iret pop inc add push fs xor stc inc mov adc fcomps pop lahf add add and outsb stos out sub jno lock mov and cwtl rorb inc jp or into or mov orps jno,pn sti aas test adc fsubl jle or aad popa cmpsb call cmp jmp sbb int3 or or fcomps fs and int3 push inc cmpl divl jo in pop cwtl add and or test out sub scas in sub add mov out daa pusha popf fisub pusha lahf fistp pop xchg iret pop jbe,pt out push xchg lret add das imul sar push (bad) dec test (bad) cmp jae ljmp mov (bad) cmp repnz out sub xlat sbb int3 or lock xchg mov negl cmp pushf mov popa (bad) mov dec imul mov pop jle shl and test dec insb lea push jae mov jbe in and push (bad) loope ss js mov pop jg shl and xchg das push jno mov hlt adc mov pop jge mov bound push das push jo mov repz push jbe mov pop jge mov arpl dec imul mov cmc push aaa push js mov pop jle mov add test dec imul mov repz push jbe mov stc sbb pop andb xchg dec imul jno mov hlt adc push jbe mov pop jl mov bound sub lea push jb mov cmc push ss js mov pop jle mov arpl dec imul mov cmc push aaa pop jp mov pusha add andl lods into out adc push jb mov cmc push aaa pop jns mov pop jg (bad) in daa inc push icebp adc push je mov notl cmp pushf mov popa (bad) mov inc mov or insl mov push ja mov pop jle shl and xchg dec insl mov push jae mov clc sbb pop jge mov arpl sub scas iret lock push jae xchg mov notb cmp fwait mov pusha andl int3 in push das push jb mov stc sbb pop jl mov bound es push or dec outsb (bad) mov repnz push jne mov clc sbb pop jl mov test dec insb lea push jae mov notb cmp lcall test dec insb mov push je mov sti sbb pop jle shl and push add stos lret sub (bad) icebp adc push jne mov clc sbb pop jnp mov test dec outsb (bad) mov icebp adc pop jns mov pop jg shl and test dec imul push jb mov notb aaa pop jns shl and xchg dec outsb nop mov repnz cld sbb pop jg shl and xchg dec jno mov hlt adc shl es push lods iret lock add add xor cwtl mov pop jge mov push push xor xchg mov negb cmp pushf ret and xchg push jno mov clc sbb in sub (bad) mov repz (bad) in es imul mov cld sbb (bad) sub mov clc sbb (bad) mov dec imul push js mov imul push jns mov add mov push jne mov cld sbb ret sub mov push jb mov clc sbb pop andb push stos int3 in wrmsr push jno mov hlt adc mov pop jg shl and cmpsl enter dec outsl xchg mov xchg dec insb lea push je mov stc sbb pop jge mov bound daa dec imul xchg mov bound daa dec push comiss xchg mov hlt adc mov add sub aam adc mov pusha andl add out push xor xchg mov hlt adc mov bound dec imul jp shl es mov wrmsr push jb mov cmc push aaa pop jns mov pop (bad) movsb (bad) sub lea pop (bad) mov dec imul add cs outsl nop mov repnz push jne mov pop andl insb lea push jae mov pop jge mov arpl dec imul mov hlt adc mov pop jge mov push or insl mov push jb mov notb aaa pop jp mov pop jg shl and push stos int3 in or mov notb aaa pop jns add add pop jle (bad) in es push lock ja mov pop andb data16 push jno mov cmc push ss js mov popa (bad) mov dec imul jae mov sti sbb add inc arpl sub outsb (bad) scas (bad) icebp adc push jae mov notb aaa pop jns mov pop andb push or mov cli sbb loop add add and mov dec outsb (bad) mov icebp adc push je mov clc sbb pop jnp mov bound daa dec insb lea push jne mov pop jl mov pusha andl int3 in push cs jo mov notb add out sub mov jb mov negl cmp fwait mov pusha add sub mov repz push js mov popa andl sub mov dec outsl nop mov hlt adc mov pop jge mov test dec outsb nop mov negl cmp popf mov arpl sub mov push jo mov hlt push aaa pop js mov pop jg shl and insb lea push jne mov clc sbb pop jnp mov test dec insl mov push je mov stc sbb pop jl shl and push add add add cs outsl nop mov repnz ja mov pop jle shl and lret xor xchg mov cmc add (bad) daa dec push stos int3 in push das push jno mov cmc push aaa pop jns mov add stos int push das push jno mov hlt push aaa push js mov arpl dec push stos int3 in or mov repnz stc sbb add inc push or push jne mov stc sbb add inc arpl dec push mov repnz fdivrp and andl mov push jae mov notb cmp fwait mov pusha andl iret out adc push jae mov negl cmp sahf mov mov or cmc adc mov pop andl int adc push jb mov clc sbb pop jnp shl add sub mov push jae mov cli sbb pop jge mov bound sub dec jo mov repz cli push aas pusha (bad) mov inc push adc push je mov clc sbb pop jl mov test dec insb mov push jb mov stc sbb pop jnp mov test dec insb mov push jno mov hlt adc mov pop andb add mov push jae mov notb cmp fwait mov pop andl lret sub insl mov push ja mov pop jle mov test dec imul jno mov hlt adc mov pop jle mov mov out adc push jb mov cmc push aaa pop jns mov pop jg shl and test ljmp mov notl cmp pop jg (bad) sub mov push ja mov pusha andb push lods int3 in push das dec jo mov hlt adc mov xchg dec outsb (bad) scas (bad) hlt push aaa push jp mov popa (bad) mov inc mov or cmc push ss jge mov bound dec insb lea push je mov negl cmp pushf mov pusha andl int adc push jne mov clc sbb pop jnp mov test dec push lods int push das push jo mov notb aaa pop jns mov xchg push jno add pop andb xchg dec outsb (bad) mov repnz push jbe mov inc bound sub lea push js mov pop andb push comiss xchg mov hlt adc mov add add add cli sbb pusha andb push or dec jno mov cmc push aaa pop js mov pop jle shl and test dec imul js mov pop andb loope and cmpsl leave ljmp (bad) repnz push jbe mov pop jge (bad) call xchg mov hlt adc push ja mov pop jle shl and data16 dec outsb (bad) scas (bad) repnz fsqrt pop inc popa (bad) mov inc push add xor xchg mov notb cmp fwait mov pusha andb mov push xor push jns mov bound sub insl mov push jae mov negl cmp fwait mov pusha andl lret in adc push jae mov clc sbb pop jl mov arpl dec push lods into out wrmsr push jb mov cmc push ss jp mov std push aas pop test outsl (bad) mov repnz jne mov cli sbb jecxz and leave jmp mov push jae mov cli sbb jge mov arpl dec imul jae mov notb aaa pop jns mov pop jg shl and mov push jno mov cmc push aaa push js mov inc arpl dec imul mov repz add xor jbe mov std add inc test dec insb lea push jne mov clc sbb pop jl mov xchg dec imul jne mov pop jge mov bound daa dec imul mov notb aaa pop jns mov pop jg (bad) in es push wrmsr push jb mov cmc push ss js mov pop jle shl and test dec add iret lock push js mov pop jg ret in daa dec imul mov notb aaa pop jns mov arpl sub mov push ja mov pop jg shl and add push ja mov arpl dec insl (bad) mov repz pop jp mov inc mov or dec outsl xchg mov cmc pop cmp pushf mov popa test push jae mov negl cmp sahf (bad) in daa dec imul mov cmc sbb pop jnp mov bound cs jo mov hlt adc and into out adc push jbe mov cli sbb andl lret cs je mov stc sbb add inc test push jbe mov pop jge mov bound sub mov jno mov cmc pop cmp add add shl and mov sti xor jmp sub outsb (bad) mov cmc push mov pop pop mov jo mov repz stc sbb pop jg shl sub lea push add sub ficoml push xchg int inc jg push inc push or mov hlt adc mov pusha xchg dec outsb (bad) mov repz mov pop jle shl and test dec insl mov scas iret lock push je mov sti sbb shl and data16 dec outsl xchg mov hlt adc mov pop andb xchg dec jno mov notb aaa pop jns mov pusha andb mov or repz push jbe mov pop jge mov xchg dec insl mov push jne mov pop jge mov inc push add jmp sub (bad) repz pop jp mov pusha (bad) cld dec xchg add cmp pop lcall sub push xchg lret add push outsl mov aaa outsl test es test sbb mov mov sub iret push jp,pt (bad) aas jge out pop xchg int inc jle icebp sub pop xchg fsts pop mov loop push pop cli cmp das je jmp or cmpl inc xchg add jo add cmp cmpl sub fistl dec add xlat push dec (bad) mov fistl cs fsts dec test ficoml dec xchg loope push (bad) movl repz mov icebp ss add rclb push lahf in jne incl sar (bad) ret xchg or mov sbb fstpl pop sahf frstor arpl out outsb mov xor mov or dec mov add cmovge cmpsl out push (bad) or fstps jle or mov or repz ficomp pop popf (bad) adc (bad) enter mov fstl dec xchg (bad) cmp add ret mov push dec (bad) lret test or (bad) or (bad) or (bad) sti outsb stos in imul sbb in adc pop jnp mov out adc push jb add pop mov xor (bad) sbb add shl and test dec push mov repnz clc sbb pop add and lret in push das push jno mov hlt adc mov pop jge mov xchg dec insb lea push jb mov cmc push ss lcall addr16 aam inc jge cli bound (bad) out cs outsl nop mov repnz jne mov clc sbb pop jnp mov pusha andb xchg dec push lods int push das push js mov pop jle shl and test dec imul jno mov cmc push aaa pop js mov pop jg shl daa dec imul or adc cmpsb (bad) call lea push jae mov notb cmp fwait mov xchg dec insl mov push jbe pushf mov arpl sub add add imul jb mov notb aaa pop jns mov test dec imul push jb mov negl cmp fwait mov bound sub mov push je mov pop jg shl and xchg dec outsb (bad) mov icebp adc push jne mov addr16 push mov dec insl mov pop jnp mov bound daa dec imul mov (bad) repz push js mov pop jle mov push or icebp adc push ja mov inc popa (bad) mov inc push or dec outsb (bad) mov icebp adc push jne mov pop jg shl and cmpsb (bad) call jo mov cmc adc mov pusha (bad) mov inc mov wrmsr push jb mov cmc push cmp lcall andb mov ljmp iret lock push jae mov negl cmp sahf mov test dec insb mov push jb mov cmc push aaa pop jns mov pop jg shl and cmpsb leave in push das dec jo mov hlt adc mov pop jle shl and test shl and stos int3 in push das push jo mov cli sbb add ljmp (bad) repz add sahf mov xchg dec outsb (bad) mov repnz jp mov popa (bad) mov dec push lods int wrmsr push jb add pop jg ret in es push push das push jno mov stc sbb add inc mov wrmsr push jb mov notb cmp fwait mov popa (bad) mov dec imul mov pop jg shl and mov or mov add push aaa pop jns mov bound sub mov push js mov pusha andl lret in push das push jb mov stc sbb pop jle (bad) sub mov push ja mov pop jg shl and lret in push das push jno mov and add ss cmpsb loope pop xchg lret or in and or jmp loop and lret sub (bad) hlt adc add and cmpsl enter dec outsb (bad) mov repnz adc push je mov clc sbb pop jge mov test dec insb lea push je mov clc sbb pop jl mov push push das push jno mov notb cmp fwait mov bound sub mov jae mov negl cmp mov inc mov or dec outsl mov inc push lods int add xor xchg mov clc sbb pop jl mov jae mov negl ds andb push push das push jno mov cmc push aaa pop jp mov bound or mov negb cmp pushf shl and mov or dec outsl nop mov rep leave sbb cltd iret or mov push pop mov rcrb push mov popa (bad) cli mov add dec mov icebp dec xchg int3 mov jnp add add add sarb jl lock rorl dec xchg out pop sub imul enter dec insb lea push jae mov notb cmp lcall jg shl and cmpsb (bad) call nop mov repz push ja mov pop jle shl and test dec imul jno mov hlt adc mov bound es mov or mov push je mov stc sbb pop add and leave in push cs jo mov repz stc sbb pop jle shl and test dec push stos add repnz jne mov pusha andl leave jmp xchg mov hlt adc mov pop jge mov bound daa dec imul mov negl cmp fwait mov popa (bad) add add inc mov or icebp adc push je mov notl cmp jle mov test dec push lods into out adc push je mov negl cmp pushf mov arpl dec imul push ja mov pop jge mov arpl sub mov push jb mov clc sbb ds andb push lods int3 in push das push jo mov hlt adc iret add add adc stc sbb pop jge mov arpl or dec outsl xchg mov negl cmp popf mov arpl sub mov push je mov cli sbb jge mov test dec jo mov cmc push ss js mov pusha andl lret sub (bad) repz push ja mov pop jg (bad) daa dec push push cs jo mov cmp jg shl daa dec push lods into out wrmsr push jbe mov pop jge mov imul mov repz push js mov pop andb xchg dec insl mov cmp sahf mov test dec insb lea push jbe mov pop andb push or dec outsb add pusha pushf mov popa xorl jp add add inc xchg dec insl nop mov repnz fsqrt sbb jge ret test xor xchg mov negl cmp mov dec imul mov stc xor xchg mov notb cmp fwait mov imul mov notb cmp mov repz push js mov jne mov stc sbb pop jge mov bound sub scas iret lock push jae mov clc sbb pop jnp mov popa andl leave ljmp in or sahf mov data16 dec outsb (bad) scas (bad) repnz ja mov pop andb data16 dec popf cli and dec outsl (bad) mov repnz fsqrt sbb pop jge mov arpl dec push lods int comiss xchg mov hlt adc mov arpl dec imul add add out rdtsc push je mov stc sbb pop jl mov arpl dec insl mov pop jp mov popa (bad) mov inc push or mov repz push jbe (bad) out sub lea push jae mov pop jg shl and lret das push jo mov hlt adc mov pop jle shl and test dec jo mov fdivr sbb pop jge mov and xor fcomps cmpsb aad sbb pop jp mov pusha andl lret xor add andb xchg fild and test dec push stos int3 in push xor xchg mov notb cmp loope and cmpsb (bad) call mov jno mov hlt adc mov pop jge mov bound sub (bad) repnz add mov stc sbb pop jl mov bound daa dec imul mov repnz cmp lcall andl enter dec insb lea push je mov negl cmp pushf mov bound sub add jp mov popa xchg mov notb cmp lcall jg shl and test popa (bad) mov sub outsl popl add push jbe mov cli sbb pop jle mov test dec insb lea push jae mov bound es push cltd mov pusha andl fdivrp and (bad) mov inc mov adc push jae mov notb aaa pop jns mov pop jg shl and xchg dec outsl xchg mov hlt push cmp fwait mov push push cs jo add add push jbe mov pop jge mov bound es mov or dec insl xchg mov repz push js mov inc bound daa inc push or dec outsl (bad) mov repnz push jbe mov pop jg ret in sub scas iret lock push jae lcall xchg dec outsb (bad) mov icebp adc loopne and xchg dec outsl cwtl mov popa andl out daa dec imul mov repnz push jne mov cli sbb insl mov push mov or add outsl xchg mov notb cmp pushf mov test dec scas std inc cmpl movb jno stc aas jp in sub stos loopne pop xchg int aas jbe clc ss jmp push inc cmpl mov inc push adc push ja sub add pop jp mov inc xchg dec imul jo mov hlt push aaa pop jns mov arpl dec imul xchg mov stc sbb andl lret das push jb mov cmc push cmp fwait mov test dec imul lret or sti dec mov push mov (bad) jns,pt lock loopne pop xchg into push inc cmpb or mov daa pop xchg into pop push cmpsb fist push xchg stc xor in and dec mov pop je,pt fist inc js add or in sub jecxz pop fwait (bad) adc movb mov cld pusha lcall push xchg xlat adc lds cmp jmp pop pop mov movl push pop xchg lret add je call rorb sub (bad) or sub out sub rorl push cli outsl mov push fstl push rorb out js jmp jle clc das gs aam dec (bad) mov iret add jg in dec xorb pusha lahf fcompl push mov inc pop add jp stc cmp divb jo out pop xchg aam push (bad) movb pop fwait hlt xor loop pop cltd ficoml push xchg iret push dec mov (bad) cmp in push nop out jle cmc xor jmp insl ficompl push xchg int arpl fstpl outsb mov sub add sti cmp in and xchg adc int3 add ja out sub divl insb stos in aaa jae cld ss lock out pop lods out pusha lods out pop xchg int inc jnp out daa bound aad dec xchg cmovns cmpsb loop add sub adc mov ficomp pop xchg iret or mov es xchg rorl inc jge repz bound divl imul push push mov add adc xchg int add aas mov std xor jb out pop nop leave add add push inc nop fistp push popf fstl data16 ficompl push mov add push xchg int inc (bad) rolb leave sub xlat pop pop xchg rclb fs das mov or dec jo mov cmc adc mov pop jg ret and xchg push jae enter adc mov cmp adc (bad) mov rorl inc jnp repz sub in es cli pop dec outsb (bad) mov repnz pop jge mov test dec insb lea push jne mov stc sbb pop jle cli dec mov cmc push cmp lcall test dec push lods int3 in push das push jo mov pop xchg into push push mov test dec insb mov push je mov clc sbb pusha andl lret insb test and rdtsc push jae add pop andb data16 xor xchg add bound sub add mov and sbb mov in pop xchg int3 sbb ret clc xor adc stos ljmp cmp fwait mov pusha andl lret repz adc shl and xchg dec outsb mov pop jnp mov bound (bad) repnz cli sbb jle mov xchg das push jno mov sar cmpsb pusha sahf (bad) out sub mov jb mov notb aaa pop jp mov bound sub shl and lret xor xchg mov clc sbb pop jl mov arpl dec push lods add repz push jbe mov xchg add xor lcall andl lret in or dec jo mov repz push jbe mov pusha andl add mov push jae mov notl cmp lcall xchg dec insb mov push je mov clc sbb jge mov dec jno mov cmc adc mov pop jle shl and xchg dec outsb (bad) scas (bad) icebp adc push jne mov jbe mov cli sbb andl mov jno mov hlt adc push jbe mov pop jge mov bound add hlt sub stc xor add cmp aad jne,pt fcoml inc jp in sub add cld xor pushl pop lods add jmp xor fsts inc jg lock cltd call ss adc imulb arpl add dec cmpl pop cwtl xlat push push cwtl rolb push test (bad) ds or int insb stos sub or mov push pop lahf fisub lahf push arpl mov cmp cmc xor idivl jns or iret adc addr16 test add inc (bad) cld cmp clc arpl pop mov sbb icebp xor popf (bad) or scas loop push xchg iret push inc js jecxz push jge out es out and nop movl dec scas add lahf (bad) or stos jecxz pusha cwtl jmp jg lock pop nop (bad) gs out push mov add add lods or movsl fsts dec addl sti sub dec jg jmp push mov imulb pop xchg leave pop aas je in push xchg stc sub fwait aam inc jg lock sub cld cmp xor imul xchg sbb lret jl in daa jg repnz push jne testb add jae in pop cltd (bad) push dec add ficoml popa fwait rolb jne,pt out push pop and sub aad inc ja out add or scas jmp add push in data16 add inc xchg dec outsb mov push jne mov pop jg shl and xchg push jae mov negl cmp fwait mov popa (bad) mov inc push push cs jno mov hlt adc sahf mov arpl dec add fdivr sbb pop jl mov arpl sub mov jno add xchg mov cmc adc mov bound sub mov push jo sub ret and lret cs jo mov hlt push aaa pop jns mov xchg dec outsb (bad) scas (bad) icebp adc push jne mov stc sbb pop jge shl and test dec insl mov jmp xor lcall test dec push stos int3 in push cs jo mov repz add sbb pop jl mov popa (bad) movsb enter dec insb lea push jb mov cmc push aaa pop jns mov pop sub mov push jae add pop andb imul push js mov pop jg shl and cmpsl enter dec insb lea push jae mov negl cmp lahf shl and test dec imul jb mov negl cmp pushf add popa (bad) mov inc push adc push jae mov notb cmp fwait mov pusha andl icebp adc push je mov clc sbb pop jge mov jb mov cmc pop add add inc arpl dec imul push or dec outsb nop mov repz lcall inc popa andl leave jmp lea push jb mov add add hlt adc mov inc bound sub mov push add mov cli sbb pop jle mov arpl daa inc push or lock push ja mov pop jge mov test dec push lods int3 in wrmsr push jno mov hlt adc push jbe mov pop jl mov xchg dec insb lea push jbe mov pop jle roll add or push jae mov notb cmp fwait mov pop andl mov mov repnz stc sbb pop jle mov test dec imul mov negl cmp pushf mov pusha andb data16 xchg out sub mov push jno mov repz push add mov xchg dec push add push jbe mov clc sbb pop jnp mov pusha andb mov or push jno mov notb aaa pop jns mov pop jg shl and test jmp (bad) mov leave cld pop inc popa andl mov pop jp mov bound sub mov push je shl es push push das push jno mov negl cmp jg ret and add lock push je mov clc sbb pop jl add shl and mov or dec outsl nop mov hlt adc mov arpl dec insl mov push jne mov stc sbb pop jle shl and cmpsl enter dec insl mov cmp jg shl and mov sbb cmpsb (bad) call mov push jno mov negl cmp fwait mov pop jg (bad) out sub mov dec outsl nop mov repnz push jne mov add add sbb pop jl mov popa (bad) mov inc mov or push jb mov notb aaa pop jns mov pop jg shl and test dec imul mov icebp adc pop js mov popa andl lods int wrmsr push jno mov cmc push ss js mov pop jge mov bound sub mov jno mov hlt adc mov sbb pop jl mov popa andl imul mov (bad) sbb pop jle mov arpl or dec jo mov repz clc sbb pop jnp mov pusha andl pop andl leave jmp lea push jb mov notb cmp lcall jg shl sub mov dec outsb mov push jae add add js mov pop jge shl and andl gs or mov sub mov inc jl out xchg adc pop jp mov pusha andb xchg dec insb lea add scas ljmp jne out jo out pop cwtl iret sbb iret or sub aas xchg aad gs dec (bad) or jl and notl std jo lods pop nop add leave or cmp movb add pusha andl lret in or mov hlt adc shl and xchg (bad) icebp adc push jne mov pop andb mov pop cmp fwait mov aam xchg add int push das push jno mov hlt adc push ja mov pop jge mov bound daa inc push (bad) inc into clc sbb pop jle mov arpl dec imul adc push jne mov negl cmp fwait mov pop jg shl and mov dec outsb (bad) mov icebp adc push jne mov clc sbb pop jnp mov pusha andl enter dec insb mov push jbe jbe mov notb cmp fwait mov pop andb dec insb mov push jb mov hlt adc mov arpl dec imul or dec outsb (bad) mov icebp adc push je mov notl cmp lcall andl int3 in or mov repz push jbe mov stc sbb pop jge shl and test dec insl mov push jbe mov pusha andb outsl nop mov repnz push je sub ljmp (bad) icebp adc push je mov pop sub mov cmp loop push (bad) cld xor rorl add add out daa pusha xchg into add outsb xlat sbb ret jns lods push mov and sahf adc test rorl inc lcall xchg imul addr16 pop cwtl (bad) adc lahf fisubrl ja inc stos out jb hlt inc mov dec mov das insb stos in addr16 jnp cmp adc pusha cltd rolb je out and out xor (bad) cmp sti mov inc cmpb mov les add sub add xor test push (bad) sbb jne sbb rclb xchg rcrl test add aad xchg out push mov add or stc das arpl push inc (bad) ret je or mov ss push dec mov cmpl pop mov inc cmpl les mov mov add jae in push mov dec mov or xchg xor cs lods loop dec jge loopne pop mov sar icebp fldl loop push sub sbb jae call lock xchg (bad) stc cmp bound adc sbb xchg fstps adc jl,pn cmc jae or sub inc cmpsb out movsl cmc jl repnz aaa sahf (bad) adc movsb lock test sub (bad) mov cmp push push test sub xchg les or cld xor loop xchg add or jae aas je jmp push stos add add push push nop out and ljmp cmc aas js push mov jmp sbb iret add arpl xor xchg fstpl ret repz dec js sub mov pusha xchg int3 pushl imul mov push jp or das or mov sbb rorb cmp cmpsb fidivrl or dec xchg or imul push aad xchg leave (bad) xor sbb inc mov and fdivrl add add stos loope dec jge out push mov sbb fcoml inc jp add insb mov lret xchg pop xchg leave push jnp stc xor aam cmp sbb or scas out insl movsl fimull inc xchg int3 add add in dec test cmpsl push inc jl mulb cmc add inc xchg leave (bad) xor (bad) adc ficomp push mov call or sbb mov push push xlat or (bad) clc das cwtd int cmp loopne arpl mov (bad) std xor popa xchg leave add mov fist mov push mov loope dec test adc jg dec enter or pop decl (bad) stc inc js cs fstsw mov sti xor in pop xchg jecxz xchg adc gs aad push jne ljmp into xor in cmp int3 (bad) mov adc add xchg in pop cwtl rorb inc cmpl push pop xchg lret outsb cmpsl loope push mov fistpl pop mov sbb cmpsb (bad) call xchg mov negl cmp andb mov or dec jo mov hlt adc mov pop jg shl and xchg push jb mov cmc push aaa pop jns mov pusha andl lret sub (bad) hlt adc mov pusha test dec add insb lea push jae mov negl cmp popf mov bound sub mov push jno mov cld push aas pusha andl lret in push das push jno mov cmc push aaa pop jns mov pusha andl lret in or mov clc sbb pop jl mov test dec insb lea push je mov clc sbb pop jl mov inc imul add mov add movsb (bad) out sub mov push je mov clc sbb pop jl mov arpl dec jo mov hlt adc mov pop andl int3 in push das push jno mov notb cmp pushf mov bound sub outsb (bad) mov repnz push jne mov stc sbb pop jge mov test dec push lods int3 in push das dec jo mov hlt adc pop jl mov add and (bad) mov inc imul mov hlt adc push ja mov pop jge mov test push jb mov cmc push ss js mov pop jg shl and cmpsb (bad) call mov jb mov testb inc popa (bad) mov dec imul cltd mov pop andb movsl (bad) out sub mov jno mov std pop aas add pusha (bad) mov inc push push cs jo mov hlt adc mov pop jle ret and data16 dec jo mov hlt adc mov pop jge mov arpl daa dec imul mov repz push ja mov pusha andl leave jmp sub outsl nop mov repnz stc sbb pop jl mov arpl dec outsl nop add mov repz stc sbb pop jl mov arpl dec outsl (bad) mov repnz push jne mov pop jg (bad) in add outsl (bad) mov repnz cli sbb inc arpl dec outsb (bad) mov notb cmp popf mov bound daa dec insl mov push je mov clc sbb pop jle shl and xchg dec insl mov push jne mov clc sbb pop jl roll add add add add ljmp aad sbb pop jg ret and (bad) push inc jp adc cmc das imul dec outsl xchg mov cmc push aaa pop js mov pop jg shl and cmpsb enter dec insb lea push jae mov notb cmp popf mov bound daa dec imul mov repz push ja mov pop jle shl and cmpsl enter or mov xlat clc sbb pop jnp mov pusha andb dec imul jno mov hlt adc mov bound daa dec push or dec outsb nop mov repz push ja mov pop jg shl and cmpsb (bad) call mov push jne mov stc sbb pop jl mov bound sub mov jno mov hlt adc mov add sbb popa andl lret in or mov repnz cli sbb pop jge shl and cmpsl (bad) call lea push js mov pusha andb add jne out arpl stos lret in or dec outsb (bad) mov icebp adc push jne mov std push aas pusha andl scas iret out adc push jae mov notb aaa add lahf shl and test dec push lods int add wrmsr push jne mov clc sbb pop jl or (bad) hlt adc jecxz outsl xchg mov cmc push aaa push js mov pop jle shl and mov push jno mov hlt adc mov pop jle shl and loope pop nop mull lret in or mov negl cmp pushf mov popa (bad) mov inc mov or dec outsb (bad) mov icebp adc push jne mov clc sbb pop jnp mov add (bad) pop inc test dec imul jae mov clc sbb pop jnp mov bound daa dec imul mov notb cmp fwait mov pop andb dec imul push je mov (bad) sbb shl and xchg dec jno mov hlt adc mov pop jge mov xchg dec imul jae mov testl add sbb pop jp mov xchg dec outsl nop mov repz sti sbb pop jg shl and test dec imul jbe add mov add inc test dec imul jb mov cmc pop cmp fwait mov pusha andl (bad) icebp adc push je mov negl cmp pushf mov arpl sub mov push je mov stc sbb pusha andl int3 out push das push jno mov fdivr sbb pop jge mov arpl or dec outsl nop mov repnz push jne mov std push aas pop andb xchg dec imul jno mov hlt adc push ja mov pop jge mov xchg dec outsb mov push je mov negl cmp popf mov popa (bad) mov inc xchg add leave jmp lea push ja mov pop jge mov bound sub mov cmp loope push nop int jnp out and inc (bad) mov minps enter rolb test add dec mov rsqrtps loop pusha pushf out insb test xor xor std cmp sarb repz out add jo in push out sub scas lock hlt add test leave pop inc add dec test or int3 or int3 adc int3 rsqrtps aad push fstpl pop xchg rcll dec mov add jl cmc aaa ja add jle add mov or cltd fcoms pop mov out jo,pn in xor repnz cli ss add (bad) lds push xchg rorl push pushf fstpl push pushf loop push mov sub divb jbe lock movsl loop pop cwtl aad push cltd ficompl push cltd loopne popa mov in cmp cmp add add xlat pop pusha sahf in jo lock clc ss sti cmp add mov add (bad) iret or xlat pop push xchg fisub pusha add rcll dec xchg fldenv push cli inc mov push fs ds dec nop rcll xchg fsubl imul and clc cmp fisubr insl mov inc mov sbb xor sti inc mov sbb lock pop push xchg fsubl outsb mov dec nop fsubs add add ret add xor lods clc aas jle hlt xor lods cli jl,pt repz stc ss add add dec mov add mov xor scas repz xchg push inc jp in and sar gs add push jae mov pop andb mov or dec outsl (bad) mov repnz stc sbb pop jge mov arpl sub scas iret lock push je mov negl cmp fwait mov pusha andl lret in add add xor mov clc sbb pop jl shl and fstl xor xchg mov clc sbb pop jnp mov pusha andl lret sub outsb mov push jne mov pop jg shl and xchg dec insl mov push jae add pop jg shl and cmpsb (bad) call nop mov repnz push jbe mov stc sbb pop jl mov bound daa dec imul add in or mov repnz std sbb shl and data16 dec insb lea push jb mov cmc push aaa pop jns mov pop andb imul mov repz push mov hlt adc mov pop jle shl and add cs jo mov clc sbb pop jnp mov pusha andl leave ljmp iret lock add xor xchg mov notl cmp pop cmp (bad) mov dec imul mov notb cmp fwait push pop (bad) fiadd xchg mov cli sbb inc bound daa dec imul dec test add dec push lods (bad) dec mov cli xor cld dec insb mov stc push jne mov push cmpsl repnz lea bound daa dec push or dec outsl (bad) mov repnz push jne mov push inc popa (bad) mov add add in es push or mov notb cmp lcall jg shl and cmpsb (bad) call mov jb mov notb cmp add inc push or mov repnz push jne mov clc sbb pop jnp mov pusha stos adc leave or ret ja jmp pop pushf rcll push mov adc enter xlat adc pusha sahf in outsl stos in aaa jl incb or add dec xchg fcoms pop movsb add cmp (bad) or insl mov sbb jecxz arpl out jae in es xchg lret xchg or cmpl inc jge repz sti ss add into adc inc test adc lds cmp cmpl inc jl repz orps ficompl push cltd loope mov in ss std cmp xchg adc (bad) pop pusha sahf loope push repnz add ja idivb test add mov push dec xchg fcomps pushf add cmp hlt sub loopne pop lahf in outsb mov cmp add (bad) or mov jmp imul ljmp mov incl mov push dec mov or push xchg rcrb pop lahf fstpl enter iret push push pushf add sub divb jns cld inc test add (bad) xchg fstps bound ljmp ja add ret nop int pop fistpl pusha test sub jns idivl jbe sti inc test add int3 or rcll push (bad) aam pop xchg xlat sbb cmpsb loope pop movsl out fs ss cli dec (bad) into or xlat push push xchg xlat sbb popa movsl in pop mov fbld stos out jl add push cltd fstpl push pushf in bound repnz add mov das imul push arpl lock add pop dec (bad) int push cwtl xlat push pop mov icebp xor mov cmp divb add inc or dec xchg rsqrtps sbb xchg fbld mov aad push mov add adc xchg fcomps arpl lock hlt cmp sti inc test add xchg or insl scas ljmp mov add push cwtl fcoms pop mov hlt xor (bad) rolb je lock add add stc inc mov sbb lods repnz or lods repnz jl or fbld outsb mov inc xchg adc loope insl mov inc test adc in xor lret mov or loope insb mov inc mov adc cmc cmp add xor push push pushf fcoml dec xchg rorl pop movsb call sbb in sub in xor jmp das je add mov cmc sub movsb in xor or mov clc inc jge add mov and push mov clc das gs aam inc jnp jmp ja cmc add insb cmpsb loopne push xchg ficom cmp pop xchg rcll mov or lds cmp in cmp fbld pop pushf fstps movsb loope push xchg adc mov add mov cmc xor jge,pt add fdivr sbb pop jg shl and insb (bad) (bad) sub or icebp adc push jne mov stc sbb add pop jl mov popa (bad) mov inc push or push jae mov notl cmp fwait mov inc xchg dec insl mov push jae mov notb aaa pop jns mov pop jg (bad) in sub mov dec jo mov repz push jbe mov pop jge mov bound dec push stos int3 in push xor xchg mov add sbb shl and cmpsb enter dec add (bad) icebp adc push jne mov clc sbb pop jge mov bound sub aam adc mov pop jg shl and xchg dec insl mov push jae mov negb cmp jle mov arpl xlat sub stc cmp mov sub das dec jo mov hlt adc mov pop jg (bad) jmp lea push jae mov (bad) sbb roll add add add xchg or insl mov push jbe mov pusha andl int3 in push das push jno mov cmc push aaa pop jns mov pusha andb data16 dec outsl nop mov negl cmp fwait mov inc xchg dec outsb (bad) mov repz push jbe mov pop jge mov bound sub or push jbe mov cli sbb add inc arpl add add out sub mov jo mov hlt adc push push xchg into or mov add push mov push stos int3 in push das push jno mov hlt adc mov pop jle mov imul jno mov cmc adc mov inc arpl dec push lods int3 in push das dec jo mov repz push ja mov pusha andl enter dec insb lea add scas iret out adc push jae mov notb aaa pop jns mov pop jg ret and imul mov repz cmp pushf mov popa andl leave ljmp iret lock push jae mov pop jl mov arpl dec imul mov repz push jbe mov pop jg shl daa inc push or dec outsb (bad) mov repnz push jne mov add add sti sbb add inc arpl dec imul jb mov inc popa andl leave jmp sub mov negl cmp fwait mov pusha andl enter push jno mov cmc adc mov pop jge mov bound daa dec push or dec outsb (bad) mov icebp adc jns mov pusha andb push add (bad) icebp adc push jne mov clc sbb pop jnp mov popa (bad) mov inc mov adc push je mov negl cmp pushf mov pusha andl lret sub insl mov push jae mov negb cmp jle shl and test dec insb lea push jae mov clc sbb pop jnp mov bound sub mov std push aas pusha andl lret add push jno mov cmc push aaa pop add and data16 jecxz sub mov jns mov pusha andb imul mov repz push jbe mov pop jge inc cmpb push jne mov stc sbb pop jl mov xchg inc mov or dec outsl (bad) mov repnz jne mov pop (bad) movsb (bad) in pop test inc imul push je xchg mov negl cmp pushf mov popa test lods out sub test sbb insb int3 (bad) and test dec insl mov push jne mov cli sbb add jmp xchg int inc cmpb push mov cld cmp jmp jne sub repz rorb inc jg repz in daa add fstpl pop sahf fstpl pop cltd xlat push pop xchg (bad) push push cltd loopne arpl pop push mov stc xor add mov repnz lods ljmp xchg lret jns in es fwait aad pop pushf fisub gs cld inc mov adc ficompl pop fistpl pusha stos lock jo repnz incb add push gs divb lods in das jo loopne push mov cli das movsb fistl inc jge jmp pop xchg enter mov scas out push mov cli xor aam cmp push (bad) ret std xor jg stc cmp outsb mov and push (bad) enter add inc add sti cmp repnz cmp pop dec xchg rcll push lcall test jge aas (bad) lret add and (bad) sti aaa outsl lods jecxz pop popf fmuls cltd into sub iret add jle icebp sub loop pop nop (bad) std xor add scas call sbb ficompl pop xchg int inc jnp hlt sub jo add jmp test ljmp (bad) repnz add inc test dec add add (bad) icebp adc add pushf mov bound daa dec imul mov clc sbb pop jl mov inc push or mov hlt push aaa pop jp mov popa (bad) mov dec imul mov stc sbb pop jge mov xchg dec insl mov push je mov clc sbb pop jge mov test dec jo mov hlt push aaa pop jns add lcall andl lret das push jno mov notb cmp fwait mov mov or mov hlt adc mov bound sub mov jb mov notb cmp fwait mov xchg dec outsl nop mov hlt adc mov inc xchg dec insl nop mov repz cli push aas arpl dec insl (bad) mov repnz cmp pushf mov bound sub mov push jae mov negl cmp popf mov xchg dec outsb (bad) mov icebp adc push jbe mov pop jge mov test dec insl mov push js mov pusha andl lret in or mov cmc push aaa pop jns mov bound sub mov jbe mov add inc arpl dec imul jb mov notb cmp pushf mov popa andl into out wrmsr push jae mov notb cmp lcall andl scas (bad) icebp adc push je mov clc sbb pop jle ret in es push xchg pop cmp add or dec imul jae mov negl cmp fwait mov pusha andl into out adc add add push jae mov notb cmp lcall andb xchg dec insl lea push js mov pop jle shl and xchg dec insb mov push jb mov notb aaa pop jns mov pop andb push lods int wrmsr push jb mov notb aaa pop jns mov pop andb xchg dec insb lea push ja mov pop andl leave ljmp (bad) repz push jbe add popa (bad) mov dec insb lea push ja mov pop jle shl and test stos int3 in or mov hlt adc mov pop jg sar pushf xlat sub test dec insb lea push jne mov stc sbb pop jge mov test dec insb lea push je mov popa (bad) mov dec imul mov notb aaa pop jp mov pusha andl lret in adc push jne mov stc sbb pop jge mov mov or dec outsl nop mov repz push ja mov pop jg shl and mov jb mov notb cmp fwait mov bound sub lea push add mov popa (bad) mov dec insl mov add (bad) icebp adc push jne mov stc sbb pop jge mov add lods int wrmsr push jae mov negl cmp pushf mov arpl sub outsb (bad) mov repnz (bad) sbb pop jg shl and mov rorl sub (bad) mov repnz jmp inc arpl dec imul ja mov pop jg shl and xchg dec outsb (bad) mov repnz cmp fwait mov popa (bad) mov dec push lods int wrmsr push jno mov cmc push aaa pop jns mov pusha andl iret lock push jae mov negl cmp popf mov arpl dec imul push ja mov inc xchg push jno mov cmc push aaa pop jns mov pusha andl int hlt adc mov pop andb push out adc push je mov clc sbb pop jl mov test dec imul jae mov negl cmp pushf mov push push das push jno mov notb cmp pushf mov in sub (bad) mov repnz cli sbb andb insb mov push jne mov pop jle shl and lret cs jo mov hlt adc mov pop test add or dec imul jae mov clc sbb pop jl mov arpl dec insb mov push add mov xchg dec insl mov push jne mov stc sbb pop jge shl and imul jae mov clc sbb pop sub mov push je mov clc sbb pop jl mov test dec insb mov push jne mov std and andl mov push jae mov negl cmp pushf mov bound dec imul ja mov bound sub mov sub repz mov or test pop dec mov sub add inc xchg push je mov clc sbb pop jge mov xchg dec insb (bad) mov repnz (bad) sbb pop andb xchg mov hlt adc mov popa (bad) mov dec push lods int wrmsr push jb mov negl cmp add inc mov or push je mov clc sbb pop jl mov arpl dec push lods into out adc push jae mov negl cmp pushf mov bound sub outsb (bad) mov repnz push jne mov pop jg shl and xchg dec outsb (bad) mov icebp adc push jne mov stc push aas pusha andl lret in or mov hlt push aaa pop jns mov bound aad push cmp aaa pop jle shl and cmpsb (bad) call lea push jae mov notb cmp lcall andb xchg push add mov pop jl mov popa (bad) mov inc xchg or dec insb lea add cwtl mov add add sbb pop andl leave ljmp (bad) repnz push je mov negl cmp fwait mov pop andb xchg push jo mov repz push jbe mov pop jge mov bound es mov or dec outsb nop mov repz pop jns mov pop andb xchg dec insl mov push jae mov clc sbb pop jp mov add add pop andb push stos int3 in or mov notb aaa pop jns add mov pop jle mov arpl sub nop mov clc sbb pop jnp add loop and cmpsb (bad) out sub mov jo mov hlt adc push ja mov pop jl mov dec imul jb mov hlt adc mov pop jge mov bound es push jmp sub outsb xchg mov hlt adc mov pop jge mov arpl dec insl lea push jae mov negl cmp fwait mov xchg dec insl mov push jae mov notl cmp lcall jg shl and xchg dec outsb (bad) mov icebp adc push je mov negl cmp fwait mov pop andb test dec push lods int push add das dec jo mov negl cmp fwait mov add cmpsb out jae ljmp add das fs rorl inc cmpl lock sti add adc aam pop mov mov rorb dec xchg add ja jmp das outsl scas icebp xor jg incb lret cltd fcompl push fwait loope pusha cmpsb jmp jge or jno std inc xchg adc (bad) sbb fisubl data16 jecxz insb scas jmp pusha cltd add add add cmp outsl stos lock data16 jmp cmp xchg adc leave pop inc test adc ret jl add xor aas jp out sub cli cmp std inc xchg push dec xchg (bad) adc mov in xor cmc cmp mov pop dec (bad) rcll push xchg ficomp imul or pop xchg aam and and cmp mov data16 repz mov push dec mov add add or rclb pop cwtl fcoml push xchg (bad) lcall and pushf fcoms pop sahf loopne pop xchg aad pop xchg aam pop mov fistpl pop pushf fstps push mov cmp lret or rcll xchg (bad) adc pop ficompl arpl lock repz ds lds inc xchg or mov adc (bad) push arpl call ss add push cltd xlat adc pop pushf loopne movsl loop pusha mov add add es out aaa add inc mov adc (bad) sbb xlat push push xchg fistpl push mov repnz repnz xor cmpb cmp pop inc add dec nop lret push inc test adc int push xchg roll and out je cli aaa js add aaa je in sub jecxz pop pushf loope arpl repnz inc mov adc rcrb pop pushf ficompl cmpsb out cmpsl jmp push mov aas (bad) add add add into adc fldenv fs mov out arpl rorb dec mov add int3 pop inc xchg xor out xor cli cmp push dec (bad) int3 adc bound repz cmpl dec xchg ficompl push xchg fbld bound in xor divl roll (bad) or rorb inc jge add mov adc in ss add rcrb pop ficomp pusha cmpsl jmp jno cmc cmp add add xor add (bad) sbb fwait in outsb mov inc (bad) aad bound or outsl add push stos lock or loop jno incl ficompl pop cltd rorb (bad) rcll dec mov aam push xchg fsts push xchg fsubs pusha sahf ficompl pusha mov jmp cmpsb loop push xchg ficompl push mov push pop mov jmp pop xchg lret (bad) xor mov sub int3 add jo loope dec (bad) mov mov add xlat adc mov xlat adc ret jbe out push mov (bad) imul pop pushf aam inc jg lock fistpl push xchg adc repnz push mov or stos loop add or (bad) mov jmp adc mov jmp popa movsb ficom dec mov or into or mov xor and xlat adc int3 adc adc stc xor pop xchg aad push (bad) into or add aam pop sahf (bad) imul es cltd rorl inc jle lock lret or mov popa (bad) mov dec push lods int3 in push das push jno mov cmc push aaa pop jns shl and xchg dec insl lea push jae add pop jg shl and cmpsl (bad) call lea push ja mov pop jle shl and cmpsb (bad) call mov push jb add add cmp pushf mov popa (bad) cmpsb (bad) call lea ss js loopne arpl fstpl push nop enter loope sub scas iret lock push jae mov negl aas pusha andl lret sub (bad) repz pop jp mov pusha andl leave ljmp aad pop cmp popf mov test das push jb mov cmc push aaa pop jns mov (bad) pop inc bound daa dec imul mov negl cmp fwait mov popa andl scas (bad) icebp adc push je mov clc sbb pop jnp mov bound pop jp mov pusha andl leave ljmp (bad) icebp adc push jne mov pop jle shl and mov dec jo mov notb add loope and cmpsb (bad) call add dec imul jb mov cmc push aaa pop jns mov bound sub mov push jae mov negl cmp fwait mov pusha andl lret in or mov negl cmp popf mov bound or mov repz push ja mov pop andb xchg push jb mov clc sbb pop jnp mov popa (bad) mov inc add insl mov pop jp mov pusha andl (bad) hlt adc push ja mov pop jle shl and lret in push das dec jo mov cmc push aaa pop jns mov pop jg (bad) daa dec push lods int wrmsr push jae mov add pop inc popa andl lret sub aam push ss js mov bound es push push cs jo mov notb cmp add add add pushf mov bound sub mov jno mov clc sbb pop jl mov test cltd add sbb inc add out outsl lret icebp adc push jbe mov bound daa dec imul mov repz push ja mov pop add daa dec push or dec outsl nop mov negb cmp fwait mov pusha andl lret or dec outsb (bad) mov icebp adc push je mov clc sbb pop jnp mov xchg dec imul je mov add sbb (bad) in daa dec imul mov repz push ja mov popa andl lret sub (bad) repnz cld sbb shl and lret xor xchg mov notb aaa pop jp mov popa andl add outsb mov push je mov negl cmp popf mov bound sub outsb (bad) mov repnz push jne mov clc sbb pop jnp mov popa (bad) mov sub (bad) repz push ja mov arpl sub mov push jb mov cmc push aaa pop jns mov pop jg shl daa dec imul mov pop jg shl and cmpsb (bad) call add mov cmc push aaa pop js mov pop jg shl and cmpsl enter dec jno mov notb cmp lcall (bad) mov inc push or dec jo mov hlt adc push ja mov pop andl lret sub inc xorl jo ficomp lcall xor sbb ret (bad) cmp repnz or sub ficoml dec test add sub cmpsb loop push mov (bad) ss out and into add inc jle call add je call add push dec mov stc xor jecxz pop pushf fistp repnz bound inc push or mov pop jg shl and xchg dec insl (bad) mov repnz cmp popf mov arpl dec insb mov push js mov pusha andl add xor xchg mov negl bound (bad) repnz push jne mov pop andl mov jno mov cmc adc mov pusha add sub scas iret lock push je mov (bad) pop inc popa (bad) mov inc push push das dec jo mov hlt adc mov pusha andl mov repnz push jns mov pusha (bad) mov dec push mov jb mov negb cmp pushf mov bound sub mov push ja mov pop jle shl and cmpsl leave ljmp add stc sbb pop jge mov arpl dec outsb nop mov sub jnp mov lcall (bad) daa dec imul sub insl mov push je mov pusha andb xchg add add dec insl lea push jae mov testb cmp loope and test dec outsl (bad) mov repnz push jne mov clc sbb pop jl mov push mov sti xor loopne push mov add mov sbb mov push inc mov imul adc push jae mov sti sbb pop jg shl and xchg dec outsl nop mov hlt adc mov pusha andl iret lock add add xchg mov clc sbb pop jnp mov arpl das push jno mov cmc push aaa pop jns mov test dec insb lea push jae mov notb cmp fwait mov popa (bad) mov inc imul mov clc sbb pop jl mov arpl sub mov jno mov cmc adc lahf shl and test dec outsl xchg mov hlt adc add js mov pop jg shl and xchg dec outsb nop mov repz xchg xor cltd mov pop jg shl and cmpsl enter adc dec xchg (bad) aaa jne idivb jnp rdmsr push jne mov stc sbb pop jge (bad) sub mov jno mov cmc push ss js mov pop jg (bad) in es add mov repnz push jne mov clc sbb pusha andb xchg dec insl (bad) scas (bad) icebp adc stc sbb pop jge mov arpl dec insb mov push ja mov pop jle mov test dec insb lea push je mov fdivr push aas pusha andl iret lock push jne and mov scas out pop (bad) ret fs roll cmp push mov add jae divl popfw aad dec add scas out add add push mov cli ss jmp add jp call add js in sub add inc test dec insb lea pop jns mov pop jg shl and data16 dec insl mov push ja add arpl dec insl mov push je mov negl cmp fwait mov pusha int3 adc lret or leave adc loopne and test dec jae mov negl add cmp pushf mov popa (bad) mov inc mov cmp fistl inc ja jecxz dec xorl jno fstl test int3 add insl mov mov pop push mov leave (bad) xor dec jnp out push pop (bad) xor roll cmp loopne pop xchg add or mov sbb xchg rorl jae,pt in push test icebp sub pop nop (bad) imul or mov sub loop push mov int3 add imul (bad) ss fist dec cmpl push dec add lds jp,pt out sub rorb sub rclb pop jle mov test dec push stos hlt dec xchg imulb lcall jbe,pt loop dec mov add jno jmp pop cwtl rclb pop mov lock pop xchg int3 add jbe out cs scas add insb stos out (bad) add pop dec je mov clc sbb pop jge mov test dec insb mov stos sti aas mov push inc bound sub call add (bad) (bad) (bad) cmp loopne dec test aad inc jp ljmp std cmp cmp xchg dec mov leave ljmp (bad) repnz push jne mov clc sbb pop jnp mov bound xchg add xor xchg mov cmc push ss js mov pop jg shl and cmpsb (bad) call mov jno mov hlt adc push ja mov popa (bad) mov inc xchg or dec insl mov push jae mov notb aaa pop jns mov pop jg ret or dec outsb (bad) mov icebp adc push je mov negl cmp popf mov arpl sub mov daa arpl add lret mov add mov add imul mov jmp push mov fistl inc add aaa jno jecxz push nop enter scas jecxz dec test in pop xchg rclb dec xchg divl outsb lods call push push xchg rorb inc jnp icebp sub pop mov sahf fistl xor mov fist dec mov add jno out pop xchg rorb push jne sub jecxz pop pushf fcomps pop pushf loopne add test push jne mov stc sbb pop jge mov les dec mov add je jecxz push test rorb push nop iret or testb sar movsb fildll mov push jne mov stc sbb pop jl mov pusha andl leave ljmp aam push aaa pop js mov add (bad) out sub mov dec outsl nop mov repz jne sbb test add (bad) out sub nop mov repnz push jne mov clc sbb pop jnp mov popa (bad) mov inc mov or icebp adc push jne mov inc data16 dec outsb (bad) mov repz push jbe mov pop jl mov popa (bad) mov inc mov or jb mov cmc adc mov pop jle shl and test dec imul jno mov add adc push jbe mov add test jmp sub (bad) hlt adc mov int3 or mov add xchg fisttpl cwtl mov pop jle shl sub mov push je mov add push aas pop andb xchg dec outsb (bad) mov hlt adc mov pop andl int3 in push cs ficomp push (bad) enter mov jmp push outsl jmp movsl in pop mov stc sub inc jnp sti cmp repnz mov aad inc jns in daa pusha mov (bad) (bad) ss jecxz push mov add jbe out sub and leave add xchg add jp icebp sub aam pop cwtl fistpl bound movl sub call sbb (bad) (bad) cmp out xor mov sub jmp jb cli inc addl sbb xchg fcompl pop cwtl rorl sub adc add es mov std push inc popa (bad) add push jne mov sti sbb pop jle shl and test ljmp (bad) repz cli sbb loop and test out wrmsr push jb mov cmc push aaa pop jns mov pusha andb mov or dec outsl nop mov repnz cli sbb popa (bad) mov dec imul mov cmc adc mov out dec test add add aam inc jne fist dec jle clc arpl mov test adc mov and (bad) imulb arpl movsl fimull inc ja loopne dec jle in and xchg (bad) std cmp dec jle lock (bad) std xor add sub pop inc jg icebp and xor aad aas add sti xor call loopne pop (bad) or int wrmsr push jb mov cmc push aaa pop jns mov pop jg shl and xchg test jmp (bad) mov repnz push jp mov pusha andl lret sub (bad) repnz push jne mov clc sbb pop jl mov bound sub mov push jae mov negb cmp pushf mov bound daa dec imul mov hlt adc pop jnp mov bound daa dec push or mov repz push ja mov add cli sbb pop jge mov bound sub outsb (bad) mov repnz push jne mov clc sbb add mov inc xchg dec outsb (bad) scas (bad) icebp add cmp fwait mov add stos lret in or mov repz push jbe mov pop jge mov arpl dec imul mov clc sbb pop jl mov popa (bad) mov inc push or dec outsb (bad) mov add add adc push jne mov clc sbb pop jnp mov test dec insb lea push je mov clc sbb pop jnp mov popa (bad) movsb (bad) in es push or mov negl cmp pushf mov bound daa inc push lods into out adc push jb mov cmc push aaa pop jns mov pop jg shl sub lea push jae mov negl cmp pushf mov inc xchg add dec jo mov notb aaa pop jns add loope and stos lret in add xor xchg mov negl cmp fwait mov popa (bad) mov dec push lods int3 out adc push je mov negl cmp pushf mov xchg dec insl mov push jae mov notl cmp fwait mov pusha andl leave ljmp (bad) notb cmp lcall (bad) mov dec push lods int rdmsr push je mov stc sbb add inc test push jae mov notb cmp lcall (bad) cmp repnz leave (bad) xor aad inc ja loop dec xorl cmpsb fisttpl inc jp in dec (bad) mov (bad) stc xor roll cmp add and ret clc bound mov mov and adc jg jmp rorb inc je loope dec (bad) ret jno out pop (bad) roll add imulb pusha xchg lret (bad) cmp or jno loopne dec mov rcll inc jnp out push xchg int3 add cmpb push dec mov rorl inc jnp cmc xor xor cwtl mov pop andb push lods int push das push jno mov notb aaa pop jns mov pop jg shl and cmpsb (bad) out sub lea push ja mov pop jge mov arpl sub mov add adc stc sbb pop jge mov bound sub mov mov pop inc jge out sub in and int pusha mov fsqrt sbb pop jg shl and cmpsl enter dec insb add cmp mov dec push or dec outsl (bad) mov icebp adc push jbe mov cli sbb pop jge mov bound sub mov push jae mov notl cmp lcall add cld sbb shl and cmpsb (bad) out sub mov push jae mov notb aaa pop jns mov pop jg shl and test rorb inc jle divb imul mov fmuls sbb lret add mov and cmp fist jl call clc xor popf aad inc jns in and xabort bound stos fist and roll add sub cltd rorl aas je mov sub int3 add jae jecxz pop xchg lret add outsl scas in and arpl mov mov mov and add jb jecxz pop xchg iret or ja jmp pop cwtl rolb aas js jmp or mov lret insb cmpsl fcoml dec cmpl mov fcoml dec (bad) mov xlat adc ret addr16 in fs xlat push inc js loope dec mov add je in pop add add cmpsl fstpl push nop (bad) jns icebp sub (bad) adc call add jno ficom inc jl ljmp stos lret jmp sub (bad) repnz cli sbb pop jge mov bound sub insl mov push jne mov clc sbb pop jnp mov popa andl scas iret lock push jae mov negb cmp mov add mov push jno xchg mov fsqrt sbb pop jge mov bound es push rdtsc push jae mov cli sbb add inc test dec imul jbe mov stc sbb pop jl mov mov push das dec je mov clc sbb pop jl mov xchg dec insl lea push jae mov notb cmp lcall (bad) movsb (bad) ljmp (bad) icebp adc push jne mov clc sbb cmp mov bound daa inc push or mov repz jp mov pop andb xchg dec insb lea push jae mov notb add add inc data16 push je mov add push ds andl lods into out adc push jb mov cmc push aaa pop js mov pop jg ret es imul jno mov cmc push add push js mov pop jg shl and test dec push stos int3 in wrmsr push jb mov stc sbb pop jg shl and xchg dec imul jb mov notb test std cmp clc push movsb out adc loopne and test dec insb lea push jbe mov pop jle shl and data16 dec outsl nop mov negl cmp popf mov xchg enter dec outsb (bad) mov icebp adc push jne mov stc sbb pop jge mov dec imul mov pop jle rolb pop sub mov xor jbe mov pop jg shl and cmpsl enter dec insl mov pop jns mov popa (bad) mov dec imul mov cmc adc mov pusha andl iret icebp adc push jne mov fdivr sbb pop jg shl and xchg dec outsl nop mov repnz cli sbb jg (bad) sub mov jno mov cmc push aaa pop js mov pusha or repz push test mov pop xchg dec outsb mov push jae mov sti push aas pop andb push or dec outsl (bad) mov (bad) negl cmp lahf shl and xchg add or dec imul mov hlt adc push ja mov inc bound daa inc push or mov hlt sbb pop jnp mov pusha andl leave ljmp cli sbb out gs aad inc jbe ljmp xchg jmp inc xchg dec insb lea push jb mov notb aaa pop jns mov pusha (bad) mov inc push or dec jb mov notb cmp add lcall jg shl and cmpsb (bad) call mov outsb jecxz lahf loop push (bad) movl xor inc jnp in and into or mov call adc cmp mov divb insb add (bad) imul pop push mov add je in (bad) lds cmp test or enter sar lahf loope or push mov sbb lods incb add rcrl pop lahf loop add inc test or fild lret in or mov jo cs mov bound daa inc push or dec outsb (bad) mov icebp adc push jne mov clc sbb pop jge mov arpl daa dec insl mov push jae mov notb cmp fwait mov pusha andl leave ljmp iret lock push jb mov pop add jge mov bound ret out sub mov push jno mov cmc push aaa pop js mov pop jg add in or dec outsl mov sub mov push add mov pusha andl jae aad pop cmp fwait mov xchg dec insl mov push je mov clc sbb pop jl mov (bad) les pop jg shl and lea add adc push je mov clc sbb pop jnp mov pusha andb xchg pop xchg call or dec insl mov pop jnp mov popa (bad) mov inc push or mov repz push ja mov pop jg shl and mov jno mov cmc push aaa pop jns mov pusha andl lret in or mov repz push jbe mov add jmp lea push jbe mov inc popa (bad) mov sub outsb (bad) mov icebp adc push jne mov stc sbb pusha andb mov or repz push jbe mov pop jle shl and test dec insb lea push ja mov pop jle shl and or (bad) repnz cli sbb pop jle shl and add xor xchg mov es push xchg cmc push ss js mov pop jle shl and test dec imul mov pop jge mov bound daa dec push or dec outsb (bad) mov icebp adc push jne mov negl loop and xchg dec imul push jb mov cmc push aaa push js mov pop jle shl and dec add lods into out adc push jb mov hlt adc mov pop jle shl and test dec imul jo mov clc sbb pop jnp mov pusha andl enter dec insb mov push jno mov notb aaa pop jns mov popa andl push or insl mov push jae mov notl cmp fwait mov popa (bad) mov inc mov test and ret aam sbb pop jge mov bound daa dec push or dec outsl nop mov repnz (bad) pop inc bound es mov or insl mov push jae mov negl cmp fwait mov pop andb imul xchg mov clc sbb pop jl out sub lea push je mov negl cmp fwait mov pop andl add jecxz sub mov jo mov cmc push ss js mov pop jge mov bound daa dec push or dec jb mov notb cmp lcall jg shl and test dec imul mov repz push jbe mov cld sbb shl and data16 dec insb lea push jb mov cmc push ss js mov daa push lods std aas js lock repz push js mov pusha andl int3 in push das push jno mov notb cmp pushf mov mov push jno xchg mov pop jle shl and xchg dec insl (bad) mov repnz std pop inc bound das dec jo mov hlt adc mov pusha (bad) mov dec imul mov notb cmp pushf mov add and xchg dec outsl xchg mov cmc push aaa pop jp mov pusha andl lret in push das push jno mov cmc pop cmp fwait mov mov or dec outsl nop mov repz push ja mov pusha andl lret in or mov negl cmp mov dec imul mov cmc push test push cltd hlt jae or outsl nop mov repz push jbe mov stc sbb pop add jge mov push or dec outsb add pop jns mov pop jle mov arpl daa inc push push das push jne mov clc sbb pop jnp mov popa (bad) mov inc push or dec outsb (bad) scas (bad) icebp adc push je mov notb aaa pop jns mov bound sub mov dec jo mov repnz push ja mov pop jge mov bound add add add mov dec insl mov push jne mov stc sbb pop jl mov arpl dec imul mov notb cmp sahf mov bound sub mov dec outsl nop mov repnz push js mov pop jge shl and test dec outsl (bad) mov repnz cmp fild and (bad) out ss js mov pop andb push lods int rdmsr push je mov bound sub mov push jae mov negl cmp popf mov test dec outsb (bad) mov repnz pop jnp mov arpl dec insl mov push jne mov sti sbb pop jg ret and lret in or mov clc sbb pop jl mov arpl dec imul iret adc cmpb push push mov std xor add add rolb test fist inc mov or les cmp fstl dec test incb ret xchg ficompl imul add rorb pop xchg rorb dec add xor stos out pop xchg add adc sti cmp (bad) cmp rorb inc jns out sub aam inc jp divb insl cmpsb jecxz insb movsb jecxz arpl rclb dec test cld cmp cli xor fstpl pop xchg rclb push mov cmovl jb jmp mov loopne pop xchg fsts push mov add push stos cld jae cmp je mov negl cmp fwait mov pusha andl (bad) lock push jae mov notb aaa pop jns mov cmpsb push jae out les ss js mov pop jle shl daa dec imul mov repz clc sbb pop jnp mov popa andl enter dec insl xchg mov hlt adc mov pop jle mov arpl sub (bad) repnz push jbe mov clc sbb pop jnp mov xchg dec push lods int comiss xchg mov repz push jbe mov pop jl mov pusha andl int3 in or mov repnz jne mov clc sbb pop jnp mov bound daa dec push jmp sub outsb (bad) scas (bad) cmc adc mov pop jge mov bound daa dec imul scas (bad) repnz push jne mov negl ds jg shl and cmpsb (bad) call (bad) jg jmp mov sub nop mov push pop std dec cmpsl (bad) repnz fdivr sbb pop (bad) movsb (bad) sub mov push jb mov cmc push ss js mov pop andb dec insb lea add out wrmsr push jb mov clc sbb pop jl mov bound daa dec imul mov cmc push ss js mov pop jg shl and mov push jno mov notb aaa pop jns mov pop jg ret and mov or lock push jae mov cli sbb pop jge mov bound daa inc push or dec outsb (bad) mov icebp adc push je mov negl cmp pushf mov test dec imul push jno mov hlt adc mov pop andb mov or dec jl lds inc ret js mov popa (bad) mov inc push or dec outsl nop mov repnz (bad) pop inc bound cs outsl xchg mov repz push jbe mov pop jg shl and leave ljmp (bad) repnz add cwtl mov pop andl lret sub outsb mov push je mov negl cmp pushf mov bound sub mov push jns mov pop andb mov or mov repz push jbe mov pop mov fstl dec xorl or (bad) and andl mov push jno mov hlt adc push js add pop jg shl daa dec imul mov repz push jbe cmp out pop jg ret in and lret add push jb mov cmc sbb loopne and test dec imul mov repnz push je mov notl cmp lcall test dec imul mov repnz push jne mov clc sbb pop jnp mov pusha addb add add inc mov push das push jno mov repz push jbe mov pop jle mov arpl dec push stos lret in or mov repnz push jns mov pop andb xchg dec insb mov push jno mov hlt push ss js mov pop jle ret and leave jmp lea push jae mov cmc push aaa push js mov pop jge mov add add inc bound or push jae mov notb cmp aad mov xchg push jp mov bound sub mov jae mov notb cmp mov dec outsb (bad) mov repz mov pusha andl lret sub (bad) hlt adc push jp mov xchg dec jo mov cmc push aaa pop jns mov pusha andl lret add add dec jo mov hlt adc push ja mov arpl dec outsb (bad) mov repz push js mov pusha andl int3 in push das push jno mov cmc sbb pop jge mov push comiss xchg mov notb cmp pushf mov arpl dec imul push jb mov inc arpl sub scas (bad) icebp adc push jbe mov pop jle mov add add add sub outsb (bad) std and aaa pop mov mov push das dec jo mov repz push jbe mov pop jge and mov cmp mov repnz push jp mov test dec insb lea push jae mov negl cmp pushf (bad) sbb ret and leave ljmp (bad) negl cmp fwait mov arpl sub mov jno mov add add push aaa push js mov pop (bad) mov inc push movsb ficomp js mov bound sub mov jno mov hlt adc mov arpl cs jo mov hlt adc mov popa andl lret sub jb int3 dec mov addr16 jo in push xchg lret imul call sti xor rolb ja,pt add in and (bad) (bad) cmp dec jb mov notb cmp pushf mov popa (bad) mov inc push or dec outsb (bad) mov icebp adc push jne mov clc sbb pop jnp mov test dec imul jb mov cmc push aaa pop jns mov pop jg shl and cmpsb (bad) call xchg mov cmc push aaa pop jns mov pop jg shl and xchg dec insb mov add add xor xchg mov clc sbb pop jl shl and xchg dec add mov notb cmp fwait mov popa (bad) mov dec imul push jno mov notb cmp shl es push lods int push das push jb sub pop mov imul ret sti cmp pop jg shl and lea push je mov clc sbb pop jnp mov popa (bad) mov inc mov add ljmp (bad) icebp adc push je adc mov ret push mov adc mov mov pusha andl mov push gs ficom xchg fsts dec jge repz divl jb jmp pusha xchg fnstenv pop jl mov mov das outsl sar jg or mov jp,pt std xor and cs jg add das push ljmp loope js in add rorl dec cltd fcoms cld sbb lret sub outsb mov push je mov negl cmp pushf mov popa (bad) mov inc push or mov notb aaa pop jns mov pop andb xchg or dec insl mov push jne mov clc sbb pop jl mov test dec imul jb mov notb aaa pop jns mov pusha andl add or test push inc mov cli sbb pop sub mov jb mov notb aaa pop jns mov pop andb xchg dec outsl nop mov negl cmp fwait (bad) dec ret cmp leave ljmp (bad) repnz cmp popf mov test dec outsb (bad) mov repnz add inc xchg dec outsb (bad) mov repnz cli sbb add add inc xchg dec insl mov pop jnp mov bound sub mov notb cmp popf mov arpl dec insb mov pop jns mov inc imul mov negl cmp popf mov arpl dec insl mov push jbe mov bound sub lea icebp ss push js mov pop jg shl and xchg dec outsb (bad) mov clc sbb pop jnp mov popa (bad) mov inc push or mov jne fild and cmpsl enter dec outsb nop mov stc sbb pop jge mov xchg dec insb lea cmp pushf mov bound daa dec imul mov stc sbb pop jge mov test dec push lods int comiss jb mov cmc push ss jns mov pop jle ret out daa dec push stos int wrmsr add xchg mov pop jle mov arpl dec imul mov repz pop jp mov popa (bad) mov inc mov or dec outsb (bad) mov icebp adc push jne mov clc sbb pop jl mov test sbb (bad) in es push or dec jo mov repz push ja add pop jge mov bound cs jo mov hlt adc push ja mov pop jle shrb (bad) notb cmp pop jg shl and stos int3 in push das push jo mov hlt adc shl and cmpsl (bad) call lea push je mov negl cmp jle shl and xchg dec insb lea push jns mov pusha andl lods iret lock push jbe xchg mov stc sbb pop jge mov arpl dec outsl nop mov repnz jne mov clc sbb pop jnp mov popa (bad) mov dec imul mov icebp adc push jbe mov pusha (bad) mov inc push push das dec jo mov repz push jbe mov pop jl mov divb jne ss pop inc bound daa dec imul mov hlt adc add add inc test dec insb lea push jbe mov add push fcoml dec xorb add ja in sub adc mov add les push mov stc xor scas in dec mov add xchg lret rsqrtps leave add mov or add push mov dec outsb (bad) scas (bad) icebp adc push jne mov clc sbb pop jl mov push lods into out wrmsr push jb mov cmc adc mov pop jle add loope and test dec push lods int push das push jno mov clc sbb pop jnp mov popa (bad) mov mov push (bad) or cmp addr16 push cmpsb repz or dec imul jb mov notb aaa pop jns mov pusha andb add lods into out adc push jae mov notb aaa pop jge mov arpl daa dec imul add mov hlt adc mov pop andb xchg dec jo mov repz push jbe mov pop jl mov inc push or mov repnz stc sbb pop andb xchg dec insb lea push jae mov notb cmp lcall andl int3 in or mov repz push jns mov pop andb add add xchg dec imul cld cmp pop xchg mov mov das push (bad) add xchg lret (bad) cmp loopne dec mov cli xor ja imulb push (bad) and test push jno mov hlt adc cltd lock aaa jl cmc xor in sub out jge shl and lret xor xchg mov clc sbb pop jnp mov bound daa add add mov xor xchg mov stc sbb pop jl mov popa andl insl lea push je mov clc sbb pop jnp mov bound daa dec imul mov repnz aaa pop jns mov pop jg shl and inc lods loope es push or mov hlt adc mov pusha andl (bad) repnz push ja mov pop jg add mov inc mov or mov cmc push add add dec imul mov cmc push aaa pop jns mov pusha andl ja loop add aas jp std cmp lock and pop test mov push jb mov negb cmp pushf mov inc push or dec outsb (bad) mov hlt adc pop xchg aam push xchg icebp sub (bad) negl cmp add jnp mov bound sub mov jb mov cmc push cmp jecxz and lret sub (bad) push scas iret lock push je mov clc sbb pop jge shl and xchg push je mov notl cmp lcall jg shl and cmpsb (bad) out sub mov push jno mov add sbb (bad) mov inc mov or insl mov add add adc push je mov clc sbb pop jnp imul imul je mov pusha andl int3 in push das push jo mov repz push jbe mov inc bound cmpsb out push jno mov cmc adc mov pusha andl lret in push das dec jo mov repz push jns mov pop andb mov dec jo mov hlt add mov pop andb popf stc jp sub jmp xchg mov negb cmp pushf mov bound sub mov push jae mov negl cmp sahf mov test xor jbe mov pop jle shl and cmpsl enter dec outsb (bad) mov repnz jbe mov stc sbb pop jge shl and mov je aaa (bad) push mov mov add add ss add in xor jbe mov pop jle shl pop sub mov js mov pop jg shl and mov or repnz stc sbb pop jge mov xchg mov aas mov into cmp lock movsl jecxz push mov pop xchg int inc test xor xchg mov stc sbb pop jge mov insb lea push jae mov testb add pop cmp fwait mov pusha andl lret sub (bad) repz jp mov inc xchg dec insb lea push jb (bad) jns inc insl loop andb mov or dec insl mov pop jns mov pusha andl leave ljmp iret icebp adc push jae mov notb cmp pop jg shl daa dec imul mov repz add adc push jbe mov pop jge mov bound es mov or dec insl xchg mov hlt adc push jbe mov pop jl mov pusha andl lret sub jnp shl and stos int comiss xchg mov hlt adc mov pop jge mov arpl daa dec push or dec outsb (bad) mov repnz aaa pop jns mov inc test add add pop sub mov dec outsl nop mov repnz push je mov negl cmp fwait mov pusha test dec push stos sbb divl pop jg pop mov push jno mov hlt adc mov pop jg shl and lea pop jp mov pusha andl lret sub (bad) repnz push jne mov clc sbb pop jl mov xchg dec insb lea iret lock push jae mov clc sbb pop jnp mov bound daa dec imul mov notb cmp lcall andb gs cmp imull gs rorl inc js in and dec cmpl idivl xchg aam sbb pop jge mov dec imul mov hlt adc mov pop jle mov push or mov add hlt adc mov lret adc cmp clc sbb pop jnp mov popa (bad) mov dec outsl add cmp fwait mov pop andb xchg dec insl mov push je mov negl cmp fwait shl and test dec push lods int push das push jno mov hlt adc push ja mov pop jge mov arpl dec insl mov push je add xchg mov notl cmp fwait popa scas hlt inc mov push jne mov stc sbb pop jge mov test push je mov cli sbb add add mov push je mov clc sbb pop jl mov bound sub (bad) mov repnz cli sbb add inc mov or mov pop int insb xchg std push stos (bad) cmc push aaa pop js mov test stos lret in add add mov repnz push jbe mov pop jl mov bound es push or push jb mov notb cmp lcall jg shl and xchg dec imul jb mov notb cmp fwait mov arpl dec imul mov fs int3 add ja ljmp sbb movb outsb mov mov add add test dec imul xchg mov clc sbb pop jnp mov pusha andl std push aas pusha andl leave ljmp (bad) repz push jbe mov dec rcll fwait decb (bad) negb cmp lcall inc test push xchg in sbb pop jnp mov popa (bad) mov inc mov or dec outsb (bad) mov icebp adc push je mov pop jg add add inc test dec push lods int push xor xchg mov cmc push aaa push js mov pop jle mov push or mov repnz fdivr sbb shl and cmpsb sti pop sahf push pop cwtl aam pop mov stc sbb popa test push pop mov ljmp dec jno mov notb cmp add iret or jae loop push mov xlat push inc jp out data16 (bad) add add mov imul cmp in into and pop mov add jae loope dec (bad) mov repz jge repz xlat or jno fstl add add jmp mov cmp (bad) cmc cs mov mov lret jbe call sub mov arpl dec push stos int3 in push cs jo mov repz push jbe mov pop jge (bad) sub add mov jno mov hlt adc mov pop jge mov arpl dec imul mov pop jge mov xchg add and jle shl and enter jge,pn sbb push mov or (bad) push dec mov pop inc xchg icebp sub jmp mov cmc xor in sub call ss out sub add ficomp cwtl rorb inc cmpb add hlt cmp inc or dec xchg rcll xchg fldl (bad) mov repz shl and push loope lahf add dec xchg inc mov shlb lds sti loopne pop cmp jmp xchg (bad) addr16 pusha leave xor cmpsb adc dec mov test push jl mov test dec insl mov push jbe mov pop test add or dec insb lea divb data16 repz fild and test dec insb lea or mov sti sbb pop test pop mov dec outsl nop mov repnz fdivr sbb pop jl mov arpl daa dec imul mov clc sbb pop jnp mov bound or dec outsl (bad) mov repnz jne mov clc sbb pop jnp mov bound add add dec insb lea push jno mov hlt adc mov pop jge mov bound es push comiss xchg mov hlt adc push js mov pop jg shl and test dec imul mov repnz push js mov pop jle shl and cmpsl enter add xchg mov notb aaa pop jns mov pop jg ret and xchg int3 in push das push jo mov repz pop js mov popa (bad) mov enter mov sbb leave pop cmp pusha xchg lret insb cmpsl out pop js cli das pushfw fcompl (bad) inc cwtl rorb cmp and rorl inc js in push mov (bad) xor mov mov push je mov xchg dec outsl nop mov repz push ja mov pop jle shl and cmpsl (bad) call lea add adc (bad) sbb pop jg shl and xchg dec outsb (bad) mov repnz cli sbb pop jge mov mov adc push jae mov notb cmp fwait mov pusha andl mov repnz push jne mov stc sbb pop jl mov xchg dec outsl nop mov repnz stc sbb pop jge mov cmp movsb (bad) daa dec imul add add push jne mov pop jge mov bound daa dec push add xor xchg mov clc sbb pop jnp mov popa andl (bad) lock push je mov notl cmp lcall andb xchg dec insb lea push jbe mov stc sbb pop jl mov bound es push or dec outsb (bad) scas (bad) icebp adc push je mov clc sbb add pushf shl and test dec imul jno mov hlt adc push ja add popa (bad) mov inc push or push jno mov cmc adc mov loop dec cmpl sbb iret or and mov dec jo mov repz add (bad) adc jmp sub (bad) repnz cli sbb popa (bad) mov dec push add dec outsb (bad) mov negl cmp fwait mov pusha andb data16 dec imul jno mov hlt adc mov pusha andl enter dec insb lea push jb mov cmc push ss js mov pop jg dec test in push das push ja mov pop jle mov arpl dec push stos int3 in or mov xlat clc sbb pop jnp mov add (bad) push aas pop andb push or dec outsb (bad) mov icebp arpl pop pop cwtl into or enter mov dec jge shl and test dec push mov hlt adc mov negl inc bound daa dec push or dec outsb (bad) mov aad pop cmp lcall andb insb aam pop popf loope pop mov outsb (bad) mov repnz cli sbb add inc add add add test dec jb mov notb cmp lcall andl lret sub (bad) repnz stc sbb pop jle shl es push or mov repz push ja mov pop jle shl and xchg xor xchg mov negl cmp lahf shl and cmpsl (bad) call lea push jae mov notb cmp fwait mov sbb pop add mov mov push jb mov negb cmp pushf mov bound sub mov jb add sbb movsl fistp pop xchg aad pop jg shl and cmpsb (bad) call mov jno mov hlt adc mov pop jge mov push or mov repz push jbe mov pop jle mov arpl dec add lods into out wrmsr push jb mov stc sbb pop jl mov bound sub lea push jae mov notb cmp popf mov inc push adc stc sbb pop jl mov bound es push or icebp adc push je mov clc sbb pop jg iret inc mov add jns out push test or test mov into mov add add cmp lds push dec mov or aam push xchg xlat sbb fcomps pop movsl out insl scas lock lock outsb stos lock mov pop pop cwtl fstps pop pushf fistp movsl in jnp or rcll push xchg xlat sbb xor movsb loopne push xchg int cmp scas in daa mov or mov fcoml dec xchg loope pusha sahf jecxz popa lahf loopne popa sahf fistpl pusha pushf xlat adc (bad) rclb xchg aad push mov (bad) cmp loopne push (bad) int inc test incl add add jo ficoml dec mov add inc (bad) ret outsb lods jmp push (bad) iret push dec mov add iret adc fcompl push mov and xchg int3 push inc jl sti xor mov sub iret push aas js divb push cwtl fcoms dec test clc xor cmpsl das popf fstps mov rcrl pop lahf loop cmpsl (bad) push jne mov add inc arpl dec push stos int3 in push das push jo mov repz push ja mov pop jge mov bound daa dec insb lea push jne mov clc sbb pop jnp mov pusha andl lret in or mov cmc adc mov xchg cs outsl nop mov repnz jne mov clc sbb pop jge mov popa (bad) mov inc push or jno mov hlt adc mov pop jle shl and cmpsb (bad) call mov in push das dec jo mov repz push jbe mov pop andb xchg dec outsb mov push je mov negb cmp pushf mov inc xchg dec outsb nop mov repz push jbe mov pop jl mov popa (bad) mov inc mov or mov repnz push jbe mov pop jg shl es push push cs jo mov repnz incl add and andl imul push je mov negl cmp andl (bad) icebp adc push jne mov clc sbb pop jl mov bound sub (bad) mov repnz push jns mov pop jg shl and cmpsb (bad) jmp xchg mov negl cmp sahf mov xchg push jb mov notb cmp lcall jg shl and mov dec insl mov push jae add mov jb mov clc sbb pop jnp mov xchg or (bad) cmc push ss jns mov pop jg shl daa daa dec outsl nop mov repz push jbe mov pop jg shl and cmpsb (bad) call lea push jae mov negb cmp mov inc mov or push je mov negl cmp pushf mov popa add (bad) mov inc mov or dec jo mov negl cmp fwait mov popa andl into out adc push jb mov notl cmp fwait mov pusha andl insb lods jmp mov or popf mov arpl dec imul jae mov notb cmp fwait add loop sub mov push jb mov notb aaa pop jns mov pop andb add add leave jmp sub outsb (bad) mov repnz (bad) pop inc pusha andl int3 in push das push jno mov hlt adc mov pop jge mov arpl dec outsl nop mov repz stc sbb add mov inc imul mov repz push js mov popa (bad) mov inc push push das push jno mov hlt adc mov add add loope and cmpsl lret sub outsb (bad) mov cmc push aaa pop jns mov pop andb xchg dec imul pop xchg lret add pop dec xchg pop push pusha fwait rorb aaa je loop push (bad) (bad) push sti xor fcompl push xchg rclb dec mov or jae cld aas jl adc push je mov clc sbb pop jl mov bound sub dec push lods into out wrmsr push jb mov notb gs lahf shl and xchg dec insl mov push je fwait mov pusha andl lret sub (bad) repz cmp pushf mov popa (bad) mov inc push or mov hlt adc mov pop jle shl and sbb inc jg (bad) cmp cli cmp clc cmp (bad) push jns mov (bad) pop inc popa (bad) movsb (bad) sub mov jb mov cld sbb cmpsb (bad) call lea push je mov clc sbb pop jnp mov bound sub mov ja mov pop jg shl and data16 dec insl mov push jne mov stc sbb pop jge mov test dec outsl nop mov repz mov pop andb add add lea push je mov stc sbb pop jge mov mov or dec outsl nop mov repz push ja mov pop jg shl and xchg dec outsb (bad) mov repnz std and test dec imul jb mov notb aaa pop jns mov pusha andl leave out adc push jae mov notb add pop andb xchg add add add add dec insb lea push jae mov notb aaa pop jns mov arpl dec push lods int push das push jno mov cmc push (bad) (bad) negb cmp fwait mov pusha andl enter push jae mov notb aaa pop jns mov pusha andl enter add xchg mov hlt adc mov pop jle ret in es mov or icebp adc push je mov add (bad) notl cmp pushf mov pusha andl leave jmp xchg mov repz push jbe mov stc sbb pop jl mov popa (bad) mov inc mov pop mov int inc jp in pop xchg loope bound (bad) or xchg (bad) sbb fistpl pop mov (bad) or push push mov add push test sub cmc xor cmp mov or lret (bad) add add pop mov cmc cmp or fldenv push lods out sub clc cmp jge icebp sub lret jle (bad) cmp jmp push divb test lock jnp,pt add sahf ficoml mov or xlat adc lds dec mov add (bad) mov out outsl scas jmp outsl mov xor add ret nop iret adc fcompl arpl cld jl,pt add les dec xchg fcomps pusha sahf fbld test out jae cmc xor sti cmp add push xchg into cmova rcrl arpl idivl jbe (bad) cmp sub add in sub repnz repnz icebp xor clc xor xchg (bad) adc in arpl out push mov aaa jb stc inc cmpl sbb (bad) sbb fcomps lods and in xor in xor mov add pop cwtl xlat and add cmpsb in jo repz add jnp add mov iret or push mov adc ficomp pop cmpsl call xor out xor mov add jle or ret or rorb dec stos jmp xor divb jb add mov (bad) cmp add or cmovge lret adc rcll pop mov loopne pusha popf fsts push xchg iret or xchg adc rcrl pop lcall add add sub xor jle add mov or ficoml pop mov ljmp movl push xchg aad pop fwait xlat adc pop pushf fsts inc test add mov sbb xchg fstps pop sahf fistpl cmpsl in sub cli cmp mov add nop iret or pop pushf in push ljmp mov add sqrtps fistpl fs jmp cmp out and add jp or loopne outsb mov inc xchg or fldenv gs xchg fbld pop loop mov cmp sub mov mov aad mov push pop mov add lret or imul dec xchg xlat and lods repz incl sbb out jbe add ficompl push mov pop pop cmpsb in xor add sbb sbb lret mov push push mov or rorb dec xchg or add add or rclb dec (bad) fstps pop xchg rorl dec (bad) aad pop lahf jmp insb scas in and pushl insb mov (bad) insb mov int inc cmpl (bad) int3 or outsb movsb fcompl push mov or ret incb dec test or mov in sub call wrmsr push jb mov negb cmp pushf mov arpl dec insl mov pop jnp mov bound sub add lods int3 in push das push jb mov notb cmp lcall andl iret lock push je mov stc sbb pop jge mov test dec imul pop jns mov pusha andl (bad) icebp adc cli sbb add inc mov or dec outsl nop mov repz push ja mov pop jg (bad) sub mov jno add mov cmc push aaa pop jns mov enter mov inc imul mov cmc push aaa pop add dec imul mov repz push ja mov pop jge mov arpl dec push lods (bad) repnz push jne mov clc sbb pop jl mov loope jb mov clc sbb pop jnp mov bound daa dec imul xor popf (bad) sub add insb mov push jne mov stc sbb pop jle shl pop sub mov jb mov negb ret and lret sub (bad) repz push js mov pop andb mov or mov negl cmp pushf mov popa (bad) mov inc mov or icebp adc push jbe mov call push push add add insl movsb ficomp push nop add movb pop xchg rorl jl cli xor mov xor mov clc xor lods ljmp cmpsl out push mov cld xor in das insb stos icebp xor fsubrs movsl fstl push (bad) (bad) std cmp scas ljmp xchg jecxz popa popf fcomps xchg rclb dec mov (bad) aas jnp out sub cli pop cltd roll je clc xor lock lret add jno mov pop push mov cli sub cmpsb jecxz arpl sti add add add add (bad) stc sub xchg enter loopne inc js loopne inc jnp loopne inc jp loope dec jl jecxz dec jle out dec mov mov xchg leave cli arpl xchg int3 pushl push mov add ja loop push xchg loop arpl in arpl add add lock push jae mov negl cmp pushf mov popa (bad) mov inc push or push je mov stc sbb pop jl mov bound daa dec imul mov repnz xchg leave pushl jo loope push xchg add cmpsl fistl dec mov add mov or xchg rorl jb jmp imull inc add cli cmpl push xchg aad pop fbld scas repz jge or in jne add movl cmp pop xchg into push cmp mov add add xor add insl mov cmp es lcall inc xchg pop inc test add xchg mov clc sbb popa (bad) movsb (bad) in daa dec imul mov add sbb pop jl mov arpl dec imul jb mov stc sbb pop jge mov test dec insb mov push jae mov notl cmp fwait mov pusha andb push lods int sldt xor xchg mov cmc push aaa pop jns mov pop andb xchg dec insl mov push je mov pop jg ret and int3 in or mov repz push ja mov pop jg shl and xchg push jb mov cmc push aaa push js mov add movsl (bad) out sub lea push jae mov negl cmp pushf mov bound sub outsb (bad) mov icebp adc push jne mov pop jl add in xor call js out das insl lods negl lahf shl and mov repz push ja mov pusha andl int wrmsr push jb mov notb cmp pushf mov arpl dec jo mov hlt adc mov pop andb push or mov cli sbb add inc mov add add push jb mov negl cmp fwait mov popa (bad) mov dec push lods int wrmsr push jb mov negl cmp pushf mov xchg dec outsl (bad) mov xor cwtl mov inc xchg dec outsb (bad) mov repz pop jnp mov arpl push je mov cli sbb add inc xchg dec add fdivr sbb pop jge mov test dec jno add jp mov mov stos lret in or dec outsl nop mov hlt adc mov pop jg shl and lods int push das push jno mov hlt adc mov pop jge mov test dec imul jb mov stc sbb pop jge shl and xchg dec outsb mov push jne mov clc sbb pop jnp mov bound dec outsb popl add mov icebp adc push jne mov stc sbb pop jge mov arpl mov dec jno mov hlt adc mov pop jle ret in es mov or dec outsl (bad) mov repnz jne mov pop jl mov inc mov or insl mov push js mov pop jg ret es imul mov notb cmp lcall jg ret and into out adc push jb mov cmc push aaa jns daa dec insb mov push jb mov cmc push aaa pop js mov bound es push adc push je mov clc sbb pop jge mov arpl dec imul mov repnz cli push inc pusha andl leave jmp lea push je mov (bad) sbb ret and push or add cmp pushf mov xchg dec insl lea push jae mov clc sbb ds jg shl and xchg dec outsl nop mov repz cli sbb loope and xchg dec outsl nop mov repz (bad) sbb (bad) sub mov jo mov hlt adc mov pop jle mov xchg dec insb lea into repnz push jbe mov pop mov mov inc push push das push jb mov notb aaa pop jns mov pop andb imul jb mov negl cmp fwait mov pusha andl mov repnz push jbe mov stc sbb pusha andl int wrmsr push jae mov clc sbb pop jl mov popa (bad) mov inc insb add sub fcoms dec add add add lods out pop xchg iret or cld and test ljmp (bad) repnz (bad) sbb ret and xchg push jne mov sti sbb add inc test dec imul jb mov notb cmp fwait mov pusha test dec insl mov push je mov negl cmp pushf mov popa (bad) mov test and fstpl fwait or pop (bad) cmp movb push fistl dec test sub xchg mov hlt adc mov pop jg shl pop sub mov jb mov pop jg shl and test jmp sub (bad) repnz cli sbb pop jge mov add stos lret jmp xor xchg mov negb cmp pushf mov popa (bad) mov dec imul mov hlt adc mov add add sbb add inc mov or icebp adc push je mov clc sbb pop jge mov bound daa dec imul mov stc sbb pop jl mov bound es push or dec outsb (bad) mov repnz push jne mov clc sbb pop jg shl and cld je mov arpl dec imul mov repz add jmp inc bound cs outsl nop mov repz push jbe mov pop jl mov arpl dec imul dec add lret in or mov hlt adc mov pusha andl pop cwtl aad dec test std cmp loop sub fsqrt sbb pop jge mov arpl dec imul push jno mov hlt adc mov add add loope daa dec imul mov repz push jbe mov pop jge mov arpl dec imul mov clc sbb pop jl mov mov daa fs fstps pop cltd jmp jbe mov pop jg shl and mov push ja mov pop jge mov arpl dec imul mov hlt adc add cwtl mov pop jge ret or dec imul jae mov notb aaa pop jns mov pop jg ret and data16 dec outsb (bad) mov repz pop jnp mov pusha andl leave jmp lea push jae mov cmc push aaa pop js mov pop (bad) mov dec imul mov repnz push jne mov clc sbb pop jnp mov pusha andl add ret and xchg push das dec jo mov repz push jbe mov stc sbb pop jge mov bound es push or dec outsb mov cmp lahf shl and test dec push lods (bad) pop xchg dec insl (bad) mov repz push jbe mov pop jge mov mov add xor xchg mov cmc push aaa push js mov pop jle shl and test add add mov push jo mov negl cmp pushf mov pusha andl leave jmp lea push je mov negl cmp pushf mov xchg dec insb lea push jb mov cmc push ss js mov pop jg shl and test dec imul push jne mov clc sbb pop jnp mov popa (bad) mov inc push or add out and ret imull mov mov add aaa je out mov bound sub mov je les xchg mov pusha andl (bad) hlt adc mov inc xchg dec outsb (bad) mov repnz cli sbb add out adc push jb mov notb cmp fwait mov popa (bad) mov dec imul add add push jno mov hlt adc mov arpl dec insb lea push je mov clc sbb pop jnp mov bound dec imul jp mov bound dec imul je mov stc sbb pop jge mov xchg dec insl mov pop jp mov inc xchg dec outsl nop mov repz push ja mov pop jg mov inc mov or dec jae mov clc sbb pop jl mov inc push or mov cmp and lret sub (bad) repz push jge shl and xchg dec outsb (bad) mov repnz cli sbb add inc test dec insb lea push js mov pop andb push or mov hlt adc push add ja mov pop jg shl and push lods int wrmsr push jb mov notb cmp popf mov test dec insl mov loope add addr16 sub data16 fstl dec xchg movsl fstl push xchg add js in sub ficoml push mov (bad) xor pop pushf fstpl pusha sahf loopne imul jmp lods add cld aaa jb add sub push xchg rcll nop iret adc add (bad) (bad) ds adc fstpl insb movsl fistp pop cltd aam push xchg into push dec mov add inc add push mov rorl xor cmpsl jecxz mov add frstor jo adc stos cli inc cltd or xor inc jnp out pop xchg rorb inc jp divl mov int3 adc rclb dec mov sbb rclb xchg rcll push nop lret test add lahf loope jg (bad) sub mov pop jnp mov arpl sub push jb mov clc sbb pop jl mov arpl dec insb lea push jne mov (bad) and andl sbb pop jl mov inc push or outsl in arpl mov sub adc mov loopne pop mov std xor fcoml push (bad) into adc lcall add add and cltd rorl inc jnp out es cltd (bad) cmove sar ja in daa mov pop outsb mov stc sbb pop jle shl and mov or dec outsb (bad) mov repnz jmp inc arpl dec imul jae mov negl cmp popf mov arpl dec insb lea push js mov xor mov pop jg shl and xchg dec outsl nop mov repz push jbe mov pop jle shl sub lea push je mov clc sbb pop jl mov inc push or mov hlt adc sahf shl sub xchg mov sub out sub lahf xlat adc ret add pushf shl and xchg dec insl mov push je mov negl cmp pushf ret es push or fistp in and sahf add (bad) hlt adc add push js mov pop jg shl and test push jb mov notb aaa pop jns mov pop jg shl and cmpsb (bad) call mov cwtd mov arpl sub (bad) repnz inc jl shl and cmpsl (bad) call lea push jae mov notb cmp fwait mov xchg or dec outsl (bad) mov repnz stc add inc pusha add andl leave ljmp add cmc push aaa pop jl mov xchg dec insl nop mov hlt adc mov pop jge mov bound es push adc push jb mov negl cmp fwait mov pusha andb xchg push (bad) sub fdivr pop inc popa (bad) mov dec outsl (bad) mov repnz stc sbb pop jl mov add add movsb (bad) sub mov push jae mov negl cmp mov inc test dec imul jb mov cmc push ss js mov pop jle shl and test mov push jge mov xchg dec outsb (bad) mov xlat clc sbb pop jge mov test dec insl add ds andb mov or dec jno mov add aam push aaa pop jns mov pop andb imul mov stc sbb pop jle mov xchg dec insb mov push jbe mov pop andb mov adc push jae mov negl cmp pushf mov loope aas popa andl lret sub (bad) repnz jne mov bound daa dec imul mov add (bad) repnz jbe mov pop jle mov arpl dec insl mov push jae mov negl cmp fwait mov pusha andl lods int wrmsr fwait cli pop mov lret cmpb out push mov sti cmp mov or jle idivl (bad) rorl push mov (bad) cmp push outsl mov mov rorb aas jp repnz xlat cmovp movl add add add add mov sub jmp sub aas jg (bad) cmp out pop xchg into pop inc jns out push mov std xor in mov stc sbb pop jge mov xchg dec insl mov push jne mov arpl sub mov jno mov cmc adc push stos xlat clc sbb pop jl mov arpl das push jno mov cmc adc mov pop andl add lret in or mov (bad) sbb pop jle mov mov dec outsl add pop jp mov pusha andl lret jmp sub (bad) repnz jne mov cld sbb shl and xchg dec insb lea push jb mov notb aaa pop jns mov pop andb mov aaa outsl movsl fisttpl inc jbe loope dec test mov add add add add sbb pop jg shl and push or mov repz push ja shl and int3 in push das push jno mov notb cmp pushf mov bound dec insb lea push jae mov negl cmp loop and mov add inc test dec insl mov push jne mov stc sbb pop add sub mov pop jl mov inc mov or add add repnz stc sbb add jmp xor xchg mov cmc push aaa push js mov pop andb xchg dec insl mov push jae mov notl cmp lahf shl and test dec insb lea push jae mov notb cmp lcall andb imul push jne mov stc sbb pop jl mov arpl add add dec imul mov notb aaa pop jns mov pop andl mov jno mov hlt adc mov popa andl mov add cwtl mov pusha mov (bad) mov popa (bad) mov sub mov repz push ja mov pop jg ret es push divps or mov sbb and ret add aam dec mov sti xor imul mov sub (bad) rorb mov add pop cltd (bad) or sub lods in dec mov cli cmp pop xchg lret add jp (bad) cmp hlt xor hlt xor mov inc test or rcll push xchg fcompl fs xor xchg or xchg fstps lods repz add pop pushf ficomp arpl incl iret adc fstps push xchg lret jns out sub fcoml push mov pop inc jl icebp sub mov enter mov add popa pushf (bad) adc sar jno out pusha fadds sbb xchg int inc jle repz out sub mov enter mov loope push xchg int3 pop inc jle repz push mov add sub movsb loopne push nop lret push inc jnp icebp cs pop push xchg aam dec xchg sti ss out pop cwtl rcll dec test in pop xchg rorb cmpl pop xchg rorb (bad) mov out pop xchg rorl dec test jmp cmovp scas ljmp xchg cld aaa jb in es pushf fcoms dec mov (bad) jns,pt lock fcoml push mov add das imul mov loope push nop int3 or lret jl icebp sub fistp push add (bad) (bad) cmp and add add repnz addb hlt sub lret add imul xchg mov bound cs jno mov hlt adc mov pop andb mov or dec outsb (bad) mov repnz push jne mov stc sbb pop andb mov push das push jno mov cmc push aaa pop jns mov pop andb xchg dec insl lea push ja mov pop add add and xchg dec outsb mov push je mov cli sbb pop jge mov xchg dec insl mov push je mov negl cmp fwait mov pusha andl lret in or mov notl cmp add inc xchg dec insb lea add lcall andl cmc push aaa pop jle mov arpl (bad) sub mov dec outsl nop mov repnz clc sbb pop jnp mov popa (bad) mov dec imul jae mov notb cmp lcall andb xchg dec insb lea push jne mov clc sbb pop jnp mov popa andl lret sub outsb (bad) scas (bad) icebp adc push je mov negl cmp lahf shl and test add or add inc push or dec outsb (bad) mov icebp adc push je mov clc sbb pop jnp mov popa movsl sbb xchg out mov xor in sub push lods fdivr sbb pop jg shl and add dec jo mov (bad) aam inc adc inc xchg loope es push lods int wrmsr push jb mov notb cmp fwait mov popa (bad) mov dec imul mov hlt adc mov add movsl (bad) out sub lea push je mov clc sbb pop jl mov arpl dec imul ja mov pop jg shl and data16 dec jo mov cmc push aaa pop jp mov popa (bad) mov dec insl mov push jne mov sti sbb pop jg shl and xchg dec outsl nop mov repz push ja mov pop andb mov into out adc push jae cltd mov pop andb mov or add xchg mov negl cmp pushf mov xchg dec insl mov push jne mov pop jle rclb leave hlt inc lcall mov dec outsl nop mov clc sbb pop jnp mov bound sub mov jb mov notb cmp fwait mov popa (bad) mov dec outsb (bad) mov repnz add add xor jbe mov pop jle shl and cmpsl enter dec insl mov push jbe mov pop jle ret in es push or mov hlt adc mov pop andb mov or dec jo mov arpl adc (bad) sbb shl and add lods int push das push jno mov hlt adc push ja mov inc popa (bad) mov inc imul add add xor xchg mov negl cmp popf mov popa (bad) mov inc push or (bad) lock push jae mov stc sbb pop jl mov popa (bad) mov xor add popa sar inc test dec insb lea push je mov negl ds andb mov push jbe daa arpl sub pop lcall stos fstl dec jle lock inc mov add sahf rorl inc jne loop push (bad) incl mov inc sahf enter dec insl mov sar outsb test push pop nop movl cmp mov out das outsb lods cmc xor je out sub (bad) adc mov fstpl push xchg rclb dec test add outsl stos ljmp adc xor in push nop lret add jno loope push xchg adc mov inc mov sbb xlat adc mov add add sub into add add insl cmpsb loopne dec xchg iret add pop pop nop movl sub lcall xor fistp push (bad) xlat push push xchg (bad) sbb sbb ljmp movsb loope pop mov clc cmp sbb jb icebp xor out imul scas icebp xor call sub hlt xor cmpsb jecxz lods cmc cmp (bad) cmp ret in es imul mov add std push aas pusha andl lret in or mov hlt adc mov pop andb push adc push je mov fdivr pop inc popa (bad) mov dec imul mov cmc push aaa pop js mov pop andb push lods into out adc push jae mov negl cmp pushf mov popa (bad) mov dec imul mov hlt adc mov add inc arpl dec push lods int wrmsr push jb mov (bad) dec stos or and mov dec add mov notb aaa pop jp shl and xchg dec imul push jno mov hlt adc push jbe mov pop jge rcll sbb xchg int dec lods fsqrt sbb add inc test dec imul jb mov cmc push aaa push js mov pop jg shl and add imul add wrmsr push jb mov notb aaa pop jp mov pop andb xchg dec insb lea push js mov pop jle shl and xchg dec imul jb mov notb aaa pop jns mov arpl dec imul mov repz push ja mov pop jge mov test cs jo add mov negl jmp bound add aad popa mov aas ja and add sub adc adc repz lcall mov add pushf call pop rcll inc cmpl inc mov push je mov negl cmp fwait mov popa (bad) test dec outsb mov push je lcall andb data16 dec insb mov push jno mov aam sbb pop jnp mov popa andl lret jmp sub (bad) repz stc sbb pop jl mov sti and test mov sub faddl and test ljmp (bad) icebp adc push jne mov clc sbb pop jl mov add lods into out adc push jae mov notb cmp fwait mov pop andb gs negl cmp pushf mov bound add push daa dec insb lea push je mov clc sbb pop jnp mov bound daa dec imul mov repz push ja mov popa (bad) mov inc mov or push hlt xor dec outsl nop mov repz mov pop jg shl and lea push jae mov notb cmp fwait mov pusha andl leave ljmp (bad) icebp adc add xor xchg mov pop andb xchg dec insb lea push jae mov notb cmp lcall sub fist fcoms add sub ds andb xchg dec insl lea push je mov negl cmp fwait mov test dec imul push jno mov hlt adc push js mov pop jle shl and test add pop sub mov push je mov negl cmp pushf mov pusha addl sub lea push jae mov negl cmp fwait mov arpl dec push stos int3 in or mov repz push jbe mov pop jge mov bound daa inc push mov cmp inc xchg dec insb lea push jb mov notb aaa pop jns mov pop jg shl sub mov xor fsincos sbb cmpsl add clc xor cwtl mov pop jg shl and lret sub fdivr sbb add ljmp (bad) repz push js mov pusha andl int3 in push das push jne mov cli sbb add in or mov fsqrt sbb add inc xchg add leave ljmp aad sbb pop jnp mov bound dec imul jae mov clc sbb pop jl mov arpl dec jo mov cmc push aaa pop jns mov pusha andl int wrmsr push jb mov negl cmp pushf mov arpl dec outsl nop mov hlt add cmp mov data16 dec jno mov notb cmp fwait mov add add inc popa (bad) mov dec outsb (bad) mov repnz sbb (bad) out sub mov push jae mov clc sbb pop jl mov bound sub (bad) repz push ja mov pop jg shl and xchg xor xchg mov notl cmp fwait mov xchg dec outsl nop mov repnz fsincos sbb pop jle shl daa dec imul xchg mov hlt adc mov arpl dec insb lea push je mov clc sbb pop jl mov arpl dec imul ja mov pop jg shl add dec imul je mov clc sbb pop jl mov arpl dec imul ja mov pop jle shl and cmpsl enter dec insl mov push jbe mov add fsqrt sbb add insl lret inc outsl xchg mov push jge shl and cmpsl enter dec insb lea push je mov (bad) sbb shl and xchg push jae mov negb cmp pushf mov popa andl imul jb mov cmc pop aaa pop jns mov test dec imul je mov negl cmp fwait mov pusha andl add add leave ljmp aam push aaa push js mov pop jle shl push daa inc push push cs jo mov repz push jbe mov pop jl mov xchg dec insb lea push jb mov cmc push aaa push js mov pop jg shl and cmpsl enter dec insl xchg mov hlt adc mov pop jle mov arpl dec push stos int3 in or add add add cmp (bad) push test adc aaa jbe call sti das bound mov lock add sub imul sub xor xchg mov clc sbb pop jl mov bound sub mov jb mov cld sbb ret and lret das push jno add pop jle shl and add xchg dec insl mov push jns mov pop andb mov or repnz stc sbb pop jge mov test dec jo mov hlt push aaa pop js mov pop andb mov or dec outsl nop mov repz add iret and jg aam push aaa pop jp mov popa (bad) mov dec imul mov add aam push aaa pop jns mov pusha andl (bad) icebp adc push jne mov stc sbb pop jge mov test dec insb mov push jae mov negl cmp mov inc push or mov hlt adc add jge sbb pusha andl lret sub fdivr sbb pop jge mov test dec insb lea push je add cmp popf mov arpl das push jno mov hlt adc mov pop andb xchg dec outsb (bad) mov icebp adc push jne mov (bad) pop inc xchg dec outsb (bad) mov repnz cli sbb jge mov fs and jl divl je sbb xchg dec insl mov push jne mov stc sbb pop jl mov arpl add add dec push stos int3 in or mov negl cmp fwait mov popa andl leave ljmp mov cmc sbb pop jp mov pusha andl lret in or mov repnz push jne mov negl cmp fwait mov pop andb xchg roll cmp in insl mov xchg inc xchg rcll js mov arpl dec push lods add int wrmsr push jae mov negl cmp pushf mov add (bad) lock push je mov clc sbb pop jl mov arpl sub mov jno shlb addr16 or push jbe mov popa (bad) mov dec imul mov hlt adc mov pop andb xchg push jae mov negl cmp fwait mov pusha andl lret add or dec add xlat clc sbb pop xchg xchg push jae mov negl cmp fwait mov popa (bad) mov dec imul mov cmc push aaa pop jns mov test dec insb lea push jae mov negl cmp popf mov arpl dec imul jae mov inc arpl dec imul je mov clc sbb add pop jl mov bound sub mov jne mov stc sbb pop jl mov arpl dec push lods sti push mov cmp mov popa (bad) mov inc push adc push je mov clc sbb pop jl mov bound daa dec imul xchg mov stc sbb pop jge mov push or mov hlt adc mov pop add add and lret sub (bad) repz push jnp mov popa (bad) mov dec imul aaa outsl mov loope and xchg dec outsl nop mov repnz pop jp mov add (bad) out sub mov dec mov int3 pop inc jl divb insb test xlat sub or mov and pop cmpsl cmc cmp ret add cmpsb out cmpsl ljmp add add je ljmp test jecxz pop xchg rorb inc jnp stc xor loope pop xchg iret cmp mov (bad) pushl jno ficom dec cmpl dec xchg std xor jb in pop xchg int3 adc fistpl test inc xchg out xchg pop imul xchg out (bad) int3 sbb repz in pop xchg int inc jl icebp sub cmpsb ficomp push (bad) add jno loopne push mov cli xor test sbb (bad) sti xor add push (bad) (bad) jb fistl inc jge jmp pusha lahf fcompl push lcall inc cmpl std cmp jmp sbb leave or mov sub pop lahf ficoml outsl test sbb into add and pop inc jp jmp popa fwait aam inc jl lock aad dec cmpl cmovs mov (bad) jb jecxz push (bad) movl push pop xchg rorl dec mov add inc jnp jmp pop push nop leave add jge out es xchg roll sub mov xor mov xor loope pop pushf ficoml dec mov add mov out pop cltd aad push nop int inc jg (bad) cmp movsw in pop xchg iret adc leave add jns divl jo call adc ret add jp out sub fistp dec mov add jbe out das insb test push pop cltd fstpl push nop int3 push cld push mov add aaa jne in sub loop sbb dec mov (bad) cmp hlt xor jecxz popa fwait (bad) adc movl bound mov loope push xchg int inc add cmpsl loope push xchg int inc jns out sub xlat adc sar jbe in es cltd rorb inc (bad) movl push inc jle repnz dec test fcoml push mov std cmp in push xchg iret push aas jns in and cwtl rorl inc jge mov fstl add push mov std aaa jo loop push pop add pop xchg iret or mov sub pop push mov (bad) aaa jno in push (bad) add je ljmp mov sub ficomp inc js ljmp stos out sub repz dec test cmp test dec outsl nop mov repnz fsqrt sbb add inc data16 dec insb xchg mov cmc push aaa push js mov pop jg shl and inc test add xchg mov hlt adc mov pop jle shl sub mov jno mov notb cmp pushf mov popa (bad) mov dec push lods into out adc push jb mov cmc push aaa pop jl mov bound sub mov push ja mov pop jge mov bound daa dec imul mov clc sbb pop jge mov add add movsb (bad) daa dec push stos int3 in or mov repz mov pushf mov fdivrp pop inc popa (bad) mov inc mov or dec outsb (bad) mov icebp adc push je mov clc sbb pop jnp mov popa (bad) mov dec insb lea push jb mov cmc push aaa pop jp mov pop andb dec imul push jno mov hlt adc mov bound sub mov add stos int push xor xchg mov notb cmp lcall andb data16 push jno mov hlt adc mov pop addb (bad) call lea push je mov clc sbb pop jnp mov test dec insb mov push jne mov clc sbb pop jl mov bound es push or dec outsl nop mov notl cmp lcall andb add add inc xchg dec insb lea mov pop mov int3 or test push jae mov notb aaa pop jp mov pop andb test das push jno mov hlt adc mov popa andl mov dec jo mov repz clc sbb pop jnp mov pusha andl int3 in push das dec jo mov hlt add mov add movsb (bad) daa dec imul mov hlt adc mov pusha andb data16 dec insb mov push jno mov notb aaa pop jns mov pop jg shl es push or dec outsb (bad) scas (bad) icebp adc push je mov clc sbb pop jnp mov pusha andl enter dec jo mov repz push jbe mov stc sbb aas mov popa mov (bad) out sub mov jb mov (bad) sbb pop jle shl sub mov push jae mov negl cmp fwait mov bound sub mov push jb mov negl cmp mov inc xchg dec outsb (bad) mov icebp adc push ja mov add test ljmp (bad) repnz jmp inc bound daa dec imul add add dec jo mov repz push ja mov pop andb imul mov stc sbb pop jl mov arpl dec imul je mov clc sbb pop jl mov test dec jo mov hlt adc mov pop andl int comiss xchg mov notb cmp lcall imul (bad) and add add xor xlat adc les cmp loope imul add ja lock (bad) adc mov or les mov sbb in imul inc test or xchg rcrl pop add add pop mov decb rclb bound cmc aaa add pop pop movsl jmp js add pop pushf fistp cmp gs fistl push mov or hlt das insb cmpsl loop add add add rorb inc fwait jmp bound sar jb out pop cltd aam dec test cld cmp call push dec mov (bad) cmp in daa bound les cmp out sub fcoms dec mov (bad) cmp jmp bound ret std cmp call fcompl inc jle repz push (bad) push inc jge hlt das push fistp push nop lret pop inc jl repnz mov add jns out sub loopne push xchg into pop inc jle add xor loopne pop xchg into or hlt xor loopne push xchg int3 pop inc (bad) jmp fistp push mov add imul mov loop pop xchg into or mov pop pop xchg iret or mov in pop xchg rorb cmpl cmovns repnz mov lret jl repnz mov lret test imull cwtl into add outsl test rorl nop add aad outsl xchg mov notb cmp fwait mov pop andb xchg dec insb mov push ja mov inc popa (bad) mov inc mov or outsb (bad) scas (bad) icebp adc push je and popf mov lock pop jge shl es imul mov cmp fsts jg adc mov push jno mov cmc push add imul ss leave icebp adc pop nop mov hlt adc mov pop jle shl and test dec push lods (bad) cmc push aaa pop js mov pop jg shl and data16 dec insb lea push jae mov notl cmp fwait mov test dec imul jae mov notl cmp fwait mov pusha andl leave ljmp aam push aaa pop jns lahf shl and cmpsl enter dec insb lea push je mov negl cmp pushf mov popa (bad) shll pop xchg clc and test dec push lods int push das push jo mov hlt adc push ja mov pop jge mov test cs je mov negl cmp fwait mov (bad) sbb pop jle shl and test dec imul mov repz pop jp mov add pop inc pusha (bad) mov inc xchg dec insb lea push jae mov cmc push aaa pop jns mov pop jle ret in es push or dec outsb (bad) mov repnz clc sbb pop jnp mov popa andl leave ljmp (bad) hlt adc popf mov bound daa dec push or dec jo mov repz stc sbb pop jl shl add inc test dec push lods int3 in push das dec jo mov repz push jbe mov pop jge add pushf ficoml xchg add sub mov push aaa push js mov pop jg shl and test dec imul jno mov hlt adc mov test dec imul mov repnz push jne mov clc sbb pop jnp mov pusha andl add dec imul jb mov cmc push aaa push js mov pop andb xchg dec insb lea push ja mov pop jge mov inc push or dec outsl (bad) mov repnz push jne mov stc sbb pop jl mov bound sub lea push jb mov cmc push ss js mov pop jle mov arpl daa dec imul add add add ds jg shl xchg add stos aam pop cmp pushf mov popa (bad) mov dec push or mov pop ja repnz lcall sbb cmp jle shl and xchg dec outsb (bad) mov repnz sti and test dec insb lea push je mov negl cmp popf mov arpl dec push lods int wrmsr push jb add mov pop jle shl and cmpsl enter xor xchg mov notb cmp lcall andl int3 in adc push jne mov stc sbb pop jge mov xchg dec insl mov push jne mov stc sbb pop jge mov mov push jno xchg mov pop jg shl and cmpsl enter dec outsb (bad) mov push mov cli sbb add inc add xchg cli push xchg dec jo mov cmc push aaa pop jns mov popa (bad) mov or (bad) int outsb xchg mov cmc push aaa pop jns shl and cmpsl (bad) call mov push jb mov cmc push aaa pop jp mov pusha andb xchg push jno mov cmc push ss js mov pop jle shl pop sub mov dec jo mov repz push jbe mov add pop andb xchg dec outsb (bad) scas (bad) icebp adc push je mov clc sbb pop jnp mov popa (bad) mov inc mov push das push jno mov cmc push ss add mov arpl dec imul mov repnz jne mov clc sbb pop andb xchg sub cli pop jae sbb ret and int3 in push das dec jo mov inc cltd (bad) add push daa dec outsl nop mov repz push jbe mov pop jge cld cmp clc xor adc mov push push mov int3 add jo fstl xorb or ja ljmp imul out es cwtl add cmovne in and nop leave pushl inc jge in and pop lcall cmp lock fistp xchg rorb dec test (bad) cmp mov xor mov sub pop xchg rorb add lds xchg rorb cmp lock mov loopne push xchg into or sar jp hlt xor out bound loopne pop xchg aad dec mov add mov daa mov int inc (bad) mov jmp sub fistl push (bad) leave push inc jge hlt xor in sub jecxz pop xchg rorb inc jl repz loope pop xchg iret or cmp daa bound leave add add cmp out sub mov daa arpl int inc cmpl and rorl dec xchg lret pop inc jle hlt das push jecxz pop xchg aam dec test cld aas jge cmc xor hlt xor lcall cmp jae stc ss jmp push push (bad) push inc jge cmc xor in pop cltd fistpl push nop int mov push lcall pop jnp mov scas jmp xchg or jns ljmp addb add add add cld inc mov adc jg inc add xor test push dec jp loopne push mov cld cmp loopne push xchg in dec mov add lret cmpl and lahf fisubl mov fstpl cmp jnp repnz (bad) cmova mov adc (bad) push ds andl lret adc push je mov clc sbb pop jl mov bound add add out sub mov jns mov popa (bad) mov dec imul mov negl cmp pushf mov bound sub (bad) mov repz push ja mov pop jg ret es push push das push jno mov cmc push aaa pop jns mov pusha andl (bad) icebp adc push jne mov cli sbb add inc xchg (bad) push jae mov add aad pop aaa pop jns mov test jo mov hlt adc mov pop jle mov add stos lret jmp sub (bad) icebp adc push je mov inc bound daa dec imul xchg mov negl cmp popf mov popa (bad) mov inc push comiss xchg mov cmc push aaa push js mov pop jle shl and test dec imul jo mov repz push jns mov pop jg shl and cmpsb (bad) call lea push jb mov cmc push ss js mov pop jle mov mov or insl mov push jae mov notb aaa pop jns mov pop andb xchg dec outsl nop mov repnz jne mov clc sbb pop jnp mov (bad) (bad) and andl outsb add (bad) mov icebp adc push je mov clc sbb pop andb dec push lods int wrmsr push jno mov hlt adc popf mov bound daa dec imul mov negl cmp fwait mov popa (bad) mov inc mov or dec insl lea push jae mov notb aaa pop js mov popa (bad) mov dec push stos int3 in or mov repnz fyl2xp1 sbb pop jge add inc bound es mov wrmsr push jno mov hlt adc mov pop jge mov bound daa inc push or dec outsb (bad) scas (bad) hlt adc mov pop jge mov bound es push or dec outsb mov aaa pop jns mov popa (bad) mov inc mov scas iret out adc push stos push jbe mov xchg das add add xchg mov hlt adc push ja mov pop jge ret in and lret sub outsb (bad) scas (bad) icebp adc push je mov negl cmp fwait mov pop andb xchg dec outsl nop mov repnz jne mov clc sbb pop jnp mov pusha andl enter dec insb lea push jbe mov stc sbb pop jl mov bound es mov or add xor xchg mov negl cmp fwait mov arpl dec imul mov repnz jbe mov stc sbb pop jl mov inc xchg dec jo mov hlt adc push ja mov inc bound es mov or add xchg mov negl cmp fwait mov pusha andl int3 in comiss xchg mov hlt adc mov pop add add shl and leave jmp lea push ja mov pop andb mov or dec insl mov push jae mov notb cmp lcall andb push stos int3 in push das push jno mov hlt adc mov pop jg shl and cmpsb enter dec insb lea push jbe mov pop jl mov bound es push add lret sub outsb mov push je mov (bad) sbb (bad) in daa dec push stos int3 in or cwtl mov pop jge mov test cs outsl xchg mov hlt adc mov pusha andl leave jmp xchg mov cmc adc mov pusha andl enter dec jo aad mov fstpl push xchg rorb dec test fdivr push inc add mov inc push or dec outsb (bad) mov repz jmp inc bound es push or mov repnz clc sbb pop jnp mov popa (bad) mov dec insb lea push jb mov notb aaa pop jns mov pop jg shl and cmpsl enter dec insb lea ss jnp mov bound es push icebp adc push add je mov negl cmp fwait mov inc xchg dec insb lea push js mov pop jle shl and test dec imul jno mov hlt adc mov popa (bad) mov inc push or dec outsb (bad) mov repnz push jne mov fs ficoml inc jg icebp sub loope pop xchg int dec mov push ja mov mov and fistl jecxz daa dec push add mov dec jo mov repz push jbe mov pop jge mov imul jb mov notb aaa pop jns mov pusha andl leave ljmp (bad) icebp adc push js sahf mov test dec imul push js mov pop jg shl and add jno mov clc sbb pop jge mov arpl dec push mov push jno mov hlt adc mov pop jle shl and mov jb mov notl cmp fwait mov popa (bad) mov inc push or dec jo mov repz push jbe mov popa (bad) mov inc push or mov repz push ja mov pop jg shl and cmpsb (bad) call or into lock push jne mov stc sbb pop jge add mov test dec insb lea push je mov clc sbb pop jl (bad) in add outsl nop mov repz push jbe mov pop andb dec insb lea push je mov stc sbb inc popa (bad) mov dec insl mov push jne mov stc sbb pop jge mov test dec outsb (bad) mov repnz ja mov pop jg (bad) sub mov jae mov add notb cmp fwait mov popa (bad) mov dec imul mov negl loop and cmpsl enter dec insl mov push jne mov xchg mov notb cmp fwait mov popa (bad) movsb leave ljmp (bad) cmc push aaa pop jns mov pusha andl lret sub (bad) repz push jbe mov bound add (bad) repz add xchg mov pop jg roll or dec imul jae mov negl add pusha andl (bad) lock push jne mov stc sbb pop jge mov xchg dec outsb (bad) mov repz push ja mov bound sub mov push jae mov negl cmp pushf mov arpl sub mov push jne mov pusha andb add add mov dec outsl nop mov hlt adc mov pop andl lret in push xor mov clc sbb pop jge mov test dec insb lea push jne mov stc sbb pop jge shl and stos int3 in push das push jno mov add sbb add inc xchg dec outsb popl mov negl cmp pushf mov bound or push ja mov pop jg add mov inc xchg dec insl mov push jne mov pop jge mov test dec jo mov repz push js mov pusha andl lret in push das push jno mov notb cmp pushf mov push or mov hlt adc mov pusha andl int3 in push das push jno mov cmc pop cmp lahf shl and cmpsl (bad) call add or dec outsb (bad) mov repnz stc sbb pop jge mov bound daa dec imul mov stc sbb pop jge add in es imul mov cmc adc sahf mov arpl dec insb nop mov fdivr sbb pop jge mov xchg dec insl lea push jae mov notl cmp pushf mov popa (bad) mov dec insl (bad) scas (bad) repnz add xor mov clc sbb pop jnp mov popa (bad) mov dec push lods into out wrmsr push jb mov cmc adc mov xchg dec insl (bad) mov repnz cli sbb jle shl and test dec insb mov push jbe mov pop jge mov bound sub mov dec jo mov notb cmp lcall test dec add add scas iret lock push add mov popa (bad) mov dec imul mov pusha andl mov std push aas popa andl mov jb mov cli sbb pop jge mov mov or dec je mov negl cmp popf mov popa (bad) mov inc mov or dec outsb (bad) mov repz push ja mov pop jg shl sub add nop mov repz mov arpl dec insl mov push jae mov clc sbb pop jnp shl and xchg dec insb lea push je mov clc sbb pop jnp mov bound daa dec imul mov clc sbb add inc arpl mov dec outsl nop mov hlt adc mov inc arpl dec outsl xchg mov add pop aaa pop jns sahf shl and cmpsb (bad) call mov jb mov cmc push aaa pop jp mov bound dec insb lea push jb mov cmc adc mov pop jge mov test dec insb lea push ja mov pop jge shl and lret in push xor xchg mov cmc push ss jns mov pop jg shl and xchg add cs jno mov hlt adc push jbe mov pop jge mov arpl dec imul jno mov hlt adc shl and test dec imul pop jns mov pop jg ret in and lret adc push jae mov cli sbb jecxz and dec insb lea push ja mov pop jg shl and lret jmp cs outsl nop mov repz add fdivr pop aas pusha andl lret sub outsb mov push je mov stc sbb add inc arpl dec jno mov hlt push aaa pop jp mov popa (bad) mov dec push lods int wrmsr push jb mov clc sbb xchg idivl mov imull arpl (bad) notb mov push es lock (bad) stc cs xchg fisubr outsl add add cmpsb fimull or jo (bad) or insl mov lods add pop dec test mov and mov mov pop stc sub (bad) stc das bound xchg add push cmp add add insb sahf roll insb popf roll aaa outsb mov lods fmull inc jae loope dec xorl lcall and inc mov cmp imul cmp loop add push mov add outsb movsb fcompl jl int wrmsr push jae mov notb cmp fwait mov pusha andl lret sub outsb (bad) mov repnz pop jnp mov popa (bad) mov inc mov or repnz push ja mov pop jle mov arpl dec insl mov push jae mov notb cmp fwait mov inc xchg dec imul add add mov add and (bad) mov into out adc push jb mov add sbb add inc arpl dec push stos int3 in or mov repz cmp pushf mov pusha andl leave jmp lea push jb mov notl cmp fwait mov pusha test dec push stos int3 in push cs jo mov add sbb pop jl mov arpl dec imul in or mov notb cmp fwait mov bound daa dec imul mov hlt push ss js mov pop jle mov xchg dec insb lea push jb mov cmc push ss js mov pop jle mov arpl daa dec imul mov notl cmp lcall jg cmpsb (bad) call mov push jb mov cmc add aaa push js mov popa andl mov dec outsl nop mov repnz clc sbb pop jl mov bound dec push scas (bad) icebp adc push je mov clc sbb pop jnp mov popa (bad) add dec insl mov push jae mov notb aaa pop jp mov arpl dec push stos int3 in push cs jo mov repz stc sbb pop jl mov add andl mov push jae mov notl cmp lcall andb xchg dec imul jno mov clc sbb pop jnp mov bound sub mov add mov stc sbb pop jl mov popa (bad) mov inc insl mov push je mov negl cmp fwait mov pop andb xchg dec add imul jb mov stc sbb pop jl mov popa (bad) mov inc mov or add xchg mov negl cmp fwait mov pusha andl (bad) icebp adc push je mov negl cmp pushf mov arpl dec push stos int push das push jo mov repz push jbe mov bound es push or lock push je mov sti sbb add add inc arpl sub outsb mov push je mov notb cmp lcall andl lods int comiss xchg mov hlt adc mov popa andl leave jmp lea push jb mov cmc push aaa push js mov pop jle shl daa inc push or dec outsl (bad) mov repz stc sbb pop jge mov inc push add test dec outsl nop mov hlt adc mov arpl dec imul jb mov clc sbb pop jnp mov test dec insb lea push jbe mov pop jge mov xchg dec insb mov push jae mov notl cmp pushf mov mov dec outsb (bad) mov icebp adc push jne mov pop jle shl and test add add or dec outsl (bad) mov repnz push jne mov cld sbb pop jg shl and cmpsl (bad) call mov push jno mov hlt adc push ja mov pop jge mov data16 dec outsb (bad) scas (bad) icebp adc push je mov notb cmp lcall jg add jmp lea push jbe mov pusha andl lret sub (bad) repz mov add in sub mov push js mov pop jg shl and cmpsl enter dec imul jbe mov pop jg shl and test dec outsl xchg mov hlt push aaa pop jns mov pop andl int wrmsr push jb cltd mov pop andb push or dec outsb (bad) mov icebp adc push je mov stc sbb pop jl mov add mov dec imul (bad) sbb add inc arpl dec imul mov repz push jbe pushf mov popa (bad) mov dec jb mov negl cmp ret jecxz and lret sub outsb (bad) mov repnz push ja mov pop jle mov arpl cs jo mov repz push ja mov bound daa dec imul add add push jae mov notb cmp pushf mov data16 dec insl mov push js mov popa andl push or dec add mov clc sbb pop jg shl and cmpsl enter dec insb lea push jae mov clc sbb pop jnp mov popa andl mov ja mov pop jg ret and lret jmp sub roll add add push aaa pop jp mov data16 xor cwtl mov pop andb data16 dec insl mov push js mov pop jge mov arpl dec jo mov notb aaa pop jns mov pop jg shl and xchg dec outsb (bad) mov hlt pop cmp fwait mov mov or push jo mov repz mov pusha (bad) mov dec insb lea push je mov stc sbb add mov dec insb lea push jae mov stc sbb pop jg ret and push stos int rdtsc push je mov notl cmp fwait mov test dec imul jbe mov stc sbb pop jge mov arpl daa dec imul cltd mov xchg andb imul je mov std pop inc bound sub mov pop jns ret daa dec imul mov data16 push jno mov negl cmp popf mov push sysenter push ja mov pop andl (bad) hlt push ss jp mov bound sub lea push jae add popa (bad) movsl (bad) out sub mov push je mov clc sbb add pop jl mov xchg dec insl mov pop jns mov test dec push lods int push das push jno mov repz ss js mov pop andb push stc sbb pop jge mov bound daa dec push scas (bad) repnz stc sbb pop jle shl and cmpsb (bad) call (bad) mov repz pop jns mov popa andl xchg dec outsb (bad) mov icebp adc push jne mov cli sbb pop jl ret and data16 dec imul jno mov cmc pop cmp lcall andb data16 push jno xchg mov stc sbb pop jl mov popa (bad) mov inc imul mov negl cmp fwait mov popa xchg dec insl mov push ja mov pop jg shl es mov or mov negl cmp fwait mov data16 lods int adc push jae mov notb cmp popf mov test dec jb mov cmc push aaa pop jns mov pop andl insl (bad) mov icebp adc push jne mov pop jg shl and lret sub (bad) repnz ja mov mov or mov cld sbb (bad) call add dec imul jae mov clc sbb pop jnp mov popa test dec push nop mov repnz stc sbb pop jge shl and lret sub (bad) hlt adc mov popa andl int3 in push xor xchg mov notb cmp lcall test imul mov negl cmp mov inc mov rdmsr add add mov pusha andb push or mov clc sbb pop jnp mov pusha andl lret in or mov repnz sti sbb pop jle ret and imul push jae mov notb aaa pop jns mov pop jg shl and test dec imul je mov sti sbb pop andb add into out wrmsr push jb add ss js mov pop jg ret in es push lods iret lock push ja mov pop jge mov push or dec outsb (bad) mov icebp adc sti sbb pop jle shl and test dec insl mov push add mov pusha andl leave ljmp iret lock push jb mov cmc push cmp mov bound daa inc push lret cs outsl nop mov repnz push jne mov clc sbb pop jnp mov pusha andl int3 in push das dec jo mov repz push jbe mov stc sbb pop jl mov arpl sub insl mov push ja mov pop jg shl add dec push lods int3 in wrmsr push jno mov hlt adc mov pop jge mov bound xor mov clc sbb pop jl mov add and test dec push lods int wrmsr push jb mov negl cmp fwait mov test dec insl mov cmp lcall andb test dec imul jne mov pop jge mov arpl daa dec push push das push jno mov notl cmp fwait mov bound sub insl mov push je mov negl cmp fwait mov pop andb test dec insl nop mov repz mov popa (bad) movsb (bad) in es push lock push jae mov notb cmp lcall andl into out adc push jae mov notb cmp lcall jg shl and test dec imul push jae mov negl cmp in and leave dec jl mov add add add pop andl enter dec imul js mov pop jle mov arpl dec push stos int3 in or mov hlt adc mov pop jge mov xchg or dec insb lea push jb mov hlt adc mov pop jl mov popa (bad) movsb (bad) daa dec insb lea push jb mov cmc adc add cwtl mov add mov inc mov or dec insl mov push jae mov pop jl mov bound daa inc push or lock push jae mov notb aaa pop jns mov bound es mov or insl mov add lcall andb test dec insb nop mov repz push jbe mov clc sbb add add popf mov popa andl enter dec insl mov push jae mov stc sbb pop jl mov popa andl enter dec insb mov push jno mov hlt adc mov popa (bad) mov inc mov or dec outsb mov push jae mov add sbb shl and xchg dec insb mov push jne mov clc sbb pop add add mov arpl dec imul mov icebp adc push je mov notl cmp mov bound es mov or dec insb mov cmp lcall andl iret lock push jb mov cmc push aaa push js mov pop jge mov test dec imul jbe mov popa andl add add dec insl (bad) scas (bad) icebp adc push jae mov negl cmp fwait mov popa (bad) mov inc push adc push jae mov clc sbb pop jnp mov pusha andb xchg lods int push das dec jo mov repz push js mov arpl dec insb lea push jb mov cmc push ss jp mov out mov in daa dec push lods int3 in push das dec jbe mov pop andb add add inc xchg dec insb mov push jb add pop jle shl and cmpsb (bad) jmp sub (bad) repnz ljmp inc arpl dec push stos int3 in push (bad) sub rorl dec cmpl sbb int inc xchg add jnp repz daa dec imul mov notb cmp fwait mov bound sub nop mov repz push jbe add pop andb mov or dec outsl nop mov repz cmp mov arpl dec outsb (bad) mov repnz sti sbb pop andl lret in or mov hlt adc mov arpl dec push stos int3 in push xor xchg mov notb cmp pushf mov test xor xchg mov notb cmp lcall xchg add or repnz cli sbb add inc xchg dec outsb nop mov hlt adc mov arpl sub mov push jae mov clc sbb pop jl mov arpl dec push lods (bad) repnz ja mov pop andb xchg dec insl mov push jne mov add and andl mov xor jbe mov pop jle shl and mov push xor xchg mov negl cmp popf mov test dec mov dec jno mov hlt adc push jbe mov pop jge mov bound sub mov push je mov negl cmp fwait mov pop andb xchg dec imul jno mov cmc adc mov arpl add add add add imul mov repnz push jne mov pop jge mov bound sub mov push jb mov cmc push cmp lcall andb data16 dec insb mov outsl nop mov notb cmp lcall andb data16 dec imul push jb mov add sbb jge mov dec imul add out comiss xchg mov hlt adc push jbe mov pop jl mov popa test dec imul mov negl cmp lcall andl leave jmp lea push jae mov notb cmp fwait mov test dec imul jno mov cmc push aaa pop js mov pop jle mov arpl dec insb lea adc push je mov notb cmp pushf mov bound es push or icebp adc push jbe mov lcall inc popa (bad) mov dec imul je mov negl cmp fwait mov pusha andl scas iret icebp adc pop jns mov inc test dec imul jb mov cmc push aaa push js mov pop jle mov arpl add icebp adc push je mov notl cmp lcall andl enter dec insl lea push jbe mov stc sbb pop jl mov popa (bad) mov dec push or dec outsb nop mov repnz push ja mov pop jle ret in daa dec imul mov repnz jne mov stc sbb pop jnp mov pusha andl enter dec jo mov repz sti sbb pop jg shl and cmpsb (bad) out sub mov je mov stc sbb add cmpsl enter dec insl mov mov cmc adc mov pop jg ret and xchg dec insb lea push jb mov stc sbb pop jl mov arpl sub xchg mov cmc push cmp mov bound daa dec imul add cmp mov xchg push xor xchg mov hlt adc mov bound sub mov pop js mov pop (bad) mov inc mov or dec outsb nop mov repnz cli sbb pop jl mov xchg dec insl xchg mov notb aaa pop jns mov arpl dec insb mov push jb mov notb aaa pop jns mov and inc mov or aad pop cmp lcall andb xchg dec insb lea push jbe mov popa (bad) mov inc mov or insl mov push jae mov notb aaa pop js mov pop andb insb lea push jae mov negb cmp fwait mov bound daa inc imul mov testb add add cmp popf mov xchg dec outsb (bad) mov icebp adc push je mov negl cmp sahf mov test dec push scas (bad) icebp adc push jne mov negl cmp popf mov popa (bad) mov inc mov or dec insl mov push je mov pusha andl lods into out wrmsr add cwtl mov pop jle mov arpl dec imul add dec outsl xchg mov cmc push aaa pop js mov pop jg shl and test dec outsb mov push je mov negl cmp pushf mov mov push cs jo mov repz push ja mov xchg pop jns mov arpl cs jno mov cli sbb jge mov bound es push or mov hlt adc push ja mov pop addb add add dec imul mov notb cmp lcall andb data16 dec imul push jns mov pop jg rolb pop daa dec imul xchg mov negl cmp fwait mov pusha andb xchg dec outsl (bad) mov icebp adc push jbe mov pop jl mov bound sub lea push jb add pop jl shl and test dec imul push jno mov hlt adc mov pop (bad) mov inc imul mov stc sbb pop jge mov arpl sub mov push jb mov negb cmp fwait mov test dec push lods int push das push jo mov repz push jbe mov pop jle ret sub mov add xor xchg mov stc sbb andb xchg lods int comiss xchg mov add sbb pop jl mov popa (bad) mov dec imul jbe mov pop jle mov push comiss xchg mov notl cmp lcall andl into out rdtsc push jae mov clc sbb pop jnp mov popa andl lret out rdtsc push jae mov notb add aaa pop jp mov bound sub mov jno mov hlt adc mov pop andb test dec push mov repnz jbe mov clc sbb pop jnp mov pusha andl leave ljmp iret out adc push jb mov stc sbb add inc push or dec add mov notb aaa pop jns add xchg add dec insb lea push jns mov pusha andl into out adc push jbe mov arpl sub mov jo mov clc sbb pop jge dec (bad) rorl dec xchg loop mov test dec insb mov push je mov clc sbb pop jl mov imul jno mov cmc sub and xchg movb cmpl xor push jae mov add add negl cmp fwait mov push or dec outsb (bad) scas (bad) icebp adc push jne mov clc sbb pop jl mov bound es push or dec jb mov cmc push aaa pop js mov pop jg ret and scas iret lock push jbe add andl insl xchg mov cmc push ss js mov pop jle shl and test dec push lods int push das push jo add add xor fscale push aas pop andb xchg dec insb lea push jb mov cmc push aaa pop js mov pop andb push or mov repnz push ja mov pop jle mov arpl dec imul mov notb cmp lcall jg shl and cmpsb (bad) call mov jno mov (bad) hlt adc pop jp mov test dec push lods int adc push jbe mov stc sbb pop jge add in daa inc push add xor mov clc push ja or push jns mov pop jg shl and data16 dec insb lea push jne mov clc sbb pop jge mov test dec outsb mov push jne mov clc sbb pop jnp mov bound daa dec imul add add xor xchg mov cmc adc mov popa andl lret sub outsb mov push jae mov negl cmp mov arpl dec outsb nop mov repz push js mov pop jle shl and test dec push stos int3 in or mov cmc sbb jge shl and test dec imul push je mov clc add aas pusha andl add jecxz and scas iret lock push jae mov pop jge mov xchg dec insb lea push jb mov negl cmp pushf mov pusha andl into out adc push jae mov negb cmp popf mov xchg push jb mov negl cmp mov bound sub outsl nop mov hlt adc mov pusha andl int add xor xchg mov cmc pop aaa pop jns mov test dec push stos int3 out adc push jae mov negl cmp lahf mov test dec insb lea push ja mov pop jg ret and (bad) repnz fdivr sbb pusha andb fstpl push mov jmp add mov push je mov negl cmp fwait mov bound daa dec imul xor xchg mov negl cmp fwait mov arpl dec imul jne mov clc sbb pop jl mov bound daa dec push or mov cli sbb pop jg shl and xchg mov push jne mov pop jg shl and cmpsl enter dec outsb xchg mov cmc adc mov pop andb push or dec outsb (bad) mov add add repnz jmp inc arpl cs outsl xchg mov notb cmp popf mov bound sub mov dec jo mov repz cmp jle mov add scas iret lock push jae mov stc sbb pop jl shl and test dec imul ja mov pop andb and (bad) mov repnz push jns jmp sub movsl out jnp or add pop jge mov xchg push jbe mov pusha (bad) mov dec imul mov pop andb imul mov popa (bad) mov inc push wrmsr push jb mov notb cmp pushf mov bound sub mov push ja mov pop andb mov or mov clc sbb cmp mov inc push repnz push js mov dec imul mov notb cmp mov dec imul push jb mov notb cmp sahf shl and mov jb mov notb cmp popf mov xchg push jno mov clc sbb pop jge mov test push je mov sti sbb ret out sub lea push jne xchg mov pop jg shl and lret sub xlat clc sbb add scas (bad) jnp,pt cld inc stos (bad) icebp adc push jne mov clc sbb pop jl mov bound sub xchg mov pop jle ret and lret sub (bad) hlt adc mov bound sub add cmp popf mov dec push lods int adc push jne mov stc sbb pop add add loopne and mov dec outsl nop mov repz pop jl mov mov or mov notb aaa pop jns mov popa (bad) movsb (bad) out sub mov jno mov stc sbb jge mov mov divb mov and xchg int3 add cmovns stc xor bound fistpl push xchg aam dec xchg or pushl js hlt xor stos lock jmp arpl add add mov dec xchg lret add push xchg inc pop (bad) xor push cltd xlat push pop leave cmovp mov mov fistl jnp out and leave add jno jmp fstpl xchg leave add jae loopne push pop cwtl rcll push xchg into or int3 or xchg dec mov inc jnp out daa bound mov sub ficoml rorl dec (bad) mov fist push mov add jl clc aaa jbe add add and je std inc mov add int3 add jns repz daa bound fcompl popa mov enter mov call sbb sub clc cmp mov push aas jnp lock jmp popa cmpsb out pusha pushf aad dec mov add jbe loop dec andl pop push xchg rcll dec mov adc (bad) arpl add inc xchg push je mov clc sbb pop jl mov arpl add add or dec imul jb mov notb aaa pop jnp mov in pop pop cli xor rolb jae,pt in pop (bad) (bad) cld xor xlat adc call cld sbb ret jecxz and leave out adc push jbe mov cli sbb jge shl and cmpsb (bad) out sub lea push jae pop lods in dec test (bad) adc into or xor add daa bound rolb cmp add scas in pop mov fcomps pusha popf fcompl push mov fstps pop cwtl (bad) adc rolb cmp lods ljmp test cld cmp mov loop jns loopne push xchg into or mov loope push mov icebp das insb cmpsl out imul into or inc jle sbb mov hlt xor push mov stc xor fistl aaa insb movsl ficoml dec test sub scas repz add jne cli cmp sbb mov iret or stos ficom dec jg cmc sub lret addr16 (bad) adc (bad) sbb pop jg shl and cmpsb (bad) call mov push jae mov negl cmp mov inc xchg dec add mov hlt adc popf mov arpl dec push lods int3 in push das push jo mov negl cmp fwait mov popa andl test ljmp iret lock push jae mov clc sbb pop jl mov xchg dec insb mov push jae mov stc sbb jg shl and leave jmp das dec jo mov repz push jbe mov popa (bad) mov dec imul jae mov notb cmp fwait mov bound sub lea push jbe mov pop andl int3 in add push cs jno mov hlt adc mov popa (bad) movsb (bad) daa dec imul mov clc sbb pop jnp mov inc mov push xor ja mov pop andb mov or mov negb cmp jge mov mov push xchg int jne,pt or mov hlt adc push jns mov popa andl aam adc mov pusha (bad) add mov dec push lods iret lock sti sbb pop jle shl and data16 jb mov notb cmp lcall test dec outsb (bad) mov repnz push jne or sbb pop jge shl sub mov jo mov cmc push aaa pop jnp mov pusha andl lret sub insl mov pop jns mov pop jg shl and test (bad) out sub dec jno mov hlt adc mov inc xchg dec outsb mov push js mov pop andb xchg dec imul js mov pop jg ret and push stos int3 in comiss xchg mov cmc push aaa pop jns mov xchg dec jo mov cmc push aaa push js mov pop jle ret in daa inc push lods int3 in adc push je mov add sbb pop jle shl and xchg mov adc inc test ficomp pop mov sahf adc jnp,pt lock and or mov sub iret or mov out sub rorl dec xchg fistp mov cld aaa jp add (bad) loopne aaa pop jp mov add test dec outsb add cmp popf mov push or mov cmc adc add push js mov pusha andl lret sub (bad) hlt adc mov mov dec imul jae mov negl cmp pushf mov bound dec push lods int wrmsr push jb mov pop jge mov test dec insl (bad) mov repz push js mov pop andb xchg in and pop nop (bad) (bad) cmp add cmove aaa jns incb lds dec mov sbb frstor arpl stc cmp std inc (bad) lret or in pop xchg lds jge stc xor rolb aaa insb mov stos repz add pushf loopne insb mov mov and insl test pop jns mov pusha andl lret sub outsb (bad) mov repnz push jne mov stc sbb pop jl mov data16 dec jo mov add add adc push ja mov pop jle shl and test dec imul jb mov push daa dec imul mov hlt adc mov pop jg shl and xchg dec insl mov pop jns mov pop andb xchg dec insl mov push jbe mov pop jle shl and mov dec jo mov add adc push ja mov pop jg shl and xchg xor xchg mov add sbb (bad) sub mov jno mov hlt adc mov pop jg shl and xchg dec outsb nop mov repnz pop jp mov bound sub mov push jno mov cmc pop aaa pop jns mov bound sub mov push jne mov clc add sbb pop jl mov arpl sub mov push je mov clc sub test dec outsl nop mov repz push js mov pop andb mov or dec jo mov hlt adc mov arpl dec push lods int wrmsr push jb mov negl cmp fwait mov popa (bad) movsb (bad) add (bad) repz mov dec push lods add out wrmsr push jb mov stc sbb pop jl mov arpl sub mov jno mov cmc sbb pop jge mov arpl dec imul push je mov clc sbb pop jnp mov popa andl push adc push je mov negl cmp pushf mov bound sub lea push jne mov clc sbb pop jl mov mov or add sub (bad) repz push ja mov pop jg shl and int xor (bad) sbb ret jecxz sub lea push jae mov negl cmp fwait mov xchg dec insb lea push je fwait mov in pop add enter cmpsl fistp push nop movl sub roll inc jp in es cwtl iret add test mov (bad) cld cmp stos loopne dec mov add ret cld xor imul mov jecxz pop nop (bad) std aaa jno call or cmpl daa bound mov and iret pop aas je icebp sub xlat adc push mov add cmp fist dec xchg loope outsl mov stc cmp ret test or int movsw fstpl aaa pop jns mov pop andb push adc push je mov add (bad) notl cmp lcall andb test dec imul jb mov add sbb (bad) mov sub scas iret out adc push jb mov cmc push aaa push js mov pop jle shl and test dec push stos (bad) icebp adc push je mov negl cmp fwait mov pusha andl enter dec imul jno mov hlt adc mov add fdivrp pop inc popa andl jg (bad) hlt adc mov pop jle shl mov mov push or mov cmc adc mov pop jle shl and test dec push stos int3 in or mov notb cmp lcall jle shl and andl mov dec insl mov push je mov notb cmp popa andl add ret in and scas into out wrmsr push jb mov cmc adc mov pop jge mov bound and int3 in push cs jo mov repnz jne mov negl cmp lcall andb test dec imul mov cmc push aaa pop js mov pop jge mov bound es mov or lock push jns jmp add sub outsb (bad) mov repnz (bad) ret std dec (bad) into pop inc js loop mov push jae std cmp rep movb out cmp popf (bad) in daa dec push stos int3 in or mov repz sar jae repz outsl nop mov repz in xor or push jno mov cmc push cmp add or dec push lods int3 in add xor fyl2xp1 sbb pop jl mov arpl aad push aaa pop jns mov arpl add test dec imul push jno mov hlt adc push ja mov pop test or cmp ds jg std aas jnp and fwait mov xor lcall cltd fbld cmpsb in popa xchg rorb inc jnp hlt xor jmp add jae jmp arpl leave push inc jge jmp push xchg iret or ret cli xor std cmp xor cld cmp adc iret maxps sbb add loop data16 push pop iret adc cli dec mov aas jge cmp dec js mov pop jg shl and test push jno mov hlt adc and add pop jle shl and data16 sbb add dec imul aas (bad) rorl inc jle jnp,pt or mov adc xchg inc xchg cmp leave cmp add in (bad) fsubrs fistpl push enter add jle xor add add add inc mov inc sbb mov inc xchg aas xchg add dec sar mov ds outsl mov inc mov jb sub dec fsts cmp repz loopne dec mov loopne dec jg call jmp bound clc inc test adc fcoms mov cli aaa jb in sub test rolb jne out push mov cld xor rolb cmp in pop popf aad cmp gs ficoml add je loopne pop xchg rorb inc add xor add dec xchg add jp movl inc jl sti cmp in sub in pop pushf sub out cs mov cmp and ficomp dec mov enter sub and or test das imul xchg (bad) and adc xchg loope fcomps xchg loopne outsl stos in mov adc enter mov out addr16 pop xchg aam mov sub fwait aam pusha mov xchg add pop xchg into pop dec lahf enter dec outsb (bad) mov repz push ja mov pop jg (bad) call lea push je mov clc sbb pop jnp mov arpl dec imul jb mov cmc push cmp mov clc sbb pop jl mov bound sub jno jno,pn notb pop dec xorb add add out sub mov jae mov notl cmp lcall andl lret in push das push jb mov cmc push cmp popf mov arpl daa dec imul mov repz push jbe mov pop jg shl and stos add repz push ja mov pop jle mov arpl sub lea push jb mov notb cmp add pop jns mov arpl sub insl mov push je mov negl cmp fwait mov pusha andl lret sub insl xchg mov cmc adc mov pop jle shl and mov or fwait add aas add mov bound dec jo mov negl cmp pushf mov arpl dec push stos int3 in push das push jo mov hlt adc mov pop andb imul jae mov negl cmp pushf mov bound sub mov push jb mov negb cmp add in sub mov push jno mov notb cmp pushf mov popa (bad) mov inc push or dec outsl xchg mov clc sbb pop jl mov arpl dec insb lea push jne mov stc sbb pop jle shl add add and mov push jae mov negl cmp popf mov arpl dec imul jb lcall andb mov adc push jae mov negl cmp pushf mov bound xlat clc sbb pop jnp mov bound daa dec push mov repnz (bad) sbb pop jg shl and leave ljmp (bad) repnz push jne mov add stc sbb pop jge mov mov or add xchg mov stc sbb pop jl mov arpl dec imul jne mov stc sbb pop jge ret in es push push xor xchg mov clc sbb pop jl mov test dec insb lea push je mov clc sbb shl and data16 dec outsb (bad) mov repnz push ja mov pop jg shl add add dec outsb (bad) scas (bad) icebp adc loopne and test dec imul jne mov clc sbb and mov or dec outsl xchg mov repz push ja mov fs daa mov inc jp in sub lock fsqrt sbb sahf lock ljmp or mov cmp movsb (bad) daa dec push or xor xchg mov pop jge mov bound sub add imul mov cmc push ss js mov pop jge mov bound mov dec jne mov pop jle mov arpl dec outsl nop mov repnz jne mov clc sbb mov dec outsb (bad) mov icebp adc push jne mov clc sbb pop add es insb mov push je mov clc sbb pop jnp mov popa (bad) mov inc push or add add (bad) repnz jne mov pusha (bad) rclb mov adc ljmp push fwait stc cmp loop push xchg rolb cmp fstl inc jge call out and enter test adc jecxz dec (bad) mov sbb add push dec cmpl movsb fcoml dec jle jmp cli arpl mov push push xchg std xor test adc aas jb fist dec jg call add (bad) clc das popfw rolb outsb mov mov xor out pusha lcall mov adc push jbe mov stc sbb pop jge mov xchg movsb stc add repz rorb inc jle in and fsubrs push jbe mov stc sbb pop jl mov popa (bad) mov inc xchg dec insb lea push ja mov pop jge mov bound daa inc push or dec insl mov push jae mov negb cmp loope and cmpsb (bad) out sub mov jmp push push (bad) add ja stc push jl shl and test push je mov negl cmp pushf mov bound daa dec imul mov cmc push aaa pop jns mov arpl dec push lods int wrmsr push jb mov notb cmp pushf mov bound add out sub mov push jae mov inc (bad) mov lock push je mov clc sbb pop jnp mov bound daa dec imul mov hlt sbb loope and leave jmp sub (bad) repz push jbe mov pop jle shl and test dec imul push jbe mov pop jle mov test xor mov stc sbb pop jge mov arpl dec outsb (bad) scas (bad) icebp adc push jne mov clc sbb pop jge mov xchg dec insl mov push jne mov stc sbb pop andb mov or dec outsl xchg mov cmp ret add (bad) cmc adc mov pop jle shl and test push jno add pop jle shl and test dec imul add add push pop mov sahf mov test push je mov test dec imul jb mov hlt adc mov pop jl mov mov or insl mov push jb mov notb aaa pop jns mov inc test dec push lods int push das dec jo mov negl cmp fwait mov pop andb test dec imul add add das push jo mov repz push ja mov pusha andl ficoml push (bad) in dec insl mov push je mov negl cmp pushf mov pusha andl iret lock push add mov pop jg shl and cmpsb (bad) call mov jno mov repz push jbe mov adc add lods in das xchg int3 out rdtsc push mov push jae mov negl add pop jnp mov arpl dec imul js mov pop jg shl and xchg dec insl mov cmp pushf mov popa (bad) mov inc imul push jb mov cmc push ss js mov pop andb xchg dec insl lea push jae mov sti sbb add xchg aam inc jge repz xchg add dec test ljmp (bad) icebp adc push je mov notb inc bound es push icebp inc mov and popf mov bound es mov or insl mov push js mov pop jle mov sbb sub mov bound es sbb xchg dec insl mov pop jnp mov popa (bad) mov dec imul add ss js mov inc test dec insb nop mov repz push ja mov pop jg shl and xchg dec outsb (bad) scas (bad) icebp adc push jbe mov stc sbb pop jge mov push push das push jno mov hlt adc mov pop jg shl and cmpsl (bad) call lea push js mov pop jg shl and xchg lods into out adc push jb add jp mov popa (bad) mov dec push lods int adc (bad) sbb pop jg shl and xchg dec insb lea push je mov cli sbb loope xchg or dec xorl adc mov sub ficomp push nop iret or adc xchg or add or mov int3 push cmp pop xchg rorb inc jl out sub add add add add dec test fistp dec (bad) mov and sub cmp loope push xchg lret or int push xchg aam mov pop andb xchg dec insl mov push je mov clc push aas pusha andl lret sub add negl cmp pushf mov popa (bad) mov std push nop aam jo mov xchg dec imul cmp pushf mov (bad) pop inc pusha andl leave ljmp iret out adc push js mov pop jle shl and test dec imul mov repnz jne mov clc add aas pusha andl int push das push jno mov hlt pop aaa pop jns mov pop andb xchg dec insl lea pop jns mov pop jg ret and data16 add or dec insb mov push jno mov hlt adc mov pop jl ret in es mov or dec outsl (bad) mov repnz push je mov (bad) pop inc popa (bad) mov inc mov or dec outsb (bad) mov icebp push aaa push js mov pop jg ret in and lret test dec mov dec imul jae or ret cld xor outsb movsb xlat or jl in and movl dec xchg add add cmp in push mov imulb pushf rorb ja,pt in daa pop xchg iret add push mov (bad) cmp loopne pop xchg int mov ret push loope popa xchg lret ja in and int3 pop dec mov add inc sbb test dec insl mov push jbe mov pop jl mov bound daa dec imul mov negl cmp fwait mov pusha andl add ret jecxz sub adc (bad) outsb stos loopne push mov add jb ficoml inc cmpb sub out das insl mov lret pop inc js icebp sub rorb inc js ljmp stos icebp das outsb stos lock in sub call sub into or jae loop pop pushf ficoml xchg cld cmp stc aaa jno loop ja loop pop xchg lret or rolb jb fstl add repnz in data16 loop pop xchg aad pop push xchg (bad) adc mov rcpps enter mov in daa pop xchg rorb inc jge in and mov mov sbb mov sbb mov sbb (bad) mov sbb (bad) mov pop push test mov ret pop xchg int3 add inc jne fist jg pop cmp rolb or jo xlat or mov or mov and into or cmp xchg or incl mov pop pop xchg roll add inc nop call or jg out and cwtl aad dec mov pushl pop xchg int aas xchg fistl (bad) mov and xchg leave (bad) cmp add xor mov sub fcoml pop xchg rcll pop popf rorl cmp stos out pop xchg lret add sub repnz cmpsb in xor mov sub fcoml dec mov add ss lahf fcoms dec cmpb sbb rclb push lcall pop cltd rorl inc jge cld cmp in es cwtl iret add add add out push mov in sub rorb aas jno ficomp push (bad) iret adc movb dec (bad) leave adc into cmp stos lret in or fdivrs jl std xor mov sub mov jb mov notb cmp fwait mov xchg dec insl mov push ja mov pusha andl lret sub outsb (bad) mov repnz jmp inc popa (bad) mov dec imul add add adc push jne mov stc sbb pop jl mov arpl dec push lods int adc fsqrt sbb jge shl and xchg dec insl mov push je mov clc sbb pop jl mov bound sub scas iret lock push je mov stc sbb pop jge shl jo divb imul je mov clc sbb pop add sub insl mov xor mov stc sbb pop jl mov inc mov or repnz mov bound daa dec imul mov cmc push aaa pop js mov pop jg shl and xchg push jae mov clc sbb pop jl mov arpl loop push xchg out fs fsts inc jp repnz roll cmp push cltd loope push add add mov out sub aam inc js in push mov or mov stc cmp icebp xor add lds aas ja out and fcomps pop pushf ficomp pop lcall pop fcompl push cltd fcoms cmp cmpsl ljmp loop sub ficoml mov sti xor fistpl push xchg fcomps push mov add (bad) roll inc xchg (bad) cli xor (bad) push inc test jmp pop xchg lret add jb loop push (bad) (bad) (bad) xor pop nop lret push inc js ljmp mov std cmp and fcoms (bad) enter sar jbe inc xchg add mov sub push xchg iret add adc fistp dec mov add jg hlt xor jmp xor inc jge cmc cmp dec cmpl push xchg call pushf pop inc jle out daa pusha xchg fcomps pusha mov rorb inc add cmp jecxz push add mov out pop cltd aam dec mov sti cmp call and loope pop xchg rorb push nop aad dec (bad) sar insb mov test cmovp test loopne popa mov into add inc cmpb and mov (bad) hlt and and mov sbb in dec jge loopne inc jbe ficomp push mov clc sub add iret lock push je mov negl loop and mov or icebp adc push add mov popa (bad) mov inc imul mov negl cmp popf mov bound daa push (bad) adc test lret sub outsb (bad) mov icebp adc push jne mov (bad) pop inc pusha andl lret in or mov repnz stc sbb pop jl mov bound daa dec insb lea out adc push add mov pop jg shl and cmpsb (bad) out sub mov push jbe mov pop andb imul mov repz push jbe mov pop jle shl and test dec push lods into out rdpmc push jbe mov stc sbb add inc arpl dec insb lea ss ja mov pop jg shl and stos int3 add push cs jo mov cmc push ss js mov pop jg shl and xchg dec insl lea push jae mov negb cmp mov arpl dec push mov inc xchg dec outsl nop mov repz mov pusha test dec imul aaa pop jns mov pop andb xchg dec add mov cmc push aaa pop js mov add and test dec push lods int3 in push das push jno mov hlt adc mov pop andb mov or dec jb mov cmc push aaa pop jns mov pusha andl leave ljmp mov notb cmp lcall andb imul mov cmc push aaa push js mov pop andl leave ljmp (bad) repnz xor mov data16 dec insb nop mov repz push jbe mov pop jl mov bound sub mov push jne mov stc sbb pop jge add movl pop inc pusha andl lret jmp sub mov stc sbb pop jl ret in daa inc push or dec outsb (bad) mov icebp adc push je mov clc sbb pop jnp mov pusha andl add push jo mov repz push ja mov pop jge mov arpl dec imul mov repz push ja mov pop andb xchg dec jo mov repz push jbe mov pop mov jo mov repz push jbe mov pop andb jge mov bound es push or dec outsb nop mov repz add add sbb pop andb xchg dec insb lea aaa pop jns mov pop andb xchg xor xchg mov cld sbb ret push and mov push jb mov notb aaa pop jns mov imul mov repnz pop jl mov popa (bad) mov inc push sbb pop jle shl and test ljmp add add js mov bound dec imul mov repnz flds inc xchg dec jo mov repz cmp lcall (bad) mov inc mov or lock push jae mov mulb call mov inc xchg dec outsl nop mov repnz pop jnp mov pusha andl enter or dec insb cmpsl add in push xor xchg mov notl cmp pushf mov popa (bad) mov inc xchg or pop jns mov pop jg roll cmp mov arpl dec imul mov repz push jbe mov pop add es mov comiss xchg mov hlt adc mov pop jge mov bound es jnp mov (bad) push aas pusha andl int comiss xchg mov hlt adc mov pop jg shl and test jmp mov push jae mov pop jg shl and test dec push add push jbe mov stc sbb pop jge shl and lret adc push js mov pop jle (bad) in daa dec imul mov clc sbb pop jl mov add add and cmpsb (bad) sbb int inc mov push mov cld arpl pop icebp mov dec xorb jo decb jecxz es push icebp adc add ljmp (bad) repnz cli sbb add ljmp (bad) repnz pop jp mov popa test push lods int adc push jae mov negl cmp popf mov add inc arpl dec push mov repz scas (bad) icebp sub mov dec imul cwtl mov pop jg shl and mov push jbe mov inc arpl dec insb (bad) mov repnz cld sbb (bad) in sub mov mov push xor xchg mov cmc push dec outsb nop mov repz ja mov adc mov fiaddl sti sbb pop jg shl and mov push js mov pop jg shl and xchg dec insb lea push jb mov negl cmp popf mov xchg dec insb lea push jae mov notb aaa pop jns mov pop jg shl and cmpsb (bad) out sub mov jbe mov pop jge mov xchg or dec insl mov mov testb add pop cmp lcall jg shl and mov xor xchg mov add inc data16 push jb mov cmc push aaa push js mov pop jg shl and test push jb mov or mov cmc adc mov pop jle ror mov mov negl cmp pushf mov dec outsb (bad) mov repz push ja mov pop jle shl and test add add lea push je mov clc sbb xchg mov sti sbb pop jg shl and xchg dec outsb (bad) mov icebp adc push jbe mov pop jge mov test dec jo mov hlt adc (bad) call cmovae fstl inc ja jmp pop xchg (bad) jae add push xchg int push mov es xchg (bad) std xor mov sbb add or test fistl (bad) pushl mov (bad) xor xchg loop dec mov sti push mov cmovne fcoml popf (bad) push push mov aaa jp divb je adc or rclb push int3 sbb sti das arpl fistpl push add out insb lods in pop lcall xchg sbb pop andb xchg or icebp adc push xchg mov notb aaa pop jp mov pop andb xchg add add dec insl mov push je mov negl cmp fwait mov arpl dec imul mov ret push cmp mov add mov push jae mov negl cmp loop and mov mov hlt adc push ja mov pop jg shl and cmpsb (bad) call lea push jae mov pop jg shl and cmpsb (bad) call mov out comiss xchg mov hlt adc mov pop andb push stos add repnz cli sbb pop jge mov test dec insb lea push jne mov clc sbb pop jg shl and xchg dec insb lea push jp inc xorl jmp mov push jne mov stc sbb pop andl insb add cmp pushf mov popa (bad) add add dec imul insl test dec jo mov hlt adc pop jg shl and cmpsb (bad) call mov push jb mov notb aaa pop jns mov pop jg shl and stos lret in or add mov push xchg cs insl scas repz mov or pop lahf in fwait call pop pushf fcomps nop fistpl pop popf in imul jge add add add repnz mov adc out insb mov cmp add sbb adc movsb jmp insb lods lock add (bad) push push xchg fisubrl imul push xchg fstps fs add int3 cvtdq2ps pop dec xchg fstpl fs add cmp in imul adc out jo stc cmp inc mov sbb movsl in cmp incb into adc movsl out jno clc aas add dec xchg flds push imul sbb in xor pop dec xchg (bad) push pop aam push mov sub repnz add lret xchg xlat pop data16 out cmp inc (bad) rcll push popf in jae pop arpl xor add rclb jns incl int pop cmpsl sub sub je incl add adc xlat push lds jge pushf adc insb mov cmp (bad) js add add std inc xchg push pop mov idivb jp add (bad) rcrb arpl push push cwtl fstpl bound inc xchg or cltd frstor gs cmp or iret adc loop jo idivl jp pop dec (bad) rcll jae cld inc or push xchg aad pop movsb jmp jp add pop sahf loopne imul dec xchg ficompl movsb in xor add rcrb bound or pop arpl xor stos add out xor dec fnstcw jge test push dec lret nop rcll jp add fdivs mov je,pn pop xchg aad pop sahf sbb das jne incb int3 or xchg fcomps pop mov sbb fisub lods out xor adc xchg icebp ss push pusha cmpsl add or fistl frstor imul mov adc mov adc xchg fisubrl insb scas and repz jp add xchg add add fstps les push lds (bad) rcll pop lahf call cmp inc mov sub adc or (bad) xor in jo hlt xor ret ss or xchg fstpt lds inc xchg fdivs jnp or ljmp jecxz mov cmp add mov inc mov dec mov adc inc xorb pop xchg or shrb xchg inc mov xor cmpb data16 mov loope lcall push jno push into adc rclb pop movsb call jnp call pop push lcall cmp inc jge xor adc sbb lds jg and rorl mov pop inc add das test mov test movsl fstl push (bad) add push push cwtl fiaddl (bad) sbb out cmp sub hlt xor (bad) jae idivb jnp add cmp lret js add or call aam push (bad) enter stos loopne push test push pusha mov popa aad xchg fmuls rcll adc cmp xchg xlat sbb push xchg push arpl iret outsb or sbb cmp jne xor inc stc aas mov insl mov jb incb lret adc fisub mov sbb in xor mov sbb popa movsb out outsl mov inc test adc frstor arpl dec mov inc test push push cwtl (bad) sbb pop dec mov adc out jno xor push xchg xlat sbb jl push jnp push enter or (bad) push popa cmpsb add cmp or fistpl scas sbb lods stc inc test or ljmp sti inc xchg adc ficompl arpl push xchg ficompl arpl test xor add mov pop bound or sbb test or sbb cmpsb jmp mov daa addr16 sahf jecxz push idivl add pop mov xor mov adc and daa imul or jb xor inc test or push cmp pop dec nop aad pop mov sti inc xchg sbb sbb jmp dec xchg ficompl bound cmp daa mov adc incl inc mov pop pusha ret xlat pop shlb jb in das add lds dec xchg or lcall pop dec mov fbld stos cmc jo sub xor lahf out mov add or iret sbb es (bad) or cli cmp push lock pop inc xchg aad (bad) call aaa jp adc sub stos sub repz (bad) pop roll mov push lds sbb aaa jl push dec xchg inc test xor leave or (bad) sbb sub mov xchg adc xchg or pop or push xchg (bad) xchg xlat sbb icebp cmpsl in imul rcrb test and adc in insl mov inc rolb xchg xlat sbb sbb es arpl xor shlb fwait in (bad) int3 pop pop das je and test pop xchg stc ds sbb ljmp add mov add lods hlt xor xchg loop fcomps rcrl pop mov xor ja or (bad) push pop pushf fsubl data16 icebp xor nop rclb xchg (bad) xor cmc cmp adc or or xor sbb ljmp jge cmp push dec lea dec (bad) aam bound jno xor ret (bad) outsb mov cmp inc (bad) aad pop mov sub or (bad) pop test imul adc sbb mov add xlat pop (bad) mov cmp repnz add das xorl fnstsw jge sub mov popa lahf out enter jb incb mov cmp sub cmc sub inc add in es add mov cmp cs xchg roll in mov inc or pop fwait aad dec test cmp das movsl push dec cwtl aad dec mov push dec test and mov std inc xchg or pop mov cli aaa jae add add mov sti xor out push add jmp jno in jo in push fstps js repz repnz jo divl out scas loop push enter daa pop xchg or xchg push xchg icebp and out popa xchg enter xchg ret adc mov ret pop mov hlt sub (bad) repz dec jg loop dec add jmp sbb xchg call pop lahf (bad) and movsl out dec cmpl add or sub hlt and stos cli das test xorb inc js fist dec lcall ss imul (bad) cli sub xchg in push xchg fisubrl jle and testb hlt cmp in outsl movsb add push out bound lods loop data16 add sub mov dec xorb sbb in push mov idivl mov sbb (bad) adc or repnz enter add (bad) xor call mov icebp es xchg lret imul fisubr mov or inc jle (bad) rclb dec cwtl fbld insb mov adc mov and test fildl sbb and mov stc sub nop enter jmp out and jge cli arpl mov (bad) or mov rclb mov adc push lahf (bad) or (bad) idivb jnp in js add push cmp cmpsb (bad) pop pop cli sub cs stos loopne dec jle repz fldenv push mov adc mov sub fsts pop sahf fcomps push mov sub outsb test arpl jg cmc das imul sar jno testb add jae jmp cmp in pop pop adc out jns lock scas and cwtl inc mov or test or xlat push add leave and jae adc and cltd frstor add xor jb xor dec mov adc pop inc jg jmp add addr16 and push mov add insb cmpsb fistl inc xorb clc jns,pn adc jnp lock icebp inc nop in inc int3 xor ss iret add xchg enter xchg les push mov mov and and mov add push xchg xlat punpckldq add and imulb js jmp push mov sbb (bad) jne or aas jbe in push mov stc inc lods add inc cmpb test addl fdivr push aas popa (bad) mov dec push lods int adc push jae mov negl cmp popf mov imul jp mov popa (bad) mov dec imul mov cmc push cmp pop jg shl and mov or push jae mov negl cmp pop jl mov xchg dec jo mov hlt adc pusha mov (bad) pop inc bound cs jo mov notb cmp pushf mov bound sub (bad) hlt adc mov popa andl nop mov hlt adc mov pusha (bad) mov dec imul mov sub lea push je mov clc sbb pusha andl lods int wrmsr push jno mov cmc push aaa pop jp mov pusha andl lret in or mov stc sbb pop jge mov test dec insb lea push jae mov clc sbb pop jl mov dec push lods int sysenter push ja mov pop andb imul mov negl cmp pushf mov arpl dec outsb (bad) mov negl cmp add add bound sub outsb (bad) mov hlt push insb lea push jne mov clc sbb pop jnp mov push or dec outsl nop mov repz push jbe mov pop jg ret and scas into lock push jae mov notb cmp mov inc xchg xor out sub sub push sub lea push jne mov clc sbb pop jl mov push push das push jno mov hlt adc mov pop jle mov arpl dec imul xchg mov std sbb ret and xchg dec outsl (bad) mov icebp adc clc sbb pop jge mov arpl daa dec insb lea push jae mov notb cmp lcall andb imul mov repnz fdivr data16 add add xor xchg mov notb cmp lcall jle ret and xchg dec insb add cmp fwait mov test xchg fcoms inc cmpb ret in es push fwait rorl mov xor push nop (bad) ja out popa mov or dec insl mov push je mov negl cmp fwait mov bound sub mov pop add add fdivrp and (bad) mov inc mov or dec outsl nop mov repnz push jne mov clc sbb pop jnp mov popa xchg dec insb lea push jae mov notb aaa pop js mov pop jle shl and xchg dec insb lea push ja mov (bad) xor cwtl mov pop jg shl and xchg dec insl mov add lcall add add test dec jo mov hlt adc push ja mov pop jle shl and cmpsl enter push jno mov cmpsl out popf std push jns mov pop jg ret and data16 dec imul jno mov hlt adc mov pop jge ret add or dec insb lea push js mov pop jle shl and cmpsb (bad) out sub mov jo mov repz add add pop jp mov pusha andl leave ljmp iret lock push jae mov negl cmp pushf mov popa xchg dec insl mov push jne mov clc sbb pop jnp mov popa (bad) mov inc push stos int3 in or add mov test dec insb lea push je mov stc sbb pop jge mov arpl dec push lods into out adc xor (bad) sbb add lret sub cli pop rclb push mov pop pop jl mov arpl push jo mov add sbb pop jge mov test dec push lods int comiss xchg mov hlt adc push ja mov pop jge (bad) sub mov dec outsl nop mov hlt adc mov pusha andb xchg dec outsb (bad) mov add add push cmp lcall andb xchg dec jno mov cmc push cmp mov arpl dec insl xchg mov (bad) sbb pop andb (bad) sbb shl and xchg dec outsb (bad) mov repnz push jbe cmp hlt jo,pn in sub and andl mov push je mov inc nop lret add cmpsl (bad) cmc push ss js mov sbb andl mov mov repnz jne mov clc sbb pop jnp mov arpl dec imul dec jo mov negl cmp fwait mov pusha andb mov or dec insb lea push jb mov cmc push ss js mov popa (bad) mov inc xchg dec insb mov push jno mov cmc adc mov pop jle mov add add mov add mov sti sbb add inc test push rcrl js mov pop jle mov arpl dec outsb (bad) mov icebp adc push je mov notl cmp lcall andb xchg or dec insb lret sbb pop xchg lret add adc add or xchg push jle adc cmpl xor cmp ljmp cmp aad dec mov pop jge mov bound daa dec imul xor cld cmp jmp add xchg dec outsb mov lahf or push inc jg sti imul dec imul mov pop jge mov inc push or dec outsb (bad) mov icebp adc push je mov negl cmp fwait mov add out mov (bad) repz ja jne,pt add inc arpl dec push lods int3 in comiss xchg mov hlt adc mov pop jge mov imul mov repnz add fwait mov pusha andb xchg dec insb lea push jne add xchg push push js mov pop jle shl and test dec push lods int3 in push das dec jo mov add add adc push jbe mov arpl dec imul mov repnz mov cmc push aaa push js mov pop jle mov imul mov (bad) negl cmp pushf mov pusha (bad) mov cli xor pcmpgtw arpl sti jg inc sahf (bad) in sub mov dec jo mov repnz clc sbb pop jnp mov add add mov inc imul jb mov cmc push aaa push js mov inc bound es push or lock push jbe mov std push ds andb test dec push lods int3 in push cs jo mov repz push jbe mov pop jge mov xchg or dec insl mov push jb mov cmc push ss js mov pop jle shl and test dec insb (bad) sub stos out popa lret hlt adc mov inc test dec imul jb mov notb cmp lcall xchg dec add dec push lods int push insl lds ret add jae fist push mov stc xor lods jecxz push xchg enter sahf rorl jg repnz iret add jbe out push (bad) leave add push mov or sar js xor ds addb mov inc mov adc push js mov pop andb dec insb lea push je mov clc sbb pop jl mov arpl dec outsb (bad) mov repnz sti sbb pop jle shl and idivl jno loop jg (bad) sub mov push jno mov cli sbb add inc xchg dec insl mov push jbe mov pop jge mov add and cmpsl enter dec jbe mov rclb imul mov negl cmp pushf mov bound sub lea push ja mov pusha andl cltd mov pop jg shl and mov or icebp adc push jne mov bound daa dec imul sahf fcompl sahf aam inc jnp out es xchg lret add cmp push xchg rcll dec mov add push xchg fstl push (bad) into or jmp outsb stos loop pop lods loope dec (bad) mov sub pop cmp lcall mov dec outsl nop mov repnz clc sbb mov je xor inc bound es mov adc push jae mov negl cmp fwait mov pop andb test dec imul add add push das dec jo mov hlt adc mov popa (bad) mov inc mov or dec outsb (bad) mov icebp adc push je mov negl cmp pushf mov pusha andl int3 in adc push jae mov clc sbb pop jp mov add test jmp lea push je mov notl cmp lahf shl and cmpsl enter dec outsl nop mov notb cmp pushf or lahf fcoms dec xchg (bad) cmp fistp dec xchg sti cmp ljmp xchg fldenv xchg int3 add (bad) sub ss cli xor scas iret lock push je mov clc sbb pop andl lea push jne mov pop jg shl and xchg dec outsb (bad) mov repnz jmp inc bound sub mov jno mov cmc push aaa pop jns mov bound (bad) sub mov jbe mov pop jg shl and push push das push jno mov notb cmp add inc push adc push js mov arpl dec push lods int wrmsr push jb mov insl mov (bad) hlt adc push ja mov pop andb data16 push jne mov stc sbb pop jge mov push or mov repz add (bad) sbb ret sub pushl cmc xor (bad) push inc jp cld cmp sbb mov aam aas jne hlt xor out ss cli inc xchg pop dec cwtl fcomps data16 jmp jbe cld cmp into cmovg in bound mov clc xor sti cmp lock add fcoms pop mov fsubs push push pop cltd jecxz imul fcoms pop mov add pusha add add rclb jno clc inc add push xchg xlat sbb loop insl mov cmp rolb mov adc insb scas out xor add cmp mov cmp mov sbb jmp ja divl jb loopne pop mov fsubl arpl jmp jae std cmp add rorl mov orps lock add lret push movsl pop gs icebp xor mov cmp les mov loop imul inc mov rcpps repz mov jge,pt or rcll pop pushf fisub jp std cmp ret add pop popf ficomp imul inc test pop dec (bad) int pop lcall insb mov cs mov cmp stc inc cmpb dec xchg add and in imul inc mov aaa jle or ret mov pop inc cmpl sub mov cmp les dec mov pop pop pushf loop js sti inc test push dec xchg fcoms pop mov divb jp add (bad) adc fcompl imul cmpb jl push push xchg rclb pop mov out je,pn clc cmp add push xchg fisub mov std inc add adc fisub imul jl add into or pop xchg lret nop fstps cltd fisubl data16 in add pop xchg rcll pop fwait loop insb movsb fistp xchg lret outsl movsl ficomp push mov inc mov inc mov or mov es lcall mov push daa dec imul push jbe add addr16 out jl mov popa (bad) mov test pop jg shl and test dec imul mov clc sbb pop jnp mov pusha andl (bad) call mov add int push das push jo mov repz push jbe mov popa (bad) mov inc push ss add stos (bad) icebp adc push je mov notl cmp lcall jg shl and mov dec jo mov repz clc sbb pop jl mov popa (bad) mov inc xchg dec outsb mov sti sbb pop jle shl and cmpsl (bad) call mov push jae mov add (bad) negl cmp pushf mov test add xchg mov notb aaa pop jns mov pusha andl enter dec imul jno mov cmc push aaa pop jge mov arpl sub scas into out adc push jb mov notb cmp lcall jg shl and cmpsb (bad) ljmp (bad) repz push js mov pop jle shl and xchg add or dec imul je mov clc sbb pop jg or adc lret pop aas jg inc jle repnz icebp adc push js mov pop andb xchg jno mov pop jg shl and xchg (bad) push dec xorb stc xor iret pop cmp test (bad) stc arpl scas out pop xchg add adc (bad) (bad) (bad) cmp repnz push push mov or test cmp jns mov pop andb jae mov negl cmp pushf mov arpl sub outsb (bad) mov repnz push jbe adc ret in es push adc push jne mov pop jg shl and leave ljmp mov jb mov notb cmp popf mov push lods int wrmsr push jae mov negl cmp popf mov test add add xchg mov negb cmp mov xchg push jne mov add jmp sub outsb mov push je mov clc sbb pop jnp mov bound xor mov negl cmp (bad) mov dec imul mov repz push ja pop xchg lret nop mov negl cmp mov inc xchg dec outsl nop mov repnz (bad) sbb add add add mov sbb andl mov push jne mov clc sbb pop jp mov pop andl leave ljmp iret lock movsb repnz insl mov pop jl mov popa (bad) mov inc push or dec outsl nop mov notb cmp jle shl and cmpsl lret cs jae mov notb cmp fwait mov arpl dec push lods int sbb add add and cmpsb (bad) jmp lea push jne mov pop andb push lock push jne mov pop jge mov bound es push adc push je mov notl cmp fwait mov popa (bad) mov dec push stos int3 in or mov negb cmp fwait mov popa mov dec outsb (bad) scas (bad) icebp adc push je mov negl cmp sahf shl and add add xchg dec outsb (bad) mov hlt adc mov mov sub jbe,pt ljmp popf (bad) adc loop dec xchg cmp in jp mov bound xor xchg mov cmc pop cmp pushf mov test dec imul jae mov sub jbe mov xchg dec jo mov hlt adc mov inc xchg test jmp sub jmp lods add mov cli sbb pop jge shl sub mov push jae mov notb cmp popf mov test dec push stos int3 out push das push jno mov notb cmp popf mov bound push jno mov cmc push cmp ficoml dec out (bad) (bad) jmp cs jno mov cmc push aaa pop jns mov xchg dec outsb (bad) mov icebp adc push (bad) adc ret cld xor sub dec insb lea push jb mov notb aaa pop jle shl and cmpsl (bad) call lea push jae mov clc sbb pop jnp mov arpl xor imul mov fistp push xchg lret add (bad) adc mov sahf rorl jg repz cwtl rolb cmp push mov enter lods jecxz push test and rorb dec mov add jnp lock push loopne pop xchg iret or mov loop pop xchg rorl push xchg fcoml push xchg iret or ret cld cmp out sub mov aam push xchg iret or xchg push dec mov and xlat adc mov ficompl pop xchg (bad) adc mov repnz loop pop lcall dec mov cld ss clc ss mov lret sbb test sub mov (bad) repz xchg int3 add jno pop addr16 insb rorl pushf aad push mov add imul lret in or mov notb cmp pushf ret and lret cs jo mov cmc pop jb adc pop jnp mov bound sub mov push jb mov cli sbb out sub mov push jne mov stc sbb pop jg shl and mov dec jo mov repz pop jl mov test dec insl mov push jne add mov pop jle shl and pop push xchg iret add jno loop pop xchg aam inc ja jecxz dec xchg or mov dec insl mov push je mov negl cmp add sub (bad) sub xlat adc es xchg int3 add insl test rcll dec xchg divl outsl cmpsl in sub mov jb,pt in pusha cwtl into push jae,pt in (bad) (bad) or shll pop xchg iret or enter roll mov dec fadds add sbb ret jbe ljmp jnp daa pop jl mov mov jno mov (bad) sbb ret and leave ljmp (bad) repz stc sbb pop jg ret sub mov je mov negl cmp fwait mov pusha andl lret in or mov cmc jae clc cmp push xchg fistpl xchg out dec outsl nop mov repz push jbe mov add fdivr sbb pop jnp mov pusha andl add add adc jl mov bound scas in sub loopne and test adc pop jp mov pop andb data16 push jb mov cmc push aaa pop js mov pop jg shl and cmpsb (bad) call mov jno mov clc sbb pop jnp mov mov scas loop js add add and fdivr pop inc popa andl lret sub outsb (bad) mov repnz pop jnp mov bound daa dec push or dec outsl nop mov repnz stc sbb add inc test dec outsb (bad) mov repnz push jne mov clc sbb pop jge or push ja mov pop jge mov xchg pop cmp pushf mov arpl sub add imul mov repnz push jne mov clc sbb pop jnp mov bound sub add mov cmc pop cmp fwait mov popa (bad) mov inc push or mov notb cmp lahf shl and cmpsb (bad) call mov mov notb aaa pop jns mov lods in sub xlat push dec xchg (bad) sbb leave ljmp (bad) icebp adc push je mov add negl cmp fwait mov pusha andb xchg dec outsb (bad) mov icebp adc pop jns mov pop andb xchg dec insl mov push je mov clc sbb pop jnp mov pusha (bad) cmpsb (bad) jb ret sub mov jae mov negl cmp fwait mov bound daa dec imul mov sti sbb pop jg shl and lret sub (bad) repz push js mov lret sub loop push lock ficompl popa lcall inc cmpb add insl mov mov adc (bad) sbb enter mov test dec insb lea pop jnp mov mov sti ss cmpsb loopne push xchg divl push fistl dec mov add js push dec cmpl inc jg in and xchg int3 ds cmp add cld inc mov pop pop movsb loope push mov (bad) xor dec test cmc sub push mov add insl cmpsl jmp add add cmp add lcall inc popa (bad) mov inc xchg or dec insl lea push jb mov cmc push aaa pop jle shl and test dec push lods int wrmsr push jno mov cmc adc mov pop jle shl and test dec outsb (bad) mov icebp adc push add xlat clc sbb pop jnp add loop and data16 dec imul jb mov cmc push ss jge mov arpl sub mov dec outsl nop mov repnz ja mov pop jg shl and cmpsb lret in or dec outsl xchg mov hlt adc mov cs outsl nop mov repnz push jne mov clc sbb pop jnp mov pusha andl (bad) icebp add add cmp jge mov test dec push stos int3 in or mov repnz push jne mov clc sbb pop cmp loop and cmpsb (bad) call mov jb mov cmc push cmp lcall andb mov jo mov cmc push aaa pop jns mov pop jg add out sub mov dec outsl (bad) mov repnz (bad) push aas pusha andl add add lret sub insl mov push jae mov cmc pop cmp fwait mov pop andb imul mov repz push jbe mov stc sbb pop jl mov popa andl int3 out wrmsr push jno mov negl cmp fwait mov call jb mov cmc push cmp fwait mov pusha andb xchg dec push lods int3 repnz add add pop jl mov popa (bad) mov inc xchg dec insl lea push jae pop jo mov bound sub mov jno mov notb cmp add inc xchg dec insl mov push jnp mov popa (bad) mov dec imul mov hlt adc mov pop andb push adc push je add xchg mov clc sbb pop jge mov arpl sub mov push jb mov notb cmp lcall test dec imul js mov popa andl mov dec outsl nop mov hlt adc push jbe mov cmc push aaa pop jns mov popa andl mov push je mov stc sbb pop jle shl and mov adc add mov stc sbb add inc xchg dec outsl nop mov add sbb pop jge push js mov bound cs outsl nop mov repnz mov pop (bad) movsb (bad) sub mov dec jb mov cmc push aaa push js mov pop andb imul jb mov negb cmp fwait mov pusha andb xchg dec insl mov push jae mov add cli sbb add inc arpl adc push jae mov cli push ds andb mov or dec outsb (bad) mov repnz aaa pop jp mov pop andb xchg dec imul je mov negl adc pop jp mov xchg dec insl mov push jae mov negl cmp fwait mov pusha addl sub mov push jae xchg mov pop jg shl and test dec imul dec outsb mov push jae mov cmc push aaa pop js adc test ljmp iret lock push je mov negl cmp fwait mov pusha andb xchg dec imul ja mov pop jge mov inc add iret lock push jb mov notb aaa pop jns mov popa (bad) mov add in sub mov repnz push jne mov stc sbb pop jl shl and xchg dec outsb mov push jne mov cli sbb pop jg (bad) in es imul je mov notb cmp fwait mov std and cmpsl (bad) call jb mov notb cmp fwait shl and lret jmp sub (bad) repnz cli sbb add inc xchg dec outsb mov add add pop jns mov pusha andl loopne and cmpsb enter dec outsl nop mov jge ret and lret sub xlat clc sbb pop jl mov test add jne mov clc sbb add inc test dec imul jbe mov stc sbb pop jl shl and test dec imul push jno mov hlt adc add jns mov test dec imul jne mov clc sbb pop jl mov test dec add mov cmc push aaa pop jp ret es mov or movb je repz out push lods into out wrmsr push jb mov cmc push aaa push js mov pop xchg mov repz push jbe mov pop jge mov (bad) negl cmp fwait mov pusha andl add sbb imulb lret inc push or icebp adc push jae mov notb cmp pop add daa inc push or dec outsb (bad) mov icebp adc push jp mov pop andb test dec push stos int3 in or mov repnz push jne mov negl cmp fwait mov xchg dec imul jno mov repz push jbe mov pop jl mov add add inc add stos lret in or fsqrt sbb jge mov shrl dec jo mov repnz clc sbb pop jnp mov pusha andl (bad) icebp adc push je mov stc sbb pop jl mov popa (bad) mov inc push or dec outsl (bad) mov repnz push je mov dec (bad) and andl mov push jb mov notb cmp pop add dec insb add add xor mov stc push aas pusha andl lret sub (bad) repz push ja mov pusha andl lret in or mov stc sbb pop jge mov arpl dec push lods int adc push jae mov negl cmp pushf mov arpl mov js mov pop andb mov or dec jo mov hlt adc mov add (bad) pop inc popa (bad) mov inc push adc xchg in push jae mov notb cmp fwait mov popa (bad) mov dec imul mov mull ficomp insb test daa mov mov push jb mov cmc push aaa pop jns mov add test icebp es pushf or comiss xchg mov cmc push ss js mov pop jle shl and test dec add stos int3 in push cs jo mov repz jp mov arpl dec push stos int3 in or mov repnz push jne mov clc sbb pop jnp mov pusha addl sub (bad) icebp adc push je mov negl cmp pushf mov pusha andl (bad) call mov je mov notl cmp pop xchg ficomp dec xchg (bad) repz push jbe mov pop jg shl and xchg dec jb mov notb aaa pop jns mov pop jg shl and cmpsb (bad) call mov inc add nop fcoms fdivr sbb pop jg (bad) call mov jno adc (bad) (bad) jp,pt call or mov fstl push loope push mov add jb fistp push xchg rcll push xchg rorl push mov add xchg add or incb int3 or leave (bad) cmp pop cmp pop cltd rcll add or imull push nop int3 or lret test (bad) cmp out bound enter jecxz mov fisubl imul sti xor stos loopne dec test jecxz push xchg es mov cmpsl in outsb mov ret add je out popa pushf (bad) push inc jnp in push xchg lret xchg and insl mov add push jbe mov pop jle shl and cmpsl into lock push je mov negl cmp pushf mov bound repnz push jne mov stc sbb pop jl mov bound sub outsb (bad) mov icebp adc push jne mov stc sbb pop jl mov inc mov or (bad) icebp adc cmp fwait mov arpl mov das push jno mov hlt adc push ja mov pop jle add mov bound daa inc push or dec jae mov notl cmp lcall jg shl and xchg dec insb lea push jb mov notb cmp lcall andl push or dec outsb (bad) mov icebp adc push je mov notb cmp lcall jg shl and mov dec outsl (bad) mov icebp adc push je mov notl cmp fwait mov add add push aas pusha andl leave ljmp (bad) repz push jbe mov stc sbb pop jl dec ja mov pusha andl scas iret out adc push jb mov testl mov dec insb mov push jae mov notb aaa pop jns mov pop andb push or dec outsb (bad) mov icebp adc xor xchg mov stc sbb pop jge mov mov sbb add mov rorl and lcall dec xchg std cmp ss in sub out jno,pn out and popa lahf fcoms outsl scas in and mov (bad) cmp loop push mov std xor push xchg stc xor sahf aam inc jge inc jl icebp and mov pop inc xchg or int dec xchg (bad) adc int3 or aad push xchg rorb pop mov out daa cmpsb jmp jae add add push xchg fcomps movsl out outsl mov xor clc aas add sbb fisub arpl out addr16 cwtl fdivrl pop jg shl and data16 dec jo mov hlt adc ret and lret sub (bad) repz push ja mov pop jg shl and xchg dec outsb (bad) mov repz pop jnp mov arpl dec imul add repz push ja mov pop jg shl and xchg push jne mov stc sbb pop jge shl and test dec insb lea push jae mov notb cmp fwait mov popa andl push lods int push das push jo mov repz push ja mov pop jg rolb pop sub mov dec outsl nop mov testl mov inc test dec push add add dec outsl (bad) mov icebp adc push je mov clc sbb pop jp mov test dec imul mov icebp adc push je mov notb cmp lcall jle shl and xchg dec outsb mov push jae mov notb aaa pop js mov pop jle mov arpl push jbe mov stc push aas pop andb xchg or mov add aad pop cmp lcall andl mov and xchg int3 add outsb movsl fcoml xchg clc test push jae mov negl cmp or scas out jo add inc push lods into out wrmsr push ja mov add movsb (bad) in daa dec push or dec outsb (bad) mov icebp adc push je mov negl cmp pushf mov popa (bad) mov dec insb mov push jb mov cmc push aaa push js cltd mov pop jle shl and xchg dec insb lea push jbe mov stc sbb pop jge mov bound sub mov dec jo mov notb aaa pop jns mov pop jg (bad) in daa dec imul mov cmc adc mov pop jg shrl mov lods into out adc push jb mov negb loop and xchg dec insb lea add add lock push jae mov negl cmp sahf mov test cs jo mov clc sbb pop jnp mov inc iretw and mov pop jge mov bound daa dec push or dec outsl nop mov clc sbb pop jnp mov popa (bad) mov inc push or dec outsl nop mov repnz push jne mov clc sbb pop jnp mov test dec insb lea push jb add add aaa push js mov pop jg shl and cmpsb (bad) call (bad) mov repnz push jne mov clc sbb pop jnp mov pusha andl lret sub insl mov push mov mov leave xor lret cs jo mov hlt adc push ja mov pop jl mov popa (bad) mov inc mov out adc mov pop jge mov add inc xchg dec insb lea push jno mov hlt adc push jbe xor mov negb loop and cmpsl enter dec insb lea push jae mov notb aaa pop jns mov pop andb mov push jno mov hlt adc mov pop jle mov arpl dec imul mov cmc pop aaa pop jns mov pop jg shl add add inc test dec push lods int comiss xchg mov hlt adc mov pusha andl leave ljmp iret lock push jae mov notb aaa pop jns xor push jae mov aas mov sbb pop andl dec outsl (bad) mov repz jne mov add push ds andb test dec push stos int3 in or mov cmc push aaa pop jns mov pop jg roll loop and test dec push add mov repz push jbe mov pop jge mov push or dec outsb (bad) scas (bad) icebp adc push jne mov clc sbb pop jl mov popa (bad) mov dec imul mov clc sbb pop jnp mov popa andl leave ljmp (bad) icebp adc push jne mov clc sbb pop jnp mov test dec imul add out wrmsr push jno mov cmc adc mov pop jg shl and cmpsl enter dec jo mov hlt add cmp jge mov arpl add mov in daa dec imul mov hlt adc mov test dec push stos int3 in or mov repnz jne mov clc sbb pop jle aaa jbe call rdtsc push jne call mov negl cmp pop jnp mov bound sub mov jno mov cmc adc mov arpl sub (bad) mov repnz stc sbb pop jge mov arpl dec insb lea push je mov pusha andl lret sub (bad) repnz push ja mov pop jle shl and cmpsl enter push jno mov cmc push aaa add add add add add inc test dec imul mov hlt adc mov pop jg and stos repnz stos int3 in inc cltd fnstsw js mov bound sub mov jb mov notb cmp fwait mov pusha andl (bad) repnz cli sbb add inc xchg dec insl mov out comiss xchg mov stc sbb pop jl mov add add mov inc xchg dec insb mov push jb mov cmc push aaa pop js mov bound daa inc push or dec outsl nop mov repnz cli sbb add inc arpl dec push stos (bad) icebp adc push je mov negl cmp add inc data16 dec insl lea ss js mov pop jge mov test dec imul jb mov cmc adc notl packuswb out xchg push aas pusha andl (bad) hlt adc mov pop jge mov arpl dec imul mov repz push ja mov popa (bad) mov inc xchg test push jb mov cmc adc mov pop jle mov test push jno mov add cmc push aaa push js mov pop jle shl and test dec imul mov repz cmp lcall (bad) mov dec add scas iret lock push jae mov notb cmp add inc xchg dec imul push jbe mov stc sbb pop jl mov movsl repnz jmp js icebp xor dec jns mov xchg aad (bad) fcoms pop cmpsb in addb cmpsl enter dec insb lea push je mov clc dec mov andl push or (bad) add mov data16 fistp xchg rorl dec lods (bad) cmc push ss js mov pop jg shl and xchg dec outsl (bad) mov repz add inc test dec imul je mov negl cmp fwait mov popa (bad) mov inc push adc push add (bad) negl cmp jmp outsl lods repz add cs jo mov repz push ja add bound lret xchg mov pop jg shl and xchg dec insl mov push jae mov negl cmp fwait mov pusha andl into out adc push jae mov notb cmp lcall andl lret sub sarl cltd (bad) cmc push add push js mov pop jle shl and xchg dec insl mov push je mov clc sbb pop jnp mov xchg or outsb mov push je mov clc sbb pop jnp mov popa (bad) mov inc push or dec outsb xchg mov cmc push cmp lcall andb xchg xor xchg mov hlt adc mov inc bound sub insb lea push jb mov cmc push ss jns mov pop jg ret movsl cmc addb daa pusha sahf fsts dec cmpl (bad) divl imul or scas jmp pop xchg iret push aas js in and lret jle lock test rcrb pop xchg enter mov into or mov and xchg rcll dec test in and icebp es (bad) lret add cmpl (bad) std xor push fstl dec jg ljmp push xchg mov lock clc sub stc sub xchg vmovaps mov (bad) cli das fs int ss rolb xor aaa push aad jb,pt fcoml add mov push push cmpl icebp sub xchg add add jb xlat push inc jns jecxz dec xorl out and mov (bad) (bad) xor ficoml pop nop ret pop pop (bad) xor adc xor xlat or sbb xchg or mov and ret clc das fs rorb je,pt in dec xorb add push dec (bad) mov push xchg leave (bad) ss cmpsb (bad) inc jge jmp imulb pop xchg (bad) cld xor xlat or jne fcoml dec lret and (bad) stc sub xchg enter pushf aam cmp movsb (bad) inc jbe ficom inc jp loop dec jle in dec jg call call jmp push test add add pop xchg (bad) std xor leave pushl fs lret insl lahf aad cmp movsl (bad) adc sbb daa pop xchg iret pop inc js loopne push mov (bad) xor test pop dec mov sti cmp add mov out pop xchg int pop xchg iret add das outsb mov xor loop pop pushf fcoms dec nop fistpl push mov jecxz push mov mulb out insb lods in xor imulb pop lcall and add fistpl pop mov mov xor pop jns mov (bad) sbb add addr16 ds andl (bad) icebp and in sub mov push jae mov negl cmp popf mov test dec insb lea pop jnp mov bound sub mov jae mov negl cmp pushf mov bound add pop push loop sub outsb add pop jge mov dec push lods int3 in push das push jno mov cmc adc mov pop jg (bad) call mov push jb mov cmc push aaa push js mov pop andb xchg dec imul or push jno mov cmc push aaa push js mov pop andb xchg dec imul jno mov add add cmc push cmp jle shl and test dec push lods into out wrmsr push jb mov cmc push aaa pop jns mov pop andb push mov repnz stc sbb pop jge mov arpl sub mov push jno mov cmc push aaa pop jns mov bound daa dec imul xchg mov clc sbb pop jp mov inc mov or dec jno add cmp jg shl and enter dec insl mov push je mov negl cmp fwait mov pusha andl into out adc push jb mov negl cmp fwait mov pusha fbstp jo in sub sub xlat cld push aas popa (bad) mov inc push or lahf out sub loopne push xchg into adc fwait mov arpl dec imul jb mov notb aaa pop jns mov xchg dec insl mov push jae mov negl cmp fwait mov arpl dec imul jb mov cli sbb jge mov test cs jno mov cmc adc mov inc test dec imul cmc xor bound or push jno mov cmc push aaa pop jns mov pusha andl lret add or dec jo mov cli sbb ret and int3 in or mov hlt adc mov sub std inc mov aas arpl sub je mov stc sbb pop jge mov and xchg mov clc sbb pop jl mov test dec insb lea push je mov pusha andl lret sub (bad) repnz jne mov cli sbb jle shl and add xchg push jno mov hlt adc jl in and out sub dec outsl nop mov repnz push ja mov inc bound daa dec push adc fcoml loope pop cltd out adc mov pop jle shl and xchg dec insl lea push jae mov std pop aas pusha andl int3 in push das push jno mov cmc push aaa pop js mov pop jg shl and add add test dec lods add xchg mov clc sbb pop jl mov popa (bad) mov dec imul cli and test dec push stos int3 in or mov pop jle mov arpl daa dec imul mov repz push jbe mov cli sbb pop jge ret jecxz and leave ljmp iret lock push je mov add push ds andb xchg add lods int push xor xchg mov cmc sbb pop jnp mov popa (bad) mov inc mov push fwait xlat adc (bad) push push xchg int jge add into repnz stc sbb test dec push lods int push das push jno mov cmc push aaa push js mov pop andb xchg dec insb lea push ja mov pop jg ret and data16 insb nop mov hlt adc mov pop andb mov adc push ja mov pop jg shl and xchg dec (bad) mov or mov repnz jmp inc bound es push or repnz push jne mov cmp ret add lret and outsb nop mov add sbb pop jl mov push or dec jo mov repz push ja mov pop jge mov bound add add dec push daa subl jne mov stc sbb pop jge mov xchg or (bad) repz push jbe mov pop jge mov arpl sub insl mov call outsl (bad) imull fwait rorl popa lods or stos int pop mov sti cmp cmp push mov add push push mov dec scas out sub cmpsl out insb enter mov cs jns add pop andb in sub mov jo mov repz push ja mov pop jge mov inc push or dec outsb (bad) mov add sbb pop test cmp out cmp mov xchg dec outsb (bad) mov repnz sti sbb pop jg ret and lret xor jbe mov pop jg shl and xchg dec outsl xchg mov hlt adc js mov pop andb push cld push mov push jno mov hlt adc mov pop jg shl and (bad) cmp scas (bad) repnz push ja mov push push das push jb mov notb cmp pushf mov arpl dec insb lea push jbe mov pop jg (bad) sub (bad) mov repz push ja mov pop andb push or add cs jo xchg mov pop andb push jae mov negl cmp pushf mov arpl sub jo mov hlt adc xor mov test push jb mov negl cmp popf mov bound sub mov jae mov negl cmp popf mov arpl dec insl nop mov repz push ja mov pop andb push lods int add add das push jno clc dec xchg mov negl cmp shl sub mov jno mov notb aaa xchg hlt inc push or mov cmc pop cmp pushf mov arpl push jno mov notb cmp popf mov xchg dec jo mov cmc push aaa pop jns mov bound mov dec jo mov stc sbb inc bound sub lea push jne mov pop jle lahf shl and mov or mov negl pop andb push lods int wrmsr push jae incb (bad) or and (bad) xor andl lret sub fdivr sbb pop jge mov arpl dec imul mov repz push ja mov pop jge mov push or dec outsl (bad) mov outsl test and adc push je mov clc sbb add pop jl shl and and loopne and mov jb mov cmc push cmp popf mov arpl dec imul jae mov negl cmp pusha andl (bad) repz cmp popf mov xchg dec outsl nop mov repz push ja mov pop jg shl and imul cmpsb fstl aas lcall xchg add lahf loop je mov stc sbb pop jle mov test push jae mov clc sbb pop jl mov bound daa inc push pop js mov pop andl into lock push je mov clc sbb pop jnp mov arpl repnz cli sbb add lock push je mov clc sbb push xchg dec outsl nop mov repnz add push ja jecxz imul sub mov pop jle shl and test stos int3 in push das push jo mov hlt adc mov pusha andl leave ljmp aam adc mov pop jg shl and xchg dec outsb (bad) mov imul push jne mov (bad) pop inc popa (bad) mov inc mov or insl mov push add mov clc sbb pop jnp mov pusha andl int push das push je mov negl cmp fwait mov pusha andl leave xor cmp pushf mov pusha xchg dec insb mov push jno mov hlt adc mov arpl dec imul mov clc sbb pop add and xchg das dec jo mov repz xor jne mov clc sbb pop jl mov pusha andl lret in or dec outsb (bad) mov icebp adc push je mov notb aaa pop jns mov pop jle mov arpl sub mov je mov notl cmp lcall jle shlb int adc jne mov clc sbb pop jp mov pop andb imul jno mov hlt adc mov add add cmp mov popa (bad) mov inc xchg dec jo mov repz push jbe mov pop jl mov pusha andl push lods int wrmsr push jb mov cmc push aaa pop jg shl and add lods into inc xchg leave add jle cmc xor jne call clc sub inc js loop push mov cld xor jp (bad) aaa jo lock iret or mov daa pop xchg rorb add inc jge sti inc (bad) mov hlt xor icebp ss idivl jb loope stos out outsl in xchg jecxz pop xchg int3 or mov rorl dec add cmp in sub pop sahf ficoml push nop rorl dec add aas jp xor and enter rolb jge divb push jge call jmp dec jle jecxz dec jge loope dec jnp jmp ljmp dec xorl add mov mov ret imulb pop xchg enter xchg int3 (bad) xor int3 add outsb mov lahf rorl cmp ja loopne dec jp out mov push xchg add cmovp sahf aam aas js repnz lods out movsb out popa mov xor das jle call mov push je mov stc sbb pop jge mov test repz test dec jo mov cmc push aaa pop jns mov pusha andl add ret in daa inc imul mov cmc push aaa pop jp mov popa xchg dec insl mov push jne mov stc push aas pop andb mov or dec outsl (bad) mov repnz push ja mov popa (bad) mov dec imul mov cmp ficoml ss js mov popa (bad) mov dec push mov hlt adc mov pop andb add add mov or dec jo mov hlt adc mov pop andl iret lock push je mov negl cmp popf add in jo adc pop jnp mov popa (bad) mov dec imul mov stc sbb pop jl shl and test ljmp (bad) icebp adc push je mov clc sbb pop jnp mov bound sub scas (bad) lock push je mov clc sbb add popf mov arpl dec imul push jb mov notb cmp mov xchg dec insl mov push jne mov stc sbb pop jge mov xchg dec insl mov pop jns mov pop inc bound es push or dec outsb (bad) scas (bad) icebp adc push je mov notb cmp lcall xchg dec outsb mov push jne mov testl mov inc test dec push stos int push das push jne mov clc sbb pop jnp mov push ss jns mov popa (bad) mov inc xchg or dec insl lea push js mov pop jle shl and test dec push lods int wrmsr push jb mov cmc push ss js mov pop jle mov imul mov repnz fwait add add test ljmp (bad) repnz repz cmp pushf mov mov or icebp adc push jne mov stc sbb pop jl mov popa (bad) mov mov das jae add dec imul mov pusha andl lret sub mov stc sbb pop jl mov arpl dec outsb (bad) mov repnz ja mov pop jg add mov inc push or dec outsl nop mov repz mov in push je mov in push mov cli xor fistl inc jbe loopne popa xchg leave (bad) aaa jno fcoml inc jl call imull pusha xchg lret or mov sbb nop iret or mov ss icebp sub out xor out xor out sub int inc jl add jle repz adc xlat and in mov outsb test hlt ss idivl or add or fcompl movsb in data16 out push roll ficompl mov add aas jg std inc mov adc mov cmpl adc pop inc popa add sub outsb (bad) mov repnz add inc test dec imul jae mov clc sbb pop jge mov xchg dec insl mov pop jns mov pop andb add inc push or mov cmc push aaa pop jns mov bound sub (bad) mov repnz hlt dec jno mov notb cmp fwait mov bound daa dec push lods int wrmsr push jb mov notb cmp lahf shl and lret sub (bad) repz push ja mov pop jg shl and data16 dec jo mov repz pop jl mov test and push push das push jno and or mov and les pushl jae xor repz (bad) stc xor (bad) mov inc push or dec outsl nop mov repz push jbe mov pop jge mov imul mov repz push ja mov pop jle shl and xchg dec insl lea push je mov pop jg shl and add je adc arpl dec imul push jno mov hlt adc mov test dec insb mov push jae lock push jae mov notb aaa pop jns mov pop jg shl and test dec outsb (bad) mov icebp adc push jne mov clc sbb pop jnp mov test dec insb lea push jae lcall or lret in or mov add add notb cmp fwait mov bound sub xlat and (bad) adc fild and iret out adc push jae mov notb cmp pushf mov popa andl lret in or mov repz push ja mov popa (bad) mov inc mov or icebp adc push je mov clc sbb pop jnp mov addr16 pop lahf or loopne pusha xchg into or mov and ret add add xlat push inc jp icebp xor stos fistp push mov (bad) outsl stos call cmp jmp adc mov add insl movsb fcoml dec jle lock rorl jge lock rolb cmp cmpsl loopne dec cmpl adc negl iret add je mov iret add je loop pop xchg into or jnp call hlt sub roll sub jmp push in sub jecxz bound and adc mov add add pop dec mov aas jns ljmp xchg rorl inc jl out sub fistpl pop xchg lret add mov jne,pn out insl mov dec (bad) rclb mov add int pop popf out xor inc test push push sahf out imul pop mov add rcll push cltd fbld addr16 (bad) or mov adc fldenv jp (bad) xchg fcoms pop sahf loopne mov bnd jmp cmc cmp lcall dec test bound test push arpl daa data16 in imul xor cmpsb jmp cmp hlt cmp fbld mov out inc mov cmp push dec (bad) out cmpsb loopne pop xchg rorb inc jg out and nop rolb cmp sbb aam push cmp fwait mov popa (bad) mov dec imul mov cmc push aaa pop jns mov pusha test dec insb lea xor mov stc sbb pop jge mov arpl dec insb lea push je sbb jle ret and xchg dec insb lea push je mov negl cmp fwait mov pop andb xchg dec jo mov hlt adc mov pop jle shl and xchg dec insb (bad) scas (bad) icebp adc push je mov clc sbb pop jg ret and add push jb mov negb cmp fwait mov pusha andl jne mov clc sbb bound es mov or insl mov fidivr jle or dec jo mov hlt adc mov pop jg shr sub lea push je mov stc sbb pop jl mov arpl cs jo mov cmc push aaa pop jns mov mov dec jo mov add negb cmp sahf or inc mov bound xor xchg mov notb cmp lcall xchg dec outsl nop mov repz mov pop andb data16 dec outsb (bad) mov repnz push ja mov arpl dec insb lea aaa pop jns mov pop andb push or mov jmp mov clc sbb pop jl mov add add inc bound daa dec push stos int3 in push cs jo mov repz push jbe mov pop jl decl rorb push ret and lret cs jo mov negl cmp pushf mov cmp and lahf fist push scas fsqrt sbb (bad) call mov jno mov hlt adc mov pop jge mov arpl dec push stos int3 in in ss js mov add add lahf mov bound sub mov push jno mov hlt adc mov test dec push stos int3 in push xor add js mov iret or mov sub (bad) test sbb pop jge mov imul mov repnz jbe mov clc sbb pop jnp mov pusha andl dec xchg add and pop push mov and lret sub (bad) repz mov pop jg shl and mov or push je mov pop jle shl and xchg dec outsb (bad) mov repnz ja mov movsl repz mov ret fwait add dec insb lea push jne mov stc sbb pop jle shl and cmpsl enter dec insl mov push jp xor fistp push xchg rcll dec test add sbb mov sti cs iret add add dec xchg sti xor fdivrs xchg add adc push je mov mov (bad) pushl push fstl cs fstps push xchg iret pop inc cmpb and into or mov rorl inc jnp in xor fstl pop xchg lret add xchg iret or in push nop int3 sbb int jbe,pt in dec mov cli cs dec (bad) mov lret push aas je stc cmp divl mov add repnz cmc xor xor ficomp pop (bad) cmp mov arpl dec imul mov pop jle mov int3 adc dec jnp in sub aad push xchg fmuls inc jnp jmp pop pop add mov adc out push (bad) sar jne repz lahf fcoms dec (bad) mov add push push mov (bad) cmp add xor clc aaa jo fist dec cmpl imul xchg int3 add insl movsb ficoml push (bad) (bad) outsl lods loop imul dec test std cmp imulb push ficom aaa jno in pop lcall xor fistp inc cmpb and fstl dec xchg rorb dec mov adc xchg int cmp loop push mov add sub dec xchg xlat adc mov std cmp std cmp mov xor sub fstpl push mov sti int add pop push test mov sbb mov and sar rcll aad jl add je ficom dec xorl int inc jp jmp das jne in dec mov sti aaa insl mov mov sub lock push (bad) js cmc ss push dec into and fldcw lahf sbb mov cmc push aaa pop jns in (bad) and mov jno mov hlt adc mov pop jg int3 xchg xor mov clc sbb pop jnp mov popa (bad) mov dec imul jnp mov popa (bad) cmpsl enter dec insb lea add cltd mov pop jg shl and cmpsl enter dec insb lea push jae mov negb cmp jg shl and xchg dec insb mov push jb mov notb aaa pop jns mov rorb inc js jmp imul add mov xchg dec jno push test jae cld cmp popa xchg lret add cmpsb fist and rcll dec test fsts addr16 aam insl test mov sbb mov add outsb stos in push xchg cmc das insl ret jo loopne pop xchg fcoms dec mov or test jecxz push mov cli ss repnz cmpsl in pop pop cmc daa pop mov (bad) cli xor movsl fimull or add add push dec jge out dec cmpl ret bound mov stos jecxz dec mov and leave add xchg adc push mov repz lcall and (bad) imulb cltd rolb jb,pt loope dec xchg rorb inc jns in push (bad) (bad) std xor scas in push (bad) ret data16 rorl inc js ljmp jns jmp sti xor push mov cli xor movsb fstl sub add adc (bad) std xor dec cmpl add jb jecxz push mov (bad) cmp call or scas out pop xchg lret add es xchg lret add jo add mov and rorl insb enter lock pop dec mov cli xor add rorb add cli xor out push xchg lret je in pop xchg lret jae mov sub adc mov fsts dec cmpl adc mov add push cltd aam inc cmpb sbb mov jecxz push (bad) lds cmp and xchg rorl inc jle stc xor sbb or mov fcoml cs fsts dec xchg aad dec mov sbb dec test sub xlat adc rorb inc test fcoml xor fistl xor fistl dec xchg fcoml dec (bad) mov fiadd add cmp scas out pop xchg into add push push mov add outsb mov mov rorb inc jp jmp add std cmp out daa pop cwtl rolb jne,pt in es fwait rorb dec cmpb loop push mov add jne out push xchg enter stos loop push (bad) add jb add sub aam inc mov and rorb inc jg repz fist push (bad) movb jbe in and int3 push inc jns add mov and mov mov ficomp inc cmpl cs push movsl lret in or dec jo mov repz push jbe mov pop andl mov pop scas lock fsts aaa pop jns mov arpl enter mov rolb jae ljmp (bad) sbb (bad) out sub mov push jae mov negl cmp pushf mov or add add add inc js add cmp cltd rorl inc mov pop fistpl push nop into pop inc pushf out add push jno mov cmc push aaa pop jns mov pop andb outsb nop mov repnz stc sbb add inc xchg dec insb lea push jae mov negb cmp popf mov xchg dec insl mov push je mov negl cmp pushf mov popa (bad) mov inc add add stos lret in or push jae mov negb cmp fwait mov bound sub mov push jae mov clc sbb pop jnp mov arpl push jno mov negb cmp fwait mov arpl sub mov push je mov clc sbb pop jle mov dec outsl nop mov xlat cli sbb andb push or dec outsl nop mov add sbb mov mov push (bad) lret push dec cmpsl (bad) pop inc popa (bad) mov dec jo mov cmc push cmp fwait mov bound sub mov push jne mov sti sbb pop andb insb lea push jbe mov pop andb push wrmsr push jae mov negl cmp popf mov arpl dec jo mov cmc pop cmp pushf mov add ja loop pop xchg int3 pop cmp scas out inc jae mov negl add add pop jp mov popa mov push jo mov hlt adc mov bound sub mov push jno mov hlt adc mov add stos lret add adc push jne mov stc sbb pop jge mov arpl sub (bad) repz stc sbb pop xchg outsb (bad) std ss negb movsl (bad) out sub mov jbe mov pop andb add xor adc mov adc mov arpl dec imul jb mov stc sbb jge mov xchg (bad) push jb (bad) call lea push je mov negl cmp pushf mov popa (bad) mov inc push or dec outsl nop mov repz pop jnp mov popa (bad) mov dec imul mov hlt adc mov add sbb pop jg shl and test dec add fadds (bad) and (bad) mov inc push or mov repnz cmp pushf mov popa (bad) mov dec insb mov push jb mov negb cmp (bad) sub dec (bad) mov es dec jno mov cmc push aaa push js shl and cmpsl (bad) call mov push jb mov notb aaa pop jns mov sbb ret jecxz and leave ljmp aam push aaa pop jns mov pop andb data16 dec insb lea push jae mov notb cmp sahf shl and test dec push lods int wrmsr push jno mov hlt adc mov pop jle shlb test dec outsl nop mov repz mov inc push or dec outsl (bad) mov repnz add add mov clc add aas pusha andl int adc push jb mov notb cmp fwait mov pusha andl lret cs jo mov hlt adc adc sbb dec outsl nop mov repz mov pushf mov xchg dec insl (bad) mov repnz js mov pusha subl (bad) repnz cli sbb add add test jmp sub (bad) hlt adc mov arpl dec insb lea push jne mov stc sbb pop jge mov test dec insb mov push jbe mov bound add dec jo add pop jg shl and lret sub add stc sbb pop jge mov push or mov cmc push aaa pop jns mov pusha andl ret in daa dec imul mov cmc push aaa pop jns mov test dec insb lea push je mov clc sbb pop jle add jns ret and int3 in push xor jbe mov pop jge mov xchg dec outsb (bad) mov repz push jbe mov pop andb mov adc push je mov clc sbb pop jge shl and leave ljmp dec outsl nop mov repnz stc sbb pop jle ret sub mov push je mov clc add inc popa (bad) add dec jo mov notb cmp fwait mov popa andl mov cmc push aaa push js mov pop jg ret and leave ljmp (bad) repz push ja mov pop jge mov push or dec outsl nop mov repz push ja mov add pop jle shl and xchg dec outsb (bad) mov repnz (bad) pop inc bound sub mov dec jo mov jno sub and mov push jno mov notb cmp in es push push xor xchg mov negl cmp popf mov test dec insl mov push jbe mov popa (bad) mov dec imul add add add loope and cmpsl enter dec insl mov push je add xchg dec insl mov push jbe mov pop andb imul mov cli subb js mov stos and mov and (bad) imulb bound mov in daa popa cwtl fcoms dec cmpb sub aad pop lcall inc jle repnz lahf fldl adc dec outsb (bad) mov repnz (bad) sbb pop jle enter dec insl (bad) mov repnz ja mov pop jg shl and xchg dec outsl nop mov repz push js mov arpl dec insb lea push jne mov fdivrp and mov push das push jno mov cmc push aaa pop jp mov popa add xor xchg mov clc sbb pop jge mov add add inc test dec insl (bad) mov repnz add inc arpl dec outsb (bad) mov repnz push ja mov pop andl int3 in push das push jb mov negb cmp pushf mov arpl push jno mov cmc push aaa pop jns mov test daa or adc push jae mov negl cmp pushf mov mov or mov cmc pop cmp pushf mov fiadd and int jnp in cs (bad) jmp (bad) mov repnz (bad) sbb test dec insl mov push jne mov stc sbb bound adc push je mov clc sbb pop jl mov arpl adc push jne mov stc sbb pop jge shl and test ljmp (bad) repnz push ja mov pop andb nop mov repz push js mov add pop andb push or mov hlt adc mov pusha andl (bad) repz mov bound sub lea push jne mov stc sbb or xchg fistl wrmsr push jno mov hlt push aaa pop js mov pop jg shl and cmpsb (bad) call mov js mov pop jle shl add add inc test dec push lods int push das add cwtl mov pop jg shl or dec imul push ja mov pop jge mov bound daa inc push or dec outsb (bad) scas (bad) icebp adc push jne mov sti sbb shl and cmpsl enter dec imul jno mov hlt adc mov pop jle shl and mov dec outsb (bad) mov repnz xor jne mov clc sbb pop jnp mov pusha andl enter dec insb lea push jbe mov stc sbb pop jl mov ss mov popa (bad) mov inc mov or jo mov repz pop jnp mov popa (bad) mov inc push or dec outsb (bad) mov icebp adc push je mov testl mov inc xchg xor jbe mov stc sbb pop jl mov bound es push or icebp adc push je mov and mov int3 push dec mov push daa dec push lods into out rdtsc push jae mov negl cmp pushf mov bound sub mov push ja mov popa andl lret sub outsb (bad) mov icebp adc push jne mov leave adc add pop andl lret add add or mov hlt adc mov pop andb inc jge cli cmp push lods int wrmsr push jb mov notb cmp fwait mov popa (bad) mov inc push or dec outsl popl mov clc sbb pop jl mov add lods int wrmsr push jno mov hlt adc mov pop jg shl and cmpsb (bad) call mov push jbe mov pop jle add add inc test dec push lods int push das push jno mov hlt adc mov pop andl int wrmsr push jb mov notb aaa pop jns mov pop jg shl and xchg dec insb lea push js mov pop andl lret in or push jo mov cmc push aaa pop jns xor cmp loope and stos int3 in push das dec jno mov hlt push aaa push js mov or (bad) negl cmp pushf mov bound daa add mov pop jns mov inc test dec push stos int3 in push das push jno mov cmc push aaa pop jns mov pop jg shl and stos int3 in push das push jno mov hlt adc push ja mov pop jle mov arpl dec imul mov stc sbb pop jl mov (bad) and (bad) mov dec push lods into out adc push jae mov negl cmp lahf shl and xchg push jno mov hlt adc mov pop jle shl and test dec imul jbe mov clc sbb pop jnp shl and cmpsb (bad) ljmp (bad) repz mov add inc arpl dec push stos int3 in or mov xlat std pop aas pusha andl add jbe icebp jns,pn add lret jmp sub (bad) hlt adc mov pop andb outsb (bad) mov repnz sti sbb pop jg shl and data16 dec outsb (bad) mov repnz cli sbb push daa dec imul mov clc sbb pop jl mov xchg dec outsb nop mov hlt adc mov arpl out sub mov push je mov negl cmp pushf mov xchg dec jo mov (bad) dec je mov std push aas pusha andl int adc push jae mov clc sbb add inc test dec insb lea pop jnp add push (bad) xor stos lret in or xchg mov clc sbb pop jnp mov pusha andl jne mov std push aas pop andb add add repz push jbe mov pop andb mov or mov cmc push aaa pop jns mov xchg dec insl mov push jne mov stc sbb pop jge mov test dec insl lea push je mov pop andb push or mov hlt adc mov popa (bad) mov dec push lods int adc xchg mov pusha andl (bad) icebp adc push jne mov stc sbb pop jge shl and lret in or mov stc sbb out sub mov push js mov pop andb mov ret and rolb scas sti cmp idivl xchg pop inc cmpb jmp inc bound daa inc push or dec outsl nop mov repnz push jne mov (bad) and add (bad) mov inc push or dec outsb (bad) mov repnz push jne mov clc sbb pop jnp mov popa andl int wrmsr push jb mov cmc push aaa pop js mov pop jg shl and test dec push lods int push das push jno mov clc sbb pop jl mov arpl dec push lods int push das push jno mov hlt adc mov pop jle shl and add mov dec jo add pop jl mov add test ljmp (bad) icebp adc push je mov negl cmp fwait mov xchg pop mov notb cmp fwait mov pusha andl lret sub stos cli cmp sti sbb arpl sub scas iret lock push je mov clc sbb pop jl mov bound daa dec imul xchg add xor add and icebp jb repnz fwait aad inc jl call pop jbe,pt jmp adc ret pop pop xchg into xor (bad) sbb ret and leave ljmp ds aaa scas negb (bad) out sub mov jecxz sub mov pop jp mov popa (bad) mov icebp cmp sbb pop jg movsl (bad) call lea push je mov stc sbb add add cmp dec (bad) enter mov dec imul mov hlt push aaa pop jns mov pop andb mov adc push je mov stc sbb jge mov test dec imul jb mov notb cmp pushf mov popa xchg dec jg divb lcallw scas in dec test lock loopne push mov std xor cmpsl loopne jb icebp xor add add in push push mov mov stc sbb pop jge mov arpl dec imul jb mov notb cmp sahf shl xchg pop pop pushf shl and cmpsl enter xor into or adc add inc mov push je mov negl cmp mov dec push lods int3 in push das push jno mov notb cmp lcall andb mov or dec outsl add add cmp fwait mov pusha andl lret sub (bad) repnz jne mov stc sbb pop jl mov arpl sub (bad) repnz stc sbb pop jge mov arpl dec push lods int push das push jno mov clc sbb pop jl mov test dec imul jb mov notb aaa pop jns mov pusha andl add add add inc imul push ja mov pop jge mov add lods int cmp jmp jno mov cmc push aaa push js mov mov or mov dec imul mov hlt adc mov pusha andl into out adc push jae mov notb cmp fwait mov popa (bad) mov inc push or dec outsb nop mov add repz (bad) push inc pusha andl leave ljmp (bad) icebp adc push jne mov negl cmp fwait mov pusha andb push stos int3 in push das push jo mov negl cmp pushf mov bound sub in jb fcompl jne shl and iret lock push je mov clc sbb pop jnp mov popa (bad) mov sub outsb (bad) scas (bad) icebp adc push je mov loopne add inc test dec outsl nop mov repnz cmc inc mov pop jl mov xchg dec insb lea push jae std dec xchg cli cmp in xor xchg mov clc sbb pop jl mov arpl dec push lods int wrmsr push jb mov notb cmp fwait mov bound sub outsb (bad) mov repz push ja mov pop andb push or mov cmc push cmp pushf mov xchg dec insl mov push jbe mov pop andb mov or dec outsl nop mov repz push jp mov popa andl insb lea push cwtl or mov lods jecxz js shl xchg rclb dec xchg movl cmp shl and test dec push lods int3 in push das dec jo sarb adc aam test add inc imul push jnp mov popa (bad) mov inc mov or dec outsl (bad) mov icebp adc push jne mov clc sbb pop jnp mov pusha andl iret lock push je inc jnp mov arpl (bad) je stc cmp fwait mov xchg push jae mov negl cmp fwait mov popa (bad) movsb (bad) sub mov jb mov cmc add push aaa pop jns mov arpl sub mov push jb mov notb cmp fwait mov popa (bad) mov sub outsb (bad) mov repnz push jne fwait mov iret inc xchg fldl and cmpsb (bad) call adc push xchg out fwait aad inc jl in sub rorl sbb rcll push xchg iret or into adc mov out push cltd rorl cmp pop mov cld cmp jmp add sbb mov ret cld xor imul lods in push test stc xor leave cli sub (bad) repz and jmp push mov in push pop mov mov (bad) cmc sub (bad) cld das fs int3 xor push dec jg jmp push (bad) (bad) outsb movsl fsts test stc inc mov (bad) cmp ficom dec xchg adc push xchg rorl inc jge icebp sub aad add inc add pushf rorl inc cmpb cld aas jnp icebp sub test sbb (bad) int3 or (bad) (bad) aaa jae call or mov adc int dec mov push dec test std cmp iret and std dec test out cmp out sub imull xchg (bad) imull pop xchg leave cld xor int aaa imul loopne dec jge call jmp pop (bad) (bad) mulb pop nop les jae fist lret xor cmovp add movb mov cli cmp imul sbb pop jg shl and xchg dec insb mov push je mov stc sbb pop jl mov arpl dec insl mov push je mov clc sbb pop jl mov bound fwait (bad) adc lret mov rsqrtps jne jmp insb stos call add pop jp mov pop jnp mov popa (bad) mov inc push add add in or jle and mov pop jns mov arpl dec insb mov jl mov arpl dec push lods int wrmsr push jb mov cli sbb pop jge mov arpl dec outsb mov stc sbb add inc xchg dec outsl nop mov stc sbb add inc xchg dec outsl nop mov hlt adc mov add add add jae mov negl cmp mov inc push or mov cmc push aaa pop jnp mov bound mov dec jo sbb sar insl mov mov pop jle shl and cmpsl enter dec outsb mov push ja mov pop jg ret es imul mov bound andl (bad) icebp adc push jne mov cli sbb loop and (bad) repnz push ja mov pop jle shl and test push jo mov hlt adc mov pop andb (bad) sub xchg mov and xlat cmovns cmc sub rorl aaa outsb lods out xor repz loope insl add rep test and rorl cmp lahf rorb dec cmpl fstl cmp add mov xor cmp daa bound loope push bnd out sub adc pop jg push xchg rorl inc jg lock pop xchg into add jg incb icebp sbb pop jl mov test push jb mov notb cmp popf mov bound daa dec imul mov sbb (bad) std dec cwtl (bad) dec lcall les aas xchg in sub (bad) repz lods out push adc mov fcoml dec jl out sub pop dec xchg fbld dec mov (bad) cmp mov sbb ret pusha mov pop mov dec (bad) or into sbb mov in xor or push lcall dec (bad) int3 or into or mov cmovl sbb pushf in cmp hlt das outsb stos jmp es loopne pop fstpl pop pushf ficomp arpl add sahf fstpl bound mov (bad) repz pop pusha mov fistp mov fstpl pop popf loop pop fcompl pop cltd (bad) adc xchg into or stc xor stos jmp push (bad) cmp and ret arpl cmpsl fcoml mov or leave or rclb push xchg int cmp lods jecxz push mov testl scas in and cmp dec xchg out xor adc add add jmp sub (bad) repnz cli sbb jmp sub outsb (bad) scas (bad) icebp adc push je mov mull out sub pop xchg roll je,pt loop jp cld sbb add out sub xchg mov cmc adc mov pop jg shl and cmpsb (bad) call mov push jb mov cmc push ss js mov bound xor out fs jb mov add negb cmp pushf mov bound sub mov pop jns mov xchg dec outsb (bad) mov repnz sti sbb cmc and lret in or mov repz pop jge mov bound daa dec push or dec outsb (bad) mov repnz fsqrt sbb pop jge mov mov xor xchg mov notl cmp lcall andb add add loop and xchg dec insl mov push je add arpl dec imul push jno mov cmc push aaa pop jns mov sbb mov cmc pop aaa pop jns mov popa xchg dec outsl xchg mov repz push ja mov pop jg ret pop inc jp ljmp insb fildl and cmpsl enter push jae mov negl cmp popf mov bound sub add add mov jae mov negl cmp popf mov arpl xchg divl jne out sub aam dec xorb push jle ret and pop xchg rcll dec jge out jae hlt cmp and xchg xor lret test push dec shrb addr16 fcompl mov pop jle mov xchg dec insl mov inc popa (bad) mov dec imul add xchg mov notb cmp fwait mov popa (bad) mov dec imul mov push lret sbb adc push jne mov stc sbb pop jge mov test dec insb lea push jae mov sti sbb shl and xchg dec insl lea push jae mov notl cmp fwait mov pusha (bad) mov inc insl mov push jbe mov pop jge mov add test dec push lods int wrmsr push jno mov cmc adc mov bound daa add (bad) mov repnz push jne mov stc sbb pop jl mov popa (bad) mov inc mov or push jae mov testb cmp jle shl and test dec imul jb mov negl cmp lcall andb push stos int3 in push cs jo mov repz add add xchg mov pop jg shl and data16 dec insl lea jbe,pt adc cmc push aaa pop jns mov pop andb mov or dec outsl nop mov repz push ja mov arpl dec insb lea push je mov stc sbb pop jge mov xchg dec insl mov push jbe mov bound sub mov mov notb cmp fwait mov popa (bad) mov inc push push das push jno mov cmc push cmp shl and mov jb mov notb cmp pushf mov and popa mov popa (bad) mov dec insl mov xchg mov hlt adc push ja mov pop andb mov or outsl nop mov repnz (bad) pop inc bound xchg into or imulb add add shll jnp adc (bad) sbb ret pop xchg leave push inc jnp lock jecxz outsb lods call sub loop popa mov imul mov hlt push aaa pop jns mov test dec imul jb add sbb test push mov dec insl mov push jae mov pusha lahf ficoml sub (bad) in add add add push or dec outsl nop mov repnz fyl2xp1 sbb pop jge mov mov add arpl cwtl mov pop jle shl and cmpsb (bad) out sub mov push jb mov pop jg shl and xchg dec insb lea push jae mov notl cmp lcall andb push lods int push das push jno mov hlt add add mov pop jg shl and cmpsb int xchg int xchg dec jb mov cmc push aaa pop js mov pusha andl scas iret lock push jae mov negl cmp fwait mov pusha andl into out wrmsr push jb mov notb add loope and test dec push lods int push das push jo mov cmc push ss jl mov arpl add sub mov push jb mov cmc push aaa push js mov pop jle shl and cmpsb lret xor xchg mov negl cmp fwait mov popa andl mov dec jo mov repz push jbe mov pusha andl lret sub outsl (bad) mov (bad) mov stc sbb loope and cmpsb (bad) call lea push js mov pop jg shl add and cmpsb (bad) out sub mov xor (bad) sbb pop jle shl and test dec jo sub (bad) xor loope push mov mov xor xchg mov clc sbb pop jl mov arpl dec imul mov pop jge mov arpl dec imul mov repz std push ds andb push add add sub (bad) icebp adc push jne mov stc sbb pop jl mov bound daa inc insb lea push je mov negl cmp fwait mov pusha andl leave ljmp (bad) icebp adc push je mov cld jae sti pop mov sbb loop and mov or jae xor pop andl lret sub outsb mov pop jnp mov add add add add andl leave jmp add push jb mov cmc push aaa pop js mov pop jg ret in and into out adc push jb mov notb cmp lcall jg shl and cmpsb (bad) call mov jno mov clc sbb pop jl mov popa andl push or dec outsb (bad) scas (bad) icebp adc push je mov negl cmp pushf mov xchg dec add insb lea push jb mov notb aaa pop jns mov pusha andb xchg dec cmpb push pop xchg iret or jno fistl cmpl pushl jbe xlat jae scas in dec add test adc mov and fistl cltd fmuls inc jnp (bad) xor dec cmpb cmovnp add ficom cmpl divl imul xchg add add (bad) cmp adc mov aam ja,pt call adc lret (bad) mov incl sar jnp out es xchg rcll push nop rorb dec nop aam push xchg fcoms push cltd fistpl push xchg rcll pop lds push sub fbld arpl add cmp rolb mov adc popa mov in data16 ljmp mov or xlat pop pop popf fbld imul add or push cwtl xlat pop pop pushf fisub movsl out je add iret or daa mov idivb (bad) aam pop lcall fs inc jle stc xor pop xchg int3 push ja,pt add (bad) aaa jo call push push xchg aad pop pushf fbld cmpsb ficomp mov in xor or sbb out outsb mov cmp or incl mov add jge repz add loopne cmpsl jecxz pop xchg int3 add (bad) fcomps outsb mov ss add rcrl pusha movsl call dec mov adc xchg out imul repz and adc lret or lret xchg adc sbb iret push cmp bound add loopne pop popf fcompl push cltd fistl push (bad) lret or lods jecxz dec xchg test sbb int aas jge std aas jp in push xchg int inc jg add out sub fcompl dec xchg add jle repnz xlat push push xchg rorb dec cmpl xor mov push dec test (bad) mov adc int push cltd (bad) cmpsw lock jmp xor fs dec insl mov push je repnz mov push jbe mov pop jge shl and test dec mov pop pop xchg (bad) inc jns out push mov pop inc ja lock add add adc mov fistp mov std xor lods out pop xchg xlat pop pop cwtl (bad) sbb jae out pop xchg loope push cltd into or ret add inc cmpl imulb gs xlat or mov add add popf out xor fistp dec test loope pop lcall inc jg cmc xor push mov bound sar mov add jb loopne push xchg rcll dec xchg (bad) add cmovg hlt xor call xor in pop xchg rcll push nop rclb push (bad) pop dec mov or add dec xchg add inc jg clc cmp test cmp cmc xor divb ja cli cmp test add int dec xchg fsubs popa popf (bad) push dec xchg fsubs movsb in insl mov cmp mov adc dec mov push dec (bad) ret cmp shll (bad) or loopne imul dec cmpl adc mov sbb sar je in pop xchg rclb push mov cld dec scas fild and dec imul test das jbe mov pop jg ret jo jmp sbb inc lcall inc xchg xor pushf mov arpl push jae fdivl js std inc (bad) les inc test or mov and xor xlat sbb loopne insl lods cli dec mov dec mov add ficom push push xchg fsubl sar sbb pop jge les jbe clc outsl stos jmp imul dec jp mov mov jae mov negl cmp pushf mov test dec insb lea push jne std inc add cmp mov dec lea pop jns mov inc xchg dec insl mov push je mov clc sbb pop jnp mov inc mov lret xor xchg mov negl cmp fwait mov popa (bad) mov dec push stos int3 in push das push jno mov hlt adc mov pop test dec push lods int push xor xchg mov cmc push aaa pop jns mov pop andb data16 jae mov cmp test dec imul jno mov hlt adc mov popa (bad) mov inc mov add jmp xor xchg mov negl cmp fwait mov pusha andl enter dec insb lea push jne mov stc sbb pop jnp shl and cmpsl (bad) call lea cmp fwait mov pusha andl lret jmp sub mov clc push aas pusha andl lret sub outsl (bad) mov repnz push jbe mov pop jle shl and cmpsl (bad) call add sub mov repz push jbe mov pop jge mov bound daa inc push or (bad) repnz (bad) pop aas pusha andl lret sub outsb mov push je mov notb cmp fwait mov popa andl popf in pop xchg iret or mov pop pop cwtl cld sub mov jbe mov stc sbb pop jge mov arpl add out sub xchg mov hlt adc mov pop jg ret or dec insb lea push jne mov clc sbb pop jnp mov popa (bad) mov das push jno mov hlt adc mov pop jge mov arpl daa dec imul mov repnz push js mov pop jg shl and test dec insb lea push jne mov pop jge mov add add inc arpl dec insl mov push jae mov notb cmp lcall jg shl and cmpsb (bad) out sub mov jne mov clc sbb pop jnp mov popa (bad) mov inc mov sbb nop mov repnz jne mov clc sbb popa (bad) mov dec push or mov repz push add (bad) and (bad) mov inc push add lret sub outsb mov cmp jle mov xchg dec imul jb mov notb aaa pop jns mov pop andb imul mov repnz push jne mov stc sbb pop jl mov popa andl mov dec outsl xchg mov notb aaa pop jns mov pop jle shl es push or repnz fiaddl add sbb pop jle shl es mov push das dec jno mov hlt adc mov pop jle shl and xchg dec insl lea push jbe mov pop jle mov arpl dec push lods int3 in push add cmp lock out fs sbb pop andb outsb (bad) mov repnz cmp popf mov arpl dec insb lea push je mov negl add pop jp mov popa test dec imul jb mov notb aaa pop jns mov pusha andl lret in or mov negb cmp fwait mov arpl sub mov push jno mov hlt adc mov pop jg shl and push lods int3 in push das push jno mov notb cmp pushf mov popa (bad) mov inc push push das push jno add xchg mov hlt adc mov data16 dec jno mov hlt adc mov test xor xchg mov notb cmp fwait mov mov dec jno mov add sbb mov pusha andb xchg dec insb mov push jne mov popa (bad) mov inc push or dec outsb (bad) mov icebp adc push je mov clc sbb pop jnp add add pusha andl int push das push jb mov cmc adc mov pop jle mov arpl dec imul mov notl cmp lcall (bad) mov inc imul mov hlt adc mov pop andl (bad) icebp adc push jbe mov popa (bad) movsb (bad) daa inc push push cs jo mov add add stc sbb pop jl mov pusha test dec insb lea push jae lcall test dec insb mov push jne mov stc sbb pop jle shl daa dec imul inc imul mov notb cmp pushf mov popa (bad) mov inc push pop cmp popf mov test dec push lods int3 in push das push jb mov notb cmp pushf add popa andl iret lock push je decl mov aam dec test imull jo mov negl cmp fwait mov bound daa dec jo mov repz jnp mov test dec insl lea dec jo and aam dec jg jmp (bad) sub (bad) out je clc xor data16 cmp sbb add or lods into out adc push jae mov add add test int cmp inc fwait push xchg xor dec jge out pop nop leave add jo out push (bad) lret add mov pop pop xchg lret gs xor push icebp xor loopne push xchg stc xor xlat adc rorl xchg push inc jg add mov daa fs xlat or das imul xlat sbb xchg iret push dec mov sti cmp loope pop pushf (bad) adc sar je out sub fstps push xchg add add sbb xlat adc iret bound add je jmp push xchg lret cmpb stos repz int3 add cltd repz loopne dec cmpl add jmp inc bound das push jno mov hlt adc mov pop addl sub scas (bad) icebp adc push jne mov stc sbb pop jge mov mov or icebp adc push je mov negl cmp fwait mov add aas pusha adc jns mov pusha andl int push das push jno mov hlt adc mov pop jle shl and test dec insl mov push ja mov cld ss cmpl stc xor ljmp rorl add jae ficoml push mov sti xor rolb int3 sbb clc xor in daa bound lret jo add xchg out jae pop mov sahf sbb jl lods cmp repz jmp pop xchg enter lods loop push xchg sbb xchg into add adc mov fs push mov fnsave xor adc movsl jmp outsl loope mov popa scas out mov jl aas fsubrs mov push mov (bad) or cmp inc lret add dec les sahf adc fldenv cmp ds inc mov cwtl fbld cli cwtl ljmp add add clc push inc ficompl pop pushf add adc add mov xchg outsl shll inc lcall ljmp sti inc addl cmpb inc mov push push cwtl fisub push cmpsb out push stos jmp cmp roll aad push xchg rclb push mov incb lret rsqrtps jmp sub icebp xor cmc xor idivb leave adc (bad) adc xchg aam push hlt cmp fsubl pusha sahf frstor fs bound mov lock out push (bad) add ja in and add aam push xchg aad dec mov pop (bad) sbb sbb pop lahf fbld push mov rcpps out das jb idivl jns incb mov add jge add scas in es cltd fcompl push add mov add adc ficompl ja add bound or fstps arpl cld aas add repz out pusha cltd fsts xchg fistpl pop mov repnz sbb add outsb mov (bad) xor mov in das mov in pop fwait rorl inc jns call add scas hlt ss call sbb ret jno out sub loopne pop mov add outsb cmpsb loope push xchg cmpsb fcoml dec cmpb sbb add add outsl mov mov sub in ja clc xor repnz sbb stos in das imul dec xchg iret or (bad) cmpsb in sub insb mov pushf mov test add lret in or mov cmc push cmp mov inc xchg or insl mov push je add add mov negl cmp fwait mov popa (bad) mov inc mov adc push jb mov cmc push aaa pop jns mov pop jg shl and cmpsl enter dec insl lea push jae mov negb cmp jg shl and test dec insb lea push je mov negl cmp pushf mov popa add sub mov hlt adc add arpl dec imul add lret in or mov hlt adc mov pop jge mov xchg dec outsb (bad) mov repnz push jne mov pop jg shl and cmpsl enter dec insb mov push jb mov pop jge shl and cmpsb (bad) call lea xor scas ljmp mov notb cmp pushf mov push or mov repz push ja mov add add loope and cmpsl enter dec outsl nop mov repnz push ja mov arpl sub mov jno mov cmc push aaa pop jns mov pop andb add iret lock mov pop jg cmpsb (bad) call lea push jne mov stc sbb pop jge mov arpl dec push mov icebp adc push jne mov stc sbb pop jl mov add add movsb (bad) sub mov jb mov clc sbb pop jnp mov xchg dec outsb mov push jne mov clc sbb pop jl mov arpl dec push lods into out wrmsr push jbe mov pop jge mov sbb jle shl and test dec push stos int3 in push cs jo mov repz push jbe mov bound daa dec push or dec add outsb (bad) mov repnz push jne mov clc sbb pop jnp mov pusha andl mov repz clc add inc pusha (bad) mov inc mov or lock push jae mov notb cmp sahf mov bound sub mov jb mov cmc push aaa push js mov arpl daa dec imul mov negl cmp fwait mov pusha andl enter dec outsb (bad) mov repz mov popa (bad) movsb (bad) in daa inc push or dec outsb mov push jae mov notb cmp fwait mov bound sub mov jne mov iret push ds push inc bound daa inc push or mov repz clc sbb pusha addl sub lea push jb add cmp loope and test dec push stos int3 in or mov notb cmp lcall jg shl and cmpsb (bad) call mov jb mov cmc adc mov popa (bad) mov inc push or lock push je mov notb cmp lcall jg shl and stos lret jmp sub (bad) repnz push jne mov add add clc sbb pop jnp mov pusha andl enter dec insb (bad) mov notb cmp fdivr push aas pusha andl lret in or mov repz push jbe mov pop jge mov arpl (bad) testl mov inc data16 add fldl and test dec insb lea push jbe mov bound sub mov add jae mov negl cmp pushf mov arpl dec outsb nop mov repz pop jl mov arpl dec insb lea pop jns mov popa (bad) mov dec push lods int wrmsr push jb mov pop andb imul mov notb cmp pushf mov bound sub mov push js mov pusha andl add add inc push adc push jae mov negl cmp popf mov arpl dec insb nop mov hlt adc mov inc xchg dec outsl nop mov repz cmp shl and test ljmp jns shl and xchg dec insl mov push jae mov notb cmp lcall andb data16 push jae mov notl cmp fwait mov add std push aas pusha andl leave ljmp iret lock push jae mov clc sbb pop jnp shl and cmpsl leave jmp mov push je mov clc sbb pop jnp mov popa (bad) mov inc push adc push je mov negl cmp fwait mov pusha andl lret sub (bad) icebp adc push jne mov clc sbb pop jg ret in and leave ljmp dec add mov stc sbb pop jl shl and add jb mov cmc push aaa push js mov bound daa inc push or dec outsb (bad) mov icebp adc push jne mov clc sbb pop jnp mov rorb sub sar sbb pop jnp mov popa (bad) mov inc mov or icebp adc push je mov negl cmp pushf mov xchg dec imul add out adc push je mov negl cmp fwait mov pusha andl leave ljmp (bad) cmc adc mov pop jg shl and cmpsb (bad) call lea push jb mov notl cmp fwait mov test dec push lods int push das push jo add pop jge mov arpl sub (bad) repz push jbe mov pop andb add add and xchg dec insl mov push jne mov stc sbb pop jl mov bound sub mov push je mov negl cmp popf mov popa (bad) mov inc mov or fisttpll xor xchg mov negl shl sub mov jb mov cmc push aaa push js mov pop andb xchg xor xchg fldl and xchg add add ljmp (bad) repz push ja mov pop andl lea push jne mov jmp inc test dec insb lea push jne mov add and andl mov ss jns mov popa xchg dec outsb (bad) mov repnz sti sbb ret and lret sub (bad) repz push ja mov arpl add or dec insb lea push jbe mov pop jg shl daa dec imul mov notb cmp mov dec mov (bad) out sub scas (bad) icebp adc push jne mov stc sbb pop jge mov arpl dec imul js mov pop andb push adc push jae mov negl cmp pushf mov bound xor xchg mov stc sbb add add pop jge mov test dec imul push ja mov pop andb dec push mov icebp adc stc sbb pop jl mov bound sub mov push jb mov negb cmp fwait mov test dec insb mov push jb mov negb cmp pushf mov popa (bad) mov dec imul mov clc sbb add pushf mov bound dec push lods int push das push jno mov hlt adc mov pop andb cltd repz pop jnp mov bound daa dec imul mov repz push jbe mov pop jle shl sub mov jno mov negl cmp fwait mov pusha andl mov repnz jne mov stc sbb inc popa test or dec insl mov push ja mov pop jg shl and lret sub imul (bad) cmp pop dec test loope dec jle out pop cwtl int cmp fcoml inc xchg or mov and out push xchg lret add js jmp or sbb lret jbe icebp sub (bad) cld aaa cmpsl (bad) cmc push aaa pop jns mov arpl ss cmp fbld pop nop enter mov add popf aam cmp inc jg jmp add insl cmpsl in dec (bad) mov in sub loope pop xchg aam push xchg (bad) pop pop cwtl aam dec xchg clc xor jecxz bound jmp jne hlt cmp (bad) cmp mov les dec mov push dec xchg (bad) push pop movsb out js add inc add inc test or aad bound out xor idivl jle add jg incl into adc (bad) fldcw jmp outsl scas idivb add or fldenv movsb loop addr16 sub xor bnd pop dec nop xlat sbb pop pop sahf in push xchg into sbb out jae or aam push xchg ficomp pop xchg lret add jl and jle cld cmp out push xchg rcll (bad) lret or ret add cmp push inc mov pop popa add adc and in xor incb (bad) (bad) cmp clc xor cmp mov cmp clc xor cmpsl jecxz push cwtl fisub push add add and cltd fstps pop mov repnz xchg (bad) scas repnz loop insb scas hlt cmp or adc push nop int dec add aaa jo out das insb scas jmp jne incl sar je in sub in push (bad) movb jp hlt das insl stos out sub popa cwtl rorb inc jle in and cmp jo jmp adc iret or mov fcoml pop pushf subps or cmp mov add add insl stos loop pop xchg rorb inc test loopne pop mov mov negb cmp fwait mov popa (bad) mov dec imul add popa (bad) mov fisubr dec jno mov hlt adc mov pop mov sbb pop stc xor sbb (bad) or (bad) mov fmuls inc cmpl add test movl data16 rorb inc jg hlt xor add add adc or ret je out and loopne pop popf loope push mov movsl out pop xchg rorb jbe,pt jmp jge cld xor mov cmp xor in pop xchg int inc xchg enter test sbb or mov iret push inc jg icebp das jbe cld inc add jl,pt add ja or jl lock in sub stc inc mov das jns and mov xor sbb ficom push nop (bad) cld xor loope dec xchg add mov fstpl pop pop incb aas js jmp add mov and fsts inc cmpl ret aaa test and inc jp call and rcll dec mov or lret or test add cmpl inc or push nop rcrl popa movsb jmp jo idivl add sbb ficoml imul ss call adc int3 cmovl sqrtps xor add add add rcll sahf loope push movsl out insb stos in sub insb lods bnd sti inc test push push cwtl loopne fs (bad) jl xor out xor sub lock or or pop enter fwait in xchg and cmp fcomps and out ja negl hlt retw daa ret add imul jmp (bad) xor pop xchg std jge sbb (bad) pop mov adc ficomp add add inc (bad) ret test pop gs mov sub or (bad) xchg insb fnsave cltd clc cmp add rolb inc ficoml pop sbb inc xchg and in jne push push cwtl fcompl jb push test pop int3 dec mov (bad) xor test aaa lret push mov pop add mov jl and jo jp sbb sbb outsb in push in sbb (bad) pop bound clc (bad) out fildl lahf ljmp mov add iret adc loopne push mov xor cld inc test or add push lahf loop mov cwtl ficompl jge or xlat sbb lock or add sarb mov enter frstor imul and repz push dec nop fcomps pop mov repz or xor inc (bad) (bad) or in xor roll mov add adc in insl rcll pop movsl jmp jmp lahf cld ds or fmull fsts dec lods std sub xor (bad) cmc cmp jb adc mov push icebp xor inc test adc leave xorl sbb adc sbb dec ret mov and or xor mull mov mov pop push xchg jg jmp outsb xor insl and jge sub mov cmp insl mov or xchg cli inc test rcll pop lcall add dec scas bnd pop dec xchg rcrl imul sub xchg aad pop lahf in jno pushl or add dec aad fimul in push mov sbb lods es int3 or mov popa test add mov adc and leave cmp iret push pusha cmpsl jmp outsl mov cmp add or and hlt inc test or sub add (bad) jne fldt cmpsb faddl repnz cmp jae idivb roll cltd loope insb lods lock sub cli cmp scas cld cmp into adc pushf out push std inc (bad) fsts sbb loope cmpsl sbb mov push outsl mov jb aaa jbe icebp xor repnz addr16 jo inc sub jle or add fcompl insb lods out das outsb lods in sub push pop mov inc movsb pop push inc mov xlat dec sarl jae icebp das jno add aad pushf notl lret test dec test mov (bad) shlb ja jb and imulb ja sbb sar jge orb dec adc fsts xchg aad push xchg aam pop movsl jmp sub rclb push nop in inc xchg or xchg aam push xchg (bad) sbb fcompl add add add fisub bound divl ja hlt xor in sub ss std jle,pt push dec mov or xchg frstor push push inc mov xor xor mov imull mov mov fistpl push mov add mov out pop mov testl js out push mov out test js in push xchg lret push aas jns in arpl push push mov add mov sub loopne add and mov in jns jmp outsl mov jbe and movsl call xor hlt ss jno sti ja cmp inc xchg insl scas repnz mov je adc fildll dec movsl repz pop sbb sbb inc test outsl lods xor lahf in jae add add sub add loop gs rorl cmp stos loope dec cmpl adc popa mov sbb add data16 push sbb xchg fildll outsl mov inc mov jb add popa les movsl xor repz add (bad) aad pop mov cld inc test adc loope insl cmp push pop push mov xchg addr16 rclb flds and pop mov add iret sbb call inc mov adc loop push icebp cmp adc in je add xlat pop arpl or (bad) sbb in aaa test adc loopne add add push hlt aaa jg or fist jecxz or pop mov sub std inc mov adc jo sti inc pushf cs aaa sbb sub scas idivb lds push add rolb mov xchg fiadd dec xchg fdivs js xor test push push lcall test adc adc mov xchg clc inc mov pop pop mov stc jno pusha mov xchg jge cmpl hlt aaa mov add (bad) dec rcrb xor mov adc push cmc push mov mov lds sub (bad) rcll sahf push sbbl adc sub test das jb test push movsb out outsl mov cmp push mov jns std orl popf daa jns pusha enter and ss sbb repz pop xchg push test ss jl fwait adc gs mov frstor lods out xor (bad) rsqrtps ljmp das add ss add into adc pushf fcompl pusha mov add jl divb mov sbb push xchg ljmp ret pop fcompl pop cltd fcoms xchg into or leave or int3 push push mov js or scas or or xor xor sbb clc cmp jl cmp repz (bad) xor clc ss sti cmp mov xor jmp and movsb add lock push leave cmp or add add pushf hlt fistpl cwtl (bad) lods out imul jmp ret iret aaa ja pop dec ficompl pop pop (bad) xor mov cmp ja js or rcrb add adc xchg aad push movsl in mov xor mov sbb out ja pop inc cmpsb add lea push lods hlt inc jl ds dec xchg loop mov or lods loope outsl test mov dec ret sahf sarl cmpsl push mov sbb add negb adc cmpsb clc dec test addr16 (bad) jnp dec mov cmp push xlat inc scas push lcall jnp add sbb sub dec xchg xlat sbb data16 lock add int pop mov bound loope (bad) les dec xchg xlat pop pop xchg into or aaa jno jecxz push (bad) (bad) adc (bad) sbb out pop xchg loop jne out pop xchg rclb dec xchg cli xor test sbb lret add and cmp jle add and add dec xchg jecxz push xchg out pop xchg rorb inc test add mov in pop popf fisttpll mov fwait aad cmpb pop pushf fistpl push mov add jns out sub faddl hlt sub add add iret xor or jl and or in pop xchg rorl (bad) shrb xchg sti cmp lock out inc rolb dec xchg gs or cmpsb push out or ficompl add fisub mov jmp pop mov inc jnp adc in popf jo cmp in es pushf fcoms lcall je std xor fstps inc xchg and cmpsl adc xor aam icebp dec mov cmp pop xlat xor mull cmp cs cmp dec test insl scas hlt xor xchg fstps movsl call inc test dec xchg xor cs push jp and idivb add dec xchg rclb add popf ficomp jno insl mov cmc dec fwait notl repz dec xchg sbb or cmpb mov ljmp inc rorl cmp pusha mov stc aaa js sbb jb repz sahf fcoms dec (bad) loopne test pop mov leave sub cmp dec stc dec mov mov in push jbe mov cli sbb test dec imul mov hlt adc mov sbb pop jg shl add dec push lods int wrmsr push jb mov add in push das push jo mov hlt adc mov pop jg shl and xchg dec insb lea push jae mov notl cmp jge mov xchg dec insb lea push jae mov negl cmp out (bad) pusha les andl test fistpll ja cmp pop jecxz pop enter sub jge enter xor xor shll fnsave outsb stos jmp bound rolb and ficompl mov shlb test pop inc js icebp sub les push arpl lret imul lahf fistpl stos sti cmp pop inc xchg or sub add lds dec mov add call xchg sti cs mov push rolb add add fs push add sub loopne lret mov imul add jb push jg cld das mov fildll icebp insl jecxz mov sub adc pop and cmp add jg decb fldcw fdivr push aas pusha andl (bad) sbb pop jg fdivr push aas pusha andl int sysexit push js mov bound rcll dec add add cld push aas pusha andl leave ljmp (bad) repnz pop sahf mov arpl dec imul aaa pop jp mov popa andl scas (bad) icebp adc push je mov clc and xchg dec insl mov push jae mov notb cmp lcall jg shl and cmpsb enter dec insb xchg mov cmc push aaa pop jns mov pop add and xchg dec stos pop lods iret lock push je mov negl cmp fwait mov xchg dec imul jno mov cmc push aaa push js mov pop andb mov or dec je mov stc sbb pop jl mov bound daa dec imul mov repnz push jne mov add inc xchg pop jle shl and test add or dec insb add ss ja mov pop jg shl add dec imul mov pop jns mov pop andb mov or repnz jne mov clc sbb pop jl mov data16 dec outsb (bad) scas (bad) repnz pop jnp mov popa andl out sub mov jno mov clc jae sbb test add add pop jge pop or xchg and movl call mov or push jb mov cmc pop cmp cmpsb (bad) out sub mov jb mov cmc push aaa pop jns mov pop jg shl and test pop jg shl es push lock push jae mov notb aaa pop js add loope and cmpsb (bad) call mov add xchg mov pop andb add add add sub scas (bad) icebp adc push je mov clc sbb pop jnp mov popa (bad) mov dec imul mov clc sbb pop jl (bad) push aas pop fwait mov pop andl lret in or aad xchg iret sbb sarb jne cmp dec xchg push mov push jge mov arpl dec push lods int rdtsc push jae mov notb aaa pop js mov test add sub mov dec outsl nop mov repnz push jbe mov cli sbb pop jg shl and xchg dec jno mov hlt adc popf mov popa (bad) mov inc add or dec insb lea push jae mov notb add add inc xchg es mov or dec insl mov push jae mov cmc push aaa pop js mov pop jle shl and stos lret jmp add add add (bad) icebp adc push movsb (bad) pop cwtl clc sbb shl and cmpsl (bad) call mov push jb lock aam cmp rorb mov imul push jno mov cmc push aaa push jnp mov jns mov pop jg shr sub scas iret lock push jae mov notb cmp lcall andl leave jmp (bad) mov repz pop jge lock add add add add pop jl mov dec imul mov repz cmp cmpsl (bad) call mov push jae add je mov clc sbb pop jl shl and mov dec outsb nop mov repz stc sbb jge mov mov dec jo mov cmc push ss js mov jb mov negl cmp fwait mov xlat stc sbb pop jl mov mov pop popa add mov mov and aaa pop jp mov bound sub mov and (bad) mov daa push xor aas jbe icebp jae inc xchg dec outsl nop mov repz push js mov pop jg shl and xchg mov push jbe mov cli sbb inc arpl dec imul add mov pop jg fdivrp and (bad) mov xor lods int wrmsr push jno mov cmc and mov or add inc test dec outsl cld push in sbb jge mov push or mov cmc push aaa pop js mov pop jg shl and cmpsb (bad) call mov push jne mov clc sbb pop jl mov arpl dec push stos int3 in push das push (bad) mov inc mov sbb pop jg rolb out sub mov dec outsl nop mov cmc push ss js mov pop jle shl and test dec imul jns mov jns mov push icebp adc push xchg mov repz push ja mov inc popa (bad) mov inc mov push xor add dec test dec push shl and cmpsb (bad) jmp lea push jae mov clc sbb add pop jge ret daa dec push adc push js mov test dec imul jno mov hlt adc (bad) in es insb lea push jae mov cmc push ss js mov jae mov notb aaa pop jp mov pop cmpb aad aaa pop jns mov pusha andb test popa (bad) mov inc mov or dec outsl cmpsl leave ljmp add test dec jno mov pusha andb (bad) add dec insb lea push jae mov fsqrt sbb add inc addr16 test stos lret jmp cs outsb xchg mov stc sbb pop jle shl and cmpsl enter dec insb lea push ja mov test dec insb lea push jae shl and test jmp (bad) scas (bad) repnz fiaddl sti sbb pop jle ret in es andl push xor hlt enter xchg out ja,pn cmpsl loope fwait lock ljmp mov notb cmp fwait mov arpl dec imul mov repnz push jne mov clc sbb pop jp mov xchg loop fimul adc in jns jmp jecxz es mov or insl mov add ss js mov mov dec (bad) lret sbb rolb xor add out arpl repz cld cmpb jns hlt xor in sub jmp mov or ret test pop cmpsb out imul sbb imul xor mov add ds inc (bad) mov stc cmp repz mov sbb mov push pop cltd fcoms push xchg iret and in sub in add add divb jbe repnz dec mov add jge,pt cld cmp clc ss repz in sub sbb icebp xor out sub aam cltd xlat cmovl jl,pt out sub xlat pop xchg adc rorb dec mov adc add dec mov pop inc lcall push mov or dec xchg orps leave push pop pushf fistpl push add aad push (bad) into or int3 or lret adc dec xchg add adc int3 or les inc jle add mov repz scas ljmp movsb loop pop lcall dec lcall dec mov pop pop pushf ficompl popa sahf fcompl pop lcall push xchg rclb push mov sub bound ficoml push cwtl (bad) adc xchg rclb dec mov push inc add jbe,pt repz mov adc int dec cltd fstpl push xchg rorl dec mov add jg stc dec mov add jg or int3 or movb add push inc cmpl adc int3 or ret jl clc xor into xor push inc test add jl cli cmp lock mov push inc add jge,pt stc aaa jne repnz lock insb stos call and fistpl push add push xchg aam push xchg rorb dec cwtl aad popa mov adc mov jmp xor xchg into or xchg add mov sbb rorl jl divb aam dec mov and out sub add call sbb mov cmc cmp repz call push out mov adc rcrb cmpl popa int dec xchg or mov and fstpl pop mov add popa sahf add mov clc xor mov sub test and mov dec shrb push push pop std cmp aas mov or cltd aad inc jl inc mov xor push or inc enter add add fnstcw data16 xor fcompl jl add jg xor push fisubr mov out aad call add mov jb xchg sbb jbe sbb fisttpl (bad) imulb insb stos in ss ljmp dec int3 sbb rclb test sub sar pushf in sub mov aaa or dec xchg fstps pop xchg fsts pop mov sti pop fwait sbb int inc (bad) cmc inc test add aam fs out jb std cmp add gs xor mov inc jge adc xchg xlat sbb sub aaa or add fisubrl mov aas xchg push push popf fcompl pop stos out sub mov sbb pushf out cmp add jne divb jns sti cmp clc aas jns clc xor mov pop push cltd loopne arpl add ljmp frstor insb mov jae,pt in push mov cmc sub cmova sub push add push mov ljmp xchg fiaddl (bad) std aaa outsl mov mov jecxz push mov add mov insl (bad) ss add mov (bad) adc icebp sub lret jo in push mov loope push nop rorb inc jnp in daa bound loope push mov cld xor gs ficomp cltd out aaa add sub lods jmp popa pushf in insl mov dec xchg rclb xor mov add sbb stc ss jmp popa sahf loopne pop pushf loop pop stos ljmp jbe out popa cmpsl out cmpsb jmp lods repz outsl mov jge,pt cli cmp jnp clc cmp cli cmp divl jo call and lahf ficomp bound out jb,pn out add add inc xchg or into sbb pop mov rcrl push (bad) int3 or (bad) or clc dec (bad) int3 add sbb ret push frstor mov add add insl in mov xor leave or enter jmp push mov sbb fstpl pop mov xchg adc xor out fcomps je add lret xchg rcrl push mov adc xchg clc xor out sub in pop xchg hlt imul jno loop push (bad) lret or mov out pop mov fbld arpl call xor test jmp and add add jecxz pop lcall and (bad) std aaa js repz xlat adc sbb out insb mov cmp sbb ljmp sub jns adc loop imul pop mov adc pop bound xor mov sub xlat sbb jns aas test pop data16 lock mov sbb in jo clc cmp push dec xchg fstps bound incb lret adc in outsl mov ds pop arpl clc cmp fcomps bound cmc cmp add rcll outsl mov ss (bad) or rclb pop fsts push xchg frstor arpl fcompl pop xchg rorl dec xchg add jno out sub test and fcompl push xchg rorl dec mov add mov lock pop mov fsts push xchg aam dec mov pop inc add cmp jno in sub add loop pop popf flds and ficompl push xchg (bad) adc dec test add cmp lock arpl rorb dec mov add cmp lock sbb rorb dec test add mov out sub in pusha sahf fstpl dec mov add jle stc ss icebp sub pop lcall push (bad) int dec xchg (bad) cmp insb test cld cmp add (bad) cmp cmc xor mov xor out jns hlt xor call xor imul aas jnp or movb jl sti cmp repz out jle stc push xchg rorb dec mov add jge cld cmp out outsb stos out bound xlat adc mov or iret adc fidiv imul test xor mov adc frstor cmpsl call and incl or sbb in imul push push xchg fstps mov std inc test push push xchg fcomps pop movsb jmp cmp add push cltd fbld data16 out xor mov add or pop fwait jmp ds dec mov orps out outsb mov cmp inc add dec xchg aad pop lahf jecxz xor incb sbb sub add inc mov (bad) xchg rcrl pop popf loopne data16 add add hlt ss sti inc xchg or rcll pop pushf loope insl mov sub jmp ja cld aas test pop dec (bad) rclb push pushf fstpl pusha movsb call cmp or fcomps pop mov repz incl (bad) rclb imul pop mov xor sub scas rcpps in je stc cmp test idivb cltd out aas xchg ficompl xlat sbb fimul rclb cltd ficompl sahf loop push sbb pop sahf fcompl pop cltd xlat adc pop mov idivb jge add pop mov clc ds lds dec mov adc cwtl frstor test idivb jl add iret or mov sub aad add fcompl pop cltd (bad) arpl ficompl push (bad) movl and iret or mov sub adc xor test lret add daa pusha lahf ficoml insl cmpsl loope push (bad) add xchg iret or mov sub fcoml push mov add jae out pop xchg into pop add mov jmp pop inc jp in daa pusha lcall xor loopne push mov (bad) cmp jmp or lock ficoml push mov (bad) cmp jmp or cmpl movl sub dec xchg cld cmp and rorl test add pusha pushf fcoms dec test sti ss out pop add add mov or rclb pop mov aad push xchg aad and hlt aaa js (bad) cmp mov inc jge repz popf (bad) adc adc (bad) (bad) cmp out pop cwtl rorb jl in and inc jl in and xchg fcoms cmp jmp adc ret jne call or bound (bad) std outsb cmpsl loopne push xchg stc outsb cmpsl fistp push add scas call add add jp in and inc jns ljmp jbe mov sub rorl gs (bad) adc (bad) (bad) cmp and push mov sbb enter loope push nop int inc mov add jns lock adc bound clc xor in pop xchg int inc jp add iret adc (bad) adc push xchg iret adc fcompl pop cwtl (bad) adc pop mov call or fbld pop xchg (bad) add outsl test ret jno out push (bad) movb jae out addr16 dec mov cli xor adc mov cli xor test sub iret or mov aam inc cmpb cmovs mov sub into add int3 add add mov sbb cmp cmp adc mov loope push mov add inc jle repz push (bad) add je out pop xchg int3 add add mov sub movsl stc xor cmovs mov sub pop xchg loopne arpl icebp sub cs loopne mov xor (bad) adc cmp and in es rorb inc or pop test cmp mov sti xor jbe out sub add jae out jae,pn hlt cmp pop inc mov or mov sbb iret sub cmpsl in jne clc cmp arpl stc cmp jle push bound pop inc jg (bad) cmp mov in sub loop pop lcall dec mov or sar js icebp add xor or ret adc int3 or sar jns repz icebp cs stos ljmp je out sub cmpsb jecxz pop fsts push xchg into or test (bad) cmp icebp das js lock and fcompl pop cltd fsts push lcall inc add cmp mov clc xor mov pop push mov (bad) cmp leave pop inc cmpl es ficomp pop xchg rorb inc test add jo ljmp popf fistpl push xchg iret or inc mov or lret mov xor cmp out sub test add jbe call xor fmuls dec stos out mov adc (bad) sbb loope push mov add jg,pt add add add sbb ss add mov add mov or mov push mov ss add add pop push mov sbb or xchg iret adc fistpl lahf loop fs daa popa pushf fistl push (bad) into adc xor ficomp dec mov divb call jo jmp adc sar jo icebp inc add sbb aam dec (bad) leave push inc add jp,pt repz out sub loop imul add adc loopne pop xchg rcll mov pop inc test (bad) cmp icebp cs jecxz pop mov sub lods icebp cs jecxz arpl rorb xchg add jnp cmc xor scas out xor add push xchg (bad) pop pop pushf ficomp mov or in xor jecxz jo stc cmp mov adc mov adc add lcall outsb (bad) sbb outsl mov cmp or out xor dec mov add pop mov shrl jo idivb jge add int3 (bad) xchg popa xor cld ds mov adc fcomps cmpsb jmp jno add rclb push cltd fcompl pop pushf loopne outsl mov jb jmp lock cmp leave rcpps call cmp add enter fisub arpl loop imul sbb rorb inc jge divb test add insb test out fsts inc add cmpl clc xor lods ljmp xchg rorb test add xor ficompl push cwtl aad push mov or sbb and xchg in pop (bad) (bad) repnz cltd out push add pop dec mov adc adc mov sbb lret jns in sub pop insl test add push inc jge clc xor roll inc jns imulb imul movb sahf jecxz outsl mov xor std inc test add add pop rcrl mov sbb add sub shrb xchg rorb jl std jo inc jp ljmp mov push (bad) sub or lods lock xchg loopne push cltd ficoml push xchg xlat dec cwtl repnz mov nop ficoml in loopne mov cmp les fwait cli cmpsb push xchg cmp (bad) xor mov push pop lret loope (bad) stc cmp popf fisub insb mov inc add pop mov call insl mov lahf loope push cmp (bad) and mov add lahf jecxz stos in sub jno inc mov jnp pop in arpl sbb mov mov ljmp lahf add mov sar lcall mov cmp in sub out pop xchg rorl xchg iret or mov inc mov cmpl rorb dec mov inc mov js in das imul add dec test push lds int xchg imull or gs hlt daa pop xchg aam pop lods das mov jno and push dec and lds dec test cmp test (bad) scas or and clc dec jle in sub push dec test add js hlt xor ja in bound push fwait loopne dec mov imull pop xchg aam sbb data16 ljmp mov xchg aad add bound ljmp cwtl fsts push xchg rcll push mov add movb add rcll jge inc mov std push loope int3 es sub jno divb jmp sahf out dec cltd repnz repnz adc mov mov sub dec mov pushl outsl cmpsb fimull inc jl cmc sub std data16 dec pushf fsts pop xchg rorb pop mov or in pop lahf fcompl pop xchg rcll push xchg int add movl mov data16 and adc sbb mov adc repz xchg add mov pop inc add cmp out jno,pn in les mov out sub jg xor cli dec nop add push pop xchg rorl addr16 push xchg rclb pop mov dec mov add movsl loope pop cltd (bad) adc sbb add aad insb test jmp cmp mov daa arpl add and repz imul cmp mov dec mov adc scas jmp fs and fimull es ljmp stc cmp icebp outsb lret test pop mov aas xchg ljmp xchg adc cmp push cmpsb and xor outsl mov adc mov ds pop lahf in insl ficompl mov pop mov adc sbb add ss lock lods in push aad xchg rorb jmp jge push xchg sti inc xchg hlt aaa jbe sub (bad) fisubl outsl sarb aam mov pop mov sahf push push xchg aam jno cli push xchg aam add insb scas sbb add cld ds popa mov stos add roll add insl (bad) push fidivl and imul xchg push inc fwait sbb or xchg loop mov adc out cmp adc mov test dec stos add adc fldl add test ss stc push adc cmp jl or sub dec mov jp push stos in dec cmpsl out insl in xchg xlat sbb xor aas mov push cltd (bad) xor xchg fcomps ja add jmp cmpsb incl sub ljmp jmp (bad) pop popa mov push xchg out inc xchg out xchg in sub mov xor sbb add hlt imul nop loopne test sbb movd add mov push pop cltd sbb lds mov push cld ds push pop out lcall jno sub mov ds xlat push lds mov cmp sti push (bad) lret lret or sbb mov pop mov push xchg aam mov jl sub cmovp add jnp sti aaa jae cld aas jp sti cmp cmp cmpl dec sahf std insb lods out inc jge or push add stos jmp sbb shll add pop pop xchg leave add sahf ficomp pop lcall inc test add mov jne dec popf or mov add stos cli xor out lods or or (bad) out inc fldcw cwtl or in pop aad test add sbb test and loope fs in sub fcomps xchg add aad jp repz test (bad) cmp int3 add aaa jae in sub add add add push push nop int (bad) into or jmp cmp mov cmp cmp cwtl rorb cmp pop pusha popf fsts push mov cmovge cmovge clc ss ljmp pop test repnz (bad) iret sub ficom push nop rclb or jle ljmp (bad) ret adc je (bad) xor xchg rorl sbb imul pop mov sub jno clc sub add fs in arpl loope gs es sub or rclb push xchg xlat pop push (bad) or leave sub sub mov mov sqrtps enter jmp jno out pop nop stc inc ja cmovbe ret (bad) cmp clc xor call sbb jle sub aam jle repz in pop cwtl or scas jmp es fstps xchg or mov cmp mov push xchg jmp jb add outsl stos loope out sub insb (bad) mov repnz push jne mov stc sbb pop jl mov test dec imul pop jp mov pusha andl lods into out adc push jae mov notb aaa pop jns mov pop jg shl sub mov jb mov notb cmp lcall (bad) mov inc push sbb pop jnp mov aas pusha andl (bad) repz stc sbb add inc xchg dec insb mov push jb mov cmc sbb pop jge mov arpl dec imul mov hlt adc mov pop jg shl and mov xor add push movsl (bad) jg cld dec xchg push jns mov pop jg ret and gs clc sbb pop jge mov add add add dec push lods int wrmsr push jb mov cmc push ss js mov pop jle movsl (bad) out sub mov jno mov hlt adc mov test dec insl lea push jne mov divb mov push push das push jno mov cmc push cmp mov inc xchg dec outsb mov sbb sbb shrl aam cmp inc mov push das push jno add jg shl and xchg dec insl mov push jne mov cli sbb jge mov test dec insl mov push js mov pop andb mov or dec outsb (bad) mov repnz sti sbb pusha (bad) mov dec insl mov push jbe mov pop jg shl and xchg xor xchg mov clc sbb pop jnp mov add add inc arpl dec jo mov cmc push aaa pop jns mov popa (bad) mov arpl sub mov push jb mov notb cmp lahf shl and cmpsl enter dec insb mov push je mov clc sbb pop jl mov arpl dec push mov repnz cli sbb add inc xchg dec int dec test add lods into out adc push jae stos (bad) stc cmp mov arpl dec push lods int3 in push das push jno mov hlt adc push ja mov pop jge mov bound sub scas iret lock stc sbb pop jge mov bound daa add mov std ds mov xchg or insl mov push je mov negl cmp pushf mov pusha andl add sub xchg mov hlt adc mov pop jle shl and test dec push stos int3 in push andb data16 dec outsl nop mov repz push jbe mov pop jge mov bound daa dec push or dec outsb (bad) mov icebp adc push js mov pop jg shl and test dec push stos int3 in push cs jo mov repz push jbe mov add sbb pop jl shl and xchg dec insb lea push jae mov notb cmp mov cmc adc mov inc bound daa dec insb lea push jae mov notb cmp popf mov bound xor mov negl cmp fwait mov pop andb push lods int wrmsr push jno mov hlt adc mov pop jge mov bound add add add test jmp xchg mov hlt adc jno mov cmc pop cmp fwait mov pop andb xchg dec insl lea push jae mov cli sbb pop jge mov arpl dec imul mov cld sbb shr ret jns jl movl dec mov push popf loopne push xchg jmp sti sbb pusha andl movsb fcoml add jne loopne and call push frstor call jns (bad) push cltd add xchg (bad) adc cld xor int3 add fdivs cltd or adc icebp sub adc xchg out push std cmp pop les test cmp adc cmp popf mov bound daa dec imul (bad) repnz stc sbb pop jge mov arpl dec imul jb mov cmc add push aaa push js mov popa (bad) mov inc push push aas pusha andl mov repz push jbe mov pop jge mov bound ds andb xchg dec imul jbe mov pop jge shl and cmpsb (bad) call je mov adc push jb mov negl cmp pushf mov popa (bad) mov inc mov or outsl nop mov hlt adc push ja mov popa (bad) mov dec imul mov hlt adc push ja mov pop jge mov bound sub lcall andb xchg or lock push jae mov or dec outsb (bad) mov repnz push jbe mov pop andb xchg dec insb lea push jae mov notb cmp lcall add fdivr sbb shl daa inc push rolb mov pop xchg jecxz mov cltd icebp push in daa addr16 lret add movl daa add add (bad) and andl mov xor jbe mov pop jle shl and xchg dec xchg pop jg shl and xchg dec insl mov push jne mov stc sbb pop jge mov add add add test dec insb lea push ja mov test dec insb lea push jae mov negl cmp pushf mov bound sub mov repnz push jne mov cli sbb add inc xchg dec insl mov push jne mov stc sbb pop jl ret and lret sub (bad) repz push jbe mov pop jle shl and roll add loop and xchg add cwtl mov pop jg fsqrt sbb add add mov jb mov cmc push aaa pop jns mov popa (bad) cmpsb (bad) in or mov repz push ja mov pop jg shl and xchg dec outsb (bad) mov icebp adc push jne mov stc sbb pusha adcl jae sub adc push insb fidiv nop sti das push jne cmpsl add fiadd and xchg add loop sti and lret in or shl and cmpsl enter dec outsb (bad) mov repnz push jne mov stc sbb pop jl mov popa (bad) mov inc mov wrmsr push jb mov cmc push ss js mov pop jle mov test dec push lods int3 in wrmsr push jno mov hlt adc mov inc data16 dec insb mov push jb add pop jg rolb add loope and test dec push stos (bad) icebp adc mov pop jge mov bound daa inc push or dec outsb mov push je mov notl cmp (bad) mov dec imul mov cmc sbb pop jnp mov popa (bad) inc mov mov jbe out arpl pop jg shl es mov or icebp adc push je mov clc sbb pop jnp add pusha andl int push das push jno mov hlt adc mov pop jge mov jns mov pop jg shl and xchg mov negb cmp mov inc mov or xchg dec imul push ja mov pop jge mov bound sub movsb (bad) in es push or lock push jae mov add pop aaa pop jp mov pop andb imul mov repz push jbe loope and gs ret adc inc jl cld xor (bad) iret push jp or (bad) repz push jbe mov pop jg shl and xchg pop jns mov pusha andl test dec imul jb mov cmc push ss js mov pop jg add add loope and test dec push (bad) in sub mov push jb cwtl mov pop jge mov bound sub jb mov cmc push ss jns mov pop andl mov dec jo mov repz push jbe mov pop jl mov bound es mov wrmsr push jno mov hlt adc mov pop jle shl aas pop andb add and xchg dec imul je mov clc sbb pop jnp mov pusha andl enter dec insb lea push jae mov notb aaa pop jns mov bound sub mov dec outsl nop mov repnz or test push mov adc mov das mov cld jno and mov bound add icebp adc push je mov add sbb pop jp mov inc xchg dec insb test jmp sub (bad) repz cli sbb jge mov arpl dec push lods int push das push jno mov hlt sbb pop jl mov bound es push or dec jo mov cmc push cmp lcall (bad) movsb (bad) sub mov push je mov clc sbb pop jl mov bound daa add mov dec outsl nop mov hlt adc mov jp mov popa (bad) mov inc push or dec outsb nop mov repnz fsqrt sbb pop jge mov mov ficomp pop mov adc push jne mov clc sbb aas popa andl lret in or mov repnz cmp pushf mov push or icebp adc push jne mov clc sbb pop jnp add add popa (bad) movsb (bad) out sub mov jno mov clc sbb pop jnp mov bound es push or dec outsb (bad) mov repz push ja mov pop andb insb lea push jne mov clc sbb pop jnp mov arpl dec insl mov push jae mov stc sbb pop jg ret and data16 dec outsb mov inc test imull mov add pop xchg rorl inc lahf repnz aaa pop js mov pop jg shl sub mov jb mov notb aaa pop jns mov inc arpl leave or dec jo mov hlt adc add imul mov cmc push aaa pop js mov pusha andl lret sub outsb (bad) mov repnz jne mov pusha andl int3 in push xor jbe mov pop cltd loop mov ja lock pop scas in pop cwtl adc insb lea pop jnp mov popa (bad) mov inc push or dec outsl nop mov repnz stc sbb pop jl mov arpl xor fsqrt sbb pop jge mov arpl dec push stos int3 in push das dec jo mov repz push jbe mov pusha andb xchg dec outsb mov add add push jne fwait mov ficompl xchg or mov pop imul add and dec imul mov hlt adc push ja lret in or mov repnz jne mov clc sbb pop jnp mov xchg dec imul jno mov hlt adc mov cltd sbb into pop inc jge repnz xchg enter mov dec test ficoml dec xchg inc mov adc cwtl adc add add int xor pusha xchg into add jb in push xchg imulb nop lret add jge out and mov dec jg cmp mov inc xchg dec insl mov push je mov negl dec lds inc lea push je mov negl cmp lcall andl lods into out wrmsr push jno mov hlt adc mov pop add sub mov dec outsl nop add add push jbe mov stc sbb pop jl mov popa andl int3 in push cs jo mov repz stc sbb pop jl mov popa andl enter dec insl lea push js mov pop jle shl and test dec imul mov notb aaa pop jp mov bound daa dec imul mov add add adc push jne mov sti sbb jg shl and xchg dec insb lea push jne mov clc sbb pop jnp mov pusha andl lret sub push jb mov cmc pop aaa mov or mov wrmsr add xchg mov pop jge mov bound daa inc push or mov repz push jbe mov popa (bad) mov bound daa add inc push or dec outsb (bad) scas (bad) icebp adc push je mov notb cmp lcall test dec imul mov repnz clc sbb pop jnp mov je mov negl cmp fwait mov je mov negl cmp pushf mov popa andl leave ljmp (bad) icebp adc push je mov xchg popa (bad) mov inc push add add jmp sub (bad) hlt adc mov pop add sub mov ja mov add mov or in imul push jne mov stc sbb pop jge mov mov lahf in dec mov jmp lea push jae mov notb cmp lcall jg and mov add and andl add daa dec imul pop enter pop add push cwtl mulb out sub mov sbb hlt pop cmp rcll cmp jle shl and test dec push lods int3 in push das push jno mov hlt adc shl and xchg push jno mov hlt adc mov pop andb xchg add pop pop xchg into sub ficoml dec mov stc xor fadds add add pop xchg xlat adc stc inc jp or jno out push mov add jnp in and jnp repnz ficoml push mov add insl test and jecxz dec test imulb fs int push mov sti xor ficoml push xchg aad dec mov adc movl xor sbb ret and lret sub (bad) repz cli sbb pop jge (bad) in daa dec imul add add pop js mov pusha andl aas jp sub cwtl mov bound sub mov jb mov negl cmp fwait mov popa (bad) movsb (bad) daa dec imul cwtl mov bound sub mov add lcall andl lret in or mov cmc push cmp mov xchg add add or dec insl mov push je (bad) cmpl mov loope pop xchg int pop mov sti xor outsl add cmp lock int cmp in jg jle inc mov cmp mov cld xor mov xor push mov stc xor test packsswb out es rorb dec mov divl in jb divl push in pop xchg iret (bad) add fstps pop popf fnsave pop xchg iret or xor cwtl aad ja add int3 sbb mov out js add pusha lahf jmp jo in add mov xorps cmpsl or push jb in dec jle ret sub (bad) repnz stc sbb pop jl mov rorb pop mov dec outsb (bad) mov repnz jmp inc bound add stos into out wrmsr push jno mov cmc adc mov pusha andl int3 out adc cld cmp pop xchg push jno mov notb cmp fwait mov test dec insb lea push jne mov add inc arpl dec je mov pusha andl scas (bad) icebp adc push jne mov stc sbb pop jge mov mov dec jo mov add (bad) hlt adc mov pop jg shl and cmpsl enter dec insb lea push jae dec sti mov dec xchg int cmp fimull inc jle in sub out stos in inc xchg into push dec cmpl and fcomps push xchg and icebp inc xchg into push int enter pop mov pop push (bad) out sub scas or mov dec jo mov hlt adc push js mov test add add mov push jno mov cmc adc mov pop jg shl and cmpsl (bad) call nop mov repz push ja mov pop jle shl and xchg dec insb lea mov cmc push ss jns fisubrl jo mov cli sbb andl lret in or mov repz push jbe mov pop jl mov bound sub mov push jne mov add pop inc popa andl int3 in push das dec jo mov repz push ja mov pop jge mov mov or dec outsb (bad) scas (bad) icebp adc push je mov clc sbb pop jl mov bound es push or (bad) cmp cwtl pop jae mov pop jle shl and cmpsb (bad) call mov jb mov cmc push aaa push js mov arpl add sub mov jno mov cmc push ss js mov pop jg roll or dec push lods int comiss xchg mov stc sbb pop jle shl and test dec imul jbe mov popa (bad) mov inc mov push xchg (bad) insb sahf (bad) and enter add repz pop mov pushl jl out xor adc jmp cmp cld movsb in daa dec add imul mov hlt adc mov imul mov hlt adc mov bound sub mov push jb mov notb cmp lcall andl int3 in push das push jno mov stc sbb pop jge mov test dec imul jb mov cmc push aaa pop jns mov inc test dec jo add push js mov pop pushf repz or dec insl mov push je mov clc sbb pop jl mov imul mov hlt adc mov inc xchg dec outsb (bad) mov repnz stc sbb pop jge ret and lret in or mov cmc push aaa pop jns mov popa (bad) movsb (bad) sub mov push jae mov clc sbb add inc data16 dec outsb (bad) mov repnz ja mov pusha andl int adc push je mov pop andb xchg dec outsb (bad) mov repnz cli sbb pop jge mov add jnp std dec jb mov notb cmp pushf mov popa andl leave ljmp iret lock push jae mov xor jg movb add out sub mov jb mov notb add lock push je mov negl cmp pushf mov popa (bad) mov dec insb lea push jne mov stc sbb pop jle shl and test ljmp out wrmsr push je mov clc sbb pop jge ret es push or dec jo cmp push xchg clc aaa mov sbb scas and scas aam push aaa pop jns mov pop jg ret sub lea push jae mov notb aaa pop jns mov pop jg shl and test dec imul cltd mov pop jle shl and cmpsl enter dec insb lea push je mov negl cmp fwait mov pusha andl int3 in push mov fmull inc jl in sub add imul cld push mov das outsb lods in dec jo mov pusha add add cs jo mov add inc xchg dec insb lea pop jg ret and lret in or mov notb cmp in es push and xchg dec outsl nop mov repz push ja mov pusha andl (bad) icebp adc ja mov pop andl lret in or (bad) jmp (bad) mov cmc push aaa pop jns mov add add xchg lods into out adc push jne mov clc sbb pop lahf fsts mov (bad) out sub mov jno mov hlt adc mov test hlt xor mov int rdtsc push jae mov testl test ljmp (bad) repz push ja mov andb push or dec jo mov hlt adc mov pop andb addr16 test adc sti xor cmpsl (bad) sub or push mov push jp,pt icebp daa pop xchg int bound scas ljmp jle repnz gs push xchg stc ss repz lcall je,pt out pop xchg iret or test add jmp or mov repz loop xor aas pusha andl in daa dec imul mov hlt adc mov add sti sbb test push lods int3 in push das push jno mov hlt adc mov pop add sub mov jb mov stc sbb pop jl mov bound daa dec imul mov repnz stc sbb pop jge shl and mov push jo mov cmc push aaa jge ret and leave ljmp (bad) icebp adc push jne mov clc sbb add add pop jnp mov xchg or dec jo mov hlt adc mov pop jg shl and xchg dec insl mov outsb (bad) mov repnz push jne add test dec insb mov push jae mov dec or inc jnp imull push rcll je loope pop popf aad inc js loopne dec mov (bad) cmp pop cwtl into or mov (bad) nop enter jl pushl outsb test adc xchg clc xor in xchg fsts ja std cmp stos cld dec mov add ja hlt jns or shlb pop (bad) ficomp push mov gs in xchg or outsb (bad) and xor sar mov add ss jp mov popa (bad) mov dec push or mov hlt adc mov arpl dec push lods int push xor xchg mov clc sbb pop jl mov bound cmp loopne add and test dec outsb (bad) scas (bad) icebp adc push je add pop andb popf sbb ljmp aad pop cmp lcall out popf fistp leavew add (bad) or dec outsl nop mov repnz push jne mov clc sbb pop jge mov bound or dec outsl (bad) mov negl cmp fwait mov add cmp popf mov arpl sahf mov xchg leave ljmp rcll xor mov inc mov or dec outsb (bad) mov repnz (bad) sbb push mov push xchg rcll dec xchg icebp sbb mov push jbe mov pop jle mov push repnz adc mov bound sub mov jno mov pop jle shl and test das push jno mov dec add int3 add push sahf add or jl in push mov xchg iret xor push outsb mov and push mov add jp divl cmpsb ficomp push pop sbb sbb add push inc mov xor cld aaa jo imull lret push inc mov or int inc test (bad) jp,pt incb movb mov and fdivrl dec xchg into sbb int push repnz ret pop jl mov bound dec mov out sub mov into out adc push jae mov notb ds andb xchg dec insl mov push je mov clc sbb pop jnp mov pusha andl int wrmsr push jb mov cmc push aaa pop js mov pop add dec push lods int3 in push das push jno mov hlt adc mov popa (bad) mov inc push or mov repz push jbe mov pop jl mov add and andl dec outsl xchg mov cmc push aaa pop jns mov pop jg shl and cmpsl (bad) call mov push jno mov hlt adc mov pusha andl fild and andl push or dec outsb (bad) mov icebp adc push je mov clc sbb pop jle shl and test dec imul jno mov cmc push aaa pop js mov add add loope and test dec insl mov push je mov notl cmp pusha into or add push lods out push jge shl and xchg dec outsb (bad) mov stc sbb pop push sahf loopne pop xchg fcoms pop jo push mov in and out dec (bad) icebp ja inc jnp and rclb nop rorl add cli add les fistp mov or cmp mov or lret mov or add std jo (bad) jg,pt sbb cli cmp sub add rcll out imul xchg or sbb adc out jb,pn idivl jne hlt inc test or fstpl cltd adc add rclb pop lds lods out jno,pn inc test stc cs aam popa cwtl or in mov add sti push mov loope fs aad inc jg icebp sub jecxz arpl jecxz add jl incl int3 (bad) xchg xlat push lcall mov or cltd fisub push stos in popa ret (bad) ds ret mov or mov out outsb mov das imul lods icebp xor mov or fisubl lods repnz movsb call inc xchg or xchg aad pop popf ficoml push mov or add cmp fisubl fs jmp jnp cmp in sub fcoms pop nop leave add add ja out push xchg lret or or sub inc mov sub cmp popa xchg loope xchg add mov sub fidivl add ljmp jno in stos in push mov pop cmp test adc mov and into push jno out cwtl add into add cmp loop data16 ficoml dec mov divl imul outsl scas in sub stos in pop xchg enter repz lret jns divl imul cltd fcompl mov imulb jb jmp cli xor int ss movsb fcompl push pop (bad) cmp out push mov mov fistp lcall addr16 (bad) cmp add mov push popa cmpsl in insl mov cmp add adc lods ljmp jecxz and iret lock push je mov clc sbb pop jnp mov popa (bad) mov inc push add jmp sub mov clc sbb pop jnp mov xchg xchg dec insl (bad) mov pop andb mov or dec outsb (bad) mov repnz std pop inc bound daa dec imul mov clc sbb pop jl mov bound daa dec push lods int comiss xchg mov clc sbb pop jnp mov arpl dec insl mov add add xchg mov aaa lea push js mov xchg dec insb mov push ja mov pop jge shl and test lods int push xor xchg mov cmc adc mov arpl dec push stos int3 in aaa xchg into or cmpl xchg mov add sbb add dec imul jb mov notb aaa pop jns mov pop andb add inc xchg dec outsb (bad) mov repnz std push aas pusha andl lret in or mov repz push ja mov pop jle shl and test dec outsl nop mov repnz cli sbb add inc xchg dec insb lea push jae mov negl cmp lahf shl and cmpsl enter dec insl mov leave dec mov add add xchg mov std push inc popa (bad) mov sub (bad) repz pop jl mov arpl dec imul mov repz push jbe mov pop jl add in xor (bad) pop inc popa (bad) mov inc push or mov repz push ja mov pop jle shl and test dec outsb (bad) mov repnz js mov pop jg shl es push mov dec outsl (bad) mov repnz push jne mov pop andb xchg add push dec jge sub lret sbb mov sbb imulb pop xchg (bad) dec test jecxz and (bad) icebp adc push jne mov stc sbb pop jge mov fsubl dec imul mov repz add pushf mov lea push jb mov cmc push ss js mov pop jg shrl (bad) lds sub and rolb cmp cmp popf mov arpl dec push stos int3 in push das dec jo mov repz push jbe mov pop jge mov arpl sub scas iret lock push ja mov pop jle mov test dec push lods int push das push jno mov hlt pop cmp fwait mov pusha andl lret dec in lahf add sbb aas mov or js repz lret pushl imul insl lods push pop ficom add in jb dec nop into pop push xchg sub mov movsb (bad) out sub mov push jae mov arpl mov jecxz and lret in or dec outsl nop mov repnz stc sbb pop jl mov bound daa inc push or push add mov popa andl lret add add (bad) repnz push jne mov clc sbb pop jl mov bound sub scas iret lock push jae mov clc sbb pop jnp mov popa andl lret sub outsb (bad) scas (bad) icebp adc mov pop andb xchg dec insl lea sbb mov inc mov mov pop fmuls adc mov cli ss testb pop mov dec outsl nop mov repnz stc sbb pop jl mov popa pushf mov add out wrmsr push jno mov hlt adc mov pop jl mov arpl mov jp sub sub sub mov clc push mov add je fcompl xorb arpl add mov push jno mov cmc dec push lods int3 in push das push jno mov hlt adc mov add pop inc popa int pop (bad) movsb (bad) sub mov push jb mov cmc push imul je stos out idivb pop jp mov pusha andl leave ljmp (bad) repnz (bad) pop inc popa (bad) mov inc push or dec outsl (bad) mov repnz push jne mov clc sbb pop jl mov popa (bad) mov pop jg shl and dec imul push jb mov notb aaa pop jns mov pop jg shl and cmpsl (bad) call mov push ja mov inc arpl dec imul mov cmc es mov wrmsr push jb mov negl cmp mov inc stos iret lock cld sbb shl and leave jmp sub outsb (bad) mov repz push js mov imul jle (bad) call mov add std push aas pusha (bad) mov dec imul pop jp mov imul jae mov negl cmp popf mov test dec imul push jae mov cli sbb andl (bad) repnz cmp popf mov jne dec xchg clc cmp mov test dec outsl nop mov repz push jge lret sub (bad) repz add sahf add add mov push jae mov negl cmp lahf shl and xchg push jb mov negl sbb leave add pusha popf rorb inc ja cmp nop lret add outsl cmpsb ficomp push (bad) fistl daa fsubs dec outsb (bad) mov repz push ja mov pop jge mov arpl dec imul jne mov std push aas pusha andl lret add cs outsl nop mov repz push jbe mov pop jge mov test dec outsb (bad) adc pop jp mov test das push jb mov notb cmp fwait mov bound sub mov js mov pop jg shl and add jb mov notb cmp lcall andl into out adc push je mov pop jge add mov arpl dec push lods int rdtsc push jae mov notb cmp lcall test dec imul jae or or dec outsb mov push je mov negl cmp lcall xchg dec insl mov push jae mov notb cmp lcall jg shl and cmpsb (bad) out sub mov je mov clc sbb pop jl add add inc mov or dec outsb mov push jbe mov pop jg shl and mov dec outsb (bad) mov icebp adc push jne mov testl stos lret in or dec outsb (bad) mov repnz ss js mov pop jle ret in and leave jmp lea push jb mov negl cmp fwait mov popa andl imul ja mov pop jle mov add loopne and cmpsl enter dec outsl nop mov repnz cli sbb pop jge mov arpl cs jo mov repz pop jns idivl outsl stos loope xchg mov pop jge shl and cmpsl enter dec insl mov pop jns mov bound pop jnp mov dec push lods into out wrmsr push jno mov cmc push aaa pop jns mov pusha andl into out adc add add xchg mov negl cmp fwait mov inc xchg dec insb lea push je (bad) pop aas pusha test dec insb lea push jb mov cmc push aaa push js mov pop jle shl and cmpsl enter test dec jo mov repz push jbe mov pop jle mov arpl daa dec imul mov hlt adc mov bound add add push daa dec push push cs jo mov repz push jbe mov std jg add cmpsl enter pop xchg iret or int3 add jle jecxz dec cmpl or mov and ret clc add mov sbb sbb mov (bad) pop xchg enter lahf aam push (bad) lret cs xor bound jbe repnz mov pop nop lret jae sbb or fcomps bound inc mov (bad) cmp roll add dec mov adc pusha mov or aad xchg push mov lcall jae push xchg (bad) sbb mov sub sbb push dec mov adc and ds gs cmp jae idivb jg aaa movsl icebp dec call in push adc jno add rolb sub fistp cmpsl in push (bad) negb lret stos fidivr mov loop popa pushf (bad) adc push add xchg aad push (bad) cmp push push xchg fcoms mov aas xchg or push xchg fdivl mov adc pusha mov inc xchg enter mov and aas scas in daa add mov mov (bad) push xchg loopne mov lret add sbb ret add mov pusha into push inc test xor dec les pushf call lret and ficom and outsl test cwtl xlat sub jmp add add pushf jmp inc cmpb push push stos adc jecxz roll xor aam pop cwtl icebp push sahf pop pop fwait xlat adc mov or mov ds in mov insb mov dec nop jnp or in dec xchg cmp loope js out cltd ficoml push (bad) leave add jne out sub loopne pop xchg shll mov add icebp push scas ljmp out jge push pushf push inc mov add dec xchg imul xchg sarl jge out dec mov sub out push lods out xor cs stos repnz je incl iret push pop mov add aad pop mov incb rsqrtps ficomp push xchg int inc jl cld xor and mov icebp ss lock mov inc (bad) sub enter mov and into push inc jp jmp sbb (bad) imulb bound push inc jg add outsl cmpsb fstpl imul add aas ja jmp cmp pop test imul sbb ret jle icebp cs scas in sub fistp push xchg out jbe repz jb,pn push mov aaa jae in jbe,pn jmp inc cmpl outsb loopne insb inc out jg in dec jp fcoml add mov push dec jp ficom inc jne fcoml dec jge std dec jge add (bad) out sub mov jno mov cmc adc in es push add add sub (bad) hlt adc push ja mov pop jge shl and cmpsb enter dec insb lea push ja mov pop jle shl and xchg dec imul jno mov hlt adc mov pop jle ret in and leave ljmp (bad) repnz push jne mov stc sbb pop jge mov bound daa inc push wrmsr push jb mov add add notb aaa pop jns mov pop jg shl and xchg dec insb mov push jae mov notb aaa pop jl mov inc push or dec outsl nop mov repnz stc sbb pop jl mov bound and popf fnstcw cwtl fsts pop scas aam pop cmp lcall andl leave jmp mov push je mov negl cmp fwait shl and xchg dec insb lea push jae mov notl cmp fwait mov xchg lock xchg leave pop cmp lods out cmpsb clc es imul mov hlt adc mov pop jg shl and xchg dec insl mov push je mov pop andb xchg dec outsl nop mov repz push jbe mov pop jle mov xchg dec jo mov hlt adc popf mov arpl sub mov push jno mov hlt adc mov pop (bad) movsb (bad) sub mov jno mov cmc push aaa push js mov pop jg ret and data16 dec jo mov negl cmp fwait mov popa (bad) mov inc push or mov hlt adc mov pop jle shl and stos lret add or inc (bad) rorl aas jge ljmp cmpsl fistp push leave std xor mov add das push fistl inc (bad) leave or push mov or das addr16 jne loope insl stos out pop xchg int3 add mov adc sbb call push xchg rorb pop sahf loope push ja incl int push xchg xlat adc pop xchg fistp push pop sti cmp das popf add (bad) into or inc jns bnd in and fistp pop (bad) int3 push dec cmpl adc xchg std cmp ss clc xor jmp pop fwait icebp dec xchg lret or xor xlat cmp (bad) pusha frstor inc push or dec outsl nop mov hlt adc mov pop jle mov arpl dec jo mov repz scas ljmp test aaa mov lods jmp cmp enter cmpsl loope int3 test mov lret add insb movsb fcompl pop xchg into add adc test push arpl fdivl imul pushf cmc pusha mov xlat adc ret (bad) gs mov pop jle shl and dec push stos int3 in push cs jo mov repz push ja mov pop jle shl sub mov jno mov cmc adc mov pop andb xchg dec insl mov or add jp mov popa (bad) mov inc push or dec jo mov repz push ja mov pop jle shl es push or dec outsl nop mov repnz stc sbb pop jge mov arpl sub mov push jne mov stc sbb pop jge mov arpl dec imul push jb mov cmc push aaa pop js mov pusha andl add add sub mov push jae mov notb cmp fwait mov inc xchg dec outsb (bad) mov repnz push jne mov clc sbb loop and xchg dec insb lea push je mov negl cmp fwait mov pusha andl into out adc push jae mov notl cmp fwait mov pusha andl leave ljmp (bad) repnz push jne mov add aas pusha andl leave ljmp and cmpsl leave jmp sub outsb mov push je mov negl cmp pushf mov data16 dec imul jb mov notb cmp lcall jg shl and test jmp xchg mov hlt adc mov pop jg shl and cmpsb (bad) call jo mov repz push jbe mov pop jle add (bad) in daa dec push or dec outsl nop mov repnz jne mov stc sbb xchg mov hlt adc push ja mov pop jg shl and mov dec outsb (bad) mov icebp adc push jne mov clc sbb pop jl mov popa (bad) mov inc push sbb pop jl (bad) out sub mov dec jo mov repz push jbe mov pop jge mov jl mov bound add add lea dec test dec test inc xchg dec outsl nop mov repnz jne mov clc sbb pop jnp mov pusha (bad) mov dec insl mov push je mov negl cmp pushf mov popa (bad) mov inc add icebp adc push jne mov clc sbb pop andb xchg dec insl mov push je mov negl cmp pushf mov pusha andl add push jae mov notb aaa pop js mov pop jle shl and test dec imul mov cmc push cmp ficoml push mov ss mov pop jge mov arpl dec imul mov notb aaa pop jns mov xchg dec outsb (bad) scas (bad) icebp adc push jne mov clc sbb pop jnp mov pusha andl leave ljmp add add jb mov cmc adc mov pop jge mov arpl daa dec imul xchg mov cmp adc inc bound es push or dec outsb (bad) mov repnz push je in popa fistpl pop int jge,pt push sbb (bad) jmp mov push jae mov notb cmp fwait mov pusha andl leave ljmp mov negb cmp fwait mov pusha andl lret in or mov negl cmp fwait mov popa (bad) mov inc imul jb mov notb cmp fwait mov dec mov push je mov clc sbb pop jl mov bound sub outsb (bad) mov icebp adc push jne mov clc sbb pop jge es cli and test dec imul add ja add add ret ljmp (bad) repnz mov negl cmp pushf mov popa (bad) mov dec push lods int push das push jno mov cmc push ss js mov repz cmpsb add jp or dec jo mov repz push jbe mov pop jge mov arpl dec push mov hlt adc mov pop andb xchg dec insl mov push je mov clc sbb pop jnp add xchg dec insb lea push jae lret in or mov repz push ja mov pop jg shl and xchg push jno mov hlt adc mov pop jg shl and cmpsl (bad) jmp mov push je mov clc sbb inc test dec imul jne mov sti sbb pop jg shl and test ljmp (bad) repnz add ss js mov bound sub mov jno mov cmc adc mov pop andb xchg push jb mov cmc sbb pop jl mov outsb (bad) mov repnz fdivr sbb ret and data16 dec outsl xchg mov clc sbb pop jl mov jle shl es push push das push je mov negl cmp lahf shl and xchg add mov mov or mov notb cmp fwait mov popa (bad) movsb (bad) in daa dec imul mov stc sbb pop jle (bad) hlt adc push ja popf mov test dec jb mov clc sbb pop jge sub loop pop popf in mov push jb mov cli sbb popf add in daa dec push stos int3 in push das push jno mov cmc pop cmp pushf mov xchg dec add (bad) repnz pop jp mov inc xchg dec insl mov push je mov negl cmp popf mov bound daa inc push scas (bad) repnz push jne mov stc sbb pop jge mov test dec insb lea push ja mov pop jle shl es push or mov repz push js mov pop jg shl and cmpsb (bad) call popl mov repnz push jne mov pusha andl int comiss xchg mov hlt adc mov pop andb mov wrmsr push jb mov notb cmp add inc data16 dec insb lea push jne mov stc sbb pop jl mov arpl sub outsl nop mov add sbb pop jl mov test dec imul jb mov add notb cmp lahf shl das push jo mov negb cmp pushf mov xchg dec outsb (bad) mov icebp adc xchg mov hlt adc mov popa andl outsl nop mov negl cmp pushf mov test dec insb (bad) mov hlt adc push ja mov popa (bad) movsl (bad) out sub aad push aaa pop jns (bad) out sub (bad) mov repz push js mov pop jg ret es push add mov pop jle ret in daa dec insb (bad) mov repz push lods int repz push jbe mov pop jge shl and cmpsl leave in comiss xchg mov negb cmp mov push jbe mov add mov stc sbb pop andb outsl nop mov repz loope xor cwtl mov jl mov test push je sti push call bnd add (bad) pop int adc in add out lock jmp and cmp adc (bad) pop xchg dec scas dec mov out dec cmp shll loopne,pt mov shrb dec push cmp inc push pusha aaa mov fmuls inc mov xlat adc and cltd mov data16 jmp in sbb ret iret sub test mov inc inc xchg mov sub (bad) (bad) bnd fimull mov cmpsl popa jbe ja nop ljmp das or stc daa pushf (bad) adc jnp bnd subl jle jle test cmp test test mov test test test cmp test mov cmp test cmp cmp cmp mov test test test cmp test jmp test test cmp cmp cmp cmp test cmp cmp test xor cmp cmp cmp test test test cmp cmp cmp ret call cmp test cmp cmp test mov cmp cmp cmp test mov test test cmp cmp cmp inc cmp test cmp cmp test mov cmp cmp cmp test mov test test cmp cmp cmp ret pop cmp test cmp cmp test clc adc cmp cmp cmp test call aas je jge or scas and lcall push cmp lcall xchg es (bad) push (bad) ror cmpb mov stc xchg cmp jmp cmp test cmp cmp test pop cmp cmp cmp test add test test cmp cmp cmp mov cmp test cmp cmp test mov inc cmp cmp cmp test test test cmp cmp cmp dec cmp test cmp cmp test cmp cmp cmp test dec test test cmp cmp cmp cmp test cmp cmp test dec cmp cmp cmp test test test cmp cmp cmp dec cmp test cmp cmp test cmp cmp cmp test mov test test cmp cmp cmp cmp test cmp cmp test call cmp cmp cmp test test test cmp cmp cmp push test test test cmp cmp test cmp nop test test jne mov test test cmp test test add test test test test cmp mov test test cmp nop test add cmp test test test cmp call test test test test test jmp cmp test cmp test test pop test test test test test push cmp test test cmp nop push test cmp test test test push cmp test test test test mov test cmp test cmp test call test test test test test pop test cmp test test cmp cmp jl nop test cmp test test mov test cmp test test test sub test test cmp test cmp mov test test test test test sub test test cmp test test call cmp nop test cmp test mov test test cmp test test push test test test cmp test mov cmp test test test test push test test test cmp test push test cmp nop test cmp push test test cmp test cmp call test cmp cmp test test jmp cmp test cmp test cmp pop cmp test test test cmp inc cmp test cmp test test push cmp test test test cmp pop test cmp test test cmp inc nop cmp test cmp cmp or test test cmp test cmp xor test cmp cmp test test mov test cmp cmp test cmp cmp jne test test cmp test test mov test cmp test cmp test test cmp nop cmp test dec cmp cmp test test cmp dec test cmp test cmp cmp dec test test test cmp cmp dec test cmp test test cmp pushl test test test cmp test cmp test test cmp nop cmp test cmp cmp test test cmp test cmp test cmp cmp test test test cmp cmp test cmp test test cmp test test test pop cmp test cmp test test cmp nop cmp test cmp cmp test test cmp test cmp test cmp cmp test test test cmp cmp test cmp test test cmp test test cmp test test cmp test cmp test cmp test call test test cmp cmp cmp test test test cmp test cmp test test cmp test cmp test test test cmp push cmp cmp test test test cmp test cmp test test cmp test cmp test test test cmp cmp cmp test test test cmp test cmp test test cmp test cmp pop test test test cmp cmp cmp test test test cmp test cmp test test cmp test cmp test test test cmp cmp cmp test test test cmp test cmp test or test cmp test cmp test test jne test test cmp cmp cmp jmp test test test cmp test and dec dec or xchg mov cmc dec mov jle fisttp pop pusha lret je hlt xchg mov cmp mov push xor outsl daa jbe xchg insl call jae test repnz fwait pop sbb mov fisubl xor sbb push subl adc (bad) (bad) out movsl andl out cmp mov adc in lods push pop pop loop fstpl and (bad) in addr16 sub das pop sarb jno add aam (bad) int3 sbb cmp mov mov or push sti ds xor movsl cld jl sbb aas je jge or scas and lcall push cmp lcall xchg es les sti lret push mov xor add cmp test test test cmp pushl cmp cmp test test test pop cmp test cmp test test mov cmp test cmp test test mov test cmp cmp cmp test push test test cmp test cmp mov test test cmp test cmp mov test test test cmp cmp mov cmp test test test cmp cmp jne test cmp test test cmp mov test cmp test test test cmp jne test test test test test pop cmp cmp cmp test test mov test test cmp test cmp mov cmp cmp cmp test test mov test cmp cmp cmp test add test test test cmp test mov cmp cmp cmp cmp test mov test test cmp cmp cmp add test test test test cmp mov test cmp cmp cmp cmp add test test test cmp cmp lods cmp test test test test test je cmp test cmp cmp cmp add cmp test test test cmp mov cmp cmp test test test cmp jne test cmp test cmp cmp mov cmp cmp test test test cmp jne cmp cmp cmp test test mov test test cmp test cmp push cmp cmp cmp test test pop test test test test test push test cmp test test cmp push test cmp test cmp cmp push test cmp cmp test test push test cmp cmp cmp test push cmp cmp test test test push cmp cmp cmp test cmp push cmp test test test cmp push cmp cmp test cmp cmp call test test test cmp cmp add cmp test cmp cmp test ret and dec dec or xchg mov cmc dec mov jle fisttp pop pusha lret je hlt xchg mov cmp mov push xor outsl daa jbe xchg insl call jae test repnz fwait pop sbb mov fisubl xor sbb push subl adc (bad) (bad) out movsl andl out cmp mov adc in lods push pop pop loop fstpl call sbb cmp mov mov or push sti ds xor movsl cld jl sbb pop ret stc dec or leave mov out (bad) pop sarl mov cmp mov sub (bad) sub mov cmp mov daa or lret mov out and mov cmp or mov mov push pop nop mov cmp mov outsb sti clc stc mov xor and (bad) in addr16 sub das pop sarb jno add aam (bad) int3 sbb cmp mov mov or push sti ds xor movsl cld jl sbb aas je jge or scas and lcall push cmp lcall xchg es sub dec dec or xchg mov cmc dec mov jle fisttp pop pusha lret je hlt xchg mov cmp mov push xor outsl daa jbe xchg insl call jae test xchg hlt (bad) call push mov outsb mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test arpl mov test push add and pop out xchg push mov xor mov mov mov inc mov push mov xor and pop dec sti mov ss lret mov mov arpl mov pop mov (bad) lods outsb mov fmulp insb mov pop mov hlt pop pop mov adc jle pop mov mov lret movsb outsl mov lret movsb outsl mov pop mov cmp push mov outsb mov pop mov mov push outsb mov fcomi outsl mov pop mov mov mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov adc outsb jecxz push mov jmp pop mov jmp outsb mov rcrl outsb mov mov pop out push test lods jp outsb loopne cmp pop mov xor outsb jecxz sbb jmp pop mov cmp loopne imul sbb pop mov outsl inc lret and pop loopne sub mov mov fisubl inc mov jp sbb lret cmpsl mov pusha fbstp mov pop mov adc push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les hlt push les cmp jae pop mov xor xor leave push xor pop mov mov cld cmp in pop pop aaa xchg mov pop mov jo cmp pop mov hlt pop pop push push test outsb mov insb sahf outsb mov mov inc mov pop mov xor lock pop pop mov push nop mov mov push mov mov jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl dec fwait jl and pop out xchg pop mov xor cld in pop pop sub (bad) mov mov adc outsb jecxz cmp pop cmp outsb xor mov mov mov imul mov xor mov mov outsb jecxz shrl pop cmp outsb xor mov pop jbe outsb jecxz in mov pop mov xor mov inc jbe outsb jecxz mov pop cmp outsb xor mov and outsb jecxz popf imul mov push out sahf outsb mov sbb outsb jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg push shll cmpsb mov pop shlb mov mov pop mov xor mov popa mov pop mov int3 lods or mov push pop (bad) nop pop mov jmp pop pop gs pop std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock std daa lock aas sub fisttpll fcmovbe jle pop aas sub push cmp jb pop pop push mov mov pop ss pop mov xor sub fisttpll ficoml insb mov pop mov jmp pop aas sub fisttpll fidivrl insb mov push cmp jb pop aas adc pop mov shll and pop mov inc pop mov cmp jecxz push pop mov mov pop mov push movsl xchg outsb mov pop mov (bad) cmp push mov (bad) cmp pop mov hlt or xchg mov test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push test push stc fimul inc pop rcrl push imul andl outsb mov pop xor mov or cmp fisubr pop mov mov xor push mov mov mov push mov or (bad) outsb int3 pop jb hlt cwtl imull or aaa cmpb pop scas mov lahf jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne rcrl outsb rcrl add xor xchg in sbb sub fisttpll fucomi xchg inc mov loopne cld push ja sbb outsb mov push mov inc cmp outsb ljmp cmp aad jle aad push xor outsl addr16 push xor outsl popa xlat jb jg sbb jns dec insl mov aad in int3 scas xor cmp push xor ljmp cmp or cmp test pop aas cs aad bound adc mov (bad) xlat sti push adc out xor bound cmpsl aaa scas icebp xlat sti bound lahf lock push aaa scas test lahf outsb mov mov outsb mov loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop rolb loop in pop pop fsubl dec xchg inc mov pop mov cld jb mov xor mov mov mov sbb xor add xor add mov cwtl xchg sub mov mov fldt nop inc mov mov xor mov outsb jecxz mov sub stos scas outsb mov mov in add outsb xor mov outsb jecxz stc push (bad) scas outsb mov mov jne pop out xchg dec xchg jmp pop pop out mov aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in aad in push pop push mov sbb xchg inc push pop xchg scas pop mov cmpl loope mov cmp mov mov push aas and pop out xchg sub pop inc mov rcrl outsb mov push in mov pop out out push dec pop inc or jmp push mov push or outsl mov mov mov into pop aas and repnz mov outsb mov inc jmp fisubr mov mov xor adc mov push dec (bad) pop mov inc jmp outsb mov aad inc insb dec cmp pop mov stc pop out xchg xchg jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe jnp jbe fisubr push dec pop in mov mov out push dec pop inc or or outsb xor nop test adc outsb rcrl sbb or cmp mov or adc or cmp add aad out jnp mov mov cmp mov sub in dec mov popf or jmp ljmp cmp (bad) gs pop shr inc pop leave (bad) xor movsb test mov pop mov mov mov mov mov ja pop out xchg dec xchg inc sub mov pop mov outsb xor lods test sti adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb fisubr pop cmp cmp xor mov mov aad inc insb dec mov cmp mov jle popf add mov aad insl repz xor mov outsb jecxz dec xchg inc mov jecxz inc sub xchg imul xchg pop mov stc ss mov pop mov mov insb dec sti and fildl mov pop mov xor mov in jns aas jle pop jbe sub mov mov hlt mov testb add xor out fbstp mov jmp outsb mov mov or pop inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc sahf dec scas inc add xor out fbstp mov ret add mov pop mov ljmp cmp aad push dec mov xchg xlat cmp mov fbstp mov ret add mov pop mov ljmp cmp xlat pop out jp mov mov pop mov cmp out out push dec pop inc or loope sub mov pop fisubr push in or mov mov insb dec cmp pop in add xor ds jmp outsb mov mov pop jb pop mov hlt pop pop jmp pop mov push movsb inc xchg inc xlat xor mov pop mov jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne aas and pop out xchg (bad) mov cmovnp hlt pop pop shll inc inc xchg inc mov js pop out cmp adc aas inc mov xchg mov fisubr pop fisubr adc aas rcrl outsb xor mov ljmp mov cmp adc outsb jecxz popa cwtl inc mov jmp cmp fs pop pop ss pop mov push in xchg inc xor xchg imul mov mov pop movsb outsb mov add mov pop mov outsb mov fisub out dec mov mov fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or fidivrl xlat or cmp outsb loope mov out push dec sbb mov mov outsb xor mov stos dec mov jecxz adc jmp xor mov call insb dec mov mov pop mov xchg cmp dec popa mov mov stc push dec mov push dec mov mov mov insb dec mov add outsb jecxz icebp fwait inc mov mov xor mov mov mov jecxz test lds outsb xor mov mov fnstenv mov pop mov xchg pop movsb outsb mov pop mov pop pop mov xor cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp out xlat cmp outsb mov pop mov jmp pop mov push into mov mov pop mov xor sub pop mov cmp arpl push push mov outsb test mov jns xor mov pop mov mov xlat outsl mov pop mov cmp arpl ljmp mov mov mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov mov mov cmp pop mov pop je cmp arpl outsb mov pop mov cmp ret pop mov int mov negb xlat sbb test outsb cmp or pop mov int mov pop je cmp arpl ljmp aaa shrl pop mov mov mov mov mov jmp dec fldcw leave enter pop cmp dec add xor xchg in data16 jp mov mov pop mov inc jmp dec stc lds outsb push xchg mov or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or cmp or push mov jmp dec fldcw leave enter pop lea dec push mov jmp dec fldcw leave enter pop test ds mov jae inc mov xor inc mov ja mov pop fsubrl pop mov into pop aas xor repnz mov sub cs jmp dec fnstcw pop mov xor mov ret mov mov jmp dec fldcw leave enter or daa cmp mov outsb mov pop add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add fisttp out add xchg cmp out mov pop mov push fidiv inc insl dec sti adc imul xor in push dec pop inc or xor mov inc pop mov outsb (bad) lods outsb mov aad jle push cld out dec aaa xchg pop ljmp sahf mov xor or dec mov test mov test cmp outsb int3 test out aad bound cltd mov mov and outsb mov pop xor outsb out fistp mov lret lods outsl mov fbstp mov pop jae push mov inc mov pop aaa xchg xchg mov mov ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop ja inc nop mov jb mov push xor outsb dec cli pop lods stos pop mov xor je mov pop mov jno popf mov js stc jp cmp aas jb cmp jp cmp mov mov mov bound xchg mov inc pop xorl aad bound popf mov mov xor xchg imul fisubr pop fisubr pop mov cmp dec cmp xlat jb les xchg cmp and pop mov (bad) adc mov mov imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul in jns fisubr mov cmc outsb mov jle outsb mov or in push mov clc pop mov loope mov xor mov es pop jbe mov addr16 sbb inc mov out fbstp mov xor add xor add ss mov push cmp scas test sub imul mov jmp or jmp pop and sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub pop mov mov push mov mov mov movsl push aaa scas mov sub xor or cmpsb lcall pop mov push pop pop test lahf mov jle mov insb fistp aaa scas mov sub shrb xor mov outsb mov mov mov xor add ss mov push cmp outsb push mov outsb mov pop mov push in outsb mov push mov push dec mov mov pop mov jo test xor das cmp outsb int3 lods mov push inc movsb outsb mov pop mov xor mov outsb mov xchg jb,pt fimul int cmp cmp mov push cwtl repz lret nop fistpl mov mov pop mov out aad bound mov mov out jge movsl push xor mov sbb scas mov jl js pop mov std sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub sbb sub aad bound mov mov rcrl push mov cwtl mov inc jmp dec cmp mov mov in push pop test pop mov cmp sbb and inc push mov jb mov or xor mov rcrl outsb rcrl add xor xchg in sbb push and push mov xor add mov jbe,pt inc hlt sub data16 dec popf test test sbb scas mov mov in add mov mov pop mov push pushf mov jne ret cwtl outsl mov pop mov mov mov bound push mov bound push mov bound push mov bound push mov bound push mov bound push mov bound push mov bound push mov bound push mov bound push mov bound push mov loop scas out jbe outsb mov outsb mov inc jmp outsl mov mov mov xor nop outsl mov pop mov push cmpl xor mov outsb mov xchg cmc push movsl push rcll mov addb mov andb mov out push pop movsb outsb mov xchg aas xor or sub gs int3 movsb (bad) in inc pop rcrl push or mov push pop or pop aam and outsb loop scas out outsb mov mov pop mov and mov mov cmp outsb (bad) dec outsb int shl lea scas mov mov jbe xor pushf outsl mov jbe outsb mov pop mov mov ret mov pop lea push xor movsl push cmp scas pop (bad) push push (bad) mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov cmp mov mov pop mov dec fisttpll int3 jge jmp pop mov mov je xor nop outsl mov pop mov fcomps pop mov aas pop jg mov aam mov movsb xor outsb xor nop (bad) mov sbb lods mov or movsb dec xchg xor dec mov mov test outsb mov adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and pop mov scas mov mov popa (bad) lahf cmp loopne inc in jp shrl push fnsave int3 test dec mov sub in jp test add dec out lds outsb int3 lods cmc in push (bad) in jp cmp movsl xor outsb ljmp outsb jmp repnz mov pop jb add mov call cmp or sub or fdivl fistpl pop pop sti push mov mov inc mov dec xchg mov mov data16 es cli push push mov pop aad dec cmp outsl xchg inc sub or insl xchg inc mov mov adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc mov fadds mov mov (bad) sbb sub add cmp sarb movb xor mov cli sbb cmp or aaa (bad) sbb aas fsubs fdivl fistpl pop pop jl mov clc bswap sub sbb xor outsb push sub rcrl cli sub sbb lret push int movb cmp pop lret sub pmullw roll (bad) sub outsb push pop insb xchg inc sbb sbb aaa xlat add int pop (bad) mov jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp dec popf jp xchg sub add aas les sarb ret and or fildl mov mov movb xor sbb or sbb aas shrb jne xchg inc adc sub fmull fcompl aas shrb rcrl pop mov les xlat sbb or sub imull cmc add xor bswap cmp pop lret sub pmullw roll (bad) sub outsb push mov (bad) xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add mov test cli sbb cmp sbb cmp push lret cmp or mov shrb sub push lret cmp or mov shrb sub push lret cmp or mov fildl aam fimull cmc aaa fimull out pop pop std push mov in (bad) cmp icebp ds daa mov push mov xchg (bad) cmp sub aaa shrb xor or sub dec xchg cli sub bswap cmp sbb cmp mov sbb (bad) sbb or fisttpl (bad) xor and sbb pop int pop scas mov sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope sarl loope std pop xchg inc sbb or cmp or jmp sub insl xchg inc or sbb sub add sub sbb cmp pop jge mov shlb sarb bswap daa cmc outsb push or fstpl xor add sbb outsb push (bad) mov mov mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov push (bad) pop mov testb sub add sbb or cmp sbb xor outsb push sub inc sbb sarl xor sbb or sbb aas shrb pusha push xchg inc sbb sbb sub or fsubrl pop xchg inc or fldl lret aaa rclb xor sbb push dec cmp mov mov fldl int3 cmp or sub sub cmp sbb mov rorb aaa fmuls out pop pop inc outsb mov rorb aaa fmuls mov mov shll fdivs rolb fcompl bound dec cmp fsubrs shrl shrb or cld es push movsl mov mov push mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov data16 mov push pop pop xchg inc or mov mov lret add insl xchg and inc or fmuls clc sub sbb cmp sbb sub arpl fstpl fldl fcompl icebp insb mov fadds cld rorl mov mov fildl fimul aad rcll aad fmull mov push mov in cmp add xor sbb push movb cmp sbb inc mov fldl fmull pop cmpsl outsl mov loopne aam in int jecxz push fwait mov mov ds fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw aam fnstcw pop push dec mov mov clc scas dec xchg divb xchg sub sub sbb or sbb idivl int3 sbb jecxz rorl xchg push cltd sbb shll (bad) or ljmp cmp fwait ja fs decl sarb fwait push ljmp fildll ret bswap cmp and cmp rcrb in fldl fnsave ret sbb lret cmp sbb cmp sbb jmp fisubl xlat cmp imul or push ljmp or or pop int xchg add adc mov dec mov xchg fwait jb cmp sbb cmp out sub fadds xchg or add (bad) dec xchg mov and inc pop mov mov mov pop and mov mov sbb mov push pop insb xchg inc pop pop push push mov fmuls xlat aas (bad) xchg cmp or mov rolb aad rcrl mov addl (bad) sbb daa xchg and fdivs shrl inc bound (bad) pop pop jo mov into outsb push add xchg inc add repz pop scas mov mov subb outsb push cmp push outsb mov and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and (bad) and sahf mov pop sbb cmp stos cmp clc in xor js insl adc sarb shl push add je jp inc lea flds push (bad) pop test push scas push mov mov dec xor ss dec leave dec mov scas lret mov or push jo xchg lock bswap lret sahf push faddp sub lods aad dec jae mov add (bad) pop pop fildl (bad) xor sbb sub fsubrl icebp cmpsl rorl cmp push jmp (bad) ret mov ret xor pop mov cmpsb jae adc rcll cli test mov sub xchg in shl iret popaw jns (bad) stc lods sbb mov mov je pop lea in jb lds fdivrl les movsb pop bound cmp fbld jp mov sbb and insl xchg cmpsl dec sbb in mov hlt fildl mov jge ret in fisub ds mov outsl mov pop arpl loop out mov lret jmp inc insb repnz or dec sahf jbe xor push sub into rcll (bad) adc jg push data16 rcrb cmp and sbb (bad) xchg jle adc mov test dec push mov sub push and pushf and ret daa pop jae pop push push cmpsb xchg adc mov sar ljmp sbb push in call xor (bad) xchg enter xor sub js mov and fwait add add dec or cmpsb jmp sbb pop push sub mov scas test hlt paddusw rolb cmp xor xor push adc dec inc sahf in inc mov rcrb jmp notl push cmp jnp repnz pop ljmp orb popa inc int sbb (bad) bound mov lret into dec dec (bad) aaa clc xor (bad) movsb ret lods or add cwtl inc cmp pop sub inc ja lret nop fcmovb daa aad mulb dec mov scas out mov adc cs cltd cltd xlat xchg or xorl outsl push sbb push in mov xor xor dec sbb loopne jge insb frstor mov popf int3 push xchg xchg add cmp mov or adc cmp pop pop cli xchg movsl or lcall insl das mov pop push jns mov loope cmp pusha mov sarb mov ja and push and dec call and sbb mov movsl lret (bad) push adc outsl lock push mov xor sub lcall xchg add sbb pop xor inc sub ds adc (bad) cmp dec test dec jl xchg arpl add mov add jp inc ljmp sbb (bad) mov (bad) jmp mov andb xchg fs jge sbb bound push xchg xchg out rsqrtps sub iret push les xchg es sub cmpsb pop dec inc sbb in pop jbe xchg cmp cmp lcall cmc clc cmp add xor sub fldt add inc bound decb aaa jecxz lods jmp jo (bad) push in shrl lods jne xor or mov xchg int lcall adc mov stc pushf out xchg lock not mov xchg loopne into xor add ds add insb je add push add add add add and add add or test add add add adc add add add add into or add add add add add add add or add add addb add add add add adc or adc or adc or adc adc add adc adc push sbb add sbb les sbb sbb and and add and add and sub sub add sub xor add xor cmp add ss add cmp add cmp add das add xor inc cmp add xor inc cmp add xor inc cmp add sub inc cmp add and inc xor inc xor add adc dec cs add or dec sub add add dec sub add add push sub add pop xor add add or add pop xor pop add test pop cmp add or pusha cmp add push add adc arpl adc arpl adc arpl add add add push add pop add sbb inc sbb inc sbb gs sbb inc sbb inc push add add and les add sub push inc add xor push inc xor push inc xor push inc xor add cmp push dec cmp push dec add add add inc add inc add inc add dec add dec add dec add push add push add add dec add inc add inc add (bad) incl jo xor add sub jno sub jb sub jae sub je sub jne sub add xor jp xor jp xor jnp add add cmp jle cmp jg cmp andb (bad) inc add push inc add insl dec add outsb dec add outsl push add jo add jb add jne add jns add les xchg jge add andb andl fwait andl test popf xchg sahf mov lahf mov mov mov mov nop jnp lahf nop jge mov xchg jl test xchg jg stos cwtl jg stos cwtl addb cltd addl mov test mov xchg add add mov mov mov mov mov mov mov mov mov lea mov mov mov nop add movsb xchg add movsb cltd add movsb or stos movsb mov add movsl add stos cmpsl add lods cmpsb add mov add scas pushf add mov add mov add mov add mov add mov add mov add mov add mov add mov mov add mov mov lret (bad) mov int3 ret mov add (bad) mov add leave les into lret into int3 lret int add iret into add rcl add rcl add aam add aad add xlat xlat add (bad) add fcmovnu add fstp add (bad) add (bad) add (bad) add loopne add loope add loop add jecxz add in add out add out add jmp ljmp in in add out out add out out add test add icebp lock repnz add repnz repz repz add cmc testb idiv add clc stc add stc cli add sti sti add cld cld add std std add std std add or or push add add or (bad) fldz out (bad) fld1 movb adc adc prefetchw add push (bad) xchg (bad) loop loopne loop jmp hlt idiv std std std stos shlb (bad) pop push pop scas ret ror into rcl fsub loop out lock stc std std movsb cmpsl xchg nop mov mov enter enter xlat fsub loop out div std std std std lahf mov push push (bad) enter mov rcl (bad) loopne out out div idiv std std cltd cltd (bad) (bad) pop dec pop mov mov into rcl fsub call idiv std std std xchg xchg jbe dec xchg test ret (bad) xlat (bad) fsub loop out stc std std std std std std xchg mov mov mov mov mov enter mov rcl rcl rcl (bad) loop std std mov mov mov mov cmpsl cmpsl xchg mov rcl fstpl mov (bad) mov mov (bad) (bad) (bad) pop pop pop push adc push push scas rcl rcr (bad) adc xchg pop push push push push push push push push push push push sbb rol rcl fldl mov (bad) pusha pop pusha push push sbb sbb push pop pop mov cmpsl rol (bad) pop pop test mov imul scas mov std std std std std std std xchg mov adc inc mov int3 xlat fsub call stc stc div div or stc nop mov (bad) fcoml jle mov call div out out out not mov rcl or outsb outsb outsb imul div hlt out out call movsb mov test jae js outsb js std std hlt out out out out call lahf lahf cmpsl cmpsl mov inc imul arpl and std imul jmp loop (bad) mov mov ds dec and and and and and fdivr call xchg mov pop or cmp inc sub sub and and jmp loopne xlat xchg cltd cmpsl pop or imul (bad) call outsb std loopne ffree jnp mov pop or jle enter call pop dec jbe rorb xchg jnp mov pop or outsb int3 out loopne call jb js (bad) fdivrl test lcall xor mov call outsb outsb outsb imul jle test pop jb xor inc ds idivl imul jb jnp jle test jbe cmp sub imul jae jbe jnp test xor cmp cmp inc inc imul jbe jnp jle push push outsb je cmp cmp ds inc inc inc xchg jae jbe jnp dec push outsb je cmp cmp cmp je inc imul js dec push imul xor sub xor xor xor ds inc inc imul test mov mov mov xchg cltd cltd lcall cltd lcall lahf lahf lahf lahf lahf lahf lahf lahf pushf lcall cmpsl cmpsl stos mov add sub add adc add and add add or add add inc add add add add add add adc arpl add add push add sbb addr16 sbb addr16 sbb add push add sub inc inc cmp dec or add xor pop dec cmp arpl test and imul insl dec add sub jno sub je sub add xor jbe xor je xor jns xor add cmp jbe cmp add cmp jge add add inc add add inc add dec add dec add dec add dec add dec add dec add push add add push add inc add dec add push add push add push add pop add pop add push add add push add add popa add add add addr16 add imul insb dec add outsb dec add outsl push add jae add je add jp add pusha add ja add jg add add jl add andb (bad) data16 (bad) insl add cmpb test mov jno xchg test xchg lcall add mov cltd mov mov mov movsl nop jbe mov xchg jns test jnp test jl fwait popl add xchg popl lahf fwait xchg add xchg addl movsl xchg test stos xchg addb fwait test scas pushf test mov cltd lea test pushf mov scas sahf mov lods lahf lea mov mov mov mov lea scas mov cltd add movsb sahf add cmpsl xchg add lods popf or scas popf add stos cmpsb add stos cmpsb add scas cmpsb add scas test mov mov add lods add mov add mov scas add mov mov lds mov ret mov mov add lds add leave les ror les ror movb into enter int3 add rcl add aam add xlat aam fcmovnu xlat add fcom add fstp add (bad) add loopne add jecxz add out add call ljmp in in add out out add lock add hlt cmc add stc cli add cld cld add mov add rcr add (bad) incl add add das add add add dec add add iret add add adc add push movl call in call lock (bad) incl add add sub das add push add jo xchg nop add add add add add adc add xor add push incl divb add xchg incl stc mov add sar add (bad) incl add add les das add add push add add iret add adc add push incl ret add xchg incl fdivl incl (bad) (bad) incl add add or das add add adc add add add add lock adc add incl jno incl mov add mov add sar add (bad) incl pop es sub jo stos mov mov mov xor push jg popf movsb stos mov mov xor cwtl mov mov bound fwait lahf mov mov arpl dec dec cmp das cmp js xor and sub push outsb sbbl jno pushf mov mov mov push jge mov mov xchg sbb cs lods mov ja xor push wbinvd or dec scas mov push inc pop push adcl pop xor pop jb mov adc sahf jae dec push push sub add test adc jnp cmp inc dec daa inc add add jnp push adc sbb inc add add sbb addr16 push jbe sbbb or test add and add fs je xor orl add loop add inc add incl add dec add addr16 add add add add sbb (bad) (bad) (bad) incl add add add mov dec add dec add add add add add add mov (bad) (bad) incl add add add mov dec add dec add add add add add add lods sbb add (bad) (bad) incl add add add (bad) (bad) (bad) incl add add inc add sbb dec add inc add xchg dec add inc add push inc add xchg dec add int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl xor push mov mov mov mov mov mov mov mov mov mov mov mov mov call mov call mov call push call mov mov lea call cmp jne push push call mov mov lea push push call fnclex cmp jge push push push push call mov mov lea push push mov call fnclex cmp jge push push push push call mov lea mov call lea call fldl call mov push call mov lea call mov mov mov lea push lea push call push lea push lea push call push call push call mov lea call lea push push push push push push push push push movl movl call fstp lea call fwait push jmp lea call lea call lea push lea push push call add ret mov lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor push lea push mov mov mov mov mov mov mov mov mov mov mov mov mov mov call lea push call mov lea call lea call cmp jne mov push push call jmp mov mov mov push push call fnclex cmp jge mov push push push push call jmp mov mov test jne push push call mov mov push push call fnclex test jge push push push push call mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov lea lea movl mov movl call call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov call mov lea push call test jne mov lea push lea mov push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov push mov call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov push mov call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge jmp lea push lea push movl mov call test je mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov push mov call fnclex test jge push push push push call lea call push jmp mov lea push lea push lea push movl movl movl call mov lea call lea push movl movl call mov cmp jb call lea push lea push lea push lea push call push lea push call push call mov mov lea push lea push movl mov call test jne mov push call mov lea call mov lea mov movl movl call mov mov add push jo push mov call cmp jne call mov cmp jle push lea push lea push movl movl call mov mov call push push call push push call push call mov call mov test mov mov jne push push call mov push lea push call mov push push push call add push lea push call push call mov push jmp lea call lea push lea push push call add ret lea call mov lea call lea call mov lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop nop nop sahf sahf sahf sahf sub or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp add adc add or push jg add or mov add jle or nop jg add jg add jg add jg add jg add jg add orb push orb orb cmp or dec orb pop orb jb or push add orb add or orb push add sbbb add orb xor add mov orb cld orb adc or sub or push orl add or mov or lods orl add orl add orl add (bad) or sbb or add subb or cmp or push (bad) or push or js or (bad) (bad) or xchg (bad) or mov (bad) or mov (bad) or int3 (bad) or faddl add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add pop pop jbe popa push popa jb imul pop jbe popa inc jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb ljmp dec outsb inc jae jb add add jbe popa dec jb jae insb je push bound add add jbe popa dec outsb push popa jb test pop popa fs imul xor lcall push popa jb outsl jb je pop pop jbe popa inc jns jb push popa jb cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 popa inc outsb gs je inc outsl jne fs jb outsl jb add bound popa jb jae inc jno or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add dec add jbe popa push dec xor add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl dec add jbe popa push dec xor add mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push bound outsb fs add jbe popa dec xor jb add pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs add jbe popa dec popa je dec gs inc popa insb insb add ja pop pop jbe popa push popa jb outsl add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add sbb pop pop jbe popa push cmp je xor add add jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add lods add jbe popa inc jb gs bound add bound jb gs je 