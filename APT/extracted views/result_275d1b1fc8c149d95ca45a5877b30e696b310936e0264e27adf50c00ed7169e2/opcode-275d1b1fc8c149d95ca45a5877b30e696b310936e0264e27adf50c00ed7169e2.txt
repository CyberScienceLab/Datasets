addb add add dec add add add add add adc add push sub add add mov jae add or add add adc add add sub add or add sub add push add sub add sub sub add xor add add add add add sub ljmp push (bad) incb or or add or cmp (bad) decl and scas lret adc inc or add add aas sub add or add add or outsl add add add in add incb push incb adc adc sub pop pop adc sub pop adc add add push add or add ficom adc pop add or or add es add and mov add push and cmp add pop and mov and mov or adc and or pop adc add or loopne add daa adc sub and rorb or cmp or incb push incb adc adc sub out add and scas notl mov adc or mov push sar push incb adc adc sub add add add add or add sub add adc or or add sub add or add add jo or and mov adc and pusha add mov adc adc add add add or adc and add adc cltd inc mov adc adc add or add or or and scas lods pop dec add adc and push add adc or adc and testb pop adc add adc push in add add daa adc sub add adc inc push add adc add push jb add jo pop and cmp sub sbb sbb psllw add add incb adc adc sub rorl and ds into aaa xchg add sbb (bad) flds add sbb jb sbb add jo sbb aas cmp mov divl adc pop ret adc and cmc adc and and mov jne adc and and rcl add and or and or add and adc rcl add add daa adc sub add adc add sub add add add add xor adc add add xor sub add add add add fldt decb and mov or add popf lret jge rolb or push pop ljmp and pushf xor adc add add add add or or add add adc add add push in (bad) adc and adc mov add adc pop adc and or scas add add or xor (bad) call or jo or jno add adc and add add incb adc adc sub and adc add adc and inc push add mov lcall adc and loope sub add adc bound pop pop adc and imul mov add adc jmp push and pop and xorb addr16 adc adc and fs incb push incb adc adc sub add add add inc sub add or sbb sbb and cmp sub add or adc adc adc sub add or adc adc sub adc sub add or inc xor add adc add add sbb and add sbb push jnp add sbb pop adc add sbb sbb add add add incb adc adc sub and add sbb jb add jo sbb jo push and hlt aad rcll add add add adc and add add add inc sub add or pop sbb adc adc push and mov add mov adc adc jae add or and and and sbb add or add pop adc inc add and add jo and dec dec xchg out enter and lcall add and rclb and add daa sub add xor popl add add add add add jo push jb add jo pop add or push jb add jo pop add or push jb add jo pop add or sub add push jb add jo jb add jo sbb add outsl sbb add je add sbb add or push or add or add adc pop add push add adc pop adc add mov add add add add add sbb add add jnp add add sbb add add add xor add add adc add sub add pop or add sub add adc add aas add add sub add push add add outsl sbb add je add sbb push mov incb push incb or sub add add jnp add add sbb add add sub adc add add xor add add adc pop xlat or lcall mov and or add incb push incb adc adc sub push sub add add sbb add adc or lds adc add push or cmc xchg mov incb adc adc sub add add add inc sub add or jb add jo out add jo sbb add adc sub jl sbb adc jb add jo or (bad) je add or or and push incb adc adc sub and mov or jb add jo adc add adc add add add add add add add sbb add add add add xor add add add adc add add add sbb push or adc push pop push pop xchg pop sub add push popa rcrb pop push mov add or add add add adc push add add or add add add add add push add or push outsl pop add or add jo or add pop sbb or pop push lea add add add add sub add add add add and add add add add xor add add or add add sub add add add incb sub pop add push sub add add and add add add sub add or sub xor add add add add add add or add add jae add or add add jae add or add add jae add or add add jae add or add add sub add or add add add or or daa add or add or add add add inc add jo sub add add jnp add add dec pop pop jae add or add or add add add outsl sub add add jnp add add push add jo sub add add add outsl add or add add add incb pop add push jae add or add or add add add pop pop or daa add or add or add add add popa add jo sub add add jnp add add dec pop pop jae add or add or add add add outsl sub add add jnp add add jno add sub add add add outsl add or add add add incb or add jae add or add or add add add incl add pop or daa add or add or add add add jnp add sub add add jnp add add dec pop pop jae add or add or add add add outsl sub add add jnp add add mov add sub add add add outsl add or add add add incb or add jae add or add or add add add scas add add or daa add or add or add add add xchg add jo sub add add jnp add add dec pop pop jae add or add or add add add outsl sub add add jnp add add movsl add jo sub add add add outsl add or add add add incb or add jae add or add or add add add outsl xor add add jnp add add or sub add or add or add add add mov add sub add add jnp add add add add inc jae add or add or add add add outsl sub add add jnp add add incb or add jae add or add or add add rolb add jae add or xor add add pop sub add push add add jg sub add sub add or add aaa add or jnp add add cmp add add sub add or jnp add add cmp add add sub add or jnp add add cmp add add sub add or jnp add add cmp add add sub add or jnp add add cmp add add jb add jo sub add add jb add jo sub add incb add add jae add or cmp add add push sub add or sub adc add add push sub add or push sub add add add push sub sub sub sub add or add sub adc add aas add add add adc jle add add sub add push incb or sub add jo add add sub add outsl inc add or add or push orb add jle add add sub pop sub adc add or add or add add add add sub push sub and add sub add adc add or add or add add add add sub push sub push add dec add or push jae add push sub add je add add sub add out mov xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add inc push inc inc push mov add mov add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add inc push inc inc push mov add (bad) add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jae gs cs je imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp xor cltd test sub popf mov (bad) les pusha enter into loope test xlat mov (bad) out int3 mov mov sub push pushf add and bound in lcall out insb pop jbe cli outsl sbb add push add add add add add add add add add cmp add xchg add add add add add add add add add add add mov add add add sub add xor inc add add push add cmp data16 dec add add cmp dec add inc add add add cmp imul jns add outsl add inc add dec add add add bound xor add cmpsl push add sub jb arpl jno cmp dec add imul add xor dec add insb add add arpl xor dec cmp add xor xor inc add add inc add outsl add add insl add add push add bound dec add cmc pop add sub bound dec add jo insl add jae dec add push add add xor push add add add imul jae insl add popa add push add push add jns push add add add add js push orl add dec add jb push add push add add add imul sub add aaa add pop add add push add add xor dec add push add insl add imul iret lds add push add jns inc add inc add push inc add dec add jae dec add xor dec add jo jbe jbe add sub push push add add add inc add insl add cmp inc add add add push add popa add push outsl add je push add push add add dec add add inc add add add les add sub jp push add jae push add pop add add je inc add push add inc add cmp push add imul sub inc add xor dec add add push add add xor push add ja inc add xor dec add add pop add adc je jae imul je jae imul sub pop add push add pop add add add bound jp jns add dec add dec add jne aaa add add push add add add add add add xor dec add push add sahf add sub pop add imul add pop add push add add push inc add pop add bound push add mov add outsb add add outsb add inc add add inc add jno dec add arpl je test add and pop xchg add add or repz push adc adc sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp mov pop clc dec inc icebp dec mov dec pop subl cmp and cmp inc add inc pop adc dec add sub cmp push pop js jge jns jnp jge jg les xchg or (bad) nop xchg xchg xchg je xchg xchg xchg cwtl xchg fwait pushf jae lahf mov movsl cmpsb cmpsl push movsl test lods lea mov mov mov cltd mov mov (bad) (bad) int3 leave lret int iret (bad) mov rcl xlat (bad) xlat fcomp fcmovu (bad) sahf pop loopne repnz cmc out call std out out lock repnz div clc stc cli sti cld std (bad) call add push pop or or or push movups adc adc push pop sbb sbb sbb push pop and and and sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop jns pop push pop pop pop pusha popa bound gs dec push and outsb outsl jo jb je jbe push or jle xor addl mov mov xchg xchg xchg xchg cwtl cltd lcall rcl rol movsl cmpsb cmpsl test stos stos lods lea mov mov mov mov ret (bad) out scas cmpsl mov rcl rcl xchg aam fcomp fcmovu fsubrl (bad) loopne loop in out call in out lods lock repnz cmc div clc stc cli sti cld std (bad) call add or push or adc inc and sbb and push sbb adc and andl sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec inc popa push push jne push push pop pop pop dec pop das pop pop pusha adc fs dec imul gs jnp bound ja jae jnp jge jg mov addl mov mov xchg xchg xchg xchg call in movsb mov scas aam test shrl mov mov mov mov dec rol aad test mov ret aam ret test rcr fst mov loope jmp loop in icebp popa out out icebp loop loop jecxz pusha clc stc mov hlt jmp jae adc pop jp or jl pop push or adc sbb aaa and and xor and (bad) sub and cmp and cmp dec pop cmp dec das dec inc inc dec push mov inc popa dec dec pop pop push push inc pop cmp pop push dec push dec push fs sahf popf mov xchg push inc addr16 jns jl jne ja jns insl (bad) jl jne mov test cmpsl mov xchg xchg movsl xchg ds lcall xchg mov cmpsl stos test mov mov mov mov es mov cmp aad fxch out int3 lret rcl fcom mov iret and iret fxch fcmovne call out loop ljmp loop repz negl in add in sti adc imul pop dec pop sbb jg sbb push or xor aaa and sub sub sub sub xor daa add cmp cmp dec push dec dec fistl pushf rcll inc or push fnstenv cmpsl pop push push jo pop imul dec data16 imul outsb outsl jo jb je or jns or xchg (bad) orl pushf pop sahf lea xchg xchg lahf xchg jmp out aam lahf ror mov movsb scas aam test mov frstor addr16 mov vshufpd leave lret lret mov rcl (bad) rcl cmc (bad) fcmovnu fstp fnstsw loope sti in in xchg out jmp fwait cmp out cli subl ljmp incl or add add pop or or es adc adc pop pop cmp sbb and es sub sub sub push aaa xor cmp aaa ss push das cmp ss stc cmp inc inc dec xor and dec pop and fisttpl pop pop inc xor pusha imul pusha inc addr16 insl outsb outsl jno jb je ja inc inc jp jge jle mov xchg mov cwtl loope xchg xchg out (bad) lcall ror mov movsl lods aad stos stos fcmovnb mov mov mov mov mov ror ret sbb loopne enter out into iret rol rcl aam xlat xlat loope fcmovu fstp (bad) jecxz loope lods in out jmp cli out lock repnz mov clc stc (bad) stc mov std pushl add add cs or add push add push push sbb xor push pop es daa and pop and sub sub cs xor sbb add cmp cmp cmp inc inc inc daa push dec dec inc call pop js push jl dec imul popaw bound jno dec push pop push jne jb jae jbe js push je jge jg xor xchg mov lcall xchg ljmp lahf mov movsl (bad) (bad) mov stos mov mov popf movsb mov mov mov leave rol fadd mov leave lret lods int mov (bad) movsb mov fldcw aad pop jecxz in enter jmp xchg in sahf (bad) repnz repnz in idiv stc cli stc mov add add je or jp adc adc sbb pop pop sbb or sbb push pop and and add cs sbb xor ds ss pop cmp inc xor inc arpl pop dec dec cmp pop inc stos push pop pop jne pop jae pop pop pop pusha popa pusha adc imul pop xor pop insl je jl xchg jae jne push (bad) addl sti movsb (bad) mov xchg in mov pushf xchg xchg lea cmpsb cmpsl scas test lods scas rcrb ljmp mov iret int3 call leave lret mov rcl shll into repnz fstp fnstsw jecxz aam in iret ljmp out sbb repz jmp or cmc repnz out mov sub push pop push or or adc adc push sbb pop and push jle and sub cmp das and sbb xor xor dec das adc cmp cmp xor inc inc xor outsb inc dec dec dec dec dec dec cmp push push and push push jl add pop sub inc pop pusha imul outsb dec popa imul jo jo xchg jno pop push jnp jnp jns pushf test xchg mov xchg xchg xchg ljmp lahf mov movsl (bad) (bad) mov stos mov mov mov mov mov mov ret (bad) out mov lret leave mov (bad) rcr fdivr (bad) lock fcmovnu fstp fstl int out ret out in sahf (bad) out icebp repnz loop idiv lock sti aam (bad) incl add add add js or or jl adc bound or sbb adc push pop or and and das sub das xor inc outsb aaa xor cmp sub aas xor dec inc inc insl push inc dec dec dec dec dec aas leave dec push and push push jge add inc pop pop push pushf bound dec outsb push insl push loop jne pop jp jp jbe fstpt icebp mov clc mov cwtl jno popf lcall cltd nop jmp mov cmpsb lahf imul lcall mov mov leave mov ret (bad) mov mov rcl shll ret aad pop jecxz in enter leave ljmp sbb cld clc rorb pushl sbb add adc or es loope push xor sbb push push push xor daa push and sub cmp das and sbb xor adc adc cmp dec sub pusha inc inc dec dec inc insb insb dec cmp dec ds push push pop inc stos push pop push je pop je pop pop push inc arpl inc push push insl or jae arpl js jl push jge jg mov andl lcall loop xchg xchg xchg mov fwait popf sahf fwait cmpsb into movsb mov test scas xorl mov cmpsb mov mov enter into ljmp into (bad) rorb push (bad) icebp (bad) (bad) loopne jecxz clc clc out jmp in in (bad) fdiv repnz hlt fcomip imul leave clc sti mov (bad) decl add adc gs add adc sbb adc or sbb sub and sub cmp sub xor pop cmp aaa xor les pop cmp aas dec dec outsl inc inc push dec insb dec dec pop inc addr16 dec gs popa push push lds push push pop pop dec pop pop sub popaw adc gs bound add push inc jb jb jg or jns hlt js lock jmp xchg xchg xchg jecxz mov lcall mov cmpsl scas mov mov movsb mov mov test rcl rol call int3 lret mov fcmovnbe sti cmc aad (bad) (bad) (bad) cmc hlt fnstsw jmp repnz int call in out out jmp div fdiv div repz cli ljmp add cli add add or push punpckldq gs sbb pop push pop or and sub and and sub and cmp push aaa ds dec dec inc push dec dec cmp dec dec inc pop push push push mov sub pop pop jbe movsb popaw adc gs inc dec push data16 push jle mov jge jg je js scas (bad) orl mov lcall mov pushf popf inc lcall movsb aad scas stos fildl mov mov xchg mov mov int3 (bad) dec xlat leave lret shr inc iret rcl sar in xlat (bad) mov fcmovnu xlat (bad) (bad) shl jecxz in cmp iret ljmp fdiv repz div hlt loop jae add add sbb pop or or and adc push push ja sbb push sbb and and sub push mov sub xor xor cmp cmp jno inc leave inc inc inc inc dec dec pop dec dec pop push push push pop push inc test dec pop dec pop jno pop pop adc arpl popa imul pop jo je jp or jge or jl subb mov lcall xchg xchg xchg xchg xchg cltd lcall mov scas mov lahf lods scas movsl xchg lcall nop mov test (bad) aad aam cmc (bad) enter mov out rcl fptan (bad) (bad) xlat repnz fcmovne in fstp lret jecxz in imul ror in out lret clc pushf (bad) cmc idiv mov cli sti div clc fisubrl add push and push cmp adc ss sbb ss or and and add add sbb push sbb or add adc sbb push adc or add push sbb cld add add cmp cs xor xor and cmp adc sub xor fs dec dec pop jns push push push jo pop pop pop inc insb pop pop leave pusha popa bound ja inc push push addr16 jno jns jb push jp jp inc jge jne jg nop (bad) xchg subb lea xchg sahf cli mov cwtl xchg xchg call mov mov (bad) pop mov stos lods cmpsl scas mov mov mov mov cld mov jecxz fcmovb (bad) loopne lret int (bad) std ret ret xchg xlat fcom repnz (bad) aam push loopne loop in loope out (bad) in cli (bad) lock repnz (bad) idiv daa cli sti (bad) std (bad) (bad) adc add add push das xchg (bad) or nopl pop adc adc sbb sbb push pop sub and sub cmp add sub jbe xor cmp xor dec xor aaa inc xor ss inc cmp cmp inc dec aas inc push and pop push es aad pop pop pop dec push dec insb ja (bad) jne jno insb lret jnp je imul jge bound addr16 jno push data16 xchg lea xchg (bad) sti push orl xchg sahf xchg fcompl mov movsb movsl lods xchg cmpsb stos stos ret in scas mov mov mov mov enter vshufps lret mov rcr (bad) dec (bad) repnz (bad) fmul in lock into out xchg jecxz jmp in in in std sti out cli hlt cmc repnz loope lock std cli jmp call or (bad) sub movhps pop add cmp or or push and pop outsl es and or sub cmp xor and and cs aas push arpl dec dec dec pop jl dec inc push push push inc push push inc push es pop pop pop push jne dec bound fs push insl jg push jg jae jg ja push jp dec ja sbb test clc lcall xchg xchg sahf sahf test pushf lahf mov cmpsl mov js stos stos scas test pushl mov mov mov (bad) int rcr shl ret mov (bad) (bad) cwtl fcomp rcl (bad) fldenv lcall xchg cmpsb in out in jecxz loope fst idiv (bad) jmp hlt jb add je push pop or jo adc es adc sbb adc pop adc sub push adc and es cmp sub aas sub sub adc xor cmp xor ret aas sub pop imul xor dec inc push jp push push push inc inc dec inc jbe das jmp xor sbb jle adc bound push ja jg pusha insl push je push xchg mov xchg cmpsb add xchg test xchg lcall mov mov test lods mov mov vmovntdq mov aam (bad) (bad) shl out lret fmulp mov rcl (bad) ret std xlat fcomp int3 and sti int3 jmp xchg fwait mov out jmp cmc in mov clc repz loopne pop sub add sbb push push jne adc push add add aaa sbb sbb add xor and sub or sub xor sub and sub ss cmp inc inc push push dec push push push addr16 push push inc pop push inc push dec movsb pop dec mov jns outsl pop dec popa push insl fs je jb je imul push push addb stos test (bad) cld rclb mov cltd lcall movsl mov cmpsl mov mov or test xchg out mov rcl fcomp xchg loop int3 int fadd aad fmulp rorl iret into iret int pop jecxz push std lret sti stc popa fucomip out icebp loop mul out jecxz call stos incl or adc jle pop or push push add push popf jge push aas xor sbb or sub push pop jns sub push xor and xor ss cmp sub inc dec push push push push push inc popa dec dec dec pop push inc dec jg push daa jg pop sub or and dec cmp jp xor jle pusha pusha jl sub js pusha insl inc dec jg jge mov cltd popf sahf mov adcb into xchg mov lahf cmpsb mov mov mov fcmovnu std scas scas mov stos sahf out nop call test ret xlat fsub iret lret faddp iret rcl inc fld rolb aam push loopne sbb repz leave jmp out xchg push icebp mul repnz idiv (bad) jmp hlt jb or je push pop or jo daa sub sbb adc pop adc xor sbb push add push sbb jns sub push cs xor push sbb cmp ret roll push pop push dec cmp sbb inc push das inc push push pop fsts pop pop dec pop sbb arpl push jmp insl outsb imul pusha insb jne outsl pop jp,pn jbe es mov mov test xchg mov mov cmpsb cmpsl mov lods scas stos stos dec mov dec mov lods test mov into ret (bad) dec (bad) enter aad jecxz aam (bad) ror enter fcomip repnz enter std ret stos lock out out lock repnz hlt cmc testb cli pop (bad) std (bad) xchg add add push mov or sbb push push pop adc xor and and es xor xor cmp or ds inc inc push inc inc push inc pop les dec dec inc dec push jns push push push push jge pop pop dec insb pop pop dec pusha popa bound gs sbb imul jo jle ja jae push addb xchg xchg mov mov lahf mov pushf lahf in mov movsl cmpsb lods test test test scas scas mov mov (bad) mov mov sahf ret (bad) iret mov leave lret out into iret adcb incl (bad) idivl out sti jmp in out out adcl idiv repz stc mov add push add jl insl movups adc push jmp and sbb js push adc cs sub es xor cmp sub sub xor inc inc dec bound popa dec gs dec push pop push push push jg inc push pop pop dec pusha popa jae sbb insb jge add jns jo jnp push jbe sbb jae jg test jmp clc xchg lea mov lcall mov lods test stos mov into scas mov mov popf mov xchg mov mov (bad) (bad) clc enter int xlat rcl ret shrl (bad) icebp fcmovnu neg shl (bad) jecxz out int3 mov xlat ljmp sti xchg hlt cmc hlt ja stc cli call std decb add int ljmp or push arpl popa addr16 cmp push outsb outsb jle insb push jae push dec push push inc dec jnp dec dec dec pop add pop inc push pop inc pop pop pop adc dec push das das jg push push imul and and xor and cmp ja or add add or or push push pop pop push inc adc inc dec inc inc sbb cs or in lods (bad) loopne call jmp sti (bad) icebp (bad) repz in call jmp mov cmpsb cmpsl test stos stos cld in ljmp mov add push add (bad) (bad) fwait mov mov mov mov movsb (bad) mov mov addb mov fst movsl xchg xchg leave ror ror xor and push jge outsl bound jnp jo aas xor arpl jo push jns dec jo inc dec push inc adc inc sbb adc sbb or pop dec inc dec pop push adc xor imul cmp sub and xor push xor pop pop pop pop pop pop pop pop pusha popa bound and aaa sub outsb xor jo mov js jp jl jle sar icebp mul call in (bad) out jmp mov loopne hlt std lret (bad) cli clc clc in mov int3 rol lret xlat lret test (bad) (bad) popl xchg mov lret mov cmpsl (bad) stos mov cmpsb out popf mov cwtl mov (bad) mov mov (bad) xlat aad (bad) rorl mov lahf frstor mov mov imul arpl js imul adc sbb dec pop pop dec popa gs jae test pusha jnp mov in arpl imul xchg in and lahf sub scas xchg out addr16 test mov stos pushf add pushf xor lods outsl mov sbb xchg lahf jge fs push lret xchg jne sbb rorb ss inc lret mov aad das lret dec out scas jp loope dec outsl jecxz mov repnz jmp fiadd cmpsb xchg stos test scas cmp mov mov mov mov ret (bad) leave leave lret int rcl rcl (bad) aad mov (bad) xchg fstp ficomp loope pop in out ljmp or icebp repnz stc cli push cld std (bad) push add add add or or push mov adc sbb loop sbb and and inc sub inc das outsl xor pop xor pop cmp push aas das inc sub inc inc inc inc push sub dec cmp push push push xor pop cmp pop sub fs addr16 imul outsl add jae jne ja jns jnp jge jg addl mov mov nop out (bad) xchg pushf xchg xchg cwtl test fwait repnz ljmp movsl iret cmpsl fisubrl (bad) scas (bad) mov mov mov mov mov mov pushf les lret int fbstp aad xlat mov mov fcomip loope jecxz and mov xchg out cli lock bnd cmc lahf (bad) mov fwait sti sahf std xchg jmp jo pop add outsb or jne jp pushw jbe jnp ja js insl and push and es sub sub cs xor push aaa push cmp pop cmp daa inc ss sbb dec cmp dec and push and push push push inc cmp pop ds add add push or or push jb je adc jns jnp jge jg and xchg mov nop repz cli xchg sti xchg repz cld lcall mov lret test shrb mov mov mov fstpt fisubl lret scas into cmpsb sarb (bad) movsl fadds fidivr in out sub jmp in mov (bad) icebp repnz negb cld sahf decb add push xor or sbb outsl vmwrite jl push adc jg sub and dec es sub add sbb push bound jp js insb push push adc push je jbe jne and and push daa pop sub dec sub pop xor push aaa jp cmp es ds inc xor inc and and dec adc cmp push and push adc pop pop dec xor pop adc arpl imul outsl cmp jae jle jbe js jp jl jle and repz mov mov (bad) in cmc xchg jmp fidivl lcall shll aam clc or les ret mov mov mov movsb (bad) mov mov into nop (bad) mov mov fdivs fidivr in xchg out jmp lcall cmc lahf notl std lahf ljmp add pop pop jp,pn jg insb push jge adc gs dec sbb jle jp jbe push and push es sub dec sub jb,pn xor aas dec xor pop cmp pop aas and inc inc inc inc jbe dec jns dec jl dec jg push bound gs push push pop pop outsl popa pusha push bound addr16 push pop outsb jno jae inc je inc jns dec pop jl jg in sti xor lods test scas scas or mov clc mov mov addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall (bad) pop in in out sub push jmp and mov addl ficompl mov mov test mov mov cli fcomp (bad) (bad) fcmovnu fstp fucomip in pop (bad) cmp movsb cmpl sahf mov lcall lea adc xchg add cwtl mov cltd mov mov mov int into mov mov js and mov fdivrl addl fisttp xchg (bad) xchg leave xchg ficompl hlt sahf repz loop in out call mov iret lock negb cld std (bad) inc in mov cltd (bad) mov mov into mov aam (bad) mov test xchg fsubrl and inc es sub dec sub jae,pn inc xor inc ss cmp push cmp arpl jp cmp push inc or and and pop sub sub add sbb add add adc inc add aaa add xor aas or push adc sbb pop and cmp imul cmp jno jae jne ja jns jnp jge jg inc cs and inc es dec dec pop dec sub push daa push and push push cmp pop xor pop pop repz repnz ljmp jmp in mov mov mov mov mov stc mov icebp test xchg mov mov (bad) jmp aam loopne cmc xchg icebp xchg negl int test xchg jecxz in out jmp sub mov lahf (bad) mov cli sti cld std (bad) call lds lret sahf int iret mov ljmp fldenv fist inc and dec daa pop sub outsl sub push xor push aaa push cmp add or add add push add pop or dec cmovb push adc cs push sbb push arpl add imul jae jne ja jns jnp jge jg inc inc inc pop inc or dec push dec sbb dec add push or push aaa pop and pop xor mov leave cmpsl fisubrl std scas aad (bad) mov mov mov mov (bad) mov mov mov mov (bad) hlt (bad) stc xchg (bad) xchg clc xchg notl out popf icebp lahf xchg mov mov and jmp shr icebp repnz cmc mov sti stos std mov ret cwtl lds lret movsl int iret mov aad xlat mov fnsave and pop daa sub sub jg popa das jbe xor ja push jg pusha cmp js insl add imul or adc fs jle jne fs add add cwtl pop push insl outsb das jo jb je ss push jns jnp jge jg inc sub inc sub dec dec dec sqrtps sub push push pop pop pop aaa pop cmp mov lret test lret mov mov mov mov aad enter shl in out (bad) mul out in int3 loop call sti out sar sti std cltd lcall xchg lea stos jmp sahf out test (bad) repz cmc fdiv pushf stc xchg sti nop std (bad) incl xchg mov mov (bad) cmpsl mov aam (bad) xlat mov mov mov test and or dec sub inc sub inc pusha inc inc ja jg dec imul jle gs ja push pop inc imul insb jge arpl adc push pop cmp sbb pop arpl gs addr16 insl movq jno jae jne ja jns jnp jge jg pusha jo jb jg sbb and aas das outsb es jl adc or cs and stc xlat mov cld les fisubr ret mov mov mov int3 mov out jmp mov (bad) loope cld xchg xchg xchg repnz stc xchg ljmp lahf xchg loope jecxz in out jmp mov xchg icebp popf repz sti nop std (bad) call lds lret mov roll xlat mov fstl and ja pop sub dec sub jnp pop xor dec cmp pop aas je and inc add jge jg imul adc push adc jne pop sbb adc add imul outsl push jno jae jne ja jns jnp jge jg inc cs and dec cmp dec sub push ds xor push add ds cmp pop shll cmpsl hlt test shrl mov mov mov nop mov test orl xchg xchg xchg lock cmc jecxz cltd lcall loope jecxz xchg xchg mov mov mov stc mov popf std xchg ljmp mov enter int3 int iret adc rcll fstps fistpll and daa inc sub or insl das pop xor inc xor pop cmp adc and dec add gs or pop or jae adc sbb sbb sbb push pop inc popa adc gs sbb imul or jno jae jne ja jns jnp jge jg inc push inc adc xor sub dec cmp xor push xor pop push pop aaa pop cmp mov (bad) cmpsl shrl scas fdivl ret mov mov sbb movl mov rcll hlt cltd repz lcall mov mov mov enter cltd in sahf out xor repz (bad) mull mov mov stos ret test call lret test shrl xlat fcomp fcmovu icebp fnstsw and inc daa pop sub or push das pop xor add cmp sbb adc outsl add add add sub sub adc xor pop sbb push add arpl imul outsl sub xor jne ja jns jnp jge jg inc insb inc xor inc sub dec dec dec dec dec jne and push add pop cs aas pop (bad) mov cmpsb cmpsl jmp lods shrl mov mov mov mov mov mov mov (bad) (bad) (bad) std xchg repz std xchg cli xchg les negl into in out jmp out out aad mov imull mov ret xchg lds lret mov mov (bad) mov mov fcmovnu fstp fbld dec and dec daa inc sub dec sub push xor inc aaa cmp cmp push add push imul imul adc pop push sbb pop arpl data16 imul jae jne ja jns jnp jge jg inc and inc xor dec ds dec dec dec dec add push and push push cmp pop das pop sub mov cmpsb cmpsl sti test fisubr (bad) mov mov mov mov xor testb (bad) cli (bad) nop xchg xchg xchg (bad) xchg sti xchg in cltd ljmp loope jecxz in out jmp sub icebp (bad) rep cmc xchg (bad) mov mov mov xchg pushl (bad) fwait leave movsl lret stos int iret cmpsl (bad) mov cmpsb aad xlat test xchg (bad) and inc and dec sub inc das insb xor push xor dec cmp dec aas imul push pop pop or imul jae sbb sbb dec sbb adc add imul and jae jne ja jns jnp jge jg inc inc inc adc or dec jns sbb and push es push push push push sbb pop aaa pop int3 mov jmp cld test jmp fnsave fidivl fdivrs out testl ret pop xchg ret xchg lds ljmp jecxz in out jmp mov repz (bad) divl std fwait inc rol xchg lds lret in int iret mov aad xlat mov xchg fisttpl jno inc and dec sub cs pusha xor fs outsl cmp pop aas jb and dec add outsl or pop adc pop cmp dec sbb jnp adc arpl sub imul outsl sbb jne ja jns jnp jge jg inc daa inc aaa inc xor dec add dec add add push add pop aas pop cs jle out mov ret cmpsl test stos stos loop loopne in loop xchg mov mov mov fstpt int lret xchg mov mov loopne loop repz ljmp lahf mov in out jmp into out mov cmc xchg idiv stc cli sti mov mov add xchg (bad) mov int iret cwtl roll xlat clc (bad) fist and insb and jp or jge push xor inc xor sbb imul push pop pop or inc or jle xor inc pop imul sbb ds cs add add imul and and jne ja jns jnp jge jg inc xor inc and dec dec dec sbb add push popa push je push push aaa pop sub pop pop pop repz mulb ret lods fsubrl std mov mov mov out mov lock mov lea xchg cmc xchg in jmp in fwait repz in lahf test shl in out mov in mov repz cmc test mov (bad) sti xchg std mov movsb (bad) lock (bad) (bad) xchg test cwtl int iret lock xlat stos fldcw fild and jle js jle jge push xor pop aaa sbb push pop cmp jne imul or pop adc inc pop cmp dec sbb insl pop adc arpl gs or pop imul and jae jne ja jns jnp jge jg inc xor inc sub dec dec add push add push push push cmp pop das pop sub mov cmpsb cmpsl out in clc lods (bad) scas nop mov mov mov mov mov int3 mov int3 test xchg mov mov loope out loope negl sahf lahf mov scas jecxz in out jmp popf out xor repz cmc test pushf stc cli sti cld std (bad) call lds lret mov rcrl xlat stos fnstenv fild push and jno inc sub sub inc xor cmp dec aas jb jo popa add pop or jl arpl jnp jnp js inc sbb jne jo add or addr16 imul outsl add jae jne ja jns jnp jge jg inc and inc aas inc cmp dec sub dec or add push cmp pop xor pop cmp mov shll ret lods shrl mov mov mov lret and xchg mov mov (bad) in (bad) loop std xchg out stc xchg (bad) cltd out fwait rcrb jecxz in out jmp fucomi fdivp ret cmc mov sti nop std xchg ljmp lds lret stos int iret mov aad xlat xchg fldcw fisttp dec and es jnp inc sub pop das inc xor inc xor ja push cmp insl add imul push or je jge jne jge inc sbb popa push arpl sub imul outsl pop jno jae jne ja jns jnp jge jg inc daa inc aaa inc sbb dec aas dec cmp dec aas push cmp push jge sub pop insl pop xchg mov shlb fsubrl pushl popf mov lea in test xchg mov mov lea xchg std xchg xchg xchg mov popf fistpl xchg in out jmp scas out mov cmc cmpsb mull stos jmp call lret mov shll xlat mov scas fstpt and dec and pop sub insb das pop xor jg pop aaa push cmp inc cmp imul add dec and pop or dec sub sub xor pop ss cmp cmp cmp ds add pusha add push pop or or insb push jl adc pushw jb jge dec sbb push jo pop bound or push add jo jb je jbe js jp jl jle inc xor inc xor sub pop dec cmovle push add push cmp pop xor xor movsl cmpsb (bad) test stos imull mov mov mov mov loope int3 sub testl mov xchg xchg xchg les jmp loop in out call mov pushf lock repnz clc xchg cli cmpsl cld mov ret mov lret xchg into pushf (bad) mov cmpsl aam (bad) mov fsubrl and inc es sub jnp dec cs xor inc xor ss cmp cmp add jno push or outsb or push movups adc je sbb pop sbb push jnp adc fs data16 imul jo jb je jbe js jp jl jle inc and xor and dec dec dec dec dec pop push xor push es and pop sub pop mov cmc cmpsb (bad) test stos fsubrs mov mov mov mov leave mov icebp test xchg mov mov mov mov xchg repz jecxz out lcall mov out call test mov mov cmpsl hlt movsl imulb cld lods (bad) mov les lret mov shlb mov test in push and dec inc daa sub sub inc pop dec xor xor xor imul cmp pop ds add addr16 push or or adc addr16 cmp jp je jae jns or fs push add sbb jb je jbe js jp jl jle inc and inc inc inc bound dec pop dec or push and push adc pop or pop cmp mov movsl cmpsb lea lods scas (bad) ret (bad) (bad) (bad) mov ret enter fstpt imul bnd mov xchg iret xchg rclb cli pushf repz fneni(8087 xchg loop in out call mov mov xchg pushf hlt xchg sahf clc (bad) cli sahf cld mov rol stos ret (bad) enter int3 mov sar aam (bad) movsb fcomp (bad) fsubrl and and es pop sub pop cs xor xor pop ss cmp jne pop ds add add push push or insl or push js jo popa adc push dec sbb jp outsl push inc pusha xor adc push push outsb xor jb je jbe js jp jl jle inc xor inc inc inc adc es sub push xor push xor pop pop pop cmp insl mov leave cmpsb shrb ret scas fdivl loope out in repz cmc (bad) lock mov mov mov nop jecxz mov fcoms cli pushf cli sahf cli loopne loop in out call test xor repnz hlt movsl negb cld xchg (bad) xchg (bad) mov xchg movsb (bad) mov test xchg int3 stc into std rclb xchg fcomps ficomp and or sbb sbb sbb jno push ss jp push cmp ds add add add push inc or or or push adc adc adc push jae jnp sbb bound and push aaa outsb push jo jb je jbe js jp jl jle inc cmp inc sub dec sub dec xor push push push push push jb sub pop sbb mov jmp (bad) lods int3 scas repz mov mov mov mov sarl lods test xchg mov mov nop loop iret xchg rcll (bad) pushf (bad) sahf mul (bad) loop in out call mov mov lahf repnz xchg xchg clc mov (bad) cld cwtl decb les lret int ljmp (bad) mov faddl and inc es pop sub pop cs xor xor ss cmp pop cmp adc jns outsb add push pop or or or push push adc jg je sbb pop sbb push dec pusha popa bound ss push push outsb inc jo jb je jbe js jp jl jle inc sub inc cs imul dec dec push push push adc pop or pop das pop sub movsl cmpsb loope (bad) fdivl sti mov mov mov (bad) repz xchg mov mov mov mov nop jecxz notl lcall and in out call mov out lock repnz cmc mulb mov mov mov (bad) fwait enter int3 test out rolb (bad) mov fsubrl and dec es sub dec sub outsb xor push xor ss cmp dec cmp ds add add add push and jp push or push jge je pusha adc push inc sbb sbb push jle adc add push pop outsb or jb je jbe js jp jl jle inc xor inc sub xor dec cmp sbb sbb adc pop sub pop sbb mov lret test stos fldt mov mov mov mov fidivr in test xlat mov mov nop rcll cwtl in lcall mov xchg in out call mov mov (bad) repnz hlt xchg cmp mov rol mov mov leave lret mov rolb fdivrs mov and es sub pop sub cs xor sbb cmp cmp add inc push push or inc or push imul inc push jb imul sbb push insl pusha sub adc push insb add jo jb je jbe js jp jl jle inc das inc and dec sbb dec aas dec cmp push and ds sub pop jae cmp (bad) mov (bad) test stos imull mov mov mov mov fidivrl in test xchg mov mov mov mov nop clc xchg loopne loope mov pushf jmp loop in out call mov repnz hlt (bad) imulb cld mov lcall (bad) stos enter int3 int ljmp (bad) sbb fimull and dec and es sub pop sub cs xor xor sbb pop cmp push ds add add add push and jp push or push insb adc jge jae jle jle inc sbb push push or pushw push xor jo jb je jbe js jp jl jle inc cmp inc sub dec dec dec outsb dec ds adc push ss cmp pop and pop sbb mov (bad) cmpsb into test stos into lods fisubr fidiv mov lcall xchg mov mov mov mov nop loop notb lcall mov out call mov fwait lock repnz hlt fwait testb decb les mov rcl rclb fdivrs (bad) and and push es sub inc sub cs xor xor adc dec cmp sbb dec add push pop push bound or pop push js jne cmp sbb sbb bound fs data16 dec push insb xor jo jb je jbe js jp jl jle inc sub inc and dec adc dec daa push add push cmp pop xor pop cmp mov mov iret lods lods scas mov nop mov mov loope fildl in fisttpl stc mov nop clc xchg std xchg repnz in lds out loopne loop in out call mov pushf lock cltd hlt fcomi popf clc mov lahf cld std (bad) scas shlb (bad) enter int3 mov rcl aam (bad) xchg mov test and and dec es sub pop sub cs xor xor ss cmp pop cmp jns,pt push add pop push push or jg push adc jnp jbe jle jle outsl push pop pusha popa bound push cmp push insb add jo jb je jbe js jp jl jle inc adc inc sub dec das dec aas dec cmp push cmp pop pop pop jle cs add shll ret scas lret mov mov mov mov fdivrs ljmp mov nop fist rcrl jmp cli loopne loop in out call mov pushf lock xchg hlt xchg testb std (bad) fcmovb mov lahf les lret mov sarb fcomps mov dec and jns push push sub sub jnp,pn popa xor xor ss cmp push cmp ds add add add push and jp push or push push imul push sbb ja js inc pusha adc adc adc insb sbb jo jb je jbe js jp jl jle inc outsl inc sub cs dec dec outsb dec ds adc push ss sub pop sbb mov ret cmpsb shrl les popf mov mov mov mov (bad) fild mov mov mov nop out repnz out repnz lds jmp in out call (bad) out cltd lock repnz mov cli lahf cld lahf (bad) inc rol (bad) (bad) enter int3 or shlb (bad) mov mov fiadd and es sub inc sub jae,pn push xor ss cmp pop cmp jno,pt jno jae inc push push or push or push jg popa adc inc push inc sbb sbb jo jae popa bound gs push and jo jb je jbe js jp jl jle inc and arpl adc dec imul push and push daa push and pop or sbb les fildll mov mov mov mov repnz in test mov mov mov nop hlt xchg mov rcll mov loopne loop in out call test fwait lock repnz clc xchg cli aad lods (bad) mov (bad) (bad) enter int3 mov rcrb fcomps fidivr and es sub sub cs xor addr16 ss cmp cmp outsl add jno jno dec or or push push arpl adc sbb imul adc cmp push insb add sbb pop jb je jbe js jp jl jle inc adc inc adc sub cmp es ds cmp pop pop pop pop pop pop pop or into mov shrb enter loop fidivl mov lret sub loop call mov mov mov nop enter (bad) xchg repnz ljmp loopne loop in out call mov out lock repnz hlt xchg test popf cli sahf cld sahf (bad) inc rol les lret mov sarb fcomp ficoml push pop push push jno push push inc pop dec dec pop imul xor ss cmp dec cmp ds add data16 push imul and and add pop sub popa sub inc xor inc aaa push cmp cmp jo popa add or addr16 adc addr16 pop sbb jo push popa or gs cmp imul push outsl jo and jne ja jns jnp jge jg inc push inc adc inc es push dec xor push push push pop push xor pop das pop cs cmp mov andl lods lret scas ret mov mov mov mov mov xchg mov ljmp in stc mov xchg xchg ret in jmp cli icebp clc sahf lahf loopne mov xchg xchg xchg mov in lret out xor repz cmc nop (bad) mov mov mov fwait pushl scas (bad) mov int iret (bad) (bad) mov mov mov fcomp fcmovu (bad) sti fist jle ja dec daa dec sub pop sub adc ja pop aaa push cmp dec cmp jo ja pop pop jnp bound imul ss pop sbb dec sbb add or imul outsl add jae jne ja jns jnp jge jg inc daa inc sub inc dec sub sub push and push and pop pop pop cmp mov aam (bad) test mov out (bad) enter aam rolb mov (bad) jecxz cld xchg xchg xchg xchg xchg mov jmp (bad) fwait iret popf and add mov mov mov repz dec sub popf ret xlat pop cmp pop and pop cmp loop mull fcmovnb dec xor xchg rol pop rolb push (bad) jmp loopne hlt repz test inc inc inc inc inc test sbb sbb or loopne ljmp ds mov cmp icebp mov cld add ror mov mov sbb push dec dec dec sbb and lods and xchg cltd das jno sub lds pop int3 scas inc popf dec push push and push loope loope dec shlb inc push int jg or shrl imul into lret leave push ret sbb sbb scas pop pop ficompl in jecxz mov (bad) aas clc cli aaa xchg stos add mov sbb adc pop je add dec (bad) aaa xchg cmp xor fnsave pop jecxz push adc xchg fwait sub push sbbl je fwait xor ret rcl movsb shrb inc add cmp xor ret inc std lds add pop or popa or jnp out fs popa add in fdivrs fist insb xor xor cli xchg cs std fwait xchg test insl orl mov adc push (bad) mov daa pop stos and and push add mov dec movsb inc scas hlt sahf pop es dec in faddl (bad) jns mov cli je cltd gs or jo pop (bad) jo add fs loope imul push sbb out movsl scas pop outsl and add mov div hlt mov add or nop das notb xor or aad xorb fdivl popf (bad) fstp test jle aam and pop cmp loop hlt inc xor pop loope lcall ret pop pop (bad) loop lret loopne pop pop inc stos sbb adc inc incl in xchg in inc lcall cltd xor xorl (bad) mov mov jp sub sub sbb pop mov sbb add pop test add popf sub in mov loope das cmpsb and mov dec dec jmp je in cmp in out aaa push cmp xchg js add or or push lahf addr16 mov arpl gs pushw in out mov adc repnz repnz in div jno add test add dec cmp jns leave lret leave into iret addl pop popf and push fbld and int3 push fcom mov pop jo data16 fsubl enter dec ja jnp je push push sti push or jns pop out sbb inc push pop lock adc sbb ficoml jmp adc jge push jl sbb cltd aaa mov xchg push movsl addl stos jmp mov pop daa inc push push push ds add xlat sbb jecxz loopne scas stos test push decl pop cmp jl aas jnp cmp inc jg aad pop pop jns (bad) jbe arpl jno jo lret pop dec imul push jnp and sbb fnstcw mov fs div jne mov ret ret cmp repnz mov cmp inc xor cmp cld pop mov mov jnp pop stc aad movsl insb (bad) in imul bound sarb cmp cmp rorl inc jecxz add add sbb shlb es cld push dec jno cmc or lahf sahf jmp loope,pt loope nop xchg sbb push jp add bound cmp jnp mov pop cwtl mov mov pop bound adc jl and das inc or lcall popf push push push cmc and push lds cmpsb cwtl in mov cmpsl iret mov push pop arpl (bad) dec xlat rcl pop push jle xchg push xchg xchg fs mov jecxz es add scas sti imul div mov add cmp stc xchg xchg xchg or les in (bad) mov adcl mov sar sub not shlb bound ret pusha pusha (bad) xor (bad) mov das add mov mov cmpl sbb fwait push clc popa jae push adc adc add ljmp insl lods and lcall push jle jl xor adc xor or mov mov cmp pop dec xlat xchg jb mov ficomp inc movsb dec cmpsl and test in pop stos jmp dec (bad) dec aas clc mov sbb clc sahf ss inc (bad) fimul into lods fimull dec imul pop jb into pop jno jae insb mov xlat sub mov dec mov pop push push push push jg (bad) jl ja pushl sarb ss adc lret lcall pushf ficomp pop nop lret mov push (bad) push xchg xor adc sbb jb movsb aad icebp mov mov cmp add mov mov bound xorl dec or adc pop pop fisttpll xchg sbb push bound imul mov clc cwtl negb jae sti jb inc adc push mov test mov sarl aad push push push add xchg or pop add stos xor (bad) cli inc push push dec xor inc mov dec xor inc mov rorb les bnd dec popl (bad) sbb testb arpl outsb pusha xchg jmp sbb imul lock sbb or je fsts in mov scas sub ret les mov cmpb xor sub xchg and add bound mov jnp pop ljmp inc sub jnp mov inc icebp (bad) or jb fnop jno ljmp repnz imul xor jnp inc push inc inc ret inc repnz dec sub dec cmc dec dec pop push cli xchg pop adc xchg imul repz cmp loop data16 aad insl outsb cmp sbb pushf (bad) mov xor loopne loop cmp sbb mov cmp xlat sbb lods xor dec mov push jmp pop inc jp dec dec aaa jno xor aad sub (bad) mov test int shl push (bad) xchg lds cltd xchg xchg adc ret ljmp in insb sbb sbb in in mov jge int3 fdivrs mov clc adc xchg pop lods mov iret (bad) lds xchg nop dec adc fcmovnbe roll rcr fildl or in and sbb jae jne aad icebp mov jb mov dec aaa mov (bad) bnd pop test test mov push xchg out adc pop adc loop outsl fs fwait push sub cli add xchg orl lret xor inc inc enter push fsts test adc cld pop pop pop sub push and into push lods sub mov pop jae mov clc mov rcl push test pop into jo add fistl push fldenv adc shl and sbb jmp outsb mov lock jmp mov add in je cmp add add cmp or xor cs sub sahf push daa lods lret rorl lret jb fnop stos in mov xor jg mov push (bad) mov xlat dec mov or push push aas int push fwait hlt dec rolb cli call adc into loop sahf cmp loope adc jle push outsb xchg mov repnz and push dec adc add pop sbb xor sahf pop in insb xchg adc lods add addr16 (bad) addr16 movsb sbb push movsb je scas mov mov std mov inc arpl dec fiadd popa fadds loopne std sahf jb sbb ljmp (bad) out mov in jmp push clc xchg movl (bad) mov stos push adc rol inc add ds dec xor mov aam xlat sbbl icebp iret test jb lds and icebp fs clc outsb mov rcrb sub stc test popa mov jo stos inc pushf push incl decl sbb sbb adc cmp out outsl jecxz xchg loopne xor and into addr16 mov dec ret inc int3 pop (bad) dec mov inc stc push push (bad) subl pop push jp ret sub pop stos inc xchg stos lods lods mov push mov shll inc pusha test mov (bad) sbb xchg xchg cwtl xchg sub lahf pop jl mov popf and in aaa lret outsb cmp and and cltd (bad) sti jne dec sti sub ret (bad) lret int3 inc add sub sbb lods into pop xchg aam cmp xlat or xor adc sub lods ss pusha sub cs xor test hlt aad xor sti fnstenv ss mov inc or add int3 in cltd pop sbb fstpl xchg or mov arpl shrl outsl stos mov cmpsb jmp or xor xchg jg stos mov sarb ja jne inc (bad) ret pop lds add je cwtl mov mov mov dec aad mov movsl jle pop mov jge jge test repnz (bad) aaa les dec push dec outsb test and fwait sbb xchg pop xchg push imul pop loopne mov mov mov cld jbe mulb xchg (bad) xchg shrb lds bound xor xor adc lods rorb pop xor push and push cmp inc xor lret mov add dec aaa push add pop pop orl dec add icebp jp inc cli mov ljmp lahf fsts pop mov mov cmp sbb xchg sbb xchg fldcw test adc iret mov or add and or xrelease es shlb std (bad) lods stc inc frstor dec fidivr inc cmp cmp fs mov mov rcl dec ficompl jge (bad) cwtl mov in xchg int rcrb jmp sbb loopne push sbb daa fs fwait imulb cmp and xor push mov ds sbb out popf mov add sub loope xor or and jmp fistl out ss out aaa movsl push sub outsl imul dec sub dec xor add xchg push jl cmp push into push out adc adc cli jge xchg pop pop dec loop pop mov fs imul adc es dec decl xacquire jbe push dec inc test inc xor sbb jae mov or fsts cmpsl sub or fsubrl push sahf outsb lock jb cmp cmp dec enter mov (bad) sbb inc repz (bad) in jb (bad) adc lock int ja or and insb adc jecxz xor (bad) mov ret mov sub cmc pop xchg xchg xchg or fmulp movsb lret mov aas push and and lea stos sub cmp bound out cmp pop cmp int lret lret enter ret ret adc (bad) jmp je or test inc sbb adc sbb call adc gs cwtl pop stos call add jge pop js jp and inc jno scas pop adc mov mov or stos push and push mov mov scas cld cli clc repnz test dec les dec cmp out call call inc dec jecxz arpl jo in insb loope imul negl shll and adc fwait jecxz test or test mov xchg std xchg sub sub xor (bad) das add mov (bad) fsubs and mov fcmovu fcomps aad and (bad) jb fs aaa push and mov je std cld sti jo clc jge cmc jle repnz inc cltd (bad) jle jl jo fldl ja divl popf pushf fwait adc mov addl stos jbe sbb addl dec mov adc push (bad) mov cmp push mov andl xlat scas pop shrb (bad) daa inc std stc out imul push arpl push inc push inc rcl call aam pusha ja mov add adc out cmpsb pop std lcall push or aaa sbb bound mov adc mov sub add lods test sub push xchg cs ss xor sub xlat daa or aaa fucomip pop jg jns out lods lret jle pop daa rcrl (bad) xchg iret int pop ret fnstsw js shlb pop pop std jbe add out lcall and cwtl shl out inc fimull lock dec jbe jno bound (bad) mov aaa ljmp and orl xorb inc les sbb push push push add movsl mov mov xor mov ljmp out out jmp (bad) jge mov test xchg mov imul rol insl call mov fnstenv sbb in adc in pop xchg or idiv stc jno jg loop sbb xchg das mov xor dec das movsl repz xchg xlat xchg or and fcmovu jno js aam scas ljmp fnsave mov pusha fs ret call jl jecxz or mov js dec cwtl scas mov sbb nop fucomi std adc mov aaa (bad) mov aaa ss xchg sbb jns adc xchg fnsave dec adc mov mov sbb fsubrs sbb rcrl mov fs jle popa sti inc xor push cmp outsl rcll mov shrb dec jp rcr fisubl pop jb fnstcw pop insb imul mov pop jno lret push pop push mov mov add lock mov add call cmp (bad) ja cltd (bad) int cwtl cmp rcl push adc pop sbb sahf and lret test es jno scas jmp and (bad) lcall pop mov jnp imul cmp pop pop xor sbb push cmovo mov out cwtl fmuls bound add das arpl pop (bad) cmp sahf adc jns test jne mov push stos adc inc dec mov push pop add aad dec mov shrb push loopne repnz cmc dec nop cmpsb cmpsl test cld clc inc loopne push dec xor dec sarb jmp dec push lcall or xchg addr16 push (bad) sbb mov rcrl or scas jmp and shr cwtl ljmp or adc aaa mov repnz mov dec or stos neg movsl sub adc sbb pop int3 popa jno jae fs jne lcall (bad) xchg push popf popf mov xor popa ds mov in add clc testl js inc std rcr out cltd fist lds and cltd cwtl pop mov lahf mov mov jb cmp or mov pop jl ds mov or fbstp mov mov pop pop mov lods cmpsb cmpsl ret adc cmp xchg mov (bad) mov movl inc fisubl jo sbb adc ficoml popf sahf shrb ljmp frstor adc outsb sub ret sub sub pop xor xchg andb dec (bad) xchg dec scas inc iret xchg mov adc sub sub and aam test enter js mov movsl ret popa mov aaa ss (bad) jl aas cmp or cld sti mov pop (bad) (bad) jle pop ds pop inc stc (bad) jmp xchg rcll dec jae inc dec (bad) or xor and cmp xchg sbb mov std mov jo xchg (bad) mov sbbb (bad) sbb into mov cmpsl rorl pop scas and lods and xchg push add mov pop frstor ja dec dec xor call out sub or insl into jl ja add fs outsb (bad) sbb jg bound into pop jno leave mov cmp add mov adc or (bad) lock test jp mov xchg sub or aaa inc xor xchg sub pop sbb sbbb neg fdivrs jl inc rcl pop cmp int3 in icebp fdivrl or bound cld push mov sub xor je,pn sub flds xor mov mov clc sarb fnsave jnp loope xchg jo test or adc push data16 adc xchg add and scas cmpsl popf imul insb mov xchg pop nop decl les mov mov xchg test push pop lods cmp shrb es push xchg pop pop sbb pushf aam add loopne cwtl pop stos loop and cmc daa dec rep in pop fnstenv out pop (bad) mov jge icebp lea aad fild pusha out in stc in (bad) dec cld lahf jo dec arpl xchg pop xchg ljmp sub loop jmp lcall or lods jno xchg std xchg ljmp scas iret das dec sbb xor mov xchg mov pop dec cltd or fcmovnu fsts (bad) pop and std jae gs ss scas or (bad) jae (bad) std cld jno stc jb idivb repz lock ret dec (bad) and jp iret loop mov pushf fwait lcall jl pop mov mov xchg and or negb mov sbb pop push sbb push push push cmp xor push lods or (bad) es clc inc jno or mov inc xor inc in jmp inc push jle jnp pop popf inc test jb jo aam lret sbb adc int pop jmp push fsubl push adc sbb div lret push lods lods adc sub aas inc push iret dec cwtl cmp push es daa stos add xchg sbb leave sub or sbb jae movsb aad icebp mov fldt outsl or aam rol mov push push out js div push push mov jnp jnp sti fcmovu jmp nop push in adc sub ljmp (bad) ss cmp xor outsb and add (bad) subl lods sub ret mov mov sbb aas pop add imul cltd push movsl cmpsl test lods cwtl insb inc (bad) scas mov pop sub dec dec loopne shl xchg lds mov jno dec dec jp or jne loope (bad) adc popf xchg xchg cwtl iret jb push bound movsl adc (bad) in call push lods and or mov add cmpsb inc sbb (bad) enter ljmp test xor stos xor lods pop ffreep dec in shll gs xor stc dec push ret dec (bad) xlat loop std cld lea pop (bad) leave jle addl inc jle jmp out loop (bad) pop pop out adc inc jmp in sbb arpl sahf sub xor stos adc push mov leave lea inc add lret push mov add push dec or sub push stos fsubs push dec out xor mov inc jg or je add mov arpl inc jno leave sbb lret lret adc lret leave and jecxz jecxz or popa sbb cltd div hlt cmc pushf imull add cmp mov iret xor (bad) movsb aad adc loope and cmpb jle jae cwtl xor sub jnp (bad) iret into gs rolb mov call xchg adc in (bad) out out dec and (bad) adc fiadd fmuls repnz mov arpl fldenv push loope sahf xchg (bad) mov mov es add test mov xlat add mov fstpl add fsubs movsb mov or cmp (bad) jg mov dec push push and dec loopne mov cmp inc inc jmp inc insl loope add enter test lea push ret sbb sbb scas pop into iret mov dec or push adc adc ret ja sub imull jo mov test scas lds mov das cs fbld or in loopne jb mov out rcl pop cmp loop mull (bad) imul inc ret jae idivl jns out (bad) out in cwtl in rolb popf out outsb dec dec dec sub adc mov cmpsb xchg xchg cmp jnp mov push pop divl arpl mov push cs adc mov rcll scas push sub nop mov or fwait imul outsl jmp out jo ds xor movsl in in popl sub jle aam in fldcw pop jge xor push fldcw std mov gs sbb stc mov mov and adc arpl cmpsb mov mov mov jne xor mov xchg xchg xchg hlt adc and mov mov push sahf xor fwait das and and int3 inc ljmp mov fs in idivb jge popa les (bad) cwtl (bad) (bad) std pop pop pop pop sub enter mov sbb inc push sbb dec pop sbb loop fwait (bad) hlt adcl (bad) ljmp dec addb lods cmpb iret xor cmpsb mov adc pusha xor mov lcall pop (bad) sub leave les dec dec cmp mov dec aam fnstenv or jge bnd mov leave jno adc insb int jle pop gs in pop pop push mov mov mov std repz mov cli sti jno or aas ds lock xor inc movsl sub aam mov xor insb fidivl test (bad) (bad) jnp cld mov int dec leave pushaw rclb into mov std push push in mov clc (bad) mov sbb into jnp stc in jmp popf push in sbb loopne mov cmpl cmp xchg andl sbb add mov test and lret or sbb add push movsl mov popf sub xchg cmpsl mov clc call and movsb in mov inc ror jmp lret rcl in pop adc inc jb fld outsb inc sbb jecxz adc addr16 into testb cmp sbb mov push push test movsb sbb cmp pop lret ret xchg cmp cs add xor inc popf sub xchg test and ja jecxz sub add les loope iret push stc enter bound gs pop rcll push push cmp pop pop xchg out inc cli sub ljmp int3 xchg pop out and xor loope xor lea lcall jp sub leave mov mov ret in dec dec pop sbb jg adc mov add add repnz lret faddl sti inc dec bound and inc dec dec dec in mov mov out (bad) es sbb insb inc dec js add jae jb faddp ret outsb imul and scas hlt sub sbb sub popa adc movsb or cmpsb movsl mov add xchg sti xchg dec dec cmp cmp xchg aaa sbb xchg les adcb fsts test lret loop fnop jg or jbe fldcw push popa (bad) imul jo sbb pop jecxz (bad) icebp lock fs in popa sbb dec nop lock loopne add test mov mov mov mov mov ret (bad) lret enter lret (bad) lret ret jmp hlt aad mov (bad) (bad) loop xchg loope vcvttpd2dq out jmp clc hlt cmc lock div repz clc hlt cmc cmc cli clc icebp push sbb add pop add or add or push push add sbb adc sbb push or sbb and and sub sub cs aaa cmp cmp aaa inc dec dec inc inc push mov inc pop lret lds push push push inc aam pop pop pop pop pop dec fmul pop jg jo cli bound data16 rep imul je jae insb jge jae popa jb je jp adcb sbbb sbbb adc lcall mov xchg stos lods scas mov mov mov mov mov mov lret leave (bad) fisttpl aam fucomip int rcl aam fcomp vpandn (bad) rcl out jecxz cmc gs jecxz call out div imul cmc hlt div stc div std sti (bad) jmp notb sbb or add or movhps or pop pop push sbb and sub and aaa daa and and xor sub sub and sbb cmp and ss dec push dec dec pop inc inc dec dec dec push inc dec push pop inc pop push push push push inc push push pop pop pop inc js push insb insl bound bound gs push je jne jns jns jl pop js mov adcb cwtl cltd xchg fwait pushf popf sahf lahf test pop sbb cmpsb movsl cmpsb cmpsl mov lods lods cmpsb mov mov mov mov mov (bad) lret ret rcl ret enter fld loop fst xlat fld rcr (bad) ret (bad) out loop gs in jmp out jmp (bad) cld out icebp div icebp idiv in clc sti in jg add add or push sbb or xor pop adc adc sbb and xor sub stos ret sub cmp xor xor cmp cmp inc inc push les dec dec dec pop push inc add push push push dec inc pop pop pop dec or pop popa jae lcall insb imul out mov jae and push jns imul jne jg addl jb mov out clc mov out out (bad) sti in mov int enter (bad) (bad) rcl leave rcl out (bad) lret (bad) dec xlat shll imul clc out lret int3 into enter aad (bad) jmp out (bad) int3 pop cmc repz loopne out aam jmp cmpsl mov sbbl scas mov inc popa outsl jae jnp and jns jne push jo jle ja imul dec dec inc push jbe dec dec inc dec insl inc inc dec push push inc pop inc xor or jo inc pop inc inc inc inc sbb pop sbb sub add aas pop sub xor and ss xor xor adc bound addr16 push outsb outsl jo jae sbb add adc or sub mov mov loope in out cmc in les mov fwait xchg (bad) xchg mov cwtl lret lret mov mov fisttp enter stc out in jecxz iret rcl repnz les rcr fcmovu fstp (bad) loopne sahf out out out call in jo repnz repnz hlt cmc div clc stc cli sti cld std (bad) incl add add lcall adc adc sbb sbb push pop jg dec push popa pop inc push inc inc sub dec inc inc push push sbb cmp cmp ret sbb pop add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound gs imul jo jb je jbe js jp jl jle addb xchg lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound gs imul jo jb je jbe js jp cld gs cmpb xchg lea xchg xchg xchg xchg xchg cwtl leave lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov mov xor mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in (bad) in sub jmp in out out lock repnz xchg aad clc adc sti cld std (bad) incl add add or pop push push adc push adc push inc sbb push sbb push inc and insl and es sub sub into xor xor cmp cmp ds inc inc inc inc jp inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha and xor push insb sub jo jb je jbe js jp jl jle andb rorl jecxz cld nop std xchg repnz loope (bad) cwtl negb lahf mov test lods fldcw fnsave mov test ret stos mov xor into call loope jecxz in out in fidivrl loopne loop in out call mov stos lock repnz testb mov xchg add insl add push pop or fs push jnp bound addr16 push jbe imul pop and and and es sub inc sub jns,pn push xor inc ss cmp push cmp ds inc jo insl inc jne imul dec dec push adc push push push push pop aaa pop das pop cmp pusha punpckldq or push or jo jb je jbe js jp jl jle xor rolb repz mov xchg xchg xchg fistpl cld sahf repz aad fisubr lret mov mov mov mov mov iret mov stos les lret in into std shl shl aam (bad) xlat fcoms ficom in out call sub lahf hlt nop negb cld cwtl (bad) incl inc add push jae jp jg jg outsb adc push adc push cmp jl arpl push pop and and and es pop sub cs xor inc xor ss cmp cmp ds inc add inc sub dec cmp dec aas dec cs and push push push push pop insl pop push pop pop pop punpcklbw bound add push cmp jo jb je jbe js jp jl jle xorb test mov xchg rclb lcall fsubs ret stos fsubrs mov mov mov mov lea ret les jge hlt divb stos mov call clc sti mov mov scas (bad) ror int3 sahf lcall fwait xchg lret lahf mov ret or imul sub popa pusha jl xor jp gs jl jp xor inc push dec push dec inc push or inc adc inc add adc pop push pop pop pop pop dec dec push dec dec sub sub data16 ja ja inc insb insl jb and aaa ds push cmp xor xor add adc pop inc pop inc pop inc pop push push sbb sbb dec push xor adc sbb cmc jmp ljmp mov xchg out loope stc (bad) idivb in popf adc lret (bad) ror lret ret (bad) rol ffree fcmovnbe ret (bad) xlat sbb repz leave iret out call scas mov in (bad) div clc stc cli sti loopne mov xchg addl mov xchg aad mov insl pusha jno imul js insl pusha jge jae jns pusha and daa pop adc add sbb push pop dec pop pop dec dec imul inc inc pop pop pop jnp dec pop push sbb pop dec and movaps and outsl outsb cmp adc xor es aaa das cmp insb push inc dec push inc sbb sbb or add pop add adc inc jb mov test stc in divl test loop in ljmp lods stos sahf mov (bad) aad vshufps mov mov mov mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound gs imul jo jb je jbe js jp jl jle addb xchg lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound gs imul jo jb je jbe js jp jl jle addb xchg lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop pusha popa bound and lahf and lret out jmp mov xor repz (bad) mov aam xchg std nop ljmp (bad) mov int iret mov mov mov mov mov fnsave and dec daa pop sub pop sub xor xor adc dec cmp outsl cmp add push pop jge jle js ja adc inc adc gs imul sbb jo adc arpl addr16 imul outsl pop jno jae jne ja jns jnp jge jg inc inc inc inc inc and dec cmp dec je jg jge push push ds sub cs sub fs (bad) mov into cmpsl fsubrl (bad) fwait mov mov mov lds movl mov xchg xchg xchg in xchg fistpl rcrb in popf out jmp lods out (bad) icebp repnz cmc cmpsb (bad) mov xchg sti lcall ret mov mov leave out lret mov shrl xlat mov lods fstpt and and inc sub inc das inc xor inc xor push cmp push aas add daa add pop pop jg imul jbe adc pop jno je jne push pop pusha popa inc arpl cmp imul outsl cmp aaa jae jne ja jns jnp jge jg inc ss xor push dec and push adc and push adc pop xor mov cmpsb cmpsl test stos stos lods lods std scas fbstp (bad) mov mov loop movl out mov (bad) rorb loopne notl fistp (bad) jecxz in out jmp out out lock xlat repz stos imull std mov mov lds lret movsl int iret mov mov xlat mov mov (bad) sti fist jle jae dec daa inc sub sub jno pop xor push cmp bound inc add jb imul js imul adc jo ja insb sbb sbb xor or imul jae jne ja jns jnp jge jg inc xor inc sbb dec sub dec cmp push cmp je push push sub pop aaa pop sub fldenv andl lods std scas out mov mov mov mov mov loope movb xchg mov mov lea xchg out lret cltd leave fwait ret popf fcomps lret out jmp lret out xor repz stc (bad) sti xchg std mov mov lds lret stos int iret mov aad xlat mov fcmovu (bad) sti fist jle push inc daa pop sub dec sub pop xor push pusha cmp cmp push add jne jnp arpl arpl adc adc cmp pusha sbb sbb bound sub sub pop xor push inc inc sub cmp xor dec js addr16 sbb sub cmp pusha jns clc popa fbld sub fwait or inc mov or xor cld (bad) mov mov fstl inc enter test mov (bad) nop xchg mov inc stc pop jg cmc lcall xor dec aaa cmpsb out call in mov aad xor mov aam cltd std xchg movsl rol (bad) (bad) (bad) lret int3 int iret mov stos (bad) mov (bad) xlat fcomp hlt fcmovnu fnop fild and es sub inc sub dec das xor pop xor ss jle pop push pop dec adc add add mov (bad) dec push push dec fdivrp mov (bad) lret es jne test addr16 mov push add cmp lret (bad) sbb (bad) push mov mov dec dec dec das sbb sbbl sbb or sahf loope xor adc scas mov shl sub aaa scas jns fstps lret xor dec (bad) or push jae stc adc xchg xchg xchg xchg fisubrl add es sahf lahf loopne aad fdivl push mov in push ja int3 inc js mov idiv stc add push daa ret (bad) mov int iret (bad) (bad) not cmpsl aad xlat fcomp fcmovu (bad) (bad) and and and sub pusha inc dec cmovbe sbb add sbb pop sbb outsb data16 jb insl sub js imul cmp push push jns popa imul imul push pop pop pop dec pop pop pop push dec movhps push pop add adc push xor or adc ds bound sub imul cmp pop pop sbb sub jnp xor xor int3 ret xlat int enter (bad) fcoml lds (bad) lret enter in loope jmp orl nop xchg xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) lds xchg cmp test mov rcl int3 lcall stos es sub mov dec fisttp repz ds push dec or pusha fwait xor roll scas mov je out icebp lcall adc xor xchg jle cmc add je dec faddl es leave (bad) lods xor icebp or mov mov (bad) xchg (bad) adc and mov daa sub xor or xorl ds scas lods sub (bad) xchg hlt mov shlb rcll addr16 mov testb push jmp das cmp iret pop inc sub push cmp inc stos out movl mov xlat xor shr xor xchg and inc add aas dec stos addr16 push int jns pop jg loope inc leave xchg jl fcoml idivb fbld mov lret xchg mov jne inc loopne push inc xchg mov hlt pop sub imull psrad mov mov sahf xor mov jno repnz andb hlt lods sbb aaa es mov lock pop adcl add pop adc xchg fidivr mov xchg sbbb pop movsb imul fisubrl fucomi test adc dec lods and (bad) out jo inc sbb fs sbb push orl notl rep cs push and in outsb loope jbe loop enter inc sub dec in pushf fnstsw lahf scas rcl dec sub in mov (bad) (bad) sti dec je clc cmp inc nop scas dec jle (bad) sub or ds xchg push add popa data16 adc ljmp in popf xchg (bad) dec sahf in movsb nop les xchg test test jo rcll sbb add adc imul xor xor sbb dec jle sbb in mov mov imul arpl and addr16 mov popf jno mov sbb cmovns movsl inc das sub pop pushf mov pusha lahf les mov cmp loop sbb sub jle aam jge push push cli inc rolb push arpl ss lods test nop xchg js xchg cmpsl bnd clc inc iret inc sti xor fwait pop lea lock lahf aam adc stc mov ret in nop js jb loop jno pop xchg fs (bad) mov nop adc push aas (bad) cli jle in mov (bad) mov pop inc cmp xor mov push add test pushf push jno out mov or mov movsl leave clc test mov mov pushf xchg fsubrl push popa xabort pop lds xor sbb inc mov je aaa push pop push inc test cmc movsl lea enter mov jp sub pushl mov xlat xchg fistp dec lods fsubrl clc jmp mov push rcrl call test mov pop add push cmpsb or aad adc push daa fidivr push push inc (bad) repz imul push xchg jge sbb jp subl jmp imul push lds and or xor icebp push jmp je popa addr16 push mov repnz mov add pop mov or or mov inc sbb cs sbb popa bound gs imull push insl insl out loopne jno jae jne ja jns jmp jge das inc inc push int3 inc inc inc inc dec dec dec dec dec dec sbb push push dec add push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test pop and lods dec and mov cmp mov mov mov mov nop xchg add cltd cltd fwait pushf sbb cmc jecxz gs out imul out lock repz cmc ret stc call outsl rol ret (bad) lds scas lods mov cmpsb mov aad movsl mov scas mov inc dec and jae adc sbb add inc inc cs xor jne inc jns inc dec jl dec push dec ds jae push data16 addr16 dec js arpl pand pop jbe gs jnp jbe sbb pop push jp adc add data16 push sbb add cmp pop pop js xor xor xor insb daa sub inc inc jbe or xor cmp xor xor sbb xor xor aad ret fadd test mov fst rol (bad) std fcmovnb ret (bad) (bad) mov mov lods loopne ljmp fnstcw call lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or and and sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or pop ret xchg add add xchg (bad) and push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or sahf lahf addb xor mov lock repnz sbb (bad) jmp inc insb xor clc inc jp mov out (bad) xor or lds cmp fstp fbstp aam pop rolb mov imul xor ss cmp cmp cmp ds and and and es sub sub sub cs adc or or push pop pop sbb push pop push push push sbb pop sbb dec add sbb insl jnp insb jae out call in out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or and and sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub and jb (bad) push ret (bad) aad fild pusha (bad) cwtl sti xchg insb adcl fistp nop jmp xchg loopne ljmp jb (bad) jg test cmp pushl (bad) cmp leave lcall adcl sarl and and imul push xor not sub les ds xor push push insb nop jne aad loop or cltd jmp aad inc jo nop stos rorb iret gs bound xchg mov addl and sahf xchg sub xorb adc movsb ret iret test mov adc sbb popa mov repnz ljmp (bad) les gs in jge mov addl sbb cs cmpsl push iret sbb sbb out mov sbb in mov stos shlb lahf add sbb stc stc cli test stos xchg stc cltd stos (bad) lock jnp ss xor and mov dec and mov fstp xlat mov inc dec mov sarb lret push pop mov xchg ret rol imul xorb insl imul dec jg jno pushf scas in loop jne pop jmp rcrb jecxz aam xchg nop inc mov cli icebp iret mov xlat sbb daa sub and roll popf mov mov cmp xor rcrl xor cmp fistl into icebp cld int iret and pusha push push push call xor inc inc loop xor jle inc loop add jbe in add outsb cmp ret into cld fidiv pushl ret not (bad) cmc movsl xchg push sbb sbb adc mov adc jne add add cmp inc and xor xor loope,pn mov inc cmp es and fimul mov pop jne inc dec cmpsb mov int3 int3 lret mov lds push pop mov (bad) cld cld sti pop insb push repz push jp je xchg pop jmp xchg cltd sbb loopne push mov cwtl xchg xchg add or fistl (bad) cs push addl and adc add scas lods lods or gs faddl mov enter and insb mov mov dec xchg xor xor test inc inc fldpi fucom or jbe in add outsb clc mov scas gs pop clc push pop ret sbb pop ficoml adc xlat femms or or lahf jae movb add cmp mov xor test pop loope sub jle mov scas mov fstp jl scas mov inc dec jne add xchg leave enter (bad) push xor mov cmp insl test js jb mov jge adcb sahf leave enter xor loopne setae sub and push push xchg sbb les mov jp ret into and xor shll test into mov aaa lret pop pop pop std ret shr daa sub dec dec dec in (bad) (bad) xor cmp (bad) mov lds in roll loope int3 or dec out jmp sbb test adc out pop push sbb sbb push mov gs xchg js xchg or jle addl push inc mov cmpsb mov mov inc cmpl xchg out mov pusha mov mov xchg popf pop push xchg pop nop fs mov mov jg outsb ss popa orl push test push lods jle push test lret or aas push loopne mov sbb adc xor rep dec mov and jp sub adc stc xor sbb aaa insl pop (bad) sub dec xchg shrb inc int3 and dec and out pop sarl loop adc adc push xor fstp icebp cwtl iret cld popf loope xchg add imull insl nop push lds lcall lods adc sub (bad) adc xor in out fs sbb (bad) lock add add sahf pop cmp lret int3 int xchg lea xchg push cmp push xchg (bad) push sbb pop sub jmp into aaa mov fldenv les testb (bad) repnz jae aam mov inc and or (bad) inc icebp xchg cwtl dec jmp dec push popa sub imul dec popa bound aaa lea xchg xchg jmp arpl stc ds xor cmp aas leave or lret jge push cmp (bad) fmull fcoms mov movsb xchg test mov (bad) icebp mov lret mov in push sub fisttpl dec push inc insb dec faddl addr16 or (bad) aaa cmpsl cwtl cltd lcall push out outsl mov lods repz sbb add xchg call lds lret iret or sub push adc loope shrb (bad) push in in js mov sub shlb mov and jnp cmp imul cli jb mov adc cmp adc pusha cmp inc sbb sbb jmp (bad) xchg adc sbb test xchg (bad) mov adc (bad) ss and mov stc test mov mov mov or mov cmpsl push or mov pop pop icebp pop js and lock mov adc mov out int xor add mul (bad) sarl mov push lods test rclb test fsubp cmpsl mov lea int scas lock or hlt stos jae in mov cmp data16 leave xchg dec or fisubl loope jbe fdivs movsb and and sub and adc jno ljmp fiaddl int3 leave enter mov enter or pop dec or jp dec inc jb test dec pop sbb push les in sbb test jo stc mov or dec mov (bad) or cmp inc and inc xor jno add push push les pop lret sub outsl sarl lods ret sub and les ljmp push aaa lock cmp mov rorl iret xchg mov cli mov aam lds adc rorl outsl mov popa sub mov clc ss add ljmp test lahf add fxch or fidivrl mov sub pop sbb push xor jo sub pop cmp clc inc cmp xor dec into pop cmp jbe aaa lds pop (bad) out loopne cmp pop inc jg dec xchg fs call shlb (bad) outsb stos xchg outsl mov xchg xor sti add jnp dec push fild inc dec push xor inc int3 xchg ds or push jl pop in adcb xchg mov mov (bad) inc cs cld inc mov outsb and icebp xor je mov pop ljmp add dec (bad) dec pop mov scas imul ret ret imul mov mov add in sbb push lret ja mov cmp mov inc xor mov and fisub adc ficompl sub fbld and fstl dec adc pop sub xor cmp adc imul add add inc or lret pop pusha ficoml es jmp jecxz lods fadds sarb xor fld repz push inc in mov sbb jne das cmp pop or lret dec pop push push pop insl dec mov dec add xchg sbb (bad) fldcw pushf inc adc mov mov xorl adc mov in xor push sub aam lods daa arpl cmpsl das mov inc inc xor pop mov dec rol mov inc cld iret loope mov xor jg lea mov gs xchg inc adc cltd cli cmpsb fistl mov shrb es repnz inc xor xor dec lcall daa inc cmp mov aas rcll fsts fldenv adc sub cmp inc in fdivrl xlat repnz test loope rcl or inc jno sbb dec loopne push push fwait hlt dec rolb cli jge jae jae dec push fmull push cltd cwtl sbb scas cmp pushf sbb je sbb xchg hlt test mov adc push (bad) mov cmp pop scas mov push mov mov mov xlat mov shrb jnp outsb sti and (bad) xor (bad) mov hlt inc inc jg (bad) mov fildl mov fsubp clc in pusha les insb addr16 xchg bound and insb mov data16 out jmp inc repnz repnz movb mov cmpl adc xor mov fisttpl iret not aad cmpsl push js,pt inc ds xor enter jmp in add pop (bad) or or test xchg insb sbb pusha sbb bound icebp dec in loop pushf sbb pcmpgtd xchg xchg xchg sub lcall jb jl sub iret mov sbb sbb sbb mov test jle pop fstpl rcrl hlt rolb (bad) (bad) lods inc out dec dec out cmp inc call inc lret push fadds inc repnz les mov push jns ret jge fs test ret add or clc bound adc push js stc mov jbe xchg std jbe xor sarb cmp xor cwtl xchg test push push sbb pop pop and pop xlat fcmovu lods fdivs fstpl movsl (bad) enter bound bswap (bad) dec mov std push jmp idiv clc idivl je icebp lock aad cwtl sar sbb jb loop inc push mov cmp popa cmp and gs xor andl cwtl xor xor call xchg fistl or shll and mov push (bad) incb pop push push sub mov mov imul push testb addl jae jb or push pop xchg xchg xchg sbb popa lock negb jns pop push cmpsb adc lock mulb mov lret cmp xor dec adc mov es jne mov leave (bad) fcmovnu fimull fidivr inc sub iret loope repz sub inc (bad) shrl ret ret pushl and stc clc mov push or add out addr16 add call faddl inc jmp aas mov aas xchg pop addr16 xchg xchg sbb orb and lea outsb adc push test adc mov or pop ficoml add mov mov push or xchg jp jb in hlt sti inc mov dec (bad) cmp inc jmp insb out in jmp jl jns and fcomp add ja outsb inc push push lcall mov push mov (bad) loope popa adc inc mov dec lock cmc divb sti icebp clc sti cld fwait jnp mov int add sbb jl inc (bad) lret pop (bad) ficoml mov rcr (bad) push fisubr and daa test jb cmp mov aas mov es adc inc add orl push adc insl pop xchg insb loop fistl dec dec or pop xchg popf movq loope xchg sbb jae and or or cmp dec or sbb daa fidivrl fist lods mov lods mov push repz mov imul fldt loop cmp mov (bad) dec jg aad icebp xchg in xchg jbe add xchg add cltd pop rorb je outsb pusha pop shlb mov popf adc adc cmpsl sbb lods add add cmp pop xchg xchg xchg inc sub rcl sbbl xlat mov stos sub push sub and sub fildl sub imul lds je push imul cmc mov add xor push push sbb sahf call mov test es in mov xor aaa and scas or jnp inc leave test sbb cmpsl es and cmp push mov mov cld popa imulb dec int3 cmpsl ret ds inc lds dec dec ret push jg xor shr mov mov jp jno in insl out push lahf addr16 (bad) pop leave push jb and and adc lcall jge lret cmp jmp xchg sub xor cmp mov xor adc mov add fcmovnu fsts (bad) cli jbe js ret add bound dec add leave ret jne std rcrl push mov cmp pop pop gs sti cmpsb loopne call imul mov cmpsl xor mov cmp add adc mov lcall jno stos and stos cld mov movsl mov inc movsl scas dec push push or xchg and cwtl sbb cwtl or or leave out add insl lock negb cli push (bad) ja cmp inc mov xlat or pop repz loop bound pusha enter adc xchg cwtl cltd int jmp loope push pushf subl in adc or stos mov rol mov dec cmpl mov es into rcl push adc pop xchg aam sbb and and in xlat pop es jnp rcl imul fmul (bad) pusha shrl imul inc add dec sbb orl out (bad) out in dec dec nop int pop dec repnz loop inc jmp sahf cmp stos cmp xchg test xchg (bad) mov clc cwtl mov jg test xor inc je or mov adc movsl stos test or mov mov pop mov iret lods dec xchg subl sahf out mov mov mov (bad) fwait rol (bad) imul xchg jns rorb jnp or xchg xchg mov dec enter pusha pop insb outsl push sbb sbb xor adc repz cmc add add add bnd rol inc mov inc dec pop xor xor test addl movsb (bad) (bad) fimull jns sub fimul das xor mov inc push mov ret insl (bad) cmp add pop xchg add push push mov in out in addr16 cwtl xchg lret in in jecxz push ja xor arpl scas addr16 jp mov push sbb jbe jns packssdw push mov push ret mov or dec xlat lods pop sarb fwait or ss xlat in repz les push and sbb push (bad) jecxz bound je xor out inc inc jg aam mov js mov jno pushf outsb out cld leave (bad) (bad) cwtl jno xchg out sbb bound call test add mov or dec push add scas test adc inc ds dec outsl lret inc dec adc in xlat fadds xlat mov fcmovnu push sbb sarb pop ss sub sbb ret insl rorl pop push inc add or xchg out add pop dec in or popf pushf cmp cmp cmpsl sbb mov mov xchg cli xorb ret or shrb fstl insb mov mov pop pop (bad) (bad) and mov dec dec jmp pop mov mov jecxz xor faddl punpckhwd mov (bad) jecxz inc mov (bad) jns popa imul sbb xchg pusha xor or in in mov or add aad xchg std test scas sub (bad) enter les push pop int3 push push mov shll lret iret jo and (bad) int xlat jo jmp jae in data16 ss rol ret mov test jbe push ss push pop loope loopne repnz lret sbb inc jnp xor mov jecxz jbe popa popa bound test outsb loopne xchg cwtl sub mov daa mov sub dec inc inc inc adc sarb pusha stos add mov fistp lock inc hlt pop push push sti stc clc dec les ja mov call jl mov fcom aam fiadd popa in outsl in insb loope jle arpl sbb ret pop mov push pusha or mov mov test or movsb js sbb lods xchg jl (bad) ljmp lods mov dec xor inc sub das push sub fcomps fcmovnu mov fidivl (bad) xlat xlat (bad) cmpsl data16 jns loopne lret int push mov jge pusha mov les mov pop pop arpl ftst fildl cmpsb jecxz ljmp sbb dec loopne ljmp add repnz mov lea cs push subb adcb adc addl mov aam push add cmpsb mov (bad) mov aam pop cmc dec sbb pop icebp and repnz out movsb roll in shll js jnp jle dec cltd pcmpeqb push fcomp outsl in jnp outsl imul jmp push push sbb adc mov add or add jle out xchg sub sub cmp sahf inc and test mov sbb je,pn gs (bad) mov outsl (bad) movsb jne mov cmp leave push mov out mov out push imul hlt addl inc inc inc inc inc dec dec in adc imul mov mov pushf sbbl mov mov push jmp movsb (bad) (bad) test mov sbb and adc add add mov dec xchg idiv rol imul dec fdivl iret mov insl jecxz aad outsb or xchg add sahf jne xorb mov lahf jae xchg mov nop ljmp in out insb xor scas xor scas leave or jnp sub ss xor iret rcl mov xlat fcomp sbb aad bts mov jno inc jno xchg ret js out int pop aaa pusha popa outsl (bad) ljmp push push std dec (bad) push loopne iret fstp jb imul (bad) pop cmp pop and loope cli jne idivb jge insl rol (bad) pop pop mov pop mov pop lret pop and inc inc in data16 ss out inc sahf fsubrl sub mov gs xor sahf cmp (bad) xlat inc scas clc xor sub insb sbb dec in push mov pop sbb fcoml stos fisttpll scas pop xor aam pop aaa pop or popa sub movsb pop mov clc call es mov mov jmp mov out jg lcall jbe stos fmul mov aad clc fwait int push jecxz call (bad) inc push (bad) mov mov or outsb mov popa pop popa cwtl ss mov or je (bad) inc clc lahf aas mov dec repnz es das pop sub (bad) mov pop pop push es sub (bad) shlb xor fbld mov cld jns cmp add mov mov mov sbb mov out sahf popa std inc mov mov fist gs cmp push pop mov sub add mov es aas xchg jbe adc movsb mov dec rolb pop les add inc add sbb cwtl add add imulb dec xchg addr16 stc ret (bad) pop lcall pop dec dec dec ret stos inc int3 mov lret (bad) (bad) jnp mov aam fiadd popa fadds lea cltd ret (bad) and mov mov mov hlt cmc lds xchg sti mov or into push add sbb setns mov aas mov mov xchg sub rcr fistl loope dec and ret fnop xlat pop and pop cmp inc and inc cmp pop mov mov jbe test or or (bad) into push or adc repz fdivs inc call hlt movsb xchg mov mov sub addl dec mov fwait and add sub cmp inc mov lods or mov push sub pop shrl push and push dec les in xor mov push push jbe or out fnstcw ja imul push xchg jne jg push popa daa clc fisub xchg jecxz add adc mov xor icebp jg test cmpsl movsb cmp int3 dec (bad) lret dec adc xchg inc rcrl (bad) sti add imul add xchg stos leave push shrb push sub outsl adc pop fsubl cmp dec jns,pt (bad) xor pop pop pop pop les out int3 mov adc push sbb inc inc jg testb dec cmc popa hlt lahf sahf or sub xchg mov xchg das mov (bad) lcall lahf stos xchg xchg pop stos sbb and dec dec mov pop pop lods orl xchg add mov es pop sub xchg push cmc repnz insl xchg pop cld inc popf inc push push fdivs dec ret push loope jmp insb rcl or (bad) (bad) mov add jp xchg js insl insb imul dec mov (bad) jmp or sbb outsb push mov imul xchg int cli clc mov stos push (bad) cmp xor xor mov mov push ss mov jl mov jmp mov jb addr16 pop fucomp jmp imul (bad) decb icebp jl pop popa or out repz in in daa std mov xchg pop loope or mov popa cmp inc mov xor sub mov cmpb push inc pop mov sbb fimul jb sbb sub dec mov dec pop dec push push repnz imul dec aas lock ds jecxz xor faddl punpckhwd dec mov popf js imul addr16 xchg fs and lret ljmp sub (bad) or hlt idiv scas lods xchg scas lret or xchg sub sub cmp inc xor xor movsb cltd test cs and aad pop fcomp fstp je divl sub jae test addr16 jge jns popa rcrb mov std (bad) std push push cli (bad) (bad) enter or in inc cld mul call fiaddl cli cmp xor cmpsl cmp add stc xor fwait sbb xor sub lret iret mov cmpsb mov inc cmpsb add xchg and lcall dec mov bound inc sub stos mov mov xor dec inc inc iret mov enter sub xchg add jb cli mov xchg jge xchg cwtl cltd sbb push jnp and xchg loopne insb jmp in out gs lock cli inc daa jo icebp jno iret cld add ja dec (bad) hlt dec ret cli inc (bad) cli ret jnp shlb sbb ficoml es fcoml out adc test das (bad) scas xchg sub sub xor push insb mov sub push mov push mov and xchg xor push pop inc jmp in loop pop jae gs cmp adc scas cmp pushf cli daa jnp mov mov jg inc leave (bad) incl inc dec rorl jbe xor movsb fcoml imul in mov out insb jecxz push aam cmc cmc div insl cli cmp mov mov pusha test push mov negb cld sahf je popf jno pushf outsb out imul int jbe pushf negl jle push adc lcall decb sub ljmp inc pop lods shll sub xor mov add pusha jbe je in out xchg les pop nop adc sahf adc xchg xchg fsubr xchg mov sbb sahf roll bnd push or pop test add lds ret les mov and ljmp std outsl dec ficompl lahf fisttp loopne test test fcom js scas sub cmpsb mov xor cmp xchg cld std cld add arpl loopne addr16 pop clc sti and sbb xlat and loop (bad) dec dec popf pushf out sar lcall xchg mov pop xchg fwait and test sbb and pop push pop pop or jae out stos and test clc push loopew pusha aas clc mov mov rcl jge aam push or addl pop xchg xchg xchg ret clc xchg cwtl cltd lret fs int dec imul sub ficoml data16 stc mov neg scas lods lods stos add (bad) inc ffree (bad) enter inc mov dec adc xlat mov in mov and and jb dec sub sub mov xor popa int (bad) mov push jp push std jbe cli jae pop negb pop repnz jmp rcll push es dec inc inc xchg incb sbb push mov or add push test mov sub jnp adc sub xor mov mov daa or add push call push cli std and jmp push push divb pop mov jecxz jl lcall in cli test mov ret bswap mov js stos insb imul (bad) sbb jne mov or rcrl mov add adc test stos xor sti cld adc add xchg cli cmp lcall sarb jp xchg fnsave mov and ficoml xchg pusha sub lods sbb das iret add enter jbe mov clc adc rcll test adc into pop push inc lahf push cld inc jmp daa jecxz xchg (bad) jecxz outsb out push out imul outsl and pushl xchg and (bad) mov inc inc adc or mov cmp test mov pop pop sub xchg push imul mov mov lret test js negb jbe rorb dec orl ret loopne cltd jb leave bound mov lea add test or cmp xchg cmp int (bad) pushf mov cmp sub mov and mov lret xchg jl fdivs mov inc xor jbe mov mov xlat popf das std cld pop mov mov push addb stc pop xchg jbe jmp popf push in fisubrl cwtl loope add mov cwtl xor popf sbb lea mov jp movsl das addl mov dec mov cmp push stos and adc or into movsl pop rcrb lahf or scas inc adc jno loope insb lahf inc inc in cli jl push mov jbe mov gs stos outsl outsb lret sbb gs leave sbb jne mov xchg or inc int adc (bad) femms stos test adc sti xchg clc xchg push inc add lds and adc lret xchg push in mov lahf fisttp dec jae fs xor sub in lods jmp jno pop xor xor mov and add inc les pusha or dec adc aas or push pop fbstp jne or movsb loope add mov sub xchg jb inc mov mov cmp jne lret fnsave dec add mov fsts mov rcpps pop loope mov cmp jmp mov add push mov or inc fadds scas or out in clc add xchg ljmp sbb fwait je xchg and cmpsb and bound push je add jne push cmpsb inc aaa int and mov lahf and cltd xor out lods and cmp and and pop fisubrl dec jns pop or shll out cmp mov ret gs imul cmc mov add outsb clc sahf push jecxz fs cltd insl aad push popl xchg xchg out xchg ss cmp jl mov imul mov cmp add js mov mov or push cmpsl lahf jb lods fildll sbb sbb enter sub inc out clc push push xor mov in cmpsl out inc inc cmp xor test jp fiadd inc or cmpsb inc mov lds mov push pop xchg int dec ret mov push adc mov jp scas aaa mov (bad) rep xchg push jnp rcll xor lahf mov cmpl mov and pop fist xor addr16 jle xchg jge shlb int3 inc pop pop pop mov cwtl push pop pop cmp pop popa cmp (bad) inc in in lahf in dec dec popf out lahf mov push pop xor es xor xlat and mov jg adc subl (bad) mov or (bad) push or rclb imul lods dec lcall in scas and pop out dec dec test jge fnsave add test or pushl outsb insl sbb popa in mov fwait negb xchg stos sbb aam mov loop xchg mov mull mov add cmp cld xchg xchg xchg xchg push fwait inc cmp test pop pop (bad) test aaa xchg sbb fsubrl lods aad dec jle inc fdivs xor mov mov mov push aas push imul sbb (bad) (bad) scas in pop cmp pusha fldenv (bad) rcll sbb ret or ljmp push (bad) sarb pop pop inc stc and adc inc (bad) out push in dec cmc sbb jo cmp test out in pushf jge sbb sbb push lock (bad) dec mov adc mov sub rorb adc sub or add ficomp pop or sub pop loope,pn lock clc lds jecxz pop sub jns mov fmull popa fadds fidivr iret pop sti xchg lds xchg cwtl lret je mov mov xchg lock add lock idiv stc jp loopne mov (bad) les inc cmp repnz movsl cmc test es and jb je enter jle adc and adc enter sti bound cld push push inc or push sbb or push push xlat jg jge jno popf pop sbb (bad) loopne imul pop cwtl jb jae jno mov jge ds loop mov cwtl and jmp shr dec pop adc ficompl sbbl lret cmpsb movsl cmpsb daa and inc gs dec dec fdivs movsb inc repz cmpb js xchg ret cmovns int jo push int jbe jo int imul pop fild push lods adc sub jb stc stc cli test sbb add cwtl inc cmp lret leave leave lret cmp in inc xchg sub mov mov fsubl call cmpsb fs dec inc test sub sbb jae lret mov mov xlat and cld insb movsl xchg idivb dec std out push out in lcall pop out (bad) xor aas in imul enter and and test stc call mov sub push mov dec mov add cmpsl sub movsb imul out pop pop lock push fist cwtl mov stc mov lret dec dec int inc mov sti leave jl jp imul ja lea fldt adc pop loop sbb out scas lret mov sbb xchg into mov adc sbb out mov lods adc cmp das xchg (bad) xor xor leave sub and pop sbb aam and push sbb aad rcrl (bad) xchg or int3 lret inc lret add les cmpsb add or out xchg cmc hlt push ds push push dec cltd (bad) dec (bad) inc and dec jo je cltd pop pusha mov or sub jno and (bad) cmp jge out clc add mov inc les lea push jmp call getsec pop xor sbb out incl mov mov mov fbstp mov mov ret fiadd add mov insb fcoms mov data16 jmp mov iret in out jns adc add and scas adc mov add call popl popf clc sub mov fcompl fbld and ja push das rol sub ljmp fnstenv cmp std mov push mov add lds movups inc jle dec jge jg pop call or add sub aaa lea add adc sbb cmp das xor or xor sbb xor cmp sbb sub (bad) int3 and dec test mov repz mov xor fdivs cmc imul pop fcmovu add negl into inc ret (bad) icebp adc dec std adc lods test add mov sbb lods out imull add ret les repz xor lret test xor cli loopne xchg mov pop mov dec and push insb fldcw sarb aam inc cs xor inc cmp add jno shlb ret les pop rclb test inc pop pop pop sub bound lods dec jge jg pop cmpsb inc je push call or add or sub ss mov sbb and or sub iret add les orl or xor cmp mov out ret addr16 and gs mov cmp outsl out fst fbstp (bad) pop in fsubp or popa fsubr (bad) add (bad) push aad lret repz (bad) jbe cld adc pop clc push popf sub popf cmp mov sub nop jle sbb cwtl jbe sub mov inc mov movsb (bad) mov and cltd and ficom in jbe mov xchg jle mov daa ss mov data16 pop ret call and and ja pop push dec popf fsts pop xor xor dec xor sbb sbb adc xor adc hlt cmp add ret push in sub sbb aas and rcrl add xor (bad) in cli leave (bad) dec int3 test enter aam loope sarb std adc xor or fsubr jmp shl ljmp loope sbb mov adc pop lods pop xchg daa mov mov mov sbb mov mov mov cmpsb dec (bad) jge dec subl or test pop mov sbb test pusha aam or movsb imul pop outsb push mov dec pop mov icebp push je mov pop insb outsb outsb orb addr16 cltd push (bad) jne push into dec jb jl pop roll pop jmp mov sub in mov sti push scas inc andb lock popf icebp cmp sub int3 pop mov int3 sbb xor xor sbb pop xor pop pop div das out cmc sub inc (bad) cli inc or out xchg dec pushl mov enter sarb dec lret int ror sbb push rcrb clc popa xlat lahf or out call fmuls push mov or cmpsl cmp mull sti (bad) xor iret das movsb fisubrl mov sahf fdivs movsl popf and pop sbb jl jbe leave movsl lret jl jl inc or inc outsl pop outsl outsl pop jnp mov xchg arpl fs arpl jno mov push arpl test push jp je push scas jo pop cmpsl inc jno jnp pop mov prefetch loope les sbb adc and adc sub sbb cmp sbb pop std sub add fstl test xor push xor jl int3 aam and sbb and imul out aad call fdivl loope in jmp jecxz cli push add imul sbb pop repz ret adc dec sti pop fidivrl xchg push subl (bad) arpl sbb sbb mov cmpsl xchg out cmpsl dec xchg popf lods test xchg stos inc mov loop addl ja mov stos outsb rolb push dec mov and xor insb mov addr16 imul sub dec (bad) push data16 xchg dec jns jae push loopne jl pop out jno pop jmp cwtl push cmpsb cmove imul sub mov (bad) mov jns (bad) mov decl add pop jns sbb dec sbb add add xor rcrl stos or dec or push pushf sub lods inc jp mov dec xorl cmp ret fcmovnu or add mov adc xchg jge shll lock negb xlat arpl lods out pop lods adc mov movsb jns ja into mov xchg mov xchg mov mov test xchg pop mov mov mov mov dec dec inc scas insl cmc dec mov jge imul pop pop pop mov fldenv pop mov outsb fs mov insb (bad) dec loope gs push cli dec jl jle pop in inc ja jns and cmp in and or sub adc or sbb sub and cmp sub xor xor sub cmp and movsb bound icebp outsb sti and xor ficom shl fidivl pop fsubr mov or fldlg2 add addr16 in negl (bad) js cld loopne adc jne div stc imul orl pextrw aaa xchg clc pushf jb add and rclb inc xchg stos inc cmpl push adc push cmp sbb add jl or insb fidiv dec dec cmpsb jne push push push mov push pop mov lds shll pop insl jnp pusha push push dec out dec jnp jne push repnz jb jl pop sti inc jne pop jmp mov das xorl sti ds sub hlt cmp int mov or sbb or push aam inc sarl dec and div icebp int repnz aad (bad) in fmul loopne xor pop mov movsl out (bad) insb jecxz ret loopne ljmp out repz loop stos insb int adc shll mov insl mov sub pusha stos xor movsl nop jle daa pushf jb pop cwtl jbe and mov inc cltd aas test popf and (bad) orl std je int3 or inc sub mov jbe arpl sub stc jbe dec stc push imul in add or (bad) push inc inc inc nop stc inc fisttpll (bad) loope dec cmovae add or sub sti ss sub aas cmpsl and pop sbb add sbb gs sbb ret push lods adc xor xor cmp sbb sub dec std int3 lret out pop hlt (bad) ljmp aam ds pop fdivl icebp push fdivs int fucomi lock ret in add ja dec cli nop hlt sbb imul inc repz lret cli adc jge push stos pop mov pop add loop lock (bad) jg stos xor jb js shrl test cmp mov cmp nop cs mov test ficoml loop lods pusha fdivrs inc je inc je pop push mov pop insl push dec pop mov out push pop mov pop insb push outsb orb addr16 imul repz jge push (bad) jns sub push lods xor out sub or sub and sbb add xchg and sarl lds cmpsb sub sub xor in push pop pop fistp inc (bad) addr16 clc cli cli (bad) cld call lock out rcr fdivl stc pop out hlt fucomip hlt loop ret arpl jecxz in add jecxz stc icebp lret (bad) adc jno pop clc push movsl adc mov mov into mov movsl xchg jp aaa scas popf xchg lahf jae movsl xchg scas cmpsb dec xchg pushf scas test xchg cmpsb cmpsb test xchg pop mov sbb push mov mov dec push inc lods arpl sbb dec mov jge imul call mov lds std mov push notl inc stos push ret inc scas jne dec mov inc loope mov gs mov leave pop mov mull jmp inc cmc loop dec repnz push dec xchg shlb ljmp xchg pop ljmp out xchg in gs popf sbb outsb sbb jae sbb sub test addl pop push jns adc xchg push fistpll or ds sar into rol cs jne rol daa ljmp rcl xor pop jecxz xor push mov call imul out in add fdivl sbb aam ret (bad) stc imul sub test mov sub or and mov adc int3 xchg mov inc addl xchg xor jmp pop in stos pop aam fldcw lods lcall xor ljmp or lahf push rol icebp add (bad) incl cmovae addr16 inc std clc pop sbb in in (bad) dec mov mov mov aas jmp add and and mov bound mov jg (bad) dec movsl mov scas cmp push frstor arpl mov cwtl push push shrb nop mov loop (bad) mov xor dec jp,pt shrl scas jnp shrl movsb jne pop lock leave lret dec mov dec mov (bad) mov mov mov cli test jl sbb mov movsb dec xorl movsb scas mov xchg daa mov sub mov mov inc lods pusha fcoml jns sub into mov js,pn imul or adc (bad) out loopne lea adc adc aad aam sbb dec jbe inc jne pop jmp mov aas add ss pop sti test pop lods xchg js mov mov mov add sbb add add push fistpl mov movsl mov popf push call sbb cmpsb pop test std sti inc add mov jns stos mov repz xor addb fs jns (bad) imul addr16 xchg sub popf nop push scas loopne push in in shrl lahf in pop mov jae mov icebp into stos sti xchg leave cmp loopne add mov cmp sti mov leave inc lret ljmp fcoms test loop test movsb lret sub jge xchg sub xor in and arpl add add outsl push push loopne sbb repz push jp dec jns rcll pop jle lahf dec jecxz loope or cltd cwtl xchg xor sbb in cmp adc (bad) std and or int sbb mov adc adc (bad) lret lods lods or add rcr cmp dec cmp mov push push test xlat cmp fmull dec loopne (bad) xor jle jmp in jne aam iret jmp imul enter clc bound xchg xchg sbb sbb jns adc seta mov or mov js add ds xchg mov dec mov pop mov inc xchg and (bad) inc scas stos inc (bad) aad dec movsb mov push mov (bad) pop mov inc rol mov stc clc outsb adcb test dec jnp jne push pushf dec jb inc jno jnp pop in pop jmp ljmp or sbb cs loopne adc es test into or xlat adc (bad) xor add add das add aas cmp in sti into mov in jns and cmp jmp shr fdiv fidiv ljmp (bad) cli pop mov jmp push shl ljmp div sbb adc jno ffreep stc imul mov mov adc repz jne jle pop ja xor scas jb xchg cmp mov cltd add mov test or mov stos pop ret inc scas gs add shll gs les adc incb or into add sbb sbb jne cmp xor loopne cltd xchg xchg or jmp dec jb jnp repz jb jp movb adc lea hlt push pop out jno setg jle outsl push cmp cbtw movsb sub pop repnz pop push clc mov dec pushf mov jnp (bad) imul rorl iret jo sti rcrb adc lret xchg popa pusha arpl sbb pop fisub adc adc jns loop or dec idiv stc cli popf jne ljmp call int3 and pop fisubr sub aam rcr and mov sub push roll mov leave pusha push ret sbb xchg or mov hlt repz xchg sub inc jg ret hlt fnstenv (bad) or out jmp cmp jmp jno jae xor test mov data16 in xchg pop stc clc (bad) (bad) dec mov mov pop pop pop sub cmp push cld and dec or mov mov xchg arpl mov jge mov add ljmp jnp xchg adc (bad) iret pusha xor mov adc push or jb add jp cmp inc push xor dec dec sub jg (bad) xor and xchg out lret pop gs stos in or test ror into jno in cmp or outsb insl push or fstl ss mulb or in in jmp jmp push iret das decb xchg lahf fwait lcall aas ds mov hlt mov nop mov mov sbb scas or add out cmpsl cmpsb fstps test pop pop (bad) fwait imul bnd cmp pop scas loope jmp aaa cli push or insl shl out in add jecxz stc (bad) repz (bad) jbe lock cli adc insl mov mov mov sbb cltd fisubr leave cmp xor lea and in xor inc and mov (bad) addr16 je into stc xor xor (bad) fstpt leave enter cmp ret xor inc pop (bad) loopne les out loopne pop gs jg jno pop repnz jbe js and add and in popf sub pop adc adc sbb xor sbb adc or adc cmp sub pop dec clc sahf pop pop and repnz hlt jecxz clc scas dec dec out xor repz push faddl or jnp mov mov clc xchg (bad) xchg sbb mov bound loopne loop or cld out mov adc sbb out idiv scas adc add pushf pushf xchg sub xchg nop inc sub mov mov inc push cmp push int leave or xor cltd pop sbb push dec and es push cwtl stc sbb aam fsubl outsb out lods mov rcl mov mov ror cmp jb sti mov inc lret sti rol (bad) mov scas std outsb loopne popf (bad) shrl mov ror adc cmp cld mov dec (bad) xchg movsb ret std div or out jmp ficomp ficomp mov loope xchg cwtl xchg imul test jbe std lods popl xchg fwait mov mov mov xchg mov push sbb (bad) mov cmpsb movsl rclb inc push pop pop pop pop jo outsb das inc pop push push and pop inc dec inc mov cmp jle dec int3 push jbe or jb (bad) sbb push add pop sbb pusha pop loope push push push adc sub add or jg or add test cmp leave lret or es adc sub and or rcr fnstenv test xor push mov into mov mov sbb test stc rolb (bad) and repnz (bad) test loopne out sbb ficompl test in and xchg dec push nop cmpsl mov dec (bad) mov mov mov (bad) ret pop mov add movsb lods stos adc cmpsl sahf fist stos mov out and push pop push sbb cs push incl dec mov cmp mov pop (bad) jns xchg js outsl cwtl xchg xchg fcoml imull gs mov adc sbb jmp sbbl adc lock mov or jp fildll cmp add cmp xor into iret cwtl push push stos and sub mov pop mov sub cmpsl (bad) aad sub callw (bad) int3 lret mov adc mov aas jne lock testl mov lock in daa pop pop pusha cmpsb out xchg lcall jmp ja jae mov xlat mov mov mov inc mov jecxz mov dec push bound test adc (bad) add pop cmpsl movsb movsl jecxz sub sahf addr16 jbe or dec lret pushf mov jl add jg inc cmp jne mov dec adc (bad) mov sbb push push popa lahf loopne and sbb lods into lret call push or xor or add sub xor cmp dec adc xor push sub adc cs sbb and scas ret fcmovbe shll fld enter int3 mov mov jle inc (bad) rorb xchg (bad) xchg jmp ljmp cltd loope loopne in (bad) cmp jecxz lahf xchg xchg imul cmc jne mov mov cmpl dec mov mov add xor lods lret sbb sub mov data16 mov cmpsl mov and mov push dec jbe xchg inc dec dec cli mov mov cmp shufps scas jg jne lea gs imul stos imul imul and rcll sbb fs xlat pop push or xor or mov push inc xorl cmp sbb mov mov xor fld xchg push adc das es sbb sub jnp rcl xchg xor xor mov ror cmp hlt cli mov dec pop test lea hlt repz or (bad) xchg jae ljmp cltd jns loopne outsb aam popa mov xchg sti call sbb jns js decl mov ss xor inc repnz aaa cmpsl scas lods pop jo pop nop frstor lcall pop pop cmpsl test jmp sub pop push dec cmp aas jb aas dec inc inc jnp pop mov jl int jg dec bndstx jno jb and adc popa push sbb pop pop push sbb and sbb scas enter add or fmull or aas into fldl aas ss inc dec jge sub adc das es sbb add sub scas xchg fcmovnbe shrl xor mov enter mov cli mov and dec rorb (bad) or (bad) xchg fninit ljmp cltd shr loopne sub jecxz lahf xchg xchg out lods sbb cmc movsl test mov addl cltd mov mov mov scas cmpsl scas lods fisttpl pop nop fnstsw lcall pop pop pop cmpsl sub pop push dec mov mov jb inc dec inc inc (bad) cmp js jne jl add mov jae jb (bad) adc imul or lahf sbb sbb and adc movsl and ss or or jns push add inc add inc add xor xor or sub popf pop adc push pop ret and and push sub in cmp fcom outsb sub stos bswap into int lret cmc mov mov add xchg cld cli stc inc adcl and lock pop cmp pop rclb cwtl in adc in lcall scas out push xchg xchg xchg outsl mov sub js jnp mov mov or mov mov inc stc pop xchg xlat sbb push pushf fsts cmpsb mov movsb bound notl push stos in imul xor mov aas jecxz inc inc idivl add jle ja mov je or push push ficom std bound data16 out mov sbb arpl jmp push adc icebp mov xchg push add cmp cmp jl (bad) enter xor xor xchg loop adc test lds fcomp (bad) sub rcl shll mov jo jb mov mov dec ret lock (bad) inc aad enter in jmp pop notl and loope sub sahf cwtl xchg loopne fwait and (bad) cli cmp ds fldl or mov push mov loope mov fcomps pop sbb shl mov sbb and stos shrb push push push push jno mov dec dec inc mov inc hlt jp jg jle or lods inc or inc cli xchg fstl pop insb push sbb aad pop sbb pusha pop es cld in arpl adc adc sub or js idivb add ja shrl cmp ror test dec das sub sub adc and pushf popa fisub out lret (bad) fldenv sub in test jl jbe repnz rol int mov cli cld sti pop push pop dec into (bad) repz repnz mov fs aam jmp xchg mov pop cltd sahf popf jne gs xchg out nop and idivl mov mov mov (bad) ret push mov mov dec dec push mov inc stos lods stos ficom inc movsl mov lods and out stos lods push (bad) sti dec jne jo popf inc inc inc test stos jge jns mov mov push fwait push adc or sahf pop gs sbb in pop jmp adc out lock mov jno invd pop jo mov cmp cmp add xor mov nop push push fwait sub das aad pop xchg daa and movsl pop es mov sub daa sub mov lret int3 lret xor mov xor pop (bad) clc testl mov out in adc jecxz jecxz lcall lcall icebp add add mov xchg mov mov add push mov sub scas push push sahf (bad) movsl mov mov pop push test sub dec dec dec (bad) xor mov addb jge jns int jl or ja outsl fstps push repnz adc popa gs sbbl push jge sbb and adc adc sub or jl pushl add rorl cmp inc mov sub sub adc and push scas aas insb out fstp fldcw test mov mov rol mov lds test sti cld sti cli iret jb into pop cmc repnz inc cltd and xchg (bad) call and fwait iret cltd sahf popf push adc mov xchg xchg scas sub imull or mov or or mov add cmp stos jno sbb sahf fbstp test pop pop push and (bad) mov pop dec dec dec (bad) aas jle jo dec inc inc inc ss cmp jnp jp xchg jno jo sbb rcll xchg bound (bad) es gs sbb pusha es push adc ds repnz stc or pop push scas fisttp cmp add xor dec push rclb sub imul shll fs insb loop pop rcl aad in mov int3 lret gs enter adc ret push sub clc testl mov ljmp rcrb pop push xchg xor out sahf lcall jmp cmp ss mov aaa (bad) xchg mov mov mov add fcoms xchg rcrl lods test stc push shrb lcall pop icebp (bad) pusha sub cmc sub jbe jmp dec dec int xor jl loope inc jg lret inc add jb jne mov push fist pop pop repz pop jmp sbb pop jmp imul lds add je (bad) mov inc mov mov mov xor pop xchg xchg cwtl adc and and sbb lods push (bad) fs scas mov inc fnstcw mov int3 enter lret jo mov mov rorb (bad) jp (bad) xchg mov ljmp cltd and push sub jecxz xchg xchg xchg out mov aad mov mov adcl mov dec dec mov ljmp push push nop fucomp mov pop loope daa sbb pop das in mov push push dec stc dec jns jb ja inc inc push hlt ss js inc js jnp into add cmovae jno cltd fstps push adc push scas pop sbb push sbb and adc data16 movsb ss push or shrl and aas mov daa xor xor or sub insb (bad) xlat fcomps pop xor and fildll mov fcom out scas fcmovnbe rcl arpl ror (bad) mov xor mov mov rorb dec dec pop (bad) xchg adc ljmp cltd sbb loopne call jecxz xchg xchg xchg loop test test jge mov mov xor rcll mov cmpl mov push stos scas lods pop frstor nop fldl movsb mov data16 sbbl sub in xchg insb sub (bad) mov inc inc inc inc jge xchg lods jns jnp repz dec btc jno pop in push adc adc pop sbb aaa sub insl aad adc repnz out lock (bad) or dec cli mov jns add ret inc (bad) xor xor or sub aad lahf daa push pop mov and push push int3 addr16 jno fcom sbb push ljmp xor ss jns bound xchg cli stc (bad) (bad) push fs inc fcompp fsubs mov aam into and xor icebp mov ret mov shrl jb sti cli and mov mov icebp lock xchg pop rcll sbb sbb fstps out mov ljmp cmp mov clc testb add (bad) adc pop xchg aam test stos jge adc popf fmulp cmpsb mov arpl ds push push xchg sub dec dec or inc inc inc mov push and js test es outsb xchg pushf and gs movsb nop daa fs sbb sbb jmp sub adc mov dec or push jle mov cmp cmp (bad) cmovl xor xor push adc sub loopne scas and pop push and fisubr jecxz loope in aad scas aad and mov enter ret cmp std mov add sahf ret sbb div bound or in in lods sbb cli loopne loop pop push xchg movsl out sahf cltd cwtl and test xchg (bad) mov lock ljmp mov or mov cmp stos test stos fbld dec adc mov arpl cmpsb pop push push and je imul cmp cmp inc inc inc aaa iret push jns js stc jp dec or jecxz fstl mov arpl daa fs pop sbb stos outsb fsubs adc jnp mov xor or push int hlt mov jp cmp (bad) decl dec loop xor (bad) mov clc sub sub xchg push xchg sbb and fisubr lods push loope sbb aad or or lret lret adc mov mov and addb testb inc leave mov in lahf ficoml fistp pop pusha popa movsl out cltd cltd cwtl jecxz jecxz stos call cmp test sti xchg sbb dec dec (bad) into adc jbe xchg (bad) ss cmpsl cmpsb adc movsb adc pop pop and and ret push pusha scas mov jne fmuls dec std mov jnp into inc jg or or cld jne je mov push adc outsl imul sbb popa popa pusha out fs jecxz pusha sbb push ljmp or jnp aas jl pop add fiaddl dec cmp cmp dec pop xor adc dec and push stos out mov outsl mov rcl rclb mov lret mov stc mov pop add iret mov mov adc xchg mov push xchg dec fistpl ljmp xchg xchg xchg outsl outsb outsl mov lret mov inc addl mov inc push mov xchg lods lods lods adc xor lahf fcoml inc and sub push sub push push push loop cmp ss dec dec dec xor mov jnp inc jg or xchg int add je int ret push adc outsl imul inc aad push js popa pusha imul arpl sbb or mov add ja cmp cmp aaa add xor cs and out xchg out and fcmovnu mov scas sub rcl jl icebp jg mov lret adc pop xor mov sbb pop iret mov div repnz add jmp pop fistpl ljmp xchg xchg xchg and movsb sbb mov (bad) pop addb add mov add mov jl lods lods sbb fs fsubrl mov jmp pop pop and ljmp xchg push dec dec xchg jecxz cmp test or ret jp ds mov enter nop xchg ficompl push adc push pop xchg sbbl sbb pusha mov pop push cmpsb (bad) fsubl or mov add ja rorb cmp inc mov xor cs mov mov lods ds out dec (bad) fisubrl scas inc rcl sarb mov lret mov les mov sti int3 jae iret mov repz xchg pop aad push imul loop sahf jmp loop xchg xchg xchg pop sbb mov cli mov inc mov xorb or mov cmpb mov les pop lahf fadd cmpsb mov scas gs pop mov stos stos imul push dec dec mov xor inc inc xor mov jle jp popf testl insb push adc push push out jno pop sbb sbb js imulb insb push push adc out out ret cmp or js add ds mov xor mov sub fcomp (bad) pop push inc adc and out repnz fisubrl call rcl sarb inc lret jnp mov lret add xor std cld out push pop iret mov div repnz (bad) test xchg lock sbb cwtl mul lahf sahf jmp loop xchg xchg xchg sbb mov (bad) mov inc mov orb or mov pop push lods lods lods sbb sbb fcompl mov in gs in out imul push dec dec cmp loope xor sti xor add jge jp ret lahf mov cwtl jae jo fstps fist mov mov adc cld pop sbb push insb lret adc out xor or mov (bad) cmp add ds cmp xor inc pop push loop sub adc pop call sub jecxz push (bad) (bad) ljmp iret int inc int hlt (bad) mov jbe rorl xchg stc clc adcl lret mov out out pop sahf pop inc rcll push xchg aad cmpsl in popf fwait lcall cmp push mov xchg pop cmp mov mov (bad) int3 sub sbb xchg (bad) xor sbb fdivs mov hlt in popa and push push push and sahf mov dec dec mov lock enter dec int testl scas stos jae dec or outsl insl insb fcompl push rcrl sbb bound pushaw sbb sbb push lret or add jb inc push cmp addb pop xor xor cltd pop sbb push dec sub es push sbb sbb (bad) fsubrl lods mov rcl sar jne cmc mov lret leave enter cmp mov add nop roll sbb (bad) xchg mov lcall loope sub test cltd xchg xchg jecxz dec dec test mov cld mov xchg inc lret cmpb push mov xchg xchg sbb movsb ror decb and pop pop pop cmpsb cmpsl loopne insl js,pn push push cmc popa cli cmp outsb dec inc inc jmp xor cmp jl gs push dec or jne jb addr16 mov jo imul sbb pop push in cld pusha in jp pop adc adc push mov jb pop add das pop inc cmp enter xor xor rcrb (bad) sub es push adc (bad) fsubrl lods and rcl out xlat xor leave enter cmp mov ret inc push mov int sbb icebp lock push xchg inc ljmp jecxz xlat push sub out lcall stos call enter mov pop xchg mov les mov add mov xchg (bad) mov shlb cmpsl cmpsb pop adc pop pop pop cmpsl jbe test sub push push push sbb mov jne mov dec cmp into xchg jnp incb jle pop inc icebp inc add jbe je rolb imul shll push shlb pusha and jecxz pusha mov pop push ljmp push or aaa aas jl add add (bad) mov cmp xor sbb dec scas xor cs bound and push out dec (bad) ficoml imul jnp repz enter dec jle stc mov sbb popa iret mov repz xchg adc call adc and gs loopne stos sub cmp mov mov out jg mov jl xchg test fsubl (bad) dec popf or xchg adc xchg and nop sbb fstpl (bad) jo jecxz inc scas jmp imul scas mov dec je add xor incb test inc (bad) aas mov fcmovnu dec int3 dec bound push insl fistpl fsts push mov fistl shrb sbb mov popa sub cmp clc lock mov inc flds incl test ret les jle int3 int3 or adc xchg cmp cwtl fisub and popa sarl jbe dec in imul enter lret mov mov out lock stc (bad) incb mov or inc inc jl jle sbb cld jcxz xchg push pushf ljmp push xchg xchg ds lret mov scas hlt mov stc popf jl inc leave push mov dec dec sbb dec sbb lods stos and pop pop or mov lret sub cli mov inc mov dec dec (bad) mov inc xor js cmp xchg invd loopne xchg push sbb insb imul fwait stos pop and into jno iret mov mov push xchg sbb andb (bad) icebp repnz or lods stos adc popl aas test dec je fmulp lret lcall sub sbbl into fcmovu xor inc and js adc lods movsl outsl aas sub jge xchg popf jge lret gs enter popa jge mov mov cli (bad) push pop pop pop jecxz jl lock dec push adc popf adc sbb dec jecxz dec dec aaa aaa mov lcall loope push jns jno mov popa or add iret mov dec sbb sub cli mov test inc ds pop sub movsl negl lcall push rorl stc aam mov mov mov aam rcl pusha inc cli je in in rcll xchg xchg leave dec test int enter xchg sbb mov addr16 or cmpsl scas test add dec dec lock fwait xor decb lahf addb sub push push mov and jb cmc adc jnp inc pop ror pop xchg push jne mov cmp out or push push push push in dec ja mulb outsb dec push (bad) fstl adc jmp dec dec dec imulb adc daa addr16 xchg imul and es or ds int3 or mov sbb movsl dec aas scas scas cmp adc sahf (bad) div dec push lret rclb lods and loop test jmp roll jmp or mov mov les clc addr16 cmc fcompl jecxz mov aaa fldt mov dec lahf push or divl lret std scas add repnz inc cmpsb xor mov pop pop inc xlat aad xchg or in (bad) ja push dec fcmovu dec js imul cmpsb call int3 in pusha pusha outsb shll ret ret imul pop or repnz test repz aad inc imul add outsb push movsl push rol lds xor inc pusha mov test inc inc jge adc or loope in in mov fwait lcall xchg cmp cmp daa and jnp test sarl inc sub mov mov xbegin or cmp or mov pop mov pop cs fld stc pop lea dec dec in xor out ror aad mov adc mov ja loop in mov inc stc rcll adc xchg jae xor popa daa cld outsb movsl out jecxz out mov cltd or hlt cmc jnp clc or add jbe add mov xchg nop and test xlat xchg stos sub (bad) cs xor fstl (bad) mov aam je jl xor lret mov lds ret cmp add push in stos jle notb int3 add jnp push push pop lock mov jecxz out inc in insl out fs (bad) lahf xchg xchg outsb loop cltd xchg xchg mov addl lret mov mov xchg inc enter push cmp mov or mov loope icebp sub push push pop push inc into cmp movsb cmp push inc dec dec xor dec dec inc inc mov (bad) orl jb ja add adc outsl outsb cli pop cld aam les or arpl into imull mov jno push popa xor cli push test cltd hlt lahf mulb add rol (bad) cwtl lahf and sarb aam fmuls and jae xor movsl and sbb mov fcom shrl xor stos lret int3 mov dec test std cld (bad) cwtl div div orl jmp inc call arpl in inc je or mov sbb stos pusha es xchg ret (bad) daa xor mov mov mov adc push jge (bad) pop or lret pop push aaa add jecxz dec sar cmpsl test outsb mov clc and in fistpll mov and xchg addb je push jle in lret push bound lcall test fs outsl adc cltd mov sbb cmpsb mov mov orb mov int incl cmp inc (bad) clc push inc (bad) pop in fsubs push xor xor push pushf popa jecxz push and lcall xlat scas jmp movsb clc mov aaa push out push cmp mov rcrb cmp jno mov outsb push mov push leave dec jbe adc in nop push jecxz mov jmp (bad) xor out (bad) pop es mov test sub inc out mov fstpt push push push aam adc xor pushf sbb cli dec add pop pop iret cmpsb int push lahf dec push in inc adc mov dec adcb mov inc cmp movsl mov (bad) fcmovu or aam fiadd popa (bad) (bad) sbb fwait ret std jbe fstps sbb push mov insb inc ljmp sbb or jge mov jns inc shrl (bad) and mov mov xchg out xor sarb cmpsb rclb je stos mov (bad) dec iret int mov cmp dec add add jbe cli xor lock or mov adc inc ljmp orl cwtl pop lea decb popf lret xchg mov and mov scas loop mov adc scas lods or mov add outsl popf add (bad) sub addr16 cmpsb int roll in lods inc fucomi mov xor jne xor push or jge mov jne jae and push push inc and movsb pop sbb popa pusha pop test arpl jmp enter adc jne xor pop cmp mov orb fsubl or pop mov pop xor xchg inc sahf nop ficompl push lahf inc push and cmp fs loopne mov lock push add lahf xor xchg jne or inc mov jle jmp dec mov (bad) push stos sub sbb adc and xchg mov in stos sub mov mov mov cmp test nop into out cmp setae and xchg adc mov pause sbb mov push out stos (bad) repnz imul les je inc aad aad jge dec fmul iret in inc (bad) jnp stos aad dec int3 jbe in jmp addr16 nop xchg xchg pop dec pop or gs inc nop fs jecxz les pop push adc adc cmpsb mov or jb mov inc add ret les stos aaa ss jnp rcl test es and dec pop sbb (bad) dec and xchg jp rcl cmpsl stos push mov enter cmp std xor mov pop pop pop pop (bad) popf inc in in jmp inc lcall loope in push aas out clc push cwtl xchg xchg (bad) jmp (bad) mov mov xchg sti sbb sbb ret mov mov xchg lods add push add movsb jmp sub cmpsl hlt repz lods lret sub push sbb dec dec dec pop rcr inc xor fildl inc out imul aam loopne je aam add iret leave sbb push ret leave int (bad) jmp or sbb and ret call cwtl out test sbb or movsb jae adc sahf add je inc push iret inc xor popf and scas xor push push (bad) push cmp dec and mov adc int3 test fcom jle dec mov pop jae pop xor push (bad) mov xchg jno (bad) rcll push iret pop test inc inc inc jnp adc jno sbb push je popa mov mov scas addr16 xchg ljmp jbe nop lret or sub inc stos ss mov leave mov lret mov push push add add pushf push ficoml int3 pop int test out push push and push mov into inc inc flds mov sbb xchg out in clc fsin rclb adc pop mov push out data16 in mov cmpl jo stc jg add lahf xchg call lods mov cmp and test or ret test and int3 add fcom jg sub fs xor xor pop aaa (bad) or ret (bad) sub xor fadds imul xchg rorl call jl loope mov cmp andl fwait lret mov sub es jb add into mov cmpsl iret mov push ficom movsl add cs mov sub sub popa stos and cs fptan mov pop rclb inc xor cmp push mov add data16 out (bad) jns xchg xchg xchg (bad) mov sub bound jecxz mov ljmp stos in pushw pop push pusha or lahf in xchg mov pop sbb cmp mov rolb cmp movsb ret dec sub daa lods cs cltd and fnstsw dec cmp jge addb xor jbe outsb mov enter (bad) incb jae popa push pusha dec or in in dec dec lahf push in sbb or pushf push gs cs xchg add sbb push orb xchg add addl jge mov dec movsl and push mov cltd cs or lret pop sti sub pop and scas cli inc sub push push jmp jne mov push ret inc out push inc (bad) mov fisubl and outsb sbb int3 adc sbb arpl ljmp mov cwtl adc mov ret xor xor jb js loope aad stos (bad) movsl dec andb mov sub mov xorb xchg inc stos popa lret jle push dec mov add ja insb pop pop push mov into arpl jnp xor push push outsb pop push push outsb orb dec ljmp pushf pop loope nop push loope mov cmpsb jnp cmpb cmp and xor push push das sbb cwtl and pop test rorl cmp push mov rcrb test sub push sti into ret stc int iret and pop sahf outsb leave cmp dec jmp (bad) sarb cmc pop fdivl icebp push fdivs int fucomi fcomp in ret out add xor out sar cli hlt sbb sub push aad cld adc pop (bad) cmc mov mov subl lcall popf fwait lahf jae movsl xchg mov dec xchg inc mov lods inc nop ds pop subb lods sbb test js inc mov pop cli dec mov pop push mov push pop mov ficomp mov xor insl test (bad) push test jl dec icebp fimull sbb cmp out cmpb cmp sbb cld sbb sti mov clc mov push sub inc adc sbb scas rclb push sub movsl cs xor dec lock sub lock fstps dec dec in xor popf sarb call in data16 mov arpl push mov push loope (bad) jo (bad) fs enter sbb and bound sub stc sbb lahf cmc divb cmpsl cmp rol lods cmp inc xor std xor mov (bad) xor and xchg dec es push sub inc xor xor pop leave enter mov call pop push out loop cmc hlt push gs cli loopne ljmp push popa or sub sub test add lock jg xchg int3 and repnz mov push adc sbb mov add xor cmp sbb push xor push std int3 loopne and pop hlt mov jmp aam ds jns rcl out shl or inc fsubr enter dec shl loop in into clc cmc into push icebp adc push ret imul (bad) cmc mov imul pusha scas xor sub sahf fwait nop jle sbb mov mov mov and xchg cmp mov mov inc stos jns inc scas pop jecxz mov insl call in mov jno pop mov (bad) fldenv jge insb (bad) pop jmp xchg je imul jo inc ja jns and cmp in and or sub pushf (bad) ja cli mov hlt movsl sbb push iret test sbb dec mov aas inc push out xor pop (bad) push jmp iret cmpsl push or sub mov icebp jne out xor inc inc xlat mov add rolb popa div jae in cli xchg insl cmpsb mov loope fwait pushf bound or arpl sbb (bad) sub mov jnp scas xor shrl cwtl lods add repz xor xchg dec das ficom aad (bad) test and aaa jne fstp dec test sbb hlt lds iret into pop xchg pop je enter iret aam inc sar mov inc add std lret fcmovu movsb dec aad mov int3 popa pop sti pop je enter inc ret ret insl inc add xor hlt repz adc and mov in je jo pusha sahf push ljmp xchg call mov sti ss clc xor cmp push mov rorl xor das stos push pop sar pop pop pop push negl xchg pop in cmpsb dec subb push cli (bad) scas cld dec test scas aas inc inc in aaa enter xlat jge mov iret xchg or push outsl movsb cmpsb push xchg jle push data16 pushf negl (bad) rcrb out push insb adc outsb sub sbbl mov adc jnp aas stos ret cmp xor cs loop and and dec and ficoml xlat sbb shlb (bad) mov int inc fadd (bad) pextrw je xlat addb or and out inc sti xor call jecxz loope nop mov fwait lcall xchg xchg xchg sbb mov push addl aaa mov adc adc xchg push fistpll or ss xor cld iret repnz inc repz call cmp pop in fdiv fidiv decl xlat in (bad) les out int3 loopne int shl (bad) pop lret clc loopne sbb outsl stos pop cld adc arpl cmc mov subl (bad) arpl pusha stos cwtl pushf lods lahf nop xchg jno bound mov movsb dec mov mov mov dec mov mov pushf inc xorl stos outsb lret push jo push dec movsb imul jo outsl pop mov scas pop mov mov bound lods push jae jbe addr16 jle pop stos jp inc lods or cmp or or push loopne (bad) xor xor decl mov hlt add int clc and or sub cmp cmp fist xchg add sub clc (bad) sub js ret and jne fdecstp leave cmp push xorb pop xor pop in (bad) lret or xor pslld out add xor pop rclb sbb pop repz lret adc dec sti pop lret imul (bad) arpl femms jns lods jo adc mov xor cmp inc ds into cltd cmp aam ds sbb mov leave jbe fdivrl adc mov mov pop fidiv cmp fnstcw clc dec add (bad) or pop pop jp dec jns jae push fadds jge xchg pop fnstsw or add add or sub sti ss adc and pop daa lret push mov and es sub adc xor adc aam test lret rol sub in int loopne neg in fprem1 sarl repnz loope fcomp xor push fsubr in in shrb int3 jp out call stc loopne pop shrb adc lods pop mov test sub bound daa xchg jp adc pushf jb sbb dec cltd das mov inc xorl mov pop popf sbb (bad) (bad) dec es sub pop jnp fs enter lret add jno rolb les xor inc pop pop pop sub enter pop inc inc cltd dec sbb jle jbe sbb das cmc lock in shrl insl cmp sub (bad) fidivr jge pop aam add jbe (bad) ds and and dec scas (bad) fldcw cmpsl xor xor sub pop dec or pop pop sub and push sub in pop jp dec dec loope inc mov shr adc mov jle mov (bad) jno cli nop lds outsl ficomp (bad) int mov sbb mov mov adc lcall or test sub aas ds pop test lds cltd and cmp mov and pop sbb je jb fnop jno ljmp repnz imul sbb dec data16 pop outsl pop popa orl push rorl fs push fiaddl jle ja inc or add and add ss pop sbb adc cmp sbb and int3 sbb lds xchg adc xor fimull (bad) or es cmp sbb fidivr int3 sti into and inc hlt (bad) fxch cmp pop jmp fcmovnbe ds push loop fcomp aaa repnz out into insb fsubr test aam cli jmp sbb int3 push std adc pushf add popa mov or jge add jne add cmpsb dec xchg testl jb cmp cwtl rcl push adc xchg sbb and aad sub mov pop int ss xchg in jnp imul inc add fnsave clc bound pop pop fs jl adc fldenv ljmp outsl pop push neg adc pushf push gs xchg pop push xchg and jno lock mov xorb xchg or cmpb sbb sbb (bad) pop cmp movsl push pop xchg jo loope jmp icebp sub movsb sub in jge in inc mov inc cmc mov jge inc xchg or cmp je push loopne nop mov gs lahf rclb sti cmp in mov sbb push sbb push add push dec out fwait mov pop xchg (bad) mov cltd imul dec jns cmp xchg cmpsb lret pop push enter pop push and shlb ficomp lea movsb cli lcall xchg xchg pop nop paddw cld mull cmc hlt mov popa dec adc mov xchg mov xchg (bad) cmp insb add loope out xchg xchg jecxz in lea xchg repz mov int3 (bad) jmp mov or adc in aaa stc fsubrp out stos test stos pushl pop add lahf movb lret in sub pop or (bad) dec inc inc inc add pop cmpl lret mov add mov pop pop cmp fwait scas dec xor and lret push sbb push stos adc push dec out mov pop mov fwait push int3 add cmp cmp push sub sub es dec test and sahf adc subl xchg pop jno cltd push cmp xchg or mov mov mov div mov jge btc sbb xchg cmpsl (bad) loop in lds jmp sbbb xchg xchg xchg or in (bad) mov jns ficom jne sbb jmp xor mov mov call lods lods fld1 out cmpsl cmpsb cmp leave imul cmpsl call inc or push push fidivl loopne (bad) aad repnz jle imul jns or or jno insb in stc xchg int3 cld xchg es ljmp inc mov out xchg and dec xchg mov sbb mov or jno dec mov lds jmp pop lods sub push push int scas aas mov xchg fcmovnu fcoms push cld fcoml push xchg mov ret mov popa (bad) (bad) std mov mov jp or je popf subb out cmpsb cwtl jecxz loopne hlt loop fwait lcall leave xor push (bad) mov test mov aaa push dec mov jmp fsubs adc call test lahf movb dec pop pop pop and push daa cmp dec dec or pop add inc repnz and daa mov insl insb imul and and mov loop addl adc lar dec stos or pop inc push mov (bad) imul xor imul insb lret cmpsb xchg (bad) jl jb jo mov loop popa shrl sub cmpsl push xchg mov lret mov les xor push hlt repz mov sbb xchg sub jae inc adc lahf pop arpl jbe and cmp outsl aas cwtl fisubrl mov das test test jg pop ds mov push js daa dec sldt lods data16 movsb mov pop pop and cmc dec jp push push daa call xor dec sti inc loope mov mov hlt jge jnp repz cmp je aam pop iret ror sbb sbb adc jb mov mov sarl mov ret mov subb xchg jno sub test mov mov mov xchg xor cmp mov mov stos popa iret jle inc dec mov pop push mov dec push mov enter pop mov stc pop lea xor pop pop insl test (bad) push roll dec les dec into jge pusha enter mov add cmp or stc sub adc icebp xor xchg add jle ret test sbb int adc into mov cmp cmp rcrb xchg add add lret sub imul (bad) test test leave cmp pusha jmp aam fst loop xlat fidivl gs mul or out add push call stc loopne pop (bad) je lock mov mov lahf cmp pop xchg jp add aaa scas lahf jae add xor adc inc mov test lea mov xorl mov push insl iret inc stos jns inc scas rorl xlat (bad) in xor gs imul mov inc pop pop pop sub enter mov xchg adc adc inc inc jb inc jno jnp pop mov in and in stos aaa sbb adc xor repz adc es das add adc and push cmp xor xor cmp sbb enter jecxz lock test and (bad) cmp imul fstp xor pop in lret out (bad) popa fsubr hlt loope int3 outsb in add (bad) hlt sbb jg std bnd (bad) dec sti pop rolb mov mov lea push mov js add mov ja push cmpsl dec mov sbb inc sahf push stos inc (bad) ds and pop pop and fistpll gs lods mov jae jns cmpsb mov int3 int3 lret insl pop pusha pop mov mov push mov push pusha pop push mov jle jo popf xchg in jecxz je push call cltd cmp sbb icebp jecxz nop (bad) sbb cld ret loope xchg cmpl mov mov daa sub ftst int3 lods stos stos or into mov rol sub push hlt rol daa sbb dec dec dec ljmp inc inc inc out loope or sub js jecxz in add outsb hlt sbb xor call push sub pusha mov sbb sbb push xchg jp cmp cmp aas movsb dec push cmp aaa scas inc jbe xor xor sub mov push push and mov (bad) inc scas xchg pushf xlat aad dec movsb mov push mov (bad) pop mov std rol mov stc clc outsb test fiaddl movsl out aam rorl mov iret int push mov lds addr16 imul div hlt push mov dec jle dec jge jg xchg xor loope cmp adc xchg xchg or jmp pop sti testb mov sbb icebp dec addl mov mov (bad) mov scas or xor rcrb jmp aaa cmp in sti into lret in pop repnz daa ljmp or ror fdivl icebp adc ss fsubr repnz add int jb (bad) cli stc hlt sbb shrl call push (bad) bound mov pusha mov pop push mov sahf mov test or jb push add xchg cmpsb dec dec (bad) cmp cmp xor test inc repz (bad) lock icebp (bad) fldl nop adc xlat (bad) dec mov iret push mov enter xchg pop mov mov pop mov outsb sbbb cltd movsb pop in jmp jo movsl push in jecxz xchg stos xor sti xor call sub adc lock out pop adc leave add and rorb es push sub and pusha mov push xor out cmp sub cmp lret add hlt ret dec dec sbb cmp add cmp or ret push (bad) jg repz pop xchg push movsl sbb push out jmp sub hlt movsl jnp cmp add inc cmpl cmp pushf and pop sub dec mov mov pop jo pop dec fcmovnu dec daa xlat sbb shlb movsl fnop mov int3 lret pop ss cmp push test ja call outsl push insl or jg repz inc arpl jmp sbb dec loopne cmc fwait sub adc insb cmp je inc add sbb es sub mov cmp lods xlat xchg callw pop (bad) cs ret mov and push push push test ljmp inc inc inc fdivs add fucomp repnz add jno jb jmp imul lock push xchg bound xchg cmc sbb sbb sub adc xchg js std or or jns add aas cmpsl dec pop enter xchg mov test xlat sub (bad) int3 es mov fcmovnu inc scas lods inc aad rorl mov outsb pop inc outsl push push pop mov push rol pop push jne div push push mov out in and jg jno pushf pusha in loop jne pop jmp mov cltd cwtl push loopne mov xchg xchg aaa es sti imulb pop repz iret dec mov les mov sub int lods lods stos xor lret movsl movsb cmp ret cmp sub push int3 and lret push push dec xlat cmp fmull dec fidiv das xlat inc inc inc (bad) or jl jp push adc jmp sbb outsb insl insb repnz inc data16 adc push test xor sbb (bad) arpl adc adc or xchg jno sbb inc and cmp xchg mov cmp sub mov pop sub dec inc stos cmpsb (bad) fcmovnu fcomps jmp rcl iret imul mov mov std sti cli pusha mov push fs jnp jne push pushf jno pop xchg inc jp pop (bad) adc add test jecxz cli loopne xchg mov xor mov inc test xchg pusha fiaddl mov cmc shrl adc and int3 jmp dec dec dec dec dec dec add push sbb fstl or pop pop pop mov movsl movsl cmpsb mov xchg scas scas mov mov mov cmpb adc addl mov xchg xchg xchg xchg xchg xchg popf cltd fwait fwait pushf popf sahf lahf loopne call out jmp out outsl lock loop hlt in idiv stc ljmp rol aam mov leave lret int iret add (bad) mov (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul outsb outsl jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc cmp cmp dec movsl addr16 push push inc push push pop popa pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos mov (bad) rol aam mov stc mov mov test mov nop xchg xchg xchg aam xchg xlat mov sti out std popf sahf lahf les out call xchg out out lock repnz cmc div clc stc cli sti mov mov mov jmp (bad) iret (bad) icebp rcl aam xlat xlat fcomp fcmovu (bad) (bad) and and and es sub sub xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop sub xchg mov lods insb stos mov dec mov mov mov inc mov mov addb or xchg xchg xchg xchg xchg push xchg xchg sbb out and and in push cmpsl xchg loope loope in out sub hlt cmc (bad) mov inc idiv cld std cmp sar ret mov lret int3 bswap iret in rcl rcl test outsl enter push (bad) loop and sahf xor sub xor lea aaa cmp clc aas cmp ds add jg mov lret push or or sbb ficompl push pop sbb movsw insb imul js outsb jae jne jae dec mov jl jg dec faddl int3 mov push dec push push lods es (bad) inc pop pop pop rcr inc pop pop mov mov stos stos and mov iret nop mov cmp mov mov addl pop stos dec mov xchg xchg push mov sbb push clc in jecxz and in jmp out data16 div hlt jle out cld stc cli sub jge,pt fadd ret mov dec dec fxch lret int3 inc dec xlat aam rclb fcomp rcr (bad) push pop xor and sub out mov adc mov push or mov xchg push fabs dec xchg pop (bad) notl data16 cli adc call popa adc insl xor popf (bad) int bound sbb loopne jge outsl jo repz aaa icebp shlb jge (bad) push inc inc inc iret les dec dec mov lds mov pop mov cmc inc pop pop mov mov cmpsl test sub cmp scas mov mov ss mov mov xchg inc pop arpl lea xchg cmp adcb mov cli out in outsb push cmc out jmp outsl push icebp bnd in repnz (bad) mov je ret add lds jmp into iret movsl enter rcl xlat push pop ret fstpl and cmpsl aaa sub sub xor adc hlt xor push mov sbb imul or mov or or jb add in loope jb sbb ds lods ljmp push and ljmp repz jle jge addb (bad) sub dec cmp adc adc pop jo add shrl pop pop mov scas and sub stc and xchg cmpsb xor (bad) mov mov mov inc adc (bad) or or out push adc sbb and out jmp (bad) jmp icebp jns in icebp div sub jno in stc (bad) decl popf dec int3 cmp int3 leave lret shufps cmpsb imul (bad) push (bad) fcoml (bad) push cmp daa mov sub xor mov cmp cmp add les or xchg add adc push sbb bound jecxz arpl loope je outsb outsl cli popa jo mov data16 jge lretw (bad) push inc inc inc iret rcll dec or loopne push push push fcmovbe inc push push pop rcr inc pop pop pop aad mov jno jge mov jbe dec dec cmp push mov xor inc inc inc or bound ss jae imul mov sbb jmp in push loopne repnz lock jnp in icebp div mov std (bad) jbe rol ret les (bad) leave lret iret sbb adc rcrb rcl fsubrs fbld test cmp and ss sub cmpsl test mov cmp std mov add jge orl adc push sahf mov push sbb cwtl pcmpgtb call push xchg lods out jo outsl jo jbe popa repnz imul test inc inc inc add dec dec vdivsd push (bad) dec push push push mov aad pop pop pop aad sub and mov lods lods out es lods mov mov xor cmp mov xchg popf mov nop xchg xchg xlat adc xchg lock jecxz arpl jecxz jmp bnd icebp xchg jg out clc stc jae in (bad) incl (bad) dec fxch lret int3 inc js aam rolb repnz lahf clc (bad) xor sub pop xor or dec insl int daa std mov ret add invd xor sub adc sbb or push sbb adc pop data16 sbb lods xchg repnz and push lea mulb mov adc adc inc dec sbb or xchg push push fwait push pop (bad) add hlt hlt sub sbb sti mov mov dec xor sti cmp cltd cmpsb mov jg jns inc popa mov inc js push mov adc cwtl popf sahf adc sub jmp insl cld jmp (bad) div cmc test mov xor (bad) jle mov dec test dec fmul into iret pop push lret aad pop jbe (bad) fcoml and and sub out cmpsl cmp mov xor mov mov sbb add or test cltd xchg or push pop enter (bad) push pushf mov lea in jl outsb outsl clc imul jbe imul inc inc inc ret inc inc dec cmp and dec fistpl cwtl mov add add test mov (bad) call mov mov (bad) mov cld popf mov out or out jle jns (bad) aam dec test xchg xchg xchg xchg xchg xchg sbb fwait pushf popf in (bad) arpl movsb fdivl out jmp cltd aam cli or hlt add add push aas ds xchg fisttpll fmul lret push ljmp pop xlat sub (bad) fcoml and and jle das sub xor xor mov mov cmp mov inc lea orl xchg or adc pushf pop sbb in xchg or bound jl loope insl push in jbe jo xor fisubrl ja lock imul hlt (bad) pop inc inc inc xchg data16 insl dec dec dec cmp xchg nop mov pop mov mov dec movsb mov cmpsl cmpsl test stos sub cmp xchg mov mov dec cmp cmp or mov (bad) out jne jno into int3 leave push pushf xchg pop insb cwtl pushf lcall stc arpl in out lcall mov cmp movsl movsl mov sarb (bad) mov inc dec fcmovne int inc push leave (bad) rcl xchg pop jns fstp fistl into (bad) and daa clc or xchg xor cs inc sub aaa mov and cmp jle scas sbb adcb and test daa clc or movsb (bad) (bad) lret lret lret gs clc xor jp add xchg add cmp or pop test xlat popa sbb sbb or cmpsl bound test (bad) jg and pop push push and mov sbb dec inc dec dec inc enter dec mov push push push pop aam jg (bad) fcomps mov into cmpsb test (bad) fnstsw mov mov mov jns mov jge mov xorl cmp sbb add movsl adc jmp push mul pop stos ljmp div hlt cmc jg jns sti sti cld std pushl (bad) lds ret enter enter pop sbb pop fcom (bad) xlat pop and mov (bad) das and sub lods inc iret into int jo push lea pop cmp pop decl mov xor or decl push mov or push adc pop pop pushf pop lahf push nop and shll gs jmp loope popa test push outsb jae jne dec mov inc test je lds inc inc jl dec dec dec dec cmp (bad) pop push push push outsb scas and mov jbe fisub lret dec movsb xchg push and mov mov xchg xchg iret mov test push roll mov movsb pop sbb mov scas fidivl popf popf sahf adc (bad) lock mov jmp push in lock repnz into js cld stc cli hlt jns (bad) inc dec xchg out (bad) sbb jmp and pop xchg (bad) in (bad) lods fistp sub scas dec add adc and das or and gs rorb dec and push push pop (bad) les out out cmp lahf pop xor sbb mov call dec movsb pushf gs stos xorl insb xor bound add xor bound inc inc inc add pop int3 xchg lds je fnstcw or rcll pop sub imul add push xchg cmp pop stos mov mov (bad) negb aam xchg or mov lcall stos adc nop xchg xchg loope adc cwtl popf sahf movsb sbb ljmp in out add ret cli jle dec jae (bad) cld std std cmp out lds dec jne xor and pop sahf (bad) int3 pop mov enter clc push mov xor js mov jbe jmp repz mov push mov sbb iret dec or ret sarl adc orl sbb shll fildl sbb test (bad) out xor in mov jp jo cmp repnz jb js hlt imul (bad) scas mov adc lock ret lahf (bad) arpl fist pop mov out sub mov cmpsl pop adc and xor xchg dec mov je jg add mov les xchg xchg sub sbb cwtl iret adc loope jecxz int3 and in in insl das hlt int3 repnz cmc test jns cli (bad) cld std jge (bad) ljmp int3 leave lret dec push xor not aam pop pop rcr fcmovu push inc fcmovu and stos popf sub es mov sub das mov xor cmp mov mov and mov push mov or setno adc push or addb popa (bad) ljmp in cwtl imul jmp jb je xor cld mov pop pop add punpcklbw mov sub push push jg jb or int3 dec pop pop pop je test repnz jmp push jnp imul mov popf cmpsb into scas rcrb les mov movsb xchg add mov sbb adcl lret (bad) aad push pop push popa xchg shrl (bad) jle icebp cmc idivb (bad) sti cld cmp ret (bad) cld (bad) jecxz mov rorl rcl in xchg repnz xlat pop xchg fcomp fstl add jne sti jbe lods out enter movsl arpl bound (bad) int ret push std xor mov xor push or jb xchg out adc sbb pop sbb data16 bound jecxz popa insb loopne fs out dec and in jo jbe mov xor adc push enter sbb test push ja insb sbb aam pop aad jp cmc fstpl imul loop lock xchg nop ds cld jmp xchg dec jg or mov inc xor jns push mov sarl or adc sbb into scas addr16 mov add push add je in pop inc daa (bad) or leave iret mov mov cmp ret (bad) fcmovu pop and addr16 adc jg cmpsl jecxz xchg (bad) into int pusha adc loopne jle jl outsb mov jmp cmp push jno leave dec xor adc adc xchg call cmp pop jmp jbe fs cmp loope test popf nop (bad) cli es xor scas cld cmp cmp sub mov sub or sbb adc mov outsb mov add add mov mov and lea lods mov xor mov mov xor xchg xchg fimull dec mov push dec (bad) rcrb test sbb arpl fidivrl int3 outsb mov fdivrl int or sub scas stos ja push adc pop inc and add aaa int sti cmp and sub sahf push mov (bad) fcmovnu lods out add sub xchg les into mov cmp mov sbb add cmp jns roll or or mov cmp (bad) push sub xchg (bad) notb mov cmp loopne test lcall je js stc pop pop imul inc (bad) mov dec dec dec lds je flds jo fst dec pop pop pop fistp icebp daa movsl mull es inc or dec aas icebp xchg xchg in sahf (bad) aaa loope xchg mov aad mov jae fldl sbb mov jge bound adc mov bound loopne daa insl das sub call sbb push cmpsl mov (bad) adc or add xchg loopne push les jno imul pop sbb push sahf (bad) call pop sub pusha add sub sub cmc dec push mov push hlt rorl (bad) push add test enter push adc push sbb cwtl add pusha popa jmp cwtl addr16 add insl in nop jno hlt and jbe sub cs mov inc dec jns xor sbbb push outsl pop xchg sbb fcompl ja add cltd roll test xchg lea inc lea dec aas insl cmp jmp jae xchg je jge inc push fisubl shrb sbb mov push int3 mov mov mov imul aam mov sbb cmp jbe std (bad) decl out lcall ret enter inc cltd ljmp xchg sub and add into loope (bad) aad pusha or sub mov jp adc cmc aam int decl ds pop (bad) (bad) lods (bad) icebp lock jge aas pop int push cmp and xchg inc cmp sub aas jecxz dec push push jmp imul jp lret pop jae jns packuswb jp inc ds (bad) mov outsl je xor sub and jle or pop pop dec xchg sub (bad) repnz mov loope js,pt adc stc lcall outsb xchg or lods lcall pop jp fs movsb sbb xchg adc lahf loopne imul mov lock femms jns rcr mov and add repnz out enter fsts sti rcl (bad) xlat lods pushf out (bad) fisub push and daa push sub push push cmpsb jb push mov inc sbb ds push mov jmp cmc stc clc mov or or mov adc adc push xor (bad) clc xchg inc push jecxz inc xchg cmp cmp and xor loop subl nop jno data16 jne sub xchg inc mull pop daa lds bound fistp dec dec (bad) and pop jo fild jl sbb sub and sti daa arpl pop dec dec dec xor inc mov push mov cmpsl mov mov add mov lods push out fwait adc fidivrl or (bad) mov aam sbb test into mov jbe fcomi xchg nop dec or inc and ljmp or pop push mov lret stos outsb pop adc jb sbb unpcklpd pop and arpl not ljmp cmp enter test lret cltd push xor sbb imul pop push push imul jbe add stc test jae adc mov jnp mov pop push push push push push fiadd rclb pop out dec movsb rorl lds sti repz cmp nop in lea cmp inc popl add or (bad) les push mov push je jo pop push (bad) fdivl add in sbb adc xor mov mov iret ret jg (bad) cld std mov inc jg mov hlt lret int lret shlb fcomp cmpsb ficomp (bad) ljmp sbb clc into insb mov or push pop sub std adc push push mov in sbb div dec mov or loop add pop out dec nop (bad) cmc sbb lahf sahf jmp pushw push mov dec loop jno jae (bad) lock sub mov movsl lods mov inc dec dec dec xchg ja cmp rcrl push push pop aam push sub mov mov mov and xor mov mov mov scas mov xchg test fwait mov or adc adc imul popa lock ljmp xor cmc imul clc stc (bad) loop jnp sti rol inc fadd mov inc inc xlat enter push rcl aam push iret (bad) fimull cld push pop iret and and and lods test cmpsl stos sub xor popf and ss adc call arpl dec and lahf sbb or and cwtl lcall aas dec dec dec dec lahf mov cmpsl je cmpsb adc test xor in mov mov je lock jp cmp and push sbb cmpb dec icebp dec dec inc dec (bad) les mov sbb and mov fsubrl scas mov cmp nop icebp mov mov mov push cmpsl les push scas mov mov mov xchg xchg cwtl lret lret mov sbb jecxz jmp lret out jno or test enter mov mov dec adc (bad) out xlat lods push add pop cltd bnd (bad) negl stos mov cmpsl fdivrl push jne xor xlat insb jle add push mov and adc dec jns dec or add jae fisub and movsl jecxz adc add jge inc adc (bad) dec xor sbb add add jge or pop out adc adc or ret sahf (bad) loopne and push in sbb dec loopne dec inc in push pop clc cmp daa sub mov jl inc les inc dec mov cltd iret and push pop shlb push push push fstpl pushf pop fbstp pop scas and mov sub adc arpl mov mov mov (bad) push jp cmc inc mov cltd psraw cmpsb xchg xchg xchg sbb bound sbb loope jecxz and imul hlt jg mov sub repz inc rol mov inc stos in int les iret iret rcrb xchg aam sub test and daa daa sub shr and xor inc daa mov sbb cmp idivb aas add clc lds leave or jns lea adc pop pop sbb loopne jno push jbe cmp inc jne push mov jmp cli (bad) pop mov jnp push pop jge cld testb lret inc add inc dec dec dec mov call push test dec fidivl jg pop push fnop mov loopne jp push divb shlb aas hlt mov ret jns sti inc mov nop xchg out sub cltd dec out mov repnz shl out ljmp cmp jo cmc cmc div sub dec inc (bad) dec rorl mov imul lcall adc ss and cs sub jl rolb fcoml leave jg cmp cmp xor ret test or push movups scas push sbb sbb into push bound les imul xchg mov mov ja jns push outsb (bad) adc inc dec rol inc inc ret dec sahf mov cmp push push aad cmpsl fs pop pop pop fldl movsb movsl and stos lods lods sub call mov repz mov js dec jp aad push jae outsl adc mov xchg in adc jbe xchg shll out and (bad) mov stos test fdivr rorl aam or lahf jns (bad) (bad) insb xor xor or scas push sbb cld movsb std notb stc ret in inc test add lods fs outsl das sbb mov cmp mov xor rolb or aas or out adc adc aad lock pop adcl stos loope arpl insl out stos push (bad) jno jae mov lahf jo jle movl jne xlat repnz dec dec outsl mov lret pop pop pop jp pushf mov xchg movsl cmp mov lods mov pop mov dec mov mov mov test cmp xchg mov xchg xchg xchg mov push jg stos sahf add call sub push push ljmp stc (bad) imull sbbl sub fsub lahf cmp or or add push pop add repz rcl mov sbb sbb pop fisttpll and jb imul cmp xor cmp dec xlat pop cmc mov test mov (bad) or leave (bad) pop xchg test xchg fisubl and dec adc push sub imul insl sub xchg les mov sub cmp lret xor (bad) mov push int3 sbb data16 pop fstps push sbb mov or mov in mov push mov cld and outsb scas mov mov aas enter mov cmp add cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or and and sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds add add add push pop or or or push movups adc adc push pop sbb sbb sbb push pop pusha popa bound gs imul jo jb je jbe js jp jl jle inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli fcmovu in (bad) shl jecxz in (bad) out fldpi ljmp ret (bad) enter std cld into incb xor add pop inc dec or push adc adc adc push pop sbb xor pop adc and pop sub sub and xor dec xor sub cmp insl dec xor sub aaa inc inc inc dec sbb inc dec push jb add push pop dec pop pop pop jle or and dec addr16 dec sub pop adc je jbe js jp jl jle addb and mov test cwtl lret pushf xchg sahf lahf mov lcall lods (bad) scas scas mov mov mov mov mov mov ret mov lret int3 leave into iret rcl rcl aam (bad) xlat fmul fcmovu (bad) (bad) loopne loop in out call in out out lock cmc div clc clc cli sti cld std (bad) stc add add add push or xor or adc adc adc push sbb nopl arpl xor daa sub sub xor ss cmp inc inc inc push inc jle inc dec jp jo inc dec add push mov pop fs adc popa sub sbb push insb loopne daa jae jb ja jne js jle jl jle test (bad) out (bad) pop mov xchg lcall pushf repnz int cmpsl mov mov test mov mov mov fwait mov in iret (bad) scas into out lret mov jmp rcr rcl fmuls xlat (bad) fisubr in out in loope out out ljmp in or sti not lock clc std cld mov add or add or push sbb adc sbb sbb and and es and sub xor xor adc cmp dec aaa inc xor mov inc cli dec popa dec pop dec sahf inc sbb push mov push pop push inc push jg dec pop dec push or bound push popaw push imul xchg jl je jns jne jp jae jae xor push mov mov lahf lahf xchg xchg test mov mov lods movsl movsb sub pop mov je ds fnstcw ffreep mov ror fldt roll mov (bad) cmpsl int fcmovu loopne repz out stc mov (bad) out lock repnz adc idiv stc cli cli cld cld (bad) jle adc jmp or or or (bad) movups adc adc push push sbb sbb and and and test cmp sub ss ss cmp cmp aas lret cmp inc dec inc les dec xchg dec mov push dec push pop push inc push mov pop push pop jnp loopne jae jp xchg push dec outsb fs jb js jbe js jp jl jg cmpb test xchg popf mov popf adcb cwtl sbb mov popf cmpsb cmpsl test stos aaa mov lods mov mov mov mov lods mov vcvtsi2ss pop enter into push into cltd push rcl dec aam (bad) int jb fcmovu add or loopne push out out call in out clc hlt pop repnz hlt sti cld jno (bad) cli out divb add or add add adc adc adc adc enter sbb shrb and sub sub and aas mov xor das xor pop xor inc inc imul inc loopne dec dec jp pop push push push push add pop adc pop pop pusha xor data16 imul pusha jb jp jne js push js pop jg addl or xchg aam mov xchg cwtl cmp or movsb cmpsb cmpsl test stos sub mov mov xchg mov mov mov mul (bad) enter iret jno lret lock aad inc fadds cli (bad) fimul ret jecxz jae dec jmp ljmp icebp repnz inc cmc (bad) clc (bad) cli jnp std (bad) incl xchg add jmp push mov test out adc and sbb sbb push popf and and jge daa sub sub xor xor xor cmp inc shrl inc inc (bad) dec fisttp dec inc dec jecxz push push push push aam cmc pop bound pop mov pop pusha popa (bad) xor inc insl outsb outsl jo jb jno jbe js push jnp jge incb popl mov xchg cltd xchg aad xchg cwtl cltd lcall stos mov cmpsl test stos fs fisubrl mov mov ss mov lahf in rol les into mov loop rcl rolb cmp add rcr fcmovnu fstp pop loopne (bad) loopne ds call in out outsb lock cmc test cli div clc stc cli jnp insb fidivr pop addl add sub or or adc adc cmp sbb sbb push and and and es lds jb cmp das xor xor xor das cmp ds inc roll jae das dec pop dec dec dec dec dec iret push (bad) jb pop and pop pop pop fstpl inc int3 imul inc addr16 jmp cld push pop jp jo je jbe js jp sbb je (bad) mov addl push nop xchg xchg xchg xchg adc nop add mov xor lods mov lods scas scas mov mov aam mov mov rclb iret jne cli enter int3 dec into pop mov fldcw xchg (bad) xlat fcomp ficompl dec mov cmpsl in out call cmp and mov divb push (bad) mov jne add push rorl inc push cmpl adc adc push sbb sbb xor and and sub xor add push pop cltd adc pop and adc insl sbb jp and and movsl and jns test cs xor mov test ret cmp aas test inc cmp jp dec dec dec iret dec cmp push add arpl pop pop lret push inc popa xor addr16 insb sbb jno inc je jbe jmp jo ret jle jg mov addl mov lea nop xchg xchg xchg pop popf mov fwait insb test xor fwait mov mov lods lods scas scas ss out mov mov cmpsl jbe jecxz pushf (bad) leave leave arpl int3 int iret push aad aad (bad) (bad) (bad) (bad) loope loopne in out in ljmp icebp repz lock stc stc das (bad) cld std (bad) (bad) cld pop add add or or or movlps cs adc sbb sbb push pop and and jmp es sub frstor sub sub xor xor aaa xor cmp sarb aas inc inc pop dec inc inc inc inc push inc dec dec dec dec or push push push ficoml push pop pop pop push pop pop pop pop jg bound adc imul je idivl jne ja jo jnp jge jbe addl (bad) mov xchg xchg nop xchg pop sahf cwtl cltd lahf fwait push xchg sahf lahf cmpsb mov cmpsl cmpsl xchg mov loopne mov mov out mov (bad) mov mov ret lds enter push (bad) into iret fcom je aam (bad) outsl rcr fcmovnbe fucom fsub loope jecxz out out ljmp out and repnz sub sti sub (bad) incl add or or push or adc es push pop sbb and sbb sbb and and das sub das xor add xor xor add cmp aas cmp inc inc or inc dec dec aas inc dec dec dec dec bound push push push insb pop pop pop pop pop inc pop pop pop bound push fisubl imul fs ja mov jbe jns xchg jge jg mov mov (bad) mov xchg xchg xchg xchg fs lcall mov cmpsb cmpsl stos test stos scas sbb adc adc mov (bad) (bad) jge lret int rol (bad) rol aad xlat neg (bad) (bad) frstor fndisi(8087 lret jecxz in out jmp fucomip dec lock divb cld lods call lock sysret repz push or jae or sbb sbb push pop or push and sbb dec das cmpsb das inc xor push cmp dec cmp dec inc std inc xor dec adc dec (bad) dec and push fstl push xchg pop fistpl pop popf pop leave popa inc test and imul xlat outsb popf jno jae jno ja jns jg jl jg test xchg mov jg stos mov test xchg lcall xchg cmpsb fldcw ja int out mov mov mov mov mov (bad) cltd les (bad) enter mov rorb (bad) sub cld fstpl das (bad) out loop in loope call jl jns jbe insl hlt jg (bad) decl stc test add push add or or (bad) adc sbb sbb and daa cwtl jbe,pn insl sub daa into xor lea xor aaa aas outsl ds inc xor dec jae sbb inc jne and push inc push daa push sub pop sub arpl xor arpl aas outsb leave jo jno je jg jnp jnp jne jge sbbl outsl sbb xchg cltd xchg sahf (bad) lahf lahf lods and mov fldt cmp cmpsl mov mov mov ljmp (bad) fxch fmul lock inc into pop fstl fildl cltd fsubl mov out call shr mov dec repnz xor (bad) (bad) aaa (bad) in or add add or or or adc sbb sub and movsl sbb adc and and sub mov xchg imul xor xor ss cmp cmp xor inc cwtl inc dec inc icebp dec cmp dec daa push dec push in push push push jns jecxz sub pop cmp addr16 fbld imul xor jb jne jne js jp jg jle sbb xchg mov mov nop test xchg loope jecxz and mov das movsl adc pop scas xchg mov mov xchg mov ljmp lret pop into into lret adc sbb clc xlat arpl adc repnz pmulhw jecxz out jecxz jmp shr repnz hlt ss aam ja ss add pop jae mov or adc adc cmc adc sbb out push fstpl jnp test out jne mov leave sub mov (bad) xor jnp jbe sti cmp out loop xchg mov dec ljmp push push push xchg push (bad) pop jp lahf pop and pop and ret bound push (bad) jbe je ja jl jp jge js (bad) and fwait test cmpsb mov mov xchg lcall cltd nop fwait popf popf sahf lahf mov movsl andl lods cmpsl scas mov mov mov mov outsl mov adc sbb sub lods enter int3 adc in fcmovbe xlat xlat xlat (bad) fcmovnu fnsave fdivl loop jecxz ljmp cmpsb jmp icebp repz int std stc sti sti sar incl add add add jo repz scas adc sbb sbb sbb out and sub and xor cmp xor push ds inc inc inc cmovns dec sbb pop push push push push adc push pop pop pop pop sub gs imul js jne jbe jns jo jge jle and xchg mov orb add xchg ret cltd dec nop popf popf sahf sahf std mov mov stos lods lods scas scas mov mov mov mov test mov ret (bad) leave leave xlat lret int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu fstp clc fnstsw loope jecxz in out jmp out out icebp icebp leave repz cmc div cli stc cli sti cld std (bad) incl add add add or push or adc adc push pop adc dec sbb and and sub sub xor xchg xor cmp cmp inc inc inc inc inc inc inc inc dec dec dec inc dec inc dec pop push pop push push push push push inc pop aaa dec inc pop xor js or gs pushw add push sbb pop adc adc adc or test cmc in sti out out (bad) (bad) jecxz idiv mov imul call int mov ret stc rcr fxch ret rcr aad rcr fst into mov movsl lods in xchg scas lret mov loopne mov mov mov repz xchg fcmovnb popl sahf xchg mov (bad) xchg into jae,pn jo jo fs jp dec arpl jl arpl push inc cmp jbe jle imul push dec push push dec dec pop add inc inc push push inc xor push push pop dec adc xor xor jne and cmp sub adc ss aas sub pop sbb unpckhps pop push add dec sub sbb push pop add push or adc ffreep cli repz mov in in loopne cld idiv loopne shr icebp in lcall fxch (bad) movsb call iret (bad) leave ret (bad) rcr ret cli aam fstp into ljmp mov stos lods cmpsl mov lods movsb (bad) mov cmpsb mov mov fsts mov stos xchg addb popf hlt mov lahf xchg cltd xchg mov jo dec data16 popa push js ja push jns je imul inc push dec push es dec pop sub imul push inc push inc pop inc cmp dec arpl dec xor aaa inc or sub cs sub cmp ss xor pop cmp sub adc aas sbb push push jb sbb sbb sbb nopl or out std leave loope lret clc in out jecxz (bad) loop fdiv loopne lcall rol ror cmpsb jecxz fcmovu (bad) fnop scas stc std mov rcr rol lret mov fcmovnbe out test mov mov stos mov mov movsl mov fnstcw lods popl xchg addb mov xchg xchg sahf xchg mov add push bound inc bound imul pusha jl jo fs imul jno pop push pop push inc and inc push gs dec pop inc dec dec pop push pop push xor inc jp pop dec push pop jae push and and add xor cmp cmp pop movlps add pop push sub add add add and jbe sbb or adc and idiv ret mov jmp nop aad lock out cwtl std sti out std popf (bad) rol ror (bad) cmpsb cmc int ret fcomp (bad) scas std fcom rcr (bad) int3 xchg in rcl mov test cmpsl movsb mov lahf stos test mov mov fcomps mov xchg fcmovu jmp mov xchg hlt cmpsl xchg nop xchg mov xchg jne dec push popa push push dec dec or jg push gs pusha jno push push push pop sbb outsb jne inc dec inc inc inc push es dec inc pop pop pop push push pop inc pop inc xor push pop push push dec pop xor sub cmp daa cmp cmp xor push xor adc ds add arpl sbb adc push add add pop add adc add nopl jle in loopne in ret loop (bad) sti jmp (bad) icebp shl clc cmc sar cmc clc icebp sti lahf repnz xlat int ret repz iret jecxz ret lret mov (bad) shr (bad) lret (bad) fnop les scas cmpsb test mov popf mov mov mov scas mov xchg lods xchg lods mov test xchg xchg pushf cli pushf cltd mov jae dec arpl pop imul push pusha pusha dec push bound jp insb pusha sbb push jno push push inc dec dec push pop sub inc pop inc inc dec jne inc pop inc pop pop pop pop push dec cmp dec dec and sub cs cmp cmp and xor sub cmp or push adc unpckhps adc aas adc add xor jge adc jecxz in loope loope cld (bad) fptan (bad) stc jmp aam loopne mul stc in cltd (bad) call (bad) (bad) repz cmpsl sti fxch enter jmp (bad) mov ror cli iret leave into fcom lret nop mov mov scas lods mov mov mov mov mov test xchg mov addl icebp nop pushf fwait addl lcall outsl imul jle push popa addr16 cmp imul je js dec push push inc pop insl inc push add jno bound pop outsl outsb jl dec push jo adc jp popa sbb push push dec dec dec inc dec push jle pop inc dec dec inc dec xor inc inc inc fs push cmp pop ds add cmp cmp and xor cs sbb pop and push sbb add add jb sbb sbb jl adc repz (bad) lock repz stc mov jmp hlt sar in xchg (bad) out lcall repz rcl leave shlb int lret in (bad) lock (bad) lret mov fnop movsl subl enter test rcll stos lods mov mov xchg xchg lcall out mov sahf xchg mov (bad) test mov mov pop inc jo je push jle jg inc data16 push jp jo pop jge outsb sbb jnp inc push inc jae dec inc inc pop pop sub inc pop inc push push pop arpl push push dec dec cmp push pop push and and push es and es aas add cmp xor pop xor xor adc or add adc sbb or jp push adc in loop hlt ljmp (bad) std push mul out clc icebp imul idiv call (bad) int3 (bad) ror cmpsb hlt fstp fcmovu leave (bad) cli (bad) rcr aad rcl sti (bad) (bad) out fcomp lret mov test mov mov movsl mov cli xchg scas movsl fstpl xchg xchg pushf cmpsl xchg fwait mov mov xchg xchg adcl nop lcall arpl dec arpl or jle pop je jb push jnp jne jnp push dec inc push dec dec dec push sub inc dec inc pop pop jns push pop inc pop inc dec cmp dec dec pop push adc and ss sbb and cs aas xor xor das sub sub add arpl or or sbb pop adc je adc cmp or adc jg repnz in (bad) ljmp call in jmp fdivr (bad) lcall test shll (bad) leave jecxz ret aad shr sarl iret rcr movsl mov cmpl mov movsb mov mov mov mov in mov lahf mov xchg fwait (bad) movsl addl xchg pushf gs push insl imul pop jle pusha push push jnp push outsl jno sbb inc push inc dec inc dec inc and sub pop dec imul push pop push pop je push pop ds and and and sub sub add push cmp aas sub pop sub or arpl adc add cmp sbb sbb sub adc in movb out mov clc out nop (bad) cld jmp out ljmp cli test (bad) shll ret ret aam rcl rcl lret fdivrl lret mov mov mov mov mov mov mov test mov xchg mov jmp test popf mov negb fwait cwtl decb jno push popa addr16 outsb or imul adc ja ja sbb je jbe push inc jo push push inc inc jp pop pop dec inc pop pop je xor pop push push imul daa and adc sbb cmp dec push and ds adc xor or push ud2 pop fs add sbb push add adc pop adc or jl push paddsb loope lock jmp out mov loope std lock neg cld clc repnz jmp in in loope (bad) ror (bad) rcl int stos ffreep (bad) into aam mov (bad) ret leave mov mov mov movsl stos mov test test mov mov mov mov lea xchg lcall mov cmc test mov data16 outsb jne push jp push addr16 jl jns jb jnp push and push adc pusha dec pop jle pop dec dec dec jae pop inc push dec inc aaa imul dec pop pop and sub xor and sub xor aaa cs pop or push or push add sbb jo add adc or cmp sbb in lock repz in clc mov clc call cli out lock cmc loope (bad) call mov (bad) not (bad) lret fnstsw lret ret lret mov int3 ret out enter fcmovnbe rorb mov mov popf stos mov mov mov mov lods mov test mov mov mov sahf xchg mov mov popa ja imul pop jg jnp jb adc arpl jbe jo jno gs and inc push inc pop pop sub inc dec pop pop xor pop inc push push dec cmp dec dec push pop adc xor and add dec ds aaa push adc xor pop adc adc or or push adc add adc pop je sbb xor push dec dec jge or hlt out out lret test mov in int3 (bad) jmp mul loope in int (bad) bnd (bad) xlat sti (bad) iret (bad) test ficompl rcl cmc int (bad) into mov test (bad) (bad) lods mov mov mov mov mov xchg adcl jmp (bad) fwait cltd xchg sahf xchg hlt fistl sti lods scas mov inc push push pop dec dec inc dec pop inc dec pop inc inc inc cmovo jo gs jns jle jns dec ja inc inc inc insb inc dec inc inc dec sub inc dec dec inc inc jnp xor pop inc pop pop pop jb cmp push push adc wbinvd push push sbb or push add xor cmp cmp outsb pusha and or push or sbb adc adc pop dec jge or enter icebp xchg cld in (bad) std sti sti nop ret shl in ljmp lahf out ror movsb (bad) leave lret (bad) into ret scas stc repnz rcl (bad) lret mov fisubrl mov test mov xchg mov fwait mov mov mov mov xchg (bad) xchg out mov nop pushf test fwait std mov insb push jns gs adc insb jb sbb jb jg dec inc push pusha dec dec push push inc inc sub pop jno inc inc pop pusha push push pop push jl push pop push dec push push xor and sbb cmp sub sub adc and or cmp cmp xor bound add cmp add add adc sub push adc or sub stc testb shr call lock lret fyl2xp1 idiv cltd enter repz in rcr rcl cmpsb out mov ret (bad) aad repnz (bad) fcmovu rcl int jmp rcr int lods ret lods test fwait popf mov mov cmpsb cmpsl cmpsb mov fimull xchg (bad) xchg pushf lcall fisub test mov popa dec fs fs insl push fs popa addr16 pop insb jbe imul and push push dec inc add inc inc dec dec pop pop dec push inc pop pop pop cmp pop pop dec pop push and xor and xor cs aas adc sub and xor sbb cmp ds sub sub and movups adc push sbb add add je pop sbb adc adc ret lock repz in in lret (bad) clc jmp in in notl imul fsubr repz rol rol test ffreep fcomp fmul mov fstp (bad) (bad) ror (bad) (bad) fxch (bad) movsl movsl xorl mov mov andl mov mov test mov mov mov pushf mov je jo data16 bound dec outsl imul jl jo arpl jns imul inc dec or dec outsl inc inc add inc pop pop push inc aaa imul push pop dec inc add xor sub es and cmp aas xor xor and sub xor push or or sbb or push adc pop add add sbb sbb sbb faddp out in jmp mov out clc stc out mul (bad) repnz xchg (bad) repz repnz (bad) (bad) mov ffree fisubr faddp fcmovnu (bad) neg fcmove fmul rcr aam (bad) mov xorl mov mov stos xchg mov scas test mov test lahf sahf mov fwait cwtl xchg mov add imul imul pusha pop jne jae jne jg jbe pop outsl push push inc and push inc inc dec inc push outsl inc pop push inc pop push pop inc je inc dec push pop dec dec pop jle,pt xor cs adc cmp cmp xor and cmp cmp and cmp add or invd push sub pop push add sbb jb pop push adc sbb sbb jecxz ret div imul in std out mov loop fyl2xp1 loop icebp clc lock jecxz jmp stc jmp rcl (bad) leave (bad) lret fcmovne iret leave ror fcomi mov (bad) ret mov (bad) mov mov cmpsb mov mov test xchg mov movsl stos mov mov test xchg xchg and lea test sbbl cltd cwtl imul je or or pop push insl adc jbe push push pop sbb xor and and jns jnp pop sub jg pusha xor addr16 ss cmp push cmp ds inc add dec or or outsl push jnp jae adc pop push pop push pop jge or bound push add or jb je jbe js jp jl jle sub out test xchg mov mov nop repnz loope cld xchg out in lcall mov cmpsb xchg leave scas (bad) mov mov mov mov mov into mov mov mov scas enter int3 dec loopne out out aad movsb fsubr (bad) fsubrl loop in out call fldz out movl cli lcall add and or jge adc jo pushw aaa sbb jg jl outsl and inc and es xor pop cs xor push xor ss cmp pop cmp ds inc sub inc inc dec xor dec cmp sub cmp daa push push sbb pop subps pop push pusha xor cmp push pop outsb add jb je jbe js jp jl jle and in test xchg mov mov mov mov nop jecxz notb lcall enter lret cmpsb sti test stos les mov mov mov mov les cmpsb les lret mov sarb fsubrs fisubr in out call test xor repnz xchg negb cld std in mov add push imul or pop push dec adc inc inc adc push jno insl sbb push insl and and es sub add outsl pop insl or push or jno adc imul sbb push jl jne dec and inc sub pop das insb xor dec xor pop cmp sub sub inc daa inc sub dec sub dec sbb push add pop sub pop add arpl cmp imul outsl pop jno jae jne ja jns jnp jge jg and xchg mov mov (bad) sti (bad) loop loopne icebp xchg clc xchg in cltd int3 fwait stc popf in lahf shll enter cli stos ret lods ret mov mov mov mov mov (bad) mov mov aam lret movsl int iret mov mov mov fnstcw fildll in into lods jmp (bad) out xchg icebp sahf repz cmc movsb negl std (bad) pushl add push pop or pusha or popa adc bound insb sbb jb jns push and sub inc daa inc sub push sub pop xor inc aaa pop cmp pop cmp inc dec sub inc cmp das dec xor dec pop cmp push xor pop xor pop daa pop pusha push add imul add sbb jne ja jns jnp jge jg sub xchg (bad) cli (bad) stc xchg int out notl (bad) popf icebp lahf fsubs cmpsb test test (bad) scas out mov mov mov mov sarb cmpsb ret (bad) fsubl lret movsl int iret mov mov xlat mov mov rolb in out jmp out (bad) mov fwait pause cmc xchg notl fdivrp push add add dec or outsb or jne jno fs sbb jnp jb push dec and push and sub sub xor xor sbb insb cmp inc pop and dec and dec cmp push and push and pop cs xor arpl imul outsl add jae dec and jns jnp jge jg xor xchg mov mov (bad) in mov fcoml out cltd cmc fwait out popf cmc lahf andb cmpsl les lret scas ret mov fnstcw lret mov mov leave scas lret scas int iret mov aad xlat fcomp ljmp loope jecxz in out jmp mov test xchg repz cmc imul pushf stc xchg sti (bad) std lahf jmp outsb add je push or popa or jbe jge gs jns js jo jnp push and push and inc sub pop das xor push xor inc aaa pop cmp push cmp sbb inc das dec das dec sub dec and push inc cmp push sub pop cmp popa add gs addr16 insl add jno pusha sbb jns jnp jge jg sub xchg (bad) in (bad) mov xchg repz cwtl lcall lds aad lds (bad) scas aad mov xchg lret mov mov stos lds lret test rcl shl aad shrb mov (bad) loope jecxz in out jmp out in vpslld lcall sti mov lahf jmp add jle insl or or or jae jge js pop sbb jo jnp and jbe popa and sub sub push xor pop aaa push cmp pop cmp sub and dec dec push sub dec cmp aaa push ss aas push ss ds cmp pop aas popa or addr16 insl pop outsl sbb pop jae jne ja jns jnp jge jg and xchg mov (bad) icebp xchg loopne loopne jecxz call popf lock shll lret test fisubr aad ret mov lret (bad) mov mov mov mov int iret mov aad xlat mov mov fild in rcrb pushf out test xchg test test sti fwait std xchg pushl jbe jbe jg arpl outsl or push push inc adc jb bound outsl sbb outsb sbb outsl and inc daa pop sub pop sub inc xor popa aaa push cmp cmp xor inc add dec ds sub push es add push sub pop xor popa arpl adc imul add jae jne ja jns jnp jge jg sub nop in out mov (bad) std (bad) icebp xchg cmc xchg icebp xchg leave xchg cmc cltd jmp xchg mov aad leave test icebp scas fnstenv fdivs out icebp mov ljmp lret mov (bad) mov mov (bad) shrb loope jecxz in clc pushf jmp test fwait icebp fwait repz cmc lcall std fdivrp das add imul imul jp ss sub cmp xor adc adc push daa sbb or sbb xor add cmp cs cmp daa inc fs sub dec es insb dec jo push inc ss xor push js jne cmp pop dec popa adc xor sub imul pop outsl or jne ja jns jnp jge jg andl mov xchg mov xchg mov popf jecxz (bad) mov xchg shrl leave mov mov mov mov sarl mov leave lret int iret adc shll fnstenv fbstp in out jmp mov xchg icebp repnz (bad) cmc (bad) (bad) enter fdivrp (bad) cld and add xor or xor adc adc daa pop sub sbb sub and and and inc sub pop das pop xor inc xor cmp jp push aas xor inc jne inc push or dec and dec and push es aaa push sub pop minps xor arpl gs addr16 insl pop outsl adc jne ja jns jnp jge jg and xchg mov xor cs popl sub ret xchg inc sub jg xchg scas test mov lods mov mov mov rcl xlat rcl rcr xlat fldln2 ret rol ret fst (bad) not (bad) (bad) (bad) int3 into repnz out in sti jecxz jmp out std fprem1 (bad) bnd div jmp push loop add pop sysret or or add movlps xor adc or or and and xor sub sub cmp sub xor cmp sub aas cmp ds inc inc inc inc inc inc inc pop dec dec push dec push dec dec push push pop dec push push push ja inc pop inc pop pop pop dec and and dec push gs and jl jb daa je imul jl sub xchg fildl sahf rorb popf nop xchg xchg mov lods lahf sahf mov movsb mov mov test mov or xchg ss dec mov bound sub jl inc jge insb sarb inc xor ja orl or fnstenv or es and cmpsl lahf les stc inc aas mov mov inc lea rolb jae add jl sbb shrb repnz lock add mov xor insb xchg or sbb bnd jmp idiv cld std jne sub xchg dec mov inc push fsts sbb push mov aam fwait sub ds mov jo jne jne mov sub scas jmp mov pop pop mov mov add or cmpb mul mov adc sahf xchg imul dec jecxz loop adc push inc out lods (bad) out jo jb dec jne js imul mov scas push int3 cmp dec dec dec add test push jmp mov cmp repnz stc push fimul jae pop mov jae cmp ret repnz lds add pop enter lahf sahf xchg xchg xchg pop push mov jb mov popa and outsb stos sbb out ds gs (bad) pushl adc loop add sti or sub inc aam ss nop mov mov sbbb xor lea and into lret sub mov int fdivl cmp cmp std cld mov cmc mov inc stc sbb lcall lahf popf pushf fwait rcrb popf xchg xchg cmp sti int3 push mov repnz xchg leave into cwtl mov stos mov mov pushf push fcomp jae stos test movsb mov mov xchg push cli inc cmpsw scas scas mov dec dec test mov dec bound lea popa rorb jb jg push xchg (bad) enter loopne arpl xchg lods sub jecxz mov out add sub adc pop jne or (bad) jl (bad) jnp adc xchg cmp int hlt xor jmp (bad) cmp adc (bad) and and (bad) push jmp aam push in and push testb fs mov arpl call mov sbbb stc testb xchg hlt add and xchg shlb push inc pop push jmp sub jb push addr16 sar aam jbe insl cmc fidivrl jl mov ss jbe je mov mov inc aaa fistl mov repnz cmp cmp out sub pop push push lret inc mov pop not mov incl xor push or aad roll fnsave pushf outsb out (bad) xchg imul mov in insb lods adc fsubl adc mov out jo pop iret xchg add (bad) fimull mov lods das sub pop jno pop push fisub and jb cld pop add cmpsb dec int int3 inc cmp xor mov gs add add inc sti dec or or loope leave sahf dec sti xchg fs sahf popf call addr16 push push insl push outsl je jb fisubr and mov inc inc ja fist and dec dec pop push sbb scas daa pop mov ficompl xlat mov movsb sub push stc cld shrl mov mov jb xor inc jl,pt cmp addl arpl dec jno cli xchg cli xchg movsb xchg xchg push dec push outsb sbb out pop in out call mov imul out movsl test (bad) repz idiv rolb inc add lret fwait out inc push cli lahf das out aad push xchg and sub cmp lods and in jle push lret insl insb mov dec adc jle mov movl cli cmp cmp enter aaa sub sub xor mov aaa cmp into vcmpsd (bad) push decb add push fwait daa fcompl xchg pop stc or push mov mov lcall jne and xchg out mov int lods ret pop (bad) stos adc fisub clc sbb lcall mov (bad) jne ljmp loopne pop (bad) dec dec inc xor inc ss mov and test inc mov mov sub lea push jg sbb icebp pushf add iret mov mov or in call mov sub jp movsl jg (bad) mov cld std cmpsl je inc or inc push mov (bad) jge enter rcl mov push mov push (bad) sbb pop sbb push push lods push cmp movsl imul mov aaa dec jle aas push (bad) pop test add les (bad) dec sbb adc xchg (bad) popa push sub popf sbb sbb and insb in jecxz in imul or cmc or hlt jle jae mov add xchg mov add push aad jo xchg cs outsb sahf add cld popa sub mov popa inc pop jmp inc es or call mov mov cli cmpb addl fiadd popa or cmpsb add xlat xchg adc adc ljmp test in out mov or jge jae jno jne outsb pop add sti push push mov call push inc mov lea push cmp cmp rcrl pusha arpl fs insb cmpsl insl push imul push in jp or mov push push push test dec roll stc mov mov imul fs adc cmp pop mov cmp jg dec xchg es pushf mov das aas jg xchg adc sti stc int3 testb lcall adc add push std fild loopne dec sbb rclb jg cmp xor divl sbb mov xchg add ja (bad) je fnsave adc rcll je xchg pop cmp sahf sbb icebp mov sarl cmpsb call sbb fistp cmp scas sub cmp dec ss or inc (bad) push insl (bad) iret pop sbb dec jne xlat jecxz scas (bad) adc je push cmp cmp rcrl mov and int3 movsb insb outsl push push popl mov xchg pop pop orb pop inc jnp inc inc std jp sbb cltd fbld fldcw pop mov insb out and popa aas xchg sub mov stos and mov dec loope push dec lret sbb jnp lock mov sub xor push pop pop dec andl push daa pop sub adc mov jb mov sbb mov push dec icebp lret or test into jl lret lahf sbb data16 cmp adc gs sbb pop in mov lods sbb mov mov mov cld jle roll mov inc pop mov mov rcrl mov cmp xor andl lods adc test pop add fs sarb push jmp (bad) decl movsl scas dec adc mov sbb imul jmp adc subb out mov ss and repz adc addr16 and inc fstl push mov inc mov inc leave add cmp add fistp mov jbe test pop (bad) test mov inc inc inc in lea fimul data16 or add fwait add lcall jmp sbb lea into adc ficoml cmpsl sti insl test outsb lods adc jecxz mov mov jno mov mov cmp jne out je cmp sub cmp cmp (bad) cltd movzbl rcll nop pop sbb push xchg iret stos arpl stos popa shrl (bad) and cmp incb jae (bad) xor inc sti lea mov orl push add je pop push lret in nop fiadd cmpsl out movsb out xor sub lods cld adc dec xchg jle inc inc roll lea ret add add sbb or adc push mov pop sub in sub imul out int3 jbe sti xor mov push mov cmp subb push push ja (bad) ret pop rcrb cmc pop mov fstpl rclb fwait pushf popf pop fcmovnb in jecxz in jecxz in pusha mov gs cmp cmpsl and lods jno jg bnd leave ret mov dec test inc mov dec pop mov mov stos ret fsubrs ficom aad data16 iret sub sub scas sub sub fs jle dec int jbe mov mov push mulb jg mov push sbb sbb mov lahf pusha cmp mov addr16 dec outsb outsl jo jbe jns cld xor and hlt movsl sbb push iret test dec dec pop sbb cmp mov mov mov dec or add test lds pusha out cmp faddl inc in push xor push dec stos mov xchg mov xchg xchg into lcall mov cmpsl dec mov and sub daa test xor icebp stos add clc push xor cmp add inc lahf cmp rorl rcl pop cwtl push pop popf sub or pop loope and in (bad) lock in out jle (bad) fldcw xor repz ds gs or or pop loop mov xchg (bad) pop popf inc loop lret adc fnstsw jae lcall and out cltd out lods cli aaa mov mov xor jle insb adcl adc jg push cmpsb mov les mov jmp mov mov repz sub cli outsb leave mov (bad) cmp push xor inc inc arpl int3 bound rol jnp xchg xchg xchg stos outsl sbb movsb jmp xchg (bad) imul out and sub mov negb add cmp jnp mov test mov mov (bad) popf or pop lahf aaa cmp and pop xor sub (bad) int3 add fcom mov (bad) jno push (bad) imul lea dec mov iret mov rorl inc repnz inc cltd incl xchg push sbb jl push insb ljmp in test jp add sti ds xor jl jle inc gs mov adc cmp sarl movb fistl mov fwait sub cmpsl mov es movsl fsubrl scas scas mov jne nop mov mov mov jne fimul fiadd (bad) daa leave mov sahf lock out adc xor jne imul mov out cld xchg dec lods in sub mov imul mov inc rol shl or popf inc mov adc xlat fcomp pop fnop rclb jbe scas ret jp jl (bad) jge js add mov (bad) fwait jge xor push push inc push out jno cmc hlt pop pop out in in cwtl in in pushf (bad) nop das fstpt jmp mov cmpsb pop outsl pop lods test xor ljmp jp or sub fstl push int3 or daa dec sbb mov aad insb push add mov dec repz pop or stos and and mov jb cltd (bad) jno cli mov jle shrl js add jbe inc push movsl and rclb cs popf xchg push xchg in and iret imul cwtl into fs or (bad) loopne (bad) out add nop xchg scas rclb xor sti (bad) (bad) pop mov sbbl xlat (bad) mov sub test iret arpl aad cmpsl cmc ja mov inc xor cmc fbld aam fcmovnb incl faddl (bad) push mov loop jmp sub push inc jo dec pop sbb push cld lahf sahf jmp mov test nop (bad) cli (bad) sub sub dec subb mov mov and push mov sub push aad enter adcl and push xchg inc mov std loop ret inc call inc inc cmp cltd shrl ss add aam (bad) add sbb jp pushf cltd lcall jmp sbb mov sbb push lock repnz pushf add adc cmp aad cmp mov lcall and fucomp sbb mov and test (bad) inc sub popf iret into sbb mov imul mov cli mov pop in jmp out cltd jmp dec sbb lock out pushf movsb inc out adc or ficom jb mov enter mov sbb into mov cmpsl int dec dec push push lods es stos and cmpl pusha scas es call push clc in lods stc lcall push dec dec ds out loope into test shrb data16 or je mov sti xchg xchg xchg xchg adc (bad) hlt lahf mov or sbb sbb ljmp sbb or clc add je aas ds cmp int3 xchg and jnp xor dec adc push and fmuls and fcmovnu jbe rclb shrl imul mov push dec xor je imul loopne jmp repz mov sbb lahf pop sbb dec pause fsubp loopne in push sbb mov sbb sbb loop xor xchg outsl lds and mov adc mov sbb mov stos and sub xor ljmp insb mov clc inc mov dec in xor xchg out push (bad) or lea mov jb leave mov insl jb add adc adc pushf into jno pop arpl sbb xchg rorb add dec aaa push mov sbb stc nop sti add es add (bad) cmp adc int3 and push pop int3 push and insl and xchg loope scas leave cmpsl lret or jns lock leave pop aas arpl jle repnz mov mov pop dec or js mov fsts loopne (bad) jmp out in push xchg xchg xchg loopne das mov aaa ja fdiv (bad) and pop add (bad) jecxz loope jg ret repnz repz xlat out mov mul movsb push or cwtl insb and cmovl push adc adc sbb inc inc add ret xorl loope mov jb outsl xor sbb dec imul pop leave fcompl jecxz sbb insb and dec mov dec jecxz or dec and ja cwtl push repz hlt cmp cmp insb inc jbe xor xor xchg mov xorl adc scas cltd inc fcmovnu xlat mov ror into mov popa je les rol rep push popa lods test fisubrl aam movsb mov int int sbb ja lret pushf mov push cmp mov mov imul stos inc inc push sbb mov xchg (bad) pushf fistl xor imul les dec push mov fdivp rorb mov inc mov ret icebp sbb neg jmp out or lret or xchg data16 pop or cmp dec or out clc mov out cmp jge jp and jb inc cmp inc (bad) cld sahf xor xor scas pop adc add sbb pop call sbb cltd (bad) pop pop pop lret cmp in add add fs test jne xor cwtl xchg sarl mov in push fs dec ds subl ror push mov enter jp into fwait mov xchg mov lods add mov mov mov mov imul out mov sbb rol in mov (bad) mov stos sub adc mov (bad) mov or scas and push add or stc div dec int3 pop pop pop out sub cmc hlt and adc dec movsl (bad) jns pop call inc inc in loopne inc fimull data16 or or lea clc cwtl int sbb fstps popa pusha adc xlat imul adc dec sbb or lahf clc scas inc inc lods mov ds dec dec xor sahf test sub push adc push mull and popa fdivs and in cmp ss cmpsl push mov push outsl jns leave sahf pop cwtl (bad) xchg mov mov (bad) or stc adc (bad) rcr sbb inc dec dec divb out or xor xchg outsl push mov xor sub xchg sub push jo sub xor cmp cmp cmp mov stos stos paddq pop pop push fcom pop pop mov decl pop push lock mov (bad) mov int3 dec sbbb sbb mov add mov stc mov mov enter arpl enter sbb cmp xor adc or sub and add lock inc std les aas xor xchg dec scas aad cmpsl (bad) mov and test sub push sub push cs incl jae gs gs push cmp outsl pushl pop stc out iret leave div cmp lret out xchg mov out cwtl mov pop pusha in daa xchg in cmp loop cltd cmp divb or adc sub add das jl or dec adc adc imul fsub movsb int fsubr test mov dec les rorl dec out push inc outsb inc inc call jnp inc mov lea lret insl out sbb jnp in pop fldcw lahf loopne sbb sub push adc mov or cmp rcll nop inc mov lock mov mov xchg fmuls and cmpsl jecxz and stos adc pop inc inc sub dec xor dec sub or xor orb aaa sbb imul adc adc xchg pop sbb mov leave pushf fwait out xchg ds lahf push sub cs aas sbb fwait pop fimul arpl xchg jg mov movb pop push sbb fistp pop add pop mov mull dec cmpsb das loopne cs ret test scas (bad) lods imul out jmp pop cmp shr lods mov inc les rorb or jns into js or ss fwait int3 xchg test pop (bad) cmp mov loope fsubr arpl outsb push in out out mov or sbbl jno call xchg dec mov (bad) dec push lret int3 int stos rcl cmpsb les mov fbstp andl out outsb mov inc xor jae lret cwtl js mov sub std imul (bad) stos dec or in jns jg inc out (bad) mov mov popf loopne push cltd adc jg int3 sub test sbb mov fdivrs jp cmp jg inc stos add dec sbb mov add or loopne dec xchg pop sub hlt negl push out ja cmp sub mov (bad) mov mov push (bad) or nop xchg xchg rclb insb xchg loop sbb stos pushf push fmull mov sahf mull cli in jae out lock jecxz js out lret stos stos scas scas xchg ds cmp ss dec or mov pop xchg les out pop jl ficom lret fcmovu dec sub js sbb (bad) jno fisubl cmp insl ret or lahf inc add adc stc test cmp jle repnz mov adc cs jl dec out (bad) mov insl dec arpl cmp insb cmp xor mov jge xor mov inc scas jbe mov iret mov or adc or add xor push cs dec or lods hlt sub xor in out add xor stc sub (bad) mov je push mov (bad) xor cmp fwait je xor mov mov cmp or mov or notl mov ljmp dec repz push sahf cltd insb cmp sarl jns daa (bad) cli (bad) popf fisttpll push les inc xchg cmpsb pushf loopne xchg fstl cwtl mov mov loopne inc add pop pop pop pop scas (bad) scas push adc cmc mov inc pop sbb into xchg push add xor lret sub mov ja xchg jg js mov gs mov jne outsl mov inc pusha stos cld sbb sub in shll xchg xchg dec adc mov mov cmp out aaa push aas push xchg addb loopne fimull out dec adc adcl adc sbb aam test adc repnz jo add (bad) call aas ds inc js cmp ss mov xor cmp les sub (bad) mov fcmovu scas insl int outsb les push popa fs and xchg jbe mov ds add jmp add cmc hlt xchg lods (bad) mov adc push adc pop xor mov in sub cmp xor mov adc or repz adc dec mov mov pop mov adc xchg and sbb sub negb pop pop rcrb push (bad) push pop mov dec dec dec dec xor mov or int3 pop or outsb jl jge xchg pusha sub mov outsb xchg aam push in fstpl pop lea loop ficompl sbb push dec aaa dec lods out mov cmpsl mov testl std push adc add cltd cltd inc sub or mov imul and and fstl ficoml xlat stc ja jns ret pop xor pop and push cmp rol or rcrl push mov arpl or xor sbb icebp mov adc int fdivl pcmpgtd xchg shll xchg add cmpsl and sub or lcall nop mov adc aam push push push cmp push mov cmc mov popa (bad) cmpsb xchg insb shrb ret mov push dec call movsl fnsave inc inc out add testl (bad) outsl outsb lret lret loop stos push cld adc dec sbb fs push mov out mov (bad) shll mov decb cmp scas int jae int3 iret int3 iret rolb (bad) xchg icebp add pop sbb fbld lcall mov jl ljmp xorl aas add mov pop loope or xchg rcrl xchg mov in and mov icebp gs loope (bad) jne jo,pn aaa xchg mov add movsb (bad) andl and or ror dec push push fistl mov pop pop rcrb mov pop cli into movsl int3 cmpsl rcl es and mov mov repnz push lds inc inc lea int3 pop rcl xlat aam lds flds shrb inc pop push loopne shrb jb pushf popf sahf pusha xchg add notl fs lods rcl stc dec scas lock jo or or jno add cmp (bad) lret xor fwait rcr push clc sub test jecxz test pop and pop sub push xor mov and dec pop imul xor stc clc push mov jg addr16 gs addr16 jmp push mov sbb jo loop xchg and mov int outsb xchg mov sbb adc mov loope inc stos push xchg mov rorb int jo xchg push fstl pop insb pop dec sub pop add add sub dec stos mov push std (bad) pop inc add add add (bad) (bad) incl add add add add add add adc add push add add adc push xor inc jb push arpl data16 aaa dec cmp inc push add add adc push inc outsl fs push inc dec insl jno inc fs inc gs push add jae outsl popa push push inc push dec jns xor fs js push add inc jb jno dec jp push dec xor xor xor push add add inc dec xor xor aaa xor push dec ja jns dec insb inc push pop add add push cmp xor addr16 xor push push or add adc dec aaa ja cmp xor dec pop push jno jns jns push or add adc jo inc dec inc dec push push dec jb dec pop xor jo push or add adc pop pop imul push push push push pop arpl push or add adc cmp dec push jb fs imul fs dec jne or add adc pop dec push inc pop xor jae jp addr16 dec push dec push or jbe outsb xor dec inc cmp push jno inc arpl add add imul outsl inc insl dec xor inc bound sldt add bound jo jno dec imul xor aaa dec jp push adc add adc push push push je inc push insb xor push inc xor adc add adc jp dec jae js cmp inc inc push pop inc jne push inc push adc add adc dec xor cmp push outsl cmp xor dec bound and and aad adc loopne jnp jge (bad) js notb jb inc xor aaa cmp pop mov sub xor inc gs loop adc icebp in ja aam adc jmp imul mov sbb or xchg je jbe push sahf movsl adc cmpl mov sarl mov dec cmp mov push sub xor pop dec push mov (bad) sub lock (bad) movsb pop cld lea xor in inc hlt test jns rcr cmovnp cltd data16 outsb insl les push pop ret mov sbb mov stos stos mull push decb mov ret cmpsb loopne sti add mov mov aam cs pop int3 push push mov xor aam fistpll aad and cmp aad jne in les in pusha mov add dec cmp call pusha mov cmp dec pop push sti cmc or pop repz jl (bad) jne ljmp andl xchg outsl sbb je sahf adc mov sub inc xor sub pushf and mov ds daa push stos push and jl pushf cmp movsb lret mov pop mov shr cmp cs dec aas dec enter cmc mov mov adc xchg ret outsb out les (bad) cwtl cltd gs xchg jne xchg pop push sarl addr16 movsb insl push sahf in mov push stos js push hlt les cmpsl movsl mov sub xchg xchg dec cmpb ds xor xor pop (bad) sub pop mov and ss jno fadd cmp rcl lods jmp outsb mov push insb mov mov or jbe ss out inc or or dec add and inc es outsb adc jl pushf (bad) cmp outsb add or mov jo jae sahf pop stc cmpl sub inc xor push cwtl sub mov and pushf xor mov jns loopne and shll int3 sub sub mov fcompl sub inc inc xor mov dec xchg test mov outsb sbb enter sbb xchg sbb sahf lahf loopne or (bad) sbb mov jge out out lcall mov mov mov movsl dec cmpb scas inc (bad) xor or pop xchg sub and and push fsubs push jle jp cwtl xor (bad) jbe mov inc jno fdivp and lds std dec add add or div adc (bad) adc inc inc incl sub loope jo mov adc xchg xchg out stos dec daa cltd adc mov sub sub sbbb stos cli inc mov clc dec mov jge or or fdivrl mov mov (bad) enter mov and pop repz (bad) fcom ljmp jecxz cwtl fdivs lds inc loop ret jnp jecxz in add ret rorl std std call (bad) push pop sarb mov mov lea or (bad) xor cli stos lcall test cmp into lahf mov cmpsl sub push xchg cmp test leave int3 fcmovu fcom stos out xor lret jb fs xor cmp cs ret lock xchg jo insb pop bound cmc jle pop out and in jns jg inc lock sbb neg push sahf popf loopne inc cmp stos cmp xchg insl add sbb pushf pop jg xchg test dec mov int3 movsb jp sbb add cmpsl sub movsb sub sub shrb (bad) daa inc das inc movsb mov mov mov mov ljmp add xchg xchg jae add jl insl insb lds movsb pop sbb imul lcall mov mov vmread pop mov stos xchg mov int ss cmpsb lds sahf mov push push mov mov leave dec sub (bad) cmpsl data16 inc sub hlt inc push enter dec xor sbb (bad) (bad) std jbe ss inc (bad) loopne addr16 cmpsb xor xlat (bad) pop xlat les ror mov and cmp inc (bad) rcll ret (bad) pop pop mov pop lds in arpl repnz out fs mov jmp inc cltd jmp fwait lret arpl xor cmp add dec out xchg lods jns mov ss js jp orl sub mov mov and push cmpsl add cmp xor pop pop mov pop jae jge jl jmp stos push fdivrs in adc inc cmp cmp lods ljmp xchg fcmovnu bound push test lock inc lret je xchg pusha pop mov arpl in out mov mov mov cmpsb push mov cld jge call xchg fnsaves xor jle cmp rorb add jl cmpsb fistl push jne and das pop into int xor inc aas rolb (bad) pop test or pusha pop pop or jle addr16 adc adc inc jg jge dec bnd loop pushf movsb jns es out lods out and (bad) ljmp imul test imul or int3 mov dec dec push push mov sbb xlat mov movsl int3 cmpsl incl loop push and cmp pop cmp mov data16 dec addl (bad) sahf jo popf rol jge frstor sbb sbb fs jecxz outsb mov in addr16 out lock repz aam mov mov add test cmp and xor push adc mov in stc daa xchg fdivl test daa sbb jae jl xlat mov sub (bad) insb (bad) in mov pop std dec add les outsl mov push out pop in push out out lahf pop clc inc inc call cltd fucom sub sub and mov and adcl nop repz push mov xchg and jl jle sub adc mov leave (bad) pop (bad) adc push aas push test lods movsl lods or and icebp dec test push push cmc repz and ljmp push sarl cmp push subl xchg jae lcall push lahf addr16 (bad) pop leave push jb movsl in popa (bad) call bound mov cmp sub (bad) inc rcrl and fwait cwtl lcall sub fnstsw nop out es fldt daa fnop mov test pop cmp popf pushf xchg sarb or mov add add or add xchg repnz test stc cltd adc dec nop inc out stos sbb lahf cmp cwtl insb push jl imul (bad) mov stos sub repnz stos inc jo mov mov mov add scas scas fstps pop rclb pop sub out dec imul popf test mov dec dec mov mov mov add mov cmp adcw xchg cwtl cltd adc arpl in bound call in loope dec icebp repnz stc cli mov iret jge (bad) into inc popf vshufpd and pop and pop popf fcmovu fisttpll fdivl lret xlat (bad) jae sbb das fnstcw add lret popa mov aas aas add mov push out pop cmp hlt push push mov fs pop jge dec dec dec notl sub or (bad) out sub cmp test push (bad) mov mov and xchg cwtl jge jg test int adc mov dec push cmp fistl insl movsl movsb add adc leave movsl iret mov stos inc adc inc and out xor ds inc rcl jmp leave mov fcmovnu gs mov outsb les xchg imul popf sahf lahf or jecxz push cwtl fs out lcall mov int push add inc sub cmp cmp xor or jno sub (bad) repz push sarb aad sbb mov jge xor xor popaw rolb cli and cli stc clc bound loop xor icebp gs test adc dec dec icebp add in ja imul jno arpl loopne xchg jmp cltd (bad) jae mov repnz push (bad) (bad) subl sbb xor ret dec mov pop adc bound xchg pop pop (bad) mov mov mov imul ja sub pop jmp leave inc cmp xchg call js add ja or cmpl xchg xchg lds cltd gs loop mov cs jmp adc cmpsl fwait repnz pop scas ja xchg add add cmp cmp les std xor das pop push mov push pop ljmp test dec (bad) (bad) aad pop xor dec iret arpl mov adc (bad) mov (bad) (bad) sub pop loop aas repnz push dec xchg shlb cwtl xchg daa out in dec jne dec and pop dec lcall jmp cltd sub mov repnz xchg out imul xor sbb rcll test pop mov pop pop mov pop pop lock xchg mov clc pop rorl dec in cmp jecxz inc inc out imul outsl lret xchg ror lret leave push ret sbb sbb pop clc bound popa ds icebp mov in push out loopne repnz lods jle xor std test sub idivb scas lret flds int3 inc mov pop lods sbb jno (bad) mov mov push sahf and stos gs inc inc movsb insb jg,pn jae int3 lret insb mov push les ds mov add xor (bad) and icebp test dec xchg in xor shlb push adc loope insb outsb mull push sub rorl popa sub sbbb aas mov inc int3 xchg aas dec push cmpsb lret scas scas lods or or push pop or mov inc pop ljmp jbe in outsb mov cmp push inc lock cmp adc cmp movsl jb sub insb fistl jo mov popf or push sbb dec push mov fmull ret pop add (bad) add xchg xchg stos pop dec test cmp sub (bad) int3 and push pop cld cmp push sub push xor fisubl ret rcl jns ror int mov and ss add lcall loope cmp repnz inc jnp xchg loop add sub out sbb popf xor lret fwait cltd xchg ljmp inc xchg (bad) cmp pop xchg rorl sbb inc int ds sbb push mov push mov cmpsb mov dec lods lock nop inc pop loope inc test mov dec cmp cmp iret lcall lret movsl scas ja jne mov outsl insl fcoms push bound pop hlt or mov rolb sbb adc mov mov push add in ds cmp xor daa vcvtsd2si sub aaa and mull and push pop (bad) jne adc aam sub and iret into inc (bad) add lret sarb push ret jne std ss dec pop loopne and repz out and out pop adc in imul sub mov cwtl xchg ljmp (bad) jg jae mov test jp and ret test pop mov push ljmp lods and mov xlat lods fstpl mov call xor dec in loope and inc push jmp push outsl in mov je data16 jno ficoml ret (bad) jnp and mov xchg loop cltd in pushf out outsl and mov jg hlt jle cmpsl cmp dec xor inc add mov lea sub pop and add aad fldcw mov ret rcl movsb call and cmp inc mov (bad) push in dec std stc (bad) mov adc dec dec cwtl icebp dec aad xchg cmc cltd data16 push mov data16 outsb cmp popf repz pop jbe ja icebp imul mov inc push int inc iret pop inc dec dec add add mov pop xor and pop push scas stos stos lods and ja dec dec je push dec dec inc mov cmp jle xchg jbe jae mov push cltd lcall mov jecxz and adc adc sub push or cld div clc jg,pt add add inc sarl aaa fwait lret or sub aad adc daa and fcmovnu fbld out xor fcmovu jp sub in test outsl xor xor mov (bad) inc cmp ds test push pop or (bad) sub repnz adc adc aam xor call sbb fwait aaa popf sahf popf inc fs xchg inc outsb outsl jo testl jns mov mov (bad) ret jg mov jnp dec dec mov insl scas lods stos jnp push pop sahf fistp mov mov pop pop push fwait stos stos lods push out dec dec mov inc inc inc cmpb jns jns mov jae outsl scas xchg xchg xchg push adc gs sahf pop gs out call adc (bad) lock repnz xchg or pop aad sti cld cmp cmp (bad) dec movsl aaa xor sti into iret rclb push mov fcomp ficompl test and and mov sbb iret int3 lret or mov or add mov into popl adc adc xchg cltd jmp out sbb sbb fwait (bad) popf sahf popf and mov xchg push outsb outsl jo imul mov jp stc loope cmpb ret out mov or mov cmc scas lods stos dec push push pop sahf fcomip mov mov pop pop push mov pop dec dec dec je add inc (bad) mov pop jge jge test ja jae mov imul pop sbb pusha pop movsl loop in arpl adc in out sub (bad) or jg add add inc adc cmp or int3 or sub aad adc daa and xchg (bad) and cmpsl ret (bad) fldcw sub in test jl xor mov (bad) jne cmp (bad) cld sti sbb pop or (bad) sti icebp repnz adc adc xchg loope call sbb fwait out sahf popf ss xchg cmp jo jnp xor xchg jg les mov dec (bad) into inc mov mov push push push xchg rcrb cmpsl cmpsb or fidivl movsl cmpsb cmpsl outsl sub push push push aam mov jne lods dec dec dec loop mov inc jg flds test jne rorb mov imul cwtl cltd pop push mov popa pusha and jecxz pusha lret push mov in in sub prefetchw cmc div aas jl add rol inc cld cmp cmp repnz cs aam adc daa and (bad) movsb data16 fiaddl sub in scas fs rcrb xor repz leave mov stc mov outsb add jne (bad) dec es sub scas jae rcl push xor xor mov enter cmp cmp mov jl add hlt hlt repz movups xchg jnp ljmp cltd jno loopne lods lock pop xchg xchg xchg popf std sub mov mov adcl cmp or iret scas scas lods pop lds movsb movsb mov data16 sub pop cmp jmp push push dec adc repz xor inc inc inc aad std mov jl pop inc (bad) mov adc jno push rcll push pushf pop sbb push push sbb and adc adc scas lock or or insb mov add aas outsl pop add inc ja ss or sub sub pop arpl and xchg aam and mov adc imul out into into int ret lock mov jg movb push dec or mov lock xor push adc xchg (bad) out in jmp push fsub mov pushf fwait mov es xchg xchg js xor icebp test jle jl sti lahf mov add mov mov mov mov lods sbb fnstenv dec jecxz bound push push push push hlt pop in scas push dec pop inc idivl inc inc (bad) jne (bad) inc add js cmpsb jnp mov (bad) outsl outsb insl fist popf gs ja loopne addr16 sbb add test adc vmread mov xor pop push add cmp cmp xchg inc dec (bad) xor xor push int sub adc sti and and pusha and mov xchg ret ljmp sub adc and movb in or mov icebp lock jo push adc xchg das out in in pop push fsub pop popf pushf fwait dec xchg daa push sub test je repz mov mov or mov mov mov add sbb (bad) mov loop bound call push lods mov scas push dec push mov mov inc inc push jae (bad) inc add jns ja (bad) lret mov out outsb insl adc cmc gs addr16 sbb sbb test sub cltd adc bt popl push add cmp cmp xchg push (bad) dec mov xchg push jmp popf push stos adc lods or arpl arpl jmp mov hlt jno jmp js std jle stos xor add inc mov iret dec scas mov dec push enter out adc enter pop scas mov and and repnz sub in (bad) xor ss js aas mov xchg (bad) xchg add inc lods or mov pushf mov adc fwait sbb fs xchg mov test mov push sarl cmp lds xchg lds sahf lret lret jg test xchg push shlb (bad) fcomps mov fcomip cmpsb call adc adc inc (bad) sub or pop lret add cmp jle push ret ret les or lcall in cwtl fnop fldenv fnop xchg cmp fisttpl xor sub das fdivr sub lret mov pop fwait rol jb mov (bad) cli inc add std hlt rep out pop adc inc inc jmp repz push pop lahf push mov jbe xchg call cwtl mov jae sub notl sub inc mov mov pop scas daa pop stos test xchg imul scas dec icebp dec and pop pop dec cld and inc out out pop dec inc dec dec test ljmp imul test loopne aam ret aam lret (bad) (bad) lock frstor ret sti pop ficompl mov insb mov lea cs ret (bad) stos pushf fldenv xchg mov lock mov inc mov xchg cmpsb mov mov push cmpl popa int inc mov jne cmpsb jne add push mov inc std pop mov mull dec leave bound lds jae jbe dec iret jb imul nop dec sti jp push std push call adc or xor adc and sbb or and add movsb pop cmpsb sbb pop add aad loop mov repnz and sub jge push jl std stc jecxz rorb cmp push call mov not insl xchg orl repz pop ret jl outsb imul int xor div mov out pop jmp mov rep sbb adc mov cmp (bad) enter int into xchg pop in cs aad mov sbb (bad) je iret jne inc fldt movsb outsl xlat jp jle push iret int fnsave mov cmp jge insl mov aas mov out dec dec xchg aad sbb or xor adc adcl nop sbb jne,pt jbe daa dec mov mov test xchg sbb pop jae test cmpsl les pop test add push xlat mov aam test lock adc outsb (bad) out inc mov dec out cmp push inc testb ret ret jne fs (bad) js mov jecxz lods jb aad jbe cld push sbb mov faddl push movsl in push shr or aaa (bad) imull mov sub cmp xchg sets xchg fistl (bad) stos xchg jnp and sub pusha ss sbb (bad) gs int inc cmp add les aam and (bad) (bad) je sti xor xor hlt inc or pop adc out xchg (bad) setno arpl dec out repz push testl cmp cmpsl ss lret daa outsl cmc mov jle push sahf imul xorl (bad) jecxz mov cmp mov xchg sub scas mov pop in cmpsb and lods sti inc nop pop push dec call dec (bad) mov mov (bad) inc rorl push ja (bad) arpl jae jo sbb outsl push shrb int in fs adc arpl xor mov adc jmp sub adc or pop sub mov add cmp xchg push ss or (bad) xchg push (bad) jecxz ss iret (bad) test jl shll lods mov sbb bound fcmove enter xor adc (bad) (bad) push bound testb sbb jmp out push popf push je sub scas push call aaa mov mov je int (bad) (bad) std mov fs xlat jno push pop sbb lods lods add mov fistp jl mov push push repnz fcoms lds dec out push mov inc inc (bad) inc (bad) fimul add bound xchg xchg xchg lds xchg cwtl adc jmp out and xor inc out adc jns or adc add add sbb ret (bad) lds clc ss pushf cmpb cmp pop mov and mov fsubl sbb aam mov int lret inc into xchg push imul fwait mov std (bad) mov test scas test out in cwtl in (bad) xor cmc pop loopne sahf jmp cwtl sbb push ss sbb js loopne mov (bad) mov push sub lret scas pusha push mov mov mov (bad) pop adc mov fistpl rcr enter hlt repz aaa and stos inc scas mov push xor ss rep out push mov inc out (bad) or jnp js cld jb xchg arpl leave into sbb lret sbb addr16 aam sbb xchg hlt or ret insl sub cli rorb or mov adc cmp pop mov inc rolb popf rcr pusha pop ret fisttpl iret fstp jl loope je jle shrl mov (bad) std mov inc das out fmuls popf orl dec fildl push out daa into popf push adc fcompl xchg faddp xchg sbb pushf scas out dec xchg xchg xchg and push mov or mov ret gs mov popf andl stos test pushf fldcw mov bound lahf push push push (bad) xchg push dec xlat xlat push ret jle sti inc inc inc aaa mov sarl sub enter outsl outsb insl dec test push push sbb or inc es sbb xchg mov cmp scas pop push add cmp cmp jp push dec stos xor xor push mov sub imul sti pop leave pop loopne inc aad rol lea divb movsl mov dec rol lea rol cmpl cmc mov push enter in jmp mov mov jge imul push add jmp mov aaa push xchg jle inc cmp jmp rorb fcomp in dec adc lcall lcall loope mov sbb push sbb adc push mov cmpsb jne push add add dec xor xor xor xor sub fcmovnu test and lret fcmovu js jb into jno jnp fsubl gs xor shrb lock xchg jo push xor adcb pop data16 push (bad) jns std cmc mov loopne dec dec lahf mov fwait loope adc jmp jge sbb and xor xchg mov lds inc xor mov push fstl fimull test xor mov and (bad) addr16 es push push repnz inc decl dec jmp ljmp xor push scas xchg (bad) out fcom lret mov mov push imul xchg sbb fwait pushf popf int mov sbb jecxz jmp adc cmpsl mov or jns lock ret add cmp ss int cwtl mov mov and and fidiv test js jl pusha fidivrl mov outsb (bad) ljmp dec popl pop test pop clc loope in jmp push aaa or repnz mov in xlat xchg lahf lcall out test jg aad jbe jl (bad) fidivrl mov push out dec or dec dec dec pop aam lods stos stos test fwait mov add inc cmc push inc push push push sub mov out dec dec dec rclb mov jg (bad) xchg and xchg je jae dec sti fadd cli xchg pushf popf xchg std cwtl icebp (bad) sub popf jbe inc push sbb movsb push push adc adc lds or push loop mov cmp ja gs inc add outsl xor jo jb aad xchg jecxz test (bad) mov mov ficom xor cltd sub rcrl mov fiaddl clc mov imul push push pop adc jno dec hlt and inc and fsubr xchg int3 lret pop ss cmp push cmp mov clc push std roll or or jnp inc inc jp mov sti jge nop inc out scas mov lahf xor jmp mov mov xchg xchg scas scas addl sbb mov push std lods lods xlat xchg inc rcrb pop pop aam pop icebp lock pop jge push ret mov scas mov pop out adc in hlt dec ljmp aam push add std loope mov insl insb mov sbb pop ficoml loop in mov lods (bad) or push push or jp cltd add repz test cltd sbb inc or xchg push sub insb sbb fnsave in jg sub pop sti rcl movsl xlat mov ds inc xor ret ret (bad) dec cld jmp pop push idivl and icebp lock dec dec cwtl rorl pushf std inc (bad) icebp sub repnz xchg or xchg xchg xchg sbb mov lcall jne enter lret lret add movsl in scas fldcw cmpsl push fiadd negb lahf sbb sub movsb sub scas scas mov imul lods icebp add mov inc lea sbb jbe leave popa add pusha ret (bad) jno ljmp ret addr16 hlt scas pop lods in and insb sub outsl push or dec mov jno add scas pop addr16 cmp add dec cmp mov aaa xchg addb daa es and test mov adc (bad) jae sti in aad cmpsl aad mov adc mov insb test test jbe mov push pop neg push push xchg in mov stos pop adc xchg push in dec dec loopne cmp and and cmp sub sub mov lods adc inc push scas movntq rclb xlat mov push push push xor aaa push insb pusha sub adc pop sbb bnd pop or lds dec dec or sti mov cmp jbe in adc lcall insl insb sub xor negb outsl pop xchg sbb mov cld pusha push pop or or (bad) or jbe sub addr16 scas insb inc jbe xor xor mov mov mov bound fcomp (bad) cmpb movsb xchg inc aad rcll (bad) sahf outsl mov ret into fwait push or or ret hlt mov push dec adc mov mov in in loopne les out (bad) cwtl xchg xlat ss jl dec and fistp int les mov inc pop icebp les push fld1 out cmpsl cmpsb test fiaddl pop pop into movsl test inc gs push les cmc mov or sbb std or jp xchg out das arpl adc cli or xchg adc bound mov mov push pop adc push fidiv sahf in popf lock push enter das cmp cmp rolb fidivl xor jo mov pop push and mov jns cs addl aam nop mov jecxz je les ret mov pop insb aaa pop test mov dec push adc mov (bad) cmp mov jmp xchg cltd into push pop add std hlt or mov test addl into stc cmc mov adc dec mov scas stos stos call lock pop xor setbe adc pop or fisubl in dec inc inc add fdivr mov sub cs add jb sub das add aad sbb dec gs cmp xchg mov subl push adc adc push mov or inc or nop sub add jmp xchg adc mov mov lea (bad) scas arpl stos in es aad pop or push jne ficom lds (bad) push xchg inc movsb hlt repz mov add jmp sbb insl or nopl jecxz jb lea stos stos insb insl outsb loop roll jnp sub lret cltd sbb rcrl dec pop movsl inc loope scas or xchg pop rcrb cmp xor shrb inc flds jae cmp mov and cmovns fimul lea rclb gs adc repnz mov lods adc ljmp push cmp push jns lock or mov xchg sub xchg pushf and push xor pop cmpsl daa lea mov and je cltd xor daa jle xchg and ja je jae push cmp std mov pop pop (bad) incb (bad) pop repz in inc cli nop (bad) lock mov clc fwait lcall xchg xor xor cli xchg cs and nop mov mov ds xchg (bad) and cmp xor mov add leave or in dec push bound and sub mov lret mov movsb and popl pop repnz xchg outsb lret int3 lret int3 pop iret int sahf popf sahf pop mov movb ljmp add clc jo sub repnz adc std inc xchg sub pop cmp inc or popf mov mov cmp push sub rcrb push xor jae das shlb sarl mov and fs outsl imul insb lods gs or outsb dec or in cwtl in rcrb popf out outsb push dec dec jbe add add sbbb xchg out in mov (bad) mov pop and jnp xchg mov mov orl dec push cmpsb jmp push push add sahf push or sti cmc dec xchg cmp push lock cwtl insb repz hlt jae in mov mov rclb fsqrt mov adc js jns dec orb sti ffreep (bad) (bad) cld xor push arpl inc arpl xlat (bad) imul test add idivl mov stos lret xchg sub mov push xor dec or (bad) cmp dec sub mov and jge jae and call jmp and mov jne imul or pop in xchg lock xchg (bad) pop daa aad dec fisttpl jae sbb add fs add imul mov lock sub adc sbb inc test int lret lea xchg cmp push push push sarl xor pop or aam and and mov lods std inc sub sub xor mov (bad) imul aad (bad) cmp lock cwtl jno push arpl outsl mov hlt mov mov in mov or xor les cmpsl cmp xchg xchg stos rol inc scas pusha stos mov jae lods mov xchg jmp sub xlat pop sub pop sub and ja sub sub out shrb fs and cmp aas add pop lret sti cli (bad) fisttp add inc cld push pop pop sbb push aas xor pop xor pusha arpl cmp xchg in repz (bad) mov sarl jp xchg jle jg sub push or dec out adc lock pop push sub pop mov xor (bad) dec sbb (bad) sub insl (bad) jmp pop je dec dec xor sarl (bad) imul out lds insl stc xchg jge cwtl cwtl cltd int data16 arpl push and push popa xor loop sub mov stos xchg clc sti cld jge pop ja cmp lret dec ss movsl sarb mov sub cmpl pop sbb mov xchg mov fstpt xchg sbb mov mov lds aad xchg (bad) (bad) pop xchg jno push bound cmc jle in push adc dec and dec xchg xlat insb sub push imul mov cltd adc shlb mov sbb xor add je cli or mov enter cmpsl test push push or add push xlat mov push div pop (bad) lods dec movq shrb mov je push mov mov in push push push jle or add mov iretw add jle push gs (bad) pusha xchg jmp sbb (bad) (bad) mov adc aaa and sahf cmc mov sti adc popa add xchg pop sahf cmp push push aaa ss mov or (bad) (bad) pop mov addb mov mov inc fs or fisubr jp popa outsl push cs jge (bad) fs (bad) std mov xchg or femms seto ja adc in xchg in fldt pop jne outsl xor cmp lock and test mov jne push mov shlb jmp push push pop roll pop pop rcrl cmpsb maxps stos pop mov pop out test rep mov mov cmp dec out inc shl out mov xchg in iret xchg dec sahf push dec (bad) or xchg xchg insb loope imul out fs jecxz in mov sub cltd adc cli cwtl dec mov add push nop cli add xlat stos jge (bad) xchg and int3 xor sarb cmp and stos shll push and ret rcl jbe leave aaa inc and enter cs test push jmp test add cli popa or mulps and stos pop adc in sbb pop dec lahf push push fisubrl xchg xchg add cmp inc push lret sahf push mov and cmpb mov mov mov mov inc push ljmp mov mov lcall pop push mov notl dec dec cmpsb loopne pushl jg xor aad out xchg int mov xchg in jnp aas imul adc jg push in addr16 out mov in mov sub lea mov sub pop cmp dec ss xchg dec cmp dec jp iret rcrb push test pop cmpsl and test mov jnp and fucom xlat (bad) jae test xor xor ss mov jnp pop push xchg dec icebp or or out adc adc xchg sbb sbb (bad) ficompl adc ds or mov xchg jp idivl (bad) cli xorb and cmpsb fstl rclb pop pop or cli daa pop mov sub push pop mov mov pop inc mov mov cmp addb js or orl (bad) nop xchg les imul pop fcompl sti imul imul adc push out lock jno sbb add sbb fldl ds enter lret int3 fwait es push sub fcmovu fcompl fwait xor and and mov adc pop push js ss int insl mov ss dec insb rorl into rol icebp xor lea mov test iret jge std push insl jp shr rcl jbe icebp inc add pop outsl (bad) xorps sar outsb add aas addr16 push out shr in jle jl dec out ja push push divl pushf out push xor sub jmp add and dec out mov cld test jnp xchg push sarl sbb dec and cmp mov (bad) pop rclb cmpsl movsl movsb xlat and pop pop cld std clc mulb dec imulb and xor inc mov js ljmp mov and add test into jl dec adcb xchg xchg mov lock ficompl sbb sbb xor adc adc mov in xor pop mov loopne je add sub xchg xchg dec or cmpsb aam cmp sub pop and dec and arpl adc pop and mov xor mov cmp cmp std sar cmp sti jl pop in into lock dec fwait push in xchg call in adc and adc xor pop outsl nop add inc sbb xor (bad) ret adc xor add stos lock cmp push push test pop mov loopne pop sub pop daa popa xchg and lods sti inc lods cmp dec call in dec sub in gs call shrb dec jbe rcl or popf (bad) jp push push adc popf ret xchg fisubr das mov or popa mov pushw mov je cld jno or pop push (bad) or pop add cwtl popf popf lahf dec and into int dec mov push mov (bad) and mov jl inc cmp xor or out mov dec xorps add subl or sarb (bad) pop xchg ljmp mov loope aaa mov repnz lcall std xchg xchg ss dec loop mov sub dec mov xchg ret lods push adc adc inc dec dec lret cmovg add out xor mov xlat movsl fstpl and cmpsl test ret in scas (bad) movsb aad mov or inc xor js aaa loop add mov loop xchg jb fprem mov dec lret shrb arpl outsl arpl arpl out shr in in sbb loopne push mov nop clc xlat mov push pop rol stos cmp or inc push xchg mov (bad) xchg cmpl stos fwait dec leave and and mov sub fisttpl gs xor jle jns push sbb aas push jmp push push idivl mov or adc and pop sbb daa mov cwtl loop dec aaa lea notl xchg cmp and int adc jp xchg fcmovbe cmpb ret mov dec dec sbb inc adc call fistp sub push push push sti movb call inc inc aas jns lds inc lock mov mov xchg loope call fwait pushf les xchg xlat lea in jmp adc cwtl dec mov add stos test cmc lods jnp les xor iret cmp sub push adc mov lahf (bad) fstl fdivrs lret lods stos fnop jno ret rcl jbe (bad) lret lret data16 pusha mov arpl push push push add xchg push or inc cli ret jmp pop cltd jmp push xor xor andb xchg out in mov imull js cli adc aas jg test int lret lea mov pop and mov dec aad mov dec test icebp inc lods and lock loop ficomp fnop mov mov test jne jl dec adcl repnz cwtl iret jb pop bound mov mov mov std mov femms jns ja cli jb (bad) leave xchg lods cltd mov ret les mov ss ret push cmpsb sarb out xor and fsubl lods movsb aam je jns dec mov mull fs imul mov negl pop aas repnz cltd sub stos pop adc sbb sbb pop and out out movsl cltd cwtl aas cmp push sbb daa outsl stc dec push lret decl (bad) xor scas repz cs xlat mov sbb pop fidivl push push fcmovnu cwtl cltd movsl movsb loop cmp mov sub addr16 iret out scas loopne (bad) jb dec cmp jnp inc inc in shrb inc jnp add jecxz inc pop pop (bad) jns pop imul pop pop gs popa dec gs addr16 out out sbb ljmp div adc push cmpsb cltd inc xor ficoml xor ret xchg add sub fisttpl fidivr adc outsb sub das xor pop mov pop jne cmp cmp dec mov adc push sahf and xchg and sub out cltd cwtl add xchg mov cmp (bad) mov fisttpll or daa (bad) mov or lahf (bad) sbb in ljmp mov pop rol ljmp (bad) or mov loopne add sbb imul call pop sbb (bad) lock cmp or jbe sbb mov xchg cmc mov dec xor ret push cmp mov fwait xor pop in push aad xorb jge cltd push fnop inc popf dec push jnp (bad) mov xor mov repnz jle dec add cmpsl xchg stc clc pusha lds or icebp fbstp sub and pop sbb pusha pop pop pop (bad) push insb push push push leave cmp lock je js inc aas lds jo pop inc inc inc jl psllw dec inc enter push push push pop fcompl pop pop arpl sbb mov cmpsl test xlat cmpsl mov mov push (bad) hlt mov push in cli mov jle or mov adc outsl outsb lret push push loopne (bad) jo adc lcall mov insl push push adc jecxz push xchg mov push mov test insl dec cmp add jecxz stos mov lahf fwait lods imul pop sub adc pop es int xor jnp in sub aam les fistpl leave mov inc test pop test or dec pop pop or rcrl gs mov inc scas pop sbb push xchg jge fldt fs jnp shll push jno xlat es pop loop mov pop sbb jp subl inc pop push cs ret sbb adc pop ret ds cmp pop or fcomps jmp div into sbb sbb icebp pop out pop xchg dec dec fsubp fnop mov mov cmp adc out cmp cmp fnstenv (bad) nop jns add (bad) idiv fcomps stos cwtl pop stos jecxz mov pop bound mov lock arpl or lods add mov xchg xchg scas jnp js cwtl outsl test pop inc sub mov lea or and sbb jle inc mov xchg pop jl imul dec push ds jns ss popa ds imul sub pop jne shll insb sbb mov jle jno iret js,pt jp jl insb xorb or scas mov adc push xor lods daa push add add push mov pop xchg xlat sbb inc push push and mov xorb xor jmp aad decb jbe and aam nop jns sub sbb insl xchg sbb sahf loopne mov insl jle sbb mov xchg sbb hlt idiv jp imull ds sub inc xchg ret lahf and pop xchg sub fcmovu fisttpll push jl out lods cmp sub lods push and inc aas mov and dec aas mov sbb push pop inc add cmc cmp push mov add jg inc lock push jmp jne cmove sub imul sub das xchg mov (bad) andl adc adc scas or cmp and push stc and xlat mov push push repnz test pop insb inc dec dec out loope dec xor jmp test aad (bad) mov daa jg xlat mov repnz push es rcr outsb cmp out outsl cmpsb dec addl mov jmp test bound notb xchg mov mov cmp dec ss or dec cmp lea sub push push mov pushf fisttpll fdivrl jo lods mov imul icebp sub clc (bad) das add je jmp (bad) stc clc push push push sub int fwait std jp mov push call jmp cmp ss mov push sahf push pop arpl pop cmp xor jae lret xor xchg test addl mov sbb pop ret mov cmp push push add jae sbb mov mov cltd xchg ficomp in movsl sarb bound stc pop xchg dec fnsave push icebp mov mov cmp test inc cld test arpl push jo sbb ss rcrl mov scas add sbb mov movsl jp mov add or ja idivb sub push cmp inc xor rolb adcb dec pop and xchg test jp jl (bad) pop in jle pop push pop cwtl frstor xchg xor dec or rcrb push (bad) jmp leave pop pop fs cli xchg adc into inc mov mov insb push xchg xchg ljmp jbe enter xchg push fldl dec sarb dec dec sbb scas scas adc pop add lahf fcompl mov jmp pop pop and sub xor jno test inc inc mov add jbe jp mov add xchg js jo cltd ficomp push adc rcrl adc sbb out out insb into push adc adc mov add or stc sti cmp or ds or xor inc pop push out sub pop adc fstps and imul aam fs int3 mov mov ds dec mov xchg clc (bad) neg inc lret mov out out lahf pop add rcll xchg pop cmp in xchg fwait lcall xor xchg nop test divl xchg mov mov (bad) int3 cs push push xchg (bad) cmp test xchg fdivs stos pop pop out sub andl lods lods scas scas ja movb dec pusha icebp xor les inc aad lret add jb jbe movl fs insb imul pop sbb outsb arpl inc loopne and sbb mov bound femms mov jb or add sub add mov lock popf (bad) (bad) subl mov aam mov mov (bad) int lods lods stos xor and aas rcll fidivr xlat add sub sub das ljmp pop enter (bad) dec ss xor inc jl,pt cmp addb js jbe into je mov push lds jmp adc dec push push sbb daa mov adc jge mov or stos jno ds sub movsl cmp scas (bad) cmp pop xor jbe sub (bad) (bad) es dec and push fstp dec and (bad) aam mov inc inc lret lret je cmp outsb rorl clc dec add addr16 negl ds hlt inc psubb jmp (bad) in jp in hlt jmp pop lahf mov pop xchg out test jb icebp addl adc dec call je mov (bad) mov mov lds ds ficompl pop pop xchg ss in movsl dec (bad) (bad) test push out pop stos rorl ja jge sti jecxz in faddl punpckhwd ljmp (bad) lret (bad) out push (bad) adc imul mov adc stos or ss jno add mov leave cmp cmp inc cmp iret xchg xchg lods sub mov fldcw and push mov outsl daa rclb shrl sub add jns mov pusha std push in sub bound popa jg xchg dec js dec jg jno pop test jbe js and cmp xor adc sbb cli xor cs and cmp leave add sbb xor into add mov and sahf or pop popl xor sub insb lds in repnz lret in aam loope sarb in imul lret call gs jecxz in add int3 pop cmc sbb les imul clc push movsl aaa test movsbl add mov xchg jl xor je and dec mov scas inc xchg and and popf sub in loopne jb lods pusha fisubrl movsl pusha fimull dec lret pusha int3 fbld stc xor pop mov pop (bad) push mov mov mov inc inc js dec jg jno pop xchg inc jbe inc jne pop jmp out cmp das in pop wbinvd stc xor sub sbb (bad) cmp sbb cmp sbb jno das push and or sub fstps or sbb cmp ret jno lret (bad) into enter iret and push cmc les xchg ds adc aaa cli pop fld1 (bad) or pop shl repz add fdiv sbb dec into std stc call fidivr testb mov mov xchg js outsl xchg jl push sahf jo pop lcall imul lahf and mov xchg lea test int3 jnp dec inc scas insl fstps jmp movsb imul mov adc dec pop mov gs pop push pop div cmc push data16 xchg dec jl jle lahf inc jecxz loope or add loope cltd cwtl xchg xor add in or push sub (bad) std sbb adc es mov sub leave and cmp (bad) cmp fsubrs mov rol das and push push push hlt mov aad cmp dec inc inc jecxz enter hlt jle jl out cmc loope sbb je jb in negl out repz adc gs pop clc push push lahf sbb ret scas outsl mov addr16 xchg jnp or jg mov add test ds cmp lods inc mov test movsl push mov xchg gs lea xchg inc stos popa xchg jle dec dec mov inc imul outsb push push pop mov xchg inc (bad) pop imul orl xchg and jne pop (bad) dec dec jae jge push test add and cmp out (bad) pop sti es decl mov sbb xor inc sub lds sbb push push add (bad) or lret out adc (bad) dec adcl in in out ds ljmp outsb int3 roll in mov mov jl iret (bad) js stos xchg xchg cmpsb push adc sbb lahf mov xchg mov call sub scas xor mov sub add add test mov and (bad) iret shl adc fsts lahf xor ja dec es dec mov mov das xor pop bound movsb dec jnp aam or add add or jns psubb jo jmp out fsubl dec mull xor cmpsb adc (bad) gs insl outsb ss sbb mov cmp push sub sub adc mov ds test and mov mov cmpsl test inc mov push push sub xchg in out ja cmp call ljmp outsl xorl rcll cmp cmp sahf loopne bound call adc sub jmp cs jae stc cli sti stos jo push test mov les xor mov cmpsb xchg aad aas out and and push addr16 js iret dec rcl lods jmp mov inc pusha outsl shll mov sub pop loopne data16 repz adc inc jns out sbb loope pushf aaa mov or imul test (bad) mov dec adc pop jg test adc movb mov pop sbb stos and mov pop pop and stc xchg push dec rep in pop xor in in in rcrl mov in jns js rorl jp or nop xchg xchg (bad) cld adc test pusha mov xchg mov adc rorl or jnp or push xchg decb sub cmp inc add inc mov dec xor mov pop lods xchg jmp mov adc fldcw into cmpsl inc (bad) aad inc sub rolb fldl mov push ds (bad) aaa pop decb push fs hlt repz lock es pop pop lock jbe jecxz fisubl mov ds xor cmp (bad) and mov (bad) cmp test push sbb lods pop mov (bad) mov add mov add mov pop mov mov rorl pop or mov mov mov cmp sbb push incl in js mov mov (bad) imull repz test or stos out pop fsubr adc push or aaa mov mov inc das aam mov xor movsb fidivrl or pop pop rcrb shlb dec push pop push movsl ror mov outsl outsb mov cmp ljmp div int3 or cli pop push adc pop sbb jb push push dec mov aas loop sbb das outsl es mov sti push cmp cmc cmp mov or lea pop add test mov bound mov push incb (bad) push push lds pop inc faddl cmp cmp xchg push mov int3 jbe dec stc mov js lods insb imul arpl fcomps fcomps push imul out xchg adc lcall pushf notl mov call cmp fcoml xor mov adc sbb sti jbe jo mov data16 xchg pushf pop outsl das fldenvs imul jge push ds jmp test cmp loope jl jle dec sub inc sub pop jno pop xor jbe rcrl cmp or inc (bad) push push push pusha loope or lods test push push mov jecxz sbb lds aaa punpcklwd cmp es insl xchg jno and pop jno sub adc inc inc adc mov dec mov rcll lods push pop mov xor popa cld jecxz data16 sub cli (bad) scas and inc addl int3 dec push mov inc inc add or imul mov adc xchg xchg xchg (bad) iret icebp (bad) enter inc imul lock adc or jb stc stc cli xchg (bad) movsl jge cmp mov pushl (bad) movsb xor xchg dec adc mov xor js data16 aaa pop push rcl imul cmp mov sub add imul add or jae adc in or cmpsl je jecxz fist xor addr16 lahf (bad) loope xchg xchg ss aaa mov sbb xchg aam cmpsb or aaa pop adc adc mov pop sbb pop and mov add cld push hlt int3 inc cld out inc sub mov mov pop xlat fmuls loopne jnp (bad) in mov xor rorl dec fcmovnu jo imul jo repz enter ficompl lods in jo push adc adc (bad) lret cmc push jo push add lret mov sub scas cmp dec push mov mov sub ja es stos fmul mov fcmovnu fsts or les idivb pop out mov pop dec jl xlat ret cld pop pop add or addr16 out adc push in out dec pop sbb cmc mov lahf sahf cmp out popf or xor xchg fs cli aaa (bad) icebp mov jo xchg inc inc addl xorl push scas addr16 mov enter add push cmpsl sub mov or stc std das inc sti fs and std cs push mov (bad) dec loop cmp dec leave cld mov fistpll or push jp or nop xchg xchg rol sbb cwtl cltd pop lahf mov push sbb or (bad) jg lods out adc js nop stos or jb lods adc xchg add inc push xlat inc add mov xchg cwtl sarb mov fnstenv and int dec xlat (bad) inc sub jge add fnstsw mov (bad) (bad) push (bad) std push in out clc negl (bad) pop repnz lock cli movb xchg fmull inc sub inc pop inc jmp aas mov cmp loope cmp xchg mov xor je mov sbb pushf cmp sbb test lods fsts push aad push imul pop xor pop sarl pushf mov loop iret ret hlt mov push cltd aam inc jp,pt (bad) mov or add dec out xchg xchg xchg jl repz aad (bad) sbb xchg movsl mov (bad) out jmp jne scas lock movsb fwait pop (bad) mov adc mov test test add cmpsl into xor cltd sub fcomp and fnop mov loop ja inc sub inc pop dec jo fildl ss or mov push add jg or push cmp push adc jmp push push decl sbb jbe dec ja sbb arpl imul pop jo,pn inc inc je cmc mov dec mov sub sub inc inc scas add imul sub xor ss in fchs mov cmpsl sti inc pop test mov fidiv mov mov test mov mov mov cmp rcll pop mov fwait pop pop (bad) lods cmp dec sahf test add mov or mov incb cmc movsl cmp aaa ss pmulhuw push (bad) (bad) (bad) adc es mov dec inc fstp dec and and sbb data16 mov lret and mov push pushl stc dec add cmc popa or push lock es pop pop lock jecxz fiaddl cmp out imul aaa arpl add lea lock mov clc mov icebp inc inc inc adc dec xor dec mov movsl and scas scas cmp adc test shlb mov sub push cli ret xchg xlat out scas dec (bad) pop adc dec dec xor movsl xor dec cmp rcl push out jp fimul push fucom xchg (bad) insl cmpsb cld outsl fist arpl hlt sahf mov xlat mov lods out jle adc adc popf or clc adc add add cmp scas cmp test xor cmp pop mov xorb mov mov (bad) je fnsave es xlat (bad) pop ffreep (bad) jge iret mov and imulb bound mov (bad) out dec push push outsb out or or jae icebp lock dec lods dec outsl push pop mov nop arpl or addr16 fisttp enter xor and and xchg jle ror notl adc mov dec daa dec mov cmp adc movsl outsb xor pop pop dec mov bound repnz bnd mov mov push int mov mov jmp jo lret mov (bad) nop adc push call loopne popf jbe int loop in out test ret out lock xor mov xchg stc nop sti xchg pop test (bad) lds mov into daa dec cld rcl out push adc cltd sbb sub and cmpsb or sub ljmp xor pop jno jbe rcll cmp push inc (bad) outsl push insl or ja or adc aam rcrb pop fidivl jbe jbe sbb bound pop test lods add fmull aaa ja push push jnp dec mov subb sub and push bound popa xchg xlat xchg pop pop fwait xor pop xor dec cmpsb mov outsb cmpsl in outsb (bad) fcmovne lock mov jp aas sar push (bad) addl loop lea pushf adc xchg xchg cwtl lret fwait ret enter mov jl cmpsl out jnp adc data16 xor ja and notl mov ja cmp inc add lahf xor shrd sub push add int3 pop add dec and sub js cmpsl sbb iret mov and inc aas outsl push sub cmp std mov xchg pop (bad) sarb or inc stc add adc in lahf (bad) pop jecxz insl insb out cltd cwtl xchg aaa xor sub push push xor xchg xchg ret lods add dec dec mov and sub hlt push mov sahf lods add movsl cmpsb daa and pop out scas loopne pop pop mov mov mov leave subl mov gs out outsl outsb adc cmpsb push xlat mov lret adc mov mov outsb fwait out orb pop cli cmpsl or scas jge cmc jg std (bad) call lds lock lahf xor movsl mov in or and (bad) push stos data16 bnd (bad) test xlat mov inc data16 (bad) push mov je add push sti xor cld inc or cmp icebp test js jle inc call sbb jge,pt sahf or xor insb test (bad) mov jae je add xor xchg mov addl mov cmp lods add or (bad) dec and pop pop and imul lock in jno mov mov jl sti mov xorb inc fidivr jb rcll xchg std cltd iret and jecxz sahf leave or enter out in mov out insb xor (bad) xor cli xchg stc xchg sahf addb mov enter int3 int rcpps (bad) mov popf fnsave push or and dec es les sub push add xor repnz sub push cmp sbb sub push dec iret addr16 adc xchg push adc sbb fcompl or pusha push scas call inc outsb outsl sbb jbe insl divl js push push jl dec mov xchg int leave movsl (bad) dec dec dec sbb push push push mov xor out loopne add pop out cmpsl and pop or mov or adc mov add jg jge and cmp nop jne pop mov arpl imul bound mov or mov sbb adc mov mov je inc stos lods push xor lods (bad) mov ss cmp rcl sub mov pop andl mov jp jl int3 ja jns ret and dec ds lods dec jnp ret or test std mov pop pop (bad) incb mov or into jbe jmp xchg out sbb pushf cmp xchg pop and (bad) cli cmp jo,pn inc cli xor test adc aas jg jbe push mov mov iret int dec mov fimull test stc fistpl pop mov dec mov pop pop sub push sub and pop xor pop int3 roll jecxz inc mov lea sbb xchg jae xlat or xchg popf adc repnz lock loop jle sbb (bad) jmp push adc popf or pop push nop sti xchg cld test mov sub mov mov das pushf (bad) aas mov sbb push dec fisubr rorb shrl ja pop xor jge ret ret mov sti xor inc or sub icebp test xchg xlat xor (bad) arpl dec repnz pop loop inc lahf adc mov adc sbb and test mov in mov push or add add or repnz mov jmp pop fst std inc addr16 push dec call faddl inc mov or jl sarl fsubs call sbb jge fbld sbb jne stc pop push and shufps scas lock mov inc icebp lea xchg sub (bad) lds mov mov repz xlat pop sbb in pushf (bad) jnp int3 mov fcom jo jmp insl jne aad icebp mov fistl cmp jle (bad) ja in ret (bad) clc notl mov add inc rcll push xchg push cmp lcall out scas in (bad) xchg xchg xchg mov jo mov les (bad) pop mov mov add add or aam scas stos stos push pop rcrl mov sub bound push stos jecxz jmp dec dec nop aad cmp cmp inc inc inc cli fwait ror inc push push js js leave (bad) ret dec or outsl outsb sbb mov push adc gs fidivrl sbb mov in jecxz outsb or adc icebp icebp repnz pop push jae fsubrs jp cmp cmp (bad) cmovl xor inc xor adc sub pop sub (bad) fnsave inc loope rcl aad cmpsb mov into lret lret cmp std mov dec mov dec ret addb neg stos ljmp (bad) aad inc cmpsl call lret mov xchg (bad) mov aas add les dec cs inc lret out out in push int3 adc in jecxz push xchg in out lcall lods jmp jno clc cmp test xor mov mov mov mov xor fsts aad ret pop lcall movsb in sub push push jl and jbe repz dec dec dec in popf sarb inc inc jg or mov jbe dec mov insb insb imul sarl popa iret test fisub mov sbb call imul rcll jge add add (bad) decl cmp dec test lcall cltd push adc es sbb insl lods stos or scas pop rcl rorl mov enter mov je mov mov cli push rorb inc cltd (bad) xchg xchg ljmp fcompl popa bound out mov xchg das dec cmp mov mov cmpl sarl dec dec mov xlat scas scas lods push sbb sbb mov data16 add pop data16 test insb sub push push dec mov out jb pop inc inc inc fcomi xor sub xchg jb (bad) fcomps inc push adc push push arpl daa push push sbb and adc adc jo ja or or clc stc mov jns add aas inc jle inc dec inc (bad) ss xor ficom aad push pop es sbb add sub scas repz shrl xor hlt mov enter push imul (bad) (bad) std push sbb push clc jge int call pop lahf pop jl xchg push sbb lahf repz loope cmp jmp loope cwtl cwtl xchg and jmp mov push mov lea fs mov (bad) or mov scas imul cmpsl cmpsb movsl pop fwait sbb and xchg out test das mov ja xchg je mov mov scas jg jge inc shll jae mov imul (bad) popa pusha pop movsb shll lods and pop push adc sub or out jg,pt add add rorb cmp add ljmp cs adc and mov fcmovnu fsts es in test xorl xor mov mov ds test cld sti add popl repnz addps jmp adc ficompl addr16 mov xchg insb sbb imull mov jp stc and addl mov mov movl lods lods stos and fbstp mov pop xchg fs pop pop push cmpsb das sub dec mov std cmp inc inc stc lcall jp (bad) mov jno outsl xchg ficoml rcll mov fcomps lahf loopne cmpsb and insl ret jmp out sub repnz mov int test xchg add lret or sbb nop jb dec std push cltd jne fbld imul add outsl fwait fs push or je dec lret inc or jge jb js stc jp and add inc (bad) or xchg dec lret adc aam fstl push xchg pop fstpl cmp jmp daa mov inc push das scas sub loopne dec push test test mov movsb jns jnp mov cmp insl mov jmp push push pop sahf pop stos mov insl lahf addr16 jmp popa jle in push stos stos lods outsb inc or dec dec cmp xor ds mov jge push sarl mov jne test iret outsl outsb sbb push lcall sbb outsb loopne in mov push adc sar xlat icebp repnz ja hlt idiv cld jle cld std test cmp dec ds dec lds iret into iret pop push jb sub rcll (bad) mov or fsubrl sub (bad) hlt (bad) ror mov daa pop cmc addr16 pop push nop aad (bad) mov (bad) std imul pop test pop lock inc inc jge inc hlt jecxz repz loope or jmp cmp and adc ficomp test inc iret or adc xchg jnp sbb and sbb stos add aas test sbb rolb pop je idiv rcrl inc push incb orb dec fdivp mov mov mov aam out xor gs fs jo stc lcall cwtl lcall (bad) outsl test outsb insl jge adc outsb push out mov jno clc js sti jno push adc jbe scas nop dec inc fcmovnb (bad) and loopne xor xor ficom rcl fcomp push pop int3 (bad) fnop iret inc (bad) mov aad xor xor (bad) leave enter bound add add add mov js addr16 js adc push sbb iret jbe loope loopne and mov es in arpl divb sub sub sbb or je mov or mov aas in jmp or je pop pop lret in icebp push jns ret js out scas cmp mov mov aaa dec lea shr aas push xor and sub (bad) test cmp mov out popa inc jnp cmp dec push mov sti stos (bad) in push sarb into dec bound pop xor repnz mull add sub pop dec fdivl lock add inc (bad) cmp cmpsb or dec push push fadd push aam push out adc push dec and push pop fisubrl rcr ret insl mov mov sub sub sbb mov lret jns xchg cmp ljmp push or and adc mov mov out jge cmpsl fcoml jno or jg mov (bad) outsb popa mov (bad) xor (bad) std add push push pop loope loopne repnz out or inc decl repnz dec ficompl sub xor and loop xchg test mov and sub xchg mov cmpb push scas jmp mov xchg mov or mov push push xchg popa sbb push add inc sub push push cli cmp pop movsb out fnstsw inc lret push mov or push jae or (bad) jge push adc insb (bad) (bad) sbb out pmulhuw out pop pushf loop cltd stc adc out or jl jp jmp mov jp into inc add (bad) sahf and lahf xchg cmp sub test xchg fnsave xlat fstp (bad) mov and int3 inc sub cmp insl push cld sti xchg pop orl clc call jmp repz loope lahf adc call xchg xchg jmp sbb outsl mov outsb mov aad addl pop xor xchg inc dec dec sbb scas fimull inc push xor mov mov pop div pop xchg dec lret stos push push sub push fistl mov dec ds dec loope iret dec push nop push inc jg aam mov jbe jnp nop fs enter jge fwait addr16 xchg ja pusha mov mov mov ja icebp repnz mov std jae test cmp test xor xor cmpl (bad) bound push sahf and aam jp scas rcl rcrb bound (bad) push xor and mov hlt lods jae cmpsl jb fcmovu dec sub ret adc rcl pop cmp or enter jp imul mov idivb lret (bad) xchg and mov jmp sbb push adc and or or xchg nop sbb push (bad) cmp push cmp jl adc push sbb mov add xchg pop push pushf ds xor fstpl mov loopne pop pop bound insb fpatan lcall stos dec dec ds out cmp mov jns jnp pop (bad) or jmp xlat cwtl insb loope vunpckhps xchg lcall pop sbb data16 popa lods push outsb sub (bad) into cmc or mov adc add pop ds cmp cmp xor lret fist sub sub and xchg fidiv or fmulp mov aam jg mov idivl mov popa mov pusha std push in sub jge cmc jle in or sbb sbb sbb dec dec or jno lea je xchg loope loope mov mov popf icebp ds and (bad) in movb push mov pop (bad) adc push and mov inc mov mov (bad) test pop fstl (bad) mov (bad) sub mov mov push cmp fcmovnu add xchg mov jbe mov xchg lds jb push mov jbe cmc push sbb in push adc xchg mov cmpsl sbb jns fcoml icebp xor mov mov movsb (bad) sub sub and pop sbb sub jbe inc cmp aad call into int dec int pop cmp sub jmp stc jb loope in repnz lret add sbb inc (bad) es in fmuls popf ljmp stos pop js cmp mov sahf test sub lods inc push mov movsb pop push mov fcoms stos rcll or sub pop pop aam cmc dec inc mov push inc mov jno pop stos sarl inc jg (bad) shrb js or fs jo rol (bad) subl arpl int ljmp sbb mov adc je in pop push (bad) adc ds and ss daa or sub and xor mov cmp ljmp (bad) aaa imul sub ret push jmp stc jb pop loop push repnz mov cmp inc std inc out out dec dec hlt ss ja adc andb xchg out arpl mov xor repz xchg xchg mov dec mov mov int3 xchg fistl mov shld push mov mov push inc mov push push cs xor pop mov call jg (bad) xchg fldl inc repz fldenv imul outsb fstl gs pop imul mov or dec pop adc pop movsl cmpsb mov xchg std test ret les lret enter int3 int cld or (bad) aas pop das and xchg and and gs ja mov shrl sti or or dec add pusha pmulhuw out dec mov ljmp out cmc sbb insb lahf sub lcall or jle cmp bnd xor testb jne int ds iret sub imul push arpl sub and mov sar cmc dec adc push daa mov aas mov ss call hlt mov jl pop add (bad) mov xchg sbb push rcrl sbb stos in xchg adc push dec out movsb out test xor icebp movsb cmpsb mov add cmp test add cmp push xchg xchg inc sub fcmovbe inc inc inc inc dec dec dec dec dec dec dec dec mov mov mov mov mov mov mov cmpsl test stos stos lods lods scas scas nop xchg xchg xchg xchg xchg xchg xchg cwtl cltd lcall addl mov repnz cmc div clc stc cli sti cld std (bad) jmp loope jecxz jne ja jns jnp jge jg inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop pop pop pop mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp sub cmp and lods and sub das xor cmp xor xor cmp ds add xchg mov or or add pop sbb sbb pusha loope arpl imull js insl insl dec pushl jb je jbe js sbb jge jg inc daa inc and inc and dec es and push cmp push sub pop cs sub mov shrb scas scas mov repz mov mov mov stc mov into test xchg mov mov (bad) rorl xchg lds lret lahf mov in out jmp ja dec into repnz cmc div fdivrl lret idiv cli test lret int test xlat rcl aam (bad) xlat fcomp fcmovu (bad) (bad) and and and dec daa pop sub inc sub sbb inc xor cmp cmp sbb jae pop add add pop or pusha pcmpeqb jge arpl dec sbb jno pop popa adc or imul adc jne ja jns jnp jge jg inc addr16 aaa inc sbb dec cmp dec imul ja daa push push push pop pop jg das pop add mov aad test xchg mov out std in repnz mov mul movsb jecxz cmc in (bad) stos mov call (bad) movsl out lret repz hlt stos (bad) movsb mov sahf mov scas mov scas sbb xchg lds nop mov mov cltd cli mov test iret rcl xchg out mov test mov fist push and push daa sbb dec sub pop das dec xor aaa dec cmp push cmp insl add or or pop adc and sbb jl sbb arpl imul outsl jno,pt jae jne ja jns jnp jge jg inc sub inc push inc das dec sbb dec dec dec push push cmp and xor sub mov cmpsl test nop stos lods lods xchg lahf mov xchg mov mov mov mov fstpt out out jmp call vpsrld ror (bad) cli call jmp mov mov xchg in mov repz cmc xchg (bad) (bad) stc popf sti lods std mov test lds lret test sarl mov mov repnz and dec pop jl inc dec push push inc inc push je push dec pop dec dec cmp insb dec insb dec jbe jo jb jnp gs arpl jge jle adc jg push jl imul or push and insb insl xor and add or sbb adc adc xor inc dec dec sbb and cmp xor and xor aas cmp pop add loope into int3 mov fcomp fxch ret (bad) ror clc ret dec (bad) ljmp into loope jmp (bad) (bad) out cmc (bad) sti loope loopne sti aad div out in lahf loopne mov cmpl (bad) mov (bad) cmc lods subb stos xchg mov mov loop leave hlt lret int3 int iret rcl lock aad mov lods test push dec inc dec inc jp inc pop pop inc inc inc sub inc pop inc push imul cmp insb bound pop jno gs or popa jge jbe jge pusha fs sbb jnp jo pusha popa inc arpl cmp imul outsl add jae jne ja jns jnp jge jg inc push inc and inc sub dec and dec or push push cmp push xor pop jl sbb mov cmpsb cmpsl test (bad) stos fildll (bad) mov mov mov mov sahf mov lock xchg mov mov (bad) call xchg clc xchg loop les cld lahf shl jecxz in out jmp lret out xor repz stos divl xchg ljmp lds lret int3 int iret mov aad xlat pushf fnstcw fist dec and jp sub dec sub adc jo push aaa dec cmp cmp jge outsl add imul or jl jno jne jnp js sbb push sbb outsb pop or pop arpl adc imul outsl sub xor jne ja jns jnp jge jg inc aaa inc aaa inc inc inc dec dec or dec aaa push ds xor push sbb pop cs xor mov call stos les fbstp mov mov iret and ljmp (bad) fisttpll out std xchg cwtl cltd fstps (bad) loope jecxz in out jmp mov repz cmc cwtl neg stc mov pushl lds mov sarl xlat mov fnstsw and inc daa inc sub dec sub inc xor inc aaa dec cmp dec cmp inc add pop imul or vmwrite adc jne popa sbb sbb insb pop punpcklwd sbb imul pop jno jae jne ja jns jnp jge jg inc xor inc cmp dec dec dec sbb push and xor pop xor pop sbb mov (bad) test (bad) scas ret mov mov mov mov in mov loope hlt xchg mov mov (bad) ljmp xchg stc xchg out cltd cmc fwait repnz ret loope jecxz in out jmp mov repz notl std mov ret mov mov lods leave mov iret out loop xchg aad xlat mov lods fldt and and inc sub pop sub xor xor jne pop cmp pop cmp insb add inc pop jp or jle dec adc jge bound push jae jae push pop pusha popa and punpckhwd insl xor jno jae jne ja jns jnp jge jg inc adc inc or dec sub dec cmp push aas push push push pop push sub pop cmp pop aad iret mov out fisubrl (bad) mov mov mov mov mov sahf mov cld test xchg mov mov (bad) cli (bad) icebp xchg xchg xchg xchg xchg lret cltd ljmp loope jecxz in out jmp (bad) out (bad) icebp xchg repz mov sti mov lahf jmp rcll stos leave cmpsb lret test rorl xlat mov test mov lods fild and dec and jns inc sub inc xor pop aaa dec cmp dec cmp jbe insl add jge dec and es sub sub cs xor jo pop ss cmp push cmp ds add add push bound jle outsb or push movups push adc push jns imul sbb push aas pusha sub fs cmp push insb or jo jb je jbe js jp jl jle inc xor inc sub dec pop dec and push xor push xor pop pop pop push pop aaa mov enter fsubrl (bad) mov mov mov mov mov lret mov out test xchg mov mov mov xchg call sti out lock xchg pushf mov lcall xchg test mov ret les mov rolb xchg mov nop scas mov and push dec push imul inc pop das xor inc pop inc jne push dec pop insl pop dec push dec add insb add push jae jle push jg push dec adc jl je imul sbb push jo pop bound cmp push or jo jb je jbe js jp jl jle inc cs xor xor dec and push xor aas push cmp pop pop pop xor das pop xor mulb fldcw mov mov mov mov cwtl mov fildl mov mov mov nop stos xchg mov cwtl cltd lcall mov mov and call lahf out mov lods repnz clc mov xchg cld mov nop shlb mov cmpsl lret test mov aam (bad) neg pushf fisubl and push and es sub jg push cs xor xor ss dec cmp ds add add dec inc dec dec pop das jne jno insl bound dec imul dec inc push or adc sbb sbb pop pop push adc or push push adc or sub sub sub sbb cmp or aaa xor mov mov stos lods (bad) (bad) lea fcmovnbe fcmovu mov rcr repnz repnz loope hlt in sti in loope mov out out std std lret out jmp jecxz shl call (bad) out mov cwtl repnz hlt xchg fprem xchg cli mov xchg (bad) xchg rol ret (bad) loopne mov xchg lret mov shlb fsubrs fisubr dec es sub inc sub cs xor xor inc ss cmp dec cmp ds add push bound imul jle and adc popa push pop sbb jb jp jno push bound push adc jb je jbe js jp jl jle inc xor inc imul xor dec dec dec dec push je and sbb pop and xor stc cmpsb loope shrb mov mov mov mov mov fstpt out testb mov mov xchg leave xchg ficompl hlt sahf repz loop in out call mov mov sahf repnz test cli xchg cld fwait (bad) xchg shrb fwait enter int3 int iret (bad) hlt shlb fdivs fidiv and es dec sub pusha cs xor pop xor ss cmp dec cmp ds add push imul and adc adc sbb inc push push pusha push bound fs or push insb xor jo jb je jbe js jp jl jle inc sbb inc sub dec and sub push andps and pop pop pop pop js sub std mov enter shrb fdivl mov iret xor in test xchg mov mov mov mov xchg cld xchg xchg cwtl mov sahf fchs (bad) loop in out call lahf out xor repnz testb (bad) (bad) nop shlb mov int3 call rcl aam (bad) movsb fadds fisubr and es sub inc sub cs xor inc xor ss cmp push cmp ds add sub or or push jl dec adc jge bound ja jg js insl pusha add fs add push insb pop outsb add jb je jbe js jp jl jle inc inc inc inc inc pusha inc xor adc dec add push aas push xor pop aaa pop pop pop sub mov lret test stos fsubrs mov mov mov mov loope hlt subb mov mov mov mov nop mov loopne xchg xchg xchg cwtl mov sahf fsub mov mov mov sub ljmp xchg repnz xchg xchg clc sahf cli xchg cld xchg (bad) mov les lret test mov aam (bad) mov (bad) (bad) and push and es inc sub cs xor outsl xor ss cmp cmp ds add insb add push pop or jns bound imul jo sbb ds push pop pusha inc bound cmp push sub jo jb je jbe js jp jl jle inc cs das inc sub dec and dec ds adc push aas push xor xor xor pop cmp sub aad aad (bad) stos int les (bad) mov mov mov mov (bad) lock xchg mov mov mov mov nop lds ret cwtl cld lcall mov (bad) in out call sahf out mov mov lahf hlt xchg notb pushf decb les lret movsb into mov aam (bad) repnz fisubr dec es sub dec sub cs xor inc xor ss cmp push cmp ds add sub or or push jl dec adc jp sbb jns jb addr16 cmp data16 push insb add jo jb je jbe js jp jl jle inc fs xor jg cmp dec cs aaa push and push and pop xor pop cs add (bad) cmpsb ret stos int ret mov mov mov mov mov sarl lods test xchg mov mov nop mov loopne leave xchg scas cwtl jmp sahf out xchg loop in out call sahf out mov mov mov xchg notb cld xchg incb les lret mov rorb fcomp fcmovu (bad) (bad) and push and es inc sub cs xor pop xor ss cmp cmp dec ds add jbe pushw jae pusha or push jl dec adc je jnp jl cmp push jo push bound push or jo jb je jbe js jp jl jle inc fs xor or dec and and push cmp push cmp pop jns or xor (bad) cmpsb shrl ret scas fdivl aam fstpt lock in test xchg mov mov mov mov nop std xchg notb lcall (bad) nop in out call sahf out mov mov negb cld (bad) (bad) nop shlb mov int3 movsb into mov aam (bad) movsb fadds fisubr push sub jno jg inc xor ss cmp pop cmp arpl and jo add or push push inc adc adc push sbb jp insl push jp cmp or push insb push outsb push jo jb je jbe js jp jl jle inc sub inc ss sbb dec jb cmovle push adc push pop insl pop jbe outsl pop outsl mov mov xchg lods xchg scas (bad) mov mov mov mov mov mov ret xchg mov out xchg leave xchg repz clc lcall mov xchg in out call mov lret repnz movsl notb cld std (bad) inc xchg ret stos (bad) mov int3 test mov aam (bad) xchg fmuls (bad) and and and es sub inc sub cs xor xor cmp cmp insl insb pop dec insb push add pop pop push pop data16 jne fs push pop sbb sub sub add or add movlps add sbb cmp sub add adc jle inc adc jb sbb xor das and and push push push add push or sbb cmp fcom xlat movsb cmc in xchg cltd imul ret leave into (bad) aam jecxz mov xlat lret fidivr leave aad into fcmovnb hlt loop sar loope mov xchg stc xchg (bad) cwtl in lcall test (bad) in out call xchg out pushf lock hlt pushf testb sar fwait shrb (bad) enter int3 mov (bad) mov mov fcmovu fsubrl inc adc dec dec dec inc inc push dec sub inc pop pop inc push add dec dec pop dec cmp jae insl jno xor push fs push movups jg popa jae inc jp ja jo inc adc sbb fs pop or sbb push or inc inc jae push pop sbb or or xor xor sbb je dec cmp daa and and ss and pop sbb pop das pop sub movsb shll fldcw mov mov mov mov sti mov ret xchg mov mov mov mov nop clc xchg call lcall mov (bad) in out call test popf lock repnz hlt lcall cld test leave (bad) cmc ret loopne mov xchg lret mov (bad) mov mov fcmovu fcoml push and es sub or cs xor push xor ss cmp dec cmp ds add bound push outsl or fs push ja je adc sbb push dec pusha bound fs data16 push insb add jo jb je jbe js jp jl jle inc sub inc sub dec imul push aas push aaa push xor pop cmp pop das pop cmp mulb ljmp mov mov mov mov aam roll flds clc mov mov nop fcoml sti cwtl cltd lcall cmpsl loop in out call mov mov hlt xor cmp (bad) scas shrb movsl enter int3 int iret rolb (bad) sbb ficompl and outsb and es sub inc sub cs xor jne pop ss cmp push cmp ds add dec add push push or dec or push dec adc push adc push js jp jo inc push pop pusha or data16 imul jo jb je jbe js jp jl jle inc es xor sub dec jge jns jl arpl push push push push pop jl sub adc loop out std stos out lods icebp scas in mov mov mov mov inc push dec inc add add add add or add jbe xor xor add add add add add and add pop add cmp add and jb outsb addr16 add add adc add add add push push add adc add add add inc push dec inc add add adc add insb outsl bound add add add push adc add add add add add add add cmp add add add add add add add add add adc add add add add add add add add add add add add add add add add add add add add add add add add add add adc or pop add add add das add add das add add fwait add add add add add add add add add add add add add add add add add add add add add add addl add add add add add add add add add add add add rolb adc push add add add dec add add add add add das add add adc push add add add add add or add or cltd add jecxz out add das add add push das add add add add add add push or push add add insl pop push add add pop add add pop add add pop int or push or add add or push or push or add add add add add add add or or add or add add or pop out add or add add add add add add add add add add add add or adc add adc lods add or adc add adc dec pop mov mov or adc add add add add add add add add add add and add sub and add xor and add cmp and add roll (bad) pop jnp push and add add add add add add add add add add add and add add add add add add addl add fsubl xchg add add and addl add inc add add xchg add add add add daa add add addl pop add add add addl or jo add add addl or shlb add add add add add add add sldt add add addl adc jl add add xchg sbb add add xchg add mov add add add xchg or add adc clc sub add add add add sub add add add add add add xchg or add add add xchg dec add add add add add xchg sbb add add add add add add outsl add add add add add add outsl add add add add add add add add outsl add add add add add outsl add add add add add outsl add add add add add outsl add add add add add add or dec add add add das add addb add test data16 xchg add push add add add add add add imul jno xchg add jns in add push add add adc dec add add sub data16 dec add add sub into add cmp rolb inc add xlat add add add hlt add add insb add add insb add add add add add add add loop cmp or pop add mov add add add add add add add add add and dec add add add das add add add add add jge roll out add add add roll or add add add add add add add add add add add cltd add add add add js sub mov add add movsl add add add add add add add add add add add add add and sub pop add outsb add nop add dec add add dec add add add out xor sbb in add add add cli add dec add add dec add add dec add add dec add imul jno stos pop mov jns dec add add add add add add add add add add add js leave add mov roll dec add add sub and and add add add add add add add add icebp add add push add add icebp add add add icebp add add icebp add add add add add add add add add add add add add add call add add push add add add add add add add sbb add stos push add add add add add add add add add add add pop add add add or add add add add adc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov add add add jo add add add xchg add add pop popa insl outsb jae gs add insl outsb jae push jns je insl cs imul inc outsl jb jae insl jae outsl jb imul gs add arpl jae data16 push imul jae arpl push jns je insl cs jb ja outsb add insl outsb jae inc outsl jb xor jb jae jne arpl add insl outsb jae push jb jo jb imul outsl jne arpl jb,pn jae jne arpl add je insb imul outsl jne arpl add gs jb xor inc outsl jb add je dec imul jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl imul arpl jo outsb outsb je add outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add je outsl outsb xor inc jne je outsb add je outsl outsb xor bound je outsb xor bound je outsb xor insb imul add je outsl js arpl add jb xor outsl popa add outsb je jb jae jae outsb fs add arpl je outsl outsb add je add add imul je xor push outsl push je imul jae insb add imul dec gs popa add jae popa addr16 outsl js push push imul jae insb je inc arpl add bound dec bound arpl je imul outsl ja jb push jb je dec imul push inc imul dec push jo fs dec jo insb fs pop add insb insb popa bound xor push popa outsb outsl insl add jo addr16 dec popa jae popa insb jne add je popa insb jne dec jb gs jne je push outsl ja dec gs add push js imul jp push popa push imul push gs jo inc outsl outsb arpl add jae jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add je bound arpl gs outsl jb inc insb imul dec add je jne je insb imul add je outsl outsb xor insb imul insb popa arpl addr16 insl gs add inc fs popa outsb add outsb jne gs bound xor bound je outsb xor insb imul jb popa jns bound je outsb xor inc insb imul gs bound push jns je insl cs gs arpl outsb add add je inc outsb je jns outsl imul push outsw add je jb arpl outsb add insb insb inc jns popa insl add insb insb push jns add je outsl outsb xor insb imul insb imul add imul outsl js pop push gs arpl dec outsb fs push add imul insb add jo jae add jo jae outsb add outsb je outsl insb add jae outsb fs popa jns jne add imul pop dec outsl arpl imul pop dec popa insl add jp add je push imul pop push popa bound fs jae je push gs add je outsl outsb inc popa jae add je push jae push imul jns gs popa arpl outsl insb outsl jb inc jbe outsb je popa outsb fs gs popa fs inc insb imul je outsl outsb je outsl insb add je inc outsl jb popa je imul insb gs fs push gs arpl dec outsb fs push add jp inc add outsb je imul je outsl insb add je inc jne outsl push arpl gs imul outsb jae jae je inc jne outsl push arpl gs outsl fs je push arpl gs outsl fs je inc insb imul add je inc outsl outsb je outsl insb jae inc outsl outsb je outsl insb inc outsl insb insb arpl outsb add add fs dec outsl popa add jae insl gs popa jns jne add imul inc outsl insl jo outsb outsb je arpl outsl jb push jb addr16 insl add popa bound imul jns gs push gs outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je push jne add imul push inc je jb bound add jae jne arpl add insl outsb jae push jb jo jb imul outsl jne arpl popa outsb add jae jne arpl jne je jb add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add data16 outsb arpl jno popa insb jae push jns add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je inc jae gs bound addr16 push gs jne arpl popa outsb popa addr16 addr16 inc jne je jb add je inc jne je jb add insb jne add imul jae bound je jb bound add imul jae bound je je add insb je jb add insl jo insb gs outsb gs je fs je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul bound addr16 outsl outsb push jae jb outsl fs je jb bound add jae gs cs imul imul gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs push gs imul jo imul push gs imul add jae gs cs outsl outsb imul je outsl outsb add popa jne je outsb jae popa outsb arpl addr16 inc gs jne je push gs imul add outsb arpl outsl outsb imul popaw jne je inc jae gs bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add outsb je insl gs outsl insl jo je bound imul bound add jae insl bound jb fs popa jb inc je jb bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound gs jb jo imul imul jae gs bound jb fs je je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound imul imul outsl insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add jae insl bound imul outsl outsb inc je jb bound add jne addr16 bound je jb bound add jne imul jae add add dec add jns dec add dec add inc add dec add add dec add add inc add ja jo dec add ja dec add arpl insb add push add add dec add bound dec add inc add inc add ja dec add inc add jo push add jo add js push add add insl add adc push add dec add add dec add pcmpgtw add pop add push add add inc add push add push add add inc add add dec add push add inc add add push add inc add add add pop jae imul imul jae add imul add add je push add insl add imul add data16 ja dec add imul dec add outsl add dec add push add add sbb push add jbe push add push add push add imul add add bound jne je je outsl add xor add push add jb jne add bound jne je je outsl add xor add inc add outsb add add bound jne je je outsl add xor add inc add insb add add bound jne je je outsl add xor add inc add insb add insl add adc add je inc add js xor add inc add jb insl add add or popa add outsb add add push add je popa add add add add scas xor push or and insl add mov pop push sbb mov mov pop jg aad cmp push adc add sbb push adc add adc add push and add sbb pop sub push push or push push or or sbb or pop pop push or pop add or add add pop add add push add add push add push inc pop sub or or add or or pop or or or or or or pop or push or or or or add adc sbb inc add add add or and add add add or or add add or pop push push sbb or add push push add push push push push add add add or add or add sbb add or or or pop or or or add push add add push or add adc add pop add and sbb add push sbb adc add push or add sbb adc sbb add add pop add add add add or insl add add push add jno and add add sbb jns and add push and add addb orb lea imul add add add add push adc push adc adc dec add sbb add adc add add push push and add adc add adc pop add adcb xchg push add add adcb push and add andb add add add xchg add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor xor xor add push adc pop add adc add adc add adc add add adc add dec dec imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor xor xor add add add add push add push jb jo outsl outsb inc js gs imul ja add add or add add or add jae add add adc jo jb addr16 and xor xor add sub add bound xor xor sub sub sub sub cmp xor xor aaa aaa add or add xor xor xor xor add and add xor add pop add add add add jo add mov add and add add outsl jb js dec popa imul jb gs insb add add add and 