into sbb add add add add or xor je inc jg cltd incb xor cmc mov mov lea bound dec inc or cli sub mov push ret mov lds test scas cmp mov fldt or pop shll or leave lea hlt pushf mov mov mov das rol dec push ret iret pushf cs in push lahf ret leave fldenv ja loope mov lahf cld je jp movsl and xchg mov sbbl lods or add incl subl jo dec jmp xor (bad) pop adc in mov or sub rorl jmp xchg loopne sub shr cmp je pop xchg dec stc les add xchg inc in dec cmpsl mov fmull ljmp rcrb mov les loopne ffreep aam mov cmpsl jne repnz xchg ror dec decl mov faddl movsb cmc std int mov stos fs push or in sbb mov push leave loop dec and mov inc push xor lret xchg lret pushf enter push xor pop aam adc push icebp outsl push fnop dec or out loop aam sub add hlt repnz jl mov xchg clc xor mov (bad) cli push cwtl (bad) mov push (bad) in outsl sbbl xchg scas adc out dec out orb and add notb cld lds test stos loope ds rorl pushf xchg (bad) xchg addl add (bad) sbb orb cli add adcb xor test (bad) dec ss movsb out cs and push mov imul mov inc lods lahf lret sbb int lahf pusha in jge cli (bad) inc movsl push xlat leave xchg push jge js cmc sbb jbe sub test test jl data16 xchg cmp scas out hlt push fdivp (bad) jns shrl fsubl sbb dec lods push push sbb lcall icebp push jp aam loop out mov fisub outsb movsb cli xchg ss addr16 dec sti or (bad) sub add xchg push scas mov xor xchg lods mov mov jle cmp and push xchg (bad) (bad) rolb cmpb out and and or or xchg and imul or pop xor in jbe fsubrs push pop lcall pop pop icebp dec inc daa outsb mov push mov mov xor enter lea dec adc imul and cmp xchg aam sbb add mov pop cltd rorb jmp inc push rcrb enterw enter and iret mov (bad) jge loopne push out movsb cmc push js les leave aam push fisubr dec (bad) sbb jnp and js icebp inc adc mov outsl notl in insl xchg jmp and insl sub lcall and jae push xchg cmp in jb mov xor lods fs popf rorl (bad) cwtl out ss xlat outsl iret pextrw bound into and bound cmpsb pop fs loopew dec push (bad) aad das sti sub scas lea outsb lret adc xor xchg arpl (bad) sub sub xor jge loop and popa sub sbb iret iret adc jg stos dec movsb pop mov call lahf lahf test loopne leave add fwait inc cmp das push adc adc inc pop fist sarb pop ret test int3 ror mov mov jo adc add int sub subl cs cwtl movsb loopne clc das cmp xchg push add sub cmpsb adc jmp lret maxps rcrb push add inc jnp xchg pop dec and jecxz aaa pop xor inc jnp bound popa push jae adc push lahf inc sub jg dec xchg xchg imulb es jg fsubrs xchg enter jg scas fimull push sti stos sbb insl ds inc inc scas mov xchg jp mov add scas aad sub jle js cmp js and popf in pop xchg mov (bad) push repz xchg lds mov les addr16 out mov pop jp imul mov xor or test mov out lods call inc sub addr16 rcrl outsb fildl popf cli or pop insb xchg test int jp push xchg jb xor gs into xchg wrmsr ljmp mov cmpsb pop cs scas xor or fs pop xchg mov adc loope sub mov repnz rolb dec stos (bad) stc adc rcr movsl pop jae dec ret arpl push pop inc sub sbb pop negl mov adc fcmovnbe push cmc jnp (bad) (bad) xchg dec maxps xor xor add sub fisttpll arpl aad xchg jo (bad) cmovbe out jb rorl imul fild pop inc xor pop fmul mov ss call xor lds add ret push inc dec repnz or (bad) mov adc inc ss dec add iret cld iret mov or push dec cmp jns and divl fistpll fnstsw pop xor mov mov data16 fcoms add addb loopne and test pop aam (bad) sub (bad) mov xchg ret jae xor mov xor jle into outsb dec push js add mov sahf fs push aaa and xchg notl sbb sti jbe enter inc mov push stos mov push mov in jmp dec mov js mov xchg mov mov push mov popa insl mov sub je,pt lods jmp cmp inc push mov cmpsb in pop cli insl dec insl xchg mov data16 lahf mov js clc inc mov insb mov in out dec pop jecxz mov mov push leave (bad) rclb inc jl mov mov cmpsl repz in popa add pushf mov js js push fwait lahf lds lods mov and test ja outsb leave pop mov movsl mov push int3 int push insb xchg xchg dec fldl jns lock repz jle clc dec inc aad xchg ja pop mov or sub pop nop lods jne stos out adc test test and adc (bad) icebp test frstor push adc xor scas mov jg jnp adc imul stc hlt jle in push int das and adc test sub sbb adc mov jo enter iret sbb cmp dec xchg jl test (bad) jbe dec fisubr push mov push dec sbb add mov ret xchg mov push ret sub imul jae rcrb js movsl fs je cmpsb mov mov pushf shlb mov fstps int mov cld out adc loope mov mul les repz fcoml sub cmp in mov mov mov add mulb xor dec pop pop test xchg stos pop mov cmp add inc sbb and push int3 xlat mov sub in loop int3 into mov sub roll mov xchg outsl or jno (bad) mov sbb mov push pop addl add outsb (bad) xchg xor (bad) dec gs cmpsl call notl test push xchg hlt or inc cmp sub pop mov inc xlat call xor push add stos enter sbb or lcall in pop xchg daa in xchg cs stos jmp inc dec sub or test dec xchg lods push inc cli ret or cmc mov mov fildl xor decb xchg aaa int lock test sarl mov jge (bad) cmp xchg push push lret in inc mov movsb mov inc cmp xchg lods adc (bad) fdivs sarb or loopne cmc add dec or add pop nop inc and andl icebp dec rorl xor jle,pn mov and rolb pop rcrb mov popf movb lods sub cli test in dec mov xchg pop pop xchg sbb mov (bad) push (bad) cmp adc cs dec mov mov mov adc mov push push push add lods mov xor iret mov out ret leave (bad) mov push adc fcoml cmc xchg push push mov imul or std and mov and jle or insb (bad) mov mov push scas ds cmc aam and fdivr push ds cmp xchg rorb mov adc xor jno rcrl lret add mov mov mov (bad) pushf movsl insl xor mov sahf adc inc jb adc aas hlt push and jnp pushf sti and outsl jbe mov nop lret clc adc or cmpsl push adc shll pop (bad) adc stos or fsts jp mov sub lea mov push cmc inc push xchg mov (bad) xor mov fmulp addb cmc pop sub xlat movsl lahf rcrl fisttpl js push lret outsl ljmp insb lea rep xchg ret dec cmp xor mov in jge into push jecxz cmp xor xchg push cmp sub cltd mov mov mov je mov rclb insb jbe xchg out mov lods pop dec sbb mov cmp js xor mov bound inc test pop jae jbe xchg les movsb dec adc push adc call adc fisub lods jne cmp lret sbb fs lret insb xchg or je xchg mov (bad) cltd lods inc cld test bound jbe fs adc inc dec popa adc es mov xor std sti fdivr gs es mov and and push ss icebp inc rcl add xor pop dec jl stc mov (bad) adc xor push cvtps2pd mov mov xchg xchg pop push pushf push scas xchg xor mov inc and pop push mov (bad) repnz std mov mov push dec push sbb mov xchg nop pop inc gs rcll or inc ss inc pop or ret iret in xchg fildl ucomiss mov hlt mov pop mov jle and sbb jmp push int3 adc mov fcompl xchg pusha mov pop testb inc cmc popf cmp jo in fcomps jbe js (bad) mov cwtl iret cmp jge fcom mov imull cmp (bad) (bad) mov mov movsl inc fsts lcall sarb xchg scas iret adc pop inc data16 and adc push sub pop fsubs repnz cmc mov in push inc cmp dec cld inc movsb mov lock adcb add cmp mov xchg pop add push insb sbb mov daa (bad) out jle cli cmp loop test fwait insl xchg mov add stc addr16 pop adc jb mov add in fidivrl adcl imul movsl shll mov (bad) jg push fwait fwait bound call fisubrl pop scas addl out xchg test adc repnz outsb addl ja (bad) push jle shrl andb mov sbb lods out sarl inc xor xor jmp stc dec imul mov mov pop (bad) mov stos jae xor dec xor stc (bad) and and cmpsb pop movsb in push lods out dec test (bad) jne xlat mov xchg adc pop sbb mov and out inc push inc xchg cmpsb cld jno out jnp xor shrl mov sti cmp pusha fnstcw hlt add imul adc mov jle add mov inc xchg (bad) (bad) into mov mov push xchg jae sbb sub mov mov mov fsubl rorb or dec dec mov xor addb (bad) out inc and call mov sbb dec es outsl rcr adc (bad) divl fs stc pop ret out call (bad) mov mov (bad) jb movsb xchg sbb jns xlat dec pmuludq dec xchg jmp decl jmp pop and and cmp in jnp jns cmpsb std pop push inc pop lds jb (bad) mov cmpsb (bad) adc aad xlat jmp in gs xor push mov mov or aam loopne add movsl cmp js clc fs mov loop (bad) pop jnp iret fild xchg lret jp int dec aad psrlq jl inc bound (bad) ja out icebp sub pop test inc shrl and pushl xchg ret mov ret popf push mov mov sti mov jg mov les xor in mov push fnstcw pop mov and (bad) xor movsb sub inc inc fwait sub popa jge add inc mov dec push fsub lock rorl jae arpl outsb gs fistpl cltd test jmp ret xchg (bad) icebp pushf gs adc stos add sbb jmp xor aas mov dec pop xchg xchg push pop addr16 cmp dec pop out hlt pop ds sahf stos dec shr push push mov loop xor mov jno push cmp mov xor xchg jecxz insl outsl call hlt or dec in addr16 jl inc fwait test sbb jg cwtl sahf les leave mov in lods xor adc pop dec push pop adc pushf jmp cmp ficompl jns shr xor daa movsb sbb and test stos arpl mov frstor mov inc test cmp imul out dec xor push stos divb aad nop inc jae (bad) mov mov sub aad or and pop push jb enter jl std cmp popa mov cltd stc clc xor mov add pop sub (bad) jnp xchg sti (bad) push pusha adc lea sti (bad) (bad) dec nop cli nop repnz jmp scas mov or dec add cs xor lahf sub ds mov mov xchg pop mov aas push cmp int3 jno or in pop mov lahf mov or inc mov ret sub gs mov pop cmpb loopne mov sub mov ds jle xor push sub dec fs les call push sub jecxz pusha mov les fcmovnbe push pop dec jb sub jns mov push test or (bad) xor adc dec push loopne mov test cli push imul jbe mov leave mov lret in cltd dec push sub daa out fstpl jecxz (bad) into stc into das sub adc pusha test int xor mov add imul cmp and stc sub aaa xor fisttpl data16 shrb es pop add cltd lds jo aam and scas lds (bad) inc push (bad) adc mov fadds cmpsl mov cmc pop or inc and jo jmp push dec test or xlat adc test cltd scas ljmp xor and addr16 push in fildl fldl rclb in dec fldcw test xchg mov dec xchg push cmpsb popa in push pop jns mov les negb int3 jl and dec sarb out cmp fimul arpl orl mov ret cwtl clc lods nop xchg pop mov inc dec enter jnp mov cmp sub xchg dec pop jns cwtl fidivr daa jb shrb xchg sub xor adc jl sub sahf out lock faddl mov mov xchg xchg dec loope xor scas xchg and lock xchg fcmovnu mov fsubr outsl jp shll hlt push lret nop sarl add popf sub sub sbb jbe out cmp dec sahf mov int3 mov insl mov lret mov inc jno js jns mov inc imul cmp outsl and xchg sahf and sahf cwtl xor sahf cwtl xor mov pop jno sbb je test xor mov xor repnz ds mov pop pop inc leave popa xchg scas and std movsl cmpb push mov js xchg out fucomip aaa or push arpl imul sbb push es jecxz cmpl subl add inc fsubrs inc xor sbb repz mov xchg idiv jge mov sub xchg add ret fnstsw ljmpw outsl leave cmp ljmp (bad) stos movsb adc dec clc out adc (bad) jle jnp and je mov fstpt (bad) adc lcall push clc enter inc call (bad) lods mov mov adc (bad) int3 pushf test or outsl (bad) xchg decb push inc push push mov add sarl cltd mov into mov jae mov push adc push pushf pusha mov cmc cltd jo adc sbb xchg jae adc inc decb ljmp jnp or mov sbb mov mov int arpl test jmp add (bad) cmp hlt in cmp or cmpb mov add stos enter sbb lods daa pop imul test test loop (bad) fildl shlb loope enter cmp fldt cmpsl int3 lcall sub sbb sbb xchg stc inc insb fmuls cli lret inc ja movl call test ja roll cld repnz rcll lea lcall js in jg sbb push incb lods stos (bad) jno (bad) std push push xchg pop arpl les nop ret scas mov xor dec shll xchg push mov stos lahf and mov fcoml xchg mov dec dec enter and jmp fs popl push mov lret and mov push in mov je fdivrs movl mov popa daa lcall push inc in ret lods pop xchg repnz mov dec xchg adc cli pop and jmp xchg mov push pop into sbbl push (bad) xor jae bound dec cmp inc sbb imul out (bad) adc out pop dec mov xchg repnz movsl dec rcll js add and mov and dec ljmp sahf (bad) aam mov fstps sbb or bound adc xor (bad) adc inc addr16 mov repnz adc push pop push (bad) arpl mov mov xor inc les lods movsb jns imul std mov mov jl lcall mov shlb stos lock mov shrl sub scas setae std pop adc sub or dec fs int popa adc jnp dec loopne sub imul nop out aas mov ficompl mov std xchg mov push mov movl mov (bad) lds ja loope popf loopne cmp in sbb iret xchg cmpsl adc cwtl mov lock outsb mov ss les cmp inc jmp into enter cmp rorb cmpsb pop mov ljmp pop xchg or (bad) dec sbb scas jp ret push imul xchg in (bad) jmp leave mov aaa sub jecxz aaa or lahf pop sbb cmpsb cmpsb (bad) jb fiaddl out sbb test add cmp pop mov ds outsb pop arpl mov outsb fldenv inc jno imul push push fist jp jno fist fwait push sub scas jo mov sti sub loop xchg mov sub addr16 cmp dec nop repnz fwait aas add test or pop fldenv and (bad) aaa cmpsl mov (bad) or adc pop mov xchg mov fs mov jp lret push loopne sbb mov sub adc mov mov lock mov push cli lret sub xor loopne push in xchg mov outsb mov test xor loop popa bound sete hlt pop mov rsqrtps pop stos adc push outsl fdivl outsl repnz mov aaa jno ret lret lret sti cli xor loopne in or inc ficoml icebp or cmp test addl outsb mov (bad) mov inc mov push dec je and les cmp lret cwtl mov andl adc mov cmpsb pushf stos arpl mov in xor inc jo sti add inc dec frstor adc gs movsl or rorb xchg mov push repz pop add leave add push std (bad) xchg xor ja mov sbb mov jno sub int and mov jecxz test and mov cmpsb pusha cmc iret mov mov and push clc icebp pop popf rcrb dec pop sbb (bad) mov stc push test xchg push pop repz hlt cs add cmp dec fldenv jecxz push ficoml in les mov jle out subl xchg movsl add stc mov (bad) cmpsl dec out xchg lock aaa xchg sbb push rcll and cmpsb fsubrl add cmp insl xlat xchg mov sti aaa fdiv and imul shlb xor pop aas sbb inc ret jae mov ret inc mov mov (bad) data16 or inc mov cmp je pusha stos or imulb fdivl push adc popa jno outsb adc pusha xor or push cwtl or add dec rolb or mov xchg into inc lock outsl or stos add test xor sti mov mov cmp imul mov pop int3 xchg push js push dec data16 pop (bad) inc xchg js,pn xor lcall out inc pusha adc sbb mov ja lret cli cmp push mov repnz fsubrs and (bad) push rdtsc xchg jg fimul mov rcrb (bad) int ret or icebp pop mov call lea mov and xchg push push xchg (bad) mov sbb ja call addr16 add xor xchg mov xor sub jmp iret xor pop mov jg (bad) push mov push pop pop sbb mov lcall bound add pop sub cmp or pop outsb loop icebp (bad) out pop or adc mov test push and rorl (bad) adc mov addr16 mov push repnz inc push push inc mov addb push lea add sub inc stos into mov and and pusha mov lret inc jle mov jbe addr16 in or test js dec enter rorl adc and xchg (bad) sbb cli cwtl ror out fidiv test adc pop cmp mov jecxz enter lcall das roll jl lds orb sahf dec cmpsb xchg push push aaa (bad) jo add call push test mov and xchg fcmovne aas xchg inc pop js gs sub es int3 call outsl cli test mov fs jle out pop out dec xchg pop arpl xor int3 sub add lods jne aam faddl ficompl cmp aas push cmp pop ss or iret fs sbb movsl add hlt dec inc ret rep jnp fcmovnu shlb dec mov push ds or lret mov into rcr adc mov cmc js inc lcall adc lea dec push adc or pusha cltd rcll xor sub pop scas in xor push mov jg into mov rorl popa gs mov ja fs lds arpl sub stos popa jecxz mov mov roll std int3 dec and cmpsl push std bound orl int3 add ds (bad) cmc cmpsl cltd aam in loope jp cli dec call aam aaa mov (bad) mov sub xchg adc (bad) testb mov fisubr insl xchg (bad) outsl mov outsl adc popf insl cmpsl jle jne jmp in add cmp je ja cltd into shll pop ror outsb xor fldl pop push pop aam ffreep outsb mov xor es adc fild mov repz popl lret in dec dec sbb pop sub xor sub negl (bad) (bad) call push push sub push sub xor sub add loop jns dec idivl add inc push adc mov insb sarl pop pop pop jnp xor stc lret cld pop clc pushf xor pop pop mov aaa popf (bad) lods aam gs fsts or js push push (bad) in xlat fmull pop xorl add loop insb adc ret es mulb mov pop cmp shl mov cmp mov jne ret out sub cs in call jb xor push movsb leave fdivs call lea into push inc fnstenv (bad) cmp fnstcw ret adc mov and divl inc fucomi mov jo jmp add add pop fbstp mov jmp and or pop lahf data16 mov adc mov sbb imul fwait outsb add in or pushf fs mov das mov (bad) lea lds and cmp test dec cmpsl cmp push in mov pop addr16 sbb or fadd popf pop push addr16 inc stos mov (bad) and loope call jl adc fisttpll adc xor push jecxz arpl push ficompl (bad) (bad) xor push add add jle push xor add ret cltd xor jne adc arpl bound jno sbb in insl fucomip jecxz,pt jmp iret not jecxz dec push jmp sub jo test (bad) jp and sti (bad) dec loopne pop clc movsb adc loop lret cli movsb (bad) or es lcall pop jns inc test int3 sbb push push jnp (bad) adc jmp jle hlt enter mov repz xor xor dec mov leave nop cmc clc addr16 out pop dec outsb pop xor xchg rol or repz cmp out sub jge inc mov adc mov pop out adc sbb dec leave adc or sbb xchg loopne test xchg sub fcompl xchg andb jb mov add or repnz mov adc pop add and fistl sbb ss fcom repnz es scas pusha shrb mov out fdivrl mov push lock add inc and lods fwait push jp and aas lds sbb xor mov pop and jno hlt xlat mov pop add popf jo sub add xchg into mov mov add dec sti fldcw loopne test mov push cmp test outsl fwait in out pop aaa cmpsl push xor pushf aad dec fwait ja stos xchg add sti shr (bad) fadd lods push push test mov pushf pop call adc int sub push js pushf inc hlt imul inc add outsb mov dec lods insl fdivrs cmp dec (bad) mov mov push adc xchg lret push stc ja (bad) lret pop adc cmp dec adc (bad) sbb sbb lret testb pop (bad) std fwait pushf jne outsl or fisub pop (bad) imul movsb mov mov sbbl outsb inc mov mov flds call sbb xchg push mov adc fldenv inc gs push pop das cmc sub xchg sbb cwtl jp dec out aad lret (bad) fisubl stc gs mov sub adc lahf aaa mov scas push or jp push jmp ja cwtl pop test arpl sahf xor jne dec push les xor jne out cs or sahf mov outsl jo dec pop cmp sub or popf iret mov cld sbb xor loop mov out jl xor xor sub jb out sub pop scas xlat mull enter cmp stos stos testb ljmp or pushf stos imul or (bad) jne push (bad) in scas insl popf jno (bad) cmp lea inc fsubrp add jp xor adc xchg test (bad) je (bad) jb loopne sysexit movsl and fs mov pop adcl mov sti out xorb mov lods push push xchg outsb aaa bound rcrb nop iret stos xor bound ret pop sbb test jns ja clc push jmp test xorl cmp jle arpl jo les cli cmp inc mov popa cmc mov mov and inc hlt daa test adc (bad) data16 mov or stos aam test lcall mov add jmp xlat push xchg ror clc js add sub mov hlt jne mov orl or adc enter cmpsb scas idiv and aam dec insb cmp pop jo jle sub inc (bad) pushf xor movb or les jecxz or dec nop outsb xor push lret outsb ss mov out add in push fcompl (bad) lods add mov repnz pop add testl (bad) pop sti adc ret mov jg jge js push xor fidivr adc or enter (bad) divb leave popa es pop imul paddsw mov pop (bad) int hlt in out adc xchg mov imul popf or mov js movsb adcl idivb neg bound or fwait in xchg negb (bad) mov cwtl inc lret sti das sbb shrl xor add adc cmpsb push cs lods mov mov imul ljmp aas pushf xchg cmc or dec shr pop arpl jo lods and fisubl call adc lret call lods lods push in cmp lret bound fbstp inc in out xchg mov xor sarb lods push adc inc mov inc dec or mov mov insb push (bad) scas fimul outsl pop popf jno and fwait orb (bad) int3 pop xchg (bad) xlat rorb xor mov lock arpl ret mov dec ret add and fucomp (bad) fstps inc jae pop mov xchg xchg lea mov call (bad) dec cmp jns enter flds test adc sbb hlt stc lret xlat out mov sub pop arpl inc sub inc in mov and xor sbb mov in jno cmp adc mov adc and std mov in int cs ret jne dec aaa dec xchg (bad) jmp pop test jmp sahf rol or inc sbb out imul xor xchg cs adc sbb and xor adc int mov and xor cld sub mov ret and jle add dec cmc (bad) xchg dec sub pop xchg dec xchg mov dec sbb lods cmpl pop stos sbb ret stos push lret mov lock jmp push dec and sti and or add lock or push xchg loope sbbb popa int3 fwait cmp loopne cmp jp int lds arpl mov xchg xor out cmpsb inc xchg pusha scas cltd dec dec dec jo leave in dec rorl iret mov inc xchg sbb aaa xchg mov mov xchg adc icebp push or out (bad) fs adc dec mov dec scas xor sbb mov fcomps mov sbb lahf jge pop mov xchg out push (bad) nop push fsts pop or movsl (bad) shl or mov xchg pop or lds imul mov rcr in mov repz xchg mov jb inc mov mov or sub sbb mov lahf popf jp dec mov shll (bad) int3 xchg adc pop into les in sti int3 daa push out push movsb loopne push leave xor cltd or push ret lret xchg jmp xchg (bad) pop xor cld int mov jns cmp out cmp dec jae outsb xchg inc cmpsb cmc jnp stc xchg sub push rolb xchg jno ja mov ja int3 mov cmp les sub jbe fisub lds xchg outsb ss hlt dec xchg movsb adc or lods inc mov mov sarl imul fistl sbb (bad) call pop mov stos mov jge ficom pushf add rcll push les or add pop xchg lret xor mov fnsave mov cld fiaddl xorb push jae cld add or mov in out sbb les mov loope ret adc int3 mov dec mov mov clc jle ja (bad) fs movsb push sbb repz in iret inc pop cld (bad) pusha xor xor test adc inc and clc cmp scas mov add in leave loop xchg mov (bad) mov in lea enter dec mov adc sbb mov addl out sub divb add push push lret ljmp out cld cmc inc lcall pop sub dec cmpsb mov je pop sub negl sarl push push and fwait push push mov adc mov test cwtl lods add outsb add shl inc add icebp xor mov mov xor dec xchg pop cmpl fidivrl out jns movsb outsl popa xchg sbbl les fwait adcl xor fldt or mov mov pop xchg inc jnp cmp cli mov jnp inc std xchg mov push int jmp sub ljmp pop (bad) mov rcrb fwait mov jno (bad) stos xchg push xor mov test arpl pop sub pop sarb (bad) sarb test mov mov mov frstor out das jno mov inc mov push lret pop aad in mov rorl leave (bad) fstpl inc fisttpll inc mov aaa xor jae cmp clc je add inc cmp jbe nop aaa mov in xchg hlt (bad) jne add adcl nop xorl xor cmpsb push (bad) jo xchg decb jmp pop cli aam or mov push ficompl rcll mov mov repz aad push ret ds rcr cmp gs ja es sti cmpsl out mov scas sbb aad cmp jb xlat daa lds dec stc js cmp push xorl test repz stos xchg cld aas xchg sub inc lret mov cmp enter xchg loop xchg xor lret and outsb rorb loopne push ljmp pop push imul cld lock push fisubl inc arpl fiaddl adc incb sub popf jb call lock int pop sbb in call dec pop data16 sti clc lock cs out pop mov iret dec push in out dec sbb adc jmp call pushl inc jp fldl insb bswap jb arpl test in cwtl outsb xchg push mov jge fldl2t movb xchg int3 ja cmpsb mov and scas or jae adc mov jns mov fisubrl out sarl adc sub jecxz lea (bad) stc jmp or loopne inc rcl sti xchg (bad) and push int3 aam cs and push dec cmp imul jae sar stos (bad) sbb popf cmp push (bad) xchg call mov xor jnp fs icebp xchg lret jecxz popa pop loopne out leave jg cmp mov cld or xchg pop roll jge in jmp (bad) rol outsl push lret pusha out sub imul mov jg xchg add je mov inc in out pop xchg push lods add ret add (bad) sub sbb adc fwait mov cmp dec (bad) adc jmp lea dec mov outsb adc dec fist sar mov mov mov pop jno xor test xchg lods iret mov fsubl (bad) enter andl mov pop pop (bad) adc or nop mov bound out cmp mov (bad) sbb in jmp call call pop (bad) mov inc jg push sbb lds notl fiadd and pop xchg fst (bad) or jmp in cmpsb sub jbe push pop adc xor fldcw sub mov pop std stos ljmp mov sbb lods movsb cmp addps jl and cmc inc addl push clc xchg int and (bad) aaa lea and inc and jmp pop sahf inc (bad) repnz jns enter inc jbe icebp cs mov jbe test sub sbb int3 adc cmp fistpl movsb and inc sti icebp cmpsl and inc outsl js cmpsb mov lahf inc je sahf das push dec sti mov jae mov sbb mov fistpl jnp ds stc fwait sarb mov imul (bad) int3 xor jns sub mov mov int test in loopne cmpsl stc jbe je clc ja lods push jns adc xchg push dec shrl push and jae jmp dec movsb jge mov add jg lock fnstenv (bad) imulb xchg pop imul mov xor mov (bad) cmp into jecxz int push mov add data16 sub dec sbb cmp or inc int3 push js ret rcrl xchg xchg push sti pop lret int fwait and in jg ret adc lret inc hlt push (bad) imul arpl pop pop (bad) xchg xchg mov (bad) or jecxz sbb mov xchg cltd into lahf jg outsl xor xchg or mov insb pop lahf test loopne cs jno repz pop and ljmp adc ret sti cmp mov cmp into xor xor stos sahf sar pop arpl push in push and aas or add mov mov push hlt je into cmpsl sub bound outsl mov adc pushf adc cmc ret xor and cwtl les (bad) dec (bad) jnp adc push pop and test insb out outsl cld fcomps stos adc movsb cmc and lret popl adc or mov rcll lcall jp adc mov in jmp cmpsb adc sbb iret pop leave aad mov movsl xchg sub cmpsb push adc in pop movsb pop sti scas repnz mov ret pusha fstpl (bad) sti mov ja jns jo ss mov cld mov dec jmp xchg bound push aam (bad) dec andl loopne scas push inc cltd shrl jmp testb fstpl sahf imul ds inc xor data16 scas fprem1 or inc sbb mov xor jo and test out outsb lods ljmp inc push adc pop mov mov mov sub jne pop add jge lret fadd xchg and jge push mov movsb call xor aam or cmp repnz sub mov ss cmc ret jmp lods iret jge add and (bad) hlt mov add addr16 and and push pop lock pop push lret fidivrl into lcall fdivl and addl pop mov add xor inc in adc pop popa adc insl dec (bad) (bad) xor fadds pop scas or push sbbl mov and pop enter dec shrl stc cmp test xor and inc scas inc (bad) mov sbb jne int3 adc push mov out icebp mov mov out imull sub (bad) (bad) adc mov sub mov push or mov push test push fcomps loopne cli lcall push push divb xchg outsl sbb xchg dec jecxz inc inc ljmp xchg pusha push fild add pop imul dec push nop leave push mov inc inc push dec std das sbb fcmovne or shrb sbb out mov sbb ja xor xchg push add pop lods mov out jmp pusha dec (bad) jo movsl incl jbe fbstp (bad) xor out daa dec in sti lcall repnz fstpt mov xchg out fbstp loope pop adc sbb mov mov sub mov mov pop leave jp add push lods sbb pop or cmpsl (bad) lods je mov cwtl pushf jp lock lods addl mov pop pop xchg sub loope enter lret xor sbbb pop subl inc xchg mov mov mov lea fdiv mov int das mov or lcall imul push inc repnz (bad) movsl cmp dec pushf cmp (bad) lahf xor adc inc setns sti repnz imul adc insl jmp loop lret jmp out push dec fmul out fistpll lods loop in repnz lret das ljmp test out dec and fbstp cltd jp push repz cmpsl mov mov and clc sbb clc dec xchg dec mov orl scas push mov xchg mov add mov cmp loope ret dec dec pop or ja push cli cmp cmp push adc imul fstl loope mov jne cmp js,pt jo sbb (bad) adc js or (bad) les scas mov jo inc test pusha adc cld arpl sbb std nop jecxz mov lock mov fimul pop stos jo nop cmp lcall or imul jge frstor sub dec mov cmp dec xchg insb mov dec xor add pop dec cli inc pop sarb arpl or add faddl jae xlat inc adc mov jmp cmp and mov (bad) std push mov jns daa lods push pop lcall sbb xor mov xor ds cmpsb lret pop dec shrl pop je int3 inc aad es cmovae hlt xlat cmp stos sbb push dec mov sbb movsb (bad) cmc pop xor lret loopne add jbe jo cld add push out pop fwait imul mov in or loop fs add jns pop subb sub add (bad) lret mov outsl out fisub das mov jno int sbb std out pop or pusha xor push div notb cs into add hlt out sarl test (bad) ds lahf fistp dec adc test scas jle (bad) mov xchg test dec pusha dec dec loop popa das jns xor jae (bad) pop cwtl push mov jg movsl fcmovb movsl mov rcl mov les or cmp test add cmpsb insl pushf push jae inc dec insb ror or cmp mov pusha cmp jae inc jo cmp lcall and out mov jns insl shll sub and jp popf pusha xchg fnstcw adc addl push lods pop sub popf adc xor mov mov inc mov movsb mov xor mov bound stc dec repnz imul mov adc jge xchg xlat imul xchg cwtl ret aad mov mov imul int3 mov call cwtd pop pop sub (bad) mov stos pop mov cli cmp mov aad int3 jge jle lcall lods stos cmpsb sahf cmp cltd je ret xchg adc pop jg mov rcrl bound jecxz dec xor push arpl dec ret adc cmpsl mov fimull cmpl adc jb pop dec jno out mov adc bound addl stc repz adc xlat push lret cwtl imul sub xchg movsl mov inc aad add push and pop repnz (bad) movsb sbb (bad) mov xchg jbe mov clc mov cmc or mov mov loop std scas push insb addr16 ret pushf sub cmp in and popf sub jecxz ret (bad) xor mov pushf lods fstl das pop or mov jae gs jne (bad) jp mov mov xchg jbe cmp loop bound mov push xchg cmp loopne mov add stos xchg mov sbb cltd mov push punpckldq inc cwtl sbb sahf xor mov jne arpl pop in mov lods sbb cmc xor mov mov insl movsb pop mov in lds pusha rolb fldl nop mov mov or fisub stc cmp das pop clc (bad) aas popf loop mov mov std out push (bad) mov ljmp mov cmp movsb xchg cmp jp loop mov xlat cmp das out decb mov sbb data16 inc xchg push movsb faddp cmp xor mov movsb ret lea push add mov loopne xchg addr16 stos int3 shrl pop xchg clc cld pop jnp mov sahf lcall js dec daa je rolb add or xor pop imul inc fwait out in stc inc std rcrb mov mov sub aad (bad) and subb adc or (bad) std sbb fnstsw sbb arpl adc mov xchg xlat stc push cmp mov pusha xchg ja mov mov sub sahf imul xor sahf mov adc dec ljmp in xchg cld mov sub sub jmp daa shl jo push fild push jb pop adc (bad) lods and or mov jmp push mov sub jns lahf incb xchg outsb imul pushf or out xor or cmpsb sub rcrl stos mov adc inc mov test pop in sbb cltd int cmp stos mov xchg insb dec sub mov (bad) movsl push or pop jle fildl xchg inc push or lds dec jnp pop shlb call xchg aaa push push jp lods add xor lret lods sarb movsb mov push mov addr16 jg jo rclb (bad) fcomps mov lods and mov mov and xchg mov int3 bound movsl (bad) push xor dec call aam push pop mov adc in shl push scas pop jbe xchg inc push mov mov cwtl iret lock ficoml mov fnstcw mov subl icebp out push stos cmp mov es push mov xor and mov lahf (bad) xchg mov jmp inc push mov ljmp xor std enter loopne mov es stos sbbl adc decb jns dec cmp (bad) push (bad) and mov js sahf mov mov pop push aas jp lahf sbb into lret mov std dec mov leave or push lods js pop mov aas stos lret jl pushf lea cmp sub pop stos or mov inc ffree imul lcall in mov inc lods out addl jne outsl aaa rclb xchg fisttpl arpl mov sbb pop cwtl mov sbb ds pop or push pop xor fwait (bad) sbb adc and je cmp test xchg xlat and cmpsl (bad) adc negb dec jp scas cmp sti popa and push repnz (bad) (bad) mov push je pop roll cmc cmpsl (bad) std sbb shrb test lret xchg push cmp pop jmp roll pop jp adc mov mov xor adc push xchg xchg icebp pop (bad) inc mov dec fs lods (bad) mov xchg sbb adc (bad) jmp jns outsl dec mov sbb adc rolb jae (bad) stc or out sbb xchg xchg adc aad jbe popf test and cs hlt sub cmp lock sub mov out test cmpsb pop add movzbl loope arpl in jg mov ret imul ljmp mov ret and sub pop shll xlat pop adc xor push arpl lret ja lods sub push jae out pop cmpsb mov xchg pop stos xlat sbb mov jl push jb hlt sub push jae stc dec lahf inc xor inc sbb sbb in les ficomp and jns mov (bad) cmp loopne jl and dec pop sub jl xor icebp lds xchg mov cld leave (bad) jmp cmpsb pop (bad) int3 scas push dec fadd lock stos cmp mov movb fisubrl and add int3 xchg frstor pop imul xor cmp sbbb imul sub mov jnp pop iret mov scas mov jnp rorl stos mov cmp scas jbe cmp adc aam lock test sbb test call and and jmp jns inc dec jge test scas iret jmp push push xchg fwait pop pop cwtl repz icebp enter jg mov in bound (bad) es jge inc mov jae dec adc pop insl pushf jnp andb mov rol aad mov or roll cmp stos push notl scas mov test mov std push sar mov fldenv into fcoms adc dec cmpsl push shlb xchg xor ljmp pop xchg dec loop inc in cltd cmp inc mov cli pop test in data16 sti in lret imulb cltd mov dec mov inc dec inc sbb push inc push lea les aas jo,pn iret xor ficomp jb fidivrl aas sub adc cmpsl mull mov fwait popa jns aaa (bad) adc push insl in stc in aad rcl inc int leave mov mov cwtl mov or pop cld adc xchg push sbb not mov push jns int and in seta call (bad) in sahf fstl push push (bad) pop adc xchg jae sub and xchg cmpsb sbb lods and push push mov mov movsb imul cwtl adc or mov dec fcompl mov xchg out repz sarl jae sbb leave sbb lods mov cmp xchg std sahf cmc jecxz push stos stos push in jecxz addr16 (bad) jmp jg out mov adc scas xor imul inc jno mov ret pop inc mov je jb mov push pop arpl jb sti jle stc out jge add cli mov lock add cmp mov call xor sub int std pop das xor aas pop jb push inc in jmp push mov ljmp aad mov pop in jg pop mov add pop imulb push ret jp or xchg jle es cmp adc lock scas inc pop jno push imul loopne pushf rcl inc cmp sub (bad) ja adc xchg hlt int fstps (bad) je jp lret inc mov dec aas cld scas cmp rclb cld jo mov in mov ds (bad) loope push in ss adc std and or sbb popa leave mov fisttp mov ljmp (bad) cli pop or mov int3 clc pop push (bad) repz cmpsl cmpsl popf repnz ds inc out outsl out inc inc pusha cmp and add ret std lods pop pop sarl js xor mov sub xorl mov test sbb fwait and negb test cltd xor adc push cmp push arpl mov mov dec rclb in add cwtl loope inc push push insl repz rcll shll xchg sti mov loop mov data16 and pop push dec jle imul shlb cmp loop sbb jge lcall sbbb rcl icebp or sub xchg add push mov mov arpl lds fistpll flds out adc cld cs outsl cmp xchg mov mov or leave mov mov and les push lods popf mov pop fisubr xchg and aad rol cmp jns lods inc stc pop jno mov sub mov pop movhps jbe hlt (bad) cmpsb in (bad) cmp mov add cmc jne dec pop xchg ljmp (bad) xor pop repz loop std push mov out rorb je jg (bad) stc stos fs outsb test cmp mov int3 mov movsl gs jne int mov mov or xchg jg (bad) aas mov mov dec sub lea out adc fndisi(8087 fcmovnb cmp mov jb scas adc mov adcl inc repnz fsubrl test cmp enter xchg push cmpsb ret cwtl sub mov jmp (bad) push shrb call pop enter es fisubr xchg iret jae push fwait jmp (bad) or bound dec xchg out arpl cmc test lcall push mov adc stos scas cwtl lret sbb icebp lret js mov mov dec ret mov pop loop cld outsl and stc (bad) jae jo mov add sub sub nop (bad) mov dec and jne pop in ret xorl push mov lock or les sbb or mov int3 add xchg xchg dec fnstenv sub mov inc (bad) shrb je sub aam hlt movsb jae insb xor mov call pop es push push and mov add lahf and and loope rcll mov jg das cmpsb push cmp xlat out je adc mov jl or jns sub fisttp pop xlat mov sbb ljmp jo push inc popf mov xchg aas stos lcall adc adc mov popa mov mov sub movsl dec xor out and inc mov push test loop leave push fimul lods aas mov mov jbe mov loop rcl fisubrl seto xchg (bad) and call sti (bad) jno pop adcl mov dec ss ret or mov pushf add push and (bad) aad lock repnz cwtl movsb dec dec or das add and in cmp xor push add andb stc pop xorl scas enter mov insl lods lds sahf mov xchg add mov add and add leave lea xor jp lcall lods daa add lret sub jno std dec cmpsl push mov push testb movsl inc pop and xor sbbb pusha or jl cmp outsl mov pushf dec inc in xchg jp xchg push push popf pop fcmovnu in repnz rcrl int pop sub repnz pop adc test push repnz mov xor xor xchg aas cmpsl push dec jmp aad inc scas testb fild inc add scas dec dec mov mov push xor mov jp mov cltd mov outsl mov rorb imul xor jmp shr sbb sbb jnp cmp mov push repnz jmp mov cmp xchg adc out inc xor je jecxz fsubp pop mov mov jmp lods cltd push inc dec ret lcall dec sarl xor fdivrs add jae (bad) mov sti aas int3 dec outsb jb daa jmp popa push rcrl lds push (bad) pop mov pop jg jp pop mov mov and mov mov cmovne rcll scas mov ds inc iret mov jmp js leave arpl outsb xchg stos mov imul jnp jnp dec (bad) mov lea add xchg out inc lock aaa stos (bad) mov mov push sub mov mov sbb dec sbb lods imul es mov in sbb cmpsb jecxz mov add add out (bad) mov pusha pop es cltd xchg cmp mov xchg sub adcl (bad) push mov mov imul pop outsl mov sub lods sahf and popa mov xor jecxz dec lea enter andb in shll pusha out (bad) popf mov or sarb jne out inc ret mov cltd mov xor and inc (bad) imul loope sub mov adcb jg enter jo data16 and mov xor dec (bad) js cmp sbb rol xchg in mov mov gs sbb or adc jge pop jmp and xorl or repnz lret cmp in lock xor lods das dec adc xchg sbb sti dec jne sub ficoml movl in inc pop js xchg mov xor aas int pusha cmp ds sbb jnp cmp pop xchg lods and add push xchg fs jbe mov cmp jge xlat or cmp ret xchg cmpsl test fs scas fidiv mov pop mov add (bad) mov out cmpsb cmpsb and ljmp loope mov mov imul xchg lret and (bad) adc add (bad) jno mov loop or dec out add push xchg (bad) sbb ss mov pop add sub mov imul (bad) pop add jno test test mov jge insl add fstps inc mov pop pop and mov push lods lods lock xchg pop (bad) sub fnstcw xchg mov adc push cmpsl push push dec mov jnp and movsl jne fistpll or movsb clc xchg ret inc mov ds loopne rcl and lret ljmp arpl enter mov push sbb cltd push adc incb sub adc fst sub dec popf jno add or aam adc or (bad) aaa clc (bad) stc stc dec pusha roll fcmovnb mov pushf aas fwait mov std jmp sub mov sbb jbe xchg leave dec dec rorl push mov push (bad) sbb push (bad) movsb (bad) dec ss ret mov push mov in cmp fidivr dec mov xchg or pop push mov fucom cmpsb cs adc sbb jge test add movsb pop int3 inc add std cs rcrl mov imul pop push cmc or cmc or sbb xor inc std pop ret dec jb popa and cli and pop lea leave pop frstor inc xchg push push dec aam fldenv jp loope mov adc sub stos dec jb loop mov test mov insb pop outsb loopne repnz iret mulb xchg ret out loopne push in pusha xchg or outsl and jo nop xor inc lahf int mov (bad) pop cmp jmp cmp sbb lret adc lahf xchg inc dec add fwait pop cmpb out xor jmp mov mov enter outsb mov lods clc mov cltd test add pop mov dec push ret sbb lods inc andl clc int3 xchg pushf mov hlt ljmp sbb imul and iret ds pop and iret mov inc imul inc jl in sub into movaps and sub mov outsb lahf ss sti mov xchg or sarb mov test mov leave xchg push dec in es sub dec adc pop lret xorb lea push inc jmp stos out mov fisub sub cmp lret imul mov addl xchg sub push mov cmpsb int xchg rcll mov mov sub jp mov adc xor rclb dec imul push int3 int ja dec int3 (bad) movsb gs jno loopne dec jo enter ret les decl inc daa jno ds mov pop adc nop rcrb test mov xor insl leave mov shrb lods insl hlt inc rolb mov ret test mov sbb push mov mov jmp (bad) mov jle cmp std xorl cltd fs bound sbb inc imul popf inc or das pusha cltd shlb jecxz mov scas out aad loope sub rcrl les ss enter cmp jo fildll lret fdivrs mov jp (bad) xadd bound mov dec jle (bad) inc sub popf lret sub aas adc fstl mov mov sbb out and sarb cwtl push xchg mov es sub subb xor (bad) pop pop icebp xor imul call or scas xchg out std lsl addr16 lods lds les dec pop sub aas stos sarb enter pusha int sti fimul inc add cld cmp nop fstps repz pop mov jno arpl cmp xchg and repnz add mov jno loopne lret je out test cs ds push rcr jae fwait test decl or push xor sbb cmp shl scas hlt cmp mov sub rolb fptan popa cmc push xchg lret mov mov (bad) daa inc stc mov pop sahf inc (bad) rclb (bad) lcall jnp xchg jne add leave mov jbe xchg mov or xor mov daa psubw lock mov out cmp sbb shrb fisttpll aad add push in lock adc bound add cli scas pushf xchg jecxz in jp bound stc arpl sbb fbstp sub pop push imul hlt into pop into pop jae ret mov fsubl mov mov out out jecxz pop push outsb in push lds push xor iret js jno pushf mov xchg stos cmp cltd jbe xchg fstpt hlt aas in or outsl adc lea imull cwtl jns mov cmp push xor decb mov jecxz sarl inc lret shlb mov stc movlps sbb xchg pop clc dec int jmp cmp jmp mov jge pop lahf ret dec xor dec scas dec leave icebp add lods add les inc addr16 adc (bad) rcr stos inc mull dec mov jns into mov jnp adc adc nop push xchg mov adc jnp lret stos jno jo adc (bad) dec (bad) xor or fs mov and hlt mov pop cmpsl ret jg xchg inc in jb sarb cmpsb mov out (bad) adc lcall subb mov adc aas or in insb jmp add mov jmp popa shll insl (bad) xor inc lret mov in pop cmp dec mov in add bswap dec xchg add jge rcrb stc cwtl jb xchg ficomp (bad) mov out cmp dec xor xlat add movsb or sub mov push bound fbstp scas out and std (bad) mov nop adc inc sub mov cwtl mov imul addr16 inc insl daa xorl xor jnp repz mov cmp fimull cmpsl xchg sar rcl pop pop fcmovbe and and out test stos test mov pop dec sub xlat jae cmp clc out dec mov mov ja xchg xor push xchg inc jl jmp js mov aas (bad) mov cmc dec mov pop push add sbb adc mov mov mov pop stos mov pop adc out shlb iret or jl push (bad) insl inc movsl adc and ret xchg pop fcoml cmp das addr16 jg bound xor and mov icebp or push push xchg pmullw pop ret lods inc lahf sahf mov ret pop mov xor xor sub jl hlt (bad) mov stc add sub dec aad cld jp sub sub cmp (bad) lahf push dec scas ret inc and push sub (bad) push aad in mov dec push push push xor pushf cmpsl push lret es mov push mov push xchg fsubrp cwtl (bad) jmp sub xchg inc popa mov std sub imul in scas popa and les cs and mov iret push xlat mov fiadd call fisub mov inc repz lret je and jg mov fwait adc pop push add outsl and cmp sbb frstor adc inc lret add cmp sub cld bound bound push dec dec add add xchg or inc xor adc (bad) push jb xchg in clc mov mov mov ljmp fistpll pop or jno gs insb popa into loop xchg and cwtl in cmp mov xchg cmpl jae or fdivrs jecxz add mov test movb sbb fstps mov push inc mov cltd leave sbb sahf cmp icebp test not inc pop fdivs hlt shrb sub push and ljmp inc jl adc mov imul jmp sub call stc push stos loopne mov aam subb test xor sub push cmp cld mov arpl aad and fisttpll pop lcall cmp mov xor mov mov stc mov test jl pushf cli scas pop xor xchg bound cmp (bad) and rcll or popf stos xor push addr16 jo (bad) sbb mov imul mov shrb cmpsl dec popa mov aam out jne xchg push mov xchg ret mov xchg pop and imul fidivrl sti ror sub iret sub fdivl das push popa sbb or outsl test dec lret fldcw xchg fnstenv loopne sbb hlt sbb cmp scas leave mov jb js lret loope pop mov inc out jmp mov bnd (bad) rcrl jl or push jno jmp (bad) in stos mov sub mov insl gs or mov xor iret daa cmc roll cmc or popf (bad) pop mov data16 out add add pop lds ret mov test (bad) jno or jnp push jae mov mov mov and dec mov in jecxz mov js loop lcall fsubs enter idivl cmp ljmp push cmp cltd leave and cmp iret mov jno xor es bound mov repz mov popa test mov ret push out js pop xor cld xor andl test ja adc or mov push push enter adc mov lock lahf (bad) fcoml sbb mov inc pushf into cld pop int sub xchg mov pusha (bad) xchg inc dec mov xor jl mov xchg outsb jge jne rolb sahf inc sahf pop pop jle sub pop push push jmp test ss and add notl movsl test arpl in dec adc out cmp call imul and cltd (bad) jnp mov test cwtl call push arpl mov pop mov in xchg add (bad) mov (bad) dec lahf loop add call jns decl jo or test xchg adc add add push dec into repz mov cld sbb or cmpsl mov and dec ror popf add cwtl mov dec in (bad) in add xor adc inc mov mov and pop cmp push push sbb gs jmp mov sarl mov pop or test divl mov jae cmp (bad) js mov fs pop xor mov or in shlb mov jle jno xor data16 mov or lret cmp or cmc jb mov or jbe push addr16 jo inc mov clc out fsub subl fistpl mov jmp push stc pop add mov jl loop add inc or test (bad) lcall jnp vmread xor out (bad) addr16 lods xchg sub pop sar (bad) xchg nop mov jbe fs adc sbb and out in in (bad) ds ret addr16 jl adc add orl rol clc pop dec jp sub ljmp pushf in push adc in dec jmp push sub (bad) jo inc adc test pusha mov push enter pusha jns jge mov pop loope pop cmp inc in pop push pop push adc cmp cld mov push sbb push mov imul test mov pop jp mov jg push cmp icebp out (bad) gs mov dec and cld idivb aas inc scas daa and lods cmp xchg push mov cltd (bad) test or fisttpll imul xchg mov int insl cmc mov scas cltd jecxz or mov negl push stc outsl inc in mov pop dec or jp movsl rcll mov insl mov movsl adc in inc test data16 (bad) mov mov sub mov insl in out es push out sub jl or push cli ja ljmp fcomi movsl ret rorb decl subb (bad) enter sub mov mov push popf lea das dec dec ds repnz jne addb idivl cmp cli or (bad) pop loope xor lret and popa test xchg out rolb sbb lcall mov scas jne xor jns fisub push arpl push sub cmp loopne les cwtl sbb push sbb adcb xchg (bad) scas mov into xchg sahf addr16 dec mov xchg fildll mov popa (bad) mov mov jo lret add jo (bad) repnz and push or out enter and les in pop mov cwtl test movsb mov fucomi (bad) (bad) hlt add out hlt xchg lea cmp (bad) insb shrl bound cmpb mov clc lahf (bad) xor push add cmp cli sahf jno mov or adc mov js add (bad) sbb adc sbbl jge sub inc rcll js imul or pop sub into mov sbb repnz sub mov add xor out xchg imul lret lea pushf test fsubl pop dec mov jecxz je mov mov mov push cltd and and notb js stc dec pop xchg (bad) int3 sbb dec pop sbb popa imul lds xchg cmp call pop dec fisubl les test xchg (bad) sub xor dec (bad) dec inc aam rolb pop pop outsb scas fildll loopne scas jnp jecxz pop (bad) je fnstenv lcall clc cmpsl in js leave cmp test mov sbb daa xchg pop xor out push pop (bad) pushf xchg jg xor push gs pop cmp mov push pop stc pop or and ljmp aaa or scas push popw fwait and mov jo jp insl mov cld aad sbb jmp mov fucomip and (bad) mov inc movsl out xor mov xchg (bad) cmovo out pop sub pop add loopne (bad) (bad) ss andl outsb repz xchg adc test fmul adc sub xchg jg in cmp into inc (bad) jne mov xlat dec add push jle insl lods leave jnp pop shlb push fnstsw jb sti mov add nop sti push lods cmp icebp push repz push repz and testl sbb jae lret and (bad) ret cmp das sub and bound lret stc ss fidivrl lea jb subl jl ret and jno lods sbb pop mov fcoms xchg pop setne adc nop xlat int3 repnz cmpsb repnz aaa rorl stc stos (bad) add cmp scas add (bad) jno (bad) mov clc sub das notl je lcall xchg xor add push leave cmpsb push mov cmc sub cld or cmp dec sbb push popf push (bad) mov lods mov cmp push or jge lds sti imul xor cld mov les push pop test cwtl and xor into pop pop add (bad) push loop xor enter mov xor loop bound and imul mov (bad) leave repz push cwtl adc mov call ror push in dec ds adc push mov stc je mov pop cmc mov jmpw rorl fistp call or dec and dec push arpl mov cli add clc sub fs ss imul outsl ficom pop lds or and rorl int push xchg cli ret jge push int3 push push in rolb xor fisttpll ss add push dec scas sub add data16 enter sbb out or jae adc or xlat in cmp in fisubrl sti loopne mov arpl and das sbb stc sub aaa sub call ljmp (bad) rolb cmp cltd or mov inc jb and adc pop jg adc aam push loopne subl out push ficompl bswap movsb imul mov (bad) ret dec cmp cmp outsl fisttpll jae adcl es icebp dec (bad) cltd test dec mov (bad) cmp add mov lods mov iret mov les andb cli fucomi iret pushf movsl xor das les repnz andl sub loope mov mov ja adc aaa movsl add call fadds and outsb xor push or scas mov dec mov inc mov aaa sbb mov cwtl sub mov xor pop pop sub in mov dec icebp pop dec clc popf ss cltd sti push jle out fwait and xchg push xor (bad) push push inc mov mov popa push dec xchg mov cmp ds cli sub dec out cwtl pop dec data16 cli icebp les push cwtl mov and (bad) dec jl add inc imul sbb outsl mov jne std inc push sub jae sbb call insl imul jp mov nop jnp push sti inc pop mov jbe leave push mov adc mov cmp jns das adc outsl xchg insl loop call jae jb gs add sub gs mov push out aas iret mov cld arpl pop xchg add data16 mov insb stc popa pop (bad) loope cltd jecxz pop cmp out out dec xchg orl leave mov cmpsb scas cmp inc jne movsl insl pop xor test repnz mov inc dec inc xor xchg nop sti dec ret fldl2t add mov sbb enter push fsubrs (bad) (bad) cmpsb jmp sar fs rcrl cld rolb mov testb jge mov lock leave loopne imul mov ror xchg jb push insb into sti insl fistl push push lods dec pop icebp scas add ljmp mov add mov and dec dec push loopne or arpl mov lret push pop lcall or cli push jle fistp repnz stos loope addr16 xchg cs mov add leave pop fildll sbb pop xchg js inc movsb adc xchg (bad) insb xor (bad) dec imul xchg mov test hlt fnstenv ret scas mov or inc adc add das mov arpl scas fcom aaa mov lea shrl out push xchg push test test push inc cld jl and mov pop bound xchg push ds jbe xchg popf sub in jbe mov cs mov mov adc adc cmp push cmpsb fsubl cwtl cmpsb fs mov fnsave fcmovnu popw leave or sub sbb jae add pop mov sub mov and sub cmpsb jno cmpsl xchg xchg dec lds xchg mov imul push mov adc aad adc adc aaa mov jb popa adc cld lret scas fcomps notb jmp adc and push add ljmp insl jno push mov inc rcrl cmc jmp and adc int nop icebp dec xchg aas lcall rorl and pop cmpsb push lea pop out and mov addr16 jne cltd add inc pop aam shl adc cwtl mov lcall repz or enter loopne addr16 mov or fstl xchg imul adc fisttpll clc pop sbb or pop aas sbb test notb jp (bad) push cli das dec loope stc les cld imul (bad) mov dec mov hlt ror inc mov pusha sub repz andb ret jo sub cmpl or inc insl adc lahf xchg jne pusha cli or insb xchg jge pusha es mov lock jo mov xchg stc (bad) call insb call pop mov out jg bound pushf pop lahf loope mov push outsb xor scas and adc jecxz add mov cmp ljmp jb lds and aas (bad) dec cmp mov add mul dec cwtl mov cwtl sub cmpsl fs in testb pop je mov shrl jno (bad) test cs push xchg jg roll inc pop out adc or mov sbb mov icebp dec xchg jge stc mov (bad) jbe or adc into mov popf insl or dec in xlat loop sbb inc xlat in mov jb pop cmc loop nop dec (bad) test dec cmp loopne xor scas inc cld popa test cltd fdivl sub mov scas std jnp fmull fnstsw fistp or cld cmpsb lock out mov movl les loope rcll dec mov dec out jbe cli (bad) ljmp jbe pop xor movsb mov inc or jl adc mov lret test adc int3 pop in and xchg pop je,pn push mov mov jne aam pop and stc bound imul hlt inc insl xchg xchg pop pop xor test repz lds scas lock xor mov loopne bound orl xchg push xor inc jl in xchg and icebp adc push imul fcomi jp cmpsl dec (bad) aas xor cmp jg add mov stc push scas mov adc sbb mov add pop pop jnp dec stc stos push pop or jns pop inc dec and push aas rorl mov add pop in movsb mov inc (bad) pushaw push icebp nop (bad) xor pop loopne push pop push and popa xchg lret pop add and fidivrl outsb jbe cli (bad) ret mov pop adc ffree lock dec adc lock das lret jae sbb rcrb adc (bad) pop cli sub call stc mov xchg lahf and aad cmp test lock jns cmp (bad) aam cmp and cmp enter pop jl cmp dec fwait cwtl and push dec mov ret sbb sub std jnp test xor push sahf mov push dec fnop mov movsb jbe out daa or (bad) movsl mov xor push cltd loopne sbb jo int aas out jbe mov mov (bad) (bad) cmp in das iret xchg pop cmp test xor adc mov scas in test mov xchg xor jp add fisubrl add adc and xorl inc inc iret pop lcall pop pop scas outsl adc pop je xor fnstenv scas imulb dec pushf mov (bad) xor mov ret (bad) jae mov insb mov xchg into fucomi mov stos lock and xor or je fstl arpl out fidiv push out dec xchg ja scas cli xor rclb leave sub aam xchg inc push add sbb mov cld xadd and aaa push in fcoms mov xchg lret je sarb pop xor shlb ja pop push mov (bad) fisub mov clc aaa mov inc push mov mov addr16 mov cmp jae daa lcall add mov std les xor loope outsl sti loopne xchg sbb xchg daa jbe repnz call push fcompl sbb push insb into in jle sub jb decb insl sub lods xor icebp pop enter mov adc orb in xor pop sahf xchg sub mov cld (bad) shl outsl mov (bad) xchg xor dec loope into and bound rolb repnz or andl mov or jecxz psrlq sbbb pusha lods cmp inc lcall outsl inc es leave jmp icebp xchg pop xor dec cmc xor push ficomp in fadd add sub sahf lahf in or ret lds loop inc add dec in mov je or mov (bad) push cmp mov or push int sub fs fcoml hlt test mov mov pop scas fucomip test sub pop mov cmc std subl int3 fadd add pop sub call mov imull mov mov push or pop ja sarl lods lds xchg xor pop sbb flds push aas loopne cs mov sbb repz xchg sbb nop loope push cmpsb sbb jnp mov aam or mov adc add or aad mov xchg jbe push scas adc (bad) push negl jge xchg pop daa (bad) repz mov mov pusha jp or aas or stos add pop es mov push cmp jae inc push xchg mov dec js aas imul shrb cli mov shrl dec clc xchg pop pushf xchg cmp repz jno dec pop popf jo popf mov loopne sub movsl ficom xchg cmp dec sbb add jg pusha mov rcrl jecxz pop cli stos ss mov arpl or adc out jmp (bad) je jo or adc gs fsubl pop push mov aam test push adc or mov (bad) stc dec and adc and int3 fcoms test dec mov int xlat int into (bad) sbb arpl pop or std bound insb in lods push mulb mov pop mov out xchg or aaa gs ja pop das scas loop jmp mov dec adc iret jge inc in pop movsb xchg add cmp jbe (bad) jl jle out arpl std hlt fs fcmovb mov add sub test mov mov (bad) sahf pop mov xchg ret shlb pop loope loope test addr16 negl push (bad) lods cli or mov (bad) adc or sbb push cmp cmp mov mov pop cld and push sub jle pop pop adc data16 xor sbb (bad) mov xor test bound cmp mov cld insl out jmp insb jnp push in hlt or mov dec push (bad) sahf outsl dec mov mov and push sarl add cmp jge jo inc stc ss sahf clc insb dec pushf dec sub scas jmp inc mov cmp pop xor jnp lds leave jecxz mov movsl xor iret push pop mov cltd incb imul stc or xchg jp xchg test and rcl stos or negl jb fcmovb stc inc pop test addr16 mov pop in lods mulb dec adc jo in clc scas sub push ljmp test xor (bad) fsts popw (bad) mov sbb cmp lock add sub gs out (bad) aad mov stos pop rdtsc arpl fstpt push outsl in add cmp out adc jno mov das (bad) or push pop mov pop push fwait jecxz gs xor or fild out jo (bad) loop add outsl push jg inc sbb sub in ss lods mov fs pop sub stc inc mov cli (bad) fisubrl stos xor or xor inc inc leave sub rorl js xchg fcmove mov mov mov add dec cmpsl push mov mov inc inc xor pusha test xor lock mov and mov pushl add dec (bad) sti test imul cmp mov outsl pop add loope push ret cmpsb and and adc pushf and pop jmp cs repnz mov ficomp mov and mov mov dec cmp (bad) jbe cmc add pop mov inc pop dec inc sub ret add cmc cmp data16 cmc outsl addr16 int push lock pop shr or inc mov sbb inc cld jnp push cmp imul cmpsl or enter mov cmpsl mov cmp mov mov pop adcb aas aam jge jge sub rcr outsl pop call dec stos jns leave mov mov scas add jge push (bad) and and inc scas mov sbb in out mov psrlq cmpl stos mov mov push in add fldenv mov stc push xor repnz push das cli add mov add mov and cmpsb pusha push out mov pop cmp fistp and jb out cmpsb jnp dec push hlt push jmp lahf (bad) xchg xchg sub (bad) and out outsl adc shlb dec mov push out mov push pop inc jo cmp dec pop pop rorl push or mov jp or jecxz and jge pop mov lods lock jns xlat jecxz inc cmp and test bound popa sarb dec stos push int3 or lcall (bad) test sbb andl xor pop into adc test notl popa stc in (bad) xchg sahf xor push cmp sbb mov popa dec (bad) shll outsl fnsave xchg pop adcb in into dec pop and inc sub int3 stc movsl popf subl inc mov or inc mov out cmc and dec pusha inc mov mov add jo call adc or sbb shrl test push pop adc xor (bad) mov repnz lods push dec das or mov repz popa inc push fsubs test (bad) jno adc fldcw cmp test pop cmp inc xlat pop inc popfw clc lcall pop mov repz out (bad) xchg cmpsb push lock aas in cltd ret lods mov cmp add cmp cwtl aad out pop jl and out adc inc pusha mov add std lret lret mov ret pop or aad xchg (bad) (bad) xchg sarb add test mov jns or inc mov cli addr16 jo add sbb enter into cld lods mov xchg std clc fsubrl xchg sbb in push or movb test addb xlat leave sub subb ss push adc pop (bad) mov cmp (bad) pop out mov hlt repz inc stos stos and outsl jecxz sbb shr push int3 test (bad) cmp xchg or mov jle inc out pop push into dec lods mov jae fisubl cmp jnp push lret shrb imul out dec push xchg (bad) (bad) sbb mov mov sub or shrl jge (bad) xor mov sti inc les or out ret mov pop jo stos mov dec in jl les popf cmc push mov nop imul jno test mov push sub mov adc xor popl dec ja xchg and pop mov sbb xor fdivr mov stos add cltd je inc mov ret xchg out push cld adc in sbb xor xchg das xchg or inc cmpsl rcll pusha pop into mov lahf jns (bad) (bad) sti sub ja jl lods lock fucomip push pop dec das cmc daa (bad) mov or mov iret repnz test xchg jo push cmp mov sub pop neg jecxz ljmp mov std aas pushf jb comiss lods inc sbb adc inc rcr dec aaa idivb cli jmp add mov int mov add add cmp push data16 fsubr pop int and xor jnp mov pop ret mov add sub push sbb das cmp scas es dec nop jnp loope mov push rorb (bad) (bad) lret ljmp mov aaa dec repnz mov mov cs fs cs (bad) cmp jmp xchg pop xchg inc jbe xlat (bad) rcll sbb (bad) add jno jmp call pop inc mov test clc pop mov jbe push pop leave adc jg (bad) cltd test mov lock insl mov (bad) movsb inc push mov xor aam inc dec sub scas lock jmp mov and pop mov fldl pop inc fsubs mov mov mov rcll push lock xor pop mov pop ja pop pushf push mov enter mov xchg adc (bad) mov add int pushf mov xchg mov pop sub lea mov mov mov ss mov xchg jecxz sbb shl es aad call loop int push imul cmp and mov xchg sub bound and cmp lods xor or cwtl dec push sub cmp bound mov push dec pop nop xor in das mov (bad) inc inc xor mov hlt xchg or (bad) or fistl fwait sub add push xor negb cmp es pop outsb jmp js out sbb sbb lods movsl (bad) sti aas inc mov adc pop xor sti pop (bad) jl cmpsl test jno lock pop pushf in mov mov cmp xchg push sub (bad) cld movsb repz aas and movsl mov or fsubrs subl pop stos in push lcall loope sbb fiadd mov xor mov mov daa (bad) insb (bad) sub (bad) sub mov cmc sbb or sub loopne pop fs jae add jno (bad) and in add mov and imul xchg dec sbb sbb dec cmp or pop xchg orl mov add dec cmpsl sbb pop inc loope mov add daa daa sbb mov addr16 das jno xchg mov lret enter inc pushf (bad) push rolb mov mov cmp dec call repz mov (bad) and mov ss cltd cli cmc and outsb outsb cmp cmp mov mov add (bad) mov int3 mov xchg xchg cmp add mov hlt enter sbb mov jne lcall jbe insb data16 test adc lds pop (bad) pop xor ss cli lods pop in inc movsb jnp pop (bad) adc push jns test rorb ljmp mov add lds enter push mov xor and or imul dec push push xlat jmp mov div jbe mov push sbbl add mov xchg xlat lret push xor sub adc in pop dec add xchg call stos ljmp mov out in out push mov lock dec out je imull push (bad) (bad) sub push mov xchg xchg or pop and aaa mov xorl sbb les adc push iret xchg insl pushf xlat scas inc arpl push add jb (bad) dec lods and lret leave test add repz cld ss lods in cli ljmp dec push or or cmp inc fmuls js jmp mov sub jno enter or adc mov arpl sub popa pop cmp xchg ss ljmp xor push lods (bad) int pop jmp jecxz adc dec inc in int (bad) pop jo adc leave jecxz or out outsb xlat ja xchg insl or gs or and das test sbb imul or loop mov adc sbb repnz imul jmp xchg sbb adc or int iret xor (bad) js pusha add push push mov ds and bound in (bad) fucomi adc add mov ss std out cltd xchg insb dec adc jle enter je clc jb cmpsb push mov rclb xlat jnp adc rcr sbb pop repz rcl mov (bad) (bad) or dec lret gs negb lret inc add roll xchg pop dec jns popa push dec jg aas call inc mov mov and (bad) lret mov loop inc popf std pop mov push hlt mov fistpll int3 mov xor jbe mov lea inc cltd sub jp inc mov pusha or in mov pop and rclb push cwtl test cmp fimull hlt test pop mov push scas push push (bad) and cmp xchg xchg xchg sub aas jnp movb lods sub mov and xchg pop in hlt sub inc cmpl cs fstps sbb dec mov sarb add sub and clc xlat divl in ret xchg in mov ror lcall leave sub (bad) hlt dec sub iret jecxz dec out push fwait add mov daa sub mov adc sbb mov add or psraw fmull mov orl mov dec es fsts scas cmp push movsl rolb ficompl aas xchg mov lea fcoms flds mov scas outsl mov (bad) fldcw lods fild (bad) pop and dec stos popw lods jge fdivrs test mov inc getsec (bad) xor mov sbb mov push fcmovnu std mov sbb popf and push sub insb xlat xor pop cwtl stc adc jno xlat pop mov pop scas lea xchg fimull roll jae (bad) icebp xor add jns sahf cltd inc pop fwait rolb cmp popa push fcompl (bad) loope sub outsl int push inc stos icebp daa (bad) or inc mov mov cs sahf sub fisttpl pop loope cmp xchg out mov out out jmp sahf mov lods cmp (bad) lods cli cmp xchg call mov popa adc lds (bad) sub xchg jo jecxz cmp pop pusha mov lret test outsb mov jns inc inc lret inc pop cwtl pop stc mov rorb pop push and sub dec inc jge ja push fwait dec or test xchg xor jno rcrb nop inc cmp xor shrb sub push xchg nop push mov dec outsb inc fcoms fsts lret sbb xorl mov stos xchg mov add repz xor add stos fcomps (bad) out pop push lock in jbe cmp mov dec aam dec and cmp and inc push push fmul cmpsb mov lods xor pop xlat mov mov iret or mov fadds cltd dec sbb and inc cs push mov dec icebp or arpl inc rclb es push cmp clc es dec shrl scas mov inc lret loopne stc outsb add xor push aam mov in xchg xchg popl fisubl dec fstps pop out int cmp and fchs iret mov es cmp sbb movsb or pop pop sub ja imul es push xchg sbb (bad) jno out (bad) lds cmp cmp insb repnz mov shr arpl lea out mov mov cmp and inc lods test sub add sbb xor adc loop mov dec fcompl lret cmp mov push imul das cmpsl mov clc mov xchg xor inc das (bad) adc mov std pushf jmp and icebp xor outsl dec mov jo in andb pop push shrl lods ss int3 icebp inc xchg xchg xor push mov lcall mov sbb (bad) fbstp pop fwait jbe sbb test jmp leave push push inc fcmovb xor scas lret adc add in lods or mov rolb cmp femms inc sub cmpsb lods rcrl dec cmp cmp xchg mov jge jg pop xor pop jle popf insb cmp out loop mov dec sub xchg je not mov fstpt xchg dec push dec xlat mov push xor sub xor or mov scas lcall cwtl int mov std leave dec mov mov divl ret mov dec dec push dec adc enter jmp add jb in fwait das jge adc data16 and aad jmp inc xor les and or lcall and icebp lock adc inc fildll scas xor and add or enter mov outsl in das jne int shrb xor loop xchg cmp jecxz,pn test push scas adc in aaa mov subb cmp pop data16 push xchg add mov imul les hlt cmp imul fist leave pop or bound sub lods cwtl ficoml loopnew call inc shll sub pop arpl mov je jmp mov pop xchg sub ret cmp out imul cld cwtl mov rcrl insb dec or xrelease push sarb arpl call lock mov jmp inc repz or cmp sub stos sti stc xchg jnp or and pusha xor out ret loopne test sbb fdiv pop jmp jo mov test add sub stos xchg cwtl mov sbb xchg pop out jmp je daa (bad) ss js mov adc push cmpsl out mov pop (bad) mov mov test (bad) stc mov nop loope and cmpsl xor jo push dec sub daa jb out (bad) enter loopne and stc mov mov shrl fnsave add sahf ljmp jne jmp mov rclb push add dec pop adc fwait popf cltd add pop out jge enter cmp std cli mov xchg mov xchg add es aad lods pop add add mull fidivr add (bad) fldl sbb es adc subb (bad) xchg psubb aaa adc cmpl pop push xchg das aaa xchg mov adc inc mov test adc in lock push mov lret dec dec cmp pop pop outsl lahf loopne mov adc cwtl jae jnp aad mov jns sbb or sub movsb ds xchg sarl or jnp xcrypt-ctr cmpsl faddl int inc xchg imul dec gs pop adc dec loope inc mov mov push imul je clc sub aaa les outsb clc adcl ret inc ljmp in mov push stos push jmp out (bad) push nop mov test jge js fildl or test imul xor xrelease xchg in lods rolb insl bound test popa xchg inc and adc push int adc sbb inc fidiv test test paddsw clc pop and in lods (bad) and mov pop mov sti jle sub call arpl or mov mov (bad) leave and mov int3 mov and pop jns pop pop hlt or lret adc mov loope test cs sub adc pop xor pop xchg fsubp ds sub and mov cmpsb xchg aaa inc jno and test test loope xor pop clc ljmp cmp pusha push jb into scas sub push aas int push lret mov push and leave xlat adc mov and shrl stc test lcall int3 cmp sahf or or lds sahf cmp xor or pop dec dec rcrl push les jge sarb pop sub mov mov mov (bad) and aas push daa es adc mov lods xor out in arpl std sbb insl inc out dec sub imul sti jmp sub stos popf pop ror insb xchg mov std adcl lods dec add hlt adc jmp data16 mov fisubl scas outsb fmuls jmp (bad) rcr gs idivl xchg jmp stos sbb loopne add mov iret scas movsb enter frstor imul inc pop pop idiv jle (bad) dec sarb xor pushf xlat (bad) pop xor jmp push (bad) aad cltd ret test add ror cmpsl push pop push std mov sub inc insl xchg fidivl cmp fwait xchg mov repnz fst sbb in add jmp sbb ljmp dec movsl sbb (bad) pushf (bad) mov xchg mov push mov outsb add or mov lea jns add cmc cmp mov inc pop lahf xor aam mov rcrl sti inc or add mov movsb push enter pop cmp inc xchg add gs jge daa jne dec sbb inc sbb adc sbb xchg fwait lret lret cmp sub test xchg push inc fs je lods hlt stc push ret divb hlt add ljmp xchg cmovge (bad) mov ss daa mov icebp add push data16 (bad) in push js jl adc push and inc push push sub push sahf cld xchg ds or pop jle aad cmp sbb cmpsl push mov sub cmp aad sahf call insb pop sub test xchg test push cmp pop xchg adc bnd sub jmp push ss stc and lds pop pop mov lret xor cmpsl cld xlat mov jnp scas jnp cmp lock call in stc push inc mov aas jp xlat cmc jge pop xchg cmpsb out xchg and insb push int and xor cmc out push loope loope popa pop mov mov orl lret pop dec sub scas cmp push xchg cmpsb xor xchg xchg push mov sbb into je cli idiv mov sahf subl gs push cmpsb int negl jae addr16 dec or int pop pusha sbb or aad lcall rorl shld nop mov aam xlat and daa and enter mov das test ficom mov dec xchg mov (bad) push sub mov (bad) cmc imulb out pop (bad) shl mov push and shl pop sti pop arpl pop push inc jnp mov stc pushf fmulp push cmp cli int in decl int pushf insl adc xchg sahf mov sub pop cmpsb pop roll sub lret clc and push out sbb (bad) push jl (bad) mov clc mov and push enter (bad) pusha jle sub xor subl insl adc sub inc mov clc js ljmp lock jbe push test lods (bad) pop mov in jnp nop jecxz sarb lahf pop cmp mov bound mov pop push imul mov out stc sbb ret out xor and es mov mov jae fsubrs xor cld bswap fsubrl adc add cmpl addl push out in pop add sarb loopne cmpsl xchg test inc or add addr16 test push sub inc lods add setb mov inc adc sbb rep mov add jno jmp in mov pop mov into stos mov add fidivl and (bad) lret inc pushl sub push xchg out cmova cwtl aaa mov fisttp lods add adc mov mov mov out adc js out inc mov into inc sbb gs int3 lock pop mov imul int3 sub dec fcmovnbe in push mov leave mov xchg mov xor xchg stc stos mov mov pop xor repnz add sub js bnd es out (bad) or push and mov xor fnstcw push mov cld (bad) mov sbb mov dec into test out stc shr in adc lahf push mov xor jb int test jnp (bad) push ret push xor dec fs xor loopne mov inc insl loop in vaddsd mov dec das or enter sub xchg repz jne das sub out dec in int3 push repz adc aas leave adc std outsb cmc adcl (bad) sbb movsb jno inc stos fxch fisttpll pop cmc out jmp add mov pop xor cmp popa gs dec jecxz xor xor add (bad) in pop test xor fdivl ds sbb adc dec inc pop sahf add adc dec sbb jmp ljmp daa mov and jnp mov cmp push bound movsb push xchg xchg mov and cs cmp push and je sahf push push and ja pop gs xor xchg mov mov dec shl jmp in out push pusha dec jns push mov scas mov xchg lcall jp (bad) call lea sbb jmp jne lret std xor mov test mov push inc int sub push jecxz rcrl int3 mov lds dec clc mov rclb or xchg jbe fisubrl mov (bad) jg dec mov stos xchg mov lds je mov rolb add cmp icebp fisubr sub icebp inc xor push jne adc jle xor (bad) cltd (bad) jbe add jg clc jl aam inc or xchg orb jmp cmp cli sbb scas icebp repnz adc into in int3 cmp aaa mov push int dec jmp mov push jecxz cmp shl add mov sbb sub jg lcall jge or into mov lcall inc push fsubrl movsl popa movsl dec jns dec cmp xchg jg loope (bad) pushf mov fidivrl ret xlat sarb xchg sahf andb sahf cmp (bad) out cmp jl mov push fwait outsb mov addr16 mov lcall dec inc clc pop mov lds pop xchg negb lods fnstenv or push arpl sub pop inc loop aaa stos adcl pop sbb pop ljmp shrl leave test sbb jg andl scas je scas add negb mov in popf mov test lahf push dec int3 lahf not out lea fdivr in fidivrl inc pop pop addl stos xlat push xor cld roll dec stos push and lret addr16 scas jp mov ds mov lea popf cs add arpl enter out repnz adc clc pop pop add jns jb adc sbbl lods cmp jne push pop in mov das mov (bad) (bad) data16 mov dec xchg movsl pop in sbb loopne insb in out insb inc inc pop cmp leave cs sbb out sub pminub out inc adc jne test ds (bad) or jbe fisttpl lret ja adc sahf xchg inc mov pop push mov or adc push jp mov addb lret mov mov mov (bad) in mov push mov or or add cmp shr add jl push stos stos and (bad) sub mov insl out dec dec outsl xchg xchg rcrb fmuls pop add inc aam test dec mov cmp xchg test aaa jmp aas enter and lret adc adc pop insl or jecxz clc daa pop cmp fldl movl ds iret pop (bad) sbb insl jmp enter hlt data16 test fidiv test mov sub imul jg jns mov xchg push mov and and jno jecxz mov hlt and add clc mov jle insb sti sbb adc pop mov jne push movsb jbe ljmp jge movsb daa adc int (bad) aaa (bad) cmpsb adc shl adc push rcl jno sub xchg test ljmp in ret scas (bad) jns inc xor rorl pop icebp imulb push jp daa imul inc fstps test pop mov jp mov out inc push fldl cmp jmp in mov popf ficoml dec sbb (bad) sbb pop clc pop mov fldcw mov (bad) lods push movl das outsl adc mov or sub sbb pop test mov insb movsl jae adc pop push cltd int jae sbb sub inc push bound lods out repnz cmp add pop jb scas push lret lea cltd fwait ret fimull sbb repz cmp (bad) xchg cmp mov iret aam cmp mov push inc test push mov adc repnz jnp sbb mov (bad) sahf dec push sahf mov imul movsl loop faddl lcall das mov cmp les lahf push mov ret (bad) push mov ja lahf push aaa shlb xchg pushaw sbb out addr16 xchg in out (bad) scas clc iret mov jns adc adc clc mov mov push addr16 jne jg ja cmpsb mov out loope in mov xchg mov xchg xchg repz xchg lods lock ret nop pop mov xchg inc outsb cmp scas lds rol pop mov stos or cwtl sbbl fnstenv imul dec jbe mov sub jp test mov bound jmp jmp xor mov fs or push sub push dec shrb push xor es xor insb mov lods cltd into jecxz imulb sub mov lea sahf ret inc cmp sbb lods inc and sbb cmpsb inc and jbe lods pop cld in sub cld jns push xchg out and mov ss inc mov (bad) mov xchg pop pop cs insb jmp in stos cmp outsb and jo jae daa outsb jge jo cmp pop sub mov call in dec jge cmp popa or clc jae xor arpl daa or stc je std out dec outsb popl mov or xchg out jge sub lea pop and pushf ds sub adc mov push push mov mov xchg push sub xchg pop movsl sbb jp mov cmp mov mov mov xor and dec pop pop leave loope aam xor rcrb in cltd inc aam mov jne add cmp addr16 sbb xlat dec fidivl or mov jno cmp fld adc insl or inc xor jnp mov adc or pop xchg (bad) push sub mov arpl stc sbb xchg pop mov fstl bound (bad) lds mov test inc jg aad lock jb push ret ja xchg and addr16 fistp mov jae xchg sbb fwait psrld cmp (bad) out iret adc sub dec insl push iret mov mov leave or mov pop mov sbb push pop push push lret xchg push les xchg movsl pop loop,pt nop push jle dec lret movsl mov pushf (bad) mov mov sub test xlat jmp xchg loopne mov jmp cli aam pop ljmp cmp pop sub in stc popa (bad) pop aaa push push ja and xlat sub sub (bad) ret and or movsl fwait cmpsb cli mov mov out xchg pop fistpll push enter jle daa mov imul lahf dec add stos mov pushf adc (bad) mov es xor arpl xchg enter or sbb (bad) cwtl (bad) xchg sub jae hlt roll (bad) dec ljmp ljmp in jae lret in test dec mov push mov popa mov lret mov loopne out inc cmp cmpsb cmp ret mov mov arpl xchg inc lea and push mov add sbb cmp push daa (bad) dec and iret xchg stos pop stos stos in cmp mov fmul fldl jp pop jb xchg sbb push push mov test imul mov pushf aad mov push xor stos and cmovbe in mov daa lds dec xor push push in movb xchg jg cwtl sub add (bad) dec mov int3 push or in xchg mov movsl lret pop sub aam pop adc shrb insl fwait test lea pop mov jle mov dec mov data16 adc dec (bad) jl push shrl cmp jae call aad xor dec sub inc movsb ret rcll dec (bad) xor cs daa orb sbb pop dec jb imul loopne sbb xchg loopne out push ret inc fcomps popfw push popf cwtl or cmpsl loop or mov shll out in test inc mov xchg dec pop daa idivb ret sbb lret shr push nop push mov sarb inc and add xor dec test cmpsl addr16 xor mov add mov imul inc push mov mov mov lock mov fcoml sbb sarb stos adc cwtl lea push inc cltd inc pop adc mov shrb cmpsb imul (bad) (bad) xchg mov lret pushf js add adc mov shrb or arpl adc xchg inc adc pop mov dec xchg bound xchg int mov push push js rcrl mov push sbb xor out and out lods xor mov xlat mov add lock in push (bad) xchg fwait push sub sahf lahf (bad) fnstsw (bad) pop pop dec cmp add repz (bad) movsl xchg fdivl int3 lock and inc mov aad xchg data16 mov rcll cld int dec adc or imul loope dec outsb lret xchg add or enter inc insl mov lods adc xchg lcall push push or (bad) ljmp fs pop xchg and loope jl shrl cmpsl in (bad) jl inc cmc fbstp ret mov nop mov setne push loop mov push push bound inc sub scas sbb insl das dec and jo je ret cmp and outsb lods bound inc pop mov cmp add xor ss or push xchg mov mov xchg roll ficom cmp mov call pop jmp cmp cltd insb iret cs mov dec pusha fistpl iret loop sbb jo sub sbb scas outsb ljmp inc adc xchg loop cwtl sub and or in push mov ds push cmpsb (bad) cmp push repnz jmp dec outsb add dec pop (bad) rcll pop push sub or ret xchg jle adc xor mov xchg pop in in cmp pop ds insb sbb inc pop push dec jns adc (bad) xor adc push cmpsb or pop add adc cmp adc pop push add arpl lahf cmp xor adc mov inc xchg xchg dec xchg adc sub mov dec enter mov mov insl insb inc pusha lcall inc frstpm(287 and aaa loop adc mov push icebp mov cltd lock mov jge mov jecxz mov dec stos jae sbb dec (bad) inc mov in push (bad) bound xchg jne pop adc jb (bad) dec dec cmp das mov mov and pop lahf sub cli pop aad pop pop negl stc (bad) aaa adc and int ja outsl dec stc fidivl sbb sbb int3 clc mov sbbl (bad) pop dec (bad) lahf daa sub jno add cld mov jo cs and cld add cmp push inc mov popa sbb addr16 icebp ror pop mov pop popa fs out repnz gs loopne sub nop cli shrl movsb cmp or sbb pop mov loop dec sub cmp xchg int mov or insb fist setg pop jne,pt xor fwait xchg push dec sti inc cmp mov push andb out push add xchg mov and jg jp xchg mov movsb or test xchg pop and aam shr movsb dec mov inc mov jmp pop fwait push jmp push and inc aad (bad) lret mov insl loop pop sbb (bad) stc cmp fldenv (bad) cli imul jno fidiv (bad) popf dec pop xchg arpl data16 pop and add aam mov inc rcll cmpsb xor sub mov sub mov cmp push gs int3 scas imul mov ss loope rorl pop adc mov inc jge sub mulb js iret movsl fsubrs inc adc stc in (bad) stc out and enter inc jnp or ret push jge xchg aam mov cld mov xor in lods addl into popf cltd daa int3 imul int dec add in movsb call inc pop arpl and or jno bound gs lea in cmp xchg int int3 sub outsb decb jle pop mov and lret sahf hlt sub hlt push jge shufps aas cs push push lds mov movsl jecxz jns pop jl mov inc xor or cmp and call adc into fbld mov stos insb mov or outsb (bad) leave mov xchg arpl cmp inc pop leave cmpsl push mov mov test or jp cmc adc xchg mov enter push sub insl in cmpsb mov dec xchg jbe jnp incl in push (bad) sbb jecxz (bad) dec pop fmull popf cmp imul xor fs fwait scas push push (bad) cwtl push or cmp mov xor add cmp ret cwtl mov icebp or popa adc mov jp xor xor adc xchg mov call add add mov adc loop jge pop out icebp ss rdtsc js xor mov ret jmp bound data16 pop notl nop mov ja cmp ss adc jmp lock mov (bad) mul (bad) js xchg lods insb mov call or jp imul xchg pop pop sti cmp int ficoml scas divb adc mov test inc (bad) xchg movsl rorl add inc sbb mov scas and push mov push xchg mov test and push imul in sbb jg and and test into daa aad push pop movsl jle mov adc inc sub inc xchg push cmpl cmp or jne ret div outsb and push loopne adc mov iret rol xchg in rcrl insl imul (bad) cmp pop adc ss out push out add clc (bad) stos sbb movsb aas add sub adc movb sbb push (bad) ja sub jmp icebp mov push mov xchg (bad) test dec push push clc stos mov dec mov xlat ljmp out (bad) aam cs add or mov push arpl mov repz dec adc xor lea idivb mov jmp adc sub test imul movsb movntq mov data16 into cmp xorl pusha push sub hlt stos push inc outsb mov add aad xchg inc push out outsl pop test xchg xor mov jle cld mov lret shlb xchg push jecxz dec sbb (bad) stc (bad) adc call imul push pop mov test mov test es adc aad cli addb xchg adc cmc outsb test jmp mov inc xor stc add test pop push mov mov mov popf (bad) das xchg mov rclb xchg xorl fnstenv out jo dec push cmp and ljmp gs cmp push xor adc lods jbe xchg lahf adc mov mov inc dec or out insb push add sbb adc sub inc sbb je inc cmp lret das fldt xchg jp cmp cmp test pop dec jge mov stc gs sub aam (bad) and mov scas sbb rcrl je jecxz cmp xor cli movsl jae xor or cmp sahf jo lret mov aaa call pop jmp (bad) push cld scas enter push inc mov fstl add inc js pop leave mov fdivrl (bad) test aas and sub lods xchg jmp cmp pop ffree ret sbb mov lahf idiv addl sbb xchg adc in lods xchg jge lea roll dec or sub cmpb add inc sub mov outsl jmp test and sahf js gs lods sub or int (bad) call jmp fstl mov nop das mov pushf aas in (bad) jmp and adc jle clc cmp xchg push jg cwtl mov pop pop xor aaa lock sbb inc mov pop adc (bad) mov xlat aad fildl and sbb mov pop pop or (bad) xlat or (bad) pushf outsl sbb xchg fsubs orb push and jg outsb in imul sub xchg or and stos pop (bad) jns sub pop imul inc test sbb xor and out in lods pop inc test xchg pop sub mov xchg popf sub neg inc jne mov push enter stos stc icebp mov mov cmpsl dec dec mov push and in lcall inc fwait and pop jl (bad) inc lea and mov and (bad) ret jns (bad) xchg sbb push dec pop xchg add nop cltd outsb call iret loopne or sub dec outsl push lret notb cmp movsl lahf add out xor test push mov dec sub or ficompl jmp add popa imul sub mov sbbb add sub dec mov bound mov push jmp mov cmp mov xchg jle dec nop je xchg mov and fidiv jge sbbl dec push mov test xlat jnp imulb push xorl mov pop aam loop jns and xchg sbb scas mov or outsb ret popa xor pop inc pusha shl mov insb enter and in in int3 imul in jne faddl mov mull (bad) outsl adc add fadd scas daa ljmp mov insb sarl mov popa sahf xchg imul lret aad das loop mov cmc cmp add mov pop sbb adc imul (bad) mov and jo push clc sti sbb mov xchg or movsb cwtl xor jne lret je dec (bad) (bad) mov shll hlt xor mov sbb scas dec add arpl lea loop jae out mov les js hlt add scas ss outsl xchg pop insb pop popf dec mov bound ja cmpsl mov jbe jmp cli sbb or xchg sbb (bad) pop xor or push into in and mov xchg xor or pop adc xchg xor jns dec sti push int aam cmp sbb mov cltd test sub aad adc aad push add dec push sbb lds mov cld xchg cmp lock mov js icebp sbb pusha fiadd inc lret daa jge mov loope fs adc lea or adc test (bad) jbe imul aas out test or push xlat and pop cwtl sub xchg in jns daa cs add sbb inc cmpsb rolb jl pop cld aaa jne (bad) xchg add leave (bad) in popf fdivrs loop popf cmpsl js sarl jge jecxz aaa sarl adc fcmovnu pushf mov sbb (bad) cmp mov out sbb inc cwtl test insl adc orb aas dec out sub je add pushf lcall or int3 in adc xchg fdivs popa xchg lods shrl cmp add jae sub testl test rcr (bad) ss xchg (bad) sbb shrl sub fildl jne mov pop imul je or jge mov sbbl mov dec outsb notl and xchg cs xchg popaw adc mov data16 xchg repnz pop cmpsb rorl xchg lahf push inc popf push addr16 pop popf mov test lea ja sub mov and dec testl js jl je pop daa sub cmp stos and in (bad) lret xor inc pop imul adc (bad) test fdivp dec (bad) mov sub push cmp jp fiadd sub call mov popw aas xchg xchg xor pop cmp scas jno popa dec cmp adc pop pusha call mov xchg pop pop push gs (bad) mov arpl jmp add je mov mov movsl iret fs inc pushw cmpl in imul dec (bad) xchg sub mov int out out addb jl loope test fldt cmpsb dec ret aas fldt es add mov sbb inc iret adc aas sub mov rcll pop daa mov dec insb cwtl mov outsl les (bad) je xchg fistl xor inc xchg stos scas mov fwait sub daa ss push lret pushf jmp ret adc jnp imul iret xor (bad) push and into (bad) aas xor inc in insb std inc mov movsb out jp out mov mov inc or push enter outsb lods cmp lret int mov add cmp lds testl lret mov mov jecxz (bad) jae lods xchg cmp hlt sub stos jnp push aas int3 jecxz data16 pushf mov jb jge adc mov lock xorl adc jae add loope mov out (bad) imull daa push mov fs aad lahf dec jle jae push rcl cld int3 loopne sub ret dec add mov popf adc mov push cwtl dec pushf jnp stc dec sbb add ljmp dec lock mov sub (bad) lds mov dec int3 push insb dec mov aad inc mov mov cmp aad sahf mov xor (bad) fiadd repnz mov xor stos iret dec push stos jb shrl or outsb cld (bad) xchg xorb stc xchg lcall sub int3 sub push inc (bad) ret incb cmc test ret fbld jge mov leave sahf xor stos pop ret jnp lock std fbld sub lahf pop stc outsb imul inc sub lods in clc inc outsl clc sbb dec xor aad push cmp sub dec aas push mov push mov stos (bad) cmp and push roll xchg int3 mov xchg test mov frstor aas mov cmp jne sub inc inc push or into xor out xchg lock in scas lea imul xlat inc fwait cli mov insl cmp add push jae (bad) int3 pop in sub adc sbb (bad) xchg pushf stos push adc push push push and cmc popa in outsb orl cmc xor jo pop cmovno xor push sahf in add cmp cmpsb cs pop std cltd dec loop in pop and aaa add cmp fwait addr16 sbb stos or cwtl aad dec pop or popf movsb jb aas pop pusha int3 jg inc inc (bad) add rorb jo cltd fisttp sbb test loop push cmp mov pop fidivrl jns lock in xchg movsb in stc fucom push lret call sbb inc out sub in mov fisubr sub cmpsl mov shrb fmulp mov xchg mov in inc cmp out or daa or andl push fs scas push dec fcompl lea cmp int3 mov inc popf sti pop dec pop dec cs loop pop jl cmc enter jmp rorl xor (bad) add ljmp lods add scas push adc lods or loop pop (bad) repz inc add mov mov cmpsl in inc ljmp xor cmpsl fisubl sbb lret pop jg pusha push loope push sub out sub aad addr16 mov xor je mov repnz imul sti int cmc ja xor push lahf movsl jns sub jns (bad) shrl cmp sub dec adc mov add and or test xor int3 (bad) mov iret daa repnz push pop mov je mov jmp (bad) jns outsb adc sahf and jae jbe fimul cmpsb add xchg popf loop cmp fstpl push add mov pop cmpl add idivb sbb dec mov and dec jnp and jmp loope sub inc ret pop pop cli jb add inc push and jo ja mov (bad) adc in dec adc jmp mov je sahf test loope jecxz ret mov jo cmc mov push out call lods mov in scas movsb stos movsb imul call sub pop orb mov sti test loop imul nop push daa in mov daa mov ret xor lret out inc push mov lret addr16 aas fwait mov addb cmp cmp mov outsb in mov push into xchg jnp inc inc addb cld in inc push loopne out mov dec fidivrl repnz jmp mov (bad) mov lock xchg cwtl pop sub xor pop dec add xor pop (bad) push movsb pop ds jg pop aam jmp cltd movsb divl in (bad) or hlt inc enter jnp testb dec sub divl xor add daa and (bad) fcmovu push xchg test adc push (bad) dec (bad) (bad) add push mov rcrl pop faddl rcll push test dec sbb jmp fbstp xchg push ret xchg mov add cmpsb testl lds or loop add movsb test rcl pop jnp cmp adc xor pop inc adcl loop add push cld dec lock cmpsl cli jbe cmpsb xor lret test das rclb or out xor xchg pop out xchg xor jnp cld cmpsb inc lret int xchg and push jmp jae sub je add pusha xor mov out (bad) jno lcall cmpsb ljmp repnz loop cmp fdivl xchg fisubl out rcr loope std in test inc xchg sbb dec daa jecxz pop in jbe popa inc adc ficoml (bad) rcr lret ja shl in and and (bad) xor push icebp mov sbbb mov inc mov add pop int pop arpl cmc insl cmp in fisub cmp sub add outsl inc mov inc and mov sbb xchg mov xor mov mov dec int pop dec imul lods dec jns add movsl das arpl xchg (bad) hlt add mov inc push cmc dec mov lret aas call sbb lcall insb ds (bad) fbstp icebp cli pop xchg mov inc mov (bad) mov pop daa inc gs (bad) in jo fnop pop mov (bad) das adc push in arpl dec dec lret es mov fbstp mov (bad) fadd pop inc xorl or pop mov inc jbe popf mov loop fdivl std fsubrl fldenv pop xor mov sahf dec fstp xor push addr16 and outsb xchg out pop or leave cld ss and jnp sub pop sbb (bad) add ret mov or subb and xor stos dec cmp and adc xor nop outsl cmp (bad) fisubr xchg cmp jl cmpsb mov jae or ret and push pop sub xchg xor sbb ljmp jns mov mov mov insl xor gs sbb jo ds int pop js lock xchg hlt or stos and add cs inc mov flds pusha (bad) pop xchg mov or jns shrb cli add and mov imul inc mov dec daa push cmpsb mov xchg fdivr or or cmpsl scas add sahf fisubr dec push pop ret js pop push into cmp mov adc lds outsl fidiv pop jns lahf xor cmp mov mov repnz sbb mov xlat push std aam cli sub mov out xchg popa cli push mov lods or or ss loope in sbb cmc push pop cmp push pop xlat sbb mov into std cmp rcrl negl ds lahf sbb push xlat stos inc hlt jl mov mov mov out dec into addr16 test dec lret jmp push add xor pop dec les adc int3 popf pop push lahf fimul add out xchg (bad) push inc rolb and fildll and fsubrp push mov fadds in fs mov stc mov mov stc or jmp mov aad mov adc jmp movsl jp das movsl lea arpl mov pop into xchg mov fwait call mov stc cmp dec andl in mov in and int3 and call and adc popf mov sbb push dec out xchg xchg test in or sub pop stc mov adc and insl hlt ret mov xchg das sbb loope (bad) lcall xor gs jo add add mov (bad) loopne aad inc mov jbe sbb cmp dec mov int3 lahf jo mov dec sbb js fsubs (bad) pusha sbb mov scas jns movsl or push iret dec aad popa sub aaa and adcl sbb cmc (bad) test pop xchg (bad) arpl leave lcall dec cmc pop sbb test or xchg jnp arpl cmpsl les jp cs dec test sahf push xor aas pop mov xchg aam mov mov data16 repz mov stos adc mov sti es popa xchg sbb sub cmp inc aas aaa jnp sbb insl sub cmp out ret insl movsl inc pushf sbb mov out add push out (bad) ja fisubl mov sub gs icebp pusha sbb stos fldl push leave mov sub iret mov cs iret sbb jl arpl pop insb jg repz push (bad) pop rorl jnp getsec lea inc into dec cmc (bad) mov pop mov cmp mov adc dec test mov pop loopne cmp lahf pop in mov lahf iret shr movsl test lcall inc fisttp or sub dec cs jno mov xor mov insl loopne xlat out lret mov xor (bad) mov push ljmp jl and (bad) in imulb cmp leave scas xor jns (bad) fidivrl lods add mov mov or insl daa jp js test movsb loope jo aad in mov insb dec jns push mov add fimul (bad) repnz jns (bad) fnop adc mov dec xchg inc jg lret hlt mov push and mov sub jmp xor sarl scas mov hlt pop lods jno pushfw sbb cmp mov fistpll push out loop movsb je jae rolb mov push gs sbb sub and leave jo push fadds push leave hlt fs cli pop mov sbb mov add mov (bad) fldenv lret int3 (bad) push inc arpl cmp fmuls add adc jmp push sub les xchg andl bound pop in jbe or mov inc pop dec mov cmp jo pop gs or rep loop sarl in add aaa xor stos les push cmp fs and and ret movsb jg test fmuls cltd and sub mov mov out push cmpsb in fcomps (bad) loope pop mov jbe xchg lahf inc aas xchg in add test lcall jmp sub divb adc cmp inc sarb test pushf roll push inc cmc pop cmp add imul pop pop inc push jb (bad) clc push inc (bad) sbb sarl (bad) jnp popf lock mov dec push add loop sbb push sbb sub push inc insl cmc mov xchg pop ficompl nop pusha decb incl mov dec imul mov outsb scas je dec adc fcomi ret dec enter (bad) outsl pop inc iret push xor (bad) repnz adc stos push lahf pop std pusha lea int3 push in lds lods aas cmp call (bad) stc popa aaa sbbl sbb repz or cmp jno push scas lods in inc and and cmp shll mov cli xchg mov pop sarl add or or cmpb pop xlat mov call jne out addr16 push or inc lods ret decb xchg pop nop (bad) js dec test out push (bad) fcoml pop pusha push (bad) (bad) or cltd lods scas cmp add dec fmulp je mov mov mov mov push iret push mov push mov daa adc ljmp cmc test cmp xor mov loope stc pop xchg xor leave mov mov adc ret mov repnz and enter inc xlat subl or pop jno scas push xchg mov xor bound pop mov lea int adc add rclb push sbb mov mov push mov xor dec icebp pshufw test jb xchg rorl jne std dec leave mov pop sbb mov sbb and mov xchg dec add jle xor sbbl pushf in mov into out and into test fs clc movl popf fldcw rcrb mov lahf push popf pop clc mov cs stos test int mov pop fucomi dec (bad) das ret xchg mov jns pop test lock jmp sbb push dec orb ss add js jae notl push add ds test inc adc dec cmp dec mov inc icebp dec pop sub mov pop dec add cmp cmp cmp push pop xchg test out scas aam push std rcr lea adc lahf jae or mov mov dec add inc notl enter dec das or loope dec loop mov push xchg cli mov mov add loopne ljmp std movsb jb js sahf aaa pop fistpll lret mov pop outsb data16 push dec pop inc out push cltd icebp dec (bad) xchg push jg je repnz stc cs fsubrl and (bad) xchg loop aam ret in pop fdivl mov (bad) gs mov push pop mov dec js dec das lods push stos orb or insb push sub inc icebp cmp xor sbb mov in imul lcall test out popf xor dec sub adc jg xchg sub jb jae test jbe pop sub mov ficomp sbb cmp addl jmp inc xchg rorb dec sbb leave mov rorb mov es sbb pop insb jmp clc inc in leave arpl inc scas into inc scas pop sahf xchg addr16 inc (bad) leave and and pusha out xchg fwait dec add mov xchg (bad) (bad) xor loopne sbb pusha inc cmpsb pop nop mov jno add xchg inc dec les jp cmp repnz dec xor pop outsb pushf idivl add and and mov loopne jecxz orl cltd inc sub xchg inc cld or fwait je rcll sarb pop lret aam into dec loope dec xor (bad) mov mov cltd addr16 stos and and mov inc fild pop sub fistl mov bound pushf mov out pop adc push nop xor ds es mov or lret pop (bad) and rcll cld popa cmp xchg jge and dec and dec loope push fmuls sub xor or (bad) movsb lods lret sbb and int3 mov inc mov mov lods adc shrl in bound insl cmp into out xlat cmpsb jne movsb push inc xor pause mov and sbbl jle iret mov call testb add pop push sub pop pop push push cmp iret stos fnsave xchg aas movsl ret fstpl (bad) push aas sbbb hlt sub mov psubusw cmp fmul lods or stos sub dec sub hlt imul push push mov test push jge shrb cld cmp out mov push jg jb int push fsubrs outsb jp pop cs hlt out andb mov cld arpl aas (bad) push push popa mov pop add xor jb kmovw push out and icebp mov out enter fs loopne xchg loopne bound mov adc jmp push dec enter adcl mov jo pushf cmp cltd xchg push cmp xchg test dec lods in hlt mov pop cmp and jp cmp mov ja push mov or fisttpll test loopne cmp push adc dec movsb jg or sbb fdivrp insl xor xor add hlt cmp popf push cmp jbe ds scas in and sub popa movsl cmp xchg mov shr stc icebp std sbb daa push xchg xchg mov jae repz icebp repnz jp std mov mull loopne nop leave bswap mov loopne pop (bad) mov mov test stc outsl movl rcrl cmp adc addr16 mov gs sbb sub jg mov aaa adc inc aad jmp add sub repnz cmp cmp inc dec insb push push scas dec sbb fnsave mov outsl cmp inc int3 icebp in push mov or int3 in cmp addr16 scas mov adc (bad) push dec iret leave mov cmp sarb lcall mov adc test popf jb push dec (bad) int lret mov cwtl jo movsl in out fwait idiv add popa sti jle dec cmpsb adc imul sbb outsl jmp into cmp ret pop shrl mov (bad) aas xor enter adc mov adc pop mov std adcl movsl lods aam je mov (bad) xor xlat fcomps cmp jno cmc and ljmp sub loopne ret jl jnp cmpsb xchg cmp addr16 aas xor and and leave cmp jb or int jns sbb inc js mov ror xor jne sbb push and push cmp ret dec xchg insb xor mov push cmp push jbe or mov push fcmovu mov jnp fwait push fisubrl flds sub dec (bad) dec aaa cmp jno (bad) cmp pushf pop divl mov or dec pusha imul (bad) cmc or ss out add call jge xchg loopne sbb cmpsb adc popf mov mov cmp mov jno,pn mov xchg sbb push pop out cmpsb fdivrs push add mov stc js inc push fisubr cli cmpb scas test cwtl dec push popf cs test cmp insb icebp mov or pop rclb (bad) pop xor and nop xor cmp mov jg pop pop and out out sarb lea sbb das dec das mov ret stos and and (bad) lods pop orl xsaves fwait or sub aas pop test mov imul int sub push (bad) pop mov mov addr16 cmpsb sbbl mov sarl mov (bad) (bad) dec sub (bad) out mov fist sub cmp je sbb jno sahf jmp xor or cmp dec add inc inc lret and mov pusha fisttpl or movsl icebp mov jg jbe mov or xor lock daa xchg popf mov mov in inc xlat scas sti push pushf mov and pusha cs dec push jp aas orb rclb adcb das or mov aaa out push sub xor push fmull sub mov jge dec lock sbb or and ret (bad) pop push decl mov mov mov xchg or les int3 push fcomi loop in push or les ja in imul cmpsb mov lret aad and xchg popf mov ret mov fild lahf xchg push in jb dec ja hlt inc pop xchg inc xchg xchg sahf jbe sub iret push mov icebp cmc cltd mov sub push push (bad) adcl xchg pop dec pusha lret dec jl sub data16 mov aaa xor xor out fstp fiaddl test push mov dec lret incb aam pop out xor add and mov arpl das or and xchg pop lcall dec mov mov fnop scas call cmp jb or pop cmp aas adc dec mov push pop and aas mov cmp cmp call xor lcall add pushf inc cmp sub shrb jns fbstp dec xor or jns cmc loopne pop pop mov cmc insl pushf jge mov hlt or out xchg push jg clc cmp and xchg adc mov lahf push or xchg xor ret push js push add js inc out push aad mov pusha xchg ret mov sub push sub cli in dec rolb mov sti push jns dec jno push adc pminsw (bad) fsubrp (bad) jno cmpsb test cmp dec scas ljmp jg dec pop ss push jecxz push dec bound xor or cmp movsl jecxz add test lahf xchg mov imul das movsb xor es dec jge fwait dec xor stc fisubrl es mov scas pop pushf dec mul inc mov insl js stc or inc xchg (bad) mov adc leave xchg in and imul test repnz inc cmp ficom cld mov in insl and sbb sbb ja test jp js ret mov mov cli sub (bad) mov out or cwtl fisub fist or mov mov pop push (bad) lret xor mov ss stc std es adc sti sub bound xchg or out inc data16 inc push in pushf mov fldt aad push push mov xor mov adc inc sbb sahf push or les (bad) push (bad) std pop push push jge out jg aas jno add dec outsl adc sub mov jp lock mov iret cld fidivl aaa sahf jecxz and (bad) mov shrb cld mov mov push adcl (bad) aaa pop push inc jg fistl in add nop mov pop push jbe cli xchg sbb xchg sub or pop test decb popf xor icebp leave xchg pushf popf std mov lcall lret loopne inc lds sub xchg mov mov daa and mov jge sub orl pop jne sub fimull jnp (bad) enter outsl pop dec jo outsl movsl or adc xchg gs loop pop push mov or adc adc inc call pop jo dec pusha lock andb nop pop jmp negl mov sbb cld inc lods jns,pt mov jmp add and push push mov sbb ljmp sbb inc adc mov sbb pop cmp jle or mov call icebp scas jnp push jmp push sar or adc faddl rorl dec mov aam test insl jge add test xor ljmp jb push mov test subl push inc (bad) sub push mov dec shlb in je cmc sbb ffreep iret and idivl mov sbb jp mov std orl dec jmp and (bad) and fdivs scas xchg dec dec lahf sbb push sub loopne jp sbb mov xor push inc push and roll sbb pusha push pop sbb jp or xor add push mov push jne int3 mov (bad) mov pop xchg repz add push mov cmp dec data16 adcl jle fs xor sbb std mov or cld jg xor sbb dec cmp adc or stos test or adc mov leave xor notl inc xor add int pinsrw or add in xor jnp repz insb call data16 into mov push iret mov fwait sbb sbb pop cmp adc jae mov sbb call lods cmp jg lods iret adc sbb faddl outsl gs ret into out add inc fisub push jbe scas mov jae mov popl and rolb aam and xor pop add mov imul (bad) mov add jg and xor cmpsl cmp (bad) mov xchg (bad) lock out (bad) jl in ret in pop inc rorb xchg fsubl enter (bad) shrb lods aas cmpl cmp mov inc call sub push hlt dec sub mov lahf fwait sub jbe shll sbb data16 fcom jp xchg mov loope mov jmp lret push sub fmuls popa fsubs push jl push pop pop push shrl push mov arpl sbb arpl sarl (bad) xor dec movsl scas sarl inc mov (bad) fimull scas mov jae aad mov mov xchg jnp mov fild sbb mov leave inc cmp xchg sub adc cmpsb ds fimull pop add xor enter sbb inc int3 sbbl sub xor ret imul aam jecxz or mov ja iret das fidivl stos cmp and pop inc lret push std cltd cli mov jae sbb mov add daa or pusha popf fstpt jg movl sbb mov mov (bad) inc dec mov push les mov add (bad) loope or cmp das sbb (bad) pop mov and lret mov pushf cltd test jp adc lods inc push xor dec dec out popa (bad) pop leave scas aas loop orl aam dec sub insl push adc adc iret xor movsb fs push cmp in stos ds push (bad) dec aas inc std iret roll push mov sub sarb mulb (bad) jmp out fiaddl sbb (bad) adc nop mov push call mov push out dec popa ds pop jbe out in and mov pop or xchg sub ror leave jbe stc or push and cmp ja jns (bad) popl sbb mov or (bad) aam pop (bad) fstpt dec das dec mov out inc mov stos fnstenv dec xchg xchg pop ss inc lock mov push add fdivrs idivl mov add ud1 mov lret call sbb xor shl iret or jmp sub dec dec dec cmp push bound fsubl movsb cmp or add and int lods xor sub mov hlt test popw inc jp adc addr16 push or jnp enter jb lock push pusha fmull pop in pop jae and out lds loop arpl hlt jg pop adc and xor push in pop mov cmp lret jne adc sub pop sti cs (bad) lods imul into sbb and adc push xchg mov cld je (bad) jno (bad) dec lret (bad) mov add or imul pusha pop add cmc jp js or addl shr sbb out xlat repnz ja pop sahf adc jl mov xor call hlt lock imul xor jmp push mov setnp movsb orl inc xor push stos push mov ss and jg inc lock jo in cmp cmp mov lds or ljmp dec imul xor leave jp pop pop push add push xchg leave sub in sbb addr16 and or jge or cmpb fldcw ds fsubr push sbb pop jecxz (bad) daa fimul shrl cmp je jge pop or cmc pop nop lea fldcw std xor sub fwait scas push inc sub repnz mov outsl lock divb (bad) popf xchg lea and insl adc and clc add cltd add sti add jl jne pop inc adc jo add lock inc in jnp sbb and lods mov fistl adc stc outsl dec imul aaa jge mov cmp cmp pop adc sub stos or pushf jo mov ljmp or out push adc shr inc sbb movsl or lock lahf les adc sbb and xchg dec out xchg adc and sbb out adc lods or adc push lods ljmp out popa in fmul sbb sbb adc int mov push mov inc pop or cmc adc lods xor and frstor dec insl sbb sub jnp nop ljmp add jmp lret sbb insb outsl jno into lret inc dec shl scas lods lea sub das data16 jp scas pop mov add stc xchg lret push jmp stos mov neg push out lcall fs or cmp lret inc orb nop inc mov push sbb stos inc in popf mov sub pop std cmp (bad) jg cmp mov mov mov pop mov xor cmpsb daa fildl jecxz or pusha lds push add xchg fs fistl je inc sub loop outsl sarl aaa pushf shlb scas rcl push (bad) xchg and mov bound mov inc cmp xor loope lea repz push icebp aad cli stos fmuls aam push test cld call test add lods sbb scas scas sarb mov jp inc xor mov mov pop cmp fcompl inc cli frstpm(287 pop (bad) lret jae jae dec dec in hlt or aam add repz lret cmc lret js fwait cld dec cmp jl push xor fiadd sub mov das xchg inc cmpsl push add mov xor ja jecxz out (bad) mov mov imul jno inc xchg and jl repz adc es mov lahf cmp push and fcoms jmp ja cmp and iret lods adcb cmp sbb stos imul sarb daa lahf jge loope ds lods add mov and int mov add jo mov xchg in add fldenv adc scas in dec add es arpl mov mov add and out cmp mov add lods mov je mov sbb std imul dec ds je pop rcrb addr16 jb popf push cmp addr16 dec pop pop test sub jg (bad) push sub xchg cmp push or dec mov adc outsb xor adc repnz stos inc insb sub in enter and mov loop cli lds push lods imull xchg jl sbb out sbb add lahf sahf and pop xchg sub push xchg sub (bad) cwtl test je pop jmp pop cmc (bad) imul xor add and dec mov ss lret or lcall cmp push pop (bad) dec into insb mov ficomp jge ds lods cmp inc shlb or push aaa ret or lret sub mov fistpll ljmp cmp xor push imul mov dec ret jmp out sbbb stos sti lds dec sub lods add cmp xchg sub inc es outsb int test adc xor aas sbb repz xor cmp push ds push dec movsl hlt pop gs daa stc mov fnstenv cmp fcoms aaa fmull sub popa loope insb roll arpl push ja loop cld fimul (bad) sbb fnsave mov cmpsb cld leave add xorl (bad) popf mov pusha ret clc hlt mov mov push cmpsl jl leave (bad) or mov jo cmp imulb jbe push mov shrl out (bad) dec outsb push mov in insl sbb xor test mov repnz gs in cwtl sbb pushf xchg or test xor jl mov aas mov out jb push jne mov scas dec insb sbb aam daa jmp (bad) das mov and pop adc daa mov pop add xor xor inc xchg ror cld mov sub xchg mov pop js pop (bad) popf jge insb mov jge xor loopne insl lahf mov pop fcomp bound sarl outsl push scas (bad) adc lahf clc xchg es arpl mov lods cs (bad) xor cwtl xchg ret mov pop mov imul data16 inc xor xor mull dec in pop dec jb inc insb daa and dec js sahf add pusha (bad) pop push es push cmp mov cltd jnp mov stc lods dec (bad) outsl cmc out jbe cmp adc loopne clc int and xor in scas lahf mov ss adc lahf mov inc hlt push push mov push test or cmp pop inc cmp pushf aam rcll (bad) shrb subl jns inc rclb and sub sbb addr16 mov jle out pop cli sub out (bad) mov xor cmp dec daa lahf roll mov xchg add xor enter push pop dec jb push jle test dec sbb (bad) fs jp stc and adc stos cmp xchg inc or or xchg pop jno subl fldenv test (bad) jo dec dec sbb mov (bad) xor fstl pushf xor imul rclb stos push sbb iret push std lret jmp scas pop mov shrl pop (bad) jo or sbb mov push dec insl sub lods jl ficomp stos rolb scas nop std inc int mov jo inc and adcl pop adc xchg cs jmp sbb xchg jge jne fimul cs lret dec add and mov sarb push inc lods ret pop pop mov cmp jmp sahf rolb in pop ret jmp ljmp inc divl sahf push scas sub push andb ja xchg mov or jne or mov subl mov std fildl xchg fiaddl nop push or sub fcompl mov or xor lock add push mov mov add mov dec mov (bad) sbb and (bad) lret jno jg xor jp adc jnp cmpsl les push xor fs dec push pop rcrb push pop stos fsubrl inc add mov out insb notb mov popa sbb test xchg add outsb add lahf mov lcall or loope lahf dec push or stos into inc pop cld cmp ljmp fmulp xor xor sbb sbb mov mov cmp adc orl jbe inc cld jbe sbb fsubl sbb cmp not jl mov sub testl js in popf mov insb mov adc pop push cmc out ss xlat scas hlt mov js cwtl out jnp pushf xchg mov popa adc imul push sbb sbb add ljmp mov mov (bad) mov repnz cs enter rorb insb int3 test jae cmpsb lods ficompl insl out cld add mov xchg push sahf mov scas (bad) lahf into cmp pop out sub and les out cmc lcall arpl jne mov jg push shll aaa fcom cld cmp mov sti jmp (bad) inc fs les mov inc adc adc das add mov pop (bad) (bad) mov mov scas push cmpl jo pop xchg loope xor das jae dec add adc stos test inc ret sbb mov cmp fsubrs pop dec in pop addb dec or mov inc mov adc push sub sbb mov lahf mov jb mov xchg or stos ret mov push push cmpsl decl lret mov in push pop fidivr in lock lret lods mov pop xchg and mov jne mov aad iret repz xchg out dec scas cmp push add fiadd imul sti push lods mov sub sti ret into (bad) (bad) mov cmp pusha insb cwtl sub je clc imul les ds out fimull popf aad sahf xchg pop pop xor lds and inc cmp jns and imul xlat sub test das mov in jecxz dec pop subl push fucomi in fcmovnb test pop and mov xchg sbb cmpxchg or es lret cmp nop out add and aaa jp add jl cmpsb dec lock test ja iret jbe call pop mov sbb jl pop xlat scas jp das and (bad) shlb cmpl imul inc or out jb sbbl int pop repz call pop stos aas mov out or dec xor test lret ds cmc xchg lds sbb popa movsb imul test aam loopne rorl cmp js sahf sarl push stc inc stc inc (bad) xor xchg xor jmp pop gs mov adc push dec lahf mov mov xor movsl xor (bad) (bad) jae in out sub out inc aad push dec jmp ds cmc loopne roll lret popf mov inc mov loope pop fwait scas pop adc mov sbb and icebp or std call mov xor repnz (bad) mov dec fwait out dec in jp pop jmp mov dec scas lods cli pop lea jno or movsl xor (bad) mov in test sbb rorl inc cmpsb or cmpsl add rol dec or sahf and ja (bad) (bad) nop pop (bad) das std xor movsl in push add (bad) ljmp aas mov inc or cmp movsl pop jne add and mov adc aas mov popf pusha into gs jae in bound movd push push fs mov jnp int mov xchg sub movsl jae jb mov sub repnz out idiv sbb add lods sbb aam sahf push adc push mov (bad) fidivl jo bound xchg sub adc jp mov js out lret rorl jmp jno fcomip cmpsb or scas jg stc repnz jbe in lods xchg imul adc pop push ljmp enter xor enter movsl mov arpl mov pop cmc add sub mull (bad) push or pminsw or jnp cmp xchg pop sbb mul jbe or mov or mov repnz dec sbb pop in adc gs push out dec pushf mov jl ror jle addr16 dec sub out aaa inc fwait loopne icebp mov sbb inc fdivr pop sbb push xor sub (bad) in mov mov cmpsb es adc dec shrb add adc mov rorb ret mov pop adc repz (bad) sub jge mov sbb insl or xor insl iret fdivs dec ds test movsb fstpl icebp jb mov lcall or dec roll add aam inc (bad) inc jmp es mov dec push pop stos sub lods dec (bad) mov insb inc push enter cmp mov cs adc ret in cmp sub psraw in inc jecxz jne add popf (bad) adc jno xchg cltd (bad) scas sbb add inc pop xchg mov fwait xchg inc movsb fisubrl mov or jbe adc jp cmp mov jne mov pop loop mov (bad) lods or lea mov fnop into xor cmpsb fistp dec xlat cli loope jae adcb call insb loope roll sub loop sub popa push pop outsb in fnstcw cmp data16 mov pop mov sti sahf jg adc sub aam rorb add mov loopne inc mov jo xchg ss pop movsb mov std dec xor adc inc scas nop cmp fstpl (bad) stc es pop (bad) hlt mov test lock test out sti (bad) jecxz clc or pop scas nop xor (bad) mov jmp pop inc test test push jl enterw inc addb (bad) mov adc shlb mov push nop sub and iret cwtl pop pusha xchg ljmp lds inc push adc (bad) sbb daa mov stc pop jne add clc lock add cmp mov push pop and andl and stc int3 mov cli int push cmc xor cmp in cmp xchg shll cmpsb repz cmc sahf sbb inc (bad) in in js,pt mov mov pop sbb in push (bad) cli jbe inc dec lret xor jno dec jg cmp adc cmp test lcall jae addr16 sub sbb enter jnp push lret cmc mov dec dec or rol jle jb cmp inc int xchg insl aaa in sbb xchg pop daa leave sub pop cmp jno cltd imul fs ds rclb pop (bad) icebp je adc icebp push xor aaa mov pop mov lret bound pop xchg int and push shr xor test jge xchg adc insl ret jno cmpsb sbb jne aad cmp enter aaa push mov inc bound dec js scas (bad) add lea imul in call cmp pop loope cld imul mov out dec jmp shrb outsb jns arpl jno and jmp or xchg test (bad) (bad) jp (bad) jnp icebp pop xchg xchg add popa or lret cltd cs sar add int addr16 cmp movsl insb addr16 mov cmp ds lds stc int jmp inc cwtl andl sub dec or mov icebp jp cmp enter jns xor std xor les adc sub pop or lea adc pop jle xlat inc dec ss es dec jbe mov bound fsts cmc cltd mov pop mov stos mov mov and sahf dec sub jge jnp aas fwait (bad) call shr jno mov dec sub loop jl or push fcoms dec cli cltd xchg (bad) lret in add or loopne adc sti jle scas in pusha xchg mov add pop add mov inc dec cltd add loopne dec imul (bad) icebp es mov (bad) and jge cmc xchg cmpb push js mov sub fstps pop xchg popa pushf add dec dec rcl cli add mov daa adc or mov xchg (bad) int sub push add lock inc cmc pusha sub jno adc imul inc push lods aas and push push or mov lods insb js jae xchg lock rorl xchg mov add mov loopne imul mov pushf sub mov push bound mov or or call inc sub mov or dec mov aas sbb add sub cli fwait cmc cmp insb stc jns mov ds adc push cwtl adc popa je or push repz fs jo outsl sub push cltd inc fucom sbb (bad) gs in add fscale inc test sub add mov adc adcb xchg nop arpl mov pusha cmp cmpsb or cmp (bad) repz xor cmp sbb sarb stc in dec xor js repnz jns lahf push call orl sbb dec movsb fmull fwait push mov lock xchg les cmc (bad) mov fisttpl popf push sbb pop dec enter lea ja or or lods inc outsl inc sub push push in je push xchg mov sub es jmp scas mov aad sub cmp push popf addr16 call or xchg punpckhbw and hlt lods ljmp mov mov sbb mov push cmp mov jne inc ret data16 and (bad) push pop mov ret inc popa ja adc xchg push mov jge or out and mov xor stos mov inc pop mov inc xorl pop mov rorl das aas jg sbb icebp movl (bad) or sub aaa fstps loope pop sub les inc sbb pop insb fisttpl inc or ret movsl rcrb loop int push inc arpl ret cmp in sarb ss pop dec jae (bad) mov push dec js adc and xor adc mov dec jge in sti sbb dec fwait mov ficoml cltd rcrb adc loop xchg (bad) out out xor add add and in mov xorl (bad) rolb mov in mov call xchg jecxz dec push out jbe jp adc loope pop sub fsts sbb loop outsl sub addr16 into inc hlt fistl and pusha in add xor (bad) xchg xchg js popa loope push fwait mov mov adc cmpsl loopne mov and ret dec shrb pop inc (bad) icebp cmp push xor fwait pop test lods ja cmp jne inc fcmovnb inc ja cmp int3 jg je (bad) lods mov push cltd mov test cmpl sbbl mov jg (bad) xor (bad) adc pushf pop push out imul pop (bad) jbe pop (bad) psrlw ret jge cli ss fldcw outsb pop push insb out shrb dec pushf pushf in stos int sti bound inc fimul pop fucomip test inc mov cwtl sbb cmpsb xor cwtl sbb loope int push mov adc adc into push xor test pop sub sub (bad) and and xor xchg pop mov sub or lods cmovo jbe shll jbe add add xor jo push popl lods je xchg out lahf pop sub pop adc addr16 mov daa cltd cwtl stc fst clc cmp and mov pop jae into mov add lods jl xor data16 mov in adcb fsubrl (bad) dec adc xlat mov rolb adc mov inc das cmp jae,pt mov in lea jp clc jbe sar aas int3 cmp outsl mov paddb in pause (bad) cmp addr16 repnz aad int3 mov in fdivl add mov in sbb pop mov jmp stos imul pop push idivb insb mov xor dec movsb pop pop dec (bad) in jns jae dec mov aas push mov adc int push lods push repnz ja mov inc jb jmp inc rclb mov sbb lret enter cmpsl push add push mov adc sarb jnp or fcmove pop lcall jns fwait scas and mov ret mov lret cmpl pop jle lds (bad) pushf mov sub out mov push in out mov and ljmp inc inc push into jecxz push pop jo jg (bad) xchg pop mov mov fcomps xchg test sub jns movsl addr16 movl fidivrl add mov aam lret or leave or xor and and mov sbb lahf lods inc pop outsl jp push lahf sub inc and cmp fwait stos jo shlb fimull ds mov mov sub andl nop fsubl (bad) (bad) mov stos xchg xchg mov pop ss enter das lret iret xor aas outsl ds jge lcall xchg pop xchg bound push inc test jnp mov in mov pushf je jl push jo jle rcr (bad) push dec ljmp xchg cmp mov jg mov movsl out lret int3 (bad) sahf cmp daa movsb jb aad gs mov fxch sar pshufw adcl mov cmp mov rolb xor inc or ret inc sbbl mov ficomp movsl mov dec (bad) sub adc xor dec pop test xchg xor push daa push cmc adc mov lock cwtl sbb insl jp jl xchg (bad) lods insb int3 and outsl add jb sbb addr16 out test mov dec mov jle sbb sub lahf lods test adc jge aaa mov mov fnstsw neg jmp movsl mov or mov pop cmp inc test and iret mov lods sbb shlb insb sbb pop or cmp adc add xlat adc loope mov jmp lgdtl fs repz sti mov int mov or test sti and adc enter iret pop mulb dec mov (bad) jb adc fdivrs mov leave loope pop and pop add sub pop sti push and stos cmp adc jae cli jns fs repz xchg inc cmp mov repnz aam mov sti es mov jg sbb popa and subl cwtl in pop icebp out ljmp popa pushf cltd loope mov mov insb dec addr16 lods jns mov xor jno hlt sub je (bad) fdivrl mov in (bad) pop cmp jge sub cmp dec or and and mov in movsl std mov or sbb out inc jl stos call cmpsl and adc cmp sets fs mov rclb popa stc jecxz shll mov mov push push jns pop inc scas cmp call push pop sub push inc test call fsubp daa cltd sbb loop clc loopne aad push test mov vpaddsb in (bad) jne inc or xchg inc sbb ja in pop cwtl hlt mov test (bad) (bad) mov outsl mov fsubl cmpsb jbe repz popf arpl xor in fwait adc and jg outsl std ret sub add jge or mov roll mov mov stos fdivs xchg and mov les sub cmpsb pop jecxz rorl cmp imul xchg mov jo add xchg bound and addr16 xchg test idiv sbb dec mov add mov or lds and push pop mov scas lcall fcompl mov or xchg inc mov imul mov pop jne (bad) jg push loopne lret iret addr16 add pop cltd jmp push add scas push popa sarl sub jle cld xchg dec fadds xor or and gs fldt loope mov aas pinsrw gs xchg inc push sbb cld (bad) fstpl or adc cmpsb sbb xchg pop add add cltd xchg xor pop movb mov pusha es cmp jmp cwtl adc xchg jecxz sbb loopne call out test adc out inc nop int3 das inc push pop imul int3 jnp pop xor mov push (bad) dec jno into cltd ja xchg daa adc pop dec lods pop fwait jle inc inc daa push mov (bad) sub jge imul push testb lods or fistpl ret (bad) mov xlat xchg lret (bad) out pop mov xor mov sub insb js dec inc jne jo add jbe lret std icebp in ss fbld rcr lahf push into call lods push clc sbb and outsl xchg adc in add and decb or (bad) lock loop xchg test ffreep push sub mov sbb mov je push mov jns and test insl outsb scas scas ficom jge or jno rcrl movsl mov scas call jns outsl jle dec xchg jle mov rorl push loope cmpsb cwtl insb das and xor sub sbb pop push jp test jns dec adc sbb sbb lahf mov cmp mov mov imul and sbb in ret xchg push les xchg out mov outsb das (bad) or mov jle cli aas (bad) hlt jns jecxz mov mov xchg or lahf jecxz sbb dec outsb dec mov cmp pop repz lahf xchg ficompl loopne dec shll xchg ljmp (bad) push (bad) mov adc loop jo in popf (bad) nop inc call dec fildll add in pop mov iret in bound out dec ret iret sub into mov emms jl leave inc xchg cmpl mov shrb scas sbb popf mov call mov jno pop aaa ficoml fidivl jno push jg mov xlat cmpsb inc xchg shl sub icebp dec mov sub add cmpsb rcll pushf push and loope dec out sbbb jmp fiaddl push push dec ror inc cpuid inc out cwtl sub dec adc fcmovnu loope movsb mov pop dec dec (bad) outsl pop popa in idivw rcll insl imul or push clc and mov ja sub jb dec data16 fiaddl js aad xor push lret out add dec and roll clc scas jo fiadd xchg ljmp scas mov sbb xor rclb dec inc outsl decl scas pop notb xor and rcl andb into imul movl leave adc jp addr16 mov fidivl mov cld lock mov xor popf scas mov es out inc pop out xchg cmc or mov push pop lds (bad) jbe jmp push dec and cltd sub adc ret rcrl in outsb loope out gs adc fnsave xor xor leave mov stos aam aad cmp je iret or cli mov or (bad) add mov mov aam mov (bad) mov cltd dec mov sbb clc aam ret cmpl push inc out mov fisubl xchg mov scas mov dec sub pop pop pusha jp movsl lods push js mov stos mov and pop xor fldl cmp inc not subl xor dec adc pop rorl fwait or clc dec adc cmp ret mov js cmp and inc cmp mov adc shll push inc repnz or pop mov dec inc mov push mov loop les fnop iret iret inc pop xchg in std adc sub sti ret inc pop outsl dec cld aam jp cltd std out lahf push mov fs shl and jmp push or sbb mov icebp out cld in shrb pop sbb adc fcoms add adc arpl aas push ss enter clc push shl adc add inc push sub imul movl jecxz scas push and ljmp mov iret in mull push inc mov mov push or mov clc dec mov fmul cmp pop int3 dec mov pushf inc ror insl gs fneni(8087 lods push ret xchg push (bad) je jne sbb mov cld mov sub in pop mov iret fstpl mov mov jge xchg int3 clc mov sub pusha sub mov push popa push std rcrb (bad) test jmp js cs popa pop out adc icebp sub or cmpsl adc jecxz push xchg xor pop fbstp ljmp adc adc cwtl cwtl jge das in or fs and enter fwait xchg and xor scas call out sub dec jg loope lock mov (bad) xor cmpsl add jnp sbb sbb fcmovu and and pop push or xor xlat mov std mov xchg jnp nop repnz ljmp fcomps lret lods mov jmp jecxz mov mov es and add lods gs (bad) enter sahf leave pusha ret out mov mov (bad) repnz inc cmp ds jns int xchg popf inc jg xchg pop xchg testl jmp fadd (bad) mov mov pop add push mov cmp call pop das pop das push test mov lea mov imul jno in mov xor int3 fidiv jmp dec test jne mov stc push mov mov js and les orl inc inc sub jle outsb cmp imul je shr lds pop adcb pop ja mov arpl sbb sbb mov fwait push mov mov popf mov (bad) cmp cmp sahf xchg out das and pop inc pop add (bad) loope insb ja lea and mov sub aad pusha pop push iret dec (bad) inc lds cmp inc mov test or popf adc repnz mov mov mov push pop subl adc ficompl adc fisub inc out mov lret and mov mov outsb out pop (bad) in testb fildll rclb outsl or push sub jg mov mov addr16 xchg xchg xchg mov cs mov fsubrl sbb out and mov sub fwait cmpsl inc das mov ljmp sbb ss jnp xor lret jne sarl dec popa adc ficompl mov mov ret aas sbb adc dec push adc xor pop push repnz or or dec adc jg loope mov xchg out out dec int3 loopne lret push xchg inc pusha out dec cmp lret cmp ret les pushf lcall sbb add mov add int cwtl mov shl mov push outsl out cli lea inc (bad) dec daa xchg mov dec dec mov loopne pop (bad) ljmp pushf imul fistl xor repnz push scas lahf sbb gs mov push mov jns jae stos sbbb rolb lea ja lods pop ds test inc dec int3 pop call pop pop lahf lods dec add mov xor mov push loop ss adc cmp sub divl lret cmp dec jae sbb (bad) fcmove negl inc addr16 mov adc jle pop lock stos andnps icebp rolb stos movsl jns xchg pop push clc popa inc mov jno sub dec pop push mov inc gs inc insl jo jno push push and lret or mov out lock sarl lods lcall mov jp add xor sub out out stc inc roll movsl or cli out pop movsb jns and sbb sbb lods outsl out inc sub hlt sti mov cld cs sbb fcmovnbe jle xchg or clc mov mov iret outsb imul negb jo push mov or aaa mov in xchg decb or adc push or repz loop orl cld add push out sbb cmp sub sbb inc enter push je xchg in sub lods mov in xchg fdivs mov enter adc in xchg or push test pop out jg mov push mov loop or xchg inc push paddw mov cmpsl dec mov mov pop jb push mov cmp jae pop add pop gs mov pop cli leave je mov push xor jge movl push push xchg jae ljmp out mov sbb rcl pop push aad mov mov test fwait push cli xor loopne int jb sub stos mov dec fsubrs jbe mov ja addl addr16 stos xchg (bad) mov pop ret lea (bad) cmc imul mov push gs cltd and jbe mov data16 jns or test (bad) xchg pop rcll lock ja sbb addl sub pop push (bad) push push inc and sub je jg xor ficom fdivs gs add add fistp pop outsl mov insl test insb inc push andb cmp sbb push dec repnz enter loopne insb dec scas sbb ss mov nop dec inc adc pop or (bad) mov dec push cmpl push out lods shll cld data16 faddp dec sub pop pop ror jns out dec mov test and aaa and push xor xor repnz lcall addr16 mov das mov lret mov insb ja fisttpl pop les xor xchg push (bad) pop xor jb mov arpl clc inc xor xchg in aam xor dec dec je cmp sub lods lods jno les sahf fnsave stos push pop shlb adc sbb push stc mov and add clc (bad) push aad xchg push dec call or dec xchg out push stc jnp pop loop iret lock pop sbb cwtl daa stos arpl adc (bad) and mov jb jne rorb pushf mov inc or aam pop out mov cwtl cmp scas setp fsqrt sub fisubr mov out js dec ljmp (bad) sub push imul push fisubr mov mov adc fcmovnu lea daa xchg or sub stos push xor adc sbb sti das icebp xor aas or mov mov jle insl push ret mov aaa aaa (bad) mov call jge adc mov inc inc loopne inc lcall mov jle into push popf scas mov push pop and int repnz jecxz popa mov mov inc dec stos hlt in sbb clc adc dec aam xorb mov int3 pusha mov imul fcomps sbb scas xchg jnp gs mov adc and sbb out (bad) sar movsb and push cmp in popa (bad) movsl jns inc clc fwait xchg push jns int3 add pop inc cmp add ds fs call decb jp mov dec jle cmpsb (bad) jbe stos mov xchg outsl pushf mov fsub in push ret mov or movsl dec xor jp (bad) lock fstps std sub out mov (bad) lock and ret adc xor mov sbb rcll sbb xor mov and outsl mov bound push xchg les sub jb inc fwait mov mov xchg call push xchg sbb movsb or pop add or je cmp push (bad) lcall and mov cmp jne cmp adc stc jl mov aad ja insl repz mov (bad) mov mov push bnd or (bad) jno add mov lods pop (bad) inc push gs jp xchg pop mov mov sbb jo faddp popa sbb mov stc mov lea cmp mov add or jbe push jno (bad) nop inc xchg cwtl add icebp jne cmpsb sbb or xchg pop test aaa arpl jg sub adc adc dec sub out jl adc push aam hlt pop aad insb pop iret mov jne pusha (bad) xor loope ja subl lock adc xchg xchg inc int add xor int3 and je out sub repnz add (bad) push imul xor lods (bad) xor (bad) mov imul fstps popa das mov mov mov out les and cmpl mov (bad) mov adc dec lret cli dec dec adc mov ja push xor cld je mov outsb cld inc insb aaa or stos clc mov ljmp pop add cs das aam xlat jge in popf xor (bad) lcall sarb shll out or cwtl aaa (bad) stos lea sahf inc ja jle cmc clc aaa scas cmpsl mov lahf mov jb movsl out push jo push push inc sub jb ljmp mov or cltd mov cmp insl (bad) xor aam loopne outsl loopne jb loop lcall (bad) cmp or add mov lret add or and lret jmp xor mov xchg push and gs xchg cmpsb jle test add fistpll cmpsb adc jge (bad) out scas cmpsl mov push dec stos xor test (bad) jmp std pop mov cmp or insl and dec jge xor sbb adc scas add mov mov xchg pop jle pop jne movsb lret and xor fs stos (bad) jbe ljmp ja stos sub jmp fild mov stos sub (bad) or shl xor test aaa and test popf pop aaa out mov lcall fistpll inc jmp mov dec pop paddd fcompl xlat add pop jmp negb pop push clc shlb fidivr xlat aas aas not out into mov mov push ret loop aaa push aaa iret pop and or sahf jg mov pop xor jnp test popf insl add xlat shl scas int3 cld cmpsl sub shrb cmc dec rorl add mov mov inc shll sbb inc jne aas inc loope inc stos add decl pop and pop (bad) cmpsb sarb cmovle pop add sub adc mov sub fimull mov push add mov pop dec pop push sub fcomps sti (bad) js pcmpeqb inc lods push stos adc dec cmovge movsl jecxz mov mov orl nop daa or call pop mov push push mov lahf ljmp aad fnstsw sub clc aaa cld inc inc inc dec dec aas test out aas push jg sbb inc sub xor pop aas sbb clc jg addb or lods xchg bound add popf test jno into and pop stos push lret mov (bad) mov jge fwait lret and test adc popa dec inc fwait and sbb inc int3 icebp mov daa dec outsl adc rorl push xchg mov adc adc icebp or test fsts jns inc and jbe stos pusha aaa pop dec inc adc jb dec and cltd hlt cmp xchg das (bad) dec jae sti icebp cmpsb mov mov xor jns pop insb xchg popf mul sbb mov das rolb add rcrb push addr16 icebp inc mov lahf jp aam xor std jb arpl call mov arpl add je testb imul jge in movsb sqrtps jle push test (bad) xchg cmp xor out mov adcl addl jle enter int3 loopne maxps pop or xor iret mov iret mov push mov int cltd add xor pusha xchg adc rolb dec sbb mov push or idivb aad ror dec mov inc push les pop sub loopne rcl popf lock inc mov out mov cmp xchg dec jge dec dec jns inc push pop adc jno nop xor push sbb arpl lahf pusha sub jbe gs popf test xor lock jno pop lods adc mov or push aas jecxz mov mov mov ficoml iret and arpl out mov pop (bad) lods fiadd cmp sub ret xorl xor inc inc pop movsl out movsl int lcall jbe cmp mov inc push mov jbe lea xchg push (bad) jmp or fwait outsl push mov jl cmp leave insb imul in addr16 sbb fidivl sbb jmp inc sub fimul gs shrb and aad push adc ret ror sub mov es bound add cmpsb push mov sub (bad) leave lcall imul push xor cltd lock xlat add iret adc cwtl fistpll arpl or mov orl shll outsl pop push mov (bad) loope ds cmp cltd je sahf fbld outsl arpl insl adc xlat add inc pop xchg call or test jl rorb lods inc xor xor (bad) dec ljmp cltd test pop push push divl mov mov sbb (bad) cmp adc dec adc mov mov sub pop push dec or fidivr loopne pop imul cmp mov mov xor repnz xor jns jmp cmp mov pop push push pop (bad) push jmp and bnd push jo cli or sub mov out popa pop jge inc (bad) or rolb adc push loop cmp enter out int or out in jns pop out dec mov xchg sbb fsubl ja add test sahf fnstsw dec daa nop sub mov adcl test test gs adc jp inc popf mov arpl test xor stc (bad) adc daa or into bound lcall mov sub xor or movl (bad) mov cld jmp pop scas adc inc mov hlt push and aad lret stc mov push add loope icebp andb int3 ja aam pop mov iret pop insl xchg into cli adc lds bound xchg inc mov rolb mul xlat leave mov das fwait ja inc inc cmc inc and push xchg insl jle push bound out or mov in repnz push and imul dec push out and stc adc mov lret gs inc arpl ljmp lea pusha fnsave arpl add add pop in aaa and iret aad (bad) aam popa adc es mov js js mov das dec and scas pop pop xchg es mov adc in (bad) sub rcrl fidivr mov mov and fstp into daa in or xchg adc pop (bad) pushf into cmp stos mov jns fcoml mov mov inc test fcomi sub xchg and push test in popf inc fmuls fisubl push gs mov xchg lods cmp (bad) mov aas hlt repz xchg fdivrs adc inc xor iret mov mov loope hlt dec jp pop pop add shl dec sbb inc pop lret mov shrb test (bad) mov cli push pushl test repz lock iret imul adc bnd jbe into cmp aas jle push xor inc mov dec cltd cmp (bad) mov enter mov dec adc ret and pop int fcoms mov mov xchg xlat pop aaa daa outsb popf mov and inc and sub fwait sbb icebp pop dec pop inc sub adc stc cld jp mov imul sti aad sub push push rcrl push dec dec loop outsb jl outsl cmp jecxz or cwtl insl (bad) not lods negb aad cmp mov or lret xchg sub pop push mov cltd aas (bad) mull add (bad) xchg stos and cmp ljmp movl push ficomp fisttpl movsl jp stos xor jl push push inc pop pushfw loopne sub sub ss rep js cmp loope mov negb sbb test xchg mov (bad) call cmpsb (bad) aad jae sbb hlt fsubrp imul sub jmp pop add mov xlat xchg add insb aam scas mov int3 xchg btcl (bad) insl and push or outsb icebp sub pop movsb push in mov (bad) sbb and mov sbb sti xchg icebp mov pop sbb sbb jl mov out pushf movsl out jmp adc inc inc fstps push gs nop jle cs dec mov aam mov pop pusha hlt arpl out fnstsw xchg pop mov clc and cli mov jnp int js xchg shlb jne insl xor movsb iret xor addr16 mov sbb mov popf or jns jns mov xor jmp out push sbb (bad) xor mov and test lock push push jmp ret xor (bad) imul xchg mov into imul add cli and push add adc xor sub xchg call (bad) xchg out es or sub mov xchg xchg cmc inc cs imull push pop popf mov inc adc xchg div mov in jecxz jg (bad) add scas xor mov sbb jns adc push fidiv adc leave mov inc rclb scas jmp cmp mov cli mov xor icebp fstp add ret lret sbb mov and add or out mov jne inc jmp mov sub int3 fsub add xchg call int push mov push sbb xchg hlt adc mov subl (bad) jg inc push dec in pop (bad) jg test sti inc icebp adc ret clc mov in subb mov nop dec lods scas (bad) xor out (bad) out mov dec pop cmp je lea (bad) mov inc push cltd ljmp push inc daa sbb mov push push call test xor insl pop pop mov push fdivrl stos dec lcall jecxz cmp iret pop jne inc mov (bad) mov add lret sahf std mov outsb roll pushf inc mov (bad) repz push cmpsl arpl mov js inc (bad) mov lcall lcall sbb mov adc mov loop test dec jl lods mov sbb (bad) test and stos adc inc ret xchg idivl adc fstps xchg push mov jnp ljmp push lock pop mov mov addr16 jae fbld flds pop dec fnsave jnp push aam jnp (bad) (bad) dec out (bad) xchg or scas xor pop inc xor sbb push mov pop and popa xor cmp cmp xorl jbe aas mov add or xlat div popf out dec mov mov adc lock push cmpb mov jmp fwait xor xor push call sbb inc int pusha shrl in loopne enter data16 shrb push out xor in pop mov pop cli sbb xchg cltd and mov les mov movsb lret aaa daa movsl lods jp iret test mov scas das mov mull inc mov (bad) sub push mov mov mov push test pop hlt pop outsl adc xor add or mov js int3 clc addr16 push pop jl sbb loopne pop xor lock iret insl inc or push gs test push jae dec in jnp cmpsl cmpsb push inc sub std lods cmp cmp mov dec cld mov inc stos icebp adc cltd jp xchg mov or xchg xor cs or lods xchg pop aaa xor fmull sbbl decb mov lock mov cs mov test mov dec adc inc push push mov in mov out jns inc pop leave leave sbb ds adc mov cmp shll mov pop cld jle or (bad) lock adc dec loope mov arpl xchg mov fiaddl mov into cld call jecxz mov push lcall jl inc icebp or scas mov jne leave pop jg pop pop ds push inc pushf in imul mov jmp aaa outsl mov push mov negb scas sbb xor push inc inc and enter and addl out cltd xorl and stos fnstenv (bad) fiadd xor shlb xor std out mov pop add (bad) fwait inc fidivr sbb sub call (bad) dec dec fisubrl (bad) or js js mov out pop xchg pop outsl cmp adcl mov sbb pop scas jl jmp (bad) cmc pop std cmp mov sbb inc movsl mov adc loopne xor imul mov mov ljmp push mov pushf lds jmp xchg test arpl test push cltd lcall or subl sbb xchg pop sub lock sti ds mov jbe cwtl and xchg pop pop pop mov dec sbb sbb stos mov test mov xchg hlt fisubrl mov fisttpll cmpsl xor adc test dec movsb js das test loopne xor dec fcompl test repnz cmc jb jg push cmp out xor cltd loopne xchg mov ja out sub push movsb test mov adc aam sti flds call and lds ret adc subl mov dec fisubr inc jnp pop push clc fistpll rcrb adc icebp mov test cmc jl push mov std sahf xor push xchg cmp lret pusha insl and xor or xor sbb push std mov sub divl pop xor (bad) ss xlat scas mov sar mov lahf mov cmp push xchg mull xchg sub inc test cmc jg cmpsb mov nop lds sub (bad) pop int3 lods das out xchg dec (bad) mov rcl xchg insb adc in push dec sub inc int mov cmp cmpsl xor and les dec xchg sbb (bad) je (bad) ljmp xchg xlat xchg idivb mov imul in jbe or jbe dec inc mov loopne cmp add and xchg sarl and mov or movsb mov sbb cld push dec xchg mov (bad) pop lods jmp xchg cli xor aad lea push idivl punpcklbw loop pop cmpb lret popf rcl es jb std jge pop adc cmpsb ljmp sarl mov or push fsubrl push mov xchg lcall xchg cld in jb loope dec sub xorl rolb shrl jb lock push or fwait cmpsl outsb scas fcoms lahf or mov pop xor sarl push jmp daa popf xor hlt mov xchg push popa xlat loope mov sahf add rcr xor adc mov clc push enter sbb (bad) mov lcall xchg jmp pop inc lea aad out xor imul inc bnd mov loop test jmp mov loop dec mov bound sahf outsl movsl fistl (bad) sub add mov pop icebp inc imul or (bad) adc jbe pop pop lret daa inc cwtl jbe sbb rol int3 push cmc movsl (bad) rcll sub jmp dec mov cwtl insl mov mov xor push (bad) mov cmc pop add pop or fcompl cld pushf adc pop ret insl mov jl push push sbb roll movsl xchg jp lods and dec and sarb mov imul mov pop mov les out dec iret push mov bound cmc lods inc pop movsb xor adc push mov in outsl mov xor dec mov mov pop xchg fwait fwait icebp or in lret (bad) mov (bad) in out leave mov inc mov fs imul mov add arpl je jae fucomi mull fnop lea movsb cmpl in iret mulps fisubl sbb sbb cmp test out cs int3 cmpsl push inc pop jne daa and imul jnp pop fldenv addl mov (bad) in push pop fcoml cmp xchg xchg lcall adc in add xchg adc jbe test mov mov dec push sub mov sbb cltd lea xor xor add inc mov loopne aaa pop lahf pop inc or test cmpsl cmp or mov scas sti aaa nop pop jge pop into and xchg adc pop mov (bad) push pop popa loope cltd sub js mov repnz cmc xor ret ret or cli pop adc (bad) and and insl lahf xchg movsb xchg mov addr16 pop xlat mov (bad) xchg and cmpsl lret popa bound test in mov inc jmp jle in cmp xor test mov in mov flds jmp xchg jecxz xor adc xor lret mov push xchg imul popf jne pushf loopne push mov fistp mull mov jbe (bad) mov add push sahf test stc jns push aad xchg std bound dec jl dec outsl mov ja repnz movsl (bad) add jge pop cmp mov in into inc pop or xlat fmul cmp movsb jecxz push loope out pusha (bad) cmc mov clc or das movsl or mov call ret test xchg push pop sub test loop sub into mov jb cmp jg addr16 int3 ds (bad) mov pop and sti pop cmp or dec fbld shll add mov inc das push push xlat sub pop stos or aam xchg outsb negl loopne add sbb xchg add sub add daa das and lds cltd (bad) nop fwait sub dec pop lret ljmp pop test adc jge push divl (bad) sbb dec leave add imul dec orl and mov or mov scas popl push cmc pop cmpsl pop into inc hlt cmp adc xor mov lock movsl sub es imul roll gs nopl push arpl and xchg push gs mov nop loopne inc mov cmpsl lock dec xchg push pop (bad) add lods movsl jg shll xchg and fisttpll sub movsl push jns jg pushf add fisttp les hlt mov mov sbb test adc pop add pop jmp pop pop dec pop mov (bad) (bad) ljmp daa adc negl mov js dec test sbb rcll addr16 movl sahf adc loopne sub test pop cmp push xlat adc sarb push cmp ds sbb xor sbb aaa (bad) fwait mov inc mov and ds stc aam sub xchg mov pop xchg sub jp push clc cmc xchg pop xchg adc scas stos adc or inc das sbb or imul xchg sbb inc xorl cltd (bad) sub fwait dec jnp jb mov dec push in (bad) and (bad) sahf int out or jg hlt jae dec (bad) outsl pop fisttp sbb mov addr16 pop mov paddd in shl mov sub repz aas xchg (bad) dec mov adc cwtl hlt fadds inc cmpsl mov (bad) int stos xchg pop xchg cmp lods sbb push or jmp mov cmp sub jmp lcall movsl fsub adc pop neg sub xor stos xchg mov mov inc push popf in jo adc xor repnz mov adc rcrb cmovae mov test ret ror cmp aaa aas test enter shrb push mov or or push cmp mov and cld loop dec lock sbb pop sbb xlat outsb mov sub or aas sub cltd cltd aad push inc push or std push jg in push lods and dec adc in add mov and jge rcll (bad) pusha inc sbb mov add cmp call mov into imul in je mov fs out push stos shlb inc cmpxchg8b das faddp push xor movsl inc jne or in inc arpl dec sbb mov pop xor push inc loop xor insb movsb mov clc fcomps mov add push ja jmp aas sbbl (bad) pop inc sbb das jecxz aad aam enter adc mov mov es cmc fwait jne pop mov dec lcall nop and and lods jmp push xor call adc rorb scas inc xor inc jg pop hlt out stos imul mov scas movsl mov mov repz xor sub je sbb aas push push push mov inc orl mov mov and std add out mov clc fwait add push push enter shrb sbb popf jno (bad) je repnz cmpsb fildll mov scas xlat mov mov adc inc mov das dec scas aaa jae js repnz pop fstpl arpl adc fnsave mov xchg scas mov aam add in pushf ficom test adc adc inc es adc add lea inc push and sbb and mov lock sub push (bad) jle jae int3 ret imul fwait mov pop pop pop adc xor out js std push mov rcrb fstpl negl loope jecxz xor and notb adc mov cmpl and lock (bad) popf cmp push out aad mov mov out loop (bad) mov cmc jge aas adc data16 ret jl clc sbb push inc jl adc orl xor xor sub push data16 xor sbb push jne pop lds pusha push scas mov adc sbb ljmp repz dec dec mov add xchg movsb xor popa lahf icebp xchg cld xchg out mov ret cld in daa mov das cmpsb push test icebp mov loop inc das lods mov mov push dec dec lea (bad) push in jl cs dec lds ljmp outsb int xchg dec mov sahf or xor stc addr16 lods sti jno je dec dec or mov daa enter fisttpll and mov mov pop in pop fldenv inc mov repz adc or cmp and sahf jl (bad) je and cvtps2pi jb in nop mov or fidivrl or and fmull cmpsl lret test xchg sbb movsl pop pop data16 pop call lock test inc mov jl push aas rcrl stos in lods xchg (bad) arpl and add pop lret fild es mov std dec dec cmpsl and add ljmp or lock loope inc adc push leave into cmpsl pushf scas jmp mov pop jbe xchg fucom pop fimul or movsl das das out xchg dec dec in (bad) insl jecxz dec sahf mov addb pop dec int3 pop adc sbb fmulp jb pusha xlat push push xor and push jae es mov int3 sub and jge mov pop ss lods xor imul jns xor std leave cld adc mov in ret stc lahf cmpsb jge mov mov insb iret mov and jge in lret push loop cmp cmp push inc xor mov push outsb adc and inc mov cmp lds inc nop sbb lret aaa pop (bad) mov andl push sahf jno xor sub mov pop push mov aas inc inc add pop (bad) and int pop mov pop imul cmp xor push fistl ret sbb push out pop or imul (bad) jno pop fisttpl imulb aas xchg sub lret in popa daa loop stos sbb push test outsl adc (bad) aas push faddl in mov fs jne mov (bad) mov nop push stos data16 sbb not add xlat xlat bound add ficompl int pop sub (bad) loopne xchg or jecxz,pn mov sbbl mov orl aas dec mov push dec cmp mov push hlt cmp inc push jbe (bad) xor movsl mov push sbb and xor dec pop adc popa scas mov jg popf lret dec cltd lahf sbb (bad) adc dec int3 mov push mov lret sbb mov movsb movsb cwtl fs in lock bsf dec scas outsb psubusb add jmp cmpsl insl pop jl or sub push mov xchg fsubl jp jae cmpl sub mulb xor mov mov ja pop dec xor pop insl push cli out xchg mov stos xlat pusha jb xor das outsl xor mov (bad) lods je mov lcall call jbe fwait repnz insl push xlat and mov inc outsb daa mov insb sub jns leave xchg loop inc xor js mov xchg xchg mov repnz and repz dec xor adc mov std cld shll sbb xor cmp imul cmp aaa xor inc fs cs dec js or pop out outsb jbe pop test out enter xchg adc add mov loope in fnstenv shlb jbe adc frstor fild fsubr push mov xchg mov mov into sub int cmpsb sub and adc adc (bad) cmp aad mov mov (bad) inc pushf jle add and push push fidivl push fs mov sbb jb out cs pop dec mov add push sbb clc cmc adc fcoms cli ja jb subl and adc mov mov mov lods es inc cmpsb ret mov insb push lcall notb (bad) mov hlt clc dec movl xchg stos popf inc inc testb and dec sti dec push push mov hlt fildll orl mov and test imul mov lret cmp lahf cli sub and mov xor push pushl adc loope enter cmp shrl jecxz cwtl scas stos clc or fsubr sbb sub adc mov mov inc (bad) imul daa pop daa icebp in mov dec iret mov rcrb push jbe in lea dec loopne pop push mov pop and das mov in mov xor xchg lods add mov inc (bad) push push xchg dec adc ficompl jne fmull sbb mov xchg fwait jns and push xchg test inc inc lods push stc cmpsb fwait repz ficom (bad) jl call test cmp mov je nop push mov gs push pusha inc jmp lods lahf mov xchg fstps sbb nop and add mov fisttpll repnz jmp or sar lahf inc and roll iret mov xchg lods mov cmpsl aaa or cmp sub movsb arpl pop adc dec jae test dec jmp pop inc pop sahf push lock fidivrl xchg push xchg mov bound iret lret call repz inc lea sub xchg xor add mov (bad) xor cmp cld mov inc lret sti and fldenv mov add xchg repnz sarb loop fadd pop fisubl mov lea lcall shr std push sub add mov jae xorl jnp dec stos (bad) dec (bad) sub pop sub xor or test pop jle ds in adc rorb jg mov sbb std add or sti xor in pushf adc cmp ja,pn xchg and loopne cmp and xchg imul rcl icebp pop or inc xchg in loope push out fnstsw pop cmp fwait hlt xchg in jnp jne jp ficomp xchg out mov icebp lret or jp mov (bad) mov lcall and leave rclb fdivs jmp inc js (bad) xlat sarb pusha pop leave std popa mul mov jb movsl xor mov paddw xchg xchg xchg pop inc push sbb push adc mov enter add cmc sub cmp xchg out out mov mov push and adc lret xchg cmp jb rclb push movsb movsb (bad) leave pop mov fldenv mov fstpl dec fildll movsl dec loopne jb scas xchg xor andl xor adc cs inc cmp adc xor popf inc mov mov push mov add es ffree rdmsr ret mov ret and (bad) sbb std pop inc adc or mov jbe push add dec loop cltd mov roll mov fldenv mov mull dec in (bad) aaa inc aaa rclb mov and add jae sub or out out dec push mov popa (bad) lods dec shrb push test mov dec fs fidivl outsw aam dec jbe loop xchg or pop movsb dec push mov sub dec repz syscall sub push lds mov jl shlb add int3 je or fildll std out push test or aas push cs cwtl mov pushf into les repz push mov xor jne stos (bad) xchg dec clc cmp leave je inc xchg or or xchg fistpl jge mov sarb outsl fdivl adc inc cmpsb movsl fdivs ds lret subb pop lcall negb or mov or insl enter pop dec outsl clc mov push in adc (bad) gs add (bad) notl sbb ljmp loope repz imul sbb or je pop mov loopne jnp adc mov mov dec pop jb mov int3 fsts test dec in or mov int add imul out push mov xchg xor data16 iret les mov mov push rcrb ds inc test aaa cmp mov fcomps cmpsb dec add lcall ret mov mov stos rclb sub loop jb and pop sbb aam fimull sub push fidivl fistl (bad) hlt out xor xchg and dec mov sahf arpl iret mov movb or xchg push cld fidiv aam fadds in dec jecxz mov pop movsl and and data16 fisttp mov cs pushf daa imulb rol das outsb pop inc cld ds push dec fnstenv lds push cmp sub (bad) out or loope jecxz mov push adc testl (bad) pop pop out xchg sub mov jb (bad) pop cmpsl cmp dec mov add mov push es xchg push test sub js out sub xor push pop mov inc push jns (bad) outsb rcll add int xor dec adc call push push loop mov jmp int xchg add imul loop int xor inc pop repnz mov aas sarl add inc (bad) xlat xchg adc hlt inc hlt lods ljmp push mulb push sub inc pop mov movsb (bad) mov mov ret test lods hlt int3 aam xchg es es (bad) jle pop imull jno mov or xor (bad) sub (bad) xor cmp das inc cmp jge clc add and addr16 mov adc xlat std pop mov lret stos fs push dec adc jae xchg mov cs push in shrl rcr xor js adc insl add imull xchg xlat jbe cltd or adc inc push loop cmp sbb out mov mov popw xlat mov sbb push outsl cwtl inc shrb stos cmp dec bound mov add mov mov jo lods fs div ss sbb outsb jl fnstcw mov dec mov cmc adc dec popa dec les xor cmp xor and add and add xor movsl test push test (bad) fadds stos jbe xchg cwtl inc add cmp je movsl mov (bad) ds fwait and cld in sbb dec gs jmp sbb sub xor in cmc mov adc sub mov jmp mov bnd adc or jno mov inc in jnp ret mov es das jle (bad) or add xor std mov add jae push aaa bound jnp jae xor in aad inc movsb rcll ret (bad) je pop push movsl xor jnp push ret out stos push out mov rcrb pop push in call and dec xor mov xor cmpsl fwait mov or sbb jg sahf addl cmp cmpsl fwait gs ficoml negl push dec mov xor and mov cmpsl or lds jg dec add (bad) fdivrl popf icebp ljmp scas rorb cmp pop mov fcmovu inc mov fisubrl cmp pop or clc adc xor xchg sahf sub loop jecxz loopne fwait add sbb lahf rcll add out add ljmp jno jnp nop xor imul sahf cli xor or xchg insb or jl leave cs lret test cmp mov mov scas sbbl dec mov sahf xor xchg jnp mov mov jmp or xchg sbb stc adc ss scas sub hlt leave std in xor stos mov das sahf jns pop (bad) cs sbb mov inc xlat push pop lret xor pop mov cmp pop ficompl and notb repnz fnsave jnp inc mov sub xchg (bad) mov adc sbb fisttp nop test aas push clc fwait test mov dec mov adc or or mov in test jne in jbe or cli iret cli xchg or add js jne test stc sub jle out scas imul gs movntps fs sub loop loop (bad) hlt push mov xchg cld nop leave adc (bad) pop dec test mov and xchg mov sub andl jl sets or into pop inc add (bad) push into jnp aam gs test adc inc outsb call mov rclb loope push inc add imul inc sbb jo and mov and cmpsb iret or cli test add aad add mov inc xchg sbb pcmpeqb sub push xor adc jp mov xlat test fwait push mov push mov mov jne xchg sub xchg mov test jmp lret das sub jge ss xchg sarb jnp xor dec mov pop (bad) cltd rcrb call addl mov xchg mov push pop push dec adc pop mov ss or daa std cmp mov and push aas add push les mov stos outsb insb outsb xor enter stos or mov int mov data16 sti pushf mov (bad) lea sub fs cld ja and cmp jp inc out mov jl inc cmp mov pop sbb mov cwtl test or push sti push cmpsl (bad) mov shll movl pop lock (bad) rorb add pushl mov xor mov push inc inc outsl insl jo arpl mov push mov (bad) (bad) adc pop mov imul push dec xlat iret xlat adcl push push push sub adc jp sbb (bad) fnsave dec or sbb sarl inc jle fldl jmp adc or fbstp pop jl push cmp push test (bad) cmp cmp mov aas fsubrp loopne ja shr outsl pop sbb jmp mov cli xor lods gs mov (bad) sbb mov addr16 xor xor ljmp ja mov jle and add adc testb mov inc sub sbb into mov (bad) int3 es stos push dec out cwtl imul sub sbb cs jns or sub ja jmp jns adc scas xchg cmovnp pop jl fwait push (bad) incl std lcall and pop (bad) pop mov movsl push addr16 mov xchg xor in add loope nop pop mov popa addr16 xor bswap cmp push cmc mov dec inc xchg jo or pushf lcall xchg adc pushf cmpsl in cmp adc jp jmp addr16 cmpsb dec lahf data16 mov inc mov mov pop pop movsl cwtl xchg mov imul dec dec pop in mov adc push test pop fs xchg int3 (bad) data16 and xchg movsb sub (bad) lret das xchg mov xor fwait in xor sbb dec and loope fs mov mov jl add adc pop push xchg xchg (bad) sub dec in or or insb inc test cltd xchg xchg mov mov fldl aas mov negl jo lods cmp mov inc fiadd addr16 dec push adc mov jmp push inc xchg mov (bad) xchg in jge jl inc jmp xchg push sbb mov dec add hlt xor add pop add sahf mov bound shlb jo sbb cwtl mov inc lods dec sbb jo push add stc gs xchg adc jle and subl std bswap sbbb outsb gs push push shrb js mov push (bad) cmc cmpsl ja mov ret (bad) in jo lahf sbb loope lcall cmc outsl aaa sbb inc push loope addl ret scas mov cld lret mov and adc lock repz push test in dec roll xor or (bad) stos fmul fild bound (bad) hlt dec insl sbb inc pop inc pusha xchg jo cmpsl or xchg (bad) mov mov lcall mov and lods xchg aaa sub sub repz jo ucomiss js (bad) dec mov icebp jmp add test xlat xchg sbb mov imul daa xor xchg and lret jno icebp adc xchg loope in cmp inc mov stc (bad) jecxz cmp sti imul aad lcall iret sub cmp push xor jo cmpsl test mov mov add adc dec cs pop movl lret dec jmp (bad) mov xchg (bad) in fsubl jb call lds sbb xchg cli jbe dec push mov out fimul jmp mov jge or das pop inc jp and pop jle insl mov cmpsl inc movsb jno,pt cmc mov pop cmp adc test out cmpsl enter or shll and push pop lret icebp pop push or jge mov scas mov fwait aaa test clc jmp sbb jl jecxz inc sar cmp out lahf fnop inc mov xchg pop fwait push mov lret dec push dec gs (bad) ret xchg repz mov or int cmp xchg mov pop shrb jnp mov sbb xchg inc ds dec or mov or in shrl push pop push lahf fwait xorl int3 push mov jns inc jp scas xor jmp sub xchg (bad) (bad) sbb jne stc sbb fsin rclb pop add ja les andb lds add stos test sarb push push (bad) jmp mov cmc sbb movsl pop vmovupd fwait mov imull outsl or adc add cmpsl fsubr clc pop mov xor fadds ss dec fstl add ret std data16 enter lret popa mov out mov mov jmp adc sub insl mov push stos cwtl cmpsb inc cmp pop and adc mov outsl add add cmpsb aas push mov leave ds ret pop sub mov cwtl in sub (bad) push rcrb inc push mov push outsl hlt xchg xchg pop jne push cmp push aaa lahf jne ss mov push push lret push cmpsb cmp mov jns out add pop fisubr je enter jae or inc js adc dec fstl sub and or rorb cmpsl jg lcall adc or add icebp out test loop fldt stos fisttp loopne sbb dec cmpsb xchg stos mov cmp or out xor sarb cmp pop jno cmp test sub std in xchg iret imul out cmp data16 sbb stos clc in sbb dec mov push jle shll jge push stos int cmp pop jae and repz repnz mov jmp inc mov cmp nop loopne dec cmp decb jbe jmp lret mov icebp jnp mov cmc add mov mov in sbb xor sub cltd fild sbbb fistpl ss loope inc aaa out dec hlt and aas mov jmp flds pop (bad) mov mov std add repz inc and or xlat jns push gs sbb add scas out stos and js pop cmp sti cmp lods jge jge pop mov inc xchg (bad) std jno mov sahf adc daa pop jnp jae loope ret stos jno and lds sarl pop adc loop or enter adc mov lods loopne ds in idivb insl leave das (bad) imul mov xchg push cmc (bad) jmp mov mov not mov or test xor xor lret movsb jne xchg push loop mov stos hlt xchg inc popf pop adc icebp fdivrl push inc loopne in ja jbe imul mov aas xor jle jns mov fstps dec test js mov jae cmc (bad) dec jl jns mov cmpsl lods mov scas add add rorb push dec jle jle jne out sub mov dec lds imul jp pop dec (bad) cmc xchg pop mov cli xlat fucom popa sbb push cwtl add sbb push adc sub mov cli push lahf repnz mov mov ret add add adc loope xchg jecxz enter fisubl repnz jno pop xchg pop or inc push cltd std mov lods adc sahf or jmp in into sbb cmp or xchg mov ja cmp cmc in and mov negb pop mov jmp orl jp mov in fildl mov sbb ficom (bad) jg test sbb iret decb pop mov adc mov cmc popf outsb jecxz lds push fisttpl and mov int xchg fmull mov arpl repz or jl mov scas (bad) lds es scas dec jns stos add cmp push jecxz lret stos mov leave jbe adc in push inc movsl or imul ds mov adc jmp popa mov jecxz jnp dec sbb mov loope into jno jge (bad) leave in int3 addr16 mov cmpsb push xchg xchg nop mov and movsl sbb cs jnp push stc je inc mov jb pop mov sub lea dec inc mov nop pop stos mov mov les and in dec mov aad or inc xchg rcrb pop pop js xchg push loop mov out pop or cmc adc jae call test dec popa cmc lods mov test xchg add or add test stc fcmovu cmc cmpsb iret mov jle mov xchg jo push cld (bad) and popa cltd sahf nop pop mov xchg push xlat fidivl add shrl pusha jae rorl adc push sub and mov js jmp xchg rol loope fiaddl aaa push adc (bad) in arpl push sbbl inc (bad) mov pushaw daa mov fs icebp loop sub cmpsb mov jmp popf xchg (bad) xor xor outsl sbb add jo dec repz movsb mov xchg movsb jne push mov scas (bad) stc dec xchg xchg or cwtl pushf xor or xor inc sub (bad) (bad) icebp fisubrl movsb xchg sti xchg sti nop leave lret mov aam (bad) mov sub add lock inc rorl mov out mov push and sbb mov mov add pop imul ja (bad) jnp leave cwtl xor aam jmp push out cmp das into xchg push dec mov add insb sub and push or sub or push adc cmpsl lret adc sbb fcmovnu mov testl js les xor jnp faddp pop xchg pop movsl xor daa pop cwtl faddl (bad) loope push (bad) aad xchg mul mov and adc jge fldt pop sbb cmp (bad) out (bad) rcl mov movsl pop jle es add dec cmp mov adc sub push andl or inc inc xchg pop sub push mov jbe les sub int3 xchg sub dec pop ret push repnz sub ss dec (bad) jb pop xor inc push and pusha add pop fs inc loop cmp pop fs (bad) std ss rcrl xor inc inc add cwtl (bad) fstpt daa clc xchg sub add test xor push jne test xchg sahf mov lds jmp cld jecxz ja push mov jg mov and xchg addl cvtpi2ps jae xor mov sbb mov adc push dec push mov cwtl or pop hlt les bound push mov pop mov and pop pop dec mov leave mov fwait into mov jg jge inc mov jne outsb inc and scas lahf out (bad) push dec inc into inc fsubrs imul call (bad) leave (bad) loop push add jg fadds pop xchg outsb cmp fs mov out cs out ds sbb sbb mov repz outsl fwait or dec jg lahf outsl mov out push outsb ds scas fnop push stc les bound or inc (bad) popa addb jae jne push fldt arpl imul (bad) loop xchg add std jbe dec or mov push xchg inc jp jmp shr and aaa xlat jbe or jecxz jg lods mov lods (bad) cmp pop and loop jbe lock push cmpxchg or mov xchg sbb (bad) inc ds jnp mov sub jo fs dec sub outsb cmpsb cwtl mov seta or push (bad) mov (bad) cmp add xor add pop dec shrb cld je sbb and hlt push fwait das leave xchg add in inc cmp jmp rorb loope aad ljmp (bad) icebp shll xor (bad) ljmp out lret test aad xchg mov mov cwtl iret jns hlt ret int3 mov rcl xor adc mov cmpl cmp (bad) xchg adc out add lea xor and pop scas or fidivrl mov mov cmp lds or pop mov mov dec push cmpsl shr xchg aas push mov fwait imul mov inc test mov movsl aaa xor (bad) mov xor aaa icebp ljmp inc xchg dec aaa push iret std nop xchg (bad) dec dec dec daa insl ja lret mov (bad) adc or or lret pop (bad) iret lahf xor aas xor xchg jo test fwait scas addl xchg pusha ficomp push lret out mov push rorl cmpsl je aas je pmulhw data16 add xor mov pop imul dec pop mov jge inc xor push push mov (bad) or pop bound lret inc ret mov fcomp adc dec fcomps adc or (bad) jb mov sub sub dec dec inc lods (bad) lock es or daa sbb cmpb call push (bad) mov mov test cmp xchg in push fstpl ficom pop jg movsb or mov mov adc pop call cmpsb push xor sbbb icebp or aam sbb mov sub sbb sbb xor movsb cmp ss insl cs scas mov sbb or xor pushf pop or jnp cmp and rol xchg adc fildll jnp pop fldt and cmp pop sub (bad) cmp inc mov push ds xchg sbb std adc pop pop loope sub sub push pop xor jp xlat (bad) mov dec (bad) sbb int adc aam jo lea mov and sarb jle dec push push bound inc jb mov or lea add pop stc mov dec sbb or fistpll xchg pop sub shll cmp pushf movsb adc (bad) lods clc jmp dec cli out inc and aad int3 inc aaa add pop push jmp stos and outsb jmp or pusha clc adc push adc mov sub js test pop fnsave dec mov sub xchg or stos stos push mov outsl inc movl jge lock push jg or scas add es inc jecxz enter scas rolb rcl iret cmp std hlt fdivr ja cmpsl dec sbbb test mov rorl sti ljmp push mov popf scas dec mov xchg jmp adc xchg push push popf dec adc fstpl out mov out cmpsl xchg jno rcrb gs and in popf test test xor dec xchg addr16 rcrb int add xor xchg clc daa jbe and ret jo push es mov aaa push fsubs movsl loopne lock mov fwait xor push xor mov and cmp (bad) xor mov jb aam (bad) cmp in outsb jmp xchg mov fs lods out sbbl into fisubl nop addl scas int3 jo inc mov fdivrs adc leave nop sub in mov or pushf mov insl pop or pop sub testl add scas xchg and jg out out push sub lcall lock test cmp push push fnsave dec adc jns mov or xor push push pop adc je adc mov out xchg mov not cmp (bad) adc push sub stc sbb scas aam push dec inc loopne jno sub imul jnp jmp or mov xor nop mov sti cmp cltd lcall loopne add enter (bad) dec call push cmp pop push (bad) xor dec loop out jne push lds sti xor cmp fwait xchg mov mov insl adc mov (bad) dec arpl pop push pop cmovbe vmwrite scas arpl xchg inc adc hlt aam inc inc cmp insl pop mov leave inc cmp out fcompl mov adc (bad) jbe in or stos pusha jmp mov pop jne into add xchg push jnp out mov int3 mov jno dec mov hlt les sub sub mov scas sti sub xchg adc lcall pusha out push and mov mov insl decb or mov fwait mov or jecxz popa sub out cmpsb jp cs jnp test rclb cwtl hlt paddusw cwtl movsb xchg dec rorl and xlat add rcll mov jo imull ds mov add out test and mov mov adc jb push dec jo fucomip dec and xor mov arpl cmp arpl les jg lret sbb leave push inc cli fmuls xchg sbb add inc add gs div inc jo push dec jmp inc cli movsl js push repz xchg mov loope jge out mov fistpll jge jle add jg movsl xchg clc insl in fcoms pop incl pop mov call decl divb fldl out add gs add or icebp inc leave loop mov jns fisubrl decl xor cltd ucomiss push inc mov (bad) ror push subl pop sbb xlat ret jmp jle inc ret or push arpl rorb pusha rol rclb lret pop mov pop shlb insl int3 dec ja jno mov push sbb pop std xlat jbe lods cmp arpl in dec movsb pop in jmp mov jle mov divb int3 mov mov loope push pop or into push std cmp mov xlat xor inc dec jge cli fucomip negl rcr jmp daa enter push jp lahf sub insb outsb push push popl aad in sub xor xchg push push dec inc push push hlt enter add dec mov add or jnp push je dec xchg push sahf adc jbe pusha ds cwtl pop sarl mov cmp mov add jecxz iret in add in or test xor mov mov adc mov lret or insl sbb push daa fcmovb incl cmp pop clc xor jns jo fsubs aaa jb pop pop and dec int3 dec (bad) push enter pop rorb aam pushf mov and clc xchg cmpsb sub xor call xchg lds push mov mov outsl and shll js mov das cmp flds insl push mov xlat repnz sarl and sbb movsl add jmp mov pop jmp sahf jb sub lret and push and inc push popf pop push ficom sbb and cmpsl repz ret xchg inc ficoml mov test sahf fldt mov (bad) (bad) ret mov add dec ja aam jbe push and sbb dec mov scas mov or jecxz jbe aaa daa in out or mov or or lret xchg push repz out fwait jecxz and sahf or xchg gs je cmp mov leave fsts fild push stos mov pop xor and lret pop mov mov push mov sbbb push cltd jp icebp adc (bad) fcoms adc popl and int3 xchg xchg pop fmul fidivr fcomi cmpsb cmpl push jbe pop adc adc dec fstpl icebp xor xchg stos sahf and out je push jmp lods sbb pop xchg popa xor or mov orl ljmp iret mov arpl sbb call arpl cmp jae jno lahf ja leave popf push jnp imul into xchg cmp fwait (bad) aam sub roll adc ret in roll imul mov fistp cltd push jecxz xchg sbb popa mov repz sub adc mov repnz shll sbb mov les movsb les sbb lock mov das pop aaa xchg mov xchg fdivrs cmp divl or mov cltd (bad) add cmc mov push fldcw cltd mov jbe push xor imul mov loope addb imul mov jle pop mov push mov cs xor (bad) je fsubrl xor icebp mov mov repnz push (bad) loope jle cmp mov add jecxz mov cmpsb sbb push (bad) adc add sbb pop aam stos mov mov ret mov mov in xor outsl add mov aad ds mov loopne push je add push and ljmp and arpl dec adc or push lahf and xor add dec loopne xlat sub les adc outsb mov das jmp push lds lds enter cmpl insb mov sbb imul add mov loopne daa xchg sbb push out inc jnp pushf adc jnp mov mov int cmp pop lods jmp adc adc daa jl mov int dec xor jo sub pusha or rclb mov arpl out fildl dec or in sbb ds fistl lcall jne push push out mov bound imull aad jecxz add xor lds stc loope add mov mov jno movsb push sub push mov jp rorb jg and inc insb and mov fistpll pop pop or inc stc inc jmp imul fildl or or ss fs mov rcll push xchg cwtl mov cmp inc mov mov mov out int sub (bad) hlt cmp stc cmpl ficompl pop enter cmp cwtl mov adcl pop mov xchg popa shrb shrl or loope nop cld icebp inc adc jl inc mov lea or or test push rcrb addb aad lret movsb lea adc lcall sbb jg mov and jnp mov or push pop ljmp push mov adc jbe mov dec jb lcall test dec icebp mov lret imul test xor sarl mov mov scas cmp aas lock outsb jnp insb mov lret clc popa dec imul inc mov mov (bad) negl unpckhps stc enter adc iret hlt pop cli ret push and pop and arpl inc lret icebp jae les mov inc adc mov in std cwtl xchg fbld lret clc jne insb mov sbb mov ret cmp arpl pop pop (bad) cwtl dec mov xchg stos test sbb in cli sahf mov inc daa adc or js lods dec inc cmc mov sub jo iret push jp xchg leave jne push mov push xor cmp out enter xchg les in xor imul lret popa jg add insb sahf inc xchg fildll mov xchg cwtl arpl mov xchg wbinvd lds stos outsb mov fidivr std lock pop outsl sub jl pop popf sbb in add hlt xor xchg jmp adc sub (bad) out inc popa jae sbb daa fcmovb fdivr jno xchg sbb sbb push ss sbb and fsts cmc scas push in or or (bad) gs mov roll cmp dec pop lods inc xchg dec test dec cmp aad mov mov out stos pop add push bound imul (bad) mov repnz adc ljmp test fist std fistpl mov jne jne xlat leave add call (bad) jp es pop les stc mov pop jb push and rcll imul mov aaa fimul das mov jmp orl cmp out mov mov xor loopne call pusha jmp (bad) je and mov dec aad add mov jge or or xchg xor sub repnz fisub pop int3 (bad) ret test sub icebp mov call and aas dec mov sub and leave inc loop adc bound nop pushf pop cltd adc push mov adc mov cmp and orl push repnz sub lcall pop push dec pop pop mov mov in add dec push movsb lea add fdivs rolb mov pop in cs int3 dec pushf lods pop push lret dec call inc adc ret and lods inc xor push stos popa jno inc lea dec mov inc call fstl fnsave mov xor xor pushf sbb aam stc mov clc mov int3 leave and (bad) mov cmp jbe outsl cmp testb pop jecxz xor add and arpl pop clc call outsl push jp mov sti jecxz push pop flds pop call in adc mov std (bad) lret test repnz pop stos lds adc push bndstx loopne (bad) loope lcall std jb adc ja bound mov push movnti ljmp add sti movsb repnz adc jbe test cli scas into push test mov aam in ja sub add sbb sbb sub mov hlt adc pop inc (bad) insl (bad) stc loop cmp xor xchg pop (bad) jno insb mov jg popf in outsl ret mov add mov xor and xor das jae dec andb push mov out (bad) mov xorl aas push fisubr fidiv pop (bad) jmp dec jmp cmp add aas xor and sub jmp (bad) aaa mov xor ljmp add dec shll cmc mov mull cld cld jmp mov (bad) lods (bad) sbb mov fld dec subb cltd adc je into movsb ret daa and andb fdivp in gs push mov jmp adcb dec xchg inc inc jnp dec rcrb sbbl decb into pusha in jl in jmp fcmovnu xchg out xor (bad) xor pop sbb sub js jg pop ficom or lods aam insl (bad) or leave stos fnop call adc fbld mov push cmp subl jnp aad sti add inc sub inc mov insl mov inc fstpt mov mov lock push cmp mov jo stos arpl aam sub inc int andb jp pop lret jns sub and pop insl mov in pop inc jp cmp fs push shll cmp and popl lcall push gs jae dec andb out setbe and mov popf and jp scas cld mov xchg call xchg mov mov adc or faddp ja aad push pushf dec inc pop and jns in push pop daa cmp add xor sbb xor int3 mov rolb stc shlb jno aas sbb jnp xchg and sbb xlat add jae adc sub add inc mov sti inc dec lods pop jbe loope clc or lds vpminub inc cmp in outsb imul aaa je xorb fwait dec repnz jg sub mov addl or jo jl mov inc sub mov test jle pop out (bad) mov imul xchg lcall (bad) (bad) mov lds dec pop fidivr out shlb mov xchg (bad) mov pop mov xor pop push xchg test out (bad) cmp cmc cmp stos or inc and or (bad) cmp mov xchg jp shrb dec xchg pop rcll mov cmc push loopne push sbb sbb out inc ljmp add push xchg pop jg and mov popf adc popf mov popf out arpl or mov cmpsl push aas mov and xchg xlat pushf adc lea cltd lahf and cltd bound jb xchg adc shll mov inc sarb pop std cmpsl daa call xchg insb fimul rcll xchg aam push mov cli push dec inc mov pop cmp sbb rorb ds sub sub adc mov or pusha xor sbb push sbb outsb sub test pop ja int3 add sub add mov inc in movsb xor dec sti lods adc nop dec daa jns aam adc xchg pop lea int cli dec sub roll stc andl loopne jne je ret sub mov mov inc mov push jb test dec mov dec pop js push notl insb xor sbb hlt mov ss pop sub adc push xor in inc mov mov (bad) push in lods inc jnp cmpsl mov and mov lahf dec leave (bad) fs call inc (bad) cmp pop stc mov pop pop xlat sub mov fwait xor das out in and imul dec pop stos sahf mov (bad) sti mov aam pop in aaa jno rcrl mov mov xchg sti fcmovnb xor mov jnp movsl int es sbbl ret xor pop pop pop scas loop add ljmp shr lock fcmovne xchg push xchg mov das adc rolb (bad) loopne or out add pop and cmp inc lahf int arpl cs mov mov test arpl aas fistl fstpt mov xchg xchg (bad) or movsl insb xor cltd daa cmp and (bad) mov fbstp std mov add jne cmp jae cmp add pop xchg dec (bad) cmp jg subb (bad) jle es loop lcall push cwtl add sbb mov xchg mov ljmp movsb dec fadd lods sbb or mov mov add ret out fld cmc cmp xchg sbb pop int pop push jl mov inc xchg mov stos cmp std jge dec out add jge (bad) aam mov cmc mov sahf jo inc out aad dec repz (bad) ds adc mov sbb mov mov add pushf sarb cld inc adc outsb dec mov and js dec jmp or jns insl pop mov iret js scas pop in dec xchg data16 int (bad) xor ss hlt jmp pop pop lods dec pop fnstenv daa loopne (bad) icebp cwtl into inc (bad) incl inc out sbb aad pop sub mov xchg scas iret (bad) addr16 and adc loop and sub sub stc insl dec xchg mov ss cmp sub pop adc push outsb sub cmpsb xchg xor cmp insb fwait nop mov or xchg stos arpl imul in imul jb lcall int3 sbb daa (bad) push fwait xchg xchg mov cmp or pop inc jp xchg loopne push sbb ljmp xor cli lret aas xchg adc movsb mov dec sub mov jb xchg dec adc das xchg mov stc cwtl out mov or dec mov and daa scas jmp out call xor add mov sub fcomi pop xchg push mov push int3 xchg adc sub push imul std push xlat dec cs (bad) xchg nop popl push (bad) lea in inc aad dec dec pop repnz jo leave fdivp mov or sub test data16 xchg dec stos insb xlat loopne mov xor stc pop cltd and insb mov popl jne int3 mov (bad) mov shr fnstsw test push sub test out lea mov mov (bad) mov jge or cmpsb fcoml les sarl or aam mov xchg cli pop add es shrl jno out pop rep cmp std cwtl inc das lcall cs pop imul pop stc inc xchg or test das jnp bound cld mov inc out ret adc mov aaa sub xor xchg aad bound pop mov mov push adc lcall sub loope in loope rcrl adc sbb adc sti cli push and bound mov out lret sti ss sbb ljmp sti dec movsb inc testl das xchg jge sbb movsl inc xchg int sub adc or into sub or add mov vmovupd insl or adc adc leave sti loope ljmp lcall pop xlat pop je ja push cltd mov adc or repz hlt shll outsb ds test outsb push mov inc jle dec movsb mov or add insb inc sahf sub jp or cmp sub lock int ud1 (bad) testl aad mov cmp lock inc cmp pop and adc stos ret pop iret dec jae jae jbe lahf fdivp xor mov dec (bad) iret pop and mov gs or inc icebp addl add stos xchg mov stos (bad) (bad) and lcall dec movsl sub mov dec inc mov xor ds push xchg pushf stos ljmp cmp mov out jmp shlb adc pop stos push fistpl lock lret lods enter and int3 xchg cmp cmp lahf pusha lods dec mov aam push xchg push mov loope repnz mov enter pop out roll test out notb jo ja or inc shrl leave stc (bad) sub push mov aad push std addr16 sbb xchg lcall sub jns pop cltd nop lods lret test lods dec loopne leave add or jecxz or fidivl adc shrl adc dec adc insl and fldl movb pop icebp jmp mov fldl ds out fidiv sti add add arpl push fwait std std pop repnz sbb popf cmpsb push fwait push movsl pop adc jg adc and in cmovs lahf sbb es ljmp pop push jnp enter and cmp pop fbld fisubr in (bad) out adcb mov jne mov stos lret add (bad) aad fsubrl pusha rorl xor (bad) orl insb jl cmp mov xchg popa repz mov sub and (bad) pushf ljmp xchg insb mov pop imul pop xchg movsb and nop dec iret ss push mov add aaa roll sbb jae mov or and cmp insl adc push cltd inc push cmpsl pop shlb es sbb stos inc iret sbb mov inc jp adc shrb pop mov xor mul and mov mov test mov mov cmp es jb jno pop cmp xorl mov (bad) dec in out jae fisubrl fs inc jnp cltd mov pop mov push scas push mov outsl gs add cmp xchg add pop dec int3 mov jmp mov std pop jp lret rol cmpl into (bad) xor (bad) pop push int3 in into mov jae dec push (bad) repnz loope je decb enter ror pop std jp aam mov shrb jno insb and sub push sarb mov jo fisubr imul xchg hlt push mov push cld shl inc imulb adc jle mov jb sbb pushf jl je and stos test cltd sub xchg lods enter push iret into dec cwtl or jg iret or (bad) push dec or mov mov mov lock add and punpcklbw xchg (bad) push dec or xor sub in dec xchg cmp (bad) xor (bad) cmp dec addr16 imul in add pop lea or aaa in fild mov xor sbb adc or and pop inc scas push pusha mov adc adc mov (bad) sti xchg adc sahf cli (bad) movsb mov jecxz sbbl test dec loop inc and cmp or addr16 cmp mov movsb or hlt iret push push dec and add xor stos sbb (bad) mov xchg mov lods dec out xor pop out clc mov or (bad) xlat jle cmp jo or pop xor xchg rclb xor ret daa jmp imulb mov add loop mov faddp jmp jae inc lods adc add sub inc pushf call aam add or push (bad) dec add jmp and add decw sbb xchg fidivl iret mov xor mov xor mov int jae cmp mov pop stc les xchg shll fsubs sarb sqrtps test xchg mov dec scas sub inc test inc notl lcall jmp ss dec jb dec inc dec lcall and mov cwtl add adc jbe pop lea cmp mov stos or mov adc inc outsb shll dec adc fwait sub sbb xchg ret rclb cmp loop cmp repnz das jb cmpsl dec cmp insl jge movsb mov xlat cmpsb xor push sbb inc mov leave dec ss sbb insb lret test push xchg adc outsb incb aas jbe add push lods das xchg push add outsl loope pop push mov in icebp and push pusha xchg loop adc adc inc orl xor lock cmc sbbl leave aad ljmp js mov out js sti jmp fiadd sti daa xor or cmc mov inc mov mov xchg movsl pop xchg insb daa and mov mov fild and dec pop arpl std xchg lea and in lcall add stc test pusha ljmp idivb outsl mov fdivrs dec jne mov repnz mov mov pop mov sbb xchg xor pop outsl in jae ss add pop mov pop push mov sbb pop pop sbb sub and jge jle pop xchg sbb out movq cmp mov dec stos sbb xlat adc outsl das add shl out int3 out jne sbb and out pop sbb pop lret fs mov sbb sbb stos sahf pop fcmovne mov test sbb arpl mov (bad) cli mov pop push movsl fucomip add push fcmovnb xor pop (bad) dec hlt popa jge mulb ret inc add (bad) push in add mov js pop fldenv mov xchg dec aaa pusha bnd lcall push addl mov insl lret inc adcb xor jg scas mov mov lahf aas out adc push call mov cs iret sti xchg push sub cltd ss add or jne fnstsw sub inc lahf adc stos dec mov loopne sti fmul cmp lds cmp imul dec fucom inc and push mov sub imul xchg ja (bad) jmp fnsave xchg shr inc jmp fdivrl arpl xor and mov data16 xor xor mov mov es jo adc ficoml mov jg xchg ja inc pop jecxz or mov cmpsb mov and mov fs ret addb pop xchg lahf cld push adc out sbb test xor lcall cmc cmp inc pop pusha adc sarb out cmp pop out add pop fbld sub test mov inc jo dec lahf push out mov xor fldcw hlt or cmpsb enter add mov mov (bad) ret adc out lret loopne jo sbb add push cmpsl adc and jg sub mov popf cmp jae mov mov push lahf mov cli dec and sbb xchg inc gs cltd push sbb jp gs add pushf xchg fnstcw and pop cmpsl sbb adc testb inc dec jne pop xchg lock sbb mov mov or and xchg test out dec push jle cmc stos jno shr out ret add repnz aam sahf mov pop sbb inc sub lret inc insb loop xchg cmc inc cltd pop push dec jge,pt into ret push insb aaa xchg inc imul icebp lods xchg inc add jo xchg adc das ret cmp add mov leave mov sbb pop lods xlat cmp popa push adc push mov push out xchg outsb imul or mov mov popa data16 or hlt (bad) pop ds jno inc fdivr push mov sub (bad) cmpsb push dec (bad) sub push jge shll push adc jbe lds enter push adcl in (bad) es (bad) in (bad) and je ljmp mov cli call mov ror popf out jne lcall movsb icebp sub ret cmp add fisubrl jg pop sub in in out cld ret mov enter aad fbstp xlat jo repz sbb pop cmpsl ds or pop icebp sbb ja and sarb repnz (bad) repz int out jnp loope orl mov data16 push sbb repnz sbb mov mov sbb cli lcall bound (bad) mov add pop popf movsl cld ss das cmp divl xchg pop fs adc cmpsb test add push pop (bad) lcall mov jo add (bad) jecxz fwait or or (bad) (bad) mov or sub sub sub lret pop sarl (bad) je into js mov enter (bad) pop cmpsb cmp sbb jl pop out pop adc sbb xchg jmp bound inc clc out inc mov in loope sbbl adc mov cmp sbb dec popa xor in dec ficom mov int jo cmp inc adc out xchg cmp xchg inc jle shrb outsb mov (bad) (bad) jnp xchg push jb cli outsl aam scas push xor lock mov mov or mov or pushf das push nop in insb clc xor mov sub roll test aas int inc push (bad) push aas xchg xorb mov dec nop arpl adc cmpl movsl and adc test sahf sbb mov insb sahf shrl push sub psubd sbb dec cld pop maxps ljmp mov bound xor (bad) pop xchg scas loope syscall push cs fwait idiv loope loope cld dec push cs aas jo and adc xchg enter push (bad) jl adc xor adc jno (bad) hlt mov (bad) cs adc (bad) and inc cld add sbb sub mov mov popf clc add mov iret cmp mov xchg adc lahf repnz stc inc and insb ss pop xor sbb inc sub sbb pusha jno pop or pop (bad) rorb mov rol add rorl iret push bound sbb es add ljmp push shll nop push pop adc sub sbb dec ja sub aad xchg sbb cltd push adc xor in lret lods sahf mov xor inc jmp icebp or pop lret jecxz jl jle mov mov push xchg movlps jp sbb mov fimull pop add test loope inc in sahf add and or dec cltd cmp outsl popf ret add mov cmp sti push pop cmpsl daa push push sbb imul sbb adcl adc sbb mov jmp movsl inc jp,pt mov into cmp xor mov jmp and push add xchg push lcall cltd mov imul test push mov cmpsb or pushf shlb xchg pushf adc fsubp mov (bad) ds mov sbb mov mov es inc stc sub push in or dec leave push insb dec loop fisttp leave push push insl jg pop jecxz xor cmp dec jecxz jo mov inc dec cmpsl imul notb fsubr xchg popa push lret xchg cmp add push jmp stos mov fsubl mov sbb lea push push sub jge xchg outsb mov ljmp inc gs jecxz (bad) or mov sbb (bad) mov jne sahf cmc fisubl mov fs call imul es mov sub enter pop dec mov add (bad) cmpsl popf or rcr pop notl out push (bad) jns movsb pop popf pop mov mov stos repnz sahf fsubs inc mov fnsave lcall add fnop shrl xor cmp sub subl (bad) lret imulb pusha fs dec add fcmovbe xor mov nop adc stc loop jmp xchg xchg fildll mov ds fwait pop (bad) icebp pop in or outsl push (bad) popa add or lahf jl adc push cmpsl sbb add push (bad) cmpsb enter fsubrs imul mov test xchg push push mov xchg sbb inc add pop mov mov dec mul push fsubs out pop popa jmp inc add adc mov (bad) movsl repz or (bad) out flds mov insl dec sbb enter stos test pop cltd push and cltd shll sbb jl imul arpl push test aam inc mov mov push lcall loope imul sbb test bound aas rcpps fcoms insl aas outsl inc add cmp fidiv mov aas mov mov outsb lcall (bad) aam cmp ds mov mov cmp push cmp sub cmpsl cltd mov push jp sbb je push imul cmpsb adc jg popf xchg push ljmp jo add push lea aam jne pop fucomip mov movsb push adc mov jge pop fnstsw push pop (bad) xor pop sbb out aaa xlat mov mov iret dec ljmp adcl notl dec mov in or movsl popw repnz inc xlat cmpl mov dec cmp repnz cmp fstpl mov dec mov push mov pop pop (bad) sub jns call sahf sahf dec in adc loope xor push mov pop arpl mov stos aas imul mov pop loop es xor test aaa cmp imul lahf test sbb daa pop or jno inc inc or xor mov dec (bad) push cmc sbb mov imul out jnp mov call add cmp ficom xor movsb jle push adc lods mov movsl cwtl xchg mov xchg dec popa push popa mov in in xorl sub arpl add icebp and push inc inc pushf sbb or push sahf (bad) cmp stos leave sub dec bound imul jp divb push push xchg fwait sbb pusha and (bad) xor sbb xchg iret and ds pushf mov (bad) adc lahf sub jecxz sub sub cmp (bad) (bad) ljmp jmp test in loope jl push test fnstcw bswap js push icebp jns cs ret and mov xchg push pop mov mov repnz pop and pop push pop dec pop popa sub push fistpll adc cmc (bad) cld fimul hlt stos mov pop jge mov jnp stos mov gs mov aad or xchg orb add jo sbb int ret cmpsb test cmc out dec in outsb sbb aad adc push in inc xchg outsl popf mov jae lret test jmp dec and pop nop add sbb stos and dec ds mov dec push mov push xor fcmovnb add sbb fwait jmp nop push addr16 cmpsl jecxz ss adc jnp mov enter inc mov das ljmp lahf (bad) add out insl mov (bad) hlt xchg cmp inc arpl pop inc xor notl add (bad) mov test jae mov inc inc or test test jnp cltd fwait add jg cmp sbb inc add cmp aas push test cmp inc fwait mov push stc dec xlat and (bad) es cmp stos test mov fwait (bad) int sbb (bad) (bad) push xchg xchg inc mov lcall aad lahf jns lret or mov push add sub decb push mov jae ds jmp fdiv mov and cwtl mov adc cmp push pop iret mov xchg sbb add push sub and pop ret insb pushf inc imul sahf popa or xchg test push and or inc push ljmp test pop leave addl jne add adc (bad) push adc fwait add mov fsubl fwait push push mov jmp lcall sbb adc mov jl fstl dec cmc int3 arpl sbb jae or imul and dec sub repnz add shrl xor xchg pushf adc aaa lret leave inc mov and aaa or dec pop adcl shlb jmp sub adc js inc inc popa gs sahf dec sti jb cmc xor mov int sbb push aad std lahf int3 fimull cmp add sub or in jp sarb mov adc out mov jnp in es xor mov lods mov mov insb mov fs in inc daa mov sub maskmovq testl popa lret enter jp fdiv xor or push push cmp sbb sub fnsave dec jne idiv pop loopne sarb sub fsubrl cs mov mov pushf jmp incb outsl or movsl pusha jl stos data16 je or push adc push adc cmp ret dec jmp push add icebp stos or and out dec mov cld test mov push sahf mov into xor and push lret (bad) mul inc testl aaa pop push sub icebp iret pop and or dec or inc or cmp test pop push scas xchg push add inc (bad) in push ljmp iret nop ror push ret adc mov dec pop or mov inc mov push jl (bad) pop js out or cs jns hlt xchg mov imul lahf and shll mov jge inc nop iret adc sub jae mov arpl cmc mov push mov fucomp mov movsl xor pop (bad) in sub cwtl std fildl cwtl xor inc lcall repz or push jg mov out addr16 sub int3 xchg xor ljmp inc imul pushf loopne jge (bad) and cmp jae inc pushf mov daa fcmovb lahf xchg jecxz (bad) xchg mov cmp or js or pop sub add mov jle xchg clc iret fstl and shrl add mov enter pop leave jb cmp arpl adc and subb in insl sub mov in mov (bad) rolb mov insb (bad) ss mov push negb push sub mov inc xchg adc sub insb call imul cs mov add out call push fild and push pop dec test dec sub and in jne xchg xchg xorl fs aam imul jne jae std out jbe inc outsb dec popa cld mov pop mov jns (bad) cld fistp scas (bad) sub ret xchg out lcall inc into imul rorl lds jl pop into sbb fimul test sbb cli dec popf sub inc das out cmc adc aas (bad) nop decb mov imul (bad) cmp ret mov xor ljmp ficomp ds ja lock jmp sahf xchg cmc lret out xorl xorl jl sbb imulb xor testb or gs imul into loop push subl adc clc fchs je push aad push mov inc repnz out adcl outsb shrl lods lods test fnstenv xchg push adc dec pusha and xchg ret imul push loopne mov jge dec or jmp push mov or into jns addr16 xchg cli mov ds incl sahf inc in push fcomps cltd (bad) fisubl ds js mov (bad) pop addr16 inc dec jmp add adc inc shrb sbb jo push lahf xchg fmul and sub push insl inc out mov cld (bad) (bad) push or js or js outsb rcrb sti fs or inc cmp fstl lods divl inc jae loop aaa pop mov inc arpl mov gs mov sub std jno test mov jnp insl xor dec lret mov std sti movsl inc (bad) stos sub lock jge mov outsb xor scas nop adc lods mov shr movsb add push int3 daa and sub repnz jmp repnz adc cwtl pop pusha andl lahf stos add pop pop insb repnz (bad) loope iret mov out mov jne add jns mov adc pop push xlat cmp cmpsb and repz sbb mov cwtl imul jbe cmp outsl lods cmp into cwtl shrb jl dec loop in xor mov cwtl les fstl mov add out dec scas test or dec mov (bad) mov sub sbb lcall divl or mov lods imul sbb sahf pop xchg jl sub (bad) rolb stc insl mov pop sbb jb js test imul dec push test inc btc or stos inc cmp (bad) scas jle push lret push ret lahf lds outsb ja mov adc fsubrs pop dec mov sub sbb mov dec cli insl scas lahf stos int3 dec push addr16 xchg stc push cmp popa add xor clc in test or inc and cmc mov mov fisttpll dec xor jecxz dec sub adc sub fadds clc jne add (bad) adc (bad) xchg cli loop xchg dec (bad) idivl adc inc lock dec dec add pop and inc lods enter push add out jne sbb pop add or mov fwait outsl nop or (bad) mov fsts iret sub dec xor xchg mov cmp pusha test fyl2x xlat lods push push je push imul and rcll push adc pusha repnz cmp imul pop dec mov hlt out jle xchg jge jl pop add aam mov int3 mov mov imul pop aad dec loop jp fstl shr mov fcmovnu out lock mov (bad) sub push xor sti jne lret cltd in lret cmc fwait sbb mov dec add call push lret sub and pop fdivl imul stos sarl push scas shll test push addr16 pop dec in ja and cmp cltd (bad) lods mov push jecxz movsl cmp and mov cmp rcrl ss adc dec sbb into loopne (bad) jmp daa add and adc arpl pushl pushf (bad) iret add mov jae pop movsb jae rolb lods mov rclb jmp jb ds (bad) mov or dec jge adc call mov into int3 pop and xchg pop outsl inc mov xor mov dec mov add fsubs pop lods jecxz pop cld mov or popa cmpsl cmp lret jmp bt lret push jl bound mov enter sub xor popa rcrb fdivrs push mov pop jbe push in inc mov popl fs mov stc or add aaa mov xchg sub jne in pop iret imul movsb mov add es jns xor ret add sti fsubrl jbe dec push jno mov mov pop out out mov or rclb sub inc jmp adc mov cmc loop inc (bad) inc sti pop out pop adc adcl xor or into push mov add add out cld (bad) xchg and popf cmpsb fxtract (bad) adc cld inc cmpsb (bad) xor push pop icebp (bad) aad imul fldenv jp push push mov cs fmuls pavgb adc (bad) add data16 repz cmp xor jecxz jge dec out or inc mov lcall adcl push fnop notb (bad) ds arpl outsl rcrb jmp xchg inc cmp lods dec inc sub mov repz xlat inc cld mov mov and pop jle data16 mov adc and aam daa in push addr16 les jmp adc outsl pop and fisubrl imul fs sti pop xor mov into ja aad jb fidivl loopne clc pop loopne cltd mov add xor imul adc addl mov call sbb popf movsl fistl lock mov pop lahf movsl (bad) or pop and ficoml lods jne test cmpsb clc pop xor stos mov sbb pop cwtl mov dec inc or fisttp in sarb mov push sbb pop in sub (bad) in jb sub xchg xor jne roll xchg add or in xchg xchg cmpsl pop adc outsb pop das mov mov cmc jmp and loope sbb lods mov inc enter adc fwait push push in inc jmp inc fadds xor (bad) in lret je lcall or cmpsl shl rcrb jecxz dec scas je in sub fldenv in fidivr inc or ret lods xchg lret lods xchg iret mov bound nop (bad) stc out in or pop scas repz xchg fdivrl and mov les popf inc mov insl jae sbb inc inc imul or call mov add (bad) mov fdivs scas mov xor mov cmp fstpl loopne mov (bad) cli inc popf not pop pop ret inc add sbbl shlb cmp sbb jg push push xor mov push and push in mov jmp aam (bad) push rcrb pop das bound movb cwtl cmp mov js sarb or daa (bad) xor loopne jns aaa loope mov mov pop push jmp fisttpl outsl pop xchg xchg and in or popf and dec sub mov mov ret repz ret sub dec pop inc cmp mov loop rcll stos hlt xor sub xlat stos push pop pop pop push jns sbb or int call and rolb sub jge and outsl loope mov shlb inc aas fdiv fs ror mov stos loope cmp mov (bad) mov push dec das lret sbbb mov dec lods sarb mul cwtl xor mov dec sbb mov outsl xor mov xor lahf adc or sarb scas repnz mov xor cmp xor mov fdivrs lea lahf js jb mov inc movsl pop xchg adc dec sub add adc ffreep mov xor jecxz cld xchg lea or sub pop lds and addl lods roll lcall fs xor int3 dec mov xlat lods cmpsl pop pop in scas and into push mov push cmp pop cs mov shrl aas adc pop dec es fwait xchg pop push jle jns test outsl fisttpll test je sub pop pop and mov dec push jns add dec stc repz imul in sub pushf fcoml rcll jne push insl dec push leave cwtl jge out sbbl ljmp js es lahf rcl js sub pop pop pop popf cmovg pusha mov mov mov ds lock mov ret mov clc pop adc mov imul mov pop fcompl mov mov fs test gs shr adc mov pop jns movsl sbb inc and out mov pop xor push test icebp pop sahf jg fnstenv lret loope dec inc sub lea popa add add sub mov dec (bad) jp inc xchg lea jecxz adc aad mov mov mov rclb mov shlb leave cmp mov pop cli and jmp inc xchg cs sub xlat xorb pop mov rcl and in push sub cltd jle add outsl sbb pop mov (bad) daa inc mov and mov movsb push outsl mov cwtl mov mov rclb push sbb mov cmp xor or ret mov imul cwtl roll (bad) je stos xor test sbb outsl jnp insl (bad) iret dec xchg (bad) setne gs lcall (bad) pop add rclb xor repnz mov daa dec sar addr16 cwtl rdtsc mov cmp aam xlat inc popa inc or outsl xchg xchg paddsw jp aam cmp or mov or mov mov popf mov jl cmpsb pop sti (bad) or aaa jbe out xchg xchg cmp xchg jne inc pop in nop cmpsl xchg mov ret adc add aas aad jns shlb call sahf xor fsub out shll movsb (bad) jo subl jns (bad) lods inc (bad) negl pusha adc push xchg push jae push es (bad) pop and outsl scas mov in std inc adc lods out and mov pop (bad) sub stc or subl movsl pop lods lret icebp pop rcl xchg add add dec std push gs add out push mov sbb jbe lahf inc xchg fsts dec and cltd test push mov add adc loopne mov push fcmovnu cmp daa lds cwtl loop test sub dec or stos into mov (bad) jb mov mov imul les mov lret dec mov js scas xchg mov sbb cltd cld add pop test (bad) sar push int mov pushf lock aad test int3 fdivl hlt out sbb loop cltd inc enter push ljmp push xor push loope sub iret inc pop xchg push test jg popf imul cs pop lock xchg scas push out rcll mov (bad) shl inc mov cmp sbb inc or call outsl xchg cmpsl sub mov ja sahf scas push xor fldt arpl pushf mov aaa add addl pop cltd and push jg popa (bad) movsl jb outsl pop pop dec insb push xchg or adc sbb mov xor shl push mov in test hlt dec dec sbb ficomp dec and test dec mov cmp push cmc stos add and enter mov (bad) push adc test xor mov adc ljmp lds lcall xor (bad) jmp or or (bad) lret mov ss iret lcall adcl scas rcr cmc outsl ret stos push les (bad) cmp cmpsl mov scas (bad) loopne test cmp ficoml mov mov dec cld jns lods jne mov ljmp mov scas cs movdqu push in pop popa mov mov out popa cmp in jecxz push mov mov adc test mov jmp and pop test jb cmpsb std sti pop cmc adc je pop cltd cltd push (bad) mov xor call mov add daa push and movsb imul xchg or es add cmp mov cld and mov sbb int addb and roll fmuls lahf sarl pop dec mov cmp into xchg lcall mov sub xor sbb ret out (bad) stos scas xchg jmp dec cmpl cmp sbb jmp mov mov adc (bad) cmp outsl ja das push rorb gs testb xor jg dec inc stos loope lret jne movsb out sbb push or sti lret xor jecxz mov push jl lea ljmp mov shl (bad) ja fwait dec inc arpl sbb add and (bad) dec inc mov out mov cmc mov or and movsb repnz aam push pop std loopne or call les cli jg sub mov cmp pop stos fistp clc and cmp stc and inc sub aas fstpt push (bad) sbb xor das push repz and jbe and test sahf addr16 frstor pop cmp cmp ficomp sbb lret mov and imul (bad) mov call xchg out fsts popa clc in les pop xchg fisub mov dec insb fs imul mov rolb xor loop xor mov incl leave nop test popf sub push loopne inc dec jecxz fwait pop adc pop adc pop sbb add jno popf mov xchg inc mov ja subb adc mov mov push loop sbb sub mov das inc movsb ret jae sarb mov fnsaves (bad) ja mov sahf push and xchg bound fistpll test mov shl rcrl dec fwait adc jns scas xor push sub movsl and xchg test pop push adc andl dec mov inc pop lods into fmuls (bad) jmp sub rorb lea or pushl js mov mov test jmp popa fs add (bad) jbe js (bad) mov aaa jge mov mov outsb jb rorb push dec xchg push and hlt subl in out pop movsl pop sti inc or cmp or loopne icebp mov scas push adc fwait xchg cmp or pop out (bad) daa inc (bad) mov mov sub es out add bound sub xor nop lret xchg xchg iret sub sub icebp cmp shlb mov push cmc add addl (bad) fcoml iret cld ret mov (bad) pop jns xor add les in xlat push push jmp cli mov mov dec outsl mov jecxz xchg cltd mov sub fcompl enter in mov hlt je push lret rcrl pop cmc mov pop fwait addr16 mov cmpsl popf xor addr16 divb loope inc jmp dec ret rolb out cmpsl test pop ds scas (bad) jg cltd sbb shll or sub (bad) scas decl popf jge mov test (bad) mov mov fldt sbb (bad) dec popf lods (bad) sbb jp xchg jnp inc jnp mov stc push ja jge push dec push andl inc sub mov addl mov inc ret mov lock inc jno in mov mov outsb push sub stos inc (bad) sarb and arpl push xchg xchg pushf push adc stos imul insb popa xor (bad) loop push mov js or outsl add jge xor xor push clc je inc mov sub xor push mov mov cltd mov pop pop pop popf push lret sbb dec pushl jno mov dec stos repnz ljmp adc push fcoms dec pop sbb pushf cmp mov xor pop lahf and inc (bad) hlt insl push aas je cs jb push sbb mov lret outsb subb rep ret iret xchg in jne xor and dec das mov pop aaa jae aad jns xor adc fsts in cmp iret mov (bad) in arpl dec scas arpl inc and jbe mov aaa aam mov scas ret mov in (bad) mov jg rorl shrb ret outsb dec in out popa imul repnz pop sbb (bad) movsl stos pop jp (bad) testb lds mov mov sbb in jne divb xchg xchg lcall fwait cs mov pop int xor hlt xor bt cltd cmp dec stc mov mov xor jne mov push fistpl je leave rcrb dec loopne (bad) adc in scas mov push cmc jae ljmp jae dec sub adc test sbbl fwait hlt not or adc mov and gs jnp sub mov or shlb mov das xor ds mov push loop sub insl push adc aad lret aas xchg mov jmp inc push adc pop shrl dec pop jg mov inc push pop insb aam xorb dec dec daa xor rcrb sub adc (bad) lock pop add rorl cwtl mov bound sbb jns adc mov idivl adc jmp push mov cmp jae cmova mov xor adc ret xchg mov jg xchg mov popa add push xor mov dec and push or jno scas fisub mov into in cmp aas rcr mov dec push fcmovnbe pusha sbb fnstenv sub out outsl push (bad) fs mov xchg idivb mov inc xchg lods push loope outsl (bad) bswap outsl fisttpl push xor jge (bad) add ret sub enter call mulb pushf jmp adc xchg cmpsb (bad) out adc cld mov ret push sbb jae push loope mov shlb jne mov adc scas mov sub loopne sub xchg retw push and movsl cmp sub inc mov dec push adc push add loop hlt sbb arpl dec (bad) mov ds inc sub adc xor out lret pop mov mov add cld stos ret jle cmpsb sub lret push mov aas jo int3 loope push ja mov xchg stos inc and cmp jbe dec movsb jb daa jmp or (bad) test or js mov add fildll outsl cs sysret mov je dec sti aaa (bad) sub sub xchg mov (bad) out push mov sbb xchg ss pusha test popf gs std adc and std and fisubrl test repnz push and flds (bad) fnstcw ja (bad) sbb jl inc movsl jbe ja ja cmp dec imul or push xchg aaa cmp xchg jo loopne jbe and imul (bad) xor or and add jno,pt cltd fidivl ret pop mov push sub jae push jae cld lret sbb (bad) xchg mov pop push (bad) mov mov mov cmp or test test test std add mov inc adc inc and xchg fisub fimul jg lret lcall and ret adc aad jle out std or xor add mov xlat cmp cmp mov jle and dec out jnp lock lods xchg xor scas out into fsubrs ja adc cmp mov pushf pop stos push in sarl xchg mov loop loop js mov clc out (bad) mov test ficoml incb arpl or lahf jle (bad) push or daa (bad) sahf test mov pop push clts jle mov cwtl jo xchg movsb or test scas es push inc pop jo sbb xor stos nop cltd sub test std cmp cmp xor inc and data16 lods mov pop addr16 pop xlat or dec mov int sar jmp xor xchg jp push xchg pushf dec xor jb bnd cmpps mov push (bad) pop push mov shl xchg pop mov sahf or xchg dec fwait mov insl mov cltd das pop or scas jmp jle xor popa sti and cmp mov popf xlat test in mov lods jge jo jecxz sub cwtl inc out aas (bad) xor (bad) or mov mov imull or lret popa in sbb lea shr jle test in and into out scas jne pop pusha (bad) cmp fistp data16 aam popf dec out jecxz rorb mov test dec add xor mov xor xchg cs cmp pop lock outsb scas push push mov pusha pop test mov sbb inc nop adc (bad) stos lret xlat sbb mov mov cmc xchg add adc cmp pop es xchg dec pop push test faddl (bad) fldcw shrb je and outsl jno aam es and mov test mov (bad) sbb push jl das jno push or out sar and jnp and fisttpl aam cmpsb jp mov jp jbe arpl push push adc xchg xor stos loop inc jno shll (bad) push xchg cmpsl adc ficompl out mov fcoms jo or xor into out xchg xor pop inc push mov push arpl sahf mov ds fisttp (bad) sar enter mov xchg xor xchg std inc gs stos in cmp call loop loop repz in push loop pop cs and push add adc and push insb pop inc test sub dec sub xchg push cmpsl je loopne xchg stos push inc or pop or mov pop repnz lret fild ja cmc add popa ror adc hlt (bad) jnp xorl hlt insb or mov nop ds mov lods outsl adc data16 pop roll mov aas ret dec xor lea sub mov ss push sbb data16 dec rorb cli pop inc dec lock movb icebp push sbb xchg js dec sub sub aad das fsubrp push mov cmpsb cmp out pop rcrb jle,pn cmp push ret and jb cmpsl mov pushf push push loopne fnstenv cmpsb (bad) xlat xor cmc in (bad) cmpsb mov sub add inc push lcall sub (bad) fistpl jno std or dec (bad) cltd inc jp popf inc test and outsl stos fstpl inc jns xchg or movl jp push jb push je ds out push cmp stc lods lcall shrb or add ja scas pusha push lcall add rcr mov sub inc and dec fcmovbe jb mov xor jae sub andb ficoml and call and add cltd test data16 dec cmp pusha inc inc jecxz xchg or mov mov outsb (bad) (bad) stos mov imul sub mov and xchg nop push cltd cmp fsubs or and jb shld jo andl imul cmp inc sub js pop leave mov or nop mov sbb out test mov into lret jbe fisttpl roll xor mov sub int mov (bad) aam push popa les fidivl jge bnd mov (bad) decl add mov add pop std sbb ljmp mov dec mov int gs mov mov (bad) or push shr push enter add jne inc xchg enter or test (bad) mov mov flds fldenv mov out xor mov add sub push pop (bad) push cli icebp outsl mov mov xchg xlat ds and scas fmull jp or insb jl rorl sbb gs jp jecxz xor mov cmp push lret adc pop pop jb imul imul dec sti xchg cmpsb fs dec inc add lds (bad) inc fistpl xorl push cmp mov xor sub push insl xchg movsb outsl mov lahf mov lcall xor inc sub std or ds push push movsb jl (bad) scas add adc xchg dec push out add sub pop std and mov and pop sub xor stos int and add dec in and fcomps or jl xor arpl sbb mov (bad) push mov jns imul aas data16 xchg sti (bad) and push add adc sbb cmp jp xor inc aaa test add push into (bad) and xchg mov daa jne (bad) adc push mov sub ret pop jb jmp and adc cmc cmp imul mov dec in sbb pushw xchg xlat (bad) imul jnp ljmp inc popa cmp inc out cmpl dec sub cld lods sbb push and add ds jle stos mov sbb imul pop pop sub movsl add dec pop mov xchg push dec push lret andl mov test out pop pop pop or inc pop or fisttpl insb clc inc loope rol xchg jle int3 sbb or shr out dec fwait je xor add test or xchg fstps sbb pop cli sbb sub into push addr16 inc mov cs push xor scas es cmp adc adcb outsl out mov xor pushf popf xor movsb and mov dec sarb lea xor sub mov push xchg add cmc cwtl (bad) (bad) loopne jge in ret cwtl pushf xchg in cmpsb lcall dec in ret xchg icebp cmpsl fs imulb popf mov mov cmp cmpsl push (bad) aas popl and insl stc (bad) inc fistpl mov or lea jo arpl lea repnz out sbb stc cmp or and cmc xor pop (bad) add lock pop (bad) loopne inc dec cmp (bad) dec dec sub bnd cwtl cmpsb bound ret push ss dec add xchg ja,pn in xchg insb fcom add (bad) adc xchg pop push out and xor mov pop (bad) clc std add cltd (bad) aaa push cli addr16 and mov jns push mov mov mov push sub mov mov sahf adc jnp xor lock jo xorb pop stc inc in orb mov bound out and aam jmp add into mov addl loopne aas xchg movsb lret mov sub cmp lahf add sbb std ja and orb jge fucom xchg cmc pop push cmc sub les insb (bad) gs jl lock pop mov cmp mov add xchg mov add mov cmovne daa cmpl js lds rorl mov arpl inc xor push imulb and sub sahf test inc pusha movsl dec and or xor pop jl cmp lret jp sbb push push ret jno lret daa push rorb mov rorl test insl pusha push inc bound adc dec lret lods je mov xchg pop aam (bad) xor push jecxz std fsubp sub fstpt pop jg sahf (bad) push xchg or add push cmp mov aaa les aad data16 (bad) je cmc xchg imul ljmp pop loopne ret movsb cltd xchg fsubrl (bad) mov cwtl lret iret xchg loop fwait dec cmp dec mov fs xchg loope,pt les push repnz fs das xchg mov dec pop push sbb jno add dec or push shl and aam sbb add or sahf fwait mov jne call cmp ret add test xchg arpl es mov rorb adc inc das pop ljmp call or jmp sahf pop aam ds jne or cmp popl dec lret push pop or outsl inc mov adc jle xchg xchg pop or scas jge sahf cs lea dec pop or (bad) cmpsl test aad leave incl adc sub loope (bad) fwait inc cli je gs movsl push je cmp fnstcw loopne and shr adc mov fidivl lods mov loop or repz shr es (bad) mov outsb test repz mov pop decb jp pop test pusha sbb add mov jbe imul sub stc lahf mov push cld insb out das jae lea pop sub xchg jb fmul lret test fistpll jae fmul jmp andnps insl cmp pop xchg or xchg sub mov adc data16 (bad) jo repz xor mov fisttpl adc add test in loopne cmp ror leave lods pop push or jge push lea repnz push dec jmp mov mov add pop cmpsb lahf pop les cwtl (bad) cwtl push dec mov mov (bad) lahf xor addb xchg pop cwtl out inc aam clc sbb pop add outsl fcomp adc ret ret loop cwtl ret scas ret add in stos pushf adc sub sbb lods ficom shrb lds out pop inc fcmovbe (bad) jmp mov inc push into push ja sub or fdivr icebp mov sub cmp add and in dec inc mov jo mov xlat ja mov pop aad lock add lret ds jmp cmp cmp add or adc pushf es das adc sub sub push loopne push push shrb popf mov repz push les inc call pushf test adc mov mov js sub jae in cmp lret cmp and sub jp xchg ret jb mov out sub mov pop cli sbb or clc push sbb lret shrl mov mov int3 cltd and cmp jno inc leave int xor cmp lds popf es addr16 xchg and fsubrl (bad) cmp fstpt loopne mov jg jbe mov das add push stos push mov lock in fcompl je test push dec xlat sbb xchg jns ds pop stc loop push arpl cmp aas sbb push arpl or in hlt or inc inc aam loop cltd fadds addl pop lods cmc inc add arpl cmp pop inc (bad) insl cmp out ds ds xchg insl scas int test cli mov lret cld xchg lods loop dec mov lock mov pop xchg arpl out xchg lea mov or aad outsb add (bad) fsubrp pop lcall dec cltd insb fadds roll in sbb cmc je (bad) jl das push jnp inc out roll adc push lods xchg js jbe mov push sbb dec add xor in es push nop or jne xlat test cmp cmp mov xor sub push out std (bad) dec push pop inc jle push pop dec loopne dec sbb out ret xchg (bad) mov out xchg lock roll lods xor rcrl sub pop mov stc dec add adc iret sub stos pop jge xchg jae lret mov push out cmpsb pop mov lret lods jno xchg inc ficoml xor jg fnstcw inc mov out xor icebp pop add pushf sbb jecxz inc mov lcall lds sbb es mov fimul test dec cmp pop sub jge into mov push ret add xorl das orl mov sahf cmp cmp inc jp sbb sbb mov in xor dec test sub clc and scas pop mov cmc pop fidivrl jo and out in sbb rorl (bad) or xor mov pop xor stos notb adc push inc sbb xchg movsl js sbb stos out mov xchg and call fcmovnb js jno out pop cmp fcoms test sbb sbb pop pop push cmpsl sub das (bad) decl adc lret pop cwtl pop lds adc sbb loopne add jge mov xlat (bad) cmc in movsl dec mov fsubl lahf out xchg cld mov push leave sbb dec push sbb sbb pop fisub cli mov and jp xchg jb dec inc xchg stc ljmp xlat loop add pop aad inc xorl das (bad) loop mov sbb call cmpsl jmp jge cmp int js outsb cmp mov clc mov mov and cs stos pop insl scas dec mov and clc outsb fwait daa xor pushf in add cwtl nop sti jg lret clc icebp das sahf in mov mov pop ret or das outsl lret mov sbb mov mov aaa dec cmpsb jns ficomp xor das into das (bad) and popf jge mov jmp mov enter rol add orb inc xchg movsl lret push test mov ret mov push mov aas cmp cmp lret imul insl adc test cld adc imul jb insb std in sub sub insl icebp push adcl xchg mov and jmp push adc int3 pop and jns fmuls mov cmp imul pushf int3 xchg inc lret sbb mov in dec sbb repz mov xchg push dec dec cmc add push cmpsb xchg test mov mov sbb inc lret bound ss mov xor pushf or stos cvtps2pi cld in and adc (bad) xor rolb jmp mov xor (bad) sbb and iret lret jne scas push or rorb imulb xchg sub imul in and out mov mov ss repnz (bad) popa rolb arpl lahf fiaddl ss sub inc pop test sbb or loope lock pop and cmp and mov stos mov adc push xchg pop xor pop fsubp cmp mov push sar loop push pushl (bad) out in outsb mov ficom into mov mov dec es inc daa (bad) (bad) xchg scas daa bswap in mov jmp in inc out mov or jp mov sub xchg ret pop mov fcoms add out sti push xchg cld mov shrb lock loopne lret or xor into dec push mov push mov xchg imul (bad) jae pop xchg nop cmp xor pop adc mov pop roll movsb faddp imulb mov or icebp pop mov mov icebp stos jne movsb iret xor leave lahf mov pusha or ja push cmpsl cltd imul mov jecxz cs pop pop lock gs jl jmp sarb (bad) mov popa cmp and mov loop jmp or out inc push mov dec pusha cmp imul dec sub (bad) mov rclb pop insl test xor lahf ja jge lret lcall inc mov mov sar push test cmp cld test jo or out ret adc push pushf and rcrl pop outsb popf xchg mov inc insl repnz jecxz mov cmc cld jmp and ffreep pop jmp mov dec mov adc dec cmp roll (bad) lods dec mov jp add out movsb add pop xchg icebp mov cmp pop inc and int sbb lret nop mov inc loop inc cmp jg sub popf xlat clc call add push sub lcall es fldl cwtl sahf mov decl adc imul jge nop sbb and sbb add mov mov fiaddl std dec ficoml scas cld imul das xor std test mov das shr mov ret xor xor hlt adc inc sub cmpsl (bad) sbbb js dec aas stos pushf dec pop push in sbb mov push data16 imul inc imul push je bound sti pushf js andl imul cs sbb scas cld cmp mov sahf pusha sbb add das fs insb or js (bad) stc in xor lea mov sub adc movsb and clc cmp aaa mov pushf xchg pop mov adc imul mov iret int3 fidivrl and or nop or cmpsl movsl push (bad) sti dec jbe ficomp xchg push add mov cmp aas fcomps lcall lahf inc mov inc insb (bad) mov (bad) xchg xor inc xchg (bad) scas mov dec mov inc dec iret add or pop push inc enter bound and mov push add in sar test mov and sbb and scas jno pop mov ljmp std jle cmp push push cli sub cltd add sub fiaddl cmp dec sbb push mov inc js (bad) test fidivl mov insl or out inc stos xchg pop push (bad) frstor rclb xchg icebp and (bad) jl adc arpl mov aas fisub (bad) (bad) sahf repz (bad) push pop sub inc icebp movaps dec sbb fisttp lret clc push adc push adc cld shrb jno and sahf jmp daa fdivl mov inc je cmp js outsb mov test and dec mov lods sub jbe pushf or test enter add test iret jns xchg mov addr16 lds (bad) loopne mov ds mov cmp lods ja sbb sub xchg hlt push inc or adc mov ss cwtl push add add sub jbe dec mov and popf push pushf minps dec push aad dec js cltd push das test imul out inc repnz movsb xor mov pop dec mov shlb (bad) mov loop cmpsb repz mov mov sbb movsb ljmp fadd jnp push fwait jmp mov sbb pushf xor jno pop lds dec xchg stos daa dec push lea shrl pop and xor push pop adc ret in mov xchg xorl jecxz dec (bad) icebp aaa fcoml jle inc mov or data16 add sbb cmpsb jno stc sub stos out xchg push and out xor test fcoml iret jne ret and cmpsl lahf jbe add test sub ljmp ja push push xchg inc sbb imul repnz sbb out add outsb cmp pop out (bad) rcll imul sbb and dec xor fldcw and sbb lods xor lods push cmp sarl pop mov sbb clc (bad) jne cltd scas out pop outsl mov or jge add jle icebp arpl inc jg push andb rcll pop je stos sahf push imull js jnp pop jmp jne mov sbb outsl mov cltd cmp cmp movsb pop std xchg add sahf pushf mov push pop push mov inc adc xchg sub adc cmp cmpsb outsl mov inc and cwtl mov addr16 mov (bad) sbb xchg cmp insl dec es add xor iret mov pop in rcll xchg mov fdivs lods jmp out and mov sti cmp pop sub dec pop mov pop pop out pop or inc pop stos mov leave lock jnp rcrl dec shlb or add mov movsb cmp inc pop call jbe call push ss sbb loopne push cmp subps xchg in hlt adc mov fwait sub or fwait data16 sub or sub addr16 and mov frstor dec sbb xor xchg sbb jae cwtl dec jmp lods or setge and (bad) aad shr aaa and inc (bad) dec test aam movsl in dec cmp pop cmp enter and cwtl enter jnp shrb or imul xchg pop sub lcall add data16 inc pop mov mov popf insb mov movsl add xchg xchg xor idivl or rcrl (bad) cs add mov lret push or xlat bound int lea sub ljmp mov push mov aaa rcrb movsl inc dec mov xor jo jns dec lret mov sti push inc test and cwtl mov mov fdivs add call mov cli mov sub les or cmpl lock xor push fpatan jnp insl cmp and rcl mov test adc or adc call aam aad jl mov nop inc loope ds mov pop mov add jb sbb (bad) popa mov lcall loope imul mov rcr sbb adc fidivr scas sahf jb in pop jp jle loop xchg xlat pop dec mov dec fildl mov ret add xchg adc cmpsb pop push lret je mov stc lcall mov lret lds leave push push and dec bswap repz fs or pop push mov push push (bad) imul movsb fcmovbe nop leave in scas int and adc inc jl je mov or jg imul fidivr lret lret std xchg daa mov sub cwtl jne pop jo sub sbb test or or jge xchg lret popf sti and mov test adc or mov das inc mov ret push xchg push cmp lds lahf mov out stos push lret jno push sbb int3 js jmp jne pinsrw jno popa fwait in jge ss (bad) fisub push aad icebp xchg pusha movsl mov (bad) call sbb stc cmp dec inc mov mov dec nop les fwait repz jmp (bad) and arpl sub jno in cmc fwait cmp in or xorb jecxz cmc cltd das xor (bad) xchg push mov xchg xchg scas push mov insb jl stos mov mov xchg test rol xchg cs xchg mov (bad) icebp sbb mov cmpl vminsd repz ret cmp add lahf lea push cltd lea test enter data16 adc dec mov scas xchg dec cmp sete lods add push mov or mov push dec mov jae out in shrb stc lcall jo gs push inc jl and lahf test add dec mov adc aas cltd in shrb icebp inc jb ret pop push jle lods sbb loop scas (bad) and mov cmpsb inc mov hlt mov in (bad) mov and xorl movsl jmp pop and test add out addb mov cmp add imul fiadd in inc stc aam push mov lods push test cmp push (bad) loopne xor and pop in das pop (bad) mov push pop push leave or pop inc push xchg xor mov xchg xchg subb sbb shll icebp jbe addr16 push (bad) imul rcrl repz push cmc loop out push dec xor and cmpsb subl push repnz lahf mov insl data16 faddp mov stos pusha mov dec sahf sarl xor clc test sub jl shll lods adc pushf inc stc and lds ja inc clc lods and jmp int3 sbb fldl lcall cmp mov (bad) push and jno movq (bad) mov aad mov push test jne sub lcall mov mov ds cmp mov pop mov shll movsb enter sti pop (bad) pushf jno (bad) dec std xchg jp wrmsr jo leave mov push jle mov mov sub adc in sbb mull mov into push arpl inc sbb cmp jle lea inc or xlat lods adc rol js cld outsl lods out pushf pop dec pextrw mov shr push (bad) ret inc leave popf lret int3 push (bad) mov rcrl ja xchg and ret pop push jecxz (bad) and mov adc inc push enter adc loopne xchg clc stos sub cmp sub inc cmp push loopne push or mov pop sub mov sbb mov sbb jp ss cmp jne inc enter cwtl (bad) mov sub pop add inc imul inc xor fnsave (bad) ljmp subl int3 cs nop jge sub popf mov mov xor outsl ja stc xchg test pop out push sub jle mov mov imul loope imul or out jbe pop mov add lds and mov imul cmc pop cmp outsb mov jnp jmp sbb ljmp and (bad) cwtl xor pusha pop aad cwtl aaa sbb pop rclb ss stos sub sbb push enter jbe aam lods shrb mov inc adc push sbb cs dec sbb inc jg divb cmpsl and sbb xor push or ljmp fnstcw out cld fwait xchg fwait mov std jb push std out jnp bound sub adc mov out push and (bad) adc loop jmp loopne scas inc std int jl (bad) xchg and and stc xor lods (bad) jmp stos and or in lods push mov outsl rep pop in push mov jb test sbb loope jb inc jo add push sub cmp inc sub lods icebp mov xlat test or jmp xor lcall jle fdivs dec arpl and js lcall or pop fidivrl (bad) enter test mov jge inc sub inc fnstsw xor (bad) push (bad) cmp or scas push jo inc lock mov inc aad repnz jg pop lds xchg inc cwtl popf aas jno adc mov loope jl es xchg aad xor mov sarb bound cmp xor icebp push dec les xchg popa mov xor (bad) (bad) scas in jmp push pop jbe jo out imul push dec xchg (bad) insl cli dec pop jge inc mov loopne rclb pushf and or addr16 pop jcxz lods (bad) adc add iret test inc orl (bad) jno sbb cmp dec popf push jno cmp lods mov lret cwtl xor mov xchg inc dec ds outsb jae mov pusha xchg leave push mulb push (bad) lods movsl arpl jbe (bad) adc fidivr ljmp or inc int3 loop dec aas das pop fdiv cld lds dec aaa mov jge in push fldln2 mov sub push mov sti sarl xor lret fisttpll inc jmp push xchg inc test cmp cld pop mov nop xor pusha sbb and test cmp popf add mov fist mov lds or insb call in jbe xchg xorb xchg (bad) cmp sbb cltd sbb inc pop jb cmp mov movsb leave mov scas xchg xor ret cmp cmp lret adc xor outsb or jmp push imul ljmp repz fidivrl orl ss mov inc push xchg jne dec fnsave (bad) push sbb ret arpl fwait sbb mov aas jp scas or mov int outsl fdivrl dec loope (bad) sub test rol xchg xchg cmp mov nop loop sbb cld mov xor xchg nop push xchg icebp dec out push cs inc sub out cmp leave pop sti ljmp inc (bad) mul jp pop bnd iret mov call rcl rcll mov push or fcompl add pop inc out dec lock dec dec lret hlt in mov data16 dec test test repnz lds into aam mov testb sub mov mov sahf out icebp test fsubr imul push mov pop lock push jge scas add lret icebp mov lahf in das out adc shl insb rcll xchg adc or xchg jl push xchg cltd ret arpl mov cld or clc cmp lds mov cmpsl frstor push aas icebp mov test out sti negb cmc repnz fistpll test xlat cli inc cmp and repnz mov adc xor (bad) scas sub out out jge sub stc dec xchg push add loope push xchg stc scas inc (bad) ds rclb lret jecxz cld inc sub cmp add lods xor sahf cmp lock movsb out insb sbb adc dec mov ljmp lret pop dec push lret adc rcr cmp cmp or test cmp mov mov aad addl aaa jne clc aaa inc and fisttp push pushf incl xor outsb sbb cmp scas andb xchg out rcll scas dec pop dec xorl add push mov sti icebp test cld jle inc xlat dec or rol mov movq mov int les int3 xlat sub push dec je lahf push and imul out in lret imul (bad) iret jb ret stos cmp jmp mov mov cmp mov lock cltd mov jl jle cs and xor lahf stos mov mov xor stc rclb outsb xor cwtl add lahf iret pushf lahf or es push into ds push xchg and test es dec push mov xor mov test adc mov lret push push dec push mov pop mov and gs scas mov out sti sti mov xor or adc sbb mov cmp xor mov jecxz push je pop bound gs lret jns test ret (bad) clc idiv pop inc cli outsb sbb stc cs gs fcom mov sbb cmp xchg sbb add fist cltd jl cs dec push add shrb out fildl xor push fisubrl xor inc pop lret sub inc lret xor fstl or mov sbb cmpsb mov jecxz loopne add and lahf cld (bad) xlat dec sub jge cltd enter pushf sub sbb mov xor add jl xchg push sub outsb push push mov pop sub rcr out movl sub insl inc imul bound lds jecxz pop xor movsb pop rep xor xor fimul outsl xchg in mov push push xchg inc test (bad) cmp loopne (bad) jnp and push pop cmp (bad) pusha or xchg adc fnstsw mov mov (bad) push sub sti xor mov icebp ficoml mov std addr16 movsl sbb cmp (bad) aaa in ret jns mov test in or pop testb jns adc lods xor lds pop fldl inc inc in mov inc sbb cmp cmpsl mov pop andl sub fbstp mov jae lods repz lahf add (bad) scas leave xchg cmp adc popl lret cmc jne test push sub das out sti mov pop push js call jge pop xchg mov push lret xor or in dec outsl pop inc jl lods lds inc (bad) popa mov imul dec xchg aaa (bad) jns sbb xchg mov push (bad) out (bad) jne out in add outsl xchg dec adc mov push push icebp inc push mov jae nop (bad) mov cltd mov sbb mov or push shl mov insl sbb add inc pop or stos mov imul sub xchg lock (bad) addr16 xchg (bad) adc adc (bad) movsb call sub fadd xchg lods mov ljmp mov dec mov notl aam jmp xor mov rcrl into mov addr16 push push test fisttp test test rcr mov mov sub adc inc imul sbb fwait js sub mov ss pop pop sub pop out lret mov add dec daa push fs inc (bad) cld and addb jns outsl ret lods mov dec movsl xchg xchg xor sub and xchg insl int mov bound pop aaa jge xor jno sbb aad aaa je sub jbe mov imul dec jmp sub fnstenv jb jp push and inc ljmp jp xchg and sub outsb imul pusha xchg cmp xorl popf xchg add aad xchg js inc test xchg enter dec xchg xchg (bad) mov in test mov pushf xchg loop in test xchg call mov mov out mov dec jmp inc add sti adc fidiv mov stos inc insl push dec cmpsl int3 jo mov or lock inc fild inc mov sub imul cld popa lcall or aas cmp cltd mov xchg js aas dec stos jb (bad) push les pusha xchg gs enter dec (bad) adc in cmp pop add rclb xchg loope adc push lcall pop (bad) mov dec and outsl movsb std lds mov and cltd pop stos push mov in pop enter dec shl add mov fidivr test ja loopne and add incl arpl movsb aaa push pop jbe cmp inc jnp push sub sub or mov or push test pop cld cmp scas xlat test lock notl inc xor inc je push lods and in sar sbb xor sti xlat pusha movups scas adc sahf in roll leave rol lods movsb (bad) fisubr sub dec adc mov enter cmc jno (bad) (bad) dec add mov (bad) int mov dec xor andl mov lahf ja fisttpl out mov dec in (bad) leave or cwtl loopne mov int3 mov iret push add mov enter pop fimull cmp aad add pusha out cld out aas sarl sbb (bad) dec mov mov mov push icebp add lret sub movaps popf dec aas jne aam or js lock cmp repz pusha mov std push hlt lcall mov clc inc fbstp in push push (bad) (bad) popf jno cld lock repnz fs jo push sub imul es movsl xor mov gs fcmovnbe mov pop push mov push and arpl imull jnp clc pusha lods mov lods mov jbe or into clc xchg xchg not and push shr pop xchg clc jno mov push out or push data16 sbb popf mov enter mov xor or adc (bad) jb sbb mov aad aaa movsb and inc movb adc adc sti pop jmp xchg iret xor mov mov sbb jnp,pn xor and xor jno jo jp in or pushf inc push cmp xlat xchg in cmpsb int mov sahf xor pop push add aas out popa mov in lock lcall add pop sub push mov (bad) stc mov fdivrs cmp xchg sub cs rolb les sbb push shrb aam (bad) mov push sbb test ret out and test cmp add outsl mov adc leave mov pop xorb add xlat mov jns clc push sbb in sub cwtl jle dec sti adc add or pop out mov or mov pop mov mov cs ret adc repnz ljmp jmp xor fdivp jmp out dec (bad) pop outsl dec (bad) (bad) dec les pop adc mov xchg mov in cmp sbb add iret mov into stos mov mov hlt lret icebp out js divb xlat sahf add jmp pop inc sub pop xor mov hlt jg and ss pop and pop sbb lods jbe xchg inc push out lods (bad) push clc mov jg and fidivl add push nop jecxz scas mov lea roll out cmp data16 outsl ror mov mov ss in push mov outsl add into xchg outsl fimull loop cmp cmp arpl push xchg cli (bad) and mov mov xor pop (bad) idivb (bad) jo (bad) sbb gs pop mov xchg dec and adc iret mov jnp les lods jne movsl or xchg hlt repz mov scas je,pn inc in (bad) xor push cmp ret xor lds mov js lock mov fwait icebp icebp hlt (bad) test fs add jb out nop lret (bad) cmp shll stc mov ja and push lds lret cmpl cmp inc mov fcomps hlt popa imul xchg and aam leave leave outsb es mov dec push popl cmp lock scas jae or int fbld mov cmp inc add imull incl sbb adc push dec in idiv or mov push dec scas (bad) lock push xchg lahf push mov sub insl inc and sbb xor xchg icebp mov add test mov jbe call (bad) out jae mov pop mov (bad) rcll nop movsl dec push mov sti mov cmpsb mov mov in lds loope std xor jo xchg xchg mov jb mov mov mov add adc xchg push cmc mov adc out rcl fwait and adc xor pushw std inc pop lock aas or lock std dec (bad) mov mov loopne pop sub (bad) mov pop dec movsb stos stos inc in add cmc pop fwait inc pop xchg sti loopne add out jl outsb bound rclb ret repnz je cmc cmp test mov and xchg push push jnp enter pop nop cld add sub dec es sti mov inc mov dec aas dec in sahf mov jbe xchg out mov insb imul mov andb and push dec mov xor inc xchg cmpl cmp pop adcl push push jp lret je and cli jmp fdivrs shrl push (bad) push icebp dec (bad) subb pop ja test pop adc stc sahf outsl insl pop bound cli rorl cmp gs movsb fmul xlat loopne popf cmp notb aam jne mov movsl cld ret loop stc dec mov stos xchg pop (bad) out hlt xchg xlat mov repz xchg lcall mov push fdivl or lea enter loop mov (bad) sti mov es or nop lcall push or (bad) mov bound sbb fnstcw mov nop jge add cld sub mov aas into sarl sbb adc daa daa fisubrl call test dec popa xchg adcl (bad) cwtl and jle cltd sub outsl ds xchg lods test icebp cmc out ret push xchg int3 repnz add mov or dec sti dec test movsb xchg in das fsubrl or cmp sub outsl popf lret jp test jecxz clc lret shrw xchg rcr ds ss leavew add out adc or mov test in and pop jno xor punpckhdq xchg les mov inc dec jecxz or pushf nop mov inc imulb push mov lock mov and js pusha insb xor clc push or or aas push roll pop or mov mov lret adc jle add add gs rorb shlb inc push adc aaa sbb cli sarb js sbb stc (bad) repz dec aad and (bad) xchg dec xor xor fistpll cld or rclb stos and sbb rclb xchg je ja sbb into cmp (bad) in pushf roll dec push lock jge ja sbbb pop popa xchg sbb roll ja cli xor pop cmp pop (bad) jo imul xchg int in test inc mov add movsl sbb lods lock gs addr16 mov cmc imul pop gs andb cmpsb stos jo cmpsl lods pushf inc pop lahf (bad) inc or pop clc ja cmp add sar (bad) rclb rorb scas pushf pop adc jg (bad) cmpsb test sub call xor push std fcmovu movsl sbb addr16 (bad) xor xor pushf mov xor push pusha stos and popa rcrl rclb xchg inc inc pop and xchg sub and sbb shlb out and pop in mov dec fimul pop shrb push stc inc dec mov mov add pop int jne ss fs lahf enter xchg and (bad) xchg dec inc jae (bad) je add ljmp jp arpl or out aam jns notl jnp sub adc pushf lahf sbb pop pusha cmp xor dec pop cmpsb sbb mov pushf mov push insb (bad) lea loopne ljmp in pop push pop cmpsl xchg push (bad) mov jae mov jne inc and mov jmp sub and mov outsl mov rolb (bad) mov fmuls pushw and adc lcall (bad) xchg jnp and dec pop pop out sbb out aad out mov mov fldt pop aas scas jo mov push mov inc lods (bad) jecxz mov call fnstenv or jnp inc imul imul adc repz (bad) (bad) fisttpl mov insl mov jno mov add lea xlat or add je fimull repnz sbb rclb and mov lret jns pop bound movl pushf cmpsl sti (bad) loopne cld mov pop xlat outsl das out sub rolb insb sbb mov mov sarb mov cs xor in (bad) les pop xchg in sti mov lsl cmc xchg jo (bad) in cltd popa sahf out jl rorl pop inc add sub cltd (bad) push mov mov fbstp cmp and mov (bad) sbb cmpsb jmp in push dec mov div xor in jmp lahf (bad) call xor jbe mov lock nop lds mov xchg cmp inc mov inc jnp test and aaa sub mov mov xor xchg (bad) imul add addr16 mov lret pop inc push insl test ss hlt jle icebp adcl in stos mov loope push pop mov popa inc adc mov int3 stos sbbl mov fidivr mov xchg daa mov xor add out mov xchg mov pop push aam mov pop and xchg test lret jmp enter clc xor cmp push push addr16 sarb pop aas je fmull jecxz pushf call fisttpll imul sbb push xchg jge mov jl mov push xchg sbb cwtl sub icebp xor pop out (bad) dec lock popa (bad) stos push add dec inc rsqrtps dec mov rcrb inc add mov jo (bad) popf dec js jb ja in leave cmp call inc daa cmp les sahf mov xlat iret scas push ds sbb mov cmp inc ds jbe mov xchg jmp jno call cmp xchg cmpsl dec inc add jg mov incl das dec mov inc push stos bound push testl inc ds dec imul push iret (bad) dec mov or add sbb fs add bound notb sbb pop mov rcrb or sub in stc loope fadd mov outsl cmc sub sub push jno add xor in cmc les mov mov mov xchg mov xchg aaa push xor pop (bad) push ljmp nop pop out push ret or sahf push push add sbbl push lods movsb mov xlat jl ss or imul shlb cmp inc or je inc dec jne sub xor dec sbb push out lahf push mov jmp lret jno pop cmp fisttp pop stos (bad) add pop ja cmp cmc and cltd sub inc jbe jp call xchg sbb negb xacquire dec mov das adc (bad) jmp fwait push or dec lods enter cmp stos push and jecxz clc or out dec mov dec cld das xor jb sbb push out mov inc or add push xor es jl push dec into outsb pusha ljmp data16 pop (bad) xchg add inc in ja adc rcll push in inc stos jg repnz mov dec push (bad) loop sbb and outsl or push jge cmpl xchg pop fdivl and cmp aam out jecxz inc call jg jae sarb inc and into fwait lods jmp arpl cli popa mov imul inc mov test dec sbb or mov les mov cmp xlat dec lods jg ja outsl or shr daa arpl fsts pusha cmpsl or lds cmp and pop fistpl push cmc jg cld out jmp adc adc ret add mov adc inc push jmp jne sub sbb xchg das sub cmp rcl imul mov adc fsubrl int xchg xor mov pushf dec cmc pop (bad) add jnp add dec cmp mov ret mov sbb scas aam dec (bad) aas mov mov jge stos cmp iret and int3 sbb add popa icebp push ljmp cmp les jl jl adc mov or fmuls mov jbe pop cltd test sub jmp dec in arpl mov jbe std mov sub dec (bad) les sub loope int3 mov jbe cwtl jge and mov push dec icebp mov (bad) insl adc adc lret cmp rorb push iret mov sub jnp icebp in dec xor iret (bad) jns cmp loope dec iret fstl jo pusha movsb adc push out dec inc outsb in pop pop mov cmp cmpsb mov idivb pop flds shr cmp jb ja mov repnz inc adc inc (bad) sub cmp test aas mov inc test sbb hlt and pop shrl cmp and xchg jae inc lcall repnz pop adc add mov jmp fadd sbb daa adc or loope imul andl ss inc jge inc (bad) mov aas push jo inc sbb jmp hlt cmpsb aaa lret insb sahf pop lods sub mov loope mov dec idivb and push sahf leave mov adc sbb mov mov test push test mov cmpsb es lds xor xchg popa lock test pop aas add xchg dec mov call (bad) jne mov cmp mov push int3 jge dec dec inc adc pop jl mov cwtl mov add cli jp rolb popf push jg adc push dec or adc or (bad) or jge mov or cmc lock jb add scas into pushf orb decb xchg loope out incb inc cmp loope pop xchg bound lea or add je add (bad) rorl jne lods push (bad) fmul sbb and (bad) add cmp rcrb mov cwtl das and out lcall sub xor and push and sbb push flds sub mov arpl adc adc mov ja dec ss mov dec jp rclb push and push xor clc pop push out fimul test sub rorb lods jl cmc xchg sub das dec inc movups cltd cmp push in into pusha (bad) stos jecxz (bad) arpl test pop or add mov popf mov pop add and cmp lds pop cmp ficompl ja lret push xlat flds jle adc (bad) incb rcrb jbe or dec arpl adc (bad) mov and flds mov mov add clc inc pusha lcall (bad) adc pop int fiaddl sbb mulb fidivl mov xor push xor lods imul nop lret or daa outsl fisttpll adc stos xor (bad) (bad) push (bad) jno add xor cld hlt in jae pop stos (bad) xor loope scas pusha out cld scas jb daa aad xor repz add sbb aam push negb test inc cmp xchg je sub std mov and out sbb dec iret sub dec pop mov xor jb aam xor aad mov (bad) push fs jecxz in cmp repnz or and cmpsb es pop push mov int3 movsl xor imul mov pop int3 (bad) call outsb stc mov inc loop dec jbe movsl mov sahf cmp fwait push push (bad) xor push iret sbb jge sbb add mov fwait pop mov sub data16 iret or mov fdivs lds jecxz mov pop jl cmp adc movsl push pop pop push mov ficoml xchg xchg mov pop cmpsb aaa add sbb in sti sub add movb adc je in bnd add addr16 gs pop ljmp jmp xchg add cmpb repz ja pop xchg in and sub sbb mov pop rorb (bad) je loopne push push in xchg cmp imul adc inc mov jge push js xchg xlat cmp repz push sbb scas int nop es sbb pop les sub repz pop repz stc insb out (bad) cmpsl mov xor fstl in clc int in mov or cli fcom (bad) and adc add dec sahf loope mov and xor fs dec mov adc lods adc cld push aam jl (bad) push incb pop int mov sbb and loop fwait dec jmp mov xchg into fs push rclb outsb ja (bad) das loopne push push inc sbb sbb sahf lret add mov insl repnz rcrl dec push icebp mov cli call mov out pop jle (bad) movsb dec jmp (bad) jo inc test rcl test mulb into lret cmp sub (bad) clc cmpsl lods inc dec std inc jnp mov jecxz sbb xchg fisubrl push aaa faddl mov outsb xchg les or pop addr16 into gs shlb insb sarb jg jge jo lret xchg jmp out jbe pop iret lods push inc sbb gs sti cld fdivr addr16 fnstenv aaa inc sahf xchg dec push and sbb adc dec (bad) scas xor rcl mov outsl loopne (bad) je xchg ds mov mov inc mov cmp cli fiaddl leave imulb mov fwait in iret movsl in jmp test push in pop (bad) pop adc inc and adc stos loopne or adc stos and sbb add push aad and sub jnp rcrl mov in nop bound ja,pt xchg lahf lahf pop inc jbe lret sbb arpl xchg jecxz sbb jecxz (bad) repz sub ss (bad) jbe lods stos rcrb cmp test mov xchg xor lcall push add jle push js pushf jb sahf push ljmp cmp movsl sbb int3 cmp inc xchg repnz es and out in loop and or fstpt pop push cltd xchg xchg push icebp xor jge xor test incb dec cmc pop push sarl push mov push sbb iret jmp mov or push xor cmp repnz daa jecxz ret mov stc orl adc into push xchg jb int xchg xlat cmp or out push xor rorb int push push sub mov xchg mov or mov fs aam cmp repz arpl es and cmp ret mov inc mov mov pop push outsl cltd jg push dec imul push mov dec mov call inc leave mov test mov enter and je sar or mov in nop fldpi (bad) sbb sbb rcll scas cmc lds jge and dec cmp sbb dec mov add add dec rcr xlat push push iret hlt adc (bad) movl nop lea das fs nop call sbb sub xorl movsl xor jno lds and stc push dec fnstsw ds (bad) test scas sub add xor push imul daa xor int3 push xchg roll xchg xor jmp pop lret pop ljmp mov mov sbbl mov imul (bad) add mov xchg inc mov adc test push data16 xchg es pop jge mov sub sub inc bound and inc mov cmp and jns jb ret test jmp mov xchg mov divb inc push hlt mov outsl fs xor mov insb int3 pop sti out in (bad) pop xchg xchg or fild xchg movl xchg in insb sub ja jge push push decb sub dec and outsb sub imul scas sbb push mov push mov mov sub imul aaa mov mov mov fildll mov inc insl mov and and into push xchg (bad) xor sub xchg sbb cmpsb and xlat xchg imul dec fdiv addr16 mov pop sub xchg xchg mov and (bad) outsb dec xor push inc insb mov bswap push lds (bad) icebp jnp xchg dec mov push stos jg inc stos pop pushf xchg xchg imul ds je adc andb pop andl lahf pop push arpl xchg mov out lods xor add jl loopne fistl pop (bad) popf ja ljmp sbb cmovg lret stc or cmpsl pushf mov repnz ror outsb pop rorb movsb cmp aaa (bad) lret (bad) push mov inc sub pop lcall jb cld shrl sbb mov mov arpl sar shrl sub loop test add out rclb stos iret jnp mov push sbbl (bad) push mov sahf daa dec fimul cmpsl stos sahf jp and cwtl subb adc arpl xrelease mov jmp repnz adc clc and cltd and std repnz or add in or popa cmp cli iret mov fwait in imul xchg push stc mov jb test scas push jg rorb (bad) fsubp adc (bad) sti ds test sub leave mov (bad) (bad) int sub outsl jnp push xchg adc pop and js lcall mov je mov push sub popf xor movsb mov out mov js cltd pop or mov mov scas fucomp xchg rcr out enter leave xlat fwait dec ss insl inc in dec add lea sbb xchg (bad) push sbb add out mov push xor ds sahf xchg xor js cmp std mov movsb or lods (bad) movsl ret push lret pop and outsl dec jnp lcall pop ret roll push aas or lea jg rorl out and mov sub inc lcall hlt imul fcoml enter xlat mov pop or xchg mov mov add fldenv ljmp sarb cmp adc push jge out push (bad) cmp pushw dec inc mov pop adc or int3 pop sub (bad) fcmovnbe mov in aaa or cmc pop sub pop pop stos insl pop es idivb aad jnp hlt push or mov vmovdqu cld ljmp (bad) outsb add xchg sub dec jecxz loop ficom imul sub push xchg xchg rcll or movsb add or or mov sub dec fisub (bad) or and jne adc lahf cmc adc mov ret cmp mov and ljmp pop cmp or aad pop loopne jne lahf or and push sarb in cli push jle add ficompl inc subb sub push in imul (bad) mov inc xor mov in xchg (bad) in mov xchg sahf movsl lret (bad) neg data16 out lahf dec jae movswl hlt pop inc xchg jns mov pop stc sarb mov push push inc mov jecxz xor sbb roll dec ficompl cmc mov push add (bad) or (bad) mov out jecxz and cltd adc add das lea xchg cmp repz fdivl xchg sti loop sub test cwtl inc lds inc jbe scas sbb cmp jne xor mov in pop adc cwtl push in and (bad) jae ljmp pop add fadd movsl les or pop cwtl xor sub cmp mov (bad) fcomi jbe out mov cwtl insl aam xchg pop push call repnz push loopne lock les push xor inc or add inc or pop mov test xchg mov insb jecxz push in cmp cwtl daa std adc jle cmp std dec xchg pop jecxz rcll outsb ljmp bound xchg repz mov popf and xchg push jl,pt push scas out js inc es xor cwtl pop xor jbe int or mov mov scas jg cmc xor in fbstp push and cmc adc sub cmp xchg in cli jae xor aam gs insb add mov mov loopne mov fmulp shrl sbb or insb xchg inc ret inc jb or or dec mov sahf push pop dec mov xor mov rcrb out mov fwait (bad) jmp pop dec pop or in mov lcall fcoms or (bad) xor sbb xchg cmp jl scas xor hlt or jbe shl (bad) xor jae rcll test mov mov (bad) lock push sarb dec adcl sbb and (bad) dec mov mov cmp sub enter call inc jae lods lcall out jne sub test jns push mov addr16 lock cmpsb je inc cmpsl (bad) xchg test push mov aad sub int out xor outsb mov pop cmc and fsts pop les sub xchg push das mov mov push cmp lahf sbb inc divl ss and lahf mov mov loopne add mov loop push adc jnp in mov mov adc lahf jae push jle dec pop xchg push mov xor stos lods cmpsl lods push out inc mov and lahf sbb out out push data16 xor mov sbb jg or outsb out cmp mov xor rorl mov cmp sub sbb sub fdivrs loop scas leave adc dec jns stc jecxz nop inc jle scas sub out add bound xchg rcl and lds into xchg (bad) enter fidiv jo stc cmp mov (bad) or sbb mov ds sub mov repz repz mov leave into cmp mov jbe xchg mov xchg outsl and lahf and outsb sbb jno cmpsb pop sub mov (bad) enter pop sahf aaa dec gs test jle scas out sbbl push (bad) and js shrl dec bound (bad) fdivrs lret aaa pop lds pop and lret (bad) add mov aaa or ss push lock inc xchg scas jg loope cmp cltd mov js jg cmpsb enter scas xor scas or das (bad) decl or es sbb sub mov rcrb pop jno inc sti push stos push jmp lret jp dec fisubr movsb mov add sbb rorl data16 cmp xchg arpl inc fadds sub inc lods pmaddwd adc jne dec negb lcall ret xchg stos lahf pop add adc mov neg adc shll fsub loop adc jmp test mov pop mov repnz in sub jae lahf in cmp adc mov idivl scas andl sub test jnp (bad) mov fisubl xchg in sub jl (bad) mov pop xlat hlt test fs repnz fcomi pusha bound inc pop fldenv call or push jle movsl push fs pushf fimull jae jecxz jle lock nop pop jl sub (bad) repnz imul jne mov mov mov movsl xor cwtl push mov jns les fdiv fnstsw or ds rorl dec shlb ret lea cld (bad) je add mov jecxz xor (bad) das cmp pushf pop jg setno xchg mov mov test add test dec rcrb or mull in loope xchg in pop subl push add sub mov cld mov scas into test fsubl cmovle inc mov out pop adc ret sbb pop or sahf aad push shrb lret and sbb mov sti iret iret cs pop or fstl scas int3 sub mov in or jb pop pop mov out and add mov xchg imul (bad) adc dec test inc ret xchg xor xchg stos cmp lea dec stos sbb push xor cltd pop lods mov push stos add jns mov dec mov push mov cs adcl sub insl xchg ss es js ficompl sbb cmp outsl movsb in xchg mov cld ficompl outsb ljmp and loope adc jmp or (bad) push mov sarb loopne mov (bad) pusha push pushf mov outsl mov (bad) daa pop and jno pop sahf jnp pushf mov fdiv mov sahf imul mov mov cmp scas pushf adc jae mov pop sub mov mov mov mov enter push dec xchg mov and inc inc sbb (bad) cmpsb cltd movsl popa test sub mov pop fldl mov and and (bad) neg (bad) adc xor mov das enter dec xchg sub or repz mov rcll call push lock cmp xchg xor hlt ss add jmp jge push (bad) mov cmpsb in int dec xchg cli popf rorl jbe ljmp cmpsl xor sbbl clc leave mov jb jne daa dec (bad) repz mov inc or out mov fdivl in ret or scas lret xchg pop mov ja and and add jnp xor xor (bad) loope pop testb jne lods or imul xor xor divb and fwait enter pusha paddusb fwait sub lods push or sbb mov test and xor dec or lcall in mov out aad je lcall (bad) mov ss popf in inc push insb mov jl push add dec or add jecxz scas jmp or outsb sbb iret mov jecxz sbb rcrb push pop xlat daa lret decb out pop into mov mov sub cli dec mov rorl gs (bad) (bad) mov sub and xchg mov icebp xor (bad) test mov xor fstpl sub jmp dec es int3 out mov roll int push cmp pop sub in jnp in pop ds cmp or out stc push pop sub lock mov dec lods push (bad) mov lds lods cltd in inc cwtl dec pmaddwd or mov xchg out cwtl call lock daa cmp sub dec mov add mov cmp lock sbb mov rclb imul jbe rcrb movsb mov popa dec mov lods cwtl jecxz fwait sub push push push push lcall cmp push ljmp outsl jns or cmp fbstp js daa dec push jno popf popf and lcall int3 outsl gs aaa fmuls insl decl ficom sahf pop sarl adcb sub xor inc loop lret push ret jge bound jns or lahf int3 clc jo pop loope fidivr roll sub pop cmpsb pop xchg cmp out sub xor bound ret inc adc add dec loope and inc cmpsl pusha push jae add insb mov jmp (bad) mov std inc fcmovne leave sub xor call xchg and lods (bad) mov ljmp push cmpsb pop jne ds and add or jmp mov stos stc pop rcrb fdivr dec sub sbb xor popa add pop cmp ja pop je aaa das lods (bad) push mov ja fadds and mov add test xchg aas dec jp push sbb jns lock or adc fimul xchg repnz pop xor roll mov into ljmp xor mov sbb pusha pop cltd mov dec mov jne xor xchg pop and aam jle cmp sar out pmulhw jl adc xchg adc push or aam int insl aaa mov cmp sbb adc aas adc jge sub xor jecxz inc jns loop repz add adc inc xchg lahf pop sbb lods lcall into jo jno out into aam pop popf sarl inc sahf push and or mov adc xchg and outsl lahf mov jl pop mov fdiv pop inc aam pop inc jb sbb sahf xchg mov call orl out inc add jge dec fiadd mov xchg push cmpsb jp jle cwtl mov sbbb test add nop jl (bad) enter out jmp pushf and cmovno xor mov sub inc (bad) and rclb add repz ret ljmp and inc pop popf xchg push test sarl repz in mov add mov popf mov les add test scas ljmp sbb (bad) (bad) popf cmp ret xor fisubrl jno add sahf pop pop loope,pn inc ljmp and incl push jb mov sbb pop repz and scas push pop aas faddl flds push and out inc and insb fidivr inc inc dec jle jbe dec pop push sub subb pop mov out insl cmpl cmp enter loopne leave andl and xchg cli cmp jmp jg roll arpl cmp pop lahf jmp mov cwtl sbb bound bound (bad) ja insl rcrb sub dec leave popa inc (bad) mov mov cwtl and jb fisttpl sub and loop mov addl movsl loopne adc (bad) cld xlat jmp and popf pop dec pop neg mov and pusha in in popa mov stos xchg cld dec addb mov add lahf roll cld nop sub pop enter xchg push mov pop loope jmp mov fwait xchg mov fadds mov scas sbb mov (bad) or cmc jb xchg or sahf cwtl mov jnp mov xchg inc std xchg inc (bad) jo fwait (bad) mov sti mov frstor adc mov add enter lret sti pop push fwait repz pop not daa lods sbb pop imul inc std fbld mov sbb xchg icebp aam fist push (bad) sbb adc fs pop leave sbb jle and (bad) outsb push adc push out xchg push sub cmp pop jne or lahf jo jecxz pop xchg (bad) xor pop add jmp mov and and add lock nop (bad) pop test repnz es add pop mov lahf jae jnp imul loop jo jns lds mov sbb pop sbb sbb mov and push fwait sub jge dec dec in dec movsl (bad) mov push xchg lea (bad) push pop jp test pop addr16 stos cld int3 roll mov ror cmpsb adc mov fsubrl pop xchg pop ret lods lret xchg xchg insl (bad) cmc hlt and mov scas sbb popa mov mov (bad) cmpsl dec dec jge xchg and cmp (bad) sub mov xorl inc int xchg cwtl mov test sti mov mov mov sbb cld cli pop out test pop data16 cmpsl loopne bound lret mov inc mov les out mov dec out scas xor adc lock test lock cltd push dec call or mov mov lret test enter xchg pusha or pop in pop ljmp push or inc jg test add xor pop cmp pop popf lods xchg dec fistl jne xchg lods into and xchg push lods std adc sub mov xchg shrl add pop mov mov data16 sbb adc xor loop inc inc cmp pop inc xchg scas xchg jge cmc pop mov pop or sub aas mov xchg sbb rol ror adc mov fabs fadd jo stos ss int jl rorl mov popf sub mov push sub add stos lods cmc out or xor test test and fsubrl mov sub push data16 aaa dec repz ret iret sbb mov fdivs mov mov inc fst ret js inc push inc inc cmp dec fsubrl jo and in ror js push xchg test fdivs iret fs mov or xor adc push aam leave aam inc (bad) cltd dec pop add hlt lea dec xor adc mov jmp xor arpl add aam xor mov sbb and popl cmp cmp popf repz ss xlat xchg sbb daa iret inc inc fildll pop push movsl sahf mov cmp pop dec faddl cmp (bad) push cmp sti in pusha bound and add sbb mov jge fwait test lret (bad) call push push nop movsl or out jns push cwtl mov mov (bad) (bad) loop addl shrl ss dec dec fcom mov xor js bound adc xchg sbb into stos push ret xchg jp mov jmp pop nop enter xchg and lahf movsb xchg mov xor push addr16 scas cmp sub out cld popl sub mov push inc idivb mov dec pop mov dec cmc cltd mov sbb sarl inc ss (bad) in xchg insb stos add shl out clc sbb aad stos and imul inc std and nop adc mov jg pop sub xor jbe in jp lea push enter int sahf mov aad jae lods push das ret rcll xlat popa pusha ret bound add add ficoml fadd in xor icebp stos repz lret inc cwtl pop aaa test or fidivr loope into jbe pop cmp adc adc jae loope fildll push inc inc cmp repz mov lcall cmpsb pop stos imul mov insl mov call mov ja push and inc add inc (bad) mov xor inc mov popf mov rclb daa cmp xor pop push and fst std add and mov mov xchg adc loop fnstenv push popf sub xlat repz mov add mov rcl mov repz and out lods (bad) sub xchg mov outsb sahf xor adc in fs or jbe orb jg or adc out fwait test xor or dec lahf cwtl cmc mov loopne pop aas ss aaa (bad) jno cmp (bad) call jg scas cmpsb adc sbb (bad) mov cmp mov dec outsl (bad) push (bad) and sbb mov enter fisubr mov mov fimul ret pop mov cld jp xor xor add out (bad) sub in push in add in stos or or and add cmc sbb push je dec fadd xchg or push fdivl xchg cld outsl fsubrl in test and mov inc or cli nopl lea sub fnsave add (bad) and cmpl lods sahf cltd mov push xchg sahf sub in jo jno or test orb adc mov bound call jae ret pusha (bad) and popf or sar pop xchg mov imul xlat cmpsb add cmpsl adc shr mov jmp aad push addr16 sbb iret cmp mov inc test fild mov mov dec nop inc mov (bad) mov lds cmp shrb mov fcomp xor cmp es movsl scas out mov call loop push lcall fsubl sbb in scas sub scas add cld mov adc xchg sub add jb repz call mov mov and inc enter ficoml jne fwait (bad) mov (bad) lahf popa push pop fldt outsb mov jg sub in mov enter cwtl cmp (bad) into pop jae movsb mov jns adc js sbb jg xchg mov cltd movsl (bad) mov xchg dec jo,pn cmp pop or cs movsl pushf outsb push push pop add xchg divb push jo insl aas scas jbe push (bad) and cmp in enter aas add test cwtl mov daa jno adc cmpsl daa adc jno jle xchg mov add push cmp cld outsl sahf mov adc mov hlt jp adc enter dec outsl movsl sbb (bad) mov xor mov jp fyl2x sub loopne push ret loope test adc jnp or outsl mov mov mov inc imul jl jne cmp mov movsb (bad) ret mov in or shr push stc xchg (bad) frstor sbb xchg and add cmp inc adc pop jns arpl mov shrb cmpsb dec (bad) cmp imul mov (bad) lea outsb out daa push mov sbb test test cmp sub ss leave fisubrl push je add mov add inc sbb push push or (bad) and sbb inc iret scas stos out jp jmp cli xor mov dec frstpm(287 lret (bad) rclb push orl push add sbb hlt stc jno aaa cmp jne and dec in inc fldl xor stc fldenv (bad) lock lret gs jge jne inc notb ficompl daa arpl icebp mov sub lahf push loop movq out imul xchg (bad) insb call imul cmp ljmp xor xor imul repnz sub push outsb das jo and inc jns xchg adc add inc je dec push ja les mov inc add icebp add les imulb js xchg lret popf aas iret xchg adc rol fldcw or xorl dec push adc sub push nop scas pop arpl movsb sub adc (bad) movsb out mov add lods stos mov or pop lods in push repz lock pop in jbe imul dec sub lea shrb pop fdivl stc popf jge mov xchg push push pop cld push popa xchg push mov rcrb mov flds mov stos xor aas sbb aam add and gs inc sub mov std sbb iret lods mov hlt sahf or jmp (bad) cmc in mov (bad) mov push addps inc (bad) movsl loop xor fiaddl lds jno cwtl call cmp rclb movsb cmp imul in push in movsl adc and cld jge scas mov fnstenv into icebp (bad) jbe fwait mov lds sahf sbb (bad) push mov fwait enter movsb leave add adc lret das mov jg add stos xchg (bad) xor cltd push nop mov dec cwtl xchg aas mov js add lea lea std dec pop xor jmp ds mov mov mov pushf and push jno adc cwtl ficoml xor inc scas std fnstcw adc mov ljmp outsb push enter sub mov push cwtl faddl sub mov in push out xchg out cmp adc rcrl sahf aam xchg test test or lcall and or xchg addl adc jmp scas movsl push fistl mov push push pusha push lret les adc pop jne pop jp xchg (bad) stos jle gs adcl lcall pusha or push and inc dec cmc int3 repz sbb sub and jle or jl js xlat cmp sarb out adc xchg stc push ret xor out in roll loopne cwtl cmp mov aad fldenv dec fstl jne mov cs xor (bad) enter insb test jbe fwait dec je push or sub jo sbb add lods stos add in xchg incl adc cmpsb repnz xor and jno or (bad) lods clc clc int sbb addr16 pop push push jmp jb push and fsub inc arpl push test rorl pop cs mov out inc inc xchg sahf out mov sahf xor xchg xchg push cmp pop pop out test mov cltd insb lea jne sbb xor mov cmp popa xlat jns gs ss (bad) and enter pushf sbb mov sbb mov adc out xchg je addr16 (bad) lock mov jno movsb repz pushf fcompl pop mov (bad) std (bad) bnd repnz pop (bad) xor imul (bad) sbb mov pop xchg es rcr into jnp cmp das fistpl ret repnz push add mov sbb int3 or adc ss cwtl jmp ret jb call push sar iret mov dec push and add sub inc mov mov popf mov lret out ror ret sub inc inc cli mov iret sbb int cmp adc in (bad) getsec and test lods fcmovnb sub or and pop mov sub ret icebp mov mov and xor dec and jl pop (bad) and dec aad aad inc push jle fnop out in cmp adc xchg std and adc jmp jle (bad) mov xorl (bad) jp pushf test xchg mov adc mov stos cmpsl jl push fmuls inc fbld dec (bad) (bad) repz (bad) mov cmp test lcall adc popa push inc movsl movsb cmpsb push hlt sub (bad) add or lcall dec mov or adc jnp add call das cmp cmpsl enter sub mulb dec fidivl pusha add fs ss imul out insl mov call or and push aaa pop stos leave jmp dec repnz and add into frstor addr16 pusha xchg push xor push fs mov ljmp jge (bad) adc test scas lahf ret sub lods xor outsb pop mov leave xchg or pop ret mov cmp push add aad lea incb jns dec inc cmp mov xchg xchg jge popf xor cld repz adc (bad) orb sbb repz push mov xor fs dec sti mov push inc ljmp sub in jae cmc xor lock push lods fiaddl push repnz fidiv xchg and in (bad) mov outsl js test mov jnp clc movsl adc es in xchg cwtl (bad) mov sbb inc xor mov lret mov lea cmp ret outsl inc aas lcall decb add scas dec aam push (bad) cmp pop xchg out (bad) cmp out (bad) fbld dec (bad) xchg sub mov xor aas cmp in xor ds push mov mov sub jg scas mov mov popa pop mov pop pop lods rcrb das mov add sbb cmp xor ret rol imul jmp and scas jmp imul push add xor (bad) lcall jno inc mov ds jle insb jge (bad) or jnp shr das scas fincstp fadd sbb pop loope cmc cli ds (bad) repz arpl ja enter xchg in xchg fxch xor dec fwait call push loopne jo mov nop jae pop std mov mov in inc out sub ret push mov test inc xor xor pop stos iret insb push or pop push pop cwtl push inc mov aam dec xchg dec adc sub push int push test push mov inc push jle jle subl lea mov icebp cltd faddl mov cli pushf mov lret jecxz sub bound jnp nop or xor loop mov aas jns or and int xchg sti call mov or lret psubb sub mov cmpsl push add mov fcompl test cwtl mov dec hlt push cmp or mov idivb popf sbb xchg lret repnz fs ss or mov jno aaa jl rclb scas xor std sti mov daa sarb adc push jp pop and (bad) les xchg rcl mov sub int xor dec sar popa fdivrs adc popf vpsubusw add mov jns mov and dec inc cwtl jg adc loopne push ds mov dec cmp push xlat popl cmp fimull pop ja xchg mov pop push dec fs sahf push aad bound aam mov popf decb xor add and jle adc or stos enter popf add ljmp mov nop add lods (bad) mov mov xchg add mov push out int sbb push dec sub add and push push ret pop dec adc fistpll push lahf inc dec lahf push mov push sti popa mov sbb jno addr16 jb cld fstp mov lret inc je (bad) inc lock pop adc pushf in mov mov insb mov push ret sbb or mov loope xor and jns ds xor xor xchg mov cld sub bound rorb or dec xchg jg (bad) xrelease out inc (bad) and imul mov pop push push sub xor lods popa xchg popfw pop loopne mov test add cld mov aaa jnp or jno notl jp stos mov jae xchg jle adc lcall adc sti nop xchg fdivr pop xor pushf jge test and loopne sub xchg int3 sbbb add aam ss sub repnz push (bad) repz ss mov bound jl insl imul loop and mov imul push roll ret (bad) int3 xchg sbb jbe adc jmp mov lods inc adc mov ss pop mov cmpsb pop xor (bad) and or dec push mov daa int3 hlt movsb sbb in inc push cmp scas xor add jb xor xchg std cmpsl daa std sub int and aad and test addr16 test ret add enter aas mov das mov push mov mov xor lret (bad) jmp pop jl xchg sub mov add imulb jns sub xor cmp jge test lods movsb adc push mov int3 mov or mov outsl leave jo sub mov pop out inc sbb ds push pop call mov das fcomip cmpsb mov jns jne mulb mov mov call xlat add pop xor and scas (bad) test mov hlt inc stc ja hlt pop jp mov mov xlat push pusha into or pushf adc addr16 test movsl pop repz or out sbb xchg je pop adc pop dec add movsb int3 pop dec aam rcr sbb inc jp lret in lahf fsubrs dec jne xchg push xor xor rcrl mov xchg imul jo js mov cli dec lods cmp iret pop cmove fcompl frstor xor or faddl xchg cwtl test jns pop int3 icebp mov adc addb inc (bad) out out lcall pop enter int movsb iret adc sub minps popf outsl test sub xchg ja lods pop js push rclb enter pop int pop in lcall aas clc subl mov loopne pop xchg aas add xchg xchg jnp lahf xor mov mov push xor cmc add fwait lret (bad) xchg je mov (bad) negl lcall pushf push (bad) push add mov call push jbe dec loope mov jno mov cld and xchg xor sbb mov dec mov xchg xchg xchg outsl and notb mov (bad) arpl lods pop push pmulhuw sbb sub pop movsb int3 sub test jmp mov sub dec cmp jge pop adc inc int3 lahf mov rsm scas sbb and fsts stos orl pop cli mov dec xchg xchg xchg mov cmp mov push xlat mov lods out scas dec mov (bad) sahf sub inc sub jg int3 mov arpl mov cltd jo int3 aaa or add fbld jp mov pop stos es mov inc popf jno pop pop xchg aaa int add lods mov inc push ja rcl neg (bad) xor push cmp pop test jmp cmc cltd ja mov jnp mov jbe push xchg pop test clc jae pop fdivrl daa enter rclb gs or sub add push mov mov iret sub cmp scas (bad) enter cmp inc scas push divl loopne mov stos inc and jnp and sub push fistp pop ds pop add into jb leave in xor and dec adc mov out jno or push stos fcomps and jge jl ret (bad) int jl push fildl add mov arpl add out add cmp lods in mov test in add or and sbb (bad) adc in push sbb jp mov push in das dec jmp lret sbb (bad) (bad) jnp lock mov cmp scas cwtl jg (bad) mov dec movsl aam and jb sbb or xchg movsl lret inc mov pop pop mov aad cmc mov fs lds cmp imul ds out xchg add dec xor gs nop js out dec out inc pop and xchg movsb inc push movsb jle iret and fimull jp jae pop lods mov fbld cmpsb ret imul mov movsb imul and (bad) daa inc (bad) xor loop stos dec addr16 loop aam sub scas or add js scas jecxz sub in imul neg xor int ja mov outsb scas cmp lock mov andl xlat jae fmull xor add iret (bad) pop pop pop xchg mov loope fcmovbe (bad) movsb pop arpl xchg pop lods test dec cmpsb pop test sub rcr dec imul pop cwtl ds leave ljmp cmp ror cwtl push inc int outsb and scas call rolb movsb sub ss dec stos cmpsb fidivl and aas repz dec pop pop add leave pop cmpsb xor cmpsl xor xchg push out das xchg push mov mov pop add inc sbb mov adc mov dec add push sti and popf or and push jbe insb jnp push sbb pop sub xchg shll adc push outsb sar pop stos loope gs xor inc lods lds xor in fwait cmpsb lods fidivrl inc out xchg pop mov lods or daa inc sub adc mov cmp test xchg clc mov mov add pop mov and xor ror lock clc fnsave sub rclb adc test stc jge add outsb mov insb in sbb cli cs cmpsl iret rcrl data16 add inc nop in jne dec dec pop iret xchg (bad) imul and cmp fisubrl xor jge and inc and or lahf iret scas gs mov stos xchg (bad) mov inc sahf loope sbb xchg leave iret bound (bad) cld pop inc hlt ljmp rcr fildl nop cli mov fst std pop mov jmp xor loop cmp mov xor insl pop sbb imul mov pop (bad) out sbb push cmp xor jle adc jno outsb clc js cmp dec cmp loop stos add out lock outsl test lds mov push aam jg outsb push shlb lret out lret and daa pop nop nop fldenv mov mov inc mov in inc push xchg mov or pop fsubr popa mov addr16 inc jo subl cmpsb sbb mov xchg mov and pop xchg stos mov sbb int (bad) es mov pop outsl jmp and sbb cs aad push fisubl xor jbe rcrb fdivrl and jmp cmp lcall xor std fstps scas push jne pop and and inc xchg sub clc pop cmpsb sub cmpsl in jmp imul fsubr cmp call fcoms ret xlat inc xor mov jmp jge cld pop cmc xor jge rcll jge lea push cld push mov jb push push pop int3 notb jge mov (bad) adc or adc cmp fwait push stos incb fistl out je add (bad) inc dec imul repnz and push stos ja inc cmc (bad) (bad) mov sbb sbb jp out dec (bad) xor add mov mov int sbb rcll stos mov into lret shlb cli xorl fsts push out mov arpl add pop mov xor cmpb mov sti cwtl insb mov inc out and (bad) aam lret mov fiadd cmpsl sbb dec xchg sub sarl insb or andl push lock lcall (bad) sti outsl pop sub fiadd negl (bad) addr16 adc aad div mov sbb cmp aas mov insb fsts (bad) fdivrs loopne (bad) cmc push and lea mov (bad) gs xchg jge inc dec movb fisub xor aad (bad) fsubrl pusha add (bad) sbb ja,pt cli lret sub gs pushf cmp sti lcall cltd mov or adc outsl ffreep adc xor xchg cltd imul leave movsb fcmovnu repnz and add xlat dec or adc jle jp test push fildll xchg (bad) in or xor mov mov push jecxz mov xchg mov cltd jne stos or (bad) cli inc mov xchg leave leave cmp mov jge and in bound scas inc push leave js jb mov (bad) xor les inc arpl (bad) movsl sub cmpsl add pop mov push cmp repnz js push lods push or mov insb lods loopne sub das addr16 lock aas jge mov or call cmp add xchg add jbe out mov or xchg add ds psadbw cld pushf les rorl adc rolb out hlt loopne fisubl notl enter jae mov push fs leave xchg cmp xacquire stos mov (bad) mov es (bad) std lds dec mov movsb lret xchg xchg add les cmpsb adc lock push push cmp loop jbe mov push repz add or mov add mov adc mov xchg jno lret sbb jno (bad) loop jo push xchg lcall shll inc ljmp sarl sbb mov jnp add loop push es and cmpsl or outsb das xor aam imul push pop jae in mov call leave (bad) fiaddl insl mov faddl inc fwait (bad) sbb jno pop jg cmp rcrb xor or call mov pop dec out mov push stc xor das or inc outsl hlt insl scas (bad) movsb insl aas push (bad) jns lock cmpsb outsl ljmp (bad) mov sbb jg mov jecxz,pt bound fstl orl xchg and loop shlb or loop pmullw sahf cmpl (bad) adc xchg cwtl insb test adc popa adc (bad) mov inc frstor jbe rorl jp cmp ficomp mov (bad) imul jnp aas movsl pop add mov in orl fmul clc ds es add push sub mov push lcall cwtl inc ret in mov xor arpl mov add push lret mov sbb or jecxz clc sbb out mov daa mov (bad) ljmp cmpsb pop (bad) iret in sar or pop leave inc jecxz mov push mov add stos push data16 fisttpl in test imul mov adc push (bad) cmp fcomps mov add (bad) (bad) into test arpl push lods outsl test xchg cmp dec fs dec add out lea cmc inc iret push cmp mov out mov int3 imul adc inc sbb sbbb xchg in push cmp cmp repnz loop xchg inc cs popa lods and lahf dec cltd (bad) js inc (bad) fwait es frstor and stos lcall out jns mov add and jo dec adc xchg inc add xchg lds icebp mov or aad mov (bad) inc mov rorb mov pop out or cmp fidivrl das pop sbb or repz push mov push mov sub sti dec mov pop jno jecxz sbb fsubrs mov (bad) mov lcall fld push sub cli insb mov xchg out adc (bad) fwait popa mov add sub mov adc mov jmp ja pushf mov sarl std popa jo mov xchg movsl (bad) jmp (bad) mov out add xchg dec adc icebp data16 icebp push call enter popl aas (bad) sbb inc and rorb cmpsb lods pop and fs adc rorb movsb sub mov int push push popf inc jnp dec sub jg cli loopne test in (bad) mov andl into in push pop adcb xor xor cmp push std (bad) and or in jp jp clc imul ret daa mov pop stos push add je xchg lods lret pop fdivl adc (bad) pop dec je push es shrl scas dec inc pop add mov inc icebp fwait pop jo loop (bad) push jno (bad) cmc push iret insl adc or xor jle mov test hlt out das frstor mov inc inc mov lock ja rcll pop nop cli stos mov sti add clc pop inc int xchg shrl in or mov and or shll sbb add add and (bad) (bad) mov aad sbb pop fsub push mov mov imul xchg xchg movsb test in sbb add rol cmp lods mov cmp icebp mov outsl push divb std adc xlat andl push out and inc movsb or add out sarl mov xor ret pop dec mov jae lret fldz outsb andl lds jmp mov call sub sbb and cmp stos adc fcomi mov outsl mov dec mov cmp cmp aas add mov xchg xlat xor lods js jle or or or out loopne pop mov push mov adc mov int stos push xor test push dec mov sbb lret xor cltd mov adc cmpsl push rolb aas mov dec stos popf (bad) lods (bad) dec pop ja and and notb push xor pop loopne mov out sahf cmc pop movsb inc ja mov xchg mov stos sti icebp lods test clc leave adc dec pop sub insb cmpsl or cmp aaa inc (bad) (bad) and mov in (bad) mov push addr16 push jg dec es jno add mov icebp and in dec cwtl (bad) and je movsb pop enter mov inc add mov imul push bound pop jp enter and sub pusha ds rorb icebp out jecxz cs lods xor divl loopne mov or (bad) mov ret lret or cmp subb movl or fsubr xchg (bad) pushf or dec or pop loope test (bad) (bad) int ficomp push in in aas jecxz movsb mov ljmp lods dec xlat mov sub sub in std (bad) shrb dec ja dec inc cli dec (bad) testb adc xorl mov sarl cmp lahf push xchg cmpsl inc loope movswl in das sbb and sahf ficoml lret movsb mov lret (bad) mov sub les cmpsb xlat xor push (bad) mov js push jae,pt pusha sub test fwait cmpsb insl fs mov (bad) in sbb fwait les icebp pop sbb loopne jo pop loopne out push sahf sbb dec stos pop icebp ss in jg mov movsb sbb sub xchg (bad) pop xor dec sub lret inc pop in adc pusha popf pop decb mov jecxz out jg mov scas ljmp sbb rcr nop out ss aad sbb pop in inc lcall mov out dec addr16 and xor inc jp push das das icebp inc test xor mov mov cs or lret xchg addr16 xchg ficom mov stc test sub push inc xchg push pop cmp mov es daa iret sbb out lock xchg (bad) iret lock cmp pop inc fwait push (bad) mov mov es and mov adc inc cmp mov xchg cmp mov popf lods mov dec fstpt fisubrl adc dec xchg push pop (bad) adc lds sbb stos push add inc test adc jge cwtl jmp insb mov mov fwait out fistl (bad) xor or pop lods mov xchg xchg cmpsb les inc addr16 cmp shr add dec mov pop xor xor in clc pop sbb adc jbe cmpsb or cmp movsl scas sbb js push cmpsb or cmp and std arpl cmp sbb jmp scas int3 mov and sahf mov in xchg mov adc fldpi xor fidivrl cmp and dec mov xchg inc sbb test jecxz iret adc mov pusha ret mov insb cs outsl ds testb sbb pop scas jb test pusha push inc lds add mov dec aaa push dec sti push add (bad) test insb and imul imul leave (bad) mov or je dec xchg data16 cmp cmp xchg add je and adc inc adc imul imul mov mov in sub out cmpsb fwait je pop test das fdivr data16 loop in (bad) or aad and cmp test xchg roll dec xor daa cmpl sbb lods imul push adc push pop xor pop lods add push fucomip lea push dec jbe push sbb lret xchg xor les imul pop ret sub xlat xchg scas jb aaa addl mov cmp jae dec in es (bad) nop lret push push (bad) push jecxz sub in adc mov in testl or shlb cmp lahf ja cmc rcrl add shr lods nop pop test cmpsb cwtl rcll in xor mov mov jns pusha mov push popa movsb xchg or int adc (bad) popl shl movsl cmc test repz sbb adc mov in xor cs xor pop stos or imul or adc inc movsb sub or int3 dec pop xor mov imul int out adc sbb mov jle jae pusha jno mov sahf jle dec dec ficompl (bad) mov (bad) sub mov or push xor lahf add cmpsl mov adcl fdivl adc sbb xor (bad) fimul (bad) movsb fcompl add jae cmp out inc (bad) sbb stos pop mov inc and sub test sti cli push outsb arpl psllw sub push inc rcll aam push mov ss dec inc jne out mov cli rorl aam cmp inc jnp aas bound leave jbe mov ret or icebp js loopne mov xchg movsl or gs daa and push inc xchg push cld inc cmpsl test cmp loop test pop (bad) pop cmp sbb leave je push xchg aaa sbb mov data16 inc xchg jns fdivrs (bad) sub lods out jbe sub mov push popf cltd push scas test in pop sub xchg xchg jo and adc mov add mov add daa pop sub pop pusha popa stos mov and cmp fnstsw xchg push imul rorl mov mov add in inc adc jl fdivs cli dec cmp dec inc mov jmp adc aad jbe fbld les sbb lods jle fnstcw mov lods in add je hlt xor pusha mov ret (bad) mov sub add xchg xchg xchg lahf imull faddp pop add xor out es jae add jecxz mov xchg sbb mov aas lea cmp dec pop push xchg aad loope mov test add lret pop mov cmp lahf test fstps jae cmc (bad) jmp test lock and sub cwtl jnp sbb pop or jl lcall pop ss mov jnp dec push dec data16 xchg js xor scas in aas push fisttpll fist inc lock bound push pop outsb push adc cs mov ficoml or mov jg or add enter mov adc dec fwait popa push imull jl sahf add jg (bad) (bad) int sahf movsb divb mov add cmp sbb les js loopne mov rcl aas cmp jmp movsb test or xorb push cmpl mov xor flds daa dec not dec (bad) movsl mov out insl and add jns lcall mov sub clc cmp fnstsw mov and mov ja xor imul cmpsl cmp lahf sar out dec (bad) xchg cs int jecxz or sub cmp ds fs sub jbe cltd movsb es xlat pop adc dec pushf adc sar inc mov jne hlt cs nop or lock push ja pop cwtl fs sti lcall fnsave sub dec into inc xchg sub jno int3 (bad) cwtl pushf or stc pop mov mov pop repnz arpl pop rcrl cmc data16 sub push mov scas or jne push scas adc lcall (bad) out jo in pop inc pop xor (bad) leave cmc dec sbb (bad) mov sub mov insb into mov cmpsl mov pop mov pop in test mov test leave push test xchg mov sub mov rcrb jne orl in mov jae push out sbb jno dec lea in cmc adc aas xor nop dec cld std out ficompl data16 lock adc jbe and mov mov cli adc mov or pop fstpl sub pop push mov or fiadd popf dec das sub pop ljmp sbb scas or lcall lcall mov inc cmp xor lahf or sub scas popa xchg rcrb fisttpll cmp (bad) fimul and mov sar xchg into stos lock dec fstl jb cmc push lret push psraw pop lahf fisttpll mov cmp inc mov jg in test cmp sti or loope (bad) jecxz and insb dec stos je fdivrs cmp mov cld test inc ss mov xor xchg or push jbe and push sub push xchg or xchg mov rcrb and and dec outsl fwait mov push in idivb inc cmp ret fiaddl push mov dec rcl das lcall test aam addr16 sbbl cmc rcrl pusha (bad) mov xchg andb add (bad) les popfw mov pushf xchg dec xchg test xchg cmc mov push push cs stc sub je aam xchg and call sub rcrb and lret mov mov das je (bad) xchg push jge lea cld iret pushf inc mov mov and test adc enter rol sub xchg sbb sbb cmpsl pop or xchg xchg (bad) lods insl add adc jnp sub jo iret popa pop mov stc mov or clc mov sbb cltd cmp mov loope gs test std jmp (bad) hlt cwtl out xchg hlt push jge cli pop xlat insl sub xchg mov int and and loope jno cmp loop in jmp sub in (bad) or je hlt (bad) lock sar out sub dec (bad) leave cmp popf (bad) clc cmp jmp push xchg sub cwtl andb sub cmp fdivrs outsb lret ror push (bad) pop repnz mov stc ss add lods adc enter push inc scas or and jg int mov int sbb loope lret inc out adc push fstpt lock hlt sbb call cmp and imul scas jl mov mov (bad) mov mov movsl lcall push mov jae (bad) aad (bad) cmp and push xor mull hlt lods sub or add fildll cmpsl mov lods pop stos push outsl aad adc inc cmp add xor sub cmp lea and inc mov or popf pop lcall ds movsb sahf ret jmp pop shufps pop jge and jecxz jnp xor xchg popa jnp inc sbb sub cmp rorb xchg aad lods mov xor call push in adc add fwait in fisttpll jge pop push pop int3 dec sbb ja scas lods dec cwtl lcall sub cmp dec adc pop inc fnsave push xchg cli mov xchg rol sbb jle mov dec out or jbe mov std je inc ljmp stos shll dec sub cwtl (bad) xchg cltd stos sbb pop mov call mov dec iret out fucomi scas insl mov mov push mov jl (bad) mov sti dec nop pusha mov cmp into ljmp inc out cmp incl les loopne dec mov popf and cmc mov pop sbb rorl arpl das (bad) ret cli imul and and imul sbb mov jo inc popa push (bad) xor push movsb push out cwtl imul cmp ret js idivl push (bad) hlt arpl push hlt dec ret cld arpl pushf test mov fbstp pop cmp adc hlt cmpsb lret cmpsb (bad) sub sbb dec adc mov sub repz int3 (bad) mov pop ffree into and arpl add rorl addr16 push ss (bad) cs adc pop cmp fistp das push mov push jp shr in mov test ret inc jae sub ja sbb sub push lret fstps jno xor dec push aad sbb jecxz mov dec fstpl sub dec loope dec fnstenv xor mov in lret fnsave sbb decl js movsl push push adc jp testb add inc ljmp in bound xchg adc or cmpsb stc lret push fisub lea fdivrp pop adc cmp xchg imul and lods pop in push aaa pop pop cmp inc pop pop movsl and push mov pop inc cmp mov (bad) mov sub (bad) push push mov in std xor mov fisub xchg mov outsb mov mov loope jmp fsubs movsb mov cmp sub inc std jge xlat push mov push add aam ss dec jp lret movsb push pop xorl out insl imul mov jne jo push xor hlt shrl cld ret mov cld mov cli outsb (bad) test icebp mov insb cmpsl arpl in daa sub jge shr arpl and fwait scas fwait mov mov into jnp gs xchg xchg adcl (bad) sub dec fisttpl es mov dec scas fmull jnp xor pop sti (bad) mov sbb test mov xlat sub ds xchg jl jnp mulb or cld in popf fnop mov push sahf mov push jne mov xchg push add fst and outsl push xchg xor mov jns imul fisubr mov sti xchg mov lea push ljmp cwtl mov test or mov lds insl ds pop fcmovnbe arpl inc ja mov (bad) movsb cli mov or lcall clc sarl ss push xor outsb (bad) les mov add jne pop pop jl in fdivp cmp testl test lods jp out outsl sub jno inc stc cmp (bad) stos aad hlt ret data16 mov hlt in ret scas and xchg sti aaa mov int3 or aas out push mov sbb jne fcomps push out add or mov mov (bad) test stos cli xchg mov or fsubs lea js mov inc out sub jae push (bad) dec imul rcr dec pop jns into or xlat jmp fcmovu mov xchg sbb dec pop and mov je addps mov inc dec push sbb mov push xor fidivrl inc pop movsl dec pop fmul inc inc mov cmp leave iret xchg loope aad sub dec insb (bad) (bad) inc push insl adc mov mov jns in and jb (bad) xor push inc push xor add rcl pusha sbb movsl outsl out jbe jp jp enter inc hlt shr push mov xor test jns push xor enter les gs adc sbb cwtl jbe mov fyl2xp1 push sub jmp sub adc adc stos mov out cld push and push xchg jne (bad) pop dec dec cltd jae push xlat test cltd and dec xor packuswb sub arpl lds fwait and push add push sub rclb sbb ja dec aas mov loop dec (bad) sub aas outsl mov mov outsb fisttpl fbld dec test sti mov cmp ret in leave inc in cmp imul ss (bad) je popa or or fisubl jo and or popf mov fiaddl inc cmp andb jno sbb push je bound ja lahf mov dec add jl pop rcll cltd add das dec fs adcb adc aaa outsb mov popf lock jo pop and ss mov aas es xor hlt cmpsb pop pop cmpsb aas adc mov rcrb sbb test cmp call or pop sbb les popf out pop enter sub or pop aam les jb les lret test (bad) mov xor mov js push in negl jb mov sbb xchg (bad) int3 aad mov xchg data16 pop jns sarl jle popf jp xlat or test insl iret push mov mov push or sub lret push jns fisubr push loop ja inc mov pop into dec or scas mov inc jmp and inc rcrl cmpl xor popa cmp mov loop std clc mov sub cli scas icebp jge iret mov lods and aaa or push cmp cmc jno jo push and pop xchg or jns bnd mov sbb std pcmpeqw mov jle mov (bad) icebp popf out lods in jmp (bad) enter stc pop jmp pop cmp add mov leave test cmp xor cmpsb mov push push sbb cli pop stos jo fdivs mov ret stc testb hlt (bad) addr16 andb stc mov mov sub and lds and push out je and and jb (bad) jne sub xor add frstor lods loopne jb enter pop push add sbb dec inc loop rcl ret out inc out fwait cld aas and mov lcall cmc les cmpsl lahf add lcall sarl adc push cld adc xlat lret sbb test sub mov add pushf lahf ret xlat (bad) incb inc stos push mov mov lock xchg iret sahf lret xor sbb icebp inc cmp push jp adc jmp je ja jmp fnstcw stc shrl sub in add jecxz xchg out push in push mov lods (bad) mov (bad) pop test jge lcall adc xchg and dec jge cmp mov in xchg mov into jae sbb push xchg movsb pushf loope dec push testb add mov js push sub ret push adcl dec dec sbb gs rorb ret (bad) int imul rclb cmp lahf stos movsl inc push inc lods jecxz inc mov movsl popa xor mov sbb cmp sahf out stos jle out mov cmc daa out ret sbb sub sbb push dec out js or dec pop cmp dec (bad) aaa pop aad (bad) (bad) hlt add sub mov lods pop outsb xchg lret and dec mov pop gs xor mov mov dec mov insl aaa mov inc out push mov test mov sbb mov stc jnp pop push jns stc mov outsl xchg dec stos test stc jecxz sub in leave in call cmp adcb les push fisub je pop jns movsb dec add dec shrl nop push shl jp shr cli bound jp xor repnz dec push fmulp cmpsl cmp outsl lret fidivr mov mov decb inc repz mov rclb sbb cmp mov int3 fnstsw out cmp xor (bad) sub les xor inc outsl call addr16 leave inc add (bad) std cmpsb mov (bad) add roll stc pop lock js cmc iret push pop or jno mov or sbb aas pop sbb std inc (bad) push mov jnp pop icebp call in loope std cwtl add cmpsb adc fadds outsb xor pushf cmpsl pusha mov pushf lods pop mov cmpsl mov inc cli movsl ficomp inc mov jp jmp insl adc pop add aam pushf loopne fild psraw and dec xchg mov mov mov pop and (bad) je add sbbl stc scas pushf mov mov mov jge je loope pop or mov out pop xchg jno das dec ror mov xchg cmp lods aaa call dec lds (bad) out lret addr16 popf push loopne push mov daa adc imul lods out jp dec sbb repnz lods clc aam out push stos cwtl test pop iret es lods and std jp outsb pop sub cmpsl and mov jle push sarb and test in jp stos pop xor test dec xchg (bad) dec aad adc int repnz xor cld test cmp ret gs push inc adc in push sub jb das lds xchg movsl divb mov fisubrl pop adc jnp data16 in rcrl mov xor addl popf xor mov pop dec jle ja dec clc (bad) incb mov inc and mov dec (bad) (bad) fimull sbb push insl fimul inc nop mov jecxz ret rcr push mov loopne pop mov aad pop push (bad) insb (bad) jecxz jecxz enter adc (bad) ja jg test mov (bad) loope jecxz dec sub inc es ret xlat ljmp or mov lods loopne aam (bad) adc xchg jns jo cltd icebp shrl ret adc dec cld pop out mov sbb ret mov mov ds lcall jne mov in stos pushf cmc mov fs pop and sbb ficomp sub das xchg btc (bad) mov mov or xor cmpsb add add (bad) jnp (bad) fcoml sbb movsl dec enter or hlt dec or mov mov rcrl or loope popa inc loope jl xchg cmp mov loopne sub push pop jno jmp lret scas pop mov cmpsl xlat jb sub mov pop int mov push mov js sub insl mov pop mov addr16 add into or jns negb movsb lcall dec call cmc scas jmp pop inc mov stos rorl (bad) stos xchg sbb push dec mov dec jle dec xchg push mov and push xchg stos call mov int xchg stc pop ja ljmp dec ja jo movsl or aad leave rolb xchg cmp movsb and pop stc cmpsl push jbe or inc inc andl popf inc scas fwait loopne adc ds inc push and repnz or pop scas iret cmpsb mov sub nop mov pop lret std cmp adc ds cmp sub popf ret push or (bad) inc jns,pn fwait mov lret mov sbb mov in lock lods or (bad) lock cld (bad) out out arpl adc lahf xor fnsave mov jl push dec sub pop xlat mov xor pop add nop clc cmp cmpsb jb leave jno and cmpsb fldl push loopne sbb jo es or lods mov jle rcll pop or ss sbb in ss sahf pop and mov mov mov mov in sub mov or repz or inc scas jae je xchg cmp sub cmpb lret cli xchg push cmc pop hlt lret mov out arpl out jnp aaa mov nop int pop mov das push sbb lods mov inc lock dec inc stos lock mov push (bad) shrl gs ret add or stos xlat fstpt jae outsl scas inc pushf mov les fildll es cmp add sbb mov pushf stc dec and mov andl push jb pusha stc sub (bad) mov sbb dec mov pop cwtl popa and jmp xchg mov in test pusha jnp sti mov inc lret imul push pop cltd int3 dec cli mov mov inc dec ret fsubrp jg or push mov mov lahf inc psubw and fistpll (bad) xchg jle stos mov stos lods push div pop aas and iret mov cmp aad mov push rol xchg adc pop mov cmp cmp push mov mov ja ror lods sbb xor xchg sbb sbb mov mov fistl pop sub outsl adc jge mov pop inc (bad) fcompl add add pusha or pushf mov dec and xchg cmp xchg jo push (bad) out subb sbb mov push fs adc sbb dec jmp push cmp movsb push xor repz enter push add outsl and mov lahf (bad) push mov mov clc xchg and jne mov adc sbb jae or dec mov fisubl cmp lods push lea push gs (bad) mov adc es popa jl push rcrb movsb daa (bad) adc subb push lea bound insb lcall packsswb enter cmpsb lds loopne scas add cli sbb repz dec nop (bad) mov mov jb test xchg mov lea mov (bad) out out icebp leave push fistpll fidivrl pop jo les and ret iret gs pop mov inc cmp add subb push and repnz inc into mov daa daa sbb xchg xor add pop jg adc mov mov lods mov sti dec lods movsb mov cmp or fcmovne les out loop jp jb or dec std mov out in mov scas in push mov movsb pop pop jb ljmp push xor jnp sub icebp jl mov jmp imul loop hlt mov add xor or ja loop push (bad) sub (bad) mov sub mov push lods sar ljmp cmpl in push sbb addr16 jb data16 dec (bad) cltd lret sub push jno mov cwtl lock fsubl cmp add pop cli sub jno arpl dec xor dec jo lahf and and ja pop test and inc movsl repz mov jle mov icebp mov mov xchg mov inc pop idivb call dec jmp jno pop xor addr16 repnz or icebp inc jmp insl jae pop fcmovu fbstp test inc push (bad) dec cmp adc fwait and ficomp in lea cli dec jnp mov pop pop test (bad) lret push xor std xchg lret shrl push mov xchg inc out sbbl ljmp negl pop ret mov jo rolb test movsb or mov in ljmp fimul cld mov fiaddl inc lods popl cmpl ss xchg mov scas insl or push or mov mulb sahf sub jmp std sbb repnz out out loop push cmp jmp rol jbe aas mov xor or popf lret cltd mov inc mov fldcw sub push bound jl xchg mov push xor mov xchg hlt push add (bad) fbstp lcall cltd js push inc adc xlat mov es adc pusha and xchg push mov add loope insl (bad) call cs sbb jne pop es inc inc jae lahf cmpsb hlt xchg xchg cmp adc stc movsb out lods addr16 jmp int3 bound stos inc dec mov std mov add pop imul push fninit addr16 (bad) sar lods loope ror cmc scas xchg aaa in xchg and clc addb in das test xor into sahf leave add iret scas add ret xchg dec iret je stos call mov and inc loop cs in cltd pushf dec sbb jb loope int3 pop es mov sti sbb test mov cwtl sbb sahf or cmp (bad) dec inc push dec (bad) dec jno jmp notl test push fisubrl into pop ret aaa icebp mov jo in loope lock sbb dec inc and ficom push xchg xchg insb inc pop (bad) icebp inc jg call adc add push shll jbe hlt movsl inc mov (bad) pop inc push cmp push ljmp push xchg dec jbe fsubrs out dec sahf pop imul xlat lock sbb mov xchg (bad) push jge add inc test and cli fdivl test lock dec jge and repnz das ja xchg in movsl and sti lcall xor and jp cld sub or jo mov sbb sahf push mov jg xor push mov imul mov icebp dec push pop xor push adc xchg cltd inc sub ret mov fisubl mov jae fistl subl push fsubrp xchg xlat fidivrl sub push aas xor fwait xchg in pop dec mov rorb pusha (bad) imul mov cmp inc sub pop pop popf mov mov loop xchg popf test inc sbb fmul fidiv test xchg (bad) mov or mov cmc adc test enter rolb pop das pop or int3 sub mov mov in dec xchg mov scas rolb mov dec arpl int3 ljmp jecxz in cmp adc int3 out aad push inc ds cmc and fwait in xor insl lret cmp sarb lret addr16 xor addl add sahf push aas mov cmp sbb daa and insl and aas xor and out stc les sub add lea mov daa arpl sub xchg mov or pop lods fbstp inc icebp daa movsb pop fwait call les xor (bad) mov daa fucomi pop (bad) xor adc jg int push mov pop and pop mull cmp sbb loopne cli fstps ffreep mov add xorb cwtl das xchg sub or xchg (bad) (bad) pop lahf scas sub cmpsb push in jecxz push (bad) fs jne scas xor inc lds and mov shll js icebp jecxz cs icebp (bad) lahf cmp dec inc imul and lret insb and call push fldl pop add push mov aaa jo lcall mov add or scas xchg out test jg loop push leave (bad) js cmp mov das aad mulb jo arpl in jp jl inc repnz lea stos (bad) ret add enter xchg iret or add mov movsl inc (bad) (bad) jecxz nop sbb fnstcw test les fcompl xor scas in (bad) add into dec mov inc rclb mov popf out push test jg rorb (bad) cmp mov test and push loope cltd shll jmp push dec mov and (bad) mov in jle adc aaa loopne xchg test dec jae movsl mov xorl mov lea seta test (bad) dec das mov mov dec mov pushf inc jno jg out mov or mov aad pop push in lods stc call push je xlat lret es mov dec lea inc adc in leave mov push sub cmp test xor sub imul int adc sub out fidivl je and dec imul out icebp xor and xorl call outsl dec int out pop mov cwtl enter clc repz xchg fucomp nop addl gs (bad) sub ds push dec aad inc sarb fiadd fs sbb in mov or test xor adc (bad) outsl sub test fcmovnu sbb push cmpsl dec jno loop fisttpl dec mov in les in (bad) aad add shll lea sarb ret insl inc iret clc (bad) repnz outsb testb sub clc lea lods sub push and sbb fwait sbb cmpsb fldt rcrl rorb mov enter lods mov aaa add adc or pop enter dec mov test cmp leave enter xchg inc (bad) pushf roll mov pusha lea xchg jp xor stos dec push add push in out sub add jnp pop mov push loopne (bad) shl inc cmp ja nop sbb sbb adc mov pusha sahf shll jl cmp pop ljmp or xor cmp aas (bad) and repnz mov jae (bad) mov lret push stos dec test js xor cli mov or adc psubusb jno jnp pushf jge maskmovq fcmovne int3 ja repz or arpl out mov popf (bad) cli jae or aad jmp (bad) xor dec mov pushf sarb (bad) jo in xchg hlt lds lock test cwtl sti pop sti jp xchg imul (bad) leave cmp mov sahf xchg xor pop mov ja sub mov push std imul shr pop pop sti ds pop sub leave or or (bad) repnz inc fnop in jo push aas xchg rsm stos adc xor jbe mov or out cwtl clc and dec outsb add push ret call or (bad) jno pop and sub sbb pushf shll jb (bad) js add fidivl in int sbb lock pop imul inc movsb xchg mov cwtl push jnp cwtl cmc repnz xchg and lock jbe dec out mov sti popa jg movsb sbb add cmp shrb adc test je push mov pop popf push ss je mov mov cmpsl pop cmpsb and in adc push jno mov xor arpl jns testl lahf mov (bad) int3 jl or sarb cs loopne mov insb (bad) xadd xchg (bad) (bad) loop call push not cmpsl mov cwtl dec sub push stc xlat or mov dec js lret (bad) push (bad) sbb and arpl mov lret sub (bad) loopne sbb mov mov inc sbb fimull add out addr16 mov rcrl sub test jg lret mov mov es jno outsl inc in xor sub mov mov add dec (bad) push and aam add xor push cmpsb (bad) loop scas mov es pop cld imul movsb lods lret dec dec addr16 xchg lock lods pop roll outsl jns jns cli xchg adc mov loopne adc cmpl and (bad) js mov movb rclb sbb outsl sub sbb cmp xchg xchg mov mov mov in lahf inc pop lret out dec jge xchg and and (bad) mov pusha lcall and insl (bad) ss jo dec mov and lds je cld pop xchg mov add add int3 cmp inc pop test add mov dec aas sub dec in out mov push test out cmpsb cs xchg sbb cmp ljmp and jle and les mov or push cmpsb and scas fwait adc imul scas stos jns jnp mov into ljmp int xchg test jae and stos out sahf enter sbb inc inc rcll cmpsl inc and xor pop repz stos test into ljmp sbb movsb fmuls std hlt ss push add mov mov out pop lods mov (bad) pusha jg les xchg and insb mov adcw or xchg lods aad and and mov mov (bad) xchg jle inc (bad) cs or sub gs and shrl sbb not aaa leave mov out jb dec sub aas mov daa xchg scas incl int3 jno pop frndint pop pop push push mov testl pop pushf cmp sub andl jecxz (bad) shl mov pop jne test out fucomi push sbb mov in in popa jl dec dec mov out dec xchg (bad) enter inc roll addl cmp add outsb mov or lea sub loop push and repnz fcompl add cld inc js xor pop popa sbb scas (bad) in fs xchg gs test (bad) pop sahf loop (bad) cmp push test lret pusha pop fnstsw pop das cmp sbb and pusha dec jp xor push xor jle adc sub jmp fnsave test jb mov in cmpl dec cmp mov jns jb push cmp add iret test stos mov jle add inc fldcw push dec adc or lds jg fcom sbb mov push push je jecxz mov add jne fildll push addr16 xor and ret cmp pop sbb je sub ret (bad) add mov in pop (bad) sub cmp stc xchg pusha (bad) ss into rorb js push jg sbb cmpsb or add sbb cmp mov adc insl jb sbb negl sub mov sub (bad) cs mov fidivrl (bad) incl or sbb movsl inc inc in je inc dec leave into jns add or outsl sahf (bad) dec inc jecxz fs out xchg jb aaa and mov inc js mov les outsb adc cld imul lods xchg dec sub lea xchg clc jl pop inc pop fldl pop mov add aam dec mov mov sarb mov pop (bad) jge dec fldenv mov add cmp (bad) mov dec enter mov ja je mov or movsb jg jmp xchg fucomi loop test mov (bad) xor out mov xchg jae jl lcall (bad) ja ret divb pop jns decb push inc cmp mov loop add test shrb lret into and adc pop out jmp adc mov xchg xorl (bad) mov pop mov mov out rcr cmp dec lret mov shl and sbb in movsb push ss inc dec mov imul mov mov lret push test push es xchg sbb push movl es pop mov adcl sub push dec xchg (bad) lcall lcall fnstcw mov ljmp lret scas aas sbb ficoml arpl xor out in cld mov cmp loop mov cli popf jecxz mov lcall fldl inc out pop rolb repnz fucomp and outsl shr stos aaa mov fdivl lahf inc sub dec (bad) in mov dec and lds pop daa cli jnp es arpl pop inc mov imul push shr or fidivr rclb nop js jbe mov pop rcl push mov jl daa pop mov jno popf push or out das push and (bad) push mov addr16 sub fistpll stc cmp dec pushf loope ja cld rcr aas insb xor sbbb imul mov lcall leave add popf icebp mov sti repnz out dec enter pop xchg xchg out sti dec fs xor rolb pop adc dec jmp bound in mov push pusha jbe in mov mov mov rolb mov add sub lret add push push pop (bad) lret aam pop jbe mov repz xor loope imul nop fdivl jle jbe icebp pop iret insb mov arpl adc mov mov xor fsubrs mov sbb rcr pushf sahf push xor lea pop (bad) xchg insl cltd loope (bad) arpl dec dec cltd xchg inc aaa jae pushf hlt sbb xor mov lods sbb cli mov inc lahf imul xor add and outsl xor hlt jg cmp or mov jg fadds pop jnp call fs cmp add sahf insb add inc push cmp in std mov (bad) aaa mov xor sbb dec sub or push imul xor or sysenter adcb daa mov leave mov jae jecxz or adc push imul push or or mov dec and movsl mov mov rcrb cmc aam loopne fstpt dec pop and incl ffree dec mov sbb xchg xchg ss jns scas sbb xchg scas pop cs jne adc jo fldt lret jle jo lcall push pop in push and add idivl ljmp jns adc xchg mov mov lahf shll fmull iret pop bound jge push out arpl cld and pop lods sub in adc lock xor sbb sub scas sbb sub int mov shll add or dec cld dec mov sub lds test sub int into inc mov out sti inc cmc sub mov mov ljmp int3 mov and insl std mov aad xor in or iret nop inc (bad) movsb les cs sub mov xadd aas rorb lret insb sbb loopne icebp scas xchg aas rcrl call jl adc mov out push and inc xlat lds mov sub icebp mov lock mov push xor rcr lods out into test mov sbb int sub adc or stos test xlat mov data16 mov mov cmp je in pop (bad) in xchg adc sti pop pusha lods mov cmp movsl push test mov stc cmpsb inc fs adc lcall ficomp in orl xchg pop inc mov fbld mov inc and add out push sarl stos mov cmpsb mov pop add ret jb mov stc adc cmp lea arpl and or xchg lock add bound inc mov adc (bad) popa push in fsts (bad) mov fisubrl sbb push gs inc inc enter (bad) in outsl cs sbb adc add outsb and pop cli or in orl fnop or ljmp gs mov aaa lret fisttpl mov xchg dec arpl call inc fisttpl xor (bad) cmpsb mov and imul xchg sub int3 mov movsb stos repz xchg fcom fldenv sub add ret or push stos dec fisubr jbe (bad) or daa lods push pop adc and sbb ljmp mov hlt cmp and ret test es inc mov or movsl xor aam (bad) mul out lcall mov in and pop fstpt icebp push in (bad) push (bad) lock enter movsl rcr test insl jmp in or in and push lock inc and dec push loop stc inc ja and mov mov xor jp shlb movsl dec arpl cmc cmp jp mov (bad) mov mov cmpsl mov push lock addr16 adc push loope mov and jne mov and cmpb adc movsl aaa aam repnz ret in xchg jns jl stos xor dec ljmp imul pop and inc push stos jl and in rcrl orl hlt cmp loop test test enter pop mov mov sahf je cmp push int gs out dec mov add jbe inc pop add and orl jmp mov or scas out jno rorl je mov ljmp add sub lea pop lcall loopnew dec fucomip loope mov test into (bad) mov push inc cmc lar stos aas scas movsb jmp inc cmpsl inc pop cmp adc ds or sbb push sbb jae xchg and pop aad inc dec out jg sub jns xchg push pop cltd mov push (bad) pop fwait jecxz inc aam jp sub add out sub inc xor sbb add push rcrl mov sbb inc or outsb stc inc add and add mov pop pop rolb cmp in outsb dec pop mov stc xchg jo inc and mov dec cmp push aam sbb adc mov cvtps2pd sub in (bad) loopne sti adc push test popf jp iret pusha sub cmp sub pop adc cmp mov aad adcb xor mov sbb ljmp inc add addr16 inc ret push ret push outsb mov xchg jle pop xor cltd imul mov movsl adc ljmp push enter push enter mov sbb xchg inc arpl aam bound xchg int3 or cmc jbe sahf xlat dec cs adc out test lods (bad) mov sbb cmpsb mov xor ret icebp movsl inc neg push fwait imulb ljmp pop dec jne out sub and xor sbb mov mov cs jg mov pop mov imul and sub cmpsb nop add rcl or mov pop and jmp jp test jbe sbb lret sbb pop nop mov mov inc lcall or push test jae in cmpsl xchg jp pop es xor add jbe dec mov xchg mov sbb pop test out cmpsl inc insb stos pop scas movsl fstl stos xchg popa mov repz dec xchg bound imul subb xor pop adc mov mov iret sbb outsl jnp cmp push jne loope iret mov mov jb cs lock xchg es inc in lods add lds dec mov mov or shl jg fld1 shrl push and pop hlt push decl fsubrp out or jge bound gs bound xchg push lods clc jo mov daa pop or and sbb test movsb mov pop movsb fcomp ss add pop lret adc sbb pop cwtl jno ret inc or add mov hlt sbb iret sahf push cltd fldt mov jge in popa xchg test enter jae push xchg xchg sbb (bad) (bad) jno cmpsl (bad) scas dec ffreep test notl xchg fidivl popa or outsl int dec aas sub rcl popa jmp repnz inc inc adc jl mov push test nop cmp jl aad inc inc orb ret xor mov xchg adc lret cmp sbb push push xor pusha fsub sbb addr16 scas mov mov adc (bad) cmc mov xchg lret shrb mov dec repz (bad) je xchg test pop fwait push lahf xlat outsb inc repnz pop int mov jg clc cli int3 jns cmp movsl dec push adc fbld das xor cmp mov mov test xor xchg push cwtl nop pop or adc jnp aad out es or jg jns cmp addr16 xchg outsl add outsl lock cmc repz lahf fildll loope aad inc paddb pop sub pop in movlps (bad) loopne cmp dec fabs mov xchg lds rcl jbe std inc pop mov sub xchg adc push and mov mov push mov int3 sbb jmp dec (bad) sarl push mul push mov js xor mov mov mov test xor lods push inc mov jbe insb (bad) mov loop pop xchg sahf ja es and cmp imul pop (bad) out test repnz sbb mov lock mov pushf test mov rcl out aad xchg jle (bad) mov fldenv and mov pop sbbl mov add xchg in aad add or (bad) aad lcall pop loope das inc inc jmp cmp fcoms fwait call add push aaa push ficompl addr16 mov pop out sbb loope inc jae cmp out jno fwait dec (bad) outsl ds cmp sub mov or outsl (bad) jmp fcmovnu dec mul cmp adc add pusha add xor cmpsb jl add adc pop ret jns lret xchg sub int3 call data16 push or int3 sub notl inc dec popa pop cmp lcall test xlat mov or arpl ficompl mov or lret inc (bad) dec push pop mov lock mov fdivr inc xchg dec cli ret aad mov pop add dec (bad) push add pop cltd xorl lret xor insb jns add cmc lret (bad) push mov sub dec ljmp add popa lods jae add xor dec push cs into jb sub mov cli fmulp xchg mov outsb test and stos movsl mov xchg lcall inc dec push fs sbb mov nop xchg sbb sbb jge push xor inc bound mov fcomi dec roll inc test or jmp pop mov cmp dec lods or aas pushf or mov fucomp pop xor and inc movsl mov jp add pop add cmp ja cmc mov out cmp and sbb xor xor mov xor (bad) sub push mov jae mov (bad) cltd arpl lea jge cmp mov sbb iret mov lods sub sub push sbb mov std insb inc gs insb or das xlat fwait push lcall xlat push or jb push lea gs sub mov or pop pop jp call sub jbe xchg jnp mov inc fwait shrb fs scas push addr16 aaa lds mov movsb pop fcoms lods cmc mov xor add into mov adc xchg or repz dec hlt inc jo fstpt mov cwtl lds dec mov leave mov mov inc leave je sub xor roll dec shrl mov rorl iret sub andb sbb je jl,pn inc xor push je ret and ret sub pushf add mov dec loopne mov out pop out push int sti inc cltd cmp push imull xor add and int jnp std scas mov into add cmp xor pop adc js,pn xor and test pop (bad) xchg push jecxz pusha adc xchg addr16 xchg in dec sti lds pop ja jmp outsb imul shlb mov add cmp lret sub push idiv (bad) std or mov and jmp call push ss cs mov fdivrl lock aaa lret mov (bad) cwtl mov mov das loopne push pop pop pop mov cmp (bad) adc jecxz mov ret pop jo mov jl repnz sbbl ret mov movsb (bad) insb imul pusha or clc bound daa call (bad) gs out test test subb inc into mov or lods out dec push sbb rcr (bad) mov jne lcall xchg test incl or and test xor cmp arpl push push test test stos sub cmc dec inc inc jns pop (bad) movsl mov lods sbb sbb sbb push repz pusha js push cmp cmpsb (bad) fadd sub lock jge mov scas stc out aas mov xor mov ret push inc add bound pop xor leave push popf inc test shll lret cmpsb les sub xor mov push outsb iret fistpl inc rorl lahf mov psubb bound test dec arpl cmp or movsl push mov ja sub (bad) mov jge mov sub add xchg sbb icebp lar pusha adc cmp lods inc faddp jns jg fadd xchg cmpsb dec xlat jecxz adc imulb mov or shrb sbbl into and ds pop fdivrl pop neg (bad) mov sub test and sbb ljmp fs into push inc jp push pop lahf in or jecxz scas (bad) mov or leave push roll lods inc popf mov in cwtl (bad) fcmovnbe xchg subl inc out add lods cwtl and data16 dec insl out mov mov inc xor lea and xchg out mov loope inc (bad) mov and xchg sub (bad) addl stos xchg push inc adc mov cmp dec mov fiadd push test mov jo sahf fsubrl jns or mov pushf fildl inc mov push fwait add jb adc cmp cmp repz cmp sbb sub inc popf lods rorl loopne xchg les outsl sbb rorb dec mov and or iret and and in mov jecxz out adc test xor add outsb sbb pop and or or aaa int3 or jmp mov out call icebp sub lahf out gs fisubrl dec jne out xchg rorb inc jo out xchg xor aam mov push jbe sub xchg fs xchg mov jge sub inc ficom sbb les xchg adc int3 mov (bad) add xchg push shll stc loope or push jae pop outsb fbstp and stos pop fmull mov xor nop hlt pavgw shrl sub and test fadds add cs adc xor fild mov loope stos adc sbb pop xchg lcall mov fisubr pop mov dec (bad) mov pop cmp je and and mov jbe jae negl push lahf mov mov pop arpl sahf mov test mov jno (bad) or js fs push test add pop outsl add arpl (bad) gs mov and lds leave mov ss testb mov push jecxz jecxz test test imul dec sbb mov mov push mov cmc pushf out fimull cmpsb inc mov idivb dec sti mov pop enter jmp mov aaa jmp call icebp adc or out mov cmp sbb dec fst outsb mov outsl test (bad) jae mov pop xor mov mov shrb scas xor jle in test xchg outsb sub mov imul cwtl inc or sarb shrl mov pop scas fucomi or mov sub inc ds rorl xor xor lret adc pushl xchg cmp mov mov inc push jno xor push and leave mov clc xor (bad) negl lret out add loop clc inc xchg (bad) dec mov pop mov je,pn pushf cmp inc bound inc stos mov je ja ljmp loopne xor jo (bad) ficompl inc clc (bad) or scas jmp jecxz decl sbb sbb mov mov dec daa sbb inc inc pop sarb int push bnd ds outsl or je cmp cltd iret out adc push pop push (bad) dec call jns jle mov mov or and or mov loope pop jb (bad) repz sub xchg adc lret and popa xchg pop add and jo sub push xor nop jnp pop mov cltd sbb (bad) jp,pt hlt (bad) addr16 dec mov aaa jmp sbb sbb and mov or cmp cs loopne mov mov mov xor xchg lahf or enter les fsubs pop ror cld lods xlat and mov fisub cmc pop out in fcomps pop mov xor call pusha loopne cwtl add mov pop mov shl mull mov imul scas jl jg test mov loopne xchg mov bound mov in sub mov mov lea pop sub mov dec into pop xchg sbb rorl (bad) jp shlb sub pop lds sub and loopne cmp adc or adc xchg jecxz (bad) inc jecxz cmp push xchg adc sbb fadd mov or lcall sub das mov dec xchg aam or (bad) xchg test push sub enter push stos test add lcall jp ja leave xor cmp push in or fs cmp push mov push add adc and rcrl and repz or mov leave add (bad) jne cld fcmovnbe clc enter scas aad jo test xor adc dec imul sbbl inc add rcll sub fadds and push cmc ds jp loope inc mov push mov pop rolb mov sub lret dec push jbe dec sub test pop xchg pop mov xorb adc bts popa hlt scas xchg mov mov (bad) leave stc out cltd sbb fs xchg sahf mov sub jle add xchg push out addr16 pop push (bad) dec mov cmp ret sahf nop pop in mov sub jl jb (bad) jns enter mov sub add ds enter pop loop pop in test jno bound addr16 clc aas out imul add insb mov je daa inc xchg scas repz rolb mov addr16 inc xor ret cwtl adcb loop mov jns and fldcw bound cmp imulb jnp xlat sbb mov sarb mov aaa loopne mov int3 mov jbe jmp or mov push mov sbb pop pop push pop and inc orb in stos adc fstl ss cld inc fcomps xor out scas jge into mov mov leave push (bad) icebp or jb cmc cmp (bad) push mov cmp inc loopne cmp out sbb pop sbb xchg fwait add push das push push jecxz xlat and fwait (bad) xor neg dec inc cmp sub or inc sti cmp cmp xor xchg push fisubrl jbe jl mov addr16 lods push xor mov jns adcb sahf or xor out fs push aaa xchg dec push jae sub (bad) and cmp sub test call cmp mov ja stos mov ret or cmpsb push push lahf (bad) xlat mov (bad) lds jmp cmp int3 testl lea daa fs jb push mov loop sbb popa mov mov jl (bad) out (bad) sub or sbb movsb xchg dec jp cli mov loop cli pop lock lret out mov in mov call repz jo inc lret test xor mov out mov nop xchg pop xchg sbb pop out xchg (bad) aaa call push fwait xchg es fldl mov popf insl dec inc xchg add daa or int3 dec add (bad) mov sbb mov ss mov pop or out xchg fbld sub popf mov inc dec lcall sbb fsubrp adc (bad) push mov mov cmpsb pop movsl ret mov xor popa cmp add mov mov lods and stc popf mov push mov sub xor and dec negl cld ja xchg adc and mov pop stos or in and cmp or aaa push or pop not das adc or xlat (bad) aam pusha or (bad) xor mov cmp push das xchg (bad) icebp xchg cld cli popa (bad) pop clc test mov or jge jne aaa (bad) pop lcall hlt xchg out dec push aaa inc xchg pop call mov fcoms fs jbe int sub cmp std pop outsb dec cmp inc xchg ss call xchg sbb test xchg lret insb test push add not dec mov and fwait push inc sub notb mov push inc je jnp rorl stos dec xchg push pop movsb xor fstps test or lcall lahf into jbe sub lods je adc add jae or jp shrl cmp fcomps cmp and (bad) sub jae mov fcomip movups lret or lods mov xchg popf mov cmp hlt mov and out insb into movsl adc fucomp (bad) (bad) inc imul mov lock lea test clc and dec add int3 movsl rolb mov jle ficomp or and sub inc ljmp (bad) stos push mov into addr16 andb ljmp nop sub in sbb pusha out inc fimul loop fbstp js scas inc fcomip and push loop (bad) push negl dec sub mov lret shl and fstpt jno sarl mov jg xchg shl jmp lret out mov dec mov push xchg clc and jnp dec xchg inc push icebp fs fwait arpl xchg inc xlat cmp sbb pop insl inc push add lods xchg mov mov adc fcmove js jl mov cwtl adc or nop call inc jmp or int ljmp mov imul cmp (bad) aad and adc je add mov sbbl cs jnp push mov pop jbe mov sbb cld pusha xchg pop push lcall (bad) dec adc add inc ret dec xchg push dec daa (bad) mov pop or jmp das daa gs jb add push push pop mov mov pusha pushf scas movsb sbb outsl aam pop iret mov aad mov ja jmp mov sti (bad) stc gs rcrb ror cs test sbb adcl push cmp pop or fdivl jns ss sar add je jle insl cld ljmp push pop jmp jp pop push fcom mov aad in adc lea mov sahf frstor inc sbbb inc and fidivr adc sahf out lods xor adc lods insl cmp jge (bad) sub mov imul pop jg lret (bad) xor ljmp scas ficompl js clc jae push clc jne xor repnz mov movl dec or mov push je jae mov scas xchg or dec lret and movsb out sbb fwait stos int (bad) adc dec pop jbe lods mov (bad) xchg lods adc cwtl mov sbb shrb rep inc mov outsl mov add cmp mov int int3 xchg mov push cmp aaa mov icebp push jle mov loop std mov sub xor mov lods ja ldmxcsr push (bad) jge stc adc mov sbb adc imul adc push pop dec or or xlat sbb test int push loopne cmp adc mov adc negb inc inc dec lcall cmpsl push in lods pop xlat lock inc add stc push scas insl jo mov sub incb sahf lods daa xor dec sbb jmp lods push movsl les mov cmp sbb jl loopne movsl cmpsl imulb aam out gs jecxz jno cmp adc sti outsl pushf jmp ja xor loopne lahf data16 popf lea es mov jne sbb mov jo push jl aad mov pop enter (bad) icebp imul iret mov push inc sub bound mov ja dec pop push push jmp nop lock and push bound add mov mov mov iret mov cmc cmp mov adc notb push cmp (bad) xor mov aaa hlt mov orl jecxz adc out xor pop push mov xchg jmp xor pop or and sub incb into pop je fsubrp xchg adc sbb imul and or mov adc fistp inc (bad) dec pop xor or andb xchg jmp lock mov sahf ret pop push inc (bad) cmc fwait cwtl jo adcb add dec sbb mov cmp sti fs lods psubq add cmc fcmovne movsl cmpsl mov fwait les call imul shll inc (bad) arpl or in mov in sub and out inc lret add outsb or pushf lds ja fbstp pop mov push mov push test and cmp xchg ret jno aam loope aam repnz mov adc repz hlt cmp repnz dec aas imul (bad) (bad) or mov cwtl mov clc inc test popf jle (bad) pusha jg (bad) cli pop jb (bad) xlat jge inc ret mov mov jnp fldenv jnp insl mov and push in int3 mov xchg mov shlb insl inc dec (bad) jmp sbb add inc mov in fistpl cwtd xchg lods lret lea adc jecxz mov (bad) (bad) pop insb lock or push dec pop aaa fsubrp js aam mov out push ss pop jbe test inc loop div cmc sbbl xor cwtl pop out dec jb ss aas sub dec or addr16 icebp js mov cmpsl mov es loop icebp mov pop push mov outsb mov stc ffreep mov (bad) mov fisubl shl or cwtl inc repnz sbb lcall and xchg adc imul or roll (bad) jae dec cmp pop jo adc add enter leave xor mov push xor hlt cmp imul out add cld or stos mov stos (bad) mov push jae sbb loop adc inc scas dec and cmp divb jmp pop push mov add mov sbb test or clc dec cmp dec insb mov fiadd mov adc xchg xchg jge mov sarl mov jb xchg int cmp push lret rcl dec adcl lds fbld pop adc mov inc cmp pop mov push xor repz icebp mov adc mov jbe mov mov arpl xchg enter xor (bad) dec pop frstor or xchg fldenv jno sub adc ljmp popa popf mov dec and outsl mov into repz pusha in mov pop stos dec mov push orl sub pushf pop pop push jmp int test jo and leavew lcall out mov adc xchg test lods jb lahf adc add mov inc pop jecxz das addr16 inc in dec loopne fcomp pusha gs push mov dec lock xor dec xor xor push cli jns das lods dec test movsb xor lock test pop mov rorl jmp mov add fwait pop lea (bad) adc add sub es ret aas lods inc (bad) rolb push cmp lcall dec dec rcll sbb jnp sti aas in adc jge mov xchg addb stos bswap xor imul adc mov mov cmpsb inc push (bad) shld rcrl in adc sbb sarb add mov arpl mov jns pop push or mov cmpsb hlt aad pusha in mov jge clc or pop pop add mov inc (bad) imul lidtl jl xchg push clc xor sbbb lcall negl lret mov xor push cmp mov in fldl jae dec cmp test fnstsw dec push pop test sub pop sbb aam sub ror adc cmp or dec mov add out aas loopne ret push leave scas stc (bad) sub insb sti outsl test and movsb adc mov and jg rolb push (bad) dec sahf bound fdivr fs cld int push pop cli jge out in movsb jl or inc sti les cltd adc jno sbb fisubl mov sahf into sub call int push mov js mov dec mov repz test inc jle mov bound adc push andb add and mov lock lret cmp inc imul and sbb xchg xor movsb inc push pop (bad) sbb cmp loopne or push into pop inc or and gs setge inc insb arpl stos adc lds insl push adc cmp push push mov lea xor xor std mov xchg sahf lret add adc mov fs stos and into es mov pop (bad) fsubr imul out sbb les xor xchg dec pushf jae inc imul iret aam shr addr16 (bad) xor (bad) cmp lods push sbb outsb or loop jmp addr16 jmp or xor jb insb scas (bad) in in mov inc push sahf (bad) divl inc nop mov xor frstor jl das dec dec cli jle lret rclb and sbb adc lock jns mov insb xchg test nop push test clc inc xchg mov in xor sbb inc add push mov sub mov lds out pop xlat and (bad) pop leave outsl cwtl and test pop push enter xchg ret xchg popf jl shlb mov sbb orb sub stc mov sbb sbb into leave stc test (bad) cli dec ret out mov or repz dec shrl xchg pop fisttp rclb adc setge fisttpl cmp and mov xchg in jo push or mov pop add fcompl push dec je das iret cmpsl les fdivs icebp cmpsl inc subl notl push push sbb addb dec cwtl je push rolb add (bad) pop push icebp fidiv lahf cld negb dec jle out sbb sub (bad) je push xchg mov ja pop mov mov lock cs sbb out mov repz arpl sub subl mov sarl mov fdivr data16 push outsb jbe pop mov inc rclw (bad) sahf add iret into insb dec adc loopne ja cli pushf mov sub jle mov jle incb push xlat mov sub scas adc push sbb repz or jmp out cmp out fidivrl sbb rorl fisub in lahf sub push test mov xchg xor bnd mov sub sub push mov mov jno ja adc dec adc fidivl xor inc inc ja (bad) lcall lret sahf popf sbb mov pop xchg xchg cwtl xlat inc std daa (bad) loopne push les lret fisub mov (bad) add (bad) jae mov jmp push fnsetpm(287 pop (bad) xchg push xor jp cmpsl stos loop fucomip in pop gs xor pop adc mov jl ljmp push cmp js sub lds ret fistpll inc xchg ret inc addl fadds inc and adc pop std mov mov and andl js stc loope (bad) mov out mov lea cmp sbb adc mov cmpsb jp xor ror (bad) les jmp add mov push mov pop and nop jg sub test mov add dec cs icebp (bad) sbb cwtl sub mov (bad) pushfw iret lcall adc cwtl jge sub pop (bad) cmp or adc dec jmp mov and xchg jge repnz bound dec (bad) aaa gs nop stos fisubr jno hlt pusha push pop add cmpsl mov dec jns xor js dec mov in mov js out mov into (bad) cmc add dec pushf mov outsb movsl cmp fs push xchg aad push aas jo js out jmp jb xlat xor ljmp shrb adc dec ss lea test ror sub (bad) or push push jnp js mov outsb test mov test out or popf mulb (bad) pop mov pop out and mov mov jle test mov bound mov xor push into sbb inc dec loopne imul push dec cmp dec cmp inc aad xchg sub adc sahf loop push jmp shlb (bad) rorb inc bound and lahf insb rol sbb adc add mov mov clc lcall sbb xchg ret pop andb or rorb out jle scas inc rcrl sbb xor lods in xor jne xor push into insb (bad) jmp pop add sarl add xor push loopne lds stos lock mov roll movsl cs mov stos jns mov sbb rclb movb lds mov xor std ds ret adc pop inc xor pop (bad) lahf cmp fwait mov mov dec and or popf and sub repz push inc push sub popa and stos xor xor and ljmp outsb inc into or push jg xchg bound mov add mov sbb xor push xor out dec in cmp shrl cwtl adc xchg cmpsb lret jns adc and stc cs pop mov pop dec add cltd mov lret sub push cs idivb ja sbb test (bad) stmxcsr das xchg push mov mov stc adcb fwait push push push pop in sub test mov push sbb into out sti orl divb dec into mov sahf gs adc icebp xor addb int sub popw fldcw std push clc loop ret lret mov inc mov sub iret pusha jno cwtl aad es icebp in and and leave ret push adc push mov inc (bad) add fldl push mov sbb ret adc inc dec xor push sbb xchg das es mov pop cmpsb lock enter lods pushf loop or xor xlat comiss hlt jge jp ljmp xchg movsb faddl jno inc aas adc jae int3 icebp cmp in xchg (bad) imul dec cmp pop bound jae cmp pop popa jg addr16 into xchg stc push add ja dec stos mov insl xlat jmp mov stc sbb push (bad) mov or arpl pop call mov daa mov loopne xchg cwtl and jno movsl cvtps2pd aas mov clc (bad) mul movsb test bound sbb mov push call popa pop js xchg pop shll xchg mov lock lea data16 repnz fdivrs (bad) or mov push shld mov cwtl mov xchg mov pop cltd cmc cmp push add xor ret mov adc cmc push push fiaddl ss push mov lods jl ljmp dec mov dec jae (bad) shlb sub bound pop imul outsl ficomp xchg pop jl push add add aas xchg cld mov inc push loopne aam adc ja popa out fwait pop push push lahf mov pop mov mov xchg dec xchg jecxz jmp xchg sbb fsubr sub jo idiv insl pop push mov mov xchg sbb pop push jns adc mov inc fnstenv fwait subb xlat adc cmc push call aas adc je cld mov and rclb push mov nop dec shrl jno aam sbb push xchg xorb ss and and cli aaa or push cld jl mov pushf rclb jo adc popf test inc data16 mov (bad) loopne xchg cs testl int mov xor add cltd dec sub (bad) dec lods mov in xchg xchg jb (bad) adc repz in push aas cwtl push or (bad) shrl jmp sbb sbb les xorl (bad) fnsave in and imul mov lret insl shrl pop pop pop clc das outsb mov repz mov mov loope aad std andps (bad) mov (bad) cld mov jle gs ficoml inc mov leave inc pusha xor mov in mov and inc movsl ret imulb loopne xor fildl data16 sarb (bad) push test push pushf adc mov (bad) shrb mov aas orb cmp leave pop (bad) or or or into stos xchg clc int3 xchg xchg fistl mov imul xlat sahf mov xlat jle scas mov xor mov jg sub mov push mov fs mov out dec test fdivrs (bad) shll das in pop lahf (bad) ror sub into inc dec clc fstpl adc and push les push ja stos lahf and xchg insl bound movsl dec jecxz cmp loopne jae pop movsl popf sbb mov adc div sub push and (bad) mov jns mov mov in xlat movsb mov dec cmpsb jg or fwait pushf mov pop lahf ret in (bad) jge push push mov add mov test movsb sub rolb fs aas xor (bad) inc and sub outsb dec (bad) dec mov sarb cs jp or into sarb jp push jbe pop mov pushf roll dec lods in jo sub out mov push sbb mov jns xlat (bad) push cmova or cmovne mov fiaddl fiadd lret ficom sub sbb mov into iret sub jl test into pusha pop outsl in push ja insb (bad) mov int dec mov movsl sbb push cltd lock cmpsb test cltd test icebp and dec pavgw push test inc test xor push mov and outsl lds inc adc out stc cli jno movsb es es mov sahf jge pop movsb jp pop mov dec (bad) mov inc or inc (bad) pop out clc cmp pop movsb xchg adc adc daa pop out xchg xchg dec into push pop test les xchg push fidivr js outsb aas call (bad) loopne or inc fdiv inc jle pop add inc insl jbe sahf xchg adc adc mov dec inc xchg push and (bad) out push jmp and cmp outsl mov pushf mulb cwtl xchg xchg fwait je fcomps mov lock call mov add js inc cmp mov xchg (bad) arpl cmc test xchg inc stc adc cwtl pop aaa pop rorb dec lcall enter push push add in xor iret sbb jge lret and mov imul inc xchg sub mov (bad) mov mov xchg xor adc dec ds jbe adc mov rclb out sbb repnz jns ficoml pop hlt and arpl inc dec clc inc sbb cmp iret out (bad) js pop mov adc xchg or xor add add lret cs push (bad) (bad) push jo dec push ds jl mov aas inc clc cmp xchg mov ret stos loope cmp or add les cwtl push pop cmp mov rcrl xor cmp rorb push push test fcmovne pop outsb dec cmp push jnp push bound int3 and pop xchg adc lods jmp push cmp inc jecxz ret mov xor ret push push jp daa xor pop mov jne pop sub push (bad) push add and in popf dec scas enter push or mov jnp int3 or addr16 aam sbb stos stos enter mov inc jmp repz adcl (bad) lret push cwtl jns clc adc mov pop insl jl xor adc lods out loop mov mov lret push rclb sub push shll xor (bad) outsb dec mov xor and push cwtl ljmp (bad) or and push divl popa loope jns repz shrl mov cmp sarl push adc mov inc pop sbb imul (bad) mov (bad) call xchg pusha inc bound jg out cmpsl cmpl push pop cmp sahf not mov aaa jecxz adc out sub xor xchg psllw lret jp cmpsb ds push ss sub sar scas fwait add pop lods (bad) ds jns inc ja (bad) mov lock imul inc adc sti sbb mov dec sbb call or mov sub jecxz dec cmc mov adc iret test push push mov push and ficompl mov bswap mov je sbb sbb stos stc or add pop and lds enter pop call mov ja ljmp mov inc dec ja jnp mov mov cld push cmp jae cmp stc call scas push mov lret repz mov (bad) and aas lea mov dec imul push movsl mov push adc testl mov adc cmp mov fcoml cli fistp jecxz dec jl sbb pop sbb xchg ljmp test les push (bad) test imul jnp mov sub fdivl movsb xor lock add mov jmp movntq out lcall ja xchg aad shr add outsb rolb mov insl xchg pop pop adc pop test xchg testl dec jns sarl adc test loope (bad) cs inc sbb mov pop fadds sbb push sub scas lcall dec mov scas notb nop add lods test mov das sbb mov jb scas jge mov (bad) test pop xor sbb fwait adc insb mov loopne flds pop or cmpsb add and mov lcall and (bad) repz leave insl jnp xchg sti fadd pop inc dec inc subl or push inc push mov sub inc add sub add jle jmp leave adc cmpsb (bad) out cmp std stos in inc fisubl push (bad) hlt add mov lret jbe xchg mov in and and pop cmp in mov pop (bad) (bad) aad mov (bad) cli mov push and decb inc cmc adc enter pusha dec ds repnz imul aam cmpl pop fcmovb xor movsl loop mov mov jbe push and dec lods push data16 dec stos pusha aas cmp jmp mov adc jb mov mov rorl mov movsl cmpsb or je push leave and mov outsl pop rcl dec inc call jo cltd fildl fsubrs push sub loopne add jp (bad) inc repz jl push xchg int jno cmp movl dec fnop cmp ljmp out sub in mov lds push mov ret xor inc test push rolb subl inc fadds jno inc xchg (bad) xor and or fs popa add cmp call in mov icebp stos mov pop rol jle pop xchg (bad) aas mov addr16 sti leave push mov data16 cmp add push add mov out std in cmp xchg out xor and sbb into fcoml sub ja sub pop ljmpw sbb cmp pop xchg cwtl insl jns mov (bad) cmpsl push mov mov aam fisttpll cmp push lfs add pop pop jmp jp adc std (bad) pop or ja test mov inc (bad) je stos push mov sub xchg leave dec (bad) out sbb sahf add xchg int3 imul das add sbb sbb pop call sub pop sub pop out dec jecxz insb arpl test aam imul inc jnp movsb push mov mov mov mov (bad) lods ja mov jp or inc stos loope pop inc int in or out imul mov rorb add scas cmp sub mov sub or ror dec adc (bad) in pop cld pusha dec cmp add stos fwait add xchg jns std jp mov inc cmp out sub cmpsl mov stc orb cwtl adc ret lahf stos mov cmp das lahf imul addr16 push xor xchg push dec ret and mov scas xchg inc fldl mov jns cmp adc push lret lret adc aas push frstor lahf repnz mov (bad) call sbb inc sub mull mov adc lock cld scas sbb ds movl rcrl hlt clc jne jg idivl and test or sahf jle xchg sti push sbb mov test test add fsub clc insl shlb mov inc fadds dec imul or or aaa mov cmc in fdivl stos (bad) sbb xchg xchg adc gs xlat xchg fist pop int3 rclb cwtl repz inc rol xchg out out xchg (bad) jo fnstsw mov push outsl mov data16 add loopne addr16 addr16 and mov adc aas mov call xchg sub outsl xor push hlt mov mov mov and add and ds push fcoms mov dec xor mov inc lcall je iret sbb (bad) shll jnp scas jge mov cmc mov pop and sbb arpl daa cmp cwtl out cmp mov cmp sub enter and nop cli push and fwait xchg or xchg std sti or jg loop mov sub or repz int pop enter jle sbb not stos cltd iret imul leave mov out and lods ret mov or int3 punpcklbw or and or mov sahf cmp ja loope in ds icebp loope aam sahf icebp pop fs pop cmp add insb mov test (bad) movsl inc ss stos mov test lcall xor xchg push stos and or lods adc jnp int ljmp les popf int (bad) cmp lock sti jecxz cmp pop stos xchg pop in pop sbb jns loope subb roll pop and jmp lcall mov and daa sbb je jl arpl sarl mov icebp dec nop cmp aas pop xchg push mov movsl call cmc clc mov (bad) notl jmp push std cmp mov ss pop cmp (bad) push xor stos inc push test push push test rcrb mov push (bad) fdivs aaa aam pusha stos (bad) mov cmp inc add nop sbb aad ret int and add addr16 (bad) insl dec mov enter jbe mov int3 fdivs sub inc xchg loope (bad) jl gs xor mov popa stos cmc aad inc push repnz lret jge test pop std xchg test push push adc stos orb inc cmp jne cmp inc insl xor out adc call dec mov outsb loop sbb or jno jne or and nop cmpsl fistp add ja aad cs pop fnstcw lods in (bad) (bad) mov and mov in jge jno fstps mov mov into jno add shlb dec jns fisubl mov xchg enter out jge int icebp lock cwtl xlat mov pop sbb jmp into lea pop sbb and xor aaa fidivrl xchg data16 inc std iret popa cld sub xor inc aas adc lcall ds call cmpb fsts dec test fdivl adc pop lahf or xchg nop rcll outsb push test ret dec push mov dec cmp add jae jp push adc cltd xchg xor mov lock in add mov xor adc jle sbb dec pop test jmp (bad) into push xchg adc rorb sarb sar lock or aaa in cmp lods pusha lret scas test pop inc pop lods lock sbb out sbb cmp push sbbb cmp jp out roll lret data16 addr16 iret fxch lock adc ljmp add clc inc sub xchg insl mov mov int lahf dec and xlat call shrb out fimul pop xchg int3 pusha (bad) or xor pop mov jle test xchg xor mov pop xlat fabs pop xor pop fwait add jbe js pop negl sbb in jnp dec sub fwait mov addr16 jnp cmpsb mov push jg pop and out pop sub orb daa adc push lret cmc (bad) pushf ljmp scas lock inc mov (bad) and pop sub repz jmp repnz outsb jecxz fwait cltd pop (bad) fisub aas std cmpsl ss and push push xor push inc repz sbb mov lret xor xchg ja dec sub clc sbb mov pop push fisttp popf iret dec ficom daa aam test int3 push bound fsubrs movsl add shll push pop out lret mov add ljmp imul mov xchg js (bad) icebp add in push dec add sahf jle jg leave xor xchg inc xchg jno mov fldenv (bad) rcll push js xchg fwait sub fdivl xor push (bad) push lods fist and fldenvs adc inc cmp cmp push inc negl js aas sbbl loope int (bad) leave sbb imul and rcr mov out jo lret enter test pushf lods sbb sbb pop push testb stos insb mov mov mov jecxz,pn xchg mov dec clc and add mov stc lea jge cmpsl mov fstps stos leave sub imul sub xor dec add pop stos (bad) pop xchg pop fs cmpsl rcr pop and inc push xor or xor mov cmc cmp fcomp scas adc loope,pt adc mov fwait test mov bound xchg dec cmp mov xchg inc (bad) nop in int push jno in inc stos dec mov mov mov jg or jnp jmp enter jns lret lahf idiv mov into jecxz push lcall and lret outsl or stc push fs daa add dec jbe decl scas iret and sub cltd mov and lcall mov push push jns or rorl (bad) icebp cs jle lds test les pop dec add xor dec stos lock xchg stc rclb add das inc xor or jne test mov xchg ds stc push gs inc or inc mov push and insl and fsubrl fcoml inc lcall mov es sub aad sbb dec out in xchg in mov mov stos aam fldenv push xchg aad or mov dec aad rcrl je ficoml cmpsl mov and sbb push add into push (bad) mov pop cld mov jnp iret lods outsb mov adc outsl js je sub adcl and das fnop push add cmp pop or ret hlt xchg xor xchg int3 loop mov (bad) jb arpl pop jle mov rolb pop sub add adc int3 (bad) adc push cmp int3 xchg push jbe popf add mov loope push mov mov mov inc mov push add mov pop dec dec int3 data16 fstpt jnp cmp or mov pop repz dec or test xchg movsb stos cld cld (bad) mov xor pop xor in mov xor cltd lds out sbb (bad) hlt in mov pop imul loop push dec fwait or mov cmpsl push das push neg xchg push add fsts daa jno fisttp test lock in jp repnz adc lahf push push xchg data16 call xor push cmp mov push test lret sbb or sbb inc sub sub inc fwait xchg xchg cmpsl or add push adc daa mov nop xchg xorl shll push nop mov imull sbb rorl je subb pop ficompl xchg aam and jb sbb cmp daa and loope inc aas scas mov (bad) lret ljmp out out stos in or mov mov xchg inc sbb lods jle pop cmpsl or sbb xlat sbb js mov dec adc ja test (bad) jmp insb mov xchg lret xor pop mov push rolb jecxz add lock mov xchg cmp sub xor aam pop mov (bad) call daa incb push mov leave push adc mov mov pushf les xor pop jle and push or mov jae xchg xor iret mov hlt (bad) rorb (bad) into dec mov add mov sbb lock or adc sti stos jb mov xchg sbb xchg aas je or mov inc mov test rol mov lds and push icebp sbb add andl add lcall jae std hlt xor stos sbb fstpl insb test jbe jns inc lcall mov ret push stc pop xchg outsl rol (bad) aas or mov sbb sub sub shll sti outsl lods push cltd lahf mov and cmpsl xchg sub fistpl pop and and mov cmp and fwait gs hlt inc mov jmp or cmp jb jbe add push dec jl ss imul in wrmsr mov mov movsl add push pop outsb shr pop push inc sti lret inc sbb call jo aas push xlat cmpsl mov int3 adc pop rcrl xor ja mov ret pop inc fistp lods adc and jnp jnp (bad) (bad) shlb hlt mov mov mov jns nop dec pop push sub cmp mov in repz int jns adc and cli mov icebp je pop dec ss mov in pop rclb xchg cmpsb add xor xor jo push lret (bad) notb and mov sub (bad) repz and cmp inc or test pushf or xchg out mov out dec or pop test gs aad clc repz and mov push hlt xchg and inc cmpsl mov test ss clc push js inc adc xor xchg inc fsubl xchg out cmp sbb std mov pop adc cmp pop mov fsubrl inc push push aam loopne push pop mov inc cmc adcl roll bound leave in test mov or lcall cmp in cltd shlb or fisttpl inc sub stc std lcall stc clc outsl push loop sub dec clc aaa mov (bad) mov xchg add ja dec dec dec pop jmp mov inc push inc mov mov int3 pop dec add jb lcall je push stos nop pop stos out mov mov inc mov call sub mov movsl and aam push inc push lret jbe std push sub and movsl xor aad sub push (bad) mov dec (bad) cltd inc or mov (bad) mov (bad) lds cld mov pop sbb imul pusha adc aas sahf xlat lcall repz outsb jnp or ficoml dec popa (bad) and xor fimul or fs orl jno rcrb arpl stc imul add rcll das cli xor leave fsubrl (bad) stc cmpsb mov aad inc dec xchg das dec cmp dec ja adc (bad) idivb cli (bad) mov jae jb test mov push arpl repnz cmp sbb xchg jp arpl xchg ljmp gs movsl sbb scas inc fwait mov mov cmpsb mov xor adc cltd pop xchg dec negb sbb xor fcomip mov jo mov jecxz cmc mov pop (bad) xor sub imul out test fnstsw xchg lock and mov stc jae jo aad jecxz jp mov into dec nop inc jo (bad) fldcw push loope insb jb xchg pop xor or mov cli pop jne pop (bad) mov inc arpl fcomp xor nop pop (bad) mov imul stos jl sbb adc pop xor loope pop in jns roll dec outsb pop in loope push cmc ss aad cmpsl mov lcall and into mov mov (bad) adc in fnstsw test adc xlat push xchg push outsb jbe mov mov push out add push push mov negb test xchg sbb js ds mov daa jge xchg subl in (bad) scas sti std (bad) aam pusha pop aaa cmc cmp inc sbb mov xchg cmp pop and aas jle cltd pop addr16 adc inc clc shrb mov pushf push mov xlat and out test xchg push jo aad xchg adc aas fsubl daa pushf cmp insb mov into jb mov push bound xchg shll stc jo cmpsb inc sarb pop jbe repz push fwait sbb or jecxz das lea aad cmp cmp test call mov dec mov (bad) out jle lret jp bound mov es cmp ret mov push loopne and dec sub call pop insb in data16 add sbb sarb xchg mov mov aas or das out pop inc and xchg stos push in dec pop lods adc mov jmp (bad) andl dec xchg xchg das les dec adc push mov jle mov jno mov sbb jmp and adc adc int3 and (bad) cld xchg mov test push cmp (bad) pop stc cwtl xor and cld mov out hlt ljmp mov or pop mov sahf lds lods mov icebp push xor ret or test shlb cmp push cmp js int3 call jge mov jbe,pt lret call decb andl adc mov mov inc insb inc mov jbe pusha add mov (bad) mov mov arpl pop and test es adc inc iret inc (bad) lods enter and xchg jmp lcall and jle push push cmc xchg cmpsl (bad) jns dec or cli les aam adc stos iret cmp xchg repz mov sbb pop in inc dec (bad) arpl xor stos fstl mov add insb inc lret sbb pushl es (bad) jmp xor and icebp push cmp or dec xor jle or fwait (bad) nop jle pop cmp xor pop lret adc addr16 in cltd push insb sbb or pop clc jecxz lcall rolb fldenv ret imul adc sub mov push lahf mov xor sahf jno pop aas repz lcall push mov fsts dec push test mov cmp lock lret lods sub or inc jbe leave sbb mov roll and xchg pop jno imul adc test out mov mov mov adc dec subl subps je cli or and lahf mov lea inc test push xchg push lret mov jnp sbb out lret into sbb sub xor xchg or cmp gs in js mov mov (bad) mov cld das je jb and push dec bound rcrl cltd push arpl repnz xor vsubss adc sbb lods adc push mov xchg fprem test push dec adc (bad) je ja cmc or out jl (bad) mov ljmp (bad) adc test cwtl sbb sbb fdivr mov mov push subl jno out fnstsw es cmp push sub dec loope (bad) sub je cmp mov or into cwtl ljmp ret cmpsl xchg fisubr icebp cltd lret insb mov dec inc push loope and movsl mov jecxz int3 jle jg mov mov push mov test cmp mov mov push mov outsb cltd sub xor ds cmp push push mov sub popf adc js dec and push and jb popf sub int test xor pop cmpsl mov test mov push (bad) mov test out insl invd add out push mov mov adc lcall ret sti lds cmp and aaa insl lahf jno add lea lods std test xchg push mov fst pop imul mov lods js pop pop fisttp push jae cmp cmpsb mov inc jno pusha (bad) test push xchg add sub and jle lahf ss das pop mov mov cmpsl ljmp sub xor (bad) fs lret imul icebp insl push cli stos mov and mov jnp jl mov cmp inc jg arpl mov je loop xchg cmp or add push cs scas sbb or mov inc mov pop ret movntq out roll fstpl push xor popf add out testl xor out pop lret fnsave insl and fistpll inc mov sbb movsl popa stc dec push adc mov mov pop jge mov ret stc cli pop pop xor ret mov mov cmp lods sti pop or or aam insl or push fs call pushf adc sub lods inc addr16 rcrl jecxz (bad) notl imul rcrl xor rcrl adc inc add cli int adc lods (bad) aam call xor cwtl jp dec data16 into cmpsb inc in push sub rcll cltd adcl popa test pusha sub dec pusha daa cmpsl hlt cld dec mov mov pop insl aad les fistpl xchg xchg sahf insb int or mov push popa fidivl loope and pop mov adc inc fs cmp mov enter push xchg jno repnz fldenv enter push dec inc sbbl pop stos mov nop or xor add lret mov mov ss popf jmp (bad) idivb sub mov push lds jmp push jb xchg mov fimul or dec inc int pop pushf cs test sbb js fdivs cld push popa sahf and jle ret popa cwtl dec push xchg fnclex and (bad) jle inc notb ficompl adc mov xor mov dec and push jae mov fiaddl das fdivrp mov xor mov in sbb mov cmpl or test xorl push lods (bad) ret mov das sub jl les adc jbe shrb cs and sub push cmp test adc adc jge rorl mov aam les push jg bound adcl mov daa lret stos dec mov sub test mov scas or mov arpl cmp int dec xchg test cmpsl jle (bad) div out test cmp push push push or lods jb outsl inc out pop sbb mov and jmp and jp and add ja pop push outsb aaa pop daa adc mov sub mov pop push cmp mov lods xchg pop xor imul jnp jle inc das jne mov mov leave mov xchg dec out mov add ljmp call cmp outsb cmp repnz cmp (bad) lret mov leave aas into and jb xor lds (bad) fisttpll mov lods outsb fisub fidiv xor out cwtl mov sbb stos hlt bound (bad) mov leave ja push mov clc popf sub pop dec fimull lds pop mov shufps push push movb push rclb ret push lods mov pop fidiv in adc outsb loop mov loope enter mov jge sbb mov icebp push cmp xchg and push pop xchg fidivl jns xlat lahf (bad) aas mov les stos scas (bad) inc push jle mov sub mov sbb add add push enter mov jne sbb and sub sbb sub mov mov es mov mov insb mov jb adc xor inc bound sub xchg cs mov jne cmc lret adc sti in or sub xchg in popf jg out icebp out inc test popf int3 les movsb push adc sbb pop pop xor clc lock ljmp pushf xchg mov mov sbb sbb inc add jbe repnz rcr mov jne rorl loopne loop cmpl jmp cs outsb lds addl mov push or pop call sbb and jns idiv pop xchg push gs push mov stos dec sub es or pusha popf jmp dec cmp mov pusha aas mov jg (bad) notb push outsl cmp adc inc xor les (bad) mov repz lahf sub inc xchg daa out repz cmc pusha mov cmp xchg scas mov dec roll pop loope jl jne pop cmp dec pop xchg mov cli xor xchg adc adc inc arpl or clc test fucomi xor push push dec mov sbb aas mov add addb (bad) jmp fisttpl and in loopne decl mov inc xchg lret mov jp jge sub js jle scas jnp inc addr16 sbb push xor mov fldenv inc pop mov sub pop ficoml xchg sbb dec mov iret rol repnz sbb or inc or or mov xlat sbb out push sbb xchg push ja cmp (bad) mov daa mov jmp cmp dec inc and mov aaa adc in iret push sub jae inc cld pop dec pusha es cmp enter test push mov loop mov (bad) ret (bad) movb (bad) jge add mov psubusw jecxz pop lret mov stos test mov xor mov dec xor jecxz cmp arpl cmc bound outsb xchg push sbb pop (bad) lea inc push add test cmc mov lds or cli jnp lret lock imul and rcrl jl push adc xchg stc inc fcoml ds dec adc ljmp jno push pop imul insl mov mov loopne pop pop cld loopne subl mov jge cmp or mov out icebp ftst (bad) lds mov int3 nop jo sbb push pop or jb jmp std aaa dec pop leave loope xor sahf jl gs xchg scas push jbe testb lahf xchg mov int or fistpll imulb enter je dec sbb rolb aaa pop push jle mov test inc cli push dec fadds adc sarl cmp jns push push int int3 sub or jbe and scas mov ss mov incl out dec xchg mov xor dec cld lret clc push mov add pop (bad) insb or push lea les jp mov repnz inc jbe cmp mov popa addl movsl imul outsb dec push xchg xor xchg fstl movsb (bad) xlat rorb dec xor add fdivs arpl aaa in fcoms rcrl js out xlat in fsts pop aad xor out xchg insb adc and popf imul or aas cmp mov xchg push test popa adc push xchg dec nop or das mov pop shr btr imul add andl adc lods cwtl movsb jle int pop fs inc outsl pop bound inc sbb fist jmp scas (bad) xadd jno or insb inc sahf insb cmp cld std sti call out sub push lcall dec jmp fisubrl imul cld fucomip das inc (bad) imul (bad) jbe (bad) mov jne add (bad) jmp popa loop (bad) and adc push or jb cwtl xor iret pop rclb mov xchg fsub xlat mov push pop cmp jae push pmaddwd (bad) ficompl pop loop and mov dec add mov jecxz test xchg sub jle std sub in xor and push mov (bad) ds test (bad) dec ljmp out sarl cmp inc lods push pop or movsb adc xchg cwtl insb inc lcall sub das adc imul dec dec push inc lds leave (bad) mov outsl pop push cmpsb jg jp test jbe mov insb mov ds fnclex jbe cli cmp push mov push sub push (bad) movsl push out in popf cmp mov (bad) call enter (bad) pop adc mov xchg push pop pop sbb es dec je dec pop int3 sbb inc mov dec out imul iret fmuls inc in ds cmc sbb pop push rcrb shl ljmp or cs out jmp lret adc out (bad) cmp lcall pop add dec xchg cmp jge mov xchg sub inc fimull adc in daa (bad) xor mov mov ja dec lret notb jae dec xchg lret cmpsb cmpl xchg push mov (bad) sarb inc xchg ss int3 fld out lods adc jne adc pop jo sub xchg adc jle inc adc enter cwtl inc fisub fldcw add mov rorl xchg or imul fs out outsl mov xor test jmp add ret je and sbbl cmp inc (bad) lods out mov lret sarb cmp add add xchg ljmp adc cmp (bad) inc and sbb popa loop (bad) into sbb push scas and lahf ds mov push adc (bad) xchg xlat jnp lock fwait popf (bad) lock stc not mov mov xlat jge (bad) and pop mov loopne shrl dec ret xchg or mov lock test (bad) out out or inc xor daa cmpsl push aas mov hlt xchg fnop sti stos lock mov sbb fmul mov jge inc pop jmp js daa sbb gs das and sub mov pop inc rclb inc pushf push add ret push mov hlt pop sahf and and cs or mov mov je sbb js and in popf mov cltd notl push adc mov aad xor dec sub adc and sar cltd lock mov leave clc xchg lret jne test xchg add sbb jg rcr add int3 xchg imul inc test push adc movsl (bad) mov leave pop xor pop push repnz sar cltd stc (bad) lock mov jo nop mov out mov addr16 (bad) xor shl cwtl xor mov sti cmp test out push dec mov bound push out adc xor roll xchg mul xor mov rcr jae inc add mov pop fnstenv iret ljmp rol enter test jmp mov test dec xchg or pop or stos sbb loopne icebp mov (bad) (bad) out lds mov pushf add cmpsb mov jbe push lods jbe add adc sahf pushf dec pop xlat push std iret call insl mov rcll xlat fwait (bad) mov jmp cmp imull and mov outsl es adcb int lds repnz test dec sbb xchg data16 cmp stc mov mov (bad) or push test and push (bad) lea jge lods push sub sub fsubl adc lods cmpsl das sub push rclb fimul pop xchg inc lret daa (bad) pusha (bad) cli shl loope dec push (bad) jle adc repnz ret cltd and sub js mov gs dec push xor movd xchg cwtl sbb add pop sbb cmpsl pop and or notl xor sbb aad lret or movsb jg xchg cmp je int3 inc mov add inc inc (bad) sbb (bad) enter stos ret cld js sub push stc mov popa push lret pop fldl add sub sub pop cmp sub cmp les (bad) mov jl fstl xchg pop ljmp jno sbbl ret ret test push adc aaa or pop sarb mov ficompl cmc cmpsb cmp jmp repz cld mov rcrb jne mov jns int repnz ljmp inc (bad) nop sub inc adc in (bad) (bad) dec adc jb pop mov jge dec div cmc cmc dec push out hlt xchg inc mov cli mov call pop call push or cmp mov shrb xor clc mov xchg and test repnz addr16 pop bound push and jbe jge scas adc dec sbb xor cmp xchg leave add xchg cmp cmp idiv pop dec fstpl and cmpsl inc xchg dec mov and push sbb rcrl daa insb outsl and addb jno,pt sbb fincstp out xor or sub xchg jmp aad adcl pop and sub mov bound loop mov repnz cmp loope enter dec and fimul mov xor ljmp lea imul jp call rcl inc push test inc adc lods add adc std mov xor and mov outsb stos in (bad) mov loope inc xchg push data16 push insl inc cli xchg loopne fdivrl sub add or dec sbbl mov leave addb mov shr inc xchg cmpl int and shlb lret (bad) cmp movsl xor xor dec push das add cs fisub mov icebp js ret cwtl or and cli adc or out das gs sub push pop addr16 jno mov push mov ja ss daa daa dec or pop sub les mov out push push or xorl test fidivrl clc adc cltd xchg call fild lock mov lds mov mov xor push or test aam xchg xchg insb test mov sbb daa xchg sub insl push adcl cmp lds inc jg insb push inc sub push and xor inc lods xor xorl inc loopne aad ds pushf sub lea mov and or mov jge fsubrl enter imul push pop rcrb pop je mov dec xor gs fiadd les popa (bad) adc mul mov lahf adc cltd call and push inc sbb (bad) push scas les pop (bad) or jl jae xor add aaa xchg das xlat pop pop sub xor in inc mov adc xchg and jmp fiaddl xchg js add gs punpcklbw repz add dec mov add xchg mov sub pop dec add mov sub xchg pop jge mov adc add lock ffree adc cmc push mov icebp pushf jp or mov mov add inc je mov push cmp pusha xchg xchg ret repnz fs cmpsl div out enter test mov mov popa popa xor es inc and mov xor cmp push pop mov sub fstps push mov jp push jge pop pop push sbb imul and push (bad) push sub pushf call ret leave xchg div ds fbld ljmp subb rcrl or inc loopne das lret add cmpsl jb sub adcl pushf sahf ds xchg int mov insl pop roll mov push xlat loopne fcomps mov pop rcll (bad) jbe jle in mov cmc lock (bad) pop sbb in mov dec jnp movsl or adc or and mov lret fcomi call sub mov rcrb out in mov pop icebp fsubr sub mov scas jns sub repz jbe loop xchg xchg in jo mov gs test push (bad) or adc inc cli jmp jmp jg sbb xor mov out lret rolb cmc lock enter loope xorb xchg mov pop push insb dec ljmp movsl or xchg push push jne xor mov push insb movsb ret mov mov mov jae aas dec xchg aad fwait push out nop push aaa ret add sbbl pop add or in test loopne jmp pop push sub lea cmp dec movsb repnz add lret mov pop roll rorl sub fsubs je or into test jmp push push add sub inc (bad) rcrb movsb adc in mov and jg stos pop xor (bad) std inc (bad) clc repnz daa mov ljmp outsb das scas cmpsl and or or dec popa adc lahf sbb adc add mov jge shrl cmp inc and gs cmp std enter xor xor sti aad pop adc push ljmp cmc dec xor lea push lret add mov stos dec or ret inc dec mov mov pop adc inc push sbb pop inc es adc add adc data16 mov sbb or adc pop insb add dec sub stos jmp fwait lcall jmp subb xchg fldt cmp ret add cmc push pushf ja repz insl sbb dec jne mov or test pushw ja test popf cltd mov dec sbb inc fdivrs gs sbb push add clc mov sub out test aam movsb and imul lods rorl or dec int in mov or cmp dec cmp or data16 push jle jne or and sbb pop arpl sub push jl jo mov mov cmp popf mov popa test lcall jno out ss sub cmc aas dec dec adc sub and cmpsb cmp mov shrb fiaddl ret loop add sub fcoml out int3 stos jp,pt aaa jnp jnp or iret (bad) cmpsl add pusha in rclb and pop jb fwait iret popf mov loopne sti sbb iret mov or int data16 movsl dec aam int fnsave imul xor sub hlt adc add popa and aas push mov cmp lea jns (bad) inc outsl pushf jnp jmp and stc mov fs ljmp jp fsubrl and pop adc mov cltd popa add cli iret hlt mov ficoml clc dec (bad) shlw (bad) in push inc mov (bad) sbb dec (bad) and xor lret xchg stos test jmp ss mov imul sbb push (bad) (bad) jp gs jne imul push dec mov adc (bad) aaa aaa enter or mov fsubrs mov cmpsl stos mov orl lea leave dec mov xchg inc fstpt jmp cmp (bad) xchg mov inc sub jp test pop add inc push push sub or mov dec or pop es or dec nop pushf (bad) cmc jns pusha mov cmp mov enter mov clc jl sub cmpsb lds fistp jns cmpsl dec cli fcmovnb or repz add sbb sahf mov mov mov subl jnp inc in loop dec lock dec stos outsl adc repz mov jmp dec gs lods fstps js (bad) movsb push mov pop mov loope stc cmc xchg inc ror cmp lret lret movsb mov das mov push jno mov mov (bad) xor scas cwtl lods dec int3 popf dec movsb and imulb aas mov outsl ret adc (bad) (bad) lahf imul add add jne rolb push sub (bad) test add and das shlb add into aam xchg inc cli (bad) stc call insl xchg xchg sub push pop pop sti inc mov cmp push fcompl popf lret fucom sub popf hlt xor dec mov repz sub clc jmp je (bad) sub pop movsl adc ret out xor outsb jo (bad) cmc inc pop jp out pop pop iret (bad) (bad) adc mov inc mov adc jecxz dec fidiv mov sbb jae add adc inc add push cld cld pop sub xchg test sub adc cli mov xlat pop cmp mov mov add push mov int lcall jne pop sbb and sub aad jno jns int rcr sbb push cmp aam out das shl push arpl out xor adc fs lods sbb xchg xchg sti outsb xchg xor sbb fstpl hlt push cld sub enter jl fnop inc das jne stc cmpl cmc cmc cmp mov rolw in or cltd jg mov into push jno,pt mov in xor mov jge,pt repz bndldx jmp mov adc inc mov cmpsb sbb mov cli add cmp push push cmp loope ret sub pop cmp mov xor je scas in ret xchg and add mov cmc dec ja pushw jmp lcall mov dec repz (bad) movsl std push jmp mov rcl test cwtl nop cmp std inc fidivrl lret pop (bad) dec fs sub lds jl (bad) sub xchg ds push out jmp cltd shrb push jle xchg xor xchg sbb movsl or pop add aas (bad) xor add and sub xchg loope fisttpl ss lods or dec (bad) xor stos and fwait in mov (bad) insb fwait popf sub loopne adc lret int3 push std push cmp mov arpl mov jle jne mov xchg or (bad) sbb pop mov xchg mov adc mov dec push sbb jbe imul pop aam inc pop out xchg leave inc mov out lret sbb lods or jl ret stc loope adc rcrl jb lret xlat ret dec mov loope adcb test mov pop jo mov push or je (bad) pop push and pusha aaa into ja or in (bad) int3 les mov jecxz mov adc lret ss inc sbb (bad) push mov jecxz outsl sub xor push mov std and xchg sub ja stos sahf mov shl (bad) and pcmpeqd ja sbbl loope xchg cmpsl fildl mov cmc mov pop aaa lret push hlt jge push test int pop or sub repz stos in sub aaa lcall dec and loope cmp dec push sahf jb dec test imul or stos push sahf and (bad) cmp jbe in fsts pop daa sub mov test xchg xchg (bad) jmp push mov pop dec cmp xchg ss inc (bad) xchg xchg aad ja movsl mov adc je fstl fsubl mov sbb sub pop mov sbb add mov cwtl jae addr16 das lds lods sub lods push and andb dec xchg jo adc cmp cmp push or add ljmp lea mov lock xor jl lcall enter dec sub outsl push sub data16 pushf mov jp dec fldcw mov sahf xchg pop aam dec ja hlt out cmp push jg cmp nop pop pop inc and mov mov pop cmp inc js xchg or cmp fistl insl jno (bad) outsb push cltd adc pop movl xor aaa ja sub dec movsl arpl xor inc pop cmpb fild aad fmull into lahf jge inc or rcl xchg pop add test push out cmpl adcb sub pop push and fcoms outsb sbb mov adc in std pop add push (bad) insb xchg insb dec inc aad lret push mov cs addr16 xor dec jecxz insl shrb outsl sbb stos push xor (bad) icebp mov sarb push xchg push jge cwtl aam ret xchg mov push loopne mov xchg dec xlat out mov aam sub call and out or aaa ss cmp inc dec push fdivrl outsl es xchg pop fwait mov push and cmc xor push mov cltd cmp push das mov xchg hlt lret push sbb notb test sub jb popf adc fs (bad) and pushl cwtl and cmpb lcall pop mov mov out (bad) scas jnp jmp mov push push pop xor or jbe sub out stc bound mov mov fidiv inc add cmp inc movb mov add mov cmp lea pop push mov xchg adc (bad) cmpsb fsub lret mov jo add addb in fstps inc jnp cmc jge sub loop mov (bad) jns xchg and sbb cmp mull mov mov hlt das addr16 fcompl xlat dec push cmp popf push mov push jo leave sub inc mov xchg (bad) pushf and outsb subl sbb xchg sti das inc cmp pushl xor lods pop mov mov movsb out in sbb mov mov push pusha and pop iret jae aaa in jnp,pn cmp (bad) movsl xchg imul testb shl mov imul xchg add sub out sbb xor adc daa and pop (bad) lock jg adc aas xor jno adc repz lret ficoml mov repz add push mov outsb add push popa outsb loop cltd add fstl cmc inc and xlat loope or fcmovnb mov inc cmp mov dec mov fisttpl or or test xor int3 int xchg cmp sti pop pop ljmp mov cltd pop lods roll cltd lds popl (bad) xor pop stos mov jmp adc loopne nop and adc xor ss dec jp mov fwait dec arpl mov mov aad jne jnp into mov inc cmpsl test mov pop add push cmp arpl mov sub movsb mov pop push jmp add xor addr16 (bad) xchg fucomi ret and clc inc inc cmp or inc sbb push mov jle imul test cmp jae dec es adc mov sarb mov clc test orl outsb ret fmul (bad) pop lret inc and adc mov jl mov aaa dec mov sub mov fstl xlat xchg fildll add sub xchg scas lds mov mov test insl xchg movsb sbb leave test lret sbb lret push jae xchg out dec jecxz pop jne jne ja pop cwtl cmp inc arpl popa push loopne sub pop fwait lret repnz push in test xchg xchg lods pop mov mov lock mov lcall jecxz in scas incb lahf sbb addr16 adc test xchg imul cmp inc int3 rol in fsubrs mov xchg outsl fs mov pop jg,pt divl adc outsb lret mov cmovp notl test or aad sbb mov mov and lcall and mov mov sahf js nop fcoml mov xor call push inc ficoml ret mov pop scas ja pop cltd std mov mov sub es push mov fs push (bad) cwtl xor adc cmp mov lcall js sbbl xchg fdiv (bad) testb pushf xchg cmc mov in aad lahf fucomip lds push lock int and sbb ljmp push aaa cli ret addr16 jecxz jno cmpsb cld stos sbb rep pop test dec stc sub lock mov xlat hlt pop push jae jl sbb loopne xchg ss push daa stc jnp not push push jnp lahf and gs jo mov lahf sbb in scas icebp (bad) ljmp and out loopne jb aas cli fwait dec stos add (bad) clc add push into imul mov ds cmp adc or ja dec scas nop fstpt and cld leave repz mov mov mov and (bad) icebp sub insl adc cmp xor lcall in sarb lea cmp pop fiaddl or scas and test rorb mov adc or js cmp and mov fiadd addl shlb lds orl sbb pop out das fwait enter into adc insb push sbb out adcl fdiv adc lods xchg xchg pop pushf jl pop add gs (bad) stc inc cmp and data16 aaa repz dec fiaddl add stos repz pop jo iret dec popa cmp inc stc test fcmovu jns push jg scas push mov lods dec ss mov sbbl xchg or cmp ja rclb and add loop scas mov (bad) outsb fs mov daa lea fcmovne fwait mov cltd pop dec jb sbb ja mov mov hlt or ljmp cwtl lea pop fwait imulb add cld cmpsl xor lret push cmp mov leave mov cld lret mov xor leave les leave cltd jl into leave cmp sbb pop mov out jae push push in ret leave lcall ror jle jmp adc adc pushf lock inc lret fbld int3 cmp rorb inc fistl ljmp and cs xchg sbb pop icebp jo sub lock jle push sbb cmp jae (bad) cmp test lretw jns jbe lcall outsb (bad) sar lahf pop dec repnz xchg insl aad loope mov jnp aaa xor dec sbb pop jnp (bad) jmp jge lods mov pop or or es shrl jne push jmp adc or sub jge (bad) aas out aad in adc cwtl cmpl push push jns mov (bad) xchg ljmp aam mov test inc adcl inc fucomi sub dec inc mov push (bad) dec adc (bad) sub push sub inc mov sub push std loope lods inc (bad) inc jnp outsl iret repnz idivl inc fldt les inc or clc notb out add outsl mov pop call pop movsl xor adc adc popf lds aaa movsb clc (bad) fcoml sbb xchg mov aaa xor sub (bad) mov cli mov out jg jo sub mov mov push mov test nop jmp sbb (bad) jmp ss pop lahf js sub stos mov mov or xor dec lret fmul hlt adc es pop push lods xchg xor jmp aad mov jb inc add pusha cmp add fiaddl addr16 adc xchg jae inc dec aad pop scas cmc sbb cmp mov jle sub bound xchg int3 fidivr test or mov test sbb mov jbe ja (bad) (bad) int lret movsl repnz mov (bad) xchg mov fcomip mov gs pop (bad) cs push mov jb loop loopne add mov iret lret add mov ja rorl add adc cwtl and ss cmc jo cld cmp mov jo push xor lahf xchg arpl dec out mov mov cmp stos fild pop and or repnz fsubp xor push sbb xor adc mov or inc (bad) mov dec inc fnstsw shr lahf lret or and xchg (bad) cmpsl add andl mov add mov push je push or pop or mov fldl cs mov repnz pop sub ljmp lret and cmp cmp daa cmpsl rcr movsb pop xchg pop cmp add jns aas gs (bad) xchg scas cltd popa xchg imull cmp sbb xor cmpsl push add xor in insl jno pop pop fwait stos fsubrp repz movb push (bad) mov cwtl out mov sbb outsb lea je sti add stos outsl mov cmp std lcall push stc lods jb addr16 mov loop jb mov mov imul lea ss adc (bad) mov jnp (bad) fwait (bad) mov or mov (bad) lahf idivl pop jb jb ss loope leave test (bad) dec fcomps or adc adc mov adc push jno sub jg inc sti xchg mov enter rorb fwait dec repz adc or sahf test in pop mov addr16 xchg cmp or scas xchg lret movsl or mov xchg mov mov mov enter rclb jne jle dec nop out cmpsl jp ljmp or xor mov aas xor push mov fdivrs cmc adc xchg stos jnp fwait xor (bad) adc mov inc mov ret fsubrl pop and stos fcmovbe jp adc movsl jb test cmpsl jl sub cmp push mov sbb push inc sub push mov push leave xchg adc sarl xor dec pushf mov roll and imul cwtl popf and xor adc in inc cli xor inc mov xchg sub mov mov into inc inc fs cld popa cmp jns xchg add fwait jnp paddb movsb jno jl (bad) loopne (bad) es add shrl mov (bad) mov loope out inc jb inc cmpsl push dec xor data16 cmp cmp lods std add mov lock loop lret scas lret lock mov sbb inc mov or cmp std xchg (bad) mov ror or mov lcall mov or jae jae mov loopne add or mov stc lods ja mov push call dec aaa pushf push arpl aad int3 sub jmp (bad) xchg dec imulb and in fs (bad) cmc iret jl or movsl ret inc mov pop repz mov daa sarl xor xlat scas nop sbb out test out add push imul pop fidivr fmuls mov insb sarl xchg mov inc mov jl jae out mov cli push xlat out adc in loope fadds push ds loop or sbb and out inc xchg jb adc clc call pop loop call dec or or push push popl mov cmc lds pop stc fldt or dec sub push mov or xor mov cmp add xchg sbb (bad) jns or negl mov je jae stos mov ret xchg repnz int3 outsb xchg test jg,pn and das lret lds cmpl testl cmc repz mov pop inc or (bad) xor sbb sbb dec lock cld cmp sub cs adc pop xlat or (bad) fdivr inc lds jno pop jmp mov jl pop (bad) popf sub mov or std xchg loop inc jb mov repnz sub (bad) fbld mov dec push test lds adc add cli scas pop xlat das lahf repnz fildll and adc add mov adc xchg rorb gs mov pusha inc xchg stos and imul incb push inc xor (bad) push inc scas iret jmp and inc scas aad adc or addr16 pusha scas pushf cmpsl popf xchg ja sbb push cwtl dec (bad) mov sbb mov inc and inc andb push and dec dec sub into pop bound in pusha cld repnz jg (bad) sbb mov imul out jbe mov lret jp cmp mov in les fmull sbb push push jg out push popf jne cmp loopne sbb mov push sti inc jbe repz lahf outsb adcb int3 jmp in jl inc mov fldl cwtl jae into cmc rolb add or jecxz mov bsf pushf ds pop push jl test in lcall inc lods (bad) (bad) lret pushf rcr je pop sbb mov mov sbb call pop push (bad) push imul mov mov push mov lea adc ret push loop (bad) popa jecxz lods dec inc dec mov rol adc adc mov lods sub scas pop js or leave pop sbb jmp mov dec fnstsw sub (bad) cmpsl sarl in outsl adc pop jne inc jno gs mov cmp inc mov inc xchg notb scas mov mov (bad) divl enter mov xchg imul sub (bad) sahf xchg jmp mov dec sub adc stc pusha in cmpsb mov dec mov jno aaa fyl2x aaa inc mov and ljmp faddl stos aas dec sub and sbb xchg jno ljmp pushl push add imul pushf lods sahf negl out inc or pop sbb scas movsbl xchg push dec pop imul iret xchg ror out dec in cmp push sbb pop push fmuls cmp pop sbb in and pop cmp xor xchg dec cmpsl dec (bad) mov xor mov (bad) push cmp lret stc ja je mov mov loopne mov xchg adc fadd sub and and xor cli cmp in mov inc shrb cmp mov hlt call mov ja ret fstps andb sti add inc pop lahf xchg push js or gs (bad) sub notb stc xchg imulb shrl stos or stos sub mov std adc out xchg jmp outsl rcl xlat add push leave popf xchg mov ret ss fstl or test (bad) mov jl adc inc pop inc neg or stc or push in and mov (bad) cmp cmp jbe or dec pop ret mov pop push and fsts inc lcall or push negl (bad) shl negb pusha test mov or cmp push int3 xor sub or int je pop stos adcl repnz inc movsl mov pushf cwtl clc scas divb fist xor mov je stos (bad) mov lock mov jnp pop insb mov pop dec lea ja cs outsb call and inc sbb adc pop xchg xchg test jnp pop jnp (bad) test sub mov mov push mov push xor ds adc aad push ja push test xor mov push int pop xlat mov push imul sbb sub push movl dec ja icebp sbb mov xorl (bad) clc dec outsl popf sub lock ja mov mov sub addr16 cmp sbb pop mov mov loope and sub add rcrl xchg fsts sbb xchg or aaa or adc iret mov push std inc (bad) xor and lahf sarb pop pushf mov xchg les repz mov jmp sub and out sub lahf roll dec inc xlat cmpsl (bad) push pushf loopne sbb push js call lods cld xor (bad) movsl inc jns cwtl in mov jnp cld or push mov repz xor dec loopne (bad) cmp test leave ret mov xor mov adc in cmpb mov pop fist push push stc div rclb mov mov jmp jmp cmp in inc pop std mov call adc in jmp cmp out (bad) aaa sarb cmpl push cli sub cmp or xchg mov popa repz aas and int js fsubl pop in (bad) dec movsl ja mov call add jns movsl fimul or or mov push inc cmpsl adc fs cmp std dec pop mov sub leave shll mov mov xchg cmc faddl jecxz notl fildl dec push adc add push fcomps jp cmpsl (bad) xlat pop jne or pushf outsb out adc and dec jmp xchg (bad) call sub out jl xlat gs xchg loop jns test shlb and outsb leave int dec xchg fucomip add adc pop sub inc and out mov xchg adcl and lea insb xchg xor inc aaa insb xchg inc pop xchg mov push idiv ss fild (bad) setne mov pop or xchg jp outsl cli dec jmp sbb (bad) aas jmp cs xchg mov jne imul mov pop jno mov push adc (bad) cmp add cli dec dec sbb pop in push mov and inc sub mov sub aam push push loope mov push popf jno aad mov mov inc lods cmp mov ds (bad) repnz jo ds mov or ret popa lock sbb in pop xor lods push push jne mov cmp add int3 and mov dec hlt divb cmp add push sbb inc add movl mov (bad) jbe add scas icebp sub movsl scas push push dec call je les mov hlt sub jle sbb cmp push xchg adc loopne push cmp sub dec stos sbb sti sahf insl jp cwtl push cmpsl outsb cmpsl dec out dec xchg loope add jbe xor clc xor adc cmp into loopne jp push mov mov cld aad dec mov lods lea out lods jbe cmp in out adc sub fsubrl sti cmpl nop lret out dec mov mov xchg xor aaa outsb inc addb fiaddl leave lds (bad) outsl std popf dec adc fistpl nop fidivl inc pop mov adc iret ret dec (bad) ljmp sbb jb loopne cmpsl cmp and roll out shl and (bad) xor or push mov inc ror (bad) mov xor jne xchg ficomp ret xchg lret push sbb insb mov lods mov xlat int3 inc addr16 dec adc ss or lods jns enter pop lret or enter cmp push add mov and sbb in out or outsb lahf inc mov scas xchg sbb push inc xor fidivrl mov lret add pop pop sub mov adc and mov sub push xchg add and arpl stc test mov push and jne outsb (bad) cmc and xchg xchg movsb cmp mov (bad) icebp stos out sbb call pop scas sarl and mov test mov repz (bad) fxch jp jb add stc stos movsl mov jecxz or neg sub inc push add add add ds popa cld xor push stos int3 pushf lcall leave pop or sti lock mov shll int push insb (bad) out mov sti popf sbb faddl lock sbb or mov imul (bad) cmp stos cmp mov lods sub push add jno pushf mov fdivl lcall push xchg addl push pop pop fcmovu ss add jl add pop ds cltd mov std and sbb mov pop mov inc xchg repz inc or pop sub pop cmp sahf test mov pop lock mov mov orl mov jecxz arpl sub and addr16 xor insb fldl inc cs (bad) (bad) out ret in (bad) lret push mov cli aad xchg cmc test pop ljmp inc outsb (bad) int jmp test fistp pop (bad) ds pop or pushf stos pusha mov and inc cmpb (bad) js out shrl cwtl dec in cwtl and dec mov adc lahf aas ret xor cltd stos scas jmp insb inc mov or pop movsb and lea mov iretw incl outsl lret out mov icebp repnz (bad) ss jg aam repnz jge rclb rclb outsl sub mov movsb dec jne push (bad) push lahf daa jnp push jg adc int3 xchg sbb cmp lcall je lods insb push add stc adc xor adc or nop sub aam adc xor pop inc enterw cmp addr16 add jge jns push inc or mov cmp mov cmc jmp fs insl dec dec add sahf dec dec jbe push mov daa mov cwtl adc jns (bad) pop js sbb movsl dec xchg ja xor cld les cmp insb inc sub lock mov scas mov insb imul addb adc les icebp aas repz les (bad) mov test mov sub (bad) in fldl mov mov lret (bad) aas stos sbb mov add faddp push jmp xlat pusha xchg imul cld dec in mov jo inc push repnz mov sbb js dec fstpt xor dec jno mov (bad) mov ja xor sbb xor cs insb or (bad) or push push std mov aaa push insl lock (bad) push sub xor jns mov pop inc aad push adc push iret imul sbb in ret out xor sbb adc xchg jp xor push push dec sbb cmp aas xor push add rcrb adcb (bad) add sbb cmp jno ljmp jo stc test push rorb jbe and mov lods std cmp adc mov das icebp outsl stos mov jge je mov jp pusha push iret mov andl cmp dec and jno pop and adc mov add lcall pop test popf leave out enter out leave cli mov cwtl jge sahf dec push and lock xor jns imul (bad) pop mov jns mov aam dec (bad) out mov mov mov ror imul or lret cmp faddp or or cmp mov jecxz inc sbb repz pop addr16 fs repnz cmp cmp xor cmpsb adcl movd test sub mov (bad) ljmp (bad) sti repnz fnop cmpl pushf loope adc pop jl xor test int3 mov in ja enter inc cli inc ja add pop sub jmp sbb pop mov lds sub (bad) ljmp arpl adc pop insb outsl iret xor nop aaa jno pushf xor pop js (bad) ret out xchg (bad) (bad) mov adcl cmp ja or in fimull decb push imul cmp jge push aaa adc int3 lods or fwait bound lea pop into or movsl mov mov int3 jae dec add cli bound inc addr16 lahf rolb (bad) push fs js mov cmp mov out push cmp popf mov rol fistpl mov cmp pop es cmpsb inc ret sahf mov (bad) imul cmp mov and inc imul shr push test jle sti mov jns jge ja mov mov movsb add xor push lea mov leave and fcmovbe scas aad imul neg cmp adc push loop sbb scas ret lahf (bad) fucomi sbb cmp pop jbe stos mov incb cmp or in into pop ret popa or shll fs fwait or fadd lret sbb jmp add dec and and sbb (bad) mov (bad) fbld (bad) cld jno mov mov dec cli (bad) ficompl das xchg sub jnp pop (bad) or xchg in mov adc jmp int3 fcomp cld pop int cmc in pop aaa mov inc cmp ret fcmovb (bad) jne push lods pushl movsb dec inc sbb addr16 out add (bad) push outsb xchg mov xchg push adc push xor dec in (bad) leave jno push cmp push mov ja inc mov add dec pop std daa xor adc mov and dec test push cwtl ja lods xchg xorl sbbb inc test cli sub negl jl dec rol mov sbb lods iret scas xor or enter (bad) pop popf pop andl and into jnp dec sbb fdivrs add stos lock fcoms mov or (bad) dec shl js ret inc iret and mov repz xor enter mov icebp das cmp jp clc mov notl pop and xor add ja adc mov dec int3 pop dec mov out sbb lods mov jnp test xor lds rep (bad) jns mov orl sub push sbb mov lock stos lret (bad) (bad) xchg jle dec sti shl int3 and repnz packssdw cmp pushf add enter inc popa shll rorl lahf sub inc (bad) test bound xchg push movsb pop sbb test popa into pop outsb out out (bad) aaa nop or mov (bad) push outsl xor or adc mov fmuls dec lret mov stos pop xchg cmp (bad) push mov and shll icebp jno popf loopne xor imul push stos dec push inc test shll sti cmpsb sub insb inc and push scas xor movsb xor gs nop pusha push and mov fs mov cli int3 push dec push sub ljmp cmp arpl xchg je dec test mov mov xchg out in lahf or xor dec fiaddl cmp sub mov or inc mov dec inc mov or es dec and push arpl call insb insl mov into xorl xchg iret xor lcall mov cwtl call mov and daa inc call scas out xchg pop rolb push rcrb lock mov sub adc pop pop xlat xchg push int ret std (bad) hlt pop xor cmpsb ss and xchg lret jno xchg inc in push xor imul rcll pusha push loopne inc scas adc (bad) idivl and add imul daa mov into rcll mov stos stos mov (bad) cmp xor test cmp mov dec jnp lods lcall cmp pop movsb mov jne addr16 mov mov mov push xor xor imul push jmp adc push and cmp xchg xchg jg cmp inc sbb inc mov jmp xor pusha cmp movsb mov inc leave dec loop fwait jp dec test sbb sub adc popf jnp cmp repz mov lret in adc test xor ror sarl into adc arpl loope lret fcmovne mov xchg stos ss in loopne pop cmpsb mov sbbb out jns insb lds popa (bad) test cmove icebp dec aam iret fldt int out mov (bad) in adc dec add (bad) xor or fildl mov mov mov dec insb mov dec xor push and jbe neg and ret xlat mov mov jg add aam jp (bad) jno inc cs xchg fwait imul (bad) (bad) cli fistl faddl jns scas popa test dec push (bad) aaa push cmc cltd (bad) sub in jb mov jo mov adc or or push cmp std mov das push je cmp xchg lock xchg mov xorl jno sub lds mov push adc mov xchg mov push insb cwtl (bad) jo xchg xlat xchg aaa test icebp jle hlt insl in cltd stos and lea mov sarb sbb (bad) mov push (bad) pop sub aaa xchg push mov dec out ss and add les stos mov insb xor bound popf or insl fmuls shll movsl adc and aas sub aam lcall xchg repz push xchg int3 sbb test adc jae jnp ljmp imul in xor fidivl adc push pop pop pop out and jg repnz or cmp js add or push into popf hlt jecxz repz (bad) jb mov push and cwtl pop inc or push call arpl pop push (bad) rclb sbb sbb in add inc or aas inc cmp ds aaa inc test lahf sbbl into push cld andl dec in add sti mov jp decb dec pop sahf ds sub fistp mov jo push or jbe fs pop lds push mov and mov cmp inc sbb mov sub cmp dec repz cmp outsl hlt int3 and cmc sub jnp sub sbb ret sub cmp sub pop test ret mov pop cmp mov jecxz jnp int mov mov ja mov ds int and (bad) fistpl push ja mov mov fsubl mov xchg test leave shrl add jne dec testb ficoml test push mov rcr imul rclb cmc xchg scas repnz enter xchg sbb inc in adc (bad) (bad) lods int3 iret xchg jl sbb int3 cmpsl out jecxz inc cmc cmc or aas push inc mov cmp in xor jnp inc iret push sbb pop jne mov pop sti cmpsl push xlat pop push mov das icebp or cmp scas adc pop sbb nop push add shrb ss fwait sti or push ficomp sarb std iret aaa mov arpl jmp push sbb jge mov or mov xchg sub push and arpl fbstp cmc stos int enter pop mov das push loopne jb lea movsb repz jg bnd (bad) mov out inc leave icebp (bad) push jnp jnp pop inc mov shlb fnstsw aad fcoms jecxz mov xor pushf mov popa push js dec mov push lret ja inc pop in insb lcall sbbl and cld push and xor and adc aam sub in aas xchg (bad) xchg mov add leave pop cmp xchg dec or and mov insl mov jge xorb xchg movsl clc fldcw jbe push int3 mov fldpi mov push inc cmp jns loope mov xlat ss hlt clc (bad) (bad) push xchg pop and mov inc xor shrl mov jb pop (bad) iret jl popf pop inc ret ret in sbb in out dec adc pop lahf fcomip jmp test sbb rcrb mov rolb outsl sub outsb inc xor dec call add dec mov das int3 (bad) or fsubrl xor jae adcl int3 pop adc ljmp push addr16 clc mov (bad) xor jp test idivl inc insb outsb clc leave icebp pop mov pop popa xor fsubrl cltd pop popf ss dec xchg mov cmp call popf xchg icebp cmp xchg xchg inc fstpl mov mov bound outsl xchg adc int3 aam lret cmp lahf (bad) jg mov cmp sub lret push ss xor xor dec push aad andl or adc sbbb sbb jecxz add les cwtl push jle loop mov sub cmc jbe popf fisttpll (bad) cmc cld inc mov sbbb xchg clc dec daa rcll adc out mov xchg xor and call lcall sub popa test pusha pop add psubd xchg in ror and cmpl sub jae push icebp mov and call jp sbb mov add push pushf cli div mov jl sbb stc xor rcll (bad) sbb inc in ret adc pop adc sarb jp cli mov mov divl xchg test push test add sub addr16 mov push cmc inc movsl je inc pusha xchg les xor dec das fmull mov inc sarb out jne,pt sub sahf leave mov adc mov iret push gs hlt ret outsl lock fbld adc sarb je jmp mov adc lea pop or mov mov jp mov push and lret push into pusha popa scas pop std dec dec pop fiaddl divl pop test push bound sub clc push mov cli aad outsl sahf test adc (bad) mov in sub cmp sub sbb pop nop mov sub add inc into pop mov test sub mov lods pop lods scas into and hlt je mov xor in or inc pop sub inc adcl data16 jbe cmp rorl test ret or imul cmp jo fimul inc adc sub mov bound adc adc and mov fcoml pusha sarl cltd xlat loop inc jg (bad) sbb cmpsl mov sbb xchg mov fbld (bad) push imul pop or pushf leave add lret iret pop mov push aaa jno xor jecxz iret pusha ret mov fisttp cld dec insb push mov mov stc data16 mov mov push pop or xor psubw mov ja mov adc push outsl cmpsb push or mov sbb outsl jb push dec test scas stc sub mov into shll lds mov jmp pop mov dec add mov pop xchg pop mov fs mov sbb or shlb xor adc and or ja xchg jg xchg stc inc add sbb xchg (bad) fwait pop into and xor xchg xchg popf pushf adc jg jge jecxz and lret push daa push sub mov sub je push fisttpll les jl cs push (bad) jp (bad) sbb movsl scas and mov dec and and fwait jl add jae mov inc xchg xchg mov popf test (bad) (bad) loopne inc fiaddl (bad) rolb imull sub loopne lcall mov adc sub lods mov add js ljmp xchg add push mov adc loop push imulb mov push ret in daa jmp inc xchg jno inc test pop inc aaa enter fwait jecxz jge mov jnp stc das in mov or dec xor mov jb cs aaa or cs add mov jl push or adc mov sbb xchg ds mov push fisttpl sub stos pop stos fstps pop lods inc push imul add dec mov mov xchg cli push or add sbb xor jg test mulb daa and int mov imul mov mov fsubs dec xchg inc out ja pop pop cmp lods dec pop call add pop movsl push jg decb js roll fwait push jecxz jge adc sbb add and sbb jg lret cmc inc xor mov jne lahf jmp test xor xchg adc ds mov test inc in dec fnsave push add adc stos cwtl out (bad) sarb add (bad) xor hlt rorl pushf sahf xor mov add lods ret insb sbb clc xchg imul jnp gs cs iret subb das push xchg ja sar testl (bad) lcall addl and or xchg sub pusha cmp bound out (bad) out jmp mov iret cmp (bad) dec sub and arpl enter fistl mov cmp xchg lahf arpl jle mov inc sti dec push jecxz icebp repz jge xorl xchg incb inc fistpl roll sub fadds push repnz push mov mov mov sbb sub (bad) cli jne xor add cmp mov and mov (bad) enter movsl mov sarl jecxz cmp mov test dec inc mov jnp lods adc cmp xor push sbb movsl xor xor pop xor ficomp sbb repz xorb out mov out test mov mov push or and lret push sub int3 movlps dec sarb cmp inc cmpl sbb enter fdivrs std mov outsl push and mov jp ret cmpsb dec loope sbb jbe jne xchg add call mov addr16 cltd inc inc gs pop mov or mov test lahf add mov mov icebp (bad) push jecxz (bad) in out mov std test imul jne jae adc (bad) dec sbb (bad) icebp mov stos (bad) clc pop and add or mov fldt mov popa test js mov cli sub pop mov push ret ror fdivrl jge dec dec dec out in sub outsb test adc adc std add mov mov push (bad) das dec jno mov mov (bad) mov ret xchg cmc jno sbb sbb cmp dec or xchg fmulp cmpsl jecxz bound fwait das imul rolb sbb insb and imul xor mov dec lea sub test ds fisttpll push mov mov pushw fidivrl mov sbb pushf jp cmpsb test mov pop test pop cmp xchg mov lret popf inc fcmove inc fist mul lds adc sbb pop sub fisubl mov jle push popf (bad) or push jnp jne sti cmp cmpsl roll bound jp push mov mov imull push sarl mov push push xor adc scas or out mov icebp pop rorb mov xor cs mov and jmp loope pop fimul xchg push out cmpsl movsl into mov xchg and jnp enter test xorl stos xchg in cmp scas jp jbe push sbb pop imul lock push mov push jb popf jl add dec cmp dec or xchg pop mov lret call nop jle pop rolb inc fdivl loopne push fistpll cwtl (bad) xor loope stos fs mov add andl cld in mov (bad) cli pushf xchg add daa pop push (bad) jecxz icebp (bad) lret jbe xchg sti jnp mov inc push test outsl add or int cli mov adc movsl inc inc (bad) (bad) jecxz sub mov jno inc (bad) cmp test pop lret cmp ffree mov fwait xchg ja xchg mov pop xchg lcall sbb inc outsl sahf test cltd lods and lock fsubl xchg sub fidivr mov and cli enter sub jbe jo icebp scas push sti (bad) call pushf jae mov xor mov out dec std dec sbb test push insl aad pop xchg aas in lsl jbe mov outsb mov fidivr pop push push icebp jns loopne fmuls sbb ret xchg outsl stos repz fs xchg jecxz sti mov fimull or mov xchg fs rcrl movsl popa pop ss mov xchg push cmpsb ret dec xchg fnstcw or mov out into js,pt xlat sub mov dec icebp cwtl dec jbe pop mov xchg fcoms push ja xchg xor cwtl fwait pop xchg and dec xchg pop dec ljmp cltd data16 push sub mov fadd out xchg adc out es das add xor dec les push mov movaps pusha pop (bad) test mov push mov sahf and (bad) jae dec or out (bad) (bad) bound inc neg fs in and dec sbb sahf mov stos test stos addr16 hlt jo insb cmp movsb sbb jmp adc add into inc or inc fsubs gs nop pop pop clc das (bad) ss daa and dec jmp mov lods fisubr adcl inc hlt (bad) pop dec out (bad) jmp jnp std adc ret arpl add ret push frstor inc out inc cmp push lods mov movsb sbb notb insb mov jbe aad (bad) ret int lods (bad) cmc xor lret in jmp out jnp inc cmp adc sub inc fldz xchg ds test leave sahf and jne rcrb notl or ss sub in cltd hlt rol aad mov cmp loope ret cltd movsl cmc xchg bt pusha movsb sbb andb fisubrl xor lahf cli sbb test fldenv sahf notl or xchg in sbb rcrb inc jnp in lods test adc test mov pop orl aad mov push mov adc jmp (bad) lea push es iret mov or (bad) movsl or xchg lret mov cmp dec jo mov mov out adc gs shll xchg push and cmp xchg inc mov or imulb mov ds fdiv lahf fsubl jmp repz jl fs jnp pop vmovaps push (bad) leave fsubs sub sti daa jp pusha jae jle cmp xor je pushf cmpsb adc sahf mov pop out cwtl movsl into sbb cmp ss mov cmpsb add mov sbb add jo aam imul push out and sti jmp inc mov lock jg jmp adc imulb in mov xchg je fistpl (bad) ja dec ret psllq mov out icebp stos xor xchg aaa test mov int sahf dec pop ss fs lods sbb iret add insb (bad) and xchg std and daa sbb pop lods inc int (bad) cmp sbb mov outsb jae push xor pop mov sbb jne mov or test das dec mov movsl cmpsl iret int3 sahf inc lahf jno mov fcompl mov or jnp mov add vpsubd sbb add roll popf addl scas push scas or mov xchg call push (bad) fcompl pop rep enter mov insb jno pop dec aas scas pop xorl shrl out ljmp les jmp sbb inc add inc jbe repz pusha mov or int xor incl out pop leave mov or call imul jg jl xor insl movsl hlt jne ds xchg out lret adc add and cmp jae sub aam dec aaa xor push movsb add imul push mov sub dec std inc add call fsub movsb xor xor or xchg es inc adc sahf push scas call outsb ret lods test aaa push jnp into xchg sbb mov fprem1 iret std add scas xchg ds loope inc pop jg addl mov push push (bad) sti mov inc daa dec test mov jge cmp dec pop mov add (bad) jge xchg jbe dec sti dec daa aaa inc sbb add les std jno mov jne adc push mov rdpmc jg aam jne inc pop push mov scas aas es jl and cmp fs push fisttpll add xlat shll cmp adc push sub jmp or and inc aam xchg aaa mov loop xchg clc out fbld pop stc lret mov nop cltd (bad) arpl fdivl fidivl inc roll repz out mov jb js fild das clc adc (bad) jns outsl push mov js fs xor mul std pusha lret stos ficompl xchg insb dec lahf into (bad) mov mov jno ds lea jl lock xchg push dec fildl ret sbb sub push mov daa lcall add icebp jle imul xor mov push ret mov push sti and popf push sbb xchg push jp loopne cld das iret jle out daa cwtl enter sti jb shlb outsb push sbb adc add addr16 push daa sbb lds mov mov and adc xchg hlt and mov pop sahf inc jge test push and push les cmp jmp cmp lret sbb push inc in lahf mov xor adc ret mov lds xor add loope sub lret xchg fild jp mov inc fiadd mov js xor push mov cli outsb repz sub dec cs adcb cmp rcrl sub lods popf lea cmp and cwtl test and lret int3 sub sub dec sbb cmp pushf fisttp es inc jae nop dec ds cmp lret xchg jns dec sub pop in ss lret mov lahf mov cld cld (bad) mov (bad) cmp push jp (bad) mov jg mov cmp xchg scas adc mov jg mov aas mov sbb out adc dec or xchg les jno pusha mov jle or xchg je loopne jl imul xchg sub sti jg mov cli xlat pop cli mov inc sahf lock notb popf mov in push push cs pop mov data16 pusha cmpps lock mov pop test iret xchg sahf ljmp insl or mov fs clc les out inc inc in gs popl inc dec push mov pop cmpsb fcoml fistl jae xchg cld (bad) pop clc push add out sti adcl ljmp xchg (bad) aas add push inc dec or or cmp pop cmpsl mov dec lret arpl mov (bad) adc aad push out addl rcl mov aaa sahf jecxz mov aad xchg push fistpl and ja fistp and es scas jle push out imul imulb lods mov fistp fadd pop mov into adc jo dec lods iret mov or xchg sbb push add xchg andl jge or jle xchg jno repz test sbb and aaa pop mov or cli jno enter enter xchg fnsave js mov inc pop cmp pop fistpll pop lea out dec push and cmpsb cld or loopne xor or imul out sub push mov lods outsb jmp pop stc in subl rorb fnstenv int inc cltd pusha ffree je push pushf mov cmpsl in jecxz icebp jg pop inc shlb pop xchg pop ret inc imul mov xor lea push es leave imul cmp mov and call cmp loopne or aad pusha xchg pop cmp outsl jge sbb je (bad) xchg insb push and and push rcrb push rcrb and test mov and cmp lds je icebp push sbb sbb mov adc jmp push (bad) xchg push jp mov mov add dec subl dec add clc mov popa test dec xchg adc mov sarl cmp and iret and jno push lcall cld dec cmovb test andl dec (bad) and loope std test fisttpll sub mov fstpt xor mov fsubrl push mov cmc inc loope cmpsb (bad) ljmp pop ficom mov pop push push inc test xchg decb sti cwtl add push mov fsubrs cmp lds xor shrl cmpsl test xchg cltd pop dec test jns xor inc daa sbb adc (bad) popf push fistpl pop pop test lret xchg sub push in test fdivs inc ds cmp stos push cmp sbb mov push test mov xor inc out mov jnp cmp xchg mov (bad) push icebp aas push jecxz repnz bnd pop cwtl or sub cmp xorb mov mov dec notb in lret xor add mov jl icebp push nop jno mov adc mov mov mov inc loope pop jg dec ljmp and push mov shlb fcoms mov sub jmp push bound cmp ds loopne je test lret rcrl in shr cwtl mov aas mov stos scas clc (bad) adc push gs or je js dec arpl dec pushf and mov dec int das push cli pop sbb dec mov or jecxz jne out scas test (bad) mov shl and bound (bad) bound mov mov xlat lds lret imul push jl scas aas fwait loopne ss iret sbb mov imul lds int3 jmp in push (bad) push mov movsb pop lock pop cmc out sahf lea adc ds xchg aaa add ja ret js aaa add pop lds xchg lret outsl lcall ret cmp cmp inc fcomi out sbb pop iret mov das or mov push pop repnz cwtl (bad) stc (bad) (bad) adc lods mov push jmp pushl orw push xchg aas fwait jle cltd dec mov call mov jp fs dec fprem negb lcall shrb dec jl inc jns (bad) jg xor or mov repz sahf xchg popa jnp fsubrs pop mov xchg popf or mov or test in adc jge ret pop sub gs sub mov std or cmpsl push inc popf jecxz mov bnd cmp loope and and call sti push clc dec orl dec hlt mov sbb imul xchg popa inc mov mov sbb cmp mov cwtl lea out scas and xor and dec pop pushf scas pop push pop jne popa insl rcrl mov nop cwtl and xchg imul adc and scas cmp (bad) (bad) testl out push push mov sbb push mov jno xchg lret fcmovne hlt xchg lret mov cmp xchg xchg int test mov mov mov push orb sub adc cltd jge iret imul idivl pop jg ficompl stos fbld mov in cmc add jl jmp sbbl lret xchg loop jo sti jecxz mov cmc (bad) repnz and rorb sbb mov cmp cmp mov add mul enter xor dec inc stos fcomp mov dec ret add jo int lret adc jl inc test sub xor mov jne sahf mov mov gs fld cld popa mov in lods cld stos and sbb nop add push add cltd sbb or cwtl or sti xchg xchg dec mov pusha cmp mov cmp xchg rcll ficom adc mov jae mov xchg push or push and es jne or and cmpsl cli jb jne icebp (bad) xchg push arpl (bad) incl xlat test push jge lea inc ja mov and jae push push mov bound pop data16 fldenv xchg popa cmp jns sbb mov mov ljmp fnstsw loop dec es sub ret in call mov or not push and pop cmc mov lahf mov xorl mov inc jne jae dec test test jg leave fstps mov mov clc fisubr aaa repnz (bad) jae fwait clc cmpsl push cmpsb in test (bad) push test mov adc loope jp cmovp mov push dec mov inc xchg out roll sub and xlat outsl arpl jno cmp cmp fild mov lcall popa (bad) neg lods mov pushf cmp dec dec daa or test popa inc js push adc (bad) je inc mov mov js inc push call mov (bad) mov test inc clc sbb bound push out sbb mov inc dec jae dec dec pop mov mov and mov (bad) movsl push sub icebp mov (bad) ds int3 cmpsl jb xchg add xchg sbb aam jmp inc xor jnp jmp xchg out pushf pop mov xchg sbb shrb test xchg jo (bad) aaa outsl adc xor mov int adc aas in xchg jl xor adc scas in mov or add jle aas push idivl jae inc sbb movsb into mov xchg add je push jae repnz xchg push pop inc stos pop popf rorl sbb jp cmp jle in or (bad) pushf (bad) repnz jnp pop fldenv sti sahf jp pop and push mov dec sub dec sbb cld adc mov lret adc lea out xlat lods shll fiaddl mov nop insl sub and aaa nop addr16 cmp xchg pop stos in or add imul push in push imulb je repz push pop pushf push fmull pop mov test jge push leave cmp sub fs push call aad xchg sub ret pusha or add xor loope jo push lret push ficoml jmp add sti cmp mov daa and scas aas jmp sub add adc jb insb sbb mov ret mov aad addl mov dec (bad) mov sbbl jecxz push add jmp jl sub imul and pop adc ret ret push std insl stc arpl push mov or call fstpl or aaa pop mov int ljmp cmpl jnp movsl push fisttpll sub push mov mov fstps jle insl bound or xchg jbe ljmp addr16 mov addr16 sbb sub xor and xor dec dec xchg mov movsl lret xor popf sub or aas lods push stc jb mov xor (bad) mov jne sar stos enter (bad) or pop mov ret pop push mov sub cmpsl icebp jl rcrl (bad) push or mov mov int3 xchg hlt inc add mov cwtl adc xchg popa jp cmp mov sub dec jmp push dec popf dec stos lret mov imul rclb dec xor mov fwait hlt jp mov in add fldt sub inc jnp iret push js mov aas call or nop lock cmc arpl add call pop and xchg pop or mov pusha bound gs js lret and cmp inc sbb insb push pop inc pop clc rolb and adc (bad) test cld and repnz (bad) mov scas cmp adc mov dec ffree mov shrl lock fwait xchg lret fild (bad) imul xchg adc dec dec push xor adc pop mov push fiaddl fadd ror push ja adc mov push adc cli sbb lret cmp test test outsl arpl xchg test and aad ljmp lcall dec fsubrl subl out (bad) xor jae mov jecxz cmp (bad) and lock adc fwait loopne dec outsl jne inc roll icebp rcrb leave push addr16 sahf add ja sub cltd mov mov xchg and push (bad) push enter std jl in xor cmpsb out loopne inc dec out sti int inc (bad) lods lret enter dec sbb (bad) jne ljmp jo ljmp xchg fmul mov jp (bad) dec xorl loop outsl lret mov je or and pop ja arpl insl mov push leave call mov cltd push xlat loopne cwtl inc dec test cmp fs jns lahf xor mov fidivl mov or loope mov jg cmp dec leave mov icebp xor jne push add push dec sbb scas xlat jp or test xchg xchg addl jl add in add inc sbb xor jno add das scas fnop arpl sub adc lret test test (bad) ja xor das dec jb aad inc scas sti (bad) mov iret lea push test push cmp sahf adc aad sahf sbb and adc xchg sub cs (bad) mov xor pop xor push lcall dec xchg pop test xlat outsl mov mov iret mov push add dec fistp pusha cmp lods shrb testl loope cmp aas push idivl out xor mov or jmp mov pop ljmp (bad) fildl inc loopne jb in call lcall test pop icebp outsl js mov pop inc sti cltd push imul cmp dec sarb ret daa xor js mov push adc pop stc mov mov xor icebp fld cltd add pusha mov data16 jle jno iret in cmp test popa in outsl add jnp clc pop test jnp rol sbb pop rolb ss loope,pt push mov pop notb repz sub cmp cld jle addr16 xchg push ret sbb call mov fist dec mov pushf xchg pop lret inc xchg dec jbe pop stos mov dec das jno lods jno adc clc idiv jl mov repnz xor cmp pop in and sbb mov mov gs icebp fmull in fcoml scas push (bad) out test push mov (bad) call jbe ljmp pop or loopne or dec mov stos ret jbe push imul ret push (bad) lahf mov sbb (bad) je test sub jecxz stos fxch xlat adc jno ss pop iret dec mov in pop lods mov push fs or mov sbb cmp outsb adc idivb or data16 jb mov lods inc cwtl mov jne sbb in push or clc xchg xor sarb cmp lret cmc jbe scas xchg push sbb out lock cld push sahf daa je pop adc pop mov cmpsb notl push and dec inc pop insl hlt movsl inc push push dec add pop (bad) test jae std cwtl pop (bad) jmp sbb clc addr16 and xor pop mov test sbb push fsubrs js mov inc je pop or rcrb push sbb mov (bad) cld jbe pop les dec pop test mov lcall cld mov sbb out xchg sbb jae (bad) sbb mov repz clc popl pop repnz pop data16 pop add push xor mov decb sbb pop imul xor subl std test rcl jb and or or sub jo sub mov push fiadd es mov sub mov leave xor pushf cmpsb pop (bad) iret ret arpl scas dec daa out popf cmp in int scas repz add stos xchg into dec sahf jbe sti and pop lea and inc push mov cmp pusha dec pop je jg call inc sub ss fs es inc add or std orb mov in ja icebp mov push adcb xor (bad) shlb lret inc ljmp cmp push and leave mov dec cmp dec add test das mov mov xlat test fwait xor dec imul sbb sub xchg cltd ficompl adc test sbb sbb daa data16 and sqrtps xchg xlat xchg cmp or leave mov cwtl cli xchg stos and mov std addr16 adc lahf ja out lret add fdivrl (bad) xor jbe push dec mov loop aam fwait rclb dec lea movsl mov fsubrs sbb aaa adc push loop mov inc or push (bad) fistp loop add inc jne adc das push add mov sbb push xchg divl imul test mov sahf ja aam adc lds mov addl mov movsb (bad) stc (bad) pop pop adc int mov or mov pushl fwait xchg add xor sarl mov sub daa mov test inc imul mov inc push gs and std iret lock sbb aad mov ret outsl sub leave pop int add jnp incl popf mov jb lret addr16 rolb xor cmpsl pusha sbb out mov mov dec or sete arpl cld ret add mov xchg push mov cli iret fwait mov sub test sbb sub in or (bad) mov xlat notb mov (bad) mov dec cld scas out das in dec mov test push les jbe or dec test jo imul lret fstl sbb hlt sbb test jbe cli push hlt pop mov leave push add pop (bad) mov lea in or lods xor sbb imul rcll into outsl push nop pop cmp mov inc mov pop aad or lcall and test mov pushf leave ljmp cli add fisttp xchg shlb and adc pusha movsl mov aas xchg icebp scas push push push push inc xchg and testl add pusha inc (bad) ret add ret inc xor jae xchg test (bad) sbb ficoml fsubr dec insb scas xor xchg jle sti mov std in fldcw scas (bad) pushl ficoml sti ret mov daa (bad) int adc sahf loope or or test aas addb xchg xor in mov xor scas add insl (bad) jge (bad) jb cmpsb scas jle and je pop adc sub sub sbb out das nop test or out jge shrl ret or loopne inc iret mov add push outsb xor pop xchg mov notb xchg mov dec (bad) je jg adc xor or ja rcl test (bad) cmc test cld jns push and push fstpt rorb addr16 inc jge,pt insb and jl jno xchg and daa sti sbb cmp repz (bad) repnz and xchg stos cmp xchg jmp pop lds or pop icebp scas and out push call jg pop (bad) out push outsl mov int3 outsl sbbb bound std (bad) fisubl rcll test adc mov ds mov sub xchg or fxch pop jl cli sarl scas (bad) mov cmp push jae jnp add dec mov (bad) mov das xor movsl and mov mov in cwtl fdivp mov stos and lret xor cli jbe xchg mov mov idivb or rclb fcomip ljmp int3 push enter jl and popf sub and inc test dec subb rolb mov add sub add test andb jns cmp mov mov and mov xor ret cmp cmpsb xchg inc shlb das insl or leave aaa lahf pop dec push adc pushf xchg mov pop or add adc inc push rcl add mov (bad) or cmp sahf mov data16 scas mov inc push mov std jmp sbb sbb icebp mov leave cmp in sbbb cmp adc sub or mov xor mov xor jmp sub enter lcall fdivr pop fldenv mov (bad) cmp out lea jle inc inc pop iret sub test cs shll jbe int3 jl sub aam roll ret adc test sbb adc arpl jo add outsl stos mov rcrb mov mov shr push shlb sahf lret push ret fnstsw movsb inc mov push cmp mov rcrb lret add xchg js es pop je scas nop push pop ja fsubrl push repz inc push mov push add or add gs mov jb nop lret dec pop stc mov movsl sub push mov jae mov rcrb stos mov cli or push ret loop inc pop or add push popf rol ja subl lcall shll mov (bad) add mov dec sbb jnp ficompl xchg or icebp rorl lock cmp sarl roll int movsl mov lea (bad) jb add int3 pop fcomi mov les arpl aam sub pop lds xor ret popa push outsb and idivb aam test out xchg cmpsb (bad) jecxz and jge sbb or mov or ret hlt fdiv fs adc stos mov lcall lds cmpb stc push xchg ss xor dec (bad) into push pop imul fwait (bad) stc (bad) fsubs mov push push sub out imul jnp mov mov roll mov pop and lea jg leave mov ret repz fistl ret push fnstsw mov fldt and hlt jge mov mov inc cmc inc sbb adc add inc lcall hlt mov std xor (bad) xchg imul sub mov lds xchg jmp je xchg push and loope out or dec fmuls pop mov adc jns fsubr mov inc scas icebp sbb xchg loope ret pop in dec mov inc ds jbe (bad) aas add adc into mov lcall pop xor mov in ljmp and inc cltd mov xabort adc mov push ret jle cmpl xchg lret mov pop lods xchg pop pop adc inc lds pop shrb push xchg test add je clc cmp addr16 in pop imulb (bad) enter adc ds out inc in jne mov cmp gs into xor divb das aam popf dec test in jecxz lcall lcall aam shll pop insb pop jb cmp dec mov xchg sbb div xor sub inc out lret sub movsb into or popa sbb pop or das mov mov xor iret in int cmovp idivl inc loopne lock pop mov call fildll push inc loope (bad) push incb xor pop leave ds out js jns fistp mov or mov inc into push and dec das sub test jl loope fwait (bad) cld mov jle shr out popa mov pushf es (bad) movsb outsb inc imul adc cmp inc std push xchg clc sbbl cli movsb icebp mov fnsave adc cwtl jnp (bad) mov (bad) dec inc jno int sbb es shrl sarl mov les cmpsb sbb inc or ja pop mov mov xor push rcrl data16 and (bad) adc int3 lods push rorb sbb mov (bad) mov jmp xor sub shll push daa jae xor or out cwtl fnstsw enter rcrb dec mov mov inc lcall rcll inc scas xchg int3 inc idivb repz mov mov jp cltd lea loope (bad) (bad) out movsb pop cmp lret ljmp cmp (bad) (bad) lahf add int3 add loopne push push cmpl xchg push js pushaw jge pop mov dec ljmp sbb and jl mov push push aam pop cli mov inc es sub ja adc repz roll sbb cmp xor pop loopne xchg mov xchg sub push mov ret xchg pop or xor fisttpl gs in icebp push or mov arpl mov and sbb cltd sub cmpsb pop sub mov xor fwait out sbb cmp add push mov or ljmp sbb mov aad (bad) jae cltd sub leave or mov xor (bad) pusha es icebp xchg xchg xchg xchg inc jge ds mov mov mov jl or add xchg pop in cli lods pop jno dec sbb cmp cmpsl add jmp dec mov sbb popa and pop xchg addr16 (bad) mov inc xchg out sahf bound popa sbb sbb mov push sarl lahf pop fildll jb dec (bad) (bad) outsb or movsl outsl sub adc dec or cwtl out cmpsl or out cmp pusha shll test mov mov sub outsb xchg xlat fisubrl push je sbb and push loop mov mov jbe hlt test leave pushf jo stc paddb repnz xchg xchg stc add mov std movsb test ljmp arpl xchg mov ret fs pushf int3 sub add add popa daa xchg aam jns pushf addb xchg mov dec xchg in push cmpsl mov cld pop mov lods pop adc sbb jo cmp jmp mov push ja loopne loope into lods pop sub pop push xor (bad) add stos xlat data16 fiadd inc (bad) mov sub or cmp mov fistpll das dec fild in push rorl mov test lds mov and loop outsb lret iret jne test test ret push out push adc and mov jg jle insl ficomp pusha jns ud2 cld outsb gs xchg repnz incl cmpsl jp (bad) shrl adc out cwtl addr16 dec addr16 push mov mov jae js imul pop xchg add fnstsw std push cmp pop fs sub push sti cmp pop lea adc sbb (bad) xlat mov mov movsb adc std and and (bad) not jnp andb loope test dec fistpll ss (bad) aaa push jl pushf adc pop scas (bad) or xor cmpsl mov xor hlt mov dec dec insb insb in and mov inc xlat pop mov or push pop rcrb test jmp jnp pop hlt jo inc test and arpl xchg sbb sub iret mov or ret cli stos mov xor cmp out pop xchg test mov or sub (bad) xchg outsl push or shrb inc or add scas rorl jns jle xor cmp inc or ret (bad) cmpsl dec scas fcomp cmc hlt sub in lret lcall ljmpw lret jle mov dec cs pushf sbb push loop sub (bad) xor xchg pop leave outsb pushf hlt aad xor jecxz jmp pop repnz stc mov icebp dec fisubr (bad) jge jbe push and scas or test mov or bnd leave scas pop pusha jo and dec test lock push sahf mov mov mov or call and cmp push movsb mov dec xlat mov ret imul add xor mov iret (bad) mov leave lods xlat xor int3 or xor repz insl popf pop lods mov hlt inc fwait jae dec mov rcll enter imulb mov sub mov rolb jmp cmp enter add popf add cwtl lret dec mov adc repnz ljmp mov push js pushw fdivs jnp jno xlat mull ljmp xchg aas cmp dec in push mov cld aaa jg xchg scas pop stc lock mov pop jecxz (bad) stc sub cli mov mov add out das in insb shrb insb aad test sbb lahf or jnp push jns (bad) hlt jp (bad) shrb jmp cmp test push arpl pop inc xchg repz sbb mov lret scas add das push or ss xor inc pop jb pop dec cld cmpsb pop push pushf cmp aad (bad) push out mov mov push out fcmovb dec repnz adc ja jae loope les xchg imulb pop jg shrl cmpsl xchg mov jp inc arpl leave pop xor loop sti sahf int3 std aaa lahf dec push in mov fmul cmp jle aas jb inc lahf xchg adc mov add mov sub popf lcall (bad) repnz xchg gs (bad) cli movsl or (bad) (bad) ja pop test ret outsl mov mov xchg rcr xchg jno movsl sbb and cltd int3 div push mov mov into fxch mov pop jbe xchg aas lcall imul rcl push fisubl repz in ds lret jne (bad) jns pop jle mov cmp pop or ror mov cmp push add sbb pop jmp clc jmp push sbb mov cmp (bad) mov cmp add mov sbb stc fisubr pop jns push push fwait and daa dec jmp imul clc hlt sbb xor cmpsl sbb into cmp xchg inc fdivrl cmpsl cltd or dec (bad) mov dec clc mov jo fimul cmp cmc lret fdivrp (bad) in imul cs sti add arpl fadds inc mov fld test arpl push out imul call xchg mov pop stos or movsb ficom sbb cs pushf gs dec int icebp sub (bad) sti cmp ret cmp aaa jnp inc mov (bad) sbb mov sbb mov cmpsl fild loop lcall insb rcr ror mov adc sarb xor dec or cs (bad) adc repz adc or xchg jg mov call lods xor mov pop out dec push in or adc fwait pushf push mov sub aad xorl sti xchg xchg push out into addr16 das xchg jmp and add ret stos aam sub aaa fsubr fisubrl ss adc clc rcr push and jnp mov iret (bad) in fstl cwtl imul push xchg out pop mov pop in mov dec mov push rcl mov dec fstl mov rcrl jmp xor mov rcl outsb jne inc fs iret lods inc or sbb mov stc cmpl jb adc je enter fs aam int3 and dec ret dec mov lret dec xchg scas adc xor inc fcompl mov roll jmp inc jp adc repz inc loopne inc jle fstpt iret mov mov loopne pop mov mov xor mov add gs loop mov enter inc mov in lcall shll cmpsb push jmp push faddl test pop adc jns lea loopne add test adc pushl cs push fisttp dec jl jns call stc push mov and xor mov sub sbb and repz adc pop rcl bound daa jbe imul jno xchg adc and cmp rcrb and jno std pop pop xor mov add cld pop fild dec mov xor cmp loop ret xchg push frstor add enter pop (bad) mov sti mov out mov cmc enter movsl mov stos fwait (bad) mov das push mov mov (bad) xor adc out loope jo adc and aas in ret cs mov push cmp and add add mov adc cmp inc testb sahf inc push xor mov sbb cmp clc pop mov (bad) mov xor or mov cmp xchg lret xchg xchg jnp loop push icebp out test inc insl dec lea loopne clc add sbb and sub stos inc rorl cmp sbb sub jnp les add or sbb cmp ds cltd inc test and and jg sahf sahf sti (bad) cs dec dec xchg add push in jns test pusha sub xor test int3 pop in or mov mov and sarb std pop add lods out xchg sbb fwait outsl insl dec out mov fnstsw sbb sub mov (bad) lds and lcall mov sbb and shll sbb (bad) mov flds imul gs mov push xchg jl jnp inc adc arpl roll (bad) jmp or dec jecxz sbb xlat arpl (bad) adc xchg cld movsl scas pushf mov add shlb push test cmp lods jge jae (bad) inc loope test push out nop mov push xor aas adc cmp dec ljmp arpl push add ljmp jo jg pop pop stc sub jae loopne stos bound lods mov test push loop and aas dec sarb sbb cli test fiaddl push sub sbb pop sbb das test mov fsts rolb cmp jp (bad) iret and shlb and lahf ret pop adc add faddp mov insb and xchg mov adc lea movsl mov mov or dec out es mov aam inc cli push aad xlat mov pop cli push mov dec shrb rorb gs testl cmp movsb cmpl adc adc mov xor xchg jl mov mov arpl (bad) int or mov daa out or (bad) cs cmp fnstenv fnstenv jp test mov xor popf ja jmp into dec sahf adc sbb addr16 in aam addb mov xchg or popa jb sub fldenv fidivl cmp add ja dec inc add push mov aaa loopne pop mov sahf leave in (bad) daa stos fstp rolb cmp lcall int3 std cmp fwait or lds pop mov dec (bad) mov xchg sub (bad) notb pop add inc popaw sti outsb lds fstps or leave test lret push (bad) inc jae add shrl mov xchg cld jle xchg sub jge push jne movsl movsl popa lods push mov int3 adc push outsb sbb xlat xor and insb std enter dec push mov add insb lret or add rclb dec fwait or jmp adc inc or or and aad fwait rcr addr16 dec sub sub imul imul push push sub sbb adc mov insl (bad) xor mov shll add test (bad) xor jg jle mov adc fucomi pusha jo mov sub mov and loopne mov mov sbb in dec mov or daa push pop leave in movsl mov jne cmp aaa arpl repz out rcrb (bad) imul fnsetpm(287 xor pop xrelease mov jp insl or es (bad) mov (bad) or push data16 iret lahf jne aas fwait pop or and movsb test ror add jbe jns stos int3 icebp test sbb mov loope out xor stos cld xchg add cmp or mov push add into dec dec mov (bad) mov lods push pop xor pop inc test pop mov lret shrl fldl push add sub mov cmp or push insb jno out inc les imull push push jns in rol sub in ret cmpsl xor push sub outsb cmp into push (bad) jbe sbb in test js mov sti ljmp dec adc or (bad) es add repz in iret mov mov xchg jno mov mov inc aaa push lret lock mov div xor push (bad) lahf push pop push lret mov cmp dec jo hlt mov add pop mov and mov aad cltd cwtl imul xchg repz push aam mov and repz (bad) xchg out test (bad) stos sbb (bad) enter movb lods adc loop mov xchg loopne xor push mov cmpsl int mov mov cmpsb lods nop mov sub setg or sub mov out xchg xchg mov push mov xlat mov xchg lods sub repz pop lods cmp sbb shll push sti cmp cmp aaa cmp cli sub les lret adc xchg xor mov jnp inc or xchg push jle and inc mov test aad push pop cmp enter int3 clc cmp jl addr16 jp xchg xchg or dec insb mov inc mov cmp lret xchg pop movsl into fildl push (bad) sbb sbb lret out sub (bad) adc sbbl test mov pop movsb pop cmp mov push mov (bad) mov jb pop push xor push fcomps es pop (bad) outsl cmp lahf xor (bad) xor push push push or test mov mov aaa mov je (bad) addps addr16 aad jle mov and lods adc (bad) mov rclb sub jne mov inc scas adc mov xchg lods nop addb cmc and mov dec or push xchg ja rcll xor cmpsl into std in lea pop movsb sahf lret fimul popa dec or xchg pop arpl cmp push stc je ret fsts cltd and loopne not sub shrb das in aas lods xchg xor daa cmp lret mov pop movsb data16 (bad) and pop mov sbb lahf faddl shrb mov jne mov xlat loope dec fcoms sub inc add push adc mov fnsave jbe (bad) int3 jecxz pop fstps add jg gs sbb (bad) jb nop cmp jp repnz sub and aaa push dec cmc clc and popf iret ss leave notl fs data16 or sahf xchg rcrl push mov rep sahf popf cld xor das or movsb fdivl push or and pop sahf jl or psrlq (bad) in adc dec inc es inc test stos and jns adc inc dec ret jnp (bad) push int add mov adcb sub pusha xchg mov jbe lret (bad) mov pop push xorb mov ret sbb push jns insl (bad) xchg or dec test cmpsl add dec xchg adc ljmp lods leave inc call xchg in cmp mov leave dec leave scas in add clc stos jg ret lods sbb mov xor sbb in jne mov mov and scas jne sub mov xchg dec and cmp jns jne xor xor cmp lods pop ret cwtl jb sbb xrelease mov pop mov (bad) std test icebp enter adc cld inc ljmp jbe std mov adc push mov sub ficomp cmp cmc jle loop mov cwtl mov add bound or cltd fisubrl mov dec mov and sbb xchg add inc inc sub mov sti mov inc aas fcom lock sub pop mov stc mov in mov adc jne incb lcall push mov pop jns jno in std push add scas xchg mov dec loopne test add and mov mov nop fsts mov push out stc addr16 clc test push jecxz xchg pop enter pop or inc or fs lcall ss sub pop add inc cld enter test test pop push mov cmp sti int pop jle mov mov lds (bad) push adc mov ja inc pop (bad) mov repnz add xchg mov inc mov push pop rcrl xor ss inc pop and pop and jge sub out out out test outsb imulb inc ss loop mov jo inc ds call imul fsts xchg ss mov insb insl and jbe lret repz xchg stos repnz std faddl insl rcr test icebp jge mov push and push dec mov add xor bnd jle and cmp in cmp dec jb pop movsb lods (bad) les dec or mov add adc cmp mov (bad) movsb cmp pop mov mov repnz mov (bad) out and jg jb js pop inc xor xchg fcmovu push mov sbb in adc inc (bad) push test push out mov add cmc mov dec mov shr mov imul mov push mov je iret int3 imul lods lcall (bad) pushf shl sub (bad) repz inc xor inc inc sub ret dec sub sub xor mov (bad) fisubrl mov (bad) ret or sbb (bad) data16 imul cmp lds popf subl ret push jnp mov jo pop rcr int3 xor js and out push push and and dec and jp sbb stos fistl or mov push sbb mov pop cmp iret stos pop mov movsb enter xor jns cmpsl ja rolb mov jne cmpsl adc adc rorl sbb pushf mov fstl ret cmp stc mov push mov or in test xchg push xor cmp mov add sbb stos out mov (bad) dec roll out jl fdivl fsqrt ss repnz outsb mov mov sbb mov pop ss jne jle ljmp push push mov test jecxz js mov and mov pop sti inc fisubr push data16 sbb jge cmp sub sbb jg sub test add add xor test out daa mov stc shlb mov or or pop mov fisub cmc jno cmp or pop or rcrl cmp push inc adc insl stc mov jle (bad) mov test loope int sarb pop daa inc fxam in fs fdivrs xor shrl inc pop sahf cli adc inc ss ljmp in push subb pusha sub inc dec rcll ret hlt jecxz dec cmp movsl dec stos push (bad) mov and std inc out addr16 popf test jno cwtl rcrl push xchg mov inc jbe test std (bad) add push cmp push push ja loope add cmp sbb and pop rclb (bad) xor fldt mov aad mov mulb cmp push hlt add popf and in lret int cld fcomps cmc mov sub (bad) mov mov (bad) (bad) mov js jp push sbb or iret xor sbb mov js cltd test outsb dec push cld jge rorl insl mov (bad) push cmp cmp ss mov cmpsb sarb jnp ret and pushf jo cmc imul xchg mov (bad) lret dec mull cs or adc cmp outsb cmp pop pop imul mov mov pop out cmp dec rorb es dec and arpl stc mov sub iret jmp jne imul lds pop inc (bad) loop mov cld in stc scas (bad) or cmc arpl repz stc dec stos dec stos dec cmp into popa test xchg xlat mov xor jb push cltd mov scas jbe icebp (bad) fstpt sub cmpsl xlat shl frstor scas icebp addl sub mov ss out inc pop popa repnz (bad) or enter dec stc adc xchg insl dec dec push mov inc adc repnz xchg adc (bad) mov data16 mov push push push mov icebp sti mov add or fbstp mov bound cmp call shlb cmp movsl push sub bound push ret cmp out xor dec sbb cli insl call cmp aad lcall (bad) xchg out loopne mov cs dec jecxz dec adc sub push cmp add pushf cmp fdivl loope dec mov and shll fsubrl addr16 outsb add lods data16 stc cmp cmp mov xlat rcr decl aas inc int add daa xchg test (bad) and mov add fisubrl (bad) out das jns aam push mov (bad) frstor divb jno mov movsb gs dec cmc cmp xor (bad) icebp add mov fstpt icebp xor xchg fldcw push in xor in int mov (bad) push int3 pushf outsb int3 rorb push jbe pushf stc cmpsb push mov xchg add add push cmp cltd xchg mov mov outsb push cld call jl cs push ja sub clc jle in lret pop lods repz push push and in imul pop pop (bad) cld inc imulb (bad) jo inc scas ftst mov mov fcom pop xchg fwait pop and gs mov push mov jb loope and daa pmulhuw fcomps jecxz adc (bad) inc stos aad xor push adc xor or enter push xchg das inc xchg sbb jle insl cmp pop dec int xchg aam pmulhuw xor dec sub popf mull mov shll out leave lods jno stc cmp sub js,pt movsb (bad) jo sahf xchg notb popf add mov jecxz mov push jmp dec and and jbe pop or (bad) push xchg mov inc dec add mov ss sub pusha out stc cmpsb (bad) xor push in test push push or pop pop bnd and jbe jbe cmpsl (bad) xchg dec sti xchg jo roll xchg pop mov mov push (bad) sub mov sub pop addr16 ja jmp mov sbb into push out sub lcall xchg bound cld sbb pop scas lods fisubr lcall cmc mov in pop pop sahf in das dec or add std mov push and pop inc sbb (bad) sbb mov ficom push sub repz xor hlt inc in call notb jmp (bad) mov mov pop test sar insb insl sti pushf aad das inc jg jmp ss cltd jecxz mov pop adc mov sbb js cwtl xchg mov out ja sahf fnstsw mulb push xchg sbb sbb pushf in ss aam lret lea mov pusha cltd bound lods andb sti aaa (bad) sti in (bad) outsb mov mov inc ret add jbe jmp sub bound xor mov in pop mov or pop push pop xchg aad bound dec mov add mov arpl mov jmp or faddl xchg push pop mov adc xchg and cmp mov jns mov jp loopne scas mov sub inc mov lret inc jne push mov jl ret cmp xor popa scas dec movsb pop test fcomps ret movsb push repz xor scas and push sub sbb ljmp not and xacquire push ja pop cwtl jmp das xor jl into (bad) in fwait xchg xor inc ds mov dec dec push out dec loope lea push fsubrp mov (bad) xor or pop dec jl mov adc in dec inc ret dec ret inc or xchg or inc imul lahf sbb aam pop push inc sbb outsb lcall repz xchg cmpsl or arpl sub xor dec sbb ja jmp gs scas mov mov mov repnz mov pop lret imul cltd popa aas xchg xor dec or push xchg stc mov cmp sbbl xchg sbb jmp jge jns movsb jecxz jns sarb pop or fs movsl ds fmul add xchg sub incb inc loop add insb xlat shrl cmc push xchg (bad) aas sbb (bad) dec cltd cmp jle or fnstcw mov outsb sub xchg inc fnstsw mov jne fs dec push stc scas jl add adc push jge js out pushf pop mov dec xlat mov cmp cmp subl lds imul mov (bad) loopne and dec mov ds enter pop aas mov ficompl lcall sub lea xor sub stc notb into dec push add mov js inc (bad) mov sbb mov ss add push push ret repnz jo pop dec dec or mov dec (bad) idivb add imul clc loopne je mov scas dec enter in movd and adc dec inc sbb cltd jno stos mov hlt (bad) mov (bad) icebp sbb mov sub push int3 or jmp (bad) (bad) add adc xor dec lret sbb lret insl push and sbb xor (bad) js scas cmpsl cmpl or push fwait add adc in mov jl scas orl daa data16 mov xchg push xor clc rcl rcrb and mov (bad) fsubl loopne pop push fcmovb xor aas js pusha sub lahf xchg mov cmp lock stos (bad) mov mov icebp sarl lods in test cmp adc jns mov enter fistl cltd mov data16 cmp sub mov sub inc movsl (bad) mov shlb cmp sbb mov mov sub add daa sbb insb es (bad) ja gs lods iret (bad) aad jo push imul mov xor adc pop push mov notb lcall xchg loope pop fsts push push push in dec pop mov pop xchg aad jl lret incb jnp pop sub nop (bad) icebp fwait sub mov xor inc mov push dec mov inc jns sub fdivl btr mov inc push add popf scas or (bad) and dec gs cltd and or cmp cmp lds rcl cs lret out mov sub test dec insl in sub sbb (bad) sub je push sub sbb push cs lods or add std sub shr popa dec mov pop cmpsb push aas shrl push push inc insl xor mov mov into mov mov cmovns jne dec ret push fwait mov stc pop test divb push jg and mov pusha stos das inc inc cmp mov bound lret test pop and sbb outsb fwait icebp sbbl sbb jns xlat (bad) loope pop fs pop jns mov add add into jecxz sti fs dec es jns and push xor or mov jecxz cmpsl (bad) jge and or (bad) iret mov fcoms (bad) and call hlt in lods and arpl call decb popa fstps imul dec jnp inc (bad) cmp sbb adc rorb mov jo into mov out push ljmp imul sub fistpl xor cli repz jg mov inc jge insb mov jns inc push in xor test mov in (bad) fdivl and faddl (bad) (bad) pop sbb adc mov outsb xor adc orb cmp jmp test insl sub clc shrb lret cmp cmp or and jg sub mov xchg xchg lret (bad) rclb mov xlat cmp sub outsb int scas dec and fs stos mov data16 push mov xchg cs pop andl mov mov mov ljmp mov and movsl incl enter mov push pusha addr16 push and loope jns pop aas mov lock mov cmpl outsb imul mov mov xlat dec cmpsl mov push push stos sbb push mov and mov lea (bad) hlt fldl cmc das mov jnp cmpsl push cmp mov jge xor fcomps test adc dec ljmp adc dec ljmp xchg jno pop dec cmp mov pop int cmp loope cli lcall adcw dec (bad) shrl adc add sbb cli add gs lret sbbl push bound xchg jns mov lcall imul dec add and std stc mov cmp sarb jbe (bad) or dec xchg fcomip call arpl inc nop pop pushf mov icebp sbb in mov imul rorl js,pn orl insb in and xor lret ljmp push or inc xor jecxz xor mov sti or lcall push or mov outsl out push in outsb leave in (bad) adc imul jbe fisttpl cmp out dec aas cwtl or int jecxz fdivr push mov push jo pop sahf in test adc cmpsl lea sbb icebp lods and jecxz add scas flds daa (bad) (bad) push add inc mov mov adc xchg add jbe cmp jp (bad) in mov inc push push add (bad) mov mov add cmpsb and mov sub (bad) std hlt sbb xlat push mov arpl dec inc push and push push push push les mov es dec popf push out and (bad) mov lahf jae (bad) int3 je stos imul mov inc (bad) fwait mov in sarl icebp call xchg and push repz idivb subl mov fdivs out add dec lret inc sub rclb sti xor js es jl pop cmp jp (bad) jb jo adc jne lret daa push lahf mov ficoml jg mov jmp in fs fsts outsb push sbb pusha pop js push repnz dec adc (bad) and lcall fdivrs jg push cmp mov lods scas jecxz ficom adc cmp pop sub add sbb mov mov (bad) sbb push clc and push (bad) neg in fstp push cmp jnp xchg (bad) push fs push (bad) push pusha adc outsb notb ret movsl imul pop xlat iret add xchg lahf sub adc testb push sbb aam mov into mov out stc sub dec or hlt decl mov push mov cmp cmp mov test jp pinsrw ja ret sti call imul je jne push sti mov dec test fsubp sbb test xchg les xor dec mov fwait (bad) hlt negb imul iret call sbb sub negb sti xchg sub aad push dec fdivrp cmp (bad) and xchg mov sub cltd loopne call fsubrl cmp cmp inc pop ja cmpsl mov pop testl pop pop pop int loopne jp mov xchg mov push movsb push dec and push cs ljmp addr16 dec (bad) lahf or js mov cmp push add jbe pop pop jae push cmpsl xor ja in xor mov dec call cmc cwtl jae in mov jo xchg mov mov xor or je dec adc nop in mov jle mov mov jnp or xchg aam out mov or xchg sar shlb sub std xor sbbb and cwtl stos push fnstcw ja lea jle pop fs in lcall mov sub jae mov push add nop push sbb aaa push mov call mov sbb ja pop mov xchg rcrl test ucomiss fldz mov xchg lret stc popa and sub popf mov enter imul adc mov push or or (bad) mov movsb incl adc loope xlat int3 mov xchg outsl popf mov xchg push scas pusha sti (bad) xor lret jb mov cmp sbb les inc adc cwtl lahf aam inc ljmp rcll jmp inc imul adc pop push pushf enter xchg (bad) cld push mov addr16 mov sar mov pop add shll outsl fwait mov mov popa cld xchg cmc mov out jno and xchg xor inc dec mov push xlat test aas sub xchg cwtl xchg das imul enter sub and mov push push popa repnz jmp ret cmp cmp or dec pop cmp inc push (bad) loopne pop (bad) hlt sbb dec push and cltd roll packsswb pusha (bad) xchg cmp int3 les push fbld leave sub arpl dec (bad) leave fisub pop and iret sbb xchg and xchg dec outsl jge push mov outsl pop xor or push or and int3 pop lret fcomps sti sub loop mov jle insb adc mov pop cld sub testl aad inc cltd mov icebp sarl adc jb lock jbe inc add (bad) mov mov fcmovnu loop pop fiadd mov loope xor pop xchg sub mov rorl jb repnz or les mov push std xchg push cli call pop inc sbbb jmp loop lods push xchg mov ja (bad) cmc fistl arpl jle stc jnp fldt xchg ret scas js mov jbe sbb ret inc xchg fnsetpm(287 mov hlt inc pop cmp or sti add sbb cmp mov cwtl inc adc (bad) enter add adc es das dec or and jno xor cmp test stc xchg lock arpl dec insb dec iret push pop addr16 inc jg arpl ror movsl cmpsl dec mov ja loope jo or mov (bad) mov int3 cwtl adc xchg fadds insb mov pop pop cmc cmpsb push sub pop sub cs mov daa pushf cli jge aaa inc ret leave pusha cli pop xchg popa (bad) mov and fistpll int icebp sbb mov ljmp nop xor es lret mov and inc cs cmp pop je add inc or sti (bad) (bad) jb lret outsb sbb in outsl fdivrs pop shrl sbb movsb test sarl mov imul lret and xchg push aad popf mov mov repnz mov int in mov stc pop xor jecxz jo sbb dec (bad) or (bad) pushf adc lods vpunpckhdq sub (bad) out and (bad) addr16 or shrb or add jno pop je inc xchg push sbb pop jae jg fwait jle add sti push inc (bad) mov popa ret fdiv mov divb xor jae lock mov bound in jae cwtl loop int (bad) arpl jns cmp in adc aas pop rclb insb cmp repz je test movsl inc fcomi inc lea fs add fcompl ficoml mov jp xlat sbb lahf insb adc aad lods mov lock iret mov xchg mov fbstp nop mov add add std xor add loop out push daa mov ja loop sti jg sub insb pop idivl xchg test outsb outsl pushl (bad) jmp adc lods mov incb aam jnp sbb les popf inc (bad) fdiv dec mov sub push push cltd pop (bad) js test pop pusha mov aaa push cmp push pop iret cmp or or sbb and and and jmp cmpsl (bad) ret loopne inc jnp rol xchg inc push mov jle cltd je pop cmp cli cltd jne push jno inc pop aad adc mov adc mov inc adc les or xorl lahf mov bound lods mov aaa xchg popa lea sub adc push or and ss movups mov in jno ret jno mov (bad) mov js mov lock xchg push push pusha lods sti mov pop ja xor xor sub ret jmp ret pop insl icebp xor jae lret popf and mov outsb xor jno xor lock jl jbe ret stc insb loopne mov adc mov int3 push inc call fs push sub push negl xor push push test sbb mov jne mov lcall clc sbb lret and sbb sub add mov stc cmpsb mov sahf repz and push cs jmp dec and jg fstps loope ja cmc sbb or pop insb mov mov inc pushf js cmpsl cwtl cmp adc pop lret scas fsubrs cmp jns rcrb scas fldl pop stc fwait sbb aaa pop or and xchg mov add push cmp mov (bad) lret pop (bad) dec imul out and das jge or xchg and loop (bad) push sub pop cmp push cmpsl scas push push or push xlat cmpsl aam popf aas scas mov (bad) pop xchg jne and adc push jp mov sub icebp (bad) jle push test fwait xlat pop jp inc cmpsb (bad) jne pop add jle fisubr xor add out in jno jle jne lahf jle,pn mov pop xor pop mov mov cmp pop ret adc jge push mov cwtl loope aas mov shll cmp xchg adc nop (bad) jo pop sbb or mov fdivl cmpsb inc add pop cmp mov dec rorb mov stc mov add cld lea jae xor jl sahf stos adc sbb bound inc adc pop in mov jl add mov dec lcall add jecxz mov mov inc (bad) jo (bad) and push mov jns inc scas mov dec mov mov repnz pop inc imul subl push test shrb imul fsubrs dec pop and xchg jo int rcrb jo dec sbb les mov (bad) scas fldenv push lret cmp adc pop idivl fadds xchg sbb inc mov mov xchg (bad) mov into (bad) enter xor jp sub clc faddp pop or je mov (bad) xsavec mov sbb lea mov (bad) clc sub adc inc jge jne add xor mov xchg add pop outsb and xor mov gs inc pop push push xchg jno push mov rorl (bad) xor sbb ja stos ss fildll aam push add rcrl mov stc sbb outsb aad cmpsl mov js in test xchg stc xchg xchg adc inc add in sahf xchg shl lret push adc dec out mov nop jb xor fnop cs cld cli jno mov mov inc (bad) push aaa xor out cmp add inc pop jmp sbb mov cld jne sbb test mov test insl inc jmp imul sbb inc sbb hlt clc mov iret xchg lds scas std jmp jge fcoml mov mov lea lock lods ljmp (bad) push in cmp sti mov (bad) fsubrl adc xchg movsl push and mov aam push push sbb sti xchg (bad) jb and leave sbb pop push xchg mov dec call aam mov pop sbb xor test xlat xor jns jmp cmpsb sahf dec sbb adc sbb inc xor (bad) dec xchg and push bnd xor jns add test fwait xchg adc enter aam lock push and cmp pop sub fdivr cli xlat add icebp mov xor pop loope bound dec jnp pop pop incl fcmovnu (bad) mov daa add ss adc mov and sbb nop (bad) mov adc (bad) cmpsl fcmovnb mov cmp mov hlt mov pop cmpsb in das mov pop cli adc sbb xlat fidivr inc pop sbb (bad) inc push jne add push aas jb lcall mov ss gs adc enter inc or jns das lds pop notb aas leave xchg push hlt dec mov mov xchg mov lods imul or stos (bad) (bad) dec jae loope out xchg cmp push mov xcrypt-ctr cmpsl pushf or (bad) jl scas addl xor xchg mov jbe mov push cmpsl out mov icebp cmp pop mov retw mov fwait outsb adc mov cmp bound cli and fisttpl scas jne jne aaa sbb mov rclb jecxz xor mov subl rcll lahf int3 lcall mov jmp int3 mov arpl popf lret mov sub mov sti dec adc int inc pop add sbb sbb push adc mov scas (bad) pushl or in jg dec (bad) fimull (bad) mov fdivl je pop pop adc inc push push mov ja out cmp xchg push push mov test aaa dec push lret ret imul rcrb mov add inc xchg fwait jl jb and sbb out andb in jns (bad) aad orl xchg pop stos inc bound call les daa inc lds push sub mov push push xchg mov addr16 jno mov mov push test gs cmpsl lret dec xlat push test test push xchg cmpsl xchg push pop std nop mov mov out mov adc pop xchg lods xor fmuls mov mov cmp out (bad) fisub pushf lahf add cmpsl mov xchg and pop rcrl cwtl aad insl xor cmp in rcl sahf movsl xchg add sbb shrb adc sbb cmp pushf cmc add add and jl inc fs jmp fdivl scas je or addr16 test or sub mov and enter cld or dec pop dec xorb add cmpsl pop movsb fnstcw dec lock add (bad) je mov jle lahf push sbb outsl mov xor or (bad) pop sbb ret mov xchg mov inc popf mov fidivr ja dec aas push xor lahf dec lret sbb add cmc pop dec in test ja ret sub inc mov lds cmp dec pop jmp inc lahf push inc mov push inc inc push push push roll shlb adc inc dec pop dec mov pusha push stos loope xchg add fsubrs rorb (bad) xor pusha icebp sbb mov or jne add and (bad) jb push (bad) je pop aam lock or xlat jl cmpsl xchg into mov mov mov cmp enter cmpl rorb outsb push pop (bad) insb mov mov adc xor (bad) into adc bound xchg fs insl data16 fadds jnp stos test rorb stos push mov gs adc jle sbb int3 push add dec cld inc lods sub inc or sub xchg fs jmp out insl cs in push out ror dec cmc ja lock push mov add pushf dec cmp test mov hlt pop dec mov lret lods pop das (bad) in push pop gs xor addl push jl repnz sub xchg push arpl scas cmp in push sti ret ljmp roll cwtl stc inc mov call fldenv repnz cmp fs out or and es movsb cli jmp push pop std fcompl push test pop aaa xchg cmp stos xor sbb xchg and (bad) pusha or out sub ret sub add sub (bad) mov cltd push sar sbb sbb in jmp jo xchg gs pop jecxz sbb mov lcall lahf popf mov sub pop bound cmpsl fisttpl xchg push lcall es pop xchg aam sbb int xchg cld xor div pushf push ds push mov cwtl dec mov or cmpb fbld pop icebp jo,pn loope test outsb dec call cld xor hlt adc aaa arpl rcrb shlb dec adc xor xor ret sbb sahf (bad) mov mov xchg or leave mov lcall mov xlat pop mov jmp push xchg mov icebp pop rcrb mov jmp mov adc sarl iret in pop (bad) outsb xchg and pop xorl fnstcw scas sub js sbb mov adc arpl fucom jp sarb cmc jmp inc lea std pop shrb jle cli (bad) out out test fs dec iret pop stos push loopne inc sub push movsl out push bound mov add insl mov loop sahf or test mov arpl cmp dec mov cmpsb les or ja insb mov mov add ljmp jns and pop xchg mov mov mov dec rorl push xor and jmp sbb mov xor fmull xor inc add fwait push push repnz fidivl stc imul sbb xchg and xchg ffreep lret sub pop sub push out mov ds inc test push pushf (bad) repnz dec push cmp jae cmp cltd jl sub roll dec pop nop and or imul insb mov inc lret push sbbb iret push subb pop and add subl lret ffree and stos test mov or test in data16 jmp leave imul outsb push dec and into and repz imul jecxz cli push movb outsb and jne jns and xchg leave push jmp test mov dec sbb sub and repnz aam jae call pop imul sub es js idivl aas sarl call out jle cmp lea pop das sbb subb arpl jb movsb inc cmp push les push add subb aaa and movsb rcrl cmp pop fcoml addr16 lods cmpsl pop inc test inc dec addr16 mov fwait jecxz or js ds in push decl and mov add incl sub jge cmpsl xor (bad) cli cmpl lcall ja adc push ljmp ret out dec inc jecxz lds lods sbb ret jb mov mov dec push out jnp mov fistl sahf loopne push sub xchg mov mov into hlt imul mov rol sub pop mov push mov ret (bad) xor cmp inc add sub mov xchg push or adc mov js or lods lods mov (bad) mov push push mov jo dec sub push jnp pop lods ss popf (bad) mov adc inc add mov mov adcb aam sti sti shrl pop jmp not ja push sbb fcomps (bad) adc pushf jns test adc sub mov fwait stos mov xlat cmc ja mov mov cmp dec notb popf mov inc mov (bad) xlat cld xor sbb fmull aam sub push pop push hlt pop dec adc jmp pop jno test jle xchg ja lods dec mov pop inc sub mov outsb ret fsts fiaddl dec mov arpl jae mov or mov das sbb push and (bad) mov xchg mov xchg xor adcl jmp push push xchg dec enter mov cmp gs xor mov fcoms pop cmp cmp out insb pminsw xchg iret xchg dec mov fcmovnb lea jl (bad) sbb pop lea icebp stos xor repz jno,pn cs out dec jge rclb ljmp (bad) fiadd jne xchg push cli and lcall sub push rcrb imul mov loop inc rolb mov popf cmp xchg out push sub dec mov jecxz insl push fs xor (bad) adc das mov (bad) dec or scas rorl loope xchg push jle dec push cmp fdivrl jae (bad) test enter pushf jle dec sub pop lds dec pop daa icebp inc cld incl xor push movsl mov push cmpsl xchg jns imul mov test xchg xor aaa movsb scas push mov rcrb inc push jecxz test enter mov shrl fiaddl (bad) ds std loop jl (bad) xor cmpsb sub xchg mov inc cmpsl rorl or jbe lds jbe dec lods mov sub ljmp lds jb jnp or fldenv std pop test adc xor cmp dec movsb ljmp push jge inc in aad mov repz ret add rcr dec mov add cs and xchg (bad) enter movsb xor push xchg jnp cmp (bad) sti sub push cmc mov xor clc lea cmp insb cltd sub ds sti icebp add mov or or push mov push lret loope fidivr pop mov pop notl arpl jne or daa add stos adc addr16 call inc pop add call out std cmp lods mov movsb (bad) int xor sbb sbb div xchg aam mov aam lea mov sbb stos pop sub mov pushf pop (bad) mov inc out mov incl jns hlt insb addl iret push mov mov cmpl loope mov inc stos repz mov hlt push mov test xchg (bad) xor dec add popa mov fcomps leave push or mov mov clc inc sub pop stos test cwtl sub sub insl or xchg add sbb aas aam hlt jl sub inc repnz sbb xor mov xor push xchg arpl or in fwait loopne pop notb jg stc sub sbb outsb mov insl iret xchg scas imulb stos cmp mov xor daa icebp stc dec (bad) dec rorl stos cmp scas lods mov adc or call lret stos loopne mov push lret mov inc sti mov xor into jmp add in out adcl dec inc lahf lods es or daa aam leave xchg mov and push and push adc add test pop inc aam dec popf push fwait mov sets mov jno jmp pop shrb dec test pop sub mov inc push (bad) fs dec mov jb xchg xchg loop mov leave mov sub jbe mov or xlat (bad) mov push xor push jl mov push test sbb fldl push mov inc mov push xlat jno loope std dec xbegin mov push push sbb les icebp lods out dec (bad) (bad) ror (bad) jnp push push xor (bad) sub mov jnp movsl mov cli call cld sbb push lcall loop ljmp jecxz or pusha fistp add sbb outsb xchg popf cmp inc mov hlt xchg js in sbb jge and mov fwait (bad) sub cli mov inc into mov popf jl push std (bad) ss hlt adc xchg insb dec lcall mov push aam pop scas or mov jmp je lods test (bad) vpsubsb xchg sbb xchg dec jecxz cmp push sbb sahf aaa sbb mov cs jbe ja pop pop cmpsl popf shrb nop inc xchg pop mov shrl inc imul mov sbb push inc fcom cmc pop mov jge xchg mov negl cli popa gs aaa inc int3 aad push insb imul mov lret inc ja rolb subb bound cmp popf lods test and jno push adc mov shlb int sub push outsb push rcll rorb int test in lea mov jle xchg into jecxz insb cmp pop cmp arpl out mov and jge int3 sub pop rorb inc addr16 das adc push cwtl je push and pop push xlat jp clc pop subb sahf arpl js imul ret jnp mov jns and (bad) mov scas inc cmp nop fcoms (bad) js roll or pop and nop fs popa mov aad adc pusha xchg shr test hlt inc roll sub stc mov pop push add call mov adc insb push sbb daa push adc sub or ret jg imul push add jge mov popa push mov adc sub lock pop or scas dec sub lds cld fistp call and sti inc mov lea ss call jbe cmpsl ljmp or and stos push inc inc stc test lret insb mov or int3 jae xor add mov xor leave andl ja scas xor icebp jbe mov cmpsl sub rcr inc jnp adc lcall aad mov addb inc jb adc push inc pop lods imul push mov pop enter orl insb cmp inc lahf adc pushf mov push xor in ss hlt adc daa jecxz mov mov jecxz pop aas push std cmp mov add jl cltd (bad) mov push loopne decl sbb push enter repz jecxz fisubrl mov enter in bound lock cmp (bad) or or lea in sbb int xor scas aam push ficoml lcall ret mov ss cs jge insl inc inc adc mov pusha adc mov sub or and adc mov cmpl mov mov rcrb dec shrb mov in addb inc or mov sub in movsb sbb fistp popa bound into push pop cld xchg into pop jb loopne aad scas dec sbb xchg cwtl aaa push hlt mov and and mov jp lret sub insl xor mov sub addr16 jne adc cmp xchg push fucomi fwait mov iret das aad dec mov mov mov stc std mov mov push xchg inc arpl js test sbb cmpb insb jmp xchg dec xchg sbb fsubs loope adc test inc mov push jno or pop into push inc in cmc jp fist cs xor inc sbb push mov rol mov cmc fcomps scas adc hlt mov and mov xchg xchg stos popf xor pushf mov loope out mov push mov repz insl (bad) jp mov hlt loope jno mov (bad) cltd or (bad) cmp call out jns scas mov jl pop iret xchg das subl (bad) and mov push (bad) popa cmp mov and fdivs lret jecxz test rorb mov lret inc insl jne sub mov push sub stos rorb pushf mov inc (bad) sub lock xchg daa test jecxz lret arpl push fidivrl add (bad) jb mov push (bad) cwtl mov xchg inc (bad) leave js in inc popf xor (bad) enter sahf in sbb adc in aaa ficompl jbe outsl inc add outsl fwait inc pop ss imul fldt lods or repnz outsb add mov jge pop in push nop idiv cwtl mov cwtl je xchg clc std dec pop ds sarl jo add lods mov fisttp jecxz (bad) sbb xchg scas cmp imul (bad) mov inc mov xchg xlat (bad) stc cwtl in mov xchg xchg pop lds rolb popl jno addps adc lret pop pop adc or leave fildl mov insl add cld pusha dec pusha out pop xlat sub cmp push push jg fdivrl dec ljmp adc in movsl inc pusha inc cmp lret in xor and sub call adc imul jl mov jno lcall lea push inc dec jae je push ret pop mov aaa mov inc push inc sahf add inc dec push sti jo (bad) divb pop js in mov aad mov fsubrp call clc push cld add dec cs cmp in cmpsl into lret sub loope jecxz (bad) rclb arpl pop pop sti repz jmp cmpsl sbbl push or cmp pop dec push xor imul icebp or sub jg cs ret xor xchg xor mov (bad) mov subb adc loope cs and sub (bad) or push mov lcall leave push jl or sub movsl imul xlat inc insb aaa cmp or mov jle inc hlt adc js and lret stc pop inc scas push lret mov mov xchg jg aam es jns add push int3 xchg inc mov lret mov push xchg cwtd mov jmp shr aas not jae gs fidivl mov inc mov or jg,pn xchg pop sub sub imulb jmp xchg cmp mov dec ja aaa jl ds int3 xor sbb je or sub cvtpi2ps mov jne push stc jl dec stc cmp imul jmp dec outsl jmp pop jle dec clc xchg or in mov flds insl inc pusha call sub sti mov xchg or repz sti popa xor adc jbe jge xor pop jl adc imul (bad) je dec xchg nop lea pusha pop hlt ja and lahf add add ds mov lock sbb xchg out js dec jge imul jb and inc (bad) aam xchg pop pop rcrl xchg cmp or popa cmp dec or sbb mov add push dec lea jg out jbe movsb dec mov cmc rorl lcall cli inc aad xor (bad) cltd cmp jae cmovns fimul mov push push push (bad) xor aas pop lock mov ljmp xchg test aaa and insl cmp shlb (bad) test int inc adc or cmp out push jns jbe mov or xlat imul cld ss push into test push fldcw stos daa jmp out add xchg inc mov loop loopne xlat ds mov cli xor js dec sub mov pushf (bad) xchg out dec inc or dec iret lock loop out push sbb jae cmpsb jmp sbb and jae shrb lock rclb adc dec pop lret pop movsl test js push jo out dec xchg sub add mov dec push frstor xor sbb xchg test mov aad inc adc add or sub or dec xchg int3 xor rorb mov movsb mov fwait call scas pop mov (bad) repz sarl add fwait jno mov xchg jnp lods xchg imul test inc leave cmp jbe xor je xchg push aaa xor je (bad) push push lahf sahf push mov or mov mov jl stc mov mov xchg (bad) xor mov ja inc cmp fstl mov divl mov and cltd ja jge loope mov mov lcall scas lods rcrb cmp jns loope gs mov sbb inc sub cmp lret xor push cld xchg sub dec jae lret test or push les push rcrb jo inc add jbe mov sub lods sbb xchg outsl ret inc ret loopne add dec lock xor (bad) cmc add movsb dec mov imul loopne (bad) sub cmpsb imul mov cwtl push (bad) mov mov pop imul and sbb cmc push cs (bad) or cmp scas mov inc inc mov add daa dec push ss pop add pusha or sti out adc sub popf add pusha ss and inc add cs or and je and jmp or ja mov pushf mov gs lret lods js (bad) in push pusha rcrl das jns dec hlt dec in mov inc lcall pop dec inc add movsl mov lahf sbb (bad) lea xlat idiv call fwait in mov push fcmovne idivb movsl shrb inc daa pop iret fsubl xchg adc mov jo adc xor push xchg js outsl aas adc inc mov xchg pushf out mov negb sbb shlb push in fdivrl jno test push ret int3 mov pop enter xchg leave jae adc push and popf rcll mov sbb icebp pop lret mov or fnsave outsb xor fcomps xchg cmp add mov lcall in xor lods push leave iret jmp shrl dec (bad) icebp (bad) out fucomp out hlt outsb fisttpl jno mov inc das loopne sub and cmp pop and in xchg lock jg xchg pushf sti mov mov and mov push rclb sbb push sbb sti std lcall insb or fiadd add flds stos pop jnp rclb popa push clc push push stc inc push das push xlat sub test pop xchg (bad) arpl jmp dec jbe scas pop inc mov lcall mov pop jbe or inc jb xor aas (bad) dec or pop sbb cmp jp inc add xlat push (bad) or ss (bad) std out dec dec jno lret xor dec test dec shrb and fwait shll icebp xchg insl cmp and mov testb sar jb adc dec cs mov leave cmpsl sub pop fs mov scas mov popa sub icebp pop mov js jo ret mov fsubl pop roll shr (bad) in incb inc xchg ret scas pop xlat pop pop jecxz dec movsl inc mov lahf lock adc xchg xchg ljmp adc sbb cmpsl stc mov or sbb scas cmp adc pop cmp jl mov sbb inc shld sbbl loope sbb in in ret rcll aas sti ja xchg sbb rcrb insb dec paddusb cwtl lahf addr16 test mov adc mov or (bad) pop popa push lock cmp inc fnop or gs rolb cmp ja fldcw sti imul je push xor sbb lods sub fstps adc or jge lahf dec or cs je sbb lods (bad) sbb lret dec ds dec pop das (bad) gs mov aam lds mov and movsl test pop jbe jnp push push cmp dec addr16 add dec mov and in mov xchg addl arpl mov push or xchg leave test rcrb add loopne inc test and pop adc cmp std pushf mov adc sub movsb nop in cmc push xor mov insb mov push cmpl pop test in int xor js push sbb ret jg inc sbb adc or ja sti xchg xchg rep std dec xchg jns ds push test mov and sbb or xor mov pop divb jl andl scas jbe inc decl enter nop sbb xchg jbe cmp xor cmpsl nop sbb inc jo mov out stc xchg (bad) rolb roll paddb mov (bad) mov popf stos bound sbb repnz (bad) ljmp lock pop mov xor decb fstpt mov in mov cmp sbb (bad) shll mov push cmp mov inc xchg pushf inc xchg dec mov (bad) fcmovne mov fistpl stos mull pop push jg inc cmp dec fisttp lea (bad) pmuludq mov cmp aas addps mov mov fidiv mul ss arpl out data16 mov inc inc cmc (bad) dec (bad) ljmp pop xchg loop inc (bad) cmp lahf jb jne loop push or add lret test mov mov jecxz jb pop dec mov out and jnp fcomps add or or fstl or mov clc test (bad) jae inc dec or or ljmp popf mov jg jo ja mov jae mov leave lret mov pop sbb (bad) sbb xchg js add outsl and xchg (bad) xchg mov pop sbb sti and jmp sti lret pop adc and fldt mov gs sbb shlb loop and iret roll pusha push out imul sbb pop int3 xor cwtl pushf sbb icebp add mov fwait cwtl inc add fsubrs xchg pop je out daa mov mov repz stc fistpl dec fsubs push out js mov lahf adc cmpl mov ds test xchg mov popf leave iret js aam lea sbb pop inc push es mov push lods and das pop test test std stc mov lea xor push xchg outsl xor aaa fistpll push cwtl push push xor fsub and andl pop jb lahf mov jnp out lcall mov push pop mov ret lret aad mov aad (bad) aaa pop cld xor mov or rcl add and movsl xor adc xor cli push mov xchg ja cmpsb or pop test orb or les sub rclb scas adc sub mov imul lcall icebp jp mov and sti push popa jbe push mov xchg add clc and dec sbb dec repz (bad) (bad) sbb jb sub xor xor sbb lret cmp mov push in inc mov push pop mov je mov pusha nop mov rcll movsb das jge sub addl mov xorl aad (bad) std adc mov and pop pop jnp dec add pop sbb cltd or (bad) push lret (bad) repnz sub push mov push cmp pop jnp dec cmp inc scas inc movsl aam outsb stos fisttpll xor clc lret mov (bad) scas jg add mov lret (bad) fnstsw sbb jb push xor ret jae mov cmp mov xor inc mov ss jl sarl pop nop add bound inc xchg xchg std mov dec or test cmp mov push lea lret stos outsl add or ret inc jae mov fwait xchg push jb pop ja ljmp sarb cwtl mov (bad) mov hlt mov push dec xchg into icebp inc cmp negb js mov dec cli sub push xor mov push sti lret scas aaa sub push aaa mov push repz inc jo sarb (bad) (bad) or mov ja,pn cmpsb xorl aas lods jp pop stos lret aam sar add stos mov mov sub das push nop and jle add jnp repz sti adc inc in mov dec jo mov into dec mov fwait pop call push mov clc sbb hlt jae push mov fwait or jae jmp mov repnz clc dec testb push out pop js mov in adc int cmp adc iret jp sub scas ja add mov xlat stc cmp leave in je inc call (bad) sub pop push out in addr16 jne fwait sbbb and xchg push jae aaa xchg hlt gs out xor mov mov mov fsubl xchg push daa jp and mov sti pop cmp sbb arpl push cmp adc xchg aad cltd sbb stc adc dec scas push fcompl lahf enter out xchg mov rclb or inc sub or out dec js loope lahf inc dec adc stos sahf dec inc dec cmp mov adc imul repz jb cmp inc mov (bad) xor mov ret jo add cmp dec rcrb jne add inc std fisub shl hlt and jecxz arpl shll fmuls in xchg pushf das lea mov jae test arpl subb test hlt (bad) aaa mov inc sbb jb stos add mov pop inc in lret iret inc add xor dec movsb dec stos inc cmp add in cwtl fs ftst and lods je insb or test pusha xor sub (bad) jbe das ret ljmp ret sub and into les gs popa mov pop mov insb daa or pushf xchg dec xchg fnsave jg xor push jo test ljmp movsb adc xchg sub jns push ja mov icebp int fs adc (bad) cmp push divb mov (bad) lcall mov ljmp sub bound lods mov in push scas xchg rcl cwtl stos sahf sbb add sbb xor xchg (bad) fadds adc mov jmp repnz push mov sbb pushf push js cld or fwait add imull add mov out leave push outsb jb and jb lret dec ficoml jmp mov hlt aam mov add clc or jae ficomp pop ljmp leave hlt icebp mov clc jl popf mov adc mov les dec sbb insb ret std adc pusha cmpsb dec cmpsl movsl test jmp dec jmp lods pop add push xchg ja xchg or dec inc pop adcl les popf rorl dec orb push mov dec xchg sbb hlt jmp adc in cmp sar insl cmp xchg clc pusha adc lods test in testb insb xor jnp mov jmp adc cwtl fisubl inc fimul xchg jnp or mov in push (bad) rcll dec lods sbb test inc push cld sbb movsb xor jmp (bad) fadd pop jne insl pop add faddl mov mov daa int cmp add cmp jae pop gs add push int3 test cmp mov push imul dec popl jp cltd mov jb loopne push add addr16 cld insl inc cmc jmp pop xor jle loopne cltd or (bad) pop je popa js xchg push (bad) sbb inc sarl and icebp push mulb add loop ds or mov xchg outsb cwtl jmp ret jno xchg xchg aad mov lret mov cs mov jle adc lret rclb outsb bound mov daa cmp cmp and cltd mulb adcl arpl ret push cs sti xchg and arpl jmp scas loopne adc and dec jnp ss ljmp aas or mov mov js sub pusha cs mov xor aad push or stos pop mov cmpsl inc push addr16 shll xchg iret mov pop jns ret jecxz xchg sub sub mov sub mov and mov enter int3 test xchg fwait push cmp adc jbe cmp mov fmul push out add dec enter les add nop add dec push daa loop sbb sbb repnz xor cmpsb mull loope jg or test inc add dec cs xor push std insb inc std and mov rclb or push sbb fdiv add pop inc add in jne cmp jl adc cmpsl jo and les sbb xlat lds arpl rcrl mov nop adc and arpl lods pop or xor or mov xchg add sub shl mov ficom inc mov adc in jmp xchg loope xor movsl in leave jbe hlt fmuls xchg push fchs (bad) or cmp jbe adc mulb lds mov add push outsb inc xchg jl cmp addr16 xor add lock pop cld push shlb cmp jno cmp daa mov xor cmp or sub mov roll je jp xor (bad) jmp push lods adc mul loopne and cmc mov xchg dec jle ljmp dec lret mov add or out ja cltd (bad) mov adc add fs pop mov or push mov and nop pop push es stos mov or hlt lret (bad) out mov adc lods mov jecxz ret pop cmp (bad) int3 divl js jp xchg push popa sub sub and push repnz push ficompl popw dec call mov jecxz in rorl pushf sbb fcmovnu lahf (bad) cld rcr (bad) adc fs leave sbb jb mov and lcall scas stc cmp jae jae loop mov xor xchg in or into push adc sub rcl pop aam ret push movd pop xchg int repz movsl push push sub or stc mov aam in inc test mov cmp xchg pop dec fistp inc loope loopne cltd mov cmp outsl mov sbbl cmp add repnz rorb pop repnz cmc pop jmp jmp pop jae pushf pop mov mov mov mov dec xlat push mov arpl scas cmpsl aad out xchg movsl fcomip xor or xchg or dec cmp or mov inc std aad jne or sub pop push or pop push push lods dec pushf (bad) pop cmp in xchg sbb inc push sub insb pop (bad) lods mov loopne pop (bad) ss mov cld jne popf mov jp jns cmp jae inc inc loopne pop outsb jb jecxz lret into ds mov (bad) (bad) ja popf xlat cmp cmpsl int3 and lea sub adc jb stos (bad) jb jmp push frstpm(287 lock xchg aas popf sbb ret dec sub xchg inc enter rcrb jae mov mov (bad) jg loopne mov icebp dec sbb (bad) out mov adc outsl fstpl or leave jg push mov ret in jae sbb in rcll int lret dec fldt fwait stos cs lcall popf (bad) imul or push sbb and test mov adc (bad) sti icebp jge mov cmp mov movsb inc push fisub lea repz imul cwtl aas adc (bad) fdivl scas sahf imul push pop cltd loop aaa pusha push dec jnp jp bnd mov dec stos aad aad mov mov cmp mov frstor shlb push jecxz ja dec repz bound push into test dec xchg mov adc cmp repz (bad) dec mov loopne xor push xorb mov test clc and xor pcmpgtd mov jne cmp bound fimul scas jb movsl mov frstor test sub rcrb loope dec xchg clc lahf and ljmp push jbe les hlt repz inc xlat cmp lcall sbb lret fstl popf lea stc les rcl pop lret iret pop mov mov inc sti das cmpsb sub lods pop shrd jge and aam js lret xchg jmp ror mov pop mov inc push rclb ret mov andl push pusha fwait mov mov pop insb cmp push cmp inc mov jmp pop hlt in pop add scas idiv ficomp pushf mov cs in scas lret cmp (bad) or add push xchg scas add cmc mov pop stos stos test fs mov ret fist add push test fwait leave test inc push je loop push adc es mov dec icebp je mov sbb push repz pushf mov idivl hlt mov (bad) jecxz mov adc sub xlat mov shrl mov jnp nop sbb sub sbb adc jno stos sbb sub fildl std mov jns (bad) push xchg xlat mov sub xchg mov cli cmpsb (bad) in scas mov lds adc mov adc (bad) cli push ret inc in xchg sbb pop mov pop sub test jnp sub popa cmp pusha push dec add cmp in outsl shrl (bad) jp and and js mov xor ret push dec icebp xchg repnz cmp cmp test adc js fwait push fwait xor adc push int pop std daa xchg push inc jmp addl (bad) push xor shrb sbb cwtl cmp fldl mov mov mov push imul or les out fwait call int push jecxz cld dec (bad) mov sahf push aam fsts adc push (bad) mov sti outsl sbb je jne cmc xchg out in insl scas inc xchg mov sbb pop mov jle or sub sbb mov mov jmp sub dec mov mov pop mov fwait mov pop fwait dec sbb sti mov fs lods dec push negb cmp movsb movsl (bad) clc sbb int movsb icebp fdivl add mov frstor inc cmp fisttpl insl adc adc (bad) nop jb xor or pop mov mov shrl inc inc or sub or pop out mov dec jmp xorl jno fadd sub scas cmp in add pop cmp (bad) repz das popa scas cli xchg mov adc scas js icebp mov adc push dec push mov (bad) pusha daa pop mov cld jns fadds mov adc test shlb mov xchg out sub mov test jno rcll je jl in xchg lods out inc sbb jg sub ret stc pushf cltd stc gs mov call pop push pusha (bad) adc or xor adc push sbb insl add lahf enter sub (bad) lret jecxz mov in push dec and adc mov outsl pop pusha rcl dec (bad) fcmovbe push cs sbb cltd xchg fstpl sub out and cmp imul pop fwait pop fwait aad cmp fdiv xchg push in iret sub mov cli (bad) mov mov jns sub and push push mov fwait push dec mov mov adc xchg sbb adc test push (bad) fsubrs sub or adc (bad) in jp lds sbb repz popf mov std cmp and in fcomps jg loopne fadd and xor (bad) (bad) xchg xchg xorb (bad) daa dec pop add mov hlt pop jge xchg xchg pop push and pop int mov lock adc mov xor cmpsl fwait movb fldcw add xchg and xchg inc dec mov sahf and lret aas dec sub or sbbl sub pop inc mov inc mov out xchg or lcall fs mov sub andl dec lea fldenv stc ja xor mov les dec cmpsl and xchg mov stos adc out cli mov ss fimul jmp loopne out mov rorb in mov enter in es cmpsl adc sahf sub iret jno aas cmp lock addr16 dec jbe push test or sbb and bound fsubl cs les pop lock mov push arpl roll xchg sbb popl fsubrs fldt push and push lods add xor in push je out cmpsb and es push mov mov lods adc add mov mov lahf jno arpl push dec mov int3 sub das push add jp fiaddl xchg inc jbe (bad) jp repz idivl push pop gs inc cmp xor sub out jge nop adc inc mov mov outsl xor repnz mov ficoml add xor lods pop insb dec icebp imul jno (bad) jns jnp xlat cld out lahf mov push dec in in pop and push pusha daa push mov sbb push xlat shrl imul and and mov aad jnp mov mov test stos xchg xchg neg cmp jb les aaa roll dec push dec stc lods pop xor pop lock dec scas iret cmp das aam ljmp jg push sub jge jg xlat push push arpl dec mov iret je inc aad test sarl and push out xchg popa pop out mov inc fbstp testl popa mov aas ss ret xor hlt (bad) notl sbb pop lahf xor lods outsl leave rol out imul adc fidivl ja repz mov xchg iret sub xor (bad) jecxz sub mov cmpsl push push ret out ss mov inc movsb pop xchg inc or xchg xchg call mov out repnz leave add sbb loop je mov jp (bad) pop xor dec mov dec insl (bad) sub lret lds (bad) lods shlb ja cmp push mov lock xchg cmp jmp cld divl loope adc int3 aam ret jbe ror push and xlat test pop ficomp inc inc mov outsl push fistp inc ljmp enter mov loop (bad) lret push cmpsl xor cwtl sub insb pushf (bad) mov mov dec mov das enter ficompl int3 or inc adc add xchg fadd sti out push xorl mov mov mov jp xor lahf cmp shrl pusha out adc jecxz mov cmp mov jmp fldl or or clc mov data16 inc sub or inc test shll mov out daa imul fstps aas mov cmp jnp sbb stos test mov push in mov cmp aas fs out mov ds jae (bad) loopne pop jmp int3 or arpl bound add push sbb sub mov pop sub test xchg lret xor loopne sti dec mov iret mov mov iret cld es adc fdivl push hlt xor hlt xor popf add add push or repnz mov sahf mov jmp xlat sbb (bad) int (bad) in inc daa pop xor in js enter in xor push dec rorb xchg jmp insl fs imul sbb jle fcompl data16 jno or add jnp das fildll dec rclb bound cwtl dec push rol or ds inc addr16 (bad) mov fidivl sbb and lahf adcl ljmp xlat cmp outsb xchg mov negl adc shll jmp cwtl ja fdiv or out jmp js out or pop fcoms or pushf lods loop mov lods cltd push jecxz ss mov xchg pop (bad) lret mov fwait call cmp sbb xor pop (bad) lods jmp clc shr cs push in dec jp xor xor jo insb add cmp mov and call adc xchg and arpl dec add mov ja insl loop aad mov adc add lds mov push xor inc push mov lcall inc clc out mov xor leave push or adc mov mov cmp jae or pop jmp lock jg push mov sub jne bound push inc jg mov inc in rorb push push adc or (bad) rcll push adc push mov dec mov pop fistp mov or inc xor mov outsb dec jmp loopne js inc xchg decl push fstpl pop cld popf fisttpll test int (bad) lods xchg popf out ljmp clc aam jge cli pop jo and fisubl into dec inc scas jl cmpsl lahf add cmp mov stos jle in iret mov xchg cli inc push mov inc xchg fstps xchg mov int3 lcall push hlt imul push xor push mov and insb int mov xor xor adc test push add pop jne fsts movsl mov mov add mov inc popf dec sub add fadds dec enter insl mov pop gs fsubrs lods mov ds out inc int3 xor scas jle popa adc dec adc rorb fiadd int inc loop adc into pop pop mov in inc jge pushf cs inc adc ss mov push in inc in popa inc (bad) xor jmp mov and fstl ret popf ja mov sub ss pop and loop cmp jge repz cmp int3 (bad) (bad) mov fsubrl stc jmp jmp mov dec sub cltd (bad) repz inc mov inc mov movsl pop xchg pop inc insb sbb pop js out dec mov outsl shll aad dec sub dec test stos fild push fistp ficompl jno jo popf test gs cmp jno push sub cmp mov lcall (bad) mov mov les sbb dec push mov insl out mov jecxz push scas jg mov jmp data16 (bad) or xchg push nop ss push js xlat jns jecxz mov xchg dec movb mov cmpsb jg insl inc cwtl xchg mulb addr16 mov push pop in xor andb cmc sub fisttp outsl cmp subl rcll sbb hlt sbb xor pop bound fidivr outsl cmp ljmp push arpl in (bad) cmc and cmp sbb xlat sub mov pop mov mov (bad) xor or jns mov sub xchg ds dec test in lods xchg jo pop push lret sbb jno xchg das cmp adc xchg cmp or mov insb idiv js imul adc pop (bad) cmp aad xchg jg jp mov push mov pop xchg sub aad push cld fs (bad) mov nop or movsb fs jg adc pop inc and and movsb aad mov jecxz xor mov pop add inc sub add jge sub pop fwait aas xchg add inc int3 sbb mov nop ret lret lds sbb lods ret add jb mov mov fwait xor outsl lods outsb jge aaa (bad) sti leave jb xor pusha fidiv mov cltd pop (bad) std inc negb sbb adc xchg (bad) adc sub std and rcrl aam popa push lcall pop mov inc cltd xchg dec insb dec pop int cmc jecxz add or inc push insb loope fiaddl mov sbb (bad) mov jecxz pop fwait jb push into adc sbb push frstor mov push jae lret sbb cmp cmp xchg or cmp stos rclb or int3 jp cs int loope loope inc mov lea das xor xchg movsl lret sub sbb push mov mov xchg mov xchg or lahf dec into xchg lcall or iret das adc push xchg std jl gs sub mov sbb pusha imull or negl xor jecxz xor and adc inc and jns aas js leave std dec jp jl jbe ss hlt data16 ret jnp inc xlat test mov cwtl xor shr mov add dec iret cmpsl sahf aas cltd mov cli add out xchg push mov jnp sub pop and sbb jmp scas jge xchg lea sbb mov ds dec cmp push out xchg cwtl leave loopne add jns (bad) dec pop cmc jne cld inc pop jmp jl jbe into (bad) iret fsubr and push out std xchg and (bad) jl lahf or xchg mov cmp loop mov add inc out xchg scas push sub sub fadds movsb leave xchg js cmp mov lcall lahf int3 jae xchg mov sbb (bad) repz mov mov pop in shll inc cmp lcall cld dec ss sbb repz pop pop adc mov cli in cmc loop mov pop cli jae popf mov andb and insb mov fs (bad) stc or dec pop or mov mov dec mov inc or xchg arpl (bad) mov insb sub bound inc jns lret in adcl xor pop cmp cmp xor stos or scas sti xchg iret jno and aam mov sti xchg or in mov mov je pop inc fild or push in mov xorl mov add fild and cli dec push cs cli cwtl pop pop jmp (bad) clc xchg push jbe cmp mov mov ds mov pop dec enter xchg mov cltd idivl (bad) jmp push outsb loopne test imul clc inc in pop pop dec fnstsw loopne aam into mov or lods mov into aam ljmp cwtl out xor rolb inc dec das inc mov leave je aad dec or fnop adc mov and sbb jne call ja mov add xorl scas mov and adc cmp std mov sbbl cmp push fwait sahf push insl inc jl cltd push dec stos xchg mov sub adc dec cltd adc adc popa adc pop push push dec inc scas pushf mov dec popf mov inc add std and mov mov or (bad) dec add inc xor mov mov push in lods es jae lea and js js inc inc xchg mov cltd enter orl subb rolb dec adc xchg fxch cmp notb (bad) inc jmp lods jnp jmp mov xchg pop pop es repz ja add mov xchg jge loopne xor xchg shlb xchg iret ljmp lock icebp movsb neg sbb and in gs xchg mov idivb cmpsl shr inc xchg mov sbb jb jle rcl cltd cmp push push mov cmp jns je sub mov dec imulb xor test lret lret pop mov aas je and sbb int fistp popa (bad) push xchg pop pop out cmc and loope add xchg decb pop pop xchg ret arpl sub jg inc xchg testl lea push push std push xor mov movsb test stos scas add dec xor inc test sub or or cmp dec push jmp test enter aam orl inc xchg jmp addr16 xchg fs stos mov push mov or jmp jb pop in cmp jne lcall fisub sub cs cmc xchg sahf fsub mov mov sub inc and cmp and pop dec push push dec and lods ret sbb cwtd fwait xor call cmp adc cmpsb sbb in out icebp xor mov cmpsl (bad) into push das or inc adcb sbb dec pushf ja das rol sub dec iret stos and rcll sub pop aas dec mov lret fstl jmp xor push stos (bad) jmp mov into push dec imul bnd mov xchg and xor inc ljmp mov and add adc pop mov orb mov out or mov dec jmp push inc aas mov xchg jle xchg xor dec or mov jno add sub xor sbb lods sahf push arpl ja push cmpsb cld mov cmp cs mov and (bad) out ja push popa jne icebp xor pop mov xchg and stos jmp mov mov fwait cld fs loop or data16 mov rcrb xlat fs insl int xchg lods inc lea add cmp push cmpsl dec xor jecxz test insl mov and mov dec cli jmp icebp fwait sub test xchg inc scas mov test or imulb shlb dec pusha mov out int in out fcmovnb dec shr jmp cmp out jb xchg inc ljmp xor mov (bad) cmpsb or scas jno mov adc xor out in pop lea xor pushf ret push mov add data16 mov inc gs lods rol call sub pop and or mov pusha sub mov xor je ret stos adc jns call dec sbbb dec call pop mov inc pop and inc jle inc adc dec jnp pop fucomp inc sti and mov pop test add xchg testl mov aad daa adc rcrb mov in clc mov pop out pop mov or adc repz js xor in pop call ret mov xchg push sbb aam jmp sub mov insb xchg js or inc jp mov nop ja mov out inc mov xchg cmp adc cmp xor sbb sahf push push mov mov add js xor push mov cltd mov gs dec js mov dec (bad) mov fs ret xchg jmp xchg je and (bad) mov ljmp dec inc push and out cltd std lods clc bound push (bad) push add dec push sti popf pop xchg cmp gs repnz punpckldq outsb subl inc hlt xor addr16 les (bad) mov das jo outsl inc jmp xlat inc xchg stc stc xor bound daa loop shlb insl inc es int3 notl hlt mov push and sbb (bad) jmp not push mov stos xchg fimull and push test incb adc clc out xor add mov xor push aad hlt cmp repnz cwtl jmp sqrtps cs cmp sbb mov sub pop or cmpsb mov push push add movsl mov (bad) xchg jge scas (bad) movsl mov or rorb int ja or enter ljmp repz cmc icebp (bad) out (bad) call sub es (bad) pop mov test push repz inc (bad) fmul aad mov (bad) je sub push jo aam shrl fmull xchg (bad) xlat (bad) mov pop pop jnp mov sub sub mov jg imul inc jns out jecxz insl add dec add movsl popa stos xor adc stos jp add mov pop xor sti mov mov xor in scas scas push and dec call (bad) jl jb mov mov bound mov mov mov cld xor fmul loop lahf cli fs dec arpl push dec push lds mov cmpsl out loopne inc es or jge add out push adc je pop xlat ljmp push sbb sub pop rcrl sarl mov mov xor loop ficomp lcall mov test in cmpsl lcall mov mov mov test outsl sbb sub xor add adc (bad) push push imul dec jle jle jl insb pushf lret pop pusha pop dec lods or aam cmp push cli clc iret movsl sbb (bad) int xlat daa popf in js sub xlat sub in mov fs out add movsb bound fnsave push mov cli test xor dec (bad) xchg adc dec inc ss ljmp mov dec jb lcall imul imul xchg mov push fsubrs fwait lret dec pop dec fwait ja popf adc add loope mov jnp movsl jbe (bad) fsts mov cmpsb aad push clc sub pop popf pop push (bad) sar push jle in push stc fwait add imulb (bad) and pop ljmp mov push sbb adc test add or roll mov or inc sbb jne scas orl shrb cmp push push mov lcall push aas fs aas (bad) or outsl cs pop add push insl jnp adc notl add dec adc mov adc repnz push pop adc push jb popf (bad) lds push xchg mov (bad) (bad) lret xor ret fiaddl aas fwait jb rcrl aas xchg add insb adc and fs std mov push cwtl or xchg movsl mov mov lock fiaddl repnz lods out fst xor xchg cmp or adcb mov mov rclb and stos lret sub push mov cmp cmpsl stos fbstp adc xor push jns ja xchg mov push sub xor mov lods mov out (bad) adc push xchg mov fnstcw adc mov jp ficomp push jge xor sub push dec cmp push scas sbb adc jb ds push punpckldq (bad) out xor sbb push and ds (bad) xor clc and or insl in xchg push pop fcoms loopne cmc jo push in scas mov push sub mov std (bad) inc mov pop push push daa in loope fmuls dec push icebp daa int stos or fsubs cmc adc int3 inc mov jecxz push mov sbb jmp push mov or test mov pop add xchg cmc aam lcall adcb pushf (bad) push push call repz and mov iret jno out mov cli ret push dec stos and stc xrelease cli mov fcomip jb cmpsb cltd jae mov (bad) jge das mov pop dec dec dec cmp mov mov adc mov cwtl mov inc and pop jmp mov outsl xor loope,pt mov jle pop sub daa int3 adc fstpl cli dec scas int3 jns frstor (bad) iret ljmp push and xor cmp sub mov arpl imul ret imul xor insb push push (bad) std add loope fstps (bad) out pop in fnstcw icebp fsub pop cwtl adc popa mov mov clc pop add popf fdivp inc lods dec xor push pusha imul dec dec xor aaa and jmp jmp mov mov add sub pop je dec (bad) stos mov rolb aas jno add test dec mov lock pushf jle mov mov jle (bad) or mov arpl xchg jb call leave testl pop and jecxz and aas ficoml pop mov cmpsl push and xor call pusha es (bad) test xlat pop aad lods rcl (bad) out or pop jne (bad) jns cmpsb mov (bad) inc jnp adc ds adc xchg dec mov loop mov mov popf mov mov out shrb in pop xor lcall repz sub out sbb jns mov sbb add dec push dec lret xor mov xor pop inc call rclb fcmove popa popf xchg mull dec dec insl lahf les mov repz jnp push push push adc sub cmp mov stos int push sbb sub xchg mov adc push dec clc adc sub mov cmp mov jbe inc test pop mov out lods aam push lods scas movsb inc mov in fwait outsl ljmp mov mov add fwait xchg inc int (bad) xchg sub nop sbb fidivl pop adc xchg and xchg mov leave push shl push int3 add push incl cwtl mov pop movsl enter fcomip movsb call mov mov (bad) sti jmp push fisttpll mov aam or jp arpl cmpl int3 jle rolb mov mov cmp pop loop inc das nop out ljmp inc pop mov iret sti lret lds sbb pushf push ret push fucomip out popa push sbb adc sbb cld test push pandn fisttp incl sub sub mov out pop push lds or add daa mov sub inc cld push lret and jo ret sahf test push out cmp and fldt cmp clc pop movsb sub cli fisttp add iret mov (bad) mov test mov pop cmpl ret (bad) mov dec scas scas xor xor lods insb cmp test pop mov mov sub negb push fmuls cmc leave subb clc popf (bad) es mov fist mov out fnsave divl call (bad) out mov flds pop push xchg add out movsb jns repz leave mov sbb push pusha outsl mov lahf push push fldl sbb cs push mov imul lret push xchg test pop fimull add jno mov xor (bad) jle ss int3 ss pusha lret repz call loopne push in cld xchg dec sbb and pushf xchg ret and push dec mov jmp xor fbstp roll lret inc add or inc push jl loopne adc ljmp lcall xacquire jne jp xchg sbb lods xor loop in shlb testb mov fidiv push out stc fmull cmp rorb incb mov inc cmp mov jae scas dec adc jbe imul in in xchg test jge jmp cmp loope pop cmpsl movsb dec cmp (bad) imul lods js test fisubr dec or pop pop mov xchg das popa pop xor fsubs xchg mov pusha movsl xor cmp fidivl inc (bad) add bound or pop cmp sti cmpsl push test sbb inc xchg (bad) (bad) pop scas aad xchg aad inc jnp mov (bad) fstl sti pop and push push into sbb adc pop mov in dec loop sub repnz cmp dec ficoml sub ds insb (bad) iret mov idivl movb ss loope lods dec in subb adc je (bad) xor jp pop adc inc lret sub rcl cmp jns or xchg mov add fcmovnu insb scas dec inc mov sbb xchg cli enter sub push sahf jo test add sub out push dec popa push fs or mov mov sbb loop adc xchg cmpsl ja insl lods dec add addr16 jle mov jne ja or inc cmp mov mov rcrb test lahf insl xchg sub lock sbbl fistl in sti xchg cltd (bad) and rcll (bad) (bad) dec mov dec xchg or pop mov xchg in in cmp clc sub fist xor test mov (bad) in jb dec fidivl loop inc out cld in cwtl scas push inc xchg ljmp cmp sahf daa subb decl movsb leave (bad) icebp es adc push imul jge mov lcall pushl movsb fidivrl xor add stc cli sahf mov stc push scas pop push jg fidivrl jge push cmp nop bound jne jns out lods sahf sub adc mov jle lret pop dec pop push mov fdivrs and mov shrl xlat (bad) jno pop loop jl rcrl jle or jno push jl (bad) pusha mov (bad) pop movsb xor inc gs push incb lock push data16 int3 pop outsb cmp dec xlat lods dec mov ret sub iret push clc cli jae fs xchg push pop (bad) cli ss and jae xchg orl je sti into sub aad or mov dec push mov test xchg dec sub sahf xor (bad) out out mov adc xor aad dec xchg shrb cmp push and pusha out jmp popf jae scas les jp divl dec inc scas cmp push arpl cmp inc int movl test roll sub hlt xor push sbb pop icebp test dec lea loopne,pt jcxz in pop jbe popf sbb orl (bad) pop lods out repz sti xchg sub mov aad xchg fldenv sub std lret jnp jnp pushf or in xor xlat jl push hlt adc ja pusha mov jb pop push push and jnp out ret push adc pop (bad) (bad) loopne idiv rcrl pop jl mov (bad) lret inc dec or pop xchg shr add inc repz movsb mov xor xchg pushf (bad) sti mov inc (bad) lret and inc push jecxz add (bad) xorb push pop (bad) insb push push push mov jne pop pop es psubq cmp mov pop (bad) jp sbb pop js fdivp in aas test daa ljmp jae outsl mov mov cmp jne mov inc sub test lahf fisubr mov (bad) imull lock push cmp mov inc pushf jle insb loope dec cmp or das add mov mov (bad) jno loopne (bad) inc push repz xor test mul daa push cmp sub loopne ficom movsb xor cli mov mov jmp xchg (bad) cmovo cltd cmp mov lcall rorb int fmuls push or fcom iret data16 push mov ficom (bad) dec fisttpll sbb mov popa sbb movsl cmpsl inc add stos pop sub (bad) mov inc or cmp jp inc and fdivrs fwait (bad) jle fidivrl pop or (bad) int3 dec jnp rorb sbb aas data16 jmp into and fcomp or out jecxz sahf mov push aaa or push sbb xor or fwait cmp movsb xchg (bad) aam jmp cmc dec sti mov jl xor mov arpl sahf dec out nop push inc loope aaa icebp iret cmp aaa xlat sbb xor out push mov add mov mov bound js shll push loopne rorb pusha fmuls sti imul and push aad divb xor in dec cmpsb cmp cmpsb xchg jmp jmp adc mov sub test jge cli int3 mov lods cs in jne jo daa fisubl pushf jb push std xor mov gs cli xchg roll adc or icebp jnp shll sub lcall call imull addl pop sbb (bad) pop inc jl dec sbb sarb fildl sbb rolb push mov les or or push sub jnp mov xchg out xchg mov sti cmp push js add jmp (bad) adc sbb or cmc enter aaa ljmp sbb or xor pop pop out outsl xbegin nopl addr16 push jmp ds mov clc std rcrb add mov loope xlat sbb dec lcall inc sub push jo xchg inc int mov xchg cmpsb pop xchg (bad) cmp pop cmp mov dec mov xchg or and push mov bound stos js sbb or mov pop inc jae mov mulb xchg (bad) out dec jp push xchg mov jecxz sub aaa insb stos sub lock ss xchg fldl js ljmp cwtl mov test das loopne sub ja ljmp inc push or xor aas sahf xlat test leave xchg bound push mov or (bad) and cld repz lcall shr in fisubr mov sbb xor sbb mov pop jg movsb or add imul les pop xchg cmc cmp push gs xchg xchg jecxz das pmulhw pop sub (bad) cmpxchg mov xsave sbb add xchg enter aad outsb and (bad) jae inc add push adc test or jp clc mov out mov loope push das dec loopne popa mov mov xor mov popa inc jecxz cmp add xor jns in cld ss hlt stos lods mov (bad) test (bad) sub (bad) push fisttpll xchg jge sub xchg sub pushf ss aad enter xchg xchg adc mov in push mov (bad) movzwl xor mov xchg in adc pop or movsb cmp jge fistpll sbb btr ret sahf mov jge fsubl mov xlat xchg and stos pop loope mov dec mov ret std adc pop fs cmpsl int3 je out cmp ficompl mov imul push sahf xlat rdpmc sub pusha cwtl xor sub roll jnp pop in repnz adc add mov in mov bound sub dec imul and sub rclb rcl xor mov pushf pop cmp mov insb pop (bad) fbstp lods mov andb or stos ror imul dec xor adc sti insb lcall mov andb jno or and call and cwtl or imulb xor sbb xor dec mov stc mov mov stos xchg inc addr16 loopne jb cs or mov dec mov loop mov jo ss adc leave lock outsl enter push or and sahf xchg aam cmp leave popa inc imul repnz jecxz das fwait jne aaa sbb jo call and aaa scas aam ja out scas aam pop inc clc jge popf lret test jae fnstcw popa (bad) enter add jnp and push pop loopne call loope int push aas mov xchg xor pushf ret lods sub pop imul adc mov dec scas out test leave cld test out push lahf std loopne pop xchg xchg out or adc fnop enter dec jecxz test mov pop cmc mov pop fstpt xlat jg push ljmp inc add mov ret hlt pop adc jno jle addb push xor xor sbb repnz or lcall ds dec dec idiv insl mov or xor pop jmp pop ret or pushf dec mov jge lods lds sbb nop daa jl pop fldcw xchg subl xchg add ja push pusha pop jl mov sbb push outsb stos sbb cmp loop data16 lods add add fisttp arpl xor mov int adc (bad) cltd add mov jbe test cwtl fistp mov jo gs ljmp jp and imul (bad) mov (bad) add rcrb dec xchg pop and jmp adc inc cld inc push pop xchg ret mov inc pop lock insl es (bad) fcomps jno mov cld xlat jne or cmc mov lahf push sbb (bad) movsl js aaa loopne push cmc xchg lret xchg mov dec std into ja dec imulb and cmp frstor mov add dec ljmp int3 and xor lret imul lcall ret subb xor mov pop xchg lods jns mov test aad repnz in jo mov notl cmpb addl imul xor test test aad sarb and roll dec lods dec jne movsb (bad) aad test push adc les imul cmpsb dec add push cmpsl pop not movsl ds mov push sub int sahf xchg (bad) xor ja out loop insb test jge bound test js or arpl mov ficom and nop or imul sub stos aas add mov lods push cmc loope fwait aam sbb jg fisub jbe (bad) push cmp cmpsb das call mov fldl insb leave adc xchg jg mov pop dec ret push mov sbb lahf or ret mov gs jae gs and push gs mov jno mov add out dec test sbb cmp xchg aad sub pop mov push cmp fnstsw imul xor lahf das fsubr test or adc dec loope sbb fcmovnbe dec mov pop imul lock xchg push pop cmpsl jmp lods jecxz mov iret sub or insb ljmp adc loopw adc arpl or jns pusha pop lods push jo mov cmp fdivl test push add pop notl adc jbe xchg xchg fidivrl repnz imul je addr16 xchg xorb push stc or push fldcw add pop jne jl mov or dec pop xor adc jns inc add inc dec mov aad lret mov outsb movsl out arpl scas cmp out sbb sarl pop jnp in add shlb jns ficoml fstpl sub adc pop dec (bad) jae jo jl sub les inc mov xchg dec pop idivb mov pop pop mov cmpsb jle jns jg stc and pop addr16 popf inc xchg mov dec and xlat test jo dec scas lcall or test push test out or pop loop addb xor in mov cltd sub aas push dec xor mov fdivl pop mov daa and dec inc mov pushf popf dec fsincos ss hlt inc adc sbb add inc fdiv and xlat mov lds shll fstpt scas (bad) xchg xchg jl adc scas cmc or adc pop xor outsl push and push leave lret idiv jno sbb add cmpsb add dec fnsave movsb dec cmp sub cmpsb flds les sub cmpsb mov xchg push pusha mov push lds xchg int mov out xchg test (bad) mov stos xchg ljmp xor repz push jno mov mov jnp fcoml sub out push leave add xor stos xor jae cmp sbb icebp mov shrl dec adc fwait inc mov pop jnp (bad) aas or mov cmp hlt fnstsw sub cmpsl enter fbstp lcall cmp idivb loopne mov adc fld and addr16 cwtl ret shl fwait (bad) les ret int dec mov mov mov push xchg ljmp shrl or ljmp rclb sub out pop nop mov nop pop adc ret xor and mov (bad) lret outsb or or push cmpsl gs loop hlt push add scas fadd mulb lret movl pop lock pop jge dec jbe sub push push fwait out aam sbb sarl cmp dec add adc pusha jecxz xor and sub fistpl (bad) insl loop scas rclb out xor add lret cmp dec sub jae aad jp in mov push pushf fisttpl int3 gs sbb inc adcl cwtl cmp cmp lcall mov xchg stos lahf sahf cmpb data16 dec fcmovnu sub jl pushf cmp and faddl xor loop sbb mov cmp mov sbb mov mov and jge or fdivrl cmpsl jae mov call loop pushf bound popa adc xor mov xor inc jle movsl (bad) push fmuls mov std jae (bad) pop js loope dec aam scas psllw dec out aam mov cmp adc cmpsl in or in rclb test sbb mov inc ss aad aam test fwait aas adc mov mov into push pop push mov ja jecxz push leave int mov (bad) jnp lea sti or aad jl (bad) pop pop int inc mov push pop mov jecxz mov sub ret xchg test or int3 adc or cmpsl pusha aad lcall (bad) rorb push jl incb xchg cmp ljmp and call adc insl je sbb rcrl jp scas ds out mov int pop jb int3 inc idivl (bad) or pop inc sbb out cltd xorb (bad) es push stos fs test and dec mov js inc rcr fs out decl jb pop movsl scas or pop adc inc sbb xchg (bad) sahf add aaa mov xchg jno or push mov push jnp addr16 xchg fstps jp mov adc pop mov xor and out cmp outsb sub pop xchg fcmovb jno jae enter xchg mov outsb lcall mov adc mov in mov test xchg in aad pop shrl pop xchg ret clc xor sub pop mov loopne jp cmp fnstenv xchg nop xor outsb fnsave into adc test arpl mov sahf adc je jb sbb lea inc clc imul hlt pop push out jns jp fstl ja negl push or cld ds jno mov aaa or jg and pop cli ljmp lods inc sbb sub (bad) pop pop inc (bad) leave or insb faddl sti cmp jp out add adc pop xchg in mov loope fsubl leave xchg (bad) and mov and lahf (bad) movsb mov lods stos fcmovnu mov xor and xor lds cmpsl (bad) daa das cltd mov jne test aas mov lock xchg movsl popf ds inc inc pop dec jmp arpl fldl adc iret and and mov pop data16 add mov cmp int mov or pop leave adc mov sub sub sub fwait push jae in iret adc mov pop mov adc or jl push gs stos jmp jmp (bad) lock inc cmpsb and mov popa xchg (bad) mov testb mov pop aaa aad pop je cltd dec fsubp jecxz mov fidiv mov loope mov rcll int jns add adc fldl pop cmc in mov test fcomps ficomp sub mov adc adc hlt jne movsl xor and ja adc push shll adc sub dec mov (bad) lds pop pop mov in gs movsl addr16 inc dec mov jmp test xchg pop xchg jmp mov cmp xor stos pop and xlat insl loope insb leave adcl mov out mov xor mov or ret mov jb shll dec (bad) jmp sub adc mov in iret sar add popa imul pop pop inc sub loopne jl or notb or mov in test ja (bad) lods cmpb mov nop cmpsb js add loope sbb imul xlat push pop ja pop adc mov shrb pusha inc jle in mov inc xor out scas adc popa mov xchg jecxz cmp jecxz pop push jae pushf and mov pushf ljmp pop lea ljmp push lods mov icebp fdivr mov sub xor scas and rcll (bad) mov mov adc pushf fs pop jmp and jnp loopne hlt aam lods jmp adc fisubr pushf add sub ss add jmp rcr (bad) sub outsl push rorl loopne inc add aad inc add xchg jnp fstps sub dec or jp and add lcall cmp pop sbb cs sbb test xchg sbb or fisubr cmp push (bad) stos mov gs xchg add cmc aas or mov mov cld sub mov cmp in (bad) jb jnp adcl xor lahf jl inc mov fstpt mov fwait shl js push sar pushf jl scas adc js add addr16 or xor les into fwait repnz mov (bad) jb outsb mov xor ja inc xchg and jmp ret and (bad) aad pop mov mov mov xchg sub adcl pop cmp mov in mov stos jnp push lods cwtl pop hlt cmp mov or jno and pop cs adc xchg sbb mov mov int3 pop les cmpb and push jg and jbe jae sbb sbb mov pop mov pop (bad) in inc leave xor and jmp cs xor int3 pop jp jne sbb mov movsl add jb ja aam adc lea sub nop mov mov pop push pop es bnd jbe pushf mov mov out sar or jl push gs dec or pushw mov pop cli xlat pop cmp pop in mov les xor dec enter xlat int3 dec int or push lods outsl shrl movsl adc (bad) negl xchg xchg int push adc adc int cmpsb ret xor mov pop mov cmp loop mov imul adc imul adc sbb jo pop sahf ds push fnstsw shlb loop xchg mov and push adc pusha sti add or nop jo in js cwtl push in cmp scas add and xor rcr das pop ret lret repz cmp outsb dec fucom insb out jae popf test int int sarb and xor and scas push jmp xor (bad) loopne mov cmpsb add cmpsl push loop jp fnstenv mov pop je lock les xor pop not pop aas sarl cmp ja jmp mov mov fildl in sbb xor lahf xor mov pop and (bad) and es sbb dec movsl lret pusha jo push fmul es shlb mov test nop fadd dec stos (bad) div pop adc push or push dec jmp ljmp stc and leave rcr mov sbb add sub aaa lods in fwait jae jae jno andl and jle inc out in xor sub cmp loopne iret ljmp cmp pop jl lahf inc fnstcw mov les xor add xchg xchg jmp cmpsl shlb clc jnp fcomps adc cltd and xor sub lock cmpsl (bad) push xchg adc push popf daa (bad) mov test test int (bad) cmp pop daa sub mov repz push out jo mov cmpsb sahf dec fbld cmc popa mov sbbl repz int3 (bad) div lret cmp daa movsl (bad) nop insl es pushl ret rclb popf cmp in repnz push push mov pop xchg jp inc bound jno mov mov pop lds cmc aam mov sahf push fcmovb adc push mov (bad) sbb mov ja nop iret xor (bad) movsl test sahf bnd or jle lret mov lods subl and xor aad pushf and mov imul cmp loope inc pop and ss xchg or (bad) sti adc push movswl adc fsubl fnsave mov das adc mov mov shr push rolb jmp outsl mov pusha pop dec scas pop ret jns and mov ja imul dec cmpsb mov sub movsb iret push into loopne loop adc (bad) js and addb pop pop aas jbe loop ljmp jno lcall xor xchg xchg insb pusha cs fld jl cmpl jo or xchg aaa jge xor repnz cmp cmp lcall mov push jg fcompl in movsb data16 adc adc inc sub xor inc outsb lcall jmp fxch out (bad) inc negb jb in mov jne jo arpl push push mulps jmp loope xor xchg je outsl cmp jb aad cltd das cmp mov out clc sub xor jno cmp fistp add test xchg push pop in cmp sbb jecxz out xor sub (bad) lret mov stos inc push hlt das dec pop add in push or sub jnp inc aas fldenv mov popf cmp mov inc insl xchg xor jne lret mov shrl xchg and je or mov push cmpsl test hlt xor fs and push ja mov fldenv sub adc jbe icebp aas rcrb pop cwtl je addl addr16 cltd inc lods lahf insl or and cmpl xchg push mov sahf in jnp ds mov xchg mov iret xchg sbb dec adc cmpps repnz sbb xchg orl in fcmovnbe movsl movsb and xchg js arpl fwait sbb pop ret mov add inc mov dec imul xchg loopne dec repnz adc insl mov fcmovbe ficomp movsl imul or push aad add dec test pop jmp jmp hlt sbb mov (bad) imul pop aaa rorb mov xchg mov (bad) sti and cli nop add (bad) ret (bad) lds xor sub pop loop jbe test push inc stos fstps push fisubr popf arpl insl pushf pop inc push pop push cmc xlat jp fwait or enter mov push pop xor dec leavew fwait or and aam sbb int3 mov lods fist dec xchg xlat (bad) or mov insb xchg out cli pop jae mov lahf and adc call mov push mov pop xchg mov push es lock addl pop js push jmp push clc cmp push pop rorl ds stos mov fcompl pop jb int xchg xchg shrd sub jns repz lods incb add out inc rolb jl add xor hlt jecxz inc stos mov jle stc xchg xchg aas pushf cmp (bad) adc dec shrb lds and mov sbb lods aad lds lret cmp xchg sub ljmp unpckhps pop xor sti ret sbb and xor loop inc (bad) out push (bad) leave push std daa sub (bad) mov inc repz je aaa jmp mov xchg out sbb xor adcl jns fdivl xchg std xorl insl addb mov jecxz outsl rcr js out xchg clc cmp lea add icebp push insl lods in pop adcl outsb mov dec push std mov nop and stos fdivrl pop ss subl mov and js jl clc test shll aas fucom xchg out in fst call cmp movsb add stos fistpl pop outsl dec movsl (bad) mov pop push sub movsl adc push lods jno sahf sub shr cmpsl cli sbb xchg push xchg test jno rcrw pusha cs xchg cwtl add ret divb cmp ss fmull (bad) jo pop push in push in inc pop std xor add sub lcall inc jmp pop sti js cmp and pop nop out mov cmp aas cmp fbld sbb popf xchg xor and js cltd dec jg mov aad jnp sti inc jbe sbb aam sbb adc popa or jmp mov sub imul lods sbb xchg inc mov fwait mov sbb xor into push push mov in outsb test gs inc lods clc adc lods sbb mov xor xlat and jae test (bad) les or ret push pop (bad) jne and mov ret gs inc outsl (bad) jae shrb mov sub xchg (bad) notb idivl (bad) ret scas adc fdivrs ret jne enter sub mov js push stos data16 imul lea jnp and xchg imul daa jno add adc xlat pop push gs adc mov sbb (bad) cli movsl mov mov pop bnd sahf lret mov or enter jb hlt xor sub adc lods jle mov int into or and push dec dec test mov pop cmpl mov cmp push decl sbb out xchg inc test sbb pop push add push ret sbb jae add push jmp xor enter mov stos lret xlat mov mov imul push daa aad xchg jb (bad) fstps jecxz mov pop cmp mov stos pop jnp pop insl test sub das in pop jno dec ds mov sub mov pop and xchg leave sbb sub cmp inc push mov sub inc mov xor nop lods dec lds lret out test mov jg add add inc add cmp mov or mov in out sub sti mov aas imul movsl mov loopne ss push icebp repz std inc xor hlt pushf call sbbb das ret jae jle cmp xor push sub adc aas mov cli dec fmulp pop push fsubrl dec movsl in xchg ss cwtl add inc outsl or ljmp dec or pusha push fistl movsl xor out xlat or mov je and in imul pop jns cmpsb or add cwtl movsl xchg jnp cmpl cmp lret pusha push (bad) and aas or pop imul cwtl push (bad) xchg push dec js mov test adc test add or scas daa dec mov cmp lcall or add int3 out or scas dec xchg call xor popf insl and sti pop (bad) insb push cmp rolb clc (bad) vrcpps dec int3 in mov stos mov adc in fmuls imul jne rorb jbe test out sti pushf ss xlat outsb test arpl xchg in loopne (bad) lods std xor xchg dec dec addl test pop stos add push mov lods add fidivrl xchg push xor push mov cli sub lret out aad xchg enter sub dec add fwait loop inc sbb add add bound xchg or lds clc pop jno fiaddl inc std xchg push in xor rorb bound int or pop std xchg mov inc mov (bad) xor dec dec fsubrp push arpl cmp xchg xor push xor mov jns inc je repz xor cmp push and aas icebp fwait and rorl or sub push xchg lock mov out (bad) icebp cmp data16 int sub dec aam xchg in stc (bad) cli jne icebp movsl pop mov pop xor fcomi stos mov xorb and cmp mov cmp jbe xlat dec stos add ret nop fidivl js icebp xchg sbb ret in and jae sbb roll gs xor xor iret lcall push fcmovnu jno sbb add push loopne mov sbb lcall test js adc push mov xor pop clc mov bound cmpsb xchg dec pop add and loop jae (bad) outsb add mov inc (bad) jl jmp imul (bad) in cmp movsb pop lcall push sub adc cwtl int mov adc out pop inc push inc or mov sub les dec pop sbb xchg pop popf repz add push add int3 sbb notl repnz leave xor dec sub xor inc (bad) sti addl dec mov adc mov gs xlat loope popl lea rorb sub dec les sub sub pop lahf xor xchg pop mov or jecxz mov mov in jmp test mov push and jbe sub jnp lret fdiv jge int pop fstps es arpl adc lret push aam (bad) xor dec mov mov push xlat int3 ss cwtl outsb dec aam inc pop jno push pop into or negb loopne sub lods pop cmc or rcrl mov push cmp mov mov (bad) mov sub xchg or mov jmp lods rol or lahf dec pop movsl xor loop xchg sbb imul scas clc aad adc sbb push dec sbb rcr repnz adc xor mov xchg push (bad) test daa jns mov xor mov loopne les mov push popa and or stos inc sar fsubr xchg inc daa lcall lea leave and and inc xchg gs test mov push fwait mov xor cld aad scas outsb in mov inc push test arpl not fdivs mov sub inc lods jmp adc xlat insl pop shrb in cmp jno sbb imul sbb add adc sbb xchg jle (bad) stos dec jns xchg enter into jp js cmp aaa popl imul call fildll sbb or jge push js xchg in xchg test in jp add adc loop mov int mov (bad) xchg adc mov test (bad) cmp dec lods mov sti jecxz hlt data16 movsb or mov lock jae stos mov adc repz (bad) arpl inc cmpsb daa sahf stos stos and or lret sub rcll lahf aad jae into cmp lcall ret dec or aam lods (bad) (bad) mov call (bad) cmp (bad) mov add js mov add xor pop jmp out add inc cmpsl mov or (bad) ljmp jecxz nop repnz roll gs mov xchg sub arpl pop pop dec (bad) and push jle scas movsl mov fsubrl pop or movsl cmp gs daa jg sbb push arpl nop add nop jno mov sbb int xor inc scas std outsl cmpsb fldenv or shlb ds fdivl int3 pop out adcl inc lret es nop inc jge lods pop scas cmp cmp das dec rorb push fcmovbe es jns repnz aas je xor outsl cmp add nop stos das sub je xchg imulb jae repz sbb jp mov aad js in mov or stos or inc loopne aaa adc xor xor imul add outsl negl push push fs mov mov xchg bound lret les mov mov pop imul and loopne mov scas push loopne std and fdivrl hlt mov pop rcrl cld imul cmp inc insl mov call add stos mov insl shll jp mov pop data16 mov adc fisubrl (bad) int int3 insb lcall jg mov loop (bad) stc ljmp push cmp push fmull pop sbb fsubl or push jae cpuid or push xchg fidivr mov dec jne hlt into andl data16 int ja cltd cmp sbb stc sub jl mov movsb cmc les notl or sbb xchg lea out scas pop hlt (bad) int3 xchg adc test test call pop hlt cmp xchg jae xchg lds cmc or scas push imul mov stc inc sub inc jp lahf add outsl pushf or sbb xchg push dec sbb das jmp imul nop fisub and ljmp pop fnop mov push mov insb es sub fmuls and imul push pop sub addl sub cmp xor loope fisubrl xorl into clc inc gs jp das adc pop add dec cmp ljmp aad mov push mov hlt outsb inc xchg mov dec pop xchg mov adc cli xchg or adc push stc aas jge pusha imul or (bad) int3 shrb pcmpgtb add xor ljmp stos push rcl sbb sub mov push mov (bad) (bad) aaa nop inc (bad) dec les popl ret xchg xor call sub in lret jne xchg sbb cmp mov push testl mov addl icebp outsl add inc push stc add fbld (bad) push xchg aad sti mov push and xor test pop js rcrb or adc popf mov mov (bad) enter xor dec sub push or gs jbe (bad) cmp out push pop mov xor push popa mov call mov mov loope mov out dec xchg mov dec dec sbb in (bad) std loopne out and ret xchg stos mov fwait push dec sub repz mov cmc inc nop repz int3 inc lret adc mov les pushf outsl sub das lods mov push jne push mov dec dec xor test aad mov aas loop popf sub cmpsl icebp xchg and aas shll or ret or xchg mov dec (bad) sub jb inc jg imul xchg inc je inc fisttpll (bad) inc repnz mov mov and jl sub pusha stc and ja sahf orb imull enter and adc faddl rorb jo adc arpl lret push (bad) pop mov mov test (bad) adc add inc xor push xor mov pop fldcw dec sti mov and daa xchg clc pop and sbb scas repz inc popa xorb and add fcompl mov loop and pop nop pusha inc adc clc rclb pop xor adc mov jno enter push fistpll jg ret fs mov lret aas loope sbb mov pop sahf mov xchg (bad) outsb in dec sbb inc mov fistpll dec (bad) jmp dec or jbe mov pusha xchg js sbb popa dec mov addr16 adc mov popf dec fistp ljmp xchg fadds jge adc fiadd mov out xlat fldl sti jg pop loop sbb in pop test sub or jne sbb fnstcw loop call lds or adc (bad) mov or aam mov repnz jae mov pop mov mov xlat jae icebp pusha jnp xor and cmp mov push push push dec ret push jge jg xor pushf mov loope sub adcl push mov js jle mov jne cs dec mov sbb push lods cmp lds mov scas lock arpl in add clc xlat sbb cmp pop and adc sub jle dec xlat fsubrs (bad) jo bound test and fimul adc or jl lcall ret repz and imul mov test sub dec (bad) mov jmp mov movl push pop fcmovnb sub lret sbb je jbe xchg in adc xor mov out lea (bad) lods push dec cld adc jnp clc and cmp (bad) jge cmp mov fdivrs pop gs call cld callw pop xchg and out dec das mov (bad) cmp imul dec jmp push faddl pop stc ljmp adc ss fildl pop xchg jo inc adcb ret mov fldenv jbe sub dec xchg lret or cmp push (bad) xor stos andb sarl cmp mov xlat dec mov movsl aaa (bad) leave push sbb loope pop mov inc lahf and test sub cmp push mov (bad) xlat add sbb cmp cmc int mov add movhlps adc mov jle mulb inc test jle xor out cs push leave jg scas sbb jnp or (bad) dec mov pop pop dec gs jnp mov (bad) mov adc stos addr16 ja adc dec arpl xchg jl loop mov bound outsb pop mov add xchg mov mov mov cmp xchg (bad) xor or ljmp repnz or jb repnz icebp loopne out fstpt dec out sbb stos mov incb push js scas jecxz in sub xor jge push sbb fldt popf add cmc xchg in mov lea stos decl inc cmp cli lods pop sbbl shll push xor cmp or arpl push scas dec jl scas pop jo daa pop pop sti loop mov sbb mov jmp (bad) push notl data16 sub pop outsb ret xchg popf aad xor mov pop aaa cmp jb lcall push push in jl ja inc out mov xchg jae or enter pusha jae cmpsl mov scas adc push (bad) not jbe cmc sub jbe faddl enter (bad) or inc mov jb cli mov pop je pop jbe or sub test mov mov jo mov bound inc jl dec mov jns pop mov dec mov mov fwait add movsb mov daa jo xchg neg push (bad) ret divb add mov push (bad) gs add aas add pop jmp mov daa mov cmpsb add cmpsb jg lock ljmp mov push lret xchg lods sbb lret lret xchg repnz fcoms pushf push adc fnstcw (bad) inc push jne jmp xchg and enter insl loopne adc movsb push inc mov inc adc sub cwtl cmp pushf sbb pop (bad) stos int3 xor mov jb push scas popf adc push and iret mov xchg pushf xor das test aam dec subb fwait aas mov in xlat test add cmp adc cmp (bad) and fsubs jne,pn cld into adc sbb lret stos test inc mov test jmp and mov leave add hlt xor mov push mov js cmp inc scas xchg push popa fsts mov aad cmpsb mov or call adc mov cmp push lods aas mov bnd int sarl loope fistpll and in addl stos adc das xlat jno sub enter aaa fist imul mov stc insb add pop lods hlt mov and dec imul lods and push sub mov (bad) pop jmp pop rcrb add push or jmp loopne xor pop hlt test mov and and outsl scas (bad) mov push stc xchg mov ds paddusb sub js sahf test pop movsb sbb movsb test fwait lods jl (bad) das sbb iret adc into jg mov jno popf in fwait xchg xor bound pop pop push idivl movsb les popa mov sahf nop rclb nop lock int jnp cmpl mov or arpl jne jae cwtl or ret insl sbb lret sub lods movsl xor fildll mov jle push repz fdivrl in xchg addb mov daa mov sbb lds jp ret ss stc fcoml sub xchg les pop xchg mov ss fwait ss imul cmp (bad) and movsl orb test xor popf push dec push mov leave sti xchg (bad) and push push pop xchg sbb in jb jno call push adc orl mov enter xlat stc out mov sub iret (bad) or inc fiadd push (bad) outsl add in das hlt pop mov and ljmp jnp mov dec stos and ja lds push push pop fildl scas repnz adc push push mov stos dec rcrb pop xchg psubsw push cld sub sub fldenv push (bad) adc push or add cmp aad and cmpl adcl dec push fwait (bad) (bad) mov in sbb cmp add sbb cmp fistpll movsb xorb (bad) into add int inc mov dec daa xor outsl jns dec or add mov xchg adc xor adc sbb rclb sahf sub xor mov (bad) jbe pop ja data16 ret lret sbb xchg nop test mov dec xchg lock pop out mov mov pop sar ss adc push pop mov (bad) push mov test fucomp fdivr push (bad) repnz cmpsb add xchg movsb subps xchg clc aaa cmp sub pop or add flds int mov pushf sub or aas mov xchg (bad) aam sbb push pop out lret sti stc mov imul das lds jecxz insl mov (bad) push div inc imul inc pusha mov mov push mov mov in repz lret push mov pop push arpl (bad) cli cwtl xchg in mov sahf cmp lret ss mov adc dec out jo jg outsb in iret int hlt cmp jp push fisub in inc icebp ret mov xchg arpl hlt and sbb iret scas dec xchg cmp (bad) cmpsb sub addr16 pop sub jno pop or dec repz sbb scas pop lea repnz mov cmpsl mov cwtl xlat xchg jmp mov ss pop scas dec push mov cmpsb add sbbl mov int3 jo adc sbb frstpm(287 imul mov or es cmp pop in pop in ss es adc roll mov popa sub data16 in outsl cmp cmpsb or (bad) lock jnp adcl out jg pop gs shl cmovbe sahf (bad) loopne fcomp and xchg adc inc in mov mull ljmp xchg inc outsl std divb mov xor push xor (bad) or xchg clc mov fldenv (bad) mov popf loope dec in adc and adc push push gs push out in addr16 mov mov out loop in mov data16 dec std mov mov dec mov adc jo mov jnp aad lea dec cwtl outsb leave ja movsb dec movsl lods push xchg sub jmp mov xchg clc lods loope bound fdivrs adc ret mov fwait (bad) sub inc add push mov mov outsl cs fcoml adc mov ja dec lds ror jb xchg xchg rcrl mov scas ficoml push movsl ret push mov insb mov iret jo mov (bad) rcrb outsb hlt out pusha mov push pop fsqrt push add sbb stc dec rcll stc pusha inc sbb aad adc call push testl mov pop pop insl sub test insl int3 cmp xor bound lret repnz cmp std dec mov sub cli lea xor (bad) jae cli fidivrl imul xchg push outsl cmpsl push sub insl mov xchg and pop outsb push loope mov xor aad fdiv stos insl ja xor xchg and mov cld xchg stos fstpt jne repnz mov mov mov and mov add cli roll and cwtl xlat lret sbb sahf lret cmp clc jbe movsb cmp pushf or adc jge es mov or icebp arpl sub arpl sbb paddsb (bad) pop xchg push (bad) push fimul push aas scas mov (bad) pop es adc ja test pop sbb loop cli jmp ljmp xchg int3 cld in add or in xchg das mov xchg add je cmpsl ds pop popa loop fcoms cmp sbb cmp subl cmp popf push push sub xchg ficompl test roll fidivl cmp ja hlt xchg ja sti push xchg popa jne add test jmp mov mov push or cmp push fimull sti mov iret or add clc mov fdivp dec int3 ljmp fstps inc cld mov bound js daa sbb sub (bad) cmp insl jmp out fbstp jp ljmp stos test iret jno iret xchg mov ret mov add sar jnp mov jno repnz xor in movsb add repnz sbb imul rorl inc adcl mov (bad) sub js mov dec test icebp mov test rcll ret xor orb pop xchg push sahf imul fdiv pop pop push daa in inc push lods mov push sbb frstor (bad) cld cmp rclb call jno xchg icebp mov and leave sbb repz arpl xlat cmp mov dec pop pop scas and or (bad) jae inc sbb sbb jbe inc mov fisttpl mov sbb enter and and (bad) and lcall lret cmpl lcall inc loopne pop xor add shl adc insb leave clc push jne mov lret lret xchg pop and clc and pop adc xor adc cmpsl mov mov std cmpsl (bad) dec out adc sbb cmp jne aad aas (bad) cmpsb outsb sbb dec xchg cmp push jne adc rorb pop jne repnz dec xor dec or test repz mov insb lds lcall xor orl shl fsubl loopne ljmp imul ret cmp jl cmp pop pusha fnop adc das jno adc mov pushf (bad) incb mov mov (bad) sub je adc mov jbe les pusha cmpsb lds scas test leave mov xor inc cwtl jns lea inc repz or sarl push xor fs lods or js cmp cltd (bad) es xchg cmp inc xchg push stos jns stc xor pop add sbb mov jae mov stc cmp push and cld and cmp (bad) adc push mov push mov js jge jae je xlat sub adc pop mov inc sub dec jb sub cmp xor sbb inc jae hlt ficom add (bad) pop jbe cmp fnstcw test push pop js repz adc jns mov repz xchg and fmuls (bad) xor pop loop ja shll into ds add mov scas (bad) shrb imul icebp xchg inc dec add in in mov and sub addl pop inc or and cmpsb add push jg addl adc or mov dec les pop mov wbinvd cmp mov mov mov sbb cmp sbb adc or mov sub aad cmp inc std fnsave sbb cmp cmpsb or jl dec mov test mov (bad) xchg loop in adc add jno inc cmp or incb sbb pushf bound loope loope fxam fildll sbb rcrl loope ret dec cmp arpl adc xor call clc jmp jl loopne (bad) xchg negb mov xchg push data16 jo add xchg xor lret xchg xchg movsl call xor inc arpl pop push cwtl inc hlt xchg out lods sahf adc dec add in push xchg cmc cmp and add out cmpsb (bad) and xor inc iret fidiv lds sbb aam insb dec xchg and daa (bad) fldcw out roll xor gs adc pop ds lahf frstor pop push pop inc inc push (bad) enter or insb sbbl pusha xchg or (bad) aad dec fwait sarl fwait xchg xor aad mov iret das rol mov mov (bad) jge add fcoms std mov mov test das jno add into ret pop in nop pop xchg pop and ds in (bad) lock (bad) adc ljmp pop fwait into (bad) iret rclb rcrl cli call mov ret scas jo push pop cmp les mov popa mov push insl mov xchg pop inc mov mov stc mov movsb jo cmp mov rcll roll cmp mov sbb sbb cld cmp daa push sbb push dec pop jbe in loope cs mov enter jb,pt mov sub push lahf ret push les inc lds pop or sbb lret mov stos aas test roll aad add lea pop pop aad inc pop mov adc cmp scas and test in loop repz (bad) aam dec pop mov add dec cli int add adc and and cs mov stos mov jno daa push cmc jecxz lods xchg arpl pop push repz cmp mov sbb and or dec push scas jle and jle push inc addb cmpsl arpl out ss mov jp push test in and mov xchg lahf mov mov hlt cmpsb cwtl addl test out jle add push jae xchg pop cmpsb mov cmp dec cmpsb es xchg jecxz je xor cmp mov pop (bad) loop imul pusha js pop dec adc inc lcall out xor not movsb movsl mov jmp pushf mov xor in pop dec mov fwait mov xor iret and dec nop inc sbb cmp leave push (bad) lock xlat cmp (bad) fisubl in leavew sub push or enter jmp in sbb stos mov sbb xchg cmp lods adc outsb xorl inc mov jg incl test or (bad) rcll fsubrs jl sbb popf insl fidiv cmp cmpsb mov mov in mov pushf movsb out shrl inc daa fcmovb push or pop xchg lods enter pop pop xchg pushf std fcomip lods cmpl rcrl pop ljmp xchg cmp (bad) xchg push jecxz lret jo movd mov xorb test xchg ret mov cmp (bad) je pop data16 aas aam incb xchg (bad) xor test jae movsb roll cmp xchg or popf ja add push push ret (bad) icebp out pop arpl and push mov stc (bad) pushf cli (bad) scas test pop add push xor pop xor and and or loopne enter xor pop (bad) push rcr (bad) dec test pop xchg lods gs jb pop into add nop xor mov repnz mov cld adc ljmp mov out cmp inc imul loop add mov loop dec jge cmpsl jnp pop adc cmpsl add js icebp loopne jecxz mov stos inc add int3 or fcoml and pop xchg jl out mov ret iret (bad) mov pushf jge push push inc jmp cmp (bad) push addr16 in jbe ljmp aad dec fs outsl adc adc imul sti les pmaxsw sbbl roll sub xchg jle inc pop in out push xchg leave mov popa sbb add mov jo sbb addr16 sbb and es arpl xchg dec imul xchg inc out test xor bound cmp fucomp (bad) (bad) sub pop ficom dec cmp xchg fildl inc inc push pop (bad) adc rcl andb lea cli push mov clc cmp (bad) pop add xchg shrb enter cmc mov sub push adc shrl int3 jnp out clc adc cltd add dec (bad) leave pop sbb xlat or ret (bad) out jns and adc sub mov push pop call cs mov fwait jne sub nop (bad) adc adc lods movsl loop sub (bad) mov inc sub xlat xor and xor popa ljmp xchg into push out in ja jno jb movsl jne fwait xor sbb (bad) ret pop out outsl out lret xchg xlat clc outsl int3 xchg (bad) and call lahf cmp inc inc cmc or pop jl imul add fild (bad) dec or fsub sbb xchg or jae and and loope mov loop and out leave or sarl push sbb jae sbb jo inc ljmp sbb repnz dec fldcw repnz adc fcompl mov xchg push add movsb enter loopne inc push sub in in mov sub daa dec inc mov mov (bad) pop adc gs inc push addl xor sbb (bad) idiv xchg xchg pop subb cmp cmp mov imul mov (bad) adc pop mov arpl movsl dec out loope push mov push ret xor push shrd js stos mov sbb push dec imul or and mov lcall mov dec push sub add jae or and pusha xlat adc imul fisttp add lea and pop xor add jns sub imul fwait lahf out lds or movsb dec out jbe fisub cmp sbbl sub push mov scas push js shlb scas jp out jg sub add repz arpl mov pop aaa int3 jb xor inc call mov sub push cmpsb cltd jbe fsubrl das fnop or dec inc mov in and push mov lds xor aas call cld fs in lea (bad) and pushf jno jg ror ja outsl jns sub mov and jle in lcall ljmp inc clc stc repnz bound lods and adc fadds jno mov or call dec add mov repz shrb aad pusha adc stos push cli hlt adc sub xor or xor nop pop push mov pop ficomp cmp lret pop push outsb fimul sub pop push xchg mov data16 ret pushf mov mov fidivrl dec fs pop xchg and pop mov nop jno mov or xchg jno jbe out dec jmp test mov pop mov push mov mov test inc ja dec shrl out fisubl add ja iret add push jo je pop fisub bound imul pop pop sub sbb or jl int3 cmp orb lea data16 arpl test stos cld mov lret aas jbe mov ljmp add xchg jmp negb int3 mov mov js xchg rclb (bad) outsl pop mov xchg inc paddusb mov mov adc aam out xchg adc repz jno pusha jno ficoml cmp data16 pop pop push xor jae mov xchg jecxz inc iret arpl iret xchg xor push sub inc xchg sub pop mov aaa stos and lret xor sarb imul lea cld mov dec ljmp and sbb call hlt adc cmp scas sbb sub sbb enter dec and or sub xor push shrl jnp js in test dec (bad) xchg out cld inc push dec mov add jb jnp ret test cmpsl jbe and mov jp das sbbl add xchg cmpsl push mov add xchg dec pop push pop (bad) jbe aad and rclb es jle push pusha nop cmc sbb mov pop inc sbb addr16 aas sbb das leave cmp cmp cwtl xchg add pop imull dec or inc sub ljmp xchg inc jmp or jb lods jo xchg xor (bad) sahf lret pushf test pop dec cmp sub mov inc lock dec add push incl or cmpsb (bad) and iret out or mov adc cltd insb cmp or adc and push ror int3 xor pop in adc push dec pop cmp sbb jne test stc sbb pop pop inc int push inc (bad) or dec daa mov imul jns (bad) jg pop std mov out hlt cmpb mov xor jle jbe sub pop or int xorl jge scas xor sub xor iret decl imul pop mov xor insl push and mov pop or incb iret addr16 lods add and in fmulp je leave cmpsl fistpl cli xchg loop loop xchg or xor js leave ret insl xor cwtl ja cmp adc cmpsl pop lcall iret sub xor call fadds or xor andl jns pop jmp jns sahf xor xor jp add push js lcall dec fstpt jne out push clc andl fs cli mov shrb mov push imul xchg xor icebp mov psadbw fst jmp cmpsl aaa iret rcrb adc cmp cmp mov add ret scas lods xchg mov loope jne out sbb sti adc out and mov les mov lahf dec xchg pop into in ljmp lret dec and nop jbe and mov out mov mov mov movsl fnstsw lods jp stos stc insb xor aas sbb enter xchg sahf aad add jp ret xchg push int sub mov mov inc dec or cmp aaa and repnz pop sbb jno xor add jnp shll mov cli mov pop inc inc and (bad) fcmovbe aam loope xorb jnp and push mov jns shlb adc cmp mov les (bad) repz outsb xchg push dec repnz out sub js add pop add xor in (bad) jl pop loop (bad) xor push lds js lds int3 test and dec push lods cs fisubl push mov ret loopne xor jmp push and shrl mov jl sbb push sbb xchg xchg xor call lock xor ret cld sbb pop lcall je rcr or fdivrs mov sub out iret fldt dec or adc fisubr (bad) xor testl imulb fmull add or in sub mov jnp jnp or call (bad) mov imul mov sub loope jmp icebp ljmp int3 xchg outsb stos push in pop pop scas dec test cmp inc push insl lods cmp pop sub es ret or pop pop js mov jo popf inc repz mov nop xchg jecxz sbb push xchg jb mov sbb adc scas cmp test aas int3 xor sti fistpl cmp push pop push clc xchg je outsb out popa rolb and gs lret sub in pop nop jecxz cltd stos xchg setp mov jge or ds cmp jbe int stos mov xchg mov lea fwait xor sbb das inc shl push roll cmp push je imul loopne push into and pop pop add ja mov mov imul push dec adc pop aad loope outsb iret divl xchg loopne mov movsb dec subl sarb mov int dec adc (bad) outsl inc dec add mov lahf add adc push mov test stc mov add mov jo mov ja test ret adc push jecxz sub sub nop hlt nop call outsb pop addr16 (bad) pop cmpsb jle or sub (bad) mov aam daa cmp push lret cmpsl movsb mov xchg fs in cmp push pop imul jb or testb in (bad) ljmp add stos scas dec enter pop mov and mov jg movsl insl lods mov cwtl fwait push insb pop or push or add xchg mov mov out mov mov inc out xor pop cmp jne jne push cmp iret xchg jecxz xlat push adc jne mov jmp inc jmp imulb sti pusha outsb pop adc rcrl or jae adc sbbl add mov add jns and test xchg divb loop int3 hlt mov lcall xor jno enter (bad) sbb out movsl cmp (bad) insb fnop add test and add inc aam (bad) in mov rcrl addr16 movl stos add sub pop movsb data16 pop std xor (bad) test adc push mov and cmova cs sub jne fnstenv (bad) mov mov push push lret fildl in mov outsb sarl test outsb pop fadd cld mov inc bound mov mov popf out and (bad) (bad) aad push jo cmp dec js les call jae cmp fcmovbe out bnd les addr16 out mov sbb nop dec inc aas and mov cmc daa (bad) fistpll (bad) mov inc xchg or mov push jno adc adc push jo clc fnstcw dec dec fistp push cmpsb stos lcall xchg es inc jbe call fcoml fmulp or lcall inc jb test jbe movsb cmp inc push (bad) and dec pop das leave add shlb mov test xor das into push dec (bad) and cmpsb pop popa adc mov imul hlt pop mov mov add push mov fmuls cli adc push xchg aaa add addr16 fidivr test pop leave in lret adc push fidivrl movsb ret cmpsl add lock xor sbb in mov js test fistpll xor mov cs sub inc int3 xchg push fild add xchg mov repnz es rol sub xchg bound lock or test jno mov jne mov dec ss dec adc ss pushw loop jmp das sub adc fs aaa outsl push in int3 push cltd cmp xorb fisubrl adc (bad) js sub mov add jno out push les addr16 hlt dec in cmp scas sbb push jg pop jp subl pop mov lcall fdiv sub test cmp in jne inc xor mov or push xor loope hlt fcoms xchg out insb cmpsb pusha pop insb ljmp scas fdiv jb bound popa add adc pop xor cld ficom repnz fs insb pop in pop imul cmp cwtl inc mov push jp rclb sarl vpackuswb inc rorl adc fist lcall sbb mov xor add lods push (bad) jle lods cltd (bad) mov sub outsb xor pop out dec (bad) or lea test add insl les stc stc (bad) imul sub dec (bad) scas cs and lds enter sbb push stos das daa lea ltr jno stos addl mov repz jno sahf outsl sbb push pop cmp adc lcall aaa mov inc push mov scas je xor cmp js sar pop (bad) pop mov sbb (bad) mov mov push xchg sahf cwtl cs popa jmp xlat imul shrb jmp in (bad) jb add out adc aaa cmc fbld adc out sub pop outsl sub jmp mov insb sub les leave (bad) add cmp (bad) add arpl arpl (bad) push in test jmp add push pop pop shll lods test mov mov mov ds sub movsl inc inc mov jle stos cld lds or push aaa popa stos or jne push jmp and test in (bad) ja pop jmp jecxz and jecxz add gs jb lods scas pop in xchg pop movsl sahf jns and cmp ret in dec dec daa test sbb jb loop jae test push sbb add adcl cmp xor inc add cmp (bad) xor bound push xchg stos push add jmp adc push and iret or je add jb test gs jp inc push jmp mov mov int jbe (bad) cvttps2pi leave lret inc sbb dec out arpl xchg lods xlat xor movsl xlat rcll xor mov xor (bad) fdivl jecxz dec cmpsb rcll pop jl sub pop push aad mov stos adc sahf adc gs lret scas push insb insb sub push xorb jo shll lahf sub lods (bad) jo push movsb (bad) divl lock out js ret push pop add lea paddusb jg pop jno inc outsb aaa mov push and dec lods and xlat ret sub dec andl lock outsb sbb adc xor iret shrb outsb aas das popf jmp mov mov add push flds loopne iret aam je mov fisttp or out xor (bad) fs mov test fildl (bad) in push je sub frstor roll dec lock dec or dec mov mov jne and ds pop lods xchg add jo negb adc movsb and jnp dec cmpsb shlb add loope (bad) sub xchg out dec test in and add cld out cwtl or adc leave xchg rorb gs adc fbld xchg pop push jnp xor out lock in dec insb push or xchg cmc xchg clc pusha adc push cmp or mov aaa sub cmp call or lock inc out nop cmp in add pop dec dec addb sti stos hlt dec push add add (bad) fnstcw fwait jecxz cmp sub movzbl ljmp jbe les sti and lods adc sbb (bad) xor js dec daa add mov fidivr add xor outsb dec pop (bad) cmp fnsave int push or jnp jbe jnp jnp mov aaa jbe int3 ja std add ret jo add movsb push leave test and and mov jl out xchg push adc out cld lods and pop add jbe add xor sbb mov sbb shll cmp out sbb xlat roll or cmpsb add das dec jae cmp mov cmpsb (bad) ljmp sub (bad) and aaa js xchg loope test imul nop in das add ret mov and cmpsl (bad) das imul popa sbb int cmovl je ret les mov inc or loopne ja aaa push jmp cwtl fidivrl pop inc pop mov test xor push lret adc hlt rcl jg sub pop mov or inc (bad) (bad) dec adc jecxz (bad) (bad) jnp (bad) ja aas imulb sub xor dec std arpl jbe mov and xchg xor mov mov mov xor ret cwtl xchg inc xor cwtl (bad) lret sub jb jg ja cmpsl scas fdivl je jnp test test sbb out sbb mov sub arpl je pop dec fstp adcb loop cltd aaa call inc imul push adc sub lea or rol adc (bad) dec es ljmp adc adc xchg and loop cmpsb inc aaa pop (bad) jmp mov es pop and jle or outsb loope stc mov cld popa jecxz ret mov sbb aaa test ds xlat (bad) add aas xor pusha ret mov and aas jmp (bad) mov lret fnop push dec and roll iret dec mov xchg daa pop pop adc sbb sbb mov ja push pop xchg addl loop (bad) cli and inc push popa mov lock mov in and sub and inc or data16 add inc popa and mov push in and mov jo sti ficoml (bad) jnp negb ficom shrb and adc ror dec insb data16 push adc add xchg repz sbb mov fxch in fwait xor fwait inc in cmc push or mov mov jl icebp rcrl mov ret scas xchg jne notb fs add mul sbb adc inc leave cmp add int3 sbb dec mov mov and adc cmpsb mov outsb (bad) bnd in dec push add xchg orb pop inc xchg pop int3 xor stos inc int jmp hlt mov pop lcall dec sub pop mov adc cld out outsb pop in je and push movsl test es xchg mov xchg mov sub pop test lret (bad) mov in fsubrl sbb push cld pop mov je (bad) or mov cld jb lds inc adc inc mov outsl out xor out das or inc arpl movsb jns or int mov push out test or shll jmp jge mov outsl push adc stc enter int3 add jnp jno cli in pop gs push push xchg inc mov xchg inc xor sbb les push (bad) out push lret fcmovb shlb outsb mov pop inc pop add add ds movsb cs and jae sbb dec daa mov (bad) ja (bad) dec jne out pop mov inc jmp jp cmpsl es and inc mov ffree sub out daa xchg sti or iret pop sub sub lods pusha inc cli xchg (bad) dec test inc cltd fwait mov sub sbb lcall imul mov and dec pop cli or cltd gs test cmp xchg sub test test mov jecxz test mov mov mov mov ja nop dec ss rcr inc mov dec or jo cmp jecxz pop sub out outsb ficom xor fwait or iret shlb xor ffree popf xor call jno sbb aam jnp jb repnz inc mov push movsb mov insl sub xchg jo and add dec outsl push les pusha int3 add push push push pop jne movsb cli cli sub adc cmp push jb mov int3 ljmp push jecxz stos faddl pop aam mov adc lahf jno push adc (bad) pop loop cmpsb ja xchg ret mov adc lock adc pop jbe loope sbb mov mov pop and mov rclb pop sti adc jl xchg scas popf je cltd les rorb pop sbb test push cs fcoml pop fisubrl (bad) mov dec (bad) insl (bad) xor leave pop sbb sub mov das pusha mov push ja add loop mov pop test das in clc stc movsl jo lods aaa bound cwtl push int3 mov ds or imul mov or jae lret mov lds push hlt mov pop and xchg fistpll insl sahf in mov push pop shrb push jge pusha cld orl fstpl mov xlat outsb cmp fistp and cmp push out outsl test xchg sbb mov mov cli cld enter mov daa ret cmpl das shrb aas and inc outsl inc lahf stos in pop xchg int ds es rolb rcrb adc cmp pop es adc mov sub imul pop sbb pop add xor movsl sub cmp mov clc scas sub inc xchg jne push lock sar inc dec into test scas stos repnz ljmp sub adc cmp mov out cmp (bad) sub mov cmp sbb mov xchg mov fdivrs enter aad es pop pop pushf fisttpll (bad) lcall int adc push mov dec adc push sysenter pop adc sbb and imul fwait imul adc mov iret sbb sub cli popf (bad) cmc xchg pop xchg xor sub dec das dec add out cltd xchg xor int3 sbb add sub push adc mov int adc popf jp mov pop and int3 ss jecxz and xchg adc cmp and imul sub sti sub mov lret xor sub jae int3 dec test jg push stc mov js sub jle jp (bad) pop and add gs mov in cwtl xor jbe mov sti xor imul fs mov bnd enter mov xchg into outsb mov mov shll pop add add into lahf add fidivrl mov mov mov push sbb inc in (bad) (bad) xchg outsb lret in idivb test fldcw outsl ss mov nop push pop inc das imul scas adc das stc adc lret push mov imul dec and pop mov fwait shr xor mov gs lcall repz test aaa xor aad sahf lods and jb xchg adc sbb jl jp and cli roll outsl mov sbb outsb shrb (bad) adc aas adc je cmp adc push pop mov sahf push xor dec xor pop popa or xchg and sbb push cltd sbb adc dec xchg cs pusha mov leave and mov outsb xchg fisubrl inc xor inc in xchg push movsl lcall cmc test das popa mov inc leave mov cmp sub pop popf (bad) je cmp jo adc jmp cmp ficom mov and push les add adc add pop and shr test ds mov cmp push scas clc mov lock int3 lods fucom jp mov push xchg pop push mov jecxz rcrl jnp mov mov and add fildl push loope xchg sbb pop mov lock shl sub pusha psadbw test cmpsl lods loopne sbb xor or nop addr16 movsl stc inc xchg mov into push jnp pop xor jno xchg xchg aaa insl fst data16 xor repnz gs jnp inc loop mov es cmp jae dec into mov bound cmpsl div test leave inc mov add cld stos outsb in mov out rclb dec lahf in cwtl xor ss jo add sbb loop and pop pop icebp dec ss pop shlb sbb ljmp ss jp (bad) stc mov mov (bad) jmp loop fadds xor push mov xor and test adc fisttpll adc aaa jmp mov jns pmaxub inc and and mov mov pop clc in xchg xorl test or clc push sub cwtl pushf xor (bad) (bad) loopne mov (bad) xchg repz shr sub lret add push loop jecxz (bad) or mov cmp addr16 inc inc insb in xchg jge dec shll mov mov aaa stc iret sbb adc mull out mov adc inc inc lock les aas cmp shrl ret add shrl adc lcall fs jno adc jbe cli (bad) pop mov (bad) hlt xor sub fisttpl and jno jmp fildll xor (bad) aam mov sub mov xlat push xor push mov xor dec test push pop jl mov faddl dec loop pop les scas jo mov test sub inc test inc lret and in mov jecxz push add sbb xchg push mov je pop xchg mov push cmp cmp call jns adc cld cmc in xchg jno repnz mov push mov jne (bad) push aas and int3 push mov ss fsts inc insb mov mov cs inc push call out add fbld jne fsubs xchg es adc and push mov movsl xchg test das push cmpsl repz ss mov push iret mov fsubrl ret lock pop cld aam or pop mov ficoml and push mov sti sti dec push or jno out ret cmpsb add add mov xchg push incb repz stos and cmpsb adc dec pop pop out fucomip push test mov (bad) subb ret test inc out lea (bad) dec fdivl mov or sahf xchg dec mov cmpsb subl inc popf push push daa sarb (bad) mov sarl test lods std push lea sub (bad) cmp push popf inc jl mov imul cmp mov cmp shll std and jge adc adc hlt xlat jno mov pusha iret sbb ret testl (bad) mov xchg mov dec inc or pop jb ds or and outsl and cmpsl push push imul sahf xchg mov leave dec or mov inc stos xor pop dec cmp std xchg ljmp iret push enter push clc iret sbb mov dec test in cmp icebp fstpl jge mov inc mov lret aam into outsl jnp push das stos mov dec jg addl add jnp or movsl mov enter rclb dec in push ficompl cld dec mov cli call pop sbb push mov iret in out pop rolb fst notl ss push repnz and jmp dec test loop aaa popf int adc push mov mov pop adc pop ret aad dec push rolb pop les push pusha inc (bad) sub dec xlat jp xchg popf xor push idivb push or fptan pop mov lahf pop ror or xchg dec jne clc int scas shl cmp loop pop xchg or xchg add mov and (bad) mov jmp shl or push xlat push imul jnp mov sbb add mov adc mov ret stos ficomp inc (bad) pop xor leave (bad) (bad) xchg or jb mov sub push push mov pop mov std lcall (bad) sbb push sub popf out cli call dec xor mov out mov or hlt mov cld das out or pop push into pop loopne sub loopne jle test aas and sub jno mov push test mov inc int adc outsl popf and xchg repnz and in inc inc adc pop es ja aam outsb insl mov aaa push push push jae lahf dec loop (bad) adc test fwait mov (bad) call jecxz cmpsb jg and pop lret and push pop addr16 prefetch mov rcll pop (bad) jp sub leave xlat je sub cmp aad mov sbb outsl push (bad) and pop (bad) (bad) leave jl jp adc mov push test movsl pushl mov mov or jb or cmp lods xchg xchg mov cmpsl cmp adc (bad) in mov cld pushl adc bnd cmc jo movsb dec imul jp data16 add std cmp jnp inc xor fsubl fnstsw inc ja lret es mov fisttp xlat mov div xchg into test orb lock adc repz ret cmp or jle fsub aam sub (bad) psubb orl lahf aas repz xchg mov push (bad) lret incb shlb pop mov loopne mov mov lret dec mov jae sarb lret xchg scas xchg mov shrb pmaxub sahf cmp daa aam sbb inc mov inc or mov xchg ds sub popa cmp cld inc inc pop push dec pusha jp ret xchg aam sbb sub mov push aad cmp addl aas push cmp add ret pop das sub xchg das (bad) scas out call inc xor dec inc jle inc int int3 push fstpl gs adc sahf jb aad (bad) push and cwtl (bad) aas mov bound out lahf aas inc outsl sub pop push leave jne push jae dec inc push popf (bad) cwtl aam repnz jne movsl cltd and lcall int jle push and mov mov xor les jmp mov imul mov ja and loope mov popf xchg pusha adc push js pop loopne add (bad) jb rcrl xor int cmp jl fstl notb cmp in adcl mov shrl or mov jns (bad) clc mov push scas out xchg mov push mov cmpl or mov enter lahf lods inc test inc or or bound fsubrs mov mov dec dec jle or aas cmp sbb fwait aad icebp std mov cmp xchg add mov jbe std inc sbb lcall pop cltd leave std (bad) hlt pop mov into fdivrl xlat pop push movsl mov sahf pop sub sub cmp xor push fisubrl sbb adc out (bad) or sub and lods jecxz cmp leave or test inc inc fimull jle or or out ljmp or push ss xchg fdivs cmc jne shrb sub sti sub ret sbb inc sbb sub clc pop jl pop jl adc adc mov out inc ret xlat in push (bad) mov test pop scas out dec pop ja adc mov fwait add imul call pop lcall loopne gs cli ljmp push repnz cmp ds daa xchg and mov cmpl jae js out xchg outsl pusha out mov mov imul call roll sti push jp dec cwtl nop xor lea ret popa mov cs pop jge adc cld cmc jb and (bad) dec cmpsl push scas add pusha xor arpl daa enter jle in sahf orl scas lea jmp mov shr lret adc inc cmp mulb jl outsl int leave xor mov fsubp xchg xchg mov dec jae scas cli inc mov jnp cwtl sbb xchg and jmp pop add sub xor icebp jns popa push add dec lret jmp fiadd xor loop (bad) cmp les push daa mov mov shrl clc aas jne push ret into out lret inc rcl psubq jo arpl adc sub xchg mov pop xchg fldenv ss loope mov cmp jecxz in jb adc mov xlat out xor scas mov push inc mov stc fisubr (bad) mov jp mov lret cli scas cwtl ret lods mov (bad) add adc jno inc pop rcll ret inc and and (bad) mov add jge lods jno mov fcoms sbb push es cwtl sub roll jae sbb mov pop lock pop dec sahf or fs jb repnz mov loopne aad cmp cmc sub dec xchg negb addr16 jecxz sbb lret adc sbb sub jbe ljmp adcl mov pop mov sbb mov clc push xor scas and mov aaa and es cmp lcall or mov fidivl ljmp jo mov xchg insl cltd stos gs xchg xchg into call cmp (bad) xchg mov rolb mov jl shrl inc mov popa jbe lret addl mov jno sbb test ljmp repnz mov or sbb mov pop jmp xor mov pop lret daa lea adc mov ja imul push xchg (bad) mov or jb movb iret jb inc sbb or mov pushf sbb call cmp xchg in cwtl and cmp mov test pop inc lret mov nop add jmp or movsl adc xlat jnp pop ljmp movsl rcl fdiv xchg dec sub cmp mov fs pop jb adc insb mull xchg sub push sbb inc mov and pop sbb add ds imul xchg hlt ljmp jae sbb pop pop (bad) iret pop adc out andl pop xor cmp mov mov push lods lea xor mov out test mov repnz xchg mov pop dec loop mov sub gs pop jae cltd xchg inc ror sbb pop sbb dec stos mov leave loop xor sbb fldl2e lret mov mov and push arpl cwtl mov aas mov stos pop dec subl call (bad) xor cmc push or or rolb loope cltd pop test cmp mov mov mov das (bad) xchg cmp sbb mov sarl lret and ljmp lcall mov sbb mov rcll hlt push std in lods jo mov sub cmp lahf xchg xor les mov pop pop dec nop out inc flds mov dec insb pusha xor call daa imul sub dec cmpsb hlt jge lds inc sub inc mov sub sti (bad) jno inc pop clc jno mov cmp jecxz test mov repz cmp inc scas fwait scas adc enter adc mov cmp ret mov repz into sbb js jmp ffree insl fcmovb lret pop cmpsl push bnd pop inc mov and jge add mov aaa mov cmp test ror mov sar loope iret cmc mov lea push loop jg pop push stos ljmp or lret xor xchg and push inc mov add icebp negl xor sbb mov xchg or pusha cltd inc (bad) int pop jg mov mov push cwtl adc jecxz and sarl scas xchg mov sbb jb jnp mov lahf scas out pop mov insb int3 inc ret and and push int3 jne push push test mov mov dec mov mov sbb daa outsb mov jae rorb jmp xchg imul pop ja mov lahf sub mov mov sbb leave (bad) mov clc dec lret ljmp fwait repz popa or sbb sub scas aas fldcw sub sub pop rorb aam or xor cltd cli dec cmp sarl out cmp in cs dec mov cmp dec fwait xchg arpl divl pop insb pushf mov sub popf inc push lods xchg xor notl jnp das lcall jo push imul adc and arpl and ficoml imul cmp andb fsubrl cltd xchg mov into outsl xor cmp jl sti adcl or jne sub inc add xor mov inc mov cmp sbb imul out lcall xor aad shlb ret (bad) fnstcw inc jge and mov mov cltd jne dec inc mov push (bad) adc stc in clc cltd out lret jae into xchg cmp out clc xchg test sti or jmp mov out xchg loopne mov pop adc (bad) sub (bad) adc (bad) mov js dec int3 cmp lret stc hlt mov lret scas sub cmpsb rorl pushf adc out ljmp sub subb pop in insl pusha clc mov adc data16 aas (bad) jnp iret xchg add hlt sub mov pop and push mov sub inc aam sti nop (bad) mov jnp lods sti or shrb aas popw in mov sub daa repnz jg iret cmp xlat jle push mov xor test pop pop inc lods push cmp ds enter in add mov sbb outsl push icebp adc sub lahf jnp jp sbb pop jns repnz repz out out test ds inc jno (bad) in xchg mov stos test rcr mov call in iret ja in into (bad) jmp add repz pop jo test mov jecxz adc sbb addl jmp adc ds (bad) jp and ljmp mov pop lret cmp push xchg fistpll push fidivl adc enter jmp inc outsb out inc lcall repnz (bad) push packssdw pop into or sti in (bad) xchg sbb scas jae adc jp sbb push jp fdivr jecxz (bad) out negb jbe add mov push dec pop aaa sti gs lods xor and push cmp mov push xor jg jg inc loope mov lret pop mov dec mov jae jl scas xor lret xor sub mov add pop lods adc rcrb mov enter push fwait jb imul jle mov (bad) dec mov and sbb add (bad) cmpsb pop pop fwait int3 fistp inc rcll pop dec aam sbb test push (bad) loop ss aad jnp cltd adc sbb xchg jbe inc add xor scas or shr dec mov sub in xchg repz push pop xchg dec frstor mov mov cmp sbb lds and stos bound pop xor adc mov cmp jns lret pop mov lds dec scas ljmp ja or hlt or mov cmp in sub ljmp in call mov out punpcklwd ficom xchg xor mov movl and sahf test jmp xchg insb (bad) out lret sub fmuls pop aas inc test hlt popa mov cmpsb mov or fs loop call push or stos dec pop adc pop jl cmp lock in cwtl adc push pop jge pop xor pop push xchg aaa popa mov popf jecxz and adc add mov push and mov fsubs sahf sti cmc (bad) sbb cmp out ds jge and stc insl pop lods out mov iret jne (bad) xorl push dec pop add lret cmp dec add mov xlat jl dec sarb in aaa xor cmp pushf (bad) les test out push inc loopne loop dec stos push push adc ja in push xor or push mov (bad) cltd sbb mov pop add push (bad) repz inc add arpl (bad) jns mov inc and pop lds sarb xor cwtl aaa jge lahf subl in adc cli xor sbb fmuls xchg add lahf loope xor addr16 mov outsb add cs inc inc dec cmc pop in adcl sub in inc sub push ds cmp in (bad) jbe scas sbb out in pop push add pop rcr insl add in (bad) push inc inc ljmp jl cmp movaps stos das insb daa xchg insl (bad) shl test add pop xchg cmp xchg mov notb and shlb push xchg sub data16 jb jns movsb test cmpsl out cmpsl jl (bad) or cmpb fldt (bad) scas lahf cli lock jl pop or jb sbb test mov jmp push dec movsl rol push cmpsb xlat lock pop mov (bad) (bad) aam out dec and jb addl push into and movsb push pop add (bad) call mov adc sbb out or mov add pop mov movl dec iret loopne lret icebp rol pop mov pop xchg adc push fsubrl roll inc mov ret cmpb mov jb push aam mov pop cli sub (bad) cli into in mov push xor call adc stos push aaa jp or sub xchg jnp scas scas icebp adc dec sbb or inc ds or test (bad) out dec add iret rcrb push or rcl mov push push popa pop xchg mov adc dec mov popf sbb ffree (bad) fisub xchg fs sarb mov cmpsb movsl imul cmp arpl aas jbe pop out mov mov xchg lea adc add and mov xor inc mov fstp fdivrs xor mov cmp adc add sub je popa scas arpl rcr mov repnz movsb or subl ret aas mov dec fmull pop enter in cmpsb xor outsl in arpl sbb clc imul jl adc mov lods (bad) sub xchg fwait pop dec clc mov clc adc fwait lea in mov into (bad) in pop xchg icebp dec mov xchg pop cltd call sub xchg and (bad) (bad) add outsl and in pop popf shl inc out jne jmp or mov ds cmpsl and xor popa jnp bound mov ljmp xor (bad) testl cmp ret jns xor cmp fisubr dec fucomi or cmpsb movb inc scas imul scas mov or xchg adcl bound aad sub loopne lret cmp in ja outsb or test ljmp cmp (bad) lret dec (bad) jmp shrb vphaddbd aas sub sbb mov fs mov xor ljmp xchg cli hlt fmull pop jb push jb imul add repnz inc lods (bad) mov lret mov add orl xchg out scas rcr push ss aam mov mov (bad) insb inc adc clc mov movsl push (bad) mov jge add cmpsl das pushf sub test dec repz cld inc xor rol stc pop dec pop gs out mov iret pop das iret xchg repnz popf inc dec bound dec cmp xchg in fdivrl imul (bad) mov ret test cmp mov ss pop int3 ss lds jge dec mov dec dec xor cmp aas jge call pause mov and cmp js pusha adc push mov mov dec inc cmp pop unpckhps mov aad cld push push mov and or fucomip jl orl mov rorl push fist mov push lcall stc and sub icebp cmp and mov pop orl push push mov and (bad) hlt pop es roll cmp frstor mov aam or outsl test lret lret push mov push mov cltd jge cli mov or xor sbb lea adc inc js xchg int in cltd (bad) in cmpsb xor pop fistl gs shlb push and shr enterw push xchg test inc icebp icebp sub or and fisub icebp or lret adc sarl pop int3 mov cmp test stos int add push dec outsb jo add inc cli je int3 inc dec mov dec fisttpl fsts icebp mov fcmovnu push std mov add orl push cwtl jle mov add inc add inc or test cmp in cwtl jbe aaa xlat or sahf pushf stos iret or jl inc pop mov mov add bound mov outsb out adc inc inc shrb outsl sbb xor test cmp mull lods mov add cmpsl xchg xchg xor sbb shrl jne sbb adc iret jae stos inc fistpll jg,pn and testb insl mov dec push pushf inc inc sti add nop push dec fxch xchg ja lods ret addr16 cmp imul cwtl add clc inc cmp jge xchg pop mov mov inc movsb insb sbb xchg push loopne cltd sub stos popa dec adcb xchg arpl rep xor push test addr16 dec loope sub mov (bad) std add int xchg dec xlat add and lods out hlt push dec dec je fild sbb push pop ja inc sub out inc inc int3 jg ret xor and sbb mov sub sub out hlt inc sbb lods fild mov idiv (bad) outsl out jecxz add repz sub lods mov dec movsb pop dec cmp push mov dec jmp jmp add popl (bad) mov add sahf mov inc ds xchg and mov push insb jge xchg or sbb push push and imul fdivl aaa cmpsl movsb pop cmp fs pop iret aas mov lea mov jae jo sarb xor push mov repnz scas sbb rol movsl adc inc mov cmpsl das scas pop lods inc sahf xor xor fisub add cmp movsl cmp mov dec idivl sub lahf and movsb fcoms pop roll mov out cmpsb cmp mov pop push mov push jmp cmp insl sbb rclb push push rcrb push aas nop ss or movsl pop mov out inc dec sahf pop into pop loopne pop iret bound and icebp outsb aaa lret nop lcall iret loope in (bad) jmp icebp rorl lahf int add push fwait xlat ret mov mov inc lods jl pop ljmp sahf std pop push dec push pop cltd xchg add stos vmovlpd movsb (bad) cmc pushf (bad) mov cmp pop inc cmpsl insb sahf mov inc ffree clc in add and mov insl lock mov cs fldcw fstl mov pop jnp push mov pop insl outsb lcall mov fcoms les sbb pop adc (bad) mov arpl fcompl or xchg psrad rcrl aam rcrl dec jnp jae xor push sub push in lds in arpl adc mov mov fiadd push mov adc popa pop sbb cmp cmpsl in lcall pop movb sub (bad) pop jne adc std xor out dec ret dec clc call popf out jnp push sub pop adc jp jnp fmul popf fldcw (bad) and xchg out loope fidivrl loopne inc ret cmp jmp pop repnz lods lods push incb int3 lret adc rcl scas jge fsts pop mov inc sbb popf fstps xor fadds kmovb aaa mov enter ja push dec int3 shrl add mov fbld cmp fdivrs popf lcall jg mov and jmp jns jle roll pop xchg call inc (bad) xchg inc insb pop js insb pop aam mov jno scas push push pop (bad) pop cmpsl jle ret pop pop cmp jle push pop out jb and inc pop enter mov movsb xchg imul imul jecxz mov xchg jg and sub pop push and pop cmp aam stos in push nop jge lock in sahf arpl or loope out jb nop mov or testb adc popf cwtl push push stos addr16 nop cwtl mov out lock push rolb icebp in dec nop pop popf in les test (bad) in mov or ds sub or dec fs insb movsl pusha in outsb in jae pop repz int3 add cmpsl fidiv cmp scas pop adc dec xchg push imul fildl pop fsubr call icebp icebp shll jno fstpt loope jb jl orb mov mov jl xchg in stos push adcb sub fucom fadd and xchg loope loope xor mov stc jae xor movl insl pop dec movsb and sub sub scas inc pop mov fnstenv leave jno push jg push push (bad) cwtl lret xchg test inc gs rclb mov xchg dec push and cld jecxz out addr16 push decl pop sbb inc pop ret mov mov xchg xor sahf mov pop cmp and adc adc pop fs imul jae fildll inc adc out rcr xor daa in adc xchg jmp jg mov movsl pop inc xor or int mov into push jo cld mov shl pusha dec in out gs cmpsb push add adc ss xchg outsb fwait add test push lods mov loopne rclb dec daa inc out aaa cmpb xor lcall ret stos das (bad) sub lcall loope testl ficompl (bad) lods add mov jo aas adcb sub cwtl cltd jo jecxz aaa jl jg (bad) mov add pop enter mov daa mov mov lods fwait push mov mov rorb test mov mov arpl cmpsb jge mov push ret fwait push add pusha xlat and mov in mov push add sbb xchg push add scas push into daa ss in insb aad daa jno insl shll popf sbb inc shll jb push enter push outsl mov pop jp cld cmp add (bad) fld cmc (bad) or pop in iret insl cmp repz push hlt test inc fsub cmp shrl dec jae jle jp xchg mov rol sbb push call and es mov bsr enter scas xor mov movsl cmp adc dec adc outsb stos repnz cmp add xchg bound push inc adc andl out nop xchg xor mov push sub rclb loop push add pusha sti aam and xlat cmp push movsb and in jge cmp and mov sahf push idiv fstl cmc inc (bad) out sbb loope nop fst insl loopne jge adc incl pop aaa aad xchg xlat cmp mov add ljmp jg out test mov xchg mov xchg mov or aad (bad) mov xchg mov shrl mov test std mov and jo cmp cmp inc in inc push in stc mov mov pop or push pop pop dec test lret loope into xchg push outsl sbbl mov mov push xlat (bad) fisttp hlt mov js mov int xchg or pop add je in in mov mov push dec push fwait cmp adc lahf out and pop (bad) jnp sahf mov or (bad) mov mov sub scas cld pop stos mov sbbb jo lcall pop sub lret test outsb lea push cmpl std push fld1 jle pusha inc inc xchg pop push push or dec push pop mov mov loope mov sarb divb loop push jns push jne xchg pop addr16 test lods sub cltd add loop jbe cwtl aad or jno or hlt lret in xchg subb enter add out cmpsl cwtl jo int3 mov mov or stos ljmp lea xchg test sub (bad) or mov add ljmp ss mov ja lret gs pushf pop leave xchg sbb ja adc insb rcr arpl sbb les dec and (bad) lds mov cmp mov (bad) (bad) push or insl add (bad) push push leave push lock jmp (bad) out xor jl lods shlb mov jmp das xlat cld iret fisubr xor jmp mov jmp std sbb push mov xchg adc mov mov xchg sbb push out in add dec (bad) dec mov fistpll adc js neg pop cmp adc sbb adc push cltd ret ficom icebp fildl (bad) and ss jb and or test sarb pop enter jb add adc repz sbb sub cmpsb adc xchg imul testb cmp arpl dec mov sub mov nop inc mov fsubs (bad) ds mov out xchg pop scas mov inc ret cmp test sahf adc insl push push (bad) mov lods call sub add aaa sub dec and (bad) int cmp loop cmp jmp or adcl xor dec mov or dec adc and sub in xlat xor xchg jg bound les xchg roll daa pusha adc xchg adc cltd mov aas fwait lcall xor jge pop lea sbb and sbb inc push cmp and rcrb mov pop pop push fstp sbb add sub iret andl dec popf dec lds ficoml sub iret xlat mov pop and jl sub notl rcll inc pop sbb ret dec jmp je fptan jo test subb leave sbb jmp (bad) rclb (bad) hlt not popa jge adc scas sub fbld dec mov xor mov cmp add xchg lods lret cwtl xchg pop shl xor movsb jbe (bad) scas fs std sub push fbld inc inc add dec pop data16 (bad) imul sahf pop (bad) jp sub inc aad (bad) dec sahf and xor push mov hlt sar jl push in rorl fld sub and mov dec mov and and push mov push dec in repz mov ret cmp push pop sub loope pusha (bad) adc repz push dec xchg inc notb cmc mov test icebp hlt cmpsb jbe cs (bad) into push dec sub xchg xor and ja mov mov addl push adc jecxz rcr rcrb push stc (bad) push (bad) mov roll out dec sti pusha mov ret xor (bad) mov dec cmpsl xchg scas push push inc aad pop jmp sbb test and mov jo outsb int (bad) adc enter dec mov les (bad) movntq cli cmp scas adc cmpsb push ja out xchg sbb out mov push or push mov arpl lea inc xchg sub movsb and fcompl pusha mov ja aad cmp mov and pop xchg (bad) movsb outsb test cmp out push and or sub ja xchg repz sub cltd frstor or jo (bad) fdivl icebp and ficom or les mov push das (bad) cmp jb xor xchg push pop addr16 xor jo mov dec mov inc inc or mov pusha push mov jp adc jmp jae rcll lret lahf mull push in adc ret cmc mov pop push aad imull pushl push sbb dec stos aad push into daa in push or dec pop imul xor in push cmpsb sbb xchg (bad) push js (bad) dec jmp jae lea repz hlt or pop lds cs popa fild sub ret or mov cld and push mov xor cmp adc neg or das inc int3 inc outsb mov mov cmc cmpsb cmp xchg push xor das xchg fiaddl jl sbb ja mov call (bad) mov stc in inc stc repz fs ss out test fwait xchg addr16 xlat xlat stos pop lods jge mov push in in scas or mov shrl cmpsb gs inc mov inc push adc push test jb push cld jb mov stc addr16 and fmul lahf xor mov cmp mov or inc mov sahf pop xor jmp add jbe and xchg sarb mov fsubp sbb clc cmp mov push jae inc mov mov lea aas stos rcrb push fsubs mov out cltd dec inc lea andb test lret bound and dec xchg out mov and push xchg dec lods lahf je mov mov inc mov mov push push xchg dec outsb ficomp nop and insl dec inc int inc repnz push cld nop mov rorb push jle bound push rorl lcall add gs jne adc dec mov imul mov insb mov and out enter mov sbb push add out aas ss mov pusha fwait dec sti push (bad) jne sbb movsb lock fidivrl pop add testb (bad) cmpsl pop mov mov hlt cs adc icebp adc cmp push dec sbb xor dec cmpsb test test jno cmp push stc imul push inc xchg inc ljmp ret inc mov xchg fild cmp and ret lcall cld lret xchg jb cld inc aas sahf mov lret mov mov in iret jecxz xchg sbb aad (bad) mov mov push jnp adc push test and adc xchg ljmp cld jb mov push leave mov stos (bad) fimul cld and lock negl push fcompl rcr and repnz stc inc imul rcrl inc mov out add add adc out and dec or dec cmp and jle in fsts adc push mov lcall push push push mov scas lods mov sub pop mov stc add xor std cld rep aas addb (bad) out loopne mov in roll lods std add sub cld mov mov mov pop outsl inc push mov dec sub fcompl leave sarb mov cmpsb sub cmc jecxz cmp cmpsb rorb jg (bad) push js dec xor inc cs in sub mulb sub loop cmp push push icebp lea push mov sarb jecxz or lock mov cmp jmp cmp rolb cmp jo,pn jnp xchg and aam adc stc loope ror mov lret out insb scas (bad) jmp pop lods enter or in inc push mov cmc push xchg and notb popa test mov cmp insl incl adc je in lock (bad) jb xchg lds fsubrl lods mov hlt push sub xchg cld push leave xor xor insl xchg scas and aad inc sbb out mov notb dec rep sub in iret inc (bad) cmp sti lahf adc lods mov pusha push ja inc cmpsb movlps xor cwtl pop int3 dec mov push pop mov pop pop inc inc mov jne jecxz negb add in fldt jl ret xchg cmpsl aam je xor test loope jne xchg in xchg mov mov xchg push pop cmp cltd fnstcw int3 lods xlat fidivr cwtl mov or out add and stos mov popa xchg icebp sahf leave cmp inc test orb and dec sub mov fwait out in insl orl aad (bad) sti test pop mov cli jb xlat xchg xor push inc adc out push shlb mov and cmp push daa icebp (bad) mov mov or into cs cmp lods add mov test negl push cltd xchg insb enter dec mov int lret sub (bad) lcall js aad lcall jae fs pop in fcomps gs mov xchg dec (bad) dec fstl pop jnp sub dec out mov ljmp (bad) mov xor cwtl roll mov mov mov stc jb test into pop lods cmp pop push dec xchg cs or std bound xor xchg stc int3 les add loop push push scas mov add dec xchg (bad) inc add add pop inc mov pop add jns xchg out ljmp or (bad) out cmc push mov push aad jb aaa xchg jp and xchg xchg outsl nop mov loope sbb sub out jl and lea xor push bound outsb imul cs das jl mov push aas mov js push cmpsl mov arpl pop dec ret mov cmpsl xor push addl and lds aad imul (bad) (bad) loope cmp inc push xor mov mov hlt fiadd hlt stc inc addr16 dec mov lods push test out lcall je sbb movsl sub addr16 cmp (bad) sub add pop or xchg sbb mov lret out insb jg inc push xchg or sbb sub arpl adc aad call or lret sub mov clc loope jp push cmp lods add jae test adc (bad) mov jo imul (bad) aaa and jl (bad) (bad) or call cmp or xchg jo fimul insb push jl rcrb mov cmp mov stc outsb mov aaa insb pop js mov in popa cmpsb arpl insl pushf xchg int xor or push fisub popa jge addr16 jg cwtl sub add mov (bad) or (bad) ljmp adc adc push andb std lahf insb into sub es in mov dec mov jg mov mov xchg cwtl data16 mov push add xchg out dec in scas cmp cmp (bad) outsb fimul or lods ror outsb jmp adc mov dec cmpsb test out push iret push and mov mov cmc (bad) mov stos sub (bad) and (bad) mov adc dec icebp inc xor mov push jnp pandn add je jge mov nop add xlat and pop fdivrs jecxz lea jg xchg dec (bad) (bad) or test ret xchg cmp cwtl jge,pn xor icebp pushf jp sub xchg out fidivr scas dec jb call popf push decl (bad) loope xor add lea clc sub shrb sahf lds test pop lret fidivrl xchg adc scas push adc mov inc push mov xchg insl stos dec scas xor pop mov adc and shrb xchg or cmp lods mov dec push sub stos sti mov mov push mov lock aaa dec pop add shr sti pop pop cwtl dec adc and arpl pop sbb mov pop mov (bad) aad fnsave rol (bad) daa ret icebp cmpb adc adc dec data16 cli pop cwtl xchg fdivrl std sub sbb push xlat add cmp ret loop adc fmuls push and xor not inc repnz sahf sub or lds push xchg xor jmp movsl add push mov pushf push in xor cld sbb mov sbb sub inc mov xchg pop loopne stos cmp and push mov jb push cmp pushf roll sub lods jne sbb data16 add jno xor insb dec je fimul xchg push xchg xor add cmp in pushf lods sub pop int3 loop push mov xchg popa cmc shll out xchg adc mov mov sti repz push into add push je jne mov mov call ss xchg xor dec or dec adc cmpsb dec xchg aas int in pusha enter xchg fsubl xchg outsl adc ret iret mov fcomip test movsl (bad) fdivl mov jge pop add (bad) mov add scas (bad) push int3 adc mov inc lahf test sar leave sub cld dec pushf ja lahf lds popa scas pusha pushf mov dec loopne mov pop stc fldcw fxch jg je xchg adc push (bad) xor mov into mov addl mov arpl fistl aad or mov jmp mov popf jecxz pop and sti (bad) pop stos das ljmp pushf lods lret and and mov cmpsb loope push pop sub pop in dec stc cmp jg subl jne xchg xor cmp sbb inc arpl mov xchg adc fsubl xchg jb repnz lock pop mov jno (bad) xor shll xlat mov in test lret jo inc hlt ficomp in aaa jb (bad) jle popf push xchg cmpsl loopne popf sbb jle enter lds loope ret cmp dec adc in lds mov loope mov scas push mov and or bound xor iret adc mov rorl and xchg push rorb cmpl arpl les std out mov or sub test jns fs out imul (bad) fs add jnp cmp cmpl enter pusha mov rorb loop sbb xor xor mov dec xchg lcall stc mov rorb vmptrst int bound dec pushf arpl dec inc mov in xor xchg pop pop xor push fildll push pop (bad) sub in push pop xchg test adc inc dec lods stc and pop mov nop and sti add dec dec (bad) int rorb inc sub sbb adc out push outsl ret lret push jbe jp sub mov sbb bnd divb in loop stc adc dec lods int3 jl loope aad cmpsl sub pop imul inc repnz xor js add pop xor sti inc adc pop and sbb sub push jo pavgw or or pushf scas lret add fcoms mov push sbb xchg add add and sub lret inc in ja push cmpsl ret test xchg mov sub or test add mov fwait and sbb lcall cmp es mov push adc xchg outsl outsl out insb andl pop pushf cmp xchg fisubrl nop push nop mov outsl fnstsw lea (bad) stos imul xchg repz mov pop ljmpw imul jne scas in push fcoms and push mov and add lods jno in xchg lods dec das xchg jp cmc or xor dec mov (bad) mov cmp dec test adc rclb sbb pusha pop mov mov loop in cmp punpcklwd repz cmp add (bad) mov add stc mov pop insl cltd aad xchg sub orb iret or or addr16 int3 les or pop out (bad) out aas (bad) xlat je dec xchg push mov and cltd mov xchg pop mov sbb add push int pop push mov loope dec inc pop stos in cli shlb (bad) int3 dec mov adc and mov adc (bad) cmp cli imul xchg pushf pop mov ja sbb imul xor repz int or xor push add mov fcomi das cwtl add movsb inc insb jns add jmp add or aaa inc cmp lret sbb xor ds jne lods and icebp dec fnstsw shrl ds in xor sub pop xor ljmp popa int dec jae (bad) inc mov xchg xor jecxz mov mov mov cli dec scas push aaa aad or lock and adc inc nop cli push sbbl xchg call les jo inc std and repz fwait clc cwtl fisttp dec inc pop popa jmp ja jbe cmp or inc mov fidivrl outsb sub xlat aas sbb lret (bad) cmp inc and test sbb pusha out pop popa adc xchg outsb ret data16 mov jecxz push mov es popf das std and sar cli sub xchg cwtl outsb (bad) pop in repnz adc ljmp mov pushl imul cmpsl out jp sub lea into scas mov dec (bad) pusha inc jmp pop pop add push insb jo pop jae,pt in jno (bad) add aad and iret dec repz xchg jle nop aad lahf movsl xchg arpl cmp into insl push cmp scas fidivr mov in add push pop xchg lock xchg cs inc dec pop outsb (bad) nop jns or pop cmp xchg dec hlt in mov mov mov jle (bad) outsb fadds div xchg dec jne ret lea add push loop addl incb out and mov push dec fidiv (bad) push lds inc fs roll into stos shl mov sub inc push inc xor out addl push and (bad) push test cwtl pop pop fldenv out jmp leave cld or push imul ja jns repnz pop sbb mov adc inc outsl push call sub fild jge xor dec mov jle mov (bad) fwait mov jae sti call stos mov sub in push pop fistpl mov and add ja dec cs dec or sbb fidivr lahf sti mov lahf pop mov lret ljmp xor mov cmp pop push lahf xchg adc fildl cltd aam in sub mov repz es fisubr jo mov xor or int mov lods scas xor push adc daa (bad) sub mov cld fiadd push add repz scas xchg dec lcall icebp sbb icebp push xchg and mov mov scas jbe test jno xor mov xor push outsl fs ss movsb dec and (bad) loop imul sub and in xlat add cmp cmp call rolb lea dec fnstenv adc push cmp sbb cmp mov pop cmp inc sar inc jns in push lea cs add push or push xchg fdivl jp lock insb movsl movsl mov cmp sub and and rcrl aaa scas lea daa popa testl and insb mov xchg push jp dec daa xchg out imul mov push or sub jmp (bad) mov mov push out mov mov cmpsl sub xchg and imul dec (bad) sub in mov (bad) ss fwait jg pop pushf sub sub sub xchg cmpsl push dec aam mov xor inc mov push or cld inc cld push push repz idivb pop aas lret lock in mov and popa into or push insb sbb jbe xchg xchg and jae sub inc sub cwtl shl in sub or adc jno pop aas fs or mov movsl xor test push xchg and adc cmpsb decl adcl aas cmpsb adc lret jne (bad) dec and and repnz lahf mov aad iret jle or loop add bswap jmp aam int cmc push cwtl out mov fstl idivb pop lods std (bad) in mov movsb inc sbb xchg jnp int3 jge int cmc cmp sub jle test (bad) and sarb ds addl xchg fsubrl or xor movsl or sbb push loop andb add mov cs cmp dec sbb mov aaa push mov cmp popf fwait mov repz mov dec fadds rcrb jge mov mov in mov add jle popf push cmp lods xchg aas push and and out lds lahf in pop jg pop push dec (bad) shrl dec js jl outsb inc stos add fsubl mov push test int3 loop push xchg rcll mov mov or dec insb lret mov mov add das scas data16 dec scas and enter iret dec mov fiadd xchg test int int ret shr pop push repnz mov std (bad) scas addb mov adc xchg sbb push bound sti adc cmp into cmp mov push mov js outsl add jbe lcall mov pop dec fisubl pop movsl and jnp lods hlt sahf xor dec sbb scas cmp lret sub xchg popa in notl xchg xchg mov jmp insl test push aas mov push xchg pusha sub dec out sub jp rolb or mov pop cmp push sbb push inc ljmp rorb cld (bad) mov fwait jl mov push or cmp pop xchg inc inc fld mov test and push pop inc pop mov (bad) loopne inc xchg imul out xchg mov shlb push push pop pop outsl push sbb mov sbb cs cmp ret mov add inc repz mov mov inc (bad) jae cmp stc aad pop les add leave rcrl aas bound sbb (bad) lods lar pop fadds test mov clc dec pushf xor xchg fninit xor cmp and xchg mov or pusha jne sub mov pop mov jnp mov loopne mov jnp stos sbb (bad) ljmp mov push cs mov mov out lock xchg ja rcl mov xor shlb aam add imul sub repnz cld xchg push leave cmp bt jl xchg (bad) jne dec sub (bad) jb push cmp push sub push push sub (bad) arpl out adc cmp and pushf std test fisttpl mov mov mov and (bad) xchg mov add sbb ss adc pop pop mov fldenv sub inc adc cld imull jle js stc or add loopne (bad) add sarl cmp lock in or jmp pop out jnp mov mov sub mov pop or dec add lock add and ds popf adc fsts inc adc add repnz es dec daa mov mov lea mov jmp adc jns mov iret and rcll aas xchg fldl pop jo lods rcll (bad) hlt adcb xchg sub iret decl fcoms push sub xor push jno sub lock xchg leave mov adc xchg mov (bad) adc fldl cmp sbb add add insb sbb xor test iret icebp idivb sbb sub ficoml mov fs fnstsw inc out adc cmpsl jnp inc mov popf rcrl fist (bad) mov mov mov jne test rcl rcll mov sarl xor cmp adc dec in inc rorb mov ret test imulb sbb inc xchg dec sub adc cmpsb pusha scas or xlat xchg stos push add cs out inc aam into push out mov test out cmp mov add (bad) or push cmpsl push mov mov hlt mov pop lahf jecxz leave out mov add jl fistpl mov daa lret loopne outsb xor sahf and push ds add mov (bad) sti (bad) stc cwtl mov pop sti mov lret push lcall daa shl fcoms dec cmp jnp inc dec xchg dec cli pop add mov and int3 xorb out and lods push loop push cmp xchg inc cvtdq2ps fwait inc adc ja pop out inc cmpsb mov bnd adc (bad) loopne lcall jmp lahf sarl pop and mov inc jno lea imul inc jle data16 es dec test loopne hlt jmp adc and xchg lds xor dec sbb mov add adc in popf sahf sub adcl push scas int3 jg or rcrb adc pop adc xchg pop xlat bswap inc mov xchg int jle jae and (bad) mul cmp jbe std loop push add (bad) sub adc sti arpl data16 pushf adc xchg ror dec cmp dec xchg mov mov aam inc fsts (bad) fdivrs aam jmp js call aam sbb test sahf jns pushf inc es imul pop addr16 aam (bad) push insb shlb mov fiaddl insl mov mov push lcall mov xlat mov cmp pop cmp in enter cmp adc iret dec mov rcrl js lods sub mov jp punpcklbw lea fstpl (bad) adc mov jne jo pop mov jae das std fsubs cmp fcoms insl push lods je jns jl repz mov xchg inc mov mov repnz lea cmp popa xchg cmc stos mov int insb ss shrb cmc lea btc mov adcl mov (bad) push xchg jecxz push jg out xchg gs in inc pop mov dec loope xchg lds dec lods test stc mov mov mov sbbb and mov mov jle repz rcl fwait pop (bad) push in and hlt (bad) xchg js je dec xor xchg jo pop mov cmp or xchg pop test fcoms out lret mov arpl add adc mov adc arpl mov mov mov scas test fcomps int xchg cmc sub loope push mov sbb test push nop ret or push push scas out mov outsl out addl iret dec pop repz sbb xor jp insl sbb or add leave mov test and insl sarb mov jmp sbb jecxz pop imul out enter sar pop in pop adc and and paddw pop pop notb xchg xchg jb fwait lret imul leave ret lock sbb push es inc scas stc adc js add iret loope sub sub cmp ds cld push lea (bad) mov imul jle add fsubrs rep mov add sub cmp data16 outsl or js repz call pusha and rcl lds cmp and in mov push pop push push sub test or mov mov or mov ja inc cmp ret aas mov sbb mov mov cltd dec adc sub imull push and outsb loope ret es mov fild sbb repnz rcr mov stc push icebp cmp ja bound sbb inc xor push sti mov (bad) cmp adc push inc dec (bad) push xor fcmovbe hlt das pop mov jl and insb cmp or in pop scas mov fstpt jae push inc mov adc sbbl inc (bad) fmul jl pop loopne insb in sarb pop pop xor popa ss out shrb inc pop add sub lahf test jle push inc jg add sub ljmp dec mov imul adc fildll pop shr mov cwtl call in ds jne (bad) mov cmp cmp pop ret mov pop pop cwtl clc div fistpll xor xchg outsl scas mov jbe call stos int inc and sbb push push push les lods arpl es decb mov mov ljmp lcall mov jne popf rcl add scas outsb scas xchg vcomiss iret pop int3 lret adc mov pusha loope pop popf cmp repnz ja dec mov dec test fistpl pop dec and loopne cmpsl mov out lahf (bad) mov mov sbb sbb ret mov mov pop mov arpl cmp push xchg mov cli mov (bad) and into (bad) outsb das popa push in sbb ds in inc inc test xchg int3 and pop loope sub cmp sbb out dec repnz push push js inc fsts bsr jle inc dec arpl pop cmp arpl and aaa xor push (bad) fidivl fwait cltd rcrb loope inc dec adc jnp dec fld outsb iret cmp dec mov or xor xchg lcall pop loopne loope hlt idivl add jmp shlb xchg movsb (bad) jl je add and outsl outsb xor lret sub push pop jp cltd inc adc pushf fildll imul jae sub shl xchg fdivl stos mov sub gs xor rorl sub jnp xchg jnp mov (bad) mov pop rcrl mov inc int std fild pop push xor push mov xchg arpl mov (bad) mov or sub push mov adc mov xchg pop and pop pop out mov mov test and mov xchg mov lahf adc pop dec xchg push push dec xchg mov push inc sub pop xchg adc fxam mov dec mov jb loopne outsl int3 mov out (bad) in push loopne,pt in test add push fwait push or add movsl xor lods lods pop mov lahf mov lret cmpsb insl jp in es pop (bad) jo mov leave push pushf dec sub in mov mov pushf in add (bad) mov mov sub pop pushf adc jno or jge out push cmp jo sub stos mov pushf lock mov call pop call jp jmp fnstcw pusha add push mov lods sub add dec loop push sbb dec cmc push adc das outsb jae mov inc cmp adc pusha dec into call mov test xlat jne pushf jle icebp xchg add in movsl pusha mov int3 jb cmp xor xor xorl lcall fsubs jbe aaa push es jge jg cli cwtl xchg imul and scas sbb in lret lret (bad) push xchg (bad) (bad) lods add push rolb pop das popa xchg test ret lret xor rorl aad jge xchg cld xchg and mov mov fidivr adc mov mov lcall mov cs inc push or pop rcrb imul jns pop out hlt cmp test mov sub mov mov push das add int3 sub push shlb lods test insb cmp loopne fs int mov ret std mov mov test xor fimull jo dec fisttp ja cs or mov and xor xchg stos sub adc cld xor cmpsl pop js imul inc cmp xchg sbb push mov xchg test xchg (bad) cmpsl paddusw notb sbb or mov loop xchg addr16 pop es xchg loope xor out xlat pop test mov pop repnz (bad) adc push xchg push hlt fmul jmp addr16 xchg test cs jo push inc cmc push out mov xor or aad mov dec aad jb stos enter pop aam pop xlat scas xor popl dec cmp loopne sbb dec scas jge test xor arpl test movsl or and cmpsb (bad) popa pop inc cli shr and (bad) or std lret push mov in mov stc xchg cmc fdiv arpl and inc arpl lock adc imul or lahf jae jae sbb adc push call cli pushf lods adc clc mov add cld add inc jns dec and pusha mov aas jo mov sbb std loopne outsb loopne push xchg pop mov mov jnp es test xchg jp adc inc push mov sahf sahf and push mov adc mov or and sahf jo push mov push loopne cltd nop fwait mov push inc mov pop bound pop (bad) push or fwait adc rorb daa mov icebp pop or jo fdiv cmp ret pop or leave cmp test pop cmp das call leave daa jmp inc or orb jle icebp sbb xchg call adc sub pop sub pop sub push adc cld jnp xchg xchg imul dec daa xor xchg (bad) (bad) add shr or mov (bad) lods fwait fwait setbe scas aad test xchg cli adc dec mov mov cmp repz inc hlt pop das dec dec pop lds cmpsl (bad) and sub xchg jp jne pushf dec cmp (bad) cmc popa (bad) cmp cs (bad) and xchg push xchg push fwait addb mov mov fstpt lret or (bad) lret xchg xchg pusha lds mov ljmp mov inc repnz mov stos dec hlt xchg rolb rolb mov pushf es cmpsl jns push shld inc fstl pop push jo sar sub jmp into add xchg std jb adc loopne jne cli dec cmp or xchg shrb lahf (bad) lds rol ret (bad) scas je ret jae in (bad) sub jb xor dec dec loop lret xchg test mov sbb jno push (bad) repnz shlb int or adc (bad) jnp jmp iret lret test lock lahf ret mov jp xor faddl js aad cmc nop jns (bad) outsl xchg insb test jmp stos inc add aaa and mov frstor fiaddl mov dec fsts jp sbb and xor pop daa das cmp add ljmp insl cmpsl fild in loop test and and xchg fldl outsl sbb into int3 or xchg inc loope movsl fnsave scas cmovs cmp jno insl dec (bad) lock int scas adc in push ljmp (bad) xor lods aad incl lret aaa xchg aam sub in gs fs out es loop clc adc ljmp ljmp out outsb and cwtl test inc push push rclb cmpsl inc insb es xchg (bad) dec xor pop popa repz iret pop aad or dec psubusw jge jle fstps iret fcmovbe mov mov xchg mov pop inc sbbb ja mov dec mov int mov cwtl dec fsubrl iret lods adc mov jmp mov push iret push and cmp popf add sub xor push push leave insb xor aas add (bad) and jle test aas pop xlat bound (bad) into ss mov mov mov jne jge (bad) imul (bad) sub jnp xchg mov mov inc cmp xchg add xchg leave outsb fisttpl cmp push mov xchg sbb cld add sub ret push xor fsubrp add push paddusw sub xor fstpl fimul mov mov les mov (bad) test cmpl jbe mov fwait xor dec cs out repz sti xor out fprem1 fwait inc jno decl pushl push dec xor pop push adc mov push aaa out imul mov test imul inc adc adc mov out imul outsl dec insb ljmp push ljmp aaa sub and repnz xchg mov add mov jle mov jno imul xchg shr mov adc stc or xor call xor adc out or mov push scas rolb aaa mov push ss jno arpl push fs shr hlt fs int3 and jl stos (bad) int3 add or stc pop jno jp out xchg lret test sti fsts xor cld in lea jg inc mov insb rorl pop (bad) push mov xchg cmp inc scas icebp sbb xchg jmp xor test and pop ds xchg or imul into movsb test lea sub clc and push mov divb lods fisttp scas enter scas push sbb (bad) cmp add aas mov lods lcall pop jbe dec (bad) mov hlt jl inc cmpl or sub dec test bswap xchg outsb inc jle xor dec xchg and les dec pop lcall jecxz inc sahf xchg dec leave int add stos adc mov jmp push or inc sbb jmp push mov sbbl and ds adc mov or gs xor add or mov inc lds hlt cmp mov dec cmovb mov or clc and jg subl cmp int3 int add jp test sbb dec mov lcall xchg push in mov mov push mov lock adc je add jle fs sbb imul mov pushf mov popa xchg xlat cmp sub gs mov (bad) mov dec xlat mov sub cwtl pop int add push mov jne xchg mov test pop xchg lods mov sub in push push mov les push mov sarl ss rcrb ljmp test pop inc movb scas cltd push cmp sbb sub push mov daa mov clc lret adc sub add pop xchg pop inc cmp repnz clc rcll mov addr16 adc (bad) mov imul mov lret rclb mov ret insl notl das and mov divl xor sbb push push enter xor stc popf test pop cmp lret pop mov push ja icebp xlat das dec int3 (bad) cmp mov jnp fistpll cmpsb lahf and movsb popa mov imul repz mov mov xor pop mov or insb daa fisttpl lret and mov xchg ljmp nop sbb jl aaa adc adc sarl das sub pop xchg mov stos scas fnop subl loopne xor pusha repz fs push (bad) or sbb ljmp jnp cmp dec scas sbb mov movsb cmc outsl add outsl jl dec mov ret data16 std mov out js aas js sub aad xchg outsb xor add adc cmp cmp aas aad mov lcall (bad) jnp xor dec push xchg ljmp (bad) aam lcall sar pushf out mov jge cli adc (bad) popa xchg sbb rcll xorl inc es mov cmp sub and cmp (bad) and daa jne add out loopne xor jae inc xor push je test dec add es add pop jae lea mov ret test call dec je inc pusha pop ss stos xchg leave push movsb pop nop frstor pushf les add mov jo pop arpl mov xchg xor jmp inc pop add cld leave inc dec or adc popa outsl and movl add test lcall jne ja jmp inc js jle roll clc jge sub pop adcb idiv push jge test sbb dec jne lret xchg mov lods xor (bad) cmp fwait sbb lock out mov xchg pop mov dec rorl dec push inc in xor imul adc lahf mov dec aas loop and adcl (bad) cmp jp mov dec mov ret mov movsb sub jl and sbb pop dec nop cmp sbb andl stc jb and adc inc sub rcrl push xchg push pop inc call lret sbb push dec cld insl loopne dec ss cmc daa mov pop popa pushf or and mov rorl pop mov hlt rol lock adc out adc mov sbb cld das js pop push cltd xor jp or mov inc mov in stos inc pop rcrb xchg and arpl pop mov sbb mov mov out rol bound lds out fwait cmpsl mov or push or (bad) xchg jecxz test sbb sub ret scas lock movl pop push rolb jae adc mov out (bad) pop out inc cld pop out loopne movsl fisttpll ljmp cltd xor stos dec mov fwait and xor push inc jbe inc std mov adc mov mov xchg ret cwtl and cltd mov inc test pop mov jo sbbb cltd or adc xorb and les jmp adc or cmp lods dec lret lods (bad) mov xchg repnz cmp iret push mov xchg jle xchg sub inc xchg xchg lcall ds mov mov sub ljmp hlt (bad) cmpsb add xor push mov mov stos mov dec arpl pop xchg subb cmp stos inc push xlat push es mov jg xchg mov stos dec pop mov push fcomps (bad) mov insl js and cmp loopne push clc cmp loope xchg dec xor lahf shrb (bad) cmp mov into dec cmpsb sub cs test inc mov add push scas jmp cmp cmc pop inc leave add test sbb leave iret leave dec fcompl inc sub jg ret clc xchg ds pop cltd push js inc lods jno push cmp mov sbb mov xor and inc push push loopne mov repz popf add cmp stos stos rorb mov dec ficoml out scas or daa (bad) icebp loop stos outsl lcall cmc js lret aaa add pop (bad) stos xor mov mov add iret add jp inc fwait ja movsb sti mov add jbe adc insb repnz sub cwtl fmull push and test jb cmp fist pusha push in mov xor dec fbstp les pop xor dec jae,pt lods inc push mov inc xlat outsb (bad) mov and pop sahf out lret or mov shl mov adc mov cmpsb into loop nop lret add push int push stos pop pop mov cwtl cmpsl jbe mov fcmovbe shlb jge pop mov aas lret shl pop scas sub pop jns adc scas mov movsb xchg jp pop bound pushf ja cmp lahf and lret ja add ret daa jns dec xchg mov arpl pusha fildll mov adc and roll push shlb arpl pop ret outsl add xor xor push ja xchg outsb fs push lahf nop add or and pushl inc and xor mov lock dec push ret movsb add add mov fucom pop outsl pop add lock add lahf xor arpl or cmpsl pushf mov push stos mov mov (bad) dec xor xchg clc pop int3 mov sarb fcomps jmp jp pop xchg or mov dec xor and and adc xlat sahf in orl sub cmc daa adc push mulb adc push adc xchg jne sub rorl jbe cmp ror les loop jl,pt fadds inc mov fcmovnb nop fdivs xchg aad sahf mov outsb mov xchg pop cmc pop sti (bad) fmuls sub pop or mov jae dec adc pop and sub add movsl sbb add cmp push pop fwait movb pop mov mov pop lods movsb clc mov inc pushf insl addr16 mov mov xchg sbb dec in aam cmp popf pop into xchg or movsl lods test sub aad xchg clc push jl push fcom hlt push fist nop loopne push xlat mov or ss inc (bad) lret (bad) scas icebp daa sub ret in (bad) cmp adc and lahf mov rcll mov imulb jge ja in add jmp gs sbb push jns mov in nop jno,pt shlb fstpl mov lea (bad) mov (bad) mov sub mov mov aaa stc mov js fdivrs dec inc and dec pop sbb mov cmp mov bound mov and sub sub or sub mov xchg xchg adc mov mov jne xchg inc sub fbstp jmp inc add cmpsb and jo push sbb jg aaa test (bad) mov push dec pushl les lds das xor in movsb mov inc cmpsb sahf mov or jl (bad) xor push inc xchg shlb sbb cmp inc sbb lods and and (bad) pop push inc in lods adc cmpsl loopne mov fld1 std xchg add mov jnp neg in inc imul or lds insb aad pop sbb jo push fidivl cmp jp xor adc das jge mov xchg mov lods or mov les das loope,pt aaa adc and fisubl fucomip add movsb icebp jo sub rcrb inc dec cmp in addr16 jecxz ds test push je (bad) dec sar gs addr16 jbe js mov jnp ds add push adc ljmp jbe push daa xchg ds (bad) enter sub test sbb imul loop sbbl xor cmpsl fstpl mov xlat test int push rorl ret insl repz cmp (bad) loop jne iret aaa fstl gs jne mov cmp je push mov adc jno jo adc (bad) add or adc jae sti mov pop pop sub std or (bad) mov fsubl dec mov inc pop fwait mov sub push xor imul ret pop or lds mov and inc nop in call (bad) xor adc pop stos lret mov sbb mov mov int3 inc sub jmp hlt fsubr pop pop mov xor dec ljmp jmp out dec insb (bad) lock and adcl xchg pop decl mov dec icebp xor (bad) xor mov loop mov mov mov or (bad) mov aam sbb popf test fnop add rol nop fidivrl mov movsl mov inc cmp xchg mull dec mov (bad) fwait dec nop and mov lcall movsb jecxz mov inc push gs stos in pop lcall jb push cmc xor outsb sti xchg pusha cmpb lcall loope cmp push out aaa add idivb dec sahf ficompl cmp js ret mov adc dec nop arpl mov out test dec movsl mov ljmp das mov fcoml (bad) scas xchg xchg xor rcl jecxz aad call lods push push test out insl or dec daa mov jl and or or roll fildl sub dec mov mov pop mov bound and mov pop lods sbb out jb sbb pop (bad) rcrb xchg adc imul mov mov dec cmpsb mov scas xor add sbb int mov aaa insl out pop imul sbb cmpsb aam dec repnz mov pop or push inc movsb lahf js in xchg out push xor ret add push xor std sbb stos pop je or loope or pop push mov fist loope dec aaa mov mov shrb insb rorb hlt xchg das loopne add mov pop mov adc dec cmp push outsl stc adc idivl lea jg and mov and out fiaddl mov mov push pop jle out or push cmp push inc or stos loope (bad) je pop sbb mov lahf inc aas insl dec jle cmpsl cltd js rcrb adc imul les sub fwait cwtl xor mov mov push sbb and cmp test mov ljmp aaa ret xchg scas jl mov adc lcall or test pop or pop add mov leave rcrb push les mov in fdivs mov fadds adc outsb or sarl inc jl cwtl ret jno cmp pop dec test pop add push out stc (bad) xor dec imull scas mov and mov insl int3 sbb (bad) mov nop lret ja ljmp jb xchg insb mov inc cli push and xor xchg (bad) adc rcrl xchg cmp (bad) sti mov in in test xchg int sarl cmp mov (bad) call mov push xchg lock xchg mov (bad) rcl lret xor pop pop test andb xchg dec mov addb pusha clc aad mov movntq xchg xchg xchg scas jge xor bound gs int cmp ret cmp push sbb in jo repz stc jne sbb pusha adc cmpsl aad (bad) sahf add leave jne jp cmp sbb (bad) fwait into add stc repz mov cmp mov adc sbb repz insl mov push dec xchg cmpsl (bad) (bad) fldenv cmpsb aad sbb cld jae dec xchg push and jae xor mov mov add mov mov xlat (bad) jo popa fisubrl loop cmp xor outsb inc mov mov inc ss rcrb int3 add pop push xor pop pop mov and ss cld or cmp divb jp and (bad) mov mov dec mov aam adc inc ret xchg add ficoml sub pop rcrl and nop cmpsb pushf push test je in popa cmpsb sub cli ficomp sbb mov daa pop ds push mov push sub aam sarl add inc stc pushf hlt mov std lods out add (bad) sbb popl dec je pop xor xor jle loopne pop mov sti mov ja xchg in sub jge int sarl and adc repnz fimull int3 mov jg test add xor out mov adc (bad) xor mov mov imul mov imul cmp rcrl dec out adc and nop xor push mov outsb mov movl and aaa push insb loope (bad) jl inc jp adc mov dec pop inc decb jne test rcl lods and jl (bad) dec test xchg hlt dec mov and mov jl into xchg xchg sbb push pop mov jns adcl pop pop les sub out jl dec test es sbb pop mov (bad) or xchg jns mov xchg fbld jecxz push jne iret fistp dec inc or adc insl lcall jne xchg punpcklwd aam dec pop bound mov sbb or scas in push cmovae setns mov push popf aad mov ljmp stos scas es sbb add sbbl (bad) aaa jae xchg inc pop repz out aam mov adc popf dec sbb js sbb lret pop loope sbb test mov out adc sbb int push imul bnd jle push xor cmp xor adc mov or lret stos shrl dec std inc cli lods jmp les inc into popf and mov push lcall sbb inc cmp fisubrl xchg imulb loope test test cld int3 xchg int mov push out push fsubl lods iret xor test mov xchg adc or cmp inc lret nop or add jmp mov insl sbbl stos repnz repz xchg arpl xchg jle cmpsl xchg mov call aad insb or mov mov in int xchg lock (bad) lods add icebp dec dec fild into fisubr in jp in std insl movsb subb mov pushf or imul out cmpsl negl repnz in rcrb cli test fucomip fs pop outsl dec lea nop out call pop push imul and js push push inc mov cmc pop stos je faddp push ljmp aam enter imul mov in fdiv test fcmovnu push js test clc push inc push inc repnz mov (bad) fs jne add pop ljmp rcrl (bad) mov mov cltd imul sub lahf mov sub or ret dec xlat mov popl out loop dec xchg xor jno les imul mov lods not shr pop mov jne std (bad) cltd xchg and xchg add dec hlt sbb jne or cld dec mov mov ja js sahf flds dec outsb stc dec cmp push push jae fisttpll sub stc push in xlat xchg sahf and jl test xor sub hlt jo jmp movsb jmp push lret in sub icebp and xchg jo push mov in sbb movb repnz cmpsl fsubs mov xchg sbb add hlt outsl fisttpll cmp push imul into and add jo push jle negb pop push pop xor inc inc mov scas inc (bad) notl adc jb pop cmp sbb lods jl mov inc aas mov and sbb xor out (bad) scas inc dec mov js or push adc lret xchg push add leave mov std xchg sub (bad) dec pop adc into or cli sub pop adc (bad) icebp and (bad) icebp iret (bad) fwait mov pop pop fs mov arpl dec aam sti add cmpsl repnz jle out or hlt (bad) sbb cltd cs out cmp pusha push push int3 xor call xchg push outsl push imul mov xchg push sbb loope sbb xchg aas pop sbb add inc jbe int fildll sbb lret mov out mov (bad) pop and and aas pushf jp inc lahf and pop in pushf in adc sahf insl sbb pusha ret fidivrl push hlt jae cmp adc fnstcw add cmpsl xor add popa sub popl fcompl dec pusha pop mov popf in lods lret int pop inc jno mov cwtl pop cmp cltd push pop in pop scas movsb sbb mov dec bswap cmp adc push xchg movsl imul aaa xor faddl mov add sub xchg sbb movsb or pop movsb mov xchg push movsb mov fs es pop fs pop jns imul add shl fucomp mov nop pop xchg das adc xor push rcrl inc mov std ret (bad) sub cmp mov xor add insl mov mov mov push gs dec stc adc (bad) push jle rcrb push sbb add sbb push sub shrl mov outsb popa sub jb cmp negl xchg les incl fs dec jbe pop scas (bad) and pusha fxch and dec ljmp lea push cmp jp mov xchg mov adc cmp xchg les repnz cmp js roll (bad) inc add jo int mov mov mov mov aam mov cmp jge jl sbbb xor mov xor fdivrp mov jmp imul cld cmc sbb loop aas or outsl lret mov mov jecxz mov out call repz movsl cmp pop add ds add jb gs das icebp jne movsb mov ja (bad) sub into loope push pusha pop das call add out sbb fldenv jns nop cmp push jno lods mov sub movsl or imul push or cmc or inc in fwait (bad) inc sbb jmp xchg lods (bad) cmp jns mov out push fs xchg imul test and push cmp ret js jge dec cwtl or push cmc and ret mov adc jbe iret mov mov dec rcll mov aam dec push hlt fwait jbe fild inc jae sbb test daa pop jo inc dec and dec inc sti imul sub xlat jb movsl or lds jge ljmp icebp aam cwtl inc test mov jle adc push aas scas mov adc (bad) pop pop decb in sub add dec idiv adcb inc inc adc mov imul mov iret pushf inc inc pop movsb jb test sbb cmp jno adc outsl mov mov push out cmp xor sub lock mov sbb push xchg pop (bad) test mov iret es inc aam in mov xchg mov or push jge repnz cltd inc aas popf movb out xchg mov fistl mov cli mov loop xchg aam lahf xchg mov shll enter dec pinsrw or mov nop pop mov xchg jg out mov xchg push add inc cmp mov mov and sub dec push ret sar cs mov xchg pusha sub pop cmpsl stos lret mov cs adc lahf pop sbb xor pop sbb inc (bad) (bad) fdivl popa jl add test sbb fmull and loopne xor div adc jl fisttp adcb mov cmp pop xlat (bad) fstl std add push or fmull inc pop pusha add (bad) shr add inc xchg adc movsl loope lods mov mov lret fsubrs int adc (bad) cmovo lret mov out and xorl ret enter xor mov cmp mov and fistpl int3 pop pop inc test jo (bad) cli xchg pop jl jg fsts mov xchg (bad) sub (bad) int3 inc sbb mov push xor movsl nop imul inc and xchg add int fmuls dec insb dec jae pop out mov xchg bound dec adc inc and nop mov pop mov or sub adc push rorl fildll xor fdivrl push stos arpl into das sbb pusha push rcrb in pop std inc jmp rol (bad) aam inc je mov lds xor std ret jle aad and outsb std jge xchg jmp sbb test mov cmp mov (bad) test leave in pop jnp push sbb fwait mov jmp sbb jnp,pn push loopne (bad) push js aam dec cmc jno test cli pop mov xchg mov mov and sbb ret jno push cmp fcompp xchg jp rorl xchg testl inc nop and dec mov fldt inc out add ds or cltd ret aaa in iret sub xor nop out dec inc inc out sti mov les xchg dec sub aad sti jae ja aas shll jmp imulb clc or std push (bad) mov (bad) mulb cltd movsb icebp les jne inc pushw and mov jmp jp cmp inc leave mov fsts (bad) int3 in lock fwait xor mov cld icebp cli std push aam or ficoml shld es into mov iret idivb pop rolb xchg dec mov idiv ss sbb mov xchg push mov outsl mov cmp idiv (bad) xlat push sbb test lock fcom fidivrl mov xor mov add xor imul cmp popf loop ret pop bound mov xchg ret test pusha popa jmp sub fnstsw movsl or sub sub push in loop stos fsubrs int mov nop and (bad) fucomp ja jmp and fldcw das daa (bad) cmp aam test or (bad) std stc mov aam jnp lret outsl mov sti sahf cwtl rolb jge sub lcall xorl mov in add hlt repz fisttpll add push call mov and mov xchg mov fdivs test or dec xor dec pop mov mov and push mov dec jp mov xchg xor (bad) into shll cmp mov inc dec cmp test es dec bound push lret call (bad) push push push pop push fwait add arpl xchg push xor mov cmpsl stc push mov add fs fwait lods (bad) inc (bad) sbb jecxz (bad) (bad) in out inc mov xor mov popa roll mov leave mov loop bound dec sub aas ss sub cmp ss add mov jle stos fsubr aam (bad) fwait ret js mov aaa out xchg sti xor jns xchg sbb adc (bad) repz imul mov movsb ret and imul ret scas stc sahf sbb inc mov sub sbb insb pusha scas mov out dec mov (bad) add and lods notl pop xchg int js cmp aas stos rcrl (bad) leave xlat cld loopne loopne fwait jno and in lea cmp lahf dec xchg ljmp ret fwait outsl xlat fcomps xor popf cwtl add test xor add pusha repnz aam or lret mov aam insb out test inc dec lods divl jb (bad) xor cmp jmp or pushf or (bad) mov icebp pop gs insl or in scas mov int3 pop test cmp sbb addr16 pop into loop adc cmp inc into scas pop mov cmpsl fdivrs sahf jns fisub aam scas pop repz insb dec adc inc mov (bad) lock lock sbb imul and xchg push ljmp imul in and fstps sub mov rolb sbb and leave mov pop (bad) stos push mov int3 out (bad) fmull xor test mov pop fs jp icebp cmp cmpsb sti aam loop mov bound imul out mov mov mov pop or inc sbb test sub push inc loopne xchg (bad) mov inc mov das loopne repz dec sarb clc adc repz cwtl jmp rcr cmp sbb cs jmp pushw mov out mov cwtl push dec xchg pop mov xor ret cmpsl (bad) or mov sub or ljmp pop daa fimull mov push cmp dec int3 xchg mov es ss jl cs lods out mov add push add inc sub mov lock jno push sbb jns cmpl sbb xchg rcrb jle push pop repnz cmc mov stos or cmp mov adc loope mov andl xor xor adc sub jbe (bad) lea lcall je (bad) jbe xlat mov (bad) loope and test xchg sbb jp jp mov pushl dec add inc sub push out shlb test and adc push mov data16 int sbb lds sar dec in bound lret or inc or sub xor jne push dec mov and stc pop std cwtl cmpl add sbb and push lea push scas mov mov data16 push insb sub sbb inc enter sbb test outsb loop je dec (bad) pop jae dec and or out adc cs out daa iret pop xorl rorl data16 rolb sbb or pop lock ja ds out jge xchg lds xor aas test (bad) xor lds rcl ret push push mov mov hlt jl stos xchg push je inc jg popf das push repz dec cli inc ljmp ds in lods js jecxz lock sahf mov std cmp notb or loop movsb jns inc mov lahf ret (bad) xor xchg scas push mov dec orl sbb fdivrl xchg push dec in dec popa ds (bad) (bad) dec cmp adc sbb sub cmp scas xchg cwtl rorb out cli jns pop cmp adc sbb and pushf mov push outsl xchg pop push cmp push inc test xor addl (bad) clc mov call clc outsb xchg sbb out pop daa mov push or inc and repz mov fdivrl movsb fsubl and lods aad cwtl adc aam adc push and cwtl mov shlb push ret xchg cmp jecxz (bad) out test adc bound popf (bad) lahf xchg movsl lods clc cmpsl sub cmpsb push or rcrb gs scas out mov jp inc (bad) mov and jmp pop inc adcl aam out repnz adc scas in mov ljmp in jnp or loopne cmc fs ret sbb jge popf sub xchg sbb push ss push jecxz push sub ja or stos data16 movsl push movsb hlt dec les jno jp dec adc pusha lock push dec in ds aam add lods dec ljmp ds les pop inc iret inc lock es int pusha adc (bad) nop fcmove push pop push xchg fs mov (bad) pusha pop aaa jecxz add movsl sbb test je add test mov xor add enter icebp bound dec pop ja test mov and dec push pop pop (bad) mov mov dec jae pushf cltd daa cmp ds xchg es xchg (bad) mov or and in sub rclb mov jge iret pushf test cmp lods pop popf jnp dec sarl out xchg ret jae mov pop mov in cmp lea out sti jo sbb sub add test dec sub xor in clc (bad) xlat add mov push loopne rcrb or out dec ss in pusha add adcl mov lret mov or inc popf inc (bad) and cmc xchg pop lcall in add mov dec pop or cmpsl daa xor xchg push arpl movsb fnstsw mov fidivl (bad) out sbb inc outsl inc push stc shrl push xor test mov test das push scas popa mov cmp xor cmp add and mov cmp adc push cmc adc dec fdivl jl pop inc icebp out adc cmc xchg aam xor dec and xor add lret aas inc push subl jge mov mov daa dec stc (bad) bound subb add je,pn fdiv cmp jns xor mov test and adc sub mov dec cmp test shl fidiv inc negl sarl xor xchg jp or dec or or inc leave loopne ds adc pop sbb pop stos nop mov pop pop cmp loop out cmp std arpl add cmp cmp in xchg out (bad) outsb pop mov jno jmp xchg jbe adc mov and (bad) div notb pop or sub cmc jae and pushf jp ret data16 decl or dec xor cmpsb sbb push and adc in pop or cwtl ds sarb mov std xchg outsl inc loopne in ret dec push (bad) cmp or out pop mov add cmpsl mov inc cmp (bad) mov mov pop es pop ret stc xchg inc lea cmpsl gs mov insl or inc (bad) movsl andl mov xchg inc push mov cmpsl loop mov mov ret sarl sbb imul xchg add cs loopne (bad) loope dec inc incl jno ret stos repnz out mov add sub push je ret mov inc mov popf daa test xchg adc add outsl push add adc pop (bad) int sub or xor lcall mov popa xchg fisttp jo cmp add stc jge push and xor mov bnd sahf mov jbe sahf mov movsl call or ror push cmp push sub movsb imul popf mov pop add add sub pusha enter lcall jl adc xchg mov cmp les les das mov jno jns pop inc loopne mov das mov (bad) xor repz ss mov cmpsb scas flds sub inc cli inc xchg mov xchg push cli adc pop fdivl nop adc lods (bad) js bnd inc mov inc hlt and (bad) ljmp jne or fnstcw jle dec sbb ljmp cmp test sub imul insb call (bad) test or sub xchg mull jge scas outsb cmp fimull sub cltd lahf jnp sarl ret xor mov mov xchg mov dec mov jg cld mov inc push xchg jp test cmp jecxz adc jl loopne mov movsl cmp mov lcall xor imul insb mov icebp sub ss cmpsl dec in mov mov jl fnstcw scas push dec jb sbb mov aaa cli dec xor pop addr16 lea jp arpl inc inc push popa pop (bad) divb dec jge lea inc mov lahf movsb leave aas sbb cld leave test push xchg dec daa push push (bad) pop push push fistl mov or hlt dec lret pusha repz test nop lods add idivb sbb fcoms hlt add (bad) mov imul pop pushf je add and pop mov imul xchg sbb push xor sbb popa rcrb mov enter push into dec inc pop and (bad) xchg sub xchg add inc es out mov inc adc or xor cmpsl scas adc mov push out mov cmpsb (bad) adc (bad) cli lret popf clc and into lea push xorl jae mov leave push cmp icebp outsl das mov (bad) xor fmul out inc jl popf mov adc addr16 pop rcr cmp mov xor pop adc std (bad) mov roll mov aaa mov addl add jle les sahf cwtl mov or lret jne sbb mov dec xchg fsubl mov adc fiadd and fdivs xchg movsl mov pop add mov mov jg xor pop xchg stc ja cld adcl inc xlat movsl sbb test mov leave mov push and cmp and push hlt mov das push out cmpsl xchg add mov stos add aam shlb push int pusha mov int3 dec mov add pop fisttp scas xchg cmp adc mov nop testl xor jno addr16 push xor inc mov inc mov pusha add mov and aad sub and inc inc popf ja jo pushf add cmp std sub pop in cld into lock push sti mov pop push jl setns les nop ss inc cmc pop pop jge pop or mov leave jno mov dec cmpsb or scas sub xchg xor mov mov jb adc mov push adc loop jge adc mov imul push mov call sbb loope pop addl jo dec das arpl scas pop call (bad) lcall sar xor cmp push mov cmp mov pop fldln2 loopne sub xorl sub fdivrs mov cmc mov iret push in cmp cmp dec rcrl mov xchg mov addr16 stc fmul jp outsl nop std jecxz movl mov (bad) jp jbe and (bad) mov lock xor in xor insl enter pop loop mov xchg pusha rol or mov sub xor push dec jnp mov ret (bad) cmpsl jnp addb and pushf mov xor mov sbb push adc mov (bad) jo aaa sbb dec call sbb mov cli fwait leave insl ret push out fs test fisubl cmp (bad) gs mov ljmp out popa aas dec out (bad) out sub imul test aad lods outsb test add cli addl mov mov sbb mov gs repz lods dec aaa mov mov jp jp out shll fldt cmpl test adc cld push lcall pop mov inc sar imul sub xor stos jg sbb test inc xchg and inc adc lahf mov pop inc inc fld jo hlt les fstpl (bad) hlt jns int fidivr (bad) icebp inc (bad) push sahf jmp inc out dec push xorl dec addr16 or addb stc and scas or fistp dec insb addr16 pop pop cmpsb insb cli dec mov mov sbb jo je lods xor mov xor jbe sub inc mov movsl cmc mov dec cmp je xor or add jo push lret sub jns inc mov outsb out (bad) xlat test (bad) inc and sbb xlat data16 inc lret dec cmp cmp fsubp xchg mov xorb mov in adc mov repz lcallw ret negl shr lahf inc mov xchg enter add (bad) sarb mov insl into loope fldl stos lret and in aas test call jecxz call addr16 mov movsb or jl mulb movl daa bound jbe sub xor mov ds imul mov mov gs stos xchg sahf sbb imul push and gs ret jge aas test (bad) pop xchg jns sbb mov jnp pop (bad) xchg call cmc jge sub test dec rclb cmp push jb out and jmp fwait push int3 iret (bad) in div sub and jmp xchg xor sub jo add (bad) repz mov dec stos sbb lods sub fstps dec mov fcoml stos xchg sub mov add loop,pn inc pushf cmp aaa xchg (bad) pop and mov stos inc dec cmp arpl push int3 mov scas pop push fxtract cmp cwtl inc push lods test in mov sub pushf and cmp out sbbl stos xor (bad) xor mov cmp push sub or insl mov out mov arpl dec jecxz scas cmp jge mov aad movups push xchg dec push and mov mov out push push rorb jle adc popf mov pop insl stc cmp adc lcall xchg mov call push (bad) jb or int3 outsl test push mov je,pn leave pop xchg push mov or gs int3 dec dec push jb ss mov xlat sahf repz cmp (bad) pop shlb and adc mov ljmp cmc pop pop movsb rcll rolb pop imulb adc das mov cmp dec out push mov lea notb ss popl jnp in out fstps sbb jp popf and les xchg lods jmp out jl push daa sbbb les mov add pop outsl sbb pushaw (bad) in pop push xchg fsubrp fstpt mov in adc iret push xor or adcb sub (bad) fisttp jno fisttp movsl incb into iret jb shr adc fnstcw stc (bad) aam mov push (bad) das mov sub sub cmp daa int fisubr lds jg stos in dec (bad) out inc add push adc xchg jnp stc sar scas imull pop pusha stos and lds (bad) lahf fldt or and ljmp dec insb mov pusha rcrl fdivrp sbb cli lds scas mov daa je (bad) jns jb roll xorb int leave test in sub lds adc xchg scas inc sbb inc jl mov enter pop xchg push js movsb cmp iret mov jb fldenv scas lods rcr lcall jae,pn pop pop mov out push and and loopne jne sub jle mov cltd clc mov (bad) clc loop mov pushf call jb cmp ret ja and xlat out mulb mov mov inc out nop sti movsl fmuls add mov pop jne mov pop int3 loopne sarb dec sbb inc push push (bad) loop std inc (bad) push add movsb aam fcoms lock scas mov orl sub scas ljmp jmp and jnp nop (bad) iret jge movsl jno mov (bad) cli rep insl aaa jo sub dec adcb cs mov inc loopne icebp rorb call (bad) rorl push lds xorl sarb jl sub lcall dec xor (bad) es lcall lods aam xchg mov (bad) fistpll mov jb cmp sbb cmc in fsubl daa add rcrl inc inc (bad) lahf loope fldl (bad) sbb xchg push cmp std pop (bad) orl or and stos dec jnp icebp dec xchg loopne push or or inc ds mov sub cmc sbbb mov enter popf test or pop xchg mov sbb cmp sub iret xchg xchg xchg popa jns jns es icebp mov sub mov stos cltd outsl inc add mov sub sub push mov adc in repz stos and fnstcw je and mul loope push adc enter and xor popa jecxz call cmp dec insl loop hlt jb push arpl or test cmp out loope or jmp sub or push jecxz loop jae cmp mov xor lea push (bad) dec jg movsl les sub out aas pop iret mov (bad) or movsl or fldl (bad) inc das push js adc sbb lea dec xor cmpsb ret out xchg mov mov push lcall push push outsl cmp or pop xchg and adc dec (bad) loop cmp lret insl mov jp (bad) mov push mov xchg xlat push xor mov movsl lods sub push dec xchg mov adc rorl pop or xchg and dec loop lock inc pushf cmp aad pop std js je mov imul push jg repnz push inc pop es inc fdivs rcr out mov cld popf sub push jmp push dec lret inc adc mov je fidiv js xlat call in add xchg xchg loopne ret mul cld in imul dec dec jo popf mov inc sub lahf adc out rcl push fs adc nop mov clc jle sbbb and mov es mov pop xchg push jmp jge repz int3 divl mov jne int pop pop pop or loope and adc push pop or mov push aaa jo sbb sbb enter das adc int3 enter scas jmp inc imul xchg xchg or cmpsl scas in jg inc mov in inc frstor dec or outsl sahf in in pop (bad) frstor or popa lods mov int imul jns push push cmp andl es ss add add fistl mov inc loopne xchg jno sbb xor sahf js out ja pop push push out jo repnz js call adc cmp movb mov ret mov pop clc adc mov or sbb cmp pop call jae int3 imul imul and jbe mov jbe jnp ljmp or pop rol insb into data16 adc xor icebp movsb (bad) pushl sub subl sbb je xor xchg or loop mov mov les out (bad) bnd stos andl inc fdivl push mov imul sbb mov lds pop nop and jno ret and adc test dec dec mov mov test mov test outsb dec jno inc mov pop mov insb in stos dec or data16 int mov xor mov xor xchg jp arpl push adc and insb imul jnp jle loopne shl xchg push dec hlt mov mov daa mov sarl repnz cmp leave adc std pop pushl pop add or enter bnd jecxz dec pop sbb add xchg add or xor sbbb int pop out pop xchg popf insl pop add jno sub aad and js dec cmp mov (bad) and push and inc push mov out and sbb and sbb sbb mov jecxz mov enter pop cmp lret jle out jecxz jge leave dec or jle sub repnz aas scas cmc pop xlat sub mov jg shrl test sub xor jecxz mov test pop cld pop hlt inc mov lea push jl sub lahf lods xor out pop out add add mov and pushf xor int into mov or cli rorb and sbb mov daa call xchg stos jmp mov lods push outsb cmp in dec cmp jl jae push ret ret leave rcrb aaa addl push sub adc pop push add inc inc out adc cli imul fidivl adcb dec jno leave jne pop cmp imul loop adc xor cmp aaa loopne or mov sti push jg adc xor aam fsubp push mov sbb add and mov mov adc mov sbbl imul lods in test xchg jecxz push movsb inc mov push jecxz dec ds rclb lahf inc mov mov xlat xor int adc stc ds xchg ljmp lahf sub cwtl std jl out outsb in mov (bad) jbe (bad) fidivr jae jo dec lret in sub js stos cltd pusha insb iret loopne call test test mov bound mov add fstpl orb (bad) lahf mov inc sub xor pop sub push xchg mov xor lret out mov outsl jbe test mov inc cmpsl pop push mov dec or outsl push enter rcrl test mov inc das jge test incb rclb pop pop push xor clc mov inc divb sub mov mov insb iret scas mov mov call pop mull mov or cmp jp (bad) daa imull push daa arpl fcomp es mov (bad) jne insb inc mov pop lahf pop gs jnp (bad) into inc scas xchg add push enter ljmp testl loope jmp leave call mov aas push xor data16 xlat jne (bad) xchg int3 cmpsl jecxz (bad) sbb adc shr loopne bound nop je or out jns push pop or addr16 lds popa adc mov out out sbb ss lcall sub shlb sar js repz sub gs mov mov arpl push int daa add mov add mov hlt hlt idivb push popf movsb or jb and and xchg mov lret imul push add shrb test xor and cmp mov inc jecxz dec push inc pop xchg adc (bad) ret scas in inc shl imul loopne xchg xor lds push orl or xchg outsl (bad) jno sbb in or dec push test fsubrp adc ja ds adc xlat movsl lea ret and stc (bad) mov adc adc sbb flds scas es fisubr (bad) jg in insb (bad) dec or insb ret test inc ret sbb mov imul jecxz or mov movsl fucomi imul xchg popa push cltd xlat lock sbb (bad) cs or add pop out push cli sbb fisubrl xor daa pop gs icebp mov xor verr sub icebp cmc mov mov icebp adc fs outsl and fscale lret sbb cld rcrl sub mov test xchg bound lods pop cmpsb shll jno int3 jnp int adc push xchg dec xor loop popf add lds arpl xchg mov inc rorb mov cmp js dec adc push popa ror pop lds jae sub loopne adc fwait jmp adc dec sub jecxz test adc mov int xchg rcl clc bound push cmp stos sbb and mov mov cwtl in pop rcr pop jb sbb ljmp adc scas dec cmp ret xchg sbb lret cs mov jae scas mov loop dec loope xor mov jo std ret int3 jne cmp inc enter into add jg lcall xchg mov push add shll pop jbe xchg push mov sbb cmp or addr16 ss dec pop ds (bad) xchg mov inc lods test push pop sbb cltd jo sbb rclb inc fsubrl lahf adc mov xor scas lahf fimull mov lods fsts shrl adc add lods inc shrl mov cmc sbb jb sub andl (bad) pop sub cwtl xchg jmp xchg xchg push je stos popf and and ljmp outsb and pop xchg inc lahf scas and (bad) cmpxchg fs mov adc push dec cld jbe inc adc cwtl (bad) sub mov jae or (bad) popf push mov roll icebp push xor jns imul cs xor mov js jnp test cltd (bad) (bad) fisttp pop mul mov out rcrl lock inc sarb mov lret jmp dec das add mov imul out fimull xchg scas xor scas xor cwtl xor jp adc js,pt mov data16 sti out push outsb stc pop inc stos movsb cltd sbbl mov hlt orl sub (bad) (bad) (bad) cmp (bad) xor and cld xchg daa adc mov mov popf lds insb shrb push push mov cs jmp or jno add jl mov jge jbe xchg int int3 (bad) in cltd push sub pop out das stos mov out das loop,pn mov cs out mov dec into out call mov inc push notb adc jecxz rcl or test in fmulp mov and and sbb cltd jl test popa ficom mov out lock xchg sbb cs imul out cwtl (bad) xchg sar jle dec mov xor cltd adc push leave test add mov lods in jmp stos mov mov (bad) or cmc aam call inc out cmc lahf cld pushl sti fsubr mov xor (bad) mov push pop sbb push xchg popa jge mov test inc xchg shl lock js scas dec imul xchg inc out xor mov scas shrb test das cmp fsincos or sub xor push inc cwtl rol je ja inc sub mov jp dec pusha pop xor icebp sbb mov loop (bad) adc or fcoml jns mov cld cmp outsl xlat adc (bad) jno mov roll aas aam jge daa xchg cld cmp dec scas inc stos sbb arpl mov xor stos test sbb mov dec cmp fs (bad) push xor mov gs (bad) sub pop sub (bad) (bad) xchg mul imul add adc dec push jne pop xlat nop adc or rcrl jae add jp add out bound pop imul inc leave sbb jo dec repnz nop and popf xchg dec mov loope adc mov cmp inc bswap in mov xor pop aad adc jge sarb jne or inc out and lahf pop jle mov mov in leave add push popa push inc std movsb mov adc in out push add sbbb inc jle clc pop sti incl xor das adc sbb dec in mov les cs jno xchg xlat sbb jnp mov mov adc in jecxz add or inc xor (bad) xor ret inc push mov mov and or es pop ss daa inc jns xor xchg push mov mov repnz sbb sysexit push jmp jg movsb dec aad cmc in aam enter out int sbb iret jo xor outsb mov or (bad) cmp iret and sbb insb xchg inc (bad) sub sub cs je pop xor (bad) aas popa das cli mov std (bad) push lret (bad) mov fdivl ds gs sub (bad) stc rcr nop sti dec nop es iret call dec lods call mov dec dec cwtl pop dec adc aaa dec not push mov mov roll ljmp mov sbb lods mov push ds test xchg mov test sub sarb out cli pop jge jg push in lods movsb fwait xchg push mov pop test pop mov xchg mov lret pop pop incb xor mov loope sub mov mov mov push push jge xchg inc sub faddp adc jp add leave push cmpsl mov mov imull (bad) xor lahf dec cld cli jmp cld push lods in pop iret mov pop rclb ret outsl jns adc xor or mov fisttpll mov cmp jae sbb repnz (bad) mov je imul mov add pop rorb adc xchg stos insl lahf adc adc inc iret pop lds pop stos (bad) mov xor lret mov in or fbld jp addl test push xor or (bad) xor cli cmpsl (bad) out aam cltd (bad) ret add inc xor dec fisttpll jne mov pop push imul cwtl and lret mov xlat and insb sub jne orl sbb mov dec mov sub and pop mov int3 xchg inc mov mul leave lret in push sbb cld add ffree loopne xchg les mov fnsave push aad std fldenv ljmp pop (bad) outsl repz or jae mov loop cmp sbb dec jge adc in outsb cmp jns push pop dec sbb rclb fisub fstpl xor (bad) inc xchg rcrb mov cmp mov ss sbb nop xor mov sarb push (bad) repnz xchg or js jnp call (bad) push add (bad) aam ljmp fwait jp or or fnclex es leave or mov mov lcall adc xchg pop xchg insl or jns push popa mov in in or mov xchg in jle ljmp outsb sub (bad) xor sti fcoml adc mov push xchg mov mov popl add sub into dec xchg out mov aam in leave and mov pop push xor add jecxz (bad) jb push xchg in jle pusha push sbb cmp pop mov iret int3 lea xor mov push xlat adc jmp cmc pop fsubr lret mov mov or or and (bad) fldt scas cmp mov loop scas sub jno sub sarl rcll push cltd stc loop push fistpll sti pop aaa xor je cmpsb out xlat xchg push xchg xchg sub mov jmp dec mov lea xchg adc sub loope xchg push std xor sbb pop inc jae and mov jno sbb adc lret ret mov lcall jbe mov jmp aad cmp xor shrb inc mov cmp nop pop (bad) scas push shll jecxz mov sub gs cmp dec lea jmp ja cmp sub fistp lock inc test inc sbb insl push mov cmc leave pushf pop lret jl fcoml xchg adc dec mov dec inc dec pop jo adc mov mov xor cmp xlat das mov or and dec out popf pop or cli mov dec ret lcall push or jge mov fldcw mov imul sahf xchg cmp aaa mov adc adc push xchg loop pop xchg ret xchg (bad) (bad) lds cmpl add xchg pop xor aas mov lcall push cli pop inc push es lcall test mov popl test enter nop int3 xor push adc std into and pop flds adc or les add imul and cmp fadds int dec out mov loope faddl xor mov lods pop pop not dec push xor aam and mov xor xchg jne test (bad) mov movsb jbe mov cwtl mov sbbl push sti push mov enter out xor test fstpl or outsl jae mov loop leave in add xchg pop or sti mov jns ss outsb adc adc xlat mov les movsl sub lods test or add cmpsb cmp lods xchg mov cli cmp es cmp xchg jp dec inc lods pop mov jae loope aad push arpl sub pop xor pop in mov or mov mov int aaa cmpsb cs adc push leave inc (bad) movsb (bad) in fldt shll mov sar xchg adc cmp stos cld dec cmp into push sub lea cmp mov xchg icebp mov cmp int jp je mov testb scas jl dec sub fnsave cmp sbb push dec loop inc pop adc xor mov iret jge pop jl xlat (bad) sub push cmp pop mov sbb push (bad) sbb out mov or mov mov cmc cmpsl popf pop sub inc sub jmp sub xchg cld push fstpl mov push (bad) jecxz (bad) push cmp stc push sub lahf add insb or jg arpl popf dec lret cmp push jmp or daa jno or mov rcrb repz sub lret mov pcmpgtw stos icebp inc ss sub aam mov std inc mov dec jmp fidivrl dec loopne ljmp arpl xchg sti cmpsl imul mov lods shlb test add jns (bad) jge sbb scas xchg sbb jbe and out insb dec or push daa jl inc cmp pop repz insl xchg add int roll sbb pop xchg pushl (bad) fsubl mov testb cmpsb fdivs test mov mov (bad) aad scas int3 mov lock ds xor adc ret sbb in cmp dec inc pop mov hlt fbld les push (bad) xor jecxz pop in nop insl imul cmp push lods xchg add pop in push push pop mov jbe jp dec es inc bound jecxz outsl into (bad) push push xchg jge cltd arpl jnp mov pop in addr16 sbb sub add ljmp in mov ja stos jne pop xchg add xchg lds jg dec jo pop mov mov cmp add popa sbb xchg lods outsl adc imul pop scas (bad) ja mov divl call ret cmpsb xor sub (bad) (bad) insl xor js imul int3 xor fwait icebp adc aam and adc idivb icebp mov pop sub mov cwtl pop jo neg cmp sbb mov je or sbb sbb in or xor addb mov lcall cld jne add dec int3 mov sbb fcmovnb sub ljmp imul push ret loopne and lret mov add push popf pop cmc fdivrs pop or out xor ror stos mov pop adc adc mov cmpl adc sarl into rorb loope xrelease enter dec pusha das mov sub jno adc (bad) and dec mov sub xchg (bad) mov dec mov inc sub or clc xor push (bad) hlt push popa xchg cmp bound xor in sub int pop aad jl pop aaa jo outsl std jmp mov dec xchg inc ss mov sbb inc cmovg push divl stos xchg adc and fistpll mov xchg xchg adc and add (bad) sub cld scas cmp mov lcall scas cli cmp and (bad) jge jae adc andl addr16 inc cmp mov in cmpsb sbb nop fs je jb int3 xchg test mov sbb push dec adc imul (bad) xorb xor mov xor cli jae sub xchg popa std cmp sub mov jmp movsl (bad) or imul add inc std pusha ds fsubl inc push inc mov insb xchg fstp mov push test outsb inc call int pusha jo and sarl popf adc scas jp push pop test int3 inc gs cmpsl jnp out fsts adc cmp xchg jp in mov pop popf (bad) jmp mov push cld dec xchg jnp mov add and dec mov icebp mov in pop mov cmp ret cwtl jmp cmp mov bound jge xchg das pop loop hlt (bad) cmc or jmp mov or roll jle (bad) repz inc mov cld push jne ret popa cmp fcmovnu outsl loopne,pn dec fnstsw ss jle popf jns and idiv and or sbb int3 dec pop (bad) cld jge add xchg mov pop orb cmp stos and movsl add mov jmp enter jl sub ds sbb and xchg stos outsb out hlt jb imul and arpl pushf jl imul cmp (bad) lea mov mov clc mov test sbb mov mov and loopne jne outsb ficoml add sub into push leave dec mov cmp jb repnz addb cmp popf loope adc sahf inc stc aam addr16 mov inc in imulb jnp push loopne pop int3 push xor in lcall dec jp movl adc pop arpl and leave (bad) lock pushf into les pop jbe pop adc scas add dec dec mov clc cmc xchg mov xchg (bad) mov mov ss xchg mov adc add cli pop cmc cmp add or (bad) jb cmpb sub out sbb push jbe mov fsts enter xchg test insb aad xor xchg inc inc add stos nop sbb mov mov bnd push jno push xchg addr16 pop jge push repz stc sub adc in aam ret fiaddl arpl ja adc movsl pushf inc xor jb cmp subb mov cmp aam int3 inc faddp add std inc mov (bad) insl clc testl pop xlat or je (bad) mov shlb jle bound push repnz dec xchg in cwtl jmp test fsubrs add cs call pop or arpl mov in cmpsl xchg movsb sarl (bad) outsb stos xchg xchg mov sbb std or xchg mov lock adc (bad) xchg add scas xchg dec inc js and sbb sub adc mov jle or mov inc cmp and stos sub shr bound push lret jns cmp fstpt push (bad) dec dec js (bad) imul jns (bad) cmp xor nop dec popa or nop repz fprem into sbb test es sbb mov or js rorb or lock mov ret xor pop inc mov cmp iret push jmp mov ds repnz jg pusha insl pop inc mov (bad) icebp sbb mov sbb in imul cmp jbe ret sbb pop xchg or out out push fisttpl jnp (bad) or mov xchg data16 pop mov mov push ret dec adc mov int3 xchg sbb call mov hlt dec fisttpl inc or pop stos jne xchg test aad jle pop dec inc or push xchg fcom xor aas jl or ja push test test loope,pn jnp sub mov add adc rcll pop mov scas shlb xor pop sub sub push mov mov pop scas call inc mov adc leave leave ret push mov enter add or mov into cmpsl and clc mov iret pop and gs xorb cld push aam sbb insl imul mov cwtl popf push icebp subl inc xchg stos outsl in inc ret or (bad) fldenv daa ja or cltd inc (bad) popa add xor rcrb repz lret sbb (bad) mov xorl mov ja pop mov mov dec sub je aas clc inc cltd push std gs cld sti hlt scas sti fcmovnb push dec stc es push jbe ljmp and outsl pop push xchg fwait inc arpl and pop mov insl addl mov rcr (bad) pusha sub push adc push pop mov popf sbb or push jmp popf js adc insb out xchg mov nop addps fnsave mov popf scas inc mov xchg jmp shrl jns adc gs mov jae push hlt push xchg outsl mov leave xchg (bad) testl enter test add cli xorl (bad) jne rcrl cmpsb ret push andl adc out stos push and push popa add sbb fisubr xor mov push stos (bad) mov inc pusha pusha lods cltd add into (bad) outsl fdivl pop xchg mov dec ja push mov fs mov outsb pop int sbb jae push push push (bad) les iret cli roll aas sub push sahf imull test lock push scas pop dec push cmp orl inc outsl mov lods dec ds (bad) xchg insl test mov mov int inc xor js dec xorb hlt in pop std sub lods dec mov pop add push pop rcr test cli xchg es mov fidivr push inc popa push dec xor in cmp dec mov cpuid and mov out test and test sbb lcall mov push ror mov test pop sbb les mov fwait out sarl cld push mov ss push lahf dec ret xchg jne rcr sub ja add in (bad) out jo fstpl push push add push mov test test xlat sub dec inc cmp shr pushf insl cltd mov dec outsb jmp push ja loop mov cwtl add jl pop xor test mov loop mov out jle sbb loop or movsl fcompl pop scas xor popa xor inc dec shll mov mov test outsl test aaa (bad) imul cmp dec js fdivrl and icebp jb je adc das pop xchg imul mov ljmp pusha push and push jo xor xlat hlt xchg lods inc cs imul popa push loop adc neg sbb pop das sub das mov arpl and in sub or sbb push inc subl jnp push or add jno cmp push icebp icebp adc pop sub jbe cmpsl add mov inc xchg ljmp cmovle jne push pop and mov fs xchg mov pop fwait pop adc outsl imul scas inc sbb popa punpckhdq or notb out push mov mov xchg jae adc sahf pushf iret mov jmp (bad) mov pop sub ljmp popf stc stc jne popf xchg ljmp in or cmp insb lock pop dec mov test cmp dec adc xchg rcr mov repz or lcall es lea mov mov idiv and (bad) fidiv sub jecxz dec cmc icebp out fildl lods in dec adc rclb enter add jge adc mov addr16 test mov scas test or fcompl mov mov loop lcall fwait jp adc xchg xchg loop negl insl and inc pop cmp sub (bad) int adc ret pusha mov daa (bad) mov xlat negl xchg test add mov sbb insl aas push cmpsl cmp sub mov mov mov into mov popf push push pusha xor jmp popf movb in pop gs lret or aaa ss xchg xchg or ffree insl std adc inc rclb out xor adc fisttpl (bad) sub out ficom call adc push or cmpsb dec cmpsl jbe push loope in adc insl call incb repnz xchg fsubrs fs rclb adc mov rorl movsl fdivrl nop sbb jmp push repnz dec ljmp adc mov adc xchg mov sub jg,pt sub enter mov ja push clc shl lods cmp and clc push negb dec ja jmp xchg out pop pop cmc lahf and sahf sti dec mov scas or jo ja fbld xchg mov push mov mov lcall mov and mov or ret cwtl mov aas jl push pop stos loope mov pop aas fisubrl sti test std push pop mov push out xchg in daa dec cmpsb aas enter shrb repnz pop dec mov mov xchg pop pop in dec inc aam mov pop icebp cmp adc (bad) xchg lcall ret popf mov add ja icebp jmp dec cmpsl sbb ja stc test out jge stos les jnp shl push mov idivb imul mov loope mov mov dec cmpl psubusb (bad) xor clc (bad) push or stos cmp scas pusha or ss add add mov test lods inc sub adc fcmovbe and push cmp sub aaa or inc mov lcall cmp mov lods and gs push add pop fwait xor repnz (bad) adc repnz mov sub ss shrl insb cmp ja popf and dec popa xchg jnp pop ds outsb popa push pushf sbb mov shrb xchg jge lods sbb mov push jg cmc out sub (bad) mov or mov ljmp test inc jl push inc mov fwait mov and xchg and dec ja cli dec jnp push xor adc popa outsl ljmp int popf les push or aas outsb sub addr16 add jno pop mov stc or aas gs add push add cmc sti sti sbb sub arpl int3 call test iret sbb mov add jne xchg test inc sbb or or iret mov cmp adc and pop aad jmp rolb mov pop mov sbbl int3 pop inc subl mov js fnstsw xchg out mov xor mov gs mov inc divl js sub xchg or jecxz insl out sub ljmp xor jp mov push jo cmp mov in xchg push mov cwtl and push bound je mov aad incb mov mov mov call mov cmp or sarb mov add xor icebp xor xchg ljmp jp punpckldq imul inc dec gs test jl xor enter xor fdivs jns call loopne lods out mov jb cmpl iret sub fistp out jecxz pop loopne sbb and ret call pushf xchg or jno pop (bad) xor je xor push loopne outsb push dec (bad) repnz stc lret pusha and jg (bad) hlt mov fcmovnbe movsb ffree fild dec js xchg fs repnz popa gs add mov xor mov into xchg inc mov cmp out out shl pop and into aas cmp push das mov xor shl aaa mov flds gs jmp lcall pop mov into or pop and pop pusha or test adc jnp push movsb nop sub mov cld movsl jne test inc cs and mov add xor dec roll add pop hlt (bad) sti xor mov sbb sbb clc mov sub negl mov mov push adc jne scas mov test and outsl pop jbe (bad) push arpl mov ja sbb dec paddusb flds push jne fucom mov xchg jg mov sbb dec (bad) (bad) cld lds fcom mov push mov add jecxz notb push lock and mov mov cmp scas in xor dec inc sub adc jmp jb sbb fildl std mov cmp mov pop addb movb or (bad) aam add (bad) out cmp inc ret mov fnstsw xor aas sbb mov les out pop (bad) lret sbb sub dec arpl dec test dec outsb mov out testb inc mov cld and and push nop cli pop shlb cld iret pop xor (bad) xor movsl int3 aas out mov mov cld loope (bad) das in adc outsl stc mov lock insl push les dec sbb (bad) shr xchg mov in jbe or pop mov add cmp leave into les xor and movsb sbb dec (bad) add and lcall jae loop lds add and inc pop into movsb sub and cs push lahf out das mov (bad) imul push sub mov or aam (bad) mov xchg addr16 add subl inc sbb fs pop ja dec or push ds sti in popa dec sbb cli loope scas nop and push je xchg ret sub xchg cmc gs xchg imul in xchg jb xchg sub mov ja and bswap cmpsb fs pop add mov stc push jo xor push push std jle dec rclb sub xor iret xchg mov add mov hlt add (bad) rcrl cmp mov aaa clc cs dec test jo or lret out adc mov in ficom popa int repnz mov fwait mov inc dec movntpd push fnstsw inc pop cmp sub push xor movsb sbb lea cmp (bad) repz lods mov sub xlat mov (bad) (bad) movsl mov jl push sub cli adc div inc mov icebp mov jne cmc cli out sub out sar sbb gs sahf push pop and decb cs xchg mov pop icebp out and push icebp test mov mov clc loop jne popa jmp sub sbb mov popf mov sub fisubr mov push sbb ljmp pop cmp jmp sbbb inc test cli iret and mov stos dec jnp in mov fnsave std std xchg lcall dec lods xor pop push (bad) (bad) and (bad) incl dec test add pushf xchg mov pop iret adc mov (bad) call fsubr xor mov add repnz ficompl cmp jp xchg xchg pushf cwtl xor bnd xor jno imul push mov test xlat sbb xchg mov lcall into lret mov sbb jg sub mov repnz dec addr16 ret fs mov and cwtl add out es les test movsb dec popf add pop mov mov in pusha cltd pop aas clc rolb loope fs jge enter or lods pop in and jne lods in jle pop nop les xlat pop xor ret xchg orl xor mul inc ret xchg xchg or jae scas mov or mov je pop and dec mulb jmp xorl repz out xchg imul jno test cmp in mov aas pop outsb insb or mov pop fwait in vmread in popa icebp out xchg ror add repnz mov out push loopne enter outsl (bad) pop pop xchg test int3 testl xchg subl popf lods fcom mov decl popa cli lret mov (bad) (bad) mov push fst dec and jmp iret std dec cmpl out jae push mov fstps push (bad) fmulp addr16 int mov in jo int3 xor test imul pop stc (bad) mov aaa pushf les push mov mov xchg cld adc pop dec push lcall push (bad) ds (bad) inc test jmp xor jnp add popf inc pushf loope mov add jo movsl (bad) add cld jnp dec popa sub and ds daa and add xchg mov loopne mov dec sbb outsl pop pop (bad) push divl icebp push add movsl (bad) iret push mov popa xor dec test nop mov add popl pop cmp and inc cmp aaa dec popf adc adc pop sbb fcoms cmpl stc xor xchg sub cmp fdivs pop mov push cltd das scas fsubs out cmp inc dec add lea or mov out pop jne dec sbb mov inc sbb pushf repz or xlat cltd ljmp dec xor loope and or outsl sahf dec out dec nop jno into mov nop arpl jecxz lea aas sbb sub js shll xor adc jbe mov in xchg ljmp mov icebp sub jnp in mul test cli mov fdivs inc jns ds shll nop fldcw mov mov mov mov mov mov mov ss cmc cmp (bad) scas enter in sbb push sub aaa lret loop in sti sub mov push call xchg sub fs and sbb adc mov mov lahf sbb cmp gs jb mov sarl outsl pop dec mov xchg push cmp lea cs inc movsl sarb xor test mov inc mull jl lods fiadd mov lea jns push jo lds outsl pop sti (bad) mov xchg jns sbb (bad) out lods or pop and xchg jo mov sub and cli shll fisubrl mov data16 mov movb push jb cwtl stos cmp mov (bad) dec int3 aas popf (bad) jp and mov fist shlb jle fadds je aam xchg or mov in subl mov add mov js ret xor je sub and ret popa jo sub and in adc or arpl orl adc movsl xor adc fdiv dec orl push cmp bound sbb iret or xlat (bad) jecxz xchg fsubr push fnstenv and cs adcb pop ljmp lods (bad) ja shrl cli testb lret mov push sbb loop or cmp cltd bound dec out push aad cli xchg pusha push add inc shrl cmpsl stos jns sbb and adc jecxz das into push aas xchg roll and imul stc mov xor ss les dec std mov shlb dec outsl or or outsl inc addb cmpsl add xor je jne or mov mov (bad) loope add jge sbb push callw ret cwtl jp sbb repnz cmp les scas sahf insb addr16 add and aaa scas (bad) sub xor out cmc rorl or test pop aas orl xchg (bad) loopne fdivl add incb mov lahf dec mov outsb push scas or cmp sbb loope pop (bad) data16 fistpll fistp imul mov mov addr16 ljmp mov sbb mov cmp in in int pop adcl ja push jns,pn dec iret icebp or pop cmc add add loope xchg cmpsl xchg ds push pop cmpb test cwtl lahf (bad) push dec push test test xor aad outsb dec mov dec xchg sub lcall leave mov scas adc xor lea in pop sbb lods xlat mov dec insl stos pop cli push and test jbe in rolb and (bad) stc sti sbb ss enter mov hlt pushl inc add xor push adc idiv xchg sub xor dec hlt ret fidivl inc rcrl sub dec mov pop mov imul mov jb push repnz ret and push push outsb mov mov lret push mov test jg xor jl lret jb mov sbb stc inc (bad) icebp sub pop pusha int inc mov and sub outsl cmp in ss mov lret pop inc cmp mov lret mov mov fs scas shll xchg and fwait sub (bad) sub cmp xor inc add and pop repnz xor sub test ret rcl loopne dec rclb inc es sub push into (bad) cld std mov int imul ret test dec out add cmpsl lods sub test out and pop xor mov jb int inc cmpb insl out inc in add in mov call sbb pushf jno sbb test and out nop js add test in test xchg movsl fdivrl xlat fiadd cmpsb in mov mov push xchg leave xchg mov insb or popa incb (bad) out jbe mov xor mov mov cmp fcomip adc mov (bad) daa dec inc (bad) icebp sub xlat call daa mov test pop ror (bad) fnstenv ljmp jbe or mov cli shr out imul gs pop mov mov jno test rcll mov lods es sbb inc push arpl bound lret adc cmp insb shll xor and push in sub jmp decl lea test inc jmp cmp mov push ds popa mov sarl mov or test fidivrl mov or les or mov pushf daa sbb lock lret cmp in aam add pop outsl xchg int3 pusha add (bad) stc mov shlb incb jl (bad) cli clc jl ljmp divb (bad) shlb sbb frstor int lcall mov add jp add jns cmp push fnop or imul fdiv cmpsl mov push cmpsb shrb test jg jmp sub and ds sbb sbb (bad) cmpsl xchg push push push cs sbb outsb pusha mov shll popa push inc push lret inc xchg std rcrw leave out adc jbe (bad) ficomp (bad) pusha cmpsl pop mov ret insb or cs out jb or or clc xchg push mov pop dec test adc in enter fisub push das ja out out (bad) pop mov sub and sub test inc fist imul (bad) push xor int3 lret jbe das push sbb sub push adc inc outsb pop and jecxz fldl jnp and sub mov jmp loopne lcall inc in cwtl pusha andl int3 mov fstl push imul sbb add sub je data16 dec xor les push push inc into (bad) mov jp inc pop pop mov mov test add push ljmp loopne (bad) fimul aad out jno xchg jnp call jl jecxz xor and sbb mov cmp mov rorl out cli or mov or mov jns dec not or test arpl ds sbb cmp cltd insl push jmp test call and mov call mov stc mov pop push xchg push int ret or mov lret xchg pusha adc les xchg adc test xchg daa xlat popa dec or dec in jle mov xlat push mov pop and stc stc mov cmpsb imul test or add enter fistp addb add sbb and jno (bad) or inc pushf movsb add cmpsl es cmc rcrb cmp push arpl sbb out jle hlt nop clc rclb sbb inc inc nop in ds in pop out push and in movzbl mov out dec or pushf ljmp inc fdivrl lock mov and bound dec (bad) pop rorb push jecxz rep adc fs jae bound xchg mov iret xchg xchg push (bad) rol in aas and cmp sti repnz arpl dec (bad) inc mov xchg dec push fbstp cmp daa mov mov repnz mov adc jmp std mov (bad) mov mov push inc lea xchg pop int xor add je jg aas and shlb or xor cld mov cwtl xor and mov push mov adc repz mov xor add ds dec xor sub cwtl sub inc gs nop call rolb in pop inc sbb mov fsts pop repz push rcrb nop inc push (bad) cmc inc inc (bad) sar fiadd loopne xor xlat popa movsb pop mov mov pop cmp cmp (bad) test xor mov loopne mov rorb pop mov xchg xor into cmp dec call in fwait (bad) cli or jl dec and imul fdivrl xlat sbb xor js dec sbb ret (bad) frstor stc ljmp jp cmp lahf adcb gs xor ret jmp fstpt mov (bad) in adc or cli or cmp mov lret test push (bad) fcmovnu jle test outsl mov inc or cltd test mov and icebp jle ret enter xor xor sub mov jnp dec int lods mov andl gs xor addr16 jge notl lret popf mov ljmp (bad) aad int jmp (bad) dec sahf je outsb fidivrl push sahf fild outsl enter outsl mov mov jns xchg cs mov (bad) dec pushf jb sub pop mov fisttp loope xchg (bad) lret stos cmp inc dec faddl stos pushf xor mov or sbb movsl pusha sti mov xor jne inc in pop xor mov mov cmp mov xchg cmp inc push mov in int fsubl out stc call push fstl (bad) push push lret stc std sbb cmp inc jae call loop call insl int das repz xor jno inc mov rorl pushl push mov icebp push lret or mov frstor sub idivl xchg pop adc ja lods mov lods rolb sub push cwtl (bad) or das ds pop xor das adcb add add xchg out jg xor inc xor mov jae in or push mov fsubl inc add lret sub adc sar mov std mov push add jg add sub iret cmp cmpsb or inc xchg inc rorl add sub gs mov (bad) shrl scas ret pop popf daa std mov arpl jb cmp gs clc movl xchg scas loopne clc mov repnz (bad) mov mov nop xchg inc push xchg stos arpl jmp pusha push in data16 adc ret adc (bad) pushf stc stos mov pop shr adc push sbb (bad) mov bound aad sti mov cwtl iret jl sub dec sub cmp outsl jg sub aaa into push jge mov in and (bad) mov outsl sbbl aas int repnz les xor js icebp xor andb mov jbe repnz daa cltd add popl jno mov adc loopne lret (bad) or je dec xchg push insb ja jb xor cltd lcall and pop enter adc mov sub jg or add ss jg loopne pop int3 adc insl lods xor (bad) jl pusha sbb jge lock mov and arpl pop sbb cli hlt xchg cmp push adc inc cld sbb call cmpsb add mov test xchg mov adc and rorb xchg les inc push or or and daa int3 lock add jno (bad) mov and jo pop in xor jp xchg xor push jno js (bad) fs and mov mov mov sub jne cli jl push lcall add aaa cmp daa fcompl dec push int or insl push push repz mull (bad) mov in sub repnz sub das (bad) push pushf fildll lret adc fwait mov popa fwait adc fildl decl add pop mov inc push jg vandnps push loope pop push or pop test ret and lret outsw insl sbb add lret data16 popa testb mov sub paddw inc pop mov sbb ja dec jmp int cmpsl scas and inc mov lahf add mov adc mov clc push sarl call cmc adc lahf icebp ror or xchg pop xchg hlt xchg outsl inc jne je xchg out inc insb test fmull shl bound pop cwtl cmp ret and mov sub out and push rcrb push mov jg xor iret mov test clc leave sbb dec push push mov imul and fsubl inc (bad) fdivl lahf inc xchg lods add lods add cmp mov lds stc push xlat mov sub sub pop mov mov stos call push push push inc adc fisttpl rcrl xchg rcll dec or fisttpll sbb cmpsl in insl (bad) ror push inc int sarb push jne in xor hlt xor push loope xor dec push pop xor mov imul fbld jl (bad) fcom aaa sbb popa pop int rorb stc jp loop je (bad) and mov jb in sbb aam jno cmpsl loopne stos (bad) sti test push bound sub xlat fidiv arpl cmp sub out cmpsl (bad) leave pushf jo enter arpl (bad) ja and adc movsb imul cmpl fidivr inc or ja jo int3 imul cld addr16 fcompl and arpl pop stos fstpt mov pop pop sbb sbb mov mov jns or adc rolb mov or outsb fildll mov in rorl mov bound pop das das jp mov pop pop outsl mov add rcrb cmp popa in inc push ljmp fstpt fldt cmpl and sbb adc xchg scas (bad) xchg bound mov bound in xchg iret out ror jnp movsb pop or pop cltd (bad) cld shr or fnsave imul add cwtl bnd aaa movsl scas sbb xchg lds mov repz icebp lds mov test outsb sbb std loopne xchg out dec sbb sbb aad cld insb cmpsb sbb or sbb mov jb push dec mov xor cmp daa ss test je mov sub dec and div push or xchg andl xchg cmp and subb push stc xchg mov cli and inc lret lret mov std iret xchg pop shll cwtl (bad) test cmp insl inc loopne mov mov cld cmp jbe cmpsb mov (bad) adc xlat dec test int3 cmp sahf push or imul in pushf dec jne push (bad) aaa cmp cld test addl inc jecxz push inc mov cmp cltd cmc dec icebp xchg aam imul push bound jmp or in call int3 int3 jge stc pushf add xchg and inc aad push scas aad ss outsb jecxz add jbe cmp andl scas mov xchg repnz dec out (bad) mov adc pushf cld loopne push ljmp xchg mov insl js enter movsl adc pop cld out jmp jl jae xor mov outsl pushf pop inc pop outsb call and mov cmpl jecxz jp cmp (bad) pop int xchg shll pop pushf mov sti lock gs sbb (bad) mov int inc and sub push insb clc and or jmp test pop subb sub xor repnz push test adcl nop in pop mov cld lock xchg ret pop fnstsw cltd push mov jb jmp push pusha andl mov popa cmp stos mov lods adc mov lods enter lock sbb sbb repz (bad) arpl mov mov jmp mov mov xchg fisubrl ljmp cmp pop or xchg (bad) out ds adc ficomp into xchg sbb sub imul xchg xor dec sbb daa mov dec inc (bad) negb and test push enter dec test out test adc adc pushf ret scas mov mov mov inc fistpl imul and mov and cs jb or (bad) sbb insl jns out ds cpuid and fwait out (bad) dec mov pop mov mov mov mov push or mov or ret inc xchg loop adc imul ja sbb ret mov jl je cmc cmp push xchg pop cmpsb cmpsl mov movsb adc mov frstor lret sahf ret jecxz icebp push out lret xchg mov movsl popf pop or lods mov xchg dec test dec js and cmp mov jae pop cmpsb jb fisttp push xchg addr16 sahf pop stos or int idivb repnz dec std push jg mov addr16 jnp dec or dec insb rcr icebp (bad) mov out rcll inc xor xor pop dec cmp jecxz ds inc or icebp sbbl mov das xor adc andl and push mov xor sbb outsl fsts and mov mov mov xor movsl in or push shlb ja addr16 aam imul mov stos jecxz xchg jno xchg pop mov push xorl ss sbb lcall lcall aam outsb (bad) iret cld lock push imul cmp repnz adc adc mov in and sbb rclb sti pop ror or xchg and xor scas in push push push sub daa lock dec pop jbe or adc mov in push int3 mov out jp,pn popa (bad) or dec jp pushf jmp jg shr aas imul mov inc ficoml movsb xor cmp scas jae push mov pop lods movsb inc pop mov cld iret push xor mov cmp and cmp push cmp sbb stc inc mov inc rorl fwait int jmp inc cmpsl inc xor xor inc stos or xor nop movsl mov push ret pop mov les sarl hlt cmp sti stc sbb (bad) fimul addr16 lods (bad) or aam lahf jl fs pop mov sbb inc mov adc dec loopne js mov pusha test rolb mov subl sti enter jae (bad) fstpt jge (bad) sub movsl (bad) mov cmpsb add and mov add ret mov jge add add fstl inc push pop loop enter adc shrl push mov adc jns loopne lock fildll mov fwait xor jo pop push popf pop loopne (bad) cmpsb cmp negl push sub (bad) cld adc and push jmp xor jmp lahf or loope ss mov sar mov icebp add (bad) hlt fs sub mov push sbbl add cs mov js jae xor (bad) in (bad) mov (bad) fsubrs sbb jl push pop inc cmpsl sbb mov pop insl incb pop xchg mov clc sbb aaa cmpsl lcall xor inc push orl pop dec push jl enter mov mov lcall dec pop dec (bad) aaa notb fcomi push (bad) icebp pop js mov movsb (bad) icebp sub test xor pushf dec jle jno outsl xchg or cmpsl sbb pop mov add cmp jae lcall xchg cmp cli cmpsl loope,pt das push pop (bad) les (bad) jmp int aad stc xchg mov negb into sub bound xor lcall jns push jns cmp cmp mov data16 sub jle aam addl xchg lret dec (bad) ror cmc xchg pusha sub pop jne and (bad) sub scas mov lea and jle xor sub pop sarl fldt sub sub mov xor aad mov in leave test nop rcrb in mov rorb lret pusha xchg lret xlat imul test mov rorb push xchg inc rorb cmp notl dec jb xchg negb in push inc lahf sub pop inc fdivs push (bad) xchg sbb pop dec (bad) ret lods sbb and jecxz push mov add cmp test jge (bad) fs push loopne add fsubrp push imul push push daa ljmp sbb hlt xchg jns arpl sbb xlat aaa inc ljmpw call es push (bad) lahf or or outsl out mov xor sbb dec add mov xor sti mov mov cmp jbe add inc lret jb outsb pop mov (bad) cmpsl push shlb ja lahf mov dec icebp and dec les dec xchg (bad) mov jg sbb inc push jecxz aaa lds adc mov (bad) jge pop test fcomps popf lods xor or dec mov insb xchg mov inc les pop fistl ss movsl hlt sarl cmp mov xchg sbb adc sub pop jl int test pushf adc or sub movsb mov sub fwait inc out or jo and dec push xchg adc (bad) xchg and mov cmpsb cmp mov movsb int movl loopne sbb lret xchg aas mov mov (bad) movsl dec dec sub cmp pop pop repz shlb dec dec data16 push jl bound jl js std lods shl mov jmp data16 test aas icebp adc stc push pop fstps jno cmpsb lret inc lea cwtl push ljmp (bad) mov pushf aad ret add cltd pop or add pop lods in sti shll (bad) in mov arpl mov pop mov lea lods lods jmp fstpt insb cltd mov mov cmp pop sub sub leave jle cs fcoms movsb in testl mov dec push inc loop push cmp jp fwait push sbb out out sub addr16 mov cmp jo out insl sub or int and mov jge scas dec xchg jne movsb add add aaa pushf jno sbbl ds scas mov cmp cmp or orl dec mov dec push (bad) dec pop pop mov jmp (bad) (bad) pop es es jae jmp and test push aad cltd jbe jns test dec imul push mov jne insl sub lods mov push test fimull andl and pop mov sbb loopne movsb xlat inc mov lret popa xchg jg popf mov call pop lock std (bad) loopne inc insl dec pop ljmp xchg sbb mov xor xorb push call in jns xchg lds (bad) int3 je enter sbb jnp (bad) pushf xlat jge daa add add adc repz mulb scas mov or mov (bad) adc (bad) std fcmovu lds jmp mul scas xchg pop fistl pop inc jle fstpl cltd inc clc stos xchg cmp dec fsubl lahf lret adc push cli jp inc cmpsb push lea ss jmp lds sub xchg das insl inc mov inc jg mov mov xor dec adcl fcoml (bad) xor sti ret stos xor dec adc ret pusha push ljmp cmp sub xor clc rolb add adc push int3 repnz xchg xor inc (bad) jl loope mov sbb pop arpl push insl sbb pop mov stos cmpsl stos fisttpll (bad) jno,pn xchg push daa test mov (bad) addb fstpt xchg mov push decl data16 int3 lret jae xchg xchg sbb jnp push lea ljmp fnstsw adc mov dec scas lods repnz add or test fdivs xor xchg jb sbb dec ss push outsl stc xchg aaa test jp push movsb and lret lds adc pop std aad mov and jmp and ret adc mov adc in sbb loopne inc or movsl aad and stos insl sbb lods mov adc testb mov ja jae jp lahf sbb cltd mull pushl add jae fisttpl (bad) or movsl and pusha (bad) int3 push xchg add sbb js popf adc push test add inc lahf enter mov aaa ja movaps mov xor inc add repnz pop lds adc movsb gs addl cmp jl rorb out call stc rorl cmpsb repz mov aad lcall out sbb push sbb xchg rolb adc cltd movsl add outsb pop pop stc jb,pt mov mov cs fs adc or dec mov orl xchg cmp (bad) mov push lods push test mov sbb add sti mov movsl pop mov scas fcmovne pop dec ret leave cli mov sbb mov loopne das sbbb and mov mov xchg mov aas or rclb jmp lods push xchg inc decl jg or sbb mov popa jne push cmp mov sahf push test mov lret (bad) lahf loope sti ret cmp xchg std pop les cmp xchg sbb (bad) out ret pop repnz ss push (bad) outsl mov cmp mov or rcr shrb xchg loop es xor fs rclb jp int cs and push adc mov mov les into jg add arpl mov in out movsb inc sbbb and in cltd xor xchg push fstps cmp test xchg dec sub xor rdtsc aam aam pop push mov cmp and adc rclb push cli sub dec push aad xchg call mov sub push xchg dec adc cmp mov fdivrl jge call loope fist out int3 or cmp scas ficoml and xlat inc addr16 hlt lahf dec lcall clc or pop sub (bad) sti ret inc or dec mov repnz and shrl repz xor inc push outsl sahf daa mov mov psrlq pop out outsl jle push xlat adc test sub fcomps push stos lock bound mov aaa push jbe fs push sub ljmp faddp pop and jge insb cmp mov icebp inc dec mov lock mov rorl call dec mov pop mov jecxz (bad) (bad) sti push xor and aad popf mov and dec std mov or fistpl pop lret aaa mov sbb jbe sub icebp lea leave lods sbb xchg dec orb sbb fnsave js pop fildl sub mov mov sbb sub scas mov sti roll cmp pusha adc cmp in xchg scas cmp pop pop mov or push loope ret push jb arpl idivb adc test and pop xlat jge xchg int cs adc xor push sbb test and (bad) mov or repnz mov xchg pop dec rorl adc leave std enter xchg dec push inc cmp or test orl jmp inc loope and fs insl sbb lock add insl je mov test sti sbb sub pop rolb cmc negl inc push imul (bad) push std scas sbbl add dec mov aad fsubr push into mov insb push test das sbb lods imul lock ljmp mov xchg jo shrl jl add mov jp inc outsb cli mov jg insl inc jno jmp inc notb mov mov adc mov dec or pop jg (bad) repz das test xor ss sub stos mov in scas addl xor mov in xchg and and movsb into das mov push aad hlt mov jb repz sbb mov inc mov jmp ret hlt add test dec test jl xor cmpsl or aas xchg add xor dec loopne and xor add push xchg sbb pop adc mov (bad) call pop fprem mov sub mov and add push test pop sub mulb fildl pop in push das mov sub push wbinvd scas jbe jo mov jo fildll repz sub sbb fist loope xor fwait aaa push and scas adc (bad) xchg xchg add mov out fmuls dec stos stc hlt sbb xor hlt mov pop insl test mov mov adc (bad) out fiaddl out lcall and rorb jmp jo int3 (bad) (bad) adc scas fwait ds inc mov stos mov lcall dec xor clc sub jmp cmc fisttp cwtl outsl inc cltd movsb xchg aam sub jno mov add cli xchg dec cmp pop addr16 jl jle or push arpl hlt inc jbe setg jo jo stc or stc adc sub ficompl cld out push dec in xchg cs ljmp dec pusha mov push (bad) mov and ret stos jmp fcomip dec lret ret ss ds sub cs inc ljmp and lods jb jge and jno jg (bad) push aad cs mov inc xor in lock dec jo xlat push push cmp lods xchg fnstenv imul add addr16 inc inc popf or adc sub jae fisubl bndldx mov pop ds in rorl jg dec xor push iret cli test mov rcrl nop shlb push cld repz andb es pop repnz test xchg xorb jl popf mov inc sbb mov xor or sub inc int3 jbe inc (bad) std addr16 push test xchg shlb mov sbb scas lock inc add cld xor push inc mov jae push (bad) mov dec jp aas out and push jbe jo add roll push stos push es xchg xor sbb mov cmp cwtl pop and cwtl push mov (bad) add dec sub int sub sub stos std or xlat sbb dec adc pop cmpsb jp js int3 adc jl mov cmc xchg sub insl (bad) lret mov xor ret or lcall mov jp mov daa jo sahf int3 ret pop xor (bad) fildll push mov (bad) lock hlt push rcrb xor pop frstor and dec lea ds mov in jb dec daa (bad) mov fcomps push jge sub pop sbb cmp std cmpsl scas mov lret outsl ret adc jae pop add push mov mov clc and push mov call insb out rolb inc cltd es pusha enter lods std fsubrs lcall das jg (bad) addr16 xchg lea mov lods lret scas cmp pop shlb lds outsb test icebp cmpsb packsswb mov sbb or fwait leave cwtl mov adc and jmp clc mov sbb mov inc fdivs ficompl and lea cmpsb jae inc dec lahf mov clc xlat pop int and add roll pop (bad) idivl and hlt cltd and push xchg add leave add add lcall insl adc pop xor pop mov scas idiv mov je and outsl xchg lds mov fwait in mov call xchg loop lock xchg fwait inc mov push push push dec add popf and bound loope push dec or mov mov int3 dec lea cs or dec data16 mov inc mov aad pop jo or or enter add add rolb jne adc pop cmp (bad) fs push mov xchg and les dec fidivrl lock or pop testl push clc in dec test cmp (bad) lret push or jmp xor mov xchg insl cmp (bad) aad rol aaa shr outsl pop in (bad) jae adc jbe dec testl fstl mov sbb pop (bad) stos mov sub or outsl clc dec jmp (bad) rcrl std test adc mov mov enter mov or shrb dec popf mov xor fs inc (bad) sahf sbb insb repz pop fs mov in and inc out mov rcrb jno pop push sub in loope mov cltd cmp mov loop xor sbb imul ret loopne mov (bad) test jmp or lcall pop cwtl sub sub inc ret (bad) and (bad) ss push push jae sbb cmp fisubr test addr16 call and (bad) pop mov jl inc mov fistpll lods mov xchg (bad) iret (bad) js dec flds sbb push push adc lods mov ds adc push fdivr and inc xor addr16 cmpb into pop gs inc iret or dec scas pop sahf daa mov mov or mov jae pop roll mov xchg mov test xor jae and push mov dec andps xchg push gs fisttpll aad jb push pop lods movsb inc enter out dec mov hlt cltd movsl insb movsl xor insb rorl jl fldt dec (bad) sub imul cwtl pop loope cwtl das push imul sarb je sub jns mov lcall sbb sti jg pop add xchg and adc enter lret aam call jge addr16 sub adc xchg stos rcll pop mov adc inc jecxz or mov mov mov dec mov xor push aam push ja gs inc in mov aaa push mov jle adc adc daa push movsl jmp mov sbb imul testl mov cmc jecxz push pcmpgtd pop fiaddl mov xor xor sbb aaa dec aaa cltd adc bound dec sti jp or pushf pop or inc pop loopne cmp adc lds (bad) mov mov lret loopne cli cmpsl out test and imul pop ss dec xchg jle fcoms js cwtl sbb push adc mov add lods jns cltd sub fcmovne sahf jne jg add xchg mov into movsb lret adc dec cwtl shrl push movsl inc xchg push dec scas pop fldt (bad) jle push inc lahf (bad) cmp cli into dec fstpt negl stc push jne aas mov xor sbb addr16 ss in pop imul into fstpl adc jae mov fidivl repz jo mov ds jecxz cli ljmp decl and jae daa insb or mov mov fildl fmul jo pop push sbb xchg fimull ja std cmp push cs inc mov sbb aaa mov mov inc (bad) add dec push add push xor cltd movsl sbb (bad) movsb jmp dec cmp cmp lock hlt arpl fmulp push and mov and mov cmp in jae dec and pusha jnp movsb mov add adc ret pop (bad) xorl repz int and popf pop cmp mov pop jmp jae push fdivl enter dec xor pop icebp nop sub repnz mov dec ss in inc nop ss pop cwtl xchg insb xor cld je pop repnz sub jns rolb jnp cmp sbb stc (bad) push (bad) xor dec out stos fwait jnp pop mov mov ja pop xlat mov (bad) test mov pop pop test mov imul mov jge pushf cmp fwait cmp mov sub mov call cli rorl popf (bad) js gs jne aas (bad) inc (bad) mov adc jg inc in stos in or jne mov popa pop xor or bnd push negl call lret fmuls sub addr16 cmp xchg sub clc aas inc das push mov add popa cmp push mov push out jae add mov faddl jmp das lock pop adc jle cwtl push xchg push push das sbb in test fnop sub jae cld dec pop (bad) pop mov mov mov gs mov lds imul jo,pn shlb sti jp jnp push inc cmp outsl inc adc adc cmp in stos push out arpl inc rcll sub into mov dec pop stc cs xchg lds jo sbb loope sbb sbb jb imul xchg call ss push dec addr16 insb aam dec dec xor js ret ja aas loope sub out popf out mov outsb cld lret or inc (bad) push pushf push dec pop call jmp and arpl pop jne mov or inc fwait jmp in imulb into mov enter cmpsl add mov sbb loope addr16 jne inc sahf movsl punpckhbw cmp and dec int jecxz stc adc and fwait loope fmulp push sub jae push sub cs cmpsb mov test les stos cmp xor addr16 or inc or popa sub mov xchg mov rcl sub sbb pop stc mov insb mov add cmp mov xor mov cmp sti push jp cmp je jno and inc movsl mov and imul pop clc mull push repz add dec push mov ret pusha inc loopne inc imul sbb dec add push arpl dec popf or mov xchg test lock xchg mov jg inc (bad) jp xorl sub and icebp adc jbe outsl pop js cs mov lea lds jg cmp nop pop push mov push inc in insb aaa pop outsb fisttp fdivrp xlat cmpsb scas jae xor insb xor jae jmp loop mov sbb orb mov test sti add dec lcall pop (bad) add ss inc out and in dec out and pop add fmull push mov loop or and xchg inc repz movsl xor or or ja mov sbb test sbb pushf push jp cmp push scas mov pop push pusha lea rcr inc xchg imul in ljmp mov xor push data16 cwtl not into push sub push mov repz aad xor push out jno ds loop dec cld lea ret lods pop cli jle pop repz push jo jmp dec push dec jo fild mov sbb lcall cmc mov and dec xchg dec mov push mov sbb jbe lcall (bad) js sub je mov fstpt nop xor jne cwtl mov xor (bad) xor or dec and movsl loope inc lods out jmp dec lret pop insb jo sbb add outsl imulb add mov cmp mov sahf mov (bad) jge jnp pushl cltd cmp push or ljmp (bad) lea rcr mov (bad) dec mov sub data16 pop sti aam jmp out mov xlat das add cmp int test mov pop and lock es subl mov int3 outsl jecxz fcoml popa ljmp adc outsl fidivr xchg fwait push and hlt and icebp (bad) pop into lcall pop inc adc lds stc rorl inc mov and and adc and pop and andnps enter or fdivl out xor or mov shlb jbe mov jno mull jle sbb (bad) lock pop mov loope inc adc mov call out jg add js stc js clc fmul shll inc das out dec mov add pop cmp aad mov cmp push push (bad) or (bad) mov inc fidivr xor push stos sub push leave inc or inc fcoms fwait les pop xor sahf movsb aaa out sbb add mov fwait cmp out mov out xlat pop es xor inc jo ljmp jbe pop popa cltd jne jmp out mov push sarl inc clc bound nop mov out js xchg sub and outsb sbb jmp syscall add and (bad) add in into movsl es dec icebp loopne xor ds pop xor jns (bad) push repz iret pop mov pop lock pop push rcrb cmpsl sub (bad) dec lock jmp pop xchg add insl int3 (bad) lods lds popa mov add in out (bad) cltd (bad) (bad) ljmp aad add push xor and in xlat in xor mov iret ja pushf mov jge setae out jg or (bad) ja xchg lcall mov cwtl sbb fimull cli aaa imul push outsb inc pop push ss add je test pop mov lahf mov lcall xlat (bad) insl int3 cmp addr16 ret xchg repnz pop jg inc shlb ja lcall (bad) cmp ljmp aaa mov push leave ljmp jb mov and fwait or pop cwtl dec aas nop xchg cmp cmp add or jg sbb add adc call xor repnz cmp mov lret repz adc dec ret mov lahf inc sti pusha jo (bad) sarb jp jp in ds jp mov cmc push add push xor mov mov cmpsl lcall divl pushf push mov rorl call push into inc mov and sub and jno icebp pushf fld fcomi push mov xchg cs or mov mov out test mov sbb dec mov mov add jo (bad) cmc cmp xor loop jo (bad) loope icebp imul data16 cmp sahf (bad) ds ds jne cmp movsb inc addr16 fldenv das cmpsl out push push lcall pop and mov js lret (bad) aaa inc ja ljmp mov fldt faddl popf mov mov cmp xlat inc in xlat insl in dec xchg out js sar jb loopne mov jbe xor popf stc sbb cwtl stc mov jmp jnp mov stos mull cmp orl js fist cli int (bad) faddl mov xor sbb inc stos inc or cli and dec arpl stos out adc out mov lcall inc mov repz out jg jne sub iret das rorl mov and push and gs push or (bad) into rclb and shll mov pop inc sub std insl ret test out adc hlt in jnp inc jl add decl xchg das pushl mov cld jne jl and ja dec push sub test in loop (bad) fild dec addr16 cwtl lock xchg pusha (bad) push jne and (bad) imul test xchg push push mov sbb icebp jo push leave fimul les add lock sub push ljmp and dec mov mov push mov (bad) adc sti testb sub in stc inc cs lea aam leave push out lea jmp sbbb push mov mov xchg jge out lcall pop dec mov incl push fidivr mov pop inc into mov inc loopne mov jne ficompl sub pop stc fsubrl jl cmp loop sub sbb add mov icebp ror xorb stos push repnz (bad) aaa xor add mov cmp and outsb test icebp inc mov xor aas dec mov pushf cwtl xor data16 arpl (bad) frndint repnz pop adc insl dec jecxz jbe and pushf sti addl mov cmp lcall inc fdivs das dec jle iret jo push loope imul add ds jae jle mov cmp test ljmp xor lcall stos sub fsubp sti xchg dec mov test xchg ret xor aam inc sub insb or adc pop icebp jne pop and add sbb lds sarl ljmp cmp es (bad) cmpsl in mov fcomi mov pop mov cltd insb inc inc push ret iret pusha xor les icebp icebp lods pusha jbe pushl (bad) hlt nop pop mov push (bad) (bad) sbb or lods fnsave (bad) add cmp pop not mov mov stos sbbb rcrb dec in sbb ljmp xor mov les dec das and inc xchg aaa sbb test adc js rorl push test fsubrl mov and (bad) inc sbb decl stos jns push data16 pop mov repz and fxch sbb iret add imul daa pop mov ret clc sar push xor insl addr16 add pop and inc icebp dec xchg dec xor mov (bad) test loopne adc sahf jno lock (bad) mov inc std mov sbb jo stc pop movsl jae xor pop xor (bad) rcl or and insb inc add (bad) test int test sbb push inc jne jb jmp (bad) out mov std addb enter mov dec out mov int3 mov or pop pop inc cmpsb add into push and push sbb jne or sbbb loop nop and pop ret mov aaa or nop loop or jl jl (bad) leave or fs cmc insl fdivr jnp mov int imull popf jp adc iret ja mov movsl (bad) pop add es cli in daa dec sub add adc in and ds xchg add frstor (bad) mov test movsl daa dec xchg lahf push mov cli (bad) mov dec dec dec dec push push xchg xchg stos or ja pop out mov jge sub or dec mov rorb aaa adc movsb xchg or pusha pop or outsl (bad) call int ds adc cwtl jg test icebp pop fldt push inc inc (bad) stc mov loop pop jb pushf sub les pop cmp enter pop sar push or (bad) icebp inc mov inc sbb xor and popf push inc xchg push jb adc push popf popf mov jne rcll sbb xor dec adc mov arpl cwtl inc mov and jecxz (bad) pop sub inc or cmp mov icebp dec cli movsb push movsb mov jns dec mov mov movsb jns imul (bad) xor (bad) les in out repz lds or sub loopne xchg (bad) adc imul or movsl sbb inc or dec divb cs jle sbb pop lret icebp sbb xchg mov jae mov stos cld sbb dec je sti insb out bound sbb fcoms arpl shll mov popa sub lods call jecxz mov js jne xchg mov sbb push push inc aaa xchg sbb mov movsb push fcompl insb push aas cs out movsb and xchg fldl cmp adc add jecxz cmpsl jg enter test mov inc (bad) pop xchg sub int scas sarb inc fnstenv movsb out popa push xor sub roll test cld mov fldcw clc lahf sub ljmp sub xor xchg (bad) and sub inc fsubs enter (bad) lahf movsl test xchg pop mov mov sub lahf jnp sub push dec mov cmp es xchg out inc (bad) nop aam jp fdivrl and cmp arpl fimull std cmp rolb jl mov dec inc adc int3 inc add mov addr16 lret rol and sbb xchg bound sahf sbb hlt cmpsb int3 les add push jno jle ss dec lea xchg movsb mov xchg pshufw enter and (bad) movsb and fidiv stos fstpl xor add test mov inc sahf pop out and rclb mov rorl mov cmp adc je pop mov cmpsl push cmp sbb fildl push adc dec cs mov lea and jmp dec icebp sub sti scas sub mov out ja sbb cmp cmp cmp xor lods mov xchg adc push sti popf inc or adc out xor in out test call and and sub xor sub shr enter test pop sub or add dec jne cmp cmp rorb adc dec pop add clc sbb mov push (bad) xor sub sti mov cmp xlat scas addr16 rcrl aam aad pop dec pop xchg or mov ss cmp mov push out inc insl cmpsl inc in dec rcll imul jle leave or popf dec lods stos lahf mov (bad) mov das scas dec lret in add sub test fbstp inc jge jo pop scas sahf jbe outsb cmp mov sti test hlt mov hlt cmp lds outsb push xchg inc mov inc rorl fildl xor xchg lock push inc push jo add pop inc hlt or mov inc sbb int mov gs xor imull mov hlt fdivrs std adc (bad) push or pop cmp sub fs push mov sbb mov jae sarb scas movsl incl test sub mov mov arpl pop push aas jbe xchg in xor inc pop sahf jae mov into inc jne popa jbe push mov sub dec (bad) clc mov cmp fisttpl xor add mov dec mov mov mov push sub pusha jbe or xchg inc jmp xlat jno add sub xor pusha jne xor jp fwait ljmp ds lret sub jl inc sarb cmp loop jno xor push adc adc inc rcll dec movsl and cmc cwtl jmp ljmp sbb mov les inc jae rcrb jns pusha (bad) jns lods stc add test xor es add add jg (bad) mov mov call shlb add and add pop mov cmpl in cmpl test ja insb aas lret xchg cmp mov push out cmp mov or (bad) ror or jecxz fiaddl lods add mov dec clc lea sbb and mov mov and pop (bad) repnz xchg add mov cmp bound push (bad) lea scas xchg jnp add dec loope xor sub cmp (bad) jne xor push pop jno fisubl push lock in dec lret push rorl (bad) lea add into leave and (bad) sbb enter nop mov sbbl adc test and or test lods lock jno mov ds hlt lret mov movsl push test mov das or (bad) fistpll imul loope ja sub imul add pop lds outsb xchg fadds data16 addr16 push js leave aam daa out and inc add ds je adc dec cmp pop hlt test enter outsl hlt xchg push xchg and negl push xchg pshufw push sub ds nop int mov (bad) jne mov shrb fcmovne ljmp push cld jp push lods lods push sbb sbb add add fcom arpl js xlat arpl adc cmp mov out repz inc sub pop push jno pop mov out xor xchg ret xlat adc pop sub jne movsl (bad) negb inc sar cmp dec adc das mov mov out (bad) repz jmp sub xor lcall and ret cs test test cmp or mov dec aaa out inc mov xorb cld clc mov rolb mov add or sbb imul push loope or enter rclb jge lock jmp mov pop jnp xor sub mov shl mov test (bad) divb jmp cltd in mov sar pop stos iret jns aam pop fsubrl mov and and ss sub rorb mov rorb stos cmpsl push jmp cmp insb repz mov pop es cltd mov cmc fcomps mov push mov sub (bad) test mov lds dec in lret add ret pop stc cmp xor fwait push lret pop clc mov cld cld in movsl ds sub pop and (bad) loopne inc (bad) dec popf lods fidivl (bad) fldl imul sbb lcall inc dec or push hlt or cmp cmc cmp arpl aad mov jg mov test mov popf adc jbe jle mov and inc aas popa outsb (bad) popa add mov fimul imul cs sbb sbb add outsb jb mov and ret sbb ljmp mov fwait daa stc mov lock cmp scas jnp (bad) lods outsb lock sbb cmp push jnp fidivrl xor pop push mov mov push loope clc lods sahf jmp lods fmuls push push in lret sub (bad) or lock mov pop cmovns adc stos and xchg aaa outsl pop and das (bad) pop fcmove mov shrd fwait jl pop or stos jl mov test lret jmp add cmpsl adc adc sbb add sub lods das mov cwtl or mov pop push iret inc arpl ss das repz sub inc inc or xchg sub mov (bad) fwait cwtl insl mov ljmp loopne and stos movsl xor incb adc icebp popa pop or lods and std xor or mov icebp or cbtw xchg jecxz sbbl sti fs sub insb inc movsb int popf adc mov or push cmp mov andl rolb jbe sub bound scas popa sbbl cld call pusha orl xor data16 mov das fdivrp pop mov out (bad) adc adc pop mov sti lret and xorl mov imul adc mov outsl jg out (bad) or sbb jmp into gs subb jmp and dec adc add iret dec adc ja add repnz daa repnz adc outsl jl subl (bad) stos mov loope push inc inc xchg jg add fldt jnp pusha ss mov (bad) push test gs sbb js mov lods mov inc pusha sahf popa jge sbbl loopne or fld (bad) inc add sbb push pop repz jae popa jno dec mov mov aam je adc pop in mov mov (bad) push pop pop out das es (bad) sahf imul (bad) das orb and in push add dec sub push xchg pop mov mov imul lea imull pop mov cmp sub pop mov scas ret sbb sub cs and xlat xlat lahf and sub ret outsl std mov mov ds and cmpl bound add mov bound test sub dec ljmp push push xor inc lret lea jecxz inc loop loope xchg adcl ficomp cmpsb in mov mov test (bad) cmp mov daa (bad) into sbb push dec xor call dec pop xor movsb sbb gs js sbb mov fucom mulb fnstenv test mov sbb sub or inc pop roll jne cmp sub jl stc adc xor cs cmpsb je adc push out jne pop sbb mov jmp shlb lret les pop xchg adc push clc adc sbb rol idivb inc fcomps add jnp or jno pop decb cld in stos enter decb les or push push bound jmp mov pop xor pop and mov jno jo cli sub adc ds das sbb sub fist cmpsb mov mov lock mov pop outsb rcrb jecxz stos dec je shlb push add aad mul lds test out scas mov add and and cmpsb and fisubrl push loope push jge jo es rol stos (bad) and mov loop sub ficoml jnp mov les test sub repnz mov ret add mov jle les imul shll cmc push cmp jae cmpsl mov mov test pop int3 fnstcw push pop aam sbbb sub das leave push pushf pop fdiv xor mov adc mov mov es lret cmp adc inc jmp mov dec stos (bad) insl lods push (bad) lret insb andl in mov pop and out cmp push mov pop mov movsb idiv loop sub rclw (bad) ds inc xor mov xor addr16 mov sub pop arpl sub cmp sub iret pushf fdivrl test loop,pt (bad) out lret outsb jne (bad) ss scas lods sti ficom in ret add lods mov sub stos aam inc mov and aam adcb les lods dec mov das mov sbb out dec and rclb cli and xchg idivl and clc pop push cs aad das inc addr16 sub mov cmp imul lds pop ret inc (bad) ja jmp iret dec sti mov sbb mov fwait test sub mov (bad) and mov push xchg sbb iret jp adc divb (bad) cs stc push xor dec rcl daa rcrl (bad) fyl2xp1 test rcrl cmp dec pop test sti imul inc adc imul mov call mov or or es mov es jae jbe xchg pop sahf mov cmpsl mov inc add or clc (bad) inc cwtl xchg cmpsl add dec lahf data16 leave ficoml mov adc adc movsb pop inc loopne dec jecxz mov ja mov xchg loop out inc jno fcom sub add mov adc cmp mov cmp push mov clc repnz jp enter mov dec test push loop add int (bad) (bad) into fdivrl push pop inc out mov push bound ficoml out xor lahf sub push dec test int3 xor lock cmp mov sub inc xor mov shlb mov les inc mov fdivr bnd iret mov xor inc push les xchg cs popf int3 add adc mov sbb in daa xchg movsl rclb enter cmp mov pushf jno mov mov pop pusha repz jg imul fmull add dec (bad) mov test inc std and sbb pop inc mov pop pop and test and mov or add cmp sub insw loop ss decb movsb xchg mov (bad) les mov ret fcomps mov xor sbb inc nop test in outsb pop (bad) insb or jge lea cmpsl xchg stc sbb lret cli repnz shrb arpl inc test xchg out sub push int test push mov sahf mov mov rcrb fcmove push lahf lock push adc sbb sub adc cld aad out mov mov mov jecxz cmp xor (bad) xor sbb push mov and stc sub sbb lea mov lds mov and add push int3 cmp ja jp push test cld mov lods shlb in cmp (bad) daa xchg shrl sub sub sbb shrb hlt add jecxz adc and int3 or in dec xlat fdivrl xlat push clc and arpl push (bad) bound int (bad) mov mov fadd scas mov dec sbb inc mov jecxz arpl (bad) fldcw pop sub fs and int ror cmpsl sbb xor push or in sbb adc movsb or sbb pushf mov jns pop or mov sbb sbb push ljmp xchg insb push lea mov xor xchg jge dec mov insl mov inc xor xchg enter std insl mov push xor pop cmp ds sub xchg mov mov mull sti or dec adc or fisub div and sbb pop aad cmp dec jp mov adc repnz add fdivrl lahf xchg mov (bad) je ljmp ficomp movhps das call mov and cmpsl ja lds aaa ds mov add je stos loopne ja (bad) add aam cmpsl jecxz sub cmpsl mov js pop shrl push rcll addr16 push add out fsubrl and jmp or loope,pt pushf sbb jmp lds push add popl outsb dec cmp pop pop dec testl pushf loop rcrl xor adc mov js das call sar mov sub divb cmpsb add inc pop mov gs sbb dec sbbb (bad) cmc or insb mov mov jno inc enter pop arpl xor aad jecxz std xchg xchg popf mov (bad) sbb xor sub scas push aas test push sbbl fs xor jne pop sbb ret xchg sub into push pop cmp incb (bad) cs rcrb js or mov mov sbb cmp cmp xor test mov dec daa inc or addr16 pop imul stos xchg jecxz outsl jmp fcoml (bad) xchg fsubp imul push sub xchg or les out fwait cmp add out push loop dec inc xor adc mov xchg pop pop je xchg or jo into lods mov dec js fimull out cld jle mov xor adc mov dec (bad) cmpsb outsl mov (bad) into lret adc leave and adc aaa aas out push inc add xchg loop jmp (bad) mov movb mov push cld pop push cmp mov fiadd add ret and jno subl sub nop cmpsl sahf push in and ficoml rolb xor and jns jecxz orb imul and mov int out cld fist bswap loopne push dec add nop jecxz outsb incb mov (bad) in sbb dec notl (bad) cmp jmp push int sbb pop xchg in jnp loope xor js addl add adc xor (bad) mov xor adc jo hlt lds pop mov jne mov ljmp cmpl xchg jmp jo xchg adc sub pop jg push (bad) xor push push sti cmpsb or xchg dec mov add push sbb mov test push xchg pop push add dec addr16 fdivl adc (bad) icebp xchg cwtl sub mov (bad) push idiv mov push pushf es xchg inc div dec xchg cmp es pop test sbb out sahf xor es stos push subb cli ss bound insb addr16 mov mov stos mov test sahf or dec push push jmp mov fbld mov out aam (bad) in sbb outsb out mov inc push bound add pop insb test lea xchg aaa mov pushf sbb jmp jecxz mov ljmp mov idivb ret out out push nop inc popl in pop pusha fsubs arpl add mov mov fdivr rolb cmpsl xchg pop popa sub cmp loop sar inc add inc xor sub (bad) and popa out inc push push mov and ret fldt dec push sub mov lock test xchg lret sub or adc inc je add fiaddl push out fisttpl fstp mov mov pop aas cmp add sub cmp push stc enter jge pop leave adc hlt mov pop dec lds cmc popa lret xor subl inc fcoms xor jne popa loope xchg fstpl mov push pop in cmp jge aas mov cmp into pop fisttp push es pop jl je xchg fwait inc xor xlat out out xchg into out jge sbb mov or xor loop cmpsl imul mov cmpsb mov sub mov push fcoml imul or cmc test sub adc jg xchg int mov sub and jg sbb test fcmovnu mov xchg insl pop icebp sub aad or test or mov shlb cmovl pop mov xor add popf out pop stc push mov pop xor push shrl fs add or outsl fdivrp std movsl dec mov stc popa pop push sub dec out rcrl dec dec adc pop loope mov or xor cmp mov inc jmp pop mov test sub add dec dec and or mov cmp ret jg cmp mov push fcoms (bad) fldcw pop inc add ret and xchg dec fadds mov xchg subb scas test sahf rcrl cs pop jb cmp mov popf (bad) jo push xchg adc wbinvd mov jp rolb jo sbb xchg mov push fwait aaa in xlat dec mov rcl jae jb xlat rcl push notb fimull cs adcl mov rcr inc jecxz fcmovne ljmp es cmpsb push sbb subl sbb je jl bound xor push int3 setb inc add loopne outsl lcall lcall add push pop mov data16 mov push or push xchg lds push cs cld pop mov mov bound inc ficompl jecxz push scas mov cmp out fistl div dec in adc ljmp arpl icebp outsb in mov sahf adc repnz pop fucomip sub jae jnp out ret xlat movsl stos mov mov push xchg and (bad) in sbb movsl add jp xor xor in lds into in inc jnp mov stc lods cmc inc mov lret enter cltd sbb stc pop or mov into add roll test xchg sbb jl subl das fistpl mov (bad) pop pusha xchg out stos fldcw dec push leave sarb test into or lods ret ficom adc ljmp push fsubrl mov data16 dec inc or rclb push add xor shll xchg imul out call pop js je stc js push dec rcl and into sar andl cmpsl imul push pop repnz adc jo cmp lret fs movsb hlt xor xchg ret (bad) in or fcmovnb mov fidivr fimull mov jmp jmp pop cmp stc mov cwtl mov out jl leave cs fs jge cmp push dec jno stos enter lods (bad) loop in or out cmpsl leave jmp inc mov test ljmp inc push pop jecxz jns idivb dec mov dec push lods mov mov dec jbe add adc or inc jne jne pusha test jno jp mov int3 out repnz and dec lods and xchg sub (bad) popa push mov movsb sbb sahf rcl arpl dec lcall imul mov push dec arpl xor insb test pop add and xorl adc sbb dec mov sbb lret subl rorb fcoml gs fidivr movl movsl or adc sub or mov jp or out inc adc (bad) imul js xchg dec pop xlat mov jo fs inc int stc fsubl push inc cmp cmp push lock mov aam dec outsl sarb (bad) lock lods sbb inc or insb adcb jae int test jg dec aam cmp pop int xchg cmpsb pop aad rorl cmc inc inc jge inc inc and mov cmp xlat hlt dec data16 subb and bound and stos dec movsb (bad) lret or push mov lods shlb sti neg and add out int inc call pop bound out inc or rcl and cmpsb xor mov or sub inc xchg les xchg hlt cmp div fwait cli adc pusha jg stos mov push add inc (bad) sbb cld push xor (bad) aad (bad) mov out sahf xchg mov bound adc shr lods mov lea push inc push int3 movsl mov add or daa js add repnz out cmp xorl int dec xchg sub pop lcall mov jecxz adc dec dec das adc push (bad) out stc imul xchg into imulb xor sub lods (bad) and push mov lahf mov xor fwait add mov xchg or jnp xor cwtl push mov cmp rcrb cltd popa ja cmp mov ficom scas mov mov repnz (bad) sbb call pop jo inc add jnp inc fdivp mov ss stos sub or lock aad (bad) jb (bad) stc mov aas lret mov add mov pop lret xchg pop in push (bad) pop jb repz pop outsl jns lsl cmp rcrb scas xor push and jne sbb clc fidivr pop lahf inc sbb mov mov add jge mov adc mul mov xchg js or jmp jg xchg fadds into mov xor adc into jne push xchg adc sahf push mov js jbe out mov enter int3 cmp adc xchg xchg or add pop cmc add mov icebp add sub test add mov aam out jge lret in enter add mov jge int mov mov push mov jne outsl imul and sub popf inc outsb adc int3 loopne leave or xchg add mov jle sarl jbe loope sbb (bad) jns mov pop push movsl cmpsb std cmp jmp pop xchg jge cwtl popf fsts ja jb stc jp mov les mov cmc xor and pop pop dec pop enter ret lods add imul xor ss cs leave arpl xor pop cmp std mov pop je pop aas ret sub dec lds mov pop pushf imul out rclb mov mov mov push mov clc test mov loopne mov or sbb push mov push lods and xchg mov xchg mov repz push stc mov dec sub mov enter and js lret xchg stos adc cld int3 scas stos mov inc sbb data16 jmp push (bad) fildll adc movsb sbb xchg cmp cmp sub push add cwtl pop cli dec rolb imul loope jo mov jb sub std or std dec insl ret repnz mov xor dec or pop xchg pop pop dec sahf xchg insb jno addr16 adc scas sar xor add pusha jle mov sbb push popa es pop mov ficomp push pop lea xchg mov lock adc test adc dec xchg adc aaa cli add lahf push inc scas flds pop out (bad) sti mov shll fwait enter or push addl je pop inc jno loopne adc fcoml adc mov into icebp xchg cmp pop daa or fidivr xchg push sub arpl inc jbe ret leave lea xor jo xchg push xlat cwtl push fsubrs jle or aaa or nop dec dec shll mov mov in out ret mov mov sbb add pop out xchg pop pop inc jne std inc jmp lds cmp jl popf cmp (bad) add pop scas pop loope in jno xor xchg push cli inc or pop jne push dec pop ss (bad) (bad) cwtl (bad) xor jbe out sbb inc inc sub fyl2x dec loopne repz cwtl sub pop or sub in into sbb pop jnp stos insb inc jo test (bad) xor fadds cli pop in fnsave mov cwtl xchg fdivrp pop pop xor mov mov dec xor pop cmp mov data16 repnz pusha xchg gs test cmp iret inc lods xchg imul iret cmpsb or push xchg pushf mov jg in push jl (bad) jge xchg aas daa bound addr16 les dec fisubl add lret popf inc (bad) test push aaa cmp adc mov ret mov cli push (bad) loop pop mov add adc pop xchg push loop fstpt out pop sbb mov sahf inc sub mov arpl dec addr16 dec add roll ljmp stc jmp sbb cld adc pop gs jge fwait test lcall (bad) (bad) pop popf cwtl shrb idiv test lret dec and (bad) lods jecxz pop inc push int dec loopne jne pop mov push xchg cmc push clc dec fnstenv incb sbb loope mov out clc lock jns or out jmp adc mov push or iret jecxz adc adc scas sbb xchg add add and mov xchg notl fsts ret or mov push lds sarb stos sub int fisttp loope inc repnz test sbb and cli sti in (bad) (bad) (bad) int3 ret push jbe movsl mov shll xor incb arpl fsubrs jne dec (bad) dec jecxz and das movsb push lock daa push pushf dec mov pop ja pop lahf pop cmpsb jbe rcll out roll jns mov xchg nopl call and lret add nop in addr16 pop ljmp pop pop cli out inc dec sub mov sub xchg data16 and dec sub dec shrb les or fimull adc (bad) es dec iret mov push mov cmp inc adc shrb sahf cmp or roll add and jl std (bad) js xor pop std sbb push cmp cld cwtl add popf cmc jns fimul push mov test rcll nop inc cmp mov outsl add add push or std ss fcompl movsb loop cmp pusha pop rcll leave jo jmp inc sub jae out test jae addr16 xor adc gs add popf mov ret cmp sti sbb aam dec and stc sbb cld shr pop cli leave sub popa sub mov jb insl in adc idivl in or dec and movsl fsubs or bound mov mov jnp fsub outsl sbb xchg ljmp mov push xchg pop inc mov mov jno push xchg mov add jne scas jle psubusw cmpsl or cmpsb sbb and push (bad) aam xlat adc aas repz (bad) push sub add mov adc mov int inc imul sub cmp sub sub cmp mov (bad) mov xorl out hlt rolb repz aad iret (bad) (bad) pop push mov xchg jg scas pushf orl test inc fdivrl or adc fstpl aas (bad) popa rcll cmovge in inc push inc adc js jl pop push sahf add imul pusha das sti add adc in or fucomi scas mov pop jge cmp shrb adc sub imul add adc add push xor das leave iret addr16 sbb (bad) hlt (bad) lret adc dec repnz pop pop les insb sub pop push sbb sub cmp and sbb pop xor aad push out pop lds icebp cmp push bound inc loopne lods push aam push cmp xchg sbb (bad) aam sbb dec test push aas mov add mov imul loop into mov stc paddq cs pop adc push sub subl push in xchg cmp mov repz lcall adc shlb sub push neg sub stos lock test mov scas sub daa jb,pt mov dec mov in fldt pop fcomps shrb leave insb sbb ja iret pusha leave orl pop popa daa sub test mov aad shr cmp push cmp sub aad sub mov sub mov fst lds subl pop mov iret sbb xor sub mov push add pop add mov adc and into mov dec mov jno js (bad) leave ds inc popa sub stos sub sub out inc mov popf mov nop or xchg aam inc cmp jne and movsl mov lret fsubp stos aam lahf lods mov mov cmp loop pop add int3 sbb fs scas or dec xor pop adc std lahf in das ljmp stos ljmp lea mov mov mov clc lret aaa push lds loope int3 push hlt mov jp jb cmp jae push sbb adc inc cmc add xor xor add mov sti adc test movsb cmpsb (bad) je imul sub leave xchg xchg jne adc cmp mov insl xchg lahf outsb loope movsl dec mov xchg mov cmp add pop jl lds idiv bound pop adc sub adc push jmp inc inc out lret xor outsl pop out xor pop push (bad) xchg (bad) test mov pop push mov test mov jae inc stos or jns in sub sub movsb xchg adc sub rcr inc popa (bad) jb mov je xchg cmp ret cmp dec inc and xor pop inc movsb lea rdmsr inc flds ficompl push jp imul mov jno lcall xchg enter cmp out insl jnp rcrb decl fadds adc jecxz push push pop aam sbb mov int3 decl sub das sbb cmpsb jnp roll lods adc jns sbb mov gs cmp (bad) decl and dec stos lret ss dec mov lret adc lds sub and or nopl fnsave ja jns fwait adc fsts or dec mov mov negl mov mov das imul pop out dec jp test sbb loopne flds and jno push inc outsb mov data16 and mov orl inc and (bad) into nop fcmovnbe inc daa xor shrb (bad) mov push mov mov js negl mov repnz adc sub lods insl (bad) std add fdivl data16 test sbb insb inc and dec jbe mov arpl xchg inc dec lcall jp adc xlat push lods mov loopne aaa in adc in push sub xchg jl push sbb mov aam adc push mov lea inc adc sub adc (bad) mov nop scas push outsl std dec ret hlt jmp aaa (bad) sbb xor mov (bad) stos jne or call inc cmp das xchg out jge es arpl mov push sub push sub sub js sub sub cld mov stos mov clc cmp test pop fadds mov aas jns push push push adc add ret int lcall cmp popf incl dec pop or mov sti rorb jo outsb sub jecxz cli lret aas sbb and adc stc mov cmp je das sbb dec xchg stos jmp pop mov sub lds and lret movsl movsb js loope rorl or pop out jp jno sub mov in fs jne adc add sahf enter pop inc ds cmp sub out dec sbb jnp inc sbb aas stos mov shlb (bad) in ljmp in pop in shlb fsubrs push jb push push jp into add inc or in mov push cmc xlat xlat xchg (bad) ja bnd lds or adc dec es cmp fs xlat rcll psllq jno pop or aaa ror jno jle lcall mov cwtl inc inc mov arpl ljmp or fcompl xchg cmp cmp jmp pop or cmpsl mov rcl mov (bad) or xlat mov pop adc xor add out stos inc mov addb je aaa neg xchg outsl jmp add mov xchg fsts mov mov data16 jmp mov and sub or call push jge scas jae into jb xchg pop mov int js sbb xor add sbb push inc (bad) lcall ror adc fldenv pop fdivl mov mov dec cmp (bad) push sbb fnstsw mov pusha ja push cmp add mov mov mov sub addr16 fisubr or add movsl sub idivl jl cmpsl push inc jns jp and ja pop cli ljmp shrl jp in lahf jnp xchg (bad) lea mov in mov nop subl jb sbb pop addr16 push inc outsb jbe or xor fcmovnbe les push in push mov or jbe sub sbb cwtl xchg idivb push test pop inc pop rcrl push mov mov rorb push inc jge jmp je jb push arpl mov push push and inc or cmova sarl (bad) push aaa or sahf (bad) and pop xor jb movsb pop cmp ss mov fwait push add ljmp push popa push adc lahf fnstcw mov and aad mov add cld jmp dec fs jle adc cmc inc and cmpsb sbb repnz push shrb cmp icebp mov push das stos sbb sbb push mov xchg in sub test stos xor push jp fiaddl xor lods orl push mov push mov and insb inc add (bad) insb nop push xchg and shrb outsl sti push add jmp jnp xlat ret pop xor gs inc cltd lods mov test arpl jg lcall dec dec test pop (bad) stc jl push (bad) lock js dec push faddl and lds jne xchg pop xlat push out movsb jno pop push imul stc sub fstl icebp cmp cmpsb fwait jns negb leave fwait mov divl call push xor sub mov out sub cltd mov sub je mov mov lods pop mov jle,pn jp pusha cmp nop scas ret xchg fsub mov inc dec mov arpl jo jno sub pop pop (bad) sbb sahf (bad) sar daa xchg mov test push repz mov jno push jno xor arpl and fisubrl or int in rcll arpl add aam outsb adc pop fnsave icebp movsb push push sahf cmp nop dec sub lock mov jp in lods push (bad) xchg push test jmp sub jo mov mov int3 jl popf pop pop popf fldcw faddl loop push mov insl jb sti lock xor sub mov sti xor (bad) fldt ja xor mov pop (bad) mov xor rorl push test pop cmc stc sub in cmp out xor bound or mov xchg jle xchg lret sbb call lret and pushf sbb in xchg repnz mov dec inc jmp dec int shlb cmpl cmp push loopne cmp cmc (bad) mov data16 js push (bad) (bad) out cs (bad) in mov imul jb movsl gs loop dec lods test outsl cmp mov fisubl mov mov test add subb sbb adc popf negl xor or cmp pop enter or adc loop addr16 jl sbb inc pushf sti adc adc mov jne outsb mov bound mov dec xchg pop repz mov in mov lock jge mov or (bad) in nop addr16 or add aaa sub scas mov dec and jns sbb cmp lods push mov loope scas dec pop cmpsb in bound stos shr jl pop sbbl push lahf cmp bound mov and mov adc scas mov add scas testb imul xor pop or rcrb roll gs ret push aas add in xchg mov rclb js xor adc pop and shl mov xor out scas (bad) dec sub or sbb movsl outsb idiv push mov push sbb xor inc adc xor shr fisubr and or inc and fcoml int or fbld jmp cmc add shlb aaa out push cmpsb jo nop push push fadds call and (bad) (bad) mov aas lret sub inc ja aam mov cmpsl xchg mov movsl pop dec push aaa mov adc and cmpsl xor sbb jb popa outsl fsubp popf (bad) test inc xor lea cmpsb xorb dec mov fs xchg sbb leave sub lods out (bad) hlt mov into ret cmc rolb xor sub mov pop mov dec (bad) repnz mov imul insb xor xchg ss inc lret push or lcall inc xor pop and add test jb mov jmp or pushf push pop xor or sub adc inc ret ds cmp jo xor mov xlat in bound and clc sub mov test subl imul mov mov int movsb xchg jne adc push test loopne adc pop fild pop and pop iret cs rcl test bound fcmovnu mov mov lods jno (bad) loopne jp xchg lods mov push or std hlt pop gs push jno out rclb jge inc lahf movsb and movsb adc dec insl cmp dec jns (bad) daa int and mov das sti cmp insb mov cmp sub xor out aas push stc add int3 mov cli cs jbe (bad) or (bad) xor and mov sub xchg test pop jo lock enter jmp or rolb sbb mov sub xchg pop dec icebp (bad) repnz nop inc dec pop mov aaa out mov xor and mov inc jl sub adc clc mov mov stc pop jno jbe nop js (bad) fnop loop pop pop inc cmp flds arpl ljmp test jbe (bad) divb add xchg scas pop (bad) jbe bound call movsb shrl iret jl scas rcl xchg pop jbe in lret mov xor dec pop les pop scas aad pop loop sbb and mov mov adc sbb (bad) loopne pop or insl rcr or mov sub bound lcall popl movsl pop dec js fsts scas dec scas sub (bad) movsl sbb dec pop jp xorl mov add rolb jl adc add lock xlat or stos out loope add xor insl xlat lcall sub cwtl xchg inc out fdivrs add aam or stos push jecxz loopne cltd pushf rol fwait mov or lahf mov jge mov clc pop roll xchg mov (bad) jbe and repz mov dec insl add (bad) repz sti stos in lret xlat mov mov or lcall movsb xor imul xchg sahf cld test cs je (bad) pop (bad) sti shll loope icebp mov sbb sbb mov test adc pop pop aam leave ret pop (bad) dec adc xchg and rorl adc int xlat enter mov xchg fwait fwait cmpsb xlat imul ret popf sahf mov and mov mov xchg push aas popa lds xchg push (bad) jg stos pusha push adc jge cltd addr16 enter negl adcl dec jge mov into mov arpl dec pop test pop ret and sar xor mov push mov jge and repnz jns cmp dec lahf mov (bad) mov adc jne lock push or push xor adc xchg cmc or adc xchg adc dec test jnp call inc inc fbld cmp or xchg jne leave (bad) lock inc mov cmp ljmp cltd int3 xchg ljmp je mov sub dec cmpsb pop cs mov je xor inc (bad) out dec cwtl inc js sbb add loopne cwtl or and dec je mov inc pushf in push inc cmp add mov jl xor in imul adc cmp xchg mov repnz adc stc in inc ret div fs rorl mov sbb jecxz lret gs (bad) pusha faddl jl movsl inc mov pop pop movb sbb sub mov cltd mov xor test and fiadd mov cmp jno lods xchg sub jmp (bad) in and cltd sahf sub pop into lret dec mov dec stos push ss xchg cmp (bad) jns (bad) xor sub dec adc sbb push mov sbb test loopne xchg jecxz xchg and sarb xchg lahf or sbbl lock jae enter sar out mov std test insl and mov int3 push pop add mov pop bound sbbl mov iret fldz cli push lods mov ret jg sub push adc loop mov push movb nop fstpt mov pop dec data16 or push repz (bad) mov je in lock loopne adc stos fucomi mov cli int repnz insl pop push (bad) lret add lea repz ret cs xchg jnp insb popf shrl mov adc movsb fld1 xchg pop push je mov outsl pop add pop xor sbb add aad (bad) lods int add pop das out dec jp mov mov jmp enter out pop cmp inc sbb mov scas les popa adc std fwait ss (bad) mov fmull adc mov in fisubl cmpsl rorb (bad) jo mov fcmovb ret xchg insb lcall dec insl xor out push cli adc aaa push adc xchg icebp mov pop movsb bound scas mov jl (bad) movsl sub outsl mov (bad) fidiv jno jl adc mov lahf cmp outsb cltd inc sahf push add inc in cmp sub mov (bad) outsl leave outsb dec push pop push cmp stos fiadd mov xchg inc shrl cli push dec hlt xchg jecxz or lods sbb jmp sbb stos push cwtl jmp sub test or mov mov cmpsl rol pop or loop js inc jae mov inc rcrl sti out sub jne pop or jne xor adc loopne je mov pushw add in adc out push pop call mov mov dec sbb movsl cs (bad) outsl fs in inc hlt cmp and outsl cmp lret pop cmc call adc mov mov movsl or add in aaa xor push cwtl lahf sbb test cltd fistp xor (bad) pop dec mov xchg ret push iret loop inc and sarb mov jo sub int3 xchg cltd cmpsl and sub dec lds lahf leave (bad) mov and jge inc push subb divb jge jbe cli daa and aas (bad) call aam add aaa lret xchg lcall push (bad) aas (bad) jno mov xchg fcmovnb enter loope ficomp jo fucomp dec cli inc stos adc je jl (bad) gs jg mov sti out mov out cmp push inc test cmp les xchg push mov add sbb pop pop out mov fdivrl ror sti pop (bad) notl pop adc cmp pop cmpsb into lock mov inc push lods dec pop xchg ljmp xchg sarb dec adcl sbb push dec push sub cmp or scas rolb bound cmpsl inc test pushf jge scas mov fisubl loop mov xor lahf jb xchg xchg adc and (bad) hlt jge (bad) out inc movsl arpl adc xchg inc lods ds mov inc int push xchg lea push mov lea outsb ja loope (bad) pop in mov sub inc push mov xor dec dec jl shrb es jo imul (bad) (bad) sub (bad) sbb icebp cmp dec int (bad) (bad) (bad) mov nop jb or pop lods mov mov hlt mov cmp dec fucomp bound xchg js sub push push popa sahf pop loope rorl addr16 popa inc movsb dec out (bad) ss sub inc aas pop sub dec sbb ljmp xchg xlat inc daa pop aam inc mov push dec in mov push inc mov lock pop fiaddl das jmp in xchg fucom repnz inc xor in movsl ss sbb sub fmulp lret push pop pop rcrl js pop aad into aaa pop ljmp or mov jns dec xor imul push xchg push xchg push mov (bad) stc sahf out int pusha imul dec repz in mov jne pop xchg not popa mov pop adc insb sbb xchg add mov pop sub cs (bad) mov addr16 jne or mov mov mov cmp push insb inc inc mov jge test mov in pop mov add ja and cmpl fsts insl test movsl minps xor sub mov and mov loope repz or inc iret hlt in or lret inc xor mov adc dec sbb push pop add push popa inc ja pop jb inc inc mov lret sub lahf inc lock daa push and (bad) jbe lods out das jnp cli loope pop lods fist mov pop call outsl xchg fwait lock push stos aas cwtl test outsb loopne dec add lea cli dec push sbb jmp mov andb inc mov sbb jmp sbb fwait jae mov lcall xchg pop sub enter pop nop pop or jmp xor jle xor lcall jnp sub inc jne push in je inc xchg enter jmp or push fiadd in pushf fadds es les lock cs xchg jl cmp es in aad dec out pop adc pop test mov xchg lcall mov insb sbb call mov adc jp xchg loope jl sahf mov (bad) mov and push jge inc mov nop addr16 mov and mov out stc das xlat dec and xor pop (bad) into vmovdqu jp fsubs fs sub pop dec jg das xor lock jg push dec inc inc (bad) cmp lret sub imul ss push sbb rcl out cmp lock data16 in cmp cmp xlat mov mov mov loope push cld mov (bad) dec lock iret (bad) fwait lods inc dec sub mov hlt shlb pop mov les pop sbb dec jp popa notb movsb fdivs push and aaa mov jle leave (bad) mov popa (bad) in (bad) adc adc gs pusha aaa pop outsl stos cli into sahf jge sub mov mov sbb enter cmpsb dec outsb (bad) mov out pushf cli mov sub dec push mulb sub jne cwtl xchg xchg sbb mov cmp lcall lahf bound das rorb (bad) enter mov dec or insl dec xchg cmc aas cmp inc rolb out sub xor push jnp pusha ds cmpsb aas push lock xor cwtl pop inc fs movsb js lahf or dec cmpsl dec jmp add push arpl idivl jge jo aam mov cmpsb cmp cmp inc push fmull hlt mov and data16 inc lods dec mov mov aam xchg lret loope jmp mov lds adc pop dec icebp jecxz pushf out addb in pop cli jle mov aaa enter das pop adc into pop pop js cmpsb fistpll push and inc cld cmp cmp in add pop jo push sub fnop popf (bad) ja test repz fbstp or mov in dec loope fcmovne cs jmp jnp inc xor addr16 push adc mov rolb mov mov movsb mov fcomps rcr fbstp lcall mov xchg jno mov dec loop fisubr cwtl sbb sub (bad) loopne sub mov repz push sarb in push mov aam dec pushf dec fmull out dec call mov mov pop (bad) mov xor bound sbb pop push sahf sub pop fndisi(8087 pushf mov jmp add jge ret clc mov mov mov cld and mov stos jno and cmpsb xor mov pop (bad) popa push mov mov lock inc pushf jb mov adc lahf push (bad) mov jle iret push cltd aam in in mov ret xchg pop xor and fwait mov lahf jg dec push mov lods cmpsb fcoml push out in hlt out outsb stos xchg fmuls insl fild jmp pop loope out mov jnp cmp jno push shl int3 pop pusha fisub pop outsl les jle add insl ja inc into and xchg arpl add jnp adc icebp test xor mov mov add jp in icebp xlat mov je mov imul mov mov push jbe or mov sbb dec ret dec fidivr cmp (bad) test add mov push cmp push mov push adc add sbbl inc dec xchg and xor pop jge push push int3 xchg loop push cmc mov cmc xlat repz push test jl das and xor or aad inc adc sub aam aaa push jge clc shrb xorl int mov jae (bad) mov dec sub add stc fdivs xchg les and stos popa sub fiadd ret sbb pusha outsb (bad) cmpsb and mov leave lahf lods sub negb addr16 cmpsl in and or push mov out stc sub push loop daa mov rcr and push sub jge push mov xor mov cwtl inc or stc (bad) iret cs (bad) adc (bad) int popf push rcll dec cmp das xor std push stos push out fadds sub sub loope cwtl rcr pop (bad) in ret test rclb nop ret in dec dec inc adc mov ficomp or outsl aaa dec repnz pusha dec or ljmp lock (bad) mov pop lcall lret cltd call les imul mov push jbe das cli add add add bound je mov add (bad) sti mov mov les loop aas das loopne (bad) adc int sbb and (bad) and (bad) lods jg lahf pop je or out nop inc leave out inc jp setne pusha jmp push fs fwait jmp jns aas jge jne int3 mov mov inc jl mov popa scas in xor push clc fwait notl aad fwait pop ljmp jo inc dec icebp call inc inc dec and iret pushf sahf lods movsl rclb dec or cmp xchg ret cmpsl sub (bad) jb push shlb inc mov sub jns bound mov push sbb mov mov pop out pop sub test push push out adc ljmp fwait cltd nop inc repz rcpps das ret add enter mov xchg jbe dec and jne mov push adc imul cmp test xchg xor mov scas shll stc movsb js aaa ljmp xor add add and cmpsl stos pop addr16 (bad) aam aam xor aad in sub fwait adc aaa sti push popf js imul jne adc pop jecxz mov (bad) mov movsl rclb jne xor push cmp arpl fcmovnu scas sub cltd dec mov sub mov jae ljmp inc shl clc js pusha std or (bad) mov xor xlat push xor and arpl push clc pop lret in test ss into mov mov jo ja sbb lahf in and cmp pop cmpsb dec jbe in xchg dec push jg xchg mov xor rcrl push and mov cmp lret jno adc aam std pop mov inc jg xchg jae arpl int push xor cmp in and xchg ficoml insb jbe cmp mov inc xchg lds sbb push idiv rcrl fisttpll mov test push mov jg xchg add adcl xlat mov adc js sub sbb bound add mov adc scas lcall pop (bad) adc sbb movsl inc mov adc je dec inc or jno mov lea ficompl testl sbb sarl fwait loope or jl stos rcrl xor imul rclb jbe push add fwait mov shlb xor sub xchg xchg inc outsl dec sub or xchg mov cltd xor scas bound adc mov test lret sub loope xchg out jb idiv jge loop dec jecxz test arpl add push fsts pop in scas js cmp bound jl and and dec xchg sbb aaa popf adc dec push stos xchg sbb ljmp push imul and data16 mov xlat mov pop mov fistpll mov jg inc inc mov add jno iret loope pop test dec sti sbb xor cmpsb push ficom fcomps inc and mov (bad) fwait adc (bad) stos sbbb das and popa (bad) mov xor mov sbb sbb mov xchg (bad) push cmp enter mov loopne jb iret pop imul fucomip jb hlt fldt mov lahf nop stos pushf dec mov push push jbe push lahf jns inc scas mulb and ja fiaddl pushf sub pop (bad) adc adc ret sub fdiv pop mov jbe aad jl pop sbb xor cwtl sbb cmpsl loop mov loope cmp mov xor loopne jecxz dec ret ljmp inc jbe out or cmpsb add xor test data16 mov loopne jp mov mov and fwait jl sbb inc mov mov xor fucomip push iret pop aas es aas clc sub lahf xor lcall aam in jno pop scas sub and xchg pop insl mov fstpl or jae or jbe ss mov outsl arpl dec aam sbb test (bad) mov pop dec aaa mov popa sub pop lods xchg notl fcomi insb mov cli mov (bad) ret mov pop dec sub popa gs out loope jbe adc or test mov add les sub ds sbb fwait sub leave lcall stc fsubrs add and pop mov sar add lods sub cli add sbb xchg mov fs adc or push mov in inc sub or cmp sbb xchg xlat and icebp jp (bad) repnz xlat mov pop dec pop and cmc int3 push jbe mov sbb adc pop cltd xchg jecxz addr16 cmp enter out push hlt (bad) mov (bad) data16 popl push (bad) pop cmp pop ret dec fstpt (bad) cmp in jle inc test ficom imul or pop jmp jb ss push rorl emms sbb push and movsb xor or cli jo pop mov ljmp mov sbb xchg add popa xchg or mov mov shrl insb mov or add mov outsb cmp subl mov pop repnz and ficoml adc rorl stos js cli ds xchg (bad) aaa add cld dec clc bound mulb xor and rcrl mov (bad) jbe pop (bad) out out cmpsb adc cmp inc add mov sahf and out add and cmp add repnz das cmp sbb fs sbb adc add xchg push in xchg divl add stc addb push popl adc sub repz mov and pop dec add icebp fistl int3 sahf sbb fidiv push mov push inc cmp (bad) sbb cmp pop xor jb inc cld mov jo test and or mov and daa hlt or jle mov or ffree jo adc add repz or push mov (bad) call or inc push daa push insl pop add insb jbe in (bad) xor arpl push hlt pop mov movsl xor jge fwait xchg jne in jne lret fcomps orl lea xchg fisttpl xchg inc insb sahf lock sahf push push das fdivrp (bad) cmp aas cwtl or lcall and ss xor dec jp (bad) test sub pop (bad) jecxz mov sarl sub jae or pop push push mov jns adc inc pop inc and jno lret aam dec ljmp xor push push cmpsl add insl ret add test std not or js mov push adc stc imul ror int3 dec add xchg fwait push out sbb int3 and (bad) jo sbb add ret push xor push and jb or dec jecxz or dec aas inc leave dec add sub icebp daa dec cmp int jmp jg cmp orl loop xor sub loop jmp xchg mov xchg ficomp pop ljmp cmp push (bad) pop in insl test sub jge adc insl sbbl dec push repnz iret icebp xor sub ds dec push jns loope fs stc push (bad) sub and pusha bound cmpsl aas jp xor push test and mov mov stos mov inc loopne pop mov mov fnstcw out pop movsl inc add es (bad) popa lret cs fsubs jnp mov sub shr hlt sub and sub mov bound jb cwtl push lods lret sarb jle jno loope push mov add test push or dec xchg push lods adc mov add cmp xchg in push mov in mov cmp xchg sbb pushf pusha sub imul fdivl or sub aaa push push add shl mov inc push cld and adc xor lret testl enter add popf mov push mov cwtl bound insb mov cmp or inc aaa insb push scas clc xor cmpsb xor rorl ret punpcklwd fisubrl jecxz lds into inc (bad) loope in jns inc cmp cmp int3 sbb lcall add iret pop or (bad) dec sahf or push sti movsb icebp dec jbe lock out push nop xchg les pop icebp call pop das daa and je into xchg fsubs std add movsb sub mov cmpsb imul das loopne xor cmp xchg cmp push dec mov hlt sub or lea fildl push sub les in insb cmp add adc negb push mov pop mov lods mov mov add dec jmp mov outsb out shlb mov imul movsb lea fdivl mov sbb xchg sbb push aaa xchg cli lret and daa mov jge popf mov gs sub stos cmp mov mov ficompl leave mov or aad xchg or push (bad) rol aaa les call xlat xor (bad) and pusha inc lcall pop and mov shll notb mov jne,pn fdivrs jbe fistpl and je sti jbe jle aas data16 add xlat fwait mov jbe stos mov xor ja adc sub imull cmc xor xchg dec xor js int out jge sub adc in push sbb test cmp and sub jmp and dec punpckhwd jmp cmp xchg cltd fistp cmp mov fxam push and xor aam xchg jne mov lahf adc sbb inc sbb mov push (bad) repnz mov mov popf cmpsb fisubl in adc icebp and sbb mov push jbe,pt xchg out outsb dec jmp stos out loopne pop gs add push or adc (bad) pop mov les call aad cwtl lea adc jae xor push (bad) repz aad vpavgw test xchg imul sbb (bad) xchg sahf cmp lea jbe lret xchg fisttpll mov push inc stc push out flds jbe scas adc sar int3 outsb sbbl stos xchg or les xor mov loope push push outsl cmc and fs pop out leave push sbb or movntps div popa mov ja sbb in push pop and in mov clc sbb call fistp sub push or and test sub popa cmpsl test sbb or and adc sbb pop xor lret (bad) hlt rorl inc imul mov adc adc fcmovnb sbb test out jno cmp push lcall mov daa test jg sub out jbe xor outsb in mov fisttpl in xlat imul xchg adc xchg das cmpsl push fiadd iret notb int mov push jb sub pop add mov jg xor dec (bad) cwtl fidivrl fstp mov int3 dec lea aaa es call xor and in hlt inc add or cs les (bad) in (bad) (bad) int3 (bad) fs adc add add loopne jp cltd pop jae pop fnstenv push xor outsl inc dec fiadd out mov or and sbbb mov mov popf and in sbb in insb xchg ljmp mov or loopne fiadd mov mov dec setns outsb int sbb repz leave mov mov ds test nop xchg jg jns pop sub daa xchg rclb jo cwtl es mov ljmp mov pop loop mov data16 imul or cmp fstpt sbb mov les push xchg mov lahf push ja,pn lret mov and aam mov js add push or shll adc mov jge mov push call std test mov inc daa or cmp addr16 ss mov dec or adc loope push jae push testb xor adcl or mov xchg push out das pushf imul cmpsb divl lock int lea mov popa inc sarl jae mov xchg pop shll push mov addr16 mov repz lcall mov lcall lahf adc daa rorl push push (bad) movsl pop dec mov mov push push adc jp pop mov iret adc ljmp shl repz inc test (bad) es add or adc xchg stos imul push pop jecxz or or daa mov je (bad) cmp fnsave xor fcompl jecxz (bad) or out sbb jge int dec test in divl stos movsb lea ss outsb negl xchg ljmp sub mov push push dec fnstenv lcall lods cmpsb (bad) std enter mov push lcall test fwait sub gs xor mov fwait mov add sti xchg xchg stos std sbb adc lret sbb fist xchg dec aaa pusha xchg cmpsb adc scas jno pop or cld aad stc xchg mov int3 xchg adcl jge xlat xor sarl in xchg xchg loop mov (bad) jge and lds inc pushf and dec mov fmull xor in jp cmp loop push lret addr16 sub outsl jo push xlat xor and sbb test pushf push std or xor iret cmp mov xchg loopne push out pop mov rolb rclb test pushf mov aas or sub imul push and mov jo cltd in lret xor in add sub out cwtl push dec jb or or lret jne mov cmc stos lret sub pop fstps mov shll int3 xchg cmp sbb fimull nop cmc pop dec addr16 dec sub in scas stos add das push mov mov adc lret jp dec (bad) xor (bad) cmp mov or and punpckhwd push mov xor mov shll daa andl add sti lock into lods je pushf xor ret mov cmp and sub adc push cli pop mov xor leave xor in cmp leave sub inc sti in out adc sub pop arpl repnz repnz in jge cmc mov cmpsb arpl daa (bad) aaa and inc and inc add mov scas dec clc inc rcrl mov mov scas pop stc stc jne lcall leave xchg enter mov (bad) int dec push inc add data16 mov mov test jge pop jnp dec (bad) stos dec mov scas cmp jmp mov or sub cmp loope sub pop nop push mov push stos adc push std push dec insb jbe clc aaa hlt push inc pop lcall mov outsl xor push xchg adc stc and jae int3 jne repnz bound lahf and add lcall loope dec dec das cmpsl push (bad) mov jae stc push xor (bad) cld sarl mov inc lcall ret testb js loopne call mov sub and mov pop jge inc inc data16 pop mov cwtl push xor xor xlat leave push aas inc push mov pop jge or ret or ret nop cld mov push add int fdivs pop inc jo cld pop mov repnz sbb cmp mov push add ljmp icebp mov xor fcmovu pushw mov xrelease xchg add sahf scas pop insb dec xchg orl jno rcrl lea pop enter xchg push mulb mov loopne adcl and aad ret and sub inc jae (bad) pop jbe add in and xchg imull hlt mov jbe insl adc nop aaa or xchg movsb fidivrl int3 cmc repnz jl inc sbb jmp popa (bad) cmp xlat test jl add ret mov fsts mov out in in fs rcrl sbb sti ret adc je movsl add xor push push jg mov stc rorl dec test and mov adc pop clc or bound add (bad) nop adc push cmpsl xor jno xlat mov mov insb jo and push repz push push add cmp dec int test inc ds xchg jb aas sbb repz push mov bound cs xlat divl xorb ds or lret fs jg add jns ficom fstl popf lods popa movl pop or jb aas xor (bad) adc test loopne (bad) mov inc add jne or xchg je mov push call sub loop je loope mov out dec jecxz clc insl pop lcall push or icebp leave cmpsb je add xor add jge cwtl add xor sub pop fwait sahf xor ret cmp (bad) jecxz fidiv or popa jmp jae pop mov xchg adc popf ss pop int inc addr16 in je loopne jno insl mov pop pop sbb mov loope out ret add sbb pop data16 mov push pop xor scas fwait xor push incb aaa cmp xlat push mov jge mov sbb mov lods adc fildl xchg sbb and add and adc xchg data16 fucom mov arpl lock imul jns and and and xchg ljmp icebp push insb xchg cmc cmp jecxz imul xor jge mov or or sub test frstor in insb sub ja icebp lock pop push rcl pop or mov sbb inc fistpll sbb bound ja xor jl mov or and (bad) mov (bad) inc sbb mov sarl int3 sub in pusha xor popa push in inc sbb dec (bad) cs jp push dec outsl aam sbb lock dec sub lock cli add inc stos mov jb pusha repz out jo mov jns jp inc repz and test in ret push mov cmp mov mov jl ret jecxz fwait push ret pop push (bad) push lock xchg cmpsl cs imul aaa pop and fcomps popa insl rclb cmp repz fildll in (bad) pop cmp sbb lahf or mov xchg insl mov jmp inc inc xlat inc or cli cmp cmpsl xchg mov and sti pop add stos jno fstps jb fistpll or ret repz mov (bad) or adc pop cmpsb call imul incb inc lret jbe xchg dec int inc adcl repnz lods mov push jp ret ret cld inc push pop dec mov clc lods jo imul inc imul out mov adc or jmp in push jb scas xlat aaa in loope inc dec xchg xor adc pop mov iret mov fcomps sti arpl (bad) or mov mov cs mov jne or add lds adc outsl es jb pop test (bad) xor adc in cmp pop ja adc push (bad) mov loopne push dec push clc mov cmp loope outsb xor xchg divl out fisub sub pop jne fidivrl jno (bad) jae or jmp jecxz mov xor dec stc xchg push mov mov gs fisub mov push mov push cmp mov xor outsl fiadd pushl xor adc dec xchg imul xchg mov mov insb dec jge xchg in hlt movsb lret (bad) xor lret iret (bad) call js bound int3 lret xor scas and aam icebp repz jno adc loopne push out pop bound sub lret jl cmp or fucomp pop stc scas std imul or dec aad sbb and lock pop clc jg xchg xlat cltd ss pop enterw fwait insb xchg shrl mov call fistl stos cmpsb cmp sbbl movsl mov pop (bad) cltd sub js sti ficomp icebp lcall xor lret nop lret (bad) lret jmp and in out cwtl call fidivrl jge int mov or jl mov inc mov int out insl cmpsb push xor push (bad) daa repnz cmpsb scas or inc and popa jnp,pn sub jb in jecxz out out repz std xchg push mov jae outsl inc ljmp lahf cmpsl jno aas jb mov movsb add sbb and add cli outsb scas js daa push lock dec test mov jno dec mov jb loop loop and iret fwait jbe xchg mov icebp add dec inc insb (bad) (bad) cmpsb aad cmpsl dec jp test or and push mov js or mov push imul scas add das mov (bad) pop and std sub nop inc lahf fist imul dec and mov adc pop xor dec cmc push pop jne jae imulb pop popf push fs icebp scas inc sub out dec cmpsl jp ret lret out data16 mov aas cmp add pop aaa ja jb aaa adc pop outsb (bad) addr16 ja jno mov (bad) push stos int3 das stos mov loopne ret mov or sub sub test js xlat into inc dec sbb arpl cmp out xchg xchg mov and sarl xor nop xor shl or clc pop mov pop cmp adcl xor mov test cltd pushf or jae sub fs dec push ds xchg fwait arpl ds cmp jg cmp addr16 rorb mov data16 inc jmp adc pop lret arpl scas stos xchg push and push and cmp mov (bad) push mov out ja xchg or cltd std push stc popa leave or sub flds dec repnz sub (bad) je cmc xchg fstpl and xchg add fucomip mov mov rolb pop mov and lods ror cmc popf imull imull daa xrelease adc in lds call fstenv mov sahf add pop sarb dec scas mov popf sbb dec push push sub push jg cwtl sbb push rcr pop jle outsb or jge jle add mov cmp fnop (bad) pop jecxz mov inc je cmp mov loopne and lahf movsb nop add je mov mov pop scas shll mov xchg out push or clc outsl ret es mov je cli and xor and xchg repz cmp clc adc or sbb dec dec into mov push mov pop jmp pop sub push inc out stos fwait mov cltd (bad) aaa jge outsl bound movsl dec stos cmp inc int call jle jmp jae adc fdiv int3 stos or cmp inc lahf mov push xor or pop dec mov cmp push push push jae add add adc in pop push nop (bad) ljmp scas push jo push xchg jo fdiv dec lret lret js daa mov insb fwait imul jno int pop mov (bad) mov add je ffree aam je fildl lds out mov push jle lea push enter sub push movsl nop xchg jl inc sub mov pop and cwtl dec lretw das jno push pushw subl or scas mov lret jae pusha inc (bad) fdivrp roll repz lret mov push cmp pop scas cwtl scas or xchg (bad) out adc fs jmp inc in insb lea mov push jp loope and es pop movsl mov sbb repz ret repz mov pop inc cmp mov mov in insl dec fchs loop mov xlat inc str psllw pop mov dec mov mov mov cld (bad) loop xchg inc fbld xchg push adc jae jmp std pop enter or fs pop scas stos mov mov cmp mov pop xchg mov jge jge lcall inc leave sbb out mov inc nop jns xchg and jbe dec dec jne ret add movsl push leave outsb xlat fldcw xchg gs xchg adc gs and (bad) jno (bad) scas outsl popa xchg data16 jb add inc inc iret movsb jmp xlat cmc repnz jle mov jno mov cmp addr16 mov daa loop clc idivb pop popa sbb lret or add add dec lds adc dec stos jnp out mov dec jl,pt pop sahf mov mov ss je xchg jl cmp xor jne mov lds add sbb sbb push lock jns lahf pop or aas (bad) cwtl pop pop rclb (bad) imull cmc cmp add fnstcw mov cmp icebp sub cmp cltd push cmp sub mov or add negl test lods sub push mov add adc pop sti pop inc lea roll loop inc sub push mov xchg push clc adc jne jmp lret cmp jmp mov (bad) jae pop out jmp or push fistpll ret and jle fnstenv mov jecxz jae mov or mov mov cli dec into pop lret mov out aas or idivb (bad) xor sub loope shll push (bad) cmpsb movb test shlb add sub cli xchg data16 xor rcr dec xchg std mov repz pop rorl pop sti push mov cmpsb push ret xorl mov into insb ret mov int3 in sbb xor and sbb mov jne shrl add test (bad) int3 fstps jae dec cmpsl (bad) jbe cli lret loop jo das setbe (bad) shrb std enter aad rcrb cmp mov or call lds adc jnp adc inc sbb loopne fdivp mov loopne mov mov mov jns or mov incb jnp cmpsb daa jne xchg ret test sbb and cltd sub mov sarb jb dec ret scas or inc push movsb insl adc sub cltd std mov cld les xchg jle push jg out (bad) jp or lods pop xlat rcll push cmp pop push lretw pop les insb push lret mov dec adc jge daa inc dec xchg mov jge inc addr16 jp sub mov pop (bad) addr16 push (bad) mov notl and insl insb xor add xchg cltd add arpl subl js xlat arpl int cmp bound fidivrl insb pop push pop jo ljmp dec out jo pushf sbbb (bad) sbbb pop push imul xchg cmp std sub fnstsw imul xor mov pusha je xor adc rcrb mov and in jge outsl scas cli inc mov fwait mov outsl mov sbb ror jle lret (bad) mov fstp ljmp mov push xchg iret icebp adc push prefetch loop sahf in mov loopne mov out mov pop push xchg fnstsw or cmc rorl (bad) rcl adc rcrl push sub and xor es or mov and or sub pop popl call shlb mov into mov inc add adc xor add push into popf out adc nop nop in mov shll js jmp out add dec or pushf in mov jp sbb xor dec xor mov push rcrl push cwtl cmpsl lea cmc pop dec ja mov and cwtl vorpd push nop jb pop add xchg push push pop sub into mov cmc sahf push dec and push lret pop inc xchg outsb mov push push cmp sub cmp add sub push cmp and test xchg inc lea sub mov loopne mov inc loop xchg pusha aas push scas xlat ss xchg add mov imul xor cwtl push inc fstl in mov fdivrl mov lcall dec mov dec data16 adc add mov sbb xchg sbb sub adc xchg into pushf jle out adc shlb pop or adc mov or or sarl (bad) jmp xchg mov stos adc (bad) hlt in jg aam mov out dec xchg jl fiaddl adc cmp lret xchg xor fisubrl hlt pop arpl xchg xchg enter dec mov inc ja addl push jg adc aam adc test adcl and ret cli pop mov fsubr mov mov mov cmp mov testb add pop jae iret cmc adc rolb xlat cmc pop or leave repz mov lods enter cmp sbb (bad) jl imul cld and push cmc mov push pop pop (bad) fisttp jmp fstpl xchg mov stc fs push sbbl jo or pop out mov shll jns stos mov push push cmp ljmp stos jo or cmpsl xor push sbb push and jge,pt insb xchg popa pop and jae lods inc test sbb push jnp ljmp pushf pop in push cmp push jne cmp (bad) out jge cmpsl mov dec test sbb mov push pop sbb add inc outsb dec jbe or pop and or repnz cmpsb and mov repnz sbb shl push movsl jle or mov lcall cmpsb cmp adc pop cmp mov or and imul xorb push or aaa mov sbb jle mov fcomi test push mov sarl pop andb xchg jb outsl fcompl add pop add push inc sti lret and push in xor bnd push sarl inc push sbb inc sub pop std jl jbe stc ficomp pop jne cld mov cmpsb insb mov add shll dec push idivl jae or ja inc adc rcrb (bad) mov sbb push push mov push pop add pop pop push bound jecxz or data16 in dec mov jmp sub fbld sahf mov mov (bad) jo dec add jecxz enter cmp adc pop std jl arpl pusha push pop dec cmovno rolb arpl sahf lahf inc in sbb mov call jae mov or clc (bad) notl pushf mov jb xchg pop mov xchg fcmovne daa (bad) aad (bad) stos das add mov pop fistp jmp mov (bad) clc ss jp sub hlt lahf mov int pop frstor iret sub cli (bad) js daa jnp mov out mov cmp imul outsl mov add ljmp push inc push int iret stos push loope mov jbe cmc je js repz sbb xlat cmp inc inc pop rcr rorb repnz xchg and stc xchg inc (bad) stc cmpsb (bad) push push xchg mov outsl cltd aaa sub popa sub mov flds incb clc loopne (bad) push dec or fdivl pop mov fiadd xor push mov mov inc insb outsl sub sub es (bad) mov in fild test dec sub dec mov (bad) or pop dec jns pop outsl icebp pop mov xchg inc test lcall icebp icebp cmp or pop mov adc ljmp jo out mov mov lcall mov iret inc cltd mov pop inc xor cli xlat adc popf rol rcrl fsub aad fcomi or dec inc scas inc repnz mov gs sbb movl mov and je stos loopne adc pop out add ret jo or test popf out stos lods mov mov mov push mov jge jb les sti dec cs in mov pop xor lea dec fs shrl xchg add fwait mov dec push adc fdivp pop mov sub jge mov stc lahf sub inc mov adc dec sbb cmpsl subb sub cmp mov mov sbb sahf sub jne pop pop gs push cmp int3 mov movsl add aad jecxz imul sahf jb icebp mov or or jmp mov mov jb hlt jb imulb fsub xchg sub mov or dec pop sti sahf inc mov (bad) pop out int ss sbb rorl out jo int shll xchg fdivs mov mov rclb adc mov ss clc test sbb out adc dec outsl cli and push sub cmp xor adc mov sub mov sbb (bad) hlt ficompl fnop jp in imul (bad) xor xor mov lret dec scas sub push xchg mov ret adc xchg cld pusha inc adc js cs dec dec add bound pop adc fwait scas cs add sahf jno add (bad) jmp test repz fwait in je cmp push loop ret push pusha je (bad) addb ret mulb cmovns (bad) ljmp push lods test pop xlat into (bad) lea mov xor cltd lahf scas push sti repnz inc mov fisubl inc adc mov lods mov pop ds dec popa pop lahf xchg push or pop mov out fidivrl dec bound out mov mov mov and rcll je loop sarb pop push fidivrl dec das repnz lods cmpsl pop pop mov test test rolb negb pop mov and inc jp repz shr adc cltd adc je fisubrl dec hlt dec sub sbb xor lea mov fimull inc test popa cmp fidivl xchg xchg mov and cld fisub cmp pop loopne xor mov mov lods xchg or data16 mov test push ret mov (bad) and lret inc push cld aad sbb int3 or xchg ja lret fdivl xchg push xchg fcomip cwtl sub cmpsl mov lret cs call add sub dec pop cli xchg mov xor and mov bound insb ret (bad) push pop jnp xchg mov insl cmpsl mov out mov xor jnp aad pop or xchg dec fmull mov mov lods out std ds and loopne dec jne shl popa sbb or insl jo loope mov adc ds push jno movl push pop fs scas xchg mov push int3 push js (bad) repz lret xor mov les insb stos loop xor mov xchg rcrl or enter mov xor xor pop jae xchg out add (bad) mov mov loopne mov xor ret lret mov inc dec mov ss (bad) aam pop fcmove push adc dec nop add fsub cmpsb push mov mov sub sbb adc gs fucomi loopne xor sbb inc pop test or or mov mov cmpsl mov (bad) (bad) loop pop popa aad mov (bad) das mov (bad) xchg and pop jp mov cli dec in rorl in jno iret pop clc movsb aaa hlt xor xor inc adc xor cwtl mov cmp addr16 cmpsb (bad) (bad) fdivs jg and or add fstpl incl add xchg cmp jns fstps jo cmpsl push sbb es mov or imul cmpsl (bad) in push mov out jg shlb add fcoml in jno dec push lea cld test daa cmp pop sub xor stc fldl ds lds xchg jmp pop xor mov lcall movsb jecxz out sub dec cmc add xor stos into dec mov jns mov pop int3 mov add xor and rcll dec push xchg push adc aad mov push mov jecxz pop jg negb pop repnz sbb xchg lret xchg inc inc mov xor hlt gs xor shrb jmp daa and xor lods push push notl sub adc fcompl out dec adc push int (bad) out sbb xor push (bad) mov xor jecxz subl roll and jecxz sbb insl push lret add xchg fbld pusha add adc push icebp mov negl sbb outsl mov mov ret dec inc imul pop jp pushf int3 mov clc mov es neg sbb mov add in push xchg insl jne cmpsb pop sbb cmc scas stc xchg adc dec cmp out das or test mov xchg xchg xor std stc or add int3 push out std shr popa imul lcall cld movsl jmp push vpmacssdd push xor pop jns fldl xchg hlt inc push push test cmp pop movsl aas loop and aad jo jno outsl adc xchg lret mov dec (bad) sub dec pop mov test jne mov inc jnp pop popl dec adc push mov xchg aaa fwait lret push xchg inc clc loopne inc pop sbb and cli sahf push push mov sbb repz shrb lods int3 push cmc movsb mov das xor sub add loopne cmp test rorl xor iret fdivrl les repnz mov cmp and push (bad) adc lock or scas es dec in test jae (bad) mov out std stc push jae sbb dec jns mov lret fstpt sbb sub cmp mov inc xchg scas hlt sbb adc jae in mov in xchg adc xchg (bad) in dec mov pop add rolb cmp in push fcmovbe out sub rcll fdiv les cwtl lods mov pop sti gs in lods ret adc mov cmc push push cmp fsubrp dec xchg fldl insb adc cs dec and popf dec jecxz push cmc pop nop lea ljmp push pop lods pop das outsb or cli (bad) jecxz mov push mov jp pop pop mov xchg sbb mov jg mov (bad) xor jbe lea scas pop xor jo loopne push jmp push into mov pop xchg test mulb rorl std repnz jbe xor inc lods and pop add shlb cmpsb mul inc push shlb dec cld lds or (bad) jbe or cmp mov push dec sbb (bad) daa jl jae push (bad) (bad) iret fwait mov ds (bad) cwtl mov pop mov outsb fadds pop gs add jg stos mov daa push mov imul mov inc push addl push fs or out inc fwait lock inc movsl arpl xor fstpl add fldcw sub dec clc jmp (bad) insb sahf imul or iret xor xlat inc mov (bad) push or dec sub shll (bad) stos leave outsb daa mov std bound dec (bad) xchg iret movsb popf jle jbe sub jge and dec leave xchg cld xor cwtl and and imul xor nop sar mov mov and mov int3 mov stc adc stos scas dec fs mov movhps cmpsl mov add pop sahf iret and cmpsb mulb jp nop xchg fisub cmc pop jp jecxz mov push jae shrb xchg mov mov (bad) mov xlat icebp or negl cmc lret dec lds cmp pop jae and push sti inc arpl into iret pop fidiv cltd xor scas dec popf leave in mov fldcw pop inc shlb repnz jae jae inc sub xchg or xor mov adc test imul xor or call push jns iret jae inc rcl mov scas xorb mov ret leave mov es out leave mov mov fistpll jb (bad) mov fs pop jnp es fdivrs pop push pop push inc sbb cs jl addr16 nop jmp add in int inc or or mov xchg inc push xchg mov test je je enter in lret and dec leave js inc xor jge sti ljmp ljmp fwait cltd xor mov mov loop adc outsl jle fucom jge ljmp bswap push jbe (bad) insb dec xchg dec test fs add sub orl test ja lock movsl int3 cli test (bad) sub inc push jne mov or xchg xor movsb in xlat cmp jnp lock icebp (bad) test pop adcl repnz aad inc dec mov inc mov mov arpl jo push out je mov popf (bad) idiv mov cld stos xchg aam mov mov push add daa lahf iret push aas adc dec data16 test rcrl call cli xchg aaa divl jl xchg pop mov pushf adc imul push (bad) jge movsb or cld mov loop addr16 pop cmpb test stos or sbb scas (bad) je inc dec mov mov jecxz loope xlat or in cmp xlat popf (bad) mov shrb xchg sbb cmp jns pushf out test (bad) xchg xor aad mov ror insl jecxz dec js mov add (bad) lock jle mov pop cmpsb sbb cmpsb add pop sbb dec loop stos adc jp les mov mov fldt pop cmp pop int or repnz outsb sbb jno cmpsl add mov dec setg cmp fbld cmp inc lahf jmp int3 lds aas fdivr in mov lods call mov popa imul nop pop scas jmp sti jbe cmc int3 fldenv sahf repnz das mov add mov jae dec scas out jnp xor aas push mov jae pusha inc xor stos fld jmp out imulb push cmp or fcompl xorb and xlat dec (bad) jns cmp pusha xor or js addr16 mov out pushf mov into and lcall push out arpl xchg sti jp aad push in cmp (bad) xchg add mov test mov pop and or dec shrl lcall ret jne repz adcl test or mull int mov xchg lret scas xor (bad) cwtl fwait sub sahf hlt test mov adc sbb and out cmpsl or mov inc and cmp movsl shll push out cmpl pop stos jb outsl mov out cmpsb loope mov out push jne lods (bad) (bad) lods repz push add test lods mov xchg sbb jae scas cmp bound popf bound pop lret xchg mov xchg pop push mov icebp pop aaa inc sbbb dec into push xchg fmul inc cmp cli sbb mov xor push or mov ss dec jp mov push popf push jns lahf pushl push mov pop xchg ljmp jnp testb ss jle add ss mov or aaa pusha sub enter mov (bad) dec aad and inc (bad) outsl jo mov add js les rep adc xchg cli scas jne mov mov leave (bad) mov ret cmpsl mov cwtl add lahf push push out out jo das pushl aam les cli cmp stos sbb adc jns stos in add int orb popf test xchg lock push xor sbb das arpl mov scas cmp mov cmp neg or (bad) xlat (bad) shll add mov cmpl mov dec fwait sbb movsb mov and jne loope data16 or (bad) sbb aaa pop jae push shrb jp cmp dec pop addr16 jne ficoml test pop cmp sub mull jg inc inc fstpt enter stc imul lock mov test ret dec add dec movsl adc sti (bad) xchg jl fisubr lret jae fsubrs push stc or sub inc add inc jmp scas (bad) mov sub mov jnp adc std (bad) icebp dec ss ljmp sbbb mov sbb movzbl add dec (bad) jp mov notb push addb (bad) aad sbb subl mov fucomp jmp sahf xorl dec pop enter and lods push (bad) aaa mov inc jb jl cwtl push imul mov das je xor fadds adc push aam push xor insb addr16 jl xor mov sbb pop push jo push nop sub xchg in sahf push mov arpl loop mov mov and pop repz (bad) jmp js subb and je les xchg jb or push pop outsb or iret stc add jmp adc data16 dec roll test jp test (bad) xor aaa mov fsubl and es loopne bound push xchg cmpsb aad (bad) test gs out add and pop push jge fsubl imul xchg movsl mov imul lret push dec lea sub mov push mov xchg jle mov loopne insb or adc push lds pop add ja dec push xor sub inc in daa add addb (bad) (bad) imul (bad) sub jg push and in pop div inc mov gs lods mov pop fsubs xchg std jae in cmp loopne xchg (bad) jl mov sub ljmp mov cmp lods (bad) jb push es aam mov (bad) add iret add xchg dec mov pop js loop mov inc in test xchg cmp (bad) stc push jmp imul test mov xor out pop test dec fidivl push xor sti sbb xor push ljmp arpl pop mov int3 mov mov pusha cli push mov ja and popf push and sbb push and sti scas cmpsb fiadd xchg aaa jns jp and imul push push sbb xchg mov cmp aam mov outsl subl syscall xor xor (bad) or out pusha inc in sbb fs (bad) pop ret sbb sub or xchg xchg les stos test imul xlat fisub mov mov mov sbb scas jl mov cmc out jecxz jecxz hlt inc cld jl mov mov stos pop mov and lods loope cmp mov (bad) cwtl out jo adc aaa add cmp loop jp ret jnp inc fsubrp jno loopne mov mov jnp mov sub mov outsb jecxz push mov data16 fisubrl push into inc mov pop clc in js repnz push sbb inc pop and mov data16 mov dec jne xor add test lahf (bad) jo mov and fwait lods xchg stc dec lahf xor sub in or imul pop sar mov outsl ds sub fldenv dec int3 pop das inc mov out std popa sti popa cld dec aam adc mov push sbb mov inc mov (bad) sbb rorb pop imul cmc adc fst push xchg ljmp mov int3 push jle mov insl sub inc inc and mov cmp out jge inc sub rcrb xchg std lock (bad) mov pop pop dec mov mov add imul mov les xor dec in call mov sbb inc push insl mov ss cmp cmp je (bad) mov repz ja push js bound jne push (bad) mov ret pop stc ret adc mov xchg pusha xchg fsubrp addl push (bad) or lock add outsb mov jne xchg sbb jl sbb ror cmp ret and pop scas sarb out adc cltd movl scas test popf adc das lods dec lods std in jne sbb inc or mov cltd inc push popa pop mov cmp call stc hlt xchg aaa or or jp fstpl cltd xor dec xchg mov inc insb pop sbb cmp shrb ja les ljmp mov inc pop or call rcrl mov mulb sub push adc xchg mov xchg in leave add and rcrl or loop cli hlt ret jge dec daa cwtl mov in sub loop ljmp ja dec fimull xchg jbe mov ja push and add cwtl mov sub repnz ret fcomps cmpsl mov xchg popa es jne sbb test (bad) aaa xor inc or inc (bad) out divl mov pop data16 lods daa aad jge pushf test ret cmp jmp push jecxz xor or adc ret sbb inc pop mov jo ret sub jp notl xchg inc cmp std pop in push jnp pop (bad) xor int3 in fildll out cmpsb push sub lcall adc xchg sub out rcr push fist in sub xchg lcall xchg iret rorl pusha add jo mov out lods mov inc jmp iret mov daa loop pop xchg (bad) hlt stos jbe pop add divb cmp jnp or fisub jmp insl imul outsl mov mov sbb movsb andb sub xchg je xchg out mov sbb mull jno gs jecxz cli dec mov jmp push sbb fwait das push add push int3 pop xchg gs lret xchg and sub cmp jo mov and hlt xchg in add pop js imul movsl add out daa xor adc cmpsl add test test xor pop pop mov mov cmp rcrl clc test clc or subb xchg movsb jl fsubl pop and jne mov lods pop dec mov ficomp (bad) repnz pop fld sarb adc sub out ljmp (bad) jnp xor sbb xor ja imul test mov xor push mov movsl pop inc sti sbb push (bad) pop push andl push outsl (bad) outsl cmc or sbb iret lret pop or sarb pop adc bound xlat dec sub or jae scas das arpl cmc cmpb out mov stos pop push mov xor push in es test adc jp add fcmovbe inc fcoms xor lock pop mov add out sub (bad) frstor in lahf pop push add fdivrl xor mov jb mov and pop js inc xchg mov mov xchg test aas jmp test lcall outsl popw movsl iret cmp scas inc lock outsl pop mov adc adc std jns or shlb jbe ret pop test ljmp je montmul cmpsb inc imul adc xchg xor and inc or arpl sub nop imull or jmp lahf std lret inc or jns (bad) xor dec xor test (bad) int3 sbb in add (bad) out nop mov xchg lock dec cmp pop out ret js stc shrb push pop mov pop cmp push rorl outsl jle add push xchg jb arpl jns xchg sub push mov ds or (bad) fnsave pop sti or int3 add dec xchg insb sar cmp sbb cs inc mov xchg pop push jae int iret mov sti jb out in xor je std xlat push lock or push ret inc or pop xchg int3 test sbb aam jno lock lea popa and mov and aas pushw cld mov adc inc scas mov les test nop sub mov mov jmp sub jle pop cmp les push dec mov jmp push dec mov xchg push lret mov mov fisub imul rorb push dec es scas cmp jle popa into mov pop fwait push inc pop xchg dec rcll addr16 mov mov dec or icebp cltd jg fcmovbe cmc shrl jmp outsb (bad) imul mov fdivrp ret into jnp aaa mov push mov or pop rolb gs stos jno xor ret jle push pop inc outsl daa arpl hlt les or mov std dec test push inc xor dec sub xchg cmpsl push js aas inc jbe push scas std or in les sbb or adc inc mov push arpl sbb mov mov xor sbbb pop mov sahf inc and push inc scas leave pusha and push cmp sbb sbb xor push es cmp sbb insl jmp xor out dec xchg inc and cmpsb in jne mov jle lods jp xor loope subb pop and or inc rcl mov pop sub mov or xchg cmp stos xchg jbe cli sti leave lea pop mov xor stos aad dec xchg sbb sub mov mov lcall sub fucom les int3 call js mov adc and cmpsb jmp cmp and xchg xor icebp sub cmp xlat push iret dec mov dec or shll pop xchg out pop mov out dec inc or and nop js cmp rcrl adc cli mov xor jbe or push cmpsl or iret mov cmpb ret push flds leave pop adc adc jle lods pop (bad) (bad) mov popf mov test lds out push xchg push and xchg xchg inc imul ret imul fist jb fs cs add icebp in xchg and adc lret pushf repz pop pop or fwait mov aaa clc fiadd xchg in sahf (bad) into call in test pop add adc pop adc jg push lret (bad) pop es sub mov rcr icebp imul or fdiv out adc push inc adc movsb (bad) pop push lds xchg je mov pop (bad) into int push out and add sub out insl lds or insb addr16 adc into adcl mov fs mov adc lds inc and cmpsl or nop adc xlat rcll ss out popl cmpsb adc and rclb adc jns mov insb js out push jo push add or jp inc emms imul and vpsadbw cmc jb in push gs push fisttpl cmp push lock neg sbb and xor sub outsb or into xor xchg clc lahf add leave mov mov fs out push push inc push test fsubrl dec sub test xchg inc push pop pushf inc push repz xor std mov dec ljmp aaa xchg or xlat repnz mov add leave ja push and insl cli and (bad) mov leave dec and test fcomps negl fs lods cltd shrl lret cmp jae sub out lcall xor add add add or jl sub call dec dec imul pop pop jle push mov inc add out shrl add imul push add sbb adc sub rclb mov scas lods cli and shrb (bad) dec test cmc pop or jo (bad) idiv outsb pop xchg ret pop (bad) hlt adc out pusha ret push push inc push std pop pop test rorl dec leave cmp dec mov cmp sbb (bad) dec sahf ret test (bad) cmp cmpsl xor jae mov ret cmpsb mov popa add mov hlt mov aas cwtl sahf dec in push arpl dec push pop and mov roll in xor adc mov and cmpsl inc push dec cmp mov mov add sbb sub lret xor lcall xchg rolb sub (bad) xor push dec sbb lock sub pusha sbbl mov addr16 jb dec insb int mov push sbb shrl pusha adc aad add lods daa popa cltd insb push xchg xor sar jmp testb aad pop jo jnp bound les pop imul (bad) scas cwtl cmp movsl and rcrl insl repnz sbb ret int mov or fisubl add sub cwtl enter mov dec cmp andb loopne push inc mov lock repz sub inc xchg cmc movsl test mov fdivr das pop out (bad) popf les sbb inc cmp jp enter push pushf jno mov (bad) nop or sbbb jl imul data16 pop cltd push call jb cmp in lahf sub mov xchg dec imul clc sub dec repz fisub mov mov pusha movsl imul mov stos addr16 inc sub jg jne scas jl sbbb nop mov xorl jge ljmp mov int3 cs neg cwtl imul stos jp orl fwait insb lahf jecxz fstp cmp cld pop int fwait xchg adc mov sbb mov adc ss (bad) mov pop ret dec xor pop xchg xchg mov lret push orl shl addr16 clc ljmp fisttpl push xchg inc (bad) rcl test call mov cmp xchg movsl dec push in and dec and fistpll daa jne aaa mov dec push xor sbb fcmove jnp dec sbb push test push dec and xchg pop and add pop and mov test dec push push lahf inc jnp push jns push je in or dec mov stc fwait or mov imull sahf ror xor adc std mov into cmp push inc out pushf push or add test xor lea (bad) pusha sbb cs (bad) (bad) (bad) cmp fisubl jnp shrb and and mov and dec push js test cmp push sbb or stos push andb fcmove inc lock das into or inc xor sub cmpsb push dec xor stos mov xchg sub iret fisub lret and cltd inc shll add lret enter shlb out out push xchg add (bad) out mov out aad pop in fisubr mov out imul push jne mov sbb push jae pop xor in inc jge cwtl adc stc push rcl in sti push cltd or xchg rcrl movsb rcrb xor mov or xchg repnz xor sbb jbe mov in in pop add pop sub out inc mov nop sar add inc pushf jecxz pop in in jb mov jae sbb push sbb mov out jne ds aaa faddl push xlat idiv iret add pop lds (bad) fcmovu data16 xchg xchg (bad) cmpxchg int3 (bad) lcall cmp outsl lods cmp sbb enter outsl and push sti ret cmc mov faddp add stc popf test imul add cltd fadds mov push lds lret push clc clc jmp add jo lret imul jae xor shll jp test mov or int lcall ja mov mov das pop jbe mov inc jmp cs imul push out outsl pushf pop outsl jmp orl push xchg push (bad) in add ficompl stos aas loope dec dec into cmpsl scas cmpsb xchg and adc pop push or xchg ja (bad) cmp ds pushf std mov (bad) les and mov insl push jns mov adc mov test mov jp xor mov xlat pop sub or loopne fsubp inc in push cwtl mov xor mov jnp sub pop pop adc scas xchg mov stos xchg jmp cmp bound xor stos and arpl das (bad) jnp popf inc sbb ljmp cmpsl movsl or test ja xor daa ds pop sbb push jbe arpl mov or (bad) xchg and (bad) fs and mov mov in (bad) and (bad) out ds pushw mov sbb les xchg inc or stos clc (bad) mulb jne,pn xor cwtl xchg inc pop mov jae in jp test popa or test sub (bad) cmp sub icebp loopne xlat out cmp dec mov xchg dec inc add mov out xchg adc not js outsb daa jle cmp mov and daa icebp adc push cwtl sbb mov and mov pop in dec call and int3 mov stos lret mov je test fisttpl out mov fidiv push fadd sarl jbe fmulp fcompl pop idivb aaa je test icebp adc fmulp clc mov ja (bad) dec in test mov adc mov add idiv xchg lcall ret movsl mov fsubs call mov (bad) lahf fild mov popa push jg xor cmp outsl jb pop sub in xlat int3 fdivl sbb mov stc cltd gs sbb ret pop jecxz cmc dec mov and inc pop rol push xor repz fisubrl jp mov fs and test jae bound jno add jae cmpsb stc hlt xor cmp sbb sbb pop popf jo ljmp jp sbb imul adc cld or xchg cmp jnp xor jl cltd das subb (bad) enter add ja js arpl outsl inc and sbb dec (bad) jl sti push mov mov dec clc dec sti push in bound dec xchg sti and ja aam jecxz sbb adc jg add sub xlat pop jno orb out test scas inc stos ret je xor xor inc bound loop out push ret jbe jge (bad) mov aaa push adc xchg (bad) mov loope jecxz sub sbb sub sbb and xor mov cmpsl inc mov xchg cmp ljmp addr16 lahf das in daa (bad) je mov inc fildll aas aaa addr16 call xchg fstp in cs outsl inc jp push aas repnz inc fist mov mov pop jo adc sub pop pop add aad mov cwtl pop push test icebp les jo leave xor ss fcom idivl (bad) outsl xor push mov xchg fnop imul jecxz outsb out push and call popf mov ljmp push jae out xor clc ss aam or add (bad) push setae mov xor fdivp sub mov pop push lret push cmp das mov lahf cmc sbb sub mov pop pushfw inc hlt jno pop rclb xor inc jp shlb call adcl movsb adc adc inc nop ficomp sbb dec lock xor or scas mov je cmp outsl dec hlt add mov push mov mov sbb adc jg repz push flds pusha pop cltd push repz pop sub andl jae popa xor addr16 push inc ss sbb mov adcb inc cmp out inc xchg xlat xchg js inc lret (bad) arpl iret fsubrp xchg cmp pop mov sub fstpl sbbl add imulb (bad) jmp mov jno xchg (bad) xchg sub cs pop push das cmp cmp into popf fimul and sub addr16 add stos add dec mov jne sub bound cmp leave inc aam jmp out addl jno push adc adc andl jmp push dec sub je mov mov adc cmp inc (bad) dec cmp add (bad) lret push push jne imul stos aam sub or (bad) jb sbbl mov mov inc imul out (bad) scas dec jnp mov out pop xor jae sar pushf inc out ret je je jo cmp xor or into lcall repz fcom sub sahf bound pop and negl inc int3 (bad) scas adc (bad) cs mov sub add jp lds xor or sub gs cmp xchg sub ret xor lods movsl shrl (bad) mov repz cmpsl out in xor push inc mov ljmp mov sbb push cmp jmp add dec ds (bad) mul scas push pop jmp adc bound adc sbb ljmp out les outsb (bad) xor cwtl stc test xlat mov pushl jo test inc in hlt xchg pushf ss inc and jb mov cltd jnp popa jg mov stos dec mov cmp pop push lods mov out ss dec clc shrb adc mov xchg adc cmc mov gs gs adc xlat jge add xor xor adc cld or pop ficomp mov adc push xchg pop xchg inc ror mov int3 or mov inc call daa inc jecxz nop outsb push xchg stos lahf ss pop mov (bad) push (bad) and mov lods sbb int3 repnz fbld js mov lret pop xorl mov aad xchg xchg sub or maxps mov icebp jle jns enter cmp mov pusha mov lcall xor je lahf fisttpl out rol insb enter ja movsb or out call pop push fcomps mov and ja fcomps daa mov cwtl fdivl sti jg mov dec lods jl inc and xlat leave out or js jb dec adc leave dec sahf pop sub aas jge into and xchg pushf subl dec cmp test mov lock inc (bad) dec push xchg inc dec xchg sbb mov fwait cmp je mov popa outsb jp push iret mov cmp sbb jmp movsl fwait in sub scas push imul mov stos ret cmp add sbb aad pop and cld jb (bad) jnp loope,pn mov sti or and xchg and lret adcl cmp cltd sub add enter dec std aad mov cmc imul jmp mov jmp mov sub loopne mov sahf scas es es mov or jbe sbb arpl faddp inc fwait cmc cmp negb mov lahf cmp mov mov gs out leave (bad) pop xorl (bad) cld pop mov rol out bound js lea fnstenv notl pop (bad) and adc xchg dec loopne sbb xchg int out add and sbb scas es jge scas lock fidivl cmpsb pop hlt dec (bad) lods push test pop addl out adc push insb push sub xor pop xchg adc outsl sub pop scas int sub sahf sar fmull cs imul and test sub inc mov inc mov jge cmpsl not mov outsl out not shrl imul icebp std mov adc pop stc std call loopne jne push shl sbb sub xlat lcall fs je stos test xchg dec or adc jmp and stc std and pop cmp or imul pop jns (bad) xor mov into push inc push jmp add add push jb lock lds mov dec push mov add (bad) insl mov (bad) mul js push cmpb int3 inc in loopne sbb dec dec push ffreep pop xlat scas stos test pop add int lret inc push mov in mov push fimull (bad) test sub push sbb xchg dec jp xlat (bad) mov mov xchg rorl dec pop and movsl sbb leave mov out push lds int3 lock jmp dec ret sti push pop adc insb jge sub dec ret out add fisttp adc mov jge mov adcl pop adc ret stos aad xchg xchg or jl xchg jecxz js mov pop roll sbb mov mov xchg or pop enter push jns add popf push mov dec dec fcoml fist mov mov out cmp dec pop ret or mov sarl icebp inc in xor push pushf adc call clc xchg mov stos (bad) adc mov dec jb push xchg mov inc push cwtl add push dec pop addr16 or and addr16 in mov rolb sub cmpsb pop jmp dec les push sub in sub shrl nop repnz repz jmp cli lea call push xor lcall cs pop test cmpb mov and js loope popa adc or inc mov xchg mov pop push sbb scas lock inc pop sub aaa adc dec js ds stos xchg roll cltd imul iret cwtl repz mov addr16 les (bad) pop push dec pushf test std mov add push cltd (bad) lahf cmpsl pop cmp adc xchg test inc sti cmp cmp or cmpsl lods imulb xchg hlt addr16 jecxz aaa test push pop inc ret dec mov lahf das mov (bad) popf mov pop sbb (bad) cmpsl call out js mov ljmp int3 pop (bad) jp outsb xchg sbb rep add pop jmp addr16 ja xchg sbb xchg rcll fldcw int leave cmp out adc clc aaa int out jnp pop mov stc xchg pop rcrb add xchg xchg pop add call adc (bad) out imul xor addr16 (bad) std cwtl out xchg insl or and mulb fisttpl xor lcall push and outsl jns std mov (bad) mull add xchg adc sub adc fwait push xlat mov lcall fmuls jl sarl outsl add or enter movsb adc test and and pop sub xchg int mov sti stos stos outsb icebp sub addr16 dec pusha dec lock gs mov es daa arpl push rcr scas push (bad) loopne mov fnstsw lock imul dec hlt push sbb adcb pop dec call mov (bad) (bad) out xlat leave and xchg push fucomp inc add push shll xchg mov mov adc inc loop imul or das jmp mull dec (bad) popf (bad) mov inc test neg pop in jno fwait and (bad) sub insb ds xor test cli inc pushf fdivl jmp stc jb stc or dec cmpsl xlat or mov pop pusha incl rdmsr pop in setne ljmp (bad) adc cs add nop pslld ret inc scas mov ljmp adc aaa test or ds js,pt ds mov cld cmp lahf pop or in or stos pop pusha inc sbb inc call pop xorb loope pop lods push mov or lcall fcmove lods sarl ljmp js push (bad) mov nop rclb adc out loopne sbb mov xlat imul std mov iret dec dec movsb adc scas cld shll mov adc inc and ljmp sbb jle into or shrl insl xchg cmp push pop jl cs or mov in mov jge pop call fdivrs push or int dec inc loop imul jno sub outsl movsb push and fcmovnb (bad) das outsb cmc jl fwait int3 nop cmp mov je add in insl lcall sahf sub or hlt js lahf sahf dec fstl add mov dec dec sbb test push inc mov jecxz and add pusha sbb ret push out or pop sbb jnp lods add add repnz xor or sahf and fsubrs push cwtl je or ss sub add sub mov mov (bad) out pusha insl jae dec sub js iret adc pop fwait add leave pop xor jo les pop movsbl adc loopne test and fdivl ds adc (bad) movsb lds addr16 or xchg dec push push xor dec shr push ficompl dec adc scas xchg mov pop push xor xchg adc lcall cltd cli jl push xor and push jge jge (bad) and test xchg add or pmulhw inc mov loope mov sbb dec je ds inc cli push rcll xchg pop fistp and mov stc in aaa lret outsb movsb adc cs repz jo lret das ret ret push leave adc dec scas mov lcall cvtpi2ps sbb pusha mov inc arpl pop fsubrl xor add fwait or stos xchg cmpsl push shrl (bad) sbb lcall lcall out outsl fsts cmpsl add sub jle mov and push int xlat jle insl int (bad) shr dec jne cmpsb sub das sbb test int into imul fstl movsl sub les xchg cmp mov pop jp mov mov dec dec sub mov imul push enter cmp adc xchg lahf push xchg ja mov pop mov cld or cmp (bad) jno sbb fnstsw sbb je xor fistl push cmc push (bad) push fidiv mov xchg and cmp inc mov push addr16 clc dec jno push push call ret cmp sbb (bad) aam mull or fs insb call imul fist or jp cmp fs outsb js sahf (bad) mov sti cmp nop adc push lods push ja scas jne hlt out (bad) xchg negb jae add lods bound push (bad) (bad) or out pop je in stos cmp shrb mov lods stos popf mov popa pop loope cld mov pop push mov push sub lods iret icebp idiv scas fcoms mov adc sub add les push adc out fwait repz test xor dec mov dec or (bad) mov int3 cmpsb inc dec push call push dec push das pusha jecxz pop cmc mov fldcw adc jne lods ret fistp fsubl mov push pop cmc push (bad) adc push cmc insl mov fs xchg jbe jne enter (bad) push out sbb and mov cwtl out clc aad sbb jo push repnz std insl out mov lret mov sub push lods enter sub xchg mov int3 popa xlat jnp pop mov fisttpl and lods push and pusha jno push mov or push xchg fdivs jns or xor in or or jecxz jg lret in xchg sti xor lcall int3 repz inc imul jecxz sub jnp scas pop add push insl add jae push sahf stos div stc and pushf cwtl pop hlt add lahf ds out add pusha or pusha mov cld loopne xchg mov mov add insl add lahf std pusha push mov mov cmp inc push cmp daa adc cmp pushf aad in test push fwait lea lret hlt aaa pop cs push adc xor mov add mov cmp loopne push dec pop leave arpl jg leave push lcall mov (bad) jnp iret xchg cmp out pop sbb rorb lahf dec fsts jno,pn push inc dec fs popa pop mov dec int mov lods mov loopne xlat das jo pop lds xor push sub lahf cmp mov into mov mov sub arpl lret mov hlt and sbb je aam mov inc and sub in push inc push mov popa lds mov (bad) mov add pusha cmp jmp and (bad) nop mov jle outsb (bad) mov adc push mov dec in cmp xor pop das imul and outsl and aam adc dec (bad) out pop and cmp std loopne add dec jbe xchg cmpsb lods cwtl scas mov jp sbb imul sub rolb sbb pop mov (bad) incb fldenv jp repz in imul push push sub fmull call and pop cwtl loop add fsub into insl cli out ret repz stc inc xor dec aam adc mov inc cmc jns sbbl mov incb outsb and mov ret mov icebp fnstenv stos mov and mov xchg into (bad) nop adc fwait jb add and jecxz flds adc fs xor hlt xchg mov loop push adcb lea sbb out cmpsl sub ds sub xchg mov fisubl aas push push xchg (bad) aad cmp mov add fndisi(8087 into push or out xchg xchg int3 sub repnz pop gs add mov or sbb push (bad) push scas stos (bad) out daa bnd sub xor out icebp xchg pushf iret lods jae (bad) fldenv and jbe sub scas loopne jmp xor dec jo fiaddl jne xlat dec and cmpsl int3 call addr16 addb add mov (bad) imul push push inc push and sarl clc lea cli add mov cwtl xchg les pop pusha sbb inc rorl adc jns out bound jae addr16 imul dec dec cmpsb out aam add sub sub or inc dec xlat fimul test pop scas mov bswap add insb cltd and mov or adc inc cmp push lret sbbl pop insl ret dec movsl xor cmpl pop pop inc lahf cmp xor cwtl cld sbb fs mov sbb or adc mov mov push ret sbb (bad) push fldenv jns xor push push sbb ret mov insl xor push fnstsw xchg xor add imul mov jae (bad) jle mov pushw xor popf cmpsb jecxz adc and call mov push adcl pop add inc push add ljmp test push test mov lahf xchg notb xor movsl cmpsb or add sub mov xchg adc pop sarb jecxz,pt xchg popl clc pop aad push insl pop push es dec xor mov nop cmp push mov test int sarl mov repz mov insb mov cld pop pop sbb test xchg sub lods out nop test mov scas pop jnp dec mov icebp repz loop lock test repnz data16 xchg xchg sub imulb jecxz add enter pop xchg xchg push stos ret loopne xlat in stc adc cmpsb or imul loope adc pop pop mov cld mov and mov dec mov test test fs mov or outsb mov sbb pusha jecxz xchg pop in insb (bad) incb xor loope mov jge arpl xchg fistpl outsl pusha cmc mov mov mov sub fsubrl jl mov std pushf pop scas lea add mov pop inc or jle and bound pop imul lods daa mov adc lret mov (bad) (bad) sub mov cmp push pop aad frstor repz ds fisubr xor clc out imul in add cmp lods mov inc jns sub mov sub outsb mov xor test cmpsl push ljmp sub fs xor mov and lahf fs arpl test pop mov push daa pop and test xchg scas mov jno adc and fnstenv bound xchg xchg lods sbb push inc movsb mov or jns and jne xchg repz sub scas sub cmp cmp sarb bound (bad) sub dec icebp lahf or cltd jns xor pop ret iret jg mov inc or cltd out cmp push and dec lret pusha pop sbb js repz jbe lcall jp mov repz ret iret jmp mov popl fbld insl sarl fwait xor jno in or das adc push xchg in aas mov cwtl and jbe sub mov adc fidivl ret cmpsl inc push dec cmc jb xchg imulb or cwtl mov shr test aaa cli and in inc hlt xor cli loope sbb xrelease in js cmp scas movsb or loope mov adc push bswap hlt testl jl jnp push or add add sub fisttpll repnz mov dec (bad) adc ljmp ds push aam cmp lret ljmp pop mov in into cmc mov lods mov clc adc cmpsb in dec mov push pop mov dec aaa adc dec cwtl adc int push and imul mov je pop cli rolb jp dec repnz jbe dec cld or mov cli sub and es dec sub (bad) lret cmp xchg ja or jmp outsb sub and mov mov sub movsb push mov xor lret sar push std lods mov es sbb xor fcompl (bad) or and xor or mov xor add sub push jo or mov and dec push cmpsl xchg aaa and lods mov dec sahf out les push push test sbb pop push cld cmp lods aad mov push xchg push inc fwait icebp shll push aas (bad) mov aam test cli mov (bad) mov dec xchg sub pusha shl xchg sbb push pop insl inc mov inc addr16 add loop inc cmp in pop inc js jo cs add lcall sahf imul aam mov aam stos stc cwtl xchg aad xor rcll pop push (bad) cmp push jmp shrb mov push cld inc lahf js add sti loopne cmp jmp mov (bad) cld les imul lcall dec xor pop pop mov cmp (bad) aas out pop cmpsb loope lcall ret mov xchg and mov dec inc rcll pop daa mov sub xchg inc xchg cli inc out and arpl jp mov jecxz xor insl frstor adc cmp gs pop in pop out clc out outsb test sub rolb dec out clc loope jb jmp xor dec clts pushf (bad) mov or push sbb xor or cli lcall jae popf insb sar lcall add stos mov test insb or ds jp ss (bad) jns insl imul cmp sbb mov push sub mov aam push flds ficoml daa (bad) cmp xchg int3 sbb sbb inc setge inc enter mov push sub insl movsl sarb aas lret and arpl inc subl addr16 sub and fnstcw cmp push push cwtl int3 dec or add push arpl into adc xchg pop cmp leave (bad) and sub inc xchg or std sti outsl in sbb jno aas gs jp aam (bad) fwait imul inc xchg mov mov lret dec aas or mov mov fsubr outsl (bad) jno sub iret andl sub lods scas pop mov and push (bad) fnstcw nop inc add sbb push test xchg cmp es fsubrs test test mov mov xchg mov adc icebp cmc add cmp mov enter testl jb xor rcll push rorb ds nop lret cmpsb je daa pop and or sbb cld test addb add sti dec cmp loopne pusha sub push mov xor imul jmp loop arpl and sub or and (bad) loop jo lahf std dec mov xchg mov pop dec sbb int xchg repnz ds sub arpl xor sub xor xor mov add sub call loopne,pn pop test pop sub scas inc sets lret out repnz fs jle aas movsb add call insl fstps (bad) jbe fadds or sbb test stc stc pop and xorb in sub aas outsb stos xchg cmp mov psllq js pushf jnp imul pop jge add mov inc jo dec jg stos xchg jge jp dec or das lock mov push mov and stos xchg pop and push inc addr16 xchg lods inc or imul ljmp sub lret pop sbb int3 gs xchg (bad) push (bad) pop imul add jns sbb and aaa inc push cltd dec xor xor pop repz (bad) sarl dec clc lds push sub xchg ds jp add cmp (bad) in insb fisttpl mov mov push (bad) mov stos loop bound (bad) in push pop fimul and icebp frndint sub inc loope mov cmp pop and leave mov push cmp xchg push out and xor jns sbb int lea mov stos inc rdmsr xchg test lods ljmp mov or mov nopl aas idivb push xor (bad) movl ljmp (bad) fwait push rorl or push xchg add ss xor mov fwait mov sti xor jo inc or pop sub data16 add sub rolb pusha cmp test inc push das les sub cmpsb xchg mov xorb and jmp dec test jp xor xchg jge je push adc dec ret psubw xor ret dec mov jmp stos pusha cmp xor in adc lret cmp ds pop (bad) outsb sbb out xlat in adc or lods (bad) jbe add mov scas mov dec dec dec jmp outsl mov adc pop in lea mov xchg outsl xor jbe add cmp jo stc dec std test push sub aas cli pop dec add lahf mov mov aas dec sub push and push jns dec mov jnp mov add nop mov pop jbe clc mov xchg xchg sub test inc loopne inc loopne and cmpsl movsl out or jl mov js ret sbb and jno roll jecxz or data16 mov loope icebp and in inc loop (bad) daa mov outsb inc cld sub xchg jo and fdivrs inc fcoms in pushf xchg imul addr16 rcrl mov sub xchg mov fidiv xchg mov fldl repnz mov or fwait mov or pop jg in adc xor jnp pusha xchg rclb daa test sbb pop leave iret mov (bad) push imul mov ficompl pop and enter push or push cmp inc mov (bad) in xor rcrl mov mov push push pusha pushf aam mov fnstcw leave mov jnp cmpsl push mov fwait pop xor push or lret lea xchg jb,pn sbb mov (bad) pop (bad) and pop adc or sub movsl pop mov out cmpsl and lods add push pop and adc or mov mov in sahf jb outsb xchg arpl jne xchg jbe ja lods fmul mov icebp test in sub stos inc hlt sti push add fistpl (bad) cmp icebp (bad) enter and and (bad) fbstp (bad) sbb imul and insl jno repz dec xlat pop fimul jne je ret or loope psadbw out fs sub daa sahf nop ja push mov repnz or adc and xor dec scas aam (bad) out push xchg (bad) sbb call ss out jne insl xor (bad) jb shrl rorb insl xchg inc pop mov (bad) (bad) pop mov popf cmp or das out call and aam inc out xor (bad) dec arpl sbb dec in mov xor jb ja incb or xchg jge (bad) es addr16 call sbb mov xchg jnp mov mov xchg jno bnd adc (bad) lret xchg xchg or movsb or repnz stos xor xchg dec (bad) mov jno lret out mov pop stc ds (bad) shrb mov and (bad) stc mov (bad) xchg jae dec mov or fwait or pop xchg or inc scas pop mov jno (bad) lock into loop pop mov and or in dec aaa roll mov add aad call jmp inc fwait cmp ljmp leave xchg js cmpsb lret fidiv aam addl lahf gs in (bad) or fwait mov outsl cbtw fwait xchg sub scas pop inc shlb lret arpl adc xchg mov fsubrl xor imul lret sar inc cmp movsl (bad) or pop xchg movsb rcrb cmpsl test dec and sbb rcrl and adc cmpsb roll loope jne shrl js scas out push adc adc out mov (bad) xorl mov out in mov cmpsb int dec dec cli test popa sub dec fstpl stos fidivrl lahf aaa and das or loopne data16 push xchg cmp mov bound gs and rorb adc push inc push cmp cwtl subl test fidivl sub and pop xchg cmpl (bad) not stos daa push inc lods arpl xchg pop pushf pop or nop sub cwtl rorl lahf (bad) ja test push xchg dec adc arpl and ds hlt out jo fsubrs add sti dec mov mov ja scas mov adc mov jmp rcll jmp pop movsb or icebp cmpsl push loopne into (bad) mov pop lcall (bad) decl mov mov jae mov fstps stos nop sarl cld and flds out jle add inc xlat jl dec sbbl inc loopne idivb ss sub rcll ret mov out stos pushf add jp lahf jmp and mov std (bad) imul xchg lea data16 dec insl sti or cmp sbb pop popa and mov xchg sbb mov clc mov mov push jecxz sahf ss iret mov and push mov rorb push aaa mov (bad) mov mov jle (bad) xor popa sub adc push mov lcallw adc loope jecxz mov pop inc sub mov stc add scas cmp sub dec mov xor test push mov out xlat pusha (bad) or cmp xchg jg sbbb aaa andl loope xor lea pop add mov xlat inc dec fs (bad) fwait mov pop movsb scas mov add insb mov dec xor xor test popa adc jne jb out lods insl mov mov jp mov mov xchg inc ss rcll sub xchg call fist ret adc cli jecxz cmpsb iret or out js jne js and sub int3 arpl dec sbb in (bad) icebp popa gs jae lods pop std (bad) inc ds addr16 pop (bad) jb cmp xor lods push pop lcall xor mov jb push jne jno (bad) (bad) addb mov mov xor cmp icebp sahf jnp add sub cmpsb cmp js jno inc cmp sbb mov mov insl push push idivl movsb xlat bound pop jg lods out cmp push rcl or xor cmpsl xchg stos push cld gs mov test addr16 insb xor mov sahf subb cmp add xchg sub aad pop mov dec mov cld and enter xchg mov cld stos lods mov sub loopne (bad) lock lahf xchg aaa movsl inc ljmp jbe mov cmpsb xlat leave sbb push sbb cwtl dec mov push js,pn in (bad) mov mull mov dec loope roll and sbb mov sub cli jge sbb insl ja mov orb jl cmp mov mov pushf std (bad) push push leave ret cmp or stos mov cmp add adc sub jge jge push cli enter pop jp cmovl fsubrl adc pop adc adc add clc dec andl mov ljmp push cmp mov pop test cmp push neg lds cmc dec jo add out clc ja push and inc jp adc std repz inc gs inc outsl insb (bad) fadds xlat int3 js arpl scas insb ds fstl sti and push push nop cmp fldt cltd mov shr lahf or imul xchg and dec (bad) movsb (bad) repz adc sbb insb mov mov and xchg aad loop in jmp fidivrl lds xchg and adc mov pop (bad) mov jno leave sti mov sub and mov inc dec push or dec xorl xor mov xor data16 push fistpl stc pop mov lds nop lahf outsl lret jp xchg lret dec xor jne out jbe ljmp roll or pop or (bad) jne repz push sbb xor jg cmp popf cwtl rol (bad) push push (bad) int gs xor (bad) out lds sbb repnz mov jo in add dec cmp and sti je add inc es dec xchg mov push cmp in pop xchg inc add roll fcompl lods fistl jbe les mov sub mov cltd aam add lcall pusha std sahf sti pop push cs shll pop movsl or mov loopne lds insl mov dec mov mov push push or inc mov fidivl push xchg fiaddl test sbb loope scas iret aas sbb cvtss2sd ror mov and adc jb lds nop (bad) xor dec enter push rclb mov fimul fwait repz pop inc jle and mov daa aad dec xor loop icebp popw (bad) and test push js nop push shl inc aaa mov mov push mov sub (bad) jae lret dec popa add outsb sub sub adc jg fnsave es xor sbb pop inc push pop ds cmpsb pop lea lahf shrl into nop pop jg xchg stc dec sbb mov mov mov (bad) jno cmp fistpll test lret sub cwtl fstpt and shrl mov sarb (bad) enter jmp cwtl inc ret jle movsl fnstenv loopne or pop not ret add push and xchg lock daa or les movsb mov cld in (bad) jae push mov (bad) (bad) adc sbb insl lahf inc mov and lods mov inc mov (bad) jne std fwait int (bad) xchg pushf ss mov mov adc dec sbb lock les dec aaa movsl cmp fdivs std mov dec je xor mov push ja (bad) adc cwtl inc jmp je cmpsl gs out cmpsl leave xor lahf mov sub cmpsb pop fwait xchg icebp scas aad (bad) lods jne jnp push xor loopne fmuls push cmc and add aas (bad) scas leave inc fstpl test outsb inc addl pop inc cmp xchg adc loope cld loope inc orb sub mov scas xor lds lock mov pop in and pushw dec and push cwtl das add inc in loopne call pop sbb ficoml outsb popa clc dec push popf xor (bad) int and cmpl sub xchg xor pop decb test pop sbb sbb ret inc push nop outsl mov mov das clc cli cltd or mov arpl xchg arpl js xchg push or or mov std loop add add scas js pop test sbb sub cmpsl gs lock fwait and push rcrb push test rclb dec jmp sti mul mov daa int pop mov inc fistl pop and cmpsb lds xchg mov and mov stc sub lds ror out pop es sbb out (bad) mov test lods pushf mov push jae inc arpl jp repz stos and in fucomi lock pop pop outsb mov sbb jne in xor scas pushf rcrl mov stc dec adc inc jecxz sub xchg into cmp mov ror and jae pop fnsave fs lods subb mov jb js fwait hlt fistl push fiadd sbb data16 dec cmp inc xor scas jle xor dec jge repz lret mov jo pop insl mov ljmp or xor scas jbe je adc (bad) adc aaa pop mov jg pop sti lds mov push inc jo inc push cmp and inc mov pop test repz clc nop clc push push add mov dec bound xchg mov push pop leave adc mov and xor push sub js in xchg cltd outsb aaa mov mov out jl xchg aas cmp add or ljmp test movsb pop stc (bad) pop mov (bad) stos inc sub mov jbe dec xchg xor and lea pop sub lock test les jo ljmp in mov ss in dec or dec movsl adc ds repz mov inc (bad) pop (bad) jne in adc cmpl mov and lret or add jmp pop ljmp imul dec out in sub fcomi pop dec sub scas pop xor lret enter push push movsl (bad) or adcl adc sbb std xor sahf lret addl stos jle cli je push jae scas fbstp mov leave rorb (bad) push out jne movsl leave arpl clc out mov mov stos inc addr16 cmpsl jb data16 push adc andl inc cltd cmp push mov jo push mov daa dec sbb (bad) cmp test pop lret xchg popa imul dec pop incb jp fstpt lahf leave adc lea pop and or in test out loop sbb mov adcl mov loope mov pop or int3 lret sbb mov sub fildll (bad) (bad) push and shlb in les (bad) xor scas push clc mov add jo mov shrl lcall shr push test mov mov mov adc mov and mov sahf dec ljmp nop inc mov insb dec jo or out mov xchg fmul cli in shrb outsb repz push insb sahf sbb bound sti add xchg (bad) and movsb repz (bad) add add push jbe xchg std sbb ret mov mov pop jne es pop out xchg enter mov cmpl mov cmpb xchg push mov jno xor mov test insb mov es clc lock and jno mov sar cmp les sbb xlat xchg pop lret (bad) xchg jg rclb inc mov add dec test adc push mov test mov das clc pop push rclb adc adc or in das xor xchg sub adc test les imul jne cmpsb mov pop jmp pop pop cmp adcl lahf push mov jbe dec cld mov mov das xchg notl out mov mov sarb cmp lock dec mov mov dec sahf jno sbb and push inc push ja adc pop and mov aad sbb mov xchg push rcrl test stc push (bad) repz inc pop addb and push jno jbe int3 and jnp dec cmp test push notb mov mov outsl frstor negb adc xchg or sub or fisubrl jg push add xchg repz leave test xchg pop cli mov notl cmpsb push daa divl (bad) or repnz xor mov sti xorl popa pop xlat loopne movsl mov (bad) cmc sub je sub jg lds jmp jne popa clc lds (bad) sti jg hlt (bad) jmp mov cmp insl pop xchg jmp imul clc es int sbb fs out mov std xchg (bad) jmp cwtl (bad) jbe mov cwtl mov aas lahf clc push and xor pop xor sub sub push test xchg int3 mov sbb (bad) jge int3 jae xor popa out fnstcw sahf jb icebp (bad) mov adc int3 test in adc insl inc add push adc and movsl adc lret mov fdiv rcrl xor je xchg mov fsubrp xchg jge dec fnstcw dec mov inc mov fcmovnu scas (bad) mov pop negl ret inc dec sub aad in in pusha shl push jle ficomp add push dec ret jbe int3 cli push and jle leave and std sub outsl mov ret (bad) xchg dec and outsb in sub das and inc frstor sbb scas imull fs in nop arpl in cli xchg pop mov mov jae idivb mov sbb lds sub sbb fsubrl cmp push or repz lock mov ds sarb lahf xor aas lea mov cmc inc dec jle sub je jl or lea push lds cmp cmpsl movsl std pop sahf dec rclb jnp nop and lods ds sbb mov mov sbb inc mov sbb add in loope dec mov popf xchg mov jo jle cwtl dec movsb in fcomps adc das rolb (bad) xchg (bad) ljmpw movsb imul add mov add sub jle cli pop cmc leave ret and idivb dec push and cmp es sub cmpsb arpl jno iret mov or cmp lcall ja xchg dec xor push fmuls inc ja sbb icebp int3 inc push cmp jb inc jbe enter cltd imul (bad) rcr call nop fwait jg stos jg xor popf dec add pop fwait xchg loopne xor loope fcmovnu or mov dec and lods lcall ret icebp repnz adc jp je outsb push or push loop notl out xchg inc decb or pop (bad) xlat ja push fs push (bad) lds addr16 cmp mov add mov out xor flds jg (bad) std adc lret fs stc outsb sbb lret lds sub dec xlat rcrl mov fcmovb in ja pop inc fldl jae xor add outsl xor (bad) in push push jmp mov (bad) ja mov push add int xchg adc or mov mov insb stos jne,pt pusha sbb (bad) dec cwtl jmp mov cld inc sub mov repz inc mov and (bad) cs scas push cld inc xchg es jo (bad) mov negb movsb jbe sti dec xchg leave fs or lea aam mov fwait jle loop outsb mov enter xor sub aam aaa insb negb jno push jbe dec jle jmp in or inc (bad) fs cs pop pushf cmp jnp int3 out pop ficoml jmp xor repz pop jno dec out pop movsl pop (bad) xchg pop lods sub pop jbe or loope lret mov stos nop mov insl sub repnz or rclb mov or sbb mov sub xchg lahf dec mov mov call jne aam ja (bad) dec add push push (bad) pop push outsl xor arpl arpl mulb or lods leave pop sarl jg xchg xor int3 loopne ret sbb rolb pushf roll out in push pop movsl sahf jno dec lods aam push jbe enter roll ret push add add clc push jae fmuls cmp int3 (bad) roll lcall fldlg2 or jno mov jmp pushl insl and pushf scas pop mov fmuls test mov pop sahf mov (bad) mov cmp mov aas subb sbbl xchg ficom add mov addr16 xor and mov mov sub out loope push mov jmp movsl mov data16 nop sub dec in test cmp inc push adc (bad) div pop xchg add addr16 stos or adc popa cmp in inc jle movsb sub lock mov push fsubrl push and xchg jp mov cmp mov cmp push loope lods push mov incl mov fisubr test xor jnp or xor xor popf (bad) dec in ljmp mov jnp add test into push sahf jb adc imul xor icebp int pop or stc push test fimull ret insb mov xchg adc push or fnop repnz mov mov push pop mov or and dec hlt xor mov dec jnp insb lods xlat cmpsb fcomps xor in mov icebp aad sub mov and fldenv mov push jbe dec mulb push aad out std jbe repz or mov outsl enter aad push mov pop adc xchg mov inc lahf test cmp inc cmpsl inc ds mov cmpsl adc pop insl push loopne inc push shrl leave cmpsl mov sbb std ja ret lcall in ret lcall fmul pop test sub ret mov cwtl bound push inc mov mov or shrb mov dec aas jl sbb (bad) xlat add gs mov cmp ds cmp sbb movsl sbb push (bad) leave outsl mov popa jae stos push test inc loope,pt out inc nop inc std loop adc (bad) or lahf push xor stos js push ucomiss roll pop cmp aaa lea cmp jbe push stos aas testl movsb addb rol or mov pop pusha inc push clc scas inc pop sbb push jge adc xor (bad) push mov push mov fimul mov std lea pop fs sbb repz sub xchg sbb inc mov es and jg push pop xchg inc je cmp lret sub mov outsb inc inc ss les repz dec jecxz jno mov out cmovno lock je lds xchg inc test xchg test fwait into stos ss cli imul inc adc lods push lahf (bad) in push outsb rcr int3 mov movsl xor outsl or leave xchg xchg jo lahf das ret jbe bound call shll rcll rorb loope dec lahf push jb rorl bound or in jmp popf dec fdivrl ficoml hlt aad ficomp (bad) ja cltd gs dec add cs dec cmpb repnz out aad push xor and jbe push aas mov sysenter outsb jb mov (bad) sbb inc cmp push aad (bad) cmp pusha jno lods (bad) xor push movsw repnz movsb not add scas push xor push (bad) cmp int mov and sbb in add and testb inc jmp pop ljmp push je xor cmp hlt (bad) push mov push pop xchg das out pop out and cwtl ficomp aaa dec push xor xchg cld jp lods mov dec pop cwtl or stos lods add pop scas popa pop add sbb jmp movsb into lahf aas ret arpl dec mov test xchg leave mov stc cmpsl and xchg sub pop sbb and xchg xor rorb and cltd add xor jg loope and pop jns cmp (bad) lcall bound fsubs push inc sbb pop sbb xor (bad) dec loope cli jae or sahf daa dec aam icebp mov xor sti scas or push sahf mov pusha call cmpsb push stc popa push inc lock inc sbb pop push movl dec test ja inc cmp pop cmp adc imul jge mov xchg push rcl xchg decl outsl enter and mov inc sub pop dec and fist stos add pushf mov cld jns in adc (bad) gs push negb mov lods (bad) cmpsw push ret push gs inc pop ret lret lods sahf xchg pop cmp ds lahf push cltd adc inc in xchg in pop cli add mov arpl mov add repz mov aaa (bad) xlat cwtl imul lahf xor jns mov mov leave sub daa in mov cmpsb xchg adc sub xor sub and (bad) ja cld aaa dec xor sarb enter dec jmp in lds dec and or shrl outsl dec sub mov (bad) stc sbb jl gs loope sbb ret test pop jae ds pushw xchg mov lods std and test adc ret das (bad) aas repnz (bad) xor xor movsl and dec pop adc ss aad out pop stos ds insl pop push js mov ljmp cmp ja (bad) icebp nop jl sbbl jbe xchg movb add insl dec adc xor xchg mov stc lods push js pushf out cmp sarl outsl ret mov lock mov push mov cltd hlt out xor or loop cmp mov lret mov mov mov jl js out into lret xchg xchg sub ljmp jl jb mov pop fldl ja movsl ror dec fildl movsl out dec (bad) jb push sbb out in cmpl aaa addl dec dec mov xchg js and stos cmp or sub sub inc xchg mov push ss movsb xchg testl in jae xor mov cmp icebp push jne daa mov mov icebp (bad) adc sbb sbb sarl mov adc xchg movsl mov fcompl stc imul iret fadds cwtl (bad) int3 rolb xor pop (bad) dec pop dec jb cld sti (bad) loop or jb dec scas cmp leave pop and es in and je sgdtl popa and pop ret adc clc lods or inc mov mov lcall out outsb hlt and sub jl mov or lods sbb sub jns in xor mov mov ret sub sub pop and add sbb push (bad) inc insl sbb pop sbb push rcrl and sbb stc mov jle in mov push sbb xchg jae cmp imul fidivl sbb fnsave push aam and cmp mov inc cmp cld or jno dec fs (bad) adc mov mov lods scas fistpll mov mov repnz lcall xchg (bad) xor push xor adc icebp push int push out cmp mov aad lret test xorb add lret aas ror mov call aad adc fisttpll dec fs leave push jbe xchg dec mov add out dec inc movsb pop push xor push mov iret lret or je rorb inc lea ret xor mov mov in jbe inc andb and mov lock (bad) clc mov pop jge outsb (bad) or xchg cmp mov repz scas cmp xor lods out sub xor adc gs lret scas rol cs sti mov add fwait jne jg or sbb xchg push scas cmp in jp pop adc cmpsl fdivrl add inc mov mov add inc in in test stos pushf push (bad) dec (bad) mov iret xlat and adc das dec mov xchg clc out das ljmp scas mov mov jne lds xchg lahf push mov xchg dec sti fwait movsb aas fs pushf aaa jnp inc jbe test stos dec lahf pop sub (bad) mov inc arpl out pusha cmp xchg sub das or mov iret mov mov xor fdivl push js outsl pop test out dec mov test mov push clc ss xchg and jne scas fcmovu lods and jae push icebp push push in shr push jno stos push loop das movsl sahf xchg pop and ficoml xchg sub roll call jne stc in sub dec les aaa cmpsb out ljmp stos xor rcrl xchg push lahf sub aas push cmp sbb addr16 sbb mov adc pop repnz mov jp dec out mov mov mov jmp xchg xchg fisttp push xor lods jne xchg mov in xchg jmp xlat cmpb cmp xchg in mov lods cld nop loop or jecxz das addb sti dec test jb fwait arpl jmp pop pop sub mov insl outsb hlt pusha imul or jge pop cli xchg sbbl das mov mov mov in push xlat or int3 fnstcw loop inc jmp cmp pusha insl push addl mov (bad) dec (bad) xchg cmp inc dec inc test insl xlat add or ret loop and rcr sub int dec push stc and outsb pop in aad bt sbb hlt mov xor (bad) into inc jecxz jae hlt push sub sbb bound xchg lret loop adc push shlb xor ret (bad) andl lock jne sub push dec jae sti push movsb mov mov movsl xor xor inc icebp xchg popf fwait push enter divl (bad) es mov ret arpl dec push mov daa bound lcall sub mov inc movsl loopne pop scas dec aam pusha into sbb push arpl adc and cmp fidivrl lret in mov loop xchg mov in clc aas addr16 arpl ds mov fucomi adc push push push cltd xchg cmp dec ljmp or sbb push loop sub mov in xchg out int mov sub sbb sbb outsl sub jmp test stos aad fs or cs fcmove jge xlat lods rcrl cmp and sub int3 add (bad) test aam adcl clc scas mov insl adc push std add or enter jno in jno das dec or mov ds fs pop movsl in rorl ret mov daa std xor fstpl les repnz loopne inc das jae fistpll out xor cmc pop stc push push inc repnz imul mov or movsl xor sbb adc sbb mov inc cwtl (bad) lock push mov fwait aam inc sub lea sbb mov scas insl inc fbld push cli cs (bad) mov pop push pop adc enter add enter push mov dec test rcrl pop cmp data16 push idiv mov out push (bad) xor xchg enter int3 or dec lods ljmp sbb lret (bad) fadd nop (bad) fstl adc sub shr out ss cmp dec fwait and in sbb mov js and jno popa jg pop push pop cltd sbb cltd mov loope push inc mov push out xchg imul and mov (bad) outsl std or lods xchg lahf mov mov stos lret fcmovu add adcb xorl adc or inc sub mov fisubrl fdivl roll dec arpl jp shll call pop arpl vmptrst jmp mov pop cmp mov rcrl sbb fdivs dec inc lret fs and add cltd cmpb stos lcall adc xlat sbb hlt mov jb and loope xchg push leave mov mov cwtl lret clc movsb imul adc mov mov fwait jecxz xor ss jmp ja rcrl movsb jmp or adc xchg pop push mov ja jge dec call inc fbstp cli jne mov cmp push or push (bad) sub xchg cmc push xor cmc mov xor loope mov idivb xor add mov sahf frstor test mov and jp sbb div mov movsb cmp andl adc rol pushf inc iret lock cmp adc ret pop adc std cmp mov mov fnstcw xchg vandnps add fstl movsb clc sbb adc es dec rorb ljmp dec notb jge push jecxz gs cmp in mov jne mov mov icebp fcomp iret lods loop in cmp subl jle loope sbbl xor cmp in mov and or jne hlt mov pop addr16 ss sub pop jnp sti xchg dec sbb push dec out rolb and lea fildl test inc or adc adc rolb xchg imul fdiv push mov xor fsubl sbb sahf inc cwtl andb loop fiadd lods pop std outsb hlt mov fcmovu push add or data16 addl loope adc stos push inc ficompl push push ss enter popf add sbb sub movsb lods cmp push add adc mov out mov jmp cmp cmp pop push cmc xor mov jmp or outsb jl,pt aam shrl jo sarb aas shll std push das test and sub xor push push loop jecxz (bad) (bad) mov or fwait dec pop lods clc mov cld in test mov lret xor cwtl dec and cmc std sti test push int3 pop add mov pop shr sub icebp push xchg cmpsb ljmp lea push mov fwait lcall aam movsl fs xchg int scas aad lods loopne and (bad) lock pop adc out lds pop test add test sub pop push rcrl adc jle xchg scas imul jg jg adc repz ret les and fbld lods nop and mov jg mov add test js out jmp std push scas sbb add outsb adc pop sti inc push sbb fisubrl sub push in (bad) cld ljmp push shrl sub push clc jmp pop mov pop je pushf push sub pop out and mov adc mov mov jmp mov (bad) and fidivl imul rolb fcomps adc mull or and jns push stos pusha mov outsb cmp sub iret test cmp out xor mov xchg or jo mov iret out loopne sbb (bad) cmc or push or xchg mov mov dec out cmc or lahf (bad) fwait movsb and sbb in std out mov pusha call aas dec aas imul leave dec fcomps mov testl adc jmp movsb fwait lds outsl loopne out shl shrb xlat sbb jnp sub (bad) rcrb mov pusha (bad) (bad) jp icebp pushf lea xor xchg or lods gs enter dec out or add int3 addl sub lock and push (bad) mov out cmp mov or out mov cmp inc sbb mov jmp push outsl adc adc push jl dec xchg ljmp insb push shrb cli mov and sbb fstl movsb ds adc icebp and sbb leave fsubr outsb addr16 je aaa mov aad push mov sub xchg cmp jne and test add dec sbb test mov aam incl js add pop lds test stos pop das (bad) jl imul add lock pop and ds (bad) mov out in fisttp jmp icebp mov cs mov xchg sub sbb repnz push stos insl mov inc movsl (bad) out sti lds enter out add std daa add jg scas stos mov lock lahf je sub push add cmp sarb cmp dec lahf push xchg aam and sub adc or and jp sbb pop mov leave addr16 cmp lea inc movsb mov dec pop sbb or jne in pusha or inc adc push push add cmpsb addr16 lods icebp inc fistpl lods mov sbb outsb mov imulb sbb ds insb pusha nop pusha into cmp adc push outsb in push dec and add shlb (bad) adc int int3 icebp adc mov (bad) push repnz xchg mov jns popa jno cs loopne cmpl cmp xorb int3 and mov out icebp in inc sbb ja subl xchg add aas push arpl jl sahf jns push into push mov popa xor xchg rcrb inc dec scas scas sub cmp xadd inc icebp rcrl mov jp (bad) decl arpl mov outsb aaa mov or idivl cld add fimull pop jmp sbb dec repz inc rcrb dec pop imul push movsl inc adc loopne add mov mov dec sbb sbb or lods or outsb dec sbb pop in mov mov testl lret lahf lods sbb addl xor and test sub repz clc sbb insb jp and xchg mov int adc leave and mov rcr inc cmpsb push xchg ja imul xor mov (bad) in xchg xchg gs mov cmp je lcall popf add std (bad) iret (bad) xor dec jns jae aad out int3 xor sub idivb or imul jmp xchg adc xor jnp xor jbe rol lahf cwtl xchg push xor adc sub popf mov test add dec cld lea add xchg mov repnz in sti sub in xchg push jecxz cmpsb push int sub call aaa mov loope adc xor adc test xlat xlat xchg testl sarl les mov cli mov dec sub les or addr16 lret rcrl pushf cmp cmp nop jnp and (bad) cmp mov add lds push mov lea fs shrb dec lret mov cmp push movsl (bad) shrb xor sarl dec clc (bad) cltd out mov inc ds ds xchg pusha shrb mov pop gs push pop idiv sbb push cmp sbb inc mov arpl imul mov iret (bad) testl inc outsl mov xchg mov xor mov cmc inc cmp push and clc test add jae dec test push pushf sub cmp leave bound bound or dec pop ss mov decl mov jno insb stos outsb fchs les push push scas sbb pop mov insb jmp pop int push adc mov or fidivr mov dec shrl outsl mov icebp out ror dec push sub inc (bad) hlt (bad) fisubr cs push and hlt cmp (bad) and sbbl dec mov sbb dec and das mov xor push (bad) popf movsl jb mov mov loop fcoms in xor adc icebp test inc cmp adc and pop sbb test pop mov test xchg into pop pop pop (bad) xor out mov aas adc insb cmp xchg dec out test (bad) mov push push jle (bad) fiadd pop call mov cli xchg cmpb inc xor ja fucomip mov dec jns jmp cmpsb lea lods ljmp lods sbb cmp test inc out cmp add add ljmp or movsl sahf dec jo sbb popf (bad) add add (bad) or lret in pop lahf pop cmp daa icebp dec lds inc push jl fcoms testb mov sbb pushf imul adc jne mov adc mov ds into dec push mov imul sub push insl in sub (bad) stos xabort stos sbb nop mov xchg xor mov jns pop pop imul mov jge sbb js sbb inc cs xchg lretw (bad) push movsb push jl mov pop call xchg adc push xchg sub sbb mov adc int3 lock cmp xchg lret mov adc dec int3 negl and jnp jmp and xchg enter dec fildll in mov sbb leave pop into cmp das lahf push adc (bad) dec push rol aas aam cmp xchg (bad) bound inc lods repnz or aad into imul dec aas scas negb mov cmp bnd mov xor jmp in cmpsl outsl and push lret push imul mov cmc sbb push xor scas or lcall push imul popf test addr16 ds cmp dec push xchg pop sub mov or lods pop add jb rcr pop fucomi ja add xchg adc sub cli cmp adc or popa stc pop push subb (bad) js nop shrb mov or repnz leave out pop xor push push and aas mov mov or inc cmp push push pop sbb xorl push sar xor les cmp nop ljmp or out mov popa mov dec loop mov int adc push jnp sbb xchg dec in and push jg rcl jns pop jae cmp int3 sbb (bad) aam inc fnstcw push pop sbb fldl sub inc pop loope inc cs scas sbb enter (bad) (bad) sbb shl mov aaa mov ss sbbb ficom lock cmp aaa jle pusha test out dec in gs inc jns icebp scas hlt xor mov lret or std bndstx push mov (bad) nop push mov push adc shll ret push outsb movsb mov and (bad) aam push aaa cmp xor jmp in das mov rcl pop inc xchg outsl jl cmpsb in or iret scas ds out sbb loope ja adc mov iret (bad) mov mov fistp dec jae repz adc mov lret jne (bad) fdivl sbb xor add insl dec xor int3 xor sub popf scas lea imul sbb cmp mov adc xchg mov lret cltd sar loop lock test sti xchg inc dec leave jp out pop inc push mov jge pusha xor lods push mov sarl jecxz addl cmp lds sbb xchg fildll mov jl (bad) cmpsb scas mov icebp lea test call mov adc jmp mov push aad or pushf mov mov in or (bad) sar cmpsl inc stc sar stos mov dec lods (bad) jmp dec cmc imul mov mov clc test and sub movsl and or add test icebp adc xlat pop and inc and push adc jg sbb mov xor int outsb loop inc iret sbb es stos sub or sub nop lret test cmp adc ds lret jae sbb mov mov push mov mov rorb aam test test and jge,pn into jl jge xadd xlat stos inc loope sbb lcall pop nop ljmp mov addl or inc sbb dec outsl pop inc add fistl cmpb add movsl lds jge pop mov push negl repz addl jbe fwait add (bad) cmpsb xchg popa mov enter xchg icebp mov push scas xlat imull add mov scas inc cmc decb xor pop nop rcrb rorl js dec pop add mov (bad) mov mov jl jne sub or add mov push insl sub hlt fsubl dec mov gs ljmp aas dec fcompl inc or arpl cld adcl xchg jp mov popa fcomps js sub mov add (bad) xchg adc dec fimull xchg (bad) sar mov push int (bad) adc sub in jmp scas or and out pop pop mov push lea push lods test sahf jns nop push xlat rclb or movsb daa xor outsl pop pop (bad) push inc inc inc dec movsl push cmp ror lds ljmp and push (bad) das fcompl mov cwtl sarl std xor push add push ds add dec push enter jecxz gs jp pop fxch sbb sahf icebp lds push dec cmp xchg push cmp out and test push jns mov cmp xchg repz (bad) adcl pop icebp icebp fisttpl pop scas cmpsb pop and out cltd daa das xchg lock sar hlt frstor pop sub jnp enter (bad) mov xchg fcmovnb pushf or sub pop rol inc pop std in loopne lea mov enter rolb mov nop mov (bad) out fiadd aaa nop in cmp fisub adc xchg fcmove inc cmpsl sahf xor sbb jnp pop dec aas shr dec and push inc dec cmpl sahf jns int gs shlb xchg test sub ficomp xchg fmuls add jp or sbb mov test gs enter idivb xor je mov rorl xchg popl jle push outsl aaa sub xor fbstp jg mov dec addl jmp mov out in cs xchg mov adc push xor movsl fs lods add cmp sbb addr16 ret xchg push push jmp dec mov and mov es pop mov stc int3 push mov push fmull and popf mov cmp cmp inc mov je inc adc xor fwait and add dec mov mov test roll les pop or inc push push lods sbb fldt std sbb sub pop add sarl jge ss imul mov test popa xchg cmp sbb push (bad) mov pushf iret cmpl insb enter xchg mov adc sbb test aas test pop insl jo jmp and loopne imul cmpsl dec jne sbb pop xor dec cmovs jae jp (bad) js dec call call sub pop ret inc adc aam cmp imul lock cmp mov outsl idivb add sub dec push movsl add mov xor xchg pop xor fwait push sub movsl and push mov mov pop jb push mov add out sbb and mov mov inc popf adc mov push and les aad inc stos jl inc std les fisttpl loopne loop mov ja adc sbbl mov xor jge push mov dec out loope test pop notb push in mov lret inc mov pop lods adcb ficom outsb xor xor fdivrp (bad) pop add dec pop test or out adc and ja xchg add inc push cmp cmp pop add adc push fs out dec leave add xchg lods sarl cmp or (bad) mov inc jae ficomp fsin movsl jo mov pop and and push in fildll add jecxz push icebp jp xlat mov mov clc mov ret add and popf adc pop sub xor or mov fmuls push les loope push xchg divl xchg in out ds xchg mov mov sbb mov clc jo in xchg out stos add imul and cs aam mov mov ja stos adc cmc cmp daa or or ret loop fisttp (bad) imul ret (bad) cmp int fwait jo dec mov dec int3 sub int rcrl negl repnz add cmp outsb jo lds push jns inc mov nop ja cmp cmp dec push adc clc or mov out and or js dec adc movsb loope cmp jle mov jo out out lahf stos loope jp xchg inc or shl ret fbstp scas add mov notl mov mov adc sarl enter sub add mov xchg push pop fsubrs lods jbe popf repz xchg sbb scas xorl sbb pop (bad) outsl inc lods mov cli inc xchg mov std pop out jg rorb jnp aas or mov icebp das cmp fnop sbb fs sub pop aam xchg pop pop icebp dec cmp out fbstp xchg test jl test mov mov sub ja clc add jb add (bad) push mov ss pop les xor or mov addr16 mov pop mov cmp xor mov mov push sub push fcmovu addr16 push cmp int3 mov fwait std mov xchg cmova inc je pop pop pop sti aas xorl xchg mov cwtl push mov test mov jl mull inc xchg sub dec inc jg int3 insb insb lret int3 mov mov ja add and insl cmpb jae jmp mov adc jmp rcrl add and ss int mov mov pop scas mov jb imul mov cwtl sbbb rorl std jge pop pop cmp enter popf xchg jae rorb adc enter icebp (bad) bound add cmp clc sub and add (bad) movsl sbb or test or aaa add mov out (bad) aam ds mov add std jne inc mov loopne mov and ret sahf lds stc cmp xor push dec dec jmp addr16 push mulb shlb clc (bad) and pop fcompl cltd lar pushf cld bound dec inc lods lods jno pusha arpl jae push mov jge lret xorl es jne outsb xor scas sub in dec idivb sub jbe ds iret push cs mov pop (bad) insb dec and sbb push dec dec and hlt add pop and cmp cwtl loope andl mov iret loope,pn jbe cmpl fsts inc cltd adc aad pusha scas jae scas xchg sbb iret nop les dec push inc mov xor into add mov adc adc cmp lock jae mov repnz jbe ss pop or enter add movsb (bad) std inc mov data16 out lods or mov mov test sti psrlq cmpsb mov (bad) repz jecxz gs adc bound jae ret rcll daa bound adc aas and outsb sbb lahf xchg shr push mov rcrb jbe fist xor or jecxz dec push and fdivrl jmp test adc jno sti sbb mov lock adc pushf jbe inc (bad) test xchg mov aam cld xor mov push add push dec lcall push xor and das add mov lock mov (bad) cmp sub fs lret (bad) gs inc out idiv or (bad) mov inc xor int3 mov gs push lcall push cmc mov cmpsl popa dec push cmpsb inc ret inc dec scas mov dec enter mov pusha ss jge push or mov fldcw rcll shrb cmpl mov icebp lcall es stos in imul xchg mov jmp (bad) fcmovnb cli adc rorl push cmc sub icebp lcall mov ds sbb icebp cs (bad) loope adc pushw insl (bad) shll in mov push pop (bad) jae fnstcw leave mov fisubr hlt repnz sbb ja jp les add pop adc (bad) xor mov pcmpeqb aam (bad) pop stos xchg cld cs lods xchg fildll sbb jns cmp or ret mov xchg jne (bad) mov and inc cmpsb mov jge push js insl jo mov push repz aam into (bad) mov lods (bad) push lock mov mov mov ret mov es xchg mov mov aam test push pop bound pop out cltd mov pusha inc pop add sbb and andl adc inc inc popf mov shl es adc pop and emms inc xor adc xchg stc cmp add in mov icebp fisubrl push add in fstp mov add mov je cmp fldln2 dec js mov cmp cmc ljmp mov mov or bnd popf inc mov mov (bad) pop lcall sub mov outsb cmpsb cmc push sub fwait adc inc push mov loope icebp and mov sub pusha mov mov pop mov pop dec sbb rclb cbtw mov mov add adc jno lcall push xchg ljmp add lret push cwtl sbb ret cmp pop jge dec lds dec stos and insb dec mov or dec dec sbbl das ja repz cmp cmp je es sub je arpl lret jae dec pop out fwait and pop mov je in int3 inc fsubrl add cmp lds in (bad) movsl inc xchg inc mov loope test or jp fwait outsb push arpl das pop fldt and xchg addr16 mov jmp and xor inc and leave pushf pop mov pusha sbb and jnp stos jno cmc sub xlat cli out and cld out mov sub je sbb push mov movsl rorb or test hlt clc test mov cmp lock int3 stos jmp mov jno ss movsb (bad) outsb dec xor jo xchg pop inc cmp mov sarl jge dec xor hlt lods insb jnp sbb jge cld push jo gs cld cmp sub push add jne pop gs jo sub mov mov (bad) or addr16 sub out pop cld mov and jecxz (bad) mov jl xor repnz mov lds push lret push and mov lock lahf add scas in push test jo sub adc jne nop push jle cltd adc mov jg mov test dec add push adc jp (bad) push or and out sub in das sarb push sub and inc xchg inc sub (bad) in inc repz xor mov cmc push decl inc jbe mov or ret jp sarl lea (bad) lea or jb jmp call (bad) rcrb rol (bad) aaa push pop mov cmp lds (bad) xchg (bad) xchg pop xchg jg xchg mov or jecxz,pt pop scas outsb lods out fistl jmp out (bad) lock cmp fidivr add leave push inc xor jb xchg push stos mov gs jge rol dec push mov sbb subl jb xchg sbb lods mov or mov test in sti inc xchg inc in and aad cmpsb cmp adc pop push jae and insb icebp mov popa mov mov inc xor stos dec and (bad) (bad) out movsl fimull test out incb sbb verw out test jecxz repnz fidiv cmp jbe rcl lcall adc or xchg mov pop or imul into fiadd push hlt push ds mov popa cmpsb mov xlat out roll xchg repz out loope sub sbb adc mov cmc outsb outsl (bad) call jmp jbe out dec dec loop add and pop xchg gs push sbb sbb (bad) test mov xor scas imul outsb sbb popa cmpsl mov repnz (bad) jb stc jns cmpb rorl out fwait in dec and sub dec dec loope loop lock cmp sub insl jp fisub insb shrb xlat adcb sbb jg (bad) roll jae popa divb inc cmpsb popa xor sbb (bad) cmp pop xrelease jo push test or je addb fistpll arpl out pop mov loop xchg in (bad) popf popa and dec jg adc dec cmp aam jns xor pop lods jb clc bound insl xchg xchg (bad) sbb test mov sub xor mov mov push sub out jmp pop lcall jle sub push sbbb stos rclb rcrb hlt sar mov inc xchg or (bad) push movsl adc adc cld into or out ds mov add push loop int3 cmc incb add xchg daa shll cwtl pop in icebp adc inc in dec jmp (bad) popa data16 int3 jmp mov shrb add ret adc movsb out adc ljmp fs and pop lea out sbb (bad) sbb fadd in (bad) and cld pop es mov sbb insl push ficompl or mov push or lahf fldcw in mov xchg loope and jecxz push jbe dec int mov cs xchg dec adcl cwtl mov iret dec push fdivs dec mov mov out mov sub or add cmp push fst jmp adc ret add mov outsl popa cwtl xchg lods mov or pop pop outsb in fbstp cld mov add xorb and pop hlt xlat pop shrb flds daa popa mov or add push stos lods mov jns negb sahf das dec or loopne ret call divl test ret out mov xchg popa popf sub popa mov bound xchg push call loopne inc cmpsb call arpl xchg insb ljmp adc sub stc adc cwtl scas and test adc pushf xchg xor aas test negl (bad) jne add push dec push rcll or iret jl decb pop imul and mov mov int3 das out cmp cwtl loopne adc adc scas push jl sub and lcall xchg ss popf imul cld or rcl mov cmpsb lret xor push outsb xor nop xchg jmp popl sub mov cmp leave (bad) push loop inc cli hlt out dec jns scas mov pop pushf add jo dec mov cmp sbb rorl clc jb jg jns mov xor jecxz and or sub pavgb mov cmc pop sti shr (bad) (bad) das push je aaa mov pop je ljmp ljmp daa hlt (bad) sub add bsr jnp sbb test dec jp inc shrb dec lahf add jae cmp add pop test movb jl and in xchg mov test ds in xlat test inc jns rolb push lahf fcmovu xlat and push repz or std sub inc (bad) fwait sub lret int pop fisubrl into inc call or jp or jae sub cmp shll push outsb lahf mov imul pop dec xchg push cmp int comiss std mov lock mov push cmpsb aas imulb lret orb add push pop xchg xor mov outsl andl cmpsb pop mov scas test xor push jle pop mov enter lcall lret testl mov pop unpckhps insb add nop int3 cld ds in jbe xchg sbb (bad) mov popa dec mov (bad) pop push popa cmp and stc pop pop mov nop cmc push in or sbb jne add jg or mov mov sub (bad) inc add cwtl in dec adc iret daa jb xchg mov lods flds dec or mov sbb mov jae pop jg std or pop out imul es fisttpll fsubp (bad) fisttp jg arpl or xchg or add add inc mov test pushf mov push popa inc int stos mov hlt mov aas out (bad) sub test sub pop out (bad) jb lock imul sbb subl (bad) dec cli out ljmp addr16 and xor ret sub sarb hlt add fisub cmp gs imul sbb gs dec xlat mov inc push movsl lahf or dec jge icebp adc pushf iret call pop mov loop das xor stc aam popa call mov ljmp xlat aad mul cmpsb xchg cmc jae and mov jge jne sub mov pop xor xor and stc mov fcmovu jle gs inc in jne xchg fnstsw jno pop popl inc lods mov fildl sbb mov push negl pushf and sub adc mov lock ja popf aad outsl pop call lret and insb sbb xor jp ljmp add je negl bound mov sub lea enter xor mov add push pop add mov (bad) jnp pop sub mov xchg or pop ret shlb incl les push iret mov push std sub popf arpl div mov loopne cmp rclb mov or jae dec or fiadd mov mov scas mov insb push mov rcr adc jl stc aaa add cltd jecxz sbb cld iret mov out inc data16 xchg dec aas (bad) rclb xchg xor test cmp xor and push cmp insb jl inc shlb xor mov or jecxz inc inc (bad) jmp add arpl cmp movsb sub dec add ret fidivl or sbb push xchg inc ffreep jo inc bnd xor inc xlat mov (bad) mov mov popf pop cmpsb fnsave or xchg or pushf xchg jae ljmp sub sarl adcl jmp pop daa lcall lahf and stos lret daa mov and add and xchg sbb arpl adc in xchg cmp sarb mov jae mov pop pop jge cwtl dec or fwait pop xor inc int mov in push jl cli mov or push imul and addr16 add repz cmpsb push ret leave pop or dec xchg clc sub in jge ret mov lock out add lds or xlat sub arpl test xchg mov imul jno test stos fdivl dec fcoms push dec stc sub pushf aaa cmp popa insl arpl stos jp fistp lods ja or xor push hlt (bad) cs fisttpl sub imul (bad) out mov and not mov mov std adc pop ja faddl push rcl cmp in rcll and mov mov push hlt xlat out fisttpl mov jg adc xchg dec push lahf pop pushf adc imul and bound test mov clc xchg mov and jg fsubr dec in les ret mov cmpl int mov mov enter fisttpl mov sbb in adc sub movsb stc ss xchg and cli push adc pop sub pop adc mov push mov inc adc lcall inc popf rorb es lock hlt ret mov jbe scas pop int cmpsl mov push insb outsl mov iret test jns or idivb les add aaa sti insl popf mov sub movsl cmpb dec sbb push bound fidivr dec sbb dec subl lret fdivr enter rol nop ja sbb call lods shl and and int out or ret ja mov push xchg roll pop fnsave std shlb das mov xlat pop jg xchg outsl shl rorl test cs mov and push inc jg es shrb push imul mov stc imul ds popf lret push pop jge push cmp jns xchg xchg test lea jmp icebp mov xor cmp mov xchg mov shl ljmp ds leave adc push inc mov mov dec sahf out pop dec sub fidivl cld fisubl jne fwait jmp inc nop lcall hlt pop (bad) lock xlat out jg sarl popf inc push and (bad) divl fwait dec (bad) lock out pop inc roll inc xor mov mov add mov adc mov xlat fisubr test or (bad) jmp or cmp sbb fistpl loop mov jmp movsl out jae scas lea (bad) jns int3 jb cs mov xor or incb inc mov cmpsb inc rcl fwait lds push dec or cmc gs lea aaa iret or fcompl call sub mov mov rcrb nop call and pop push mov rolb mov rolb ret test in cwtl cli sub mov xor (bad) jno mov mov sbb (bad) arpl jns mov or je in std ret adc pop shrb push sub (bad) lock int test xchg push clc ret mov je or cmp cmp inc out xor pop test pop push push adc sub rcrb xchg mov push push jecxz mov test add gs pop fdiv rorb and fldl stos xchg (bad) arpl aas test mov lods mov inc lods icebp cmp mov aad (bad) xor jl pop mov lahf add cwtl in mov jno sbb dec mov xchg cmp xchg xchg mov mov dec out leave jbe jg (bad) fdivrp inc stos leave cwtl push mov jle sti add mov mov jl pop inc inc or std jno ror xchg je xchg lods test lods mov into in aas mov jo push sub inc adc pop loope or inc push push xlat adc push cs mov aaa mov rcrl (bad) jbe aad inc shrl push jge loopne jnp pop dec outsb add and xchg rcll inc or push rcrl pop pop mov mov mov xchg mov imul or popa add or mov ror mov cld (bad) leave pushf pop sbb mov xchg xor mov jnp hlt sbb lock push outsl decl push mov xchg add aas mov popa test inc or or and jp test out rcll in sub sbb adc push add lahf jle jmp xor jl xchg int3 fistp fdivs (bad) nop (bad) cmp push imulb dec pop aad movsb outsb (bad) jmp je je dec (bad) sub push pushf ficom mov mov pushf pop (bad) xor jg in sub or cmpsl out clc nop aam mov fnsave pop inc scas jb in inc jg (bad) cmp addr16 or stos push ja mov enter mov cmp mov jg xor sub pop stc lret jl sbb inc insl pop fsubrs stos ss shlb (bad) add lods mov (bad) mov mov addr16 rorb dec mov shll add push (bad) jo or mov jb iret std loopne xor lcall jae mov push enter pop jl mov lcall mov cmc cmpsb test mov xchg das fidiv cmc lds pusha fsubrl mov pop stc xor out xor sub mov and cs mov fcompl jmp movsl push fcoml jp mov inc xchg roll ficom lods lea xchg and les fisub and add jbe mov call (bad) in push in gs stc xchg xor sub mov jo stos rorw test je jb add push fisubr lahf (bad) loop out negb lahf cmpsl push jge sub and jg stos adc out or xor sub cmp ss (bad) (bad) fs inc mov into sub cwtl lea rcrb mov xorl xor outsl enter std xor adc mov pop leave cmpsb sbb fisttp mov fidivrl push mov or xchg and dec insb divb jns stc and and push dec ss cmp out cmc jecxz test xor fadd jo sub xchg jae or fdivl fdivr imul and push sahf shrb ja stos xchg pusha pushf cmp jge jnp mov insb (bad) sub sub push pop dec incb (bad) sub in or xchg test repz jmp mov adc sub gs sbb insl xlat mov lock add push push (bad) iret mov scas fstl rorl mov ss stos add inc adc dec arpl lds inc jno dec mov jno pop in or arpl dec jnp push clc cmp push mov jl (bad) (bad) pop push hlt or nop in sub jo out loop mov (bad) lret pop xor hlt and dec mov adc sub and add arpl inc add inc push cmp sbb sbbl rcll xor sub push stc mov mov loop adc dec mov push or ss movsb out mov imul aam and mov repnz in sbbw mov jbe pop stos fisubrl cmp xchg sbb adc cld pop push xchg popa (bad) xor (bad) into lock cld jg xlat xchg (bad) lock shrb (bad) cwtl out lock mov sarb pusha loop pop cltd mov cmp aam lret mov and xchg jae pop xor pop adc jo popf push mov xcrypt-ofb cmpsl sub (bad) scas cs pop or in into leave loop imul xchg pusha pop xlat dec sahf fdivp push cmc cli jo mov sub in jbe lret adcl mov dec or ret xor sbb push dec stc into int pop mov das test pop push movsl test cld arpl dec xor sub or dec and dec fcmovnb xchg pop add repnz outsl pop notb scas pop xchg mov bound daa test or jne fstp or jp fistpll lret add pop or and inc push sti and fmul jnp sahf xchg sub xor sub subl xchg (bad) ficompl mov add test pop call loopne adc mov jmp movsb arpl xchg pop push dec cwtl push es adc scas leave jmp sbb sub ficoml push lret pusha inc mov ret cmp decb mov inc in cli pop push enter push stos xchg sub jp sbb xor ja mov jmp adc pop and je mov sbb pop ds xchg test in int inc xchg ljmp mov fist imul mov pop dec in loopne cmp insb dec dec loop int3 pop push push pop into dec stos leave jmp ret (bad) out (bad) (bad) ljmp fwait sub iretw push inc fiadd add jo push in mov (bad) imul add jns pop add inc jmp mov scas sub lahf mov lcall cmpb shlb jmp add ret stos adc adc fist sub lods lea push mov mov mov pop xchg pop cltd daa jnp inc xchg (bad) cmp bound (bad) and and pop add inc jnp mov adc and dec or mov insl mov lret es mov imul push idiv jo pop mov nop dec test sub popa je sbb jnp je test (bad) adc xchg sbb pop popa pop (bad) ss pop inc add jne gs dec xchg fstl inc jmp pop mov and push inc lds int subl lret jg out pop adc (bad) sub mov and int ds ficom cmc xor mov addb add sbb jno hlt daa test fisubl leave lret pop (bad) stos jp jo xor push inc mov bound jb mov cli xor mov mov movsb adc lock int dec cld push push dec dec mov fnstcw mov enter lret push push dec jg nop jbe test pop leave push aad inc inc in sbb and adc insb aam inc fidivrl gs sti cli mov test cmp mov or sbb rolb and inc lret push sub sbb dec outsl jmp (bad) icebp xchg out dec pop subb in mov cmpsb or (bad) and mov test enter jae out push call jl in flds push mov and andl mov sub adcb add jge jmp loope mov ret push or mov pop inc mulb adc xor frstor lret push popl mov iret and jno imul mov lea enter mov sti dec mov mov inc jno push mov incl add cmpsb or pop push ret pop (bad) fscale cmp push fwait sbb rolb add or lret fwait jnp pop or xor iret ret dec fisttpll test fisubr xchg and xchg xchg add stos insl mov (bad) pop sub mov rcl jge lock pop rclb jno cld ss cli inc sahf mov sbb sub push (bad) pop xor ljmp adc pusha dec adc or leave ret and (bad) jp icebp (bad) xlat jo and sahf sbb xor mov test loopne dec lcall push js test jo loopne cmp add int3 mov ret sbb divb lods in push adc mov jo dec pop sbb mov es xchg pop mov push add cltd pop xchg dec cmpsl fimull push fs jmp mov mov add add and lcall or out das push push out js fiadd jne fidivl jp xchg fwait (bad) icebp sub rcrb inc das ja test movsl pop or ja call sarb xchg cli mov or in xchg xor and jns mov mov cld and pop add repnz jns and sub inc in dec dec pop jae mov jnp idivb jnp pop hlt add aaa jb mov cmc cmp addr16 push or jbe ds jnp test jo jne mov lods xchg sub push out das bound mov inc out sbb test mov loop orl mov test dec (bad) cmpsb dec sbb sub sahf or insl dec call shrb inc (bad) mov or mov push out sub inc pop add pop push dec sti (bad) jo outsl or jmp add jb jge jb xchg sbb jmp push data16 cmc jne mov cmpsl add ljmp cmp jmp mov (bad) jg mov xlat cmp shrb jb sub and pop fiaddl push fcmovne fcomps shrl jno leave imul jb std lcall pop pop jo fidivrl sar jns roll movsl and das xchg dec dec dec push popf in mov dec pop inc and mov xlat sbb aad sub movaps pop popa push in push mov dec je mov lea icebp adc adc add (bad) dec mov in out out ss xchg mov jne es lea je dec popa jg or (bad) hlt loop stc sahf mov and test cli sbb cmpsb loopne push adc mov lret mov adc mov mov mov mov repz jg in decb mov sub jne mov cmp xchg pop pop push pop out test rcl dec fmull ljmp xchg shrl lods lods ret out add lea lahf dec test lret lret add adc xor pop addl iret outsl sahf lods aad jae das pop xchg in sub repz jecxz jb cmp mov push cmp sub subb (bad) aaa popa in in pop loope jge mov xchg mov sub bound mov repz cmpl pop movsb mov jo lds mov int inc jmp or jae aas lcall pushf adc mov push cli push sahf (bad) xor cmpsl rol dec insl out int test dec or cmp fsubs pop xchg ja sub dec ds jo mov fs rclb jg fs dec fbstp dec and inc mov dec ds (bad) roll aad dec rcll pop sbb add aaa js xchg (bad) je pusha jbe sbb pop jecxz fsubl cmp incl (bad) jbe dec cmpsb jg hlt sti adc sbb pop incb push fisttp jge sub and enter cltd enter ss mov (bad) dec scas out (bad) push fmull mov imul mov loope stos cmp fwait sbbl arpl in add inc rclb push cmp mov xchg pop lds push aad push cmp dec jp sub movsl int3 jp xchg and inc pop add xchg stos pusha outsl jl adc or lods xor sub outsl int cld push sub push adc sbb sti mov jns or das add mov mov sub rcl adc xor ds jb jne movsb mov inc pop js pop and jb ret dec imul cltd into and mov dec outsl out and clc mov lret cmp push push gs mov xorl mov pop arpl movsb shl or jo xchg mov sub mov les mov (bad) jne in (bad) fisubl mov test in jo fcomi mov inc int3 repnz and rol cmp inc mov insl xchg ljmp aad sbb sub pop add (bad) xor jmp sbb dec jae jb push or xchg mov dec daa or scas dec daa mov pop rcll ret push xor jl fcompl mov sbb add andb or rorl xchg push dec call push mov lret les lds sbb in pusha sub lcall nop daa ficomp xor mov popa sub test (bad) cwtl js int mov (bad) push test cmp inc idivb push (bad) in xchg in jmp sbb pop lock xor gs (bad) andb jns nop (bad) pop ds sbb inc loope idivb dec (bad) sub or mov cli jecxz cld sbb or std jb movsl pop data16 out scas adc adc sbb rolb xchg inc jg nop in fistp pop lea jge pop inc lds and test or insl mov scas sahf pop iret add dec adc push push inc xor movsb imul jmp in xor jecxz repz pop (bad) sahf add sub popl fstpl les ljmp xchg aad pop and jl (bad) cmpsl xchg stc jmp jle dec dec or mov push out xor jge in pop jl mov cmp mov cwtl mov out pop (bad) clc (bad) mov in add (bad) inc (bad) xchg test push inc or fsubp call or test stos sahf inc ret lods jmp mov cmp pop dec dec bound pop pop shrb bound jp xchg and mov push xchg cwtl out cmpsb (bad) jmp dec je dec idivl mov or lds fwait aas pop mov mov sbb fsts mov add test imull fdivrs rcr inc ret cmpsb pop sti cld scas das arpl sbb pop inc icebp jb push ss add outsb dec js mov les cmp lea jno cld mov cld xchg adc pop adcl (bad) jb jge adc movsb push lcall (bad) mov add in inc ds (bad) test imul das push jle push and sub sub sbb cmp (bad) jb mov pushf out add push fcmovbe pop ret ljmp addb aam dec jp data16 mov enter adc push mov adc pop or mov mov jno push sub cmc add aad xchg xor (bad) pop aad dec aam sub popf clc jae pop arpl das and cmp (bad) pop or (bad) and (bad) push test cmpsl ror les and pusha lret roll mov aad push mov inc push ds push jns xorb nop ljmp pushf movsb lock add fistpl xor jbe (bad) outsl ret add enter int3 cld add cmp sub in (bad) stos and imul mov nop mov daa shl shl mov vxorps rcrb or loopne sub mov xor cmp shrl jg leave dec or xor lret cmpsl fistpll aam inc or inc mov add repz jp jo and mov push mov aaa pop daa fsubs push xchg popf mov cmpsb mov imull loope imul (bad) jle adc ljmp fsts sub jl (bad) out or data16 sub loopne frstor out imul nop lret xor add (bad) xor add add xchg adc dec mov imul push and and mov arpl jecxz xchg jnp sub repz xor stc xchg xor jl popa dec or cmp jno dec loope mov mov dec sub addl mov fsubrs data16 in xchg or test jecxz jne loopne jle sbb adc or adc adc mov cmp mov addr16 jmp pushf and xchg test in fbstp sub adc or or cmpsb xor inc fwait push inc fsubs mov dec xor popf inc dec mov xor les sub push add or outsb inc or leave out stos dec es iret jo jbe or mov pop or mov lret sbb out inc push dec push jnp icebp pop inc test mov mov cmpsb jnp popa pushf add jmp outsb ret dec inc fwait mov aam test cmpsl fcoml dec push imul add imul sub jmp mov lock mov dec je (bad) icebp jb cmc and (bad) jno aas lods and mov sbb cld xor (bad) push sbbl or sbb pop mov sub jae xchg arpl or aad ss rorb sbb dec mov mov pusha inc xor out push xchg dec sbb mov cltd in sbb repnz mov push add and outsb cmp sbb inc push cmpsl pop lret lods repz shrl out dec mov xor dec lea imul jge pop inc jmp jmp adc sbb pusha adc jbe fcoms mov arpl (bad) push jne fs cmc lea and xor push jbe or (bad) cwtl xchg ret insl movb test mov inc sbb inc dec jg ss sti xchg xor insb pusha adc mov jmp int3 daa xor in pusha gs jb mov or mov xor inc addl test adc dec sub in push jne cwtl jg inc std pop (bad) jp cwtl or popa scas mov pop dec xorl scas add out dec jnp aam lea popa cmc in cld fidivrl inc lock xor xchg lods inc xor pop mov clc cmc jno lret fldt or cs (bad) inc xchg jnp and xchg cmc push cmp dec mov mov pushw lods pushf mov xor frstor cmc sub mov test and dec jg lea clc insl mov inc je addb movsl adc clc aam dec push mov cmp dec mov cld jmp xchg mov ret sahf mov pop or sbb sbb call lea sahf (bad) mov jge cltd sarb rorl les aam cmp adc sahf cld push or (bad) std sbb std inc push popf cltd ret jmp outsl mov mov xchg movsl out adc daa sti rcr or (bad) int3 in cmp inc pop jnp xor pop in insl into stos aaa xchg repz (bad) push aas cltd decb std jmp mov shlb push ds and pushf in pop mov mov movsb mov mov sahf lock subl mov leave mov (bad) add mov jl pusha cmp iret sahf xchg out inc xchg fs cs int3 out insb sti cmp outsb and push fcmovnb pop loop sub jge das inc or inc (bad) mov adc jo js stos sub rorb adc cmc jns fs jmp lret push or jp lods pop sub call lahf sbb xor aas jb cmp mov outsl ja cmp and int xor and les mov push data16 and stos add jo adc cltd add (bad) xlat or xor or std push aaa dec fdivr xchg sbb aas mov mov test loop ss cmc lahf jnp mov mov mov push pop mov insl js cmpsl push jge xchg imul adc js xor sbb xchg push push push (bad) sub rcll push bound (bad) call jg pusha push pushf dec pop xchg jl push inc pop sbb adc lret fadds add pop xchg outsl jne mov mov xchg or bound pop fstpl loop mulb loopne push fwait push (bad) mov mov sbb in aaa mov int mov xchg sarb mov sub inc sub inc popf adc sub mov lret test fwait dec mov add xor mov mov inc pop mov inc push fs sub xchg sbbl into dec dec (bad) cmpsl repz pop and shlb repz inc dec shrl mov test aaa insb xor pop enter dec fcoml es movsl das sbb xor xchg add shlb sahf dec cwtl cmp xchg pop jnp cmp mov adc icebp xchg inc xchg xchg xchg ret pop ljmp loopne fidivrl dec or mov lods push pop rcrl ret push mov lock lret xchg or push outsl test les loope mov shrb ljmp pop add xor xor sub movsl push sahf lock lods sbb pop adc jge push or jne push push dec je and push mov sahf jl xchg daa sbb or sahf pushf pop inc mul pop sub mov sbbl pop pop lods inc ret fmull cmpsl lret in xor ret jl cli xchg mov test xchg xchg (bad) roll out (bad) iret lahf pushfw cmp and cmp imull dec sbb xchg imul leave add stos popa xchg add mov and push pop xchg mov mov jl aad mov add shlb cmp and push (bad) jo pop xor cmp jbe pcmpeqb jmp sub mov aas ficoml inc aad fisttpl xchg jns repz add sub dec ret push lahf test sbb sbb in pusha jmp add movl adc jecxz (bad) cltd (bad) lahf xor xor cmp mov xor push cld sbb mov enter or lcall gs mov movsb arpl inc sbb popf cli jge jb arpl mov sub sub (bad) sti mov mov add mov fisub lods push add jne pop lret stos jg jb cmpsb ss in xchg add cs cld les pushf jnp xor nop push sub mov jl negb je xchg pop in pop sbb cmp sub jne cld xchg push push mov xchg arpl aaa orl setle into sub ficom js or or out in jbe pop mov add mov cmpsl in pop dec scas lret fmull jge aad test pop mov not mov repnz sbb insl jae,pn popa mov lahf pop rolb fldenv bound push mov and int mov mov jge fistl je and std jno scas dec or cld data16 lret aaa stos inc fcom jo rep xchg je ret mov and mov xchg inc xor into jnp out int3 push es xor (bad) inc int3 jmp aad xchg jge xor and fmull outsb cmpsb pop pop sbb fs lret or xor mov (bad) hlt mov add icebp in and xchg ljmp pusha dec ret xlat lcall iret xor pushf imul (bad) fisubrl and inc aam dec sbb imul (bad) add inc mov push xchg sahf addr16 cli in in push mov lahf enter add cmc adc mov inc push in sub pop sub cld sbb mov fldlg2 fsubrs lea jne cmp cmp mov fnsave fnstenv pop lea lods pop mov or mov sarb and leave shrb add cmc stos fild in mov mov dec jno cmp lret adc or sub int ret je pop out (bad) in leave jae xchg les pop xor push pop (bad) mov mov fisttp cli outsb call and rorb cli call enter out pop mov mov ds sbb out sbbb popa adc sbb xor xor arpl fldenv mov lea mov fisttpl ret into xchg adc and addr16 xchg mov sbb cld pop inc push dec add movsl in addr16 (bad) jle js adc lods mov jo inc jae add and mov mov cmp mov cmp dec inc mov jbe and clc push gs jb lods rorl pop inc xor shll cmp xor clc rcrl inc shrb insb mov jo adc addb movsb int lss gs inc pop or pop std jo mov enter aas movl sbb pusha sbb inc add sbb push mov aas fistp hlt cltd int3 and push sub cmp push stos or jmp mov jmp dec cwtl enter pop pushfw pop dec test xor mov mov movsb std test leave stos in cmp jecxz insl loope test test outsl gs xor jne and test cmp icebp mov sahf xor out adc xchg inc cmpsl (bad) stos sti dec adc fsubr pop out mov cwtl in sub clc xor push or (bad) popa lcall and ret ds outsl mov sub mov ficomp mov dec (bad) int3 push mov cltd ret rep pop jg jge dec mov nop (bad) lret gs inc stos mov and cmpsl mov jbe jnp sbb lahf pop into or ss cmpsl cmpsl or mov inc loopne mov enter xor adc repz fistpll xchg aad rorb cmp and lretw push and jae pminsw or adc (bad) bound mov xchg test mov xor loope sbb or jge test mov daa aam insb jnp movsl test cmp inc aas add inc call outsb test add lds cmp xchg mov pop popf insb push (bad) mov lock cmp sub arpl adc (bad) fwait sbb pop mov adc sti hlt xor pusha lcall mov aam pop pop pop int lea popa mov test andb and lahf call push push cs in jmp lret push dec sub les pop sub js push adc adc cmp in sbb rcll rcrl adc (bad) dec lds pop (bad) jmp in rep xor (bad) push jl cmp stos jle mov std jmp in cmpsl mov lcall insl inc xchg jns cld and and add push mov outsl push mov test outsl pop add rcrl or cmp pop fnop in jne aas pop mov fidivl inc (bad) cltd xchg bound dec clc insl add movsl xor (bad) insb or ljmp mov test mov and push add sub in adc repz and xchg cmp in movsb test mov xor js dec jp xor or and dec mov xchg dec pop dec mov daa fidiv pop xchg jo lods int mov int (bad) mov shrb stos adc add mov dec jo xor push lock inc pop add jae in adc das cmp xchg lret imul lds jb mov scas mov cmp and xchg add xor ss dec and mov dec mov lret pop repz sbb push cmpl in add rcrl (bad) push icebp stos cmpsb sbb leave mov or stos pop adc sub mov push loop cs mov sar repnz mov movsl in xorl and xchg popl xor imul int3 or and mov sbb jmp into popa icebp fld and aam aad and pushf stos fwait push (bad) hlt mov sub les insl mov cmp xor cld (bad) out cmp inc adc popa test adc repnz adc (bad) mov xor jp and jmp stos fisubl shrl pop in mov cli jno out cmp add rcrb (bad) jecxz lahf xchg daa aad and xchg mov push int3 mov add std jl push xchg (bad) xor lcall xchg sub cli or mov orb scas cmpsb mov jb inc xchg es xor inc daa (bad) (bad) push aad mov (bad) sub mov sbb pop fidivl fsub in cltd xchg add sub add cmp and sbb mov lret or mov cmp mov scas mov insb addr16 pushf adc jnp push fwait ret pop aaa or lret repz sub cmp sub ficom lret mov inc xor jae scas jae xchg xor xchg pusha sbb repnz sub fs icebp adc pop loop fadds inc (bad) xchg sbb add and adc jbe addr16 push pushf xor xor lock jg shll xor aas xor sbb out cmc mov and movsb xor mov push xor (bad) nop xchg pop hlt add mov nop test int ds int3 xchg arpl ror enter fnstcw ret test (bad) test jno xchg add mov aam or xchg iret xchg jge mov push cmpsl adc mulb das sub std mov add rcr pop mov inc in jns imul (bad) pop sbb vorps aam push pop in in insb (bad) ret (bad) mov nop and mov lahf push mov hlt sti push cmp les pop out gs sahf fild mov pop cmp data16 xchg jne mov mov or into sarb sub push xor pop or stos jp dec jle (bad) jae jbe cmp addr16 cli and ds pop inc call bound jl mov popf addb fildll repz add cmp xchg scas and nop out scas sarl lods mov in jae add mov popf (bad) (bad) enter leave jnp test loopne xor fisub outsb fiaddl sbb jne xchg subb pop test fmulp mov (bad) jmp sahf outsb or xchg add mov in lock into out push dec cmp fsubrs add daa sbb inc inc push xlat (bad) int jns cli dec fwait ljmp lahf cmpsb jl mov mov adc imul push in mov test dec pop adc inc inc movsl pusha fs xor sbb jl in lret ret ret or mov aas cld addr16 aad mov cmp insl loop or test icebp dec in and outsb mov sub or int3 (bad) mov sbb adc mov imul xchg daa adc (bad) fidiv mov repz add cmp (bad) mov repnz cmp repz aam popf sub mov or push jge xchg mov or sbb sub cwtl push push push clc dec push lods mov or fsubrs sahf xor push mov je negl stos scas inc out mov and adc mov mov sub push subb lds mov mov add and call jns fidivl (bad) adc sbb scas call stc daa fdivrl repnz loope lcall sti adc jbe sbb mov das scas fcompl xor add inc mov (bad) stc dec xchg inc xchg and xor or cmp pop das stos sub xchg xchg leave adc push dec sbb xor lcall adc fdivs dec dec pop out adc dec insl sub sub or xlat sub shlb movsl out cmpsl in add es sahf mov fisub xor lahf sub mov rcrl jg push cmc (bad) aas arpl add jge call cmp cmp inc shll in sub in adc add in mov orb pop push jne ja insb mov push lods int3 cmp mov aaa jb aaa cvtpi2ps pop enter sbb xchg xchg xor and dec and stc les push inc dec (bad) cmovo inc aas pushw and sbb iret jecxz (bad) cltd (bad) and aad jmp dec imul stos scas outsb in fwait js lcall roll (bad) cmp in ret mov imul push sbb inc push flds cld or push push rclb inc jecxz xor flds scas pop insb repz insb mov ljmp stos and cmc inc popa or inc dec xor les add jb and xor adc loop push fdivl sub sbb push js movsl cmp fsubr imul ret mov jb gs adc mov test mov cmp shl mov std lahf sub mov subl add mov enter push ret add push mov jnp inc lcall cmp in test push imul inc xchg mov sub or push or inc leave icebp push pop xor or jp or mov xchg aad add lahf std jle sub out (bad) enter sbb mov or std pop (bad) sahf mov dec adc sbb sbb cmpsl rcrb pop ds mov scas jno pop (bad) inc popa cli (bad) pushf mov mov xor pop ds mov lea pop es xchg push dec (bad) dec mov add jae aaa xchg adc inc pop cmp bound cmpsl jg test insb lods out insl or mov adc sahf jne sbb inc mov pushf mov insb test in pop dec jno sub sbb jb les sub push rep push sub shrb (bad) mov push add cli arpl iret push pop ds out add fsubrp push mov add (bad) ret sub das pop test jg out sub shlb add lea mov cmp cmp loopne push mov sbb pop lock les sbb pop mov pop scas cltd pop sbb repnz dec jecxz adc aad pop sbb jno xor pop mov pop insb jp sbb fcmovb add movsb iret add push sbb xchg xchg insl dec adc lods jb xchg test jbe test into rclb ljmp imul std sub imul or sar jo jg movsl rcrl cmp cmc out fildl push jnp es sbb fldl mov into sub popf pshufw inc inc test test push shrb lcall mov add pop shrb cltd enter cmp and inc adc pusha adc test sti adc insb loopne ljmp stos out pop xchg movsb fist sub adc xchg jecxz adc outsb adc dec pop xchg sub and jecxz add dec lock insb fnstenv enter cwtl jne outsl pop loopne xor les pusha stc pusha int3 test xor fcmovnbe xchg or cmpsl inc rolb pusha addb inc fldenv imul cmpb push xor pop aaa cmc jmp add addr16 sub fildll inc sub clc sub cmp sbb pop ja addl jne dec icebp insb jmp cmpsl xchg ficomp dec das and cmpl outsl jecxz cmp xor es call sbb mov add pop movlps fisubrl add aam es test cmpsb lcall mov lret xchg sbb addr16 nop ljmp lds push inc adc mov orl les add pusha (bad) movb iret sbb hlt iret mov xchg mov test out (bad) and adc das call inc sub dec cmovge in scas mov inc push and les orl add and xor scas and nop mov xor nop adc mov cltd in xlat dec sub pop cmp jmp push fwait adc xor xchg or jp xchg fidiv (bad) push scas scas and test dec mov cmp cmp jecxz stos add jge adc lods dec cltd daa and cmc loop push lds imul xor pop cmpsb cmpsl hlt or xchg xorb subl dec (bad) call jae mov insl xchg test test call sub mov (bad) xchg pop (bad) sub push (bad) punpcklwd and sub add fisttpl xchg movsb jns cld mov lret add into dec daa adc dec push aaa nop push loopne ljmp mov xchg clc adc bound jp or mov popa rclb outsl mov out loopne mov loope xchg loopne stos mov or enter cmp inc adc or or cmc or jp push into (bad) push dec arpl decl mov repnz int3 (bad) push sbb or ret cld cmp mov hlt push aam mov iret mov je dec addr16 pop jne clc ret xchg push mov fsubr sbb fs out cld popa xlat bound cmp sub xchg xlat jmp xor stos (bad) enter ret ret std push cmp shl in pushf test out pop mov cmp es dec mov (bad) xchg jae outsl and push (bad) (bad) loopne adc or xchg call sti enter lods dec lods mov xor stos lds fisttp in sbb (bad) aaa scas push (bad) mov push enter or inc test (bad) (bad) mov xor in xchg movsb dec imul cli push mov or (bad) xor push rorl push or into adc push fstps movntps cld aaa push cmp (bad) repz mov and mov fcmovnb fiadd pop mov test fucompp insb pop xor ficoml dec lea sti push int3 fist xchg es adc add insb sub jp xchg addr16 les mov fnstsw fwait jnp or mov sbb adc mov cld pop xchg xor test sti sar cmp cmp or xchg inc pop mov mov mov cmp std or sbb popf fdivr insb mulb xor mov repnz jge and (bad) idiv mov lds ss push clc push mov mov repnz seto adc mov jl ds or lock stos cmp push stos sub push add push cs dec lahf lcall or add cmpl dec cli std xor cld pop and push pop xchg fsubrl cmp addl andl pop arpl cmp mov pop test sbb push std xchg addr16 adc stos pop xchg int3 insb and pop push popa mov and adc scas pop stc cs gs jns jbe sahf lret lds movsl dec dec lret imul fldl or xchg xorb int3 and pop rclb sub jbe cltd mov mov dec dec push push test cmpsb (bad) imul orb sbb push rclb aad and repnz int add or xor inc fist and mov mov enter int3 (bad) cmp fcom sbb dec inc add mov int3 lds mov xchg (bad) pushf dec push dec add outsl rolb mov rclb or push inc mov adc sti jne sbb xchg out rcrl lret test iret lret int3 push pop ss adc insb mov bound call or stc and sahf xor pop jl dec pop fnstsw dec addr16 jg test or stos enter aam pop mov std xchg jae sbb mov daa fdivrl hlt out add lret lds add pop fldcw call aaa lods jmp ss mov push push add rcr lock int3 loope push jp lea cmp lods stos jecxz xchg cwtl jl lds lods fdivl aam jecxz cmp je mov sbb xor jecxz (bad) mov pop push push les jmp movsl hlt (bad) inc ljmp xlat test jp adc push mov loop stos cmc xor or bound mov sub mov xchg das dec cltd in mov subb leave in mov leave mov into adc lods (bad) sub rcr add cmc das mov (bad) pop sbb rol xchg lcall pop flds mull sub push xchg or imul jmp mov jnp jbe dec push and dec int mov stos repz pushf cltd sub out dec pop lahf jmp out cltd dec pop cmp xchg dec lcall cmp adc (bad) pop dec mov pop sbb add mov push mov notl add push ret sahf (bad) subl xor lret and fld1 mov (bad) lods cmp inc loopne and push insl movb std fnstsw inc lods rcrb dec sarb xchg cld mov ds aad sub push mov add cs pusha jno loopne pop stos jnp aaa adc out add fwait xor test ret js fnstenv orb push mov lahf dec adc push pop push xchg div xlat mov push pop (bad) pop jl cltd aad fnop mov fadds mov enter jbe incb dec pop cmp cmp in out push jl lret mov cs int adc inc xchg sub mov cli sbb push jg jo dec mov add movups addr16 push jmp clc leave sbb cmpsb mov imul ja cld jbe mov and xor rcll jp inc lock pop push jne dec and sbb mov iret xchg repz call arpl sub pop lods mov cmp pusha mov pop cmpsl xchg ja sub dec push and imul ds add xor stos jl pop scas mov das dec int lahf loope in (bad) rcll or add xor sbbl cmpsb or dec cmp pop or add loope into and cmc stc out add cmp testb enter xor adc or faddl insb sbb aas pop call mov fidivr mov jg or mov fwait mov add mov (bad) loope cmp jp and push lret or ss mov mov insb jo lds dec dec pop ds (bad) int dec mov out dec mov cltd leave xchg loop mov (bad) loopne fisubl mov jg pop (bad) (bad) pop jnp fcomi test inc lahf sub or test mov xor ss lahf mov sub sbb add add adc cmp std add mov xlat pop enter fs fisub lret ja rorb out jns enter mov pop scas (bad) std adc fdivrp inc mov into push adc cmp mov push jl inc lret stos lods mov pop test xchg mov push outsb ffree xchg cs sti lock repnz inc xor out mov mov inc call imul or ljmp mov aam and xchg xor jge pop gs push scas scas clc ret stos repnz nopl ljmp sbb ret and lock hlt sbb inc fldt lods xchg jbe inc push dec cld mov bound scas xchg fs dec mov outsb popf xchg fisttpl in pushf popa test jg add and jge nop push nop inc sub fist jo mov in jge mov and pop sub adc mov and (bad) shrb adc mov lods pop in fmuls or outsl cmp pop imul bound pop cmp test loopne les int3 fsubs ja aam and test imul in flds mov arpl jne outsl mov add dec cmp jmp out insl (bad) push xchg lock pop lret jle daa sar (bad) call dec mov shll cli add aaa int cltd (bad) daa imul mov ret cmpsb mov inc mulb inc mov in mov rclb xchg test pop loop and leave (bad) or jecxz sub shll add popf out fnstsw jb lods test outsb leave arpl into mov mov xchg push jbe arpl pop or cwtl push pop stos shl mov stc mov mov insb push pop lods inc and xchg xor loop pushf xchg lahf inc push pushf lret inc pop fstp (bad) mov adc push testl jmp or daa data16 aam dec xchg incl mov jo imul pop jno xor int3 fmuls sub jmp jecxz xchg push xchg push push adc loope lahf or lret shll and sbb out mov cmp xor pop jo jmp test xor loopne or in xchg lcall lods (bad) in adc mov aad lods bnd ds imul arpl std inc clc lret mov and lods dec in (bad) (bad) mov inc push push sbb jmp cwtl (bad) daa lcall push lret (bad) (bad) push outsb inc movl mov sub ljmp inc fnsave mov inc fnsave and out mov mov std push pushf cs (bad) out outsb mov dec inc daa inc xchg and outsl pushf or inc cmp inc inc xchg (bad) mov insb cmc mov (bad) sahf add inc mov leave enter cmp lcall jae adc jns add mov inc cmp inc adc pusha ffree jne out out push push pop mov push or adc pop xchg sahf mov decb or sarb mov or or outsb ror pop test js sub out faddp xor push inc dec js jle push xchg insl shrl (bad) mov jge cmp sbb rorl aam (bad) jmp jnp mov pop push sbb dec pop push rcl jmp jmp mov nopl add sbb adc and inc and daa fstpt js jns je cld adc out xchg add addl popf push xlat push popf adc adc sub mulb jmp add sub addl jle xchg int3 jecxz sub dec int jg js adc pop (bad) cmpsl mov mov mov fstp jo inc fwait pop (bad) mov dec sub in and mov out sub (bad) mov pop sub inc imul xor mov scas dec and jae in add mov inc add jnp les cmp lret add int dec hlt or fwait pop cmpsl push lahf add test pop mov mov in push and stc fsubs inc shlb ss in push adc shrb fxch or push cli (bad) sbb inc (bad) push add or jge jl imul jg add or scas lret mov push dec mov dec fdiv imulb lret mov popf cwtl adc jne sub in icebp mov mov and repz fisub push (bad) mov test out outsl push call rorl pushf mov ljmp scas or or and dec jl ficoml jmp in push rcll mov pop dec lea fnstsw xor inc xchg fidivrl pop out pushf xor lock js andl push mov dec mov push sub in push lods pop fucom cltd (bad) ds push push das pop dec jbe (bad) adc daa test fisubrl xchg jg movups jnp aad aaa add sarb leave js xor ja imul test jge push (bad) adcl mov cmp ds mov push movsb test cmp test add js jle pop stc push or mov xchg and inc push add mov popa sub sbb movsl stos push fdivr lcall sahf gs in div pop inc es jno daa into enter and jno stos and rolb jge pop je cmpsb jle pusha loope arpl mov xor or dec (bad) mov repz notb fnstenv pop sub dec adc loope xor mov ja cmp inc negl pusha or xchg (bad) (bad) inc jbe sti push and pop push mov jmp push rcl adc jne push adc mov push das rcll cmp insl jle cltd or ror inc dec sub imul pop hlt rorl push test pop es sbb insl fmuls mov fnstenv test shll sbb dec xlat lods jnp loop clc dec sarl leave xorl imul mov mov lret movsl inc stos or test or shrl outsb dec jmp mov js fwait icebp xchg jg imul cli mov ds dec xchg negb pop push aas or outsl fcmovne cmpsl mov cmp xchg or xor jae or lret mov fwait ds test adc loop shrb or cmc mov adc in lahf inc inc pop cli sbb adc pop xor xchg cmpsb inc jl mov sbb pop (bad) and mov dec enter fwait pop jg aas (bad) pop push adc pushf dec lahf lods dec pop adc lock push sbb std loopne (bad) insl pop leave (bad) lods push xor fsubs cmpsl insl add pop negb pop pop pop fs mov js cmp data16 mov lahf fincstp fistp sbb lock mov sbb push jns orl fidiv pop dec lds inc nop aam nop subb jmp push mov push jnp jp jl jnp jg les adc andl (bad) icebp bound imul (bad) or rorb pop shll iret jne inc into addb xchg (bad) mov js mov ljmp insl icebp daa (bad) fadd fs insl jecxz popl movl jo in call out fdivrs stc stos or pop push pop stos lea test push push or aaa push scas nop and mov cmp dec ret nop loop sub jno sub (bad) xor cmp ret mov sub lods sub (bad) add sarl imul in lock (bad) dec je lds mov push popa push mov icebp mov in fistl mov ret arpl mov int3 popf lret bound pop mov std daa adc das or dec imul jle mov sbb lret xchg jne outsl push or test fildll mov std loopne cmp mov sbb pop mov idiv stos lahf jge and (bad) xlat (bad) and sbb adc clc sahf ret frstor jno rorb imul mov or dec jl outsb scas addl and inc insl insb xchg adc addr16 in jmp sbb push sti cmp loope pop push fisttp pop loop ja inc cld sbb jg add mul add push stos dec cmp cld mov xchg (bad) aam mov sti aas outsb clc sbb out push lcall movsb scas imul push fwait (bad) jne jb sub add push push or pop dec sbb inc mov mov (bad) xor (bad) or xchg out xchg lahf fs xchg (bad) std xchg test nop sbbb roll lock add push test ret and adc or cmpsl cmpsb (bad) imul xchg sub dec (bad) mov lret cmpsl cld mull ret ffreep inc adc push dec ljmp or je cli in xchg pop mov add sub out add pop sarb mov in push adc jge sub fldt xchg mov mov fwait xlat out jne dec mov lret out loop inc int3 hlt and mov outsb inc pop fsubrs loopne mov inc call cltd pop repz loope lar mov or sub (bad) and pop aad and scas out mov dec mov mov xchg popa adc push pop loope sbb test xchg (bad) ja inc ja mov fisttpll adc dec clc outsb mov add jo and or sbb add popa or push inc lcall or dec out pop dec jae out (bad) xchg nop cmp hlt cmc pop pop loope add jbe sbbb cs push xchg adc loop mov mov adc ficomp sbb cld or addl popf out stc cld xlat xchg jns add mov das nop push pop pop jmp jb sub mov fucomp xor and push push push fcoms inc mov add adc cltd jo mov gs int3 mov add mov test lcall fdivrl out cmpsl cli and cmpsl lret sub shlb xchg xchg js mov out jmp dec cs jo inc inc jmp jo cmp nop ret movsl test sub out or xor mov cmpsb sbb pop dec scas mov out ds sub fsubl jl out sub mov call inc jbe movsl and sbb inc mov lret mov push aas mov js repz imul push adc push sbb sbb sub hlt mov incl pop imul cmp xchg cli push (bad) push inc or adc mov and ljmp das cld push cwtl cld daa xlat sub mov loop adc nop push outsb iret push cli (bad) fmuls sbb add pop cmp inc imul mov dec popa sub iret ljmp imul adc mov sub or inc mov in loop push loop cmp push push cmp push cmc pushf call mov (bad) xor test push (bad) jno daa xor aas cltd cltd xchg insb cltd add jle push nop loopne adc pop inc xor call add add jnp fs push ljmp fistl stos out xchg fistpll fldenv mov sbb rdtsc push ret in mov lods outsb or pop hlt mov lret gs lcall addr16 pop cmp push mov leave or aaa push aaa lahf int iret pop mov iret xchg dec jnp add xor je pop xorl jl sub arpl xchg jp xchg push mov pop mov sub or faddl add shlb inc (bad) mov (bad) cmp in push jecxz lea cmpsb mov ficom int3 adc mov or pop dec jp jp mov out dec jg dec or lds mov leave lcall adc loop xor int3 xchg jg outsb jecxz pop push stc inc rcrl movl inc or jae jb inc dec mov xor cmp ret notl push xchg lea xor jns cmpsb mov movsl cld icebp mov ffree loopne and je xchg sbb jle mov lds rcr xor pusha mov lods xchg jmp lods (bad) pop das add inc xchg mov xor (bad) sub fldt add mov pop mov into mov dec out aad cmp je pop add fisttpll popf (bad) loope sub pop fdivp loope push jl stos in (bad) or enter sub inc inc add adc out jmp pop subl aas fwait mov jge jg xchg mov mov mov or fcomp mov xorl mov or push aas push dec roll cltd push pop push ja pop mov cmp inc fcmovbe arpl sbb mov hlt sbb jae jns mov lret movsl dec dec (bad) push arpl dec pop out jge add xchg adc (bad) mov outsb or and jo sbb fcomps lds mov sub mulb addr16 in add insb jle dec push jecxz dec inc jno or pop dec xchg pop pop jo or cs dec iret xchg inc (bad) xor adc cmp sub ljmp jns add int cmpsl sti xor pop fcomip xchg test or jmp add sbb push add push sbb dec inc mov jmp gs sbb push mov sbb jno ljmp fs mov inc aad mov cmpsb sub cmp fdiv lret mov xchg pop sbb pop lret push mov (bad) and (bad) jnp pop push xchg hlt adc inc lahf (bad) loop jmp xor sub xlat iret dec and pop mov xor xorb sub insl cld inc les jb lods push nop stc pop inc iret pop insl mov cltd (bad) bswap pop ds fdivp jl aaa jl rclb mov push movsl push inc data16 hlt daa (bad) sbb dec jb div imul xchg jne dec add into sub lahf sti push out int3 pop pop js xor cmp ja dec (bad) aaa pop mull jne sbb arpl xor (bad) cmp or insb test and jo test movsl enter cmp aaa divb lcall pop aaa lcall rclb xor cmp xchg cmp dec leave or sbb out enter adc dec mov cmp mov les fildl sti dec cwtl pop cmpsb and (bad) popa jg imul adc bswap sar pushf negl add push inc (bad) sub mov sar movsb and inc xchg test push (bad) sbbl or xor ja mov push addb sbb imul inc (bad) rclb mov jne jnp mov das outsl popa not mov insl push fdivrl push xchg lods lcall sub push mov xor sar xor mov fwait cs jecxz jp movsb xor mov sub out mov addr16 sub bound inc dec or fcom jmp dec dec ss frstpm(287 jae cmp std pop sub or xor xchg push sub xchg mov fist std add mov mov ret inc aad mul push jmp insb xchg loopne fcomi push aam je jns push or adc mov aas jno jne movsb push push aam icebp sbb and (bad) adcl and mov gs jp sahf inc and addr16 fidivl xor in jae insb cld inc (bad) sbb stos jne or cmpsl roll or movsb rcrb xchg sub pop jae mov pop shl fwait enter lods mov ret jnp fs sub aam out ja lcall hlt stos cltd dec out dec iret jb,pn pop aaa ret push out xchg loopne pop sub xor adc test cmp fbstp mov and es sbb fwait or sub nop data16 lods jne push mov movsl cmpsl jecxz mov pop in lahf insb cld cs daa pop jmp cmp mov sub into test mov movl lret mov cmpsb and fstpl out negb xor mov scas leave push xchg or cmp dec mov in das fwait jae dec mov imul (bad) sti cmp fcompl add sub mov dec repz (bad) (bad) xor lods lret ret jge jg repnz mov repz sahf test sbb stos dec cmpb push add jle mov loop dec test mov and int3 and push aam cmp adc sub push xor clc sarl lret loopne popa std cwtl push movsl int out xchg xor sbb xchg fstl xor cltd jge or push lret sbb push inc aas xchg add xchg dec adc add ficom loop fs sbb and fcoml pop sbb xor scas and loopne push insl dec mov in leave sub cmpsl cmp sub imul mov mov lods xchg iret outsl enter dec dec out xlat out test pop or ss lahf iret adc lea push stc mov sub fcmovbe jl cmp mov mov mov (bad) js loope add into sbb (bad) cmp test outsl pop xchg shlb ds in mov push add mov js sub mov lock (bad) or nop xor xor aad inc sub sub pop xchg loop int3 cltd xor push push xor sbb cmpl and or sbb ret pop xor mov pop cmp stos les sub jp pop in (bad) pusha pop add out out dec shrb xchg lea sub fcomip (bad) mov inc sbb imul push xchg iret (bad) cmc (bad) es (bad) jbe aad fnop xor lret popa push repz cmp cltd sbb dec (bad) out sub fnop xchg xor jns loope sub inc xchg mov fbstp jge into ret out and sbb fiadd push les and insb push sbb jmp mov fisubr lea das push inc adc jl out es cmpsl insl bound or out frndint ljmp mov cs mov inc mov aaa push dec or imul idiv (bad) js mov (bad) add push out mov xchg mov xor dec stc nop jge scas sub pop jmp inc fnstcw mov mov add jae fiadd repz sarl or mov mov add arpl mov mov push jecxz cmp lods push xor mov jge cmpsl sbb dec mov inc dec dec lds scas aam out (bad) test test mov add dec cmc xchg stc dec xor call fbld jge pop cmp repnz or (bad) cmpsb pop inc lods or jecxz out idivl push jns mov cltd cmp stos test jl popf (bad) mov jge and xor repz pop or mov jl inc mov iret jnp jecxz nop push adc mov mov iret in dec cmp shr pushf and stos inc imul out cmp mov stos ja dec int3 outsb xchg cmpsl pop repnz push or inc jl and pop loop lcall sbb aas jb jl rcl divl lea cmp push sarb xor mov mov gs faddp js (bad) jns imul inc sub jg sbb inc push subl lods test jae out imul jo and ret push dec ret sarb shr xchg xchg adc xor push andl xchg push cmp xchg test jmp ss cmpb mov out push stos (bad) pop dec cmp inc loope xorl push xor imul loop add jbe outsl cmp dec (bad) repnz (bad) testl adc push inc pop xor mov jge fiadd jae,pt jg xchg or mov mov lock and or lret iret dec int3 xchg lea inc pop dec or and fstpt aaa (bad) int3 adc dec xchg into (bad) xor jo (bad) nop mov and or outsb xor or pop jecxz (bad) mov jl xchg int3 jno xor int and imul out inc pop mov lock repz int adc mov dec xchg leave into pushf test pop push lret pushw in add add nop aaa xchg mov jle loope push xchg insb jmp lcall stc xor movsl adc and mov dec sub jo adc pop bt popf icebp pop iret or dec fs pop popa cwtl jno push lea std push dec mov sub push push add add cmp or dec das loopne lods push test bound and iret push test jbe (bad) (bad) lahf rcll out daa fldt inc in xchg push addr16 cmp jg ret pop jle inc or lods jmp cmp mov shll push lret mov jb lcall fstps out push or scas (bad) rclb mov bound mov mov cmpsl lret call lret mov jno std xor imul fldt pop leave dec or stos sbb imul jno aaa fdivrs mov jns cmp push lea (bad) xchg aaa mov jmp out in in fisubr in or lea push imul decl mov jg mov insb ret (bad) in sahf loope add addr16 push pop imul jg shr push push mov cmpsb sahf lea pop fwait xor les and or lahf rcr pop cmp fisttpl xchg push (bad) into fistp sarl adc movsb clc sub (bad) gs ret getsec mov pushf mov push cli mov stos push in shll mov mov je das sub lahf mov in lret sub pop out xchg loope adc iret int bound pop jmp mov and (bad) mov scas dec cmp loop addr16 in push pop adc inc sub stos scas pop fsts mov sub data16 clc mov cmc outsl xchg push pop add repnz (bad) add loopne pop jmp cmp add scas jo dec jbe je inc cwtl push call bnd mov sbb adc les xchg dec loope xchg cs out bound mov and add (bad) mov jge pusha xchg (bad) adc loop in mov rolb scas cwtl dec scas pop or push pusha or jb out arpl xor popa aam add cmc or cmpsb mov mov mov lahf jne in shl sysexit call mov lods cmpsl into add ss imul mov jp mov pop mov in cmp (bad) movsb fs mov push dec fistl neg xchg mov cmp mov cmc orl sub xor sbbb jae int inc mulb push cwtl add in dec mov push add nop lea cwtl out (bad) movb push test and mov andl inc add push (bad) mov cltd and xchg ja pop cmp in adc push out into jb mov nop sub mov aas loop mov out push mov mov movsb mov out add add out out sti pop bound (bad) clc xor test loop push cwtl das (bad) movsl xor out pop jmp imul or enter mov rclb jp mov aam mov xor ret inc jecxz addr16 (bad) (bad) int pusha mov jnp adc loope das leave xor fistl cmp pop mov push mov adc dec cmp gs fdivl icebp sbb call cmp mov rorl dec inc xchg dec cli dec mov les out (bad) push mov out mov ret inc sbb scas insb inc imul sarb stos das mov lret dec jne les fwait arpl add cmp jae mov leave push and mov addl mov jecxz (bad) lods lods jp ror movsl push sub pop js rol adc add pop xchg ja jecxz mov mov call mov sub dec sbb or sbb shlb mov (bad) mov sub mov (bad) pop adc fwait mov (bad) (bad) or rcll fwait in jecxz mov pop in pop cmp push ss fcompp and and iret push outsb cmp or xor or je pushf fadd pushf mov inc mov std in test inc int3 adc cmp dec clc (bad) movb scas sbb aaa mov sahf outsl inc xchg xor std cmc stos inc mov repz int3 aad inc pop mov jg push je stos inc xorb and cwtl fmul xchg jmp ja jnp xchg sub shrb push popa push jmp js shrl pushf sbb or xchg loopne arpl mov xchg sbb sub adc add insb cmpsl rol test jg inc sarl jne xlat mov dec (bad) fcoms ljmp mov inc adcl rorl movsl mov shl ficom lea or lds pop and sbb inc inc in (bad) popa mov dec jl add repz mov ds dec adc outsb repz xchg das jae fdivr icebp cmc mov aaa aam jnp and imulb push mov (bad) cld or push iret dec stos xchg enter bound dec xorl inc stos sbb call mov aaa stos sbb pop aam cltd push xor (bad) sub daa incl inc adc push jne imul in test (bad) loope adc rorl pop mov mov out dec les pop jne add cmp repnz mov jp push test pop add nop test mov stc dec loopne cmp decb cwtl push into sbb (bad) into (bad) pop mov sti test jne in ret repnz and into sbb xchg lods pushf lret outsl and xchg inc inc jmp xor (bad) ja scas loope add test jge ds xor jg je imul xor (bad) push mov out mov mov pop imul mov push cs setne mov mov jmp xchg rcl jne push (bad) (bad) sbb aam adc clc (bad) adc push fistp clc sub push dec into cmp mov fildll pop cmp mov rorl push cld jno mov xor jae gs inc sub cmp addr16 lret mov cli std dec mov pop lahf mov mov clc pop xchg test pop adc rcl adc push lds pop jnp ljmp out cmc cmc cmp inc or inc (bad) or ficom xor mov lret push fisttpl mov ficompl sbb fcomps cmp cwtl ret clc js or push xor xor mov stc or mov adcl pop arpl lods mov movsl mov fwait mov (bad) pushf lcall mov iret push test int3 cmp jns js push imul mov scas mov adc and and cmp out add sub icebp imul dec mov aad inc fisttpl push mov fisub loop cmpsl sti stos xchg jo jle leave adc movsb xor movd movsb insl fldt and jne mov (bad) xor mov cltd add xchg loop iret jg pop and loope or mov aam push jns xchg xchg leave pcmpgtb push repz xchg push outsb sub sbb and xor xchg (bad) or mov rcrb fiaddl movsb std dec iret sub into and sbb sub jno jl fwait or test sti (bad) jmp adc push mov cld mov scas (bad) in mov cltd mov in push mov testl dec int ret xchg sub lods or cs inc fld inc mov inc outsl mov cmpsl xor mov pushf mov aaa and fdivs xor repz negb addl add clc mov inc mov mov repnz sbb sub cmp jp lock clc leave ds and xor pop fisub fwait or rclb push adc or stos jnp (bad) cmp (bad) sub popa xorb adc mov add cltd ljmp out sub pop (bad) sbb sarb sub nop or rorl lcall rorb adc pop or and xorw pop push stos test xor ss lret add adc jns pop mov out cmp (bad) jb int jl test in xchg movsb (bad) sub jg jge xchg inc xchg pop fist rcrb hlt imul icebp dec or adc push mov jae mov push fisttpll ret xor fildl lret daa push mov lret xchg jns xchg xchg push sub lcall add imul inc loopne adc lahf mov enter icebp das inc sub adc push out xlat lds cmp and and repnz loope ret ja cltd inc mov test sbb or add imul jbe imul or xchg fimul imul mov or sarl inc dec dec mov arpl repnz dec ljmp in push xchg and sbb xor fwait jbe pop or or mov std and lret push and in xchg scas cltd add fidivl jmp std cs mov cli jb add mov jae outsl mov sub mov inc pop xchg add ja adc sbb jg shlb and aam cmp movsb cmc cs sarl imul jo pop std jno leave int3 sbb adcb rol sub fucomi ljmp mov (bad) (bad) rcrl push xor cmp (bad) popa cmc inc push xor into ss jnp inc pop in pop mov sbbl add add rclb jo mov xor or repnz dec es mov push jmp enter and mov cmc cmpsl notl sbb mov cld push sbb xlat push sub shlb sub int3 and mov mov (bad) jae mov pushf in call or add ficoml bound jmp sub dec (bad) ffreep xchg xor mov outsl pop mov loop cmpsl imul lods hlt int3 mov mov out (bad) dec mov (bad) add dec xchg mov mov sbb pop nop jp and test mov int insl xchg and insl hlt ss shrb mov inc pop xchg cwtl mov sub mov pop cld or sbb jbe aam hlt iret dec dec mov cs insl int3 (bad) aad loop push es dec sti mov mov jns lcall or hlt inc clc scas lret dec jmp mov xlat repz mov cld adc xchg sbb movsb pop cltd pop sbb inc (bad) enter add xor movsb movsb clc inc mov add out cwtl leave out push rorb jns inc xor push mov mov xchg dec out push js (bad) in jecxz jg ror aaa pop jge pop aaa jle lods push je push mov inc (bad) xor mov sbb loop adc sub daa mov mov pop int adc mov pop push loop add inc jecxz dec adc pusha (bad) inc std and pop into xor call mov jno inc cs pop and or inc push scas jecxz pop lods cmpsb (bad) js mov jne add test inc sbb fcompl cmp fnstsw fwait jae in mov fisubrl popa jo inc imulb jae pop adc inc pop push dec cmp in add inc adc ss pop shl insl clc mov jg xchg add cwtl scas pop jns mov mov xor cmp ja xchg ds pop les mov push dec leave imul sub insl inc dec push fisub xlat xchg inc fdivl sub lcall aas dec pop sub and sub cld mov in jg push imul lods xor xchg or inc das out std inc aas add arpl lods notb bound inc into pop cmp stc dec xor (bad) sub xor (bad) out std mov pop jne pop gs shrb push add jp push cmp fcmovb and adc out push mov cmp and push jg in inc shll pop mov dec mov arpl jno cli (bad) repz out addb iret call cmp pusha test cmc arpl test faddl fnstsw (bad) jno fimull ficompl movsb cmp mov lea xchg xchg or push or pop mov add or xor icebp pushf test mov inc lret and mov faddp pop cmp sti into mov cmp (bad) inc or mov or push and pop xor sub rol mov scas int cld (bad) and hlt xchg jnp les cmp xchg mov xor mov (bad) out or divl sahf adcb cmp sub push add sbb add loopne mov mov inc sbb sub sub adcb stos (bad) inc mov lock xchg nop lret jg jecxz mov mov sbb inc or (bad) arpl fldl mov xchg sbb adc std pop aaa daa xor xor mov fs je lret addb mov xchg fsubrl jp jge mov mov test pop pushf bound jb js cld xor xor das push push xor (bad) fisubr push and inc xchg pop pop es jbe,pn das cmp lock dec or (bad) inc fstps fucom cmpsl mov jg mov jmp andl flds push fstpt jp inc out sarb mov jg dec add fildl dec aaa repz (bad) dec test (bad) iret add fwait dec lret out xor adc (bad) or adc jae loopne in dec add aas aam or rcll repz jl shll popf subl (bad) outsl inc mov cwtl aas iret rcrb mov cwtl dec sub outsb sub xor xchg xchg dec (bad) stc sbb mov test adc xchg jle push popa or test imul int3 lea pop add mov sub dec fwait cmpsl xlat (bad) push out ret fnop js push in xchg lea out (bad) dec (bad) out dec jmp sub inc js add mov ds lahf inc test je add lock pop inc xchg mov cwtl mov mov int3 adc pop in push pop or clc jne jmp jp lcall popa pop ss jge pop and fldl ja shrb mov mov mov sub jmp ds mov test dec scas inc (bad) add test pop add ret in xchg mov insl (bad) ret in movsb movsl adc and mov sbb lods jle out push repnz jns sub push sub aad test xor sbbl add pushf lods xor (bad) imul add xchg xorb cwtl hlt xchg shrl gs fs sbbl xor nop and pop sub sbb leave dec adc test (bad) xor aaa cmp insb sbb clc call sbb xchg aas jne std or in add ret int3 int3 push stc (bad) (bad) jo daa mov fs sbb cmp pop jl dec mov fnstenv mov add movb and and cmpsl loopne lea mov pop les (bad) in xchg adc data16 fisubl push xchg ss adcl cltd dec rolb imul outsb in jg int3 test rcrb cli add pop sub push addr16 std sub mov cld (bad) fcoml addr16 clc ss out leave leave pop out pop int3 jecxz add xor cld mov cmp test mov xor mov rcrb sbb mov push cs stos ds shlb in inc bound cwtl shll scas xchg hlt jmp jp xchg jne mov (bad) mov fucompp leave pop cmpsb (bad) xor mov push lea mov hlt or push dec add add mov out pop cmp mov lret rolb and cld inc jb sub cmp aas lret fidivrl jge fistp ja ret mov xchg xlat addr16 lds or divl push mov and adc xchg push push cmpsb sbb jg popf xor notb mov stos (bad) addr16 dec dec aad hlt cmp scas jl adc fadds add mov sub and mov push adc adc mov lret icebp inc js push sti fcomps movsl jns xchg xorb pop dec in cltd lods xchg fcoms int in cmp lcall divb lods push mov popa test arpl test mov (bad) mov sbb pop mov fadd mov popa xchg bndldx outsl dec add lcall std mov stc xor arpl iret outsb adc mov jecxz aaa push or xchg fstpl xor fdivs lahf mov mov (bad) xor lock add shlb jo adc loop fdivrl mov imul dec dec into pop fsubrl lods mov cltd imul int sbb xor jle inc pop int3 ja cmp test pop or xor addr16 sahf loopne aas cld popa adc push call add dec popf outsb xor loope ljmp je pop (bad) scas pop (bad) sbb inc test lods mov cmp push icebp sti sub dec je adc mov adc inc movsb movsb mov icebp or cltd xor pop sbb xchg push adc xchg mov cld sbb push fwait inc mov and es cmp sub jp jnp fimul stos lahf sti loop imul js push jmp fwait out out icebp jnp push lcall mov js jp mov test pop loop fisubrl fs data16 loope outsl pop mov add and xchg fcomps mov xor mov push rcl xchg adc icebp in es jo loop movl fsubrl inc hlt mov lcall arpl pusha push pop sahf mov repz dec dec ret mov or inc xor loop push out adc push (bad) xchg movsb sahf shlb test popa cmc sub (bad) icebp addr16 sbb (bad) sub fadds push outsb je (bad) mov lock pushf out xchg cmc jecxz mov enter rorb xchg pusha xchg dec test push pop xor sti call sub pop inc sub mov cmp sbb dec mov pop inc sub mov adc add loopne xor push loop std jo push data16 (bad) add (bad) pop push (bad) fcom add loope dec jle sub xor xor mov mov add (bad) mov in (bad) ss or add call xchg (bad) mov xor mov jg aas cmp (bad) fimull (bad) mov jge jne inc sti inc or movnti pop int3 push or mov xchg fdiv imul inc loope mov jno or rolb sbb adc pop lret xor imul add ficoml or popa lods push icebp mov mov loop lret lahf (bad) and adc rcpps ljmp (bad) aam (bad) inc add cmpb mov aam test scas ljmp pop dec sti repz pop mov xor sbb out adc add fisubr dec pop addr16 mov das sub fstpl jb pop adc dec pop fsubrs ljmp mov aam xor into movsl push dec stos mov dec idivb mov inc cltd push int3 lret out inc ja jnp pushf outsl test outsl mov arpl cwtl pop cmpsb mov ljmp pop or hlt add out push inc or stos ds sbb jl or movsb mov push call daa jg dec inc gs sbb hlt jae mov in pop insl push and out push inc jbe jp xor sbb mov jo (bad) idiv shrl aaa (bad) cmpsl jae mov fstp leave pusha fdiv cli les push out lahf fild popl cli clc lods lds or or daa fmulp mov and test xor mov nop xchg in lock mov mov outsl xchg xor mov (bad) xlat adc aam sahf mov or imul pop orl iret push jmp xchg popf lea jbe xchg out sub fmull sar add pop stos pop shl push lret pop or test dec mov mov jne jne sub aam or inc xor mov and dec push (bad) (bad) jb ljmp stos xchg pushf mov push outsl xor jl xchg sbb xchg or or cmp xchg ret add push es (bad) cmp jp mov pop push call test sbb inc pop adc aaa sbbb sbb lods mov rorb dec fdivrs das (bad) mov xchg mov cmp push sbb xchg mov dec mov movsb mov or test jmp leave addr16 repz xchg loope xchg clc outsb cmc mov and xchg aad pop mov mov pop add cli cli arpl inc es inc aad mov cmpsb dec jmp popl push ds lret mov push das scas popa test xor adc pinsrw sti adc fsubl leave shrl push push fdivrl mov in push mov lea cmp cs fsubr into xor scas push mov lret add fisubrl or lods or clc mov ret and (bad) adc fmulp outsb xchg int3 adc ret sahf imulb fistp push cmp dec mov iret jns cltd jb pop std (bad) scas cmpb add stc mov pop stos mov push mov lock mov mov lret sub or out je arpl sbb cmp test lock push dec mov cs and mov xchg push clc nop lret sti adc pop xor test clc lods out scas pop mov xchg das sar jecxz xchg loop (bad) jne add xor cmp pop mov pop ja mov mov cmp cwtl mov insl test das lcall stc push or (bad) xor in mov jle mov mov (bad) ret ds add jmp sub cmp add sbb push hlt cmp iret adc pop xchg push push cld mov lcall xor xchg add push movsb call mov push mov movsl pop aaa mov ret xchg out or xor jmp xor add in test ss fstpt jae ds sbb imul xchg mov xor add mov cmp mov mov jbe ja and xor aam divl outsb inc insl adc lock adc add or mov mov hlt mov push and ja sarb inc fldcw xor fsubs js dec into sbb mov hlt sub xchg cmpsl mov jp jl ret mov les out jbe pop xchg mov in mov fsubrs xchg imulb mov repz push loopne mov je cmpl jge sti das test (bad) test lock je loop cmpsl mov repz cmp mov mov push nop negb lahf (bad) divl adc sbb nop cli imul fnstsw dec or in jae inc int ret out jle or push sarl sub xchg lods repz pop out arpl xchg mov mov push mov aam lcall out lcall sahf es pop adc mov jl sarb call lods xchg (bad) (bad) push jae push test mov icebp fisubrl test or (bad) fisttpll mov sub shrb icebp in lock and lahf jo xchg mov dec sub mov fwait or negb jmp (bad) xchg sub fs and std mull fmuls hlt mov or inc inc pop xchg (bad) clc sub add inc mov sub sbb in call pop in stos pop xor repnz loope dec xor jns xlat ljmp nop sbb push movsl ljmp imul or add jmp sub sub sbb sahf pop mov jmp mov or in int3 cmp sub pop xor jge nop mov pop xor je xchg mov mov push push dec push stos fnstenv cmpsl popf bound pop cmp pop sbb fdiv stc and hlt int loop cmp out dec stos xlat lret pop mov (bad) xchg dec std lods pop and add and mov add mov ljmp cwtl rcrb fildl cmpsl jbe push sbb inc cwtl dec cmpsb adc mov lcall pop insl lods inc mov scas cmp adc fisttpll shrl sub in test paddsb inc pop fstpt in or push xor xor outsl mov scas orl enter je fwait cwtl adc add (bad) repnz mov insl (bad) mov mov or xor or repnz mov mov clc (bad) out outsl push cmp add pop movsl aas gs pop cmp ss sbb test in test lret jns aaa dec push (bad) dec mov aas insl icebp dec push pop idivl jno fistl jae imul leave mov ljmp or out cmp js xor ss stos pop xor fcomps lret mov inc movsl fstps mov out mov or es cmp (bad) jle lock popf jecxz sarb lea xchg dec mov std push sub fnstcw mov adc fldenv mov insb cmp pop test inc mov test push ja mov or push lock jmp and pop imul ficom lods movsl dec pop xchg movsl cli push int or add dec aad test cmp shl cmp daa and xchg nop cmp shlb out pop loop psubusw (bad) mull xlat pop es mov dec pop pop imul push js cmp fwait shrb out xchg icebp push xchg sbb lock sbb aam out ret bound mov mov imul pop shl add test sbb ret xchg adc jl out mov or push movsl jp cld (bad) addr16 push fisttpll dec (bad) sub jecxz popf int dec mov mov sbb or iret jbe movsl xchg inc adc lret sbb lret movsl cmp pop mov lahf mov sub and aas cmp les dec arpl mov mov cmp xchg mov loop pop repz push ss jge mov or out fdivl fistp popa shrl sbb push out xor or jmp imul or stc pop inc jns pop popa pop or pop (bad) neg cli mov ficoml pop add aaa jge cmp pop push cmp (bad) hlt dec inc lods andl gs (bad) jns aaa adc test fadds cmp dec aaa (bad) mov aaa dec jecxz jle xor pusha repz xchg add (bad) xor (bad) repz and pop pop inc pop sbb or sbb or (bad) push incb ljmp in and lods push sbb mov nop dec mov movsl cmp xor or and mov pop sbbb (bad) icebp int3 mov aam ret add mov je pop mov test cltd pop (bad) push jns mov hlt movsb cmpsl aad insl aas out mov setne inc xor mov fcmovbe fisttpl stos ret data16 mov loop mov call pop mov xor xor push mov push cmp mov dec repnz mov jge add pusha xchg sub jo js pop jns into mov jmp je cmp dec repnz nop pop mov cmpsl mov adc sbb popa xchg sub or jg mov mov addr16 clc sahf in stc test pusha jl mov cmc decb lock shrb xor pop out ja or sbbb cwtl jp xchg stos in movsb cmp cmp jecxz add repnz sbb addr16 (bad) rcll pop ljmp loop (bad) fistl dec insl inc lahf push clc stos in scas dec into leave or std adc es sbbl mov mov sbb in xor inc ja stc adc pop retw bnd jne mov push ja das inc fidivl (bad) movsb push in scas iret push mov pop loop in pop jl and and insl dec (bad) fnsave lret lods sbb mov scas fisttp pusha inc cmp cmp je or jp andl push lds cmpl (bad) cld pop pop ss inc jmp adc cltd incl ret clc popa sbb pop data16 sub loop and xchg cmp dec cli sub ret cmp leave pop sub iret push ds push inc lea xchg aaa inc lds in push sub jno shr push outsb push fwait iret jno mov or ja xchg inc push adc or test push xchg push inc sbb (bad) sbb inc cmp jmp pusha mov push out aaa jb (bad) xor nop sub pop (bad) negl mov out push lods fdivp xchg jae adc clc push repnz lahf mov sbb jne aaa (bad) test add xor bound mov iret in pop pop mov ficomp dec mov movsb xchg mov shl hlt dec and xorb xor not push (bad) cmp add aaa orl lahf add js or mov (bad) xor pop test ja inc jp inc insb ret add adc cmp sub fwait scas or or shlb mov cmp aam lea test xchg push outsb test mov push jns pusha xor imul ret xor ffree cmp lahf (bad) hlt xchg nop imul pop mov mov xchg enter push int das icebp ja faddl or cmpsb dec fldl push pop dec cs push in stos mov lods jecxz dec leave pop mov push pop mov jle push rcr out jg pop test imul mov inc dec popa les repnz add push (bad) jnp stos mov cmp and vmovsd data16 das mov cwtl mov lods outsb out cmp pop fldenv aam std in xlat sbb jg jo adc push test and movsl add cmp aaa ret add test fcoml inc pop int3 mov out or imul dec pusha mov movsl fnstenv jnp fdivrl xchg sub pop xchg xchg push enter sub lcall pop xchg orl (bad) mov (bad) dec in fs stc jns mov inc add movsb jle bound add inc repz jg dec (bad) xor sbb mov push test pop int3 imul adc inc cmp lods cmovns mov ret mov je fimull jae cmpsl mov incb push aad arpl fnstcw push cmp js push inc stos addr16 mov into and jnp inc push bt jmp ficoml sub lahf loop je xlat jno adc mov or dec pop frstor mov lds mov (bad) icebp cs stos imul mov pop push and and push rclb pop cli xchg sub jmp test cmp (bad) fnstsw mov push xor cmp stc sub or mov imul daa (bad) pop adcl jb ret mov sub and scas sub adc sub mov jmp fsub out lcall adc cmc xorl push push and add sbb addr16 pop loop into cs pop pop icebp sub fxch mov mov enter (bad) pop or mov jp vzeroupper pop jne and daa test sub loope or xlat pop in push xor insl sbb xchg mov jo loopne arpl cmp and fiadd test jae adc dec sahf fstl jnp pushf movsb inc pop scas in (bad) fnstenv xchg push sbb inc xorl popa mov test sbb cmpsl xchg pushf ror xchg and mov xor in push dec fldenv popa fistpll mov mov sub adc pop lock inc aad cmp repnz push icebp rcl lea cltd sbb mov lcall lcall cld aas and pop sahf (bad) pop mov fimull lods xlat ja mov call push sahf dec popa (bad) popa pushf push sbb pop ret test mov add dec aad mov fpatan ret dec pop push pop and ret jbe loop roll pop test jmp in andl mov insl jne cltd aas daa data16 rorb enter cmp mov lea xchg push stc add out out loop jnp mov lcall aaa rclb add fbld (bad) cltd push mov loop or jle aas sub dec int dec test inc xchg shrl mov test ljmp lods dec or call and lahf orl movb js pop or adc mov adc hlt (bad) test or xor bound (bad) lods push gs jecxz test mov nop repnz push and cmc popa adc js xchg aaa inc or das (bad) popl mov je repz fs leave jb inc cs add push test adc loope (bad) mov aaa mov inc push stc dec (bad) and and mov imul shrb stos inc push push sbb enter out das mov dec movsl (bad) or jbe push insb adc mov loop pop dec fisttp push dec pop iret stos data16 pop and sahf cmp xchg push mov cld adc and xlat fiadd stos jne push lds jmp (bad) popa dec pop dec lods add stos subl or cmp cmpsl or dec fs sahf negb add sahf push dec bound (bad) push mov cmp repz iret add or mov cmc mov cmpsb movsl mov mov fadds add pop inc into subl pop mov add xlat push pop out mov stos test ret lods mov pushf sub daa mov add cmpsl (bad) push in mov xlat icebp cmp das insl gs loopne push xor rcl and and sbb mov push mov add cmpsl addl mov xchg mov fdivrl out jo sbb jmp fisubr jae xor xchg or sub inc dec dec stos addr16 sbbl lcall jno pop cmp test insl data16 xor mov sub add mulb inc pop jle jge outsl stos sub xchg aad pop test scas xlat (bad) (bad) cmc sti adc adc jl lret xchg jne fcompl hlt js mov pusha frstor in and pop dec out lret add (bad) sbb and jne lock scas orl or sbb paddw sbbb sub loop (bad) mov cld pusha rcr jg (bad) shrl incb and sbbb notl mov scas inc pop pop sti dec (bad) shlb jb jae cld add jnp insb (bad) insl push ret icebp pop mov jbe cmpsl test fsub lahf and fmul xchg insb popf push (bad) adc rorb inc in pop and imul pop mov cmp insl xchg loope cli (bad) xor repz pop sti jle in pop inc or sbb fs jge xchg push (bad) shr fcompl hlt cmp js cld fsubs push sbb dec mov pop mov jge adc fisubrl lods inc xor mov jecxz,pt pop (bad) mov js mov subb roll push iret imul pop xchg in xchg adc cli inc mov xchg loop test iret outsb icebp enter mov and xchg jns pop xor outsl pop mov or jp aaa (bad) in loop sbbl and add or and adc out xor push inc insl cs insb sbb mov dec mov xor loope shrl or roll push dec sbb scas ret ret lret fstpl and mov cmpsb fldl movsb mov add jp push into jns test (bad) ds sbb mov fdiv sbb mov adc mov dec add imul or fdiv fadds imul stos (bad) pop add mov pop adc xchg out rcrb ja cwtl aad xor fidivl js mov mov cmc dec cmp mov repnz xlat pushf rolb inc push bound push test inc push mov out or mov mov andb pop push fwait or in sbb dec xor lock out aas jno insl pop sbb and addr16 sub dec insb fisubl xchg fmulp and pop push jle jo aas jecxz cmp fidivl jns sub lahf lods push mov outsb jbe fsubrs jne xor pop xchg push icebp dec scas inc outsl sahf adc lret mov and subl pop shll sti pop mov add (bad) dec xchg aaa test mov scas outsl cmp xor add loop mov mov out mov ss jno mov inc or adc mov (bad) call jno adc mov fisttpll sub push cli mov jg (bad) movb aad dec frstor pop stos add ljmp fisubrl lahf js xor inc mov push sub pop push int3 cmpsb repz xor stos dec and push jae jle int ljmp insb xor mov ret popa xchg int push pop xchg sub sarb sbb loopne imul jl (bad) aaa push out sbb movl loop rcrb sub mov xchg mov int movsl pop lret push sbb test xchg mov aaa (bad) or lock int3 arpl mov test cmp cmp and test leave outsb std mov popa adc mov lods sbb add sub repz jne cmp xchg insb jmp mov push jns int3 sbb into lods push loope cwtl fs push jnp xor xchg in fsts add stos das cmpsb pop dec push and cmpsl cmpsb cli xor arpl push ret mov xchg out pop inc iret cmc mov xlat xchg ficomp dec imul adc mov mov loopne adc sti call rorl xchg fidivr frstor sub mov dec inc mov dec (bad) fsubl push or or repnz xor or inc fistpl out clc rolb imull jne pop pop and test stc jae stos ss insl push test mov repz mov test addl mov cmp xchg daa cmp loop cmp push jno ss das insl insl mov (bad) jbe sbb aas mov sbb add push or stos xor jge aas aam roll dec rcrl loope jb sbb jb popf cmp pushf add iret xchg xor lret (bad) mov dec aad push mov lcall jmp pusha dec insl in sbb xor xchg push das push setne fbld rcrl pusha dec cmp adc lods cmp push (bad) jg subl fisubrl call in xchg fiaddl fsubp cs pop cwtl push or lds inc xor cltd in test mov imul insb ret xor mov xchg pop gs fwait ror aam adc stos xchg cltd mov push mov sbb leave sub sub stc xchg pop in add and shr js aam pop mov (bad) call ss (bad) fiaddl leave ficompl sub xchg sub dec repz cmp jae ss push test dec enter out jb sbb mov mov push fwait ljmp ja les pop jne push xchg out mov mov popa in jge or jle cmpsb jmp pushf mov lcall push pop xor xor mov mov cmpsl pop mov push lahf adc or jb or rclb movsb hlt lcall shlb mov clc popf dec fildll push (bad) mov (bad) test mov or in or repz gs add add push inc (bad) jo pop rorl rcll (bad) mov mov xchg leave shlb in mov jge outsb stos (bad) rcrb mov push cltd in xchg cmp adc insb sub or out sub cmp test mov pop fs inc lret gs mov xor and dec inc dec cmp sub jl out jb mov mov and insl push and ds (bad) push mov movntq out js out jl push dec and out pop dec sub xchg sub push adc (bad) mov out jo xchg cmp loopne sub data16 fs push inc daa in fnstsw mov shr enter jecxz adc dec pop and dec dec into sub sbb adc negb insb ret xor push aaa div mov das adc ss test mov out aam sbbl outsb out and cmpsb sbb lods mov fwait idivl lcall into scas mov lock pop mov fs dec shrb add xchg push icebp (bad) jo daa dec dec and xor or mull cmp popa cwtl adc dec aam test xchg fs adc test xchg (bad) or add mov pop cmp pushf push inc lods rorb mov sub in js mov enter lods into jecxz mov dec xor xor jnp fdivrl push mov sub sbb inc adc and dec inc mov loope inc or int3 iret int fcoml lods and mov sub sub push jg mov cmpsl and (bad) imul addr16 sbb jl pop pop aad sub mov push jbe xor mov dec movsb call mov imul pop decl (bad) sbb push in pushf popa lcall mov sub clc out mov inc loopne imul addr16 mov std fsubr push cmp mov cld mov mov pop das mov int3 gs js lcall nop insl inc jecxz adc add lret jge sbb in movsl mov inc jg nop mov pop jmp and fcomi pop and bound and or mov (bad) lret push (bad) ljmp pushf lahf jns lahf mov ja popa and lcall sbb inc cs push pushf jl andb lret js dec pop enter jecxz sub inc pop int push (bad) push cmp test out rcll loope lds cmp cs or cs and xchg fadds adc jb add lret cmp aam jb cmpsb sarl (bad) insl je xor scas orl ljmp in adcl ljmp inc mov call add imulb out imul xor jp ljmp lret dec ret pop aas xor xorl or or mov out stos outsl mov into dec ss sbbl or jmp jno mov imul dec mov fst shl pop fildl push pop jle push add in ret roll mov test xchg inc scas mov lods dec out gs and mov cmp adc lods sbb jns sbb mov or pop pop inc out inc add fs push dec mov inc mov mov mov addr16 mov mov incl outsb sti popf or push je (bad) out mov mov scas cmp mov imul test icebp and cmp dec (bad) (bad) jb hlt leave add lahf add sub adc lcall das lods aaa mov add in dec fstpl jae int3 test and xchg add cmpsl pop mov sahf dec push in aam adc mov cwtl sbb ret jg imul jecxz or imul outsl pop dec mov or push cwtl add inc ds jae int3 std scas mov cltd dec xor sbb jge je push add scas mov adc dec xchg dec jge int3 fnstenv dec jbe shll ficompl out mov push xlat mov or xchg popa outsb inc xor inc or dec xchg sarb test sbb ljmp int pop jg arpl adc mov xchg sub sti loope ljmp cli es std in pop aam sti ljmp in popa jmp out push xchg jmp xchg imulb sbb dec jl jecxz cmpsl nop mov stc jns xor mov inc insb and cwtl pusha mov clc mov mov mov sbb sbb scas mov mov mov cmpsb sub dec mov lods scas aam mov test jge jae test add mov mov jg or inc bndldx lret adc idivl inc test lods mov andb stos int mov mov add mov add push outsb sub mov sbb incb add inc cmp insl enter fwait xor ss sbb adc fldcw sbb xchg outsb fisttp inc add xchg lock lret rorb fadds loope and add push pop cld (bad) out or xor (bad) inc fcomp data16 xchg mov lcall cli fidivl push inc aaa fsubrs (bad) out jg insl in sti mov mov cmp mov insl rcrl test xor gs push xchg ljmp jmp repz cld mov mov lds lods nop xor sbbl mov push call orb mov jb iret jnp out fisttpll movsb int3 mov std fs jne shrb push repz or insl sbb mov (bad) shrl out jb scas inc jbe jl jmp in add and scas pop cli (bad) sarb mov rep cs xchg adc test sti and pop push jno or (bad) imul add push ffreep inc shll adc test xor pop jnp jns and mov stos mov lret out cmp push sbb out sahf xor icebp les cmp stos add subb sbb in fcompl (bad) cmp sub out mov cltd stos add inc push outsb mul mov popf lea xchg loope icebp lcall jl fiadd loop dec xor test shrl adc stos fsubr sti xor push push aam aaa mov inc xor aaa jo mov cmc aas lret aam les adcb ja repz push into dec push cmp pop mov test jecxz cld jmp fdivrl mov andb jle xchg fcmovbe sub fwait mov pop or push test (bad) imul fst hlt fldcw add faddl notl idivl fdivrs cs test cmp pop dec add xor pop in enter lahf iret sub mov mov mov dec sbb and sub pop insl popa sub xchg sub pusha in aam fnsave pop jmp xchg insl lods pop xorl (bad) and (bad) das pop dec jmp int3 adc or jmp dec nop (bad) (bad) mov sbb adc xchg rorl dec sbb pop xor pop rol mov jp adc mov sbb mov push sbb push sub jb adc jno addb fst jl gs pop (bad) push adc xor xor mov push cwtl jo adc dec scas je insl adc jge sub jge addr16 lcall pop fiaddl jmp (bad) scas hlt and adc test mov mov cmp imul enter xchg cmp dec jo lcall mov int imul jecxz in fbstp daa pushf cmpb ja out stos xchg loope mov imul push mov add jae sbb fs outsb inc and adc mov mov inc test in or andl dec xchg mov aaa insb fistp pop fwait and mov movsb imul cli jmp (bad) arpl aas xchg cmpsl cli mov loopne fs int3 dec ficom imul xorl pop insl inc jle dec dec mov jae imul or jb push pop outsl xor lods xor pusha aaa lahf mov fimull call (bad) lcall or pop lds push fnstcw xchg pusha and fnop pushf fist add cmp jl int3 adc add pop popa dec shrl ss push fcomps mov mov xor loop ja (bad) lods xchg mov loopne sahf sub outsb movsb dec xor sub xor (bad) mov mov cmp aad adc adc test std push jp (bad) lret stos lds out (bad) push or mov xor jmp sahf xlat lea or scas mov stos mov adc subl je shrl leave (bad) mov int3 lret movsl cmp mov sbb sub jl repz aad cmp mov xor mov sbb push sbb jno cmp jne aad loopne (bad) iret into test fdivrl pop popf in ret insb aam test outsb pop mov push daa pop xchg mov lret inc nop enter out mov test jnp repz cld mov dec test pop mov sahf loop add xor or and xorb pushf test lret (bad) in sbb mov jp xlat ret inc and inc push js jno mov jno add fdivrl rorb out int3 or (bad) fisubl out fcmovbe lods imul sub mov xor pop inc loopne inc popf sub xor test sarb xchg aas mov sub pop adc jl pop loope jnp pop loopne sbb dec or iret dec sbb ss xchg push ret push mov dec xor or ret insl xchg lock in jbe xor ret cwtl xchg fisubrl mov jecxz int3 pop inc mov and mov push mov (bad) pop sbb pop adc test xchg mov adc cmpsb push adc sbb (bad) out call jns inc out scas gs or mov faddl invd cmp mov xchg jmp or imul mov (bad) (bad) sbb jl insb xchg ljmp in lods cld push sub xchg sub rclb adc fiadd loop sub fidiv pop jl or mov shl sub push and shl andb out into loopne (bad) ja,pt jae subl cmpsl cs (bad) cwtl aam jge out inc mov sub jg sar lahf (bad) hlt pop pop push aad jle jns push cwtl xor test arpl fdivrp mov into pop scas call mov cmp xchg iret and loope pusha or dec test punpckhdq stc jb popa loopne call add (bad) push testl and xchg mov mov imul jge je add dec cmp es in mov (bad) hlt jae sbb mov lahf insb call cmp pop movsl add or fimull push inc xchg mov outsb push xor repnz fs mov mov fstpl cmpsb iret sbb in sbb mov xor mov mov jmp adc (bad) stc push mov fisubl push shr lcall mov jg mov push hlt inc pushf adc shr es push out jecxz out or cmp (bad) jbe sti (bad) fs scas in add cmp or mov sbb popf sub jp dec lret aas jae jge dec cmp in mov push add mov fadd xor jo or loopne icebp test jg or mov out adc xor int3 cs jg ja lea bound mov cmp icebp std (bad) add ja cltd lds lret cld adc push js (bad) insl aas jge adc call or (bad) insb stc pop lds ret mov pop jmp aam and mov or push dec add adc or and loope cmp fs sti adc repnz repnz xchg adc sbb xor or icebp push push test cmp dec cmp pop sub ss mov pop lods cld in lret mov fisubl fistp sbb inc notl loopne loope fiadd inc movsb fistpll dec push pop jmp loopne pusha sbbb push mov sahf dec mov fistpl dec jp (bad) adcl add loop jg mov (bad) aaa jecxz enterw bound push jne dec pop jg inc outsb rcr mov mov testl push in mov mov std mov into addr16 idiv adc inc mov out mov iret sbb jbe mov or pop add subl mov pop mov stos xchg bound cmp les sarl enter popa push and cmp (bad) mov (bad) lcall adc cli sbb mov xorl dec push xchg lea loopne sti push push mov dec push movsb (bad) popf mov add xchg cltd je mov mov inc fucom lahf orl jmp lcall pop mov (bad) mov push push dec or test push (bad) adc ds (bad) or popf or jns aad (bad) add push js outsb lock jo sub mull pop pop test inc xchg jg mov (bad) incl pop sbb xchg dec xor fidivl mov xchg add mov pop pop imul xchg adc pushf roll popa push cmp cld scas cmp xor lahf jae out daa int sahf sbb roll sub mov jle popa xchg pop out dec push fadd add jae je loopne ss xchg pop mov out repz sbb repz cmp out mov das lods pop loop xchg sub mov test int in adc ficomp pop insb popf xor mov and pop pop movsb cmp jl lret daa iret mov mov mov push xchg xchg or nop mov mov sub int3 sbb adc sbb push mov das cwtl push orb and fs icebp (bad) rcrl dec push add sub fidiv clc test dec dec mov add jbe nop inc mov mov mov xchg aam jge pusha xchg fsubs push cmp xchg pop mov movsb int or xor test cmp (bad) xor mov gs fnstsw pop cmp std mov sbb pop enter (bad) pop dec xchg movl bound enter (bad) sbb iret leave insb subl pop test inc clc rcrl (bad) clc push jp mov lcall in cmp or fwait pushf repnz add mov sbb push and imul ja or das scas popa in mov adc pushf xor rcrl inc xor loope pop dec lcall jo mov lods loopne orb test or pop sbb jg push xchg cli popf mov (bad) ja and sub in xlat adc aaa pop push ds repnz adc ret insb add or push fcomip movsb out mov push into jo push stos stc call mov aad mov popf inc add addr16 ja adc sbb jp rclb xchg (bad) pop and js rorb mov lods lods sbb mov mov es jno dec mov cmpsb adc xchg mov adc insb lret and adc sarl (bad) movsl mov out mov cmp ss daa lahf scas add in jl scas test cmpsl arpl xor fnstenv les pusha mov int3 xchg icebp sbb rol and test push shrb ds icebp or xchg stos popf mov es sbb push jmp or test adc iret mov clc and call sahf ljmp fdivs mov fimull pop lds or jno fimul (bad) mov stc push pop and push push adc into jo lods jns jne sub sbb inc mov xchg xchg mov cmp dec push xor mov notb mov shlb jae dec andl push das push pop dec ljmp lods xchg xlat inc cmp jne fwait adc pusha in dec push hlt inc (bad) jmp dec outsl ljmp popa es aaa stos fucomip jns push xchg push pop test out or (bad) jge sub adc adc adc decl arpl leave shll mov xchg push fs (bad) gs sti and stc add jp mov and pushf jp and mov mov jecxz jecxz xor rcrl addr16 jae sbb mov mov xchg test repz adc pop pop (bad) mov enter shrl insb adc out movsl (bad) mov cmpsb outsl pop mov (bad) into mov push arpl pop (bad) sahf mov ret ss (bad) mov lods addr16 mov out shrl mov cmpsl lcall inc add scas lods test jo jg outsb out jo sub jp cs dec lods and aaa test and push add scas (bad) push mov pop adc jmp scas fmull push lcall xchg sbb jl lds sti ja push pop jae and and dec mov inc into dec pop movsl inc nop call push int3 push das cli or add adc (bad) flds pop mov push das jecxz,pt popf imul mov stos xor andl lret or cmp loopne push fs pop bound lcall adc push jno int3 scas imul xchg insl aaa xor out (bad) jmp jmp push jbe (bad) repz xchg cmc xchg ss icebp jo inc je lds loop cmp adc push das jecxz jno pop push imul push sbb pusha dec jle sbb or loopne shll loope arpl mov stos (bad) sbb les repz repnz and push push xorl (bad) fnstsw popa sub mov lcall stos push mov mov sbb lea sti sub rcr adc arpl jnp mov inc inc sub mov sbb bound xchg aaa sbb cli cmpsb lods cmp aas xchg cmp sbb int and into jae stos repz cmpsb negl pop aad cli pushf loope mov pop xchg cld jl adc sub out ljmp xchg dec mov sbb mov xor nop lcall push or mov imul pusha int3 mov dec sub cmp pop or cli xorl pop jb jnp lods sbb mov fist xchg jne stos push xchg mov andl mov jb (bad) hlt push int mov xlat pop add bound icebp add cmp mov sbb jnp push jl in xchg xor (bad) rorb cmp jae and fildl jne insl inc insb mov mov sub bound mov mov test or push ljmp out (bad) ljmp jo cmp insl adc negb shlb or pop js and testb sbb daa outsl add dec pop jmp test push mov addl rcrl sbb xorl jne fst notl fadd loopne scas mov mov imul mov js fmuls std (bad) cmpsb pop les data16 fidivrl int aam (bad) ljmp stos cmp dec aaa cltd jae lcall xchg or cmp dec aaa mov lret ret dec daa lds and inc (bad) mov mov or pop cmpsb mov out pop mov push ja icebp roll pop stos pop ret push mov push mul dec cwtl lret int mov movsb mov aas pop lea and inc and jecxz xlat xor and nop adc imul xchg fldl dec dec dec fadds test in jmp je cli pop imul cwtl outsb enter loopne (bad) fistpl mov or jns arpl mov and adc test mov xor scas jns push pop setge or lret add testb sahf and push andl ljmp jno xor xchg mov mov pop xchg es adc push cmp sbb mov cmpsb not cmp jae cmp lds xchg push stos cmp xor add iret out push mov jnp pop loop push (bad) pop (bad) out xchg shll jb pop push xchg lods iret mov sarl loopne add in dec icebp or push sti mov (bad) sbb cmpsb or fidivl push lea cltd cs cmp dec out adc les hlt mov mov jg inc idivl and mov fcmovbe cmp (bad) jmp enter cmp test int3 add lret outsl sti ss rolb adc imul xchg lods pushf jp xchg dec push xor addr16 adc mov add lcall mov pop dec or or mov clc xchg (bad) jp jbe xor jne or sbbl jmp xor adc mov hlt xor stc shlb (bad) push or cmpsl sti lret scas mov adc sub fistl ljmp loop pop xchg fwait (bad) pop imul push out push mov xchg add dec add fstp in ret pop sub pushf push lret rorl xor mov rorl nop xchg loope cmc outsl mov adc xchg subl xor in adcl pop sbb inc in aas dec jns sahf xor push push mov mov (bad) insb mov es sub repz xchg mov cmp arpl movsl xor jae push fildl adc xlat jb ja jp xchg sbb lock jg mov movsb mov or mov xor adc std push (bad) lods cmp jnp lret lret ljmp lcall jae jnp test (bad) jge push mov lcall cwtl inc popf mov cmpsb scas inc rol mov (bad) jne shll pop dec sti data16 sub push jl push lret stc add sub push lea dec adc inc data16 cmc js lret mov movl and ljmp insl push mov xor roll sub or subl jle inc push sahf push push mov mov fsubrs push jno ret pusha ja or adc lahf pop jp cmp loopne sub fisubr ret cltd or xor lods insb insb xor lds xchg sbb out in adc mov bound ds pop cmp push shl jl push iret ljmp (bad) fnstcw hlt adc (bad) lret imul dec jecxz sbb push repz mov or leave inc call sbb cmc lcall mov (bad) lock adc mov xor (bad) sti outsb mov aam xchg sub pushw lcall movsl out pop mov add in dec rolb push fsubrl call pop dec xor mov outsb popf imul out hlt andl jnp pop gs sahf lret lds adc addr16 test pop jp cmc mov pop (bad) insb sub xor add or fstpt push test aas xchg or push pop loope mov into add mov fcomps push mov lret popa cltd sti mov pop repz sbb jmp sub (bad) jbe les and daa stos inc xchg outsb inc and lret mov push xor daa gs adc fisubr in sar pop push outsb push inc fwait js mov adc adc add ret sub dec bound lahf or mov loopne cmpsb dec call int iret je aam lahf mov mov (bad) ficompl sub sub push mov sti sub sub aam pop adc xchg js lods mov test or out test inc mov xlat xchg dec jmp aaa out push or sub fst aad ljmp cmp jge sbb int add inc push pop dec mov fsubrs cmpsb test push movsb int mov cli ss mov inc cwtl inc xchg hlt lds data16 cmp movsb pop sub pop cmp sbb xchg and inc mov mov add clc lds jg mov testl ds mov out or sbb and adc and ret xor das jmp mov sti add stc fdivrs inc inc (bad) int push pop or xchg fistl add and orl stos push pop divb pop xor in sarb rclb or mov mov aaa and dec gs repz dec mov scas or daa enter mov xchg shrb std fldcw jbe or mov pop roll mov dec push daa fucomip call sbb sbb cmpsb xor cmc pushf mov jb cmp mov lcall fs push xchg fnstenv aaa jns xchg dec pop mov rolb es or fimul dec (bad) or cld sbb flds and push mov gs aas lcall out mov mov mov xor and out mov lahf mov add ss xor cmc dec xor call or aaa sbb sbb xchg movb or sub sub in pushf xchg fsub xor push lock mov xlat adc jge nop mov mov push and pop ja xchg jp pop pop int3 xchg es xchg rorb mov stos push ficom cmpl or fsubrs (bad) sbb cld fisttpll fwait add insl neg mov cmp fadds pop fidivr pusha gs (bad) lret mov cmp adc (bad) jno add stos lahf addl pusha pop out pusha test loope and or loope into sbb ds push adc sub pop scas add imul out add adc lret pop jae xchg outsb mov (bad) jno aad mov js insl call aam das stc xchg clc cli out add out popf (bad) push push lea flds mov adc jnp push lods sub enter jecxz inc and test sahf add pop loope push mov jg in jns and imul bound out pop xchg rcll mov sub sub test jb mov pop lret sti xor mov (bad) outsl jl gs cmpsb jb xchg out test cmp sbb or sub pusha and or call ljmp xor nop add cld (bad) xchg jae (bad) ja push sub ds add mov stos fimull enter out rcl add cmovno pop rcl add and xor add xchg ror gs add push sahf cmpsb insb adc in dec add xchg iret sbb mov (bad) mov imul outsl xchg ljmp lea mov sarb repnz mov leave clc ds mov jp add lock imulb and movsb push pop divb mov lods jae mov adcl mov (bad) stc nop push xor mov shlb adc (bad) sti pop cli cwtl pop cmp and pop inc (bad) dec mov in pop dec js push (bad) cmp mov aas pushf pop xchg in lock adc cmpsl pop pop push pushf dec xlat jnp xchg push aas clc pop int inc cmp rorl test loope mov lods cwtl loope fsubrs add inc cwtl xor hlt xor bound stos aas inc cs aad push (bad) pop packssdw pop push cmc inc xlat cmp movsb xchg rclb jne dec ret jne mov inc xor mov xchg aaa hlt or in pop lods fisubrl orl sahf add and adc xchg and aad lcall push nop mov mov testl scas idivl decb leave lods cmp jmp imul or (bad) xor or adc dec cwtl jns mull cmp mov scas aaa popaw repnz repz flds test push fimul scas mov out lods cld sbb mov repz inc push xor daa lds (bad) (bad) pop outsb pushf popa xor aas fbstp andb mov bound pop mov cmp adc mov in es lea mov xchg movsl stos inc mov pop cmp sbb aas xor pop es xchg xor jns fmull in xchg (bad) ja fdiv fcmovnu stos in adc aam (bad) and or js out dec loopne mov add sbb lods cltd dec mov nop dec or insl imull sarb cwtl (bad) dec (bad) mov loopne pop (bad) fistpl out xchg xor and sbb cmp lret xchg movsb roll mov int js add lcall addr16 or pop push lret jne inc ss loop cld imul stos (bad) aad jmp lods xor lret inc into (bad) cmp imul sub xchg mov ss popf inc repnz mov (bad) pop jnp stos push sti testl sub shrl push xchg or and imul jp clc pop push movsl aam daa (bad) sub loop dec je sbb dec sub dec in mov pop mov fisubl outsl push xor add mov rorl dec pop xor mov shl aaa fisubl pop inc adc ja add cmp mov or (bad) sbb sub and iret xchg and dec out jge pop mov in mov scas iret mov xor fistpll movsb mov pop fcomp and cmpl es sbb sbb fidivr inc insl dec popa inc insb loope es cmp jbe fsubl inc dec adc xchg notl daa mov popa lcall lea mov (bad) fs aas data16 jne les (bad) push (bad) mov pushf adc jmp pusha cmpsb jge inc (bad) sahf stc mov dec int cmp test mov add das and xchg stos push xor ret adc test (bad) mov add in jl inc daa xlat sbb cltd neg sub cmpb repnz dec in les and pusha sbb dec xor inc sti lret mov out inc cld cs lret (bad) (bad) xor xor mov add cltd and cmpsb adc into cld test or or sar sti jp mov js mov xor dec icebp cwtl sub lcall mov fs outsl adc pop (bad) mov hlt mov sub fsubl dec enter sbb adc ffree daa inc (bad) mov xor (bad) pause int3 and mov xchg test leave int adc mov ficomp mov nop leave mov aaa jb cs push pop shld pusha out addl out dec mov pop outsl or cmp cmp dec ljmp aas shrl and ret mov loopne rclb loope sub xor test and mov das xchg jns aaa fldl2e mov jae push sbb pop out das repz xor mov insl and pop xor arpl insl jne outsl outsl xor jg lea in pop int movsb or xchg mov arpl std or pop incb imul insb mov aad cmpsb cld test add outsl sub std cmp adc mov adc mov jmp xchg or cmp push nop inc mov xchg add test dec int adc rorl popa roll (bad) jnp pop dec ret cmc mov cmp out mov or nop push gs sahf and or mov xchg pop xlat js pop test push cmpsb stc jle aas or imul fidiv mov sub hlt pop and ljmp loope xlat mov aad call pop ds xor pusha adc imul xchg pushf cmpb xchg or scas (bad) iret pusha les push dec xor pop pop rorb jle xor pop in and xchg hlt fildll (bad) jp out pusha or add xlat icebp arpl (bad) ljmp cmc xor lret inc mov cs xorl push inc lds cmpsl push mov lahf adc xchg mov je sahf fist pop ja cmp push fmuls scas fdivrl (bad) call push and push mov (bad) mov aas mov lods stos sti dec sub subl xor dec std addb subl sbb cmp into xchg shrb and adc inc sbb sti push scas das sub nop lahf mov das (bad) pop mov outsb pop repnz dec mov jne mov and aaa push pusha or add les stc loop sbb insb sahf sti adcb loope (bad) out lods and pop int3 mov fwait mov out mull xchg push (bad) xor (bad) push push mov xchg dec xchg into mov sti ret arpl jns inc adc (bad) into mov pop ja mov xchg dec and jb pusha pop popfw or pop xchg andl scas (bad) cmp jns bound sbb aad and sub add adc dec (bad) (bad) negb lea pop and jmp stc loop in push sub jae jae xchg mov jl pushf sahf int pop (bad) into push das adc mov arpl lret fs (bad) dec sub hlt mov sahf or in pop and shr mov imulb jb cmc in loope repnz push (bad) cs sub adc mov pop xchg xor jnp dec inc jo lret bnd ljmp stos xlat and xor mov aas xor fidivrl movb adc xchg cmp and mov cmp push lcall (bad) ds sbb pop int3 inc add xlat roll jecxz gs pop int sub ljmp xorl xchg movsb pop lock mov fwait mov cmp int3 aaa out mov xchg cmp in jp cmp out xor cld adc and clc lret xor cmp arpl ret dec jnp loope xor mov mov jle jle mov xor push mov mov insb xchg outsb pop mov jns pop gs (bad) sub ljmp push inc rcrl cmp in subl mov popf icebp mov arpl cltd inc aaa mov imul xor cmp mov add inc mov dec lret and sbb dec push outsb mov iret arpl push xchg inc dec cmpsl add xor ficompl sbb out lahf ljmp mov pop sub or jge jo cmp mov mov idivb xchg lea jne or mov mov push adc in loope mov jbe stos addl imul add pop pusha pop fucomi and xchg pop jb jle fidivrl pop ficompl loope adc add (bad) out aaa loope cmpsb or mov pop and sbb fcmovbe rcrb test cmp sarl sub incb mov dec fucom mov fisubr or xchg push lods cld (bad) movsl cmp sub or in xchg lods call mov push lcall adc jge push push mov dec add sub pop es sbb xlat in ret stc push jno adc sbb adc (bad) outsb or loop jae and imull push add fldt dec inc fwait and ljmp dec (bad) int3 test test mov jno int dec es jmp in cmp setnp ljmp shr cmc cld in fisubl subl aaa imul pop xor fnstsw (bad) mov sub mov push and (bad) jo loop in push loop js sub fisttp push popa clc loope jbe outsl push rcll cltd sub sub repz insb inc add ja test adcb movsl cmp mov test push (bad) shrb jo lret std mov push cmp sar inc mov or fistl fldenv leave inc adc mov mov sub in mov xor jmp es pusha xchg aas mov push and loopne inc aam out mov in leave mov js lahf cmc cmp or xchg push xor or xchg xor popa adc test aad xchg sbb sub jne inc push outsl add mov mov mov (bad) bound divb inc sarb sbbl mov fnstcw leave pop cmc insb out adc xchg outsl mov dec sbb mov fimull jo pop mov les pop or sub das sub es ret movsb push cmc push mulb pop sbb cmp cmpsl testl adc sbb sbb lds jnp and mov outsl jns in mov pop test popf lret shrb push sbb int add testl mov sub sbb inc in jns bnd scas sub and or andl test std and jno loope jno xchg dec (bad) inc dec fnstcw dec pop iret pop ss fsts mov add outsb imul and stos ror out popf mov fistpll and xor ret fsubl cs lods popa in mov cmp icebp enter dec das outsl loop mov sub repz fcmovnu test movsl push stc push stos cmp dec sbb cmp xchg loopne mov inc nopl pop sub inc jb subb in call xor mov adc or movsb sahf push and mov cli cmpsl les sub test int3 js jmp outsl sub std and jbe movsb (bad) in sbb je mov mov xchg scas mov adc fmull xchg sub cwtl pop test jl mov add mov addl mov jg push shl and iret mov cmp ret mov mov and stos rolb xor jg mov sbb cmp sbbb jmp int cmpsb xlat mov dec jo sbb mov lock (bad) stos frstor loop scas lcall mov mov js xchg and inc sbb pop push mov lods call clc fsub dec ret imull mov lret jnp dec fwait cltd sub nop mov fiaddl push aam loop test sar ja bnd leave push xchg pushf aad jg cwtl mov icebp int pop ret sub out jl imul jg jns mov movsb aam sub ja cmp cmp jp jae subl mov add add sub test (bad) pop fwait push int sub sub or pushf cmp ret mov jb sub lahf mov aaa outsb (bad) je nop test xor std dec inc gs jne pop das mov adc (bad) leave sub push xor sub mov mov push loope fldt mov fimul sub jl lahf jp popf out mov popf jg cmp jmp jmp pop and mov or sahf bound jbe or fwait stc push mov cmp or jbe mov push ja outsl or jp call cwtl lcall icebp cmp movsb xor cltd pushf xor sbb mov js imul xor das loopne repnz or jge mov cltd in dec dec fsub addr16 (bad) call jecxz mov and push or lea iret jno push sti (bad) shll add nop adc movb inc sub sbb sub mov cmp mov inc mov xor pop sub sahf out clc enter xchg or lahf mov into sub nop and out xlat push or inc movsb (bad) xchg nop loopne push notl cmc jnp sub dec jns inc ja jmp mov xchg loopne xchg sbb test out mov push or mov mov stos xchg cli pop or sub popa push pop lock fsubrl and push in js leave mov (bad) adc xor dec dec dec lret sbb dec popa rclb xor and ja bound nop call cld cmp cld add push out mov add dec add repnz outsb (bad) rorl inc ljmp push sub aas add xor jmp stos outsb push and arpl xchg cli or les xchg loop mov jl andb fwait das test addr16 or ds lret mov pop mov or and nop insl in (bad) sbb push jb pop push out in cltd movsl movsb push pop inc stc notl xchg clc rclb popf fisttpl int mov xor cmc addr16 orl mov loopne inc cmc mov mov xchg rcl mov roll das sahf (bad) pop or pop stos or and push rcll inc popf cmp scas cmp stos mov std sahf push clc inc cmc subl fisub jmp inc lds mov add cmc js out (bad) cltd cmpsb sub mov bound xchg cmp adc es popf sbb cmpsb roll or mov fdivs loopne icebp (bad) add daa clc mov stc gs popl (bad) dec scas jle in movd pop xor rcl idivl cmpsl pop mov iret out dec and xchg fsubrl int lcall into in in cmp mov add aad lret call ljmp lret sarl andl mov mov mov mov push nop or push arpl pushf sub inc mov cmp insb push add (bad) fmul dec pop push iret cmp fs movsl lahf aam cli or repz xor mov add shl cwtl pop dec adcl iret adc lds icebp mov lods inc add adc in xor bound pop adc xchg mov pop pop fidivrl jecxz xchg loope jle cmpb loopne scas clc or push adc mov lret lods dec mov stos mov push cmpsb mov stos out out sub push add jge cmp inc jg mov sub ss jae jmp fimul daa pop push inc push sbb mov mov std lahf fisttpll into (bad) scas lcall inc dec sbb mov cmp sub pusha ljmpw adc in (bad) xchg hlt fimull mov nop mov mov js repz jecxz mov lcall mov iret pop mov add fistl adc stos (bad) jmp add (bad) sub popa pop leave dec ds (bad) outsb stc mov xorl psraw popf pop fisttpll pop fstpl add pop dec inc sub aam in push incb cmp xor pop jne std mov ss into and rclb (bad) nop bswap xchg andl jl shr sbb and adc roll dec lcall (bad) jge stc dec pop das mov je push cmp adcl inc (bad) sub (bad) popf xlat sbb and daa lcall or ret cmp addr16 pop jb xchg dec ss xchg pushf push dec sbb inc or out test rorl jno (bad) out adc aas sub inc mov data16 pop cmp scas mov pusha mov pop xchg les insw push jbe bound nop and repz lea push pop sbb outsb jl sbb and push xchg cmp cmp cmp scas and sbb cmp fwait jnp cmpsl cmpsb fs es push jno mov xchg rorl push cmp sarb xchg scas mov push inc inc fnstcw cmpsb jge xchg out lock (bad) lcall fdivl push call test jge mov movsl and dec xor jle outsl sub loope or push mov jmp ljmp sbb dec xchg jmp pushf jae or fldenv repnz pushf insb ja in pop cli xchg ja mov sub and jge enter mov inc inc jge xchg pop (bad) int imul push or loop (bad) lret sub jp mov lods lods jno dec lcall xor inc inc cmp push inc or in or push dec push jmp sub js iret lcall js mov icebp or sub push sub xchg add mov (bad) xor push std push pop ljmp or pop xor jae nop or dec ljmp xor clc cmc jecxz add xchg pop data16 loop or mov dec and out mov push cwtl sub inc lahf pop popf jbe pop shl lcall jae decl movsl adc jno push dec sub mov mov pop dec jae aad call lcall rolb sub mov xor mov or mov push cmpl or inc data16 stos pop sbb dec loopne in mov pop pop outsb add jecxz cli es fwait dec in dec scas mov add push (bad) js lcall cmpsl scas out push rcl jmp imul mov popa jnp rep jbe pop aam gs out sub aad push imul mov (bad) xor sub mov aad loope (bad) cld push xor test bound mov ljmp mov sbb add lret pop sbb lret lods cli das stos lahf aad pop insl xor pop enter inc xor push lcall jg stc push xchg push cmpsb pop sti xchg negl lods push jmp insb pusha jg in inc pop mov pop xlat push lea push pop stos mov mov mov bound mov pop cld mov jl inc and call jge mov movsl pop sbb lods ljmp dec sub xchg xor push mov call stos insb fs adc ss test (bad) jp clc addr16 xor push dec outsl mov sahf pushf mov dec push push fistl jge flds mov dec push mov mov push cs loope xor mov mov mov jns mov cmp enter inc mov and into cmp fs addb in adc or gs pop pop rcrl test and cmpsb ljmp outsb jo movsb in push hlt hlt xchg and mov out test xchg mov push cmp fsubl rcrb fsubl mov loopne mov mov imulb lock out sarb jle jmp insl inc repz ljmp mov rorb mov (bad) mov push mov ds xchg mov push cs (bad) into sar push push int and std cwtl push jge out push addr16 imul ret stc sub ljmp sbb push mov xchg or pushf jnp fndisi(8087 movsb jle cmp pusha mov mov lret push cmp nop leave popf xchg jns jnp outsb jle cmp cmp add and popf scas pop movsb bound fcom dec out outsl fwait mov adc mov adc add fcmove push mov ds add aam adc lock int3 add popa fcomp inc inc es (bad) jle inc ja insl push dec or dec inc jg jg cmp popf outsb or pop push (bad) xor loope xor mov xchg cmp iret out push cmp hlt daa out pop pop pop in repz sahf pop pop pop push lret shrb (bad) jnp mov (bad) lret jecxz aaa sub enter addr16 mov mov push add inc stc xlat insl xchg xchg lds xor dec jo xchg jmp pop jecxz or add mov jb repz test (bad) xor (bad) sbb mov xor adc test sbb xchg xchg test sahf push cmp xlat xor out inc sysexit test (bad) pop imul push mov test popf mov mov xchg xchg push insb hlt inc int in (bad) fwait xchg sbb or dec or imul shrb add movsb sub ret shrb mov test dec outsb bound insb sbb cmp or sbb jl add inc xchg cwtl xor or jne fs push scas pop push data16 aaa sbb scas sbb jl fild jbe adc mov dec out lock jle (bad) mov sbb stos push xchg dec jmp lcall leave int jb mov jb inc mov cltd rcl pop out and cs xchg fnop pop push mov jmp aas nop/reserved cli jne sbbb push in mov aaa cmc mov lods push mov adc subl mov and xor mov (bad) push pop mov dec cmp in popa and or js ja pop jnp jge dec pop jmp jle cmpl lcall lcall rolb jnp es lahf ret jp push out pop fistp inc mov pusha add cmp xchg lret add mov add pop xchg es pop dec es mov cwtl jae popa inc pop int lea cli and xchg or aas xorl fwait dec adc sbbl push enter vmovsd lods fdivrs test out mov mov add pop cmc cltd dec cs lret in pushf mov mov sar fcmovu mov add cmp jge pmuludq lea mov out test insb sbb and sbb adc insl test or mov push loop loopne sub imul sbb xchg not dec insl jge and mov std pop inc sahf into stos sub (bad) fwait jns jns pop jle scas jns lock mov mov scas cli fs mov pop idivl xchg gs cld test ficomp imul rcrl inc divb cmpsb mov pop cmp mov push cwtl mov jp rolb dec repz (bad) push cmp mov inc mov pop or mov xor arpl cs or push (bad) out xchg lcall arpl imul (bad) out dec scas or cwtl inc cmp add gs adc mov inc arpl and lahf ja sbb mov (bad) call cmp out xor sub mov fisub ss (bad) adc xchg and lret inc insl leave test adc enter pop mov mov cmpsl pop arpl (bad) sbb aaa mov jo nop inc pop mov test jbe mov popa (bad) mov mov sub in ss hlt imul xchg xor sub lcall nop int3 std sbb fstpt dec adc sub mov cli sub and lret jns lret loopne or jl xor mov dec push inc sub data16 test dec xchg jle lret sub outsb iret lds es lret fcoms adc les movb push xchg dec cmp xor cmp xor dec out std out lcall testl es inc xor lret cltd and mov xor sti lahf call sub sbb xor xlat sub data16 add test pop xchg and xorl (bad) lret ss insb mov mov add jnp push es stos xchg hlt cmp and sahf xchg (bad) mov xchg or shll addr16 dec jecxz lcall mov mov sbbl ret out adc stos movsb test je mov cmpsb xchg push (bad) pop adc scas mov rolb pop mov inc xor cs aas or push dec cs cmpsl into cmp and mov adc jmp mov or out jnp,pn and notb movsl fs pop mov and push pop aam xor mov xor fcmovnb lock fwait (bad) mov sbb aaa scas icebp (bad) (bad) hlt add mov (bad) mov lds outsb int3 pop sub inc xor jns fdivl push push mov sbb mov xchg push aaa dec lcall jns cmpsl sub lcall push push push xchg push mov sbb test push adc icebp xchg repz dec lret or mov pop fnstenv pop mov dec or dec push push and add out insb sti lods sub ss xchg or subb int ja mov push sti les push rolb imul xchg lahf mov loope add jns push xchg mov clc movsb mov pop xor dec (bad) sahf movaps pop cli mov inc sub clc das negb stos enter push out (bad) jne xchg adc sti pop adc pop es (bad) xchg lcall and nop xchg and repnz pop enter mov cli push fistl mov ret jle inc fwait fs ljmp in in cmpsl fldt daa into outsl push xchg and iret dec fiaddl push lods in lods aam prefetch popf sbbl jns xor inc adc push hlt xchg outsl jo xchg loop mov cmp in pop out hlt lret test cmpsl popa daa hlt mov adc push out jb imul aad push mov fs add mov ret (bad) sub mov sbb inc cmpsl xchg push mov mov push xor mov mov add popa jg lahf jmp fwait insb out imul rcl movb add faddl mov cmpsl or pop mov or fstpt lods inc (bad) mov mov roll in adc fsubrl insb lods add cmp cli movsl and mov movsb xor or insl jmp jno push push out aaa out dec shlb stos pop jp icebp (bad) xchg cld mov xor dec pop outsl mov adc dec rcrb out in adc fistl mov jle cmp dec bound sub sub pop sub aam mulb lret insb test pop ret or lock lret push pop mov mov out sbb mov in adc inc xor dec loope cmpsb fsubr push add jl icebp faddl pop clc push cltd mov jl inc fadds jecxz pop lods cs xor xchg lahf (bad) clc jo (bad) aad add sti sbb sub sub jecxz je pop push push xor push cmp cmpsb push (bad) sbb sub pop popl xchg add or jno xchg cmp cmpsl sbb dec fldt js mov cmp cmp (bad) rcrb pop or xchg cmp sbb adc sar adc nop in adc or in insl add cmp pop (bad) aas mov mov pop ret ja shlb shrb jecxz adc hlt jge and lods mov inc sub aam daa xor xor loopne shr pop (bad) pop into sub dec cli outsl pop xchg pop xchg mov jo imul out mov inc jmp hlt dec fcmovb test mov xchg cmp jecxz xchg adc and sub lret push inc add dec sbb imul push daa rol test in add imul adc cwtl pop cmp lcall sub outsl sbb (bad) adc (bad) mov ljmp xor add je cmpsb push sbb lods out ret idiv mov xor xchg in sub repnz daa shrb (bad) in in xor int insb stos lea adc push xchg mov add fwait movl (bad) mov pop push fistl daa xchg sub xchg in mov (bad) jecxz adc out mov inc daa add stos ljmp ss movsl sub adc daa sbb pop push sbb jo fst add clc cmp jo mov cs lds enter dec movsl fmulp inc jl push or es sub (bad) aam in mov ffreep (bad) fcompl pop jg pusha scas xchg mov fsubr into ljmp in rcrl loope in in cmp ja (bad) fsubrs popa ja iret cmp add mov stos rorl out jo clc mov push out mov dec mov sti es or xor mov mov outsb iret cmp and loope cmp mov fdivs ss lods ljmp (bad) and scas cs xor jl xchg mov dec outsb pop pop pop or push mov outsb rcll jb and int3 lea ja mov jo xchg cli mov roll xor fsubrp pop mov sahf out push push mov sbb cmp push or pushf ljmp int sbb ss out (bad) shrl test mov cmpsb or ss push scas loop mov sub dec push out test cmp push or push je fs clc ss aam les repnz out gs sbb pop sbb push imul cmp cmp stos movsb xchg ljmp sub mov rclb idivl aam push mov add pop push xlat jb jle ret lods insl sbb mov mov out mov insb daa bndldx imul in mov in xchg mov mov aaa mov xor ja (bad) (bad) mov insl std push xlat adc ljmp dec jle popa mov bound (bad) xchg add stc (bad) pop xor push mov mov cmpsl push scas inc sbb jl push daa stos inc movsb gs loope aaa loopne adc mov xor std jnp (bad) or ss (bad) aaa push and stos inc and aas mov mov popf dec adc (bad) dec sub pop orl push mov lods stos mov popa lock (bad) mov cwtl adc stos iret push inc popf jmp or (bad) adc and jae icebp cmpsb inc loop cmpsb cwtl push mov jne and enter adc or cmp fstpl mov or and mov dec xchg lret mov pop push adc sbb or fbstp mov mov enter movsb inc mov xchg dec mov outsb les mov pop jl call xrelease cwtl jne cmpsb cmc add jb adc sub xchg js loope sti or enter loope lods mov sbb mov pushf rcl mov sbb pop nop repz std or icebp pop jno fcmovnu pop mov mov adc outsb jae inc arpl (bad) mov cli xchg int3 pop xchg and ds and cld inc in repz leave mov arpl jae inc sbbl xchg int call xor push dec push sbb mov (bad) or getsec into or ficompl mov or loopne pop pop adc inc (bad) les jp sub sub fwait out push mov mov jp addl jg dec xor adc pop pop or sbb (bad) mov into test push mulb push add cs xor adcb push inc or imul test sti and repz int3 push outsb pop mov or cmp xor sbb push roll or inc leave sti add xchg stos fldt das jmp in jle dec loop push (bad) mov in add inc pop cmp sub push movsl and enter in repnz mov rorb nop std push into push (bad) mov jp push addb ret lods pop lcall lock sbb adc mov adc push mov data16 stos jb push jo xchg pop je mov fs js mov cmc cs xor or and inc cmp sti xchg cmp push cli int3 cltd aas mov pop jp arpl sbbl sub jae insb pop fidivrl out adc dec or mov inc pop xchg movsb mov dec dec addl and dec mov faddl pop (bad) mov cmp sti mov (bad) std sub and and pop push push int3 and (bad) mov enter je rcll push mov je mov sbb negl ja sub stos stc and mov mov pop imul push cmpsl mov icebp stos pop mov mov nop inc fcmovnbe dec outsb movsb test sbb push or sub inc mov dec jge dec stos cltd mov aad sbb mov or sub jne je jae xchg push adc movsb stc xor add test std sbb lods pop (bad) gs xchg xchg jnp jo scas pop sbb es popf imul jnp inc enter imul (bad) gs scas xor cwtl push loope loope sub sahf or jne std push dec mov adc dec dec (bad) stc insl stc sub jle jno jns (bad) mov rorb dec je push xor dec add or push out jb movsl xchg xor test pop lcall daa mov ficompl adc fdivl mov adc sub mov fisubl arpl sahf inc movsl and jb fdivr mov xor mov shll movsb add ret and mov jae and lock mov jno xchg scas add shlb lret inc or pop pop dec sbb cmc pop clc outsb xchg inc push dec mov in ds or (bad) cmp (bad) push fisttpl mov lods rol cmp fstps cld out roll cli cmp (bad) sub notl mov pop push std pop sub sarl xchg ret dec and jle les out push and sbb mov in movsb int test cli cmpsl mov ret or icebp pop and mov sub sti fmuls push pop adc push and out add mov stc mov daa mov (bad) lcall inc or push xor cmpsl cmpsl push cmp sbb sbb dec in add fs cltd pushf (bad) out mulb (bad) pop out test xor pop aad push into idivl rorl fsubrl pop pop push or nop mov inc mov sub jno out insb dec mov mov imul pop insb xchg ljmp mov shl (bad) sbb lock imul push (bad) xor jb mov lods rcrl mov lock pushf add adc mov insb fstps bound xor push data16 push adc repnz push push cmp in std adc mov ja rorb adc sub jnp mov xchg jno and imul stc dec fstl and cli (bad) loopne cmpl hlt xchg xor sub and aam outsb add push pop xchg push sub dec inc scas jg mov add andl sbb xor dec lock mov xor nopl dec js mov adc ret push push adc jb popf out and lea dec leave outsl lret (bad) jns mulb lds loope js cmc sbb popa jno lret lods in inc fmuls (bad) jg fidivl js fisub hlt (bad) imul sub repz mov pop in out loope inc adc shll pop mov cmp and and (bad) xor jbe arpl sbb mov jp push fnstcw mov aam and lret xor cmp sub mov and or loope out ja and test aad loope shll jg out cmp (bad) leave fstps xchg xorb aaa pop int3 std lret sbb push dec daa fsub sbb stc dec les or loope pop arpl cmp mov mov xchg mov push js pop jg loopne in jne movsb mov ret shrb push sub rcl jnp mov mov pop ficomp mov ljmp and pop xor inc inc in dec jle add inc ljmp push lea cmp cltd inc dec imul adc bnd js push adc and adc scas popa mov sbb xchg jg in mov icebp sub xlat ror push pop cwtl inc dec pop rorl daa jl in pop push xchg mov test dec push outsl mov sbb ja div (bad) mov pop jns paddsw xor push push lea sti push adc sbb pop (bad) jecxz cmp xchg cmpsb push adc and in je inc adc xlat adc xor in dec (bad) sti fdivs xor mov pop or cli imul mov cmp fst enter inc adc pushf sub pop xchg and mov cli mov mov cmpb mov (bad) xor aaa adc mov stos dec xchg pusha mov cli int xor mov mov and adc lock jo mov push xchg leave movsb sub mov adc mov sahf mov stos lock test lods push and fisttp ds je mov jnp mov sbb and or (bad) out pop mov stos sub repnz dec (bad) test imull mov sbb andl cmp sbb andl fcompl and lret mov enter sub lcall fbstp repnz pop adc mov cmp jae ja inc (bad) out (bad) jae ficompl and out sahf mov ret jbe negl mov mov sub sbb push cmp out addr16 clc sub fwait pusha inc jbe sbb inc cmp mov jmp scas fldcw xchg pop test sub cld xor or push dec pop divps loop sbbb (bad) dec or lret (bad) jle out xor repz stos cli cmp cmp cmp stc jbe ja loope pop popa mov movsb cli xor call addr16 or leave xor leave aaa and je lahf es push (bad) jle fcmovb sbb ds lret dec in nop xchg mov mov lock mov jno popf cmc (bad) jle scas lcall repz mov mov les fcomps cli add add nop sbb ljmp push pop xchg lret andb and das dec stc popf xchg ds push jne and mov ja subl push xor lcall push fist fistp jmp out scas sub jnp or or inc test jg outsl sarl fistp frstor loope mov outsb in sub call xchg jg lahf jb push ja inc popa jp mov or ret nop inc aam sub sub pop sub test sbb insl ja push cmp jnp subl pop adc sub inc (bad) xor jmp jge iret rclb cmpsl cwtl cmpsb (bad) mov lcall dec cmp sub mov lret popf inc scas cmp aam mov clc sbb xchg call lock jae icebp cli xlat pop lea push pop adc cmp arpl add lahf jb and xchg mov hlt jb mov pop (bad) dec sub enter mov lods xchg pop push pop lret or lods add inc std loop dec shrb pop sub add push lcall mov mov loope mov in leave mov (bad) jnp mov or (bad) mov cmp pop stos test ret dec test dec jne mov inc mov pop js ss dec arpl push repnz dec pushf jle lcall push rclb (bad) pusha ror jecxz pop lods push in into mov clc inc mov mov loopne lcall bound sub cmpsb dec mov stos scas or mov call xor push int mov pop cli mov mov sub inc int3 mov leave jl test mov push ljmp xor cs sub (bad) cmc mov jg push dec aas pop lahf repz xor sbb ret (bad) push mov or add fs mov js loope xchg sbbb cmp xchg fs btrl loop or and or lcall imulb mov pop xchg push mov sti jg call repnz sbb mov push adc inc xchg loop push dec sahf enter in imul push fstpl je pop (bad) repnz push xchg ljmp push inc mov sahf push xor mov cmpsl fisttpll mov enter addl std mul scas clc daa movsl cmc enter xor add cmc lods mov je (bad) cmpsb iret sbb mov in jnp or ret mov sti pop mov pop aas mov lahf jne xchg stos rorl rcrl push loopne cltd jne stc pushf pop out pop test xchg jne cmp mov and out pop and cli mov test push imul arpl and add inc xor gs lret ds movsl stos ljmp stos adc lret repz rdmsr mov lret repz mov dec or rcrl pop (bad) aad xchg cmc pusha add std jp cmc inc adc push pop inc les popf (bad) movsl mov mov jl ret pop clc cmp movsl js les rolb xchg mov je fstpl popa sbb leave or xlat push jns lcall pop and xor es (bad) xor push or addl mov aam stos pop popa decl fnsetpm(287 cmp jae sbb mov sbb (bad) push dec cmc aam outsl mov das cltd pop push shrl sbb mov push adc test rcrl adc cmp sahf mov cmp in lcall lret mov mov std clc jno jae in nop push sbb mov clc push bound jo pusha shlb inc (bad) sub cli adc scas fucomip inc std stos add push adc mov pop (bad) and and mov inc cmpsb mov rep in mov (bad) pop xor pop mov aaa and adc xor cld rep pop sti les and fnsave das jge call into rcrl add lods (bad) scas adcb sub mov lods dec aaa leave jmp pop movsl (bad) bound cltd movsl inc inc jmp loopne or adc jnp adc pop ja xchg jo mov dec adc data16 stos xor jnp pop rorb cltd out pop rcrl xchg mov fs fbstp push leave jl inc ja dec je fistl insb and jne cmp sub pop movsl lods cmp push cli sub cmpsl mov sti jo sub les out cwtl ret push scas mulb (bad) jbe pop ror sub loope ret (bad) mov outsb mov xchg mov sub in mov mov sub pop nop movsb pop xlat push cmpb cmp repnz scas mov or and xchg xchg jae jecxz xlat lods pop dec or nop mov pop push lcall dec loope jbe push jns dec popa stos data16 sub fnstsw jge jb jp sub loop sbb int3 ljmp push jb in insb lea push push dec nop sti pop out int3 xchg and adc mov mov push pop mov sub mov lret int3 and ss push in jnp or loope ljmp idivl test or addr16 stc and test lcall mov (bad) imulb xlat popa stos gs jg mov sti dec xchg and ss (bad) divb (bad) cmp pop repnz adc jle pop adc rcr jl int push pop dec repnz es cmpsb add and push imul sarl test cmp loopne and cmp mov arpl jae mov or mov pop xchg and pop enter push sub dec dec aas sub data16 sub sub (bad) cltd imul rorb movsl mov sarb adc lods push pop scas test xor div sub mov jmp sub outsb cmp ja jmp call pushf popf call cmc add xchg push inc test jl mov lea pop pop xchg xchg in addr16 and out sub push mov sti mov push stc pusha call fbld roll rcl inc cmp int3 or flds inc (bad) mov jns ja in sub and push jg (bad) ljmp cltd dec xorl add cli jnp cmp inc xchg mov pop sahf inc xchg adc dec enter cmp test xchg pusha lds (bad) push test jo xchg int3 pop das push icebp out push fnstcw mov xchg pop loope adc push mov lods mov outsl stos aad out mov mov popa pusha adc add inc es push lds push ds dec cmp fidiv add jmp movsl scas fsubrs rolb pop stc ja aad and clc sbb ss or lret sub xchg push (bad) mov mov jo xchg sarb das gs fisub inc sub push dec pop push lods mov out mov rcrb ret or fwait cmp fisubrl fldenv sub pop push sbb lret adc movsl push sbb aad jns fisubl or and ret push dec iret xor mov ljmp push fldz jo and and popa adc mov imul scas push add inc inc xchg addr16 leave aaa sarl dec jbe out xor les mov sub arpl dec idivb push inc cmp xchg lcall xchg scas mov divl outsl sbb es inc lea ja enter imul fmull out mov mov or inc jp (bad) (bad) std lret (bad) int lea enter in roll outsl cmp out xor add addl fisttp (bad) or cltd push xor arpl sbb clc inc mov mov rcrl and mov in jecxz stc and add popa or mov mov stc mov push inc pop mov adc xchg cltd bound xchg mov popl mov push rcr dec arpl or mov and and ljmp stos push or lea jge adc call add scas mov push adc sbb insb push xor pop jns imul mov les mov out je sub pop bound js xchg pop inc mov jmp xchg mov ja lcall movsl jns lahf fnstcw aas les pop or adc add loope sbb popa add adc ds pop test mov test stc stos negb mov outsl out mov sub sbb sbb lods popf (bad) mov lahf in out iret push fsubl xchg xor std jbe iret js in js pop push shl cld and les jge test sbb test (bad) lahf xor mov xor sbb mov data16 and in lea (bad) (bad) pop add stc adc iret pop fiaddl push add cltd loope pop adc ficom adc cld dec sbbl les and fisubrl xchg cmpsl imul adc jb shll adc cmpsb dec sub sub pop pop jns add lock add test push dec pop (bad) or mov and les rclb cltd push das add int3 out dec cmp push pop nop cli fildl cmp ret xor jae movl imul dec mov or fistp or fisttpl xchg pop cmp ret stc daa insl dec insl pop jb sbb aad mov ljmp insl shrb xor pushf xor es and lret sub pusha enter out rorl xor (bad) fisubr pop mov sub (bad) out xchg inc ja jmp shr (bad) loop rcrl cs call dec pop mov stc or lea outsl xchg xchg mov fimul jns adc ret cmp andl stos and mov icebp hlt xchg mov mov mov xchg sbb cwtl push je imull in pop mov enter lods sbb jge popa (bad) popa push jecxz mov push int inc xchg mov cmp add add insl dec std test pop cli outsl cltd add fiaddl cmp jb or (bad) xchg loopne and sub add roll push inc lret stos leave fildll mov dec pop loop mov ds lods dec dec xor dec inc xor lock and pusha insl pop xlat inc mov pop pop out or int aaa cmp push sti out js push dec dec xchg ljmp inc cmp mov jno add cmp xchg insb adc mov (bad) jno xchg or mov sbb pop mov mov hlt add sbb ljmp bound jnp movsb out mov adc adc push mov insl ret int push mov and dec xchg out add mov fnstsw inc call push cld xchg and push xchg add mov dec adc fldt cmpsb mov add js mov ja out push jecxz popa aaa shl sbbl mov in jp fimull mov lahf pop in mov mov fcoml dec movsl gs or insl imul push cmp mov (bad) sbb ds in popa rorl jne mov and add je js or int adc xchg scas mov andb sti std daa cmp test stc cli dec push push mov and in (bad) cs ret ret mov insl dec sysenter out xor sub out lret pop xor test nop outsb movsb xchg in arpl (bad) addl ret (bad) mov mov pop arpl sbb decb push cmpsl rcl mov lea and or pusha mov (bad) int3 cld sbb pop pop mov push stc fistp mov inc loop pop sbbb imul or cmc movsl and jmp stos cmp push xchg mov ljmp mov pop xchg jbe and mov xlat test dec fnsave es addr16 jb pop adc sbb push xchg xor loop scas rcr mov adc pop sbb (bad) icebp enter sub xor stos mov int3 mov lcall xchg push and stc je lahf xchg dec test or sahf xlat cmpl and jecxz dec mov mov mov dec lret les dec push cmp mov and xchg (bad) inc lahf inc add insb inc add jae ret icebp ds out int3 in jl cmp scas jb inc push imul jno push jg stos (bad) xchg clc pop mov bound popa ficom roll in cmpsl out fsubrp mov push jbe fsubrs adc clc xchg sbb aaa lret push loop imul inc daa ja jge jl loope add dec cmp movl xor movsb jo sub dec dec mov add insb and lds and or mov popa jl scas rolb xor int sbb sub mov cmc sarb insl je,pt pop xor mov subl movsb add loope (bad) cmp out mov mull adc outsl or je notb mov mov xchg jae (bad) pop push push scas inc roll movsb adc sbb out nop xor test movsl xchg jg aaa repz or xor xor cli push or jmp ja rclb rorb (bad) xlat xor mul fcomp jecxz mov or dec pushf out and in fdivs out lods inc call (bad) mov dec cmp dec (bad) cltd dec cmp scas cli or mov out mov ret xor pop int into (bad) sbb int mov adc jno push rorb mov cmp inc popf aad cltd sahf cli cld jnp pop jb lret (bad) mov rcrl inc std (bad) jbe nop push fistpll jb pop xchg xor or mov movsl fistpll xor xor and add in adc xchg or xchg nop adc negl sbb inc dec enter repz (bad) (bad) fninit xlat (bad) xchg lock loopne mov dec arpl stc jae add (bad) push push mov jl add test xor aaa xchg adc cwtl cmp or ror lret jle cmpsl or sbb push push ljmp and (bad) cld inc paddusb pop mov push sbb insl fwait push repnz mov mov out xlat nop cmpsb mov or test or cmpsl mov and test pop xor xchg mov cmpsb hlt xchg sahf jbe or jnp into pop outsb push jge (bad) lods test adc out inc dec mov in pop (bad) dec push notb add in mov rcrb xor and (bad) ret out jae in and xor adc pushf dec and push fcmovb mov repnz aad jle je and int je in pop jbe aad das jb or repnz (bad) test mov popf mov sar sub jmp ret xor lock cwtl push xchg fimul cmp das pusha in cltd jle jl aaa pop loop aas fcoms sar mov sbb jbe scas (bad) hlt (bad) gs (bad) (bad) sti stc xchg test ds push sub mov push mov movsl (bad) (bad) arpl jbe dec rcrb cmp add sti insb out cld adc enter movsb cmc lea cmp or das imul lods pop dec pushf dec dec imul in mov mov or mov push pop push adc lods imul fcompl scas scas and mov push inc loopne clc loopne insb pop cmpsl insb popa adc mov push dec mov sbb rcll data16 roll push pop mov mov test stc dec adc lret fisubr add xchg mov out dec jnp cmp pop mov fmulp test jmp imul (bad) push stos mov and and ret shll outsl ljmp std pop loopne lahf pop jmp sub push pusha cmp test iret cmp xor push pop (bad) cmp popf mov (bad) dec lret dec push adc addb add arpl insl cmpsl mov ds xor rcrb pop jmp daa imul mov rorb xchg xor jo lea or mov push fcompl adcl push popa outsb xlat xchg (bad) mov jne sbb jle push stc sub outsb mov push daa pop movsb daa fist mov mov aaa icebp aad jl insl aam xchg cmp hlt test dec mulb std jmp and std sbb divl dec sub popl out enter (bad) in out fisttpll loope or inc mov in fs ret loop adc push mov mov movsl stc stos adc push jge inc stc addr16 dec xchg cmpl cwtl xchg out sahf shll xor and mov js pop push out jge pop div dec inc pop jecxz jno outsb dec pop mov push pusha out lret pop pop ret in sub inc xchg test lods cwtl (bad) add dec es cmp out inc pushf cld or aad cltd pop insb les movsl jno (bad) sbb notl push adc jmp add and hlt nop addr16 add xchg jle (bad) adc mov adc mov cmp (bad) and cld outsb negl mov cmp sahf arpl lods nop jne mov sbb sbb jp push lock (bad) jmp pop xlat (bad) (bad) hlt clc push adc lock test inc (bad) jg neg xor repz stos xor dec push inc push fisttpl cmpsl fcmove push in adc jg sub sbb and xor xchg mov rcll adc xor xchg ljmp aam ret fiaddl push pop icebp es or or adc jbe fisubl xor cmp hlt lret xor aaa and push (bad) or ljmp repnz pop dec mov popf sbb insb out adc jge cmp dec pop sahf in xchg outsl and test out (bad) mov add xor imul cs push jne or and add sbb popf icebp mov js inc insl test cld push cld jb aam pop movsl sahf fsincos mov or loopnew dec lods lcall cmp test (bad) push push fcmovne dec in int3 or faddp scas cmp sbb clc mov xor out pop jae fwait insb and cmp aaa sbb roll xchg pop data16 adc pop or aad jmp jno mov loope cmc mov adc cli push aam cmp or xchg sbb into push decl jmp lods pushf (bad) mov cli push fidivl jnp mov add dec cmp add mov cmpl fist mov in push cmpsb jno jg mov movsl test add movsb scas mov ret xchg div jmp xchg in adc sub icebp xchg cmp fldl xchg ja,pt jb ret das mov cmp loope nop inc test add mov jecxz gs push (bad) cmp aas xor out (bad) jle add aam and mov adc mov (bad) clc push idivb xchg inc loop pop sahf jg call jo or enter enter sbb fdivr push stos (bad) ljmp outsl aad movsb (bad) inc push daa pop sbb iret mov pop int3 push lret xchg mov mov mov out movsl add out js enter xor outsl mov and pop outsb fistpll mov mov loopne sub ja mov or mov inc cli or fcompl xchg test inc orb pop test test adc lret aad out adc mov aam out inc and ffreep (bad) ds rorl mov rorb ror fcomps in pop test sti mov (bad) push xchg mov push jmp push or arpl ljmp jmp sti add mov pop out pusha (bad) jno inc push cmpsb dec in enter push sahf aam pop out xor (bad) ja mov xor mov imul pop (bad) aaa sub lret inc dec mov call push add or imul (bad) inc (bad) or cli sub jnp cmp test imul (bad) iret test jnp sub fdivrl cmc xchg lock jbe (bad) sbb std outsb xchg sub pop push loop dec push rorl cmc inc cld jge mov xchg fistpll shlb rep popa mov (bad) cmp jmp ret push jb jg (bad) pop sub lock int mov xchg inc dec data16 push mov add addr16 (bad) repz xchg mov xor xchg js imul sti (bad) jl jae outsl mov xlat loopne jle es cli lods test call push rcl mov push adc push sub push out clc in in movsb mov mov inc lods das movsb xor jns xchg in sub dec inc gs or or call dec sub add push adc cmc mov fisttpl outsl jbe add int aad jp inc pop add jecxz test pop dec hlt xor divb (bad) lods inc ds mov xlat or fistl adc divl push add mov and mov pop and push loope fldenv loope mov mov testb inc ds xchg test aam or data16 inc out jp jno aaa cs in fnsave mov inc adc into les jns sbb into rclb jecxz fcompl iret jecxz sbb add fs roll jge adc lock jnp fcoms dec (bad) (bad) ret mov dec push xchg push out add dec add outsb in in cmpsb insl and int3 rorb mov aad cltd sarb (bad) (bad) or insl xchg fiaddl mov fistp cli pop cmp rolb (bad) or xor dec adc mov popa xor stc pop cmp or jbe fidivrl or mov jbe mov (bad) jg inc sarb in mov aad cmp and mov cwtl mov inc lods and sub jb lret (bad) and out movsb aad adc dec mov add ret sbb jno mov (bad) hlt fwait out notl incb daa xor pusha stos (bad) dec ss ror cmp movsb xchg (bad) xor outsb daa jl (bad) pop daa cmc push push lcall sub nop xlat mov xor ret mov pop pop sub jnp pop mov ljmp icebp out mov jmp rcll lea cmp sub mov mov xor push stos push jp pusha clc inc push push lahf incb push mov sub out xchg jb test fmull ss enter sbb daa popl mov cmp repz mov inc and daa push inc xor and fcmovne aas (bad) insb pushf sarb cmpl adc pop mov and dec and (bad) mov loope out (bad) dec pusha dec jne bound (bad) lds mov insb push jae popf add arpl aas mov hlt clc inc aam xchg addl fsubs adc xchg lahf popf pop dec pop shrb fdiv pop dec adc cwtl inc mov addr16 mov lret pop mov mov iret out int3 test and or nop jge test xor dec fisubr lahf in int3 dec push sub dec xchg in sub push test push addl fisub sahf xchg clc popf lahf lods dec mov lods shlb mov mov push mov lods pop cmpsb fldl cmp je js xor jmp movsl arpl fwait out ret repnz fisttpl xor les mov jae (bad) pop adc cmp arpl dec or aad cmp cmp js lcall dec testl stos jp inc les jns rcrb fwait pop push push mov int3 fsubs (bad) fnstsw or dec aaa xor sbb pop inc sub inc jbe inc or (bad) mov ss out shll push pop into pusha fild dec mov cmpsl cmpsb cmpb push ja test aaa out mov roll adc loopne jb cltd cltd les sub lcall mov sub ss cmp addr16 mov shrb mov pop adc cmp mov scas mov cli insl mov ret hlt in dec mov jno and xchg inc mov mov push and icebp (bad) fldcw popf inc cmpsb xchg shrb out mov add mov stc int add pushf cmp inc or (bad) jg dec inc mov adc mov out inc rolb cmpsb cmc fisubr cmp cmp in inc or jp repz adc das push push popf scas jl dec cmp popa push daa add adc mov ret je pop add insb cwtl pop mov fistp push ss es push mov or jnp pop aad mov mov pop ss iret scas loope lock cmp xor dec sub fisttp jp add sub cmp (bad) xor in jge jecxz add loop fdivl pushl in jnp loopne adc pop (bad) push cmc adc leave mov out inc mov mov mov xor cmp mov dec fdivr push sbb mov (bad) lods inc imul push or lods dec sbb push jle cmp push lea push lea sti cli pop out (bad) dec dec xor call push pushf inc mov dec cmp out sarb ret popa rcrb js aad int inc std (bad) sub sub in sub cwtl stos mov repz cmp sahf pop adc adc outsb repnz push enter cmpsb jno xchg xchg jle insl xchg (bad) mov repnz adc popa adc cmc dec sub pusha mov cmp mov insb or mov add fst test xchg cmc push insl pop ror leave stc cli inc push sub roll jae or sbb arpl xchg jae hlt sarb pop xlat push xorl mov cmc and jecxz push int3 cmc stc jg (bad) fcoml decl pop mov repz xchg data16 pop cwtl cmp in jno shlb loope,pn fimull push cmpsb adcl sub movsl inc cli cmpsl xor dec icebp mov test dec mov fs dec mov and mov mov fdivs mov cmp push adcl sub (bad) aaa xor xchg push repz cmp add ret fistp leave leave push push dec pop xlat dec sub sub pushf cmp dec (bad) jbe jbe rorl repz (bad) in aad cmpsb inc in or notb xor gs pusha insb fbstp sub sbb stos pop repnz (bad) inc pop insb cs sbb mov divb repnz ss dec mov dec inc pushf repnz cwtl out std fdivs aaa mov pop cmp jle ljmp insl xchg mov jp add and push dec ret sbb mov cmc incl cld in push cmp mov ret fiadd lret add int3 jns rorl mov js bound inc mov mov (bad) (bad) xor mov push idiv mov dec inc mov jl mov mov cmp adc insb or xchg iret mov mov test cltd cmp xchg (bad) cmp xchg push (bad) push cs stos push push cmpsb out push ja and mov dec inc scas mov fwait xchg cmpsl cli or xchg push sbb mov subl mov leave sti jmp xchg nop xorl mov and pop es (bad) sbb mov inc add push push test test cmp insb adc in xchg sbb dec pop push fiaddl xor pop test lret fnsave sbb subl xor je ljmp lcall fdivl xor fcomps mov dec sbb sbb pushf ret and cmp in pop dec jecxz inc mov in jb test outsb cmp inc daa sbb repz xor inc lds xor pop repnz stc mov xchg dec jmp (bad) std (bad) (bad) pop add mov shll fwait xor in je sub inc stos or mov aas mov pushf or es inc jge push jo sbb pop fwait pop ja js movsl addr16 arpl jbe dec loopne adc iret es fs mulb dec movsl sti push mov pop into mov inc cmp sarl push es sbb js mov and in ds ss cmp leave sub test xchg lods sub cmp leave xlat lret cmp xor xchg lret std push je dec cmp ja dec or xor sub jmp scas nop test movq dec and lret lcall push mull ret xchg sbb sbb mov in notb fcompl lock ror jl ja mov mov (bad) dec sub (bad) push fidivr cmpsb add xchg or mov jecxz or mov adc sub mov pop add leave cmpsb js scas imul pop mov jb inc popf inc dec loope hlt popf out enter insl sbb xchg pop xor inc push roll inc push cld icebp xor jns xchg cltd outsb mov adc push lds adc add push sbb out cmp inc imul mov enter inc nop mov stos rcrb mov lds leave das xor lahf popf popf mov (bad) jp inc out clc pop pop xchg pop xor loopne rorl push aas cmp imul push mov fisttp mov mov fs jg xlat push dec push adc push addb xchg mov mov xor enter call push sub popa add xlat mov gs adc and sub hlt sbb stos dec rolb (bad) es dec push fistp lcall mov nop test inc pop dec xchg in mov insl push push cli and into dec sbb test rcll xchg in push xor add dec imul ja jo add mov mov dec push je cmp loopne into pop mov dec mov pop popa add xlat mov mov out cmp aaa xor imul repnz fstpl pop rol aaa mov fdivr push mov mov out cli stos inc sbb xor push hlt jl popf push scas mov pusha push xor gs xchg cltd loopne std mov scas mov test pop stos test xchg (bad) jnp mov dec xchg pop push pop mov add cmp inc adc scas in repz sub mov cmp dec test daa int3 scas dec lahf lcall jp cmp push jp rcrl outsl ja aas (bad) adc sub int3 pop pushf pop pop mov adc push scas (bad) (bad) jl bsr scas pop (bad) imul lods cmpl repnz xchg pop cmp xor sbb mov int3 pop repz scas loop xchg (bad) dec jecxz mov add bswap call add test std (bad) push (bad) push pop cld out loope repnz outsl cli pop push sub loopne or cmp adc sbb std in lock push and mov ret ljmp sbb mov jnp vpunpckhwd jl aaa imul push je addr16 jnp call cld (bad) (bad) out jecxz push mov adc or popa lods cmp inc push push inc jmp mov es push mov lcall fldl ja imul mov xchg les les pop mov push lret sbb ds shll sarb out pop jne mov mov or lods aaa fistpll cmp cmp mov jae mov mov lea rdmsr lret rorb push call daa push push jbe dec movsb inc je mov (bad) leave and sub roll inc jle shll ret iret rol fldpi fdivrp jno sahf aad ja fisub mov pop or aas ret cmp xor jmp mov in leave pop xor fnsave arpl ret or dec out cmp minps out or addr16 aas xor add jecxz mov cmp das mov mov jae stc dec xchg shl and sbb pop cld mov lods cmp clc aad jg push or fisttp out (bad) mov in aad dec (bad) dec and stc sub pop movsl leave mov xor mov in sub jmp xor mov push mov inc jecxz cmpl leave ljmp pop dec aas mov enter pop leave adc adcb sub inc inc negl data16 xchg out mov repnz aad lcall (bad) ds mov jp mov iret jae inc mov fcomp imul gs mov mov cwtl and rolb xchg inc sbb push jne sbb pop mov and mov inc stos mov pop int3 (bad) leave popa dec stc ret out mov mov dec mov pop ror sbb jae std and mov xchg adc inc push aad fcmovbe pop xchg push xchg xchg test add or addr16 sub popf xor xchg flds jnp mov fdivp loopne cmpsb mov mov jne jbe cmp clc arpl mov add mov sbb cmp add mov xlat lds ss cwtl (bad) and mov mov jge or pop aaa insl and and testb jecxz jo mov xchg (bad) out push mov adc test and daa mov out mov cmp pop les xchg ret jb pushf call lds data16 adc outsb cmc jmp icebp cmpsl clc sub mov mov idiv cmc cltd pushf arpl lcall aas mov push cmpb or push test push aas (bad) dec mov (bad) xor mov sub in repnz push xchg incb add daa jp outsb mov or xor leave sbb xchg ss sub out les sbb dec xchg test aad lock mov dec pop xor stos xchg pop inc lcall xorb icebp sub xchg imul into inc inc (bad) xor cli les out pop pop or mov rolb loope out inc pop pop adc jg inc xor fimul jo std cli sub das xchg inc push mov ret cmp out je dec bound mov add mov dec inc rcr bound push adc pop test aaa cmp mov add cmp mov jge data16 les pushf adc fist cmp cmp lret nop sti sub adc dec jmp and adcb inc ret mov shrb insl sub test stc add rolb jns dec aad repnz push daa pop dec insl aaa subb add push stc cs cwtl xor push push xchg lret mov mov orl xor xor in fistpll cmpsb mov loop fist inc fwait jmp loopne insb sub push cmp jbe mov sub (bad) pop cwtl xchg xchg in shll jns mov iret jns aam in ficomp push les inc jle inc cmp sub dec jno adc cwtl add adcb jnp stos mov jecxz pop notl lods or cltd rcll sbb xchg hlt add imul and icebp hlt sbb push dec fstps jbe inc and sub mov sub add inc mov aaa and mov enter inc adc push jg push cmp mov fwait stc pop roll icebp ja add mov sahf lcall inc sbb call xchg imul inc adc push cmp push repnz in loop (bad) sti push dec adcl xlat add das sbb inc sub or test mov (bad) cmpsb mov js pop or xchg xor xor in movsl (bad) mov loop mov movsl pop jge dec movsl sub loopne xor into scas aas push je lcall xlat sub dec fcmovu ret xor je imul inc jg ljmp or insb test sti xchg mov fnstsw jg fildll jmp mov out lret data16 pop out out xor rclb gs cmp out lret (bad) sahf pop into mov cmp mov arpl mov aam ss lcall scas outsl lods in adc sbb arpl sbb sbb dec xor pusha aad mov jbe and popa or ja xor or daa fldcw mov adc dec icebp mov adc jmp sbb dec dec les test hlt pop push mov mov lcall pmulhw sbb mov test daa bound cmp popf insb scas imul lds mov icebp fidivrl sahf call add lahf mov jnp jmp add adc cld fistl lods stos and mov mov shr pop stos ret mov popa scas jge xchg cmp fs push pop pop push ret addl xorb jns fsubrp scas cmp mov test and (bad) mov dec ljmp fwait pop and mov pop pop xchg fwait insb pop cs add xlat iret pop imul sbb rcrl pop rorl ljmp movsb (bad) dec dec jb mov ljmp (bad) das xchg jae jo mov cmp xchg xor rcll imul sub shr pop lods ret cs add adc push cmc dec lods (bad) divb in mov jecxz xor cmp xchg inc (bad) jne (bad) icebp cs jl jp jp dec ret fidivl add int3 incb jb jno loop cmpsl dec jl jno cwtl push xor mov xchg sbb jns rolb xchg jp inc and sbb imul cmp mov or iret sbb add mov lret pop loop jnp jle ljmp mov pop dec in outsb sbb xchg popa das dec (bad) fucomp push fcmove sahf rorl and cltd pop loope push dec test lds insb cmp pop mov ja add xor and add shrl (bad) push rolb imul out pop sub jg add addr16 jp add xchg mov add scas add cmp adc addr16 push inc subb in in ret adc inc daa xchg add mov cmp push out and mov pusha rolb cltd sbbl std movsb xor fwait jbe das gs fwait cmp test inc inc sub ret lret mov inc addr16 arpl cmp adc cwtl mov inc xchg loopne movsb mov inc lret add cmpsb cwtl push fidivl xchg jmp add imul stos push or add je lock jb fstps lea rcll out out push mov mov fstl jns mov and (bad) or rcrl sbb mov jnp xchg cmp inc mov into cmp push xor ss and fcmovnbe ret xor dec xchg push fisubr imul cmp dec mov fisttp xchg dec lret inc cmp push pop repnz cmp mov mov clc cld or xchg sti xchg dec mov out sub xchg ret ret xchg push lods inc push mov test mov sar movsb and add test leave mov push xchg push jg xor push fidivr xchg push jo push and gs into pop mov and cli pop mov mov xlat push pushf dec mov xchg or cmp ret enter js cmp xor ret jnp cld pop mov fstps fidivl aam jl fiadd adc mov xchg sub icebp dec jg,pt sahf pop clc enter lcall xchg adc sbb sbb jle es shlb loop (bad) and dec xchg cmpsl mov je pop inc inc cwtl lea hlt jo sub adc jp shrb fs jle into mov nop mov jbe daa lds sbb fwait dec cmc lret cmp enter pop cltd leave adc xorl mov or jns call cli les out cmc push push enter or and in or sbb (bad) xchg sub lret (bad) jbe xchg or pop push gs fwait out sub (bad) out pop (bad) mov cmp fcoml cmp and adc out scas stos movl sbbl mov add notb mov rcl xor or adc push adc test xchg aad scas insl xor mov xor pop shlb insl movsl jb ljmp add (bad) pop xor je ljmp in bound mov adc xor inc fnstenv xor hlt add mov mov (bad) aaa sbb int3 inc imul stc push lods mov pop or jg cmpsb jo gs leave or sub inc out sub cmpsl (bad) ss test stos adc mov cmc dec test xchg inc roll pop aaa pop inc inc mov xchg xor shrl xor imul sbb push daa ret (bad) fistpl and jb push rorb les scas ret pop sub pop cmp cli add cwtl sbb cmc dec dec dec invd push leave mov sbb add push insl add xor mov test lret xor leave lcall xchg adc aam or or pop and out mov sbb aaa (bad) sub icebp and fdivs es int3 imul jle dec out sub sbb cmp pushf push xchg lds roll cwtl fistpl pop clc jno add mov ja sub push and or xchg outsb stos icebp ret cld xchg mov push clc cmp pop dec lods push and cmp test and mov xor jns fidivl adc mov xor push in jne imul test pop and out xor push repnz sub or xor and lret xor aas push xor inc mov pusha out xchg sub pop mov lahf (bad) iret int3 nop mov inc pushf jecxz mov adc mov in stc dec pop mov icebp movsb jnp jecxz shrb movsl lcall jmp lcall sahf jnp scas cltd cltd add add xchg fwait and sub popa add leave rolb sbb cmpsb in (bad) out adc xchg sub xchg shl xlat xchg jb nop movsb ljmp incb push aad nop in arpl inc das push xlat out dec or jno movsl or insb (bad) ja fwait jge jmp in mov sbb pusha int xchg sti cmp rcl mov aas mov push mov dec sbb repnz and cmpb mov imul mov cmpsb sub aad (bad) sarb arpl cmpsl push (bad) xchg push xchg xor int3 and jbe lahf jo out int3 (bad) in pop xchg ss dec add jb or aam stc in fstpl pushl mov xchg and imul cmpl (bad) lret mov adc aas fcomip mov (bad) mov shll jns fwait jnp jno lcall adc iret push inc (bad) fnsave dec mov imul push insl or add mov imul sub cltd aaa mov fsts push push xchg push (bad) fcoml rcrl sbb or cmp push sbb mov pop lods jmp xchg ljmp mov adc pop in mov cld stc add and mov adc or aam ficompl lods pushfw sbb push (bad) int int lcall stos mov stos xor lret mov pop fwait xchg lcall sbb xlat cmp jo dec int sbb rorl inc mov mov jl cmovb in mov xor xchg leave cmp int3 iret cmp push pop push mov push faddl sub leave (bad) roll imul add xor lcall push lcall test aaa adc fs fsubl mov xchg fld inc int and pop cmc iret pop scas scas (bad) ja imul sbb dec fwait sub xor int3 int daa add rorb and cmp dec icebp add mov ret in adc and scas fwait jo adc bound in inc mov mov stc adcl mov or (bad) jmp dec js xchg mov pop nop pop out ja mov cltd mov add (bad) dec push and mov jl adc pop jmp push test inc or mov push out pop loop rorl push stos sub repz or sbb inc sbbl in lahf mov mov popa sub ror add push pop in sbb pop fst cs mov das mov aas mov out push jnp ss xchg test sbb fnstenv lcall dec cmp sbb xchg adc mulb xchg jno repz int sub loopne or mov es mov xor jmp js mov rorl push and dec mov negl sub xor cmp jge aam imulb gs xchg push mov aas sub jp repz mov sti out cs mov dec push push lahf stc les xor and push out xchg mov ds cmp mov fucom xor sahf arpl sbb outsl cmp inc dec je out addr16 lea jnp add mov ret sahf dec mov or inc xchg ds sarb jp pushf mov mov xchg call icebp mov and xor jo ljmp inc rcll ret jg jmp adcl push sbb sbb fwait add daa shrd sub xchg ds (bad) xlat fstpl stc cld xlat ljmp dec in inc out jmp (bad) jbe add test arpl mull faddl out and jae sbb sbb out fnop jbe stos and push (bad) stc and cwtl pop mov movsl shlb lret sub add fstps in add fdivr push pop push push fwait jle cmp enter faddl cmp lods jp and imul xchg push or push inc imul mov jge ljmp cmp test enter or fdivl out pop insb daa fidivr adc rcrl pop leave mov xor in mov xor xchg add fbstp insb mov mov gs jae nop adc jne jo fs mov mov inc inc mov push cmpsb mov jo sbb mov cmp mov mov test jmp popf dec (bad) dec pop lahf (bad) dec xchg jl imul push add dec adc iret adc cli pop xor jge (bad) pop (bad) cmp fcoms adc test sbb rdpmc nop pop sti mov push jmp call mov cli mov push dec loope add or out adc negb dec inc pop mov cmc sbb pop je ds mov imul jo mov sbb adc or mov adcl mov xlat mov cs sarl fisubr mov stos push mov add rclb push imul xor mov dec sub jno jmp add jmp setb mov sbb dec icebp sbb push mov test shrl cmp stc dec mov fstp dec xchg je (bad) loope popa pushf jmp shll sbb insl mov lahf test dec dec sbb ds adc push and push mov fistpl in scas jl push stos xor mov js push dec xor psllq cmp flds sbb lcall (bad) add xchg movsl cmp fmuls pusha push insb loope xchg xor mov outsl test aas cmc gs lods test push fldcw mov mov aaa dec mov popa test or cmpsl test in test call test dec xlat mov sbb jecxz imull fldcw cmp mov and (bad) mov rep sub insl sub jbe or fiadd test (bad) dec icebp fcompl adc fs sub and (bad) xchg loop shlb gs lahf dec push jae or mov inc inc loop dec popf mov cmc xchg xchg push (bad) xor adc int3 aas hlt js movsl fsts js xor mov ljmp pop jle imul add xchg test inc and push fucomip sti out inc loop push ds mov xchg outsl add (bad) cmp cwtl xchg mov adc or sbb aam in daa inc xchg mov mov xchg testl mov pop arpl (bad) scas xchg xor fadds cmc rcll adc icebp adc movsb push push sbb nop insb cmp cwtl lods sahf outsb aaa imul push (bad) imul xchg cmp cmpsb es jno mov cmp pop (bad) out inc add xchg pop push aam (bad) mov gs dec cmp sbb push mov mov dec (bad) cmp in sub ss adc movsb jb push mov pop cmp call push sub pusha mov je inc out and sbb gs (bad) jp sbb dec add cmp inc xor lret inc scas jo pusha repnz jae push sbb cs sti imul adc and fcmovne dec pop sub adc cmp movsl adc lret pop push and sbb pop into ljmp pop mul adc aaa insb ret mov cwtl pop gs movsl test icebp cmp fnsave fidivrl push mov mov inc mov gs test pop jnp mov icebp out mov pushf stos cltd and ss in aaa inc mov and jg jmp sarl popl mov sahf pop sub lods mov in dec dec mov xor push aaa jbe,pn fnsave std mov jecxz cld xchg scas cli or jnp xchg ja inc pop shlb xor push mov jmp cmp push xlat ljmp adc shl aam (bad) fdivrs std dec test xor (bad) (bad) dec neg push mov cmc cld movsb push mov mov inc or wrmsr mov mov ret push push pushf cmpsb pop inc and je mov pop popa sub push ljmp ljmp pop jle adc test daa add cmp mov mov jle cli cs jo das scas jmp and lock stc or mov mov in mov dec lock and or enter mov sbb pushf idivb xchg int3 or push mov push jge mov push sub sbb xlat bound sbb out (bad) repnz imul jns mov mov rcr aaa enter and mov lds (bad) xchg call data16 or aas jmp ficoml dec mov mov popa xlat jae cld rcrl aad pop das mov pop (bad) shlb xchg test repnz lock fdivrp sbb pop push cltd dec pop pop stos cld push or outsb loopne xor mov cmpsb inc mov jecxz sub notl cwtl dec and dec pop call call aam int3 mov add mov add pop push mov pop (bad) mov jo xchg jns add dec stos add decl rorb mov cmpsb aaa cs divb je test insl mov sub jecxz xor xor sub mov push jbe stos jne sbb in mov xchg jbe push (bad) fisub lret xor sub in jge mov mov xor bnd pop int out jmp jno ret dec loope adc test pop sub lds pop push or push gs sar sbb cmp jp repnz jne pop nop (bad) fsubr jle add mov loope adc or js movsb ror adc dec rorb or pop and dec loop xchg notb push mov aam test shr cmpsl stos je jl xchg mov cwtl push xchg mov adc (bad) mov mov sub cmp mov cwtl aad sub mov jbe or mov mov std lods push enter scas adc cmp aam push mov sbb ds cmpsb jae or mov movsl mov fsubrl mov jbe add mov fdivrs andl push lret dec loope lds mov movsl mov add sbbl push sbb mov imul xchg je and mov ret in cmp jns shll xor mull dec hlt xor mov mov repz mov pop popf rclb loopne mov outsb jnp dec sbb ljmp and push xchg dec jecxz xchg std adc dec addr16 std pushf push cmpsb into es mov pushf or cmp ds adc (bad) mov fucomip imul mov insl cmp mov add push xor xchg pushf pop or pop push ficoml fldl pop pop in jecxz jmp sub fldenv pop push inc stos add and hlt mov mov cmp push pop insb (bad) mov (bad) div (bad) in testb adc add push sahf pop sub xchg outsl std scas fwait mov fcompl or subl push jecxz popa jg cmpsl sub ror lods stos xchg jp mov push fistl dec and stc out push popa lock out outsb fwait push mov push sbb sbb in fistp mov out push fisttp fmuls xchg cmpsl cmp test xor pushf mov daa je and mov sub cmpsb xor pop xor mov (bad) cmc mov xorl pop push cs or fwait jp aad cmp rcrb jecxz xchg pop and pop fistpll or pop out push repnz xchg pop jae (bad) ja enter add loope pop add negl (bad) scas mov inc inc (bad) xchg push test cmp pop aad jns sti mov sbb out mov mov push (bad) and xor pop (bad) decb sbb adc ror ljmp roll jecxz std dec popf cmpsb shll gs popa insb jg ret (bad) mov cli bound add jge (bad) cmp lahf sarl lods mov mov sub adc dec adc dec incb sub mov mov mov sbb imul inc popa mov xchg cmp pop jp or pop test (bad) icebp cmp sbb test or pop data16 lods cmp xor mov out add js aas xchg icebp sub cli fwait js (bad) xor mov aas (bad) jb cmp inc xchg cmp das push mov xor mov imulb je adc pop stos les sbb pop out and dec pop es ja mov mov fsts enter ret lock cwtl add jb add out pop pop jne pop cwtl adcb push (bad) in pop dec lds rorl mov xchg dec xor scas jp rorb inc jb or js (bad) adc push and (bad) mov inc add or out or jle repz sub fistl in repnz adc or ja fld cmp push aas mov sub adc pop stc adc rolb add data16 jo xor (bad) mov daa pop ja dec arpl and adc cmovge in mov add dec inc mov sbb pushf pop add adc clc notl mov daa cmc aam test mov test call inc dec xor (bad) cltd scas shld mov pop mov cmp cmp inc inc fcoml stc sbb xchg xchg lds ret or clc ret add nop in sbb xchg inc cmp mov fwait pop std shl and test fwait mov ljmp jle popa mov xor dec jae sub cmp (bad) xor cmp sub inc xchg (bad) jbe xchg mov movsb arpl stos pop out aas push mov or int3 (bad) mov daa mov pushf adc out roll dec scas mov lret (bad) jne and into mov inc add arpl jno shll pop loopne push or and xchg add push push xor cmpsl or mov shr inc dec adc or jne int3 and adc cmp imul into mov pop jge jae pop cmpsl leave jecxz int test loopne dec int3 rcl adc mov mov ret lcall and add cmpsb sub xchg inc cmp jmp cmpsl add cmc mov inc loope jb mov pusha ljmp or stos jne xchg (bad) icebp mov push rcrl mov push out or ds subb mov ret repnz das xorl adc dec inc js add mov loopne inc out lret insb sbb push int imul inc push lods and xlat mov inc cmp mov daa mov sub cmpsl push or adc mov hlt mov and or fwait dec mov out xchg mov call or dec bound mov addl fisubrl lds scas mov movsl loop sub inc (bad) aaa dec push or pushf xchg dec cli test push lods xchg cmp xchg pop (bad) daa mov stos lea addl (bad) imul and mov std shll rcr pop dec daa roll arpl pop mov lea pop rorb rorb inc or notb add clc add jl jmp into push mov (bad) mov xchg fsubrs mov mov mov lods je inc loop pop sub mov and mov xchg xor or sbb (bad) lock jg push dec ljmp out push or leave adc es sub push jl (bad) xchg mov sbb xchg jecxz push sub xchg xchg push xor pop je mov sub dec repnz das and (bad) pop int and imul mov imul dec adc ja ja,pt mov xchg fmuls cmpsl push hlt mov stos inc addl cmp lds cltd fist mov add xchg sar pushf mov cmp dec and mov or mov mov mov mov std sbb mov jnp sti and sbb (bad) jnp cmp push adc ret cwtl mov push and dec pop sub shr adc iret mov por arpl jnp sti adc fildll xchg and je add sbb jmp jge mov mov jmp adc dec xlat add fwait clc add scas add fcmovnbe fxch popf repnz stos stos mov cli xchg xchg scas pop push pop out adc xor repnz (bad) cld cmp outsb sub mov fcomps cmc pushf jmp jo adc push lea arpl aaa (bad) lahf sbb xlat fs and popa in enter jbe ret movsb cs lds and repnz pusha pop cmpsl imul int3 inc call xchg scas imul push jbe dec fcomps stos jne pop or out test rclb mov enter mov or mov mov outsl or jae xchg jge mov add in lods in fisubr push mov or test lock sbb adc fs sti xlat popf mov jecxz add aam fdiv les adc cs xchg int lcall movsl push (bad) inc call xchg daa xchg (bad) (bad) sbb in cmp rcll in enter pop cmc bound int3 frstor jle adc cld movsl stc movsb dec pop lods jo add dec lods lcall mov enter cmp inc ds (bad) xor dec (bad) js (bad) adc insl in cmp sahf sub mov stc push pop sti cli push sbb xchg sbbl add enter nop fsubrs add inc xchg rcrb jno add ret icebp imul fwait adc and in in les add mov pushf cmc pusha mov cmp mov xchg lock gs xchg nop xchg dec or (bad) int lods xchg movsb xlat adc aad adc push jg enter ret mov bound and push call push pop dec jl call ljmp jmp out outsl imul and or mov das jbe mov mov or mov mov imul and movsb (bad) cmp sbb in imul xchg scas sarl mov test sar push or jecxz insl mov sahf fnsave insl jnp,pt add or fcmovnbe mov push mov subb leave adc cmp sti adc addl sbb xchg lds sub inc mov (bad) pusha sti mov and clc nop cmpsb adc sbb mov mov ja jns popf pop mov jne xchg insl hlt jmp je xchg mov dec jl inc sbb xchg addr16 dec xor cltd cmp push xor das sbb pop aas cltd fnop cmp or push (bad) xor dec inc adc jle add cmp mov cwtl popa mov imul dec jge jmp inc adc mov faddp xchg shr add push cmc lret out push sub inc mov or cmp or xor pop lea pop jbe cmpsl jge,pt pop cwtl pop int mov adc test rcr sti push adc lods xor outsl out sbb xchg add cltd xchg ljmp cltd mov sbb ret loopne mov xor test lods lods hlt pop movsl cmp jp push mov fcomps pop mov add mov cltd xchg loope enter xlat mov inc (bad) jmp daa mov repnz arpl jae sub xchg sbb outsl dec iret sub sub cmpsb mov outsb xor rcrb je or call cmpsl jbe jne cmp sbb push movsl lcall clc mov and push push push in inc jp fwait nop in out js and sbb loop test pusha daa pusha add adc adc sbb mov (bad) pop dec stos hlt or adc or fildl call sub mov jno scas lret lods ret das adc dec inc roll bound fs outsl or test lods inc je xor aad inc je cmp mov jmp mov xchg aas add mov push js or adc out fcmovb inc (bad) xchg add lods sarl jo mov fbld push pop mov push aam jb adc mov xlat loopne pop ja inc pop sbbl lock aam inc xor xchg fnstenv cmpsl test movsl mov cli scas mov insb add cmp mov daa mov mov push jg push sbb mov mov sub sub imul jecxz fidiv daa cs aas cmpb data16 icebp push pop push stos mov mov aam mov outsb mov call jne jo icebp lcall mov popf jae adc mov jg xor jle and daa sbb adcl int3 (bad) lret jg ret xchg ja fnstenv sahf (bad) mov jne dec and sub outsl icebp cli mov and push xchg icebp pusha sub xor cld pop clc and mov test aam xorl dec mov cmpsb cld in lds jae push dec pop jecxz cmp push mov insb xchg xorb aad mov cld adcl adc cld sub jne adc les xchg add clc fstp mov inc mov mov and mov dec inc loope ds mov movsb ret pop sbb cmpsb cltd js cmp test nop inc negl nop jmp and test add mov outsl jecxz adc jae das ljmp leave sub ret popf sarb dec xchg jp inc std push push mov dec adc cmp scas add xor mov push jmp lods inc inc sbb fnstsw shrl repnz les leave (bad) into scas or das pop loopne jge push jecxz inc add fsubrs out lds daa loopne lret add pushf cmp es push inc push add insl cs push jb jp push repnz cmp lds rcrb xlat stos stc push add ret cs ss xchg fsincos pop test cmp dec hlt adc sbb sub ret aas frstor or cwtl addr16 ret add cmp mov in cs jge lret adc imul int3 aad jmp icebp adc sub sbb icebp sbb push jle jecxz sbb (bad) mov jnp cmp mov mov adc push lock stos mov mov xchg mov pop sub in lods imulb bound imul dec cld out sub pop jae mov fwait test xor jne incb in test inc mov mov xor dec pushf insl dec mov ret int cwtl xchg cmp xchg xor cmp dec or dec shlb jl imul jb cmc cmp test push and cmpsl xchg inc mov mov push jge adc mov pop push sub sub inc sub adc daa loop fdivrl rcl xor pop call cmpsb (bad) cld and mov les add in out adc mov mov pop movsb or cmp lock stos pusha mov mov mov jnp enter xchg jne lods adc imul mov les pop mov clc mov pushf sbb push lods in imul adc add mov aam mov and fisttp sbb aaa movsb gs aaa sub insb add lods arpl mov stc or xor push (bad) push test push addl sbb and dec imul bound ret xor push cmp pop mov shll dec jecxz mov iret aaa outsb xchg sbb rclb push cmpsb sbb stos into push gs push push aas xor dec loope int fsubrp mov mov xchg and sti rolb or fs lret (bad) mov dec out sbb xchg sti int3 lods cmpsb fisttp mov (bad) pop (bad) pop ret add lcall xor or dec inc pop xor je sqrtps stos mov aaa je mov jg in cmp push int ss adc insl imul loope cmp sub xor pop out lods lods or fsubrl mov mov push cmc xor pushf fdivrs repz and fsubr (bad) out mov cmp outsl jbe dec fmull jle notb in inc sub (bad) push cmpl leave mov mov notl lahf dec adc int nop test xor cmc xor inc sub mov psllq xchg xchg (bad) jae clc pop mov dec mov jbe,pt out jmp sti pushf sub mov adc add mov xchg fiadd jge mov xchg dec lods int3 arpl leave pop sti pop lods jno and sbb mov mov (bad) sarb loopne mov jg sbb hlt enter sbb cld push idivl call dec fadds cmp stos in push and ljmp idiv dec xor xchg jecxz mov dec ljmp inc repnz aaa cs or mov scas sarl mov mov xor loope dec lock ja jle and xchg pop sbb (bad) idivl (bad) rorl pop fidiv mov pop sbb cmpsb add loop dec adc sar sub inc pop data16 dec and out or inc test fs lock mov fcomps xchg push insl or jg or jbe insb clc cmp pusha cmp loope jmp ljmp fwait nop pop mov mov adc mov pop fs (bad) jp jmp (bad) xor lods int hlt aad (bad) fdivs out cwtl or add pushf jl (bad) mov icebp js mov mov sbb inc sub and mov add or push push push fs je cs add sar scas psrlw push dec dec pop (bad) mov pop fcoms roll mov popf int dec pop xchg sbb bound jg push xor imul pusha push inc push sbb out sub mov (bad) adc sub int outsb popf jne fistpll ret add bound xor mov insl sbb mov inc cmp into insb iret push inc std xor jbe int leave movsl push andl pushl nop mov inc ss xor pop sbb enter mov stos pop adc dec inc paddw sahf aaa inc test sbb jp and adc jnp fwait imul and xchg xor test jecxz out and pushf cmpsl add sarl dec sbb push in popa mov sub mov movsl dec cmpsl mov mov or test sti clc popf ret lds inc loop push sti cmp mulb (bad) mov pop jmp pop inc test in popa inc stc ret mov adc (bad) lea cmpb gs mov xchg cmp and inc sub inc in sbb fs push out mov sbb dec pop xchg icebp call jne mov pop cli or pop jbe loopne dec ret inc hlt cmp mov or std jns push out mov hlt lods aaa push add fcmovnu outsb fnsave xchg adc mov test mov int clc xchg and pop mov or fcmovbe cmpsl xchg xchg and insl popa sub adc cmp add cli xor and inc arpl jle pop inc ret jmp fnstsw imul mov iret arpl or mov xchg (bad) out xchg pop xor push add popf insl sbb cmp add sbb or (bad) in pop sbb dec loope or dec test cmp jecxz push in sar inc dec and inc dec or sub push add mov and ljmp pop lret push fbstp in sti xchg js cmovg push cmp mov dec cmpsl lcall push and cmp mov cs out scas loop (bad) (bad) lret insb cmp mov sub cmc orl pop sti cmp daa dec dec dec dec sarl add and push test jecxz dec dec cmpsl (bad) lds push sbb (bad) cmp xlat mov dec scas je add and arpl sbb mov lahf pushf jp xchg arpl int decl push mov (bad) es add in sub mov xchg scas fadds mov fdivrl out mov jno and push fidiv and addb lock cmpsb int3 es pop push pop stos sti inc ja push jl inc mov xchg sub mov mov cmp orl aam xor jno sub lock or fmull inc ss clc repnz sahf adc adc rcr les addr16 dec (bad) push cmpsb sbb fxch lds subl and add pop add hlt xor (bad) mov ret aas inc (bad) mov mov or int3 sbbl pop adc add (bad) jge call mov dec rcrl es mov push loope jbe or cmp inc add jbe sbb insb or js sub movsb jge mov cmp repnz mov repnz das cmpsb les arpl ret push lea or inc mov lahf (bad) jbe ror insl cmp js cs int (bad) jecxz scas dec lods mov push xchg mov pop in xchg dec lcall inc lcall adc or add pop sahf shrb dec data16 mov fistpll push (bad) scas testb inc pop pop add fld inc xor test cwtl sbb and incl dec push cmp mov gs sbb add or lret sarl pop mov sub push xchg dec sbb pushf push (bad) add in mov (bad) jge push cmp cmpsb adc icebp cltd xlat push test cs mov pusha push mov (bad) jmp in add jmp repz and stos fstpt insb add and lds add lcall fdivs push iret mov orl mov cmp pusha jl shr dec sti xor pop ljmp jb add mov xchg sbb stc mov mov mov add jg sbb push add or xchg xchg ja fwait icebp cmp mov lret sahf cmp imul add fidivrl jmp xor mov test es mov sub gs repnz mov (bad) ds fnstcw pop add div rcr sub mov sbb inc push shll bound lds cmp imul test inc fs dec dec popa lock xchg into mov fildl mov mov cli insb outsb addb mov jnp test es (bad) sti test stc xchg xor out fwait cmp ficom or xor daa in out pop fcomps xchg push xor jns mov inc jecxz gs insl xor xchg xchg adc add clc js pop adc out push ja fcomps loopne pop xchg push add mov sbb adc in push gs rclb xchg dec cmc rcpps fwait sbb rcrl mov inc inc sbb add sub mov xchg adc push (bad) fstl test cli notb fucomi jae dec push lock pop outsl and add pusha add aad xor or leave xchg sub pop mov lods and stc mov jb adc sbb fldenv xlat hlt call shrb bound mov ficom sub push out jnp mov dec push jmp push jg outsb aaa mov and mov ja lock push out sarb xorl cs and ret cmp (bad) ss pop fld idivl xchg movsl out inc mov jle ja bound (bad) loopne pop fnstenv sub push movsl or mov mov je mov movsl pop mov pushf das add fwait and cli xchg sub std sbb inc jmp cmp push add addl push movsb mov sahf jo or add adc sti sbb std jbe push push jl mov adc pop and stc fildl repz test sub subl sbb and gs add loopne aad inc mov mov inc push mov xchg into shl adc push loope xchg adcl jns or push xchg add cmp cld xor es fisubr in dec gs adc imull dec sub popf mov adc and push fcompl int mov mov (bad) mov push test daa in add jge inc push add cmpsb out push adc jge popa cwtl inc pop (bad) out pushl int lock adc mov repnz xor jo cs leave adc mov push insl sbb adc addl inc cmp or repnz loope daa mov dec int3 sbb pop stc pop add or jle sub xorl (bad) imul fisubr push or mov cmp push call or mov out daa xchg dec xor pop mov mov in push js pop daa adc in (bad) movsb (bad) jnp push or int sub stos and pop mov ljmp xchg mov rorl lfence mov outsb stc pop (bad) jns or rcrl mov push sbb pop inc jno loope ret dec lock mov pusha cmpsl fsubs pop imul push movsb xchg mov loope inc out out enter pop pop iret sbb pushf mov xor cwtl lahf xor jg add jne imul pop and mov cmp shl sub xchg pop sbb in mov out lcall ljmp sbb bound or sbb mov decl loope (bad) fbstp inc inc aas push (bad) and push je jmp pop aam jb fwait inc daa pop imul sub xchg dec mov sbb gs imull push hlt push cmp and mov sbb ljmp and fwait xor jl push push jns mov lods mov sbb mov fadds adc js mov (bad) enter in int popl cli movsl cmovg mov mov add icebp flds sbb les sti popa iret test ja xchg stos imul push hlt jns daa or lods sbb rclb test push sahf mov mov push and rcrl sbb add in add out test into adc cltd (bad) jns push xor cmp movsl int mov push insl pop stc repz add int xchg loop pop mov (bad) ss adc pop sbb iret push inc mov jp xchg xchg (bad) mov out fbstp xor or dec cmpsl outsb or xor fcomp ffreep je or out push jle cmp stos movsb or add loope lret lret fldl pop push and in (bad) xor push loopne xor sub scas js (bad) stos popa jb cltd pop into in in pop add out cmp test pop jge pop cmp cmc inc in icebp pop xchg pop int xor (bad) dec fdivrl inc lret mov ret and lds cmp add mov jae (bad) clc or fs push or pop xchg loope pop mov ret xor jecxz call and icebp cmp fwait adc mov lds nop cltd test mov inc fldt xchg jle lahf xor aaa push out mov loopne xchg inc cld jmp inc fldcw mov ja ds or adc and int3 rorl fildl aas mov or in pop sub lahf int3 pushf in push (bad) insb inc lret sarl xchg mov stos (bad) xchg sbb cli xor cwtl imul loop js rolb mov mov (bad) jecxz sbb cmpsl mov out iret push jne sub pop mov fildl xchg bound cld mov stc push cmp jae out int3 adc leave and movsb (bad) xor xor lret or or push dec fisubr jo adc mov or insl rolb data16 xlat movsl es pop js lahf cmp pop stos or cmp out imul cmpsl mov int3 and repz js jno jo lds icebp jmp mov jbe cmpsb out push mov das jle or fwait sbb push push inc clc xchg in push jecxz scas lret push lock lods adc sub in das lcall pop loop pushf adc in pop sbb pop xor xor cmp cmp outsb scas lcall mov cwtl xor pop lods test jg xchg add mov inc and in les jp cmp push mov mov ret mov call shll mov subb popa push inc push mov mov test jmp cmp mov or jecxz xchg and and out lret jb dec aad and cmp dec mov and test ss hlt movsb ja jecxz dec lret out jne popa push imul fsubr gs jns es xlat icebp test push sbb out sub sbb movsb je test mov and cltd in int call movsb aas into test xchg push aaa scas inc inc inc repz xchg cli int and mov ja test adc mov mov (bad) or dec aad out cli insl (bad) pop xor test je push nop sbb jle out imul movsb int3 cmp adc test xchg dec add ja into fwait pushf repnz dec sbb cmp in std xor arpl popa mov test fs mov mov mov cmp adc inc xor mov sbb cmp pop js cmc xor scas scas sti sbb (bad) clc fmul mov fucomi mov and jp cmc lea jg sarl or pushf mov cmp insl mov nop xchg inc mov mov push push sbb les pop (bad) mov out sub es pop and pop jl jp or (bad) mull jg popf ret sub aad inc push xor das ds addr16 (bad) movsl mov cmp pop out and mov pop shll out (bad) push scas shl add loopne loopne cmc xchg mov add pop cmp or mov movl push stc and (bad) aaa test (bad) data16 add jb es lret popf mov sub mov mov inc mov es adc mov aaa stc lahf and sub or mov mov punpckldq mov pop xchg imul pop xchg inc mov and dec fyl2xp1 sbb lahf pop je mov out add fwait dec push les jnp das popf fadds out mov or (bad) cli addl sarb cmpsl pop jl les movsl mov sbb iret pop fmull xchg inc add xchg (bad) call addr16 rolb jae sbb cli es pop (bad) call jne push xchg lock jg cltd cmp scas (bad) jmp add sbb ds cmc insb push popf cli push xchg mov push lcall test jecxz adc cmc xchg push cs jge xchg inc es loop pop (bad) jge int dec jns inc std cmp std in hlt sub popa cmp push lods xlat cmpsl or mov add rorl inc adc andl pop (bad) notl cmp lds fs mov dec aaa mov mov cld adc xchg arpl jp push ljmp sbb fidiv daa or (bad) fsubrp pop repnz aad lcall mov or inc push cs xor ljmp pop in push das rolb mov lcall jl (bad) lcall movsbl (bad) mov adcl out jb xor outsb cmpsl jecxz push xor subb push mov and xchg cmp stos pop mov inc je out imul lcall sahf outsb mov aam rcrb inc in pusha cwtl idivb out lret outsl pop test fiadd lods xchg aam dec aad out add adc jae and sarb das dec js xchg mov fistl push clc push test pop test in loop aad mov sahf xor mov loope enter mov out xchg xor in lcall test icebp dec aam dec popa xchg aas sbbl fisub pop xor adc lret mov inc or lahf loopne push lods fdivl mov cwtl shrb fidivrl out cmp or mov pusha mov push mov pop xor pusha mov mull sbb push (bad) pop test jo aaa fidivl ret mov push fldenv (bad) jno ss or bnd bound mov cmpsl int3 daa xor sbb xrelease iret adc add aam adc jbe mov cmp cmp (bad) fiadd or push les sub insl or mov pop push xchg mov (bad) cmc and out movsl mov popa imul jae sbb loope jbe (bad) pop xchg mov and pop xor bound jbe lret add popa pusha bound dec ficom (bad) and dec addl and jmp dec lret pushf jge jmp fdivrs xor mov cmp test inc xor daa mov push dec das xorl push and mov ss je xchg repz int (bad) movsw jecxz mov xchg sub dec scas inc xlat fs ljmp dec fstps mov xchg sub ljmp mov pop mov or scas and ret (bad) out sarb (bad) (bad) sbb insl xor or fnstcw add pushf pop andl or mov stos lss fdivr in imul in cli adc jmp xor bnd stos xchg jle jge mov mov fcmovbe (bad) xchg cmp push mov pop incb lock xchg inc aam push inc (bad) jno hlt in cltd lahf jno sbbb cmp mov test add mov or cmp xor adc fsubl xchg sub mov push jae rorl mov mov out inc push lds (bad) sub mov fwait adc dec (bad) stos inc xchg mov dec dec lret mov xorb cmp push (bad) mov iret (bad) test mov lret (bad) daa pop out sahf push into cmp test jmp mov stos mov mov lret inc sahf stos fwait sbb xor or je sti mov fstpt add cld in jo mov xchg inc inc jno out lcall jbe stos lahf sbb jno xchg jmp add insl jnp xor or andl movsb mov pop mov xor inc jg call in into or dec or xor mov mov dec and push insb and fwait mov fmuls adc aaa nop repz mov add out sbb sahf adc lds mov arpl mov dec das es insl pusha movb test or mov push cmp cwtl adc iret push cltd cmp xorl inc and or pop push loop mov enter sbb imul ja sti push mov push int3 ds adc in sbb mov jecxz les xchg mov repz push and aas sbb sub (bad) jae stc test and jns gs pop mov mov in sub dec lcall or push ja push mov sub test inc mov mov cltd adcl gs mov inc jnp in mov mov xor inc inc lock (bad) or daa pop jmp cmc xchg movl jl (bad) mov scas je mov movsb add add adc xor arpl xchg out sub icebp mov sub cmpsb (bad) imulb sub fcompl (bad) outsl fisttp xlat cld and scas sbb in dec leave pusha pop pop pop sbb stos mov ds adc adc cmp mov adc loopne jo enter xor insb rcrb push pop dec adc xor or lahf int incl lahf aam push dec pop dec in arpl cmp sub adc lcall and daa xchg push push lahf mov pop xor in ja movsl out mov mov dec xchg push push insb push jg mov out xor loope adc in stc int arpl pop adc in inc ja jno ret adc or sub icebp mov or pop lret add add xor mov jl lods stos mov aas xchg stos (bad) sbb push in xor lock insl and imul outsl repz pusha stos pop adc loope inc (bad) mov or fldt or xchg cmp mov xchg sbb repnz int3 loopne jo jae jp jp imul adc loopne mov sbb je cmpsl movsb push std adc jecxz aas sbb das loopne mov mov mov cld addr16 sbb adc xchg sbb in jne mov xchg inc ja dec out pop and fiadd pop xchg aad rcl (bad) cmpsl mov sahf lea or push mov vmovdqa inc daa or mov inc call push imul jge xchg push xor test mov fcomps mov (bad) jmp sbb or push (bad) in daa stc sub incb pop mov stos and xchg inc cmovns mov dec sti es ljmp std mov movsb jl out lcall clc xchg add fwait fs enter and jne mov pop pop push lods stos jne lret lret mov or loopne add mov mov lret fdivs xchg dec pop jg inc mov inc mov mov inc or lea add mov jno hlt data16 mov pusha js in in stos inc xchg sub mov lods sarb jns fcomps in mov mov aad lea daa test (bad) mov push fcomps in cmp pop jae outsl add sub popf fstps jbe icebp mov and mov icebp sbb call mov test xchg or jo jge cld xchg (bad) push cmp xchg je cmp mov and xchg ja mov insb mov fildl inc and pop hlt pop loop sahf jle,pn dec jnp push dec xor neg mov inc or mov out mov cs mov or lock icebp mul dec shrb (bad) sub std mov and daa or cmpsl icebp fwait not int mov gs scas add pop je sub ljmp js test cmpsb jnp lret cmp scas sahf or mov sbb jl out cmovne dec lahf add inc adc fcompl in mov je arpl mov in (bad) jb mov push ffreep push jne insb mov mov sbb pop (bad) lret rolb insb xchg mov or cs mov arpl idiv pushf xor push (bad) fmuls sahf cmp inc mov ucomiss sub adc addr16 cld pop inc fdivrl push lret outsb push leave stos mov call push fsubrs pop sbb jge leave xor lds lcall mov xchg in test add add into and sti push bound fs nop aas mov decb push testl add mov lods push mulb (bad) pop hlt (bad) xchg scas jno xchg mov stc in stos push stos scas daa stos cmp pop in test xlat cmc cwtl arpl push or pop push in rcrl dec es sub mov cmpsb cmp movsb cmp out mov clc lahf jl (bad) (bad) test inc mov lea cmp adc dec sub push push icebp dec sub out mov in gs scas inc mov hlt lret xchg decb lods call dec clc cmc pop enter out ret rcr addl cmpsl (bad) in sub sub adc lret pop add jp movb pushf pushf out cmp jmp cmp jns pop adc les cwtl lds or mov dec movl push pop adc cmp mov jmp xor out and add pop (bad) lock sbb lret lds xchg aas outsl scas push sbb sbb sub mov sub cmp sahf pop jp,pn daa popf icebp mov push test (bad) jl lds cld hlt jb push cmp cmp insb aam mov cmc push push xor pop jecxz int3 mov mov call xor mov (bad) push movsb cmp xlat les imul inc mov popf mov les and cld push sbb test cltd test stc cmpsl movsl (bad) pop jb,pt sub xor lahf xor (bad) jmp loop mov dec xchg in xor out cmp mov pop and mov inc and sbbl scas mov dec pop mov data16 push adc stos pusha stos push outsb jne mov hlt les or gs xchg adc stos stc pop xchg mov loop testl mov mov divl je cs and mov addr16 push decb aad call out nop cwtl push or sti fdivs aam mov test and sbb pop ljmp repnz aad sbb imul (bad) (bad) or fnop inc sub xor enter and pop adc (bad) push xchg add mov pop jp push js aaa push shrl cmpsb sbb inc mov out inc (bad) addr16 add push mov out and mov shl test dec stos leave dec movsl jg or scas adc mov (bad) mov inc (bad) push mov sub jge cmp xchg pop pop jle add pop xor or jae push cmpsb hlt sub pop pop in sbb xor dec push pop js push jmp scas leave push push xor scas mov mov inc les sub rolb pop repz dec jb sarl andb bound xchg cmp int3 adc fadds adcb dec dec (bad) mov jnp cmp test push xchg push and (bad) ror dec xlat cmp push cli jnp pop mov ret aam ss jge int push mov inc mov mov mov dec xchg in adc xchg mov or sbb in xor add popa (bad) pop mov or or or movsl cmc daa cmp sub mov pop mov jae imul lods clc jbe xor jns stos int3 adc sbb cmp pusha bound jl xchg movsl mov cmp mov inc insl xchg (bad) cwtl mov arpl push jb (bad) in sahf push outsb leave mov ficoml push inc fs lahf dec je pop add mov (bad) js dec mov add ja mov fld adc sahf sub outsl out xlat and faddp mov arpl and xor pop ret push jb xor jno repnz fucomi ljmp outsl gs sahf mov lret imulb cmpsl popa jl mov lcall rcrb sti loop or jp sahf xor leave fiaddl pusha add adc daa sbb shr ror xor mov fimul stos movsb (bad) fcmovne inc shl (bad) fistpl pop push and dec push rcrl lahf or pop or iret pop push mov pop clc daa lods xor in ret outsl jecxz iret outsl enter pop idivb mov dec lret cmp adc pop outsb in (bad) outsl imul cmc arpl popf lea xchg lcall mov jnp dec jb or jmp fstpl test jo push dec sbb sub or ret jbe (bad) pop out frstpm(287 lret mov push (bad) cld insb xchg pop push cwtl xchg mov inc ja pop dec (bad) mov xchg mov (bad) push jmp sub mov pop popa lahf jg sbb inc jae hlt aam popf fsts out mov sub les pop lock jge cs pop xor aaa pusha or addr16 mov repnz xor adc cmp mov sarb pop dec cmp push sbb inc scas in hlt pop dec outsl cmp pop adc dec cmpsl add pop push mov inc add outsb xchg stos imul rcrl add hlt lock ja or push cli mov outsl jae mov (bad) (bad) js jne arpl out into fdivrs jp aam cmpl sub cmpsb in sub add pushl xchg push xchg pushf xor adc movsb les decb icebp imul rol and cltd mov cmpsl fwait cmp clc jbe pop xor and loope mov test xchg cli and insb daa and or jns pop outsb int3 push add and (bad) dec jnp or leave pushf and inc pop cmp dec dec aas push fildll push mov and jecxz xchg enter pop outsb cmovp xor ja iret mov jle dec jg xchg mov xor xor sahf xchg dec sub repz flds rol cmp adc aad sub mov lock sub (bad) mov fdivrs add jecxz inc lods rorl or push push jmp aam jp repz das test mov dec xor (bad) xchg roll idivl mov inc pop inc ljmp or lea (bad) xor ljmp sub dec jp sbb adcb xchg inc ja outsl xchg (bad) loopne and push mov inc movsb loop popa test loope or sbb aam movsl js sbb jle or xor sub gs (bad) mov push xchg out sub test loopne cmpb cltd (bad) mov mov (bad) movsb clc jno rclb mov cmp or andb js movsb fs leave jae lods aaa test inc ret rorl pop test je dec and je pop sbb inc jno scas dec add sub lahf lods aaa cmp cwtl xchg jno sarb cld std xchg push mov mov push decl pop lret das arpl adc push mov popa (bad) das push hlt or cmpsb les out sub dec inc mov mov add push jnp mov movsl test pop add add dec rep jmp int repz jae das push ror orb js mov jmp int3 aad in test movsl fcoml fisubrl push test fwait xor and into aam or dec mov dec scas fcomip adc mov stos xchg inc hlt mov mov lret incb xchg or inc leave pop cmc pop sub xchg push dec and push lret ffree push subb rcrb xchg lret leave lret push or pop lods call inc lahf rolb inc pop and loope ficomp sub je loop mov js sub push dec dec jne push shl (bad) mov jmp jno fwait insb into and jnp loope scas cld mov jno fistpll push out xor inc cltd enter xor mov outsb mov repz xchg inc mov in sbb adc in (bad) into or sahf iret inc sub (bad) pop mov xchg insb mov movsl je adc inc jno jae cld lret sarb jne adc mov inc (bad) sbb clc loope dec shr mov sbb sub inc je sbb or adc sub inc jge je jo cld js jge bound sub jb scas in mov stos scas fnop rorl jl dec icebp mov sbb in in imul mov test aam ja mov je sbb push jmp cmp push jecxz stos (bad) shll into mov mov inc mov dec jbe jne lcall lahf add jecxz leave movsl dec fisttp add sbb in repnz sbb into push sub movsl sarb fcmovbe dec test jns or loop ret jmp fidiv push xchg clc jle inc stos sarb adc jmp daa pop and xchg rcrl and imul or sbb adcl adc out sub sbb cltd jmp push xchg and lock andl bound add lock dec out push xchg dec movsl jns es test (bad) loopne mov shr fcoms aam xchg mov loope adc dec jb shrb inc mov adcl rorb cmovb mov jnp outsb gs fnsave mov adcl or jne pop imul enter push xor sbb push cmp push mov pop (bad) adc adcl xchg test jne outsl jmp xchg mov pop add mov inc xchg mov test push std dec in cmp push cmpsb int3 or cld mov out or cli inc ret sbb pushl aaa xchg jae mov call out ljmp movsl mov push outsb int3 sbb cmp or push mov in jb cli mov out sub imul pop inc sti mov fldenv or not dec scas xchg shrb pushf or lods pop in dec mov into cmp xchg sub push hlt rolb mov (bad) popa out adc negb pop arpl mov popa dec addr16 sub iret inc (bad) lret xchg aam lock arpl cmc stos dec int3 fld1 test arpl enter inc mov dec mov cwtl dec lcall addr16 pop mov mov mov adcb pop or cmp jb outsl ljmp dec arpl xchg data16 dec mov push adc (bad) mov mov bound push out jl and es jne push aam jnp sbb mov dec jle push jns imul cs and repz adc (bad) pop imul lcall pop fucomi test test mov and mov jg fldt popf ljmp in mov adc (bad) jg mov fldcw mov movsl ret mov jmp dec repnz xlat sti dec mov in ja add (bad) test or push arpl dec hlt int push pop xor jge pop fldl (bad) lea jp sbb mov pusha lahf fsubr mov (bad) mov push jns inc xchg sub into and ret aam aad cmpsb pop cli imul cmp inc lahf das iret (bad) mov pop mov xor out add push or mov jg dec shll aas or push mov sub jno movl scas pop inc scas mov add mov repz sarb sub sub mov dec mov lods xchg and movsl aas popf sub adc or ljmp push xor jbe in fsubrs addr16 and scas ret and xchg imul pop pop or scas cld and roll or sub push jns add pop mov rorb or aam aaa outsb jb fcompl mov scas mov dec xor mov lock dec xchg sbb sbb cli pop and mov cltd push add divb adc add ss inc enter mov add dec cmpb add test mov mov cmc fwait jl xchg ffreep sbb push das repnz pushf lret inc leave test xchg pop push xchg outsb in xor aam or fidiv idivl nop or fmull push xchg stc into ret cwtl sub in inc lods dec xor xchg test push lea mov loop ds lock mov enter pop cmpsb in inc xchg pop and pop scas mov inc lret daa and adc jecxz popa add fwait cmp ds daa rorl and lods idivb jmp mov adc movsl adc pop push (bad) or xchg inc (bad) mov inc ss outsb (bad) sbb mov mov inc xchg ret add pop aad inc popa lret jg (bad) aad rep push adc js push pop addr16 mov jns das cmp mov aas push xor icebp and push inc rolb test lea mov xlat call sbbl ret gs push sbb cli sub sbbb inc pusha (bad) je pop in inc cltd jl pop scas pop or push push insb int3 xor push mov sbb out js mov cli dec stc and push push add pop mov cmp mov std in xchg cmpsl pop push push lods daa std lcall ret jle decb inc rol stos ljmp sbb xchg loop ret dec stc stos mov cmp pusha inc mov mov lahf xor dec aad or or mov mov mov jle idivl sbb jge sbb sarl mov xchg daa addl or popf pop jo popf pop jge fdivrs pop inc int aam mov dec mov adc popf xchg and cmc daa mov in adc sub mov insl data16 xor popl add add sbb jb push or inc mov clc int3 xchg sub cmp js stc lahf sub xchg push push stos ret push jb pop jge ret pop or fsub xchg inc jmp ljmp insb dec scas sarl test inc mov int ds test js jbe mov push mov hlt (bad) or push std out mov push sbb jae and dec ret adc cmpsb sub xchg xchg cltd adc les stos cmc (bad) fnstsw rolb jl mov idivl or pop xchg dec loopne ja sub mov lock xchg xchg in int3 pop jg or sbb add push out outsb cmp gs andl mov imul pushf inc call and aaa cwtl xlat push lcall xchg fnstenv (bad) mov add jle arpl or xor sbb popf push (bad) in loopne nop sbb dec mov and xchg scas leave js divb push popf aam sbb ss dec lock or jl push jnp loope sub and outsl in dec mov cld adc repz (bad) pop push dec xchg fcmovnu mov push int test xchg ret ret fcoml popa adc (bad) mov ficomp adc adc push mov jg inc xchg push adc in adc cmc sbb xchg lret mov sbb pop pop (bad) fidivl add lret imull mov jno mov xchg cld mov cwtl pop loopne cli icebp test xchg stos jmp push and mov jge push adc sub xor jb std pushf adc mov push hlt aaa pusha sahf inc sub mov push popf sbb pop aam stos stos push in pop stos xor cld gs lock xchg xor push cwtl je xchg sub fdivrs push scas xor cmpsb sbb test clc push sahf adc ss or sub inc fldcw popa mov cmpsb xor sarb pop mov dec mov xchg imul jne adc loope jp shl push enter out aas in ja addr16 xchg jge andl arpl (bad) lret in xchg jmp and je iret (bad) mov aad cmpsb pop xor incl js arpl inc mov out mov data16 sti xor cmp fidivl sub xor loope inc adc cmp adc pop pop xor pop dec fldenv sbb xchg dec (bad) push mov ljmp or (bad) stos bound mov or ss cmpsl mov js pop in ret subl inc insb sti loope in adc fisttpl push enter stos clc inc enter lea int3 xlat in shrl fadd cmp test fcom push dec add or dec lods lds xor test es mov xchg dec rorb lds inc mov call repz add adc es xchg in inc outsl out cmp or mov mov pop cld scas jae in pop std add out pop sub cli outsl xor lods add push test cmpsb es xchg xor je sbb mov pop fcompl mov sub lods jb pop lret ja push dec int mov pop mov xlat dec pop dec lods push xor in xor or imul jne mov pop or (bad) xchg fcoms cmp enter ret pop sarb (bad) out cmp std inc aas xchg mov push stos mov stos out cmp (bad) lcall leave xor jle mov pop mov stos les mov mov pop (bad) daa mov cmp sti sub aam lock xchg insl je hlt xor fidivl in cli jae int add fs ds xchg inc pop mov mov pop mov sbb fadds jo movsb or ss aaa nop and scas imul cmpsl outsb out pop inc mov jae insb cmp dec inc sub or std aaa add push stos jg push push aam daa and nop es pop mov xchg and mov or rorb add mov outsb stos idivl out dec rcrb pop mov test movsb add mov popa adc push (bad) mov test mov pop push (bad) fbstp xor dec in adc mov (bad) lods outsb lret popa popa popa daa test lods aas xchg scas add mov jnp aas add jno pushf xchg pushf cmc dec aam insl or fisubl negb addl repnz sbb jge and cwtl push ja push jp clc fnstcw pop (bad) lcall xchg (bad) sbb ds in aad bswap push sub jp insb xchg push lahf repnz mov dec mov aaa sbb xchg pop cld aad or cmp mov or movsl jae jg push ja cmp stos jbe adc xor xchg dec sub inc lds sub sbb sbb ss leave dec cld xchg adc imulb cmp arpl inc js lods mov pop mov cltd in sahf stos aam nop sbb cmc lds mov inc mov push shrl adc or (bad) repnz mov dec jb aas jns adc adc out andl std jb jmp cmp rdmsr clc mov bnd sar insl fsubrl adc jne lret mov mov mov sub (bad) mov xchg lods xor ficoml xchg fisubl bound jle ret mov sti arpl xor movd or lds fsubrs insl push xor mov sahf pusha cmpl dec and mov (bad) cli sub (bad) xor dec scas inc aaa out xchg in leave sahf xor daa and jne mov jae mov mov jns fimull call out addr16 sbb ficom cmp out (bad) (bad) xchg scas cld aad mov mov addl aam push mov cwtl std mov pop out enter pop sti pop test jmp mov fildll lret scas pop push insb sahf stc xchg icebp inc or sbb sbb sub (bad) jecxz movlps arpl (bad) icebp lock mov push dec push in cmp pop pop mov or (bad) stc adc cmp and test push dec pop mov in enter loopne dec inc inc test jns or dec mov icebp jle push adc mov mov mov sahf pop push inc cmpsb je mov repnz in push pop and add inc cli rcrl mov inc cmc dec jle (bad) lgs ljmp adc fsts out pop iret mov loop inc lret cmpsb add push lds sub dec add ret xchg sbb ss xchg (bad) push mov bound icebp mov sbb movsb clc sbb pop push iret jg es loope pcmpeqb repnz insb xchg insb mov lock pusha xorl pushf mov into nop fidiv add fimul cmpsb sub (bad) fist ret jle push iret pmulhuw test mov stos cmp sbb add loope cmp in mov inc pop stos pop scas adc popa ss hlt jo mov inc jne mov mov cmp mov pusha dec add in adc and mov pop bnd lock dec nop outsl shrl jae fs (bad) in jb int3 mov ja leave inc xor pusha int3 notb mov xchg ja loope lret scas mov loope fisub (bad) ret inc cmc lahf sub cmp mull (bad) leave insl xchg fistpll mov pop loope cmp inc jae cmc pop mov (bad) hlt mov jmp inc push pop imul inc dec (bad) jmp rcr sbb sbb mov jae lods and test push push in orl cmp sub and loopne (bad) shlb dec push mov insl dec sub xlat push add jb xor ret test xchg fmuls repz ja xor jb cmpsb and push or xor fmull adc mov inc xchg addr16 sbb xor scas pop and std dec ds ja outsl mov jb pop ss pop sub decb sbb mov push addr16 dec cmp scas mov dec sbb sub xor or stos std aad push hlt lret add add movsl mov pop push mov popf cmpsl push loope pop mov sub jecxz inc inc jnp inc pusha sub adc std or sub sbb fidiv fnstenv sbb mov dec out hlt orl xor pushf shll mov inc subl jno aam dec or or mov dec push mov mov and out adcb push cmp xlat cmp inc inc jmp out test mov add pop mov imul mov mov xchg gs sbb xor popa and mov or sbb mov sbb sahf xchg pop stc out clc push (bad) push jo leave pusha mov push fbld sub mov sub (bad) cltd and lods repnz out push push imul sbb repz cld cmp subb idivb stos rcl inc nop xchg (bad) dec and adc pop mov cmp pop and push sbb aas pop push repnz push mov sbb fldcw bound aad xor adc repnz pop scas mov mov (bad) (bad) icebp rcll push clc mov push mov dec cs repnz in test sbb xor push adc in sub xor cmpsb xor aam push adc cmp mov jb or push aad pusha loop lock jg scas xchg lock jg cmpl cmp arpl xchg dec inc lods mov jo cmp jmp mov loop pop mov xchg loope pop lds xchg push sbb int3 pop loop (bad) aaa mov xlat adc pop je imul aaa call cmpsb mov imul repz adc cmp insb pop fisubl or mov (bad) hlt lock std push cwtl mov insl add das imull jne xor dec adc or lods inc scas add lock rcrb mov daa jb jno in jns test call jb iret cmp jne fcompl mov fsubrl jne add hlt xor mov inc lahf xchg or adc jl sbb ret lods cmpsb jle js sbb (bad) cmc cmp aaa sbb ja flds jns jp mov ficompl imul gs inc xchg out sti and das (bad) je incb push mov push mov or loope dec incb pusha inc loopne or add into mov out stos jbe sbb sub js stos mov dec cli jae shrl pop mov push test rolb xorl pop push add pop lea ss pusha xor fwait ret outsb movsb jb xor sbb (bad) fnstcw les mov inc mov mov aam xor fs dec and int3 lea lock test inc das inc mov out cmp addr16 repnz sbb mov fmuls aas xor add dec jae jne ds mov jl (bad) sbb jmp (bad) ret push adc sbb ljmp lds fwait push inc dec push rcrb test cld sbb jp (bad) sub rcr js fs (bad) loope in sub inc rorb sti jo mov mov movsl gs cltd xor pop push xchg outsb in mov iret aas iret fs adc ret outsb jmp icebp sub loopne add inc outsl rolb push bound or test cmp ret aam nop inc (bad) jecxz jl loope jbe lcall out repz aaa dec es cmp (bad) mov mov lahf aam mov cli fwait scas inc aam jmp push out push and dec mov insl popf xchg mov call sbb pushf lea jne ret mov pop fcomps push jno cmp aam mov mov lret pop adc lods mov push mov cmp repnz (bad) xchg xor mov mov cmp inc xchg inc fisttp out pop and and sti mov cmp xor mov lahf addr16 pop sbb sahf cwtl loop je,pn push push add pop xlat pop or inc fmul adc std lods ret mov ds mov add jb and sbb jne test dec sbb nop roll nop cld lods xor mov mov or lock mov xor and popa push dec xchg push adc test push cmp xor neg and sahf aaa int3 fmulp fnstsw dec and into and cmp cld mov add aaa xor cmc fbld add adc ds xor in xor aaa andl mov out ficomp sub jae add dec clc and les push and sbb mov fs mov in (bad) push popf outsl sub call cld idivb mov and clc or or ds (bad) sub or xchg jp movsl lods stos mov jne popf test inc notb and sbb test xor test or xchg cltd subb jl add dec jo cmp xchg out push sahf mov mov lahf pop add pop lret nop popf arpl test and int pop hlt sub mov xchg lcall dec xchg insl pinsrw outsb push int popa hlt addl lcall mov ror mov rorb (bad) je push iret push arpl stos pusha out jo fptan push xchg jns cs ljmp jae mov adc or xchg or jae or adc mov sub mov aaa out mul fisttpll jne xor pop aas add jl cmpl mov xchg scas mov pop jb or clc adc std push pop or or call dec adc inc in addl jmp pop mov mov jmp in movsl adc mov jo xchg loope jmp sub sbb in or cmpsl inc clc dec or pop mov sahf and int3 iret pop or xorb adc cmp xchg cmpsb sti sub addr16 pop inc imul shrl mov pop add inc out loop mov xlat cmpl nop xor (bad) ret add in imul pop jecxz gs cvtps2pi call leave cmp cltd sti cmpsl mov jecxz xor xor pop push negb lea xor xor mov xchg (bad) fcomp lahf push sbb fisubl jmp sti fs jbe dec adc negl add pop inc add xrelease sub mov and cmp mov jl push loop popa cmp jl in es cmpl jmp xchg loop fldcw jnp fs or sti dec dec xor push xlat and push xor ds cmp flds jecxz in add pop into sub pop pop jne add push sbb cmp mov lahf and cmpsl dec stc or jmp ret push into push mov jno rcr cvtpi2ps dec lret xchg mov cltd cmp jge add mov daa mov xchg pop fisubl sbb mov pop cmp call loopne pop imul ss add lea cmp movzwl nop nop push xor enter jo mov arpl sbb and mov mov mov popf add imul xor mov push lea popa jns inc cmp rolb iret lea mov aaa sbb (bad) push xor xchg xchg or pop aad outsb adc aaa out repnz cli jg (bad) dec sarl push inc cwtl or adc jo add clc jp pop test inc das ljmp sub mov popa out lods mov out fildll cmp add pop out jge jae jle cmp mov out xchg push int mov fld1 out cmpsb clc aam dec xor cmp ljmp cld std sarb ds add push lahf pushf xchg and xchg imul in fist (bad) lods sbb pusha fnstenv std jg adc push loopne jnp sub xchg xlat mov xchg mov jbe mov mov jns mov divl fldl sbb enter imul xchg test (bad) jle ja leave ret repnz in shrb mov dec (bad) (bad) movsb scas jmp (bad) out cwtl xchg popf pop jl jb aaa fistpl mov leave inc cmc sub outsb stos rcll mov divb adc fs les jmp shll int jecxz (bad) mov and dec push jecxz adc dec jmp add cwtl jecxz std (bad) in adc addr16 mov mov test fild dec jne mov ret sbb mov hlt (bad) cld les dec lahf and rcr jb fdivl out in sbb cmp test or mov pop je xor jne cmp adc imul orl bound dec and add jmp (bad) mov call bound mov push (bad) lock xor mov hlt lret fwait mov cmp adc cmc addr16 adc jmp in scas subb test pop loop sti popf seto jl mov mov push xchg pop lcall push ds outsb and pop jp xchg and inc stos mov je push in cmpsb mov inc (bad) xchg aaa iret cld cwtl roll cmpsb ficom xchg addl inc sub and ret adc icebp mov ja pushf fistpll mov call sbb cmp aas jle test inc jnp loope mov fwait push in jg in ds add sbb insb mov daa or or push mov repnz scas sub xor faddp mov or push xchg rcll xchg sub bnd pop cmpsl add xchg xchg push rclb mov jne jg xchg mov rcrl ja jae,pn push push dec sbb sahf add mov jmp es adc rorb test fiaddl jmp jo push stos jno jmp lahf sahf dec stos je mov arpl lahf in jo mov in lds pop jmp or xor dec cli or sub (bad) jle or xchg jbe,pn mov jnp call loop popa jmp mov jo add nop lods dec inc mov pop pop inc xchg xchg mov push shrb sahf test sbb (bad) (bad) mov stc mov push jg mov sbb sub ret fsub push mov jnp pop mov inc xor mov add mov stos mov mov (bad) hlt lahf push stc sub xor into rcll in jecxz into jns xor loopne cmp fstl mov dec aaa roll fistp inc and fsubrs mov push jnp cmpsl mov fwait sub jne cltd mov xor or mov mov xchg loope xor inc mov cmp and adc and dec movsb push (bad) popf lcall movsl test das push sub push xchg mov daa insl insb xor cltd mov std cmp ret nop repz jne xchg dec rcrb jne jbe (bad) int cmp and into cltd mov out (bad) sar stos sbb fild popa jecxz jbe rcll sti xchg pop push fs jns xor pop push xchg jp int3 adc or ja inc cmpsl or fwait cmp xor add push mov mov and cmp loope fdivrp hlt mov es cmp (bad) ficompl and fdiv icebp push mov xchg jge cs adc daa in add cmpsl cmp inc and push insl insl iret outsb pop add jmp pop outsb jl xlat fistpll inc leave cli (bad) sub or fyl2xp1 scas outsb (bad) gs inc repnz mov fdivl push (bad) btc push mov test adc jle stos or xchg cmp sbb jb adc and or mov mov sbb popa pop fstpl jg jbe aam xor mov xchg imul imul sbb mov lret and jnp push scas ret push pop mov lea rcr dec add pusha (bad) xchg fs arpl adc xor cmpsl scas add cmp sub ret jo loope test sub mov jo mov and outsb mov or pop rcrb cmpsb testl in dec loopne fldenv pop add jge and loopne sbb push and enter cmp (bad) sti loop xor movsb loope (bad) xor sub scas repnz gs add rcrl or dec das iret xor sbb into out and and dec sub jg std xor push xchg (bad) lcall ret sbb int or (bad) jo inc cmpsl jb push fwait sub sbb xor iret dec mov bnd daa add push mov in cmp je cmp mov je cmp icebp aad jno hlt cmp inc xor jbe sub loopne push ret sub ja (bad) int3 pop outsl xor mov scas xchg sbb sahf pop mov das mov rcl xor mov cmp push cmpsb repz sub inc out mov lods lods jnp push js lods (bad) mov rcrl aas lea sub dec sbb or pop jo xor mov mov add data16 add adc push mov cwtl lret mov xor xchg pop movsb int add int sbb frstor adc push jns sub jbe dec xchg jmp lret dec push test ret mov jnp lods outsl jbe fdivrl xchg cltd lods rorl inc pusha (bad) test jo add mov pop loop add jmp and mov mov mov jle mov push popa insb (bad) xchg inc stc xor cmp xor int repnz jb (bad) mov in fildl jmp out dec enter insb adc pop shl lods pusha cmp int3 push or stos mov xor push int (bad) push inc pusha clc fidivl cs inc mov cmp fs fs (bad) cld cmp movsl adc mov xlat je iret pop fadds stos fnstcw aam mov mov jo fwait enter adc jp mov add lret jo mov mov push sti add cld xchg xchg enter cmp rorl aam rcll dec push orb push lret icebp fdivl cmp loopne ja cs jp sub rcll adc sbb jl jle dec ret pop cmp fsubrs push sub dec aas sbb pop sub pop mov std test (bad) xor loop or rcrb push hlt mov or cmp mov repnz sti pop je out sahf shr lods arpl and lock pop push lds addr16 insl mov or add cmp mov jmp sbb std and inc jge pop add js jno sbb mov mov movsl (bad) divl mov cmp enter mov mov dec stos fildll sub pop mov sbb ret enter push mov aas (bad) daa hlt pushf mov inc inc jno sub enter cmpsb sub sahf sub push cltd out cmc sbb cmp xorl iret jno mov popf dec dec cmpsl icebp adc in out pop jb mov pop mov xchg mov jl jl jne cmp adc add incb subl push mov adc scas pop mulb dec pop lahf jmp mov pop jle pop popa scas testl out or add cli pop adc mov in jo mov (bad) xor sbb or mov sbb (bad) lods xor (bad) or in mov jo fwait bound inc inc add xchg sub out movsb (bad) mov push insl mov sub setnp out lea and outsb sti mov leave cmpsb cs jmp jmp inc cmp insl dec (bad) ficomp lahf gs inc divl mov push xchg ds decl test cmp or dec cwtl ss loope or sbb mov mov in mov push leavew cmp cmp and addr16 cmp dec lret movsl je mov pop sub das (bad) push cli ja cli loopne out cmp in (bad) ds lcall ficom bound cmp adc test and gs sbb popa leave push adc jnp out sbb jno push mov scas (bad) shl cwtl cli out loopne (bad) jne cmc cwtl dec sub imul popa mov stc mov lods mov push andnps pop jne inc and push out out repnz fadds fwait (bad) imul aas rcr pusha mov insb ljmp push repnz (bad) loop imul adc fnstenv mov into adc movsb dec imul cli shrb adc mov dec mulb fcomp in push stos mulb and aaa shlb sbb pop inc or into test xchg popf loopne inc jg out out add xchg outsb inc int icebp cmc out scas bound jge sub mov iret xor adc xchg popa lock mov and cmpsl subl mov jmp lahf out push sub sub cmp and repz sbb sub in adc jo push adc hlt jno cs in push xor stos push das imul ja out int addr16 insl mov inc lds out pop push hlt int3 mov insb (bad) cmp outsl lock cld inc fistpl pop out stc mov add jbe (bad) sub xor mov add push pop adc add jns scas jp push lret fs mov lcall pop sub mov adc rcrb adc or or cwtl push pop outsl pop out (bad) push dec adc mov mov inc dec imul cs jb jo stc stc and inc test xchg or icebp push mov mov mov xor or out fwait push lods jne and pushf cmpsl jmp (bad) test pop lret xor add (bad) call add and mov cld bound pop leave mov jbe fwait pop sub fildll add inc shlb sub pop bound lods es pop lea mov push cltd xchg inc sbb sub mov fidiv das xchg sub jmp out repnz in lods rcrb repz xor lock mov js or push inc cmp aad mov xchg mov jno test mov pop fldl cmpsb loop mov call mov push jno divb test loopne outsb outsb out and sub mov jne add loopne sbb icebp sub or out push jp pushf lcall ret and xor aaa test mov adc pop dec arpl lds imul nop orl popf (bad) xor xchg outsb or mov xchg xor div inc imul (bad) scas imull and stos jb arpl dec out push scas sbb lret loope add adc push mov repz lods push sub mov lods hlt ss inc arpl add (bad) movsb jo in roll cmpsb out pop add cmp and mov popa jbe or mov cld daa jecxz scas jno sub lahf dec repz in scas adc push and add out aad fwait je dec fnstcw imul mov enter sbb stos movsb loop sub sbb ljmp mov push push (bad) pop push int sub mov push repnz insb je lods cmp dec mov jle ja and or int adcl sbb imul add add adc lret sarl cmpsl mov test mov movl (bad) cmp lock sub xchg sahf cs outsl mov or aad or outsl sub ss push jb adc jb jge (bad) inc sti mov push push cmp xor es jns and push adc fwait sbb jbe pusha pop lea jns divb fmuls dec shl enter pushl punpckldq sbb push cmpsl call nop and gs aam into add push sub xchg ja repnz into or enter jno lahf cmc lds lahf and outsb mov xchg rclb mov push iret cmovge jb pop in sbb sub jmp cmp cwtl imul jge movsb lahf cli add loopne gs cwtl or sbb inc or scas pop sub xchg hlt nop add mov pop xchg pop adc sbb sub adc fisttp push inc insb pop pop mov mov push (bad) repz cmpsl jnp cmp jnp je scas push pop lret rcll inc or push movsl adc js push jmp cmpsb mov cmp call in jp cmpsb mov test xor cld imul sub and adc sbb icebp lcall xchg into test pop cmp mov jbe test mov xorb imul inc js inc inc lcall cmp cmc fcmovne pop clc sbb das push xchg stc xchg pop imul mov sbb lods scas jae mov xor jge jns movl pop pusha push xchg enter (bad) push subb dec push jae aaa aam jge jg jno xchg adc jnp and mov movsb jl jne repz popa nop mov cltd push insl mov fmull add push and push push test sbb dec jne lahf push push push (bad) imul popl fmuls cmp pop and pop insb inc add pop sbb mov lock mov aad xor add imul or lcall push in mov shrb jp cmp push inc push cmp push ljmp shll out mov rdpmc push call cmc aaa hlt xchg fisubrl lods mov pop inc fldenv (bad) idivl cwtl push jbe mov rol sti rorb push nop fcom dec mov aas mov (bad) pushf out mov adc into mov adc cmp or mov nop (bad) or dec mov imul add dec js test rcrl lahf mov dec outsl js pcmpgtd mov loope push mov jecxz repnz mov stos mov cmp xor sbb ret sbb ljmp cmp xchg je fistpll push imul lcall mov hlt outsl jo out xchg cwtl jge loopne xchg cmp cmpsb or jns in subb mov push mov mov pop (bad) xorb mov pusha call adc dec dec push lahf cmp pop adc xor jg cmp dec cld fldl and sub sub add push pop movsl call push jbe andb in add rolb fs gs sub inc fucomp lret int3 pop les icebp std mov xchg arpl ret xchg add mov sub sar negb push fwait mov fwait xor adc fcompl insl xlat xadd mov imul fisttpl pop adc sbb jae xchg mov fildll std jae enter sbb cltd jno imul orl (bad) ret mov mov and adc or and pop mov les add dec sub out rol scas or aam cmpsl addr16 mov enter mov dec fnsave fs or push push enter out enter jno popf mov sub push pop in ret pushl mov loopne xor pop ss pop mov cs inc push or cs cmp insb or call xor mov push dec mov pusha fsubrl xchg outsb xor or push adc adc jl dec ret pop add stos or into push mov and (bad) (bad) mov add (bad) cltd ret mov mov adc cmp sbb clc jno xlat mov xchg push dec ret sub push lret aaa dec in fcmove adc negb (bad) (bad) lock and mov xchg pop dec fimull pop movsb inc int3 and stc lcall add cld in and fcoms ret insb mov dec mov cwtl pusha lcall xchg push adc xor psubsb int3 fldl call rolb or sub mov mov sub clc and stos and sti xor je xchg sarl insl test gs repz mov jbe add cltd mov (bad) lock dec jb cwtl fildll imull test fldenv bound xor (bad) or nop push dec das das repnz cmpsl cwtl negb and pop fisubl xor push add xchg ds mov pop loope aas sti mov (bad) pop out out in inc jae lcall xchg fildl loopne movsl repz in mov dec jge dec out repnz out lods xchg push int ret pusha imul sub mov fstpt jnp pushf dec mov data16 sbb lret lcall orl sub inc jge pop fwait (bad) pushl (bad) in (bad) mov pusha mov movl xor cwtl adcl pop adc out xchg mov scas add sbb jmp cmp bound and sahf or xor repz (bad) negb add iret and adc xor add fidiv pop cmp jmp add cmpsl adc mov dec divb xor sti addr16 xchg std pop imul jbe mov and or jle push mov jo xor dec lret mov jb lds cmp das arpl xchg das jge adc in or cs jecxz xchg popa dec push cs mov sub inc popa push fwait cmp jo clc cmp testb shrl xchg pop gs icebp xchg mov pop jle jg push loop dec push mov fdivrs out je cltd xchg xorb outsl xchg ja mov mov dec fiaddl daa mov or sbb mov dec cmc js add or ss daa lret fs mov sti das leave sbb mov xchg in das mov jbe rcrb ror jmp xor std bound fld fbld cld outsb ljmp rep mov out push out hlt sbb cmp xor xchg rol into lock mov sbb mov out adc sub jb scas mov test sbb lahf inc std loop ds mov sahf add xchg cmpsb dec lods cmc pop push mov cmc sub xchg lret jmp popf add mov or lret imul mov mov sbb pop mov clc push iret fwait add sbb push jge mov loope xlat repz mov stos push fnstenv loopne push ja add mov and xchg mov cmp into jge mov pop out cmp cmp mov jge test aad pop xchg mov jne pop add aaa dec adc icebp fwait xor pushf and es or int push xlat ret inc lock out sub push mov adc push push cmp into (bad) into ljmp loope and xor ljmp insb out pop jmp imul clc cmp cmp adc es xchg fnstcw enter fwait shll lods stos and jae cmp lods push xor xchg out push jno imull cmp vpavgb icebp mov jae sbb lea xchg pop push jne add mov push sti std mov (bad) nop mov jle pop xchg jae sbb xor pop jno es sbb loopne or imul cwtl add outsb push ljmp aam push xchg push xor imul push sbb push ret loopne les and clc jo (bad) xor sub shl call and jns out mov pop fwait pop xor outsl mov pop fistpll (bad) pop and repz jns lret mov inc dec in rcrl add xorl mov out test dec lcall mov int mov rcpps xchg les ficomp outsl jge ret neg mov lds out jg int3 mov imul cmp pop adc inc and push les inc xchg cmc mov data16 xor int3 in out and cmp lret xor ss jle js lahf cli insb add rclb movsl mov pushf icebp push jmp xchg push out push ja sbb or arpl sbb mov sbb fwait loope mov cmpsl jno in sbb dec xchg clc shl dec arpl jmp mov icebp mov pop out roll push outsb out dec pop sub bound mov adc jl sar jnp dec adc sub insl (bad) xor loop xor ss jmp sbbl sub (bad) (bad) xor mov add pop mov (bad) icebp adc enter add out inc (bad) repnz rorb xchg xchg stc add leave adc (bad) roll daa push movsl sarb int inc pop pop xchg sarb les pop je movsb sbb roll daa shl lods rcrb es mov mov scas or push dec lahf pusha adc insl aaa mov xchg push pop repz mov hlt test out cmpsl xor (bad) jne pop push test xchg cwtl int3 xchg adc xor mov and ror cmp std sbb icebp xor xchg imul test mov cli pop or jmp mov push and mov ljmp jns and loopne xchg push mov sbb aam and xchg sub scas xchg cmc insl jno push fnsave add and gs fwait icebp xchg cs mov out mov sub or ja xchg and xchg shll mov or test arpl mov (bad) fwait or daa imul xchg (bad) pop mov dec loop insb aad xchg stc xlat jb dec mov lahf pushf adc pop popf adc pop xor dec int hlt xchg or jl into inc imulb and in iret lret call (bad) (bad) out aas mov mov xchg pop into pop xor lcall shr adc jl mov pop cltd pop jno jge cmpsl call fbld scas xchg mov cmp sbb je or add push pop je pusha lods xchg arpl cmp pusha jmp mov cmp pop push inc push cmp mov xor arpl clc dec xchg push inc movsb sub fadds faddl jne shlb shrb and dec nop stc jnp push adc aaa push leave jne das dec pop notb loop incb add mov (bad) mov mov inc scas iret pop dec stc dec push dec lahf pusha pop popf pushf lcall jbe pop lcall push shll (bad) pop int3 in addr16 stos push addr16 xchg push xchg cmpsb (bad) mov xchg sarl inc pop sub nop inc mov cld ret (bad) sub test sahf inc aad clc rorb sbb ret insl jb es ss and js xchg imul fsubp and mov fdivrl lahf loopne (bad) and sbb cmpl dec lahf stos popa jo push mov or mov pop pop test mov push cmpsb addr16 pusha loope mov ret addl ja enter sbb lods pop sub pop push xchg addr16 jle push stos mov sbb inc (bad) cmp pop mov lcall push jo je lret sub push cwtl mov dec adc xchg and cli flds xchg rcrl mov cmpsl fiadd stc pop in lds mov fwait enter jl or les or bound xchg movl add or insl jg aas in dec and lcall dec add cs sbb adcl xchg std mov dec lods out or sti loop andl adc iret xor fiadd jp repnz mov inc out pop jnp pop add xor xbegin pop push outsb scas sub bound test pop pop mov mov rol sub ja push test mov into push out (bad) xchg and (bad) dec xor out (bad) dec es negb sahf adc inc ret xchg lods shl outsl adc inc lods mov and cmpsb jp icebp sbb inc aaa jo pusha lret jno xchg mov jl jp add fmul loope pop (bad) jne scas stos pop cmp iret call add cmp fnstcw jnp mov sbb pop sbb cli nop sbb inc add daa ror aaa pop aas mov dec cmp or push and pop mov mov gs cmpsl mov scas sub pop inc inc mov pop push mov je (bad) sbb ja pop jmp loope imul push and pop adc out pop rclb mov xor jl cli jae push rorb stc in mov adc jg fsubs addr16 andl mov sahf ret aad push sbb jo dec adc sarb nop add fcoms aaa and dec je xchg or inc mov or movsl js daa enter or xor mov popa ret aam cli xchg cmp arpl scas mov xchg lods jno popa xlat in fdiv (bad) in fnstenv mov stos cmp inc add notb dec movsl cwtl add or sub mov movb repz inc out dec fsubrs ret or jbe push imul sbb addb jne call and mov leave shrl loop or xor stos test jo bound iret mov push mov push enter in inc stc and pushf mov inc jmp xchg shl pop aaa sub insl or pop int pop loop add pop fildl push sbb rcrl sub pop dec inc arpl cmp int sub stos arpl sbb mov xor (bad) pop out sbb lahf mov clc mov stos cwtl dec cmp mov lret dec xchg lret mov mov adc cli imul inc incb sbb stc movsl sub sub sub jbe add xor jns cmp cld cmp inc jb dec push loope cmp pop mov out mov inc cmc inc cmp cs in push ret fdivr int inc adc fs and and nop inc dec (bad) out imul push dec rcrl loope cmp inc lds push mov bound clc xchg into repnz ds dec into sti (bad) (bad) sbb jnp xor fwait jge and mov fwait and lret testl fadds mov je movsl xchg lods mov push lea jle inc dec lods fildl and clc jb mov and (bad) pop mov xchg sub fnsave flds ss cmp pop or lahf out jmp (bad) repz in (bad) rorb lea mov sub data16 frstor out dec or mov fisttp fstpl out stos jne sub insb in pushf call push sahf cmc sahf sarb xchg sbb mov lods ss js test pop and push sub push int3 or (bad) mov loope inc (bad) cs adc dec int3 pushf xchg call outsb mov lods test adc test fs iret pop stc sub test (bad) or jp cmp clc adc cmpsb addl push xor jp test cmpps mov fmuls push (bad) inc aaa es cltd push fs pop xchg xor add jns xorl dec mov dec std call cmp cmpsl hlt insb xchg stos aaa mov add adc fidivrl fild or xor or sarl pop ficomp inc xchg test cltd dec ds cmpsb (bad) pushf arpl mov xchg aas lcall push cwtl cmpsb cmpsw (bad) fucomi sbb dec and sbb ret sub std add mov xor push cmc jg sub scas sbb and adcl (bad) pop cld sub js sarb push adc int3 fdiv test and imul movsl jns mov insb rcrl imul push or out mov pop xchg in adc pop pop test out loopne fcomps (bad) idivl std mov adc mov jne mov outsb lock imul mov cltd push iret lcall rorb pop and jmp cli rcrb xor and insl aad xchg scas (bad) flds push fldenv loop enter adc jno cmp xchg dec mov notb push mov pushl ja das frndint test daa adc push mov cmp jl jge mov dec fmull jnp sbb sbb rcl mov (bad) cwtl clc mov outsl adc pop lods test lea addr16 and push inc dec or outsb es (bad) push dec add adc pop nop mov das dec (bad) jb lock sti divl pop add adc inc and aam dec mov xor and xor dec mov popa push fwait sub push test push cmp mov mov jb mov repnz dec enter inc (bad) xor push pushf and inc sbb mov xchg jle mov ret popa ds push clc dec (bad) jns and mov sahf test jae push pop cmc cmp or leave loop add je mov cmpsb and sub ficompl push cmc fdivl int idivl push popa in mov mov jg pop fnsave js out cmpsb clc out cmpsl pop xchg lock (bad) cld dec hlt xchg cmp push inc movsb xchg adc dec xchg sbb imul aaa pop adc sub cmpsb scas shrb hlt mov or pop mov xchg pop push lret (bad) cld test dec xor push add fisubrl movsb push int fcompl out push adc daa inc repnz pop sahf mov int3 xchg adc sub cs hlt push lcall lds aas gs push sbb or or xchg sahf mov gs push sbb imul test or mov jb sub repnz into notl pop fsubr xor and and fistp jg aam xchg stos sbb insb dec push pop xchg hlt pop jo out les lea inc and cs and xchg movsl repnz in xchg and pop ret std sub scas mov aad fsubs imul adc stos stc adc or mov xchg and pop pop jnp hlt sti sbb cmp ret mov sub test pop push jge dec jno cmpsb xchg mov and dec stos and inc mov cmovae adc or add data16 bound mov clc cmp les bound lret daa sbb or out std add inc das mov les mov cmpl sbb arpl shlb cs fistpl xchg mov mov cmpsb cs inc mov sbb sub and cltd sub cmp sbb mov inc adc outsb sbb fnsave stos (bad) pop adc or xor cmpsl and test inc test xor into (bad) stc sub fisttpl aas jns dec xchg xlat jo mov or dec inc jb (bad) lcall xchg lods pushf jae popf sets repnz enter loope sarl jne dec or out jmp jle mov lock jp (bad) xor xchg out in mov aad clc scas flds push push dec xchg or cmp sub mov (bad) jle nop ret fdivl jo cwtl mov pop dec inc clc dec scas sbb iret divb mov add out sbb (bad) mov mov sbb hlt sbb xor pop xorl sub xchg lea outsl cmp and (bad) jmp cmpsb sar int3 fwait lea pop cld adc les nop (bad) xchg mov mov mov sti mov and icebp aas pop (bad) pop ja jno leave mov in (bad) mov fdivl icebp rclb test sahf stos xor sbb cli jmp insl add loop out sub pushf je test adc rcr push cmp int3 or push or jg mov lcall test cmpsl mov sti push add popf mov cmp dec pcmpeqd loop movsb inc icebp in sahf lock jns (bad) xchg and jae and loopne insl mov inc aad rcll dec xchg aad jo xchg xchg stos dec (bad) pop adc (bad) push (bad) cmp jae stc pop cmp sahf fwait shrb cmc lahf mov negb rcl aad pop insb roll lods inc push (bad) stc sbb jns out mov push sbb bnd pusha ljmp insb iret ja aaa scas aas dec icebp pop and mov mov das or test push mov sbb sbb xor fsubs in ror hlt loope mov rorl loope jb cmc out (bad) push shr cli jge arpl addb mov dec xor dec aad mov adc xor iret ja mov popa pop test cs cmp iret dec xor notb add loop lret jbe adc cmp dec sbb popa jae and movsb (bad) jg pmulhw outsw jne (bad) fnstcw fldcw mov out sbb jg adc xchg add sbb mov pop cmp push hlt and js fwait sti dec dec add rorb gs aad jae je xor cmc cmp into lea and bound gs ljmp xor adc rol in mov mov leave lea daa lods in pusha mov lock mov loope jle mov adc movsl fs xor sbb or ds adc xchg jmp std addb push out outsl xor loopne sbb popa jl popa das xchg lret cmp js ficomp jmp aaa xchg lods movsb mov sub bound cmp mov fstps xchg push add dec iret and dec repz xor add je push std push sub leave add out nop aas fdivrp sbb cmp sbb shufps nop hlt icebp call jle das xor dec add in daa adc pop cmp push loope lock inc adc xchg fnstenv jns test lods push into and mov add sub inc fiaddl or shll imul add xor push dec push insl cmp outsb push add (bad) cmpsl stc scas xchg push (bad) addr16 (bad) (bad) hlt pop or fsubrl and movsl sbb jmp shrb xchg xchg jo ffreep sub mov mov mov packuswb inc in pop daa loope add popf jo insl cmp add dec mov enter std mov sbb cmp xor dec mov in fimul ss in mov out hlt lret fstl sti ds xchg xchg fimull out insl mov mov inc mov adc icebp mov fcmovu adc aas mov (bad) int3 or std sbb arpl jnp mov inc and mov outsl int3 inc jmp outsb xchg outsl dec xchg pop loopne xchg inc std jecxz cmp and and sbb mov pop ret mov std sbb daa push and and xor add hlt call es sar sbb std jns adc sbb inc lret or cwtl pop inc jmp mov movsl pop or lods lea or inc fisttpl pop sub xor pop cwtl inc and xchg rorl cs xchg js mov enter mov mov lret sahf mov pop int pop in dec lret xchg xchg dec divb mov mov loope in imul xor and mov pop out and pop mov imul sub in cmp nop faddl int3 mov rol clc mov mov mov push (bad) in popf aam xor mov mov fiadd lret and stos push out idivl enter test jl mov andb out add cli sub xchg pop sbb fiaddl leave ret shrb xchg pop xchg lret dec or push (bad) mov arpl xchg das jae mov or cld pushf (bad) jmp je sub (bad) pusha pop sub outsb iret shl add dec lods inc loope and sbb inc loope mov dec and lahf mov inc sub adc aam jmp stos cmpsb or mov xor aaa loop fwait push xor push fldt fwait sbb out jg lds jle mov cwtl xor icebp imul mov xor call push pop in int3 xchg inc push outsl cltd sub (bad) cmc ljmp fsubrs ret aam mov test js add jge dec adc arpl dec addl cwtl adc sbb in sbb es out ret cli dec mov jnp inc int3 pop (bad) hlt push subb paddw adc leave inc sbb mov mov arpl sbb and jo pop xchg and pop call (bad) sbb movsl pop ljmp ds or push lock mov mov das sub outsb lea loop add adc fdivrl jnp stc and (bad) push stos mov jnp jge mov mov sub mov jae ret stc mov repz cmc outsb cs push dec mov leave ret (bad) imulb mov and lods ss sbb sbbb and loopne inc mov inc insl sub cmp push adc push dec mov sbb and and cmc gs hlt pop xchg jmp hlt rcrb nop inc pop mov mov pop push mov (bad) mov push pop and mov jecxz xchg mov (bad) mov pop cld mov cli inc jno jns sbb sti das cmpsl xor scas rcrl into lret inc loop test lods fbld xorb gs pop test roll mov rclb loope cltd (bad) jb sub sub push ds mov mov arpl stc popf mov adcl mov push push pop sub test push sbb stos sub push xchg sbb push js inc test add or and ss inc (bad) lods pushf les mov out jo inc jbe pop push divb cmp xchg repz cmp mov movsl push cli (bad) fptan pop sahf jns sbb fwait test pop rorl (bad) add inc inc dec pushf bound fst or icebp inc cmp insb icebp ja pop dec into loop ds loopne add sbb pop ds out or or adc leave sbb enter xor jno pop jne xchg inc int3 cmc sbb lret xor pop sbb adc fucom mov loope in adc jle jo test push cs nop add pop or cmp fst jbe movsb jns cli sbb push adc jae mov adc or (bad) imul out mov ja (bad) movsl jno lods je and cmp movsb mov insb cwtl mov pop cmp mov scas jb das mov hlt jg dec jb pop sub or mov push shrb cmp push adc jg dec mov push or jb adc loopne or jl push or insl ret js sbb push cmp (bad) and sub mov push push cmp sbb (bad) repnz scas adc rclb or xchg (bad) push or (bad) lods mov pushf out xchg mov push and xlat or mov ljmp add adc mov jmp xor ficompl pop xchg mov inc mov aad or adc pop xchg xor push sub ljmp add lcall mulb inc cmp in pushl cmc dec xlat adc push int pop fildl pop ds fsubrs test mov adc mov dec pop lret jnp push mov dec lods cmpsl jmp push jge mov cmp aam pop sarl dec xlat push ret stos and aas jp sub push jne stc lret popa (bad) fs xor dec adc mov add aam mov int jecxz mov outsl bound mov push dec sahf in pop xchg or scas leave pop inc test push (bad) hlt clc mov shrb lds jno mov dec pushl cmp cmpsb inc xchg loopne test (bad) adc dec or xchg fildl adc in ds mov pop cmpsb mov orb lods jnp loope lds (bad) jmp cmp je push mov sbb pushf push addl insl cli aam dec (bad) fcomip jmp mov add or sub xchg andb mov or sbb xor add xchg in out (bad) (bad) insl stos sahf pop iret fistp lea pop rolb pop insb sbb mov pusha dec mov xchg cmp jb add pushf popf fisttp out js add or fcomps fdivs mov jl iret shrl mov sbb cmp les sbb push xlat push cmpsb cmpsl dec mov out xor popf or push pop adc jbe jecxz mov lods inc das flds cmp aad pushf shl rcrb adcb dec inc hlt repnz outsl jmp subb xchg out (bad) outsl out sub cmp cmp adc iret fdivrs dec insb (bad) fcomip imul cld fucom push xor fdivs fldl fsts int3 mov imul and add mov test lcall (bad) fbld mov icebp cs add add add jmp scas loop adc iret push mov out mov aaa (bad) jge pop xor aaa inc test lods frstor outsb sub rcrl xlat inc mov mov mov dec rolb ss stos sbb mov cmp jbe xchg rolb inc pop xchg scas pusha lea mov and out dec rcl cli xchg mov jge jbe push pop clc mov test jno mov in cltd push xchg stc and jl pop aaa aam push push pop (bad) xor in mov sbb loope (bad) xor loope fmul rorl mov popl ja fmul popf scas jnp add (bad) call sbb dec inc sbb loope loopne es pusha mov fsubr sub add aam sbb sub inc adc dec cmp sbb mov in push js and insb test fdiv in sbb (bad) lcall inc lds test call cmpsl xor jl cmpsl icebp mov cmp fildll pushf fstpl fnstenv push sbb divb sbb fstpl cs incl xor cvttps2pi inc mov aam adc gs pop aam mov add and pusha pop cmpsl insl and mov popa cmpsl push push push pop das cs adc push mov js cltd dec sbb sbb stos or imulb fidivr xor jg lods mov inc cmp mov pushf pop mov lods ds sbb cmc xor pop js ds loop test fbld arpl data16 addr16 lret and adc inc xor and jl sahf dec add in (bad) outsl mov sbb mov lcall pop stos jecxz jmp out stc es rcpps daa adc in add and xchg outsb inc rep pop xchg mov dec adc add pushl pop jno rclb xchg ds divb pop mov and sub cmp cli jno sbb push pop mov push cli xor sub push test lods ljmp aaa push lahf js mov jb dec push push fmuls test sub and sahf (bad) jnp roll jecxz test cmpsl pop in mov jne push add fisttpll sahf mov add cmp (bad) mov pop sbb mov jmp add pop cmp xor or pop mov bound dec and int3 repz mov or or push jg (bad) cmpsl jl jb mov dec cmp xor pushf dec push imul jge inc adc gs test mov push lods data16 cmc sbb mov cld sub lahf jno ds test ret lds inc dec lahf jbe pop add pushf xchg mov std xchg xchg scas or xlat adc push lock sub add jno push sbb xor ss cwtl inc mov std push add cmp jns inc lods cli in aam xchg jle xchg cmp cmp mov aas inc xor and mov cwtl adc loop jnp loopne mov call nop lea les aaa scas mov push cli in arpl in movsl test ja lea arpl lods nop and pop xchg sbb push xor mov clc fs js addl mov js mov pop aam lock xchg and jge enter jno push out test lahf push pop xor mov sub mov jmp jg or aam pop mov mov add sar inc sbb popa xchg ljmp mov mov mov clc mov mov std push pushl xchg insl xchg test xchg repnz addl std mov mov cmp xchg fbstp ret mov push add sbb sbb xor adc rorb push notl mov icebp pop mov ds push nop inc mov pop push in out lds movsl inc or fdivrl mov pop sbb push push mov and insl adc aaa pushf inc (bad) sbb dec (bad) mov cmp das cmp xchg mov in sub add lcall in shlb mov inc push insl dec cmp mov imul push test adc xor test fs test push hlt cltd push lea pop mov xor or jp bound sbbl dec sub lock mov pop fcmovnu movsb in mov xchg lods and and xor (bad) test bndldx aam ret (bad) xor sub (bad) and sti inc adc push iret cmpsb or cli xor inc inc fs fs outsl push movsb sbb jmp hlt lcall das mov call cltd mov xchg imul test push loop sub ds loopne icebp pop jg jne mov ret das ret je mov cmpsl seto mov in pop push or scas adc sbb ret xor imulb pushf pusha dec mov mov inc mov and pop xor mov pop xchg sub imul dec push adc addr16 imul loope add stos (bad) hlt xor outsl add sti push out (bad) dec gs xor cmp inc subl adc adc flds add sbb repz dec je adc out pop push (bad) or cmp pop subl mov scas cltd add (bad) jns dec js std enter xchg dec xor lret sbb lea data16 jns mov push jle daa outsb mov cwtl mov dec popf mov sub jl leave lret or mov aas mov sbb negb negb mov add pop lea push and inc sbb jns imul adc fdivrs jns dec out dec push (bad) das aaa xor divb dec orl aam popa mov mov pop scas (bad) cmp mov in shll lods mov pusha (bad) test xchg (bad) and call aas icebp out mov mov lods xchg mov xchg int3 sub std cmp inc mov in mov (bad) lahf mov mov ss aad stos insb or sub mov repnz ret das daa or xchg sahf push fwait outsl hlt xchg enter (bad) ret mov call pop xchg daa or and dec outsb dec jae pop add mov lahf push mov out (bad) out jb push xchg fnop ret pushf xchg cs icebp jmp (bad) pop je (bad) xor jae cld jnp push stos js in inc adc lea clc jmp jae sbb push insl repz mov leave popf test push mov ja add ret dec clc leave or outsl cltd pop inc jl dec lcall xor cmp pop lret ret jge inc ja ret sbb or (bad) dec int aad pop push ret mov mov adc xchg xor mov lods mov push les lods ror fldcw dec mov idivl pop mov sub mov cld cmc mov aaa dec xor imul imul or mov mov mov cltd cmc daa cwtl cmpsl js lret cmp adc rcl jl jg in jle jb gs and adc arpl add ret add hlt jp or pop xchg mov adc mov stc mov lret push in mov push jle xchg adc sub add pop fdivrs and pop imul nop mov daa pop outsl adc cld mov in fisttpl (bad) in (bad) adc jnp xchg leave xor cmc mov or cmpsl andl es inc (bad) sub out mov and into inc pop or xchg popa adc add sub fild insb rep cmp mov (bad) and mov inc pop bound (bad) cli setns std add push inc xchg arpl cmpsb inc (bad) fsub cmc xor pop int push lret jae xlat jnp stos cmp pop wbinvd adc pop movsb pop push and pop les dec lods inc aad inc xor int arpl (bad) or ja out mov xor mov in dec dec cld loope adc hlt jne mov ljmp rolb out mov or push mov jecxz outsl icebp divb lds mov adc mov push out push in or mov mov dec push out xor popf (bad) mov (bad) push push ret stos jge push sbb popf inc add (bad) mov lods in and sub sbb jne and xor ja cmpsb in xchg imull dec xchg test outsl arpl outsl adc (bad) pushf scas (bad) ss or repnz adc shr cmpsl les popa lock pop rcrl xchg cli adc pop xchg mov sbb sub lret (bad) cmc fstpl cmp jnp test ret sub mov popa inc adc lea and and int mov std (bad) enter mov js push call mov push loopne lret mov (bad) dec (bad) xor ja sub leave test mov cli inc pop sub jle inc jbe fs push mov pop mov dec or aam jmp push cmpsb (bad) lock mov or and add mov xlat (bad) adc or add pop lods sbb shrl pandn add push push rcl outsl inc lods or jne movsl je rcrl loopne call pushf in ror xchg mov sub push push test dec jle call jmp (bad) insl in jmp loope bound out cld mov std into jmp je push add sbb and and cmp jmp mov push jl mov add fldt or mov pusha pop dec and jmp data16 es gs adc dec out pop js cmp dec sbb inc adc test out mov mov sbb mov outsb xor push dec (bad) in pushf add fwait jge dec or pop pop cmp dec mov adc loopne xchg push adc mov or les sti adc loop inc cwtl repz add into xor mov cmc push int3 xor stc lret jno es push in cwtl xchg jg xor or gs mov dec aaa mov movsl out xchg cmp adc jge icebp inc cmp stos cmp adc or xchg pop pop push lret mov mov rorl xor jp cmp pop divl lea add xchg inc cmp mov testb arpl sbb xchg idivl lahf pushf repz mov or lock daa aad add push xlat xchg pop enter inc mov pop cld xchg xor mov lods js mov xor icebp add push xchg pop fisttpll cld in ss test stc push test aaa cmp cmp icebp pushf jo xlat pushfw push dec leave xor cwtl dec mov stc or pop shr movsb sbb mov les sbb inc fmuls jns pop or sbb add aas jge pushf xor daa outsb jns mov ljmp scas jp jns lahf loopne (bad) (bad) jne or rcrl bound dec cmpsb in iret hlt cmp lcall test nop mov jnp (bad) out sub popa lahf shlb mov xor sub hlt lcall nop (bad) stos or mov bound mov inc scas insl add or dec shrb lret std lods push add cmpsb sub jmp pop jo pop sarl cmp rcrl jg mov test fimul jno push sbb jnp (bad) hlt pop (bad) adc stc sahf nop or stc aam cli (bad) repnz movsb (bad) cli jmp bound inc add push mov and xor cmpsl mov and iret inc in inc mov (bad) cmp and fstpl ljmp mov loope and jecxz sbb dec jmp inc flds xor scas xor push dec in dec inc shlb (bad) repz enter insl xchg rclb mov add sbb adc mov pop insl jbe sub divl insb sbb jp pop mov lds in scas stc rcrl sbb vmread lret mov cmp cmpsb dec xchg push sub pop dec pusha or stos cmpsb (bad) dec jno pop pop sub in push push xor and lret arpl xlat dec mov mov cmp rcll sbb addr16 (bad) pop push jecxz (bad) jne cli add pushf xor push jb mov loop and sbb inc movsb aas dec out push lret icebp and out gs push xchg add push mov pop xchg test xor fs movsb cmp dec enter push outsl dec and jecxz testl xor push mov mov aad ss add ret (bad) int3 cmp repz add add nop ret cmp push loop sti lret lahf and stc jne jl sub hlt cmpsb sub and js ficompl icebp push and dec (bad) icebp push rcl mov cmpsl repz aam shrl xchg pop pop imul in pop inc (bad) mov sub mov jmp xchg out cmc ret mov rolb mov dec int3 out arpl jl push mov mov add es dec ds cmc aaa insb sbb ret xlat pop pusha push (bad) movsl jo pop ret (bad) cli aaa mov mov dec fstpl dec mov mov xchg adc sbb loop cld push enter ficomp (bad) jno out mov mov mov and mov test aas adc mov iret inc inc int3 adc fsubp pop mov daa and push pop xor jne xchg push test pop sub (bad) popf test inc xor pop stc xchg fdivs xchg mov push pusha into loope mov mov rolb pushf pusha test xchg jmp inc mov pop jecxz xor and (bad) int lret icebp jl jo aaa ss push mov xchg inc rcrb int3 jno mov adc sub push dec jle jp sub icebp xor ficomp adc cmp scas loop fwait push movsb jge (bad) or sub mov jnp sahf mov movb mov lods xchg mov fwait push int imul pusha adc inc xchg xchg pop shrl nop mov icebp or adc scas mov xor lea jge pop xor fisubrl cmpsb out (bad) ret mov pop js ret arpl push sub movsb mov pushf lods mov aam cltd mov ss fbld imul push mov mov fmull sub dec sbb add adc add mov stc cltd or imul pop and sub ret sarb scas hlt inc push jb fisttp xor inc test pop aad xchg or or ret pop push test stos sbb test push sbb dec cmp test fist cli clc inc mov in pop insl push stos fisubrl fs push pop or cmp mov (bad) mov pop mov stc out xlat xchg daa or sbb lods lret push out (bad) adc sarb rorb and ret mov add push xchg clc icebp jecxz in xor addr16 xchg xor or test and shrb pop mov mov xchg inc decb nop orl and xchg in (bad) mov mov push pushf xlat and cmp mov sbb and cs dec ja cmp je dec in aam xchg mov bound or cmc push xchg (bad) cmp jb jno pop dec push or shr lret (bad) sti push movsl loop clc dec in fst out popf dec nop cld inc sarb add lods dec dec inc stc ficoml cmp push div pop inc push mov ds sbb movsl push jmpw mov outsl (bad) dec arpl sub jns push mov ss daa lret and (bad) adc xor dec sbb popf mov lds adc xchg pushf mov int3 sub aas and insb in jns mov xor jecxz mov jne sub add ret das ljmp and jecxz push roll mov sub mov jg inc xchg add adc arpl pop adc mov pop sub mov cmp mov insl (bad) popf adc xchg notl and mov insl or lahf lods and je xchg xchg lea fcmovnb stos lods loope sahf inc jbe mov sbbl lods into xchg das test cmpxchg sarb push lods push xchg sub dec push mov hlt sub jo mov push incl jns inc jns xchg sbb sti xchg mov sbb jmp jle aaa jmp enter fidivl into mov sbb xchg es jnp dec (bad) repz mov iret sub mov sbb mov rdtsc cld aam adcl dec gs add jbe mov lods xchg fwait fs mov or jnp in or fsubrl cmp sarl addr16 push ds std mov or leave ret push sub xor xor dec cmpsb mov shrb fcompl (bad) xor movsb xlat cmp cmpsb or cmp ficomp inc inc leave arpl adc push sub ret fcoms cltd inc inc in sti shrb pop add push xor inc xor sub ret cmp or in ljmp loop movl sbb and sbb jg rclb mov push call mov inc cmp fiaddl mov mov test je mov je push jno dec mov push mov mov jg lock cmpsb imul dec pop popf jbe lcall xchg aad jmp lea lcall mov inc push xchg jb mov xchg push (bad) aad mov xchg mov adc inc addr16 (bad) xor inc out pop dec mov cmp pop popa adc add push inc sbb ret or sbb call (bad) or adc mov (bad) and (bad) loop out xchg dec nop xchg dec jnp mov sbb lods test xor aas jmp xor jb inc test or push mull dec mov xor into test imul dec add jp sarl add pop mov popf data16 mov das inc int3 jo out mov mov je or fs jge loop xchg adc jno hlt jg inc jnp in dec add test lret jnp push pop push les out sbbl adc push dec add or pop fsubrp loope mov add push mov push sbb call int3 mov jnp (bad) movsb sbb cmp (bad) icebp xor mov cltd lods stc jo outsb mov repz adc xchg inc nop insl addr16 lea outsb jns mov stos cld test cmpsb inc int cs (bad) or roll insb mov fs lret or movsb inc push repz push incb sub pop data16 jecxz insb std aad mov and dec ret lods test pop lea xchg movsb or jge cmpsl jno push js inc mov pop in add mov aaa dec lock dec cwtl mov xor fist adc stos or cs popa das stc mov mov pop mov pop out (bad) in fsubl aaa fwait out int add rcl xor testl or dec lock outsl repnz push dec in (bad) gs lods (bad) cmp add out mov and subl repz outsl mov cmp insb adc ds xchg imul add and pop xor insb jp ss pop and push lret or ret or cmc xchg ss fildl push bswap push sub jnp stos popf xchg mov loopne and mov imul pop (bad) nop clc sub push jns outsb stc cmc mov cmp pop aas jns shrb xchg cmc out add psrad rcll jnp sbb fidiv and mov hlt jno mov push or and into test lea inc and jp jne add inc add or setns jnp adc out jne and test jmp mov gs inc and data16 mov xor lret add pusha nop pop mov jmp js (bad) test pop mull aam pop fistpll or xchg add dec and int3 out mov pop lods out jg sahf xor mov and xchg rcr mov (bad) lock ss xor dec stos jp cwtl pop cs dec in stos adc neg sub mov inc (bad) mov cmp mov xchg xchg sarb arpl mov incb or into out add outsb jmp (bad) orl xor aam test aas xor jle pop inc addr16 sbb arpl xchg mov sub pushf pusha dec negb lea xchg mov mov out push ret and cmp scas pop mov mov sbb (bad) bound push cmpsl lock xchg fcomps mov in adc lahf dec mov repnz mov jmp adc sbb jl mov xor fiaddl icebp pop pop sub dec xor rcrb inc cld ds sbb mov mov (bad) mov xor fdivs mov push dec dec pusha xchg cmpsl inc test arpl sarb mov pop iret jo sbb sub aaa mov in jmp outsl mov loope stos int jl (bad) loope sbb cmp repz inc pop icebp push add mov jb jnp sub call sub rcr xchg cs (bad) adc sbb jg and mov movsb shrl out cs mov fcoms jecxz fldenv mov out cmp xor mov sti push movsb sahf mov mov rcll (bad) cmp mov out adc push js cmc dec mov arpl loope je mov adc pusha es fchs in roll loopne out scas mov mov cs mov mov loope xchg jmp or jp jp pushf jecxz insb mov push cld in ficoml fdivl pop add push xor dec dec es or test fcomps xchg adc xchg sub lret sbb loope push fwait jne movsb rcrl xchg jp in and and mov (bad) cmpsl imul bnd mov jne push nopl enter into mov ficoml cmp (bad) sub adc pop or fnstsw mov iret mov test mov or cld mulb enter lahf adc mov in lcall addr16 stos out sub pop cmpsl movb bound lods out dec mov es xor cmp movsl xchg pop push jae bound pop sbb fdivr inc scas cmp cmp cwtl cmp cmpsl movsb add lea ja addl xchg fadds cli pop mov stos outsl xchg call xchg push pop pop gs inc pop pop cld inc jl loopne jmp xor sbb jb repz sahf xchg lret scas iret jecxz and daa stos leave push fdivr sub sbb cmp pushf xor out pushf lods and mov sahf fmull or mov test jo enter fwait (bad) loop mov mov mov push imul pop dec or dec lret mov mov pop adcl pusha sbb mov mov push (bad) aad or cltd movsb data16 inc mov jnp nop push hlt test jecxz adc jle sub ret mov cld test icebp pop fninit aad jnp stos ret (bad) sti ss add or pushf aas mov enter lods imul xlat mov adc fisttp mov sbb aas (bad) mov jno cmp in pop cmc push sub pop pop into adc cld mov cmp sbb or dec dec fcoml aam enter adc inc lds and daa push xchg inc ret or mov sub xchg (bad) xor sahf icebp dec shrl mov les out lea cmp fs js sar push xor lret lock jo iret push (bad) (bad) fucomp sbb pop mov push mov js push sub jae js js iret add sahf xor test sbb fwait add scas dec push inc insl adc (bad) je jecxz es shlb pop popf lea fcomp loope in push pop int3 sub paddsw out sahf loop negb pusha movsl stos sbb adc into lcall xchg cwtl enter dec dec lock push lret dec lret sbb or mov add sub cmp movsl test jecxz in sbb es outsl push ret sub cltd mov popf test push aas xlat dec sar xor cmp cmp sahf jmp int3 pop test jp mov in or push dec mov fcmovu (bad) into (bad) mov adc inc cltd out andl ljmp add js add adc mov fsubrl push xor imul push fildll push and out arpl or adc add pushf sbb and push cwtl jl xlat in jle js cmc sub add xor xor fnstenv (bad) mov addr16 cmp int push pop fdivrl js ret xor movups out repnz loop gs cmpl dec jne lods mov add add int das ret daa jo icebp out insb scas cmp cmp arpl jecxz cmp jne inc and mov fs adc dec push rorl push test scas mov mov xor push pushf xor push out outsl rclb in cmpl std push movsb mov xchg inc mov fadd nop push les xchg xchg jae xchg out dec gs xchg xchg add lahf adc fist ja movsb clc repz mov into and sbb mov sub std imul mov call aas fadds mov push int3 jle add sahf mov cmp shl and xchg sub add mov sbb fwait push jl jp push cmp ss dec adcb jbe or leave sbb mov sub pushf mov push std in (bad) ss pop fcompl mov inc aad jmp pop sti dec mov stos cmp test sahf rcll (bad) adc sti mov pop incb xor xchg stos test lret or mov push lcall cltd (bad) outsb inc stos ljmp mov and sahf dec mov or jle cmp movsl popa pop sbb mov popf outsb fxtract mov in popf lock inc push or (bad) mov scas xchg xchg leave xchg inc sbb dec mov mov test loop push xor stos mov (bad) stos outsl mov sbbl std pop jge mov sub ds repz jb jmp cmp out das cmp imul lret cwtl pop clc inc push mov addl ds movsb pop flds mov xchg inc nop popa ficoml pop or popl jge sub repnz movsb sub andb cmpl mov sti fiaddl lods test dec pop test jl cmc push cwtl out mov inc addr16 dec ja sbb faddl mov rcrb mov mov cmp fwait cmp fcomp leave mov into fadds scas fs mov add js (bad) das mov outsb lcall ds lods inc cmc subb stos bound xor sahf idiv jne fisttpll lahf cmpsb jmp and je testb and push mov inc in pop and xlat das je (bad) adc fcmovnbe lock enter fnstcw push mov xchg lea jl cmp push sbb iret out mov cmpsb stos std lahf jae es xor ja dec dec push je mov adc je imul (bad) in pop enter xchg jge cli lods sbb std shrb arpl sub push stc cli mov ljmp pop lret imul sarb sbb sbb dec cmp loop mov out cmp enter xor jo dec cmp (bad) mov mov mov cmp cmpsb mov mov jae mov (bad) pushf push sbb sub sub mov pop clc cld es icebp sbb jge jp mov ljmp js dec ret cli daa mov test or fisub (bad) pop inc push jne,pn xchg cli negl jl (bad) ja inc ret sub pop ja lret les xchg mov test jnp out mov outsl or pop rclb scas pushl das xchg jmp adc sbb xchg popf jg ljmp gs pop mov mov aad stc enter adc add push dec aam jno jl or jge mov pop mov imul xor pop mov aad stos das ds fisttpll (bad) xor sub inc popf push dec out mov xchg test sub fldcw clc jne jno mov and test jns xor pop push fdivp sbb pop iret cltd cmpsb pop mov pop imul je xor push dec push push ret add out popa stc mov popf mov fcomp sahf mov cwtl mov enter cmp xchg fmul rorb push mov mov (bad) mov push into out ja mov (bad) xor cmp jbe add sub jno pop xchg arpl xor icebp xchg add sti hlt pusha pop jno push (bad) adc (bad) in sbb clc lcall mov mov fwait mov adc scas inc pop lcall or (bad) and ja sahf int3 aas pop addr16 cmp lahf stos dec and pop lcall cmpxchg inc pop je or dec dec bound ret bound fistpll adc fmuls xor inc sbb in (bad) fs je mov inc (bad) lret insl or aad loop bound je adc and popf test dec movsb les mov xor dec push push pop add cs cmpb dec imul (bad) mov loopne pop pop fisttpll push and add hlt fiaddl mov add in cld aaa jnp fbstp je jo insl stc test sub mov pushf pop pop push dec add insb imul cmpsl xchg xor xchg add push and pop pop xchg out js leave out testb add mov loopne inc popa movsl hlt out xor mov insl (bad) es xor movsl cld leave dec movsl cmp imul xchg fs xchg int3 sub lea movsl xor inc mov cltd cmc insl jae les lret stos arpl jg int3 or movsb stos inc jge out dec lods xchg inc shrl (bad) push cmp jecxz pop jbe in aad mov jne in jl out inc adc xchg xor test enter lods cli sbb das push mov jns iret pop jg cld test add or clc add data16 mov dec mov cmpsl mov aad addl test cltd cmp add push (bad) ds dec shll cmp adc jl mov push or push cwtl mov add jmp mov mov test or loop or mov out mov aam pop mov jbe xchg call mov mov sbb es imul add xchg inc std and sbbl mov pushf push pop daa (bad) ss sarl fildl xor mulb gs xchg or push or aad cmp aam enter adc leave in outsb cmp mov dec loope xchg arpl and arpl lods (bad) mov add jne in scas shl dec cmp fidivrl push pop push jno mov push or inc test push (bad) dec mov dec (bad) mov jle mov cmp or cmp dec add add mov and sbb (bad) daa jg enter add mov fidivr (bad) std dec lcall loop jae out fcmove inc pop jnp sbb xchg jbe insb inc xchg and ljmp add add test dec xor mov mov mov aas stc xor xor jnp and inc cli pop nopl xor lods xor ret jo jl push inc xchg sub idivl sbb dec mov mov pop sahf or loopne xor dec jp fnstenv cmpsl mov push push mov jb pushf or add jne movsl sbb call or popf cmp ret aaa mov mov popf adc ficoml lret push sub jmp icebp cli repz (bad) js in (bad) xor enter dec out aaa notb adc mov inc in inc (bad) (bad) jns xor (bad) cmp mov xor or loop push push mov jecxz test sbb in js arpl bound fsubrl push mov cltd stc cmp push das jo jecxz gs sbb inc dec jb dec sbb ret inc nop pop int lcall add fs push xchg jno mov mov push cld cmpsb cmp or lea push mov push sub aas cmp xchg fdivrs and adc addr16 lods sbb es xlat loop negb mov jno add xchg mov cmp xor sbb out add (bad) out (bad) das xchg cmp sti dec stos or cmp cmp adc or dec mov inc push push decl push adc ds out dec fnstsw aaa jl xor sti push add fs outsb rcrb xor inc push ljmp aaa mov lds ficoml addr16 push in mov cmpsb dec idivl stc lods jb dec lcall sbb stc frstor mov sbb pushf add pop addl xlat mov xchg push fcmovne jmp icebp sub add sub outsb outsl jbe sbb mov dec pop mov mov push aaa adc or and jge xchg pop enter lcall mov sbb jle repz pop mov jns test push jns xchg inc fldenv mov lahf push add sub push out rcrb push addr16 xor imul repnz bound cmp stc mov inc jno xor push xchg sbb in push lds in in jg aad cld xor mov cs repnz pop (bad) pop push mov outsl iret hlt mov add jmp jne push subl pop ret xchg jmp mov fwait pop loop nop (bad) sub out mov push enter jo loop ljmp rclb mov iret add in cmp aam xor dec cmp jnp dec pop stos mov (bad) fbld jo dec pop jp cmpsb mov and inc xchg daa jge test js arpl stc loop push inc lahf and add mov outsl mov pop mov adc call call push in (bad) add inc icebp pop repnz imull mov scas rclb push pop xor test repz jle push fucomip jb popf sbb sbbl in pop or jnp (bad) mov xor pop cmp dec inc jge xchg (bad) push je add fwait (bad) mov hlt xchg inc aaa push xor lret rorb hlt mov mov mov adc cmp mov pop mov jbe sub dec add push lock push fcomps aas pop xchg mov faddl loopne mov or popf orb sub outsl enter jmp xchg xchg and mov dec (bad) lret and sahf inc push outsb stos test jo ja jg aam cmp je mov mov mov and pop cli mov enter or pop cmpsl enter pop jp inc mov add imul jo mov (bad) or les jg pop dec cld lret pop pop lods movsb add adc sarb cmp sbb sbb test xchg pop lock mov push das add addr16 dec dec mov int3 adcb repnz (bad) repnz jmp js test testb fwait lea test sub aas (bad) mov jbe ds and pop pop xchg push push and cmpsl sbb push xor rcr rcrb xor cmp sbb cmp push xorb dec adc stos sub mov push roll inc push dec (bad) cmpsb sbb push test mov test jne cmpsb cmp push sbb sti arpl xor xor xchg cmp imul ljmp xchg dec sarb addr16 mov and shr sbb inc mov push std fcomip sub lcall inc sbb jl mov and jb (bad) cmp jl and repnz js xchg mov addr16 daa imul and iret pop dec dec cmp popl jns lods jl stos dec xchg rclb mov jp out adc decl stos sbb outsl add ret mov int mov jae test lea clc mov cs fcomi popf push jne pop or out lea mov add jge pop shrl dec mov sub mov xchg cld xor shrl lds cld (bad) cmpsb into pop int das aad shll icebp sbb jb mov xor jmp cwtl hlt test mov cltd jne or mov mov popa and roll lret jmp jmp ds sbb mov insb out andb int3 push cmp int3 dec dec ds jmp add insb mov adc out je lock and scas jb sub sbb sbb jmp mov pop mov loop xchg std outsl jns xchg xorl jp push push stos pusha popf jbe xor sti pusha sbb in das jmp mov std xorl inc (bad) dec mov mov add jns inc (bad) xlat jo cltd loop mov nop sbb dec push cli fsub in mov aaa stc fcmovbe or fldl aad sub in push jns fwait sbb mov fildll cwtl enter push fnstsw pop lods push jnp lcall mov sahf xchg outsb sub fldl out sub out in push and call mov (bad) mov aaa lcall inc sbb popf loop nop or add pop lods mov cmpsl clc pop orb repz fwait sub pop fiadd fidivr shl (bad) push outsl ret lea (bad) cwtl fiaddl jns push mov (bad) xor insl and mov enter cmpsb mov xchg or fsts popf loopne sbb xorl push cmp or sahf int faddp and xor inc sbb aas loope dec sbb sub popf outsl in insl add mov outsb jmp jecxz ret das sub sbb mov add mov push lds xchg push mov cs (bad) out sub ret (bad) data16 cld fstps cli jg xchg push std aam in sbb mov mov mov pusha pop loop inc jno rolb pop mov mov cld mov repnz dec xchg insb cmpb push shrl or xchg fwait repz in jne adc jae xchg push (bad) popf mov imul cmp sub add aas or insb sbb (bad) jg scas arpl xor mov test addl jae sbb repz aas pop scas jmp ja in push out gs inc push xor xchg mov push push pop outsb mov mov cmp sub (bad) fxch iret loope mov mov dec push movsb add es xchg popf out cmp jmp jmp (bad) mov imul jno gs roll daa in dec cmc xor or xchg inc mov std subb das push xchg movsl xchg aaa push aaa lods (bad) dec xchg xor ds mov insb mov jle movsw insb int3 cld add pop dec ret inc fwait add mov in in xchg shrl insl mov xor push lret rdpmc adc mov repnz sub addr16 jno inc mov cmp cmc ss mov xorl shrl scas mov scas pusha dec es inc mov das and clc (bad) jle inc lods mov sbb or push or mov aam dec sub jns or xlat stos call dec dec dec in insb dec sti add fisttpll pusha mov mov movb inc mov xchg (bad) ss mov out cmp sti fsts adc xor adc js adc lods ret imul aad sbb rcl pop push mov movsb test call push clc insb mov bsr pusha push divb pop or xor sub dec lock test lea and incb inc xor data16 icebp sub inc ds cmp xor leave test js (bad) and das and inc movb mov outsb rolb push test add adc fbld xchg xchg jne xor mov cmpl lret adcl adc fmuls xchg jmp lret repz pop pop loop popf rorl lods out (bad) imul shlb insl insb dec jecxz sbb into add aam es or mov pop add leave push pop cmp imul sbb test and fwait adc (bad) lock mov pop lods ficoml adc (bad) rol or bound pusha test in insl mov (bad) sbb out lods dec and fcompl push jmp jae arpl push (bad) call dec addr16 insl cmp subl inc pusha xor fldenv pusha pop and aam insl pop mov fldcw aam dec lds xchg and mov leave (bad) fldcw test xchg mov addr16 add mov mov cmpsb jmp lods sub xchg fldenv notl dec out push push cmp mov sbb cvtps2pd insl out xor adc cmc sub add scas insb mov mov jne js mov xor and int3 aam cmc mov dec inc fcompl push ds or inc (bad) xor push xor aad adc mov mov inc pop mov xchg cmp stos fisub and mov out aam pop leave sub fiadd mov fnop int adc ficomp lahf ss jle cmp cmp jae in sub fwait mov aad xor imul and sbb dec ror (bad) outsb sbb insb popf mov inc dec xlat jge (bad) ret (bad) (bad) sbb inc dec fnstcw lahf jb jg push out pusha pop lods push jns xor lahf push in add sbb enter or xchg mov sbb mov lret push ficompl hlt pop lock push xor es popf ljmp push lret hlt inc or lods xchg xor je (bad) lret movsb inc mov push jne cmpsl push negl flds gs mov int3 lret call lock xchg js in sub jge and arpl jmp jae or pushf and jne ja mov or iret ds jns lds cmc add add clc push (bad) shlb dec mov repnz (bad) dec pop loop addl jb fisub cld flds inc jae and sbb fcmovbe cwtl cmp mov das divb cwtl (bad) and or inc and push push pop pop jl push push and dec pop pop icebp xchg out xchg js jbe sub mov push xchg (bad) cmc in cmp cmp dec adc bound sbb jno adc movsb test xchg push xor mov sbb pop or stos xchg xor mov mov sub out xchg or (bad) mov outsb and push pop icebp pushf fsubp jle (bad) mov inc push aas pop test add lds jns hlt jae sbb hlt sub fwait mov cli push int3 mov ja pushf and icebp adc test insb aas adc mov cmp into scas push jge xchg or and mov sub pushf mov push stc loopne xchg mov (bad) jne cmp sub addr16 xor jg push out jp std jbe mov (bad) lds push and popf xor mov and test aad (bad) addr16 sub mov pusha out aam loope adc test xchg and jne popf popf or pop jo test stc ds mov fisubrl sarb xor lret mov push sub call sub xor add inc mov dec jae loope sub cli cwtl aam aas lods popf cmp sub xor xchg xorl jg dec pop mov pop pop pop adc pop adc xor or lds sub cltd fucomip dec bound ljmp xchg xor push inc scas sbb insl arpl iret lret jnp sahf sbb imul jg pop add bound jo cltd out enter and xchg sbb int3 mov add scas mov pop dec test dec mov xchg cld and add push imul xor sti jo outsl xchg das push stc add call data16 xor sub movsb jle icebp mov into pop sub test sbb pop cmpsl insl jmp les jo pop cmp jg sahf (bad) or rolb in cmp insl insl sarl addr16 lcall daa (bad) jge das or (bad) cmc out andl ss loop sarb push int mov sti pop into cwtl add xor roll xchg and push jae push xchg xor xor adc mov mov mov cld in jno sbb cmc test repz jns call jl sbb cmpsb fs adc inc and call pushf iret cmpsb mov stos mov ret pop add pop push imul inc iret add or gs int3 push roll test clc in mov fbld cmpsl adc iret mov jle xchg loop nop mov je fsubs mov jle test negb loopne mov (bad) in shll repz and cmp adc xchg jae jb cmpsl sbb sti mov pop adc rolb add lds pop and mov lds jle enter shl sub pop xchg popf ficom pop pop aas lock imul sub inc mov inc repnz cmp push dec test pop (bad) fidivl mov gs jmp (bad) js adc push loopne pop popa mov xchg mov repz jo cmpsl insb mov (bad) out pop add aam cmp cli xor cmp xor out fs dec ss sbb lret mov adc mov leave xor iret mov mov dec jmp pop push in loopne test xchg ljmp lcall adc fbstp dec cmp mov inc push cmp xchg lds dec std adc movb notl push call pop jge or jns jmp stos mov lret in inc insl inc xchg roll adc jo lret dec cmpsl adc lods or pop or or (bad) repz scas add outsb and xchg add and cld xchg cmp mov stos inc jne pop or sbb sbb sbb cld push xchg sti ret dec pop fldlg2 or xor std out dec adc push xchg fmull pop xor add mov add pop out and jecxz les stc mov and cmp pop mov sbb mov sarl mov xchg ret xchg jge xlat mov sar sub inc jg pop scas inc mov add lods xlat and sub mov mov negb mov and push pop xor aaa call jo lock cmp addr16 sahf dec push test ret or mov or xlat (bad) mov lahf and mov popf daa mov xor in mov repnz (bad) (bad) jge insl mov mov lock cltd call lea addr16 jns jmp gs xor cmpsb popa imul mov jo inc pop dec enter je or xlat pop add int3 push cmp fisub lods bound and in lds repnz lock mov dec sub or insl pop jle sbb mov stos pop (bad) scas mov or inc pop (bad) pop cmpsl inc jb xchg jl xchg fstpt mov mov rcr or bound and jmp icebp gs (bad) (bad) sbb xor push lahf cmp out mov cwtl sub in xchg or punpckhwd les mov pop out or out and inc cwtl outsl cltd repz push push lds push xor cmp pushf mov imul jmp mov lahf loope mov fdivrl scas sahf or push or call mov andl pushf out and popl inc mov test pop out add mov (bad) and mov movsl cmp mov xor fsubp push jo stos lahf js mov pop sbbl hlt fcoms (bad) dec outsb xchg andl add sti sti inc movsl dec mov mov mov (bad) repnz inc or gs je fcomps daa push mov inc pop dec loope fcmovb out cmp xor adc jle inc jg xchg push mov sbb xchg (bad) nop fsubrs stos in push int mov mov std lret into xchg add mov mov hlt push jp (bad) call jge cmp ljmp je push push pop (bad) and and push cld mov mov aaa sbb arpl sbb sub arpl addr16 jns movsb in outsl (bad) ljmp js adc sub js inc push push test test scas sbb into inc fs xchg add out cmpsl (bad) dec (bad) dec cmp rolb stc addr16 (bad) mov (bad) aas cmp into jne or jns loop add xchg lcall lret lods sarl push outsb mov outsb mov jne cli mov xchg je iret mov (bad) mov lret fsts mov sub in js repz lahf test out fdivrs or (bad) (bad) cmc scas jb bound jns cmpsb aas pop sti adc outsl lods adc enter xchg sarb xchg lds sbb (bad) ret push rcll mov pusha push jle iret repz jle dec stos mov push repnz or push fs cli cmpsb push data16 arpl out aam xor xchg nop adc and lret push inc mov cmp dec cwtl (bad) lock sbb jno xor out xchg jle mov mov xchg mov mov adc jle outsb testl in in popa lds mov aaa push arpl and aas repz dec icebp inc lds sub pop mov jnp dec jb fmull in ja jae xchg lret jne sarb mov imul add cli xor popf shrb mov xor outsb imulb ljmp xchg inc or lods mov fnstsw mov push fsubrs push mov add or aad les cld aam adcl sbb xor add or (bad) xchg lods sbb jg lods sub jbe rorl adc hlt nop sti mov ja adc mov xchg jmp (bad) (bad) (bad) std push rolb les jp jns sub push (bad) mov rolb loopne push arpl lds xor movlps pushf dec fisubrl lock pop and and loop and push shrl (bad) rcll retw popa adc add cwtl call fadd imul popf fabs aaa jp inc lret sti xor and aam lea pop or mov xchg or lahf sub adc mov add insb cmp or cmpsb out cmp outsb ljmp push and insb stos push cmp push jnp stc lahf xchg (bad) inc mov movsb push pop add mov fisub push imul xor inc and test negb out push lea xor or add fidiv xchg cmpsl jno popa hlt pusha out loope mov loop inc mov adc (bad) imul movsl pushf or pop (bad) js dec das clc and or sub addr16 pop ret (bad) imul (bad) adc (bad) (bad) jo and sub inc push movsl inc scas incb cltd and out or out add aam rorb in sbb and inc push std fisttpl jp sbb ds cmp aam notl cwtl (bad) push movsl out aas inc addl arpl jae mov fnop ds es lea fisubl mov aaa xchg mov arpl cmc stc pop pop rcrb sub std imul cs das mov movsl push add scas scas cmp mov dec cmc xlat cmp xorb add fdivl pop js setge pop ja adc imul (bad) cwtl or aas lcall pusha jne cmp imul ljmp je jl sbb cmp jmp jmp mov fcoms out sub (bad) mov ja ret inc push insb cmp mov sbb mov xchg mov mov push in je lahf loop test sub cltd xor jmp ljmp cmpsl pop mov sbb loop xchg loopne and dec sub repz lret scas sbb xor mov jmp xor mov ds mov iret xchg and sub jl push into in sbb test (bad) jbe (bad) jecxz cmp fcoml mov mov mov mov mov mov bound imul (bad) dec mov push and inc mov into add mov cmc mov mov lods out js dec int3 movsb jae push addb inc jmp cld sbb jmp mov test fmul mov cmp mov sub cmp push nop out rolb add add inc aam or sbb call int xchg les xchg mov cmc dec add pop mov (bad) shlb or inc sbb or or add add loope mov add sub out movb test jo outsl adc inc mov mov push sub imul fdivrl test jp jno and stos (bad) jecxz mov les ja add push or mov cmp (bad) and mov gs call sarb xor xorl inc xor imul jne adc inc loop inc mov push in addl mov adc outsb ret push sbb inc mov in or fisubr mov stc fsubrl pop fcmovb daa mov dec mov orb pop push pop shr cmp lods cmp shl jns aas inc insb (bad) repz mov mov xor sbb ficomp mov push mov ficom ljmp mov adc gs jmp bound int3 repz js into ja es iret lahf testb rcrl jae out mov sub and xor stos test mov mov push scas je dec lods jb (bad) je movl mov xor dec dec test addr16 mov jb,pn mov in mov push pop lods sub xor jne push loopne ficom push std call or push (bad) idiv sbb push in in xor mov mov (bad) adc adc inc push call cmpsb xchg (bad) mov sbb push xchg mov mov sbb es test jnp popl cmp es sbb outsb mov lahf imul (bad) dec int3 lea xor jge push (bad) iret push xlat ja flds sub mov lods (bad) sub sub mov iret and jno mov push icebp push pop push lret je (bad) lea les jle and jle push jns into or fmulp pusha stc xchg dec in adc cmp arpl sarl fild and (bad) sbb xlat lret xchg data16 cli fcomps sbb sub or jae sbb xor (bad) insb sub cmpsl mov imul inc cmp jge outsl mov jns inc mov pusha mov jecxz ja mov adc and cmpsl scas js xchg add sub xchg xchg call (bad) out fs icebp sbb or test sub aaa test and mov hlt in sub mov jle out pushf imul ret sub fwait and ror or jp inc je cmp push jle ljmp int3 (bad) mov jecxz sbb leave aas ret mov inc fwait sub xor cmpsb add movsb cmp cmp addr16 mov pop scas adc or iret hlt push xor das call mov out int3 lock jae cs jmp mov leave (bad) fstpl rcrl mov fistpl mov js lret divl xchg jecxz insl jecxz (bad) mov pop icebp mov pop repz mov int pop push mov cmpsb push ja xchg pop (bad) xor js dec pop xor adc fsubrl xor cmp and lret lods popf inc cmp imul int fs sar pop addr16 dec mov adc loop cmp js cltd rsm jns pop cld jo aad dec cwtl add sti aad scas rorl add into push or int3 loope sbb xchg xor bound lcall mov std cmp push push sarl sbb adc outsl sbb adc scas xchg (bad) popa fstpl jnp mov dec ljmp incl and int or mov out pop xchg pop mov sti test leave shll notl movlps jno xor jecxz mov repz pop sub aaa sbb pushl xchg pop mov loop test pop mov pop rcl inc bound fdivr mov out es push sti repnz jb insb jnp jle push arpl and jns imul in shrl inc call sbb adc inc (bad) repnz loope test insl mov mov repnz mov mov push jo mov cmp xchg enter jl xor aaa mov jo jae add lds cs insl mov inc ret jno lret push (bad) mov mov sarl mov (bad) jmp insb cli dec or sbb fcoms add (bad) int3 (bad) fisttp lods cltd or test xlat imull ds cmp dec mov int setle cmc in and aam outsb enter mov jbe popa cli xchg in cmp sbb lods xor sbb aam stos cmp jb pop lods mov (bad) pop pop jno ficompl leave cmp pop (bad) xor (bad) pop out xchg cld test add or mov movsb or les daa mov bound mov out inc mov adc dec xchg inc aad test push sahf out inc inc in test fist test shlb (bad) and out jge lock push push imul daa leave rolb mov xchg jge sub mov (bad) in cmp pop fdivs xchg aam jg adc js mov xchg ja sahf ss lds pop push push js lahf in dec pop fstl cli fs fcomps sti sbb data16 or mov mov roll pop jbe (bad) cs inc xor cmc pusha xor (bad) mov pusha xor mov test addr16 sbb adc call jle lods cmp push add incb popa jle popa subl add push adc dec aaa push and dec (bad) jecxz push aaa stos nop outsl xor dec pop dec mov enter xchg loopne adc aam ljmp push and cmp aas shrb mov (bad) mov xchg out into jne inc jmp ret jns mov or in sbb orl xchg pushf ffree lods incb data16 shlb dec cmp insl mov jb fwait loopne (bad) or add or movsl in cmp adc jne jno lea cmp std std adc push mov push lods add push lcall lds mov gs fs and push mov roll mov scas inc inc push movswl jno lds cmp pop loope out cld dec mov or mov xchg inc cwtl pop xor (bad) push outsl inc into inc out jl test jno and repz stos xchg jp dec subb cmpsb xchg (bad) lret out in adc icebp out sbb push popa test (bad) and inc mov xchg sti popa outsl (bad) push cmp mov lock cmp in add aaa rcr mov adc popf jmp out data16 jecxz xchg push lock dec pop xor xor mov test int3 push mov shll clc xor nop imul cmc jecxz,pt mov push sub out mov xlat add insl stos mov aad inc in mov cmp add sub (bad) push cwtl pop dec xchg loopne jecxz aam out pop stos mov ret mov aas jecxz aas dec mov and int3 inc test cmp jns out mov les push and adc les xchg jns or ss add mov inc ja hlt rep in popa scas dec xor es inc hlt bound push sub cmc std or js cmp sub mov leave icebp popa add push imul movsb and add out imul jo test fwait or cmpsl aas and jmp xlat jno test xor std imul in repz dec mov xchg pop (bad) pop mov xchg or adcb sub mov sub push adc cmp mov lret lea loopne jl jo inc cwtl test mov js pop add insl ffree outsl (bad) pop aam mov mov mov xchg pop pop jo inc cmp sbb pop out rcr inc fbld push test repz test sub ja push (bad) (bad) cmp push arpl repz (bad) push sbb movsb sub je jmp frstor adc decb imul das jno mov inc dec xor unpcklps push js mov shll push push enter cld xchg ljmp aaa or xchg iret xchg ret pop outsl mov jp pop aam push xor aad mov push ret push test dec pop mov mov and push hlt or xchg mov aaa jl dec sub inc test jne pop mov das adc jp (bad) ljmp outsl xor aaa pop loopne out test (bad) (bad) or (bad) mov sub out sbb rolb add xchg push mov stos (bad) icebp or mov std push dec push aas orl jl mov in adc adc int in adc jmp sbb sub jecxz out dec test push cli cmp pop stc jle pop (bad) hlt mov adc sbb lea aaa pop lret add insl push mov xor lods ret ss fucomi or jle xlat sbb je jno mov jmp nop je lcall push mov pop rclb divb rolb in lds inc jno xor enter lret sbb and mov add (bad) xlat lcall inc add hlt jl and xchg into ffreep adc xchg and lods push xor in rclb cld jb lea mov lods fdivrs push inc jp push mov lret sti movsb mov inc into mov push into cmp in cwtl jge cmp aaa fistpll cmc add mov hlt fdivr aad or xorps mov inc add lret in ret push loope ja or xor or xor dec (bad) jae gs scas les jecxz fimul test ror out pop adc pop jp jb jo push stos or pop lret sbb cmp ss repnz xchg jl js sbb imul dec dec mov mov rcl insl (bad) divl mov cmpsl jb cld lds or ret pushf inc xchg popf sub rclb jnp dec loope mov mov jo adc cmp xchg inc or add xor movsb scas xlat pop loopne movsb pop cli pop fcomi (bad) fmuls add push adc aas push cmc lds xchg outsl fnstenv (bad) sbb rorl fbld gs rcll adc and leave ja mov pop push into mov je dec mov repnz jbe repz or sub inc xor xchg mov or xor adc adc insb shrl popf repz add bound data16 pop andl fist ficom adc jbe mov xchg fucomi mov insl inc js call pop stc or dec sub popa jo in stos push add push in clc clc lret outsb sub shlb mov push xchg repnz adc enter outsb xchg mov push inc mov pushf add bound ret rorl mov cli or fucomip es and sbb and out push jno or push xor mov mov xchg popf sahf shlb xchg pusha repnz jae fisttpll (bad) jbe add xchg cmp cmpsl adc jg stos pop stos imul stos jbe dec lret jnp xor lods inc mov sub clc jne pop sub movsl sub push cmp sub std je dec adc or sbb popf repnz movsb pushf cmp roll int3 mov mov lock or aad jae jo enter out jge lret adc (bad) outsl adc cltd cmp (bad) fistp fistp sbb mov mov push pop leave inc jne adc jne sub (bad) and or xor pop xor dec push and insl add adc pushf (bad) push daa js push xchg mov dec orb pop xor pusha scas cld add fmull icebp lods add repz push mov (bad) popf jl lret or push fwait jns cwtl jp jne xor pop mov pusha jb pushf adc xchg sahf repz cmp test int out leave das add or das fstpl and or push sub outsb movsl cld jg ljmp in cmp lcall mov or inc add ffree test fisubl push sub sbb mov mov jns call ljmp or fs dec xor nop push (bad) xchg jle and gs ficomp ret pop lds lcall dec je stos and mov fs push scas test jge sub movsl or sbb shll imul pushf insb add xchg xchg push insl repz push xor ja xchg sub or out xchg fldenv adc and in into das push insl test jno das imul mov add add or outsl jmp addr16 ret cld test push cmp jns push test sub mov push jns scas jno rcll sbb lock ljmp out das xor ret je pop (bad) lods (bad) ss adc mov dec mov jg hlt test insl mov push adc sbb in lahf loop mov mov mov in push in cmp movsl dec ss cmp lcall adc inc test (bad) cs xor in (bad) dec imul jnp (bad) push pop clc mov out cmp adc lea sbb fwait addr16 bound scas mov ja jns (bad) fs xlat push jnp ja mov inc loop loope es cmp xchg out add mov jnp hlt roll mov cmp rcrb repnz mov push sub repnz xchg xor xor mov lds jnp ret xchg divb popf dec xor ljmp dec lods cmp and xchg iret iret sbbb repnz xchg daa adc or jns iret insb pop mov push add shll xchg loopne cli mov jl lods (bad) stc lret mov daa iret ret and sbb sub inc xchg adc sbb (bad) jns sub xor sti aad add daa jmp pop cmp mov (bad) out test mov pop sti in stos and push inc stos xor cmp mov in (bad) sbb push scas out add loop xor pop dec jbe scas push xchg roll sbb sbb jg packsswb cmpb shll cmp (bad) and mov or out dec mov xor sbb cmp xor mov outsl out push loopne inc mov fdivl ljmp call inc (bad) in iret outsl int3 nop aad dec loop fcomi mov xor cmp in jnp xchg xchg mov mov mov lret imul fbld inc inc jl jb icebp xchg (bad) popa sub and inc mov pop mov dec jne ds icebp pop jmp jb addl xchg cmpsl out pop test adc aaa jns insb or lock inc fidivl lea xchg sti push loop jl sbb ljmp dec lcall push or fisubrl xor inc sti data16 repz cmp imul jno xor int addr16 rcr popf and xor push ljmp ret shr test imul mov inc cmp bound push mov fcmovb mov push fldt sahf xchg or mov popf push mov les mov arpl sbb adc mov aas daa xchg xchg fwait aam pushf dec dec push fidivrl xorl andb xchg scas push (bad) dec push mov jno jae push mov mov mov push pop push inc int xor push pushf ljmp add ror stos xlat pop xor mov (bad) cmp inc cmp or test mov sub pop test test inc or into mov jmp push mov add adc hlt sub add push push out dec mov dec bound mov fs push dec cmp xor movsb idivl push dec and dec ds inc xlat rclb (bad) fucomp ds (bad) lcall mov dec rcl mov mov insb jnp iret dec pop push add mov pop lahf aad sbb leave mov sub or push adc nop cs mov cmove aam imul and mov cmp ret and inc cmp and pop and js shlb inc in mov leave (bad) leave (bad) jg out js pop mov adc imul int3 cltd lret mov sub or jg sbb or cmp test pushf leave movsl sub add mov stos jae mov fwait out xchg jmp ss in sbb jl sub adc jge loop sub mull mov test in or ss cmp mov lahf lods fiadd dec pop jge outsb add popf jns outsl mov xchg jmp int out fstpl (bad) xor clc pop lods cmpsb mov sahf mov mov mov adc pop mov lret push push mov in adc bound pushf mov xchg int3 pop lahf add test jno out and xor cmp out ret jno mov fdivs push repz (bad) xor sbb or and imul ljmp mov ss mov and lock or adc test jp cld je jbe jne mov push movsb sub lods dec lret fildl mov mov hlt (bad) pusha leave mov scas in xor xor cwtl shlb push adc push push jo sbb popf lret ja mov xchg mov xlat mov adc out test imul aad mov pushf and sbb jl add add dec hlt pushf push fildl sub outsb pop adc lds pop adc mov out lahf jecxz add xor jl aad xchg inc (bad) xor mov mov cmp xor inc mov addr16 mov push mov dec ret pop or sub rorb push jb mov aaa js sub push mov negl test aaa sbb push fnop sbb pop jge or cmp popl jl out sub mov mov cli scas mov push dec (bad) xor dec sbb rolb add adc sbb lcall mov insb mov xorl jae mov arpl jge in and adc push push mov xchg out sbb es das pushl cmp lret cs rcrb push or lds cmp inc push xchg nop pop call mov dec js sbb shrb fsubl out adc inc fstpt push icebp fstp jg mov test mov and push loope cmp iret (bad) sbb add je mov mov mov (bad) mov (bad) int3 mov xor ret out rcrb add mov lcall sub scas mov negb jnp shll adc mov mov mov mov jmp lret xchg jmp scas pop jecxz adc adc and (bad) jno fsubr pop and push pushf lock into in arpl fidivrl das imul cli (bad) aad in loop fdivl dec pavgb insb popa mov cmp xor pushl or lret lock mov (bad) jg sub jno popa push movsb lock rcrl gs adc add enter call push fcmovne inc xor out mov jbe mov lret pop push mov stc cmpsb mov lock cwtl jle cmc data16 mov out sbb ss pop push imul insl das adc or mov or xchg pop ja dec ja test cmp insl hlt das cwtl mov mov js xor (bad) enter cmpsl mov insb je js xchg pop data16 push js sub cmp bound xor add out les and and mov outsb in out mov dec inc lret cmp ror mov cmpsl stos xor out dec jb mov mov dec push into mov out push test in in mov mov push push sbb jb push cmp (bad) loopne push cmc insb jb in lret mov xor jae pop mov mov (bad) (bad) lea dec popw ja sub ret mov cld aaa sub imul lret mov js mov xor xchg data16 mov cli dec cmpsl in push pop in pop mov scas out stos popa cmc push dec jp push or testb sbb jbe sub push adc cmp (bad) jnp (bad) dec js add inc daa or cmp adc or test fistpl add mov aaa xchg mov dec xlat ret cmp jns div dec jne call or inc mov in add adc es mov jbe inc or mov sbbl in mov decl sbb ret lods movsl pop and or lcall ds ret cs mov cs les outsb es sub or mov xor adc insl jle mov mov iret in jge mov insb (bad) push loop jmp lds xchg adc jp out inc mov js sbb pop fiadd sar sbb push je dec add int subb je mov je cmp mov arpl std orl cmp pop mov xor aam mov mov loope push sbb in into int3 imul sub or jns or adc mov mov or insb xor lcall dec test sub stc jge or js jmp mov pop jno clc dec in iret dec rolb (bad) push add xchg rolb lods adc xor pushf xorb pop sbb adc decb dec push pop or test cmpsb in ret add mov call out roll fsubrs pushf into (bad) dec addr16 sub ret repz jae inc xchg aad xlat or pop stc jmp push jbe push cmp cmpsb fmull sbb add cmp xor adc jl jg arpl mov xchg hlt cmp pop jl out ret pop and jg inc stc push fmuls sbb lret push or push dec jl mov sahf inc fldl imul outsb mov jg (bad) sbb in fsubr pop jo lahf mov jo and jmp cltd push (bad) push (bad) xchg aas loop fild adc fnstcw or in adc shr test (bad) mov and imul cmc es add rolb add add addr16 inc fnop mov dec out or pop xor movb (bad) cmp (bad) sbb test cmp xor jbe add arpl add cli test sub or xlat fsts cli mov mov cli cmova iret xor lea inc mov leave fcomps add push and aad sbb call mov cmp mov repnz lcall mov mov (bad) fdivrs mov ds imulb xchg push push subb sbb adc dec jbe int3 inc (bad) iret and popa fstl mov mov inc adc and cmp push repz leave push jg inc sbb jbe pop in std xchg xor movsl stos cld loope,pt stos inc outsb sub inc lock sub or xlat lock sti push dec mov jne xchg push movsl push inc mov fisttp and fs lahf mov mov sub and dec aam sbb enter xchg fisttpl jne,pn cltd arpl movsl mov aam inc rcl sub div insl test enter lods icebp dec into sub and sbb and push pop std rclb cmpb rcrb jecxz lods or mov gs fcos mov or pop jmp sbb fistp lret cmp jno xlat mov push (bad) push fdivrs mov call adc dec jg cmp enter jecxz jecxz sarl shrl xchg xchg pop pop decl push jnp fbld iret ljmp fidivrl fsubr push fsubrp test jecxz cmp xchg mov mov push push jmp xchg jge in inc insb imul jecxz (bad) inc test jl outsl dec inc call add sub pop push push mov pop in sti jmp pop aad lret xor ja push xlat das mov mov jmp sub jb scas (bad) lock mov and pop movsb lret cmp fiaddl xchg or clc fiadd pop push and in not fildll aas sbb fadd inc loope xchg cli gs out pop mov clc mov imul jne push dec inc lock insb or arpl sbb mov (bad) mov or das aad pop lret cmp icebp and jbe ret cmp arpl mov pop test push les push pop cld inc xor pop adc pop (bad) cs jnp,pt stc (bad) jp push xchg out rclb push imul hlt movsl popf inc sub ss mov xor adc mov cmpsl mov call pop leave inc xlat ljmp add xor jp push notb stos push dec pop loopne mov mov nop push adc cmp jecxz stos xchg sub outsb mov push aad mov or cmp (bad) sbb in cld cmpl mov rol or or movsl fldcw pop fwait sub loopne xchg popl ljmp (bad) mov pusha mov sarb add cmp mov xchg movsl aas jno testb lods scas in xchg fwait into std in sbb inc pop xchg cld (bad) jno sub cmp sbb inc jmp sbb jno scas sub add les adc sub sbb inc in sbb stc sti mov cmc fcmovne int3 mov pop (bad) aam and aad push cmpsl pop push dec mov sbbl js push jmp xlat xchg mov and rol popf mov (bad) sub sti jg js lcall sbb jo pop xchg sub leave jl sbb gs mov test add mov repz pop sbb xor pushf sbb insl cmp test popa add push xor push inc mov cli lcall ljmp xor xchg ja add add mov in cmp stos inc pop inc loop rcll js (bad) adc jp jne push in sub xchg insl pop and xlat in push mov mov repnz lcall enter call and and imull push push gs sub push cmp es or and inc mov mov enter arpl bound jb arpl data16 ss xor cmp jge (bad) jb lret push and sbb mov cmc aam call inc sti or in jmp sbb jb mov imul test push sbb test mov pop cmpsl leave xor movsb in pop lock xor sub or inc fcmovu es test push in in xchg fdivrs sbb or jge (bad) dec mov mov fsts cmp ds xor cmpsl out push adc lock and bound push push sub movsb fnsave sub roll fisub xor pop cmovo cltd cmc shr xchg jno,pn les cli mov pushf jecxz je je cmp xchg add push (bad) mov rolb xchg in push mov int add lcall leave xchg mov (bad) test loope cmp cld aad test jle fildl (bad) enter in pop inc cmp leave addr16 mov mov stos mov movmskps xor xlat mov jnp popa lods ret outsb rclb (bad) cltd mov sti nop sub inc mov lock int stos stc add shld daa jg aad cmp out leave imul fidiv cmp leave jmp push std sub ljmp negl push arpl jecxz pop pop push pusha arpl nop out dec outsl mov sub jp push inc (bad) lods sub (bad) jnp jno mov loopnew mov pushf inc xor xchg (bad) in mov xchg mov inc jo push inc in add push fcoml insb pop xchg outsl call addr16 nop adc mov xchg int clc lock mov and jo cmp sbb cwtl dec scas jnp dec in mov sahf fisttpl test jle sahf daa test add jns mov lea mov mov cmp sub jnp out incb sbb addr16 int3 repnz push cltd fiadd clc popa imul mov fdivp (bad) adc dec push das sar jno mov push or cmp in pop xor bound fcmovnb jl arpl inc and daa mov roll daa fcoms cld test lods stos out stc jbe xor xor (bad) dec jl push cltd test scas push cmp pushf scas jo lret add out pop aad rcrb nop/reserved pop mov mov call fcoml cmovno repz insb stc sbb adc (bad) mov and inc fldenv dec pop and (bad) sub xchg xor fsts sub or (bad) fistl mov sbb gs jb or add (bad) mov lahf js aas movsb test pusha (bad) mov insl jmp cwtl xchg cmpl dec sub in repz push pop movsl js adc mov lcall dec jl inc cltd out lods add cwtl push mov and pop dec mov pop dec xlat push sub xor pop aam mov add cmpsb xchg or adc pop mov das sbb xlat jno push add (bad) mov stos adc stos mov ret or or mov ds data16 cmp mov and mov mov loopne add xchg mov adc cs repnz je (bad) mov or out ficomp ret aad or add repz or push mov sarl lods dec cmpsb iret xor in mov mov pop movsl pusha push imul mov addr16 test mov scas pop xlat std pop inc pop rclb push (bad) icebp xor (bad) lahf jne jno outsl cmp sahf jae adc xchg mov dec popf dec or std push push mov push int push lcall lret mov insb not xchg cmp or daa stc pop sbb ss mov sbb mov cltd ljmp mov xchg (bad) lret (bad) push and addl lock xchg leave inc sub mov popf lahf push push (bad) mov sbb int3 mov addr16 xlat xchg nop mov mov mov sub adc mov xor or cmp mov rcrl pop jns ss add aaa scas mov and leave mov jb (bad) xchg adc aas iret push adc inc fistp mov sbb adc shr push and and pop sub push and std xor loope adc lret insb jb nop and adc sbb daa push std aas mov call push jecxz pop jb push sub cmp lret fwait inc mov shrl imul xchg test insb aad push mov dec bound inc add es leave xor cmpsb ljmp test mov in jmp fldln2 test loopne or mov int dec xchg and lahf sub bound mov mov (bad) orl addb cld sub xor es adc mov fcomps les sahf aaa pushl sarb cmpsb mov jb sub gs sub jge xlat (bad) mov cwtl mov lods pop leave fwait jne jne adc push in jp imul outsb stos rclb mov movsb ljmp and pop mov cltd lds bound lcall push xchg lods sti out sub daa ret fstl pushf cmp test mov std vpsadbw outsb mov pop cmpsl stos movsl rcrl xchg mov aaa pop out outsb sub adc sub fmul aas sbbl rol (bad) fwait sbb fnstenv test adc push jg aas rorb out rcrl cld inc adc popf push fnsave sahf cwtl insl jae insl jo call data16 stos xor gs cmp lret mov pop in xor jnp dec loop xchg lahf scas inc or cs int lds (bad) jno pop add pop add shrb rcl xchg push mov sarb scas cmc subl (bad) cs push mov sbb dec js (bad) cld outsb cmp into (bad) jno out mov and mov aam les sbb adc xchg jmp aas mov jno fstps pop adc xor mov dec sbb xor mov outsw imul pop mov sub xor int jbe inc mov cmp lret lea das daa mov sbb movb mov stos xor push push notl addl inc (bad) cmpsb in sbb es hlt jo shlb lea je push psraw sub std inc jp ja push sbb inc ss push std dec jae xlat jg mov and enter inc imul call pusha lods push xchg dec imul cmpsb movsl jbe jnp pop scas pop sbb call ret hlt rolb out cmp dec repz shrb dec dec push jbe (bad) mov inc dec push mov test dec mov jae (bad) jno xchg lret rorb mov arpl aam mov out inc mov sbb pop std dec pop jmp rcrl test faddl pusha test fstps scas push jl rcr (bad) push or push dec pop dec lcall xchg in clc cmp (bad) cmp sub pop push pop mov stos imul pusha sub popa js pop xchg dec loope insl sbb repz aaa cmp (bad) (bad) adc push or insl pusha out addr16 les repz sbb ret loop test xchg sub fwait pop gs adc dec hlt mov xor cmp cmp lods imul lret pop or cmp sahf ficompl outsb sub mov lret jge adc dec mov loope xor loopne icebp dec into push in sub mov jae jmp addb orl scas sub jb cld jle out ljmp jbe lock pop or cmp ljmp test into jbe ret and jnp push ret insb cmp decb mov out inc js fldl xchg pushf mov sbbl sub mov in jnp or movsb or (bad) js test push inc in (bad) out js pop ret aad xchg cli inc dec bnd xor push in fist dec mov popf popa inc lcall jmp jp dec cmp mov inc mov pop sbb push xor add hlt push push loop inc shrb xchg mov fsubrs fimull and outsl movsb pop orl pusha sbb (bad) lret and add jecxz dec pop mov pop xor pop std int jle dec sbb xor icebp sbb adc sti dec nop lds mov in lcall jns add mov mov xor xchg or jecxz or mov leave in xchg stos and fist and out or sub pushf and sub xor sahf (bad) lret cmpsb cmp fwait out frstor pop or push lret cwtl mul lret sbb out pmaxsw xchg xor lods out pop cmp leave xchg adc xor rol repnz in mov jp test loopne mov add imul out cmp push dec cmpsb adc (bad) repz jbe cmp push mov mov sbb imul and mov jle cmp adc mov push imul fsubl popf jb insl jne insb and mov imul mov mov jecxz and scas push push pop sbb cs xchg ret add push mov cwtl je pop dec jbe (bad) ret jb or lret jmp sbb push lret int3 ret mov push js mov in je mov and push push mov movsb mov gs imul outsb inc cld mov (bad) jg cmp pop cmpb xchg cmpsl scas stc jmp pop mov xchg sub fildll push push cmpsb lahf cwtl clc cmc cmpsb xchg lret sbb lods notl or mov pop mov cmp scas icebp cmp mov les ds push mov loopne mov in xor cmpsb xor repz in dec fs inc inc pop xchg mov fcomi dec sti stos in dec xor fildll repnz xor mov sbbw pop mov xor dec mov int push xlat ret inc adc (bad) xchg clc fcomps dec (bad) push push int jmp add mov add and scas cmpsb sub xchg cmp mov ss sti mov and dec cmp icebp fcomi bound or bound inc dec outsl dec cltd jnp in (bad) inc (bad) jo and and (bad) jmp lods inc push dec sbb xchg add xchg jge or mov xchg imul sub fldenv inc jge xchg aad mov popa push xchg pop inc es push mov ds aaa push outsl jp xor xor jmp mov and ja pop push js cs sub fadds fcompl (bad) cwtl and rolb leave jns push cmp adc rcll or jno mov dec xchg jle stc fcomi stos mov and aad ds jge out cmp mov lcall mov iret mov pop xchg or (bad) cld mov movb mov adc ss and fildll push push int3 inc movsb jmp or dec inc or and stos idivl adc cmc adc sti (bad) cmpsl inc roll mov setbe mov mov sub cs inc inc repnz clc cli cmp call pusha pop mov pop cli in loope into daa and mov cld lret dec int dec rclb sub push je add sarb dec daa xchg jl sub lahf js insb add cs xchg mov hlt call or dec push xchg dec cmc cmc test or subb sbb dec cmp call lahf fisttpll pop xor add push xor movsl mov iret xor cs (bad) xor rclb or jl js pop and xor cmp mov xchg dec xor jae int3 cmp cmp in sbb outsb hlt mov scas xchg sbb xor pop enter loopne mov mov and pop cmp inc mov fdivp mov fidivr add vcvtpd2ps (bad) cmp out loop loope cs sbb fnsave adc test repz lods mov popa xlat add scas add mov test sub fisubrl lock push dec movsl (bad) adc movsb cmp inc inc mov mov into leave mov fistpll inc scas rorb mov mov insb stos out jl and lods mov les pop mov imul xchg jp es ja adc or outsb aas icebp sbb and repz cld jg (bad) bnd arpl ffree jno,pt test in mov sub pop cmpsl iret push daa (bad) jo inc inc dec xor xchg pop mov cmpsb add xor push cld fldenv xchg jae,pt cmpsb mov adc mov jecxz sub lock mov pop dec lods test (bad) mov mov jp jbe pop jb (bad) das popa mov stos jle iret fmull mov mov popf ss out fldenv clc sub mov ja arpl stos hlt fistp into hlt dec adc repnz jle aad call or in loope sbb adc (bad) pusha xchg sub and or (bad) mov jno (bad) mov std out push (bad) enter push lret lock daa mov xor je dec scas lahf push leave or fwait (bad) out fbstp cmp xchg push push inc ss xchg or mov imulb test mov das cmpsl push cmp stos das int3 lds dec xor mov ret scas jbe and and add test ss loop in push (bad) mov mov cmp xor mov (bad) loop stc jo popa dec rorl inc and movsb pop cmpsb xor (bad) (bad) clc scas pop xor jne pop hlt cs dec inc loopne lret mov lock aas or fisub jbe inc sbb xor popa sbb or in jno xchg or sbb repz push pushf inc fdivs xchg pop lahf jl mov and aaa jb push add in scas xchg mov pop mov out or inc adc orb cmp xor sub xlat inc sub gs (bad) (bad) repnz cli ret sbb add mov pop lret pop and jae jmp pop mov loopne mov cltd std push and je ret mov mov pop out (bad) fistpl push pop jnp adc xchg inc xor adc ss mov and xor mov pusha dec outsl mov hlt in mov popa repnz out mov or fdivs jo jmp mov adc pusha sbb subl inc jo xchg sub ret bound shr push das push outsl (bad) loop sub mov lods (bad) mov lds dec mov sbb mov (bad) xchg mov les cmpsl jg subl outsl mov jge ljmp jmp mov mov xor cmp out leave xchg lret lea (bad) leave sub adc fs pop and test mov sub ret inc sub je pop inc lret pop add sbb dec imul test sti aas lods inc in repz pop push add ret cmp mov data16 loop stos mov sbb pop sub or int3 push repz mov adc mov mov out ret test imul lock lahf push pop xor test (bad) call push lcall fwait mov iret mov pop ss popa inc cld jg mov xor sub imul lcall or dec inc mov xor popf scas (bad) faddl inc imul (bad) mov in sub adc vrsqrtps sbb fdivrs pop and cs xchg mov cwtl adc adc enter dec movsl test mov notl (bad) (bad) mov shr stos out cmp scas mov ret nop fwait out (bad) dec rclb pop je mov mov mov cmp and mov cs hlt sub in addr16 rcll fadds fldl cltd pop stos ss cmp lahf cwtl sbb dec jp (bad) dec push and scas push mov jbe push inc out in mov pushaw mov sbb nop stc and addr16 jae xor flds out into mov jns and push mov fsubrs push int shlb cmp insl mov mov xchg push mov xor notl stc lock notb sbb adc lret mov mov adc aaa loope insl sub addr16 mov or mov hlt out (bad) sti cmp mov rol xchg inc (bad) jae out dec push popf test or inc rcl xor iret addl mov fcmovnu add or push ret xchg sub pop ds jmp mov fsubrs mov jo test lret jecxz push sbb es mov jo sahf mov push cmp and test mov inc lods aam xlat imul fadds cmpsl fdivl xor je stos sub inc adc into sbb adc mov popf and inc pop ficoml mov mov pop and pushl mov adc test arpl dec and mov fidiv pop stos jg xor mov pop push xor mov or lock pusha js pop out lsl push jnp js mov clc xor hlt push movsb jle jmp pop inc cmp jnp mov sbb js cmp mov sub pushf or popa push cs lea inc push sbb int add pusha in jo enter int3 (bad) push jno adc add pop into call cwtl (bad) jbe loope hlt mov int fdivl push mov mov or push js jle std pop xor aas push lods and orl inc sub fisttpll lret add outsb in fnstenv aas lahf mov dec adc out add dec inc mov mov mov dec (bad) loopew push cltd cmp ljmp jl cmp lods sub int jne adc pop and dec int3 sbb jge mov mov andps pop repz outsl in mov add outsl cmp scas pop lcall imull mov hlt mov leave add cmp mov or pop cwtl or xor sbb ds push popf enter inc dec sub ret lret das inc (bad) iret mov js lods dec mov push scas js xchg adc data16 ja sbb jb add and lret (bad) sub jbe and ret iret outsl mov popf xchg (bad) push sarb test adc xchg mov movsl adc lahf mov int pop test popf ret pop fsubrp insb mov xchg adc sbb testl dec xchg add mov repnz xor sub lret sub jl xchg inc addr16 pusha inc fsubs push repnz ja cmp inc outsl cmp loope adc pop rol fwait mov cmp jns pop fdivs arpl pop lret icebp repnz xor dec fldenv add ss adc adc jl sbb movsb mov pop fs out push addb jae add cmpsb in andl jmp and shrb dec inc lock fidivrl stos mov test cli mov and stos cmp test xor loop mul aas les xchg inc sarb push (bad) inc into (bad) sub dec in push in into xchg ljmp mov fidivrl aas test mov xor rorl cwtl or in dec bound punpckhdq mov push (bad) cld and ret sub (bad) mov (bad) pop pop test sbb hlt mov adc push xchg mov stc (bad) (bad) mov bound lahf push scas xchg dec dec or mov add lret fsubl gs (bad) mov sub cwtl fxch repz jnp push popf pop jns out lcall imul lods inc jmp sub out mov pop adc mulb movsl test sbb mov (bad) jae fsts jns jecxz dec push pop repnz imul loope es cwtl adc cmp mov (bad) mov sub pop push pusha cmpsl inc fstp ja ret pop add pop insl sub scas fcmovne jo sub loope test fsubs rorb popa lret mov rorb jae pop hlt in loop dec sbb mov pop and dec add aaa jmp and and mov clc xchg dec icebp aad sarl das fs mov pop jg sahf lahf inc stos insl dec (bad) pop inc sub pop cmpsb test test and mov clc jecxz xchg pusha and xor divl call outsl scas xchg ja (bad) or push iret and test jmp ds loop (bad) lret xchg std test clc sbb jecxz adc and xchg jge jno stos out or add xchg repnz cli lret jno out inc outsl icebp cltd sti mov mov lock mov popa jecxz sbb fidivl test mov xchg push loop sub sbb pusha mov ret mov xchg out stc sbbl jno sub xchg in inc insl mov call cmc dec jb mov in mov mov adc sub add test or out mov pop stc repz call aaa jno fldt pop pop sbb clc iret dec hlt daa mov sub lcall jl cmp insl mov stos mov pop (bad) jo cli mov (bad) int3 call ss mov mov pop clc push ffreep dec sbb cltd test sub popf leave stos add (bad) adc (bad) xor movsl push pushf push fs gs ds push sbb fsubs (bad) and loopne pop or add mov dec and adc icebp popa dec bound or negl test test clc das sahf stos xchg dec pop cmp bnd outsl hlt mov mov cwtl xchg inc loopne mov push cld stos dec movsb adc into (bad) mov jbe rcr xchg loopne xchg pop lcall mov mov les cmpsb sbbb pop jge cs xchg cmpsl cmp fadd bound ja or sub fild sbb ret test pop sahf or sahf lods popf pop push andl add xchg mov sarl aad or jbe cmovno mov sub insl shll cltd mov in mov sbb inc sbb mulb roll in pop mov sub xor pusha and dec dec pop pop jb dec test arpl cmp fildl mov (bad) push mov std or xor mov sub scas and jne mov sub daa xchg in mov dec test or sub (bad) ret xchg mov mov add xchg push jecxz js mov dec xchg adc testl fstl cmc mov mov sub fwait (bad) mov movb push repnz inc mov imul mov daa test mov mov lahf lds stos arpl test push pop sahf arpl sbb and pop sub insb adcb xor sbb iret xchg mov enter or xor inc out xor test aad jbe lret inc mov xor cli outsl add imul leave sub rclb aaa test jbe mov dec xchg pop mov pop js or add xchg pop jo xor lret (bad) jo rclb adc (bad) lret add loopne xor mov adc fistl or add repnz cmpsl xor rcrb xor mull (bad) mov ja adc aaa lcall mov adc jae daa scas jl lret fstpl xchg imul sub jns (bad) cmp mov add jmp dec dec int3 ds push call ficoml cltd dec rolb mov int3 jbe xchg outsb fstpl lods inc pop mov push aas xchg in lahf loope pop lret adc in mov ficomp popa mov mov aaa dec mov arpl inc mov sub stos or subl or or stc push pop out or icebp (bad) sub mov fwait into ja mov inc or lods mov mov clc inc and jno aad inc aam xchg int das dec mov mov add xlat jae int3 movsl cmc insl mov sbb and outsl stc jnp inc pop xchg aaa int jo in ret jne pop inc pusha or mov push push mov lahf out movsl jl ds jmp push dec (bad) repz pop jb jmp fstpl cmp xchg push rcrb dec loop pop add mov xor mov ret dec inc sub (bad) fwait mov xor fstpt pop and xchg inc (bad) mov push mov mov leave jno into out (bad) sar loopne popf jb fistl fsub loopne and or mov and rcrl mov inc in outsl enter xchg negb stc jns jg ret push mov mov call pusha or (bad) cmc mov je aaa clc stos sbb mov int std divb inc dec popf push and xchg jbe (bad) pop sub xchg hlt std punpckhbw ror andl xchg fidivl lods cld ret es (bad) es leave fstps sub test shrl push out and fdivl movb mov mov (bad) lcall and pop mov pop clc cwtl pop xchg adc lea gs add das dec loopne inc sub enter sti popf out ficoml mov out dec das sbb aas mov inc mov add cld ljmp nop push or inc lock mov mov cmp daa push or mov pushf js mov cmp push jp sbb adc sub icebp fs sbb loopne lret push arpl lock rcll push push xchg xlat xchg and mov xor push sti jnp mov negb out (bad) fnop mov jo cmpsl imul adcb orl xchg iret mov add xchg push dec jle (bad) xlat or (bad) das push test (bad) lock stc adc mov cmpsl mov dec inc insb es (bad) cltd cmp cmp das dec repnz push dec scas mov addr16 scas (bad) pushl inc pop arpl in data16 xor mov std inc add xor pop adc or mov jecxz mov push les stc cmpsb or sti daa xor xchg sbb out subl jecxz xor xor insl leave movsl push aaa lea movsl mov jo cmpsb pop and sub out and and cwtl push or jmp (bad) xchg hlt loope xlat lahf push pop add inc hlt ret pop push sbbb loop dec pop les imul xchg add fdivl add add xchg mov lea sbb repz dec push push mov jmp (bad) jp mov aad dec loop sub mov push sbb jne into cmp scas jmp pop and push push mov lods jb addb inc popf sarb cmpsl (bad) mov push sub dec push leave push lahf (bad) cmc addr16 les mov inc pop pop js sub nop test or push fldcw mov xchg jns mov inc mov test mov jno inc aaa leavew sbb jbe cmp ja dec adc mov addr16 insl xorl push push adcb (bad) jmp sub pop dec std lahf push lcall (bad) mov sti ret test lret xor push inc sub xor mov adc pushf clc inc cmp lcall add xchg xchg arpl lods cmp scas sub add aam repz or in sub and test sub mov dec adcl cwtl mov cld push in arpl int sbb sub adc hlt mov cmpsl (bad) bound fistl mov jns dec ficompl lock cltd xchg jb jle add std aas psrad or lds and xchg loop jle pop mov xchg xor dec pop sub cmpsb hlt imul mov in mov and jns mov push call inc jl jbe insb roll frstor add test xor test subl or sub loop xchg subb aas iret aas push add (bad) lods xchg xlat aad lock sahf push mov in out add pop add scas pop mov push inc pop pop adc cmp leave enter push or and (bad) and icebp cmp imul mov ja arpl loop sub cltd push pusha mov jg mov pop dec jno test gs aam in mov push pushf mov rolb js add mov mov dec dec add jbe lahf cmp sbbb lods xchg dec sub xchg push mov push iret or insb pop repnz xor lock xor adc rol std out dec sub loopne mov mov incl xchg dec mov xchg push daa out cmp or (bad) testl pop push sbb out fdiv das (bad) les jae pushf inc xor dec cmpsb fidivrl int xchg or push sbb jl imul jo les rcll sbb and sbb inc mov xchg scas pop lods (bad) mov mov (bad) aas lahf adc into fwait loop adc jge popl and xchg addr16 xor pop out xlat or int3 stos cli les fsub sbb pop inc pop pop pop inc mov lods fwait mov decb sub insb add call iret adc fsub in push xchg sbb sub jns ja int3 push aas push rorl (bad) in jae mov push lock cmp dec outsb mov jns inc (bad) leave aam mov adc jmp lds inc in (bad) dec clc inc sbb cmp out jne fimull xchg mov and aam movsb arpl cwtl mov pop mov scas lahf fnstcw xor sub test dec mov cwtl xor sarb xor sbb mov adc mov scas mul int3 dec sbb add daa xor mov jecxz out mov pusha sahf test mov pop hlt jmp mov test mov xlat inc (bad) cmp jb pop std popf scas bound dec cli sbb out cs lret dec and rcll gs test sbb push (bad) or xchg pushf lods jge adc sbb jp pop push (bad) fistpll fdivrp adc leave in out sub loope mov jle (bad) (bad) sbb cli pop lock inc cmpsl aam jg lcall ja xor loope dec icebp insb xchg es dec push sbb shll lock xor fwait iret cmp popa hlt add or sbb adc scas mov repnz xchg adc subl jno jno je adc daa push or push fwait test jns call fmull jo pop outsb pop lret push data16 add sub fiadd das popf insl mov in pop pop add jbe shl (bad) xor lret aaa jnp orl mov test frstor scas or sbb and out xor push cmp adc in dec mov rdtsc mov loop adc loope inc mov arpl dec pop scas insl or sub mov aam sbb mov and clc xorb jno int3 inc adc mov loope mov dec mov mov mov pop inc (bad) into (bad) and mov inc mov pusha out mov aam jl jmp cmp (bad) jbe and mov and xchg loopne sbb scas push test movsb aam arpl cmp and ds or in adc popf cmp test repnz inc loope arpl or xchg fnstcw xor rol out xor jl sbb add mov sar push stc cmc das (bad) dec push ds mov xor sub in mov fnop lahf ss push cwtl in pop sbb popf sub nop test inc xor clc jle xor das pop mov ficom or mov data16 (bad) in lret push sbb es pop add push arpl xchg repz push pop xor xchg xchg dec inc gs or xchg mov inc push mov loope,pt mov js hlt xchg stos rcrl or mov js and arpl dec xchg (bad) push sbb cs fidivrl fwait dec lods je repz into je leave (bad) bound ja cmp jnp sub xchg adcb xchg mov adc jb std xchg repnz loope mov add mov add dec (bad) sbb imul pop pop ret inc fs lds pop xchg fisttp push inc insb ficom ss imul leave jo test and stc into jbe mov push or ss fs or and push and pop inc add xor xor leave push (bad) jne cmpsl jne pusha ss fldl xchg lret mov mov outsl dec dec outsb outsb loopne or dec push ja lret aas inc jo lret cs ja xchg or pop scas outsb inc lea mov pop stos lds xchg leave push hlt adc jmp xchg je dec je imul shrb int3 jns cmp add xor pop sbb ret sub outsl subb out xor loope adc add and mov lds adc mov ss lods cmp test sahf mov leave sahf add xchg bswap pop sub xchg push jle sahf cmp (bad) (bad) repnz mov mov mov and sbb ds daa sub pop inc sbb or and xchg in fisubr ror mov inc sti ds mov mov fisub and mov arpl pop mov push mov dec adc test pop dec (bad) rcrb xor aas xchg dec sub cmpsl push add in inc outsl and leave lahf icebp out (bad) aaa pop loope xchg scas fxch dec sub fst adc or mov (bad) xor lea xor mov repnz cmpl and outsl sbb popa je out ja mov push or add dec jmp push enter movsl call mov xor mov loop mov or cltd in jge pop repz and and jo mov push jae jbe xor xchg sub adc cmc xchg hlt jle test cmp xor push bound and jmp imul push push lods jne popl rol mov out xlat imul rcl jecxz out dec popf mov and lcall repnz sub mov push pop fdivrs mov fwait arpl jns (bad) sti into sbb sbb cmp adc cmp int add push xchg push das pop push add les inc jmp stc push pop rol or dec fldl xor aad mov adc jno into lock cmc inc repz and (bad) and es inc or push or adc (bad) das hlt sbb test mov xlat push in mov jmp jl enter insb mov cmp sahf xor push shrl out mov cmp nop adc inc mov adc dec pusha int into mov sbb test enter mov mov call sarb outsl push ja pop dec addr16 out stos add push push sub push inc scas add int3 sub mov mov sbb mov dec lea lret adc dec sbb xor mov add ds push sbb add push pushf clc mov popf and jb adc sti in (bad) dec cmp xchg lahf mov fs ja mov lahf hlt mov test negl (bad) mov icebp mov movsb pop pop mov adc dec xchg out mov cmp adc mov adc sbb jle pop and jae cmp cmp dec xchg mov call inc out dec mov loope push test add and sbb or test adc mov jl fildll cmp mov arpl mov xchg or sahf add dec cli fcomps (bad) mov call iret (bad) cli dec nop sbb lds jb sbb adc dec sti xchg fdivl push daa xor inc jno mov nop out shl lahf aas inc and jne pop jns xchg push test pop pop mov cwtl aas push mov shlb xchg loopne aas sbb in lods push pop out lods cld lret jp out mov inc pop jbe insb cld push nop pop cmpsl fisttpl or and mov mov hlt and jl mov inc adc scas push js in cmp push mov push push call mov cld (bad) mov push mov mov ret adc add sahf push sbb xchg and stos inc adc xchg sbb call add fidivl add and out addl sub sti (bad) jle (bad) mov push adc pusha sarb dec ja xor sub shr jb mov pop rorl cmp inc cwtl mov xor sbbb push lods lahf movsb mov cmp scas in inc cmp or mov dec popl push pop aaa movsl mov roll sbb adc adc xorl and pop dec mov push jbe and dec out ficomp xchg int3 inc jle mov jg pop mov push jp mov insl pop pop loop jae sbb pop fcomi inc mov adc pop mov mov (bad) call test or jb xlat daa call pushl jns xchg (bad) lret jae jae je lret lods outsl hlt das fs xor in xchg jp rcl jle hlt jg outsl (bad) cmc adc lret pop lahf imul (bad) sub lds aaa pop mov imul jns mov mov sar and mov call sub fsubl data16 cmp in test dec xchg cmp imul xor inc dec inc test sahf cmp sbb imul sub rcrb dec stos push cmp aaa rcr mov in cmp clc jns je xor cmpsl xor jo mov scas adc mov xchg lcall mov (bad) pop mov call xchg popf jle and sbb mov out push inc lock test pusha mov ret out and pop push lds sahf movsl or and sub cli lcall mov and test ret in sub fist adc or xor mov int3 rclb mov adc cmp loop rorl int3 stc and in pop xchg cs sbb movl inc lea push mov mov mov add lods mov aas jmp insl lret (bad) mov push (bad) pop scas sub mov stc stos andb add jae inc out jbe sbb sbbl stos sub jno ret in xor scas mov (bad) jmp int pop xor cmpsb lcall sub mov movl dec mov jg pop fistpl cmp dec ljmp test cmp in cmp inc sub cwtl jp inc ret xchg push xor mov pop and je sbb jae add xchg lahf mov out je (bad) and mov (bad) push outsl inc jb cs fcompl mov or push fidivl push adc aaa mov mov pop mov int3 cmc or in int3 add inc adc xchg sub loope lret fldl out out cmp lea aad sub loope iret (bad) outsl aam dec cli sub mov mov push std jo push or jne dec dec xor sahf bnd inc fist and (bad) out (bad) mov mov xorb out xlat mov sub add xor adc leave sahf loope jae dec clc mov dec int aaa push imul cmpsb cmpsb mov loop or push outsl aad cmpsb xor mov insl jne repz mov sub jno mov jne push lahf sbb mov cwtl icebp push and aad and stos into jecxz xchg fdivl or scas insl ret mov inc jae push rcll dec (bad) jg out mov cmpsb jecxz push ljmp into jne pop ss loope stos mov xchg jae xor xchg test loopne sub sahf mov inc arpl or popa jge mov (bad) arpl pop pop aas daa out mov pop aas test sub inc push aas push xor cmpsl add (bad) xlat jbe divl dec or jle insb or ret xchg push jns sub imul insb fwait fwait cmp mov (bad) pushf xchg sub xchg cmp mov aas xchg jecxz bound fistpll cs addb lret cltd jl sub movsl inc mov adc test lret (bad) push (bad) push push cwtl popf lret aad mov int3 pop jp push hlt pusha icebp aaa xor call leave pop lret jge fnstsw adc cmpsl inc punpckhdq jp (bad) xchg arpl or (bad) sub outsl and pop popa mov cmp cmp mov call pusha int3 sbb dec arpl popa movsl enter (bad) test sub out popa ja fistp jl lret sti into sbb push or insl and add mov add or mov and ljmp sarl mov gs dec mov loop or movsb xor xor jp popf mov push rcr jno in clc push or add test mov (bad) shrb (bad) fadds mov add sub pop push fiadd popf dec iret or test clc fcomps cld movsb xchg fcmovu out inc stos addb push in (bad) imul lea pop and dec sub sbb cmp mov push dec dec call fs xor enter mov mov je xchg adc dec mov xchg ja jl sub pop stos les (bad) out dec js dec push xor inc lcall cmp nop sarl bound out in pop jmp push lds popf imul (bad) ret dec (bad) sbb in fidivrl clc insl les lcall sub mov jne add shrb addb sub mov cmpsl xchg idivl pusha xchg dec aam pop sbb jp mov push outsl call xor lds stos push push add (bad) inc dec (bad) mov mov dec movsl je sub (bad) inc (bad) dec in std imul sarb and jno hlt jbe mulb lea pop testl fld pop or test and ss mov outsl mov xlat jne jo cmp insb cmp les mov pop lret or leave roll mov or sbb je cmpl mov ljmp shlb loopne aas cltd push lret inc enter sbb fs icebp push sbb add in jae sti mov mov shrl clc aam (bad) ds bound lods adc mov inc mov pop aas mov lret out aaa sar (bad) aam add (bad) mov cwtl hlt movsb adc push lea lret dec fsubl fistpl jae mov jmp fndisi(8087 ficomp xor insb fwait sub push fwait jg out jo push ja mov in fdivs mov jl outsb or pop loop mov loopne xchg cmpl mov xor in bound dec (bad) popf sarb mov pop jo out pushf mov jmp sub test aaa stos push mov xchg xchg rdmsr js mov fstps push fldcw sbb outsb jne fnstcw (bad) scas pop mov in ret rorl inc (bad) mov dec ja stos jle lock inc into (bad) rorl xchg stc mov lock sar cld inc ss hlt push les mov cmp out dec (bad) iret cwtl push lods or test in cmp aad gs fisttpll sub cmp jo lds cmp dec out sbb mov mov (bad) lock mov sub cltd or test ljmp inc inc sbb pusha stos adc dec jne dec sbb and mov lods int add stos jge lcall cmc dec mov rcrl cmpsl mov bnd insb dec and xchg (bad) leave out dec es mov outsb stos inc sti (bad) ja add or enter dec std dec push lcall hlt mov jl cmc mov nop lods stc daa bound pop (bad) nop jns scas push adc hlt inc ja or and ss je hlt mull jg outsl inc add ds sub fidivl fcmovnbe shrl push int fisttpll pop push fstpl and mov sar mov mov imul sbb mov xlat (bad) outsl or push rdmsr leave out pop sbb or jg lods lods ficomp pop xor in inc addb fs nop mov push idivl aad mov or pop scas repnz mov add jl fdivs push pop out sub pop aam pop cmp sahf sbb cmc cmc inc add (bad) mov insl popa jae xor push mov addr16 (bad) mov sbb sbb sti mov insl pusha in scas mov fildl jo rolb mov pop mov inc addb (bad) ljmp pop cmp dec mov stos sub cmp dec rclb mov sub sbb loopne (bad) (bad) add aad xchg incl mov xor inc fs inc fistl xor ss dec push daa and loope sub sub cmp pushf adc cmp out xor lods push std lahf xchg sbb (bad) lods jecxz fisubr cmp pop cmp lcall or repnz xchg int xchg lret cmc xor mov mov fisub push dec jb mov dec push loope pop xorl decb enter pop movq push mov stos ljmp jne insb pop adc fadds out out cltd lahf mov mov lcall inc xchg sub mov jg push dec jmp imul sub cmpsb jl jg bound test cli inc ljmp cmp es sbb dec (bad) jl inc in inc dec mov outsl cmp arpl scas call nop (bad) cmc data16 ret (bad) lcall xor lea aas scas xchg or adc aas test mov das sub or cmp mov mov mov jno mov gs adc cmc movsb mov pop (bad) mull std xor std decl rep ja fidivrl mov jb jb into pushf dec aas push in pop or push mov mul dec mov popa and adc jg rcrl mov imul (bad) mov repnz push andb shll xchg mov xchg (bad) aam xor mov xlat cwtl mov adc xchg sub push cltd jns addr16 lods dec ljmp out in push mov pusha ss shlb mov add pushf popw mov xchg jae leave sub icebp mov imul jb pop lcall rcrb dec rcrb jo cmp faddl leave jnp sub daa sbb call lret (bad) lea sub das (bad) push mov cmp inc mov fcompl ds fsubrs jle mov xchg xchg loop pop je push or mov sbb xor push pusha outsl add aas out jns cmp xor fild outsb and lods xchg (bad) sub lds mov lods mov lahf jge sub adc mov adc popw rcrl push mov or (bad) icebp cmp pop fimull add dec push pop fldl adc jbe aas daa leave adc dec ror adc aaa mov dec popa mov test addr16 mov inc test jns jle mov and push decb fisttp fidivl sbb xchg and xor dec repz mov andl and xor jne mov lcall pop loop push pop dec xchg mov push inc (bad) es rcr push roll pop pop mov mov mov mov mov cmpsl cmp xchg cwtl dec pop pop pop jnp cwtl adc sbb mov sbb push fsub xchg or (bad) pusha and stos jecxz insl mov test and test xor jl stos fwait xchg or rcll push int adc enter movsb xchg mov dec mov jae je jmp mov and fbstp mov jns add and imul add arpl xchg lahf sbb sbb cmp rcrl sub xchg test sbb push xchg andb es ljmp repnz lahf jp pop xlat mov mov bound xchg push jb push fnop or dec xchg lods jle outsl rcrb pop out stos jnp pushf cwtl jg mov inc iret in notl hlt mov push sbb cmp xchg das pop cld iret mov dec mov enter nop cltd mov xor rcll (bad) cmp xchg mov mov sbb push dec jmp in inc (bad) push rclb push mov popa mov adc repz repnz fbld lcall pop dec nop mov push jo cwtl ds push xchg mov pop jg fnstcw sti cmpsb jbe push mov mov lods jmp sahf dec (bad) mov mov xor dec es adc clc fucom or repnz mul frstor adcb jmp scas jg sbb fstpt test jb xor int3 in lret pop xchg push std and xor fs inc and push cmpsb jns (bad) js mov arpl xchg pop pop cmp fdivrl lret addr16 cli dec mov jge (bad) jne adc and jmp xlat out pop leave cmp and les sbb std mov pop rep and sub sbb xchg dec and inc insl sub push sbb xchg (bad) ja ret push fsubl pusha (bad) xor jecxz fstl push inc out adc adc mov test scas jp adc int3 mov inc mov dec push cmpsl ficom (bad) outsb rorl cmpsl lahf cmc mov or (bad) mov pop mov push daa ficomp popf inc sbb call xchg add cmp mov data16 mov bound cmp sub and rol pop sbb add jp cli cmpsb out popf adc mov sub jg popf fldenv mov sub mov daa mov mov sbb xchg cmpsl mov push and out fsubs pop sub jmp arpl int push (bad) mov mov push mov push arpl jg lods orb clc push (bad) test pushw sbb dec cs jae cmc xor push mov pop je cmp (bad) mov in sub mov cmp xchg mov test push adc jns (bad) daa gs xlat add lock cmc mov aad out jb ds mov sti push (bad) mov cmpsb push (bad) cmp fiadd in mov jge aam mov mov jle je stos cmp mov ja repz and xchg imul in sarl gs es arpl inc mov mov xchg mov stos adc pop mov sub lret or sti imul mov (bad) lock out sbb insl js and (bad) clc pop aam cmp test and loopne lcall sub lahf dec xor movsl mov outsb jmp into out std adc adc leave (bad) mov stos loop xchg dec pop test imul mov enter push je outsl movsl rol movsl adc addl xor sbb jmp stos cs adc ror adc pop shl (bad) mov add or sub jnp jmp xor idivb inc or pop inc push int outsl inc stos and test jle sub lds dec cmpb dec push jg dec test fisub cwtl repz int mov add in test int3 sbb in mov inc adc scas adc enter push ja mov icebp sbb inc sbb jbe dec iret xchg mov pop movsl lcall ja or mov inc (bad) flds sub cmpsb (bad) cmp and mov popa fisttpll in mov (bad) ror push xchg and jb add clc pop jg insl (bad) cli xlat ss inc mov addr16 bound lock roll jp mov cmp popa aad cld clc sbb mov movsb ds aas (bad) push cld push sbb sub and xchg mov cmc mov xchg xor xor xor stc dec sub mov enter loopne push fisttpl or es clc hlt sbb icebp repz repnz mov lahf mov imull lret inc mov cmc adc sbb mov ret xchg mov cltd mov test inc hlt cmp push dec mov cltd xchg lds jns sub es sub imul pop sub arpl cwtl fstp popa adcl inc (bad) adc dec inc xchg mov xor mov daa xor repz daa mov and lods push cmp add sub sarl outsl insl fwait push rcrl dec imul or out popf cmp je sub xor aaa sbb out pop mov push test pop and push cmpsb cmp daa push ret or mov adc outsb leave and testl push in inc sbb mov pop mov movsl sahf sbb lret jne adc rolb mov dec push repz (bad) ret fldcw outsl lcall add mov dec jb push shl push lds jb lret sti iret loope test lret mov push inc push idivb push push jne xor test out fidivr mov fmuls (bad) testl dec in rorl jbe les xlat xchg sbb cmp (bad) lret or inc sbb push in xchg imul mov pop ljmp pop dec insl jmp sub ret int3 and pop lock push roll (bad) cmp rorl dec test daa ret ja loopne and pop xchg je xor mov scas inc adc inc lcall fwait inc rcll fstps das ljmp out (bad) out adc jbe (bad) ret push mov arpl push ret shlb stc icebp pop clc push sbb sub push and cld push and or push adc fimull fildll ret dec fwait add (bad) xchg xchg pop adc arpl cmp or in inc in and cmp mov inc sbb xlat mov rol xchg push cmpsl es jae lret cmovs dec clc sbb cwtl cmp fwait xchg out cmp adc icebp mov sbb leave adc dec pop ja push mov sbb int3 out popf push sbb loopne inc outsl loope push nop outsb or arpl adc repz dec mov lods push inc mov (bad) mov data16 dec clc dec jnp dec xchg pop sub fbstp pop dec popf fbstp cli clc scas das icebp negb dec lea mov in sbbb and ljmp jo or mov mov xor (bad) in movsb idivb out push push out sti test jmp lcall xor mov int3 mov push cmpl sbb (bad) fcoms out and pop adc insb popf stos sub lock mov mov es or inc jge inc daa ss inc mov cmp gs movsb ret iret sub jno add (bad) ljmp push lahf outsb lret nop pop jl mov ds push leave mov out cltd or mov adc scas stos cs stc test aad and mov add fwait mov dec outsb push aam decl adc cli xchg and fs insb cli test xchg in push cmp push adc adc stos sar sti rcll pop sub addl arpl cmc xchg inc dec fcmovnu xchg mov aad shlb (bad) mov (bad) cmp jl xor mov loope out scas mov add xchg stos mov sbb cmc cmp mov add dec movsb lcall leave jg adcb mov cmpsb nop jmp pop xchg in out lret repnz test int fisubl jnp scas xchg lock paddd cltd xor push pop sbb out push xor movsl out mov push inc dec lock mov mov cld imul rorb dec mov pop fisubl jo mov sub lock pop mov (bad) xlat lock jnp movsl aad inc call aas ret mov out loope jmp add jp ds xor faddl push jecxz add aam push imul xchg pop imul cmp imul aas dec lret sbb sbb push (bad) das shr or xchg pop mov arpl fdivl mov and loop push shlb sbb sub rcrb int3 add mov jp daa js adc js cmp cld mov das add loop jnp test and shrb roll push jmp fxtract pop mov jle sbb cmp push scas add shll data16 jecxz addr16 xor mov ficomp pop mov sub cmpl insl add push add xor test add xchg cltd sarb xchg je in push leave mov sub adc data16 roll sbb iret inc add mov add bound push fs jecxz add sub or mov sub mov jo loope (bad) mov push adc xchg imul popf jb dec xchg out mov fsts pop fsubs inc cli xchg mov jo les push outsl fnstsw sbb into cmc push ja sub cltd mov xchg repnz lock mov xor imul mov and push add outsb cmp roll fs andb (bad) jae imul lds adc insb cmp mov cltd adc insb je and xor sbb cmpsb orl pop or into out sbb xlat mov push stos pop and stc scas cmp repz (bad) or dec stc push mov daa xchg push lret xor outsl jmp cmp adc xchg (bad) popa add inc call xchg lret cmp xor ror mov int3 push flds cmp cmp add pop clc jo lock mov or ss das jae pop adc cmp push mov push cmpsl jbe out mov add mov enter in xchg bound sti add jno data16 je cmpsl mov mov jg stos mov aas adc mov outsl cwtl jle call inc out push out cmp pusha fcompl and les int adc mov cmp mov outsb aad repnz xor and insb mov stos getsec js push adc mov sbb dec sti dec adc mov ljmp and orl cltd xchg (bad) lods sub add or jnp push lcall push pop mov jge mov out aaa dec mov insb pop int pop mov push and fs push inc dec lods rorb pop sbb rcll push shr cltd popa testl sbb or hlt jno xor ficom or mov lock imul mov dec mov inc outsl je pop or mov cmp add imul aam lods aad mov sbb push sbb loope sti jmp (bad) test mov popa movsw mov xor mov sahf cmpsl ret pop jl int3 adc mov es sub aad mov jno cmp cmp sub in and push mov mov cmpsl jl jnp add jno scas sub mov xor ret mov mov (bad) xchg cmpsb fwait mov lds cmp xor aas icebp fsubs cmc sti jo adcb test and lret rcl sbb dec pop aam jmp fisttpll bnd cld mov adc xchg lods mov jns fldenv stc lcall rol das (bad) cld decl bound pop sbb js stos cmp inc dec call jnp outsl pop in sub dec cmp cmpsb incl mov rcr cmp adc (bad) dec sub repnz jns arpl cmp jmp mov test sbb aaa push aas ficomp or pop adc ret imul int push dec clc fadd xlat mov xchg test roll jg (bad) jle xchg mov ljmp mov or call jg test in fmull nop xor cli inc aam mov les xchg mov scas push mov loope push cltd and dec repz popf xchg pop push push popf lea sbb and push pop sub mov cmc loop aam cmpsb add imul rcll loop loope lea std sub outsl or lea outsl stc or loope inc sub std push push xchg cmpb and (bad) aad and fsubp adc mov jmp push cltd jl and mov add (bad) fisttpl movsl push and (bad) jge mov sbb lcall cmpsl fdivs js inc leave jge out inc lcall out ficomp inc xchg mov push add pop mov pop fistpll or mov fnstenv insl and pop inc mov inc repz scas push cmp and inc clc jmp mov jb (bad) fstps lods pop and in xchg sbb dec pushf sbb jns repnz sub popa jl test sbb pushf in cmc xor mov mov cmp jl or loopne lea and inc xchg cltd push mov enter push lods stos inc shrb lods sbb repz cmp jl fsubrs ljmp push sub aad jbe adc lea mov pop push push push jo sub clc inc xor fldcw adc jmp sbb mov cmpsb adc outsb dec dec fwait push ljmp leave xchg mov ljmp aas push push push or mov bound jo pop stos je cmpsb lahf xchg push test and mov lea (bad) mov lahf into pop sarl and insl test add mov xchg xor pushf shrl and lret dec mov push pop out sbb mov xchg pushf jb testb test and sbb adc divl (bad) mov leave rcrl out inc cmp out das outsl push in mov sar push xor imul adc xchg push lea sub inc pusha xor cmc mov cmp jno sbb scas adc jp inc movsl jmp dec outsl dec jb or inc add cmpsl (bad) dec mov (bad) mov out xor test sahf int out subb repz xchg fwait aam jp pop clc xchg std lcall (bad) ficom mov and inc inc mov aam sbb pop adc push add pop lret cli add into jno test outsl jne mov push out and cmpsb ds sar lret and stc loopne sarb xor jne sub test mov cld (bad) xor mov push jl xlat pop (bad) in dec push and add repnz imul add test mov jle jmp dec or loopne push lods xor mov adc jle cmpsl (bad) ljmp stos unpcklps ret inc fldl mov cmp mov mov add enter fisttp addr16 pop mov lahf fisub ret and mov sbb pop jp xchg aad inc push call push jo sarb lea cmp lret cmc jbe outsl jne in in xor and arpl mov aaa out jne mov into out aam and add data16 icebp mov aas lock lock insl outsl mov rol cltd iret sub mov popl and sub (bad) push cwtl and aaa mov mov jae scas nop orl (bad) (bad) mov imul popf jns and sbb sub cmp jg movl jo addb or insb pop stos xor dec idiv adc push mov pop jb pop lds cwtl xchg add pop push out stc cmpsl psubusb dec test (bad) jmp mov fmull (bad) push dec mov xor dec add psrld dec int mov mov push pop dec jl pop push sbb xor (bad) jecxz sahf in sbb lea movsl xor or xor das rorl aam add add jne pop and negl iret add into gs loopne xorl add pop jb xchg pop adc rcrl mov xchg cmc jo bound cli cmp mov fs xlat mov sub mov pop cmp push stos stc add xchg lods cmp (bad) jnp lcall jecxz pop jle cli or jo imul mov mov lcall add int push add fsubrl mov imul add mov incl loop (bad) cmp movsb out mov repnz negb inc add cwtl popf stc fistpl jbe push sbb or jmp add lods das mov cltd aaa dec ffreep pavgb ss nop xchg andb inc and out adc jecxz into adc push push and push repz rorb push je mov inc nop pusha movsb scas mov int3 mov jns mov dec hlt mov sub jb push push xchg adc dec cmpsl sarb mov dec jmp (bad) out movsl pop mov jge test cmpsb ret lcall xor call imul push (bad) cmp in hlt icebp cltd mov jmp shll clc aas push cltd loop sub int3 shrl inc jg adc (bad) loope (bad) call push cwtl dec ljmp mov sub (bad) in xchg (bad) dec pop in gs (bad) aaa jae xlat clc (bad) sub in sbb (bad) in sbb test out rol stos sub and pop bound mov jge int sbb idivl jne mov ret movsl inc lock test fidivl xchg mov push cmp (bad) sub lret xchg sub sub xor adc (bad) cld sbb push pop jb in (bad) out movb ja inc outsb into sbb adcl test mov das movhps prefetcht0 push out and add fcomps or stos mov mov cwtl cmc cmc test cmpsb jmp mov or sbb cmp pop mov mov xor pushf jle fldl rclb or ja lahf mov lds arpl in mov push sub push lret repnz or js fucomi out adc aam and cmp shl mov xlat pop mov stc ret out test xor push or es movsl xchg xchg orl or dec add and outsl or stc inc fcoms fisubl js mov mov sbb leave insb jge cmp jno mov popf pusha and mov in push outsl fsubr jbe or fcmovnu sti xchg popa in loopne fs fs xchg mov xor mov bound or sbb cmp in out add push lods and inc inc fsubr popf xchg mov xchg (bad) mov and aas loope hlt sub sbb call js jmp pop movsb repz pushf inc xchg (bad) movsl add dec or mov mov shrb dec mov and xchg push out jae (bad) xchg scas xor ret hlt (bad) gs sub (bad) (bad) es push push and mov or out cmc test mov out hlt and pop fbstp mov aas pushf (bad) lret rclb xchg push adc sbb loope add and add sub (bad) jns cmp jecxz mov mov das ret and xchg dec dec dec pop xchg and cwtl stc sub scas aas lock mov fildl add sbb ljmp cmp outsb (bad) mov (bad) mov stc sahf pop or (bad) pusha jno movsb mov mov inc mov inc dec data16 fs in out sahf inc fist fidivrl shlb lcall rol out or test je in xor mov aaa push fdivrl and neg (bad) and add mov (bad) shll das pop and fsubrl xor add int3 in push stos add dec xor jmp xchg lock insl push clc pop sahf in push aam scas sub mov mov lret mov pop mov pop je imul imul xor xor dec data16 (bad) iret or sti lahf sbb sub int les je jecxz mov and jmp cmp loop loop and ja mov mov out mov cmc dec (bad) out jmp push mov (bad) xchg push and in adc inc js adc xchg scas sbb push xor lds jb loopne (bad) cmpsl or rorb (bad) pop hlt outsl push push aas sbb imul lret jl ja sub aas dec int or movsb push stos jno js adc or xchg cmp (bad) pop test scas mov daa inc fcompl push sub pop repnz dec xchg sbb in xchg dec lcall push fsubrs sub test test in xchg cmp push fcoml sub (bad) push cmp pushf sbb jecxz insb adc les lcall (bad) in movsl mov inc aaa xchg push out xor ret jmp jle (bad) arpl adc outsb fcoml outsl aad mov adc cwtl xlat jle xchg cltd orb ds test or mov adc lds arpl aaa cmpsb insl pop clc push adc dec jne jmp outsl popf inc xorl rclb mov sbb or (bad) mov out daa push incb dec aaa sti mov sub push insl adc cli (bad) cmp aaa cwtl lret dec test lods loope dec xchg (bad) or or adc icebp or arpl dec sub pop test cmp cmpsl decb cmp (bad) and daa into dec push cmpsb push add pop (bad) pop push fisubr pop pop mov jmp pop daa out (bad) enter ja loopne (bad) push leave in mov repnz sbb xlat cmc mov es mov addr16 enter clc push xchg sbb jl push fld insb dec mov lcall (bad) repz sbb scas test std in (bad) inc mov das and lret sbb call enter push es (bad) loop rcrb or dec (bad) push ret movsb push sbb xchg xchg imul (bad) push ja stos sbb lods out pop pop sti pop pop push jle rorl add scas mov mov int in jge cltd mov das int xchg aad xchg xchg fs stos sub xor roll jmp loop test (bad) jmp cmpsb sti loopne pop push xor iret rorb mov dec sub in xchg out fisubr cmc fmuls (bad) in sub in ror and lcall sbb mov xchg mov inc xchg lcall dec jnp adc aad jb bound pop cld or dec cmp mov aam dec adc imull mov inc mov into push jp ss jg jecxz or add hlt mov add das iret fist sub xor pextrw test das cmp stos lcall sub lret jge and cmp iret iret add int3 push jge fs imul fdivrs lods inc sub sbb into lods rcrl or ds (bad) xchg shlb dec enter jl test adc sub inc sub cltd jns lods movsl mov aam fild aas cmp push mov mov (bad) std dec push rorl insb xor cmc (bad) (bad) pop repnz xor dec sbb jecxz sbb lea stos stos mov sub leave inc stos dec sbb add and mov cmp cld in int3 fisub bound xchg test sahf movsl mov jo dec in repnz stos add pop pop imull sar (bad) (bad) insb xor xor adc or xor imul ljmp out adc adc mov mov bound inc in mov or test jle hlt nop and std ss jnp int stos xchg jo lock cmp shrb add ljmp sbb das das mov mov mov rcll xor mov mov push push sbb fnop (bad) xor and xlat stc enter push xchg cld insl mov xchg lea sub cmp lahf cmp aas lods dec xor fisubrl (bad) jmp pop shll jmp out ljmp leave pop lahf xchg ds xlat roll dec popa out mov fsub sub (bad) pop lcall dec rcll adc jmp (bad) fcompl lods cmc mov mov sbb test cmpl mov sub icebp inc pusha daa inc lret cmp test fsts fdivrl xchg push mov sub lods lods call fisttpll and fstl jl jl mov test adc sbb insl in jp jb lds mov test sub pop sub mov sub or (bad) (bad) jecxz test xrelease std sbb daa lock ljmp out (bad) aas int int3 cmc mov xlat mov int3 mov pop loop xchg dec (bad) psllw jno push stos lret dec cmpl jns mov jg mov fiaddl std and fucomi shrl fwait popa xor fxch xchg mov cmp aaa call fdivrp mov (bad) arpl push jle mov stos push mov xor mov push sti mov in and data16 jl loope repnz popa push and or cmp jb xor mov cmpsb mov dec bound push popa push push daa mov sbb ja mov sbb sub inc fsubs movsl cmp (bad) pop test jge sub outsl mov int3 and push push inc lret mov cltd jmp jbe stos negb jbe jns cmpsl nop dec aas in outsb data16 jne inc jbe js imul dec cmp aaa mov je sbb push ljmp sub repz int3 mov ret out mov in mov xlat dec shrl pop lds jb iret xchg test or mov sub or mov and push sti ret call push test fdivrp cmc popa lahf push xchg into jb insl sti xor mov out xchg mov fucomip push pop outsl lods jmp int3 mov shrb mov ja ss jo outsb jmp cld mov xchg cwtl sarb cmp jl push xchg dec sbb loopne in std mov js sub mov xchg fwait dec adc aaa shlb popa push dec pop jns repz daa ljmp mov dec dec jle sbb jb adc jmp test jle fldcw int push xchg add mov int3 aam inc jnp xor mov push dec mov sbb inc dec inc pop aaa fwait push pop pushf sub rol testl mov stos (bad) hlt arpl (bad) cmpsb jmp push lcall lret inc pop cmovg cmpl (bad) pop mov ret dec jmp inc fcoml bound cmpsl test mov dec xor (bad) mov clc xor mov inc jb jnp inc jae pop in stos fnstcw push push mov mov out jmp push movb (bad) fs (bad) (bad) (bad) xor loope mov inc sbb xor pop mov xchg xchg call inc pushf sbb adc loopne pop pop in jns inc pop pop mov icebp inc call arpl xchg or insb inc (bad) lea dec aaa and lock pushf jno mov inc add (bad) es mov push cld inc rorl mov jmp lret dec adc pop fldl arpl inc adc scas lret pop je push xchg inc mov pop mov ss pop popf movsb pop stos mov icebp xchg pushl sbb or out mov inc out fcmovbe jp adc int3 push mov (bad) ja data16 es mov mov (bad) addb insb and addb cltd lods add sti jmp aaa cld aam mov xchg mov jns in add mov leave lahf xor fcmovnu sbbl (bad) data16 loop mov pop jg int3 or (bad) dec adc xchg mov lret cwtl and fwait imul cmc in test inc jns adc outsl inc (bad) cli stos (bad) push outsl mov sub test jnp xchg mov xchg mov cs fsts mov stos sbb cs into ror repz jmp sbb jne cmc jno into inc pop aas sti cmp xchg push icebp (bad) jmp push aas pop int3 clc jb fadd and sbb xor jmp popf sahf mov test jbe xchg xlat xchg pop (bad) push arpl lds movsl insb fwait enter jae xchg pop lahf mov xor aad clc in stc add stos pop imul sbb pop (bad) jne ret scas in addr16 cmc mov mov or jns addr16 gs ret sbb fimull push mov jo sub outsb mov aad fptan imul jecxz mov pusha mov icebp leave push mov pop adc mov dec xchg jmp inc test jmp mov movsb jae clc (bad) les nop jns sub lds (bad) mov adc lds dec jae jmp hlt xor inc cmpb aas mov imul xchg aas lods add loopne icebp mov lods aad ljmp push fisubl cs pusha cmpsl out jmp gs loope iret (bad) lods es pushf push jp hlt stc mov movsl sbb inc mov push xchg jle aaa cltd sub fnstsw xchg scas cmp (bad) bnd cmp loope mov sbb inc sbb mov xor (bad) clc enter into mov mov repnz (bad) ds hlt mov stos push bound lds cli add push sahf xor test push in cltd and jmp jbe sbb sarl lods call mov popa dec mov cmc mov pop outsb sbb cs xchg cmp ljmp loop mov repnz aad xor pop jno cmp fistpl loopne xchg jae out adc xlat or or add xor (bad) addr16 scas or mov mov fld1 sbb ja sarl test imul jg shll shr out fnop sub sbbl mov outsl int3 inc adc mov pop push xor ret cwtl jne mov in mov arpl mov add sbb fwait movsb add dec jo sbb lret inc movsl mov gs pop (bad) push jl je jae inc cld fnsave jp mov aad dec mov cwtl cmp scas adc mov mov cmc (bad) xchg and aaa insl or adc js mov nop mov fildl into inc jl cmp in mov call add lds sahf mov cmc gs loope ja ja popa xchg sub cli xchg dec add pop enter outsl outsb cmp mov lea pop repnz out shll dec sbb mov xlat mov mov aad sub push icebp inc push lcall adcl (bad) dec lret stos inc enter lods mov jne adcl sub sti lcall and loope push or cltd (bad) gs or (bad) push ficoml js dec cmp sbb test fwait inc ds mov dec pop fiadd into pop jmp push xchg jmp xor (bad) or int3 xor imul les imul pop mov (bad) lds adc or dec lcall and and rolb (bad) jg dec mov xchg std rclb mov (bad) xlat pop cltd mov jnp add stc lds mov out shrl dec or inc aam adc imull pop sub xchg imul cld xchg adc aad pop sahf ljmp in xor mov push loope pop sar push xchg xor push add les loopne iret xchg cli test int3 gs int dec test shrl imull js test jb sub insl or sbb push and mov and mov call push in bnd sub mov mov cli std mov arpl sub enter dec aaa sbb lcall in cmpsb mov in xor cmp mov inc int3 bound cld jns add xorb scas mov mov pushf fwait gs pop mov in mov dec (bad) adc lcall and lods (bad) pop ror mov stc pop sahf jp jg cmp mov mov out inc imul mov test mov mov push pop and std bound jl popa lods (bad) jne and test dec xor inc mov cmp xchg js xor rcrl ds test pop out dec jecxz es pop aaa icebp lods dec adc (bad) lock xchg xchg pop cmpsb lods sbb mov loopne and test aad pusha int je mov shl push nop inc fnop in cmp xor or (bad) leave mov mov xor jo mov (bad) lret outsb aad inc (bad) adc adc loop dec cmpsl push repz mov ja mov loopne aam scas fwait lahf ss lock pop sbb dec mov cmp lea popf mov mov iret or xchg mov mov mov mov fdivs outsl outsl les (bad) mov push cmp mov push mov insb sbb ds ljmp lds pop xchg adc out pushf into stos shrb imul enter popf das js stc (bad) xor xchg scas loop out fwait mov pop subl jbe ja or push cmp jno mov divb sbb call jno loopne lock sbb push push std jmp cli andl add iret and daa jnp push in sbb or test adc sub jb ret (bad) es jecxz js fimull dec push dec ss xor jmp imul mov xor jo mov mov pop cmp aas push xor in cltd fwait popa and rorl clc mov sub iret out pop jmp mov mov adc scas imul cmp fldcw sbb aas (bad) dec insb jnp xchg sub ljmp jmp jmp xchg mov (bad) lea (bad) lahf mov (bad) in push xchg ljmp scas lret out ljmp inc jle sbb push xchg (bad) negl sub ret cmpsl push ret outsl mov inc fdivr lcall mov pop and add daa and inc xchg (bad) sub mov in (bad) push into sti insb mov testb call pushf xchg adc mov xchg jae outsb jne es cmpsl js das mov xor jno mov fiaddl and lods push xchg dec cmp mov inc sub ss inc in and jnp adc sarb mov test pop or pop xchg xchg jne add data16 cmpsb sbb pop sub ror sub mov stos popf adc jle mov mov mov (bad) cmp fisttpll xor or outsb cs inc mov loop xchg inc mov movsb je,pt inc imul lods scas jmp ret scas pop xor sbb jp gs repnz loopw,pn fs stos fwait imul inc inc popf (bad) sti push cmp out pusha arpl push aam inc add loopne sub add sbb add add addr16 mov or (bad) push insb push lcall inc mov mov mov (bad) aad decl sahf lahf notb jmp inc inc js push fstpt fstps call jb loopne or pop sbb jg in xchg xlat fnstenv movsl and add ss pusha insl dec stc xor and inc mov (bad) test test out mov mov jne xor inc out arpl mov cld imul dec imul cmpsb imul int arpl xchg sub jecxz jmp movsb fsubs rorl cs cmp dec loop popf pop das dec int3 out ljmp scas sbb je (bad) sbb stc jb je out fs rep adc inc imul scas inc mov sub bound pop sub cmpsb xor xchg mov xchg fdivrp xor pop fmul push adc shufps dec add shr pop mov sub dec pop jb mov movsl out mov outsb aas lods cmp rolb dec pop incb mov push jno mov lret mov mov sbb jp ljmp imull push add jbe jecxz mov data16 dec insl arpl jl aaa jne testb mov cmp test jbe mov leave or ret sti (bad) rcrb lock fild enter ss lcall adc shrl xor jbe (bad) test jno movl push fsubrl xlat popa lock and xchg xor xor (bad) jmp cltd out mov xlat das xchg add hlt mov lret fiaddl lea inc and adc es or gs and push inc sub paddq xchg and or xchg sbb (bad) sbb fisubrl in ror faddp (bad) jl (bad) cmp fdiv lods jecxz sbb (bad) sti mov das jnp mov incb cli pop das je mov stc xor cmp and es (bad) push and cmp cmp imull les mov sbb bound ret js jmp mov cmp in pop shll dec pop mov cmp cmp ret adc pushw stos lods push clc jne sub adc xchg mov insl aam push add in and out jp imul mov and repnz movsl jl or pop fwait mulb mov jb out sbb shll mov stc mov mov jb and js inc mov push adc jnp pop and push insb jecxz jae push sub addb (bad) ficoml into mov sbb pushf in mov dec adc out sbb xchg lds fldenv push ss in sbb das mov enter xchg outsb ja xor jmp add dec jge dec ja lret fwait mov (bad) int addl or outsl add scas xlat imul inc fwait adc push dec cs pushf cmpsb insb inc cld ss dec push lcall daa inc popa test sahf mov jo pop lods push call mov (bad) (bad) lcall mov push mov cmp (bad) mov xchg add imul xchg push mov nop adcl movsb cs fsubl mov in aas sub repz pop sub add mov movsl out (bad) movsl dec push cmc inc (bad) mov movsb inc loop mov xlat cli pop xchg insl mov pop pushf jnp stos cmp jge dec mov mov out jb cltd out (bad) jmp push push dec insl mov or pop sarl sub push (bad) inc xor cmpsb in lock cmp leave or lret sbb std pop scas stos rorl cmpsl mov mov cmc push and push inc sbb stos mov enter stos mov repz jno (bad) and jg and cwtl mov les mov adcl (bad) imul push jge mov adc adc stc or xor jg cmpsl cmp pop dec sbb and repnz sub daa arpl mov mov mov fs mov mov push (bad) lock pusha cmp jmp (bad) mov xchg push lods adc or fistpll call cmpsb mov mov je mov mov pop pushl push pop addr16 imul and jmp jno xchg in loope mov ret (bad) jle mov xchg les test int pop cmp in ficomp lea and inc sbb aam pop gs loope lret ss clc pop mov shll sub sti test jae or or loope out popa pop xchg xor cmp call cltd cmp nop out ss mov push (bad) cmp jp sbb int3 enter lahf icebp mov xchg (bad) cld fnsave fs repnz jb insl pop cmp sub dec dec or pop mov adc movsl xor out xchg jns jmp pop pusha dec sarb arpl mov fisub adc mov insl (bad) sti lock xchg pushf cwtl mov jecxz xchg and or out jbe push xchg fstpl xchg sbb or jl mov lret pop mov mov pop lock std mov dec jb outsl add cmp rcpps scas pop popl test lea push xor mov in es cmp inc sub add movsl jbe (bad) sbb inc inc fcomi adc fisubl stos push adc jns xchg (bad) mov imul xchg sbb cmpl mov xor lahf mov push push dec std ret cli (bad) adc jg add cmpsl insl push pop or sub int3 outsl ds cmp test pop pop pop sahf test mov adc insb fcompl push or out push scas xor (bad) clc adc cs inc add stc test shlb jnp rorb lcall xchg lcall add push dec notb cltd and iret loop (bad) fldl sub push mov in cmpxchg imul not lock stc lods pop pop pushf stc adc popf pop adc dec or loope add (bad) std fdivl pushl mov sbb rorl push mov scas mov test adc in push sbb (bad) fcoml fiadd xor and arpl lret fdivp and lea dec scas adc shl xchg cmc or inc or jmp mov push and test aaa std fcmovu xchg mov cmpsl (bad) test push test sbb push (bad) aad std aaa aam push push insb leave xchg daa lea mov dec mov es inc mov jecxz sbbb scas dec inc iret push jne dec and clc stc test inc cmp fiadd inc cmp cltd loop dec scas aad insb mov (bad) lahf cmp rclb out dec repnz jne mov ficompl (bad) lahf jg add fcoms in mov rcr pop mov test (bad) sbb outsb xchg mov cmp push outsb (bad) inc mov fwait stos std cmpsb fwait sbb cli in fist outsb loope subl or jnp push mov (bad) fdivl sbb out js int3 ljmp sbb popa pop dec or fidivr repz xchg push xor add push mov bound insl mov mov stc and in inc mov jmp (bad) mov or out push jg es stos cmp scas outsb or push test adc pop xor ss mov jmp jmp fwait jle xor cmc frstor je pop push in push in pop mov fimull insl icebp fadds mov call xor cld shrb addr16 (bad) cmpsl inc fimull aas xchg out (bad) out rcll jecxz xchg bound fwait mov aam sbb inc pop and in je (bad) mov std jb mov outsl push xchg testl pop ret fmuls jne movsl xchg popa mov inc ljmp mov cli inc dec inc in mov inc xor push xchg cmp or incb les sub inc in jp popf xchg cs es adcb add pop (bad) jne pop jmp xor repz cltd cli adc cmp je movsl adc nop into imul xchg mov add psllq inc in cmpl jge mov cmpsl gs fs popf sbb adc test pop mov xchg out iret faddl (bad) jb sub add mov aad std mov jg nop repnz inc sub in or cs repz hlt addr16 in pop mov jb lcall fs inc dec push add or mov mov pop sar es gs jnp dec or and xchg idivl jbe lgs pop inc lcall fidivrl repz lds scas mov xor loopne lcall lock sub adc test jg push (bad) fs divl sbb repnz cmp sub iret leave (bad) jl add push in cmp movsl inc sbb and jne dec mov add clc daa push (bad) lcall iret add or js push xor cs xlat add jp int (bad) jmp cmp mov into enter inc std loope pop fcomps push lock (bad) test mov sub xchg fldcw xchg jecxz dec call dec mov cltd out mov out mov push scas and adc iret outsl jbe aaa adc shlb bound subb repnz js into mov ret inc mov outsl push push sub (bad) jle lds add pop dec jmp push mov jle repz adc test mov or pushf adc mov outsb sbb xchg in push int addl or jmp hlt decl pop std inc in ficoml ret push pushf dec and mov adc lock lods pop jbe cltd hlt push cmc into mov outsb test cs rorl ss push repz inc mov enter mov les loope sti sbb lret add pop fisubrl mov pop ret or lcall mov das stc inc or imul pop or pop fdivrp fildl sub push add or fwait sbb fldl enter ret sub and out jne push lea lret movsb enter (bad) cld xor popf xorl or mov test push outsb sbb xchg xchg push add cmp movsl inc mov pop jo xlat cmp aam addr16 js es mov mov std xchg dec lds scas cmpl push arpl rolb fucomip push pusha xchg insl push add lret dec clc js inc jae sub sbb (bad) sbb cmp sub ss cltd test fwait imul inc push and add push sub inc add pop push mov push xchg jp jbe mov add cmpsb push mov ret adc add mov jnp stos iret mov shrb addb cmpsl les or or popl jnp into dec into popf std and test lock jo push in out xchg orb lods fldenv ret xchg sub adc adc mov lds xchg jl sbb cmc bnd adc mov jno or outsl pop ret jle out push xchg add xor add and sti ss gs loopne push fsub dec sub xchg xor push or movzbl and sub and loope sbb lods or mov gs mov jmp sbbl sub addr16 mov aas cmp out mov xor and insl (bad) xor nop xor and cmp adc inc xorl test jnp rol mov lds mov aas pop daa cwtl cmp lods movsb scas sbb stos or mov insl cmpsb jb sub jl mov jge mov fidivrl cmpsb sub cli ficomp push xor ds rep cwtl (bad) imulb mov jne sar pop jecxz bound mov clc lahf pop lret fiaddl adc test pop or xor sbb xor push jns (bad) push push ja cmp fs or mov pop mov out clc push sbb sbb push inc cmp out jl cmp ret push cwtl jo cwtl xlat pop sub adc hlt or shll inc lods das fildl loopne movsb popa mov jg sbb shrb pop add push loope (bad) pop mov outsl xor dec push xor (bad) ret aaa enter imul lea (bad) in sti aaa and sar ret push sub inc sbb inc push jo imul rcll lret aad into xchg adc in cld jmp pop movsl inc mov xlat (bad) mov or and std jp mov cmpsb stos loopne (bad) ficom sbb outsb add mov fnstcw notl mov and push clc test cmpsl dec xor jmp inc push popf in xor jo loope sbb cltd mov jge movsb dec adc push addr16 adc hlt mov (bad) push je fwait ret jne mov ds or pop sub add ret cmp sub sub pop or cltd mov xchg inc mov add aam adc jg push mov xor pushf dec clc fldt cli (bad) stc aad and mov dec add adc lods inc inc sub jmp xor pop jns into out dec test fwait cwtl test jo sub mov dec push arpl and rorb enter nop jle add pushf out mov push (bad) cmpsl pop jo cmpsl fnstenv pop std dec aaa sbb mov jp (bad) xor stc fwait jo,pn and xlat mov xor rorl test shl repz xorl xchg push mov push push adc cmp mov loop loop repnz pop jmp in ljmp add push pusha int pusha mov cmp clc pop xchg and lods xchg jbe sub mov cmp scas xchg adc data16 jle add add xchg adc fisttp lret xlat int repnz fcomps (bad) jne lret pusha mov mov (bad) xchg ss mov cltd cmpb xchg hlt movsl pop sbb decl test pushf ds push daa mov push adc cwtl test add xchg not sarb cwtl and subl out lcall fs and jne mov insb mov jge or cmp mov (bad) xor fwait testb or add jae adc pusha cmp inc or pop outsb dec aam fsubrp inc call mov call (bad) fwait enter sub jl,pn pop clc pop and and mov addr16 sahf aam mov mov mov loopne jo sarb ss subb jb dec cvtpi2ps xchg mov push ja lcall jge cmp mov add and cmp push dec push jne in and cmp sub add xchg inc stos fistp movsl pop jbe cmc aaa arpl pop xchg push jbe out xor jno in cmpsl inc jmp xchg sub mov jb push xchg lret xor and out inc xor add adc in bound rolb mov cs cmp pop fsubr sbb mov andb mov (bad) jmp in or out xchg lds inc pop sbb push cmp data16 or inc or pop sbb xchg das lds mov movb jmp pop sbb int3 fld or loopne mov sub daa add mov mov (bad) jnp ret cmpsl flds movsb mov push addl loope lahf push or pop fimull fildl mov jbe insb dec xchg inc cmp fsubl nop mov mov and add inc xor ss xchg dec mov or sbb ja push pop push add jecxz outsl push lret add mov sbb repz mov fucomp mov xchg push clc hlt lret cmpl mov imul mov adc subl nop outsb adcl adc push scas inc adcb dec test rol dec fimul aaa and sbb ror cmp ret sahf cmc (bad) adc (bad) sub mov push jns or not imul add push mov ficoml ror addr16 mov push insl push bound inc sti out dec arpl inc sub sbb sbb fldt adc xor xor nop in out add inc mov push mov andb adc out dec js xor out stc cltd push ror popa xchg or (bad) mov xor insb pop mov inc xchg cltd (bad) pushf mov cmp lds icebp cmpsb xchg lods clc xor cmpsb movsb cltd fldt sbb call mov jne (bad) or je test inc std rclb xchg sub lret push aad ja (bad) mov lret aam xchg mov xchg cmp imul mov sti (bad) jmp jo jb dec fldcw xchg loope inc xlat (bad) mov or in and xlat bound mov jecxz je or pop inc outsb int3 in lahf ret lock ret mov push pop jecxz lret inc fwait xor test mov mov int xchg insl (bad) aaa fcomip sub cltd mov mov adc fldenv fucomi lods test xchg sahf insb fstps mov gs mov dec jno add cltd shr dec out aas je (bad) (bad) cmp lahf cli lea mov mov sbb and loopne inc test mov insl std stc push pop sub ja jne sub xlat adc pusha add sbb je in add ja sub sar add int3 movsl mov lret test mov test sti sahf cmp push adc sub dec popf out cmc aas in lea push push add cmc aad mov icebp mov jo adc fmull mov jo push out adc rorb ret insb push leave das flds cld dec fldcw aaa (bad) jmp stc xchg sub std mov std popa out mov in (bad) cmp enter sbbl cli (bad) jp pop add fmul loope xchg mov xchg jb xchg sti enter es pop popa mov jbe push leave mov (bad) (bad) sub repz shrl xlat jb cwtl fimul out sahf (bad) mov inc out cmp bound incl xchg ja fcomp fstpt lea (bad) push loope inc xchg js xlat mov in pop rol (bad) in cld mov nop xor cld pop mov inc nop or lret jecxz fidivl andl pop xchg stc mov lret rorb cld mov mov call mov aam push and xor cli mov lea mov xor mov fsubp repz inc les inc sar cs call (bad) pop adc xor pop ljmp mov jnp push clc xor mov inc fsubs pmuludq mov jb add add shll fistp sub push fimul push stos movsb iret sub (bad) inc inc movsb mov push inc gs fimull add lods test push nop or (bad) aaa insl sub and mov js pop rolb mov mov je stos lds aad push cs rorb movsb pushf rcr or lds sbb and inc and (bad) call push push dec mov cli loopne divb in fnstsw xlat add adc lods leave adc mov or or push in xchg cmpsb mov mov aam xlat xchg inc sahf sub mov sbb xor movsl add out insl jg insb imul es sub mov sbb movsb (bad) in add jle xor jno fildl xchg mov repz je sub data16 imul lahf shrl adc ret cmp push imul mov clc and setp fild inc xchg push addr16 call das mov out sub movsb jbe fwait xchg out scas sbb jns pop shrd jnp leave (bad) es adc out and sbb fsubr cmp ja sub cmpsl pop cmp mov ds xchg mov dec mov lods int cmp pop adc fsubl lods fsubl loop mov sub lahf loope lcall movsb push bound mov mov sbb mov push lahf pop xorb movsl lahf mov xor fs pop hlt pop mov xchg cmp cli push xchg fiadd sub shr pop jg data16 mov in sbb xchg insb in push sbb jmp cmp xchg imul dec stos sarw cld or iret lret jno sbb dec fsqrt imul dec sub gs rclb mov pusha into leave rcl mov pusha mov loope mov jmp pop in rcrb rcr fcompl push sti rorb xlat dec jne fwait icebp out icebp lahf jle mov jmp inc mov sub sbb adc adcl (bad) sub cli jp (bad) push ds ror int xor adc or inc dec mov or and popf sbb jge mov mov (bad) xchg (bad) cli mov push dec mov cld inc es repnz bound sbb movsb add iret add test mov ucomiss push pop or add jns pop mov sub cli test or fisttp pop js fild rclb (bad) fsubr and jne pop push ljmp stos ret cmp xchg xchg addr16 pop sub ret scas jne ss jnp dec add lods nop daa cld jo icebp test pmulhw cmc fldt sub jns push scas sti test and and fs ljmp cli cmpsl dec cmp sbb inc outsl sbb or xchg shr out int3 ss add test aad clc sbbb adc arpl xor mov aaa xchg cmp push lock hlt ret xchg (bad) dec sahf insb sub cmp fmul pushf ljmp mov test imul pop addr16 lret pop sub sbb (bad) or pop fld push addr16 xchg ucomiss test xchg mov dec rcrl es xor xor jo dec push xchg mov fwait sub jbe outsl int3 dec insb cmp repnz movsl test enter cld inc rcll in push dec and lea js jle lcall sbb aam lds jno shll and imul mov or xor stos aam push inc xchg add sahf test test inc popf inc out (bad) clc imul mov fnstsw repnz xor xchg outsl push fisttpl jmp and inc jnp bound cs scas sub insb nop mov and lea popl lds bswap xor cs mov mov ljmp imul out cmp cmpsl lea clc es fsts insl pop fcoms jl ret pop xchg jbe adc add sbb mov and mov addr16 mov popa aad sbb lds pop (bad) lret ret inc andb scas leave addr16 xlat subb gs mov adc xchg pusha nop dec scas xchg jns pop mov scas nop dec dec jle mov push pop (bad) fs cmp mov dec ja mov ret mov mov (bad) daa push jnp insb xchg xchg fnstenv lds mov icebp (bad) lods ljmp xor insb int3 idivl dec shrb clc xchg adc adc mov icebp fimull fldl mov push popa sahf dec push (bad) dec cli adc ret sahf xchg push icebp mov mov mov and sbbl jge xor call dec pop sub out jo test imul dec and jecxz cmp rorb jb lock lds inc sub push imul cmc add jl pop mov sub add dec call sub aaa inc and inc adc loopne lock push int3 xchg inc fwait mov push lods lock xchg adc cmc cmpsb shr getsec push lock (bad) or and es cli sub fmuls jg xchg jb movl mov xchg xchg jno rclb add cmp inc outsb leave addr16 (bad) inc aas movb fdivp sbbl out inc pop push xchg xor push (bad) mov push add neg (bad) xchg leave test dec sti fsubs orb jl push cmp mov sbb adc inc pop ds leave stos mov mov andl dec fcomp jmp mov xlat leave push or pop dec stc aad outsb daa loope mov pop pop fwait sub fcoml (bad) enter imul out adc insb sub mov daa inc cmovs dec pop fild cmpsb mov jo jmp pushf dec xchg cmpl pop stos push into xchg jg ret inc fsubrl (bad) dec cmp pop push test jle stos aas adc mov mov jne lods mov cli mov (bad) mov imul dec mov sub js jecxz mov loop insb xor fldl or ret xor in inc xor lea cs jecxz inc shrl (bad) cs mov pop sbb rcll xchg push scas mov add push loopne scas (bad) jl or inc inc push inc or iret mov add shrl mov mov (bad) out (bad) mov push loop push aaa mov stos and nop sbb mov xor mov mov cmp add (bad) add pop pop cmove lods or mov shlb in nop loopne jns adc fdivrl lods mov cli pushf aaa add (bad) jns xchg fistpll addr16 addr16 xchg push mov jmp aas adc mov sbb in add rorl gs or cli and scas leave jl data16 in mov dec xor pop fidivr add fistpl addr16 dec xor mov mov sbb xchg mov mov add cltd add mov mov add or push mov aaa jp les pusha rcl loopne or xor mov lcall or fdivrl pop aad sbb push (bad) imul enter (bad) mov fwait sti cli xchg out cltd fwait mov sub jo cmp lret repnz (bad) sub mov sub or pop or push shlb dec popf (bad) xchg stos cld in repnz mov out mov xchg loopne lret bound cli and js jg ds dec xor (bad) dec rcr andb jo pop inc call push fimull or adc xchg iret push lret xchg rclb inc into outsl mov (bad) clc movsl ds rorb pop and adc mov jl jne imul cltd sub xlat sub push inc xchg imul mov jmp push cmp mov sub dec adc addr16 aas xchg dec push hlt pop xchg insl inc mov movsl add adc stos es rorl call shll sbb adc pop fisttpl insb mov sub and pop pop fcmovnb jb notl mov and insb test shll int push daa call push jmp push cli jge jne sub hlt inc push (bad) ljmp mov imul or jl lret das mov xor in sahf cmp data16 pop push jno mov and xor jno xchg call inc adc xchg and xor (bad) pop ret insb jge mov jp cmpsb loop sbb es jl fimull aaa stc daa cmp mov push mov sub xor in fstpl sbb inc inc and or push neg fcompl stc jo and mov and lods aam loope mov stc pop idivb cmp fimull cld inc add (bad) or (bad) xchg jp jae in mov dec add inc inc mov mov negl (bad) adc sar dec subl inc jns pop rorb imul xlat xor jne mov in xchg mov mov outsb mov pop (bad) xor cmp jo,pn mov inc pop jb insl fistpll mov xchg ret aam popa ret jp stc aad cmp push and enter add pushf enter cli adc leave mov xor fldenv fldcw pop lea fcmove push or and nop mov push clc mov clc and aad or outsb rcrb (bad) (bad) push or (bad) xor xchg fldl sahf mov js stos pop jmp pop (bad) outsl lret out sub xchg mov loop mov and test cmpsl ljmp pop mov xchg (bad) lcall mov movsl cwtl stos push or dec sbb xchg les popa test stos insb out push pop out jle pop cltd out repnz add xor push xor fmul push fnstsw fstps push push mov daa adcl into (bad) aam fidivrl (bad) in jb add add xor xchg cmp (bad) xor dec stos jnp and popf push pushf pop stos push xor jecxz jge inc mov bnd scas xchg ljmp push and test sbb jb sbb lahf inc add adc leave (bad) aas pop xor fmuls fild dec lds mov sub push dec adc divb test jg cwtl (bad) sub pop fistpl aam divb add fmuls lea pop add or stos aaa sub fwait pop cmp cmp push cmp or cmc sub nop inc push js adc aad rcrb xor clc pop arpl inc out lea sahf xchg inc in imul pop jl pop push xor sub out cli add pop xchg call pop enter dec stos comiss add push int3 push sub pop mov jns pop arpl movsl mov out inc mov sub inc ss mov inc xchg in push or mov test fisubl pop jge xchg mov cmpsb adc dec adc jns dec mov (bad) cmc dec sarb pop iret adc loopne inc stos jns xor dec xlat popa xchg movsb movsb jo add out xor cmpsl fistpll out push bnd sub stc adc arpl test pop add fdivl jecxz jbe and inc test mov cmp or jne push mov lock out lea ss pop jecxz sub adc ss dec (bad) cmp mov add jecxz sbb sbb gs inc imul or mov pop pop (bad) popa push dec into cli add pushf sub dec cmp push mov adc loopne mov push inc dec sub fsubs mov pop sbb xchg rcr popa add lock mov fnop pop mov adc repnz adc sub ret pop xchg xchg and cmp popl popa xchg or stos sub cmp mov or push sub dec cmpsb cmpsl sbb xor mov sub xor jl loop clc jno cld test je sub jns inc push xchg cmpsb fbstp popa icebp or pop mov aaa test sahf jbe jecxz cmpsb movsl popa fld stc test push cli das call loop ljmp dec mov (bad) mov inc sarb in lods mov xchg movhps in xor jg add pop mov inc pop sub adc sbb popf sub stos test jae call or push call movsl roll fistp cmpsb repz jecxz inc or cwtl (bad) pop addl nop sub ret xchg sbb enter mov xchg add sbb dec sub push loope daa xchg pop cld ret add lods mov jl pop jle movsb mov bnd sub pop inc sub sahf rcl sbb out sbb fdivs ja jne pop mov xor sbb in lcall or mov je test adc xor (bad) (bad) hlt in xchg inc stos mov hlt pop addr16 push gs jns lea nop jae dec mov and and and js and xchg or repnz std je jb pop test pop push xor push fldcw cmc jns xor inc lcall mov mov stos loope or movsl loopne push jle xor inc lahf mov mov cmp and push insl inc je pop add test in jge addr16 jl aaa jmp lods xor das jbe std lahf les daa ds adc xor add lods cmp push scas jae dec (bad) cmp sub inc aam xchg ret repnz lods sbb fist imul ja addr16 mov mov jb lret popl xor xchg xor testb (bad) cmp mov or mov add xor outsb (bad) and cmp outsl xchg ret pushf cltd gs dec cmp mov nop inc pop cwtl mov clc lods xchg test push inc ja inc push aam repnz dec loop into jb inc jae mov push fnop mov add jo mov mov mov lcall outsl jno xchg or dec and insl gs xchg lcall and jecxz stos pop mov add and mov adc (bad) repz adc xchg pusha inc aas mov in aad sahf and jmp rolb jp mov lods jle jb and jns ret ret sbb in fldt dec dec jns sub arpl or fldenv jb adc insb loop hlt popa xlat sbb jl in test lahf dec fcompl jo into in inc mov out cmp test push lret push jae adc cld fcomi scas jb push and ja scas cwtl repnz cmp mov out push mov loopne popa or sbb jo xor stc stos mov lea ljmp or and call lret xor dec shll push fstl call ds int3 jge pop fdivrs aam arpl xchg inc ljmp mov arpl aas subl es xchg lret (bad) hlt bound fldcw jg pop test test fstpt jecxz insl iret sbbb mov mov jae ss or or cmpl sub scas arpl pop sbb cmp adc sub call mov sbb push lret test aam inc cmp add jo fs movsl imul fstl jl leave fwait xchg mov test loopne ror pop imul out es das sbb push les cwtl dec in out dec and daa aaa add mov sub int or popf adc xchg repnz sub lods xchg pop jae jmp (bad) dec sahf push mov mov std cltd add jmp leave movsb fldln2 mov and adc call mov xchg push jo fwait enter mov jo sub mov inc adc les aas in lock fucomi mov mov mov out cmp ror xor xchg pop jno bnd jp cwtl mov js xor addr16 sub nop inc call mov xchg inc and mov adc ljmp cltd xor mov sub (bad) insl out out jp jle jne in repz dec in aaa inc and std shrb mov cmp int3 jg pop xchg sub cmpsb inc cmpsl xor cmp pop jp dec daa mov jb cld shll out jo lock out mov rclb push cmp fnsave mov aam lods call stc or dec push xchg loop shrb mov (bad) test mov outsl sbb mov push inc mov push out movsl xor jp mov popf inc leave bound jl xchg sub adc inc es sub sahf jns sub jo mov loop or repz outsb inc xlat out into xchg hlt sub mov inc sbb arpl push inc std shll (bad) out call scas test shll gs xor (bad) repz pop pop bound jg or roll pop sbb cmc add sub cwtl sub iret mov dec jne inc mov push das mov stos or inc and and mov (bad) int cmp push fistl sbb jg fdivrs lods jbe or aas jmp xor adc xor xor in jl pusha dec sbb mov pop inc jmp jbe (bad) xor xor pusha adc pop push add imul pop sbb or je push fsubr lock orl fwait xchg jecxz add or xchg arpl mov push mov push fist (bad) ficom cmp rol js (bad) ja aam jo cmp aaa test lret mov xchg out in je out in jge adc inc pop data16 sbb fs cmp fldenv movsl pop push les pop xchg xchg pop inc cltd push mov sbb jns clc stos sbb stos jns out dec lock inc cmc pop fwait fwait les push adc scas sarb inc popa (bad) and (bad) cmp scas addr16 fwait stos inc lea ds mov adc shrl cmc pusha lods dec jb js (bad) xor inc movl inc int aas lea aaa sub or pop int3 pop sahf out and lahf jbe sbb shl jle cmp xchg stc data16 pop adc scas mov add fisttpll pushf (bad) roll sar pop enter (bad) cmp or mov cmp push fs and test inc repz inc xchg mov lahf icebp leave jecxz loopne (bad) and xchg and ret scas mov mov inc dec in mov sti (bad) ja inc lods movsl push pop pushf push ljmp dec fdivrl add xchg je jbe (bad) je add jno outsb jg jbe femms dec movsl idivl nop push pop adc lahf sbb (bad) dec and lcall push and fistp outsl popa popf sbb pop out cmp mov inc dec mov xor mov nop mov addl fisttp xor mov xor outsb mov sti pusha shr std pop mov cmp pusha sbb fwait push fcomps dec xchg fidivr lds sbb shlb add adc rcll push push xor cmpsl xor and cmpl cli dec icebp and jbe dec popf xchg (bad) in jno repnz push mov jg jecxz sub mov jno lods xor jno and mov (bad) (bad) fnstsw repz mov shr imul push stc data16 gs je fdivrl inc movq or mov enter ret cmpsl fisub add ret cmp test pop popf icebp dec cmp mov sub add mov cld enter outsl xchg push mov imul adc sbb sbb int and jle inc mov int stc dec xchg or mov in aas (bad) das (bad) push jae icebp push mov sub mov stos adcl mov das and cmp sbb sbb in clc mov push in cmc out mov mov js iret dec and rep imul lods pop (bad) js add dec jp cld fsubl jmp add pop mov push push fcmovne pop add sti xchg sbb mov aaa in and xchg shlb repnz cs mov arpl mov or aad cwtl je loopne mov imul loopne shrl pop inc stos loopne insb repz rorl movsl and gs enter sub cmp clc xchg mov cmpsb in fild or es test fnop xor fidiv pop leave adc lods mov repnz xorl adc mov mov and cli add neg jbe jne sbb imul add fistpll inc movnti imul nop mov jecxz inc sub add cmpsl pop mov dec test rcl or (bad) sbb mov lea adc gs cld (bad) add jl (bad) loope sbb xchg (bad) xor adc sbb jb jl push mov cli loope pop adc pop cmp mov add int3 push dec aaa inc cltd xchg test and (bad) (bad) cmp fiaddl or pop fstpt xchg or sahf pop push fidivl jle add jle jp xchg sub mov insb inc cld cmp adc add xlat aam sbb (bad) iret jne mov (bad) aas rcl ljmp cmpl enter fisttpl mov add cmc cmpsl out pop xor mov ljmp mov clc push cwtl xchg mov adc test pop adc inc push jmp lock cmp inc fs (bad) xchg repz mov mov in jae outsb push (bad) inc cld sarl jp inc nop pop dec pop lahf iret xlat (bad) mov xor pop push inc xor dec scas push mov mov inc sbb add jmp out fcmovb and xchg int3 mov add cmp mov leave incb and dec adc call pop (bad) je xor xor lock icebp adc fstps outsl (bad) sub sub imul (bad) or xchg adcl pop fisttp nop (bad) push test or out cli pop std bound dec aaa dec fsubr and jo sbb push divl push inc test jmp push lods push pop xchg xchg and push adc cmpsb nop sbb popa and sti inc (bad) movsl sub mov out cli inc out lret sarb jmp adc rcll les ret (bad) mov (bad) jne cmp fs mov cmp sub pop js push pop adc mulb clc fimull movsl repz push lret aad jne adc inc cmc and jae mov arpl jnp adc movsl mov xor popf inc lahf insb aaa fldcw or mov icebp mov mov enter cmc mov testb xchg dec xchg test ficompl xchg (bad) sbb xor jne mov mov aad sub pop idiv and jg xchg jl ja mov in lock jle cli jo imul imul stos rcll movsb mov add jne adc std into inc mov dec ret mov xchg push aas ja aaa xchg inc test in jae imull jmp adc mov push repz pop xchg jno int3 out scas cmp sbb enter inc addr16 xchg push lds mov cli pop inc int3 imul dec or mov fisttpl sub lods cmp (bad) adc mov adc mov scas mov push cs add mov adc xor fiaddl fimul mov arpl pop xchg out jmp and test in es pop sbb jnp cmp mov stc mov out mov push (bad) ljmp pusha pop int3 pop sti pop or cmp out inc sti pop cmc cld mov xchg lock pop cmp ficoml jnp mov aad inc (bad) mov mov inc das add pop push mov or dec rcrl inc mov arpl and in mov inc adc sarl pop adc es insl inc push loope addl lods scas lock jb or ret mov mov and xchg popa lret mov xchg jg js jp adc les enter push dec inc mov push shrb sub xchg mov mov jecxz push enter int test push cmc out decl icebp or fldl popa addr16 lahf int mov xchg fwait outsl xor ret aaa jb adc sbb sbb cltd mov ret cmpl stos add dec test inc lods dec dec je data16 in ret push fdivr push lea scas push out push mov test jns dec scas pop jl cmp out add dec lock sbb iret loop shlb gs scas mov lods fstpl mov adcb (bad) movb test jp repz data16 inc or push cmpsb mov pusha pop adc push imul addr16 bound daa addr16 jb push es ja mov push movsl inc sub inc cmp fisubrl pop jo fwait jno leave inc imul xchg inc out add inc sbb inc lds fdivrs push jp aaa inc push mov cmp cmp mov xor mov mov movl (bad) out out sbb xchg imul out fsubl xor inc mov loop sbb mov or xchg in push jo jae add cld icebp push lds mov (bad) jne js mov mov in xchg adc and inc and push js dec dec imull gs jb stos or repnz pop cmp lret lret cmp cmpl aas cli adc cmp int fmull (bad) sub outsb insb hlt loop or leave lret and jmp loope sub cmp add fsubrl setae fmull leave sub aas imul loopne leave aas (bad) insl xchg add cmc mov sub or sub push push ja mov mov mov loopne out jb sets fdivs (bad) negb call out push (bad) or jns cmp stos or aam and (bad) mov push test xchg fidivrl ret scas jle loope (bad) mov fwait gs mov xchg mov lods xor lcall sub dec cli leave jge inc jns fs xchg mov dec jns addr16 adc dec (bad) aas push add cmp fsubl dec cli daa dec or jge aam cmpsl leave imul mov test in dec (bad) push jns addl out lea ffree (bad) push jae imul push je clc or fwait ret mov stos mov scas pusha cmpsl repz cwtl js push cwtl fiaddl pop dec pop push fwait hlt or inc je addr16 cltd push push push cmp lret mov lret lcall daa into les inc cld mov mov clc mov in (bad) jnp int or push (bad) xor pop inc call das (bad) xchg sbb mov leave pushf fcmovnb pop mov mov aad cmc imul lods iret jnp std dec (bad) (bad) dec into and inc add cmpsl pushf sub (bad) mov cmp fmull lock daa out cmp loop jnp xor loope movsb add (bad) sub fstpt mov lahf push lret xor xchg movsl loopne mov cmp outsl andl jecxz xor sahf push dec cmp mov jg test fidivrl xchg adc xchg fisttp mov or hlt dec cli mov fwait movsl sub les jno rorb jmp je pop iret push dec lret or pop mov xchg in adc ficom and adc jo cmp xchg aam (bad) xchg xchg adc and cmp pop or leave aam scas and inc sub mov xchg mov adc test push add sub adc xchg movsl jae mov bound in xor dec sub inc xor mov push xor xchg xor mov xchg jecxz,pt add lea icebp (bad) push or xchg or lcall adc fs sub pop outsl ss pop push pop aas xor imul ljmp fidivr pop adc test faddl add lods and (bad) ss xor andl lahf jecxz inc test in xlat fcompl sbb jnp cld xchg movsb jp add pop jo jne outsb popf insl stc mov adc test inc sub cmp jmp into test add jno jp cmpsb call sub daa lods mov inc dec mov dec cmp add xchg repnz cmp out push mov (bad) push (bad) xchg sub xchg pop jmp mov mov decl mov shr loopnew mov push rcr pop out lea sub or jns lods cmpsb cmp clc inc insl push enter mov or in pop jmp pop and add mov (bad) (bad) aaa mov fnstenv push jb cmpsl or or push aaa cmp dec xchg pushf stos decb add and stos es dec dec push xchg cld es mov pop cmpsl repnz movsl push fwait leave pop pop out idivb add cwtl mov sbb sub push xor stc aaa loop pop loope out add (bad) (bad) sahf jp dec daa sar lods xor fptan sub test subl dec push xlat arpl movsb mov push andl cmpsb mov fbstp (bad) lea into sub xchg insl arpl pop cmp xor and push aad xor or pushf mov inc push sub les xchg fwait xchg dec jb mov int3 loopne dec cmp push mov mov inc movsl lds repnz enter insb movsl popf jle mov xchg pop out xchg mov dec inc dec mov mov incb jle adcb fneni(8087 xchg cmp insb out stos push cltd sbb fcoms movsl xor subb jecxz inc je punpckhbw xor pop push movsl pop mov aam push jle xlat cmc xchg push (bad) andb and imul and mov sbb rcl ret stc push inc push pop fwait dec jmp jmp jecxz enter or or mov (bad) xchg call or add mov test mov shll inc pop ret jbe stos inc dec xor mov imul (bad) popw ficompl mov ficoml push mov cltd jo leave adc sub mov adc call mov inc adc icebp bswap sti push ljmp and (bad) out int3 inc or lea (bad) sbb fcmovnu xchg out fwait mov sbb jle mov jne and leave push popf pop and mov in incl hlt gs addb jno scas jae movsl sar hlt imul cld cs and and loopne das mov fwait int es aas xor in inc push xchg dec mov push in sub jo or sti in enter nop sbb mov repz cmp xchg mov push (bad) and ret in cmp not das pop jb and xchg mov imul jmp inc icebp sub std dec dec loop popa dec test imul in stos lret cmp or fstpt mov mov adcl pop (bad) dec test and js sbb ljmp mov mov xor pop nop jns outsl outsl dec xlat xchg mov lahf sub ljmp add fxch in jg adc mov mov mov repnz lret pop scas pop jmp ds mov push ss sbb dec ja dec mov (bad) out or mov out mov jecxz xchg leave in dec idivb ja addb sbb jo sub mov out repz (bad) loope icebp out repz jno mov mov stos xlat add je,pt push xchg pop in push ret sbb lcall (bad) andl aad or xchg sbb das jnp inc sbb push dec cmp xchg jl cmp sub enter lods setp adc fisttpl jl mov scas push jnp dec sub stos pop rolb pushf add jg stc jg mov add leave inc cmpsb add sub rol cmp notl insb adc adc scas xchg int stc orl xchg outsl rcr lock pop cmp enter pop adc push testb jl and cmpsl aas repz leave lods fldl loope cmp adc ds cmpsl cmp pusha fstps and cmp into push imul roll fcoml mov (bad) mov data16 inc stos mov jecxz (bad) mov ljmp idivl and pushf sbb add inc xor int3 jg mov dec push aam adc pop inc cmp and fisubrl popa call in int xchg lods inc dec fildll enter jmp addb fs cmpsb ja ljmp hlt add aam dec dec (bad) mov scas add fwait test pusha pop lahf pop add das adc mov mov adc xchg jne mov inc outsb mov adc lods or sub mov iret jae rcrb mov jne sti ret mov cs xchg inc lods enter lock pop vmovapd adc test cs sub test movsl bsf dec cmpsl mov cld imul lret pop in aas add (bad) out inc mov and push mov insl dec pop mov rol rcll jge leave dec cmp pop lock mov rcrb repz ds xchg mov sbb push mov ret add xchg into testl gs jmp stc xchg pop add sub cmpsb je js ret push fisubrl (bad) jle dec jp pop adc dec int sahf loopne cmpsb mov ss out jb in mov push popf adc dec insb dec aad daa xor push fs and xchg jns mov insb push (bad) and sahf stc mov or test std fmulp sub addr16 mov cmp clc out outsb jns xor lahf adc fidivl push mov xchg xchg clc lea xor stos (bad) int push mov cmp je stos add mov jecxz pop test mov sti sbb mov xchg jmp (bad) adc mov sub pop int movsl int jno mov popf mov mov outsb pusha xchg inc movsb hlt dec dec les jbe clc or inc mov adc mov int3 pop outsl popa lods (bad) sub mov call pop jbe sbbb fist mov xchg inc lcall mov cmp fdiv frstor add add mov inc cmp psadbw push pop arpl (bad) pop xor out js add inc push mov pusha jp addr16 iret roll jle test adc into scas mov push pop jno iret (bad) or mov push add inc and ljmp aas shr (bad) inc xchg sarb mov adc enter and lea lahf pmulhw xor sbb imul xchg (bad) cmp jecxz xor jns mov rolb push mov inc loopne test inc int3 addr16 jae test add fwait mov stc jbe and fsubr push imul cmpsb mov mov add mov push inc pop aad push pop mov movsb sbb hlt stos xchg cli mov jno (bad) mov xlat jl pop clc outsb dec rcrb push xchg popf in push push popa pusha fwait dec xchg sub add dec (bad) jae mov mov (bad) push mov xchg add push adc in jge push xor add ljmp shlb sbb rorl lods dec cmp mov jno pop cmp jo and inc mov or in imul or imul fdivl cmp daa push dec movb pop inc ss xor nop push stos arpl push mov lods and xchg out xchg mov mov stos adc loopne,pt cmp lret inc decb mov xchg inc mov lahf std cmc fldt add (bad) xor mov stos std sub xchg popl dec jno gs mov sbb pop or pop mov hlt (bad) loopne push push subl insl pop add xchg arpl mov (bad) jb test pop lahf xchg inc xor jmp dec loopne lcall aam mov or cmpb int3 in es imul mov mov daa push jne ds daa xor repnz xchg (bad) jmp xorl in jnp lcall push mov jmp cmp mov jg and pushf pop (bad) xchg and ja mov loope xchg fcom rorl mov mov inc lds inc loope cmc insl pop xchg mov add dec negb mov push mov jecxz mov push (bad) or or cmp inc mov xchg adc pushf mov fs inc and enter in inc in jecxz add popa popf rcll pop xchg repnz fadd pop (bad) cmpsl mov cld adc roll cmp test mov xchg or ds pop nop mov repnz popa sub adc add dec pop inc cmpsb ror add (bad) je dec push std rorl xor push dec es xor adc mov (bad) or movsb xchg or ds mov adc adc push out shr lret fs (bad) (bad) xchg dec scas and sub pop cmp cmp mov jbe dec xchg adc mov out or mov push jbe lahf xchg mov and mov dec std cmp pop mov sbb pop decb es sub rcl or jmp add and cmp pop jmp outsb popa rorl clc ljmp std imull lds mov scas into flds (bad) and mov adcl ret jae movsb adc loope or add test pop popf movsl sub pop sti lds jbe pop fwait pop (bad) dec or mov xchg das cmpsb std mov lahf js mov or mov or (bad) and mov fxch mov sbb mov add push aam xor push daa inc sub pop xor fs sbb in pushl test insb jmp cwtl aad gs imul icebp js mov or loopne imul push cmpsb xchg and hlt inc sahf imul lret xor adc insl xchg jecxz test sbb dec jns xchg and das sub sti or mov adc gs add pop mov xchg xor jbe mov push movsl mov popf push inc (bad) add test int3 jne pop stc cld mov xchg insl mov lods pop cld fcmovu out xor inc or add or add xor adc jne fstl out mov xlat mov mov push jmp mov subl mov pop jae xchg imul popa idivl xorl ficompl shl sti sub xchg xor push push stos inc add aam popf mov mov sti in das lods stos sahf mov lcall or (bad) mov pop jno jns push clc loop das cltd movsl fs sti xchg jp pop adc sbb rolb (bad) dec movsb adc repz out mov rcl cmovl sub push lcall adc fs add pop sub stos arpl cli pushf loope and idivb int push or loop inc jbe (bad) leave in stos ljmp dec mov mov inc mov jnp lea daa jle jbe sub mov fsts xor jb scas or insl mov xor sahf xchg jns js es xor cmp movsb sbb pop and pop sbb test dec mov jnp ljmp cs inc xchg or and add (bad) mov mov push cmp mov adc ret xor xchg cld mov sub jg jle jnp ret ss add daa das cs loope bswap inc jns cmp sub dec shl cli push (bad) dec pop cwtl xchg dec (bad) push mov add daa fildll xor mov xchg mov dec and sbb cld inc ljmp lcall and repz mov push sub imul jmp xchg loop adc mov mov sbb into sub xor repz pushf in pop mov sbb mov movsl cmpsb sbb cmp popa xor xchg (bad) jb sbb aas jg int les mov dec jle adc aad mov push hlt rol fs push icebp out lock repnz lock adc mov (bad) stc jae cltd gs jnp mov dec add mov sub mov bound inc ljmp les adc mov and dec js push fwait rorb or sub adc popa add lock lds stos jae jp ret lds pop data16 (bad) dec adc sbb mov pop dec xor pusha sbb jmp js notb dec cmc xchg ljmp mov jne xchg push jecxz lahf or or es in cmp jmp jb sbb fimul sbb loop sbb (bad) mov mov cmpb pop jle (bad) std mov ja cltd cmp mov inc scas sahf xor pop ds xor xor shrl or xor and cmp shlb and push xor xlat lods popa movsl icebp push out jo daa movsb bound mov jle movsl sbb push stos and sti adc adc lea inc testl repz icebp aam scas (bad) ss push clc outsl add adc idivb cmp xchg dec sub pop push ljmp mov jg gs dec (bad) push push ficom aam std (bad) or gs out sbb lods and cwtl dec outsl sub sbb mov or fcos inc sbb lret sbb pop aas push and mov (bad) test and pop inc cli mov jb loop inc push jno in dec int3 dec (bad) test sbb dec push pop add out subb shr xor icebp push outsb push sub jno inc xchg repnz xor lcall inc into addb mov popa dec mov jl mov orl enter loop jl dec jmp cmp mov mov and ror es dec dec mov jg push inc stos xchg adc dec outsl cmpsl sbb lcall and mov xor mov pop aad cmp cmpsb sbb jle lods pop dec push (bad) xor push or addr16 movsb cli push je sbb and adc adc rolb into jmp lds push repnz int3 add and fsubrs cmp cmc mov int3 inc inc mov insb sub push adc mov mov xchg mov fistpll and pop sar jle fwait pop sbb xor cmp out adc cmp jmp pushf nop and js outsb fnstenv pop mov push fiaddl not btr dec icebp cmpsl pop aas scas test je jb rol dec add mov (bad) xor xor pushf lret jmp hlt (bad) xor inc sbb es insl jo jo mov loop lahf mov pop add cli (bad) in icebp js into adc insb jns nop adc insl add lods cld dec je ja adc inc bound dec mov loopne mov mov (bad) hlt ficoml xchg add lret (bad) outsb mov imul xchg cld inc sbb fistp icebp push sub jg ja and push rcrl sahf and sub inc dec cmpsl and (bad) pop push stos mov aam nop mov cmp fmul je add cmp mov push cmp jo or ror sub cltd movsl or mov int or lret lcall adc sub outsb xchg push dec cmc sub xchg rclb jb paddq movsl ja dec arpl (bad) out lret mov jb add lods fidiv cltd in ret mov mov cmp daa jbe xchg aas ret int3 fnstenv test or gs add xchg sti sub rorl add sub cmp push (bad) fcompl outsl push jle insl inc pop pop insl fnstcw sti mov or sub add in xchg jl sub movsl fdivrp mov stos lahf sub arpl aas fs lock out scas fisttp jg mov stc scas mov addr16 sar rcr je sbb cmpsb push pop lcall mov dec test add out xor adc mov adc adc sub cmp inc dec fxch hlt push aam push xchg pop fstl outsb or and push or loope js add pushfw jne loop xchg repz scas aas push push add ds dec mov push cmp push cmp cwtl dec out test daa mov mov push (bad) xlat push mov out addl push pop jb xor jae test (bad) aaa (bad) test mov (bad) adc nop pop jne mov jo out xor fcomps imull ljmp or ss cmpsb sub stos sar int add (bad) cs cmpsl scas stc jmp adc lea mov mov and pop xchg aad push arpl dec pop jle inc sub js in jmp jge sbb gs xchg adc (bad) repz shll mov cmp jae jb adc cmpsb mov mov jl ficoml mov cltd mov mov loope cmp pop push pop out fldenv data16 push fidivl call inc dec and fwait movsl sbb sahf fs enter test jns mov mov adc scas arpl aam jmp scas mov mov (bad) cmpl fsubs sub cwtl inc cmp lods inc mov aas pop (bad) pop pop mov pop dec push jge inc fstl push dec pop pop inc cmpsl mov mov push hlt jecxz jns jmp lods imul xchg inc out in stos outsl aam cmp mov fnstenv fsubl (bad) mov mov dec jmp punpcklbw insl ss mov push sub inc aas adc sub or test push pop out sbb out shrb lret stos ss mov pop pushf xchg out xor roll (bad) mov bound or (bad) and or repz adc sbb sub popa outsb cmp test (bad) into icebp fwait jecxz (bad) dec pop in jne shlb inc mov pop pop (bad) mov lods stos and ljmp pushf jno std in outsl mov ja out pop das lea sarl pop lret cmp jne adc xchg js add push pushfw cli into and daa rcrl xor pushf movsl jno jg fistpl pop and sbb xor lea and mov int cmp mov mov xor sbb push xor xor inc icebp leave ret clc mov (bad) mov mov rorb push call lods outsl xchg lods push jp cwtl dec adc push jl les subl jne ja dec ds dec sub loope movsl sub mov leave call mov insl adc test mov sub test pop lods or xchg mov xchg loop fdivs pop mov mov outsl push inc pushf fcomps cmp and xor fld mov test xchg inc xchg pop (bad) xlat mov mov (bad) aad xor mov xor cmp push fmul stos fisubl dec jnp mov push cmp rcrl leave js std mov fldl or in lahf icebp pop push loop push fildll push xchg arpl test mov cwtl lret push (bad) in push jno jp popa psraw lcall lret adc pop (bad) aaa jo sbb in mov jl add push jg dec shlb mov rep packssdw leave push mov ja cmp out fnsave das mov mov lods inc pusha pop jp mov or dec jp outsb push sbb ss inc jl call flds dec jnp lods outsl pop pop outsl cmc push or push and push jb add mov pop insb xchg mov push cs sbb into adcl enter sbb sahf sub adc outsl sar lds fsubs or mov mov push pop arpl aam inc outsl (bad) lods sbb sub mov mov pop xchg mov jl dec in insb int lahf insb jge or mov (bad) sbb pop mov insl jns jae dec mov (bad) sbb dec lahf enter test movsb enter popa and jns jecxz fidivr imull aam lcall jo add rcrl xchg sbbb mov andl xchg jmp push setle xchg (bad) xchg imul ja lods add mov sbb (bad) cmp stos xchg (bad) in inc adc icebp pop ljmp dec and dec inc push lea lret xchg pop shl faddp out jno cmc cmp (bad) sub inc pop push out jge addr16 cmpsl add sbb icebp add pop out call mov jg cmp mov jl test xor test fidivr loope in cmpsb test cmp fidivr add lret and inc shl leave jmp push jl movsb icebp or (bad) out (bad) lret sti (bad) xchg repz std pop outsl stc mov and cmp fnop xchg lahf lea mov dec sub inc cmp cmp jg out lret mov dec (bad) mov jge sti sub inc roll fwait mov and dec es rcrb xor mov imul (bad) pop inc dec (bad) and mov pop bound lret cmpsb xor pop cmp xchg mov push mov imul jns in push dec aaa rcr mov out dec in loope xor push aaa xchg bound jl xlat cld xchg cld call push cmp andl stc mov out mov add mov std (bad) imul das sbb mov mov xor fwait ret sub sbb scas roll cmp pop imul addl xor cmp loopne lret jae,pn jg xchg scas pusha xor jge (bad) cld in push push cmp lahf pop xor js dec xchg fldcw imul dec rclb ss dec lret fstpt (bad) je mov mov sub (bad) int into in setb xor mov adc data16 adc add test adc fsubrl loope fsubs and push push sub dec test pusha js push xor mov and mov dec push xchg dec pop push out adc out popa scas inc or insb sahf jg enter cmp sbb mov jns mov mov xlat arpl incb jo rolb test icebp outsl cld fmuls andl xor jl (bad) cld dec test or ret adcb aam scas push or popf fwait xchg add lea fstl cmpsb xchg push stc fiaddl inc push mov adc dec or dec jge inc sbb inc out mov mov out dec pop cmp or les pop adcl mov fmull (bad) notl and sbbb (bad) adc lds (bad) in mov push push jnp pop inc loope (bad) mov test out (bad) dec xor insb imul pop and add out xchg mov push shr push push dec and mov repz out xlat in add cmp push imul sub push lahf rcrb mov lods mov mov pushf xchg rcll dec adc adc arpl daa nop and or lret push ss xlat push jae mov pop int3 or nop add pop mov cmp aaa sub nop out adc mov lock mov fidivr dec adc leave sbb push idiv add mov data16 lahf jns sub and mov ss or loop pushw clc insl pop out push (bad) aam fsubrl es clc xchg or push fiadd sbb jl ss lock add std pusha lods jecxz jl icebp sub inc adc or push jl fldl sbb and add xchg sbb and xchg and ds jne mov iret or add xchg mov fmul sbb das xchg repz push call cmpsb adc xor call sbb imul mov lds sbb fld or inc cmp mov jl jge or inc ss jl and cmp mov outsb stc out pop jecxz xchg jge and jns or (bad) push lret sub js lods add cmp sbb mov dec mov aam mov out ss pop (bad) jb cmp mov or sub xor jp idivl fnstenv jne int3 or dec xor xchg and js (bad) mulb rcrb hlt nop andb shr sahf sbb (bad) mov (bad) jnp xchg imul cmp fistpll (bad) lea adc push push jp xchg mov xchg dec loopne xchg jge or add insl lock pop xchg (bad) (bad) jnp addr16 jne mov mov mov pop lret (bad) mov sub xchg and mov insb lock pusha mov push call mov mov insb cmpsb cmpsw push adc inc aam adc enter xchg mov dec (bad) repnz andl pop inc out pop popf sbb or or xor dec test ret mov push push and ja mov push mov mov icebp nop (bad) cmc jns ljmp push ljmp inc inc mull xchg dec add scas icebp inc jmp xor sub je jae sar in imul cmp mov pop pop and addr16 inc adc mov rcrl test call repnz sub pop inc fidivl mov dec inc mov js cmp push jp adc push test mov ja (bad) (bad) cmp push and fmul daa dec lcall into imul add adc dec xchg in arpl and xchg es sub dec leave mov pop push iret pop bnd loop dec xlat xor fs outsb popa sbb or pop mov or data16 fdiv (bad) cmpsb aaa push and pop out xor jb sub das (bad) push sahf or loopne pop cmp stos ja mov push cwtl jne mov lcall and je pop jmp adc movsb inc mov int3 pushf mov inc mov (bad) fisubr mov mov addr16 pop add jae jne cmp fsts out sbb jle dec (bad) (bad) xor add (bad) sarl xchg leave xlat ficomp or psrad outsl loopne daa sti dec xor (bad) cmp call mov add ret sbb les or clc daa pusha rcrl js cld divl out mov xchg loope lcall sub push test ficom cmpsb inc xor enter xor std xchg shrb or mov xor dec mov ret inc xchg or inc or xor jno nop stos imul jle cmc fbld push xor rcrl adc ja add and data16 ljmp inc xor push outsl shrb iret call mov ret insb cmp jg xchg add sub cs pushf lods jne cmpsb test outsl jecxz dec in pop test out mov jae mov les mov jno dec xor mov xor into sub xor mov ficompl inc (bad) mov lret cltd cmp aas ret add (bad) jae (bad) jne leave pop ljmp mov cmpsb into sbb out push pushf pop repnz jmp xchg lret jnp ficomp lret lcall pop dec negl push xchg jmp pop aaa lods sub jp sbb (bad) stos cmc mov push (bad) sbb adc mov push cld and add mov dec xchg jae cltd stc gs cmpsb dec dec add gs jecxz loopne xor add arpl pop sarb rorl mov jne inc addr16 (bad) popa push and das xor imul test aas mov and cmp pop arpl xor sbb add in lods out inc fsubr imulb int3 mov ret pop stos pushf js into int scas xchg inc outsb fnop jg cmp aaa (bad) call test xorl (bad) cmpsb test dec jns outsb cmp cltd adc sub hlt push lods icebp push cltd cmc mov mov jo ret pop mov in pop jno cli inc ds insl in inc pop ljmp into rcr inc pop fnstcw lods or bswap push mov mov or inc pop shrl popa je sub push fisub lock aad lea add (bad) cmpsb or jmp inc shrb cli stos clc scas dec mov nop test rolb and mov jo push out stc bound mov shrl xchg push out or movsb cli cmp imul mov add xchg test popf sub mov xlat jle ja or lods leave xor inc daa mov jge in in mov into dec (bad) and mulb push sbb pop add push cmova pushf neg cmp jmp into stc mov imul cmp ja addl stos lahf push push out fcompl inc inc cmpsl ret mov out repz fwait test sahf xchg cmpsl and inc dec fmulp ret jne and sbb in mov pop xchg mov into jg mov arpl hlt subl or mov aas lea cmpsl pop lods out arpl imul aad inc lods arpl addr16 xor pusha jnp sub into add jp cmpsb daa add dec in xchg lock fild cmp or data16 stc mov (bad) xchg lcall into or idivb pop push push scas mov enter inc aam aaa aaa fmuls pop mov or or ficoml fidiv popa push icebp in mov adc dec inc cmpsb adc xor fcoml xchg fisub repnz sub (bad) fildl cmp ljmp stos push mov repnz aaa cli xchg aam (bad) rcrb bound fidiv repnz sbb dec xchg out pushf add scas (bad) fdivrs jne sbb dec out xchg pop fidivr sub movsl adc (bad) shl jmp in xchg sub into add pusha push enter jle push nop jne gs push push adc sbb xlat pop lret out bswap cmp cli sub (bad) jno test scas dec push iret lock pop jbe test (bad) and mov dec mov xchg and in mov shrl xor push leave hlt aad mov mov cmp clc and xor int jb imul push and (bad) mov xchg dec cltd sub enter fisubr in inc adc sub mov (bad) (bad) out xchg stc inc (bad) cld dec out mov inc sti clc rep loopne loopne push adc mov aam push cmp cmpb cmpsl push test (bad) (bad) daa out and imul hlt fldcw sbb lds (bad) xchg sahf repz jbe jle or or repnz mov rolb mulb gs xlat scas and cli xchg outsl xchg daa js sahf test outsl xchg mov mov ret out adc nop clc enter mov shl jb pop in aam jnp jmp mov inc (bad) mov sbb push les push int3 loop mov sahf adc dec imull aam mov jne inc jp push int3 and jle repz fistpl lock out and lahf mov ljmp divb push jae (bad) in (bad) fwait add jae dec sbb rorl (bad) pop je clc scas and cmp jne xchg out inc or mov cmpsl stc mov jle nop lea mov ljmp adcb mov adc cltd (bad) xor in dec ret add pushf aas sbb fs add xchg ljmp add fstps sbb cmc xchg clc xlat aad push push inc adc andl inc fbstp imul movsl loopne push mov xchg inc test jp outsb or sub cmpsb in jg ret subl imul gs int jmp inc push lea insl hlt dec xchg mov movsb inc push lea cld push aaa inc lea (bad) scas pusha fldl in outsb pop xor dec adc scas movsl outsl jl and mov ror sub cmc loopne imul mov sub nop add inc out push mov xor pushf add jmp pop jecxz mov fildl (bad) pop dec mov xchg ja pop inc test jae jae xchg mov test jae jne leave bnd or pusha test and sub mov push idivb sbb xorl divl dec out jne enter or sar jb loopne movsl test mov dec pmullw mov loop push add push rorb jp divb dec cmp notb sub mov out push (bad) jl dec cmp push scas inc es insl pushf jg inc loopne in fyl2xp1 pop push add bound push or cwtl mov call push mov mov cmpsl push orl push sahf rcrl add imul or or pop faddl lods cmpsl add add les or add sub mov mov mov xor add or pop aam outsl xor mov mov dec fwait add das xor das cld pushf mov sub movsb sbb andl jbe les movsb imul xor jne imul daa ja xchg mov out jmp ds dec push (bad) test aaa das aad or sbb popa xchg mov jge mov scas shlb icebp leave mov xchg mov jge xlat mov sub jl out push fnop (bad) enter mov popa jb lahf enter lds inc mov or lahf in add push stos pop push sti xchg pop repz dec popf loope push aam cmp and dec cmpsl lret sahf mov cmp pop fstl imul or push nop (bad) sarb scas xor scas jne cmpsb cmp in cmp cmpsl and in stos test or lret or ret ja es mov mov jne mov bound inc add jae dec out ficompl inc jns popa ret bound push jmp jl or jecxz aaa nop into adc fldl out mov jmp (bad) fidivr out aad (bad) in pop ret sahf jl jg ljmp fs loopne insb jg pop lds push jnp mov jno push dec jl arpl js mov sub sbb stos sbbl cs inc mov jnp mov inc push mov fiaddl test jbe xchg inc mov mov mov iret or (bad) arpl cld lea sub test sti (bad) sarb jle xchg jno fcmovb jns stos ror sbb mov mov pop scas mov (bad) dec jno mov loopne adc lods (bad) (bad) pop in movsl sahf adc imul out sub js je sub xor adc shl jl into mov test inc push mov mov inc mov je lods sbb dec rclb insl (bad) int es mov mov sbb adc adc or jp sbb jecxz repnz (bad) xor xchg xor cmpsb push xchg sti bound rcrb mov loop add jp outsl in popf jge sar jp xchg adc cltd jle push sti cmpb mov push scas xchg cmpsb mov mov inc add fnop mov aad jl ja (bad) or dec add iret add cmp xchg and (bad) call sub in iret push aam cli mov subb xor push xor scas push popl outsb out lret imul imul in popf shlb repz push iret mov or sti rorb xchg inc push inc inc enter int mov in cli or inc pop sub push es inc inc bound (bad) or pop push aam shll pop insl cmp sub adc out mov add (bad) in addr16 mov cmovbe sub lcall sub pusha (bad) (bad) or add jno in (bad) pop std inc or int3 mov arpl lods addl sub and cmpsb scas mov sub or out das mov call jmp push mov push cmpsl hlt dec and stc jmp pop and fmull stc dec inc (bad) (bad) jo pop jmp clc sti sbb rolb push mov movsl sub cmp outsl loopne sub push pop sub jmp adc push sub mov jecxz push xchg push inc lods ja push cmp add shl jecxz xor dec and pop dec push jle cmpsb fmuls cmp inc push push shlb mov mov push fnstcw int3 cmpsl sbb fisubl call sub adc sub (bad) sahf lahf dec jle or icebp repz and fwait lcall sub mov fs arpl pop (bad) xor inc mov (bad) cmp test daa adc dec jno shrb inc jmp (bad) jb lock rorl ds repnz (bad) push add (bad) mov xchg mov shufps adc dec or fstps fs (bad) sbb scas and pusha inc inc jmp mov and lea add jmp out outsb add add inc int jbe aad test inc pop stos inc xchg mov jmp out cs jg mov fmul xchg xchg js cld jno cmpsl cmp mov sub adc bound sub xor dec mov xor leave mov bound and stos into out pop in jp cli xchg dec insl push ror lods popf xchg popa lods aam dec loop sbb or pop sub inc or jecxz xchg pop sbb push inc xor inc lahf xor out or mov popa scas lods orl pop pop and inc mov push xor cli ja pop inc pushf iret jb call pushf mov imull jge jle movsl mov popf or inc xlat xchg int3 les (bad) aaa fild xor int pop mov loopne mov mov std (bad) lret aad mov inc mov dec shr mov fcmovbe or cmpsb sub mov loopne push pop repz xchg cmp (bad) lds dec mov push out rcll (bad) hlt (bad) lock fbstp cmp adc es je popf push pop mov addr16 je outsl push mov pushf jbe mov sbb aam dec (bad) aaa jb or gs std lcall xchg cmc bound shrl add sub das fcmovnbe mov shrl fisubrl push fistpll sub mov mov aad clc mov aaa arpl and adc les push push adc and out dec enter and mov (bad) mov dec test inc mov and dec imul ret test inc fisttpl (bad) arpl inc push and jnp pushf pop mov inc repnz outsb xchg push cli jl sbb mov fidivl mov jmp idivb ds popa adc or sbb or lea xchg je xchg ljmp pop loopne es daa test pop data16 inc mov aam mov fs retw js ror dec push (bad) xchg (bad) mov ret sbb inc movsl pushf leave movsb jle jl push cs lds dec (bad) imul adc pop cmp or insb xor or daa mov pop out xchg mov push mov mov or into gs adc inc add push jo ret arpl int sub push aam aad repz jle pop rol mov push dec lcall (bad) lock ljmp xor lret add mov pusha xor push inc sbb clc les mov and and aad cmp decl ljmp test mov (bad) jne fsub js inc (bad) cmp xor xchg addl mov inc nop add sub pop jge nop mov (bad) cmp popf add sbb and popa std sub cmc sbb pusha sub xchg pop mov sarb add in or in pop call into jnp mov pop pop mov inc popa scas test inc arpl stos adc insb or out add pushf js or std mov stc pop dec mov mov push xlat xor aam cltd outsl mov mov push fsubrl test pop pop in inc lds mov in test lret inc mov cmpsl and inc imul fsubl cld adc jl (bad) gs lret imul push add sbb je sub sub dec pop mov xor inc fs arpl jmp std mov mov dec or xor test xor dec mov (bad) mov mov jbe insb lret aad push push (bad) mov pop gs and push int pop add pushf jb pop xor jnp mov pop scas std pop push jno stos inc clc aam adc xchg or test pop decl or add popf dec push icebp enter or or dec push hlt gs clc lcall popa mov jge outsb xor outsl add lods andl or inc fwait mov ds iret (bad) cmp hlt mov xlat mov mov inc out sub (bad) mov and jae xor sub sahf hlt stos cmp jle inc add or test (bad) lods jg inc daa dec out loopne icebp and bound loop (bad) xchg mov in lahf dec test dec pop sbb mov scas dec gs jno mov ror sub xor sbb cmpsb loope add mov mov adc xchg inc ret es mov enter mov stos and dec int push jo ret adc (bad) adc hlt rol call pop pop stos push fistl or imul mov lea add sarb ret nop aas call dec std outsb add mov icebp cld xchg dec sbb jb mov lods dec fisubr sbb push sub mov fistl stc xor sub (bad) xchg mov sub ret not jno sub xor repnz sbb int test std adc xchg insb push cmpb pop cli cmc jnp mov int3 cmc pcmpgtd pusha xchg sti adc jecxz jne popa push ret lds icebp fstl or imul xor (bad) mov sub add enter add cltd out xorl pop lods cmp pop inc mov cmpsb fistl ret xchg popa (bad) xor lds xor and std push lahf mov or mov testb outsb inc add lea fldl jle xchg into fwait aad outsl mul icebp inc inc pop cmpsb ss fstpl xor dec minps insb fnstenv fdivr mov xchg sub sub mov sub loope pop and dec pop ljmp scas mov cmp mov cld jbe loop mov lahf pop or jl mov ret push mov add (bad) jb stos (bad) adc adc ret insl adc jge lret mov movsb inc data16 insl pusha lods and fiadd (bad) push sbb fstps cmp cli lods popa (bad) dec cmp jnp inc test lret mov add stos shrb fisttp sarl movl xchg adc cmp jl sbb mov or rclb notl inc xor push sbb cmp loope stos push jno push jge inc fldt lock in dec cmpsl mov stos xor mov scas loopne in es xchg add push mov movsl pop sbb inc in fcompl loope es sub adc mov fdivl in pop (bad) aas dec pushf flds mov int push lret scas in pop call test push ret rol dec inc cmpsl inc cmp sub std mov (bad) adc pusha pop push push or cwtl sahf aas xor cld pop aas rolb call push aam stc jbe sarb dec je loope cmpsb mov loope flds sahf repz sar iret cltd push mov fnstenv mov data16 mov push push dec xor in xor xchg clc dec imul movsb inc lcall sub into add insl cld xchg and andl add sahf or bound dec loopne dec mov scas divb push sbb adc sub ds adc scas lea xchg or out push cld test sbb fs mov dec ficoml or xor es dec sbb sub jecxz adc aas jp and (bad) pop cld jne xchg ja mov testl xor aad je jno jae or insb jnp xlat add adc mov pop loop push jge jmp or repz or xor jb dec pop jle out popa jmp popa lds cs data16 xor (bad) adc fwait cmp adc fnstcw popf inc pop cmpsl je ljmp test push xchg pop ja mov scas leave mov je in sub sbb or out (bad) (bad) leave pop pop jmp (bad) mov (bad) and int3 imull in lea sar lea out loope xchg mov imul dec loop cs gs stos sub insl jae (bad) push inc fimull test pop lods rolb inc sbb xor adc hlt xchg rorl push das mov das je inc fistp (bad) jae jo mov rcll xor inc int3 mov pop inc (bad) in cmpsb push (bad) (bad) push inc ljmp push push xor adc push push inc jge inc or mov (bad) hlt mov cltd push sbb jnp lahf dec mov pop or mov sub mov inc into dec es inc pop loopne cld dec mov jmp movsb aad mov lods push scas (bad) je cmp lock xor sbb in daa mov pop xchg aaa aas es adc repnz inc pop arpl jo push inc negl int3 addr16 xchg mov inc push and mov aaa stos out out xchg rclb pushw sub bound cli mov push fcomp xor mov imul int test lret ret out psrld add mov aas lret gs shl out adc jnp test mov or sub adc pop pand push pushf shlb mov xchg arpl push inc push fisubr mov loop pop rcrl data16 movsl jno mov in dec push pop inc push movsl into shrl xor lea aas mov stos ret leave into pop leave out clc push lea sub xor mov pop pop (bad) and xchg shrl mov cmpsb imul pop cwtl jle loop iret fmul sbb scas adc sbb sub push push insb dec movsl fcmovnu mov push jl int bound ss sti enter fisubl outsl mov fisttpl aam mov in mov inc inc pop lret stc dec or push xlat xor sub test das std fistp fistpll (bad) xor xor aas push sub iret mov mov mov dec pusha les cltd mov xchg adc xchg outsb mov out or lret (bad) jp ret inc lret pushf imul mov push pop inc in mov cli jae or inc loope adc mov xchg adc mov loope mov enter cwtl mov (bad) push and add les adc jecxz push dec jmp movl dec in mov cmp add adc and mov idivb inc pusha pop je xor rolb ja mov lahf xor xchg mov cmp push das test or cmp pushf ret in rcll jne aam loop mov dec cs or out mov mov xchg lret fwait mov xlat jbe imul in cs nop dec pop jne icebp mov bound mov hlt imul popa push sub ss xor (bad) sub cmc cmp mov mov rcrb add shrl daa xchg push lahf cltd push scas xor ljmp add xor mov or cmp jl fdivrl push test lcall fildl xchg lret cmc sbb or adc dec xor mov fsubs cltd lock xor mov jge psubusw daa sub inc and inc arpl xchg jns,pn mov and xchg add pop lcall sbbl std lret mov adc xchg fcomps xor jp mov mov mov mov mov dec mov ja adc jne outsl push loope lds pop mov adc ficomp mov jp mov mov cli in mov stc or sub inc xchg sbb jl outsb xor and xchg push sub arpl fdiv (bad) cld mov fidiv jmp cmp ja into cmp out cmp dec mov jnp lds sub push pushf cmp cmc stos sti jl push std jo fmull xchg sahf xchg mov jne xor ljmp dec mov sbb xchg push faddl mov add or call add mov push (bad) mov (bad) stos fiadd mov out adcl in hlt push xor pop mov cmpsb sub xor add cs popa jne std mov cmp sahf dec aam test test sub or mov push xor loop insb inc addr16 subl fildl adc jns adc cld cmp lods add mov or push pushf push jbe add mov fsubrs es or or and das cli je push popl cli mov movsl aad movsb add mov rcl or inc push mov jb cmp dec mov xchg iret cmp add in push (bad) insl popf sub fldt push push cmp test pop sub or scas mov or incb mov clc sbb popa in jnp ret jae iret lock jae,pn jl cld ret (bad) jmp arpl inc popf and and inc dec lock mov jp and or jb nop nop mov push adc mov pop mov sub sbb test sub add test push fwait int je mov and pop inc outsb or jge imul movsl lahf out dec xchg inc aam in clc sbbl mov push call (bad) lret or and cs sub mov dec leave and xor sub or out and sti inc test stc cmpsl cmpsl cld outsl mov pop push fcompl insb push lock (bad) je in jo mov sub arpl dec xor adc mov movsl (bad) mov xor cli insl sbb mov push adc xchg fmulp sbb mov dec and test adc pop in insb movsl cltd fxch pop aas loop pop dec inc shrl es pop jp ss movsl mov cltd dec mov xchg bnd das mov rorl imul mov decl mov mov das stos ljmp mov test pop (bad) and out xchg pop push test cmp ss push jle xor fdivrl sbb sub dec xor or pop pop inc leave pop (bad) jbe adc sub cmp imull xchg mov ljmp clc add add and cmpsl xor sbb cli fs mov adc daa iret lret xlat in mov pop ret add loopne in daa ret dec xor mov negb jle pop lds push inc test push leave lahf and fnstcw lds mov mov in pop or fstl (bad) mov push mov aaa pop repz dec outsl sbb push xor or cmp pop stos jl lock jae (bad) daa mov inc test shr js fisubl xchg push inc clc (bad) and mov icebp mov cmp push cmpsl das inc push cmp int cli push jecxz dec sub lahf push or imull das push xor sub sbb in push call or dec mov jp xchg stos lahf dec add out pop adc xor lods lcall jl add xchg int lea mov jmp loop xchg insl lods add and mov scas leave sbb lods movsl mov sahf loopne leave inc pop leave fs loopne es orl xor mov xchg and nop lods add sub out ret mov pop push push insl mov xchg push cmpl cmp aas in dec mov fldenv mov in (bad) fisubl and jmp xor movsb dec rcll clc adc jo cmovs test inc loope (bad) (bad) enter fcoml daa xchg add cmp jle,pn scas scas outsl xor (bad) scas sub and dec mov aam jge int fadd (bad) or inc xor dec insl clc (bad) cmp enter loopne xorl addr16 pop and dec mov iret push cmp cmp inc stos xchg inc insl jb or push and ss push xor insl movsb mov add jge lcall mov jbe mov test inc outsl rcr cltd div outsl pop fsubr (bad) dec add adc mov mov call lock repz mov (bad) jb movsl mov jle mov mov lods inc (bad) mov popa mov fisubr push adc jno in mov mov add aas jle or clc dec mov in fnstenv push and and setno xchg int3 dec jns call ret sar out sub or cmc push out in (bad) (bad) int into xchg movl lret cmp pcmpgtb js pop xchg jp or jb inc nop or cmp push lds fstpt jg dec loope inc dec xchg and aas (bad) xor add push inc mov sub lcall mov outsl test or orl pop dec in adc add mov sbb dec cwtl sarl subl add inc and or lds clc test aam arpl mov into sbb andl imul scas jne xchg sti add and test jle ljmp adc fidivrl sub mov push jecxz aaa pop and add pop jl (bad) xlat lods mov jo push in jnp inc orl dec call cmp pushf mov jnp sti or ret sbb stos loop pusha movsl shll pop or or adc or xchg push jg and mov fistp xchg out imul or jbe dec push insb sahf pop mov mov sub stc lods hlt and into mov jo daa or adc pop cmp (bad) pop lods insl ss add mov pop lods cmp fildl dec or jge sahf (bad) lret adc jae popa xlat insl aam push or into and fadd inc scas loopne je stos hlt cmc dec pop out pop mov lret xor repnz js pop das jge aad mov pop fistl test scas popf cli lret stos and cmp gs mov sti stos dec imul (bad) pop (bad) sahf mov int stc popa (bad) call and inc push sub sub add aas mov mov mov mov call push xchg ret int3 jg push lcall aas cmpsb and cmpsb adc push mov fldl aaa push pop mov dec cwtl scas (bad) cmp outsl mov push adc nop dec stos out shrb jmp dec or (bad) les test rsm fdivs adc rcrb xchg icebp (bad) repz insb dec ja in sub dec push ret (bad) mov cli in fwait mov cltd xchg xor sbb adc stc or push fs (bad) aaa sti inc imul cli mov popf movsl push scas and xor xchg arpl adc jb lahf out pop cmp out test jne pop ljmp pop ja fwait js sbb mov sahf sarl fsubs mov mov xchg ret lods fmull mov iret lea mov or lret jmp (bad) pop sarl jl cmc pop outsl and jae mov pop (bad) out cmp icebp mov sbb addr16 add jle xor mov aam push lds cmp mov mov sub mov test (bad) xor (bad) jae sbbl sub test add mov mov cmp and in sub (bad) std into pushf rcl dec sbb out lcall pop rclb pushf icebp push inc sub lcall sub xor fisubr adc stos jno lret shrb leave jns imul movsb jns fsts das inc pop (bad) xchg cwtl fdiv shrl xchg aad loopw pop sub lock add push or ret inc imulb stos xor jmp test ds jmp jns rcrl fistpll (bad) jge iret push mov sub sti test cmpsb std push jl out pop inc pop rorl adc push cmp rep lods mov dec mov or sub mov sub or push add add ljmp int imul dec pop jg adc mov leave xor jle ja cltd lret xorb fisubrl xchg std arpl and daa jmp push das or dec daa (bad) mov aam mov enter enter inc cmp and loopne aad cmp int3 cli inc adc js jecxz aam stc or scas add jnp shl mov lahf in aas pop xchg hlt pop ljmp ds mov adc out mov inc ss cmp and dec (bad) cmpsl or pop jge ja sti out cmpsl std cmp out mov add out enter push icebp cwtl mov and call cmp scas bound sub mov sub out dec dec (bad) sub add xchg jecxz (bad) and (bad) mov sub rcr aas xchg lds std pushf add movsb mov leave adc test jge pop push jae mov sbb sahf adc clc dec sbb mov daa mov fs jae mov sbb jecxz push (bad) ljmp sbb xchg dec leave cmpsb xlat xchg push aas inc sbb sbb mov bound imul fmuls jb jecxz add jmp test lret (bad) push mov mov pop movsb push xor add and and (bad) mov out mov mov pop jge fildll cli movsb (bad) popf jl or xor mov pop fsin push sub cmp sbb mov (bad) fimul and jp push repnz (bad) cwtl das inc sahf fucom or jle xchg in lock shlb cwtl pop (bad) push sti arpl aas jns cwtl cmpsl cmpsb push mov dec mov dec rol hlt pop or sub repz scas lret mov loopne repz daa xchg add scas ljmp and mov sbb push mov lcall popa xchg icebp outsb cmp xor pop xor pop imul and aaa (bad) mov test rol xchg push and mov mov xchg insb lea inc jmp mov flds je inc loopne addr16 repz sub (bad) mov or cmpsl mov stc mov jno sub fimull nop cmpsl mov subl frstor inc xchg icebp mov lods inc sbbl jnp push cmp mov mov in add mov test adc test lea pop (bad) jnp decb adc inc pop out lret (bad) mov fnstenv xchg shrb xchg pop xor in fbld cmc pop or clc mov data16 cmp cmp fwait int3 test sub dec mulb mov push stos cmp jnp (bad) mov adc and xchg adc fldenv loope into pop les push rdpmc mov (bad) xor inc and jp mov xor (bad) inc xlat aas (bad) jbe int jbe repnz push bound xchg (bad) pusha aam adc mov movl cmpsb inc out xchg scas push cmp adc bound fmull ss faddl enter xlat in mov jle pop in (bad) mov cmp pop sub mov in inc (bad) or sbb pop mov (bad) xor leave dec xlat sbb dec es daa xchg rorl inc insw jnp xor jmp test mov orl shll mov sub (bad) je repz push imul or push mov jl pop adc xor sub repz xchg pop push (bad) xchg mull inc in aam push aaa xchg jmp arpl data16 sub jl cmp xchg fidivr lods sbb movsb lahf or lock push mov adc xchg data16 cmpsl push dec lret push mov pop xor rcrb mov push das inc xchg ss cmc mov or jmp (bad) loope push pop out mov lcall pop pop cmpsl inc fbstp mov scas (bad) xchg mov aad test in push nop rorb repnz cltd sub arpl or xchg fs and insb mov xlat rol fild (bad) jbe adc std sub leave gs sbb xor jo addr16 push inc in fwait nop movsl gs (bad) out inc adc add mov into imul jbe add in ret dec push ffreep fsubl adc push in cwtl bound insl jbe pushf mov dec pop pslld push (bad) aaa ja sbb adc clc xchg fwait xchg cmp pop sub mov mov mov into xlat xor scas add leave mov sub mov xor loop pusha cmp sbb sbb out cltd mov adc push cmp cmp aaa sti xor add sub or or outsl loopne push xor xor sbb push movsb add cmp xchg push jge outsb fsubl lods cmpsb cmp inc cmpsb cwtl jne xorl in push (bad) mov movsl jp xor lret gs mov sub imul enter and mov or mov xchg fbld cmpsb or jg inc icebp negb mov fsub jp leave rcrl leave add add lods gs dec xlat inc cmp aaa cmp adc loope fwait gs and or add push negb es or xor (bad) xor sbb out (bad) ja sub sbb cmp mov movsb sub ljmp in daa mov cmc inc fcomps push push jmp je sbb cmpsb repz sbb jns mov pop out fs sbb aas push pop aaa inc pop jp mov sbb cwtl ret out enterw ds stos mov fidivr mov aad jp xorl jbe xchg bound add xchg test imul insl mov outsb mov dec dec mov je cmp sti mov mov (bad) ret xchg jbe inc and pop dec cmp jg cmpsl aam test ja adc fist push jp and jle aad pop sbb stc outsb scas dec loope std xor jne adc push mov ds mov outsl pop mov push push sub (bad) sbb xchg mov mov int mov (bad) push lds mov fwait aas (bad) xchg and mov adc and pop mov (bad) hlt cli jo sbb enter iret loope mov inc gs aad sub cmp dec or aaa (bad) sub orl bound adc sub mov (bad) shl mov pop jp imulb jb mov push mov cli sub dec mov xor inc dec xchg and cmp xchg fnstsw pop adc mov cmpsl hlt mov cwtl jns xor jae test mov stos adc in (bad) fwait jg jbe mov mov js inc add pushf sbb cmp push xor imul push xchg dec imul arpl add jno mov push (bad) push shrb cmp loope mov pop stos dec xchg push sbb xchg push fwait in lea mov pop dec cmp daa xchg inc cmc xor leave cld fistl jl push adc fisubl (bad) repnz xor neg jns test pushf inc add xchg mov inc lods mov test adc in inc xor lds and imul inc rep outsb les insb fistpll jno push xchg push enter and cmp enter adc jg add rorl push inc pop stos fidivrl cmp out jmp mov push jmp xchg stc xchg mov pop or xchg rorl adc and dec mov cmp cmp mov dec int3 call jnp xor insb xchg add dec lds aaa xor add sbb jle movsl mov cmp imul ljmp imul add push fdivr fbstp imull xor nop scas movsb in pop push xchg mov jns dec mov sub pushf push int3 push inc cltd (bad) fst or (bad) inc pop pop lret fnstcw shr (bad) dec in rcrb push fcmovnbe mov mov addr16 in mov stos cmp pusha fwait cmp out xchg add push xor mov pop test fisubrl dec inc ss les add mov pop ja push pop adcl mov cmc pusha inc imul int jge nop ds pop cmp cmc ficoml adc pop lret push pushf dec sbb rorl mov jp imul cmp mov mov (bad) dec fnstsw je imul sahf (bad) popa mov fdivrp in mov jl cmpsl pop mov loop push and push and lret out enter es and mulb push sub repnz adc dec stos fs jns mov insb in inc and insb inc repz aam fnstsw mov hlt ror mov mov push xor int and jmp jl mov xor fwait or mov stc bts (bad) fidivl lcall xor rcll xor xchg arpl test js jns mov cmp pop mov pop inc popa inc jle pop stc mov mov fstpt std test add pop adc pop lahf cld sbbl mov jb xchg fiaddl cltd scas insl jo add lahf xor out cmpb stc jl lods das sbb cmp aad mov mov insb aad jmp sub mov adc push int3 jae,pn sarb sbb cmpsb je jge sbb xor (bad) scas lret gs aas xchg aam iret xor cltd cmpsl aaa sbb push jecxz (bad) xor and mov sub mov push cmpsb jne les jp in (bad) mov mov outsl imul enter lock push fstpt scas ljmp jb out push data16 xor aaa mov into shrb fs pushl add lea xor rcr xchg sbb lods mov mov sub loopne mov sti adc icebp scas test xchg lods jp push jno hlt jo imul in jb (bad) addr16 mov mov or push fidivrl jl repz scas sbb jno pusha out (bad) push mov cmp jecxz inc xor cmp mov fiaddl out movsb in adc sbb (bad) and stc adcl lret lock pop out dec sbb jae pusha cmp mov int3 fisttp add movsl popf push fwait inc add divl or mov or and daa popa outsl sub inc movsb addb mov gs lret stos out insl iret test int inc fisttpll gs loope ror hlt (bad) loope mov sub icebp sbb mov das arpl mov or aad les rcrl add pop mov sub add xchg push push jb int mov sub dec or aas dec cmpsb mov jae sarl xchg ret enter push or jmp dec popf adc in pushw cmp stc lcall pusha es push je lds inc cmpsb mov mov movsl jmp popl add mov inc mov inc clc lds stos pushf pmulhuw cmp mov or enter fprem1 adc pop mov xor nop sub sahf xor pop sub in push addl pop das sbb cs popa jg js mov aas push jp or aam inc lock push pop popf push aam add lret and inc mov and mov and ret in lahf je jno xchg aad xchg orb mov push mov andl sbb pop test mov pusha inc jmp outsl std test incb xchg xor add jp pop fcoms cmp fs dec ret leave or pop lret (bad) cmp xor push xchg cmp push mov cmp xor (bad) sarl jp push xor dec rorb hlt jbe (bad) aaa cmp into mov pop xchg mov cmp loope out shr xor sbb ret repnz aam test sub cltd sbbl aas imulb (bad) dec inc insl imul (bad) adc cmp andl inc jle mov daa mov int3 stc adc movsb orb dec lods xor in imul ljmp shrb lds cmc mov fdivs add mov hlt jg or pop inc fwait pop rcll sub lods sti xchg add mov adc jge sbb rorb cmpsb insl sub aad addr16 jecxz mov stos lods or mov gs inc sahf xchg cvttps2pi mov std dec ror pop cmp add pop add and cmp xchg and sahf mov loope cld mov hlt lock leave in sbb enter add push jbe pushf (bad) ss idiv cwtl sub std add push adc xlat jbe enter nop mov imul sahf sbb fisub xchg jb dec rcrb or pop (bad) xor push and out and or das sub xchg in fs jge add test mov loope dec sbb lods std outsl push es stos xchg dec or sbb dec push mov ficomp pop sbb push adc ja ret pushf rorb mov jo insb ljmp into subb test rorl jo scas in mov jl enter bound adc pusha cmp insl lahf pop adc popf push and sub xchg push push fbld mov pop test push cli mov and xor jo andl or dec xlat mov mov xchg pop jg lods jge aam sub aad aam mov mov sub add inc (bad) mov cmpsb push outsl iret pop xlat xchg jno loop insb sub aad mov das pop mov cmp and dec test cmc pushf jno adc imul mov int jns pop fisubr and add add in and dec popf sbb mov pop xchg push pusha enter fisttp or add xor fdivs jp data16 in test push push mov add or aas sub lock jecxz insb ficomp out bound imul jb mov aaa jns nop xor xchg xchg push or into jae sub clc lock adc push inc popf pop hlt pop dec cmc xor lock push decb jle scas xchg test push sarl stos pop inc (bad) mov (bad) push cmpb mov cmc inc jle stc adc data16 adc int cmp sbb mov (bad) scas std dec pop jmp inc fnstcw inc mov inc inc push (bad) adc arpl mov out shl (bad) cmp mov or data16 mov arpl (bad) pop mov inc lret sub jnp mov inc sbb test jp ja xchg mov cmp bound movsl out inc mov add cmp ljmp ljmp sub je les sub imul jno or mov inc out pop int3 pop in jg mov fld mov dec out cmpsl mov pusha xchg jle adc pop pop pushf xor xchg mov clc bsf push cmpsb (bad) jnp pop rorl stos xor and mov mov (bad) cmc cmp ja enter dec or dec ss add sbb aam (bad) ret mov pop adc or push rolb pusha sub outsl mov repz js popa dec jmp popa xor popa adc mov or ja rcl sti cli pmulhuw xchg adc fwait inc sbb cmpsl push adc lea push fcmove (bad) xor imul jge mul sub sahf test loope sub xchg int inc inc imul test mov stos (bad) jbe push mov (bad) dec das jnp (bad) push imul dec outsb sbb imul or push out fsubl mov adc push ja and leave aad int loopne inc cmp adcb out scas cmp cmp out aam (bad) jae sub arpl out fs or call jnp fcomip cwtl and jg insl inc dec enter icebp loopne mov jl stos lret sub jbe jns dec (bad) (bad) (bad) ds dec scas mov pop movsb jne sahf dec jbe arpl ja jg jg,pn xor inc pop cmp mov jne ret xchg je cli bound cmc inc push lret cmpsb inc stos inc std loop jae sub inc cs xchg adc sub add mov lds bnd or mov pop inc movsl das divl adc cmp xor decb push shr stc xchg xor leave xchg pop and xchg je mov jle pop (bad) and xchg sbb jp jb push out jnp adc inc les mov mov jae int3 or hlt das jecxz cmp xchg cmp movsl inc out shll in sub lock repz push xchg cmpb xchg push fwait ljmp aad aam mov cmpsb sub lcall fmuls adc jb (bad) data16 inc pop xchg pop in or inc mov pop lods or lcall addl xchg mov xchg add cwtl popa ret add xchg (bad) push lea in icebp xor cld sbb ja insb in insl adc jno loopne cmpsb dec xor scas (bad) test gs std int3 cli dec sub (bad) ss stc fisttp vmovups outsb lcall mov jge adc jnp inc fildll jg jmp int and jmp inc and sbb pop cmp mov sti add and add fsubrs loop pop loope fidivl inc scas adc stos mov add outsb add cwtl or add shrl mov adc or rcrb sti lret dec lods xlat or xchg push push scas adc icebp cmp jae outsl movsl fcomip movsl (bad) xor in rcr push push fsubs gs xchg cmpsl push ljmp (bad) sbb dec cltd je mov sub xchg ss lods ret cmp push push in xchg dec bound push xor les mov out xchg dec fcmovnb dec add sub aam and jl stos adc clc call jo (bad) popa xbegin test mov xchg outsl jnp pop mov out addr16 jle dec mov arpl ffree xor shll sub push xchg and in movsb incb in push mov orl ficom idivb roll lcall lcall pop loope or adc mov test xor int3 sub cld es lods jo jno shll jo in xchg push add and aas arpl sbb dec (bad) sub mov or dec xor push xor iret pop add dec cmp jge mov and xchg mov (bad) or cmp pushf pop mov xchg mov dec testb inc shrb xchg mov test repz rclb shll jo notb lcall jo call aaa in sbb test cmpsb out xchg or stos in aas jge pop in (bad) mov xor iret inc movsb lods pop mov scas mov stos dec jne aaa repz movsl (bad) cmp cmp push cmp lret pop ljmp add popf and sbb inc std jns inc mov jle loope ljmp pop stc andl inc test lock add push dec jno jns std and daa in ljmp mov mov mov (bad) and mov or jge sub dec jle (bad) mov std out push in mov xchg pop and jmp ret add (bad) push sub cmp pop out or or test inc mov iret out imul xchg adc mov bound pop ret scas mov cwtl mov sub cmpsb sub leave adc arpl sub loope daa mov subl cmp lods xchg insl fcmovnbe mov inc mov in inc repnz push add sbb into hlt mov sti jno stos adc sbb sub pop in rolb jecxz or sub adc (bad) test sub cld clc pop sub cs hlt sbb push nop pop add call out stc test push popa je inc xlat jae fs add mov rorb mov scas inc shld xchg xor sub xchg jo cltd add icebp mov push roll inc push jns mov mov cmp lds cwtl adc gs insl mov ja dec sbb cmp out addr16 xchg sub loope stos add loopne fsubrs xchg clc push cmpsb fisttp movsl xchg jge mov rcrb or sub sbb cwtl pusha adcl sbb mov out mov push stos (bad) repz mov cmp aam shrb jno jo,pn jecxz (bad) int3 xor dec mov lcall test mov in lahf jmp pushf push inc sbb out mov leave inc jl cmpsl out (bad) es das outsb adc in or out mov mov ja loopne vpmacssdd fsubrp push jmp fimull cmp mov ret sbb movsl pop inc mov arpl incl xor vshufps scas icebp sbb bnd jae sbb cmp fidivl push imul bound inc pop fwait xrstor xor das fcomps mov xor push int3 adc dec mov stos cld insl and lahf mov daa push testb cltd inc jl fstpt test cmpsb jb divl je in insb mov je out outsb push add dec cs cs out jne cli sbb sub mov fs ret js shl xchg movsb push into dec inc mov xor jl mov fsubp out int3 mov frstor cmp rorl adc pop lret sub sub outsb int3 outsb je stos adc sbb push cmp test sub xchg cmp jecxz subb call mov sbb jmp scas xchg jae adc cmpsb push dec faddp cmp rorb mov outsb push cmpsb and movsb (bad) mov pop rorb testb mov push xlat cltd out bswap xchg inc or dec aad stc cmpl mov sub xor fsubrl adc cmpsl sti mov or pop mov xlat xchg cmp je jbe bound pop pop sbb add inc out repnz sub icebp mov fisubrl movsb inc mov jno mov xor outsl shll push push faddl or push dec mov (bad) (bad) aad es push dec cmp add sbb sbbl dec add (bad) out add xchg xchg pop cmp mov nop add cld scas pop push cmpsb fcmovnb jecxz pop aam scas adc jae lret mov dec adc push shlb dec jmp popf aad xchg das dec inc sub pop cmpsl nop insb loop test daa (bad) aaa enter mov xor imul js jg mov arpl xlat add mov cmpsl rcrb sbb ja sub or sub pushf imul xchg test daa jmp int3 push xlat jb stos jns cs call dec xor cwtl hlt dec lds fistpll cmc mov (bad) shrl ss xor cmp sub (bad) ja or dec mov pop jl (bad) pop jg in add ficomp hlt xor add adc sub test outsl cmp idiv data16 and and pop xchg dec mov mov outsl xchg pop repz cmp push add (bad) push cmp xchg shrl jp and inc xchg (bad) (bad) xor cltd out sbb add xor (bad) lods cli push aam shrb jb ja cmp xchg cmp pop xor (bad) fldt xchg and add or lds leave scas (bad) mov lcall adc sbb mov daa cld das inc pushf mov xchg outsl (bad) push test ret imul inc xchg jg mov pop (bad) shlb fs sub cmp jbe or cmp arpl push (bad) jmp stos call movl pop ljmp sub repnz sub or je dec adc mov aam mov jns rorb fbld cmp lret or adc dec dec in mov inc mov test inc mov popf and out jns (bad) cmpsl inc idivl xor add lcall in add scas mov lcall push jle mov or in imul rcr jae out and mov add xchg and push sub (bad) xor mov pop repnz jge add (bad) stos ret push dec mov dec pop inc outsl jb mov dec dec xor (bad) lock out sbb loopne mov in sbb fdivl sahf xchg sti popa push mov mov sub mov cltd cmp jae push mov rolb push sbb jmp nop jge or adc xlat mov inc xchg sub in (bad) lods repnz ds jb cmp es loope dec xor push jmp (bad) xor adc pop test addr16 lcall mov (bad) std insl inc lock mov cmp idivl in sti or int push add repnz scas mov pop cmp cmp test in test mov inc insl pusha pop push test cs push (bad) pop fcoms pop inc or movsb test jae in nop add fnsave cwtl cmp mov pusha test dec pop cmpsl mov add fdivl out scas or in neg (bad) push rorl cmp inc movsl pop and or and daa test call xor pop push adc inc dec cwtl jne jge jge fidivl sbb inc out sbb repz mov mov and fnstsw nop insb jbe jmp xchg mov aaa jmp dec lds jecxz out or in mulb jae lds xchg push sahf mov mov push cmpsb aaa out mov pop xchg jl,pn sbb inc (bad) shl int jnp (bad) add shr and (bad) lcall das jp addl movsb xchg xchg or xor lret push in cmp sbbb test and push lods std ret repz mov push cmp loope cltd mov ret les rclb test push sbb push xchg fsubrs int3 jge ljmp iret test inc mov jecxz mov cmp mov mov or cmpl lock jp mov push fist dec test rcrb jae push aaa sbb sbb pop mov or and in (bad) leave int test mov dec sub pop nop sub dec add mov fadd xor aaa add ljmp jnp add sbb jne push lret out loope (bad) pop mov fwait mov setno out add idivl leave or (bad) xor into pop inc and xor add test aad dec adc nop iret out hlt insb and data16 or testb push sub mov pop or pmaxub (bad) xlat xor fidivr jge mov cmp mov (bad) bndstx je das scas add ret pop inc es adc push jge mov mov xchg pop sub enter mov imul adc jbe outsl shlb dec (bad) shll cmp inc cmp add xlat push into out xchg push lret shrl inc lret add mov or mov stos push stos xchg dec or int3 mov push xchg fcompl sbb xor mov jp mov mov lods shr iret dec pushf das inc (bad) stc pop outsl stc push imul fcomi daa adc xor xor lahf push and outsb dec push scas mov and (bad) cmp fwait inc jno clc adc and push leave int xchg mov inc sahf or cmp fs (bad) pop hlt dec sub in sar popa cmpsl outsl (bad) mov inc in imul in push push push pop mov pop pop add sbb cmp nop std and jl inc jo arpl adc cmpxchg jl test rorb mov inc pop mov dec sti (bad) out jbe mov pop hlt push call adc pop ljmp (bad) scas lods adc cmp sahf adc inc cmp mov out decl mov cmp lock cmpsb dec stos sahf scas jle std mov push fnop cmpsb addr16 arpl inc cmp out push adc in (bad) xchg mov mov call sbb aam and clc clc cmp pushf rol xchg sub cli dec jo and lea lock pop mov test test and ficomp aad aaa mov lahf loope jnp rclb xor ljmp fisttp push dec mov fmuls ljmp adc mov adc lahf bound jno mov aad data16 xchg test insb inc (bad) popf fsubrs jbe push int3 testb push add pop popf mov cmp pusha mov mov sub dec push push daa aas or (bad) sub mov xor pop je (bad) push push sub and out jne sub jg mov icebp ret cmp or hlt (bad) push popf cmp xor push mov test in test leave call lods mov imul mov fistpl test xor das mov adc outsl sub mov in (bad) hlt std jp sti daa add leave sub mov xor xor fidivrl test scas psubb jmp sbb sub fdivrl (bad) and add dec cld int (bad) push pop cltd jne inc mov cwtl sbbb jmp inc add je loopne out enter in scas jp xor push sar je and cmp movsl add mov rorb jl arpl call cmp cmpb pop dec scas mov and add ss mov hlt sbbb lods cmc dec xor inc cmpsl stos lcall jne sahf scas sub xor pushf sub lock imull adc adc ja sub push pusha cmp adc insb ret enter dec fist das (bad) xor je pop std dec data16 mov or jae (bad) pop sahf and mov testb jmp fisubrl int3 pop cli xchg jge mov xor sbb ret ret cltd out fisubrl in hlt dec fldl xor lods adcl stos in rcll jae jle (bad) or jo scas push in mov cld xchg shl add push xorl push cld sub (bad) cwtl imul (bad) out xchg dec scas sbb jle cmc pop popf mov sbbl pushf jle imul sbb addl jmp jno dec sub sbb mov fwait insl stos push stos mov dec and lds mov aad cmp dec test movsb jp xchg pop fs sub mov aaa sub jl mull cmp sti stc xchg dec inc fnstsw adc call dec daa add cmp dec dec or fnstenv or inc popf (bad) (bad) mov mov mov rorb mov lods pop popa ret shll inc fwait cli or ret loop adc stos jle mov mov fucom mov lret imul pushf push out repnz xor mov fcmovb js lcall ljmp clc sbb inc xchg mov pop jl push jecxz jnp loop stos (bad) in jb popa inc adc (bad) jnp or dec scas mov xor fildl repnz out xchg push and out ss xchg shlb dec push outsl push xlat lahf sbb lcall (bad) int3 (bad) (bad) jg pop add sbb or jnp mov add sbb cwtl sbb movsb iret inc and enter adc mov and dec cld dec lret jp or jle inc jnp sub sbb mov cmp add insl add xor mov and test cld xor dec outsb pop dec sbb xor push sub adc pop rorl rclb loope and les ja jns aad cmpsl pop int xor dec enter (bad) mov cmp subl add xor xchg sub pop push out hlt add adc aas lock loope adc (bad) jae loop xchg xor enter out jp out jo test in mov adc stos pop inc vpmuldq or adc cmp adc mov push popa mov enter sub cmp imul xchg testl mov call (bad) pop cs jl fistl ja shlb xchg das fldt cmp (bad) cltd call dec jle add jl mov mov mov (bad) into pop shl jae xchg push sbb aam pop orl lahf in inc xchg sub stos pop (bad) (bad) and mov mov jl mov sbb or sbb repz daa test pop fwait mov out mov int out jo sbb mov insb jne jbe cli push (bad) aad dec push cmp dec xchg in cmp mov push cmp popa mov pop js (bad) and rcrl ret or inc test stos psubb repz or mov lock xchg dec loop dec add aam dec scas mov test inc xchg out dec or imul vpor adc notl popa rolb mov in aas mov fcompl fcom ja sub cs inc aam repz cmp xchg adcb xchg push repz icebp xchg ss mov ljmp rolb test push cltd xchg fs bound (bad) inc xor cmp pop cli push inc mov les mov bound ljmp fistl sub test pop jns jnp imul push repnz xchg mov cs adc adc daa inc sub cmpsb enter hlt adc mov in aaa mov pop pop leave mov imul inc aas inc pop jno jmp sbb (bad) jnp roll repz fiadd mov cmpb mov mov les ljmp loop push jle and push ljmp push add mov fsubl fadds pop mov cmc xchg and inc mov cmpsb in scas sbb (bad) (bad) daa popa push sub mov (bad) mov repz stc jg mov arpl cwtl aas lcall fdivs loope push loope pop mov push clc add pop fdivl loopne,pt data16 or sub push popa sub ss jle mov jg enter jb (bad) xor push cwtl push push jle into dec xor cmp mov shr jge sub xchg or dec les sbb aad or cmp (bad) loop std das jecxz cltd push lods fsubrl dec push stos sbb inc data16 mov push sbb xchg jge in xor data16 xchg mov addr16 int pop jne lods out push cld xchg mov sub mov mov pop sub stos and adc lods out jmp dec gs add and in mov mov lods cmp lds add xor inc push (bad) insb xchg lea pop in imul adc (bad) jp cld jmp dec push clc mov ret xlat sti xchg scas and rcrb xor mov and push sub mov stos fwait ljmp mov (bad) test push cmp nop insl cmp imul jae jmp or inc lcall add xor inc pop xchg sub in jne mov add inc (bad) ljmp mov xchg in es hlt fcomps sub push les pop cmc into gs add cli fs sbb das and pop mov push sub jmp fwait pop ss cmp nop scas test mov fstpl lds or cmp icebp xorl sbb dec pop ja fs std popa int3 mov sub lods andl lods xchg push pop mov cli mov stos xor adc and dec aam and dec (bad) das and inc leave mov out ds in mov hlt mov xor jo push (bad) xor sub shrl int shrb mov cmpsb jp mov bnd sub mov stos sbbl adc iret dec ret cmp int cmpsl fucomip andb and sbbl xor loopne pop (bad) jae cltd dec adc mov mov inc lods cmc stc cmc adc (bad) daa stc lret ret adc push adc lahf or jno ror (bad) jmp ret sbb jbe imulb sub jl (bad) mov add cs lea inc lock orb es dec cld push and jbe inc and es cmpsb or stos loop jnp xchg stc loope mov push hlt push lea out xchg mov mov pop mov outsl lret pushf std inc sbb pop outsb pop jmp sub sbb notl push dec cs dec lds xchg mov out jecxz jmp imul imul jp in pop loopne (bad) jbe add push jb mov ret push mov xchg (bad) or dec xor inc ljmp xchg sahf pop test adc mov dec jnp xchg or cwtl inc cltd mov sub insl mov nop test sbb movsl mov xchg subb mov in push push jns pushf hlt notb mov rclb mov lea cmc je push jno xchg jle mov test sub mov fistl (bad) leave in sbb dec inc es data16 mov sti (bad) and stc add pop xor pop jge cmp lea pop xor xor aam (bad) push int mov mov notb hlt adc mov jl inc (bad) cmc sbb jae aad (bad) lods inc lock and leave pop xor fmulp mov fidiv (bad) pop xchg inc clc int3 dec adc xchg fwait add notb cltd xor inc and fadd (bad) jl mov das fcmovne ds (bad) ljmp mov and ljmp inc cmp and negl xor mov push sub and mov (bad) mull push dec test test pushw pusha fiaddl test lret jg (bad) sub inc push in sti push shll mov and pop sub test shl rcr and or inc cmc push clc pushf mov fadds aam sbb inc or adc cmp cmpsl out fwait enter inc std mov xor lahf popf arpl and mov jle pusha mov decb cwtl loope jno jne dec xor inc sarb rol scas test shrb push lret bnd fist mov icebp decl jno test dec bswap out sbb adc push sub addb mov adc mov push jmp div sbb push ds mov push popf xor push mov (bad) jle ret popf jne sub inc iret xor int3 clc mov out ror cmpsb imul cmp (bad) xor shr sub insb popf aaa sub mov xor adc repz cmpl (bad) addr16 sti mov jae insl push lods cmp adc loope icebp or leave sbb aaa jb (bad) mov aad mov xchg xchg ss and xor aam mov leave dec mov loop add or sbb std (bad) out dec pop dec sub or jecxz inc repnz mov scas lret inc jo orl daa mov sbb jp cld outsl leave push add push cmpsl pop out out cmp data16 push adc pushf mov fisubl into xchg mov inc inc push lds xchg sub pop (bad) jle rol and or inc mov lret jnp or sti adc sbb pop push daa adc adc and sbb lods (bad) mov jbe fs pop push or ss and out out or lods inc call and dec das shll mov cmp std inc jb push xchg into pop push cmp fxch or bound xor and popf add lret rcrl mov mov nop xchg sbb sbb mov xor sub inc push xor cltd push add cmp sub sbb add ja (bad) xor sbb pop sub sarb jg inc mov fiadd xchg jns jbe (bad) mov lods cs jge pusha pushf mov pop lcall add sbb scas adcl mov xor push jo xchg incb popa lds insb cltd fild sbb add aaa xor movsb jmp fs (bad) push sub xchg cmp sub adc mov add cmc rorl add sub dec jle cmp adcl rcrb je cld adcl fucomp cmp pop add in jbe xchg adc sbb data16 mov loope div inc es into pop hlt lds movsl sub mov pop push loopne mov pop mov xor pop add (bad) out cmpsb add iret punpcklwd cld mov test or rorl sub pop loop daa inc inc and xchg add pop mov iret inc test xor pop loop sbb xchg and in lret insl test dec dec add sbb lret xchg stos imul fwait cld pusha mov aas jecxz cmp mov fisttp imul (bad) shrl pop cmc shrb arpl sbb test inc xor adc lahf dec mov lahf jg dec jb int mov popl jmp adc loopne outsl mov test aaa add movsb jmp sub or test mov lods pushf out lods mov add repz stos jo mov jmp sarl lock shl inc xchg and cld mov push push jno dec enter sarl pop and pop dec shll lcall sbbb xor jle dec popa cmpsl mov loope push inc mov dec jnp stc ljmp adc adc fstpt imull mov cmp mov or lcall inc inc leave jo aad inc xchg mov and lret ret xlat adc mov lea or mov mov pop sub vpsrad (bad) (bad) xor fwait jecxz and jbe jle jmp xchg xlat xor js push jns mov cmpsb lds ja insl cmp pusha flds out add aaa inc scas cmp nop lods pop add ss and cmp flds dec and and mov aad pusha mov dec or and or dec sub movsl in or jmp jge and xor adc (bad) ret (bad) aam jbe mov pop (bad) int3 push dec pop sbb xchg out xor and aad mov (bad) cmpsb out loope add es mov out test pusha fidivrl mov dec pop mov movsb pop cltd add imul je lcall imul mov fsubrl inc loope xchg mov pop push xchg sahf lea movsb xor jb mov push enter fidivl and incb mov ds or inc xchg incb cld outsl icebp arpl push pop daa pop xor addr16 icebp sub mov mov cmp jp iret pop xor push xchg rolb into jns mov xor push xor and cmp enter jno ret xchg mov test decl lea movsb stos xor adc aad mov pop sbb dec sbb mov xlat mov push xor mov outsb (bad) lock mov test add pop or dec jnp into mov xchg pop mov push add out mov mov fldt rclb lods arpl mov pop (bad) jge test mov sub divb stc jb pop inc fnsave pusha data16 jbe xchg dec push in int int and inc mov rcrl js ffreep arpl xor dec das pop and movsb mov enter loopne push dec xor mov aaa pop sbb sbb aas sub (bad) jb mov (bad) and scas int pop ret stos mov inc mov std out mov lcall adc enter adc in ja push (bad) sbb push push xor mov (bad) cltd inc add add test push sbb outsb pop push (bad) aaa inc pop cmp xchg jmp jge push and jbe clc popa scas js xor xor subl fcompl leave (bad) cmp push push mov cmp stc test jp data16 sub xchg jmp mov nop repz ljmp jmp sti jmp adc enter test je jecxz and jo nop daa cmp out stos mov and (bad) idiv xchg mov (bad) mov pop add adc in and sub mov lcall add fistp pop mov div mov call (bad) cmp mov loopne mov cmpsl dec loope icebp aam bound xor arpl fstps (bad) sarl loop push mov push sub rsqrtps mov leave in cmp mov stos outsl jge sbb in inc popf icebp pusha fisttp push fdivrp cmp (bad) pusha outsl mov push test dec out mov int3 sti dec inc inc sti fs shl (bad) adc jne or rcrl xchg cld mov xchg arpl push (bad) xor test mov hlt cmp sbb push mov adc cmp mov bound cmpsb mov in out int3 (bad) mov or xchg lcall loop int push std mov mov sti cs fs xchg sbb mov mov jecxz xor lea push xlat icebp je rol xchg roll push xchg call adc js xor push mov mov gs cmp mov stos mov and push fidivl xchg lret mov imul bound aam cmp scas xor push sub gs push mov cmp cld jns mov mov sub das cmpsl add sbb inc or cmp pop push popf out sbb pop jb xacquire bound and fucom mov cmp fcompl (bad) fcmovnu ss bnd testl les cmp fucomi js mov jbe pop je add sbb mov call mov jecxz sbb (bad) mov pop addl imul and (bad) aad sarl loopne nop push push cmp nop lahf ret (bad) xor popa sub xchg xchg leave mov lods test scas divb cs out pushf nop cmpsl push cmp outsb or adc xor lea rorb fbld test jno adc loope and push sbb mov lods popa adc xchg stc xor lahf push pop push popa test es mov popa sbb movl cmp idivb sub arpl lods pop xor cli pop jp push or add mov es jae or ds mov or outsb out clc mov push adc xor sbb int3 rcrb test mov in cmpsb lea mov push add cmp sbb jp push imul test and mov addb cmpl movsb push pop mov mov sbb fldt jp ja (bad) mov xor dec les das outsb add je pop outsb cmpsb xchg adc mov jmp push (bad) std xchg ret xchg outsl add jp sahf (bad) lahf xchg rorb xor fwait lds xchg jns pop and imul adc push jne inc mov cmp loop out add add sub jecxz cli movups jnp jge dec (bad) aad ja and xchg ljmp (bad) xchg frstor jbe xchg pop and dec pop pop (bad) mov out ss pushw stos jg imul les xor xchg roll push push test out ss lds sbb dec and orb or pop (bad) dec mov pop rolb push inc scas sub insb add rcl xor in in xor icebp lahf gs int3 mov jge pop jno scas push fisttpl push test lods scas pop adc add jle pop pop cmp pop xchg js outsb nop pop lret mov pop outsb fnop mov and or lret mov dec dec dec fist jo jl mov inc pop scas fnstsw jle and fist aam iret cltd pop sub aad fwait xor sbb push jb out dec xchg push push test adc (bad) adc lret add ds push add inc stc cld mov xor add addr16 rorl loop xchg ficoml enter cmp sub cmp les (bad) xor je,pt add hlt and pop xor outsl es (bad) fisttpll int3 inc dec subb out je psrlq mov int3 cld (bad) nop sahf xlat mov fdiv sahf and mov add pop xchg das outsb lea xchg cmp xor aad adc hlt pushf pusha dec ds ljmp stc hlt push fildl imul lods mov in and pop xchg std cld int imul mov cmp fstp xor inc xchg stc jnp outsb (bad) dec jno das out movsb fnsave lods mov xor xchg and xchg cmp mov jp cmp nop and xchg ljmp loope mov xlat test dec ror imul push xor adc xor aam dec ja gs pop les inc es movsl fmul mov mov sub ja,pn sti outsl add ja fistl lea sbb out push mov rcll jnp sub inc (bad) rorl mov xchg sub popf pop mov addr16 (bad) xor mov xchg or mov and adc sbb pop sti cmpsb fisubrl rcll adc jg sub lods xchg lods test pop loopne add push or (bad) sbb pusha lcall fisttpll mov in push (bad) sbb (bad) fs mov sub lret jae movsl test pusha cmpsb out cmp les jp add js xchg das pop lock andl fcmovnbe mov inc jbe sti inc adc mov lock js sub sbb imul push mov pop hlt les cltd sub mov jecxz mov call mov push mov mov mov pushf mov addb lret xchg test cmp (bad) mov sub and dec push sub arpl sub lcall add pop roll pop jle fistl adc ljmp popa jno push call adc rorb (bad) ficoml bound sub mov pop add shl add mov xchg (bad) mov popf pop add lcall shrl push adc in jmp dec data16 jo repz mov pop sub stos popa icebp out dec iret and in add bound loop ss leave std mov in jge push ja add ljmp xchg xor xchg adc rcr iret ljmp jno (bad) idivl (bad) sbbl jle adc andl je sahf lds add lods cmp movsb ljmp push add testl xor jmp and scas inc lret out sbb popa (bad) push cld aas shrl dec or mov push dec dec push and or imul or outsl je push inc dec xor jbe out in test mov jmp or out push and test or cmpsb sbb mov mov mov loopne adc fmull push lahf mov jmp ljmp pop rcrl mov imul and enter inc test fs sub push sbb test insb mov aam cli pop xor mov jns mov adc data16 dec leave rclb push sti aad inc out inc adc push inc std lret mov or loop push std loope cmp adc icebp pop sbb andb mov or push mov out (bad) mov jb xlat inc icebp xor or data16 mov mov test adc add loope jo push mov sbb inc mov lahf sub jns hlt lea (bad) popf adc loopne mov popa sbb sub mov loop cmc jmp sbb jmp xchg mov out roll es (bad) mov fnstenv out lret nop bound dec cld aas bound fisub push xor or xor push or pop add addr16 mov jl sbb jb mov fwait lock lds test rcl int or ja sbb fsubr sub dec clc and test dec fwait dec addr16 scas jo fucomp flds jo in stc jp pop fs and xchg jne push sbb fildll add lret je lods loop cmpsb ss (bad) int3 (bad) mov pop inc pop jnp lock mov cwtl test dec out jmp cltd icebp inc sbb dec clc mov adc movl ss enter outsl xchg mov push push sbb (bad) subl jo jp add ds dec (bad) xor mov cs xor push add sbbl and or pop cmp mov ficomp es scas insb loope sbb movsb mov xor and test xchg push add mov je (bad) into inc fwait xlat test sub add pop and or les call pop cmp mov lret push pusha sbb sbb daa sti cmp orl and call popa outsl cmp adc mov pushl inc pop inc add add add lds fnsave fistl jmp test lea pop xchg or nop xchg inc test jnp das mov mov js push call sbb les push adc push sahf jl and xor iret jne xchg fnsave dec movsb stc in aas pop add pop mov test mov cmpsl mov pop pop jae iret pusha pop sbb cmp ret movb xor pop mov xchg mov xchg std mov jb aam xlat mov sbb pop xchg movsl ret mov in (bad) ja movsb inc into cltd icebp pop adc pop add js pop cmp cld jle (bad) push daa pop lods inc sub (bad) push xchg pop and (bad) mov mov fdivl xchg mov mov lock inc dec out mov mov or stos pop jb jecxz xchg inc and cmp or xchg sub mov pop jge enter mov add sub add push into je sub (bad) loop addl push loopne jnp push push push push mov insl push or lea sub sbb (bad) mov out add jmp ret jne and ret daa cmpxchg test lcall test mov stc push inc pop pop stc dec lds pop pop push les outsb lods test cli movsl sub addr16 xor jmp mov repnz in test adc dec test aaa fdivl fs (bad) pop cmc dec mov repnz pop out movsl lock hlt loopne subl cltd dec out shl xor pop mov inc mov rcrl and addr16 daa rcrb mov mov leave test mov hlt ljmp or mov inc inc push mov int mov pop cmp leave push inc xchg xor jge xchg cmpsb dec add cs dec lods fwait rolb pop in fsts sbb out mov push sbb sbb and adc roll shll ret in idivb test (bad) mov jbe fildl xchg cmpb mov inc insb rcrl frstor aas aas stos sub jl rep ja add sub jo movsb mov fninit xchg add jle pop test hlt xor or mov jae mov adc cwtl mov jo outsl idivb pop cld push call stos fwait aaa cmp fild xchg cli test mov pop out mov sub jle jmp inc out gs lods sub call sahf mov stos rolb mov mov int mov popf mov or inc adc cmpsl fnsave rcrb xchg addr16 lcall leave test orl push aam stos outsl fsubs mov (bad) fstl ret xchg jmp mov xor or lods imul out sbb pusha sbb push or daa sbb push cmp (bad) xor mov cli sbb add pop insl lock ds push and cmp inc gs repz mov insl je lret fidivr mov (bad) or sub xchg aaa lret dec or outsl mov add and lods in jo jb divb xlat push jae daa cmp push rcrl (bad) or sbb jnp inc outsb std mov cmp xchg mov outsb test mov repnz jns sub int3 fsubl mov daa push repnz or pop mov jo add mov insb inc fs mov inc push aam xor mov cld (bad) aaa popf mov inc mov jmp xchg jg fdivrs pop xchg cld mov in lahf add sarl mov jnp clc repnz adc inc (bad) hlt jp (bad) adc pusha xchg dec cwtl xchg arpl lods ret sbb pop push ss inc mov xor jmp leave and addr16 rclb and xchg pop sahf adc sbb lret aad and xlat or lods dec sbb (bad) mov or pop adc push fisttpl pop iret lahf adcl mov and push testb out loop xlat lahf repnz in stos or rorb xor push aaa loope cmpsl imulb popf lea int3 lds fcompl sub jb or dec lds cmp pop inc sbb std sarl xchg ljmp mov cld inc test add cmp mov push mov or nop mov or xor jbe jbe adc sbb sbb rcrb inc aaa or rcrl adc jno cltd mov jecxz cli stos into mov cmp test cmc or scas daa stos dec mov scas js sbb je rcrb sub les std outsl in popf loope or gs jno pop inc or fisubl jge sbb pop xchg mov cmpsl xor test (bad) sbbl push aaa sbb lods pop push sbb jl in sub jge test mov mov pop pop bound xor inc sbb and into cmpsb xchg hlt bound jbe (bad) movsl das xor push xor jo cmc add cwtl push out test insl int fstl cltd jb ret or sbb sbb jbe loope lahf aad adc pop jbe test cmc mov jne scas mov int jg and cmpb or pop call (bad) xor lea push (bad) mov fild xor test test stc cmp cmp cwtl rorl pop imul pusha or or ja std jecxz mov dec out aam ret lret (bad) cmc aaa push es adc nop pop (bad) mov sbb lock lahf stc pushf push loop lds scas push pop leave push jg pop pushf jb or or push es movsl lcall dec into sub (bad) out (bad) hlt dec and pop lods cmpl mov lds pop in xchg xor dec add and dec rol jae sbb jle jl or cmp cld icebp into sbb pop les sub add in enter sub mov mov jecxz xchg pusha cmp xchg cmp addr16 dec pmullw test push push out imul sub loop ret std jecxz add push or aas or notl jg fs adc loopne in mov mov mov and add or cmpsb lret inc (bad) ret ss jne lock sub mov pop lahf stc inc iret adc shrb dec xchg push ret mov lahf sbb jb sahf rcr adc ss xorl stos jp decb mov cwtl bound in add jb cmp stos js jno fildl or scas out mov xchg or test jnp (bad) repz out rorb (bad) mov ja push push in movsl dec insb cmp mov es pop mov in sub xor xlat test fwait nop mov jno mov mov jge mov cmc xchg mov add add xor cmpsl stos sub mov inc mov andnps divb xor sub xor mov xchg repz lock int inc jle fistl cmc jbe aam pop mov clc lods jb imul sbb int3 faddl jp xchg or shlb cmpl shrb xor pop rolb pop xchg lock js add js insl xchg push xor insl dec in les pop (bad) stos mov sub sbb pop test aam (bad) mov or aad push pop pop (bad) aam jns mov and add dec ds push jl jecxz sahf das fdivrs xchg stc or aam int3 push xor in add cli ljmp out push (bad) push stc and pop sbb add pop sub or or pushf or add (bad) (bad) mov jbe jg adc arpl js lock lret daa adc fild adc outsl roll test jo mov xor les gs lahf cmp pop xor dec popa add aad mov je fiadd stc in fsts (bad) rol pop and loope icebp pop inc push lcall lods inc cs std ret xor mov (bad) sbb add pop xchg push sub hlt mov xor mov ss lods pop inc notb push mov push inc stos cmc movsl adc and adc cmpsb lret or sysret stos shr or aas xor mov push out icebp pushf pop pop insb adc adc xor lock stos and mov sbb dec loope aam cmp or xor in icebp push stos cmp fldt push cmp jecxz or out and pushf jg je subl js iret pop (bad) cmpsb sbb sti mov xchg movsl stos test xor pop (bad) mov jp stos mov or out dec push cmp inc dec rorb sahf push adc sbb mov leave loope push mov cmp out xlat (bad) cmp stc cmc xchg int3 mov rcrb push das (bad) push out sbb popf (bad) mov mov pop mov mov (bad) das inc lds mov xor xchg pop daa movsb pop push cmp xor je mov push (bad) mov or push arpl loope mov jns movsb jmp push shrl xchg cmp sub out popf pop mov scas sbb daa push mov iret bound cmp (bad) xchg add lods ljmp incl aas cmpsl mov daa cwtl adc sub popf push ret out mov add rorl mov aad or jle (bad) push nop adc and lahf xor dec pop sub cmp sub outsb cmp or int3 or adc lret wbinvd pop mov pop cmp mov jecxz cltd adc mov lret sub jle cs loopne cmpsb loope dec mov lahf push (bad) pop out cmpsb daa xor enter sbb loope arpl add ja jns mov ja xchg xchg das mov (bad) out add mov call gs pop fdivs idivl stos gs pop clc pop pop mov xchg leave fidivl add fisub sub adc add lds test mov pop dec sub stos adc (bad) fstps jle mov xlat xor repnz mov xchg inc xchg int3 stc and cmp cli cmp loope imul gs xchg fwait add lret rcrb clc es add pop out jl add jo mov repz xor push jnp push cltd js push push dec mov and out and aam push es push lahf and jbe (bad) loope xchg aad cwtl pop inc hlt out fwait mov xchg adc mov mov adc int rcrl cltd jb xchg mov test add push jl test aas dec add mov and sub push sbb mov and mov fs fsubrs push xchg outsl imul out mov mov roll lret cmpsb mov frstor xor daa mov xchg xchg pop mov lock stos daa jnp paddsb lods test dec mov xchg mov lret and xor movsb push push mov add xlat or xor daa imul pop sbb fdivp xchg xor repnz std and es mov push push mov pop sub inc sarl push movsb and mov sbb pop sub ds cmpsb pop xor xchg cwtl dec inc cmpl popa aad jg cmp dec mov scas test iret jecxz in xchg fstpl dec adc out xchg je pop pop call adc (bad) cld mov imul sub pop lahf mov pushf and jo,pt imul sub insb outsl add scas hlt sub jmp std xchg cmp push jecxz and jle int3 jne or mov (bad) dec daa shrl fs push imul subb dec jle call in mov fst and notl mov inc imul xchg sub int3 mov out sub sbb pusha sub fiadd lods movsb in sub movsl loopne adc insb cmp movsb mov std xor pop mov (bad) hlt mov es pop push lret mov jb popa sub inc cltd mov scas add hlt idivb mov add in or inc xor insl in mov mov mov dec mov lock stos scas sti fucom pop scas adc jb (bad) mov gs push jl cld push (bad) mov dec sub dec adc jbe les cmp pushf loop jmp xchg cmpsb insb mov stos pop adc outsb (bad) mov (bad) aaa fdivl jmp xchg mov sahf hlt mov cmp push jns push mov push add idiv test inc xlat arpl cmpb sahf test das lods xor push ds mov xchg mov ret cmpsl jae insl in (bad) hlt adc pop ss adc lds std sub xor pop pop sub mov in add push or (bad) test iret mov (bad) and out push scas in (bad) jecxz lds jle bound xor mov es aam loope add pop dec and fstl xrelease sti push push or jl push sti jo jle sub decl pop xlat enter sub mov push sbb (bad) popf data16 in in and dec test mov sbb adc or fiaddl div hlt mov jge push (bad) in mov xchg daa adc ja or add or mov in int3 pop xchg sub pusha cmp jnp shlb aad mov lret sub lahf cmp xchg (bad) jp mov repz sub mov xchg or dec cmp adc inc test mov daa adc shrb pop jg adc gs pshufw cmp mov xor cmpsb mov mov scas int3 dec rorl mov clc mov scas (bad) mov jl xor (bad) aad xlat mov stos test and pop lret mov movsl jae and mov ret jl add aam push out jecxz mov xchg shrb (bad) xor lock adc cmp das push rcrl in ret cmpsl stos inc cmpsb vsqrtpd inc pusha jne nop and popf mov pop or pushf push in ret lret or jmp jp xchg and inc hlt mov push fs (bad) pop pop cmc jo mov adcl mov clc aas mov fisubr jo in push je dec add cmp and repnz adc push xchg fidivr test js push nop or sbbb dec (bad) (bad) pop sbb int3 xchg add dec jbe imull les adc lea lock push sub sbb cltd cltd (bad) nop and cmpsb rcrl fisttpll lock jae mov and cld in push in jecxz cmc jns push sub cmp es sbb mov mov mov or add popa fwait rcr leave or xor or fwait and sub les outsl pusha cs cltd jae xchg jle inc pushf mov mov test sbb adc mov mov fdivrs pushf sbb je push pop push cmc les insl jnp and in das cmp mov pop andps add adc xchg sub pop aad imul dec mov ds lcall mov ret cmc adc add lods push xchg mov add lods call xor sub mov sub sub adc ds cmp mov lahf adc rcll or ds aam in mov cmpsb pusha (bad) fs cmp sub and mov lds je mov or adc push imul fmuls and ror jge mov add lret popf mov cmp inc insl jmp sub or xor mov iret lock mov fcoml mov mov push sahf imul cs aaa push iret std (bad) pop dec inc outsl addr16 mov and sub cli sub xlat xor insb repnz hlt enter sbb andl pop add sarb outsl dec stos jne (bad) cmp fwait sub je in dec gs or out push sub ret cs in jg and or iret xlat cltd mov (bad) (bad) jge and sahf out add jp dec ret sub jb arpl fwait cmpsb ds loopne rcrl aad sub lahf (bad) loope lahf js sarl movsb sahf pop (bad) dec iret icebp jnp insb fdivrp push mov inc jnp sbb jl and sbb mov das stc aas push cs dec sbb mov jb xchg xlat fistpl lea insb or adc gs xchg xlat aas sub xor hlt call and mov push sub daa inc cmp mov xchg loopne or out out jo mov rorb xchg or out loope xchg and sahf pop bound lods rcr mov sbb repz jge dec das add pop sbb push sub fimul stos test idivl lods add mov dec ja idivl xchg mov sbb andl fiaddl xchg rorb sbb sub bound pop sbb int mov andl and mov lods jmp jbe jno xor xor outsl pop stos or mov loop xchg push mov xor xchg xchg shlb aam adc or cmp and aam sub cmp push rcrl insb dec and cmp xor inc in stos fstpt inc inc dec mov jl repnz scas aaa lock rol mov dec sbb push sub stos scas push test jae aas test inc sub pop mov push enter fmul ja stc add (bad) cltd push hlt outsl (bad) in out imul cmp loopne and jb or mov hlt and jmp adc xlat scas loope xor mov add in xlat subl in js ss and ret sbbb or xchg icebp mov roll js repz fld sub mov and pushf or gs mov inc adc adc mov and dec ja sbb mov lock pushf and into jns mov cld mov je leave aad add inc movl rcrl popf inc or mov mov and mov fdivl jns mov or and imul test dec popa mov cmp ja ret (bad) (bad) and fldenv cltd mov stos sbb sub mulps cmp mov cmp out or xor and sahf pop js jno vmovaps cmp mov mov stos test pop cmp and das jbe cwtl dec daa and push mov into push pusha shl stc push test xchg sub lahf xor push lret test sbb and test cmp fmuls mov dec lret (bad) fs int (bad) repnz iret shl shrb mov jo (bad) fistp loope sbb jae (bad) call mov insl jmp scas test loop in mov mov aad ror mov inc subb or inc pop ror outsb enter mov xchg iret cmpsl fs push jo scas jbe mov sbb dec and outsl mov pop lea xchg popa adc rcrl int (bad) ljmp sti jecxz sub jno mov pop popf mov push or pop (bad) mov stc push out stos outsb jecxz adcl or mov cmp ficompl or and mov pop dec push fmull das sbb fadds or xor adc les jo leave rclb pop icebp xor sub loop (bad) movsb aad sbb lret fildll loop xlat (bad) sub sar lcall das subl cmp fisubrl fwait mov pop sub iret push (bad) sti add jnp lahf cs jecxz mov leave ret scas aam fildl adc adc xor pop dec popf and push jl mov inc xchg push cmp mov adc repz sahf cmp sahf aas push dec dec dec mov push scas mov scas dec adc ret loopne aam sub pop xchg ss jp push sbb insb or popl jbe jmp inc (bad) int3 and add sbb dec fwait push jle cmpsb sbb pop push in fisttpl ret js mov scas dec sbb cmpsb cmp cmp adc push int xchg and cmc cmpsl (bad) iret and enter dec mov mov sub out dec or mov or packssdw push sbbl mov aas sbb daa pop adc mov push pop ret outsl int xor xchg and das loop jnp ret sti adc mov ret jecxz aad push and ret dec sbb cmp out xchg mov sbb ljmp jle jb lahf sbb or js roll pop pop xchg add out int3 daa addl roll pusha mov mov cmpsl sti xchg sub mov cmp movl rorb or push (bad) ss (bad) insb movsl xchg test mov and (bad) jmp test roll data16 test mov testl mov iret std sbb lock inc in lcall aaa push adc jne mov mov sub lahf jns mov push outsb cli jae dec mov or jnp js stos dec into sub stc cltd xchg rcll cltd loope add insb push hlt mov push repnz sub or or aas jne xlat push push xchg add or sbb aam adc fadds cmp dec stos cmp imul out pusha enter mov lds push jmp ja push in icebp push fcomps roll cld ret pop daa pop aad popa fwait loope loop mov jae sub fmuls push std movsb bound pop jns addl ljmp jbe mov in test fstp mov and fwait notb cmp mov xchg lret mov mov cmp packuswb mov enter (bad) test add cli fnstsw and adc jns dec dec cmpl test jae gs jp dec xchg dec fisttpll jge mov pop dec xchg cmp push mov mov xchg jae pop mov xor bound repnz fist ficomp loope cvtps2pi push push das shr cmp jp mov pop sbb in jb mov fldl add aam js jb mov push addl adc add mov push into jbe popa clc xchg pop pop (bad) mov mov mov xchg lret (bad) mov fidivl (bad) js sub (bad) push leave or out mov (bad) arpl ja push rcrb push ret icebp shrl aam push mov data16 dec (bad) mov jle push sti pop mov fs mov or xor xchg pop clc int fs cmp pop inc icebp out mov sub test cmc rcr test pop cld sahf dec mov lahf enter xchg aaa std movsb pop les outsb pop mov ds test in cltd aad inc xchg dec enter xchg inc popf mov cmpsl ret inc mov or and cmpsl and into leave mov test sbb scas mov cmp cmpsb movsb inc sub xor cmp jbe pop sbb or cltd addr16 clc (bad) test aaa or lock int add jmp jg les mov mov push cmp test xor xchg notb loope jbe mov cwtl das fbld adc mov addr16 in push leave int lcall rorb pushf xchg sbb pop fist test test mov pop mov xor and inc mov lods and or xor (bad) fsubrl dec or mov (bad) sbb cmp ret jmp lods mov sbb (bad) dec pop clc and roll shrb pop ljmp (bad) and push inc inc pop (bad) cmp lods fistp ret mov jno push outsl add mov data16 out sti cmp and in mov pop pushf es pop add popa outsl ret jne dec add pop sarb leave out or or jae xchg mov inc or popl sbb (bad) leave lret lods cli addr16 sbbb dec adc es aas jnp sbb pop xchg rorb ficoml jb arpl push fidivr idiv cmp jp js rcll fstpl adc (bad) xor fcoml lret andl mov mov dec out add push mov std dec push shl mov cmp pushf cmp fildl xor pushf in cmp int lcall add xchg xchg cmp out ret je fwait adc loope inc xor out pusha and mov sub xor push sub dec pushf je add stos popf inc adc pop daa dec addr16 mov fistp mov sti popa fidivrl loope es jnp and cmpsb out jbe sbb iret sbbl es add pop bound add fisubrl mov pop push rorb pop call or add std jecxz addr16 rcl inc or sbb mov sub addr16 out loope aas ja mov xor std push mov pushf adc ficom in adc dec mov or mov pop (bad) push enter pushf out inc ds aad or jnp nop jmp push cmp sbb and sub mov fwait inc inc stos int3 addr16 movsb and inc jno xor fldenv and add roll and roll stos xchg push popa xlat lds loopne pushf pop sub outsl shrl mov dec cmp test (bad) repnz popf mov mov out sub fisttp in add loop cld daa (bad) imul repz mov cmp stos outsb jo mov jmp shr and cld jnp mov push fprem and xor jl jbe fiaddl push mov mov sbb cmp mov push dec add mov push out mov inc les add xlat pop sbb das cmp inc jo mov test das jne jo cmpsl pop mov push and lcall repnz or mov lock clc cmp jae mov movsl test pushf jle xor adc push (bad) mov out imul push lock xchg sbb lret cmp stos xchg pop gs jecxz (bad) sti push xor pop sti xor addr16 pop lea popa adc inc dec cmpsl jbe inc inc mov int3 into push fstpl hlt or stc nop push and in push jmp lea adc idivl jo jbe xlat ja (bad) adc (bad) fisubr mov jmp sbb sbb stos add add mov cmp pop add loop scas cwtl jno add mov fdivrs mov adc xor in cmpsb inc das mov jmp lret mov inc jne ficompl or xchg inc (bad) mov mov stos or push fmulp inc xlat mov lock divl shlb ljmp push movsl (bad) daa subb dec jns mov mov das add imul xchg repz xchg popa loop xchg mov xor cmpsw js sub jno dec lds out fwait mov push cwtl push das je dec jge aaa cmp lock jg ret loopne insb fldt xchg loope jl sub movsb push in lcall add in xor pop mov repnz repz ficom xor das push and sbb mov les hlt (bad) push and or inc jmp sub mov jo aaa rorb stos or rcll mov mov aam jle,pn scas sbb sub iret or stos mov pop xchg mov sbb mov popf adc out and pop scas or sbb lods mov shrl lea push cmp jmp into jnp inc cmpsl adc and jns in push xchg sbb out and mov cmp jmp scas pop cld push pusha addr16 loope lods lods arpl push pusha sahf lods mov inc push jmp inc push adcl frstpm(287 sbb sbb gs scas repz adc inc jl nop (bad) push pop in bound (bad) lret fwait mov xchg jp je cmp jno aas jp xchg dec inc int3 in mov xor mov sbb and inc adc inc inc and mov add inc pop adc jne pop or js mov fisttp mov dec data16 sbb xor sbb stc cmc mov or xor lahf test stos xlat inc cmp inc pop loope sub (bad) push dec jge mov out mov dec inc lcall imul pushf lods sbb push jge push or push aam cmc and mov adc or mov cmp cmpsb inc pop add push fadd out adc push subl ds lods push mov or push push mov bound imull popa sbb insb aad aaa (bad) jno mov or mov and dec ja sbb icebp mov dec rolb xor jge movsb pop push lock es hlt (bad) inc ret int3 pop (bad) adc fild push movsb add push inc aad into test out bound (bad) insb hlt in fdivrl sub mov xor andl ljmp mov push pop outsb pop addl cltd pop pop or dec mov in push dec imul fistl mov lea push mov or mov lahf hlt push call mov fnstenv mov dec aas (bad) jg mov (bad) add das mov dec dec cs icebp es or sub cltd sub inc test je push mov mov fs mov mov out rorb fisub hlt lods leave in push sub push in lcall rclb fdivp popl cld mov mov fstl call ret sahf cmpsl aam adc pop xchg push fldcw jno,pt insl div cli ds into (bad) mov jecxz and xchg mov push add out aas sahf xor ja dec jp inc mov dec pop ret scas adc mov inc push ss leave call (bad) (bad) into fs sahf lds mov add jae fs orl (bad) mov (bad) push mov mov cmp ss in mov les or fildl (bad) int3 into (bad) mov rcll in pusha (bad) fisub lods fdivrs scas test scas popa jo mov mov (bad) and cltd fistpll xor pushf and nop ss stos lds in push aad lret daa push cmp loopne mov lods xchg in lahf jmp mov or mov cwtl incl (bad) divl cmp add cs into stos push (bad) jecxz fiadd or sub pop pop rcrb xlat jnp loope pusha jecxz (bad) frstpm(287 lret jge cli and icebp add negb xchg sahf loopne cmp push fnstcw cmp mov jp sub jnp (bad) lea icebp xor push mov jo (bad) xor push cwtl enter push mov cmp rolb mov into adc cwtl push sub jp sbb loopne movsb mov mov push btr jecxz jecxz mov mull data16 (bad) int3 pop mov jne add dec pop adc jno fcomps sbb dec adc pop fildl das push fimul mov jl por lods adc daa mov dec pop iret ficom mov cmp ss mov test lcall cs adc mov cs and test gs cld repz and or push adc mov mov add push xchg pusha sub push dec aad mov adc scas xchg jo xchg outsb test jno mov cwtl cli ljmp (bad) (bad) mov rorb mov jno jns pop jp adc and pop fstpl (bad) xor mov addr16 jo in mov stos mov dec mov mov add mov xor push aas inc mov fwait mov push adc and fsubrs jnp mov scas fcoms bound mov jnp,pt ret add out fcom jno push adc (bad) imul dec mov movsl in xchg jo aad fstl (bad) sarb cmp jo xor jmp pop or xchg mov repz xlat stos cmp mov pop or in mov inc (bad) ret adc mov adc jnp sub pop aam dec pop icebp int3 cli decb dec scas stc and mov les cmp stos int3 popf aas sarl aam mov cmpsb into xor push push or imul inc int cltd mov mov push fcompl adc and adc jbe (bad) mov insb inc mov and and out mov outsl into jl sub mov aad add (bad) pop add mov pop scas add popa jno jmp data16 pop mov sahf mov (bad) jnp loope mov add stc leave jne mov mov aad rcll insb pop push shlb dec lods loop push adc xchg out (bad) cli dec mov jne ljmp cmp dec sbb repz movsl imul dec cmp xchg dec push inc es nop insl mov scas mov (bad) sarw cmp and pop push lods cmp mov pop in insb enter lods lcall icebp shl outsl inc cmpsl stos hlt mov loopne incb into mulb add ficomp cli pop je xchg into pop ficompl stc daa or xor das imul cmp loop and addr16 daa push xchg dec add ldmxcsr sarl shlb inc inc fnstenv jecxz mov push xchg cmp pop cmp int3 pop cmc and cmp adc lahf dec aam shlb pop fsubr pop shrl loope push aaa lcall aad enter sub mov mov sub mov jecxz push es mov xor mov imul or mov inc (bad) pop in outsl sub inc xchg jns push int3 cmp pop pop cmp inc add xchg ds cmpsl int3 dec out mov cmc loope mov test sub pop push inc jecxz push sub pop sbbb sbb enter les cmp and jo adc adc sahf jp inc sbb xchg js addr16 mov mov jle iret mov inc mov jno pop fild mov xchg mov outsb lahf add ss int sti pop ror les scas or lea push ss (bad) and adc stos mov xchg (bad) lcall sbb xor push rorl cmp hlt push loope sub xchg shlb pop xchg and jne push movsl jge mov cmp mov bound popf push stos jg aaa bound lret pop inc mov fidivl mov jp mov (bad) cmpsl mov pop add movsl roll bound shrb add jb into cmp mov lret add mov ja fs mov cmp outsl xor adc mov or jne lea insb pop xor push lods pop ficompl hlt ficomp nop addb jp dec repz sub pop lock int3 ljmp pushf add imul pushf jno stc adc int3 pop and ss sbbb mov push fcoml xor idivl dec push fnsave lea out and ja loope lret ret inc inc hlt jno scas stc clc shl (bad) aam sub aaa movsbl mov xchg pop shlb xor (bad) xlat testb xchg or cmpsb mov add jbe cmp dec jno mov loopne adc in mov or dec out push mov pushl das or adc and mov mov jecxz sbb mov cld sub mov scas dec gs cs pusha enter imul (bad) adc xor jae cld inc mov imul stos int xor or pushf pop fcmovbe mov cmpsl je xor mov sub push inc int scas stc les jp push xchg xchg mov and in ds push dec dec jle sahf call es mov dec (bad) sub xor dec push leave mov sub sub mov sub cltd ss test bound and sbb jae std cwtl xchg fildll fldl mov pop fwait in add test stos shrl and add cli adc sarl sarl or scas stos push test dec lret je jae push fs mov inc push fcomps add lcall sub ss inc je cmp sbb gs int3 dec cmp push push push in sbb fcmovbe sub pop pop fnstenv or adc mov xchg or sub nop adc jp push (bad) into scas cmp mov imul nop notb push mov fisttp andl sbb rcrl pop jmp sbb cltd pop (bad) mov stc movsl icebp (bad) push pop cs outsb and sub adc pop jne sbb mov iret cltd lahf mov mulb dec sub mov aas stos stos jmp push xchg and mov (bad) fist mov (bad) mov jne mov jno adc bound sub inc cmp jne xor lahf sub (bad) push mov addr16 dec add mov lock lods divb lret add jp jnp clc nop xor sub out pop inc ret mov pop (bad) sub inc (bad) dec add mov sub pop bound push fildll mov cmp (bad) loopne pusha lock inc inc scas push cwtl mov or scas mov aam iret lcall pusha and xchg or scas add (bad) movsb imul mov sub fsubrs or (bad) int3 (bad) stos cli insl inc inc lods push and pop ret adc ss je xor ljmp pop add mov lahf dec xchg xchg xchg enter sbb mov mov in stos stos sub scas mov testb test xchg fsts test popa and mov dec dec mov out sub fidivr dec aam and push dec sbb nop fimul pop in stos or cmp lcall dec push les jbe dec lcall (bad) mov xchg xchg cmp add aaa push test ret enter test (bad) repz imull adc pop popa and mov mov or pop (bad) push or sti xchg xor sbb shrd jg jle xor fldenv push arpl (bad) xor mov scas xchg movsb pusha mov xchg test aam insl je out adc fildll mov add cmp je mov xor scas mov cmp mov jecxz out mov pop mov test shlb push mov in sbb pusha movsl add aam push loop fisub mov and fstl xchg pop pop jge or aam mov imul dec into cmpsb inc push xchg (bad) push push pop or (bad) scas movsb adc jns xor mov or mov xchg add jg shlb rorb xchg cli rcll repz or fwait adc int inc and (bad) into push setb pop sub mov jb scas andb arpl lock fdivrs scas pop mov and ret xlat cmp xchg push push jp jno int3 mulb mov ds ret movsl inc xor push push inc out pusha scas jl (bad) and sarl mov and mov adc int xchg (bad) (bad) cmp out icebp mov les rdpmc jecxz mov data16 cs imul sub sub push pop gs jl hlt dec call xor or ss movsl scas add das jb out dec xchg lcall inc xchg nop push or sub mov mov or test cli mov hlt repz sbb add jne inc stos push sti cmpsl ljmp sub mov cmp xchg add lods mov movsl xor movsb fs add push call mov in insb fidiv add outsb scas testl out imul adc sub (bad) push and mov in outsl fildl dec inc lcall cmp out xor cmpsl mov js adc mov (bad) ficompl xor mov mulb pop ficoml xchg add xor push inc xchg add adc jmp sub add and cli dec loope es arpl adc xchg mov out dec loop fs (bad) dec out or sub dec fstps into xchg imul push mull movsl mov fldenv lods out ret sti add jg iret (bad) dec or mov mov cmc dec dec out pop fwait data16 fldenv xchg sbb or jecxz pop (bad) pusha mov ss fs push xchg test sti jb pop std mov sub jb push adc dec mov ja les mov incl xor movl lock dec mov pop or lss xor ret mov xchg outsl sub mov fildl lock hlt loop jns in mov sahf xorb (bad) jmp mov daa popa ficoml cmp (bad) repz scas rorl and es stos sub push pop sahf lcall lds lds pop jno inc cmp cltd jge cmp dec xchg popf push leave div lods jecxz shr pushf pop enter cmp loop imul das or repnz imul xchg mov (bad) xlat insb pop loopne ljmp xchg xchg xchg and xchg nop leave es cmpsb and cmp ret mov notb out jl jecxz clc ds addb mov xor jecxz outsl aaa fidivl repnz or or jmp jnp inc je sub mov test cmp sub adc mov out cmpl jno out xlat lcall addr16 or and (bad) test repz orb push jmp cli mulb rcrl out ror (bad) arpl (bad) test data16 adc mov popa pop test and js pop jle ja out pop cmp je loop in pop movsl movsl jnp adc pop pop dec or mov push ss mov sbb popa adc aas aad xor xchg mov dec push lcall jecxz in xchg fisttpl mov cs mov imul mov and test ds add (bad) int3 mov sbb adc mov aas mov dec aaa test mov dec cmp andl mov pop mov mov mov mov mov xchg leave lahf leave mov push xchg add fisub mov in data16 (bad) xor adc jecxz sbb cs mov aad and inc adc dec add outsb push sti pop xor test (bad) sub and not fdivrl xlat or push dec mov popf jle fsubl jbe inc hlt mov dec fisubrl movsl testl cmp mov addr16 or or xchg pushf sarb in pop scas pop cmpsl std adc xor lret inc mov jnp scas adc movsb inc or adc mov aad or push jg frstor mov icebp and (bad) out adc or dec mov in into cld ret adc out flds xor cld idivb mov sub les jmp ret inc cld xchg (bad) out test mov imul int3 and lahf into out cli push jg test popf jb and cs rcll add adc pop lcall and repnz mov mov loopne aas sbb setb and ret pop popa pop fmul mov cmpsl mov xchg test call xchg and or and daa mov pop loop sub out mov pop mov push fadd pop cmpsb mov mov inc sbb out and cmp push into sti es mov iret mov pushf mov dec or popf pop inc js sarl cmpsl sub mov mov imul jp jecxz das add inc or mov out mov fmul imul inc cltd jmp inc dec mov dec add fistp mov roll jg pop push add and out rclb adc push xchg daa mov rolb xchg (bad) push lods cwtl sbb in sarb add or (bad) leave fwait sbb movsl and cwtl nop add ficom jp int3 clc leave jle jp jg in iret fcomip jp stos je loope dec stc jae or inc daa das inc ljmp jle jle call jb jbe lock jo push incl sub aaa pop xor cmp pusha prefetch fsubrs mov sbb cmc sbb inc mov pop mov (bad) mov xlat sub clc notb dec sbb sub add mov imul imulb imul push insb das stos lods pop xchg dec pop (bad) hlt push aad xlat adc dec push pop movsl fcomps mov mov dec mov push inc mov mov mov add and sbb pusha fsts dec push mov sub add mov mov (bad) inc sub mov mov mov fcoml enter mov mov insl sbb in dec pop out jns xorl mov arpl lret dec push das (bad) fs (bad) out cmpsb push fstpt ja addr16 dec inc inc dec int fldenv cmp pop push jl lea dec mov std add lods iret aam (bad) adc ds jp sbbl push and cmp (bad) sub lcall cmp cli ret pop (bad) xor cli jg or leave xor pop outsb mov mov pop inc test cmc data16 fsubrl divl es (bad) movsl sub jmp push mov test adc test xchg outsl sti pop mov dec test add stos dec scas mov rcr insl jmp stc sbb ja roll aad adc jo sub test pop inc in mov sti pushf sti outsl jb fcoml and lods sub into sbb push cmp iret in movb repz cmp xchg mov bound adc leave ss mov addr16 lods mov mov lds enter mov push mov not pop popf xor xchg leave cmp nop je sub scas push ds rcr fdivrp jle repnz mov movsl (bad) std ss aad dec imull sahf repz dec sahf push jb out inc and fcmovbe pop pop rcl cmp cs cmpsb mov stos add addr16 movsl dec hlt call ljmp sub push ljmp mov adc pop pop dec popf (bad) jle pop les (bad) aaa add scas outsb insb lcall (bad) sub or sbb fdiv ljmp (bad) xor cmp cmp negb push js mov xor push leave popf push xor in inc es shrl fsubrs pop cs movsl push addr16 sbb (bad) stos inc inc lret sarb mov push xchg out addr16 fwait aam hlt jne or jno fwait addb adc jne mov ljmp das js inc push movsl hlt mov inc cmp fstps xor mov movsb push inc jns and scas xor lea xor or mov mov push pop adc push clc scas jge dec adc pop jle out inc in test div (bad) sarb cli inc lcall xor push fwait imul (bad) in test xor jo xchg sub out js iret sbb push adc mov imul pushf ret mov pop in push pop ret cwtl out sbb cmp dec addl popf ret outsl inc mov loopne (bad) mov dec lock das or pop inc aam data16 leave sub mov xchg mov vsubpd and fsub push jae cli lds sbb ja add mov dec hlt mov mov add popf cli in or lods mov movsl push pop les cltd adc jmp movsl xchg ljmp in mov lahf xchg es jbe (bad) mov insb xchg dec stos ficompl mov repz je xchg inc xchg aad cmpsl imul mov mov mov mov cmpsl pop outsb mov or scas subb les lds roll cltd test inc sbbl cmp jno nop lcall (bad) imul jge loop or mov sub lods or aad das adc mov cmp cwtl test adc xchg push fiadd sbb add rorl test add fstpl aad pop fistp addr16 push (bad) insb ret push std fmull xor inc cwtl jo loopne xor mov mov adc adc jg pop dec lret xor sbb test sub mov sub daa xchg test mov scas fidivl cmpsb fmull or jle sub jno jmp dec or int3 cmp mov aad jne dec jp jle add outsl fbld sub cli and (bad) pop repz pop or popf cltd and cmp test cmp adc cmp sahf scas dec jnp mov pop shrl jb fs je lcall or cli xor jle repnz sub int3 pop inc aaa xor outsb repnz inc adc jnp pop (bad) jbe fidivl xor testb iret in aas loopne in or pop cwtl aaa mul inc lcall pop lods ja jl leave adc into cld sbb mov pop mov mov add mov push dec mov cltd addr16 mov and outsb orl mov fcmovnbe gs inc cs out notl loopne push les test int3 jb push in int ret and cmp add or hlt mov popa popf clc iret pushf les pop pop push adc pop push xor cltd imull mov lods je ljmp hlt sub jecxz adc call lcall les or push mov adc clc ss mov mov cs sbb dec push stc dec mov jnp xor or inc inc adc pop dec jecxz sbb leave ret xlat test int3 fs pop ficoml xchg test sar sub fcomps xchg fnstenv dec aad fdivr aam mov call inc or outsb stos insb mov es pop add (bad) mov out jp rcll cld push icebp popa sbb scas sahf pop push cmp sbb push pop repnz inc out jmp dec js cmp cs jge sbb pop aas ja mov (bad) jecxz push inc out dec bnd subb push std fisubrl adc add (bad) dec je cmp push mov cld mov cmpsb inc enter lods pop mov jecxz xchg or decl mov sub sub sub cli jge jg fdivrs lret push and call cmp push xchg stc jno mov mov mov mov cmp push and test call int sbb dec cld dec inc cwtl mov mov fsts mov dec in sbb mov lock adc test jo data16 negl xchg jne cli ja gs lods pop add incl cmp adcl pminsw pushf or xchg xchg or or inc sbb mov or out jp movsl adcb fisub fiaddl pusha test fwait mov outsb and push sbb sar test dec jbe (bad) sub mov dec sub (bad) push ja mov dec ss xlat ss pcmpeqw popa sbb rorb fisub jp jo mov jmp shr lock outsb push inc leave sbb in mov dec imul inc sbb mov and imul les inc in push aam cs pop adc and (bad) xor push (bad) and lahf cwtl inc popf mov pop jmp pop popa push and mov jae mov imul inc sbb sahf daa mov or jmp pop inc adc stc imul loopne cmpsl sub std jecxz push mov sub stos (bad) (bad) lret pop mov jmp lock je cmpsl mov push push or (bad) dec ljmp jg dec sbb test adc rclb sbb xor jmp push sahf xchg repnz xlat aas fisubrl aaa into cmp cmp rcl (bad) lret fs cltd out push sbb pop fdiv push xchg mov insl push pushf in dec (bad) mov jnp (bad) jo adc divl push test push ret jecxz into xlat jle ret jmp mov and ljmp mov push subl nop sbb das lock aaa sub xchg and roll js jno out insb sub lea fadds sbb lds (bad) shlb test fbstp push imul into addr16 repz js sub adc outsl mov xchg int es ret mov jb lahf cli daa sbb test jmp sub and pop adcl cmc jbe fistpl (bad) mov mov cld mov jb sub popa inc scas dec (bad) clc sub or cmp jnp scas xchg das sbb std fwait rorb jp xchg cld fbld mov mov sbb rorl fcmovnbe xor and (bad) aaa inc add xor js pop dec or fs mov or pop outsl pop cmp movsl jge mov dec sub sbb jb xchg idivl roll (bad) movsb subl or sub adc int sbbl mov pop dec xor lds call cltd scas xchg adc cs sbb push mov aas mov lret je push loop pushf jl sbb jp int loopne nop inc pop (bad) jg mov arpl dec into xchg aaa (bad) sub jnp xchg fisttpl xchg adc adc loop jo pop push leave push movb xchg xor xchg xor add and pop pushf out sub mov (bad) daa xor data16 ja out mov mov sub mov lods dec inc push sub out aaa push out cs cmp dec jno aam gs inc or sbb cs dec and loop outsb sbb rclb out enter xchg and jb daa sar psllw (bad) or jmp fs bnd mov daa xchg xor sub pop (bad) test loope orb adc pop stos mov outsl mov cmc les pop cltd sbb cltd mov xchg or dec lcall idiv mov jl stc cs or push sub add out jg push xor decl sbb cmp lds stos dec sub int3 shlb cmp pushf leave jnp movsl mov inc cld mov mov adc bound xchg pop sbb lahf test dec mov xor stc rcrb (bad) ficom or cmp (bad) mov cld loope imul fstp add add sbb cmpsl jl imul leave sub fsubp xchg outsb out in jge push mov mov lods mov xchg pop mov clc push dec add inc xchg or inc rol inc xchg mov xor or cmpsb mov insb out sbb jge stos and or cmpsb fistl mov adc out lea out ret sub fimull cli mov fs aaa mov jbe add jae daa sbb lea mov iret loop mov je mov cmp jp jo lods pop xchg push inc mov (bad) outsl pop divl mov push and call pop cltd pop out inc push fldl icebp in sbb iret (bad) movsl cmp enter pusha mov iret bound add cmpsl mov arpl adc dec sub pop fimul adc cs mov movsl xor cmpsl or js xchg push sub mov in rcl or imul shrb insb mov ja push aas sbb shll test inc xchg pop movhlps and xor pop lret popf dec mov int3 push add adc ret sub pop repnz push ficomp mov push jns ljmp (bad) inc cmc cmpsl out xor (bad) mov adc test xchg (bad) sub test pop test arpl add xorl cmp push jg pop push push out (bad) or test xor inc xchg xchg enter lret lock das pop or mov shlb hlt add cmpsb popa dec (bad) test call push mov mov gs in (bad) push sub mov gs add push ljmp fsts aaa jle xlat jb jle mov mov aaa nop push out pop call dec sbb jae (bad) fwait cmp xor mov add scas pop jg bnd inc xchg mov lcall je cli xor mov inc mov cli add jnp fwait sub repnz leave cld push out or scas fildll outsl push out cmp call cmpsb xchg inc cltd inc daa repnz mov pop sahf insl mov dec dec xlat jne xor or xorb jmp fwait pushf fbld add icebp jns je push jnp pop push ret (bad) pop inc loopne fwait bound add fmuls mov pop stos aad sar (bad) popa and add shlb je,pn and cli cmp dec dec rcrb (bad) cmp cmp jmp cmp gs push add (bad) mov imul (bad) mov (bad) pop mov cmp mov push push jp sahf push lock mov add or imul ret roll sbb fidivr out lret mov imul push in scas data16 or inc mov cld out ja cltd andb andl jle add xchg stos mov dec mov ss (bad) test or cmp add stc jnp pop lods adc sbb pop test and in mov pop pop jne icebp repnz xor mov jecxz test repnz fldenv loopne pop mov pop (bad) js bound mov cmpsb jo out mov mov mov jbe aaa lret or push push and lcall out adc das jle aaa out add or fs dec icebp cld xor daa call or ret jne int cmc mov adc dec jb scas jno jecxz xor adc test cmp jecxz mov popa xchg enter pop (bad) cmp lods ret and nop sub jbe adc (bad) das mov cmp fnop jb mov sub mov jg fnstenv pushf pop mov cli xchg and nop pop mov imul jecxz inc pop jb xor push push pop outsl js cmp dec sub ret sub xchg push dec lret cltd (bad) fimull pop mov jae loope add cmpsb lods aad cmpsb scas cli je mov aas push sbb ljmp nop (bad) mov idivb scas jmp sahf ffreep psubusb pop sti sahf push in adc test sbb xchg jmp ret stos add leave and mov cmp pusha test push pop fildl pop stos cs out jle mov jo int3 mov or or les inc sub mov cmp push mov (bad) dec dec mov and pop ja pop aad dec sarl mov or (bad) lea mov lods dec sub inc pop out cmp inc cmp push mov das call aam pusha shr mov mov or outsb inc adc cli test xor sub imul int3 test das jns mov test add xchg (bad) ret lcall in xchg inc adc sti pop mov lds cmp mov rol add xlat out (bad) lock sbb stos jb mov into aad cmc cmp fwait pop pop roll push (bad) cwtl or mov mov xor push and notb jnp adcb (bad) ficompl dec mov push push xor jbe aas data16 mov fbstp push loop mov mov into arpl xor push lods pop js push xchg nop ss incl pop xor add push pushf sysret dec out mov out and cs mov arpl push call lods adc jge sti out or sub shlb stc sahf in test dec repnz les (bad) out cmp pop (bad) ja adc leave xchg mov sbb mov add sti and scas or sub loopne (bad) sbb stos lret add xor cmp mov mov mov pop aas pop (bad) lods push cmp sbb addb enter sti mov stc fwait call lods lret rorb fsubrp pushf push xchg mov jbe aas fistp pop jmp es inc inc mov dec jg (bad) (bad) inc and jo jle test sarl sub jns insl cwtl roll (bad) cld mov int3 push jle sub cli (bad) mov pop idivl fild subb dec sbb jge and mov fist dec (bad) ds sti stos fistl cmpsl pop xlat daa cmp push fbstp and (bad) pop movsl or mov sbb stos sbb mov push inc cld add bnd (bad) sbb lret dec and into add push scas mov (bad) into movsb pusha cmp and rcl jg xchg jnp (bad) xchg lcall (bad) jg pop lods nop dec pop lods sbb inc addr16 mov adc loop mov or mov dec mov cli insb scas pop push xchg jp stos faddl pop push icebp push push (bad) roll adc mov test or or outsb (bad) imul test and lods ud2 and cmp xlat stc push call push in repnz inc aas push jge xchg (bad) jmp xchg lods xchg cmp xchg push push mov les test fdivl mov sub jmp fdiv sub loopne sbb or jne aad xchg push inc int in push jp cmp mov stos ror cmpsb outsb inc cmpsl (bad) xchg sub dec sub out popf insl (bad) std lcall sbb loop mov dec sub push xchg adc push xchg pop jge mov outsb cmp arpl subl and lahf ror lcall pop fiadd cmpl xor adc mov inc in rcll jns arpl les scas aas (bad) pop xor dec out sbb jns test xchg mov jnp pop inc lahf mov dec inc gs fisubrl and mov jns movsl mov fldcw inc jp pop inc cld inc push test jo fmuls cltd in mov add pop add sbb lcall cmp hlt insl adc nop jno cmc fcmovnbe mov movsl mov pop or out cli jbe out sbb jae sbb or imul movsl jnp jl int3 xor ret movsl out lods popa xchg ja repz hlt mov orl loop out out sub push enter sub mov jns or pushf jae popa andb pop icebp mov mov jne mov test movsb movsb (bad) pop or shr mov std inc push pop pop outsb mul push dec in ljmp jbe jmp imul fwait nop fsubrl xor adc icebp test add xor inc inc adc sub inc les adc scas test jmp or ret popf mov cmp jbe add xor xchg movsb icebp sub loop cwtl fcoms mov (bad) in mov sahf pop (bad) jns repnz into inc icebp pop push in test and inc push and lods xor (bad) idivb pop fwait mov fadd out sar xchg push fldcw incl mov inc mov test push mov out scas push imul add outsl jb,pn lret mov push cmp out jg xor inc sbb les js mov inc xchg js es mov xor cmp push pusha add or ficomp mov mov xchg stc std fnop jg dec mov mov jge xor loope out mov and lds mov imul (bad) aam repnz out fnstcw ja xor rclb xor pop aad roll mov cmc ret mov mov aas xor test sbb nop pop xor cmp fdivr ljmp ret movsb scas dec insb mov imul loope mov mov data16 cmp adc jmp xor cmp mov stos mov into mov pop dec adc dec xchg jmp inc bound mov sar jecxz mov cli jnp divl in daa imul test adcl aad pop mov sarb fidivl sbb mov fldl (bad) push sub lret mull xchg mov push movsb push push jb daa shlb loope cmc pop aad popf (bad) jp adc add mov inc push dec dec stc test fldcw icebp pop sub sbb daa or sub int gs pop adc scas (bad) pop js cld icebp adc sbb mov inc repnz mov aaa aas add int3 leave inc fdivr lret inc add inc cli adc pop adc push pop cmp aaa enter mov into mov aaa test sub repz adc sti loop push jecxz cmp pop sahf jo xchg xorl mov mov icebp pop arpl out out jb bound or test xor data16 sub lea bound daa mov (bad) pop (bad) pushf jo jb xor iret fisubr sub lds lahf cmp adc lret repz mov jmp xor xor jge addr16 push dec xor dec in and repnz mov (bad) daa pop xchg lea nop mov xchg jg ja hlt jle fwait pop loop addr16 xchg xchg fild scas add clc daa add mov (bad) cs sbbb sti fldcw decb xlat mov out (bad) xor or xchg sbb sbb jae pop or mov rcrl jbe cmp fisttp loopne loop mov jne dec repz sbbl dec mov add xor jg mov dec and or cmp sbb addl inc int3 lea sub (bad) sub dec shrb arpl adc sbb xchg in daa sub push sbb vpsllq pop jp xchg (bad) jnp dec call push mov jg push mov fbstp or (bad) xchg cmp lea out (bad) ja mov ret std notb dec addr16 and and push dec in into ds jmp ljmp loope xor or icebp fdivrl mov arpl inc cs loop in mov lahf div mov pushf fcmove int mov dec or dec push rcrl sub in jp into inc repz push mov lret inc and cmp inc es and pushf cmp push enter imul mov (bad) mov mov repnz leave and sbb jnp push pop sahf in lea xchg sahf pop cli push xchg es test out in fcoms cli (bad) push mov sbb test stos shrl imul push pop or inc or mov xchg (bad) dec sub mov inc dec add insb call dec rorl and (bad) jge subl ret inc xlat jecxz in xchg or cwtl push lods cmp add cmc into cmp mov xchg sub mov adc leave pop sbb mov sub (bad) push jp lcall inc pop js pop notl outsl mov lea ffree mov xchg pusha scas add sub insb and icebp dec sbb inc jg add xchg insb pop push fildl pop aam or xchg sbb lcall movsb cmpsb pusha pop aas lods cwtl rol mov add jecxz mov arpl test cmp fstpt inc out std mov loop cld adc lahf fnstsw imul clc lds add sub push (bad) adc sbb mov pop out shll dec test pop sbb pusha into push inc and ljmp cmp cld hlt fistpll and cltd xor xchg xchg mov or lds lock sbb add negb aad pop (bad) iret pop mov shll push inc pop xchg xchg push ljmp or (bad) mov in jns insb into fistpl divl aad test pop xlat sbb jne repz gs push addr16 mov incb popa pop add adc test push (bad) stc inc sbb aaa test (bad) mov lcall fimull xor dec (bad) jbe imul xchg xchg icebp adc pop call add lcall mov add in out push add test notl push je push fadds rorl adc add aad inc sbb cmp negl and push divb test ficom mov arpl lret mov negl xchg mov fsts outsb mov stc js popf insb iret test out scas mov test jns mov ljmp fwait (bad) mov and push incl pop xchg inc adc jno (bad) std daa orl mull stc test dec mov pusha mov mov or and xlat sbb arpl lds cmp xchg inc stos jle (bad) jg inc push cmc call inc cwtl int les mov fdivrs in mov ffreep movsl fstpl idiv aam xchg and pop pop (bad) cmp popa ds jp std cs xor mov xor lret and sahf jae enter jmp and add add add add add add xor add jo add mov add add add add add add add add adc add add enter xor add lock xorb add sbb add inc add xorb add nop add xorb add mov add add add cmpb add or add xor add pop add cmpb add add add add add add cmpb add clc add addb add add addb add add add add add add add add add add loopne add add add in add add add add add add add or add mov in add add add add add add add add xor add jo add sub add in add add add add add add add pop add add push add in add add add add add add add addb add (bad) add sub add add add add add add add add test add dec sbb add add add add add add add add rolb add lock add in add add add add add add add clc add add or add add add add add add add add and add and add add in add add add add add add add dec add add cmpsb adc mov add in add add add add add add add jo add loopne adc sub add in add add add add add add add cwtl add add xchg adc mov in add add add add add add add rolb add inc add in add add add add add add add call sub add add add add add add add add adc add pusha dec adc add add add add add add add add cmp add or add add add add add add add add pusha add add add add add add add add push add sldt mov add fadds add add cmp add sub cmp add push add addb add js add add add add add add add add add enter mov call add add add add add add add lock add add add add add add add add add add sbb add add add add add add add add add add inc add add add add add add add add add add add push fs add add add add add add add add nop add add addr16 add add add add add add inc add add lock andb sbbb add add add add add add add push add add add add add add add add add add add add add or lldt add add add add add add add add add xor sldt add in add add add push add dec add inc add push add add add add dec add dec add add add inc add dec add inc add dec add inc add add add add add lock add enter add add add add add add mov insl adc add add add add add add add add loopne add mov (bad) jbe add in add add add or add dec add push add add inc add push add add add add inc add dec add inc add dec add add add add or or add or add add add add or add add data16 add jo pop jae add ret add push ret add outsl test add and dec inc inc push js in mov jns cli scas mov ficoml push aad (bad) dec push inc sbb xor sbb js cmp cmpl and push aas dec into mov pop pop daa xlat icebp rorb inc in jnp arpl or pop arpl add pop ss int3 pusha xor aad sahf imul aad (bad) mov mov and sti cmp jne aad stos mov jnp popa adc rorl mov inc or andb and lods pop mov or jae (bad) xchg add push jo or jb sbb xchg (bad) adc jle pop add cmp out pop pop out jg sti stc sub outsl cmp and mov xchg movsb out dec add cs xlat inc pop cld sub in mov push inc push test sub adc bound bound push outsb fmull int jns lahf out add mov sub jo ja push dec cmp dec stos repz jl jbe jbe stos stos xor dec or test or sbb add xchg insl pop push jno pusha pusha cmp lret cltd lea mov mov fwait outsl mov idivl arpl and dec push push push enter js jg dec movsl push mov (bad) (bad) xor mov and add xchg mov pop ja jne scas jmp adc mov xchg mov xchg ja jb repz sub mov sbb out movsl push nop sbb call loopne cs jno cmp push stos add push popa (bad) fs inc stos aad insl fistl inc mov sbb push mov mov cmpsl xchg and pop xlat adc rcrb ret add adc xor movsl pushf push lret adc mov sbb pop jg (bad) xor ljmp mov scas jg jmp cld cld adc pop aas jle dec mov and cmp cli sti sti rcl xlat xchg inc push xchg and int pop adc fdivs scas xlat xchg int mov mov sbb jle stc jl aad adc push aad gs mov mov pop cld fstpt or nop jbe fimul lods scas lock mov inc cwtl out mov jg js in push mov add inc in fwait outsb loop fidivr into test cs inc mov or or cmp mov xor test ret xor shl mov jne xor (bad) scas ret and or push iret loop mov test mov leave leave dec dec dec dec pusha push or insb push xchg mov scas outsl lcall addr16 jno imul fldt push cmc clc out fnstsw dec das lock add cmp fld out adc ja pop mov xlat xor cli rorl pop dec dec dec jmp (bad) jno mov jecxz (bad) jecxz mov fiaddl dec and mov lock jns mov scas xlat popa lcall inc mov test and add (bad) push adc mov and mov adc xchg add jno stos aad mov psrad mov or (bad) aad push mov (bad) ja jecxz mov xchg dec imul dec mov aas cld xor fcoml jle call out js cmp xchg cmc mov mov jnp fs push push adc sti in mov cmp mov dec sub lea dec roll inc lods push and xor mov add pop jnp or or push cmc cmp xorb (bad) ror inc js inc fsubr jmp test adc nopl (bad) insl fldt sbb sub repnz das dec (bad) lea addr16 outsl fisubr add (bad) jne addb mov shll cmp mov daa xor and mov (bad) (bad) fdivs add sub sub xchg add mov inc xor pop popa mov dec and push pusha pop push lock (bad) ja pop xchg mov sub jmp xchg lret in jnp mov lret xor sub mov bound or rcrb rcl adc mov xlat jne scas xlat fnop fcomp aas out fidivr insl jnp repz sbb pop daa mov mov adc sbb add xchg cmc mov and mov fnstsw or jae (bad) bound lret mov or or jp push test je inc xor test stos stos scas adc sbb pushf ret mov adc or subl aam xor adc stc cmp test ljmp and mov cltd dec and mov sub xchg lret (bad) jno adc inc insb fnstsw idivl iret sahf cmp cmc decl cs pusha add push pop (bad) cwtl stos stos sub movsl mov adc adc outsl add cmp mov sub lahf cli aam dec mov in cmpsb mov lcall iret out fidivr jl js clc push mov push mov push pop pop inc test jo pop pushf jae xchg mov popa and mov js xchg and fldcw test push sub stos (bad) mov push sub test rolb xchg leave and sti sti xor xor mov (bad) sbb xchg or cmc cmp push ljmp mov subb push adc mov mov adc sbb dec mov sbb insb xchg (bad) lea scas cli aam lods pop dec jmp add sbb jb add mov fild mov jmp out jae imul add arpl out cwtl lcall push push nop iret out outsl sub aas icebp imul iret jge mov bound and push push push pusha sbb repnz cmp xchg xchg push sub push cmpsb imul insb flds xchg nop dec and xor orb push test sub mov dec arpl lcall sbbl aad jo jl out inc or cltd mov push push sub mov cmc ss loop and push push push stos aad lea jbe pop mov jmp and xchg mov xchg and out add dec and enter jmp inc and inc ss (bad) xchg rorb cli cld inc ds scas cmc div dec lock add pop pop pop jbe dec jecxz scas repz and add lock ds mov arpl shlb sub and lock jg lret out pop (bad) in mov (bad) sti cmc jmp (bad) scas mov sahf sahf push in cmp int3 int3 and outsl outsl das jbe fiaddl pop sub fdivs jle push mov mov mov adc mov or clc test add adc ds test add loope daa negb and movsl nop jl pop sub jno enter dec and mov aad adc sbb lcall jecxz orl add xchg lds push aam xor fucomp jle jg hlt rorb int xor jl pusha push lret fwait dec xchg gs jmp sbb push out add je loopne xorb pop dec jbe sub insl push (bad) xor cs push sub iret out cs and lret lret cmp int into jns mov lcall lret xor add test sbb scas pop mov jne xchg test fwait aaa arpl xor push ret xor pop addr16 repz (bad) xor in or adc inc xor sub loope add pushl (bad) les and orl and xchg adc sbb mov (bad) addl xor mov int pusha jae dec and stos push cmp aam sub sbb stos push lods add dec pop dec dec dec mov into cmp outsl outsb mov lea loopne subl (bad) cld repz add jg add jo aam pop loop,pn xlat jne add iret iret mov popa iret into into mov cld notb stos mov push stos test jmp mov pop lods pop mov (bad) cmp inc sub xor ret (bad) lods pop xor ss (bad) xor in fdivs mov sub cmc cmc mov std adc mov mov cmp sti out add test lock and cmp add cmp lea cmpsb cmpsb cmpsb mov mov dec and int xchg iret out or push ret mov push and cli sti sti xchg leave fs dec es lcall les pop je add ss dec dec cmp sbb lds push adc js fdivrl mov push xchg pop pop jns (bad) xlat jl popf jo and jb xchg out mov mov stc cld pushl fldenv das out int3 int3 or jge pop sub das pop xor cltd addr16 mov or cmp fadds mov movsl cmp xchg xchg xchg adc pop xor inc mov sub orl clc jno rcr sbb mov out jmp add in test sbb push and mov in inc inc sub lret cwtl fwait fwait inc mov ret sbb data16 or mov lahf iret inc xchg and shrl mov sub daa lahf insb pop jne push jg gs xchg pop lods pop mov mov cmp mov ja mov cmp jl aas mov lahf mov (bad) mov dec dec cmp cmp pop outsl std mov jae cmp sbb leave daa icebp int3 xor mov mov pushf jae add sbb inc add jbe rcr imul cmpsb dec fwait xor xor icebp les push sbb rcl xlat pop and push outsl jae insb dec iret ret and adc or sbb idivl mov mov test adc scas daa adc ret jo mov fldt fwait subl sahf sahf (bad) cld cld cmp push (bad) cmp jns sbb test int aaa arpl cli cmc test stos sub aas push test popf out cld outsl test adc mov scas mov inc call out lahf insb ret xchg and repnz ljmp clc ret pop (bad) in fdivl sbb je (bad) hlt hlt xor jl inc dec dec dec mov imul sbb sbb mov lret push pushf jne pop inc (bad) jg ljmp lock cmovae insb fnstenv or je mov pop cli dec test adc add lret push add or lret or mov and add mov dec xor test sub rolb es (bad) xor cmp test mov pop inc and in cmp rolb push sub mov jge jno add rorl mov add jl scas pop in daa js dec das push push movsb pop scas fisttpl outsl jl sbb mov mov sarb rorl (bad) (bad) out cwtl popf popf inc cmp (bad) jns popf xchg fstps xchg test js test lods ret aas lea loop nop sbb ja les popf test push cmc ljmp sahf dec rcrb add stc inc inc (bad) movsl and add sahf negl cmp adc adc nop orb pop push push (bad) or stos icebp mov and stc int rcl roll sti testl sbb lods inc mov cmp icebp icebp icebp inc outsl jl sbb mov pop (bad) lock stc (bad) cmp mov setl mov shrl jno sbb mov jge fidivr sbb out fisttp lea mov rolb es aaa mov add jge fwait fwait ret xchg mov xor mov pop pop adc add sbb push or xor sbb xchg addb cmp loope (bad) ret gs aas jecxz icebp out cmp cmp loope sti mov and sub inc pop test and and inc inc loope arpl push popl push mov loopne cmpsb cmpsb cmpsb jo and sbbl sti sarl fcomp sbb sti sti jno jge insl stc fxch jle loopne pop pop hlt push add jmp pushf (bad) cmc jg int test sbb ja not inc (bad) cmc fisubrl and data16 call jae adcl add rolb xor outsb mov mov les pop adc rcrb ljmp mov jbe sahf test gs mov xlat mov cmp add popl xchg adcl adc adc test push ljmp ljmp (bad) xor jmp and insb fildl lahf (bad) hlt hlt xor mov inc inc inc shrb shrb mov jp icebp js stc jl xor xor jnp fdivp xchg xorb cld loop mov cmp js addr16 add shll (bad) cmp in ret leave xor jmp cmp mov stc mov ret ret ret cwtl fwait fwait ret and imul inc mov and mov lret xor jp les dec loopne (bad) push adc dec insb (bad) std mull mov push js mov xor add sarb adc jo sbb add mov cmp lcall dec popa (bad) dec jo mov push ret testb sub mov and lcall push and cmp sub mov mov add pop lods push data16 (bad) mov pop jbe gs inc js icebp movl in (bad) (bad) jne sti imul ret lods mov pop fidivr jge push pop adc sub decl (bad) lret cmpsb imul out cmp pop jnp mov mov sbb xchg jle mov sbb add add scas scas btsl lret sub jno and cs pop pop pop or push adc xor or lods es dec adc lret gs dec push imul in insl clc (bad) mov (bad) or roll shl push fcomi sbb add xor test dec aad sbb inc arpl bound jmp (bad) adc cmc hlt inc xchg adc sbb dec (bad) xor xlat (bad) and repz jecxz (bad) pop (bad) gs pop xchg sub int adc push cmp cmp ror or lods push into ds insb in fnstsw neg jae jle xchg lahf in insb fnstenv pop cld lds jp xlat leave jmp push push pop jle jg add jge fnsave mov mov mov cmp or push or adc jge push adc push arpl dec jecxz fwait outsb add sbb jge jnp neg addr16 push aad xchg fisubr add xlat jno insb lcall cmpsb imul xchg push cs push scas push push cs pusha ss test sbb sub cs pusha int3 add movsl std cmp rcll pop out jno aas and mov jecxz outsb adc inc xchg and mov (bad) xor sub inc outsl cmp sbb cmpsb add ret lea (bad) clc and jecxz arpl sbb fdivl adc repnz mov mov mov fdivrs adc stc lahf lcall aas std jmp (bad) fdivrp cltd iret jl cli push pop cmpsl or cli ljmp dec mov enter sti (bad) cli sahf idivl xor cmp mov or dec push mov or inc inc rcll fnsave mov flds sbb add sbb imul insl pop xor cmp jb sbbb insb push xchg jb movsl jb cmc jp xchg gs mov pop into cmp jp jge jmp pop sbb mov cmp stos add dec (bad) sub nop and or (bad) dec movsl push call ljmp jmp sub iret repz les xor dec dec loop (bad) es sbb hlt dec call arpl ss sub inc mov (bad) in and lret ret or mov mul pop aas clc add mov mov mov int3 mov ret imul in fnstsw pop outsb (bad) sti adcl test mov jge jbe dec dec add aas push scas pop lea push inc xlat jne (bad) jo insl mov scas mov pop xchg sti fisttpll rol pop lods push sbb enter dec inc adc add fsub and jge cmp ret int3 icebp cmp sub pop test cmc insl (bad) imulb inc or sub push mov xchg les adc push push lret out and scas pop pop rcrb gs mov xlat push stos (bad) mov (bad) xor ret (bad) add loope push movsb shrl fistpll clc out ja mov mov fwait aaa inc xlat jne hlt hlt (bad) mov push adc out jae jb pop cli mov idivl idivl ja subl fnsave orb into cmp les pop push mov (bad) jle mov add push es daa jno lock dec xchg test (bad) mov pop sub lret aad lret sub add pop jg mov fisttp pop xchg shrl dec cmp push movsl (bad) bound int3 int and mov imul scas sahf adc adc mov dec xchg mov sub adc push add jl and into loope flds jne add sbb mov pop scas add add icebp push mov pop into popa fistpl (bad) testb xor or into int aaa aad mov mov call xchg gs push push dec fwait mov sbb fdivl or int fisttp add inc cmp movl loope addr16 test mov (bad) imul ret icebp scas add enter dec daa je add outsl jle fwait jmp js pushf jae outsl (bad) adc mov (bad) std out incl popf mov (bad) in in sub jge pop adc cmp mov sahf cwtl lods jg insl mov fwait int sbbl and mov fcoms in test jmp push stos rcl pop cs jmp adc mov imul pop or add lret adc mov js mov inc sub inc cmp sahf cwtl andl dec inc sub and push adc jno inc inc xchg adc test push mov inc inc push adc inc and loop add scas and lea sbb cld adc and inc (bad) jno ss pusha lods mov ss adc jmp inc jecxz and scas arpl out call mov mov lds fistpll shrl lods push sub inc lods push ret lock inc xor cmp cmp xchg daa dec int jp mov or lock cmp xchg rclb and jg xchg dec pop mov push dec (bad) mov or packsswb xor dec rol std neg vmptrld into ja adc ret ret pusha mov or and stc cmp push push jo enter jl repz sub test stos push dec or adc and inc cmp inc outsl xor mov adc dec mov and nop or fs jp dec add pop inc sub aam fadd stos cs push sbb pop andl inc and xor xor movsl jo push lret mov jmp push lret mov xchg and imul cmc jmp jecxz push pop xor mov push mov push mov xor add pop (bad) int3 int3 or mov ss fiaddl xchg mov mov fnstcw popf not inc pop jge jnp (bad) shr push pop add lock mov fwait dec dec fcmovu jg jmp (bad) jp addl popf cmp push js stc jl cltd dec push stos push scas inc outsl outsl das bound int daa daa inc or stc out (bad) dec es jne pop pop pop jg cmc mov sub sbb (bad) bound adc jl fnop lods push sbb test aas push mov aaa mov fs jno xchg xor adc push into rcrb mov pop xchg add cmc mov or adcb fldenv cltd add cwtl pop dec and xchg or push xchg and mov popl jmp nop and sbb inc mov inc mov inc mov loopne add lds or fdivl mov jno fldenv push pop xor dec and push xor mov fisttp (bad) (bad) pop mov cmp loopne mov clc and pop inc cs daa mov adc ret xor ds fdivrl lods aas sbb push pop cmp cmp adc adc adc out out inc outsl outsl das xor imul cli cmc mov jecxz sub aad xor xchg push test mov mov jmp (bad) arpl push aad adc out adc pop inc and adcl cmp sahf sub add icebp arpl and test ljmp inc inc xchg xchg ljmp ljmp xor inc sub inc push gs or shlb mov adc push dec inc aam mov sub push and pop cmp cmpsb pop add lret push jp cmp xor (bad) add scas pop (bad) jnp mov ret cltd addr16 mov mov (bad) (bad) pop add rcl push shlb jne push in stc int3 int3 int3 mov call sub jne add stos aad loop and push add leave data16 mov cmc lods dec push dec jmp je pop nop xor cmp pop xchg xor test xchg and mov xor sbb jle cmc jp imul inc xor test sub test fwait fwait ret shll push sub sub push push push xor rcrb inc cmp adc jae mov adc cwtl mov (bad) or mov shlb xor xchg in jnp lock jg inc push sub adc xor (bad) or scas xchg mov lods push insb fcomi stos or sub xor adcl pop fs mov pop popa mov fbld lock jnp das loopne int3 (bad) adc jle mov pop pop pop push out sub xorb stc stc jns sub and jo iret dec and sti es daa (bad) lahf lret jp xchg add test pop pop je test sub roll mov (bad) in (bad) insl hlt call lds lods push ret jecxz aas mov mov dec (bad) mov xlat cs div mov (bad) push inc mov hlt repz sbb mov ret sbb icebp pushf cwtl cwtl (bad) hlt hlt xor stc cmp lea sbb or xor mov in inc outsl outsl sbb and cmc push fsubrs mov cmpsl stos enter stos fisub xlat inc mov arpl pop ret mov cltd inc int3 int3 sub push jae cmp lahf ret in push push repz lretw enter (bad) dec cmp mov mov insl out pop inc not mov out cmp (bad) or and adc xor inc xchg dec adc fdivs push mov es sti jp jo cltd push lcall mov fs dec push in sbb mov pop pop inc ds (bad) lock jns (bad) lea jmp lock fstl fild or mov xchg clc dec jle adc (bad) inc in jecxz (bad) pop inc ss inc pop pop pop pop lods push inc inc inc xor test mov push or icebp js stc (bad) push sub xchg lret enter jle js out pop cmc arpl ljmp jp dec hlt and mov shrb es add sahf jo shll or insb fildl bound orl and lods sbb xor scas jae out daa mov inc por inc imul push test dec movsb pop push jecxz lahf fnstsw cld lock stos gs adc mov cmp xor out pop ss add sub pop xlat lahf adc mov imul loop xchg loope loope cwtl dec jnp mov cmpsl pop (bad) lock hlt cmpsl aas inc xor jo test loop xchg and aad clc clc cmp fs fdivrp clc jecxz jg rorb shll cld add and dec inc inc push add mov cmpsl shrl cs push sub icebp in mov mov ret mov int3 int3 loopne icebp jecxz xchg mov (bad) mov sbb jo jecxz jecxz fcmovnu ficom or (bad) pop pop jp jns repz cwtl cwtl rcr pop mov inc int3 sub aam hlt les mov jo sbb lcall call mov aad lods xor (bad) mov sbb je popf movsl fsubr iret iret fidiv add jb out jg imul inc cmpb mov xor movsl iret dec stos stos popf cmc call cmc lods jns arpl dec xchg cmp icebp mov pop xchg shrb mov inc lahf xchg mov cmp sub mov stos dec data16 xchg or sub and jp sbb mov xor jmp mov out mov pop pop mov lds pop test push push sub add insl fcomi addr16 in (bad) jns mov clc add test mov cltd xchg lret vfnmaddpd jecxz jns jb mov bound push int adc stos scas mov jl sbb aas std xor hlt cmpsb aaa popa je adc repz pushf push test xchg xor aas (bad) int3 int3 int3 add insl dec xchg test mov xor stos sbb or in hlt test loop push inc xchg inc add in inc xor dec repz (bad) jg popf jmp loop std sahf loope pop lahf (bad) jbe sbb add jae cmp aas mov (bad) enter push scas jg rclb call jmp fnstenv insb mov xor faddl je mov and push push sbb data16 cmc inc rorl call mov test ds pop mov push pop jge outsb mov daa ja lock insb fistpll mov in outsl add and out mov cmp pop movsb push sub movsl repnz stos push lods cli std movsl movsl and bound popf scas jmp in mov mov out pop sub sub loope pop (bad) cmpsb dec fwait mov (bad) push test sbb and inc mov pop (bad) jmp or jne lret jb aad xchg leave clc inc jnp push lret stos jo sbb lcall push (bad) mov cmp mov fdivp xchg addr16 jne pop cld fldenv out idiv cli mov cmp std ljmp jmp loop sti in pop pop jge jmp fisttpll stc (bad) mov leave test push push adc push adc push scas inc dec negb aaa dec mov fsubrs ret (bad) lock ret dec inc xchg pusha pusha add repz pushf pushf (bad) lock insb fadds stc jl test (bad) xor int3 popa cmp fidivr mov shrb add mov sub push xor dec movsl push movsb push sub jle xchg gs (bad) xor or jge sub ret sti rcr fisttpl push popl or test enter iret jecxz mov cmp js (bad) mov sahf fistpl popa mov sbb scas add xchg mov stos xor push push xchg jae adc (bad) fbstp insl fdivs jne stc ret inc jge mov in jmp das aas fistl in rclb jg jecxz ljmp push push mov pusha loopne ss pop jno aas pop push rcll jp mov add ret or inc mov fdiv mov scas enter push mov jp sub push nop dec cmpsl icebp in dec scas rorb push push push nop dec and cs xlat aas cli call scas shr add lock pop ja lret cs mov loop ss fidivl hlt xor out shrb add jae aad arpl lcall (bad) or jl mov sbb cltd lret in add (bad) mov nop leave fs leave fs and lea lea int or cmp adc or inc or out xor mov ret mov fdivrp dec stc jo pop (bad) ljmp repz outsl lods outsb sahf jne enter dec xor shl mov inc and std mov in pop cmp inc sub add push lcall test push mov and dec ret loopne mov cmp fidivr in outsl and js cmp iret jg rep jecxz mov rorl inc cs ss in in aad pop (bad) push movsl push mov jb in cmp mov fiaddl fldcw adc jge inc inc inc cmp loope or dec int3 ret cld cmp in add xor adc hlt cmc cmc and (bad) jae inc mov xchg aad add push fmuls les cmpsl ja loope stos mov jno std getsec dec icebp and fnstcw std in aas dec or in pop mov call (bad) mov andl xchg add push pusha inc mov xchg loopne outsb ror sub mov mov cmp pop push push pop pop mov xchg cmp sbb sub out pop and pop clc ret mov mov lcall sti jo insl mov enter rcl add xor cli push adc (bad) and stc jg mov dec dec add hlt imul adc ss ficoml mov ss jno mov mov lahf lahf inc cs stos stos stos mov add mov sub add or pop or pop mov (bad) sahf iret jge outsl addr16 in adc mov std (bad) idivl cmp mov stos jmp or pop mov push loopne or and push orl inc sbbl add jl adc pushw push push dec rcll mov inc (bad) dec lret ds or enter push push xor jecxz (bad) neg and lret push adc paddw daa aas mov jmp je push xorb cmpsb cmpsl cmpsl movsl inc and add cwtl sub stos imul sub xor (bad) cltd cltd sbb or add add pop pop pop or sub movsl push sub mov lds ret jbe dec adc mov pushf insl cld xchg scas jmp inc (bad) in aas add sub xlat lret ret in dec or cs xchg aas mov in mov sbb pop test or loope or flds adc sbb js or push loop or lods ret fs pusha cwtl dec and subl gs mov pop pop jo es dec (bad) jae data16 pop sub rcl push sbb jo adc push mov sub xchg les and fbstp xorl inc inc xor inc and and test iret cmp mov lea xor test mov (bad) or subb (bad) lods inc outsl outsl scas out sti lods mov dec and xchg add or jge mov dec (bad) hlt mov or push sarb mov lcall cld scas dec jl cmpsb pop (bad) cld stos stos scas mov cs push adc mov push stos in cmp and xor mov (bad) sub push push push out jns sub mov bound imul adcb pop xor push mov sbb outsl sub enter adc jg imul xor xlat xor (bad) jge pop mov (bad) jl adc pop xchg test (bad) mov xchg adc xchg lret in mov mov push insb lret add lock ljmp popf fdivs xchg mov sub lahf jge scas outsl stc enter adc jb push dec or pop add outsb mov popf mov movsb shr mov insb sbb (bad) xor push andl mov stc out int xor ss push push adc lret in or mov inc and and and stos arpl push pop pop insb jle repz inc fs (bad) loopne and jmp fisub sbb pop (bad) lcall insb fdivs es xor mov outsl je fucomip cs inc push mov das or je cmp lret xor pusha adc arpl sbb and inc push mov mov (bad) ja js push scas jge aas (bad) out jle jecxz mov push scas (bad) std incb adc inc mov inc mov push sub push adc fdivrl pop sub push stos cwtl cmpsb and mov cmp test pop mov lds addr16 orl add mov inc arpl xor push or cmp (bad) jl lahf loope aaa lcall push mov pop fdivrl jno cli cli xor test shll cmc hlt hlt adcb hlt adc and pop mov xchg dec and xchg nop adc bound stc insb jle in lock pop repz (bad) lds xlat pop mull into sub (bad) lret xchg faddp and lock fldl or cmpsl adc xchg leave mov imul inc and inc mov test cmp int3 xor xor into add lcall decl test mov dec mov adc or add mov push dec xchg iret out pop hlt rol xor sbb lods bound or dec jbe popf inc sub insl cmp aaa mov adc fcompl outsb fstl dec sbb fisttp mov cld jecxz stc inc xor dec sub fisttpl stos xchg sub or jmp enter loope mov pop mov inc arpl loopne pusha xor fnstenv (bad) repnz inc mov inc xchg fisubl cmp je pop insl mov add lahf bound stos sbb jp cmpl jp scas jmp test stos aad xor mov scas mov int movsl aaa popf dec and mov jo mov repnz jecxz jnp cmp pop std cmc xchg mov (bad) bound mov inc sarl push imul stos stos push mov xor ret dec xor adc add pop and mov xchg and lret lret lret mov xchg dec xor pop xchg movsb pusha sub cmp inc and fistp sti imul stc popf mov pop xchg dec and call push cmovle add adc scas pop xchg pop push mov stos aad cld add xchg fwait aaa jge scas mov adc pushf pop out xchg push addl out add and push (bad) xor pushf lea inc cmp pmaxsw daa and push mov into sbbl pop bound stos aad xchg daa mov lahf stc test stos aam add mov inc add leave psubq jp movsl adc mov push or fs cld or cmpsb mov push popa (bad) ret dec roll cltd dec and popl inc xor inc xchg add (bad) mov lea adc jl (bad) cli pop cs movsl pop scas cltd mov cmp push out xchg mov jns loop adc pop gs inc xor inc sub mov xchg je imul sti mov jg loop daa orb rol pusha dec add (bad) mov (bad) das repnz (bad) add cwtl aaa (bad) lret adc test aas stos pop sbb sub aam jnp mov roll mov lcall iret iret fidivl mov (bad) cld hlt pop out sahf fdivs jae xor dec push sub unpcklps pop cmpb and sbb movsb sub mov mov lods cmpsb imul sbb adc imul pop lahf mov mov lret mov xor adc mov cmp ja lahf frstor push loopne fidivl cmp pop sub sub and pop arpl xchg or into cmp sub fcmovbe pop cmp jecxz and aas repz mov mov lret dec pop jns and pop pop pop nop jle adc mov jnp out add adc dec xchg push (bad) aas in fdivr add xchg pop sbb out out mov outsl outsl outsl nop adcl popf jo ret cmpsl testl jl insl cmp or add mov mov xlat loopne loop mov iret cli xchg bound pop pushf mov sub lea js sub mov inc add dec dec unpcklps imul xor mov mov and add pop add mov mov jp push mov or stos stos sub adc test mov shrl or sarl cmp mov movsl (bad) cmp int fistp push jecxz subl in cmp lea sub pop mov insb jb pop mov pop addb cwtl jo (bad) lahf inc sub inc xlat jne xchg test jno dec fisttp sarb fnstcw adc fs mov orl mov das das mov loopne xchg jnp fisttpll mov outsl inc lock inc stos leave xor inc and mov pop pop fbld in lcall mov inc arpl test sub xchg push (bad) xor xchg (bad) enter fwait mov (bad) inc inc imul frstor aam add add jp fisub out or xchg bound fwait aas jl adc bound add test xor sbb rorb cmp in imul aad jg loope jmp jg jbe sahf repz or inc push xor xchg dec roll ret pop mov repnz mov (bad) xor sbb mov xchg push add cmp int xor xor dec add out mov lock and mov adc or add stos stos (bad) jne clc cltd jbe in stos mov daa daa mov xlat cmp (bad) push test jno push test bound sbb push xchg mov int3 push test push lahf lahf xchg cmp outsl adc xchg rorb add out sub push add or jp push inc or cli or adc sub test jo lret fmul mov dec and hlt test push (bad) inc outsb fdivr das neg jae loope pop mov sub clc iret jp jp inc push lahf cmp sub jno mov fbld mov inc jno clc decb je stc stc jns and xor inc push add (bad) pop cmpsl mov rorb pop xlat in dec test push (bad) fdivl cmp mov and or ss rcrb inc es mov pusha mov add cmp (bad) jg push pop (bad) xlat sub in ja je sti loope push inc add adc push lods mov inc enter xchg adc push inc lods push inc ss add outsb or or jo mov clc loopne (bad) add test dec dec dec repz adc jp jo add loop icebp inc inc push ret cltd xor ret nop inc stos aad sub xchg add jmp test enter cld add sub add mov xlat jmp pushf (bad) fs pop add adc fdivl lods aaa aas shlb add or mov test aaa mov push or jne in lcall add ret stos sbb ljmp pop jg inc or cmp mov fistpll aaa mov test jmp jg idivl jo xchg lret adc fstl fs repz mov popa lcall jl mov xchg dec and pop pop pop mov lds lret data16 test sbb lds ds rorl xchg xchg xchg (bad) inc and fdivr loope insb test loope scas lds inc pusha pushf lahf lahf fbstp scas shrl jbe fsubs cmp and outsb add inc push cmpsb rolb inc lea and jg inc mov inc nop mov pop sub test loope mov cld inc pop adc and std (bad) jecxz js push sbb push mov (bad) push das nop mov pop outsb jg adc jmp out ljmp sub std ljmp out jle jle cwtl or sub jp js mov push push imul sub inc ss cmp jecxz adc (bad) into pusha and ja nop rorb sub xor es push scas aad push lods push or push mov pop cmp imul mov xchg xor pop mov repnz out sub lea popa xchg rclb xor loopne fwait pop js test lock pop loopne outsb dec movsl push loope nop xchg dec test jmp rcr cmpsl cld rclb add jns mov aas outsb movsb loope test fldt loop loope xchg adc pop and andl aas pop (bad) xlat idiv sub clc scas or sbb cmpsl rcll add test sub add or cmovne fcoms cmp xchg pop lods (bad) stos aad jo cmp (bad) std pop cmp iret mov inc (bad) mov add and cmp xchg movsb inc add jne mov fisub gs icebp arpl lock (bad) mov sub adc push mov mov (bad) or mov xor mov or or mov pop lods (bad) cld cmp push and dec push mov jo jo out punpcklbw inc adc decb xor mov push test enter push test mov out cmc pop xchg jg and mov dec mov push cld sub xchg out push pop jge repz dec addr16 leave inc popa jmp fdivr jbe dec test loope andb inc pop push xchg (bad) xor lcall clc pushf scas inc call push cmp sar into popa lcall loop mov es jns jo xchg mov xor addb add les xor das cs cmpsb ud2 push ret push dec cld lods ffreep sarb push (bad) das mov sub and insb std test sbb rorb or cmpb jb mov xor ds fxch jbe in das (bad) mov add add or inc rcrb and (bad) adc xor cmc pop lock mov scas repnz jnp mov test pop jmp int3 mov ja arpl jnp ret jp clc mov dec aaa jne out cmp sbb dec bound test test sub mov jmp or push dec sub add bound cmp mov insl sarb add jo and fistpl or outsb or adc cmp and and cvtdq2ps inc es popa jge arpl test jmp test inc mov jno in sub loop pushf mov mov and jo inc jnp push push out ret arpl stc xlat xchg call xchg or and (bad) (bad) mov pop icebp addr16 fcomps adc dec pop sub in ret das or roll dec sub xlat xor or jmp jmp sub mov das push nop pop fs out ret out jnp les inc test pop mov and push hlt sub jg pop jae lea sti mov das sarb cmp adc adc pop xorb mov lds dec and insl stos ret pop jmp movsl and popa loope lahf and imul pop cld and mov add popa sub sahf test or mov (bad) (bad) lock add add loope je loop adc jmp ljmp add fimul lret das pop mov cmp call inc insb dec (bad) pop pusha push test sbb adc stos imulb xlat add adc scas jg sti adc xlat pop test ret add in es dec inc (bad) scas dec loope mov (bad) outsb xlat push fimull mov iret and mov std leave ret xchg push cwtl adc mov adc sti fsubr call out in fwait push les aaa jle out clc sbb or loopne pop sbb mov push loope push mov jne cwtl sbb sahf cmpl enter sbb sti inc adc loop pusha mov loopne pop jo cwtl mov je lret cmpl sbb icebp and insb xlat ja ret mov add pop popa dec ret mov in or and mov xchg ret and push ret push mov xchg or dec mov cmp mov mov push adc mov and mov or cmpsl xchg mov cs popf sbb jmp es mov ja cmp ret fstps (bad) adc (bad) pop stos jno lcall dec ret dec jb jge xlat adc cs add movsl aam dec pop add and xchg adc int iret in loope clc mov shr xor sub pushf lods sbb mov pusha gs mov das pop mov and jne mov test or mov push rcl sbb aaa fistpll adc jbe fildll scas push lock push out fiaddl pusha movsl sti push fdivs jno jmp in sub gs mov (bad) mov pop pop call pop pop js mov je xlat ret jne in out outsl das cmp loop and sbb loop test pop rorb dec jl sahf ret ret call xor or jnp scas pop inc popa cmc cmp or pop sbb cmc outsl (bad) in fstpt and test popf mov adc daa inc inc mov test sbb add hlt jb sahf rcrb xlat or xchg sub adc loope fldcw xor cmp icebp sub std adc ja test adc sub mov mov mov ret in xlat mov sbb aas sbb movsb add aaa jl add adc mov mov mov or mov loope or imul mov out jo push jl (bad) f2xm1 mov xchg mov outsb ffreep loope jae add test negb mov mov pop cwtl dec lds pop sub pop mov jge shlb cmpb cmp in outsb or add loope loope fdivs sub icebp rcl dec ret and fwait mov lock in push mov call (bad) jo test or popa stos mov inc fdivrs or stos stos scas lret sbb fwait push or or (bad) pop movsb sbb add arpl sbb sbb xor sub fisubl or xchg pop pavgb mov cli mov sub mov sub sbb inc out cmp cmp fiaddl js dec js mov or (bad) fwait in push jmp das sbb mov aas das insb imul cmp into push adc lcall and (bad) mov xchg xchg icebp sahf jo and cmp xchg cs sbb jle xor mov les out gs jl dec mov mov xor adc push ret aas pop out pop call fidivl jo,pt insl pop push add mov jne xchg adc or shrl pusha pop mov xchg mov push mov mov roll les pop mov jmp add jne leave mov in cmc std (bad) js fstps xor cmp je cmp mov hlt in movsb test outsl xlat or and (bad) dec mov ret mov xchg div jmp pop call sbb adc ficompl out imul add (bad) mov das push loope mov or idiv pop push push cmpsb adc dec scas cmp pusha mov into popa hlt aaa cmp pop movl fsubl or sarl push fdivr sbb sbb fs add popa or xchg add adc loope ss sub addb test adc inc or subl aad jmp nop adc lds sbb push cmp jae xorb xor add out mov mov fs ror call out cli add adc add or or or cwtl insl add popf push or xlat add pushf mov jnp mov xlat and aam add sub stos mov jo insb mov test out scas mov orl add add and dec inc inc push xlat mov push xor xchg jae sahf adc (bad) das sarb cmpsl sbb out or ja push ret add sbb mov test mov sbb mov add or sub loopne or ret or adcb mov sahf adc add jmp push lret (bad) dec (bad) or fnop int3 add addl clc (bad) jo inc daa mov xor push cmpb loopne adc or jae lock fdivl aaa inc mov ret add cmp sbb adc jae or cmp movb (bad) add lret push (bad) std iret add into add jge out mov mov sbb push arpl cmp test out aad xorb inc mov arpl (bad) clc push sti ja sbb jo sarl mov jno inc add jg or out or and pop aam cld test (bad) sbb dec inc mov test add (bad) push lret and cwtl xchg adcb add loope pop ret repz cwtl jecxz xor jae xorl and test add mov jo lock xchg lds xchg test jno (bad) aaa adc mov add jno adcb scas dec cmp cltd ret or pushf cmp mov (bad) pop cmc mov mov jmp cmc cmp rcrb jo xchg rcrb ja aas fisub push dec or mov dec mov push dec or dec test dec or sub mov inc mov fs aad sub sbb js mov push jo adc test sub fdivs jae or test and inc xchg add fildl cwtl in fstpl ret inc cmp and shrb jno or inc cmp mov and loope popf into mov cmp addr16 (bad) stc xchg and cmpl in (bad) jbe andb cltd add and loopne and loope xchg cmp adc dec or jo xchg mov test and sbb pop sub mov dec push test ret js icebp and add cmp pop and imul scas cmpsl push xor and out jp mov or inc xor (bad) (bad) mov test lret add xchg jo les cmc sbbb dec jl addl (bad) pop add cs gs repnz sbb sub inc and adc and cmc pop out jne inc test cltd add pop dec test mov dec loope clc or xchg fldenv faddl cwtl inc into scas add repnz inc pop adc jo aam jp pop fidivr out xor ja cmpsl cmp push fsub fistpll (bad) out lret mov loopne daa sbb jle out mov daa in lcall das cmp cli ds xlat out negl int data16 mov mov leave mov dec mov inc inc ss inc js and adc push or or adc (bad) sbb xchg jno fcoms inc mov mov dec mov dec xchg sub sbb int3 js mov sahf jae fisubr (bad) call movsb adc ficom out mov jnp,pt aad in outsl jg jnp inc push cwtl pop or xchg or inc add and pop cld sub xor jae insl or leave inc cmpb pop test pop mov push jmp out cmp movsb sbb pop repz pop sub popf pop insl xor mov dec scas jne out lods int3 bound adc dec inc push (bad) mov push adc fwait and fstl add cmp dec lea jecxz in mov (bad) fsubrs fs or lods (bad) lods and sar lcall adc fwait sub push lea xor aam dec dec (bad) rclb and fidivrl sub nop inc sub out insl pop aad xor cmc (bad) mov stc pop mov sub clc dec (bad) stc mov (bad) repz ja das xchg aas scas sub rcrl push pop dec add sbb stos jns insl call movsb xchg imul shlb cmpsb subl je cmpsb and fwait pop dec loop dec xor cmp add mov add rep sahf iret pop jo (bad) dec cmp js dec dec and aam test and push jae andl xchg mov xchg xchg inc inc dec out xchg mov wbinvd xchg nop jb in lahf push adc inc cmp pop lahf daa (bad) and xor jg out cmp (bad) and out xchg inc inc lcall dec outsb movsb mov dec mov stos mov xchg frstor adc add sub sbb (bad) jmp test es jae (bad) mov leave loop sub iret pop add mov stc mov pop dec nop sbbl and pop push loop pop inc cmp movsb dec push adc push xchg sub or test fwait xchg or inc repnz sbb leave movsb push nop pushf sti arpl jle lock sarb jo jb push adc sbb insl jge jo (bad) mov shrl fld dec rorl sub lret mov pop adc xchg (bad) in lret xchg clc jae (bad) out (bad) cs push leave push sub mov sbb sti dec sub jmp dec mov and sbb sub xlat mov jge push int jg inc pop mov xchg movsl sbb sub nop popa push int3 enter sbb mov cwtl not add hlt sbb jg jae xchg sbb repz test movsb sub jnp in push insl or arpl xchg mov fidivl pop faddl aam pop dec sti (bad) fwait addr16 push (bad) and out push xchg and out (bad) movsb add add sbb mov cmp cs loop lcall sbb pop (bad) test pop lcall push and or clc dec pop int3 out icebp aas mov arpl mov out sub push (bad) ss movsl sbb and rol dec dec cltd xchg pusha dec (bad) mov fidivl stos imul dec inc in pop mov xor data16 mov add pop cmp inc push cmp leave mov (bad) repz cld pop jg lret pop xor fildll sub and inc (bad) jecxz int or dec push sbb aam movsl and and pop fsub fs dec repz out aas out mov pop push sbb repz xchg mov push jno push pop fsubl push shlb ss (bad) mov push in sbb data16 sub cmp pop clc dec les push (bad) int mov sbb pushf cmp js mov sbb xor sbb and (bad) xor jmp xlat xchg pushf sbb cwtl push and cltd xor mov dec pop sbb sub or ds out sub bound push or add and and loope jg fwait pop clc cmp ja js and je mov sbb and test test popf sub mov xor inc fwait popa fisub jp rcrb icebp mov stos mov push inc push (bad) mov cld xabort xchg jae bound scas ss adc dec xor mov (bad) hlt or adc adc dec push test fwait sub cmp add cld xorl adc adc incb lock and (bad) and stc rolb sbb dec into cli sbb rclb gs adc (bad) lret jb (bad) insb inc jne dec shr xchg dec arpl loopne sbb sahf sbb pushf jo nop pusha enter cmp leave pop sub cmp data16 mov mov jb inc fimul test lods sbb into out stc mov popf jg pusha adc cmp les or xchg sbb loop dec ror mov xchg sar or sub jg xor sub add ret in outsb cs icebp lds mov cmp mov jl or mov sahf rorb test in lods andl and ror jno outsb add sbb je pushf fnsave push jno push mov pushf fs std punpcklbw lds jo imul fnstcw std insb push roll xchg insb cmp xor stos out adc jae arpl pop test dec adc inc jbe addr16 decb jno testl (bad) and cld inc fdivrp jge mov out (bad) mov cli dec xor and mov pop clc clc add aaa pop pop enter adc xor out insl icebp inc fs dec inc decb push mov adc icebp fimul ds cs add inc mull mov mov pop in jnp,pn adc xchg negb icebp lea push jmp cwtl lea jl daa cmp xchg xchg rorl aaa cwtl xchg sub mov rcrl loop and lds inc sbb int3 mov inc sub mov xchg idiv shlb cmp adc fs out inc (bad) inc lret mov dec icebp mov inc aam add add gs jbe sarb fs (bad) (bad) sahf ds xchg enter test xor pop sbb adc (bad) out add pop lcall dec pop xchg xchg dec and (bad) pop insb xor and xlat clc stos outsl jge xchg jecxz icebp cmpsb push adc loop dec addr16 frstor in leave dec or (bad) xorl dec fisttp xchg rorb xchg mov repnz (bad) and inc sbb std sbb push cld bound popa aas lods cmpsl or mov (bad) mov xlat xchg pop sub dec bound mov add popl icebp jl int add out bound outsl sahf xchg sbb es popa int les ret or add cmc jo lock idivl aas cld xchg out in fsts stos mov lds xor sub cltd int3 ret push shll test arpl sbb js movb inc xchg adc test addb clc das jl sbb mov sub std frstor test and inc fwait bound cld (bad) sahf fnsave into cltd fnsave push sub mov ja jno (bad) xor nop test pushf in jbe mov shrl xchg mov out mov mov xchg (bad) or sub int pop ds cli imul popf mov jmp imul or pop mov add push aaa les add ds rcr sti jmp nop dec xchg sbb dec aam and add mov push push out xchg add scas dec sub data16 nop cmp xchg mov or pop std cltd lss popa scas xchg std xor mov fs lods pop fdivrl mov mov fisubrl sahf out test mov jge jb add outsb iret lods sbb fucomp cltd xchg inc sub and outsl jmp xor cmpl adcl xchg cmp xor iret sbb lock xlat mov push adc fsubs (bad) xchg shll fildl sti jmp sbb mov dec or jo xchg dec xor (bad) int imul les xchg adc daa jnp jbe ret js push outsb mov js push dec repz jmp mov insb mov pop out stc add inc pop inc fs fmuls sarb arpl push push pop xor outsb inc push (bad) je,pn leave rcrl mov fldt mov sub and loopne dec inc add cld xor inc or adcb js loop rcrb xor adc and test loopne js jmp inc imul dec jl movsl repnz xchg xlat (bad) pop pusha sahf imul ja not sahf std jbe into cltd xor cmp std pushf push push cs (bad) in cmp std push mov mov push leave jecxz dec loope aas icebp push into dec dec mov decl popa repnz daa dec movsl pop xor xchg loope cld and clc subl mov (bad) xrelease push mov pop sub jb xchg (bad) aad in mov rclb stc dec cld sbb hlt xchg mov push outsb fnsave pop jmp std into xchg jno dec xor jns fcmove aam lods cmpsb inc fsubrs icebp ss and test fsubp rorl out fwait ja or testb (bad) scas std push call cmp (bad) push push repz int mov xchg inc xchg xchg mov lret insb jp push out movsb push add mov push lret popf std dec dec dec sub data16 repnz sub sbb jmp pop push add mov loope arpl inc push xchg in dec pop pop icebp xchg (bad) cld cmp xchg scas jp lret mov adc fisttpl negl inc into inc pop push pop stos in jbe stos repz nop and xchg aad push and stos or in cmp std push out or out ds jno (bad) pop sti stos insb lahf cli mov in push inc mov or fldenv jg sahf pop jl cld jg in (bad) jecxz jg xlat jg leave imul test fwait sub aad repnz std cmc div xchg (bad) scas repz out in mov adc int3 cmp (bad) mov fstpt sub xor mov scas fistpll jg es in mov jg jg out call mov mov pop stos mov fildl stos negb lods fild mov inc mov aas inc pop outsl cmp mulb inc adc mov xor stos (bad) je push push pop jno test push and jmp loopne mov dec lret cmp inc nop aad pop cmpsb mov fist andl push insl out cli gs lcall inc into dec ss mov adc test insb pop jb or gs push mov int pop mov push xor ficomp mov jg lods scas jecxz ja sbb rcll mov add dec cmp mov mov mov icebp mov pop pop divl jb push mov icebp or das push test lret xlat mov (bad) jecxz loopne cld in cltd xchg lret shr enter sbb lds cmp mov sbb mov cmp cmp popf sbb sbb mov mov ljmp and lods mov mov ja mov negl push aam popa fcomp sub scas jle add test add gs (bad) hlt or cmp mov in data16 mov loope push mov stos js jle push add loope and lods pushf iret sbb cli call cli mov mov loope xor push (bad) roll push mov sub fsubr data16 in es ja pop mov mov (bad) out (bad) ds jge sub jl sub scas outsb pop jmp mov adc cmpsl xor decl (bad) sarl (bad) movsl aaa add stc jnp lock pop in aam mov negb mov inc and jbe adc jge loop outsb xchg aaa addr16 push aas notl aad aas dec add mov xchg push dec xor jne dec push sbb aaa mov outsl stc push jle outsl std or dec pop outsb lock test cmpsl (bad) movsb fwait sub xchg jmp fidivl mov mov and sbb imull int3 repz repz fs dec enter push mov mov mov dec add daa and cmp adc loop dec sbb sbb sub dec data16 nop dec imulb push mov mov fdivrl mov fcompl iret (bad) call mov mov xor or pop fidivl and push mov imul icebp icebp xor cld daa (bad) pop repz cltd (bad) mov fxch or xor (bad) pop push mov push mov mov in loope cmp jns loop mov and xchg fistpll inc jg (bad) orb lods out int3 xchg xchg mov mov mov pop lock cmp dec sub cmp repnz icebp clc or xchg dec jl xor repnz mov mov dec xor outsb mov cmpsl daa cmp shrb js fwait mov subb loop out pop incl xchg paddb fstpt cli xacquire lret pop les dec cmp aaa mov inc imul js adc in mov jmp push fs ja adc inc xchg aaa sub jae mov jmp inc call xchg cmp es fisubrl nop xchg adc idivw sub sbb call leave mov (bad) xor or mov in lret jl addr16 jp jecxz push js sub cmp push jl arpl out lahf js movq arpl jmp out lea mov mov sub imul cmp sar loope jle pmaxub pop jns dec repz (bad) shrb js cmp jb pop lds and jne mov add xorl xor jne out lods mov aas ret (bad) movsl ss (bad) fistpll gs (bad) jb dec fwait imul fs icebp jbe inc gs imul into out ds imulb sahf jp cmp mov xlat into js lret pop int3 dec pop notb neg pushl bnd jo lea cltd pop pop fs (bad) sbb dec sub inc sbb push out inc push clc clc sti jg (bad) jle addr16 mov add jle das mov cltd mov test fcomi mov mov cwtl and pop lcall (bad) mov imull mov test scas xchg imulb adc inc rol cmp xor insb dec pop in leave cmp jns rorl jecxz sub dec enter orb lret or fcoml call dec xor and test pop cld push pop clc ret mov in aam cmp xor int inc fstps loope ds push cmp mov ds lods fwait pop test aad addr16 (bad) xor sahf loope dec inc (bad) int adc insb mull movsl (bad) cwtl std out mov jnp jmp lret pop sti insl (bad) in add cmp insl push loopne aas cld fcmovnb int clc dec ljmp mov (bad) in int sub lea leave rorb sub jbe out pusha fidivl push push loopne loop rcll psrlq mov test sbb insb dec cmp divl in pop imul icebp imul jp leave icebp jno insb sub pop mov cmp stos xor mov repz mov jne mov and sbb test lea out in ret push lahf adcl mov rorb mov push sbb call fs clc sahf loop sub rclb (bad) clc cs jle aam lock inc dec sbb sahf jo out sbb fsts loope popf sbb jns jle addr16 notb jo je jmp jnp sub jp adc xchg xchg jno dec scas es insb lods jmp (bad) sbb sub mov sahf pop adc mov mov fnstsw lods add jg jae inc lahf push outsl out mov repnz mov mov daa into lcall sbb shlb fsts test ss imul pop fsub sub cmpl test mov in or mov mov push dec cmp cmp and xchg loop push xlat out cmp push jmp and subl jg movsb sbb outsl pusha or gs fbld or ja les add xchg jg mov flds out cmp scas adc add cmp into and adc rcl adc daa jbe inc cs dec jne arpl mov out jne mov add jae mov imul mov add mov shll inc mov call xchg cmp mov loope mov fstpt icebp mov std mov jle fnstsw (bad) dec imul jge fimull sbb les mov rcrl cmp sub shll scas fnsave lods push fwait xor mov cmpsb dec stos dec stos int insb lds aam xor inc jne adc xchg cmp popa sbb fdivl cmp xchg pop and and cmp sbb jb push sbb sub add jno fwait cmp sub pop push push repz jo lahf xlat mov lock jle int3 mov push lea rolb xor jg or movhps ret int3 sub sub add mov cld inc inc xchg or mov in hlt test sahf imul mov jecxz or fs dec out lea cltd sbb dec stos adc jle insl mov xorl and mov sbb data16 in xor pop shll aad or pop (bad) aaa fstpl dec imul movb lahf mov int cmpsl jecxz out int cmc arpl xchg bound xor out and lds dec loopne inc enter or cmovb mov mov pop adc sarl cmp lret popf inc push lret test es flds mov daa or lods or mov jo pop les jge or and imul jl cmp rolb pop mov mov and lds xlat scas xchg adc inc cs cmp sbb lcall test ss push dec clc push ja xor sub in sbb enter push into mov in enter fsts and ret mov xchg pop insl mov push inc push pop mov clc mov jecxz fdivrp sti jle inc mov fstpl jecxz je loopne mov out pushf jo,pt sbb mov cmp inc pop jae cmp push push xorl movsb popf aad (bad) (bad) adc push cltd divb sub jno xor shrl or pop js sbb (bad) hlt (bad) gs mov (bad) repz dec test scas lcall dec mov or out mov inc push daa clc andb mov sbb dec sub lds mov mov stos outsb or shrl (bad) and push je mov xlat data16 test ljmp lret les outsb cli dec sub nop lret xor in xchg xchg ljmp cmpsb sub mov hlt stos dec jno sub pcmpgtw lods push mov or mov ss mov adc fs pushf dec push bound pop ss loopne pop add add in arpl (bad) stc cmp loop dec (bad) xchg (bad) rcrl (bad) in mov xor pop inc imul sbb insb ss fnstenv lahf fimull (bad) mov mov or in cs xchg jno xchg and aam pop and lea movsl or jno cli jns mov inc loop outsl mov out ljmp insl (bad) and mov icebp out int and (bad) mov mov or cmp mov sbb daa into mov pusha arpl mov sbb xchg jns lock popa adc and push sbb xchg int or sbb mov jnp push or jne int push sti pop pop outsl popl movsl fnstcw jg cmp aam out movsl xlat ss xor fldenv sbb fistl mov jb lahf ret aas push sbb into out jnp jmp cld stc jmp pop pop cld jne in pop jl pop std pop cmp push sbb ret push (bad) rorl mov mov fiaddl popa iret push mov add sarl jae movb dec cmp int icebp cmp jns jmp mov outsl push lods lods aaa inc and mov stos aam cmpsb jp (bad) fisub mov pop lods scas (bad) jo pop (bad) mov pop mov pop adc inc push jnp add add lods pop xchg std rolb jp insb in jg into scas xchg cs mov jg mov iret mov pusha xor rolb add add push dec dec addl lea lahf fsub xchg divb inc pop push (bad) daa das jecxz imul fidiv call movsb xchg inc lret imul jle inc push lret fs mov mov jecxz cltd fsubrs scas adc pusha mov dec dec cld movsl mov add add inc push or mov cmc nop dec (bad) scas aaa lret cmp cmp fidivr into xor push jge fwait dec je shll push or in cld movaps xlat mov lea and mov inc cltd test scas movsb adc xor nop sub aam push jns repz gs mov mov arpl and jmp add adc push mov in (bad) xchg icebp adc xchg shll xor out lods adc mov inc fs adc jp push dec insb push out movsl lret mov jp push inc scas mov mov call sbb cmp out pop mov roll dec sbb cmpsb (bad) ljmp aad stc jl mov add js in nop sbb pop push in cmp push xor xchg xchg in or aam push mov (bad) push push pusha and gs sub xor add inc jle and fdivr test jb lahf inc mov lods fs xchg fistpl fdivrl jg jl addr16 fistpll pop jle jg lcall out ss (bad) inc mov in jbe (bad) pop in out mov pop fistpll cmp mov lcall mov movsl mov test das sahf out pop aaa mov inc mov inc and jbe lcall add xchg adc arpl xor in shrl push and adc jp mov insl push xor cmp (bad) mov movsb push pusha notb sub mov mov pop scas aaa mov dec jbe arpl arpl mov lods or and sbb mov movsb jp rorl lods adc pop roll sbb (bad) adc imul pop jmp sub jbe jmp xchg mov dec ds jne aam xchg mov rorl cmp or mov or dec insl dec xlat test dec movl pop xchg adc lea rol (bad) mov loop mov inc nop push sbb mov or leave call cmpsl fcoms ficompl bound xchg jnp imul xchg xor in mov fildll sub push ja in insl ret mov sbb add (bad) insl (bad) jl xchg inc loop adc enter xchg in aad xchg push add sub xchg jg or (bad) enter cmp int3 mov imul aad mov dec inc movsb xor insl and mov or dec jp test dec sub (bad) push movsl loop push pushf push adc and pop cmp out inc cmp xlat enter dec fwait sti aas jae (bad) out pop xchg movb aas jae inc inc psllq outsl cli orl push aam mov jbe mov lods mov out inc lods aaa orb xchg (bad) push rcr imull push mull fwait cmpl dec stc push lock lods and pop stos pop cmp mov int sbb roll rcrb ss mov int3 stos push ja mov addb in jecxz mov mov or xchg dec (bad) mov jl push adc fs jbe ss push ss xlat arpl jl cs dec test mov rclb xchg jl movsb arpl test add and dec lea sahf adc fldenv lods movsl mov lea mov cmp (bad) sub cmpsb adc xlat cmp (bad) jg (bad) jmp xor mov jge lahf cli pop jg xor jae iret sbbl js int3 leave mov dec ficomp out and mov out adc and mov push int add in mov outsl loopne pop mov fwait jl (bad) aas and adc jno xor mov sbb xor (bad) dec ss ficom rcrb sbb sub mov add sbb movsb push jl test test xor std outsl aas jg xchg loopne mov js dec or mov inc mov mov mov cmpsb mov lea lret mov jno cmp sarb mov aaa hlt inc fmul jle or mov out arpl test leave cmpsb mov xor push negl in jne repz outsl fisub mov adc mov mov out dec (bad) xor sbb imul lret out cmpsl mov mov imull sbb movsl nop (bad) lea (bad) sbb nop (bad) arpl js jo pop bnd push dec lea sub lret bnd leave sbb xor es mov sbb sub movsl inc inc add mov cltd not mov daa iret std (bad) sysexit insl inc fisub jp pop pop sti sti sbb insl pop push sahf mov add aad (bad) xor jae jo sub pop fcmove fistpll aam mov xchg pop cld iret stos out mov jb mov sub shlb imul cmp into cmp fbld mov mov fwait int3 sti sbb out leave mov lret incb sub cmp jae fmulp sub xor pop xchg (bad) adc sti out xor cmpsl mov push cwtl decl mov jno popa cmp dec push sub xchg (bad) dec mov aam gs in and and mov jmp out das inc sub out push test icebp adc dec ficompl mov xor (bad) nop mov aam rcll pop and out jmp push ss dec dec ss xchg and or xchg mov adc lcall pop adc mov pop jne (bad) cmp or cli mov in stc jno mov popa sbb mov push jmp scas pop xor insb icebp xlat ljmp cmp lock aaa andl popa fimull imul inc stos mov lods gs int xchg xchg arpl dec cmp in jle xor lds in scas jg fisttpll inc popf iret imul ficoml leave adc roll push adc push fisubr int daa mov adc pop mov imul adc lea jg,pt or aas jno mov add int3 inc pop rorl add outsl pop mov pop cmp mov lea inc dec lods jge add ret push cltd xchg push test add sbb xchg push iret or adc sbb ror psrld (bad) cwtl bound lods inc repz stc mov dec outsl xchg sbb pop dec cmp test inc pcmpgtd sbb add xchg jmp ljmp sub inc cltd mov xor and xlat aas les jmp push lds fldt push pop and pop fwait das inc adc out sub je pushf nop dec fldcw in push cmpsl lods (bad) int and push adc js (bad) xor cli mov (bad) fmull movsl lcall inc and pop das leave jno or imul imul (bad) xor xchg push bound xor imul leave das test dec es pop inc imul xchg fnstenv adc iret in inc lret testb add jnp leave add or stc cwtl cmpsb out jne rcr sbb pop xchg imul sbb mov out icebp mov sub sbb inc xor lea push mov mov add fwait pop faddl add rcrb and sti jmp jp mov loope bound aad fildl (bad) aam mov and pop jns push jl adc cmp mov je push data16 outsb pop (bad) xor fidivl insb mov lods sbb imul das (bad) or mov test pop stos int mov inc cmp sub mov sarb lea sarb fistl xor outsb xchg test push jl xor fmul sbb scas stos dec jbe push nop inc lret mov mov fst and pop adc mov add lret nop lret dec dec test scas dec cmp xor xchg inc pop hlt loop out push fcmovnbe sub pop sbb in pop cmp sbb fisubrl into lret pusha and fsts sub js cmp mov aaa mov cmp cmc pop and mov stos jp clc mov fdivr imul push or cwtl inc dec mov cmp cmpsl sbb xchg mov insb std jne or jg inc negl or adc lret (bad) cmp call push test movsb test xor dec mov mov inc test aaa dec leave leave or lret mov movsl pusha lods dec mov int fcompl or xor test insb lret pushf in stos (bad) jge sub add mov ss xchg xchg mov sbb int3 adc inc mov mov iret test movsb xor aad dec push jnp or inc fs push lahf sbb fcmovne ret not jno push shlb cli mov lcall lods loop test ret aaa mov cmc push jmp pop iret mov test pop or push push scas negl ja mov mov decl enter push mov out inc jnp mov mov fidivl (bad) cs je and or adc popa push xchg inc push inc mov xor fdivr clc pusha xchg push lods mov bound mov jb cmc sub mov (bad) mov pop push cmp cmp sbb mov pop mov fstp dec jne jge stos push mov pusha aaa xchg push mov dec mov cmp inc dec lods xor push (bad) jne or jnp push sti xor push fwait push push mov aad outsl mov xor int3 imul mov arpl fxch and pop aas pop movsb mov cmp fildll addb outsl add add pop lret xor jge repnz scas jmp lret and jne leave mov imul imul test mov cmp and imul dec pop jbe decl and pop imul jne push push inc pop das mov fistl xchg mov inc dec inc fwait sub sbb inc adc hlt (bad) sarb lea mov mov or fcmovu out fstpt xor fcmove xchg lea icebp sti (bad) xadd mov js test sarb xor pop inc mov ja inc dec es adc and lret mov mov adc mov ljmp aad bound ss adc hlt leave xchg xor loope xchg fidivrl ret (bad) loope adc sti jmp mov xchg mov test shl loope fidivrl and xchg (bad) jp mov sbb xor mov call mov dec cwtl jg cld push or (bad) jne ficoml shlb cmpsl frstor pop mov jl jecxz nop pop inc add mov mov dec xor add fcompl xchg push xchg pushf lcall cmp push out xor and stos outsb mov xchg cmp dec ljmp ds (bad) or and aaa and push ljmp jl inc and jne sub mov (bad) cli and neg mov test and dec nop fwait out inc or insb xchg dec xchg and or adc inc daa sar stc dec stos notl xchg (bad) push mov rorb (bad) cltd outsl shll pop adc popa lahf mov inc mov pop or test stos add not test adc adc mov jne mov cli jo dec jb lcall repz pop lea stos out (bad) mov mov inc cmpsl sbb clc loope pop int3 scas mov sahf mov in aad ja imul fistpll push fstl gs sub fidivrl sub ds (bad) outsb pop or add push push fildll sbb cmc incb loope sbb fldl xchg inc add (bad) sarl xor rcrb inc push mov push sarl push jle push cmc pusha inc aaa scas sub mov xchg bound inc out popf mov into mov mov int test add dec test push xlat push aas mov js cwtl sub mov jne sarl jo xor lea xchg lret add mov arpl dec and out push mov and dec bound xor insb mov je fwait sub jb (bad) stos adc push bound iret in mov xchg mov rcrb addl stos xor insb xor mov ret (bad) fstl mov or test mov fadds mov cmove cmp vmovups data16 arpl xor mov or popf push shrb loope jae mov mov sahf pop sub (bad) sbb fbstp popf jno push shr es jge dec xchg xchg aas addr16 pop dec jns cmpsl rcll xchg push add into mov push add mov pop cmp jno fdivr sub jmp (bad) xlat scas sub insb ret inc push cwtl pop mov pop test adc bnd pushf (bad) jbe mov rcrl sbb cmp mov add mov lock xlat aas dec nop insb mov mov mov in adc mov push or loope xlat adc pop xchg mov shrb xorb cmpsb xchg call (bad) jbe pop stos stos mov mov (bad) lods sbb cld fnclex and idivl test nop sarl fcmovnu sbb mov je sub dec jb push add jnp pop xchg lods xor (bad) cmp (bad) sub mov sub (bad) mov push jae adc shlb pop fsubl xor jns call inc sub mov mov dec mov loop cld cmp cmpsb popf popf aaa imul mov cltd pop dec fs pop or mov rorb mov mov jle push push jecxz cmp add notl jo mov xorl add xchg jae lret scas xchg data16 inc mov lcall jbe subl push ret cmp mov mov cmp aaa adc fimul cmp adc scas gs jl mov arpl inc xchg in ljmp ss pop mov and push lea mov xchg in and add enter aad ljmp dec fcoms mov pop les mov (bad) in lds jno jo fldl popf js cwtl ficoml inc mov (bad) out scas sbb cmp adc cmp test sbb inc outsl jmp and (bad) jb push cmc leave popa push ret data16 outsl out mov les mov jne std inc dec pop mov lock loop (bad) aaa jb xor fdivrl or add inc leave or mov shrb arpl in into and add popl adc mov sub push jg bound lock inc or aam data16 sbb push leave outsb push ja cmc jnp sbb pusha or lret insb (bad) gs loope push pop insl add inc mov (bad) jne push jl mov lret mov xlat inc mov negl mov sbb insl icebp mov mov xchg jg mov sti jge xor xchg xchg es xor loopne lret sub push cwtl loope scas outsl jl adc or aam mov fiaddl jmp enter mov jns sub popf add pop mov push xor call sbb movb aaa mov fwait inc or aam cmp (bad) mov lds xchg rorl push add cwtl cmc orb mov mov cmp popf xchg jl stos dec mov jae popl add (bad) repz pop dec mov or cmp mov insb xchg sahf aaa ja rolb roll and nop mov iret or scas icebp add jmp out and adc and divl and ficom inc aas push jmp int3 jbe xor mov pusha xor mov mov inc shlb pop push and lods (bad) stc sbb jno loope dec and mov pop sbb adc pop xlat cmp sub fidivr jp xlat je loop aas fsubr aad sahf and int3 push (bad) sbb je mov jno js cmp loop out mov mov dec jge test inc aam jb jnp xchg popf insl repnz icebp adc push je lcall sbb push sbb mov into inc xchg les scas pop lods cmp (bad) (bad) into mov movsl push push leave call jp out rorl iret insb test repz inc xor mov movsb ds jne mov test dec dec aam clc (bad) lea rcll sbb cmp fnsave ss xchg faddl stos test adc jge cmpl or jbe jo idiv and scas (bad) cld cmpsb add outsl push movups cmp (bad) (bad) (bad) je adc ljmp shll add push pop pop aad jge das xchg pop ja push fidivr pop mov shlb cmpsl cmc or inc jmp fcmovnu add (bad) xchg in dec cwtl jne popf shrl clc push sarb imul cmp imul mov hlt lds out mov adc out jp scas dec push (bad) adc push (bad) fmul dec adc inc inc adc test jae shrb mov pop mov sbb int insl mov les jge fwait lret or or clc inc push sub sbb enter mov mov mull fsubp cmp lea and mov sbb push repz stos test push pop push leave mov in mov cmp add adc (bad) jmp jp scas mov flds mov into xchg fldenv push push movsb stos jne adc adc mov dec nop mov rorl push pushf lods pop pusha add add sub mov jl sahf mov test mov mov push or mov mov cmp pop mov es ret aad mov cmpsb in mov adc (bad) mov pop fldl test pop lret rolb lret jcxz (bad) sqrtps sbb jmp and pop daa or (bad) jbe es pop mov adc mov (bad) mov jno nop cmp repz in add stos in xchg mov cmp repnz jno incb push psrlw fcoml mov mov sbb nop test pop add dec out jns jae xor int jo inc xchg xor jl divb mov cmpsb pop pop push test or (bad) push ret and cmp lcall pop cli sti fwait add clc cmp (bad) je out in pop ss loopne inc js and jnp add pop sub enter inc movsb cmp arpl dec lods lcall clc pop shlb rcrl int lods pop sbb (bad) jmp push jb out cmp scas add (bad) xchg sub repz sbb imul sbb hlt js addr16 cld arpl push fildl pop jo mov add and jmp pusha jg push fs fisttp clc sahf push neg mov lock enter push mov pop sar popf nop sarb push push push xchg (bad) and (bad) (bad) mov test notl dec jnp mull ror mov pop iret mov stos cmp repnz jp mov and lods loopne mov enter repz cmp and negl jecxz rorl and pusha repz inc leave dec push (bad) jmp (bad) repz or mov xchg pop arpl popf repz mov fdivp or push mov movsb push aad incb push fmul arpl cmc pop imul (bad) sub lea lea rcrb aaa repz (bad) sti jp add inc fsub aaa dec jge idivl in sbb lds bound dec rolb call daa stc push test or es xor adc rclb mov ss dec jnp jmp push mov int pop pop insb mov inc mov cmpsb fsubs (bad) icebp push mov adc out push mov ret in cmpsl adc xchg jge jno rorb shr xor sbb jno ret nop cmc push inc adc ret imul mov sbb das xchg stos xchg mov add adc clc push ds daa mov adcl adc test lea call in idivl ss mov adc in mov mov push push pop dec dec xchg push addr16 cmp fcoml iret lahf fistpl push and and inc aam ja ljmp xor pop push hlt mov fstpt pop loopne xchg sub sahf jbe lock pop mov pop pop sbb ret push dec push mov je push (bad) jae dec leave js cwtl pushf rorl insb jge xor ret mov mov (bad) popw outsb dec aaa jl (bad) in inc cmpsl outsl in shrl xor daa adc adc xlat ret inc gs aaa (bad) (bad) jmp jnp mov xor push or push jmp pop mov mov mov into pop sbb pop inc inc sub in dec cs jmp mov sub cmpsl or lcall mov (bad) (bad) jns imul int3 push mov jae adc or push sbb xchg mov fcomp mov and ss and nop push or add mov pop popa xchg push xchg jae fisubl xchg sbb ss xchg mov xlat les inc adc cmc jbe (bad) out xor sub (bad) scas (bad) jle (bad) mov dec cmp rorb or (bad) mov jmp cmp pushf test mov inc fnsave movsb loop inc dec scas push js inc adc lret pop subl lock lods popa (bad) cmp in mov mov fnstcw js mov jnp,pt pop int3 add fwait jne in add pop addr16 repz jns lock insb pop out sbb mov inc ds pop mov jae xor ss mov fadd mov (bad) mov orl pop cmp jp and in push cmp pop aas pop leave sub std std lea jl lods in and inc pop sub or icebp xchg rcl pop int3 xor fldl mov xchg je nop pop leave mov outsl and scas lahf mov add rorb xchg mov xchg pop sbb add and clc add in push mov lret je xor (bad) aaa mov jp lea mov mov xchg cmpb mov int3 sti rclb pop daa mov push in inc cli jae jl mov rolb and lret pushf pop mov and mov scas mov out std and rolb jb bound mov cmp mov in movsl xor ja test adc sbb in dec pop fistl inc ret sbb xchg mov gs es idiv sub xchg mov mov push test (bad) (bad) xor test mov xchg and in push adc xor out cmpsb jae jge (bad) jmp cmc push mov imul mov dec mov sub cld pop jl pop imul mov test lea icebp es dec pop (bad) dec cmp inc out cmp xchg into and lcall mov jmp push cmp push mov mov or xchg push add fldl mov in sub gs jp mov jae pop sub pop iret cmp fimul push (bad) adc shll cmp adc mov mov outsb ret pusha (bad) and ds sub test in insl mov std iret test push sub imul cmc out push xchg cmc sub and pop popf or xchg xor and outsl test cld fnstenv mov mov and stos movsb inc dec or int and shlb adc push push jbe lcall int loop movzbl sbb iret adc std sbb or lahf xchg lcall jl movsl lcall mov push fwait fwait insb cli les or gs jmp lods mov out cltd cmpsl cmp inc popf outsl xchg jae cmp call (bad) xchg add and dec inc inc push fsubs pushf insb enter cmp push addl aam jnp jmp sub mov cmp inc aaa ss outsb xchg insl ret or imul fst push sti imul mov jmp arpl push dec push movsb mov pop and push je out negl pop jmp (bad) sbb fsub (bad) dec je pop imul icebp stos jnp push push rorb xchg dec leave add cld fidivl cmp cmc or inc gs aam repnz jge es mov xchg mov mov xorl dec imul hlt es mov mov pushf mov in gs xchg les mov cmpsl outsl repz dec ds jge cmpsl lahf jp cmp out mov xorl inc cmp shrb enter nop (bad) mov xchg rcll cmp shrb ror inc or out mov and loope sbb lea fimull push leave mov inc test in (bad) push mov lds imul aaa pop xchg add mov (bad) sub dec pop setb addb and int3 xchg xchg xchg add sbb push dec insl jns jo dec loopne rorl cmp fcompl stos jns sbb xor mov lds sbb test xor mov and push aad fsubrl ds dec pop dec int3 adc pcmpgtd jp fisub daa call (bad) lret jl leave xchg dec mov popw in aas outsl inc repnz jge es stc clc jne sti aam jge cli add js dec mov jp mov pushf (bad) mov out insl sahf jle sarl les jl arpl test fdivl cwtl scas jge dec stc out les jge mov xchg nop or adc and test in dec hlt push sub in popf neg jo push add mov icebp mov lret aaa popa jae push xchg cmp lock shlb push mov lcall cmp scas pop mov ret ljmp xor jbe xchg call jb in xchg ja adc mov xchg mov leave push mov mov scas push push sbb fstps (bad) mov in call ss pop push adc push repnz or incl lock call inc mov adc stos jmp test jns ds xor lcall cmpsl outsl lock (bad) cmp out aaa lock pop repz push js vsubps ljmp lcall fldenv in fcomip cs shrl sbb hlt insl pop out std fsubrs icebp mov idivl jmp cltd (bad) fucomp cmp out cli js sub (bad) leave or and cs jbe iret stc add dec jb addr16 cmp sbb and addr16 (bad) push or mov fimull mov outsl test mov aas icebp mov add fwait sahf xchg xchg jp sub add out add and out imul inc movb lahf push cmc movsl or sub and pop xchg push (bad) jo cs push fwait les dec mov movsb push mov je jo dec jo cmp dec ds mov repz sub fidivl fimul mov xchg bound adc movsl mov iret jle push aas (bad) mov loop sub repnz jg pop (bad) push outsl bound sub gs cmpsb imul into outsb mov and imul xlat icebp lahf incb out cmpsl clc mov in xchg (bad) lock jle mov jmp pop mov pop xor and jecxz rcrl mov xor jne pop fstps rorl mov cmp push jne fisub or movsb insb add adc cwtl ss inc xor push sbb inc rorb ds dec sti jp setg mov add add out fisttp neg xchg push and xor fidivl sub fildll pmaxub pop mov pop lods sbb and fstps pop mov mov addr16 gs mov xchg sub and stos push pop mov popa call and shl pop sbb imul cmp movsb bound mov jnp int3 xor (bad) aas imulb (bad) xlat pop jle aas idiv (bad) js dec pop in pushl jecxz popa mov movsl or test (bad) sub out scas aas sti sub out fsub out mov dec pop icebp sub jl iret lock cmp iret mov in pop lret aaa mov imull xchg push xchg add and aam mov mov popf xlat mov fsubrs pop and jl adc mov test repz jecxz xor inc addr16 adc dec rcr pusha movsl imul sub add or mov push push cmc mov adc jo into ss mov mov xchg xrelease jmp mov pop sub pop and stos pop mov mov insl cmp mov mov xor fiadd stc pushaw or cs inc mov jl xchg sbb in imul and (bad) mov in test aas repnz (bad) std jno (bad) pop aas shrl fnop paddd aas out pop clc in call cmc jmp rol cmp push cmc lahf or inc jns or int3 repz stc stc cmp aas cld xor jg sti mov push jle bsr mov pop clc out mov (bad) fmulp jb (bad) aaa mov cmp sarb sahf push lea pop mov cmc push test mov fs pop ret (bad) adc call repz sbb mov movsl xchg jmp roll cmpsb shll cld cmp loope jae adc pop mov addl push fucom icebp fdivs push mov or lret cmp mov sbb sbb push es fbld mov insb and loop mov mov mov nop pop repz jne pop cs adc pop mov adc or ret xor inc out aam (bad) xor outsb lock lahf pusha pop data16 fwait call cld pop incl cmc scas ja mov addr16 jbe dec sub cmp stc add fbstp iret cmp jecxz aas dec into cltd (bad) xor lcall jnp (bad) cmp outsb (bad) decb ja mov lock fdiv xchg pop imul int3 inc push xchg cmpsb xor bound push out loopne aaa mov adc and lods dec mov inc adc enter mov fiaddl fwait cmc xchg fucomi xor add loopne lret movsl std jae adc data16 (bad) addl sahf xlat stc mov into sub sbb (bad) incb sub jl lods or mov lods cmpsl sbb out jge cmpsb aas hlt jmp xchg enter mov pusha clc cltd scas test push scas xor and mov pusha pop adc jge int (bad) push (bad) mov cld lock stc out mov ja iret div fisubrl push mov cltd addr16 popa mov mov out cltd out (bad) stc addl int sub lret mov out repnz pop jb in dec sub (bad) dec scas pop mov aaa repnz pop ffree (bad) std int3 and lods mov idivb inc xchg mov shrl test xchg repz test inc call (bad) pop sub subl jb mov daa enter (bad) cmp repz ja pop shrb cmp pop aaa pop arpl push and or jo dec rorb jp ljmp adc daa mov and inc add inc outsl std and (bad) ret xchg mov stos or out movsl fbld push cmc fdecstp lea out (bad) aam xor add fdivp movsl lea pop mov in mov add bound jle shlb call jg insl and aas notl incl into out jecxz mov pop push pop pop pop mov outsb sti neg outsb xlat cmp adc mov mov loop daa dec sub inc rcrb hlt lret sti adc mov pop out jmp cmp dec insl and icebp test gs shl xor (bad) push push add stos iret (bad) jge sti shrl ds xchg mov inc das out sbb mov aas leave push lahf mov cmp inc mov mov adc add ret subl jmp inc dec lock sub mov ds mov outsl ja scas mov and int3 push or ss cmp mov sbb scas xchg add push cs aas pushf pusha xor xorl fmuls rorl addl lods push inc adc pop push fistp mov jle addr16 repz dec pushf mov jg mov ret cmp cmp fcomi mov std inc inc mov gs cmpsb xchg xchg or xor lret pop lock push cmp mov jbe pop cltd lds ljmp jbe sub and sbb push test xchg test add stos jmp iret pop pop push sbb sbb mov (bad) lret mov paddw jg mov pop sarb decl data16 ret inc fdivrl faddp out out cs divb std jge xlat imul or xor out out out inc inc xor lods mov shrb popf ja mov sti fidivl loopne popf cmpsl lock ljmp ljmp inc loopne jno fimull aam inc push xchg arpl jle xchg or ret roll movsb sti inc adc pop add jbe je xor pop push rcl xchg int3 xor sbb out push clc add rorl xlat std xchg inc hlt lods inc jg add xchg inc xlat jne daa push lcall fs cmp adc fwait pop inc lret in sbb inc lret iret mov ror fldl mov out adc dec (bad) inc loopne imul loop sbb push outsb ljmp jb and inc out adc push fnstcw fcmovu decb cld enter jmp xchg pop jle pop nop jae rol div divb lcall mov test push push inc pop ljmp pop scas xlat cmp cmp (bad) divb aam enter insl mov insl insb outsl outsl jecxz mov test loop pop out stos scas js into pushf sbb push mov je and mov popa (bad) mov in dec and push sub mov push dec loop daa push mov or cmp vpsubusw lods mov mov stos enter dec fwait lcall mov mov subb lcall jecxz and inc stos sbb pop scas in fadds mov mov fiadd xor ljmp inc aaa cltd xchg jbe mov ucomiss (bad) add mov decl mov push adc pop aas out and mov add inc jg outsl jle iret imul adc std cmc jp pop mov popa jg pop jnp jnp or fcmovnu sti and and add daa sahf js xchg das pop inc cmpsb add (bad) (bad) push push dec dec sub mov addr16 stos jno lahf jp stos lock dec clc in repz aam and js xchg cmpb lods cmpsl sar dec orb imul pusha pop and xchg fimull dec xlat xchg mov cwtl adc addl les pop cmp xorl push rorl pop adcl or sbb fwait orb push fdivp fnstsw jnp push out rolb push add push mov dec add nop or int3 js aas fnop mov and push dec repz mov int3 inc and mul xor out lds sub and inc icebp jno dec adc inc jno cmp push data16 out jl ret cmp sti (bad) fimull xchg adc cmc push fucomi sub pushf xor adc popa jo rcll dec cmp iret jle mov movsl pusha imul cmc sbb pop ljmp jnp sbb dec sahf in iret xchg jae mov daa nop jae push std jmp pop icebp sub and cld sbb xchg cmp mov mov mov (bad) rorb sub adc and aas sbb js jne rol inc inc (bad) pop jb dec lods or push dec orb movsb in sbbb push mov int3 push bound inc sbb int3 mov add dec add sbb rcrb (bad) lahf andl (bad) ret aam test xchg pop out aad mov lock cmp shll int3 sbb sub jmp jb pop rolb dec outsl dec push shll insb mov mov xor (bad) fisubr sub int3 inc loope aas nop cwtl inc pop mov pop mov test jg mov outsl std mov ret mov mov loope aad dec sub aaa and inc jp aas movsl test in insl pop mov (bad) cmp xchg aas stc xchg js sti (bad) sbb and jg out mov js data16 fildl xchg push cmpsl dec popa imul mov lods mov lods lock pop cmp divb dec loop std lds cmp rcll push xchg jl fiaddl and fiaddl add push cs std xchg jge xlat mov stc (bad) fadd push mov call xor xor rclb and adc testl xor dec je (bad) xor inc (bad) jg xchg out jecxz jl repz jne xor lods push xlat imul push pop cmp dec pop (bad) dec adc sub inc push jl pop sub stos xor adc mov imul lret add das pop xor and int3 jg fild mov aaa mov jb call lret outsb pusha dec add push lock loop lea (bad) push jg sub dec popf ret popf cmp inc cmp pushf inc into sbb cmc sbb fcmovnu lock (bad) jecxz je rclb outsb rcl push icebp loopne psrad mov fstp jae sbb adc sahf (bad) (bad) (bad) push xchg test fcomp fldl2t cltd lds jg (bad) rorl rcrl in sub stc adc inc and in je cmp repnz mov out cmp inc cmpsb pusha lods cld add test dec or fcomps cmc imul add jo inc gs dec jo xor inc lret addr16 rcrb push fistpll cmp cmp arpl or push jle bound fistpl inc mov inc loope out fnstsw (bad) fldt imul ret pop inc jecxz pop mov movsb pop cmp call mov jns mov or in (bad) adc adc cmp cmp dec lock pop repnz js lret pop mov das js pop cld loop jecxz mov xchg mov add mov fwait (bad) xor ljmp scas pop mov ret clc cltd lahf stc sbb imul test adc dec pushf rcr addr16 in pushf cmp adc ja aad rorb mov into popf cmp mov outsb jecxz lahf mov daa xchg test adc add sbb xchg mov mov dec push (bad) sar mov in cmpsb add add insb pop push or pop ja xorb inc mov sub mov movsb in sbb in les test ljmp sub andb push cwtl dec nop mov inc (bad) lret out jno jl pop or xchg stc stc cmp sub (bad) adc mov cmp xchg lahf mov push int3 aad pop pushf (bad) notl sub outsl or (bad) jns (bad) out out ds sahf mov outsl inc dec or dec pushf call daa jno aam pushf aas jg pop das pop les ds or in mov adc cmp sarb jmp (bad) sti pop pushf sbbb jg jno mov pushf jge,pt sub outsl mov xchg jae pop rcr addr16 pop ja add xlat das loope idivl sub jbe jecxz loope cmp add lods jne xchg rcrb xchg in mov xchg stc sahf shll push imul xor and add bound or cmp outsb or jns pop je push mov (bad) or cli mov mov push or std enter leave aaa outsb push mov cmovs jecxz xor and jae push mov sub call push add push and insl in add pop hlt lods push inc lret cmp ss add ret sub (bad) sbb and jg dec mov orl dec jecxz test (bad) icebp rorl stc and imul insl pushl in add out out cs mov sbb sbb fdivl sbb test (bad) jo imul fistpll into pushf cmp addr16 jecxz test ljmp sti mov fs push bound mov adc mov call push icebp rcll ror jnp rclb add cli jl xor dec sub cli xchg dec orl test (bad) insb out imul adc and jle aas mov mov sub sbb add mov jecxz xorl out pop mov movsb xchg jmp cwtl dec adc push add add or movsl pop aaa out iret inc aad lahf pop add mov rcl jle iret data16 adc mov push inc sub ja jns push pop lret jne pop bound xchg cmp cmp ja sbb js add jnp mov (bad) movd cmpl (bad) out jmp out (bad) dec pop cli push cmp in fst push stos push movl jnp mov in sbb andl push mov mov out arpl fs insl cmp cli rclb ljmp and aad inc mov cltd and repnz mov mov jo dec xchg jecxz icebp stc aaa add clc (bad) jbe (bad) or cli jno pop cmpsb sub (bad) icebp jns sbb loopne jp (bad) xor mov lahf jno jo cmpsb mov or pop outsl into dec test mov cmc pop push jmp (bad) dec cmp jbe pop js out lods sub int mov pushf je rolb inc mov je adc sbb leave jmp jmp xchg rcr jnp bound add cmp cmp sub mov test (bad) lret pop divb mov pop lock clc jecxz xchg std jecxz scas jnp jmp pop mov sbb out ja mov repz lock mov cmpsl dec lahf andl loope sub (bad) sub jl test stc lds push sub gs lahf das loop scas out jge or jne dec cld jmp fadds aam jl (bad) pop sbb call pop clc and push or mov ljmp fisubl add xor jge jnp ret sbb aaa sbb push cmp shrb rcr xchg in inc fdivl cs lcall and xor jno mov xchg test push inc das ja xchg and in addr16 (bad) jnp jmp dec xchg mov cmpsl xlat pop sti and sahf push or mov add mov ret js fiadd push fbstp pop js fiadd (bad) repz (bad) or loopne,pn iret jg dec popf cmp jge push and inc adc (bad) jmp icebp aam sbb push (bad) mov sti rclb in xor leave mov add mov lock dec leave push vsqrtsd jle lods rol cmpl icebp or movsb adc or lahf xchg dec dec and mov (bad) aad orl out jl cmpb mov jmp pop imul mov add lock lock movsb jle adc jb lods test lods cli add lret (bad) sbb adc or sbb jb popa (bad) mov fwait insb mov popf and into and inc lods jnp cmp rorb mov cmp cmp imul mov stos inc push cld add mov mov fcomip cmp lock fcomip pop fcomp (bad) and icebp xchg mov add stc popf fisttp inc mov sbb popa mov les not adc aad shl sbb add nop (bad) sbb ret (bad) (bad) iret daa add push pusha mov jge add movsb cltd mov add dec (bad) jnp sub xor dec mov sti stc cmp jle mov xchg mov mov cmpsl mov mov push sbb adc add icebp and or (bad) es bnd inc xchg ret adc out pop outsl dec sub loope mov mov popf add mov es add sahf push jo ljmp cli call push push push xor jle cmpsb std push enter jg jnp pop popa jnp sbb into popf ret outsl cld (bad) outsl loopne jg inc icebp scas ja stos sbb mov sti mov daa jle daa lock sbb or sbb cli movd sti mov mov sbb jp pop aam pop and xchg sahf cli std out mov int mov inc push inc out cmpsl or out cs jno jl and stos xchg cmp mov movsl xchg iret out dec xchg std mov sub mov mov push mov outsb (bad) jle push test adc inc and inc pop and push or xor pop jmp test push push xor jne fsub sbb push mov mov lods lods pop dec jecxz into xchg sbb xchg push xor or in sbbl cmpsl jg dec ds add dec cwtl cmpsb test add mov ja movsl adc ljmp nop shll jns push jp mov fstpt js xchg inc mov mov add data16 cmp jle or rol push sbb jns out pop sub in adc rcl jnp and sbb cwtl add add push sub add xlat mov out sti xor and and add subl jg rcll rcll and icebp js sbb adc jnp pop (bad) sub orl fbld (bad) cmp inc push movsb and (bad) cwtl dec jno sbb mov mov daa rcrl dec or adc insl xor mov mov add pop mov repz mov add test inc mov fdivs xchg dec pusha sbb jne jno jo jl jns (bad) fdivs pop imul add sti mov jmp ret xchg push lock dec imul add cli jnp cmp dec inc iret cmp in in hlt test mov lock adc lcall repz sbb lret cmp mov mov add mov pop add sbb sbb add sbb das push imul aam ss xchg or adc dec xor push sbb pop loop (bad) jmp insb sbb inc cmp std movsl (bad) imull into add mov mov pop stc cmp pop iret sub loop jge adc mov fdivs lds test jp pop pusha rcrl in xor or data16 test shl or xor lods mov rorb or mov adc mov ret ret test jns xor sbb xchg push mov cmp xlat scas loope inc push rol aas jl sbb into sbb icebp add pop mov sahf cmp adc dec je jo addb mov dec jg pop jmp ja jno fidivrl mov pop test test jne std and out scas push outsl sti iret xchg mov in adc or lock cmp aas sbb call mov dec cmp sub push push ss movsl xchg xchg cmc loopne fadd mov icebp sti cltd dec addl icebp jno inc ljmp cmp cmpsb neg adc xlat sti dec mov adcb cli outsl je push call cmc add dec sar add lock pop xchg cld adc mov mov fcomps sub loop add insl fadds xor loop mov cmp cmp (bad) push cld dec mov mov mov and lods pop mov stc repnz fsubs les roll les fdivrl fisttpll loope mov std out push push push dec jmp jo icebp mov (bad) jl mov fdivrp jl cmc push scas mov push or flds cmp mov mov mov (bad) lret push lods mov inc fdecstp ror sbb or push daa sbbb or mov mov sahf mov fimul ret loope cmp insb xchg add lods (bad) fsubp mov test add add inc push shlb or pop cmp (bad) aam lds (bad) imul mov add fisubrl lret mov fadds lods jno mov xchg cwtl sub out push (bad) insb inc (bad) stos add loopne bnd cmpsl mov into adc dec push push daa sti cmp loopne cli lods mov mov add pop scas mov mov pop mov loope cmpsl sahf ret xchg icebp icebp (bad) jg jmp sbb jno xchg dec pushf jae sbb inc push lds or (bad) out iret sbb jp push or mov jecxz iret clc ret bsf dec add jl std cmp out xor sbb push inc mov lcall orb add xlat fimul movsb fcomps xchg add or sbb pop (bad) mov mov mov lahf fstps add mov adc sbb jp sbb shr mov push mov aaa jb mov sar and mov std inc xchg mov push add mov mov sbb jl ret lahf pop jb mulb (bad) lock push dec mov push aas mov or mov das mov std iret loop (bad) ds repz xlat inc jno cmc cld add bound mov std cmp push jnp push scas pop rcr push into lahf aas (bad) adc dec sbb (bad) sub hlt jmp or scas mov cwtl pop out xor in mov (bad) jo addr16 out out jecxz pop cli add fdivl daa iret sahf rol jns (bad) lock xchg jle mov sar inc mov xchg add add outsb (bad) pop (bad) out std or das xlat mov sbb sbb mov divl subl lahf or outsl inc (bad) jnp sub xchg imul jae jno sbb aas adc ffreep jmp inc pop lret adc and jne mov mov aam movq popa test cli pushf inc inc ljmp cmpsl divl cmp cmp js cmp mov inc cmpsl jge mov mov mov sbb and out stos loop pop jle mov lods push and inc (bad) loop ljmp fwait mov pop mov loop in test loop mov mov call jge insb mov sbb sahf inc mov add or or outsl ds adc and lods int aad inc in iret add add pop mov hlt sti inc jg adc inc cmc cmp pop out add xor jle shrb cs pop test scas add mov dec sbb add mov add cmp push cld xor cmp push mov das lods cmpsl shrb add mov adc rorb add push js ds repz mov cmp push push push pop mov cmpsl xor mov into dec fincstp push pop popf (bad) and sbb inc and es movsl (bad) cmc outsb pop dec jb add std imull mov idiv ds outsl popa addr16 out test scas pop sbb cmc jmp jnp jg jo adc mov sbb dec and pop popa addr16 add in in popa sbb (bad) pop push data16 out out mov jbe div sahf ja add adc (bad) divl pop (bad) int3 mov push lcall inc jmp rorb and jp add add loop aad ffree loop je lret pushf xchg pop push inc or gs add cmpsb (bad) in inc mov pop incb data16 jmp and mov xchg ss flds pop mov pop ljmp (bad) adc jle je push lods and sub cmp fldl call dec sbb sbb fs fcoml cld xor pop jb mov ljmp mov add xchg icebp jmp aas cmp sar aas cmp in xchg (bad) test sub in adc sbb hlt fbstp sbb add cmp jo aam pushf jge,pt cmp cmp dec mov pop mov mov fadd inc icebp loope mov push scas jl pop arpl jge and pop outsl mov loopne add sahf mov out movsl jle cmp bound in addr16 mov xlat or stc mov pop test add sahf (bad) fcmovnb sti mov cmp loopne mov les xor (bad) fcomps mov or test add lret cmp sub das popf add add ss jg jmp lods rclb arpl push scas shlb pop push in mov shlb rolb popf jbe (bad) nop push sbb int pusha sbb fdivp (bad) mov out fwait cmp les cli jne mov pop cmp fist push jle cltd xor imul pop pushf cmp ss and inc cld inc clc arpl sbb and jbe loop movsl lret clc ret (bad) sbb aas lock pop jg add fwait pushf jecxz inc insb pusha mov add cmc jbe daa ss repnz jle rorl inc cwtl inc cmpsl test jge aaa incl cwtl sub mov mov je mov insb and inc inc push mov jecxz cmp (bad) rcr nop out or adc ret cs outsl sarl push push xor das push roll sub xor pop push fcmovnu xchg arpl andnps mov daa pop std nop mov lods mov test stos mov adc loop inc shll xor mov out aaa jle repz clc push xlat icebp mov (bad) pop mov div jno (bad) sub out fwait mov jmp outsb fdivrl fsubrp sbb adc cmp cmp dec out cmp mov clc mov jle imul fcmovnu fstpl insb or addr16 in in ror stc rclb xor ss cmp jg das jmp adc mov mov jo (bad) (bad) fisttpll push (bad) negl inc dec stos inc aaa jo loop add add pop testb lret dec es sbb test insl arpl daa idivl insl rcrl jge dec (bad) clc cmp aas shlb addl fnsave pusha inc adc xorb adc push imul sub inc lock fs jmp enter lea pop scas jecxz jle add sub sahf mov pop mov call lods or pop add fdivl pusha addl jbe adc sbb mov aas repz cld ljmp sbb jne jns fiadd (bad) jmp push (bad) btc leave xchg daa sti sub sti enter adc fbld (bad) pop out sbb iret int3 cli lods rcll aas mov push div sarl cmc divl shrb call xor sti in ljmp gs lock cmc fs mov push ljmp inc (bad) loop out nop jnp xchg gs (bad) jae mov mov lock call sbb or jp fsubrp mov inc sbb aam mov inc cmp cmpsl aas aam (bad) call ljmp aam add mov cmc (bad) mov and mov fimul in push xchg push pop lods add inc sub or or mov inc popf es cmp jg sti pop test negb cmpsl aas cmc sub sbb fstp in lret cmp adc fcmovnu cmp jl ffreep jno sub or mov stos pop std push sbb mov loopne fs fcmovnu fistpl pop movb (bad) jl,pt xlat jl mov mov jl xchg (bad) push pop out lds mov or dec add mov adc dec pop fcmovnbe xchg rcll sti mov sbb (bad) xor pop mov imul jnp nop pop push push les (bad) cmp (bad) icebp stos add aad orb or add mov or (bad) jno inc pop stc mov ds adc mov mov enter and push inc sbb push inc (bad) jmp inc xchg stos push jl fsubr movsb mov stc adc inc cmp ja pop sbb iret mov ja xchg out ffreep pop mov movsl xlat sti xor pop test fxam mov jae mov movsl mov subb lds cmp shlb or cli scas pushl faddp (bad) clc (bad) decl sahf cli mov sbb es stos aad mov xchg push sub test loopne push cmpsl xor xlat mov hlt repnz fwait ja fiaddl mov cmp push out xchg hlt icebp pop sarb and inc pop je sbb insb xor xchg arpl add (bad) fcomi loop lock cs push hlt aas push icebp daa mov inc xor sbb mov pop xchg arpl xchg adc and jge pop cld sub rolb inc adc fildl xchg or inc jns inc jmp imul push sti das inc push jecxz mov imul pop test cmp loope dec cmp (bad) pop push mov rcr mov out mov pushf inc adc mov popa xor fidivl stc pop jg xlat outsb push loopne outsl stc adc std fwait pop sti inc lahf movsb dec pop outsl xchg inc mov jecxz sub xlat cld inc push insb mov fiaddl cwtl lahf dec or (bad) aaa mov add jbe addl xor aam inc stos ja int3 xchg mov dec and sti (bad) in jno dec or (bad) ret xchg mov or shrl not fidivr stos push and add mov jmp shlb mov js mov hlt sbb addr16 xor jmp addr16 addl rcl mov sbb lock cld fcom loope xor hlt fsubs les scas hlt inc and ror or cli adcl cli je lock scas in dec cmp idiv dec cmp les mov pop pushl sbb and aaa push push and into sbb in arpl lret out inc rcll in outsb js (bad) imul pop sub adc sbb mov andl or xlat (bad) icebp test inc sahf mov jecxz cmp pushf mov in mov xor pop jp fiadd (bad) mov rcl aad (bad) mov or lock gs je xor imul daa cmovl or push out cmp push push cmp aad lahf sbb push in jmp sti cmp scas insl pop mov cmc xor mov cmc bound adc loope icebp add xor add or jl add rcr icebp pop lds jg pop lock pop jle push fdivrp repz push test or test mov (bad) xlat xchg push loope push jbe and out popf (bad) xchg jmp fwait addr16 mov dec sbb mov test mov mov jns cmpsb dec xorl ljmp cmp push cmp enter cmp dec aas inc and sub les mov sarl and cmp cli inc sti push movsb push in adc fiaddl das mov jno push add pusha xchg pop movsb dec jno pop xor add xor in in imul xor jg jnp (bad) push mov mov ret movsl daa push ret xor fdivp fcmovnu fldl2t mov mov enter std je loopne out pop ret das (bad) mov aas lcall pop (bad) ljmp xchg pop incb sti iret call pop push jns and out pop out movsl cmp jecxz xor mov movsb mov push mov scas cmp faddl adc push xchg lods loope mov and push fldt imul adc mov jmp arpl or sbb cmpl orl push add jle xchg in mov fist push push (bad) or mov (bad) sbb pop scas int aas jge jno in sub or pop dec jl test jp fisubrl into pop outsb dec cmpsb mov add lahf push xlat sbb jecxz push cld in jg inc mov lret xlat divl loop icebp call stc hlt cmpsl jo (bad) int inc and test aaa sar iret mov rolb sti mov scas ror xchg lahf ret lret mov mov out cmp lock jnp scas pusha lret adc pushf mov sub jg cli fwait add sarl test mov aas (bad) xor movsl mov xchg adc jno and add cli aam jno or sub jnp xchg add cltd scas mov jno dec xchg mov xchg call xchg scas sbb add jae xor insb add iret dec ljmp pushf inc popa dec inc cmc loopne or lds in inc or inc sbb pop lods push add mov or push lods mov sub cmp mov add int pop push mov clc mov cmp nop push jmp pop adcb add or addb xlat jecxz jl sub ja sti mov fstpl jge aaa cs ret popl shrl cmpsl pop stc push mov add (bad) add cmc (bad) out lods sbb das ljmp clc cmpsl aas decl sbb dec pushf rorl aas les xlat lahf (bad) movsl xchg add mov and and inc jge inc mov mov gs cmp push mov or cmp dec pop daa or add push notl hlt push movsb test mov sub mov leave imul and add mov lods in jp clc inc push mov inc movsl xchg sbb popa push adc ds daa adc mov pusha sahf xchg ljmp xor xchg sub adc dec out iret pop push (bad) dec or into dec jecxz out aas das insl mov repz mov stc push and sti push fstp push dec cs cmc ds and push or mov fnop lds add or mov jecxz sub mov das jns push clc (bad) pop arpl jmp pusha stos xor repnz lock js in outsl ret mov (bad) push jno popf ja outsl (bad) fdivrs pop clc mov pop ret mov gs mov and fisttpl sbb rolb xchg ja lock xlat mov pop or pop jl daa push test daa out jmp sub lods outsb nop jg mov roll inc jb xor std fdivs mov cmp pusha inc andb rorb jecxz add jnp inc cld data16 outsl cmpb or aas inc sbb add pop and cltd data16 int3 push adc push mov test xchg aaa pop and push push (bad) lret push cmp jae push cmpsl or jnp xor mov fs out sbb xor and sbb lahf xlat aam outsl mov lea or lock call pavgw lahf ffree mov pop jg mov test clc and xchg mov or jae inc jo hlt sub jge (bad) fdivl aaa pop incl mov outsl jp lahf cmp cmp and inc jb shlb cmc mov jae ljmp cmpsl aaa dec movsb fidiv test fwait lods inc fdivs fdivs daa fidivrl js js fild ret pop aas and mov enter add fcos icebp jno (bad) inc and (bad) jne inc cmp (bad) and add incb mov inc es iret fbld adc je adc push icebp ret cmpsl addb push fdivrs jb nop rcrl push leave fcompl mov fnsave and add jnp enter pop dec aaa ret adc mov xchg pop call out loope sub xchg out stc dec cld lods pop std or pop jle pop std clc addr16 loop mov push lods jbe ljmp mov push jg xchg loope das jp pop dec std jbe,pt cmc jbe cli stos lcall aaa xor (bad) pop insl cmp mov pop xchg into lods xor sarb (bad) lea out and dec push and pop ret call mov pop rorl shll mov dec fisttpl and xlat fild pushf xor sub aam xchg nop jne wrmsr sub adc (bad) arpl sti aad sbb lock sub xchg xchg or push jp imul imul mov and jnp popa pop cmp inc pop insl popf dec out dec icebp std sbb inc sub gs mov inc jnp and pop insb stos scas je sub data16 or in add or add loop lahf fiaddl add cltd jne mov (bad) mov xor gs sub xor mov xchg pop add jp or lods outsl cli pop in in xchg sbb ja fldenv movsb or inc xor xor rolb mov js loopne inc lret scas mov pop xchg jg sbb and mov cmp out jp rcrl adc mov lcall and xor dec out pusha sbb jb clc hlt xchg xchg ret jg aas mov sahf rcrl rcr ret or cmpl (bad) (bad) pusha int3 in call je lock xor not xchg dec add jmp xorl int3 add mov add sub push mov push (bad) std test mov pop sbb fwait pop xor cmp push (bad) or shlb insb push or nop adc inc and mov fstpt dec test rorb mov stc and xchg dec movsb sbb or nop rcll add and loope inc out and adc ds xchg or add add xchg sar imul lahf inc mov and pop into fistpl ja (bad) xlat sub loop adcb add cmp pusha xchg xlat cmp ficomp pusha push inc mov dec gs push push mov fwait pushf test xor neg das vxorps icebp rep jnp cmp or scas cmp xchg ret test xlat outsl lods jno cmp sti dec repz ss popa add dec sbb test jecxz sbb dec inc pop sub mov int3 sbb xchg setl or and jne cltd add push xor jle mov aaa shll xchg and pushf xchg mov xchg push add mov push mov dec les test dec lret dec insb addb pop add rorl mov mov call push pushf jg add push inc das xor pop addb repz push add push add iret xor or sub push mov pop arpl pop and xchg loopne pop add (bad) pop add xchg xchg arpl movsl rolb (bad) adcl jmp and lcall pop dec sub dec (bad) int scas jge cmp cld out pop ror mov iret sub lock scas cmp push dec aam test xor inc notl lcall das jb in jle orl ja (bad) popf arpl sub stos and sbb outsl lea adc fsubrl pop or ljmp testb sub add cli pusha cmpxchg popa cli fwait xchg insl mov aad je sbbb ja xchg inc xor mov mov sub ja xchg xchg scas outsl jns sbb mov aam adc push xorl outsl jmp sub mov clc cld loope jns call mov mov imul mov xchg insb int fstp stos stos jmp xor jae orl sub xchg or and sbb jns jne jg hlt cwtl aam and fs fstps or stos mov adc sbb pop clc (bad) out xchg cmpsb inc push dec adc movsb imul aad jae adc sbb pop insl mov dec xor or xchg test sbb mov push push adc xor out jp mov (bad) fdivrs arpl repnz push xor push pop imul in fs int3 jbe (bad) cs or add je and dec pop cmp xchg jge shrb push or cmp bound (bad) nop sub rcrl loop jnp mov xor pushf mov sar dec popf movsb and ss sub pop mov (bad) pushf and cwtl cmp adc inc xorl pop adc sbb mov stos repz jnp rorl mov adc cmp adc (bad) popa pop mov xchg dec add loopne cmp adc js xor out cmp or pop push rcrl mov int lcall iret mov and dec (bad) or or jnp push scas sub fs out mov imul fiadd (bad) fdivr adc inc arpl mov stc pop mov in ss xor jnp sub push add cmp jle adc mov fnstenv push loop ret xchg inc sub fldt sti outsb in (bad) fdivs xchg (bad) insl or dec daa and mov in ljmp scas mov adc ss pop push or sbb aaa add and xchg cmpsl and or out fs jb gs jp (bad) and add scas jns out fstpl mov in ljmp mov cmp cmp dec xor (bad) mov (bad) mov lcall or loopne or bound adc mov xchg popa sub and dec les in xchg xchg dec dec iret lea clc sti pop jnp adc or movsb mov scas xchg dec xchg mov add sbb pop callw pop push cwtl aas stos loope movsl outsl adc jecxz (bad) mov mov cs mulb mov jo adc aaa aas adc add adc mov insl mov mov xchg daa je inc xchg (bad) bound js pop out bound push cmp adc js lods or xor pop dec adc lock adc jns xchg push rcl adc loope fildll xor pop fst scas jno jae int3 sub cmp xlat fidivrl cmp mov dec icebp insl pushf lahf lock pop ret lock mov les int jnp mov outsb pop push lret loope les out xchg addr16 mov sbb mov xchg push inc lret movsb mov leave sub mov out jnp mov lock fbstp rclb mov push imul push sub outsl xchg xor out inc jmp mov add xchg out mul in xor adc subb fidivr (bad) mov cmp pusha and fldt mov or add mov test aad or adc stos add xor scas mov in xor imul push pop cmp push mov mov fistp adc pop pop ret jns inc inc (bad) xor popa fistl xor jns and mov xor sub mov xor adc jae pop pop mov pop mov hlt ss jnp rolb jmp xchg jnp cmp mov mov mov xor sub adc xchg les push jge clc in mov call (bad) mov add icebp jb jb push mov and push pop out cmpsl xchg adc adc adc fistpll into push pop imul dec scas stc data16 rcl jg inc shr sub inc jo sbb mov jmp jmp add gs lods adc dec jecxz std jns sub jno imul inc int xor (bad) shrb mov push das outsl push and jns cmp cli pop data16 cmc rcll jno mov call or mov ds adc shrl mov mov lret mov stos (bad) dec inc popf sub insb cmc or sbb cmp mov js outsb mov mov add lods inc add lods cmp cmp fs ficoml inc dec inc adc push and pop cmpsl and stc sti mov sahf xor mov lret xchg movsb loop push jb pusha pop add enter popf add ret sbb add jno insb icebp hlt jno add dec dec mov add add inc push imul mov stos sbb dec int3 and in ss cmp add leave aaa gs adc (bad) cmc hlt aam push push mov clc mov adc jns pusha fidiv hlt aam mov ds call mov stc mov lds je sti (bad) int js push scas imul push daa mov lods cmp dec cmc shll and ror jns sub dec push scas (bad) mov daa fdivl ds out in shrl std je xchg or stc mov xor xchg imul add ficom pushl mov add pop or push lods add jae add inc dec nop pushf xchg in and pushf push dec nop adc push and lock js sbb (bad) (bad) jnp xchg mov jge xchg xchg adc in movsb add pop adc and or rcll popf jmp dec xchg dec mov out aam mov leave es ss or stc (bad) pop shl mov and out add nop fmull nop sbb mov mov dec in jmp add xor and cmp idivb jle cmc aam mov add mov adc pop fistp dec pusha fidiv add (bad) (bad) into subl push int3 mov sbb inc aam xlat cld xor xor sbb push cmpsl (bad) mov mov adc les push in arpl add dec pop daa nop mov mov push mov inc mov jnp or leave nop inc xchg jb dec dec popa adc clc icebp js sbb movd test mov inc push inc push shll add ss cmpsb jno adc lea and jmp insl lret dec in cld add add sub rorl sbb lods lock unpcklps adc call inc lret cmp test cmpxchg imul popa loope repnz sbb xor popf mov inc int or sbb adc aam cmp sahf movsl cwtl (bad) and push pop mov cmpsl inc push loopne cmp (bad) fcoms ja stos popf xchg jmp inc arpl jbe xchg jo sbb (bad) ljmp (bad) sti js (bad) fcmovnbe sub inc add ret push cli cmc or mov shrb sub add add sub imul clc int dec push lock add out sbbb jecxz outsb sub add xor sbb adc ret and xor fs hlt lods and jnp mov xchg in pop (bad) fildl (bad) mov mov ffree mov iret or cltd xor push push or imul push fdivl jbe mov or fidivr inc push cli add (bad) repnz xchg pop pop outsl pop sbb insl sahf push test cmp rolb in add inc mov ficoml out sahf fdivp std lds cmc pop insl lcall cmpl repnz inc and rcr sarl aam fdivs pop or cmp int3 mov adc clc mov xchg gs lahf fmull loope sub outsb or jae pusha loope add cltd gs add pop std test cmp (bad) faddl cld loopne pop fcoms or push and pop loopne mov das in add fidivrl lcall jne repnz jge mov jo out aaa mov mov iret push xchg movsb adc (bad) mov mov fwait push mov xchg pop fisttp jl inc stos imulb call loopne pop mov push cld shrb xor and movq shr mov adc arpl adc sbb int3 pop sub cmp mov cmpsl and sub adc (bad) push (bad) lcall test movsb gs push or (bad) cmc mov je shl pop pop popa icebp adc sbb lret add xchg add ret (bad) je stos mov repz xor inc lds jnp (bad) mov popa add cmp pop xor insb andb in dec add scas aas or mov push cmp std xchg mov push mov (bad) rcl mov (bad) xor xorl movsb vandps fldt imul mov mov pop or cmc (bad) xchg and into sbb sub int mov dec fidivr xlat sbb jne pushf mov fs cmp or repz jno int3 arpl shl inc test and add pop sub adc xchg in rorl addb mov and mov dec das xchg xor adc mov aad xchg cmp ds sub jb mov mov mov jne out aaa lods mov call sub add lock insb push adc xchg subb imul out imul adc jbe sahf rorl jmp aas repz and xchg pop add test bound add jmp lods mov lcall sti loop mov sbb adcl xor jo xchg mov pop mov sti xlat rorb jo int xor int3 aad int3 enter xor push and lods scas and leave mov mov cmp xor lods adc rcl imul movsb hlt lock sub mov out iret mov out mov lret push fcoms insb ja adc pop scas mov push outsl or scas loope mov pusha mov cmp mov mov mov je aam push sub ret xor pop or jno mov hlt out inc popa aam push into hlt (bad) dec add xor aam xor push aaa clc xchg int3 addr16 test pop (bad) xor cmpsb inc loop jle pop push xchg mov mov data16 cmp or and mov cmc xchg inc lods pop mov out add dec pop inc cltd ljmp inc (bad) dec sub ret mov or jp repnz jmp sahf lcall sbb popf jl xor imul mov jne jl out in je outsl pop lcall pop ljmp rcr jns pop fldln2 pop cli (bad) xchg pop jmp rolb aas push jl xchg dec inc (bad) dec stos out movsl int xor cltd gs jmp jl adc adc nop rcrl mov addl and cvtps2pd mov dec enter es sub mov xlat test inc mov movsb mov lret xor sub movsb int3 int or jae xchg inc (bad) fsubl adc jp mov addr16 add add or or movsb cmpsb xchg add data16 pop jo ret push xor lcall xchg xorb cmp stc cmp or add (bad) or adc mov inc adc stc jecxz sarb outsl mov mov add rcl mov or cmc sub fcomps mov mov push arpl les and outsl cs xchg xchg adcl jg adc mov (bad) xchg pop js arpl loopne xor xchg sub sbb mov (bad) xor inc xchg mov cmovs pop pop lods cmp pushl mov rcrb jecxz push rol and mov cmpsl inc daa adc and je cwtl add xchg jecxz clc jle mov mov push mov xor xchg les xchg add cmp mov lock fwait rcrl std (bad) loopne ret lret add int js outsl add xor aad mov hlt xchg add jb inc cmp out fist addr16 pop inc ds or or mov and stos jae add fs into insb inc lds add push pushf jno test cmc mov (bad) xchg dec fiaddl mov (bad) push leave (bad) insl int mov sbb push pop xor gs add shlb push add cmc cmp (bad) jne ss mov ret push imul lods jecxz sbb sbb mov lahf in xor adc enter loopne mov sbb test mov sarb (bad) das fiadd push scas pop jmp pusha xor (bad) js call mov or into arpl lret fmull mov inc lcall pusha inc push inc dec dec mov xchg test daa cmp adc subl jns iret (bad) addr16 pop cwtl dec xchg sub jg jg stos mov ss mov lret lcall pop add pop mov add dec pop jo hlt push scas inc sub push jo js push popf push sbb arpl cli jno adcb push test in dec and mov inc jg pushf sub clc mov lret cltd add sub cltd subl jge test dec dec loopne enter into aad dec mov push adc int mov adc outsl jae mov jns add imul and xchg (bad) clc je (bad) or sbb jle bound cmp dec test inc aaa in cwtl mov rcll sbb adc sbb pop popa pop stos out jl jle xor insb push xchg add xor xor mov test sti int3 mov clc mov add jge add int3 sub push mov ss call sub mov or je add jmp repz push fnstsw mov xorl inc mov fadds outsl aad mov sbb (bad) icebp and inc lret mov jecxz jne push xlat xchg mov test (bad) xchg neg or add xorl lock sbb add in mov cmp pop cmpsl push sbb jl add inc xor xor test movsl push ja mov imul dec dec or aam or outsl insb ja xor fldcw (bad) std in flds test sub and push lahf sub into inc xchg lea add pop mov jns std jp mov mov stos add stos pop je jb xchg loope aaa daa sbb daa mov xchg (bad) (bad) insl ja (bad) dec (bad) or pushf cwtl mov ret jb or mov jbe iret mov mov push lods push mov push aam mov aas scas incl mov out lea loopne fwait adc pusha jmp hlt lea push sub rcl cmp lods not cli xchg (bad) and dec or mov and xchg nop mov sbb jecxz (bad) push cmp add sbb or xchg or cmc jl inc stos pop imul arpl push test in cli jl add dec rcrb les fisubrl shrl fxam fadds pop mov cmpsb mov cmp xorl add out push sbb sbb mov jae mov fwait rol inc jnp mov pop popf jo add pop pusha dec mov test movsl push jns cmp mov add cltd leave mov xchg or mov fnsave subb aaa dec fs add movsl mov (bad) mov xor int push mov cs mull pusha outsb mov into (bad) jmp hlt push adc cwtl aaa arpl xchg dec push popa fist subl mov into xchg pushf (bad) fwait or (bad) rorl cwtl jae movsb nop leave in sbb pop das add push and xor rcrb mov xchg movb push fidiv (bad) adc jns iret sbb push sti or push insl fucomi inc sbb mov xchg cmp adc jns loopne xchg das ds adc lahf pop out ljmp pop mov rolb push (bad) (bad) (bad) jl outsb (bad) int3 inc adc mov pop jmp jb and imul aad mov dec push pop jns dec and aam mov xchg mov xor push jmp xor movsl mov insb outsb sub push dec xchg xor mov push mov and stos cmp outsl fninit mov add sti or mov and repnz xchg or test mov pop xor adc or stc dec lods ret psubsb icebp mov mov dec pop scas data16 and cmp cmp pushl adc dec mov pop inc aaa cmp in dec (bad) (bad) or gs push xlat xchg mov ss cli jbe call mulb sahf jg test fld jge in cli fisttp mov in ja out inc pop dec nop in cli pop into mov in shrb inc adc sub sarl mov push xor (bad) mov push adc fwait sbb jle loope and gs cmc xor out jg add or mov lret aas stos icebp cld ficompl loopne jae pusha fs imul int3 push and and rcll add xor mov xchg mov pop (bad) or shrb (bad) loop (bad) scas enter sbb xchg sub aas mov lret insl aas cmc (bad) lahf lcall jne jo cmp or js mov jp je gs jno mov (bad) rclb push push mov int cltd jb xor pop outsb addr16 jmp jl lret aam or dec inc sbbb and inc pop inc les repnz sbbl mov (bad) sub mov cltd add rorb in outsl (bad) jge rorl pop mov test stos sub cmp xor mov roll sub int fwait xor lock stos add push rcl in jae add aad mov inc jecxz jge and ret add push out roll fldcw jmp cmp sti sbb lea arpl lcall bound lds insl push and xchg or sub movsb adc icebp mov add imul push imul cltd repz push sbb xor test dec mov es fcmovnbe sti sti xchg pop outsl xchg xchg gs cmp loopne lcall jge das rcl sbb cmp shlb cltd bound jle lcall add mov movsb xchg add sub aas inc or adc sub sbb push push pop lsl push insl mov jge xchg sbb lock out sti mov jge cmp ljmp cmpsl jmp mov inc movsl inc (bad) std imul aam inc popa jmp inc movl push movsb stc faddl sarb daa ret mov pop adc add and outsl jmp dec jecxz les arpl mov push orl icebp mov xchg stos xor pop xor adc cmpsl fldcw test sub aad cwtl (bad) pushl (bad) aas out (bad) adcb lcall mov int3 xor lock sbb pop xor int or jmp imul icebp in iret push scas std arpl cmpsl (bad) fldenv mov adc cmp mov stc or rclb mov gs xor lock lods into and or xchg cmp js (bad) mov xchg ja mov imul cmc ja mov std test mov xchg pushf push femms sbb jns xor leave and ljmp pop clc mov jo push mov and mov loop mov pop adc jnp cs js in push arpl mov xchg out dec cmp pop (bad) sub pop add bound add pop test xchg push subl or insb mov push test sub sub or movsb sbb fdivl sti mov pop cmp inc icebp (bad) mov outsb lcall rcll sbb inc push sbb insl sbb ss insb mov mov out stc movsl fcomps cld into imulb inc in pop push mov aas pop cmp jnp inc scas out sub in repnz adc jnp subb add xor and mov jbe push lahf lods sti adc xchg addr16 push (bad) or jns add adc cwtl or sbb ja iret fstpt sbb lea push xchg les mov adc in arpl insl fdivr mov mov or and in addl or (bad) or adc das dec jnp pusha jmp add cmpsb mov jle or push pushf sub mov push js imul (bad) pop mov sub iret push push insl lcall mov lds nop fistl cmp ffreep inc adc jmp dec (bad) insb mov ds xchg fwait pop push jae movsb sub lea scas femms jbe imul in (bad) pop and cmp add xor or add dec dec adc dec xor (bad) enter inc mov push mov add add sarl out mov jns sar into sbb loopne movsb sahf mov movsb add adc andb xor cmp sbb and into rcl adc inc mov mov inc add push int3 js loop pop aaa dec push add xor aaa and int3 dec xchg dec mov fildl or pop stc pop insb jmp imul loopne xor push dec rclb fsubl lcall add stos fidivl dec mov inc js mov sub cmp addl dec dec enter loope ficompl dec lods or and inc lods cwtl popa push inc stos adc (bad) jmp (bad) aam ret fcomi mov pop or push push lods rolb (bad) int3 fildl push je pop adc popf loopne loopne (bad) (bad) lret (bad) dec idivl iret sbb bound cmc sbb in pop (bad) jle test inc inc nop pop aas sbb lret mov fidivr cmpsl xchg or sbb add push test bound je in mov js push clc xlat pop hlt dec insb aaa sbb mov adc pop lahf inc sub ds fcoml inc jl sbbb je into cmp lret inc and dec xchg sub xor dec (bad) push push dec fidiv jecxz data16 out add dec lods movsl xchg scas push add adc out jmp push push mov (bad) sahf adcb dec mov sub dec (bad) cwtl inc dec push movsb jle cmpsl popa inc pminub out imulb sub jnp (bad) mov div or add inc inc inc pop add cmp shrb lds mov sbb push daa sbb xor fidiv xchg jo mov ljmp out sahf mov mov sub cld or (bad) jg addr16 dec jae (bad) insl notl jl test scas add loop (bad) mov dec aas std outsb or insb and cmp adc push das mov sub arpl insl dec es out inc enter movl hlt scas cmp mov pop sub pusha out insb cmpsl (bad) pop pop int movsb push lds mov mov rorb mov pop push roll lods mov sub jne ds subb into fsubrs (bad) add push ficom mov xchg mov enter mov xor repz ror push stos test push cmp mov add insl icebp pusha pop and movsl add cs mov es mov lahf (bad) out jg xor dec ja pop ja or ss (bad) and fcoml inc sbb and xchg mov sub add popa hlt sub push (bad) rorl xor add jb in stc jne hlt sbb jo ror cli mov outsl int3 test pop dec aam mov mov aaa add jecxz sbb ja fwait dec add fnstcw shll dec ss insl mov mov repnz cmp cmp stos dec jns mov popf insb push in push pop inc rcll xchg sbb mov inc das ret inc mov inc xchg cmpsb test inc jno and add dec add jns stc outsl jge in push cmpsl gs pop mov sbb out jae dec jbe mov xlat inc mov xor (bad) mov (bad) lret mov dec sbb inc sub and mov pop xchg inc lahf jl fs xchg pop pop sub in popa enter xchg push inc es mov jb pop push xor lret scas pop ret pop lods add je or jns or jmp lret dec cs mov cs rorl push or and shrb loop push jnp fisttpll mov incl mov pop lods sbb sahf xor pusha adc push je mov add mov push cmpsl fbld jmp rorb mov sbb icebp mov lods add rcl popf lea stos jg mov addb push cmp loope xor add inc call scas sbb dec inc stos push test push jmp aaa (bad) cmp dec loopne sti mov lret cmp outsb sbb mov push lock mov or or mov int3 xchg sbb dec (bad) push xor inc ss leave mov int3 scas jnp fwait sarl xchg sar jp mov jb xchg lea xor dec pop add cs ljmp hlt pop daa std inc pop fadd and test out push scas arpl jne pop jne push inc pop adc and js mov mov add cwtl push cmp xchg orl in push cs stc inc outsl fwait insl mov fwait aaa xor jg sub sub lock aas jl lahf std out jbe sub icebp cmc inc sub push incb mov int3 fisttpll push cmpsl push sbb insl sbb insl sbb sbb mov loop in mov xchg lds stos push jl out push jl mov fsubp loop pop cmp fs push xchg sub lds frstor xchg ds cmpsb in dec es jns sub mov fucomi enter (bad) mov mov xor fdivs push adc push push sbb adc inc jno pop das stos push loope and xchg xorl sbb pop push pusha mov sbb push xchg cs sub mov psubb pop and xchg push and mov inc push insl sbb outsb stos in in or cli loop xor repz fsubl (bad) jmp stos and vmaskmovdqu (bad) negl sbb jb xchg push pushf add or jae mov mov pop mov clc sub nop fiadd xchg aad xor add or push push icebp dec jmp lods push icebp inc test mov (bad) jge imul inc pop inc sub jne lret jmp cmp cmpl inc loopne sub sub and test loope test adc fcoms adc xchg les mov daa xchg loopne xor cmp adc repz in lea jecxz mov mov push mov (bad) insb sbb addr16 rcll (bad) stos lahf sub js jge fisttpll cmpsb out add sub sub pop add in fdivrl mov jae jae mov inc add test mov mov dec int3 stos inc pusha out out sub test aad mov jmp pop xchg pop pop jb push daa xchg cwtl mov pop xchg xchg jge ret pushf popf cmpl xor movsl loop lds sub (bad) ficompl mov and loope mov xchg fisubr fs out aad xlat popa movsb dec sbb sub clc lret jl ret out (bad) lock mov mov idivl jne,pn cmp jmp test (bad) jl jecxz ds pop push jp jp js push cvtpi2ps xchg push add push adc mov ljmp sbb push push push movsl mov push test push mov out mov (bad) xor int3 add addb inc xor mov mov sbb (bad) js popf aam sar push repnz ds pop pop dec insl lock add jnp push jg sti pop ret pop xchg add jg stc push or push ljmp out xor add and add jne pop cmp xor rclb xor aas es movl jbe jo lods jno out push test cmp rorb daa mov popf lahf push mov push or lds aad bound jbe imul mov mov sbb (bad) cmp pop mov in push pop jbe (bad) inc add or mulb enter cmp rorb and lahf lods push (bad) (bad) push push fistp jne xchg dec fildl or enter adc inc push divb js push mov fnop sbb scas imul pop mov outsb add es inc and nop inc push cmpsb testb mov cmp cmp negb or out (bad) insb movsl jle adc mov or icebp mov lahf jl fistpll xchg cmp paddd pop cmc cltd jg xchg inc push adc out add pop push sti cmp pop or lods xchg sbb jp enter cld test cmp icebp mov sub fist fwait mov cmp lods xor mov imul fidivr lods int3 dec sub subl add pop (bad) outsl mov inc add inc pusha pop or pop jl (bad) int3 cmp arpl outsl out outsb add sub jbe in push ljmp repz inc mov clc xchg pop scas std pop jg cmp or inc movsb mov and lds lret int3 aas jmp lods push jg outsb push or mov popl icebp pop inc mov push xor and in jg arpl sti xor jle dec ljmp (bad) int pop xchg push out and adc lahf dec or (bad) gs mov test (bad) jg stc ja (bad) negl jle ficomp js inc jb std cmc lahf std push jg mov sbb aaa fdivp push (bad) cmp out sti pop fdivrs mov adcb out cmp iret fcmovne movl fist cmp cmpsl dec add es add push shll pusha aam int repnz mov cld icebp aas cmp repz add lock mov cmc test or test lahf lret fistpll divl sbb out push sbb dec mov sahf dec lahf dec (bad) and sub aaa mov adc sbb add popa (bad) ds call stos add xor (bad) and add negl lds jge mov bound sti ds jg fidiv mov iret mov movl or mov pop ficom out sbb int3 add pop cmp clc xchg jmp xor lock xor inc sbb roll jecxz aam inc gs sbb (bad) ljmp insb xchg popf add jae rdmsr rclb clc pop fldcw inc testl sarb add arpl ss jp mov idivl cmc iret dec pop lret cmpsl add or popf mov sahf push into add outsb cwtl jle out sbb cmpsb mov push rcr call (bad) clc xchg hlt inc popf jae (bad) and pop add out pop (bad) fdivrl cmpsl (bad) (bad) mov push iret cmp mov addb fnsave std xchg fisubr add je stc mov xor cmp xor push jg mov sti add arpl lock cmp sbb jns stos repz ds inc inc popa dec out out repnz cmp mov cmp cmp jmp dec lcall into mov jne lcall mov lock hlt ds test rorl jae cmpsl mov outsb shrd xchg into cmp das adc inc mov hlt inc add sbb jnp mov popf xor das sbb ds dec or arpl sbb fst incl popa inc jnp into push inc movsl add add dec inc dec inc scas inc pusha (bad) add add sub add addb add add add add add add add or add fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild cmpsb fild cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp cmpsb fisttp cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist cmpsb fist cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp cmpsb fisttp cmpsb fisttp cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp cmpsb fisttp inc cmpsb fist inc cmpsb fist inc cmpsb fist cmpsb fist inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp cmpsb fistp inc cmpsb fistp inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll cmpsb fildll cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll cmpsb fildll cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fist inc cmpsb fist inc cmpsb fist cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fild inc cmpsb fild cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild cmpsb fild inc cmpsb fisttp inc cmpsb fisttp cmpsb fisttp inc cmpsb fist inc cmpsb fist inc cmpsb fistp inc cmpsb fistp inc cmpsb fbld inc cmpsb fbld inc cmpsb fildll inc cmpsb fildll inc cmpsb fbstp inc cmpsb fbstp cmpsb fbstp inc cmpsb fistpll inc cmpsb fistpll inc cmpsb fistpll cmpsb fistpll inc cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fisttp cmpsb fisttp cmpsb fisttp cmpsb fisttp cmpsb fisttp fisttp cmpsb fisttp cmpsb fisttp cmpsb fist cmpsb fist cmpsb fist cmpsb fist cmpsb fist cmpsb fist cmpsb fist cmpsb fist fist fist fist fist fist fist fist fist fist fist cmpsb fist cmpsb fist cmpsb fist cmpsb fist cmpsb fist cmpsb fist cmpsb fisttp cmpsb fisttp cmpsb fisttp cmpsb fisttp cmpsb fisttp fisttp cmpsb fisttp cmpsb fisttp cmpsb fild cmpsb fild cmpsb fild fild cmpsb fild cmpsb fild cmpsb fistpll inc cmpsb fistpll inc cmpsb fistpll inc cmpsb fistpll inc cmpsb fbstp inc cmpsb fbstp inc cmpsb fbstp inc cmpsb fildll inc cmpsb fildll inc cmpsb fildll inc cmpsb fbld inc cmpsb fistp inc cmpsb fistp inc cmpsb fist inc cmpsb fist inc cmpsb fisttp inc cmpsb fisttp cmpsb fisttp inc cmpsb fild inc cmpsb fild cmpsb fild inc cmpsb fild and add fild inc cmpsb fild cmpsb fild inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fistp inc cmpsb fistp inc cmpsb fbld inc cmpsb fbstp cmpsb fistpll inc cmpsb fild cmpsb fisttp cmpsb fisttp cmpsb fist cmpsb fist cmpsb fistp cmpsb fistp cmpsb fbld cmpsb fbld cmpsb fbld cmpsb fbld cmpsb fildll cmpsb fildll cmpsb fildll cmpsb fildll cmpsb fbstp cmpsb fbstp cmpsb fbstp cmpsb fbstp cmpsb fistpll cmpsb fistpll cmpsb fistpll cmpsb fistpll cmpsb fistpll cmpsb fistpll cmpsb fistpll cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fistpll cmpsb fistpll cmpsb fistpll cmpsb fistpll fistpll cmpsb fistpll cmpsb fistpll cmpsb fbstp cmpsb fbstp cmpsb fbstp fbstp cmpsb fbstp cmpsb fildll cmpsb fildll cmpsb fildll cmpsb fildll cmpsb fbld cmpsb fbld cmpsb fbld cmpsb fbld cmpsb fistp cmpsb fistp cmpsb fistp cmpsb fist fist cmpsb fisttp cmpsb fild cmpsb fild cmpsb fistpll inc cmpsb fbstp inc cmpsb fildll inc cmpsb fbld cmpsb fistp inc cmpsb fist inc cmpsb fisttp inc cmpsb fild inc cmpsb fild inc cmpsb fild sub add add add xorl cmp cmpsb fisttp inc cmpsb fisttp inc cmpsb fist inc cmpsb fbld inc cmpsb fbstp inc cmpsb fistpll inc cmpsb fild cmpsb fist cmpsb fistp fbld cmpsb fildll cmpsb fbstp cmpsb fistpll cmpsb fild cmpsb fisttp inc cmpsb fist inc cmpsb fistp inc cmpsb fistp inc movsl fisub inc movsl fisub movsl fisub aas movsb (bad) aas mov fldt mov fnstenv ds xlat mov popf xlat mov popf (bad) mov pushf (bad) mov pushf aad cmp aam cmp aam cmp (bad) mov lcall cmp (bad) mov lcall cmp aam cmp aam cmp aad cmp popf (bad) mov popf xlat mov popf xlat mov sahf fdivs mov fidivl aas mov fsubrl movsb (bad) inc movsl fisub inc movsl fisub inc movsl fbld inc cmpsb fistp cmpsb fistp inc cmpsb fist inc cmpsb fisttp inc cmpsb fild inc cmpsb fistpll fbstp cmpsb fildll cmpsb fbld fistp cmpsb fisttp cmpsb fild fistpll inc cmpsb fildll inc cmpsb fbld cmpsb fistp inc cmpsb fist cmpsb fisttp inc movsl fimul cmp cltd roll aaa nop movl sbb pop addl jo add aas movsl fimul aas movsb fstl mov fldt mov flds sahf fcoms popf (bad) popa cmp roll cmp (bad) cmpsb xor test mov sub outsb fwait int addr16 shlb pop jg and ficompl inc gs inc pop loop aas pop in cmp sbb push call sbb push in sbb push in sbb push out sbb lock pop icebp sbb pop repnz inc pop repz inc pop hlt push inc pop hlt push inc pop cmc and mulb dec arpl pop inc popa mulb dec mull dec imul and clc and jne and jne and clc and clc and negl inc negl inc popa negb inc pop cmc sbb pop cmc sbb pop hlt sbb aas pop repz pop icebp sbb push out sbb push out sbb push in sbb push jmp cmp cmp sbb pop jecxz inc vpunpckhbw push dec jo and fldenv adc sub shrb outsl popf int jne leave xor lds xorb mov mov mov lods cmp into cwtl cmp aam cmp (bad) insl cmp mov fildl mov fsubl aas movsb fstpl movsl ficom inc movsl fimul sub sahf add sbb add add inc pusha add dec outsl add es mov and test and daa and cmp dec jo sbb inc pusha jp cmp push xor push ret push rclb cmp push cmp pop cmp lock cmp hlt sbb negl inc push sbb sti sbb push cmp daa bound xor (bad) ss (bad) cmp incl leave incl iret decl sar dec lcall dec popf sar dec sahf aam dec lahf aam dec popf sar dec sahf sar inc lcall inc fwait sar inc cltd sar inc cltd sar inc cwtl iret incl incl iret incl into incl into incl int inc xchg int inc xchg int3 (bad) aas xchg int3 incl int3 (bad) ds lret xchg lret (bad) cmp (bad) (bad) mov (bad) ds (bad) ds (bad) (bad) ds (bad) incl (bad) (bad) aas (bad) (bad) incl (bad) incl (bad) (bad) aas mov (bad) aas mov (bad) ds (bad) cmp (bad) (bad) cmp mov pushl jne ljmp lods (bad) sub (bad) arpl pop push mov sbb cmp dec jp sbb cld pop inc insl sti push aas addr16 adc cmp push cmp aaa push in adc push out xor push iret pop cmp aaa push movsb sbb pop mov arpl dec imul jb and xor and test es mov and orl sbb add add add movhps sbb add inc pop pop sbb push pop pop cmp push ss xor xor adc inc popa adc jl daa cmp jne,pn sti and lcall cmpsb lcall pop movsl lcall movsl lcall pop movsl jmp bound jmp push ljmp insl scas ljmp mov das jbe pushl jns pushl (bad) mov (bad) mov incl (bad) incl (bad) incl enter enter leave incl leave incl lret xchg lret xchg lret xchg lret xchg lret xchg lret xchg lret incl lret incl lret xchg lret xchg lret xchg lret xchg lret xchg leave (bad) cmp xchg enter (bad) (bad) cmp mov (bad) cmp (bad) cmp (bad) (bad) cmp mov (bad) cmp ret mov (bad) ds (bad) ds (bad) aas mov (bad) cmp xchg (bad) cmp mov pushl mov xor pushl jne ljmp jno ljmp outsl scas ljmp insb lods jmp push jmp push test and jmp bound lcall pop mov lcall mov lcall pop lahf call push popf lcall push pushf lcall sahf jmp data16 ljmp outsb cmpsl stc push xor cmp adc inc pop adc ss xor cmp sbb push adc sbb pop sbb add sub sbb add inc pop push sbb pop or cmp push pop pop cmp push xor dec pop adc inc jne sub das gs sub pop sahf lcall pop sahf lcall pop sahf lcall pop lahf lcall mov lcall pop mov jmp cmpsl jmp push lods ljmp scas ljmp je pushl jns pushl cmpl incl sar mov incl (bad) xchg (bad) incl enter enter leave incl lret xchg lret xchg lret xchg lret xchg lret xchg lret incl lret incl lret (bad) aas xchg lret xchg lret incl lret incl lret (bad) cmp xchg lret nop leave (bad) cmp mov (bad) cmp nop enter (bad) (bad) cmp (bad) (bad) cmp (bad) mov (bad) cmp (bad) (bad) (bad) ds (bad) cmp mov incl ret mov incl sar xchg (bad) cmp cmpl pushl js pushl jbe ljmp jb ljmp outsb scas ljmp insb lods jmp imul jmp bound lcall pop mov lcall pop sahf lcall pop popf lcall push lcall push xchg lcall pop cwtl ljmp data16 jmp push jbe adc cmp jb xor push ss inc pop cmp sbb push push sbb pop adc aas pop or inc pop add sbb pop add inc popa or inc pusha bndldx pop sbb cmp daa pop cmp push ss dec adc cs subl (bad) aam jb lcall pop sahf lcall pop popf lcall pop sahf lcall pop lahf lcall mov lcall pop mov jmp stos ljmp insb lods ljmp mov das jne pushl jns pushl jle (bad) cmp incl sar (bad) ret incl (bad) incl (bad) incl leave decl lret xchg lret decl int3 incl lret incl int3 incl int3 incl incl incl int inc xchg int inc xchg int3 incl int inc xchg into incl int inc xchg int inc xchg int inc xchg int3 incl int3 (bad) ds lret (bad) aas xchg lret (bad) ds lret xchg lret xchg lret (bad) aas xchg leave (bad) ds (bad) (bad) (bad) ds (bad) incl (bad) incl (bad) incl (bad) mov incl (bad) incl ret incl ret mov incl sar xchg (bad) cmp mov pushl ja pushl je ljmp outsl scas ljmp insl lods jmp push jmp cmpsl jmp popa movsl jmp pusha movsb lcall pop mov lcall pop sahf lcall pop popf lcall push cltd call push xchg call push xchg lcall pop cwtl ljmp mov jmp cs adcb dec dec sbb push aaa sbb sbb pop sbb inc popa push sbb or aas pop add cmp add sbb add inc popa push sbb or inc popa adc ds pop sbb push das pop cmp adc xor xor iret jno,pn lcall pop sahf lcall pop sahf lcall pop lahf lcall pop lahf lcall pop mov jmp bound jmp push ljmp insl scas ljmp jbe pushl mov cmp mov incl ret nop (bad) decl enter leave decl lret xchg int3 decl decl int dec cltd into decl iret decl iret incl iret incl iret incl sar inc xchg iret incl sar inc xchg iret incl sar inc cwtl sar inc cltd sar inc xchg iret incl iret incl into incl into incl int inc xchg int aas xchg int3 incl int aas xchg lret incl lret nop lret xchg lret xchg lret xchg leave incl leave incl incl (bad) incl (bad) incl (bad) (bad) (bad) incl incl sar xchg (bad) cmp mov pushl je ljmp outsb scas ljmp imul and test and jmp bound lcall pop mov lcall mov lcall push fwait call push xchg call push xchg lcall pop cltd ljmp jnp jmp push jl adc inc jb xor push inc sbb sbb pop push sbb adc arpl sbb add sbb add inc arpl inc or arpl sbb sbb ds daa sbb push cmp aaa dec dec adc push scas lcall pop sahf lcall pop sahf lcall pop mov lcall pop mov jmp arpl jmp imul je,pn pushl jns pushl jle (bad) cmp mov incl (bad) xchg enter lret xchg lret decl int dec lcall dec pushf sar dec pushf sar dec fwait sar dec popf sar dec pushf sar inc pushf sar inc lcall inc fwait sar inc pushf sar inc pushf sar inc sahf sar inc popf sar inc fwait sar inc lcall inc cltd sar inc cwtl sar inc xchg sar inc cwtl iret incl iret incl iret incl into incl int inc xchg int3 incl incl lret incl lret xchg lret xchg lret xchg enter enter (bad) incl (bad) incl ret mov (bad) aas xchg (bad) cmp pushl jl pushl ja ljmp je ljmp outsl mov sub imul and lcall pusha movsb lcall pop mov lcall mov lcall push pushf call push cwtl lcall push xchg lcall pop lcall jnp jmp push jle adc aaa push dec sbb push sbb pop and sbb fs sbb sbb add inc bound sbb sbb sbb or inc bound sbb pop pop sbb das pop cmp push xor xchg ret jb,pn lcall pop lahf lcall pop lahf lcall pop mov lcall pusha movsl jmp bound jmp insb scas ljmp jno ljmp jne pushl jp pushl cmpb ds incl incl (bad) decl lret xchg int3 decl decl iret decl sar dec lahf sar dec lahf sar dec sahf sar dec lahf sar dec mov aam dec lahf sar dec lahf aam dec lahf aam inc sahf aam dec lahf aad inc pushf aam inc lahf aad inc lahf aam inc sahf aam inc sahf aam inc pushf sar inc popf sar inc fwait sar inc lcall inc lcall inc cwtl sar inc cltd sar inc cwtl iret incl into incl into incl int dec cwtl int dec xchg int3 decl lret decl lret decl leave incl (bad) incl (bad) mov (bad) aas xchg (bad) cmp cmpl das je ljmp jo ljmp insb scas jmp imul and and jmp popa cmpsb lcall pusha movsl lcall pop mov lcall push popf call push lcall pop lcall jnp jmp pop xorb cmp cmp sub sbb adc arpl sbb add inc arpl inc or bndstx sbb ds sbb push aaa pop aaa push dec xor mov sbb lcall pop mov lcall movsb lcall popa cmpsb jmp arpl jmp imul sub mov jbe,pn pushl mov (bad) cmp sar mov incl (bad) incl leave decl int3 decl into call sar push lahf sar push lahf sar push mov aam push movsb aad dec mov aad dec movsb xlat decl aad dec mov xlat decl (bad) decl (bad) decl (bad) incl (bad) decl xlat incl aad dec mov (bad) incl aad inc lahf aad inc lahf aad inc popf sar inc fwait aam inc pushf sar inc popf sar inc fwait sar inc lcall dec lcall dec lcall dec cwtl int dec xchg int dec xchg lret decl lret xchg enter (bad) mov (bad) ds (bad) cmp mov pushl jbe ljmp mov sub jmp insb scas jmp stos jmp fs lcall popa cmpsb lcall pop mov lcall pop sahf lcall push fwait lcall push cwtl lcall pop fwait ljmp mov jmp pop subl aas pop and sbb fs sbb popw sbb sbb add add add add inc arpl sbb adc aas pop push sbb cs cmp xor mov sbb lcall pop mov lcall cmpsb jmp bound jmp lods jmp imul sub jp pushl mov incl (bad) incl enter int3 decl decl iret call sar push lahf sar push mov aam push mov aad push movsl xlat call fdivr dec movsl fdivr dec movsb xlat decl fcos dec movsl fcos dec movsl fcos dec movsb fdivr dec movsl fdivr dec movsl fcos dec movsl fcos dec cmpsb fcos dec movsl fcos dec mov fdivr dec mov xlat decl (bad) incl (bad) decl aad dec mov sar dec popf sar dec sahf sar dec popf sar dec pushf sar dec fwait sar dec lcall dec cltd into decl decl lret decl lret (bad) mov (bad) ds (bad) cmp sar jg pushl mov ljmp mov sub ljmp insl mov es jmp lods jmp gs jmp arpl lcall pop cmpsb lcall pop mov lcall push pushf lcall push cltd lcall pop fwait ljmp jnp jmp pop andl cmp pop sbb sbb or inc fs sbb add inc arpl inc or fs sbb sbb cmp push xor mov jae lcall pop mov lcall movsb lcall cmpsb lcall pop cmpsl lcall bound jmp scas jmp insb mov sub ljmp jns pushl cmpb cmp mov incl lret xchg int dec fwait iret decl sar push mov aad push movsb (bad) call call call fdivr push cmpsl fcos push cmpsl fcos dec cmpsl (bad) push test decl decl (bad) dec test decl (bad) dec test decl decl fdivr dec test (bad) dec movsl (bad) dec movsl fcos dec cmpsb fcos dec mov xlat decl xlat decl xlat decl (bad) decl aad dec mov aam dec lahf aam dec mov sar dec popf sar dec pushf sar dec pushf sar dec lcall dec xchg lret incl lret mov incl (bad) test (bad) cmp mov ljmp je ljmp jo ljmp outsb mov and push lods jmp fs lcall bound lcall pop movsb lcall pop mov lcall push fwait lcall pop pushf ljmp mov jmp pop test sbb pop and inc pusha pop sbb fs sbb sbb sbb add add add add inc bound sbb adc cmp sbb xor das je lcall pop mov lcall movsl lcall cmpsb lcall arpl jmp insl mov sub ljmp jbe pushl jns pushl xchg (bad) aas mov incl leave incl int3 decl into decl sar push mov aad push movsb (bad) call fdivr push cmpsl fdivr push stos (bad) push stos (bad) push stos (bad) push lods fdivr push lods fdivr push lods (bad) push lods fdivrp push lods (bad) push stos (bad) push test (bad) push lods fdivrp dec test fdivr dec stos (bad) dec cmpsl (bad) dec stos fdivr dec test decl (bad) dec cmpsb (bad) dec movsl fcos dec movsl fcos dec mov xlat decl (bad) decl (bad) decl aad dec mov aam push mov sar dec sahf sar dec pushf sar dec fwait iret decl int inc xchg lret incl leave incl (bad) (bad) cmp add xor jnp ljmp jno ljmp outsl mov imul and jmp gs jmp arpl lcall pop movsl lcall pop mov lcall push fwait lcall pop popf ljmp mov jmp pop test sbb popa adc inc arpl sbb add sbb sbb add inc pop pop sbb pop or pop cmp xor stos das jae lcall mov lcall pop cmpsb lcall cmpsl lcall gs jmp lods jmp imul sub ljmp jl pushl add (bad) aas mov incl lret cwtl into decl sar push lahf sar push mov (bad) call fdivr push test (bad) push stos (bad) push stos fdivr push lods (bad) push lods (bad) push lods fdivrp push lods fdivrp push lods (bad) push scas (bad) push lods fdivrp dec stos fdivrp push lods fdivrp push lods (bad) push lods fdivrp dec stos (bad) dec stos fdivrp dec stos fdivrp dec stos (bad) dec test fdivr dec test decl (bad) dec cmpsl (bad) dec cmpsl fcos dec cmpsl (bad) dec cmpsb fdivr push cmpsb fdivr dec movsb xlat call (bad) call aad push mov aam dec lahf sar push lahf sar dec popf sar dec cltd iret decl int inc xchg lret nop leave (bad) ds (bad) cmp mov ljmp js ljmp mov es mov and mov and scas jmp lods lcall bound lcall pop cmpsl lcall pop mov lcall push pushf lcall pop popf ljmp mov jmp pop adcl pop push sbb or sbb add inc arpl sbb add cmp push or cmp adc outsl popf cmpsb das jae lcall pop mov lcall cmpsl lcall popa stos jmp lods jmp push mov daa outsl mov sub das js pushl jg pushl add cmp leave incl int3 decl iret decl sar push mov (bad) call fdivr pop test fdivr pop lods (bad) pop scas fdivrp pop scas fdivrp push scas fdivrp push mov call call (bad) push mov call loopne push scas loopne push mov call call (bad) push scas (bad) push mov call (bad) dec lods fdivrp push scas fdivrp push lods fdivrp dec stos (bad) dec test fdivr dec stos fdivr dec test decl (bad) dec movsl fdivr dec movsl fdivr dec movsl fdivr push cmpsl fdivr push movsl (bad) call (bad) call aad push mov aam dec pushf sar dec lcall inc xchg int3 incl lret (bad) enter (bad) pushl (bad) sar jg pushl jp ljmp jb jmp outsb mov and imul lcall bound lcall movsb lcall pop mov lcall pop sahf ljmp jl jmp pop orb cmp sbb push or cmp add inc pop add add add cmp push xor inc or sub adc jne mov sbb movsb lcall pop movsl lcall cmpsl lcall bound and jmp imul sub ljmp jp pushl jg pushl test (bad) cmp (bad) incl lret incl into decl sar push mov aad push cmpsb fdivr push test lcall (bad) pop lods (bad) pop scas fdivrp pop scas fdivrp pop mov lcall loopne pop mov lcall loope push scas loopne push mov call loop push mov call call loope push mov call call loopne push mov call loopne push mov call (bad) push lods fdivrp dec stos (bad) dec stos (bad) dec stos fdivr dec test (bad) push test (bad) push test call fdivr push test call xlat call (bad) call call aam push mov sar dec fwait sar inc xchg int inc xchg lret incl leave (bad) cmp ret pushl jnp ljmp js ljmp je jmp outsl mov and imul lcall bound sbb pop movsl lcall pop mov lcall pop lahf ljmp jl jmp push jns adc adc inc or xor add adc inc add xor sbb test xor lcall movsb lcall pop cmpsb lcall test sbb arpl jmp imul ljmp mov pushl jg (bad) cmp leave incl int inc xchg iret decl sar push mov (bad) call fcos pop stos (bad) pop scas (bad) pop scas fdivrp pop scas fdivrp pop mov lcall loopne push mov lcall loope pop mov lcall loop push mov call loop push mov lcall loop push mov call loop push mov call loop push mov call call loope push mov call (bad) push scas (bad) push lods fdivrp push lods fdivrp push stos (bad) dec stos fdivr push stos (bad) push stos (bad) push stos (bad) push test fdivr push cmpsl fdivr push cmpsb xlat call (bad) call aad push mov sar dec pushf sar dec lcall inc nop lret mov (bad) cmp sar jge ljmp jns ljmp jae ljmp jb jmp outsb mov and mov and jmp data16 jmp arpl lcall pop cmpsb lcall pop mov lcall pop lahf ljmp jl ljmp pop mov xor adc inc add add add mov sbb movsb lcall cmpsb lcall test sbb fs jmp push mov es mov sub ljmp mov pushl ret (bad) cmp lret xchg int inc cwtl sar dec sahf aam push mov fdivr pop stos (bad) pop stos fdivr pop scas fdivrp pop mov lcall lcall loope pop mov lcall loop pop mov lcall lcall jecxz pop mov lcall in pop mov lcall jecxz pop mov call jecxz push mov call jecxz push mov lcall jecxz imul (bad) jl call call loopne push scas fdivrp push scas fdivrp push lods (bad) push stos fdivr push lods fdivr push stos (bad) push lods (bad) push stos (bad) pop lods (bad) push test call call (bad) call aad push mov sar dec cltd sar inc xchg into incl lret (bad) cmp mov pushl jg ljmp jnp ljmp mov jmp outsl mov es mov and jmp addr16 pop fs lcall arpl lcall pop cmpsl lcall pop mov jmp pop lahf ljmp mov pushl cmpsb subb mov aas mov lahf das je lcall movsl lcall pop cmpsl lcall test jmp fs jmp addr16 and jmp insl mov sub ljmp mov pushl mov (bad) ds lret incl decl sar dec sahf aam push mov fcos pop lods fdivr pop scas fdivrp pop mov lcall loopne pop mov lcall loope pop mov jmp in pop mov in pop mov in pop mov lcall jecxz pop mov lcall in push mov lcall in insl mov test dec push push ljmp cmp das inc dec incl pushl cmp test jmp call call (bad) push lods (bad) push stos (bad) push stos (bad) pop lods (bad) push stos fcos push test call call (bad) call aad dec mov sar inc cwtl iret incl int3 (bad) ds mov pushl test pushl jg ljmp jl ljmp je jmp jb jmp outsl mov and jmp addr16 and lcall bound lcall pop cmpsl lcall pop mov jmp pop mov (bad) cmp mov cmp jg add add mov lahf das je lcall bound lcall stos lcall arpl jmp addr16 and mov daa outsl mov ljmp mov pushl mov (bad) aas xchg int inc xchg sar dec pushf sar dec mov fdivr push stos (bad) push stos fdivr pop mov lcall (bad) pop mov jmp loop pop mov lcall jecxz pop mov lcall in pusha mov in pop mov lcall lcall out pop mov in fs xchg sbb decl decl lret int3 (bad) in in in (bad) stc stc stc jmp ljmp popa insb jae xor stos incl scas fdivrp push mov call fdivr push lods fdivr push lods (bad) pop lods (bad) push stos fcos push test call call aad dec mov sar dec lcall ds int3 (bad) cmp pushl add das jg ljmp jbe jmp jb jmp insl mov and jmp data16 pop gs lcall bound lcall pop movsb lcall pop mov ljmp jnp (bad) cmp jg add add ret je lcall movsl lcall pusha stos lcall arpl jmp push mov daa outsl mov pushl jl pushl jg pushl (bad) (bad) cmp lret incl into incl sar dec popf aam push movsb xlat call fcos push stos (bad) pop scas fdivrp pop mov jmp loopne pusha mov jmp jecxz bound jecxz popa mov in pop mov in pop mov out pop mov in push sahf ret lcall xor pushl cmp pushl jae mov mov (bad) (bad) in in in (bad) cli cli cli (bad) (bad) (bad) (bad) (bad) cld cld cld push div (bad) (bad) (bad) pop insw decl pop lcall mov call (bad) pop scas fdivr pop mov lcall (bad) push stos (bad) push stos fcos push test (bad) call aad dec mov sar inc xchg iret incl int cmp (bad) pushl ret jnp ljmp ja ljmp je jmp jo jmp mov and jmp data16 push arpl lcall pop movsl lcall pop mov ljmp jge (bad) cmp jg add add ret jbe lcall movsl lcall test sbb fs jmp data16 and jmp mov ljmp jl pushl add (bad) cmp lret incl into incl sar dec sahf aam push mov (bad) pop lods fdivr pop scas fdivrp pop mov jmp loope bound jecxz arpl in popa mov in bound lcall lcall lcall out dec xchg mov pop daa xor cmp inc call push ljmp insl call mov call rcl (bad) ljmp (bad) (bad) (bad) (bad) (bad) cli cli cli push repnz out (bad) (bad) (bad) mov inc lcall mov lcall (bad) pop mov call (bad) pop scas (bad) push lods (bad) push test xlat call aad dec mov sar inc cwtl sar inc xchg into (bad) cmp enter (bad) pushl (bad) ret ljmp jle ljmp jns ljmp jbe jmp jb jmp insb mov and jmp addr16 pop arpl lcall pop movsb lcall pop mov ljmp jge (bad) cmp jg add add ret ja lcall pusha test sbb fs lcall gs and jmp mov ljmp jge pushl add ss (bad) cmp xchg iret incl sar dec mov fdivr push stos (bad) pop scas (bad) pop mov lcall (bad) bound jecxz arpl in bound in bound jmp out popa mov out push mov call push call push decl dec lcall pop incl stos stos dec int3 int3 (bad) in in in (bad) cld cld cld (bad) std std std push div (bad) in in in jmp loopne call rcl inc ret ret (bad) jnp test cmp decl mov lcall (bad) pop mov lcall fdivr pop scas (bad) push lods fcos push test call (bad) decl aam dec sahf sar inc fwait sar inc xchg into (bad) cmp (bad) lret mov pushl test ljmp add sub ljmp js jmp je jmp outsb mov and jmp push mov sbb stos lcall pop cmpsb lcall pop mov ljmp jle (bad) cmp jg add add mov lahf xor lcall popa test lcall gs jmp data16 and jmp outsl mov ljmp js ljmp jge pushl add cmp int3 incl sar inc pushf sar dec mov fdivr push stos (bad) pop scas (bad) pop mov jmp loope fs jecxz bound in bound out pusha mov out gs out arpl dec jmp insl (bad) jp jp data16 push call push ljmp imul mov mov adc adc (bad) (bad) (bad) (bad) cld cld cld push repz in call aad inc (bad) mov mov stos stos stos decl pop ljmp ljmp loope pop mov lcall (bad) pop scas (bad) pop scas (bad) push lods (bad) push test xlat decl aad dec mov sar inc xchg iret (bad) ds int cmp enter (bad) add sub ljmp ja jmp jne jmp jb jmp mov and jmp push mov sbb lods lcall pop cmpsl lcall pop mov ljmp jge (bad) cmp jg add add ret ja lcall cmpsl lcall test lcall fs jmp addr16 and and je ljmp jp ljmp jg pushl (bad) (bad) cmp int inc xchg sar dec popf aam dec mov fcos push lods (bad) pop mov jmp loopne popa mov jmp loop arpl in mov gs out mov mov arpl call decl pop jmp cltd cltd incl push call push call push incl mov add arpl (bad) cli cli cli (bad) in in in (bad) fcmovu (bad) mov pushl test lahf decl cs mov lcall fdivrp pop mov lcall (bad) push scas (bad) push lods fcos push cmpsl xlat call (bad) decl aam inc pushf sar inc cltd sar ds into (bad) cmp leave pushl test ljmp add ljmp jp ljmp jbe jmp outsb mov and jmp push lcall data16 sbb pop cmpsl lcall pop mov ljmp jge (bad) cmp jg add add ret jbe lcall pusha test lcall gs and jmp imul sub sub ljmp jg pushl lret nop int inc xchg sar dec sahf aam dec movsb (bad) call fcos push lods fdivr pop mov jmp loopne popa mov jmp jecxz gs in mov addr16 out imul call ljmp jmp inc dec ljmp mov mov movsb movsb movsb decl insl insl call push jmp decl add jmp arpl div idiv loope loope enter mov mov movsb movsb movsb lcall lcall bound jmp xchg popa mov (bad) pop mov lcall lcall (bad) push lods fcos push test decl aad dec mov sar inc lcall cmp leave pushl xchg pushl add sub sar jns ljmp ja jmp jno jmp imul pop addr16 sbb pop test sbb jmp pusha mov (bad) cmp jle jg add add mov lahf xor lcall popa test lcall data16 and jmp mov ljmp mov pushl (bad) (bad) cmp into incl sar dec lahf aad dec movsl xlat call fcos pop scas fdivr pop mov jmp loopne arpl jecxz imul out addr16 call pushl jmp jmp incl push (bad) mov rol rol (bad) mov mov call jo call push pushl jno add add arpl (bad) jmp jmp int3 int3 int3 pushl popf popf lcall mov test ljmp cmp jmp lcall fdivrp pop mov lcall lcall (bad) push stos fdivr push test decl incl sar inc lcall cmp lret mov pushl test ljmp jl ljmp js jmp je jmp insl mov and lcall addr16 sbb scas lcall pop test sbb and ljmp jge (bad) cmp jg add add ret jbe lcall pusha test lcall data16 and jmp mov es ljmp ja ljmp ret pushl enter lret (bad) ds into incl incl aam dec cmpsb xlat call lcall (bad) pop mov jmp loope gs jecxz mov imul call pushl jmp (bad) jnp jmp pop mov mov mov mov mov mov mov mov ljmp jge call push incl add jmp popa call rcl ljmp pushf pushf jmp scas scas (bad) mov rol leave leave leave dec int (bad) cmp dec incl mov (bad) popa mov lcall lcall (bad) push scas fcos push test aad dec mov sar inc cwtl iret (bad) cmp lret pushl test ljmp jl ljmp js jmp je jmp outsb mov jmp imul sbb and ljmp insl cmpsl (bad) cmp jle jg add add ret jbe lcall cmpsl lcall stos lcall fs jmp push mov and mov es ljmp js ljmp jl pushl (bad) (bad) pushl mov (bad) aas xchg iret incl decl aad dec cmpsb xlat call (bad) pop scas (bad) pop mov jmp loope mov addr16 in push out insl ret jo call (bad) js ljmp shr lcall incl cmpsb cmpsb ljmp movsb movsb jmp movsb movsb ljmp mov pushl addl jmp stos stos (bad) mov leave leave call rcl (bad) fcomp fdivr fstp (bad) loopne loopne loop loop data16 pushl (bad) ljmp loop mov arpl fdivrp pop mov lcall (bad) push stos fdivr dec test decl aam inc sahf sar inc cltd sar cmp int aaa (bad) lret pushl mov pushl xchg ljmp jge ljmp js jmp ja jmp outsl mov jmp imul sbb jmp popa mov (bad) jle,pt (bad) cmp jg add add mov lahf xor lcall cmpsl lcall stos lcall addr16 and jmp mov es ljmp js ljmp (bad) ret pushl nop int3 (bad) ds iret incl sar dec mov fdivr push lods (bad) pop mov jmp (bad) fs jecxz push shl insb shl jno call pushl ljmp iret in call xchg (bad) mov mov ljmp mov popf lcall fwait fwait jmp (bad) (bad) incl add (bad) cmp cmp jecxz jecxz in in in (bad) out out out (bad) out out out (bad) out out out (bad) out out out push lock icebp icebp push icebp icebp incl movsb mov ljmp loope mov popa mov lcall (bad) pop mov call (bad) push test aad inc lahf sar inc lcall cmp leave pushl mov ljmp add sub ljmp jnp jmp ja jmp mov jmp outsb mov and lcall gs lcall pusha stos lcall pop movsl jmp popa mov (bad) cmp jle jg add add ret jbe lcall bound lcall push mov and mov ljmp jns ljmp test pushl nop int3 (bad) aas xchg sar inc popf sar dec movsb (bad) decl fdivr push lods (bad) pop mov jmp (bad) fs jecxz push in insb shl insb shl jae jmp (bad) jns ljmp shr lcall lahf lods dec iret sar in in in (bad) call jecxz jmp jecxz (bad) ljmp push repnz add add add add cmp cmp aad aad loopne loopne clc clc clc (bad) std std std (bad) cld cld cld (bad) sti sti sti (bad) sti sti sti (bad) cld cld cld call mov (bad) js in outsb shl push mov (bad) pop mov call (bad) push stos fdivr dec cmpsl (bad) decl aam inc popf sar cmp xchg int3 pushl (bad) lret mov ljmp add sub ret ljmp jnp jmp js jmp jbe jmp jo jmp insl mov and lcall data16 sbb lcall pop movsl jmp bound jg,pt (bad) cmp jg add add ret jbe lcall arpl lcall push mov and mov ljmp js ljmp test pushl mov (bad) cmp sar inc lahf aam dec movsb (bad) call fcos pop scas fdivr pop mov jmp ljmp jecxz addr16 out outsl ret out outsl (bad) out je jmp (bad) jg jmp test in call f2xm1 jmp jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std std std (bad) cli cli cli (bad) out out out inc mov call add incl add incl add incl add (bad) jle jle xchg xchg xchg ljmp (bad) jecxz jecxz div idiv cld cld cld (bad) (bad) (bad) (bad) lcall (bad) fdivrp jns in jno jecxz imul lcall fdivrp pop mov lcall (bad) push lods fcos dec test decl aam inc mov sar cmp into pushl (bad) int3 pushl mov ljmp add sub jge jmp jns jmp jbe jmp mov jmp imul sbb lcall pop movsl jmp bound jg,pt (bad) cmp jg add add ret ja lcall lods lcall scas lcall push mov and jbe ljmp jnp ljmp xchg pushl mov (bad) cmp sar inc mov xlat call fcos push scas fdivr pop mov jmp ljmp jecxz push in outsl ret out jo out jb call (bad) jnp ljmp shr call fnop jmp int3 into (bad) (bad) (bad) (bad) (bad) cli cli cli (bad) in in in dec into into lcall push jmp lcallw sbb incl add incl add incl add decl dec pushl jbe mov popf ljmp mov sar call jle incl leave out jb in insl shl gs (bad) pop mov lcall fdivr push scas fcos push stos xlat decl incl sar inc pushf sar cmp iret (bad) cmp lret xchg ljmp jle ljmp jnp jmp ja jmp jo jmp insl mov push addr16 sbb lcall pop cmpsb jmp bound xorb add add mov lahf xor lcall arpl lcall push jmp insl mov and jne ljmp jp ljmp add pushl mov (bad) cmp into incl sar dec mov xlat call (bad) pop mov jmp (bad) bound jecxz imul pushl call (bad) jns ljmp iret jmp xchg in decl fdiv jmp xchg call aam ljmp test pushl jb mov decl or incl pop pop incl add call adc decl dec jmp (bad) pushl jbe mov xchg jmp scas scas incl jl incl leave out jno in outsb ret push mov fdivrp pop mov call (bad) push lods fdivr dec cmpsl (bad) decl aam inc sahf sar cmp xchg int xor mov ljmp test ljmp jg ljmp jp jmp jae jmp jo jmp insb mov push addr16 sbb lcall pop cmpsb jmp arpl (bad) jg,pt (bad) cmp jg add add ret lahf xor lcall lods lcall data16 and jmp insl mov and ja ljmp jnp ljmp (bad) (bad) pushl enter lret (bad) cmp into incl sar dec movsb aad dec test call lcall fdivrp popa mov jmp loop imul pushl out je call pushl jmp incl shr decl xlat out lcall fwait stos lcall popf popf (bad) jp jp jne jne jns jns mov dec into into ljmp addr16 imul mov push call push jmp pushl jbe test lcall inc dec ljmp lret int3 out jbe out jno in insl ret jecxz imul (bad) pop mov call (bad) push scas (bad) dec test aad inc lahf sar aas lcall xor mov ljmp xchg ljmp (bad) ljmp jge jmp jns jmp mov jmp insl mov push push lods lcall pop cmpsb jmp arpl (bad) jg,pt (bad) cmp add aas mov lahf xor lcall fs lcall addr16 and jmp insl mov es ljmp jns ljmp jl ljmp mov (bad) cmp iret incl sar dec mov fcos push scas (bad) pop mov jmp loopne addr16 in jno out jno out jne call (bad) jns ljmp iret in incl shr decl xlat out decl pop push pushl jno js js lea cmpsl inc ret ret jmp in (bad) std std std (bad) stc stc stc jmp jecxz inc ret jnp jnp dec dec dec lcall pop jmp pushw (bad) jle jle push pop popa (bad) cmp (bad) js out jp out je out jb in outsl (bad) in push mov (bad) pop mov fdivr push mov call fdivr dec cmpsb aad inc mov sar cmp int3 pushl mov pushl xchg ljmp jg ljmp jp jmp je jmp outsb mov lcall bound and outsb test jg,pt (bad) cmp add inc mov lahf xor lcall lods lcall data16 and and jmp ja ljmp jge ljmp test pushl mov (bad) cmp sar inc lahf aam dec cmpsb (bad) call (bad) push mov lcall fdivrp fs jecxz insl shl jb out jbe call (bad) jns ljmp into jmp jg in incl shr decl aad call stos sar push pop ljmp xchg (bad) mov xlat xlat push repnz (bad) (bad) (bad) (bad) clc clc clc jmp out dec int3 int3 jmp push push call push lcall pop jmp lcall popa jmp cmp outsb mov call pushl pushl in outsl (bad) in imul jmp loop fs (bad) pop mov call (bad) push lods fcos dec movsl aad inc movsb aam inc sahf sar ds sar cmp lret pushl mov ljmp test ljmp jg ljmp jl jmp js jmp mov lcall push lcall lods lcall pusha cmpsl jmp cmpsb ljmp outsl test xorb add add ret lahf xor lcall lods lcall push mov and mov ljmp jns ljmp jge pushl test pushl xchg int aas cltd sar inc lahf sar dec cmpsl (bad) call (bad) pop mov jmp (bad) mov imul pushl out jbe call (bad) jnp ljmp iret jmp adc in decl shr decl xlat out decl xchg test dec pop popa inc ret mov mov iret iret iret jmp out (bad) stc stc stc (bad) (bad) (bad) (bad) push div (bad) call rcl (bad) mov push call push lcall pop decl lcall xor jmp (bad) (bad) js jmp pushl call pushl out jb in outsb (bad) imul loope arpl fdivrp push mov call (bad) dec stos xlat decl aad inc mov sar cmp lret pushl mov ljmp test ljmp add sub jmp js jmp jno jmp imul pusha cmpsl jmp cmpsb ljmp outsb test xorb add add ret lahf xor lcall lods lcall push mov and jmp jp ljmp xchg pushl leave (bad) cmp incl aam dec test (bad) pop mov jmp (bad) push mov in jbe out js jmp (bad) jle jmp adc in (bad) jg in incl shr incl aad decl xlat out call lahf mov inc push pop pushl out push hlt hlt (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push div (bad) ljmp (bad) mov xchg xchg lcall pop pushl aas inc jmp cmp jmp enter ljmp iret jmp pushl out je out jno in jo in insb (bad) shl fs (bad) pop mov call (bad) push lods fdivr dec cmpsl (bad) incl (bad) aas fwait sar cmp int3 pushl enter (bad) ljmp jg ljmp jp jmp jb jmp insb mov sbb lods lcall pusha cmpsl jmp cmpsb ljmp outsl test xorl inc mov lahf xor lcall lods lcall imul jmp jne ljmp jnp ljmp (bad) (bad) pushl xchg pushl mov (bad) cmp sar inc mov fdivr push scas (bad) pop mov jmp loopne imul out ja call (bad) jl ljmp shr incl shr incl aam decl (bad) out decl (bad) out call f2xm1 incl jl pushl (bad) fucom loope cld cld cld (bad) (bad) (bad) (bad) (bad) cli cli cli push repnz loope ljmp je lcall xor incl (bad) pushl loopne jge jmp jle ljmp shr (bad) jns call pushl out jae out jb in outsl (bad) in imul loope pusha mov (bad) push mov call fdivr dec test incl aam inc popf sar cmp iret (bad) cmp pushl mov ljmp test ljmp ret jl jmp js jmp insl mov sbb scas lcall test and ljmp outsl test xorb inc mov lahf xor lcall gs lcall push jmp insl mov and mov ljmp jl ljmp add xor lret xchg iret incl sar dec movsl (bad) call fdivr push mov lcall fdivrp arpl loop jb in jne out jns call (bad) jg jmp adc in incl in incl out decl xlat out decl xlat out call fnop lcall fdivp lcall (bad) rol jle xchg lcall incl popa pushl dec push (bad) cmp call lcall aam (bad) jg jmp adc (bad) jg jmp adc incl shr (bad) jl jmp pushl out je out outsl (bad) in imul jmp loop arpl lcall fdivr push scas fcos dec stos xlat incl aam inc sahf sar ds aaa nop int3 pushl mov ljmp test ljmp jge jmp js jmp mov lcall addr16 sbb test and ljmp outsl test xorl add ret lahf xor lcall data16 lcall push mov and jmp jns ljmp jl ljmp add xor leave (bad) cmp sar inc lahf sar dec movsb aad push lods fcos push mov lcall fdivrp arpl jecxz jno in jbe out jnp jmp incl shr incl in incl aad decl (bad) out decl xlat out decl lock fdiv lcall loop ljmp loop ljmp ljmp xlat jmp mov out decl (bad) in incl aad incl aam incl shr (bad) jg ljmp into call pushl out jae in insl (bad) imul loopne pop mov (bad) push mov decl fdivr dec movsl aad inc mov sar cmp xchg int xor (bad) ljmp add sub ljmp jns jmp outsl mov push push test ljmp jo (bad) aas xorl add ret lahf xor lcall data16 lcall imul and mov ljmp ret test pushl mov (bad) cmp sar inc mov (bad) call fcos pop mov jmp (bad) gs in jae out ja call incl shr incl shr incl aad decl xlat lock fsubr decl lock fcomi lcall fdivp jmp loop jmp loope lcall fdivp call lock fsubr decl xlat in incl aad incl shr incl shr (bad) jle jmp (bad) js out je out jo in insb ret jecxz gs (bad) pop mov call (bad) dec lods fcos dec test incl aad inc popf sar cmp xchg int ss lret pushl mov ljmp test ljmp ret jnp jmp jbe jmp jo lcall push test ljmp jo (bad) aas xorl add ret lahf xor lcall push mov and jmp jne ljmp jp ljmp test pushl (bad) lret xchg int inc lcall dec test call lcall (bad) arpl jecxz outsb ret jbe out jns call incl shr incl shr decl (bad) out decl fdiv decl fnop decl fcomi call fdiv lcall fcomip lcall loopne lcall repnz fdivp call fnop call (bad) decl fsubr incl xlat in incl jmp test jmp (bad) shr (bad) jg jmp (bad) jns out jbe out jo in insl (bad) addr16 arpl fdivrp push mov call fcos dec stos xlat incl aad inc lahf sar cmp xchg into pushl (bad) lret pushl leave pushl xchg ljmp jl jmp ja jmp mov lcall addr16 das jo (bad) aas xorl add ret lahf xor lcall data16 lcall push mov and mov ljmp jp ljmp xchg pushl xchg int inc pushf sar dec mov xlat call (bad) pop mov jmp ljmp loop outsl ret in jne out jnp call incl shr decl aad decl out decl f2xm1 call fcomi call (bad) call icebp lcall fcomip lcall loopne jmp loopne lcall fcomip call lock fucomi call (bad) decl in decl xlat in incl aad incl shr (bad) jle call pushl in outsl (bad) in push jecxz arpl (bad) pop mov call (bad) dec stos xlat decl aad inc mov sar cmp int3 pushl leave pushl xchg ljmp (bad) ljmp jle ljmp jns jmp mov lcall fs jmp addr16 xor incl mov cmp add inc (bad) ret lahf xor lcall stos lcall push mov and mov ljmp jl ljmp add xor lret (bad) cmp into incl sar dec movsl aad push stos fdivr push mov lcall fdivrp arpl jecxz jb in js out jnp call incl shr decl (bad) out decl out call fcomi call fdivp lcall fdivp lcall fcomip lcall loopne lcall loope lcall loopne lcall fcomip lcall fcomip call lock out call (bad) decl fsubr decl (bad) jmp test jmp adc (bad) jge call pushl out outsl (bad) in imul jmp loope popa mov (bad) push mov decl fcos dec cmpsl (bad) incl incl sar cmp xchg int xor xchg ljmp add sub ret jns jmp imul and pushl jno incl mov cmp add inc (bad) ret lahf xor lcall push scas jmp outsb mov and jbe ljmp jge ljmp (bad) ret pushl mov pushl mov (bad) cmp pushf sar dec movsl aad push stos fdivr pop mov jmp fdivrp addr16 in jae in js call incl shr decl aad decl (bad) call fcomi lcall fdivp lcall loopne jmp loopne jmp loop jmp loop lcall loope lcall loope lcall loopne lcall fcomip lcall fdivp lcall fucomp call fucomi decl fldln2 decl aad incl shr (bad) jnp call pushl in outsb (bad) imul loopne pop mov fdivr push scas (bad) dec test incl aam inc popf sar ds sar cmp lret pushl mov pushl test ljmp jnp jmp jae jmp insb mov pop stos jmp test xor incl mov cmp mov add les pop push scas jmp insl mov and mov ljmp jge ljmp (bad) (bad) pushl mov (bad) cmp iret incl sar dec cmpsb aad push lods fdivr pop mov jmp (bad) addr16 in jbe out jnp call incl in decl out call (bad) lcall fdivp lcall fcomip jmp loope jmp jecxz jmp jecxz jmp jecxz jmp jecxz jmp jecxz lcall loop jmp loope lcall icebp call fdivp lcall fsubr call (bad) decl xlat in decl aam (bad) jg jmp pushl out jb in insb ret jecxz addr16 (bad) pop mov call (bad) push lods fdivr dec cmpsl (bad) incl aam ds sar cmp pushl leave pushl test ljmp add sub jmp jne jmp insb mov pop stos jmp jb incl mov cmp mov add les pop stos jmp push jmp outsl mov and js ljmp test pushl xchg int3 (bad) aas xchg iret incl sar dec cmpsb (bad) call fcos pop mov jmp (bad) push ret jne out jge call incl aam decl fsubr call fcomi lcall fcomip jmp repnz jecxz ljmp in ljmp hlt ljmp in jmp in jmp jecxz jmp jecxz lcall loop lcall loope lcall lock out call fucomi call fsubr decl aam incl shr (bad) jp out jbe in jno in push loope gs fdivrp pop mov call decl (bad) decl aam inc pushf sar cmp iret (bad) cmp leave pushl xchg ljmp (bad) (bad) ljmp mov jmp lods jmp jb incl mov cmp mov add les and jmp imul es ljmp jns ljmp test pushl xchg int3 incl sar inc mov (bad) call fcos pop mov jmp (bad) imul out jl call decl (bad) in call (bad) lcall fdivp jmp loope ljmp in pushl out pushl out pushl out ljmp cmc ljmp hlt jmp in ljmp in jmp bnd loop lcall loopne lcall lock fucomp call fldlg2 decl (bad) jmp mov ljmp iret call pushl in jno jecxz push loope gs (bad) push scas (bad) push test aad inc sahf sar aas cwtl iret (bad) cmp lret xchg ljmp add sub sar jbe jmp insl mov and jmp jb incl mov cmp mov add lahf xor jmp imul jmp jne ljmp jns ljmp xchg pushl mov (bad) cmp sar inc mov (bad) call fcos pop mov jmp ljmp pushl in jp out jg call decl aad call (bad) lcall fcomip ljmp loop pushl out (bad) mov jmp idiv mov jmp cmc pushl call cmc ljmp out ljmp in jmp in jmp in jmp loop lcall loopne lcall fucomip lcall fucomp call fldlg2 call aad incl shr incl lret js in jae jecxz outsl shl arpl (bad) push lods fdivr dec movsl (bad) incl sar inc cltd sar cmp int aaa (bad) lret mov pushl test ljmp ja jmp mov and jmp jae incl mov test add les and jmp insb mov and mov daa je ljmp jp ljmp add xor lret (bad) cmp lcall dec test call (bad) pop mov jmp loopne jo jecxz jbe in jge out (bad) into jmp decl xlat out lcall fnop jmp loope ljmp in (bad) mov ljmp leave in idiv enter (bad) in idiv ret in idiv mov ljmp mov idiv scas call cmc ljmp out ljmp out ljmp in ljmp in jmp loop jmp loopne lcall out call fsubr call xlat in decl jmp incl out jle in ja loop insl mov (bad) pop scas fcos push cmpsl (bad) decl aam inc pushf sar ds into (bad) cmp leave pushl test ljmp jg ljmp js jmp imul incl mov cmp add add les and jmp insl mov es ljmp ja ljmp jge pushl add cmp int inc lcall push stos xlat lcall jmp fdivrp insl mov jecxz jg out xchg call call fsubr jmp fnop ljmp repnz out (bad) mov ljmp shr clc (bad) fcomi stc jmp hlt cli jmp hlt cli (bad) fyl2x stc call lock dec out clc dec out idiv (bad) in idiv (bad) in idiv ret in idiv mov jmp (bad) mov ljmp mov cmc pushl call hlt pushl in ljmp icebp jmp loopne lcall fucomp lcall fldlg2 call aam decl shr decl shr incl shl imul xlat decl aam inc popf sar aas xchg iret (bad) cmp leave pushl test ljmp add sub jmp push jmp imul inc test jg add add les outsb scas ljmp jae ljmp add incl leave incl int dec popf sar push mov xlat jmp (bad) insl mov loope add decl shr lcall (bad) ljmp loop (bad) mov out inc jmp idiv shr idiv (bad) out clc (bad) fcomi stc jmp hlt cli jmp cmc sti (bad) ljmp (bad) cli std (bad) (bad) stc cld std push cli cld (bad) ljmp jmp idiv jmp cmc cli (bad) (bad) cli (bad) fpatan stc call repnz call icebp stc call lock dec lock dec out idiv (bad) out idiv ret in idiv shr (bad) mov jmp hlt pushl out ljmp jecxz ljmp loopne jmp fucomp lcall fsubr lcall (bad) jmp lods fucomp (bad) mov xlat jmp add ljmp (bad) pusha mov call fdivr dec movsb aad inc sahf sar inc xchg iret (bad) cmp leave pushl (bad) ljmp add jmp jno jmp push jmp imul inc test jg add add (bad) lahf cmp scas ljmp jae ljmp jp pushl add cmp lret cltd iret lcall ljmp (bad) jp (bad) mov in xchg iret call ljmp jecxz inc out dec ljmp fnop clc (bad) (bad) stc jmp hlt cli jmp cmc sti (bad) call idiv (bad) out clc cld push stc std push sti std (bad) stc cld (bad) (bad) sti std (bad) (bad) cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) sti std (bad) (bad) cli std (bad) push cld (bad) push sti std push cli std (bad) in clc std (bad) ljmp jmp idiv jmp idiv jmp idiv jmp cmc sti jmp idiv jmp cmc sti jmp cmc sti jmp cmc sti jmp cmc sti jmp cmc sti (bad) fcomip sti (bad) (bad) cli (bad) fdiv cli (bad) (bad) stc (bad) fyl2x stc call icebp clc call lock call out idiv into in idiv int3 jmp dec in idiv loope stc push cli cld (bad) fdivp idiv mov out lcall int incl mov jmp (bad) push movsb aad dec lcall xor ret jbe jmp insl mov and jmp imul inc test jg add add lahf test jecxz popf iret call pushl idiv (bad) in stc inc in stc inc in stc inc in stc inc in stc (bad) mov jmp inc in stc dec in cli dec in cli dec out cli call out cli call lock call lock call lock call lock call lock call out cli call lock call out cli call out cli call lock call lock call icebp sti (bad) fcomi sti (bad) jmp cli std (bad) in stc std jmp cmc cld call icebp sti dec out cli dec in cli inc in stc inc jmp (bad) mov ljmp mov jmp clc (bad) mov ljmp shr inc jmp inc jmp inc in cli inc in stc dec in stc dec in stc dec out stc dec out stc dec out stc call out stc call out cli call out cli dec out stc call lock jmp hlt sti (bad) out stc std jmp hlt sti dec out stc inc jmp inc ljmp mov ljmp shr inc in stc inc in stc inc jmp pushl fnop jmp int3 in cltd (bad) loopne mov enter add mov ljmp fpatan incl repz xlat repz fdiv incl xlat icebp incl xlat out call (bad) jmp loope ljmp in pushl out (bad) mov out pushl out pushl idiv scas in ljmp in pushl call stc inc in stc inc jmp pushl in ljmp loope lcall fcomip call fdivp call cmc call fcomip lcall loope jmp jecxz ljmp in pushl out pushl call clc (bad) mov ljmp shr (bad) mov in (bad) mov ljmp shr pushl loope jmp bnd aad decl xlat repnz fdiv (bad) jg repz fdiv incl repz loop call add add in mov repz jb icebp ljmp icebp ljmp lock ljmp lock lock lock lock in outsl mov (bad) or jmp nop aam call jmp mov fdiv ljmp fldlg2 jmp fldln2 jmp loopne jmp fdivp lcall (bad) lcall fcomip jmp cmc lcall (bad) call fpatan incl aad (bad) jle repnz jp icebp pushl icebp (bad) jns icebp (bad) jns icebp (bad) jl icebp (bad) jg repnz repnz repz fdivp lcall loopne ljmp jecxz pushl in pushl out pushl xlat out lods xlat call (bad) mov loope ljmp fldlg2 jmp xlat in call int3 in jp loopne jae fdivrp jbe jmp pushl icebp pushl icebp pushl lock ljmp lock pushl icebp decl call add in cmpsl insl int3 out lcall in jmp in jmp in lcall in jmp in jmp in jmp in jmp fdivr imul jmp ljmp into pushl into pushl (bad) jnp iret incl (bad) fdivr cltd lret xchg (bad) xchg (bad) fdivr xchg (bad) pushf fsubr lcall (bad) call xlat repnz (bad) icebp decl (bad) icebp decl icebp incl (bad) lock out pushl pushl out ljmp ljmp out ljmp out ljmp out ljmp ljmp out pushl out pushl (bad) jns lock jge lock aad decl fdiv lcall fdiv jmp fcomip ljmp loope ljmp fldlg2 lcall (bad) fdivr pushf (bad) movsl int3 (bad) lahf enter ret xlat decl mov (bad) incl mov ljmp int3 pushl sar mov imul out jmp jmp in jmp in jmp in jmp in pushl out (bad) jns in mov add add jecxz lretw in stc push mov jmp call call call jmp lcall sar pusha cltd mov decl cmpsl jmp mov jmp mov cwtd mov jno mov incl mov ret decl iret jmp call lock shr incl into out (bad) jns out pushl in pushl pushl in ljmp in jmp in jmp jmp pusha shr pop shr pop mov ljmp shr pusha ret arpl jmp addr16 in ljmp in ljmp in pushl in (bad) jl out incl shr decl aad lcall fyl2x jmp fdiv ljmp shl lcall stos mov decl scas ret (bad) jge mov pushl mov pushl sar xchg mov pop xchg scas ljmp (bad) jmp (bad) jmp ljmp mov ljmp mov jmp out addr16 out push mov out dec mov decl in dec scas in dec mov decl in dec scas in pop movsl into decl sahf (bad) cmp call mov ljmp mov ljmp mov jnp mov call nop cmpsb ljmp cmpsb decl in nop shr decl into in incl lret js jmp jae jmp insl ret push mov call lcall out push mov out push mov decl out dec mov call out push mov call out push mov call jmp jmp ljmp ljmp leave in incl into in decl shr lcall aad jmp int3 in xchg mov ljmp ljmp movsb decl scas ret movsb mov incl mov lret jmp stos decl xchg jmp mov pusha stos sar pop mov call call in dec mov decl in dec mov lcall out pop mov add dec scas ficom dec mov hlt inc movsl (bad) inc mov (bad) inc movsb (bad) inc movsl (bad) inc mov enter (bad) incl mov push cmpsb pushl pushf jmp lcall lcall insl ljmp call mov mov incl ret loop (bad) int3 in decl leave ljmp ret jmp ljmp jmp lcall in pop mov call in dec scas loop dec scas loop dec lods loop inc stos loope inc test incl loope inc stos loope inc stos loope inc stos loope dec lods loop dec scas loop dec scas jecxz push mov lcall in pop mov jmp ljmp out jo call (bad) jle ljmp lret jmp nop int call in call movsb mov arpl lods incl test pop imul mov mov nop lods mov lcall movsb lcall sar push lods loope dec stos loope dec cmpsl loopne inc cmpsl loopne inc movsl loopne inc test call out mov or add add fildl cmp (bad) cmp fcos cmp (bad) pushl and decl or decl adc call sbb call sbb call sbb call sbb call sbb decl push sbb pop pop pop lcall mov jmp incl mov out insb mov jecxz pop mov lcall loope push stos loopne dec cmpsl (bad) inc movsl fdivrp inc mov (bad) cmp sahf fdivr cmp lahf fdivr mov (bad) inc mov fdivrp inc movsl fdivrp dec movsl fdivrp push stos loopne push stos loopne pop scas loope pusha mov jmp jecxz insl mov out jl out add jmp call shl outsl xchg decl adc and adc and adc call sbb incl inc incl test decl incl (bad) inc popf fdivr aas lcall inc movsb (bad) dec stos fsubrl add add sahf xlat adc (bad) aad xor pushl mov pushl mov lcall xor sbb sub adc xor (bad) cmp pushl push pushl dec pop ljmp dec pop pushl push incl outsb pushl dec pop lcall sub lcall scas mov incl mov in jae jecxz imul lcall call decl fdivr inc sahf (bad) inc lcall cmp xlat pushl xchg (bad) pushl xchg (bad) (bad) cmp (bad) (bad) cmp xlat (bad) cmp lcall inc lahf (bad) dec mov (bad) push test lcall jmp loopne imul (bad) jp in cmpb decl sbbl lcall sub pushl push imul das dec pop pushl dec (bad) (bad) ds insl (bad) cmp jmp xor call and ljmp jge dec sahf (bad) inc xchg xlat (bad) ds xlat (bad) cmp (bad) incl fabs inc mov add cmp sar das test pushl xchg ljmp test ljmp je ljmp xor pushl cmp dec data16 xchg scas jmp stos call pushf call xchg jmp movsl pushl mov imul dec decl insl incl pop (bad) jle in cmpb (bad) jp jecxz je loope insb mov jmp (bad) pop test call (bad) dec sahf fcos inc fwait xlat incl (bad) (bad) cmp pushl nop aam xor aam xor aam xor aam xor aam xor xchg aam cmp aad cmp xchg (bad) incl xlat decl fcos push mov fdivr pop test (bad) imul (bad) jp jecxz cmpb jmp xor push cmp cmp push xchg scas lcall mov lcall sahf ljmp scas pushl lods incl jae and inc incl pusha jmp xor push mov aad cmp aam cmp aad inc pushf aad ss rorb or sub int3 ljmp jnp incl je aaa dec pop pushl dec pop lcall cltd decl movsl sar nop scas jmp stos pushl mov mov mov pushl inc push lcall jns push jge (bad) jnp loope jge loop jge loop jnp loope jbe loopne jo (bad) lods fdivrp pop cmpsl (bad) push mov xlat incl (bad) (bad) aas xchg aam cmp sar xor mov pushl mov pushl mov pushl mov pushl mov pushl mov pushl sar cmp aam inc xchg aam inc xchg aad dec pushf (bad) call fdivr push mov (bad) data16 (bad) insl scas fdivrp je loopne jnp loope cmpl outsb pushl inc pop decl cmp xchg jmp stos ljmp mov test (bad) call mov xor aas push pop decl (bad) incl aad inc (bad) sar cmp sar inc xchg rcr cmp add add mov jno or ljmp jns ljmp jns decl movsl pushl inc push pushl dec pop jmp call movsb mov jmp movsb pushl mov xchg scas (bad) decl pop insl pushl inc push call imul stos fcos je fdivrp jns (bad) jnp (bad) jnp (bad) ja (bad) jb fdivrp imul call (bad) decl aam inc xchg sar cmp sar xor into ljmp test ljmp test ljmp test ljmp test ljmp test pushl test pushl xchg pushl iret pushl mov (bad) cmp sar inc xchg sar dec cltd aad push popf (bad) lcall fdivr pusha cmpsb (bad) stos fdivr outsb scas (bad) jbe fdivrp jl loopne subb pushl push decl jl mov ret pushl scas jmp movsb ljmp stos decl lods sar je pushl inc push (bad) cmp jmp mov (bad) aas mov (bad) cmp iret (bad) ds iret arpl add add or cs sub jmp je jmp jae decl mov pushl inc push ljmp (bad) lcall cmpsb mov ljmp popf (bad) jl lods lcall cmpsb mov dec pop push call ljmp (bad) ljmp (bad) je (bad) js fdivrp jns fdivrp ja fdivrp jae (bad) insb stos (bad) cmpsl fcos pop mov aad dec xchg sar inc xchg sar cmp into pushl test ljmp or sub or sub lret ljmp jg ljmp jg ljmp lret ljmp (bad) int3 pushl (bad) lret pushl into (bad) cmp sar inc xchg sar dec xchg sar push pushf aad pop mov fdivr imul (bad) jg sar inc dec pop pushl inc push call je xchg stos mov (bad) js stos ljmp popf pushl mov lcall jae pushl inc dec (bad) cmp jmp mov inc (bad) iret (bad) aas mov (bad) cmp int cmp add add js jmp jno jmp jo call sahf pushl inc inc pushl inc dec ljmp mov mov cmpsl mov ja sahf pushl cwtl incl mov lcall push pop pushl cmp push pop pop jmp sar movsw xlat ljmp (bad) je fdivr jbe (bad) jbe fdivr jae fdivr outsb stos (bad) addr16 lcall xlat call aad dec xchg sar inc nop sar cmp xchg pushl (bad) lret ljmp jg ljmp enter enter enter enter enter enter leave ljmp jle pushl (bad) lret test (bad) cmp iret incl sar dec xchg sar push lcall arpl pushl (bad) jl iret incl push pushl popa insl lcall mov pushl cwtl (bad) jns lahf lcall mov jmp jl xor inc (bad) cmp jmp mov inc mov incl lret (bad) aas mov (bad) ds arpl add add jle bound jl ret sub in push jns divl cmp pushl ds pushl xchg stos mov lcall lea decl mov lcall pop pushl cmp pop pop pop lcall iret jmp aad push xlat pushl fcos jbe (bad) js (bad) ja (bad) jae (bad) insl stos fcos data16 xlat lcall aad push cltd sar dec xchg sar inc mov (bad) cmp int3 pushl test pushl or jle,pn ljmp (bad) ljmp jnp ljmp jns ljmp jns ljmp jp ljmp jp ljmp jge pushl or ss leave (bad) cmp int3 incl into decl call sar pop popf sar bound xlat pushl fdivr jge int inc dec dec pushl cmp jmp jmp mov incl scas mov test outsl jbe xor aas (bad) cmp inc ljmp mov dec xchg iret ljmp int jno orl cmp cmp movsb lods mov orl call mov jmp push pushl cmp pop pop pop jmp lods pop gs (bad) push push fcomps scas fisubl mov imul fldt scas fisubrl lods fldcw cmpsl (bad) outsl pop mov shrl mov (bad) jg mov roll dec xchg rolb inc xchg iret addb addb addb addb xor jg outsl xor outsl xor lret (bad) int3 outsb inc xchg iret insl dec cwtl shrl shrl mov xlat pusha bound enter lods jae inc dec pushl cmp ljmp mov decl mov mov mov mov mov pushl cmp test add add jl cmp cmp cmp cmp jp jg mov scas mov mov mov xchg pushf lahf pushl stos scas decl push pushl ss pop ljmp sbbl push inc inc pushl cmp lcall pop ljmp mov call test ljmp mov outsl pushl cmp ljmp jp ja ja cmp cmp cmp cmp jge jle mov mov decl mov (bad) mov lods lods call push pushl pop pop ljmp insl sbb add add push (bad) cmp aaa lcall pop pushl mov fwait incl xchg xchg pushl mov outsl pushl ss cmp jb jno add add jbe cmp cmp cmp cmp jge jge mov mov call mov (bad) mov lods lods call push pushl ss pop ljmp push add bound inc inc inc (bad) cmp cmp pop pop pop pushl mov fwait decl xchg xchg pushl mov jo aaa aaa aaa (bad) cmp jb jno add add js cmp cmp cmp cmp jg jg rol pushl xchg xchg decl mov mov call push pushl aaa aaa lcall pop ljmp push add cmp dec (bad) cmp cmp pop pop pop pushl mov pushf decl xchg xchg pushl mov jno cmp cmp cmp jae jno add add ja cmp cmp cmp cmp addl mov xchg xchg xchg decl mov mov call (bad) cmp cmp pop pop pop ljmp push add arpl dec dec dec (bad) cmp cmp pop pop pop pushl mov lahf decl cltd (bad) mov mov jb cmp cmp inc inc inc pushl jae js js cmp cmp ds ret mov mov cwtl cwtl cwtl call mov mov call push (bad) cmp cmp pop pop pop ljmp imul fs dec (bad) cmp cmp popa popa popa pushl mov mov lcall mov sar je (bad) cmp cmp aas aas aas pushl jno add add jns cmp cmp aas aas aas incl ret ret pushl lcall movsb movsb movsb (bad) mov mov call push (bad) cmp cmp pop pop pop ljmp imul add add cmp dec (bad) cmp cmp bound (bad) mov mov mov lcall mov pushl (bad) cmp cmp inc inc inc pushl jne jns jns cmp cmp inc inc inc incl ret ret pushl lcall cmpsl cmpsl cmpsl inc rol mov mov push push push (bad) cmp cmp pop pop pop ljmp imul data16 dec (bad) cmp bound mov mov mov lcall mov sar jbe (bad) cmp inc inc pushl jne js js cmp inc inc incl (bad) (bad) pushl pushf pushf call cmpsl cmpsl inc rol mov mov push push push (bad) cmp cmp pop pop pop ljmp push gs dec (bad) ds arpl mov mov movsb call sahf sahf (bad) mov rol ja ja cmp inc inc pushl jne jp jp cmp inc inc incl (bad) (bad) (bad) mov pushf pushf call cmpsl cmpsl inc rol mov mov pop pop pop (bad) cmp cmp pop pop pop ljmp imul add add data16 dec (bad) ds gs mov mov movsb call lahf (bad) mov rol jbe jbe ds inc pushl jno add add jnp ds inc incl (bad) (bad) (bad) mov popf popf call cmpsl cmpsl inc rol mov mov pop pop pop (bad) cmp cmp pop pop pop ljmp imul add add cmp dec (bad) ds (bad) mov mov movsl call mov mov pushl ja cmp inc inc pushl jbe jp jp cmp inc inc incl (bad) mov popf popf call test inc rol mov mov pop pop pop (bad) cmp cmp pop pop pop ljmp push gs dec (bad) aas aas aas jmp (bad) mov mov mov lcall mov ret ja (bad) ds inc pushl jne jp jp cmp cmp inc inc inc incl (bad) (bad) (bad) mov popf popf call cmpsb cmpsb (bad) mov mov call push (bad) cmp cmp pop pop pop ljmp push gs dec (bad) ds (bad) mov mov movsb call mov inc ret jbe jbe cmp inc inc pushl jne jp jp cmp cmp inc inc inc incl (bad) mov sahf sahf call movsl movsl (bad) mov scas scas lcall pop (bad) cmp cmp pop pop pop ljmp push gs dec (bad) cmp fs mov mov jmp mov ret js (bad) cmp inc inc pushl jne jns jns cmp cmp inc inc inc incl mov lcall xchg xchg jmp mov call push (bad) cmp cmp pop pop pop ljmp imul bound cmp inc (bad) ds popa pushl mov mov jmp mov (bad) jbe (bad) ds inc pushl jne jns jns cmp cmp inc inc inc decl lret mov mov xchg jmp mov ljmp push push (bad) cmp cmp push push push jmp sbb add add pop cmp inc (bad) ds pusha ljmp mov lcall xchg xchg jmp ret enter jp (bad) ds inc pushl jne jnp jnp cmp cmp inc inc inc decl int3 int3 inc rol mov xchg xchg lcall mov jmp push push (bad) cmp cmp dec dec dec ljmp push add cmp ds aas aas aas lcall pop ljmp mov lcall xchg xchg jmp mov int3 int3 int3 (bad) jle jle inc inc inc incl (bad) jge jge xchg cmp call sar mov jmp xchg call cmpsl cmpsl lcall push (bad) ds inc lcall pop sub pop pop pop dec cmp cmp inc inc inc jmp (bad) jmp test call xchg xchg ljmp lret call rcl incl inc incl inc (bad) jg jg je je xchg xchg xchg mov inc incl inc lcall aad dec int ljmp xchg xchg decl pushf call pop pop (bad) aas aas aas (bad) cmp cmp pop pop pop inc push push push cmp cmp inc inc inc jmp lcallw sahf sahf call lcall rcl sar (bad) (bad) (bad) call inc inc decl dec incl jge add cwtl cwtl add add add popf popf mov dec decl ljmp (bad) call aam ljmp xchg xchg decl (bad) (bad) call popa popa incl inc (bad) cmp cmp dec dec dec insb push push push mov aas aas decl dec pushl jo cwtl cwtl cwtl call xchg xchg lcall mov (bad) fstp (bad) mov dec dec lcall pop decl xchg xchg add out out out add lahf lahf jl push push lcall pop (bad) mov jecxz (bad) fstp (bad) mov xchg xchg incl addl incl inc (bad) cmp dec dec mov dec dec dec ret inc inc inc decl dec (bad) jns jns xchg xchg xchg decl xchg ljmp mov jmp in pushl pop pop ljmp outsb ljmp ret ret push out out out add (bad) add add add div add leave leave push test test jne jne insl insl insl dec lret lret (bad) ljmp inc (bad) sahf sahf sahf incl je incl jbe decl incl inc incl out dec dec add add add push push cmp cmp dec dec dec call push incl mov call mov call xlat xlat (bad) in in in (bad) in in in inc (bad) insb insb insb call int dec jmp div add mov cld cld add iret iret iret inc cwtl cwtl cwtl (bad) jnp jnp (bad) (bad) (bad) push lock out out out call rcl ljmp test je je addb incl pushl aaa aaa call push cmp dec dec dec pop ds dec lcall pop decl jge (bad) jle jle mov (bad) out out div idiv repz rcl incl scas scas (bad) (bad) fildll sti sti sti add mov (bad) incb in in mov mov test (bad) clc clc clc push div (bad) (bad) (bad) mov mov mov jmp (bad) (bad) jg jg arpl incl inc incl inc incl inc mov inc inc inc ret dec decl ljmp incl outsb outsb incl test call rcl push div (bad) (bad) (bad) (bad) (bad) stc stc stc call aam decl (bad) (bad) clc repz (bad) decb std std std push (bad) (bad) incl add add (bad) incb hlt hlt hlt or into into ljmp (bad) std std std (bad) cld cld cld (bad) jmp jmp rol call push push pushl jb jb jb dec dec dec incl inc pushl ss pop pop pop pop pop pop pop cmp cmp decl dec call push (bad) jns jns jbe jbe pop pop pop incl mov (bad) fcmovnu (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) clc clc clc dec lret mov fcmovu int stc stc adc (bad) decb (bad) (bad) incb (bad) (bad) incl add add (bad) incl (bad) (bad) decl cld cld cld push fcmovnu (bad) lret cmc cmc cmc (bad) cli cli cli push hlt hlt call rcl jmp jno decl dec lcall pop pushl jbe pop pop pop incl inc incl inc incl inc mov inc inc inc ret dec decl dec jmp gs jp jp pop pop pop lcall pop decl mov loopne clc clc clc (bad) cli cli cli push lock mov mov fsts (bad) (bad) decb (bad) (bad) incb mov (bad) incl (bad) (bad) decl (bad) ljmp out push cmc cmc push div jmp loope pushl (bad) (bad) decl dec incl inc ljmp imul dec dec dec decl dec (bad) cmp cmp push pop pop inc inc dec dec bound inc inc incl dec call pushl jo addr16 inc lcall pop call rol jmp clc clc push cmc cmc jmp loopne jmp fcmovu (bad) (bad) fsts (bad) decl std std std or (bad) incl mov (bad) incl (bad) incb (bad) (bad) decl in in aad aad xchg xchg xchg dec iret iret push lock repz out out out inc (bad) xchg xchg xchg jmp pusha (bad) cmp cmp dec dec dec ljmp outsb jmp (bad) decl dec decl dec (bad) cmp aas jecxz push push adc push push pop es inc repnz dec push decl dec jmp ljmpw insl decl dec (bad) cmp cmp insb insb insb jmp iret iret push repz repnz out out out inc (bad) popf popf popf call aad clc lock std std std or cld cld push (bad) (bad) incl (bad) add add add (bad) incl (bad) (bad) incb repz int3 int3 int3 rcrl cmpsb cmpsb jmp out jmp out push cmc cmc (bad) (bad) fdivr lods lods lods (bad) jp jp inc inc inc pushl xor pop pop pop ljmp outsb lcall pop decl dec decl dec pushl cmp dec push push pop pop gs inc dec dec (bad) push incl dec lcall pop ljmp insb call push pushl xor decl dec incl mov jmp loop push hlt hlt (bad) call (bad) lcall scas scas dec lret lret mov stc stc or div pop std std std add (bad) (bad) incb lock mov mov scas scas scas (bad) jns jns mov in jmp in (bad) out out out inc mov xchg xchg xchg lcall pop pushl xor (bad) cmp cmp pusha pusha pusha ljmp imul push push decl dec decl push decl push mov push push pop bound adc pop lret dec push pop incl dec call pop ljmp insl call pop pushl xor ljmp das das jmp lcall int3 int3 push repnz loope jmp in ljmp jnp inc rol mov mov in in in in in add out out out add leave leave add stos stos push mov addr16 imul mov push lock loope pushl cmp dec dec ljmp sub (bad) ds (bad) ljmp imul dec dec push decl push (bad) cmp rcrl adc add add and push aad push pop incl push decl pop jmp lcall pop pushl and dec incl mov jmp in (bad) jmp jmp (bad) (bad) (bad) inc ret ret lcall pop pushl jae lahf lahf lahf out test movl (bad) incl mov mov cwtl cwtl cwtl add imul inc inc pushl jae mov mov call rcl ljmp jns incl inc ljmp sub inc inc inc jmp popa jmp call push decl decl pop (bad) aas dec dec loop insl inc pop outsb push inc dec pop out dec pop incl push decl pop jmp insb call pop pushl and cmp cmp je je cmpsb cmpsb cmpsb call (bad) (bad) push repnz mov mov lcall pop (bad) cmp jns decl xchg xchg add jmp add add add jp and jns cli inc inc inc pushl aaa aaa jmp scas scas (bad) fcomp fdivr out out out dec lret lret jmp jne (bad) cmp sub (bad) cmp pop pop jmp callw decl push call pop incl push decl pop movsb arpl sbb add add jb push popa push inc push pusha decl incl push call pusha jmp outsb call pop pushl xor and and xor xor outsb outsb outsb lcall leave leave (bad) out out out inc mov decl cs dec pushl jne outsl outsl outsl je add add test cwtl arpl pushl aaa aaa lcall pop (bad) fstp (bad) test test out out jmp mov pushl (bad) cmp sub (bad) cmp cmp push push push jmp push decl push decl call incl pop clc push pop data16 bound cmp add add js push data16 push popa imul outsl decl decl pop lcall push arpl call pop pushl xor and ss lcall rol jmp fcomp lcall rcl (bad) cmp cmp cs push ja add add lret lret add mov add js js pop pop pop decl dec jmp (bad) ljmp icebp jmp out inc mov (bad) js js aas aas aas ljmp sub pushl xor decl dec lcall arpl pop popa decl pop decl push call callw decl imul pop push sahf pop jno push orl pop push xchg pop gs daa imul push popa outsb cmpsb dec pop imul pop insb call call insb decl arpl push pusha jmp jb bound decl push pushl xor ljmp sub incl inc pushl lcall rol in in jecxz jecxz lea fdivr jp jp xor xor pop pop pop jmp popa fcoml push pop aas aas aas add stc stc add fstp push stc stc stc or mov incl fdivr jecxz jecxz aad aad hlt hlt hlt jmp in dec leave leave ljmp cmp sub sub sub sub cmp cmp dec push push lcall call call (bad) decl popa call insb lcall jge pop je call xchg push insb cmp inc arpl inc bound dec fs push imul jo call jg push push decl imul pop call imul fs jae pop pop popa incl inc pushl xor pushl xor push push push incl test (bad) jmp jecxz (bad) call test mov mov pop pop pop jmp (bad) (bad) jle jle push push push inc aas aas aas add (bad) incb cld cld push (bad) (bad) decl cmc cmc cmc or nop nop mov mov sar div push div call (bad) (bad) push repz out dec int pushl lea pushl xor jmp and daa sub (bad) cmp cmp call call imul pop push decl outsl call jae push imul push outsl cmp push imul dec pop insb decl decl callw lcall outsl lcall outsb call pop incl dec (bad) cmp ds cmp cmp dec dec dec ljmp lcall mov dec int3 int3 jmp out (bad) call addl decl jno ljmp pop lcall add aas aas aas add (bad) incl (bad) incb (bad) (bad) decl (bad) (bad) decl jecxz jecxz movsb movsb movsb jmp mov mov jecxz jecxz clc clc clc jmp loop jmp in in (bad) jmp rcl (bad) mov sahf sahf pushl jno inc inc inc ljmp sub jmp sub pushl cmp inc inc dec decl pop decl call imul bound push bound dec popa outsb decl outsb decl insl decl imul dec pop decl popa decl decl pop incl (bad) cmp cmp ds decl dec ljmp imul xchg xchg pushl (bad) (bad) (bad) (bad) jmp jmp loop loop jl jl rcl sar (bad) (bad) mov addb je je ja ja das das das add (bad) incl (bad) incl (bad) (bad) decb (bad) (bad) decl int3 int3 int3 dec mov aad pushl rcl (bad) in in in (bad) fcomp fdivr lea (bad) out out out (bad) (bad) fcos mov pushl xchg ljmp insl incl dec pushl xor ljmp sub sub sub pushl cmp cmp inc (bad) cmp inc dec (bad) aas dec dec (bad) aas dec dec (bad) cmp dec (bad) cmp pushl aas inc pushl aas ljmp xor ljmp xor ljmp xor (bad) cmp cmp dec dec push pushl jae xchg xchg xchg (bad) mov int call aad jmp loop push icebp icebp call rcl (bad) jns jns fcmovu (bad) (bad) (bad) stos stos stos decl xlat xlat call jnp add add (bad) (bad) incl (bad) incl (bad) (bad) decl (bad) (bad) call (bad) (bad) call mov (bad) aam aam mov mov fdivrp jecxz jecxz lea sar icebp icebp jmp in call rcl inc mov lcall test decl push incl dec (bad) ds inc (bad) cmp aas (bad) cmp cmp pushl ss das xor sub sub ljmp sub sub sub sub xor inc call pop pushl jnp sahf mov sar xlat xlat jmp jecxz (bad) ljmp push repz mov call aam jmp lea jmp jl inc (bad) fild (bad) (bad) incl (bad) incl (bad) (bad) decl (bad) (bad) decl (bad) call cld cld cld adc mov call rcl call movsl movsl inc ret ret jmp out ljmp xchg xchg jmp in (bad) out out out jmp loop call xlat xlat dec rcl dec lret int3 (bad) mov mov mov xchg pushf mov (bad) jnp mov jo cmp jb jmp jb pop insb lcall insl jmp jo push addl pushl lret (bad) (bad) xlat (bad) (bad) (bad) in in in (bad) stc stc stc (bad) sti sti sti (bad) out out out ljmp mov call lcall lea ljmp addb dec dec dec add (bad) incl (bad) incl (bad) (bad) decl (bad) (bad) decl cld cld cld adc mov dec lret jle jle (bad) (bad) (bad) lcall sar rcl sar xchg xchg xchg pushl in in (bad) out out out jmp out (bad) (bad) loope fstp loopne fstp loope (bad) jecxz fsubp jecxz fsubp jecxz fsub jecxz xlat fsub call (bad) call fcomp dec (bad) (bad) into aad call aad call xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) loopne loop loop out out out out out (bad) stc stc stc (bad) (bad) (bad) (bad) (bad) sti sti sti jmp jecxz jmp out call (bad) (bad) jmp cmp mov lcall addb out out out add (bad) incl (bad) incl (bad) (bad) decl (bad) (bad) decl (bad) (bad) decl lods lods lods pop xchg xchg xchg divl insl insl lcall pop pushl call enter mov sahf inc (bad) (bad) (bad) in in in push repz (bad) out out lock jmp in (bad) jmp in (bad) in out out push hlt hlt push cmc idiv repnz push icebp repnz out lock (bad) out out lock in out out (bad) jmp out (bad) ljmp (bad) call jmp in push icebp icebp push div push cmc cmc push icebp icebp push cmc cmc push div jmp jecxz pushl (bad) (bad) ljmp imul mov (bad) (bad) out nop nop nop inc out out out add (bad) incl (bad) incl (bad) (bad) incl (bad) (bad) decb (bad) (bad) decb div (bad) or insl insl loope nop nop ljmp imul dec dec dec jmp decw mov mov inc (bad) (bad) jmp in push repz div (bad) clc clc clc (bad) sti sti sti (bad) std std std (bad) clc clc clc push cmc cmc push hlt hlt push repz push repnz repnz repnz repz push cmc idiv div idiv clc clc clc push cmc cmc (bad) in in in (bad) ljmp call xlat xlat (bad) mov fwait fwait (bad) jns jns pop pop pop incl xchg xchg pushl jae scas scas scas daa lods lods lods add add add (bad) add (bad) incl (bad) incl (bad) incl repz loope loope mov mov stos addr16 imul inc inc ljmp sub dec dec dec (bad) jns jns nop nop nop ljmp mov inc (bad) (bad) call (bad) xlat (bad) (bad) (bad) in in in (bad) clc stc stc (bad) cld cld cld (bad) sti sti sti (bad) cli cli cli (bad) stc stc cli (bad) stc cli cli (bad) cli cli cli (bad) cli cli cli (bad) cli cli cli (bad) stc clc clc push hlt hlt push icebp icebp (bad) out out out (bad) fcomp fdivr rol (bad) mov stos stos lcall js lcall pushl incl outsl outsl incb fcmovnu adc in in pop rol add add add outsl add (bad) add (bad) incl (bad) (bad) incl (bad) incb in in add mov mov imul dec dec dec in popa popa jmp (bad) incl inc pushl pop pop (bad) jl jl movsl movsl movsl jmp cmpsb cmpsb ljmp mov dec iret iret jmp jecxz (bad) in in in (bad) out out out push lock icebp icebp (bad) out out out (bad) ljmp inc (bad) (bad) pushl test jmp mov test test outsb lcall pop ljmp outsb incl jbe addr16 dec cli cli cli or std std or (bad) add jg jg jg jg pop pop pop add pop add add add or aas aas orb icebp gs jbe imul pop pop pop lcall pop (bad) jns jns xchg xchg xchg pushl rol mov mov ljmp cmpsb cmpsl lcall fwait fwait lcall cltd cltd jmp scas scas pushl cmpsb cmpsb decl jae jmp (bad) ljmp imul xchg jne arpl jmp cltd cltd jbe jmp adc (bad) decl (bad) (bad) decl div testl dec dec dec adc jle dec dec call cwtl cwtl cwtl ljmp movsl movsl call mov xchg xchg xchg lcall mov movsb jmp mov popf call mov jl jl (bad) (bad) (bad) call test scas call insb insb lcall pop loopne xchg xchg jne loopne pop (bad) (bad) decl (bad) (bad) decl std std std pop std std std add (bad) incl popa popa popa add pop pop pop lods pop pop pop testb call (bad) (bad) jmp loopne (bad) fstp (bad) aad aad int int mov inc ret ret inc rol (bad) (bad) (bad) dec leave leave call rcl (bad) fcmovu (bad) fstp (bad) into into into ljmp jl call push icebp outsb outsb outsb movsb fwait fwait fwait dec out out (bad) (bad) decl (bad) decl (bad) decl (bad) (bad) decb (bad) (bad) incb (bad) (bad) incb (bad) (bad) incl pop pop pop add outsl add jle dec jbe jbe outsl outsl outsl les imul jl call cmpsb cmpsb pushl mov pushl lods jmp lea lcall pop jmp push push mov jns jns mov lahf add icebp icebp icebp or cli cli or std std pop std std std add (bad) (bad) incl bound add data16 jbe add mov mov mov rol cmpsl cmpsl cmpsl cmp xchg xchg xchg pusha xchg xchg xchg popa xchg xchg xchg popa xchg xchg xchg pop (bad) (bad) (bad) dec addl adc lods lods lods add fcmovu add hlt hlt add cld cld add (bad) incb (bad) (bad) incl (bad) (bad) incl (bad) (bad) (bad) (bad) push add add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) jmp add pop (bad) (bad) (bad) incl add add (bad) (bad) cld aas (bad) push (bad) push (bad) jmp pop (bad) jmp pop (bad) inc add jmp pop (bad) jmp pop (bad) push (bad) push (bad) (bad) clc pop (bad) (bad) clc pop (bad) (bad) cld aas (bad) (bad) cld aas (bad) (bad) incb add add (bad) incb add add (bad) incl add add (bad) (bad) incl add add add add (bad) (bad) inc add add (bad) (bad) (bad) clc add (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) clc add pop (bad) (bad) (bad) (bad) cld add aas (bad) (bad) (bad) (bad) cld add aas (bad) (bad) (bad) (bad) incb add (bad) (bad) (bad) incb add (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) inc add (bad) (bad) (bad) (bad) inc add (bad) (bad) (bad) (bad) jmp pop (bad) (bad) (bad) (bad) (bad) push (bad) (bad) (bad) (bad) (bad) (bad) incb add add add add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) (bad) incb add (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) (bad) cld add (bad) (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) (bad) clc add (bad) (bad) (bad) inc add (bad) (bad) (bad) (bad) (bad) (bad) clc add (bad) (bad) (bad) incl (bad) (bad) (bad) push add (bad) (bad) (bad) incl (bad) (bad) (bad) push add (bad) (bad) (bad) incl (bad) (bad) (bad) push add (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) push add (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) push add jg (bad) incb add (bad) (bad) (bad) (bad) (bad) push add aas (bad) (bad) cld add (bad) (bad) (bad) (bad) (bad) (bad) clc add pop (bad) (bad) clc add pop (bad) (bad) (bad) (bad) (bad) (bad) cld add (bad) push add aas (bad) (bad) (bad) (bad) (bad) (bad) incb add (bad) jmp add aas (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) inc add jg (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) incl add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add jg (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add add pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add sarb (bad) (bad) ljmp add add add nop add add add add add add add ja,pn add mov add mov add fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild cmp add mov add jnp add add add iret add fiadd inc movsl fiadd movsl fiadd inc movsl fimul inc movsl fimul inc cmpsb fisttp inc movsl fimul movsl fimul inc movsl fimul inc movsl ficom inc movsl ficom inc movsl ficom inc movsl ficom inc cmpsb fist movsl ficom inc movsl ficom inc movsl ficom inc movsl ficom inc movsl ficomp inc movsl ficomp inc movsl ficomp inc cmpsb fistp inc movsl ficomp inc movsl ficomp inc movsl ficomp inc movsl ficom inc movsl ficom inc movsl ficom inc movsl ficom inc movsl ficom inc cmpsb fist inc movsl ficom inc movsl ficom inc movsl ficom inc movsl ficom inc movsl fimul inc movsl fimul inc movsl fimul inc cmpsb fisttp inc movsl fimul inc movsl fimul inc movsl fiadd inc movsl fiadd inc movsl fiadd cmp iret add add add fiadd inc movsl fiadd inc movsl fimul inc movsl ficom inc movsl ficomp inc movsl fisubr inc movsl fisubr inc cmpsb fbstp inc movsl fidiv inc movsl fidivr inc movsl fidivr movsl fidivr inc movsl fiadd movsl fiadd fiadd movsl fimul cmpsb fisttp movsl fimul fimul movsl fimul movsl ficom movsl ficom movsl ficom movsl ficom movsl ficom cmpsb fist movsl ficom movsl ficom movsl ficom movsl ficom movsl ficom movsl fimul movsl fimul movsl fimul fimul cmpsb fisttp movsl fiadd movsl fiadd movsl fiadd movsl fiadd movsl fidivr inc movsl fidivr inc movsl fidiv inc movsl fisubr inc movsl fisub inc movsl ficomp movsl ficom inc movsl fimul inc movsl fiadd cmp fisttpll inc movsl ficom inc movsl ficomp inc movsl fisubr inc movsl fidivr movsl fimul movsl ficomp movsl fisubr fbstp movsl fistpll movsl fiadd movsl fimul inc movsb fstl mov ficompl ds xlat mov cmp fwait shll cmp shrb cmp iret stos cmp iret stos cmp shrb cmp shll cmp lahf xlat mov aas mov fistpl inc movsb fstl inc movsl fimul inc movsl fiadd inc movsl fistpll fbstp fisubr movsl ficomp fimul fidivr inc movsl fisubr inc movsl ficomp inc movsl fimul inc movsb fldl cmp rolb sbb add popl xor scas and js cmp jb pop sub jg data16 mov and pop mov and and in pop xchg es xchg sub out sub icebp sub data16 cmc xor divl push clc xor xor cli xor cli xor sti xor sti xor cld xor cld xor xor cld xor cld xor cld sub push sti sub xchg sti sub gs cli sub popa mov sub imull pop xchg es test and test and lock in and ljmp xchg and and mov and arpl pushf sub jnp je pop xor cmp jg and xorl sbb add add add aas pop add ds or cmp ss cmp inc adc cmp sbb mov (bad) sbb popa cmpsb (bad) and test (bad) sub jns (bad) cmp mov incb (bad) incb enter leave incl lret xchg lret xchg lret xchg lret incb lret xchg lret xchg lret xchg leave (bad) cmp mov (bad) cmp mov (bad) cmp (bad) (bad) cmp mov (bad) ds (bad) aas mov (bad) xchg (bad) cmp mov xor (bad) sub mov sub (bad) and arpl (bad) sbb pop mov (bad) sbb (bad) and (bad) sub ljmp inc popa push ss cmp cmp ds or inc pop add add add cmp sbb or inc pop adc push xor inc xorl pop popf (bad) sbb (bad) sbb mov (bad) and daa push (bad) sub jns (bad) cmp mov incb (bad) decb lret xchg lret incl int3 incb int3 incb incb int inc xchg int inc xchg int inc xchg int aas xchg int3 (bad) aas xchg int3 (bad) aas xchg lret (bad) ds lret nop leave (bad) ds (bad) aas mov incb (bad) incb (bad) (bad) (bad) incb sar mov (bad) cmp (bad) xor (bad) jno,pn (bad) sub and bound (bad) sbb pop sahf (bad) sbb (bad) pop push xchg (bad) and jae cmc adc inc jge ss push sbb push sub inc pop adc inc pop pop sbb add add add inc bound inc arpl sbb push ds ja stc sbb (bad) sbb (bad) sbb mov (bad) and test (bad) je,pn (bad) xor test decb enter lret decb into decb iret decl sar dec pushf sar inc pushf sar inc fwait sar inc fwait sar inc pushf sar inc pushf sar inc lcall inc xchg iret incb iret incb into incb int3 incb int3 incb lret incb leave decb leave incb (bad) incb incl sar (bad) mov (bad) xor (bad) sub (bad) es test and (bad) sbb pop mov (bad) pop push xchg (bad) and je repnz cmp aas pop push sbb sbb add add add inc popa add inc fs sbb adc cmp sub aaa push push xor clc sbb sbb sbb bound ljmp outsl mov xor pushl cmpb pop decl int3 decl iret decl sar push mov aam dec mov aad dec mov aad dec mov aad inc mov aad inc popf aam inc fwait sar inc fwait sar inc lcall dec cltd iret decl into decl int dec xchg lret incl enter (bad) (bad) cmp jg pushl ja ljmp jo jmp imul and lcall pusha movsl lcall mov call push cltd jmp jne lock aaa dec dec sbb bound sbb sbb sbb sbb sbb pop push sbb push cmp sbb sbb sbb fs ljmp jno (bad) xor (bad) cmp (bad) xchg lret decb iret (bad) push lahf sar push mov (bad) call xlat (bad) push cmpsb fdivr dec movsl fdivr dec cmpsb fsin dec cmpsb fsin dec cmpsb (bad) dec cmpsl (bad) dec movsl fsin dec movsb fdivr dec mov (bad) decb (bad) decb aam dec sahf aam dec sahf sar dec pushf sar dec fwait sar dec cltd into decb lret incl enter ret (bad) cmp mov (bad) sub (bad) and lods (bad) and push pusha cmpsl lcall pop mov (bad) and jne out sbb push cmp inc pop sbb sbb sbb add inc bound sbb adc cmp xor cmc sbb (bad) sbb movsl (bad) push pusha test and (bad) es mov sub (bad) xor (bad) cmp enter into (bad) push sahf sar push mov xlat (bad) push test (bad) push stos fdivr push stos (bad) push lods (bad) push stos (bad) push stos fdivrp dec stos (bad) dec test fdivr dec cmpsl (bad) dec cmpsl (bad) dec movsl fsin dec mov (bad) decb aad push mov sar dec popf sar dec cltd into incl lret incb (bad) (bad) cmp mov (bad) sub (bad) and data16 (bad) pop bound (bad) sbb (bad) sbb (bad) arpl in sbb push sub inc pop adc inc bound sbb add add add aas pop add cmp pop cmp xor hlt sbb (bad) sbb cmpsl (bad) push popa stos (bad) and (bad) es mov sub mov (bad) cmp lret decb sar push mov fdivr pop stos (bad) pop lods (bad) pop scas fdivrp push scas (bad) push scas (bad) push scas loopne push scas loopne push scas loopne push scas (bad) push lods (bad) push lods fdivrp dec stos (bad) dec test fdivr dec test decb fsin push cmpsb fdivr push movsl (bad) (bad) push mov aam dec pushf sar dec cwtl into incb lret mov (bad) xor jns (bad) sub (bad) and scas (bad) and lcall pop movsb (bad) sbb (bad) arpl ljmp push or ds add add add dec add ds push xor mov sbb movsl (bad) sbb test pop arpl (bad) daa outsl mov sub add cmp xchg into decb sar push movsl xlat (bad) pop stos (bad) pop scas (bad) pop mov lcall loopne pop mov (bad) pop mov (bad) push mov (bad) push mov (bad) push mov (bad) push mov (bad) push mov (bad) push mov call (bad) push lods fdivrp dec stos (bad) push stos fdivr push stos (bad) push test fdivr push cmpsb xlat (bad) push mov aam dec fwait sar inc xchg int3 (bad) cmp test (bad) xor (bad) sub outsb mov and (bad) and push popa stos (bad) sbb (bad) sbb (bad) es call adc inc add add add jb push xor pop movsl (bad) sbb test (bad) and (bad) daa jo ljmp add ds incb sar dec mov fsin pop lods (bad) pop mov (bad) pop mov lcall loop pop mov (bad) pop mov (bad) pop mov (bad) pop mov (bad) pop mov (bad) pop mov (bad) pusha lods sar push mov (bad) pop (bad) cmpsl (bad) jno sar pop mov (bad) push lods fdivr push stos (bad) push stos (bad) push stos fsin push cmpsl xlat (bad) push movsb aad dec sahf sar inc xchg iret (bad) ds xchg (bad) xor (bad) sub mov (bad) and mov and lcall bound (bad) sbb (bad) es out add add mov push xor pusha cmpsl (bad) sbb gs and mov sub ljmp jnp (bad) ss (bad) aas xchg int dec fwait sar push movsb xlat (bad) push stos (bad) pop mov (bad) pop mov (bad) pusha mov lcall jecxz pop mov in pop mov in push test jo popa push mov in out fcmovnu loopne cltd mov mov jno sar push scas (bad) push scas fdivr push lods (bad) push stos fdivr push cmpsb (bad) decl aam dec lcall cmp ret (bad) sub je (bad) and mov and lcall gs (bad) sbb test (bad) es out add add mov push ss repz cmpsl (bad) sbb data16 and mov sub xor (bad) aaa mov incb iret decb aam push cmpsl fdivr pop lods (bad) pop mov (bad) arpl in popa mov out pusha mov in push mov inc (bad) push push push decb (bad) push icebp icebp (bad) std std std (bad) repnz xlat fcomp (bad) addr16 (bad) jb lret mov (bad) pop scas fdivr pop lods (bad) push test aad dec popf sar inc xchg into (bad) cmp (bad) jge (bad) sub (bad) and push jmp data16 sbb stos (bad) sbb (bad) es out add add mov push ss repz test sbb addr16 and jbe pushl jg (bad) cmp iret decb aad push test (bad) pop mov (bad) pusha mov (bad) arpl in arpl (bad) arpl (bad) aas push pop (bad) jo jo push push push (bad) push push scas scas scas ljmp (bad) sti sti sti (bad) out out lret lret lret (bad) scas scas mov push pusha addr16 insl mov (bad) pop scas (bad) push stos fcos push cmpsb (bad) decb sar inc cwtl sar cmp (bad) (bad) das add sub (bad) es (bad) and jmp push lods (bad) sbb (bad) data16 (bad) cmp out add add mov push ss repz test sbb push mov pushl (bad) (bad) (bad) cmp decl aad push stos (bad) pop mov jmp loope fs in mov push shr dec jg jmp mov jge pop pop pop incl sbb push hlt hlt call rcl ljmp sahf sahf incl mov lcall fdivr push scas (bad) push test decl aam inc lcall xor (bad) ret ljmp jnp jmp je jmp mov and lcall pop movsb jmp data16 (bad) cmp out add add mov push ss repz test sbb imul pushl add cmp sar dec mov (bad) pop mov (bad) arpl in push out insb ret jno call (bad) pop je (bad) mov mov mov mov call pop pop (bad) fstp (bad) test mov scas (bad) mov jns (bad) gs fdivrp pop mov call fdivr dec movsl aad inc pushf sar cmp (bad) lret test (bad) sub daa jbe (bad) and mov (bad) sbb pop movsl (bad) daa data16 (bad) cmp out add add mov push xor popa test push gs (bad) and (bad) es (bad) sub pushl test (bad) cmp sar dec movsl xlat (bad) pop scas fdivr pop mov (bad) gs in insb ret jno call incb jg (bad) stos stos stos (bad) movsb movsb movsb (bad) mov movsl movsl decb adc rol inc vpaddd aad (bad) (bad) fdivrp jecxz jecxz jge xchg (bad) jae in gs (bad) push scas (bad) dec test incb sar ds iret (bad) ss (bad) xor ret ja (bad) and mov (bad) sbb pop cmpsb (bad) daa movsl (bad) cmp out add add mov push ss repz test (bad) and (bad) es (bad) sub sar test (bad) cmp sar dec cmpsl fdivr pop scas (bad) bound in imul (bad) jo call incb in (bad) test mov (bad) (bad) fdivr (bad) fdivrp aad aad dec dec dec incl add (bad) jp jp (bad) fsin repz cli cli cli (bad) cli cli cli (bad) cwtl cmpsl scas (bad) jnp out push loope popa mov (bad) push stos fdivr dec mov sar cmp (bad) (bad) sub ret (bad) sub (bad) and mov (bad) push data16 sbb (bad) daa movsl (bad) cmp out add add mov push ss repz data16 and es (bad) sub sar mov (bad) cmp into incb aam push test (bad) fs in outsl ret out je jmp decb fnop inc rcl (bad) cld cld cld (bad) jmp jmp mov mov insb insb insb incb pop pop incl add (bad) adc adc (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) in in xchg lods mov jge out outsb shl arpl (bad) push scas fsin dec cmpsl (bad) incb sar cmp leave (bad) sub jnp (bad) and jo (bad) push addr16 sbb (bad) daa cmpsb (bad) cmp mov aas mov push aaa jg repz addr16 and (bad) daa jne (bad) sub ret mov (bad) cmp mov (bad) pop mov (bad) mov insl shl jae call (bad) jle jmp mov in (bad) xchg xlat out incb (bad) decb jbe (bad) cwtl cwtl cwtl (bad) je je cs push push push (bad) pop pop pop (bad) jp jp xchg xchg xchg (bad) xchg xchg xchg (bad) pusha xchg cmpsl (bad) jns out outsl (bad) in addr16 fdivrp push mov decb xlat incb sar cmp iret (bad) xor xchg (bad) sub (bad) and jo (bad) push push test daa push mov aas mov push ss repz push mov daa ja (bad) sub mov (bad) aas cltd sar dec movsb aad push scas (bad) pusha mov (bad) imul call (bad) jle jmp test in decb shl (bad) insl orb xchg xchg xchg inc (bad) (bad) (bad) div idiv lock mov push push (bad) pop pop pop (bad) je je inc pop (bad) (bad) jne loope jne out jo in push mov fdivr push lods fsin dec movsb aam aas fwait sar cmp enter ret (bad) daa jns jmp mov (bad) sbb (bad) sub (bad) cmp mov aas mov push aaa cmpb pop imul (bad) cs (bad) pushl mov incb sar dec cmpsl (bad) (bad) pop mov (bad) arpl in jae out js jmp (bad) jg in incb aam decb mov (bad) jb xchg mov jecxz (bad) cld cld cld push repnz int (bad) jns jns push push push (bad) cmp (bad) scas (bad) (bad) jns call (bad) jb in insb (bad) mov fdivrp push mov decb (bad) incb sar cmp (bad) sub jnp jmp imul imul add ret push aaa cmpb pop push (bad) and (bad) sub (bad) xor int3 incb sar dec test (bad) gs in ja call incb shr incb aam decb xlat lock popf dec rcl (bad) cmc div (bad) jmp ret (bad) (bad) jb jl ds outsb (bad) outsb mov ljmp int (bad) jae out jo in push mov (bad) dec stos xlat incb (bad) cmp iret (bad) xor xchg (bad) sub jmp ja (bad) and (bad) sbb stos (bad) sub (bad) cmp mov inc mov push aaa cmpb and jmp jl pushl xchg (bad) cmp sar push stos fdivr pop mov jmp loop jb out jp jmp incl shr incl (bad) out decl f2xm1 call icebp ljmp ret jae stos ljmp lods (bad) js aad adc in incl shr (bad) jl jmp pushl ljmp jmp loopne pop mov call fcos inc mov sar cmp enter ret jmp jns jmp outsb mov sbb push (bad) cmp mov inc mov push aaa cmpb and and jle (bad) xor into decb aam push lods fsin pop mov jecxz jne out jge jmp incb aad decb fdiv decb lock xchg fdiv (bad) pushf fcomip (bad) mov loope lcall fnop decb out incb aad incb shr (bad) jl call pushl in addr16 fdivrp push scas (bad) dec cmpsl (bad) incb sar cmp (bad) cs sub (bad) and (bad) sbb imul inc mov push aaa cmpl (bad) es (bad) sub sar mov (bad) ds iret decb aad push mov (bad) popa mov jecxz js out or incb aam decl lock xchg fnop (bad) xchg fdiv (bad) xchg (bad) (bad) cwtl fdivp (bad) pushf fcomip (bad) sahf loopne (bad) popf loopne lcall fdivp (bad) xchg fnop (bad) nop fsubr decb fldln2 decb aad incb iret call (bad) push jecxz pusha mov (bad) dec test sar cmp iret (bad) ss lret (bad) xor sar jno (bad) pop lods (bad) sub cmp add add ret push cmp lods (bad) and (bad) daa ja (bad) cs (bad) aas cltd sar dec cmpsb (bad) (bad) push mov (bad) fs in jp call decb (bad) out call fcomi (bad) (bad) (bad) sahf fcomip (bad) lahf loopne (bad) mov loope (bad) lahf loope (bad) sahf loope lcall loopne (bad) cltd loopne (bad) xchg fdivp (bad) xchg fucomp (bad) xchg fsubr decb xlat in incb shr pushl out outsb (bad) gs (bad) push lods fsin inc mov sar cmp (bad) ljmp je (bad) and (bad) sub ds mov inc mov push cmp lods (bad) and (bad) sub (bad) xor lret incl sar dec cmpsl (bad) (bad) pop mov (bad) mov jb in jge call decb fsubr lcall fcomip (bad) movsl loope (bad) test repz stos in (bad) stos in (bad) test hlt (bad) movsl in (bad) movsl in jmp loop (bad) lahf loop (bad) pushf loope (bad) cltd fcomip (bad) cltd fdivp (bad) xchg fsubr (bad) xchg (bad) decb ljmp leave in imul (bad) bound (bad) dec cmpsl (bad) incb sar cmp enter ret (bad) daa jbe (bad) and (bad) sub (bad) xorl inc mov push cmp (bad) and jns (bad) xor incl sar dec test (bad) push (bad) in or decb xlat out (bad) cltd fcomi jmp loop (bad) mov hlt (bad) mov cmc (bad) mov cmc (bad) mov cmc (bad) scas out (bad) lods out (bad) stos out ljmp in (bad) movsb in (bad) mov loope (bad) pushf loopne (bad) cltd fsubrp (bad) xchg fsubr (bad) nop fldlg2 decb jmp (bad) jne in insb mov (bad) push stos fdivr inc mov into (bad) xor add sub (bad) and (bad) sub (bad) aas xorl inc mov push cmp scas (bad) and jnp (bad) xor int inc mov fdivr bound jecxz jle out mov ljmp fcomi (bad) cmpsb fcomip pushl out inc jmp dec out clc dec out clc inc in idiv mov ljmp mov cmc (bad) mov hlt (bad) scas out (bad) lods out (bad) test repnz movsb jecxz (bad) mov fucomip (bad) cwtl fsubr (bad) xchg fldlg2 decl shr incb enter mov fsin dec mov iret (bad) aaa (bad) lret test (bad) sub (bad) and (bad) sub (bad) aas test add push cmp mov das jnp (bad) cmp int3 (bad) push mov fdivr insl mov jecxz nop shr (bad) mov loopne (bad) mov ljmp fcomi stc (bad) in sti (bad) in clc cld (bad) idiv std (bad) hlt sti std (bad) jmp cld (bad) out sti (bad) loope cli (bad) fcomi cli call repnz (bad) (bad) icebp stc dec lock dec out idiv vpsadbw shr (bad) mov out (bad) scas jecxz (bad) test lock fsubr (bad) stos fsubr (bad) mov out (bad) jp loop pop mov decb aad inc cltd sar cmp (bad) (bad) sub (bad) and mov sub stos incb mov pop movsl roll push mov incb enter shr (bad) mov loopne (bad) mov in clc (bad) shr stc (bad) (bad) icebp cli (bad) fdiv sti (bad) fdiv sti (bad) xlat icebp sti (bad) xlat repnz (bad) fdiv sti (bad) fdiv sti (bad) loop cld (bad) icebp cli std (bad) jmp cld (bad) fdiv sti (bad) (bad) lock dec out cli inc in stc inc in stc inc in stc inc in stc inc in stc inc in cli dec out cli dec out cli (bad) shr cli (bad) aam cli (bad) (bad) icebp cli call icebp cli (bad) (bad) icebp cli (bad) loop sti (bad) ljmp (bad) mov fdivp (bad) lahf fsubr (bad) xchg shr decl shl jp fsin js sar insl test out add add fild mov out (bad) jbe repnz icebp pushl pushl icebp pushl in (bad) jp in mov jmp xchg fsubr lcall fcomip ljmp fdivp ljmp loop jmp loope ljmp in ljmp fdivp call fdiv incl xlat repz (bad) call cmc jmp loop pushl out (bad) mov jecxz pushl icebp (bad) mov fsubr lcall shr (bad) jge in jnp out (bad) js repnz icebp pushl pushl repnz add add jmp (bad) pop shr pop shr pop ret pop mov mov (bad) insb test (bad) jo ret incb sar mov out cltd fptan call aam incb (bad) lock jg out (bad) je out (bad) insl lret addr16 in (bad) (bad) (bad) in jmp in (bad) imul out (bad) ja out incb aam (bad) xchg fdiv (bad) sahf fcomi (bad) cmpsb (bad) (bad) stos fcomip jmp iret (bad) xchg mov into incb mov (bad) jo (bad) stos (bad) (bad) gs in (bad) pop ret in (bad) pop ret addr16 int inc pop mov in dec scas jecxz dec lods jecxz dec lods jecxz push test incl (bad) pop mov (bad) jp mov lcall (bad) insl xchg test decb int3 in (bad) jl jmp jb ljmp mov out push mov decb in dec mov decl in push mov (bad) pop mov call (bad) jne ljmp into in (bad) xchg shr (bad) popf aad lcall xchg cmpsb incb ret decb (bad) sar jo mov pop mov call in dec mov decb in pop mov add inc stos fldl sahf (bad) cmp fsin inc xchg enter push (bad) sub cmp sbb sub adc and sbb sub (bad) push pop push incb shl jae out data16 (bad) pop scas loop push test fdivrp inc mov fdivr mov (bad) inc mov fdivrp dec test loope bound in jnp out xchg jmp incl dec push (bad) sub cmp sbb sub adc (bad) and xor aaa aas inc (bad) push fs pop cmpsb aad inc mov (bad) inc mov fdivl cmp sar xor jno sub dec incb (bad) pop jl incb mov pop jg decb (bad) sub inc (bad) push insb jl cmpl loop fs (bad) push movsl fdivr dec popf fsin aas xchg xlat (bad) cmp aad xor xchg aad cmp (bad) incb xlat decb fsin push movsb fdivr pusha stos fdivrp insb mov (bad) jns jecxz test imul dec push (bad) push jns decb mov pop sbbl incb xchg inc xchg aad cmp aad xor into aaa cs (bad) cmp pushl mov (bad) mov (bad) jb mov (bad) push mov (bad) jl loopne jne (bad) imul (bad) ds sar aaa (bad) sar xor iret pushl xchg (bad) xor sar cmp sar dec cltd aad push mov (bad) outsb scas fdivrp jnp loopne imul lods (bad) jl mov incb adcb dec xchg (bad) cmp add add sub jae (bad) cmp inc dec (bad) jae xchg decb mov (bad) jnp pushf (bad) xor xchg mov pushl (bad) jbe (bad) insl stos (bad) pop mov aam inc (bad) sar aaa xchg (bad) das (bad) lret (bad) sub lret jle (bad) sub (bad) sub (bad) int3 (bad) cmp sar dec xchg sar push popf aad movsl fdivr jno fdivr outsb xchg scas (bad) aaa inc push incb mov popf (bad) xchg test (bad) (bad) aaa inc dec (bad) pop pop (bad) ds (bad) ds int sub sbb ret ja lret ss nop (bad) pushf stos mov js xchg (bad) cltd cmpsl mov orl (bad) fs mov push scas fcomi jbe fcomi jb (bad) cmpsl xlat negl aam dec xchg sar cmp or jle,pn (bad) sub sub std sub jge,pn clc xor lret testl (bad) cmc pop mov xlat jmp aaa cmp lahf (bad) xchg movsb scas (bad) jns xchg (bad) mov jle (bad) aaa cmp (bad) pop mov aas mov sbb add add jg cmp cmp test mov orl decb cmp push sbbb movb scas fiaddl jo fiaddl pop mov aad push mov rorb inc xchg rorb inc xchg rorb inc xchg iret or or (bad) movl cmp into add pop mov leave add js cmp cmp xchg xchg lcall mov (bad) jnp jg cmp cmp data16 aas outsl outsl outsl dec cmp cmp mov mov mov lods decb cmp (bad) imul pop pop pop jo cmp (bad) cltd cltd cltd (bad) stos stos stos decb mov incb cmp (bad) imul jno jno cmp cmp mov decl mov call cmp ljmp imul add pop pop pop jo cmp lcall lods lods decl mov incl cmp ljmp aas jno jno cmp cmp mov mov xchg xchg xchg (bad) mov mov xchg xchg xchg (bad) cmp cmp insb insb insb pop pop pop pop jo cmp popf (bad) scas scas scas (bad) xchg xchg xchg (bad) mov test insl insl insl aas jb jb cmp (bad) (bad) (bad) mov mov xchg xchg xchg (bad) mov mov xchg xchg xchg (bad) cmp cmp insl insl insl pop pusha pusha pusha jo ds sahf sahf sahf (bad) mov mov xchg xchg xchg (bad) mov test (bad) outsb outsb outsb aas jb jb ds nop nop nop (bad) mov xchg xchg (bad) mov mov xchg xchg xchg (bad) cmp insl insl pop pusha pusha pusha jo aas aas (bad) mov mov (bad) xchg xchg xchg (bad) mov xchg (bad) outsb outsb outsb aas jae jae aas aas aas (bad) xchg xchg xchg (bad) mov xchg xchg (bad) mov mov xchg xchg xchg (bad) ds outsb outsb outsb pop pusha pusha pusha jo inc inc (bad) lahf lahf lahf (bad) mov mov cwtl cwtl cwtl (bad) mov xchg (bad) outsb outsb outsb aas jae jae ds xchg xchg xchg (bad) mov cwtl cwtl (bad) mov mov xchg xchg xchg (bad) cmp insl insl pop pop pop pop jo aas aas (bad) sahf sahf sahf (bad) mov mov xchg xchg xchg (bad) mov xchg (bad) outsb outsb outsb aas jb jb ds xchg xchg xchg (bad) mov xchg xchg (bad) mov mov xchg xchg xchg (bad) cmp imul pop pop pop jo aas aas (bad) lcall (bad) xchg xchg xchg (bad) mov mov (bad) outsb outsb outsb aas je je cmp xchg xchg (bad) mov xchg xchg (bad) cmpsl cmpsl cmpsl decb cmp pusha pop push push push jno inc inc (bad) xchg xchg xchg (bad) cmpsl cmpsl cmpsl (bad) lcall decb inc inc (bad) jae jae xchg inc (bad) mov enter xchg xchg (bad) cwtl cwtl cwtl incb inc decb dec jno add add addl decb lcall into into into (bad) cltd cltd cltd incb inc (bad) jnp jnp xchg xchg xchg dec dec dec dec pushl aad lcall xchg test incl inc cwtl inc inc inc stos dec dec dec decl xchg xchg ljmp (bad) pushl pop pop lcall fcmovnu add add add repnz jb dec int (bad) out out stos stos stos (bad) jns jns addb incb inc (bad) add add add dec add call mov (bad) inc rol in in in dec leave leave incb (bad) sub div add std std std add pushf pushf pushf (bad) fcmovnu (bad) cmc cmc cmc inc rol jns jns outsb outsb outsb (bad) popa popa popa incb inc decb dec cmp add add dec dec inc inc inc (bad) push push jbe jbe xchg xchg xchg (bad) (bad) fdivr cld cld cld (bad) xlat xlat xlat (bad) stos stos stos stc div notb std std std add (bad) (bad) incb rol fst aam (bad) cli cli cli (bad) xlat xlat xlat incb push push (bad) outsl outsl outsl decb dec incb inc mov add add dec add (bad) dec dec dec (bad) je je pop pop pop (bad) mov out (bad) cli cli cli dec enter into into int (bad) decb (bad) (bad) incb (bad) (bad) incb (bad) decb (bad) fcompl lock in in in (bad) mov dec dec (bad) pop pop pop (bad) pop pop pop incb decb dec pop inc dec dec push dec dec lcall pusha (bad) pop pop pop (bad) pop pop pop (bad) mov mov lock out out out (bad) mov mov loop loop std std std or (bad) incb add add loop add stc stc push (bad) (bad) mov sar jmp jmp lret lret lret (bad) jb jb cmp cmp fs push push push incl dec icebp dec dec push xor add add gs inc dec push notl push lcall pusha (bad) ss js js rcl sar jmp jmp lret (bad) stos stos stos (bad) fcmovnu fstpt clc clc clc push fcmovnu fildl loop loop mov xchg xchg fidiv jae int3 int3 int3 (bad) call test decb dec (bad) cmp cmp fs push decb push in push push pop inc push pop arpl push pop repz push pop (bad) pop pusha (bad) pushl xor decb dec (bad) stos stos stos (bad) out out mov push xchg xchg xchg iret mov out out add add add addl addl (bad) (bad) fdivrp lcall (bad) cmp cmp popa popa popa (bad) push push push decb pop sti dec pop pop xchg pop gs adc push arpl push pop imul pop pop arpl xor xor cmp cmp xchg xchg xchg (bad) fstp (bad) mov jno decb dec (bad) ja ja xchg xchg xchg add add add jb mov jae fisttpl dec inc vpaddd aam (bad) xlat xlat xlat (bad) lcall pushl xor push pop pop (bad) push pop pop decb decb data16 push data16 pop outsb jp bound sub mov arpl adc jg push addr16 push arpl dec pusha insb notl addr16 pop arpl push pop popa (bad) xor call aam inc rol mov mov cmp cmp pop pop pop int fs add add repnz mov dec mov test call ljmp movsb movsb movsb call push ljmp sub cmp pop pop call call insl call call jg dec push decl jl push imul push popa insb call imul fs dec dec push (bad) cmp cmp pop pop pop jmp (bad) inc rol ret ret ret incl jl cli pop pop pop add add xchg xchg xchg add (bad) incb std std std push mov rol (bad) (bad) (bad) fdivrp lret lret lret (bad) (bad) fdivrp mov mov jbe jbe cmp cmp sub incb decb popa decb decb push incb pop incb incb (bad) ds inc incb inc (bad) pop pop pop (bad) xchg xchg xchg inc ret ret (bad) loope loope mov vpaddd stos stos (bad) jl jl jae jae (bad) (bad) incb stc stc stc pop ret mov rol dec into into (bad) mov mov in in iret iret iret (bad) mov mov addl dec incb inc (bad) cmp inc (bad) aaa cmp (bad) das xor xor inc (bad) addr16 (bad) mov rcl (bad) out out ljmp dec lret lret (bad) scas scas scas (bad) mov xchg xchg movsl xchg add clc clc clc add (bad) incb (bad) (bad) decb mov mov xchg xchg xchg inc rol mov mov rcl sar out out fcmovnu (bad) aam fsin into rcl inc lret iret (bad) mov mov mov (bad) mov into sar fcomp (bad) in in div idiv sti sti sti (bad) aad aad lret call mov (bad) xchg xchg xchg stos xchg xchg xchg push lods lods lods add (bad) incb (bad) (bad) decb cmc cmc cmc adc test jg jg stos stos stos (bad) mov fcmovu (bad) out out out (bad) icebp repnz div clc (bad) div idiv icebp repnz icebp icebp (bad) out out lock out out out (bad) out lock repz icebp icebp icebp (bad) ljmp (bad) cmpsb cmpsb cmpsb (bad) jae jae (bad) (bad) (bad) std xchg xchg xchg xchg popf popf popf add xchg xchg xchg add div add (bad) incb mov insb insb pusha bound in dec dec dec decb dec incb lods lods (bad) mov (bad) (bad) (bad) repnz div idiv cmc cmc cmc push cmc idiv cmc cmc idiv repnz (bad) fdivrp leave leave leave (bad) mov cltd cltd (bad) jbe jbe jb jb jp jp mov mov loop loop ja ja jae jae pop pop pop add add add dec push dec dec dec xchg pop pop pop imull push decb mov scas (bad) mov mov mov stos stos stos (bad) pushf pushf pushf (bad) xchg xchg xchg incb jnp (bad) ja ja jb jb cltd cltd cltd xchg jmp std std or div add add add push sbb pop jnp jp rcrb mov inc ret ret inc rol mov mov mov (bad) scas scas scas (bad) xchg xchg xchg std jle jle xchg xchg xchg js loopne push (bad) (bad) decb (bad) decb (bad) (bad) incb insl insl insl add test pop xchg xchg xchg sbbl xchg xchg movsl mov outsl jl imul jb sbb fcomp add cli cli add (bad) (bad) incl (bad) inc add add (bad) incl add inc add add add incl add incl add add add incl add incb add add add jg add cld add add add add add add add add add add add add add add add add add add add add add add add incb add add add jg add incl add add add incl add incl add add add incl add incl add incl add inc add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add jmp add add add incl add push add add add incl add push add add add incl add (bad) clc add add add incl add (bad) cld add add add incl add (bad) cld add add add incl add (bad) incb add add jg add add incb add add jg add add incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl (bad) incl add (bad) incl pop (bad) clc add incl add (bad) incl pop (bad) clc add add add incl pop push add add add incl (bad) lock incl add (bad) incl pop jmp add incl add (bad) incl (bad) incl add (bad) inc add add (bad) incl add (bad) inc add add (bad) incl add (bad) inc add add (bad) incl add (bad) inc add add (bad) incl add (bad) inc add add (bad) incl add (bad) jmp add add (bad) incl add (bad) jmp add add incl add (bad) push add add (bad) incl add (bad) (bad) cld inc add (bad) (bad) incl add (bad) (bad) push add (bad) (bad) incl add (bad) (bad) (bad) cld add (bad) (bad) incl add sub add inc add add add add add add inc add sub cltd add jl add jl add mov add xchg ret add roll inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild inc cmpsb fild aas mov ret add xchg ret add xchg ret add test add jl add add add mov inc cmpsb fild inc cmpsb fild cmpsb fild inc cmpsb fisttp inc cmpsb fisttp cmpsb fisttp inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp cmpsb fistp inc cmpsb fistp inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fistp inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fild inc cmpsb fild cmpsb fild xor mov and jge inc cmpsb fild inc cmpsb fisttp inc cmpsb fist inc cmpsb fistp inc cmpsb fbld cmpsb fbstp inc cmpsb fistpll inc cmpsb fild cmpsb fild cmpsb fisttp fist cmpsb fist fistp cmpsb fistp cmpsb fistp cmpsb fbld cmpsb fbld cmpsb fbld cmpsb fbld cmpsb fildll cmpsb fildll cmpsb fildll cmpsb fildll fildll cmpsb fildll cmpsb fildll cmpsb fildll fildll cmpsb fildll cmpsb fildll cmpsb fildll cmpsb fbld cmpsb fbld fbld cmpsb fistp cmpsb fistp fistp cmpsb fist cmpsb fist cmpsb fisttp cmpsb fisttp cmpsb fild cmpsb fistpll inc cmpsb fistpll inc cmpsb fildll inc cmpsb fbld inc cmpsb fistp inc cmpsb fisttp inc cmpsb fisttp inc cmpsb fild sub add add add jns add mov ficom aas movsb (bad) aas mov ficompl sahf xlat je fwait rorl cmp mov mov jle mov sub jo (bad) sub cltd lret cltd int outsl cltd shrb jno shrl jno aad jb (bad) jae,pn xlat das je xlat xor xlat jae,pn xlat jb,pn xlat sub outsl cltd aad outsl cltd aam jo shrb outsb cltd into sub cltd lret sub cltd enter les jbe (bad) xor xor mov stos cmp xchg cmp mov fistpl mov frstor inc movsl ficom xor add add add sub add dec imul dec insl sbb arpl sbb bound cmp pop push jg sbb in sbb sbb cli pop push mov and std sub (bad) xor (bad) cmp ret incl lret xchg int dec cltd into incl iret incl into incl into incl int inc xchg int inc xchg int3 incl lret (bad) aas xchg lret xchg leave (bad) cmp (bad) (bad) (bad) cmp mov (bad) aas mov (bad) aas mov (bad) aas mov (bad) cmp (bad) mov ljmp jae (bad) sub (bad) and pushf (bad) pop pop xchg (bad) sbb mov sbb cld sbb stc pop inc jp pop inc ja and (bad) pop cmp sbb fs push dec imul das inc add add add daa cmp sbb pop sbb pop pop pop cmp adc dec addr16 cmpsb lcall pop sahf lcall lahf lcall pop mov jmp push ljmp jnp (bad) cmp incl (bad) xchg enter lret xchg lret incl incl int3 incl int3 incl int3 incl int3 (bad) aas xchg lret (bad) ds lret nop leave (bad) cmp mov (bad) cmp (bad) (bad) mov incl ret incl sar xchg pushl jne ljmp insl lods jmp push cmpsb lcall pop mov lcall pop sahf lcall push cwtl lcall push xchg pushl jo lcall aas pop test pop cmp sbb pop push sbb pop adc add sbb add inc arpl sbb pop and aaa push dec and popf and cmpsb lcall pop lahf lcall mov jmp gs sub das jne pushl jg (bad) aas mov incl (bad) xchg lret cltd int3 decl decl iret decl sar inc lcall inc lcall inc cltd sar inc cwtl iret incl into incl into incl int3 incl lret incl incl leave incl enter (bad) incl ret test pushl js ljmp mov daa push jmp gs and lcall pop lahf lcall push lcall jb lcall cmp sbb pop and inc arpl sbb push add inc fs sbb push sbb push xor push jb and pop mov jmp popa cmpsb jmp outsl mov xor (bad) cmp (bad) decl leave decl into decl sar dec mov sar dec mov aad dec mov aad inc mov aad inc sahf aam inc pushf sar inc fwait sar inc fwait sar inc lcall dec cwtl into decl int dec xchg lret incl (bad) incl ret (bad) cmp mov ljmp insb scas jmp stos jmp bound lcall mov lcall pop cltd pushl test sbbb pop xor inc popa adc sbb pop add add add inc add inc arpl and jne and pop mov jmp arpl ljmp jb pushl jl (bad) cmp enter int push popf sar push mov (bad) call xlat decl fcos dec cmpsb fcos dec cmpsl (bad) dec cmpsb (bad) dec cmpsl (bad) dec cmpsb (bad) dec movsb fcos dec mov xlat decl aad dec sahf aam dec sahf sar dec sahf sar dec fwait sar dec lcall inc mov (bad) cmp jle ljmp jbe ljmp outsl mov and fs lcall pusha cmpsl lcall sahf lcall pop fwait pushl test outsb sbb pop and inc fs inc add add add aaa push add inc popa push sbb pop adc push jne and pop movsb lcall lods jmp insb mov sub xor (bad) cmp xchg lret decl sar push mov fdivr push test fdivr push lods (bad) push lods fdivrp push lods fdivrp push stos (bad) push lods fdivrp dec stos (bad) dec stos fdivr dec test decl decl decl fdivr dec movsb xlat decl aad push mov sar dec lcall inc mov pushl (bad) sar jns ljmp jno jmp lods lcall bound lcall pop mov pushl stos lcall dec insb pop sbb pop adc inc popa push sbb dec or jae and pop cmpsb lcall popa stos jmp scas jmp insl mov sub add incl into call aam push cmpsb fdivr pop stos (bad) pop scas (bad) pop mov call loopne push scas loopne push mov call loopne push scas loopne push scas loopne push scas (bad) push lods fdivrp dec stos fdivr dec test (bad) push cmpsb fcos push cmpsl fdivr push movsb (bad) call aam dec popf sar dec xchg into incl lret xchg pushl jle ljmp mov and jmp arpl sbb lcall sahf pushl stos lcall xor pop add add add xor das push stos lcall cmpsl lcall arpl daa outsl mov jns,pn pushl add inc nop lret decl sar push mov (bad) pop scas fdivrp pop mov lcall loope pop mov lcall jecxz pop mov lcall loop push mov call loop pop mov jmp in pop mov call fdivrp push stos fdivr push stos (bad) push stos (bad) push test call (bad) call aam dec fwait sar inc xchg int3 (bad) cmp sar js jmp jo jmp mov and lcall popa stos lcall pop movsb lcall sahf pushl stos ljmp pop addl add add xchg lcall test pop arpl jmp jno ljmp jp (bad) cmp into decl sar push cmpsb fdivr pop scas (bad) pop mov lcall loop pop mov lcall in pop mov lcall in pop mov call int3 decl xchg jbe mov (bad) cwtl sahf call xchg call (bad) push lods (bad) push lods (bad) push test call (bad) decl sar inc xchg into (bad) cmp lret test ljmp jl ljmp je jmp addr16 push bound lcall mov (bad) cmp aas aas mov dec es lcall fs jmp push ljmp jae pushl jle (bad) cmp sar dec mov (bad) pop mov jmp loope bound in popa mov in pop mov movsb pushl aas inc incl mov (bad) cld cld cld (bad) jmp in incl lahf mov lcall fdivr push lods (bad) push test decl aam inc lcall ss ljmp jg ljmp jbe jmp imul lcall je (bad) cmp aas aas mov dec es lods lcall stos lcall gs and mov sub pushl add cmp sar dec mov fdivr pop mov jmp jecxz arpl in bound decl mov push pop pop lcall pop jmp pushw lahf lahf (bad) stc stc stc jmp loop inc (bad) (bad) ljmp ljmp lret mov lcall (bad) push stos fdivr dec movsl aad dec popf sar aas xchg into pushl mov pushl (bad) ret ljmp jns jmp jae jmp insb mov and lcall pop test pushl jle aas aas mov dec es lods lcall stos lcall data16 and mov sub pushl (bad) (bad) (bad) cmp sar push cmpsb xlat lcall (bad) popa mov jmp jecxz gs out imul out pop jno ljmp xchg incl xor (bad) out out out inc mov lcall jne lcall fdivrp pop mov call (bad) push cmpsl (bad) decl sar inc xchg iret (bad) cmp vmovntps daa je jmp insl mov and lcall stos lcall je (bad) cmp aas aas mov dec es lods lcall stos jmp addr16 and jns pushl test (bad) cmp sar push cmpsl fdivr pop mov jmp loope mov push out insb ret jae jmp incl mov mov jmp pushl xor dec int jmp stos stos (bad) mov jg pushl loop pusha mov lcall (bad) push stos fdivr dec mov sar cmp (bad) ljmp jle jmp jbe jmp mov lcall popa stos lcall jne (bad) cmp aas aas mov dec es lods lcall push mov pushl test (bad) cmp int inc lahf aam push test fdivrp gs in insl ret jae jmp pushl ret mov stos jmp movsb movsb call and dec enter (bad) jmp loop jmp out ljmp mov jmp loopne pop mov call (bad) dec cmpsb (bad) incl sar cmp enter ret ljmp js jmp mov lcall lods lcall jne (bad) cmp aas aas mov dec es scas lcall push jmp jl pushl xchg (bad) cmp into decl aad push stos (bad) pop mov jmp jecxz insb shl jno call decl (bad) xlat jmp jmp icebp (bad) in in in dec lret lret ljmp cs add jmp arpl (bad) (bad) call cli cli dec into sar jp fdivr insb mov (bad) pop mov call xlat incl sar cmp into pushl (bad) (bad) ljmp jp jmp insl mov sbb lods lcall jbe (bad) cmp add aas mov dec daa insl scas lcall imul jge pushl enter iret decl aad push scas (bad) popa mov ljmp in jo out jbe jmp decl xlat jmp enter fcmovnu (bad) xchg xchg xchg pushl jmp and add add sub sub jbe jbe cltd cltd cltd (bad) mov fwait mov ljmp jecxz fs (bad) push lods fcos dec movsb aad aas lcall das test ljmp jge jmp outsb mov sbb scas lcall pusha movsl pushl ja (bad) cmp add inc mov dec daa outsb scas lcall gs jmp insb mov daa jne ljmp ret mov incl sar dec cmpsb xlat lcall fdivr fs in jae out ja jmp decl xlat out (bad) jns test mov jge test fcomp ljmp (bad) lcall pop pushl jne jg (bad) call fwait (bad) js out jo in addr16 fdivrp push mov decl incl sar cmp enter ret jmp ja jmp jo lcall popa cmpsb pushl ja (bad) cmp add inc mov dec daa outsb scas lcall data16 jmp outsb mov es ljmp mov incl sar push stos fdivr pop mov ljmp loop jno out jbe call (bad) jg in incl aam incl jge ljmp rcl (bad) cli cli cli (bad) out out out (bad) mov push push lcall pop (bad) aas pop push pushl out jb in push jecxz arpl decl fdivr inc mov iret pushl lret (bad) (bad) ljmp jp jmp jb lcall addr16 push bound (bad) cmp add inc mov dec daa outsb scas lcall scas jmp outsb mov daa ja ljmp test (bad) cmp sar push lods fcos pop mov ljmp jecxz je out jnp jmp incl shr decl (bad) out incl xchg popf dec iret sar std std std push repz lret pusha addr16 ja loop jp jmp pushl ljmp in mov pop mov fcos inc movsb aad ds xor sar jne lcall imul (bad) cmp add inc mov dec sub lcall push mov pushl xchg (bad) cmp aam push scas (bad) popa mov in js call incl shr incl (bad) out decl fnop lcall loop mov popf stos jmp movsl pushl aad adc jmp adc (bad) jl jmp pushl in push jecxz pusha mov (bad) dec test incl sar cmp enter ret jmp jbe jmp imul aaa js (bad) cmp mov inc mov dec daa jo lcall imul pushl mov (bad) cmp movsb aad push mov jmp pushl in jp call incl aad decl lock fcomi lcall loopne jmp fcomip call (bad) decl (bad) in incl shr (bad) jge jmp ljmp in arpl fdivr dec stos fdivr inc mov iret pushl lret (bad) (bad) ljmp jns jmp insb mov and pushl jns (bad) cmp mov add ret dec sub jmp push jmp jge pushl leave (bad) aas cltd iret decl lcall fdivr addr16 out jge jmp decl xlat out call fcomi call fdivp lcall loopne lcall fcomip call fnop call (bad) decl (bad) jmp (bad) shr (bad) jnp call jmp loop pop mov fcos inc movsb aam ds sar ss ljmp test ljmp jl jmp outsb mov and (bad) cmp (bad) cmp mov add ret dec sub jmp insb mov es ljmp mov incl sar dec test (bad) push loop ja out or in decl fnop lcall fcomip jmp loop jmp loop jmp loope lcall loopne call fucomp call fsubr decl shr pushl out insl (bad) mov (bad) dec test incl sar cmp (bad) ljmp jge jmp mov and (bad) cmp (bad) cmp add add ret dec sub jmp insl mov daa jbe ljmp add incl sar dec stos xlat lcall fdivrp insb shl jns out test ljmp (bad) lcall loope ljmp hlt ljmp in ljmp in jmp bnd loope lcall out call in decl iret call ljmp loope pop mov call fdivr inc mov into pushl leave ljmp jb jmp imul aas inc pop dec sub jmp outsb mov sub pushl (bad) (bad) (bad) cmp sar push lods fdivr popa mov in jle call call fdiv ljmp in (bad) mov jmp (bad) mov jmp cmc ljmp out ljmp in jmp icebp lcall fsubrp call xlat in incl into out jp in insl mov (bad) dec mov iret pushl mov ljmp (bad) ret jmp jae jmp imul aas inc mov dec sub mov sub pushl jg (bad) cmp leave decl sar pop stos xlat ljmp fdivrp jnp in mov jmp ljmp jecxz inc call idiv aad clc jmp cmc cli (bad) in clc cld jmp cmc cli (bad) fptan cli call icebp stc dec out clc inc out idiv ret in idiv mov jmp hlt ljmp loop jmp fsubr call aam jmp lret gs call (bad) incl sar cmp vmovaps jmp stos (bad) cmp incl mov add dec pop popf leave ljmp sar ja fdivr test loop xchg int3 call pushl out dec in idiv aam stc (bad) fyl2x cli (bad) fdiv sti (bad) fdivp sti jmp cmc cld jmp idiv (bad) out stc std push cld (bad) (bad) in clc std jmp cmc cld (bad) fcomi sti call icebp cli call lock call lock call lock call lock call lock call lock call lock call lock call lock call out clc dec in clc (bad) ljmp ljmp shr decl shl js fdivrp push aam bound lcall (bad) aas jp in mov repz js repnz repnz jns repnz jp out (bad) jle out (bad) aad lcall icebp ljmp fcomip ljmp jecxz jmp idiv mov idiv mov idiv movsl loope call (bad) incl fdiv decl fcomi lcall loopne ljmp in pushl call icebp pushl out pushl fdiv call int3 out jge lock jns repnz js repnz js repnz lret push shr pop shr pop shr pop mov mov ljmp sar lods (bad) mov int3 call fdiv call (bad) lock out pushl out ljmp in jmp in jmp in jmp in ljmp in ljmp out (bad) jp out incl (bad) icebp lcall fdiv ljmp int3 (bad) (bad) mov call mov incl stos (bad) ljmp (bad) jmp jmp in lcall jmp pop shr outsl lret jmp push mov jecxz inc test loop dec movsl (bad) incl (bad) ljmp test test lcall xchg test mov in incl ljmp mov out push mov decl decl jecxz dec mov call in push mov jmp out insb shr jns ljmp shr lcall mov mov ljmp xchg incl stos mov lcall (bad) dec scas jecxz dec stos loop dec mov stc pop mov add inc mov xlat pushl jp jmp cs sbb xor and inc jmp xor and xor pushl mov (bad) jge out jo in pusha mov call (bad) inc mov (bad) cmp fcos cmp (bad) inc mov (bad) pop stos loopne gs pushl in add call lcall das jmp inc jmp xor jmp cmp sbb inc dec lcall ret lcall inc movsb fistl add add xchg shlb xor into pushl pop mov xor ljmp movsb ljmp scas jmp cmpsl (bad) jnp mov xor decl jns jle jecxz jl loop jb loopne popa stos (bad) push mov (bad) (bad) cmp sar xor pushl xchg aam inc xchg aad dec pushf fdivr pop movsb (bad) lods fdivrp jae loopne cmpl gs js mov ljmp jmp popf pushl jb (bad) ds sar cmp lcall das test xchg sub (bad) cmp pushl inc push (bad) jge stos (bad) jp mov jo test xchg stos mov jmp lahf pushl (bad) jp (bad) jne fdivrp addr16 xlat incl sar cmp into ljmp or sub (bad) int xor iret incl sar dec cwtl aam pop mov (bad) jbe fdivrp popa jg incl callw mov (bad) jp mov call (bad) cmp (bad) into xchg sub jns leave cmp aas inc decl fwait test jge sahf lcall inc dec lcall ljmp xlat pushl pushl fdivr insl stos (bad) pop mov sar cmp (bad) lret jge ljmp jp ljmp jp ljmp (bad) pushl jg (bad) cmp into call sar pop mov fcos pusha jns incl lcall mov test inc call ret mov leave ds sbb add add xchg cmp xchg pushf mov decl mov incl inc lcall ja imul (bad) outsb lods fnstenv arpl aam push popf sarl dec cwtl roll xchg into inc inc nop int inc nop int cmp (bad) aaa ss aaa inc (bad) int dec lcall gs leave daa push outsl stos inc dec dec ljmp mov nop xchg xchg (bad) cmp cmp arpl cmp add add jb cmp cmp sahf sahf sahf jmp xchg xchg pushl inc inc jmp bound add add popf dec dec dec pushl xchg xchg jmp xchg (bad) cmp cmp insl insl insl cmp add add jb cmp cmp mov movsb movsb call mov incl inc jmp popa mov add add push pushf dec dec dec (bad) mov xchg xchg jmp xchg xchg (bad) cmp cmp outsb outsb outsb cmp add add jae cmp mov cmpsl lcall mov inc jmp bound add add push pushf dec dec dec (bad) mov cltd cltd ljmp lcall outsl outsl outsl cmp add add jae ds test (bad) mov dec dec jmp arpl add add pop pushf push push push (bad) mov pushf pushf ljmp pushf (bad) aas aas aas pushl jo jne jne aas aas aas jmp stos stos lcall mov dec jmp mov add add pop pushf push push push (bad) mov pushf pushf ljmp pushf pushf (bad) aas aas aas pushl jo jne jne aas aas aas jmp stos stos lcall mov dec jmp mov add add pop pushf push push push (bad) mov pushf pushf ljmp pushf pushf incl inc pushl jo je je aas aas aas jmp lods lods lcall mov decl dec jmp bound add add push pushf push push push (bad) mov fwait fwait ljmp popf popf (bad) aas aas aas pushl jo jbe jbe ds mov lcall lods lods decl dec lcall pop mov add add dec popf dec dec dec ljmp cltd cltd pushl mov inc pushl jae xchg inc pushl mov xchg lcall dec dec decl pushf dec dec dec lods push push push jmp xchg xchg (bad) mov scas scas incl inc (bad) jge jge fwait fwait fwait inc push push push dec lret mov decl mov inc inc inc ret dec dec dec shll pusha call fwait fwait call rcl inc mov pop pop pop jmp enter add add aam add int das jge jge (bad) (bad) fcmovnu (bad) xchg xchg xchg pushl jne data16 inc stc dec dec dec sldt add dec dec dec sbb inc std jno jno (bad) (bad) (bad) ljmp jmp decl in and sti sti add add add (bad) add cmc cmc adc ljmp cmpsb cmpsb cmpsb jmp popa pushl jno inc inc inc incl inc outsb inc dec dec jle dec dec (bad) js js je je rol (bad) sti sti sti jmp in pushl cli cli push (bad) (bad) incb (bad) fild (bad) decb enter rcl sar div idiv rol jmp arpl pop pop pop call push incl inc out dec dec adc add add dec sbb out pop pop pop jmp popa pushl call rcl (bad) clc clc clc dec lret lret call rcl mov (bad) (bad) incb add add iret iret add std std pop (bad) fiadd in in in jmp loope incl aas aas jmp decw dec incl scas dec dec push add add add push mov fs aas aas aas call out (bad) ljmp jmp loop jae sti sti pop fcmovnu fildl repz ret ret and mov mov jecxz jecxz mov push push incl inc jmp arpl dec dec push incl push lahf push pop pop add push pop or pusha lods dec push push lcall arpl cmp cmp pop pop pop inc rol loopne loopne lods lods lods call ret div add add add jge lods dec dec dec pushl jecxz jmp inc incl inc lcall pusha decl push decl enter xor add add cmp rorl pop lcall fs cmp cmp inc inc inc jmp (bad) ljmp inc inc (bad) jns jns xchg xchg xchg add add add add pop pop sti mov (bad) jmp loop jmp dec dec (bad) cmp cmp pop pop pop call pop decl pop std push outsl mov imul jbe sub lea addr16 adc jle push gs push arpl dec pop push lcall data16 cmp cmp inc inc inc lcall (bad) pushl outsb outsb call push mulb pusha pop sahf sahf sahf add hlt hlt or mov jmp in jmp loop ljmp push push ljmp cs dec call pusha call push call jge dec imul push jno push popa push pop arpl push push push (bad) ds jmp (bad) ljmp (bad) scas scas scas (bad) mov ja jmp js add add (bad) incb clc clc clc adc mov out mov loope (bad) mov jg (bad) aas inc inc ljmp xor (bad) cmp inc incl push incl pop incl pop incl incl push (bad) cmp aas inc incl inc jmp jmp int3 int3 jmp loope ljmp into jmp xchg xchg mov ja ja (bad) (bad) incl (bad) (bad) decl out out sub vpaddusw lret mov mov aam aam fcmovu (bad) mov sahf mov jmp call popa decl incl incl push lcall popa (bad) jnp cmp (bad) fcos lock (bad) (bad) mov (bad) (bad) jmp stos stos rorb add add sti sti add (bad) incl (bad) (bad) decl jmp scas rorl mov inc rol loope loope call out jmp jmp jmp loope out fsubp in fsubp jecxz loopne jecxz jecxz in in in in push hlt hlt (bad) stc stc stc call xlat xlat lcall xchg lcall nop nop adc add add div add (bad) incl sti sti sti pop rcl rclb jns jns pop pop pop decl dec incl lods lods dec enter out push div (bad) sti sti sti push div push div push div push cmc idiv repz hlt (bad) (bad) (bad) lret lret lret ljmp jns pushl jbe cltd cltd cltd sahf ret or cmpsl cmpsl cmpsl add cwtl cwtl add outsl add push push push push push fistl push jmp incw cmpsl cmpsl inc rol lret dec leave leave inc (bad) rol pushl sahf sahf incl jbe pushl jno jge jge ret ret ret push sti sti sti or lock add add add dec dec pop outsl outsl outsl rorb pushl mov mov mov mov scas scas scas ljmp mov mov (bad) (bad) (bad) mov div (bad) paddd decb (bad) (bad) incb add add data16 ja mov cltd test movsb movsb mov mov nop mov imul adc ret div testl (bad) cld add add jg incl add add add cld add add add aas cld add add add aas clc add add add pop clc add add add pop cld add add add aas cld add add add aas incb add add add add add add (bad) incl add add add incl add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add jmp add add pop (bad) jmp add add pop (bad) push add add (bad) push add add (bad) (bad) clc add add pop (bad) (bad) clc add add pop (bad) (bad) incb add add (bad) incb (bad) incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl aas (bad) (bad) cld add incl aas (bad) (bad) cld add add (bad) (bad) cld add cld add (bad) (bad) incb pop clc add (bad) incl (bad) add (bad) (bad) incl add add (bad) (bad) incl add add (bad) (bad) incl add add (bad) (bad) incl add pop (bad) (bad) (bad) incl (bad) (bad) inc add pop (bad) (bad) (bad) jmp add pop (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) inc add ljmp add add add add add add and add add andb add outsb xchg add jns add mov xor xchg lret xchg lret mov fild inc cmpsb fild inc cmpsb fild inc movsl fiadd inc cmpsb fild inc cmpsb fild inc movsl fiadd inc cmpsb fild inc cmpsb fild inc movsl fiadd inc cmpsb fild inc cmpsb fild inc movsl fiadd inc cmpsb fild cmp lret xchg lds xor mov xor add insl xchg add add add movsl fiadd cmpsb fisttp inc movsl ficom inc cmpsb fistp inc cmpsb fbld inc cmpsb fbld inc movsl fisubr inc cmpsb fildll inc movsl fidiv inc cmpsb fbstp inc movsl fidivr inc cmpsb fistpll inc movsl fiadd cmpsb fild cmpsb fild movsl fiadd cmpsb fild cmpsb fild movsl fiadd cmpsb fistpll inc cmpsb fistpll inc movsl fidivr cmpsb fistpll inc cmpsb fbstp inc cmpsb fbstp inc movsl fidiv inc cmpsb fildll inc movsl fisub inc cmpsb fistp inc movsl ficom inc cmpsb fisttp inc movsl fiadd jp add add add dec insb add movsl ficom aas movsb (bad) aas mov fldcw pushf aam cmp (bad) sahf mov xor mov jge mov jl mov xor (bad) xor ret lods ret xor mov xor lods les jge ret stos (bad) xor mov xor xor mov xorl mov cmp (bad) cmpl mov (bad) movsl ficom pop push jno sbb add sbb pop aas push xor jle push test sbb repnz cli pop pop xchg std and jno (bad) cmp (bad) incl lret xchg int inc cwtl int inc xchg int inc xchg int inc xchg int3 incl lret (bad) ds lret nop leave (bad) cmp (bad) (bad) cmp mov (bad) aas mov (bad) aas mov (bad) cmp mov pushl je ljmp imul (bad) sbb cld sbb sbb icebp and push xor pop cmp dec push add add add cmp inc pusha nop/reserved push xor insl stos sti sbb lcall arpl (bad) xor (bad) cmp mov decl leave decl int3 decb int inc cwtl into incl into incb into incl into incl int aas xchg int3 (bad) aas xchg lret (bad) aas (bad) pop incl (bad) incl incb mov pushl ja ljmp outsb scas (bad) and test lcall push pushf lcall push xchg pushl outsl movsb clc adc inc insb sbb push xor inc pusha push sbb push add add add inc fs sbb sbb sub cli sbb (bad) push pop movsb (bad) and (bad) sub (bad) xor mov decb lret fwait iret decb sar dec lahf sar dec mov aam inc lahf aam inc lahf aam inc popf aam inc fwait sar inc lcall inc cwtl into decb int3 decb lret mov (bad) ds (bad) ss (bad) sub mov imul (bad) sbb (bad) sbb (bad) xor cmc pop aaa push dec sbb sbb inc fs sbb bound sbb push xor outsl lods stc sbb pop popa cmpsl jmp je (bad) aaa cmpl call aam push movsl (bad) (bad) push cmpsl fcos dec cmpsl (bad) dec test decb (bad) dec test decl fsin dec movsb fdivr dec mov aad dec lahf aam dec popf sar dec fwait iret decb lret incl (bad) cmpb daa insb mov and lcall pusha cmpsl (bad) sbb lcall pop fwait pushl jno repz sbb push sbb add add add aas pop push sbb push sbb jo clc sbb lcall arpl ljmp test incl int3 (bad) push lahf sar push cmpsl fdivr pop stos (bad) push lods (bad) push lods fdivrp push scas (bad) push lods (bad) push lods (bad) push lods fdivrp dec stos fdivr dec test decl fsin dec movsl fdivr push movsb (bad) call aam dec lcall cmp mov jmp push stos (bad) sbb sbb pushl jno icebp pop aaa push sbb aas pop add sbb jb negl test and (bad) es mov das jp (bad) cmp sar push movsb (bad) (bad) pop lods fdivr pop mov (bad) pop mov (bad) pop mov (bad) push mov (bad) push mov (bad) push mov (bad) push mov (bad) pusha mov (bad) push lods fdivrp push stos fdivr push stos (bad) push test (bad) decb sar inc xchg into (bad) cmp (bad) (bad) xor (bad) sub (bad) and mov and sbb test sbb (bad) xor test push sub add jae negl test jmp outsl mov (bad) cmp pushf sar push test lcall (bad) pusha mov (bad) pop mov lcall in pop mov fdivr dec jp incl mov sahf stos mov imul (bad) push stos fsin push movsb aad dec fwait sar ds lret pushl ret (bad) sub jmp addr16 sbb stos lcall mov out sub add je negl addr16 sub pushl add decl aad pop lods fdivr pusha mov jmp jecxz bound out pop mov (bad) ds popa lcall pop pushl ljmp mov mov pop scas (bad) push test sar inc xchg int xor jl jmp jae jmp push (bad) sbb pop mov out sub add je negl imul aas xchg iret decl (bad) (bad) pop scas (bad) bound in gs out pop xchg ljmp imul gs (bad) (bad) mov mov addl (bad) push lods fcos dec mov iret pushl mov (bad) sub jne jmp insb mov push fs lcall scas out sub add je negl imul xor sar dec cmpsb fdivr pop mov (bad) gs in outsb (bad) call (bad) jnp xchg (bad) mov mov scas scas scas (bad) jns jns pop pop pop (bad) mov mov mov mov ret ret ret (bad) imul (bad) pop mov decb (bad) incb sar cmp (bad) (bad) sub (bad) and (bad) push data16 sbb movsb (bad) ss out sub add je negl insl mov sub pushl enter sar push test (bad) push ret out js ljmp mov dec lret (bad) incl sub call rcl push lock cmc cmc cmc decl mov (bad) push lods fcos inc mov int xor mov (bad) pop push movsl pushl js out sub add jne negl gs (bad) and (bad) sub (bad) xor popf sar push lods (bad) bound in je call (bad) xchg xlat out inc aad (bad) fcmovnu (bad) nop nop nop (bad) xor xor add add pop pop pop (bad) sahf sahf sahf dec lret lret incb (bad) in bound (bad) dec movsl aad cmp mov (bad) sub (bad) and mov (bad) sbb jns out sub add jbe negl scas jmp mov pushl (bad) lret incb aam push mov (bad) mov jno out ja jmp decl sar xchg (bad) (bad) fsin mov insb insb ljmp imul outsl jae jb fcos jno in mov pop mov decl xlat incl sar xor (bad) (bad) jmp ja (bad) and lcall jns out sub xchg ja negl push mov (bad) cmp aad pop mov (bad) imul (bad) jl ljmp aam decl cltd test mov stc stc (bad) ljmp incl push (bad) pusha mov call (bad) imul jmp (bad) push scas fcos inc mov int das xchg ljmp jp (bad) and lcall jp out sub xchg ja negl imul (bad) cmp into decb xlat (bad) pop mov (bad) outsl ret in jp jmp incb aad decb fnop (bad) xchg (bad) xlat (bad) mov mov (bad) imul incb shr (bad) js out jno in fs fdivr dec movsl aad cmp mov (bad) sub (bad) and (bad) push fs out sub xchg js mull imul xor sar push stos fdivr bound out or incl (bad) out decl fnop (bad) xchg fdiv lcall loopne (bad) cltd fdivp decl fldz incb aam (bad) jg jmp ljmp loop pop mov decl incb sar ss ljmp je lcall data16 (bad) cmp out sub xchg jns mull insl mov sub pushl mov incl sar push scas (bad) mov ja out test jmp mov in (bad) xchg (bad) lcall fcomip (bad) popf loopne lcall loope (bad) lcall call fucomi decl jmp jl call jmp (bad) push scas fsin inc lahf sar cmp (bad) jbe jmp push mov sub jp mull outsb mov sub (bad) ss incb sar push mov (bad) imul in (bad) xchg fsubr (bad) sahf fdivp (bad) cmpsb loope (bad) lods in (bad) lods in (bad) test in (bad) mov jecxz (bad) popf loope (bad) lcall decb shr (bad) jns out imul (bad) pop mov decb (bad) cmp into (bad) xor mov (bad) cmp out sub jnp mull mov sub (bad) lret decl aam pop mov pushl jecxz test jmp jmp jecxz (bad) mov in idiv ret jmp (bad) mov call cmc ljmp repz mov fcomip lcall xlat jmp xchg jmp ljmp loopne push stos fdivr inc cltd sar xor jnp jmp imul xor add jg divl xchg int lods fdivr jge loope xchg shr ljmp out dec in idiv fdiv stc (bad) loop sti (bad) in clc cld (bad) stc cld (bad) (bad) out stc std jmp idiv (bad) (bad) cli (bad) (bad) repnz call lock dec out clc dec out idiv (bad) inc jmp repz hlt jmp shl arpl sar cmp jno (bad) cmp add add xchg add hlt incb xlat icebp decb (bad) (bad) lods loope (bad) mov hlt (bad) mov hlt (bad) mov idiv scas in (bad) mov idiv shr (bad) scas in (bad) pushf fcomip (bad) xchg fdiv (bad) xchg fdiv (bad) cwtl fdivp (bad) mov jecxz (bad) mov idiv mov jmp icebp inc call repz mov shr decb fpatan decb aad fild add add jmp call jmp call mov push mov decb mov call (bad) lock int (bad) jo in jmp in lcall jmp pusha ret jmp addr16 in pushl in incb aad jmp fdiv call mov incl mov jmp mov (bad) pop mov ljmp add add rorb inc cmpsb fsubp cmp cltd sar xor incb pusha (bad) cmp outsw ljmp decl ret call lcall jecxz dec stos loope inc movsl (bad) inc movsb fdivrp inc cmpsb (bad) dec test loop fs pushl out xchg ljmp jbe decl incl pop (bad) push fs decl ja push cmpsl fsin inc mov (bad) push lods (bad) add cmp sar sub inc pop (bad) mov (bad) pusha jle (bad) xor (bad) jl xlat (bad) jnp loop imul (bad) (bad) aaa nop aam xor sar xor sar cmp (bad) decb fsin pusha stos (bad) jae loope je int3 (bad) xor (bad) pop sbbb imul test incb aad das (bad) mov (bad) jbe incl pop decb mov decl ljmpw fdivr js fdivrp outsl lods fdivr pop mov sar xor (bad) int3 (bad) sub lret ljmp (bad) int3 pushl (bad) sar push lcall jbe (bad) inc push (bad) incl movsb decb dec push decl (bad) (bad) cmp mov add add add jge sub cmpsb xchg inc dec dec (bad) mov mov decl push mulb lahf jae (bad) movsl (bad) test inc xchg iret scas cmp lret test scas xor test dec xchg iret test mov into pushf inc dec push sti xchg lahf cmpsl incl stos mov aas inc inc lcall mov inc (bad) int3 sub add add js inc inc inc (bad) mov mov nop xchg xchg (bad) popf popf sahf decb dec call inc dec dec cmc mov nop xchg (bad) scas mov incb inc (bad) insl jb sub add add jae dec dec dec (bad) mov mov xchg xchg xchg (bad) mov dec dec call dec dec dec cmc cmpsb cmpsb cmpsb call mov incl inc ljmp outsl sub add add xor dec dec (bad) mov mov lcall call push call dec dec dec cmc test test lcall incl inc pushl jno je je dec dec dec (bad) mov popf popf (bad) movsb movsb movsb call push call dec dec dec cmc stos stos stos lcall mov dec dec dec pushl jno jne jne dec dec dec (bad) mov popf popf (bad) mov push push call dec dec dec cmc test pushf pushf (bad) mov dec dec (bad) jno jno je je dec dec dec (bad) mov fwait fwait (bad) popf popf popf decl dec call dec dec dec cmc mov fwait fwait (bad) mov dec dec pushl jb test push inc mov xchg xchg xchg (bad) nop nop nop decl dec icebp dec dec dec add inc inc stc xchg xchg xchg lcall enter push push incl add add insl insl (bad) fcmovu (bad) xchg xchg xchg incb inc inc (bad) push push push sbb add add push daa dec dec dec decb cmpsb cmpsb (bad) (bad) fdivrp jae jae mov add add addr16 in in sbb icebp icebp ljmp jo call incl inc push add add dec jbe pop pop (bad) jle jle (bad) (bad) (bad) (bad) cmc cmc cmc ljmp repz jg addr16 std std or rol repnz leave leave (bad) pop pop pop jmp incl inc ficom push or add add dec or push insb insb (bad) fcomp fdivr out out out inc vpsrlq (bad) decb jg jg cld cld cld add (bad) (bad) (bad) (bad) in in jle jle dec dec dec (bad) push push push incb dec lahf dec dec push add add add insl add push stos push pop pop decb dec incb call sar aam mov sti sti push mov stos xor outsb std (bad) (bad) (bad) inc mov call push (bad) push push push decl mov pop fs adc lods dec push pop decb dec decl dec dec enter mov insl cld cmpsb cmpsb cmpsb sub add add jne scas jl jl aam aam mov dec dec decb dec call decl pusha out gs addr16 xor orl jb adc jnp push arpl dec pop push incl dec decb dec pushl mov (bad) pop pop pop mov mov mov jecxz jecxz cwtl cwtl cwtl lock (bad) loop loop rol (bad) pop pop pop (bad) xor decb push (bad) push pop push decb jns dec data16 dec arpl push pop push decb dec (bad) outsb outsb outsb inc rol (bad) (bad) (bad) (bad) mov mov jle jle pop pop pop sbb add add (bad) decl (bad) fistp vpaddb lret lret inc mov aam aam lcall incb dec incl dec (bad) ds dec (bad) aaa ds pushl inc dec (bad) jbe js mov loopne inc ret mov scas scas stc xchg add pop pop pop add (bad) incl (bad) (bad) decb xlat xlat arpl cltd cltd (bad) mov mov aad aad loope jecxz (bad) fdivrp rcl (bad) (bad) int inc enter int call (bad) (bad) call div (bad) (bad) fdivr movsl movsl movsl jmp xchg xchg push xchg xchg xchg add cli cli add sahf sahf sahf ds popa popa fstl push decb mov (bad) div idiv hlt cmc cmc (bad) hlt hlt cmc (bad) repz loop loop into into into (bad) stos stos stos (bad) jle jle (bad) (bad) (bad) fld ret ret cmp add add dec add add add inc or dec js pop pop in mov ljmp lods lods (bad) movsl movsl movsl lcall popf popf decb jne jecxz scas scas jp cmc cmc adc sti sti add add add add cltd cltd cltd xchg mov ret scas ret pushf lods jge jge jns jns loope loope (bad) (bad) incb sti sti sti add add add addb add add clc add add pop add lock add sldt lock add sldt lock add sldt clc add add pop add clc add add pop add cld add add aas add incb add add add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add addb add add incl add inc add add add jmp jg pop incl add loopne incb incl add loopne incb incl add loopne incb incl add loopne incb incl add loopne incb incl add loopne cld pop incl add loopne cld pop incl add sarb add add inc pop clc add add jmp (bad) pop incl add loopne loopne incl add lock pop incl add lock pop incl add lock aas incl add lock jg add (bad) clc add (bad) incl add incb add jmp add incl add add add add add add add and add add adcb add dec push sub cwtl add (bad) scas add cmp rorl mov fisttp inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fist inc cmpsb fisttp mov rorl cmp mov add xor movsl ficom aas mov aam cmp ret mov mov xchg aaa mov aaa mov mov aaa mov mov aaa lea xchg cltd iret jge sahf (bad) jo mov fnsave movsl ficom mov sbb adc cmp pop dec js sbb clc pop pop xchg std sub (bad) aaa jge incb (bad) xchg lret incl int inc xchg int inc xchg int3 (bad) aas xchg lret (bad) cmp (bad) (bad) (bad) aas mov incl ret test (bad) daa push lcall dec mov and lds cmp sbb sldt add sbb push sbb mov sbb jmp arpl (bad) cmp mov decl sar dec sahf sar inc popf sar inc popf sar inc fwait sar inc cltd sar inc xchg into incl int3 decl leave incl ret pushl jge ljmp outsb mov and sbb push lcall cmp popa push (bad) add inc pop adc pop movsl jmp lods ljmp js incl (bad) decl sar push cmpsb xlat call (bad) dec test fdivr dec test decl fcos dec mov aam dec popf sar dec xchg lret (bad) cmp jmp lods lcall pop popf ljmp pop mov adc cmp adc inc add arpl jmp mov xor incl call lcall fdivrp pop mov call loope push mov call loope push mov call fdivr push test call (bad) decl (bad) ds enter mov lcall bound sub mov add add jns cmpsl push bound xor (bad) incl sar pop lods fdivr pusha mov jmp in pop mov cmpsb incl lret call stos sar push lods (bad) push mov int xor mov lcall pop mov lahf xor cmpsl push arpl pushl lahf aam pop mov jmp jmp out pop mov jp jle jle scas scas scas inc (bad) je xchg lcall (bad) push test sar xor (bad) ljmp ja jmp push lcall cmpsb pushl jns lahf xor cmpsl push gs ljmp jne pushl mov decl jmp loopne push in je jmp pushl (bad) (bad) (bad) jp jp ret pushl mov (bad) inc lahf sar ss lret jnp jmp insl mov sbb cmpsl (bad) cmp lahf xor cmpsl pop addr16 sub (bad) cmp fdivr fs out or (bad) mov aam jmp jmp and scas scas scas inc (bad) leave pushl loop pop mov decl (bad) cmp ret jno lcall jnp lahf xor and ljmp jnp (bad) cmp ljmp jecxz ja jmp incl mov (bad) mov pusha pusha jmp lcall mov fcos aas lcall and fs (bad) cmp xor mov ljmp ret cltd sar pop mov pushl in jg jmp test in decl (bad) (bad) fchs jmp lcall js out insl (bad) mov incl pushl lret jp lcall lods (bad) cmp lahf xor mov ljmp add inc lahf sar pop mov pushl out xchg in decl fcomi lcall loopne call fucomi decl shr pushl jmp (bad) dec cmpsl (bad) (bad) cmp ret imul add jno pushl xchg decl aam fs call lcall repz jecxz jmp loope call fsubr incl ret push scas (bad) aas cwtl sar xor mov cmp lahf aaa cmpl call fdivr ja in xchg aad ljmp call clc dec out clc inc in idiv mov out ljmp fsubrp call shr ljmp (bad) inc lahf sar xor (bad) jmp xorb add add (bad) (bad) int3 jmp xchg aad pushl call clc inc in stc call lock inc jmp pushl in pushl jmp clc inc ljmp mov repnz enter mov fstps pop scas iret aaa push mov (bad) push mov lcall stos ljmp decl lret test out pushl jmp jmp lcall call (bad) jg in call into in xchg mov jo mov call std popa mov xor add add xchg aam xor pushl pusha jbe aas push arpl jno mov lcall (bad) inc cltd fdivr aaa xchg (bad) (bad) cmp fcos pop test pushl loop imul incl js cmp (bad) ret cltd (bad) test sub sub ja out pop outsb jp jl cmpsl ljmp mov xchg mov jmp fdivr inc (bad) sar das (bad) lret ljmp jle pushl (bad) lret incl sar pop mov mov insl orb pop imul (bad) mov add js imul (bad) jns jl pusha je push inc outsb mov inc imul imul sub sbb ss push imul jg call addr16 sbb add add dec and outsl lcall jg lcall pop inc dec dec dec dec addl ljmp imul dec dec sbb add add dec and jb movsb movsb movsb incl pop pop inc dec dec dec dec xchg movsb ljmp insl decl dec sbb add add dec and jb movsl movsl movsl incl pop pop inc dec dec dec dec test movsl ljmp outsb decl dec sbb add add push and js movsb movsb movsb pushl ja push push push dec dec dec dec push jge jge test jbe call push sbb add add sahf sahf pushl outsl outsl decl dec jae add add dec jnp jns inc rol mov rcl pop in in in or lret lret lock sar gs dec aad cmp add add add cmp push dec dec dec (bad) jo loope loope int int std std std or add add (bad) les mov mov (bad) fcos jbe jbe push push push decl dec xchg cmp add add add inc add pop lcall jp xlat xlat xlat (bad) mov leave leave add add add jns dec int3 int3 lcall pop call push decl pop mov dec push pop cmovb sqrtps dec push pop push call push inc (bad) insb insb insb cld jb jb lret lret lret add (bad) fdivr lret lret lret pushl jo inc inc inc decl pop decl insl decl push call pop incl mov mov mov js js mov sti sti adc ret ret mov cmpsb cmpsb dec enter lret stos scas mov lcall jmp fcmovu (bad) call stos stos jmp dec dec add add add enter data16 pop pop negb rcl jmp loope (bad) (bad) fdivr iret iret iret ljmp test mov add add cmp jbe jbe mov lods lods aam movsb movsb rorl xchg xchg jae call icebp add add add add pop loopne add loopne add loopne add loopne add lock psubb add clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop clc add pop cld add aas cld add aas incb add (bad) jg (bad) jg (bad) jg (bad) jg (bad) jg pop loopne incb sarb add incl add incl add incl pop ljmp add add add add add add add add add add add sub add mov cmp rcrb mov fistp inc cmpsb fbld inc cmpsb fbld cmpsb fbld inc cmpsb fbld inc cmpsb fbld inc cmpsb fistp ds aad cmp into pop cmp mov sub add add add outsl cwtl inc jp,pn mov xor cmp fstpt mov cmp mov loopne xorl xor aad jbe into sub ret lods lahf sub cltd ds add add cmp pop cmp and and (bad) je,pn incl ret decb decb sar inc fwait sar inc lcall inc xchg lret incb enter sar jne (bad) and (bad) sbb mov cli pop cmp pop cmp add add ds sbb test data16 pushl jl decl int push cmpsb xlat call (bad) push stos (bad) dec stos fdivr dec cmpsb (bad) dec mov sar inc xchg lret pushl mov sbb mov push push xor and lods sti and (bad) ss dec mov (bad) pop mov lcall loope pop pushf mov (bad) pop test (bad) push test sar cmp mov ljmp cmpsb notl add add imul cmp fsin bound out bound jg enter xchg mov (bad) (bad) push cmpsb (bad) (bad) cmp mov ljmp push testl add add insb mov es (bad) cmp (bad) imul mov fwait fwait fwait incl (bad) (bad) pushl leave call (bad) aas xchg iret ljmp ret imul adc outsb mov daa jbe (bad) ds iret lcall fdivrp jb out mov in ljmp lea decb mov fdivrp inc mov (bad) (bad) and ljmp insl stos testl add add xor daa jo sti sub incb sar gs ljmp enter aam jmp mov call decl xlat (bad) ss lret (bad) es ljmp outsl lods testl add add xor sub sti sub movsb aad insl shl test in call (bad) lcall fdivp decl aad pushl in push mov (bad) cmp iret ljmp jl ljmp scas testl add add xor sub xor xlat pushl in xchg fsubr (bad) stos loop (bad) mov out jmp loop (bad) xchg fsubr incb mov sar das add testl add add cmp pusha stos (bad) divl loop nop shr pushl jmp stc call icebp cli (bad) mov out (bad) mov jmp repz mov (bad) out addr16 jmp (bad) repz add push mov xchg dec stos fdivrp dec jne jmp incb enter mov in push mov (bad) insb shr mov in decb adcl push mov lcall loop and sbb ja negb test push lahf (bad) pop jle (bad) jae (bad) dec fwait (bad) (bad) xor sar inc xchg sar bound xchg ljmp mov incb (bad) cmc sub sbb add add popa cmpl jnp call push lahf push jle push inc jns push ss pop xor sub push cmp push push data16 xchg cwtl popf (bad) jne jnp inc push aaa cmp cmp jg jg popf popf popf call push je add add inc jp lahf lahf (bad) jge jge cmp cmp cmp cmp (bad) (bad) (bad) jmp push push je add add dec jp mov cmp cmp adc ds xchg xchg decb dec jbe add add inc jl pushf pushf decb aas aas adc mov mov lea dec mov push push push cmpsb popf popf popf (bad) mov cmpsb cmpsb sldt add lods lods lods add rcl fsubl push push idivb add add dec cs push push clc lods lods lods (bad) rcl rcl mov mov test mov imul dec push push call cmp adc cmp adc pop dec push pop ljmp lods (bad) jbe jbe iret iret iret push mov ror int incl push pop decl popa incl pop call (bad) call rol cltd cltd cltd leave sub sub jge jge repnz mov cltd call aad (bad) loope in (bad) loope (bad) (bad) mov mov pop adc add add and add pop lea scas fsubl xchg pop loope loope loopne pop add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jle add jle add jle add jle add cmp add add add add add add incl incl sub add adc add and add add and add add inc add add sub add (bad) scas adc xchg (bad) cmp int cmp int cmp iret pop cmp into pop cmp int cmp lret inc cmp scas adc sub add add add add add sub push sbb pop fwait cld xor decb lret lcall inc xchg int3 incl (bad) (bad) cmp cmpsb (bad) sbb cld pop dec imul add add dec jae and cmp xlat call call fdivrp dec test call aad inc nop leave ljmp jo lcall jo sbb imul lcall fdivr jno (bad) pushl movsl enter sar sub bound dec sbb outsb mov inc cltd sar addr16 fcos sahf sahf sahf incl iret call fdivr xor mov pop inc fs push inc push decl aad je out xchg jmp decl mov fdivrp cmp mov and dec push dec imul lods fcos (bad) iret ljmp loope lcall fsubr pushl in inc mov mov dec sub movsb aad xchg out mov repz in clc inc jmp pushl in ljmp jecxz push sahf sar xor dec sbb sahf aad push je pushl mov jb out dec stos loopne dec lods loopne js out jae lods lcall decl fldl2t and or add add test (bad) mov push nop aam mov (bad) jb,pn mov jp mov nop (bad) jne mov cmp dec es insl insl mov addr16 xchg and add sub adc imul gs lea sub gs pop pop rcll adc add add add add add adc add popa aad (bad) (bad) stc je je movsl movsl movsl mov jge decl push xchg sub xor dec push pop xchg jns jp fwait fwait fwait mov add add enter (bad) (bad) in nop xchg xchg pushl xchg jb cmp mov mov cmp cmp add add push and push rol loop mov loope stos stos mov addb add add add add add add add add add add add add add add add pop add jecxz add jecxz add loope add lock lock clc pop add add add or add add add and mov add cmp addb add or add add add add and mov cmp inc inc add add and sub add add add add add and add add add add sbb add add add add adc add add add add inc add add adc add add add add add add add add loopne adc add jo add add add jo add add add adc add (bad) (bad) (bad) cmp add adc add add add (bad) (bad) decl adc add add add (bad) (bad) ljmp adc add add add (bad) (bad) call outsl adc add add (bad) (bad) (bad) push outsl adc add add (bad) (bad) (bad) call adc add jb gs xor cs insb add add add dec outsl popa fs imul add add inc gs jb arpl fs jae add add add push imul insb insb outsl arpl add add jb jne insb inc jb add add gs xor fs insb add add inc gs gs outsl popa jb push jns add add jbe jo xor cs insb add add add push gs jne jb push popa insb jne inc js add outsl insb gs jne xor cs insb add add add push jns inc jb gs je imul add xor cs insb add add add inc jb popa je dec outsb jae popa outsb arpl add gs insb xor cs insb add add inc gs jo arpl insb inc outsl insb fs outsl arpl imul xchg aad sahf mov data16 xchg shll push out es and xchg das or jns (bad) leave add add loope add pusha pusha adc sbb dec add push mov (bad) jecxz add push cmp (bad) shl mov inc add mov loopne in sub or add sbb insb or sbb mov adc je sbb or sti adc or rep pop dec rorl jno orb add out or add add xor int3 enter mov rcrb add rcrb xor push sbb leavew and jle stos and add lret lea adc add push sbb repz pop push mov daa fsub jmp imul cmp sub xchg add sub shr add cmp lods inc mov and ret lret insl or out inc xor sbb or mov imul std pop lea movb sub sbb sahf push lcall mov and add scas cmpsb movl lods (bad) and insb mov mov sub push clc sahf adc jae stos (bad) mov inc rorb je imul sbb movsb icebp mov mov xchg pop add inc mov xchg push inc cmp mov ss (bad) mov mov cmp iret mov push xor add xchg cmp push pushf and cmpsb and and jl jmp mov dec lret or adc cmp in add (bad) cmpsb sbb fucomip and adc cmp push jb stc roll inc push jmp sub nop repz nop rol lret mov dec xor ret lods out shrb shr pop sarl bnd (bad) xchg adc mov cs popf xchg sub lods dec or shlb int3 setl cltd mov sbb adc lea xorl add jmp xchg dec sub dec repnz jns lret and or sub xor or cmp xchg push push mov jne push lea add add pushf xchg sub cmpsl jmp xchg shl sbb in or sbb test and mov dec adc hlt adc add test aad xchg inc out popf ret or dec enter sbb adc cmp mov outsl push and pop and in cmc sar std lret sub roll xor inc adc xor sbb inc and and sub push repz inc push jns mov mov movsb mov adc lret mov sub ret inc and loope in or daa adc lods adc push inc mov mov xchg cli and dec mov or (bad) loopne lea or in scas cld dec add inc and adc adc add enter jns xchg mov xor fs pushf popa iret mov adc pop lds mov orl cltd jns push pop aaa cs fisttpll jmp outsb jae pop lea mov jne mov sub add fldl and pop jns adc jl cmc adc sahf lret add lea movsb push insl (bad) jae mov xlat and loope in int3 jne ljmp jbe ficoml jle aas sar xchg in push sti int sub push mov jge sarl in dec inc leave and mov jmp xchg sbb cwtl add les cs call jb lret ret (bad) (bad) xchg dec leave in and xor adc pop loopne cmp xchg test fs sbbl xor sub movsl clc jmp dec sbb add jmp or std add inc in dec add inc lret test pop cli (bad) call xchg rcrl lahf jmp and adc in dec adc pop push scas js rolb inc add mov stc mov sub cmp xor pop lret rcrb in sbb add mov add mov add sbb push call mov les push push jb cld call push ficoml mov lahf xor sub fimull ds push lahf rcrl (bad) sahf inc cltd adc ret add mov roll sub mov push or adc adc or or inc xor jo and mov and dec inc loop adc add or clc shlb inc orl xor cmp scas add xor sub mov into sbb add lret add nop add xchg mov push call in xor lea inc cld add add jbe fdivp push jle dec jbe pop repnz push stos add nop cmpl je push jae inc test (bad) push mov mov test mov add xchg outsl add push cltd aas cwtl ljmp sbb call add mov mov in xchg stos xchg aaa xchg mov call mov jae insb xchg shrl mov or sti push nop add lcall add push inc and shrb mov lea mov test push push and sbb mov aas das mov sbb add inc sub aas rolb cmpsb xchg orl lcall or aaa ficom inc or bound icebp add movb jmp mov or or pop (bad) push push icebp sub inc bswap cmpsb cmp add add pop pop pop push pop ret push shr or or adc push add lret push call inc mov jle cmp sub jg pop add out mov jne inc xor stos pop orl add in (bad) lods push xor scas leave inc push sbbl mov sarl dec enter lods mov rorl or je push inc call sbb xchg leave add je les dec (bad) xor push jmp cmp mov clc movzwl test jge push and test insb (bad) popl adc cmp iret jge dec push inc cmpb sub lahf (bad) je dec mov jne (bad) sub ret shr or rclb les mov out or enter mov outsb cmp stos xor and push cltd pop test js loopne pop push mov adc add in add jbe or call mov push aam je sub adc std sti ljmp inc mov je loopne popa pop jge sub daa clc rcll add movsl mov ds call add xor movsb push fcmovbe xchg stos (bad) lret pop mov pusha cmp cmp ret add and push mov push lock push push lea (bad) inc mov mov push sub adc mov pop cltd and add pusha lret shlb push hlt push leave dec or cmp test mov (bad) push mov mov enter leave mov inc ljmp (bad) std mov popa jmp pop xor cmp jne adc jmp fidivrl inc loopne add push adc loopne sub pop jns fcmove or xchg sub roll scas in fwait cmp es (bad) xchg cmp mov or or mov or xor jle adc push push adc call sbb mov and aad and mov adc mov jmp int bound dec mov ss test fsubr inc mov pop push adc shlb (bad) or test je push jg test and jmp mov (bad) cs (bad) sahf data16 push inc gs cmp adc push xchg lods jmp lods popf sbb stos pusha (bad) loopne xor ss mov call cmp inc push inc jmp repz pop cld cmp or sbb inc inc mov add (bad) daa hlt iret sub jmp push lea sahf jne iret or cs testb mov inc push xchg cmp lcall inc cwtl sub scas jno or push lea jmp sti xor pop pop cmpsb shrl cmp pop subl bound adc popa je pop outsl outsb and push fsubr adc sti and add test fs lea repz outsb mov ljmp (bad) imul dec movl sub popa insb and push pushf sub xor cmp (bad) popa jnp push inc outsl js emms jnp sbb data16 mov aas inc js je push nop outsb dec or dec popa outsb fs out pop dec jo adc je stos mov insb sbb jl imul mov hlt arpl jmp pop mov bound xchg outsb dec jp xchg push pop mov or and dec mov imul bound adc pusha mov mov cld mov xor movsb mov call jae xor call jae xor call jae mov inc mov call adc jae jne stos jmp call sub jne call jmp lods shr je adc jmp xchg dec shl lods call cmp jae cmp jae cmp ja inc inc xchg mov mov push mov sub rep pop jmp add jne mov inc adc ret xor inc call adc call jb ret sub mov popa ret add add add loopne add mov adc add add add jo adc add lea mov mov mov movb add sub mov xor ret mov popl add push push push push push push lea mov push mov push push pushl push mov add mov call pop mov push push mov mov add mov mov mov add mov mov add mov add lea push push push call pop pop add mov push mov mov add sub mov mov mov call mov mov mov pop jmp add push push push call mov pop pop pop pop pop pop jmp add add insb jge add add add push 