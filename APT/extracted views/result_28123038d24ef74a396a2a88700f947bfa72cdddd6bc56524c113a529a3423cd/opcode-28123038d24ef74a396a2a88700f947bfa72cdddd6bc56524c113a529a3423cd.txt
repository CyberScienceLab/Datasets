pop mov lea jns add push xchg jno push dec rolb inc mov or sti xchg pop add and test les jnp mov (bad) popf outsb add cmp and lods xchg add jno cmp and jne xor pop sub dec dec ja push jne cmpsb mov aad or loop es mov or xchg and sbb leave test push jbe mov fisubrl stc lret cmpsl iret jb mov int mov test mov imul pop sbb pop xor imul adc repnz sub loopne mov into push out (bad) xor or push addr16 pop test cld fld jbe cmp lds mov mov xor inc bsf bt mov cmp and bt call lea movsbl lea pushf call pushf pusha pushf lea jb push shld rol mov add btc mov test clc shl push movb pushf pusha lea call adc mov stc bt bt cmpb call mov pushf ror bt mov clc test bt repnz push jmp bsr pushf bsf mov call jmp add fmuls add add out fmuls add icebp or or add neg or and add loopne add fmuls add sbb add loopne add (bad) add or and add push (bad) add or sub add push (bad) add or xor add push (bad) add add (bad) add add add jmp pusha pusha push lea jb jmp mov pushl popl pushf push pusha push pushl ret lea jae mov lea call adc call stc add call not pushl call add pushf pushf call add inc ds movsl movsl popa xor inc dec inc fdivs mov mov icebp mov cmp (bad) fnstenv imul loop out and adc movsb pop cmp mov mov rcr jmp sbb je loope sbb add inc lods mov pop hlt jae xor rol push cmpsb ljmp mov add cmp (bad) repnz mov lock push mov mov jo pop mov mov lcall push cld push pushf jbe and mov out dec mov push mov dec sti dec hlt adc jne (bad) aaa loop mov jo call call push lea call pusha pushf movb lea jb (bad) hlt shl movzbl lea shr mov movsbw btr call lea jb adc push movzbw shl mov shld shl bts setle mov cmc shr lea jae push adc pushf test cmc sub pushf bt jmp not pusha mov lahf push pushf bswap lea pusha lea call pusha pop movzbw mov mov push movl push xchg pusha lea jae not push movb call adc pushf movb jmp add add mov and rol call clc stc cmp call pushf jmp lea xchg rolb inc add jle dec je outsl adc xchg ret push and ret scas insb mov push mov jns lods jle data16 push repz clc xchg shl mov in mov mov pusha imul fwait sarb in test pop rcrl jnp je cmp ja xor pop push lcall or adc mov imul jnp pop fidivl roll mov popa cmp ret mov aam mov sub ret daa pop sahf adc (bad) xor rcrb popf xor mov rclb fcmovu pop cmpsl mov pop aaa in in loop xchg fsub in and sbb enter and mov or cld push sahf add xor mov jl sbb testl sub loopne mov inc xchg into std push int3 jns mov stc pusha xor add or js lods push xchg inc xchg jno fs mov push push adc jnp mov xor xor mov jmp (bad) je loopne fwait mov sbb mov push cmc xchg movsl push lods cmpsb push mov sbb stc pop cmp clc mov mov cmp clc nop (bad) out aas adc mov lea mov or xor dec pusha hlt pop cmpsb jge pop jp or jne adc dec cs mov stos fimul mov test lahf cmp cmp sarl xchg add add or jge ljmp movsb les dec ret pusha lds inc (bad) insl pop jmp push scas jne xchg push fnsave out and dec ret add imul cwtl jno mov add out out scas xor rcrb sahf sub aad cmp sub jae mov ffree add pop add jecxz ljmp call cmpsl ret jge ljmp fadds and (bad) movsl fbld insl xchg cmc push out cwtl add ds stos aad inc xchg inc dec aas mov mov push mov cmp add bt mov clc call push pushf lea jbe btr sub pusha mov lea mov sub jmp cs adc roll inc aad mov pusha insb mov inc inc push mov adcb mov scas jno (bad) dec fwait andl xor cmpl dec fldenv pusha jl and lds adc out sub jb push andb cmp movsb in push dec jbe cmp push mov rcr push mov jp notb add nop pop xchg dec cmp mov aam ret sub div and adc lcall ficompl or mov js pushf test jmp dec mov call fsubl rolb faddl inc adc in adc dec (bad) pxor xor sbb les loopne push rcr int add inc or push jp arpl sub loopne aaa add stc mov or fnstcw mov call popf push sbb adc dec pop sbb push jmp jne push mov mov out cmp iret rcr (bad) sub fldcw adc adc push cmpsl in dec jp pop pop movsb cld add jecxz test inc cmp xor in xchg jp imul add loope jnp inc test dec xor xchg pop add loop mov mov jbe push add test les jbe xor mov insb xchg jg test mov lock imul lock enter mov xor fildll lock push push out repnz (bad) sub inc mov dec sti dec or pop insl inc fidiv xlat and popf dec clc (bad) (bad) stc rcrl mov pop mov or sbb cs fnstcw sub push dec sub jecxz jb xchg aad inc mov pushf adc xchg mov push out aas push mov shll sbb adc int sti add inc and jg rep jmp push mov call sub push cmp jmp pusha shl pushl pushf pushf stc add call lea jb shl mov clc movsbw shld bswap mov bt cmc shl pusha mov movb jmp clc cmp pushf call push pusha call lea pushf movb mov call int add rcl (bad) into sub mov cs mov and in hlt xor into decb out pop push jecxz mov sbb ja adc inc cmc inc popa shl arpl ljmp add push pusha hlt scas pop cmpsl pushl push test arpl sub and inc dec ret sbb bound or (bad) cld mov push mov pop stc das mov fisubrl in data16 aad xchg mov sub test pop ds repnz fidivl hlt xor int mov loop or cmp ficompl popa sbb add loopne neg push xor cmc jmp adc ficompl push inc add xchg test pusha mov cwtl bound sbb mov sahf mov movl cld lock adc je dec mov pushf push pop xlat sahf adc inc int3 dec adc out stos fmull into scas xlat cmp xchg add addl orl xchg push cmp sbb push inc mov pushf imul sahf sub cmp and (bad) xor (bad) xchg (bad) cs aaa ret or mov leave lret jmp sahf xchg popf fistl push insb nop xor xchg cmp fnop mov sub loop add add add sbb add add add add add add mov or add add call add add or add add push xlat or add add pop sbb add test or std push add call or add pop add scas or add fdivl and rcl repnz or (bad) push lds add add mov or test std add inc add movsb sub mov (bad) out adc loop push mov mov push xchg fisttpll xor loopne shll scas mov mov xchg (bad) sub push stos push mov das clc bound adc push outsb pop rcl inc aaa and push in pop inc jmp pop dec lahf nop (bad) mov or cli stc js adc out mov je inc ljmp mov mov movsb sbb and aam iret mov xchg iret aad sub add and test stos inc out mov das inc subl fdivl inc push rclb pop aaa (bad) inc nop adcl roll js mov mov push pushf je imul mov rol xchg outsb xor leave sub test cmpsb test shl pop mov xor mov outsb mov imul mov pop in jp ror aas adc push jp pusha cli ffree cmp sub jp sarb pop push sub mov call xlat test mov jns pop dec lret or jae fcompl enter dec and (bad) iret sub loope out leave push mov sbb inc gs (bad) adc fwait hlt push ljmp lcall or dec sub fisubr mov dec (bad) or mov lret jno xor xor jle icebp and xorl adc rorb mov js pushf or sbb dec psrad xchg mov mov jmp out insl ret jecxz gs out je ret cmp mov int3 dec jne dec lods and (bad) iret push int orb mov and out cmp or pop add mov jae pop (bad) jg and mov test jnp inc cli leave clc push insl mov stos and cli cmp and idiv inc jg and scas add aas adc bound sbb stc dec orl xor add cmpsl cmc cmc jge jns xlat cmp add scas and push jecxz in add dec aad cltd in mov jae pop jmp les leave in cmp pusha loop fmul addr16 std mov fdivrl icebp and push stc inc and sbb push scas insl ds jge in jns jmp lcall cli int mov inc clc pop pop pop aam cmp add or into xlat shll xor inc mov lret xchg shll inc sub das test mov rcr push mov or mov scas pop ljmp sub cmpsl ficompl int3 fwait in leave clc shrb call mov loope jge xor add push xchg dec mov add mov add in sbb mov cmc mov mov add sub xor stc pop push mov jo insb pop popa sub fisubr pop sbb inc addb inc sbb lret or test add je sbb fwait sbb in cmp mov ljmp push ss sbb fs lahf mov mov clc mov adc fwait stos popf fidivl divl mov cwtl scas sub mov inc inc xlat test or mov aam sub repz push mov xchg movsl fist (bad) pop daa jns jp inc or pop in cmpl in (bad) gs mov jle mov push xor leave jns lcall mov adc dec in inc push inc push hlt jmp fs mov inc mov sub lret loop mov pushf repz pop es mov popf lock mov mov add out adc jnp ret push stc enter cmp cmp es jg mov mov mov mov add sahf push into outsl lret mov push dec insb jb call sub xor js out sub or push xor push gs push lea test cld cmpsl adc add mov push rcrl les mov cmp or mov cmp mov nop popl inc dec cwtl inc or jp (bad) xor jmp mov jp shr xchg js xchg neg xchg sbb fs es mov and jp rcll (bad) (bad) xchg or bound jb into divl insl dec sub cli arpl pop adc or jnp push ds cmpsl lret shrl fimull hlt out (bad) lock and cmp jmp mov cmpsb mov lret inc cs sbb sbb mov pop ljmp sub rcrb fwait pop pop mov or lds clc and ret push xchg daa popf data16 lods pop daa fwait (bad) es outsl mov adc pop mov xchg movsb (bad) or sbb dec inc in add lahf adc pop xor jb rorl fldt subl sub fsub pop hlt inc jae mov xchg jecxz or sarb int fwait ret or ret (bad) aaa stos sub aas or adc inc push (bad) jo shl aad popa inc mov mov push sbb pusha aas test inc out nop fisubr push sbb jbe bound and lret push xchg cmp out jle outsl mov sbb pop sbb sbb mov arpl into sub mov ds mov adc fs iret sbb out cmp outsb call dec fwait add flds hlt (bad) lods nop scas cmp icebp das into pop xor push pop loop sub fadds test and xlat das ja xchg fcompl and subl jle and fwait dec ja adc fstps mov mov cli cwtl mov push xchg adcl flds data16 push ja arpl fldenv mov mov adc xchg adcl hlt dec mov test add scas (bad) cmc int mov lods sbb (bad) adc (bad) jnp fnsave mov xchg mov aaa mov test xor mov push sbb xchg into adc stc jle (bad) movsb mov aam stc adc mov sti cmpsb mov cmc (bad) shrb jnp jmp lret mov aad das push push jno cltd aas je (bad) sbb inc mov into and divb xchg and mov popfw (bad) push movsl gs stos das in xor enter pushf inc test repz sbb push jle add imul mov add and sbb adc or mov jb or xor cli xor nop add inc (bad) mov test call dec mov or sbb and or sbbb sbb aas and fistl sbb push movsl fisubr add jae adc ss rcll rcll push jns ljmp jbe mov xor mov push pop jge call shll sub push mov sbb aad lret or repnz (bad) xchg mov xchg add setle jmp sahf idivb ret cwtl pop pop pop pop out sbb or xchg pop mov mov xchg repnz xchg pop pop push arpl loopne xor (bad) incl imull das rcll ja adc mov pop sub addl test loopne add dec mov ss or imul out adc out mov inc xor jge xchg nop aas push sub sub jge pop rcrb push dec lea outsl xchg mov jne iret pop (bad) cmpsl xor test cmpsb xor dec icebp and jb daa in cwtl std lods dec jg (bad) jecxz bound sub xor aaa imul mov hlt inc jmp dec inc add lds (bad) push dec icebp cwtl mov mov movsl push sbbl xchg pop inc mov sub add jl enter in sub in cmp xchg xchg cmpb add inc mov cltd (bad) push inc jecxz ljmp pop int pop jg sbbl mov imul lock mov repnz into in push sub mov and int3 mov and outsb sbbl and add popf js or push hlt insb incl dec cmpsb lea scas fistp or sbbb fisubrl jge lds dec dec mov mov inc ds jo xor scas nop out pop (bad) xchg inc out mov mov dec sbb xchg inc jo cmp lock repnz (bad) jle add ret cld jle push cwtl repnz or ror sar mov mov push push add and bound push inc js leave rolb lods in lods jo mov mov (bad) mull bound cli out jo mov es and out jb stos mov insb scas cmp dec sub mov push (bad) inc daa repnz inc (bad) test adc lods std sub jmp in in pop cwtl cmp into pop cli out xor sbb xchg xor sub adc jns mov inc mov jbe dec bound scas push mov fstl jl js cmc sbb cmpsb push mov adc loop adc pop clc add pop dec or in xchg leave es mov lea cmp sbb and pop jo dec add repz out mov rorl imul ficom aad cld push jne mov push adc jecxz mov dec pop xor add push add clc ror inc cmpsl leave aad aas jb xor fadds std dec inc mov cmp jmp test add add mov (bad) bts mov (bad) cs adc stos pop loopne xchg adc inc jae repz sbb mov fsub int3 ds push push shll push loop cmpsl rorb pop shlb mov daa pop fidivr push scas mov in cmc sbb mov mov test loopne mov jp cmpsl lea fsubrl cmc les sbb pop push in daa xchg rclb aas lods push mov lahf or mov and and fadd fsub fisttpll fisubr ret dec adc pop into sbb or mov xor stc or js clc xchg jle ss sbb roll pop push out jecxz (bad) or cmpsl insb movsb inc sbb cmpsb push sub leave xor pusha int3 cmp imul xchg test push sub popa lods dec dec call dec ja jb iret fsin fimull sub daa test push test lahf push pop mov (bad) bound nop lods cmpsb sbb out (bad) adc adc lds pop hlt jg loope adc lea pop xor xchg or aaa add int and cmc dec xor scas ds mov out repz pop push xor mov cwtl (bad) jne scas cmc lea (bad) out mov pop or es test jne testb inc add mov fdiv pop sub lcall insb lock push mov inc test inc ret mov inc jnp xchg cmc clc scas dec or dec (bad) cld outsl and and loope fwait out inc pop mov in test inc or mov sub enter xor test nop popf or xor cmp xchg sub (bad) fisub popf mov jmp adc xchg imul sub imul xchg add pop mov cmp xchg sbb sub add mov lea movb movw jmp mov push inc movsb cmp cmpsl dec inc gs push inc mov push adc bound fs mov lods mov mov push nop (bad) xor mov jl push dec ret jmp dec mov pop pop or stos add repnz pop mov xchg stc repz test mov ret fsubl sar push xor add cltd clc sbb dec jbe cld mov test ret mov ficompl mov jge mov stos icebp dec xchg imul shld xor bsr lea cmc cmc adc btc push add push bt bswap shr clc mov pushf mov pusha stc clc jmp stos add jo push inc out movsl add insl or cmp adc mov or int3 xor rclb icebp adc push pop lock fsubrl loopne mov sbb mov jg and (bad) push ja shll push add cmp stos pusha ss in ss fs fs cmp or cmp scas mov cmp and adc (bad) mov sub xchg scas xor loopne mov bound xchg aad pop fnsave xchg dec into sbb jmp stos and pop std mov jo lret pop mov (bad) popf push xor dec mov rcrl add cs (bad) xor sbb sub (bad) (bad) iret mov jge int aad pop mov (bad) pop fs dec pusha popf out xchg std dec mov jns aas lret dec out in pop mov loopw xlat (bad) das loopne lods (bad) das mov dec pop inc xchg push stos sub push inc je repz fninit pop outsl lahf jnp mov dec lcall test jns fstl sahf pop push out cmpsb out pop adc fistl ss pop fwait arpl imul push add in jo scas aad shll not mov push loopne and push in cmp sub inc push xchg adc ljmp dec adc mov (bad) cld xchg xchg pop add (bad) lret or push cltd and xor out inc insl fnstenv xor push shr mov xor stc cmp lea pusha pushf push pushf lea ja clc pusha call les inc negl test rcl cmp pop mov inc sbbl mov or fstps dec mov dec and mov sbb pop shrb out adc rclb nop inc and push dec sarb mov mov mov xchg and xlat cltd xchg mov adc sub push pop pop or xchg insb xchg mov sub add nop push mov add sub test ret (bad) mov das insl call xlat test or int sbb test push mov mov pusha pushl pushf stos call cbtw addl in dec mov mov and xchg lret nop shrl pushf jl pop mov loop into adc dec loop cmp pusha stos lock je hlt add js dec bound rclb sbb movsb das add xor cmp cs mov testb mov rorl test add and push mov or sti dec mov es xchg cmp insl xlat sbb js mov sahf push rcll fs jne push pusha xchg mov pop mov cwtl movzbw movzbw mov lahf setae movb setne lea jmp lea je pusha pushf pusha lea jmp sub not lea pushf lea call pusha add add sub dec and daa pop movsbw pusha mov pushl test clc cmp mov call pusha stos pushf movb pushf lea jmp mov call add clc cmc cmp jmp aaa shll sub xor cwtl cmpsb insb arpl and (bad) dec in sbb imul cli xor mov inc dec lds ja stc sub pop pusha leave or lret dec xchg test loopne into jb push imul sbb or and mov lret out in xor xchg adc add adc inc out push and or mov (bad) loop mov lods and mov arpl dec imul mov mov out pop lods movsbl mov arpl cmp mov (bad) ss mov xlat aad adcl cmp nop inc push jbe and xchg rcll pushf outsb int3 dec pop pusha les (bad) xchg outsb push lods pop lret pop (bad) (bad) lahf mov faddl or aam cmp lds pop push sbb int cld mov fstpl push jmp mov (bad) jo dec sarl mov (bad) jle dec pop mov and pop sub xchg dec sbb and xchg sub push push cmp push sub stos mov les mov adc dec mov jg stos (bad) mov rol loopne test xchg add inc es or aam jnp jge pop inc imul jle xor test sahf mov sbb aam cmp (bad) xlat and test push in loop jo inc test (bad) movsb aam sarb xchg jl data16 or adc lock fmuls shl (bad) out mov inc jae roll sbb adc imul jne dec scas push cmp mov cmp shrl outsb cmpsb or dec xor dec cli mov sub lea iret push lahf add pop cmp sbb pop hlt setg andb ret in xchg jbe scas es lcall pop and les push push in lret add adc xor out dec fistpll sbb mov jnp mov xchg test jl pop in ret stc lock cwtl jg cli into out cmp das pop xor xlat xchg icebp pusha mov mov push dec cmc jne std imul fnsave jne xchg adc add pop push into adc jle lret sub pop test dec rcll (bad) jnp insl xchg add jns leave cmp xor pop lcall jo cmp mov jmp (bad) push mov mov fwait jecxz jne pop outsb sbb in jl pushf pop mov jb fs adc mov sti xchg jo ss sti loope loope and aaa fisttpl ds sub loopne add dec xor mov dec mov cli xchg push adc sbb fadd jge loopne bound (bad) fdivs xchg and pop bound das xchg sub lahf (bad) cmp jnp int inc sub rolb xor mov cmp sub jns xchg adc jp push push outsb dec stc cmpsl dec push or inc pop add in iret (bad) out daa lahf bound pusha mov jno and pop ret lock lea push test daa gs das jbe (bad) mov jae sbb xchg inc add inc push in out pop lahf xchg cmpsl pop cmp in test xchg popf mov mov loop arpl lahf arpl cmp jle push in jmp jg or js enter sub mov jmp sahf push mov dec jmp or fisubl not dec mov push (bad) sub push aad or (bad) xor fiadd lcall js fstp pop insb sbb jbe cmc cwtl (bad) sarb pop lret jb fisubl rol (bad) popf in and movb ret cmp aas cmp aas add pop jp test mov lcall lcall shrl popa jmp stos adc fs jp or push pop cmc pop fmulp push call and pop inc pop push push mov xor xchg dec bound add push pop insl xor pop cltd out push cmp add call out nop mov cs stos test int3 inc jbe nop orl push cmp xchg iret into insl rclb or (bad) jne lahf sbb dec fdivs xchg cmp hlt add ficoml int ret or dec mov mov faddp dec mov js xchg mov pop inc out (bad) pusha and push lock lods or add mov and jmp push in addb jg push and xor mov ljmp lods jne jne adc jb lret or shlb mov arpl lods pop orl fidiv fldenv pusha pop jp rcll repnz cmc faddl fiaddl jmp xchg shlb dec ror cmpsl (bad) loop das stc dec inc js push xor pop (bad) pop xchg in js enter xor aas lcall pop or icebp mov mov dec out jbe ds setb mov push pop cwtl lea movb jmp pusha pushf pushf mov jmp mov pop inc scas ljmp ja add (bad) fnsave movsl fwait mov dec dec pop and shrb setp jb fisub sbb xor cmp mov stos roll es insb imul xchg repz daa cwtl dec sub (bad) mov or mov xor jl mov dec push sub push sti xchg push addl push (bad) mov mov jnp outsl pop sbb jbe push add popf jae fisubrl insb adc pusha dec inc in jl test call pushf call call lea jne lea movzbw pusha movb cwtl lea mov not mov setle call jmp lea jb shl lahf bsf cwtl cmp movsbw sbb setle movzbw movzbw lea lea lahf lea mov call movl pushf pusha jmp push xchg mov push xchg call lea call jmp cld mov inc push jne push and xor dec fidiv mov cmp pusha scas scas inc popa inc jge (bad) mov dec into femms lods (bad) mov jno cmp xor dec inc out cwtl out popf pop adc test movsl xor arpl (bad) decl fdivrs popa (bad) ror sub je movsb mov or xchg rol call das or rcl jb iret dec arpl xchg push repnz int3 adcl in push repz imul lret and add popa aam xchg test dec or std adc popa fmull and jge push pop aad fimul call mov jmp xor bt pusha pushf test pushl jmp jmp shld bt mov pushf pusha cmpb movb jmp call xor pop mov pop inc (bad) mov and nop push xor sti jnp cmp aam (bad) clc aaa cmp sysret ja pushf jmp sarl dec push pop or cmp jno loope lods sbb inc sti or rcpps push enter aad push mov leave (bad) js cmp (bad) mov xchg lret insb in insl call pop mov sub rcll push sbb cli stc sbb mov sahf cmp addr16 cmc aas movsb (bad) lret cwtl outsl ds insl nop jno mov sbb jmp dec outsb lret stos cmp sbb les jno negb mov push sbb movl pusha call mov shl lea call pop ret add push push lea jmp dec mov sar rcl add push mov stc xor cmc cmp pushf repnz mov lea jne bt bsf mov call push push push call pushf pusha mov mov push push stos pushf pushf mov pushf lea jmp call push bt test movb pushf lea je clc add pushf cmp clc pushf cmp pusha movb lea jb jmp xchg pop xor sysret inc mov cmp aad gs pop ja cmpsb lcall ret jecxz out ficompl test xchg jne aaa inc mov dec jnp lret cmp xor popf fldt xchg mov inc inc xchg lods sti std pop rolb ror pop push cmc push cli push fldenv jae call movb cwtl movsbl push jmp mov movl pusha mov push pushl pushl ret icebp cmc cli jp pop inc in ja pop xlat out in xor cmp pop iret ja jns in sub and les nop jno aam jb xor mov adc jmp das pop cmp movsb adc int3 (bad) sbb mov les pop and in loop pop jae jnp loop cld cmp lock in in xor adc inc push xchg dec lea hlt sbb cmp dec and orb jne mov movsl fldenv jg inc movsb pop cmp cwtl lahf jle dec js adc push or popf (bad) sbb and xor fisubr cmc or pushl jmp mov lea jae stc pushf call movb lea ja ja setne rcr sub and add inc rcl rol jmp (bad) inc pop aaa fisttpl repz pop adc repz arpl jbe cmpsb pop cmp pop jmp add and add jns rclb (bad) inc imul mov sbb fisub cmp and cmpl dec ds mov pop xchg mov xchg std mov xorl add mov xor cmpsb or mov push std scas movsb mov lods add adc call repz lock push sbb dec add mov pop or inc dec nop hlt sub cld add scas (bad) dec fwait xchg cmp popa mov pop shr xchg dec add pop push mov decb sub pop test icebp mov out (bad) lret jecxz shrl mov nop sub pusha mov outsl xor cmp aad movl and dec les sub in les mov loop push fidiv add xlat mov add inc (bad) in push aam fnsave dec mov xor subb inc push lods or jne insl adc ss dec daa idivl call shl cmp push clc add push sub pushf push push lea jne (bad) repnz sub inc mov lea mov rcr cmc sub movsbl mov shrd (bad) icebp clc mov stc mov sbb test mov cmc push clc call push movb lea jb btc movzbl rol clc shr rol not jmp mov pushl push pushf stos pusha movb lea jmp bt sub bswap cmc test neg lea cmc sub cmc pushl popl jmp pushf jp push or inc mov push and scas sub fadd ljmp daa outsl pop lods popa rorl push icebp cmp scas jmp bound sbb adcl loopne,pt fwait push pop xor pop sahf sbb loopne dec jg add inc adc out jne int je mov call push jbe sub (bad) incl xor mov enter jmp add rcrl sbb push clc outsl jp ror cltd dec je push jmp sbb cmp push cmp test or cmp xorl sub icebp adc inc sbb push iret addr16 jg cmp xor lret nop adc ja push fidiv cwtl out (bad) nop (bad) xor shrb test out sbb jb sub ja fimull ja inc mov repz out aaa lock mov jmp cmp add jnp and (bad) sub push jo call push (bad) insl in pop jne insl cmp mov test movsb ret mov and cmc push lcall inc or sbb (bad) aad cmc push mov (bad) (bad) pcmpeqw dec (bad) gs hlt adc jno dec inc add jecxz ljmp add lock xchg adc je into pop cwtl and cmpsl (bad) in leave ljmp jno cld or ljmp sub xchg jge dec sbb xchg fdivrs es in mov push mov inc ficom nop push and push icebp mov jbe mov cmc mov ljmp int3 gs mov mov ljmp xchg scas cmpl addl ffreep test mov in xlat out aam fcomps or out jne and jne push xchg loope mov ret inc xchg clc shr pusha call push lea movl jmp lea je clc jmp (bad) fidivr ljmp jg sbb xor mov mov into pop mov ds pop (bad) pop jecxz xor add out sbb xchg lret jae fldenv sub pop pop fdivrs mov inc mov fldl insl sar xchg mov mov loop adc leave adc lret jb mull inc and push mov rorl mov add sahf aam fstpt add lret loopne adc adcl xor aad sub cmp arpl pop mov lods in jge dec or cmp jecxz jo sahf je pop fs pop sbb imul stos add jg mov pop inc test mov sub in pop pop inc out mov dec out int3 cld dec aam cli jo test cmc std xchg ja jno sbb xchg cmpsb (bad) jmp add or ja push in or and push add stos push jo lret pop rorl hlt mov xchg push (bad) xchg icebp fmuls pop data16 test outsl or adc ds adc jecxz add (bad) push hlt jb movsl add sbb mov loope rep (bad) (bad) mov rcr notb add add bswap pop jmp lea jae bsf rol pop not pop btc or shr mov sub cmp mov pusha call mov mov adc inc aas les movb vmovups fist push outsb cmpsl jmp insl push mov cs lahf mov and stos stc xor test sub cmc push inc cmp pushf ret and pop jns and addr16 (bad) cmc mov push inc inc and dec imul mov lahf stos cld push test clc add into sbb pop inc lea lock imull movsl and dec sbb xor mov out mov inc inc mov call pop push jbe sub xchg test shl stos clc push dec inc std or je adc push inc fcoml add jge sub (bad) xor ret cmp jge loopne xchg xor jnp xor clc mov rcl lock loop lods rolb jmp pop stos cld push mov xlat push or repnz adc inc js fild or fstpt dec imul sarb push sbb imul daa clc jp ds or repz add mov movsl jge cmp lcall leave sbb jo and adcl xor aas sub adc mov iret inc fcomip cmp adc arpl repz adc jbe pop jns adc push clc dec nop dec push test sub adc daa pop call fsubl addr16 cmp fs stos fwait cmp or mov subl popa mov lahf mov jnp jp jle jge xor testl (bad) cld xchg pop lcall inc inc mov xor jb pop es sbb mov push pop rolb sub pop add fstpl mov push (bad) mov pop inc xor lret jns or stos or cs mov (bad) xchg pop (bad) push clc divb mov incl popf add push in mov sbb scas daa sub jne fsubr arpl xor (bad) xchg cmpsb rcrl xchg xor push ss push sbb out aam (bad) ret data16 test pop xchg xor jbe rcll pop inc mov xor mov jmp pop stos daa mov cmp mov pop mov cmp sbb or lahf dec xor mov add cmovge xor fcoml jle pusha addr16 jnp negl and fidivl cltd add and add ret add ja or repnz xchg jae xlat incb jmp push inc add rcr sbb inc (bad) (bad) xor loope shll lret int or lock or xor ds mov mov cmp push stc js in cwtl imulb gs aam dec sub pop dec (bad) or loopne daa fidiv or mov inc in and jecxz and test jge loope es and lret adc inc pop (bad) sub cld push je outsb push sbb fcompl mov mov nop jp pop ljmp sarb das inc lret pop stc jb xchg les jno loop imul pop mov add dec xor and in pop xor fldt adcb fdivrl (bad) idiv push stos ljmp shll test xchg sahf xchg mov mov pop test popa dec dec dec mov sub xor int3 popf or nop sti pop pop aas icebp fistpll repnz out (bad) shld (bad) imul fcmovbe pop add cs loop pop inc mov rcll cmp and cmpsl subl mov jno mov mov dec xchg loop jns jbe movl pop mov rcr dec ret xchg test and fild daa sti lods lahf pop pusha sub push jp and outsb bound add rclb insb into clc (bad) rolb js and inc movsl enter stc cmp outsl cmp pop stos sub sbb mov es in sub loope sbb mov xchg jo sub add ss cmp jmp js sti mov push idiv push dec inc mov inc inc sarl xor push or popf das cmpsb xchg xor mov cmp aaa dec adc xchg cmpsb leave test mov xchg pop mov rcl jb add out testl imul sti push mov sarb ffreep mov scas out mov adc aam jmp cmp and leave pusha xchg stc xor jp xor aad aam lret pusha movb pushl call push jmp lea jb push cmc cmp call lea lea and clc sar mov rol ror mov adc not sar jmp jno xchg xchg mov mull pusha lea jb ror pushf sbb btc mov bt cmp pusha pushf sub call not mov not pushf pushf lods data16 testl add lea jp push bt jmp lea je not lahf cwtl lea call pusha call pusha or push jmp mov movb lea pushf jmp mov pusha lea jb shrd jmp xchg push lds pop inc lcall jge xor jge jne outsl mov mov adc (bad) pop (bad) cmpsb push imul icebp or fwait sarb push mov ret adc mov lcall pusha dec pop xor xor aam dec stos cmp int push add (bad) jae mov jl stos sbb sub lcall mov push cmp jne mov xchg repnz jmp iretw pushf xchg jl in cmp add outsl sahf scas test nop dec das xchg jne pop mov jbe mov mov ror movb test not call push pusha movl movw lea jmp movsbw ror sar setns mov bt cmpb call add inc gs gs popa addr16 add test mov pop cld jmp inc rcl or test sbb ror adc loope add add aad xchg mov xor sbb cld jecxz fcompl sub jecxz jg jmp out popf jge pop int3 inc (bad) and and mov (bad) or pop sub enter push jbe in sbb lret inc nop dec sbb dec jl icebp push inc lods inc int adc in pusha movsb pop mov lret cs pop out mov jmp fs jne pusha neg rol mov cmp cmp movb cmc add call add (bad) tzcnt rcl add sub sub shr bts rol mov pusha jmp movb pushf movb lea je stc sub call not call jmp mov not bswap lea mov call add inc gs outsl fs gs imul add mov imul dec fcompl in inc enter mov push pusha mulb sahf mov sub cmp aad xchg pop into out jns adc incb mov push xor xor pop or adc mov mov push jae fimull pop adc inc xchg fwait add xor push shr mov xor ret int3 insl int xchg push fnop fcompl repnz cs pop adc mov test add mov xor je mov push loop lds outsl hlt pop mov dec xchg adc sub cmp xor std push and add sub stc pop push lea jb cmp daa stc mov mov stc clc xor stc not xadd mov btr adc add bswap xchg setno setb not pusha pop lea mov lea call pushf pushf adc push movb pushl lea jb pusha clc call call call adc pusha lea jb pushf stc xor pushl test test setns lea jae mov call movb mov pushf mov movb lea jmp add inc gs outsl fs gs imul add push sbb inc pcmpgtb add mov lret sub push mov cmp mov jbe xchg outsb scas sub repz int3 clc jg out mov ret mov pop xchg rorl sub mov sub (bad) adc push xchg (bad) inc sub pop cmp stos (bad) dec out (bad) (bad) lea sbb cld (bad) jg vpsubusb in pop sub adc cli arpl fdivs icebp daa fstl stos jnp pop push outsl cli add and jb aaa xchg ljmp push xchg push push stos lods rorl push pop (bad) pop sbb lea je cmp stc test bt sub jmp lea call jmp jmp jl push xlat and inc ret mov call mov dec sub mov add sbb addr16 std cmp call fs adc mov add push insb lock jnp or sub push lods cld popa dec jecxz loopne xor push (bad) sbb mov ds rcll lahf fmull popf dec jnp into cwtl mov dec or iret addr16 xchg and (bad) jo add mov xlat js popf sub cmp add jne add adc mov lock movb lea call pushf stc add pusha jmp lea call pusha jmp lea ja jmp cmp movw push lea jmp call lahf mov inc ljmp shrb add dec rol das mov xlat daa pop gs or fcomps push push push mov sub insb mov shrl and (bad) jmp push movsl dec test mov push cmovg sub mov add adc jmp cwtl arpl add sub das out inc insl clc adc scas fstpl movsb fmuls in dec sbb xchg (bad) sti or test adc ss sbb ret cwtl adc (bad) ds lcall lea rolb test pushf call movb push jmp rcl not test pop not pop pusha (bad) idivl int out mov setg rcl movzbw not mov shld bsf not mov cmc bsr bsr add movzbl call cmc bt sub pusha cmp lea jae pusha pushf lea jae pushf pushf pushf lea jmp jb lret dec es inc fldl cmpsb repnz xor mov cmp adc mov out inc enter cld mov push in push adc xchg cld es jg test (bad) xor jae sbb or mov out lret add inc icebp mov mov dec leave jl lock mov clc in sbb loopne out sbb mov dec and xchg adc imul mov push mov fmull daa pop inc ret cmp and (bad) lcall and sub into mov fcompl adc (bad) iret fstps flds mov adc inc mov aaa lahf shr jmp lcall mov jno call je xor out cs lret fist mov jl test pop sti jo aaa or push add dec stc addr16 pop jo shll xchg or cld jmp cmpsb cmp add jp call shrb clc hlt imul (bad) or push lret inc cmc pusha cmpl jmp lea mov pushf pushl lea call jmp test neg test cmp pushl lahf call sbb (bad) jg pop inc and dec vmwrite pushl (bad) cmc lods ljmp popa xchg popa dec inc rcrb mov pop and jl lock add xor push rcrb movb sbb aaa fidivl (bad) aam push lods jecxz and adc pusha test add and insb jb push and dec adc clc insb xlat pop adc cli pop int out push test lret push xchg (bad) jae pop stos sub and fsubrl adc push mov sbb movsb mov mov ss or fadds push mov lods (bad) pop add xor test les fldl jne mov andl cwtl lea pusha push lea jl push jmp not or sub xchg jmp je dec lcall movsb jle sahf fsubrl call adc ret and or push pop aas dec movl outsb in inc xchg push xchg and cltd fldl in int3 xchg enter mov imul cwtl test repnz notb xor cmpsb jns inc lock push test adc insb test aam or fisubr ds nop xchg inc xchg inc (bad) mov popf pop sub js fisttp addr16 mov or xor loopne mov push fisttp jg jnp or mov fwait pusha xor js or lea shrl dec (bad) inc cvttps2pi ja push xor rcrl jb lods enter (bad) hlt addr16 add jbe or out out les and sub iret or inc and stos push movb mov movw pushf pushf push lea jmp lea lea jne pusha not mov call call jle test pop inc btl mov mov sbbl scas mov lret in add pushf mov push mov sti push xlat push clc out mov or mov jb decl lcall inc xchg leave jno sti or outsl fld pop xor xchg icebp repz sahf ja dec sbb xchg add mov adc iret mov sbb je xor cmpsl in dec jmp data16 cmpsb xor ds movl inc push fsubs mov cmp sub shrd xor setl pusha lea add btr shr mov shl mov bt cmp repnz jmp cmp pushf call jmp pushf stos call test stc call clc mov btr add test call xor sbb and inc ficoml jg movsl inc lds cmpl sub cmp flds xor test push xor mov and mov xchg fwait paddusb cmp fsubs pop aas cwtl xchg scas ds into fildl insl push sbb fist cwtl repz mov pushf hlt inc mov pop aam pusha mov adc rorb jge sub cmp popf or jb or addl fiaddl (bad) mov xchg test popa mov mov cmc mov cmp pushf lea jae clc sub movsbw sets lahf lea lea call pushf test bt mov test pushl clc test pushf pushf jmp std sbb inc je fnstcw fnsave cmpsl scas in scas fbstp mov cmp push out push jl rcrl xchg aad cmp lock sbb les xchg out pop std daa cmpsb hlt push out aas fisttpl cmc dec incb jle mov xchg enter out out rcrl ljmp (bad) lcall popa and sarl jo (bad) sti push xor push iret inc test loopne in in fsubs into gs popa aam (bad) ja andl jo sbb mov fwait adc int3 sarb lret out cwtl push or aam or pop sarl sti push pushf scas idivb test lea dec bound inc fmul xor add mov xchg lea push xchg push xor shrl imul bound push add jle pop loop sarl mov inc imul imul and xchg mov xor and cltd call andl xchg ds in lret out or mov clc cli ficom imul fcmovb repnz arpl push xchg jg push movsl pop inc (bad) xchg lret pushf xchg loope push aas psrlq out shrl int xor push iret sbb adc cmp mov sub jmp shrb adc loop xchg popa adc std pop out loop pusha mov mov aam andb dec das movsl adc test jg mov fwait data16 ja (bad) sub cwtl mov fldcw in jno sub in jo jle repnz jb dec add ret ret push inc bnd pop inc sub push pusha insb jb movsb jp jb and push adc scas mov and pop bound (bad) mov lea mov jbe mov cld mov (bad) das (bad) rorb mov mov dec ficompl mov jmp js xor adc xlat xchg in insb lahf lods insl pop cmpsb sbb ljmp mov fwait std dec scas pop mov adc pop test sbb dec and rep and (bad) push cwtl shrb xchg mov adcl ds sti ds cmp jp fistpll out fs xchg popf jecxz lea mov pop fisubr pop inc lret fistpll inc (bad) in push adc mulb enter into cld fsubs jle sub mov mov ja cmp xchg dec stos sub xor mov scas lods inc stc mov dec or jg jns mov js pop arpl cwtl pushw ja adc dec sti rorl mov pop loope push add out mov in xchg loope scas loop insl lods enter int3 outsl cmc insb in test arpl imul sbb gs cmc inc xor dec test ss add repnz mov movsl inc mov adc or insb mov in loopne mov inc mov out sbb lods in dec aad repz std js dec aad aam inc mov and jo fbstp icebp dec cmp iret loope mov (bad) divl cli cmp add divb (bad) jbe pushf pop inc negb es aaa mov jb add mov nop gs adc mov aad out popf mov addr16 outsb fwait add (bad) out bound fwait roll pop lods scas lea push roll arpl (bad) mov (bad) in nop sarb scas and jge sub pop inc je icebp popa test aas aaa dec fxch xor aaa addr16 (bad) std mov jb scas imul mov rorb fs xchg aam add jbe pop and xchg mov xor cmpsb out jge pop fbstp dec arpl push pmuludq dec (bad) bnd js mov je ret pop xchg aad xor pop push rclb lcall pop or ret les mov sub lcall inc xchg cmpsb inc jnp pop jmp adc ja lds out add (bad) std mov mov mov dec pushf jmp ss xlat add pop inc pop cmpsb cli or or or lret cmp cs bound add mov and (bad) js add ss mov pop mov cmp push cld xor dec xor cmp je mov cs fstps test adc jg xchg sbb in add fist xchg test (bad) adc test dec (bad) insb cltd loopne inc and data16 (bad) in add sub pop call push dec add mov cmp cmp aad lods or fildl and aaa or dec xor mov mov sub int3 sbb pop inc inc dec inc fldl sbb sbb in xchg pop leave inc sbb dec sbb in loope xchg insb dec jbe lock into cmp mov adc scas jl shr pop pop mov les lods xor stos cmpl sbb mov orb or icebp sbb dec lahf sbb push aad sbb adc sub addr16 mov mov dec sbb cmp mov sbb adc mov (bad) xor inc and (bad) lea je pushf clc call pushf lea jne rcl sar bt and sub btc sbb lahf mov test (bad) lock rcr add (bad) lock mov cmp test call call lea jb xor aas lahf mov cmc bt call cmp sub mov pushf seto mov pushf pushf stos pusha pushf movb pushf lea jmp push (bad) mov pushl daa pop cmp lahf lret fbstp ja ljmp ljmp rcrb ret fisubl cs push test mov in hlt imul or mov jmp popf jb sbb outsl into xor lcall or push mov jmp mov cli pop jno imul pop insl jns or jg jp pmaxub popa (bad) mov inc cwtl sbb or lea mov scas sbb add and xor inc test xor movl cmpsl leave leave (bad) in sub mov push adc imul daa clc pop aaa iret aaa pop mov push pop mov fs lock add sbb je mov sti pop rcll (bad) mov out or ret adc scas fcoms lods cmc or inc popa mov xor xlat inc inc imul xor mov mov push call test lcall sbb divb mov jb mov fiaddl stos sti push lcall cld cli setae inc sub sub lods xchg pop add jecxz xorb stos pop or leave push jo ljmp jbe adcl sbb popf iret bound movsl cmp sub int sbb or mov stos jmp aam adc insb ret out (bad) cwtl scas fadds jo jo das pop leave or movsb jnp mov inc push sbb ret aaa (bad) (bad) dec mov inc nop std adc dec push cmp jle and and pop popf mov xor push aad inc lods jae sub pop popf insb call orl jnp adc test lea in in mov ss inc aas push xchg xor test lcall subl pop sbb sbb cmp mov xorb ja and or test xor stc jnp std xchg das add popa pop mov gs mov mov and dec push inc xchg jge push fild sub xorb mov inc ljmp in inc ljmp xchg push push xlat add pop inc pop fmull adc rolb popa mov in xor test fdivs int3 cmp sub mov (bad) out adc cmp xchg insl das push repnz or loop xor fstl sub loop push mov in nop iret xchg rcrl (bad) mov cmp inc dec cmp sbb adc bound out clc test xchg lcall and xchg mov out mov inc (bad) out and aam fisttp cmp push jle das mov sbb fdiv clc nop xlat fldt push add xor push mov push mov pushf pushl ret cmp pushf mov clc bt cmp pusha call cmpb pusha push lea jne mov shl mov cmp add cmc stc movzwl neg mov clc add jns cmp mov cmc stc test push push push lea je test call movsbw not ror bswap not not bsr xor bswap mov xchg mov lea not push pushf lods clc cmp pusha not call xchg jmp ds xchg xor inc enter jnp sub or sub and shr push sbb xor jp ficomp ja,pn nop rcrl pop stc cmp lods xchg cmpsl data16 into sbb jle push and pushw sahf rolb es mov ja gs int3 pop into outsl xchg or sahf (bad) int3 xchg mov jge andl sbb xchg push aaa pop lds lds lcall fwait push xchg sbb sbb fwait jae mov (bad) int3 leave fistpl pusha pushf test (bad) in (bad) das icebp mov ficom shr sbb (bad) call pop inc lahf hlt and xchg hlt push jl jl xchg test bound mov scas inc imul pop out xor sbb inc cwtl add push xchg sub pop mov jl push push out mov or negl addr16 sub bound out cld jb adc adc jp mov xchg xchg mov sbb xor dec mov mov loopne js jae xor imul cmpl fcmovu add push mov arpl pop loope adc or lods into (bad) jmp mov fsubs scas les movsb push pop mov js and adcb test push lret mov cmp dec fistpl add adcl test adc cld lods pop sub shl and mov (bad) clc cmpsl push adc push pop in shlb insl lods push (bad) push enter lods int (bad) fldt adc xchg pop push jge incb xchg push xchg xor movsb nopl dec jb repnz xchg adc xchg or pop cmp cltd add test sbb pushf stc bt lea sub push cmc stc test xchg test push cmc rol ror push lea adc mov add not shr mov stc add push jmp pushl popl mov cmp movb call aam adc inc lds push pop jmp mov add leave (bad) psubq mov adc pop mov pop repnz je xchg call arpl pop arpl jbe aam rcrb fimull mov addb ret mov sub sbb jae insb cmpsb enter stos rolb (bad) std sub stos adc push xchg push add push dec xor div pushf jbe addr16 adc dec jns stos lahf hlt or push imul push cwtl cmpsb (bad) and and mov loopne in adc gs stc fdivrl adc bt cmp cmp pusha pusha movb pushl lea jae bswap bts rol jmp pushf pusha stc cmp or movw jmp push mov push lea push movl call cmp dec mov shl shr mov and sub mov pusha jmp repz outsl cmp inc stc repnz clc push in into sub bound lret lds iret ud2 dec scas mov arpl inc aas cmp mov in and (bad) repnz xor mov dec jl and popa mov jns mov pop mov addr16 test jbe (bad) sub pop mov (bad) int3 pop or int3 sub or inc lea arpl mov cmp jmp pusha jb (bad) cmp sub or inc ja and mov je in sub push add mov dec sub mov pop pop xlat sub mov les add rol movsbw bswap setae mov (bad) lock mov bt repnz pushf pusha lea jne pushf pushf lahf movzbw movb setp bswap mov setl pusha pop movzbl lea call pushf lea jne add bts movsbw xor cmc mov stc seto rol add and sar neg mov pusha test pusha push pushl lea je pushf call pushf add pusha pushf push movb lea jmp (bad) out xor cmp fs mov les mov clc sahf jl inc push lret in add mov adc mov fdiv (bad) sbb dec mov js (bad) sbb xor in and xchg jno push repz mov pop and sbb fimul xchg mov sarb icebp push adc pushl in dec pusha lea jne cmc bsf jmp outsb test cwtl ds inc (bad) lods outsb cmp mov mov call loop xchg push out bound push cmp int3 sub push lods sbb icebp mov loopne xlat sub sbb dec int add add inc pusha jecxz call pop out inc iret inc fldl imul add inc cltd dec sbb (bad) pop xor adc test inc inc mov (bad) cmc pop xor imul or in icebp xor jl mov add pop mov mov or addr16 and push push scas fiadd pop and int and xor adc pop inc add leave cltd pop pushl xor sarb push orl push jnp js loopne movsl pushf mov test ss testl insl movb stos repz sbb pop loopne mov arpl adc lods arpl adc mov mov sbb pop test fwait loope scas into dec inc mov (bad) xor arpl fisttp pop aad dec or mov (bad) loop (bad) enter fistl push add cmc outsb mov cwtl (bad) sbb (bad) imulb mov jecxz scas fiaddl pop (bad) jmp mov in cvtdq2ps mov rclb add sbb mov xor jge (bad) hlt imul fisubr mov add jmp push mov shr imul cmp jae mov mov sub shr add call clc pop ret push mov pushf pusha mov lea jmp movw pushl lea jae aas movzbw pop dec lea lahf ror pop movsbl aad pushf stc mov stc bts neg shld cmp pop bswap mov pushf lea jb and dec bt cmp lea lahf push jmp mov movb mov pushf lea call pusha lea jg pushf mov pushf pusha lea jmp lea call test add rcr cmp pop movzbw stc cmp sar pop cmc cmp pushf push sbb mov jmp mov popa mov icebp mov ficoml in fadds clc sbb pop mov xor hlt inc pop mov jae ja inc pop test sbb xlat adc sarl out jo inc mov mov in and cltd mov test ret sbb stos mov push mov bound pop (bad) xchg in leave sub add push inc daa dec orb std decl sbb xchg cmp dec fnstsw movsb cmp (bad) psraw js dec cmp cmpsl mov pop int aam loope insl cld mov sahf sti lea test fldl and cmpsb mov jnp lcall mov ror cmp or xchg add aam call add sbb cmp and mov sub pop push sbb jmp mov out test or pop shrb ret rol jne adc or mov xor jns aas inc add mov push fisttp inc mov cmp les gs in movsl cmp pop loop std (bad) lea sarl iret adc cld dec fsubl jns adcb rolb or dec and pop mov push xlat lret scas push pop mov cmp sub and ds imull cmp xchg xor das cli cmp inc out cmpsl addr16 jmp and out xchg jae pop pop into cmp jle and push rorb rorl dec rolb inc in or inc and push mov add dec mov xchg in add push loope xchg jmp mov mov subl mov xchg stc cmpsb xor hlt rclb sbb inc inc pusha mov jmp rcrb sub mov mov inc clc xchg popf faddl dec aad dec (bad) pop fucomip cmp sub movsl xchg mov (bad) xchg jnp mov (bad) icebp mov pusha jmp pusha pushf pushf lea ja bt sub rol movsbw add sete sub sub btr mov jmp dec call pusha push push lea jae push mov mov lea jmp mov pushl btc mov shl rcl btc sub pusha mov lea shrd shl ror push mov bt test inc sub adc cmc shr and lea mov mov shl mov cmp call pushf push pushl mov pushl stos movl pushf mov movl pusha pushf lea jmp dec shl inc pop inc gs add cwtl scas je insb mov cs mov push test jp dec push xchg pop sbb bound mov jae pop push jns xor or and movsl add or mov int mov pop sub sti outsl pushf lea pushl jmp mov lea jne pushf pushf pushf lea jb adc jmp mov not cmc shr jmp clc shl clc mov cmp cmc cmp mov call pusha movb lea jg jae xchg bsf inc or mov or push mov adc mov call lea jb cmc aaa cmp setge mov jmp pusha push movl jmp pusha movl pushf jmp sub lea jl repnz pusha pusha lea jne sar cmp mov shrd shr add sub stc inc bts test mov bt sub stc cmp cmc pushl test cmp push call not jmp inc push cld jl pop inc xchg push adc loopne lock push mov cmp push lret fs add sbb pop push add jne sahf xchg add test xor push jmp cmp (bad) pop out cmpsb (bad) lret rolb into sbb test test shlb movsb sbb inc dec in imul dec mov mov cld mov nop out pop shll sbb cmp insl xor cmc dec fdivl orb lret sub shll mov test fimul lock sub inc pop inc repz mov rcrb (bad) test cmp add cmp cmpsb je push outsb mov mov inc dec inc mov in cmpsl jo push sbb fildl sbb cltd roll test outsl rorb sub xor int3 lcall fstl lret in jb lret jmp sub jo push xchg enter je pop cmp push adc mov add pusha xchg scas scas xor inc pop adc out cmp cmc fisubrl in and pop dec jmp outsb mov push loop test adc inc add mov bt bt sub jmp test es add (bad) out test adc inc add (bad) dec jbe and add call rolb sub add enter sahf nop xor inc add add cs out add inc add clc jecxz dec inc stos mov es add add inc add inc add add mov pushf xchg add inc add add ret fwait out add inc add out cmpsl push inc loop jp sub add shll add aaa sub add xorl push sub add add jne inc add (bad) mov das es add add mov sub add (bad) cmp mov mov xor add push cmp lahf scas mov add xchg xlat jge push inc dec xor add js add inc add add cmpsb mov inc add lock aaa dec jge jo inc add cld lret mov sub add cli xor or xor sub add call mov add mov fildll push jle xor add insl xor sub add sti sbb sub add clc gs lret ds add imul sub add arpl xor add pop lcall inc add add loop xor inc add add pop dec test xchg add in aad test inc add hlt pop add xor add adc clc xor inc add (bad) pop fwait push jns jge sub add sub jbe sub add dec or mov inc add idiv je pop out adc inc add rorb xchg (bad) jbe sbb inc add mov push addb inc add add mov push sub add out mov xor add push ret insb sarb inc add iret add sbb cmp sub add lods lahf xor inc add add fidivrl xchg lea sub add aam pop repnz cmp inc pop inc lret xor scas push ret mov pop push movsl jbe jp adc jle xor xchg mov arpl mov imul test es mov cmp outsl cltd shlw arpl mov fnstcw dec jno (bad) and ss inc fadds stos lret std jo cli aaa incl in sbb ret mov sarl push je addr16 inc dec popf sbb aaa mov dec test push (bad) pop xchg push out sub es pusha mov add pop call pushf jmp cmc sub clc pushl popl bt cmc pushf cmp movb call pusha xchg pushl call mov jmp int out inc pop inc ficom or or div repz inc lret lret jmp fstpt dec ret fsts dec dec sbb xchg add rol push sahf mov leave or repz aam movsl stos mov dec mov hlt pushf fwait clc mov (bad) jg gs xchg pusha cmpb mov jne stc cmp gs xor sti add cli inc cmp xchg xchg mov sub or inc or and xchg xchg lock xchg cltd stos and pop inc pop mov dec sub je (bad) (bad) popa push popf movsl enter repz fnstenv inc cltd dec in ss jb and dec inc popl mov cltd (bad) out pushf fistp aam push (bad) cmc je inc test and jbe cmpl int3 pop mov mov push xchg xchg mov xchg out sub jg and xchg in cmp nop ret xor pop mov fwait cmpsb jnp jp enter xchg mov add in js sarb xor pop jle and fildl adc cmpsb jne cs stos xlat lds std push jb stc sub (bad) xor or sbb or pop adc fldt jl cltd pop rolb jg les shrl insl (bad) ss popa loopne int3 mov pop sbb inc fisubr pop add and (bad) jbe pop sub pop bound cld test mov fisubr add leave mov imul mov xor lea mov movsb test or dec pop inc aaa pop mov ljmp dec xor adc xchg xchg das pop cltd and fs mov mul ds lret loope add jg and nop lea push xor jo das or or xor mov pop jle imul divl shrl cmovno bound inc jg mov jns xchg push push (bad) cmp mov out scas int mov test lahf stc jecxz or sub and inc imul sbb pop adc test stc test push xor pusha jmp push or les inc rcrb popf add ja push daa jno int push stos mov leave sub shrl xchg jns addr16 fs into dec cmpsl mov or adc jno call arpl fisubrl xor int jp std sub add mov ja outsb test rcll out sub cmp push mov orl inc mov cmc jg (bad) cmpsb hlt push outsb jmp (bad) jne (bad) (bad) mov mov xchg in cmpsb cld mov xor rcrb scas adc add shr insb and bsr aam ror rcl sub lahf bswap push bswap setl push lahf push movzbw movzbw pushf pushf mov cwtl pop lahf push bswap movzbw mov call call add mov call add pop ret jmp jmp mov pushf push pusha movb pushl ret xchg push movl jmp pushl pushf lea ja adc cmp or sub rcr sete add cmc sub mov jmp push movw pushf movl pushf jmp mov not bt shrd call bsf data16 repz jmp call push movb movl pusha pushf push mov lea jmp pusha call movzwl add pushf bts mov pusha call cmc cmp pusha add pushf lea jmp movl jmp cmp shl cmc add pushf jmp call je mov dec pop inc mov sbb xchg xor cmc icebp add inc ja addr16 shlb sub icebp sbb jmp arpl fsubl xor fcomps mov mov cs scas cld rorb xorl pop xor ret into std rorb jb xchg in dec arpl mov pop push lahf pop outsl int3 (bad) cmpsb lds mov mov push fnsave sti mov (bad) test push dec fisubrl jl out pop repnz ss xor pop dec xor mov iret sub cmpsl stc sahf (bad) dec data16 sbb outsb int3 jg data16 sahf xchg test xchg sub xor es outsl ljmp dec pushf aad cmpsl mov and push movw lea jb bt cmp cmc stc cmp jmp pushf jmp pushl call negb sub in movsl popa mov stc cltd out movsl aad jmp mov mov test nop or loopne out dec ret mov ja xor inc mov jg movl sti fdivrs fnstsw mov add jg les jmp dec (bad) shrb dec je pop out ret loope mov pop and fstps cmp adc cmpsb or xchg aad push add in xchg sub cmpsl lret pusha (bad) push sahf adc into insl divl push and xor dec jp pop adc lds icebp ficomp pop inc dec (bad) icebp pop mov test es push dec fs dec push cmpsb pop int3 aas sub lods dec cld or cmpsl bound inc (bad) je inc adc mov sub cmp push gs and mov sar push jne andb xor xchg xor and add cmp je repz push xor pop jmp sbb movsb xlat mov (bad) out mov cli mov in inc stos fisttp call push test pop enter mov daa scas pop or lret mov dec jg inc dec movsb in sbb pusha jmp lea call cmp stc mov cmc clc cmp clc cmp push movw pushf lea jb xadd bsr stc mov sar data16 repnz ret add add jmp add jg add je or test mov shrd bsf mov test bt clc add call bswap lea pushf lea call cmc cmp pusha push call add dec outsl arpl inc insb insb outsl arpl lahf pop mov jecxz cwtl rcrb xchg mov shll sub push mov cli test push ficom sbb testb addl sti shlb push sub imul inc out repz aas stc pop mov (bad) aas xlat jl or rcrl push in jae (bad) push insb cltd loopne lods pop sub (bad) int3 movsb mov arpl rcrb mov pop stc and lock push test stos loop adc sbb inc inc sub and and mov mov sbb mov int3 movsb mov std rcrb hlt xchg inc enter push bound and mov inc insl fisttpll cmp dec or cmc jg jmp (bad) pop movsl cmpsl add push iret (bad) sti dec imul stos (bad) mov lahf jle add inc dec dec cmpsb sbb xchg loop cmp xor or subl ficom push sbb xchg jmp pop mov mov sub sbb sub pop mov push add sbb pusha lea jb mov shld mov bt jmp jae lea sub mov lea call test fildl js mov into in es out hlt repnz test and lea pushf sarl pusha loopne nop fwait mov push pop out push inc dec xor push jae lock scas pusha test adc popf sbb and and sbb and cmpsb lds fs in mov and js lret test arpl jmp mov (bad) jmp (bad) jb cwtl cli sbb jne cld sub mov lods sub loopne call push test xchg std jo aas xchg push inc push aam loope sbb movsl inc sbb (bad) aas adc inc pop cli (bad) pop (bad) xor pop inc (bad) push and sbb clc push add int3 inc lea mov add fsubs add push jo cmp in mov (bad) inc cli dec fmul mov sahf out sarb ret adc mov jb (bad) cmp rorl (bad) outsl sub inc inc fnsave int mov cltd jge xchg and shrb mov xlat repnz ret cmp lock mov push push stc push push test scas pop es jle cli push and leave rolb inc lea test xchg add bt push jmp rol sub pushf lea mov movw pushf movsbl mov movw movzbw mov not pushf call lea jb jmp call add dec jo outsb push inc dec popa outsb popa addr16 add xor pusha call test cmp push pop inc jnp adc jo inc mov cmp fs push in bound add or push jno fcoms push shrl cmp in fchs and sahf hlt xchg mov repz push jno add and mov add clc xchg imul xchg sti pop ja in js adc out fstpt jmp stos or inc push xor gs adc popf sbb adc repnz xchg jle pusha xchg mov pop inc jmp sub cmpsb and mov scas fimull test es std test xor inc jbe push pop mov jns roll das adc dec mov mov pop inc aaa cmpsl push mov pop (bad) xor mov lods push add mov xor jnp fsubl in subb mov fiaddl or lods ds in cld push ret aas lcall inc pop loopne xchg mov (bad) aam cli scas push push cmp ljmp std hlt fimull pop and sub jno data16 dec push or insl mov push sub jae adc ljmp hlt sti push dec xor cmp mov out cltd testl jne hlt loopne and data16 mov lcall iret xchg mov xchg rol mov lret aas movsl add adc mov lods sbb data16 insl fwait out dec (bad) xchg mov push cmpsl lret out das jmp push movsl das mov xor pop cmpsl fidivrl inc scas xor sbb test aas jmp pop lret stos push push dec lea jne sbb dec shrd xor mov mov add rol and add neg mov push clc test jmp fldt adc movsb inc les test push pop push pusha add outsb hlt sbb adc fsubrl and dec adc mov movb mov jne lods repnz iret inc (bad) in jbe push mov movsl push jp insl or jns and cli mov notb inc loop push in add popf pop and fxch scas and xor xchg fs pop lock aam sahf lods aad (bad) mov push aaa push push cld sbb cmp pop pop push stos pop sbb and or stos push movsl pop test mov inc fstpl push jg outsb pop jae stos push adc leave lcall push pop inc pop sbb cmpl ss pop pop push bound scas ja inc (bad) aas sbb ja popf inc or scas add cmp (bad) and mov pop dec xchg ficom push mov inc dec adc dec jge cwtl jb or mov fstl and js (bad) pop xlat enter movsl xor outsb out sarl dec xchg add push adc mov enter or fwait loop xor test loopne add inc dec dec jmp jbe,pt jb out pop (bad) in add (bad) in jbe or jle mov or inc push scas rcrl xor jle xchg sbb inc ret mov cmc stos fldt subl pop xor mov jae sub cmp and xchg mov in xor (bad) sarb pop push pop mov std jne adc or and cmp xchg int3 lock mov stos push sbb xchg dec dec test jl lret scas loop dec notl loop bnd sub lock jo sub int jae sbb xor jge add mov inc and xor (bad) mov xor lea jmp not pushf mov push movb mov push pushl call in pop fcoml inc sub fadd push fdivs dec dec push stos sbb dec mov xor stc int rclb jl push sub pop add insb pop mov lret push xchg pushf in xchg lds aad jbe roll sub sahf sbb mov movsb adc inc test insl inc or pop (bad) inc jae out mov imul sbb arpl add jae pop icebp pop out gs ss test jle cmc sub ret xorl xor test mov xor call push call add dec outsl popa fs imul add pushf lea jb shrd pusha add dec mov neg sar not not pusha adc (bad) icebp add (bad) adc pushf add jmp das iret mov push outsl jnp das aaa pop mov (bad) cmpsl xlat aaa xchg jg jno mov cmpsb pop jmp jp push inc ja aas test xchg sbb fldenv rcrb xlat sti call test sub xor xchg mov scas cmp lds aam cmpsl bnd cmp imul jns cmp fsubs sbb cs ficoml daa pop pop mov sub mov xchg adc test pop inc lfs lret int pop xchg xor mov and lahf pop lret repz mov inc adc fistl fdivs mov cmp imul jg push pop xor jne imul xchg out xchg push fidivr ss nop insl mov rorb aas dec jecxz mov out in sub xchg adc jo jne jg lcall jns in xchg inc mov test xor pop ret xor cmpb push mov popf inc pusha mov dec in es stc pop in loop cmp push dec es pop inc lods (bad) aaa mov das subl negl mov shl sbb jo fwait addr16 xlat and mov mov or jns cmc cmc add lea cmpsl pop wbinvd or xor popf divb pop pop adc stos jl bound cmp aad pop xor jmp and and fsubrl mov std mov sbb mov test add push stos push or push push push mov lds mov pop jp cld push in adc fidivr sub ficoml xchg pop or pop or or mov add inc sub add sbb nop push pop imul sbb call mov test (bad) call daa or xchg jae sub jl adc js testb and and lea inc inc dec test cli jno dec loop add loope (bad) stc sarl push dec mov xchg mov xchg mov dec push pop out xor repnz pop push inc dec orb cmp out pusha sub dec fsubs int sar inc inc jg fnstenv sbb inc lret pop int3 cmp sbb out movsl jb push push cs cmpsb mov cld jl ja mov cwtl fisttp push or or in ss dec das cmp (bad) clc movsb (bad) repnz sar adc sbb lahf pop pop addr16 adc sbb cmp jecxz xor data16 leave in bound test subl add ret jl add and sbb sbb and mov (bad) (bad) xchg jecxz xor push cmp ror js imul int and lret pop fbld mov mov add xor and jmp jmp arpl dec adc jg lods adc dec mov sub outsw push xchg sub mov enter jge jne or outsb adc mov rol popa jg js call mov mov movsl lods mov rcr adc mov inc lcall imul leave mov cltd ret pop cmp inc cmpsb mov dec push out xchg add repnz mov cld add push or iret inc add cli xor push add je movsb loope movsl push mov popf dec cmpsl push repz inc aaa scas dec xlat popf pushf (bad) jo xchg mov sbb mov gs stos push cwtl das test mov xchg movsl lea into (bad) into and (bad) pop and dec jp mov (bad) repz je pop incl cltd clc dec mov sahf xor sub pop ja (bad) insl test push mov popa pop xchg push cmp lock push or add mov jmp mov xchg loop pop push push pop (bad) gs xchg lods inc push xchg (bad) cmp push scas cmpsb push jno jae stos movsb cmp xchg lahf es mov adc out mov cmpb dec jge inc mov add xor push iret stos cmpsl cmpsb addr16 popa or or cmp jmp or inc (bad) cmp icebp cmp cmp pop mov addr16 dec out iret jg fiadd mov in lret ficom push dec sbb mov adc popa mov xor (bad) sbb (bad) mov xor jp iret adc fidivl or adc jnp adc pop mov inc in xchg and scas add mov push fnstcw sbb pop call test adc sub xor fs pop out addb cmc movsl jns sbb cltd push dec out jecxz cli add cmpb sbb test pop cli lods idivb adc xchg iret ss pop and bnd xchg mov or push loope out push push add orl ret dec pop shr jno push imul xor pop ret sbb add dec xor cli (bad) pop fisubrl cmp gs scas mov es (bad) in jb jb push or add ja push mov iret push addr16 ret lds cs sbb push cld pop std pop jle int3 sub mov dec lock (bad) dec sbb repnz fldcw xchg mov subl lret sbb dec iret mov mov jae lods movsb (bad) roll pop test pop fistpl (bad) out shll adc ret dec jne cmc push lock mov pop cmp and add adc cmc out pusha in (bad) scas imul xor push lret outsb arpl leave lods adc xor js push clc flds popl imul hlt mov popf nop jbe inc add stos orb jne pusha cmp je aas jne loope aam adc push push fwait lea ds in insl jne ret scas jmp dec lret and arpl psllw pop and shl sub mov es scas int3 or repnz mov ret ss loope lock (bad) and addr16 jg movsl push clc fisubl lds ret ror cmpsl imul out in sbb xor (bad) fsubs cmp ret leave aad pop into mov jne aas add jl stos mov add lret pushf (bad) stc jl mov xchg pusha hlt dec lods pop jmp loopne mov push sub in fsts mov or lcall into mov cmp jno xchg dec push push inc int3 test fwait xchg fmull xlat data16 hlt adc std aaa dec fstp les mov and cmp scas fadds cmpsb inc aaa push popf imull dec xchg add sbb xor push sub pop inc das mov mov push mov mov jle mov arpl mov mov insl inc and fild mov fidiv ljmp inc sub dec ljmp subl shr lock mov or inc fs insb jg in mov nop pop xchg adc jecxz adc addr16 sbb leave outsb lret outsl lcall or cltd cs dec int3 cmpsl mov sub (bad) fisub inc and ds dec pusha cmc adc mov fsub xor add xchg scas mov jmp and mov dec pop push call xor pop outsl inc call jo pop bound push mov js out inc arpl mov xor and leave xchg pop ret mov stos push jae (bad) fstpl sti out scas pop and (bad) xor jno xchg roll (bad) sbb mov pop imul mov mov mov or or and push or arpl jae hlt xchg push ja,pn stos daa outsb sub push bound mov popf pop outsl dec mov (bad) je mov ja imul add push daa lds sbb jbe mov or sarb cmp clc cmp out mov jl xchg bnd mov pop or mov inc loopne jo jbe loope shrl mov jp xor test int3 dec ret pop lods push mov lods cmp push fimul and mov jg xor push jbe sarb fsts iret mov out dec push adc out or push mov out std data16 outsb adc inc mov sbb cmp and sbb (bad) aaa fadds jmp xchg std rorl xchg stos scas jmp jns test daa fbld jb in pusha rorl enter push mov mulb add dec dec test lea in (bad) aad lock jae popa cmpsl and push adc fisubrl out cld dec pop lcall push dec jae sub cwtl jl jnp sub shl mov mov ret call out pusha xor cmp pop test lods or jecxz outsl mov push incl fidivrl xchg std mov lahf stc cmp leave lret test mov inc push cmp dec mov cmpb dec jmp mov mov and data16 daa sub ret inc add pushf fsubrl movsb mov lods or loope clc (bad) cmpsl lea pop call scas lea in rorb in push aas clc insb je (bad) sbb stc inc jno bound imul repnz in ds mov sbb push nop jno jae je cmpsl (bad) push into xor inc adc fbld mov das add insb pop mov pop or jno (bad) stc lret das div setb and mov push in mov sbb pop add and dec ljmp (bad) jle test sub mov aaa test push arpl cwtl push in pop shrb rcl dec jge,pn lret pop shrb repnz dec stos push in mov and or pop aas or mov jmp movsb jnp mov xchg dec dec mov out es faddl jmp or and in mov sub outsb mov cmp cmp sti dec xchg lods add and mov out psllw pop call stos arpl mov mov test imul pop (bad) notl adc das push inc in fadds xlat movsb movsb cmp dec das push das insl pop jle clc pusha and jmp xchg lock xchg outsl cli and jecxz jae jmp mov ret cs loope mov sbb sarb stos jns popf (bad) dec out inc stos jmp pop aad test mov hlt pop sub adc rcrb shrb mov jmp js dec and (bad) xchg mov popf mov mov dec and pop xlat (bad) fs or test hlt insb subb cli mov cli pushf in sbb sub in xchg or (bad) pop cmp iret hlt xlat cmp lahf inc xchg mov jnp sbb mov push jbe sbbl cmp stos andb fwait xchg lret mov xchg sub cmc ss (bad) xor jo sub or xchg mov jbe int3 mov adc fwait addr16 mov inc mov xor stos lods xor cmp dec xor mov out sbb in sbb psrlw xchg scas mov ret bnd into test test adc push jmp (bad) scas js or dec pushf mov and or pop into inc push fchs inc iret mov pop cmpsb out inc je mov in negl in xchg lret mov push loop add movb je pop or mov xchg sbb sbb cmp mov je ret out add in popf sub test lea pop inc rorl imul jo int3 xor daa cmpsb jle rcll scas (bad) scas mov gs clc into lods add xchg mov sbb pushf sbb xorb inc js jle pop cmp xor add or test stos hlt fnsave test in inc xchg out movsl decl xor popf xchg adc pushf lcall in notb lahf mov sub sbb rcrb push mov jne push in jl in xchg and xor sbb or out xor xchg cmp cmp jmp ja out sbb test jns stos movsb cwtl mov in imul stos xor mov mov mov inc lret mov je fildl test or sbb jb add mov adc add mov add push mov cwtl into into push cmp pushf xor into dec mov xor rcrl pusha push out imul repnz bound clc int3 in inc insl clc or jns jmp ret mov icebp rorl call rclb pop insb fnop push xlat ja repnz gs std ds sti push sub inc loopne add es scas ss lods pop xor aas adc jns movsb mov adc mov std sahf mov or insl jne add dec inc inc out push and outsl add dec leave jae (bad) push (bad) stos dec imul dec mov jnp loopne lret sub rclb and sub js add mov loope sarl repnz sahf mov rcrb mov pushf sub push add mov cmp jno cmpsb mov shll or xchg in and xor (bad) fcoml addr16 or sbb into test outsl sub in subb out jp mov mov inc jecxz out (bad) rcrl sahf dec mov push out std (bad) nop push sarl aas adcb imul pop push xchg aas xor mov pop inc push std dec pop out or inc xchg jnp cmp cmc mov push in ret stos mov ffreep outsb mov shlb pop mov mov and add inc lea lock sbb or jno f2xm1 pop cmp xchg cwtl jne loop lea jne jb imul push sub jmp out je xor sub mov mov out cmp call cld and mov fwait mov rcl sub div xor enter push xor lret or mov int add add pop cs repnz out mov mov lret mov test cmp fs jo (bad) (bad) fcoms adc and jns or gs lods loopne pop and decb mov loope add or sub jae sti lods cmp lret lret lret push std push (bad) ljmp mov fadds lcall fbld test dec add mov xor adc clc popa imul xchg xchg loope (bad) xor test (bad) fld lock push dec imul inc and ds sarl pop inc push test jmp scas jge clc or push pop jb mov xor lods push rolb and xchg xor pop ret sti scas pop mov jns test or cmp movsl xchg imul stos pop pop cltd loop adc mov daa push (bad) push jg mov cmp mov and push addr16 ja aam mov sahf ja jg pop fnstcw jb adc lds xor popf jp les aad jmp pop jge jb jge clc movsb inc dec cmp add mov adc push aad sti stc push repnz cmpsb mov jne mov jge mov (bad) lret push sbb mov jg pop sbb (bad) cmp aaa pop rsm add lahf fnstcw test imul out pop dec add mov lea or cwtl jecxz and sahf jns inc jg xchg cmp in fistpl clc imul je daa ss push out push test sbbl fdivs push pmuludq hlt pop gs add enter add in push inc mov mov jo (bad) fdivr and dec inc push (bad) lcall xchg mov imulb jl mov ror pop (bad) ret mov add lcall arpl cmp mov lret cwtl bound lds mov inc cmp or addr16 jg push stos sub lret adc insb les sbb out sahf popa stos iret lea das push stos pop (bad) lahf in jmp jo js jbe popa test jo xchg push sbb push lods (bad) dec pusha pop inc push jecxz sub out in mov je arpl fiaddl scas pop mov fs shl jmp push add or or jno sbb or stos loopne cmp jmp sub push mov fwait dec inc xchg in xor fs sti ret add dec xor adc mov imull test push push and mov sti sti int3 dec icebp cltd out movsl lret imul inc sbb ror jne (bad) cmpsl hlt (bad) pop inc aas mov sub out mov icebp lret data16 mov fsub inc adc les xchg ljmp push mov gs cmp lret xor sarb jnp mov clc ret and xchg in or xorl sbb jnp mov mov jmp adc in adc pop cmp loopne cwtl pop fdivs and rcrb lods pop cmp insb dec cmpsb mov repnz push pop pop xor mov sbb inc mov movsl jl adc jle mov shrb sub (bad) or sub mov in adc dec sub out cmp cs clc icebp fsave inc shrl sbb insl or (bad) push dec cmpsb sub push mov jecxz sbb leave loope ja into popa push in adc int3 mov stos push and dec xchg inc and pop fsubl pusha call test mov mov mov cli or fidivl nop jle or cmp imul iret fldenv push and rcll mov addl dec stos mov dec fsubrs ret adc cltd xchg mov push arpl push movsl pop icebp addl xor lods sub or loop and bound repnz addr16 pop jae (bad) icebp jae adc imul push test ja inc pop (bad) bound and jno cmc (bad) lods in lods push adc add sub adc pop (bad) jbe push imul fidivl mov mov add mov cmpsb fwait aas or push jmp sbb leave cmp loope enter test les jno cmc pop das or push outsb lret jle,pn imul arpl clc ret pop cmc dec pop mov stos dec movsl insl inc stc dec lods test insb push stos adc insl adc jge fs int3 or pushl mov pop fnstsw jge nop/reserved movsb mov xchg repnz inc xchg movsl insb dec cmp add dec dec shld adc or fsubs jb and and jo mov addr16 add adc mov or incb sahf xchg (bad) (bad) es cvtps2pd xor les cmovne sub push cmpsb pop test xor bound dec aas inc dec pop pop sbb adc fadd scas in or sub in cli xchg jge pop jg pop call push xchg xchg into push push cmp mov pop push mov cmp cltd cmp imull aaa out xchg inc dec dec or out sbb pop pop aas mov in inc add xchg cltd js icebp mov cltd lret das (bad) ljmp xchg push sti lock cmp jp sbb rclb scas dec inc xchg pop pop das push aas lock xor xchg sub xchg or mov imul imul js imul mov scas fsubrs loopne jb int push test ret or loop sti xchg fcomps rcl adc adc std scas roll mov fnstsw lcall cld push jmp cmp mov jg xorb loopne add cld dec fisubrl mov in sbb or xchg fstl jnp test clc (bad) pusha jbe adc iret or mov ljmp fdivl mov xor or inc int3 sbb jg test mov pop mov nop mov or (bad) pop shll jno pop cwtl lcall pop stos pop mov adc inc pushf pmullw cmpsl imul sub xor out xchg sbb dec into nop imulb cmp xlat xor xchg pop add add aas pop repnz jp pop sub in insl insl shll rclb (bad) popf fistl rcrb iret enter loopne xchg inc dec sub test gs shrl pop insl pop in sbb push and sti outsl xchg fwait xlat mov rclb call mov (bad) out xor cmpsl xor mov sub dec sub inc pop or popa loop jg xor mov adc or test daa sub ret leave adcl incb popa or mov push popf xchg sub mov jo jp jp hlt std jg sbb enter addr16 or adc pop lcall loop jb out shlb cmp and jo mov ficoml das aas addr16 in mov jmp add iret push fild xor lods pop (bad) mov jmp decl lcall jmp dec xchg pop int3 iret (bad) push inc aas push das mov call ss pop pop mov cltd pop dec push jmp movb mov gs cmc fs xchg sub pop jmp push popf add xor fist mov mov fdivr or outsb lcallw xor xlat xor (bad) fmuls pop sbb dec orl negl cli mov cmpsl (bad) cmp cmpsl paddusb sub (bad) mov std mov popa add std sahf add jae dec xchg and es (bad) mov pop mul push cmp push jae lods cmp pusha imul idivb or call sub movlps movsb in inc sahf cmpsb ss jge adc or pop pushf push lods mov fldl or or lret out xor cmp outsl and dec add mull into or loopne and mov sbb and mov into cltd cmp sub mov cltd jg cmc xor jmp cmp jnp lds mov aas lcall mov add sbbl in mov pop divb sub pop cmpsl xchg jp lcall and add fisttpl xor lea mov dec xchg faddp shrb fs xorl insb add and jecxz loopne in or stc enter cli stos idiv bound jl mov sub jge jecxz push arpl enter repz dec adc hlt push jle and (bad) sbb mov in or adc ljmp xchg sti orl sub sbb (bad) jbe xchg jb sub xchg call aad push push ficoml push xor lea (bad) stc mov push jb mov popl scas sub push push lods stos jae aaa fdivs mov fldenv or dec jle mov cmp cmpsl (bad) pop jmp push xchg dec rolb jne sbb push out inc xlat and add push mov adc fist hlt daa mov pop mov jmp lahf adc out incl mov xchg inc sub push dec test int add mov bound cmp lds xchg cwtl and ljmp divl jo and hlt jnp sub rcrb in jo fcompl (bad) bound arpl jns fs mov arpl cmp mov scas add bound rolb and in jbe xchg jp push stc scas dec lods xchg ja cmp inc fwait and out ja out popa cmp leave in sub pusha push jl out das test inc hlt push (bad) stos push mov adc jno xor cltd sbb stos insb and sbb xchg or and or lods dec sbb add fwait push mov mov cmp jne pop ja jmp adc sti stos aad pop cwtl and pop orl dec (bad) mov xchg jmp lahf xor inc es sub inc aad sbb cmpsb xchg fbstp lock fildll dec jle clc pop fdivrs push xchg xchg (bad) inc arpl idivl xchg (bad) jno jp (bad) cmc cld arpl dec sub sub jne push mov add clc pushf sbb repz mov into jg data16 daa xor sbb jge jge jge mov test iret add push stos lahf and and subl cmp dec xchg xor mov aam imul pop mov loop shlb (bad) mov xchg jb xchg mov aam cld pushf adc xchg sbb arpl sbb in aaa jno jecxz xor jp xorl cli and sbb in lret leave jmp sub insl shrl stc icebp cmp cmp mov dec lahf dec cmp add daa cld (bad) mov pop lds mov pop and adc into xchg jmp push es pop gs and and arpl add jge jmp sbb xlat mov adc fdivrl push pop push movsl movsb pop into xchg imul dec test loop jge or sbb or sub mov mov das push sarb jmp mov sub pop ja lcall stos and inc (bad) lock dec movsb leave sarl dec lods add adc ret loop test idivb pop lock icebp add movsb jge out dec and pop loopne (bad) fs cmpsb out xor jnp call add aad xchg mov xor (bad) xor mov imul subl push sahf ljmp ljmp outsb ja nop aas fadds aaa int lods or in cmpl shlb sti adc pushf gs pop call es sbb fldenv xchg cmp jnp inc jl adcl push xchg jge inc or or xlat mov sub or cmp adc add sahf jb adc mov and call hlt push adc in aas jae fistp push mov fstl xchg adc adc fcoms int3 or or pop lcall notb or test jmp or sub fs pop pop loope lahf movl or cltd jle aas pop pop call movsb mov insb ljmp mov dec int3 daa fwait or sbb mov aam (bad) jb adcl push mov add sub cli imul adc fnstsw sbb inc lahf lahf cmpsb and push lahf addr16 fstpt jle cmp outsl xchg lahf lods test aad sahf or outsb push in (bad) fisttpll xchg (bad) adc lock inc mov mov inc push das dec dec (bad) leave fdivr int movl lods or fstpt cli mov mov push int3 mov xchg dec add cmpsl xlat lea pop add int loope dec int3 scas cmc dec adc jl mov mov test loopne test dec jmp adc icebp add lret adc xor in lea movsl and push xor add in pop fstpt outsb and rolb jecxz sub cmp imul jp lock nop pusha ret jg outsl push and mov cmp repz sub jge subl cli cmp mov lret sbb pop pop in enter pushf or cmp in sbb cs ficomp dec push adc mov int push gs jb inc sub loopne aas and sub cmp imul sbb (bad) cmp icebp aad mov rcr push pop daa cld and inc add cs stc jbe outsb xor hlt decl jae and xlat leave push xlat cmp and rolb inc inc popa inc lods or jb daa mov cwtl ret dec ss sbb add jbe mov pop jecxz xor lods and call cmpsl mov loopne lock cmp cmpl popa clc lock rcll lea lcall sub test int push and (bad) int3 xor enter pop into mov test loop les push pop and dec mov sub int or test test and gs mov enter insb or mov add adc aam test cmpsb cmpsb dec xchg outsb mov cmp sti push arpl xor cmp push inc inc iret insb lea jb cmp je repnz push mov pop popf shrl adc sbb pop frndint out notl mov sahf clts pop lock mov arpl dec sbb into add pop xchg cmp add or pusha sti (bad) outsb cmp fwait inc cli pop dec pop ja cwtl std clc data16 jne xchg pop orb xor cwtl int mov or inc or mov pop pop xor mov push dec inc or xor fwait xchg cwtl loop push test vmovapd pop adc jmp pop jl movsl in test xchg fstps push adc xor pop pop cmp fisubrl leave jg jae pop imul addl xchg mov xlat ja and test scas sti adc jmp dec jmp test dec dec loopne jge inc das lret sti gs adcl or push fiadd test xor jle pop mov add push lcall mov mov stos lret jl sbb scas movsb in enter jge lahf movb push inc testl rol outsb daa stos sub (bad) jl repz add xchg jns sbb (bad) fsubr xchg imul stc push in mov cli sarb outsl inc aaa ljmp insl mov out jae lcall pop popa les dec pop pusha mov loop jp and push mov jno imul mov fnsave movsl out xor jbe and mov xor repnz dec into ljmp jb test aas call add fadd mov pop repz dec xor fcmovne shll popf movsl push jnp xor add pop dec pusha sti popf pushf mov stos out pop mov mov inc test pop mov addr16 add xchg jmp das rorb sub cli pop (bad) jne sahf xor stos xor xor mov addl and imul mov sub cmp mov inc andl sub adc mov lret insb sub or dec adc inc outsl jae mov sahf mov adc js mov lods cmp cmpsl add ljmp mov xor shrl fcomip sub pop outsb jbe,pn mov pop xor les adc pop dec (bad) mov sub adc sub dec bound sti push fs or jecxz sub mov push icebp pop lods aad jne push push mov inc add imul (bad) mov cld jg rcrb or xchg in mov add (bad) mov or int3 sbbl lret and rcrl pop mov nop push out mov xchg movsl insb popf lds mov jns cmp cmp fcmovne nop fisubr jae stc xchg out cld aaa movsl ror test mov mov addl inc fs push jb sbb mov and (bad) inc outsl shrl or enter jge add aam mov sbb jmp inc (bad) hlt jecxz pop or inc adc ds dec sahf mov in sbb cwtl aam push cmp mov pop lock jae fistl mov mov lcall or ljmp sbb cmp sub icebp or fstp add inc icebp push pop cs int out lods dec or sub (bad) push mov pushf dec jns iret cmp nop aas mov jno das ja leave push flds push icebp push out jecxz xlat push iret lea (bad) cld push js inc pop xor lcall je mov jp scas or aas int xchg loope xchg push incl je test in sub cmpsb sub lret mov dec push push movsb xchg mov enter out jnp mov out popf in pusha ds cli jmp fcoms add inc popf popa fisub inc loope (bad) adc mov mov lret clc adc push jecxz xchg pop sbb jo rorb cmp pop repz imul popf mov xchg sbb cmc stc mov cli gs push xor out sbb sub push sub sbb ret daa mov xor inc (bad) and cmpsl repz (bad) or out mov jno rcr sti jnp add dec adc pop ficom cli dec mov addr16 inc xor pop push add jb mov incb inc mov fisubr adc cmp out cmp adc aaa xchg js add (bad) sbb adc je pop adc out cmp imul pop mov push inc loopne pop adc in xor mov andl lods fsts push scas push adc inc adc dec and cmp mov fsubrs fs push (bad) add sub inc je xchg xchg mov jnp dec pop in fwait cli add mov daa jge adc mov aad clc (bad) and movsb cmpsb adc pop cmp ret add (bad) repnz cmpsl xor into mov sahf lods addr16 mov or and xchg add daa adc sbb mov addb imul push cmp sub xlat (bad) hlt sbb mov jb inc insl pushf and inc jmp lret mov js xchg add inc xor aaa stos data16 (bad) scas inc pop jnp jne outsl pop shrb test rol in out les adc aas in lcall push clc stos cmp aaa dec and dec mov hlt sti daa xchg imul dec pusha dec mov dec xor fwait sbb pop jl stos cmpl hlt mov lock (bad) jb lods in les test push and xchg push cmp sub in arpl fnstenv sahf xor mov mov testb inc push xchg mov xchg imul sub or outsb popa movsb or lods loopne addr16 negl push leave push inc popf outsb sar loopne push or mov or dec outsb jne sub push xchg lahf (bad) and pop sbb (bad) aad shrl cli mov mov lret push sarl enter and fidivr orl jne lods icebp sahf or iret xchg sub mov nop dec push inc mov rcrl push test popl mov dec scas xchg push lret mov xor push int ror out jne xor arpl mov or nop pop push pop xchg jmp adc out adc adc fcmovnbe hlt push dec fimull cmpsb insb cmp cwtl enter mov out and push xchg mov lea movsl repnz call in sahf repnz ret sub test push aaa ja lahf in cmp fcmovbe mov add add push mov addr16 sti hlt lods fsubl dec pop add (bad) fsub fdivs (bad) and imul cmp loope ss push daa xor ja mov xchg addl mov dec cmp mov imul stos sbb int jle lcall dec fdivrl add push and adc xchg rcrb and daa (bad) aas sub cmp aaa mov lea adc out cmp and sub xor sbb and (bad) cmc pop in cli insb test add imul dec sbb lahf stos mov sub mov mul cmp into fsub clc enter cmp dec pop das add xlat mov cs test jp jl jns dec adc cld hlt cmp dec jb shrl sahf adc sahf je repnz es into cmp mov cmova lea test popa test dec out lahf (bad) cmp jo cmpsl jg int in aaa nop push loop jb mov lret rcr jp aas mov mov mov outsb adc into dec dec or std gs fsub (bad) mov lds sbb pop ss cmp loop jmp iret pushf lahf push gs pop gs in dec dec sub push mov stos in jmp jb and int ljmp ljmp xchg outsb popl cmpsb cmp test cmp (bad) jnp and imul jb push and sahf loop push int stc movsb cmpsl push (bad) fimul mov xchg rorb mov dec fldl addr16 or iret (bad) dec mov or (bad) jne push test xchg sbb nop cmp dec mov push insb inc and lret jp movsb xor dec pop flds scas test or or inc push in adc sbb cs lock arpl inc mov (bad) sahf dec inc dec pop movsl pop add and and jns pop jecxz fs mov push adc jne and push int inc push or mov xchg xlat xor or mov pop or (bad) ret ret insl nop jno and repz ja inc lahf xor sbb scas xchg mov clc (bad) push jmp adc push jbe and incl lods daa (bad) cmp xchg push mov sahf (bad) outsl add out adc adc fildll add mov xor fidivr sub (bad) je xor call stc push mov ror mov dec inc pop xchg cmpxchg into inc sub pop xchg jnp lcall inc inc (bad) out mov xor jmp add inc mov insl inc mov pop imull jecxz shl aas sti in add pop data16 cli mov scas push lods sub outsb and fcomps xchg sub int3 add inc jl inc inc push clc inc insb loop fsubrp adc repnz xchg push jg sbb insl xchg dec inc inc movsl pop ficomp xor push mov ljmp nop sub pop and out mov mov imul push iret movsl mov ljmp mov pop sbb rclb add fdivrp fnsave stc lret sub cmp rolb cltd stos (bad) fstpl pop mov movsl dec push add lret lods lock fistpll mov pop cmpsl fwait test (bad) cs cmp push mov mov pop test mov xchg push mov loop loop pop inc (bad) shlb ja mov mov add jnp loop pop test sub xor in inc les popa cmc pop fmull insb jge push into mov fwait (bad) xchg dec sti (bad) dec movsb hlt scas outsb test push push shrl mov clc xchg loope mov add sub sbb ja jg sahf iret mov cmc out je mov iret aas (bad) or cmc or cmpsb mov icebp xor inc movsb int jno aam sub (bad) cmp pusha stos (bad) fidivl mov pop xchg adc and pop sbb mov or inc repnz xchg insb (bad) mov jne dec inc sbb cmpsb sbbb cmp (bad) mov pop mov jecxz sarl pushf push loopne mov dec popf enter mov xor fmul mov push arpl add and dec rol (bad) ss mov cwtl inc jnp fbstp (bad) aas sub out and push push dec (bad) push (bad) jo cmp call push sbb push inc adc shl or leave mov imul xchg shll stos fmull (bad) push shr sarl jecxz jge cmpl pop mov ror or mov jmp js sbb push loope or lods cmc adc mov pop pushl ss mov jae (bad) mov xorl push stos sbb cli lret xchg dec cmp add sub dec xor xor shr mov (bad) push mov mov xchg imul rclb jns outsl jle jecxz adc daa jns movsl adc pop jne dec fs sbb jns aad (bad) cs enter rsqrtps lock mov cmp pop cld cmp push add mov adc in sub push ret popf add jbe rorb lods roll sahf aaa sub popf inc dec aad clc ret push xor mov aas out test ljmp shrd sbb jle mov aaa lahf insl loop mov xor pop jle mov cmp stc cmp inc jae int lcall aam popf ss push and mov mov hlt cwtl inc fcompl lret mov idiv fsubs mov mov divl cltd pop outsl dec dec pop mov adc rcrl mov inc negl mov add jbe test sbb dec (bad) in push sbb jb mov add pop adc jmp shlb outsb imul outsb and idivl (bad) rcr mov mov sub lea pop roll xchg or xchg stos scas jle cltd inc mov mov sbb cli mov dec adc dec mov adc mov push fldcw lods jmp sbb sub pop push jo cwtl push ret xor adc pop outsl bound sbb dec sub fidivl mov push fistpll cmpsl xor (bad) fs mov clc out out inc je and push and lds leave xchg mov mov mov adc or cmp push in and cmp adc shll loopw sahf inc aaa arpl sub mov push sbb data16 fcomps (bad) lock das and jns inc (bad) pop stos pop adc jne test mov mov fnop scas js mov and cs sub bound inc push in lcall fistpll mov ror (bad) mov dec push repnz and or xlat or inc enter jecxz sti mov mov and mov or xor ja fisubrl into fisttpl sarb push or sbb mov outsb test push ss je mov xchg sub in dec aas sbb and and andl popf ss test iret xchg nop push loope sbb pop test xchg arpl (bad) (bad) js add mov leave adc dec ret fwait add adcb (bad) popa (bad) jb or sahf arpl xchg pop inc cmpsl loope xor cmp jns sub fcoml lods jge insl aam add scas aaa mov add mov add push sbb cmpsl lock mov mov mov int3 fs rorb clc mov je sub loope mov dec (bad) mov or jno leave sbb icebp test fs out xor mov and in ja jl mov pop lods cwtl into pop jno and mov cwtl mov (bad) sbb cmp je mov sub jmp xchg (bad) xchg pushf (bad) leave arpl or repnz popf lret and mov aas xchg fcomp or add dec vmwrite gs outsb les into jno inc imul (bad) loop (bad) hlt jae adc aaa adc add jge,pn addb mov andl out xchg xchg loop in dec int3 (bad) mov (bad) jo loopne sbb inc and pushf dec cmc xor ja stos push cs ss fsubr sub loop add jbe lock sub mov aam fildl lea pop clc mull cs sub (bad) jo imul pop dec (bad) jne scas repnz movsb jne pop mov nop dec sub lret dec sub in fildl pop jp adc (bad) and aaa daa mov hlt movsl imul daa inc sub insb ja mov xor jnp cltd pop movsl jge or aam pop push dec inc roll xchg out adc rolb (bad) aam mov lock iret mov cld mov push out inc pinsrw fs mov jle inc pop adc inc xor (bad) bound xchg loop xor cmpsb shrb mov dec jb inc inc sub adc insl repnz in cmp pop sbb cwtl mov sbb in rcrb mov das xlat xor xor or int3 and repz cmp push rorl mov xchg mov fnstcw out fs addl scas cmc das test ss jp adc out addr16 in mov in pop cmp pop xor sar movsb dec (bad) lcall mov jge fcomp sbb cmc icebp popl and fldcw cwtl sub add mov (bad) aas loopne stos (bad) cld outsb out je loope push lods cmc sbb xchg mov movsl cltd repnz pop out scas mov inc out push cmp out cmpsl fmuls repz es pop leave jb lods scas (bad) shlb xorl mov pop in pushf cmp mov dec insl icebp push add adc (bad) add js orb sbb mov push leave data16 in arpl adc dec or mov mov je or lds gs jp or inc out dec or xchg lret cmp inc bound cmpsb sbb insl or cmp or cmpsb out (bad) pop imul and mov shr out inc iret out xlat rcrl test es out mov pusha notl lods push or pop xchg sbb mov cs cld mov cmpsl lret xchg repz sub rcrl pop lods icebp leave push mov gs add mov ret adc jg xlat jns mov xorl movb scas add repnz insb mov out outsb xor test add fidivl outsl mov sbb sub cmp clc jbe dec sbb or or fnsave mov and cmp lcall inc inc push into insb addr16 push sahf loop mov cmp mov insb xchg fdivr arpl (bad) out jae popa jae mov ret mov das mov outsl nop pop lods pop and (bad) mov (bad) iret fwait in movsl xchg mov xor mov xor call std pop jnp lds pop adc pop insb mov dec push ss add jmp jmp insb icebp and mov inc cli mov scas test add out xchg and pop push and lret das aas push out repz adc mov jns mov inc insl mov add or cld adc mov movsl ret push mov test sbb jne movsl xchg jl cmp nop sub cmpsb (bad) shrl xchg jbe cmp jge (bad) call and popa adc sbb adc imul icebp fstp sbb push and cmc sub or jnp fnstcw pushf jle sub sub pop pop imul imul ja negb cmp pop clc (bad) daa inc lret dec push jle in into aad into sbb in mov cmp leave insl dec mov or sti adc or flds push push sub pop xor push cltd ljmp jae sub minps sub mov push xchg sbb rorl dec out pop jl and jb push imul (bad) fstpt stos jle movsb js mov leave inc inc nop lea mov fbld mov sbb and mov icebp push dec pop sahf shrb lcall xchg lea cmpsl inc ss xchg xchg jno fild or cmc cld jae inc pop test adc fcoms jne or sbb inc cli mov ficoml xchg stc ror push ss mov stos lretw fisubl fnstenv and sbb xchg mov ret mov add bound (bad) mov cltd out xor pushf sub sti fcoms aam mov or loope add rorl into inc or nop xchg dec xchg inc cmc xchg xchg aas jbe push inc shl or push dec pop roll push inc cmp fldt fisttpll hlt jbe pop jp inc adc inc mov sbb add xchg ret push xchg aas cli cs stos lret fnstcw add mov cld negb jp stc fs and movsb fistpll and push adc xor xlat repz xchg fmull cmpsl mov push dec aas xchg sti push push ret out adc arpl (bad) clc or (bad) sub add je inc jle nop mov cmpb cmp add xlat (bad) in mov inc sti xchg dec aad ret in out xchg test insb mov lahf arpl sbb mov jae faddl ja cmp xor lods cltd adc xor xchg rcll in jne repnz ljmp test dec jnp push xchg rclb xchg fisubr imul (bad) das aas mov fldpi inc jecxz cmpsb movb inc pop call xorl movsl mov mov (bad) mov movsl notl add inc aaa fmuls xor pop stos lods lock jae lds pop push pop scas dec push lds xchg or inc enter mov rclb leave mov sub jo push adc xchg movsl jo cli mov iret jmp ljmp (bad) je xorl imul pop push ja fadds and fildl arpl push cli add mov jle lret push cmpsb mov call pop insb jb inc ds mov aad xlat loope (bad) iret pop nop sbb pop ret movsb mov lcall mov (bad) xor shr popf call push pop inc add insb and xor stos ljmp int lret jbe gs ja fwait mov (bad) aad xchg cld fmul jnp jnp bnd andl cmp push imul xor jg loopne pushf xchg imul call and sub arpl inc (bad) cmpsl test sti and dec jmp fmulp and jns test dec xlat (bad) xlat jno jno inc adc sub movsb sbb pop scas push pop add popf das decb mov jns xor push hlt sti xchg (bad) xor enter imul pop dec aas ret sub push shr (bad) test or out or scas adc fwait jl pop xchg adcb mov aam test mov push mov loopne es push cmp jmp das stos stos and mov dec ljmp jg push pop dec cltd jl ds adcl aas movd mov pop insl lods adc mov ret push push pop pop repz mov cltd push fwait pop fsts dec aaa sbb and in icebp (bad) sbb mov movsl call add out int adc (bad) push sbb cmp inc pop loopne and and adc mov xor inc faddl mov ds push (bad) xor push sub add nop and call jae mov ss out (bad) inc cld xorl fs aam loopne jmp cli fstl call into xlat out imul mov mov cmpsb icebp aam ljmp cli push jg add cmp lods add inc sbb sub add mov lea lret scas mov aam ljmp pop or and mov mov rcl mov fs in idiv (bad) scas adc cmpsl call test dec pop pop fwait add pop fs xorl mov sarb insb pop jmp rcrl mov loope xchg pop cmp cmpsb sbb jecxz mov ret xor add cmc cltd sub int3 jg daa pop push lock sbb inc pop ret stc roll sahf bound lahf arpl mov and push mov insb and dec sub mov and jbe insb xlat out pop outsb cmc outsl sbb push sub in sahf adc jge (bad) or fisubl mov push mov push push fistl and fisubrl in into dec test mov subl loopne dec cmp (bad) loop outsb and (bad) mov out mov inc xchg mov int3 insl sbb mov pushl cmp fidiv pop and popf ja aaa inc cwtl dec and popf popf mov hlt fwait stos outsb mov jp (bad) ljmp cmp inc sub dec movsl lret fisubrl mov mov inc push shl (bad) into sbb inc ret (bad) cmp leave jmp scas mov fld notl into out jno pop inc call or sbb insb shr (bad) sub arpl lods cltd or adc lods fistp xchg pop jecxz add iret xchg mov push in sbb outsl (bad) sub dec jge outsl adc hlt push mov lds xor xor jae inc stos (bad) mov sbb jne push push imul push or ljmp xchg fidiv push dec enter or push fistp cltd gs push xor (bad) enter jno scas and stc fdivs in test cli fadds mov mov inc clc mov out mov add sub and into xor or loopne add dec and sbb and jle scas les icebp idivb adc pop cmp icebp pushf add jmp mov mov in mul adc test push push or pusha push cmp pop sub jl cmp stos sub push dec mov gs push outsb mov lods (bad) aad int3 mov outsb sbb xor scas inc or dec mov dec xchg push lock push js lret repnz mov test mov adc mov je mov jmp sub mov xchg fwait mov mov push aaa add (bad) out dec mov scas inc push cmp cwtl int xor mov cmpsb dec outsl lods lods or lds cwtl sbbl xchg pop je xor fcomip cwtl sar pop iret cmp mov scas cmpsl imul out xlat call icebp dec mov or adc add int3 rcll test lahf jecxz or pop (bad) std mov (bad) jg xorl inc out jo into out stos pop push jmp testl xor sub dec pop in clc jg and test xchg cs inc es pop in jg popf and (bad) ljmp int fmull or (bad) lods aad out pop int ret ret or pop gs sub test pop xchg xchg repz pop inc lds push sbb mov outsb xchg mov inc push pop jne or (bad) push push xchg jecxz repnz (bad) jmp dec mov and mov test mov xchg lret sub jp mov xchg movsb mov add inc in dec loop jecxz scas into outsl push in shr stc mov add mov aas pop out sbb stc pop fsubrl mov xor and daa scas ljmp cmp xor push mov adc lock dec cmp or mov jbe pop jne or fs mov cmp sub xor out or repnz cli inc mov sbb inc cs mov and add cli out mov jae push daa mov loopne or inc xor test xlat popf rcrb pop mov push icebp push add push and fidivl and inc sub pop xor cmpsl cmc movsl rcrl je xor sbb popa pusha mov xchg pusha enter or (bad) lock push mov adc fwait cmp es in les bound lock jns pop lret popa sbb (bad) inc inc xchg lods leave mov pop lret push data16 push (bad) xor jmp fstl xchg pop pop xchg adc dec rcll pop pop bound aaa add dec fnstcw pop lcall pop das xor xchg dec cmp and push or nop movsb adc loopne jle xchg adc stos mov es xchg scas cmp outsl jle pusha adc popl adc arpl mov movsb add gs mov and jecxz adc inc pop push lods outsb lahf inc push out inc outsb push rcrl insl mov cmp mov mov jb (bad) lods mov mov mov push test ss jmp sbb xor data16 loope sbb xchg xlat adc lea adc jb sbb add cmc lret scas pop jo ja bnd sub in rcrl and sbb push or fsubs outsl lock hlt pushf inc popa insb jb adc cmp mov (bad) and push pop sub cwtl xchg dec dec jl xor xchg rcrb xchg cltd xchg or fsubp pmuludq movsl ficompl subl cmp sbb mov lahf (bad) or pop int3 ret rclb jns mov xor (bad) mov (bad) (bad) cmc add add sbb lret xchg fimul dec js add jae sbbb fist inc fild xchg aam xchg and iret jecxz or jno inc lret jnp xchg outsl into aaa popa test arpl mov dec lock push sti and push test dec test push rcrb cwtl (bad) pop lret jmp mov sub xchg es mov pop sbb in std xor test jge push add pushf adc pop push adc shr jle push subb (bad) jo pushf cmp rclb mov push xchg aad mov adc movsl push jno dec sahf scas and fmull int stc xor addr16 push adc scas int or and test lret cmp fidiv ja pop stos jno mov or dec inc xchg in addr16 push xchg outsb sub jno xor push (bad) pop ret leave push ficoml cwtl sbb imul xor lret sbb adc shll inc or xor (bad) les bound jnp inc adc push or mov sub mov mov mov dec sarl clc and and add mov push cmp inc ljmp or mov inc mov push sahf mov sbb xlat push mov aas push xor loope scas xchg aaa jmp jp scas pop sbbl pop adc push mov add pop movsl ja pop adc sub xchg xlat dec (bad) (bad) mov mov rorl imul cmp mov sub lock inc nop mov mov in addr16 xchg out mov mov add loop push (bad) pushf imul daa daa jl xor pop or cwtl imul cmp in movsl inc ret add addb sub pop push fcompl xchg sahf addr16 lods xchg dec stc push inc in or outsb cltd sbb lea incb push mov (bad) dec adc inc push adc roll or sub fs mov mov mov sub pushl jbe adc cld (bad) je loopne mov push in pop inc dec test sub (bad) aaa iret push (bad) jne mov mov repnz cwtl imul jns mov sbb in dec imull rcrb ljmp rorb fnsave andl aam pop test add xchg repz lahf dec jno jns imul mov lods pusha lret push (bad) rcrb test fdivrl adc xor popf testl or or enter fsubrs repz xchg pusha mov arpl es scas pop bound lds push je jl repz jmp test hlt inc clc sub ds mov adcl push adc idivl (bad) mov gs add adc clc ret in cmp out sbb pop adc xchg insb lret out js xchg imul mov fsubrl dec rorb pop sub add lcall xchg add cmp pop xchg sti adc add mov popa cmp call push or dec ss xlat push cmp mov aaa js dec flds push pop popf out mov popf inc cmp jo test cmc mov inc sbb pop aad sahf shlb pushf daa adc inc ja adc into jo add push loop,pn insb je ljmp inc pushf pop inc pop in lock dec std mov pop adc jl or test call into mov sbb int mov mov and mov mov push add outsl shrb mov inc xchg fdivr jp fnstsw popf rcrl dec pop test cmp (bad) jl roll jmp jo dec or mov adc mov cltd repz fcmovnbe xchg lods bound push adc loopne mull sub cld push pop xor insl lret inc mov bound cli fisubl push jmp dec push inc fldcw ss fidivl xchg mov cmpsl xchg imul jnp sub ror shlb inc mov addb aam pop add jb sti or adc ss sub push sbb bnd insb shr adc xchg mov xor mov ret push inc daa gs cmc add mov in cmp cmpsl mov mov pop push decb mov data16 mov add pop jmp leave adc xchg jns inc mov jo or sbb lds stc cmp jp pop adc mov adc jb out dec add push xchg jne mov jle or xchg mov icebp jbe test bound lcall mov and fcmovnbe dec (bad) lret icebp xor je (bad) mov mov push xor (bad) mov add mov jnp lret add (bad) and sbb xchg in jl aad rorl pop add and addr16 (bad) arpl fimull aaa imul cmp mov jmp cli stos mov jmp bound xlat mov cmp lock ret popa pop into push mov cmp cwtl ret adc xchg inc jae or mov sub push hlt cld push (bad) into push jp mov movsb fcoms pop rorb inc xchg sub push pop xchg push les orl loope mov mov in outsl xor pop mov mov out fbstp mov jecxz fmulp xchg pop in xor (bad) ficomp push mov lea cmp fcmovnu xchg rorl daa negb pop neg icebp pop movl cs movsb and ja push call movl jle sbb push push cmp out mov adc enter cltd cmpsl test mov nop in mov (bad) (bad) ljmp push push addr16 inc packsswb sub sub loop sbb dec adc push and cmp dec outsb jg test imul jo ret sub inc add jp and aas sbb lock (bad) mov cli mov frstor pop mov xchg test mov sbb jge inc jg cmp repz test popa int int3 mov mov or cmp out add fs int3 inc inc stc cmp push data16 mov je in lret aam lods cs dec mov lods mov icebp mov jecxz pusha leave mov or mov cmp pop repnz imul inc cmc in push insb divb xchg call sbb es sti mov bound mov sar popa outsb jae xchg adc and sbb push stos loop sbb pop mov addr16 pop shrb outsb pop cmpl (bad) fwait adc mov or add inc dec cmp ficomp add inc inc (bad) ja or jmp pop sbb push dec push cli adc stc add push daa rcl add popf mov dec hlt mov fmul push push push bound lahf je vcmpps cwtl xor out and add inc hlt test pop mov iret dec pop shlb sahf add jg dec jno clc mov add pop and (bad) xchg xchg add cmp es mov fistpll lcall xlat fmull and add and inc sbb in adc add cmpsb sbb and dec sub mov sbb or insl (bad) enter data16 mov sbb mov fist and dec or psadbw fcoml and push mov and fs xlat std inc icebp loopne inc inc lret push call ljmp jl dec mov cmpsl dec sti inc sbb insl add test pop stos cwtl ljmp sbb dec mov cmp in push mov jl bound or xabort dec xchg cltd or popa pop push mov sbb insl push pop nop or imul mov pop jo enter fildll jnp (bad) and xor lcall imul jbe adc lcall push mov js leave mov call loopne xchg addr16 lods dec div ljmp inc xor in and mov in xabort nop loope pop jb subl adc mov add jne imul push mov lds or and test push call int fwait popf aam cmpsb cli incb ret xchg lcall xchg cmp popf mov adc mov lods jo lock or fstpt mov add std ss out data16 cmpsl daa outsb inc shrb rcrb stos add loopne dec sbb std sarb inc andl shrl sbb mov sbb cmc jno das lds gs cs movsb jbe mov lods xchg sbb cltd sbb or xchg and mov push cmc je cmp stc aaa shrl cli (bad) repz mov or ret imull loope dec jmp xchg fnstenv inc jle sub jnp scas sahf shlb cmc arpl sub lea xorl xor pop ljmp lods adc clc pop push stos cs imul mov mov mov xchg outsb stos imul fnop or insl sub cli push jnp clc repnz cmpb imul sub fs inc mov and mov mov pushf cltd mov loop adc dec push or enter dec divb (bad) rcr roll sbb mov mov xor mov xlat dec fimul pushf jp scas scas scas fs sbb je inc jne or pop cwtl in popa jns into arpl xor popa adc stos movsb popa lods sahf mov in jnp (bad) jno call or push mov lcall or popa xchg dec gs stos pcmpgtd cltd cld sahf lahf xor push mov jecxz cmpsl and sbb das es (bad) adc outsb xor bound (bad) lret stc (bad) pop test push dec sbb or mov shrb ds and js aad clc dec cltd pop scas jbe (bad) out xor inc push test sub test mov das mov xor je lea mov jb out mov lea push sbb addl fwait incl cwtl lahf aad test sbb mov mov sar scas jp aas sahf sub (bad) jecxz xchg inc cld sub mov adc iret sub das push jle and xchg pop jno dec loopne mov and shr xor mov mov xchg repz cli lock dec xor movsb hlt hlt cltd outsb adc mov ficom sub inc int es mov or xchg jge imul xchg or hlt scas test jecxz mov (bad) xchg dec rcr iret xchg imul insl cmp fisubrl lcall inc fstpt in dec popf movsl xor xlat mov mov arpl rorl cltd movsl movsb sbb jne xor cmc mov inc lcall dec cmp dec decb xor push mov mov cmp popa test in pushf pop sub into adc jns clc imul push mov dec out aaa sub mov add aad pop add pusha cmp xor push loopne outsb sbb icebp mov insl jno ljmp (bad) loop inc insl jno mov cmp push sti sbb dec push or jl xor and in and pop xchg int3 outsl scas pop inc popf fwait jo cld pop mov or cmpsl mov mov pop shll adc xorl sbb (bad) pop xchg fistpll lcall out in movsl xchg pop scas add add (bad) xor aam mov fisubr shll cltd outsb shlb lods cld push jbe repnz sahf or xor pop rcl loopne in repnz or bound xor xchg dec cmp fucomip lock into ret jbe xchg sub outsl mov pop or add pop jecxz sti cld popa ja movsl test cmpsl roll stos mov cwtl sub mov out ret or inc sub dec xor mov cmp add jno pop ret je and dec sahf or pop lds xchg jl and add push aas and cld jbe sbb mov gs out push push (bad) aam xchg lods nop cmp jmp (bad) cltd push ret cmp outsl daa std mov sbb xchg imull cmp jb test ljmp bound xor mov dec jb sub hlt int3 fadds rorl adc in call test fdivs cmp mov lock pop sub add shlb data16 push xchg inc sub xchg pusha xor cmpsb in cmp mov push mov or add xchg loopne dec push and rcll or xor hlt cmpsb lock ficompl ss in movsl mov mov pushf dec xor fimul and addr16 movsb aam pop mov mov jge mov dec lock or test mov mov or or xor (bad) mov aam dec imul adc adc jae (bad) ror sbb cld push shlb push xchg inc (bad) clc jl xor std in mov pop push imul bound and add aam aad or jmp cmp arpl outsb js adc pop or scas aaa add fisttpll pop std daa add mov (bad) movsl adc xchg pop push fimul sub mov fcomps add das jp rep je jg,pn inc pop cmp call fistp pop cmp jmp inc leave mov cltd (bad) jae xor xchg popf lock dec in lods std je jae imul fucomip aaa aam lds inc dec das mov (bad) jl push loope call repnz in sbb data16 arpl cld sbb mov push xchg (bad) xor pop adc iret (bad) lret or jo mov mov pop icebp push sti pushf (bad) out fldenv jge out xlat lea cld xchg mov inc in shl pop xchg outsl ljmp push jge xor aaa pop add dec mov add scas inc cld fwait push movsb insb add (bad) pop enter insl pop stc mov or pop push scas xor out cwtl hlt and pop mov jmp cmp insb xor cmc push out push in in or or arpl js add fwait leave (bad) lods jno movsl or sub pop inc push sbb or into nop pop or mov xor xor mov mov fs jae ss cmp stos push or into mov xchg jg push adc cmp or decb mov pop add out mov add jl aas ja rep ljmp popf mov jp fistpll inc mov jae push lret scas popf (bad) lcall cli mov xchg ret (bad) ljmp lock push js inc mov sub bound inc mov mov outsb mov and and ret push add das push jp addr16 aaa jae or adc add xchg sub adc sub cmp js fs mov lock scas cmp fcomps out mov sub fsincos inc fnstenv pop out adc adc movsl pop data16 mov dec xor and inc and pop outsl mov mov cmp bndldx fwait adc adc cmp iret jne shlb sub movsb int3 cs incb outsl mov and (bad) mov cltd cmp sub xchg mov inc pop cmp cltd scas pop cmp enter mov jle nop subl outsb (bad) das outsl mov mov movsb mov lret iret fsubrs xor imul lods add dec cmp testl and jo mov adc inc cmp out mov jmp data16 jl icebp pop lock std xor adc jns push loopne mov js cli inc dec jge jl int cltd jp and push add cld mov jne in dec popa js pop push in in and in cmp repnz jae xchg (bad) xchg daa outsb push nop fstpt cmp push insl call mov test push in cmp cmpsl (bad) stc dec dec sub sbb cmp aam xchg loop sti pop fsubr lock movsl and jns jmp cmpb ljmp and leave jno cmp dec inc call or dec add pop mov in jp pop cmp hlt sti dec add std xchg sahf mov sub stos inc add xor subl pop xchg (bad) loop imul mov jle dec jo and push pop scas inc adc push pop push lret jg out leave dec jb jp fdivl mov push sbb outsl cmp or loope jmp in inc test leave jae cmpsl mov pop icebp mov fstpl jle adc dec sbb dec movsl adc shr push (bad) movsb sbb mov jecxz popf pop outsl adc push sbb ja jbe bound rol and inc imul sbb aas aaa bound pop out jnp mov popf pop arpl cmp adc stos jmp in rol cmp loopne push inc iret outsb pop sbb jmp les scas imul cltd loope mov lahf (bad) aad test insb popf das mov adc (bad) mov jnp dec daa (bad) icebp call fistpll lahf jo push add xchg std sub pmaddwd pop xchg push jbe mov dec lahf mov sahf push test xor mov dec mov bswap fimul insl cmc jae stos push call dec lcall mov mov mov pushf mov aam iret pop xor dec (bad) clc adc cmp jmp push test test adc push in mov adc out adc cmpb insl jecxz popa cli mov es pusha sbb mov aaa sub (bad) jnp or imul mov mov jmp rcl push add loopne popa (bad) shrl sub or xor (bad) (bad) aas inc pop jmp cli xchg int3 xor rolb mov in mov dec jmp pop cmp mov push test (bad) mov pop rcrl int sbb xchg pop aam je push repnz dec jp pop scas out mov (bad) pusha aas stos xchg lahf cs lock jg push jp xchg sub or popa pushf dec imull mov mov push sub popa iret mov std mov popl fistpl inc adc and int mov pushf out lock (bad) movb pop pop push jns adc sbb push ret mov and rorl (bad) jg arpl push cmpsl dec in dec loop pop in daa cmp dec lret (bad) dec dec push rorb hlt mov add iret outsb jae ds (bad) mov repnz cmc pop jle ret ds mov in xor inc or dec xor insl jne mov mov fs arpl jl adc add xchg jg les sub inc xor shl cmp gs (bad) cmpxchg (bad) or dec mov cmpl gs adc or mov call stos cmp (bad) (bad) (bad) mov aad or repz or mov sub pop xchg and lret aam daa push adc incb or in out jnp or jo push cmp lret es sbb xchg lods add daa pop fwait push das inc jp in push push jne cmp jae push mov (bad) cwtl and or xlat sbb das xchg pop dec xlat es pop and inc rcr out stc aam sti pop int notl iret icebp (bad) jb aam pop mov mov repz hlt add das movsb push mov pop push push in push iret lret fstl pop inc ret repz push or push pusha cmp stos je ret sub dec or test ss scas out cmpsl xchg scas movl push xchg and pop in call in test leave rcll xchg sbb jp imull and mov mov loope rcrb ljmp push lahf jge mov cmpxchg push imul es add inc ret inc jns mov mov clc lahf outsb aaa dec (bad) mov clc inc pop jns add or jno (bad) xlat cmp xchg sbb mov shld sti sub adc xor pop sub enter mov push nop (bad) icebp push or jbe or repz sub sbb das and jp iret push xchg jmp adc jnp fcos invd loopne rcrl inc jne jp insb (bad) mov pop jno mov xchg mov pushl dec adc inc and mov push pop pop adcl lret in dec aad or repnz xor clc mov or mov fisubl inc pop pop xchg cmpsl mov xchg dec add test (bad) enter pop xchg fistl daa adc pop sub jge jno aas dec dec pop add mov mov xchg bound js mov pop sahf pop (bad) xor in and push jge pop xor mov stos pop dec mov xchg gs ds push out repnz icebp inc mov lea lcall mov bound dec mov daa xlat pop popf vcvttss2si mov scas cmp mov mov inc sbb rcrb es mov add cs cld es clc (bad) pop ds cmp xchg lret adc mov aad pop fildll jle call xlat int3 add movsl xor push repz add adc sbb imul inc jbe jle dec push cli mov loope and pop sti jp ds daa add mov aas fwait mov mov (bad) mov andl cmc bound mov (bad) xchg xchg scas lret cltd and fnstsw inc dec dec push mov xlat iret push lds lods sub push sbb mov adc and in pop sbb hlt iret pop xchg js adc xor (bad) call out jl xchg and xor xchg cli mov xchg (bad) sti aaa sbb dec sub mov (bad) or sti cwtl cli int3 xor push test pop popfw (bad) enter movl jmp mov push ljmp loop fimul mov sbb leave mov pop (bad) mov (bad) push sub sti stos (bad) fmull inc jno mov inc or xor mul jno fiadd and and mov sub stc pop push std jae cmp (bad) movsl orl xchg and sub icebp lahf rol insb mov rcrb inc mov xchg inc ljmp push pop loop sub addr16 test adc ljmpw call adc mov negl lock pop es and lea stc rcll inc std mov out insb mov mov jecxz or enter je xor mov adc push stos dec les mov out cmpsb xor (bad) jno sbbl mov pop sbb fcmovnu scas ret insb (bad) test aaa rorl and js mov sub repz loop push loope and push add and inc scas fdivrp fsts xchg adc loope in ret insb pop fiaddl cli inc dec xchg enter adc push add dec mov mov jae iret nop insl xchg inc sbb popa icebp mov stc xchg lods insl mov pop cmp lock mov cmp inc and pop movsb stos pop jg icebp and dec push cmp and insl lret cmp hlt loopne mov test jno (bad) adc stc pop sbb xor or sub std xchg int3 mov or adc sbb and adc push push (bad) adc jge dec ljmp lahf fimul movups out scas shll add test roll mov push lret (bad) or repz sahf cmp aaa sbb test stos dec mulb popf lcall cltd movaps (bad) imul pushf fadd xchg mov adc hlt cmp aas mov repnz push sub xor outsl pop cmp dec stos rorb adc pop mov cwtl rcll xor arpl jg or stc mov xchg mov dec cmp push movsb mov outsl in xor xlat pop add lret mov and pushf sub cwtl pop loopne xchg jl pop xor gs sbb mov mov push cwtl mov push fcompl int das pop inc jecxz dec mov pop orb mov mov or push xchg ds movsl pop lahf out or sbb icebp mov push inc sbb push or int3 adc stos dec hlt and pop push fiadd scas mov sub mov stos and mov mov sbb fist cltd test das insb test mov sbb cli pushf cltd fcompl es pop or xchg cmp mov sbb lods cmpsl cmc xor xor jno inc mov out ret jp pop out lcall imul mov in push enter in push adc sbb push icebp mov sbb mov icebp stos sub jl xchg dec mov sahf insb pop (bad) (bad) ja enter popa mov (bad) push jns sub sbb push add sub jnp add inc aaa inc push cwtl xor cmp daa movsb test ljmp mov sti xor addr16 jnp aam cmp or jno mov test es loop xchg jns mov test imul aaa ret jnp adc adc push mov cwtl (bad) jbe pop pusha fcmove iret pop lcall das aad ret orl and test js movsb jne cli movsl stc add adc rolb sbb mov or or iret cwtl mov aad test xchg lds ljmp and mov movsb sub inc pusha adc add mov outsb fdivr aam mov or xor mov inc imul (bad) pop push (bad) mov inc (bad) push rcrb outsl lcall push cwtl push loope fnstenv push mov data16 push or mov shrl inc lock adc add dec rclb aam pop push sub bound jbe pushf pop mov std in xchg out repnz and jl xor mov orl out das push jmp pusha scas (bad) dec rcrb and or push cli mov adc mov jl scas or pushf ljmp ret mov mov std or (bad) out push dec cld or decb popf push jg ret sbb push in pushf dec mov es or jmp sub sub xor pop mov pop jb and inc loop scas out and push mov insl pop fucomip xor stos aad add sbb cmp ds fwait add dec mov jb adc or mov fcoml add scas daa shl xchg inc cli jle jae ja add les out push sub int dec repnz pop xor ss daa lcall popa daa out cmp mov inc andl xchg mov popl data16 push pop inc push mov xor push mov jno pop jg subl cltd std call movsb bnd xor sub xchg xor ds and lcall repnz xchg cmp ret mov push dec sti faddp fcompl je xchg sbb and dec pop jbe outsb xchg scas clc cmp imul jg lds xchg jns mov inc inc lods pop roll ja inc inc inc test shlb lcall lahf cmp ljmp dec lods add and sahf xlat sub xor mov mov sbb sub xor adc xchg cmp cld test aam jg push jo adc imul mov lods test sub and pop mov stos xchg popa dec inc addr16 jbe loopne dec mov movsb sub and fiaddl in (bad) or xchg mov mov int3 enter out adc pop fimull jb shll xor jne jl addr16 out outsb inc fucom pop mov mov xor sti popa cli push add pop jecxz sub ja mov add (bad) call out scas fstpl and ret adc bound lahf insb (bad) mov test lret or ret test imul adc inc jb pushf and push dec (bad) mov or sub xchg push lcall mov sub sarl lret jb aam pop mov cmpb or jmp clc add fcmovnbe nop xor xlat push pop (bad) ds dec test out push lock (bad) loope fldenv lea cmpsb xchg insl jge jle arpl xor aad (bad) pop cs jbe stc pop inc jae jecxz sbb sub bound push cltd jecxz xchg aam add jmp push mov cmc ret hlt inc jb gs push inc push rolb test lret out pop jmp dec adc int3 sbb out dec daa pop in mov xchg dec xchg jo jp loope sub repz mov (bad) pusha cmpsb lcall adc bound (bad) mov outsb push std jbe gs fwait xchg pushf mov lret add push aas mov ds cmp stos and aas inc mov ja fwait test pop inc sub test xchg add aas fnstsw insl pop aad lock cmc lock cli jne and rolb fiadd cmc cmp mov mov pop clc in xor lock fistl aad lret icebp mov mov lcall (bad) or aaa dec sub mov push movl sahf test out test and dec dec add pop pop push outsb dec xor dec loopne pop jmp icebp addr16 in add inc adc fsubl not push cmp push mov jno inc cmp movsl jmp movsl fcompl jge mov mov fs dec lods jle mov lcall add pop imul xchg inc jo adc int in pop push sti dec push (bad) nopl arpl out jns add push pop mov iret out push add and out aas cld cmp inc sahf mul sahf rorl and mov sbb aad xchg xor jo das lcall or lods es (bad) sahf mov ljmp sbb pop mov mov adc inc inc lcall mov jle call jl push pop pusha adc int inc clc jmp jo sahf mov jmp and frstor or (bad) (bad) jg inc sbb xchg pusha push dec cli les dec js and jno xor decl imulb stos cmpsl fmuls sub lods xorb movsl xlat adc xchg jb push or loopne or pop loop arpl push mov jbe cmpl jae fstpl mov dec and into or mov insl std jns push outsl data16 mov mov adc lock xor lock pop mov cs dec add (bad) fistl mov adc mov rcl inc jb sar push add insb or mov sbbb test push ja lods icebp adc ret add inc lret xchg and lods cmp lcall stc cmp pop pop push adc xchg dec jae test gs mov sub mov push fsubrs push cmp in and addr16 jmp js loopne pop imulb lods test add push mov iret or js sbb pop popa inc push mov es jp (bad) test pushf xchg inc negb sub jle loop fmull fldt ds pop (bad) xchg xor mov cmp stc stos push aaa loope repnz test adc dec popa lret (bad) cmp jle adc repz rcll cs jbe notb les in jmp sahf push cs add arpl lock xor fisubrl adc aad mov adc loopne and inc inc out xor pop gs sbb jb imul and aad sub daa fildl xor shlb xor jmp fucomi sub bswap (bad) jecxz pusha scas cmp xchg test xlat out imul (bad) outsl gs lret iret and (bad) jbe js push ljmp lcall jg jp jb int ljmp fdivl or ss repnz pop cmp mov stc or mov jno sub idivl add dec adc jmp fist fs ret add rclb imul mov insb dec call daa dec loope fildll adc nop stos push mov cmpsb adc shlb cwtl push nop mov jne xor cmp pop lcall fs sti mov ljmp pop scas mov mul lods repnz cmp call cs loopne in inc xor ret test (bad) xchg sbb icebp rorb inc pushf (bad) mull fwait ret cmp or lret pop hlt dec pop mov mov xor cmp mov cmp push mov mov cltd addr16 jmp xchg lods sbb test lcall daa cltd jecxz outsb fs lods out movsb dec cmpsl add lret in movsb xor ja mov xchg dec mov jmp inc call out add add popa mov mov pushf xchg add in lret cmc in adcb sub sbbl mov and ret xchg cmp mov inc aad cmpsb dec lds pop cmc insb adc xchg into xchg push dec test mov (bad) pop pop sbb outsb addr16 fs pop sub sub mov mov inc adc dec or xchg pop sbb sub jl ds add mov jno and out push popf mov js test lods outsb cmp xor (bad) xlat xchg pop insb inc fs cmp in and std or xchg mov ficomp sbb jo mov test adc xor pushf or icebp and sarl popa inc xor (bad) stos push loop in ds inc flds dec int jo jge cmc sub imul mov pop fnstsw out idivb inc cmp jl push in pop (bad) js push pop and jo fucomip scas das addr16 test sar mov lret xchg mov xchg inc pop insl push mov mov scas fcompl push or ret lods xor repz inc jno xor in hlt sbbb push push ds inc cmp jle pop inc cmc dec (bad) push add (bad) mov ja insl pop mov repnz aaa adc push sahf lods ds xor aas xchg rcr in aam jmp aas pop xor (bad) or adc fs xor rcrb cmp imul test (bad) popf adc addb test cwtl pop mov xchg call iret ljmp popf ret or stos (bad) cmpsl es jbe or rorl cmpsl rolb out and jb dec into add (bad) and jge pop and fidiv loop mov cltd mov out sbb incb divl inc cmpsb in hlt aas sarb ds cmp mov int3 call xchg lahf sbb out je std xchg fs add arpl lds push push add pop inc cmp cmp add (bad) pusha outsl adc sbb dec mov call mov push push ret ja stos faddl xchg (bad) popf sub movsb sti or xchg fistp sub int test dec pandn pop pop mov or inc and gs cmp sub imul pushf mov (bad) pop lock or cmpsb fcoms dec dec xchg xchg xor push mov fadd and lahf stos jb or (bad) (bad) cli jnp cmp xor popa cmp and loopne aad leave dec loope sub push xchg adc movsb fwait and cltd (bad) inc mov xchg mov jnp arpl das add (bad) push mov inc dec cmp adc (bad) or add pusha adc (bad) fstpt (bad) adc cltd imul push mov fimull mov test adc add and clc dec jbe fimul adc pop fwait data16 adc les sub inc push decb pop push mov pop outsl cwtl fldt cmp mov jg jno mov cld stc mov xor lret mov xor shrb add mulb dec add push add inc enter pop out aam ljmp push xchg clc jns ss mov (bad) aaa xchg xor jb dec push mov fsubrl pop xchg xlat xchg cmp cmp and (bad) ficoml bnd or dec pop sarb lcall jp fsub cmp sbb xchg (bad) (bad) popa fs mov enter dec mov roll dec sbb fcomp std mov sub ret fadds scas add dec cmp dec jo imul push push dec es ds add insl into push push pop pusha pushf lods popa pop fsubs iret adcb xor cmp aas sub jne ret or scas inc out mov adcl add inc or out cltd mov jne dec dec xor les mov fwait ds (bad) int3 fcomps and or xor sub sub mov aaa ja imul cld (bad) cmp int3 mov and loope cmc fst inc cmp jmp dec out mov add jecxz or mov lret or cmc cmp cmp mov dec nop jae dec cmp push xchg aad adc dec fnsave xchg and pop mov inc cld cmp xor or inc sarb ja aaa jnp or mov adc mov add test xor insb adc scas inc adc cmc loopne stos dec mov (bad) test push xor pop jne divl pusha or push or fistl cmp out mov out les aaa pop lods add test xchg fs cmc addr16 and dec push fildl adc daa test mov leave icebp inc xchg fs xchg pop and inc inc pop movsb in mov sub mov (bad) and sub xlat loope outsl test or or ret out stc add adc pop sbb push push dec (bad) dec rolb jecxz das inc pop es lods fwait (bad) mov pop mov test inc cwtl adc push jae fimul les int3 pusha and xorb adc pusha mov mov and testb fcomi xchg movsb mov lea aam cmpl in push jnp push test ja lret into mov inc sti push xor mov in es mov push in adc cmp outsl das les imul (bad) cmc in in or into negl cs or daa lds mov (bad) and mov insb push insb and sub add xchg loope int pop adc xchg (bad) push pop popa adc gs jne jmp lock sbb inc or and cmc xchg in mov (bad) icebp xchg jo sbb movl cmp in mov pop call test jmp jge jbe pop scas les jg jge pop mov ffree loope dec pop sbb out push sub mov lds mov fistpl push cld pop bound inc enter mov es ljmp test cs cmp gs adc mov data16 aas (bad) mov mov aas add adc (bad) mov into xchg out shrl cld lea addl inc mov sub rcrb sub outsb mov mov lods vminsd stos dec push pop cmpsb inc movsb outsl frstor adc adc cmpsb and sbb mov xchg and sbb inc inc push out or es or sub inc out mov aas outsb decb sti out jnp and mov mov repz and xchg and and gs (bad) sub outsb pop ja jns pop adc dec mov lods aad (bad) mov int inc stos aam (bad) fistpl std ss sarb in icebp movsl push inc add push dec out cmp je xchg mov lret inc popa popf and push in jno and loopne lods dec lea jbe js jl xchg inc mov jns (bad) jmp fisttp dec call mov and aaa fisttp rcl and cmp (bad) fcom and cmc adc cwtl fwait mov pop xchg out xor jmp xchg aad ss mov (bad) aad (bad) lds aaa (bad) fbstp ljmp mov lea je xchg pusha pop cwtl test (bad) mov xor adc pop sbb cmp and or add mov pop xchg adc dec pop sbb pop das int imul popa outsb xor icebp ljmp daa sub daa xor fdivp or mov inc cli dec xorl fisubr inc push push sbb outsl das stc and enter add fdivrs mov dec xchg mov aad cmp sti or mov xor push lret jae ret xor xor push ret sti popf sbb outsl and testb pop inc les out icebp aas xchg pop pcmpeqb clc (bad) and jne sub out ret outsl cmp pop test jno pop mov pusha lret jle test out jge mov jg mov dec cs and and imul test add lret frstor les jns dec popf std dec mov jge pop fadds jl outsl lods xorps dec mov xor fidiv stos test imul mov in int3 pop ret icebp out ja (bad) call call in insl xor jmp adc or sbbl jmp add gs fxch sub pop mov xchg jns outsb jle or cmpsb test sbb xor sbb (bad) pop test xor sub mov das test push pusha mov lret (bad) cmpsb adc mov cld sub lret (bad) xor dec mov lcall and xor imull les loop inc cmp adc jb xchg add push xchg xchg lret ret sub in dec or stc push rcr iret mov and jmp cmpsl repz popa leave push popf addr16 sbb test mov flds je mov pop test pop fwait pop test mov xlat testb xlat jbe loope add cmp stos int cs push vpor in push mov mov xlat mov rcrl lea (bad) fcoml mov es rorl dec inc outsb sbb rcrl in push lods sbb daa push cli test (bad) push outsl pop fisttpl ja fisubl decb mov movl xchg ja imul sbb mov (bad) pop aad test sbb in mov fisubr xor lock push adc cmp outsb cmpsb xor repz adc out scas sbb addr16 jmp arpl xlat mov or sar pusha inc loope mov fldenv jecxz xchg movsl bound jmp push inc fisub loop mov (bad) sub dec dec lea pop push cmpsb repz aam jne roll fiaddl jg (bad) push mov adc ret and jns repnz pop lret in inc lahf sub popf xor cmp scas fwait xchg rclb inc fs faddl inc jl jns xchg mov hlt dec pop int mov out sarl and popa (bad) fdivrs mov sub cmp jmp fidivl mov sbbl inc mov mov inc sarb adc or pushl les jecxz jb mov shr xlat arpl sbb add daa mov sub addr16 add add pop mov jnp pushf cmp mov xor mov subl (bad) or cmp fnstcw add dec dec sub xchg lea xorb out out hlt outsb jmp dec cld add dec or popa jb (bad) das int3 pop and fcomip jne inc adc fstpt jge pushf jo cmp mov pop imul jae ds push push jmp pop sahf div sub sub jl das mov or sbb jo xor cmp push mov mov mov ss es stos stc rcl jbe cmpl pop pop fs test and out lcall pop je pop pop test mov fildl sbb jl into mov mov sub sarb xchg and mov or test ja mov repz loope adc sub cmpb or pushf push xor jmp insl sub pop pop jno orb cmp jb mov adc adc mov jge push imul push pop jno shrl arpl adc repnz mov in pop sbb mov xor add add lock jl je popa aas xor out pop out dec das ret scas ficoml cmp popa lret add dec (bad) ljmp xor cli in mov nop cmp fidivl lds mov enter jo xchg pop inc into fldcw mov dec popa lahf xchg or adc xchg movb bound add lea enter xor mov mov test inc push pop xor jl sub int3 mov add mov jge cmp pop subl call js mov sbb lea jmp add mov mov jg cwtl xor pop xchg stc lahf lret xor ret mov daa pop dec (bad) jae sbb or rcr jo repz sbb mov push xor pop sub cmp mov add iret (bad) xor rcrb inc push jge repnz sub rcrl out push xor cmpl ror cmp sub (bad) mov (bad) jbe cmc cmp push xchg and add and sub (bad) fildll mov out pop imul movsb in repz push out mov cmc cld mov sbb aas jle in pop jno wrmsr test test in push lods in or sbb repnz imul sub and jmp icebp mov inc cmpb lcall lret lcall movb imul arpl and sub cmovg dec outsb scas sub pop mov dec int jns xlat jnp inc stos and and push lock sbb ja push sbb clc test mov test lods jo mov mov jle mov and adc pop dec or push fimull es and mov xor xor iret sub jmp cli lea jnp jmp mov pop mov std fisubl sub pop in pop int3 xorb fdivs lock mov movsl adc inc sub mov xchg cmp out mov into push (bad) hlt mov lret inc add (bad) cmp adc in ja imul dec (bad) mov sub lea in jg push aam sarl xchg pop push aas pop pop in popa (bad) popa popa roll mov icebp sahf mov inc sbb int sbb pushf inc (bad) loop incb in movsl repnz push ds (bad) add dec add inc push push inc test (bad) rcl iret or sbb insl xchg fcmovb in in ja push pop sbb dec inc jmp ja add add imul push xchg xchg mov icebp imul sbb mov jl idiv idivl ja pushf ja nop int3 jns mov mov cwtl sub push int3 (bad) jns in in aaa xchg in mov stc inc fwait pop pop xor mov jbe jp jle pop lds pop imul dec and and mov or cs ja xchg popa dec arpl xor mov lret dec mov xchg sub out sbbl xor xor sarb dec out mov loop andb enter (bad) repnz movsb decl and xor cltd jmp push adc xchg insb pop jb call push insl test sub mov add cmpxchg pop pop xchg jb or scas jne (bad) add in cmpsl leave inc lret in pop outsl pop pop cltd ret adc adc mov daa adc cmp ret cwtl adc fsubs lods pusha arpl jnp mov inc cli dec scas sbbb subl rclb push aas test rcrl jae cmp dec push les add call cmp mov hlt jmp lret (bad) mov cltd push cmc cmpsb in mov inc loop (bad) in icebp xchg push pop aas dec mov in sub (bad) jg xorl out xchg lock xor sub outsl js into mov inc add dec add sbb out add mov int3 push stos sub imul insb jno push imul addr16 mov dec test mov in dec test loope mov cmp stos psrlq cs test (bad) pusha dec ljmp fmulp lods testl dec rcrl lds rorb into cld sbb push mov jg and aas lret fmuls sub push loopne in gs pop adc lods adc push les mov add add ja pop or out (bad) dec mov cmp dec pop (bad) mov aaa pop and and movsb idivl es in mov inc jl push cmc pusha mov pushw add pop jecxz or mov add sahf pop cmp pop dec xor out push mov add push jae dec ss sbb xor bound arpl or xchg (bad) or add cmp jl cs movsl cmpb jle mov add cmp mov and movsl sbb rcll inc fwait mov or pop push cwtl mov dec sti and sub mov push mov push sbb jb out cmp jns in test mov enter inc (bad) clc imul test add mov (bad) sbb cld dec pop dec mov aas sarb sbb push sti dec stos or jg mov push neg leave hlt out adc cmp jecxz bound out popf mov xor push jae nop jb sbb arpl popf js into std gs or adc mov dec sub mov jo (bad) popf pop out pop mov add inc sub into call and or cmp jmp add dec adc xchg or aam xor mov enter call jmp outsb inc or fnstcw (bad) jecxz fdivrp mov out enter xor test idivb dec xlat adc add adc sbb movsl add xor fidivl cmp mov xchg xchg call pop out pop fdivrl sbb adc sbb pop mov add stc jp ss negb icebp lret mov mov daa mov in mov cli js pop out mov pop outsl inc jecxz fsubrl jnp out cld movaps aam add mov faddp mov sbb enter push aam in mov arpl (bad) xchg xor xor mov add out adc xor sub push lds and add adc test sbb repz repnz inc dec dec fcoms pop movsb loope adc inc or mov pop xchg ret mov das gs sbb dec lcall add add (bad) inc mov (bad) sub ss jno fisttpl ss or (bad) mov ss push pop sub jg cs nop lds int3 ds push pusha rorl mov mov cld enter out ljmp xor xchg in pop or adc outsl scas push push stos roll ljmp mov clc nop sub mov out lods sub and fs bndldx in mov jae movsb jns adc xchg cmp lods insl push test add jp mov ret jg xchg decl adc insl movb stos or mov push push add rcll mov push push jnp pushf sbb aam adc sarb cmp (bad) pop mov ljmp push pop jns and cld sarl inc pop or cwtl or pop stc push out into push subb aas sarb and mov xor push mov add fsubl pushf or pop or cmp (bad) into xchg add mov inc inc lock cmp inc cmp add ja pushf cmp ret jg ds jne jo dec jecxz push loopne repnz cmp jns (bad) jecxz push dec add mov inc push js cwtl xor dec pop mov lcall dec mov icebp out enter fincstp push imul mov in xor or push pop jnp mov nop test cld jno gs xor loope jge ja mov mov sti (bad) (bad) mov ljmp mov lahf sbb je pop inc movsb js adc jle jle frstor fmull repnz sti sub mov xchg add push gs xor ret loopne repz lcall (bad) adc jge jle and xchg xchg sub and into mov and mov (bad) or int xchg lret push mov or (bad) jl mov adc mov mov cwtl push dec ss test and test repz push (bad) ss movb fisttp loop cmc and inc mov xor mov fwait xor push add push sub cltd mov and sub outsb xchg imul jbe fcos inc push mov mov mov insl mov xlat pop adc xor dec (bad) mov aaa call mov xor sti adc cld lock push cld pop xor data16 jae popf mov divl adcl mov fisub insb xchg lods mov movsl jmp push fidivr xchg pop mov sbb cmpsl daa jecxz jg sahf call mov cmpsl add and pop push das jb mov fcomps sub les into out jmp mov lahf out lods jp cli repnz jge ror inc loop sahf adc (bad) (bad) jmp and mov mov dec jb add cmp imul aad sbb cmp fucom cmp fldt (bad) cmp pop inc lahf and fild jg loop fidivrl pop xchg pop rdpmc (bad) xchg imul dec mov (bad) bound fldt push sbb cld lret out sub loop push je,pn fldenv inc inc test mov push xchg lcall flds popf cmc shrb bound and xor mov movsl insl stc mov push pop or xchg and sahf push mov sbb push cmpsb sub pushl enter sub inc jnp test xchg aad (bad) push mul pop sti mov jbe shrb push mov mov push xchg ja xchg pop push lea jp mov out fldcw jbe decb xorl dec (bad) fidivrl add call sub sbb aas fimul subb jle lahf fisubr negb jl add push adcl lahf xchg xor (bad) mov dec cmp imul (bad) imul jl lret push pop xchg jmp lods nop xor outsl movb and sub dec adc jge das sub xlat rorl add sub test lock and xor scas lcall mull cmpsb out mov adc imul push aad int3 adc js scas adc and or cwtl mov mov aas and jmp fs sbb sahf aam push out pop jae (bad) in add mov (bad) repz loop (bad) mov sbb (bad) cmc mov xchg dec mov and add jno cmp mov sbb fwait sub jne jno cli pop es loope dec jmp sti mov repz add sti sbb aam aaa xor rcll cwtl lahf cli xor sbb pop mov jmp into shr cmp test jge dec lds repnz out jo inc cs aam dec cmp jns pushf fdivrl mov mov mov jl pop (bad) add (bad) cli push out inc sub dec in (bad) xor xor mov mov jo cmpsl jmp imull addr16 dec cmp xchg scas mov adc cld (bad) push fldt dec inc ret dec sub inc paddsw fist adc jle mov mov xchg and test cmp pop (bad) add mov adc lods or jns sbb xchg aas dec mov jae adc (bad) clc fadds pop inc jle sahf mov loopne out adc xchg shrb rorb pusha outsb add pop push cld out (bad) fdivl lea test std ror dec jns dec loop mov and sub outsb jnp popf ret mov or push ret insb and mov cltd leave jno (bad) mov pusha arpl fildl sti sbb lret outsb arpl jecxz mov and jo jle sbb cmp adc push ficom js lcall jbe push jbe push rcrb std faddl sub add (bad) cmc or pop aam gs ret mov rcrb aaa push xchg (bad) std add dec mov (bad) inc sub inc insb add (bad) mov fsts mov orl adc adc mov push addb jle repnz es loopne fisttpll cmp push dec inc rsqrtps lss lea sub mov dec cmp xor dec mov stos stos test or pop rol mov call mov in (bad) xor cmpsb jge xchg sbb ja and gs cmp and fstps or aaa imul xor movsl xor clc nop inc stos out jb xor ret popa mov lahf fildl and popf xor pop dec jmp aas fmull adc fdiv cmp pop push test mov add jmp cmp jp xchg adc sbb lea cli mov cmp mov or cmpsl outsb ret ret push mulb int mov lea (bad) push inc push xchg jne imul adc add jge sub mov push mov stc inc mov (bad) incb cmp push aas test jle in mov in pop push jnp push popf xchg or xor (bad) sub add movsb dec fdivrp xchg je outsl and mov xchg xor or out lcall roll push mov push jl add xchg push test pop inc scas into dec inc (bad) lds je jae or inc push jne mov jl mov mov jge jp outsl bound cmp pop and mov xor add roll dec or or dec shrb mov mov in test jnp cwtl jns sub insl lods fucomip movsl adcl je out inc fcoml cld mov cmp loop frstor test push cmpsl data16 ja xchg fild or in aaa in sub mov imulb mov js inc adc in push mov cmp xor ja js push test inc ds cmc mov in pop and push mov js pop inc ss aaa mov aad sarb mov jae ds xlat cwtl pop hlt ds cli xor cmp (bad) in push adc add inc xchg xchg pusha cltd xchg data16 jb (bad) sti sub xor orl rcl mov fwait mov push lahf lds mov pop (bad) fildl jb mov (bad) sbb es insb dec popa subl and cwtl sbb int mov sub adc cmpsb (bad) prefetcht0 and or xchg cmp adc jne imull jbe imul (bad) pop icebp bound out cmp cwtl es pop fcmovb nop mov mov ljmp (bad) lea dec push lds jne daa jge repz dec and jmp js int3 inc (bad) mov push lret xor (bad) lret cmp jl fs stc in pop jns push lock fldenv jecxz lock jecxz mov iret cmc mov fldcw ror cmp (bad) in int3 and fnclex add adc cmpsl je push mov hlt std fdivrl ja aas in ret or fcom mov ss out (bad) mov xor fldcw imul jnp cltd jmp mov jno dec mov xor pop popa mov je bound mov mov xchg cmp mov inc xor sub xor add xor add push mov or fidivr xor lahf and push or xchg xchg mov out pop lret pop popf jnp jge jg aas push sub outsb mov pop mov adc popa jo mov dec add inc xchg and mov push jmp out fs subb sahf add movsl mov in mov shrl dec (bad) popf mov enter mov loop and sahf cmp fldl jns fidivr mov sbb ret adc int3 (bad) jle cli mov inc xchg adc add icebp rolb mov aad mov out and jmp adc aas negl imul dec cmp xor push leave add mov xor or jg pop add loope and mov loopne xor ss scas stc gs mov out mov xor movsl outsb push mov jecxz pop repnz xchg hlt push lahf lods pop push jo jmp fldl nop inc cmpsl mov jp inc pop xchg sbb xor push lods es cmp dec jo das push mov pop inc add dec pop cmp out jmp and pop (bad) imul lret mov test loopne lret jb nop sahf pusha push stos jne (bad) repz test jne loopne mov pushl out jg mov mov push jmp repz pop ret sarb cld jp sbb adc cmp and das or lock hlt (bad) repnz icebp in dec popa jmp cmpxchg xor rolb or imulb mov cmpsl xor pop xchg out mov (bad) rorb nop cmp sbb cli pop cmp divb xchg or popa fcomip call add sub add adc push mov xchg cmp jle cmc xchg add enter enter adc popf mov push loope sbb faddp mov fisubr sbb push ja sbb jmp xchg adc sub loopne xchg mov pop jmp cmp adc jnp mov add in clc cmpsb sti fnstcw mov jecxz stc push mov dec mov inc icebp dec inc aad shlb or push in xchg sbb (bad) aam sbb mov aad jg (bad) test (bad) sti or push cmp mov mov xor movsl out sbb std add xchg out cmpsb add mov mov and out xor lahf aas sub ret insb enter outsl in mov xlat xchg lret and (bad) mov cmp jl push leave mov cmpsb jns mov addr16 jmp je xor push popa pop or adc sbb bound sub (bad) mov fsubrs pushf lahf push mov jmp push pop mov data16 in xor jmp push xlat sarb pop adc lret xchg (bad) std enter cmpsl (bad) in fsts mov xor hlt inc xor out movsl ss lcall stos lcall fwait test xchg or loopne jne insb xchg or ss mov hlt jno xchg add repz mov test push xchg movsb and dec js std dec lods out in pop mov in adc jnp rorb rorl jmp js xorb in or lds divl dec sub jb and stos jbe movsb sub push pop out adc dec adc dec test push mov mov leave test push push lods cmpl sbbl adc pop cli inc subl lea mov daa add and cs sbb mov push mov add fmul cmpsl adc das jmp xchg xor insl lods jmp daa (bad) jmp or jecxz mov (bad) leave aaa cmp fucom xor aad jl icebp mov xor ljmp cmp adc sub fdivs pushf cmc or push add lock je shlb mov cmp xchg and mov test (bad) int mov jmp and adc (bad) lret lock scas jbe and jecxz lahf xor pop leave hlt fisubl outsl adcb adc cmp fs push push mov adc dec test inc call jecxz ljmp jne rcl mov dec jnp (bad) insl push pop loop aad jge inc or sahf sbb fcmovne mov data16 add dec or repnz sbb stos loop push bound mov jp sahf movsb in jo in push mov pop test dec rolb sub je cmp (bad) (bad) repnz nop shl insl pop push call and mov mov mov fisttpl jl rolb xor sub xchg mov int mov sbb fwait mov mov pop jbe dec movsl jns lret xchg jecxz or subl loopne (bad) jo int fisttpl test sbb mov adc or adc fldt sbb popl je in (bad) jle add dec fidivrl sarb xlat mov idivb rolb jp insb hlt movsl rorb pop jbe popf lcall mov imul scas leave mov xchg sar je mov add sar inc and mov outsl push push mov bound mov mov rolb mov jg cli icebp xor sub test (bad) pushf in pop ret and fist xor (bad) mov cmp jns out cwtl icebp sbb lcall pop outsb cmp fidiv imul cli sub dec cmpb ljmp fidiv mov sarl (bad) xor xchg rolb lcall popa (bad) ljmp sbbl mov les ss xchg dec lods fiadd mov jb sahf aam inc mov pop mov (bad) in sbb in jb jo sbb stc inc pop mull sub pop xor jbe lcall cmpsl mov jg cmp adc pop mov mov je cmp adc ljmp fcomip pop mov jg dec ljmp sub jo add jmp mov jmp xor adc or jnp jno das mov pop aam jmp popf inc repz cmp adc ret test mov ja test aas pop or add xor push stc adc mov das add fldl dec jb push in mov repnz (bad) or insb (bad) xchg mov push (bad) repz sbb fbld push (bad) (bad) repz sbb add xchg inc sahf (bad) (bad) mov lock loope aad jo test scas lods inc cmpsl iret movsb insl and inc pop sti fs pop stos adc addr16 fistl add inc mov jno fldcw jb mov push mov pop mov adc mov fild adc xor push inc gs mov icebp ret lret lods xchg sub arpl data16 or sub xchg test mov iret nop icebp add dec xor cltd mov or (bad) outsl out sub pop stc rcr push (bad) jbe mov rcl mov pop aas add push jecxz les ljmp xor lret cmp xchg mov insb loop push movsl fcoms or push lret push push dec adc xchg aaa ret adc stc (bad) cmp push dec sti iret mov lods xor pop jmp inc jb scas sbb loop fwait out xchg push push xlat mov pop sti pop jle inc and repnz inc into sub rcrb xlat pushf mov adc mov pop jb dec sbb mov dec push mov jmp jo push adc popf mov sub (bad) pop push sub cs dec out lods outsb or pop (bad) enter mov xor out xchg xor fwait push jg sarl jae fs hlt xchg mov mov lret scas mov push and sarb aaa or xchg (bad) aam or jle push pushf inc shrb cmpsb dec jne stos push sbb mov (bad) fs dec cmp pop fsubrl call (bad) cmc (bad) std les inc lret jecxz lods dec or popa inc dec scas xchg fisubl inc add loope xchg xlat (bad) rorl jno dec jle ret mov sbb repz js pop and dec jno dec popf jno push dec xor lcall mov dec and mov ss mov insb mov int es push cli mov sub fcomps adc das sbb (bad) nop aam or push jecxz sahf cmova and xchg mov jns pop inc aam mov push popa int3 shlb cwtl push arpl scas ljmp xchg pop in sti jl std fsubr in adc dec loope lds daa out sar scas fistl jle test std dec scas mov pop xor ret pop insb fisttp fild push hlt loopne lock je xorb je xchg jnp loop scas xchg addr16 fs jmp jg clc sub push rcll mov push sub fadd jecxz insl add pop sub mov inc dec xor stos mov jbe push mov icebp xor xor jb mov inc out std les daa xor out mov mov js xor sbb push push mov mov push sbb int3 add icebp mov mov add mov push add jecxz mov int3 shr enter sub call push mov fnstsw movsl (bad) mov cmovb mov fidivr cltd push out daa mov in mov jmp mov sbb sub sub shr xor xor mov (bad) lock pushl add xor test clc gs mov inc leave jns jbe das rorb adc adc stos (bad) je or rorl pop or cli cltd sbb sbb jp sbb adc xchg loop xchg lods mov rorb lods sub dec fucomp faddl lcall sbb push (bad) ret lret sub sub dec jo cmpsl cli nop std mov test pop in lahf cmpsl out sub (bad) pop xor in jp in mov imul add stc hlt mov ret mov adc push ds mov ja jg pop jae iret (bad) in bound push mov fiaddl imul mov xor pop out push test xchg cmpsl outsb repnz mov cmp jg inc and or xchg dec inc fisttpl loope (bad) mov mov cmpsl fisttpll dec ljmp add (bad) rcrl inc mov lock push pop xchg push pop jl jo jp mov mov and dec mov mov adc fdivp aam fistpl and sbb xor mov inc cmp ja jbe int sub mov and push jb adc add jo jp inc xchg cmp dec fcoms test pop mov xor lret sub and (bad) mov add xchg dec into xor jmp (bad) push hlt scas (bad) mov outsb mov or (bad) stos mov jmp push popa fsubrl pop inc test (bad) cmp push pushf lds or jo pop inc push xor loopne cmp out adc rol ret jbe inc xor in and push (bad) popf push pop sub les out lock outsl push sub mov cmp aas add movl and sub popf lock stos xchg rclw div inc mov xchg jno or andb cmp sbb sahf dec mov mov and (bad) xchg das adc mov (bad) cmp mov test add aam js insb je pop adc decb jl lock mov jmp and jb cmpsb dec mov gs pop adc pop repz rorb insl pop ljmp mov bound pushf clc mov inc les orl jl push inc dec xchg inc lods add test dec aas clc test cld sub scas mov pop movsb cwtl or repz scas lock stos (bad) in push xor lret and stc int push jmp stc mov je add in sub sarl add loopne inc addr16 dec daa mov mov pushf repnz lods out push inc in movntps out (bad) cmp ja sbb cwtl mov sub into divb out push sbb fsubrp dec mov jl pop pop js mov inc stos inc sbb push insb xor cld fist int scas in test das xchg outsb jge xlat cmp sbb xlat xchg lods lea std or lds jecxz xchg int dec mov lods push (bad) hlt (bad) bound in push mov lret dec mov aas cmp sbb inc loop push stc jae hlt sbb out sbb pop push fsubr and pop mov sbb sahf mov cmp push lret xchg xchg into sub cmp mov insb mov je mov jns das mov mov popf pushf pop std sub pop jmp rcrb mov faddl cmpsl mov pop jbe xor adc ret pop cli std gs (bad) rorb gs sti sbb call test jo frstor inc jo clc sbb movsb dec fwait cmp fimul xor aad or scas repz cmp push ret mov scas inc repnz dec aad jge inc cs call pop adc sbb mov push scas ljmp or dec imul or or daa or pop lcall cli out xchg jmp jecxz lock lods sub cmp push adc movb xor pop and scas adc mov mov imul push and lods out lret sub sahf mov mov add in jp into cmp mov pop sub push cs jo std out rorl lret adc sub ja mov insl push faddl jbe push jb into dec fcmovnb push pop lret cpuid mov daa mov jmp stc ficom movsl lea mov sub mov xchg cmpl cmp pop push ljmp push jnp ret std or xchg call and inc bound fsubp sbb jae xchg fwait je push call pop pop clc push cmpsb dec addr16 mov in loope mov leave mov pop jbe dec bound js gs lahf jecxz (bad) stc cmp or out xchg (bad) pop stos xor popf ja cmp mov sub (bad) les addl xchg mov adc lods outsb ss jae jns push xor lock inc push loope sbb cmpsl xchg xlat mov adc inc lds and je mov loope mov adc dec fsubrs aas jg jecxz fcmovnu jne iret leave xchg lahf inc mov (bad) fadd ffree inc outsl mov fcomps adc mov negl push call rcrb aad bound mov lret xchg test jmp mov das push sahf xchg stos xchg dec in xchg test lahf (bad) xchg cli mov xchg in mov aas cmpsl mov sub loopne ret aad mov mov xchg aad jno lods fldenv pop pop push mov ret push add mov cld stc outsb js pop jnp es addr16 push xchg inc sbb cli or aaa div ret adc mov cmp or cmpl cmp add imul mov mov loopw cmp cmpsb cmp lods pop cmp js inc test xchg push cmpsl repz pop cmp stos inc jmp jae cwtl out jns aaa in sub mov rolb sub fimul enter aad pop jge or and mov and mov lea out arpl or push inc rorl push push out int jns mov inc mov inc addl repz jns imul stc aaa add push sbb xchg xchg mov dec out xchg sub mov popa pop jae negl lods sbb repnz lahf pop lds stos push dec add jno cmp dec shrl push mov andb inc sbb aad lds mov movsl add lock xchg pop es mov pop inc (bad) push xchg ss sarl sub es add in jae xchg movb cmp pop sbb hlt pop insb xchg sub sub and mov sti cmpsb push mov test popf push pop or adc xor sbb xor inc lret fcmovnbe call mov cwtl and test insl push or push fs pop adc push aam iret test xchg cmp push jmp push aam sub fstl mov adc scas mov xchg mov out cli mov aad adc cmp jne dec and push fs jp cmp push sbb sub out xor mov mov cs xchg xor jb mov pop es adc mov push mov gs scas stc xor enter mul push in jecxz mov jb mov arpl nop stos gs pushf fildll scas out sbb or pusha fsubp cmp lea mov clc push pop sub cli shlb bound xor jmp sbb xchg push xor movsl nop fmul loop sbb pop ds xor cmp mov dec xor ljmp adc fisubr mov push ftst sarl pop push sbb dec (bad) jnp xchg or test ljmp lret aas (bad) out aad push sub rolb dec rorb jmp xor movsb mov and sbb and out xchg sbb jge in arpl imul cmc xchg imul fldt pushf cli cltd dec insb mov add xlat adc movsb insb cmpsl lock iret stos push mov jns into pop fimull daa xor inc cmp adc rorb fisubrl cmp lods shll dec adc cmp andb (bad) jo fdivr repz adc subl push dec lea rcl and mov int3 divl test xchg mov cmp jo jae adc test jl out iret out lret cwtl repnz mov lock pop cmpb add add mov mov rcll sbb nop loope mov add mov push dec fidivrl inc insb dec pop push mov mov pop mov divl mov or push es push or jle dec aad or and xor popa pusha fidiv mov cmp mov xchg jl mov sahf hlt adc notb push cmpsb out dec add fisub and jle cs adcl pop mov sub scas clc aam push fdiv ja cmp jbe cmp lahf mov cmp lret pop jecxz inc sbb inc es dec test leave enter push inc push mov or int3 adc loopne mov mov xchg or mov or pop jp jbe,pt lea dec int3 insb xor ffree dec pop and aaa scas jmp ret xor test (bad) pop loope in xchg cmpsl push adc sub inc pop test jp pop sti popa dec add mov dec mov fdiv fmuls add and loop mov cli cmp cmp mov adc test testb lds mov aam xchg push jb,pn inc mov push add fidiv jo inc push push pop loope sbb and pusha mov xchg or mov push dec cli (bad) pop add mov (bad) push mov lea (bad) and notb sub aaa adc dec add (bad) sub lea push push mov and sahf mov repz inc xor mov xchg outsb pop jno dec int3 pop mov jmp sbbl aam es lahf pop cld sub sarl jns ja fs imul test jle and mov mov fstl xchg cmovl addr16 mov decb mov sub mov je lret jnp cli mov cli adc pop pop adc ds pop cmp ficom mov inc sbb and adc inc sub pop leave dec push lret enter xor xchg and inc add pop lock cmp into xchg stos pop (bad) out incl hlt lahf xor popa mov push ffreep mov nop inc jae mov scas in insl and mov sub (bad) sbb jb,pt mov outsb fisubr repz pop jecxz cmp mov push jle pop scas icebp adc dec dec aaa sbb iret cmc cs cmp shrb jns or out cmpl xor fucomip insl or pop lret xchg imul or dec dec add mov test sub (bad) fcmovb int3 or clc fucom icebp scas pop pmulhuw push jge lret add push push and mov add jns lret fisubl pusha arpl jge jmp or push mov iret cli dec xchg fistpll insl scas jnp mov fadds adc cmpsb cmc mov je int3 cmp fmul mov inc stos mov mov bound and loope (bad) addr16 stos jmp cmp add lea fsub add ret push xor fldt aaa (bad) repnz clc sbb ret jle dec aam je,pt cld (bad) cli js dec imul fs enter inc sub and das mov imul push stc pushf data16 jo in fcoms xor imul mov pop xor cmp xor jp sub arpl push cmp mov js mov dec add nop sub movsl mov mov sub movlps or and (bad) jbe mov and call pop mov and rcrl jg jmp (bad) push andb shlb fs shrl xchg sbb jle sub dec (bad) cmp cs mov xor ds cli sub sarb insb adc iret add xchg and test lock cmp js (bad) lcall ss adc sbb nop pop dec push ret imul xchg push js inc rcrb mov fcom cmp movsb notb sub jno insl lret pop add std pop jg rcrl cmp adc add inc ret mov dec and pop cld push nop xor mov pop mov add mov jae mov adcl xor sub sub lret inc pop daa enter fmull sub test sub dec in pusha xchg adc mov mov (bad) stos das es inc mov jnp pushf mov mov cmp mov lret mov aam in lret push sbb lock movsl repz nop inc aam ljmp pop sub sbb lret jp loopne stos notl mov mov sbb mov jnp jg jg cwtl aam cmp mov jo mov fldl xchg cmp cmpb gs push push mov cmp cmpsb xor push sbb nop pop jnp dec mov adc jmp mov (bad) inc mov mov ljmp mov popa cmp sbb nop jg xchg inc mov aas iret mov je push xchg lcall test lea jecxz shl or jo cld xor outsb dec pop call stos ret (bad) push jmp sahf xor arpl pop cmp mov lds mov ret rcll pop inc mov cmc repz mov mov lea mov lods rcll gs dec dec nop mov je jns push xchg in fldenv push xchg roll sbb cmc mov bound (bad) ljmp outsl fldcw pop jmp test mov dec outsb jmp ds mov add dec and outsb aas pop shrl mov pop pushf mov fildl adc xor jo pop sbb xchg sahf in gs (bad) or xchg in pop add stc popa jle cltd (bad) cmp mov jp movups adc std ret sbb scas popf jecxz lods cld cmp lret jmp mov mov (bad) sahf mov or push dec push je pusha fstpt div iret dec fwait xchg lcall aam jle imul cmp or movsl aas icebp rorb jno mov mov mov popf pusha inc xchg push scas and mov or fnstenv jmp xor dec mov scas iret rcrb push shrl fwait pop hlt test test push in adc mov and jo lret jae int shrl inc dec sub ds xor xchg mov dec sbb rcr push jnp mov or push cmp adc pop jmp lds fdivr pop std and mov lret int3 xchg scas sub mov inc outsl stos push mov fstl outsl add into sub adc sub push or sbb adc std sbb fldt push (bad) es sbb mov out sbb or dec (bad) xlat sbbl iret test inc cmc fld push movsl cmpsl aad jnp add jle sub out push sub in xchg adc xchg (bad) out mov stos push scas movsl or jno test fdivrs cltd jb ss out dec bound xchg or adc loope cmp call (bad) sub bound test ja add xchg jmp xor or inc cmp push sub jo out adc pop sub jl iret lock movsl xchg inc aaa sarl jle mov idivb add inc (bad) hlt fstpl shlb mov mov adc pop push inc inc sbb popa jl jns fisttp scas lds and outsb xor test xor inc fsubrp fcoms mov lods inc jnp inc and cmc sbb inc es popf and aaa adc mov cmp jb loop dec les mov mov mov mov sbb daa pop cmc jle in push rcll nop jno andl dec xor shrb add lret movsb cmpsb (bad) xchg dec test mov dec add (bad) repnz fucomp and loopne add add aaa inc xchg (bad) push xchg and int3 add stos mov (bad) cmp ljmp dec jo outsb loopne adc cmp out in (bad) pop inc add mov stos fidivr adc mov jo adc sarb cmc mov sub pop inc ret shl jo jge cltd imulb cmp jns movsb and leave sub dec or movsb pop and movsl pop std and push push imul sub jae and in jb call cmpl push dec (bad) and add int or mov (bad) loop and or mov sbb nop inc repz (bad) fs inc jne pop push pop in sub dec adc aad (bad) lcall fisubr fadds mov fisub dec fsubrl adc mov sub add sbb loopne,pt pop aad loop add xchg sbb stmxcsr push out cmpl pop aam out and cli sub push aam cmp and loope mov push mov push arpl cmp xor (bad) cmp movsb loope mov test fisub xchg clc cli xchg shlb enter dec (bad) xchg out loop cli add jb test xor dec push xlat lret sbb push fwait cmp xchg sbb ds mov scas aas xchg in pop sbb sub call mov and dec pop (bad) xchg sahf or fldenv pushf fsubrs outsb push enter fs enter sti pop ja push push sahf dec addr16 pop dec cmc cmc scas pusha test enter cmp es sti std (bad) dec stos scas mov iret jmp ret push mov push icebp jge mov push out dec pop in std add and jb js das mov loop xchg and addr16 mov leave ja add (bad) popa dec ljmp cmpsb imul leave (bad) aaa imul add outsw mov lcall pop stc mov push pop jg cmp jl lods (bad) cmp mov sub rdpmc sbb ret sti dec fcmovnb or sub repz mov lods xchg movsl jne fs jns xlat cmovs dec xor pushf add sub pushf push push adc sub lods jle nop jno pusha (bad) ds mov mov xchg mov or jl shl dec jl jae sbb dec adc pop push and pop cmp mov es movsl sbb jg (bad) das pop lcall push lods push xchg clc imul fcoml icebp mov cmp cltd shlb (bad) fidivrl popf sbb mov and in or cmp scas mov (bad) mov xchg lea dec idivb cmpsl nop push jle (bad) mov and sbb rcl mov lea in pop mov rolb mov push mov incb mov loop in mov mov pop mov jmp xor aam call js pop pop mov inc mov mov lcall add mov lea mov pusha aaa dec jo push mov test fildll or add jnp ljmp push xor aaa sub or xchg push or sbb fist push in dec in mov stos iret stc inc mov jno xchg or aas sahf lods (bad) dec sbb inc aam shl decb (bad) (bad) fdiv xchg sub xchg shrb push lock sbb sbb mov push jg popa int clc xchg xorl mov jns sub insl mov jle jb out enter jo and fdivrs jbe xor mov jno cmp orb inc add lret fnstenv mov stos orl or pop jo mov in (bad) mov jbe aad sbb jmp add daa fidiv fldcw jne jg ret cmp mov jno dec addl sub lcall dec jbe out (bad) mov nop andb adc cltd nop ljmp gs cld xor mov xchg mov inc and cmpsb test ds xor (bad) pop or ljmp stc lods inc addb adc push test icebp and mov in pop into adc fxch and test pop push fidiv adc movsl xor sbb xor mov sbb sbb push (bad) mov push xor repnz mov test (bad) hlt aad call pop push jne mov and hlt push sub movsb js lret mov imul jne outsb fcompl movsl cmp cmp xchg lret push pop and sub cmp (bad) xor lods xchg fwait hlt stc mov push add pop or cwtl imul outsb xor cmp and mov mov (bad) aaa in push nop or in mov movsb es (bad) dec adc dec jb and sarb or add std hlt or xor adc or xchg cmp pop lcall das and dec dec pop jbe or mov pusha insl test adc pop cmp movsl int cmpsl icebp sbb push inc pop pop lock cmp fsubrl pop or in lock push cmp bound dec and and decl mov cmpsb push dec cmp sub xlat in iret add push add xor pusha dec cmpsb rcl add out jns jnp xorl mov lcall mov sub fnsave xchg dec pop and lds sbb outsl dec imul xchg je mov mov scas cwtl push mov cltd test cmp sbb je push and mov movsb or dec cwtl xchg dec inc add call xchg jno or and into aad cli (bad) mov and pop (bad) in sbb push sahf jg add sbb shrb repnz pop fs jg xorl pop loopne mov ret mov das (bad) or inc in cli cwtl xor jp lcall scas or loopne jns xor dec sub pop iret fsts sbb (bad) ljmp adc popa (bad) jbe pop jle xlat fistpl repnz dec (bad) dec mov jne pusha negb mov lret mov loopne imul xchg mov jae push nop adcb ljmp rolb adc sahf sbb loop popf out loopne push into dec shll divl aaa push jo cmp xchg push mov test nop sub xor cli pop subb or xchg inc fsubr int fnstcw dec mov or xchg lcall push sti mov push cmp or gs (bad) jo mov add and in outsb rol dec cli idivl sbb out dec ret xchg xchg sahf push ljmp push dec rcl jmp stos hlt inc test popl lods dec or insb jge fnsave leave push test lods cwtl lret adc scas xchg push scas ss fild xchg jge dec xchg xchg fs cmp pop xchg rol pop loope cmp leave xchg rolb insl or clc jae mov repz das sbb push cmpsb mov inc xchg popf mov cmpsl dec push int3 push sub mov (bad) xchg clc jl dec add inc test fldenv jbe out sub unpcklps in push jle (bad) in jl test sbb (bad) cwtl cmp xchg mov movsb out push faddl movsl mull nop call push mov add or stos lret push push fs jne orl out scas cs jb scas icebp ja jne nop xor adc cmc sub lahf mov jnp nop and inc repnz sub xchg mov lahf mov xchg pop inc cmp insb xchg cmpsb lret xchg and inc mov fdivrs cmp dec push sbb fldt cmp jle jnp mov add xchg cmp pop mov mov shl adc icebp sub ljmp and call loop sub imul xor jne push cmpsb (bad) jge adc or sbb out pushf sbb (bad) xor mov lahf jne jns ret sub push clc ss dec mov cmp jmp inc push scas cmpsl movsb cli adc push push inc or or (bad) mov lcall mov sbb stos jb jb mov adc inc cmp stos adc jno or std pop inc bound lahf xchg mov xchg ds popf cmp icebp dec lret loopne movsb movsb repnz in cmp fidiv jb mov mov out push add push in or inc cwtl insl jl nop (bad) dec mov out lods mov xchg jns rol mov mov addr16 sub xchg dec dec es ja push fwait rcrl fistpll addl (bad) and jb mov (bad) dec mov insl fldcw cmp daa or fbld popf movsb imulb es pushf addr16 sub pop cmp sbb jp je (bad) pop and arpl mov movsb xchg add mov or dec jmp out cmpsl rcl (bad) dec cmp pop andb rolb jecxz adcl mov xor jle jbe adcb imul pop cltd ficomp fwait xor mov loope pop sub adc (bad) sbb ljmp or xlat jo cmpsb cltd arpl repz nop ljmp xchg js cmp cmpsl shr pop cmp mov adc xchg sbb sbb adc xchg fcomp sbb adc test adc loop jl jnp cmp lds mov push mov movl loope in rcrb cmp data16 mov out dec out (bad) js mov test sbb jno cwtl mov ret test pop add or xchg cmp dec outsb insl mov mov stos xchg repz mov add pop jne or (bad) jns faddl out lods fistpl shr sub sbb push aas and in inc mov push (bad) mov cwtl push mov movsb addb bound lods pop jle cmp test scas daa adc jb push add mov jnp or iret jo int3 mull stos addl hlt jns dec jmpw outsb xor (bad) sbb (bad) (bad) adc xchg imul mov push push (bad) ss (bad) es sub outsb adcl or imul out ror punpckldq mov loop out sbb bnd insb and push jb mov arpl sub cmp imul ret dec push ss (bad) and cmpsl jg sub fwait and xchg js xchg mov xor bound xchg (bad) in movsb into or lods inc xlat cltd add xchg add adc xor cmp push add add sub mov fistpl xchg push out pop data16 jnp push in mov adc pop lods mov mov dec adc jbe xlat sbb xchg test xchg sub adc and int adc mov mov mov in (bad) scas mov mov mov jp ja ja xchg adc (bad) incl ret cmc lock hlt test scas jno pop inc add int inc ja jno cmc lret mov sbb inc or xlat fidivl and dec rorb sub pushf or sbb pop fistpl jns jecxz mov test add pushf adc mov test (bad) out xchg (bad) sbb xor mov cmpsb dec adc pop pop mov test sbb xchg shl xchg stc mov lret cmp ljmp fist imul sub push xor mov iret lahf push fstl aad adc xchg sbb cmp mov jae mov add aam lahf lcall and or push in subl push pop pop (bad) por cltd cmpsb ds out sti jno xchg inc lahf cmpl push mov adc lods mov cld js and jae mov add test sahf push test dec sub inc outsl cs gs in add outsl popa ljmp into and (bad) fisttp aas movsl push jl cmpsl mov or mov std cmp cmp test enter cmp aad pop adc repz mov inc stos cmp sarl outsb ret gs pusha mov mov nop sbb push (bad) in cmp cmovns call ja mov add pop add jns sti mov and xchg or stos add mull rcl xchg inc hlt stc xchg add sub sub idiv dec lret xchg xor pop test cmp xchg stc xlat xor mov cmp shr add std sbb sub sub xchg mov btr and test call std or out add loope push push mov jb adc fisub xchg lret lock insl push ljmp xlat mov push addb rol mov inc dec outsb xchg lds test arpl jle outsl in jns sbb sub push fldl xchg mov push shlb in sub je pop sarl movsb pop rorl ljmp in cmp cmc cli adc test or ret sbb sub in sar lcall pusha int3 mov adc (bad) inc in ret push scas jg bound mov cmp je xchg data16 or adc fadd or xor fnsave dec lods or jg mov pop loopne xchg jb sarl negl xor cmpsl aas pop push jnp xor ljmp push fiadd xchg mov shrb pop daa jno xchg add repnz lret pop pop out pause cltd scas out movsl dec test int3 dec pop cmp stc ja sub dec sbb and fsubs adc and pop dec lds lret sbb sub xchg xor lods jmp divl xlat clc pop aas mov cmpsl jae out clc push dec fidivr inc fs rclb nop mov cmpsl adc leave aaa or jnp xchg xor mov adc (bad) jle add push jmp xchg cmp imul pop pop cld xchg inc (bad) cmc and jmp jl and pusha addr16 jle adc pop sarb push xor aad (bad) cli cld out fidivrl xchg outsl xor mov aas rclb inc pop adcl push ljmp push or lret stos cmpsb aam mov scas xor nop dec pushf ljmp push push pop je or inc lods je arpl gs inc xchg push or adc scas mov adc push jge test (bad) mov sub mov jno mov pop sub rorl jle neg push ret adc adc icebp jo and arpl pop lods scas out sub dec pop outsb sub loope push mov lds ja (bad) adc xor adc mov dec sbb sbb jecxz dec dec lcall inc fstl loopne sbb jo jl imul stc inc jae mov dec pop dec push clc fcmove imul iret jecxz stos testb hlt fnstcw stos pop pop enter cltd inc mov test adc inc ds pop int3 mov das dec jb mov mov mov inc adc cmc or pop (bad) add (bad) (bad) mov jbe stos in int or cmp cmp data16 sub (bad) les mov push and dec adc lds sbb into mov sub ja xchg (bad) mov xchg lods movsl xchg add cmpsl dec sbb adc mov xchg sbb cmpsl add int sub fildll popa aam inc jg je or sbb fldt insb out lds jmp pop adc stos adc cmp push cmpsl nop and adc mov and sub mov cmp push insl jo dec jne add int3 push stc mov and lods mov sub push mov cs and pop dec arpl out inc xchg dec outsb enter push add pop leave sub rolb cmp fsts pop inc push jle repnz sar xor popf shll cmpsb pop jbe push pop fstpl mov inc xchg ficomp inc dec xchg scas scas inc inc cmpsl pop lods popf sub lods fcoml repz ret mov lcall jns sub (bad) xchg cltd aas ret jbe xchg inc sbb (bad) stc mov jo cmp mov andl mov xlat ret (bad) cmp inc mov pop xorl xchg inc cmp lret sbb sub jle gs add insb into mov cmp push jne inc inc push ja out std sbb les lock decl aam das bound push sbb cmp (bad) repz and mov inc push out xchg push cmp mov jge mov add mov idivb mov sub enter cmp addr16 fmuls rclb pop gs out dec and lret mov pop data16 popa stos mov dec fstps outsb lcall test push jbe push outsb add push mov stos jae addb fmuls loope mov push stos repnz loopne (bad) sbb xor or fsubrl or add test das ljmp mov lret mov scas cs stos jp mov mov mov movsl and lcall or into and es push mul dec pop mov repnz fdivs andl jne shr inc cmp lods fistl cmp jp pop dec (bad) fs daa jp mov adc sub mov insl dec ljmp popaw mov out mov clc jns ret (bad) fucomip ss jecxz xchg pop (bad) leave jle std fsubrl outsl sahf test insb sub mov pop loop sbbl outsb test inc sub rolb and adc mov ljmp pusha pop aad dec mov xlat aaa and sbb sbb mov ja xchg outsl test sbb popa add bnd pop push (bad) sarw xchg icebp and out aas lds xchg and fstl and mov sbb hlt popf mov fdivl jmp fwait mov orb stos ret or mov fiaddl add or shll bextr test adc es in xchg (bad) xor or pop movsl imul jle pop inc xchg adc push push (bad) je push pop mov or popf dec stos fs dec jge pop push movsl scas ljmp iret add jge sbb lret sbb loope cmp mov lret mov mov inc push pop sbb mov sbb (bad) sbb push push test test xor mov lds std faddl push dec jge (bad) imul jb (bad) fbstp cmpsb sahf or pusha call jne fwait outsl mov pop fadd jne mov lods xchg aas aam mov mov les clc std mov mov gs add cmc movsl dec pop std test cltd pop cmp iret jno and sbb stc mov dec mov xchg sahf mov mov xor int3 rclb gs sbb inc add addl jne add and (bad) pop sub shll (bad) iret pop daa or jae inc pop mov sbb (bad) into daa mov pop add lcall (bad) sbb mov fcmovb xlat test insb dec mov mov mov push (bad) stc loop arpl jge jp push dec adc sub (bad) adc xlat ljmp adc xchg pop jge or icebp mov jbe push imul sbb dec out mov loopne leave inc jle inc mov cmc xlat or pop pop mov sub or or and rolb loopne fwait pop push xchg call mov mov cs inc xchg add mov jmp mov js sahf enter push jmp or sbb pusha inc ja iret fcomip aad push stos mov sbb inc aas std mov adc gs mov mov leave xchg push mull rorb pop cs xor mov in lret add ja ret or mov cs mov decb ficom mov xor xchg (bad) and arpl xor int3 cmp mov pushf mov lock jnp sti ret and sub ret sbb adc cld test in test or push mov std sti out xor push adc pop sub mov inc pop lea pop xchg mov (bad) mov mov sbb cmp test lods xor push lock addr16 pushf xchg int3 jno sahf mov mov popf mov test cmpsb sbb sub popa adc icebp push bound cmp cwtl or scas xor jmp nop lds cmpsb loopne mov sub mov testb repz mov lea adc mov shll cwtl icebp lret pop lcall xchg add repnz mov xchg pusha test lock addr16 push add ror lock sbb notl dec push cli dec pop push xchg sti sarl cmpsl (bad) push fisubl fimul xor popf in jb dec incb sub popa inc push dec hlt and lret (bad) mov fwait aam sti mov lods data16 outsl xor pop mov fisubr jne pusha xchg xor adc sahf (bad) insl or inc and push xchg lods lods std (bad) (bad) stc sbb jmp iret push adcl jl in xchg loope lds jg pop sbb lock add popf push xchg or sahf dec add xchg and fadd push je (bad) fs in adc ficom cmpsb mov movsl push push push push add cmp jge scas mov mov jo testl mov iret sbb aam push mov push push dec sub insl fisttp movsb pop pop inc sub cmp or jne int push clc popf mov cltd jge dec mov mov push cmove ret cmp sub xchg clc xchg pop push ficom sbb rorb add mov push lods leave and and sarb pusha mov movsl or icebp push mov jl pop (bad) loop in sarl mov insl push mov push lahf sbb or mov subl jno jecxz mov adc fstpt sub or jb cltd popa mov fbstp cmp xchg sub lea xchg stc sbb sbb sbb lcall xor sbb lea sbb stos xor jp push gs ja add mov movsl xchg test push adc pop pop inc push hlt aam cmp pop scas add push insl lock or stos or xchg ficoml std mov bound mov iret mov (bad) xchg xchg xor addb mov add sbb mov lods vpaddd (bad) dec or xor lahf ror fsubs leave pop out inc lods and fdivl pop xchg inc lea and fwait fwait (bad) int3 xor out inc adc sub mov ret or iret pushf (bad) mov pusha mov pop hlt pop sub cmpsl xlat and out mov xor popf js add popa jecxz adc rolb jle mov adcl sahf aaa bound cs inc mov shr lea test repnz push and (bad) repz xlat sub cmpsl push push stos cli xor je int3 out adc jmp pop ljmp pop adc ljmp xor add ja out sub rorl wbinvd rep sub push mov add inc mov mov les push (bad) pop fwait outsl hlt loope push (bad) pop daa pop (bad) push inc add mov in test in adc sahf and mov fwait call daa inc dec jp xchg leave imul movsbl cmp ret pop push xchg call sub fidivrl mov dec jo push xor je jmp std ljmp gs xor xor and or fmuls int3 daa fistp mov push les push or adc sub mov cmp cmpsb dec mov sarb jne lret std in bnd push (bad) push lret jmp subb (bad) loope out enter ret lds stos dec (bad) fisubrl test out mov jns rcrl jg or les lods sbb jp xchg popa mov adc add sub cmc mov dec (bad) cwtl enter cltd dec mov and jge imul add cmpsl fsubs fsubrp jp testb ss dec mov sti enter sbb push push sub (bad) rorl cmp or stos mov int3 pushf pushf or or insl or loop and std inc sub cmp inc fs mov add xchg mov push dec add add pop cmpsl and es add cltd and mov cs aad fdivr ljmp fcomps les cmp loopne jecxz xchg clc icebp jmp mov sahf cmp and scas xor shr add xchg cld inc orb mov cmp mov sub push sbb repnz inc arpl jno and pop sbb outsb test mov push push imul xchg fs adc fld1 inc push adc jg fwait aam add movb rcll movsb push fisub mov pop xor (bad) scas mov or pop arpl xchg or pop mov mov xchg sub dec cltd adc fsub out ret lea js fstpt jmp out sbb (bad) ret ror out xor lret (bad) push popa lret cmp lds jns loopne,pt popa popa xchg jae sbb imul mov dec add sub pop fidivr ret add sub cmpsl add cmp jg stos jecxz popf and dec sub fwait jmp data16 test jecxz es sbb (bad) fimul pop loopne pop sub adc pop xor pop xorl pop out cmp mov pop enter ds sub mov xchg add mov mov nop jne mov mov cmp std or nop (bad) dec ds ss or into cmc out dec mov push xor jmp (bad) lock dec popf in xor jl push inc mov loop fcoms (bad) inc push add sbb out dec inc add stos cmp aaa shrb movsb popa test xchg and cmpl pop call pop mov aam out jmp rorb mov mov xor push in cwtl sub das mov push mov push push cvtdq2ps adc dec xchg jbe mov mov push jb adc movsl cld or push jle rcll xchg idivl or push cld cmp push lods cmpsl rcrb lahf (bad) addr16 or sub dec cmp mov cltd rcrl cmp stos and sti sub aad push gs ljmp sbb iret sahf stc mov jg fsubs shlb add pop pop inc gs inc leave mov mov jl pushl adc orl lods imul lods data16 std icebp mul mov mov adc repnz movsl cmpsl mov loop mov pop xor je jmp cltd mov mov scas movsl es mov xchg iret add gs movb jae (bad) aas cmpsb mov pop sbb test mov pop inc add jnp mov mov mov inc push sbb cs pop rcl dec add dec pop cmpsb xchg mov cmpb push stc orb jno or inc lock nop xor mov dec xor dec add dec sbb inc dec out xor ret (bad) xchg add sub fmulp (bad) xor mov lods imul repz rorb jb inc jnp add cltd mov fs push jecxz mov ror sbb xchg or cmpsb jmp push cmp mov jecxz or add cltd lea push dec jl in es jbe rolb mov or cmp and ljmp int mov rcrl sub call adc pop lods lahf and jecxz arpl adcl xor fldt mov inc std jmp int in mov cltd dec pop je aaa ljmp adc push cli jmp jb xor push push test xor push mov lret push faddl mov xchg jbe fild ss xchg mov mov fcompl repnz pop and js sub mov jl in push int sub pop (bad) mov fdivl out jmp mov es mov mov fs (bad) daa jmp mov jecxz push stos popf loop mov mov mov mov jbe sbb daa pop xor loop cmovno (bad) sti enter add cld bound gs aaa stos sti push xchg std (bad) es mov sub push xchg mov xor lret lahf push cmc xorl out push outsl mov lahf stos lods push (bad) push fisttpl or aaa repnz cli dec sbb incb test (bad) shrl out sbb out imul add xchg jmp arpl add push inc mov mov imul loopne add mov mov in push push clc mov dec (bad) dec enter inc mov or jge cli push mov fdivr mov iret push xchg cmp add rolb int call mov repz mov nop pop out mov mov movsb and or cmpsb movsb pop outsl adc mov mov mov shlb dec out (bad) lock adc imul mov test jle or scas mov repz in mov leave mov imul scas adc out or in sysenter push hlt mov mov and incl push push push xor inc outsb add and xchg cmp mov xchg loop call sbb sub or pop xor pop hlt and js push ljmp cwtl test lret xor inc inc cmp mov lods jne jnp add add add insl iret in mov mov (bad) and mov into cmp mov jge inc int movsb aad pop sbb push mov inc jmp pop (bad) or rolb out shr insl xchg cmp dec adc jbe mov inc cld pusha jecxz repz das lea mov rol mov and inc cmp inc je sahf mov stos mov int jl ret pop sahf pop jmp cli pop sbbl mov sahf xlat outsl adc scas pusha add mov and loopne dec fcomip inc adc adc movaps nop fdivs outsb les inc sbb add mov rolb cli dec push mov xchg cld aam enter insl pusha dec dec mov mov into nop inc pop in mov pusha incb lock xor xlat mov out jg out adcb adc jbe xor std in das mov sbb fiaddl sub pusha xor mov push outsb lcall xchg or sub mov xor mov dec popa cmpsb xor jge (bad) in and loopne faddl pushf lods iret or lret int jl mov xchg mov sar lcall je repz dec arpl push adc popf loopne xchg mov (bad) repnz fsubr inc lods pop test imul ss fild not (bad) pop jb dec push divl ljmp test sbb mov fwait dec mov lcall jl jecxz inc or test or and dec loop xor push lret cli arpl nop dec xor (bad) int3 (bad) fimul mov into adc aas clc ret push shrb (bad) jne xchg pop dec sbb inc jle cmp add les and mov xchg xchg mov popf mov call les ss fs pop jae sub sub adc fcmovnb insl add and mov imul es dec mov loopne in inc imul push aad fdivs push jno test insl mov xchg lret adc sub repnz sub push jnp cltd ja inc enter or (bad) or pop loop clc lock pop pop sub jl fs js mov fnstenv add mov js pop jo or and sti dec or icebp int3 aad dec mov arpl xor cmpsb jmp or (bad) adc sbb mov mov pop rol sub (bad) popf lds mov repz adc push or je je lods dec cld out sub fiaddl imulb outsl cmova je mov lcall or int3 out movsl inc ja notl mov jecxz insl lret cmc xchg lods imul out jae mov pop sub (bad) into xor pop xchg clc stc cmp push loopne lds js mov lds push xchg push add in jne mov dec in sbb bound rcll xor jecxz xor fs cmp fisttp shr test or loop pushf in pop xor sub into jle fildll sbb cs jbe mov mov cmpsb dec test mov (bad) jp inc (bad) mov push push ss leave mov push dec in pushf ss dec and rep rorl std cwtl fadd and loopne jge int3 das pusha data16 xor fcmovne add in push popa popf les jne insb lahf xor or jnp lahf aas scas dec mov jb dec push push xlat ret shll mov test fnstsw jo dec add in subb pop fs insl pop inc stc cmp cmp movsl push loope cwtl lods jp popa pop fcoms cmp gs sub adc (bad) test sbb jno mov popa adc mov insl xlat jl mov push (bad) push jg (bad) ja iret pop inc mov scas repnz cmpb mov imul jae cld sbb mov out or (bad) cli stos int aas dec call insl xor jne mov mov push sub lods jle add adcl jp popa xchg dec test stc cmpsb aad adc shll test pusha xor sbb pop sahf scas (bad) mov push xchg and xor dec mov push mull outsb lds adc xlat addr16 movsl cmp (bad) jo fisubl das sbb sbb repnz in in lods lcall jg loop int insb (bad) xchg test cs loope and mov in lock test test push mov dec leave jmp inc pop push fsubs add mov mov aad and (bad) push dec sbb pop mov ljmp pop in scas in sahf and ja into xor cmp lock xor lret add mov lods jg push xchg imul nop mov test cld jg add imul cmpb lret push cmp bswap les adc mov call push mov add inc vcvtdq2ps les inc mov scas cmp popf sbb es mov mov adc push jl clc push das movsb add rolb (bad) stos push les (bad) montmul cmpsb add push pop insb daa (bad) mov xchg sub (bad) movsl push cmp (bad) out jae cmp ds out cwtl and sbb andl loopne or pusha jae dec out in push sti ret pop mov xchg jle outsl or jae ss and and mov jle (bad) stc inc cmp jl aad pop pushf loopne jl aas xor ds dec cmc inc cs pop sub add sbb fnstenv jns jnp movsb cmp or push (bad) jle cmpsb cmpsl fnstsw jnp stc or lcall in cmc mov gs (bad) push cs cmpsb xlat loope lea int incb insl cmpsb pop ljmp je xchg adc pusha jbe daa push xchg inc xor cld (bad) mov mov jg out dec sub xlat imul jns clc (bad) int cmpsb (bad) cmovb lret jns cld nop jl (bad) cltd cmp and mov cmpsl loop dec fimull adc dec in das inc cmp std sbb add mov mov test movsl in ret mov mov js pop jecxz imul sbb jecxz push mov mov fmulp out dec stc mov sbb sub or movsb and scas jge icebp xchg (bad) aas leave out pop gs adcb xchg adc test (bad) mov enter dec xor and insl ljmp dec jg es out movsb pop adc add dec popf jne pop push sbb mov cmpsl aam outsl repz test bswap stos (bad) fcoms sti and sbb push cmp enter clc fwait imul lret imul sbb jge in cmpl inc jne xor push outsb mov in lret hlt cwtl dec das sbb jne push insl in mov popf inc sbb cmp stos pushf pop xchg sbb push movsl test sbb (bad) pop mov addr16 inc data16 pop cmp rclb cmp and sub jb mov adc sub imul push pushf clc mov mov jno or jmp das mov xchg shufps iret xor fwait test add sti xchg xlat push push mov pop fsincos sub mov xchg push push pop push xchg mov sub fcom xlat jl add mov dec bound jno jne cmp dec out and testb pop pop or xchg lcall mov push mov call fdivrl mov fstps adc xchg xor inc sub icebp pop lds mov xchg push jg out std or gs es cmc sbb mov mov add (bad) mov int3 sbb movsl fs call xor mov cltd std adcl cmp sbb jne repz mov push mov cmpsb cmc pop cmp cmp cmp (bad) jnp jge inc clc jb xor imul popa int3 adc ffreep and lock xor jne inc xorl mov lods pop inc (bad) push xchg jno xor shr sbb mov mov imul ret scas test outsl addr16 jg and scas cwtl call mov xchg or sub cmpsl mov lods xchg nop jno inc push xchg mov inc inc pop and imul or mov (bad) pop pop push push in mov mov and push cmc sahf idiv inc enter addr16 in movsl jle (bad) xchg aas (bad) daa mov jae xchg push sub aas test sub xchg jecxz fcmovnu mov add sub iret cld cwtl add push inc or pop into xor out xor in push repz test sbb inc repnz fdivrs dec sti or jns xchg sub ja cmp push pop xchg (bad) into or cli mov mov xor imul fidiv movsl test push call or xchg aas imul data16 icebp pop (bad) pop jmp rorl je std dec sub jl jbe imul xchg aad mov sub aam dec mov push mov or jae cmp fsub xor cmc xor out out inc push jmp add and xchg (bad) lods loopne adc aaa sbb jg repnz jno lds clc jg or xor push aad pop sub mov mov mov or pop test and or jae ds sarl inc xchg fucomip jnp add (bad) negl loope clc ret imul stos call sub mov dec test (bad) jae and fsubrl ret das movb addr16 scas call add mov add jl sbb rep jbe mov or (bad) iret mov loop es dec mov out lahf adc adc repnz (bad) ljmp mov jae movb inc loopne push inc cmp int3 push pop es jle cmpsb mov and jge popa les and cmp aad adc xchg xor or mov ffreep sahf sahf jno mov cltd testb jp ficompl and mov cli or insl xchg cwtl lea fsubrl jae cld into sub stos pop sbb cmp mov dec aam or out scas in cmp and mov fs idivl and cs inc inc in jo mov aam js and outsb fistp and sbb dec bound daa mov stc in fiadd mov sub push mov adc or sbb add loope ja cmp test jle dec ja jne es lret jae ljmp adc pop cmc rorl fistpll stc inc xchg insb mov lods es ja mov cmpl scas aad jns fwait sbb push push mov mov dec push sbb pop inc outsb lret sahf mov push lea into sub shll sbb inc sub or loopne mov push ret imull push inc lcall push addl dec pop push mov or pop loope popf test es xchg add or pop faddl push fsubr fistpl std push fidivl out outsl fsubrs mov jg (bad) inc flds dec outsb jl fwait mov mov xor pop mov frstor cmp mov scas je sbb movsl movsl jno add jle (bad) iret adc xor push mov push mov loope mov pop aaa mov leave out cltd add lock adc sub xorl popa inc test jnp in or test fwait dec cmpsl sub sbb dec fildll pop out adc jmp shll pop mov mov mov dec cmc pop fsubs xchg cmp pop sub icebp mov jno dec mull mov mov cmp enter push or js fisub dec lods mov sti insl in pop mov in push (bad) lock fisub jae gs xchg jmp outsl int addr16 mov lods and or inc sbb fsub add pop mov pop xor dec mov stc lcall mov jl iret xchg ja fwait ds movsl xchg fnstenv mull mov cmp scas inc and jo xchg clc cli sbb cmp loopne inc dec pop rcrl (bad) push stc cli pop inc ret push cmp sub pop in and inc fs or mov in fbld pop ds sbb mov xchg jne mov inc sub inc ss inc mov jnp pop dec loopne (bad) jae pop pop js mov movsb (bad) leave ss or pushf data16 sub xchg sub jle jno cli xchg rcll push and lea addr16 je push cmp mov lods add xchg scas mov pop stc or (bad) or sbb out jne mov jmp (bad) push add pop mov in in sbb push bound dec in popl pop sub pop jl push jbe cmp pop fxch out into jmp cmpsl mov push test mov sti jne dec loop xor mov xchg jle aaa inc call sub lods jno js mov iret mov fisubl stc dec mov sbb mov jae loope repz cli aas sbbl cmp int3 dec aaa in add inc xor test add mov push mov daa ss cmp cmp dec mov insb ret sub lret (bad) fmuls xor insl ret movsb ljmp inc jle loop es int3 out dec add int3 inc mov (bad) (bad) xor sub xchg loop dec sbb pop and shr (bad) add jl fisubl mov mov mov fisubrl hlt repnz jmp inc add out push ficompl dec cwtl dec fsubs popf cli int mov xlat cli pop rorl pop inc aad (bad) xchg xchg push je xchg adc arpl bound rcr dec nop loope dec or dec or sbb dec les (bad) mov inc (bad) pop adc popf (bad) push stos fcomps test pop loope loop dec mov cld popf test cmc and stos xor mov jecxz mov inc add lret add loopne and xor push lret push mov add xchg or int3 in das lcall mov xor xchg cmp lahf orl rorb les mov inc mov int cs sarb adc cwtl movsl mov inc jnp add push push (bad) loope cltd (bad) sbb push push mov lock xor subb out bound movsb sub xor (bad) lahf sarl test pop loop lret cmp xlat push push pop divl mov lods fistp jmp jg jecxz xchg std jnp pusha xchg mov repnz cmp out (bad) (bad) outsb push xor adc inc jns jb mov sub gs xor jecxz pop push icebp and or add out mov in int pushf push pushf dec lahf push shll sarb push mov jbe dec pop pop inc leave fcompp push cli mov cmp pop fstpl sub lahf loopne and xchg mov (bad) (bad) loop cmp out gs into mov mov adc mov cmpl jae sbb ja fbstp fisubr (bad) sbb imul mov fwait dec push loope ss jp pop mov mov mov add cwtl lcall push loopne in ss fisubl sbb adc sub mov pop hlt xor jl mov sub xor cwtl mov jmp pop daa ljmp into lods stc repz cltd arpl xor xor cs insb mov push mov add add pop (bad) incb (bad) hlt imul cli in inc aad inc pop or ljmp pop fs push int3 inc test sarb and (bad) pop scas movsl push (bad) aaa int push fmuls jg inc or pop pop cmpsb push mov push rorl out pop pop dec add dec int fs and sub aaa das mov cld fildl jg sub aam pop mov xor insb lods lock fimull inc lret xor loope pop mov sarl outsb or sub jle or movsl mov xor cltd movsb inc test xchg pop xor jnp stos push sub jnp les xor cmp mov mov sub sub or pop jge pop rol enter shll shl mov jmp push out cs xchg loop fnstsw sub pop inc xlat mov inc lret adc out fild test loope sub sbb dec mov and out mov inc sbb jg dec jo mov loope sbb mov push mov js add mov xchg dec fmuls cmp sub (bad) dec mov inc xor repz movsl fildl (bad) shlb test in lods loope jbe add xorl je arpl xor out cltd fmull sbb bt mov xchg stos sbb hlt lret xchg inc test insb inc in gs sbb cmp insl cmp mov (bad) out ret std jo icebp mov cmp xor sbb xchg lcall dec push mov imul aas and jae or lds aad mov pusha insb ret cs (bad) call sbb sbb pop xchg dec inc mov rcll pop pop adc add sub and pop adc arpl call cmp sbb mov lret lock insl jmp (bad) or sbb mov cmp jp add and mov sarb sbb cmp inc mov scas cmp jg paddd push sub icebp add aas es jno idivl mov adc or cwtl jb dec notb push fcomp js push adc or es sub mov outsb ss imul and adc insl push into push mov outsb push (bad) mov imul inc fimull loope (bad) cmp xor cmp cmpsl fistp sub lods pop fcoms sub inc (bad) push test and andl jle fbld inc jle mov scas ds in push or ss popf mov xor sub icebp mov ljmp xor fdivl in jns and outsl jbe sarb sbb fs cmpsb out sahf loope dec or dec insb lret subl add xor mov cmp inc pushf into (bad) lds not std or jbe orl cvttps2pi or xchg roll jns fstps xor (bad) jo loope inc adc ret mov dec or out cmp out data16 in pop jl mov xchg mov jecxz mov xor repnz inc imul push mov aaa je cltd mov add cmpsb fstp (bad) ja mov das pop cmp stos addr16 adc fbstp lret pop adc call sbb movsb cmp mov nop pop ds insl push xor xor or loop loopne dec (bad) lret mov pushw sub les cmpsb (bad) mov and movsl ljmp mov movsl xchg xchg push sti xchg addr16 sub dec je xchg add sti dec lds popa mov mov int3 outsb dec loope xchg jmp scas push push pop (bad) scas (bad) cmp mov mov sub (bad) dec jno push push xchg and insl and lods cwtl jb mov add stc jb and dec cli arpl gs ljmp ficoml shrd xor dec dec jne mull cmp rolb out sahf leave xchg mov aaa sbb stos insb push subl pop xchg mov enter lret pop cmp (bad) xor roll mov outsb hlt xchg test jp in cmpsl divl mov dec dec inc inc popa gs mov mulb mov pop gs and sub fwait rolb ret ds fcmovne push jp mov loope ljmp scas and jecxz cli movsl push jle sbb xchg ss push sbb fadds cmpsb jne rcl xor es inc xlat xchg sub movsl or xchg (bad) sbb lods bound mov sbb lcall lret cmp daa push mov dec dec mov sub jg repz (bad) cmpsl pop ljmp or cmp and sbb inc into add icebp ss adc fmull push add adc dec dec lods lret andb into insl cld xor fmull stc mov shlb das adc notb insl add aam rolb testl and xlat mov cld (bad) xchg sbb dec mov call stc xchg jl mov jnp cmp loopne cli cli pop mov jb mov push mov push outsb int3 xor and and dec mov inc dec fstp mov stos pop and dec and mov int jbe js popa sbb mov add stos lret data16 bound mov (bad) mov (bad) adc mov enter sub cmp lds mov jo inc sarb mov ret xor cmp iret lahf dec sbb push sbb lods push (bad) fiaddl (bad) aaa ficomp aas add add daa pop leave adc sahf es icebp repnz test aaa xor icebp cmp push inc and push (bad) cmp mov jp ss cs dec sbb cli (bad) adc mov mov addr16 inc fildl je aam dec fdivr jne and (bad) in cmp xchg xchg jae mov mov sbb (bad) test mov gs pushf push pop popa popf loop andl add fimul bound cli mov sarl iret dec jns adc or test xor mov pop and and mulb iret cmp mov sbbb pop mull inc outsl jmp pop xor dec mov adc insl popf popa (bad) icebp pusha mov rolb push cmp xor je or push add push cmp rcrl ret fcmovbe nop sbb andb fiadd mov push inc shll adc bound fdivrl js jle adc mov dec mul fadd mov scas add sarl orl mov jg jne cmc outsb sbb xchg cmpsl inc xchg arpl pop mov in hlt hlt inc inc pop lea dec pop jae jg pop test leave add clc sub xor lods jae cmp test out xchg jbe lahf mov cmp xor test mov or push (bad) mov sub outsb pop outsb add mov addr16 mov cld jl pop xor imul imul jl je and (bad) mov xor jnp in jbe sbb (bad) dec jmp cmp fisttpl cld les jbe push dec imul adc push rolb xchg mov inc mov movsl jmp fisttp and pop push pop mov sbb dec mov (bad) cmp jmp imulb pop mov push std daa cs xchg outsb cmp jle pop out data16 dec mov inc pop dec push mulps cmp cmp and and bound xor dec pop lods adc cmpsl sub iret inc sbb fdivs mov outsb push inc mov out add inc push (bad) mov aaa adc bound push dec push bound mov repz or stos (bad) ret clc mov push sbb ja inc xchg jl mov adc and push iret lock jg inc (bad) aad pop ret sbb sarb sahf xchg bound xchg sti pop cwtl or out gs mov sub xchg push cmp push xchg pop std jmp lcall cmpsl test add sti aas (bad) pop (bad) lods out les add and gs test xchg xor stos push xor mov les and jne inc insl inc inc fwait subl xor jbe lods lds mov clc nop jns adc cmp fxch lea in (bad) mov (bad) lock mov jl outsb jns (bad) cmpsl and imul dec andl and stc adc hlt ljmp cmpsb and pop incl jnp mov adc push outsb or (bad) mov mov pop xor out sbb sub mov stc and xlat mov add (bad) in int sub aaa loope dec jnp sarb bound xor push dec mov push outsb insl mov jp xor dec add inc pop sbb jns repnz fnop mov mov add rorl rorb mov mov bound mov sbb clc mov jle xchg push sub mov inc inc jp adc cld popf pfcmpge fnsave pop outsb xchg lds into cmp daa jmp mov sub xor pop mov ds fisttpll js xchg nop pop aaa aas out icebp mov imul outsl sahf dec adc test or rcrl test lret inc loop xchg repnz ret repz data16 mov mov ror inc stc in clc dec push mov xchg mov push mov insb shr lods xchg inc and sub or fwait push aaa (bad) and add cltd xor adc add xchg insl adc data16 mov je sarl mov jns rep jne xchg lret call icebp outsl pop sbb addr16 fwait add jb das fldcw das inc pop das imul test jbe cmp add fist jnp adc xchg pop ljmp xchg stos cmpl test xor add nop jae inc (bad) enter cmp or ja es sub aaa lods or add and or pushf jge push negl adc orb into adc jp aam cmp es (bad) ss mov pop dec dec jp jae rcrl imul adc xlat xchg mov fs mov (bad) xchg push add jno xchg dec add outsl sbb xchg xchg add mov imul test icebp (bad) into (bad) mov mov stc push mov aas inc sti mov mov push or call fwait pop sub nop repz repnz dec cmp jp mov jl out or add sub imul lcall (bad) inc or ljmp jg iret clc and std sub fwait jne test fdivl ja popa add push sub dec insl jmp mov push dec dec pop mov sbb nop sahf xor fs or cmpsl ljmp stos fwait mov and pop aas test or push or popf xlat add mov pusha test (bad) cmpsb (bad) cmp jle repnz xchg xor add daa push mov js or (bad) in fnsave sub pop and cmpsb aaa inc in jg cwtl scas dec iret leave cli dec mov into cmpsb movsb mov inc sbb cmp xchg rcll stos inc jnp push mov jle xor cmp xchg pop pop popf iret jmp call push data16 (bad) fidivl inc add rolb loope sbb push jg les (bad) jns and nop add inc aas push ret fs cltd insb cmpsl sbb xor mov push dec cmp mov xor sub mov cmpsb jne das cld mov out fstps movsl stos and fstpt fisttpll inc xor call clc lock pop movsb insl outsl in out ja leave or inc jg adc add mov mull mov pop jbe dec pop and sahf xchg fcoms mov dec or in jae insl nop nop xor lods or xchg (bad) sbb (bad) adc iret test out leave stos loop xor in jp popf pop pop outsb sti ret push fnstsw fsts xlat and mov outsl add call (bad) hlt xchg repnz test sti sbb adc (bad) hlt lcall xor test mov xlat scas xchg cmp mov loop jge les jae (bad) and push add push push ret fmuls mov push jae add ret xor test scas dec xchg sbb xchg adc cmp adc pop pop rcl rclb ret cwtl add inc and cltd (bad) mov lret addl ds add mov lods jmp popl sbbl mov jns aaa cwtl mov movsb repz jmp sbb shl add in test mov xchg mov mov lret ficompl jl outsb leave or popf test push aam mov ja push xor jp jl mov cli test call outsl ss addr16 subl jae lahf dec jbe ds (bad) or outsb push xor pop jno xchg xchg out sub inc (bad) daa nop fcoms cli and je or mov cld xchg (bad) mov (bad) imul mov xchg loope jne xorb lret ret shl outsb mov mov xchg pop ljmp lds (bad) pushw add aas xchg out xchg out push test das xor lret sub push adc outsl jae in sbb sub jnp,pn in mulb xlat movsl call in (bad) add sar fucomip shlb mov adc mov jge test popa xchg aad inc jp sbb fisub jmp add ss xor hlt movsb push jnp movsb aam mov fld decb xor xchg data16 add mov dec cmpl xor push push out lock pushf rcrb nop xchg inc (bad) fsubr xchg bnd or add and and call (bad) pop and xchg pop inc fisttp lock je out pop (bad) mov sbb mov mov inc sub push jp and repz sbb push mov mov pop popa jb arpl adc aam sti popa push mov mov xor or jns push mov test push inc pusha iret xor les push outsl or bound xor test xchg shrb pop mov cmpsb and test add cmpb (bad) es test into adc aas sbb pop add stos (bad) push (bad) mov pop add loopne aad out testl mov mov push xor mov arpl test scas lods mov xorb push push pushw fnstcw jp jne cmpsl sahf inc inc (bad) jg pop adc and subb mov add in lret (bad) xor iret call sti sub mov lock mov mov int3 clc jbe cmp popf sbb js cmp or sub test popa lods xor test or pop push inc jnp pop fisub pusha and or cmp sub lret cmp stos mov mov mov out pop ret cmp (bad) jne and cltd mov xchg sub les sub jp mov xchg sbb sbb jae (bad) popa xchg nop rep arpl xchg or mov cmp imul in sub xchg push pop xchg cmp cmp mov js sub add xchg pcmpgtw bound mov les or sub sub leave inc outsb and inc rcrb insl aas mov (bad) xor xor or ficoml aad cld inc mov mov arpl call mov push cmpsl les lahf std sbb fwait aaa into sub push pusha ja fwait std adc mov addb push push dec xor shrb (bad) inc sbb (bad) jmp ss mov mov fild orl addr16 sub fadds pop push jge loop stos fs lea sbb xchg lock mov dec decl ds push lret shlb out pop mov das xor or std dec fsubs xchg outsl ret scas mov call push call imul mov add mov dec sbbl push add sbb push adc jbe dec xchg (bad) xlat lahf jmp cmp adc push jmp xchg pop mov cltd cli push jbe adc shrb imul mov or stos fmulp mov scas scas popa into mov mov jecxz xlat cmpsb loop in cli dec mov aad pop xchg ret imul stos ja mov push loope or sti adc dec xor inc insl or cmpsb jae fwait nop outsl add fcmovu into xchg mov mov movsl loopne dec pop std lret vcvtpd2dq (bad) and sbb sub in mov or push add mov pop bound inc fisttp test cmpsb stos jo rclb push sarl mov arpl xorl ror test mov iret cmp aam aam pop xchg lret pop lret inc mov (bad) es aaa sub sbb mov aam xor dec cli imull sarl loope dec addr16 cld lcall iret xchg pusha mov insb sahf lahf adc (bad) mov dec in add and mov pushf sub inc push sbb scas push add sahf iret mov js pop jge out icebp cli aad ss sbb xor mov icebp lret sbb lds xlat xor adc stos mov aam jb push push dec in adc iret addr16 (bad) dec push aaa cmpsl xchg sbb pushf hlt jp cmovne xor dec in std into sub icebp dec addr16 outsb jnp (bad) mov cmc cmp sar nop sub push pop stos shll (bad) repz sub push push pop xchg test mov and das and sbb or lcall adc pop xor les sub dec js dec jmp xor (bad) cmc clc sti ja fwait push in jb (bad) jnp (bad) pop and mov adc inc adc xchg xchg or inc adc push pop push jmp shl add inc or adc out mov ljmp decb idivb xlat push hlt imul call jns into shl push mov div and out xchg cmc cmp rorb cmp mov pop adc mov (bad) popf and cltd inc and std gs movsl call popf fild clc mov dec mov add mov or inc push or mov clc hlt lea inc cmp stos imul add subl daa mov pop pop adc scas sub push (bad) xchg add lods or ljmp push fcoml mov lret das adc xchg jmp outsb cmp aad xor jge aad jne stos addr16 imul (bad) jnp adc jge xchg xchg aaa dec mov imul lock and insl sti xchg orb (bad) into xor and cmpsb lock inc inc jmp jge fbstp push cmp sbb and mov fldt std push dec leave test scas in mov fcoml popw fimull mov xchg or fdivrl cmp pop or push xchg inc pushf and fisttp dec stos sub push fmuls pop popf jecxz stos icebp imul ss inc out adc mov inc adc pop push push and or add (bad) xchg cmc mov out es push push ljmp xor push add mov arpl aaa and clc lea xor nop push rolb inc push xchg out je push or mov stc pop cli (bad) insb add ljmp add and mov loop insl cmp lahf andb lahf xchg ret push rolb adc sub in jo sub pop gs cmp add cltd cmpps fisub dec sub xchg or rorl fs clc jns push cmp pusha call jecxz in rcrl scas sbb stc out out test push inc lcall imul push cmc sbb sbb jl ljmp cmc int js lret pop mov mov into pinsrw cmp jns xor dec outsl push xor cmpsl ret dec mov popf arpl sahf xor mov mov scas into jg bound es ds ss in push push incb jle,pn or lods scas push out add (bad) dec add int3 fs mov push sbb insl call es clc and xchg insb ss dec push in push jp sub (bad) pop mov mov out inc arpl jns test add cli jp mov out rol scas rcr ljmp bound loopne sahf pop iret or lods or mov in jg pop loope lcall enter and jb lds cld mov cs cwtl pop adc xor cld lds je push add jmp xor int3 mov cli xchg inc push inc popl dec jnp fsubp fs (bad) lods enter xor pop sbb fisubr cmp enter notl cmp (bad) mov xchg cld sub push int sub push jle,pt sbb xor xchg sub xchg pop das repnz pusha mov or xor repz or dec scas stos out lret sub cs xchg add push jo and xor repnz pop jp jo lea bound insb push sub mov sbb xchg and cmpsb mov scas aaa pextrw fcomi or mov out call xor pushf xorl adc jo repz out or mov (bad) fwait pop stc mulb inc pop and cmp jne jge mov clc sarb mov (bad) jmp jnp cmp pop test push cmp or ficompl xor mov popa test sbb mov sbb lds mov push sub sub jae cmp xchg (bad) scas cmp sarb jb aas xchg stos enter in cmpsb cmpb (bad) mov and dec lods mov xchg jns,pn insb inc push fisttpll xchg aam outsb xchg in pop xchg xchg adc jg adc dec repz (bad) cmp inc repnz in dec lret mov (bad) xchg ds mov lahf or sbb sbb aam pushf lock mov cmc (bad) mov mov leave rcrb sub int3 push imul (bad) jle xchg or (bad) fist loopne aaa clc inc pop popa xchg test mov insb push mov jne cmovp or sbb data16 mov ss cmp jecxz and (bad) push mov add cmpsb data16 (bad) jp jl inc jecxz cld mov aaa sbb mov push cmp sbb or add pop aaa mov add pop ret xchg sub insb out ud2 pop aad ss scas xchg out cld push fistpll clc pop cmp mov push push xchg rcrb mov cmp ss daa sub pushf insb adc dec jge repnz loopne in jecxz sub (bad) jnp loop push sbb ss sbb and sahf mov movsb xor mov mov cmpsl outsl mov lcall jb pop pop (bad) loop lahf ror or sbb gs out pusha sbb idiv popf cmc mov jno aas cltd cld ret movsl sub xlat inc mov jae dec lret xchg pop or jns sbb sub pop gs int dec js adc cmpb sbb cmpsl hlt (bad) sbb ss xor push fwait mull (bad) (bad) mov push inc or jge mov (bad) (bad) xor in (bad) jg jmp pop add jns cmp ds or inc xchg lea sar das inc mov dec cs shll (bad) sub mov add mov mov xchg or and pop jmp pop loop addr16 jp sub cli mov fdivrl or sti mov push out jae cmp push into xchg fsubp add xchg lea in imul in ret cltd mov mov (bad) fstpl cs mov pop out inc (bad) sbb push cmp sarl je push xchg cmpsl das push movsb aaa or dec adc lahf je sub adc shrb (bad) into cld out (bad) and push pop xchg push cmpsl cmpl cmc sub mov push cmp push adc decl jne lea pop mov sti sub xlat xor xor adc scas jl mov popa clc out xchg insb mov pop test jne arpl or loop scas add cmc xchg lods push rcl adc movsl mov cli inc cmp loope pop ja mov sbb mov js insb jo aas aaa lcall jl xchg idivb js jns fbstp adc add xchg jno sub mov aaa popa cmpsb adc push adc pop repz cltd add inc ffree mov inc mov adc outsl cmp fdivrs mov mov lock mov mov sbb fldt rcll loop push mov mov jbe or xchg fwait in xchg sbb and ret jno and xchg jbe mov xor call pop scas lock sti fcompl push loope,pt sub jl sbb fmull imul xor sub jno rcrl jb and stc sub leave movsb push scas jb test popa pop add inc out xor adc clc adc mov add adc xchg jecxz cld mov xor cmp test rcrb xchg inc inc xor cmp test (bad) pop hlt pusha push mov jecxz mov (bad) bound shlb lahf popa js mov xor iret or jnp,pn ljmpw outsb (bad) and sub aaa jae mov sahf js dec cmp aam fnstenv dec jmp ljmp js inc adc sub imul push add adcl mov fiadd loope ror xlat imull out shll xchg cmp fdivl cwtl mov mov dec pop std xchg cwtl gs test (bad) inc mov fbld push shll aad lret cmc add push scas push pop loop adc jg push addr16 sbb out xchg mov in repnz lods adc xchg gs shr sbb enter adc subl lea stc sti jne xorb enter xchg fwait sbb jae lods leave jp sub (bad) cld iret fsubl mov fsubrl mov fisub mov dec inc push dec push adc and rolb (bad) push push mov adc xor mov mov icebp int pop push pop mov mov cmpsl data16 mov out ja mov clc aam int jge movsl (bad) pop xor fcmove add sub cmp loope outsl scas mov pop inc int adc inc les js jnp fildll push adc aas lods sub pushf push popf out push adc or pop mov mov cmp das nop push fadd sbb test lahf loopne pop push dec mov xor movsl (bad) mov fs stos sbb aaa or fcoms popf into mov jbe addr16 sbb xor insl fidivrl outsl and icebp mov lods lret xor daa test scas addr16 imul mov pop lret jle jg adc inc or imul mov fidivrl mov jnp pop lcall fnstsw imul push andnps mov popa ljmp pop out lods xor (bad) mov out call mov std or sub insl repz clc and cwtl iret and dec test xchg sbb sub jns xor push pop pop and jae lret mov add or inc je in xchg adc jg cmp pop inc add jno adcl mov mov (bad) lcall jmp lods mov pop leave add cmc int mov loopne int3 sbb stc inc lock adc test leave xchg adc je int3 mov lods pushf pop cmp sbb xchg xor out int push xchg int3 mov iret imul dec repnz dec xor repz mov in mov jne pop (bad) mov fidivr aas or xor out xor clc in stos or dec and push imul bound lret or (bad) mov mov nop (bad) xor mov clc lret lock xchg sti or loope jmp push pop pop divb and imul das clc cmp in sar ret in mov shrb xlat scas clc sarb and cld xchg aaa sub push adc adc repnz jnp mov movsl lods test out mov ret sbb push loope xchg sub dec jmp aam push xchg rorb cmp sbb repz jle mov xchg in pop cmp daa mulb add xor ja (bad) cltd jecxz xor ja push mov sahf jns or cmpsb int adc cld inc pop sub lret scas and push jecxz decb cltd mov push andl sub pop adc and sbb gs sub dec mov rcrb or je push pop sub nop xor sbb ja leave push cld dec add psrlq jbe inc xchg mov dec and push shrb pop or pop pop jb in cltd cmp hlt mov test popf repz xchg jecxz roll sbb addr16 addr16 sbb stos je je jo es inc push inc pop jmp xchg (bad) cmpsb mov jp dec push and dec xor nop ret sti adc or xchg and (bad) dec sbb dec adc mov (bad) push inc setg (bad) repnz cmp test mov xchg jo lret roll popf ficomp out jg in sbb arpl add iret in cld adc es push mov leave add xchg adc xorl shrl pop leave pop dec xchg mov cltd lahf mov repz jae dec mov push lea pop test int3 sub xchg popf js cwtl pop cwtl fistpl jnp cmpsl mov stos pop int3 loop out mov sub xor sbb test daa xchg mov or sub mov xor jp or xchg adc mov or leave dec ss imul data16 cli aad jmp (bad) lret cmpsb leave sarb pop stos xchg mov sbb imul lods pop out mov fistp je sub jbe sbbl or xchg imul push lret pop vrcpps pop and xchg hlt (bad) sub push add mov in lret mov push xor mov dec fsubs sbb pop mov dec cwtl inc loop fidiv in (bad) or pop push pushf xor aad scas mov add (bad) lret jne push outsl pop jnp xchg fs push and dec mov mov (bad) enter arpl insb insb test lret cli cld ds push ret and js addr16 adc jbe clc adc jae mov jecxz dec inc mov jge xchg jg xchg and mov movb (bad) dec mov cld push in pop add movsb int3 flds and test push xor inc adc lods aaa add icebp inc shl stc arpl out or mov insl (bad) mov adc and dec stos xchg insb xchg cmp nop hlt les inc pop nop mov lret mov dec aam inc xchg mov cmp push xchg xchg add in cmpsl int3 cmp dec mov adc jp jmp setl fsts out stc mov push ja popf xchg jg dec cmpsb fnop out adc dec pop mov clc test (bad) jnp add or mov (bad) mov pop stos fild xor fildll into add adc ror ret mov cmpsl push or add (bad) xlat mov or leave xchg outsl cmpsl xchg cmp pop adc xchg xor pop fldenv sbb sahf lret jae aad scas pop dec fmull or iret xchg ss cwtl mov jle test add jne xchg cli dec imul cs sub iret in xchg pcmpgtb into cmp add or inc leave js,pn pop add mov in or lock or and jecxz jae aad pushf (bad) jo add jle adc jae jp or mov mov jb inc setae sub jbe test mov loope or cmc pop cmpb mov xor inc std xchg (bad) mov mov test lods subl ja jno push arpl xchg rcll insb jbe arpl fs or jp decl or sahf push mov (bad) mov aas out sbb adc cmp out push loopne call clc pop sarb out cs pop cmp cwtl bnd call mov loopne jae les inc mov inc mov das sub stc mov (bad) int test sub jmp xchg inc mov aad add push fmuls test loop xchg adc cltd mov in stc loope xchg rorb and or inc xchg mov sub xchg xchg clc pushf xor ret std push ljmp (bad) xchg test int3 fldl sub push mov frstor jo push dec gs (bad) into jg rcll xchg hlt icebp int3 jmp xchg xchg jle out xchg insb stos sub sub xchg (bad) jnp popa lahf xorb lds xchg out aam arpl repnz sub sub pop mov out stos mov int3 or and xchg incb (bad) jo or xor sub fistp in and or popf sahf je mov xchg or mov add rcrb xor arpl inc cld or jns scas mov cmpsl mov inc aam jo enter mov call repz in test jno mov inc or mov stos pusha call add test cmp sbb repz int ss test add mov xchg cmp mov pop mov enter lret cmp or pop movsb faddl pop movaps jmp fdivl leave pop inc ret cld dec and iret mov shrb jno fiaddl lcall jns jb cmp roll adc push (bad) movb cltd int cli leave jg int mov outsb repnz jmp fucomi fdivrs xchg ja scas pop mov mov mov repnz cmc jg hlt es fs push cli call push scas enter mov cwtl test sub sti lods test inc rorb push out adc xchg jnp div mov test sub mov mov clc and pop cmpb sbb adc push (bad) cld or xchg (bad) xor ljmp mov outsw iret or pop add pop sub sarb out cmp and mov call pusha mov les and jecxz stc loope sti mov xlat je cwtl sahf adc or shrl or and xor icebp push mov andb enter push jp inc push fidiv add pushf into inc mov sub inc push int aad push das xchg xor inc sub into addl lahf and adc int3 pop inc sbb daa loope dec sbb aad inc sahf out nop add das mov scas lock cmp cmp lea push push in mov in in setl adc scas pop (bad) repz dec or scas scas pop push sahf sbb aam push imul int pop xchg xor loope mov std repz lds and (bad) je add je loop jge subl adc std enter dec and ds cltd mov mov in pop fldt fdivl aaa xor icebp pop adc arpl arpl aad dec mov (bad) sbbl bound std mov cwtl loopne xlat sbb lea or dec sahf sbb pop mov outsl and jbe sbb pusha xchg push push push pop xchg flds cld mov inc cli (bad) xlat inc popf mov mov test inc lret les and pop ljmp or es fsub ljmp mov (bad) mov sub xor std ret mov push dec jl out mov imul xchg mov pop xchg lea lods xor push xchg dec outsl nop loopew pop and mov cmp add leave cld out mov mov cmp mov fidivr mov lret adc cwtl cmp aad mov faddl push pop insb lahf mov sub cmp cmpsl icebp fsubr adc stc sub xchg mov or cmpsb inc loopne sti inc (bad) setne (bad) cmc into lret arpl mov shrl mov pop loope mov push jp loopne fidivr clc (bad) jmp std mov int3 mov mov insb xchg sahf sbb int3 xchg xchg jns aaa xchg ljmp push repnz lock cmp out out xor stos ret lcall cmp ret jo or sbb mov int3 (bad) mov dec dec mov mov add cmpsb adc aam int3 test add push push daa loop dec mov cmpsb addr16 std xor xor jle inc sub loope lock xor int3 test sub add or sbb (bad) aam repnz scas (bad) shlb test cmp in add sbb inc fldl or addr16 xchg dec inc adc outsl ljmp mov (bad) jbe mov imul addr16 jae dec jecxz mov out or (bad) int xor or lds loope mov mov mov xchg inc fistpl cmp sti int3 adc xor inc sub mov nop fsubl repz aaa mov popf sbbb mov fxch dec outsl pop cli scas out and dec lahf pop xor cltd ret add into mov xchg leave lds in cmp stos popf adc cmp push test cwtl bound (bad) stc pusha imul inc and test sbb rcr xchg jb sbb in out cld ljmp mov sbb cltd popa addr16 add and aas out loop mov std int3 sub loop inc cmp inc inc dec xchg (bad) xor stos cs (bad) push call pop jno pop push or loope dec js dec (bad) or and cmp mov push js fdivrs ljmp js dec cmp daa pop dec std adc aad clc out (bad) inc (bad) push sbb out (bad) cs cmp in xchg and jae or adc std pop sub repnz push sbb sbb inc repnz xchg pop and movsb cli and sub outsb push (bad) std or sbb cmpsb insl pop into add gs loope popf xchg and pop jno push mov icebp nop (bad) mov lods sarl mov mov iret data16 mov lds scas jg fistl decl (bad) push daa insb dec bound inc inc push cmp pop ds data16 sahf sbb xchg js ror adc fcoms adc (bad) lret xor mov mov xchg test neg ret scas mov test dec pop ret mov cld enter dec je inc mov pop mov aas sub popl sbb mov mov rcll jne mov xor mov popf ljmp in out popf cmc dec xchg jl (bad) cwtl add jecxz scas adc adc mov jle pop fmull xchg pop ret sahf (bad) scas push divl pop mov test mov fnstcw aam hlt push add (bad) pop xchg inc and sahf push pop (bad) arpl dec pop mov jmp outsl add jge or shlb popf data16 fidivr lods dec cs sbb loop dec cmc adcb jae stos cmp and sbb adc loop mov or roll mov dec movzbl inc inc or (bad) nop (bad) pop xor stos and mov (bad) mov xchg les fcoms jbe or movsb int jns mov xchg jecxz cmp clc or and mov jle and and aaa xor sahf or out pop pop movsb rcll test cmp jmp jne mov aam push xor xchg cwtl mov (bad) not popf sbb out pop sub add das repnz cli in mov lahf ds adc loopne mov lahf cltd pop push je stc lods (bad) xor (bad) sub addl and mov popf inc xor push or lods shrb jmp and (bad) nop out aam push xor and add mov aas daa push add mov ljmp xor jno mov (bad) je xor dec cmp jmp sub pop jl sub inc push in stos (bad) xor xchg xchg cmovb out sbb int xchg jb in sbb (bad) cltd outsl push jmp xchg mov lahf pop (bad) ss mov jmp leave or imul lods mov mov call ret sub cmp or nop mov dec fcoms xchg das ss sub ss rorl es sub mov sub je cld pop jge scas aas inc daa push (bad) push mov outsl lock lods aas add in sbb insb je or sbb std mov cmp inc dec sub xor repz dec outsb mov jno xchg mov xchg test flds (bad) jl mov push nop test sarb test sub jae lcall sub cmpsb test adc lret mov mov push lock xchg imul std test lret and aaa lahf inc dec adc or fisub lods xlat jecxz leave inc push out jns jg dec mov inc lahf ja xor xor testl ja (bad) mov jmp cmpsb in ja clc sbb add icebp je adc lods cmp neg cmc pop push test add sbb jle cmp inc fistpll cltd lea daa jge inc jl jle jl lock lock cmp adc add and xor sbb iret shrb push jle,pn cmpsb jo mov loop push or lcall imul push test adc dec xor arpl sbb mov jns adc (bad) mov data16 (bad) sbb jno aad sbb xchg outsl and lock jl add fwait test push cmp ds add pop ljmp add in nop incl add xlat xchg mov adc dec int dec mov sub lret cmpsl ljmp push ja loopne mov mov test popf dec enter add push arpl dec sub out mov mov jo pop sbb mov (bad) add aad ljmp int3 sti pop mov leave cltd mov sbb divl repz add fwait push xchg jmp xchg and (bad) pusha pavgb loopne mov inc sti mov adc xchg cmp jno stc pop outsb pusha out psllq jno sub push inc mul jne popa fisubrl dec mov mov or lods rcr mov pop pop bound or add and std fsubl inc pop outsb push out imul insb xchg daa xchg mov les in mov mov lods jg rcrl cmp dec mov out test daa ja popf in repz and or (bad) push cmp in shl adc push xor sti xor jae push mov movsb cmpsb in xor mov (bad) or pause pop push add jge clc mov sbb test push (bad) xchg sub ljmp repz dec pushf mov xchg sar hlt jns arpl jp shrb mov inc mov and jg pop cmp loop mov and aad mov into nop aas test mov xor mov sbb and xchg push and hlt ljmp sysenter add push jns xor pop xchg aam jno push jmp andl lcall daa in jg and jo mov push arpl std push pop sahf fild (bad) lods ss push sub popf adc jecxz cmpsl int3 and dec out jp mov imulb insb adc push jo (bad) je out push stos jno cmpsb je in insl decb bndldx imul xor popa test ds sub lcall pushf lret (bad) cwtl fs call and mov mov add js bound jnp ljmp mov mov dec push or fwait sahf mov pop test (bad) mov xchg scas popf lcall ror xor sbb sub pushf mov in into cmc pop push les push (bad) imul movsb lods xor dec popa push or adc jns xchg adc mov mov insl and inc mov jmp (bad) xor push loopne jbe xchg adc lret mov out or mov aad cmp mov sbb or cmpsl xchg lds or cmpsl bound xchg das mov fsincos loope daa inc cmpsb pop mov sub movsl aaa push push jb fwait jmp mov mov xlat push scas push ds push fisubr pop mov outsl dec and push aaa lahf stc cmpsb push stos imul js lahf mov jmp (bad) push (bad) aam cmc js or xor mov (bad) mov xchg xlat cs ror xor les rcrb hlt in (bad) (bad) scas fisub clc dec xchg dec xor mov adc (bad) loope add sub push mov mov push clc pop cmp (bad) rol lock inc sub std roll jp cmpsl mov push jp ffreep dec mov sub pop jp jno popa ja pop push cmpsl sbb xchg fsubp out add lahf mov aad into cmpsb inc mov mov int3 jmp inc out mov insl push sarl ljmp add movups xchg aam outsl repz jns pop cltd pushf dec cmc push jb and outsb insl push into (bad) das add rol add lahf jae inc mov pop mov ret js xchg or sahf sbb adc and stc mov mov sbb xchg pop inc aad int3 ret cmp sahf cmp xchg sub adc xor xorl cs sub sbb jae dec push jl xchg xchg imul xor stc xchg sahf adc mov cmp mov xor sbb inc mov scas aad jl repnz push dec mov sahf insl push or addb hlt loopne ret xor leave cs mov fisttpll adc dec in les dec sub idivl or adc fwait cmpsl shll lcall packssdw insl cmp push rol (bad) imul (bad) mov sub imul inc sub add iret lods divl jge mov (bad) xchg sub inc enter iret fs mov xor aaa clc push lcall xlat mov jns or outsb mov dec mov outsb sub sbb dec and stc push outsl jecxz lahf (bad) mov inc sbb cld pushl (bad) je,pn cmpsb xor js sub jno adc movsb xor test cmp adc add stos mov pop lods loopne xchg sub sbb lcall test mov daa shl push xchg fwait inc (bad) mov daa mov lret mov fidiv and (bad) out or jg mov in sub addl push push dec shll mov pop cli mov pop stos cmpsl je insl sbb jp jp adc push mov jno iret adc cs (bad) pushf cmp mov mov dec sbb or int or and add aaa jnp xchg shlb sysret mov xchg xchg in add pushf xchg adc in aaa rcrl adc ror lds pop cmc jbe and pop sub push sbb cmp xchg sbb aad dec or jo pop jae popf cltd xchg in hlt cmp inc cmp addr16 jno and lcall sahf cwtl negb ss (bad) lods mov or int3 or jne sub insb clc xchg push pop rcr xor scas push sub jae test shll je rorb and cmp push popa ljmp sub popa jns pop jp mov mov mov cld mov push shlb add dec out mov sbb lret inc repnz clc sbb lcall std xchg ret (bad) cmp mov aam jns test mov movsl shrl dec adc scas sub add and cld push hlt out mov push pop mov sub jge add call mov xchg mov xchg pop into jns sti mov jno daa shr clc xor mov mov mov push add les inc pop popf dec repnz lock inc or jecxz jmp push sbb fdivrs pop sbb ljmp movsl push mov push jg sbb cmp add insl nop pop imul mov pop inc ljmp dec gs sub or cs mov lods mov adc daa xor into cmpsb fxam lods push les and sbb adc or mov cwtl push jbe (bad) fisttpll inc int or ja popa push mov test jecxz int3 (bad) sahf mov cmc pushf pop xor jecxz test xchg dec in mov push push clc inc or mov lret (bad) mov adc sub xor xor nop cmp push data16 jne mov sub in fwait int loop jmp mov push je pop push dec mov pop arpl xchg imul dec out and push push hlt jg adc inc push cmpl or je inc pop xchg sub aas cmpsb movsb cmc cmp xchg inc sub ljmp repnz push out lret daa fdivp fiadd push shlb insl and loopne xchg push jg mov and stos push xor inc pushf mov add (bad) sub js loopne icebp je xchg mov sbb out mov lahf add mov bound lea jns rcrb jo stos js test or adc popa lcall adc jmp es push jmp test les data16 je outsl jne mulb push cmp jmp movq aaa xchg pop es ret inc adc jg xchg pop (bad) xchg dec dec mov dec push cmc test sbb jnp pop xchg inc lods dec pop mov sub imull (bad) nop das adc add sbb out adc add dec rcrl xor mov inc test add sbbl mov insl cmp popf or xchg movsl inc mov push xlat mov adc mov mov and jmp mov test repz adc and in sub orb (bad) cmp lret xlat jl sbb inc fldcw sub and aaa aaa and push scas or pop push loope add mov aas pop fildll sub fistpl xchg outsb nop int jns insb push push in (bad) outsb in mov bound mov test rcl repnz ja jne inc push (bad) stc fwait mov daa or sti adc aad or inc and jne (bad) mov mov jbe aam outsl xor dec sub push stos movsb lds dec test fmuls aad lahf ret sub xchg push fstpl jns sub xchg cli push gs push stos cld sbbl and and jne jbe ss xchg stc push shrl cmpsl cmp mov xlat imul int3 mov jmp push sbb sahf test fcomip xchg fisubl lock or lret loope mov inc mov arpl decl das popa enter insb xchg lea or adc sub adc (bad) xor cwtl cmp out repz jecxz push fcmovbe push mov subb sbb dec mov mov push pop pushl add test jno in adc fs mov mov mov xor popf add cwtl xor aad cs mov mov (bad) leave aaa add lcall jmp mov (bad) cmp das int sbb xchg mov jg inc jne sbb adc mov out dec in cmp js mov mov pop mov data16 pop bound in adc int pop pop data16 push and clc test stos xchg xchg je add (bad) lods mov nop inc out fwait int3 call test sbb sbb adc mov shrb xor subl arpl jg push outsb dec in mov pop dec pop or and (bad) ja jne arpl adc push sti dec cld icebp insl push and pusha cli incl jmp mov rorb in push aas cwtl cmp in ja pop movsb mov pop inc jno add add lret ja out cmpsb inc jp mov xlat cwtl in fmuls out push ss inc mov or pop les lods or popa cmpsb lods nop xor lock mov xchg inc sbb ret push xchg jnp dec cmc pop outsl mov add pop pusha imul arpl das fwait mov out and stc arpl stos or loop ja xchg (bad) (bad) xor (bad) xlat adc sarb dec sahf imul sub es mov push stos adc xchg dec sub es int pop sbb (bad) test jb cmpsb jmp (bad) enter nop xor lret je sbb (bad) sub or jge fdivrl mov movsb clc movsl cmpsb scas rcll jmp scas insb jge not bound clc cmp out mov popa out int or mov fidivrl jl adc pusha mov in pop movsb (bad) adc fldl cmp cs and xchg adc sub aam xor xchg je (bad) dec out cmp push xor mov les loop lahf iret cmp or and aam (bad) mov lahf mov mov aas adc mov lods call in sbb popa ficoml dec in stc cltd jno sbb repz inc es mov mov dec stc pop sub adc out add inc cld pop rorb mov or sub and xor mov rcr pop int mov aaa mov pop mov cltd inc and fldl cmpsb inc outsb mov (bad) xlat dec sbb mov or xchg sub outsl xor mov test jmp loop lahf xchg xchg rorl sub mov add mov lock push mov and aad icebp in pop xchg (bad) mov dec jnp add loopne jno stos daa adc call and pop call adc mov arpl repnz and mov iret inc xchg in jl in xor movl mov xchg or into dec stos movsb jo out add push (bad) inc mov push mov mov push mov add mov xor lock sbb es push mov push gs jnp cmp jg call sbbl shll (bad) stos sub insl cld addr16 ss xor in mov jge inc inc sub sahf out add inc add inc xchg fstl test lock daa loope dec lods sahf push (bad) cmp dec out mov jae mov jecxz js clc shll (bad) std lods inc inc test out adc sub sbb es xchg push icebp in pop jo and notb xchg mov jns rclb pusha adc mov in mov loope lahf xchg ficoml pop mov jmp mov leave jp lds (bad) push sub lods mov xchg cmp and les lahf into jb inc in jmp push pushf lea or iret imul test add add in push and les fdivrs in lock leave push aad xchg mov inc (bad) js pushf dec jae (bad) (bad) mov popf mov nop xor fstpl mov std (bad) fisubrl or add inc add adc stc outsl pop jb mov loop adc sbb cld movsl push test and xchg sub fistp mov push pop inc xchg (bad) call jno insl (bad) lret mov inc xor dec js push jg daa dec fsubrl push loop sub insl sub movsb xor sub adc insl mov cwtl sbb cmp shlb ficompl and mov or jmp movsb or mov or push div ror jnp xor inc mov daa inc dec fmuls clc loop sbb mov mov (bad) out clc mov jmp clc es mov adc mov sub adc push dec addl jno repz inc (bad) rorl and enter sbb push push pop jae cmpsl jmp test movsb test adc addl inc int (bad) (bad) inc jmp pop push or movsl ret jno fidivl in les cli jmp out mov scas adc sbb xchg jp aam lcall imul (bad) lock dec int3 xchg jno cmp xor inc jne pop mov aam leave hlt jo pop arpl xchg mov daa mov or outsl fnsetpm(287 cmpsb sub stos xor push out stos mov aas push pop xor inc mov sub mov mov mov aas add jae leave mov jmp push xchg push jmp sti dec and cmp jne bound popa inc push ds popf jle sub jo sub mov xor and mov jns test jnp add popa cmp push push int xor lods enter loope xchg clc (bad) iret mov clc call xchg popa push add jp pop push loop pop push mov clc mov (bad) divl dec sub jno mov sbb mov cmp mov jg push dec jb cmp in arpl inc push add push adc je mov ljmp and jle push sbb cmp fdivrl jo clc int (bad) rolb ja or lods mov xchg xchg mov adc loope push xorl mov xchg sbb ret mov out sbb xchg gs in dec or daa stos clc popf sub pop movsl bound (bad) int3 cli add mov sbbb push mov sbb les out mov push call cs (bad) in fdivl out fisubr (bad) mov and jo lods test push insl cmp in and xchg xchg xchg mov push mov mov int data16 and fnstsw jmp mov jb fucom int cmp add outsl pop or push dec aad and mov das imul enter and push ret cli add sub arpl jp sbb jle lods mov jb daa sbb movsl mov std mov leave jae andl sub arpl jne out (bad) jb lahf jecxz sbb adc shrl (bad) or (bad) jns aam dec imul jmp mov rcrb aas adc mov dec (bad) packsswb push sti test stos stc stc dec aaa into cmp sub pusha ds out mov xchg fcoms add sar jle ret popa xchg scas xchg arpl imul faddl cmp mov idivl in lock outsb pop pop jno sbb inc mov call mov movsl sbb sbb add das dec out nop daa gs cwtl mov mov push out xchg mov fnstsw xchg lds movsb jbe int3 test pop mov scas ja stc push notl cmp xor loopne js push int or iret (bad) and mov outsl mov rorb scas push mov in ret in jno popf loopne mov inc (bad) jg je pop pop push (bad) push push jbe,pn or movsl pusha cld pop push adc inc xchg adc lods pop lock sbb mov sub pop cmp dec fldt push outsb addr16 lret iret dec outsb push movsb daa int3 xchg pop and mov mov jbe addb cwtl leave adc gs flds mov icebp popa xchg push mov or gs or xlat (bad) pop hlt pushf mov stos push hlt sbb ret mov and jb in nop or cli mov jno sbb sbb js dec (bad) ljmp or outsb push adc pop jns fnop lahf cmpsb (bad) mull and push sbb aad jno jl add xchg fdivr inc out repnz js cli mov xchg lods mov cmp push cmpsb (bad) cmpsb adc insl imul movsl mov je jns push add pop push mov dec mov dec shll gs shrd lods mov xchg in cmpsb (bad) jne xchg mov inc mov mov inc xchg in rol push mov mov ljmp es mov jo and push or xchg int pop fist dec je cmpl or insb loop pop pop cmp cmc sub xchg adc enter je,pt jmp push cmpsb out es mov cmpsb pop pop adc out imul popf add pushf jecxz inc rcrl loope out add mov mov imul sbb push and pop mov or cmp ret mov dec sub mov mov lods cmpl xchg push jo add rcll sbb loope mov xchg add adc (bad) and insl mov cmpsb jne jnp jl pop push dec xor lds lret sub xor pop (bad) jo fnsave cmp jns mov jp jle std cs pop out movsl ja shrl pop (bad) mov in push xchg sbb mov xchg insb push or mov stos push repz movswl insb jp sbb addr16 adc inc jmp jbe into jg or cmp data16 (bad) dec imul cmp dec popw mov xor inc mov inc aad repnz pop into inc and rcll (bad) mov cmpsb adc addr16 es ret mov push pop inc aas scas lret into les pop sub jns fistl rclb mov add add jno (bad) cmpsl aaa mov bnd lods and mov mov mov mov mov fs cmp mov mov js dec xchg xchg mov mov out mov mov adc pop daa aas jnp cmpsb mov and jecxz xor test cmp dec js sub mov je out cltd stos adc leave xchg imul leave movsb fadd pop rorb cmp add ficomp mov mov test and sub xor xchg clc jecxz ret push pop xor or clc mov subb mov enter mov xchg mov inc (bad) or push ss mov sub js sahf xchg orb lahf popa js in mov ficomp fs mov or adc push test and testl mov pop mov and mov mov outsb pop cltd arpl test cwtl flds (bad) xchg sarl movsl out dec nop lds pop sbbb jle xchg adc pushf rorl lods sbb js loopne aad or movsl rol fstps unpcklps xorb pop or pop xchg aaa ljmp out mov inc mov sbb in pop (bad) inc pusha sub cmp movsb jae push hlt loopne push lods fstpl sub in stos fwait ret mov or adc add (bad) dec pop cmc fistpll jmp enter iret jne popf mov loop call pop push xchg ds fmulp mov inc aaa adc stos adc mov push fidivr cli out jnp js cwtl sar jl call dec inc (bad) test nop fwait lret mov insl cmpsl fistpl test pop lcall push or jle repz dec xchg ja mov stos shrl mov pop fistpll push push pusha adc shll mov lret dec add xchg add xchg add inc faddl scas cwtl mov into push pop std inc adc mov jnp jg cmp xor sbb adc or lcall pop mov lcall mov insl inc jae ja mov stos xchg test xor jno push (bad) hlt sub push sbb rcrb loopne jecxz mov pop xchg pop paddw incb push xchg mov gs add mov shrb shlb xor dec outsl xor mov xor mov mov xor xor inc xchg mov icebp call (bad) jmp (bad) or rorb sbb ret dec std test mov daa scas ja out mov movsl sti (bad) mov cmp jb sub and and mov int pop movsb jbe insb test enter jno insl pop fdivl push (bad) sahf rorl int3 sahf jae scas cmpsl dec test sub (bad) mov sub fisubrl hlt mov lcall push aas xchg add add insb xor (bad) fildll pop mov jge adc cmp jl jb fnop popf fs jb push iret xchg cwtl movsb add push loope cmp jb mov push cmp loop clc es adc jbe inc (bad) fimull into loop dec clc mov sub sub sbb inc or push cmpsl lret or test bound scas test jl jecxz movsb aaa imul add inc fs adc pop sub daa loop sti cmp (bad) xchg push or (bad) push jbe xor scas jecxz (bad) sti je popf pop xor sbb int xor or punpcklwd mov std (bad) test insl call inc xchg adc nop fstps and popl pop lcall mov jo out push dec les lods das (bad) adc pop aas inc mov inc popf rolb fild stos dec and jns cltd in icebp fs and test insb sbb unpcklps add xor iret adc sub cltd call sahf adc bound in sbb arpl fdivr in das movsb ljmp ja mov adc fild js (bad) int lock inc data16 (bad) push xor aam jo test sbb outsl add or ficom out repnz idivl mov int pop mov ficompl dec inc inc push lret lret pop jns mov outsl icebp jmp sub and subl outsl push inc movsb inc outsb pop adc adc loop mov fldenv mov movsl mov mov mov or (bad) imul into imul mov mov xchg mov das imul or dec xchg mov pusha push jl mov push jge inc fstp out xchg sbb and mov adc stc xchg insb stos xchg adc dec pop mov (bad) or mov lea push js ret cld popf hlt lahf jmp clc cmpsl pop aam add cmp jge push inc or in lods rcrb divl xor push les iret arpl and test sti inc sub xor lods in (bad) iret pushf jmp xchg push std out xor in inc xchg mov xchg xchg leave xor aad addr16 insb pop push mov cs dec mov pop aad mov rcll rcll into mov jmp test rcll (bad) ljmp leave scas cmp clc or jno scas aam mov orl mov nop jnp add addr16 pop sub mov idiv jecxz flds fs add nop mov fidivrl mov lret inc inc cli cltd popf bnd push mov andl cmpsb push cmp jp mov daa subl dec lahf sbb (bad) jb imul ficoml stos iret test xor mov add jae test enter cmp xor cmp lea inc pop lcall sahf hlt dec pop push xor push mov fstpl mov xor and lret addr16 enter and add bound add imul sbb mov push dec iret lahf imul sub in cmp (bad) ljmp call mov loope push xchg adc (bad) mov mov mov hlt sub out adc cmp mov mov dec fstl xorb out in das lcall mov xlat movsl inc aas cli pop dec or std or lock jp pop sbb into popf insl jbe in ja or addl clc add fmulp mov add iret out ljmp xchg xchg gs fcmovnbe and testb xchg pop (bad) int xor cwtl sbb jo adc orl insb lods xor or ss pop pop lahf bswap sbb (bad) lret jge pop sub jno xchg (bad) inc and js jmp mov inc add add xchg insb fist loope sub stos dec insl sub inc pop in aam sbb inc adc cmp xor fidivl mov cmp adc dec push stos push mov pop sub shll clc call loopew sti push inc cmpsl jno cltd andb mov push cs fwait movsl push inc test cmpsb mov insl xor insl mov jmp inc jp pop pop aas dec int3 and lahf mov jno inc roll test mov add mov dec (bad) adc mov lcall inc scas popf (bad) (bad) jp cltd xor mov cmp jl sbb leave aaa pop movsb (bad) stos mov mov mov ljmp and sti imul mov and dec mov xchg push dec loopne test push xor loopne movsl leave ljmp imul repnz sbb sahf sub clc scas mov xchg dec mov int jnp jg jl xchg daa (bad) lret mov or xor in cmp or imul push dec nop repnz adc fstpt inc mov mov add lahf jg (bad) fimull ds lods sub into in dec pop test fldln2 inc mov (bad) movsl or mov pop insl mov and mov pop mov jmp out mov or std roll fist aas dec cmp mov jge or sbb cmp or ror loope sahf cwtl aaa cmp jge cmp mov (bad) lods addr16 hlt add jnp cltd cmc mov pop stos push scas out aad jmp or jnp inc bts mov push and mov fcoml imul push xchg xor mov push js pop xchg clc jns movsb adc stos scas lret fsubrp jp rcrl clc add nop fwait mov or sub cmpsb outsl and xchg push jp xor jo aam sub in sub test test jbe push rcrb add xchg rolb ja test cld dec push mov or fimul pop sbb imul xchg jbe shl nop in fstpl test jl aad (bad) push jb cmc add fisub inc sub xor sbb dec pop add push pop dec inc (bad) stc data16 sarb cmp leave adc cli or inc pop jge xchg fldt sahf jno orl (bad) rorl or fdivl mov (bad) aas ljmp push push push (bad) dec fiadd mov sbb ja,pn cld sbb sbb xchg std sub fwait and scas (bad) push (bad) into negb or xchg mov inc or push sbb pop inc mov das mov push loopne pop in dec fdivr scas pop xor roll in sub stc movsl sbb call aad or inc mov sub pop adc jl sti cmp sub pop lcall subl out out test mov (bad) and jae mov sbb (bad) jp je fbstp (bad) push fucom add imul sub sbb sub inc pop dec negb adc pusha jg scas inc mov aad test adcl push adc iret test movsb and mov aas inc mov dec sbb ja pop xor mov mov and paddusw jno pop sahf jmp in jno aad jae dec and xchg cwtl aas mov imul mov dec dec cmp push or sub adc mov (bad) and or dec jnp arpl jecxz push mov ret icebp lock pop or jl scas lahf mov sub adc addr16 cwtl (bad) and add mov (bad) push lods xchg xchg pop cwtl cwtl adc shld pop push jno js cmp xchg ljmp lds add and (bad) xor jno jge mov push mov mov aas mov shrb and in push mov es addb push push outsb mov xor fucomp cmc cmc push pop fidiv or push ljmp inc sbb sbb scas push dec aam neg dec nop pushf adc mov sbb jns sbb mov dec push cwtl and mov inc push push and cmp movsb in inc inc jo lret (bad) xor push mov push xorl add jl (bad) ja sbb jnp notb imul inc push xchg icebp or mov shlb push pop jle and call and fsubs addr16 push ret popa cld insl (bad) xor adc add bound add xor xchg loopne fistl push call std test add cmp lret add pop mov mov jns mov or enter push test mov jmp mov into xchg push push cmpsb rcl js xchg and mov adc (bad) sub mov and mov (bad) decb fistp sbb ljmp pop cs jae (bad) sahf sub insl jp jmp in mov pop out mov pusha cmp inc jle mov daa jnp sti shrl lods leave adc sti jecxz int inc xor and (bad) out xchg ret (bad) sbb xchg bound ret mov clc cmc (bad) sbb xor dec dec std imul pop xor inc sahf add popa loop and push adc fdivrl and cltd cmp xchg ja inc inc mov sahf or pop adc jecxz div jbe pop push popf jmp in push cmpsb icebp or mov xor (bad) aam in mulb lock repz sbb fdivrp in add dec bound xchg and stos lahf and push popl add inc stos das lahf mov arpl stos inc std rcrb push clc jge cmp cmp stc mov rcrb mov cmp mov sbb dec dec cmp sub out std mov les clc jns rcrb (bad) jo sub loope add stc sbb movsl sub lea (bad) out sti xorb jle push loope mov ficoml outsb in fistp push fs stos in adc xor inc lret sub pop data16 fmul mov (bad) pop les cmp pop inc movsb adc daa adc mov dec shl adc mov out into je cld jnp pushf jae adc xchg (bad) jbe xchg jp inc add int movl inc outsl fidivrl inc xchg sbb test push sbb sub xor aaa cmp or repnz mov (bad) mov push loope xor or cmp test popf icebp xchg cwtl pop cs or loope lods test xor xor rcrl fidivrl or movsl adc xchg sbb xchg add push divb out fiaddl cmpb inc sub sti imul ret pop enter mov mov sub pop dec inc dec loopne fbld scas outsl lret stos test mov movl pop shll mov ja mov xor fwait int adc iret (bad) int cmp loopne and test mov pop sahf lret cmp fnstcw jb ljmp mov test adc dec adc dec mov divl cli popf dec xchg dec loop mov decb es xchg loop lahf mov and call mov pushf pop push stos cmp cmc cmp aaa popl adc lcall dec cld dec xchg pop pushf syscall jge and jecxz arpl pop push stos mov xchg xor jge mov vaddsubps fdivrp xchg lea repz jns cmp ror rorl mov adc call pusha push and in cmc stos pop pop pop add add imul aam xchg into mov (bad) nop fsub ja dec call adc xchg add fimull frstor jmp popf iret jno imul (bad) fwait in (bad) xor push ljmp add cltd repz std mov nop hlt inc fmul sbb cmpsl outsb cmp out fisttp nop test movsl dec hlt sbb and jae or pop and jno enter adc ds sbb xlat in imul push and mov in jb nop negl scas hlt mov stos into daa out push and ljmp adc fninit sbb mov into dec out cmp jo jbe mov and mov dec mov aam cmp jp out sbb scas in movsl sarl test imul jo mov adc hlt sbb adc (bad) mulb xor or pop arpl push push mov loopne sti push repz mov sub sti lods pop gs mov pop and mov add mov scas mov jbe fidivrl push push in jecxz aas cs in jo mov jne mov inc jae pop mov imul or in mov and inc mov ficomp push adc mov jecxz enter jo mov fwait and cmp sti loope xchg in dec shrl sti mov rcll cmp jbe cmpsl adc insb mov jno add stos test add and outsl rcrb mov xchg mov out rcrl cmp int jmp pop mov adc xor fldl out adc pop xor rcl jne in mov lret pop rolb mov cwtl mov xchg (bad) scas xor imul nop jle add mov int3 mov loop or adc jb xchg das add leave adc lock mov jnp sbb fist push imul js pop ror sbb sub add and in outsb out lds adc icebp mov xlat xor aaa push cmpsb mov xchg in jp xchg (bad) imul ss shll and orl push mov mov sbb clc and sub fucomp iret arpl inc mov adc popa jae negb leave stos call dec jo sbb in adc js xchg and jne scas push (bad) and mov sbbl pop cmp mov sub mov sbb push icebp dec push mov fsubr push (bad) imul cmp mov cmp push mov test roll enter fnstsw mov test dec (bad) cmp call pusha mov outsb push (bad) out lahf fs outsl mov lods mov push ret clc clc push popa push call int3 adc movsb jbe fdiv mov sbb inc push lcall (bad) in and sbb xchg push lds clc sarl das jne mov mov xor imul addr16 stc test outsb imul enter pop sar xchg mov jg out les in sub sbb adc bound cmp pop push xchg mov imul add push or das stos inc fwait mov repnz xchg jbe loopne cmp (bad) sti jmp dec sub aaa push mov out or jl in cmpsb cli jnp push jae xchg icebp aaa sub shlb mov testb ljmp shll jle test into cli lods lea mov sti mov and loopne sbb ret call xchg in mov push sbbl adc xorl mov mov imul pop fistl mov jae jo xor and and xchg (bad) and jo lods push xchg cld adc ljmp pop lahf int3 xchg adc movsb je aad xor push pop mov dec cmp std sbb shll inc jge repz lea push and and pop fwait adc xor sbb adc mov jg icebp into push cmc lock mov add jns mov xor xor jl or add sarl ljmpw jns mov leave lock test lcall imul loope aad lock out dec cltd sarb jb xchg jns clc xchg cmp mov cmp fwait mov (bad) dec cmp cmc icebp inc outsl jmp push scas dec scas shrl inc int3 dec add aaa or pop add scas mov stos sbb sbb cmp shll xlat mov fdivl sub push adc add ds in (bad) dec cmp int3 inc sbb mov mov pop int3 arpl pop loope pushf out pop (bad) outsb les push xor jmp sub or into mov (bad) jle fsubrs pop test jae push adc adc (bad) or clc roll lret mov repz stc insb rcrb mov xor (bad) outsl jns jns xchg adc mov fild dec (bad) jb mov mov bound xor icebp and xchg mov inc ficom in (bad) in addr16 mov push jb pop jle pop cli ljmp mov cltd ja add jmp (bad) pushf test cmpsl push jb outsl test les psubsw jecxz lods sarl jge mov mov stc xor mov cs movsb or mov cmp (bad) out dec pop lahf mov sub inc sub mov mov cmp xor adc jae punpckldq fmuls (bad) mov fadd jle addr16 fldl2t popa adc lock mov xchg adc xchg mov add or add and pop add insl or push addr16 icebp in sub inc xlat (bad) movsl mov ja js scas mov xchg lds imul lahf movsb jl aad rol and icebp push mov lods dec lret inc inc inc into and imul mov xchg movsb inc imul cmp inc push jg dec cmc in ds les lret test jae fwait or mov sbb enter into (bad) (bad) xchg fs inc xor or adc icebp sub scas fcoml loop outsb xchg dec push (bad) adc add aam adc dec pop ja cwtl jmp fstpt xchg repnz cmp sub push ret scas imul cmpsl mov loope sti gs (bad) (bad) cmc and push jecxz call xor les nop push adc push mov mov out inc xor inc cwtl sub pusha out cmp cmp and inc hlt shl in jno (bad) jb test scas pop clc ret jp or add lcall sub cmc popf xor mov mov leave jbe clc sub stos out cmp cmpsl loopne test xchg loop mov repz adc add push add inc push adc movsl shll sti pop sub cmp sbb cmp cmpb aam scas shll les and fisttpl push jl xchg lret je or pop nop mov shrd rcrb sub sub (bad) fs or inc lahf arpl mov inc mov jg cmp insl pop xchg add ja xor add sarb arpl xorb mov das add sub les xor dec fimul jge pushf jns loopne inc mov sub mov dec inc mov shr movsl nop cs sub add fadds mov sub sbb out sbb aas cmpsb (bad) fcoml shrb jecxz push je (bad) xor test xorl jae out iret xor inc cltd adc inc adc mov and and add popf ds fdivs xchg xchg push mov sahf xchg inc aaa mov mov xchg sub (bad) (bad) sub inc loop test dec hlt pop xchg adc pushf jb (bad) pushf sbb mov mov jbe (bad) jge sti pusha sbb addr16 jae dec jo imul movsl pushf sbb pop (bad) loopne push fistp rcll pop movsl add push dec add pop loopne test les mov mov jle imul mov pop push sbb pop fwait (bad) jmp or dec adc and scas ljmp sti aam pop and sti (bad) icebp lds lods jle pop adc mov sub sub enter and leave mov rolb mov vpand sarb dec mov mov loope pop or pop pop add mov ja into mov push je xchg jmp loope add rcrl xor repnz mov lret mov cmp jecxz mov push int3 mov xor loopne push addr16 and push movl stc (bad) mov int3 hlt add loopne ljmp xor stos (bad) mov push mov das cmpsb decl jo cmpsb or stos cltd dec mov mov cmp cmp sub xchg in dec fcomps cmc and cli mov je mov test cmp mov inc xor sbb push jno inc jnp push push xchg xchg cmpsl and mov fstps xchg (bad) mov iret push test mov notb ret cltd cmp or (bad) pop cmc repz in insl jnp sti popf add xlat pop push dec negl data16 scas out fdivs sbb inc mov mov fbld cld xchg or mov xchg xor fcomip push or and hlt stos in rcrb cmp (bad) fdivl add dec jg xlat inc add (bad) sbb fdivrl add es dec sahf push xor push dec mull dec ret je jo push add and loop push cmpsb pop in mov jo pop or jge sub loopne xor jne dec sub mov and or pop cmp aaa inc imul shl push cmp aam or dec fnsave aad xlat lock sbb dec mov nop out lods xchg fisubrl in and fsubp cmp (bad) dec popf sbb (bad) xchg fcmove inc inc pusha enter into xchg mov inc push pushf mov scas lock enter js cmp out repz dec leave out lds bound cmpb lret scas pop xlat movsl addb test push mov ljmp push dec xor fildll icebp cmpsb jns jge cmp inc fs sbb (bad) mov mov sbb xchg mov mov psubw js sub cltd mov fld stos push into aam adc arpl test xor adc mov repz cs inc sbb dec (bad) cld fildll mov popf test add push int3 popl ret sbb ret sbb cmpsb lods fwait inc sub mov cmpsl xor mov mov inc iret call das lea imul push dec das mulb ljmp xor mov push and jns add (bad) into lret mulb sub pop mov incl pusha mov stos (bad) insb adc dec pop mov in mov out ret mov inc cmp sub insl incl lock stos clc mov pop out imul add xor inc decl loopne popa inc fwait lock outsb ljmp bound je cltd es dec enter xchg ficom xchg mov pop and dec repnz and sarb pop xor (bad) repnz mov es (bad) push movsb stos xor mov inc push ret test rolb shll lods push push ss int jp or mov push flds fildll mov inc xor xor xchg pop pop xor fdivrs pop mov dec inc and mov adc xchg add push mov jbe (bad) or inc or mov jns xor mov dec mov add mov push out xor aas pop inc jg xor adc adc xchg shrl insl aad xor loop in mov mov insb mov adc dec insl adc push stc pop adc jae ja and sbb leave rol xchg pop xor cmp mov call aam cmpsl rorl pop (bad) jmp xor dec and adc mov test fildll data16 hlt or pop jno or push daa and pop idivl loopne call adc outsb xchg in stos (bad) mov sahf sbb enter mov and sub fimull add (bad) jbe mov out xor pop pop or out enter dec sub and call cmp mov sub sbb cltd push and add mov dec pop push pop (bad) fs aaa and xor xchg push dec and (bad) dec sub das adc or pop ljmp push test ret mov lcall mov push xchg scas adc cld pop (bad) clc insb call pop js mov push ret mov popa mov mov insb sbb push (bad) sahf test enter mov mov rclb xor add pop mov (bad) lret rdrand movsb lahf mov mov loope ja js push jle pop mov icebp (bad) cmp loop push adc pop in jb aam fidivr jb mov (bad) push aas mov pop inc jns mov push fdivs push ja pop mov xor (bad) and jmp pop test or fdivrl pusha cmp pop push aam xlat ror in (bad) icebp (bad) pusha stc movsb rcrb cmpl xchg push movsb mov add call pop dec cs in xchg imul mov test mov adc ss lock cmpl fmul pop mov adc xchg pop mov addr16 ljmp out jo and or push xchg fdivrp sub nop inc dec cwtl in (bad) fstpl xchg or icebp data16 and sub jmp or cmpsb xchg lret test std imul jb mov mov into xchg sub cmp pushf cmp pop outsb sub ss lcall cmp ss rcrb mov out cmp cmp mov add fstps repz repnz lahf or (bad) int3 and adc stos xor fisubrl or lret (bad) les pop jmp subb (bad) hlt inc imul lret or xlat test pop int mov movsl mov push or dec cmpl push lahf jnp les and sbb insb push mov movsb push jmp fwait jmp (bad) lods lahf mov inc fnsave jno cs stos loop jp aam fmull int3 jnp out imul mov fadds mov xchg dec xchg in cld mov mov add mov sub push pop xor out in jle mov in or mov cmp and repnz insb movsb fistpl fcomip xchg xor adc jmp cltd scas xor jg lahf add shll cmpsb add adc jnp std imul sbb cmc aad fsubrp imul pop xor out dec push das push scas (bad) fidivr add xor popf sarl idiv cmpsb cltd pop and mov pop mov lcall pop dec ret xchg lock lock push or popa loope (bad) cmc pop and jne insl (bad) cmp ret lods cmp into data16 out mov idivb imul cmc mov iret and xor xchg cli dec adc pushf icebp xchg sbb dec sbb add and out xchg mov jmp dec adc in cwtl cmpsb ret cmp mov push pop push in adc mov sub clc aas jb insb roll cwtl mov xchg in cmp and jb scas ds movsl test loope sub mov inc xchg aaa and mov push popf je push jl mov xchg dec add lock nop cltd lea and add movsl aaa xchg xor cs pop inc or clc mov enter movsb popa cltd mov or cmp hlt jne jo adc and fcmovbe or ljmp in bound jg cs pushf xchg mov push pop imul clc push (bad) lahf inc pop in pop jg dec imul push pop sub enter jl divl je mov jnp mov xlat mov pop and imull mov lcall mov jg adc adc sbb dec mov divb sub adc push bound dec lret das stos and mov stos loope mov mov aad sahf cs outsl mov xor outsb dec sbb ss in jmp (bad) fisttpl inc in pop dec outsb mov gs in xor adc mov push bswap stos fstpl adc loope cwtl ds mov cmp pop sbb mov pushf fdiv aam jb adc loop mov and xor jl lret jno inc jae mov ficompl add jb dec or xchg inc inc and xlat mov (bad) fisubl xchg loop dec pop lock or push (bad) cmp hlt push inc cli push lahf out inc dec push es lds inc or in jo,pn out das dec imul cmpsl dec das sahf lcall test gs ss loope cmpl pop cmc into es (bad) lods xchg mov fisubr xor jle popa imul insl test imul (bad) enter or mov movsb das scas stos (bad) (bad) mov or push hlt and sbb sub xor ja push or aad add rolb cvtps2pi bnd divl outsb push jnp (bad) fs xor mov mov adc iret test into enter hlt mov loop mov imul jbe (bad) in fistp ret in jmp cwtl repz xor enter jecxz pop (bad) in insb mov les mov pop or addb cmpsb and movl clc xchg xchg (bad) xchg out sub cltd mov push stos mov idivb stos xchg fsubs dec jg dec mov out push loop mov mov jecxz aad fdivl dec (bad) inc cmpsl add jno jbe jmp js mov vpmacssww mov xchg sti aaa mov sub pop in jbe pop mov aad in (bad) insb dec test in mov push int3 xor scas pop lods js cltd lahf mov ret xor pop inc mov xchg or xchg xor daa dec (bad) xor sbb cmp mov orl sti pop push mov cli cmp mov inc in sub hlt adc mull and cmpsb pop ret icebp sbb rcr aam pop jp mov push mov insl cmp inc push rorl outsb adc and sbb jge lret add mov stc je rcll pop cmp je (bad) or mov sub ret push mov pop cmp dec inc into and xor sahf push fist pop push lsl test leave pop rcll adc repz adc push and lods cmp inc push ficompl scas notb pop xchg mov adc mov je mov add sti add dec ret and pop xor push arpl jcxz fmulp in in add ficompl daa and sbb or sub and pop adc pop pop cld or aaa scas push inc mov std jnp fnop jns lock (bad) mov clc aam mov pop outsl enter pop roll mov pop lds inc scas mov xchg scas dec fcompl punpckhwd mov aam jnp and mov mov retw pop mov mov inc sub cld jae ljmp cmp sub xlat hlt data16 sbb faddl out mov cs push pop pop mov mull xchg mov push in or sbb sahf mov (bad) notb xor inc cmp sub clc das dec jmp fistl xor shlb leave pop dec push divl pop xchg jp nop add repnz sbb mov push stc out push lahf mov inc cwtl lahf inc ret sbb sbb arpl bound cmp out jns int push and pop sub mov vpmuludq xchg xchg cmp loope jmp xchg arpl jae jns fs aaa repz addr16 js dec (bad) ss int3 (bad) mov je add incb subb out cmp inc sbb cmc mov fs (bad) packssdw adc outsb dec add ljmp cmp cs rcrl (bad) repnz jb mov jne or ja mov push xchg mov int mov adc std imul shl dec sarl movl xor push (bad) icebp mov add jae lods xchg and test imul mov pop add subl dec enter out stos leave je mov movl (bad) js movsb cmp mov adc sbb je or rcrl pop fs (bad) pop lods negl bound lock insb fwait je push ds jae lss sub sahf xor popa xor pusha loope xor jno fcomp and int xlat ljmp in aaa push jecxz int3 in cmp aad pop sbb pop (bad) mov xor roll not fcomps (bad) and mov or sbb add dec fadds test imul xor fiadd (bad) fiadd sbb mov dec movsl loope notb jl sar idivl xor mov cmp inc pushf ret lcall sub or add lods dec mov cli sbb mov or mov and test addr16 mov ds cmpsl or in jbe mov (bad) mov test adc frstor (bad) rcrl sbb mov mov dec cmpxchg int push pop ljmp lret jo push adc mov xor cltd (bad) in sti or cmp sbb jb mov push mov mov call and dec push lea lcall insb aad or fstl sub jo sub ds es ljmp inc mov dec addr16 nop int loopne je mov mov xor or aad outsl push ljmp adc mov fist sti cmpsb sbb pop bound xchg outsl aad mov cs gs scas cmp enter jnp loop xchg les movsb mov lds mov lcall and aad inc xor jle sbb adc loopne xor pop and xchg movsb in ljmp in mov (bad) enter and arpl xor das aaa popf cs test sub mov (bad) mov add and imul fcmovnb pop cmc and popf inc sti (bad) cmp adc jle fstpt test in dec loop dec mov mov xchg popa stos ja mov and xchg psubw push or fldl (bad) push call imulb push aad add aam loope lods out push sub xchg add and out (bad) enter add and scas sbb xor in push inc faddl xchg jb xor shr sahf add sbb push bound incb sahf or cmp xchg scas pop add lods pop adc fwait pushf push add sub leave lods adc addr16 cmpb sub adc sbb ljmp (bad) aad ljmp xchg or enter stos dec jb sbb xlat pop cmp repnz outsb mov and aas (bad) loopne (bad) mov adc xchg jge cmp xchg nop xlat pop push leave jno cmc xor mov enter aad stos test hlt inc add in arpl cwtl sahf aas sbb sbbl loop loope das dec pop xchg mov inc arpl outsl mov jbe mov dec loope imul loop scas loop (bad) arpl pop inc addl (bad) add fsubr pusha in pop dec lret mov mov add ret xchg pop cmp push aad (bad) push aam and push add mov test out sbb movsl xchg (bad) fistpll ror pop into pop cltd xchg fstpt cld jge or fisubl pusha dec add xchg push xchg sbb mov add jle adc aam mov movsb pop stos leave inc sub inc lret outsb imul ret dec (bad) xchg and lds std das cmp jb and cwtl jae inc fs sarl sub out addr16 dec inc lods test xor cmpl pop pusha jnp sbb inc push arpl pop stos fbstp dec (bad) lods dec push push xor sbb cmp add mov out xor clc cmc add (bad) push test xchg xchg es jle in cmp inc rolb stc (bad) inc lds push sub nop scas xchg ficomp sarb cwtl fsubs int3 mov out inc dec (bad) imul pop dec jmp sub or dec or mov adc mov lods scas dec jecxz mov inc inc cs rcl out sub test jle cmp cmp dec ds and mov xchg dec mov or cmp fistl arpl fidivr cmp xchg jne dec (bad) inc push daa pop pop mov add jge movsl pop cmpsl test mov lods inc repnz dec jns movsl pop xchg shrl jne mov das dec jmp dec lret mov into scas jnp loopne es xchg xor std mov not mov repz adc int3 iret adc fucomp popa dec sbb ret data16 jmp cltd (bad) mov or push aam (bad) fstps ror and fidivl test movsb leave cmpb int mov inc xor (bad) nop or imul push sbb cmpsb pop xchg (bad) fcompl mov pusha lea mov arpl pop bts jnp sub add ljmp cli in sub push insl popw jmp dec daa dec jae mov lods aas fisubl mov hlt adc frstor jmp pushf mov mov mov arpl and in jp call loopne cld mov jns loope cmpsl repz cmp mov outsb push or popa xor loop inc push pop pop jecxz add dec mov push jle pop pop sbb ds adc ret test jno dec nop adc mov push jns ds (bad) dec les sbb pusha xchg and mov js (bad) dec sub hlt pop or and imul jb roll xchg add add pop iret loope repnz cmp gs dec movsb test pop jo mov jle test sub (bad) fs and or scas insl push adc cmp imul and inc mov xchg das insb sti inc and sti xchg mov sbb and daa sbb pop (bad) pop dec dec gs jg jl mov mov cmpl int3 popf sbb pop pop jmp fimull sub arpl out (bad) je lcall cs mov xchg mov and mov gs cmp lock loop dec push movsl and icebp add into lahf or stos scas iret loope push (bad) jge adc nop popf mov sub cmpsl push test jp adc out push iret xchg pushf sbb test xchg outsb ss rcl or push lcall or mov popf cmp inc (bad) out call ret loopne fist sub shrb inc loopne arpl repz push xchg scas dec outsl je xchg js jne xchg mov push mul xor inc mov push in pop add mov lods jnp (bad) pop mull loopne xlat stc ror mov or cmp mov and fldt jecxz cmpsl cmp mov clc (bad) cld (bad) ret cmp inc inc sub xor dec push movsl call rorl jae push das (bad) mov ja push imul dec sbb out scas loope outsb add jns mov aas incl mov xor idiv dec xor xchg add and jae adcb (bad) inc dec and movsb xor xor xor std add nop sbb cld mov fldl xchg dec cmpsl test mov mov pop imul daa cwtl mov dec ljmp push xchg xchg cmc sub push add sahf repnz and xor out addr16 ljmp mov xchg adcb inc (bad) mov xor popf push jb int3 sti lds in or loope and cmp daa shlb lahf movsl hlt lea cwtl cmpsl cmpsb addl jnp shlb xchg mov push inc cltd test stc mov test mov aam push ret adc jnp aas jg inc aas sbb insb fnsave or cwtl dec mov mov xchg (bad) push insb das js jg pusha inc aas push add ss mov les cmpsb inc lea inc stos push jo movsb ljmp scas add dec and testb adc enter add lods mov out mov sub jbe out pop lret adc arpl dec icebp pop (bad) in push jmp data16 call sbb daa aaa fucom test or push sub xor mov je inc sub fldt cmp pop popa testl xchg fstp rcrl xlat aaa aam mov (bad) out sub fldcw sarb (bad) mov ret cltd jo sub push mov push or lods into aam out fwait xor mov jns mov fmuls sbb adc mov loope push mov cmpb stos aam std ficomp out mov mov stos sbb mov mov lock scas mov cmc sbb cmp sub jnp pop rclb sbb dec movb sbb insb movsb fisttp sbb mov mov push andl pop popf mov test (bad) sti xchg push sahf ficomp lcall fcmovbe adc push inc mov and pop mov sub popa pop push arpl xor fdivrs pop push cmc push sbb lret cld test pop scas mov and arpl push sbb pop stos ret lahf mov (bad) cmpsb xchg fsubs sbbl sub jle stc cmp insl (bad) pop add dec jno pusha mov push dec ffree (bad) lock mov and in lods out arpl not jecxz negl lea pop daa ja,pn mov pusha andb jle push inc hlt imul inc test mov sbb repz add add pop pop cmp jle jae pop movsl sub mov out mov or xchg adc cs or mov mov xchg sbb and outsl cmp or push in push and testb mov mov sbb jmp fistpll mov inc sub jb sbb fidivrl push pop jo dec lahf lock inc shrl not repz and enter pop mov sbb jo das les aad call jbe mov mov jp jbe push adc andb jg add cmc push mov (bad) sub mov mov pop pop sub xchg mov jnp ds loop movsl lock ret jo ret pushf xor lock rdpmc pop xor call cld pusha xchg out xor dec mov (bad) xor orb xcrypt-ecb cmpsl dec mov adc repnz mov pushf add lea movsb cmpsl mov xor adc lods fdiv jnp cmp add lret adc fs pop sbb mov and cmp add add popf and pop cmpl dec cmp inc mov push or pop mov inc jne imull inc mov shrl xchg repz lock lahf jns rcl daa mov adc sub mov inc mov push xor movsl adc push push jge cmc cmp cli sarl dec lods movsb fisttpl popa shrw dec or popl js,pn ja cmpsl push ror negl (bad) shll hlt mov mov inc sbb outsl mov xor jns jne shl xor mov sti pop aad sub dec dec cmpsl out sub pop inc inc ret xlat xor sbb sbb loop hlt fistp jb sbb stos mov (bad) and pop dec outsb jge pop test ss jge mov mov ret cmp lcall pop add mov mov (bad) xchg lods jecxz push roll jb add xor out les push dec sarb pop popa add fcoms pop pop pop pop cwtl cmp cmpl mov movsl mov push sub push pop pop or lds mov sbb lret popa xor inc inc ret pop gs std in mov pusha loope out adc pop pop scas (bad) mov jo popf enter movsb xor mov jle fsubrs mov pop ds fidiv movsl mov push cmp or lods inc mov mov out enter inc fisub in dec sub xor lahf ret in or jbe out shrl int test test out and adc repz sbb sub or sbb imul xor jnp mov ja lock pop and testb jns fdivrs mov xor int3 cmp cmp popfw pop xchg pop movsl ret pop or cmc pop cmp in fs mov adcl cmp or cmp cmc adc lds or mov sti push or addr16 add xchg ret js into lcall fdivs adc push inc flds movsl adc sbb js js (bad) dec mov fisttp lock xor push fnstsw mov jecxz cmpsl xor mov cmpb push imul rcrb dec xchg add xor cmp jge sub cmpsl inc test jae xor xor mov dec sbbl xchg and fild and jp in out xor mov mov pop out inc jae lods or mov lods (bad) pop mov push xchg mov scas jge aaa mov xchg jl jle stos sub jl ret add adc loopne and pop jb cld stos outsb int3 (bad) sbb daa lods cmp add in mov outsb fstl pop add jecxz das adc mov or stc loopne insb mov test pop outsl add popf (bad) mov sbb inc fisubr movsb in mov mov sub sub les pop jae pop test pop xor mov (bad) rcrb mov jecxz dec outsb das movsb xchg jp sti rcll loope cltd insb fst and push mov test mov dec ficoml dec pop jne cld into cmp jecxz lds sar mov sbb mov cmc cmp cmp ljmp hlt mov mov rcr nop fs and ja pop sbb adc fst fwait inc dec jnp xchg (bad) cs jns adc mov lock xchg vmwrite orl and imul cs repz in (bad) add fmull cs pop sub push das dec pop fadds mov push add pop cwtl test test aaa ja and popa mov pusha mov pop mov test xchg and int jno mov lea cmp imul inc popf or and popf idivb sub inc cmp out ret dec fsts jge clc movsb enter mov fimul cld mov push push push mov int3 cmp sbb sbb xor ss xchg dec daa xchg push or push in (bad) push jo inc dec mov ja jmp push lret in dec xlat push sbb aaa (bad) into lea push rolb sbb lret sub movl xchg icebp in mov dec ret inc lods stos rcll xchg sub stos ret and std mov lods mov xor or dec mov sub out push addr16 popf adc cmp cmp inc ret stos sbb (bad) in ret sub cs cmp cld sub pop push push mov je test decb movsb inc pushf out jg or call mov push rcr shrl mov movsl loop pushf (bad) xor dec push cld sbb movl test lods add lods and inc aam cmp push pop or inc imul (bad) cmc sub faddp dec aam rorb and call rorl mov xchg in adc lcall jb mov add leave hlt jle and loopne inc mov lret add test mov aas dec and jl or mov cli sub jl push loopne insb push push push inc xchg cmp xor mov repz popw mov (bad) pusha pop pop mov (bad) and imul xor xchg pop subl lahf ret cmp aaa lds ret dec into and sahf into pushf call sahf mov adc and lods jl cmpl dec push dec mov pushf add jb pop jnp push push orb (bad) jb icebp xor and insb adc inc nop popf push es sbb nop jmp leave xor aam inc call cmp lahf sub push xlat std jmp out or ss jns loopne add cwtl adc repnz andl jno scas sbb cltd fs jmp adc popa lds jno loopne push xchg out dec or jge push mov dec cmp mov jnp mov imul inc loope std sbb xchg js rol outsl sbb ljmp pmaxsw ljmp inc jle test and pusha adc push cmp nop stc mov sub lahf int3 xor shlb cwtl inc sbb (bad) jge imul pop inc pop test aam push and sub add out xlat pop push mov jg push iret mov fsubrl pop mov lock cmpsb and mov mov mov mov ds lea mov add push mov addr16 inc sbb aaa mov adc push cwtl and (bad) mov inc popa les xor leave lret jl (bad) icebp inc inc jge jb stc (bad) xor stc adc inc sarb cwtl ss (bad) je dec in sbb imul pop xchg jb xchg stc test fs push xor popa mov in cmpsb adcb hlt jg jle loopne dec bound inc aam jae jns das cmpsb pop mov adc outsl repz aad push lock (bad) js fwait cld js add mov mov ret or xor into test js jle push and mov in mov std gs mov int3 xchg idivb (bad) pop (bad) add insl fidivrl xchg push lock arpl out addr16 es mov sahf arpl jae sub cli fcmovne push cld dec mov sub add mov rol fisubr cmpsl dec insb fsubs mov (bad) xor push outsb or add cld or push loop incb std das push aaa jp dec das xchg ja ds (bad) in jbe mov sub jnp lock ficoml ret or rcrl (bad) adc addr16 inc popa sbb and imul out aaa push jp aad nop or lret (bad) xlat das dec or dec std and and lcall jo icebp shlb nop out mov icebp sbb lret (bad) jo or cmpsl insl dec (bad) rcr data16 push stos xor inc or mov add jle sahf sub jne ret pusha inc xlat xor mov jne mov rclb cmp ja dec (bad) mov pop mov out or lock push xchg sub dec adc mov std dec into add xlat mov or icebp mov push push aam and mov in or bound and test loopne ljmp cmp inc xor pop test push mov loopne jle stos xor dec and mov in fidivrl adc sahf std push sarb push ret sbb cltd (bad) leave mov fist pusha out enter lret sbb xor jmp xchg mov mov push cmp les adc cltd inc xor negl sahf movsb jecxz stos and pop inc xor jo mov jp sbb add sahf test or cli dec cltd push outsl shll mov out xchg in lea cmp jns shrb inc ss inc push std dec sbb mov or out jl ss sub push sbb cmp dec xchg adc popf popa mov loopne xor ds fisubrl popf (bad) les add addr16 mov xchg or push xchg (bad) mov mov mov rclb dec arpl jl adc popl push loope sub jg push in cld fsubr or cmp pop sbb cmc ret mov imul into sub sub jno iret cmpsl pop bound and clc divb mov imul xchg in mov enter add lock and cmp (bad) sub pop loope imul push mov push or mov (bad) divb xor (bad) mov cmc (bad) jl mov testl dec hlt cs outsb push icebp push or cmp mov xor lgs (bad) enter outsl mov nop jno pop mov lret inc dec daa arpl add mov nop dec push xchg inc sti push jns lahf sarl jecxz movl and pop int mov inc test adc jge daa andb out mov pop adc and cmp mov fsubr (bad) cmp lahf xor mov adc mov cwtl dec insl dec hlt dec adc cmp gs popf dec xchg out lret mov adc dec int dec aad adc call mov xor mov into xchg movsb out jnp das leave push pop and leave jl cmp mov pop sbb mov dec popf or mov cmp inc cmpsb lods xchg pop inc fnstenv aad hlt cmp (bad) (bad) and sbb and dec movsb lds jb into cli push mov scas js call or push push fisub push clc sti aaa jp pop adc mov ret add adc fwait mov lcall sub mov add pop adc sbb aas pushf dec jbe shrb enter push and or enter in inc popf push arpl (bad) cmp ja sahf xor (bad) mov adc sti loopne sub pop das repz cmpsb push js sahf ljmp fildll add jae bound addr16 dec jle push or lret movsb out lods xor data16 dec idivl xchg xor sub jmp xchg call out xchg cltd test pop mov dec inc sti xor inc fwait aad push cli fnsave mov je sbb (bad) aad and dec inc cmp push movb add ss xchg fcmovbe mov mov fs dec mov cmp push decb cmpl popf ja inc insl sahf mov jp sub loop es or arpl xchg flds or mov jecxz sahf mov repnz imul add mov imul add mov (bad) xchg lods fs inc aas inc (bad) mov inc pop and out mov popf fmull xchg mov push cmp mov ljmp xchg nop rcrb jns cmpsb into cmp and sarl push xadd xor mov xchg push es sub mov sub sub mov pop jmp sub jg hlt or push (bad) mov and adc jae arpl xor pop and xchg inc and inc add sahf xchg ljmp outsl sub and lret jle cmp (bad) lods movd xchg ret out pushf mov inc cld in and cltd mov fsts push mov rcll push push or pop adc mov aad lahf imul inc popf test add in pop mov inc icebp jle or xchg mov mov dec int push cmc sahf bound push stc push pop xor lds fnop cs xlat add inc or mov jl scas inc inc (bad) je mov jecxz (bad) dec int jbe and and jmp xor outsl add pop test stos pop cs adc dec inc enter xchg mov gs test ds sub shll mov rcll (bad) cli mov add pop dec sbb test push outsl into or mov bound add fimull cmp les pop in fmull cmp mov lahf cli jg cs xchg cmp cltd pop dec enter fdivrl mov dec cmp gs movsl aaa jae imul leave or insl inc dec or test xchg insl dec (bad) roll ret dec imul daa cmpsl test mov push xlat (bad) cmc scas sbb xchg mov fnop sarl dec or dec cltd test push inc sub stc es popf sbb popf cli lds leave mov out in jp data16 push fwait cwtl ja add xor mov ret push jg mov fnop fnstcw xchg sahf sub nop scas (bad) aaa lret lock sub or pop mov scas jp loop mov cmp mov push int pop fwait mov jb push push mov cmp adc hlt ljmp xchg loop (bad) pop in test call mov push popa pop cld push jge into fsubrs andb cmp inc out jecxz mov (bad) aas das pop mov xor dec mov int data16 sub xchg push call xor (bad) imull icebp or add popa add bound gs inc nop rolb push ljmp fdiv pop (bad) or push xlat and outsl fiaddl push sub stos dec xchg out enter rolb loop pop fnsave add jge cmp push inc cmp ret sar fwait scas sub rol lods mov sub mov xor (bad) pop cltd inc icebp pusha loop aad jae stos sub iret adc adc out sub divb push pop stos adc stos mov push sbb jecxz stos arpl in js lret loopne sti xor loop (bad) dec mov (bad) mov cmc sub aas mov stos adc nop (bad) jne mov jle arpl (bad) repnz pop xchg fldl pop mov mov xor jg addr16 cmp into daa jns and sbb jl aas jg sub (bad) mov xchg repz repz (bad) imul adc and mov fwait mov lock pusha adc inc repnz mov cmpsb sub jl mov fisttp (bad) fistpl mov rcr or loope clc or mov in jmp add pop in and sti fisub imul add cld dec pop imull xchg fldenv add (bad) das in sti dec cmpsb scas les daa pop lock jne test push ljmp pop into fwait out imul pushf mov aas jnp inc std mov nop jno add mov iret mov and and jmp mov xor or mov cmp (bad) add dec xchg inc mov add negl xor mov and iret mov mov repz fxch and pop or or bound mov adc inc inc cmpsl jae dec cmpsl test mov and iret or imul add pop and sbb rorl xchg int iret imul xchg scas jno jge sahf push or inc cmp fiadd mov out into bound mov movsl cmp pop cmp sbb xchg mov pop mov je adc sbb and rclb loop or sub inc jecxz lods mov inc mov jb mov jle hlt subl fcmovnbe gs fcompl push adc aam jns and (bad) rcll (bad) adc js imul xchg rcrl sarb aaa xor mov (bad) jb pop mov mov push mov xlat pop pusha (bad) out ds sub rcr inc icebp or je mov xchg cmpl fisttpll jp xchg adc jp dec jmp imul jl sub lahf dec lods jae push jae call lds push mov inc xchg inc pop cmp mov dec push mov mov mov mov add lods loopne (bad) and inc fcompl mulb mov jecxz mov jp xchg add add clc pop push sbb pop add inc scas iret push cld lds ljmp loop pop push leave xor cs enter push jmp or dec cli mov jle add mov aaa jnp sbb ret jmp lods fdivs mov sbb push jge add or pop adc add dec xchg push jb (bad) enter rol jmp stos (bad) adc xchg mov andl push cs sub fs xor sub cmp dec dec sub incb or jge dec adcl adc jge push imul pop xchg ret xchg push mov popf xor xchg (bad) mov std sbb test lcall cwtl movsb pop sub push addr16 mov sbb jne mov outsl jmp and fcomp push outsl add sbb shrl lods push jmp sub fdivr add sub or popf call pop push fadds mov (bad) and sti or fdivp push jmp jle in mov pop mov mov jp mov mov mov mov test sub push scas enter inc pop xor repz je (bad) popa (bad) sub stos (bad) xor lea inc outsb outsl frstor push add iret cmp mov out leave or jecxz add push sbb xor xchg adc xchg dec xor lcall mov pop add xchg out shrb jns int push in fisttp ja stos mov sub mov sub (bad) mov inc cvtps2pd loopne xchg mov dec mov or xchg dec je test int3 (bad) aaa ljmp iret pushf inc push into mov daa inc pop loop outsb and lds loop dec aaa xchg in xor add repnz scas mov sub fisttpl push pop das icebp out inc shll xchg mov repz aaa ds adc ljmp sub xor mov push pop ficompl and jo xor test mov arpl mov lret nop inc repz or add pop lock inc stos sbb push dec mov (bad) xor sbb (bad) lret test mov or and mov xchg mov adc idivl cmp xchg pop mov movsl mov pop (bad) lret ja arpl gs xor xorl addr16 (bad) pop (bad) pop leave cltd sbb in xlat xchg pop xor mov aaa jge push insl cltd aad xor inc add jno in fsubs or daa test mov mov sub xchg push lock xchg inc dec mov sbb mov sarb lahf and or pop push scas stc cmpsl cs data16 adc stos int3 xchg cltd push xor lahf push imul cmp pop inc inc push jnp pop push mov orl adc cmp sub daa scas xchg xor dec call xlat mov jecxz je xchg mov mov in mov stos enter jge mov stos jne cwtl jge repnz dec xchg repz xor cwtl bound stc sbb in out mov (bad) arpl (bad) scas xor inc stos out mov imul out sbb int sub leave mov lahf jns xor sar mov xchg andl aad jno,pn cmp and mov imul leave add xchg mov scas enter data16 out scas cmp mov sub mov pusha in and rcrl test mov fisubl js scas or divb clc (bad) addl pop push add dec lahf sub fistpl push not cmp ficoml je jp sbb jb dec lods outsl cmp add or jnp (bad) jmp rorb xchg outsb mov hlt sarb and (bad) adc sbb mov and cld mov mov (bad) mov inc push inc stos sub aaa push repnz out mov push add mov or inc adc ds int3 sub (bad) fstp (bad) out jbe cmpsl bound jl lea icebp js xor dec ss lods test jne je jg xchg les or xor std cmp adc mov clc push pop add in adc dec sarb push in leave movsl stos add lcall xorl (bad) aad adc js push insl inc loop or add fs (bad) cli leave xlat stos (bad) lret in pop jl sub push pop mov inc nop or cmp imul ja push out lea pop loope push in lahf push and into jl mov sbb lret fs in aam mov cltd or pop mov sbb dec mov repz (bad) add fwait push sbb cmp call cli cld loop repz add cmp or popl (bad) test lahf stos sub ljmp sbb adcl mov fdiv sbb xor movsb and xor sbb stos nop aad cwtl adc shll dec (bad) push loope sbb dec dec insl inc jns fwait (bad) jb int3 pop sbb or aam dec orl aad loopne dec inc shr shr cld fist add sbb imul xlat sub fmuls jg loop addr16 (bad) lcall lahf cmpsl (bad) lahf jmp es jnp stos jne test jle adc cli pop xor in inc (bad) idivl popf arpl shlb cmp fucom and leave cmp or test in push and mov notl jp xchg push mov inc int xchg in into pop lea fadds out and ja enter mov es imul notl pop call adcb fnstenv fxch js jae mov js imul jge or stos pop add repz inc push in mov aaa inc (bad) cmpsb out jecxz xor enter ja pop lea cmpsb pop fimul sub pop mov mov adc ret dec repz cmp push mov dec cli xchg mov mov or shrb add mov mov push sarl add arpl bound adc push or imul xchg push mov daa mov icebp notl xchg mov or addr16 aam and repnz sti sbb mov adc mov ret mov (bad) gs push dec mov push push pop bnd insb push rorb aas dec xor sahf lock sub push push or pop push (bad) adc in stc mov fadd jge pop mov adc data16 in lock out cmpsb aas test mov lcall xor jno lcall ja movsb jb jnp mov inc or push mov jge out inc (bad) jnp push jo xchg and sti pop bound (bad) icebp mov xchg mov cmp imul push stos sub ss push insb add cld std pop mov mov mov sarl xor mov jmp mov pop int3 not add or loop imul lret subl cmp test mov mov (bad) mov iret shlb add pop das inc mov out (bad) and and fdivs cmp dec out add or call data16 xchg sbb cmp insb xchg xchg pop sahf and fcompl add push into pop sbb in dec incl xor lret fmuls cli repnz jle pop jecxz test shlb jge sub jo scas mov inc movsb repnz push pop hlt mov xchg insb test insb or mov mov add jno jmp xor mov jno jmp jp (bad) stos inc leave xorl adc lea sbb jge sti xchg and xchg and add fwait outsl add jns int pop push fstl dec cmpsl sub mov or inc in into add inc js push sub and divl (bad) mov push mov in in cwtl mov cmp loop push dec cs popa nop es lods sbb daa popa int xchg in data16 (bad) xchg mov stc xchg jo and stc push push push (bad) push jae icebp inc test xchg pop lcall mov push pop adc mov dec dec adc jno mov aad adc shrl jb dec mov mov fmull repnz pop dec lcall lods add mov adc inc adc negb imul sub jnp push or daa out sub aam cmp jmp jge cmp sbb cld jl mov or nop and popf pop fwait or ljmp sahf adc std adc push movsl nop fist mov outsl outsb je aaa leave push and pop mov cld repnz mov aas cmp test mov in inc cmp imul xor (bad) sbb roll fldt fs and hlt or mov and orl pop and in sub test sbb mov popa dec mov fcoms daa sbbl cltd dec hlt dec lret (bad) mov ret pop in aam sbb pusha test xchg lock cmp ja lea adc jnp (bad) jae stos xlat lock in inc enter push scas in aaa inc mov sub sub (bad) pop adc andl idivl test repz jle xchg out pop daa mov test xor loop cmpsb dec mov cmp movsb fs jae ret add icebp inc in rcrl cmpsl shrl xchg lods sbb and cs xlat hlt shrl dec dec daa cltd inc fstpl enter daa or jb mov and imul test lods push incb push fs push xor add lea enter push dec add stos (bad) mov or sub cmp mov mov or lcall pop (bad) xor inc or jno js jp cmp add sub ljmp jle push inc cltd jb push mov daa and sub or lcall jae stos xchg xor adc pusha dec popa pop shr (bad) push xchg repz mov jbe jns dec mov cmp imul lds or imul adc push repnz insb mov (bad) xor idivl xrelease dec enter pop imul and xchg popa mov mov adc fdivrl jmp adc (bad) ljmp or ret xor or int out or je cwtl mov add fmuls lods sub cli idivl sti mov xor js xchg stc mov inc arpl xor jbe es in push test sub loope mov lret jno xor (bad) inc dec je popa cld rcrb lods icebp (bad) xchg addr16 dec dec add mov xchg or xchg add cltd leave imul sbb mov add cmp push sbb cmc bound imul rorb sub inc mov add push jbe pusha scas sub stos inc sarb adc adc ficomp imul gs cld cmpsb pusha xor aas dec jl rorl or inc orb inc push in mov pop sub insb daa add mov xchg jg bnd clc rcrb jmp jo and mov fs jo push fnop cmp inc push mov ja loopne mov dec pop cmp int or and pop push out (bad) mov dec repnz mov loope pop xchg sahf clc inc xor sbb jo jmp stc fwait dec or lock fs dec scas xchg pop imul lahf jp testl pop (bad) mov inc push fwait push aas punpcklwd mov adc sub stos (bad) or pushf push fldl (bad) lahf xor in cmpsl mov mov cmpsb cmp out mov sub mov dec adc mov pop mov cli inc inc stc sbb stos dec add repz es in repz into das rorb (bad) in cltd (bad) inc pusha dec addr16 lret adc pop jae icebp aam arpl xchg enter int xor dec das fadd insl push dec dec mov mov mov mov inc outsb mov test int xchg pop aas cs add js adc xor ljmp rcl lahf out in and jno jae in insb inc mov pop lds es insb call pop jb sbb mov out scas addl lcall repnz add sub and das insb call ja mov lea mov imul int3 jae sub jecxz mov push mov jns sub popf xchg sbb das fldcw xchg clc xchg out leave inc dec jnp sbb sbb adc ss sub jp sbbb aam xchg cmp mov lcall out cmpsb roll pop incb ja mov call fsubrs rolb sarl dec dec add (bad) aam dec xchg sub adc inc xor sbb sub sub inc in pop jns fcmovu push cli fcoms jmp mov ss inc jae and rcll add popa scas (bad) lock outsl pushf xchg (bad) in or (bad) mov ljmp clc pop mov sbb jnp shl mov out pop dec repz and or cmp mov loop,pt in (bad) xchg (bad) stos lret or mov pop pop or int3 dec iret mov fsubs sub pop movl pop xchg lock inc test mov stos sub (bad) or mov lds mov and shll int3 movsb (bad) xor inc roll enter fmull sbb mov (bad) and pop aad sbb aam stc lock mov or pop outsb das cmp adc mov sbb add leave insl lret rorl xchg in (bad) jmp inc mov frstor fnsave mov mov call (bad) jmp mov movsb sub sbb fnop mov scas fwait mov js add xchg push cld out sbb sbb clc inc out xor addb or cmpl sbb inc xchg stc jmp xor or mov daa into lock xchg xor aam inc enter (bad) in add cmp out in xor or fdivrl mov fcomi inc xchg movsl fnsave jmp sbb rcl es in push das mov notl aaa mov inc sub cmpsb sar icebp cmp jle frstor shll (bad) and nop icebp mov iret pop xor xchg test mov ret lea xchg or or stos (bad) dec push sbb (bad) cmp sahf ds pop jmp or (bad) test aas fmul lds repnz sbb je lcall inc jmp fisttp cmp stos test arpl leave arpl pushfw and iret test js or test jle jae add ds cmp (bad) cld into loope jp cld or (bad) mov mov iret cmp js mov fnstcw aas faddl and arpl cs add mull dec into and or mov imulb lock xchg insl lret imul insb and mov fstps mov sbb das or mov or notl inc mov mov mov xchg std mov adc ret jb das ret mov lcall pushf push popa call mov xchg inc cmp adc ret pop lcall xor push sub adc xchg fwait insb dec mov push inc sub mov std mov push popa mov ds push cmp jmp push inc and dec mov fnstsw pop hlt scas and mov dec imul jns mov mov xchg jo mov jmp (bad) or mov orl mov sub cwtl (bad) mov sbb fmuls sub cmpsb aam repnz adc cmpsb mov xchg (bad) daa lcall movzbl sbb and fs test rorl lret adc pop rol xor (bad) loop daa cmpsl mov jnp (bad) jg adc push mov mov sbb cltd fsubp dec add cli xchg mov insb add xchg sub sahf mov lds mov test incb mov dec aas sub cmp inc xor mov xchg (bad) jo pop or mov test lcall aas cli and jbe jecxz mov aaa fbstp jb leave adc pop je enter mov dec push orb xor push jno or dec mov add mov insb xor inc mov push or push push add xor sub arpl jno xor jo rclb xchg xchg or jo iret sub jno out lret dec and inc rcrb push in lret xchg xor jmp jecxz cmc pop cwtl pop adc std push push repz mov into dec mov call movsl add sub test add cltd pop out imul or sbb xor jae out aas pop jns mov nop xchg push dec push add lods xchg lret cmp lock dec in lods (bad) cmc lahf xchg sbb sub lahf imul cmc repnz sub mov sub sarl adc sub push mov and (bad) in or push loopne jno loop stos pop pop and decb fbstp mov mov aaa pop jo adc xchg mov insl adc jge orb sbb xchg sbb mov cs repz insb fsubr inc repz push hlt pop mov arpl mov mov cli fucompp cs cli or ja push mov add or (bad) sbb inc dec and roll loope aam lcall push and push jge aaa out (bad) pop int stos cmpsl push gs test xchg int3 stos and jo lock fiaddl mov jnp leave jl (bad) insl imulb aam (bad) push outsb cmp (bad) cmp js cltd sbb addr16 inc push mov cltd repz push jmp pushl insb cmp gs jp mov hlt pop lret cmpsl lds ds or xchg push xchg and enter jbe repz mov cmp add movsl imul ja loopne sub ret insl sub aam jo push fnstcw je jmp push pop out sub repnz enter mov pop mov inc mov repz stos mov jns lret or or jp arpl push (bad) dec cmp outsl cmpsb adc inc loopne inc cmp or cmpl lcall pop inc adc inc jg inc (bad) cld or jecxz mov movsl and sbb es lods icebp inc dec adc xor mov ret adc mov cwtl cmp lods cmc cmpsl pop and push aas xchg popf add xchg test test xor mov lods dec lahf sbb fstpt jae and pushf imul add xor mov lds xor stc das lds lock scas into mov mov cmp mov cwtl pop xchg mov outsl and add mov dec mov cmp pop mov mov mov jl fldl divb dec das (bad) fistl divb jp adc imul test test lcall daa movsb loopne mov mov mov cmpsl lahf mov inc cmpsb dec adc push fnop and in lods sbb push and outsb bound ret hlt sub mov dec cli cs ja and or int stos add stc mov (bad) adc and js inc cs addr16 fisubr mov fistpll fsubr push addl icebp dec inc std cmp call loopne int3 cmpsb xor jmp nop repnz fimull in jg mov cld mov aas das (bad) push dec fcoml bound icebp fstpl lods push mov (bad) xor call nop jg out mov xor add add jbe les bound lods add sub enter pop sub pop xchg sub push adc xchg push pop push mov xchg adc mov aam xchg imul stos bound repnz (bad) in jl repnz inc jo sub call sahf jo stos pop dec pushl jg mov imul (bad) pop shrl and or xchg lret andb pop inc stc mov scas cmp faddl or mov or pusha jle arpl jle push (bad) sub imul shrl jnp imul or (bad) inc xchg imul mov cmpsb xor jnp cli cmp outsb cmp dec flds js lahf xchg sub or fwait cld push fisub imul gs push mov mov jnp (bad) daa jecxz aas lret out out pop movd cmp ljmp arpl and jbe aam mov (bad) lret cmp leave xor cmc xchg stc cli ljmp scas das mov sahf inc lods pop adc adc shlb sbb call out mov jle and and xlat cmp mov dec mov or add cmp inc dec popf aam mov in ss and popa lret int (bad) in add jecxz sbbl std popa out sarl push dec inc jmp fistl lahf sbb lcall dec xchg out sub xchg inc jle jg cmp dec push cmp cs ret fnsave (bad) jo sub daa push xchg adc push pop ljmp inc lahf ret mov mov jb mov out push ret (bad) fistl call jae cmp inc cmp lret or (bad) mov add xor add fs dec jb add movsl mov xchg lock les (bad) dec rclb cltd jp sub push sub dec and stos mov mov push jle sub or loopne in cmp pop rorb mov jb or xor jb sbb nop (bad) iret add outsl mov mov in mov xor repnz push je pop mulb adc lret inc aad mov scas xlat cmpsl or inc das stc pop test in jnp mov cmc push call out shld jmp lock lock jbe adc test test xor xchg or or or cli jge sub jmp inc aas push jg sbb jecxz pop pop into stos movsl mov aas inc push mov cmpsb frstor add cmp fs xchg test ret adc aas (bad) cmp jl cli jb or cwtl negb cmp pop cmp lock divl jecxz fwait nop in add aas hlt stc jb mov dec or in cmp mov imul mov adc divl mov jmp in sbb ret mov xor and repnz ret dec mov clc mov push imul xor cmpsl ret aad xor out add push adc xor outsl popf lret fs xor mov icebp out mov loop aam and pusha leave arpl sbb push mov xor jg ret cmp inc xor ficom rorl adc clc popa mov cli (bad) (bad) jmp xchg movsl data16 mov aad sbb dec shr xchg jb aaa xor or pop lret mov mov xchg push lahf fbstp dec fcompl sbbl inc jge mov jo pop fnop les stos rcrl sbb lock das bound jbe in out and mov loope mov cltd pop sub (bad) (bad) std lret daa (bad) cli ja popa int3 in push lods pop sbb (bad) in in inc stc add loop fsubrl lret push fiadd es cmp outsl cmpsb mov add inc popa fs xchg ror pop orb sbb mov mov fucomip arpl adc sub cmp push fdivs sbb aas test (bad) cwtl mov inc fbld jns mov bound ds sub xor scas pop xor jnp jle push ds add (bad) jae sarl or in lea ficompl insb mov out cld jge jae jl,pn push jbe aam jl cld pop xchg sub jmp (bad) pusha mov aaa mov mov push xchg sub out xchg adc rorb jle daa scas jmp xor jbe xor (bad) xor xor push cmp fnstenv cmpsl jns loopnew sub dec ds mov (bad) cs stos dec push into sti popa lret sahf adc movsb push xchg or mov movl aam pop inc dec inc adc inc enter jns dec jno popa adc enter loopne dec mov jns or xchg mov inc cmp sahf daa lods jle inc xchg pop sbb lds inc push jnp adc lods pop xchg sub add xor dec scas mov xchg sbb js repz jle jecxz leave push cltd push push movsb or xor outsl jmp inc sub mov push cmp sti dec fdivrl loopne testb and mov and push mov cmp dec jb insl inc int mov mov xchg jmp cmp dec pop pop push nop sub loope aam xor adc imul or mov fs lret xor sbb xchg push or (bad) in pop mov xchg cwtl lods sub sbb push ficompl int (bad) jno xchg add lea xchg xor repz dec (bad) mov rclb std adc fiadd aad repnz sbbl out cs mov mov or das pop rol push adc out in cmp fstpt xchg add hlt sbb push dec or add mov inc test repnz je push pop scas enter mov cwtl mov dec scas cmp pop push lret jno adc xor lret jecxz and xchg xchg mov jns ficom jae clc sahf mov sti jmp mov and std inc inc jne sbb es sub idivb stos stc pop xlat mov aam push jnp mov int adc inc pop ret sbb and xor enter aaa push jl mov adc adc cmpsb test ret cwtl jno jnp mov mov in xchg xchg jns inc mov xchg fisubl daa mov scas push pop jne sbb pusha xor jg ja and mov mov jns test nop ss push out pop sbb (bad) mov rcr sar sbb inc roll lret sbb insl inc jmp test mov lret push cmp xorb (bad) pop rolb xchg hlt jge fisubrl jb clc call fiadd inc repz cs add cwtl sub xor ljmp pop (bad) ss test dec fstps push sbb mov sbb xchg pop fwait leave push stos adc int3 fmulp sub cmp jo push mov subl pop pusha fldcw loop lds add cwtl pop out scas stos mov inc ret cmpsl pop sub dec mov adc pop scas jecxz sbb into sub outsl jo cmc (bad) push cld inc enter rep fisub jge sarl nop mov mov shlb add or stos and insl and nop cwtl (bad) mov (bad) pushf and les xorl insl mov lea outsb mov pop daa std pop pop and fwait stos idivl or (bad) stos inc cmp xor xchg cmp push shll mov punpckhdq cld and les xchg jnp mov fwait jg movsb repnz (bad) call inc add mov mov sub xor xor pop imul inc jae mov cmpsb jmp jge adc ret xchg push or mov push test inc int3 lods pop mov dec aad sub inc mov mov popa gs rol fistp push jge jl push in in pcmpeqw movsb ficompl xor pop adc push lcall mov insb outsl rolb mov jl push out mov popa lods mov pop jbe push rolb and ret inc fstpl or add push adc jnp rcrb andb mov cmp lahf mov xor cmpsl or movsb mov pop add pusha sub mov jnp or inc inc out add stos pop rcr fisttpll scas push inc fistpl (bad) cmpsb mov iret sub or jl adc jno inc xchg sbb sub sub pop mov test shr lods fiadd movl pop lret lret jbe adc and into xchg in out dec adc mov jbe pop stc (bad) daa ljmp fidivrl pop and sub test test push inc or imul mov test fisubl sarl jge inc push mov stc data16 push (bad) dec arpl pusha (bad) mov cmp cld xor (bad) sar enter add xchg mov in repz sahf jne ss loope xchg xor icebp test cli (bad) sbbl mov adc cmc (bad) mov (bad) gs outsb push jbe xchg mov push movsb dec (bad) and imul sub mov lock mov mov mov test inc repz aam nop fist jb loop insl sbb mov sahf mov mov in adc iret in mov adc mov int call push mov xchg inc rcrl push and test popf mov inc push sahf xor jae shrb pop gs inc push jno es jl cmpl insl sub or daa mov scas or xchg fucomi shrl int (bad) pop jno lahf enter cmpsl xchg lods jb pop cmpsb mov ret add fmull icebp push pop outsl sbb add xor ret add xchg push sbb mov sahf cld pop call mov adc jg loopne shrl xor jl pop imul jmp inc nop mov jl push mov add jmp xor mov mov cltd push out ficoml insb sbb push jns mov enter scas sbb test and fidiv fmull mov cmp lret fidivrl sbb xor sub es stos gs scas pop lock mov add or push in mov sub loope adc adc dec dec loopne mov and nop in fldl pop cmp mov rol (bad) (bad) adc sar push or mov xchg subl (bad) cmp adc or call mov xchg jne xchg cmp lret add (bad) in test in (bad) cwtl jb in and xchg std push outsl xor (bad) (bad) mov test (bad) into insl cmp or add (bad) and scas gs xor xor insb mov jnp in jnp ja xchg (bad) les stos cmp jne mov (bad) ss jp push lods mov insb leave loopne out jmp fwait jg sbb test daa or mov into pusha (bad) test mov cmc or xchg imul bound xor lods insb mov mov cmp outsb adc out lret adc outsb in ljmp pop and xor jmp sub pusha inc mov sbb adc push jns pop movsb aad jge in mov test fcmovu leave incb xchg pop jecxz xor das roll loope jae loop xor idivb repnz arpl lock mov xchg adc cld imul jle dec stos mov jp pop lock sub mov and push mov mov mov addr16 lcall sbb pop sbb mov jmp out fimul out faddl repnz daa sahf cmpsl (bad) xor cmp mov in cmp push (bad) push ficom cmpsb ss sub push jmp pop mov add mov mov cmp jnp fidivl cwtl test (bad) mov sbb cmp add sub jp fsubr adc stos mov call jp cmpsl and test add mov inc push inc push push inc data16 jno inc test out fucom xlat pusha cmp test mov add jnp cmp mov fwait sbb pop jne gs lds gs pop mov pushf mov arpl (bad) or or dec and or iret aaa ret lods dec ficom pop ja jle inc xor ljmp mov xchg jb push test or sti cwtl ss dec (bad) and js (bad) xor push mov stos xor nop push and push stos xchg test inc aas push inc push add cmp sub enter aam loopne adc cwtl inc popa adc pop popf imul mov sarl xchg dec jg jnp or aas lods pop ret inc mov cli (bad) mov pop add pop or cmpsl into loope mov inc inc sub inc pop mov pushf xor in in push (bad) jno xchg dec push into cmpl inc test faddl sarb mov inc cwtl jg or std enter jp stos dec repz dec mov xor aad cmc push push mov fnsave push dec lcall push or mov mov (bad) adc hlt aam pop pop jne lahf test pusha cmpsb popf call sub (bad) gs sub testl test push cmp or ficomp adcb lret adc push jl jp mov subb mov or inc dec xchg stos dec push repz inc or inc xchg stc cwtl mov push (bad) cli jae and sbb (bad) jge arpl sbb xlat cs call popf mov std lock mov cwtl std fidivr call cmp stc scas dec sbb mov push sti pop out inc or test out test xchg fdivrs aaa mov cmpsb mov cmc jmp movsb push into jbe sub pop mov pop (bad) out jmp pusha add fs ja stc movsb sbb sub sub in xchg push imul sub jns or inc int3 fiaddl loope fistpll dec add imul aaa inc ss sub ret bound notl jecxz push (bad) fistpll out sub (bad) fcoml xor xchg dec mov dec pop mov mov jo imul mov repnz jne sbb add push adc mov add lcall cmp mov std jge push fcmovbe movsl in arpl mov mov mov fisubrl stos fildll mov mov lods (bad) xor repz xor lcall push or dec sub sbb sbb mov push dec cld xor pop sub pop mov dec arpl mov loop inc xchg test enter xchg or mov aas pop clc loope shr icebp iret test dec push sti sbb lcall cmp dec jg jbe mov (bad) divl clc cld and xchg jno mov hlt ficomp bound sti test into mov ret ret jo xchg mov cmp add mov popa enter test rolb dec inc loop test mov inc push sub in fidiv dec jl int mov hlt mov leave js outsb push nop enter inc sub xor mov decl imul or (bad) inc enter lret jp sub test mov or gs out out mov push rcrl push imul movsb std xor loopne push int3 mov out or or je jns or andb jl fldt ds sbb bnd int sbb outsb iret mov xchg subl adc push daa outsl mov clc inc jno mov arpl iret xchg dec lcall movsl imul xchg pop int pop (bad) stos testl mov repnz aas pop ljmp xor cs leave lock int3 cwtl mov mov cmp mov cmp aam scas push pop ljmp cmpsl gs mov div mov inc int3 mov cmp sub loope cs cmp js pop mov adc pop push insb dec sahf scas clc repnz lock daa cmp and out lods ret pop add mov sub push clc cltd jg push mov in sub add adcl out mov iret lods or movsl sbb jbe push and in inc notl and aam jae faddl xchg inc andl xchg fs mov add shll sub into dec lods loop add cmp pop pop aad mov mov test in fwait mov adc lea divb scas mov and pop dec add lahf sti sbb (bad) idivb cwtl incl fwait imul inc (bad) jnp das sti mov cltd push sub insb dec enter xchg and sahf arpl (bad) lods imulb idivb popf lcall arpl loop pop inc xchg out cltd test push scas sub mov aad aad and xlat outsl (bad) mov sbb sahf icebp subl mov enter dec iret xchg pop iret lahf in aaa icebp xlat sbb lret fnstsw mov sahf add dec fistp sub test lret stc lea cld negb inc cld pop jmp mov inc insb pop xchg movsb sbb and ret popa or push addr16 xor lcall lock pop movsl lret mov pop fs push mov inc stos sub lods fidiv push bound (bad) loopne xor sbb sub out out dec mov addr16 jae divb loop jp push in jo out mov and jge or adc scas and ss sub mov mov mov scas dec pop sub sub popf ja pop dec jle imul daa sub pop sub inc cld adc xor sub lods fwait out movsl (bad) outsl stos stc imul aad (bad) (bad) (bad) (bad) loop stos out sub (bad) jo mov mov movsl (bad) lret in imul xchg out out adc ud2 ret dec out mov lret dec adc push push gs icebp add pusha xlat std arpl cltd xchg popa adc xor lahf addr16 mov enter or xchg int sub mov pop insb out mov pop nop add test and jmp and xor xlat js and in sar fldl xor mov insl (bad) out dec scas inc imul fwait repz inc fwait loop sar icebp ret push add push sbbb enter rcrb pop (bad) add addr16 mov add jl xor mov rol push sub mov int insb xlat mov jecxz mov js out pop lods mov loopne aam lods inc out and mov xor hlt scas in cmpsb icebp cmp jne ds pop pop mov stos push dec in in xchg (bad) xchg push inc inc stos jno adc (bad) (bad) dec stos push sahf or dec dec outsl inc adc lds cltd add xor stc push fmuls and loop jge push mov incb in ficompl mov adc scas leave sbb pusha mov addr16 mov fs pop (bad) xor lock sbb dec cwtl or out nop scas add popa into arpl enter mov sbb fildll pusha xor pop fcmovb sbb dec dec inc mov cwtl ds add xchg mov jle pop pusha and (bad) fmuls jle jmp add fisubr cmp out cmp pop hlt shrl dec cmpl (bad) pop or or fstp jecxz cmp push ds hlt push sub jecxz xchg out aas cmp (bad) mov adc mov js jp insb pop cmp sti das mov jo cmp movsl mov mov cmp jecxz loopne aam (bad) dec push (bad) stc rcr int pop into movl mov pop sbb push in push enter push mov xlat aam jae mov dec dec out add hlt ja loop xor push and je ss push mov daa xor lods inc cli xor test mov insb or pusha sbb cmpsb icebp fcoms inc in and iret popf add xlat dec mov testb std inc sbb bound cmp adc sbb iret cmc mov pop jecxz pusha jmp xor scas movsb pusha sub rcr adcl push stos scas jo push sub jp mov fwait enter sbb xlat push mov call out mov dec sti and stos call adc dec test inc xchg push and repz push mov mov mov jecxz push jge aaa add in sub (bad) inc cli jmp cmp fcomps push xchg push dec and push cmp pop sahf fcmove movsb inc inc mov mov leave and mov rorb aam push enter adc and mov shll jmp cwtl or imul inc test ficoml pop cld (bad) xor jns pop pop in cmc ret adc jno mov dec inc loope push push cmovs lahf rol sbb cmp or sub loopne in iret mov pop xchg dec cmp mov mov xor movsb loop cmpsl test or jbe int3 push rcll std push xchg mov mov mov mov mov sarl (bad) sbb mov dec inc stos or iret adc push test mov pop aam cwtl ror jge mov iret inc xor subl inc outsl enter dec mov pop xchg mov clc std in test aaa int3 divb pop dec cmp mov repz mov fild fstl mov or pop inc push inc mov test into sbb jno test adc xor add jbe inc jge jl jb loop stc add cmp popf shlb adc test push loop xor cli mov jo mov dec ret loopne and push sub stos dec (bad) jb cmc lcall inc mov into stc jo lcall popa int insl push mov mov sbb fldl fwait ret stos inc mov push mov insw or js lret mov arpl rol (bad) in mov pushf outsl dec ffreep xchg add push xor jns cmpsb push cmp mov sub neg mov movsb arpl test add or cmp mov je xlat jmp sub mov int3 hlt (bad) aam add movsb mov ja jne inc repnz inc xchg neg inc mov cmc data16 mov test jg in movsl pop jne mov dec jae iret jbe out subl mov mov lsl push jo clc pusha inc fist cmp (bad) bsr push sbb or (bad) lret test cmp sub mov lcall lcall add sub mov pop stos cmp popf and repz inc aad inc jne xor jmp loopne xchg repnz mov test pop insb adc loope (bad) mov pusha nop lods xchg cmc pusha subl loopne pop pop xor xchg iret mov cmpsb push outsl mov fs mov xchg sub clc push stos and out clc and lcall sarb inc push or jo sbb imul mov mov lret cmp inc into jns hlt pop pop xchg hlt rorb dec fistpl sahf xchg add fcmovnbe je pop enter dec push (bad) push xchg (bad) icebp pop push xchg adc inc repnz mov imul xchg push out lret das ds out jo mov mov out stos mov stos and mov dec int repz mov jecxz mov xlat add les xor mov mov lods push daa cltd xchg loopne outsb int3 shrb and mov iret mov lock and jae stc test movsl mov pop andl lcall mov inc aas mov out push xchg mov lahf cmpsb out dec je mulb add test aam call sub xchg jb and push mov clc aam push out mov scas mov jb out push into jmp fild int sahf sbb ss popa cs out sub movsl dec cmp xchg or lods and inc sbb daa mov mov inc adc out inc xor add loop pop dec fdivrl (bad) cld jmp vpsrld fs rcl icebp jmp fcomip clc cld mov out fimull fsub inc sbb sub stos jae nop enter and nop dec popa data16 gs mov add and dec cmpsl daa jae sahf int jmp xchg sub enter call jne or push (bad) hlt clc inc xchg pop lcall das push call ret insl gs movsl (bad) sbb adc jecxz outsl ds pop enter pop mov lods adc rolb pop inc out jbe daa xor fidivr jge das hlt xchg out dec xchg mov lock repz xchg mov push jb inc jb mov inc loopne mov popa (bad) jae xchg or mov aas mov pop rolb in cmp lret out sbb sahf mov dec jo out push mov or xor push pusha ret int3 (bad) shr pop in stc push pop loopne push mov std xchg and shrl sub sbb jp cli xchg jge xor fpatan shlb cmp mov orb or push push out sub scas xchg ret mov repnz inc ljmp mov and jae loopne xor in nop or int stos cltd inc lret and sbb and dec jae lret push nop sub inc fwait popa pop adc punpckhbw mov inc cmp les pop aaa loopne cmp pop (bad) shll movsl jno cli iret xchg leave (bad) popf out movsb loop and xor sub mov dec aas sti shll cmp or and fidiv cltd lods mov adc mov cli loope push (bad) xor fisttpll push and xchg xor das mov add outsb pop int3 jne ja mov sub icebp add nop or xchg pop pop cmp sbb dec imul xor rcrb xchg (bad) mov mov push repnz pop mov stos mov inc dec repnz (bad) pop cmp adcl push sub add daa sbb cmp jg js les aas int addb sub mov imul orl (bad) lea push sbb mov mov adc je jmp add aam inc xchg test inc jbe mov dec pushf push sahf daa pop iret mov movsb or push mov popf xchg mov lods or into gs mov gs push mov inc js cmpl rolb cltd cltd jl cwtl (bad) lods aas add outsb dec jg shrb aam outsb jg leave (bad) popa push xchg (bad) pop out mov sbb gs cld sub mov jne jbe jl (bad) je std es popf xchg adc mov mov mov pop fnsave xor into loop xor xchg push in sbb dec sub lahf dec (bad) push mov popf out inc pop dec pop jb jl (bad) cmp sbbl repz lcall sub dec or adc cmpsl xor push lahf aad cmp gs insb js sbb int dec addr16 mov push inc maxps out ss mov movsl aad ret stos stos imul std mov shrb or push std loope jecxz mov cwtl add jg repz cli test push mov jnp push shll inc pop data16 inc mov cmp movhps mov dec pop jge popa (bad) mov xchg mov mov cmpsl dec jbe ret push loope cmpsb aaa mov stos seto dec (bad) mov or or dec addr16 cmp sub xchg xor lcall add lds rorl adc adc pop mov fsubrl cmp cltd cmpxchg scas pop pop sbb pop dec pop or lret stos mov lret or hlt sbb stos mov rclb in fcmove dec lds cmp jl fs test xchg jns mov jle inc push mov jbe mov inc cmpb push cmp rcl push movzwl mov frstor lcall mov lea aam jmp push xor popf push pop mov ret in add enter dec dec push pcmpgtb add xchg out clc enter sub dec hlt pop rcll sti inc out pop add xchg out mov stos mov enter lods lods jne dec in push mov fs stos pmulhw stos inc pop inc lea pushl cmpsl mov int3 ljmp jg jne jno cmpsb pop inc mov in mov xchg daa inc dec stos imul xor sub xchg movsl jbe sub and lods pusha inc out xchg xlat je push and data16 aad fcomp jnp adc cmp (bad) nop xlat stc or mov fwait jnp pop leave test push sbb fwait and xor push mov cmpsl dec jo sub or push repz sub jnp xlat ret fs lcall sbb jl sub pusha pop outsl pop scas adc repnz movsb mov call (bad) lea jnp cmp add lret jl push aaa cltd adc mov dec jnp int3 mov mov sahf test aam pushf lret add out ja mov pop inc adc inc and lahf es jno je sub ficoml sahf outsl mov repz fwait or pop inc je clc push jp es or jo pop adc mov outsb jecxz daa mov inc in add mov sub pop daa pushf sbb out push add popf pop jnp cltd sub mov xor cmpl or (bad) sarl push loopne mov adc cltd mov lret ror outsb sbb add jmp inc inc popa sub rolb out jle cltd push test push fnstenv mov xchg mov or and dec movsl ss iret mov xor movsb xor push (bad) xor ss ficompl pushf dec lods or andl bound sbb jo inc nop rclb or inc xor out loope xor cmp fsubrs pop xchg lahf cli scas fdivrl push or jmp in loope aas movsb ljmp xchg stc sbb (bad) sbb jnp pusha hlt in (bad) xor mov ljmp pop fadd fwait test push into inc and faddl subl xchg daa xchg fld pop pop jbe sbb loope es cmp lea cs mov and repnz lock mov sti nop ret popf push mov pop incb push ja (bad) lock je add mov or iret pop fwait (bad) xor sbb or and decb jl mov aad xchg xor mov int jne pop xchg rcll adc out (bad) add data16 xchg imul outsl clc in mov add enter insb mov xchg pop enter and rcr xor xor pop xchg daa pop ret inc (bad) sub cmp mov inc xchg (bad) xor inc popa sbb das pop fdiv or insb aam jae mov leave inc jns jnp and leave loopne pop imul out movsl lret inc dec gs pop and roll aaa jno lret mov ret popf xor dec push jl repnz inc lea dec inc xchg stos rolb mull cmp mov pop js jnp nop movsl add cmc pop in in and jmp mov dec pop or rol lahf (bad) jmp test out lcall lds dec outsl fwait mov jp (bad) mov dec das sub mov sahf (bad) fbstp stos dec mov xor scas mov scas push sbb sub inc repnz mov or out (bad) jge aaa xchg loopne or sbb out (bad) xchg push aad cltd sub push xchg in (bad) ret xorl outsl mov sub push rorl jl jno push (bad) (bad) jecxz add mov push jns daa adc xlat pop adc jno pushf enter and sbb xor outsl or mov roll insl cmp mov mov jb inc sbb jge call mov push (bad) cmc cmc push fmull dec or cmp mov cmpsb mov mov (bad) add movsl push push and dec imul sbb push jno dec mov jb inc (bad) jg leave mov movsl push (bad) imul lock push or cmp pop mov ret lret das fdivrp xacquire test dec sub (bad) xor ja imul jo clc je repnz xchg (bad) jnp sbb loopne push imul (bad) test and das out add or sbb push xchg push out add int3 mov lock sbb pop mov fsubrs jmp movsb (bad) lock inc sub sahf jns sub mov arpl and jle lea push xchg cmpsb cmp sbb movsl scas or sub outsl cwtl or add pop lahf cwtl dec or cmp imull ss sti and jle test loopne insb div or jno adc mov stos xor add lret xchg and ret mov mov fnop leave out data16 mov mov fisubr mov adc sub dec insl xchg aad insb sub loope inc scas xchg add inc mov dec mov push (bad) mov mov adc pop loopne jno inc xchg lock mov test cld adc stc jno push scas loop pop pop pop cli int or add sbb cmp stos or pop icebp int cmp adc inc jge cld inc sbb mov add popf and dec xchg inc xchg enter jg dec ret or mov mov xchg dec cltd (bad) pusha (bad) jmp jle sub clc sub scas (bad) ja shrb dec cmpsl test sbb dec adc lods out cmpsl pop arpl aaa xchg mov arpl and sub jge cmp call push xchg and mov or xchg sbb aas sti mov xchg sbb mov adc xchg out test adc inc lret or into fistpll jnp sub mov pop fucomi stos add inc push pop fs jecxz pop aam add cmc loopne lcall fldenv fstl mov pop mov mov push test mov fsubs in mov pop add jg lret iret inc sbb stos fldt pop push mov (bad) cmp and xlat rcll mov xchg divb xchg shrl push adc inc test add sti test mov dec xchg jbe inc sbb dec inc jns loopne xchg movsl in add stos sub mov hlt push jp cmp adc rolb lods sti fsub out jl fdiv ss fimull popa les lret sub ja bts mov sbbl cld xchg push lock push fist aaa xchg xchg push lret (bad) pop jl scas mov jns leave loopne sbb sti ss mov hlt push mov mov rclb shrl xchg fbstp sub xchg sub ss jb dec xchg je jb cmp aam mov xor pop inc sahf insb clc xor sbb cmp fmuls rorl mov and push fistpll or sbb push (bad) jae in movsb cmp aaa mov sub movsl sbb ds out push je fcoml mov popf sub popa pop jbe lods bound ss and add mov sbb mov fist outsb or push push pusha sbb xor inc jne xlat or (bad) inc int dec jmp dec fwait cmc ret push test nop mov xchg jg hlt push pop cmc push xchg pop xchg mov inc jle pusha xchg orb aaa sti sbb jge das icebp sbb push jns mov or dec pop (bad) push xor imul clc scas xlat pop push sbb je sub mov into mov lds push sbb hlt sub scas adc inc mov mov dec sub push adc (bad) rclb repz push les xchg push jns lret push xchg push fcmovu pop mov sbb jl adcl in ficoml mov and pop inc cmp dec mov into push or xorb pop or cmp ds and (bad) jno jmp aad and add es push push insb pop out test fs clc sub rclb add (bad) and stos sbb ret sbb pop dec cmp out out add fldt icebp popa test test mov inc pop sub pop push push or jmp fidivr movb aaa repz stc imul push adc or add mov jp or pop and pop jo fs inc xchg inc cmp mov out pop iret mov hlt scas sbb inc lcall lods hlt insl subl out aam pusha (bad) ficompl mov test jle ss xchg scas mov or pop sbb sahf push mov lcall cmp lds xlat pop jmp int sti sbb int3 into push mov mov aam jle enter add inc sub cltd into sbb aaa nop or dec repz inc sbb mov or mov sbb (bad) cmp mov cli inc xchg fimul nop jmp stos inc cmc jmp sub or xchg ljmp fisubr mov pop mov in mov leave into flds shll jne adc test jo popa shrb add (bad) loope not and jo xor ljmp test inc dec cmp mov jae pushf inc sahf pop sub lods stos mov and in add xchg inc jbe add xchg test (bad) enter jnp cmpsl or imul lock cmp mov jns inc mov flds enter dec out mov mov icebp decb mov xchg es pop scas iret into cld xchg ret icebp push xchg or pop push dec fldenv int3 mov sub jmp aam aas inc hlt jg mov lahf sahf sarl jecxz jno ret mov (bad) lods sbb call lahf push outsl and in sbb pop mov mov iret mov ljmp pushf adc test mov out dec or je fsubrs lret nop push cmp xchg sub dec inc sbbb jns adc xchg adc loope movsb hlt out sbb in jnp lods addr16 es out fwait dec das sahf clc push movsl jo push fidiv mov adc das adc pop (bad) pusha pop mov (bad) scas dec sbb arpl push push nop mov mov (bad) or or xor aad js cmp sub xor mov iret cld hlt rcl fs adc scas jnp adc je xchg sarb mov mov adc fs cmp adc (bad) aad push mov fwait jl mov push pop call idivb inc xchg sub leave mov xor in ljmp push or add rcll shlb scas and inc test fidivrl sub jno cs adc push mov dec ljmp sub bswap dec jp fsubl jns xor fidivr ljmp inc dec dec in scas inc adc xchg cmpsb mov aaa jbe stc cmp rolb hlt jle in jo mov mov dec movsb out ret and dec adc test cmp pushf pop pop cltd inc (bad) jne pushf cmp fwait pop sbb jl (bad) and mov aas pop xor insl test inc jbe dec test test inc movb aam out cmc ret dec imul pop sarb dec lret mov aas mov in lret outsb xlat lahf xchg adc in mov addr16 inc inc (bad) sti (bad) pop in pop dec addr16 pop int3 std lcall cli in jecxz in test sub loope pop jl jb mov aam push dec rcll push cmp ss loopnew pop dec fnstcw adc adc xor inc xchg stos or push sub loopne ja or loop jbe pop jnp in aad inc push cs xchg stc push pop and jb test in mov inc pop cs pusha rorl mov repnz mov (bad) push ja xchg or lcall inc rcll adc das popf inc popf xchg mov jg mov adc inc (bad) jo mov pop in adc mov mov push fisubr xor sbb inc sbb (bad) (bad) xor dec add icebp push pusha imulb lahf and inc xor mov dec sbb addl pop sbb out into or adcb dec jae data16 clc leave fidiv in inc mulb xlat jne addl dec sahf lcall cmp inc sub mov mov mov movsb addr16 add imul mov push out movsb int rcrb test pop inc pop aaa push sub imul xchg mov (bad) xor adc mov or xchg pop pop mov inc jge (bad) adc rcr in jb dec int3 cmp stos sar mov testb loop ret (bad) lret loope pop and mov and scas add cmp test mov out pusha and xchg xor xchg subl cmp mov cli adc into jg les xchg out inc mov movsl test fucom pop iret add out pop test and enter enter mov push mov ret or das sub adc sbb pmulhuw mov mov or dec lea push add fwait mov inc (bad) cld dec gs mov into ds scas mov lds lcall inc push ja jge pop ret orb push lahf test sbb int3 xchg or pop cmp loope mov repnz push daa rclb jg mov xor pop mov scas jle cwtl cli fisubr mov lods out sbb mov into adc andl aam stos aam shrl stos pop movsb xchg out test xchg insl mov rorl loopne gs insl aam jne in inc bound mov outsl pop mov push fcoms pop xlat (bad) dec and push fwait push pop push mov mov xor scas or lods push jbe or xor push dec mov (bad) jno mov dec add dec sbb jns adc push sub fnstenv and stos mov out push push test fcmovnu jg jl incl or cltd loopne jne pop mov ficoml rcrb xadd fucomi inc cmp leave (bad) xor fsubrs cli and push (bad) sbb lock push and cmp mov mov adc outsb lahf push push or dec push add stos mov dec into loopne pop sahf stos sub popl jmp xchg inc cmpsl jns adcl adc and mov lcall aas inc mov inc stos push data16 addl incl xor out push jl mov or xor dec test sbb loope mov (bad) cltd ficoml shll mov push pushf repz and std fdivrs jl movsb sbb ljmp mov jmp ds cmpl xor xor imul int in inc or movsl xor sbb cmp jp adc ss jmp rorb pop xchg adc dec mov cmp pop daa jl sub rorl arpl adc mov dec push lahf xlat mov mov fs popf nop push mov mov imul leave mov add addr16 xchg cld (bad) js cmp xchg add add jge pop mov sub xchg iret xlat arpl sub mov or popa mov dec xchg pop mov adc idivb cltd adc sub sbb (bad) notb in lods movsl jno sub out cwtl push lea stos mov and pop rcr pop cmp outsb pop ljmp mov xchg add mov shll popw dec insl (bad) ret mov in cmp loope cli lret das lret pop addr16 scas fwait lret sub ret aas mov jno test dec leave sub test xchg xchg iret pusha pop xlat popf push sbb mov cmp or popa or cli lods cli mov lcall push xor cmp xor dec clc sub in push ficomp fimull in cmp fldcw pop fnstenv test imul pop int pop icebp in jnp mov inc push xor inc stc adc or add or out adc push adc adc mov scas adc mov or xor ljmp mov nop (bad) fidivr sbb es inc dec mov jle pusha push push mov pop cmp adc daa fisub repnz pushf pop repz cmc rorb add fwait rcll cmpsl mov daa mov sbb ret sbb push adc push (bad) xor shrl ror out push test mov aaa inc dec jb lret pop add jp adc sub mov enter jge out adc push pushl sarb dec or push cld (bad) mov jp xchg jmp lcall clc outsl jle repz mov push jno mov or jb test insl pop loope insb sub cmc push inc cmpsb or fwait imul xchg pop cmp lods insl mov les cltd xlat mov inc data16 dec inc or mov sbb fs push loop cld fisttpl faddl (bad) data16 mov xchg imul sbb cmp cmpsl lret mov mov out pop je mov scas jne jl shrb mov mov mov icebp inc xchg fdivl ss sbb inc repz movsl push pop stc out (bad) icebp push decl out xor xor push sbb pop sbb sbb inc aas sbbl cmpsb aaa ret add inc mov mov push fmuls cmpb popf dec stos mov mov movsl (bad) lret mov cs lods lock pop xchg mov dec ja xor out cmc mov dec push sbb mov mov xchg mov ror or mov pop cmp cmp sub add sbb push mov jp jl loope adc xchg out sti je in push mov dec jns or sbb mov sbb jae sti ffreep insb icebp enter (bad) cmp mov loopne dec or repz pop and xchg push sbb adc out hlt dec out cmp push dec xchg (bad) push cmp inc insl inc mov lock insl adc jb scas outsb and and and xor cmp or adcl sbb ret pop fdivr das cld adc mov dec or dec mov mov cmp xor icebp xor stc ret lret (bad) mov repz loop or sbb inc push mov js dec into push push cmp dec ret (bad) cmc adc leave gs stos and popf adc lds mov push push (bad) movsb enter stos ss lock test xchg lods je inc test mov mov rorl pop mov push pushf insb dec mov inc imul mov scas xchg pop std mov sub xchg push mov or mov aas add pop and test (bad) jbe xchg jmp xadd mov andl jmp sbb (bad) dec inc inc cmc push inc pop ret push inc sub ret enter stos stc adc mov loop loopne jl xor and mov fsts sbb outsb pop pop ret subl pop mov pop mov out pop test lods lcall inc iret jbe xor sub or in cld psrlw (bad) imul jbe stc sbb stos push mov (bad) hlt aam mov popf subl cs cld xor int (bad) push (bad) jbe sar test aam leave xor jb xor out jb mov mov dec iret xchg jle in neg mov fcompl movsl ja ja fstps dec es (bad) dec mov cmp pop adc jmp push pop dec cwtl dec mov jge dec mov data16 int cmpsb xchg (bad) fiadd cli scas imul sbb idivl mov jb mov sti nop jmp int dec cmp sub sub mov loopne cmp cltd adc mov add xor pop test add outsb mov pop sbb rcll xor mov dec inc adc inc mov jae jne push push daa cmp aaa cmc mov xor and mov and or test dec stos adcl fcom xchg inc out jl int3 xor adc lret cmp clc data16 dec fldenv or gs insb xor mov push cmp lahf sub push (bad) jo in xchg arpl xlat popf push imul jecxz and mov push mov xor xchg (bad) in jnp leave add test add sbb cmpb loopne popa mov inc inc or (bad) cs fisubl cld loopne pop dec inc add add dec gs dec xchg sbb and ja repz ss lea add loop cmc mov push and push test xor lods push data16 jle rdpmc negl dec mov aad lds mov lea jecxz addr16 add repz xchg (bad) (bad) insl jl cs add and mov push aaa xchg js lock out pop ss aad xchg push in inc mov lret or xchg (bad) ret hlt cmp pop mov jg jge aad jge loope adc push push adc jmp xchg out orl daa call cmc into mov das add cmp in inc (bad) (bad) mov int3 daa jae stc mov loopne cli or mov or pop fsubr mov mov rorb in test pop iret (bad) xor adc inc cli ja jle mov popa insl and xchg xor jo pop (bad) dec jecxz add xchg or xchg pusha notl sbbb sbb xchg roll or inc rcl test lcall movsb sbb movsb mov xor insb hlt lret cld cmc in mov xor (bad) push frstor adc sub mov lcall sbb pop adc mov repnz dec fs pop dec mov daa push es adc decb ljmp std bound fistpll test adc pop push add xor ja xorl mov pusha push xchg and xchg xlat xchg mov mov rol and xor out push jl pop and (bad) dec nop das sub mov hlt lods push rorl add daa and xchg jbe out xchg jmp (bad) mov sbb jae and mov dec mov mov cmpsb ss mov ja fsubs cmp push scas cmp ljmp stc cmpsb fnsave add mov jb push sub fwait push xchg jns,pn jg insb mov lcall inc push push pop pop mov in lahf cmp jns fcmovu add outsl adc adc mov shrb lea lahf adc in fnstenv pop push fwait lods pop stos adc adc inc into cld leave and inc jp (bad) call (bad) stos inc and loope orb pusha dec adc lea and push lods aam out js repnz shll sbb movsl push daa xchg sub orl sub or ds ja std and icebp jno sub lcall cwtl inc (bad) iret sar adc loop aaa test jb mov cmp cli pop je repnz dec pushf inc pop fisub scas pop mov add mov sub dec cwtl mov mov push scas fst cmp lock movsl jl adc imul jns xchg rol add sub push arpl sub imul jo aas push lods mov mov sbb cltd jae add mov leave inc cmc cmp int loopne jb,pn scas bound into iret push pop sub fwait adc and in mov pop (bad) je dec add jnp jnp sbb inc scas push sub outsl xchg int3 scas lods mov lods mov and xchg xor mov mov pop jb lret ss mov jbe int3 lcall sub ret aaa (bad) mov adc sub lahf dec aaa inc mov mov out pop sbb ret jg push cltd and mov and addl wbinvd fwait xchg inc adc dec out (bad) in enter fcoms dec pop jno lcall adc sub mov cmp pop adc pop and cmp pushf addl outsl mov pop lret lahf iret fdivrs mov popa cmp fbstp imul popa aad pop inc and insl or xor pop mov mov inc push rol movsl xor or add es scas or stos sbb lds aad ret das in xchg and jo jbe lret mulb jl mov int3 or dec enter jp outsl insb and std add (bad) ljmp dec fistp mov arpl pop xchg xor (bad) pop mov movsl ds adc ret addl stos int lock xchg daa movsb sub (bad) cmpsl sub test push adc cmp in inc mov xchg pushf clc add inc mov xor mov in pop pop dec mov (bad) mov insl sbbl jl mov jmp mov movsl and xchg pop sbb ss push ja sbb popa out fwait aas push xor sub loopne xlat push leave out pop sub ljmp mov mov jne and sub (bad) jecxz clc fwait fs jl mov jecxz adc pop pop xor jb aaa sub sub jge pop cwtl jns sarl inc out mov jne add jge into stc imulb cmpsl dec outsl mov hlt sahf mov loopne mov imul rol pop push popa (bad) push xchg fdivl mov test xchg cli aaa inc sbb stc or mov mov movsl push test (bad) pop std jo xor push shll rcr pushf pop sahf out jo sarl lods (bad) jno test out stc jmp es das out push cmpl nop adc add lds lods sbb cmp es cli mov ss arpl jmp sbb jl cwtl jecxz and fdiv cmpsb sbb out (bad) scas outsl sub idivl mov fwait push iret cld sbb je sti lods roll in cltd mov push mov (bad) pop aas sub inc les enter lods (bad) xchg cmpsb stos adc icebp xlat mov mov repz (bad) cwtl pushf push rcrl sub hlt add je repz mov push xchg into push mov call outsl adc mov (bad) cwtl and lea addr16 in and aaa or ret push lret orb sbb fcmovnbe fbld outsb sbb pop mov sti scas add out push fdivl adc push pop mov push call adc and xchg cmpl lods mov (bad) shrl rolb adc jno es xchg out out pop fadd (bad) cmc bound pop jbe lock pop jle negl sub jp and sbb loop sbb mov sahf aad sub adc imul sub push or lds into pop lret insb dec lea clc fisttpl fldl dec pop push xor fldl mov jno icebp (bad) in in push push insb sbb sbb insb mov icebp add call jecxz cmp push push fdivr sub sub jb mov lahf outsl or sub leave adc or sub or fsub orb divl iret or cmp ja repz sbb addr16 (bad) pushf out jns (bad) fmull repnz inc dec push repnz cmc xor loop push (bad) mov or rcrb sub call lret in cs pusha mov xor jno and pop sub ret push and ret or arpl mov les mov xor cmp sbb mul xlat je icebp cld inc lcall inc push sbbl div sbb dec or add fcmovnu cmp jns dec inc fldt cmpl mov lds and xchg xor push mov ja lret add js call inc (bad) mov mov sub push mov mov scas fldlg2 lods movsl sbb idivl and (bad) scas jle test mov dec xlat xor test push in cld aas cltd lds loopne imul popf fstl leave ret xchg ret rcr lahf pop test xchg jns ljmp ds cld dec push int cmpsb gs roll inc mov lods adc aaa std pop mov (bad) insl cmpsl test cmp ret into mov in mov mov lcall cmp pop lret jo jge in pop fdivs lods mov push push out mov push les sahf ds movsl mov addr16 and dec and stc mov adc mov (bad) pop and xor std (bad) xchg adc xor shrb or inc xchg push outsl test fcomps jbe add fldt inc adc aam je aam mov arpl sub inc inc mov lods stos imul repz sub ljmp ret lcall pop adc fidiv xchg imul jp out jge mov or sbb leave and xchg push insl pushf adc jae adc in mov ja (bad) mov fwait (bad) lock mov cmp in rcr jno imul xor mov mov cmp fsubs inc sub dec mov popa dec inc xchg test push imull je sbb or clc lods int sub enter nop inc adc in jbe mov xor xor lret sub and fadds call div mov (bad) hlt sub fistl in arpl (bad) aaa loope aaa or mov stos sbb iret sub xchg jecxz test sbb dec adc idivl sbb or sbb push mov dec sub jmp loopne adc in stc sti fimul pop clc fiadd push push mov push xchg sub pop or pop adc fsubp sbb inc fnop sub push and rolb dec add outsb movsb cmp cmp cwtl les pop test sub sub mov iret aaa dec (bad) fisub mov lods inc addb dec add push jns add add cs pop fmulp pop adc mov or lods mov xor testl bound lea test es sub or div adc mov xor jg pop fiaddl lahf fldt xor mov pop stos arpl push imul xchg add sbbl test test aad inc push loop xchg stc pop gs scas pop push sbb outsl movsl movsl test adc fimul cmpsl cmpsl sbb inc or repnz pop in xor (bad) repnz sub push cmpsb loop sti add lock push sub jo push pop add scas inc sbb add (bad) aaa mov ret hlt popf rorl and push add fnstenv xchg divl push cmc jbe inc xchg xchg outsb (bad) jmp insb add aad inc push cmp and push insb roll aaa pop loop push clc fs sbb mov lods inc lods imul arpl fucom inc (bad) outsb xor push aaa mov sub sbb movsl adc mov mov push inc mov aas add loop icebp arpl lahf jecxz adc adc mov popf dec cmpl xor in adc pusha fidiv cmp addl cli add xchg mov lret adc out imul adc xlat bound lcall imul sub movsl inc xor jmp xchg sti cwtl sub mov pop daa adc sbb shl lds adc dec in out jo pop adc es sbb lret cmc cmpsb sbb dec mov fwait sbb dec mov std dec je cmc or xchg push or jno std xchg enter mov sbb push lcall inc call mov ljmp xor jle (bad) jb cmpsb mov (bad) out push xchg or or dec xchg add clc pusha xor or mov jg ret and das xchg aam loop xor rcr and outsb xor pop or xchg in dec push std jl repnz fild and xor call es inc ret and jp fcoms mov xchg loope lock out jnp jbe incl mov out out out aas sti stos cmp dec jno or (bad) sub nop movsb mov sub cmpsl jnp mov cmp push sbb les or xchg jae add imul lods inc (bad) fdivrl mov sbb push in mov es bound dec lea pop jecxz (bad) (bad) dec jg and and xchg in aad scas (bad) sbbl adc xlat out ret outsl je pop (bad) lods mov cmp xchg (bad) ds lahf or mov test dec pop ss test jbe stc loop loopne fs fistpl add outsl jecxz stos arpl add lock dec sub in lods lods ljmp stos scas mov jl rorl cltd repz push mov popl out (bad) dec or sahf fcomps clc sub inc out call cmp or lahf push pop jle in and push popf movsl inc pop insl sahf repz gs out jno (bad) jae fs sub stc leave inc (bad) pop xchg ljmp daa insl jmp pop mov (bad) mov sbb push movsb pop sbb out sahf mov or pop sub movsb cmp jne movsb xor or insl pop insl out push fnstcw inc or xor cwtl jne push stos mov mov sbb mov aad push sub mov test jecxz xchg movsb sub push or mov imul cmp loopne ror or cmp fdivrs inc addr16 cmpsl outsl adc bound (bad) lret and or psubd jecxz mov and in cmp movsb jecxz aam jmp out push xor les mov jmp (bad) jno jmp jnp xchg xor jg jp out aam add sub mov popa fcompl and in dec sbb (bad) sub fs mov insl jne out pusha lahf push jge (bad) lods fsubs push out aas lods insl incl push (bad) in dec int xor clc mov mov (bad) movsb push jp and cmpsl sbb lods in and mov xchg aaa mov cmp insl inc pop mov cmp ret xor out pop mov xchg icebp or neg test dec insl cmp sbb xor call and jmp xchg mov loopne adc dec dec xor pop or repnz loopne ss xor and pop jle popf or sbb test rcr fldt dec push cltd (bad) popa mov mov push pop stc (bad) sar fcmovb and sbb stos inc into movsl mov fcmovu int sbb mov add xchg xchg mov dec jns ret stos (bad) les ja push pop and xchg inc dec cmp push aad nop mov xor lock inc sbb hlt jg psubsb jae and mov jae outsl nop gs addl cmpsb inc or adc dec cli dec movsb sahf dec loop pop and in decb iret and das lret call cmpsb mov outsl adcl movsl enter pop mov aam cmp aaa movsb mov adc dec mov sti mov or pusha out and push sbb push and pop in negl or inc nop iret jbe dec cmp inc rcr gs xchg rcll xchg jnp in les add cmpsl ds adc sub adc in lret mov cmc movsl inc insl jp in leave pop bound sub mov insb inc adc mov (bad) pusha in inc iret fisttp arpl (bad) pop sub fcomps inc pop mov dec xor movsb roll xlat mov pand push push xchg jl loop and lock xchg push shr (bad) jns int stos rorb hlt sub out and lret call out jb imul push mov hlt mov push mov (bad) push mov out sub adc pop sbb mov xchg arpl xor xchg pushf cmp dec fldenv punpckldq mov divb pop divb ficomp push cli sbb std push xchg outsl or adc outsb ja push xor pop cmpsb (bad) mov das xchg push lods (bad) in (bad) cmpsb lcall insb mov ds adc jle or or or mov and xchg ret mov or cmpsb push leave mov call movsb adc in sbb cld pop scas mov push in mov stos repnz lods fs inc lret mov adc jb pop xchg bound (bad) mov jnp jbe test push das jo xchg sbb fildll xlat popf mov push dec adcl rclb push push fistpl xor outsb pop lds nop jge inc lds out dec (bad) mov out lret push (bad) jb out sbb or shl jmp push stos push bound push jp and xor sti push push jae pushf movsb sbbb repnz sbb sbb ret dec push pop out mov pop sub shlb xchg outsb push adc pusha leave adc shr test push push aad add jl loope xor pop mov xchg xchg jg dec xchg cmp movsb dec mov xchg xlat into cmpsb cld and aaa aam out xor mov repz xchg movsb push scas cmp dec mov inc xor call cmp push fcmovnu in push pop ret inc out (bad) jae daa inc jns int rcrb lcall mov setae insb push sti pusha cwtl pusha jl jecxz in into inc add or push loope xor cmpsb divl adc clc mov push or sub push xchg push sarl adc popf adc push mov mov and jae xlat mov cwtl inc jecxz add push fprem aas push push ret shll cmp pop mov ret lcall inc cs out sbb and jecxz loop fucom and leave and and mov jle cwtl xchg loope add cltd add pop test int3 lea dec and xlat pop scas jns jo add ret mov push (bad) jo sbb and mov dec inc shrl daa es dec pop push xor push fmuls pop rcll das jmp jnp insb scas inc lock addb das dec mov mov jno movsb push (bad) rorb mull mov and lods ret and pop cmp cmp pop jmp fiaddl mov mov pop mov (bad) cmpsl js lcall cmp mov (bad) mov sub jge xchg add insb sbb cmp jle decl (bad) rorb std (bad) test xchg fadds (bad) (bad) scas push outsl pop jo push push mov sub leave dec sti adc fwait out (bad) imul and cmp jne xor push xor xor mov jmp push repnz cmp add movsl dec testb xchg dec jmp lcall js rclb mov add scas mov push cs ljmp (bad) pop sbb nop stos into and dec xchg or jae leave fimull daa clc ret sbb mov cmp pop push lret (bad) les pop rcrb icebp repz xchg pop or lahf clc loop addl push insl (bad) jle mov popa cs test out pop out cmpsl test enter stc xchg and and push adc cmpsl jp,pt mov mov xchg cmp inc mov push add in rolb mov or lcall mov test popa (bad) (bad) xchg sub xchg leave outsb ss sub jb lret (bad) fldt stos enter jmp mov loopne shlb push pop scas pop xor add (bad) jp xchg push adc insb adc (bad) sahf aaa ljmp and scas jnp xor clc or mov pop call or pusha in arpl push sti xor dec xor and jb (bad) (bad) in xchg pushl pop add (bad) int3 sub and icebp xchg dec sbb jb lods dec pop inc roll stos outsl dec push add xor xchg loopne pop jl xor fwait push mov es in aaa (bad) iret fisub fst faddp inc push sbb push sahf sbb and lret push aam fild (bad) (bad) mov loopne xchg jo dec mov in mov lods and mov ror (bad) ss xchg push xchg cltd dec fistp ss es or mov adc ret add sbb mov daa mov inc cmp cmpsb lods movsl sahf sbb call daa mov xor xchg xchg (bad) pop (bad) lcall setg inc add (bad) pusha les in inc pushf pop xchg imul enter imul lea or sti mov push (bad) and inc or xchg subl or pop (bad) imul pop mov mov mov xchg jecxz adc adc mov sub jno popa (bad) lcall mov out push and mov sbb repz push lret pop lea into sub sub add cli cmp out rcll movb push fisttpll and imulb sbb cmp push aaa iret popa in movsl aas ret ret aad xchg xchg fwait adc mov mov mov addr16 stc mov icebp or popa pop push daa fild movsl insb in stos xor lods push lods andl adc xlat jns cld pop mov fnclex outsl pop fldl push mov cmp jno leave enter arpl ret jnp adc push movsl ss push cmp adc repnz lcall sbb mov or mov rcr scas fnstenv fidiv scas fmull push inc out test sub stos (bad) aad mov and push mov shrb mov lea ja imul sbb pushf dec bound lock sub sbb sub stos push in insb mov negl mov ret sbb popa cltd push lret adc inc mov lods sahf repz test lret jne xchg daa add aas pop xchg repnz push dec and int3 mov xor repz les roll je fwait inc (bad) loope fsubrl adc adc (bad) mov cmpsl sbb pop jo call sbb (bad) jno mov jge rclb insb imul pusha xor (bad) stc mov jmp (bad) loopne in adc adc icebp out and xchg fdivs mov jp mov xlat adc (bad) mov mov lods push out mov icebp jo push jne popa (bad) std and jg sbb int push (bad) (bad) imul mov and stos and subl mov cld push jmp xlat push pop sub mov xor (bad) sub adc int xchg mov mov pop and xchg ret aas mov sar jmp inc mov xchg mov loopne cmp push add jne dec push stos and pop sahf test pop or push lds lahf (bad) cmp into dec push and popf jle inc mov or movsl or fiaddl gs inc adc xor mov mov xor sbb cltd lret mov or jg lea xchg aas xor push and push dec mov das mov mulb mov rcrl xchg fsubl (bad) js pop imul or icebp dec mov push mov lock or xchg or scas in rcl out cmc in leave aas in aad lods movsl mov cs mov push lods push mov push je scas or ljmp adc lock xor in mov xor inc stc push ret in adc jae and sbb or lcall mov pushf lds sbb push mov adc test xchg add test cmp and push jp jl (bad) ss or add lahf lahf ljmp lock mov pop sub jl mov inc sbb fldl cmp xor jle mov fadds bound pusha (bad) fisttp mov cltd imul fidiv (bad) (bad) stos aam or je xchg inc jae pop xor aas cmp outsl or push icebp lock sbb jl fiaddl xor fldenv insb out cld mov mov sbb inc lock adc xchg mov or dec push mov fist and fld xlat pushf xor push ljmp mov jle negb iret dec mov and cli push xor loope jne (bad) imul in adc (bad) aad outsb (bad) cmp adc cmp add enter push loop ds (bad) push stc ret test je loop sub ljmp sub jo lret xor mov ja jp adc or sbb xchg push mov mov stos loopne lods int3 xchg stos pop adc into lcall and lods int3 loop push nop neg lea fildll mov ficompl xchg mov mov push lds xchg jne push flds adc adc sbb sbb and or jmp mov daa mov popa push xchg cmove inc xor mov mov jns pushf pop mov sub adc outsl test inc sbb mov xor sub in test and mov mov ret cs inc out imul je sub (bad) scas xchg inc ljmp dec push repnz insb popa push ret scas jne xchg and pop fldl dec scas loop cli in xor lods mov rcll mov push and in (bad) stc (bad) dec mov or mov sub loop rcll jl rcrl sub or ss dec xor iret xor call or jmp adc pushf pushf sar push add or (bad) fidivrl dec jge mov jo adcl pop repnz aaa lret das subl pop dec jmp (bad) mov mov inc xlat jne les mov ds insl fcoms add insl xor jo mov rcrb ffree cld xor in add mov mov sti dec out sbb inc arpl leave in (bad) rcrb rorl cmp movsb scas xchg popa insl cmp cwtl pop loope mov les push dec jo aaa insb pop xchg pop cli ret arpl ret imul ja add cmpl and jns sti mov shr inc pop mov pop mov xchg mov cmp sbb inc rcl scas mov jb scas jbe inc (bad) push push rolb xchg mov std push push std mov rclb or mov insl or movsl cltd aaa scas sbb bound dec or dec popa inc (bad) xor mov (bad) cwtl (bad) jb sbb adc imul int (bad) or jnp xchg cmc loopne std pop mov popw pushf rcrb int xor push adc bound pop ds pop pop cmp jae push mov fdivs ror pushl stc sbb ljmp dec dec outsb push jbe pop cli sub insl cmp sbb push mov insb push push repnz adc add xchg add in icebp dec in enter hlt add fstps out pop xchg sub mov leave les or setb je push jp cmp mov scas dec xchg mov xor aam lods dec cmpsl add inc add mov lret orl adc mov jecxz clc popf or in subl out mov cmp pop movsb adc lahf inc xor pop dec mov sub pop dec stos push cmp sahf cmp jg mov fwait psrlq out sbb rcll jae pusha in mov push dec and push out pop mov xchg scas adc and add push mov pop (bad) out pop adc push lret fidiv dec push outsb pop rol sub mov pusha jle fcmove add xchg aam push out iret dec out ret stos jp sbb jne movsl insl jl cmp out (bad) lock sahf add lds pop inc jne add js vorps iret out pop ret addl jno fs mov iret inc mov sub movsl mov jp int3 xchg insb arpl cmp in or xor rclb cmpsb adc mov js,pt int3 or bound adcl in sarb stos test dec dec in outsl in lret pop or es xor adc jmp insb sub and (bad) and stos lds aad dec ret dec lahf lcall cwtl daa sarb incl (bad) (bad) jo push shl pop dec pushf dec dec sbb jae sbb sub or jne into addl push jp les jne stos popf (bad) insl es hlt adc jae sbb aam mov (bad) cli jecxz mov jo add cmp dec cmp ficom ret je or push add lds inc mov or ret and and push mov stos leave addr16 mov cld cltd ss (bad) cmp sub aaa pop imul (bad) xchg lret add cmp dec dec jge lods das cmp mov out (bad) jb push inc les decl jp jno fs shl call pop pop nop jmp shll jmp xchg in xchg sbb movsb xor mov in cmpl mov insb pop jno jle loop test mov xchg lea ror clc jno adcb scas sub cmpsl mov repz fdivs adc and sarb outsb mov int3 sub popf mov push push shll (bad) fidivrl jno sub pusha cmp insl pop jno jnp xchg pop movsl sbb (bad) in enter loopne or pop fildll dec mov (bad) mov mov in (bad) xor rclb xor cmp imul int popa cmp add cwtl jge lcall and repz xchg sbb call pop push xchg and mov cmp xchg sbb mov stc or mov push jo mov sahf fmul shrb push pop add jp mov jae jbe push sub in jnp jb push in push lea out loopne cmpsb mov xchg into or imul fidivl xchg inc ljmp and mov cmpsb xchg jecxz push rcrb mov push repz jle out or call push popf aam jns pop pop pop jnp push mov push jge xor popa rol mov xchg inc push fdivl cmp jecxz test xchg pop ds cmp out cli push mov mov mov aaa sarl daa dec adc jmp call imul and push in cmpsl dec imull lret addl and pop and push clc pop pop arpl mov and or decl (bad) lods jmp addr16 je rcll cmc sub push xchg xor pop sbb jne push cmovb push xor xor pusha push add out nop cmp xchg (bad) xor repz sbb pop sbb loopne bound adc cld pop add push push adc mov jge dec cwtl jecxz (bad) lret xchg (bad) ljmp stos jb add xchg mov mov faddl cmp xchg sub push cmpsb inc push fisubl (bad) mov mov push xchg icebp jl out mov cmpsl add sbb xor push mov and inc rorl dec push icebp cld mov jl sbb subb (bad) lods mov stos movsb in push push xor shrl xchg insb sub lock jp lea cli mov test add (bad) shll and push jle lea int push insb fs sahf cli out loopne jb imul sbb ss fnstenv and mov cmpsl cmp add sbbl adc pushf jp fidivl or cmpl je push mov loop pushf inc fistp mov cmc in inc dec into pusha xor jns (bad) jle jle sub push (bad) push ds lret loopne mov jno not unpckhps push out or xchg jp loopne nop (bad) roll dec add cltd and jns int or mov out mov mov nop xor pop cmpsl push cli dec stc mov pushl (bad) popa jns dec xchg icebp daa xchg xchg cli sbb sbb jae pusha aam dec sbb mov sbb ror lea mov add dec pop jns xchg testl xchg jnp mov or ret repnz xchg dec sbbl fldl xchg cmp addb loop and push cmp in push push pop int3 aaa ss mov add dec mov jp mov mov jle dec jnp outsl and mov imul nop sub add jge jbe rclb out mov pop adc movsb fldcw push pop scas pop leave pusha (bad) mov xchg lea (bad) int3 in bound pop pop idivl dec pop ror aas and mov fstl mov rcl sub sarl mov fildl imul mov mov xchg fldl fstl sub mov jbe sbb ljmp and popa or and jbe test sub and mov data16 ret push inc pop scas and fdivp add mov xchg arpl aam xchg inc push mov ret push sbb jo les dec mov jl aad mov dec aaa jo,pt adc cwtl ror jns pop in enter mov mov or mov and cmc pop lods sahf popf in fstpt and sub pop push add push movsl mov iret push push sub sbb outsb mov jb mov js loope aas mov jb xor or sbb cmp push gs mov xor out fcom lds fild jge scas test pop hlt push add push sahf jne xchg lret cltd fstpt mov add gs xor mov lock (bad) cmp pop imul and rep mov mul xor jno lret jg ret pop lahf pop rclb xchg mov push push mov lods mov mov pop push mov pusha or dec iret sbb jl add mov jg adc mov pop xor lahf sbb add push dec mov clc jb and jno icebp cmc push lods repz dec aam pop imul pop sbbl xor sar xchg pop scas out xchg sar pushw jmp push fwait or lock test mov imul push jnp xor mov or sahf call scas in lock add sbb pushf imul push or int3 jecxz js jl jns add jmp ss push push shll cwtl or sti (bad) jp cmp dec nop stos sub mov into movsl mov incb sbb xchg mov mov cmp adc sbbl xor divl jg adc movsl das xor orl insl add pop cmpsl inc push jno xor jl sbb test add inc int3 jmp pusha lahf jae mov clc or adc or lret lret imul cmp scas cmpb push add xor jns xor xchg imul mov xchg js dec mov out sub jle loop gs stos push inc jg in ja xchg or push out js fwait and pop outsb hlt ds mov jbe push outsl mov pop and pushf sub imul inc aad push mov xor push shlb in cs mov cli sti sub idivl and dec dec sbb push xchg das and rcrl addr16 add (bad) arpl jne aaa sub std test (bad) fdivl test mov mov outsb js or test mov adc add lret (bad) push test pop mov push sub (bad) ficom les lods outsl movsb lcall out push sarb insl addb (bad) aas js and mov cltd cmp sbb imull and and or xchg add fwait push cmp shlb xchg les mov cmpsb mov inc dec stos pop inc pushf fnstsw mov and jo mov sub arpl lds and gs push add xchg and stc imul sub loop aas dec movsl into sti repz std jo gs mov sub je arpl mov loope adc push mov adcb jb loop lea mov mov hlt pop cld (bad) arpl addr16 push sub xchg xchg into push test add stos pop lock int test xor pop rcll mov iret lock test adc in int inc repnz inc pop out mov test xchg cli jno sbb mov mov nop mov xor sbb ljmp jnp cmc inc cmp adc int (bad) xor je das dec push sbb mov or sbb push out jae sub add sub lahf out movsl gs push mov mov mov xlat push jl nop fs jmp fidivl test and ja mov lods xor aas aaa push test mov mov bound cmp jbe ja in (bad) test lock popa fwait xor xchg pop sbb xor (bad) sub mov enter lock adc test shlb inc mov gs add aad xchg cmp hlt insl cli icebp adc xor sbb std inc push push outsb pop mov hlt inc lret xor jo jle fs popa repz ss cmc dec stos xor mov mov fisttpll iret (bad) lret dec sub and add fdivs cltd in and fnstcw jle push test pop movsb fsts lock dec mov pushf into fidivl cmpsb leave xchg jle inc mul pop int3 les dec or sbb pop insl rolb pusha iret add add in pop (bad) xchg ror loopne xchg pop sbb cld cmp into adc clc (bad) fldcw push adc jl jbe paddq sbb inc icebp scas sub cmp sub popf shrl daa sahf neg mov fdivs (bad) or gs xlat lahf cmpsl cld imul lds ds sub xchg nop mov lock push or and fldenv mov sub xor xchg (bad) push sub jmp xlat inc cmpsb add xor xchg repz loop clc jl outsb mov mov or clc xchg test ret push adc lods sub jmp mov nop jle mov out mov rcrb cmp sub dec jp sahf jle mov aad rclb aas inc jge in push stc fwait pop movsb jno mov dec das and int push sub es fild sub addl sti sub fwait xchg pop ds push cltd mov das mov pop push insb js xorl pop or dec add sarb mov clc pusha or dec mov fcmovbe repnz xor dec inc dec (bad) jbe lock (bad) fisubl lds mov sbb sub in ret add xor sar insb rorl test pop cmp pop sbb dec mov ss arpl mov add sbb pop or xchg sub scas dec repnz std loop sti adc and jb out mov sbb mulb xor popf sub and rcrl and sahf mov add in pop pop dec out mov rolb xchg imul shrb sbb movsb inc mov jl sbb mov adc subb jbe pop add mov movsb sub lods test leave or cmpsb fistp sbb loop and cmp mov jbe sbb negb xchg dec pop cmp sub call pop add gs loop xor adc xchg aam orb aam pop xchg repz sub mov pusha or jbe insl cmp push test or pmaxub test mov ljmp test fimul outsb mov psrlw test jne adc mov ja adc cmp movsl in xor push jg push inc jno and xchg jns scas (bad) mov test pop sub xor lds test xor cmpsl push push je sub and les lret ret nop test fnstsw aad das pop jb pop pop sub (bad) pop cli nop push and push nop mov addl and insb lret push cmc lahf and dec test movsl ds jne cwtl xchg testb fbstp aad xor fcompl pop loope fldl mov pop pop jle dec sarl (bad) jecxz mov jg pop lcall push ja xor rcl push mov pusha dec mov push mov sbb aaa or push cmp push jl mov mov dec pop insb pushf rorb dec push data16 insb stos clc xchg (bad) cld sub cmp int jle repnz lods lock mov dec push jbe aas push cmp xor mov stos mov jo push pop adc (bad) fnop out push and idiv gs insl push sub sub or insb int3 dec cmp cmpb xor stc sbb sub nop or inc subb add mov add aaa lods dec push sar push mov jg call addr16 lods sub sub and in cmp in test jmp imull mov jbe not xor cld test jnp test sahf imul jo mov and and pop repnz repnz jne iret bound push shr sub mov hlt nop jbe jg push sbb dec xchg sbb es les jns mov push and mov out fildl mov test into jg xchg jecxz mov outsb mov pop mov scas jns jl mov int3 insb and repnz stc push push sbb gs xchg mov xlat jg out push jp fcomi jnp lds mov faddl jmp stos mov fcoml scas pop jl imul in andb mov push in jecxz mov popa cmp adc divb mov push (bad) loopne mov cwtl jnp flds rorl mov test je jns rorl xchg push pop mov push stos or add enter dec int3 iret lea enter inc es push sbb ss inc dec mov push rcrl and sti repnz adc pop and sub stos pop lcall inc sbb adc push nop repnz or sub jnp mov rcll cmp aad pop (bad) jno in lahf and and cmpsl ljmp icebp mov mov mov sbb sbb push roll mov pop gs pop andl fwait mov mov sti sbb test loopne adc mov mov ds je stc and arpl xor dec faddl pop lea cmp sbb (bad) cmp adcl or dec (bad) popa jg push sbb pop test out fiadd dec pop dec loop pop les and push dec idiv mov pushf enter sub (bad) das push call loope out sbb sbb std (bad) fiaddl sti or sbb inc push inc mov fisub out mov or sub out mov xor inc in rcrl aad lock sub cli inc push mov outsb inc lret push cwtl add negb pusha pop adc push xchg and (bad) and rcrl mov mov sbb stos xchg sbb mov add in push pop cwtl mov and xor mov repz lcall loopne daa cmp lods sbb daa xchg hlt in jge sub mov jge cmpl or xor jle addr16 jb sbb jmp push enter lret in jne dec mov jmp pop inc pop call pusha jne loope xlat loopne vmwrite ljmp je fldl and xchg add nop jge cmp addr16 fdivrl mov jo mov mov out inc sbb push jns jle mov jns stc adc iret inc gs jns loope pop xor fdivs jl jb cli pop pop fmulp jg mov stos and inc inc jbe push push pop cmpl sub gs daa pop push mov cltd int3 add ret in lret cmc push add pusha cmp pop jp ljmp adcl cltd jge (bad) sti inc push cwtl mov shrb test aas push pop adc shrl flds jl dec dec fidivl insl cmp xlat popf xchg clc andl jl neg movsl in cmp loopne shll cli out rorb cwtl clc icebp push or inc mov sub cmpsl adc adc lods mov inc adc jle imul sbb lret pop adc mov fstpt add shlb add mov cmp or push dec xchg in arpl (bad) sbb inc sub inc xchg (bad) or ss mov xlat xor jno (bad) lock xchg movsb pop cmp imul mov cmp das sbb pusha in or shlb jbe or shrl mov (bad) ror sbb or and ret ljmp lret push cld pop mov push inc jmp push fiaddl mov xor cmp decl daa or enter test xchg ja dec inc (bad) push adc sub test and mov add xchg enter (bad) jnp movsb popa add xor mov mov loopne lds (bad) mov pop ret test sbb dec out push incb adc fs fs inc jb hlt (bad) sub jo jne ficomp mov outsb aaa (bad) mov sbb aaa inc push hlt sahf out cmp push gs loopne push cmp xor imull push mov dec movsl and mov inc push adc push stos push je fadds jge call lahf and imul cmp int3 shrl ljmp or mov jmp fptan les adc js in xchg jae mov mov or (bad) or adc xchg in stos js pop cmp dec adc pop push fs inc mov (bad) ret cmp fcom mov shrl fmuls or mov jns (bad) popa jbe sbb push jecxz jae sar sbb cmpsl fnop add (bad) xchg (bad) sarl in add popf stos stc cmp jae push pop mov mov jns cmp lret jmp inc test mov out add rorl ljmp nop mov push ffreep fimul mov test mov mov fwait popf popa pop and jecxz ss jae lock mov pop in pop push test or (bad) mov outsl add (bad) and dec cmp mov dec and mov mov gs mov mov mov rorl fidiv jl es repz sbb subl sbb inc sbb mov divb fmuls shr fist ds and add mov push dec xchg pop add mov dec pop adc (bad) mov xchg int jnp add mov pop (bad) clc mov push (bad) mov inc cmp push int and cld adc clc jno fmull pop cmp arpl mov imul pop cmpsb or jo hlt adc adc arpl mov mov cli cmp popf jno loopne xor mov (bad) repnz push cmp pop lret dec out sbb or cmp aam jns mov jle mov mov js lahf pop stos add int xchg sti jge mov es and pushf std sub inc cmpsl xchg or aaa pop (bad) jp lds mov sbbl mov jmp out xchg sbb jns outsl add repnz inc cmpb sbb xchg mov push je das scas or daa ss (bad) mov xchg mov aad add cltd xchg mov pop mov cmp sbb fstpl xor insb sbb mov xor sub mov mulb leave divl lret jecxz or mov sbb sbb (bad) xchg scas pop lods sub or pop pop shlb imul add pop and movsl loopne add rcrl int pop mov xchg lds jno (bad) jmp jecxz inc jecxz xorl (bad) sbb (bad) cmp mov sahf mov mov outsl out cli lret sarb imul xor add aaa xor int jo xchg inc lret mov mov in scas sub popf lcall lret ud1 fnstenv xchg xchg js xchg sbb cs jp lds inc xor int3 fs mov push xchg fsubr adc sbb lcall aam js lock adc icebp outsl pop lea aas cli in add jns mov cmp and iret sub jbe loop loop addr16 sbb (bad) cld sbb xchg xor jbe mov adc mov push sbb les nop cmp rcll int3 jb xchg adc cmp je (bad) repz push leave xlat aam lret ficomp (bad) mov test mov (bad) sbb cmp ja pop pop imul ret or jo outsb xchg std sub nop sub cmpsb xor cmp dec xor jo lret pop decl add pop dec int cwtl rcrb push cmp (bad) pop mov cmp push sub bound leave push outsl pusha loopne ret mov jne (bad) divb icebp std repz pop movsl cmpsl dec ror jo popa fist mov je bound jbe sub sbb shlb les aaa lds stc xchg mov and add (bad) enter cli ror ss sahf lods lds (bad) das xchg inc in push rolb xor push pushf scas jmp aaa ret sbb insl and pusha sti sub das mov push dec push jns outsb push pop jb jle pusha lods inc popa sbb out stos test in cmp cmp ljmp mov pop xchg xor mov scas unpckhps adc aas mov out cmp arpl stos jecxz mov (bad) fisttp aad sub cwtl mov or sbb pop and addl jecxz lock insl lcall sub pushf dec mov pop jns ficom inc (bad) mov jne (bad) mov lahf push bswap leave arpl mov out dec loopne mov in xor movsb lret fldenv dec add mov fistl ret std mov repnz sub or aaa add hlt mov aad jo ret xor and int3 loop pop xchg cwtl cwtl addl pop xor mov shrb pop cmp jae inc test jbe call (bad) test xchg push std jne add xchg ret mov sbb pop adc sbb dec inc sub int3 mov or ljmp dec nop cmp add aam jnp jmp adcl push pop or mov push mov inc hlt inc mov jecxz rol lret dec cmp div pop push pop push jg jne cld mov pushf dec adc imul dec pop ja mov mov push rcl cli mov clc je popa adc imul push push lds call mov cltd cld adc outsb jg cmp imul stc popa (bad) out sbb xor mov sub loope mov adc test inc fsubrl jle out mov push shrl rcrb jl sub das loopne rclb std mov cmp mov add sub (bad) sti xchg mov mov (bad) (bad) jno mov push rorb mov adc lret nop imul (bad) shrb pop and pop jne hlt lods imul dec (bad) aaa and jg clc fmuls mov mov add stos xchg adc add adc and xor dec pop bound ret xchg jo leave (bad) push mov cmp int sub (bad) sub push mov cmp rcrl fisubl int3 cmp aaa mov imul push (bad) lcall dec push (bad) xchg mov std mov mov push mov stos int3 push mov mov cltd push outsl loope aad mov enter or incb out je sar push jge loop test ss pop jns sub mov jecxz out sbb cmp adc jecxz jns cmpsl inc idiv iret sbb sub insl es (bad) xor cmc sahf test enter imul es xor mov pop stos out shrb sbb jecxz pop sbb xchg arpl aaa loopne lcall fs adc gs ret cmc out xchg dec aad test dec arpl pop movsb fsts cld jmp into stc dec or pop lods test dec mov ljmp xchg test mov mov (bad) ss sub push jb sahf add sbb jbe repz push repnz inc pop mov xchg add adc loope jb fistpl cmp ljmp push fidivr mov mov out aad xchg add insb xchg jne sub jnp and mov add dec (bad) cmpsb sub sbb inc inc out insl (bad) dec mov add hlt jb inc (bad) sbb rcrl mov js and jns adc inc pop aaa xchg jns sub cmp cli adc mov addl xchg pop and dec push subl aas aad pop inc clc mov pop sti test inc pushf das rclb pop xchg addr16 xchg movsb cld les rclb out and xchg xchg add sbb je insl jge mov pop cs std push mov adc out xlat lret mov jmp scas and xchg ret adc cwtl cmpsb xor inc push jle movsb gs lcall inc mov mov fmull in xchg inc notl mov (bad) sbb push sbb arpl push or aad or dec fwait clts and (bad) aam test cli inc rep adc xchg stos cmpsl repz xor int3 sub lret je sub pop pop dec iret push pop lret lds ja test rorb push add cmpsb jle test rcr cmp pop lahf mov add ret dec stos pop loop scas test stos cmp xchg push icebp inc (bad) xor pop fildl push or pop push and xor cmp ret push cmc shlb sbbl ds aad push lret push push cmp sbb scas adc and xlat jge inc and pop sbb fwait test sbb jecxz adc lret jp cmp jge movsl mov into jbe movsb fs int3 push loope imul adc push mov sub adc out mov hlt (bad) xor push pop imul pop mov ret cmovo inc pushf sbb mov jbe in loop popa (bad) xor push xchg aas repz adc cmp sbb add nop arpl ljmp lds mov dec xchg mov scas mov shrl daa jns pop sbb bound outsb mov test scas out arpl cmpsl aas data16 sti sbb insl jp push push xchg daa popf mov cmp imulb adc or fadds movsb das in mov cmc inc pop imul lret jne cs shl jecxz push out and imul movsl jmp inc lods decb mov sahf insb sbb push cli std in into ss les sub lods std inc add enter and or ss xchg push xchg and adc cwtl sub icebp dec jno idivl lds lcall insb pop fs jl inc je mov xor clc inc sbb arpl iret in xchg stos sti in cld daa (bad) dec jne xor sub or pop das insl inc or jne sti iret ret or and cmp xor leave add test nop or js xchg stos sub mov sub jecxz cld xor int3 insl push nop mov mov cli stc jmp cmp xchg dec xor jmp dec jle test sub stos aaa das inc loopne jne lds sub xchg xchg push push popf push push mov scas cmp adc sub inc in lods pushf or stos mov leave int3 movlps ljmp cmp adc jmp sbb adc movsl inc or stos cmpsb lret aaa mov pop xor and jno fidivl mov xchg push mov jecxz mov mov xor test pop fstl ret lea mov movb je jmp adc add push adc es popa test jle sbb rcr sub nop dec mov jb retw aad mov arpl cs adc addr16 pop mov dec push inc mov fwait notl push add jno (bad) cli imul jecxz cmp cmpsb or push dec add outsl dec cmp xor call jb mov pop jo xchg aaa sbb arpl or xor dec insb popa (bad) fldcw cmpsl fimul negl stos jno inc vcvtps2dq mov ja adc or fwait aaa jns ficompl mov popl pushf or and call xor xchg cs out aaa xchg bnd std aas xchg (bad) jl data16 dec push jge aaa inc cli test pop frstor cmovae cmp into rolb test sbb sti cs int test xlat sub pop pop icebp sub insb inc stos cltd cmp mov pop jbe sbb mov insl scas scas imul and cmp dec mov into pop mov add sbb stos outsl icebp aas jmp inc add push or in sub cmp sti sub popa jecxz or add loop sbb pop sti sub lcall cs je fsubr call mov popa adc sub pop fstpt push push sub dec or popf jecxz ljmp dec inc shl pushf mov outsb mov js test cmpsl fmul sub sub mov xor int3 mov dec xchg les mov in sub mov aad push dec adc sbb jo in js mov cmp popa pop dec dec sub jmp daa sbb inc std add outsb xchg mov push aam cld clc xor mov aas lret and in sti clc pop mov fistp daa xor shrb jns adc vpmacssdql sub or cli addr16 jnp or push inc sbb cmp mov int3 mov (bad) in mov dec sub icebp sarl inc inc dec or ja inc outsl dec rorb jl jecxz xchg nop or insl push jge sbb pusha cli clc mov les subl (bad) test movl xchg mov inc sahf xchg mov in or dec scas cmpsb xor inc test fsts pop in insb mov sbb arpl xlat outsb cmp test mov jne and xchg push push sahf mov insl push mov (bad) hlt jae stos clc adc insb pop jo int inc sbb dec rclb stos mov andl xor iret shll ja in adc jge flds cmp sub lret pop hlt (bad) xchg in sbb movsb cmc sub lock test adc xchg pop sbb sahf mov pop or lds mov or std insb outsl arpl lods inc mov jl jecxz push fnstsw pop xor fcoml ret decl pop jnp dec (bad) cmp mov inc inc and or lock cmp and xchg mov jmp xor jb xchg imul scas andl cmp xor pop fstl shll (bad) out (bad) int sti fbstp inc add (bad) shl pop (bad) push jecxz pop imul les (bad) repnz fld repz adc cmpsb arpl and sub sbb jl arpl fdivs fldl xor mov xchg pop push inc push lods jo xchg cmp push jno (bad) (bad) stc or leave scas sub js fcompl icebp xor aad pusha (bad) mov mov jl out and scas mov shrl pushf or adc mov dec cmpl mov ljmp in or pop fwait iret sub jae dec (bad) aaa and inc movsl sbb das arpl dec cmc adc push out popa xor xchg push fnstsw sub sbbl mov (bad) cmp (bad) nop pop pop dec test push and add mov aas adc test imul push outsl movsb aaa inc xchg and pop xor jmp int icebp sub icebp pop loopne add mov cmc adc insl sbb jne mov mov dec into scas mov mov push push mov and aas push xor out imul cmp bound and push int3 mov mov test pop in lret add xchg insl jge adc in mov lods sbb add mov sbb sub (bad) and sbb push imul dec sub mov sbb fwait mov or jg sub stc test jg repz lods pushf mov aad stc dec out lds sub mov jge cltd (bad) cmp repz cmp js push mov icebp mov sbb lods sub jmp sub fistp xchg in mov ds cmp xchg ffree inc shl adc add fwait nop jp sahf jle pop jle std les xchg jae in (bad) push cwtl movsb pusha add jns call xor mov jno xor rorb mov idivb movsl dec fdivl test xor xchg stos push and inc imul out sbb vmovaps (bad) repz inc int3 cld cwtl push xor inc add xchg or call mov inc lock (bad) mov repnz lock mov push sub je pop (bad) add and mov pop imulb cwtl je leave mov (bad) je addr16 lret stc mov mov stos pop pop imul dec incl mov mov push pop dec mov in fnstcw (bad) fnsave xor js cwtl cmp hlt mov ret push inc mov sarb (bad) flds xchg pop mov mov aad dec mov sub or int3 push lods xchg jns iret std sbb or gs into jmp add loop movsl movsb xchg and jno sub lds out add mov ds cwtl push pop test rcrb testb xchg pop add jbe mov add in cmp into xchg jecxz aam mov pop mov lock pop add push sub (bad) aad push dec jb sbb scas cwtl add jg loopne xlat jle mov push mov aaa fistpll aas xor add outsb and test test popf fldcw andb xchg ds or dec adc push add cli xlat in fadd repnz push pop push sub sti push xchg js fidiv fsts fsub clc lods push xlat and iret stc push sbb mov (bad) dec insl insl sub out pushf mov clc cmp jb sub hlt fsub outsl or or sbb add test movsb mov jg jb stos loop jl lods fsubp and cld int3 in cmpsl push pop es push jmp pop fistp scas or ja sbb inc dec test jle cmp add cmp jno fistpl aas dec push push lds ret mov js sub fsts lods cmc dec psubusb adc (bad) repz xor enter mov sbb mov lret outsl je pop (bad) push (bad) dec jno icebp dec pop or jge psrad ss push mov sub out pop fisub aam or ficomp test sbb insl imul push insl or mov pop cwtl loope sbb enter mov add andl lret (bad) bnd sti fdivr cmp or add sub pop mov (bad) mov xor mov jns out mov sbb cmpsl mov clc fincstp arpl mov cltd xlat rolb fstpt add jb fs pushf nop mov fcmove pushf jnp push dec lret insl outsb pop clc inc lret dec xor push or inc sub bound in loop mov lock pop mov lds out lock and pop enter rol xchg or pop sti bound xor enter faddp lahf mov cmp or sar mov adcl xor dec outsl es (bad) stc in out ja and jno push test outsb sbb std dec add xor jp ljmp xchg cmpsb call inc dec lret sbb push arpl and sbb outsb mov mov (bad) int3 in aas adc fdivrl push cmpsl (bad) inc mov cmp aaa jmp scas popf sub sahf dec push insb jp xchg push or into sub xchg in out stos xchg inc mov jns ficom leave sar scas add testl mov lret sub cli inc ss aam jl js sub mov out mov fwait xor (bad) push jne jo push or out adc popa dec cmp shrl leave out insb jle mov mov pop mov stc adc test push andl outsb aad xor ds bound movsl inc mov in lock xchg adc adc adc cmp mov jno out xor cs call lods pop xor stos push push nop stc test cld inc pop add jbe lods ds inc xchg push and and sub sahf or cmp mov mov push je fbstp popa call mov dec xlat stos cmpsb idivb jno clc dec xor aaa into cs cmp jo adc sbb adc push mov out out leave popa xlat pop or mov arpl lret jp (bad) jns push xchg data16 cmp negb pop cmp add aad sub pop test ficompl repz sbbl mov sbb pop hlt adc push xor mov push rcrb jecxz nop lahf cmc pop icebp mov jns mov jns mov (bad) out jmp pop xchg in incl pop xchg and jo out mov adc jp pop pop mov sti dec outsl rcrl jnp mov and pop mov push fist push es cli and cmp test inc push mov xor push push (bad) add push cli dec push xchg hlt aas arpl daa stos das mov xchg push js roll jo inc add jne adc sbb or mov sbb notl scas xor pop ss lods (bad) pop inc dec xchg add xchg addr16 sbb or pusha rol jl push push add mov xchg xchg leave xchg icebp pop dec bound mov jp push sub les or sbb pop sbb incl push (bad) (bad) shr (bad) cmp movsb pop daa ds jb push int3 pop push ret lret mov sub insb inc sub pop add sub clc outsb inc sbb mov jecxz jg jp mov xchg lea cli stos fcompl cltd jno mov mov sarb in fistpll mov popa aad jnp insl mov cwtl clc add push cmp mov fcoms repnz mov int xorb fisttpl adc mov mov lock ret inc mov sub shr pop insb pop xor xor stc cmc imul push outsb rcrl adc push mov dec pop xor es sbb jae loopne adc fcomp inc (bad) (bad) cmpsb loope cmpsb sarl hlt cmp xlat and jmp xchg ret mov or test rorl and inc cmp mov xchg ds jle adc push cmp lods mov es cmp xor xor stos mov mov sar sbb dec inc fcompl mov in subl clc or mov stc pop scas into add movsb dec clc je fisubrl nop push mov fnop mov sbb adc push adc mov data16 sbb adc loope mov xchg scas and or and lods xchg add jp pop arpl fs jle inc daa (bad) icebp repnz fwait mov (bad) pop out push and lods ret lahf (bad) out sub movsb mov and xor (bad) popf fcmovbe push adc mov xor inc outsl std movsl (bad) push sub les and bound sbb adc add popf leave hlt inc call out repz lock jb mov cmp or or fcomps or or or xchg lods flds ds and lret out mov sub push pop pop or insb push dec xchg mov lods mov inc xchg pop frstor push add mov push repz cld jg and cmp rcll jo loope std jmp ret mov stos (bad) push add and movb pop lret push jne sbb add fisubrl xlat add jns jne,pn jecxz add xchg or xchg mov arpl int mov outsb out push pushf push test hlt add loope mov test sub outsl inc mov je jns shrl (bad) xor mov or ret icebp cmp mov sahf push sub into cmp xchg push add fsubp pop frstor inc test in in inc ret (bad) mov or sub popa cmp pop insl push fildl mov mov push jnp jns aas iret leave in mov imul mov out clc orl insl fistl les xchg outsb push mov and std pop and fdivr cvtps2pi clc push sbb sarl cmp push mov aas divl arpl jne mov in mov fldenv pop stos movsl mov pop mov lret insl dec cmc imul or xchg mov bound insb test insb leave cltd xlat add push stc xchg mov jbe andl cmpsl xchg sub push hlt inc aaa pop aad daa add imul sub pop xorl clc xchg xlat int3 out dec dec mov icebp cmp jns andl sub jne dec inc dec fs fstl gs dec js rorb ss aas outsb scas inc mov jmp cmp js ds ss out iret push cmpsb loope int3 xlat mov or movsl jb add insl sub adc or cmpsl out fstl aas adc push es mov aas stos aaa push sbbb adc and push psubw cmp (bad) stos mov daa test dec sub imul mov push sub mov adc in popf xor imul lds inc inc in aaa in sub (bad) in mov cltd das cltd cmp add jge sbb fisubr and nop stos mov or cmp imul jecxz jno out fcoms fistl lret int3 out lock popa aad mov into xchg call lret push add lret stc mov int3 sub push xor mov sub adc dec out into in int3 mov xchg pop fmul ss rcrb xrelease repz push add add pushf jne or in xor adc sbb and je fcomip mov cli mov and push lock sub ja xor cs rorb test pop into sbb in dec imulb popf push sub mov xor aas lock mov push sbb ret mov mov outsl dec mov adc addl or push add in cs addr16 (bad) pop pop movsb xchg cli mov cmpsb scas add sbb ljmp mov in data16 lea fstps cli mov in mov test xor adc push stos iret xor cmp dec push inc or repz repz push jno or cld loope rorl and fcomps loop cltd inc sub rorl mov cmc cmp sbb sti mov sbb arpl mov aam insl xchg ds int (bad) mov cmpsl je (bad) ljmp clc pop push fs es pop or push decb in leave add outsl out jne subl jle cmc jge ja scas adc stc and xor pop xchg mov vmread inc inc lahf adc rcrl je mov aad std mov push jge hlt fsubrs lret and cmp or sub icebp shrb pusha mov jno push sub fmuls mov out aas outsb popf dec cmp mov mov gs fldcw sbb lods mov dec sub and mov cli dec mov fstl push dec pop xor in push icebp dec mov and jno js add mov cmp mov loop in sub in pop stos sarb test xchg push sahf repz jle mov mov out and sbb xchg addr16 push mov sub mov scas mov imul dec inc jb dec mov neg data16 (bad) out jle enter add xchg mov bound jle jmp dec add adc mov dec xor push sbb pushf cmc sbb mov mov subl (bad) mov mov xchg jmp jl xchg fiaddl xor xchg xchg adc ret orl inc push repz cwtl jbe cltd popf int inc and aas jne clc inc into loop fistp push or ja data16 lcall mov imul ret xchg mov mov iret add mov loopne test ss (bad) adc push out outsl (bad) aaa adc pop (bad) lea sub insb mov lds fs jmp sahf push xchg arpl cmc rorl bound test shll add call fwait arpl orl inc mov push xchg mov cmpsb divb (bad) fisubr loop and xchg adc gs push add sahf mov push mov cmpl lock push scas in lods adc std cmp pusha psubq aam sub js pop push sub cli xor clc sbb xchg add ror movb cmp lds idiv xor subb fwait dec (bad) sub sub fnsave ror scas mov xchg arpl pop xchg pop pusha xchg pop fs adc xor jo movsl cmp idiv sub inc std jl xlat and mov jne mov bound pushf imulb dec ja pop dec mov inc in cwtl dec cmpsl jg out xor cmpsb dec std mov ret add lds push ds lds push rolb stc mov repnz add std xchg in cmp adc fild push shrb sarb and push sbb arpl sub mov sub bound or pusha fiadd mov cmp sub lcall into mov bound dec scas rcll fisubl mov push mov inc (bad) jno in push mov sbb mov cld inc add cld sahf xchg in mov ljmp push cli outsb inc cld mov es or out xor into mov fisubr xchg pop inc aaa add into jne push push mov and jns aaa cmpsl jmp xor insb aaa hlt and push mov or adc cltd in pop mov lock xchg mov xchg loopne cmp xor nop insl loop (bad) pop stos push mov cmpsb iret aam or jmp incb idivb adc inc lret std push nop push ja mov xor add aas test push (bad) mov or mov arpl (bad) arpl rorb aaa pop xchg inc dec push jns ret icebp adc int scas subl add inc subl pop add add js fstl ljmp cmpsl das mov nop lds cmovge mov aad adc (bad) mov fbld dec daa lcall out dec and inc xchg push add mov inc icebp lret mov jo dec mov push xor sbb out lods sbb xchg or sbb jmp ret jecxz decb out inc loope xchg leave pop xchg push push ret dec popf mov or icebp imul mov mov fsubrl xchg iret jecxz loop push in sahf or or ficom mov add jecxz sub cmp test sbb xchg daa int3 inc lret adc outsb add pop and dec addr16 xchg sbb fistpll daa adc js jecxz ret jg dec out mov insl mov dec mov sbb fiadd ds sbb pushf xchg sub jb loop xchg mov movsl xor out dec push and mov fcoml and mov loope iret jp adc and ss int3 jo ljmp pop cmpsl pop xchg shll sar or xchg jo lea fsubrs adc mov das pop in sub pop mov addr16 (bad) lods xchg ljmp xlat js xchg das lahf in mov mov (bad) std xlat nop lahf mov xchg jae mov jns xchg aaa push dec or out pop push sub jne adc (bad) adc dec push in repnz add or mov pop jl (bad) or in test or in inc xor pushf (bad) int3 mov xor lcall adc xor std sub mov int3 mov inc in or out sub push mov mov and loope cmc pop and cmpsb mov mov xchg sbb mov xchg jbe aam mov lods ficompl add dec cld add aad loop shrl aas pop loope inc push aaa xchg push cmp mov ret mov jbe lret cltd repnz jmp jge loop xor out xchg xor sub cmp adcl mov in push lods pushf negl sti push adc stos jo mov and adc push dec fist out push mov adc pop mov add xchg jnp test in xor inc fdivl lret icebp arpl mov in mov mov inc ffreep add test or ja xchg xchg arpl std (bad) xchg shrl fcomp mov mov push xor fildll loopne jle cs out iret sub repnz jmp dec (bad) stc cltd add gs jle pop or inc mov stc sub inc out test out and dec adc dec subb pop (bad) (bad) scas mov cmc cmpsl in imul int3 (bad) pusha ret add mov mov lock push dec pop pop mov jne stos adc push data16 xchg or sbb mov push (bad) xchg jmp fdivrl sbb cmp adc adc (bad) push mov outsb loope addr16 ja stos push and lods mov jmp mov xor (bad) mov xchg adc out sbb xchg push sbb test adc jne xchg int scas test inc xor push xchg or dec repnz and test mov mov shrl dec (bad) cli add movsb mov test cmp mov pop mov sti pop xor mov or xchg cmpl mov std int3 jl sub psubsw pusha loop adc aad dec insb dec xchg jb fnstcw ja cs int3 sbb or arpl pop cmp add cmpsl test int jne push lret sarb out mov mov fidivr aaa pop fcomi sub pop insl (bad) and scas inc sbb mov jne cwtl sbb jbe add sub (bad) repz push and subb pusha sbb ss (bad) dec lods into in add into stos xor sub inc je mov xchg ljmp out xchg inc call pushf fimull cmc stos and push add add int mov jecxz addr16 mov push loopne call outsb mov mov add jno ffreep popf int3 lods adc or inc fisttpl lods cmpsb xor or mov jbe out gs push lahf mov or mov jp cmpsl jo std sbb mov add push pop mov fnsave jl (bad) int (bad) es and xor (bad) mov lds cmp dec or add sarl into inc add sbb fstl lret (bad) push in cmp push mov push mov (bad) scas xchg and in lock mov and (bad) call mov sbb notl mov jb sti pop push push loop xor out mov iret rclb xchg popf into icebp arpl push jle outsl push movsb in cld cmc mov inc adc ljmp cltd sub push dec divb (bad) jae xor jg lods fiaddl cmpsl dec jne xchg aaa into adc mov out mov movsl adc test mov notl mov dec lret fisttp (bad) fs out mov (bad) popf imul shrl inc push dec fsubs dec mov add dec mov push out and sarl dec sbb (bad) ja pop insb push inc jno fwait jbe dec adc mov imul (bad) push or cs (bad) icebp clc outsl or mulb mov (bad) pop dec push das push jmp push sub jno sbb stos (bad) in test sbb aas ss adc jmp jp xchg pop adc mov jle cmp pop push sbb add mov test test mov or xchg outsb cmp mov jmp popa insb les mov nop scas bound pop hlt jno lret pop jns push scas lods adc loope test pop xor inc bound mov cmpsb shrl jmp jb call inc outsb in mov jmp icebp sub stos and xchg and pop out movsl xchg jb and or adc stc decl and adc and xor mov sub cmp mov push movsl shrl jb mov inc cltd mov testb pop pop add mov insb push in push xorl cltd push xor pusha xor int xlat pop push xor hlt clc out and cmp andb or loopne (bad) mov movsl mov dec mov push add int3 push mov or sub cltd push cmp mov add test movsb repz out add test fidivr lods fisttp mov rsqrtps push sub aam jl in inc mov pop jmp movsl andb mov jnp incb in pop pop xor mov es psubusb pop cmpsb cmp jns jno fcomps push mov lock push xlat aaa test (bad) pop hlt xchg in loope ss mov push mov out pop clc lret mov fdivs aam outsb outsb mov jns pop pop leave loope daa push repz iret rol sbb mov or sahf cmp push lret cmc fs insl jge div xor mulb pop scas jb sub jp enter stos jb xchg shlb jae les ds in stos mov popf xchg (bad) ja mov out xlat sub mov cld dec shl (bad) mov push insb outsl mov pop xchg cmc insl movsb aad dec test jno iret test mov push aad dec xchg sbb push das ljmp arpl adc loop pop pop xchg repz jmp jo stos arpl xor icebp iret jo insl call (bad) jbe cmpsb mov jge aam xchg in cmpsl in ss xor xor ljmp pusha mov adc in push adc int aam add mov inc pop inc push ret xchg movsl and mull lahf push lea lret imul dec xchg and das mov inc aaa in pop inc pop push popa cwtl mov inc pop mov and pop loop mov cmp mov push pop aad (bad) sahf dec fldt and mov outsl push das inc xlat in gs add pop adc xor fcmovbe mov mov or call loop mov dec push xor pop lahf pop cltd jecxz out cmp xlat push ret popf fcomps mov pop repnz into and mov cli inc xchg dec add cmc aaa rcll faddp cmp lock cmc ljmp xorl mov dec das xor fwait out push pop lret les sbb into adc or stos inc push sahf add xchg repnz xor dec inc jbe xor clc add add xchg pop test mov pop rclb add pop out testl mov adc push dec in xlat sbb xor mov in mov mov mov dec iret iret and jl mov mov cli rcrb movsb pop pop jl inc movsl sbb scas mov pop mov mov mov popa pop cmpsl (bad) push jb iret inc ror lcall ficomp leave adc xchg jb orl xlat adc lock movsl pop daa ret dec std pop cli test mov es repz rcr cmp dec nopl and xchg out sti jmp jns call gs outsl xchg je dec popf lahf cltd divl inc shr sbb xorl shlb xchg out sbb cmp ljmp loope shlb (bad) mov fdivrl cmpsb jl mov sarb imul or mov int jge test movb sti js nop repnz lret push pusha cwtl pop cwtl sub movsb mov add ret mov pop xchg jo jnp aam cmp jg mov and mov movsb mov out add sbb imul stos cmp outsb push xor lret cmp movsb loope sbb rol mov push ja xchg pop pop (bad) cmp sub mov sbb cmp add cltd cmp shrw daa (bad) lahf mov sbb leave std pop add or imul or jge sub cmp dec pop inc jb push mov clc test (bad) jno out inc mull ret outsl scas ss stos jmp mov divb jne dec cmp (bad) xchg sbb jb les jg (bad) sti and push cmpsb loopnew inc not sub mov outsb shrl (bad) cmpsb pop mov inc sbb jae test cltd les mov xchg aaa mov adc aam (bad) aad lcall sbb xchg add mov lods scas insl dec outsl mulb (bad) mov mov mov lahf push cli sbb out clc cs stos cmc (bad) mov cltd dec adc push pop pop hlt ret sbb movsl leave mov push shlb mov mov mov mov xchg ror in and test jnp or test cmp mov sbb cs sbb shrb insb and push xor (bad) nop adc loope adc jmp inc cltd mov mov dec pusha jecxz push sbb (bad) cmc xlat call jae push out pop fsub pop mov sbb sahf aas ljmp mov and popa pop cmp pusha jbe push xchg fcmove (bad) out mov adc rorl fidivr mov mov jbe mov arpl loop xchg clc test stos add ja mov cmpsl dec nop pop stos loop rorl sub or int3 movsb or (bad) es xor mov adc std push pop outsl es stc pop movsl sahf lds out add addr16 outsl ffreep add inc jbe dec mov enter repnz fidivr jmp js cli sbb inc jp pop xlat (bad) xor rcrl push mov int mov and aas (bad) add stc rcl push inc test pop and mov shll jecxz fwait movsb or xchg out mov jp add xor popa addb jge (bad) aad into lea add and jl inc push sub mov push loop xorb movsb cmp or push mov sub pop push ret cs out fwait add sub cmp sub into (bad) jge movsb ja dec lahf sarb or pusha and mov or fiaddl mov cmpsl cmp cmp aas mov add clc das dec fistpl pop ficoml dec inc flds pop and jl wbinvd xchg add xor pop inc pushf dec outsb aam in add jp xor xchg sbb pushf push cld sbb push push arpl cmp cmc ljmp inc lea fnstsw or or inc in mov jae arpl jge inc aas ror and mov aaa negb sahf pusha adc cmp mov cwtl inc scas push cld push xchg mov cmpsb sub and daa fisttpll int clc mov rolb movsl outsl sbb cmp mov pop add jmp clc loop inc push stos outsb jle jl aas pop arpl dec jne addr16 (bad) cmc cmp sub and leave mov jge shl pop push push cmc jp push mov aaa data16 inc lds leave das dec out les adc pop inc push fwait decl push sub cltd xor inc pop push and mov bound pop pop pop (bad) or stc sbb dec mov hlt pop jle ret pop shrb dec repnz pushf pop xlat mov out jl mov mov lock rcrl push insb int3 out test scas jge mov aaa mov cmpsb or push cmp ds std (bad) aaa jne insl push hlt roll lea cs outsb pop popa pushf lock cmpsb mov add mov aam in pxor mov push cmp (bad) arpl xchg and scas or insb inc cwtl movsb in pop dec adc sub xchg adc xchg stos fldcw into mov mov xor sub add pop jle jae xor xchg ret fcmovnu gs inc daa push lret nop sbb fdivr (bad) fcoms lods sbb and push and jo inc dec cld (bad) mov jg lds in xor lea je dec in xchg (bad) jecxz cmp sbb mov inc jno push and (bad) jo decb jg xlat dec inc mov inc xor mov pop (bad) stos hlt (bad) xor sub xchg js and jmp xor lods (bad) push lock in cmpsb fcompl ret xor into lret dec jecxz jnp xchg cmp cli cli mov mov mov xchg xor xor insl clc stos (bad) divl iret ljmp les les daa lea int arpl gs sbb pop sub xchg dec into cmc lds jmp pop mov add rcrb and stos jae roll cwtl xor cs in pop repnz cmp mov insl notb push (bad) push push mov jmp or inc mov pop jecxz int3 sbb sbb fsts mov (bad) ljmp push cmp jne out in ret inc pop xorl (bad) sbb movsb jp add fwait jmp mov inc sub sahf jae mov roll pop es xchg jmp sub call sub into and and mov push xor sub lods popf xor js mov mov xlat out xchg and les add dec mov clc xchg push add mov xor and imul sbb adc aam jge ljmp and jne mov aam stos xor in push or outsl fisttp sbb out mov cmpsl clc out mov inc xor mov sar lds outsb sbbl sbb push xor fcompl mov adc addr16 or je aaa xchg adc popf andl xchg fcomps or (bad) cmpsb fwait mull mov fild sbb push lods inc scas pop pop or jl sub xlat sbb mov lock test out pmulhw add ret mov adc test and pop rcll mov in dec outsl dec add sahf cmpsl inc imul dec orb test jnp dec lcall lea mov std fistp ret push inc test aas iret jl ja loope push sub jmp dec fsts inc mov or xchg xchg sbb jecxz (bad) sub pop sbb fwait aad sub sub (bad) aam and out xor mov or sbb pop ds enter push cmpsl jae push dec (bad) loopne test jp xor lods loop pop test or mov xchg fmuls inc test pop les idiv in (bad) fsubrl xor aam in in pop int out cmp (bad) fisubl rcl mov into add inc out insl pop mov fistl ljmp cmc fldt jge xor popa dec and ret sub outsl ret cmp stos adc popa sbb mov inc lods ret in imul (bad) lock mov jle push addr16 popa sbb mov mov inc sub mov cs enter sbb arpl rcrb or negb shlb sub mov push mov sbb sub fisttp fstps arpl mov dec inc aad sub imul (bad) hlt push ss repz push rcll (bad) mov loope push loop lahf movsl fwait stos xlat cwtl fcompl or push adcl push dec xor call jb test dec ds es adc cmpsl repnz xchg inc cmp push mov scas or xor pop arpl pop fld movsl icebp mov mov (bad) sti sub out push lahf push mov (bad) in cltd mov out jnp lock das cmp idivb and js jno pop test in aas jbe push (bad) aaa mov fdivl cli repz scas inc jmp (bad) dec dec xor movsb ja cmpsl (bad) pop jmp test (bad) sub sti mov psllq mov int test push add inc (bad) pop push dec sbb pop inc jno push cwtl mov jp iret clc (bad) aad sbb stos aad mov and inc imul fisubr fwait icebp or and shrl mov add fidiv inc jl loope mov jns orb rcrl scas push aad sbb scas mov add mov xor pinsrw dec loopne out inc mov and clc mov ja xchg cmp fimul jl fiadd xor (bad) and add repz mov js or (bad) inc dec jo hlt scas (bad) fwait mov add jnp dec xchg cld or (bad) or cmp js dec pushl jae mov jae inc sub into inc icebp ljmp fimul jae scas insl push jecxz pop insb adc jecxz out mov js inc jne stos rol lock nop dec sbb lret push push add lds lahf jae jecxz mov jp fwait jno jne imul pop ret leave pop mov sub std jge aaa adc xchg mov mov fsubrs andb daa std adc in push out push dec test cmp dec and js into mov jnp sahf adc (bad) lret mov jg inc enter push addl jmp out movsl shrl aas lods imul adc push pop lods adc outsl sub call call jo sti hlt inc (bad) stc (bad) dec xor cmp pop or in fistpl and sahf and and cltd mov sarl pop pop inc dec std mov push (bad) mov rorb repz push mov bound mov in cld xchg and pop les add jno jge adc aad push jmp divl in out sarb roll xor mov mov mov fucomi xchg js push push lds mov into xchg sti mov lahf frstpm(287 lret adc leave cmp sub jb mov push xor push popa pop stos xor mov sub (bad) paddusb bound jbe add insb xor lock sbbb pop mov dec cmpsl dec jl cs int3 jo mov enter das insl lcall lret in aaa scas mov pop push push aas push test mov xchg pop jo xchg in xchg or xlat push inc pop cld add or push dec sbb (bad) mov cmp add mov xor (bad) ja mov adc jno add arpl mov jle dec inc jl jmp (bad) xor jl gs clc xchg jl or test iret dec push mov movsb hlt mov mov lahf and pop dec jo sarl outsl inc out (bad) in cmp mov and adc daa xchg loope fwait mov fstpt dec mov xchg hlt das insl mov call test jb gs sbb inc cltd es imul lret or fdivp pusha jle repnz ret rcrb scas push or sbb mov dec (bad) xor inc mov bound and dec push push pop out dec int3 mov jmp out adc xchg ffree adc clc mov sbb cmp cmp jecxz test or adc call insb adc jmp loope fildll and sub imul fstl inc adc jp sub sub in gs mov sub inc pop imul imul repnz push lcall outsb loopne call roll mov pop mov fisttpl lds jecxz mov mov js (bad) mov lret jmp inc or ljmp into stos aaa or xlat jne inc gs lcall rol sbb loop add lret imul iret mov push ss loopne lcall sbb sti pop sbb cwtl pusha call inc push mov movsl lret and andb push push loopne test in movsb mov stos inc cmp mov pop es add sub ret pop xorl lods xor dec sbb mov lret mov adc jb out fildll shlb cli dec cwtl dec ret repz jl ficom mov iret pop out insl dec mov stos or out and in data16 fnsave and test fistl shr mov or movsl out jge pop mov test mov push in shll out (bad) out jecxz dec loope xor jecxz push lods dec test outsl repnz rolb (bad) dec call jnp and inc add mov je cmp lods or out fisub and arpl lret xchg jge sub pop sahf add lds mov popf cli mov push xchg sub (bad) cs lods dec mov push pop test (bad) aaa sub fmuls mov push xchg dec arpl adc dec lds popa and lcall lock cmp int3 push sti movsl das int3 (bad) lcall xchg bound cmp ret sbb jbe (bad) test push mov xchg enter out das xchg push aad in imul pushf mov lahf addr16 or cwtl mov out sbbl add push inc mov or out enter mov test hlt cli shlb xlat test adc int3 leave out jb daa call mov das cmp mov mov adc out pop in popf adc sub adc mov cmp out sub lret sbb dec test test pop js push and push ljmp scas pop mov es push lret out (bad) lahf fnstenv sbb lds insb jl lret mov ret cli and adc loope js xchg dec or push notl pop popl add inc mov inc aas (bad) in dec push jno jl push ljmp jb cltd popf je call pusha sbb and or cli mov jg dec pop clc and in jnp cs dec arpl stos mov push xor pop adc jnp nop mov lcall aam mov and (bad) fidivrl movq cmp lock inc arpl jge popf and pushf and cmp mov stos aas test js mov xor ljmp fcmovnb rclb cmc daa pop dec ffree bound mov cmp cmp clc jle and in ja rcr add gs lods xor out and into push sub test jo mov jnp pushl mov push dec sub out fucompp sbb fcmovne pop sub mov adc xchg ss pop repnz insb fs pop lds adc xchg mov aad cwtl adc movsb push repnz mov out mov xchg into out bound rorb mov push or cltd mov cmc test and enterw sub pop dec xchg add cmp sahf inc sub inc adc ljmp or cltd pop jmp pusha adc (bad) jl fcoms fisttpl add pop rolb mov jecxz push insb xchg add mov push pushf xchg mov jns test adc cmp bound sbb or or stos cmp pop mov sti jae mov xchg add bound add test and call stos test pop (bad) jle push or pop outsb aas scas call call adc pop sbb inc js xchg mov inc lret test jb sbb imul inc adc mov inc loope push mov enter xchg cld push xchg and stos pop lcall mov out pop sub inc dec adc in mov push sbb cmpsl dec pusha rol outsb cmova inc cmp jb inc rolb cmpl xchg inc dec sahf inc cs (bad) icebp mov adc or sub add movsb negl jo lcall pop mov call aaa and in inc popf pop rolb icebp push mov cmpb push lret push (bad) and cmpsl inc jg mov inc xor shr push mov mov adc movsb in pop pop jp out cmpsl pop je cmp in xchg inc stos sbb ror in pop sub mov mov mov fs (bad) mov jmp adc scas aad inc mov clc imul outsl pop and jb in fdivl mov mov adc adc jg cmpl cmp into test jmp ds cmp adc shlb push xchg sub aaa sarb imul cmp xchg int sti pop in xor js sbb pushf mov adc les or les push dec jg mov in loop push inc mov fistl inc (bad) sti mov cmp add mov flds aam add sbb pushf out jo adc pop xchg jle pop xor push mov mov mov dec cwtl mov fucomp push das out xchg jmp xor pop cld inc loopne dec xor cltd loopne dec data16 inc mov xchg mov or (bad) or pop lock ds pop mov lods icebp lahf outsl and (bad) aam inc sbb cltd call ror mov rcrl add pusha mov (bad) cmpsl mov stc adc jo adc hlt lea xchg cmp push mov rcl and lcall scas gs ret loopne and mov mov mov lret dec sub imul pop ret call daa ret mov mov jmp add push imul or push push sti movsl cmp aas xchg je jmp xor mov ja jne mov xchg and (bad) lods adc icebp jecxz add jns inc mov xor push mov (bad) jno mov cwtl rclb bswap aad jae dec sahf dec xchg mov cwtl (bad) mov sbb inc inc or icebp sub fimull test mov (bad) xchg rorl stos inc mov adc mov xchg jp mov decb inc out gs cmpsb dec dec xchg sub cmp test invd (bad) jne cmp cli xchg push test pop in cmp es fdivl sti mov js jnp add push stc imul push xchg inc push bound rorl (bad) cld aas push test xor push sub ret pop push (bad) mov das jp xorl xor btc cmc xchg pop mov (bad) loope add mov or dec lcall jne mov jmp jge (bad) cmp inc sti cmp dec insb bound cwtl sbb out cmpl cwtl inc sub fdivrl mov and dec dec gs pop and mov xchg dec push pushf es lock xor cltd sbb scas scas inc daa (bad) jno xor int3 aad pop testb imul orl loopne icebp int3 mov jmp icebp or insl sub sub dec push mov fiadd lods xchg aaa mov aad jmp cmc aad sbb pop mov nop stos shr (bad) xchg (bad) sub add jno in push stc insl sub pop xchg xor sbb xchg jl pop movsb lds int lods jle andl sbb loopne insb addr16 fisubrl jnp mov scas mov push lahf jnp mov xchg fnstenv push enter test subb adc or cmp rorl mov sbb test fisubl mov jnp xor push call pop lds out rolb and mov (bad) mov mov sbb rclb imul push jp in in nop outsb push add inc fwait (bad) or mov mov fwait ja jne adc mov scas and stos test dec (bad) xchg test fs lahf sbb outsl ret stc (bad) mov and ror popa arpl xchg jg test inc cld out jg cmp cltd imul jae xchg push inc mov mov (bad) int3 jae xlat push and sahf int jmp stos inc outsl jp (bad) mov mov popf leave jae cmc les (bad) pop mov push lods push add push aaa pop sub mov inc stos imulb bound cld pop rorl push rcr sub xchg add in add jae sub mov lds add insl jecxz in lcall lods push cmp adc ret test mov pop repz xor jl in cwtl mov mov inc fbstp inc sub into mov jno push test test dec jle outsb ror sub and rcl (bad) jg and les cmpsl or pop sti mov mov cmpsl inc rol add xlat mov sub cli dec xor (bad) cwtl daa (bad) or cli (bad) repz fcmovnu mov xor and mov mov iret iret lret push mov pop cmp cs push cmp fstp fisub test jne inc out (bad) jnp mov xchg mov or nop mov scas jne fbstp in add and and pop and cld add lret popa adc cmp sub addr16 scas rclb inc add test out pusha pop sbb jnp sbb jg ljmp fldt rclb jmp (bad) cli into jge add sub scas sub inc mov pop xor lretw cmp xchg inc aas inc add lcall scas push lret jp movsl movhlps fcmovbe lcall cmpsb repz imul mov inc ljmp cmpsl xor inc jecxz arpl mov dec mov pop and test jae aas in clc nop icebp mov xchg xor adc inc cld dec test out lock ds mov mov mov dec insb loop push or mov (bad) leave cmp pop popf adc lcall dec (bad) fcmovb and sub lcall call call add insb sub insl fisttpll xchg jecxz iret nop ds es adc call mov or xchg cld push and cmpsl xchg mov mov push aaa push in dec lods xchg (bad) mov insl in mov mov add loope cmpsl cmp mov lods push pop inc mov push jge outsb and mov push mov jbe cmpsb dec bound pop pushf dec mov insb cmp leave adc mov and jmp mov (bad) ljmp (bad) jne mov sbb push jmp stc adc or pop jle mulb push (bad) xor unpckhps pop daa add pop jne push and cld adc andl (bad) jb mov mov xchg pushf mov jmp fcomp inc jg or int3 pop das in push cmp out pop push pusha fwait mov jge repz cli in (bad) pop xor gs push ss les (bad) lahf push add pop popa (bad) jne mov ljmp push imul aam and mov mov ret mov push (bad) jecxz sbb push lods pop cmp pop je test jmp pop bound mov imul mov cmp xor cmp ss mov ss sbb les cmp xor mov in sub popa jecxz movsl xchg (bad) mov out outsl or fldcw mov add retw cmp out or in insl je cmp inc js lret xlat dec or lret pop dec jns mov mov push jbe inc xor outsb add or lods jl add jmp inc and mov movsl or insb sub repz add (bad) int ret popa pop ss lea fwait stc sbb and in or inc pusha pop cs mov sbb ret push dec add xor xlat shlb and mov lods jle mov aad push adc add inc sub inc stos into loope mov jae aam mov xor or sub out push movsb aad jmp adc jae fwait test (bad) daa (bad) jbe xchg lret jg mov cwtl loopne mov orl sbb xchg xor jp (bad) dec mov leave cwtl sbb (bad) jno add mov pop out mov adc addr16 pop and push jle stos insb and add jae add dec popf mov mov jle fsubr xchg push out dec sbb aaa mov ss pop ret inc ret lds imul loope inc notl xchg in adc lahf and adc rorl loope sbb test mov pop movsl shll jns mov jg push mov ficoml push mov pop cmp out call mov push jle hlt mov push into daa imull sbb pop push fwait mov testb mov pop pop nop mov cmc or pop in xlat mov div push jle aam or push sub mov add ja xchg clc mov xchg out mov (bad) mov (bad) mov cwtl scas aas jp push pop (bad) mov fwait mov scas dec jae xor jg std xchg sbb js call mov inc jmp mov repnz xchg dec movsb jbe dec or je jae xor mov in adc pop test sbb pop (bad) aad fistpll or jl hlt inc or (bad) xchg jnp adc mov ficomp and xor dec andl mov ss inc movsl jbe out mov scas push inc jne cmpl dec jge mov xchg xchg mov dec hlt jecxz adc dec push repz mov sub adc adc mov sbb in push cli fdivs sbb scas pop jecxz pop test stc sub jle loopne insl cli lods psrad mov push cld or or pop pop cs sarb jg push sarl idivl das and int3 mov data16 int add xchg xchg jmp out dec arpl test sub in fwait sub xchg popa cmpsb mov mov mov stos inc test jb stos sub and imul sub sbb xchg ja call cmpsb mov cmp push push (bad) mov lock das push mov cmp ljmp test (bad) lods out and lahf std imul dec add (bad) int pushf dec push fs inc dec sub cmp mov nop inc pop mov and movsl fisub pop lods aam mov leave mov hlt dec pop ret adc jno (bad) out gs stc (bad) movsl leave dec (bad) sti fcoms mov fstl cmpsl xchg in outsb data16 scas (bad) sub sbb aas int3 xchg push pusha jmp popf (bad) xor (bad) push sbb int3 test cmpl mov andl rclb adc int sbb xchg lods ss push fldt es pop jp test fwait xchg fmuls test daa and inc mov mov push or test add cmp clc rcrb ja in dec int sahf fs pop inc ja shl enter aad push mov or fmuls int3 or hlt dec jmp sbbl xor jle pop ljmp dec xchg fwait xchg add mov outsl lea or outsb int insl cli cltd dec or push sbb lret mov gs or mov sar mov push fiadd push je or repz rorl mov out pop inc push mov jnp scas xchg insl jnp add cmp aad (bad) mov jge push pushf inc sbb clc inc pusha cmpsb aad (bad) pop hlt sub inc or out sbb js jle mov push and xchg sahf push es cli dec std mov jns and sbb rolb sbb movsl pop push push les xor mov push adc and lret fnstsw bound xor jmp sbb (bad) negb lds or into cmp (bad) push out ret push cli xor (bad) cmpsb push push and mov ss sub lret push test cmc cmp repnz cli rclb js mov mov dec xor adc xlat gs jmp addr16 inc jle ljmp mov mov xlat fnstenv xorl mov sub mov xchg cltd movl mov fdivs adc pop xor cmc mov jmp imul dec test dec xchg popa sahf movsb dec xchg inc or jo cmp add and or mov xchg mov xchg xor and aas push daa cltd nop push fisttpl inc xchg cld or in jno dec jno (bad) fucomi gs sbb loop out pop lcall pusha icebp xchg add call add add push mov inc je add push mov dec adc inc (bad) cmp cmp pop sar push xchg cmc xchg pusha dec jnp adc xor add xchg pop sti ds ret std pmuludq jmpw cmp or or sub mov (bad) cmp add inc sahf andb adc adc cmp mov adc xchg rcrb ret pop jl pop leave and fistp cmp lock add andb in xchg cmpl cwtl mov inc and cmp loop push or and adc jae (bad) xchg mov repnz scas dec mov mov cmp (bad) movsb push test push je adc dec enter mov adc push ret adcl ret mov adc loop flds scas jbe arpl xchg pop push daa icebp pop pushf data16 lahf and cmc lcall loop xchg adc scas sbb repz ja subl pusha scas xchg xor dec sbb adc jge xorl pop jns outsb lcall orl loopne stos enter sub mov test push les in addr16 addr16 mov xchg lods pushf push pop mov push (bad) (bad) mov fdivr insl dec xchg popf push fsubl pop mov cltd imul aaa jp xchg push icebp sub push idivl int xchg sub clc jnp sti mov stos pop xchg fidiv inc aad in popf jns xor sub mov stos or sub xlat int3 arpl stos jp cmp mov adcw loopne cmp mov inc mov addr16 mov out xchg rcrl mov mov sub test dec inc cli mov mov jns in sbb (bad) call jge add mov mov mov and mov lds xchg shl lods loop std (bad) hlt xchg int3 ret sbb mull mov mov adc push cvtps2pd sbb adc lcall push inc jb into in pop jmp adc mov jmp adc (bad) add inc push lea add repnz je orl sbb pop xchg mov es add push add push (bad) int3 ret jmp leave dec push movsl add test shrl out hlt movsl xchg inc mov sub mov sahf mov push push cmp inc jecxz inc test pop mov dec lret ja sub push xor inc dec iret dec dec inc je jns mov data16 es orl out rcrb aas and addb xchg cmp pop (bad) ja sbb mov call jge and mov adc jb xchg ss in (bad) adc and and mov mov xchg jmp test mov mov push notb iret xchg dec pop cltd mov into mov mov cmp adc push int jae inc dec (bad) aad xor cmp mov inc (bad) popf adc data16 pop push inc in roll stos push mov mov daa or mov out imul rolb sub (bad) mov lock dec fwait sti leave in sar dec cmp daa sub jbe and out nop push jo add adc dec inc mov xor (bad) clc push outsb inc cmp dec jae stc cs ja mov inc mov rol cwtl mov int3 test cmpsl inc sti in xor sbb in xchg or outsl leave push jnp mov mov mov push icebp test outsb pop (bad) cmpsl pop pop xlat add popf rcll xchg movsb in dec incb (bad) dec in sbb rcl xchg adc add (bad) or rorb (bad) repnz (bad) aaa mov xor adc rcll sti cmc dec dec dec lods (bad) cmp loop pop callw sbb sbb adc das push ficompl movsl fwait sub jo add inc sub rclb xchg and inc cmp jne add mov jp insl arpl pop or xor lcall push push sub scas xchg xor bound roll push idivl adc scas fcompl or xchg inc jge dec insb or push pop mov push lock or push mov stos mov push inc lods les mov scas dec jg out jg std push xor mov lea adc add arpl lea ja,pt das test mov rcrl xchg and inc jmp fstl add cmpsb or xor xor lock hlt inc push ljmp outsb movsl push pop iret xchg dec (bad) jne (bad) jecxz mov frstor xchg in pop xor jns bound orl pop mul repnz and xorl clc fbstp add push push sahf jge in stc cmpsl neg xchg mov mov dec inc cmc jo inc add or pop lret and insl and and mov sbb fsubrl cmpsl mov add cmp test nop jmp pop pop imul lods xchg pusha (bad) bound xor mov jbe or sbb ja xchg mov movsb fadds or sub jbe push push adc fcoml jnp jecxz icebp pusha stos adc adc cmp push mov lock inc je fwait idivl nop scas inc mov in mov (bad) mov sbbl cmp sub add imul int3 xchg mov hlt cli and pop bound and inc sub xor (bad) push adcb lods ja inc aaa or and in test hlt add jno push cmp clc mov pushf ss push int xchg add adc sub fs idivl mov pop es and lods mov cmp dec xor ret mov mov nop es loop (bad) xor call cld mov sbb in mov gs dec pop outsl xchg rcrb out pushf gs jle bnd (bad) mov clc (bad) sarb bnd (bad) mov mov push movsl in js fidivl pslld rol scas xor data16 insl aas scas fbstp lods cmc in add stc pop jecxz xchg inc xchg mov sbb dec xchg inc xchg or pop or shl call mov add xchg lods mov fwait mov into fisttp xchg inc (bad) push xchg idivl popa fstps jnp loop inc andb inc rcl fldenv jge cmpsl xchg sub xlat mov gs mov mov outsl xor add add push aaa or xor xor movsb out (bad) inc cmp adc mov rclb or rolb xlat sarb iret jl cld mov mov sub xchg sbb sbb daa mov adc mov loopne jbe mov (bad) pop (bad) pop mov add xor mov loope (bad) or arpl pop rcr xchg inc cld mov sbb loope jno sbb scas popa pop lds cmp xchg (bad) sbb xchg cmpl orb sbb lock stos pushl lods movsb pop xchg or add and iret iret adc inc (bad) (bad) aaa in mov stc mov movsl and xor cmp jne lds fs add push ret movsb dec movsl pop rcll stos idivb mov enter inc out push (bad) leave inc mov icebp sub lret cli mov popa sahf fwait pop imul sbb jmp dec jb pcmpgtw cvttps2pi push sbb into pop das pop test in (bad) fbld sub mov rcr adc mov lahf daa cwtl mov adc push dec add ljmp inc or loop xchg adc mov addr16 push push adc in sub adc inc cmpsl mov push lret in pop lea pushl sub mov push jg mov fimul cmpsl mov lea jecxz (bad) or cmp incb aaa pop hlt popa clc loope push out mov js or rcr shl dec push stos scas sub or das mov fs push (bad) mov xchg mul insl (bad) (bad) jb inc lods repnz out jp mov cmp adc add ret xor jb cmp out sbb pop shrb push in dec icebp es jle iret adc cli dec and loopne adc cmc xchg jae mov bound aam pop ds (bad) jbe inc xchg call inc add stos add test or inc sub mov push fsubrl sbb sbb or mov adcl loop pushf sub jmp inc mov shrb insb push jae or push or mov sbb in xchg push add adc out mov loopne mov fistpll scas pop std aaa (bad) mov inc sbb les in int3 cmpsb repz add mov or mov pop ja xchg in or inc pop cld clc xchg bnd mov mov xor mov and cmpsl pop imul lahf push ljmp fwait dec or aad sub cwtl cmovnp sbb fsub or call sbb lret xchg pop mov mov daa loopne pusha popf xchg and ljmp outsb outsb sahf fnstsw or mov ds xchg cmpsl dec pop lcall gs mov dec or jmp out sbb cwtl push sub incb in lods adc push cld clc push mov repz dec lret push inc dec leave shll push popf in mul jne pop outsb jl cmpsl gs cltd xchg js cmc jbe push aad (bad) nop adc push int3 fwait push inc loop cmp mov pop xchg sub lret sub mov sbb enter mov out jns pop inc add jne sbb sub out mov mov xchg scas fadd lret (bad) jne pop rolb fimull mov mov out jb push push dec pushf mov mov pusha mov std repnz and out in clc outsb rol add push jne pop jge xor inc jb push hlt dec pop inc mov in ds sub mov mov xchg int cs mov push cmp mov or out sbb xor xor aas dec jb out mov sahf xchg cmp arpl mov mov fldt in push pop mov push push fistpl aaa in mov icebp jg mov adc and cmc sti cmp sbb das push test scas mov into jge cwtl addr16 sbb dec hlt mov adc sub inc ret push leave outsw adcb push pop and inc test xchg cld mov (bad) push xor mov mov mov lock add lea mov push out repnz push sbb pop and add xchg (bad) insb push cmp arpl cmp inc movsb jo cs mov sarb adc int3 add loop (bad) arpl add jnp rcrb jge test jne mov ret ret push gs mov (bad) push ja push icebp mov mov mov mov hlt jno int3 pop (bad) push insb inc add scas in cmp mov sub xchg dec push and pop (bad) dec jmp sti sbb inc cmp push cmp pop cmpsl pop jnp mov insl xor sbb (bad) call aam xor (bad) pop idivl mov in push jnp jg inc fsts cltd jl or push stos movsb and xor inc adc (bad) mov sarb (bad) shll ljmp xchg jae dec push lock push sub je add sub rcrb or adc pop inc fiaddl movsl jo add pop inc pop mov insl or clc sbb sbb push aaa in sbb sbb cmpsb xor mov sbb (bad) mov mov stos lret sbb test or jge scas add jecxz mov movsl icebp mul mov dec insb or rcrb xor push jnp add cmp jns jecxz aas test lret cmp mov jo jle lods insl cmp int3 jge inc test cmc test and dec mov push pop dec cli cli adc fdivrs aad imul stos out mov cmp xchg fisttpll jo inc outsb inc test fidivl rcrl ret test (bad) fwait or sub pop jnp mov mov push mov jge (bad) xor or add sbb jge xor mov fucom jl sbb push in stos cmpsl xor lret pop sbb jmp sub fidivrl (bad) out icebp leave fwait cwtl cli xchg add das mov lret or add fbstp loope xchg jbe sbb pop pop daa mov pop xor pop mov loope adc pushf cmp cmpsl fsubl ja ficoml pop adc push stc sbb popf sub jns jb cli sbb or cmp jl xchg scas stos sti and and pop das mov rclb push sub xor inc jbe push (bad) or mov mov mov push mov fwait jne ds mov (bad) loopne pop sahf sbb or mov push dec ret xchg test mov sub sub push test jns (bad) call aam movsl add sarb cmp lret mov mov xchg roll (bad) mov int and mov push mov adc hlt xchg orl (bad) es mov loopne dec cmp jl (bad) (bad) jno (bad) sub cmp lds lcall std add test int3 and das cltd subl mov inc cs nop fidiv mov cmc pop in jge pop or jg and stos or enter in test inc inc mov adc gs and dec lods adc (bad) sub pushf test inc xor sub adc or mov out inc mov adc test cld jp cmp movsl pop and adc pop cltd dec in sbb cld scas or aas dec add mov aas add lret aas mov mov (bad) loope add fucomip das sti sub popf mov push and lea jb fisub push sub mov addr16 clc (bad) out add or inc ss dec mov sub xchg mov js dec sahf push imul scas js mov jbe or xor cmc sub rclb out (bad) cmp sub jg repnz jecxz repnz xchg call imull xor hlt daa loop test mov nop nop addr16 or insl std jge or fwait sbb hlt adc pop and movsl add addl jl (bad) fs add and or push pop ret aad test or addr16 int (bad) cmp lret mov sub dec add stos push xor add push jg inc vpackuswb popf movsb sub mov inc aad mov jo xchg xor add shll fisubrl xor add mov in je rorl jae pushf dec fwait int xchg sub sub fdivr pop pop xlat (bad) pop dec leave rsqrtps add pop xor cmc xor push dec js jmp mov repz mov incb inc mov sub sti cmp xor sub pushf jl pop jle jae mov fdiv pop outsl cmpsb std int3 dec xchg fdivl mov jmp inc fdivrs enter mov arpl push sub je xchg in outsb roll das push ret mov (bad) xchg sahf mov sbb inc aad ss xchg push iret dec mov jne jne hlt (bad) sub cmp xchg mov cmp imul mov inc loop fstp test xchg pop cmp push sbb pop or mov inc lcall jb repz push mov dec fucom push call mov xor add stc pop push mov jle insl mov mov mov cmc loope lea jle mov imul or mov sub push dec stos xor lcall jp daa lahf subl popa test xchg jge pop adc add xor dec jae int imul clc cmpsb aaa scas sub iret cli test nop jl and push loope jnp clc cmp pop jbe or push cmc jne scas mov in xchg add xchg rol aas mov xchg xor out xor insb loope ja sti and jb out mov jbe add (bad) shll mov sub mov (bad) icebp es lods jae sahf enter mov xchg lock arpl and xchg pop clc out ret outsw (bad) and repz jo fprem lock mov add std mov jmp pop cmp cmp orl mov sub xor mov adc pop (bad) and inc push jb imul cmp sbb push inc or in adc into mov sbb ja add or arpl fidiv test sub loope test pop or jnp inc jmp push popa stos test (bad) pop mov xchg xor cmp stos xor or je js cmp xchg dec orb xor and pop fild movsl repz lock sarb lcall jle or xor cmpsb shr out out fwait jge push addr16 loope inc imul cmpsb sbb lods loope test movsl sub push andl cmp inc fistl test rolb mov data16 pusha mov or inc cmp pushf cmp mov test mov jae push adc pusha iret imul bound xor bnd mov xlat stos xchg movsb dec (bad) cltd xor lods popa mov loop das or mov (bad) clc pop imul test loope cwtl sarb jmp jl cli test cltd dec or shrb in aad dec mov adc in movl or test repz leave dec sti add into outsl dec xor mov jmp jo xchg mov add cmp leave cwtl push loopne and jae sub push pop xor out fisubl out pop pop jbe and fwait inc jns,pt (bad) out xor jle cwtl push popa stos mov or (bad) in outsb dec mov xor imull push xor data16 and mov sbb sub shrl inc stc sbb or pop mull test or xor mov (bad) jg mov cmp inc (bad) repnz fcmovbe in jmp mov repz push out mov enter pop cmp or and mov or pop lds adc xchg pop in sbb fmull pop fisubr add out dec jecxz pop faddp stos adc push or insb push and (bad) adc xchg pop cwtl aad ja dec mov dec push sub jl mov mov push cwtl add loope gs sti mov enter adc pop and mov rclb sbbl pop add xchg ret xor outsl insl iret mov in dec movsl in (bad) xor jae mov mov (bad) xor fdivl (bad) (bad) (bad) sbb push push addr16 push inc jmp rorb and pop in in add xchg cvttps2pi (bad) mov js enter dec mov add icebp out jge adc outsl aas movsl mov lds jp cltd sti popa and mov or sub pop insl inc dec movsb (bad) pop int mov imull mov std fisttpl push sub push pop enter and pop xlat push push pop stc inc imul lahf or orb add pusha clc jns adc das (bad) jl pop adcl daa add (bad) cli fs movl xchg jae pop movsl clc and push neg outsb cli push cltd adc dec imul inc mov mov in icebp push xchg inc jnp les movsl jle push les popf stos add movsb jae stos orl dec js ffreep andb insl dec inc inc stos lods xchg imul jae mov outsl push mov sbb mov or lods rorb and ss aaa adc push bound out pop hlt les or inc dec adc mov mov sbb mov jle xchg inc pop sub mov mov add es fcomps (bad) call arpl cmpl insb jmp (bad) roll fisttpl fwait jne jbe jle xor out jb,pn ljmp stos popa or xchg pop xchg dec dec mov push daa (bad) jle xor jp xchg dec fsubl cli sbb jo adc stos cmpsl inc pop lcall push shrl nop xchg mov or stc and pop mov leave hlt lock sbbb test (bad) out xor xchg bound push adcl dec mov sbb xor add ja push xchg xor (bad) adc push jl,pt rclb inc stc sbb movsl aas cmp push jae or cmc es cli mov lret add jo mov adc pushf xor scas stos lea and int ret ror mov dec fwait rolb int3 xor and outsb mov sub mov setle popa (bad) jmp leave in and mov das push push pushf pusha enter fidiv cltd mov stos mov cs xchg xor add mov cmp lcall jo cmp mov ss cmp add dec cwtl sbb pop mov fistpl xor lret rcrb and fdiv push jl insl shll xchg add jge icebp dec mov rcrl push andb mov sub sbb cwtl mov (bad) or mov pop dec mov cs fcoml fs mov xlat rorb dec push cmpsl inc je test mov mov mov push ret jl lods js pushf jmp cli sub mov inc mov ret test push test (bad) mov leave sbb inc sbbb lods loop pop push sti (bad) pushf lea inc repnz std push jg test cmp sbb inc ss test add call push (bad) or inc mov pop cmp scas cmp aas in add or js jb test mov nop sub xchg scas fsts icebp fdivr sbb ljmp add add hlt test inc mov pcmpgtw jmp movsl mov pop ret or movsb into rcll scas pop jg jnp mov xor ret imul popa and std shlb stos leave xor or jb ds xchg fsubrl (bad) sbb das push dec int (bad) mov pop sarl outsl lret aam jge ja mov mov jno sahf enter add fstps test jmp mov push cli outsb or jmp cld mov lret dec adc mov jmp repnz jb add pop push jae jno sarb imul fcomps in rcll arpl or insl (bad) mov xlat pop cwtl mov inc cmpsb add (bad) mov sub insb dec xor lret xor push test fsubr xchg push and jmp cmc add repz xlat scas sbb out rcll mov (bad) int cmp and pop inc es sbb aas pop xor jbe hlt addr16 inc lods push mov xchg lcall or xor mov lds arpl dec xor jecxz sbb mov pop jecxz pop sub add arpl sahf mov mov outsl dec into test sbbb xlat call mov imul test add ret hlt hlt xchg and sarb push (bad) and in jge pop movd out dec cwtl xor int dec mov ja sbb push test ss getsec fwait iret cli push (bad) sub jbe push xor orl or fnsave add out mov stos sbb or inc ja test enter jno lock idiv sub pop sub (bad) dec pop xor aad dec push cmp jg cmpsb dec push sub out arpl push jmp popf into sbb push mov and pushf xchg push fs xchg push es push pop inc mov stos push imul lret cwtl mov adc test dec enter dec inc jle jle stc shrl pushl pusha faddp aas mov jecxz pop loopne jno mov xchg sbb dec lods flds hlt fbstp sbb (bad) jno add repz mov jle adc cmp cltd fdivl je inc in imul add loop jno enter cltd add mov add cli nop rorl aam and dec in cmp sbb xchg rol push icebp jae ret pop out mov pop jecxz nop dec fnstenv adc fimull rcl aaa dec out xchg jg xor std std out pop bound fisttpll push aaa and add push adc jo pop ret or out (bad) out adc hlt pop sbb aas or cmpsb test sub push or push aam subl fwait mov leave cltd jns data16 xor (bad) sahf or mov fs cmp pop fisubr pop xchg imul push pop mov or mov mov aaa xor lock in mov dec jns mov mov (bad) aaa xchg fimul mov jecxz subl repz es pop pop xor mov xor (bad) popf or inc sahf pop pop popa (bad) lahf sahf mov mov jge pop mov sub dec test add add jp and sbb sub pop test push sub xchg sub dec pop into (bad) lds ljmp mov pop ss adc fstps pop sub andl ljmp jp jne xlat dec pop and sub aaa std mov mov xchg cmp xor adc aas fldt rorl (bad) lock cmp cmp jnp xchg (bad) pop or imul test pop js adc or aas jmp add rclb or imul das inc push inc jae xlat sub pop cmp or leave testl or sub inc ja pop xchg pop out test lock decb divps jae pop fs mov std push mov das lods cli mov repz cltd mov cmp test xchg call ret jmp adc testl mov loopne scas adc pushf pop js adc xor es in in test iret sbb mov sub fsubrp insl addr16 and sti mov add mov (bad) loopne dec push (bad) jmp ficompl mov (bad) dec cmc jle popa sbb pop into xor add test sbb test test mov aad lret adc stos adc or setge insb outsl pop (bad) add cmc sbb jmp pop cmpsb cmpsb mov sub pop jecxz pop pop jo jle lea and shll mov adc xchg and cmp jb fdivrp xor (bad) les fistp fmull js stos pop or insb xchg cmpsb inc mov dec pop cs dec in sarl add add std pusha std pop jg outsb (bad) jno xor dec jmp jno adc dec or cmpsb add test movsb xchg mov stc jp std pop push stc xchg sbb loopne les pop mov aas fsubrs shll push idivl and dec xor fdiv sub stos test pop scas and test pop ljmp (bad) (bad) pop fidivl mov out lret (bad) cmp outsl aam push addb int cli push jb cmpsl hlt sub mov es lcall or and insl mov lock test pop jb lret arpl pop jp sub out mov push xchg fsubl cs xchg dec int3 push sub mov stos arpl add sub xor das pop cmpsl sahf in mov ja mov cmp int3 rol or mov scas out mov lret repz pop push mov xchg out iret hlt inc mov jns inc push sub xor push sbb push and dec jbe movsl dec fbld mov rcr push and sub push or push inc lock dec add mov lret mov int3 dec or aad jnp push lods dec or and pop add gs into ss push insl push lds pop in jl jbe dec imul add cmp sbbl cmp dec xchg negl pop pop movsl lret das andb push push sbb push aam sbb lret rcrl fsubrl adc hlt cmp jae mov insb jbe stos sub mov shlb xchg inc cli dec jg add inc jo mov test fistpl cmpsb jbe jo mov dec addl push sbb clc je pop sub fisubrl pop mov test xchg mov push enter and fstp dec leave xchg (bad) inc and movl push mov push add lret call out mov test pop sbb xlat imul mov mov bound and test and cs lahf sbb sub mov adcl cmp pop hlt sub dec scas lds leave cmpsl mov (bad) sbb shlb inc fcoms aad xor xorb leave cmp push cmpsb (bad) leave gs data16 jo movsb test inc add fisttpl mov fsubp pop fnstcw jns adc jg sbbb push pop mov cld add xchg cli ret clc dec sbb popf add adc push cmp in push cmpsb jecxz adc test test (bad) jns xchg ret mov dec adc xor pop cmpsb adc adc mov into push mov lret pushf les jg in add pop sbbl xlat mov jmp mov mov push or int loopne inc xor inc xchg rol xchg ss push xchg lret add add xchg xor xor dec add outsl in stos inc jb fisttpll mov lahf outsb cmp jecxz sahf fisttpl leave sbb adc mov mov ret (bad) mov jo pop dec xchg fildl adc jmp aaa hlt mov mov xchg fmuls or hlt push outsb jb add (bad) adc adc in lock ret call push mov addr16 (bad) das push leave and mov push sahf stc pop (bad) add test insl js mov pop sub push mov pop test jl and and dec pop jmp fist push pop jno mov (bad) cmp cmp mov xlat jbe out (bad) cmovp adc inc dec jmp das mov lock add sub dec rorl jge stos mov push mov aam pop xchg pop stos jecxz mov int3 jmp outsl outsl mov in mov mov in mov xchg pop mov jecxz fildll xchg or xor jo add push ss fistpl or enter repnz aas sub aam addl (bad) decb sub fisubr mov jne add xchg clc mov mov xchg xchg dec lods pop push ret ja push push lcall js push mov push inc mov rcrl icebp cmpsl xor fwait pusha (bad) cld mov xchg pop stos xchg jl (bad) lret sbb mov pminsw lret in pop call push aam rcr push add test mov push pop pusha popa xor add lds jl sub xorl pushl mov fiadd mov fbld sub dec jp pop mov mov mov (bad) mov mov push sub daa xchg sbb (bad) inc add adc mov (bad) clc and lahf cmp call sbb adc incl add xchg test cs jo xor gs xor jl (bad) aaa icebp mov mov test push aaa stc dec test ljmp or jl (bad) pop lahf (bad) sti sti inc cmc or loope insl inc adc rolb je xor push popa stos call scas and (bad) fwait movsb daa pop and cli jecxz or adc aam push (bad) xor (bad) dec pushf lock movsl js cmpsb cmc les sbb ret shll jmp cmpb fild adcl cltd call in cli rolb sub lahf inc xor xor icebp movsl repz and stc lcall push jne inc pop sub jb sbb dec imul mov aas cs xchg sub aas sbb push in mov aas (bad) dec mov notl or mov lret xor in (bad) jecxz loopne add and push and mov pop (bad) sbb daa cmp pop mov add les ljmp xchg mov inc movsl lahf fidiv jns push sbb loop fbstp ljmp mov push mov push add fwait sub in cs clc popa push nop loop and out jno rcl jle push add sub inc mov xchg into out (bad) pop testl sbb mov jns neg pop jge scas and dec loope inc call mov notl call addr16 jns mov push lods xchg fs jg sub xchg or jmp enter push xchg pop mov lret and shrl jb sti sub popf js loope mov jp and sub movsb mul dec test sbb ret cld ljmp mov dec and cld xchg and clc jbe les jo dec andl enter jne movsb cltd dec and or jge mov mov or mov mov insl mov stos mov into push inc inc imul je hlt sahf jl adc inc clc sahf sub inc repz mov push cmp jae xchg mov xor xor stos mov (bad) mov outsl mov fnstcw adc cld inc inc mov add cmp dec fildl and rol daa cmp ds outsb js inc fucom mov ucomiss leave ret mov sub inc jo fimull add sahf mov dec jl push fst in jmp (bad) xchg les into out es jge add cmp inc in cmpsl push cmp and rcll jg add adc dec dec mov mov lods or xor arpl push xchg fisttp fcompl mov jg xor rol inc les pop mov add jmp mov sbb (bad) popf das ret mov enter in adc mov aas hlt xchg and sub enter sub mov and aaa pop fwait adc and test or ja or (bad) jbe out cli iret sti adc jnp les add movsb dec or cltd (bad) mov adcb inc mov mov pop jmp jb mov mov and jp pop adc cmp shr addr16 das xor dec test inc ret aaa xchg sub xchg jae push adc shll pop sub enter cld jno xchg dec std push or lea pusha add pusha mov (bad) mov sar pop push ret adcl and push sbb scas pop aad adc cmp sti mov push lea scas std jno pop push into dec out xchg aaa mov test pop inc ret lret sbb in sarb jmp cmp in incl sub dec lods shl in stos les inc xor push inc add jne aaa push jne push lods (bad) dec mov fimull ficomp out or lods mov repz cli (bad) cmpsb and outsb aam sbb and or xor iret push cld shrb cmp push add mov stc insl shlb iret cs addr16 adc pop cmpsb mov mov xchg jne shll jae pop mov cmp mov call cli cltd and ret add xchg xchg mov inc sub inc xchg mov lds movsb movb mov sub jae loope pop into xor and cs sbb mov (bad) mov mov aad das test xchg xor fdivrl jae or call fcmovb ja rcll divb scas jl adc push pusha (bad) lahf ljmp adc js mov mov push subl pop les (bad) adc movsl push xchg fisubl fldenv mov mov outsb mov adc xchg dec fdivrs out ja fwait int3 aam outsl xchg push mov (bad) dec sub mov int and mov repz decl xchg aam sbb or fcomp mov pop inc push ja lret jmp cmp fmul jns pop rorl lret and xor cmp cmp xchg or push jle jmp xchg lock sbb sub mov mov dec jecxz out xchg (bad) stos dec jmp mov cli adc pop xor fdivrl add paddsb push in mov xor mov mov mov add mov imul xchg pop lcall sub lret adc inc aas push (bad) loopne push pop in mov add lds xor dec scas movsl fs or mov add xchg clc lods cmpsl push cmc int add in mov adc dec sti dec add add pop (bad) or cmp pop je mov pop lock incb mov mov mov xor mov ss pop outsl xchg dec repz push dec ds or mov test mov adc mov jecxz jb ss dec mov xor inc ds out int3 mov sub sub pop xor push push cmp add ret loope sbb data16 aad and mov dec fwait int fldt out test sbb mov js pop std fnstcw push mov xchg (bad) lret lahf push pop jge xchg in sbb test cltd inc mov iret sahf adcb outsl jae xchg xor cmp and clc int cld mov jne fsubs push xor pop leave in mov in pop fbld adc xchg xchg jae in das decl cmpsb rclb dec cmp adc dec mov mov lea test inc lea jbe push (bad) sub inc test jo mov movsl shll loop clc xchg int adc xchg and arpl test dec jne mov dec mov and pop pop cld and loopne call xchg or adc sbb xor dec dec add and sbb pop dec (bad) inc outsl xlat or fucomi add loopne int jbe jo jbe fimull in scas fisubl aad xchg push pop ret in jp push adc loopne jbe gs stos (bad) mov inc mov mov mov adc fsubr loop jae sub fistpll and ss fxam sub xchg ds adc fdivp sub lret mov gs dec js insl orl jae jmp push xor sub dec cmp mov dec push popa ljmp mov lods pusha jno idiv repz cmp cs js sbb lock aaa mov lock sub das sub in stc (bad) mov outsl jg rorl out push repz and sti fs jle popf int3 mov sub pop xchg cmp loop aad jb add daa outsl fbld test mov push mov mov shrb cmpsl jae push lock in or dec mov sub imul push or cmp mov fs xchg mov sbb sub dec cltd jne cld shrl imul icebp (bad) int inc inc das rol adc shl mov pop sub jp popf cmpsl aaa push xor mov stc pop mov dec xor mov lahf (bad) xchg enter mov or lds in jae in loopne sbb mov mov mov in adc mov mov ret sub stc jns adc cmpsl int les and (bad) dec xchg dec lcall call or (bad) lock pop push xlat test cmpsl lods (bad) stos out cltd mov add add lods dec or sub dec cld jge pop imul jmp lods mov data16 popf call or and in mov xchg call sahf enter pop vpackssdw xchg rorb out dec inc inc imul shrb jne xchg xchg subl adc jp insb stos mov xor pop scas push push inc push jae xchg inc add loop or jae fsubrs add push imul sbb mov push test loop lods jmp mov mov dec xor xor repnz out mov push xorl mov push ret cld cltd or mov (bad) or enter mov dec push aas push insl xor lcall dec mov jno repnz cmp idiv js xchg mov xchg lock mov and mov mov (bad) (bad) xlat sbb sub mov pop fdivrs scas lahf fstps pop pop insl jmp sbb pop pop in test lret iret idiv mov mov inc or xor xchg ss adc mov and sbb mov psllw fcoml inc xor shrl mov xor sbb mov cmp outsl popl dec mov mov fwait and xchg fsubrs cs dec add mov jp out data16 fmull jno arpl and sar scas xor sub fild jmp sahf adcl repnz sbb std xlat in int3 add bound jb and pop pop loop sahf cli add sbb icebp (bad) in mov push mov stos mov jp push push ja mov cs dec stc jle cmp xchg rclb and (bad) je mov jbe clc inc out cmc stos out xor ja xchg mov sub clc js sub or fstpt (bad) sbb cwtl push (bad) arpl repz pop leave adc scas add pop pop cmp fs and sub cmp aam mov push jno jp test dec pop aas in dec pop test pushf ficomp mov out mov push sub cs or pushf xor push pop movsb pop fisubr scas out fldl orl sbb test xchg call mov ja mov imul cltd sti or xor mov fisttpl cmpsb fmuls out push enter divb jne stos (bad) out (bad) push mov in ret incb push shll adcl mov jno or or add sub xor or arpl mov mov test scas cld pop sbb pushl inc mov hlt mov dec push xchg icebp sahf sbb xchg jge js xchg popf movaps xor mov cmp outsl call std sub xor call pop in dec outsl fcom mov inc lock and add jge jle movsb cli push (bad) cmp (bad) adc push ljmp add mov andl stc leave imul aam add mov jp scas jb iret push repz xor inc mov sbb repnz clc jbe dec arpl push inc insl add sub fmull addb mov ret mov dec mov jmp push mov inc sub jmp dec jge rorb and adc insl sbb pop jecxz (bad) movsl mov insl ds dec push imul or inc imul pop movsl mov (bad) push xchg out daa (bad) mov insb and lea sub push dec push inc push push xor cmpsb dec mov je lret adc and les mov pop jbe sub push push push xor xchg xlat fimull xor lcall dec push mov insb das ficoml pop clc jb mov lods dec xor xchg jb (bad) pushf (bad) js insb outsl faddl cmp xchg repnz arpl in adc push push pop loopne imul insl scas pop cmp cmpl inc ret sub cmp xlat jl add fcomi xchg cmpsl sarb sti or movsb mov int3 fdivs sub fwait (bad) (bad) jmp xchg aad (bad) pop ret test mov mov inc in aam sub jns mov in push mov mov lods movsl inc fldl jmp jmp loopne fcomps sbb inc sub ds sub or cmpl jne,pt addl inc push adc in sbb inc idivb outsb je adc mov data16 cltd fcompl xchg repnz add rcrb (bad) mov aad fiaddl sub sahf ror lcall push stos movsl repnz sti push mov adc push (bad) lret test into xchg rcl dec (bad) (bad) push (bad) shrl aam in mov and adc mov cmpsl xor and repz cmp xor daa sarl inc add push push add cmc xchg test cld mov popa aad mov push ftst add sbb (bad) lss (bad) vpslld cmp push (bad) and mov stos lret iret mov shrb mov mov or hlt jae mov sub or fsubl push mov adc or cmc jbe inc ret dec mov add lahf pushf push rclb sbb jecxz mov sub popf cli sub insb popa in pop or stos lret fwait push jge add int pop decl in add push mov int3 adc jns add inc (bad) testb test add xchg fwait test xor and popf cmp sbb and cs faddp inc adc rorl fbstp and dec (bad) xor out dec dec xchg jae (bad) negl and and jno cmp sbb movsb stos push mov mov mov mov mov push es fcomps xor adc mov xchg xlat inc loopne lea cmc dec push fdivrp cld xor ret xor adc movsb mov fcmovb mov dec pop ss (bad) dec movsb xlat out test add sbb jno push (bad) mov daa fisub popf (bad) outsb sbb (bad) cmpsb cmp shll ss pop mov sub xor inc jge xor (bad) or jecxz (bad) insl in xor xor inc xlat dec jge int3 sbb mov jmp (bad) outsl lret fidivr or gs mov movsl icebp insl add dec loope jecxz shll std cmp iret pop ret jno add mov xchg js mov mov inc mov jo push jbe or test push sub sbb and pop fisubl cmp imul mov mov jge xchg pop test imul xchg xor add (bad) sbb repnz daa outsl sbb xchg cmpsl testb mov jbe mov fdiv mov inc insl bound movsl jo dec xchg cmp mov jns ljmp inc aad or call dec mov fsts in out push aas xchg stos pop sti lds (bad) popf fmul daa negb inc push cmp fs push mov repz mov jl mov xor cmp adc je mov xor ret stos sbb ret mov (bad) scas mov fneni(8087 mulb pop cmc or inc daa xchg das stc mov sbb sbb movsb hlt cs shrb xchg push dec jg fiaddl pop lock add iret aad aaa pop imul sarb and lods push fbstp mov scas and mov cmp mov ljmp out lea mov stc xor mov popa add hlt pushf and push add cmp nop mov cmp xchg add xor push mov xchg and lahf fsubrl push push sub (bad) jle add scas xchg jne sahf mov gs xor pushf out repnz jbe outsb inc mov nop mov cld scas push (bad) xor xchg sub pop jns and pop js daa cmp fnsave std stos cwtl ret les mov adc in or jle clc push cmp pushf popf cmp jp call (bad) mov pusha and xchg in jne mov cmp (bad) ljmp ljmp icebp lods (bad) adc flds xor roll push push xchg mov cmp rcrb and cli cmp lds cmp dec ret mov (bad) in adcl xor (bad) rolb and ficompl shlb add pop ja scas pop xor pusha ds sub jbe mov rcll jp push xchg sbb xor (bad) cltd pop jae insb mov push adc rorl ret mov add cmc out jo add mov mov mov fistl cmp ljmp add (bad) mov mov pop sarl push pop sbb mov loop and mov mov adc fbstp dec inc (bad) loopne nop fld jb mov jge cmpsl call xor in jne andl cld and inc cmc ficom sub sub sbb xor (bad) stos push cwtl jg pop add push test add xchg rcrl in popf pop push inc (bad) divl inc fildl xor jno mov sbb out jge pop inc add ds shll lock pop jg das ss iret cld xchg xchg push outsl cmp mov cmp scas call mov inc cmpsb roll mov dec leave cmp mov lea mov mov xor jge add fnsave cli leave jl lcall jo retw jns jl test cltd mov push jl icebp cmp and jo pop mov jmp jnp ret pop ret xor mov fs pop fdivs push imul imul pusha lahf push pushl push xor sub mov inc adc cmpsb jo mov inc mov stos xchg hlt xor mov inc mov leave inc inc adcl je dec mov push sub testb inc lods mov fcompl jnp push andb sbb daa mov ja insl sub mov ljmp add push push jmp xchg call ja ja out pop cmpsl les mov test hlt lret and sub into jge xchg scas mov (bad) push int aaa je dec mov cmc push add jo mov (bad) pop loope fdivr (bad) scas es jb lods insl cs arpl loope les (bad) fisttp or lret adc aaa push add and sbb fadds dec (bad) in xchg inc pushf jne ret add jl xchg add or inc push add insl nop dec mov les dec mov popf aaa jo xchg pop fldt xchg sub js xchg lahf imul popa jae fadds rcl push mov sti lds (bad) icebp xlat push incl dec pop fadd std sbb cmpsl in pop aam fmuls aam pop les int mov inc lret sub sub pop inc push shrl sbb mov add movsl push imul xor aam lods dec insl push out (bad) adc mov jecxz (bad) std aas negb cltd mov mov pop adc cmp std xchg frstor in push test inc pop loope pop jns xor in popf shlb mov ja sub in sub xor test in aas push cs dec jl daa sbb ss int3 push jle loope roll jo or (bad) pop push mov fisubrl loopne inc gs lcall in aad aas jns push jnp clc push sub cmc push rclb stos pop push sahf lret pinsrw (bad) jp adc inc cli push lds mov mov mov push push enter inc test lods xchg gs pop mov (bad) lock jmp mov inc ret or in cmpsb aam xchg ds sbb mov pop stc mov scas not mov dec scas mov aas push and sar dec mov xchg negb inc jne pop dec in pop cmp leave dec outsl dec xor add std idivl fcomi xchg fidivr push sbb ret mov movsb push leave xchg sbb xor dec out xor gs test adc and std cli ss jae scas cmp (bad) dec imul js int js sub out aas inc pop fbld sbb ja mov out shrl dec stos xchg push in (bad) loopne pop add dec lods lcall ret dec xchg call fs jno cmc xor mov mov inc subl daa mov inc (bad) push dec imul into les xor shr and bound and dec cs out jnp adcl add add int jns inc sub sbbl pop push roll fist xlat and adc fsubl add int adc xchg js jo (bad) daa jle test movsl or xchg adc outsl pop push arpl fcmove aaa lds jmp fnstenv ds or xchg sub pop cwtl adc insb jno or inc and mov fdivrl inc mov lea mov mov (bad) leave je xor dec test lods sub cmp push cmc sub jb popa insb sbb pop insb pop lods sbb test dec xor and outsl stc lret push push xchg mov xchg sti xchg mov sbb cmp mov and lea stos psubq jae sub fdiv test jo or xlat mov out daa repnz popf adc les divl jp inc sbb mov pusha loop insl dec push lret jne jbe cld push push jae xchg aas pop test sub in push (bad) fucomp fdiv lahf dec sub xor xchg subl mov shrl out pop mov outsb int3 out pop ret movsl sti pop rcrb stos sbb rcr dec sub xor sub testb imul stc les xor data16 loop add xchg cld das jbe sub call push push icebp xor mov inc xchg lret push (bad) and pop jl sub std jnp xchg inc (bad) fdivp std imul aaa lds jo aad inc cmpsl inc int3 mov mov inc insb mov mov adc daa pop out or or stos adc mov daa jmp daa stos jno lcall push push into and push and aaa gs sti cwtl mov add les jge pop lahf in imul es and jo imul or jge int3 jl mov xchg insb lret and gs or inc lods aam add cli fs pop xchg xchg mov or mov insl sbb pop jp jb xchg int xchg ret inc aas idivl xlat pop aaa in sahf test (bad) clc jne sub sbb mov inc xorl imul aam (bad) daa xchg cs push cmp mov push sub jl mov mov mov jle xor test dec lret cmp pop push inc out mov fmuls pop sti ret nop push xchg lret fwait aas mov adc mov xchg dec repnz mov lea mov add or loop stos scas jns sbb adc in cmpsb xorl fwait inc outsb xchg icebp cmpb in pop mov pop enter jne cmp rcrb in add or mov mov insb popa inc mov out mov and xchg lods (bad) aad mov push mov stc fwait cmpsl int3 xor leave lock enter cmp in bound mov outsl test inc jne cmpsl es mov or repz outsl call daa in sub subl pop aad push cs jp movsb sub sub mov or inc pop mov xchg (bad) xor or iret movsb int mov lret mov mov (bad) mov fstpl fdivl jns xor (bad) mov xor xor dec mov pop pop adc ret out loope aam in imul inc lock in mov or cmp add test or cmp cmp pop push cld lock mov cmovne dec fs or mov orb mov mov mov jns out sub dec mov aam lret daa std adc sub loopne enter or mov movsl in imul outsl push test lret pop aas imul sub cmp mov fsubrl (bad) gs out repnz add pop (bad) mov gs in or sub (bad) fsts test ss add (bad) int3 idivl lods clc jg cld rclb and jb xor add or or fisttp dec pop mov fwait das insl adc mov (bad) in rcll inc icebp push ljmp jnp pop and adc jmp xacquire std test mov ret add mov rclb jbe lods pop dec mov mov js mov (bad) (bad) aam inc inc fucomip push sub (bad) and fs push cmovle imul cli fmuls out loop xchg ds repnz incb bound dec rorb add jnp sub fisttpll (bad) or rcrl mov dec outsb loopne xorl cmc sti les push aam jl and lods xor jmp stos push or daa cmpsl (bad) add jae test pop push cwtl sbb inc mov mov ret add adc rolb sbb lret inc mov mov je push mov inc pop adc mov mov sub rcll mov cs cs in faddl sub mov dec pop int and mov (bad) mov fwait aad cmp pusha xor dec (bad) out pop in and das fcompl cltd pop dec nop add pop xchg lcall jge rclb and pop pop paddsw lock xchg sbb pop popa pop lods mov cli adc insb cmp mov lret ja sarl push (bad) sahf xchg ja xor int3 (bad) jae lock jno outsb test xor rorb push outsb add pop fwait jp or jl xor adc ljmp jae sub xor sbb lret push cmc in fwait mov cmc repz push and adc vmovaps test ror xor roll sub cltd in ficoml cmpsl outsb outsb sahf push push fcoms xchg cld and stc inc es xchg pop outsl xchg cmp std cvttps2pi adc aaa call mov jae adc adc out mov (bad) sub add (bad) or push rcrl push xchg pop xchg xchg fdivrp pushf std stc push mov pop pop xchg xor inc (bad) cmp stos adc jo js xchg mov xchg dec pop adc sbb cmp out push sbb sbb jl add xor pop roll sbb in push cmc cltd and xchg bound negb test sub dec inc daa xchg adc adc sahf pop xor mov popf sahf cmp je das dec mov mov push subl mov lcall cltd fs dec in sbb cmc xchg std sbb pop xchg (bad) mov outsl push pop jle shrb pop leave pop cs lds js insl xchg cmpb pop mov sbb outsl jne inc xor xchg stos ja xor js fldl arpl in aaa inc inc in xchg mov cmc jnp mov popf rorb or fs movsb lock (bad) aaa shll aaa aad jb lret int hlt push mov sbb jo cmc in repnz rcr das cmp pusha pop and adc (bad) fucomip push push mov daa jmp add loop sar cltd scas sbb cmp cwtl in dec icebp int3 xchg std xchg test notb xchg mov popf call cmp mov mov push xchg inc (bad) mov (bad) dec pop jb and lods or xchg pushf inc add pop cmpsb mov sarl outsl sbb mov ss mov mov mov imul es mov push ret mov ds je sub dec mov dec xchg leave in pop dec push loop negb cmc xor jle cmp jg mov aas sbb sub sti mov cmp xchg fcmovu add fisttpll xor or pop xor or cmpsl jl rorb jb and clc jno hlt mov iret cmpsl jp outsl add cmp cwtl mov push js jbe jns xchg addr16 sbb xchg jb rol cmp dec imul sbb pusha adc mov cmc dec addr16 (bad) fistpl inc test loope push jp pop or xchg mov mov test jns addr16 jns cld out or xchg int sbb lcall shl jmp subb paddw or test scas pop ljmp sub mov xor cmp sub sti sub pop jne adc je jmp shlb cmp jbe fstps mov and repz out adc les xor es sbb (bad) loopne pop mov test push mov push xlat loop push lods inc lock push test dec push jge or fmul push insl add pop andl aam push insl sbb test imul scas push cmpsl mov shr in imul ds shll dec lods arpl shrl inc or negb in scas sar scas ret or pop and mov ss sub int3 dec and in cmp push xchg mov (bad) shr mov adc and lahf jp loope and shll (bad) mov daa pop xor add aad add mov sbb (bad) dec bound aam mov jne sub lods insb pop mov fdivl ret test mov fbstp mov mov into jle and js nop cltd sbb push mov xlat mov aam mov movsb push clc jbe scas mov xlat cwtl cmc inc push push cli (bad) ds popf cmp jl es add mov sub jp pop and mov orb or add (bad) jo cmpsb bound outsb or adc sbb insb fwait dec rorb jp and jne shrb mov and jl movsb pop aad mov fnop and ss cmpsl std ret sahf pop dec jnp shr cmp xchg repz pushf mov inc inc push jp cwtl cmp ds aas push divps mov adc jmp cltd lcall or ffreep bound lahf insl (bad) insl xchg jl (bad) mov fsubs adc jp jae cmp add cmp iret in scas out scas inc inc jge fcomps and push out ja push adc int3 jnp add fsts (bad) into lcall push mov (bad) or daa mov or movsl lret imul test sub fnstenv mov push mov adc and push test sub cmp cld movsb xchg hlt std jne mov or or xor pop enter push test push mov cmp imul cmpsb and jb jmp sub cmpsb mov jg sbb ljmp cld (bad) faddl bound adc ja std mov (bad) imul xchg sub insb jecxz mov sub loop lahf pop movb (bad) mov popl ljmp insl and dec mov stos sbb pop xor cmpl aas in adc lret sbb mov test sti mov push jle xorb (bad) dec mov dec lret loope popa ja jbe mov push clc add mov fcmovnu cmp jle scas addr16 xchg repz pushf or mov lock and sarb jns inc mov push dec cmp ss arpl loopne lret xchg jbe (bad) xor icebp pushf cmpsl push bound sub addl and test (bad) jno and jae out push cmp push or push fldl push xor arpl xor mov and fisubl mov mov aaa cmp dec scas mov mov and jl idivb fldlg2 js addr16 lahf xchg sub lds in mov mov pop mov sub lret add std pop lds scas fcoml mov jp mov sbb loopne ret cmp mov inc xlat inc cmp in adc sbb mov fcom add outsl adc addr16 lahf mov pop push dec push mov ljmp jb sbb arpl out mov mov leave aam jae or jecxz and pop sub lea or out sub daa movsb jb arpl cmp cmp add sahf xchg mov stos jae cmp dec push lods jecxz out (bad) js outsl inc add sbb out xchg or mov out cmp jmp loop and hlt xchg faddl cmp mov imul cmp xor push outsl out xchg jno stos scas in xor mov divb mov sarb mov jb stos pop scas dec mov lods cmpsb add inc (bad) (bad) lret jo adcl outsb jb inc (bad) mov int3 fisubrl and addr16 or test ljmp pop sti (bad) fldenv stos jecxz stc push jl jae push out jno imul sbb xor rcrl das scas imul mov mov mov cmpsl pop jl xchg and std pop rcrb not sbb into mov jbe outsb push mov mov or idivb dec or fsts aam mov sbb dec cmp data16 mov sbb (bad) mov add jnp push pop lock (bad) test sub shlb pop mov int3 lods or (bad) lods push lahf (bad) mov xchg jle jl cmp stos daa mov fidivl sub dec add cmp out fs dec add aas xchg xchg es imul rolb sbb insb xchg push pop mov pop and xor or jns inc lret mov push and test jg movsb hlt vpunpckhbw pop (bad) inc stc sbb pop dec fstp add xchg add movsb mov (bad) mov mov icebp ret pop lds out cmp (bad) das cmpsb jo cmp lock sbb push ja mov or sbb in mov inc lock or xor sub jmp test enter in fnsave stos into jl addr16 clc clc and jle jle mov sub push lret int and (bad) adc hlt popa mov sbb dec pop inc fcoml xor add movsl jl inc ja sbb xlat mov sti gs (bad) mov ds ljmp xchg fsubr clc pop jne in in mov sub jo cmc fmuls or enter movsb inc cltd push jns xchg add jae sub jne lods cmpl (bad) sbb adc adc fistpl pop xor mov js fisttpl ja sbb adc or insb outsb push outsb jmp cmp lea jle cmp or insb (bad) mov and mov pop dec mov or js lds jge addb icebp in adc cmc fisttp iret adc lret mov test jl push nop sub and sahf lret daa ret mov push and divl or xchg lds mov xor jnp xor mov xor dec adc lds mov inc adc arpl ss pop cmp outsl enter sbb jle lea imul push push sbb es pop daa (bad) adc das push jl das loopne or and mov mov fsts lret aad cmp loop add cld xor pop fsts dec addr16 jb test cmp add or cltd push mov push push push pop push daa mov lcall jb shl jmp cmpsl xchg mov jno cmp push sbb add add mov call mov inc je mov imul je xchg and int3 bound jecxz imul ljmp rorb sbb cli fcmovb lcall mov add lds loopne push mov xor xlat sub cmp mov sub nop inc sub pop inc sahf fmul mov outsb insb adc cld cli sar movsl pop dec pop jge adc mov call add dec lahf ja mov mov pop bound cmpsl push fwait out add sub loop add jno insl or sahf (bad) cmp pop fist push incl push (bad) mov aas popa xchg adc push cmp mov les mov cmpl jp sahf or xchg or push (bad) sub popf int3 dec imul jnp repnz test mov ret xchg divb hlt pop mov jo mov jae sti packssdw clc mov jne jnp cmc aaa lret xchg or rclb and cltd cmp push inc sbb inc jbe xor lcall xlat rol roll cmp outsb pop inc push jp mov in stos jno lret fs jb out popa and repnz mov bound mov inc sbb loop pushf lret adc sub ja cmp mov ljmp (bad) lea mov xchg adc decb fcomps inc sub fnstenv cld jae cmpps popf push fwait mov or inc ja pop mov fstpl (bad) out mov add inc dec adc imul test push and xor imul pop jecxz mov mov insl std ss aad inc add pusha scas mov jl mov mov sbb mov and lret insb data16 cmp mov push ss jl adc movl mov aaa popa (bad) in cmp fucomi fistl test fs aas xchg sbb orb xchg fxtract xchg inc stos and lahf and mov cmp sbb mov lcall das sti sub cs lahf jae sbb out scas pushf je (bad) fwait sbb push jle addl hlt pop in stc cld hlt adc call fldt loop xor mov nop fdivr (bad) jbe sub inc ret (bad) cwtl xor add push pop and pop movsl fisubl xchg mov je out pop xor shrl (bad) shrb xor aam loope push mov je jb cmp xlat ss sub sbb enter stc fnstenv jl cltd and pop push in arpl mov mov out daa not jmp xlat out sub out xchg pop dec lret mov adc adc mov out out stos movsl outsl mov dec bound (bad) loop,pt mov fcom cmpsl (bad) cmp popf adc xchg push add sub icebp mov faddl (bad) push dec loopne aad adcb cmp pop pusha bsr aad jp cs xor pop iret repnz rolb mov mov or mov mov add clc cmp jmp fcmovnbe std fbld xchg mov ds jle mov inc pop test ja jb in imul in neg insl inc push sbb sarl popf jnp push shrd pop and mov sti cli inc in or or or aas iretw fiadd xlat add or aam call jae inc xor outsl cmpsl jne pop cmp mov (bad) hlt out jg out mov or popa mov xchg lds push jp lret mov mov xorl (bad) jbe sbb mov push mov (bad) aad xor (bad) and inc (bad) mov mov pop and cmp data16 cld outsb test dec mov push int mull ljmp idivl mov jp mov mov push mov xor push repnz push xchg insl adc fwait int sbb je dec mov in jbe (bad) xor mov lods and xor cmp ss lret (bad) jb sbb aad xchg stos sbb mov scas jbe js mov jo push int3 fs ljmp aad jp add shrb push or cmp stos in outsl xchg mov lret cmp push xchg in (bad) stos call ja daa rcrb mov and fild mov pop adc sbb jne lcall std mov sbb aas out repz inc data16 jbe jecxz lret jmp mov xchg stos inc sbb sub cwtl lcall inc xchg dec mov bound icebp push int bts jge add stos gs hlt jae into or fmul ret jg aas cmp dec push mov lods mov pop hlt or add call push mov hlt idiv cld shlb xchg dec jmp push imul inc mov clc je add xchg inc (bad) mov xlat lret lret push mov aaa ffreep add jl pop in (bad) rorl jb fisub in or pusha jns ja clc (bad) movsb ss js andl inc mov cmp sti fistp iret ss xor (bad) dec xor push sbb in loope pop mov data16 ljmp lock es (bad) leave dec faddl dec add insl and sbb xor lds imul (bad) mov (bad) loop cmp cmc push adc cwtl push inc fdivp lahf jae sti jnp and out cmpsb push dec mov fidivr jge mov lds mov stos or xor push das mov sbb popf pop ss bound jo out jge inc dec mov cs lock (bad) fidivrl aam jge (bad) cld mov add int jns cmp adc mov fmuls (bad) mov fdivrs dec mov call lret iret idivb add je mov int pop fwait call push leave pop icebp sbb xchg cmp repz push dec xor gs ja test hlt pop mov dec cli sub inc aaa cmpsl das imull cmp loop shrb jbe xchg inc or inc lret fcomip adc mov mov sub lret adc mov lret mov mov out or sub adc and add xlat test insl jecxz xor outsb push es in mov popl stos pop clc inc push xchg mov scas movsl and je or xor push xchg call or lock push adc sbb add sbb imul sub pushf cmp mov cmc mov js jnp iret cmp lcall mov out push mov or (bad) std and pop arpl xchg lods and or push pop mov xor (bad) inc out sbb xchg addr16 xor sarb daa lods stc fisttp lods jmp addr16 fisttpll jecxz add sbb push out test pop sub lret cmc aam mov (bad) lds pop fisttpll int icebp push add shll xor enter adc mov testb hlt jae and repz sub nop loop cmp insb rcrb pop mov outsl add in add outsb fwait mov pcmpeqb fadds into (bad) scas pop sub aam adc jge pop test aam setnp mov fcoms push stos out sbb lret xor scas jg fldenv movsb adc or movsb pop mov incl in jl clc mov (bad) mov out lock mov loope mov jp xchg pop int aaa mov lret iret imul iret cs cmc pushf adc mov pop fcomps sub popa mov mov dec sub daa mov mov mov adc adc lods out imul and bnd cs sub div int xchg aam xchg push (bad) aas mov imul xor outsb sub fmuls test cmc mov mov jge push mov into push mov fisubrl push gs cmp out out jno lods sub call inc (bad) mov dec sbb data16 lods rclb inc mov push mov outsb inc fs xchg rorb in add loop sub mov outsb out and dec mov ljmp xchg shr xchg mov fild mov and push xchg lds arpl stos imul in xor movsl xlat stos mov cmp mov call ret fldenv push notb jecxz sahf test pushf jns hlt sub outsb ja fimul or inc repnz outsl dec out repz icebp std les add jnp xor lret testl adc lods pop psrld jne and xchg stos aam inc xchg movsb jl fwait cli mov inc push enter fs mov imul or or sub jl mov cmove pop (bad) fcomps jne lock push loop les add mov jbe aam xchg jge add xchg bound mov inc jmp pop sbb xor xchg sub sbb or hlt add test or insl outsl fidiv leave mov cmp push inc test outsb mov (bad) or scas scas sbb lahf push add adc xor pop es sub je notl test jne sub fs lds and (bad) pop push or mov sti repz (bad) fdivs sbb inc dec xchg rclb dec jnp ficompl inc jp mov xchg add enter xchg fmul dec and clc cwtl pop sbb pop sahf mov test orl shrb pop (bad) jecxz mulb xchg or push dec dec xchg xlat bound pop es scas shl or dec icebp mov adc add loopne popf xor xchg stos pop xchg dec lcall lods movsb push (bad) pop outsb lock int mov ja and cmc dec push sub xchg mov sbb cmp mov (bad) jge jmp cld out daa in addr16 frstor fidivrl test lock ret aad xor or lea xchg imul es test into dec add outsb xchg mov scas xchg mov mov sub dec mov mov cmc loopne fcoms mov mov addr16 sbb in jno and push jbe xchg or mov sbbb mov jge cwtl mov aam inc adcl test push mov movsl lret push out addr16 outsl xor sub xchg mov rorl sub pop (bad) push sti cmp das sub jne int fs mov aad pop dec sub push fcompl shrb dec inc mov mov adc mov out seto fwait dec pop push add push pop dec pop mov jge mov lods mulb and pop push iret jge (bad) mov fcoml imul sbb std cmp jbe sbb aas push or arpl lock pop xchg rcll pop fwait outsb push fldl ret shrb inc mov sub fidivr ja andl in pop icebp pop push add lea (bad) insl dec jge dec movsb inc mov mov fwait jae (bad) fmull push stos jno add jns pushf xchg sub push loope push stc (bad) out ret jg jmp cwtl stos sahf scas pushf adc (bad) push pop (bad) pushf mov push ljmp lahf (bad) xchg pop imul jb or add xchg xchg push xchg ja pop mov sarb push jle sbb nop (bad) xchg loop cltd xor add sub hlt jmp push mov outsb dec pushf shr cmpsl mov in jne push outsb jnp negb scas mov inc pop sub sti fs clc xchg iret jo sbb stos push fdivp in push movl pop sbb ffreep xchg (bad) lea push mov xchg jne jmp stos push out jmp pop lds xor xchg out popf popa mov cmp cwtl mov add mov sbb xchg out xchg push push lock xor sbbl scas mov lret fnop or sbb push jp lret push push jns pusha popl in mov jne outsl jge (bad) aas mov and jnp std (bad) fld imul mov or add mov (bad) ljmp cmc dec inc and xchg andl ljmp sub pop cld stos mov xor in call fcoms negl jne repnz sub pop or sub adc xor add sub fdivs (bad) cli dec fildll das cs bound outsb sbb add fnstcw and repz xorl inc daa mov jmp jno int3 imull lods xor add push push xor out cmpl xchg lods cmp hlt imul cmp lock (bad) and jecxz fdivs ficomp add cmp fs pop dec cltd leave mov cltd and scas les out xchg pop add rorb imul dec sbb in dec jle sti pop mov mov out gs repnz xchg ljmp int sbb mov in cmp bound lret or dec cmp cmpsl mov (bad) mov loopne push out fldenv pusha dec mov xchg pop pop bnd sbb adc divl lods add lcall add cmp lea mov inc adc ffreep idivb es cld bound aad lahf add pop out cmp ret pop (bad) fcoms sub scas (bad) xor lret adc pop add jp lds cmp mov mov je orb repz or mov stc cld push add xor xor pop scas mull jb ds sahf in lahf pop mov xor jno cmp movsb cmp cmpsl dec lods ljmp xchg jge gs inc int xchg jo gs jne mov push clc call rorl pusha cmc mov push push scas (bad) mov clc mov lret pop imul call and mov mov (bad) cmpsb cs lds inc cmp pop mov mov and ja in pop repnz xlat sub faddl or mov cs stos stc sbb loope movsl lcall mov mov pusha js dec dec fwait loopne (bad) daa scas clc test inc push (bad) gs push out aaa enter pop mov fsts dec pop cmc mov and sbb popf sahf ja cmp xchg lret or dec ficoml (bad) jbe sahf imul arpl lea mov cmp adc ja jnp sub inc mov (bad) dec (bad) rep out pop fs int enter fucomp jnp mov fdivl lret imul aas or or pop dec mov pop pop mov sti in add push cmp xor aam cmpb xor mov into imul jbe mov movsb or push insl shrl pop jg rcll mov adc out mov repz adc mov test sbb cld es fldenv or je daa jp in mov sub pop fsubs adc jb jecxz mov or sbb sub je repnz mov push (bad) and scas fcomps pushl push push leave sub lods sbb mov lret mov pop ja mov outsb pop sbb add push int3 xor insb xor xchg imul mov rorb hlt ror fstl jmp int3 test dec sbb and lret mov sub ret mov shlb xor inc popf sbb mov dec lods repz fcoml popf jmp mov xor pop cmp cmp cs sahf pop ss cs cmp pop int cmp fimul shr jl jno mov arpl adc add sub mov lret cltd jns xchg push sbb inc or jecxz repnz jmp xchg push imul or jno std lds (bad) aad fsubl jo enter movsb mov xchg (bad) mov or or not ja dec (bad) les xchg arpl mov add pop fcomps sarb adc ret cmp fnstcw shlb adc sub orl xchg pop scas int dec in negb pop les mov mul pop pop sahf push xchg test fsave les gs lcall fs pop add aam jle fisubl pop pcmpgtd lret xor jmp and inc ljmp out adc inc sbb push sub int3 pop mov fistp arpl mov in mov add xor mov jp nop stos push movsb in sahf into pop lods (bad) pusha or mov jle outsb popa dec add pop out push and (bad) cmp insl addr16 mov inc lods xchg out lea jae popa cltd movsb mov rcr sti jbe ja in sub mov cmp (bad) jne dec repnz cmpsl icebp adc mov stc (bad) sbb pop fistpll push pop jne dec jne popa xchg stc jg es xchg mov and or arpl rorl mov push out cmpsb ss nop call dec cltd dec mov scas sbb stc push push mov sub jae jmp sub push sbb call jb xchg adc clc jp mov (bad) or in or lahf in inc cmc sbb and dec xchg rcrl or hlt js addr16 dec arpl fist aaa jmp mov popa aad mov push xchg loope test dec popf dec ret daa orl aad xor movsb push ds and xchg jecxz adc sbb dec cmp dec dec adc aas cmp std fldt inc mov mov xchg ret jmp cmpsl adc jno jno (bad) jg sub cld inc and sub sbb pop mov movsb repnz mov je (bad) dec jns inc jo jle jns pusha pop inc iret or xor (bad) cld mov fmul xchg cmp or mov test stc xchg fstp xor push shlb or sahf movsl jmp inc sbb repz fwait mov (bad) mov rcl xchg cmc xchg fwait xchg mov inc sar icebp pop pop cmc (bad) fcompp push sub ljmp lds and or outsb mov cmp add mov mov sub mov mov fmull bound pop les cmc bound mov iret lea mov push adc out mov dec (bad) ljmp xor mov mov stos add pusha xor addr16 loop sbb (bad) leave xlat adc lds and xorl sub push dec into dec aas inc cmp sbb fdivrs pop mov dec inc cmp out movsb jo xchg push popa dec cs leave sti (bad) xlat addr16 mov bound ds in cltd cld jg movsl mov lret loop or jns outsb push sub ljmp push mov push iret mov add push lods dec lods sbb aaa mov sbb jo dec or and outsb outsl daa cli loope jge jmp pusha lcall pop mov insb sub xchg mov pop enter inc or push jp int pushf inc std movsl xchg aaa dec arpl repnz insl jne in jle and test into jl xorl sub jno pop lahf popf adc dec das and jno sbb mov test dec sub aaa inc jnp mov lcall fldcw and xor mov xchg pusha cmpl add ss cmp xchg not nop xlat push sub jbe cmp lock sbb jbe mov (bad) dec ret das js mov mov movsl addl inc mov cltd pop pop test aas mov enter in cld les ret xor push mov xor inc into cmp mov mov xor push add xorl dec push xchg mov add mov cmp cli push mov adc negb xor cld into push push mov in add (bad) xchg pop (bad) movl inc cmp push push jmp or sub mov sub mov sbb in add dec inc cmp ss test ja bound ja jno sahf inc into sbb enter mov mov mov fstl inc dec xchg aaa loopne xor cs jmp pminub dec (bad) mov pushf (bad) cmc mov mov clc jle imul xchg sbb (bad) into dec pop push adc add jnp jo sbb gs pop jne movsb xchg cwtl jns loopne fwait in aad lahf (bad) std xor push and lret mov xor lods mov xor xlat xchg add push fisubrl dec hlt inc cmc xchg gs repnz ds mov es mov inc ret fwait lret mov mov xor notb (bad) dec or mov rolb cmc sbb xchg aam (bad) xor dec subl mov or push movsl add adc int3 add imul lock dec or and mov aam nop cwtl je fs add sub ljmp scas mov leave pusha mov data16 test cwtl lea pushf dec cmp rcr sbb pusha and loopne fsts and ja adc and fwait aaa mov (bad) fsubs repz push mov mov sahf cltd (bad) imul mov ss imul mov lods push adc negl pop add loope mov (bad) enter adc pop inc xor mov fsubp sahf mov je cmc loope pop loop (bad) adc jp rcll mov xor insb rcll stos movsb outsl jmp and mov sub rolb pop dec lock daa cmp xchg adc std int adc sub out xor cmpsb inc inc inc or imul mov push (bad) mov push cmp cmp loopne cmp pop lods push repz sub jle test adc sbb rorb cltd call pop xchg jbe call mov pop push popa pop pop nop jmp pop adc xchg insl lock inc xchg mov insl push sahf sbb ret iret cmpsl mov jl nop call and or xor int3 loope loopne mov cmpsb in mov xor dec hlt sbb push std inc (bad) (bad) arpl fmull pop inc push jg xchg inc pop hlt inc popf adc ss sbb xor mov or fisubr or push lds pop (bad) movsl mov jge sbb jecxz cmp push icebp int3 je adc loop jbe nop lods in add scas js aad icebp pop jno add push inc fidivrl or testb out inc fisubl push int3 aas sub push and test inc movsl xchg mov cmp push dec std mov adc lahf mov adc ljmp stos jmp popa push pop mov or or cltd addr16 push cmp aad xchg or sahf aam pushf push or jne mov mov ss sub js and and jmp or loopne pop aad scas into popf movsl push loopne insb inc addb pop iret add pop push jp ljmp insb (bad) xlat std pop pop mov xchg jecxz leave push ja leave sbb mov sub mov inc push xor iret aaa mov out enter or pop loopne mov loope jmp and pushf inc stos std ret or es mov adc pop mov loope push xchg dec or in (bad) cld push cmp jb in sub adc pop xchg cmp or inc mov cmp cmp inc or lods push cmp mov test pop cmp lds mov pop mov inc (bad) dec dec add sbb ja rcrl in xchg addr16 gs xchg inc imul mov push divb mul lahf sub pop sub icebp inc aas mov dec push xor mov jp jp cmp add dec jle scas add xlat mov sbb mov push mov and push add loopne in adc loopne jmp loopne outsl inc (bad) jb lds or lahf add fimull addr16 lods pusha mov sahf jo pop fadds sbb pop mov xchg cwtl int sbb push add push sbb sti int3 pop mov mov xchg sti push pop jle or push push xor dec in shll (bad) clc inc ret inc mov iret xchg (bad) sbb inc inc xor mov dec or repz mov push jge loop and inc push inc inc test xlat ss loopnew xchg lock sbb test mov mov dec shl shlb sub cmpsl imul scas ljmp push clc lret mov mov lods int3 pop stc ret lods mov leave xchg je clc jmp data16 sbb add push sub into pop rsm test (bad) into dec xor add cmp cmp dec dec (bad) xlat in es cmc sub int movsb lods dec mov adc adc cmove aaa int3 sbb pop push (bad) iret push push mov cmc push in pop ret enter (bad) sub push inc mov fimul inc int3 mov scas aam and call pop mov scas mov sub push cmp rclb lea jb push iret jmp stos mov and and jge push call andl hlt mov loope in pop rcll test lds cwtl inc dec xchg outsb inc (bad) out add adc jno cmp mov push fs mov adc pop push ja dec push test mov bound or mov jg sbb adc fs ljmp lahf arpl decl popa cmpsb push lret pop inc shll mov xorb xchg dec push inc outsl fdivr add jne mov fild mov ror mov loope mov enter movsb loope addr16 add cli std call mov xchg inc clc xor fs push lea pop sbb movd mov add mov fisubrl scas addr16 movsl inc dec pop and dec mov and pop repz into lea mov push sub mov add imul sti adc lret in mov mov popf push (bad) pop sbb cmp stos pop data16 adc or cmp jnp or setl ja mov adc fsubl (bad) popf mov mov dec push push sub ss subl inc push mov inc inc cld (bad) loopne call outsl adc and rorb in int lret adc sahf incb das dec inc mov (bad) repnz (bad) repz or or mov scas cmp outsb cmp dec mov mov aaa out cmpl mov fdivs sbbl mov fsubp shrb ret fstpl fadds mov or mov cwtl inc mov sub insb lea pcmpgtw and int (bad) hlt dec lahf or lcall jecxz dec mov call inc xchg cmpsb mov stos inc cmp std xchg fcomps ret loopne gs inc inc xor and add inc or adcl outsb (bad) cli sub cmpb gs es sub test stos popf arpl mov repz hlt cmc push push ss pop inc insb xor decb xor push add jne ret out xchg xchg imul inc lcall subb or sbb pop gs inc or ret movsb insb scas out jno (bad) sbb outsl mov jle,pt add (bad) (bad) xchg sub jnp (bad) scas sbb test fstps addr16 jne test andb cmp jg clc mov sub cltd mov in inc cmp inc cmpsb mov movsl mov cmpsb jg add lods xor aaa inc leave and dec mulb xchg inc mov sub xor daa shr testl mov inc clc call popa fcmovu pop jns jb loopne xor xchg aas adc sbb jo mov ja and lds fisttp arpl aam jge mov adc jbe cmp cmp lock jecxz js fucom ret repz out aaa mov mov cwtl sub fcmovb aam shrl test popf gs movsl int3 xor mov fsubrs cmp dec into ljmp xor sub add push pop and jmp roll adc int3 mov ret dec rep inc repz rclb mov mov inc fstl in fsubs lods in fs mov popa mov mov mov es mov sbb fnsave cwtl enter ljmp (bad) aaa in sub mov test lret (bad) push dec sub gs sbb mov adc mov xchg mov insl push dec scas dec or ljmp je test and leave inc pusha pop into adc in mov insl xor fidivr push lea xlat faddl hlt ss rolb das jl out and sub gs ds rcr aaa rolb dec gs fadds adc or scas adc and roll shrl ja dec (bad) ss sub dec rol jmp pop xchg xor stos (bad) in popa adc cmpsl fwait pop popf xchg fistp jecxz dec mov cmp and loop leave pop sbb push xchg and xor inc lahf iret rorl inc (bad) lcall dec addb aam sub push push data16 mov sbb in popa or mov dec int pop int push setbe xor xchg inc xor xor cld xchg push lds xor addl test (bad) mov fisubr adc add jbe jbe iret out or adc and lret xchg adc (bad) push inc xchg sub sbb lret adc lcall push jmp xor out scas sbb pop jno xor push inc adc adc mov jle xchg add jne pop jbe push cwtl adc mov inc jns scas jne pusha push rorl sbb out push pop dec clc fisttp xor sbb dec lahf jecxz add inc aaa lods ficomp popf in xchg cmp inc dec jge or sbb xchg ds xor mov sub sub orb mov mov mov xchg pop enter stc inc lret inc outsl lock jb insb out jno mov pop leave or (bad) pop jns xchg test xor (bad) into ret mov inc cli inc repz iret outsb loopne cs and frstor cs arpl loopne cmp frstor or xor fimul out stc xlat in aas outsl out xchg (bad) cli mov and sub adc stos adc mov jle,pt test lret sub dec adc push xor jno adc xchg fistl gs cmpsb sub test inc and lcall adc adcb inc fdivs xchg xlat sbb cmc in mov inc stos or and add (bad) sti fnstenv fisttp xor mov jns pusha and xor ja or ret push iret xchg xor sarb push imul int mov cmp push cmp push clc loope mov add xor cli jno cwtl les sbb in in ret mov stos lret out mov lret sub aad jecxz aad daa and or sahf aad sub pop jp movsl mov hlt mov scas and in mov popf hlt setae dec sub ret jp leave xor mov sbbl lea adc cmc movsl into punpckhbw shl nop outsl std jp int (bad) cmp idivb (bad) adc shrl (bad) jae enter fs sahf call jo push flds insl test pushf adc fdivrp sbb dec fisttpl xor addr16 xchg fwait mov popa and xor mov pop idivl ds push test jnp and and arpl or leavew sub fiadd daa push xor push and cmpsl xchg push pop imul mov adc lds insb jmp aam or loopne cmp (bad) or or xchg jb gs mov aad sub lea loopne addl mov gs (bad) xor adc and icebp insb (bad) xchg in data16 push addl jmp movsb popf movhlps push roll lret ja mov outsb (bad) lcall popa adc das mov add cmpsl ds add sub sbb xchg es cwtl and jne jl and mov mov cmpsl (bad) cmp scas out movsl lret out bound pop movsl mov pop in pop adc scas mov mov pushf jp in xor std stc dec aaa xchg cmp outsb push movsl test (bad) push movsl cs (bad) push out inc incl pop loope cmc xchg insb fs mov leave icebp push xor and sub dec sbb pop arpl js push sub fwait imul fcoms jp dec add loop add push xchg cmpsl pop movsl sbb push inc dec jmp lahf stos inc (bad) dec xor insl in mov stos cmpsl mov lock shlb push lock push (bad) inc sar mov roll xor xchg dec pop jmp mov aad insb (bad) lcall mov pop jbe cmp in mov sbb fwait sbb sub fldt or jmp (bad) and xchg insl stos xchg daa bound lods faddl push and scas aaa cmp imul leave lds flds inc adc xchg popf inc or jnp dec jg (bad) out mov jge insl imul mov clc ds ss mov xchg ret xchg lahf xor mov push mov xlat test xchg add or movsb lcall mov jne loop sar and sahf fwait adc push pop loop mov leave mov scas in push imul cmp and mov in and lods sbb (bad) (bad) stc dec mov xor adc mov cld mov dec push into repnz adc jae cmp cli pop jne mov ljmp pop mov push adcl mov jp fnstsw lret icebp xchg jl lahf lret loop imul jl,pt loope push or xchg mov and mov inc or fwait popf mov adc insb add jne arpl popa inc daa push data16 idiv sbb cmp push ljmp test mov cmp daa divps xor cmpsl pop sub lea pop xchg loop xor lods mov hlt pop (bad) pusha outsl test push in xchg fdivrl push in ljmp pusha jns daa insl push leave mov imul mov ret sub mov mov (bad) mov push push adc imul xchg out iret sbb sbb pusha cmpsb push or dec mov mov jno shlb sahf test mov imul cld push lahf push ret inc cmpsl adc pop es inc scas inc inc xchg sub stc stos mov adc inc pop cmpsl dec and insl sarb bound iret pop out or jns push lret mov ds sarl pop push mov nop popf push das popa sbb clc jne sub jle (bad) cmp rcrl lcall xchg out pop mov imul (bad) cmp cmpsl mov sbb sub cmpb out dec out out xor jecxz push notl or push or (bad) ret pushf sahf sbb or test add pop jno fld jne xchg in imul fldt add fistpl (bad) negb std call sbb fld mov adc or stos pushf sti outsl out lods ljmp sub fist push sbb repz popa adc mov ss add inc add cmp mov inc mov cmp add xorl sub sarb pop xchg sbb xor nop stos movsl jp add add lods clc or or outsl jns out mov push popa lret pop or xchg mov add and pop out xor mov lds arpl push pop loop loope (bad) test movsb out sub xchg movsb test xchg jo inc (bad) xchg push jg mov mov ror imul dec mov frstor sub mov pop pop cmpsb shrb aam xchg int rcll xor fwait xor xchg xor jae or or bound call dec bound sbb lret imul mov arpl fwait cmpsb mov cwtl mov and or in inc stos jmp ja fisubrl lcall sub xchg ds cmp inc cli push sub inc ret xor outsl xchg mov and xchg dec outsl mov or sahf mov sbb rolb pushf rolb sti pusha arpl xlat fistpl inc inc add cmp pop lds mov xor sbb cld cltd enter lahf adc jg je or cmp test pop inc ja xor and sbb push (bad) dec inc sub sahf push lret leave mov rcrb sbb addr16 push cmp out jg call cld mov push imul sub lock loop pop test push xchg in push inc xchg clc dec loopne (bad) mov call scas jle leave mov ljmp test (bad) pop cmpl adc mov outsl repnz pop (bad) jmp mov push adc lods cld das sbb das jp inc (bad) clc mov jmp push pop jae mov inc and imul xorb into mov pop call scas pop (bad) mov push sbb fcmove cmp adc lcall aas loope or xchg and aas sahf sub (bad) jmp rorl sbb push cmpsb cltd je xor sub cltd add test inc out sahf js mull dec repz cmpsl js aad xor jp ficomp push sbb or (bad) inc and nop clc dec cwtl hlt cmp stc lds add lret hlt push adc jns push mov lods into adc mov or addr16 push add add cld push inc and or xchg cmpsl arpl inc scas lret add push mov pop das fnstcw (bad) mov rcr insl or xor push inc (bad) add xchg push jb adc int3 loope xor out or or inc pop xor je pushl adc sub repnz push mov mov mov fs jg nop push mov push sbb push adc mov sub aad test aaa imul sbbl push dec mov pop cmp inc jo repz and jge xchg jle repz jge or push int3 cmc ret mov scas and mov (bad) jmp add fstpt cmp in shr lds xor lret pop or jno jg adc mov inc (bad) pop push sbb (bad) push dec pusha cmp pusha push test xchg mov mov mov scas jmp mov fsubrl sbb dec lea repz sbb push sbb les cmp das dec push cmc cs xor movsl push sarb inc inc adc lea lcall inc cld call loop or or mov hlt mov aas jmp inc fistpll popf fisub aam out pop addr16 stos scas adc adc xchg repnz inc mov enter adc add fsubrp add mov shll mov pop ss xor enter pop push fnstcw rol (bad) mov (bad) out dec lock jle xchg and adc cmp fdivrs (bad) add dec fcoml cmp sbb xor rclb test mov push sbb into iret xchg into push mov cmp stos orl sub mov js scas lcall cmp imul pushf shlb push dec sbb cmc pop inc xor int push mov pop incl loope lret mov fsubr cmp call add mov movsb sahf mov mov cmp movsb pop or or mov (bad) push ljmp cmc in jne outsb lods out das mov (bad) (bad) icebp stos gs mov (bad) stos cmp sub test sub rorb inc aaa mov push (bad) (bad) in out fildll subl loope xor sub popf cs xchg sbb fsubrl hlt xor fist icebp push orb mov jnp int mov push mov jl jmp jne mov rcll bound mov mov int sub dec pop ljmp aas fstl in leave mov lock jo call stos lods stc xorl pop iret dec (bad) fcom cmp xlat dec jecxz shlb sti jg push call lret movsb dec iret pop jmp ret pop xchg lea fnsave sti mov jl xor add sbbl popf clc int (bad) adc iret mov icebp adc push xchg movb nop js in outsb xor pop shrl idivb loopne mov clc jbe adc xchg scas jb les mov pop sbb and lods inc cmp mov cmp jg jnp pop adc std popf and lret popf scas xchg adc movsl add pop test push iret xchg mov adc sub mov mov adc fisubl loope inc call xchg fisttp insb and jge dec icebp jb xchg jge inc and inc sbb mov lcall xor (bad) icebp jmp rorl mov insb cmc jnp imul ss mov inc or lods mov (bad) js pushf rolb insb cltd movl fisubl aad push outsl push mov adc rol pop lahf mov dec xor and sti sbb cmpsl push scas jp xor mov and sub cmp cmp adc sbb mov sti hlt ja and mov cmp ficomp adc pop cmpsb inc cld cltd xor fisubrl or add movsb data16 data16 push xor in cmp sbb je mov and push and fnsave pop lods or test inc adc ret jg jbe imul cld stc push sub inc in daa and iret bound jle scas imul xchg insb shrl or cmc cld lods mov xlat dec mov test fwait sbb movsl inc and int3 jno mov lods nop je mov ss arpl pop mov clc cmp adc pop sbb adc mov cmpl inc dec push push out mov arpl fs stos or (bad) cwtl push pop andl cmpsb jmp push push in xlat or pop out std pop cmp jns mov dec inc and and mul inc push pusha jne cld popa pop outsb jae std push out stos jo xchg arpl add xor (bad) mov pusha cld adc mov mov bound das adc dec push xchg and mov jg mov push mov xor lcall sub xor cwtl cmp cmpsb sbb push in cwtl (bad) hlt mov inc dec pop mov aad sbb add repnz jb enter mov sbb enter into test inc aad add mov inc or mov retw xchg pop push je push scas adc shll dec sbbl jbe mov (bad) leave (bad) mov mov sub or cmp mov mov push inc pop mov jb push stos mov cmp pop mov sbb out sub mov movsb pop jl and aam sub sbbb pop xchg inc popa fnstsw jge adc (bad) sub jecxz mov xor je add jnp shrb fistpl jl ret loope or pop jl fnstcw add not idiv loop jge or mov or jmp adc mov inc lret dec aam and rclb dec hlt pop mov adc shrb imul std insb mov xchg jns add pop xchg mov mov add (bad) xchg sahf sbb sbb data16 dec lret sti push xchg add or icebp and inc leave xchg shlb cmpsl icebp in xor inc pop or imul inc in fcom mov mov jnp outsb out (bad) mov and in nop roll sbb dec and cmpl lret es (bad) ficom ret cmp jle into or xchg (bad) adc test adc mov xchg cmpsb stc test (bad) icebp and adc jbe and and add dec popf loop inc das pop pop push lahf pop or adc es clc fcoml pop sub mov scas or mov sub (bad) movsb sbb mov mov cmp mov inc mov dec popf pop inc cld stos add pop mov xchg mov sub loope aas popf bound sbb jge mov cmp and scas popf enter iret loopne jae aam bound les fidivr outsl inc into mov xchg repnz dec int mov ja jecxz sub sarb (bad) movb movsl scas sub scas mov lock jae fisttpl and xor jmp push les mov mov fdivrs dec mov sbb adc push cltd cmp pop jle notl mov dec dec pop adc lds fcomps xor idiv out push jle xor and mov sbb out insl mov sti lods (bad) jo push push repz sub jb lret ds ds or add and ss or hlt cmp and jae stos imul mov xor add sahf lret mov scas mov sbb je jnp stc mov gs outsb dec push jg jle xor fcomps imul mov in fstl pop push push pop mov jecxz sub add notl pop xor jge test jnp (bad) cmp dec sbb push add (bad) call sbb mov sbb and xor gs mov test clc scas adc inc mov movsb jae jp or jno lret repnz xchg shlb inc lods sbb cmpb inc (bad) cli (bad) testl sub icebp mov js jmp lahf jmp mov cmp push pop cmpsb je arpl jns subl pop push lods jno fcmovb mov xchg lods cmp sahf mov pusha mov xchg gs pushl test jmp addr16 dec test test pop inc jbe frstor stc mov xor dec ss addb rol movsl rcrl xchg mov pusha aaa dec sub or mov scas test mov data16 iret sub pop rorb (bad) dec enter fldt push mov push outsb movsb inc jno jns lods pop dec jae xchg imul push xor mov std out or and mov xorl sub lret and leave hlt mov cmpsb je aas mov pushf jne movsl ds ja mov shrb fadd movsb jnp iret cmp xchg fiadd mov shrd test cli sbb lret jbe mov cmp je and jmp stos sub cmpsb js in mov pop int3 nop mov push icebp (bad) xchg sub push mov pop sub leave adc daa xchg (bad) mov test and cs enter std mov push sub xchg imul jnp mov or mov scas daa and sub lahf jp mov mov std lret xchg dec jns xor daa mov mov xchg imul mov inc pop gs repnz ret push dec jb sub pop out lahf add add dec dec or push movl aas fs daa cmp dec or nop mov (bad) dec test insb jo mov push es pop pop and cs dec mov cmp in push fnstcw push mov call insl mov mov ds movsl lret pop or scas cs xlat jmpw xor mov cmpsb ret or push mov cmp imul and faddl mov stc mov jbe pop scas sub fdivrs adc xor pop (bad) lcall shrl ja fs je into mov out fsubl (bad) xchg mov push (bad) mov jmp lods stos dec push pop sbb in sbb xlat ljmp push lods xlat mov sub and add cmp sbb xchg push shlw adc lock sub dec fadd (bad) bound or sub stos push sub out mov pop sbb std cmp minps jne dec mov or sti repz je sti xor xchg cmc pop sbb or push push lds add mov sti sti and mov stos or mov xchg mov (bad) and sub sub gs dec xor push xchg inc add pop notl stos int3 in hlt inc ret pop cs and ficoml nop sbb pop cld or sub xchg lea int or roll stc ljmp push popf arpl xor fisubl sub xchg test mov xor adc inc fildll and and cld lahf cmp mov stos or pusha (bad) fdecstp add cltd xor out sub and movsl adc shlb xchg sahf xchg jecxz dec sub test push hlt and add mov dec mov popl lods push or roll les pop (bad) mov sub fsubrs cltd mov jecxz pop clc lods dec cmp add imul mov mov add mov pushf inc inc adc (bad) xor sub adc (bad) imul and push xlat out mov addr16 fiadd xor sub ljmp mov int fdivrs rcll lcall out dec dec jo popf or outsl das add cwtl push cmpsb movsb or pop jg pop lea repz xchg fldt sbb xchg cmpsl shll lods inc dec sub and or cmp cmp xchg and cmc imul (bad) mov add mov aam sbb pop fildll mov sub dec scas xchg adc out cmp dec push out test outsl mov sub push sbb xor sub test mov in dec jle cwtl movsb xor test stos add mov lahf push jl clc sarl mov negb xor (bad) flds stos (bad) pop xor jb lcall ret push cmp (bad) xchg aaa bound jns sbb and and mov jp cltd lret jecxz rolb push and lea xor imul push movsl cs pop les mov nop iret fisub dec repnz push iret dec incl cmp pop mov and hlt mov and das mov jecxz aad jne adc inc pop sub addr16 jo jle mov jae mov arpl add mov mov loopne mov sub jbe fstpl pop (bad) push push cmp in cmp xor (bad) ja sti outsl loope aaa fildll jno adc dec test scas in pop xor push mov sahf (bad) mov sarl pop cwtl cwtl mov sbb std js mov rcrb out in or pop stos movsl cmp popf and mov or push xor cmp jle and jle cld fldcw aad and iret jp or insb adc inc xor mov fildl pop adc (bad) lods shl sbb js sub dec lahf jo cmp sbb scas out imul lcall (bad) mov cmp (bad) dec es rcll xchg sub cli insb imul rorb rol scas popa ja jecxz push fiadd xchg lods sbb jo mov push cmc pop inc adc add push and dec out mov fwait loopne xchg fnstsw fistpl ja push mov ja xchg sbb pop mov mov rcr sti addr16 sahf pop mov push les aas sbb adc (bad) mov and cmp mov rcrb adc aam jns iret mov pop mov mov dec test aam push js dec pop aam aaa or stos (bad) (bad) lret mov out (bad) enter dec jnp into add mov cmp rorb adc sbb fbld add addr16 (bad) push fsubs aad push jbe mov cltd jecxz mov rol gs into mov inc push jl inc aaa pop test mov scas inc sbb dec jge nop mov sub mov xor add sbb mov and mov popf adc adc daa cmp (bad) xor fadd sub push jb (bad) repz mov lods mov mov mov aad jg jge xchg push xlat (bad) sbb outsl aas cmp jp movsb mov mov call mov test dec sahf sahf cmp push addr16 inc scas test push pop div pop loop jmp cmc cmp decl cmpb lea int3 loopne aas lods or cmp sbb xchg or inc lock dec shrb inc je and gs out stc mov lcall aaa in push xchg sub clc outsb sbb inc sub sbb bound orl dec jns jb iret xchg cmpl lahf or inc (bad) pusha cmpb lcall xchg and movsb aad std mov sbb cmpsl and or mov js fs lods mov xchg mov push jne aas out mov jle aas rcll sub xchg xchg out daa inc mov jge cmp scas in mov xor jne iret cmp lods add xor sarb push dec int3 dec rcl xchg sub out repnz jge imul add dec bound push push push sub lret pop adc inc add inc cmpsl stos xlat cmp rolb xor gs sahf sub xchg jg mov mov div rcrb data16 es clc push or repz ret pop push lret insb ret ja (bad) (bad) jbe xchg pop pushl mov xor dec mov (bad) mov push ret push decb mov lock aas fsubs push addr16 add aad add jnp inc xor dec iret cmp fwait push push pop ljmp dec xor daa popa pop mov add daa xchg test adc imul stos outsb inc mov imul imul jns (bad) leave push inc add dec cltd jg pushf push dec stc mov mov add adc dec call into inc mov lret jae cs outsl (bad) fidivrl imul pop (bad) mov call inc sbbl imulb rcrb mov dec pushf adc cli rcrl pop (bad) push clc imul lret xlat inc inc lock stos inc xor cmp repnz adc sti aad mov ds cmp fbstp or mov es shl pop ror jl (bad) in out xchg mov out aaa and lock jns pop (bad) loopne leave lret cs xchg inc mov and iret push rep xchg dec and outsb push xorl sub sub inc and add mov pop jno sub jno or fistp lea push aad mov arpl addr16 jno imul movl or repnz dec add adc in add mov test add (bad) call scas into or mov test (bad) jmp sarb sahf and or mov cltd ja les and cltd loopne mov jns xlat push cmp bound fs push cli rorb xor cmp mov mov test jb icebp xchg dec cwtl add or je js xchg inc sti mov fisttp push aaa dec cmc jb jecxz pop (bad) scas insl lds mov sub xchg push and push push sub inc sbb mov pop xor and add imul shlb fmul or push (bad) out push (bad) stos in (bad) call into xor mov pop lea push sahf or popa mull and data16 fldl ljmp jle ror mov push lcall push popa idivb xchg test cmpsl mov outsl xor repnz dec sub nop mov cmpsl push xchg sub xchg xlat mov or mov movsb mov cmp jmp jb mov rcl pop and push xor jne stc std sar daa jecxz pop mov sub movsb rcll mov stc and sub adc repnz adc frstor mov xchg popa jle insb aaa int3 (bad) cmc ror rcll psubsb ret jmp test push jge xchg insl stos push push xor add inc cmc mov mov dec imul iret cli add mov test push dec mov add ss loop subl fisubrl xchg js iret das pusha repnz stos aad cltd hlt lea pop mov lods rorb xlat cld (bad) les call mov xchg es push fadds pop add dec mov les out loop cltd dec xchg (bad) lahf cmp xor push movsl inc cmp sub mov (bad) or cmp push xor dec gs imul pop inc mov push out loope lcall in jo and jno or iret pop ss inc fimull dec sub xor or iret or or out ret test in and mov sbb aam mov je jmp inc ret pop aad mov arpl jo test inc lcall cmp (bad) jg pop push ja push cs inc aas pusha cltd xchg daa push clc rcll pop fwait xchg cmp lea cltd sbb push jnp jo scas cltd push cmp ja push push mov push xchg arpl xlat ss cwtl jb in sbb xchg mov jmp lcall das pop dec ja andb iret pop jl arpl mov cs mov ds lret je shrb jl repnz repnz pusha ficoml xlat (bad) jb iret dec or inc dec cwtl push jbe out (bad) mov in repnz adc dec sbb push mov gs mov call dec cs out jo test push pop imul inc inc jbe (bad) in mov jl jns cmc pushf jb fidivl lds icebp mov mov cld cmpsl mov cli out insb imul imul lock out pop inc and (bad) jbe ret push push and daa stos and ljmp jns sbb push fdivs jbe fwait adc sub adc dec cltd xchg xchg out mov call jnp imulb sbb xchg mov dec fisubrl sub jae orl jle imul xchg jne popa jno decb cmp pop loope mov inc subb jge or mov push das cmpl mov movsb pop aam fsubrl ret jge out xchg setge sbb or stc inc inc pop mov push imul mov loopne in (bad) mov push or cmp adc mov push daa std fldl aad and cmpsb (bad) dec sahf mov sbb divl fildll out test jae je enter scas sub aas cwtl out lds mov inc push test clc cs fwait arpl dec pop fld push scas cltd sub and sub mov mov (bad) dec mulb in out xor push (bad) ja cmc rcll xor jp sbb insl push pop outsl fadds arpl inc mov xchg sub or int sbb cmc subb sar cmp popf jg clc out cmp fdivs fldt inc pop iret xchg inc jecxz insl add mov in (bad) das pop push inc mov push push lock lods test push adc mov cmpl add into popa (bad) add sub pop inc and in fisttp icebp stos or nop jo add je mov and mov sar jle jle je or add add repnz xchg arpl or inc pop mov add lods test aam push decl movsl pusha push ja mov mov mov mov in (bad) mov and lds push aas aad xchg lret repnz sbb mov jo cmp jecxz fildll jb or icebp iret cmp (bad) jge xchg popf and xor fadds inc inc xor ljmp mov icebp jbe (bad) test loopne int inc push stos ficom (bad) xor push mov or mov outsl ret into mov mulb test push pop std inc xchg cmc push je out mov int pop lods aad mov in imul lods sbb imul inc sbb (bad) mov (bad) (bad) mulb (bad) push int icebp repz movsl popf (bad) mov sahf stos push sbb aad in leave sahf jmp imul sub adc into lret xchg data16 jb mov pusha lods imul into ss call stos jmp pop xchg sbb push ja inc jge mov adc xlat sub scas sti test dec jo inc aas xchg (bad) dec stos push jns in in lods fstps rolb inc (bad) mov cld call repnz mov ljmp popa (bad) mov pop nop aas lahf icebp cpuid cmpsb (bad) jnp das (bad) jne mov cmpl mov loope rcll mov push rcrb and mov dec cmpsb pop lods or ljmp add movsl pop aaa mov mov int test pop jecxz nop dec and push xlat inc jl push push add mov xor sbb fcmove aas je out dec arpl lock divb popf shll mul mov jge and fcomps xor cmc fstpt push scas lock aas dec (bad) hlt jge in fnstenv iret pushf xchg adc (bad) xor inc xor aad lock mov (bad) (bad) or jl movsb jae into fs inc dec lahf inc fldl mov push jno insb adc fsubr jns in fwait dec xchg and addr16 daa sub fcmove sbb outsb int test mov dec out scas add push in clc jmp sub (bad) mov add sbbl cmpsb lret push xchg cmp rol nop loopne push adc popl dec push (bad) jge hlt int3 fnsave jge jle repnz imul adc mov xor fwait mov lahf hlt gs mov cwtl pop pop (bad) jp mov adc shll or lods add cs repz addr16 rorb add cld jle jmp cmpsb repnz push sub dec loop test inc inc ss sbbb mov ret aaa mov ret out sbb inc xlat lods (bad) out ret fwait mov inc arpl sub rcrb pop out inc repnz mov mov mov andl (bad) cld rolb (bad) mov or loopne adc pop es jecxz scas pop cmp clc adc (bad) pop mov or andl loope cmp lods inc sbb inc adc push jmp xchg add enter enter add add pusha mov and adc and imul cmp and addr16 gs fist or dec sub in packsswb pop push mov dec in ds dec fsubrl bound push iret sarl fwait (bad) pop and movsb ljmp test pop xor sub icebp adc lds jp adc cli insl mov jl xchg stos xor add cmpsl dec into xchg mov scas movsl mov int3 or adc mov push pop cmp cmp jae mov fnstcw dec push inc mov aaa cmp jns aas movaps push ret imul fimul pop loop stc int3 and push enter pop (bad) ja in pop scas jno stos dec and test lock mov loop mov cmp mov mov cmp ss add mov outsl fistpl movsl pop into pop lock mov xor mov rcr mov hlt xchg adcl or push dec loopne push jmp push call pop (bad) jno xlat nop sub pop test fldenv cmp and std bound sbb shrb in xchg aaa and clc movsl out xor in cmp pushl jle (bad) dec std scas fisub xor add xchg mov dec push xor and and sub xchg mov out cmp clc push sbb jno lea lahf in sarl es jb popa xor int fimull ret or je mov jne std mov mov push repz out xor cmpsb rcr cmp sub dec xor enter movsl sar int3 orb xor sub arpl arpl mov cltd jns dec orb jl stos mov or mov sbbl jb jge (bad) fnstcw push les jmp sbb mov sub cmp jge mov mov aam jbe mov add sarb cld jo aas imul hlt xor js fnstcw (bad) lock out es xor in push std fdivrl xor inc in js fcoml xor mov movsb jo adc adc mov push adc movsb (bad) xorl adc cwtl mov dec sbb mov loop jns jnp,pn mov icebp cmp mov loop (bad) negl inc pop mov or test adc shrl push push fxch jb lods popf dec bound outsl stos add jbe cmp mov ljmp add loop cmc push scas jne xor xchg sarb pop repz (bad) xor enter test mov push icebp adcb fbld and or ja xchg lahf push mov shl (bad) mov pop jl push pop and xor and dec xchg bound daa (bad) xor pop int3 mov pmulhuw iret fcompl mov or das dec jp mov test addr16 inc fstl (bad) test into mov jb adc mov pop stos (bad) lods push sarl movsl mov push lds cmp call xchg mov mov inc imul gs mov xor jmp inc scas loop sahf out push lea in dec les mov add jl lret imulb dec cmpsb fldcw lcall stos mov cmp jae dec mov jbe mov test stc arpl xor cmp ja xchg lcall pop mov mov gs lcall jecxz or cmp int pop addr16 sbb jns sarb or push add xor sarb addr16 sbb xor mov and ljmp (bad) and cli orl xlat add lret lahf pop dec sbb adc ror push inc in adc (bad) jo jbe ror (bad) (bad) (bad) negl dec pop rdpmc clc movsl int sbb sbb push pop pushf cmp (bad) flds scas mov stos sub jg sbb and pop lock aaa das decb or repz ror cmpl mov or sahf fimull rolb rorl rcrb jbe stos cmp push pop mov inc cld (bad) pop andb and test sbb and pop lods cmp mov mov mov mov int3 loop in xchg mov jle sub lea lahf (bad) faddp cli lods out (bad) xlat xor cld adc roll es addr16 jge xor lods (bad) cs dec mov dec pop sarb mov cmpsl or lgs call adc pop xor dec fimull cwtl test pusha cmpsb inc pop imul or popa push call in mov jb pop je push stos pop lock add fisubl mov xorl xor xor adc ret nop sbb mov pop shrl dec cmp xchg stos addb dec jb ret lea sbb and cltd (bad) jmp jp add mov addr16 repz pushf cmp or pushf and xchg inc push xchg fnsave xor or out idiv fsts stos mov cmp dec les aaa enter jns jle cmc push int int3 out jbe insl fdivrs popa mov rcll ja mov shl in mov stc jmp bound into nop sar xor push (bad) mov into jp mov mov sub dec fcomps sbb sub push test icebp arpl aam shlb jb and roll std pop test jno add mov repnz sahf mov arpl and mov loopne cmp popa cmp or push xor pop xor cmpps cltd rcl mov cmp xchg ss adc dec inc movb add (bad) ds repnz mov cmpsb daa decl push jg cmpsl in dec test push mov fildll pand jecxz mov and movsl mov cmp sbb (bad) push add (bad) aaa mov xchg bound adc jecxz jl and (bad) mov cs jp pop push stos or pop push loopne sbb aad xchg out xchg les jmp cmp mov jl,pn test (bad) cmp sti xor js xchg pop mov mov xchg pop cmp ret scas mov movsb lods test and mov sbb mov test lret mov adc inc pop mov out pop push push jae cld sbb out clc mov sbb push rcrb enter dec dec xor ljmp fldcw pushf dec (bad) cmc rorb out cmp mov push fistp and mov add aas (bad) jbe xchg ffree (bad) out cli mov out jo movsl in fdiv int3 loopne jo aas dec clc xor adc and out sub lcall xor fcoml dec cmp jbe jb insb push xorb in cmpsb xchg popa ret js and loope jle inc scas push jnp pop sbb sub in push or cmpsb jbe xchg xchg inc stos xlat outsl jnp std mov aad cwtl jns shrl xor or add xchg mov mov jmp xor (bad) insb sbb fs inc pusha add mov lret sbb nop (bad) in mov pop les (bad) test xor sub cli repnz push push ja (bad) repz and lcall xchg js cltd outsb (bad) push int3 scas das les push in das xchg push andl in cltd outsb sar fdivrs and sbb adc jns push sbb add pop popa out pop mov into aaa add jns lea addl cmp (bad) out or inc push jl mov dec pop and dec aaa mov pop (bad) gs dec xchg xchg cmp adc icebp out push pop lahf ljmp pushf and imul dec imulb mov out push xchg xor addr16 pop mov test imul add mov andb repz xor mov lahf cmp push loop push lss cmpsl call dec pop pop mov idivb pop xlat aaa mov xor lahf inc xorl xor lods adc outsb loope mov mov fisubrl pop mov test mov addl (bad) negl dec ds push je mov dec repz out popa add jo xchg lcall shrl xor adc test xchg and adc sub add inc mov push adc add mov scas ja aaa push (bad) jecxz xchg in jb (bad) (bad) push pop cmp jge mov dec loop out sub jp les mov popa push mov (bad) jp popa rorl mov pop cmpsl or (bad) fs and ljmp push data16 stos aas mov js push ret xor (bad) lret push lods xor (bad) mov pop (bad) cmp icebp jne popf mov mov mov jp into into sub inc mov mov mov sub in jbe xchg lock es ret adc cld lret call adc sbb out mov (bad) (bad) jle mov xchg int loope (bad) leave adc jo pop mov popa das push pop cli (bad) mov cwtl and lock inc jno push stos inc jecxz xchg jl lahf sahf xchg loop fiadd test test aas gs mov and cld mov xchg sbb aas lds cmc xchg push fstpt cld and pop arpl sub sbb bnd (bad) mov incl lret mov js addr16 inc out pop test hlt rcl pop arpl mov into lock inc ss inc pop (bad) insb (bad) test fistl xchg push dec popa outsb dec das ficom mov sub shll call out push scas std or mov out stos xor pop inc mov mov test mov add icebp enter mov ret sbb jecxz into fstps rorl xor fisttp sub cmpb in dec repz jne lock or in test daa sub lea es xor sub out mov pop (bad) fisttpl mov jg mov repz dec (bad) jmp mov mov xchg clc cwtl or loope pop sub sbb sub xchg xorb xor stc cmpsl in dec adc and cmpsb push mov cmp sub jmp repz (bad) push xor push rolb pop (bad) fildll aas daa jne jae stos sti outsb jle mov and pop (bad) cmp out xchg mov lods dec dec (bad) xor xchg mov cmp clc enter insl adc xchg mov inc push mov xchg cmc pop (bad) dec xor add adc xor xor xchg pop xchg in das cmp or xchg xchg lea orb push sbb fwait adc flds mov imul je xchg lahf and push xchg push xor jge pop fwait movb fld sti mov je ss fwait push xlat pop test jle jo imul and pushf mov (bad) in scas or mov arpl popf jg xchg pop (bad) sbb xchg sub or push data16 mov shrl clc addr16 dec mov pushf mov rorl adc aam cmp xchg daa (bad) fidivr (bad) bswap xchg pushf cmp fldl rol ss call scas add in cwtl mov cmp repnz aaa xchg ds in (bad) dec mov bound xchg jbe lods stc fs dec cmp cmp push les xchg pop adc mov out sub mov xor add fsubp jns pop das mov enter (bad) idiv jl nop or ss lret out les mov jl cmp test inc jae in fdivp dec cltd adc ficom jle adc je jle and pop andl xor lcall aad xchg insl cmc jb sarl mov adc iret pop (bad) dec jl xor sub enter addb xchg repz sbb sbb int jle mov push fwait push repz dec xchg fbstp lcall xchg das and scas mov inc rcll das dec add pop mov test jge dec mov cltd jle add inc sub out cmpsb loope fisubrl cmp push xchg icebp xchg movsl (bad) outsb inc or inc push xor jns push jg sub adc scas pop in sbb int (bad) test inc mov xchg lds leave push dec inc es dec aas mov ret pop (bad) repnz inc popf cmp jo out sbb rcl mov or imul mov xor jmp test jne add fstps mov ret sbb add stc outsl repnz lock stos in pushf les sub movsl clc dec jge pop js sub pop mov sbb test add subb lret push loopne xchg push repnz nop fisubl sub loop stos lahf (bad) jno mov out ret addl jbe sarb push pusha sub pop lahf pop fstpt outsb sbb into addl jmp out mov fsubs stc adc cmc and cltd sub inc out lea loope xchg mov insb jb negb movsl movsl or inc out aad and movl shll pop std add cmp lock push out add cmpsb mov lds mov cltd sbb data16 fsubrs popf pop or (bad) adc sahf xchg pop and push repz mov mov xchg jns loop stc jl arpl pop (bad) scas rcrl inc imul (bad) cmc sub or xchg arpl mov sub adc scas add aas cmovg xchg mov mov rol enter sbb (bad) fsts push jmp lcall jecxz (bad) cld add (bad) movsb sbb and xchg and mov fdivl jns mov aad mov or in (bad) mov or sub test sbb call cmp push mov inc jne (bad) pop rorb das mov mov dec dec push mov dec and repz ljmp addl fist (bad) mov in mov ret ret xchg inc leave ljmp lea es icebp aaa xor xor mov or gs fs mov xchg int and shrl (bad) ja hlt adc or mov daa pop (bad) test out dec push imul dec loop jns mov aad pop mov or rcrb ret dec rorb aad loop cmpsb roll inc jg sti push daa xlat mov mov add ret fwait in jl aas or add dec daa pop loop push add sbb test adcb xchg cmc inc add jns lcallw sbb lahf out jp push fcompl dec xor rolb fldcw and cmp imul std idivl mov aas mov adc inc jb lret cltd in pop pop jle movsl ja mov jmp les pop sub popa pop jne dec mov es inc cmpsb xlat in and stos test addl cmc (bad) lret (bad) bound push jae aaa add (bad) jae pusha adc cmp imul jnp mov into mov fcompl test xlat pushf and stc arpl movb inc sub cltd mov push push ss imul mov fwait aaa xchg xchg and cmp mov fwait arpl adc pop cmp int3 adc aam negb frstor xchg je,pt (bad) jo inc lret nop fildl pop jbe add mov lret jecxz pop das xor movsl mov adc cwtl cli xorb aad stos sbb jg insl (bad) out scas movups adc cmc cmovg dec lret int3 gs rcrl scas mov cld sbb push lret fcmovne and ja iret push (bad) mov or fsts pminsw (bad) jne (bad) int3 ret push addl dec dec mov adc jns mov arpl push cmp fs movsl pop stos pop adc jns push pop or xchg dec lods sub outsb (bad) jb dec mov (bad) ds jno mov xor dec jg test fs ficoml call or mov fistpl xchg es jl aaa fucomp sbb test gs mov jg in jb (bad) stc push sahf push jnp add (bad) xlat cmp cmpsl cltd lret jns adcl mov mov stos xchg cmp push mov icebp insl pandn aam clc mov out push sahf adc xchg adc pop fcomps xor mov pop aaa lods jmp imul mov and movsl mov jb push cmc bound mov xor inc loope sbb (bad) loop sub arpl adc mov push jecxz je add push mov or mov (bad) lea jae or mov inc sbb std cmpsl adc fidivrl ss fwait iret pusha fbld cmpsb mov or loopne jge xor sub stc popf and jo pusha mov lcall test (bad) insl and ss dec push inc add mov nop or movsb cld cmp or mov or mov insb dec fadd jno pop lds jae andb aas mov or cld cs mov dec mov insb pop dec bound call jbe lods push and mov sbb daa xchg (bad) (bad) fildll out xchg adc xor faddl push or cmpsb add push cld mov popf cmp lcall std fildll cmp into popf xchg dec lds push repnz pop arpl adc ret fistpl pop aam adc scas push push pop cmpsb pop push mov push cmpsl push sti test and jl mov sbb fnstcw lea outsb mov pop stos and xor fldenv or jmp mov jl cmp sbb dec loope aas mov inc sbb and sbb fisttpl rorl aaa jge,pt loope mov dec mov stos imul aaa inc (bad) dec mov push (bad) repnz es mov jle mov pop cmp mov test or repnz xchg xchg mov jnp sub inc jb cmp jle nop pop sub cvtps2pi outsl (bad) notb jnp out push jno push out aaa push movsb (bad) jae mov inc lock wrmsr push xor xor sub in repnz in push pop add int3 adc (bad) mov inc or cwtl sbb loop mov lods stc sub jns (bad) hlt push jb psraw mov and movsl push outsl lret fstpt repnz mov xchg inc cmp in mov (bad) sti dec push push mul imul sbb xlat cmp wbinvd (bad) call pop inc add insl xchg rolb push pop mov cmpsb pop mov mov inc adc push mov sbb pop fld add movsl ss jnp jge xchg rcrl cld jns cmpsl push adc js fs xchg mov mov push jl sub stos pop adc int loope sbb pop test repnz jecxz xchg outsb push add pop jge jmp or mov loope add sbb pop mov inc leave shrl addr16 lret loop out dec cmpb xchg dec imul repz or and mov out movsl rolb fsub push mov ds push mov in scas pop xor cld rcrb mov mov jns test sbb test stos (bad) or sbb push loopne push iret scas inc aas daa xchg add bound test mov sub cmp popa mov out sub cmp shrl xchg repz inc pop add and dec outsb cld sub or push mov jl jno xchg mov cmp xlat in sti sbb pop mov in loope int fidivl bound stc push insb add bound push stos arpl mov mov aad xchg push clc sbb cli ss sarb roll push insb jb jge mov ljmp xor loopne les mov pop les pop (bad) lret add mov mov jg test fadds cmp mov dec mov jnp stc gs movl jae repnz inc jbe jp rcrb xchg cld add cld push popa pop mov pop (bad) dec js lods and jl aad dec or es jne xchg outsb data16 insl xor mov in push push mov sbb gs inc jmp add stos xchg imul xchg cmp add pop call shrb ss cwtl lods (bad) push push cmc mov fucomip movsl dec popa jmp scas sub dec or jle adc inc ret jge sbb push adc frstor add and outsl das and inc enter inc mov lret inc fildll sbb popf decl cmp and jge stos xchg es xchg test lret fcmovb mov xor sbb sbb popfw sub mov or mov int pop and jae leave mov push imul dec mov lahf pop pushf mov mov lods adc dec (bad) sarb lock push (bad) or ficomp lock and and adc lods (bad) (bad) push enter cmpsl pop aas int add (bad) test jbe or addr16 out sub xor (bad) cmp jecxz popf outsb mov punpckldq ds je sbb sbb pushf mov sub push (bad) jmp std add add adc in adc sub or aad (bad) das lahf or aam in jmp fidivl xchg mov pop adc lds sbb repz jg xchg mov std mov mov mov xor cmpsb std aad aam pop addb loop mov js loope inc add sbb mov xchg andnps xchg xchg mov mov xor pop adc sub pusha jbe bound ljmp pusha pusha mov cmpsb cmc stos nop lods fisttp aad arpl add add ja dec aas cmpb test cwtl daa push add and lds mov iret (bad) xor out add cmp xor nop xchg mov out inc test push mov add mov dec es mov aad rorb fisttp lcall (bad) sbb xor icebp data16 jae xchg addl jl shrl imul (bad) mov mov aad lret jb jecxz daa cld xor and push icebp adc push xchg icebp push lcall xchg xor mov aam (bad) push xor lcall sbb push ja push add mov mov (bad) xor nop fwait mov das movsl mov mov mov into adc cmc outsl mov movsl mov mov dec inc pop cmp pop xchg jg lods jns adc scas (bad) mov test xchg sub fstpt push and (bad) xlat dec inc into inc xor add inc sub cmp fwait jle add stc loope repnz rcl gs mov jl adc jmp and push and scas mov xchg out and dec jl ja adc xchg dec das roll pop fstpl mov loope mov mov add xor outsl fldl sbb mov pop sub cmp jecxz mov push mov stos fcomps iret dec ljmp enter inc dec xchg stos push (bad) in aad loopne xor lds adc lods clc mov rcrl xchg aam js negl sub mov or test stc sbb mov add jp mov out cld mov fldenv pop rol push ljmp mov mov aad xchg push cmp xchg clc jns cmp (bad) jnp aad adc aas ljmp or push xlat sti mov icebp in (bad) (bad) dec push outsb push push inc jecxz jb adc or inc push xor sbb mov xor test push inc outsl (bad) rcrl popf mov hlt mov pop scas (bad) mov out (bad) or add outsl test add mov or jl out xor xchg adc mov test add mov cmp (bad) mov hlt push outsl fildl dec jl insb jg inc in clc icebp lahf std pop notb shrl popf mov cmp orb fiaddl mul (bad) cmc int outsl aad daa cmp mov into xchg push and cmpsl call bound or aas jno lock repz adc fbstp (bad) push or lahf or sbb xchg jge and fidiv repz sbb loop jno iret rolb test int adc mov sbb lds addr16 push dec in jmp fsubl xor adc insl cmp cmp fnstcw mov fdivp sahf iret fs adc mov cmc cmp ljmp stc pop inc cmpsb dec insb je lds jg (bad) in scas clc pushf out dec daa nop into (bad) mov sbb mov jge inc icebp jp or cmpsl in pop leave sbb shrb mov movsb jmp fimull stos adc shrb add lret pop pop inc cmpsb xor mov js and pop push int3 mov loopne std or sub pop mov fidivl or mov or mov ja stc cmp and aad jp leave aas lcall aaa inc out push out push xlat lea and jg push ss scas jbe imul imul lods ja imul sahf sbb cld nop addr16 xor outsb mov ret cs icebp xchg into inc rcll sbb inc pop mov ja popa movsl sbb and inc (bad) xchg add daa jmp mov or dec mov xchg sti hlt int3 mov aam rclb mov push xchg xlat popf sbb fmuls mov jge std lahf xor push mov pushf add cli fcmove mov test popa mov (bad) je bound mov lret cmp xchg xchg orl cmp (bad) adc inc jl xor clc sbb inc mov and add cmc jnp scas sbbl arpl xor into adc stos fstps push and test adc fisttpl mov xlat es dec mov shlb fxch add push or sbb adc xor ret jl sub aaa fidivr daa add push cmp add push mov mov or jne or cmc imulb scas jge jae or pop (bad) movsl enter mov mov lret jnp xor add xor mov in roll ss mov sub push add sbb xlat addr16 rcrb aam stc mov stc mov xor pop lcall (bad) xchg or loop mov push out lahf movsl insb test dec loopne cld hlt ret xor (bad) mov jp cmp call and es ds and rorl push or fwait mov push inc movsl (bad) xor imul cmp cmpsl (bad) xchg fisubr or cmpl sbb js pusha out push mov push add and int push inc (bad) mov loopne clc mov lods movsl or out pop sub insl fbstp fadds in mov ret scas jmp or mov sbb jmp outsl mov mov mov les pop (bad) jmp bound insl pop adc mov into sti push repnz mov adc aam cltd pusha (bad) ja xchg mov xchg cltd ljmp xchg push push lods xchg addr16 mov pop push add enter test mov fwait or mov js loop mov iret push push aam bound or cld pop jns insb mov iret clc mov leave inc push jl add jge sti add nop clc inc add sub inc sbb pop into out ror cmp pop shlb cmpsl stos and in lret in mov mov mov jp call jmp sub into scas addr16 adc lahf jbe pop cmc and les sbb imul ret and push pushf jne (bad) negl cmp cltd movsb mov push cwtl xchg mov jae jg rcrb add xchg pop jge push cli dec dec push jno cmp ja cli and xor adc mov jp pop aad mov stos pop jnp pop push (bad) xorl lds push xor dec daa in xor movsl xchg imul mov popa push pop imul das and popa call or lret jb in jb mov add ret xchg loopne fs (bad) enter test (bad) xor in ficom movsb lods sub jne inc leave jecxz add fucom nop cmp xchg gs enter mov xchg mov add repnz xlat ja xchg push mov insl mov test mov loopne and rcr aad movsb xor dec mov ret leave (bad) cmp or movsb out sub mov cmc jmp imul rcrb aad add pop mov inc sbb sbb and adc sbb adc mov (bad) jmp adc pop je cwtl mov mov xor push (bad) mov das bound lds xchg out fimul sti mov js xchg xchg movsb in into loopne inc sub int push pop stos (bad) (bad) jbe add jnp xchg dec (bad) aas nop int3 bound insb (bad) push lods loope adc mov xchg stc sbb (bad) bnd cltd addr16 pop (bad) xchg sub pushf xor (bad) mov inc sbb pop ret inc and iret xlat dec cs sbb aas fstps aaa xor je dec addl rcr pop xor (bad) gs aas loopne mov fdivrs and sbb add and push cmp cltd sbb xchg aam scas loopne sub or (bad) mov xor (bad) mov adc lods hlt mov sahf into roll dec or call rclw mov add inc and add (bad) cltd add pop pop mov out push loopne outsb jbe cli jmp (bad) xor leave hlt aad pop jns jno xor in pushf add adc aad and popa cmpsb lds int3 fisttpll mov mov les cli xor push (bad) mov jo push push jo add push bound ss xchg push push je xor mov cmp or outsl shll es cwtl scas xchg jno dec js imul aad fsubrl test fisub test lret or xor mov lahf ret fist nop stos in jg jnp in (bad) and pop xor dec add sub enter mov cmpsl nop jp jno out cmp (bad) mov lahf pop xchg outsb ds lcall jnp dec cmp push inc push sbb pop cltd push jmp and jp xor inc sub adc mov push xchg xchg mov subl (bad) imul mov cld adc inc jge (bad) push ljmp fdivl nop mov in push xor fimul aas dec jmp mov mov clc lea cltd xchg ljmp inc jp das cli add pop add xlat je mov cmp data16 inc sub adc inc in dec mov jge in mov (bad) xor in mov nop imul mov mov add pop xchg iret sub or mov notb test imul vmovsd push int add insl xchg lret in jmp das iret cltd mov outsb and clc push imul cmpsb popf xlat into mov push jne pop ds xchg enter aam xor jl lahf sbb loopne push cmp sarb jne les cmpsb jle jbe ljmp insl aam and test fucomp dec daa lods stos adc pop and inc push jbe ja daa sbb lea jle ret sarb lcall jo dec int pop xor mov outsb adc cld add xchg rclb out dec cmp mov mov mov rolb cmpsb mov mov test nop fwait or jge in inc mov inc cmpb gs faddl adc dec pop add movaps idivb xchg imul or push mov cmp les push movsb ss mov or adc in jecxz les jno rolb adc cmp packsswb sub push pop push cmp sub cld lcall mov std addr16 cwtl mull inc mov int3 jns sub test or xchg adc mov xor add addr16 cmp mov mov inc int3 pop mov repnz push xchg in mov cmp je dec pop or sbb inc inc outsl aad pop stc fbld xor sub mov fucom adc lret mov sub shr or sbb outsl jmp lcall mov outsb fsts xor xor push jb sbb call sub jb je out mov subw scas dec test mov mov mov sub sar inc sarb (bad) call xchg jns (bad) xchg dec jl push cmp cmc rcrl xor xor js mov out mov cmp mov scas fwait addr16 pop outsl or cmpl fldt jae das pop cmc in aaa push scas (bad) xor mov stos cmp push cmp jnp xor insb pop push (bad) jno aad xchg or xchg mov bound add push in je jge std and push mov mov nop adc inc mov cmc sbb sbb xchg sbb mov xchg (bad) cmpsl adc (bad) and call int3 push push cli add clc dec fstpl addr16 or push pop adc inc lret les mov or jmp lret lcall dec xchg imul repnz sti movsl sbb les (bad) je je mov rcrb or int jbe xchg imul mov push ja cs jl xchg cmp pop push push sbb mov fdivrs insb dec mov dec nop outsb loopne repnz adc jmp cs mov icebp push sbb aas sbb lret sub aam aaa shll leave jecxz fwait mov dec add addl adc xchg cmpsl mov out aas sti mov aad or sub push add ja push mov xor xor mov inc (bad) mov mov fsubrl js xlat std sub mov mov xor inc ficoml aad push pop ja mov xchg or add pop xchg xchg pusha les or mov mov mov test loopne adc and jne int rcrb cli push adc or add iret mov mov inc adc sar sbb mov (bad) xchg jge in inc sti movsb les pop pop sbb mov popa jbe sbb imul in pop popa adcb dec jne pop jmp lock push rclb imul mov clc adc inc cmc or js pop popa add ret and adcb insb lahf push mov lock pop mov or test lahf inc mov popf scas mov add mov out roll les xlat sbb add ljmp sbb jo sbb mov add pop xchg rol mov dec add sub js mov and jno fisubr cltd mov fpatan add cmp jg mov or add (bad) cmp cmp push (bad) dec adc cmp mov stos jbe and int jecxz dec mov push mov dec push jbe xchg js out loope shlb lret notb pushf loop sub mov and lds int3 inc mov insb pop or (bad) in inc and xchg pop dec push ss adc add push (bad) pop cmp jae sbb outsl push jmp push xchg push and push mov ret das xchg cld cmpsb sbb push imulb and es imul jle push or lods out addl fbld mov popf int3 ret push mov mov jo and mov inc mov scas lds xchg push mov addr16 xlat outsl dec mov fisub pop jg lock and lods mov cmpsb lahf lock out test sarb mov bound inc and xchg xor or or xor es xchg rcll mov and or or mov or jecxz ret and sub xchg out inc lods and dec fcompl dec add sub xchg int pop cmp push (bad) adc (bad) fmul test shl mov dec or sbb pop lahf js sub xor repnz lcall lret fmulp fcmovnu add sbb pop xchg jmp xor int mov dec imul (bad) icebp pusha sbb out or jle lods arpl mov iret mov stos cmp jmp push jecxz mov adc fdiv loope sub enter jno sbb xor add sub add fs std adc or push add pop inc clc or loop lea mov push sub push push inc int3 xchg mov adc popf cld or adc xchg push mov (bad) pop mov gs dec andb fs scas pop mov icebp pop push cmp sub cwtl xchg aas imul jbe push mulb daa repnz bnd push jnp dec or xchg mov dec lds ljmp jle fistpll arpl add inc or mov mov mov lcall aad hlt sbbl nop cmp (bad) lss cltd xor sub mov div sbb push paddsb shl cwtl push jbe fcmovnu imul data16 loope out lock loop cmc mov in dec aas jg es or imul sub adc repnz sbb and dec or push stc scas pushf push out pop xchg test sub mov bound fs add (bad) je sti js stos stos jnp xor jg or ficompl (bad) cmp fsubrs sbb sbb int cmp lret mov mov jns fs dec adc outsl add daa cs sbb ficompl mov (bad) dec out inc cmpsb xor mov xor hlt inc dec pop dec xchg xor (bad) fnop ljmp iret jle shlb adc xlat cld or popa dec test ss adc in push lahf cmp js ficom sub sub cld mov aas or inc mov adc popa out xchg pop push cmp jge lcall inc pop pushf xchg jbe das mov loopne int inc clc xchg ds pushf imul xchg mov dec adc shll jo dec das or push push ret mov jecxz roll jno aam lea or push roll or and xchg mov and addr16 pop mov or adc mov ja mov adc cmp lahf mov imul jbe fdivr or pop mov outsb cmp lret hlt pop mov jmp or dec gs lock dec ja daa lock dec lds dec jmp pop mov stos dec hlt rolb gs (bad) xlat mov cs insb dec mov adc rclb cmovo ja mov loopne je add fwait imul xchg js popa fwait out jmp inc cld cli sbb mov stos fldcw xlat lret inc jne dec aam mov jle lcall mov out ss in aam popa mov sub push mov negb mov pop std cwtl dec mov subl add push jl mov ja movb jge mov stos mov and iret imul out aam mov mov sahf int test fdivrs adc ret push fldl cld pop sti cmp ljmp cs (bad) ss subb lods insl dec rolb movsl adc cmp (bad) stc cmpsl aas dec test rclb sub enter cmp inc (bad) jae in jbe sub repz ret sub jne push lea call push movsb cmp mov adc add adc insl mov mov inc mov adc add cmp jno dec and adc jo fadds fucomip (bad) outsl or or outsl pop xchg addr16 cmp mov sbb push in call out inc rclb ja adc dec pusha lea ljmp aaa fwait lret jge pop or push or mov push sbb xchg fnstenv and mov mov fldl pop lcall pop ss popf out movsl jg dec mov ret je xchg add mov and jno mov (bad) adc test xor add jmp loop (bad) cli add lods mov inc js (bad) stos and das daa xchg or adc or dec sub inc je arpl out push sbb int3 fisttpl lret js gs jge or lds push les inc or fstpl mov add inc (bad) scas mov loop xchg mov js rol xor xchg int3 mov test xlat imul in pop push adc insl mov push hlt insb rolb push mov repz or (bad) imul sub loopne sbb jle ret mov outsl add bound jg cmc in or in xor fwait add dec jg cmp dec push xor add call fisttpl (bad) xchg ljmp std jecxz js clc into adc arpl inc je repz jo xchg cs sbb mov sbb (bad) data16 sbb xchg push mulb cmp mov add push mov cmpsb mov adc out pmaxsw cmp jne mov js jnp jb jge icebp cmc dec addl scas and cmp ds xor mov sbb inc js testb xor cmpsl int3 push setne pop out daa lds jecxz fildl xchg inc push inc mov adc and fs stos cmpsb adc fmull push cmp pusha cmpl sub imul (bad) ja,pn ja push aad cmp push cmp out addr16 mov cmp shl lahf arpl mov lahf mov movl (bad) aaa adc push jb sbb stc xlat mov bound cs add insb clc test inc pop adc loop push (bad) xor sbb leave jg xor sub jne bound sti and mov mov pop and enter push in or xchg fcmovb leave lock dec out jge pushf mov add out movsb subb out lcall or jp xchg mov mov cld adc xor xchg in cmp push aad add sub je pop int3 stc mov add sub js loopne mov push rcr add bswap adc mov in repnz icebp adcl cmc xor adc loop jmp lahf dec lahf push (bad) jb mov cwtl dec push popa std mov push mov inc add ja pop mov jl inc push push pop sbb sbbl sbb xchg inc adc lock mov fcompl cmc (bad) jmp or jnp popa jb mov cmp movsb leave xchg adc fidivr mov pop mov movsl in nop aad dec push sbb mov fistp mov faddl rsm imul cmpsb fsubl call std shl jp xor daa dec adc lds adc aam pusha mov mov dec adc pop adc and stos push xchg loope and les cmp repz xorb pop jo xor push mov dec (bad) je cltd stos cmp xchg or aam and insb (bad) out enter shrb cmp mov xor mov movsl mov sarb test enter pop scas sbb jl push cmpl enter inc push idivl fmull sbb and push inc ljmp jns pop cmc inc jmp xor out inc inc (bad) mov test jno fcmovbe insb test shl (bad) cmp mov mov jo xchg xchg mov push xchg adc pop fisttp into ret add xor xchg ret cs xor mov icebp mov lahf add jbe sbb cmpsl js cmp testl inc sub enter fsts mov pop cmp shrl in mov mov sbb mov mov xor dec mov aaa pop pop xchg stos (bad) mov aam push adc mov lea repz stos adcl pop push sbb incb mov jo gs loope push inc hlt dec dec leave ds popf int sbb push es and rcrl jp cmpsb mov mov fwait and (bad) outsb add lods adc add and push push loopne pushf popf push (bad) sbb sti xor data16 jle adc in addl into pushf fbstp sbb adc (bad) xor pop inc icebp add cmc lcall pop mov inc dec cmp int xchg lret sahf pushf ficompl in leave jl (bad) mov movsb push imul outsb ja es xchg pop mov dec push xchg loopne sub push loope mov aam popa mov xlat scas sti adc std ljmp mov jbe push mov mov into loope mov sbb pop or inc adc xor cli out popa aad test cs inc in sbb hlt dec insb mov push jl push inc movsl iret fsubrs bound stc mov dec (bad) pop adc insb dec sub cmpsb add lods dec adc push (bad) subl ja notl jp out xchg jnp test stc xlat test cmp in pop fldt inc mov cmp xchg cmp mov pop cmp jo imul scas jb xchg imulb push rcr rcrb aas test movsb xchg and not mov xchg jle lahf popf rolb je sub aad in pushf rcll loope xor js mov movsb sub mov xor (bad) jne mov movlhps les lods nop cmp popa or sarb lea pop (bad) outsl cmp fdivrl dec inc mov lods cmp inc sub xchg pop mov inc in jno sbb popl test sub sub or (bad) pop arpl mov in pushf (bad) xchg sbb test dec pop in popl inc out add and xor fdivs (bad) arpl das arpl sarl and push in push mov test mov or mov mov adc sub xchg pop jle out xchg push popa adc hlt ljmp jb inc movsb pushf add mov pop sub fiadd sarb loope inc (bad) mov xchg push push jne mov jp stos mov xor std scas std cld xor dec cs out xor addr16 shll dec int adc lock lods mov aas sbbl add add pop push mov int3 dec sbb mov adc or xor push out xchg loop test stos js aam stos arpl sub add mov ret test mov push push or pop in and enter loope mov daa repnz out and outsl dec inc mov addl jno out test daa icebp loop push sbb sbb push dec pop xor sbb xor cmp out out cs test cmpsb ret fmuls cs icebp mov shrl xor movsb iret cltd mov (bad) jg ret mov shll mov mov mov cwtl and or pusha add adc fsubrl xor adc pop arpl inc nop xor pop push xchg fidivl adc adc (bad) movsl mov clc cli std outsb jne jae in add stos test addr16 lahf and les push and mov jg das outsl nop jmp les xchg inc or mov push jb rorl sub inc cmpsb push out xor jle out cmpsl js xchg ret pop sub mov mov or mov xor push push ljmp icebp sbb pusha pushf stos jne push mov jmp pop mov call pop andl or push lods les jo jp outsb jns ja scas or das mov fisttpl inc jbe or scas faddl cld jmp xchg add sbb out pop mov das out std push jae jp lds push xchg sbb in pop jg and fcoml popf mov jle int rorb pop sarb imul push sbb xlat dec pushf stc les (bad) add mov (bad) addr16 xchg sub fwait xchg dec inc jnp xchg (bad) insb adc jne shll push inc cs mov xor aas jp dec cli cmp stos (bad) cmp cwtl adc out imul jo sub addr16 cmp jle cmp and jns fisub es in cmpsb lea sub adc inc enter in ss iret fdivl or out das and aaa iret adc icebp mov (bad) and push test aas popf and mov adc outsl lea sub jg adc js adc in fwait stos sahf test xor (bad) mov push push mov pop sbb fldenv inc inc or jno (bad) hlt repz lods mov xor ja dec add das push (bad) rcll push cli int add loope dec int3 mov insb mov inc (bad) mov lahf into sub cmpsb sbb push jns aas lods cmc rcrb sbb mov mov pushf and push bound std mov mov adc call mov outsl out xchg (bad) dec adc je mov mov dec mov (bad) pop jae out inc jne imul ja push out inc add mov stc insb dec push shrb roll dec sub out pop outsl add push inc out pop jns out sub mov pop dec and (bad) rcll decl jl les aaa lods jmp dec mov dec jmp and jl sub push adc mov or xor scas test xchg out mov ljmp arpl rorb xchg scas jmp inc or xor or mov idivl adc clc adc mov mov jmp dec hlt andl test insb repz fcomps rcl mov jmp mov jb xchg adc sarl addr16 test mov sub and js jge daa push xchg xor jp out roll in and inc xchg enter out sub pop test js cmp nop and pop aam and scas mov xlat insl bound out cmpsb adc jp into stos mov int shrl adc out inc mov insb and out (bad) xor push add mov sub sub mov or mov cmp mov cmp (bad) hlt cmp jmp sti inc xor jnp (bad) outsl mov int3 jp push inc push fstpl xchg aas jnp (bad) fbstp adc pop outsb sbb popf pop xlat add enter (bad) pop repz and mov push pop fdivr lods or jae stc movsb pop cli inc cmp imul push cmc jae (bad) xchg sti jle inc jg push jne mov rcrl pop adc inc jge lahf and subb mov pop sub jne add loope cwtl xor jmp cmpsl xor les jge lret mull lock es dec pop sbb (bad) cmpsb mov push xchg inc in je mov test faddl push loopne add sbb ss in jle dec aas je adc pushf notb inc lds jg sbb cmp rclb or stos mov dec add push sbb gs fcmovbe mov jl xlat sahf rcl sub jno cli inc test sub sahf lock xchg mov mov nop and movb pop lahf fwait sub lock sbb les (bad) out push ret mov movsl adc mov jmp aaa dec inc and shll dec mov push ja adc sbb jle fs (bad) xor push jp lahf sub clc or ss fs adc movsb fsubl adc loope push ret mov sub xchg les (bad) push outsl or sahf mov xor iret sbb sar xchg daa loope pop dec cwtl imul rcr les xchg or sbb mov out sub push inc insb in cmp sub mov sub imul push pop mov mov mov jb push cs mov push scas pop stc cmp xor imull or std cmpsl lcall xor pop arpl inc in fsubrs shl push mov sub inc lcall mov cld pop xor popa in subl sbb adc les outsl sysenter shrb jmp out lock cs push sub aaa sub inc loop sbb scas pop fmuls inc and cltd movsl inc jge inc shrl insb imul inc jae jno mov adcb test movsb add xlat fistl push mov or cld stos mov adc js (bad) jo test adc out cmc lahf icebp pop in notb fldl je iret ljmp jl sub mov xor pop mov pop dec jns cltd push mov into cmp rorl mov jmp mov into je sti push loopne add popa cmp ficoml jae pop fisttpl add push bound loopne nop cwtl push add hlt jns and xchg dec sbb xchg andl mov nop adc loope idiv cwtl pop imul icebp mov cwtl aaa pop aas les repz cmp mov les mov fidivr int sahf pop pop stc pop sbb adc movsb xor popa xchg sbb in das xor sahf add fcoms out fild lds mov jns ret mov pushf fs daa (bad) mov pop cmp push inc leave loop sub adc inc daa mov or xchg xor push sub sahf subb mov idivl ret pop fxch adc jg sar jns push (bad) popa mov inc jo lret jbe addr16 mov mov cmp lock cs mov fild in add mov cmpl mov in fwait mov test sti jbe jp mov je sub imul mov and xor mov popa jl int3 add repz mov subl mov repnz aad rorl (bad) out adc cmp lock pop stos adc push fsubrl inc test imul aam pop punpckhdq and scas dec repnz fldenv popf sbb push mov (bad) cmc cwtl xor insl lds jns jp arpl sub mov adc xor push jno push push xor xchg sub cmpsb repz ret out arpl xor pop add and xchg and jno jle xor inc loope adc leave inc fldt nop adc stos xchg mov lock sbb in cmpsb stos int cmp and out mov jae cmp xchg lock rolb pop push push or aam loop hlt sarb sar pop dec bound sbb cmpsb cmp inc mov in add add lahf mov into jno and sub adc push lcall and inc in pop mov les mov fsubl in xlat jle ret cmp jb test std lods nop push mov xor sub (bad) enter push (bad) xor je cld jns scas shlb mov mov xchg pop fcoml clc mov fldl jg mov aaa insl arpl pop sahf pop (bad) mov pop movb idivl lahf mov adc movsl test out sub (bad) jb cmpsb ret bound push xor jmp test mov popa pop lock cwtl and cmpsb sub mov dec and aaa in rcr mov inc aaa cwtl (bad) je and mov cmp dec in pop mov (bad) imul fdivrs fnop pop pop jecxz or mov xchg iret shrb pop (bad) fisubr bnd repnz add push aam inc sub mull xchg in lods lret sub stos shl pop bound sbb jns mov sub or scas dec stc mov call nop fdivr and mov mov imul adc les mov shlb jnp mov push adc push cmpsb in outsl mov (bad) sahf out out iret std jnp jp xchg add sbb inc xor cld (bad) pop rolb xor scas sbb enter nop mov xchg out mov push jbe dec dec repnz mov movsl test test hlt popf aas cltd push (bad) xor push test fdivrs fcoms (bad) mov xlat (bad) dec inc dec adc sbb int stc push or pusha push push jbe test adc incl xor jne pop stc mov cmp dec pusha and clc lds mov xchg inc inc nop add pop hlt mov or sbb cmp and addl dec clc scas or lahf dec pushf xchg jo push pop xchg sar test inc ds jg ficomp sub cltd dec add sbb dec mov push imul push inc mov insb addr16 sbb pop push mov xchg ds sbb insl ds dec pop sarl inc jecxz sahf sbb fsubrl iret add pop push aas cltd rolb dec cwtl cmpsl in rcll ljmp imul imul jl rcll ficom or or inc lods jg mov pop pop mov add dec xchg mov jmp xor xchg out dec adc scas xchg inc das stos jb test iret stos push nop (bad) movsl dec mov aam dec mov xchg test arpl fildl ja mov cs out imul gs xchg push repz dec inc nop cltd pop push sub mov pop lds xorb rcr pop jmp (bad) faddl nop sbb push vmwrite repnz xor jl bound aaa adc push push mov test pop inc xchg in (bad) jle cmc (bad) mov insb cmpsl leave cmp mov adc rdmsr insb cmp hlt lds jnp pusha pop add push mov inc dec loope sarb cmp cmp repnz pop jl inc inc decl jge adc adc cmp or iret push jecxz dec leave cmpxchg and jo dec scas shlb les andl repz in and stos out mov or jnp test out scas push mov in xchg arpl inc mov ss dec sbb sbb rorb jo sub cmpsl push ja fstl sbb pop mov sbb jne scas addb daa and fsubp push xor mov mov inc push dec cli jle shr xchg fcmovnbe jbe pop popf nop rcr dec cmp add add aaa sahf enter sub pop pop sbb mov pushf rcrl inc lea cmp icebp cwtl into jp mov test out enter pop and and jnp xchg cmpsb mov cmpsb cmp test xchg aas sbb fwait sub push pop test inc fldcw pusha inc push mov pusha std (bad) in pop in push or pop cwtl js sub push ret cmp pop lahf or out push in and or and cmp xchg pop push lds pushf movsl pop jbe cmp aas dec sub test add mov xlat xchg xor xchg mov and iret xor imul cltd dec repnz mov lods sbb scas push mov repz jns cmp pop ret inc fstp je mov icebp and insl outsb adc (bad) xorl mov out imul sti sub jmp ret in jb jbe and lcall and mov scas xchg mov xchg xor (bad) scas loope sbb push test js cwtl out xchg imulb sub xchg and insb push in push or pop (bad) outsl decl call inc test (bad) mov pushf lret mov inc mov cmpsb fmull and mov add sbb fwait jo ss adc xor mov xchg cmpsb and dec ret xchg lods lock (bad) mov pop jno sub sub mov out sbb sti movsl loopne add xchg rcr sub dec aad jle dec lret dec lcall ror jmp ds into inc cmp out inc inc call xor sbb (bad) je adc fidivrl and jb stc aam dec cmp inc call cmp (bad) mov pop jbe mov mov sub mov stc fisttpll adc inc outsl pop lods lcall aaa pop jns xchg aas (bad) jmp sub out pushf fldenv loope fdivs mov lea rolb fidiv pop test cmp mov out ds enter push sbb or aad xchg xor mov jae cs push xchg jne (bad) out test push fprem1 jg stos cmc lods mov mov mov imul mov sub sbb loopne loope (bad) gs xor dec fucomi dec insb and add mov mov or roll cwtl stc sub push cmp icebp xchg push js sub cmp out (bad) push mov stos xor insb divl es pop dec loope into adc add test lods lock cli or popl lds jnp sub ret cmc pop pop pop mov outsb mov push ja xor nop sti xchg (bad) cmp movl test lds fs cld (bad) repnz inc mov cmp (bad) popa cmp jl std imul (bad) mull adcl jmp and jmp clc cmc jmp movl pop fcoms adc in popf inc pusha dec test (bad) icebp xor lods sbb cmc ret dec sub xchg dec inc sar or jmp outsl xchg jnp fs mov push ss test mov cmp cld mov test and lret mov flds mov mov jge pop adc adc mov nop inc arpl addr16 xchg cmp ja and loope and movsb cmp dec sti in lcall dec mov jbe cmp in add push inc lods jg mov popa aad cwtl add mov or mov inc add cmp aam and jne xor cwtl cli push or mov push test out loope out test dec jnp into (bad) pop popa push xchg in insb (bad) mov mov cmpl jge hlt sub jmp dec or dec push pop jecxz js inc aaa pop cmp fldenv rorb cli test imul pushf movsb cmp cmp ret add sbb mov mov mov fsubrl mov jle (bad) push fsts sub test pop jne stos inc sbb adc outsb add xchg fcmovu mov and pop dec push cld insl repnz (bad) int3 (bad) sbb test xor sahf push inc jns ficomp rorb push mov inc fistl ja or jo mov loop add sub fcomps sbb mov (bad) pusha add loopne adc pop out fucomi or jg pop inc cmc lds pop adc out stos mov mov add into sbb das jne mov pop push adc push outsb and or mov data16 jg test sti fimul mov pop lea stc mov insb popa sbb (bad) xor or add adc pcmpgtd mov sub fistp fstpl cmp cmpsb dec or mov repz push (bad) cmpsb cmp push jno xor cli pop nop ficoml or xor enter (bad) call das idivl sbb push aaa jns inc nop mov pop xor mov arpl cmp mov std aad mov push or shll test test push je pop inc pop sti (bad) pop fcmovnu xor jns test jp xchg mov and clc imul insb punpckhdq sub jo mov (bad) mov adc scas jle pop cmp mov mov fildll hlt dec mov xchg fisttp insl xchg dec pusha repnz cmp insb and data16 daa xor rcrl test add xchg adc xchg adc addr16 pop or dec scas pusha inc push fsts outsl xor and sti fdivl mov mov (bad) push push sub mov dec dec push lahf fldenv ja mov movsb push mov jl jnp inc cli sub sbbl fcomps mov std insl cmp loope add adc jg loopne jg inc fimull adc cmpsl sbb fstpl jno bound rorb and cwtl or sub sti mov xchg ss cmp pop push test lock mov (bad) pop ret lock pop mov pop sub les shrb ds or fmuls inc int mov movsl scas dec ret dec inc push outsl (bad) aam rcl add addr16 sub push sbb push pop or xor mov pop and mov pop testb pop imul outsl inc mov clc jge pop fsubl push es push lods dec pop pop xchg (bad) and loopne rcr sub outsl push addl jecxz or ret fnop daa in adc sub adc lahf jl bound xor sub test jp popa imul (bad) int3 mov push jne,pn jbe dec lahf sbb add fwait (bad) dec movsb mov loope arpl ja cli outsl sbb adc push cmpsl mov adc push fmuls adc cmp xchg jl jle aaa sbb mov sub aam dec into inc jg test out adc cmp push sub loopne test inc pop push mov inc ss pushf in cmp mov push adc adc daa out sub stos cltd xchg iret jae cmpl sbb mov test outsl data16 aad pop mulb sbb call fwait (bad) js xchg clc clc adc add inc add mov loope inc mov inc lea sbb shlb cmpsb es test (bad) mov (bad) ss (bad) xor data16 ret (bad) cmc lock sbb sub cmp xchg xchg add cmp mov sbb dec test xchg (bad) into das fwait out pop cmp pop mov daa ss cs mov das pop test dec inc popf mov add mov jnp (bad) sbb insl in add loopne arpl je push ds mov test and imull push (bad) sarb rcl adc mov sbb (bad) (bad) pop mov cld test arpl sahf push jl (bad) mov adc (bad) lds dec leave insb cmp push add mov sub add push mov test adc lret pop insl into or scas test bound or inc faddl sbb imul pop mov add aaa iret dec out dec mov mov xlat mov orl cmpsb incb ljmp lock xor lret test mov push lahf pop xchg or xor cmp call faddp xchg mov imul icebp lea enter sti lcall fist jns inc lahf jo add jp ret clc test adc jnp push pop pop aad psrad loopne sub in xchg iret ss repz xchg pop or lret scas (bad) ja push inc mov cltd arpl lock je cmp and cld push in or loop cltd sub inc sbb jnp shlb xchg adc fnsave xor jp pop out nop cmc fidiv scas int3 dec mov pop inc lcall mov push repnz xchg xor scas jns das bound fildl movsl jmp mov cltd pop mov xor fwait push sbb pop add loop int3 add mov dec js sbb xchg fs jo rcr inc cmp or add in (bad) jns pop mov rclb sbb or pop or lcall sub jg addr16 (bad) cld inc jge ss jbe aaa in ds push ret lret and cmpsb lcall leave shll movsb pop (bad) mov dec jecxz jb rcrl (bad) pop nop cmp xchg mov fcoml inc sbb mov mov dec addr16 lret xchg mov pop xchg test or test aaa pop xchg dec dec adc fdivr loope jg aad xchg add fwait into cmc and xchg sarl dec and inc jle xchg int3 mov push int3 sbb imul pop mov test stos dec lea lcall loopne sub push inc cmp ljmp xchg lods push xor lret stc (bad) push sti mov xchg (bad) out adc or sub pop mov dec jnp push inc jge push pop push adc sub scas daa imul (bad) aam fsubl xchg out jo lock dec lods xchg jl orl or insl jecxz adc jl push hlt (bad) testb lret loopne pushf inc negb aam jmp rorl psubusw jne mov test add mov jo stc mov mov mov in out icebp shrl mov sbb add lds adc out fisttpl xor mov rcrb insb push test or (bad) popf outsl test roll lcall cmp fnop lahf sahf (bad) mov push divl cmpsb mov ja sbb (bad) dec cmpsb imul lahf add and test push (bad) cmp (bad) test pop int ljmp pop stos (bad) stos mov adc add rolb pop out fcmovbe ss jle fstpl mov push add pop test xlat mov dec mov and rcrb xchg jg popa sahf cli call jmp add push int3 jecxz fprem1 cltd stos push push js lcall push jge mov pop inc push fwait mov and push xor (bad) aaa outsb out xor push push (bad) push mov xor or sarl jg gs mov std xor clc xchg xchg mov fisttpl adc (bad) xor dec pop xchg pop jmp arpl int3 xchg fsubr dec push xchg push lret call test movsl movsb cltd out pop cld cli mov sbbl jno add fwait adc dec or sub mov into push cmpsb cmp mov notl inc dec xchg fcoms (bad) stos test rorb adc ret std (bad) repnz (bad) sub movsl push ret jge jo sbb clc ds xor in cmp sub jl sbb mov decb mov into pop inc add loope inc add mov dec xchg sub aaa push jp sbb das or lahf sbb iret (bad) jb lods in adc sub jae pusha lods sub pop fwait xor clc decl jns or out jg mov inc lret pop push xor popf mov movsl call xchg pop and fdivrs insb jmp cwtl adc xchg std xorb movsb movsl mov out inc jecxz mov out add mov ds aam mov dec repnz out mov cmpsl mov inc sub test cmpsb cmp repnz (bad) mov pop movsb mov push xlat ds mov or shlb mov ret movsb dec lret jmp sbb or aam sti arpl mov add sbb mov call xor and inc icebp lods and iret ficompl lods adc cmp or or adc add dec fdivrs push sbb push aaa jg and cmpsl insl scas and xor das or outsl repz fisttpl jns cmp lahf sub daa xchg pop add sbb scas stc cmc adc imul or fsubrl pop push in mov nop pop ret inc jp int3 test xchg or pop xor repnz and mov icebp ljmp fsubrl sub pop cmp fstl sub pop ljmp cld dec and sub aam ds repnz xor sbb ja ds adc pop mov inc iret pop int fs ljmp in mov inc sub pop mov fcomp mov push and add (bad) out jbe and cmp inc pop andb cld pop and in bound dec test pop ret mov ja push adc ja ss pop scas xor push mov sti cmp pop xor sub cltd mov jge insl xchg iret adc mov fnstsw popa js lahf and jae pop loopne mov mov cltd pop pusha inc pusha in jg push cltd add in jp inc hlt (bad) sbb inc cs mov insl fist dec mov bound xorl pop aas xor ret lret jns nop dec popa jno out sbb xchg lds je xchg lret adc out add ret lock sbb ds xor or jae push loope cltd cmp jmp lock imul mov nop jo dec cltd xchg pop fwait lret xchg (bad) repz fisttpl lock mov test (bad) cli xchg ret cmc sahf mov cmp or les pop cli cmpsb cwtl insl mov pop out cmp jb insl sub add pop mov pop (bad) or mov jnp sbb lods test dec pop push sarb cwtl xchg inc adc pop mov add negb ret push ss loope gs mov mov inc clc test fs and test push nop adc xchg and jecxz arpl das inc popa xor fdivl jp cmpsb xor push xchg es push ljmp scas loopne aaa das and arpl daa movb push mov inc pop cmp xor mov mov xchg hlt je xor (bad) (bad) mov ss cmpsl test repnz and jp xor movb lods dec sub (bad) out cmp mov aaa arpl pop aad add add (bad) jns dec andl scas sbbl pop cmp cmp jp mov push in jl in adc xchg dec inc in or das lret sbb arpl adc sub shl xchg shll jae int3 sub jbe mov jo leave out int3 inc or imul add popf or inc pusha push mov ljmp mov test lahf xor jb jnp fbstp jg jecxz popa push mov jg repz (bad) jmp dec pushf clc out aam je ja xchg mov mov and mov jae pop add sahf jp fs ljmp pop test lret loope,pn fimul push ss setae xchg fisubrl xchg pop jl or and xorl or mov jnp inc fdivl sbb das movsl leave (bad) mov inc enter jp mov fs lea pop xchg mov mov cs shll jg lock dec je and inc and xor loope push loopne cmpsb jbe inc sti jp arpl ficomp dec repz sbb lods packsswb mov pushf or in mov out in pushf sub xor pop rcrl mov push (bad) xor call test cmp mov daa jg cltd sahf cmp lods push push or mov cmpsl idivl lock xchg (bad) ss nop or or pop or mov (bad) mov outsl mov sub dec jle fadd das leave in pusha xchg mov ja and ret inc xchg and or mov cli mov aas sarb add jg pop jb movsb stos outsb repz mov xor test sub or cmpb pop jg adc into enter mov lahf out sbb mov xchg cmp cmpsb mov push dec in mov mov stos insl xlat in sahf mov negl in push push je mov mov mov cmc adc or jmp xchg jnp lds jno data16 sub iret xor cmp mov sti es loopne lea data16 jo (bad) imull or ds add in lret aad cmp mov sbb out call adc xor fucompp (bad) dec mov loope pop mov (bad) out addr16 fildll ja adc fs xor pop xchg xlat dec sub arpl adc lea lods cltd mov jbe clc leave ljmp cmc stos or aam lds cli cld (bad) test jge ljmp test stc int3 popf (bad) dec jle xor fidiv fsubrp lret and test idiv mov (bad) lock pop lock push push les cmp mov jae test mov sti mov and fildl js ljmp test add add xchg xor out dec sbb jae or lods cs movsb (bad) inc gs mov (bad) pop stos sti dec loopne mull daa mov cld xchg jns sbb fcoml lods (bad) sbb test nop mov mulb add dec iret jp je mov addr16 xorl hlt es jmp cld or inc pop xor mov add dec subl sub lods adc or mov fcoml pusha cmp mov imul fsubr aad aas cs jle xchg scas cltd sti jae fstpl xor mov inc mov cs add dec int3 int icebp es mov inc lods push ret enter cmc adc pop cld fistl js ret jne scas mov mov mov aad or sbb xlat jbe pop (bad) or sub testb div aaa push inc mov and sbb jnp push cwtl and pop pop pop push gs fcoms adc mov sub (bad) mov or xchg inc pop xor push lret inc or xor in loopne push add fimull out add enter jl mov (bad) cmp les jle stos flds fwait and cs jl (bad) popf lods addr16 cmp or cwtl jbe repz fstpl lret add push jle ja xchg or push das pusha mov cmc xor popf cld inc add out lcall (bad) movsb stos cmpsb lret cmp fbld or mov sbb (bad) mov rcrb pop jp jmp outsl das adc mov orl out and mov push cmp ret cld cli dec movsb mov jecxz imul out push aas int fdivrl mov jg jb xor das mov mov ja imul pop andl int hlt adc sbb loopne bound adc xor mov mov stos shrl and pop dec clc ret sub xor jp js fwait hlt inc cltd jle outsl or sub ror or iret clc cld mov mov pop test adc ucomiss faddl push in dec mov faddp push repz cmp loopne fidivrl cmpl es fcoml jmp in adc jp mov xchg in push fild cli mov inc pop aas jmp cmp notb (bad) push inc cwtl test pop mov dec fndisi(8087 arpl dec sub inc cmp enter fs push popa mov pop push sub cmp pop ficom add mov lods xchg ror insb into inc jle repnz stc push fwait or or daa mov xchg dec (bad) repz lcall xor bound jns aam push test adc test mov dec fs fstl cmpsb (bad) mov dec mov loope xchg test nop ret push pop adc and mov fdivl outsb jns leave bound inc std (bad) cli lds sub (bad) or mov jg or mov pop shlb xchg xor test cmpsl int3 clc jno sub xchg adc pop lahf add aaa cmpsb decb mov out ss in and inc and and xchg loope imulb (bad) int sub mov pop adc xchg pop lods subl or push lock icebp cmp cmovnp add fwait xchg data16 dec push ret out faddl xor inc and cli mov nop mov xor ja das push testb sub dec stos pop xchg ds sbb xchg push outsb pop inc sbb nop adc sub mov hlt insb aas pop xor mov mov push es lcall cmp out xlat mov lret pop repz cmc out pop aad js popf mov xchg pop in cli dec xor xchg inc add jp mov xchg arpl popa sarb mov xchg iret cmc mov mov ds in push mov or lret adc jno fwait ret call fldl (bad) out and sbb aaa cmp mov mov push inc sahf fisub out push insl push pop jae cmp xor xchg or mov (bad) sbb aaa lcall and cmc xchg iret pop jnp insb adc clc iret and sbb inc out sbb les (bad) insb dec cmp jb fdivrl adc outsb loope add xchg dec pop sbb arpl or xchg lcall cmp push ficom or imul mov inc int mov sbb shrb int push and adc push cmp or std imulb fstl or shrl insb int inc inc leave inc lock into add add sti and push lods push mov neg mov sub subl mov sub pop pusha fisubl ret pop sub pop sbb pushf cmpsl ss testb addb in pop ljmp inc aad jle jge cmp mov out subb pop lods pusha dec and lods fistl mov std mov (bad) sbb jno or xchg das outsl push sbb fstp mov xor jns jge arpl xlat andnps inc push push or adc lret into jbe add sub fimul ja sbb ja xchg (bad) mov fcoms sub insl xor fs lock push push push inc mov lock xor loope pushf in lock xchg lods inc scas pusha add jnp negl jl add dec or jl dec jno sub and inc xchg cmp xor cmp out out push flds xor mov sti arpl sub in jo (bad) jg enter dec imul push pop cmpsb aaa sbb pushf fdivs sbb jnp fwait push sbb jb roll popa xchg sbb add ret jne insl imul cmp stc mov dec adc mov push mov xlat push shrl jmp lds push jns les test js int3 mov ret aaa xor out pop sub or loop rolb pusha inc (bad) jnp xor jb mov push popf (bad) in (bad) mov adcb fmull negb inc xchg out sti rorl cltd fdivrp pop dec lods pop add mov scas pop sub xchg xor sub jl sti bound dec shll xchg ds push lea fstps xor jmp lods sub aam out shll cs xchg (bad) fs jo sub icebp pop js push mov insl dec sub out (bad) jp movsb cmp out outsl pop clc push jo sub inc push in add or cltd (bad) fistl rorb xor loop pop nop mov xchg lods and jg insb shll sbb ds mov mov and lret sbb jle sub xchg aad ficoml mov jno jmp pushf (bad) jo loopne mov clc call pop fcomps and xchg orb dec fadds (bad) dec ljmp lds ds mov js (bad) imul stos inc andl lds mov adc dec lret dec (bad) cmpb sahf push ja icebp in je pop out imul arpl (bad) int ljmp ret popa lds dec inc out push repz (bad) xchg je jae mov test xor scas jno jle ret sarl aas mov mov stos stos aam pusha orl shrl test inc aam test and push jg (bad) scas (bad) clc daa cmp fadds out movsl and or xchg cs dec stos arpl mov div jbe pop pop dec stc or jl inc outsb decb adc loope (bad) jmp movsb mov out mov mov pop jp (bad) jle mov sub rclb orl jl dec jmp popa inc aaa leavew hlt jnp lods sbb and or xchg inc push pop inc fucomi popf test (bad) pop cltd fbstp jne fsubs sub xor and nop jnp cltd xor mov loope out cmp inc jle inc pop cmp and jmp push and call mov add jge stos in xchg loope pop lret in js rcl adc cmp daa push subl push adc jns mov add bound lock fwait add sbb pop dec es iret divps (bad) outsl add xchg add aaa inc jno stc je mov fistpll xor cmp fildl js sub mov sub adc je and sti std fsts xchg xlat dec cs add push xchg pop cmc inc mov in or movups ljmp sbb insl jl,pn mov loop push jecxz maxps xchg sub push mov fnstsw sbb xor sahf scas pop ds mov fstpl sbb dec cmpsl sarb aam push stos sub inc lds xor sub mov lea in push add pop (bad) push pop shrl inc adc int3 (bad) mov or push dec jmp or pop gs addl push cmc cmp divb and inc outsb push push sarl sbb imul and inc repnz inc inc lcall cmp jl fiadd imul stos push test lahf nop insb enter loopne mov lods dec repz (bad) bound mov add pop sbb jle push pop test sbb xchg jmp or outsl push inc in xor jns (bad) pop xor popf and pop mov daa cli insl mov lods xchg lods adc pop cltd xchg jmp lds test mov mov xchg (bad) fcoms mov push jg inc ja ljmp dec adc mov fwait inc es lea jns push xchg pop cmp loope or dec out jle sbb cmp jmp fptan movsb jmp orb jo jle adc push repz shll sti sbb out jge imulb (bad) jae mov xchg xchg pusha xchg add jecxz stc push loope sub in push and (bad) sub icebp sar fiaddl loop fistp (bad) add loope jns cmp mov daa lcall xchg shr xchg and loopne clc out es jge fnsave (bad) mov loope adc push mov call xchg push pop pop push out jmp mov hlt jb rcrl test and fiadd aas push push aaa ljmp fistpl out js jecxz or test mov jg adc inc out data16 pop cmp xchg inc pushf sahf add jb addr16 jbe mov and lods sbb test xchg sbb repnz xchg cmp mov cmp push pop std (bad) mov test in adc xchg mov jbe mov push adc cld nop jle fdivp loopne cmpsl mov sbb enter aad add mov xor sarb cmp inc (bad) gs outsb das jecxz (bad) bound iret jmp (bad) jo (bad) (bad) std mov sar sbb imul divl jno jecxz pusha and xor mov (bad) ss test lds leave bound or add mov xchg cwtl ss mov sub pop inc jbe pop pop inc mov xchg dec pop mov mov dec cmp or es mov mov sbb popa sarl mov pop nop add and cmc cmp pop push cmp outsl push jns dec enter outsb (bad) dec dec push adc xchg push (bad) xchg les cmp mov aas mov aaa ja (bad) (bad) dec into fistp aad mov xchg stos sti adc adc adc sub push mull popf popf int3 ja dec push dec add lods stc scas and mov ret lret arpl imul cli lret fmull jg push loope andl lcall es aam mov out mov dec or repz in push sub int3 lahf dec icebp or cmp jns sbb jmp inc ds xchg push xor and adc insb dec and jp ja fstl hlt or dec xchg imul out mov fwait inc push daa dec mov out mov sti aam (bad) leave jp mov jnp add push sbb sbb jno sub icebp enter fcom mov adc or bound (bad) (bad) mov ss lcall and mov (bad) rorl (bad) adc js aad push hlt adc push add insb and ds out out cwtl cli icebp xor mov daa and loop (bad) lods fnsave repz xchg test dec pop leave and mov push sti xchg leave mov popa pop out mov pop cld adc cmpsb outsl dec push push cmc add mov xor xor es neg andl daa jo mov jne dec pop sub mov jb lcall sbb in and les outsb sbbl xchg (bad) (bad) mov fwait xor mov jle daa add xor inc jae jne jg dec mov mov lea mov test mov das test push mov (bad) xor jmp inc mov lcall stos push fdivp enter fmuls xchg fsubrl incb xchg sti sub mov mov push cwtl mov outsl jmp lds mov test jp mov frstor pop mov adc imul mov sbb xor sbb jmp adc jle sub and cmp mov push mov pop cmp fs mov fidivr stos mov ret lcall loopne loopne xchg pusha sbb stos push adc sub push clc sub movsb push jae shrb (bad) je sbb xchg rorb fnstcw pop inc push sbb rclb mov or call insb popf dec sbb xchg xchg mov and push cli lock movsb dec enter mov pop jb incb and ja sub push or pop ret dec lret imulb sbb mov inc cmp and push push stos lret icebp adc mov in test xor inc sbb push xor jb adc daa fadds dec and gs out add int mov ja,pt popf xor add mov push cmp xor xchg insl sbb int gs cmp add fldcw sub testb xor mov fwait ja dec mov mov pusha addps nop (bad) stos xacquire sbb mov sub (bad) sub lahf ja dec aas jp aas ljmp lock mov orl enter ss mov (bad) clc or cmp push push test rcrb jae mov jb mov stos mov loop lret or mov insb jno or roll mov mov icebp or push shll jno push mov stos mov xor loopne or jne jg mov roll idivl pop add shr inc jb mov hlt (bad) sbb imul stos mov push lahf cs cmp add push lea insl aaa jle mov std dec push adc xor ret jb mov sub mov test jbe shlb (bad) in nop pop pop scas cmp dec inc pusha mov and ljmp cmp sbb mov loop movsb mov ficompl loopne mov hlt dec sbb adc fnsave pop sbb dec push jnp icebp dec repnz xlat out lea out stc sahf fcomi in in or lret xor (bad) adc in rol (bad) xor dec imul add and ret lods pop stc pop leave call call cld sub fldenv xor fld dec adc jge adc (bad) xor and push dec mov test jp mov mov stc lea mull add pop enter in cmpsb shr add dec push or ljmp repz push push sub mov pop scas cmpsb jns fdivl add mov ljmp or aas loope cmpsb out iret xchg mov out cmpsl sbb lods in cmp inc push cmp pop xchg cmc sarb inc fsts mov xor (bad) jne inc bound adc incl das orl dec mov jo fcmovu mov jle add sbb mov pop (bad) cmp loop sub cs out xchg and icebp mov call mov mov xor sbb or mov push lods mov push mov out sbb hlt jb (bad) insb scas sbb lcall negl leave adc cmpsl test cld mov enter fnstcw jo fwait pushf mov daa push ffreep call cmp stc (bad) sti or pop rcll pop sbb cld popa mov fidiv xor cmp dec (bad) fidivl loopne in or xor mov sbb lods sub mov push push jl ret push inc negb (bad) stc inc pop cld (bad) mov nop and jne scas mov adc out pop bound nop adcl mov stc jmp adc (bad) mov ljmp sti jo fldl es stos pop adc cltd fbstp arpl leave pushf and ret sub inc loope sbb sbb xchg fadds fistpll repz icebp or (bad) xlat add push cmpl inc or dec add outsb clc jb rcrb cmp jns test int3 pushf mov xorb out push jmp jle xchg inc xor mov test jle xchg rol roll ja push push dec mov push dec sub (bad) jae fcomps sbb adc pop mov add sti fwait or les add mov inc (bad) sbb aam pusha push popa lahf (bad) mov sbb hlt ret xchg (bad) mov mov insb mov cwtl jg cmpsl add xlat inc inc push mov inc es scas xchg pop insb jbe push sbb ja xchg arpl push mov notb int3 adc xchg aad xchg fmul cmpsl mov hlt mov inc cmp xchg cli xorb dec push stos out pop mov in xchg incl xchg bound xchg pop inc mov mov mov test pop mov or std aas stos mov pop adc in (bad) movsb orl mov push (bad) (bad) mov es pop mov cwtl roll mov popa adc addr16 adc pop fisttp ret sbb cli push dec in ret mov add sbb or jmp add push les insl sbb imul dec aas mov rorl ret decb cmp push jo fildll sub addr16 mov adc cmp xchg and cmp jmp xchg out rclb sarb push and cmp (bad) dec inc sub shlb fs push mov adcb cmc ja adc or or addr16 add out dec mov sub dec ret cltd xchg adc sub push iret xor dec das xchg add push ds and mov pop scas dec adc jae sbb jl push (bad) pushf sub dec pop ret jns test popf mov outsb aam cli jno xchg sbb xor int lods dec mov dec cwtl (bad) mov mov xchg cmp adc xchg dec cli and imul sub sub inc pushf cmp and dec dec addr16 arpl jne std fistl scas mov dec arpl push and inc lea sbb (bad) xor add andb aad xchg jne add test jbe pop push in lcall sub int lret iret push jnp adc and jp repnz cs pop jmp scas xchg popa mov sub imul dec out iret call push movsl (bad) sbb clc mov sub add sub stos daa dec fucomip dec lea cmpsb xchg sbb and mov pop jecxz jle ja cli addr16 xchg inc and adc xchg add jne ds jns sbb lcall or daa imul pop addb xchg cmp clc mov cwtl inc mov push mov (bad) mov dec adc push (bad) xor icebp (bad) dec xchg inc mov xor push out test pusha xor cmp shll lea mov jmp (bad) mov cwtl push add dec add in mov stc sarl std ds jp sub jp xchg xchg mov imul ss scas out fcomps addb test jmp mov pop jno inc xchg pop push pop fistp rorb cs push cmp and fbld inc aaa in test or push add aad xchg xchg in addb mov sbb jecxz imul test addr16 imul out movl xor pop test pop mov jecxz xchg lret xor cld mov pushl sub jmp mov mov xchg jno xor (bad) cmp jno cmp (bad) mov and das std pop pop sti (bad) adc jl mov (bad) push inc push lret testl xchg adc ljmp xchg out sub xor xchg add push dec fbld fs jns push sub out int3 rorl mov xchg dec and xor pusha dec xchg cmp and push pop pop insl imul jg pushf gs pop or dec insb sbb dec pop decl mov xor and mov int subl fisubrl mov pop ljmp insl cmpsl icebp dec repnz or dec iret mov mov test mov dec cmp jbe dec xchg xchg insb sahf cld sbb outsb xor fstpl push mov ret xchg out rol xchg lea addr16 sti mov mov imul pop and ret movsl xor add jbe test pusha sbb xchg ss cmp rorb test cwtl mov jg std bound insb out xchg data16 jg push inc xchg jg (bad) pop dec ljmp push mov fs repnz (bad) test fsubl sub mov imul xchg pop les insb push mov or sti (bad) lock push outsl int scas bound inc addr16 into into in mov fistp mov cmc scas aam clc xor cwtl mov xor lahf xlat mov mov jmp mov stc cmpl sbb rol mov inc loope xchg mov cld and cmp fcmovnbe rorb push dec or iret jge mov lcall push pop cwtl ljmp fcmovnb sub or or pop jecxz daa nop addr16 pop insl insl sbb jl jmp in dec in sbb outsb pop cmp jns pop pop stos cld jp pop adc lcall (bad) or xchg jne mov push lret mov sub inc cmp adc xchg mov cmp jp xor cmp ljmp aas add leave inc sbb jnp into test ret push and inc mov pop jne mov lock jmp sbb gs push mov fcoml dec scas into cltd add push jg push daa shl push mov nop stos xchg mov movsl aas push pop arpl lret out jp out and in aas jnp xchg xchg shrb clc test sahf sub add fwait (bad) repz mov sub jmp cmpsb call jecxz (bad) cmp cmpsb jecxz (bad) (bad) xor mov lahf inc mov test sahf fidivl (bad) sub cs lea xor or cmp cmp cmp jbe std into cmpsb push jno movsb inc sbb sbb xor dec adc shlb sub pop push mov or (bad) outsb pop (bad) sti sbb cmp mov sti arpl loope fs xchg rorl pop aam inc rcrb add sub es cmpsb mov xor (bad) in xchg mov pop push aas aad sti lods insl mov in idivb rclb je lea dec dec xor ja xchg mov xchg test and sahf or mov cmp rcrl pop xor jg dec adc inc sahf lock clc mov mov leave (bad) outsl pop fdivs lcall push (bad) xor or add push sbb inc and hlt icebp les in sub jmp pop sub inc xchg mov movsb dec xorb lea pop xor or xor jno dec mov push dec push fildll cli xchg dec repnz lods cmpsl out pushf mov fwait inc xor pop pop ret negb cmpl in (bad) dec repz sti ja fidivr pop lcall data16 movsb mov mov or shrb mov movsb rorb mov aaa test dec sub jae xor and movsl pop push jns movsl icebp sub leave fdivrs sub xchg ret lcall enter imul push movsl adc pusha mov jno and lret in into cmpsl adc push ret xor cmp dec cmc mov xor popf jno jmp lret cmp pop cmp inc jg dec jle pop xor jmp stos or dec je icebp jo mov insl jns push sub pop xor jo mov xor push incb es mov (bad) repnz int3 in lret pushf call inc mov dec pop lock mul inc iret jmp mov dec jae pusha faddl sbb pop and (bad) (bad) daa inc xor (bad) sarb jle add scas lods mov loopne adc lcall cmp (bad) xor in sbb out push scas xor xchg mov jecxz jl mov scas xchg daa pop cmp sub insl (bad) (bad) je insb lds int (bad) cmp aad sahf or scas in (bad) lret xchg mov pop scas adc shr pop daa push sbb and pop dec push mov inc add out sub push mov lahf js mov cmpsl sbb out cmp enter test in jle sub arpl or cmp cmp scas aam fisttpll add aam mov mov jbe sbb dec inc xchg xchg and (bad) mov loope mov cmp push add sbb in or push mull sub and loopne mov bound mov pop mov lods mov sahf call (bad) arpl mov shll dec cltd in lret mov roll and push add out mov lea or shrl iret scas xchg cmc cmpsb push lock notl cmp in dec sub inc aaa push mov jge sahf subl repnz push fildl fiadd xchg adc inc outsl fildl jae mov sub dec (bad) mov xchg cld xchg mov add ret xor inc lcall cmpsl mov adc dec dec sbb xor sbb push std sbbl pop test mov sarb mov xor pusha sbb lret mov cld (bad) ffreep pop xchg push outsb inc test fimull femms cwtl mov pop dec aaa stos popa into popf adc (bad) icebp cmp mov std (bad) out adc mov and add cmp (bad) xor (bad) enter adc (bad) int lret addr16 and sub movsl mov lods lahf movsb push xchg and xor push cmp mov pushf xchg or cmp in imul std int lods dec and adc ficomp int cld jne cli sti fcompl insb scas mov out add jns cltd gs in sarb jmp cltd cwtl sahf xchg cwtl outsl pop jnp inc mov addr16 xor test sbb (bad) mov add cmpsb dec cmpsl inc pop icebp push aam adcb jb pop pop out (bad) cmpsl adc nop test inc pop add lea daa mov test cmp pusha inc push in sub pop daa dec cmp std mov fs pop (bad) aas (bad) jb pop push mov aam insl pop in cmpneqps ss (bad) pop mov (bad) fldl or idivl std mov dec and mov xchg out fisttpl out xchg lds pop data16 mov scas sub mov add out popa push jns lret test dec and mov xchg dec push inc and sbb test pop jb xchg add movsb mov adcl pop pop jae insb movsb xchg in bound fcoml enter pushf test movsl mov sub push and or mov push ja or jbe dec pop addr16 das inc int call cmpb mov adc cwtl xlat scas les lods bound cs leave das cmpsl push push sbb or and xchg dec cltd jecxz adc jmp xchg bound and add loopne pop call jne sbb mov sub shr (bad) (bad) fsubrp adc incl dec iret push push cmp push pop lods pop pop fwait (bad) and and sub pop xchg xchg lods cmpsb lods fstpt push imul imul sbb leave mov jl dec dec xor sbb notl bswap or test mov push and mov (bad) out cmp mov insb lods xor ss cmp adc ljmp sub sahf sbb aaa popa imul test xor xor sbb test xor lods fisubrl andl outsl jge push cmp pop mov dec mov push and (bad) jne shr mov imul movsb add xor pop xchg lahf sub popf movsl (bad) pusha inc push cmpsl xchg mov mov mov add test sbb pop sbb and and cs lcall fldenv (bad) sbb shll mov out push mov sbb data16 mov ss pop push test jb and js imulb add pop stos jmp aas cs insl (bad) insb pop jge xchg mov stos push and xchg inc mov pop cld jecxz pushf movsl iret jmp cltd inc mov iret adc fdivrl add xchg scas aam test movsb andb pop addr16 movsl cmp in sub mov outsb pop jmp cmpsl (bad) mov stos in push movsl cwtl insl cmp and mov test sbbl pop push xor jecxz and call jns shr rolb sub and jecxz ljmp dec cmp and movsb dec sbb cmp jle testl clc jg or (bad) push pop stos add and cmp add dec fcmovnb sbb jne iret add xchg add dec mov hlt ljmp mov cwtl xor dec arpl jl jo mov mov push (bad) divl jge mov ljmp jne inc cmc adc mov scas mov in and lret leave jecxz mov imul pop mov cmpsb sti mov mov jle mov jbe (bad) push sbb xor cltd cmp adc push pop andb mov push gs xchg sbb pusha and cltd aad push nop lds mov and movsb ret rol adc sub lock jo sub mov stos fnstenv hlt fs imul jl mov mov lock jmp push push sub roll mov pop add push fs das sub pop popa (bad) mov sti insl call addr16 jbe add dec mov mov mov aaa pushl xor add daa push scas or out mov loopne mov daa mov mov sbb dec xchg and sub jns popf pop or xchg fdivrs jbe sar jns cs fldcw stc cmpsb out pop and sarl or test inc add or pusha cli call adcb sub jne cmp mov sbb mov add in inc mov sub imul add out cmc jbe sub mov jmp push mov push pop pop ds cmp push fldcw push rorb lock add lock or xchg sub pushf aad push (bad) xchg es mov xchg pop cmp pop mov sahf aam imul insl (bad) push and xchg jle scas sub lcall fwait jp jb push jae bound add inc in hlt data16 cmp cwtl sbb add sub lds (bad) inc fcomps push mov (bad) leave mov mov pop cmp add sub sbb icebp pop pushf adc jmp stos lcall push nop pop push dec mov fdivrs loop cmpsl das mov xchg inc dec outsb pushf in lret sub cmp pop cltd test insl aad arpl dec mov frstor test lods in jecxz mov or ljmp aam jns in fistpll jo loopne js add shrl scas shr imul mov jnp ljmp adc add and repnz mov inc sbb mov xchg push rclb icebp imul lods out sub out mov les in mov dec mov lahf imul lock leave sub sbb inc mov shlb mov js push mov mov orb mov (bad) jne and test sbb and push xchg sub mov scas pop popa stc daa loop and cs mov in mov in pop cltd cmpsl jae sub imul xchg xor (bad) aad mov into insl xchg pop push cmp mov mov or lret repnz xor mov imul aaa jnp lods fnstsw xchg add pusha aad add mov fnsave jg ds dec inc cld pop popa fisttpll pop es fdivrl sti mov je stos mov daa arpl shlb ss cwtl dec jmp mov adc mov inc andl lret jmp cmp std pop and push dec je sub insb xor (bad) mov mov sbb push rorl mov aad out nop mov mov push jge mov js and mov fidivrl push sub fwait subl xor pop cli pop test pop push inc in lods fwait pop adc mov adc sub lods mov je jne bound fs fstp ja adc insb iret insb xor mov lahf jne mov movsl push dec xchg adc fist out lock jg sbb push pusha xchg shrd cld ret mov das lea jae adc ret in xor xchg inc fnstsw icebp lret inc and pop xor mov push inc sbb cmpb daa sub (bad) decb pusha ffree shl inc xchg or dec xor aaa rorb sbb adc xchg sbb add xlat adc sub (bad) daa mov or jmp sub and cmpsb push int push mov jle lock xchg or aad rolb or pop in arpl sub ja push ja push mov add lret cmc fldenv or je adc pop pop (bad) test and mov imul mov inc pop cs fcomip into popf push cs inc and pop (bad) mov push xor mov loope mov jg push or push mov inc push xor fstp jmp rolb adc adc (bad) loope out add std sarb jnp push in bnd mov sub jecxz mov sub pop icebp fwait test sub sahf (bad) add sbb daa ret int js sub sub and iret int3 add setne lahf rolb push adc pop xchg xchg ljmp jno aad add movsb fisubl pop out loopne (bad) lock mov gs in loopne jmp xor imul ret pop jl mov shrb xchg cmpsl sbb inc js xor (bad) loope pop gs fucom data16 inc xchg push aad std out inc add adc push sub out test in popf or lcall adc mov shll add nop insb sub leave pop xor add pop imul insl xchg pop (bad) (bad) xor aad xor mov les cmp push xchg in dec insl ret nop aas fldt lahf and popa leave and jge mov fwait daa fildll jle cmp jle and lcall enter or mov imulb pop pop ret std ja mov pop jmp ss sbb (bad) jnp (bad) jmp push and out adc cmp xchg cmc lods stos leave sbb or lahf xchg sub cmp jnp das xor mov das sahf xor ja ja mov sub movsb and out mov dec outsb (bad) mov nop mull cmpsb jmp cs pop add sbb pop roll add movsb into push sub sbb lds out jg les jbe dec inc adc dec lods aam jbe add sub mov push dec ret xchg (bad) lods pop out push adcl (bad) and aaa stos pop ja insb push xor mov int xchg push fnstenv mov (bad) jne or xorb push sub pushf or sahf js xor popa leavew inc push aam mov in push stc dec sbb mov (bad) fistl xor and icebp arpl pop mov hlt push cltd or mov mov movsb pop push inc rorl jno dec dec hlt mov lahf dec (bad) mov sub fucom and or imul adc (bad) aam mov and mov xor cmpsb clc jo and outsl push lods mov rcrb sbb popl xor (bad) aam shr addb test leave movsl pop sar sbb (bad) cld inc test adc sub adc xor xchg ja mov in movsb sbb push mov mov mov sub push lods push loope (bad) inc jno in loop xchg int push sahf sahf or out mov scas lods pop out mov lock shrb add dec jle iret clc mov mov out xchg hlt outsb jb sub xor mov and decl (bad) ret cmp fisttp mov enter movb pop lock mov add or and inc jmp mov adc (bad) add cmp fisubl mov loopne mov mov add add movsb stos hlt sahf jae jnp xor out xchg aad loop aas xor icebp and pop mov pusha jae pop sub (bad) jecxz sbb pop sbb pop inc iret shlb in lock stc fldenv sahf (bad) xor sub mov jmp dec mov dec outsb mul imul loopne mov mov sbb pop xor sub push pop and (bad) adc pop sbb pusha outsb mov xchg insb stc adc aad dec add xchg pop clc (bad) mov js cmp in sub mov cmp adc mov mull jbe ret mov inc lcall (bad) xor scas add mov shrl je dec lods mov aam es jl mov sub mov cmc fistpl dec pop gs xchg inc adc mov pop cmp subl add jae sbb and sbb mov lock lea data16 sub les cli leave lods and mov or in fmulp mov or lahf add inc (bad) and imul dec xchg jo insb mov (bad) sbb fidivrl dec lods (bad) push dec inc pop mov xor add cmpsb lcall jns mov outsl xchg xchg test frstor in push push in pop xor lret sub pop sub js lock and fimull fist and xchg out inc and jbe insb push pop js pop pop mov lock and imul imul mov inc sub xor jbe add push xchg aas inc lock fisttp std mov xor mov iret cmpsl test mov into fldt jb mov in lcall test push push fwait cmp inc mov and adc (bad) lahf mov xlat push add rclb mov xor stc pushf pop add hlt push mov push sub mov jge decl test mov sub adc out or je jno ret jno jecxz mov mov lods push mov test mov or and call out sub cmp popa sti sti adcl (bad) aas fbld aad mov jge in fsubs cmpsb adc push mov sbb mov sbb fnop (bad) mov das dec cmc lock or sub into outsl enter xchg rcll (bad) cmp inc cli dec jae push mov and jo cld in imul lock repnz push cwtl xchg bound mov arpl or repnz and mov ljmp and pop inc int jae js std cmc das loope push mov mov adc js (bad) rcrl popa (bad) mov popf sbb nop adc fwait mov push xchg xchg aas push sbbl adc rol or inc add add enter les ds sub push daa xchg push jp std add data16 mov bound dec dec inc cs bound and xchg sti lods add xchg adc pop je pop mov xchg jmp jno sbb in test mov mov mov jne into adc psubq shufps (bad) sbb sti in pop adc inc ret in outsl push fimul mov lods push lods xor sbb (bad) repnz add jl pop or shr adc out loope fnstsw inc shl mov cmp push mov cmpsl lret adcb stos push ror ffree lcall clc (bad) dec (bad) loope sub add movsb dec adc inc cmpsl cmp scas push test mov add stos lds outsb stos lret push scas sub mov (bad) push mov inc fisttpll sbb fwait xchg add leave and cmp iret xchg ja add xchg mov cwtl fnsave dec fidiv pop adc mov fidiv xor and test mov and and xchg sub pop (bad) sbb jne test cs or cmp ljmp mov shll iret shl adc shl pop inc insb fstps adc nop adc or in aaa lods pop mov add lret cmp int3 cld (bad) sar test and outsl loope pusha and or pop jl jg int3 (bad) daa mov pop adc inc (bad) mov fwait xchg fisttpl mov mov mov scas inc cmp xchg call sbb push add imul fsub push jbe ds jle xchg dec mov push movsl fs lcall cs dec push pop cmpsb bound (bad) xor mov sub pop mov sbb fwait mov jle dec push adc cmp arpl xchg je push insl pop push shll xchg push jecxz mov jl subl and pop (bad) aaa aad test pop jnp sbb (bad) popa add addl and mov shlb in ror jl in fucomip in dec outsb mov inc lret mov fcomip lods iret xchg lahf push test fldt ss cwtl je loopne cltd xchg ds add pop int3 pusha adc or adc adc sub ljmp mov movsb jmp push in sbb mov fcoms setbe into stc cli icebp pop inc xor in aad addr16 fs jno stos dec xchg mov dec mov lea push mov xor push xor push (bad) cltd aam pop out lods xchg add dec lahf loope xchg movsl cmc push sahf dec pop nop lock sub jno loopne add pop and popf push or icebp push jb fidiv sub jp add sarl dec xor fbld pop fs adc dec popa adc out or movsl adc mov pop sti insb mov daa lret cmovbe or (bad) dec pop fucomi xor add mov push pop cwtl sbb add mov notb and fisubl push adc mov pop shlb jge mov or and testl test aas push shr or xor jge sti cli pop xchg js xor jb or adc out test mov mov lock sbb movsb fwait mov out rorb es adc mov sub jae lds xchg and (bad) mov mov sub inc nop repnz iret add addr16 dec fisttp in adc (bad) fistpll mov sbb pop xchg pop (bad) or and inc mov clc xchg jmp add ja pusha in dec lea push mov mov sub out jae (bad) dec paddsb lcall into aaa add pop (bad) pushf out fisttpl sti mov xchg test and pushf and out pop mov movsb pop cmpsl jb lea and cs ret mov pushf cmc sbb jne jmp mov hlt push mov add mov fsubl pushf mov loopne lcall ja test pop lahf inc loopne sbbb loope fsubrp sub cli pop hlt push push popa inc xor sbb sub pop sbb add mov jecxz lds adc arpl sub mov dec jae insb repnz pusha imul adc lret sahf (bad) imul repz incb (bad) notb sahf lock cli add rclb add leave lds cli dec jle mov insl jge test movsb sbb out inc js xchg xor mov dec mov ss jp cmp test lods mov cmp lods add mov enter icebp pop jb inc test out or and loope lds jge jno iret stos lcall nop and xchg dec sbb or dec push jne idivl bound push inc inc push jno jae adcb cmc push fidiv dec adc xchg lods inc int3 and cmpsl jo (bad) mov aas mov andnps pop std in lcall int3 ficompl cmp dec add stos xlat and sbb mov jns cmp pop mov pop (bad) mov punpckhwd mov jo test mov rcl inc adc ds mov lahf lds bound js pop mov cwtl mov addr16 nop (bad) and pushl dec cld loope mov popf pop push inc xchg fwait lds push push ja xor dec or aam jle dec xor icebp not sub mov cld (bad) mov jo test push mov adc fisub fdivp sti or inc push test test js gs mov xor fs inc xchg ret pop mov sbb and mov je or dec (bad) mov dec fcoml jbe dec push sbb jno imul sahf add push dec mov and mov push pushf add in and add call popf shll sbb or call xchg aad loopne mov lret out mov add lods test pop cltd (bad) sbb or (bad) mulb in sbb dec les bound adc js (bad) pop mov shr std jecxz das mov cmp pop jg nop mov sub adc mov xchg xchg (bad) mov lods mov cltd negb ret ds dec sahf or sbb lods ss xchg xchg loop or fisubl jl rcll adc icebp inc notb push fdivr pop dec (bad) dec jl popl les sub sbb popa rolb jns cmp mov dec adc rclb cmpsb mov loope,pt (bad) pmaxsw add icebp sbb lcall dec fmul mov jge inc fsubl push (bad) dec rcrl (bad) mov add movsl mov mov in out (bad) push frstor xchg and sbb xchg cld sbb aaa icebp cmpsl jecxz xchg and pop push sti (bad) push stos or dec cli inc mov or mov push lret mov dec mov test jg or js push call nop fisubrl fldenv aam aaa enter dec pop add cmp mov push pop (bad) imul mov cmp mov test rorl ljmp shll test or adc das out xchg fwait out inc adc fwait push fimul cltd cwtl xlat sbb cmp fsubl xchg out inc cmp lahf sbb imul xchg mov and std xchg out in inc lcall jmp call popa or gs cli stos xchg pop pop fistp popf cmp lods out jge movsb subl ds jne imul cld mov adc scas dec std mov movsl sub mov sub cs aas loope lcall mov mov mov sbb pop lcall cli mov sbb lret sub imul jp cwtl bound sub lret repnz sarb fdiv test dec mov cld mov gs scas loop outsb in add lcall push lcall sbb mov rcrl test divb mov inc jns cmp stos inc sub push mov (bad) aaa push fwait or ja add sub shr mov xorb lock jbe xor int dec xchg mov test jmp and pop out das push inc scas sti fucomip hlt push outsb or mov loope add and or pop les push (bad) ror decl xor jecxz fisttpll xchg pop daa sub sbb rclb jmp sbb or adc ret out mov jge rclb sub xor xchg lret pop xchg cmp xchg test cltd push movsl into add sub sbb sti inc loope dec and jl xchg xchg enter arpl fistp mov inc dec lods adc mov cwtl pop rcrl xor pop fldcw mov je fidiv lock (bad) xchg mov push lods (bad) mov out icebp fldl xorl adc test fstpt in cmp pop mov mov rcll xor xchg das pop mov dec xchg dec add xlat adc adc ds mov loopne les jae,pn xor adc rorb pop mov mov iret jmp daa xchg inc (bad) push cmp cmpsl inc adc xor dec frstor mov xlat cmp jmp aam popl loope inc mov adc push pop pop mov popf je faddp lds pop mov add pusha xchg sahf inc sarb test adc push inc sbb (bad) sub sbbb (bad) aas imul jne and jbe xchg fs xor call jle int popa add jge,pn stc clc gs add pop push fcoms push xchg pushf and pop gs lock mov jp ret and xchg xchg out shrl or cmp lret addr16 mov mov jo (bad) and aam jge lcall into xor aad mov mov test dec iret call pushf popf xor ret pop sub in cmp lds sub loopne push and cld mov icebp ds insl or idivl (bad) enter rcrb and ret sar mov bound pop push sub mov popa adc sbb add pop dec sub dec cmpsb lret pushf shll fwait into add es mov in gs inc (bad) enter movb aaa mov xchg mov inc das adc adc icebp lcall inc mov bound imul test mov mov inc and in push cmp adc sub mov fsubr sub mov lds test shll lea mov or test pop mov leave scas pop push add (bad) lcall movsl or in fldenv pop xor or loop shlb pop sub cmc ficoml out in addr16 test push mov inc mov fstpt insl imul popf (bad) fnop icebp in jo xchg std loopne sub es not movsb add bound xor or sub mov cmp sub inc sbb popa pop pop jae sti (bad) and (bad) sub push jae je aad rorb sub lea pop jge loopne dec push (bad) jno stc adc add fucomp repz std jb and add sbb fsubr mov mov fnstsw mov mov mov or in mov push push adc sbb in mov jnp (bad) rorb rolb cmpsb icebp shlb mov stos ret lcall pop mov dec pop sub push inc jb cwtl lods cmp jb push rcrl and ss jmp and mov cmp mov xchg mov (bad) and stc add fnstsw into push jp and cmc pop pop (bad) mov loopne and shlb aas lea scas jle pop xchg ja jle inc insl add outsl fsubl adc cmp pushf fs sub cld mov dec faddl cmp sbb pop icebp or mov jl rclb push and (bad) xor out push negb or sbb inc cld dec mov jbe adc (bad) lret lahf jnp xor mov xchg cmp mov imul iret add jl pop aam mov jmp stc or and arpl xchg xchg pop stos pusha pop jle lcall not jp mov leave shlb fcomps pop add imul stc sbb fldl sbb cwtl mov pop (bad) imulb repnz test js out push pop and mov mov jle xor jp or or jnp or and sbb pop or sbb or sub sub xor mov mov push adc mov dec lea enter dec and iret mov mov xchg mov inc sahf sub iret mov fs mov insl mov addb std sub fsubrp enter mov mov xchg mov lods dec call movsl mov push pop orl imul push mov (bad) xchg inc lds ret mov popf push daa outsl sbb sub shlb xchg push mov xchg test jb dec jmp and jns xor sub dec loop outsb lret popa mov outsl (bad) clc clc bound mov inc adc pop cmp mov xchg cmp adc push cltd inc loop mov lods jge leave lret inc cltd mov outsl sbb xor aas xchg loop cmp repnz mov push jns inc (bad) sbb sbb (bad) mov sub sub xor mov insl out je pop faddp inc cmp push pop lea inc movsb mov pusha sbb add mov xchg or outsl or jne mov enter inc (bad) incb lods in sub mov xor cmpb adcl push scas fildll sahf lea jcxz mov sub adc fwait sbb movsb and repnz add push lods mov pusha inc repnz movsb ret jmp cmp cmp pusha mov insb push xorl push add arpl lret aad gs je or push inc cmp lock mov cmp in sub inc pop (bad) mov jo mov and sub aad in cmp test mov gs pop sbb call mov sub stos inc sbb jmp in or flds and dec cmp dec ljmp jmp rcl xor clc leave pop sub div je inc fcomip cmp or mov das out scas in mov sub stos mov sub aaa or pop push xor pop or fistl cli add pop jns int3 pop arpl xchg or fs xchg insl push sub fdivrl in aaa sub pop int cld int3 adc xor jns (bad) mov dec sub inc (bad) sbb mov jnp clts mov ljmp or and push xchg in test imul cli dec js mov jno dec cmc cli out push enter add call mov mov dec mov dec les out cltd stos hlt jecxz ret ficom jecxz cld mov mov (bad) (bad) test sarb xchg rolb sbbb cs mov and sti push xchg inc test xchg outsb test pop and adc mov iret and sbb test xchg add sti mov jl test int insl jo leave cmpsl adc out insb es mov sahf push add cmp sub adc push (bad) cmp sar cmp inc test loopne push mov imul jecxz lea in ja inc lods or push popa sbb cmp cld ds ljmp sbb sbb fstpl sbb in push and dec add jne pop add pop ficom into repnz inc adc mov add mov cs inc mov pop movsl pop mov stc pusha (bad) jle int3 pop movsb fwait xchg mov mov mov fdivrs xchg clc ret or fistl outsl pop stos lcall imul dec add pop fbstp pop pushf pop ds imul inc xchg pop fsubs mov aas std scas (bad) push frstor pusha xchg clc mov jo aas popf shll adc xchg mov pop xor into push sub popf mov xchg femms call cmp mov mov mov cmp mov inc outsb inc bound pop fstpt fs add scas jnp out mov lret mov jp or inc aad xchg cld mov sbb sar ds pop test loope sub lahf aad (bad) sahf xchg rcrl sub dec (bad) xor and (bad) pop jmp xchg shrl adc dec cmc add pop adc jae push loop push sahf cltd insl int3 push fdivs mov dec jecxz push xor or cmp mov ret js pop lock pop jbe (bad) jl movsb push in mov push sbb xor xchg xchg out cmp addr16 loopne lds cld sub pop idiv pop ss jno sub push push repnz repz dec fdivrl push sub cld aam in std mov cmp shl pop (bad) inc mov sbb xchg sbb lret punpcklbw and insl dec insb adc mov pop pop std lret outsb lds and pop mov or inc inc push jecxz mov sbb (bad) pop mov jecxz sbb pop mov xor js es bound insb out xor (bad) cs push insb (bad) js cmp daa aam and adc les adc adc imul xor mov mov ljmp pushf xchg cmc sub xchg cli jge pop push ljmp jbe xor and icebp xor add subl out mov mov loopne fcmovnbe ja jo out xor montmul cmpsb cmpl (bad) dec lods xchg push jge idivb das cld xor shrb loop xchg pop cwtl ss fistpl mov and jge jg jns and fs adc mov inc sub mov cmpsl stos insb (bad) fisttp mov dec xchg dec xchg js lahf pop iret xchg lods (bad) faddl inc scas addr16 cmp lods (bad) or fldt pop (bad) mov ror inc leave stos push mov xchg fidivr iret or shr add add ror (bad) aad xlat rol lock ds loopne mov jb into movsl (bad) or add in jmp pop cli in mov dec popf jb ror xchg cli inc aam pop xor in mov stos mov jae lods lods jne or xchg jg in lahf mov (bad) push arpl mov out call push pop (bad) xor test icebp pop cli (bad) mov mov xchg les jmp xor out push pop (bad) outsl cmp pop stos push mov outsl andl cld mov and and inc or jg sub out ret jno and mov jg inc pushf lret add push or push push pop sbb and or pop roll aaa popa ror jecxz hlt add cmpsb scas movsl (bad) lret std imul lret push mov mov test mov sub and pop repnz outsl jne imul insl lret push push xor hlt rcrb lods sbb dec or pushf inc push xchg sbb push mov mov out daa ss jns in sbb adc push xchg cmp mov add inc adcl loopne mov rcrb jnp add cmp (bad) push shrl or cmp cmp and gs pop sbb int and mov mov shrl mov push dec push dec inc inc sahf (bad) xor or jl in lds imul mov das jne add sti sahf pop ds cmp xchg pusha and sbb push sbb ljmp xchg and mov sub cmp push or pushf xchg test bound mov jmp xchg mov aad and jbe jle add ret push daa pop sahf test rcrb mov xor cmp into sbb ret out pushf mov lret sbb and push cmc inc xchg jbe lret bound in xor fcomps jnp inc xor mov imul push sbb cmp adc pop mov lods mov dec xchg lret adc cmp mov sub fmul cs push lahf pusha in mov popa sub lahf mov mov push mov stos add loopne mov popa add fildl lods and and in (bad) mov ljmp insb xchg mov fiaddl add push iret out stos (bad) jmp jecxz mov scas (bad) popa sbbb sub divl std fsubrs or daa loopne cld push mov fs push movl ja int3 adc cld xor and out or pop les xchg pop push add cs addr16 xchg (bad) in mov add adcl push inc (bad) fsubrl test mov test mov bound sahf and dec add iret scas outsb test loopne movsb push xchg adc test jne cli sub fninit pop shrb les loope xorl leave fsts sbb negl jmp or hlt push xor adc inc testb xor aaa out loop cltd mov dec mov movsb testb imul cld pop xchg inc rclb cwtl pop adc cltd es inc (bad) aaa xchg lock dec xorb sahf in mov mov mov in mov mov insb sbb pusha call adc hlt sub pop out or cmp mov sbb pop ljmp test inc pop scas test movsb je push test dec mov xor retw cmpsb in adc dec cmp movsb test fs mov fsubs bound rcrb pusha aam test (bad) imulb pop cmp push cmc gs out xchg fwait decb lahf inc push scas lods mov cmp imul fsts fistpll ljmp in add iret ret sbb fisubrl sbbb jle cmp flds aas inc inc fwait dec roll enter sbbl fxch jp subl pop jecxz push sbb xchg in mov dec out cmpsb hlt adc fcmovnu aad push aam mov push mov idiv jecxz cmc sarb shrb out mov aad inc les push cwtl pop imul ss xor loop mov js jns popl sti dec or aad sub xor mov int3 pop ret xchg test stc pop add in jne insl mov mov mov sbb faddl dec push int3 jno dec jne into ret jl add mov scas or das insb sub sub or shrl ss div inc movsb ror (bad) movsb ret push std push inc bound xor jbe adc xchg pop pop sbb push idivb jnp jge lret push clc mov dec int int sub and sub test fs cmpsl inc bound xchg or push add xor in jmp xor adc into div adc push cs (bad) sub fptan dec (bad) push mov pop loopne mov clc pop repz ss insl inc ja pop inc in xchg pop fdivl ret dec jp fidivr cmp outsb mov scas xchg rcrb xor je sahf into pop scas repnz jg sbb adcl cwtl jnp gs popa pop popf aaa push push and push out je adc sub xchg mov mov out mov pop test icebp in sub mov jne lahf and add or mov jns or jne adc (bad) clc dec out dec jnp and sub mov nop mov scas mov icebp into jle stos hlt lods int3 repnz mov cmp fisubr lods cmpsb arpl sar ss inc es arpl pusha (bad) mov add lret movsl push cmp sbb cld rcrl mov xor divb pop and (bad) or (bad) enter xlat pop into inc iret pop scas xor lods insl imul sbb pusha movsb mov jns ficomp fist cmp clc (bad) jp inc and sub scas adc mov dec sti aam mov cli pop sbb or lcall je scas int xor ror lea or aas ja fmull pop sub push sub shrb xchg xchg stos pop xor call fild sahf nop (bad) call in movsb vmovddup mov mov xchg ds imulb jns clc and dec enter into enter push jp in or dec mov or mov xchg xor mov cli loopne shrl sub push xor adc or (bad) dec ds sbb movsb lods adc push sti mov mov outsl fsubr adc xor and jle rcrb xchg clc sub arpl jle std jecxz inc sahf loop cli in adc push inc cmp xor mov sbb sbb popf mov pop les clc cli arpl gs push repz xchg xchg int sub mov jno push repz jb lahf ja loop xlat test push (bad) inc roll lret mov int pop mov iret dec mov dec (bad) xchg stos ja out mov adc jp in cmp push or ja pushf outsb dec sub fcomip out dec push ret int3 enter aaa in jns add xchg test mov int3 lret daa fmull iret or fcomi mov jg pop cmp push rcrb fcmove xor inc adc pop add in lcall lret ja xchg inc bound sahf add jns dec sahf cmp test xor mov mov xchg orl enter das xor popa xcrypt-ecb cmpsl (bad) push scas cmp pop clc mov or fsubp popf add shrd out cmpsb stos xor ret pop dec scas sti add les aaa pushf push xor fisub scas jb xchg (bad) cmp inc outsl mov xchg fcmovne and stos lret andl push (bad) rcll sti loop push pusha in aas jnp dec mov imull jne test and jl outsl dec jb sahf nop dec imul sarl movsb aad pop out mov imul push mulb (bad) cmp cmp add pop push mov xchg loope sub daa lahf sub push bound xchg inc enter sbb cmp stos push pop dec stos inc daa cmp sbb inc mov ss jmp jecxz lret out pop rcl push mov in pop setl dec lahf xchg add adc sahf test inc test pop xchg je pop call mov inc loop xor mov cs int xchg lret jb xlat add aam push sti lahf movsl sbb adc iret jb push loope add jg andl arpl sbb in rcrl into sub mov std rsqrtps push fcomps cmp or cmpsl scas push or pushf out cwtl sti dec mov leave repnz jno cmc and inc jno cwtl and out pushf push push addl test (bad) mov call and xor inc inc xor mov inc cmpb cmp push sbb inc pop aad push pop jne (bad) and (bad) je jne repz insb aam loop xlat icebp push jb (bad) fistpll push jg call into pop adc aaa insl push addl insl push rolb in push xor repz adc in aas push cmp jecxz pop in ss js call and mov jns test leave lret popf sbb mov mov push cltd or (bad) dec jbe shl out pop mov ja (bad) mov lahf in jmp or sti pop in or lods jae popf lahf dec xchg jnp adcl aas push cmp insl ljmp mov test repnz les pop fldl shufps pusha inc cmc mov mov std inc stos jb movsl adc jno out ret in sub jg cmp insl popl cmpsl xchg mov mov es and inc add cmp add (bad) fnsave out or dec xor aad cmp fist testb adc dec pavgw sbb lret iret (bad) mov cs pop and mov fidivr and jmp jnp and jbe fnsave push inc lods incb loop fs popf gs std jno dec mov cmp adc mov and jae adc mov in scas or arpl xor popf push push out incl xor xchg pop push repz ret pop inc mov push mov add pop mov pmaddwd (bad) or imul mov std aam adc push mov push sbb mov or cwtl jbe inc shl popa lret mov adc and in stos nop (bad) popf cmp mov rcll jb jns ret xchg pop push (bad) sbb jge mov ss cmc das ret in cwtl add sti mov or aam int clc lds adc push les popa mov inc sbb mov sub insb or push out inc lds out daa loopne stc fwait jno es sbb add xor pop aas pop test outsb into jmp es js test pusha pop xor aas jbe int3 js repz pop pop stc push xchg push jnp mov imul ret mov pop pop arpl and pusha clc and sub lret lret and xchg (bad) dec jne clc pop jnp cmp mov outsb jae pop or (bad) (bad) leave dec in jecxz out hlt (bad) inc bound jns in mov push mov xchg pusha (bad) iret arpl aas jge mov sbb mov insb cmp mov xor fcmovnb bound clc ljmp sub lock es xchg sbb lret fwait xlat cld add mov (bad) out jg jnp popa dec jge addr16 ljmp push daa inc movsl pop xchg leave mul and sbb adc mov (bad) and pop cmc inc jp fldenv std fdiv mov test sub push cmp out insl fcoml sbb inc test mov xchg fld jl sti das xchg jns pop call mov xchg into sbb pop mov sub inc out mov cmc insl jo cmpsb sbb in xor ret and cmc aam pop inc sub int3 (bad) inc fadd cmpb xor mov int3 call sub (bad) xor in stos or cmp adc sarb call mov int3 nop xor sub add in xchg out (bad) dec fs push in imul fwait sub outsb ret shrl shlb xchg sub incb mov fwait clc xchg jge pop mov xchg hlt jno aad jge cmpsl fst fmulp push mov cmpb mov pop cmp sub (bad) jb xchg mov adc mov pop mov loopne int3 out jl mov popa jae xor push mov dec push aas jecxz loope or and call push push xchg cmp leave jge (bad) mulb dec (bad) fucomi mov dec pusha loopne or mov xchg ret dec (bad) fwait lahf add divl (bad) imul fcompl ja or in pop pop les jbe xchg clc xchg mov jae loopne and push jnp int das jbe lods cmp int3 mov mov leave mov js mov aaa inc push xchg xorl add loope out je add mull cmp popf dec (bad) cmp in rcrl into mov sub das mov lret mov out mov push test mov mov push pusha in mov imul dec sahf fdivs lock mov push pop mov pusha (bad) ja shrb sbb fmull data16 cmpsl dec jmp and inc jle stos mov xor cmpsl (bad) cmpsb mov lods loop mov sbb or in mov xchg pushf cmp dec mov xor imul sub add (bad) (bad) hlt push pop addb mov inc dec fsubrs test in pop push add xchg dec mov jb jmp dec cld dec lret insb int cmp nop jmp (bad) lock and or inc lahf cltd std mov daa dec push mov or mov icebp sti icebp jo xchg inc leave insl fistpll cmp mov data16 (bad) or mov test bound stos pop (bad) mov xchg subl insl jnp xor mov adc dec int3 cmp lds and rorl repnz inc pop xchg pop xorl add js imul push mov mov out inc add or cmp sbb cmp push (bad) mov into sahf push inc (bad) cmp adc out rcrb jb mov mov cmpsl jo cmp lahf aas push loop mov add clc jl pop imul jle jns mov aas lods or or push push pop in mov mov xor add dec or push hlt popa mov ljmp add mov iret movsb aam inc das cmp mov incl or fidivr or xchg add scas cld ret pop jne dec cmp fnstenv (bad) call fildl push rolb loope add inc test pop and scas cmc add in ds push push fs cwtl sub fistpll jmp jo fcomip dec movsb lods lcall arpl fs jb jne xor mov das fdivs jmp mov out daa cmp xor shrb mov inc pusha dec push in outsl insl mov mov push xor test adc incb add sbb out aam sbb push sbb mov jmp sub fldenv sbb inc xchg movsb ffree sub aas idiv mull and jle sub sbb mov insl sbb inc je bound xor adc test xchg pusha cmpb cltd insl push int sbb loop dec push (bad) repz (bad) xor stos pop das clc jne jecxz xor sbb rorl and inc in imul lods pop cmp sbb push repz (bad) in dec repz in das mov (bad) bound or dec outsl arpl dec (bad) mov (bad) bnd jno xchg adc in mov sarb js mov push rcrl sbb sarb imul adc jns add cmp push insb lret push cmp arpl pop xchg daa push outsb lahf sub jmp pop stos xor lods inc es pusha pop loopne and jg nop add cwtl dec sub pop in cmp scas pop mov inc sbb cmp or daa imull rep aad mov nop les xchg jmp rcll test pop xchg pop je adc xor mov inc nop mov shl dec rol push aaa mov je inc jne add or mov xor insl and push inc mov sbb mov mov les fdivrl mov dec (bad) aam in dec sbb ret or xor mov test adc sbb sbb dec shrb and arpl push and test add mov mov lods fbstp xorb mov aam jnp arpl xchg mov or sub out jb cmp daa push repnz adc mov popa or ds movsl dec out sub or jo divb ja pop je pop or sub aam pop enter sbb testb mov leave imul mov pop fcom sub iret pop int3 sbb pop ss jo jmp pop mov jo ds sbb in nop adc pop add sbb push out aad out push and mov movsb mov xchg jne sub sbb fsubr jnp xor rcrb and lahf aaa push loop inc movsl in cmc fisttpl lods xor (bad) stos repz and adc push daa cli xchg pusha or dec movsl leave insl pop add (bad) stc pop xor push (bad) lods icebp adc pop sub pop sub push adc jp ss sbb addr16 sub clc and mov hlt adc scas int mov push pop daa out xchg xlat aad dec mov or sub fwait sti lcall dec jb (bad) mov cmp lahf lock jno mov jne cli lahf mov stc push sbb sub movsb leave fs push and movsb mov rcll adc rcrl scas xchg mov insb idiv xor cmp dec mov punpcklwd gs daa repz popa orl dec lds inc mov jmp jg and cs add lock (bad) jno leave push lds mov aam xchg xor xor mov xchg into xor orl inc mov jbe mov cmp pop add cmp std scas vmread bnd xor rol (bad) ret mov jnp loope fstps push mov inc mov imul sub jo ret ja lret movl (bad) dec sbb mov mov fidiv jno push sub xchg cmpsl xchg imul inc movsb aam mov and notl (bad) std adc sub repnz cli loopne jge cmpsl (bad) lea cltd sub cmpsl lods sahf pop jmp sub int3 aaa out mov in jb call inc daa push pop add scas aam add or pusha bound sub dec pop jbe mov push cmc addl jge repnz push or das je push xchg push mov adc push jl xor jne mov fildl xorb or xor sahf adc testl xchg mov jmp adc lods leave add rolb cmp cld mov pop jecxz xor shr mov addr16 dec push out js imul xchg sub or xor mov test pop jg or fs xchg test mov pop xchg xlat mov mov xchg test mov hlt lea fsubrl ret push pop jns iret add sub into imul mov xor and xchg jne out jecxz out lods mov mov test push add push or cwtl cli xor out clc or and sub mov sub adc xchg out fsubrs test test (bad) sub jle jne ss sub push inc adc outsl inc je lret or add and loope jge sarl cmp xor mov sbb xchg into adc and dec (bad) xor lods push adc push pop inc fwait jge push insl mov gs mov mov mov fimull mov das pop int xchg add (bad) dec outsb sbb enter cmp fucomip ffreep std xchg jmp into xchg push lea sarb inc or stc jbe fldl out jae insl add test imul push cld dec mov or push or lds cli pop lods pop mov xlat cmp (bad) arpl xor xchg lahf inc cld fs adc insb fstl stos popa fmuls cmp xorb inc pop mov and sbb push rcr inc xor xor stos mov mov (bad) rol insb mov movsl push test push adc xor jge inc iret mov in bound fwait pop popf imul xchg xlat (bad) lret aaa push (bad) insb mov pop test cmp pop sub sarb imul cld pushf test adc in dec push adc cs icebp and arpl es mov int cmpsl xor arpl dec mov xchg scas or inc in aad mov push cmp lea add (bad) (bad) repnz aaa sbb aam jmp iret (bad) jmp mov cli movsb and out (bad) out xlat sub add (bad) mov pop mov rcrl and and mov ja mov rcll out fsubs dec data16 imul addb repz cld push cmpl push (bad) dec fiadd push mov (bad) icebp xor dec mov mov mov aad enter test iret push sbb add ret out inc ret dec orl sti int3 cmc (bad) mov or pop (bad) lahf repnz jl int3 dec hlt dec stos cltd push out in push cmp sbb fistpl in mov aam movsb pop pop dec rcr mov sub cmp nop push push stos dec inc aas pop xchg sub pop lahf stos mov mov int mov loop sbb mov iret scas jnp push fwait lods icebp mov and shlb stc mov jbe or dec sub mov aas mov jno xchg out mov ret jnp in test xchg xor repz popa movsl ljmp data16 aaa push insl fdivrp xchg (bad) (bad) and jnp push or in cmc faddl rolb adc add sarl aam inc mov rorb adc xchg std loopne test cltd leave xchg and out cmp add (bad) ss outsb imul sub js jae xchg ds jg and outsl jge sbb movsl and dec shlb movsl mov jl dec int dec mov add mov in inc mov jbe iret mov stos scas arpl sub (bad) or push jns out add test jge fild sarl dec imul inc add and pop push test pusha pop and stos js jns lcall inc call dec repz push push dec scas popf pop aad mov cmp mov push pop push pop sahf loope xchg push push pop or aaa std pusha or sub fcoms ljmp fdiv lea lea leave lea jp cli dec and xchg mov mov test mov dec inc mov add in mov and insb test push daa sarb or push out or iret xchg mov lret sbb jno das mov xor cwtl mov ss jle or mov jno jb aam fs or jl xor dec aam mov or icebp sti jl sub lcall mov jno dec or or mov loopne inc nop lds or mov (bad) daa imul andl in push inc and mov daa xorb inc lods call ficoml imul (bad) jne jl imul repz loope cmc enter test add or xlat stos jmp mov call add je add xchg mov test sbb push pop xchg mov mov xchg imul mov out cltd pop aam xchg xor cs lock or pop jns xlat ret scas stos sub fcmovb push jge rolb mov (bad) repz xlat inc int3 jbe dec or or lcall mov js jmp lcall in push adc bswap mov daa adc ds cltd outsl sub cwtl cwtl ds jns xchg das fisubl xchg pushf mov insb lahf call and pop dec mov lea stos (bad) imul into sub push aas ja sub (bad) fimul out add push popa add mov mov push stos jns test sub mov adc mov inc xor dec add cmp jp call jno mov pop cmpsb clc or icebp jb and xchg cltd imul int daa xor inc aam xor sti and (bad) (bad) rolb adc lret sub test inc ret inc ret xor subl ljmp int3 (bad) insb push lret stc aas push or dec jb mov and mul loop and xor cmpl inc stos (bad) loop lret (bad) call imul xor push sarb sbb (bad) scas nop leave cmp (bad) push and xor stos pop fcompl (bad) or mov cmpsb fs mov fwait arpl push xor push push lret pop cmp sub wbinvd sti push sbb cmp cmp xchg pusha addr16 pop movsb ljmp dec out loopne jmp fadd push mov popl adc dec inc cmp adc lret xchg adc mov inc testl lock stos mov adc inc push xchg add pop sbbb div or inc inc in dec leave fisubrl sahf mov cmc mov je mov mov or test gs popf sub add imul or inc insb push pop sbb push pop rorb out repnz stos mov mov mov cld inc mov xor jecxz push mov divl scas ja dec cmpsl fmull out sti test sbb inc imul mov pop jecxz repz mov cwtl adc pop sar into pop aaa bound mov cmp jne js enter imul add inc sti dec mov out or scas stos nop mov lods dec sbb arpl push call pushf xor shll out lods adc aad xchg mov jnp mov jne repz aaa xor cltd xor les push dec fldcw add jnp mov icebp iret push adc inc inc in xor adc xor test ljmp push jmp xor push leave sub shr int3 jg clc dec in insb fyl2xp1 cmp mov push inc repnz pop xlat ret inc pop bound xchg cmp pop and data16 mov xchg inc notl jae adc push shrb sub (bad) dec dec cmpsb (bad) mov andb add and push mov in xchg scas inc push movsb xor sbb add mov insl fdiv sub and in int and lcall fdiv mov mov orb ss or and cmp or pop lods mov insl or test mov pop cmp icebp nop xor fbld inc xor xchg sahf mov cwtl sahf sbbl (bad) (bad) adc sbb jno and (bad) cmovge sbb inc cmp push dec shll addr16 mull sbb insl inc adc bnd mov push aaa push pop ret imul xor cltd lcall mov rorl and test sbb add mov repnz sahf pop aas pop out sub aam xor ljmp fild mov (bad) xchg mov cmpl jmp add jno push loope sbb aad iret and jl push aas out ret pop icebp rcr rolb push mov cli in int and (bad) mov sub push or xor aaa or add mov iret scas dec sbb and lret incl jg jnp sub scas outsb jmp cmp clc mov mov test or ret inc push arpl or and xor mov jb adc dec or pop sti push pop ja test mov ljmp out push int3 mov subb dec fwait movl lods js cmp fwait insl sti test sbb mov fs (bad) pop inc sbb inc test add xchg sbb lods fcompl sbb jmp idivb push mov stc ja aam mov sub js icebp loop adc inc in outsl pop push xor xor xchg into aam je or insb jmp daa push mov cli mov or lock es mov cmpsb pop aas and ja add xor (bad) dec imul pop (bad) jae (bad) dec movsb lcall push jl xor sub sbb testb fcmovu and mov test adc mov insb add test adc aad adc fwait jge sub imul cltd ss cmp xchg add add out sbb lds fstpl sub repz mov mov dec push pushf clc in sbb cld movsl inc pop or cmpsl fdiv sbb stc xchg xchg test xchg (bad) mov (bad) dec add nop sbb adc sbb push mov lahf add shrb cmp dec and mov dec dec push xchg adc cltd roll or xlat push inc in addb xor xor out cmp mov add add out iret ja lods cs cmp dec jl pop mov fiadd jl inc xor jl es add lock ss std xchg fwait mov jo pop in mov jmp mov jge aad scas push push jae lea mov ss addl ret movsb push add xor mov adc mov in xchg insb mov mov out arpl js cmp fcoms outsl sbb test into pushf mov (bad) cmp orb dec xchg in negl movsb sub (bad) fwait mov ror call pop stc fsts sarb clc mov or es add in xor imul push adc jg or and sub jge dec mov (bad) jecxz xchg sarb pop push int3 imul mov jns fbstp dec inc js mov mov xor jmp in (bad) pusha mov xorl mov mov faddl adc fld cli xchg push dec aaa stos cmp inc cmovge mov and inc int3 jmp mov insl leave repz repnz dec js aam jbe (bad) repnz arpl lahf and notb inc and push mov inc pop in dec fildl pop xchg mov xlat push jb jns cmpsl movsb mov or and std popf mov mov sub mov dec repnz push scas inc mov xlat push push stc lahf push dec mov or dec pusha cmc dec sub lds es sbb arpl push sbb inc in jno pop adc mov mov inc jecxz sub cmp jecxz adc xchg push mov mov jnp mov pop mov in jge and cmp mov test out jne lea je push push cmp (bad) xor mov dec sub cmpsb call push or adc sbb enter (bad) inc inc mov test cmp ss push aaa mov xor inc sub mov fsub sbb icebp (bad) jae mov enter sbb dec fwait cmp jbe scas ds subl es shl fcmovbe push dec mov and mov inc add lea mov ret divl lret mov adcl lock repz test movl sub or fdivp add jmp btcl repnz mov sub loope mov mov xlat jo add or pop ss add and cmp lea popf shrb inc or lret pop add xchg inc sahf insb inc das call mov lds adc or xchg sbb push push pop mov pop jnp dec das and (bad) adc loopne inc (bad) jno leave push (bad) lds scas sahf icebp inc push paddb popf loope cltd mov sub push add outsb push dec lret scas (bad) in xchg sbb sub or push popf inc in push pushf add inc lcall iret in push subl xchg andl pop in loope jo and imul insb push pushf xchg stos aas and ja and sub xchg xchg xchg in pop leave in mov sub out sbb hlt mov inc pop js sbb or pop mov cmp adc pushl pop mov hlt jb push xchg sub lods cli jmp ja rcrl pop movl jl mov (bad) outsb (bad) jns inc jg loopne jae or fmulp mov orb outsb ret and je push lret xchg xchg push and pop xor xchg inc jnp or insl loop pop add xchg push and xor jecxz add xchg mulb sub loop repz mov rorb mov test sbb push jl cld imul ds jmp daa jp test add fisubl mov scas orb cs lcall mov or stos out in adc xchg dec (bad) lea daa mov and mov and ret or xchg in clc lock jecxz gs add aaa xchg cltd out daa xchg pop movb lock das push mov dec movsb adc stc mov out xor cmp sbb jno mov stos xor in inc inc sahf mov nop ljmp in adcl out leave lods add daa jl mov pop fistpl jne mov dec js mov push mov out (bad) mov sti pop xchg in mov jno ds fld pop cmp sti and jecxz stos xor mov inc (bad) push lret (bad) and push add sub or xor mov push jl adc fildll push scas dec shll (bad) shrl and sbb pop and rorl fwait push push push sub jl aas loope mov das lods mov or fs sti or mov sub cmc xchg lock sub xchg hlt daa movnti lea iret jnp sbb lds inc cmpsl fstps mov in mov ds dec add in ljmp int3 lds daa shrl lods loopne aad cmp or ret jae and imul xchg pop (bad) mov nop xchg addr16 into in lcall push cs push dec dec insl cld icebp sub pop add aad orl dec cmp mov fcompl sub push sti in mov dec aam test mov shl push sbb mov mov scas adc and mov (bad) inc scas test xor push lods hlt sarb add push add sbb cltd and mov lea dec mov stos mov or add outsl sbb sbb jg sahf dec pop or repnz cld cmp fwait push loop xchg icebp leave jno test cs ljmp leave sbb mov rorb aad jmp jmp push jnp xor adc jo movsl incl jno pop repz mov popa in sbb or jp add inc xchg or cmp add pop push leave mov jnp sbb sbb mov mov push jb mov loope and ffreep ja popa lea pop call (bad) cmp xchg sub push (bad) in data16 add pop cmpsl fist scas jge imul pop sar mov sbb bound inc leave push popa adc nop out (bad) pop pop aaa inc push clc or (bad) and mov sub lock lock jle pop repz out movsl stos aam mov repz add call sub ror push std je xchg int int3 push in xchg push fwait fwait mov scas fcoms pop mov xchg xor ss (bad) xchg pop add icebp pop pop jg (bad) mov popa js xor pop push push out and lock add in add cmc int3 addr16 jge aad push mov mov cmp loope cmpsb adc jmp lahf lcall cs sub fiadd jle sub push repz daa cmp jmp cmc pusha xchg or inc dec push sub insb int cld je push ret aam rcrl mov push dec into push outsl jmp popf adc movsb dec (bad) je adc mov add nop mov adc imul inc sti cmp out jnp jns out cwtl jmp add mov mov mov inc xor push lods mov stos insl loop cmp push dec fwait stc add pop jg jne mov xor insb mov cmp outsl test push or cmpsl pusha (bad) ds cltd mov into jle rorl cmp xlat cmpsl das out pop mov pop push adc in adc and pop test sub xor add xchg mov and dec adc mov jb adc in pop test mov ss push xlat cmp out push (bad) std ja jno test pop daa mov mov dec inc dec andb xchg and mov je dec jo add lock les lods cli gs push (bad) fstpl jb sub pop popf dec fistl cld add movsl sub push outsb jl in xchg add outsl jb xchg jo cmpsb mov stos pop xchg stos cld notl (bad) xchg shrb or cmp shrb mov sub ret or mov out test test repz and and insl and imul mov rcr pop xor sbb mov cmpsl sub mov mov repnz adc in inc rol icebp mov and xor loop fsts sbb vmwrite mov leave call inc jge,pn in retw fstl test mov fist aam out je inc sbb mov lret and lock pop mov in add push push es ja mov mov mov idiv push pop xor xchg ljmp xor and pop enter jne jne adc mov pop xchg fs mov loope and lcall std dec bound jbe sahf leave addr16 test (bad) push pop adc dec push inc mov sub mov fstps mov jg sbb cmp xchg mov inc cwtl addr16 aad aaa fist inc fisubrl and mov mov in mov adc adc xor dec arpl inc or fsts iret dec push in lods adc add addr16 rcr jne data16 add fcoms outsb add scas lock insb pop dec imul dec sahf mov inc adc notb and xchg dec cmpsl repnz fistp fildl lea cld arpl insb mov dec sbb push frstor loop roll cli sub ficoml cmpsl vpaddb jecxz fnstsw or sub push movsl or scas (bad) (bad) xor or mov daa xchg aad mov mov cmpl jmp push add sti push in mov pusha pop add pop and and sbb mov or inc ds (bad) scas xchg repnz pop sub fwait sbb fcmovnbe push xchg clc xchg mov pop add mov leave xchg ret jg dec and outsl clc jnp sbb mov out jl (bad) xor sub and sbb pop aad dec lret out enter lock push shrb jo or xchg mov sub stc mov cwtl out insb xor mov and and lret movsb pop cmp dec cmp add push push inc dec sub lods adc out mov mov pop pop sbb inc fistpl dec pop mov pop (bad) imul pop inc mov icebp cmpsl xchg mov bound mov xlat loopne jne out inc sbb (bad) pop mov repz aam ficom inc mov lock sub cmp iret sahf add push push aam adc fstpt in (bad) scas imul xchg outsl fisubl fsubrs call push fbstp cwtl roll imul test fild jnp mov ret jns sbb ret sub test stos push sub test jp ret sbb push adc jae jp sbb mov movsl out aam jae xor popa outsb push loop lahf xchg fidiv ret jnp push adc jb in xchg xchg lock jge cmc mov test sbb rolb xchg in std negb fcom jmp cli inc mov jle fnsave inc xchg inc popf cmp gs sub aad mov adc cmp sub ret push cmp pushf adc xor sahf cmp or dec mov mov adc lds data16 mov xchg das ss cwtl pop sbb mov (bad) xchg push mov dec add scas jle (bad) xor fwait pop mov adc xor xor mov pop outsl xor sahf in inc sbb adc cmp roll jo jb lods ds dec mov pop (bad) cmp mov inc outsb iret pop js xor fs mov jne mov test add pop mov cs lds mov pop mov mov xor inc sbb je sar mov push ret or sub ds in mov xchg or insb (bad) leave (bad) fsub cmp dec xor jl mov mov adc mov in xor xor cs nop cmp adc (bad) pop insl adc out das fldl lods mov jmp imul ljmp out (bad) aas mov lds sbb das jne (bad) adc loop mov outsb adc mov (bad) dec jbe cli pop xchg insb jmp and inc jg outsb in xlat hlt dec fiaddl mov stos js mov cwtl ret ja jmp xchg mov inc pop iret test xor dec mov ljmp sti data16 xor rep and ret (bad) push mov lar (bad) mov or xchg xor je rolb repnz add and jmp lock xor inc push xchg addr16 lcall (bad) je mov or dec in (bad) add jae fs add hlt cmp sub mov jmp pop push ljmp mov jmp inc add mov lea add cmpsl test push (bad) pop shr outsl push jb outsl cli ds jmp icebp push cmp adc outsl shll lahf push xchg mov ja inc sbb or repnz test inc sub mov mull add stc and push cmpsl mov sub add scas mov push xchg cmpsl mov jns cmpl pop pop sub or push or hlt jo pop iret fsts sahf popf leave bound in flds in movb (bad) mov mov (bad) dec arpl dec and fldenv mov or or inc mov test clc pop dec int push push or jne lods adc sbb sub fwait xchg sub dec into xchg js iret (bad) mov and jmp cltd dec fdivrs xchg shr mov push jge mov lds or pop shrl inc inc sahf sub cmp inc imul call dec out jo and mov js sbbl pusha and test pop ss fstpt (bad) pop ds stos push sbb pushfw and push dec sub or pop mov xor ljmp jae mov jp shl lret adc aas jns outsb xor xchg in cwtl dec test adc sub test adc dec xchg sbb mov lahf add or xchg outsl insl sub out lret sub mov xchg addr16 (bad) test pop stc and sbb jmp (bad) push stc nop fiadd push mov test test sub xchg repnz mov lea out js fiaddl jmp pop fbld jle cld aad mov repz fldcw adc sbb jbe aas push fist orl mov (bad) fldenv cmp jecxz cmp push pop imul lods mov sub jns fwait cmpsb pop inc jmp adc adc hlt repnz sub dec stos fldz mov in pop (bad) neg ss out aad (bad) ss or insl mov or nop jbe xchg jmp std (bad) out sbb mov clc pop (bad) js cmc jb sbb or sub cmp dec test movsb add mov fisub idivb push in push jae dec push scas jge test rolb inc or jge divl or (bad) jecxz inc (bad) jle adc sbb ret xchg jp js fbstp sbb les or lret sub push dec and mov pop repnz inc rcl stc push adc inc mov dec int3 lret cli mov les xor sub xor mov mov and sub js lret pusha sbb arpl iret jge imul mov add cli or fs fcmovne mov test pop mov sbbl mov cmp add daa (bad) pop scas and mov or or (bad) mov stos sbb ds add push js mov loope inc mov xchg inc test das lret rorl dec bswap ret jbe cmp fidivl sahf js adc add sub push sub mov mov ss ret or sbb lods cld lret icebp add arpl rcr mov jnp fistl aaa stos rclb lods enter push les and jg xor int sub mov cmpsl xor cli lods lea pop push inc mov fcomps mov bnd adc int xchg push into insl inc addb xlat out pusha or bound or inc push ljmp jae pop dec push clc mov dec mov ret jecxz test out and push shrl xor pop sbb mov lcall orb dec dec mov nop les mov cmpsb into xchg and sub and inc xchg pop push nop js,pn mov stos fsubr mov sti and lcall scas imul decl insb push push das pop fbstp cmc inc je and lret insl sub jae and outsl jae and loope pop insl jno push push fbstp fcompl sahf inc inc out mov or (bad) pop aas shrl push pop loope mov sahf mov xchg pushf mov mov jg cmpsb clc and (bad) sub jge push pop cmp pop movb repz stos jmp std es dec shrl sti cmp lahf mov pop mov mov cwtl mov dec adc pop pop fucomp rolb jae pop xchg push cltd js mov lret dec lods mov jnp xor fsubp or fsubr movsb testb lods mov xchg jl leave xchg jae and test popf xor pop aaa in jle insb cmp js (bad) jne test sub push mov enter jns cli mov mov xchg and dec push push push adc sbb out loope inc xchg loop push fisub add (bad) jecxz in mov ficomp stc test mov push negb dec pusha xchg xor and cs or pop mov push test int sbb test jle aam mov push movups (bad) mov mov movsl ja xchg mov push mov ret in shrl or add daa dec int (bad) mov dec sbb sub clc lret in mov shrl cmp in mov or xchg mov daa call xchg fwait jecxz add inc fbstp lea adc inc pop mov fwait daa notl jp call dec clc mov mov jb dec cwtl xor inc mov jbe and loop lods pop dec push or sbb inc leave adc stc (bad) outsl (bad) aas test add or enter mov movsb jo std fwait and xor mov mov mov and clc addl dec add mov jp inc jl (bad) xchg dec mov push inc fmul inc push xchg mov int3 fdivrs jmp cmp nop mov pop shr jo cmp mov stc add jge test mov pop shl jge jle mov xchg sti outsl sub cmpsb rolb push (bad) addr16 mov scas ftst imul das repnz inc mov inc or pusha add movsb mov fisttpl mov fisub mov ja and and lock or outsl xchg pop jne cmc push mov (bad) mov (bad) sbb inc hlt ljmp add add out push inc loopne aam fistl xlat ret lds cmc inc mov insb inc sub dec push mov rorb cld pop movsl xchg lock mov xchg arpl push jbe mov dec aaa repnz sub loope dec rorl mov cmp sbb push add inc sub pushf (bad) in pop pop divl out lret add sbb adc pop fsubp iret loopne cmp call pushf push jecxz lcall stc enter adc enter pop jb inc jmp xor push movsl and and jge mov outsb xor pop sbb push jnp repnz inc adc sbb xor inc fsubr dec mov lods std enter inc and movsb and inc (bad) xor jg mov (bad) jne ds lahf jbe mov cmp inc cmp push insl or sub bound loop push scas (bad) ja popf adc adc loopne inc mov test adc sbb lret in sbb data16 xor mov xchg pop and icebp sarl cmc jnp xor and les cli call mov outsb cmp or idivl iret xor jae test mov (bad) fdivl stos sub out into (bad) mov loopne shl fldcw lcall sbb or cmp push and arpl fdiv dec pop pop mov xor ljmp fisttpll scas adc mov out dec insb pop fwait cmp das popa xchg psllw dec mov cmp outsl push dec sub aaa or incl mov xor jae mov push sub (bad) test leave pop cmpl adc bound test mov test fnstcw dec xor incl fcoml adc ret pop popf pushf arpl cmp sti jnp out cmp xchg ret stos pop sbb ds cmp xchg jl xor in push iret xor and cmc mov push ficoml mov and imul xchg xchg loopne into mov rol or jne pop sbb pop ret xor out pushf lret movsl adc cld ror test mov cmp fwait das xor xlat mov mov test mov (bad) mov jns dec iret push lcall ret aam popa cmp bound mov xchg popf add mov jns jbe mov push cmp push aam out int3 cmpsl leave add mov or dec xor mov inc sbb push add ficom mov imul pop rcrb mov sub mov and xor pop push orb dec sub out pop bound leave cmpsl je sbb xor jb (bad) sahf and mov outsl mov pop aad cmp inc push loop popf pushf cwtl out sub ljmp xlat int3 mov inc test leave in inc frstor mov cmp sub push imul popf in and and mov adc sbbl shrb (bad) insb imul pop add lods out inc pop cld inc sbb (bad) mul pop sub sti inc imul addr16 daa lahf ljmp dec and stos mull shlb mov adc lahf cmp leave jl bound sar jns cmp xchg (bad) dec mov aas rolb int stos out push (bad) dec xor push lret pop mov xchg push xchg movsb insb lcall mov in dec mov cmp pusha xor jbe adc (bad) mov test stc push loopne sub push cs mov pop es mov mov cld mov imul cli xchg mov mov add jecxz mov or rcll dec mov int mov jne mov (bad) ja jmp jns pop push sbb pop inc cwtl dec mov std lret movsl sub dec sbb test je push cmp cltd fsubrp or push out test iret popf rcrb cmpb and xchg sbb scas into pop add pop movsb or subb add std fs insl dec jl mov xchg mov jl cltd cld and (bad) rcrw in xchg das pop inc pop jnp xchg inc jnp movsb test lahf les mov arpl sub push loopne out leave aam mov (bad) jno test pop jb lea scas jae (bad) fisubr je push repz loope mov mov mov cmpsl sub and xchg dec push imul (bad) dec jmp mov sbb ds (bad) ss cmpsl aam lret jmp cmp pushf inc push and loope fs test jnp xchg loope push arpl mov mov vmovss jmp mov mov dec add inc cmc adc cltd les stc ret and mov fldl jp jle loope xchg push xchg dec sbb mov stos adc pop jns in sbb xchg imul pushf xchg push daa mov push xchg test outsb ss sub mov cmp stc aam bound cltd cmpsl ret scas (bad) mov mov push inc popa fisttpl cmpsb in sub mov outsl inc dec xor jnp sarl push push pushf jns push add adc out sub lret mov xor sbb stc mov push (bad) lods cmc jae sub inc out (bad) mov flds or add ucomiss mov jle in lret call xor imul outsb mov (bad) jns jns jo sub mov fstpt mov (bad) gs lret jmp (bad) cmpsb fwait loopne pop std dec xor add (bad) adc daa ret and push test cmc sub or fdivrp gs adc push pop mov lods nop movsb scas jb lods cmp es lret es in or sbb adc sbb add aaa sti movsl lret adcb enter dec or xchg imul jbe cli cmp or ja jae lret test pop sub ret xor pop cld sahf in popa rol add and (bad) test push pushf incl out and movsl mov popf mov dec stos fisttpl mov mov (bad) jne lahf in out dec divl or lret rcrl gs cli xor imul stos (bad) push stc stc in outsl das or (bad) dec scas xchg ljmp insb or hlt nop scas enter mov xor (bad) aam loope stos push mov pop add repnz sub aas rol faddl cmp fwait mov push sub jb add shrl or in inc xchg clc add in push mov sti mov call ja or shrd and cmp adc daa dec fcomps movsb stos clts int3 xor inc repz loopne and or mov cld cmp pop (bad) jp int3 xchg icebp call call mov adc jno insb mov outsb jns popa pop fnsave loope ucomiss ss adc enter cwtl jbe int3 mov or pop adc push mov outsl les fwait mov and sbb pop repz push repnz scas cli mov les movsb test lods lods mov fs fstp sbb aaa dec jns lds push push imul mov mov rorb test push inc cli sub xchg daa xchg dec pop push out jmp sbb mov incb das cmp enter rolb add outsb push xchg mov jg xchg inc pop mov add mov ret fsub imul sub fnstsw gs xchg int scas lcall mov out mov push sbb sbb xor push jge push pop dec mov sub pusha aam jo push (bad) fisttp adcl cmpsl pop and xor mov int3 ret add mov test dec cltd jns dec inc aaa sub pop dec add test fcmovne pop (bad) fisub cmp out movsl inc inc ljmp mov mov mov fldt sbb hlt push sbb push mov daa iret mov bound mov xchg jns pusha cwtl lahf xchg xchg cmp mov pop call out fwait mov pop sahf jle nop movsl aam pusha ds ret outsb jb bound scas popf hlt out scas adc mov (bad) mov in sbb pushf xor enter and push pusha mov jo sbb fwait cmp inc aad push hlt lret fst push and inc jecxz mov outsl test in sub xor xor xchg mov aad out adc int fisubr adc sti repz sarl and jg push push sbb xor push pop mov cmp jne pop shlb int dec mov xchg mov mov mov mov ljmp jmp inc pushf sbb es mov cmp sbb or push push mov jmp fmuls rclb cmp sbb ret addr16 daa (bad) pop cmc push ljmp int3 mov fistl leave cmp adc and jmp jmp jbe and dec fstpt scas pop dec sbb cld outsl mov mov andl in stos mov dec dec pop mov dec mov sbb (bad) push movsl inc xchg into mov and mov and out dec cmp iret ret xchg nop jecxz sbb or add dec sub dec mov bnd push jle arpl pop add lods dec leave add xlat mov test sti mov bound xor add je xor mov jo mov dec lret jge imul arpl pop lds xchg cmp sub jns test bound mov pop mov push out or out sbb dec insb sti jp movsl (bad) cmp ds mov scas leave inc lock shlb cli pop adc arpl fcomps pop or push xor rcrl add sub add xor dec call xor loope push daa push movsl sbb shrb rcrb sbb add test and (bad) fcmovnbe in dec testl cmp ret test mov inc int test daa jecxz cmpsb (bad) adc test mov adc out fdivs fcompl pusha or fmuls jnp mov jecxz,pt (bad) xor add push mov sub dec pop mov (bad) sbb iret test lds xchg insb aas nop xorl pshufw xchg mov or ret dec jb arpl call shll mov stc sbb jecxz xchg xor cmp cmp cmpsb jno es in add cli les out xor dec push fstl bound pop pushf fnsave insb test jle dec inc xor push insb lret jnp xor popf cmp imul cmpsl cld cld rorb jmp leave or test pop and sbb push push mov mulb mov iret lcall pop mov int data16 (bad) pop ss adc in xor jp lret lods fimull or cmp cmp push sub std add fdivrs out int3 scas fidivrl rcll negl pop push out sahf push inc insl sahf stc inc std (bad) movsl fbld fs outsl (bad) mov adc stc jns arpl negl test paddusw jb movsb in bound adc push gs scas mov imul mov in pop pop jmp pop jmp cli fisubl subl mov je repz cld jb pop adc pop mov ret pusha sbb mov push or cmp mov sbb out jmp cmp fisubrl mov je out or in xchg fwait pop aas ficompl (bad) xchg mov xor push pusha inc mov jb loopne cmpsl ret pop popa out add icebp fstpl jae lcall lock sub push or lea push xchg mov jns mov orl ljmp dec repz add jle repz ja repnz in inc lds out mov and fxch cwtl repz mov lret aas (bad) lds and std int3 adc js xchg popf insl xor push or insb (bad) seto dec sbb dec faddp insl cmovbe push jb mov repnz into and movsl or mov mov cld mov jg mov aam adc (bad) cmpsb xchg mov decb adc xor in fadd fwait xchg repnz jge push mov stos (bad) push nop sahf sbb cmp loope adc jl push sbb add push fldl cmp pop fisubrl jo dec fsubrl loopne add nop lret cmp jns repz jb clc mov sbb cmp scas ret daa repnz cmc lods mov ret add xchg lds cmpsl xor fldt pop jle std neg lds mov jbe sub dec mov js int3 sbb xchg push adc dec fwait jae adc (bad) sbb adc xor aas loopne shlb test stos dec and (bad) scas cmpl or cmp or or test jnp sub fistp cli (bad) in cmpsb lods dec shl enter fidivl adc int cltd pop push mov pop sub pop popl repnz sbb inc push test fnstenv mov xor xchg rcrb movsl inc (bad) pop xor test mov (bad) imul pop jl test ljmp fbstp sub stc inc ficom fisubrl and fwait jmp outsl jae pop ss mov stos jmp xor mov mov push xor jl out inc pop xchg inc mov loope inc jmp bound je je,pn xor in rorl aad mov lret fsts add jecxz dec inc sahf (bad) stc dec out xchg enter xor push inc xor mov aad and jbe mov movsl (bad) jns std or into xchg repz clc rcr jg les mov lret (bad) mov or dec (bad) fimul xor enter cwtl jecxz xchg pop push cmp cmp nop add mov push mov or leave dec ja adc xorl jb out bound shr sahf pop pop inc int3 mov pop andl sbb cld fdiv movsl adc outsb loopne fdivrs jb inc push repz mov aam inc push fimul inc mov (bad) jno addr16 movsl es mov ds fsubr daa loopne jo pusha adc sub cwtl repz std or sub clc fcompl sarl cmp mov (bad) xchg sti les cmp inc push xor cli xchg (bad) fdivl repnz mov lock cs (bad) mov sub movsb out popa std int3 mov aas fldenv xor test pop xchg (bad) add ja shlb jne sub mov rorb movsl js test in sbb sub and sub jnp sbb fmuls repnz in jbe push pop push dec es incb (bad) (bad) in fbld push sub shrl xlat adc inc fisubr ss cwtl (bad) (bad) mov lds xor nop adc cmp mov cmp in in adc adc fidivl cmp cmp cmpsl mov xor out xchg or jmp leave and pop adc shl jp add add push sbb xorb jle dec push pop sbb and inc inc fwait out (bad) out or insl aaa (bad) (bad) jge loope fucomi mov daa mov ds fistpll jb fwait test cld pop fcomps cmp cltd int3 repnz gs les lret cld aad jmp hlt into adc repnz out (bad) jl sbb mull dec mov mov arpl xchg or test push push jl imul sub add xlat fld1 lods sahf jecxz inc and sub stos push fiaddl cmp or shll dec in scas inc mov inc je lea (bad) sub fisttpl in add lret adc xor mov xchg xchg gs adc sbb sub pop sub lret test leave lds iret cmp inc xchg out pop lods stos decb std add inc cld clc sbb sahf sbb jno aaa adc pop lds out jb mov jmp dec and jmp popf pop and jp in dec stos aas sub sbb (bad) cmpsb adc mov es aas xchg mov test loope mov sbb and movsl cmp jo repnz mov sub popa std pop outsl (bad) (bad) cmp add mov repz mov or int jb (bad) mov hlt push xchg stos les mov ret imull ret (bad) in or mov (bad) (bad) jno cmp enter push cmc cmp jae ret dec sti cmp je push adc cmp lret xchg ja add sbb dec sub cltd mov and jmp mov or push cmp iret lret out xadd inc sbb add and pop xchg mov pop pusha loope adc roll gs xor mov shlb (bad) lret gs jbe xlat and jmp cmpsb inc sar mov shlb add and cmp inc inc sbb outsl push fcoml mov mov rol cmp jle jmp pop sub push mov xor sbb rclb into mov arpl ja xchg lock mov jbe xor (bad) mov lods jge push and pop jle mov inc fcomps mov or sbb pop data16 mov lahf push outsl repz nop clc dec mov pop sarl cmp nop adc in and fwait inc mull das sbbl push loopne sbb out ss and jge jne loope mov sarb pop dec out addl in and js lea stos inc pop adc ljmp je cmp fstpt add cmc mov push lods mov lods addr16 sbb mov fistp mov js cmp popf repz sbb jle cltd mov out xlat jbe or add (bad) insb das dec les cli cmpsl pop aaa jg mull fsubl xor movsb in into sbb adc pop mov or iret mov xor aas mov outsb inc add (bad) lods icebp sub push cmc stc int xor or sti lahf std add out sbb push mov fisubrl xchg data16 out push dec inc jge insl push and enter jae roll int3 mov push mov popa add out ja sbb subl mul out fimull (bad) popa sahf mov mov (bad) idivb xchg fild adc pop std sti (bad) mov inc mov xchg in jb out mov packuswb push mov negl popf es mov mov jp jnp repnz mov jno ret in std call mov push jmp or ficomp aaa xchg push mov mov push cmp push movsb adc mov mov dec pop fdivs movsb push das js sub and sahf lahf repnz or mov insb jl (bad) out shll cmp or data16 mov iret arpl jg mov in outsb jg mov sub out adc cmpsb ja shrl lret and inc dec ret add mov cld xchg cli test mov stos cmp insb or test loopne jle cmp and shr xor fistl lret pop cmpsl test leave inc imul mov adc sbb arpl popf sbb stc icebp push pop mov into or inc xchg mov les pop bound (bad) adcl inc movsl icebp scas or adc mov push aas mov test sbb or mov xor call call mov loop loopne (bad) mov jne arpl jns jp jno fisttpll addr16 xchg cltd and lods arpl xchg cmp out fbstp cli testb dec mov pop (bad) notb sub in aaa imul dec (bad) aad movsl out bound jl ret push xchg jns cmp pop stc push hlt lea add dec xchg scas add xchg out lea push imul mov mov cmp sbb mov ja cmpl iret insb jae call xchg mov cmp xchg icebp cmp fsubl repnz dec jmp xchg add jnp shrl pop inc jge insb mov mov out fstl daa daa pop inc aam mov pop dec dec in outsb lock aas hlt fld addr16 in addr16 pop or xchg out mov push shr jne xchg les mov sbb adc sbb sub pusha outsb int3 in sarb adc push and jns xorl je fbstp dec rcrb pop out ss scas scas fcomps inc in cmp sbb mov cmc std adc cmpl mov out jmp ja or fstpt sbb in mov pop (bad) jl fcompl call aad (bad) pop adc xchg fdivrl xor adc xchg pushl stos mov rcr inc fucomi and in and repnz fs xchg sub mov movsl orl inc inc dec sub adc lret in jb popa dec xor add pop cmp scas mov test or sbb gs cmp jo and test push test sub and push mov mov cli into inc cmc inc mov scas jo popa loopne adc and gs cmp mov lar int test aad push ss clc scas sbb inc lea dec fisttpll mov sbb aam xchg or or sbb pop mov sub mov in xchg lcall jae jecxz jge xor push inc mov icebp clc or or in or push in dec into or sub fnop push (bad) mov (bad) fucomp js pusha or and stos repnz pop or lods add aam rcll jg xorps lods je and xor dec mov lods rcl imul xchg fsubp xor inc adc push xchg push pop sub mov xor cmp sbb insb pop sub add and loope fnsave outsb inc or sbb sbb pop cmp out cli (bad) es add xor dec subl and cmpsb inc mov dec jecxz call pop pop mov and (bad) pop xchg fs mov sub pop gs dec arpl (bad) mov or mov jo ret hlt lods jo movsl or sub inc dec pop add stos xchg idivl add stos add push dec insb test jge mov sbb adc iret sbb mov jl outsb and xor (bad) pop (bad) mov aaa (bad) fwait lea loope test mov mov sub and jmp mov and into lock leave (bad) add lret std inc inc fdivr int3 lcall mov (bad) jns mov imul fdivrl push ret add neg stos ret jp aas or adc mov out outsb aas nop int3 fisttp add push rcrb fnstsw dec es push clc cmp add inc repnz pop into aaa and in sti flds stos pop aaa test mov fbld jbe jb sub jno in mov mov loopne les std push sub xchg (bad) unpcklps mov xor jae fxch gs xor shl xchg inc mov movsb enter movsb or xchg dec add push test jp lods dec dec sar cmpsl sub addr16 pop push sti push sub push mov lods imull push test lods clc xchg jg push test (bad) jne dec add cwtl lret push pop mov adc and rcrl js xchg mov roll push cmp testb out popa push cli mov arpl nop jmp or cmpsl jne in imul cmc pop es rcll pushf push push add je dec jne stos in dec jmp test gs (bad) negl leave and or push mov or inc movsl xor sub adc xchg ljmp jge (bad) inc imul push cmp ret push hlt cld enter or in and pop lcall adc mov push fnstsw jbe mov sbb xor sti out negl setl fsubs aam (bad) add adc nop push or xor push hlt jl xchg imul imul pop mov fsin addr16 mov cltd pop sahf fwait stos cld xchg rclb scas arpl mov adc lret push lret aam mov mov adc (bad) or cmp mov cmp mov adc ljmp lahf addr16 dec int xchg jge xorl outsl dec sub std fs daa and inc movsl js pop mov and rclb inc cmp cmpl stos cmp push jne es test test nop test aad imul fsubrs jo jecxz ret xchg mov enter xchg outsb jl dec mov addr16 pop cmp negb pop out mov sbb call and repnz xorl push push out dec or mov dec aad jmp fnsave ficompl int3 mov (bad) cld fmulp fadds arpl ljmp in push outsb out xchg mov test push sti sbb dec xor mov dec fwait jb adc lret sbb xchg pop enter mov movsb pusha test hlt dec push jno and pop mov fidivr push adc mov jo push adc and pop mov adc pop movsl in sub dec mov sbb push mov add push jbe xor lcall sbb add mov data16 (bad) int mov sub outsl push push test inc xor in xor (bad) mov or adc sbb mov jae push lea xor pop sub xchg js arpl fimul pop pop rclb pop pop sub jns mov mov imul mov negb sub std enter lds and (bad) cmp loop (bad) fdivs jne mov sbb pusha popa adc push shlb sub jns mov das cmpb (bad) jmp xchg and lahf mov fcmovb (bad) idivb xor xchg and pop or push test loop and jl rolb and hlt aas jmp ror aas lods test and inc pop mov jecxz (bad) lahf sub and inc mov je and dec (bad) mov dec in cmp mov int in mov in and stos mov sub (bad) out pushf pop lea or loope mov (bad) mov cmp cli cmpsl pushf mov pop adc mov sub xchg and dec inc (bad) adc subl lds adc cmp sub cwtl push cli push cmp loop xor loop out add out mov push mov mov mov push je pop ja sbb add call mov mov mov jns and test in dec leave dec or push (bad) sub add scas les repz add mov stc add (bad) ss adc dec movsb scas pop insl adc fldenv out and cmp (bad) gs cmp lea je sahf data16 pop add ds add sub stos push jb fld1 gs stc pop shlb rcrl dec lods pusha out rcr cmpsl (bad) mov xchg dec mov pop dec adc xchg rcll sbb push xchg clc xchg ds push push adc sub xchg cmp inc fnstsw jge cmpb jl (bad) jmp cld data16 or (bad) or aad lods push popf jne inc negb fldcw sarb loopne cmpsl mov dec inc out leave loope or mov ficomp mov fsubp adc mov scas or or and pop mov movsb mov out test lock ss pop addl and gs push add pop cli in xchg jge push sti dec popf imul fcoml lret fdivrl in andb mov testb mov cmp cmp loope out mov into adc (bad) mov dec cmp in mov mov addr16 lret imul rorb lock (bad) neg loopne jl insb ss push ret (bad) push (bad) addr16 int (bad) cmp out movb mul aam insl and cwtl dec shr in and cs mov and mov xchg pop mov inc sbb fdivrl pusha mov jmp pop mov fbld ss cmc xchg sub xchg popa adc in add imul test stc cmpsb jbe repz das daa aam push arpl mov aas or movsb mov test sub xchg jmp inc jecxz inc push fistl lea xlat inc movsb pop cld insb les xchg cmp lock insl loopne pop into pop push adc lea add shll xchg jne mov add inc ss fs popa mov jmp scas inc inc xor xorl mov add cltd mov sti scas mov lret inc and dec add roll lret lods cld out and mov outsb push xchg ja inc push xchg jae dec push mov jb cmpsl jp add jp or xchg or repz jnp movsl cmp pushf xchg xlat enter pop cmp repnz xchg push out rorl lods mov or jb (bad) rcll outsb jmp xor inc mov test add call inc insb out repnz mov mov in add mov scas shr daa aas fdiv pop adc imul cmp or mov dec push mov hlt mov popa mov movsb clc fs std dec movsb out clc pusha xchg popa cmp adc int3 adc test (bad) jb mov inc lcall mov fldenv fimull fdivr nop xchg or js sub movb xor jno pop aam fldenv (bad) ret (bad) fwait push adc inc ja movsl dec outsl xchg lods mov or lahf loop mov cmpsl adc fs std cmp pusha loope lock add add mov outsb push jno frstor gs mov ja stc jle lock je loope xchg xlat xor mov lea mov sub adc mov das roll imul mov dec and les icebp push in movsl pop call orl daa xchg js std adc aad test imul add roll adc sbbl dec cmp add and jne xor das das and push shrb addb rclb xlat push insl or cwtl (bad) clc mov pmaxub je and rcrl jl xchg jle arpl dec lcall int inc jb inc mov add pushf inc scas add pop ret insl data16 dec movsb adc cmp dec adc xchg inc stos lods jl mov fldcw cld add stos ss loopne inc xor add sarb je int cmp lods dec mov idiv loop mov popf mov enter dec shll rorl popl outsb jl push sti mov jbe dec add mov es mov jmp jmp data16 pand repnz shrb cmc pusha imul daa das in mov mov (bad) jno or mov in inc and xchg jne into jne outsl sub add or add jle pop mov sti orl push mov or insb mov imul inc pop iret jno ret adc cli mov and push push cli mov imul ret adc int3 jg and ja test fild inc push jno add out push mov pop cli gs ret (bad) cmc push fsubl enter loop rcrl nop push loope leave lcall jne jge,pn int3 loop fwait mov pushl fdivrl push pop adc cmp jnp push cmp mov and cmpl rclb jle daa outsb daa pushf sbb mov jmp adcb outsl popf pop ret dec pop test xor cwtl decb push cmpsb or jbe and push inc and (bad) mov ja inc mov mov push mov adc jg jge lds shrb aad add and cmp cmp int3 jae pusha push arpl adc enter stc sub imul push sub outsl out fcmovbe add push rcrb out lret insl stos (bad) sbb fld cmp sbb popf lds push xchg dec jmp jecxz cmp xchg add or and mov setl mov pusha push mov sbb jmp pop lret cltd imul popa int jbe sub add mov mov (bad) mov je fs add cs ficompl test add xor push xchg push lret mov add mov jp in push loopne xchg ret jle dec add jl mov xor xchg inc inc mov sbb dec mov test pop ret fisttp dec cmp clc xchg xor or dec stos adc int pop push call daa adc jae dec aas movsb push lret das mov xor sub dec sbb add rcrl push pop out fsubrl jns out mov notb push push fmuls sti jl aam push into leave int fwait daa mov insb adc stc cmp pop push fcoml je mov sarl insb mov or or add loop in sub rolb test xchg insb shlb inc cld cmp (bad) adc pop jnp adc in mov enter sbb xchg test push in test orl cld dec sub popf loop andl sahf mov push rolb cmp inc sbb ret pushf repnz push lret mov mov mov shrb sub iret loope jns xchg loop inc cmp mov add xor push sbb cmp dec mov ja or cmp fsubr (bad) psubusb in sbb flds repnz sub pop jge loope pop movsb in cmpsl pushf jb in insb cmp sub lods cmpsb scas in sarb mov push or stos pushf test mov mov sahf in mov jmp pushaw in test je aam hlt inc in (bad) mov out arpl out dec das add mov add add arpl (bad) jbe stos fcoms fs cli sti sbb enter or pop in cmpsl icebp cs stos pop jno in push leave in jnp jns scas int3 cli jle or mov lods outsb sarl dec mov gs cmc adc test call stos xchg jae and inc test repnz sub adc lret xchg arpl repz (bad) sbb mov sbb sbb or mov les hlt test jmp push mov pop push dec pop xchg bound je (bad) (bad) popa cmp or repnz iret fistpl xchg sub mov sahf dec ret jne mov add sahf shrb adc ficom xchg cltd jb jnp mov (bad) (bad) into add mov cmpsb bound inc fcoml mov sbb mov adc ret loop push rcr cwtl or mov (bad) (bad) mov xchg xchg inc push pop popa leave mov push scas scas je cld jg (bad) sbb mov mov or mov and popa adc cvtdq2ps xchg mov fbld test add out lcall std xor in cmp pop scas mov in xor mov enter mov outsb (bad) xor pop sub jecxz jbe mov call nop stos cmp xor lret cmpsb mov ret mov jb adc (bad) xor aas push add fistp sti dec call mov jne add dec sahf icebp lcall jns mov pop and rcrl bound je add jecxz add shrl data16 xorb add fdivrl mov ljmp jae mov inc (bad) addl sub sub icebp (bad) sbb adc and sub fmulp call xchg pop ficoml movsb and out push mov lock aas and mov add push lds fidivl adc jmp sub jp adc jecxz cmp adc and pop xor inc mov sub sub aaa (bad) mov push out pop cwtl scas rolb adc outsl jae out out sub mov pushf sub pushf fldl cmp push loop jne je (bad) push push push outsl pop imul (bad) (bad) xchg lahf ret pop (bad) cmc xor add mov fcoml push scas jns mov add add pushf xor ds in cmpsb push and jb pop pop adc push sahf ja jnp sub push cld andl push aam mov stos lock mov movsb clc jl loop data16 scas jno mov int add and dec mov jo stos stos jge cs mov test mov decb stc pop (bad) jae js dec mov test mov cmpsb cmp jge jb jecxz sub cmp mov mov in inc pop mov movsb mov je mov stos push xchg push dec sbb sbb xor (bad) push flds add testl mov movl and sub adc or loope shll std das divl leave enter adc push mov ljmp stos mov dec dec ds rcr jle out xchg push xchg xchg or push cltd and dec or data16 loopne cmp xor daa and xchg ds out idivl xor call sbb fsubs or imul aam add (bad) sbb (bad) cltd pop cmp cwtl jb lds arpl (bad) gs mov repnz enter lods pop pushl dec nop push inc (bad) fildl inc jb pushf lea aam ljmp dec mov rol xor sbb clc les call bound push inc scas leave xor dec xor and ficoml mov xor in pop or pop push sub xchg ds aaa dec xchg jae xchg ja lods ret mov bound (bad) sub pop sbb xor sbb xchg repnz adc insb fnstenv (bad) je into lods or sub call or cmpl push cmpsb in (bad) pop popf mov bound dec daa mov xchg pop jo test and enter pop roll adc xchg out arpl hlt inc dec es or imul add movl aam jmp mov mov stos (bad) mov jle dec and inc or ja xor outsl fidivr stos outsl arpl int3 jns push fnstsw frstor xor out lcall push not cmp stc dec subl xchg loopne jl push aam fmuls out rol sub and into minps gs inc fildl mov outsb out loop in (bad) out lret lock (bad) push jns xchg pop out rolb xchg push (bad) sbb (bad) add fmull adc outsb ficompl or mov cmp mov sub aas pop or jmp sub push sub inc add repz das (bad) adc hlt int3 cmp aaa and fwait xchg push cmpsl lods xchg or xchg fdiv push mov push leave insl sbb inc cmp jmp call idiv adc ss ds aad ljmp sbb jp xor dec out fnsave xchg xor dec add push or sub adc lcall shlb xchg xchg pop das loop mov lods daa lfs lret or outsl fbld jecxz addr16 mov shlb dec lds push lds fadds jo push adc loopne cmpsl ja,pn dec imul popf mov pop mov add popa or sub cmpsb cs xchg push and insl out sbb (bad) push sub in loopne fimull stc lods lock iret dec aas adc and call lret aam xor out pop or fidiv (bad) xor jle daa jmp cmpsl fnsave mov push hlt xor push cmpsl pop aad lock (bad) jne push mov mov mov lahf and adc mov xor cmp jle aam mov mov jle or dec aas push or scas fwait mov out loope call dec mul sub push lock dec idivb (bad) sub cmp pop das std push idivl insb insl pop stos mov or fwait shrb jae mov sbb pusha cld xchg dec mov insb sbb imul push lcall mov adc mov xor jge dec mov jnp push imul dec lds cwtl adc mov sbb repz push pop movsb inc in sub adcl vlddqu pop inc jle dec add sbb (bad) dec cmpsl mov adc fsubrs jl mov inc outsl push repnz inc (bad) cltd xchg push hlt in jle andb pop adc push cmp and cltd int add imul ds sbb or fstpl shlb fldl lock push and dec inc test (bad) into arpl xor push pop daa push out test xchg jmp mov cltd add insb dec add scas stos das lret ds inc pop push mov roll dec dec mov sub jg cmpsl jbe add jne cmp jnp mov xor inc aad roll movsl xor lcall mov (bad) test daa movl fisttp (bad) cmpsl out mov sub pusha xor or lods push push inc adc adc ja lret mov int pusha sub jle loop add mov xor cmpsb cli cltd ja in into push xchg mov mov in outsb cld (bad) fdivrl enter lods xor jmp loopne xchg or movsl test fbstp popf inc or leave rdmsr jge cmp fcoml pop (bad) mov cmp mov mov add cmp lods jg in jp test jns sti cld mov das je (bad) adc pmaddwd dec nop inc enter push sbb cwtl das jle sbb xchg dec add pop sub adc sbb cmpsb pop sbb push xchg pop add fildl sub mov jo rorl or sub (bad) mov imul mov lcall ret fwait or pushf (bad) repnz sarl xchg mov pop insl pop sbb loopne fnsave cltd mov dec push shl xchg push inc out and int3 mov ret inc aam fldt fstl xchg pop pop mov ffree loope mov jo push mov call inc xchg scas dec cmpsl sti das xchg or or je mov sub aaa mov dec sub enter sbb add dec dec ss pop or push leave test jecxz ret sarl rolb (bad) nop out push xchg sub dec fldenv jl push push mov (bad) sub insb daa shl xchg add mov xchg inc cld mov outsb push adc inc mov ljmp mov or mov ret and lods loopne and js jp dec fdivrs inc add push sbb xor pop or les aam fnstcw push add mov sbb dec pusha add pop add pop inc inc imul imul pusha sub dec mov test leave bound cmpsl dec mov dec mov pop das imul cmpl aad mov arpl and sbb popf or arpl cmp xchg push (bad) lods popf push sti pop cmp or fstl int3 fcoms and sar push or sarb cmpb insl outsb inc pushf rol fs js lahf jne or lcall std jmp fstpl sub inc and push xchg cmp enter js cmpsb je pop push outsb (bad) cs mov data16 in sub adc dec dec xchg mov push push nop lret std ljmp pop (bad) mov ja outsl insb push push int pop mov sarb lahf lods ret loop lcall dec sub std inc pop ja enter mov sbb sbb cmc push (bad) aam dec pop js pop jbe das add pop inc sbb sub mov push jecxz bound inc sub add push stos sbb inc mov or das mov pop mov adc jp pop test mov cli (bad) jecxz sahf cmp dec je sbb sbb mov int3 arpl adc add push call push and dec daa (bad) push mov adc xlat lret mov cmp sti add adc (bad) cmp imul or (bad) sub jp icebp mov inc push lods shll sti pop xor or adc lret fcmovb out pushl movsl ljmp idiv lahf push andb mov (bad) mov jnp (bad) (bad) jne pop gs xchg adc cs sti addr16 sti push js add outsl cmpsl imul jnp or imul pop enter iret and daa dec addl mov add xchg mov mov jl adc mov daa add in jbe outsl cmp lahf ds lret andb adc loopne out fldenv fistp jb je push sahf and jb sub fcoml imul sti (bad) adc inc adc adc dec idiv jl addr16 cmpsl dec adc cs and mov dec jg mov cmp cmp lods pop add or jp cmp xor loope int (bad) cmp lcall mov ss bound fsts add loopne cmp xor test or mov sub mov (bad) out cmpb pop xchg aam jne rolb cmp (bad) lock mov inc cmp fsubrl pop nop push rcrl mov xchg xchg pop and in pop inc repz pop inc imul jmp push cli stc mov scas push mov mov mov aaa mov or mov add mov cmpsb jb iret fildll jecxz mov fdivrs lahf dec or push mov lcall mov sbb or xlat push in int3 (bad) movsb jns in or fs dec sub stos xchg mov icebp mov scas mov inc inc jg dec call sub inc dec (bad) addl or xor push aaa dec clc bound push idivl dec xchg loop outsl cmp mov cwtl cmc pusha pushf jno js mov push les jl in sub mov out inc in adc jl mov fisub xchg xchg jmp push mov test lds int rcrb jge mov mov mov ret cmpsb ret mov push ds jecxz out jecxz (bad) out sub push xlat int3 xor notb mov jp test mov insl cmp inc popa sub and xchg mov nop mov adc jns dec pop pop push mov xor clc std fldenv jbe sub addr16 std xchg pop fidivl neg add stos loop jmp subl mov scas insb xor (bad) into data16 testl (bad) jl pop mov into int pop push or sbb maxps in mov call in adc jo inc imul push cmp (bad) jbe xor push lahf sub repnz jne in mov repnz leave push mov lret fwait mov das cwtl (bad) and imul mov mov nop (bad) je xchg jecxz enter popf xor cmpsl pop gs mov in sbb mov mov imul push sbbl (bad) dec (bad) adc mov lock loop daa das pop adc jle pop jg sub cmp jne dec and dec sub fdiv pop cmp pop dec gs xor outsl cwtl mov call or push test adc (bad) (bad) jae leave pop and sti daa cmp aad dec mov out addr16 js inc sar inc int3 inc cwtl cmpsb xchg lret negl xchg ret jmp fcmovu ret xchg clc imul ljmp sub js lcall or cmp movsb sub jg and call sahf push jmp dec and cmp xor pop (bad) js out mov jle out mov clc out fildll ja insl dec imul lcall adc imul das push mov jno stos cwtl popl and mov cmp jo inc jnp or jle xchg divl dec push push fmuls ja lcall jp xorl int3 lahf out mov pop jb lods jecxz pop (bad) iret gs pusha (bad) popa outsl pushf jg push cltd inc or pop call repz mov shl or and mov leave sbb sbb ljmp sub outsb inc or cmp ret push add loopne adc xor sahf push (bad) xor (bad) mov mov bound decb mov test aaa mov pop pop push xchg inc dec push cmp xchg sti lret cmp ds adc inc in mov ljmp sub loopne mov and leave movsl inc pop inc push mov inc ja lcall sub inc imul cs and (bad) ds mov lods cmpsl lock inc bound lods lods (bad) repnz nop mov fidiv into (bad) sbb sbb xchg mov outsl lcall sub test mov in sub loop xor adc xor in pop dec (bad) mov lods mov sarb dec (bad) out mov dec or adc xchg mov cmp cli inc fcoml jbe idivb call pop xchg in mov dec je lods mov xor int3 (bad) dec jnp fcmovb shl jae xchg and or mov push fadds imulb in imul rclb notb jl push xchg jmp fsubl pop popa sub scas insb fadds rclb jg fdivs pop out xchg pop pushw push int xor mov or mov (bad) test push sub inc (bad) mov push fistl pop cmpsl pop sub push pop pusha cld mov je pushf dec push dec inc loope mov inc mov xchg popa add or sub jbe cltd into stc gs jnp sub mov shr pop movsb cmp adc aad in jecxz pop insb sahf addr16 sub cwtl xchg lret movsl pop jne mov dec leave xor pusha xor mov leave pop mov repz and cli xchg xchg js mov jmp sbb xlat ja popf sub clc mov mov dec mov fdivs sahf pop inc xor jne (bad) (bad) xor inc pop dec std jbe cmp adc pop xchg sbb cmp out hlt idivl inc mov data16 arpl ret inc fsubl push andl lss (bad) repz pushf imul or mov ds cmpsl enter inc adc and dec jb std pop rorb lods xchg push add lock call (bad) insb js add adcl inc jns (bad) mov addr16 push push loopne mov je mov mov lock cmp sub sbb aas push mov xchg and dec divl mov lods outsl jge,pn pusha int mov test es ja clc jp pushf scas data16 mov outsl into push mov dec dec outsl and mov cmp cmp jg push dec and add ret adc setno push push dec or (bad) xchg das cltd pop idivb push and mov and pop inc sub sbb out popf sbb loope pop mov repz loopne enter push xchg cmp mov (bad) loop mov adc jge mov dec insl jo sbb dec adc test inc cli (bad) lock mov fdecstp (bad) pop imul xchg (bad) testb into lods lods es ret xchg adc aad stos jge push nop (bad) mov ficomp lods mov jne cmc (bad) (bad) cwtl roll lcall sub inc sbb fdivl insb lea fs lret aaa xchg ss jb arpl daa pop sub in incb fmuls adcl mov (bad) (bad) or stos into js xchg jl mov fdivs in cmp ja cmp stc shrb out fmull outsb (bad) mov scas fsqrt pop jl cmp outsb add mov leave push cs repz ficoml push mov adc dec push leave push mov ds dec imul (bad) popf fidiv xchg inc das daa inc inc (bad) loope adc lret (bad) loope cmpps fistpl pop (bad) div loop nop jg cmp pop pusha (bad) mov and sbb ss or jnp scas sbb inc in xor push mov int3 dec and jp,pt inc mov (bad) push pop dec hlt fwait (bad) outsb pop add pop mov (bad) rorl pop xchg pop outsb out pop mov and shrl xor xor addr16 sub (bad) push pop les mov cmp popf lret xor ja mov adc push push mov xor leave ret mov pop jge mov jge push cwtl lods daa cli into aas push or lods jmp or loop jge push adc push ret mov outsl cmp mov popf idivl lcall dec je inc jp pop cmp xchg neg repz js or push pop fsubrl (bad) daa and fdivrl scas mov cmpsb pop cmp popa insb pushf or push (bad) lcall cmpsb pop dec leave movsb (bad) cmpsb mov cmc stc (bad) (bad) inc scas mov rolb dec mov adc decb and inc imul repz mov fnstenv scas mov jb sbb test lret mov lret inc into fwait lcall or xchg dec movsb cmp lods mov scas mov mov decl nop fcomip mov jnp cmp jg arpl inc mov and dec xlat add aaa pop mov sub push ljmp shlb lea pop ret int inc je (bad) push cmp mov cli xchg push sti ret loope stos out add push gs pop in mov lds and (bad) jmp into arpl (bad) xchg mov inc sub add inc push mov jnp dec ret adc dec mov popf pushf ss xchg clc fmulp les stos mov fmulp pusha dec mov cmpsl popf pop inc push jge pop cmpsb mov xor test and out add xor adc jp leave in sbb xor inc (bad) (bad) ret pop mov mov push pop outsb fistpl and push sti push mov pop sbb xchg shl jbe sub roll mov mov sub mov adc xchg (bad) mov cmpsb fimul repnz sbb push bound test movsl mov fwait sti ds jns or (bad) outsl mov ret or imulb ds fisttp loopne pop enter inc stc and mulb imul and mov adcl mov pop pop or aas ja mov cmp sbb or jle xor jae sub or lahf push shlb aas test xlat and call sbb sub adc popf mov push sub test arpl cmpsl adc xchg or lods push dec or mov imul loope dec test mov fwait mov add pop ja and test insb mov ficom jmp mov mov jg or push addr16 (bad) fnstenv ss inc in push imul sub aad and imul ficomp out aaa inc inc cmpsb cli mov mov in adc xor (bad) dec inc lds mov lods fs out call or ret (bad) nop jae pop daa or xorl dec jns push rcr scas insb in mov mov jge inc loope lods sarl lret inc rcr and mov mov gs rolb add inc adc lea sarb cmp fsubl fwait in dec aad sbb sbb xor jge (bad) adc cmp pop in push pop jle sub popf sbb hlt jp sbb or pop xchg (bad) or sbb push arpl insb xchg aad mov inc call pop inc adc xor stc cmpsb and testb push shll lods add ror and or inc and out mov leave dec sub les je add push xor flds sub lret mov repz ja cmp or and jg ljmp data16 (bad) pop cmpl sbb cmpsl fdivl movb out jmp add pushf push pusha and les add (bad) sbb pop rclb dec cmp movsb push inc daa xor pop cli mov xor mov (bad) int3 dec add jle adc push adc mov push mov in int3 (bad) (bad) fstpt mov mov or pushf out sbb mov pop insl mov ret xor test push pop xchg ficoml (bad) ficompl dec leave push into jle xor jno test adc into into cmp add (bad) ss mov and dec shll sbb pop jle aas mov insb xorl jb and jge push mov mov aam je jl mov ret push enter adc jbe mov mov nop jp sbb cmpsl sbb xor inc push inc repnz mov inc insl test repnz sub jmp jb ljmp mov pop dec mov in test sti add push loopne (bad) xor jnp mov test sub xchg stc lds inc cmpsl je sbb or add push pop sbb or dec test int sub sub push mov jb in dec inc in bound ficoml into fptan mov pusha pop add cwtl (bad) les lods inc mov loop inc js xchg sub fwait cmpsb popf out (bad) cmp sbb mov mov and sub out in repz sbb popf pusha jnp (bad) hlt and sub ficoml stos (bad) push pop pop rol ficomp push sub jo add inc or andl lock iret sub or addb loope sub arpl cmp sbb push add cwtl iret mov push shll jne into push in xchg cmp xchg push loope mov fwait pop inc ljmp sub mov adc sbb shr stc (bad) cltd leave jns insb ja test mov and leave or (bad) lret sub mov xchg push outsb lret xchg mov ret clc pop jns pop mov in mov aaa xor (bad) dec loop nop jmp gs (bad) xor xor mov das mov cmpl loop scas in scas or into xor sbb setae imull xchg mov cmp jae loopne scas test bound (bad) (bad) fist (bad) xor xor ret jnp xchg (bad) int3 in or xchg jg inc or popf lods pop jb aam iret into mov mov jecxz xchg xchg cs test outsb push push mov pop add fsts mov pop sbb or mov sbb test loop sub lcall inc stc mov cwtl lock xchg mov inc mov cmpsl pop out add mov (bad) jb or and ds fsubrs jl arpl xchg adc dec gs inc fidivl mov fcomps xchg int3 xor sti jno xchg lret ret cli inc fcomps or mov push les lcall xchg popa jne push movsl je xchg pop dec xor sub jecxz cmc ja sub cmp mov mov cmp cltd fidivl sub mov jp sbb lods insb movsb pop (bad) mov cltd insb ret ror jno js sub (bad) in sbb push and cmc xchg stos lods or nop ds dec stc (bad) xor aam subl mov adc xlat or sub sub fistpl negb cmp xchg loop je rolb adc (bad) push dec repz add cmp scas incb push cmc inc jmp jl xchg pop sbb cltd or push insl cmc jle dec mov adc push mov adc sbb mov and xchg add jnp hlt loope cvttps2pi out mov sub pop lahf add sarl out xchg jle adc into sbb xor pop xor (bad) int sbb in ja jno mov push pop shl jnp int3 add cli push xor add mov xor enter jmp fstps xchg adc in or xchg imul (bad) cmp outsb cmp in push loopne pop faddl movhps push sub jge sub push popa pop push pop cmp sub push loope sub in aam adc add loope ret dec sbb cltd add xchg cs rcrb loope add push ja imul imul out sti or das mov dec in les adc out dec ret xorl jo stc pushf out pop popf or pop inc ret rcr jo add int3 ljmp jno std imul pushf fsubs test or cmp sub push cmpsb mov lcall sbb cli xor enter add xor int3 dec gs test xchg pusha int3 divl pop xorl popf sahf repnz ficomp leave call add add lcall mov cltd or out inc sbb loopne pusha and adc div (bad) inc cmpsl cmp xchg pop sub gs ljmp push push mov bound cwtl popf xchg js pop (bad) test dec pop cmpsl leave push test xlat inc loope jns rorb jno test dec add xor pop dec xlat lahf lret jnp pop xchg cmp sbb mov lret das sub imul add ljmp xor lret lret (bad) xor pop movsb leave add in in movsl pop ljmp inc sub or into jb in int clc cmp mov das mov pop std mov stc dec insl lods dec pop arpl jno outsl in leave test xchg pop sbb ds jp ret or xchg rorb mov scas mov mov in divb dec mov pop out imul test fildl insb ja xchg lods (bad) rcrb stc xlat xor in xor movb dec clc lahf call sahf pop xor xchg ljmp imul in push mov inc lret pop xlat test mov lcall out adc or imul jecxz xchg jmp pusha lods lock gs (bad) adc push push leave out ss dec (bad) jae loop cmpsb jle push clc and aas dec in pop insl ret cmpsb repnz mov aas dec xchg pushf roll add imul cwtl subl inc loopne nop xor sbb mov enter lret std hlt fwait xchg (bad) mov and fcomi subl inc hlt out into loope loope arpl cmp test sbb sbb pop dec sbb jp xchg inc ss push out fisubr mov sbb jo push jb les mov push or lcall sub pop xchg xor out insl pop aaa xor (bad) mov pop pop inc xchg pop mov mov mov add lods bound jno mov dec subl scas outsb jp loope scas stos pushf inc push mov dec add arpl push jg (bad) insb sub subl xor push out dec and sbb aad inc mov outsb inc mov inc adc (bad) rorb and enter mov and nop adc and sub scas sub xor fidiv cmp rorb sbb inc lea push imul xchg push xchg daa fiadd mov jg fwait and shr jne xchg call xchg data16 shrb loop sbb aas mov hlt add shlb sbb add push int fisubl sahf (bad) aam push fiaddl xchg sub push sub adc xor sbb js lock outsl pop jle (bad) mov (bad) in xor je mov xor out sbb lods into mov xchg or jbe subl push pop rol mov push imul jne xchg insb add pop push or xchg pop mov cmp jno push and xchg jge xor cmp call mov mov fidivr arpl sub ss ss (bad) sub add mov adc aam iret loope inc into into mov aam cld fs adc or (bad) xor mov lret cltd adc aas popa xor pop mov mov (bad) mov sbb shll iret popf and les fs mov mov adc sbb inc xor xchg ds ljmp das jne fisttpll rorl sbbb inc pop add xor pop mov mov iret out or (bad) fidivrl pop mov rcrl and jge sub insl push xchg popf stos push subl push or ficoml inc std pop xchg std dec adc cltd cs int cmp jnp mov (bad) jbe sub ljmp dec mov scas jg stos lods cmpsl aas jmp jne jnp scas pop cmp loopne mov adc dec test out (bad) pusha mov inc dec cmp push inc xchg and test pusha data16 dec mov mov cmc fmull cs hlt (bad) fisubr (bad) enter or xor mov jg daa xor mov test add ret jl jne outsl pushf sahf (bad) dec sub movsl lret pop hlt hlt xor sub xchg out test push xchg mov imul add push mov shlb mulb ret sti adc xchg stos push xchg inc repnz mov cmpsb mov mov inc arpl fisttp or mov cmp jge lcall jno mov imul icebp or sbb test aam in in and jnp inc (bad) and loop hlt rorb xchg cmpb xor lods jbe fs fstl xor ds loope imul hlt sahf pop lahf lea or xor (bad) arpl push mov add cwtl fscale popl fidivl dec insl mov or (bad) in and dec mov int imul inc int lret xor adc fisub les push fsub lcall in int loopne push lea xor push xchg add movsl sub xor cmp shll pusha mov pusha sbb popa nop xchg xor xlat mov fbld jle outsl gs test pop push (bad) (bad) dec iret out cltd mov jno push mov cli sub aas jo mov stos push push (bad) in mov mov seto sub imul fdivp andb (bad) sub sbb jo push cld repz mov mov dec mov inc inc pop lock test inc push cs jge popf movsl outsl (bad) imul push cld lea cmp xor scas in aas hlt sarl sti fdivs inc adc mov dec (bad) or into les xchg stc fidivl push ljmp fist addb aaa cli sub adc pop dec mov shrl xchg (bad) aad inc pminsw movsb add popa mov ds jnp fistp adc jecxz pushl push lret movsl imul xchg inc inc lret out repz add dec inc xchg xor inc cmp sub sahf ljmp les clc in jns (bad) loop jnp or pop mov adc mov (bad) out adc test sahf mov mov cmp (bad) cli dec cmp jp jns out pusha pop repz sarb adc push sbb je push lahf push cmpsl pop adc fs pop push sub lahf add cwtl int out sbb test mov scas nop (bad) mov lods and lds mov imul push xchg cmpsl add jb jp es icebp ljmp xor repnz pop xchg or cmp dec loop jns mov adc cmpb sbb cmp push popf (bad) lock leave ljmp hlt dec shl addr16 fstpl cs stc xchg aaa fldt outsb jge out dec pop out xabort push sbb jnp push fistpl and loope add push in xor pop sub test mov pop sarb and xchg imul (bad) mov sub and push cmpsl mov and jmp mov jge daa leave push xor out into fs push pop lret pop push das sbb arpl rclb rorl rcll xchg outsl jae adc mov arpl dec add inc push fisubr dec sbb ret sub mov push lret sbb aad inc inc pop jmp push int3 mov sub mov cld aas decl adc and push inc cs fsts in and cmp (bad) rclb push fs icebp pop mov fcmovb and sub in adc dec cmp inc xor or cwtl nop inc sbb and nop adc add daa inc sbb mov add jae nop lods dec push cltd (bad) jbe xchg inc call out jp test jmp sarb aam mov js das mov rclb pop jge add popa cmp add fcomp or imul fsubs (bad) dec int3 pop repnz lcall das popa pop or das push pop sub pop loopne lret ftst pop test idivb movsl pop pusha jae movsb dec jmp nop lcall mov ja hlt mov sub and idivl clc int3 xchg xlat sbb loop dec popa pusha mov sub mov inc mov ja sub mov push mov fs ret xchg and in jo jae pop leave test lahf les lret (bad) ja shrl push xchg mov lcall jp dec hlt lods insl add mov push mov or cltd in stos insl notl and push add out dec xor icebp mov lahf (bad) hlt test add cmp sahf lods add cmc jge push push dec xchg std jno aaa dec mov aas in enter dec push push lret sti pop (bad) xor vandps stc jl (bad) test sbb fwait lahf mov inc adc fcmove jae repnz xor fcomps mov cld sub loop pushf cmp std cld push enter mov in sbb push mov add repnz xchg or lods mov sar (bad) fmuls orl dec frstor mov and push shrl nop sub sub cmc in fcomps loopne mov insl bound mov scas pop xor sar jns push sbb lds loope xchg outsl push enter add imul and mov fs (bad) movsb out xor call adc (bad) rcrb adc cwtl xor pand fisubrl xor cmp out outsl and into inc cmp shl jmp jg es ret (bad) (bad) mov fisub mov je pop aam mov and or sahf fidiv or mov (bad) shrb adc or hlt pop (bad) or test fisubrl push lock mov lcall loop rclb mov adc sahf jp pop das jecxz pusha xchg out call xor mov dec cs andl pop or jg cmp xchg adc lret mov cltd dec push out mov in rorl out lcall push sub or mov adc add mov (bad) mov sub arpl jb pop mov push frstpm(287 rorl les fadd push jmp cwtl in loop ss ss jge lock sbb mov (bad) push push lods xchg lods jne dec add mov mov adc cmpsb popa cmpsl jo or dec pop icebp cmc enter scas push lods adc sub add out sbb add mulb (bad) mov dec loope sub loop jne xchg gs sarb popa mov jne test movsl pop jno inc les outsb add mov sbb icebp inc or cmpsl jne icebp mov ljmp out sbb daa cmp sub daa test sti xchg mov jnp jecxz cmpsl dec adc sahf sbb mov cwtl push and sbb in and or adc sarl mov fs lods out xchg cmp call les mov fmull xor sub (bad) scas xchg test es mov cmp jecxz inc cmpsl cmp jae adc add cmp cmp rorb mov imul xor test jg insl xchg rcrb dec (bad) movsl push repz xlat in adc or sub das loop fnstenv cmpsb sbb adc cmpsl arpl and xchg adc adc add stos inc scas jb sub out (bad) int3 out rcrb jo (bad) outsb mov ret movsl mov xchg gs and xchg adc add addr16 mov or jnp sysret cltd xchg jno nop cmc mov out fnstsw or mov stc lret mov xchg out add xor insl or xor (bad) sarl mov addl sub sarb dec int3 loop add xor xlat enter loopne or and incl pop movb (bad) daa inc mov and push fidivrl pop dec inc pop outsl cli nopl shlb sahf pop call push cmp data16 out in mov popa scas mov adcb in rclb or add stc in mov fimull dec pop ficomp cwtl mov mov or push dec in jmp loopne jecxz imul notl mov stc ss cmc js pop stc dec dec movd dec mov xor aam pop mov push adc popf roll add cmc movsb out xchg lret popa pop xchg add or push je cli push lea cmp jbe xchg imul pop xor adcl in jno and stos jnp cmp into dec mov ljmp sub arpl cmpsl adc sahf lea push stos imul into stos dec pop mov ret mov jmp outsb mov xor enter sbbb pop and push pop out push mov inc mov fiadd sbb out inc mov int3 mov cmp xor pop movsb enter cmp loopne pop sub jne insb sub jno daa mov or (bad) mov outsl test es pop push mov (bad) mov in dec mov fcomps sub das es dec inc std and adc aad mov xor arpl sbb bound out je scas or das mov add cltd pop and std popa (bad) xor (bad) (bad) jne movl dec movl or jmp mov push dec inc ror lret ss cmp jp les inc sbb or push and jb xchg shl lea xchg (bad) ficompl insl and jp xor leave rolb pop dec sbb sbb lahf dec dec push divl cmpsb imul (bad) jmp sbb in pushf stos nop frstor pop std sbb inc lcall ljmp cmp fldenv xchg cltd in imul mov inc sbb movsl cvtps2pi and scas pop sbb insb mov mov jnp js adc or cmp cmp push sbb mov (bad) dec (bad) rcr rclb xchg add inc jo push data16 leave inc mov sbb sarl xchg adc int adc scas mov xor insb lea das sub xor rcrl add and mov pop pop jmp mov mov in mov roll pop (bad) fisub bnd out popf dec jnp stc mov nop int in stc (bad) jge stos sub outsl mov (bad) fadd jnp add cmp and xchg addr16 push popf (bad) xor push bound push test subl inc and sbb adc aam ss fimull fnop iret repnz sahf in rcrl lock dec das sub mov mov xchg jecxz (bad) add stos repnz push mov pop sahf sarb les add movsl xchg mov mov aad add xlat xchg adc stos xor pop ja and pop add test ret mov xor dec add sub cmp add and sbb or sbb cmp sti add into sub xor cld sub nop and sbb loopne xchg xchg ret push mov out xor cmp mov fimull mov dec (bad) popa push jecxz lea push or cs test sub xchg xchg jne (bad) push mov iret add jmp imulb push fwait jnp xor pop cmp xchg adc mov stos add daa xchg xchg movsl adc cmp lahf push pop pushf pmuludq adc lret inc insb cmp mov push sbb cmc nop jg fidiv mov add xor or cmpl imul cli nop pusha mov mov mov adc jg dec rclb and dec in cmpb or and cmp add and xchg xor outsb cmc idivb mov neg cmp fnsave jg sub xor jp imulb add js rorb rolb pop xor pop mov (bad) push out pop or adc or loop (bad) adc sub jmp cld push icebp mov std imul cmp dec xchg rcrb ja aas neg in jg sub fs sbb jge dec nop inc pop cmp icebp push and rcrl mov call push fadd into daa xor repz faddl or in sub pop in push push es (bad) out ret outsl cltd fist dec popa icebp xor sbb xor and inc int3 pusha aam mov ret jb stos loopne jle add dec out xchg xor data16 sbb popa pop lcall movsl lcall loop xor xorl pop sbb push sahf gs jp ja mov mov daa pop cmp in fwait stos icebp cmp lahf inc int cltd pushw add rolb dec hlt (bad) xor scas sbb jmp cwtl mov sub and imul push mov fsubl nop insb outsb (bad) xor jae mov or repz sub mov pop cli enter fucomi cld repz ror movsb (bad) sbb mov cltd inc fildl pop out add ds xchg (bad) adc mov lret xor ret and sub or iret enter in rorb arpl cmp jae (bad) je inc cmp movsl jne push adc pusha mov leave inc cmc pushaw dec dec jp mov stos (bad) dec push pop inc test fist adc cld jg fist fs daa cwtl dec decl insb mov test cltd iret adc je pusha imul inc jno push or push test cmc xor mov adcl dec pop in icebp sbb xchg leave scas or adc add dec (bad) insl sbbl call cmpsb cmp and lahf sbbl xchg pop or in test (bad) repz (bad) or lcall ret push es inc mov mov pusha jno mov or jns mov arpl pop js mov push aad jbe icebp cld test cld adcl adc jmp add jmp xor lds xor sub fnstsw or or xchg mov leave bound icebp cmpsb xchg and sti imul pop out sbb push test mov and pop pusha xor push add mov or lret clc pop dec mov mov test in inc push outsb movsl mov in jecxz (bad) imul loop and hlt cmp xchg adc jne add ds fs ss stos push push mov aaa ljmp add test dec add pop xor sbb and lret bound sub adc cmp js int push ret push cmp inc jns pop repz pop insl adc mov jae fs pop fbld or cmp inc push jns push and cmp mov out out adc or add repnz pop and aas insb lcall or xchg jp rorb jns and gs adc rol jb fidiv dec orb test push pop push fwait (bad) out dec dec sub xor adc out pop loop sbbl dec lahf cli cmpsb and xchg out insb jns dec adc sub sbb mov jp imul inc cmp jmp (bad) mov sbb pop lret jb push push xor lahf or popa sbbl in push sub (bad) mov push repz sbb sub das lods cmp sub add mov push sub jl and dec mov clc and xchg (bad) xor lret or or movsl cli cmpsb arpl leave sub sbb xchg ret nop addr16 (bad) mov push in pop cltd rclb sub shrl fisttpll jbe push xchg enter loope xchg xor mov xor sbb mov stos cltd popf adcl dec cmp pushf mov and jg out adcl add add sub (bad) or jmp popa inc (bad) mov adc xchg or mov push insl sti fmull (bad) call data16 push sbb lods mov mov subl or cmc mov in sbb rcll mov xchg in xchg pop je pop fsubrl mov movsb fcmovnb inc push fisttpll sbb push inc (bad) jp int lods sbb out imul dec cmpsb push cmc stos sbb adc xchg aam or out (bad) xor movsb inc xor movsb lahf iret leave hlt inc (bad) int3 notl fucom fcmovb jnp test xchg pop pop outsb lcall imul aad mov mov ret xor mov pop jb or xchg xor jl ds out sub lds xchg fimul test jmp addr16 jp jmp sbb inc jb loopne sub shl mull je push cmp and insl cld fcomp pop and jge jmp push das sbb scas mov pop xor into es mov mov insl mov lods adc in sub in (bad) xchg jmp or mov stos mov out mov gs xchg push mov loope sub fsubs push mov and add negb test xor dec pop mov lahf jne scas and mov fmuls inc xchg bound sub mov cmpsl movsl lods inc cmpsb mov pop mov fsubrl in and xchg inc (bad) ja and roll adc mov sbbl stos roll jge sub dec xchg and xor pusha je lea or xor imul (bad) cmp jmp mulb (bad) stc mov and fs dec jg push jae xor repnz out lea gs and push dec xchg aas add cmp daa sub dec rol test push sbb dec dec pop inc iret roll addr16 mov or dec mov nop fldcw enter arpl repz sub test dec fiadd mov adc xchg mov push push mov push lea test shl insl mov sbb sti lea sbb sahf scas out clc daa in outsl dec xchg dec (bad) notb pop clc cmp dec push (bad) repnz movsl sbb push mov mov and add fwait mov daa xchg fcoms in sub inc aas aaa jae mov test mov popf cltd inc push movsb (bad) ss lret sbb aas aaa adc (bad) xchg sub cmp jne mov jo pop push add fidivrl lock dec loop fs aad mov cs iret (bad) lock stos cltd cmpb call fs pop sbb mov mov push push adc dec xchg in push sub or mov out jg std mov cmp ss inc push ss shufps mov push cld and adc repnz sub leave xchg jne push mov push mov xor subl sub test cmp cltd fnstenv mov loop sub xlat mov mov inc adc pop cmp and fdivl push sbb les xor pop inc jae and loop mov or pop outsb xor jae cmp daa xor ret das push pop int and mov fadd test arpl xchg sahf dec jge sub cmc aam cmc sarl adc xchg js cmp fdivl xchg scas in push and jecxz test push nop mov adc push mov imul imul add push xor (bad) mov xorl inc sbb inc (bad) inc inc adc adc bound out in push pop or (bad) cmp add xchg push dec cmp outsl push insl iret clc movb add push das int3 bndldx rorl pop sub xor sub imul push data16 xchg arpl mov lock in inc inc push dec xor insb mov hlt (bad) mov stos mov sahf incb es xor jb mov rorb mov shlb movl cmp jne mov or stos xchg lods sbb fprem outsl or and js aaa fnstsw jne cmp add nop fldt movsl cmp imul xchg pop in mov enter out in push jmp stos jae inc jb rcrl mov add cmp jne xor int cmp xor std xchg dec or pop cmpl add mov jge cli push mov in and mov sbb or (bad) imul in fs and push insl cmp pushl hlt addl inc jmp jne mov cmp sub mov insb fwait mov add and sub push (bad) (bad) adc mov xor jp stc ficompl pop dec call fldt shlb stc popa mov mov hlt cmpsl aam inc fs xchg das enter test lret jbe xor ja rclb fdivrs mov into xor psrad push mov xchg in lahf xor pop cmp cmp adc jecxz push jo push lods or cwtl cmp pop pop divb cmp sub dec jmp (bad) roll cwtl xor mov into in sub inc and sub jle inc push test adc cwtd xlat xchg fdiv nop fmuls xor mov ljmp ret push lret adc (bad) mov inc fs adc sub xchg pop aad out pop xchg (bad) ss (bad) xchg inc es xor cs sbb pushf sarb mov je inc scas fcompl or loopne and pop push rorl dec rorl cld aaa mov stc ret lcall movsb push pushf jge (bad) fs push packssdw movb jmp xor fisttpl in ljmp mov add shr iret push xorl test mov pop push mov rorb mov iret imul call sbb dec xchg push fildl outsl shrb iret ds inc ror stos stc int3 and sub rcl ret test mov dec mov movsl push mov push pop lock fs jb mov xchg xchg xchg cmp mov xchg pop int3 aad or pop mov or cld fldt adc cmpsb lods mov sub (bad) cs outsl (bad) sub or lods or mov pop (bad) sbbl lds lea out andl fiadd mov in xchg mov repz mov lods mov mov xor call push xor out inc int3 pop inc popf pop xor fimul jae jl cltd push insl lcall push test and aam testb je push outsb dec mov or lods mov ja adc push push mov pop adc and rol inc push xchg pop push int outsl cmpsb (bad) dec popa xchg loopne push jbe fs ja mov (bad) popf test xchg fstpl mov cmp push jge dec pusha (bad) fwait cmp mov pop cld mov cli lods sbb es shr adc mov mov fwait mov cmpsb (bad) mov add jmp mov add push fsts jns jecxz push sub je dec inc loop nop mov insl sarl sbb or pop inc add nop sbb mov jge xor loope daa imul xchg sub lds and (bad) js dec pop dec cmp es outsl cmc into repz and xchg sbb ljmp adc ret incb test in in adc cmpsl sbb push (bad) push call cmpsb int3 rol adc lods insb je inc iret fcmove cli jo pop sahf iret clc and mov clc pop mov sarb jle je bound add sbb nop adc jno,pn shlb rclb stos hlt scas mov push lret movsb aas sarb pop mov push pop bound sar out and xor pop icebp dec imul roll jg mov push inc jnp mov (bad) movsb mov fsubp (bad) fwait pop add loopne orb push mov out icebp jne cmp cmp xchg loopne or aad push mov push add sbb js mov mov push jae nop call test test add sbb mov mov jno aad pop push sbb xchg adcl iret mov or jmp imulb iret fmull in xor cs xchg pop push sbb decb jl lods xor mov fcoms jge pop mov mov adc jg push nop push int jmp and sub sub and push xor add and mov cmp repz stos jb mov gs push stos out sarl icebp stos pop sbb gs notl add dec in sbb (bad) call movsl xor rcr orl (bad) loop mov sub xor mov enter insl and sub or rcr xor inc push repnz jmp fidivr out cmp aam insl mov xchg inc pop std jp dec or sti push loop inc dec test stc cmp sahf mov movsl imul les sub sahf push cmp (bad) mov or pop mov cmp xor or repnz hlt adc mov inc test das cli mov lahf push addr16 arpl sahf xchg add stos stos sbb int3 mov jnp fbstp in cli lods mov push jge aam stos loopne repz add dec int adc pop adc fwait sbb sub mov mov dec movsb cmp scas hlt outsl jle dec cmpsl sbb xor fldenv jns inc out dec fmuls mov (bad) cld mov push (bad) jle clc (bad) cmp cmp rcl push xchg loope pop pop imul mov pop mov dec fisubl stc das popf jb les add mov mov insl sub sub mov sbb inc stos outsl or les fcoms mov ret sbb xor cwtl (bad) mov inc lahf fwait mov lret out mov sti pop insl mov cs or cmp int cmc mov cmpsl lods cld push out int3 add jno or push mov mov jb mulb int fadds jnp decb mov inc inc mov pushf mov and adc jae xchg lods daa xchg add enter mov das xchg jle jo cmp (bad) in pop dec popf mov loope cmpsb xor int ficoml add leave lahf sahf popa cmpsl xchg cmpsl out enter jmp arpl push and sub mov enter int pop add rorb aas and movsb lock (bad) mov out push insl test sarb mov cmp pop dec aad sbb pop mov and inc mov insb das xchg mov xchg cmc int3 fdivs pushaw sti inc fsubr jl fcoms push add scas stc ss sbb call cmpsl shl inc dec pop loope (bad) (bad) push cmpsb mov pop sarb dec jp stc mov je pop loope sub inc cmpsb (bad) adc clc rcrl push adc sub fstpl dec cmc int sub push xlat mov imul insl fs or mov mov push pop hlt cmpsb out jae repz outsb push xchg ds imul addr16 enter popa ret sbb test mov ficoml add das scas seta pusha push and cmpsl out in test repz xor das clc idivl popa sub xor jae lret pop xor cs sbb push and cmp mov and ljmp sbb idivl inc push push sub inc mov mov lock cmc mov in xchg lods repz daa cmpl mov in in push mov adc jl nop and popa sbb mov dec repnz mov pop add cld test and (bad) inc aad sbb xor dec dec (bad) rcll mov push push xchg push test push outsl push add shrl push subb cmc mov inc push loop aaa add push inc jae push jns stos inc push fdivs loope adc push fdivl ja xor sbb (bad) in dec imul icebp pop mov arpl (bad) xchg ljmp xchg ss shl lahf ds bound cli (bad) lcall ja adc das and mov pushw test movsb divl int cltd cmp adc cltd cld dec push xchg std in roll imul jo fldl2e dec mov pop sbb aad dec stos xchg pop pop ja inc push lahf push rep js xor lret sub mov sub add sbb cltd ret xchg lods mov ret lds cmp jl ja stc aaa into sbb jns lret jb and jecxz jno stos push out mov jbe dec stos jno push push xchg pop mov dec mov xor repnz mov or sub cwtl mov cmp push pop xor jp push daa cmpsl pushf dec pop xchg mov mov push pusha call jbe push sub clc push lods out sub sbb dec stc cmpsb mov push sub js fadds fistl leave aaa mov rcrb mov xchg aaa dec clc inc aas es mov adc mov mov add (bad) jp inc jge cltd cmp sbb add jg testb loope fsts enter mov mov xchg shll call nop and jg xor mov test shl mov cmp ds cmp sub or adc (bad) pop sbb aas add xor repz test out pop rcll cltd mov pushf push fidiv ja lret mov sub mov adc lcall pop clc int jl jmp rorb jae test add mov repnz (bad) ds cli ret dec fstpl push jp cltd push and popf mov pmaxsw outsb pop pop int3 repz inc xchg adcl hlt inc jne dec movb fwait pusha xchg jne push mov cli pusha xchg std std repz je gs xchg or loope sub inc sbb aam cld mov lahf xor xor push pusha or les lret jecxz xchg xchg lret adc push pop pusha cli push add mov pusha loopne push sub add iret hlt ret in cltd push pusha scas (bad) lock jb dec push lds scas pop popf cmc add scas lock and mov push xor cmp ljmp jb xor sub int sub mov es mov sbb jecxz xlat xor pop xor jle (bad) sbb mov jmp (bad) adc or and cmp or jns int3 call push int3 and mov mov mov into lds mov enter rclb dec in cmpsb in sub cmp or fnstenv mov cli leave fild dec pop sti stos out xchg in sub ffree lds add ret pop (bad) jb rorb push jne xlat sbb lock mov or mov xchg cmp out mov pop movsl inc lds jo pop sahf pop push fsubl add adc and je pop gs je test jecxz stc jo or jmp mov cltd cmpsb mov pop lods or clc mov iret and cld scas movsl ljmp mov div enter bound cmp dec frstor push popf sbb dec inc mov and and add inc mov in ja inc ss inc and movsb cwtl xchg mov movsb shrl mov add mov adc dec pop arpl inc dec push dec xor or in call jbe dec dec dec and call push stos pop jmp cli jno out adc std call sbb jg fdivrl jno lds fdivl jge add sti xor insl inc jno sub or fs adc ret sub sub inc cltd dec cmpsl fidivr fstpt jne jl out mov lods inc cmp and add fsub jbe or pop mov xchg inc xchg enter out in dec aam push arpl (bad) sub fs mov arpl stos fs mov es pslld fstps jecxz dec or jnp fcoml out jns sti (bad) fwait or add mov imul adc add out inc lds lods mov lock jbe inc push ljmp fadds fsubrl jbe dec cmpl lods pop cltd jmp adc mov outsl sti loope sub (bad) stos js add push mov pop shlb and xchg mov mov ficom sub jg ds fimul and push inc ret inc jl xlat loopne test dec mov pop aad push inc add (bad) dec imul addb and push test inc jl xor and or cli jg lret sti pop mov test mov addr16 ss mov popf xchg sub push jl cmpsl adc adc pop xor adc dec lret xor or xor cltd pop outsl roll loopne or jb jl hlt mov xor push jno push out lock rclb pop (bad) stos nop cmp sub mov lock fcmovbe jmp mov (bad) cmc mov das jns fistl movsl jbe test stc push push call insl in mov pop incb xchg lret jno dec out push sbb pop cltd loop shll push xchg push or paddsw dec fcomip daa xchg cs inc xchg jecxz and inc dec (bad) cmc (bad) out mov inc hlt add mov mov (bad) lcall cmp dec mov pop pop dec xchg push adc xchg dec add mov inc adc cld xchg inc mov push mov mov lret mov cwtl xor push sahf in cmp xlat sahf lea push sbb sbbl cmp imul mov cli nop stos inc lret add xchg pop leave icebp inc outsb (bad) or push nop fidiv mov xchg mov push in rcl xor lods xor ds xlat xlat push sub pop (bad) mov jmp xor (bad) mov push dec bound sbb lods cmc cmpsb inc leave idiv push dec pop pushf movsl cld jecxz push fs das push mov inc clc shll mov pop andb cwtl lock lcall dec mov adc xchg inc int3 ljmp movsl lock loop xor (bad) push fnstcw jnp cmc lods movl addr16 jecxz outsl or mov add data16 jbe adc mov out jp (bad) enter inc in xchg imul mov cmp mov xchg fldt ds ffreep out cld nop mov mov push test (bad) fnstenv aad xchg push mov push js cmc xchg in ss mov test outsl dec push inc das cli lods xor pop lahf mov cwtl pop lret add xor push clc shrb (bad) cwtl mov loope and ljmp test mov xor mov and cltd lret out push cs ret mov pop xor jmp mov inc pop imul add inc aas dec xor ret or je mov das mov lea xor sbb (bad) add shr xorb movsl in insb push jge push jle stos mov sar in loopne test cmp push (bad) mov fwait ss ret mov sbb repnz cmovg push sub dec dec pop push and push ror cmp sub out in neg cmp (bad) pop mov xchg fwait sbb cwtl iret jne (bad) (bad) jno ds cmc cmp addr16 das push lock int3 add ds clc je lea notl stos xor (bad) sub sbb int3 insb mov sbb fwait imul (bad) inc sub repz add call and xor dec cmc jp mov jmp xor int3 push lret adc cmp cmp fidivl sub ret dec idivb clc jo ja mov and add into or or outsb mov jge ret cmp pusha cwtl xor ret imul add mov push push xlat data16 popa mov cmp xchg fs add gs jmp push leave jg jno rolb in jecxz jmp incl cmp jecxz rcll (bad) rcr inc xchg dec outsl xchg popa std mov std dec lds cmp xor pop jge pusha ss and out mov ljmp jl,pn insb xchg dec and outsl int3 mov das in xor or (bad) mov insb dec cmp cmpsb add icebp shrb mov add sub mov sub mov mov add ljmp or add loopne or subl insb in adcl stos cmp les sarb inc lcall xor cmpsl aam ret lea rorb sbb push adc cmc loope lea pop dec clc add imul pop jno loop,pn push popf movsl mov xchg mov mov lods fimul add mov lock in add push aaa push daa xor sub ss lods lods mov and jmp jl push push gs jl and sub mov fst jp mov xor dec sbb addr16 dec arpl fsts inc sahf inc shl je xor mov add fsts jl les sbb pop daa mov repz jb sahf jp scas into jmp add rorl jge sub push dec and sti int3 sti pop sub add fisttpll add push inc pop (bad) dec hlt jbe push mov dec cltd mov mov leave lahf xchg cmp lock push push vpshaw (bad) mov insb ret popf mov jbe mov pop repz jmp outsw dec push jl addr16 sahf push cli bound das repnz cs mov ret inc js pop (bad) dec (bad) popf xor (bad) xor outsb lods dec rcll pushf fstpl push popl js xchg (bad) frstor negl jbe inc sbb int3 sbb pop lods inc test inc enter cmp sbb lret push push mov cld int3 push mov stc rcr outsl sbb xor sbb adc pop test sbb rorb dec jne movq xchg sti xor cmp xchg (bad) arpl jae or cmpsb jns sahf mov popl mov out loopne jno (bad) mov adc ss (bad) mov bound mov inc jge add cmp xor push sbb clc (bad) mov push lods mov jp popa and outsl push lods inc loope pop lds mov pusha jl js lcall mov popf jnp xchg mov mov xchg sahf mov repnz xlat test xchg cs pop test popa sbb (bad) (bad) cmp mov pop jo pop inc push pop xor mov pop imul aad push lods mov rcrl lahf test xchg mov inc add pop (bad) sub mov mov (bad) gs push adc jbe pop scas push adc test pop jmp dec jle sub cmp (bad) xchg rcl vorps lret gs pop aas dec test enter fmull xchg test push (bad) ret lret or cwtl lret jne pop testl mov pop in push adc cmc rorb push (bad) sbb mov enter pop mov rolb jge mov mov lea push nop bound cmp push ss repnz mov adc cmc rolb lahf lock adc loope decb mov loopne je popa pop jge jno xchg mov (bad) pop lea (bad) rolb cmp mov sbb lahf jecxz and push es mov push test nop mov divb stos sti addr16 daa lock fs arpl jbe cmp iret sbb in inc lds pushf jns xchg xor pop data16 arpl addl addr16 lods xor add (bad) mov loopne cmpl inc xchg stc enter dec das xchg int3 data16 repz push push jecxz jl in add sbb fnstsw int sub mov lahf adc das addr16 ljmp or mov gs cmp scas lahf jg scas mov psrlw orb jb push (bad) xor fmull or lret fs xchg and lock pop test dec jp pop movsb and xor (bad) lock adc enter inc movsb (bad) bound xchg lods and fimull cmpsb scas add ret les outsl cmp rorb das cmpsb sbb sbb scas scas loopne pop inc mov or pop sahf mov into push mov test xchg popa mov xchg xchg lret dec roll push popa xor xchg ror mov movsl movsl aas push cmp mov daa mov or mov loope gs call inc insb das addr16 aam jecxz jmp loope cmp lods xchg sub hlt loop pop sbb pop dec push mov push das sbb rol ja push fbld aam ficoml pop cmpsb shr and sbb push loope aam adc fcomps xchg adc cmp lret push (bad) pop sub out out mov in data16 (bad) je ja adc into push js xlat fwait js icebp js aaa fwait test roll stc mov sub mov sbb outsl popa notb inc pop cmp adc outsb mov mov dec sbb rolb sbb jne stos jne xor pushf and mov popa add jno push adc adc add adc mov xchg fs xor xor jns ret push ret adc (bad) cmp sub aam sahf in mov push jecxz sub jecxz xor rclb negb push jo lea lods sub (bad) fnstenv cmp sti stos adc (bad) xchg cli out test lret inc icebp and arpl jne adc pop into mov sahf cmp dec fcmovbe or add xorb xchg insb repnz (bad) sbb movsb mov mov (bad) outsl and mov cli push lret push xchg and lds jae rcr dec sub ds adc sti adc dec in mov fidiv ficomp cmp pop mov popa aas test into std xchg (bad) lock repz xchg adc mov inc stos mov pop iret inc xchg je rcll xor dec frstor or jmp mov daa insl pusha jmp xchg xchg jmp lock sub ret (bad) mov jnp lcall pop fldt adc out sub xor bound je std repnz cmc repnz icebp shlb mov test rcrb or jns and xorl lahf imul pop adc mov push sub inc ljmp push dec hlt cmc add xchg fstpl lcall repnz enter lods mov push les or and mulb into xlat popa test nop scas repnz jnp pop ja mov lods cld rorb testl pop pop pushf out mov sub jecxz sub rcrb (bad) scas (bad) in push stos fcompl aaa lds nop iret shll adc mov ja pop jmp sbb pop cmp std roll adc int sbb fs xor inc mov in inc push xor add cmp jne (bad) or mov dec data16 aas in mov fild mov jo adc mov fsub out adc inc adc mov mov cmp test mov cli sbb shr out fcmove icebp testl and lods push out add aad sub (bad) lret ja insb movb sub cmp fcoml mov mov out pop and roll add test insb mov (bad) jb repz jb sbb cltd and cmp and inc mov lods int3 mov (bad) jne int3 pop into lea pop imul jmp ret fxtract mov stc xchg outsl and xchg out out pop xchg pop mov inc adc es or stc insl js sub push mov or mov jp loop lds cmpsl mov jns inc lds aas adc sub adc sbb cli cmpsl and mov aam cli push imul jne xchg sbb add fs out movsb push call cmpsl jmp mov gs mov shlb cmp icebp xor dec sbb xor jle push repz pop add int dec andb xchg out jle mov inc cmp ja ret push cmpb pop sbb and hlt jne lods dec inc mov in xor sbb jns les or adc addr16 xchg mov scas sbbl mov out mov sbb sahf call inc in int3 mov (bad) dec mov notb mov out adc mov jmp hlt (bad) insb insb or pop pop jecxz cmp cmp outsl or mov popf ret xlat mov xchg inc inc inc adc and adc xchg mov pop adc popf ljmp dec jnp pop les movsl xchg push inc (bad) popf xlat mov xchg mov je,pn hlt int3 jecxz jb out pusha lock xor fisubrl (bad) push adc sub mov fcoml push out pop adc cmc mov leave lahf loope xchg in mov aas push sbb and push mov cmp test xor repnz cmpsb iret or xlat push in lea push inc addb sbb (bad) mov xchg add nop cwtl sub fwait pushw push adc pop je (bad) (bad) adc flds movsl ljmp cli sub or and xchg rolb jecxz (bad) adc loop mov out mov std and add sbb out add dec icebp add pop push clc ds popa jb adc adc jg jmp in je pusha decl jle int shlb or jns into xchg xchg jge out mov pop push aam fmulp push ror les and sbb iret cmp daa inc pop xorb xchg mov pop les lret das enter jno sbb inc add in adc dec outsb rorl sub imul mov cmpl rolb mov ss push and je sar fs sub enter (bad) push stos out lods out sub int mov cltd iret pop inc push sti push mov cltd pusha mov lahf cwtl lahf aas movsb clc push xchg fisttpl dec adc ss jmp dec dec pop jae jno inc js scas std add xlat jg dec je sub xchg cltd cmpsb xor jno cmp in adc xor sbb cld xlat or inc mov das loope enter mov xor or xor jg movq icebp (bad) in fldl mov clc push push in ja cli fnop push mov (bad) mov push push mulb shrb fcomps shl adc lock outsb cs jg repnz pusha loop out xor insb dec mov call lret mov je push jnp cmp aam xchg cmp movb xchg std adc mov outsl pop fidiv adc (bad) inc push outsb addr16 mov out sbb repnz popf add and inc enter les dec notb fcomps mov scas imul cmpsl scas add mov out push mov or leave mov pop sub rcl lret inc inc or jo dec in addr16 push fwait jge or inc xor mov (bad) sahf lcall mov sbbb pop xchg std out add add lret fstl sahf pop cmpl mov mov lods xchg xchg push mov push rcrl pop mov push push insl jl fidivrl inc arpl jmp ds pop pushf mov push inc and ficoml mov cmc pop mov lods xchg js mov pop scas sahf (bad) out add adc sbb cmp sbb cmp fstpl or mov lea xchg cld mov mov dec xchg fld aaa in or push mov cmpsl test mov xchg cmpl cs movsb out test cmpsl and imul inc add fisub dec mov sbbl or sbb lds push out push cmp popa into es add push cld xchg in fucomp (bad) cli mov mov daa mov adc scas in cmc movsl mov jg aaa push adc (bad) (bad) and add gs jb sub (bad) sub lds cmpsb add (bad) daa fildl jns hlt stos fucom imul fs add sub or push sbb mov test (bad) or mov insb inc push dec out push ljmp dec push add pushf insl scas nop cli mov xchg je daa arpl mov sbb mov pop (bad) sahf fnstsw xor daa je aam sub stos je and in fdivp add pop scas je jae fstpt aas xchg mov cmp into lods call and loope loope push mov inc cld ficompl add pop add inc pop pop cmp arpl mov call mov enter mov push imul sub outsb mov ja and pop dec lea addl cmp push outsl mov lock in ljmp cmp sbb out or (bad) repnz (bad) fwait dec and (bad) rcrl lcall call shll out fnstsw out pop push mov clc aaa xor fnstsw jns imul outsb hlt les clc icebp daa fstpl xchg loope inc push imul sub or and pop mov mov ror test mov js enter repz stos push jb loop adc mov sbb sub mov pop xchg jno ret rclb dec dec push imul inc lahf hlt les roll mov mov pop jmp cmp pop or sbb lods and jne jmp adc jg dec ja pop popa aaa addr16 or lea fdivs cltd add (bad) jg inc fisubr dec or pop sub fcompl aam addl mov fstps fsubl jnp idivl dec or pusha rorb mov fcomip fcompl mov jae add aad inc std jo pop pop into sub fcmovnb mov icebp notl xor push (bad) psraw mov js cmpsb lret add arpl dec push fcomip std enter mov rorb lret dec lock mov push add pop adc (bad) icebp jp scas leave (bad) pop leave lret inc sbb jmp mov pop pop xchg mov sbb sbb loop xor adc dec adc lods test and sub mov xchg clc jae or add insb dec mov dec repz dec adc push test mov or or aad ja mov mov lds lcall jge,pn ds dec jg inc mov add loop aas cmp icebp cli xor jnp pop fisub xchg mov add mov (bad) dec scas jnp cmovno inc enter shll sbb outsb ds add cmpsl dec push loope frstor testl leave mov dec les out push test mov xor mov sarl adc inc cmp sbb or insb inc xchg jo shl aas mov or mov roll cmp cmp loopne (bad) jo cmp mov push jmp lret fdivr mov dec imul sub pop hlt in sub xchg out jo divl sub mov jp add stos mov dec enter fucomi pop movsl xor ds data16 xchg or push adc mov pop mov fidivrl mov cmpsl leave mov sub imul dec rorl test stos bound clc aam lret xchg and add aas imul sub into jo sahf sub sbb add mov cli push mov orl test and sbb or xor lret jno pop mov loopne,pt shrb push add ret je int3 ret mov sbb and movsb adc fsubrs dec out dec sbb cmc xor sub xor pop cmp outsl xor dec enter cld mov stos and inc xchg es jo lcall inc mov adc in outsl (bad) out pop mov (bad) xchg gs push push ljmp nop icebp pop fild xor stc sbb adcl setge inc inc mov pop cltd in mov push fsubr push (bad) pop jae add ds lods (bad) out dec icebp (bad) lods sbb adc lcall and adc mov xchg mov cmp mov adc lret xchg xchg cmc adc (bad) imul out adc pusha mov xchg push aam outsb xlat cmp (bad) xor nop add sbb lahf push xchg xor xor xor jle push iret lcall lock jl or or pusha push je sbb xchg push outsl xor pop xchg push dec xor fistl data16 or xchg sarl sub push xchg loop xlat fucomip (bad) arpl hlt iret add xchg jecxz ficompl cmp pusha rcr sub into sbb pusha out add int3 mov scas outsb push jecxz xchg out sub rclb and cmc aad lahf jno test and call dec sbb inc and inc imul mov rcll jne fwait rcrl mov push cli leave lea lods cmp cmp cld mov jl loope mov or into arpl mov xor xor lcall add mov add push pop mov sahf je subl loope add mov jecxz cmp pop vpsrad pop mov sti mov cltd dec lcall sahf mov out jnp sub jne rol (bad) jl ds test imul imul jle jne enter inc mull sub rorl xor sahf stc push stos enter xchg jb sbb and inc enter das adcl or ret adc and xor cli cmpsb and and aaa add pop int3 sbb cs mov push roll pop adc test jne (bad) push cltd insl out xchg sti ret into lcall dec movsb (bad) scas notl je add lods mov fs (bad) (bad) jle push dec fimull adc out daa popf outsl call pop dec aam imul in jb mov push outsb andb mov dec test mov mov imul push imul xchg lds out fbstp jo push mov stos int dec jmp js outsl lods aas pop cld cmc mov adc add movsl je jmp push pop fldl cmp rcrb hlt mov cmp or adc jge mov mov mov les cmp push sti xchg fsts and out dec sahf jno pop (bad) paddsb aad or addb add adc mov ror xor xchg add in ret xchg es imul fnsave (bad) sbb arpl xor mov mov ljmp dec aam jbe pop nop test xchg notl add lods mov stos ds push movsl jl outsb xor aam sub (bad) imul enter fs adc rcl push xchg cld in add sbb mov in and loopne int3 adc imul out jb push xchg cmpsl cmp add aam movsb clc xchg lahf inc sbb mov scas arpl push cmc mov sub and pop sti test pusha xchg ja or daa mov inc sbb mov xchg jl (bad) cmp or test mov lret mov inc loopne mov and hlt cmp push add sbb inc mov je popa jmp (bad) jns sub push and ret or xor leave test jg inc lahf icebp jg dec (bad) push int3 lret nop or aam sub std aam rclb mov out inc add pop push faddl (bad) scas adc aaa outsb mov repnz leave inc lods inc (bad) pop xchg movsl in dec inc out adc into imul daa repz sbb mov add xchg or mov (bad) stc mov popa push sub mov sbb fwait sti das jns call jae ror cld xchg adc movsl stc add push push cld jne pop test ss dec and arpl mov arpl sub xchg sbb and dec fldl lods or or xor dec mov hlt push mov push mov fnstsw cmp mov mul cmp xor loopne incb cltd xor and cs jno fsubrl loope je cld sbb les divb jno loop (bad) and gs adc ljmp mov jae (bad) dec gs and and push jmp xchg cmp adc xlat jecxz jbe push out in imul ljmp lods jp ret cli sub loope mov inc (bad) mov push jae stc and cmovg dec dec addr16 mov xchg addr16 fwait repnz mov cmp cmp mov stos or mov cmp jp pop xchg mov (bad) ja jb push mov lcall mov (bad) sub add sub cmp sub insb cmpsb and ret adc call test jg arpl sahf imul js jnp add jecxz jbe mov andb in pop inc dec cmpsl test add ss lret dec mov push add push cld push adc push shrl mov inc sbb loop cmp adc aad add inc mov push jo test shll dec popf mov pop jge mov dec nop push jo push stc add or rcl pop mov push ljmp test fs mov js,pt cli mov aad arpl mov cltd out movsb rcrl add fistpl push sub xor push cmp inc (bad) lcall gs jae xchg mov loope dec pop (bad) mov mov sbb xor fsubrl or inc iret ror fucom loop mov iret xlat test pusha dec rcrb mov fnstcw mov inc test add pop cmp daa leave arpl mov mov test shrb lods dec push stc mov push push inc adc cwtl sub sbb test lar imul incl and push orl stos jge pop push (bad) ljmp fucomip lret push int cmp jecxz inc (bad) push mov push (bad) pop scas hlt xchg jecxz and sbb adc mov pop dec push push cmp stos cmpsl mov add fadds and sbb fwait ds pop data16 das jg shlb xor pop nop or loop in fstpt push sub xor push sub daa dec mov shlb inc insl mov sbb clc data16 jbe (bad) movsb inc fnop mov adc jg xchg xor xchg push loope inc pop pop movsl repz mov sub daa insl iret xchg push and xor arpl inc push sarl outsl das int3 pop pop jno push fcmovb mov or repz jge imulb rclb (bad) and jl (bad) pop xor in push stos xor mov pop cltd mov jecxz (bad) pop bound mov push push cmp pop stos fidivr pop sbb push mov xlat mov stos jns xchg dec repz lret cs or jnp jp sub cmpsb cmp notl mov sbbl cmp imul jp mov sbb pop test and (bad) imull or lahf xchg add mov nop nop adc (bad) adc pusha adc push ret roll jmp xchg pop cmp in (bad) cmc faddl (bad) dec inc jge xchg inc sbb leave in loop dec lcall adc add out mov sbb or std in stos je into sbb cmp sub jg sti loope mov mov push dec cmp lods dec xorl adc xor stos repz mov pusha pop pop sarl orl fs pop push dec pusha inc inc test icebp rorb or iret mov inc jp (bad) loopne lcall hlt test lcall ret adc out jg inc vpcmpestrm pop jae fcomp and insl fs lock or aad out xchg xor jge pop adc add dec mov sbb mov (bad) int or fmull test loope cmpb mov enter jp add lea xor jecxz enter and roll push jbe fsub pop or lret inc mov dec jne mov add movsl fbstp pop jmp in stos scas in jbe jge jmp hlt pop jo scas cmpsl jns xchg jge jbe inc mov jecxz pop pop bound lcall or (bad) loop gs inc push js pminsw mov or mov stos andnps sbb clc mov mov movsb aas dec enter scas jo lret (bad) test mov or test pop inc mov insb pop (bad) pop (bad) scas lods loopne or ds movl mov sar sbb push sbb inc inc adc ret sbb lea ss jno add bound flds insb xchg sub dec dec jl outsb loop push (bad) xchg cwtl sbb rcr scas or cmp pop push scas xor sub xchg and imul fwait scas xchg insl out sub jno,pn inc nop adc int js daa jo cld sub jne,pt call fwait push gs lcallw cmp in fcom adc sbb test inc pop sbb ret jb mov ret lahf cmpsb data16 sbb or stos or push aaa mov fnsave (bad) mov xor mov cmp xor pop xchg lcall xchg arpl (bad) aaa lds inc loope cmp inc js mov lahf sbb adc ret jnp xor cmpsb dec arpl jne mov jg mov pop xchg es rcr or push stos xchg mov add lock mov xor (bad) in jne loop cwtl pop and loop xchg subl inc push dec xor push sbbb cltd mov dec jge mov dec pop adc sub repnz push mov jp rclb mov popf cmp movsb fninit xchg xchg ja add lock inc (bad) stc jmp test add ss dec fwait ret andl mov mov addb lret js (bad) mov arpl sbb fiaddl mov jb mov mov enter mov cmc pushf jnp sub in or test out das or fs out div pop sarl in inc out jae addl rclb xor jbe popl call push jecxz mov ret xor xorps mov dec loopne pop faddl xchg dec jae rol and cwtl jnp push ret cmpl jp addb mov movsl in mov ret jb call outsl cmp lock dec jmp out lcall push imul sub inc push sbb cmp (bad) mov mov dec adc cltd aad (bad) ja imul mov inc mov pop stc loopne pop lock clc mov push mov mov clc mov jg push pop lds or imul (bad) stos int3 inc jno fs add cmp rcrl xor lcall sub sarl xchg repz stc inc iret jne cmpsb mov xchg scas insb jo fdivs call xor aas dec dec test add sbb int3 mov dec test movsb mov xchg clc ja mov ret inc xor dec ja sahf arpl (bad) pushf jno imul pushf cld ret inc pop push imul mov mov xchg mov adc mov div jbe inc mov cmp cmpsb (bad) fsubs xchg sub in adc int3 lods or scas jecxz outsb fildll pushf xchg lahf (bad) cmp inc and dec in and sub pop rcll popf stc mov xor pushf adc repnz sub pop cmp xchg jmp fisttp (bad) mov aaa fimull (bad) dec adc cmp mov lahf xor mov mov aas xor scas inc pusha (bad) not testl fdivs (bad) icebp sbb pop gs jmp out cmp sub jno xlat fsts xchg in sbb xor add lods out push outsb pop daa (bad) nop fs inc subl xor xchg add jl test icebp inc icebp repz js mov rcrl rorb mov out push div jecxz or popf inc enter xchg push adc or add stos mov or scas mov stc mov mov xor test das ljmp cmp jne pushf mov stos or ret imul pop data16 push mov mov mov fadds jns mov adc cli (bad) (bad) scas lahf inc or popa xor mov (bad) inc cmp jo inc fs sbb repz arpl push cltd jmp enter dec xchg push scas enter push mov xor scas testb xchg out fs mov xlat jo (bad) cli arpl jb iret fiadd mov mov push pop out sub lret (bad) mov xchg jnp outsb jle addr16 mov test packsswb ficom outsl arpl mov pop shll lcall mov mov std lods outsb and outsl push leave push fimull rol fsubl mov dec imul push daa movl or sub ret sbb pop clc sbb mov pmuludq popl aas arpl xchg xor jnp push lods aam push push repz jo lods popf and (bad) jl movsb adc (bad) jne and pusha adc mov mov jnp sti mov test push pop aad mov xchg jo fstps jbe and add pop mov shlb popf sub xor repz dec mov push xor xchg icebp xlat sub test cmp stos imul out imul mov push mov cmp (bad) leave cltd in jbe adc orl push in add hlt and sar inc sbb addr16 ljmp cmpsb sbb dec mov stos push mov mov mov and (bad) jo fcmovnbe icebp and test loop jns (bad) (bad) pop sbb add je mov cmpsb mov or adc add lock fistp add (bad) adc lods addl (bad) divl in jnp lahf inc int addr16 jns ja lret rcr movsl push mov popf sti popf or (bad) lods jge dec (bad) mov lods push cmp push push or aam push fistpl ljmp mov cmp mov call pop in xchg xchg es pushf xrelease cmp xchg (bad) lods pop sbb stos and xchg pop loop outsb inc sarl or daa (bad) jbe mov sbb movsl lds push into jae pop mov mov xor rol pusha push ja pop sar mov cwtl mov test movsl mov cmp mov sahf mov xchg push call or inc clc pop xor mov arpl jecxz push sbb js fwait mov and dec xor fscale shrb sub sarb sub push mull stos pop shr lahf inc xor stc push sahf xor lods ss imulb test add aas mov cmp jge push jg dec popf cmp push jo icebp scas icebp (bad) shrd add inc clc mov jnp ja in bound sub push pop xor and jge sbb lds mov add adc into popa rol int (bad) popf jnp inc push rcrb fmul sbb scas sbb xor int3 aas mov insb xchg mov repnz stos aam fwait mov cmp sbb cmp or enter cmpl mov (bad) add data16 sub push testb sbb sbb sbb test mov inc lahf or sbb hlt jo,pt jae pop mov cmp sbb adc add in fdivs push adc lcall aaa cmp subl int3 int shrl mov jp dec pop jle push xor lret lock sub popa jp test pop rcrl imul addr16 mov cmc xor lock dec jecxz pop (bad) and cmpsb jl sbb jae insl jp cs cmp cld repz sbb lahf mov shrl clc lods push cmpsl stc jg fdivrs push mov jno sbbb jb cwtl pusha leave and mov pop stos jno add push scas fiadd cmp idivl xor add add sahf adc arpl sub ja cwtl jo xlat ffreep and dec jno fwait jns xor or or xchg outsb xor adc (bad) ficom pop cmp jo push dec dec cltd push add fs jmp divb inc sbb sub sbb repnz cmp dec mov into cli ss (bad) icebp aam cwtl es push jg fldcw or xchg iret loop icebp or mov mov xor outsb loopne pop cmp xchg data16 jo out fs or ss adc arpl mov xchg das xchg dec mov xlat nop cmp lods insl rorb pop test ret or mov mov pop pop pop je dec ret adc mov lds xorl or xchg sbb dec jle icebp pop adc cwtl sub adc add jns inc aaa lret mov xchg pusha sti jl adc popf stc jmp or inc ret (bad) addr16 (bad) jecxz inc dec mov repnz inc and arpl aaa xchg push rorl jmp dec rorb cmp adc add fidivrl dec xchg setl mov dec dec push xor jge push out fcom push int xchg jo lods cmpsl cmpsb (bad) fucomp lahf add push test dec jmp pop xchg int fsubp lahf lret test shrl sub or xor (bad) sahf or fcmovnu cmp or lcall stos sbb xchg scas test jge jne sbb push (bad) mov xor scas scas xchg sbb cmp lods arpl push xor and xor xor jle mov test cmp popf cmc movsb pushf test repz and add (bad) pop mov out and jo sahf or push adc sub and enter arpl pop leave mov out fwait es jl sub jmp testl stos lods jne lods or shrb mov leave push add inc mov negl sub cmp lret iret mov sbb cwtl cs repz bound fs mov mov ret int aaa pop jo setne ret pop js jg mov xor mov mov lret dec push xor jge je xor push loop adc es add mov sbb into pop ror sarb sahf adc cli jne ficomp lods (bad) jle ret icebp push inc jecxz mov lret sbb inc jae lods cmp mov stc push push xchg pop pop js stos int3 jo sub xlat jo pushf out add sub push (bad) rorb es adc (bad) or loope or out dec mov clc jl loope mov ret repz cmpsl out mul mov or add push cmpsl cmpsb aaa cs cmp je imul mov pop daa push cmp jo imul jg push push stos pop ds pushf lods mov arpl stos out addr16 jmp add gs inc aas das sbb xchg push ljmp in mov enter mov sub jmp mov jmp imul jne shrl sbb bound loopne lret jae loop fbld push push clc jge and inc push pop pushf mov mov add pop sbb into lret shll stc and cmpl xchg xchg pop sbb add mov lret (bad) nop lahf or repz imul ss ret lods insb out cmc fsub sbb jns (bad) popf jecxz lods das cmp xor jmp lea fwait (bad) cmc dec mov pop push dec les lahf inc sbb dec fild in xor call rcl push aas outsl xor jo pusha cmpsb lcall jbe sub (bad) and testb inc xchg mov add inc in test sbb pop scas notl xor pushl fcmovnb test push addl sub mov adc out cltd ljmp push xchg xor pop add jg jnp jge std dec enter sub rorb dec cmp or fldl int roll or gs push pop (bad) jmp in lea movsb or jmp test xchg xor and push inc clc adc sbb add cmp cmc (bad) mov pop mov in xorps lds sar push pop cmpl mov out into vpaddw jo sub cmpsb jbe cmp (bad) push (bad) inc jb mov movsb movsb fcoms pop and cmp bound xor (bad) aam lahf mov setno repnz cmp and addl mov sbb cmp jbe push sbb pop stos repnz add icebp sub or and (bad) out into cmp shrl cmp mov mov scas lahf xor enter inc stos mov fwait sti lahf xchg xchg inc mov outsb mov lods and cltd push dec ss push ja neg push xchg out loopne jo push cmp pop scas out mov mov stos aad pop xchg jg jle test jmp lret dec xlat xchg jbe push stos xchg daa mov imul test mov xor inc mov out ret (bad) xor sub out insb push or xchg cwtl mov addr16 adc push cs movlps jl popa xor mov and fstps hlt sbb adcw sar sbb cmp sub es cmp pop cmpsb fcomps push scas out out cmpsl jg mov out add shrb mov jmp fildll data16 sub in loope je ret loopne sbb pop adc add int3 (bad) aaa popf and imul push test xchg lret in (bad) sbb sub int3 cmpsl pop incb test sbb jnp mov cltd loope pop clc sub iret aad jecxz ja std sub ds mov das mov imull js xor jns or fisttp xorb imul mov sbb sub mov and push mov or adc or mov xor sbb rorl jp push sbb popf int imul push loop or or add mov push cmpsb pop scas scas jl movsl or (bad) out and pop xchg js xchg jno adc dec add jne test adc cmp (bad) lock cmc push dec push add mov jg out xor mov add (bad) lret insb xor aaa or mov dec pop fcoms add xlat or (bad) add mov int3 push lock lock subl movsb dec mov adcl mov inc stos addr16 jb mov clc repnz or sbb ret jb inc insb gs test fcoml loope sub (bad) jns imul push repz jne cmpsl pop fisub ds adc bound inc out dec in jecxz add pushf in push rclb dec adc int3 xchg in (bad) scas je std cmc std pop adc aad or cs testl stos ds xlat ds loop sahf sahf sbb sub mov jns xchg (bad) cmc mov insl sub lods psrld dec inc push aas cmp mov aad mov cmpsl call jge lock xor jae fsubrs inc jmp cmp mov fsubrs cmp movsl lds push repnz fimull jmp add ljmp (bad) pop fdivl mov cmp lret or sahf cwtl repz push cmp push (bad) stos push popf cmp cmp mov pop lea dec lock pusha xchg dec mov push fwait pop xor add push fmull cmp movsl adc jmp outsl cmc mov movsl xchg inc shrl xchg fucompp cmpsb testl popa lods and shll pop insl xchg push and inc push jnp and daa xor out sub data16 sbb out sbb dec jmp pop fstpt fs je loope inc mov mov movsl jg mov das push xlat push rclb cmp pop aam pop push mov xor sub cmpsl add lcall xlat std or jmp stos jne push mov roll sbb dec lcall jge dec mov dec enter jmp bnd cmp into dec jb jge sub xor lods push fnstsw push dec add sti in xor test flds test imul and cmp sbb sbb sbb ss pop push and iret mov ljmp dec cwtl mov lret mov and sbb xor add inc ret dec and in je push push or xchg xchg sahf push cmpl ficomp out test dec shrl jmp push (bad) xor icebp lret adc sub mov sbb inc jbe ljmp adc ficoml dec repz xchg ljmp push sub xor add push mov out add mov dec ljmp cmp divb dec cwtl jl jmp popl int ret mov sbb shll rclb add sbb rcl hlt sub test mov mov xchg inc (bad) jnp fldl divb sbb dec mov lods add sub sbb xor mov cwtl mov scas cli cmpsl lcall xor aaa jle scas xchg inc add adc lahf es imul scas push xchg sbb add and mov gs decl out (bad) jmp repz ljmp in inc xchg mov xor xchg push pop ret adc mov adcl gs rcrb sbb (bad) sbb adcl fsubr (bad) mov inc jbe icebp mov dec aaa ljmp jle sbb or mov xchg idivb adc pop jecxz sti lea xchg addb pusha insl imul mov cmc loop add int3 ss fimull lock pop add or fdivs xor das shl inc in jnp mov sub iret pop pop mov adc cmp mov or (bad) lods push adc mov xor mov jge mov enter dec lock icebp push push push mov (bad) aad pop dec addr16 push nop inc dec sti ljmp jo xor loop and and pop add mov sbb inc xchg jne mov aaa imul inc xchg add lods imul sub lods and add jnp (bad) xor or inc inc aaa adc adc inc jo fisubrl test pop adc in ds pop inc ljmp cmp out cs mov push rorb mov popf sbbl aaa xor aad stos pop xlat int ds xchg cli inc sub movsl jae xchg jo lret sbb adc (bad) fnstcw xchg and movsb xchg xchg ret inc mov lret cli inc jg jbe push loopne out iret fimull outsl out fwait add int push into push dec mov cmpsl pop fcmovnbe decl std mov mov adc lods mov lcall loop push mov xor ja jne jecxz jp push and mov jb dec lahf jno mov ljmp add pop sub (bad) cmpsl xchg (bad) call sub nop mov mov imul in inc aas mov pop mov out adc pop inc arpl add sbb sarl stos pop imul test xor inc mov xchg pusha xchg and out xor aas dec cs jl nop in nop cmp rcrl mov pop cmp sbb pop mov xor (bad) aad mov mov std repz fisubl jg ljmp xchg adcl gs addr16 aad cmp pop lcall ret pop icebp dec jno inc jnp add jmp jns fiaddl jae addl add jp ret push stos mov jge mov je xor fucomp xchg test mov insl aaa xchg pop aaa stos inc addr16 decb cmpsl int3 lret imul sbb xor cmp enter gs inc inc out cld out popf insb cltd jmp clc xchg cmpl lods leave mov sub and jg add cmp mov mov mov (bad) pop lods add push loope (bad) (bad) popa mov dec nop cmp adc mov cld sbb ss pop imul addr16 movl sbb in in push dec xor add pop movsl ljmp mov and (bad) es mov repnz or push lock adc mov imul push (bad) stos and call pusha gs push cmp mov loop cld data16 les jge sub mov mov mov aas adc pop inc repz sub xchg or cmp adc xchg push mov cmp insb pop sub popa aam jecxz cmp cmp jne lds int movsl int3 mov mov dec (bad) cltd mov inc dec sub test popf out and push jne xchg mov inc sti out xchg cmpl loopne mov pop rorl movsl jmp fs or jne rorb push mov ss in mov or push cmpsl push xor sbb (bad) into clc jb sub push pop rorb lahf jmp xchg mov ja cmpsb inc data16 xor loope xchg call adc lds xchg test insl mov out and js adcl mov pop mov dec decl dec loop inc call sub das pop mov mov adc cltd orl sbb inc or sbb js cmc cmp pcmpgtw jle sbb xor jg stos push int3 inc (bad) movsl dec pop sahf pop jns or bnd stos pushf add push cmova mov dec xchg sub popa fstps (bad) push xchg sub std leave jns push xor in and sarb loopne and xor dec lret test and mov or popf rcl add sbb push and jb cmp lret sub hlt repnz pushf call fwait mov (bad) jo fisttpll cmpsb aas insl jae and fcomi in scas inc nop sahf clc and xor add push cmp mov shlb repz and mov mov mov out pop pop pop (bad) xchg xchg or fidivl (bad) xchg xchg (bad) mov (bad) mov rcll jecxz xchg popf push inc insl pushf pop pop mov ficomp or inc sbb inc sbb rol push xchg sbb sub jg outsb mov bound sub xchg push mov movsb xchg fs cmp in sub mov jnp sbb sbbl (bad) dec xchg or out inc out pop fnstenv sub imul sti mov packuswb (bad) movsl call aas mov mov pop add (bad) sub xchg pop inc inc pop mov or inc push and jecxz mov stos scas adc sbb dec sub xchg ret (bad) xor (bad) jmp mov imul cs xor (bad) cli popa mov scas add sub sub dec in xor dec mov mov mov fstpt (bad) dec je cld mov adc mov imul cmpsb repnz call sarl stos push popa add cmc inc (bad) or mov or adc mov fnstsw dec aaa je mov pop pop xchg test xchg inc shll push adc pop xchg inc movswl pop cli dec inc mov mov je fisubl cmp in mov (bad) sti pop imul neg lret sbb push repz push in ds mov jp imulb shrl shl mov mov (bad) fbld in sbb fnsave ret outsl xchg fwait insl lods outsl iret les mov pusha xchg loopne pop sub push fucomip pushf push movsl inc rcr xchg ret add fidivl imul in pop sbb scas adc mov inc adcl sub dec pop sbb cmpsb dec xor pop hlt jp pop in aaa adcb mov jbe out pop xor jg punpckhwd ds mov cmp push jb stc dec mov les jbe sub or out imul in jecxz loopne sub lds xchg popa test xchg ficompl or mov adc push xrelease aad (bad) push xchg fsts jecxz jl pushf cltd mov loopne stc inc arpl daa lcall add mov add and fsubrl out push std add cmp sbb jno push hlt fldenv pop aaa out xchg mov cmpsl sbb cwtl lret in insl xchg adc outsl pusha ud1 dec jge cli aad mov out movsl fnstenv ja out in (bad) mov cmc adcl cmp movsb pop dec fstpt (bad) (bad) xchg sub inc nop inc stos clc mov add cmp dec sub push lea fstl dec xchg int push fs movsl xor cmp pop jge sub insl mov inc dec rclb adc push sahf pusha mov mov adc clc shll mov cltd xor in xchg movsb lea (bad) (bad) lret mov daa xchg icebp dec mov in cmp scas (bad) jae rcll arpl (bad) and push loopne jmp (bad) scas in mov adc cmc popf or (bad) out arpl sbb adc call push push in sbb push mov shlb jecxz jle dec clc icebp adc fcmovnu mov mov add nop xor mov hlt sbb cmp fdivrs popa test and outsl aam int and or stos mov lds hlt cmp test mov fwait pop lods xor mov repnz lock icebp jmp loop frndint fs push jl sbb xlat xor add shlb movsl rcr les adc int3 mov mov xchg sarl pop stos (bad) test ss loop sub add sti lock sti (bad) movsl xchg imul or cli int (bad) sub sbb push arpl incl dec pop pusha aaa lock rclb xor (bad) addr16 call and cs push cmovge (bad) rol xchg push aam adc dec jg mov push and mov mov or testb insb fisttp cmp arpl dec adc adc into lds movsb jle in inc popf mov mov lods aad jo enter mov jmp in cmp or xchg mov jmp and sbb add cmpsb and xor mov xor dec js lahf fwait cmc arpl jecxz roll les xlat cmp mov gs cmpsl jge push imul (bad) inc (bad) jecxz cs xor andl lock lret leave xchg sub xor xchg lods arpl fsub cmp push cmp xchg or cs lret scas sti jae push mov cmp xor mov jae mov pop pushf push mov shlb insl test xor rcll or cmp jb fcmove mov inc aas popf insb mov js or or (bad) rcrl pop daa shrl and cwtl and shl movb jne pop gs in stos pop pusha pushf out jg add inc or sbb icebp xlat idivl mov imul sub mov (bad) cld jae or sahf lret and push xor (bad) push lret repz pop int and outsb or jno outsb sub dec xchg inc push add test lods lret cmpsl inc or cmp dec (bad) dec push mov mov dec stos push sbb sbb push pusha dec (bad) mov xchg and inc mov xor xchg lret jb xchg mov and mov fsts sbb ss ret (bad) repnz lea rcll test mov inc aas sbb mov cmp stos jno fcomip cmpsb sbb cmp ret repnz outsb inc pop lahf movl or mov lods ret xor (bad) aam mov inc or cmp stos ja,pt dec push xor inc outsl shl cli fwait icebp out idivl les movzbl inc xchg dec test mov adc jne push movsb jne push in mov sarb sub pusha fwait mov inc xchg frstor push sbb cmc rcll push xchg xor jecxz hlt sti sbb pop mov add int3 adc dec jb lods xlat jno jnp ret or in sbb mov out xchg loop or mov mov jne pushf insl inc mov mov jno jmp div push outsl xchg mov call mov fisubrl fsubl pusha scas incb call mov mov inc mov insl pop loopne fidivl in ret cltd mov push push adcl or dec xchg xchg xor mov jae cli fistp cltd pushf xor xor or out add int adc clc mov add leave jnp mov aas jnp xor (bad) call xchg imulb hlt mov jle adc mov sub xchg pop (bad) cmc pushf das out jo mov pop daa int jg add ret fiaddl pop add xchg jmp ret jp push mov add ljmp push inc hlt (bad) push imul mov mov jle xor push push xchg dec out stc mov leave or ret push jmp jbe inc lock cmc frstor pcmpgtw movsb loope jmp je push push fildl (bad) int3 add outsb inc sub fsts mov cld (bad) jmp (bad) lock or test push sbb mov mov sbb or ret mov popf dec and fistp mov xor cmpsl inc fucomp pushf adc mov cmc shr in push mov push push js jbe jg mov int popa cmpsl enter imul adc adc cs stos in push mov test xlat ja add insl js loop fisttpl or loopne vpmadcswd dec (bad) mov mov sub cmpsl (bad) push or pop mov popa xor mov and int mov mov pushf push iret pop hlt push push inc sub pop xlat mov push mov cli add mov dec popl adc lds xor dec cld addr16 scas adc pop aam mov outsl dec je adc sbb adc cs mov inc xchg pop pop xchg fldl (bad) xchg roll or adc pop dec sbb pop jb or pop popa leave rcrl jecxz jp std add mov xlat cmpl int aas addr16 mov sahf mov xor rcrb and in cmpsl fs (bad) mov inc sarb and mov dec jnp mov out lret dec aas jnp add scas ja jno mov pushw xchg or or cmpsb lcall mov dec sahf ficoml push mov popa xchg xchg mov test xor int3 movb adc aas sbb cmp mov cli or sub xchg pop cmc inc lret ret jecxz sub rcrb movsb je adc loope cld (bad) sbb ror mov xchg sbb mov test es mov adc pusha mov and stc out jl imul jle pop jne pop push js ss jnp mov add adc add mov dec repz out lahf pop xchg mov dec push rcrl or cmp cld xlat fsubrs pop mulb cmp sar insb jbe aaa adc and mov jbe nop pop (bad) sti mov pop xlat bound or scas call mov pop dec jmp test jne push aad pushf add fisubr pop push add aad xchg shr sub cld and mov mov not rorl lcall insb fwait jl (bad) fnstcw iret or sti xchg imul and out mov push mov jmp adc adc and (bad) cwtl icebp es sti xchg les addr16 mov data16 sbb jmp sbb fs int jae (bad) bound mov pop jl (bad) push cmp xchg lahf jo or sti sbb out pop bound es movsl add mov push xchg or adc (bad) repz fidiv push clc jl cmp add int3 jno or sbb rcll shl push xchg inc mov pusha mov pushf test inc add (bad) sbb andl push clc leave std jge push sbb (bad) dec into mov fcompl mov cld jmp jmp cltd fs nop mov nop adc stc test or sahf sti mov mov in mov rcl xchg aas inc mov shll mov (bad) lret mov inc or pushf dec lret fs call mov pop xchg nop mov jbe (bad) xchg adc inc lret repz gs incl pop add and stc in jo,pt (bad) xchg dec fistl pusha dec inc xchg cs (bad) adc cmc out mov adc mov int jnp (bad) std fimull mov sbb cli push stos add jae push mov imul fistp mov sub decb inc sbb scas ret xchg dec repnz or sub and mov into cmp sahf ja movsb mov pop aam (bad) je (bad) add cmpsl or mov mov mov jle addr16 addr16 mov stc (bad) jl movsl mov dec das (bad) stc dec neg xchg fist nop das fwait add das and cmp xor jmp in sub sbb call decb test sub inc and or test pop dec pop pop mov xchg imul call cmpsb inc mov inc jbe jmp std xchg ds test xor lea xor out xchg shld xor out xlat rorl dec inc lea out jle and push xor sub cmp arpl sbb add and and or xor xchg cmp mov adc inc jecxz fnsave insb push xor int3 das aas cwtl push and daa jmp shrl mov jmp rcrb rcr push cmp rcrb xchg lcall mov lods xchg into mov inc (bad) enter jne pop aam ret aad mov jmp push xor mov cld lret mov dec mov jae dec shrl mov cmp xchg and mov adc inc (bad) xchg sti clc push sbb cmc cmp mov push jecxz pop loopne (bad) imul cmp in mov mov adc adc jae dec mov mov sbb and inc inc xchg rclb cli pop int3 ss sub cs fisubr pop jp mov rolb jecxz dec stos popf mov fs pushf mov xor cmp mov add mov or xchg mov and mov movsb (bad) pop dec mov fwait lret lret pop hlt popf inc inc idiv xchg cli adc pop dec xor xchg or mov pop jg pop lret mov aad test out adc inc cmpsb cmp xchg incb adc inc push mov test test adc cmp and mov add (bad) sub inc data16 shr mov in clc xchg nop push fcompl jnp lret lea adc cli (bad) or repnz push lds int3 mov adc mov jb sbb jmp stos sub das rcll aaa jge in and pop push jnp push test sbb les aad cli jl push sbb mov data16 jb call sbb cltd outsb cmp ficom loop pop roll jp out mov ja add out or ds neg jecxz push clc int or push pop xchg adc out (bad) lock add jns cmpsb cmpsb add dec out stc ret mov neg div int3 add testb js (bad) insb (bad) lock out mov adc adc int adc incb lods xor addr16 or inc or je out push pop push jb out mov pop lods xor pop stc pop mov (bad) mov lods loope (bad) je cli fistpl push aas adc or ret sbb arpl in test test or ffreep mov enter nop in push mov inc cmp outsl int3 mov les xor (bad) sub jmp popf pushf add outsb xchg outsb imul call daa lcall jecxz stos xor aad push sbb lods inc xchg mov into fcmovbe or testl mov xor mov fistp mov or cmp orb aam cmc dec ret xor dec adc negl cmp sbb imul dec jle and rdpmc fnop mov clc sub sub dec outsl mov or sbbb mov cmpsw mov popa push inc or sub jl dec jle add and mov jecxz rolb adc pop push mov mov cmp xchg rcl int shrb fiaddl dec into pop call adcl xchg dec leave push inc xlat adc mov aaa ret or mov rclb cmp xchg adc sbb aas mov mov xchg loopne jns fs test mov mov xlat int cmp jno mov les call ret or test cmc push out jb movsl pusha jns push mov out pop (bad) aaa push divb mov repz dec ds xchg ret sub daa push jecxz xchg cltd ds xchg pushf (bad) pop sub ss jb cmp int call scas movsl dec ret icebp xchg xchg jmp inc testb and lahf hlt aas jp pop bound xor jb push aam cmc sub sbb sbb jns sti xorb mov addr16 call xor and adc mov test adc outsl fsubr lret mov dec adc popf test inc mov clc add stos push mov mov or mov jge in push addr16 outsb pop jge adc jae xchg (bad) (bad) sahf bswap sub pop clc push fiaddl aas or fsts mov inc cld push addr16 in push fcmovb call xor inc mov cli xor popa mov jb (bad) cmpsb mov scas or sbb mov lea or in xchg adc xchg or dec repnz sbb loopne orl das sub aam in out xchg mov xchg pop int mov pop xchg dec pop pop std push sbb push sbb aaa jb dec cmp sahf sbb aam or pop js (bad) adc lods iret sbb imull int3 adc add sahf arpl add mov or gs insb hlt (bad) or push into adc lret xchg inc xor ds and and push ret inc adc outsl nop pop (bad) push clc cltd pop movsb jne xor sbb loop jle sub sbb popa jmp add or out add lret fnstcw xchg pushf sub rol lods mov mov jns mov gs adc dec adc or insl jnp clc stc pushf stos inc gs mov scas (bad) xlat inc fstsw bound and cld xchg mov iret jb cmpsb xchg jno shll adc mov and push jecxz insb fldenv (bad) das (bad) add arpl adc mov inc sub cs hlt lods movsl cmpsl dec and push push xor lea rcrb loop int3 push xchg pop lret aad lret jecxz out out nop jp pop lods pop mov jnp jbe push sti shl fstl (bad) cmp cmp dec sub xor mov cmp cmpsl nop add mov das out jae pop inc jae jno daa sarl push jl lret out xor int lds add (bad) or mov movl lret nop mov imul mov hlt lahf sub aad (bad) lret sahf or in lds and cli cmp daa lahf clc daa cmp lea and push inc ss adc add inc adc fwait mov and xorb clc xchg in fsubrl rcr mov pop jp iret pop push pop (bad) rcrl mov sti dec pop or insl cmp mov dec scas lock jno neg xchg pop out adc stc mov cmp inc add (bad) jnp cltd mov mov jle mov mov xorl fidiv push in sahf out scas cld fs mov mov notb cmp jmp std inc js and cwtl sub (bad) cs or popf ror push scas dec or clc inc lods repnz out into adc sbb leave mov ljmp std sbb xchg add ficompl movsl movsl lea sbbb arpl xlat aas cmc int3 sub cmpsb ds xor test push test mov pop aam push ljmp cmc cmpsl (bad) (bad) rolb fs mov dec pusha jnp adc fiadd push sarl imul loopne pop inc cltd cmp push dec jle add jae aam mov push aad lods iret js xor sbb mov xor jno mov dec xchg xlat push cli sub or pop div xchg sti dec outsl hlt jnp and int3 add xor sub or or push push adc jmp mov outsl sub cmpsb (bad) cld iret andb test adc mov test addr16 repz mov xor push icebp and and push les arpl add pop fiaddl xchg mov test dec clc cmp push dec inc jl (bad) jmp test mov push sub inc pop inc mov sub scas icebp push (bad) fsubrl jbe (bad) mov js hlt (bad) daa mov in dec nop scas in stos (bad) fistp sbb pop pop mov ljmp push loopne in in sub popf test inc fcompl pushf push pop aam scas (bad) mov mov push das in inc pop adcl (bad) aad (bad) mov fnstsw addr16 fnop ljmp loope jns lcall xor (bad) fisub adc insl xchg sub into xchg ret in (bad) xlat add pop test xchg push cld aam jnp xlat mov push mov pop test pop xor or lcall arpl add outsl sbb mov data16 icebp mov ss pop pop fwait jmp and pop mov in mov daa sub jmp and jo loopne in dec popf repz xor jp sbbl mov hlt inc pop aad mov mov lods movsl rorl sub or stos add outsb fbstp test inc and lahf rol push fs xorl push andl pop cmp jno cmc fldt or idivb mov setbe lds std adc sub xchg cmpsb pop mov cmp lock mov in adc adc jae push imulb inc xchg cmc pop roll in adc fldenv jae or lea rdpmc fwait pop mov leave lock and lret test mov pop gs pop xchg dec mov mov dec ds pop pop popf inc jmp popa int dec mov jb adc cmp cmp movsl push mov aas xor add into jmp mov pop (bad) adc or mov push ja pop mov out fsubs les aam and mov jns cltd inc arpl les cs (bad) adc das outsb les mov jecxz xor cld mov mov mov out and sub dec xchg mov pop lods lock xchg dec pop bound outsb and imul sarb in or dec cmc cld les in cmp aad andnps sbb push aas and adc adc aaa adc enter inc or xchg xor data16 push das mov imul sarl push mov jo xchg fist pop xchg cmp jns mov jge icebp inc jbe dec incb movsl sub scas xor jle push ja test push xchg jmp or inc xor jp (bad) jecxz adc popa jbe movsb mov out xchg sub inc or push xor mov cmpsl and inc je (bad) fnop mov fldt scas mov ficoml xchg push fcmovnu ds sbb arpl into xor aas test ret (bad) lock pop xor xchg push test clc out pop push in sahf cmp mov int sbb test adc inc push pop mov xlat ror adc (bad) ja insb js add push mov jecxz fsubrl jl xchg xchg mov jno jmp pop scas arpl hlt ficomp mov sub push repz push in xchg and and inc mov out lods movsl add out loope data16 aam lret sbb dec sbb cmp and in rolb daa cmp cmp negb out xchg sbb jo je in and loop repz cmc loopne lods push jne imul inc stc sbb loopne iret pusha pusha inc push cs sbb in call stc jmp rorl mov sub adc ret inc sub les out mov call jns add pop xchg jle inc neg icebp jle repnz xchg loope sbb movsl loope cmp dec inc data16 addr16 pop sub cwtl xchg leave pop femms cmpsb stos cmpsb mov inc jecxz cli mov popf inc pop jno les adc (bad) dec xchg adc sub xchg mov fcomp insb in add xchg leave cmpsb stos dec xor lock cmp add and pop push push sarl dec stos dec fdivrl jo sti mov jmp xchg fmul shr into ds jb adc push cmc pop xlat sub inc out xor (bad) aaa popf fstpl sbb xor mov xor add mov ret jbe outsb lods sbb xor and (bad) mov addl pop push mov fild push pop ret xchg push add inc loopne (bad) push ljmp aad leave arpl mov dec inc and sub fs mov add in cltd aas sahf pop cmp repz repnz test insb cltd scas scas xor (bad) push add or sarb pop ja hlt pop loopne push divb jmp rcrb sub aaa push sub push mov aas jne push negb shl sbb data16 repnz into xor rorl jno lock rclb and adc mov rcl (bad) xor mov repz cmp sub sahf xchg pop (bad) aad sub mov ss pop repz or xor push or push (bad) mov je xchg mov aad fstps adc add and stos lcall push dec push aaa pop push cmp and mov leave xchg sbb sarl hlt push xchg xor pop int3 xchg jb xorl mov add js sbb popa sti fs sub jae lcall sub out negb std sahf and cmpsl in (bad) sub ljmp push jg ss add mov jo mov sbb cs in sub add pop ret pop sub lock cmc push (bad) in jns (bad) std add mov xchg (bad) jae push test push push (bad) leave out lods gs add sub jmp jecxz xor adc leave pop ret sbb add in sbb sahf aad sbb xchg fmuls arpl clc bnd pop push daa mov push jae push rcrb or pushf sub add jg push (bad) cmp scas (bad) mov or aas or or dec dec inc outsl jnp push pop inc outsb xchg jle xchg scas sti test gs push dec (bad) pop decb sti in rorl mov push mov xchg rcrb fnop dec xlat xor jp pop mov mov out lds mov add sbb aam add movl pop jecxz inc frstor inc jecxz pop xor pop push cwtl cmp syscall adc outsb mov aad fiaddl mov fwait addr16 hlt lods add outsl mov ljmp in sub push xor push movsb xchg lods pop push dec imul flds mov jnp outsl mov jecxz and push mov ja es xchg dec mov inc xor out cld inc xor imul (bad) les lods sbb xchg and sbb dec cltd aaa addr16 scas jmp or pushf daa dec mov sbb inc icebp (bad) test popf inc sub lahf sbb xorl cmp adc (bad) mov pop lds rorb cmp iret mov pop stc fisubrl jmp add jl mov divl mov sub dec lea aam cmpsl mov arpl adc jno dec dec push sub mov push pop cwtl and cmp lret sbb or cmp sub jmp imul idiv lds xchg imul cmpsb pop pop out loope sub fs jl mov hlt jno xor ret aad inc dec adc mov mov jge cmp jo mov mov outsl mov fnop push xor xchg mov xlat (bad) js test in repz int3 push xor inc xor sbb jb dec lods adc push and cmp (bad) fsqrt xchg (bad) insb sub lods and jl xchg div out sahf ret inc jne lret (bad) in pop dec jecxz in add scas testl pop xor push xchg push mov xchg mov loop add in or cmp imul sub push and (bad) mov scas es inc sbb dec dec xlat xchg in mov pop into insl push mov lcall loop push adc in push pop xchg or sbb sbb (bad) divl sub mov in mov jp iret popf fisttp call bound cmpl loopne jg cs mov and mov sbb mov ror mov pop dec jne cs ret sbb fldcw and or cltd sub mov and sub test mov enter adc mov xchg sbb clc ja xor out cmp lret test jge mov lea push and arpl lods sbb adc xchg jmp fiadd aas mov test lret sub fisubl test stos mov pop loopne jo aad xor mov les insb repnz (bad) mov aad jg cltd pop inc add cmp jbe jno rolb scas sub adc mov mov mov (bad) push (bad) mov pushw mov sahf out mov push lds pop sub push jge lret mov or sti call jl xor scas (bad) pop push adc lea out or subb pop lcall movsb xchg loopne addr16 clc je mov addb mov scas dec loope repnz movsb push cli xor cld jae daa test ljmp movsl loopne pop fcmovbe andb cmpsb pop in cmp pushf addr16 fwait mov repnz pop stc (bad) adc sub ret hlt insb cwtl sbb (bad) int xor xor daa mov lret jne cmpsl fsubs sarb in fsubl cltd lcall jno xor add jl bound movsb (bad) idivl cmp add les mov shrl and mov fwait pop xchg pop sbb loope in out sub cwtl pop mov addr16 jl sbbl dec adc sahf cmp pop xchg xchg mov jo inc xor inc dec xor adc leave in or jg cmp cltd dec jbe xor loope les sbb mov cmp jge outsl xor inc lcall xor (bad) outsl std mov bound fisttpll fnstcw adc ja dec cmpsb (bad) sbb loop fwait lods mov jle mov push mov or (bad) jmp gs scas dec mov xor mov inc call pop lea in test sbb pop loop sbb push imul and movsb es in (bad) fwait mov inc loopne cwtl lock in into insl out push sub adc cli ljmp imul cmpsl jg or mov cwtl mov and fmulp dec call es pop cs rcl sub popa adc in mov mov lcall mov jnp mov les daa movsl out ds jae pop (bad) (bad) xor mov pop aam ljmp add mov sbbb es push jmp cmp mov xlat mov jbe push call into mov push scas push enter clc fisubr iret cmp jae lret push or or aam (bad) lcall decb or inc sarb into in pop in cmpl mov and loop daa mov lret add daa xlat rorl in xor inc in push jne mov test push (bad) negl loope nop sahf pop sti xor into xchg fisttpll enter cltd or fisttpll sbb in push jb je pop cmp loope (bad) cmp cwtl xor pop ljmp dec jno pushf add sbb into int inc stc xchg test mov pushl or sub shrb int3 pushf dec ja sbb ret dec adc jmp fisttpl cwtl insb inc sub addb adc xor xchg mov test inc sub decl loop scas pop jecxz pop lret mov xchg ljmp into imul mov xchg fisubl mov loopne xchg cmp xchg mov dec mov pop mov jae pop rclw xorl fucomip lock dec mov xor outsl mov sub fsubrs push call insl leave push call jne (bad) fisub push or mov sub pop jns (bad) xor mov mov (bad) fldl cmp notl loopne (bad) ljmp xchg push (bad) stc pusha dec cmp cs in xchg mov (bad) mov push add sub sbb leave (bad) jl add into cmp adc push ss mov in outsb test test inc insb or enter mov ss mov lret add test leave cltd (bad) enter icebp inc cwtl inc xor xor mov inc dec aam nop lods hlt cmc jns xchg dec pop jae jmp lahf push jns mov das test mov daa fiaddl popf add sahf pop xchg lods lock mov mov push int adc or xchg jl (bad) mov fucomip mov push jbe test bnd mov add imul clc sbb and cmc pop mov icebp and xchg test xchg test inc sbb xor in cld orb push xlat repz outsl pop or and pop lods or inc fsubl push out ss pop jmp pop pop sbb cmp les cld jno mov and push and jmp test pop jae ret in in bound pop mov sahf test xchg mov cmp roll pushf mov push lcall adc jno sahf out xor pop (bad) es add push push fs pop mov shrb xchg out dec xor fmul fwait dec popa cmp lods stos cmpsb nop les add shrb jl dec bound mov adc mov pop or xor cmp cmpsb xchg cmpsb xchg rcrl jg inc inc lahf sub repnz clc inc hlt dec and or xchg popa cli inc jmp xor dec push test mov pop add add mov mov sbb cld es inc cmp xlat mov std cmp inc fsubr (bad) loopne sub pop mov stos jnp roll push sti fdivp jno movsl and pop mov bound sub sti pusha jge mov into cld lret lcall jg js mov hlt in add in data16 loopne xor cmp aaa mov xchg lds add stc push pop (bad) sub ss aas push sub mov stos pusha stc cmpsb into jl mov mov inc test push dec std hlt push popf test adc adcl inc arpl mov mov int3 imulb cs mov popa sbb xor push (bad) jb popf pop aaa nopl sahf dec dec sbb mov ljmp stos movsb ja xchg xchg jbe es jns or xor xor push out push mov adc mov (bad) dec inc imul mov adcl in xchg or outsb pop cmp inc dec (bad) shrl mov or clc loop lock imul pop sahf adc adc movsb adc sub pop shll ror pop adc fdivrl gs scas (bad) mov push cmp out mov mov sbb das jns (bad) cmp into outsl xor (bad) and movsb andps xlat lods mov mov stos add or sub sub xchg iret popa ret lret les mov stos push inc daa fs das xchg loop jno lods or push shl scas cmp imul stc (bad) xchg jb cmp movsl xchg adcb inc cld mov scas arpl bound in add out xchg jl cmc pop jb pop inc pop push loopne mov (bad) pop or dec push dec adc pop and mov xchg inc jb stos cmp or movsb test rolb dec andl mov (bad) lods lea das adc fadd fistp mov push mov repnz adc pop rol sub cltd movsl add add xor mov xchg xor rcrb shrl xchg dec rclb pop fstl mov enter fsubr jle sub ret xor add stc and mov sti (bad) out mov sbb mov jecxz lods rolb xor arpl (bad) jg imul (bad) ret lock imul mov jb daa ret adc lahf pusha popa inc jg dec cwtl cwtl add fdivs idiv repnz push push adc or cmp je,pn or enter mov imul test xor pushw lods test lret inc inc mov leave mov insb xorpd inc push sub and or sub (bad) dec xchg out fisubr jge scas jb bound xchg push adc stos stos stc test lods pop pop xor adc inc push dec inc (bad) bnd add (bad) rolb gs jne rcrl aad out mov pop add inc imul stos inc mov loope mov daa movsb xor imul mov xchg and nop and fsubr add push dec aaa bnd imul vorps lret jns fs dec test (bad) data16 lods sbb sbb fsubs cmp add lret rorl jb repnz adc mov dec clc wbinvd das lods push mov not out repnz add cli std jmp pushf repnz add push sbb jns popl push pop cmpsl pop insw add (bad) xchg pop push mov dec movsl pop sti incb inc mov shrb pop vcvtdq2pd cltd outsb inc repnz sbb cli out rcrl in mov mov in xchg adc btl adc fsubrs (bad) add popa stc cmpsb xlat mov dec dec pop lahf andl inc cmp sub in mov fsts movsb mov xchg dec mov rclb pop iret jecxz push dec popf out pop popa xor test or mov adcl jg mov jl inc mov mov jno cmpl xor push inc xor dec mov xor pop jae pop and jge push pusha jbe (bad) sub (bad) cmp adc jb push fimull in and fs mov es ja mov stos push daa and stos fstpt mov mov fs xor xchg push pop (bad) mov mov fdivrl mov ja cld add pop ret mov inc ljmp adc pop or les insl jbe (bad) les (bad) mov add test mov and mul mov ds mov out mov lock sti adc fsubr ss popa lods outsl sbb sbb sub jae popf jne inc and fild aam cli xor cli sub nop clc push roll fdivs push adc imul (bad) jg mov cltd mov mov bound arpl fistl sahf fmull jp xor mov (bad) loope gs cld adc fistpll (bad) mov push imull das xchg push mov jae out je xor repz cmp pushf scas dec jnp (bad) arpl lods dec and adc mov jno or jmp (bad) jg jecxz popf test imul pop scas das stos iret pop lock xor dec stos ret stos push nop push icebp mov daa xor repz sub mov (bad) les mov lcall mov dec mov fs push adc adc jns sbb push lret out je fadds (bad) jge push (bad) cltd and rclb mov push mov loope andl je sub (bad) cwtl pop or in push out push and int3 or (bad) aas test arpl mov sub outsb pop push xchg xor fstpl (bad) push add sub ja into jl sub mov push in pop orb push loopne out rclb sub jno icebp andl test xlat orl cwtl sbb dec insl nop push shrl dec xchg xor mov and or arpl (bad) push in addl daa jp repz jbe cmp imul mov mov sbb mov data16 popa jbe or jno mov (bad) xchg sti leave pushf mov inc loope sbb adc add in outsb inc inc (bad) aas xchg fcmovbe add aad repz les add ljmp jo jp mov cmp cld push ret or int dec data16 lcall jecxz cmpsl dec push test xchg push movsl jl rorl jb mov enter fs mov mov les adc xchg mov ret flds in xchg gs loop sub call jae int mov repz xchg test inc or jno mov sbb push adc push mov pusha cmp fldt push lahf fwait je bound xor xchg mov jo repz lcall (bad) dec mov aad call fimull mov fadds scas (bad) xchg jb sub xchg push mov pop xchg mov clc sub int3 jb loopne (bad) mov push je xchg test pop cmpsl (bad) mov mov sarb popf push stc cwtl or lods mov add icebp adcl mov call cmp cmp sbb push mov fiaddl clc jl lret push in pop mov inc sti lea sbb insb pop add (bad) jo aas lds mov or fdivs add sub xor mov imul sti cmp jbe mov inc adc sbb adc dec xchg xchg (bad) ljmp addr16 stos lods jne or dec pop test mov std out xchg and std adc cli mov pop inc push xchg lret pusha repz xor add stos cs shr or jne pop lahf inc leave inc (bad) cltd inc inc cmp sbb or cmpl push push xchg push and rclb mov or add aaa mov push insb outsb sarb in lods pop cmp adc popa sbb inc mov popa xchg sub mov test add and daa xchg sbb lret imul test ljmp paddsw das mov fisub adc lret fs mov repnz inc sbb mov or push mov adc cmp mov icebp movsl jb (bad) adc bound movsl adc add popf sti and adc into mov cmp lock pop mov movsl (bad) sbb fisttp and cmp fmul lods jg xlat js jmp add xchg inc jmp sub lock jbe jle xlat mov lret outsb (bad) lods jno pop adcb scas push ret (bad) sahf (bad) lock insb mov (bad) divl dec cs xchg fcomps fs mov les inc mov ret pop jne les pop pop or into std aam and sbb (bad) stc push int mov sbb inc aas ret push mov add pop inc jns xchg mov dec mov push xor (bad) mov in mov adc adc pop daa pop or je or insb cmp gs bound ret test adc xchg jne stos xchg xchg in push fs mov inc aad scas cld jecxz mov fnsave jle and movsl sbb loope mov out push sbb inc scas and (bad) and imul (bad) xchg sbb mov xor stc inc iret (bad) mov iret jle bound sub ds xchg cwtl lods test loopne into sahf pop jo shll push imul mov add imul fildll mov (bad) cmp inc repnz (bad) test lahf and mov (bad) dec leave mov int in inc jo mov dec pushf sbb dec addr16 (bad) pop add ficompl inc fildll and cld lods outsb xchg add adc repnz shr mov jmp adc loop popa jle mov inc adc adc xor out and iret mov mov fldt sti imul lea loop inc dec pop loope js movsb jo lods pop sbb les xor pop aaa sti lods fisttpll push in lcall or jae stc in add cs jne and imul pop adc cs fdivrl xor repz push mov xor push xchg pop xchg insb push sbb bound pop dec push repnz sbb ret mov mov push test arpl mov dec mov mov cmpsl jp (bad) int imul jp pusha ljmp xor out fldenv es (bad) repz mov or out xorl inc orl fmull inc das fistpll push add cmp lahf pushf xchg mov mov popf inc cmp cmp jl mov adc lret stos xor or test xchg ljmp jl test adc arpl repnz stc into and cmp or pop mov lock jbe (bad) sub jge nop repnz stos and ss rol fisubl dec shlb arpl mov dec pop pop sub lret out stos sbb jne adc push ljmp in adc jp push sub sbb ljmp fdivs pop test int3 ror and push add gs cli and xchg leave test (bad) dec mov and test sub mov mov push mov push add mov fwait js sbb jne imul and (bad) mov jecxz dec cmpsb xor (bad) jmp mov and xor test addl mov xor or xor repz (bad) imul or jg dec adc dec mov aas imul jle shrl jmp repnz dec lahf int inc jecxz lahf mov adc ds and or jne pop inc inc add test call in sub mov scas repz mov xor hlt mov bound add mov aaa dec sti jno push pop stos push enter in cmp (bad) scas scas je and add inc cmp jns mov int jmp ret shlb mov fwait repnz jecxz (bad) sahf mov repz or jg cmpsb popf jle and and add sub inc mov push mov and sub cmc dec fwait pusha mov pop lds mov cwtl (bad) imul leave js sub mov mov mov ret sbbb pop jbe dec jno jnp or cmp cmp add or es sbb jmp or xor jae call fildl pushl lret xor cmp push into out sahf mov scas push sahf xlat addr16 sbb (bad) js xor stos mov or cmp lea fmuls cmp dec mov rcrl ds int adc pushf sub mov sahf mov nop into push and inc repz pop pop es mov test cmp (bad) push xchg sbb ja call lcall mov js add je mov nop xchg adc mov xchg cmpsl iret pop out lods sub jns jne jmp int3 pushl cs fst xchg or push mov sbb push ja and cli jle divb sbbl mov cmp inc push mov dec lea pop jle lea pop or and jae sbb not push rcrb or das cld jb fs nop mov (bad) lret out in pop pop stc addr16 test (bad) sub aad shlb add je push push out add xchg dec (bad) repz cltd stos pop pop mov jmp jge test add inc and pop stc inc and dec mov ds dec je mov xchg orl inc lock xchg inc fxam mov push inc add sti jb jns or daa sub aas mov dec loopne push roll push nop mov imul rcrl and cmpsl test iret xor (bad) stos push es jp ljmp xor gs aaa es in cs stos mov out mov bound xor cmp arpl aas lcall bound inc xchg aam data16 pop mov sub push sbbb pop mov lret stos mov test sub stc xlat leave or xchg clc cwtl mov sub fptan xchg test icebp mov ret lods or fs out movsl pop push mov arpl cmp adc mov push into adc outsb ja xchg aas into fmuls adc and test fdivrs popa ret add adc dec sbb ficompl cmp mov add sti nop lret xchg push je and mov std or mov sub xchg xor cld jge sbb ret pop ds pop inc dec (bad) iret sbb call xchg and xor jecxz test mov inc je or adc clc out push mov rcrb dec sbb cld mull push test mov push imul fwait dec notb pop mov mov fs ljmp adc aas movsb xor scas sbb mov lea xchg push add fwait pop iret loopne add ret imul insl sbb test icebp inc cltd decb mov cmp xor lret insb out aaa pop xchg es sbb or cltd add in (bad) mov pop ficomp mov out bound jb and loopne xor pop sub mov clc and insl xchg xor fidivl add xor xlat fbstp addr16 pop pop mov aas mov aad outsb icebp pop or enter inc je gs xchg js cmp xor adc (bad) ret nop ljmp mov or inc jns lret movsb inc or add sbb roll or mov or mov sbb in (bad) (bad) sub mov mov xchg jbe and (bad) inc dec test std and sbb test sub mov lahf push xchg fidivl inc int3 mov arpl repnz inc cmp enter and sarl push callw mov loope enter jo and mov pop imul dec shll insb xchg insb ljmp ja push or repz inc and push jge (bad) test pop sbb push mov pop or leave sbb cmp cmp es (bad) adc or sbb mov sbb leave xor rcl sbb (bad) jbe lcall or xchg add mov out sti inc jnp es sub jae (bad) sbb sbb scas cld cmp add out rolb adc popf outsb lret pop mov jno lds mov add adc out adc mov ror out daa out push or je into dec int mov xorl fld in lcall adc (bad) push lock (bad) mov test adc into in ljmp mov jmp adcb adc sbb xchg cltd je adc xor and sub push repz int3 fidivl stos pop jb add das aad jle mov ud2 ds sub push stc inc mov mov cmp outsw lock stos pop cs and jb loopne jp push or pop mov lea popf mov bound xor adc sbb aaa aad sbb xor (bad) sti jle sbb clc test (bad) or (bad) pusha inc adc xchg adc sar add add xor sbb mov shrl push mov adc mov pushf test pop jb scas fild pop (bad) int3 sub out push or xor aad mov cmp roll insb cmp mov adc cmpsb add mov mov inc mov fisttpl mov shll push inc (bad) icebp mov push xchg push loop cmpl out mov imul xchg ds repz dec cld out mov push push mov jnp xor pop mov jmp pop inc aaa jbe mov sub inc adc hlt xchg xlat mov testl mov fiadd inc lea lea ljmp sub popa lods and cli xchg mov call stos loopne push mov jmp fistpl test leave xchg jge sub inc dec inc xor add aam ret test pop mov xchg lock mov jnp in fidivrl (bad) ds jbe jmp stos aas adc data16 pop jne,pt jbe xchg push xor xchg mov mov push hlt out pushf mov fs pop cmp dec idivb (bad) mov in incb inc mov ds pop mov mov pop xlat inc cmp lahf push ja adc into push or (bad) lahf push xchg dec inc add jnp js xchg inc dec stc cli add jns pop rcrl jle arpl movsw insb ja lret lret adc xchg (bad) sub push inc inc insb imul cmp xor aad dec push mov jle dec lret test inc in cmc dec lods fisubr repnz pop stc popl mov cmpsb sti push xor jae add cmp pop ret push sub insb cmp mov outsb addr16 mov jno test add inc cmp jmp insb xchg pop lret add mov js xchg hlt cmpsl insb fnstsw mov scas xor das mov mov scas push test sub sarl xchg lods lds shll adc jns mov inc push aad icebp (bad) stc adc xchg dec aaa or mov leave push cmpsl aaa push mov test xor arpl shlb rcr lds push jg sbb out push sub jnp imul push jge inc repnz popl mov mov stos das add or add inc gs adc cmpsb repz jbe fwait pop ret dec (bad) and stos (bad) repnz repz mov jl lea inc imulb outsb add push lahf lret or dec cltd fldl push outsb mov jns je cltd int3 pop push push jp jg mov daa mov sbb or test jne xchg pop ret (bad) and rol xchg cmp add sti push call outsl loope sarb mov test jle out imul cmp inc pop popf mov mov xchg leave adc mov mov lret call mov test iret jne jl adc mov lea insb idivl adc sbb neg call pop call mov mov mov add (bad) jno xorl in cmc rorb mov or xor iret mov mov xor mov or sbb int3 mov or insl xor jmp in icebp cmpsl pushf (bad) cmpsl jmp mov cmp (bad) mov sub aas mull push mov fimull inc add pop es sub adc jo or and and pop lea mov and pop lock dec push or mov and sub dec outsb pop adc jae adc dec sbb rorl pop xchg (bad) outsl mov mov cpuid xchg movsl stc out insl (bad) ret cmp scas dec outsl inc add and andb insb push adc call aas xor out outsb mov clc or xchg push dec in sahf jg or gs add nop mov cli movsb jg (bad) xor fisubrl or pusha and jge fsts xchg clc jmp jae adcl jmp pop mov xorl jo,pn xchg imul inc jge (bad) xchg subl mov mov test adc cmpsl out sub sub movsb jmp and pop cmpl cmp lahf and lea push jmp inc jae dec push xchg mov dec cmp rolb cmp test (bad) lods (bad) push aaa xor add int scas or loop or ja daa gs sub adcl pop push mov add cmc mov mov idivl fwait dec jnp mov mov cmp jp rcll cmp xchg fs scas iret jne xchg popf push cwtl jg dec add test jns xlat jmp or sbb (bad) or pop dec jo ljmp fistl sbb push fstenv xchg cmp (bad) jmp gs roll cmp ds stos xchg (bad) jg (bad) pusha adc mov add pop fsubrp repz and xchg cld stos adc (bad) and cltd inc jecxz iret xor enter test sbb cmp dec cmpsl popl (bad) pop jnp,pn dec xor lret cli pop cltd xlat mov pusha and ss jnp xchg fwait lods lds push jb imul lret ljmp insl xchg dec xor or pop xlat das xchg (bad) lock std inc push daa outsl popf mov mov cmpsb fcoms dec fcompl inc sti mov negb aam sub mov std cld push mov fcoms mov mov dec mov test ret cmp adc mov mov sbb push mov cmpsl outsl adc adc and jl mov mov add sbb mov add add (bad) and call sbb or jo add ds pop jo and je jns mov nop push fninit out leave in inc test jo test aam fwait sub inc sbb stos push insl iret loope xchg sub jp mov mov fldenv sbb fldenv mov or adc std xchg lods outsl sub in call mov mov sbb nop dec jecxz aad repz push (bad) fmull push cs punpckldq cmp adc sysenter xchg pop fs cmpxchg mov pop push push dec lea jo scas dec mov adc push int3 in xchg lret push or repz pop imul pop mov or and shrb adc xor lea and (bad) ss mov das ror in subl cli jmp xchg adc sarl pop lahf stos pop mov sbb imul stos loope es adc leave mov rol hlt add cmpsl cltd cmp mov mov shll mov pop mov js stc sbb pop test (bad) pop fsubl dec push sbb cmpsl cmp add out (bad) rclb xchg mov add cmpsb (bad) pop out pop inc and mov lods out (bad) stos mov add add loop pop repz pusha fisubrl sbb jp or jmp sub cmp xchg neg mov call ret nop jg leave jecxz pop jecxz xchg jns jne jecxz xor add xor js mov scas adc or sub (bad) or inc mov push push cli popa hlt jnp inc insl xchg adc test les sub xor sub mov fptan dec test or lds inc adc jo inc jmp mov sbb test xchg dec dec jo xor pusha xor mov mov pop cmp lret sbb loopne sti xor add sub xchg dec mov mov inc imul rcrb mov movsb push add xchg test xor pop cmp addr16 or cltd hlt xchg (bad) mov sub adc inc je cli mov inc das arpl dec fnop cli mov add imul repnz xchg or inc shr cli sub pop add out push fisttp aaa ret xchg cmp fiadd lods mov xor fldt pop adc pop xchg cmp lahf jp inc push int fimul cltd xchg test or out pusha pop lcall dec dec cmp or sar js mov repnz aam jle test fwait sti fisubl or idivl sbb rcrb mov sbb das push adc xor sbb sub pop dec inc out mov mov sbb push (bad) sahf stc xor jno mov out mov int3 jne mov faddl fidivr mov xchg in inc jns xor and sbb cmpsb rclb xchg fwait popa mov mov popa nop jae lahf stos popl stos jns cltd mov jno mov jnp scas dec popa sti mov or in push xor jb push insl bound out push js mov dec sbb lcall popa pop jns loope addr16 call je sub es out sbb ficompl aam xchg movsl dec add pop outsb gs cmpsb test dec jl pop (bad) cmp enter getsec push fsub in and mov dec lret lret add add push xor in jb,pt xchg lret sbb pop fistpll pop dec jno or or cmp lods xor mov cmp and dec xor lods inc push dec sti push js movsb scas jns daa sbb in and daa int add scas daa xchg mov pop adc mov mov loop lods iret loopne nop outsl adc movsb mov mov inc mov cli js icebp xchg sub dec dec push sub pop mov dec mov pushw out mov pop cmp xor mov mov sbb dec jecxz lods cli fs ficom jp in cs xor fisttpll adc push jg jmp andl add push cmp jecxz fist push (bad) stc (bad) xor std xor les xorl inc fistpll dec cmp mov push xchg inc sbb out repnz pushf pop je or inc jns sub mov lahf imul (bad) jo inc int3 es mov pop pusha loope leave pusha or in incb cmp push (bad) xchg into cmp add inc adc loopne xchg mov sbb jbe in jg lock iret cwtl push pop sub leave cmp mov adc lret push dec cmc subl js xchg fcmovu in xchg mov dec decl addr16 jecxz jae test in iret xchg cld adc jge insl mov push and hlt stos ja push test xchg inc mov cmp lods xchg mov xchg mov adc sahf mov push inc sbbb (bad) addr16 imulb push cmp and out mov inc lock cs mov imul mov int mov xchg sbb das (bad) jo sbb mov jmp pop adc cmp inc fcoms test cmp cmp stc add nop and (bad) and lahf enter add es push xor loope leave sbb test sbb mov jae negl (bad) cltd mov adc mov mov pop test or outsl arpl movsl jl mov (bad) cmp lods in and shl sahf (bad) or fs inc push push mov ja mov outsl push add rol mov mov out iret mov cltd movsb loop cmp or fdivrs xchg pop lds or popa das cmpsb sbb sub or sbb out push out xchg xchg repnz xchg in inc test xor idivb (bad) std mov push subb mov cmpsb adc jmp (bad) pop outsb adc into lret push add jns ds inc mov or cltd aam mov test aam arpl adc mov fsubrl add (bad) dec mov adc fwait es out dec dec jbe push adc cmp cmpsb jno jnp call adc jne ret out xor adc xchg in adc mov clc or sub scas adcb cmp nop (bad) in mov in pop jb add loope addl or add fs pop add push mov inc scas adc imul push mov xchg add outsb dec test lods jnp bound or in fild dec sbb ret test xlat or jp sbb lcall mov les (bad) (bad) int3 decl push cmp fildll lahf jbe cmpsb (bad) jp aaa push pop test mov lret stos pop pop cmp int3 mov and fidivrl pusha emms fdivrp (bad) dec mov pusha fdivrp or adc or jmp loope pop mov mov inc in xchg shlb (bad) jle sub rclb mov adc add inc push out outsb jno mov in popf std dec push xchg aas adc out or (bad) dec fisttpl pop mov test add mov in sub into inc in sub cli out jle repz cwtl adc insl cmp sub xor (bad) adc add mov nop shll insl mov jl sub sbb mov in push xchg add rcrl and fsts adc sbb loop sbb sarb pop mov mov popf imul outsb in lods push or dec adc inc lea mov popf sbb cmpsl jb jo (bad) lret mov (bad) stc or push jb aas add xor rorb ficompl nop mov sub iret jmp pop fs subl mov and add mov jmp aad insb mov scas mov fcmovb xchg das sbb cmpsb jno ret cs icebp stos dec or mov jg adc dec lds sti aam and and aam rcrb into ss push fstl lea add das clc scas add jne stc outsl xor repz stc push cli dec or or push (bad) aas lods lret mov and xor sbb in dec ss lea aas (bad) (bad) dec and mov aad test push lret ja repz xchg pop (bad) mov sub lret push aam jbe das mov roll testl repz mov js jge popf or aam jns,pn call and dec test decl xchg js jmp mov cmp mov mov cmpsb or add pop bound lea ficompl dec add xchg mov dec (bad) mov and mov enter cmp xchg add push push dec adc add lods movsl pop mov or mov xor push mov inc ja fisttpll sahf (bad) mov cwtl push icebp (bad) (bad) add adc out push sbb inc scas imul iret cmpsl insl cmp pop jg or adc stos out pusha xchg lret xor aad xchg insl aaa out testl mov push xchg sub and or cli xchg push inc push lcall mov aaa cmp xchg (bad) jmp (bad) sbb sub (bad) cld push add inc fmull cmpb lea inc arpl shrl pop lahf and in jecxz and aaa int3 and pop rcll and mov bound mov pop (bad) pop mov std stos (bad) out imul (bad) hlt mov int cmc pop scas pop aas stos roll in jle mov (bad) (bad) xchg test movsb je out xchg insl sahf sti cmpsb popa pop and and mov mov lea sub ret dec add cmpsl push mov lahf int insl repz test push mov dec out push jg dec push and ja push gs mov roll js push aas loope mov sub jb jns mov push mov sti or iret test in outsb cmp mov jmp fistp (bad) js outsb pop jns dec mov pop mov dec jo aas ljmp fisub lahf adc imul cmc insb es push mov or or xchg push adc imul (bad) or jb mov addl inc pop sbb mov xchg enter sarl and sti leave repz mov cmp lock push pop and mov push leave out dec (bad) sub fucomi adc mov (bad) (bad) (bad) xor test mov dec jns lods add cmpsb movsl call cmpsl xchg leave in cmpb sub mov jne push pop adc cmp rcrb cmp pop cmpsb push cmp out adc les int sbb inc lods mov pop das push pop outsb mov or (bad) adc mov jl cmpsb iret xchg xor xchg jle mov sub jne pop sub movsb mov add sub ja pop loopne dec fnsave test nop pop push imul iret pop inc pop ss rcll jle inc inc (bad) sahf enter mov sbb (bad) negb mov jmp (bad) push add adc mov inc xor inc fidivr mov dec shll data16 test scas pop les movsl pushf ret jnp mov lods ret fs stos cmp xor hlt mov imul lock loopne and sbb stos add fbld pushl pop and pop cs jge test pop subl push pop lds cld xlat cmp add stos mov shl fwait sbb mov gs fcmovnu dec stos bound xchg lods cld dec imul adc ljmp dec pop xchg js rclb sbb xchg fisub repz inc push xchg movsb cwtl or les sarb pop pop nop iret hlt leave hlt or adc popf fcmovnu add pusha mov bound sbb xor hlt cs loope aam mov mov lahf and aad lea push sbb aad cmp pop or outsb cli sarb and out dec xlat stos xor sub jecxz sub jno mov test int3 jg mov (bad) mov inc hlt cmpl mov inc sbb hlt dec pop xchg pop leave xor dec adc xchg call mov insl or imul call adc mov jp sbb fs in stos xor push mov ret cmp and rcll adc jecxz fdivl ljmp and mov sbb arpl fs sbb cld pushf stc adc (bad) dec jle js pop xchg cli sub sub cmp jmp sbb iret rolb in cli mov jle inc xchg leave xlat jae enter push push cmp les xchg mov (bad) idiv add jmp les mov push les fistpl ljmp outsl nop lods inc loopne pop sub ss xorl movsb loop pop les jns adc xchg jbe shrl push add stos mov pop sub arpl adc jne leave cmp xor mov lods xchg mov mov cwtl pop lods addr16 int adc push jno jbe movsl movsl mov add push insl in enter pop adc xchg mov fs inc pop jmp cs fcomps loopne sahf int and stos mov cmpsl mov add loop xchg insl mov push and lea or out lods jbe imul or xlat pop pusha dec sbb fstl fidivr aam ds into pop (bad) mov test fstps push and loope mov lret outsb movsl push adc xchg sbb jbe dec ljmp addr16 cmp popf xchg fidiv lret or out aam ds (bad) mov dec push (bad) imulb aad stos aas out sbb cmpxchg sub leave aaa dec adc add mov xchg xchg xchg add cwtl pop add nop cmp jle (bad) clc pushf or mov out das jb mov dec mov nop sti dec mov jp,pt lock pusha in in mov aam out mov dec popa aam and mov int cmc xor enter mov popa cmp sbb dec jns jmp add pushf inc xchg lcall jl sbb iret fdivp int3 shll repz in ja sub inc xor ljmp inc dec or mov inc sub add jne aad cmc mov cmpsb and arpl cmp lds mov (bad) cs shrl push (bad) or inc in loope inc out inc imul mov pop or jns in dec stos ja lods sub xchg cmp mov mov fst shl xchg out jo push dec scas adc in xchg icebp jne mov test sbb sub (bad) xor push icebp xchg les mov pop inc (bad) das or xchg mov insl ret jns ret into and pusha pop and adc arpl repnz adc pop arpl dec out xor push lods imul cmp pushf subb and in mov and lock sbbl in mov push shlb cmp loope sbb or cmpb xor add addr16 xchg repnz pop cli aaa add adc shlb test lds loopne pcmpeqd outsb pop sub movsb and gs gs jl xor lods cld jnp bound mov aad sub xchg mov or and cltd jge repz pop sarb cmc in mov clc mov in out inc sbb cmp stos push mov addr16 fwait mov jp gs push xor cltd pop lcall idivb and ret cs dec roll popf (bad) mov mov add sub jmp test fwait popf ljmp xchg push pushf test scas jmp sbb in sub rol pop (bad) insb mov addb xchg fwait inc push push pop addr16 loopne iret jg push mov outsl fdivr push mov out movsl pop fs loopne (bad) scas mov fld xor and sbb lock sbbl out and jb and inc into andl out lods pop clc popf nop xlat push adc (bad) mov xchg jg jno mov scas push outsl pop std dec aad push push stos pop leave and ja jbe push xchg sbb test mov scas movsb xor test sbbl xchg js int (bad) mov sub sub jb mov ss adc push lret imull jg,pn mov or jnp xchg inc push insb or jb xlat fist push pop jp or scas out scas dec sub jl mov dec push sbb test xchg jmp mov jmp lds sahf push insb sub outsl in mov pop add repz fcomps test scas jae inc mov inc aas jno xchg mov insb loope std arpl push mov push add ja loopne xor mov call test mov es sbb push scas mov imul or or jp dec or inc dec (bad) inc lock mov push es or push loope cld adc inc pop or and cmpsb stos adc nop bound pop push pushf test or jb pop inc sbb icebp repnz cmpsb mov cmp add xor ret add mov cltd in hlt inc xor loope jmp cmp scas int jno stos mov addr16 popa jb mov sub pop and shll stos data16 addr16 insl repz xchg pop aas or inc mov mov pop aad int3 pop insl je imull cmp (bad) lock mov mov jle mov cmpsb out cwtl fcmovu adc inc cltd pop sbbl in mov sub setl mov and lock adc cmp cmp sub hlt js cltd jge in or add sub mov and dec fs outsb flds int jbe xor inc cli ss pop lea jnp xchg mov jg mov add gs popa movsl ds idiv dec insb int out sarb xchg push xchg xor sbb movsl pop inc pop enter jnp aas sti fcoms pop mov mov and scas ret inc les mov cmpsb cmp aad sbb jp inc ret dec stc push sahf fildll sbb cld in int in movb and outsl inc add hlt (bad) iret mov mov cwtl add lcall pop mov test je (bad) push add mov rclb enter cmp aaa dec lcall adc lahf xchg jmp (bad) mov pushf popa (bad) loopne rorl sub hlt mov adc shrl cltd jbe cmc mov insb dec andb pop (bad) push mov pop jb lods pop add sub mov out inc mov test pop cltd mov std inc stos mov xor int jle sti or outsb test cld and (bad) nop cmpsl outsl fcompl daa adc dec add pushf lea call test cmc pop out lock (bad) iret sub mov (bad) loopne push fistp jno pushw cli jno insb sbb outsb mov dec sti imul es cld xor jle (bad) add push inc icebp pop cmp loop mov es in adc add cmpsl dec cmp mov (bad) jmp and sbb jg loope pop repnz sahf fldl and push mov pop mov aam add data16 add mov sbb es jbe sti push xor lock xchg dec jg jle addr16 out out xchg (bad) xchg shll lea cmp jo out jle and test rcrw adc lods sahf xor cmc inc repz pusha pop mov mov scas xchg iret mov cmp rcrl out jbe lds xlat lcall (bad) cmp jp je jecxz gs scas es call jbe push sti jo in adc cltd test push lds xchg mov jnp and fucom mov dec pop inc dec pop mov pop add push (bad) lock push push xchg gs xor mov icebp xchg sub sub outsl icebp sbb ljmp es loopne fist jne movsl rorb in and jno into or mov cmp or sub or mov les shrb jmp (bad) (bad) lea push es add int3 (bad) pop js fstps fnstsw cmpsb fidivr xor dec cmp stos dec jp pop mov test add (bad) push insl je cmp mov jae lea mov loope imul jne std ds sub xlat push inc cmpsb jb ss sub sub inc loope hlt jnp int3 imul mov jmp movsb aas and mov inc jecxz inc push xchg adc sbb push fcoml popf mov push (bad) dec lock dec mov les sbb fldl adc repz sub add (bad) in jne xor int3 out dec inc fistp sub nop jge add aas lret push mov stc imul loop cltd in mov push sub lcall imul add dec mov xlat xchg cmpl (bad) or mov cmp sbb jecxz cmp xor and retw cmp xchg rol gs stos pop (bad) add scas icebp dec stos lahf adc lds dec xorl int3 sub lret or out in cmpsl mov ficoml (bad) in sub sub push loopne inc gs hlt arpl fimul push or xchg repz or sbb and int push mov loopne pusha inc movsl ss js lahf (bad) sub (bad) jne mov pop jl aam mov mov inc hlt mov and outsb das lock or nop xchg xchg jno mov mov jns jbe lods push fild cmp pop int3 pusha pop daa jmp cmp push jae imul adc test mov xor jg sti xchg lock jecxz or call out push xchg out aaa push ret aam cmp push sub inc in subl mov sbb jmp cltd lds dec and xlat mov xchg adc and adc movsl xor frstor lret (bad) push invd mov in jnp push ljmp es jecxz ljmp js pop xchg xchg pop mov std cs sbbb mov loop arpl xor std pop xor mov mov jns clc pusha cmp insb cmpsl into jl cmp mov push dec daa insl inc adc leave fs add jo hlt fild fsubrl aad pop sub mov dec mov (bad) lret hlt mov fidiv or popf pop inc jb,pt mull jns or into cld das mov pop mov adc mov add ficompl xchg inc mov out add jnp xchg cmpsl std stos mov orb (bad) les sbb movsl es jmp icebp add jno,pn pop mov enter xlat jmp lahf sti std in mov or inc repnz shrl or in test into push xor xor xlat xchg sub sbb (bad) add pop mov fisubl push rorb scas mov push mov (bad) and jbe and and out fnstcw cld mov sub cmc lret mulb lret out out scas push mov sbb or (bad) ficompl jb aam mov mov mov outsb movsb out jg jg sub dec add out cli lock sub push nop dec loope fsubrl xchg int popf (bad) cmp dec mov lret adc inc mov sti pop push aaa jnp xchg js ljmp mov int lods jae dec lcall fwait sub push mov mov add bound stos xchg rolb jns rep adc add xlat jg and dec pop xor jge push cmp mov xchg sbb sti jbe divb mov rclb pop outsb push jge jne fs pop les mov stc dec cmp add pop xor iret dec sbb cmc aam mov adc cmp inc add test push jne dec add mov pop out (bad) shlb popa sti dec mov pusha ljmp adc or jle cmp or dec or inc inc xor mov xor aad pusha and gs stc mov sub (bad) inc imul ret mov pusha jb test insl xchg add movl and jle inc test inc lock and mov or ret xor (bad) and dec in inc (bad) in cmp xchg fcmovb inc pop scas lock popf daa mov sub std imul push xor fistpll jge dec sti sbb push lret mov addb loopne out cwtl push sbbl mov mov clc arpl insl (bad) sbb fild test sbb push pop mov shll int inc arpl roll or adc fisttpl insl test stc pop pop aas adc pop inc or cs loop je dec mov dec jle cld (bad) push enter mov andl inc cmpsb lcall fcomi pusha pop lret movsb push push xor cmp sub dec cmp insl mov (bad) mov pop scas push insb pop popa cwtl in mov mov jmp stc sarb jmp es mov icebp out mov xchg sbb shl mov lahf or (bad) loop scas sti xor push lods pop fst mov fistpll mov nop das (bad) or int3 or dec sbb movsb push sbb mov movsl dec sbb out xor fwait sub sarb pushl sbb mov mov inc and jmp xchg int lea repnz pusha cs xchg mov (bad) xchg lret (bad) out or mov add dec push or nop outsl mov push xchg movsb mov mov or push pop pop fs ror insb jp int xor ss cmc rolb or mov ss or xor (bad) mov imul mov movsb daa loopne fildll int jno into mov das xchg add mov lahf mov xchg ret jmp or jno and mov pop ret cmpsl pop repnz shlb sub mov xchg das aaa inc stos pusha test fistpl add push ljmp inc fnstsw outsl push jp inc mov leave or popf popf adc mov fwait cmp loopne xchg mov xor cltd pop pop ja sbb cmp out xchg imul mov xchg and fldl or mov call lock scas ret repz xor cmp and and (bad) adc enter clc inc and sub ds inc lret xor push fsubl or (bad) cmp loop adc push or hlt leave mov xchg pop imul cli mov lcall pusha enter out inc lahf jmp inc jbe dec pusha add mov mov shlb hlt stos ss scas pop sub fstl cmc adc or int3 and fisubrl nop data16 xor into dec mov aad mov jp lret push clc (bad) pop rclb repnz fcmovne push push scas arpl xchg xchg (bad) lret lods pop out push pop iret xchg lret aaa aas lods fnop cmp xor (bad) push ret clc sub sbb jmp xor shrb in fwait lods data16 movsl (bad) jl adc jno xchg addr16 out dec mulb in add dec jnp (bad) xor shll xchg jg push mov push push or dec mov or pop sub fs js mov popa std push fs mov jb adc mov fdivrl adc adc int3 (bad) insl je push popf fmull dec fcomp xchg in into jae fsubrs mov xchg lcall pop inc lods or cmp std adc cmpsl cltd sub mov jno inc push aaa dec divl dec rcll jmp mov and int or push clc ja or je cmpl mov in sub loope jmp stos xor inc mov cs fmul xor test or adc jecxz adc mov mov push dec lret outsb xor inc lcall adc jmp das fidiv and and jo push fwait and fcmovnbe mov les mov inc inc enter inc and rcr ds add jmp cmp into jle mov sub xchg jo jne lret rcl xchg pop stc ljmp cs leave daa inc xor rcrl and jae add push fmulp ss add in outsb ds ljmp or loope mov int3 mov push loop jnp js push and mov and test cwtl addr16 sbb sbb js jnp fs jg add jo (bad) std sbb scas fwait or cmp les invlpg int adc xchg jecxz push dec incl mov pop into xor pushf xchg pushw ret pop inc mov jmp inc inc ss mov sub jnp test or jmp ljmp cmc fsubr pop fsubrl mov mov mov push mov cmp mov pushf inc push or mov loope dec xchg jle mov mov pop cli lds dec ja xchg leave daa mov xor mov mov rolb out cwtl add scas (bad) cld movsb jg scas aam fstps xchg ret xor mov push xlat pop aas xor adc adc jns subl adc cmp scas add nop bound sub adc sbb cmp (bad) mov adc adc mov outsb mov frstor jmp adc mov ss mov pop pop sahf xor push idivl push jle push push sbb negl adc sub sub sub cmpsl insl ljmp jge sti mul and sub xchg dec mov loop fbstp xchg sbb jle xchg jo aas ljmp push adc movsl stc (bad) mov out inc pop flds cmp test mov je xchg jl mov and cli mov dec ss lret jge jno jl outsl cmp dec pop out inc push loope std mov push cmp sbb xchg lods push jge jno jmp aas adc pop adc ret stos xor lahf call sti and fnstenv ja or xchg inc fcmovbe fwait popf pusha (bad) jne mov jae add push or clc in test lods xchg or fcomps mov bswap and jbe cmp jb in lcall lods jb movsl and adc dec mov xchg add mov into sbb cmp sub jb sbb xchg pop test pop lahf test aas mov inc and mov xchg out addl (bad) cltd mov push and push and negl mov loopne es inc out rorb rcrl dec int3 js jmp cmpsl pusha pop and ret and test in outsb je push ss push imul cs fld sbb mov pop push daa pop mov mov sub and mov lret jp fiadd fs xor ret lcall inc inc jo cmc ret enter in mov (bad) dec jns je es cmc push add mov pop je frstpm(287 adc in faddl popa pop mov pop popa int es pop and jns pop ljmp scas cmp add movsl js int jp insb test xchg adcb xor inc fisttpll jl inc std pop adc xchg cmp (bad) icebp jo fistp out mov sbb jns mov sbb (bad) jo or adc ds and sub or jecxz daa jo adc adc lds sbb divb sub in mov fidivl sahf push imulb fs (bad) or in sbb out icebp cmp jle imul outsl mov adc cli daa enter mov popf pop std add (bad) (bad) pop lods xchg loopne lock pop enter clc (bad) or addb xchg hlt and cmpsb dec jo adc (bad) mul xchg dec sub out sbb dec xchg (bad) ljmp daa xchg test mov push mov dec sbb data16 sbb adc add aaa sub fisubr xchg xor mov mov mov ljmp (bad) or mov inc mov pop out or bswap mov fiaddl and dec aaa sbb mov dec xchg inc into cs inc xor inc mov in jle mov lret aaa inc xlat fld daa sub lret add mov or sbb push pushf les fimul scas dec adc gs lods jg pop fisttp icebp dec jnp and int3 cmp out or adc sub jecxz adc loopne leave or pop (bad) call movsb hlt rol ret push scas rcl jb repz leave lock xchg loope sbb mov jmp addb mov jno (bad) addr16 mov dec scas jecxz addl xlat sbb fadds pop into fwait sub mov call mov ja mov inc pop mov xchg inc or ror lahf stc or jns jno pushf mull sub repnz push push jns push mov adc xchg enter xor cmp sbb pop in or out cmc add adc or or mov fwait insb fwait sub fwait pop cwtl dec repnz (bad) or mov dec mov push jnp imul or dec push mov stos push in xor cltd mov xor stos (bad) lret fs ret shlb jmp sarb leave loopne je or adc fstl lods mov hlt mov sbb cmpsb mov (bad) loopne je or insb lea stos out and ficom xor jmp int insl xchg push les add jmp fsubrl fisub lret jp outsl mov mov loopne pop js mov rcrl and or jmp out adc dec push test xor clc in fdivr int mov jnp adc inc out imul (bad) xor cltd pop mov sbb add lea gs push inc ja mov xor mov mov mov and push dec sbb push push mov fstps sti sbb iret pop mov xchg in jo repz pop pop mov ficoml cmp stc pop dec cld xchg xchg mov fsubrs pushf lds in push sub stc (bad) rorb mov fnop push shlb add in mov adc in test xor mov std loope jbe inc mov sbb pop cmpsl add push dec mov cmp jbe mov mov cltd ds cmp cmp ljmp in adc xor cmp test push lret mov dec add ficom mov add fisubl mov add xchg mov dec push and mov cmp jae inc jle inc push xchg jge,pt arpl jge inc sub jge (bad) scas adc rcll aaa (bad) mov pusha outsb sbb je outsl jle ljmp test loopne rorb repz pop bound jne mov call shlb mov lds add adc cmc inc das (bad) xor mov cmpsb fwait pop push dec sbb sub pop adc hlt out cmp jle and cwtl cmp sbb adc adc insb nop push nop inc idiv mov sub rorl loope lret dec outsl or lock js add sbb inc inc inc sbb in and lret jge out xlat mov out daa call (bad) dec pop out jns xor mov cmp lea ds xchg mov iret into mov pop test cmpsl jb pmaddwd cs (bad) int3 xor mov lods (bad) adc in push cmp jecxz mov push sub lcall scas popf cmovbe insb mov das mov addr16 xchg out or lods xchg add dec (bad) out inc in in mov xchg test fstl add js and add adc in mov scas mov ret xor lock jmp insb sbbl adc shrb pop rcll add add imul ds lock ss fucomip fisttpl mov lods adc push das cmp incl fwait xchg loop push mov aaa out or mov fbld lods dec adc enter call cld (bad) scas or cmp (bad) jmp cmpsl ret out lcall xor stos mov mov pushf jb jnp pushf inc icebp cmc sahf cmpsl mov std subl mov test cs or mov dec pushf cmp sti test and (bad) iret pop mov std aas and (bad) nop pop lods inc adc movsb mov add xchg jns cwtl jge dec into nop cmpsb pop or test dec pop or xorl jbe or test test xor aam pushf push dec les pop mov (bad) xor dec cmp mov rclb pop das aam test sub xor dec ljmp in xchg dec jae test cmp (bad) hlt jle ljmp xchg dec cmp pushf hlt mov xchg ss loop sub stc lods or int3 (bad) and jae cli lret lret add (bad) dec outsl sub and jecxz or aaa (bad) push jg fcmove (bad) (bad) (bad) int3 and cs popa lret xchg test loop mov jmp mov jp out or mov ja mov call (bad) sbb clts cwtl daa das or pop mov aaa sbb push outsb daa pop lods jns in nop fldl inc pusha sbb inc or sub (bad) sub callw push xor jg adc ffreep lods sbb in or mov or adc mov or xchg ds mov das xchg push mov popf mov dec xlat mov xor inc add pop mov push (bad) dec sub or mov jp testb aam ja std xchg mov cmp or int3 add (bad) sub jg mov call push sti push xchg sahf cmp (bad) les loope xor xor roll lea mov cmpsl dec data16 fs sbb cld hlt icebp testb cmp adc shrl and fs pop mov sub sti cmpsb add cmp es test in cmp add pop or std mov rcrl addr16 add and fucomi and aas lds push push (bad) scas cld inc cmp jae or je xor jmp out aas sub add cmc push xchg ds mov and sub xor dec xor jb push inc out test mov pop bound inc out mov push mov mov testl cmp movsl xchg insb adc movsl scas test scas loopne pop in test sbb scas sahf cmpsb xchg adc or mov xacquire loope adc insl mov pop mov aaa mov fldenv sbb out add pop fdivr jl int inc inc sbb addr16 cwtl inc outsl adc adc insb bswap jno push pop cmp (bad) jns jecxz and push cld mov sub lahf adc push mov add xchg cwtl mov movsl gs push hlt push push imul cmp cmp push aad pop mov dec insb mov jbe mov and scas js sub inc mov js stc je xor popa pushf pop pop xor mov inc mov pop and jp (bad) popf imul in icebp mov or cli xchg sub inc (bad) jae testb xor lods mov inc add or mov lea xor or (bad) cmp enter pop into repnz push push in xchg push wbinvd ficomp mov jecxz out jecxz add jbe cmpsb ja jae (bad) icebp sti pop test mov data16 inc dec int sub test mov in xor les inc ljmp movsl test xor orb mov push mov xchg and inc push jg mov (bad) aad cwtl hlt and pop mov xchg repnz jp (bad) popf shlb lret xchg jecxz inc sub inc mov jnp std mov mov mov jmp (bad) dec or negl outsb ret push mov push dec out cmpsw arpl repnz fstl mov es enter and mov pop cmp and or mov jnp jg adc test pop test add jbe shl ljmp sub int add jg das ss lret mov rcrl add push push push mov addb in sub pop lods and testl data16 dec lods adc andl adc jo xor cmp sti sti pushf test lods cld (bad) pusha imul ret repnz jmp (bad) and push adc mov les and mov push push cli inc xlat fnstsw and jb lcall fbstp jo or fsts push dec adc mov or popa lods cmp and aaa mov xor outsl fnstcw mov aas inc sub add mov xchg jmp jp push xlat push ret push std xorl sub xor rcll push movaps rolb push stos mov leave negl imul arpl fcomps sub stc xchg mov pop push repz jnp cmp lock aaa in outsb shr nop xor push dec cmp and mov push add lods in dec icebp mov int3 add sbb or int3 ljmp out je imul pop aad mov mov sbb or stos outsb arpl pop pop xchg scas xchg mov leave jo jns imul jnp mov pop pop test dec mov lahf jnp rcrl push pop jl popf xchg out mov fnsave int3 jnp daa cmp (bad) and popa leave (bad) and mov cltd or out pop push out scas (bad) je push and idivl (bad) cmp xorl pusha lock sub shlb shlb pop fadds leave fwait mov pop sbb stos loop bound pop test (bad) cmpsb push sub lcall jl loopne or aam dec mov add (bad) fsts loope cmp xchg cli mov inc arpl sbb lret test pop pop aam into inc xchg (bad) add jle outsl ret jo imul lret mov data16 sti pop add mov daa sbb and gs stos mov xchg mov push xchg ljmp and xor pop mov leave cmp or fmull out pop cmpsl dec dec scas popf mov aas in int3 add mov into fidivl jns addb pop ss aam adc fbstp push cmpb add push jns sub jge add sahf cmp or dec sbb pop (bad) mov sub mov jno pop adc lods out int3 negb jp jbe mov jle push aad xchg cmp (bad) sahf cmp pop fadds dec mov pop imul mov xor and outsb jae fstl xchg sub xchg adc adc aaa scas test jecxz mov ret cld scas icebp inc test xchg fcmovnb loop fs jge xor icebp mov pop pop sbb mov mov mov aaa xor dec popa pop push mov xchg repz jl mov xor sbb xor inc shrb jnp test sub arpl mov inc pop into pop inc andl jnp das add in mov dec cmpsl add sub ds jns pop push loop data16 xchg lret pushf and inc lret addl or adc xorl jne test mov (bad) enter mov cltd push call jbe xor (bad) and stos mov add std aam and adc orl dec out push insb adc or shl daa jo iret sub lods jle pop popa add add push mov xorl sbb mov xchg in loopne icebp je mov cmp out stos jmp test (bad) notl jl push push and test xor xchg xchg lock xchg lock push and inc xor aad jns sub test popf mov inc pop inc mov icebp dec adc out or add inc pop xchg xchg pop jecxz xor cmp sub rorb pop dec xchg inc rclb insl ja inc mov sbb ret leave jno jecxz push (bad) pushfw cltd insl pop lods push push pop xor das je cmp add aaa dec cmp fdivrs pop int pop jne and push fdivrp mov out test (bad) jl mov sarl loop jno or and and lahf mov (bad) jo push and jge cmp es test test fwait sbb sbb mov sub push push mov push dec jmp mov sub mov test mov in dec jo mov test loope pop test cwtl push imul sub and js orl pushf test sub sarb and cmp aaa pusha incb push xchg jno lods and les push data16 or jecxz push out push cmp dec inc ret fstpl iret or leave mov jge jae add stc (bad) mov icebp imulb cmp cmpsb lea mov push jns leave leave inc inc mov sbb enter or sub pop orl cs jne push and mov mov inc sbb (bad) loopne scas aas (bad) lret fwait shr insl (bad) out iret ret ja imul jne push subb xor loopne push imul aam dec mov pusha bound inc inc cs xor jno stos lods sbb pop addr16 aaa rorl mov (bad) hlt data16 shrb dec push mov jno xor lds jbe insb mov cs je gs mov mov cmpsb arpl adc data16 pop sub jecxz xchg test stos (bad) xor cmp out insb (bad) cmp push jae bound ret mov arpl adc adc inc sub (bad) sub cli jns mov (bad) xor js data16 (bad) mov les outsl sbb xchg push push inc scas xchg and movsb out push fnop stos mov xchg sti mov out inc (bad) fisubrl and jbe (bad) loopne cld (bad) imul lods jmp mov mov sbb lds aas xchg enter in xchg cwtl lods mov pop lods fistpll sti fnstcw push pop gs dec dec int3 inc inc push ret xlat enter add sub sub xchg dec rorl cwtl mov push (bad) out dec push add jo push bound sub mov incl fwait pop xchg in mov aas mov cwtl js dec cmpsb or dec inc test lock cld int3 call cld mov imul inc or mov shl inc push test xchg cmpsl push mov nop push bound sbb out inc fsubl inc jbe (bad) and lods jmp repnz and std mov insl test insb rorb mov add dec fcoms mov into sti xor mov and ss fisttpll in xchg add ds sub fs jnp loopne push rorl cmp push sbb jno or imul mov push fisttpl push rcrb pop adc ja inc into xchg pop fisub test adc leave or sahf push inc pusha stc xor test jp ljmp iret cltd mov push call lahf lcall mov lcall fnstenv mov js (bad) outsb jne cmpb ret fdivrl repz repz lock insb mov cmp and xor sarb jbe loope in jns xchg (bad) push jmp mov jecxz iret pop iret test aaa sub inc inc fcmovnbe jle frstor xor cmp mov cwtl aad inc sarb aad mov sahf add divl jb mov push icebp data16 dec jge flds pop inc test jp pushf sub xchg in pop mov and aas inc out sub dec sarl insl or (bad) sub push enter dec popf mov sbb inc (bad) (bad) icebp call shrd push mov in dec fcomi xlat hlt xchg daa icebp or xor loope scas test roll sbb hlt enter sub rcrl leave test aaa mov cmpsl add std pop mov or xchg push pop dec xor or and pop or inc fidivl add add and or (bad) sahf cmp inc xchg mov (bad) (bad) in sub and ret scas imul clc outsb call fwait lock sbb rcll jno outsl add push pop and aam (bad) or mov stc mov inc xchg dec loopne and adc shll xor inc negb or pop mov mov push mov mov mov not pushf mov bswap movsbw lea push movl pusha lea call jmp movl jmp mov lea call cmp push push jmp mov clc sub pushf mov pusha mov lea jbe stos pushf lea jmp ret xchg loopne inc add testl cmc test sub incl (bad) lea (bad) xchg jle movsb cs rcll and and stos scas outsl aas gs dec imul pop sar jmp bound mov push (bad) ljmp push iret push sti cmp ds out aaa outsl xchg idivb and loop cmc ja push test sbb pop inc push jecxz stos scas xchg push cs les stc shl neg mov pushf neg not jmp bt sub jmp popf test dec push lock push hlt push mov cli scas (bad) loopne inc mov pop gs jo (bad) out enter dec mov cmp adc adc js cld pusha repz or scas dec test cwtl insb jle fidivrl xor add or popf (bad) sti (bad) nop negl sub outsb dec ficompl insl pop jae loope pop fisubr bound jmp lret cmp pusha faddl push add test add aam int int3 ja adc xchg xor loop popa movsb rol add loope inc fldt daa xor fwait fwait loope shll mov in sub into mov pop pop mov jecxz enter pop dec mov aad pop cmpsb push cmp mov push cmp imul pushf es lahf adc aad cmp stos xchg test and clc mov fild or jne dec jmp icebp out xchg cli jo rcll gs mov fmul ss add movsb js mov mov ds ss lods jle pop adc add add scas rcl les in pusha add mov aaa sahf int subb cltd repnz test jne push xchg dec popa cmp call loope ss or mov mov adc sbb gs rclb xor stos push and fidiv jne in push int lods rcrb cmp mov xchg jo add xchg iret call or aas shr jmp test dec sbb lds out jbe stos jmp loop repnz cmp and mov jnp push jge (bad) in (bad) xor or repz and push or (bad) negl push pusha sti xor (bad) xchg imul jp and lds or scas daa dec rclb lea and push jle mov inc mov dec (bad) sarb imul or mov dec dec mov ja cmp push push sub (bad) popa xor lock mov sub add (bad) jo inc out lcall imul pop push test inc fcomp lcall inc xchg dec cmp pop imul mov lds and dec fisubrl (bad) push mov jae add or or (bad) insl ffree mov enter push or es outsb add jp popa dec pop movsb fsubs dec and fildl xor ret push leave and add out in cs add inc cmp or jo (bad) out lods add push jecxz cld fsubs lcall jle xor xor in mov sub stc pop mov and jmp pop roll mov cmp test add or dec pop pop push cmpsl arpl sbb and cmp call inc mov sub mov cli add jo fs add clc inc push clc push aad in sbb imul jbe mov mov cltd andb jo adc xor shrb jb,pt inc pop xchg (bad) jl cld and xor and pop or mov pop cmpsb ret scas or imul movb mull sub pop inc pusha out ret add inc cwtl pop xchg mov popa test call test sbb xor notl mov or (bad) pushl stos pushf lea jmp cli add sbb stc xlat fisttp cmp repz repnz nop fnstenv lods nop push mov and ss stc cmc mov add pushf sbb mov and pop adc scas sub sbb movsl data16 fstl jne test pop loop loopne dec cmp xchg lcall push sub fistp les or mov or test push xchg xor push ret mov push (bad) int push fnstsw cmp in or sub lret in xor sbb mov dec dec mov stc xor jmp pop dec mov out and push pop lret mov mov aas imul cwtl sbb (bad) aam add jae addb jo dec xchg mov pop sub daa in cli xor inc cmp pop inc movsl jp pop fstpt lods (bad) icebp (bad) mov or repz lcall sbb nop inc mov in call jb mov sub push sub sbb sbb cwtl and out aam add push clc sub call pushf lea call jmp xor cmp pop fwait cmp mov addr16 mov mov and xor inc loop je push das lcall sub orb and mov push test gs pop das lods push inc mov sahf push or idiv mov and pop dec je mov enter dec mov fldcw cmpsl stc aad dec cmpsb imul je mov insl (bad) add push jnp out mov nop inc or and adc fdivrs leave out sub mov jb jle pop inc jle neg pop out or int int3 push call xor jbe cs ret push sub xchg mov lods fdivl sub fs adc mov (bad) dec lock xchg push stos cmp push fbld pop shrl dec cmp movsl jge dec mov mov test (bad) out ret inc jl cmp add inc fs jmp js cmp push fnstenv cmp cltd mov outsb push lret and adc push xor dec outsl ds sub stc sub and jno jae adc jle imul cli (bad) stc cmp xchg cmpsb dec hlt in xchg out jmp lea pushl pushf pushf lea jmp mov shr setno add mov test test stc test and test add pushf pusha call loope or mov add loopne or mov hlt or enter ret adc or popa dec cmp out lock adc vmovapd push push push aam (bad) std jbe inc scas in hlt add or mov (bad) xchg inc lds icebp (bad) pop push inc ljmp mov cmc dec in cmp cmpsb clc jno mov push pop fldpi adc movsb fmull adc sbb lahf out (bad) fs adc pop mov push push fildll push lcall mov inc rcll pop test mov mov rclb je or cmp aas dec inc jne dec in stos push cmp jns and inc fs outsl mov imul cmp js sbb and xor xchg inc loopne inc and in fistpll stos jne inc mov sahf in xchg out pop xchg mov jne jne dec xchg divl cs adc imul add clc and leave fld cld lret and inc push cli xorl dec pop testl dec imul shll (bad) shll push nop mov pop xor cltd shrl lods leave data16 mov xchg popa push dec rcrl jnp xor dec repnz aam pushf push sbb inc cmp es out inc in sbb jno push (bad) sbb shl iret add ret inc add addr16 or bound loopne jg adc not mov in pushf aaa push movsl mov and push ds pop nop andl inc push out or or and sub dec fwait pop xchg xor adc sub dec cmpsl mov xchg cld in push (bad) aad icebp bound inc cwtl cmp nop fs mov adc xchg jno jnp ret cmpsb mov lods xor frstor xlat pop or and mov or add adcb cmpsl mov jle and frstor jg jbe (bad) mov stc lcall sub (bad) mov inc clc or fcompl push rorb adc pop pop jp xlat adc fstpl popa and dec lock jp leave test mov subl push inc xor sti or or movsl in (bad) push cli inc push cmp add xchg cmp fiaddl (bad) cld popa sti dec test and sbb repnz mov push adcl add xlat fs cmc shl push sbb fsubl pop dec in pop pop mov arpl pop or pop inc popf cwtl mov xor fs aam xchg push adc mov inc stc cwtl xor cmp jnp in mov testl scas (bad) push cmc insl adc dec clc pop sub mov pop xchg mov movsb (bad) fsubr xchg and fwait pavgw mov jae pop jae xchg lea or mov std pop repz lods and lret mov stos (bad) inc cmp inc in cltd (bad) adc jne and in gs cmpl jo add jnp bound push jae popf test fcompl aas add into adc clc xor jbe add rolb push sub xor bound stos xchg test sahf push imul inc test push fwait (bad) push stc mov std mov jnp stc and dec (bad) mov imul fdivs jnp cmp jmp aam mov test pop stos js or mov inc fsubs or mov sarb jns dec and or inc call xchg and xchg popf mov call hlt hlt into jbe movsb pop mov xchg fwait nop push cwtl insb jo xchg mov out sub dec inc fwait loope cld ret scas jns (bad) xor addl insl cmp lcall data16 scas (bad) jp jge decb sbb xchg add (bad) and add and psubsb add mov inc hlt and (bad) pop dec and rcr adc js sbb mov xchg mov push cmpl into arpl jae addr16 jbe mov jb sbb stc xor inc (bad) cmpsl jp add and pop enter addr16 fcompl pop es sub xor or jb pop push add rolb repz and test mov xchg out cmpsb and test fsts jno mov pop jb add and inc in jnp cmc and std (bad) jae out mov gs lret dec push aad add xor push push jne mov push jp jmp pop loop or xlat mov xchg fs movsl out inc adc pop cmp xchg jmp daa lahf and popf cmc push pop ret rcrb jno popa test (bad) push aas test cltd (bad) jp hlt mov xchg test xchg das fmull icebp fldcw loopne add jge jb enter pop mov lret xlat xchg fdivs push imul dec addr16 inc or inc mov movsl xor xchg push aad xor sbb call outsl push test xor add xchg sbb xchg cmp cmc push mov mov sarb inc or mov and sub dec (bad) ds cmp xchg pop add inc inc xor jne call neg mov rcrl les les das sub or xchg sbb dec int cmp pop lock mov push lods xlat add mov push movsl les mov jp adc pusha lds add push push sahf mov mov mov pop jecxz push pop push (bad) xchg mov pop fdivrp jle xchg xor pop jle fucom jp push inc clc aad adc pop sahf cmp push stos out cmp xchg cmc aaa dec cli in pop js and pop lea inc stos jmp mov mov or inc adc adc push js mov icebp icebp pop sbbl mov gs inc into test inc jne jg xor in movsl nop fistpll fwait loope inc test jo cli add and mov outsl divb pop iret test fmul mov pusha dec lahf iret xchg ret (bad) mov in outsb lret inc mov scas loop fsin ret insb jge jl shrl sbb out out rorb lret dec adc stos std add (bad) gs add push loopne cmp in es leave leave pop test xchg mov and xor lods and cld sbb and push imul call (bad) dec xchg sub sub sahf sbb lret pusha jae xor lret mov mov flds sub fdivrl dec add mov fdivs and xor cs (bad) xchg inc lds (bad) lret stos call lret cmp movsb mov mov lods and push or pop aas jnp add push mov ja (bad) (bad) adc dec fbstp xchg mov movsb (bad) and test movsb in jg add xchg cmp push rorl in dec push or int3 adc jg ror mov and negl sbb and fcom mov mov inc jmp inc js mov loopne loopne pop xorb repz mov and lods pop jl xlat test mov mov cmp mov add dec jo loopne mov bound add cli outsb and out sbb test adc (bad) gs push lret ret pop inc jl xchg jmp mov sbb std jbe shr push fldt add insl push adc js fisttp or repnz sahf mov imul ror push jno mov nop or pop and aam test rcrl nop and cmp mov pop icebp pop or ss pop sti jb loope jecxz iret inc and push sub negb out ja xchg xchg nop (bad) mov pop in in inc push mul imul ret adc sub cli adc pop in sub pop in push sbb add (bad) stos or js cwtl mov in sub inc cmc loopne out xor loop xchg popa mov aam pushf push xchg mov insb jmp (bad) and sbb dec add pop cmp xor leave cld inc scas pop lcall lea xchg aad jp (bad) sbb fiaddl inc pushf nop or sub popf nop jno rcll mov out jle add (bad) repnz (bad) (bad) scas xorl cltd add cmp lds adc cld xor loope sbb in xchg cs fwait jp incl out scas shll inc xchg fwait in jg sub arpl mov sbb jae or dec (bad) mov xchg dec xor inc bound out mov lret (bad) or xorb mov mov xor in jb push in or (bad) pop jne xor (bad) sar push sub mov mov scas sbb jle xor sub sub add push loop or enter cld sbb les push repnz movsb or insl (bad) out or movsb test cli sbb push loope outsl jne ds push jns (bad) sbb adc scas add cltd iret sbb fscale xlat adc aas rolb jg cltd repnz data16 push fnstenv aam clc aas sbbl in mov nop into mov rol inc push incl push push das or sarl imul add xor (bad) sub mov or pop jl dec mov adc call pusha mov add sub xlat ficom stos in adc pop xor xor xor jl mov lahf insl divl out xchg test cs mov daa adc gs iret lea pop in sub push adc adc (bad) je pop pop mulb cmpsb loop scas outsl mov dec inc adc pop dec int3 mov (bad) cmp pushf mov (bad) and into inc pop test clc dec stos lds push mov stc push (bad) int3 push scas shll call leave nop adc sub push fisubl scas mov sbb ja bnd jb xchg fistl xchg cli mov test std adc mov stc mov sub and sub xor stc mov aam fildl test mov clc mov inc cmp push cmp js mov outsb xchg adc push cmp xor add lods cmp aam mov mov pop cmp mov lds scas stc int add cli aam js push jl fimul dec call cld repnz insb fwait (bad) bswap sub jo add popf imul (bad) or rolb lods imul scas adc imul mov rorb dec mov insb insb jmp xor loop in dec pop xor test ljmp add je mov inc ljmp scas inc pop test cs dec lock inc mov fidiv mov psrld movsl xchg push aad inc out insb mov mov mov ja dec (bad) add jmp xchg or mov jecxz jle (bad) out cmpsb jl cmp nop sbb push js int push pop out shrb ljmp jae jbe push adc xchg out movsl sbb fistp inc (bad) jmp mov jnp jecxz xor pop jae inc sbb add jae test and mov inc test mov pusha bound and cmc pop (bad) in ret mov int sarb or scas lea push mov mov repz adc jo cltd pop push aaa pop (bad) es rorl pop sbb adc add fidiv xor mov dec insb pop scas je jg and mov mov and mov jecxz orb negl movsl dec push push cmpsl sbb inc and mov (bad) addr16 test call push out ljmp scas cmp jp cmc adc call data16 daa fiaddl inc or (bad) pop pusha push loop nop stc dec je mov xlat and movsl dec inc cmp bound jmp or jmp pop repz dec mov loop je jo outsb dec pusha aas enter arpl or mov loope add mov std cltd dec dec test add mov xor repnz fmuls mov fcompl pop leave push mov std mov ficompl xchg fimul push xchg (bad) je lcall cmp mov adc xchg adc add cld imul aam jo roll loopne js cmp lret xor mov (bad) int3 sub ret cmp in ret loopne or push (bad) mov je jne bound insl mov shlb fistpl fistpl ss orl pushf xchg test rorl cltd add pand jno xor jecxz jl test out daa jbe sub jno fisttpl hlt sub scas cmpsl sbb push inc jo insl cmp lods sbb es or out aad mov in data16 out fwait jo ja cltd cltd imul movsb dec (bad) jns jo fcmove jne push out ja insl int3 (bad) and (bad) jl out lds pshufw jae (bad) out xlat pusha mov fdivp fsubrl lret mov jl cmpsb mov into and incl cmp ss mov jle and sbb loopne gs or dec or rol sbb adc outsl mov pop in lahf push cmp sub xchg data16 lods (bad) rclb das xlat imul xchg jno add incl rcr push or cmp push sbb push jae aaa and insl adc into das nop adc add mov xchg (bad) push sub pop push ret sub iret mov xor adc mov dec sub jmp xchg (bad) test inc push aas or cmpsb push (bad) cltd insb jecxz movsb jle sub mov fwait outsl nop push pop jge dec pop ret add sbb loop scas dec xchg xchg enter (bad) clc test stos aaa dec lret xlat push jmp rcll add aam nop das pop sub lods adc movl movsl ficoml mov push jne mov cmc or adcl hlt or mov std sti pop out nop push push mov gs sti inc or sub mov (bad) call mov mov inc sarl xor jecxz les pop xor sub adc shrl ficompl jle xchg xchg out jp les jno sbb push dec stos mov pop subl (bad) popf cmpsl mov enter xor mov dec mov xor cmp loopne mov mov popf aas fiaddl insl and inc dec fisubr insl loope cmp pop push lock cwtl ret icebp jo stos mov daa (bad) xchg mov test (bad) push outsb dec test add fsubrp adc and lea mov add ret pop rol adc inc cmc mov in xchg sbb std sbb es mov inc imul mov sarb mov mov mov movsb mov xchg in mov push psubd loope insl ss cwtl and mov mov out or jno jnp mov xchg repz (bad) fiadd fmul fdiv fnstenv movsb mov push les imul cmpsb cmp adc jno js xlat rcll dec mov mov outsl mov add xchg cmp xor popf rcrb sar jo outsl cmpsb test mov aaa or je nop cmpsb add icebp pop movsb stos cltd daa mov pusha fs stos fstl push xor mov fwait bound xchg flds xchg fild dec jmp lds jg dec lret sbb mov mov jmp stc arpl inc sbb pmaxub aad mov cwtl cmp cmp jp (bad) jbe fist aas xchg mov mov js mov push and addl pop dec fsubrl jns test and arpl aas adc rorl outsl xor mov ret sub add test cmpsb inc xor mov addr16 (bad) fcmovu pop xchg popf mov loop push inc fildl pop aam add aad adc outsb jecxz sarl fbld imull test bound or xchg idiv andl xor dec adc sbb pop sub (bad) popf dec imul aaa sub cltd push xlat xchg in cmp xchg pushf mov loop ficoml adc jecxz scas in lods adc or sub in jg int dec out lret es jle cmp mov jnp lcall adc sub and bound dec cltd (bad) push cmp add sub fnstenv inc cltd icebp mov dec loopne es stc jo nop aas aad cmpsb push mov orl or push pop cs les push cltd mov (bad) cltd leave into and pushf mov cmpsb cmpb push adc push rcr mov ficoml jmp clc clc fisubl pop aad cltd push mov mov test xchg mov jle sar clc jb outsl jp mov inc or (bad) punpckhdq popf push sub fcmovnbe cld pushf pop dec or (bad) icebp fs lret idiv outsl inc stc std (bad) and mov shll xchg scas int or add and mov lock addr16 loopne inc mov xchg cmp sbb cmp adc mov sub push pop sahf mov push jl sub mov sub sbb pop sbb jmp adcb nop mov mov dec jae fcomps je pop xlat xor es das lods (bad) icebp fimull call xchg fsubrp dec mov mov cwtl xlat push adc stc jo push cmp outsb jle add inc mov sub sub call sub push out mov pop and xor jmp out out sub notl and rorl add xchg or add std xchg mov andb push mov pushf add push hlt mov (bad) gs aam rcrb push add lcall (bad) sub fcoml or fidiv push jp adc sbb mov pop out fnsave out movsl xacquire lahf pusha (bad) mov sbb add mov adc mov sub cmp push inc sbb mov sbb cmp in adc daa fisttp mov push (bad) shlb movsb loop into cld add xchg push adc and out xchg ds es inc ret fs leave movsb (bad) aam sub leave in xlat xlat xchg xor mov std inc jp dec insl lret shrl rcl setl in push jo xchg xor mov mov int aaa rolb subl lods add into xor mov mov adc pop and dec mov lahf and ja jecxz das jge stc (bad) fcomps xor test adc into je xor xchg rcr (bad) pop jae xor push inc addl movsl repz sbb or push sub (bad) leave fsts lret mov mov xchg and mov mov lahf lret mov test mov sub in and lods sti std jge mov mov outsb enter loope cs int3 mov jo aad jmp cmp (bad) push push cmc in xchg mov inc lock push cwtl sbb movsb pop sub mov mov mov push dec push sbb lods cs push push add nop pushf adc push cmp movsb adc loop pop inc loopne push int out pop into mov xchg fs dec je mov lret cmc xchg aaa pop jbe shrl pop mov mov mov fldl js pop shl adc (bad) stos test cmc mov fimull and adc lcall push aaa mov movsb (bad) je dec mov (bad) in popa dec popa inc mov shl (bad) and lds add pop cmpsl iret jp cld cmp push stos iret push mov outsl jp pop mov jecxz scas into fsts stos dec sub cli push xlat push sub imul xor mov mov (bad) je inc popf les lods movsl add jg mov mov js sbb pop js lods test and sub and mov movl sarl xor cwtl push cmpsb cmp in leave mov xor cmp xlat test mov in lcall data16 xchg jb fwait cmp movsb notb xchg (bad) int3 push jle outsb pop and lcall jb (bad) xor push or dec add mov test cwtl ss rclb lock daa mov test dec ror jl and (bad) sub adc sub icebp popf pop outsl push scas sti push shll push fcoms cmp pushf sub mov or in cmc sti xchg imul (bad) (bad) xor add fwait push dec push dec lret jge sahf adc cmp jbe andnps movsl cli in fbstp jbe dec pop mov mov sbb in adc rcrb rclb pushf pop rorb fistp (bad) nop adc stos call aam in loopne repnz mov cs push cmp lock int lcall sub sub sbb cltd je dec dec mov xor ret push es shr adc into shl into cmp xor cmp xchg bnd call cmpsl nop dec addl out jp cltd adc scas loop sub mov adc and repnz and xchg cmp enter aam mov push jecxz notl adc ffreep xor sub jnp aas nop dec adc mov add xchg dec xor dec out inc fistpl sbb sub jecxz adc and mov mov shl sahf cmp and shrb pop mov arpl mov subb xlat jo fnstcw lods je inc stc lcall cmp and test push dec push aas in sbb jecxz or pop in js and mov int inc xor jnp lock pop dec sbb int dec and cmp (bad) jle or sbb mov jno ss pop gs pushf push gs push and mov lahf pop xor push insl test dec lret sbb movsb xor ss mov and mov je cltd popa (bad) ret push and lds into and stc mov xchg js sub int (bad) icebp mov xchg push push bswap xor xchg fstpl pop dec mov jle sbb sbb loopne (bad) in sbb push test incb ljmp daa std pop cmc inc rcr cmpb arpl fimull sbb loope inc mov inc adc xchg and push xchg adc xlat and rorb notl aam pop repz mov aad out rorb sub dec in or jne or das dec loope (bad) xchg dec mov inc dec movsb call (bad) mov stos int mov mov cmc fucom ds hlt and into push insb pop call lds movsl aad push ja (bad) lret push (bad) hlt bound adc sub xchg mov lods xchg sub daa mov pop int3 sahf into (bad) fsts or pop movsl hlt add fmul sub cmp pop and bound shll int pop sbb int push mov aam call and xchg dec mov pop lret inc je addr16 fwait mov int outsb imul inc lds and cwtl repnz hlt dec (bad) or jo and fs push push xchg pop pop mov mov insl fimul push sub push iret xchg add sub mov fistpl fdiv fcomps out popf scas out (bad) movsl lret and push dec pop idivl mov mov movsl das stos xor add stos (bad) in mov ja jae ja je repz sbb mov xchg mov inc add pop scas adc and push (bad) inc cmpsl sub movsl (bad) (bad) das push cltd (bad) lds xor dec rcrb lea (bad) aas dec sub mov push lea push and jmp sub push sub mov or xchg xchg cmp mov mov aas ret test int mov dec stc sub nop fcom add (bad) fs aaa ds arpl fs iret mov sub push mov or cmp adc and cmp loope inc sahf push loope (bad) xor dec mov mov mov daa xlat jle pop mov nop or pop out movb pop push orl dec and mov fstpl dec pop cmc mov mov in mov xor add incb in mov out cmp mov sub ds int3 inc push lret test aad (bad) cmc mov pop push cmp fldt lock loop roll push sti pushf test and mov inc shlb stc xchg (bad) das fldl2t test jp fistp dec pop scas or loopne fbld pop mov rorb sbb (bad) pop mov cwtl movups xchg push add adc popa addr16 test mov ds mov or jbe adc call (bad) out es adc push cld mov pop jl loope mov movsl jbe sbb lcall pusha or cld xor push lcall loop sbb mov ret pop ret push scas sub lret jae fnstsw xor ror sar add xor sarl (bad) aad cltd mov in pusha add push pusha add les ss fisubl adc daa inc sbb scas daa lods ljmp push dec xchg out sbb xchg icebp mov dec adc ja push mov push in cmp cmp xor pushf (bad) mov fadd mov sahf dec push adc inc jle adc inc mov pusha cmp (bad) push aas sub subb adc je outsb lahf movsb das jo add cwtl xchg dec sbb and scas jo inc push dec xor mov jno push addr16 lock rcll enter movsb ljmp jmp idivl xchg test cmp push and dec jb sti adc outsl pop and shl sub jbe (bad) (bad) dec inc cmp gs sbb sbb xchg lods or mov jp divb jne frstor xchg ret sbb aaa icebp scas fdivrs dec adc (bad) push fsubp jl je testl cmp xchg (bad) scas (bad) int3 dec mov loop dec or pushf sub dec xchg mov pop fnop test jo sbbl fwait shrl xor leave popf pop fisttpll in popf inc dec jne in pop jmp pop pushf fiaddl dec xor pusha dec jg sub aad add xor rcrl fcomps fisub mov lret mov jnp enter pop mov inc out xchg addr16 mov ja push fcoml sbb mov sub cmp or pop push sub mov daa stc sub pop sbb and lock fs xlat loope mov insb outsb cmpsb cmp fadds iret sbb pop add cltd inc (bad) jbe jge mov in dec push fsubrs xchg adc xchg mov fldenv enter push sub pop int3 (bad) lahf inc fs fildl push sub jns cmc jno fcoml fisttpll cltd adc das add jge in insb pop ret mov stos int3 inc xchg and sbb or adc test xor pushf dec and pushf movsb in leave mov mov mov movsb pop jg sbb or mov loopne add lods mov out sub adc (bad) repnz adc int3 jnp out pop adc jmp mov dec push xor scas sub fadds pop pop inc add xchg je pop out fwait cld pop pop cwtl shrd lret js pop jmp insb jg repz cmp adc push icebp iret adc adc je cwtl adc cmp mov daa or and push mov test mov int3 pop mov lcall push sbb mov cmp inc test cmp mov out mov (bad) pushf orb movl mov pop or ret mov sbb jns fisubr inc lcall cld lock cltd push sub sahf sbb dec cltd mov das or inc mov pop push test out xchg jne cwtl (bad) dec ret mov xlat jns pop mov pop mov mov lds dec xchg imul inc lret lahf aaa aaa mov in lcall aas (bad) leave pop fcoms push sbb push inc jns les mov cmpsl inc inc jns out in rolb xchg mov sti ds xchg push iret mov aaa ljmp in mov mov popf sbb fbld jnp aad xchg insb nop enter sub xlat cmp push cltd pop movsb xchg jge fmuls arpl sub inc lret mov xor push (bad) jl mov mov push inc jbe (bad) (bad) sub xor cmp aaa int3 adc sub push sub dec lds or pop clc std mul jmp inc xor inc jae mov rclb adc pop xor jns insl aad bound cmp out nop jg cmpsb add fcompl leave cmpsb sahf mov cmp dec mov shrb loopne xor xchg jg cwtl lea xchg jnp loop (bad) adc clc idiv in decb int mov movl jmp sbb insl mov paddsb repz adcl push xlat loop cld inc inc rorb mov out sbb test gs (bad) orl mov cli scas loopne sub and xor stos mov daa mov das sub fcoms jmp dec (bad) mov jmp pmaddwd jo std inc sub push dec pop mov testb movsb (bad) adc adc test (bad) shl jmp inc xlat mov je js ss ljmp mov sbb lret ret dec sbb inc test dec pusha std repz pop push aaa inc fcoms xchg jge jl sub in lea mov (bad) (bad) fmul push and mov push in sub xorl movsl cmc xchg mov inc in scas inc lahf or cld insb in cmpsl mov imul ret jp sub jnp sub cmc sbbl push dec or les in xchg fimul dec ss clc iret sub sahf enter mov psubb std call ret (bad) std pop jmp mov mov in adc jge lods pushf mov jp out xor (bad) and mov ljmp or outsl mov or insb pop xchg mov out pushf popa cs daa mov stos popf lods xchg stc lcall jae data16 cli dec mov mov mov cmp inc dec adc repz ficoml dec jb les push test (bad) push lcall inc stos nop inc lret int3 out sub ds or cld jmp xchg dec mov xchg inc or adc mov out pushf jno cs inc loopne (bad) psubd jnp decl iret sbb or cmpsb (bad) neg dec cmpsb aam add lock jecxz add sub push mov loop out pop mov lcall xchg cmp ljmp xchg stos push addr16 ret sahf (bad) repnz jne nop mov pop test add sbb mov stc lods (bad) xor inc sub jno xlat push cmpsl iret push push leave xor fldl sbb jb inc roll rorl loopne lods xor jne mov (bad) push test dec mov ret lret mov pop insb movsb int push stos (bad) or adc iret stos mov push loop push stc aam shll call dec ret scas lahf pop pop inc xlat aad insl aas fbld xchg shrl add adc (bad) sahf cmp xchg call roll push fmuls lock int3 (bad) cld jmp rorl test outsl bound mov test pop sub and mov mov sub xor xor fwait mov mov pusha rcll sub cltd xchg dec pop mov (bad) pop adc mov fcom lds out in and fsubl inc out jle xchg cmp movsb mov mov push popa xchg cmp std sub rol repz fs flds adc mov pop cmp mov sub addr16 or stos (bad) push push leave popa cld sub inc (bad) int mov fdivrs (bad) mov inc sbbl cmc nop jne pusha in jp adc pop sbb inc mov jno dec enter xchg push test (bad) out mov inc cli test dec popa push jl jo xchg data16 pop xchg mov mov popa in add decb sbb (bad) mov stc inc sarl push test in xchg outsl xor leave idivl scas push rcrl aad cmp (bad) mov sbb mov cld outsb jbe lods inc scas jno and jb pop mov fistl lock (bad) ret loop cli mov mov icebp and sti test dec or or xor ds test enter (bad) loope sbb dec fistpl fstl adc sub hlt cmp sbb pop scas mov es mov sub pusha sub stc lock popa pop sbb push (bad) xchg mov push jnp popf sbb ja insb data16 adc add pop jo insl pop add inc nop pop xchg or notl test ret outsb sub outsb call pop out cmp sahf rcrb jne sbb xorl movsl imul inc mov loope fs outsb arpl inc xchg and xor enter sbb mov repz mov mov push popf imul or scas inc xor test imul int3 sbb jmp inc jne xchg dec (bad) int3 data16 mov rclb jmp lcall xor insl add push jmp ror xor sub ror and cmpsl flds bound cmpsl ret je scas cmpsb push mov jle sub lock in xlat sbb imulb xchg add mov jns bound pop lcall nop jnp int3 push xchg sbb xor sbb (bad) or addr16 gs dec or or std movsb pop add fs arpl aas test cmp mov repnz push ficompl push sbb scas add jb xchg adc mov std xor xchg std jmp mov in dec cld mov popf scas sub jae lock and stos mov cmp mov out mov scas inc sbb add rol mov lea dec es cmp xor clc push jecxz in dec and mov idivb jge jl das and sub adc add mov mov insb outsl icebp mov pusha adcb lret es gs or insl add mov stos mov clc cmp xchg sub mov stc jmp mov sbb mov push cltd sbb jb dec xor mov fisttpl hlt adc outsb test pop and push outsl mov fistpl arpl or mov ror or icebp xor in xlat fild int sub jg jl pop rclb pusha testl addl outsl xor cmp mov pop lods les mov test xchg xchg and (bad) pop ret or lahf xor xchg iret push xchg inc popa fistl popl cs cmpsl cmp jae dec loop adc cmpl mov mov lods test sbb add push hlt mov je mov test leave sbb push mov roll add inc dec aad jo add cmp pop xor push pushf ficom pusha les ja sub imul std sbbl sbb aaa stc add aam je fdivp aaa insb xor pop outsb xor adc imul push test popf mov push movsl jg stos test int add aaa jbe add ljmp fcmovb fs lcall mov jbe pushf test scas mov push cltd dec and xchg mov cmpsl outsb inc movsl or or mov in jmp xchg test or or jge leave jo clc cmp aad mov shrb test jae cwtl jo cmp out arpl rcrl push jg cmp push jo,pn pop push xor shrb or leave and xor (bad) mov push es mov lahf and mov cmp xor dec lea mov push pop out or mov popa and repz pop into jno ljmp movsb jbe or jbe dec add mov scas fisubrl cltd cwtl insl daa dec mov (bad) gs arpl test cmc inc or repz sub jns lods dec imul jg pop dec adc lcall dec int test and in adc int3 cli and jmp (bad) and data16 push jno push jmp pop sbb or out xor xor in dec and or sub pop push sbb dec push pushf jle jns fcompl (bad) sahf negb xor (bad) jecxz pushf fs inc xchg fsubr jmp pop mov xchg in aaa cwtl imul div cli dec loopne inc lods mov sti jb mov sbb scas push outsb sub lcall and sub or lret and sbb outsl pushl rclb pop dec testb or scas test push in add mov xor jecxz push fs add cli test add inc test mov cmp in sub leave test sbb mov pop inc lret and std and es pop test repnz sbbl mov pop clc lods dec mov mov mov lods or pop cmp inc pop dec and mov cld arpl in sbb pushf push jne pop sub cwtl ret jno push cltd cmpsb ret mov xor insl repz cwtl xor fcmove jne mov pop mov inc loop popa roll xchg inc pushf ret pusha push into dec pop (bad) pop ror cwtl ss scas stc jae and cltd pop pop push pop ret cmp mov xchg xchg imul pop and cld ds jb dec iret jnp out mov add fbld xchg xchg jle sti sub repnz outsl sbb push (bad) sub (bad) pop inc adc pop dec imul push xchg (bad) mov and mov and divl mov cmpsb lret mov push (bad) aad int3 mov out jb mov mov jmp cmp test mov mov cli rcl pusha pop test aam adc lock jb inc pop dec jne pop add pusha out add push in daa rclb (bad) jp mov pop or ja cmp (bad) ret push mov push lock fwait or pusha jns ret dec push or insl mov adc cmpb das sub test icebp int out (bad) push jg inc xchg jno xchg pop js cmp and (bad) mov test jle xchg scas test stos aas inc adc fisttp cmpsl dec idivb cs testl (bad) cmp (bad) xor adc and pushf repz inc or mov lahf fmuls sub jp dec xchg xchg push mov mov sub shr mov imul push xchg xchg dec fidiv dec jecxz mov ds dec sbb popa xor dec sub out in scas popa jae out adc pause jno mov pushf (bad) adc jnp adc xlat xchg sti inc cmc movsl push test rorl ds cltd pop jp dec mov leave mov fcmovbe icebp or xor pop test mov lods xor lods inc or fwait (bad) loope test imul jg fbld lcall mov js inc xchg js mov adc inc cmp sbb ficomp pop ret lcall fisub add sbb testb mov (bad) pop push outsl sti mov outsb icebp cmp inc bound fwait ds mov lods jp cs mov roll cld in pop lods mov fstpt popf (bad) call push cs cltd sbb dec and popa cmp cli ljmp pop cmc pop sub push loope je jae pop fldenv insb jbe fidivl mov xorb mov jb out addl (bad) xchg popf or pop rcr xor xchg data16 cmp xchg add jns movsl into jae out sub std mov push aas (bad) stos and loopne in nop clc pushl gs cmpsb mov push and out sahf sbb mov std test (bad) sub js addr16 (bad) leave cmpb push stos xchg sbb pop mov mov sbb jge cwtl fs pop aad fs data16 popf jge and and sub xchg repnz popf cs or in nop xor push (bad) jge ds mull mov shlb xlat sahf in lds fcmovnu xchg push fist mov sub mov and add lds inc sbb iret test jae cltd loopne push fidiv cmpsl sbb lret ljmp mov inc mov mov xchg jge mov mov xor repnz mov shl pop les mov (bad) clc enter jecxz shl pop adc call les mov mov and jg inc call imul push mov pop push dec rcll mov sbb cmpl aaa out xor movd dec bound xchg xchg pop jbe add jp add stos adc and enter shrb mov sbb xchg inc inc jnp ljmp push cmp mov mov dec lods xchg sub mov xchg imull or popf mov cmc sarb push xor inc std (bad) or mov push idiv jle and or mov imul push push and fcomp add cmpsl adc mov andb cmp dec pop pop stc cmpsl xlat push (bad) mov lock call repz mov (bad) mov sub cmp (bad) out ljmpw jmp add and push pop xchg pushf push aam inc jne dec (bad) outsl pop out lock push add fcmovnu in inc adc lret enter jb repnz pop fisttpl jns mov pop stos das stc outsl cld mov adc pushf scas cmp xchg or sahf sub push mov xor inc aam hlt jbe lods add mov es sbb fs sbb dec flds and int3 les push xchg adc cmc test jmp xlat (bad) clc test push (bad) lods add ret into notb inc add xor js lcall add movsl cmpsl dec ljmp or or xor mov out fdivs mov xchg leave out sahf pop loope pushf iret inc in cmp xchg shrb mov and push repnz popa dec sbb mov xchg andl and cs outsl mov mov jnp cmc push sbb mov in movsb jne adc xchg push push xchg shr cmpsb xor je sub dec gs jecxz sub fisubrl or push int3 fldenv cmp loop cmp into mov vpmacsdd test sahf and xchg or lock mov aaa outsl sbb cltd add add iret xor adc lods out pop push mov fildll stc mov add jnp stos mov push jnp mov popa js jmp mov push enter (bad) mov xor inc shlb test lret dec dec dec mov into mov mov push je movsl enter xor inc and insl out push jb sbb cld and movsl iret sub pop pop jno test clc push mov mov rcrb mov repnz inc (bad) sbb push and das jecxz hlt sub add sbb lret inc les lahf pop lret in adc cmp addr16 pop ret insb and aaa fstps imul push adc add pop test jno push pushf sub jns cmc xlat ret push dec (bad) cmc jb pop in dec xor xor mov in addr16 sbb inc mov and out sar aad dec mov rcr push fstpt push push iret std push out xor and jecxz inc ficompl lahf xchg jns pop sub cmp pop sbb (bad) mov mov or cmp mov adc mov adc shrl xchg sbb jo pop in mov jmp imul dec fmulp (bad) ja sbb ret lcall mov repnz mov leave jo lods xor mov sub (bad) ss divb in movsl add mov mov ror scas cmpsb dec clc fstpt xchg and loope xchg mov xor mov loopne js xchg or adc loop pop push roll adc xchg adc jecxz mov push xchg cwtl imul xlat add inc pop inc fisubr sbb cmp ret cmp mov add pop int3 adc sub inc repz adc jmp (bad) adc pop inc add mov xrelease in insb daa mov add dec sub test movsl stos aad lock dec daa inc into sub pop push jb xchg mov mov lret sub mov jg repz fist (bad) das insb add push add jae jecxz jae jmp cmp frstor ret mov xchg test sub ret push negl add jecxz or mov add and pop cs imulb and or lret cmpsb leave xor or lahf inc mov dec iret cmpsl add cmp movsl aam lock pushf xchg pop pop xchg push scas das sbb stc nop cmpsl jmp cwtl pop aam ja fcmovb jl or cmp and pop lahf mov pop sub cmp arpl (bad) jno sbb sbb xor jnp mov jmp rcrb mov mov mov sub popf sbb pop mov roll xlat sub sahf mov rolb test (bad) in clc sbb lret mov and popf aaa xchg bswap outsb ficom and pop mov imul fsubp push (bad) in in push xorb jbe adc rol sub push jns cmp xor sbb cmp (bad) dec jbe sub push (bad) and dec fucomp sbb fisubrl jno push jl cmc addr16 mov cwtl imul adc mov xchg imul repz or in pop push fldt pop aas ror test int3 insl out loop mov inc xor (bad) and pop mov cmpsl mov enter js das jno add adc ret popf fwait push sub sbb dec or repz sub aaa jbe bsr aad mov mov jbe fs imul inc lock dec pop out push jl pop jl fwait xor (bad) jl cld fwait push lds int cs push adc inc dec in jo xor and pusha mov fstl jo dec cmp stos test mov icebp inc dec stos push add xorl sbb fidivr in in xor mov fwait pop adc push (bad) mov or jnp lods test ret cld psllw lds push mov xor rcl fnstcw leave adc data16 jmp cmpsb and ret or push test jbe xchg mov in mov js mov sub xchg sbb cmp mov and adc les in fwait lcall adc xchg das enter loopne cli sub mov je insl sbb push sub ja ljmp push fnstcw cmp cwtl add mov std lahf (bad) imulb push cmpsl js fstpt jne fistl mov xchg pop add scas aas ret adcl mov js ds rcl imul data16 mov fldenv (bad) loope inc push out cmpsl inc or or movsl mov jecxz push test push test sub pop xchg xchg sbb pop ja ds rcrl xchg inc add xor or repz add fs insb push into dec mov xchg mov push aaa pop adc pop mov jae push or icebp mov (bad) jno mov bound mov rclb inc (bad) mov pop rcr xchg cwtl inc dec outsb cmp cltd (bad) mov mov (bad) arpl mov nop or jnp mov dec pop add lret mov adc enter xchg jp mov ficoml pop insl or inc inc or rcll repz aaa xor pop (bad) lds adc add leave lds jnp sbb jecxz icebp in pop (bad) sbb add dec out pop pop adc add lret jl dec clc rcl roll sbb sbb mov sub push shrb inc lds rclb and lea popf xchg jne lds (bad) mov xor mov push inc sbb shlb or cmp fldl je aam fdivl xor fmuls pop mov sub adc adc pop ds pop pop xchg cmpsb jl sbbb sub xor xorl cmp adc movsb inc outsl icebp rcrl out int loop cli loopne mov sti sub and add stos mov or aad daa outsb out cmc pop jecxz aas xchg in js pop loopne sbb je leave xchg lds pop mull and inc imul hlt (bad) mov cmc mov xlat shrl cmc xor pop add pop pop push adc mov imul es xchg popf jmp add push adc lods mov or cmpsb cmpsb xchg bt (bad) adc push xchg jmp je lahf adc dec sub movsl gs jbe in sub daa xchg movsb add (bad) jb pop pop push fsubrl mov outsl imul sbb mov mov aad in call addr16 xor dec lret dec sub or and sbb inc push lahf inc mov jne dec xchg adc adc pop popf fwait adc lock sbb sarb fimull push dec lock xor es sbb jns loop cmp cmp jbe fstpl stos mov loop mov call jns,pn jo inc mov inc icebp jne ret mov insb daa mov sbb testb mov fst out out dec mov out lock in (bad) sbbl fs mov xchg dec addr16 and mov cmp ror mov jmp ret enter push add dec mov xor sbb cmp push iret stc push jp shrl fwait in lods mov fimul imul je dec imul test pushf jbe std jo je push sbb negb dec adc lret test loop mov movsl mov dec mov dec xor jmp jle fs rep jbe pop leave aaa (bad) lea lods outsb les cmpsl stos mov in inc icebp inc je lods mov xchg out pop clc mov int3 jp jae into push sbb pop loope jmp fsubrs sub dec int3 inc jl xchg cmpsl push push test mov mov ret or xchg add fstps rcrl pop aaa mov mov sahf sti xchg sub or inc mov notb jne insb jo mov cld dec cmp xchg sbbl iret rcl mov nop push xor rcrl cmc sub insb jge add faddl enter pushf xor mov sbbl dec mov repz mov aam jg sub iret cmpsb fisttp sbb idivl mov mov xchg loope cmpsl aaa push inc xor add je les xchg mov push xchg je js jnp enter test xchg push mov inc movsb jl push (bad) lret std lea mov sub sbb add in sub fnop out inc sub push mov push xchg mov cmp sub ret adc ja (bad) nop mov int3 inc push push and mov mov (bad) mov test icebp cli jl fsubs std stos into adc adc xlat jns cpuid mov push in dec mov cmpsb imul jmp in in sbb sbb pop mov andb sarl jne (bad) mov insl push ret sbb mov xor jae pusha pop call mov ds sub movsl rorb repnz repnz (bad) out adc or xor jl cmp std push fucomip out scas xchg clc cmc inc push sub and add idivb lahf subl sub mov (bad) stos pusha mov lock out push fadd insb loopne xchg sbb inc pop in cltd js push nop mov (bad) pop lret jo loopne test lea (bad) pop popa leave and xlat imul jl mov add push (bad) test or xchg xchg jae bound shlb data16 ja cmp cmp sbb adc mov mov mov imul or and xor dec sub outsl mov inc daa enter push (bad) push sahf icebp mov insl xchg in out xchg pushf in js addl stos inc push out mov cmpsb lcall or aad mov lds test adc (bad) pop stc shll (bad) mov clc pop adc add icebp xchg movb out inc mov xlat mov mov dec xchg xor pop lods jno out fbld test aas int3 pop ds int sub mov jge jno repnz dec mov jns push outsb ret or add sbb mov lds loop push mov pop pop jno fs push inc jo pop (bad) imul dec mov ss (bad) in gs outsb xchg imul (bad) sbb xchg xor daa stos or dec add dec out and pushf addr16 mov lea out mov rolb and adc xlat adc or aam push std xor mov push pop lds push mov mov adc insl pop lods pop mov cmpsl push outsl pop inc (bad) pop lods ret lahf ja adc mov xchg je add push bound xor jo pop cmc lea addr16 jecxz ja mov leave adc das aas pop jnp pop jmp inc in pusha pusha push cmc pop insb and mov xchg loope outsb xchg mov add xor cmp (bad) add (bad) jge xor add jecxz js cmp pop mov loopne cmp cltd xchg cwtl mov out fadds hlt sbb xor cwtl into fdivrl adc hlt sbb mov lret add or outsb fwait adc mov orl adc cltd fwait push imul lods pop push xor xlat cmp pop mov int3 sahf mov sub test sti adc push bound call mov call les jo mov nop movsb pop bound hlt incl add sahf cmpsl xor dec idivl loop loop cmp in js xchg push or into repnz mov jnp and xchg mov mov es sbb jo lcall std xchg pop push sub leave movsl (bad) jb jae ret cmp stc mov mov jo adc js pushf repnz inc out mov add jae xor adc push rorb rcl push xor mov andl and stos mov aaa add rclb divl lods das add (bad) dec inc inc xchg inc roll jo mov inc leave sbb pop cmpsl inc frstor jnp fldl into insb lods fwait sti mov divb gs pop xor es (bad) mov stos dec mov cmpsb push jp jle pop xor cli les out jae inc xor sub adc addl test outsl pop mov cs push xor cwtl push jmp sub mov andb inc divl jmp (bad) dec das mov xchg daa out mov fimull push pop pop sbb scas stos sti adc ljmp cli movsb lock pop mov lock aad or stos adc sbb insb xchg lds inc aaa popa mov and ss adc mov cmp stc mov sub push lds cmpsl mov dec jecxz jl in or xchg sbb fcmovne pop cmp (bad) mov sub mov pop xchg mov inc repnz cmp popf pop mov out pushf sarb aas scas std scas or or xchg shll insb jp add outsl xchg cs pop mov addl clc cli movsl or stos pop or fnstcw ss cs (bad) sbb sub push pop mov lret xor cmp pop xchg fwait gs fwait jnp lret add ds xor mov mov jo cmp (bad) mov and mov push cmp insb es pushf add bnd lret xor jg add jo call (bad) ss out (bad) loopne push sub loop dec jbe lea mov lock loopne mov lock cmp sub int3 or (bad) in sbb pop stos add lods add adc push pop pop xor out mov push and lret in (bad) mov xor popf sub xchg test std test or imul test imul stos and (bad) xor push jns fdivrs or enter pusha jbe ficomp mov test mov push jno (bad) popf xchg dec loop icebp inc mov xor ret int3 sub add push ds and xor pushf rcrl les mov dec lods in push rorb jle cmp mov lods mov jmp cmpsb mov adc insl loop add pop push lock enter cli push insb jns lock push jb sub ss mov mov cmppd lods xlat fiadd scas mov sbb cmp sbb in insb xchg jno adc mov push shrb cmp mov jns pop xchg addr16 hlt push mov xchg and cmp jp mov neg xor popf mov std jne sub sub xor pop fptan cmpsb xchg ja cmp adc mov sub psrad cs repnz lods incl loop lret xlat xchg lcall jge push xchg int or push fwait jmp xchg cmp push lea ja in and or mov sbb popl (bad) notl mov stos add aas sub pushf daa adc inc incl or iret sbb sub pop sbb sahf fs std mov or iret sbb jae xor mov lods fs xor pop cli xor xchg fwait sbb sbb insl (bad) lock push (bad) call test lret std pop stos mov push hlt adc jae adc pop (bad) lcall mov cmp mov sub sub clc aaa or pop push ret push je pop cmc sbb aad dec dec xor mov in and subl pop adc mov jmp rcr mov cltd imul hlt mov lods mov cli (bad) rcl imul adc out jl pop and fs fistpll lret adc ret add add repnz faddl out sbb push pusha test inc add arpl (bad) je lods mov mov inc push int3 test xor outsl add imul mov jle lea fstl loopne mov sbb xchg mov jae and mov popa or in negl xchg sub xchg sub loop fbstp dec repz pop sbb data16 loope and jb dec xchg add xchg cld jp out (bad) dec mov cld jg mov out and xor out clc aaa inc pand adc push fwait inc (bad) leave cmp arpl pop mov ljmp push add add jae adc sbb xchg mov jo dec addb out or out ficoml pushf mov outsb or pop and dec imul jmp lea or dec dec xchg add pushf add lods lods das xchg fs (bad) testb lcall mov inc repnz push jecxz gs push pop pop jnp mov aaa fnsave xchg adc movhlps xchg cmovno pop lret insb push inc std outsb jnp jnp lret xchg shr pop ret mov in pop dec xchg clc push xchg sbb dec shrl shl (bad) mov xor cmp cmp or jle cmp mov jge lods fistl fwait test repz xor fnstenv xchg mov aad out adc lcall or cltd adc inc add add and add sub or js out add sbb scas ja cld cmpsl fwait xchg shrl leave push pop or mov jns ret (bad) jge lret xchg cmc pop sub loope push popa popa mov mov dec dec dec mov xchg pop in add cmc xchg pop out fstpl inc jno jae sub inc xor sub fimull idiv sub mov nop sub sub test lods mov push push test ja fs daa lahf jmp (bad) xor sbb dec lcall cmpsl es push jnp cmp mov stos scas lret cmpsl test add sub xchg pop mov dec addr16 imul cmpl mov loope ret xchg icebp call xchg jnp xchg in daa sub loope enter bound jne sahf dec cmc sub and rcl enter sub adcl pop pop mov les mov cmp scas sbb mov inc icebp cmp in ljmp lret ljmp dec add sub cli pop push or nop mov pushf inc mov sahf loop gs ss push mov stos pop loop arpl fcmovnb push lret xchg ljmp into fwait cmc add into jg outsl mov mov insl inc daa pop insb and movl mov jl pop stos decl cmpsl and sub scas movsl sahf lret hlt (bad) add int3 aas ret insl add orl pop fsubr xchg lret push add pushl sub pop push push dec (bad) xor (bad) repz jg movsl adc aaa (bad) mov add adc insb aad enter stc cmpsb inc sub push dec cmpsb pop sub pop sar movsl and repnz clc inc xor pop sub push (bad) push inc sbb push pop mov mov xchg lret je push pop add jno (bad) clc jbe out mov bound rcrl pop inc push ss bound shll stos test js cmp cltd (bad) std rcl jnp ds add sub xlat or cli dec bound jb repz mov push cli sbb add (bad) ljmp mov xchg jbe jbe ret adc test xor (bad) fsubrs sbb adc add adc roll xor fdivp push jge cmp sti add push in lods mov (bad) sbb rep xor pop mov lea dec fmul fmul inc mov xchg cmp mov push mov ret lret lcall enter sbbl (bad) and aam movsl pop cmp stos lcall jg mov dec mov xchg rcrl arpl push and mov pop sub pop sub xchg xor push adc (bad) out dec xlat sahf jge pop mov out imulb mov xor add nop ret xchg mov fisttp sbb leave pop test xchg mov sbb sub add mov lods mov (bad) mov stc jne es popa or push ret sti lahf lea or in push les aam inc lret xchg sub or jae movsb sahf xchg inc mov pop lret adc xor in pop mov pop lret hlt jo ds ret (bad) out push inc mov popa in add mov add imul jge in mov (bad) shl push fisubr in sbb add icebp jg (bad) js or ror add mov mov mov lods ljmp cmp adc or xor loop xchg aas outsb push push loop stos nop sbb jecxz js push lds inc dec mov scas xor xor lcall jnp repnz push jge adc push mov stc test xor push aas sarb add mov outsb pop or adc and mov inc jl in iret fs ret adc fmuls mov ret mov (bad) cltd add (bad) ja (bad) divb xor jl in mov add andl out pop icebp xor mov dec fist add int3 inc (bad) sarl push sarb add scas jle (bad) repnz xor mov sti pop sbbl pop addr16 shlb adc sub mov mov test movsl mov push dec pop int and das sbb jl push xor popf fcoml xchg mov adc or lret sbb (bad) push xor aam orl out std lcall out lods dec enter lods and outsb ret sub cmpl hlt adc sub dec inc add dec (bad) xor inc adc in insb fs and outsl or sub mov add enter and or lret pop stos push in cmp testl adc mov daa sub repnz inc (bad) arpl (bad) popa mov jmp jg xchg mov lret (bad) out mov (bad) ja or sbbl dec sub loope call lock aaa dec xor fcmovu mov insb cmp dec subb push or dec dec sbb and mov adc aam fs or sbb push and jmp sti lret fld out inc std inc and or adc pop mov repz mov jbe pop insb (bad) sbb adc int3 ret repz fldcw mov mov mov pop sti pop xor mov jg call push sbb push add jae and test loope in bound dec and hlt pop push jmp cwtl sub adc ficoml out push and pop or (bad) push shll shlb pop sub stos add insl dec push rcrb (bad) in fbld mov ja cmc lahf sub rorb jbe mov push and daa das jl push lds xchg dec mov stos out fistp jbe lods sub or ret pop into adc stos sub icebp xor xchg or sub daa jnp roll or clc jp xor mov and dec or adc mov pusha pop mov jbe jle test add lcall dec mov xchg (bad) fistl out xor dec sahf xlat and adc addl insl pop popf pop je lock in std aas outsb lock (bad) mov dec xchg enter adc xchg rclb xchg sbb ret loopne push hlt dec push (bad) addr16 lods (bad) cmp xchg adc jge xchg push addr16 or jg mov jp adc xor es jb aam mov and in (bad) arpl sub dec mov out sbb jmp and les fist xchg mov adc mov mov cmc pop inc pop xchg inc stos (bad) ja push cli dec test out loop lret loope pusha jle pop outsl xchg call add test jbe xchg push push pop inc gs scas mov mov leave mov add or push sub and scas rolb lds (bad) cvttps2pi loop jns psubb imul and push insb lds xchg pop sti mov fnstsw call ds fdiv aas outsl adc pop pop fdiv sbb or ss dec xor add add xor daa (bad) adc stos dec das jecxz jae jns test cli jnp add mov dec mov xor (bad) out int mov mov cmp xor das aad dec push aas loopne cmp mov sti and outsb mov lods (bad) jbe lcall pop mov jne icebp pop or pop pop out sbb lds adc mov pop insl and adc cmp icebp dec and fiadd or fdiv stc or aad adc adc mov cmp test and sbb push fdivs push sti cmp movsb adc pop in movsb dec pop xchg fld1 xor fmull repnz adc pop jns sbb lods les jnp xor cmp mov inc loop xchg loopne outsl push addr16 shlb enter push adc pop test ss imul xor (bad) outsb mov loope adc jg data16 je dec mov mov std sbb jnp jne popa jae cs mov cs and icebp mov inc cltd imul cli cld sub mov lcall es sub lret dec cmp push jle cmp cmc repnz sub insl jno mov cmp xchg mov aaa cmp or cmp cwtl (bad) mov mov bound xchg sub pop mov stc test mov mov pop (bad) xor gs jb xor aaa cmp inc sbb mov repnz fwait (bad) sub dec pushf jecxz scas int fldenv pop adc push sbb shrl xor out ds in inc repnz (bad) inc not ss mov push push mov sti stos ret lock movsb mov int3 aam inc shl (bad) adc push xchg mov jge or pusha dec inc cld out mov dec cmp cmp pop enter and clc mov repz in pop jl or xchg fcmovnu aas lock cmp bound jne imul arpl and rcr adcl or ret leave cmp ljmp adc dec loopne popf addr16 push sub std add dec ds or add cmp mov add fisttpll movsb mov repz ljmp int3 pop cmpsl js push repnz push daa (bad) mov gs xchg (bad) lea std sar lahf xchg lahf dec jp sbb lahf in pusha loopne movsb jmp push fistpl out mov out adc mov mov mov xor in jae inc push mov stos insl jo mov adc (bad) mov mov cmp inc arpl insl mov (bad) mov ja inc dec and pop sbb inc mov jmp pop or scas loopne out pop inc xor arpl push mov outsb sub pop loope adcb xchg fisub cmc cmpsl xchg add mov je sub xchg mov ljmp mov les jp movsb (bad) nop shll jle test popf sbb push mov (bad) pop fsubrs test lret int3 sbb inc adc jns lock mov lret gs imul mov add pop cmpsb insl aad add shl lods addr16 nop xor cld mov repz fnstenv dec push pop lock and inc seta mov mov (bad) rcll adc inc fcomps jno inc outsb mov xor sti inc push clc dec hlt mov test out mov hlt rcll mov fucomi dec popf sbb mov mov inc ret outsb and mov dec push in fdivrl jp mov sub jp adc sbb jmp and mov push and aad add or int3 in lret in mov cld pop fdivs (bad) out icebp xchg or (bad) in pop mov push lods xchg outsl jb aaa dec scas dec add out lock push sbb or dec stos cmp mov stos iret call cwtl ja (bad) js scas jmp mov test pushf sub lea ret xor sahf unpckhps es or loopne cmp test dec xor jmp cmpsl test cmpsl push (bad) popf xchg (bad) arpl xchg inc push enter cmp fwait ljmp fwait (bad) fstl push dec (bad) mov adc iret std jl icebp add xchg add call fninit pop lds adc add mov movsb xor aam fisttpl stc xchg jae or test iret pop pop cmpsl pop orl add lahf inc or sbb pop fs loop repnz insb inc out sti mov je shrb push jns stos loope rolb int3 sti or push xchg inc fnstenv mov pop in xlat pop adc xor push push push jge out sbb dec dec jle clc push stc std adc into jno sahf xchg notl test lods sub xchg jg xor mov dec mov dec mov enter inc data16 mov je inc hlt jmp rol out aam lods mov stc jbe mov xlat test imul hlt in or pop jmp jb adc xlat cmpsl mov rorb push pop outsl pushf cmp pop jp fcmovu jo,pt sbb or int3 or fsubp out aaa push ficoml and push xchg es push stos scas movl stc roll into test and stos cli inc mov pop jge push imull loopne lcall shl jp and das sbb fistpll pushf inc dec push push negb ret jno cmpsb push add loopne fnop test mov push jne lret loop jge pop sahf mov cmp dec and add mov test imul pushf jb ret (bad) push xchg dec sbb int std in hlt xchg aaa and aam push push push fstpl ljmp nop xchg pushaw xchg sub dec test xor (bad) cmp jb imul aas sub bound dec (bad) or stos ret cmovns xchg pop jecxz or imul aad mov dec (bad) pop dec fnop sbb fiaddl (bad) jecxz jae mov mov mulb rcr xor dec xchg sbb rclb jmp pusha cmc fdivrs cmpsb call dec xor xchg jns jg sub mov stos dec xor call or (bad) loop hlt jae addr16 mov imul and mov cmp insl cmpsb js xchg imulb xchg insl or sub or icebp rcll add add push push mov movb (bad) mov dec shr push mov and clc cltd stc outsb das gs ljmp lahf push jl arpl fsubs lods adc sub pop hlt adc jg mov ss lret or mov shr js push adc cmp cmp or and sbb or mov sbbb sti lods call pop arpl cld and sub rclb fimul cmp pop nop in out lahf (bad) xchg addb xchg rcll dec das inc lret ret imul ret xchg and adc mov jno fwait int push popa cs bound xchg cltd mov bound cld (bad) aas fcmovu mov jo sub pop jl add cmp and (bad) add popf dec lods push cmc xchg test hlt clc (bad) jle rcll push mov adc mov adc clc add (bad) in mov std int3 inc xor inc cltd pop pop in jae xor inc popaw or dec mov push add dec or jle popf xchg cmp cli jl mov lods scas xor inc xchg mov (bad) jo xchg stos mov xchg lock cltd sub xchg shrb bound and xchg lahf cmpl fbstp mov fdivl sbb outsb dec out cmpsb mov fisttpl jl inc ss pop xchg fcomip mov pushf ljmp xchg inc cld cmp movl jl add push sub jo mov pusha inc xchg mov pop nop outsb int popa in loopne mov sbb cld xchg cmpb ret jbe xchg pop cmpsl and sub cmpsb xor mov xchg in pop insb xlat cmp mov cltd dec rorl out adc dec cli nop mov adc lock repz mov sbb push sub adc nop ror sbb xchg (bad) lock int3 cltd iret mov inc dec aad notb mov jnp or pop add or cmp push mov add (bad) lret cmpsl and pop pop cwtl test insb mov mov mov mov and mov daa test dec dec add sub add lcall or cmp pop sub mov cltd mov push in sbb cwtl bnd es mov test fldcw push pop ret sub in pop mov push mov sbb pushf scas stos pop xor repz jle gs mov js jbe jb mov sub cmp icebp cmpsb dec jo xlat or pop mul (bad) xlat pop movsl pushf cmc lds jbe std out cmp mov and aas mov in ss push dec add subb test (bad) lods sub jb lcall fidivr xlat out cmp add lods movaps jns in mov icebp ds cmc mov pop and xchg int fwait cs (bad) jle (bad) ljmp push or push dec pop iret outsl jmp nop leave fndisi(8087 nop or inc outsl or pop xchg sarl cmpsl iret xlat movsb rorb adc outsl jae roll sub push jle rol mov dec int cwtl out mov lcall call mull pushf pop mov repz out enter cmp push push pop and ljmp popa mov dec jnp hlt out push xchg push xor xchg rcrl dec inc loopne stc mov dec add mov push idivl adc fmuls pushf or pop orl (bad) fidiv pop scas mov addl test fstpt fcomps sbb int3 mov mov dec call stos pop popa inc out mov (bad) gs fwait enter inc push les aaa (bad) fisttp sahf (bad) jb lahf jnp cmpsb dec or roll cs aad stos mov rorl and mov adc sub mov sub pop jne jno xor push pop cld outsl sarl and pop sub daa sub xchg inc dec mov out fmull lds js ss fsubrs stc sbb mov cmpsb jmp iret fiaddl ss std lea (bad) dec mov dec nop sbb fmull dec xchg xlat or jg (bad) jbe and inc or dec adc js dec fdivrl lret mov jecxz and sub mov std mov jp (bad) xor arpl pop data16 imul sbb fsub adc inc test dec add fstps into push insb mov bound sbb jno jbe shld push lods sub mov xchg faddl cmp jle and mov insl loopne adc call add jmp (bad) ror inc push pop mov xchg es pusha and popa gs jmp pop call clc ljmp xchg pop mov outsb cs aam push jne jle in xchg mov pop inc and push jge mov movsb fsubrs jp loope movsb xor sahf lret push int in cmpsl sub xor mov (bad) std inc push jp or jbe xor push negl stos je imul cltd cmp push mov adc js out pop push ja jp dec xchg out xor gs orb or xchg sbb cld pusha ss cmp mov sub cmp sub xor imul add mov shlb mov adc adc (bad) std mov mov mov loope cmc or or vdivpd std stc jbe push lock or fdecstp mov cltd aaa jge shr cmp call pop cmp mov mov aaa sub dec jo sbb jae inc mov mov fs sti push mov ljmp cmp sub xchg (bad) in popa enter stos not xchg mov mov iret push mov mov ja sahf minps repnz sub mov push scas cmc (bad) xor repnz xchg addr16 cmp sub jo fiadd jmp mov testl repz push or jmp dec jno fsubrs mov pop pop pop sbb jne xlat jge inc ds fisttp stos mov pop mov push sahf cmp pop popf leave pop sub fstpl in into cmp lock dec loopne dec fwait sbb mov ret jo,pn mulb inc call jbe pushf fbstp xchg inc push inc lods xchg loopne sti cmp adc enter xor popa outsb sahf pop xchg dec (bad) inc xor repz daa (bad) mov xchg sbb mov cmpsl jg mov jns aam cwtl jg pop pop cmpb das mov cmpsl push (bad) in test gs jb mov xchg jnp add out out add push mov fucomp outsb push ljmp out push into mov fwait inc sbb jg add adc push jb jo jno in dec insl fs test inc mov rol cld dec (bad) lea int3 xor xor ss mov int (bad) cld in jnp loop lods push push fist imul test mov ret loopne sti jp mov movsl and mov lock jbe pop inc and pop dec test das cli es cltd dec movsb test dec aas cmc aaa or stos subl xor or lea jge out rolb out loopne jns dec outsl stos and adc mov dec out or cs fimul push hlt popa pop lods cmp enter push sbb les (bad) push push push jae xchg inc xchg loope jnp xor mov xchg int xor jno add loopne cmp mov push shrb outsb xchg in into (bad) cmc sub mov (bad) popl aam daa ss add ret nop jecxz xchg lods cmpsb push mov and punpckhbw into into (bad) jmp mov ds inc (bad) cmc enter dec jns mov cmpsl stc (bad) jbe cmpsb mov popf test sub adc sub mov xchg scas pop lcall mov xchg mov or callw (bad) repz out fldcw inc mov pop jmp or or xchg aaa jnp test pop xor adc push cmpsb mov fsubr adc stos inc lcall mov (bad) in push adc xchg scas es mov (bad) sub xchg hlt push mov pop (bad) hlt icebp sub mov push flds fwait xor pop xor or pop lret aad or jecxz stc or push (bad) lret enter jns xchg in or xlat sub rolb sbb jo mov or adc push push mov inc cmp repnz pushf mov mov push dec (bad) insb mov adc sti xchg jo add fmuls std jae in hlt loope insl stos scas fcmovbe or icebp ja push clc movsb fdivr inc adc aaa jns sub mov (bad) cmp or in addr16 mov les roll or jmp leave mov add les or or ljmp icebp push jns imul in xchg sbb pop inc dec push xor xchg mov mov mov sbb int adc inc pop cmp mov (bad) (bad) xchg add mov xchg fcmovbe lret dec fs sar in xor ja and jns popf xchg ja nop and in mov outsl lock mov inc or dec loop push pop inc mov lods mov sbb aad ret mov push pop imul pop push or lahf mov and fadds sub lock popf (bad) sbb aad scas cmp bound mov dec iret (bad) hlt jnp,pn mov jge,pn mov xchg add je xor dec imul call inc mov cmp mov cmp push xchg rolb xchg ret xchg lds movsl mov push popa bound test xchg jge in leave add scas lods add pop adc sbb lahf call (bad) out adc leave loope daa ret cmpsl and test (bad) pop sbb lret inc (bad) sarb loope stos xor ret rcrl call fsubrl int jg fist xor (bad) push mov push cmp xor cmp xchg mov stos loopne movsb adc inc insl push fcmovnu push xchg icebp orl and cmp sub outsb xor xchg imull xchg out rclb cltd in sub and xchg pop repz std xchg hlt jp cs jge cmp push inc mov and cld lods out cwtl cltd mov mov xchg inc push xor addr16 int3 mov push out and mov add lcall xchg jecxz aas imul mov out cs adc nop movsl or lret or cmpsb inc dec insl stos or jg movsl push and sbb sbb mov inc js loop das dec sub in scas fldz mov xchg icebp gs jl cli (bad) xor or fistpl dec xor cltd sbb ja insl pop stos or push pop in mov fadds inc cwtl dec cmpsl mov rclb lret clc xor jo pop mov outsb test jnp hlt sub std jmp sahf clc inc mov xor hlt nop andb cmp inc sti addl push mov mov sub testl mulb cli (bad) (bad) bound jecxz in mov dec jl jle and xchg lods pusha cmpsl mov ret aaa adc pop jnp jns mov fwait xchg out mov shrb sbb je push xchg test mov cmp (bad) xor into cwtl (bad) mov xchg cltd dec loop mov fs jae std mov imul jp dec cmp push sbb idivb (bad) xor adc cmp in insl jbe mov cmc lea dec jo or and pushf inc je faddp imul stc loopne push jl popf jne push repz push cmpsb int fnstenv dec fildll push imul mov js xchg in mov xchg test gs xchg ljmp xor in inc repnz aad fwait xchg shl xlat int mov js or xchg out push jnp roll cmp ds cmpsl lahf cs mov and and and adc into dec mov adc pop jge jmp aas xchg xor into jo mov inc iret dec push outsl mov cmp in mov iret mov popf push (bad) hlt xor cmp sahf idiv mull pop aas fs iret cs adc (bad) mov arpl pop mov pop stc xchg sub add scas cmp fbstp rcll jno push mov out cmpb cltd and aam lea movl gs push or sbb mul hlt mulb imul int3 dec test pusha mov pop ret add shlb pop mov (bad) mov and fildll jno add (bad) aas xchg add (bad) mov mov loop sbb jecxz jg sbb sbb mov inc (bad) out aad cmp mov inc leave mov dec mov je sbb cmpsl insb aaa mov ficompl push xor jecxz mov or and push pop pop xlat push in pop fsubr notl loop mov xchg dec daa cwtl sbb mov cmp pushf adc stos iret cli pop imul xchg mov sub imul insl inc jae pop movsb jmp and sbb inc and sub sbb rclb (bad) int in ret dec fwait push sbb cmp lock mov pop test adc or jo test cmp (bad) jg loop sub jnp notb pmaddwd jecxz push cmc push cmp jae xchg (bad) std clc mov xor fnstsw lods or add outsb sbb inc aaa jge adc loopne cli outsb adc (bad) push imul (bad) xchg push dec xchg fxch orl jp jp scas adc xor xchg inc mov and lea test cmp mov push cmpsl (bad) pop pop push push push xchg jae bound mov (bad) jge das leave jp sti mov lds out mov xchg (bad) into pop je xlat aas addr16 jp cmp test adc pop int3 ffreep jecxz xchg mov jmp mov xor sti lods push mov jne inc nop decb add movsl push inc pop sub sti dec test cli sahf aam mov sbb test xor addl and cli mov jecxz icebp loop bound cmp mov out xorl jge add add cmp sbb inc xchg jb insb lods cmpsl xor add push insl fcoml xor (bad) gs lds sbb ja (bad) pop jb pop fidiv (bad) push push bound xchg sbb mov fadds test dec inc outsl icebp jl mov sub mov sbb mov inc pop lds add test sti or xchg popa arpl icebp bound inc cmovle hlt add add xchg arpl push mov adc xor dec or scas enter or (bad) enter mov adc mov repnz mov setae pushf jp out rcll clc addr16 dec push pop lahf cld mov pushf scas cli inc int3 inc sbb sbb sub or jb shlb popf ljmp cmpsl das ljmp rcrb aad sbb sub or mov pop (bad) cmp lea pop lret aaa test fimull cmpsl dec mov stos pop push xlat leave xor xor movsl push pop inc and (bad) negb movsl iret xor out xor cmpsb adc push movsb lret outsb add xchg lock or incb push mov mov es mov push dec ret stc out scas cmpsb mov cmp and xor mov push lret jb dec int (bad) add sub mov jl jge mov adc addb pop (bad) cld xor add mov push dec jae xchg sbb dec dec push int3 push mov les cmc dec push xor cmp inc ja xchg mov es pusha pop inc (bad) mov imul mov scas xor jl cmp add imul sbb adc enter not scas inc sti das imul pop test xchg (bad) and test dec les arpl xchg icebp add icebp inc out mov mov cwtl out aaa dec (bad) xor cmp ja lret sti lods mov mov sbb ljmp pop call mov aam add test jge out (bad) std xor sbb mov jae fs jb in xchg nop shr xchg je sbb repnz mov in cmpsb sub repz loopne das sub (bad) ficompl fidivr (bad) outsl cmp scas and sbb orl nop sbb push push mov push xchg push pushf sub pop xchg ret xlat imul repz mov lock fistp push cmp xor mov (bad) xor stc (bad) pop mov testl (bad) fisttpll (bad) aam mov pop stos into jge leave sarl ss mov sub mov pop pop bnd mov add sub stos stc sahf jge xor ffreep mov jecxz inc lahf repz addr16 (bad) shl dec int3 in lds and lds push sbb sarb aam in rcrb jns jg mov outsb mov test hlt in int mov hlt cwtl (bad) movsb jno (bad) xor and jle and pop icebp pusha jl cmp sbb sub mov cmpsb xor (bad) and xor fadds push idivl scas cmp repz in add cltd aaa fwait xor ret inc sub lock int3 push sbb and lods and rorb (bad) xor mov lahf jno (bad) bound jno ljmp sub sub pop cltd xor inc scas scas clc mov (bad) mov rorb (bad) int pop mov aam cltd mov (bad) xchg pusha cmp pop cld jb fwait scas jle mov iret sub cmp xor nop icebp add xchg adc stos movsb cld and ds icebp inc xchg stos mov push mov and fsubrs popa lods xlat jnp xchg mov xor ss mov mov xor fmull mov mov cld aam (bad) lret adc jnp dec ss flds xchg sub xor (bad) cmp imul and jmp imul xchg out jl jp cmp lods pop loope insl mov imul xchg aad movsl cmpsl xchg lret mov test imul add int3 dec inc push fstps in ja dec mov dec push xor (bad) cmp mov aas jle hlt and clc nop mov mov (bad) lea stc xchg in push out arpl mov xchg adc and test fisubrl sti sub mov xlat pushf inc add int3 scas (bad) pop and enter sub insl xor sub fucom pop daa popf add incb testb cwtl mov bound xchg mov (bad) or xchg push cmpsb dec adcl in sub stc sbb into add push imul dec lock pop jl gs out inc mov decb das inc scas imull mov push mov sub xchg sub imul loopne fcomip mov outsb movsl repz lea (bad) mov lret (bad) adc inc mov stc imul mov inc push push jge lock dec sub mov rcr fsubrl fucomp movsl xchg mov lret push push inc lds and lock or push mov pop or fabs cs and cmpps ss aaa sub inc test cmpsl imul and sub inc mov pop or js and mov ja leave mov pusha pop xchg in lea stos test daa push pop push mov fmull std fs sub mov jmp addr16 mov roll inc ljmp leave icebp ds xor loope aam mov pop mov push cltd insl out ror push cmp inc cmpsb xor sbb pop (bad) call addr16 movsl jno sbb inc and dec out mov pop sbb add lds xor sahf dec pushf or cmp into add xlat aas or aad outsb mov mov cli pushf movl dec ljmp (bad) push pusha jns fldcw push inc add jle pop cmp js popa push push or (bad) xchg (bad) fcmovu mov mov nopl push iret add bound xchg in jge mov cmp std enter outsb jecxz fnstsw xchg mov xchg cwtl cmp sub push push and aaa cmp push add xor lret pop cmp xchg cs rcll cs xchg aam test popa ds inc lahf dec cs jnp cmpsl loope xor dec fwait insb stos adc mov fs xor lret mov xchg xor mov pop fldt jns imul les inc ss fistpll push pop lds cmp call (bad) jecxz add xor fcompl fidivr add pop data16 aas cltd popf int3 mov orb (bad) xor (bad) movsb jmp add outsb lret das push or sbb adc mov hlt pop mov jnp inc jnp jle xchg (bad) icebp or pop and jnp std mov or cmp (bad) in and adc shrl aaa cli mov push popa or dec lret ljmp sbb xchg mov push mulb jl cmp inc sbb xor dec movsb mov mov lds icebp mov sahf lret (bad) ret test jno and mov pop push cmc repnz iret cmpsb push jg dec inc adc in sub mov mov sbb add jae loop leave insb (bad) xor stos jno sbb mov sbb test mov xor test mov cwtl cmove mov sbb xchg pop in dec pop jmp popa es lds and outsb test sbb idivl pop in mov arpl xchg xorl mov xchg pop mov out dec rol cs pop xchg (bad) int sbb outsl pop push rol jnp sahf iret lods pop int3 xchg rcll pop leave dec inc jo dec jp dec sti xchg shll mov pop cmp adc pop (bad) fldcw clc aad adc data16 and pop sub dec sbb xchg imul in push adc dec xor (bad) mulb or fiaddl mov push push add jecxz xor lods and cmp sub lea sub cmpsb inc add push sub xchg lcall xchg pop xchg js cmp sub ljmp das mov sub lahf jmp pushl hlt lock mov cmp mov or ljmp xchg les push (bad) push jo int3 dec fwait mov adc mov (bad) mov arpl shrb in sbb pop cmp mov movsb pop (bad) jbe leave scas pop inc inc wbinvd jmp sub (bad) push push repnz ja sbb xchg dec or fmuls not cltd xchg mov jb fistpl xlat ror fdiv push repnz pop in cld sub ret mov aas jno xchg mov aad mov hlt jg push stc insb clc pushf mov jmp loopne mov mov dec ja sbb fsts cmp notl pushf mov push sub lahf cmpsb int jbe cli jle pop xchg dec xor fcomps fimull adc pop fldl xchg aas mov dec pop lcall pop mov adc cwtl xor jge add aaa shlb add xchg jno outsl ds mov in push outsl jbe pushf jne lods cld andl pop movsb add xor bound enter jl pop jecxz fs cmc fwait aam in sti iret jmp push or clc adc data16 pusha lcall (bad) cltd cmp push jg int3 mov sti push fcomip adc movsl sub andps pop push lret and cs and add stos aas out notl add (bad) loopne loope adc push sbb pop inc rcrb cmpsb add mov lds jg xchg push cwtl (bad) fmuls mov mov loop push imul sbb jp xor bound (bad) push pextrw sbb hlt pop add pop stc push arpl push in pop jge stos inc inc inc cmp add cltd pop aad out and popf mov repz jl add (bad) in dec ficom cmp sti das insb mov stc mov stc push jg xchg shrb (bad) in push cmpsb dec shl aam jb sahf jns in movl ret mov pusha cmp sub lods xor pop push cmp or js jl lcall mov pop lock xchg jns fs mulb cmp loope dec mov mov inc xchg mov dec inc aas add add loope pop outsl arpl cmp int scas imul fwait jle shrb int3 cs or insl negl xor sub mov js test dec (bad) ljmp daa mov jo stos int mov ret pop mov xlat xor ja mov loop jle sahf stc pop cmp arpl push (bad) mov pop (bad) ja and xlat cwtl push loopne fs xor or test (bad) int3 sbb mov mov movnti mov bound cmp jg xor ret loop cld psubw jl fxch es jmp push aam (bad) (bad) lock xchg mov xor mov ds and lret in sar ret xor mov ss mov jle out pop hlt cmc xchg sbb xor daa stos ds xchg inc or out stos dec repnz jo jmp lock sbb mov pushl inc shll cmc in inc fcoms jp (bad) insb jns pop push insb aad dec inc push or push jns sti push seto loope das (bad) hlt cmpl mov sbb sbb in jb sbb xchg rcrb push dec movsb add pushf mov mov movsl mov fsubl ljmp outsb (bad) adc out cwtl cltd and (bad) in pop xchg loopne daa es push enter cmp or (bad) jne jbe sti mov jnp icebp cmp cmp pop nop stos mov jbe jmp data16 movsb sbbb lret cmc sub pop mov stc neg adc dec lcall sub outsl (bad) sbb cmp int or repz sub sub inc lock mov cwtl lock clc sbb pusha mov clc (bad) addr16 roll js inc sbb out sbb inc adc cmp pcmpeqd add (bad) ljmp mov dec (bad) into rcll call xchg mov in fisubl andb and push (bad) sub out and mov inc inc push test cmp sub cltd cli (bad) je add popa call add push push movsb jle ds (bad) hlt outsl sub dec xor jle add mov push jnp pushf sbb dec push pop or aam inc sub in out dec out adc in xchg fmulp in fildll push ret out jb ret and test xor xchg dec xor cltd sbb notb or loop ret sbb add mov sahf lcall outsb aas nop push mov xchg mov test fdivl xor fcmovnbe cs cmc mov (bad) pop aaa mov fwait sub jo call popa cmp jg adc xor or jp mov jp sub outsl aaa lock xchg cmp xor lcall push xor add inc aam in mov insl gs loopne aam das les pushf dec jb subl mov call mov adc stc xchg aam loop,pt test cmp pushf cmpsl xchg lds out sbb lcall (bad) add push (bad) push push fistl cmp jb xor out mov xchg repz adc fstpl rcrb xor push jmp dec stc mov ss cmp sbb fisub pop mov xchg fdivrs cs pop dec aas push iret in movsl push inc dec ficoml lret sarb mov push mov popf jle cmpsl ret and (bad) out shl scas in sub xchg js (bad) jp push jae push mov in cwtl or mov pop jae addr16 pop jl in sbb int push scas fildl sub daa popa enter scas fcomps cwtl dec push pop jae in jo (bad) bound add aas cli sub push shrb add (bad) jecxz jge in or or jb or pushf mov lret sub adc icebp out sub in pop popa mov push inc dec xor (bad) sub das pusha movsl jnp les jbe sbb push stos sbb mov mov xor pop loope xchg cli lods cmpb cmp cwtl add xchg jmp out or gs js stc data16 outsl repz fcoml insl (bad) inc jb add mov loop das ljmp fwait (bad) outsl xchg (bad) cmp inc xchg push aam xlat xor push dec (bad) or pop jns ds push inc mov adc icebp xchg sbb pop adc mov int testb fs (bad) lods inc out mov lock push std jmp pop shll (bad) imul insb mov sbb imul stos pop iret and mov out imul scas mov sbb xor sbb cmp jmp addl xlat fbld outsl mov ret fwait jmp jb fs xor jecxz lea fisubl lock cmp sub or outsl (bad) mov pop xor add xchg and es cmp xor push fwait ret dec imul pop and clc xor xor gs push sub arpl xchg iret mov mov xlat push mov lods add fsubrp sub add adc psrad sbb push mov mov cmp xor sbb sahf sub fadds outsb cli mov loope mov push sbb popa jns lods das and add mov jg mov (bad) fldl2t xor rolb mov clc idivb lcall mov push pop jle icebp fnsave lods sbb dec adc push aam stc movsb outsb push stos dec xor mov and das xchg insb sbb pusha ss or jp fsub add fwait adc scas pop mov imul ss enter iret or lret (bad) test mov mov sbb cwtl stc jmp push sub popf jbe (bad) imulb mov out mov mov lds mov cmp sbb jp xor pop mov sbb xchg fwait and repnz xchg notb jmp cltd push cmp sarl js xor dec sub lods sahf hlt push imul iret mov cs xchg xor (bad) or inc cmp out pop or repnz dec inc xchg fwait mov and cld jle or jp arpl lods lret mov fistp cmp arpl push stc push xchg mov mov cltd mov adc pop loopne mov sarl dec rcr sbb jae adc jp xchg xchg mov (bad) test popa xchg out ret xchg shrb divl jne mov test fdivp dec in mov mov decb repz jecxz xchg imul push dec mov dec scas cmpsl dec jno jmpw mov and in (bad) mov sbb ss mov js sbb mov xor mov xor cmpsw leave scas xor adc mov fdivrp inc pop push mov mov scas cmp popa int adc rcrb fidivl or jp outsl ror ds jge dec scas rcl jb lcall sub popf xchg popa cmpsl enter cmp or movsl cwtl mov lock call daa and ret jb inc pop mov add mov sti outsb out out stos call pop dec cli mov loopne sbb fbstp jns mov push xor in pop std sarl cltd cltd int3 mov daa adc cmpsl jecxz push xor inc fs int3 imul es loope jmp inc shrl mov add ja daa pop les pop clc scas sbb sub sub out xchg popa add sti cltd out rcrl add (bad) xor les iret mov push xlat dec pop dec cwtl adc icebp shlb adc add xchg daa sarb sbb in ja int sbb cmpsl mov xchg pcmpgtb add pop mov mov jae mov pop inc and int xor push movsb jnp imul mov sarb movsl cld xchg xchg ffreep xor mov push lahf aad push ud1 mov shl movl jae rcrl sub mov shlb ja jg dec push xchg cmp add rolb pop add jo add push orb mov xchg roll add add pop mov inc aaa sub shrb xchg ret mov leave lret add popf mov jmp lahf iret into mov dec int and lret inc pop ret push cmp push sar pusha push or lahf inc pop mov fistp xchg push mov jo mov aad xchg or pop push psllw out gs fisttpll xchg or sarl lret ret shlb sub in inc (bad) mulb leave push mov pushf call in or cmpsb push pop cmp mov cmpsl or inc lock xchg dec xchg js imul les hlt cli jge sub in les lret cmp scas jbe test cmp fcomps and (bad) jb lods sbb in std gs lods popf xchg pop mov fisubr outsb loope adc movsl jnp dec lods cld fsub test repnz jp push adcl push fcom addr16 pusha and mov jnp or jo xlat incl ds adc sbb mov rcl aam sahf lret dec cmp je shlb lcall addr16 out xchg fsubrp push push push pushl cld or stos loopne scas adc cmpsl xchg xor jns aad stos mov inc cmp push fs fdivrl inc cltd xchg inc adc fdivrp (bad) mov incb inc and sahf bound add pop jbe adc mov add mov xchg mov jecxz dec sbb mov je and hlt mov inc pop (bad) mov jmp mov subl mov sub sbb (bad) sub in inc into frstor in push mov std fiadd dec mov or pop dec imul and mov jl lods or push fild outsl xor push std popf and scas push inc xchg test mov pop sub ret sbb arpl sub ret gs pop addr16 gs popa mov mov icebp xchg cmp cwtl rcl fild xchg (bad) js and stc (bad) cmp inc inc in dec rolb sbbl sbb mov loopne xor (bad) push je in mov hlt mov mov in addr16 sbb fldenv loopne lret add dec loopne fidivr mov leave mov scas jnp adc icebp jp jae lock lcall out push add lahf je push mov and dec adc and je enter cwtl inc xor sbb mov fwait ss (bad) mov (bad) (bad) sub xor pop mov test out fcomps jmp int3 cli sbb xchg fisttpl andl push mov jp adc ja add mov ret or lret fwait sar pop push pushf rclb pop (bad) (bad) imul pop push dec add sahf add loope (bad) lds push sub out jnp jmp adc add sub lds fs jmp lods mov mov fprem1 and adc jmp sub rcr popf insl mov fmuls es jb rorb dec stos xor mov lret sub insl leave push cmc xlat orb loopne,pt lret sub mov cmp jecxz rolb sub jp pop test scas (bad) mov std pop add mov sbbl aam (bad) ja push jno pop ret insl mov dec mulb rcr std cmp test add mov xor data16 push dec not mov push dec sub mov xchg pop sub sbb fwait insb mov testl xchg (bad) inc xor imul jg sarl in pop mov std mov sarb adc xor insb pop fisub inc cs enter mov sub and cli and sub xchg pushf in jg xor dec lret repz iret mov (bad) call psrld push data16 pop or imul insb xchg into ret jl test in xor cmpsl jle and pop icebp inc pop sub xchg in sub movsb loopne je ljmp mov push jmp jo (bad) movsb cwtl cmc add into jl pop ljmp jecxz jmp push (bad) xor xor cs inc inc add scas jno inc dec jb xchg add pop mov rorb xchg fimul mov push or ljmp sub xchg arpl xor hlt inc test test dec push jle add ret xlat bound bound xchg xchg inc dec fcmovnbe insb imul or inc in stos push loopne cs mov mov push jle adc sbb arpl pop icebp dec lods inc loop repnz add jp inc push jmp mov jae lahf rol inc cwtl adc and ds jno dec pusha jecxz lcall sbb mov push add jecxz pop idivb lret xlat jmp dec cmp xor adc jb xchg jb mov adc sub inc fcoms mov (bad) lcall push cmpsb push mov xchg jl popa fxam stos pop pop decl and arpl push nop scas mov idivl xchg iret sub aaa jl mov pop aad xor test call mov ljmp xchg test mov iret ja inc dec decb and adc cmp fadds inc clc push lret adc mov cli fstps aas sub sbb xchg mov adc stos xlat clc push jmp dec xor push stos das adc aam leave dec jle add in lret daa push push scas fwait jge xchg rolb jp rolb sarb xor push scas jo mov xchg add mov insb ficomp inc fs aam mov mov and sbb addr16 fldcw jb or pop or jnp mov imul mov clc sub dec add inc pusha jbe ds mov xor int3 gs and ret fnstcw dec dec pop and jge xchg (bad) push mov addr16 loope xchg lret adc push jne jle xchg pop fsubs mov dec es fcmovnbe shrl sub jno mov fadds add lea push ret adc adc loope dec adc jne mov mov sub fdivrl xor sbb dec fadd fnsave mov ljmp addr16 (bad) sub in push cmpsb push jle test sbb jno rcrb sbb inc dec bound push bound (bad) adc in lret ljmp jnp add sbb push mov enter inc jp mulb sahf lds pop and out sbb inc mov test (bad) pop cmpsl xchg (bad) movsb jne movsl cmp xor push insl outsl loopne psubsb or and dec adc dec scas lods sub cmpsb ret jns xor insl mov mov int dec sub cmpsl aaa and jns adc lcall dec push cmp or xchg xlat cmc (bad) (bad) or mov test jmp pop cmp scas (bad) mov mov xor stos movsb dec in outsb cmp mov stos sub out cmp mov sbb add pop add les pop fildll mov jge mov je inc push ljmp or pop gs pop daa xchg mov repnz int aas xor push mov xor push dec lock jecxz nop mov push arpl dec adc mov cmpsb lods jg inc test je jns jb add addr16 sti add dec arpl pushf stos (bad) divb or dec or jne pop in insb push (bad) sbb lods (bad) mov insb jmp mov cmc mov sbb fwait pop das (bad) aam int3 jmp (bad) sbb mov arpl aaa ss test lahf (bad) out imul cmp jmp mov divl push (bad) rol bound push or mov mov pop and xchg sarb es scas pop jecxz (bad) roll stos pop jnp push pop das (bad) cmp add sahf stos jns mov sahf fwait std loop call cmpsb xorl fstps push jecxz loopne pop inc cmp dec push outsl pushf mov mov cwtl jae movsl mov notb aas out jo cmp loope mov les cmp data16 and push adc push stc push push push or and in jle mov jnp into (bad) mov mov iret sahf mov jbe cmpsl movsb mov iret xchg pop into mov mov push add jo sti cli sar lcall incb stos cmpb lock sbb jo aaa and iret pop add sbb xchg add mov pop mov push enter je lds shl cmp mov cmpsb roll mov xlat dec push or sarb inc and pusha push push add xchg adc mov jbe out xchg jle fsubs clc inc xchg push inc xor adc rol and push mov int xor jecxz leave das xor push sbb cmp mov jmp push sub mull ror (bad) jns xchg mov mov xchg xchg push jb cmp das sub fwait std inc add and dec fsub dec pop mov adc xchg xor and arpl outsb and push (bad) aad shrb mov call pop add push cmp adc cmp xchg adc sbb pop pop jns mov push sbb pushf fs out jp aad sub out sahf loopne push dec aas or ret sub cmpsb in movsl mov stos movsl and inc in inc or add cwtl mov pop jle push xchg lret insl and test out push sub into pop sbb lds push enter push push cmp mov xchg add cmpsl icebp and into pop imul jmp cmp mov and jp and popa mov and pop push fidivl imul jb (bad) in ss enter lods nop aad push or adc jg mov xlat cltd shl and fldt outsb xchg adc jne dec gs int dec aam stos add and aas inc cli fidiv aaa or cmp fisubl fisubl cltd fsubs or sti cmp rorb insb fldenv mov jns inc xchg adc mov sbb sti sbb es ficompl addr16 add negb push je imul popf aaa repnz nop in nop jmp je xchg sbb mov or push adc xchg lods jmp jp push push in clc aad (bad) sub stos adc mov sub hlt les cmp insl mov (bad) mov loopne jo push daa inc (bad) cmp cmpsb loope or jnp mov xlat xor push cmp adc xchg scas jo popa sub inc sbb sti and pushw jecxz pusha inc cmp jge sbb xchg mov stos dec lds or jl call xchg xor jle int ds cmpsb movsb push dec in out and test cmpsb and dec or (bad) scas and std inc outsl mov ljmp sbb xchg sbb mov ret sbb (bad) or inc xor jp push mov js jmp xbegin xchg mov cmp mov (bad) outsb jae repnz movsl movsb push jmp stos mov addl dec and pop cmp mov cmp add stc stc sbb or xchg push outsb jg pop fadd or jae (bad) mov push push lahf sbb adc adc insb pusha pmaxsw cmp add mov scas movsl aad and gs outsl enter dec scas xchg dec cltd push insl xchg enter inc cs pop push loope or inc scas outsb jno (bad) xor dec jae lret mov or aas adc pop (bad) mov in cmp in sahf mov push adc and dec xor pop jle mov lret push mov ret test addr16 fdivl ret inc pop push int3 mov or push and jne mov pop scas xchg xor aas lods (bad) stc xchg fild add int3 cwtl lds (bad) mov ret cmp and and shrl addl fstpt dec push pushf rcll push xchg ss add push mov hlt adc mov stos cmp dec mov loop outsl mov dec cltd cmp fimul sub adc stc cmc mov pop xlat inc lret test stos add jle (bad) mov xchg xchg push lea xchg mov mov js (bad) push hlt push jmp test ds dec mov in daa int3 inc and in loopne icebp ljmp sub aas aam mov sub xchg ljmp incb nop inc jae mov push roll icebp aaa cmp call je or sub mov call fisttpl mov addr16 mov sub rorl ljmp jb xchg sbb out xlat repz add imul and adc jbe out jo ret gs daa inc cld fwait mov or dec cltd popf and addr16 fisubr push fdivp js and repz jge into lods fildll jmp jge sbb xor pop sub divl pop inc mov dec in cmpsb add and push sahf cmp mov push jp lods or jle jno cltd lahf enter fs xchg xchg dec lcall jbe jmp hlt movsb push push or les lahf out add ja jmp loopne dec sub into jns cmc adc dec or pusha mov fwait add push mov xchg gs adc inc jno mov imul fisubr fnstsw fwait or mov pop leave cmp push and inc mov dec add mov jne imul or mov scas xor aas in inc xchg mov movsb and add (bad) xchg bound (bad) lret mov shrb gs je inc test cmp in jae int leave mov lods aad repnz ljmp dec sbb jae jnp fimull mov loop hlt mov inc mov jne dec rcrl divb dec jno into les mov jb lea enter dec fwait aas jae scas pop addr16 pop cs das lret aad mov cmp (bad) bound sbbl mov repz mov pushf adc sbb sbb into cs shrl loopw and mov out mov bound in adcl mov shll loop lock and mov insb arpl xchg outsb push or mov mov and addr16 stc (bad) mov pop add in out xor xor scas (bad) mov out sarb nop or push sbb jl pushf cmc enter lret insl mov pusha stc lahf xor pop mov pop xor int3 dec in jle scas push test imul int3 adc sti cs xor dec dec cs jb sub mov xchg jo cmc out rcrb xor sbbl and test popa xor mov and jno and dec mov les inc mov xchg cmpsl jb mov mov pop sbb jne or sub inc test popf push mov add jp iret inc mov and mov jmp push shll pop mov xor cltd jg stos xor push push mov xlat inc adcl (bad) dec push cwtl or mov lock lcall jns testb xchg jecxz jg (bad) or popf inc xlat push cmp aam stos mov mov or pop enter nop clc xlat mov test mov xor add lret or mov cmp into jp push or les push popf and inc inc pop aam data16 push pop enter ds pop inc idivl mov cwtl inc push insb ficoml push ja pop push pop pop outsl scas movb (bad) in lea add jg xchg add popa adc int (bad) test repnz cmpsb repnz in add inc (bad) cli add insb xor sub cmp mov sahf mov push lret stos jno cmpsb ret jno scas pop mov lret cmp inc push in pop pop add lret mov sti jnp adc inc sti jbe repnz pop fbstp in mov sbb dec cmp lea mov pop sbb aas adc push rorb cmp ss pop test mov mov dec data16 leave sti dec dec adc sbb mov dec inc lock test inc mov aad mov movsl xor inc test (bad) fld cltd repz pop sbb xor (bad) mov shrb cwtl mov sub movsl mov jge scas (bad) icebp or dec aas xchg cmc in mov xchg fadds jo movsl cs stc pop out add int3 xorb xchg jge daa lods inc and mov adc icebp bnd inc stos (bad) push push inc in mov mov and fisub aad jo ja andl ret mov dec movsl adc cmp push add or dec roll stc push insb insl dec or push mov inc push or sub mov loop js into ljmp dec ret cmp mov cltd fcoms and add lock fnstsw jae (bad) xor pop fisub loope jmp sub add cmp les daa dec or movsb and add scas jb jecxz or xchg arpl pop mov pop jmp mov adc inc dec mov dec lock xchg les and in mov gs je jmp rolb pop xchg outsl shll pop test (bad) test sbb cmp jnp test or jp test fcompl movsb outsb mov pushw cwtl aam scas sub xchg or sbb mov xor add xchg xchg inc movsb lret test mov xlat cmp sub je test into pop cltd cmpsl mov out and xor and fcomps adc mov jmp dec pushf loopne lahf add push add push loope insb outsb jp jp add rolb fisub sbb loop lret sub push shr fldt (bad) scas (bad) xchg scas (bad) icebp aas lcall (bad) push sarb jecxz pop sbb inc or int3 shrb inc adc iret outsb divb xchg sub or cld jae pusha sbb clc clc mov fnstcw adc jmp dec mov or aad in ss test or loopne xchg xchg pop sub je pop (bad) iret pop mov pop dec (bad) sarl jo das rorb (bad) mov jnp push sbb negb (bad) out xorb (bad) les imull icebp fisub add and int3 or push je cmp or leavew movsl fstpt pop jno enter or roll fldz cmp mov movsb mov or std add jnp and loope popf xchg sbb push lret mov in inc fnstenv fcoml push (bad) (bad) aad cmp pop or jae idiv pop pop aaa loopne icebp ds mov add lahf cmpsb adc inc shrb push rorb pop inc sahf xor mov cmp xchg mov sbb adc xchg outsl pop ljmp push arpl das fs (bad) rorb addr16 cmc pop fidivl xchg loop orl ljmp add cld add xorl repnz and mov aaa and jo roll inc mov out ljmp mov ss in test adc xor xor inc xchg fistl movsb sbb inc push inc push jle or mov lahf pop jnp pop js jb and and into inc insb stc repz mov fwait loopne jl pop std call fwait jl mov ja (bad) pop push daa fwait test xchg out movsl pop int fdivl outsb call stos or dec mov ret mov mov lcall sub imul mov push lret jbe inc mov ret sbbb sub push fcoms xchg stos mov cmp stos pop jmp call or aam sbbb bnd adc or std xchg mov cld aam (bad) int3 push xor push js rorb sbb test sub insb pop incl mov test nop repnz dec inc mov test rorl pop push jns pushf mov cld std rol mov xchg pop cmp out je inc fcomps imul xor fucomi push jle leave mov push pop rorb inc aad or push pop mov or je inc (bad) mov addr16 mov mov out xlat loope outsb fldt inc jb arpl add sbb and push and adc mov in mov jne jmp and ret jmp jne sbb jne jns leave dec sbb add xor and sbb out inc mov jmp dec (bad) in mov mov mulb jb cmp sbb push mov cmc pusha push xchg addr16 mov xor bound lods push or cmp mov jmp sti stc and sbb or push in jns je inc orl insb xor mov xchg cld pop mov inc fs dec lds inc scas cwtl bound iret outsb inc lret push pop into and jmp xchg push or pop or or xchg jno (bad) (bad) dec mov test (bad) ljmp sub cld lds xchg pop fsubrl loop sub pop pop pop sub and mov add cmp jle sti push dec gs clc push pop sub jae mov (bad) xor ljmp push jg cmpsb jecxz jl mov mov in les xchg inc adc sbb mov adcb rorb mov cmp bound ret mov bound pop (bad) jne sbb add stc ror in xchg sbb sti cmp call cmp hlt adc into mov dec adc or or mov mov pop sbb scas push mov xchg loop movsb frstor insl xchg xor outsb dec or test nop ret leave pop cmpb adc sub mov shlb outsl loop in popf fnstenv jno out push or push icebp xchg sbb daa or fisub jb xchg addl sbb ret lret adc lea cmpsl xor lahf adc push cmpsb and xchg pop pop int3 inc dec addr16 ss pop dec ret sahf andl or addr16 cmp push cmpsb cmp cli fist xor or cli hlt push test jo and ds test rclb les int iret out mov push (bad) (bad) hlt out loopne mov loop nop (bad) mov and mov movsl int3 cmp sub cmp movsb cwtl push mov hlt mov push movsl mov cmp out jno (bad) mov in pusha es jno jnp clc aam out jno sarb pusha push (bad) sub jp (bad) loopne dec (bad) int3 xor xchg xchg shll out adc push lret repz ljmp mov pushf repnz pop mov mov out popa js push pop push clc sub (bad) loopne imul push mov add xor or es fwait pop adc leave adc jp pop add and movsb mov imul cld add pop cwtl dec clc movsb ficoml fstl mov (bad) divb or dec push (bad) xor out and dec repnz jecxz mov lcall jecxz sub mov movd loopne imul sbb push pop dec les jecxz repz cmp pop imul mov sbb (bad) icebp jb xor loop mov int loopne iret incl out js adc push (bad) xorl lahf push imul mov jae pushf adc mov repnz xchg jo in aad push das ret loope pop (bad) aad das mov ret mov ja pop mov inc push nop (bad) orl and or enter test lds push jl mov adc scas adc mov sbb out imul (bad) sub addr16 mov ret in repnz pop push jl inc int add add mov cmp fwait ljmp push dec mov cld mov push int3 jnp adc push push lahf nop mov hlt nop mov or xor loope bound (bad) idivl mov jbe pop cmc mov lret icebp sub jmp ret ret pop xchg out cmp int3 add (bad) divb adc mov xlat push insb pop and push stos cmpsl not adc das les pop repz jg fidiv mov imul bound jmp rcl (bad) rep pusha dec arpl in sub icebp rorl mov lods xchg rcll imul sbb sti pop andl xchg (bad) xor jg int3 enter dec das icebp dec jne inc or lcall data16 sahf mov repz mulb outsb ret pop or (bad) push pop pop mov lret out in adc jmp mov inc out pop inc gs jo les data16 xchg sar xor leave subb pop fsubrp outsb aas test inc rcl repnz test dec and xor arpl sub (bad) push xchg and loopne add sub xchg pop fcomp add xor das ud1 mov sarb xor cmpsb leave int cmp xchg sbb mov call jb or adc sub rcrl nop loop jns sbb sub lock push fistp mov jae mov inc scas out xchg push push cmpsl divb jge lahf pop xchg enter nop and and ficomp dec xchg push in std mov or push and insb or push mulb sbb pushf cmpsb jmp jno mov adc or dec jle int dec ret pop pop push sbbl ljmp movsl and xchg cli popf jecxz js test lret aas cli adc in pusha pop ss (bad) sbb xchg jns out sub mov inc jmp jnp (bad) cmp icebp lret lea rorb xlat dec xor mov push pop fstp scas pop xchg mov sbb add push ret add lea adc stc clc pop lret pop sbb inc push push ljmp aas mov and js addr16 shll cli add push es sub test (bad) ror mov ss xchg mov (bad) lret cmp leave lock add push xor push cmp sarb les jmp jle jge pop rorl xor cmp jmp fist pop xchg test or pop push add in loope cmpsb pop cmpsl test jo and push movsb adcl test sbb imul int adc pushf (bad) mov xchg and fidiv and dec mov loope jae call pop fbld icebp dec jp inc icebp sub lds push mov into jbe pop sahf cmp push dec idiv out inc gs (bad) out cmp sub inc into pop (bad) lock xchg test adc je jb or xchg jge lret xor fimull ljmp lods adc xchg push xlat repnz mov mov pop push cmpsl out mov xchg pop push testb ljmp pop cmp push xchg cwtl mov iret loop (bad) pop loope xor addr16 cs xor aas or push xor xor cld xchg and pop dec movsl and stos xchg lahf out pop mov dec pop out sti div jno es stos jl loop (bad) cmc ljmp int mov ss insl (bad) repnz fimull pop sbb mov int3 or mov mov add in inc push repnz jb sub lds pop fldt in pop sahf xchg pusha sbb sbb daa mov loopne jbe,pn lds sub xchg pop ss or je xchg xchg and push sub and xchg nop daa repz iret (bad) (bad) aas sar mov sarb lahf push or aaa out mov jae and mov incb popf inc mov shrb sub inc sbb hlt imul push nop cmp xlat dec xchg push stos out ret lea mov jmp outsl js stos xchg ja aas test in jmp inc cltd cs test mov outsl loopne xor faddl repnz enter sub pop mov xor or (bad) cmpsl movsl or cmpsl arpl jnp imul inc jle pop push pop movsb adc jmp mov les pop aam cmc xchg mov ficom les and into cmp (bad) jmp jg or push aas xor add lret out cmp lea aas or push pop sub mov aaa jns jns inc jae nop addr16 icebp pop shrb sti sbb add mov test std hlt jns or push popa dec stos repz xchg cmp aam and xchg cmp jbe fdivp inc stc mull add insb or mov (bad) sbbb int rorl jle or pop insb lods push sbb psubb mov cmp lods and cmpsb dec rorl out stos dec or mov repz into test idivb pop inc sub hlt stc das push (bad) icebp lods inc test sar into mov or add mov or (bad) cmp and mov lock and add ds xchg cmc enter jo adc outsb and mov int adc sti cmc or stc (bad) rcr (bad) lret and mov (bad) inc out xchg cmpsb xor mov fcompl or je stos addr16 dec mov das xor test jne int3 pop jnp jge (bad) add sub xor (bad) ja jmp je jne sbb pop pop sub pop call cmpl std and sbbl jo pop xor gs push cmovns aam stos ffree loopne inc aas pop lea xchg out or addr16 insl into inc pop inc fcmovbe mov jmp in idivl mov ret repz sub jp into add pop jb pop mov cli cs ja dec fldt pop dec pop rolb mov dec xor push fxch bound adc repz adcb inc orl arpl sti ljmp and test lods incl cwtl fbld into or push xor jp adc push add rclb in mov jne insb pop popf cmp push not jge mov (bad) ja dec jo ret test fmul pop push rcrb movsb cld mov xor mov inc cmp enter inc cmp xchg mov ret push and movsb xor mov pop sub sub (bad) fisttp add sbb repz push test divb scas cltd movsl outsl inc adc or mov xchg mov mov xchg jne insb lds les or mov mov sub int3 addb mov jle cld iret push jmp cmp jl xchg in lret cmpsb loop mov popa in subl int sub pop xchg daa mov pusha enter xor iret les mov pop out pop fsubl ss inc leave jo push or cmpsl mov push aad nop mul mov in test dec xchg jle cmp dec cmp lds mov test or fwait mov enter jge iret jge mov add or dec mov (bad) push pusha aam lock jno mov jp repnz fcmovnb mov lret dec lret mov xchg mov fisub (bad) (bad) int cs xor lea ja dec lds fimull outsl mov fnop push movntq adc mov mov dec add (bad) xchg jns xchg adc insl mov scas jne cld add push popf jp pop test cmpsb scas in mov repnz scas xlat and xchg pop fidivrl push cmc mov sub dec inc or rcll into sub push jl push inc std push ror adc (bad) mov aam mov mov and jl dec (bad) std lret push jl or fstpt cld mov xor inc fincstp lock enter jns dec aam xlat bound into (bad) jnp pop arpl sub daa xlat (bad) xchg (bad) cmpsl hlt xchg (bad) dec ljmp mov mov inc jae loope insl xlat add cs push sbb ret test data16 (bad) mov xchg pop rcrb mov ja sub or and cmpsb sbb arpl daa inc mov sbb pop jno repnz mov cmp mov mov (bad) enter daa push xchg or out int fwait iret (bad) jae icebp xor pop xchg adc pop jl jns sub dec pusha lcall test mov insl push loop test and aaa rorb out adc inc sub lods xchg (bad) pusha dec stos and pop xchg imul ficomp mov cmc aam orl insb and and in nop inc test nop mov fstps shl lret cmp cli xorb rcll mov sub int mov pop add xchg jecxz push cli fcompl push mov pop lods iret aaa mov hlt adc sbb pop adc mov xchg pushf lret gs push xchg add pop loopne fcomps and xchg or orb clc jae mov shl mov mov xchg inc loope inc cmpsb mov jge inc pop pusha cmp leave insb out jecxz push mov xor inc push inc mov les subb out push sbb ss (bad) cmp ret cli mov repz int3 movsb enter and and (bad) fiaddl in push scas fs sti push pop cmp (bad) shlb add hlt fidiv mov les mov pusha or push push (bad) aaa xchg add out std out cmc cmpsb lret push mov mov cwtl movsl insl mov sub jno mov jecxz pop mov mov xorb (bad) push inc and xor ja xlat nop loopne (bad) in xchg push int3 jle add mov xchg xchg pop pop cli (bad) test xlat cli inc cltd (bad) cmp sbb fisttpl and dec or jbe xchg in push push add cs xchg aas cmpsl jmp push jnp mov push gs cld sbb jecxz push push xchg mov daa mov out lea lcall jl dec and jb pop movsl jo popa mov (bad) pop lcall (bad) lds pop jb cmp xlat mov pop jmp or inc push in in cwtl icebp negb xchg adc test push cmp fnop and bound sbb out mov stos arpl aam jae xchg push bound scas test imul insb scas cltd lahf das out and adc push cli divb aad decb push rcr xchg push adc adc pushw imul insb cmpsb pop stos jmp sahf fs mov test add (bad) rol pop dec lcall inc pop push lock mov in jmp add (bad) dec mov cmc jle pusha push ja mov add ss push jg pop push jbe lock mov mov div inc outsb adc cmpsl scas lods jg fwait (bad) pop sub sub sti mov (bad) mov inc pop xlat shlb mov cli xchg (bad) in add dec lds sbb (bad) mov cld shlb dec or pop push in and aaa and sub pop jge sub xchg rorl xchg xchg lahf cmp pop insb or or push lret rcrb adc shrb dec aad mov loope mov sub cs lds pop adcb fmuls and negl add sub repnz push xlat out mov movsb nop xor shrb sbb adc fneni(8087 adc mov and insb (bad) sar inc sub xchg mov fldt fs or pop fst leave xor (bad) jbe (bad) hlt push push sbb sub inc mov add movsl or mov es aas shlb sbb lcall or ffreep jbe loop es out (bad) cld cmc repnz pop imul loope mov fstl xor mov inc data16 fxch jae or sahf and repz out sub iret fimull les sbb mov fs xor (bad) gs pop mov outsl roll xchg xchg cld lret cltd cs cmp fsub cmp fist outsl sbb sub mov inc mov mov push mov shrb ss pop fs pushf (bad) daa xchg rol orb xchg pushf dec lods frstor mov in adc jbe int xor and cltd mov adc int3 pop aam fisttpl xchg and in dec lret sbb mov pop pop lret arpl pop lock add push iret (bad) lcall push andl mov mov pop daa xor movsl sbb bound cli insl insb dec (bad) out dec arpl jne cmp enter pand mov imul push pop cli xchg add enter (bad) jp sbb jo cmp and inc xchg sbb or jno insl xchg pop aaa xchg xchg or xor xor xor mov (bad) mov das and sbbb or push inc idivb xchg jb psllq into inc jecxz cmp mov xchg xor mov iret int mov (bad) mov xchg xor or movaps je (bad) fisubr jo cmp add repz inc scas in pop dec punpckhwd ffreep inc add test or shrl aaa add adc into add aas fsts and sbb pop loop adc divl push rolb cwtl adc or pop mov adc or rcrl sub fucom jge bound dec stos repnz ficompl mov xor push or cmp aas insl jno push xor aad mov cld push (bad) test mov (bad) jmp fnstenv scas bound fdiv mov sub adc shlb xchg xchg lock inc cs sbb jne (bad) mov jg xor push outsb jl roll fisubrl loop rcrl cmp dec mov push test push xchg xor in into and fiaddl incb cmpsb adc xchg data16 dec iret or xchg out lret push orl pop test cmp imul jns ret mov out popl in out push mov fsubrl lods (bad) fs mov int3 in cli fcmovnb and xorb jno aad addl mov push repz cs stos std xchg (bad) jb inc mov pop js mov in lds cmpsb (bad) fiaddl pop aam cmp pop in (bad) fidivrl mov fwait cmp xchg jne aaa or push push inc loop es mov (bad) iret int3 push and cmpsl jns mov ljmp push aad stc mov (bad) icebp decl xor or push gs mov les scas pop or rcr cmp cmp scas sbb jns and out cmpsl push jecxz pop popf xor xor or iret rorl mov (bad) nop sub xchg cwtl and dec out lea test cmp xlat insb lods pusha or mov pslld mov pusha jecxz inc push jno mov mov inc into cmp push sbb aas sbb adc out add ja out pop push adc repnz xchg pop bound pusha jne mov adc shrl pop loop pop fstps sbb pusha rol sub or pop adcl sub loope in sub cwtl (bad) dec mov and outsl add mov mov mov in mov and leave push mov popf ljmp lds cmpsl cmpsl addr16 shlb pushf jo loop icebp dec cli scas or insl xchg lods xor fcmovu aad jg out mov push xor mov insb jne je mov loop mov cli mov jo (bad) mov add sahf push xchg ret adc fstp bound inc dec dec dec xchg and pop jno inc add in dec mov arpl pop mov mov incl hlt xlat movsl notl iret push inc fiadd mov cmpsb add sahf xor clc pusha bound add adc add imul out xchg add mov xor mov data16 ljmp mov (bad) cwtl pushf push push imul lea cmp loope mov sub adc std insb and pusha cli xor inc sub (bad) lock jae mov inc test test adc aaa jge imul cmp in (bad) rcl call push pushf in mov std ja pop add lcall adc out imul lods cltd jo and cmpsb leave pop lcall xor push sbb ficom jl outsl push sbb inc in jmp mov xchg or cwtl lahf sti cmpsb movsb pop cmp arpl aam cmp sar push sbb imul mov sbbl add mov push adc mov jb les ljmp cmpsl dec dec lret mov sbb adc mov push mov jge cltd sbb add popa adc idivl test jae pop mov add lock xchg hlt sub js cli in cmpsl dec fsubl cli inc or pop (bad) repz jnp inc (bad) test xchg clc mov push push inc jecxz mov adcl out lods push shll ss pop test lret clc loopne pop jl fisubl pop mov xchg dec jge scas lock lcall fwait jno ret cmp (bad) cli and add cmp xor adc inc mov adc loope pop jae idivb jo outsb sub cwtl mov inc movsl out xor pop cs outsb sub test jo xchg fnstenv lahf mov iret ljmp jle ds mov jle sahf sbb pop leave insl outsb or push out les bound jle sti pop push add (bad) xchg pop xchg adc sub jb xchg cmp mov nop outsb js cmpsl xchg sti sbb jecxz add cs or inc out (bad) (bad) push cmp jl (bad) std or int3 push in imul dec xchg mov stos std cmp jg mov jecxz (bad) in out sub shl out pop ss (bad) jle into (bad) mov mov pop fcompl stos ss mov sub jp pop je jecxz jmp jbe sti mov push mov je fmull hlt or xchg dec arpl sbb aad jg mov ficompl mov (bad) pop adc sahf inc adc lods jne cmpsb popa dec das add je es xchg lock popa adc andl inc divb arpl xchg das jle dec xchg inc sbb push into push and int (bad) jl mov nop inc mov scas cmc adc jp jne ds sbb addr16 xchg xchg xchg call pop cmp fbstp (bad) mov mov cld les jbe jae outsl push stos dec mov lea jge outsb dec jb adc pop jge repz sahf xor mov xor daa add icebp lcall out mov (bad) stc fsubl and push mov add cltd cs mov or stc popa in adc imul jmp mov mov inc (bad) mov leave lods or outsl xlat mov jnp (bad) mov and adc int3 pop pop push mov dec adc ds jnp mov aam sub movsb cld imulb or daa (bad) mov mov xchg mov pop push dec sub ds cmp fstps fidivl (bad) and or mov dec cld mov insl adc (bad) push xchg xor xor cmpsl dec sub inc jbe or iret add sub pusha jmp (bad) frstor sahf cmc sahf cld sub dec imul rcrb int push lcall mov je lahf (bad) jle int3 adc sbb fsubrl loope sub fidiv xchg sbb test test or daa lret inc popf imul push popl out push mov xchg subl push jo mov test mov jb mov xchg mov imul insl mov pop mov adc lods push mov adc inc or loop aad dec (bad) lret sub in jbe xor sbb ror pusha fstpt repnz jmp mov js jae push push mov in mov fst or xchg dec dec fcomps dec loop outsl arpl fisttpll inc push jb scas push push sbb pop test or xlat (bad) addr16 dec imull mov jbe inc cmpsl or and pop sub rcr mov cmp xchg in adc mov popf push pushf pop and out mov mov rol pop xchg enter lahf add sbb int or fidivr mov jo push sbb sbb and es mov test je dec fs mov inc xchg icebp and ret mov dec adc pop mov cli imul pop add xchg or mov movsl cmp lcall add adc movsb dec push insb xchg pop push push adc xchg sbb sar push pushf push or jl inc imul sbb mov xor pop mov arpl push stc sbb jle jle (bad) mov jne shrb inc je xchg lock ret mov add lods movb jmp mov adc cmp outsl xor data16 mov cwtl loop adc lds rcrl insb push (bad) cmovg imul sbb sahf and icebp into cli shll jge leave in shll dec or addr16 fisub mov cmp jae xor fistl jns pop pop int3 mov cmp xor addr16 in call pop sub imul ljmp loop dec roll mov sbb in sub (bad) clc cmpsl fwait mov ja mov and outsl jmp jae adc daa imul int jnp xchg pop jo rcrb ror imul ret cmc rorb insb mov push mov stos add int3 dec dec outsb hlt data16 mov movsl mov adc out lret xor push sbb dec add sbb roll clc xchg repz test cmp inc out push insb pop lret jle xchg sub pop pop pop mov (bad) mulb and dec je xchg mov mov dec movsl sub imul or shlb xlat fcomi sti scas mov (bad) int3 jne mov adc (bad) adc es pop cmp into ret iret popa pop (bad) mov addr16 push scas (bad) sub xchg jg pop in aaa inc jle loop adc mov and dec pop or fcmovnb mov dec jo outsl adc jl adc out lcall xchg hlt jmp lret out (bad) xchg pop xchg leave aas int flds jbe out inc test aaa sbb push mov stos jecxz adc repz call nop bsf pop xor mov fldenv aad rorb jg cmpsl inc fwait aam mov add jmp sub iret dec cmpsb iret push pop iret sahf or call loop push jmp out jo nop inc dec pop mov arpl ficompl push leave mov pop icebp fsub pusha and cmp xchg mov or cmp add pop stc dec rorb into push std xor xchg movsb pop pop xchg dec dec (bad) jp dec fimul mov or push xor xchg (bad) in call cmp cmc adc dec fcoms shl adc sub nop test (bad) stos dec cmc jmp aaa lods lods adc push imul or jae fwait jge jb mov je sbb adc sub incl sub les dec hlt mov in xor loope or ds into mov sbb in std mov call and push pop ljmp xchg dec nop pop xor and ljmp jno add pop adc rcrb insb sbb out sub addr16 mov fstl fbld and outsb mov cs rcll push adc notl add dec pop es cmc ss dec (bad) mov sub jg rol subl ror adc dec notb push ret je fstps add enter dec and push sub imul sarl lds adc bound add lahf jecxz es mov pop and mov cmpsl mov add rolb cmp arpl cld jbe lods push pop fstpl scas jg pop jo sti cmpsl test cmp cs rorb (bad) push (bad) rcrb sbb dec push sahf push clc push decl sbb adc lret icebp push cmp inc insl iret fmuls (bad) mov and and inc aad xchg sub cli xor repnz mov fldcw sub pop mov cli (bad) xor cmp fstps cmp js subb and ror sub subl mov dec loopne jno push loop dec fs sarb (bad) lock out dec clc mov dec xor cmpsl aam mov push jnp popa jmp jno stos push xchg scas push cwtl mov add pop sbb (bad) xor jecxz sbb lret adc cmp lahf cmpb pop cmp sub adc mov test outsl (bad) int3 inc int3 cmp xchg dec push add ja sbb cli pop das add jmp ss jmp stos sbb test outsl test ljmp adc inc and (bad) cmp (bad) mov out scas dec cltd js cltd (bad) cli push inc sbb sbb scas sti into mov and into pushf and js ja sbb imull lods dec push insl xchg repnz and lret lock sahf flds leave stos push fxam fmuls or arpl rcl sub sbb jle inc and stos cmc mov loop (bad) sarb xchg inc fisttpll adc (bad) jne repnz inc and loope push xor fisubr mov pushf mov fild out add jne inc sbb rcrb mov mov jae push adc ja cmp dec in hlt push push jmp (bad) ss or dec scas push ljmp mov dec cltd jmp push and push (bad) outsl cld sbb pslld adc and lock clc daa es sub mov gs adc dec lds lods (bad) mov adc test clc mov cli pop pushf xchg push dec stos fbld jge icebp cmp scas jnp or ss int sub sbb push ds ljmp hlt push xchg adc out aas fwait repz leave pop jo adc call jae sbb cwtl cld adc dec mov push shlb cwtl xor xor jg add cmp add iret loope mov dec repnz cwtl xchg inc and mov (bad) rcrl sub popf mov inc inc fwait rolb ret or pop push inc xchg (bad) cmp lretw cltd popa pop push push fnstenv add cmp fs fwait lods out jae pop mov lahf fsubrl xchg aad mov pop or push inc mov loopne stc mov jne jl imul pop leave repz xchg mov pop daa in xor mov pusha jmp mov repz outsl pusha mov pop stos xchg sahf jnp pop aad ja push add aaa or push popf xchg jge lds mulb ljmp sbb mov fwait or mov js outsb pop xchg orl push add stos fbld loop orl scas jmp fcmovnbe popa sbb outsb xchg addr16 imul pushf hlt xor push negb push cmpsb xchg mov imul ret xchg sub cltd mov mov sbb addr16 out lret fldl mov ret xchg and or pop daa nop das push adc pop mov movsl stos and fst aaa aad pop sub or imul dec pop negb adc int3 (bad) lret mov hlt lods cld jp ret cli rorb call (bad) mov inc mov push jne outsl mov movsb popf mov stos icebp mov fnstcw or mov pop jo mov insb je shl dec ds (bad) leave jmp insb mov das test movsb sti cmp add pushf xor sahf inc pop inc inc push mov mov xchg ficompl mov xlat pop mov push add sbb iret out out dec loop mov and adc cltd incl push testl in ret xlat mov lods lods loope mov ds push lret fistl xchg mov sbb jecxz push sub sbb mov fadds xchg jne fsubrl dec sti ret lods xor js cli or fdivrl (bad) movsl xorl icebp pop mov xor cwtl popa and test sbb test sub ss or aam push mov daa aad mov sbb or jl pop das in mov sbb adc (bad) sti cli xor std adc aas aam rclb fs shr mov xchg adc cmp sub mov int3 (bad) cmp and fs call (bad) dec jle cmpsl inc test dec test js pop mov adc jo fwait cli in push cmp xor dec xchg push xchg int3 adc adc jbe jp and inc cmovnp add mov adc sub scas jmp xor std sti aam mov rorl push fcmovnbe dec pushf sbb bound adcb inc jg out add stc repz mov mov aas loopne mov pop mov sbb repz pop sti clc xchg dec mov xchg xchg sti ljmp xchg jb (bad) sub adc cmp stos cltd push inc mov (bad) xor nop mov dec fadd jg lahf (bad) imul dec jns test and inc adc push adcl cmp inc xor aaa nop push cmp out clc push mov clc mov add out xor jae mov decb aas or lods loope call jns pushf lock add jne fldl insl jmp cmp clc les stos stos pop lods add cmp xor jg dec and mov sub push (bad) sbb jle leave adcb fisubr jg mov dec sub out sbb data16 and fadds xor (bad) test out xor aam popf mov add jbe ret sub enter scas fidiv sahf cmp aas cmp mov mov (bad) jns mov sbb dec popf pop cld jmp xor pusha dec mov xor mov push movsl out sub inc out imul sbb mov leave out aaa into std fstp cmp cmp or xor or jnp (bad) mov popf mov loop xchg call inc cmp and xchg scas repnz and pop xor out cmp hlt cmp aam imul push lret cmpsl test xchg enter nop popf cmp jl stos movsb insb push pusha dec mov adc jmp jmp mov fcoml mov gs lret and fisttpll les mov xchg sbb data16 jp jae js roll cmp jnp or mov xchg shlb jns ret sahf bound adc lods or lock loop sbb xlat adc mov push push pusha cltd sbb xor cmpsl inc rcrl mov fildl ja pop mov jae mov cltd test pop jb je jbe dec loope popf mov aas push mov hlt pop push pop mov sbb xchg popa jb xchg dec loopne cld or push arpl jnp (bad) xor rolb pop pop mov fmuls insl js pushf jl pop xor js adc or mov (bad) int sub in mov icebp call cmpsl fs das sub mov dec leave xchg mov sbb adc sub in add int stos test icebp fimul scas cmp ret push push std inc push in fidivrl fadds test jns mov scas fbstp (bad) in loop mov sbb fcmovu adc and mov add mov lcall xor fsqrt jne (bad) ds ja lahf movb scas xchg mov sbb ret aad (bad) cwtl test adc je or adc push (bad) push xor insb inc fs xchg xlat nop xor xchg mov push stc imulb adc adc scas dec test or jnp push xchg sbb sub inc add sarl and out (bad) mov xor mov clc imul ret push aaa pop mov push fistpl stc pop fldcw data16 sbb adc addr16 std nop cmp insb pop mov pop pop es inc enter sub enter and xchg pop xor sbbb mov aaa test (bad) popf das inc dec jp enter loop sub sti adc iret mov mov (bad) rcrb ss sub scas pushf xor (bad) jg nop ret push les pop hlt sbb cmpsb in mov loopne (bad) mov xchg inc icebp inc mov add jne fdivs test nop dec test and repnz stc xchg into dec pop (bad) aam cs sbb cmp pop jbe pop push lea mov cmp stos lret cmpsl sub out insb add je popa xor jge les xchg mov (bad) subb lret pop sbb xchg orb (bad) (bad) cltd push int cwtl jb leave loop (bad) repnz pop sub je imul mov fadd std popf jns inc inc out fxch pop cmpsl out fstpl movsl adc mov jmp stos cwtl push enter hlt test (bad) push aas dec bound mov sub rcrl int3 mov adc lret popf test out xor xchg add push inc imulb (bad) mov stos adc cmp mov ja in dec inc and cmp stc (bad) in mov fidiv push bound xor inc sub adc (bad) mov leave inc jno pusha aam or aam mov cli pop lea push daa xor inc sub movsl jae jmp cmpsl les or or push pop arpl stos cltd and jns dec inc push cmp icebp pop dec pop jle cmp xor sub jbe test clc inc int pop out xchg test jmp cltd push loope mov std iret loope adc inc xor jne mov sub and jnp mov adc ja rcrb ja jl mov daa dec inc pop nop mov adc push out add push mov inc jp int3 jb xor outsl push push stc (bad) icebp sbb xlat (bad) mov rcrl jne pushf xchg das pop add or pop pop cmp (bad) mov sbb inc insl sbb cmp jge mov push orb xor jb jae,pn jecxz mov xor and jl jl mov cltd pop mov sub js fimul nop sbb insl loopne ljmp enter mov ds pop dec or cltd mov dec mov adc ds popa test pop fmull fs mov out insl out addr16 fistp mov and mov xor int add mov mov enter arpl std pop push xor dec movsb mov clc (bad) clc inc add cmpsb mov imul xorb lahf cmp in scas mov sub push xor sbb sub shlb mov out cmp adc mov mov sbb or dec mov pop fcoml mov cmpsl jmp push cld imul lret out and sbbb imul mov jp push test jl sbb or pop pop popf sahf mov lret jns mov xchg rolb loopne leave cmpsb cmp xor add arpl scas adc add (bad) dec or mov rcl mov lcall cmpsl jo clc sbb out dec inc inc cmp pushf add or stos mov jl fild cmp inc out pop pop push mov and inc (bad) pushf into iret mov nop mov movsb sub les (bad) mov pop out pushf push dec inc cmp mov push fwait jge or negl cmp push dec lret sub faddl inc mov pop je test mov or fwait mov aas mov (bad) jp mov std std pop jle fst movsb add dec loope adcl xor adc mov test and push inc jmp js ja pop ds test dec xchg jecxz push adc mov fadd push xchg jge loop jg or cmp sub dec mov push sub popf test in mov dec jnp push popa aas loope ret adc pusha xchg xchg sbb pop shrl fs (bad) (bad) jo dec imul mov cwtl mov insl inc lret or xchg adc dec dec adc ss (bad) xchg push pop push pop mov movsb shrb xchg (bad) in jecxz mov mov mov dec (bad) mov shlb pop mov mov test pusha dec push clc cmpsb inc sub pusha into xchg xchg clc inc out leave xchg jb push push test hlt aam mov test insb in push in jle mov (bad) jge rorb repnz out pop xor scas cmp mov or sahf mov and cltd xchg xor test adc or repz mov lret (bad) lock hlt lock in xor mov xor cmp push mov mov push movsl xchg (bad) or mov push test xchg (bad) sub cmp call add or jge push and repz xor js into stc loope inc adc inc inc cmp adc test add (bad) push sbb call mov std cltd gs push pop negb pop popf into in out mov cmpsb sbb xchg mov sub cli sub mov movsb imul test test xchg repnz pop pop cmpsb mov push cmp cmp jb inc ljmp (bad) cmc cmp xor xchg (bad) or (bad) jbe (bad) data16 or pop lds js push nop pop and stc lods adc je (bad) in ret sets jge push or jns add fwait sbb sub (bad) stc jg movsl inc cmc jbe stc inc push jno sub popa andb shrb adc mov popf loope push daa adc inc inc adc xor jbe int3 jecxz sub push xor and rcrb jecxz sub mov dec sbb out add scas mov pop or fs adc pop xlat or mov or mov xlat das imul mov ret andnps jp xlat imul push daa mov mov or fildll dec xor arpl fnsave and lret gs mov jb hlt cmp jle mov insb rcrl adc pop xor popf movsb inc mov push repnz lods addr16 xchg fs push mov test inc (bad) jge lcall scas pusha fildll cwtl jae fbstp into sbb dec xlat (bad) cmp fldenv mov hlt mov and jmp sub pop rcll jg cmc outsl stos bound and scas xchg jb imul pop cwtl mov je ret scas and push jp out add lahf push push not dec imul xchg mov sub aas sahf pop icebp cmc aaa rcrb add das (bad) repz xchg icebp adc rol insb loope popa xor mov subl mov jp,pt (bad) rclb or dec xor das sbb dec cld cmp lods je sti les pop lea pop shll insb insl or rorl clc cmpsl negb int3 test push test enter dec fninit (bad) lar mov jns xchg jge dec gs dec push fdivr gs inc ja jmp stos inc mov stos and xchg lahf pop xchg (bad) cli test xchg outsb mov std or xchg inc sub sub and fdivl sbb mov call cmp das lret imul pop inc and jmp fucomp movsb fnsave jmp mov test lret (bad) (bad) out mov or fdiv add sub gs sti xchg (bad) outsl fisubrl mov in mov inc arpl push xor jle mov stc cmc add fnstcw clc out push bound push lcall fstpt push mov add cmp lcallw iret movsb dec add inc sbb test leave sti xor gs jae push icebp pop cmpsl nop popa adc pop mov sbb sahf mov cltd add adc ss pop out (bad) minps cmp sub ficompl or sbbl cmp jl jnp sub ret add inc es out dec cwtl adcl sarb mov add mov out imul and shrl mov push cmp mov sbb jb dec jl push mov add jp mov xchg out sub sub lods das mov mov repz jge ja hlt xchg icebp fdivrl enter ret pop cmpsb clc lcall test pop imul repnz cmc nop fdivl push pushf pop inc pushf push dec and out (bad) test pop mov jmp jb mov shlb mov movsb (bad) or jnp test arpl pop loope cmp out out psubusw outsb mov inc out std pop in dec pushw es xchg and (bad) in int in jecxz inc jbe lds pop ljmp inc es sbb fdivs or xor sarb ret jmp movsl jle sbb insb sti cmpsb js pop lock xchg jge and adc in jnp cmp enter in adc insb mov fwait cmp mulb rclb push push mov dec in pop (bad) lret insl rolb inc cmp mov lcall sti data16 std jns insl shrb jecxz xor popa sti ret cmp jno cmp sub jbe andl fisttpll or and mov add bound ficompl xlat cmp xor dec push push insb ljmp xchg jmp in inc push ror pop mov xor lret adcb fisub or test adc iret add push movl xchg mov dec adc xor repz movsb mov ds lods test jae or and mov mov mov cwtl out xor insb aam jl mov pop es into dec mov inc enter dec pop push mov sub jae jp adc nop add adc test xchg mov mov push lahf sti test hlt jmp rorl jge fs mov popf out jmp aaa push mov out js push jns push push popa (bad) pop jge push rcll shr pop je cli pop dec stos push loop xchg lcall in into ljmp (bad) add push in addr16 jne or mov subl test dec and mov scas mov test mov popf and cmp rcrl jl leave jp iret sbb rorl mov cld jb sti push and dec clc mov lods aam and test loopne mov adc test pop stos jl mov or cs jae add pop xor cmp lods (bad) dec mov jecxz hlt int3 mov sbb inc pop ds dec roll mov icebp (bad) rorb jmp cmc mov xchg mov pop sub mov sarb pop or repnz xlat std movsb ja addr16 into fidivr adc xchg or jne stos sbb adc inc and mov imul scas mov pop cs xchg (bad) mov push or pushf cmp mov nop sub mov adc pop cmp xor mov repz mov and icebp mov pop gs xor lods sub or in popa rsqrtps push in es push add movsb mov cmp pusha inc (bad) stos jno jnp mov (bad) inc xor sbb adc xchg pop dec jbe and scas adc jno pop rcr push pushl fisubr aam adc fisub aas ffree std add pop push dec mov ret mov or or movsb adc scas insl je fistl mov adc jnp repz inc sub mov add in and push add frstor mov (bad) iret repz daa fimull bound fcom jecxz mov data16 pop test fadd cmp xchg addl and push lret xor (bad) jnp xor mov (bad) jmp dec pop xchg sub and fdivrs enter sbb inc sbb repz in lods test xchg mov lea (bad) aas out ror insl test mov inc arpl jno lret insb jno lret fwait rorb xchg sub mov imul pusha mov ret xor fucom inc (bad) mov jge inc jae ret bound push clc push lds jns mul inc jnp adcl outsl nop (bad) mov sti xchg sbb lock push clc std or in dec fidivl pop pusha cltd cmp add or ret fsubs fnstcw add mov mov mov arpl aaa aad jmp pop xchg mov add jmp add sbb push sub mov push lret nop out jg iret lret jb rcll pop sbb jg rep or adc mov push pmulhuw repnz inc xchg dec sub stc idivl mov scas dec and fisubl jnp xor xchg push les jbe push sub ret aas pushl shlb xor inc xchg mov xor clc jecxz mov in addr16 mov xchg push fldenv inc dec (bad) outsb jo les push jmp decl pop cmp loopne add (bad) sub pop add sub sbb mov (bad) xor outsl or test push or andb push (bad) stos lock xor mov sub jbe jns (bad) pusha cltd cwtl lret int cmp cmpsl lret leave jl scas xchg pop shl in and pop (bad) lea push push mov fisub pop cs adc lret mov mov lret or jl movsl or scas add jns xorl lock push hlt stos xor sbb cmp dec call aas call sub mov test pop shll or loop sbb shr jae jp dec jge nop lods mov loopne sub adc add sub add aas (bad) mov lret xlat test add les sbb adc sub outsb int3 push sub lods adc cmp and push xchg xlat jmp sahf adc add sbb int das test jecxz cmpsl push in test std dec inc js aas aas sbb inc jg xor hlt or popf sti lcall dec jmp test into aad mov cmp dec mov push mov xlat sbb pop jnp std int mov std fxch inc test jns pop fs gs ss mov rolb add call push cs xchg sar sbb xor inc push fsts cmp jae mov add clc lcall aam cmp add lret jl jnp xchg ljmp pop cmc nop iret aad push repz sbb pop icebp les aam popa xor out std pminsw pop inc xchg jmp jbe adc pop dec (bad) pop ret test imul mov data16 sub daa jp or call pop callw add or push dec push outsl sbb pop push les mov jl cmpsb mov jno mov sub and int3 pushf out rcrl into orb test loope test sbb push cmp mov test inc bnd mov mov mov or cmp loopne pop int3 ja aad jne cmpl (bad) sub jmp lahf fs push cmpsl xchg test jge jmp sub fbstp lahf mov mov pop movsb sarl dec call or (bad) pop sub pop pop xchg and in xlat ljmp dec jle mov mov test insl icebp mov loopne cmp test or ss stos mov es dec leave adc cmpsb (bad) aaa cmp xlat jp sub mov xrelease (bad) or movsb or fistl das das dec addl repnz xchg lahf or (bad) int sbb or mov sub imul test push push mov mov mov ljmp in jle icebp or popf and add cmpl sbb mov sti mov pop push lods push lret mov mov push test fimul adc lret scas call xchg or jns sub sbb inc cmp cli cli sbb stc test test movsb pop lret pop push sti fwait lea sbb xchg jne aam mov je test inc fcompp mov push mov push lds stos cld jmp xor enter mov push fstpt out loope loope mov sub ljmp nop dec xchg (bad) std xchg sub mov aas (bad) (bad) cli inc pop sbb and mulb andnps inc jmp out cmpsb sub mov xlat test cmpsb pop mov pusha and psraw push xchg xchg andl or jge sub es xchg loop icebp sbb icebp frstor jmp mov pop mov cltd add cmp fsubl pop ficomp or repnz leave jmp stos jbe pop jae cld jo adc mov dec add inc pop xor pusha mov jae pop jnp cld sbb in cs adc xchg and mov jnp pusha mov push daa or clc cmp jg lahf push sub push aam jmp fucomp lcall das ja pop cli mov cli cld pop inc loope in cld cmp pop into mov int3 sbb testl lahf insl add (bad) mov sete mov push or imul jge inc or stos lods mov lea fucomp jns dec loop jmp scas data16 jp pushf mov lods inc mov jmp xchg mov out or ret aad cmc mov jl mov decb xchg push repz add mov jg aas or rcll insl mov pop cltd mov imul call pop mov dec sar push cld loop or insb int3 cmp mov pop sub mov pop sub mov and outsl dec in sub and sbb repz push adc nop inc xchg sub dec jl daa mov adc or mov test add aad rorl outsb and mov sbb stc xchg int3 mov xor jge push xor pop lret mov xor jg inc push outsb out push ret mov dec pop fisub mov push adc out rorl mov jmp cmc cmpsb sbb jb es or bound sub testb xor incl cld pop in jae (bad) (bad) (bad) jne ret lock addr16 push in adc daa push dec mov cmp xchg lret enter sbb repz mov shl fs pop stos push (bad) jl,pn movl xchg mov in push pop inc dec scas movsl dec (bad) cmpsb ss mov push and jl jb xchg mov test scas lcall lahf lret iret sbb push sbb adc div movl fcoms outsb xchg stos das and cmpsl mov jl sub int push out mov inc cmp pop sbb push push xchg dec dec and stc add data16 rcrl (bad) inc cwtl add clc sbb divl pop int3 jbe js test jecxz xor pop mov sub aaa pusha jne xor xor cli lods mov out jbe int3 xchg pusha jmp cmc dec data16 rcrb nop sub inc stos ljmp inc fiaddl cmc jg fnstsw scas pop in into add stc mov mov mov lcall js cmp ret incb xor icebp xchg adc shlb dec jne sbb push push xor mov lods inc fwait repz pop popa stos add ds out push cmpsb and adc cmp movsl xchg pop std pop enter loopew outsl into xchg clc cmp mulb push xchg jg out adc lret popf mov aad cmp sub dec and ja arpl mov push cmp stos xchg arpl xchg aam (bad) aam ror dec xor mov push frstor sti inc loop test inc mov or sbb mov lcall and sub pop cmpb mov aas mov notb mov add add push icebp in mov pushf fcmovb (bad) add mov fistl shl inc xor rcr pop insl mov stc mov pop daa jmp pop cwtl (bad) jne add (bad) mov pusha cmp cmp xchg ret add add jns pushf lahf fistl out pop jne dec insl loop jno pop xor jl out shl and insb js rcr (bad) imull psllq xchg arpl push orl out imul rcrb xchg in ret int3 adc dec mov addr16 lods ds fwait orb stc mov test jle scas in add add shll push je enter and mov sbb xchg ret sub xor in push and fisubr sbbl cmpsb jle push in and pop xchg adc popa xor lcall test clc into xor bound roll lods inc sarl pop dec insb mov mov leave cmpsl sbb xor cli jae xchg mov inc push xchg push imul mov scas mov stos imul mov sahf and icebp push pop out lea shlb xchg push push and out (bad) xor push pop scas xchg je cmp sbb ret xchg pop test xchg xor mov (bad) movsl adc mov in add fimul movsl stos test sahf mov shll mov xchg mov movsl dec xor fdivl pusha cmc rorb pop mov popl cmp add loope inc mov add pop lret push or inc xchg test adc (bad) fstpt cltd jae cmp and ret or inc xchg mov (bad) inc push mov sub pop fwait enter imul in arpl nop xchg xlat and sub fistp mov lret insb subb xchg adc sarl loop fadds inc test test mov ret das add sbb aaa push jp aaa push ljmp and xor (bad) in pop test push fst pop push mov xrelease add adc pop add cmp mov andl xor rclb std jecxz add mov test or xor pusha js insl popa addr16 insb insb add sbbl inc iret test push dec mov fucomp scas loopne push adc (bad) jae inc and aaa ds divb add lcall pop in cwtl xchg sub pop mov cmpsb dec cwtl cwtl outsl leave out lds sub or sub leave shrl incl stos and push loope adc push adc pusha and scas inc xlat pop stc inc js loop sub and fistp rorl nop jb xor out inc mov push nop xchg inc shll loope sub pop push adc push or dec push scas inc xlat clc sub sub mov shr loope shrl int fucomp xor andb mov in push mov push idivb sub mov pusha ljmp cmpsl outsl int3 mov lods test jnp sahf into xchg fnop ret adc scas or mov sub cmp in dec or xchg mulb jne stos sub cli inc add mov repz inc (bad) out inc rorl jle xor xchg lods adc push pop lock cmpsl (bad) mov push or push adc inc das js scas inc xlat push popf or test pop or push fs in push sbb hlt imul xlat jp sub scas and jp lds mov lcall adc add adc pop jno iret cmp (bad) and inc pop xchg dec push fsub sbb mov and xor lcall push lret (bad) xor lods popa fwait outsl subb xor je mov cld xchg dec push adc je arpl jecxz pop mov or fdivrl mov addl and out cmp or fcmove jo jbe push hlt push les lret xor or or push xchg hlt dec add cmp (bad) cmp negl sahf mov lea push mov (bad) hlt mov jns jmp jmp or push stos es repz xor in inc mov push jae setle lret leave fstpl sub in nop testb xchg xchg sbb jecxz push cli and sbb les cmc je pop iret into sub pop fistpll data16 xor xchg or sbb add pusha lea je lea lea pushf lea call lea call pushf pushf mov pusha xchg push push lea jle jae movzbw lahf movzbw xchg pushf lea pusha movzbw mov setnp push mov lea bswap call pushf push lea ja jb xor pusha ror add jp cmp dec movzbw call cmc sub pushl pushf mov lea lea jmp push mov inc ja mov dec int3 xchg rorb adc dec ret test mov jge pushf fwait push (bad) xchg xorl sbb jmp pop aaa iret aas fisttpl add pop rcrl mov loopne pop imul xor or imul lods and mov xchg xchg subb inc and jno inc mov stos aad jmp mov sbb imul mov sub shr (bad) lahf cmc push test lea clc jae xor test jg mov cmp rolb mov cmc call jmp xchg imul fwait lock sbbb jbe push xor inc push inc fs int3 pop or adc and pusha or mov pop mov aam rcr (bad) sub fisub inc mov inc and test or addl adc data16 aaa push jbe mov fwait mov lcall dec xlat inc or or gs cmp roll xlat mov jg stc mov cmp cmp lea xor lds jo inc adc pop xchg (bad) fidivr jo sahf mov cltd push lock std std test xchg fs mov ret jae aaa ljmp xchg pushf mov pop fidivl xor and sbb add dec push and aam pop int3 add in sub movl mov xor es in xchg push mulb out add dec add pusha enter rorl test sub inc fbld lret mov (bad) movsb add andb inc and (bad) mov out xchg add push into sub push mov paddb pusha popa mov push out stc jae negl je push sbb xchg addr16 add pop inc fcmovbe jmp popa imul insb cmp inc mov mov cmp pusha xchg popa out enter (bad) clc pop push pop mov loop in andl out and inc push jno jb into insl pushf aam and mov lea jo push lret add add mov or push inc (bad) mov testb xchg or test add jno or cmp push stos xchg push inc push inc rcrl or test or mov jno jb sub fsubrl push shll insl dec mov aaa sarb dec inc and loop mov jb bound sub popf js aam stos fsts pop xchg dec pushf aaa add inc inc fimull lods cmp adc fs sbb jmp add (bad) cmpsb outsl sub ret mov in push and and xor lea pusha lea call pushf cmc mov push bt call mov pushf xchg mov setae push mov movb pushl jmp pushf lea jne pushf neg mov pop shr clc call jmp call pusha movsbw rep jmp push push lea jne setge lahf movb setg movsbw ja push mov jmp mov pushf cmp pushf jmp mov or movups fdivp push cmpsb add mov lods bound cld mov in test mov in out dec add mov imul fsubrs and mov outsl mov jns sbb push mov out mov or test xor sti sub xor pop daa lcall jg cmp stos icebp in pop nop jbe jae mov pop lcall xor (bad) jmp icebp stc push rcrl mov dec leave push ljmp mov add sub ds ss aas jle push pop mov or test aam adc sbb pop push test (bad) rorb mov pop sub (bad) pop push call mov popa lahf push ficomp out clc and mov xor cmpl xchg xor fcoml sti pusha sahf (bad) mov insl stos adc cltd repnz in and dec or add ja mov mov sbb and packssdw pop jmp jmp pop leave aaa call pop sbb fwait sub xchg (bad) cmpsb fidiv movsb iret sub test shrb push mov or push inc jb rcl pop jbe jecxz xor mov inc (bad) mov dec stos test in pop out movsl lret mov shrl jnp pop out arpl pop ljmp lds sbb inc repnz loop clc outsl lcall iret arpl cwtl adcb sbb lret leave jo fs push int std mov fs inc cltd sub or into call push outsl cmpsl pop fisttpl (bad) (bad) and ffree ret xchg add jecxz repz fidivl inc insl lea ret mov mov xchg cmp int cmc push insl mov and or mov js sub out int3 bound es and cmp xchg sahf mov mov (bad) mov cmpb xchg push dec (bad) mov icebp or lock std insl mov push xor cwtl imul mov add stos mov aaa mov in xor cmpl pop sub clc fldt ror test mov dec push inc mov mov dec cld xchg popa add push fbstp pop cwtl xchg iret daa push pop jb add jb call call adc sbb bound push push mov xchg insb mov add movsb push dec mov adc adc dec clc jne adc ja or adc and pop mov pop pop ret ret icebp jns mov mov sbb and jg outsl ret inc movsl lret pop aaa out imul cmp or pushf mov pushf mov jae sti xor clc dec incl (bad) cmp js or lret or outsl pop loop out call fisubr add push movsl xchg std xor sbb ljmp lahf pop shl mov push pop mov push mov push mov hlt or clc cltd imul in inc mov popa jne sbb popa das ja fdivrl pop in or xor mov inc mov mov jbe xchg out lret jnp (bad) jmp imul push push stos mov loope add push test arpl lahf push out xor dec call (bad) xchg test aas imul inc inc jno push pushf jns dec (bad) push int or rolb jg xor clc jbe lods add or loopne lods adc fs push jno or push repnz xchg dec pusha movl jmp js push xlat jmp inc cmp ljmp mov lret (bad) mov adc push dec xchg and test jg mov out sub adcl cltd xchg mov adc sub mov fdivrl stos scas lcall push mov insb or jb dec xor aaa mov xchg cs or enter sbb jnp and int3 sbb test mov xlat shrb dec xchg add loope mov and out push mov gs stos adc ret pusha test jg cmpsb jo add mov int (bad) pop mov inc sbb and lea jb jb stc cmp cmp inc mov lea sbb movzbw lea lea mov push call lea je ror dec setge push add movsbw inc adc sub inc bswap lea shr and bsf ror pusha mov stc inc jmp or adc hlt or pop lods or test or in sbb mov xor xchg sbb hlt insl adc int aas inc shrl bnd and pusha lcall and jno inc mov call mov mov add lods push sub inc inc jge xchg dec iret mov aaa mov gs push (bad) repnz mov push in je jmp shlb mov sahf adc sbb sbb adc mov lahf or insl jg bound stos fdivrs jnp (bad) mov mov scas std loope arpl adc outsl adc mov and or outsb pusha pushf lea jne pusha jmp cwtl call push (bad) mov ss aad adc mov movsl popa xor addr16 (bad) and lahf xchg test xchg adc mov (bad) push or push mov add fsubrs jns roll (bad) repz ljmp je daa mov fidiv call adc hlt mov push mov in pop outsb popf int3 movb mov call jg fimull cmc or mov imul lret cmp lret mov (bad) xor popf xor loopne or movsl pop xor popf mov out jl or popa fwait ds or or pop sub adc iret pop cmp pop outsb out in lret movsl dec mov (bad) into sahf push enter pop adc mov adc iret (bad) sbb cmpsb xlat mov adcl mov add aas fdivs lret rorl faddl outsl out xchg mov xchg lret (bad) push in jl std dec mov inc or mov lret cmp arpl ljmp xchg (bad) or mov sub pop adc aam add ret push jns sarl repnz pop mov xlat rorb aad mov fnstcw lds mov and sbb xchg (bad) push or lea cmpsl inc add adc and scas xor push mov stos popa mov imul js in sahf fidiv xlat add out inc cs push pushf pop repz mov out dec mov inc pop aam fidiv mov jle sbb adc js pop sbb add push xlat jmp pushf movw lea ja push jmp jmp mov xor lds (bad) jno scas in fadds lock testb stos inc mov into sarb enter xchg sti loop cwtl push (bad) je pusha lods out dec adc call ljmp (bad) arpl sbb test sbb ret pop loope dec dec inc push mov adc negb push (bad) inc test push inc daa dec and jp aas scas std pop pop sbb test xor test dec shl cmp add mov inc cmp mov out int (bad) fcmovnbe pop lods cld mov out cmp pop loopne mov xor ffree fisub cmpsb mov in (bad) sbb in mov rol in dec pushf xchg fwait xor and je bsr add bt pusha sub ror sub bt shr btr sub call in es sbb or cs dec fcoml fcompl fstpt mov sbb push and sti add pop adcl movsl lret lret rcll or daa push cli push call scas repz mov pop dec rcll mov xor cmp adc andb imulb ljmp loope cmpsl outsl ret jb imul jmp scas add iret mov mov leave stc or sub pusha fbld cmc or insl add push (bad) cmpsl iret stos pop ret inc test mov insb sbb dec add cmc insb in lods lret inc movsl fs sub add and jmp hlt sub mov call sbb pop icebp or jbe sbb cld mov push hlt (bad) mov ss out mov mov jl out xor daa outsl pop test pop push popa leave push or (bad) pop mov and fdivs (bad) cmp lahf push and push imul gs out mov jl mov pushf movb push lea jmp cmpb jne shll shll push lods not sub ror not mov pop ret xchg dec pushf repnz mov cmp lcall lret jg sbb cmc xchg incb mov dec shrl jle ret lahf in (bad) aas icebp xchg imul test cmp push adc outsb in pusha (bad) adc lret cmp xor lods dec pop movsl insl mov cwtl test adc and mov dec mov lahf pop mov push stos nop scas lret rclb push add push xor mov jne stos sbb je fnstcw call enter mov gs sahf dec pop push xchg test xchg sbbl dec mov in lods movsb and add aas fistp idivl and fisubr pop out push leave cwtl cmp test js fadds (bad) out maxps add sahf jne shrb sbbl dec pop push inc mov clc ja jno clc outsl jp mov jae (bad) les jp sbb iret adc sbb nop cld and stos ljmp push add mov push inc mov jle test enter pop sub mov mov inc (bad) jb insb negl sub adc adc lea jae scas sub mov cmp mov lret or xchg outsb (bad) lods jbe fs sbb in xor in jo daa pop xchg xchg xchg cmpsb adc xor jmp dec mov push (bad) cmp (bad) and roll mov push adc outsl inc push dec jg lret sbb mov mov out lds xchg jmp fld (bad) in mov (bad) mov lret push testl imul into mov sti adc xlat pop out test es outsl fsubr and jbe std jne (bad) dec mov mov (bad) mov push adc les cmpsl jle xchg sub popf aam inc and sub sub (bad) push in (bad) decl divl fdivp rol (bad) leave mov xadd cmp mov dec add sete xchg movzbw setl setb pushf push lea pushf jmp pusha adc jmp (bad) dec fisttpll cld or sub ljmp mov mov pop push mov xchg dec outsl mov ffreep sbb adc push lea lock popf ret cmp aam pop ljmp mov fsubrl xor in xchg popa cmc mov cmc add mov aas imul add mov (bad) popa and jo les mov stos je dec negb push mov les test cmp jo add sahf mov mov popf or pop dec test add bnd mov test mov fs ja push lea call jmp and mov std or inc roll loope lds fninit jge jns sbb pop and pop aaa sub inc in push stos aam ja jb lahf jmp clc test out sub push imul cmc jmp cmpsb arpl dec mov cmpsb mov add dec xchg pop out aad inc xor bound sti stc pop add lods mov lods bound jnp pop jne add sub ficoml es mov cmp daa add sub sti aam push stos test dec sti lahf mov push insl cltd vmaxps cmpsl outsl arpl lea es andl add cltd rclb inc stc decl add stc incl call jb mov shl lea call add pop ret push mov push sbb pushf pushl jmp push lea jne cmp cmc stc bswap mov rol pusha sub not lea cmp call push movl pusha movb pushf movb lea jmp lea jae add btr pop sbb movzbw pop sub mov mov shld cmp pushf mov pusha jmp lea call btc add xadd aam pop sbb btc shrd pop pushf stc cmp pushf call pushf cmc test mov mov call lea ja clc imul test bt bt add pusha pushl lea jmp pop inc xor decl lock xor xchg je bound push mov jp idivl lods sbb out and jge or dec cltd add pop int3 inc or and mov insl xor adc dec stos mov cmc fiaddl sbb and lock or nop mov popa rcrb add nop test pop popf mov jmp mov inc and fsubrs fcomip pop das push dec or mov imul jge add scas sbb aad outsb ret test add dec mov pop jne add mov inc in pusha call sti add je ja mov push stos adc loopne movsb sub data16 or imul dec loopne fdivs pop dec insb xchg (bad) hlt lret push int3 fcompl fdivrs mov (bad) popa loop gs stos sbbl rorb loope push xchg dec sahf imul jle rolb int sbb lret xor add das mov xor inc xchg arpl lds rclb (bad) lret mov push xchg pop lods das int cmp push stos adc mov cmp xchg mov add xlat push fnstcw jg inc add jmp sbb hlt js pop jge and in stc pop mov call push mov inc push cmp aam jbe ljmp pop mov ds jnp pop mov mov push lods mov mov push out pop fstpl (bad) aad sub icebp push lock add or and mov fisttp aas push xchg or rcrl xchg bound lea jnp sub cld rcrb push mov sub mov mov mov das rcll les mov jns xchg push inc stc jae xchg mov notl push mov mov les incl pusha lea call std scas pop fdivr or add mov and aam inc outsb and sub aam mov cld mov in sbb jo and movsb cmp out fisubr sub fsubs inc int3 xchg das test dec das aaa pop mov jbe sbb jnp adc faddl (bad) out sbb xchg xor pop dec lock addr16 das popf lods insb push test push cli adc gs ljmp mov gs lcall jmp xor pop fstl jge xor inc test or sbb insl push rorl pusha mov imul dec aas into out cltd sbb out mov dec (bad) popa cli add lock jno pop pop sarb icebp pusha scas dec mov ficompl cmp (bad) jno push push loope mov notb cli mov in mov fwait mov cli shll dec and jecxz push cmpsb mov add and push (bad) in lods mov xlat test xor mov scas (bad) jno mov stc xor jbe mov addl loope sub mov cmc xchg jnp jb fisttp cmpsb or icebp mov fprem1 adc pop mov inc push call mov sub dec sbb push push xchg or mov rcrl add and cmp fadds ret inc cmp jne mov fstl inc cld (bad) sbb insl sahf (bad) in hlt cmc popa pop scas xor xorl xor imul cmp jl jb cwtl fdivs scas push inc mov jge arpl cmp movsb or sub pop fdivrs mov cmp or mov push test addr16 push dec mov jle dec leave jbe rclb js and sub sbb jg mov inc ss mov fmuls mov ss sbbb xor sbb shll fldt or xchg aam lods mov ljmp (bad) push cmp mov rclb push mov mov out out push jmp iret loopne cmpsl stc dec sbb jecxz and ret mov in jmp fist lea scas or test fnsave ja cmpl in lea mov push inc mov cmc add (bad) aad loope scas pop sbb (bad) lahf mov and xchg lock (bad) mov dec bound (bad) or decb dec cli pop pop insl notl cli and out fdivs or je pop lahf int bound pushf push add adc je fcoml sahf dec sti arpl add adc fwait data16 mov inc (bad) (bad) pop loope testb insl aam mov dec fildll mov add aam sub push cmp lret add (bad) (bad) and jno out fdivrs inc inc lahf adc sub mov push add inc gs outsl insb fs popa je inc add bswap pushf pop mov pushl jmp dec gs sbb aam xchg inc dec inc cwtl (bad) cmp jl cli inc scas jne,pt xchg imul xor push xor sahf pushf clc xchg cmpsb pop cli ret ret push daa mov add inc jle push mov sbb mov nop sub (bad) lret ret (bad) jmp and pop mov scas cmpsb aas push mov sub mov imul push push and (bad) pop add jno outsb cmc add pop cmp and in jae test call insl out mov and push pushl ret push lea jb lea mov cmc mov test push stc shr pusha adc test cmc bt stc sub stc shl pushf call cmp push push inc enter iret scas fstps push dec mov jnp inc fldenv sbb pop stc fwait test movsb jl mov rorb jmp add je mov jmp in or roll push inc push sarl mov adc xchg mov in mov mov push inc rcrl xor sub cbtw daa mov lea sub inc ja,pt mov mov jmp sub pushf rol addr16 add push loop jl cltd lods (bad) daa int3 movsb inc inc int mov lock dec popa jg sub std mov adc or inc jl ret inc lahf mov push fsub xor jmp adc inc je out xor push xor out add nop mov (bad) test adc push pop int3 bound dec cmc add cmp rcrl and (bad) sbb xchg sub dec jge scas outsb cmc adc xchg ret xor jns arpl pop push pop std pop andb scas ja xor das mov xlat mov pop push adc pandn sbb dec xor mov sub jge push stos cmpl int arpl push inc cmc (bad) stos enter stos dec pop push sub push es lret sbb lahf lods sbb xor notb adc mov xor pop insb mov test aas ja aad lods aas inc cli shr pop push cltd hlt push lahf ss add rorl sahf jne imul xchg and int cld xchg lret cmpsb jo stos fsubr sbb lret push dec fnstcw ss (bad) std pop mov (bad) sbb jg fisttpll jno pop add inc pop mov dec pop inc movsb pop arpl sub je adc movsl add sub ret xchg call mov insb lcall jae dec fnsave stos push mov gs pop cmpsl ds aas adc faddl push mov sbb cmpsb movsb les sub mov in and pop stos test out movsw test shll in lock lahf add cltd (bad) xor loop fiadd int3 (bad) fs call movsb push cwtl jae jg add inc imull push jecxz lock (bad) jbe rclb sub jge aad or or ficom mov xor test movb setae jmp outsl pop cmp pop push pusha adc or mov xor push dec in mov sub fbld ror daa out jmp inc mov cmp pusha xlat push (bad) ds mov sbb data16 jmp fistp cmp repz fnstsw js and lock inc push cmp cmp pusha dec push or mov imulb in jge in mov xchg cli leave mov stos adc (bad) cmp and ss aad int3 (bad) xchg in out in mov sbb adc and cs fild flds jmp sti test adc ljmp sahf add inc mov xor ja xor xchg imul call pop cmp sbb sbb dec and or inc fstps push int and std mov les lods aaa adc mov mov js das push add xchg and loop shrl add pop sbb pop rcll enter pop (bad) in xchg xor insb aas and outsb push mov add in lock scas fwait mov push xchg pop pop int3 fdivrl xor jae mov jb and pusha mov cltd inc push ficoml data16 (bad) pop and (bad) xor sahf add fstl pop push mov in (bad) mov cmp pop xor stos jne and inc mov (bad) mov inc negl mov inc lret pop mov (bad) sbb sbb cmpsb pop and push sub mov push mov imul xchg dec dec mov jae test std mov mov popa adc lcall movsb aad fs mov cmp sbb out fcmove arpl add push cmp bound xchg hlt xor in fwait inc jmp xchg cmp adc sbb add popf fist and push lods mov xchg mov xlat adc std sbb pop push jle cmp push inc pop mov addr16 sub lret ds cmp and (bad) mov push pop mov clc ja lods lret push inc popf xchg mov mov and push lea lret pop ss pop jmp fldenv mov add xor jmp test add mov js test pushf sub clc pushf bt cmp pushl popl clc cmp pushf pushl lea ja sub sbb neg call pushl lea jae stc bswap mov inc mov pusha mov cmc test pusha mov sub jmp cwtl bswap sbb lahf lea mov lea lea pop bswap not setge mov pushf pushf pusha jmp push pushf jmp or cmpsl jge push inc jmp sahf push xor jb mov add js call lret fisub ds mov dec or mov stc and jo in sub lcall ljmp (bad) pop and adc mov pushf shrb imul or ficom sub jmp shl aad sub fidivrl mov mov xchg call xor in mov in mov jne jl outsl inc test jae inc jp stc and fwait mov mov pop loop jp imulb mov bound pop negl movl pusha mov mov pushl pushl ret pusha sbb stc lea cmp xchg shld xchg call fiadd jnp push push inc mov add test cld mov xchg fidivrl dec bound jp shrb adc cld (bad) cmp fsts push push sub sub mov pop repnz jl les xchg nop les mov je outsb lea (bad) dec mov loop clc xchg mov push sbb dec push pop or call pusha jmp sub inc setb sub add pusha bts mov clc neg mov pushf push pushf cmp repnz pushl jmp imul sbb pushf shl cmc lea bts lea shrd bsr mov clc xchg cmc btc mov jmp mov mov push bt pusha and pushf pushf add push mov pushf lea jmp call push jmp call jecxz xchg femms inc test and sarl insl hlt adc insl ret push xor insb mov jns les sbb push pushf add xchg lcall and sahf jl jp inc and fdivrs push enter or inc pushf add mull inc sahf sub mov mov cmpsb cmp mov xor (bad) loopne mov inc icebp (bad) imul clc cli shrb mov jmp xchg aas fistl fs andl dec movsb lock fiaddl movsl and cmp ds popf push mov nop out cs js int adc add push movsl aas mov popa (bad) int push into popf mov fisubrl repnz test daa fdivl adc xchg (bad) call add gs jp push push pusha pushf lea jmp mov lea pusha pushl call add dec outsl arpl inc jb add add shr and (bad) incl pop leave sbb push inc inc dec pop test shlb pushf pop push sub test push cmpl fnstcw mov or test sti xchg fs popa jno jecxz cmc repz stc bound adc fcoml pop (bad) in lcall add and push push (bad) sub mov pop inc mov mov cmp or adc inc sub dec lds mov leave sbb mov and push in call scas jg dec mov inc pop push iret inc pop mov inc xchg shrb lahf jns cmc movsb dec mov cwtl fstl mov enter lahf xchg in mov sti test out pop push rclb pushl popl pushf pusha pushl ret add inc js je jb arpl jae xlat and or inc insl testb lcall sbb pop lahf xchg ja sbb sub (bad) cmp shl inc adc int (bad) dec jo cmpsb dec mov dec lret xchg push lret pop lock xor mov jl repnz mov aad add mov test push sub orl xor dec pop xor pop lock mov mov fs sub rcr outsl fcoml push (bad) mov (bad) stos xorl out ds mov dec nop or (bad) jecxz inc mov (bad) test mov and pop xor mov (bad) cwtl call pushf mov pushf adc pusha bt sub movb shl pushl jmp lds jle push inc call enter enter pop test shr (bad) pushf fsubrl je xchg loop imul jl shlb cs ret push dec cmpl pop fldt out lds inc ja rolb mov popf or fsubs sub dec sub lcall enter outsl cmp (bad) sahf jbe sbb test sbb xor popf push add and xor cmpsb and or out mov push pop shr subl lock push shlb jns cld pop popf inc add (bad) adc push fsubrl lods sub mov pop sbb push cmp fcompl inc pop lea jne cmc bsr rol mov pushf cmc cmp pushf pushf lea ja mov pop jmp add test push inc fidivl fwait stos pop inc dec std add inc stos jmp add jne shlb (bad) mov mov jl je das call xchg ss xor push les sti sbb (bad) pop jo lret inc xchg aam mov repz jno push jb push jmp xlat int pop xor xor insb and mov popa outsb or in inc sbb addr16 xchg and sub xlat fnstsw sub sub dec in pop push arpl in jge cmpsl mov sub or pusha sub mov loopne or test es pop mov xor xchg test lock ret xchg pop pop aam bt pushf shl pushf call pusha lea jb movzbl add adc btc cmp not pusha bswap lea sbb pop pop not lea mov mov pushf pushf call imul pushf test add movb pushf lea jmp mov cmp pushf jmp jne gs xor fs insb add mov cmp cmpb pusha pushf lea jne pushf push lea jmp push mov push pushl pushf lea jmp pushf lea je clc add pushf push cmp pushl pusha lea jb pushf push bt cmc cmp pusha push push lea jae setno jmp icebp in into sbb mov aam fsubl loopne ret push push je jg lock xor repz loopne mov push pop enter cli or lods repnz lcall dec scas mov sub push sub aad jl sti sti les or pushf imul cmp xor xor leave push adc inc loope or out adc jae arpl lds bound es out rolb loop loopne arpl outsb js and test add in mov adc mov jg adc out xor xor stos mov out fs mov (bad) notl wbinvd aam (bad) mov imul xchg and sbb mov push rcll cmp jnp xor (bad) jno (bad) push xorl push aam mov jb jo les mov xor pop push mov push jmp scas hlt mov xchg jmp lock adc xlat xor fst xor cmpsl lods cld push hlt lea adc adc jae mov daa jecxz cmc adcl (bad) jmp and pop xor gs cmpsb sub push jp push scas les ret inc jnp mov fild mov fs cmp xchg shll cmp cli mov push int pushf lods jmp (bad) imul and fs call jmp sbb nop add push inc pop xor in dec mov in adc pop setne clc xchg mov cmp pop std push mov mov repnz mov adc into cltd lret sub bound add push insb lret notl dec stos or sub jmp push cmpsl mov fs dec cmpsb or sbb adc orl ljmp dec xor lahf mov fidivr pop into jle das mov pop ja lds sbb lods idivl (bad) jno inc mov adcl imul mov adc adc insl aas call xchg icebp icebp popa or pusha mov daa scas pop fisttpl xor ret daa das insl lods dec pop cmp xlat jge imul push movlhps pop imul push ja stos cmc push add sbb add jge push inc jmp xchg movsb ret shrb js and aas mov push stos ret in ds jl out sarl in sbb push cli sub push call hlt inc movsb aad xor jecxz xchg mov adc dec lds jl mov mov dec xchg and dec adc mul jl dec jbe push lods xchg adc xlat (bad) xor imul jg ret aam add adc and inc sub mov ret test stc xchg adc sub cs mov mov repz call and sub dec push addr16 inc test or cmpsl aas or or call jle jae dec pushf bound cmp loop xchg (bad) mov gs outsl out xchg push loop xor scas jl jnp dec jl (bad) sub mov xor adc mov jmp pop roll out in xor scas lods fstpt insl incb jns jb cmp dec push fwait mov gs (bad) xchg or (bad) cmp out or lods rclb mov fmuls push push mov sub lea fwait pop bound and mov mov dec bound test into aam xchg hlt lahf cwtl mov in add stos or enter add sub outsl lret das loope push pop mov gs adc pop call test out loop dec test mov dec cmpsl sahf mov and (bad) and mov lret lds push icebp push cli jbe mov mov cwtl or sbb lahf jle insb loope outsb into jno aaa xchg mov lea jo push pushl lods pushf cmc pusha clc xor jmp pusha mov btc btc add inc lea clc mov neg add movzbl movl btr btc shr mov add pusha mov cmp jmp movl pusha mov pushl pushf push push pushl ret test loop adc inc push arpl jns jne dec mov sub xor mov (bad) into lds mov scas lret stos (bad) fnstenv lret mov and xor shrb js and jmp jle xchg or xorb push and sub mov insl sar (bad) lock adc dec movsl aas sahf (bad) jge int mov (bad) test xor test pop sbb pop mov stc out push into roll mov (bad) lea repnz push inc push cmp pop xchg jae pop pop jge sbb push imul dec and sarl (bad) sti cmp lock sub inc mov xor cwtl lcall scas sbb imul lret mul hlt or mov fbld inc add scas lds jmp es outsl add adc in adc repnz in jge aad cld xor lcall jmp cmc mov ja adc daa loop push push enter mov jecxz pusha out insl mov cli sbb outsl sbb inc jnp into mov and lds mov xor mov aaa insl dec lahf sahf jns add cmp fisttpl jne imul jp leave (bad) mov cmp inc js inc imul mov aaa (bad) and sub cmp fmulp lock es sarb (bad) (bad) mull mov aas in shrb jns test lds lahf sub into jne rcrl jbe jle es xor rclb movsb mov xchg xchg out aam mov mov jo movsl jno pop xchg inc jb addr16 dec pop lods rorl mov inc cmc outsl ljmp add mov fstpt push aas movsl xchg scas sarl cmp or and add je imul outsl outsb dec outsb outsw push imul (bad) mov pushl pusha pushf lea jmp bswap call push push mov pop lea cwtl lahf mov lea xchg bswap pop mov mov call pushf jmp test cmp pushf lea je pushf cmp push jmp add dec sbb ret pop lcall mov insb jl in jp repnz cmpsb mov push adc pop mov cmp push loop aad bound test ds dec fdivp push nop insb mov push (bad) fcompl add cwtl cmovg outsb mov push (bad) (bad) popf adc mov shr mov cmp fsub pop fldl sbb dec adc jae repz je sbb cmp mov fdivl inc inc movswl pop push mov mov lock ja repz jle sarl sub repnz xchg loopne mov and mov add cmp pop in fs les push inc das data16 adc push push mov pop subb hlt pushf pop push mov sub dec lods and int3 pop cwtl in ficompl jb divl jae xchg push add mov xchg mov cwtl sub hlt mov mov push xchg dec outsb mov adc adc or pop jne jg fs sub sbb push out bound sbb fldl decl add and repz push stos hlt inc xor (bad) push movsl pop movsb mov stos cli inc inc xchg cmp add and (bad) add shlb dec mov xor aam cli push movsbl mov sub jb cmp jmp sub movl repnz movl movl movb lea jne shl rcr test mov pushf sub shrd mov lea lea clc push mov push sub call jmp sbb lods ja push inc lcall insl lods in and push gs dec lods fucomp inc out push add loope cmp or das push lcall dec pop mov push cmc scas dec sub sti cmp mov cwtl dec sbb cmp daa push pop mov jge pop pop dec sbb dec inc fabs mov and aaa lcall sub in cmp dec cs inc jb cmp js xchg out or leave sahf mov mov xor divl pop lods inc imul or adc add lcall add dec inc dec dec xor cs insb add pop mov and jmp cwtl push fstpl push inc (bad) jmp or addl cmpl aad fwait cmp insb or out and pop (bad) fstps into stos loopne push adc cwtl addr16 fisttp pop mov pop fsubrl dec xchg rcll cmc inc stos xor jno daa js int cmpsb loope aas repz shlb push mov xlat jl push rcl inc cs fs roll adc lret cmp or bound (bad) mov push xor dec mov pusha jb fstpl jl adc imul adc imul hlt jl rclb movsb push mov sbb icebp dec mov outsb ret stos sub mov jge push in jno bswap lea call call push inc out pop mov pop mov sti loop mov mov jno mov hlt in adc sub (bad) jge sbb mov xor popf insl or push lods mov fsubr out rep imul arpl or js lret aas mov sub and ret pop inc pushf stos (bad) pop or aaa xor pop orl mov push je (bad) clc shlb push test mov adc mov roll fwait and lods mov (bad) imul fistpl jge frstor ret cmp test sub xchg jmp cwtl lods enter mov int3 jge sbb addr16 test mov faddl rorl subl loop add arpl bswap lea jmp call call add add pop add add xor xor adc mov jmp xor xor xor xor push ss cmp cmp cmp sbb cmp xor ss cmp cmp cmp into cmp cmp repnz add add pop add add xor popa xor stos xor mov sbb xor daa ss ss cmp cmp cmp cmp cmp (bad) cmp cmp cmp cmp int imul ds aas xlat aas add add adc add mov xor xor xor xor xor xor outsb xor js (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor sub aas xor push xor addr16 jnp xorb xor test mov mov mov xor js stc ss aaa jle xchg aaa or push cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sbb cmp cmp idivb add add add add xor xor xor mov xor xor xor xor xor xor bound das ss ss ss ss ss bound imul jle xchg mov xchg mov ss (bad) ss ss in cli ss aaa das aaa ds fdivl in divl add pop cmp cmp cmp cmp cmp cmp cmp push cmp xor dec cmp cmp cmp inc cmp cmp cmp cmp cmp cmp cmp insl cmp cmp cmp cmp cmp cmp cmp aam add daa ds movsb ds add popa aas add add add xor xor xor xor ss cmp and cmp lea cltd cmp add mov aas loopne out out aas sti aas add add add add add xor xor xor xor xor xor push movsl xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub das xor xor xor xor pop xor jl xorl xchg xor xor jmp pop xor xor xor xor dec xor jno js xchg les stc xor je (bad) ss cmpsb cmp cmp cmp cmp mov xchg cmp cmp cmp adc cmp mov cmp cmp cmp daa cmp cmp cmp cmp cmp inc mov xchg ds out ds ds jle add add fs xor xor xor xchg xor xor aad ljmp xor cmp (bad) aaa (bad) aaa or and xor cmp ja (bad) cmp cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp scas ds aas inc aas push aas mov loopne add add add mov xor xor aaa mov cmp cmp cmp nop add in add add xor xor lret xor sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb lea mov mov xor inc ss ss ss ss ss ss ss cmpsb lods ss mov mov aaa data16 outsl aaa mov (bad) aaa stc aaa add inc cmp pop cmp jne xor cmp pop cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp dec ds ds jno,pt jbe xchg mov ret or (bad) dec aas dec aas push aas pop aas popa aas data16 aad fidivr in add add add insb xor mov xchg xor dec xor jge xchg xor xor xor xor xor xor xor push xor xor xor xor xor pop xor xor xor jl repnz dec aaa je (bad) aaa bound test xchg cmp cmp cmp cmp cmp cmp cmp cmp test mov add add lahf xor xor xor ss aaa insl aaa in pushl or aaa cmp pop cmp cmp cmpl adc dec cmp mov cmp (bad) cmp cmp cmp cmp cmp cmp add add inc add add xor xor xor outsb xor xor xor xor xor xor xor inc xor ss ss imul push cmp mov add add add and add add pop add add xor xor xor xor mov xor cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp enter sarb add lock int3 add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp or add add js mov mov nop ss ss mov int3 fdivl loopne hlt ss or or adc sub cmp inc aaa je jl test mov nop aaa movsb aaa lods aaa (bad) aaa loopne add and inc cmp cmp cmp cmp cmp cmp cmp cmp jo jl cwtl cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp add sbb add add sbb inc xor xor xor xor xor cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp sbb cmp cmp cmp cmp cmp ds ds ds ds ds je,pt cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call add add add add (bad) adc add add add mov aaa push cmp add add add mov outsb xor test (bad) aaa fidiv movsl cmp cmp hlt cmp cmp adc cmp mov ja,pt add nop add inc add add xor cwtl xor xor xor xor push aaa inc aaa xchg aaa add and leave cmp imul sub dec cmp je add add add repnz xor xor xor xor out ss mov cmp cmp cmp cmp cmp inc ds outsl aas add add add adc xor xor fdivs fnsave test cmp pusha cmp cmp cmp cmp cmpl ds add add add dec add add xor xor xor xor xor xor jle ja scas xor xor stc xor out adc dec aaa xchg aaa repz push cmp fnstcw or push cmp cmp push jg,pt add add add cmp add push xor xor xor xor xor xor dec cmp cmp mov add cmp cmp cmp test sti ds aas add add inc add add xor xor xor xor xor xor xor xorl cmp cmp cmp cmp cmp cmp (bad) cmp scas aas add add push add add or sub dec xor xor xor xor xor xor (bad) lods aaa xor jg add cmp cmp cmp cmp ds mov aas insl aas test mov jmp add add dec add add add mov xor xor xor xor xor xor and ljmp cmp cmp jecxz scas cmp cmp cmp cmp dec aas arpl add add dec add add xor xor xor (bad) xor xor xor xor xor xor xor divl jl inc cmp inc cmp cmp cmp cmp xor sarl stc aas add add add inc add add xor cltd xor xor xor xor xor xor xor mov ss ss aaa call cmp cmp cmp cmp ds jp sarb add add add inc add add (bad) xor dec xor xor xor xor xor ss inc aaa leave aaa jecxz jge test (bad) cmp cmp mov cmp cmp cmp idivb push aas add add add add mov addb adc add mov aas add add add cmp fnsave cmp mov xor add xor xor xor xchg mov out ss cmp cmp pop cmp cmp cmp cmp cmp cmp enter ja add add adc xor imul (bad) xor xor mov sub nop cmp cmp cmp cmp cld cmp cmp outsl ds ds aas nop aas scas aas add add add pop xor xor xor nop xor xor fdivs fwait xor xor xor xchg add jp xchg aaa in (bad) cmp cmp cmp cmc cmp cmp cmp cmp cmp idivb sub jbe sahf aas sti aas add add adc add lcall xor add pushf xchg xchg rcr call mov or jecxz push fdivl sti enter push add mov push lods popf das jmp js into aam movsb ss jb cmp enter and imul mov jl dec jb daa jae arpl mov in xchg mov or popa sub xor (bad) mov xchg stos pop shrb cld cmp roll jl adc pop ficom cld loope fild dec xchg test fstpl lock ds out lock or call push cld mov push frstor sbb push jnp add in or scas int3 cmpsl jmp xor popf pusha push jno in push push fwait js pop dec sub (bad) dec outsb pusha jecxz test dec push adc int3 mov aas lods mov incl outsb and adc add adc sbb repnz mov leave hlt adc mov jno mov push xchg push inc sub push faddp pop push inc push int3 inc (bad) pop push push jp inc push les aaa mov pop aas cli dec xchg adc mov pop popa mov fadd xchg jb cltd sahf sub fwait mov inc sbb test in fdivrl sbbl mov lods scas ja cmp pop loop aad shlb mov aaa push int3 sbb mov insb icebp pop push xor adc pop shrl jmp mov lock jb cmpsl mov fsubrl sti stos in or jae jecxz stc mov mov or (bad) int3 jmp sbb (bad) mov mov inc jecxz nop pop jp inc in or ja adc mov out fistp lahf lock mov (bad) insl jns mov pop (bad) mov call int lret dec and sub (bad) pushf or aas mov loope lcall inc pop (bad) gs dec movsb mov call and scas imul nop push dec cmp cmovge jbe aaa jg xchg pmulhuw pop jecxz movsb imul out (bad) push mov shrl jecxz push subl lods jo xchg mov rcl sbb jle mov ret mov dec xchg bnd mov xchg push addl mov mov push sbb test adc leave dec andl push out jge dec pop out mov and fcoml data16 or stc icebp push xchg add dec mov add push or adc lret enter cmc pop xor sti push xchg mov mov movsb and imul jne nop xchg inc sub inc lods and or (bad) scas pop sub test pushf xchg movsb outsb sub into xor push cld pop sarb fildl sbb sub xchg xchg loop add enter sahf xor cli lret mov stc test sub lds (bad) xchg xchg mov dec cmpsb pop pop sbb mov (bad) jg imul rcrl dec movsl lahf add daa rolb outsl insl iret dec je jns leave and fs cmpl movsl pop xor das adc dec jns jl cbtw daa scas pop aad out cld cmp pop lea jb push (bad) outsb (bad) cmc ffreep pop dec sub xchg dec pop lret push xor inc mov add jae iret inc mov addr16 aaa jg mov ftst adc or in inc dec mov aaa push mov fnsave negb aad sub push test xchg scas js push cltd scas cmpsb aad mov pop outsl add sti or add mov rolb je or cli push lds cmp sbb jg or pusha pop or (bad) std imul les rcrl rcrl pop mov sahf push dec (bad) xor add in (bad) mov ret lods movsl (bad) mov (bad) jno jmp sahf cmp es or shr fldenv dec fiadd inc in jmp imul loope push inc mov fistp sub dec pop cmp nop insl pop les call bound cld pop das fwait (bad) clc jb outsb cs ret outsb xchg add dec rolb sbb push pop adcl idiv pop out cwtl fildll out cmp orl enter cs cmpsb les test iret cmp test jecxz in js jl,pt and outsl (bad) pop push ds test xchg dec push aad add imul lret and mov ja cltd pop add inc xchg call test rorl push push test call sbb daa cmp xor xor (bad) xchg push adc sbb add dec pop test inc adc push cmp in lods cld push xchg (bad) leave rorb dec lds mov push mov push bound push movsb push cmp adc jns ja cli and mov (bad) ljmp add adc repnz push scas loop jns dec std push pop insb mov adc xor scas aam loop push mov mov movsl dec inc jb,pn cmp outsl pop inc fwait ss adcl xchg cmpsb out stos push aaa pop cwtl adc or into jge mov cmp scas dec push popa rorb fwait dec mov lds dec and test pushf lea call pushf jmp call push inc jp jmp mov out dec rcr cmp jbe (bad) clc into stos imul outsb imul scas dec stos and jb,pt in std cmp jle inc mov out lock aaa mov pop data16 xor push test (bad) pop sub call push fcomps jmp les jl dec stos (bad) lret dec cmp idivb mov or or call (bad) repnz sti imul mov ja test (bad) sbb adc aaa sahf imulb push int (bad) sub pushf mov ror lret subl cld push xor rorl rep push cmp push xchg xor jl lds ret and scas movsl movl stos repnz sti lods sub iret push sub push in insb pushw (bad) sbbl outsl mov inc shl jg test fdivl push (bad) (bad) ds (bad) imul scas (bad) je imul cli push cmpsl jecxz push or cmp push jnp ret add data16 repnz addr16 imul sbb mov enter shrl rolb xor inc pop mov mov cmp jp pop mov pusha xorb sub dec ret mov push lods adc inc fistpl mov mov jecxz adc push lret ja and pusha xchg inc jmp adc xchg add iret jno mov jle jno aaa lods iret iret adc mov (bad) push rcrl mov movb lods pop push or and cmp rcr aas iret push fbstp bound mov addr16 mov imul pop imul or fnsave push jnp inc pop (bad) mov push ret push or rep dec xchg mov pop push imul loopne stos out sti xchg push aam lods pusha cmp pop sahf lcall push (bad) xor or xchg pop jmp cmp nop adc in inc enter or push adc test cwtl out imul shlb fmull fs jb bswap mov jmp xor push jmp mov lea jb shr clc adc cmp not cwtl bswap mov push push lea jb btc (bad) lock clc sub not setp mov call xlat in sti xor inc movsb iret arpl or popf and frstor mov xchg xchg lods push dec in pop cmp fmuls movsb stos js inc ficom and outsb sar test pop or in sbb rcrb ja test xchg sub sub sub test lcall sbb pop sub push ds push addl ljmp out dec mov jl (bad) jp aaa shll push cmp iret loopne les add lahf rcr rol add lods mov mov mov xor mov shlb inc xor mov lret lcall jl sub dec sti xchg mov pop aas sbbb test ljmp cmp pop jle scas sbb leave repz rsqrtps mov pop jne xor (bad) xor test bound and jecxz xor xor inc mov jne pop stos xchg cmc std mov mov cmpsl je,pt inc or negl call add frstor mov push hlt sub mov shr and mov dec insb imul sub mov push add xor or sbb or gs daa mov cmp (bad) xor sub call inc inc leave stc add xchg cli clc jle dec clc cli mov pop fisubr dec and mov sahf fidivl fbld mov decb or out popf (bad) ljmp clc xchg inc test data16 add das and mov mov das mov test push jp test xor push insl ret jo (bad) out xchg (bad) lss loopne mov ret in aas jle sbb call shl fdivr test sahf and test mov push repnz call jmp mov or sub inc icebp mov (bad) lock out and inc xchg popl lods push push sub mov movsl sbb sub push (bad) imul cltd pop push cmp aad mov mov clc push test (bad) daa xchg sub sbb cmp mov or test pushf adc mov xchg fsub mov add mov lods and addr16 leave stos mov mov cwtl sub jnp arpl push mov frstor cmc sarb or sbb loop or xor mov js (bad) dec (bad) jp pop mov out adc daa ret push scas scas push push out (bad) movl xchg (bad) fistpl xchg imul lea je mov bound and lods sub (bad) imul mov jle ret (bad) or xlat repz ror xor jns js enter insb cwtl cs dec xchg sti es dec sub out push stc mov push push pop jne mov lock mov out (bad) in mov xchg sub inc sarb add dec movsb mov jo je popa mov jnp mov sbb pusha sbb inc insl insb xchg rcll loope (bad) jo cwtl into test (bad) xor sbb loop (bad) push imul inc mov mov nop xor fsubl mov add push sbb jo (bad) mov add lods sub sbb call insl sub test ret loopne std arpl mov fisttp xchg scas mov pop fsubl (bad) pop inc inc cmpl mov stos (bad) cmpsb mov push icebp movsl add gs lahf mov lret mov mov stos lods gs sahf cs cwtl imul inc in lods sub xor jae mov out scas cmp mov loopne inc (bad) lock xor or push aad pop jmp je pushf insl pop cld mov push dec sub (bad) dec cld ficom loope inc sub jmp dec xchg mov aaa movsl push inc fcompl add xor mov mov jo pop sbb test aaa jmp jo sub outsb sub add and shl jae stos inc pop enter cmp lods pop je test aam rorb aaa ds xor jae in lret xchg sahf dec aam (bad) adc and lea pop mov or clc test mov sbb call test add adcb dec cmp xor xlat cli ss and xchg rcll (bad) icebp lea pmuludq mov pop fstl mov adc xchg jno jns or jnp int pusha fwait loope or jne jne dec sbb loop mov es xlat inc inc jp (bad) cmp fwait xchg fsubrp gs fstpt mov cmpsl out pusha test pop lock push dec lahf sub jg dec nop or insb xor jp test pushf fistl jne daa xlat cmp mov sar mov mov loop push sbb in xor xchg push outsl test imul ret les scas out xlat or js push jmp mov sarl adc test add call dec mov xor push jbe std (bad) shll sbb dec inc in cmp stos mov push lea aad mov or pushf sbb mov or mov inc pop pop mov mov mov mov paddsw or or mov pop outsb sti sbb in loopne fidivrl xchg xchg xchg and ret testb push add pop push popf mov pushf mov xor add dec lcall out scas adc imull test scas or imulb test sbb push test mov icebp ljmp cwtl push mov inc jns je sbb inc test imul lods push dec adc mov jp out out inc cmpsl mov icebp int3 push or inc or sbb enter sub fsubrl inc inc xorps fs lea aad js cmpsl xor faddl and ss es xor insb dec lcall jnp cmp push xor cmp (bad) mov mov into inc fidivr imul inc enter iret add mov ret fsubrl push aaa push or sbb jl mov in xchg jnp mov fcoml int dec movsb xchg jg cli stc jmp test outsb je je dec outsb lahf cmp jo cmovbe jmp sbb stc mov mov cmp fsts imul loopne cli in sub repz cwtl mov mov pmullw in dec push lods dec mov push ret pushf mov push incl mov mov mov rcll data16 pop movsb inc dec push cmp xlat int3 push mov dec xchg testb sbb xor and mov sub outsl adc pop jp mov cmp in adc sub mov jb in mov and add push inc int push cwtl rclb xor jmp cwtl or sub (bad) push adc jecxz inc dec mov sbb clc sbb fnstenv xchg pop stos jne jmp rclb sbb aas add and cld inc js xor add lret cmpl fst dec xchg lods subl or lret jge test jo lcall jmp pop cmp fisubl pop fistl aas in sub ret adc adc (bad) inc or xchg gs sub push sarl xchg mov xchg and jmp aam js pop mov mov daa nop test movsb testb jecxz test jae mov and xchg push jnp jnp mov dec or movsb pop jge push pusha cmp shrb fwait cwtl mov xor pop push cmp pop add sahf cltd ret xlat dec aam aam pop adc inc mov imul sahf (bad) shll and test test dec and iret jg xor out adc clc repz jb out push sbb add mov je jns jp subl pop sub stos icebp sarb popa xor lock inc pushf adc adc inc cld xchg aaa outsb aam xchg mov ret icebp push add ljmp icebp dec hlt and push inc jle movsb mov and jb mov xchg lods out add scas cltd mov imul inc sbb fiadd adc inc ret add gs add cmp hlt repz gs fisub addr16 (bad) xor icebp mov xor or inc icebp popf mov mov lahf cmp jnp mov js jns ret sbb fsubl out mov jecxz jnp icebp repnz ja dec fmul sbb xchg push adc push xchg pop pop pushf lahf sbb scas (bad) fbstp mov enter cmpsb lock ret clc pop ja (bad) in dec dec out mov sub arpl (bad) sub adc mov jg mov imul push in imul and das fstps data16 enter (bad) arpl adc pop jbe (bad) ja je stos push fnstcw xlat xchg dec push mov loop out into (bad) shr aam and sbb shlb outsl push mov mov out pop jns dec repnz sub data16 popf arpl dec pop sbbb sti sarb daa popf scas mov sbb adc jnp and loop adc les pop mov sbb pop mov dec in (bad) sub loopne js add notl sbb xchg lods sbb pop dec rcrb lret insl cmpsb dec pusha jle inc sbb cmpsl scas mov push ss les sahf movsb fs sub push mov je mov mov add ficom mov rcl (bad) out mov fadds stc mov inc fnstenv dec pop (bad) out and push js ja loopne imul mov test outsb jb imul jge ret mov in cld popf bound div push jp dec sub inc jmp sbb dec mov lods add (bad) jbe nop decl in push sahf fistpl addr16 push ret rol movsl cmc ss jbe pop dec fwait sub sub pop xchg lahf inc insl or adc pop jbe in fidivrl ja mov sub ret hlt inc pop (bad) cmp repz and enter stc call loope xchg clc inc or iret lret pop (bad) scas mov lret push jbe jl jmp aad lods (bad) fdivp jp inc cs cli imul push lcall leave test jle and ret cmpsl pop scas incl fs jecxz inc adc mov in xor pushf add test sbb fwait mov mov stc gs int popf jp xchg sti ds scas mov (bad) mov pop sarb xchg cmp movsb int sbb shl pusha dec dec sbb insb inc mov cmp daa mov sahf adc repnz mov (bad) push sbb pop test xchg lret ja imul lods pop pushf adc bound and pushf or xchg adc jp add and jp scas xor pop repz jne xchg xchg sub orl mov lret xlat dec outsb add push lods adc pop sub daa pop cmp loope xor insl pop sbb in or movsb or cs movsl push rcl xor enter jge lods cmpsb das cmp push jge or add pushl add mov mov mov (bad) mov movb insb repnz ss dec fwait repnz sub jg or or sahf add xchg sbb sub mov xchg out adc shrw mov xor sub pop stc cs out pop int3 ficompl hlt out push xchg or mov scas cmp fdivs fsts xor dec sbb rcr les pop cmpsl cwtl fistl xchg push sahf aad xor jno jge gs sub in adc cmp loopne sarb sti jecxz jno sub push adc fsubl int3 in ret inc outsl rcrl push adc sbb dec fadd jo lea sarl int jl sub aas push mov cmp out movb xor mov inc pop bound mov das inc inc (bad) popa adc adc jge leave xchg jne pop push mov lds xchg pushf jae dec imulb or xor (bad) pusha jns and pop xchg cmp jle incb xchg dec out sbbl add xchg lea jne push (bad) call inc es mov (bad) push xchg lea mov inc ss test outsb push ss mov pop push movsl ljmp and push test inc dec stos idivb fs div sbb pop stos dec inc jg (bad) aam or dec (bad) mulb rol leave jmp ds cmp int3 mov add ret add sub ret rcrl out sbb jbe ss jo mov test sub out fcomps push (bad) jg insb sahf pushf (bad) mov push inc ss (bad) mov pop sbb enter ret and adc mov pop adcl inc je lock jbe fnstsw cmp sbb fwait stc insb (bad) inc pop call notb fsubp pop cmp or pop scas mov and decb ja dec pop mov pushf mov fistp out popa outsb bound test mov (bad) or testl or into jae add ret jge xor enter out xchg test mov lods ret repz insb test mov cmp lret out jle and xorl pop jle lahf pop lods (bad) cmovae lock insb xchg add movsl stc lds fsubrl dec outsb lahf clc jge icebp pop pop (bad) cmp xor inc xor loopne jne insb pop lods sub cmp sbb lods test lods in xor xchg adc dec ja sbb adc mov (bad) inc pop rolb (bad) inc stc xor and test inc inc nop jg enter pushf fisubr push mull popf dec inc pop (bad) mov cltd js test and push and adcl aas cltd out outsl imul xor loop sti leave push pusha popa mov xor das push add sub cltd inc xor mov pop or rorb lahf mov jl jl mov mov cmp jmp mov cmpsl push test lea (bad) stos cmp push mov adc push lcall out and dec push and idivl ficoml mov sub inc (bad) in mov mov loop outsb xchg cmp push nop and outsb cmp ds push adc int movsb push shlb jmp push into ss pop leave or mov lcall out sbb les fs push mov stc cli dec out or mov mov jae jnp test dec xchg lcall aam in and nop test xchg dec lods adc inc (bad) jle jle pop fcoms inc stos outsb dec stos xor loopne xchg (bad) mov test pop xor pop in gs fadd or das jnp xchg pop sbb sub (bad) add jb mov pop testb sarl push dec sarl xchg inc and cmc sub and lea sub push imul mov cltd insb and mov insl and add xor das mov jnp out bswap mov (bad) out fcompl ret cltd pop mov imul mov pslld lahf dec test mov dec pop inc pushf aad std mov jmp loop out adc (bad) push rcl add adc push fwait out push bound dec rolb popa mov iret inc pop mov xchg or (bad) adc add push or jle add adc xchg loop sub out fadds imul scas mov fadds mov sbb dec (bad) inc cwtl ss (bad) mov jmp fs (bad) (bad) sti loope pusha shrl mov adc mov push dec add and adc aad aad std xchg push sub cmp jae imul insb sbb int3 xchg sub dec mov lret pop xchg sbb fstps test mov movsb fisttpl mov adc lods aaa (bad) dec (bad) notb dec xor (bad) pop jnp arpl (bad) stos or aas push mov loop mov out push xchg xor inc dec xor lret mov sbb dec dec stos shrl mov pop lock jmp push lcall mov jmp mov add add push les add fdivrl cmp push outsl sub dec cs (bad) sub adc add push dec stos sbb sbb fnstsw hlt out mov iret push mov iret test shrb in push or fwait notl adc inc xor adc mov pop xor mov mov push push leave int3 test inc sahf sub scas adc add lock sub aad inc pop adc jle sub leave hlt mulb mov dec dec adc jno adc xchg cs dec (bad) jae mov fistpll inc xor cld pusha divb mov pop fwait gs xchg sbb pop sbb (bad) dec xor dec mov cwtl inc hlt fidivl dec mov sub fdivp outsl mov lret dec xchg inc je lret mov cwtl push jne and push movb mov fsts mov int pop dec lea dec or out inc pop je and adc (bad) push enter loopne enter pop (bad) mov iret jmp jns (bad) cmp xchg decb roll mov pop pop sbb in mov out outsb mov imul outsb push xor inc ljmp and pop push imul jmp leave push inc leave inc sbb cmp add pop scas push iret jbe xor sahf iret jg ds loop xchg jae mov xlat ss insb xchg outsl rorb loopne mov jle and cmp fwait in scas and int push (bad) or sub aas push mov mov inc aaa es scas mov jmp pop inc add xchg les rorb test inc icebp fadd mov ss adc mov and (bad) jmp mov xchg sbb pop push or inc int3 insl loopne mov cwtl out int3 call mov mov sahf loopne jmp adc mov mov sbb notl pop mov aas dec xchg mul cmc xchg jl loop sbb cmp xchg stos lds pop or les cmp shrl movsb or jp rol dec sub (bad) icebp add inc adc mov test add jae movsb lods sub push fwait and and jno push xor inc cmpsb push ror jbe imul cltd flds pop dec clc mov shlb mov jne xchg test xchg xor cmp xlat pop addr16 push pop xchg enter or rorl ja jl shrl imul in icebp fmul add and mov in or or test or (bad) les leave sub inc and xchg cmp popa cmpsl repnz sahf push insb dec enter mov (bad) pop push gs xchg mov mov je adc push lcall mov sbb (bad) xor in je ficoml insl push cmp xchg clc cmpsb adc in xchg fidivr aad out push and push stos jno lods and sbb or mov cmp movsl das int3 in cs inc pusha lea fmull std in and or and notl lods mov push fnstcw push or shlb aad pop movsb dec es stos jg sti jg out (bad) loop out push xchg add cld fs mov mov lret or hlt sbb xchg (bad) xor inc shr test cmpsl mov test or imul push fnstcw test mov or xchg mov xor ret cwtl movsl test add dec int3 fiadd and ret js aas in neg inc mov xchg lret mov cmc jp xchg aaa repnz add ljmp mov pop push addr16 stos xchg sub lcall pop xchg fdivl dec adc mov xor cmp and imul push out mov jo ret int3 sub cld cltd stos inc lcall icebp pop mov inc add jne outsl lds push adc cmp adc cmc mov cmp ret or popf stos incl cmp call or popf mov jecxz xor jmp andl repz mov push and push enter push movsb push stos dec mov pop lcall xor sub clc nop jno or cmp icebp pop pop push xchg jl inc aaa or aad and stos bound mov add sub test pop sub (bad) jl push pop adc add icebp hlt cltd mov and pushl xchg dec stc int movsl inc xor cli push push repz pop imul pop sub mov inc es lea pop data16 inc mov icebp jmp inc and push cmc fadd inc cltd cmp and or xchg add roll inc pop xor xor std into addr16 les (bad) xor xchg loopne sarb mov dec ret add mov sarl sub push sub mov out repnz test mov mov and cld sub dec ss dec inc mov insb aad jb in lahf out push mov jbe,pn jb mov loop xchg xchg inc add jnp enter lahf xchg fdivrl xchg or mov jae jae sbb rorb or loope sbb imulb push rolb mov fnsave jae ss insl (bad) pop loopne test jno jne pop jp sbb pop add pop and jmp daa add call js in cmpsb pop ret or out fwait pushf jge ret inc popf notb nop idiv xchg subb mov inc adc ret jbe pop add sbb push shrb fnop ja lcall mov or sbb jnp jo gs cld pop sarb (bad) sbb mov or mov popf lock dec inc jns xchg pop int3 andb and inc cmp pop (bad) push inc int3 inc insb into (bad) mov mov ds push jb pop mov mov fiadd mov rcll push lock jne lea lea shr cwtl sub aas mov jns inc pusha stc add or or mov cmc push pushf test call mov mov mov pusha push lea jmp mov bt pusha add cmp test pushf jmp lea call clc test bt pushf mov pushf clc call jmp movl pushf pushf movl push lea jmp jmp add push gs outsb push gs js gs imul gs push cmp je push inc sub in sbb insb xor push push test jae jmp in sbb into push sbb dec out cmp in xchg andl cmp mov loope loope movsl sar cmp xchg add (bad) xlat mov sti js loop adc and clc fcomps pop test js xor clc leave mov ret adc add cld or jp sub sub mov dec jecxz aas test and lods sub adc addl push test out movsl dec xor cs sub fcoms and loope leave fcomip lods xlat xchg stos cmp rcrb and repz popa rep aam cld inc sub dec test adc pop and gs (bad) leave mov cmc or dec dec xlat cmp mov jl pop cli sub jmp jl repz fdivs pushf jp sbb lret stc bound addb call stos sahf sbb int3 cmpsl inc and fistp add (bad) inc rcrb pop pop (bad) addr16 jne cli and imul (bad) stc lods or incl fsts aaa jmp scas fs and xchg in enter or stos dec sub into push int into add aam push dec inc cmpl test lods daa scas out loopne inc popf cmp add inc cli inc (bad) hlt cmp xor icebp dec cmc (bad) add or pcmpgtb push mov insl test (bad) das popa (bad) nop in push mov push dec scas sbb sub push imul (bad) cmp pop dec outsb xchg rolb mov aad jns mov mov pop mov sahf and cmp in fwait out mov sbb sub dec daa out scas stc xor push sbb mov sbb test ret jle dec out jb adc dec sbb fisub idivb push push inc mov xorl ja inc mov add and mov ret mov dec mov add fstl imul jns xchg insl push call shr ja push fcoms bound stc cli lret xchg mov pushf mov mov cmp add mov ss (bad) stos test clc pop je cwtl popf bound out test add mov ss pushf lea mov out dec ret sbb (bad) xor sub jl jp and pop jbe and mov data16 cmp test dec test xchg (bad) aam xor test test fistpl daa jne imul inc push outsl cmpsl pop test lea xchg and pop mov nop fwait ret adc js sub test mov lods repz pop mov (bad) or fldl jmp mov aad leave data16 or jecxz lret mov das jns sub in push into pop or sbb jle bound sbb jg fnsave push lcall pop pop ds mov dec mov sub icebp adc mov xor or lea je clc pushf push cmp movb lea je call mov movb mov pushf pushl ret pushf call ret cmp loopne or lret jbe addr16 jge mov test cmp das mov das jg fist (bad) dec xchg add mov sbb dec add inc sbb dec xchg inc ret and push mov jnp pop repz lret add movsb fidiv xor clc jne cli mov movsb xchg bound jbe add push sub test sbb xchg mov clc pop xchg sbb mov jae xchg sbb lea scas sub fmuls inc mov rorb mov les bound lds inc rcll xlat adc push mov mov add cmpsb stos cmp jbe cmc pushf bound inc inc notl xchg int add inc cmp mov movsb mov mov jbe je leave mov js cmpb lock in (bad) leave sub xor loope scas lds (bad) ret mov insl int3 add cmp int3 push adc outsb lea sub mov sub add mov call add movsl mov xchg int3 inc push je push pusha lea jmp push lock std std xchg jo sub sub sub pushf mov pop xorb lret shrb cltd in sub bound aam pop leave add out sub test cmc jge and out xchg or aam xchg fist in xchg push push stos les mov mov enter flds insb insl mov push inc mov enter jle rclb pushf fisubl es js pop mov pop mov int3 data16 dec ja xor data16 sbb push movsl push out sub dec xchg push fcomp push imul dec xor pop xor xor cmp test push xor pop fildll aam test stos cltd or test enter dec pop ret pop outsl adc or stos pushf imulb int3 insb sbb sarl jle sub push faddl xchg sub pop add and scas pop mov inc mov bound pop lea decl fsts cwtl xchg cwtl mov fistp insb mov lea call call movl lea jb test call cwtl seta cwtl lea call mov push inc mov fistp outsl push shrl add pop add or sbbl jp xor add rorb pushf sahf scas les bnd mov bound xor pop es adc xchg inc dec fdivrs ficomp rcl in sbb or jns adc push cld mov mov cmpsb or test cs (bad) push (bad) in in loopne xor std add xchg mov push es adc test dec ja xchg pushf ja pusha mov fcoml sbb (bad) ljmp cmp mov pushl pusha pushl ret sub push cmp push lea jmp push push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret push push lea jne pushf pushl jmp xchg dec scas jnp push inc and pop int3 ds cmp movsl pop aas dec lea (bad) cmp stc xor dec outsl (bad) aam pop rol push lcall push test cltd or push data16 dec push (bad) hlt rorb or cmp mov inc inc mov or cwtl negb cmpsb push clc add cmp lock lcall in cmc add fcomps leave jns les mov xchg push jns sahf or and or mov jne shlb jmp call push push inc mov sbbl sti stos inc (bad) inc and pop push inc push adc mov (bad) cmp mov or xchg test repz out jbe jl mov inc xorb sub sub popa imul sub scas cmp xchg fs pusha cmp insl cmpsl outsb add adc lods xchg push sub inc test jb inc mov in test insl shrl je out adc fmuls cmpl xchg and ljmp (bad) mov test fs sub fistp fs ss adc (bad) jecxz pop push inc or sbbl pop daa (bad) mov lds and xchg sub and in fisubrl xchg leave movsb jae std cmp scas daa outsl repnz test lret mov adc call lahf xor sub fstps jge int3 sbb push (bad) dec mov loopne into out sti adc cwtl dec sbb lea pop mov iret cmpsl aad ljmp dec loopne xor sbb hlt push stc adc (bad) cmc test ja sti push (bad) sarb dec test movsl or pop popf cmp sti cmp icebp and or je (bad) fnsave movl test add (bad) mov stc pop call push inc push push dec dec dec cs insb add into pushf clc jmp mov aas lea add push inc inc fisttpl jb insb inc push movsb inc push dec cbtw xchg call mov dec scas pusha adc lcall int3 adc and scas les scas ss ds (bad) mov mov mov jecxz or pop sub rclb jp test adc push out aaa loope test mov out and sti mov xchg icebp cmp dec sbb adc sub aam (bad) pop jmp repz sbb ficoml aad scas out ret lcall push jl stos imul mov sahf fs inc sarl add mov faddl (bad) pop pcmpgtb mov cmp jmp push sbb aaa insl inc enter mov push (bad) test jle fidivr fstl add pcmpeqw dec inc cs lea and insb in nop imul mov mov sub sbb sti push jg call jne leave pop xor xor rcr adc aad xchg xchg not jle pop out jle mov jo sub scas in sahf scas in sub sbb or dec mov clc jne test bt or call xor shrl add mov sub jb mov add call sub jne ret not mov jmp pop lods loope gs inc cwtl (bad) in insl mov mov push iret outsb pop call ret rcrb fist sbb test xchg repz jg push cmp xlat pop (bad) jae lret sub sti subl mov jg push mov (bad) (bad) mulb sub (bad) xor xor cmp xor and aas cld dec mov or or aas scas mov repz inc mov sbb pushf lea movb pushf push lea jmp call mov daa adc (bad) fnstcw (bad) mov fnop faddl jae or mov lahf pop sbb pop es std jmp jmp sbb fcmovbe test enter test out cmpsl subl imul aaa sub pop push xor mov xor and (bad) xor mov push mov int insl add xchg xor hlt stos xor js pop lock jo fcoms ja std aaa roll sub pop xor xchg xchg mov inc cmpsl or push or stos ja inc sbb fcoms inc inc test arpl aaa fs test or dec dec hlt hlt enter adc adc out cmpsl sub pop ss add dec jne and (bad) xor adcl xchg push arpl outsb dec scas cmpsb aad xor pop rclb ljmp pusha ds push sbb xchg rclb mov out or fwait stc lret jbe mov dec out cld (bad) sbb mov jbe jg (bad) int3 (bad) mov xchg cs or into lcall dec sbb cmp and mov add sub mov jne subb pop cmc sub xchg mov dec adc adc shlb icebp mov mov psrld xchg xchg ret jge pop in mov jns fcmovnu gs pusha sub test xor int3 bnd pop or incb (bad) sbb ds idivl sbbl stos jge rol je jecxz mov fsubl and iret xchg pop ffree dec pop adc aad dec imul ja int3 dec shlb (bad) (bad) mov (bad) icebp xor inc mov ljmp fnstsw push inc imulb jmp es xor sarl es arpl daa mov out and call jnp mov lret in movsl pop mov jmp xor jge aas clc mov jo cmp mov aad mul inc test (bad) push mov mov arpl xor pop outsb sub pop in aad es pop xchg sbb mov or mov adc addr16 cwtl jns call lret cmp sub cmpsl das and or inc rolb inc dec push insb inc xchg aam and mov rorb js sub pop jge inc lret pushf test xchg outsl call lcall mov negl sub test das jecxz mov hlt mov icebp iret es mov (bad) cld loope push add sbb mov cmp mov pop jecxz aam insb xchg pop cmpsl push cltd inc mov mov fcmovu jle or ja sbb xchg out ja push test sub or sahf ret cmp sbb loope inc mov xchg jmp ficompl cmp (bad) popa movsb dec pop xchg sub mov dec jo scas inc adc sarl fnstcw repz popf pushf mov loopne loope mov dec inc cld push (bad) adc adc inc cmp cmp hlt outsl sbb sbb bound bound lds xor mov out stos cli xchg add stos lods mov xchg jg pop inc lret sbb xchg cwtl or inc dec aaa push push dec inc mov xor sub fs and dec popa ja mov cmp add enter in cmp push push sbb cs add xchg ds pushf cmp xchg push and xchg mov mov out jb enter test js loope xchg in jecxz cmp inc mov outsb dec lds rsm lods in and loop or cmp xchg cmpsl and cs add ret push xchg loope mov popa add lcall jle cmp xchg xchg xchg loopne push jp out cmpsl push sti movsl adc cwtl or movsl int3 repnz mov daa insb xchg or jle and jns rcrl mov mov inc inc and xor pusha sbb aad pop mov pop pop outsb sahf dec insb insl fs jmp mov inc add (bad) sub adc mov out idiv movsl dec divb out lahf push mov cmp ds adc dec aam shr imul sbbb adc in mov and nop enter xchg push xor insl sbb arpl jnp xchg out cli push push push mov flds push push sbb insb mov pop cmc bound cmovge jmp loop and sti cwtl out inc sbb push cmpsl push mov es add xchg aaa pop push mov xor rorb mov movsb add nop and jb push xor mov inc adc xlat or cmp jge mov fwait test xor xor mov iret jns ds pop adc inc sub adc jge push (bad) pushf iret test hlt lahf mov push sbb push gs dec push adc sub push mov fdivrl enter lods lret call cmp popf fsts xchg ss push pop pop lret add and sbb sti aaa mov jo jl mov jecxz enter dec xor dec call adc cmpsl jg jnp pop aas mov cmpsb test rol pop jecxz pop mov dec xchg mov dec ja adc js sbb and push sbb cmp test adc pop adc inc lret (bad) jg test fistpl dec dec lea and pop into mov sbbl mov mov pop sarb xor mov cmp xchg in xchg cmp aam fsubrs sub adc sahf fwait mov mov pop popl clts repz insb test xor add xchg mov push iret out sbb dec insl add mov xor mov cld ud1 or movsb and inc jnp adc jo daa fisubl jp cmp popa push sub arpl cmpsb mov xchg dec cmp js mov mov or (bad) stos fnstenv cmc jmp into xchg sub sbb adc jle cmpsl ja pop cmc xchg add lahf mov xor shrb sahf jns in mov imul pop adc xchg xchg push in mov push cvtpi2ps pop lds add clc cli xor mov or sets into push adcl add jns mov and rcrb or clc lods mov dec jno add xor in jo inc aam lahf es dec push cmp inc pushl inc lret dec popl pop dec sub leave push cld andl and or rclb adc stos add push ss mov in inc pop xchg fist clc xchg cmp out ret jp mov push into mov aam jbe lahf push cltd pop sbb push mov sub mov dec xchg xchg mov push arpl xchg push add push loop mov add cwtl lods cmpsb out addr16 jmp cmp cmp rcrl mov adc repz sbb bound or jge sbbl push int3 loope ret pusha sbb mov pop mov ret je push sarl push fcmovnbe mov xchg imul xor sbb inc xor jmp iret mov sahf fcmovne sub cmp or mov inc lea push sbb rclb and xor lds cwtl mov push mov add xchg ret mov fcoml (bad) stos pop icebp mov mov enter xlat pop icebp divb mov or dec stos mov shlb add dec and jo dec mov (bad) int push jb ficompl pop adcl imul stos je loop or push outsb in mov mov adc push add out pop (bad) (bad) xchg fidivrl ja into cmp std mov (bad) not cmpsl pop push rcrb fldcw pop dec ss jnp daa popa sti jecxz cmp push mov dec add sti lcall jg pusha rorb xor movsb jl lods push push mov dec jns into cmc pop (bad) jmp je add xor inc add jno adcl lret decb pop ja loop call jmp lahf pop sub pop inc dec cmp or test inc ds out (bad) repz cld data16 ret cmp push imul mov sbb loopne pusha mov inc mov decl jbe mov (bad) pusha lahf in mov or xlat cltd and sub andb insb sub repz fstl cs sub inc jge mov stos jae inc out inc insl orl outsb push sbb cmp bound test lret jmp xor loope or ljmp hlt test push push leave cmp and jg std repz inc int3 adc lret jp and cmpl sbb jne nop jnp sbb jnp mov les or xchg (bad) ja jmp mov or adc jmp popa fs dec in imull push jmp sahf test push xor xchg lea jo and mov jecxz aad cld (bad) fldl pop mov sahf popa fimull cwtl arpl (bad) push dec push daa ret pop pop outsl sbb xchg mov fidivr pushf mov fidivl leave add or and dec mull aas lods jge incb push je mov int3 cmpsb jl mov inc (bad) fcoms adc enter repz push mov jae cs mov out adc add adc xor or mov push clc cmp inc add xchg pop lods cmp sub subb loope cmp pop pop sub test inc push mov cli pushf sub es das mov icebp sub xchg dec and imul test out movsb ljmp aam jb push mov dec nop jae xor std je mov xchg inc dec xorl sahf lret mov inc add sub jb aam in pop dec jmp xor (bad) mov pop xor lea aaa mov and adc mov add mov rclb sub daa add leave fildl in mov inc mov gs or sub xlat adc les fdivl rcrb lea cmc add cmp mov dec mov fidivl mov ret stos jns imul push or imul xlat xchg pop pushl outsb nop icebp mov aam adc mov inc incl sbb fstps push push pop mov ljmp stc xor sub add add cld mov fnstenv and adc cmp cli sti int3 int3 mov sub (bad) sub sub cmpsb lcall out and pop jnp loope gs ror inc xor mov pop mov xchg mov (bad) mov pusha cs mov rolb jno sub mull cwtl adc (bad) cmp adc iret loope (bad) mov adc and clc dec mov mov and sub aas mov pop iret das push (bad) lret mov pop dec mov jmp lret es add pop xor gs sahf adc or jg pop (bad) scas fsubrp popf mov push dec sbb (bad) fisubl iret dec mov adc clc (bad) sub les or xor in push shll dec pusha inc push aaa jecxz in or bound lods (bad) fadd pop dec or and repnz dec imul mov mov std rolb cmpb aaa rolb out xchg fwait (bad) push adc in movsb (bad) (bad) pop stos jne test popa xor mov icebp inc dec aas int3 mov or xchg out in push mov jle ja lret dec pop cmp (bad) xchg jge out sbb adc xor cltd add cmp shrl andl in aaa lds or movsb mov push insl das add mov cli mov (bad) std xor (bad) mov jge sub xchg inc inc push pop das sub jmp cmp hlt and lods or call add ret dec xor push sbb out sub div stos mov xchg hlt cs cmp (bad) enter mov mov sti jmp sbb sbb leave int3 js adc mull cmc dec cmp das jo stos jne (bad) sbb lret push fimul cmovb imul (bad) cmpsl (bad) std inc push xchg push fnstenv add xor cmp stos sub lods lods push and push js cltd lock shll adc mov out push das inc mov xchg mov icebp nop jnp (bad) mov fwait dec mov xchg or imulb out shlb push outsb push jl jl insl adc jae cmp sub sub iret or popa sbb out jnp push inc subb adc lret ud1 adc inc aas pop jbe mov rolb fimul inc fwait pop or xlat gs into std sbbl aam jmp inc in out jo ret inc xchg sub or in pop jb icebp push jle (bad) fs xchg cmp xchg out pop int3 loope pop or dec push stc inc cld aad fs xchg pop dec lock jbe pop add leave mov je loope inc add xchg mov pop cmpsb fs and mov jno icebp and stos cmp sahf and rol xor (bad) scas ficomp inc es and out or inc pop jno subl mov (bad) fs imul sahf push lcall and jmp push jbe pop or xchg mov and push int3 or adc in addl (bad) xor neg mov inc push test pop push mov insb lea fcmovbe push mov xchg pop jp jl int push adc xchg mov das sbb jg ljmp add iret adc xor jecxz add push fistpll and add cmp mov or bound mov cmp adc clc push in and gs push adc ror sub ror int3 pusha xchg nop lret mov aam test mov stos loopne push (bad) xor mov xchg mov mov pop mov neg stos cmp test repz pop push jecxz sbb and sub scas xor in pop add ret lea test pop mov scas cltd or add aaa fldcw lret rcl ret gs daa pop xorb xor or mov lods sub lods lods jo inc (bad) ja ret dec andb aas mov inc pop (bad) loop xchg mov int xchg inc push lock jo xchg inc or push shr xchg jb add xor mov paddq or xor movsb xchg pushf rcll push out fnstcw les xorl in pop cmpsb mov jbe das or pop mov pushf insb or or popf pop mov add push aam lret adc jnp or in add lcall mov mov dec xchg mov popa das pop movsb and sbb and call cmp mov or add jb cmp add sbb mov jg ss xor xor movsl cmp add mov cmp and jp lods cs insl into push sbb loop in xor or add pop fbstp shr jns (bad) (bad) lea and xchg mov icebp cmpsb sub loop bound cli lahf mov mov ljmp or std fistpl inc jne mov mov jno mov jg cmpsb (bad) and sahf sti (bad) xor and add popf xchg and lea fucomip shlb add pop push shrl mov lods xchg imul mov mov in pop (bad) xor lds ja mov jno ja insb leave ficoml or (bad) push clc fcoml adc mov fwait das push iret adc rep insl sbb lods enter nop scas jmp bound jl popf or xchg mov scas gs or das lahf lret mov (bad) js jmp stc lock orl mov jg push ja mov insb sub mull out cmp adc xchg push cmp (bad) hlt or std lock xor xchg or mov cld add aaa in pop dec inc jb mov cmp imul cmc decl divl out sbb xor les lds jp mov pop mov xlat fcmovne xchg addr16 inc sbb daa sub psrlw mov and xchg lds jge out or xchg jecxz in lods add loopne lds lods mov mov dec pop fiadd movsb jbe cmp or outsb and shr adc adc mov jg lcall xor sbb (bad) xchg test (bad) lea shrb push sub les xchg test inc scas push xchg std (bad) mov aaa daa jl and and sub sbb sbb add mov cltd mov sub mov sbb dec pop jmp pusha rep fsubrl mov hlt sarl push jp adc jecxz sub scas pop mov outsb je into pop fmulp xor adc scas hlt cmp dec (bad) cmp cwtl fs arpl pusha sub inc sub movsl push shrb call mov into ret mov mov into inc cmp andl pop sbb outsb sti clc dec adc mov sub inc push mov dec dec or pop cmc out jns cwtl jo jp sahf ljmp ljmp or adc pop mov cmp push or stc lds test mov jl mov int3 cmp test mov inc mov in cmpb test cmc push jg inc std push in xor and pusha pop int iret mov loopne mov or shrb sbb add in mov popf or mov fcompp and inc iret mov add popa jmp push mov sbb dec ja out fbld add sub and aam or adc xor clc cld cltd cltd cmpsl lods sub jl jge adc mov jns shrl xchg inc loope lret mov fisttpl xchg xlat fcoms cmp xlat dec pop push dec push out test adc jo mov hlt hlt insb lods call sahf dec cmp mov inc mov fs push lea adc daa and mov fisubl sahf and sbbl inc mov sbbl mov sbb xor rcrb push lea pop mov xlat setb inc xchg xchg jae mov dec mov push bound daa add mov or (bad) and sbb mov pop pop cmp pop repz scas mov cmp test enter sbb sar mov xor jne cmpsb stos rcr int3 jge mov les arpl xor popa adc add ja imul pop adc divl out mov xchg lock (bad) in out fidivl dec mov dec push xchg mov jp dec adc mov scas jne int3 pop cmp (bad) mov es mov insl cs xlat sub jo jns lock push and js rclb or jl sub xchg sahf mov (bad) into push push xchg lahf mov mov hlt xchg nop incb testb movsl cmp into mov sahf inc fsubs inc in pop outsb out cmp not pop rol idivl or aam and dec mov jl and xchg cs lcall lods dec test mov xchg cmp sahf push mov jg sub movsl jle das xor sbb cmc mov cld lret jno mov fwait cmp mov dec push int lahf fwait jno lahf and cmp das rorl bound jnp in hlt and adc out push cmpsl or aas push js sti sub enter jne sub inc test jb arpl add daa add loopne nop clc xor push pop scas sbbl mov adc inc and testl mov sbbl dec xchg sbb xchg stos mov inc (bad) sahf fsubs inc fidiv or ja or sbb cmp jo push xlat mov dec push out test outsl pop xchg hlt cs jno mov fsubs mov popf xchg (bad) imulb cli outsl adc mov insl and mov (bad) push dec inc shr fidivr add lea jbe repz xchg cmp inc cmp leave cmp dec jo mov insl std repz or cmp clc xchg inc adc push cmp (bad) lds dec jle or (bad) dec shrb js enter daa movsl nop or inc or fdiv push dec mov jecxz icebp shll jmp push cmpsl mov add sub xor rcr int push call and and add das (bad) or inc add (bad) aas push cmp cmpsb push dec dec mov (bad) nop (bad) add cltd cmpsb ror scas out aas scas dec cltd arpl adc in je in jo dec das stos sub rcll add insl mov sub outsl adc nop adc icebp cli stos or scas sub adc jg jmp xor loope xchg idiv sbb and xchg es jecxz and pop jl enter dec scas mov ret lret ss lods pop sbb call dec ret fildll cwtl gs sti lods out pop push (bad) in mov mov repnz bound pop ss insl pop hlt arpl into subl enter xchg roll (bad) cmp lret jge and add or or insl or lds adc out cmp push movb xchg cmp push mov mulb daa mov (bad) (bad) mov jo push xlat mov pop cmp inc loopne mov add leave arpl or mov inc or (bad) mov fldcw sbb pop (bad) cmp ss mov (bad) fistpl stos sbb inc cltd out mov mov or mov push push hlt mov mov stos rclb jp mov jbe inc mov add mov popa loop xchg inc pop test mov stos (bad) jns xchg jg cli repz aam out jno jecxz sub in mov out fnstcw mov mov rol (bad) xchg dec and pop stos gs out dec dec pop pushf fwait and mov dec pop pop add pop mov cmc push cmp lods mov push fcomps xacquire cli (bad) cmp dec mov insb mov movsb and ljmp ret jns cmp pop movsb jo push xchg mov cmp mov (bad) data16 pushf mov outsb xor lods (bad) mov sub jmp lock mov repnz xchg in es pusha jle dec repz lock xchg addl cld add fstps mov fildll sbb mov lcall push xor and add xchg clc loope push xor enter xor mov sbb mov cld clts test sub out jne xchg adc xor adc call (bad) add jne adc xlat insb sbb adc jno insl (bad) clc mov xor inc push inc mov sub xor leave mul mov mov rcll mov jno fwait pop and jp lahf js rcrb fidivr mov inc test add mov pop push loope xchg or mov xor stos in sti sbb pop and dec or les xor fsubl aas dec sub clc jge movsb cmc popa clc out sbb inc into mov cmp loope out fldt hlt cmpsb xchg mov call sar stos and cwtl movsb xchg xchg insl outsb test (bad) cmp (bad) in xor pop mov and cs outsb mov sbb cs cmp pop scas mov in and test clc mov jb int3 push fcmovb dec ror lea sbb and cmp lcall push pushf add mov lds push daa adcl ja ret in mov hlt xchg cmpsb dec dec cmp inc dec push fsubr jle mov pop lock rcr fs or pop repz sub test gs pop jle push dec insl dec and ret inc cld mov jae sub push adc inc das mov or aad sti lds daa sub fisubrl out mov das dec loop mov xchg push pop lret imul xor (bad) lock mov lods xchg cmpsl test mov movsb mov aas and mov sbb pop jp push in roll fimull sub add cmp test lret pop or js (bad) xor add ja sub dec and mov xlat cmp movsb negb jo dec test cmp pop mov (bad) stc roll std push cltd fdivrl mov shr add iret call adcl xchg xchg decl sbb add fdiv out test adc in sub lret lea ljmp loop dec add (bad) arpl (bad) or mov test mov fdivrs jno or cli xchg sti and pop and inc mov lock je mov inc into cmp sub inc outsb lods xchg scas sti fildll movsb pop xor lea pop jle push inc add lock test xchg mov movsb mov in cltd clc sub inc aad stc push fwait insb cmpsl adc mov sbb es ret sub and shlb jb pop dec roll les out cmp jae jl aam jl xor add cld imul jle test fnsave mov pop movsb jns jle dec iret stc or cmp xor pushf sarl daa jns mov pusha or mov fdivs sub hlt push sub jmp pop mov pop cmpsl xchg movsl (bad) insb inc (bad) rolb mov cmp jbe out (bad) ljmp jle xor scas (bad) cltd add je (bad) mov xchg ret mov daa adc aad mov adc inc imul fistp out lret shll (bad) pusha push mov pop push repz add (bad) mov jbe clc call and add cmp enter mov test ds popa outsb adc testl leave test cmp ret movsl and out push xchg pop xchg mov or sbb cli in test and push dec jns addr16 jns lods jl cmpb sbb push mov out loopne mov mov push fldt cmpsl andl pop mov jecxz cwtl aam jb mov gs roll xor out (bad) (bad) sub lods or shll cmc idiv mov inc outsl jle loope adc add fsts pop je inc mov cwtl sbb xchg movsl cwtl inc jl daa loop cld pushf mov add (bad) mov insb repz or js pop in jae into popf sti inc mov cmp ds jae stos ret mov into (bad) inc mov dec je movsb lods mov jecxz rcr mov adc sbbb imul stos (bad) sbb mov test jmp and (bad) std lcall adc or in iret mov iret sarb pop aas mov pop out imull lret in add mov hlt cwtl push sti dec and dec (bad) mov cs mov jecxz testb ret sub in sub insb idivb stos notl sub sub sbb push dec lock fcoml xchg sub rorl ljmp xor xchg in or outsl fwait cmp and and cmpsl std xor in sbb fwait jecxz loope das and xchg rcrl xor pop outsl cwtl cmpb pusha fbld popa push shr add sbb into sub mov test jae xor pop pushf jmp pop ret out push pop mov jae cli cmpl ficompl mov cmp (bad) mov shlb pop (bad) xor mov inc sub pusha push leave mov mov mov sub mov dec test adc (bad) iret sub andl push push adc ret out jle ja ret mov mov in add cmp push ds xchg nop xor push inc icebp mov (bad) mov dec fnstenv push pushl mov xchg and dec lahf (bad) ja dec cmp lret mov (bad) cmp jns jbe or (bad) mov jbe,pt xchg xchg and enter xor lods scas lret cmp mov (bad) jb jae js bound bound or mov stc (bad) pop nop addr16 jp dec mov cmp add push jo cs aas loopne lcall adc xchg pop shlb lahf sbb push into (bad) (bad) sbb jmp add pop inc lods push cmp push in pop (bad) int3 stos sahf nop repz and and xchg xchg mov popf orb xor cmp out pop pushf in mov ss test pop (bad) ja inc aaa fdivrs lods sub iret ret jge hlt xchg push in decb mov cmp lahf ds int stc lods inc int3 jb jo jg aaa dec push sbb lret lock ret movsb mov adc test loope ja enter les add sub icebp or adc jae mov push jmp xor loop lcall dec xchg dec push les push jbe adc mov jbe lds mov dec pop sti pop sub sub popa mov bound repz pop fdivrs (bad) std scas xor jp js icebp rcr andl into mov cmc scas cmp out lods fcomps sub push je pop xchg and call push add and jg adc adc cwtl dec sub mov adc lea leave pop ret add or out adc dec dec popf mov sbb xchg jge lcall cmp sti add xor ljmp push (bad) cmc jns daa xchg or mov lods int xor fprem1 (bad) adc lahf push test aaa xor and popf xor movsb push xlat and mov js ljmp or cmp ja rolb les jl ficomp pop cmp jecxz in and xchg add dec inc mov cltd add js inc adc hlt fs jge out mov sarl xchg sub xchg inc movsb mov adc xor xchg lea lret mov add rorl pop mov pop loopne inc push sti pop sub pop pop and mov test xchg cmpsl cs imul cwtl adc sbb add ja pop sbb hlt and pop xchg in test ja roll out add sarl inc aad inc inc jecxz insl mov mov ss lock imul mov jnp mov adc inc fwait mov jbe test push (bad) or lfs cmp clc mov dec xor sar popf stc insb (bad) jmp mov insb sub cs es push aad inc mov rcll fbstp sbb aas pop jmp jle mov dec hlt test les add f2xm1 in push out sbb mov pop mov insb pop or imulb push inc hlt andl mov adc lcall int imul mov arpl mov jns jge enter push aaa xchg in and mov dec mov sbb jmp mov lret jns sarb push dec pop push and ljmp int3 xchg jmp adc push bound data16 ds sbb sarb push popa ficomp mov stos pop test mov mov mov fidivr stc jns cmpl shlb pop adc (bad) mov imul inc push sub mov (bad) cwtl or bound mov push push ds lods in adcl mov xchg ja push adc scas rcl popf inc or mov icebp daa stos push enter loopne mov sbb mov dec fcomi push push lret xor stos in cltd imul addr16 dec inc outsb add fsubrl xor icebp aam int3 (bad) jge push ss pop call fmull mov and or mov int dec clc sub stc sub adc (bad) ja adc addr16 rorb add pop push clc or sbb inc arpl (bad) pop rcll lret mov pop or movsb add rep sbbl mov fdivrl xchg jecxz dec div push cmp or scas xor ljmp sarl cmp jmp out cmpb jno sub cmp incb lods mov mov fsubs add jle inc scas pop arpl jl lods xchg xor ss stc xor jl insl add repnz cmp adc mov pop cwtl in push test repnz int3 icebp test (bad) cmp sbb addr16 mov mov aaa test loope dec je add sub jle je pop pop lds mov pop jg lcall imul fcompl lods adc mov call dec pop mov ret xor mov out mov test dec jecxz mov insl ds or sub fs jle pop repz adc sub aas lock cld loop inc lret test outsl int pop xchg nop cli imul push cmpsb shl fnstenv imul push jo stc mov cwtl mov xor clc push jp rcrl (bad) in xchg movsb scas sti mov lahf mov push mov pop xor and imul mov jmp sub inc repnz jl cs (bad) stos jl mov imull js jae outsl iret outsb clc inc dec aas adc bound sbb jnp sahf test (bad) mov xchg out add xchg das ds xchg jp mov xchg mov mov pop lcall jge (bad) lds fnstenv push dec gs sbb cli fnop lcall mov cld sub arpl add in push push fs xor out in pushf xor loope mov test push or movsl and pusha sub cwtl ror xchg jp (bad) cs arpl movsl sbb iret test std lret es push cmp adc icebp mov outsb jl lret loope lahf pusha sti dec or jl pop xchg xorl dec and loopne (bad) pop loopne bound pop jne push popfw lcall sarb adc jg cmp insb nop lahf cmp add fadd cmp popa adc js dec mov cmp test pop jns adcl out xlat outsb mov iret inc in ljmp (bad) sahf fist cmp dec sbb (bad) xor mov xor fcomps (bad) idivb ljmp mov pop inc add lcall fistl fsubl xchg mov lcall dec xlat cmp or cmc enter xchg cli push lahf pop xor cmp jecxz cmpsb jle and cmp scas inc jnp jl mov push push (bad) clc insb push shr clc mov inc fwait add pop outsl sar dec mov jp sub sub cltd int3 add pop add lea pop push add mov ret cmp ljmp push cmp test push or xchg sub xor sub psrlw and iret shll jo es fsubrl shrl push imul out out mov imul add add xor sub jmp lea movsl push mov inc or cli mov jbe outsb mov inc add fs repz push sbb push mov jbe mov mov cmp leave xchg inc sub mov and ja sbb xchg xlat jge cmpsl mov xchg push pop incb jmp gs decb loop or mov (bad) mov inc fdiv mov inc mov pslld in ss mov insl (bad) pop (bad) and jmp push ror repnz in imul cmpsb cmp add xor loope mov outsb cwtl out push add outsl rorl inc add adc movsb call das loop ja loope outsb push movsb pop (bad) xchg mov in xchg jp (bad) inc xchg push mov (bad) out cli mov mov push or sbb cmp push aad jb out orb test repz jbe lea xchg and and xor sbb repnz dec pop divb push add lcall mov jle inc xor cmp cltd divl xor xchg cwtl stos js inc test push (bad) mov xor jo jmp idiv sbb pop pop adc daa sub push xchg pusha cmp inc adc out stc frstor int hlt scas sub sub mov mov push jbe sbbl add inc out or dec in out cmp popa gs and or inc push or inc (bad) mov in add sub inc test dec jg int xor and dec cmp sub mov (bad) in out ret dec mov stc das jmp sti sub dec sbb xchg sub pop dec dec or daa enter xchg shl sti out dec xor add bound sbb adc jp push xor mov mov pop mov iret scas xor sbb jle push add xor faddl mov push or pop and xchg lea popa gs fcmovnb (bad) fsubrs sbb ret pop xchg icebp push (bad) sub sarb inc ret loopne addr16 jecxz pop push jbe xchg sbb mov add cmpsl cmp push and sbb (bad) sti ret aas pop ret push cwtl shrb js push cmp clc add mov pop out add pop movsl mov insl pop xor lds test add test add cwtl and or sbb mov add xor xchg pop lods cmpsl xor in jge rep inc repnz (bad) arpl push addb adc leave sbb sbb inc xor xor mov je stc cmp jl or jmp dec cmp mov add fs movsl imul add pop bound mov dec mov dec push das push push lock cmp mov unpckhps or cli xchg add insb push mov dec pop bound xchg shrb xchg xchg inc cmp inc jae add sbb xchg cmp push das jno mov cltd mov popa (bad) jb push pusha mov movsl pushf add and call dec test and fnstenv sbb push shrl loop pop pop mov jno je scas insb mov pop inc dec enter pop gs mov jbe dec mov push mov dec sahf xchg std mov xor add imul fistpll jmp mov add pusha jecxz daa mov xchg outsl dec imul sub dec (bad) (bad) daa pop push icebp movsb cltd or mov xchg sub pop mov pop bound jbe call les pop pop or xchg loop cmp scas jno enter testb push into inc xor ja cmp lods lahf xchg pop fcompl xchg ja xchg in scas push movl (bad) (bad) pop loop or xchg out ret nop out push mov icebp (bad) ja adc daa mov push or into cmpsl and (bad) pop jl in fnsave add sbb push outsb inc scas aaa mov ljmp (bad) (bad) xor flds pop or rcrb mov and fisubrl bound mov cmp pop fwait mov fldt repz mov popf out stos mov leave leave pop imul inc (bad) xor cmp mov sbb jns sbbl fisubl sub sahf xchg fiaddl xor ficom nop testb lea testl push pop les stc rol mov addl mov pop cmp out adc cmp xchg mov sub xor jg xchg imulb in and push pop and imull incb mov sbb mov es jg ja es push cmp cwtl (bad) lock js into inc lock jle nop lret scas xor adc mov in leave enter call pop add or insl ds xchg out (bad) js mov mov or fsubr mov nop add cltd pop (bad) data16 jge popa icebp aam stos cmc (bad) push je mov jne lret aad pop ret mov popf cmpsb add icebp pop lcall aaa sti jle xchg cld fist and and inc ret ret mov dec xorl mov test mov in in sbb insb ljmp jb mov imul xchg xchg mov insb or jp jbe jno inc inc ljmp (bad) mull adc (bad) sbb out jo clc lret mov ljmp xchg dec or mov inc inc jb imul pop inc out cmpsl loop xchg dec push jg das pushf mov imul mov jle out add arpl shll rorb fstpt fildll roll insb movb pop mov push mov (bad) mov sub str mov ljmp das shlb repz neg sub ror xchg cmpsb jb bound lret flds popa icebp cmp xchg dec push push pop sti lret mov mov cwtl dec jl and jecxz xchg pop mov scas pop pusha and sbb jo fdiv xor xchg cs cmc cs mov dec gs fs push add lahf cmp cmp imul push push adc fnstsw movsl imul (bad) jmp cld lahf pushf pop pop xchg push enter sbb mov jnp mov imul mov and lahf arpl pushf pop stos test inc insb cmp rcll mul or xchg and loop cmp jbe js mov repz jb (bad) jo fs data16 mov mov dec lea inc fwait inc es shrl (bad) xchg fs or mov ret inc es and mov repz pop dec (bad) pushf add enter xchg fidiv (bad) mov loop in mov mov sbb mov lods mov mov lods ficompl mov fmuls cmp push out int3 mov cli push lret mov sbbl pop push rorb sbb push in addr16 or add fcoml movsb nop cmpsb sbb mov cld lcall mov and mov imul adc icebp mov out or adc push into (bad) in mov mov dec and out cld shrb scas adc push ja and insl call dec fildll sub jne mov aad (bad) pushf sub jno (bad) sub mov aam mov cwtl add and sub gs add mov mov mov fbld mov fisubr adc jl mov lahf mov mov lret pusha lahf and jns mov jnp pop loopne,pn in mov (bad) int3 xchg fild enter inc (bad) mov pop mov int psrlq imul cmp pushf inc or inc pop xchg sbb mov movsb push or push pusha ret insl cmpl jne,pn and xor add cld insl fldcw pop stos shrb iret and ljmp sub jl and out addr16 push pop lods enter mov pushf insl (bad) fimull loop repnz int (bad) pop aad adc or xchg sub addr16 sbb dec popa mov mov and aas pop loopne fistp scas or fsubl and les pop adc push cmp divl fwait xchg in lods arpl jmp lods lods pop fldenv pop and (bad) jecxz pop cmpsl cs add jns xchg jo sbb ds loopne pop adc into loop and push or and test enter push inc mov mov ret cmp cmp fnstenv stos jo dec sub sahf lret fadds fsubrl out xor sbb call jnp in aas lock dec rolb xchg inc jp,pn popa cmp mov pop nop mul outsl shrl aam lds sbb pop pop or mov dec inc xchg adc stc ss pop idivl adc push lock jbe sub subb jecxz (bad) cmp pop pusha (bad) adc div loope (bad) and or inc lds xchg dec loop pop push loopne push pop es loop es xchg loopne adc add push mov (bad) fcmovnbe dec frndint pop mov sub mov cmp mov repz or lcall mov sub les pop aam jmp aad jae mov out mov sub and mov aaa in mov or outsb scas dec es cmp mov adc outsb jp out inc (bad) fcmove sbb or (bad) (bad) xor nop or loope xchg dec lods sub fdivrl push xchg je movb mov ror push cli and fisttp push adc loope jge pop les cmpsl dec insb jmp xchg mov jecxz das cmpsl mov popf lcall xchg xchg incl arpl jle testl nop aam loop mov dec lahf movsb movsb pushf rclb adc (bad) push sbb loopne sahf and notb xor addr16 std sub int3 addr16 out dec adc fiaddl lods push inc add sbb or sub loop xchg out mov loopne sbb das jl mov cmc push mov repz movsb push push inc ror jp out ret cmpsl sub dec push sub imul fwait js add inc mov cmp repz cmp cwtl pop enter hlt xor decl pcmpgtb (bad) cmp sub lods hlt adc inc or inc cli (bad) bound pop push jnp mov in jb or fnstsw jnp popf cmp je leave (bad) mov sub rorb lods push fwait lea repz jge jmp sti jae,pt lock out (bad) arpl cs cmpsb imul xor cmp push jns or loop dec inc in into icebp pop outsb lret bound addr16 decb pop sub sub add js mov (bad) jnp (bad) jne call sbb imul inc fnstsw mov xchg mov lods cmpsb xchg mov jnp imul rcll sub imul jmp clc (bad) pop arpl mov jno jb sbb popl mov cld addb in adc aam xchg (bad) push fisttp push cmpsl outsl rolb mov shrl gs mov mov xorl (bad) fsub daa add sub push xor hlt aas and repz jg std sub inc testl or adc aas jns push cmpsl cld scas push push push int3 cmpsl push sbb roll and or sub das lods dec xlat js aaa xchg sbb cmp sub mov les sti leave iret loope hlt roll xchg and or jl dec mov ljmp push xor repz rorl add mov jne push mov xlat mov lahf push mov aaa aad adc mov mov (bad) and imul inc sarb popf cmc inc (bad) and sub dec jl push out sti test jp and mov mov scas lcall addr16 add arpl dec sbb push daa sbb (bad) mov or ret shrb pop test jo sahf sub out bound add pop or lcall mov push data16 fsubrs xchg mov cwtl insl sub imul inc bound sbb mov xchg xchg and mov loopne test out int3 add and dec outsl mov push mov fidivr aam fiaddl lods ja lods xchg mov scas sbb adc sub lahf (bad) xchg repnz cmp cmp int3 test jle cltd andl lcall aas and xchg ret xlat xchg jne push push inc out sbb loope fistpll (bad) mov (bad) sahf out jo imul cli mov jno lcall repnz shrb inc adc cld pop iret sahf pop push cmp andb sub add xchg ljmp les add pop or dec pop pop scas aam ret aaa pusha sbb ss ja mov pop repnz jmp repnz dec mov sbb std and mov outsb mov pushf imul in sub pop sub cltd sbb jl (bad) cmp shlb or bound int3 cmp mov mov push fsubl scas push push or stos lret xchg pop fcomps sbb push push dec push adc mov stc (bad) in inc stc adc and mov call loopne fwait xor loop xor cmp rorl cmpsl pop fild lcall xchg in test cs call mov lods push rcl mov dec mov enter pusha ds push loop xchg mov xchg out push or or das mov out mov dec jns xlat mov (bad) (bad) loopne lds sbb and sbb sbb fadds jle shll outsb int3 leave adc xor xchg push insb push (bad) pop inc loope sbb ds add js pop adcl (bad) stos stos xchg and clc ret (bad) cmp or sbb adc xor xchg sbb xor pop xchg add aas xor dec cmp xor fnstenv and in mov pop outsl mov dec mov mov mov movsl in cmp mov mov (bad) pop test shlb shrb pop push jmp push inc jae fsub or push inc or adc sub cwtl fwait push pop (bad) jno cmpb adc pop cmp jne popa cmp sbb xor out jecxz std mov arpl int push xlat jae mov cltd sub pushl out and cmc pop int3 jle sub ret nop ret jp mov dec xchg dec cmp inc push fcmovnbe add push mov scas sti (bad) jae jle les mov push add aas and jp addr16 xchg popa ret jo movl jg xor repz pop cmc mov int mov fwait in xlat popf leave pusha jae add idivl xor fcmove xchg fsubr ficom int lahf cltd and mov or push pop xchg ror mov leave fwait gs stc (bad) pop sti clc orl loopne (bad) shll dec test dec out cmp mov and cltd fcmovnbe and or jne pop push fs aaa push lret mov fs push punpcklbw lods pop dec jne sahf data16 dec lock or fcoms add gs mov aaa icebp xlat push pop push rcrl pusha pop cmpsb sar mov je sub outsb cld hlt ljmp xor add (bad) cmp into push xchg cs mov mov mov add pop mov sar stos xchg cmc pusha fwait inc cmp add mov test cli xorb push adc arpl jnp je adc cli cmp cld fs xchg test lret movsl inc push out in jmp push bound enter inc std or cld repz push sub icebp pop hlt js or pop and mov mov sbb dec fs es mov mov push test and hlt fldt je punpcklwd dec pushf adc push test (bad) push out sbb pop lods repnz mov cld xchg jl in in adc inc pop test fs lret mov pop inc rorb popf (bad) add lods mov mov push lods lods stc stos mov push jno xchg mov popf push out sbb add insl (bad) jns add ljmp pop stos inc adc xor icebp test xor lock dec xlat les push mov loopne ret leave xchg call loope and inc aaa lods pop aas mov insl test loope and (bad) leave clc mov xchg xchg lret mov pop cltd insl push jl ds cmp mov mov adc decb nop jge mov dec mov jg cpuid out push jge lcall and xchg fistpll push (bad) outsl rorl push pop int3 lea sbb sub mov sahf es fisub das cmpsl std (bad) ret mov push mov push xor xor jb cmp xchg call pop ret adc movsl or mov ss jb dec (bad) and push ret ja or jns std scas dec xchg (bad) fmuls add xchg sbb hlt mov pop (bad) daa push dec outsb push lret dec pop push fwait jmp inc xchg pusha aaa mov jl or xor or pop xor mov cmp fidiv cmc sbb lods das fcmovnbe mov mov xor loop shlb lar add mov adc fdivrs xor and xchg xor dec insl stos sub cltd mov lahf in jns adc jmp add ja rorb into dec jecxz inc fidivl mov jno mov xchg scas cmc or or or aaa js jo out ret push test sub inc jmp iret push or cld or loopne xor je adcl lods outsb cmp (bad) cld push aas mov cs inc pop aaa jle mov imul loopne add and xchg cmp nop sub mov hlt les mov popf push sbb mov push or mov jbe nop cmp mov mov inc leave mov mov jmp repnz int push mov xor into out int3 push cltd add add cmpsb fisttp mov dec inc ret aad int3 lods jo adc fidiv jne push mov pop mov sbbb icebp out (bad) fadds lea rorl js xor sbb gs add aam cld (bad) hlt rolb mov cmp pop dec or pop loop add jb out sbb test mov cmp (bad) pushf imul mov bound xor and les adc or cmp movsl or insl jg pop mov arpl pop (bad) jmp lods sbb lock lods insb or aad idiv enter pusha arpl add dec dec sbb in fadds jg xchg pop pop jle mov imul addb sbb jle or out lcall push mov dec adc sbb dec and push push sub add cwtl push call clc test aad rorb sub cmp test (bad) pop ds ljmp repnz cmp lods or inc loop popf lea cmp nop les add adc test push arpl sbb add sbb inc xchg pushf leave xchg sub push push bound repz fmulp cmp cwtl out (bad) cmpsb cmp (bad) mov es xchg xlat dec iret push or adc ds jecxz mov pmaddwd xchg jge mov adc test cmp sub xchg mov cs outsb or jecxz popf sbb addl add jbe add call mov push es push jae cmp sbb mov push int xor or ret mov sbb in add push mov adc ss xor pusha ds mov and and rcr fwait lods add or or jl push add movsb nop push and cmp push inc pop lahf call lahf or mov sub mov dec or out and in mov mov (bad) mov lock push mov xor rcrl xchg int pop inc dec sbb sti adc ret ds out je stos cmp daa in cmp mov lea jp (bad) or push mov fstpl loopne lcall mov orl (bad) stc sbbb sbb lds test fistpll rcr and lods fsubr adc jg push data16 (bad) jo jg icebp cltd mulb in outsl pop orl out xchg dec mov (bad) aaa in mov bound add cmp lret add mov adc add test mov xchg cs mov iret cmp pop jmp fiaddl mov hlt ret cmp and loope cmc cmp fcompl gs fistpl push cmp stos xchg insb aaa sbbl adc mov frstor and mov push push shll sub xchg testb mov mov pop jne add testb fs push dec dec hlt push and fisttpll xor cmc push out adc test mov jecxz das or sbb imul daa mov pushf inc or add cmpsb push fnsave cmp xor pushf sbb scas mov xlat or xchg clc cmc nop push and jb mov stos jecxz push push sbb push (bad) mov jg addr16 in xchg sbb test clc or movsl add les not jmp orl ret arpl xchg xchg pop cmpsl xor jo pop mov mov mov andl lahf cmp out sub push adc testb pop xor pop or xchg pusha gs addr16 in flds mov mov jnp inc popf data16 std in mov mov xchg mov (bad) outsl fmulp adc loop pop loopne push pushf xchg divl mov push call push data16 jo mov jle pop mov pop mov iret popf sub sub inc mov popw movsb mov adc push ret lods or add pop add data16 jle fwait jp pop in out push test jmp into mov mov (bad) and stos or ja mov int lds and scas dec (bad) in push popf jno push jns sub loopne add les push lock fyl2xp1 add icebp sbb mov cmp xor cmp es fcoml inc gs call int inc stos repnz pop sub pop loop pop cmp add stos shr pop or push pop cmp mov mul and lds stc rolb daa in in jnp xor je ja dec mov mov xor (bad) hlt mov push movsb mov daa cmp aam and lea adc pusha lods movsl popf cmp pop adc cmc xchg or xor ljmp clc (bad) pusha sbb mov (bad) push or xor lock daa sar mov insl pusha cmp lahf jbe push and test sahf orb daa popa scas (bad) int3 fdivrp mov and cmp mov rcrl mov cmp fistpll pop mov in (bad) js mov jg dec cmpsl pop push jmp test xor hlt scas inc cmp jmp add sub jl int3 sarb dec jp xchg add test das inc fiaddl sub imul and xor iret lods or fcoml pop pop inc mov dec popa test xchg add stos inc mov vphsubbw sti mov (bad) mov dec jmp pop dec push mov push scas mov pop pop cmp add ret mov inc jb xor and icebp xorb sbb mov add fsts pop xchg mov sbb cltd mov loopne loop test std (bad) out sarb mov dec mov jge mov push jae cmp push out xor fist or (bad) xlat xchg pop faddl inc mov and testl scas sahf shlb rclb pop call jecxz notl aaa aas mov pop jl and cmpsl jg lds lea loop hlt shrb push loopne fwait and fimull dec lret fdivs test jmp icebp lret jp imul sub xlat or hlt and outsb mov fidivrl adc adc mov or leave xor pop jp out mov rolb lret lea inc mov sar mov xchg test inc in cmp sub mov add mov popf push add lds jmp push inc insb hlt in xchg jge test or push ss shl (bad) sar inc lret add mov fcmovu push out test mov push arpl cmp repnz cmp mov cld into outsl jno pop mov int es imul fstpl jno sub sub dec (bad) jl dec (bad) pop (bad) leave or lret (bad) out icebp jbe ja adc test cmp fwait loop mov or sub insl mov mov cmpsb test enter adc popf push dec mov out shrb out outsl pop mov call inc push lock adc cmp xchg cmp dec stc jg int3 (bad) mov data16 fildl pop (bad) (bad) xchg sbb jo movsl fwait push aad jae pusha mov pop imul das mov in lods xchg test cmp push mov push mov dec cld cmp dec jae ret test repz push and pop jecxz jmp jmp push xor or xchg leave (bad) push cmpsb fidivrl in jle in add jge repnz sub xchg bound arpl arpl push pop xchg pushf enter out bound jge bound aas lahf loop xchg xor lahf pop jmp loop mov imul mov inc cmp xchg aam lret iret mov inc xchg cld lods lcall clc and mov pop pop jnp fildll and leave in (bad) std ret mov push out outsb mov adc dec (bad) shrb addr16 cmp add sub enter test das xchg shl mov mov lods push and adc mov loopne lods xor fcompl lret push push fldcw repnz mov mov add jns dec mov dec cmp lock or cmp outsl sub les (bad) jmp andl outsl fidivl and mov xchg jge push sbb mov pcmpgtw jb mov movsl js xor jecxz adc sub loope adcl es inc rcll shlb jae push jno fistl xor repz pop sbb sub xchg mov or data16 popf insl mov movsl xchg xchg mov dec push cmc mov mov xor mov mov rcl in enter call outsl jg pop into push lds fdivl and lds pop (bad) xor mov in push xchg xchg jp mov cmp shlb enter cmpsl add fwait add insl cs daa xchg repz lcall stos cli les mov scas addr16 ret xor ljmp xlat inc dec movsl sarb in sub (bad) dec push inc or lock rcr sub enter (bad) mov inc xchg jne into je xchg sahf leave (bad) mov jle fisub fmull and fcoms pop adc inc (bad) pop mov data16 mov adc push lods movsb (bad) aaa xor sub adc pop lods iret xor mov test rcrl sbb sarb or das fcom add mov push cmp icebp ljmp xor (bad) or inc adc rcrl mov gs bound stos mov daa sub or or imul pop push xchg inc cwtl add (bad) mov jo xlat push jl xor fmuls xor cmp or mov (bad) xor xchg inc cmp call push dec add es dec lahf out pop movsb in fild test jecxz clc dec mov xchg fcomps aad mov (bad) mov movsb test lock scas cmc mov repz xor addr16 lds add out cld push lret xor jg or pcmpgtw cmp ret push andb imul and dec pop popa lea repz and or add dec cmp or test fadd dec cltd jno mov je aad cmpsl push popa cmp jb lea fwait imul inc mov int inc nop negb mov and ja dec fistl mov xchg out mov stos mov aad mov testb xor or rclb xchg call daa outsl sbb cmc in cmp mov aad xchg mov mov fst lret cmc xlat cs add sub adc aad pusha aas adc cld xor push leave lss in je rcrl pop mov add aaa or jmp sub jae cmpsl je cmp in or add cmp fs jge push xchg aam xchg jne test pushf dec mov adc dec fadd cld push cmc bound repz test dec aad jecxz push lock rcrb sub lds sti xchg or rcll pop lcall aas mov pusha add jmp lret inc aaa cmc enter push push and nop (bad) xlat cltd jns add pop add cmp movsb inc es adc pop mov jae sbb data16 xchg cmp push or pop ljmp and xor (bad) jnp push clc xor sarb pop mov cmovns fdiv push push dec mov aaa (bad) iret stc push (bad) push push and lret stc ficoml push dec sbb adc push push xor sub fisub insl divl inc popf inc mov cmp cmpb in (bad) xchg (bad) loopne (bad) in (bad) lock popa adc rorb xlat clc dec xor xor std jecxz xchg mov das inc icebp rep cli data16 push ret fnstcw addr16 fnop cld mov and sub hlt sbbl jb mov lea mov xchg mov sub xchg mov incb out stos adc popa mov push in fdivrl sub stos scas push pop add mov lea (bad) movsl cmp inc sub cwtl or incl xor adc inc fldlg2 adc xchg mov sahf sub jo xchg fist dec mov orl aas (bad) jno and out sbb int3 lcall aad repnz cmp jl jge pusha inc sub add and dec pop pusha mov inc mov addr16 xchg mov add mov ret int in mov ds scas jle scas push xchg int3 fstpl mov push cmp xlat sti mov sbb xor mov mov adcb fisttpl inc lods mov sub xchg and decl jns imul cwtl arpl fidiv out mov pop aad mov arpl fidivrl jnp sub gs push adc bound pop into inc pop outsb push std sbb ret sbb push push xchg push cli jecxz xchg pop adc push fildll pop test mov mov mov inc pop movsb mov js cwtl pop xlat sahf sti lahf inc lock repnz sub daa sub mov push mul xchg mov daa pop cld adc dec mov mov cmpsl js js cs push ljmp mov in enter mov ds inc adc pop iret (bad) mov xor int insl jg and icebp js inc pop dec sub movsb sub movsl lret call xchg cmp or cmp adc inc mov push inc add jl mov in lds jno (bad) mov lahf leave stos (bad) rcrl fidiv (bad) adc (bad) mov inc lock dec cmc es mov fldt adc repz mov fdivrp fwait aaa cmpl mov das and jo pop leave push movsb xchg int3 xchg mov mov xor jp insb pop and pop (bad) mov aam das fidivr nop pop (bad) ja cmpsb jnp les scas cld mov aam loop movlps imul jle movsb dec ret imul pop inc xchg repnz sub jl xor mov sbb adc mov cli mov pop lods imul sbb mov cmp mov imull push mov adc jbe jnp adc xchg add cmp sbb push add inc sbb inc enter xor shr imul insl pop mov cs adc mov pop push pop pushf ret sti out push xchg push mov pop or cmpsl add pop push lods (bad) test lret jg test mov push inc add repz push push mov aaa out mull shrl mov mov pusha or jg pop call push sub aaa xchg loopne lock xor nop sahf dec lcall mov jbe xchg rorl xor aam mov sbb inc jge cwtl mov sbb lods test por cmp test mov aam cmpsl imul inc enter inc cld xchg sbb (bad) (bad) out scas inc pop cmp mov sub jge rcrl and cld cmovs mov xor std pop and push xchg mov fstps outsb xor ss (bad) shll inc jle rolb pop sbb add xchg push push movsb aaa js rolb stos aas rolb dec mov cli sub xor out or xchg and dec fnstsw jp xor fstpl pop lret sbb outsb xchg push rcr daa mov pop sbb cmpsb lods mov enter push dec pusha or cmp imul adc (bad) jbe (bad) cmc dec mov cmpsb pop orb inc push xor les dec add mov data16 xchg ljmp bnd mov cltd mov fdivrl mov sub gs adc push adc add pop bound lea add (bad) (bad) mov jae xchg into mov add test imulb sahf mov rcr adc pop or (bad) push subl lock dec (bad) in ror stos dec into mov cld lea xor push xchg std cmp ss in jl lret or ja jnp xchg jmp insb dec adcb mov (bad) ja and int add jns cmp push pop sahf stc sahf xlat jge cwtl inc (bad) xor fcmovu jl push (bad) dec sahf pop repz movl out pop je addl popf cmp xor or xchg loop mov bound das fnop popa cmp dec add inc adc adc xor fsts xor das in imul or sub lcall nop out mov jmp (bad) testl stos inc sarb mov mov jns push loopne xchg sub xchg mov pop xchg mov in jmp mov sub outsl cmp pushf shll adc in stc push ss push dec pop and (bad) out leave xor fmul in repnz cltd sub sbb adc gs (bad) or mov (bad) inc insb movsb xlat cwtl sbb cs sbb or les stos sbb or add mov pop push pop xchg mov cmpsb in (bad) push sbb and sbb dec sbb fildll pop pusha mov fldt mov incl es cli shll pop test dec loop int popf je mov push sub or dec aam insl movsb cmpsb loope sub lock mov lcall ljmp mov jo roll mov rcrb enter shlb mov (bad) sti sub into stos cmpsl mov xchg adc xchg nop popf push imul popa arpl ret es inc push jle (bad) jo add mov addr16 lret push out sbb pop cli jg sti rcll jbe ret fstpt lods shr out dec jecxz push bound mov hlt aas sub in arpl mov push ds frstor das (bad) mov loopne inc dec adc xchg mov aas pusha cs or mov xor js sbbl rcll or mov xchg sub stos out jg pop fldl arpl iret cld sub loop inc outsb inc mov (bad) jecxz push arpl (bad) and cmp mov and jmp push ljmp dec rorb dec jle sbb in mov ret mov dec fist jb push mov popa or cs (bad) faddl dec test pop or aas sub fwait cmp inc stos aas stos dec pop add cmpsb and push ljmp jmp (bad) mov mov adc add xchg popa sbb jns push scas jae movsl dec fisubr sahf sahf std test addb and mov rcll adc mov incb int jl lods xchg jnp dec jl lods nop mov push (bad) sti jns aad inc fild fildll std jnp pop nop movsb ret cmp push sbb sahf movsb adc and pop ja cmpsl int3 pop xor movsb dec outsl mov outsb inc subb repnz cmpl imul (bad) add pop inc xor mov or pop je mov movsb or lea shl add mov pusha fisubr xor jecxz cmpsl leave test mov and aam mov (bad) mov mov jno push subl push (bad) fs sbb loop mov imul cs (bad) mov lea imul sbb pusha bswap cmp ljmp cmpsl je out jmp adc lods mov cltd repz sbb dec cmpsb xor stc sbb inc aad hlt test ja mov leave push push into mov test sub (bad) dec push (bad) je or mov movsb stos clc jno sbb pop pop lret xchg (bad) jb cmpsl outsb push adc stos add sub adc fadds and pop and sbb mov jb mov xor dec mov out test dec mov stos fyl2xp1 mov fmull xchg mov (bad) int3 into sbb mov add or nop push jmp adc pop sub adc nop inc xchg lcall popa (bad) xchg cmp mov cltd cli inc dec in dec push and lahf add mov cld and rclb gs out pop lcall add xorl imul push jge outsl test push mov (bad) xor push adc outsb or add lahf xchg repz xchg sbb iret imul popf push insl adc fidivrl pop xor imul pop mov fnop ds sub xchg xlat push gs sbb std in clc dec mov xchg movsl xor ret mov xchg mov daa sbb pop lods aaa rcrb (bad) lret out mov pop scas pop jb cmp dec mov sub (bad) fisttpl arpl mov inc pop adc fldt (bad) dec pop in add jne hlt data16 sub mov mov cmpsb jecxz pop (bad) mov outsb arpl xchg imulb test lods cmpsl roll popa les sbb mov lahf sbb sub das mov stos xchg mov andl das sbb fcomp ds ljmp add sbb into pusha scas xor call push push and jne cmpl sbb adc push xchg add adc (bad) xchg add sbb lahf fisub lock xchg cmp inc mov push dec hlt pop jge pusha mov fldenv pop outsb out mov sbb and addr16 add leave ret inc add fisubl aaa pusha sbb lods data16 lods lock xor into mov sub cmpsl add inc shrl gs scas pusha mov pop pushf push push fidivrl push (bad) push stos inc iret enter cmp and pop lret icebp add adc mov inc pop lods sub xchg jns lock jge in in pop mov fcmovnbe jbe dec pusha aam ficom cmp cmp inc mov mov xchg xchg sarl icebp (bad) divb cwtl (bad) sbb daa push dec pop jb (bad) clc dec mov imul cltd push mov add insl mov (bad) pop into (bad) inc popa inc adc inc mov das xchg inc mov xor divl sti add cs sub and sysenter pop mov sub pushf and lcall lock and (bad) and pop cmpsb push fdivrs xchg inc cmpsl pop and testb jne and mov adc fsubs xchg outsl clc ret pop aam lds adc cmp imul sbb test push (bad) mov test and pop test stc xchg cld or call rcrl xchg mov mov mov (bad) lods mull (bad) shr or (bad) loope inc mov stc pop fiadd mov loopne lods gs jle stos cwtl xchg sub andb add cmpsb lods push pop dec std mov dec jl cwtl sahf dec sarl sar loop mov cmpsl cmpsb xchg out ret js shrl pop adc xchg daa pop mov dec dec outsb and cwtl xor imul jp push imul dec lret push lock or pop lahf sub jno dec jo adc mov sahf push lods xor jbe cltd outsb clc lret mov push imul bound js dec into adc push mov out push push mov rcrb cmp push jp sub or or (bad) data16 inc push pop in and call scas add loopne mov sub push xchg pop pop mov or cmp mov or outsl fidivl and sti mov mov mov shrb rclb ljmp pop mov add adc xchg sbb pop or addr16 push mov mov xchg sahf cmpsl lret (bad) ljmp loope xchg flds lret jb sub cmc pop mov mov jge lods lock pop pop jo test mov rcr and inc cmp xchg jbe pop jb fcmovnb dec ss sti les jmp mov fmuls nop stos mov js pusha sbb adc je jo add fist insb mov fstps mov mov pop xlat fs pop int3 test pop or mov loopne (bad) (bad) sub xchg inc test jmp (bad) cmpsb and icebp in xor aaa ss (bad) mov rorb pop and test add in push mov cmpl ret imul xchg mov je (bad) ss xchg orl (bad) mov clc xor cmpsb xorl stos fst dec loope fldenv push sahf enter sbb mov es cmp pop mov push cmp cltd divb fidivrl out cmp mov push inc mov xor push dec jge popa xchg mov cmp repz repz push sbb popa les out ja or mov jo dec xlat xchg jns sub xchg adc mov sub cmp mov or lds imul stos insb or mov mov orb test jge stc pop and scas jae outsl lahf add mov fwait aas cmp lcall mov jl mov lret int xchg mov leave dec inc xchg js (bad) leave insb sbb adc std cmpb call xor movsb adc and mov ljmp cmp adc pop in pusha insl push adc inc mov addr16 popf mov push xchg jle mov adc lock scas push in inc xlat jnp popa mov cmp fs sub pop aaa jmp pop std sub mov arpl jg pop jp mov push pop je (bad) leave jp movd cld fbld or cmp stos and xchg js insl fstps cli mov or jae push mov fcmovbe das inc push movsl outsb xlat (bad) or jmp popf add addb xchg add add and or dec jo mov enterw push xchg int3 push mov mov aad scas ficom mov inc ficomp stos or mov pop pop sub pop clc repnz push fidivl cs mov sub leave inc jge (bad) mov dec adc cmp fbld sbb stos or mov subb ja sti xor sbb mov add adc and gs xor and repnz push inc pushf fstl pop cli loope sbb lret jo fiadd push mov xchg push mov cmp dec cli push dec push cmp or test daa mov push in and jl or xor (bad) push mov lods add enter ljmp test inc cmpsl insb repnz adc add xadd jo mov rorl (bad) (bad) cltd (bad) int3 sub mov adc jbe sbb insl push sub jne mov pop cmp mov mov repz fs mov rorb mov mov add push ret push adc pop out sub dec decl (bad) push xchg pop xor stos or lea leave je incl adc lds iret cmp mov aas xchg repnz inc and jnp cs mov or push xor push outsl sub cltd fsts sub roll fmuls addr16 adc into aad xor enter ljmp dec out cmp inc arpl outsl (bad) lods sbb stc call mov (bad) xchg mov lock and mov xor cmc push jno push ljmp cli fistp mov sbb sub add in push dec mov lods lods es pop out insl int3 out out sbb iret cli repz mov cmp and mov mov fdiv mov aad inc sti sub jmp xlat aas push call mov les outsl adc fwait lock dec rolb inc psrld add les sbb lods xor dec xchg popa mov jg stos repnz push pop mov xorl inc ja lods dec (bad) ret sbb mov jge mov sub lock hlt or add push test out push mov popf xor lcall into pop mov ljmp ret jb mov lahf nop imul les fdivrs push push orl add and (bad) mov push xchg push fnop xchg call insl adc scas inc push mov mov push sub or lods sahf cmp into iret cmp add cmc mov push xchg push mov push ficomp sub stos out loope mov gs iret adc (bad) insl clc dec test dec and sub jmp dec aad xchg xchg cmp nop add pop sarl xor mov push es xchg fs (bad) cmpsl cmc pop mov adc push or push mov or push rcrb outsb push mov inc pushf adc rcll je mov fmuls (bad) pop xchg inc dec sbbb loop xlat dec push pushf and sahf inc icebp cs push dec vmovaps or push mov cmp dec hlt ss sti dec cld scas inc jl rol sbb jae aas add inc xor inc pop or in adc divl dec mov xor pop pop xlat xor or outsb sahf mov dec mov add adc mov aas add repz fstpt adc inc stos rorl pop mov mov cmc cmp call lea je bt stc cmp pusha pushf call pushl push mov call xchg pop pop fxch push inc xchg cmp mov jmp dec adc addr16 popa jmp loop insb add adc push ss jnp jo rcll add icebp or jp js push push sub mov mov movsb fdivrs sbb mov adc xchg cltd pop das sti or dec push clc sbb stos add pop (bad) sbb scas mov (bad) mov push xor bound (bad) cld adc push xchg mov nop dec imulb jns,pt inc leave xor jge mov push rcrl ret in outsl cmc push fiaddl out rcrb mov push inc cmpsl add shlb push cmpsl lahf add xlat out daa mov lret ss imulb xchg mov pop push inc jae inc ffree mov xor fwait add cvtps2pi inc mov sub cwtl aas iret ret dec xchg push push out test les lahf sti inc jmp add jecxz (bad) out adc ss je rcr jbe imul pusha addr16 pop pop jg jbe ja or (bad) lods (bad) dec in icebp add adc icebp out pop cmp rcll divb test mov cmp mov xor mov bound and fstpl outsl add push (bad) or inc and adc inc add loop add adc push lea jae daa adc cwtl dec pop aam bt pop btr mov stc cmc push cmp pop lahf lea mov jmp movzbw mov cwtl mov movzbw lea call xchg jnp and cmp pop xchg aas mov pop (bad) xor xchg mov cmp test std lret stos cmpsl mov lock inc adcl les and lea rcl pop jl (bad) push lods les dec pop (bad) in push repz sbb in xor mov lret loope push push jl rclb inc cs xor gs (bad) pop negl fist xor mov nop std xor arpl or sti or and xchg mov fimul inc (bad) or movsl sub insb cmpsb push mov les mov fsubr mov add shl pushl cmc test mov clc cmp movb lea jae test bt cmc bt sub pushf mov lea call jmp stc jg cltd xlat push inc je cmp cltd stc adcb mov inc dec mov std and bound push mov sbb outsb movsb jle jp sbb adc xchg out outsl sub mov sbbb scas ja in xor in repz fisttp daa (bad) fnstcw call jmp cld or pop dec fisttp or add jg imul dec mov subb bound std nop jle mov rol mov fwait loopne,pn cwtl out cmpl xchg xor (bad) adc sbb xchg inc cltd adc test mov (bad) mov fs je pusha bt jmp stc mov cmp cmp test pushf lea je clc add call stc jnp popf rorb inc or xor push dec ret adc inc cmpsb cmp cwtl in inc enter int3 lock in (bad) cmpsl scas and lds repz call stos sub lock pushf inc outsl out xor pop insl pop sti cmc test push daa push mov and pop add adc jecxz jp ret stos dec orl cmpsl dec xchg cmpsb inc roll add dec cmpsl mov (bad) pop stos xor pop scas fidivl mov xchg mov mov xchg and lods in or xor iret or push mov lea push pusha mov pushf lea jmp jmp mov inc sbb (bad) outsl and pop pop daa fldt rorl iret pop jmp jecxz or xchg xchg sti jmp pushl dec and fs xlat push (bad) mov pop into je mov in test fldt outsb or data16 jae test add push inc push mov pop mov add loopne ret xlat fsubrl movsl and cld call cmp js push ror pop sub pushf or dec push sbb inc mov dec inc (bad) jle sub adc sahf xchg xlat jb push push adc sbb in out lcall push pushf lea je push lea jmp call pusha stos push push pushf pushl lea jmp mov test clc cmc call add dec popa imul jb inc imul jns popa je inc js jae jae jo icebp lods adc push mov cwtl (bad) cmp fstpt icebp lods adc (bad) adc or cmp mov bsf mov clc pushf pushf stc cmpb push movb push mov lea jne push pushf pusha lea jmp pusha dec clc movb rol clc neg bt movb push mov cmp lea bswap lahf sets lea setb lea mov pushf lea ja pushf lea jb cmc call mov pushl movb push mov stos pushl pushf mov mov push movb push mov lea jmp xorl cmpl cltd mov aaa scas dec pop inc add (bad) cmc push dec call mov (bad) lods pop lock fwait jmp loop outsl add shrb lret inc loope lock add and pop push clc ja push cltd add push lds jne fnop add push popa je inc imul jae add clc cmp mov sub js std popf lret sti sti (bad) movswl sub push xchg popf add cmc mov push adc lret arpl popf or jne or stos insl in loope mov adc ret dec mov pop inc and ss mov les aas out das xor scas fcoms xchg in add or mov rolb stos imul cwtl sub js bnd xlat lds adc cmp ss out (bad) jne aad out jge lock push insb testl sbb push cwtl pop and push xchg push mov cmpsb out mov inc mov mov aaa out lahf xlat sub bound pop rcl dec jmp xchg ret je adc push mov pop (bad) push sahf sbb xor (bad) sub pop push (bad) push mov jb add mov adc rclb mov jle jle sub cwtl ss lds add mov inc stos cltd ss jmp cmp movsb mov stos or fwait jle sbb xchg stos adc in ds adc jnp cs dec sahf mov lea sub inc fmull lahf (bad) and add add or add add add add add add mov or add add call add add or add add push xlat or add add pop sbb add test or std push add call or add pop add scas or add jmp jmp lea jb cmp test cmpb pushf pushf jmp not lea pop push pusha pusha pushl ret push movl jmp lea ja clc imul call mov lea jae pushf pushf jmp fcoml ljmp movsb push shrb nop xchg jmp mov xchg (bad) sub out pop mov cmp sub data16 inc adc scas test into dec pop gs loopne repnz sahf jo sti jne stos xchg mov outsl inc mov or jecxz js jecxz mov arpl push push into jp cs inc cwtl ss enter or (bad) jmp push outsb cmp js scas ret xlat pop in mov mov xor lock pop xchg aaa mov xchg popw fildl mov mov ss rcrl outsb loop jne pop nop pop fs outsl cmp cmp push shrl cmpsb fidivr rcll push inc (bad) cmp or (bad) sub outsb out dec call lret inc gs loop jne fs into xor vmovapd pop int int3 mov mov arpl sbb sti mov adc es xchg repz loop outsl fnsetpm(287 mov lret adc cmp dec push cli shrl cmp xor dec push into das cmp jg mov imul sub jge jns jmp jns mov mov fsts (bad) out roll sbb movsb loop jae push jae lcall loopne in jbe insb mov inc hlt lahf fnstenv sahf mov cmc push andl xchg into (bad) loop xor fisttp inc mov dec popa stc xchg and cwtl loopne je mov mov or and repz mov jb ret mov push sbb and pop pusha fstpt xor les fldt cmpsb push cli and int shrl inc imul psubd sub into fwait ljmp dec sbb or adc test fcmovu push test or cli or mov mov sbb int3 xchg test bound ja push test sub push loope ret arpl push fiadd adc fistl inc and sub bound xor push shr jne std or data16 repz popa mov bound sbb sbb inc mov push hlt ret or icebp lods fild test jg cltd jg nop jo xchg data16 int (bad) mov mov lods adc push mov int3 add movsl dec add stos in movl fisttpl mov push scas (bad) and jns popa imul and frstor push insl fwait outsb insl out out stc into movl aas mov dec adc mov mov cmp fldcw cli mov or or sub mov shr sub call stc pop ret push cld xor (bad) inc jb and adc push mov pop repz sarl lds sbb insl (bad) pop into cmp scas test sub dec jle les mov imul cmpb dec fldcw in pop shrl aaa xor push xchg or icebp popf push shlb cmp je inc push add cmp jmpw in shl jge dec inc jae dec inc (bad) (bad) divb ljmp cmpsb jbe lret jl in pusha jecxz cwtl das repnz aam mov fmuls cmp jl insl jge cmpb adc out push and lea jae mov push pushf pushf xchg jmp xchg push or (bad) inc mov adc sbb push mov mov cltd imul or inc xchg xlat dec and (bad) pop popa xchg dec inc and inc shrl gs mov shrb loop cli cmpsl sub inc bound (bad) ficom mov shl lcall ljmp mov cwtl jg jp push pop xlat jno ljmp push pop add dec push sbb ret daa mov rolb mov cmp pusha mov stos js jle cmpsb mov je std mov adc xor mov fwait push push adc subl jp cmp sahf fldl pop in dec mov dec cwtl imul loope xchg test mov sbb push inc dec mov (bad) (bad) fdivr xor xor pop sbb dec popa stc xchg icebp cmp cmp and pop (bad) das test jne adc sub lock mov mov lret sub xor cmpsl (bad) fistpll gs in and pusha sti icebp jns pop cltd xchg cli loopne lahf add mov adc jno,pt leave repz dec pop lcall mov push (bad) stos dec ret daa fdivs push shlb (bad) imul jl push popa fcoms mov and xchg push leave repz pushl stc pushf cmpb call jmp mov lea mov pushf movb pusha cmp pushl mov lea jbe jmp lea ja push stc imul bt add push pusha pushf lea jmp mov push inc (bad) pop stos cwtl hlt lret int3 es cli in (bad) sbb pop mov mov xor pop int3 adc dec mov test pusha cmc xchg inc bnd test sti inc andb add mov and lods pop (bad) jmp jl xchg fistpll and cmp sbb push sub cmp cmpsb xchg (bad) int fimull and inc push cmp jmp loop insl shufps clc inc fdivl push rol xchg cld dec fsubs imul mov add push stc push out dec or inc test or sbb lds icebp fs mov push inc enter push in movsb adc mov add push stos sub movsb fiaddl jb dec cmp adc pop std std xchg push out xor xlat jp test sub aad adc fcomps dec ja xlat aas scas out stos adc mov lcall int ret in mov and dec cltd sbb cmpsl test (bad) push aam jle out jae lahf inc dec xchg xlat and call sbb cmpsl imul (bad) in pop jne add sub repz mov add mov xor dec jg cld push mov jmp hlt push aas ljmp outsb mov les push inc scas in aam ret xchg popa mov popa aaa lahf xchg add in (bad) cmp add inc cmpsb aas adc subl dec and dec lahf (bad) lock frstor lds popw jp test cwtl cmp xor push test xor ds ljmp cmp push call jnp (bad) pop subl sub scas and xchg pusha mov cmp push lock sbb push fs pushf add fisttpl pushf jmp pop in mov mov mov es dec js ja sub loopne xor jbe push pusha movl pushl call inc inc push inc push dec xor cs insb add add jmp cvttss2si out inc cmpsb int mov dec xchg xchg enter pop mov sarl in adc (bad) xor out jp and push pusha repz rcl mov push fdivl or iret pop (bad) popa dec test pop jg fstpl mov mov mov sbb jge cwtl jge ljmp inc sub inc inc sub (bad) lahf cmp jo repnz xlat inc outsl fcompl popa dec repnz inc inc aam sbb shll mov fidivl xor and icebp xor sbb jle cmp pusha clc cmp jmp bswap shr dec or test mov bsf or inc add jmp xor clc out inc in jne imul popf xchg mov xor push sbb imul (bad) fsubr std aad outsl clc sub lret test out int fst in sbb inc jge std add push fldcw mov push in fsubrs int3 push data16 into repz adc add jecxz jns lea push aam loop leave popa arpl jo dec and fnsave mov sarb sbb in sub mov lock out es or (bad) and mov xchg adc inc mov xchg mov adc in pop sahf ss dec mov inc and push adc mov mov mov pushl mov movw pushl ret lea jne cmp setg xor lea shl jmp lea je push pushf bsr add shrd clc mov mov add jmp lds pop loopne inc dec and push xchg mov cmpsl roll push sbb jo and inc pop mov cli sub mov xor loope xor push mov lods push cmpl dec les out or mov imul mov movsl faddl cmp cs push mov rol lret inc iret sbb mov push push xchg sbbl inc ror jecxz shll (bad) mov and push inc fsubp jns outsl lds in fwait and pop and mov cmpsb or inc xor sub cmp clc call push add lds stos into inc ret push mov pop xchg daa pop ret adc pop xlat aaa sbb aas pop leave fmuls je add jge aas lods pop jmp mov jge inc scas xchg (bad) mov add popa or sbb sbb pop xor jo icebp mov mov mov mov pop pop iret das cmp imul adc out (bad) es fnstcw gs xchg pusha dec adc jmp mov dec cmpsl ds aas mov lods rclb adc cmp jns fs or and pop mov push inc pop adc cmpsb mov and mov mov mov andl test insb cli rclb jnp loop add sub jb lea sti addr16 mov fidiv lea repnz in idivl sub (bad) leave out stos jmp je xor mov dec and fmuls mov lahf test js pop jbe iret cmc loop sub shlb xchg aad arpl decl cmp cwtl movsb pop mov push mov (bad) lods sbb in mov mov pop lds add pop sti and loop inc xchg sub js jl jbe (bad) mulb push cld push lods lods cli sub mov sub stos arpl cmp inc (bad) pop dec pop (bad) inc xchg push mov clc jg jns add movsb cmp outsb (bad) insb push and jns adc (bad) loopne mov inc (bad) mov insb mov and insl dec sarl rol cmc je out (bad) in stos mov mull jnp repnz pop mov icebp cmp cmpsl push (bad) aas pop (bad) push pop cmp inc push pop and xchg sub outsl add lods gs jp shl std sub fistl adc cmp js dec bound stos movsl fcmovne inc inc mov push dec inc dec xor cs insb add cmp pushf push push lea jb btc xchg shr xadd mov bts shld bsr mov jmp or mov neg setbe shld cmp sub shld sar push movzbw rol bt push aad btr (bad) hlt pop push aas lea pushf mov adc test bsf sar mov test push push pushf test pusha push lea je lea dec mov xor (bad) testb (bad) shr cmp call movb movb pushl popl push pushf movb pushl ret push push mov push mov pushf lea jmp inc and in push inc jecxz fs cwtl (bad) xor rorl pop popf cmp andl jns inc fs dec sbb sub mov cld (bad) sbb jp hlt dec pop xor jnp pop mov jge inc dec mov xchg test xlat pop jb fisubrl test sub dec xchg dec ret cmp sbb pop jmp jb or pop cwtl lea ja pushf imul cmc cmp add pushf lea jmp xor cmc or mov sar cmc pushf sar add shl adc mov pushl jmp adc adc in push inc fwait lock jl jl push cli add xor pop and jnp and mov (bad) pop sbb adc ss jle jo adc int3 call xchg daa ss scas ss jno fnstcw fwait push inc hlt in jle add cmp inc iret lcall dec stc or cmp pushf insl (bad) add cmp pop (bad) mov push inc mov add test movsl (bad) or or push push scas out aad mov loope movsb lret mov test push fs sub (bad) repnz jno mov cmp mov orl and or inc (bad) lds stos ss or out sub stos lret dec inc loopne out pusha push ret inc jne dec sub rcrl fldt sbb scas xor cli scas cmp int in mov ljmp mov stos jge popf out dec jecxz xor (bad) jne scas mov dec sahf pop xchg mov jl (bad) ljmp into mov or cmp std cmp push mov leave mov jnp out xchg sbb sarb rorb adc lret xchg test jnp xor std mov mov std inc fwait xchg dec pushf out push inc ret cmp xor cmp insb mov xlat dec and arpl sbb imull cmp arpl aas fisub jbe adc subb popf addl cmpsl jae jne (bad) scas arpl daa xchg and ds insb push dec mov push adc cmpsb outsl xchg loopne mov and push sti push adc inc push (bad) scas ss clc add int3 aaa or mov inc imul push sub adc jge xchg faddl lcall mov notl out mov (bad) or mov fidivr popf xchg push popa fmulp outsb mov adc mov jge add mov js dec test jg lahf adc xchg call adc shr push inc mov ficompl xor cmp mov in cmpsl daa iret pop ret adcl xor sbb xchg stc push jmp pop push fcmovnbe or adc adc xor sub mov inc shrl cmpsl lcall or lret lds and movsl cmpsb mov bound test mov incl loopne loope and cmp cld inc xchg pop xchg mov and push ss adc lcall nop xlat and in pop jno cs mov iret mov popa adc push lds imul inc gs outsl fs gs popa outsb fs gs add scas push call jmp shl call cmp jmp cmc sub test stc mov cmp cmp jmp inc (bad) call call dec faddl in mov or add adc cmp lcall cli (bad) out aas iret mov jp push pop cli push ret mov roll stos sarl ret mov adc cmpsb xchg mov in dec iret jbe xchg jge or add mov inc and je movsb test push mov push ret cmpsb add push push in jge jg and outsl mov add dec inc rolb aam fiaddl push mov in sbb mov pushf sub and in repnz sbb inc (bad) sbb mov mov flds xchg jecxz inc mov flds pop and push sbb in decb in sub mov mov test gs out popa out and sti mov xor cld mov mov jge fbld jno dec popa sub xor clc outsl insb xchg bound mov add push jecxz mov cmc div push test movl mov hlt loop ss fisubr inc and xchg cltd and dec popa cld push sub jp nop mov and cs push arpl mov aas ror in pop aad sub lea mov bswap sub push movzbw mov adc adc btc push cmc add push dec inc push mov add setb xor push not (bad) icebp mov cmp mov movsbw mov call push stos push mov pushl lea jmp sbb seta pushl lea mov lahf mov lea jge not jmp cmp movsbw mov sar sub (bad) idivb mov pushf bt sub jmp lea jo lea pusha pusha lea call call ds jmp inc movsb sub das roll jnp dec push cltd popa leave and (bad) mov cs clc out mov (bad) xor in push out sbb sub pop fprem inc (bad) lahf jnp aaa lahf xchg jae pop mov pop je mov pop inc stos push mov cmc and ret xor adc mov dec int mov out cmpsw (bad) movl jmp loope lret push push mov and imul mov mov hlt jne add test mov out lds mov out (bad) mov mov lods popa dec data16 mov xchg adc push inc dec mov (bad) mov push ss xor sbb sub fimull mov out jp add push test push adc xchg pop push jmp push lret repz dec mov out aaa (bad) xor xor pop repz jae lret enter bound dec test xchg fs (bad) push sub (bad) in fsts clc adc sahf outsb mov adc adc mov test andl jnp mov xchg xchg (bad) dec cmp mov dec test xor push dec xchg sbb and pop pop insl dec add int3 mov xchg cmp test push ljmp fidiv mov jg dec data16 adc sbb stc xor decb jmp call stc test pushl popl test cmp pushf push jmp in mov test add jmp scas push ret xchg in mov dec push dec mov inc push pop pop and scas js cmpb cmc ja adc fld1 jae insb xchg inc (bad) lahf hlt push fsubrl jp outsb cwtl ret es aas jmp inc lahf insb pop jmp in out neg pop fstps out pop jne cltd xlat (bad) jb insb popa aaa les push sub gs fstps dec shr mov aad out test lods push orl cmp dec (bad) jle out mov lret icebp push cmc mov gs insl call push inc push xor cs insb add inc popl cli inc fnop push or repnz aas mov out xchg outsb inc sub int3 data16 pop jno push dec rcrl and jnp cmp sub cwtl mov loopne inc jp push inc dec mov pop add sbb out mov addb adc mov mov fnstenv or (bad) xchg pop and enter sbbl pop push cmp mov mov push ret repnz daa out xor out or lret ds push xor out sbb mov xor lds into je dec icebp xlat or or push cmc loope out add into js in rcrl (bad) sti inc mov jl decb jge pushl lcall adc dec jp add fdiv divb mov lods xor jo push sbb add icebp cmc sahf xor xadd xor (bad) push inc adc fwait lret pop xchg jnp pop cmpsl push sarl mov sbb adc inc inc mov jmp jp lret sub cli divb pushf (bad) rolb icebp mov add lods or pop (bad) (bad) repz sbb sbb cs outsb and jg lahf dec pop mov mov bound jnp rcll and into lea decl mov xlat pop pop imul cmc daa lcall dec jg sbb mov fcoml lret xor cmpsb inc mov sub (bad) jmp push jmp movb movl pushf movw mov pushl movl push movb pushf push lea jmp movzwl add bsf data16 mull jp clc clc add test jmp pushf movb mov pushf call cld loopne sbb push inc inc sub leave cltd cmpsl iret adc cltd out movsl popa test mov roll jne xlat aaa pop xchg fistpl lods lock (bad) pop mov or adc lret pusha je add in sbb sub jecxz lahf push stos movsl negl test push mov std inc insl scas ds (bad) (bad) and xchg cli jge mov daa lcall movsb xchg shrl loopne xor or loopne sbb test in mov mov pop fiadd cltd pop xor push lds ss jmp lea jge mov pushf lea jmp xor mov movb repnz call cmp call jmp jmp and push lods sub outsb mov shl ss hlt xchg (bad) xor test inc lds out iret fsubr ss pop rcll jns adcl mov pop jmp lods jb es push jg cmp inc mov fidivl inc xchg aam inc mov inc add out jp (bad) js cmp jmp mov mov out inc lds pop cli adc pop add ds addr16 sbbb fwait out jl vpsrld and and aas xchg xchg push sbb push xchg in fs xor pop xor and jb adc cmp call lods push xchg push inc les cmp movsl fisttpll mov add rcrl addr16 cmc xchg jne sbb ret data16 jle (bad) (bad) xchg push or cmp aas fisubr cmp pusha sub cmp or out xchg sub mov test or aam lock xchg repnz sbb add div and xchg mov roll push or ja outsb mov xchg pminsw les push push jge jp rcrb test (bad) hlt adc aaa xchg xchg and adc (bad) jmp leave xchg mov push cmp arpl lods pop mov and xchg and sub rcl sbb xor clc add stc sub add rcl mov xor mov cmc push pushl test repnz call mov mov pusha lea jb xchg pusha jmp pop cwtl clc cmp bswap pusha inc sbb not not movsbw lea push setge mov push mov not jmp shr mov pusha cmc test cmpb call movzbl mov clc add shrd rol or add movzbw mov movb shr cmc test cmp call cmpb pushf jmp sbb repz inc cmp (bad) out dec (bad) xor push (bad) cld sbb mov in in adc xor add push mov cmp inc (bad) inc jno cmp mov (bad) xchg inc lods arpl out sbb sub jb (bad) or bound mov pop push repz negb inc push or into aad adc popa movsb repz jb stos sbb mov cmp mov stos es mov (bad) cmp adc popf lahf cmp pop inc (bad) loope leave jnp out ret xchg movl xor pop push sbb rcr pusha mov push inc ljmp mov and sbb (bad) jo sbb add add sub and push pop clc pop enter rcr inc fidivl adc mov add inc outsb push sub cwtl mov daa mov and xchg dec add push hlt pop xlat sub (bad) xlat stc push mov sahf lahf arpl mov iret jge mov lcall jmp movsl xchg pop pop cmp and rcrl or sub xor test jge jo inc pop push cli cmp mov mov sbb mov jmp mov imul xchg fdivr pop push into mov sub pushf pushf inc pushf xor jmp push dec dec push inc push dec cs insb add adc (bad) dec jae jmp imul dec pushf pop sub scas mov xor dec inc cmp sub lea add and pop cwtl (bad) or popa clc mov jg add add mov dec inc out xor ficoml pop leave nop rorb push scas and push cmc dec push mov addr16 sarb xlat xchg shlb lods sub (bad) adc sbb shlb pop scas pushl mov jle cli xor adc sti dec or cmp push dec movsb cmp push adc xchg mov push (bad) push sahf dec std mov mov jmp lea ja not rol sar sub lea dec jmp push in xor decb inc jb mov aad mov xor daa das push lds mov jbe fcomi lahf outsl iret aas mov xor mov add and sbb cli push leave mov call imul sti xor xchg pusha pop mov sbb mov or (bad) jno scas out xchg or movsl std xor push jae xor aaa xchg pop hlt pop fistp (bad) leave clc insb jo pop arpl fs hlt lahf jnp mov push push mov adc push pushf or mov jmp push lea jne setno setge jmp mov pusha pushl pushf pushl ret mov pushf movl push call pushl mov movb lea call jmp pushl pusha jmp mov movb lea je movzbl movzbw lea push lea call pusha adc call pusha lea call pusha movw mov adc mov pushf jmp popa push aaa mov xchg push idiv mov test dec popf lea jge outsl iret inc mov xor and pop jle hlt add sub push pop jle or nop xchg test cmp leave mov mov (bad) jg rclb in jns in and test hlt jns (bad) addr16 pop jno push push and dec ja inc in or pushf mov leave movsb test inc ret adc loop mov dec add aad lret inc cmp pop inc sub (bad) int inc xchg outsl add imul push inc mov sbb es js ja in sbb mov test jge sub and daa cmpsl lret xchg sbb movsb or cmpsb scas jl push (bad) incb or lds push xchg dec mov xor (bad) insl out andl cli jbe enter or pop sub (bad) (bad) aad out add jp jne outsb xchg fdivrl inc ds mov (bad) int3 test jle cmp fdivr decl add fistp (bad) (bad) inc rcl cmp mov bt cmp test cmc repnz push call sub arpl (bad) push pop xor js ds fisubl es mov out stc insl repz sub mov nop dec imul lahf loop jge mov mov daa ja ljmp enter push rcrb dec add inc insl mov das and pusha mov jecxz xor ret push add mov sbb jno and sbbl out push pop inc lret cmpsb sbb push push mov or adc or aaa dec xchg jge pusha pushf mov call pusha movb lea jne bswap mov cwtl not movb movsbw movsbw movsbl jmp inc iret fadds cli push inc pop call and lea out jbe sbb cmc push pop jmp fisub jp cmc cwtl xchg loop dec xchg lahf div xchg xorl int mov test sub les hlt pusha pushf and in test lahf movsl xchg std or push faddl jns mov mov lahf out push ficoml jge jp mov jg rorb or mov imul pusha adc pop ljmp cmc (bad) mov or imul or (bad) cmp sub sub sbb push jecxz out rclb into insl cmc cwtl retw dec leave add dec decb inc out outsb fldenv mov cmp push push xchg xchg xchg push add sbb clts test push mov jae adc cmp push pusha mov jmp inc movb push inc xchg xor icebp adc xor dec std xchg repz lret sbb sub es adc jno inc ret mov jno cmp inc dec ds stos sub int movsl jne imul push pusha pop out cli stc in pop adc imul outsb pop fdivs loopne jecxz enter xor jo fsubs sub and aas lods sub xor inc dec push mov cwtl push hlt push scas test cwtl adc aad mov jl add jns fnstenv sbb mov add xchg out test test dec inc dec xchg jno mov fisttpl aas inc mov mov js frstor jno lcall push jmp mov mov fisub cmp js loop data16 (bad) sub aad pop mov ret sub loope jl movsb data16 xor test scas pop sub lcall fidivr xchg pop leave jo inc mov enter or sub adc outsl mov iret (bad) aam ficompl (bad) cmp loope dec xor xor or aas out leave cmc push std sub lahf and stos popa and nop dec movsl fisubrl xchg sahf mov je ds lahf imul stos in cli xchg mov mov inc mov pop mov adc andb pop ficompl out fidiv xchg pusha pop cwtl xchg cmpsb push (bad) xor (bad) sti sbb sbb mov dec xor imul cmp lret jp cli jb or in mov push aad cmp mov dec test cmp push add pop push push mov mov mov shl lea call adc sub jne mov sub pop pop ret repnz push pushl lea jne ror jmp mov push lea ja call cmc jmp jmp mov lea jmp shl clc cmp add not pushl pop cwtl lea call mov cmovb outsl (bad) bndstx mov adc lods lds loope fist rcrb mov push hlt repnz (bad) sub push movsb outsb fcom (bad) repz lcall adc insb cmc inc inc mov and sti fstpt xor adc sbb mov iret xor stos je add lea mov adc and push mov rorl jl icebp loope jnp mov mov adc pop dec js pushf push dec mov jnp lahf std lcall shrl push enter lcall push lods aaa xchg out inc iret (bad) push xchg dec gs pop and icebp adc and and dec dec or inc and fs lea jmp rolb repnz cmovb nop push int3 push xorb pop aas xchg lret sbb or (bad) fmuls or push imul dec jno sti mov outsl stos jmp (bad) xchg (bad) daa aaa insl popf gs or sub dec push repz push dec add ja cmc roll sbb adc jae or bound mov jno les inc test mov and fldenv jns add cld or movsb shll fsubs xlat dec or bound outsl mov (bad) sti sahf int3 xor xor stc xchg stos addr16 (bad) mov add (bad) pop xchg adc out je jbe imul push clc push and movsl dec push pop xor push outsb int3 ss and or sbb scas xchg xlat fidivr imul cli xor lock dec hlt push shlb fbld lcall inc (bad) aas aaa push punpckldq int3 sbb das sub and xor or cmp xchg sbb adc aaa xchg out insl mov and test mov mov pop cwtl not mov bswap pop mov call lea mov pushf pushl movw mov jmp inc pop test cmovb lea stc scas push xor (bad) std jge in adc inc cld cmp fbld mov fsts cmc sub fild test sbb mov stc push cmp mov or iret mov dec test add jmp xor scas push lods les das shrl in jnp into jl mov imul and jmp imul imul and cmc lea in inc enter sub mov cmpsl adc pop mov mov adc daa dec fcoml add mov sahf dec dec stos or in arpl (bad) scas adc icebp push lds mov add inc xlat fdivrs js faddl data16 scas mov scas and sbb inc xchg movsl dec fstps or push jns mov dec scas and lds lock cmpb (bad) xor (bad) xor mov inc stos mov and (bad) call lret call out or es sbb or dec mov cltd lcall rorb fs adc lcall adc loope ljmp or cs jle test mov movsl aas (bad) ljmp aas jne add xchg add fimull int setge or mov pop dec mov or rorl arpl mov lcall push jle xor xor push mov aaa aad cmpsl mov xchg jle pextrw inc push jne and lret dec or jo mov fisubr mov dec into dec inc xor (bad) out pushf test shll loope fistpl sbb test insb jecxz orb in insb lahf lods xchg imul mov add ds dec mov cmp outsl fadd (bad) jb and push push in dec lea call shrd rol cmp stc add cmc pop adc lahf aam lea pop cmc cmp jo sbb push lea push pushf lea jmp sahf jl movl xor push ret jae (bad) nop push sub test inc test rolb hlt mov inc push int in fdivr loop lock xchg push std add sbb dec and pop fwait cmp pushf push mov xchg je jnp add push lahf xchg movsb lea aas or push cmpsb jo adc data16 xchg imul fmuls xor push xchg mov (bad) mov add (bad) xchg adc iret mov add and lret sahf sbb add insl push lock mov mov lea call pusha jmp fbstp inc sahf add inc sarl mov ficompl pop push outsb int3 pop or cmp mov call add and repz or mov cmpsb mov mov popf sub jo jp cmpl jp (bad) xor mov sbb popf fbstp pop mov (bad) lret leave adc xor adc sahf js push sbb and pop ljmp enter add inc and and jo jg hlt push dec mov add fs (bad) jmp stc mov pusha call inc setno neg pushf pusha ror call bt clc test xchg cmp mov call bsf bts rol mov jmp call shld aam call movw movw mov call pushf popl jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call mov pushf jmp push pushf pushf push mov pushl ret cmp bt sub push push jmp xchg cld pop mov pushf cld lea call jmp jmp cmp sub call push push pusha pusha call push rol mov cmp cmc mov pushl call mov pushl mov mov pushf mov pushf lea jmp pushf pushf popl pushf jmp call movsbw bswap mov lea mov js pusha lea jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp mov mov pushf mov pusha mov pushf pushf jmp daa mov dec mov pusha jmp mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call add pusha movb pushf lea jmp call mov movw pushf lea jmp pusha pusha lea movl jmp push xchg lea mov mov jmp bsr inc mov test add pusha pushf pusha lea jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp sub jmp mov pushf jmp push call jmp or mov push pusha lea je call call adc push jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret mov push mov pushf lea jmp shrd inc mov jmp bt xor push jmp jmp jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp pusha sub jmp ror mov movsbw pushf mov movb pushf mov movb pushf call jmp pusha pushf pusha pushf popl call push lea jp pushf pushf pushf pusha jmp shld mov movzbl mov bt stc pushf call push mov jmp pusha mov call pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp pushf pushl pusha mov jmp call push push movb movb mov pushl mov push jmp mov pushl mov push pushf mov push pusha lea jmp pusha mov movb mov mov pushf lea jmp mov push push mov movb lea jmp bts shr pusha mov cmc bt sub mov test clc call call mov pusha jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp pushl popl pushf pusha push pushf lea jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp pusha pusha pushl popl push movw movw lea jmp movw jmp btc mov call mov stc call call push push mov push pushf lea jmp or movl stc xor lea jae pushf inc call movw mov pushl mov pushl lea jmp pushf lea jnp push pusha pushl push pushl ret bt shl sub mov add shr add mov cmc call call call call mov jmp push pusha mov pushl mov pusha mov jmp jmp call pushl popl pushf pushf lea jmp mov jmp xchg jmp cmp neg neg add sets xor rcr add rol dec add jmp add clc clc pusha shrd pushl mov call mov call mov movb push pushl pusha lea jmp movb call movb mov pusha pushl mov pushf call cmc movb rol push call add pushf mov mov pushl lea jmp jmp mov call mov pushf pushf push lea jmp mov push pushl mov pusha mov push jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call call push pushf mov pusha pushf mov jmp pushf popl pushf pushl popl pushl lea jmp inc pushf clc bt add jmp mov call pushf pushl call mov call bsr neg adc notl dec mov cmc call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call pushf mov call mov bt or movb lea je stc push pusha pusha xor pushf jmp sar add xor bswap rol movzbw mov call divl push mov push mov push jmp mov push mov lea jmp jmp movb mov pusha push lea jmp lea jns pushf mov call clc pushf clc add jmp cmp sub call mov not mov pusha mov jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp add cmp cmc std pushl popf push lea jmp jne push mov pushf lea jnp pusha movb mov mov jmp pusha mov jmp pushf pushf inc pusha decl movw pushf pushl jmp mov call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp mov call movw mov pushf pushf pushf popl jmp call mov pushl lea jmp bswap mov neg adc sbb mov pusha shr dec call pushf pushf mov pushf lea jmp lea jne stc push stc sub pushf call call lea pushf movb pushl push mov pushl mov lea jmp mov pushf jmp jmp push pushl mov pushl pushl pusha pushl ret cmc cmp shr jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp shl pusha mov push mov mov call jmp mov mov ror (bad) repnz call add add call jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov pusha call mov push pushl ret call push mov pusha mov push jmp cmp sub call pushf mov movb pushl pushf lea jmp pushf neg cmc call mov call pusha push movl call add pusha pushf mov movl call movl jmp cmc cmp add call push push inc jmp jmp mov push push jmp push push push pusha mov movb pusha lea jmp mov pushf jmp mov push call movl jmp mov movb push lea jmp pusha mov call pushl mov pushf mov mov jmp push mov call mov inc clc pushf neg call pushf popl jmp mov pushf mov mov jmp call movb pusha jmp xor neg movzbl cmc call pushf mov pusha pusha mov lea jmp ror aad xadd ror mov adc bts jmp movb jmp stc cmp mov sub jmp pusha push pushf mov mov push call call mov pushf pushl pusha pushl lea jmp jmp jmp pushl popl mov pushf pushf lea jmp mov jmp pushf popl pusha mov pushl popl push push push pushf lea jmp call pushf jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov pushl pushl jmp mov pushf lea jmp movb mov jmp mov call call mov call mov pushf lea jmp mov movb push push pushf lea jmp push mov pushf push push mov call movzbw mov cmc (bad) icebp add loope dec add mov or lds lea jno mov pushf lea jmp push push movb pushf mov lea ja pushf mov pushf push jmp inc neg mov cmp clc add push pushf pusha jmp pushf movb mov movb pushl lea jmp pushl popl push pusha push movw lea jmp call lea jbe mov pushf lea jmp pushf mov push lea jmp movsl jmp mov push fidivl lock movsb in mov scas fdivs mov mov int3 repz jge mov mov fnstenv push fidivl adc mov cmpsl loopne decl fdivs out mov or mov jo mov dec hlt mov inc icebp mov sub mov scas fdivs push fdivs test mov scas fdivs sbb mov push fdivs push fidivl scas fdivs movsb in mov dec divl dec hlt mov out mov add mov sub mov mov in mov mov mov jge mov jge mov push divl scas fdivs adc mov jmp mov dec repnz or mov scas fnstenv mov mov xor mov lcall push repz imul mov mov hlt mov sbb mov imul mov jge mov imul mov movsb in mov mov in mov mov mov test mov imul mov mov jmp pushl mov push hlt mov lcall lcall (bad) mov ret aad pushl (bad) mov lods (bad) mov mov mov mov call mov push repz mov mov scas fdivs scas fdivs pop (bad) mov lock or mov scas fnstenv push repz (bad) jmp mov push fdivs lock (bad) jmp mov pop (bad) mov push (bad) mov outsl (bad) mov scas fnstenv lock inc jmp mov push repz mov jmp inc jmp mov scas fdivs sub mov movsl jmp mov jo mov scas fnstenv xor mov jbe mov ret aad dec hlt mov int mov movsb in mov dec divl (bad) repnz in mov outsl (bad) mov pop (bad) mov outsl (bad) mov jge mov (bad) repnz out (bad) mov jo mov pop (bad) mov sub mov push fdivs scas fnstenv out mov or mov int mov jmp mov imul mov lods (bad) mov out mov or mov push (bad) mov inc loop call mov pop in mov jge mov dec divl push repz pop (bad) mov jge mov jo mov dec hlt mov add mov sub mov jmp mov or mov lock ljmp aad ljmp mov test mov or mov dec repnz adc mov mov jmp mov sub mov imul mov out mov mov lock sbb mov sbb mov cmpsl loopne (bad) out (bad) mov push fidivl push fidivl sbb mov mov call mov in mov lcall decl call mov or mov push fdivs scas fnstenv adc mov mov loope lcall loopne call mov pop (bad) mov scas fdivs imul mov lcall lcall fdivs inc icebp mov pop (bad) mov movsb in mov xor mov (bad) repnz out mov (bad) jmp mov test mov int3 repz mov mov pusha mov push mov mov pushf mov call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp pushf jmp movw movb movl pusha jmp pushf push pushl jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp pusha mov pushl jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp pushf mov pushl pushf popl pusha jmp pushf stc sub call mov pushf lea jmp btc btr cltd mov btc pop inc jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp pushf pusha mov movl push movw lea jmp call jmp pushf lea jmp push jmp ror movb jmp pusha mov call call pusha mov call push pushl popl movb pushf movl push lea jmp inc clc shr mov sbb call call mov push movb push lea jmp push call mov pushf mov lea jmp jmp pushf mov jmp pushl popl movw lea jmp jmp mov cld call lea jge push mov mov jmp clc test btr rdtsc call push movsbw pop lea push jmp cmp sub pushl cmp push cmc sub call add movw pushf pushf pushf popl pushf movw call call mov push push lea jmp and lea jno push movb pushf mov call sub stc sub jo push mov shr pusha call call pushf xchg jmp dec btc or mov push add mov clc add jmp jmp call mov pusha jmp pushf pusha mov mov pushf pushf lea jmp mov pushf pusha pushf pushf popl movb jmp call jmp pushl push movw pushl popl mov movb lea jmp pushf popl call call jmp mov call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call push mov push mov lea jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp call inc push push mov pushf lea jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov jmp clc lea jno add pusha jmp lea jo push pushf mov jmp movb jmp mov mov push pushl movb lea jmp mov mov push pushf lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp mov pushf lea jmp push mov mov mov pushf mov pushf mov call movl pushl popl pusha pushf push lea jmp stc call sub cmc add jmp cmp mov cmp add stc clc stc movl mov movb sub call lea jne push push mov pushl push pushf lea jmp call pushl popl push pushf lea jmp lea jne or jmp test stc bt sub call push mov pushf pushl mov pushf pushf movb lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp bt xor mov push bt cmp bt sub jmp bt bswap lea jae stc xor bt pushf sub jmp pushl popl push pushl lea jmp jmp pushf popl push jmp jmp btr daa mov sub shr rcl mov call bswap add lea push pusha cmp jmp push movb call call pusha mov mov call push pushf pusha jmp btr dec shl bt mov stc test add call push pushf popl pusha mov mov pushl popl push lea jmp call mov pushl call call test pushf cmc jmp inc dec movsbw lea xor movzbl stc bt pusha call stc bt sub jmp jmp stc sub cmp jmp mov call movsbw mov pusha pushf mov jmp pushf mov mov mov pusha mov call rol movzbl push add pusha pushl inc call jmp call movl mov call pushf pushl popl pusha pushf push lea jmp call mov call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call mov pusha mov jmp jmp push mov pushf mov call mov pusha push lea jmp cmc jl daa not notl aas mov push stc test sub jmp clc pushf ror push mov lea mov call call pusha pushl mov jmp pusha clc mov bt clc clc push add movb call bt add mov push pushl movl mov push pushf mov lea jmp call movw pusha pushl popl push movw lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf push pushl popl pushf mov movb lea jmp rcl rol or mov bt pusha add mov pushf sub cmc pusha call push mov pushf pushl mov mov pusha pushf mov mov push jmp mov mov pusha pushf pushl ret bswap call or call mov pusha movb mov pushf pushf mov call bt ror bt clc cmp sub cmp test cmc mov bt sub jmp shrd not mov stc bt stc add pushf mov jmp movl mov jp pushf mov pusha jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call cmc pushl popl test call mov mov pushf mov pushl push pushl lea jmp pushf jmp jmp pusha mov push mov lea jmp pushf mov pusha lea jmp not clc bt not test pusha cmp and pushf movl jmp lea jne call cmc cmc add call call ror clc clc call mov push call push jmp add push push pushf call jmp test movzbl call mov pushf lea jmp movw pusha mov pushl movw movb lea jmp test xor test sub movb mov pushl movb lea jmp pusha xchg call pusha mov pusha mov pushl mov pushf mov movw push lea jmp pusha aam add mov pusha call call jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp mov push push movb lea jmp jmp push mov pushf call cmc xor stc stc mov bt test stc add pusha jmp xor cmp xor call cmp stc add pusha jmp jmp sub call push pushf mov pushf pushl ret call pushl add pushf lea jo push pushf mov mov lea jmp cwtl mov pushf mov mov pusha pusha mov push push lea jmp mov push movb lea jmp mov jmp mov pushf lea jns push jmp mov pushf pushf mov pushf pushf mov lea jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp ror add pusha mov mov call bt xor movl jmp mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp pushf pushf mov pushf push push lea jmp pushl lea jge push mov call mov pusha push push pushf mov call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp pushf pusha movw mov push mov jmp pushf mov jmp pushf call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp clc add push pushf clc neg call mov pusha pushf movw pushf lea jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp pushf lea jo popl pushf pusha movw lea jmp pushf jmp jmp neg shrd movzbl shrd sub jmp dec stc rcr ror btr lea jmp shld mov jmp pushf popl call movzbl lahf lahf mov call call pushf jmp pushf jmp shl bt shr pushf pushf bt call pushf mov pusha jmp add call mov jmp movb call pushf mov jmp jmp mov mov movb pushf jmp cmp shr pushf movb mov push pushf popl call not pusha cmp not push cmc sub jmp pushf pushl popl movl pushf movw pushl lea jmp pushl popl pushf push lea jmp add add and push das dec add add add imul and add mov 